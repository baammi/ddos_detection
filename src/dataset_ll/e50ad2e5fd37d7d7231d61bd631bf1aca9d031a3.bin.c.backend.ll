source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_d360.14 = constant i32 -382906384
@global_var_ff00.16 = constant i32 -481165275
@global_var_13718.17 = constant i32 -382909968
@global_var_18250.21 = global i32 0
@global_var_b428.27 = constant i32 -382906384
@global_var_b894.29 = constant i32 -382906384
@global_var_ab9c.31 = constant i32 -382906384
@global_var_a4c4.33 = constant i32 -382906384
@global_var_9da0.35 = constant i32 -382906384
@global_var_9574.37 = constant i32 -382906384
@global_var_8f14.39 = constant i32 -382906384
@global_var_884c.41 = constant i32 -382906384
@global_var_1a2d8.43 = global i32 0
@global_var_1a2e0.54 = global i32 0
@global_var_16fec.56 = constant i32 47
@global_var_18254.59 = global i32 0
@global_var_1a2dc.61 = global i32 0
@global_var_11a20.63 = constant i32 -382910336
@global_var_d1ec.65 = constant i32 -382910352
@global_var_e600.70 = constant i32 94384
@global_var_1a2e8.73 = local_unnamed_addr global i32 0
@global_var_1a2e6.74 = local_unnamed_addr global i32 0
@global_var_18258.76 = global i32 0
@global_var_16ff0.84 = constant i32 10
@global_var_11c54.90 = constant i32 -382910336
@global_var_16ff4.93 = constant i32 16777216
@global_var_18260.95 = global i32 0
@global_var_1826c.97 = global i32 0
@global_var_18264.99 = global i32 0
@global_var_18268.101 = global i32 0
@global_var_e0e8.110 = constant i32 -509607925
@global_var_1a2fc.112 = global i32 0
@global_var_182a4.114 = global i32 0
@global_var_18270.116 = global i32 0
@global_var_1829c.118 = global i32 0
@global_var_1a2f4.125 = global i32 0
@global_var_1a2f8.127 = global i32 0
@global_var_18276.130 = local_unnamed_addr global i32 0
@global_var_1827c.134 = local_unnamed_addr global i32 0
@global_var_18278.135 = local_unnamed_addr global i32 0
@global_var_1827d.136 = local_unnamed_addr global i32 0
@global_var_18296.139 = local_unnamed_addr global i32 0
@global_var_174cc.141 = constant i32 0
@global_var_17370.143 = constant [5 x i8] c"PMMV\00"
@global_var_17514.145 = constant [6 x i8] c"CFOKL\00"
@global_var_16ffc.147 = constant i32 387006810
@global_var_17004.149 = constant [6 x i8] c"TKXZT\00"
@global_var_1700c.151 = constant i32 437918234
@global_var_17014.153 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1701c.155 = constant [8 x i8] c"FGDCWNV\00"
@global_var_17024.157 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_17030.159 = constant i32 370216979
@global_var_17038.161 = constant i32 269555223
@global_var_17040.163 = constant [8 x i8] c"QWRRMPV\00"
@global_var_17598.165 = constant i32 370216979
@global_var_17048.167 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_17054.169 = constant i32 370216979
@global_var_1705c.171 = constant [5 x i8] c"WQGP\00"
@global_var_17064.173 = constant [5 x i8] c"RCQQ\00"
@global_var_1706c.175 = constant i32 1263486531
@global_var_171c0.177 = constant i32 320017171
@global_var_17078.179 = constant [9 x i8] c"QOACFOKL\00"
@global_var_17084.181 = constant i32 336860180
@global_var_1708c.183 = constant i32 324292169
@global_var_17094.185 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_170a4.187 = constant [7 x i8] c"OGKLQO\00"
@global_var_170ac.189 = constant [4 x i8] c"@WJ\00"
@global_var_170b0.190 = constant [7 x i8] c"RW@NKA\00"
@global_var_170b8.192 = constant [8 x i8] c"QGPTKAG\00"
@global_var_170c0.194 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_170cc.196 = constant [6 x i8] c"EWGQV\00"
@global_var_170d4.198 = constant i32 1263486531
@global_var_170dc.200 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_170ec.202 = constant [5 x i8] c"W@LV\00"
@global_var_170f4.204 = constant i32 324292169
@global_var_170fc.206 = constant i32 390551160
@global_var_17104.208 = constant i32 387009354
@global_var_1710c.210 = constant [6 x i8] c"HT@XF\00"
@global_var_17114.212 = constant [5 x i8] c"CLIM\00"
@global_var_1711c.214 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_17124.216 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_17130.218 = constant i32 1867011861
@global_var_17140.220 = constant i32 1867011861
@global_var_17150.222 = constant [7 x i8] c"Q[QVGO\00"
@global_var_17158.224 = constant [5 x i8] c"KIU@\00"
@global_var_17160.226 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1716c.228 = constant [8 x i8] c"PGCNVGI\00"
@global_var_17174.230 = constant i32 303174162
@global_var_17180.232 = constant i32 303174162
@global_var_17188.234 = constant i32 320017171
@global_var_17190.236 = constant i32 1263486531
@global_var_17028.238 = constant [5 x i8] c"VGAJ\00"
@global_var_1719c.240 = constant i32 454761243
@global_var_171a8.242 = constant [6 x i8] c"oGKLQ\00"
@global_var_171b0.244 = constant [4 x i8] c"hta\00"
@global_var_171b4.246 = constant i32 319820054
@global_var_171bc.248 = constant i32 320017171
@global_var_171c8.250 = constant [7 x i8] c"WVQVCP\00"
@global_var_171d0.252 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_171dc.254 = constant i32 1263486531
@global_var_171e4.256 = constant i32 303059531
@global_var_171ec.258 = constant i32 303125067
@global_var_171f4.260 = constant i32 303452747
@global_var_171fc.262 = constant [7 x i8] c"@KLVGA\00"
@global_var_17204.264 = constant [8 x i8] c"VQWLCOK\00"
@global_var_1720c.266 = constant i32 323043395
@global_var_17214.268 = constant i32 319951888
@global_var_1721c.270 = constant [7 x i8] c"Q[LLGV\00"
@global_var_17224.272 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_17230.274 = constant [6 x i8] c"SWQGP\00"
@global_var_17328.276 = constant i32 1118227
@global_var_17238.278 = constant i32 370216979
@global_var_17240.280 = constant [8 x i8] c"oCLCEGP\00"
@global_var_17248.282 = constant [4 x i8] c"CFO\00"
@global_var_1724c.284 = constant [8 x i8] c"OCLCEGP\00"
@global_var_17254.286 = constant [7 x i8] c"DPKGLF\00"
@global_var_1725c.288 = constant [4 x i8] c"CRA\00"
@global_var_17260.290 = constant i32 1263421261
@global_var_1726c.292 = constant [5 x i8] c"VKLK\00"
@global_var_17274.294 = constant [7 x i8] c"CQAGLF\00"
@global_var_1727c.296 = constant i32 1265504102
@global_var_17284.298 = constant [6 x i8] c"FNKLI\00"
@global_var_1728c.300 = constant [6 x i8] c"NMEKL\00"
@global_var_17294.302 = constant i32 1296912387
@global_var_1729c.304 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_172a8.306 = constant [7 x i8] c"PMWVGP\00"
@global_var_172b0.308 = constant [8 x i8] c"LGVMRKC\00"
@global_var_172b8.310 = constant [7 x i8] c"Q[QCFO\00"
@global_var_172c0.312 = constant [8 x i8] c"CLKAWQV\00"
@global_var_172c8.314 = constant [6 x i8] c"FG@WE\00"
@global_var_172d0.316 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_172dc.318 = constant [5 x i8] c"GAJM\00"
@global_var_172e4.320 = constant [5 x i8] c"FKCE\00"
@global_var_172ec.322 = constant [7 x i8] c"QUKVAJ\00"
@global_var_172bc.324 = constant [3 x i8] c"FO\00"
@global_var_172f4.326 = constant [7 x i8] c"VGNLGV\00"
@global_var_172fc.328 = constant i32 370216979
@global_var_17308.330 = constant [5 x i8] c"VMMP\00"
@global_var_17310.332 = constant [7 x i8] c"ACNTKL\00"
@global_var_17318.334 = constant i32 370216979
@global_var_17324.336 = constant i32 1447906640
@global_var_1732c.338 = constant i32 1447512643
@global_var_17338.340 = constant i32 454302484
@global_var_17340.342 = constant i32 387400530
@global_var_1734c.344 = constant i32 319885331
@global_var_17354.346 = constant i32 1986882928
@global_var_1735c.348 = constant [7 x i8] c"CNRKLG\00"
@global_var_17364.350 = constant i32 457659992
@global_var_1736c.352 = constant i32 303043392
@global_var_17378.354 = constant [9 x i8] c"rcqqumpf\00"
@global_var_17384.356 = constant [6 x i8] c"cfokl\00"
@global_var_1738c.358 = constant [8 x i8] c"LGVEGCP\00"
@global_var_17394.360 = constant i32 303257172
@global_var_1739c.362 = constant [4 x i8] c"K@O\00"
@global_var_173a0.364 = constant [7 x i8] c"T[CVVC\00"
@global_var_173a8.366 = constant [6 x i8] c"cFOKL\00"
@global_var_173b0.368 = constant i32 373380675
@global_var_173b8.370 = constant [7 x i8] c"OKAPMQ\00"
@global_var_173c0.372 = constant [6 x i8] c"QGVWR\00"
@global_var_173c8.374 = constant [8 x i8] c"AMOACQV\00"
@global_var_173d0.376 = constant [4 x i8] c"RMQ\00"
@global_var_173d4.378 = constant [4 x i8] c"UUU\00"
@global_var_173d8.380 = constant i32 303176208
@global_var_173e0.382 = constant [5 x i8] c"w`lv\00"
@global_var_173e8.384 = constant [7 x i8] c"LGVOCL\00"
@global_var_173f0.386 = constant [6 x i8] c"Cfokl\00"
@global_var_173f8.388 = constant [7 x i8] c"FCGOML\00"
@global_var_17400.390 = constant [5 x i8] c"FGOM\00"
@global_var_17408.392 = constant [6 x i8] c"CPPKQ\00"
@global_var_17410.394 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_17418.396 = constant [7 x i8] c"ANKGLV\00"
@global_var_17420.398 = constant [6 x i8] c"AKQAM\00"
@global_var_17428.400 = constant [6 x i8] c"akqam\00"
@global_var_17430.402 = constant [6 x i8] c"QWRGP\00"
@global_var_17438.404 = constant [5 x i8] c"QWPV\00"
@global_var_17440.406 = constant i32 370611221
@global_var_171d4.408 = constant [5 x i8] c"CFQN\00"
@global_var_17448.410 = constant i32 1313949251
@global_var_17454.412 = constant [7 x i8] c"RCVPMN\00"
@global_var_1745c.414 = constant i32 387007823
@global_var_17464.416 = constant [7 x i8] c"OGPNKL\00"
@global_var_1746c.418 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_17478.420 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_17484.422 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1748c.424 = constant i32 1179729984
@global_var_17498.426 = constant [5 x i8] c"lwnn\00"
@global_var_174a0.428 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_174ac.430 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_174b8.432 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_174c4.434 = constant i32 269488144
@global_var_174d0.436 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_174dc.438 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_174e8.440 = constant [8 x i8] c"OGOMVGA\00"
@global_var_174f0.442 = constant i32 1464562030
@global_var_17500.444 = constant i32 2003334929
@global_var_17510.446 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_1751c.448 = constant i32 1196513135
@global_var_17528.450 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_17534.452 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_17540.454 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1754c.456 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_17558.458 = constant i32 1279478337
@global_var_17564.460 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_17574.462 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_17584.464 = constant i32 336675162
@global_var_1758c.466 = constant [7 x i8] c"CLVQNS\00"
@global_var_17594.468 = constant i32 1178819416
@global_var_18280.469 = local_unnamed_addr global i32 0
@global_var_1827e.470 = local_unnamed_addr global i32 0
@global_var_18284.471 = local_unnamed_addr global i32 0
@global_var_1828c.473 = local_unnamed_addr global i32 0
@global_var_18298.474 = local_unnamed_addr global i32 0
@global_var_e1f8.482 = constant i32 -382910352
@global_var_175a0.484 = constant [3 x i8] c"\0D\0A\00"
@global_var_175ac.486 = constant i32 2096127
@global_var_175a3.488 = constant i32 2095871
@global_var_1a304.493 = global i32 0
@global_var_175b0.499 = constant [10 x i8] c"XOCR\0CZ[X\22\00"
@global_var_1a31c.501 = local_unnamed_addr global i32 0
@global_var_1a320.502 = local_unnamed_addr global i32 0
@global_var_175bc.504 = constant [3 x i8] c"\225\00"
@global_var_1a324.505 = local_unnamed_addr global i32 0
@global_var_1a328.506 = local_unnamed_addr global i32 0
@global_var_1a394.507 = local_unnamed_addr global i32 0
@global_var_1a398.508 = local_unnamed_addr global i32 0
@global_var_175c0.510 = constant i32 51097
@global_var_1a39c.511 = local_unnamed_addr global i32 0
@global_var_1a3a0.512 = local_unnamed_addr global i32 0
@global_var_175c4.514 = constant i32 1448168270
@global_var_1a314.515 = local_unnamed_addr global i32 0
@global_var_1a318.516 = local_unnamed_addr global i32 0
@global_var_175d4.518 = constant [8 x i8] c"\0DRPMA\0D\22\00"
@global_var_1a334.519 = local_unnamed_addr global i32 0
@global_var_1a338.520 = local_unnamed_addr global i32 0
@global_var_175dc.522 = constant [6 x i8] c"\0DGZG\22\00"
@global_var_1a33c.523 = local_unnamed_addr global i32 0
@global_var_1a340.524 = local_unnamed_addr global i32 0
@global_var_175e4.526 = constant [5 x i8] c"\0DDF\22\00"
@global_var_1a348.527 = local_unnamed_addr global i32 0
@global_var_1a344.528 = local_unnamed_addr global i32 0
@global_var_175ec.530 = constant [15 x i8] c"\0DRPMA\0DLGV\0DVAR\22\00"
@global_var_1a34c.531 = local_unnamed_addr global i32 0
@global_var_1a350.532 = local_unnamed_addr global i32 0
@global_var_175fc.534 = constant [7 x i8] c"\0DOCRQ\22\00"
@global_var_1a354.535 = local_unnamed_addr global i32 0
@global_var_1a358.536 = local_unnamed_addr global i32 0
@global_var_17604.538 = constant [9 x i8] c"\0DQVCVWQ\22\00"
@global_var_1a35c.539 = local_unnamed_addr global i32 0
@global_var_1a360.540 = local_unnamed_addr global i32 0
@global_var_17610.542 = constant [8 x i8] c"\0CCLKOG\22\00"
@global_var_1a364.543 = local_unnamed_addr global i32 0
@global_var_1a368.544 = local_unnamed_addr global i32 0
@global_var_17618.546 = constant [17 x i8] c"\0DRPMA\0DLGV\0DPMWVG\22\00"
@global_var_1a370.547 = local_unnamed_addr global i32 0
@global_var_1a36c.548 = local_unnamed_addr global i32 0
@global_var_1762c.550 = constant [15 x i8] c"\0DRPMA\0DARWKLDM\22\00"
@global_var_1a374.551 = local_unnamed_addr global i32 0
@global_var_1a378.552 = local_unnamed_addr global i32 0
@global_var_1763c.554 = constant [10 x i8] c"`memokrq\22\00"
@global_var_1a37c.555 = local_unnamed_addr global i32 0
@global_var_1a380.556 = local_unnamed_addr global i32 0
@global_var_17648.558 = constant [20 x i8] c"\0DGVA\0DPA\0CF\0DPA\0CNMACN\22\00"
@global_var_1a384.559 = local_unnamed_addr global i32 0
@global_var_1a388.560 = local_unnamed_addr global i32 0
@global_var_1765c.562 = constant i32 1078137669
@global_var_1a38c.563 = local_unnamed_addr global i32 0
@global_var_1a390.564 = local_unnamed_addr global i32 0
@global_var_17674.566 = constant [9 x i8] c"CQQUMPF\22\00"
@global_var_17680.568 = constant [15 x i8] c"\0DFGT\0DUCVAJFME\22\00"
@global_var_17690.570 = constant [20 x i8] c"\0DFGT\0DOKQA\0DUCVAJFME\22\00"
@global_var_1a3a4.571 = local_unnamed_addr global i32 0
@global_var_1a3a8.572 = local_unnamed_addr global i32 0
@global_var_176a4.574 = constant i32 1413957133
@global_var_1a3b0.575 = local_unnamed_addr global i32 0
@global_var_1a3ac.576 = local_unnamed_addr global i32 0
@global_var_176bc.578 = constant i32 1413957133
@global_var_1a3b4.579 = local_unnamed_addr global i32 0
@global_var_1a3b8.580 = local_unnamed_addr global i32 0
@global_var_176d4.582 = constant [15 x i8] c"\0DFGT\0DLGVQNKLI\22\00"
@global_var_1a3bc.583 = local_unnamed_addr global i32 0
@global_var_1a3c0.584 = local_unnamed_addr global i32 0
@global_var_176e4.586 = constant i32 1836214128
@global_var_176f4.588 = constant [11 x i8] c"jvvrdnmmf\22\00"
@global_var_17700.590 = constant [11 x i8] c"nmnlmevdm\22\00"
@global_var_1770c.592 = constant i32 437738110
@global_var_17730.594 = constant [9 x i8] c"XMNNCPF\22\00"
@global_var_1773c.596 = constant [12 x i8] c"egvnmacnkr\22\00"
@global_var_17748.598 = constant [11 x i8] c"FTPjGNRGP\22\00"
@global_var_17754.600 = constant [7 x i8] c"QJGNN\22\00"
@global_var_1775c.602 = constant [8 x i8] c"GLC@NG\22\00"
@global_var_17764.604 = constant [8 x i8] c"Q[QVGO\22\00"
@global_var_1776c.606 = constant [4 x i8] c"QJ\22\00"
@global_var_17770.608 = constant i32 1280000013
@global_var_1a3c4.609 = local_unnamed_addr global i32 0
@global_var_1a3c8.610 = local_unnamed_addr global i32 0
@global_var_17784.612 = constant i32 1668311919
@global_var_1a3cc.613 = local_unnamed_addr global i32 0
@global_var_1a3d0.614 = local_unnamed_addr global i32 0
@global_var_177a0.616 = constant [10 x i8] c"LAMPPGAV\22\00"
@global_var_1a3d4.617 = local_unnamed_addr global i32 0
@global_var_1a3d8.618 = local_unnamed_addr global i32 0
@global_var_177ac.620 = constant i32 1280000013
@global_var_1a3e0.621 = local_unnamed_addr global i32 0
@global_var_1a3dc.622 = local_unnamed_addr global i32 0
@global_var_177c0.624 = constant i32 1280000013
@global_var_1a3e4.625 = local_unnamed_addr global i32 0
@global_var_1a3e8.626 = local_unnamed_addr global i32 0
@global_var_1a3fc.627 = local_unnamed_addr global i32 0
@global_var_1a400.628 = local_unnamed_addr global i32 0
@global_var_177d8.630 = constant [6 x i8] c"MEKL\22\00"
@global_var_1a404.631 = local_unnamed_addr global i32 0
@global_var_177e0.633 = constant [7 x i8] c"GLVGP\22\00"
@global_var_1a40c.634 = local_unnamed_addr global i32 0
@global_var_177e8.636 = constant i32 1464693110
@global_var_1a3f0.637 = local_unnamed_addr global i32 0
@global_var_1a3ec.638 = local_unnamed_addr global i32 0
@global_var_17800.640 = constant [18 x i8] c"\0DGVA\0DPGQMNT\0CAMLD\22\00"
@global_var_1a3f4.641 = local_unnamed_addr global i32 0
@global_var_1a3f8.642 = local_unnamed_addr global i32 0
@global_var_17814.644 = constant i32 1196376908
@global_var_1a44c.645 = local_unnamed_addr global i32 0
@global_var_11d18.651 = constant i32 -443088884
@global_var_182c4.662 = global i32 0
@global_var_1214c.664 = constant i32 -456978431
@global_var_1a4a4.677 = global i32 0
@global_var_12708.683 = constant i32 -478871519
@global_var_13188.697 = constant i32 -478805983
@global_var_13564.706 = constant i32 -382906384
@global_var_14fec.715 = constant i32 -509591552
@global_var_13dc4.726 = constant i32 -494075872
@global_var_11c1c.727 = constant i32 -382910336
@global_var_1783c.731 = constant [11 x i8] c"/proc/stat\00"
@global_var_17848.734 = constant i32 32
@global_var_1784c.737 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1785c.739 = constant [10 x i8] c"processor\00"
@global_var_17880.741 = constant i32 604672
@global_var_13f84.744 = constant i32 -369098421
@global_var_17884.760 = constant [10 x i8] c"/dev/null\00"
@global_var_13994.761 = constant i32 -442543860
@global_var_15984.766 = constant i32 -382910352
@global_var_12180.771 = constant i32 -369094618
@global_var_14e18.789 = constant i32 -382909456
@global_var_1a2d4.792 = local_unnamed_addr global i32 0
@global_var_17864.800 = constant i32 114
@global_var_15e44.805 = constant i32 -382906384
@global_var_15924.823 = constant i32 -509607926
@global_var_17b90.828 = constant i32 0
@global_var_16dd8.829 = constant i32 -382909968
@global_var_15c68.839 = constant i32 -509607928
@global_var_18230.2 = external global i8*
@global_var_1824c.19 = external global i8*
@global_var_1824d.25 = global i8 0
@1 = internal constant [4 x i8] c"\90\80\01\00"
@global_var_1a2e4.72 = global i16* null
@global_var_1825c.88 = external global i8*
@global_var_182a0.120 = global i16* null
@global_var_18274.129 = external global i8*
@global_var_18288.132 = global i16 0
@global_var_18294.133 = local_unnamed_addr global i8 0
@global_var_1828a.137 = local_unnamed_addr global i16 0
@global_var_18295.138 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_8098)
  %v31_80a0 = load i32, i32* @r0, align 4
  ret i32 %v31_80a0
}

define i32 @function_80b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_18230.2 to i32), i32* %r4.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_18230.2 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %dec_label_pc_80c4, label %dec_label_pc_80e0

dec_label_pc_80c4:                                ; preds = %entry
  store i1 true, i1* @cpsr_z, align 1
  %v3_80d4 = call i32 @function_80ec()
  store i32 %v3_80d4, i32* @r0, align 4
  %v2_80dc = load i32, i32* %r4.global-to-local, align 4
  %v3_80dc = inttoptr i32 %v2_80dc to i8*
  store i8 1, i8* %v3_80dc, align 1
  %v2_80e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80e0

dec_label_pc_80e0:                                ; preds = %entry, %dec_label_pc_80c4
  %v2_80e0 = phi i32 [ %v3_80b0, %entry ], [ %v2_80e0.pre, %dec_label_pc_80c4 ]
  store i32 %v2_80e0, i32* %r4.global-to-local, align 4
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4

; uselistorder directives
  uselistorder i8** @global_var_18230.2, { 1, 0 }
  uselistorder label %dec_label_pc_80e0, { 1, 0 }
}

define i32 @function_80ec() local_unnamed_addr {
dec_label_pc_80ec:
  %v0_80f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_80f0, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_80ec
  br label %bb3

bb3:                                              ; preds = %bb, %dec_label_pc_80ec
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8118 = load i32, i32* inttoptr (i32 98316 to i32*), align 4
  %v2_811c = icmp eq i32 %v2_8118, 0
  br i1 %v2_811c, label %dec_label_pc_8134, label %dec_label_pc_8124

dec_label_pc_8124:                                ; preds = %bb3
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8134

dec_label_pc_8134:                                ; preds = %bb3, %dec_label_pc_8124
  ret i32 98316

; uselistorder directives
  uselistorder label %dec_label_pc_8134, { 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_815c = ptrtoint i32* %stack_var_4 to i32
  %v8_817c = call i32 @function_146c0(i32 ptrtoint (i32* @global_var_d360.14 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 94172, i32 %arg1, i32 %v4_815c)
  %v0_8180 = call i32 @function_13994()
  ret i32 %v0_8180
}

define i32 @function_8190(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8190:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_8190 = icmp eq i32 %arg1, 0
  br i1 %v2_8190, label %dec_label_pc_81d8, label %dec_label_pc_81a0

dec_label_pc_81a0:                                ; preds = %dec_label_pc_8190
  %v0_81a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81a0 = add i32 %v0_81a0, 4
  %v2_81a0 = inttoptr i32 %v1_81a0 to i8*
  %v3_81a0 = load i8, i8* %v2_81a0, align 1
  %v4_81a0 = zext i8 %v3_81a0 to i32
  %v9_81a4 = icmp eq i32 %v4_81a0, %arg3
  br i1 %v9_81a4, label %dec_label_pc_81e4, label %dec_label_pc_81c8.preheader

dec_label_pc_81c8.preheader:                      ; preds = %dec_label_pc_81a0
  br label %dec_label_pc_81c8

dec_label_pc_81b8:                                ; preds = %dec_label_pc_81c8
  %v1_81b8 = add i32 %v0_81c0.in, 12
  %v2_81b8 = inttoptr i32 %v1_81b8 to i8*
  %v3_81b8 = load i8, i8* %v2_81b8, align 1
  %v4_81b8 = zext i8 %v3_81b8 to i32
  %v9_81bc = icmp eq i32 %v4_81b8, %arg3
  br i1 %v9_81bc, label %dec_label_pc_81e4, label %dec_label_pc_81c8

dec_label_pc_81c8:                                ; preds = %dec_label_pc_81c8.preheader, %dec_label_pc_81b8
  %v0_81c0.in = phi i32 [ %v0_81a0, %dec_label_pc_81c8.preheader ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v0_81c8 = phi i32 [ 0, %dec_label_pc_81c8.preheader ], [ %v1_81c8, %dec_label_pc_81b8 ]
  %v0_81c0 = add i32 %v0_81c0.in, 8
  %v1_81c8 = add i32 %v0_81c8, 1
  %v9_81cc = icmp eq i32 %v1_81c8, %arg1
  store i32 %v0_81c0, i32* %r1.global-to-local, align 4
  br i1 %v9_81cc, label %dec_label_pc_81d8, label %dec_label_pc_81b8

dec_label_pc_81d8:                                ; preds = %dec_label_pc_81c8, %dec_label_pc_8190, %dec_label_pc_81e4
  %v0_81d8 = phi i32 [ %arg4, %dec_label_pc_8190 ], [ %v2_81e4, %dec_label_pc_81e4 ], [ %arg4, %dec_label_pc_81c8 ]
  ret i32 %v0_81d8

dec_label_pc_81e4:                                ; preds = %dec_label_pc_81b8, %dec_label_pc_81a0
  %v0_81e4 = phi i32 [ %v0_81a0, %dec_label_pc_81a0 ], [ %v0_81c0, %dec_label_pc_81b8 ]
  %v1_81e4 = inttoptr i32 %v0_81e4 to i32*
  %v2_81e4 = load i32, i32* %v1_81e4, align 4
  br label %dec_label_pc_81d8

; uselistorder directives
  uselistorder i32 %v1_81c8, { 1, 0 }
  uselistorder i32 %v0_81c0, { 1, 0, 2 }
  uselistorder i32 %v0_81c0.in, { 1, 0 }
  uselistorder i32 %v0_81a0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_81c8, { 1, 0 }
}

define i32 @function_81ec(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_81ec:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81ec = icmp eq i32 %arg1, 0
  %v6_81f0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_81ec, label %dec_label_pc_8234, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81ec
  %v0_81fc = load i32, i32* %r1.global-to-local, align 4
  %v1_81fc = add i32 %v0_81fc, 4
  %v2_81fc = inttoptr i32 %v1_81fc to i8*
  %v3_81fc = load i8, i8* %v2_81fc, align 1
  %v4_81fc = zext i8 %v3_81fc to i32
  %v9_8200 = icmp eq i32 %v4_81fc, %arg3
  br i1 %v9_8200, label %dec_label_pc_8240, label %dec_label_pc_8224.preheader

dec_label_pc_8224.preheader:                      ; preds = %dec_label_pc_81fc
  br label %dec_label_pc_8224

dec_label_pc_8214:                                ; preds = %dec_label_pc_8224
  %v1_8214 = add i32 %v0_821c.in, 12
  %v2_8214 = inttoptr i32 %v1_8214 to i8*
  %v3_8214 = load i8, i8* %v2_8214, align 1
  %v4_8214 = zext i8 %v3_8214 to i32
  %v9_8218 = icmp eq i32 %v4_8214, %arg3
  br i1 %v9_8218, label %dec_label_pc_8240, label %dec_label_pc_8224

dec_label_pc_8224:                                ; preds = %dec_label_pc_8224.preheader, %dec_label_pc_8214
  %v0_821c.in = phi i32 [ %v0_81fc, %dec_label_pc_8224.preheader ], [ %v0_821c, %dec_label_pc_8214 ]
  %v0_8224 = phi i32 [ 0, %dec_label_pc_8224.preheader ], [ %v1_8224, %dec_label_pc_8214 ]
  %v0_821c = add i32 %v0_821c.in, 8
  %v1_8224 = add i32 %v0_8224, 1
  %v9_8228 = icmp eq i32 %v1_8224, %arg1
  store i32 %v0_821c, i32* %r1.global-to-local, align 4
  br i1 %v9_8228, label %dec_label_pc_8234, label %dec_label_pc_8214

dec_label_pc_8234:                                ; preds = %dec_label_pc_8224, %dec_label_pc_8240, %dec_label_pc_81ec, %dec_label_pc_824c
  %v0_8234 = phi i32 [ %arg4, %dec_label_pc_8240 ], [ %arg4, %dec_label_pc_81ec ], [ %v1_824c, %dec_label_pc_824c ], [ %arg4, %dec_label_pc_8224 ]
  store i32 %v6_81f0, i32* @lr, align 4
  ret i32 %v0_8234

dec_label_pc_8240:                                ; preds = %dec_label_pc_8214, %dec_label_pc_81fc
  %v0_8240 = phi i32 [ %v0_81fc, %dec_label_pc_81fc ], [ %v0_821c, %dec_label_pc_8214 ]
  %v1_8240 = inttoptr i32 %v0_8240 to i32*
  %v2_8240 = load i32, i32* %v1_8240, align 4
  store i32 %v2_8240, i32* @r0, align 4
  %v2_8244 = icmp eq i32 %v2_8240, 0
  br i1 %v2_8244, label %dec_label_pc_8234, label %dec_label_pc_824c

dec_label_pc_824c:                                ; preds = %dec_label_pc_8240
  %v1_824c = call i32 @function_121b4(i32 %v2_8240)
  br label %dec_label_pc_8234

; uselistorder directives
  uselistorder i32 %v1_8224, { 1, 0 }
  uselistorder i32 %v0_821c, { 1, 0, 2 }
  uselistorder i32 %v0_821c.in, { 1, 0 }
  uselistorder i32 %v0_81fc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8234, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8224, { 1, 0 }
}

define i32 @function_8258(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8258:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8258 = icmp eq i32 %arg1, 0
  %v3_825c = load i32, i32* @r4, align 4
  store i32 %v3_825c, i32* %stack_var_-8, align 4
  %v6_825c = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8258, label %dec_label_pc_82a0, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %dec_label_pc_8258
  %v0_8268 = load i32, i32* %r1.global-to-local, align 4
  %v1_8268 = add i32 %v0_8268, 4
  %v2_8268 = inttoptr i32 %v1_8268 to i8*
  %v3_8268 = load i8, i8* %v2_8268, align 1
  %v4_8268 = zext i8 %v3_8268 to i32
  %v9_826c = icmp eq i32 %v4_8268, %arg3
  br i1 %v9_826c, label %dec_label_pc_82ac, label %dec_label_pc_8290.preheader

dec_label_pc_8290.preheader:                      ; preds = %dec_label_pc_8268
  br label %dec_label_pc_8290

dec_label_pc_8280:                                ; preds = %dec_label_pc_8290
  %v1_8280 = add i32 %v0_8288.in, 12
  %v2_8280 = inttoptr i32 %v1_8280 to i8*
  %v3_8280 = load i8, i8* %v2_8280, align 1
  %v4_8280 = zext i8 %v3_8280 to i32
  %v9_8284 = icmp eq i32 %v4_8280, %arg3
  br i1 %v9_8284, label %dec_label_pc_82ac, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8290.preheader, %dec_label_pc_8280
  %v0_8288.in = phi i32 [ %v0_8268, %dec_label_pc_8290.preheader ], [ %v0_8288, %dec_label_pc_8280 ]
  %v0_8290 = phi i32 [ 0, %dec_label_pc_8290.preheader ], [ %v1_8290, %dec_label_pc_8280 ]
  %v0_8288 = add i32 %v0_8288.in, 8
  %v1_8290 = add i32 %v0_8290, 1
  store i32 %v1_8290, i32* @lr, align 4
  %v9_8294 = icmp eq i32 %v1_8290, %arg1
  store i32 %v0_8288, i32* %r1.global-to-local, align 4
  br i1 %v9_8294, label %dec_label_pc_82a0, label %dec_label_pc_8280

dec_label_pc_82a0:                                ; preds = %dec_label_pc_8290, %dec_label_pc_82ac, %dec_label_pc_8258, %dec_label_pc_82b8
  %v2_82a4 = phi i32 [ %v3_825c, %dec_label_pc_82ac ], [ %v3_825c, %dec_label_pc_8258 ], [ %v2_82a4.pre, %dec_label_pc_82b8 ], [ %v3_825c, %dec_label_pc_8290 ]
  %v0_82a0 = phi i32 [ %arg4, %dec_label_pc_82ac ], [ %arg4, %dec_label_pc_8258 ], [ %v3_82bc, %dec_label_pc_82b8 ], [ %arg4, %dec_label_pc_8290 ]
  store i32 %v2_82a4, i32* @r4, align 4
  store i32 %v6_825c, i32* @lr, align 4
  ret i32 %v0_82a0

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_8268
  %v0_82ac = phi i32 [ %v0_8268, %dec_label_pc_8268 ], [ %v0_8288, %dec_label_pc_8280 ]
  %v1_82ac = inttoptr i32 %v0_82ac to i32*
  %v2_82ac = load i32, i32* %v1_82ac, align 4
  %v2_82b0 = icmp eq i32 %v2_82ac, 0
  br i1 %v2_82b0, label %dec_label_pc_82a0, label %dec_label_pc_82b8

dec_label_pc_82b8:                                ; preds = %dec_label_pc_82ac
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_82bc = inttoptr i32 %v2_82ac to i8*
  %v3_82bc = call i32 @function_112b8(i8* %v2_82bc, i32 10)
  %v2_82a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_82a0

; uselistorder directives
  uselistorder i32 %v1_8290, { 1, 2, 0 }
  uselistorder i32 %v0_8288, { 1, 0, 2 }
  uselistorder i32 %v0_8288.in, { 1, 0 }
  uselistorder i32 %v0_8268, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_82a0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8290, { 1, 0 }
}

define i32 @function_82c8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_82c8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_82c8 = load i32, i32* @r5, align 4
  %v9_82c8 = load i32, i32* @r6, align 4
  %v12_82c8 = load i32, i32* @r7, align 4
  %v18_82c8 = load i32, i32* @sb, align 4
  %v21_82c8 = load i32, i32* @sl, align 4
  %v24_82c8 = load i32, i32* @fp, align 4
  %v2_82cc = icmp ugt i32 %arg2, 2
  %v7_82cc = icmp eq i32 %arg2, 3
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_82d8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_82d8, i32* @r5, align 4
  %v2_82dc = xor i1 %v7_82cc, true
  %v3_82dc = and i1 %v2_82cc, %v2_82dc
  br i1 %v3_82dc, label %dec_label_pc_82ec, label %dec_label_pc_82e0

dec_label_pc_82e0:                                ; preds = %dec_label_pc_8330, %.dec_label_pc_82e0_crit_edge, %dec_label_pc_8324, %dec_label_pc_8314, %dec_label_pc_82ec, %dec_label_pc_82c8, %dec_label_pc_84d8
  %v1_82e8 = phi i32 [ %v1_82e8.pre, %.dec_label_pc_82e0_crit_edge ], [ %v1_82f0, %dec_label_pc_8330 ], [ %v1_82f0, %dec_label_pc_8324 ], [ %v1_82f0, %dec_label_pc_8314 ], [ %v1_82f0, %dec_label_pc_82ec ], [ %v0_82d8, %dec_label_pc_82c8 ], [ %v0_84dc, %dec_label_pc_84d8 ]
  store i32 %v6_82c8, i32* @r5, align 4
  store i32 %v9_82c8, i32* @r6, align 4
  store i32 %v12_82c8, i32* @r7, align 4
  store i32 %v18_82c8, i32* @sb, align 4
  store i32 %v21_82c8, i32* @sl, align 4
  store i32 %v24_82c8, i32* @fp, align 4
  ret i32 %v1_82e8

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82c8
  %v1_82ec = inttoptr i32 %v0_82d8 to i32*
  %v2_82ec = load i32, i32* %v1_82ec, align 4
  %v1_82f0 = and i32 %v2_82ec, 16711680
  store i32 %v1_82f0, i32* %r0.global-to-local, align 4
  %v3_82f4 = udiv i32 %v2_82ec, 16777216
  %v1_82f8 = and i32 %v2_82ec, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v4_82fc = udiv i32 %v1_82f0, 256
  %v5_82fc = or i32 %v4_82fc, %v3_82f4
  %v4_8300 = mul i32 %v1_82f8, 256
  %v5_8300 = or i32 %v5_82fc, %v4_8300
  store i32 %v5_8300, i32* %r3.global-to-local, align 4
  %v4_8304 = mul i32 %v2_82ec, 16777216
  %v5_8304 = or i32 %v5_8300, %v4_8304
  %v7_8308 = icmp eq i32 %arg2, 4
  store i1 %v7_8308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8308, label %dec_label_pc_82e0, label %dec_label_pc_8314

dec_label_pc_8314:                                ; preds = %dec_label_pc_82ec
  %v1_8314 = add i32 %v0_82d8, 4
  %v2_8314 = inttoptr i32 %v1_8314 to i8*
  %v3_8314 = load i8, i8* %v2_8314, align 1
  %v4_8314 = zext i8 %v3_8314 to i32
  store i32 %v4_8314, i32* %r3.global-to-local, align 4
  %v7_8318 = icmp eq i32 %arg2, 5
  store i1 %v7_8318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8318, label %dec_label_pc_82e0, label %dec_label_pc_8324

dec_label_pc_8324:                                ; preds = %dec_label_pc_8314
  %v1_8324 = add i32 %v0_82d8, 5
  %v2_8324 = inttoptr i32 %v1_8324 to i8*
  %v3_8324 = load i8, i8* %v2_8324, align 1
  %v4_8324 = zext i8 %v3_8324 to i32
  store i32 %v4_8324, i32* @sb, align 4
  %v2_8328 = icmp eq i8 %v3_8324, 0
  store i1 %v2_8328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8328, label %dec_label_pc_82e0, label %dec_label_pc_8330

dec_label_pc_8330:                                ; preds = %dec_label_pc_8324
  %v2_8334 = mul nuw nsw i32 %v4_8324, 5
  store i32 %v2_8334, i32* @r7, align 4
  %v1_8338 = add i32 %arg2, -6
  store i32 %v1_8338, i32* %r3.global-to-local, align 4
  %v3_833c = icmp ult i32 %v1_8338, %v2_8334
  %v9_833c = icmp eq i32 %v1_8338, %v2_8334
  store i1 %v9_833c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_833c, label %dec_label_pc_82e0, label %dec_label_pc_8344

dec_label_pc_8344:                                ; preds = %dec_label_pc_8330
  store i32 %v4_8324, i32* %r0.global-to-local, align 4
  store i32 %v1_8338, i32* @r6, align 4
  %v2_8350 = call i32 @function_12fcc(i32 %v4_8324, i32 24)
  store i32 %v2_8350, i32* %ip.global-to-local, align 4
  %v0_835c = load i32, i32* @r7, align 4
  %v1_835c = load i32, i32* @r4, align 4
  %v2_835c = sub i32 %v1_835c, %v0_835c
  store i32 %v2_835c, i32* @r7, align 4
  %v0_8360 = load i32, i32* @r5, align 4
  %v1_8360 = add i32 %v0_8360, 11
  store i32 %v1_8360, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_8364, %dec_label_pc_8344
  %v1_8368 = phi i32 [ %v1_8394, %dec_label_pc_8364 ], [ %v2_8350, %dec_label_pc_8344 ]
  %v0_8364 = phi i32 [ %v1_8390, %dec_label_pc_8364 ], [ %v1_8360, %dec_label_pc_8344 ]
  %v1_8364 = add i32 %v0_8364, -5
  %v2_8364 = inttoptr i32 %v1_8364 to i32*
  %v3_8364 = load i32, i32* %v2_8364, align 4
  store i32 %v3_8364, i32* @r1, align 4
  %v2_8368 = add i32 %v1_8368, 16
  %v3_8368 = inttoptr i32 %v2_8368 to i32*
  store i32 %v3_8364, i32* %v3_8368, align 4
  %v0_836c = load i32, i32* @r6, align 4
  %v1_836c = add i32 %v0_836c, -5
  store i32 %v1_836c, i32* @r6, align 4
  %v0_8370 = load i32, i32* %r0.global-to-local, align 4
  %v1_8370 = add i32 %v0_8370, -1
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v0_8374 = load i32, i32* @r7, align 4
  %v1_8374 = add i32 %v0_8374, -6
  store i32 %v1_8374, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_837c = icmp eq i32 %v1_836c, %v1_8374
  store i1 %v9_837c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8370, i32* @r4, align 4
  %v2_8384 = load i32, i32* %ip.global-to-local, align 4
  %v3_8384 = add i32 %v2_8384, 20
  %v4_8384 = inttoptr i32 %v3_8384 to i8*
  store i8 %v3_8370, i8* %v4_8384, align 1
  %v0_8388 = load i32, i32* @r1, align 4
  %v1_8388 = load i32, i32* %ip.global-to-local, align 4
  %v2_8388 = add i32 %v1_8388, 4
  %v3_8388 = inttoptr i32 %v2_8388 to i32*
  store i32 %v0_8388, i32* %v3_8388, align 4
  %v0_838c = load i32, i32* @lr, align 4
  %v1_838c = trunc i32 %v0_838c to i16
  %v2_838c = load i32, i32* %ip.global-to-local, align 4
  %v3_838c = inttoptr i32 %v2_838c to i16*
  store i16 %v1_838c, i16* %v3_838c, align 2
  %v0_8390 = load i32, i32* %r0.global-to-local, align 4
  %v1_8390 = add i32 %v0_8390, 5
  store i32 %v1_8390, i32* %r0.global-to-local, align 4
  %v0_8394 = load i32, i32* %ip.global-to-local, align 4
  %v1_8394 = add i32 %v0_8394, 24
  store i32 %v1_8394, i32* %ip.global-to-local, align 4
  %v0_8398 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8398, label %dec_label_pc_839c, label %dec_label_pc_8364

dec_label_pc_839c:                                ; preds = %dec_label_pc_8364
  %v0_839c = load i32, i32* @r6, align 4
  %v2_839c = icmp eq i32 %v0_839c, 0
  store i1 %v2_839c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_839c, label %dec_label_pc_849c, label %dec_label_pc_83a4

dec_label_pc_83a4:                                ; preds = %dec_label_pc_839c
  %v0_83a4 = load i32, i32* @r4, align 4
  %v1_83a4 = inttoptr i32 %v0_83a4 to i8*
  %v2_83a4 = load i8, i8* %v1_83a4, align 1
  %v3_83a4 = zext i8 %v2_83a4 to i32
  store i32 %v3_83a4, i32* @r5, align 4
  %v2_83a8 = icmp eq i8 %v2_83a4, 0
  store i1 %v2_83a8, i1* %cpsr_z.global-to-local, align 1
  %v0_83ac = load i32, i32* @r7, align 4
  %v1_83ac = add i32 %v0_83ac, -7
  store i32 %v1_83ac, i32* @r8, align 4
  br i1 %v2_83a8, label %bb, label %dec_label_pc_83b8

bb:                                               ; preds = %dec_label_pc_83a4
  store i32 %v3_83a4, i32* @r6, align 4
  br label %dec_label_pc_846c

dec_label_pc_83b8:                                ; preds = %dec_label_pc_83a4
  store i32 %v3_83a4, i32* %r0.global-to-local, align 4
  %v2_83c0 = call i32 @function_12fcc(i32 %v3_83a4, i32 8)
  store i32 %v2_83c0, i32* %r0.global-to-local, align 4
  %v0_83c4 = load i32, i32* @r8, align 4
  %v2_83c4 = icmp eq i32 %v0_83c4, 0
  store i1 %v2_83c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_83c0, i32* @r6, align 4
  br i1 %v2_83c4, label %dec_label_pc_849c, label %dec_label_pc_83d0

dec_label_pc_83d0:                                ; preds = %dec_label_pc_83b8
  %v0_83d0 = load i32, i32* @r4, align 4
  %v1_83d0 = add i32 %v0_83d0, 1
  %v2_83d0 = inttoptr i32 %v1_83d0 to i8*
  %v3_83d0 = load i8, i8* %v2_83d0, align 1
  %v0_83d4 = load i32, i32* @r7, align 4
  %v7_83d4 = icmp eq i32 %v0_83d4, 8
  store i1 %v7_83d4, i1* %cpsr_z.global-to-local, align 1
  %v3_83d8 = add i32 %v2_83c0, 4
  %v4_83d8 = inttoptr i32 %v3_83d8 to i8*
  store i8 %v3_83d0, i8* %v4_83d8, align 1
  %v0_83dc = load i32, i32* @r4, align 4
  %v1_83dc = add i32 %v0_83dc, 1
  store i32 %v1_83dc, i32* %r3.global-to-local, align 4
  %v0_83e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83e0, label %dec_label_pc_849c, label %dec_label_pc_83e4

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83d0
  %v1_83e4 = add i32 %v0_83dc, 2
  %v2_83e4 = inttoptr i32 %v1_83e4 to i8*
  %v3_83e4 = load i8, i8* %v2_83e4, align 1
  %v4_83e4 = zext i8 %v3_83e4 to i32
  store i32 %v4_83e4, i32* @r4, align 4
  %v0_83e8 = load i32, i32* @r7, align 4
  %v1_83e8 = add i32 %v0_83e8, -9
  store i32 %v1_83e8, i32* @r7, align 4
  %v9_83ec = icmp eq i32 %v1_83e8, %v4_83e4
  store i1 %v9_83ec, i1* %cpsr_z.global-to-local, align 1
  %v5_83f4 = icmp slt i32 %v1_83e8, %v4_83e4
  br i1 %v5_83f4, label %dec_label_pc_849c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_83e4
  %v7_83f44711 = add i32 %v0_83dc, 3
  store i32 %v7_83f44711, i32* @r8, align 4
  %v6_83f8812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_83f8812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8444

dec_label_pc_8408:                                ; preds = %dec_label_pc_8444
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = load i32, i32* @r4, align 4
  %v2_8408 = sub i32 %v0_8408, %v1_8408
  %v9_8408 = icmp eq i32 %v0_8408, %v1_8408
  store i1 %v9_8408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8408, label %dec_label_pc_849c, label %dec_label_pc_8410

dec_label_pc_8410:                                ; preds = %dec_label_pc_8408
  %v3_8410 = mul i32 %v0_8464, 8
  store i32 %v3_8410, i32* %r3.global-to-local, align 4
  %v1_8414 = load i32, i32* @r8, align 4
  %v2_8414 = add i32 %v1_8414, %v1_8408
  %v3_8414 = inttoptr i32 %v2_8414 to i8*
  %v4_8414 = load i8, i8* %v3_8414, align 1
  %v0_8418 = load i32, i32* @r6, align 4
  %v2_8418 = add i32 %v0_8418, %v3_8410
  store i32 %v2_8418, i32* @sl, align 4
  %v1_841c = add i32 %v2_8408, -1
  store i32 %v1_841c, i32* %r3.global-to-local, align 4
  %v7_841c = icmp eq i32 %v2_8408, 1
  store i1 %v7_841c, i1* %cpsr_z.global-to-local, align 1
  %v3_8420 = add i32 %v2_8418, 4
  %v4_8420 = inttoptr i32 %v3_8420 to i8*
  store i8 %v4_8414, i8* %v4_8420, align 1
  %v0_8424 = load i32, i32* @r4, align 4
  %v1_8424 = load i32, i32* @r8, align 4
  %v2_8424 = add i32 %v1_8424, %v0_8424
  %v0_8428 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8428, label %dec_label_pc_849c, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8410
  %v1_842c = add i32 %v2_8424, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v4_842c = zext i8 %v3_842c to i32
  store i32 %v4_842c, i32* @r4, align 4
  %v0_8430 = load i32, i32* %r3.global-to-local, align 4
  %v1_8430 = add i32 %v0_8430, -1
  store i32 %v1_8430, i32* @r7, align 4
  %v2_8434 = sub i32 %v1_8430, %v4_842c
  %tmp46 = sub i32 0, %v2_8434
  %v6_8434 = and i32 %v1_8430, %tmp46
  %v7_8434 = icmp slt i32 %v6_8434, 0
  %v8_8434 = icmp slt i32 %v2_8434, 0
  %v9_8434 = icmp eq i32 %v1_8430, %v4_842c
  store i1 %v9_8434, i1* %cpsr_z.global-to-local, align 1
  %v2_843c = xor i1 %v8_8434, %v7_8434
  br i1 %v2_843c, label %dec_label_pc_849c, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v2_8424, 2
  store i32 %v1_8440, i32* @r8, align 4
  br label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %.thread10, %dec_label_pc_8440
  %v0_8448 = phi i32 [ %v4_83e4, %.thread10 ], [ %v4_842c, %dec_label_pc_8440 ]
  %v2_8448 = add nuw nsw i32 %v0_8448, 1
  store i32 %v2_8448, i32* %r0.global-to-local, align 4
  %v2_844c = call i32 @function_12fcc(i32 %v2_8448, i32 1)
  store i32 %v2_844c, i32* %r0.global-to-local, align 4
  %v0_8450 = load i32, i32* @fp, align 4
  %v1_8450 = add i32 %v0_8450, 1
  store i32 %v1_8450, i32* @fp, align 4
  %v1_8454 = load i32, i32* @sl, align 4
  %v2_8454 = inttoptr i32 %v1_8454 to i32*
  store i32 %v2_844c, i32* %v2_8454, align 4
  %v0_8458 = load i32, i32* @r8, align 4
  %v0_845c = load i32, i32* @r4, align 4
  %v3_8460 = call i32 @function_11204(i32 %v2_844c, i32 %v0_8458, i32 %v0_845c)
  store i32 %v3_8460, i32* %r0.global-to-local, align 4
  %v0_8464 = load i32, i32* @fp, align 4
  %v1_8464 = load i32, i32* @r5, align 4
  %v9_8464 = icmp eq i32 %v0_8464, %v1_8464
  store i1 %v9_8464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8464, label %dec_label_pc_846c, label %dec_label_pc_8408

dec_label_pc_846c:                                ; preds = %dec_label_pc_8444, %bb
  %v0_846c = call i32 @function_1207c()
  store i32 %v0_846c, i32* @r0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8474 = inttoptr i32 %v0_846c to i32*
  store i32 0, i32* %v2_8474, align 4
  %v0_8478 = call i32 @function_11944()
  store i32 %v0_8478, i32* %r0.global-to-local, align 4
  %v7_847c = icmp eq i32 %v0_8478, -1
  %. = zext i1 %v7_847c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_8488 = icmp eq i32 %v0_8478, 0
  store i1 %v2_8488, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_8478, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_846c
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_849c

bb50:                                             ; preds = %dec_label_pc_846c
  %v2_8494 = icmp eq i1 %v7_847c, false
  store i1 %v2_8494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8494, label %dec_label_pc_84e4, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %dec_label_pc_842c, %dec_label_pc_8410, %dec_label_pc_8408, %dec_label_pc_83e4, %.thread14, %dec_label_pc_83d0, %dec_label_pc_83b8, %dec_label_pc_839c, %bb50
  store i32 %v2_8350, i32* %r3.global-to-local, align 4
  %v2_84a0 = icmp eq i32 %v2_8350, 0
  store i1 %v2_84a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84a0, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_849c
  store i32 %v2_8350, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_849c, %bb51
  store i32 33964, i32* @lr, align 4
  %v1_84a8 = xor i1 %v2_84a0, true
  call void @__pseudo_cond_branch(i1 %v1_84a8, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_84ac = load i32, i32* @r6, align 4
  %v2_84ac = icmp eq i32 %v0_84ac, 0
  store i1 %v2_84ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84ac, label %.dec_label_pc_82e0_crit_edge, label %dec_label_pc_84b4

.dec_label_pc_82e0_crit_edge:                     ; preds = %bb52
  %v1_82e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_82e0

dec_label_pc_84b4:                                ; preds = %bb52
  %v0_84b4 = load i32, i32* @r5, align 4
  %v2_84b4 = icmp eq i32 %v0_84b4, 0
  store i1 %v2_84b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84b4, label %dec_label_pc_84d8, label %dec_label_pc_84bc

dec_label_pc_84bc:                                ; preds = %dec_label_pc_84b4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_84c0

dec_label_pc_84c0:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_84bc
  %v1_84c0 = phi i32 [ 0, %dec_label_pc_84bc ], [ %v1_84cc, %dec_label_pc_84c0 ]
  %v0_84c0 = phi i32 [ %v0_84ac, %dec_label_pc_84bc ], [ %v0_84d8.pre, %dec_label_pc_84c0 ]
  %v4_84c0 = mul i32 %v1_84c0, 8
  %v5_84c0 = add i32 %v4_84c0, %v0_84c0
  %v6_84c0 = inttoptr i32 %v5_84c0 to i32*
  %v7_84c0 = load i32, i32* %v6_84c0, align 4
  store i32 %v7_84c0, i32* %r0.global-to-local, align 4
  %v2_84c4 = icmp eq i32 %v7_84c0, 0
  store i1 %v2_84c4, i1* %cpsr_z.global-to-local, align 1
  store i32 33996, i32* @lr, align 4
  %v1_84c8 = xor i1 %v2_84c4, true
  call void @__pseudo_cond_branch(i1 %v1_84c8, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_84cc = load i32, i32* @r4, align 4
  %v1_84cc = add i32 %v0_84cc, 1
  store i32 %v1_84cc, i32* @r4, align 4
  %v0_84d0 = load i32, i32* @r5, align 4
  %v9_84d0 = icmp eq i32 %v0_84d0, %v1_84cc
  store i1 %v9_84d0, i1* %cpsr_z.global-to-local, align 1
  %v0_84d8.pre = load i32, i32* @r6, align 4
  br i1 %v9_84d0, label %dec_label_pc_84d8, label %dec_label_pc_84c0

dec_label_pc_84d8:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_84b4
  %v0_84d8 = phi i32 [ %v0_84ac, %dec_label_pc_84b4 ], [ %v0_84d8.pre, %dec_label_pc_84c0 ]
  store i32 %v0_84d8, i32* @r0, align 4
  %v0_84dc = call i32 @function_13718()
  store i32 %v0_84dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_82e0

dec_label_pc_84e4:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_1824c.19 to i32), i32* %r3.global-to-local, align 4
  %v2_84e8 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_84e8 = zext i8 %v2_84e8 to i32
  store i32 %v3_84e8, i32* %r0.global-to-local, align 4
  %v2_84ec = icmp eq i8 %v2_84e8, 0
  store i1 %v2_84ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84ec, label %dec_label_pc_8550, label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_84e4
  store i32 ptrtoint (i32* @global_var_18250.21 to i32), i32* %r3.global-to-local, align 4
  %v2_84f8 = load i32, i32* @global_var_18250.21, align 4
  store i32 %v2_84f8, i32* @r1, align 4
  %v1_84fc = inttoptr i32 %v2_84f8 to i32*
  %v2_84fc = load i32, i32* %v1_84fc, align 4
  store i32 %v2_84fc, i32* %ip.global-to-local, align 4
  %v1_8504 = add i32 %v2_84fc, 4
  %v2_8504 = inttoptr i32 %v1_8504 to i8*
  %v3_8504 = load i8, i8* %v2_8504, align 1
  %v4_8504 = zext i8 %v3_8504 to i32
  store i32 %v4_8504, i32* %r3.global-to-local, align 4
  %v9_8508 = icmp eq i8 %v3_8504, %v3_8314
  store i1 %v9_8508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8508, label %dec_label_pc_8530, label %dec_label_pc_8510

dec_label_pc_8510:                                ; preds = %dec_label_pc_84f4, %dec_label_pc_851c
  %v0_8510 = phi i32 [ %v1_8510, %dec_label_pc_851c ], [ 0, %dec_label_pc_84f4 ]
  %v1_8510 = add i32 %v0_8510, 1
  %v9_8514 = icmp eq i32 %v1_8510, %v3_84e8
  store i1 %v9_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8514, label %dec_label_pc_8550, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8510
  %v4_851c = mul i32 %v1_8510, 4
  %v5_851c = add i32 %v4_851c, %v2_84f8
  %v6_851c = inttoptr i32 %v5_851c to i32*
  %v7_851c = load i32, i32* %v6_851c, align 4
  store i32 %v7_851c, i32* %ip.global-to-local, align 4
  %v1_8524 = add i32 %v7_851c, 4
  %v2_8524 = inttoptr i32 %v1_8524 to i8*
  %v3_8524 = load i8, i8* %v2_8524, align 1
  %v4_8524 = zext i8 %v3_8524 to i32
  store i32 %v4_8524, i32* %r3.global-to-local, align 4
  %v9_8528 = icmp eq i8 %v3_8524, %v3_8314
  store i1 %v9_8528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8528, label %dec_label_pc_8530, label %dec_label_pc_8510

dec_label_pc_8530:                                ; preds = %dec_label_pc_851c, %dec_label_pc_84f4
  %v0_8544 = phi i32 [ %v2_84fc, %dec_label_pc_84f4 ], [ %v7_851c, %dec_label_pc_851c ]
  store i32 %v5_8304, i32* %r0.global-to-local, align 4
  %v0_8538 = load i32, i32* @sb, align 4
  store i32 %v0_8538, i32* @r1, align 4
  %v0_8540 = load i32, i32* @r5, align 4
  store i32 %v0_8540, i32* %r3.global-to-local, align 4
  %v1_8544 = inttoptr i32 %v0_8544 to i32*
  %v2_8544 = load i32, i32* %v1_8544, align 4
  store i32 %v2_8544, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_8544)
  br label %dec_label_pc_8550

dec_label_pc_8550:                                ; preds = %dec_label_pc_8510, %dec_label_pc_84e4, %dec_label_pc_8530
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8554 = call i32 @function_13cb8(i32 0)
  store i32 %v1_8554, i32* %r0.global-to-local, align 4
  %v0_8558 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8558, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_8550
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8550, %bb54
  ret i32 %v1_8554

; uselistorder directives
  uselistorder i1 %v9_8528, { 1, 0 }
  uselistorder i32 %v1_8510, { 1, 2, 0 }
  uselistorder i1 %v9_8508, { 1, 0 }
  uselistorder i32 %v0_84dc, { 1, 0 }
  uselistorder i32 %v1_84cc, { 1, 2, 0 }
  uselistorder i1 %v2_84a0, { 0, 2, 1 }
  uselistorder i1 %v2_8494, { 1, 0 }
  uselistorder i1 %v7_847c, { 1, 0 }
  uselistorder i32 %v0_8478, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8464, { 1, 0 }
  uselistorder i32 %v2_8434, { 1, 0 }
  uselistorder i32 %v1_8430, { 2, 0, 1, 3 }
  uselistorder i32 %v4_842c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_8410, { 1, 0 }
  uselistorder i32 %v3_83a4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8394, { 1, 0 }
  uselistorder i32 %v1_8390, { 1, 0 }
  uselistorder i32 %v2_8350, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_8324, { 1, 0, 2, 3 }
  uselistorder i32 %v1_82f0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_82ec, { 0, 2, 1, 3 }
  uselistorder i32 %v0_82d8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 15, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 19, 17, 16, 18, 2, 20, 21, 22, 3, 4, 6, 5, 12, 13, 7, 8, 9, 10, 11, 14, 15, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 24, 21, 22, 23, 25, 26, 27, 28, 29, 30, 1, 0, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_8550, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8510, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_849c, { 8, 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8444, { 1, 0 }
  uselistorder label %dec_label_pc_82e0, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @function_8560(i32 %arg1) local_unnamed_addr {
dec_label_pc_8560:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8560 = load i32, i32* @r4, align 4
  store i32 %v3_8560, i32* %stack_var_-24, align 4
  %v6_8560 = load i32, i32* @r5, align 4
  %v9_8560 = load i32, i32* @r6, align 4
  %v12_8560 = load i32, i32* @r7, align 4
  %v15_8560 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_856c = call i32 @function_12fcc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_1824c.19 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_18250.21 to i32), i32* @r6, align 4
  store i32 44636, i32* %r2.global-to-local, align 4
  store i32 %v2_856c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1824d.25 to i32), i32* %r1.global-to-local, align 4
  %v2_858c = load i32, i32* @global_var_18250.21, align 4
  %v2_8590 = inttoptr i32 %v2_856c to i32*
  store i32 44636, i32* %v2_8590, align 4
  %v3_8594 = load i32, i32* @r4, align 4
  %v4_8594 = add i32 %v3_8594, 4
  %v5_8594 = inttoptr i32 %v4_8594 to i8*
  store i8 0, i8* %v5_8594, align 1
  %v0_8598 = load i32, i32* %r1.global-to-local, align 4
  %v3_8598 = mul i32 %v0_8598, 4
  store i32 %v3_8598, i32* %r1.global-to-local, align 4
  %v5_859c = inttoptr i32 %v2_858c to i32*
  %v6_859c = call i32 @function_13100(i32* %v5_859c, i32 %v3_8598, i32 44636, i32 0)
  %v2_85a0 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_85a0 = zext i8 %v2_85a0 to i32
  store i32 %v6_859c, i32* %r2.global-to-local, align 4
  %v0_85a8 = load i32, i32* @r4, align 4
  %v5_85a8 = mul nuw nsw i32 %v3_85a0, 4
  %v6_85a8 = add i32 %v5_85a8, %v6_859c
  %v7_85a8 = inttoptr i32 %v6_85a8 to i32*
  store i32 %v0_85a8, i32* %v7_85a8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1824d.25 to i32), i32* %r3.global-to-local, align 4
  %v1_85b8 = load i32, i32* @r6, align 4
  %v2_85b8 = inttoptr i32 %v1_85b8 to i32*
  store i32 %v6_859c, i32* %v2_85b8, align 4
  %v0_85bc = load i32, i32* %r3.global-to-local, align 4
  %v1_85bc = trunc i32 %v0_85bc to i8
  %v2_85bc = load i32, i32* @r5, align 4
  %v3_85bc = inttoptr i32 %v2_85bc to i8*
  store i8 %v1_85bc, i8* %v3_85bc, align 1
  %v2_85c0 = call i32 @function_12fcc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_b428.27 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  store i32 %v2_85c0, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_1824d.25 to i32), i32* %r1.global-to-local, align 4
  %v2_85d8 = load i32, i32* @global_var_18250.21, align 4
  %v2_85dc = inttoptr i32 %v2_85c0 to i32*
  store i32 ptrtoint (i32* @global_var_b428.27 to i32), i32* %v2_85dc, align 4
  %v0_85e0 = load i32, i32* @r7, align 4
  %v1_85e0 = trunc i32 %v0_85e0 to i8
  %v2_85e0 = load i32, i32* @r4, align 4
  %v3_85e0 = add i32 %v2_85e0, 4
  %v4_85e0 = inttoptr i32 %v3_85e0 to i8*
  store i8 %v1_85e0, i8* %v4_85e0, align 1
  %v0_85e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_85e4 = mul i32 %v0_85e4, 4
  store i32 %v3_85e4, i32* %r1.global-to-local, align 4
  %v4_85e8 = inttoptr i32 %v2_85d8 to i32*
  %v5_85e8 = call i32 @function_13100(i32* %v4_85e8, i32 %v3_85e4, i32 %v6_859c, i32 ptrtoint (i32* @global_var_b428.27 to i32))
  %v2_85ec = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_85ec = zext i8 %v2_85ec to i32
  store i32 %v3_85ec, i32* %r3.global-to-local, align 4
  store i32 %v5_85e8, i32* %r2.global-to-local, align 4
  %v0_85f4 = load i32, i32* @r4, align 4
  %v5_85f4 = mul nuw nsw i32 %v3_85ec, 4
  %v6_85f4 = add i32 %v5_85f4, %v5_85e8
  %v7_85f4 = inttoptr i32 %v6_85f4 to i32*
  store i32 %v0_85f4, i32* %v7_85f4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_85fc = load i32, i32* %r3.global-to-local, align 4
  %v1_85fc = load i32, i32* @r7, align 4
  %v2_85fc = add i32 %v1_85fc, %v0_85fc
  store i32 %v2_85fc, i32* %r3.global-to-local, align 4
  %v1_8604 = trunc i32 %v2_85fc to i8
  %v2_8604 = load i32, i32* @r5, align 4
  %v3_8604 = inttoptr i32 %v2_8604 to i8*
  store i8 %v1_8604, i8* %v3_8604, align 1
  %v0_8608 = load i32, i32* %r2.global-to-local, align 4
  %v1_8608 = load i32, i32* @r6, align 4
  %v2_8608 = inttoptr i32 %v1_8608 to i32*
  store i32 %v0_8608, i32* %v2_8608, align 4
  %v2_860c = call i32 @function_12fcc(i32 %v1_85fc, i32 8)
  %v2_8610 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8610 = zext i8 %v2_8610 to i32
  store i32 ptrtoint (i32* @global_var_b894.29 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_860c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_8620 = load i32, i32* @r7, align 4
  %v2_8620 = add i32 %v1_8620, %v3_8610
  store i32 %v2_8620, i32* %r1.global-to-local, align 4
  %v2_8624 = load i32, i32* @global_var_18250.21, align 4
  %v2_8628 = inttoptr i32 %v2_860c to i32*
  store i32 ptrtoint (i32* @global_var_b894.29 to i32), i32* %v2_8628, align 4
  %v3_862c = load i32, i32* @r4, align 4
  %v4_862c = add i32 %v3_862c, 4
  %v5_862c = inttoptr i32 %v4_862c to i8*
  store i8 2, i8* %v5_862c, align 1
  %v0_8630 = load i32, i32* %r1.global-to-local, align 4
  %v3_8630 = mul i32 %v0_8630, 4
  store i32 %v3_8630, i32* %r1.global-to-local, align 4
  %v5_8634 = inttoptr i32 %v2_8624 to i32*
  %v6_8634 = call i32 @function_13100(i32* %v5_8634, i32 %v3_8630, i32 ptrtoint (i32* @global_var_b894.29 to i32), i32 2)
  %v2_8638 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8638 = zext i8 %v2_8638 to i32
  store i32 %v3_8638, i32* %r3.global-to-local, align 4
  store i32 %v6_8634, i32* %r2.global-to-local, align 4
  %v0_8640 = load i32, i32* @r4, align 4
  %v5_8640 = mul nuw nsw i32 %v3_8638, 4
  %v6_8640 = add i32 %v5_8640, %v6_8634
  %v7_8640 = inttoptr i32 %v6_8640 to i32*
  store i32 %v0_8640, i32* %v7_8640, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8648 = load i32, i32* %r3.global-to-local, align 4
  %v1_8648 = load i32, i32* @r7, align 4
  %v2_8648 = add i32 %v1_8648, %v0_8648
  store i32 %v2_8648, i32* %r3.global-to-local, align 4
  %v1_8650 = load i32, i32* @r6, align 4
  %v2_8650 = inttoptr i32 %v1_8650 to i32*
  store i32 %v6_8634, i32* %v2_8650, align 4
  %v0_8654 = load i32, i32* %r3.global-to-local, align 4
  %v1_8654 = trunc i32 %v0_8654 to i8
  %v2_8654 = load i32, i32* @r5, align 4
  %v3_8654 = inttoptr i32 %v2_8654 to i8*
  store i8 %v1_8654, i8* %v3_8654, align 1
  %v2_8658 = call i32 @function_12fcc(i32 %v1_8648, i32 8)
  %v2_865c = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_865c = zext i8 %v2_865c to i32
  store i32 ptrtoint (i32* @global_var_ab9c.31 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r8, align 4
  store i32 %v2_8658, i32* @r4, align 4
  %v1_866c = load i32, i32* @r7, align 4
  %v2_866c = add i32 %v1_866c, %v3_865c
  store i32 %v2_866c, i32* %r1.global-to-local, align 4
  %v2_8670 = load i32, i32* @global_var_18250.21, align 4
  %v2_8674 = inttoptr i32 %v2_8658 to i32*
  store i32 ptrtoint (i32* @global_var_ab9c.31 to i32), i32* %v2_8674, align 4
  %v0_8678 = load i32, i32* @r8, align 4
  %v1_8678 = trunc i32 %v0_8678 to i8
  %v2_8678 = load i32, i32* @r4, align 4
  %v3_8678 = add i32 %v2_8678, 4
  %v4_8678 = inttoptr i32 %v3_8678 to i8*
  store i8 %v1_8678, i8* %v4_8678, align 1
  %v0_867c = load i32, i32* %r1.global-to-local, align 4
  %v3_867c = mul i32 %v0_867c, 4
  store i32 %v3_867c, i32* %r1.global-to-local, align 4
  %v4_8680 = inttoptr i32 %v2_8670 to i32*
  %v5_8680 = call i32 @function_13100(i32* %v4_8680, i32 %v3_867c, i32 %v6_8634, i32 ptrtoint (i32* @global_var_ab9c.31 to i32))
  %v2_8684 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8684 = zext i8 %v2_8684 to i32
  store i32 %v3_8684, i32* %r3.global-to-local, align 4
  store i32 %v5_8680, i32* %r2.global-to-local, align 4
  %v0_868c = load i32, i32* @r4, align 4
  %v5_868c = mul nuw nsw i32 %v3_8684, 4
  %v6_868c = add i32 %v5_868c, %v5_8680
  %v7_868c = inttoptr i32 %v6_868c to i32*
  store i32 %v0_868c, i32* %v7_868c, align 4
  %v0_8690 = load i32, i32* @r8, align 4
  store i32 %v0_8690, i32* %r1.global-to-local, align 4
  %v0_8694 = load i32, i32* %r3.global-to-local, align 4
  %v1_8694 = load i32, i32* @r7, align 4
  %v2_8694 = add i32 %v1_8694, %v0_8694
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v1_869c = trunc i32 %v2_8694 to i8
  %v2_869c = load i32, i32* @r5, align 4
  %v3_869c = inttoptr i32 %v2_869c to i8*
  store i8 %v1_869c, i8* %v3_869c, align 1
  %v0_86a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_86a0 = load i32, i32* @r6, align 4
  %v2_86a0 = inttoptr i32 %v1_86a0 to i32*
  store i32 %v0_86a0, i32* %v2_86a0, align 4
  %v2_86a4 = call i32 @function_12fcc(i32 %v1_8694, i32 %v0_8690)
  %v2_86a8 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_86a8 = zext i8 %v2_86a8 to i32
  store i32 ptrtoint (i32* @global_var_a4c4.33 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86a4, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_86b8 = load i32, i32* @r7, align 4
  %v2_86b8 = add i32 %v1_86b8, %v3_86a8
  store i32 %v2_86b8, i32* %r1.global-to-local, align 4
  %v2_86bc = load i32, i32* @global_var_18250.21, align 4
  %v2_86c0 = inttoptr i32 %v2_86a4 to i32*
  store i32 ptrtoint (i32* @global_var_a4c4.33 to i32), i32* %v2_86c0, align 4
  %v3_86c4 = load i32, i32* @r4, align 4
  %v4_86c4 = add i32 %v3_86c4, 4
  %v5_86c4 = inttoptr i32 %v4_86c4 to i8*
  store i8 3, i8* %v5_86c4, align 1
  %v0_86c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_86c8 = mul i32 %v0_86c8, 4
  store i32 %v3_86c8, i32* %r1.global-to-local, align 4
  %v5_86cc = inttoptr i32 %v2_86bc to i32*
  %v6_86cc = call i32 @function_13100(i32* %v5_86cc, i32 %v3_86c8, i32 ptrtoint (i32* @global_var_a4c4.33 to i32), i32 3)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 %v3_86d0, i32* %r3.global-to-local, align 4
  store i32 %v6_86cc, i32* %r2.global-to-local, align 4
  %v0_86d8 = load i32, i32* @r4, align 4
  %v5_86d8 = mul nuw nsw i32 %v3_86d0, 4
  %v6_86d8 = add i32 %v5_86d8, %v6_86cc
  %v7_86d8 = inttoptr i32 %v6_86d8 to i32*
  store i32 %v0_86d8, i32* %v7_86d8, align 4
  %v0_86dc = load i32, i32* @r8, align 4
  store i32 %v0_86dc, i32* %r1.global-to-local, align 4
  %v0_86e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r7, align 4
  %v2_86e0 = add i32 %v1_86e0, %v0_86e0
  store i32 %v2_86e0, i32* %r3.global-to-local, align 4
  %v1_86e8 = trunc i32 %v2_86e0 to i8
  %v2_86e8 = load i32, i32* @r5, align 4
  %v3_86e8 = inttoptr i32 %v2_86e8 to i8*
  store i8 %v1_86e8, i8* %v3_86e8, align 1
  %v0_86ec = load i32, i32* %r2.global-to-local, align 4
  %v1_86ec = load i32, i32* @r6, align 4
  %v2_86ec = inttoptr i32 %v1_86ec to i32*
  store i32 %v0_86ec, i32* %v2_86ec, align 4
  %v2_86f0 = call i32 @function_12fcc(i32 %v1_86e0, i32 %v0_86dc)
  %v2_86f4 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_86f4 = zext i8 %v2_86f4 to i32
  store i32 ptrtoint (i32* @global_var_9da0.35 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86f0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8704 = load i32, i32* @r7, align 4
  %v2_8704 = add i32 %v1_8704, %v3_86f4
  store i32 %v2_8704, i32* %r1.global-to-local, align 4
  %v2_8708 = load i32, i32* @global_var_18250.21, align 4
  %v2_870c = inttoptr i32 %v2_86f0 to i32*
  store i32 ptrtoint (i32* @global_var_9da0.35 to i32), i32* %v2_870c, align 4
  %v3_8710 = load i32, i32* @r4, align 4
  %v4_8710 = add i32 %v3_8710, 4
  %v5_8710 = inttoptr i32 %v4_8710 to i8*
  store i8 4, i8* %v5_8710, align 1
  %v0_8714 = load i32, i32* %r1.global-to-local, align 4
  %v3_8714 = mul i32 %v0_8714, 4
  store i32 %v3_8714, i32* %r1.global-to-local, align 4
  %v5_8718 = inttoptr i32 %v2_8708 to i32*
  %v6_8718 = call i32 @function_13100(i32* %v5_8718, i32 %v3_8714, i32 ptrtoint (i32* @global_var_9da0.35 to i32), i32 4)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 %v3_871c, i32* %r3.global-to-local, align 4
  store i32 %v6_8718, i32* %r2.global-to-local, align 4
  %v0_8724 = load i32, i32* @r4, align 4
  %v5_8724 = mul nuw nsw i32 %v3_871c, 4
  %v6_8724 = add i32 %v5_8724, %v6_8718
  %v7_8724 = inttoptr i32 %v6_8724 to i32*
  store i32 %v0_8724, i32* %v7_8724, align 4
  %v0_8728 = load i32, i32* @r8, align 4
  store i32 %v0_8728, i32* %r1.global-to-local, align 4
  %v0_872c = load i32, i32* %r3.global-to-local, align 4
  %v1_872c = load i32, i32* @r7, align 4
  %v2_872c = add i32 %v1_872c, %v0_872c
  store i32 %v2_872c, i32* %r3.global-to-local, align 4
  %v1_8734 = trunc i32 %v2_872c to i8
  %v2_8734 = load i32, i32* @r5, align 4
  %v3_8734 = inttoptr i32 %v2_8734 to i8*
  store i8 %v1_8734, i8* %v3_8734, align 1
  %v0_8738 = load i32, i32* %r2.global-to-local, align 4
  %v1_8738 = load i32, i32* @r6, align 4
  %v2_8738 = inttoptr i32 %v1_8738 to i32*
  store i32 %v0_8738, i32* %v2_8738, align 4
  %v2_873c = call i32 @function_12fcc(i32 %v1_872c, i32 %v0_8728)
  %v2_8740 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8740 = zext i8 %v2_8740 to i32
  store i32 ptrtoint (i32* @global_var_9574.37 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_873c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8750 = load i32, i32* @r7, align 4
  %v2_8750 = add i32 %v1_8750, %v3_8740
  store i32 %v2_8750, i32* %r1.global-to-local, align 4
  %v2_8754 = load i32, i32* @global_var_18250.21, align 4
  %v2_8758 = inttoptr i32 %v2_873c to i32*
  store i32 ptrtoint (i32* @global_var_9574.37 to i32), i32* %v2_8758, align 4
  %v3_875c = load i32, i32* @r4, align 4
  %v4_875c = add i32 %v3_875c, 4
  %v5_875c = inttoptr i32 %v4_875c to i8*
  store i8 5, i8* %v5_875c, align 1
  %v0_8760 = load i32, i32* %r1.global-to-local, align 4
  %v3_8760 = mul i32 %v0_8760, 4
  store i32 %v3_8760, i32* %r1.global-to-local, align 4
  %v5_8764 = inttoptr i32 %v2_8754 to i32*
  %v6_8764 = call i32 @function_13100(i32* %v5_8764, i32 %v3_8760, i32 ptrtoint (i32* @global_var_9574.37 to i32), i32 5)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 %v3_8768, i32* %r3.global-to-local, align 4
  store i32 %v6_8764, i32* %r2.global-to-local, align 4
  %v0_8770 = load i32, i32* @r4, align 4
  %v5_8770 = mul nuw nsw i32 %v3_8768, 4
  %v6_8770 = add i32 %v5_8770, %v6_8764
  %v7_8770 = inttoptr i32 %v6_8770 to i32*
  store i32 %v0_8770, i32* %v7_8770, align 4
  %v0_8774 = load i32, i32* @r8, align 4
  store i32 %v0_8774, i32* %r1.global-to-local, align 4
  %v0_8778 = load i32, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r7, align 4
  %v2_8778 = add i32 %v1_8778, %v0_8778
  store i32 %v2_8778, i32* %r3.global-to-local, align 4
  %v1_8780 = trunc i32 %v2_8778 to i8
  %v2_8780 = load i32, i32* @r5, align 4
  %v3_8780 = inttoptr i32 %v2_8780 to i8*
  store i8 %v1_8780, i8* %v3_8780, align 1
  %v0_8784 = load i32, i32* %r2.global-to-local, align 4
  %v1_8784 = load i32, i32* @r6, align 4
  %v2_8784 = inttoptr i32 %v1_8784 to i32*
  store i32 %v0_8784, i32* %v2_8784, align 4
  %v2_8788 = call i32 @function_12fcc(i32 %v1_8778, i32 %v0_8774)
  %v2_878c = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_878c = zext i8 %v2_878c to i32
  store i32 ptrtoint (i32* @global_var_8f14.39 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8788, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_879c = load i32, i32* @r7, align 4
  %v2_879c = add i32 %v1_879c, %v3_878c
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_87a0 = load i32, i32* @global_var_18250.21, align 4
  %v2_87a4 = inttoptr i32 %v2_8788 to i32*
  store i32 ptrtoint (i32* @global_var_8f14.39 to i32), i32* %v2_87a4, align 4
  %v3_87a8 = load i32, i32* @r4, align 4
  %v4_87a8 = add i32 %v3_87a8, 4
  %v5_87a8 = inttoptr i32 %v4_87a8 to i8*
  store i8 6, i8* %v5_87a8, align 1
  %v0_87ac = load i32, i32* %r1.global-to-local, align 4
  %v3_87ac = mul i32 %v0_87ac, 4
  store i32 %v3_87ac, i32* %r1.global-to-local, align 4
  %v5_87b0 = inttoptr i32 %v2_87a0 to i32*
  %v6_87b0 = call i32 @function_13100(i32* %v5_87b0, i32 %v3_87ac, i32 ptrtoint (i32* @global_var_8f14.39 to i32), i32 6)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 %v3_87b4, i32* %r3.global-to-local, align 4
  store i32 %v6_87b0, i32* %r2.global-to-local, align 4
  %v0_87bc = load i32, i32* @r4, align 4
  %v5_87bc = mul nuw nsw i32 %v3_87b4, 4
  %v6_87bc = add i32 %v5_87bc, %v6_87b0
  %v7_87bc = inttoptr i32 %v6_87bc to i32*
  store i32 %v0_87bc, i32* %v7_87bc, align 4
  %v0_87c0 = load i32, i32* @r8, align 4
  store i32 %v0_87c0, i32* %r1.global-to-local, align 4
  %v0_87c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r7, align 4
  %v2_87c4 = add i32 %v1_87c4, %v0_87c4
  store i32 %v2_87c4, i32* %r3.global-to-local, align 4
  %v1_87cc = trunc i32 %v2_87c4 to i8
  %v2_87cc = load i32, i32* @r5, align 4
  %v3_87cc = inttoptr i32 %v2_87cc to i8*
  store i8 %v1_87cc, i8* %v3_87cc, align 1
  %v0_87d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_87d0 = load i32, i32* @r6, align 4
  %v2_87d0 = inttoptr i32 %v1_87d0 to i32*
  store i32 %v0_87d0, i32* %v2_87d0, align 4
  %v2_87d4 = call i32 @function_12fcc(i32 %v1_87c4, i32 %v0_87c0)
  %v2_87d8 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_87d8 = zext i8 %v2_87d8 to i32
  store i32 ptrtoint (i32* @global_var_884c.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87d4, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_87e8 = load i32, i32* @r7, align 4
  %v2_87e8 = add i32 %v1_87e8, %v3_87d8
  store i32 %v2_87e8, i32* %r1.global-to-local, align 4
  %v2_87ec = load i32, i32* @global_var_18250.21, align 4
  %v2_87f0 = inttoptr i32 %v2_87d4 to i32*
  store i32 ptrtoint (i32* @global_var_884c.41 to i32), i32* %v2_87f0, align 4
  %v3_87f4 = load i32, i32* @r4, align 4
  %v4_87f4 = add i32 %v3_87f4, 4
  %v5_87f4 = inttoptr i32 %v4_87f4 to i8*
  store i8 7, i8* %v5_87f4, align 1
  %v0_87f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_87f8 = mul i32 %v0_87f8, 4
  store i32 %v3_87f8, i32* %r1.global-to-local, align 4
  %v5_87fc = inttoptr i32 %v2_87ec to i32*
  %v6_87fc = call i32 @function_13100(i32* %v5_87fc, i32 %v3_87f8, i32 ptrtoint (i32* @global_var_884c.41 to i32), i32 7)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_1824c.19 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 %v3_8800, i32* %r3.global-to-local, align 4
  %v1_8804 = load i32, i32* @r6, align 4
  %v2_8804 = inttoptr i32 %v1_8804 to i32*
  store i32 %v6_87fc, i32* %v2_8804, align 4
  %v0_8808 = load i32, i32* @r4, align 4
  %v2_8808 = load i32, i32* %r3.global-to-local, align 4
  %v5_8808 = mul i32 %v2_8808, 4
  %v6_8808 = add i32 %v5_8808, %v6_87fc
  %v7_8808 = inttoptr i32 %v6_8808 to i32*
  store i32 %v0_8808, i32* %v7_8808, align 4
  %v0_880c = load i32, i32* %r3.global-to-local, align 4
  %v1_880c = load i32, i32* @r7, align 4
  %v2_880c = add i32 %v1_880c, %v0_880c
  store i32 %v2_880c, i32* %r2.global-to-local, align 4
  %v1_8814 = trunc i32 %v2_880c to i8
  %v2_8814 = load i32, i32* @r5, align 4
  %v3_8814 = inttoptr i32 %v2_8814 to i8*
  store i8 %v1_8814, i8* %v3_8814, align 1
  %v2_8818 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8818, i32* @r4, align 4
  store i32 %v6_8560, i32* @r5, align 4
  store i32 %v9_8560, i32* @r6, align 4
  store i32 %v12_8560, i32* @r7, align 4
  store i32 %v15_8560, i32* @r8, align 4
  ret i32 %v1_880c

; uselistorder directives
  uselistorder i32 %v1_880c, { 1, 0 }
  uselistorder i32 %v3_87f8, { 1, 0 }
  uselistorder i32 %v1_87c4, { 1, 0 }
  uselistorder i32 %v3_87ac, { 1, 0 }
  uselistorder i32 %v1_8778, { 1, 0 }
  uselistorder i32 %v3_8760, { 1, 0 }
  uselistorder i32 %v1_872c, { 1, 0 }
  uselistorder i32 %v3_8714, { 1, 0 }
  uselistorder i32 %v1_86e0, { 1, 0 }
  uselistorder i32 %v3_86c8, { 1, 0 }
  uselistorder i32 %v1_8694, { 1, 0 }
  uselistorder i32 %v3_867c, { 1, 0 }
  uselistorder i32 %v1_8648, { 1, 0 }
  uselistorder i32 %v6_8634, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8630, { 1, 0 }
  uselistorder i32 %v1_85fc, { 1, 0 }
  uselistorder i32 %v3_85e4, { 1, 0 }
  uselistorder i32 %v2_85c0, { 1, 0 }
  uselistorder i32 %v6_859c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8598, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1824c.19 to i8*), { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_1824d.25 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_1824c.19, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1824c.19 to i32), { 1, 0 }
}

define i32 @function_884c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_884c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_884c = load i32, i32* @r4, align 4
  %v24_884c = load i32, i32* @fp, align 4
  %v27_884c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8878 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_887c = load i32, i32* @r4, align 4
  store i32 %v0_887c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_8888 = load i32, i32* @sb, align 4
  store i32 %v0_8888, i32* %r3.global-to-local, align 4
  %v0_888c = load i32, i32* @r5, align 4
  store i32 %v0_888c, i32* %r0.global-to-local, align 4
  %v5_8890 = inttoptr i32 %v0_887c to i32*
  %v6_8890 = call i32 @function_8258(i32 %v0_888c, i32* %v5_8890, i32 2, i32 %v0_8888, i32 %v2_8878)
  %v1_889c = urem i32 %v6_8890, 256
  store i32 %v1_889c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_88a8 = load i32, i32* @r4, align 4
  store i32 %v0_88a8, i32* %r1.global-to-local, align 4
  %v0_88ac = load i32, i32* @r5, align 4
  store i32 %v0_88ac, i32* %r0.global-to-local, align 4
  %v5_88b0 = trunc i32 %v6_8890 to i8
  %v6_88b4 = inttoptr i32 %v0_88a8 to i32*
  %v7_88b4 = call i32 @function_8258(i32 %v0_88ac, i32* %v6_88b4, i32 3, i32 65535, i32 %v6_8890)
  %v0_88b8 = load i32, i32* @r4, align 4
  store i32 %v0_88b8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_88b4, i32* %fp.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  store i32 %v0_88c8, i32* %r0.global-to-local, align 4
  %v5_88cc = inttoptr i32 %v0_88b8 to i32*
  %v6_88cc = call i32 @function_8258(i32 %v0_88c8, i32* %v5_88cc, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_88d4 = urem i32 %v6_88cc, 256
  store i32 %v1_88d4, i32* %ip.global-to-local, align 4
  %v0_88d8 = load i32, i32* @r4, align 4
  store i32 %v0_88d8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_88e4 = load i32, i32* @r5, align 4
  store i32 %v0_88e4, i32* %r0.global-to-local, align 4
  %v6_88ec = inttoptr i32 %v0_88d8 to i32*
  %v7_88ec = call i32 @function_8258(i32 %v0_88e4, i32* %v6_88ec, i32 5, i32 1, i32 %v1_88d4)
  %v1_88f8 = urem i32 %v7_88ec, 256
  store i32 %v1_88f8, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8904 = load i32, i32* @r4, align 4
  store i32 %v0_8904, i32* %r1.global-to-local, align 4
  %v0_8908 = load i32, i32* @r5, align 4
  store i32 %v0_8908, i32* %r0.global-to-local, align 4
  %v5_8910 = inttoptr i32 %v0_8904 to i32*
  %v6_8910 = call i32 @function_8258(i32 %v0_8908, i32* %v5_8910, i32 6, i32 65535, i32 %v1_88f8)
  %v0_891c = load i32, i32* @r4, align 4
  store i32 %v0_891c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_8928 = load i32, i32* @r5, align 4
  store i32 %v0_8928, i32* %r0.global-to-local, align 4
  %v5_892c = inttoptr i32 %v0_891c to i32*
  %v6_892c = call i32 @function_8258(i32 %v0_8928, i32* %v5_892c, i32 7, i32 65535, i32 %v6_8910)
  %v0_8930 = load i32, i32* @r4, align 4
  store i32 %v0_8930, i32* %r1.global-to-local, align 4
  %v0_8934 = load i32, i32* @sb, align 4
  store i32 %v0_8934, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_892c, i32* @r8, align 4
  %v0_8940 = load i32, i32* @r5, align 4
  store i32 %v0_8940, i32* %r0.global-to-local, align 4
  %v5_8944 = inttoptr i32 %v0_8930 to i32*
  %v6_8944 = call i32 @function_8258(i32 %v0_8940, i32* %v5_8944, i32 %v0_8934, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8954 = load i32, i32* @r4, align 4
  store i32 %v0_8954, i32* %r1.global-to-local, align 4
  %v0_8958 = load i32, i32* @r5, align 4
  store i32 %v0_8958, i32* %r0.global-to-local, align 4
  %v5_895c = inttoptr i32 %v0_8954 to i32*
  %v6_895c = call i32 @function_8258(i32 %v0_8958, i32* %v5_895c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_8964 = urem i32 %v6_895c, 256
  store i32 %v1_8964, i32* %ip.global-to-local, align 4
  %v0_8968 = load i32, i32* @r4, align 4
  store i32 %v0_8968, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_8970 = load i32, i32* @sb, align 4
  store i32 %v0_8970, i32* %r3.global-to-local, align 4
  %v0_8974 = load i32, i32* @r5, align 4
  store i32 %v0_8974, i32* %r0.global-to-local, align 4
  %v5_897c = inttoptr i32 %v0_8968 to i32*
  %v6_897c = call i32 @function_8258(i32 %v0_8974, i32* %v5_897c, i32 18, i32 %v0_8970, i32 %v1_8964)
  %v0_8984 = load i32, i32* @r4, align 4
  store i32 %v0_8984, i32* %r1.global-to-local, align 4
  %v2_8988 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_8988, i32* %r3.global-to-local, align 4
  store i32 %v6_897c, i32* @r7, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_8994 = load i32, i32* @r5, align 4
  store i32 %v0_8994, i32* %r0.global-to-local, align 4
  %v5_8998 = inttoptr i32 %v0_8984 to i32*
  %v6_8998 = call i32 @function_8258(i32 %v0_8994, i32* %v5_8998, i32 19, i32 %v2_8988, i32 ptrtoint (i32* @0 to i32))
  %v0_89a0 = load i32, i32* @sb, align 4
  store i32 %v0_89a0, i32* %r0.global-to-local, align 4
  %v1_89a4 = inttoptr i32 %v0_89a0 to i32*
  %v2_89a4 = call i32 @function_118d4(i32* %v1_89a4)
  %v1_89a8 = load i32, i32* @r6, align 4
  %v2_89a8 = add i32 %v1_89a8, %v2_89a4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_89bc = call i32 @function_12464(i32 2, i32 3, i32 6)
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v7_89c0 = icmp eq i32 %v3_89bc, -1
  store i1 %v7_89c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_89c0, label %dec_label_pc_8ef8, label %dec_label_pc_89cc

dec_label_pc_89cc:                                ; preds = %dec_label_pc_884c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_89d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_89d4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_89dc = load i32, i32* @sb, align 4
  store i32 %v0_89dc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_89e8 = call i32 @function_12420(i32 %v3_89bc, i32 %v0_89dc, i32 3, i32 %v6_89d4, i32 4)
  store i32 %v5_89e8, i32* %r0.global-to-local, align 4
  %v7_89ec = icmp eq i32 %v5_89e8, -1
  store i1 %v7_89ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_89ec, label %dec_label_pc_8f04, label %dec_label_pc_89f4

dec_label_pc_89f4:                                ; preds = %dec_label_pc_89cc
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_89fc = mul i32 %v6_8910, 65536
  store i32 %v3_89fc, i32* %r1.global-to-local, align 4
  %v0_8a00 = load i32, i32* @r8, align 4
  %v0_8a04 = load i32, i32* %fp.global-to-local, align 4
  %v3_8a04 = mul i32 %v0_8a04, 65536
  store i32 %v3_8a04, i32* %fp.global-to-local, align 4
  %v0_8a08 = load i32, i32* @r7, align 4
  %v1_8a08 = urem i32 %v0_8a08, 256
  store i32 %v1_8a08, i32* @r7, align 4
  %v3_8a0c = urem i32 %v0_8a04, 65536
  store i32 %v3_8a0c, i32* %r3.global-to-local, align 4
  %v3_8a10 = urem i32 %v6_8910, 65536
  store i32 %v3_8a10, i32* %ip.global-to-local, align 4
  %v3_8a14 = urem i32 %v0_8a00, 65536
  %v2_8a18 = icmp eq i32 %arg2, 0
  store i1 %v2_8a18, i1* %cpsr_z.global-to-local, align 1
  %v0_8a28 = load i32, i32* @sb, align 4
  store i32 %v0_8a28, i32* %stack_var_-44, align 4
  br i1 %v2_8a18, label %dec_label_pc_8c30.preheader, label %dec_label_pc_8a3c

dec_label_pc_8a3c:                                ; preds = %dec_label_pc_89f4
  %v3_8a00 = mul i32 %v0_8a00, 65536
  %v3_8a40 = mul i32 %v6_8944, 65536
  %v1_8a44 = add i32 %v3_8a40, 4325376
  %v0_8a04.not = or i32 %v0_8a04, -65536
  %v1_8a48 = xor i32 %v0_8a04.not, 65535
  %v3_8a54 = mul i32 %v1_8a48, 65536
  store i32 %v3_8a54, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_8a44, 256
  %v3_8a6c = and i32 %tmp68, 65280
  store i32 %v3_8a6c, i32* %r3.global-to-local, align 4
  %v1_8a70 = add i32 %v3_8a40, 524288
  %tmp69 = mul i32 %v0_8a04, 256
  %v3_8a74 = and i32 %tmp69, 65280
  %v1_8a78 = add i32 %v3_8a40, 1835008
  %tmp70 = mul nsw i32 %v1_8a48, 256
  %v3_8a7c = and i32 %tmp70, 65280
  %v4_8a80 = udiv i32 %v1_8a44, 16777216
  %v5_8a80 = or i32 %v4_8a80, %tmp68
  %v3_8a88 = udiv i32 %v1_8a78, 256
  %v5_8a8c = trunc i32 %v5_8a80 to i16
  %tmp71 = udiv i32 %v0_8a04, 256
  %v4_8a90 = urem i32 %tmp71, 256
  %v5_8a90 = or i32 %v4_8a90, %v3_8a74
  store i32 %v5_8a90, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_8a48, 256
  %v4_8a94 = urem i32 %tmp72, 256
  %v5_8a94 = or i32 %v4_8a94, %v3_8a7c
  store i32 %v5_8a94, i32* @fp, align 4
  store i32 %v3_8a00, i32* %r2.global-to-local, align 4
  store i32 %v3_89fc, i32* %r1.global-to-local, align 4
  %v1_8aa0 = and i32 %v3_8a88, 65280
  %tmp73 = mul i32 %v6_8910, 256
  %v3_8aa4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_8a00, 256
  %v3_8aa8 = and i32 %tmp74, 65280
  %v4_8ab0 = udiv i32 %v1_8a78, 16777216
  %v5_8ab0 = or i32 %v1_8aa0, %v4_8ab0
  store i32 %v5_8ab0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_8910, 256
  %v4_8ab4 = urem i32 %tmp75, 256
  %v5_8ab4 = or i32 %v4_8ab4, %v3_8aa4
  store i32 %v5_8ab4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_8a00, 256
  %v4_8ab8 = urem i32 %tmp76, 256
  %v5_8ab8 = or i32 %v4_8ab8, %v3_8aa8
  store i32 %v5_8ab8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_8a70, 256
  %v3_8abc = and i32 %tmp77, 65280
  store i32 %v3_8abc, i32* @lr, align 4
  %v5_8ac8 = trunc i32 %v5_8ab0 to i16
  %v4_8acc = udiv i32 %v1_8a70, 16777216
  %v5_8acc = or i32 %v3_8abc, %v4_8acc
  store i32 %v5_8acc, i32* @r8, align 4
  store i32 %v0_8a28, i32* @r4, align 4
  %v1_8b34 = trunc i32 %v6_88cc to i8
  %v2_8be8 = icmp eq i32 %v1_8a08, 0
  %sext = mul nuw i32 %v5_8ab4, 65536
  %v4_8c0c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_8ab8, 65536
  %v4_8c14 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_8ad4

dec_label_pc_8ad4:                                ; preds = %bb80, %dec_label_pc_8a3c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8ae0 = call i32 @function_12fcc(i32 1510, i32 4)
  store i32 %v2_8ae0, i32* %r0.global-to-local, align 4
  %v3_8ae8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8ae8, i32* %r2.global-to-local, align 4
  %v2_8aec = load i32, i32* @r4, align 4
  %v5_8aec = mul i32 %v2_8aec, 4
  %v6_8aec = add i32 %v5_8aec, %v2_8878
  %v7_8aec = inttoptr i32 %v6_8aec to i32*
  store i32 %v2_8ae0, i32* %v7_8aec, align 4
  store i32 %v2_8878, i32* %r1.global-to-local, align 4
  %v0_8af4 = load i32, i32* %r2.global-to-local, align 4
  %v3_8af4 = mul i32 %v0_8af4, 32
  store i32 %v3_8af4, i32* %r3.global-to-local, align 4
  %v4_8af8 = mul i32 %v0_8af4, 4
  %v5_8af8 = add i32 %v4_8af8, %v2_8878
  %v6_8af8 = inttoptr i32 %v5_8af8 to i32*
  %v7_8af8 = load i32, i32* %v6_8af8, align 4
  store i32 %v7_8af8, i32* %r4.global-to-local, align 4
  %v5_8afc = mul i32 %v0_8af4, 24
  store i32 %v5_8afc, i32* %r3.global-to-local, align 4
  %v1_8b00 = load i32, i32* @sl, align 4
  %v2_8b00 = add i32 %v1_8b00, %v5_8afc
  store i32 %v2_8b00, i32* %lr.global-to-local, align 4
  %v1_8b04 = inttoptr i32 %v7_8af8 to i8*
  %v2_8b04 = load i8, i8* %v1_8b04, align 1
  %tmp = urem i8 %v2_8b04, 16
  %v1_8b08 = zext i8 %tmp to i32
  %v1_8b0c = or i32 %v1_8b08, 64
  store i32 %v1_8b0c, i32* %r3.global-to-local, align 4
  %v1_8b10 = trunc i32 %v1_8b0c to i8
  store i8 %v1_8b10, i8* %v1_8b04, align 1
  %v0_8b14 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b14 = inttoptr i32 %v0_8b14 to i8*
  %v2_8b14 = load i8, i8* %v1_8b14, align 1
  %v1_8b18 = and i8 %v2_8b14, -16
  %v1_8b1c = or i8 %v1_8b18, 5
  store i32 %v1_88f8, i32* %r3.global-to-local, align 4
  store i8 %v1_8b1c, i8* %v1_8b14, align 1
  store i32 %v6_8890, i32* %r1.global-to-local, align 4
  %v2_8b2c = load i32, i32* %r4.global-to-local, align 4
  %v3_8b2c = add i32 %v2_8b2c, 1
  %v4_8b2c = inttoptr i32 %v3_8b2c to i8*
  store i8 %v5_88b0, i8* %v4_8b2c, align 1
  store i32 %v1_88d4, i32* %r2.global-to-local, align 4
  %v2_8b34 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b34 = add i32 %v2_8b34, 8
  %v4_8b34 = inttoptr i32 %v3_8b34 to i8*
  store i8 %v1_8b34, i8* %v4_8b34, align 1
  %v0_8b38 = load i32, i32* %r3.global-to-local, align 4
  %v2_8b38 = icmp eq i32 %v0_8b38, 0
  store i1 %v2_8b38, i1* %cpsr_z.global-to-local, align 1
  %v2_8b40 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b40 = add i32 %v2_8b40, 2
  %v4_8b40 = inttoptr i32 %v3_8b40 to i16*
  store i16 %v5_8a8c, i16* %v4_8b40, align 2
  %v2_8b48 = load i32, i32* %r4.global-to-local, align 4
  %v3_8b48 = add i32 %v2_8b48, 9
  %v4_8b48 = inttoptr i32 %v3_8b48 to i8*
  store i8 47, i8* %v4_8b48, align 1
  store i32 %v6_8998, i32* %r3.global-to-local, align 4
  %v1_8b50 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b50 = add i32 %v1_8b50, 12
  %v3_8b50 = inttoptr i32 %v2_8b50 to i32*
  store i32 %v6_8998, i32* %v3_8b50, align 4
  %v0_8b54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8b54, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_8ad4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8b58 = load i32, i32* %r4.global-to-local, align 4
  %v4_8b58 = add i32 %v3_8b58, 6
  %v5_8b58 = inttoptr i32 %v4_8b58 to i16*
  store i16 64, i16* %v5_8b58, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_8ad4, %bb
  %v0_8b5c = load i32, i32* %lr.global-to-local, align 4
  %v1_8b5c = add i32 %v0_8b5c, 16
  %v2_8b5c = inttoptr i32 %v1_8b5c to i32*
  %v3_8b5c = load i32, i32* %v2_8b5c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8b64 = load i32, i32* %r4.global-to-local, align 4
  %v2_8b64 = add i32 %v1_8b64, 16
  %v3_8b64 = inttoptr i32 %v2_8b64 to i32*
  store i32 %v3_8b5c, i32* %v3_8b64, align 4
  %v0_8b68 = load i32, i32* %r4.global-to-local, align 4
  %v1_8b68 = add i32 %v0_8b68, 24
  store i32 %v1_8b68, i32* %r0.global-to-local, align 4
  %v1_8b6c = add i32 %v0_8b68, 20
  store i32 %v1_8b6c, i32* %r1.global-to-local, align 4
  %v0_8b70 = load i32, i32* %ip.global-to-local, align 4
  %v1_8b70 = add i32 %v0_8b70, 101
  store i32 %v1_8b70, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8b7c = load i32, i32* @r7, align 4
  %v1_8b7c = trunc i32 %v0_8b7c to i16
  %v3_8b7c = add i32 %v0_8b68, 4
  %v4_8b7c = inttoptr i32 %v3_8b7c to i16*
  store i16 %v1_8b7c, i16* %v4_8b7c, align 2
  %v0_8b80 = load i32, i32* %ip.global-to-local, align 4
  %v1_8b80 = trunc i32 %v0_8b80 to i16
  %v2_8b80 = load i32, i32* %r1.global-to-local, align 4
  %v3_8b80 = add i32 %v2_8b80, 2
  %v4_8b80 = inttoptr i32 %v3_8b80 to i16*
  store i16 %v1_8b80, i16* %v4_8b80, align 2
  %v0_8b84 = load i32, i32* %r3.global-to-local, align 4
  %v1_8b84 = trunc i32 %v0_8b84 to i8
  %v2_8b84 = load i32, i32* %r0.global-to-local, align 4
  %v3_8b84 = add i32 %v2_8b84, 13
  %v4_8b84 = inttoptr i32 %v3_8b84 to i8*
  store i8 %v1_8b84, i8* %v4_8b84, align 1
  %v0_8b88 = load i32, i32* %r2.global-to-local, align 4
  %v1_8b88 = trunc i32 %v0_8b88 to i8
  %v2_8b88 = load i32, i32* %r0.global-to-local, align 4
  %v3_8b88 = add i32 %v2_8b88, 12
  %v4_8b88 = inttoptr i32 %v3_8b88 to i8*
  store i8 %v1_8b88, i8* %v4_8b88, align 1
  %v0_8b8c = load i32, i32* %r4.global-to-local, align 4
  %v1_8b8c = add i32 %v0_8b8c, 38
  %v2_8b8c = inttoptr i32 %v1_8b8c to i8*
  %v3_8b8c = load i8, i8* %v2_8b8c, align 1
  %tmp86 = urem i8 %v3_8b8c, 16
  %v1_8b90 = zext i8 %tmp86 to i32
  %v1_8b94 = or i32 %v1_8b90, 64
  store i32 %v1_8b94, i32* %r3.global-to-local, align 4
  %v1_8b98 = trunc i32 %v1_8b94 to i8
  store i8 %v1_8b98, i8* %v2_8b8c, align 1
  %v0_8b9c = load i32, i32* %r4.global-to-local, align 4
  %v1_8b9c = add i32 %v0_8b9c, 38
  %v2_8b9c = inttoptr i32 %v1_8b9c to i8*
  %v3_8b9c = load i8, i8* %v2_8b9c, align 1
  %v4_8b9c = zext i8 %v3_8b9c to i32
  %v1_8ba0 = and i32 %v4_8b9c, 240
  %v1_8ba4 = or i32 %v1_8ba0, 5
  store i32 %v1_8ba4, i32* %r2.global-to-local, align 4
  %v1_8ba8 = trunc i32 %v1_8ba4 to i8
  store i8 %v1_8ba8, i8* %v2_8b9c, align 1
  store i32 %v6_8890, i32* %ip.global-to-local, align 4
  %v0_8bb0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8bb0 = add i32 %v0_8bb0, 38
  store i32 %v1_8bb0, i32* @r5, align 4
  %v3_8bb4 = add i32 %v0_8bb0, 39
  %v4_8bb4 = inttoptr i32 %v3_8bb4 to i8*
  store i8 %v5_88b0, i8* %v4_8bb4, align 1
  store i32 %v5_8ab0, i32* %lr.global-to-local, align 4
  %v2_8bbc = load i32, i32* @r5, align 4
  %v3_8bbc = add i32 %v2_8bbc, 2
  %v4_8bbc = inttoptr i32 %v3_8bbc to i16*
  store i16 %v5_8ac8, i16* %v4_8bbc, align 2
  store i32 %v1_88d4, i32* %r1.global-to-local, align 4
  %v0_8bc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8bc4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_8bcc = load i32, i32* @r5, align 4
  %v4_8bcc = add i32 %v3_8bcc, 6
  %v5_8bcc = inttoptr i32 %v4_8bcc to i16*
  store i16 64, i16* %v5_8bcc, align 2
  %v0_8bd0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_8bd0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v6_88cc.sink.off0 = phi i8 [ %v1_8b34, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_8bd0 = load i32, i32* @r5, align 4
  %v3_8bd0 = add i32 %v2_8bd0, 8
  %v4_8bd0 = inttoptr i32 %v3_8bd0 to i8*
  store i8 %v6_88cc.sink.off0, i8* %v4_8bd0, align 1
  %v0_8bd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8bd4 = trunc i32 %v0_8bd4 to i8
  %v2_8bd4 = load i32, i32* @r5, align 4
  %v3_8bd4 = add i32 %v2_8bd4, 9
  %v4_8bd4 = inttoptr i32 %v3_8bd4 to i8*
  store i8 %v1_8bd4, i8* %v4_8bd4, align 1
  %v0_8bd8 = load i32, i32* @fp, align 4
  %v1_8bd8 = trunc i32 %v0_8bd8 to i16
  %v2_8bd8 = load i32, i32* @r5, align 4
  %v3_8bd8 = add i32 %v2_8bd8, 4
  %v4_8bd8 = inttoptr i32 %v3_8bd8 to i16*
  store i16 %v1_8bd8, i16* %v4_8bd8, align 2
  %v0_8bdc = call i32 @function_db0c()
  store i32 %v0_8bdc, i32* %r0.global-to-local, align 4
  store i32 %v1_8a08, i32* %ip.global-to-local, align 4
  store i1 %v2_8be8, i1* %cpsr_z.global-to-local, align 1
  %v1_8bec = sub i32 1023, %v0_8bdc
  store i32 %v1_8bec, i32* %r3.global-to-local, align 4
  br i1 %v2_8be8, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_8bf4 = load i32, i32* @r5, align 4
  %v3_8bf4 = add i32 %v2_8bf4, 16
  %v4_8bf4 = inttoptr i32 %v3_8bf4 to i32*
  store i32 %v1_8bec, i32* %v4_8bf4, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_8bf0 = load i32, i32* %r4.global-to-local, align 4
  %v2_8bf0 = add i32 %v1_8bf0, 16
  %v3_8bf0 = inttoptr i32 %v2_8bf0 to i32*
  %v4_8bf0 = load i32, i32* %v3_8bf0, align 4
  store i32 %v4_8bf0, i32* %r3.global-to-local, align 4
  %v2_8bf8 = load i32, i32* @r5, align 4
  %v3_8bf8 = add i32 %v2_8bf8, 16
  %v4_8bf8 = inttoptr i32 %v3_8bf8 to i32*
  store i32 %v4_8bf0, i32* %v4_8bf8, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_8bfc = load i32, i32* @r5, align 4
  %v2_8bfc = add i32 %v1_8bfc, 12
  %v3_8bfc = inttoptr i32 %v2_8bfc to i32*
  store i32 %v0_8bdc, i32* %v3_8bfc, align 4
  %v3_8c00 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c00, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_8c08 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c08 = add i32 %v0_8c08, 58
  store i32 %v1_8c08, i32* @r6, align 4
  store i32 %v4_8c0c, i32* %r1.global-to-local, align 4
  %v1_8c10 = add i32 %v3_8c00, 1
  store i32 %v1_8c10, i32* @r4, align 4
  store i32 %v4_8c14, i32* %r2.global-to-local, align 4
  %v9_8c18 = icmp eq i32 %v1_8c10, %arg2
  store i1 %v9_8c18, i1* %cpsr_z.global-to-local, align 1
  %v0_8c1c = load i32, i32* @r8, align 4
  %v1_8c1c = trunc i32 %v0_8c1c to i16
  %v3_8c1c = add i32 %v0_8c08, 62
  %v4_8c1c = inttoptr i32 %v3_8c1c to i16*
  store i16 %v1_8c1c, i16* %v4_8c1c, align 2
  %v0_8c20 = load i32, i32* %r1.global-to-local, align 4
  %v1_8c20 = trunc i32 %v0_8c20 to i16
  %v2_8c20 = load i32, i32* @r6, align 4
  %v3_8c20 = inttoptr i32 %v2_8c20 to i16*
  store i16 %v1_8c20, i16* %v3_8c20, align 2
  %v0_8c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_8c24 = trunc i32 %v0_8c24 to i16
  %v2_8c24 = load i32, i32* @r6, align 4
  %v3_8c24 = add i32 %v2_8c24, 2
  %v4_8c24 = inttoptr i32 %v3_8c24 to i16*
  store i16 %v1_8c24, i16* %v4_8c24, align 2
  %v0_8c28 = load i32, i32* @r4, align 4
  store i32 %v0_8c28, i32* %stack_var_-44, align 4
  %v5_8c2c = icmp slt i32 %v1_8c10, %arg2
  br i1 %v5_8c2c, label %dec_label_pc_8ad4, label %dec_label_pc_8c30.preheader

dec_label_pc_8c30.preheader:                      ; preds = %bb80, %dec_label_pc_89f4
  %v1_8c4c = add i32 %v6_8944, 8
  %v1_8c50 = add i32 %v6_8944, 66
  %v2_8c5c = icmp eq i32 %v6_8998, -1
  %v7_8c5c = icmp eq i32 %v6_8998, -1
  %v3_8e54 = icmp eq i32 %v3_8a0c, 65535
  %v2_8ea4 = icmp eq i32 %v1_8a08, 0
  %v2_8cb8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8cd0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_8ce0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_8cec = ptrtoint i32* %stack_var_-54 to i32
  %v2_8d00 = icmp eq i32 %v1_8964, 0
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8c30.preheader, %dec_label_pc_8ee4
  store i1 %v2_8a18, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8a18, label %dec_label_pc_8ee4, label %dec_label_pc_8c44

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8c30
  store i32 %v6_8944, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_8c4c, i32* @fp, align 4
  store i32 %v1_8c50, i32* @sb, align 4
  br label %dec_label_pc_8db8

dec_label_pc_8c58:                                ; preds = %dec_label_pc_8db8
  store i32 %v6_8998, i32* %r1.global-to-local, align 4
  store i1 %v7_8c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8c5c, label %dec_label_pc_8e44, label %dec_label_pc_8c64

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8de4, %dec_label_pc_8c58
  store i32 %v3_8a0c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8e54, label %dec_label_pc_8e60, label %dec_label_pc_8c78

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge, %dec_label_pc_8c64
  %v1_8c7c = phi i32 [ %v1_8c7c.pre, %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge ], [ 65535, %dec_label_pc_8c64 ]
  store i32 %v3_8a10, i32* %r3.global-to-local, align 4
  %v9_8c7c = icmp eq i32 %v3_8a10, %v1_8c7c
  store i1 %v9_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8c7c, label %dec_label_pc_8e88, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8e60, %dec_label_pc_8c78
  %v1_8c88 = phi i32 [ %v1_8e80, %dec_label_pc_8e60 ], [ %v1_8c7c, %dec_label_pc_8c78 ]
  store i32 %v3_8a14, i32* %ip.global-to-local, align 4
  %v9_8c88 = icmp eq i32 %v3_8a14, %v1_8c88
  store i1 %v9_8c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8c88, label %dec_label_pc_8e9c, label %dec_label_pc_8c90

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8e88, %dec_label_pc_8c84
  store i32 %v1_8a08, i32* @lr, align 4
  store i1 %v2_8ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ea4, label %dec_label_pc_8eb8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8c90
  %v1_8c98 = load i32, i32* @r5, align 4
  %v2_8c98 = add i32 %v1_8c98, 16
  %v3_8c98 = inttoptr i32 %v2_8c98 to i32*
  %v4_8c98 = load i32, i32* %v3_8c98, align 4
  store i32 %v4_8c98, i32* %r3.global-to-local, align 4
  %v2_8c9c = load i32, i32* @r6, align 4
  %v3_8c9c = add i32 %v2_8c9c, 16
  %v4_8c9c = inttoptr i32 %v3_8c9c to i32*
  store i32 %v4_8c98, i32* %v4_8c9c, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8ca4:                                ; preds = %bb81, %.thread11, %dec_label_pc_8eb8
  %v0_8ca4 = call i32 @function_db0c()
  store i32 %v0_8ca4, i32* %r0.global-to-local, align 4
  store i32 %v0_8ca4, i32* %stack_var_-48, align 4
  %v0_8cac = call i32 @function_db0c()
  store i32 %v0_8cac, i32* %r0.global-to-local, align 4
  store i32 %v0_8cac, i32* %stack_var_-52, align 4
  %v0_8cb4 = call i32 @function_db0c()
  store i32 %v2_8cb8, i32* %r1.global-to-local, align 4
  store i32 %v0_8cb4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8cc4 = load i32, i32* @r7, align 4
  store i32 %v0_8cc4, i32* %r0.global-to-local, align 4
  %v3_8cc8 = call i32 @function_11204(i32 %v0_8cc4, i32 %v2_8cb8, i32 4)
  %v0_8ccc = load i32, i32* @r7, align 4
  %v1_8ccc = add i32 %v0_8ccc, 6
  store i32 %v1_8ccc, i32* %r0.global-to-local, align 4
  store i32 %v2_8cd0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8cd8 = call i32 @function_11204(i32 %v1_8ccc, i32 %v2_8cd0, i32 4)
  %v0_8cdc = load i32, i32* @r7, align 4
  %v1_8cdc = add i32 %v0_8cdc, 4
  store i32 %v1_8cdc, i32* %r0.global-to-local, align 4
  store i32 %v2_8ce0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8ce8 = call i32 @function_11204(i32 %v1_8cdc, i32 %v2_8ce0, i32 2)
  store i32 %v2_8cec, i32* %r1.global-to-local, align 4
  %v0_8cf0 = load i32, i32* @r7, align 4
  %v1_8cf0 = add i32 %v0_8cf0, 10
  store i32 %v1_8cf0, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8cf8 = call i32 @function_11204(i32 %v1_8cf0, i32 %v2_8cec, i32 2)
  store i32 %v3_8cf8, i32* %r0.global-to-local, align 4
  store i32 %v1_8964, i32* %r1.global-to-local, align 4
  store i1 %v2_8d00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d00, label %dec_label_pc_8d08, label %dec_label_pc_8ec4

dec_label_pc_8d08:                                ; preds = %dec_label_pc_8ca4, %dec_label_pc_8ec4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r5, align 4
  %v3_8d0c = add i32 %v2_8d0c, 10
  %v4_8d0c = inttoptr i32 %v3_8d0c to i16*
  store i16 0, i16* %v4_8d0c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d14 = load i32, i32* @r5, align 4
  store i32 %v0_8d14, i32* @r0, align 4
  %v2_8d18 = call i32 @function_bf78(i32 %v0_8d14, i32 20)
  %v3_8d18 = trunc i32 %v2_8d18 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_8d20 = load i32, i32* @r5, align 4
  %v4_8d20 = add i32 %v3_8d20, 10
  %v5_8d20 = inttoptr i32 %v4_8d20 to i16*
  store i16 %v3_8d18, i16* %v5_8d20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8d28 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d28 = trunc i32 %v0_8d28 to i16
  %v2_8d28 = load i32, i32* @r6, align 4
  %v3_8d28 = add i32 %v2_8d28, 10
  %v4_8d28 = inttoptr i32 %v3_8d28 to i16*
  store i16 %v1_8d28, i16* %v4_8d28, align 2
  %v0_8d2c = load i32, i32* @r6, align 4
  store i32 %v0_8d2c, i32* @r0, align 4
  %v2_8d30 = call i32 @function_bf78(i32 %v0_8d2c, i32 20)
  %v3_8d30 = trunc i32 %v2_8d30 to i16
  store i32 %v2_8d30, i32* %r0.global-to-local, align 4
  %v3_8d34 = load i32, i32* @r6, align 4
  %v4_8d34 = add i32 %v3_8d34, 10
  %v5_8d34 = inttoptr i32 %v4_8d34 to i16*
  store i16 %v3_8d30, i16* %v5_8d34, align 2
  %v2_8d3c = load i32, i32* @r8, align 4
  %v3_8d3c = add i32 %v2_8d3c, 6
  %v4_8d3c = inttoptr i32 %v3_8d3c to i16*
  store i16 0, i16* %v4_8d3c, align 2
  %v0_8d40 = load i32, i32* @r8, align 4
  store i32 %v0_8d40, i32* @r1, align 4
  %v1_8d44 = add i32 %v0_8d40, 4
  %v2_8d44 = inttoptr i32 %v1_8d44 to i16*
  %v3_8d44 = load i16, i16* %v2_8d44, align 2
  %v4_8d44 = zext i16 %v3_8d44 to i32
  store i32 %v4_8d44, i32* %r2.global-to-local, align 4
  %v0_8d48 = load i32, i32* @fp, align 4
  store i32 %v0_8d48, i32* %r3.global-to-local, align 4
  %v0_8d4c = load i32, i32* @r6, align 4
  store i32 %v0_8d4c, i32* %r0.global-to-local, align 4
  %v4_8d50 = call i32 @function_bfc8(i32 %v0_8d4c, i32 %v0_8d40, i32 %v4_8d44, i32 %v0_8d48)
  %v5_8d50 = trunc i32 %v4_8d50 to i16
  store i32 %v4_8d50, i32* %r0.global-to-local, align 4
  %v3_8d54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8d54, i32* %r2.global-to-local, align 4
  %v3_8d58 = mul i32 %v3_8d54, 32
  store i32 %v3_8d58, i32* %r3.global-to-local, align 4
  %v0_8d5c = load i32, i32* @r5, align 4
  %v1_8d5c = add i32 %v0_8d5c, 16
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  %v5_8d60 = mul i32 %v3_8d54, 24
  store i32 %v5_8d60, i32* %r3.global-to-local, align 4
  %v1_8d64 = load i32, i32* @sl, align 4
  %v2_8d64 = add i32 %v1_8d64, %v5_8d60
  store i32 %v2_8d64, i32* @lr, align 4
  %v2_8d68 = add i32 %v2_8d64, 4
  %v3_8d68 = inttoptr i32 %v2_8d68 to i32*
  store i32 %v3_8d5c, i32* %v3_8d68, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8d74 = load i32, i32* @r8, align 4
  %v4_8d74 = add i32 %v3_8d74, 6
  %v5_8d74 = inttoptr i32 %v4_8d74 to i16*
  store i16 %v5_8d50, i16* %v5_8d74, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8d7c = load i32, i32* %r1.global-to-local, align 4
  %v1_8d7c = trunc i32 %v0_8d7c to i16
  %v2_8d7c = load i32, i32* %r3.global-to-local, align 4
  %v3_8d7c = load i32, i32* @sl, align 4
  %v4_8d7c = add i32 %v3_8d7c, %v2_8d7c
  %v5_8d7c = inttoptr i32 %v4_8d7c to i16*
  store i16 %v1_8d7c, i16* %v5_8d7c, align 2
  %v0_8d80 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d80 = trunc i32 %v0_8d80 to i16
  %v2_8d80 = load i32, i32* @lr, align 4
  %v3_8d80 = add i32 %v2_8d80, 2
  %v4_8d80 = inttoptr i32 %v3_8d80 to i16*
  store i16 %v1_8d80, i16* %v4_8d80, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8d88 = load i32, i32* @r5, align 4
  store i32 %v0_8d88, i32* %r1.global-to-local, align 4
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v0_8d90 = load i32, i32* @sb, align 4
  store i32 %v0_8d90, i32* %r2.global-to-local, align 4
  %v0_8d94 = load i32, i32* @lr, align 4
  %v0_8d98 = load i32, i32* %ip.global-to-local, align 4
  %v6_8d9c = call i32 @function_123e0(i32 %v3_89bc, i32 %v0_8d88, i32 %v0_8d90, i32 16384, i32 %v0_8d94, i32 %v0_8d98)
  %v3_8da0 = load i32, i32* %stack_var_-44, align 4
  %v1_8da4 = add i32 %v3_8da0, 1
  store i32 %v1_8da4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_8dac = icmp eq i32 %v1_8da4, %arg2
  store i1 %v9_8dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8da4, i32* %stack_var_-44, align 4
  %v6_8db4 = icmp slt i32 %v1_8da4, %arg2
  br i1 %v6_8db4, label %dec_label_pc_8db8, label %dec_label_pc_8ee4

dec_label_pc_8db8:                                ; preds = %dec_label_pc_8d08, %dec_label_pc_8c44
  %v1_8dcc = phi i32 [ %v1_8da4, %dec_label_pc_8d08 ], [ 0, %dec_label_pc_8c44 ]
  %v5_8dbc = mul i32 %v1_8dcc, 24
  %v1_8dc0 = load i32, i32* @sl, align 4
  %v2_8dc0 = add i32 %v1_8dc0, %v5_8dbc
  store i32 %v2_8dc0, i32* %r3.global-to-local, align 4
  store i32 %v2_8878, i32* %lr.global-to-local, align 4
  %v1_8dc8 = add i32 %v2_8dc0, 20
  %v2_8dc8 = inttoptr i32 %v1_8dc8 to i8*
  %v3_8dc8 = load i8, i8* %v2_8dc8, align 1
  %v4_8dc8 = zext i8 %v3_8dc8 to i32
  store i32 %v4_8dc8, i32* %r2.global-to-local, align 4
  %v4_8dcc = mul i32 %v1_8dcc, 4
  %v5_8dcc = add i32 %v4_8dcc, %v2_8878
  %v6_8dcc = inttoptr i32 %v5_8dcc to i32*
  %v7_8dcc = load i32, i32* %v6_8dcc, align 4
  store i32 %v7_8dcc, i32* @r5, align 4
  %v2_8dd0 = icmp ugt i8 %v3_8dc8, 30
  %v7_8dd0 = icmp eq i8 %v3_8dc8, 31
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  %v1_8dd4 = add i32 %v7_8dcc, 24
  store i32 %v1_8dd4, i32* @r7, align 4
  %v1_8dd8 = add i32 %v7_8dcc, 38
  store i32 %v1_8dd8, i32* @r6, align 4
  %v1_8ddc = add i32 %v7_8dcc, 58
  store i32 %v1_8ddc, i32* @r8, align 4
  %v2_8de0 = xor i1 %v7_8dd0, true
  %v3_8de0 = and i1 %v2_8dd0, %v2_8de0
  br i1 %v3_8de0, label %dec_label_pc_8c58, label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8db8
  %v1_8de4 = add i32 %v2_8dc0, 16
  %v2_8de4 = inttoptr i32 %v1_8de4 to i32*
  %v3_8de4 = load i32, i32* %v2_8de4, align 4
  store i32 %v3_8de4, i32* %r4.global-to-local, align 4
  %v0_8de8 = call i32 @function_db0c()
  store i32 %v0_8de8, i32* %r0.global-to-local, align 4
  %v3_8dec = load i32, i32* %stack_var_-44, align 4
  %v5_8df4 = mul i32 %v3_8dec, 24
  %v1_8df8 = and i32 %v3_8de4, 16711680
  store i32 %v1_8df8, i32* %ip.global-to-local, align 4
  %v3_8dfc = udiv i32 %v3_8de4, 16777216
  %v4_8e00 = udiv i32 %v1_8df8, 256
  %v5_8e00 = or i32 %v4_8e00, %v3_8dfc
  store i32 %v5_8e00, i32* %r2.global-to-local, align 4
  %v1_8e04 = load i32, i32* @sl, align 4
  %v2_8e04 = add i32 %v1_8e04, %v5_8df4
  store i32 %v2_8e04, i32* %r1.global-to-local, align 4
  %v1_8e08 = and i32 %v3_8de4, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_8e08, i32* %r3.global-to-local, align 4
  %v1_8e0c = add i32 %v2_8e04, 20
  %v2_8e0c = inttoptr i32 %v1_8e0c to i8*
  %v3_8e0c = load i8, i8* %v2_8e0c, align 1
  %v4_8e0c = zext i8 %v3_8e0c to i32
  store i32 %v4_8e0c, i32* %ip.global-to-local, align 4
  %v4_8e10 = mul i32 %v1_8e08, 256
  %v4_8e14 = mul i32 %v3_8de4, 16777216
  %v5_8e10 = or i32 %v4_8e10, %v4_8e14
  %v5_8e14 = or i32 %v5_8e10, %v5_8e00
  %v7_8e18 = lshr i32 %v0_8de8, %v4_8e0c
  %v8_8e18 = add i32 %v7_8e18, %v5_8e14
  store i32 %v8_8e18, i32* %r2.global-to-local, align 4
  %v1_8e1c = and i32 %v8_8e18, 16711680
  store i32 %v1_8e1c, i32* %r0.global-to-local, align 4
  store i32 %v6_8998, i32* %r1.global-to-local, align 4
  %v5_8e34 = call i32 @llvm.bswap.i32(i32 %v8_8e18)
  store i32 %v5_8e34, i32* %r3.global-to-local, align 4
  store i1 %v7_8c5c, i1* %cpsr_z.global-to-local, align 1
  %v1_8e3c = load i32, i32* @r5, align 4
  %v2_8e3c = add i32 %v1_8e3c, 16
  %v3_8e3c = inttoptr i32 %v2_8e3c to i32*
  store i32 %v5_8e34, i32* %v3_8e3c, align 4
  br i1 %v2_8c5c, label %dec_label_pc_8e44, label %dec_label_pc_8c64

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8de4, %dec_label_pc_8c58
  %v0_8e44 = call i32 @function_db0c()
  store i32 %v0_8e44, i32* %r0.global-to-local, align 4
  store i32 %v3_8a0c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_8e54, i1* %cpsr_z.global-to-local, align 1
  %v1_8e58 = load i32, i32* @r5, align 4
  %v2_8e58 = add i32 %v1_8e58, 12
  %v3_8e58 = inttoptr i32 %v2_8e58 to i32*
  store i32 %v0_8e44, i32* %v3_8e58, align 4
  br i1 %v3_8e54, label %dec_label_pc_8e60, label %dec_label_pc_8e44.dec_label_pc_8c78_crit_edge

dec_label_pc_8e44.dec_label_pc_8c78_crit_edge:    ; preds = %dec_label_pc_8e44
  %v1_8c7c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_8c78

dec_label_pc_8e60:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8c64
  %v0_8e60 = call i32 @function_db0c()
  %v3_8e68 = urem i32 %v0_8e60, 65536
  store i32 %v3_8e68, i32* %r0.global-to-local, align 4
  %v1_8e70 = sub nsw i32 999, %v3_8e68
  store i32 %v1_8e70, i32* %r3.global-to-local, align 4
  %v1_8e74 = trunc i32 %v0_8e60 to i16
  %v2_8e74 = load i32, i32* @r5, align 4
  %v3_8e74 = add i32 %v2_8e74, 4
  %v4_8e74 = inttoptr i32 %v3_8e74 to i16*
  store i16 %v1_8e74, i16* %v4_8e74, align 2
  %v0_8e78 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e78 = trunc i32 %v0_8e78 to i16
  %v2_8e78 = load i32, i32* @r6, align 4
  %v3_8e78 = add i32 %v2_8e78, 4
  %v4_8e78 = inttoptr i32 %v3_8e78 to i16*
  store i16 %v1_8e78, i16* %v4_8e78, align 2
  store i32 %v3_8a10, i32* %r3.global-to-local, align 4
  %v1_8e80 = load i32, i32* @r4, align 4
  %v9_8e80 = icmp eq i32 %v3_8a10, %v1_8e80
  store i1 %v9_8e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8e80, label %dec_label_pc_8e88, label %dec_label_pc_8c84

dec_label_pc_8e88:                                ; preds = %dec_label_pc_8e60, %dec_label_pc_8c78
  %v0_8e88 = call i32 @function_db0c()
  %v1_8e88 = trunc i32 %v0_8e88 to i16
  store i32 %v0_8e88, i32* %r0.global-to-local, align 4
  store i32 %v3_8a14, i32* %ip.global-to-local, align 4
  %v1_8e90 = load i32, i32* @r4, align 4
  %v9_8e90 = icmp eq i32 %v3_8a14, %v1_8e90
  store i1 %v9_8e90, i1* %cpsr_z.global-to-local, align 1
  %v3_8e94 = load i32, i32* @r5, align 4
  %v4_8e94 = add i32 %v3_8e94, 58
  %v5_8e94 = inttoptr i32 %v4_8e94 to i16*
  store i16 %v1_8e88, i16* %v5_8e94, align 2
  br i1 %v9_8e90, label %dec_label_pc_8e9c, label %dec_label_pc_8c90

dec_label_pc_8e9c:                                ; preds = %dec_label_pc_8e88, %dec_label_pc_8c84
  %v0_8e9c = call i32 @function_db0c()
  %v1_8e9c = trunc i32 %v0_8e9c to i16
  store i32 %v0_8e9c, i32* %r0.global-to-local, align 4
  store i32 %v1_8a08, i32* @lr, align 4
  store i1 %v2_8ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ea4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_8e9c
  %v3_8eac25 = load i32, i32* @r8, align 4
  %v4_8eac26 = add i32 %v3_8eac25, 2
  %v5_8eac27 = inttoptr i32 %v4_8eac26 to i16*
  store i16 %v1_8e9c, i16* %v5_8eac27, align 2
  br label %dec_label_pc_8eb8

bb81:                                             ; preds = %dec_label_pc_8e9c
  %v1_8ea8 = load i32, i32* @r5, align 4
  %v2_8ea8 = add i32 %v1_8ea8, 16
  %v3_8ea8 = inttoptr i32 %v2_8ea8 to i32*
  %v4_8ea8 = load i32, i32* %v3_8ea8, align 4
  store i32 %v4_8ea8, i32* %r3.global-to-local, align 4
  %v3_8eac = load i32, i32* @r8, align 4
  %v4_8eac = add i32 %v3_8eac, 2
  %v5_8eac = inttoptr i32 %v4_8eac to i16*
  store i16 %v1_8e9c, i16* %v5_8eac, align 2
  %v1_8eb0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8eb0 = load i32, i32* @r6, align 4
  %v3_8eb0 = add i32 %v2_8eb0, 16
  %v4_8eb0 = inttoptr i32 %v3_8eb0 to i32*
  store i32 %v1_8eb0, i32* %v4_8eb0, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8eb8:                                ; preds = %.thread24, %dec_label_pc_8c90
  %v0_8eb8 = call i32 @function_db0c()
  store i32 %v0_8eb8, i32* %r0.global-to-local, align 4
  %v1_8ebc = load i32, i32* @r6, align 4
  %v2_8ebc = add i32 %v1_8ebc, 16
  %v3_8ebc = inttoptr i32 %v2_8ebc to i32*
  store i32 %v0_8eb8, i32* %v3_8ebc, align 4
  br label %dec_label_pc_8ca4

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ca4
  %v0_8ec4 = load i32, i32* @r8, align 4
  %v1_8ec4 = add i32 %v0_8ec4, 8
  store i32 %v1_8ec4, i32* @r4, align 4
  store i32 %v1_8ec4, i32* %r0.global-to-local, align 4
  store i32 %v6_8944, i32* %r1.global-to-local, align 4
  %v2_8ed0 = call i32 @function_dbd0(i32 %v1_8ec4, i32 %v6_8944)
  store i32 %v2_8ed0, i32* %r0.global-to-local, align 4
  store i32 %v6_8944, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8edc = load i32, i32* @r4, align 4
  %v4_8edc = add i32 %v2_8edc, %v6_8944
  %v5_8edc = inttoptr i32 %v4_8edc to i8*
  store i8 0, i8* %v5_8edc, align 1
  br label %dec_label_pc_8d08

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8d08, %dec_label_pc_8c30
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8ee8 = call i32 @function_118d4(i32* null)
  store i32 %v2_8ee8, i32* %r0.global-to-local, align 4
  store i32 %v2_89a8, i32* %ip.global-to-local, align 4
  %v9_8ef0 = icmp eq i32 %v2_89a8, %v2_8ee8
  store i1 %v9_8ef0, i1* %cpsr_z.global-to-local, align 1
  %v6_8ef4 = icmp slt i32 %v2_89a8, %v2_8ee8
  br i1 %v6_8ef4, label %dec_label_pc_8ef8, label %dec_label_pc_8c30

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee4, %dec_label_pc_884c, %dec_label_pc_8f04
  %v1_8f00 = phi i32 [ %v3_89bc, %dec_label_pc_884c ], [ %v1_8f08, %dec_label_pc_8f04 ], [ %v2_8ee8, %dec_label_pc_8ee4 ]
  store i32 %v3_884c, i32* %r4.global-to-local, align 4
  store i32 %v24_884c, i32* %fp.global-to-local, align 4
  store i32 %v27_884c, i32* %lr.global-to-local, align 4
  ret i32 %v1_8f00

dec_label_pc_8f04:                                ; preds = %dec_label_pc_89cc
  store i32 %v3_89bc, i32* %r0.global-to-local, align 4
  %v1_8f08 = call i32 @function_11c54(i32 %v3_89bc)
  store i32 %v1_8f08, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8ef8

; uselistorder directives
  uselistorder i32 %v1_8f08, { 1, 0 }
  uselistorder i16 %v1_8e9c, { 1, 0 }
  uselistorder i32 %v0_8e9c, { 1, 0 }
  uselistorder i32 %v0_8e88, { 1, 0 }
  uselistorder i32 %v1_8e80, { 1, 0 }
  uselistorder i32 %v3_8e68, { 1, 0 }
  uselistorder i32 %v0_8e60, { 1, 0 }
  uselistorder i32 %v5_8e34, { 1, 0 }
  uselistorder i32 %v3_8de4, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v7_8dcc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8da4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_8d54, { 1, 0, 2 }
  uselistorder i32 %v4_8d50, { 1, 0 }
  uselistorder i32 %v2_8d30, { 1, 0 }
  uselistorder i1 %v2_8ea4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_8e54, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8c5c, { 2, 1, 0 }
  uselistorder i32 %v0_8bdc, { 1, 0, 2 }
  uselistorder i32 %v0_8af4, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_8a48, { 2, 0, 1 }
  uselistorder i32 %v3_8a40, { 2, 1, 0 }
  uselistorder i1 %v2_8a18, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8a0c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_8a08, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_8a04, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_8a00, { 1, 0, 2, 3 }
  uselistorder i32 %v3_89fc, { 1, 0 }
  uselistorder i1 %v7_89ec, { 1, 0 }
  uselistorder i1 %v7_89c0, { 1, 0 }
  uselistorder i32 %v3_89bc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_89a8, { 2, 1, 0 }
  uselistorder i32 %v6_8998, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_8964, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8944, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_8910, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_88f8, { 1, 2, 0 }
  uselistorder i32 %v1_88d4, { 3, 2, 1, 0 }
  uselistorder i32 %v6_88cc, { 1, 0 }
  uselistorder i32 %v6_8890, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_8878, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 48, 8, 9, 11, 12, 10, 14, 13, 16, 15, 17, 47, 18, 19, 21, 20, 22, 23, 24, 25, 27, 26, 3, 28, 29, 30, 33, 31, 32, 2, 1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_8ef8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d08, { 1, 0 }
  uselistorder label %dec_label_pc_8ca4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_8f14(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8f14:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_8f14 = load i32, i32* @r4, align 4
  %v24_8f14 = load i32, i32* @fp, align 4
  %v27_8f14 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_8f40 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_8f44 = load i32, i32* @r4, align 4
  store i32 %v0_8f44, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_8f50 = load i32, i32* @sb, align 4
  store i32 %v0_8f50, i32* %r3.global-to-local, align 4
  %v0_8f54 = load i32, i32* @r5, align 4
  %v5_8f58 = inttoptr i32 %v0_8f44 to i32*
  %v6_8f58 = call i32 @function_8258(i32 %v0_8f54, i32* %v5_8f58, i32 2, i32 %v0_8f50, i32 %v2_8f40)
  %v1_8f64 = urem i32 %v6_8f58, 256
  store i32 %v1_8f64, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_8f70 = load i32, i32* @r4, align 4
  store i32 %v0_8f70, i32* %r1.global-to-local, align 4
  %v0_8f74 = load i32, i32* @r5, align 4
  %v5_8f78 = trunc i32 %v6_8f58 to i8
  %v6_8f7c = inttoptr i32 %v0_8f70 to i32*
  %v7_8f7c = call i32 @function_8258(i32 %v0_8f74, i32* %v6_8f7c, i32 3, i32 65535, i32 %v6_8f58)
  %v0_8f80 = load i32, i32* @r4, align 4
  store i32 %v0_8f80, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_8f90 = load i32, i32* @r5, align 4
  %v5_8f94 = inttoptr i32 %v0_8f80 to i32*
  %v6_8f94 = call i32 @function_8258(i32 %v0_8f90, i32* %v5_8f94, i32 4, i32 64, i32 %v7_8f7c)
  %v1_8f9c = urem i32 %v6_8f94, 256
  store i32 %v1_8f9c, i32* %ip.global-to-local, align 4
  %v0_8fa0 = load i32, i32* @r4, align 4
  store i32 %v0_8fa0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8fac = load i32, i32* @r5, align 4
  %v6_8fb4 = inttoptr i32 %v0_8fa0 to i32*
  %v7_8fb4 = call i32 @function_8258(i32 %v0_8fac, i32* %v6_8fb4, i32 5, i32 1, i32 %v1_8f9c)
  %v1_8fc0 = urem i32 %v7_8fb4, 256
  store i32 %v1_8fc0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8fcc = load i32, i32* @r4, align 4
  store i32 %v0_8fcc, i32* %r1.global-to-local, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v5_8fd8 = inttoptr i32 %v0_8fcc to i32*
  %v6_8fd8 = call i32 @function_8258(i32 %v0_8fd0, i32* %v5_8fd8, i32 6, i32 65535, i32 %v1_8fc0)
  %v0_8fe0 = load i32, i32* @r4, align 4
  store i32 %v0_8fe0, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8fd8, i32* %fp.global-to-local, align 4
  %v0_8ff0 = load i32, i32* @r5, align 4
  %v5_8ff4 = inttoptr i32 %v0_8fe0 to i32*
  %v6_8ff4 = call i32 @function_8258(i32 %v0_8ff0, i32* %v5_8ff4, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_8ff8 = load i32, i32* @r4, align 4
  store i32 %v0_8ff8, i32* %r1.global-to-local, align 4
  %v0_8ffc = load i32, i32* @sb, align 4
  store i32 %v0_8ffc, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_8ff4, i32* @r8, align 4
  %v0_9008 = load i32, i32* @r5, align 4
  %v5_900c = inttoptr i32 %v0_8ff8 to i32*
  %v6_900c = call i32 @function_8258(i32 %v0_9008, i32* %v5_900c, i32 %v0_8ffc, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_901c = load i32, i32* @r4, align 4
  store i32 %v0_901c, i32* %r1.global-to-local, align 4
  %v0_9020 = load i32, i32* @r5, align 4
  %v5_9024 = inttoptr i32 %v0_901c to i32*
  %v6_9024 = call i32 @function_8258(i32 %v0_9020, i32* %v5_9024, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_902c = urem i32 %v6_9024, 256
  store i32 %v1_902c, i32* %ip.global-to-local, align 4
  %v0_9030 = load i32, i32* @r4, align 4
  store i32 %v0_9030, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_9038 = load i32, i32* @sb, align 4
  store i32 %v0_9038, i32* %r3.global-to-local, align 4
  %v0_903c = load i32, i32* @r5, align 4
  %v5_9044 = inttoptr i32 %v0_9030 to i32*
  %v6_9044 = call i32 @function_8258(i32 %v0_903c, i32* %v5_9044, i32 18, i32 %v0_9038, i32 %v1_902c)
  %v0_904c = load i32, i32* @r4, align 4
  store i32 %v0_904c, i32* %r1.global-to-local, align 4
  %v2_9050 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_9050, i32* %r3.global-to-local, align 4
  store i32 %v6_9044, i32* @r7, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_905c = load i32, i32* @r5, align 4
  %v5_9060 = inttoptr i32 %v0_904c to i32*
  %v6_9060 = call i32 @function_8258(i32 %v0_905c, i32* %v5_9060, i32 19, i32 %v2_9050, i32 ptrtoint (i32* @0 to i32))
  %v0_9068 = load i32, i32* @sb, align 4
  %v1_906c = inttoptr i32 %v0_9068 to i32*
  %v2_906c = call i32 @function_118d4(i32* %v1_906c)
  %v1_9070 = load i32, i32* @r6, align 4
  %v2_9070 = add i32 %v1_9070, %v2_906c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9084 = call i32 @function_12464(i32 2, i32 3, i32 6)
  %v7_9088 = icmp eq i32 %v3_9084, -1
  store i1 %v7_9088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9088, label %dec_label_pc_9558, label %dec_label_pc_9094

dec_label_pc_9094:                                ; preds = %dec_label_pc_8f14
  store i32 1, i32* %stack_var_-44, align 4
  %v6_909c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_909c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_90a4 = load i32, i32* @sb, align 4
  store i32 %v0_90a4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_90b0 = call i32 @function_12420(i32 %v3_9084, i32 %v0_90a4, i32 3, i32 %v6_909c, i32 4)
  %v7_90b4 = icmp eq i32 %v5_90b0, -1
  store i1 %v7_90b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90b4, label %dec_label_pc_9564, label %dec_label_pc_90bc

dec_label_pc_90bc:                                ; preds = %dec_label_pc_9094
  %v0_90bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_90d0 = load i32, i32* @r8, align 4
  %v3_90d4 = mul i32 %v7_8f7c, 65536
  store i32 %v3_90d4, i32* %r1.global-to-local, align 4
  %v0_90d8 = load i32, i32* @r7, align 4
  %v1_90d8 = urem i32 %v0_90d8, 256
  store i32 %v1_90d8, i32* @r7, align 4
  %v3_90dc = urem i32 %v0_90bc, 65536
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v3_90e0 = urem i32 %v0_90d0, 65536
  store i32 %v3_90e0, i32* %ip.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %arg2, 0
  store i1 %v2_90e4, i1* %cpsr_z.global-to-local, align 1
  %v0_90f4 = load i32, i32* @sb, align 4
  store i32 %v0_90f4, i32* %stack_var_-44, align 4
  %v3_90f8 = urem i32 %v7_8f7c, 65536
  store i32 %v3_90f8, i32* @fp, align 4
  br i1 %v2_90e4, label %dec_label_pc_92ec.preheader, label %dec_label_pc_9108

dec_label_pc_9108:                                ; preds = %dec_label_pc_90bc
  %v3_90d0 = mul i32 %v0_90d0, 65536
  %v3_90bc = mul i32 %v0_90bc, 65536
  %v3_910c = mul i32 %v6_900c, 65536
  %v1_9110 = add i32 %v3_910c, 3407872
  %tmp68 = udiv i32 %v1_9110, 256
  %v3_911c = and i32 %tmp68, 65280
  %v7_8f7c.not = or i32 %v7_8f7c, -65536
  %v1_9120 = xor i32 %v7_8f7c.not, 65535
  %v4_9124 = udiv i32 %v1_9110, 16777216
  %v5_9124 = or i32 %v3_911c, %v4_9124
  store i32 %v3_90d4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_8f7c, 256
  %v3_913c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_9120, 256
  %v3_9140 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_8f7c, 256
  %v4_9144 = urem i32 %tmp71, 256
  %v5_9144 = or i32 %v4_9144, %v3_913c
  %tmp72 = udiv i32 %v1_9120, 256
  %v4_914c = urem i32 %tmp72, 256
  %v5_914c = or i32 %v4_914c, %v3_9140
  store i32 %v5_914c, i32* @r6, align 4
  store i32 %v3_90bc, i32* %r1.global-to-local, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  %v1_9160 = add i32 %v3_910c, 524288
  %tmp73 = mul i32 %v0_90bc, 256
  %v3_9164 = and i32 %tmp73, 65280
  %v1_9168 = add i32 %v3_910c, 1835008
  store i32 %v1_9168, i32* @r5, align 4
  %tmp74 = mul i32 %v0_90d0, 256
  %v3_916c = and i32 %tmp74, 65280
  %v3_9174 = udiv i32 %v1_9168, 256
  %tmp75 = udiv i32 %v0_90bc, 256
  %v4_9178 = urem i32 %tmp75, 256
  %v5_9178 = or i32 %v4_9178, %v3_9164
  %tmp76 = udiv i32 %v0_90d0, 256
  %v4_917c = urem i32 %tmp76, 256
  %v5_917c = or i32 %v4_917c, %v3_916c
  store i32 %v5_917c, i32* %ip.global-to-local, align 4
  %v1_9180 = and i32 %v3_9174, 65280
  %tmp77 = udiv i32 %v1_9160, 256
  %v3_9184 = and i32 %tmp77, 65280
  store i32 %v3_9184, i32* @lr, align 4
  %v4_9198 = udiv i32 %v1_9160, 16777216
  %v5_9198 = or i32 %v3_9184, %v4_9198
  store i32 %v5_9198, i32* @r7, align 4
  %v4_919c = udiv i32 %v1_9168, 16777216
  %v5_919c = or i32 %v1_9180, %v4_919c
  store i32 %v5_919c, i32* @r8, align 4
  store i32 %v0_90f4, i32* @r4, align 4
  %v1_9200 = trunc i32 %v6_8f94 to i8
  %sext = mul nuw i32 %v5_9124, 65536
  %v4_9208 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_9144, 65536
  %v4_920c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_914c, 65536
  %v4_9274 = sdiv i32 %sext9, 65536
  %v2_92a4 = icmp eq i32 %v1_90d8, 0
  %sext10 = mul nuw i32 %v5_9178, 65536
  %v4_92c8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_917c, 65536
  %v4_92d0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_9208 to i16
  br label %dec_label_pc_91a4

dec_label_pc_91a4:                                ; preds = %bb82, %dec_label_pc_9108
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_91b0 = call i32 @function_12fcc(i32 1510, i32 4)
  store i32 %v2_8f40, i32* %ip.global-to-local, align 4
  %v2_91bc = load i32, i32* @r4, align 4
  %v5_91bc = mul i32 %v2_91bc, 4
  %v6_91bc = add i32 %v5_91bc, %v2_8f40
  %v7_91bc = inttoptr i32 %v6_91bc to i32*
  store i32 %v2_91b0, i32* %v7_91bc, align 4
  %v3_91c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_91c0, i32* %r3.global-to-local, align 4
  %v0_91c4 = load i32, i32* %ip.global-to-local, align 4
  %v4_91c4 = mul i32 %v3_91c0, 4
  %v5_91c4 = add i32 %v0_91c4, %v4_91c4
  %v6_91c4 = inttoptr i32 %v5_91c4 to i32*
  %v7_91c4 = load i32, i32* %v6_91c4, align 4
  store i32 %v7_91c4, i32* %r4.global-to-local, align 4
  %v1_91c8 = inttoptr i32 %v7_91c4 to i8*
  %v2_91c8 = load i8, i8* %v1_91c8, align 1
  %tmp = urem i8 %v2_91c8, 16
  %v1_91cc = zext i8 %tmp to i32
  %v1_91d0 = or i32 %v1_91cc, 64
  store i32 %v1_91d0, i32* %r2.global-to-local, align 4
  %v1_91d4 = trunc i32 %v1_91d0 to i8
  store i8 %v1_91d4, i8* %v1_91c8, align 1
  %v0_91d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_91dc = mul i32 %v0_91d8, 24
  store i32 %v5_91dc, i32* %r1.global-to-local, align 4
  %v0_91e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_91e0 = inttoptr i32 %v0_91e0 to i8*
  %v2_91e0 = load i8, i8* %v1_91e0, align 1
  %v1_91e4 = and i8 %v2_91e0, -16
  %v1_91e8 = or i8 %v1_91e4, 5
  store i32 %v1_8fc0, i32* %lr.global-to-local, align 4
  store i8 %v1_91e8, i8* %v1_91e0, align 1
  store i32 %v6_8f58, i32* %r2.global-to-local, align 4
  %v2_91f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_91f8 = add i32 %v2_91f8, 1
  %v4_91f8 = inttoptr i32 %v3_91f8 to i8*
  store i8 %v5_8f78, i8* %v4_91f8, align 1
  store i32 %v1_8f9c, i32* %r3.global-to-local, align 4
  %v2_9200 = load i32, i32* %r4.global-to-local, align 4
  %v3_9200 = add i32 %v2_9200, 8
  %v4_9200 = inttoptr i32 %v3_9200 to i8*
  store i8 %v1_9200, i8* %v4_9200, align 1
  %v0_9204 = load i32, i32* %lr.global-to-local, align 4
  %v2_9204 = icmp eq i32 %v0_9204, 0
  store i1 %v2_9204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_9208, i32* %ip.global-to-local, align 4
  store i32 %v4_920c, i32* %lr.global-to-local, align 4
  br i1 %v2_9204, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_91a4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_9214 = load i32, i32* %r4.global-to-local, align 4
  %v4_9214 = add i32 %v3_9214, 6
  %v5_9214 = inttoptr i32 %v4_9214 to i16*
  store i16 64, i16* %v5_9214, align 2
  %v0_9218.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_9218.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_91a4, %bb
  %v0_9218.off0 = phi i16 [ %extract.t, %dec_label_pc_91a4 ], [ %extract.t27, %bb ]
  %v2_9218 = load i32, i32* %r4.global-to-local, align 4
  %v3_9218 = add i32 %v2_9218, 2
  %v4_9218 = inttoptr i32 %v3_9218 to i16*
  store i16 %v0_9218.off0, i16* %v4_9218, align 2
  %v0_921c = load i32, i32* %r4.global-to-local, align 4
  %v1_921c = add i32 %v0_921c, 20
  store i32 %v1_921c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_9228 = add i32 %v0_921c, 9
  %v4_9228 = inttoptr i32 %v3_9228 to i8*
  store i8 47, i8* %v4_9228, align 1
  %v0_922c = load i32, i32* %lr.global-to-local, align 4
  %v1_922c = trunc i32 %v0_922c to i16
  %v2_922c = load i32, i32* %r4.global-to-local, align 4
  %v3_922c = add i32 %v2_922c, 4
  %v4_922c = inttoptr i32 %v3_922c to i16*
  store i16 %v1_922c, i16* %v4_922c, align 2
  %v0_9230 = load i32, i32* %ip.global-to-local, align 4
  %v1_9230 = trunc i32 %v0_9230 to i16
  %v2_9230 = load i32, i32* %r2.global-to-local, align 4
  %v3_9230 = add i32 %v2_9230, 2
  %v4_9230 = inttoptr i32 %v3_9230 to i16*
  store i16 %v1_9230, i16* %v4_9230, align 2
  store i32 %v6_9060, i32* %lr.global-to-local, align 4
  %v0_9238 = load i32, i32* %r4.global-to-local, align 4
  %v1_9238 = add i32 %v0_9238, 24
  %v2_9238 = inttoptr i32 %v1_9238 to i8*
  %v3_9238 = load i8, i8* %v2_9238, align 1
  %v4_9238 = zext i8 %v3_9238 to i32
  store i32 %v4_9238, i32* %r2.global-to-local, align 4
  %v2_923c = add i32 %v0_9238, 12
  %v3_923c = inttoptr i32 %v2_923c to i32*
  store i32 %v6_9060, i32* %v3_923c, align 4
  %v0_9240 = load i32, i32* %r2.global-to-local, align 4
  %v1_9240 = and i32 %v0_9240, -241
  %v1_9244 = or i32 %v1_9240, 64
  store i32 %v1_9244, i32* %r2.global-to-local, align 4
  %v0_9248 = load i32, i32* %r1.global-to-local, align 4
  %v1_9248 = load i32, i32* @sl, align 4
  %v2_9248 = add i32 %v1_9248, %v0_9248
  store i32 %v2_9248, i32* %r1.global-to-local, align 4
  %v1_924c = add i32 %v2_9248, 16
  %v2_924c = inttoptr i32 %v1_924c to i32*
  %v3_924c = load i32, i32* %v2_924c, align 4
  store i32 %v3_924c, i32* %r1.global-to-local, align 4
  %v1_9250 = trunc i32 %v1_9244 to i8
  %v2_9250 = load i32, i32* %r4.global-to-local, align 4
  %v3_9250 = add i32 %v2_9250, 24
  %v4_9250 = inttoptr i32 %v3_9250 to i8*
  store i8 %v1_9250, i8* %v4_9250, align 1
  %v0_9254 = load i32, i32* %r4.global-to-local, align 4
  %v1_9254 = add i32 %v0_9254, 24
  %v2_9254 = inttoptr i32 %v1_9254 to i8*
  %v3_9254 = load i8, i8* %v2_9254, align 1
  %v1_9258 = and i8 %v3_9254, -16
  %v1_925c = or i8 %v1_9258, 5
  store i8 %v1_925c, i8* %v2_9254, align 1
  %v0_9264 = load i32, i32* %r1.global-to-local, align 4
  %v1_9264 = load i32, i32* %r4.global-to-local, align 4
  %v2_9264 = add i32 %v1_9264, 16
  %v3_9264 = inttoptr i32 %v2_9264 to i32*
  store i32 %v0_9264, i32* %v3_9264, align 4
  store i32 %v6_8f58, i32* %r1.global-to-local, align 4
  %v0_926c = load i32, i32* %r4.global-to-local, align 4
  %v1_926c = add i32 %v0_926c, 24
  store i32 %v1_926c, i32* @r5, align 4
  %v3_9270 = add i32 %v0_926c, 25
  %v4_9270 = inttoptr i32 %v3_9270 to i8*
  store i8 %v5_8f78, i8* %v4_9270, align 1
  store i32 %v4_9274, i32* %r2.global-to-local, align 4
  %v0_9278 = load i32, i32* @r8, align 4
  %v1_9278 = trunc i32 %v0_9278 to i16
  %v2_9278 = load i32, i32* @r5, align 4
  %v3_9278 = add i32 %v2_9278, 2
  %v4_9278 = inttoptr i32 %v3_9278 to i16*
  store i16 %v1_9278, i16* %v4_9278, align 2
  %v0_927c = load i32, i32* %r2.global-to-local, align 4
  %v1_927c = trunc i32 %v0_927c to i16
  %v2_927c = load i32, i32* @r5, align 4
  %v3_927c = add i32 %v2_927c, 4
  %v4_927c = inttoptr i32 %v3_927c to i16*
  store i16 %v1_927c, i16* %v4_927c, align 2
  store i32 %v1_8f9c, i32* %r3.global-to-local, align 4
  %v0_9284 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9284, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_9288 = load i32, i32* @r5, align 4
  %v3_9288 = add i32 %v2_9288, 8
  %v4_9288 = inttoptr i32 %v3_9288 to i8*
  store i8 %v1_9200, i8* %v4_9288, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_9290 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9290, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9290 = load i32, i32* %ip.global-to-local, align 4
  %v2_9290 = trunc i32 %v1_9290 to i16
  %v3_9290 = load i32, i32* @r5, align 4
  %v4_9290 = add i32 %v3_9290, 6
  %v5_9290 = inttoptr i32 %v4_9290 to i16*
  store i16 %v2_9290, i16* %v5_9290, align 2
  %v0_9294.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_9294.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9294.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_9294 = load i32, i32* @r5, align 4
  %v3_9294 = add i32 %v2_9294, 9
  %v4_9294 = inttoptr i32 %v3_9294 to i8*
  store i8 %v0_9294.off0, i8* %v4_9294, align 1
  %v0_9298 = call i32 @function_db0c()
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_92a4, i1* %cpsr_z.global-to-local, align 1
  %v1_92a8 = sub i32 1023, %v0_9298
  store i32 %v1_92a8, i32* %r3.global-to-local, align 4
  br i1 %v2_92a4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_92b0 = load i32, i32* @r5, align 4
  %v3_92b0 = add i32 %v2_92b0, 16
  %v4_92b0 = inttoptr i32 %v3_92b0 to i32*
  store i32 %v1_92a8, i32* %v4_92b0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_92ac = load i32, i32* %r4.global-to-local, align 4
  %v2_92ac = add i32 %v1_92ac, 16
  %v3_92ac = inttoptr i32 %v2_92ac to i32*
  %v4_92ac = load i32, i32* %v3_92ac, align 4
  store i32 %v4_92ac, i32* %r3.global-to-local, align 4
  %v2_92b4 = load i32, i32* @r5, align 4
  %v3_92b4 = add i32 %v2_92b4, 16
  %v4_92b4 = inttoptr i32 %v3_92b4 to i32*
  store i32 %v4_92ac, i32* %v4_92b4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_92b8 = load i32, i32* @r5, align 4
  %v2_92b8 = add i32 %v1_92b8, 12
  %v3_92b8 = inttoptr i32 %v2_92b8 to i32*
  store i32 %v0_9298, i32* %v3_92b8, align 4
  %v3_92bc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_92c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_92c4 = add i32 %v0_92c4, 44
  store i32 %v1_92c4, i32* @r6, align 4
  store i32 %v4_92c8, i32* %r2.global-to-local, align 4
  %v1_92cc = add i32 %v3_92bc, 1
  store i32 %v1_92cc, i32* @r4, align 4
  store i32 %v4_92d0, i32* %r3.global-to-local, align 4
  %v9_92d4 = icmp eq i32 %v1_92cc, %arg2
  store i1 %v9_92d4, i1* %cpsr_z.global-to-local, align 1
  %v0_92d8 = load i32, i32* @r7, align 4
  %v1_92d8 = trunc i32 %v0_92d8 to i16
  %v3_92d8 = add i32 %v0_92c4, 48
  %v4_92d8 = inttoptr i32 %v3_92d8 to i16*
  store i16 %v1_92d8, i16* %v4_92d8, align 2
  %v0_92dc = load i32, i32* %r2.global-to-local, align 4
  %v1_92dc = trunc i32 %v0_92dc to i16
  %v2_92dc = load i32, i32* @r6, align 4
  %v3_92dc = inttoptr i32 %v2_92dc to i16*
  store i16 %v1_92dc, i16* %v3_92dc, align 2
  %v0_92e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_92e0 = trunc i32 %v0_92e0 to i16
  %v2_92e0 = load i32, i32* @r6, align 4
  %v3_92e0 = add i32 %v2_92e0, 2
  %v4_92e0 = inttoptr i32 %v3_92e0 to i16*
  store i16 %v1_92e0, i16* %v4_92e0, align 2
  %v0_92e4 = load i32, i32* @r4, align 4
  store i32 %v0_92e4, i32* %stack_var_-44, align 4
  %v5_92e8 = icmp slt i32 %v1_92cc, %arg2
  br i1 %v5_92e8, label %dec_label_pc_91a4, label %dec_label_pc_92ec.preheader

dec_label_pc_92ec.preheader:                      ; preds = %bb82, %dec_label_pc_90bc
  %v1_9308 = add i32 %v6_900c, 8
  %v1_930c = add i32 %v6_900c, 52
  %v2_9318 = icmp eq i32 %v6_9060, -1
  %v7_9318 = icmp eq i32 %v6_9060, -1
  %v2_94fc = icmp eq i32 %v1_90d8, 0
  %v2_9518 = icmp eq i32 %v1_902c, 0
  br label %dec_label_pc_92ec

dec_label_pc_92ec:                                ; preds = %dec_label_pc_92ec.preheader, %dec_label_pc_9544
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_90e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_90e4, label %dec_label_pc_9544, label %dec_label_pc_9300

dec_label_pc_9300:                                ; preds = %dec_label_pc_92ec
  store i32 %v6_900c, i32* %lr.global-to-local, align 4
  store i32 %v1_9308, i32* @sb, align 4
  store i32 %v1_930c, i32* @r8, align 4
  br label %dec_label_pc_9418

dec_label_pc_9314:                                ; preds = %dec_label_pc_9418
  store i32 %v6_9060, i32* %r2.global-to-local, align 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9318, label %dec_label_pc_94a0, label %dec_label_pc_9320

dec_label_pc_9320:                                ; preds = %dec_label_pc_9440, %dec_label_pc_9314
  store i32 65535, i32* @r4, align 4
  %v0_9328 = load i32, i32* @fp, align 4
  %v9_9328 = icmp eq i32 %v0_9328, 65535
  store i1 %v9_9328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9328, label %dec_label_pc_94b8, label %dec_label_pc_9330

dec_label_pc_9330:                                ; preds = %dec_label_pc_94a0.dec_label_pc_9330_crit_edge, %dec_label_pc_9320
  %v1_9334 = phi i32 [ %v1_9334.pre, %dec_label_pc_94a0.dec_label_pc_9330_crit_edge ], [ 65535, %dec_label_pc_9320 ]
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v9_9334 = icmp eq i32 %v3_90dc, %v1_9334
  store i1 %v9_9334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9334, label %dec_label_pc_94e0, label %dec_label_pc_933c

dec_label_pc_933c:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_9330
  %v1_9340 = phi i32 [ %v1_94d8, %dec_label_pc_94b8 ], [ %v1_9334, %dec_label_pc_9330 ]
  store i32 %v3_90e0, i32* %ip.global-to-local, align 4
  %v9_9340 = icmp eq i32 %v3_90e0, %v1_9340
  store i1 %v9_9340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9340, label %dec_label_pc_94f4, label %dec_label_pc_9348

dec_label_pc_9348:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_933c
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_94fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94fc, label %dec_label_pc_9510, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_9348
  %v1_9350 = load i32, i32* @r5, align 4
  %v2_9350 = add i32 %v1_9350, 16
  %v3_9350 = inttoptr i32 %v2_9350 to i32*
  %v4_9350 = load i32, i32* %v3_9350, align 4
  store i32 %v4_9350, i32* %r3.global-to-local, align 4
  %v2_9354 = load i32, i32* @r6, align 4
  %v3_9354 = add i32 %v2_9354, 16
  %v4_9354 = inttoptr i32 %v3_9354 to i32*
  store i32 %v4_9350, i32* %v4_9354, align 4
  br label %dec_label_pc_935c

dec_label_pc_935c:                                ; preds = %bb85, %.thread14
  store i32 %v1_902c, i32* %r1.global-to-local, align 4
  store i1 %v2_9518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9518, label %dec_label_pc_9368, label %dec_label_pc_9524

dec_label_pc_9368:                                ; preds = %dec_label_pc_935c, %dec_label_pc_9510, %dec_label_pc_9524
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_936c = load i32, i32* @r5, align 4
  %v3_936c = add i32 %v2_936c, 10
  %v4_936c = inttoptr i32 %v3_936c to i16*
  store i16 0, i16* %v4_936c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9374 = load i32, i32* @r5, align 4
  store i32 %v0_9374, i32* @r0, align 4
  %v2_9378 = call i32 @function_bf78(i32 %v0_9374, i32 20)
  %v3_9378 = trunc i32 %v2_9378 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_9380 = load i32, i32* @r5, align 4
  %v4_9380 = add i32 %v3_9380, 10
  %v5_9380 = inttoptr i32 %v4_9380 to i16*
  store i16 %v3_9378, i16* %v5_9380, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9388 = load i32, i32* %ip.global-to-local, align 4
  %v1_9388 = trunc i32 %v0_9388 to i16
  %v2_9388 = load i32, i32* @r6, align 4
  %v3_9388 = add i32 %v2_9388, 10
  %v4_9388 = inttoptr i32 %v3_9388 to i16*
  store i16 %v1_9388, i16* %v4_9388, align 2
  %v0_938c = load i32, i32* @r6, align 4
  store i32 %v0_938c, i32* @r0, align 4
  %v2_9390 = call i32 @function_bf78(i32 %v0_938c, i32 20)
  %v3_9390 = trunc i32 %v2_9390 to i16
  %v3_9394 = load i32, i32* @r6, align 4
  %v4_9394 = add i32 %v3_9394, 10
  %v5_9394 = inttoptr i32 %v4_9394 to i16*
  store i16 %v3_9390, i16* %v5_9394, align 2
  %v2_939c = load i32, i32* @r7, align 4
  %v3_939c = add i32 %v2_939c, 6
  %v4_939c = inttoptr i32 %v3_939c to i16*
  store i16 0, i16* %v4_939c, align 2
  %v0_93a0 = load i32, i32* @r7, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  %v1_93a4 = add i32 %v0_93a0, 4
  %v2_93a4 = inttoptr i32 %v1_93a4 to i16*
  %v3_93a4 = load i16, i16* %v2_93a4, align 2
  %v4_93a4 = zext i16 %v3_93a4 to i32
  store i32 %v4_93a4, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @sb, align 4
  store i32 %v0_93a8, i32* %r3.global-to-local, align 4
  %v0_93ac = load i32, i32* @r6, align 4
  %v4_93b0 = call i32 @function_bfc8(i32 %v0_93ac, i32 %v0_93a0, i32 %v4_93a4, i32 %v0_93a8)
  %v5_93b0 = trunc i32 %v4_93b0 to i16
  %v3_93b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_93b4, i32* %r2.global-to-local, align 4
  %v3_93b8 = mul i32 %v3_93b4, 32
  store i32 %v3_93b8, i32* %r3.global-to-local, align 4
  %v0_93bc = load i32, i32* @r5, align 4
  %v1_93bc = add i32 %v0_93bc, 16
  %v2_93bc = inttoptr i32 %v1_93bc to i32*
  %v3_93bc = load i32, i32* %v2_93bc, align 4
  %v5_93c0 = mul i32 %v3_93b4, 24
  store i32 %v5_93c0, i32* %r3.global-to-local, align 4
  %v1_93c4 = load i32, i32* @sl, align 4
  %v2_93c4 = add i32 %v1_93c4, %v5_93c0
  store i32 %v2_93c4, i32* @lr, align 4
  %v2_93c8 = add i32 %v2_93c4, 4
  %v3_93c8 = inttoptr i32 %v2_93c8 to i32*
  store i32 %v3_93bc, i32* %v3_93c8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_93d4 = load i32, i32* @r7, align 4
  %v4_93d4 = add i32 %v3_93d4, 6
  %v5_93d4 = inttoptr i32 %v4_93d4 to i16*
  store i16 %v5_93b0, i16* %v5_93d4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_93dc = load i32, i32* %r1.global-to-local, align 4
  %v1_93dc = trunc i32 %v0_93dc to i16
  %v2_93dc = load i32, i32* %r3.global-to-local, align 4
  %v3_93dc = load i32, i32* @sl, align 4
  %v4_93dc = add i32 %v3_93dc, %v2_93dc
  %v5_93dc = inttoptr i32 %v4_93dc to i16*
  store i16 %v1_93dc, i16* %v5_93dc, align 2
  %v0_93e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_93e0 = trunc i32 %v0_93e0 to i16
  %v2_93e0 = load i32, i32* @lr, align 4
  %v3_93e0 = add i32 %v2_93e0, 2
  %v4_93e0 = inttoptr i32 %v3_93e0 to i16*
  store i16 %v1_93e0, i16* %v4_93e0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93e8 = load i32, i32* @r5, align 4
  store i32 %v0_93e8, i32* %r1.global-to-local, align 4
  %v0_93f0 = load i32, i32* @r8, align 4
  store i32 %v0_93f0, i32* %r2.global-to-local, align 4
  %v0_93f4 = load i32, i32* @lr, align 4
  %v0_93f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_93fc = call i32 @function_123e0(i32 %v3_9084, i32 %v0_93e8, i32 %v0_93f0, i32 16384, i32 %v0_93f4, i32 %v0_93f8)
  %v3_9400 = load i32, i32* %stack_var_-44, align 4
  %v1_9404 = add i32 %v3_9400, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_940c = icmp eq i32 %v1_9404, %arg2
  store i1 %v9_940c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9404, i32* %stack_var_-44, align 4
  %v6_9414 = icmp slt i32 %v1_9404, %arg2
  br i1 %v6_9414, label %dec_label_pc_9418, label %dec_label_pc_9544

dec_label_pc_9418:                                ; preds = %dec_label_pc_9368, %dec_label_pc_9300
  %v1_942c = phi i32 [ %v1_9404, %dec_label_pc_9368 ], [ 0, %dec_label_pc_9300 ]
  %v5_941c = mul i32 %v1_942c, 24
  %v1_9420 = load i32, i32* @sl, align 4
  %v2_9420 = add i32 %v1_9420, %v5_941c
  store i32 %v2_9420, i32* %r3.global-to-local, align 4
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  %v1_9428 = add i32 %v2_9420, 20
  %v2_9428 = inttoptr i32 %v1_9428 to i8*
  %v3_9428 = load i8, i8* %v2_9428, align 1
  %v4_9428 = zext i8 %v3_9428 to i32
  store i32 %v4_9428, i32* %r2.global-to-local, align 4
  %v4_942c = mul i32 %v1_942c, 4
  %v5_942c = add i32 %v4_942c, %v2_8f40
  %v6_942c = inttoptr i32 %v5_942c to i32*
  %v7_942c = load i32, i32* %v6_942c, align 4
  store i32 %v7_942c, i32* @r5, align 4
  %v2_9430 = icmp ugt i8 %v3_9428, 30
  %v7_9430 = icmp eq i8 %v3_9428, 31
  store i1 %v7_9430, i1* %cpsr_z.global-to-local, align 1
  %v1_9434 = add i32 %v7_942c, 24
  store i32 %v1_9434, i32* @r6, align 4
  %v1_9438 = add i32 %v7_942c, 44
  store i32 %v1_9438, i32* @r7, align 4
  %v2_943c = xor i1 %v7_9430, true
  %v3_943c = and i1 %v2_9430, %v2_943c
  br i1 %v3_943c, label %dec_label_pc_9314, label %dec_label_pc_9440

dec_label_pc_9440:                                ; preds = %dec_label_pc_9418
  %v1_9440 = add i32 %v2_9420, 16
  %v2_9440 = inttoptr i32 %v1_9440 to i32*
  %v3_9440 = load i32, i32* %v2_9440, align 4
  store i32 %v3_9440, i32* %r4.global-to-local, align 4
  %v0_9444 = call i32 @function_db0c()
  %v3_9448 = load i32, i32* %stack_var_-44, align 4
  %v5_9450 = mul i32 %v3_9448, 24
  %v1_9454 = and i32 %v3_9440, 16711680
  store i32 %v1_9454, i32* %ip.global-to-local, align 4
  %v3_9458 = udiv i32 %v3_9440, 16777216
  %v4_945c = udiv i32 %v1_9454, 256
  %v5_945c = or i32 %v4_945c, %v3_9458
  store i32 %v5_945c, i32* %r2.global-to-local, align 4
  %v1_9460 = load i32, i32* @sl, align 4
  %v2_9460 = add i32 %v1_9460, %v5_9450
  store i32 %v2_9460, i32* %r1.global-to-local, align 4
  %v1_9464 = and i32 %v3_9440, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_9464, i32* %r3.global-to-local, align 4
  %v1_9468 = add i32 %v2_9460, 20
  %v2_9468 = inttoptr i32 %v1_9468 to i8*
  %v3_9468 = load i8, i8* %v2_9468, align 1
  %v4_9468 = zext i8 %v3_9468 to i32
  store i32 %v4_9468, i32* %ip.global-to-local, align 4
  %v4_946c = mul i32 %v1_9464, 256
  %v4_9470 = mul i32 %v3_9440, 16777216
  %v5_946c = or i32 %v4_946c, %v4_9470
  %v5_9470 = or i32 %v5_946c, %v5_945c
  %v7_9474 = lshr i32 %v0_9444, %v4_9468
  %v8_9474 = add i32 %v7_9474, %v5_9470
  %v1_9480 = and i32 %v8_9474, 65280
  store i32 %v1_9480, i32* %r1.global-to-local, align 4
  %v5_948c = call i32 @llvm.bswap.i32(i32 %v8_9474)
  store i32 %v5_948c, i32* %r3.global-to-local, align 4
  store i32 %v6_9060, i32* %r2.global-to-local, align 4
  store i1 %v7_9318, i1* %cpsr_z.global-to-local, align 1
  %v1_9498 = load i32, i32* @r5, align 4
  %v2_9498 = add i32 %v1_9498, 16
  %v3_9498 = inttoptr i32 %v2_9498 to i32*
  store i32 %v5_948c, i32* %v3_9498, align 4
  br i1 %v2_9318, label %dec_label_pc_94a0, label %dec_label_pc_9320

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9440, %dec_label_pc_9314
  %v0_94a0 = call i32 @function_db0c()
  store i32 65535, i32* @r4, align 4
  %v0_94ac = load i32, i32* @fp, align 4
  %v9_94ac = icmp eq i32 %v0_94ac, 65535
  store i1 %v9_94ac, i1* %cpsr_z.global-to-local, align 1
  %v1_94b0 = load i32, i32* @r5, align 4
  %v2_94b0 = add i32 %v1_94b0, 12
  %v3_94b0 = inttoptr i32 %v2_94b0 to i32*
  store i32 %v0_94a0, i32* %v3_94b0, align 4
  br i1 %v9_94ac, label %dec_label_pc_94b8, label %dec_label_pc_94a0.dec_label_pc_9330_crit_edge

dec_label_pc_94a0.dec_label_pc_9330_crit_edge:    ; preds = %dec_label_pc_94a0
  %v1_9334.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9330

dec_label_pc_94b8:                                ; preds = %dec_label_pc_94a0, %dec_label_pc_9320
  %v0_94b8 = call i32 @function_db0c()
  %v3_94c0 = urem i32 %v0_94b8, 65536
  %v1_94c8 = sub nsw i32 999, %v3_94c0
  store i32 %v1_94c8, i32* %r3.global-to-local, align 4
  %v1_94cc = trunc i32 %v0_94b8 to i16
  %v2_94cc = load i32, i32* @r5, align 4
  %v3_94cc = add i32 %v2_94cc, 4
  %v4_94cc = inttoptr i32 %v3_94cc to i16*
  store i16 %v1_94cc, i16* %v4_94cc, align 2
  %v0_94d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_94d0 = trunc i32 %v0_94d0 to i16
  %v2_94d0 = load i32, i32* @r6, align 4
  %v3_94d0 = add i32 %v2_94d0, 4
  %v4_94d0 = inttoptr i32 %v3_94d0 to i16*
  store i16 %v1_94d0, i16* %v4_94d0, align 2
  store i32 %v3_90dc, i32* %r3.global-to-local, align 4
  %v1_94d8 = load i32, i32* @r4, align 4
  %v9_94d8 = icmp eq i32 %v3_90dc, %v1_94d8
  store i1 %v9_94d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_94d8, label %dec_label_pc_94e0, label %dec_label_pc_933c

dec_label_pc_94e0:                                ; preds = %dec_label_pc_94b8, %dec_label_pc_9330
  %v0_94e0 = call i32 @function_db0c()
  %v1_94e0 = trunc i32 %v0_94e0 to i16
  store i32 %v3_90e0, i32* %ip.global-to-local, align 4
  %v1_94e8 = load i32, i32* @r4, align 4
  %v9_94e8 = icmp eq i32 %v3_90e0, %v1_94e8
  store i1 %v9_94e8, i1* %cpsr_z.global-to-local, align 1
  %v3_94ec = load i32, i32* @r5, align 4
  %v4_94ec = add i32 %v3_94ec, 44
  %v5_94ec = inttoptr i32 %v4_94ec to i16*
  store i16 %v1_94e0, i16* %v5_94ec, align 2
  br i1 %v9_94e8, label %dec_label_pc_94f4, label %dec_label_pc_9348

dec_label_pc_94f4:                                ; preds = %dec_label_pc_94e0, %dec_label_pc_933c
  %v0_94f4 = call i32 @function_db0c()
  %v1_94f4 = trunc i32 %v0_94f4 to i16
  store i32 %v1_90d8, i32* @lr, align 4
  store i1 %v2_94fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94fc, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_94f4
  %v3_950430 = load i32, i32* @r7, align 4
  %v4_950431 = add i32 %v3_950430, 2
  %v5_950432 = inttoptr i32 %v4_950431 to i16*
  store i16 %v1_94f4, i16* %v5_950432, align 2
  br label %dec_label_pc_9510

bb85:                                             ; preds = %dec_label_pc_94f4
  %v1_9500 = load i32, i32* @r5, align 4
  %v2_9500 = add i32 %v1_9500, 16
  %v3_9500 = inttoptr i32 %v2_9500 to i32*
  %v4_9500 = load i32, i32* %v3_9500, align 4
  store i32 %v4_9500, i32* %r3.global-to-local, align 4
  %v3_9504 = load i32, i32* @r7, align 4
  %v4_9504 = add i32 %v3_9504, 2
  %v5_9504 = inttoptr i32 %v4_9504 to i16*
  store i16 %v1_94f4, i16* %v5_9504, align 2
  %v1_9508 = load i32, i32* %r3.global-to-local, align 4
  %v2_9508 = load i32, i32* @r6, align 4
  %v3_9508 = add i32 %v2_9508, 16
  %v4_9508 = inttoptr i32 %v3_9508 to i32*
  store i32 %v1_9508, i32* %v4_9508, align 4
  br label %dec_label_pc_935c

dec_label_pc_9510:                                ; preds = %.thread29, %dec_label_pc_9348
  %v0_9510 = call i32 @function_db0c()
  store i32 %v1_902c, i32* %r1.global-to-local, align 4
  store i1 %v2_9518, i1* %cpsr_z.global-to-local, align 1
  %v1_951c = load i32, i32* @r6, align 4
  %v2_951c = add i32 %v1_951c, 16
  %v3_951c = inttoptr i32 %v2_951c to i32*
  store i32 %v0_9510, i32* %v3_951c, align 4
  br i1 %v2_9518, label %dec_label_pc_9368, label %dec_label_pc_9524

dec_label_pc_9524:                                ; preds = %dec_label_pc_935c, %dec_label_pc_9510
  %v0_9524 = load i32, i32* @r7, align 4
  %v1_9524 = add i32 %v0_9524, 8
  store i32 %v1_9524, i32* @r4, align 4
  store i32 %v6_900c, i32* %r1.global-to-local, align 4
  %v2_9530 = call i32 @function_dbd0(i32 %v1_9524, i32 %v6_900c)
  store i32 %v6_900c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_953c = load i32, i32* @r4, align 4
  %v4_953c = add i32 %v2_953c, %v6_900c
  %v5_953c = inttoptr i32 %v4_953c to i8*
  store i8 0, i8* %v5_953c, align 1
  br label %dec_label_pc_9368

dec_label_pc_9544:                                ; preds = %dec_label_pc_9368, %dec_label_pc_92ec
  %v2_9548 = call i32 @function_118d4(i32* null)
  store i32 %v2_9070, i32* %ip.global-to-local, align 4
  %v9_9550 = icmp eq i32 %v2_9070, %v2_9548
  store i1 %v9_9550, i1* %cpsr_z.global-to-local, align 1
  %v6_9554 = icmp slt i32 %v2_9070, %v2_9548
  br i1 %v6_9554, label %dec_label_pc_9558, label %dec_label_pc_92ec

dec_label_pc_9558:                                ; preds = %dec_label_pc_9544, %dec_label_pc_8f14, %dec_label_pc_9564
  %v1_9560 = phi i32 [ %v3_9084, %dec_label_pc_8f14 ], [ %v1_9568, %dec_label_pc_9564 ], [ %v2_9548, %dec_label_pc_9544 ]
  store i32 %v3_8f14, i32* %r4.global-to-local, align 4
  store i32 %v24_8f14, i32* %fp.global-to-local, align 4
  store i32 %v27_8f14, i32* %lr.global-to-local, align 4
  ret i32 %v1_9560

dec_label_pc_9564:                                ; preds = %dec_label_pc_9094
  %v1_9568 = call i32 @function_11c54(i32 %v3_9084)
  br label %dec_label_pc_9558

; uselistorder directives
  uselistorder i16 %v1_94f4, { 1, 0 }
  uselistorder i32 %v1_94d8, { 1, 0 }
  uselistorder i32 %v0_94b8, { 1, 0 }
  uselistorder i32 %v5_948c, { 1, 0 }
  uselistorder i32 %v3_9440, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v7_942c, { 1, 0, 2 }
  uselistorder i32 %v1_9404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_93b4, { 1, 0, 2 }
  uselistorder i1 %v2_9518, { 2, 3, 1, 0 }
  uselistorder i1 %v2_94fc, { 2, 3, 1, 0 }
  uselistorder i1 %v7_9318, { 2, 1, 0 }
  uselistorder i32 %v0_9298, { 1, 0 }
  uselistorder i32 %v1_9120, { 1, 0 }
  uselistorder i32 %v3_910c, { 2, 1, 0 }
  uselistorder i1 %v2_90e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_90d8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_90d4, { 1, 0 }
  uselistorder i32 %v0_90d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_90bc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_90b4, { 1, 0 }
  uselistorder i1 %v7_9088, { 1, 0 }
  uselistorder i32 %v3_9084, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_9070, { 2, 1, 0 }
  uselistorder i32 %v6_9060, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_902c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_900c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_8fc0, { 1, 2, 0 }
  uselistorder i32 %v1_8f9c, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8f94, { 1, 0 }
  uselistorder i32 %v7_8f7c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v6_8f58, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_8f40, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 32, 31, 34, 33, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_9558, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9524, { 1, 0 }
  uselistorder label %dec_label_pc_9368, { 2, 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_9574(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9574:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_3()
  %tmp33 = call i16 @__decompiler_undefined_function_2()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9574 = load i32, i32* @r4, align 4
  %v27_9574 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_95a0 = call i32 @function_12fcc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_95b0 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_95b4 = load i32, i32* @r4, align 4
  store i32 %v0_95b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_95c0 = load i32, i32* @r7, align 4
  store i32 %v0_95c0, i32* %r3.global-to-local, align 4
  %v0_95c4 = load i32, i32* @r5, align 4
  store i32 %v0_95c4, i32* %r0.global-to-local, align 4
  %v5_95c8 = inttoptr i32 %v0_95b4 to i32*
  %v6_95c8 = call i32 @function_8258(i32 %v0_95c4, i32* %v5_95c8, i32 2, i32 %v0_95c0, i32 %v2_95b0)
  %v1_95d4 = urem i32 %v6_95c8, 256
  store i32 %v1_95d4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_95e0 = load i32, i32* @r4, align 4
  store i32 %v0_95e0, i32* %r1.global-to-local, align 4
  %v0_95e4 = load i32, i32* @r5, align 4
  store i32 %v0_95e4, i32* %r0.global-to-local, align 4
  %v5_95e8 = trunc i32 %v6_95c8 to i8
  %v6_95ec = inttoptr i32 %v0_95e0 to i32*
  %v7_95ec = call i32 @function_8258(i32 %v0_95e4, i32* %v6_95ec, i32 3, i32 65535, i32 %v6_95c8)
  %v0_95f0 = load i32, i32* @r4, align 4
  store i32 %v0_95f0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_95ec, i32* @r8, align 4
  %v0_9600 = load i32, i32* @r5, align 4
  store i32 %v0_9600, i32* %r0.global-to-local, align 4
  %v5_9604 = inttoptr i32 %v0_95f0 to i32*
  %v6_9604 = call i32 @function_8258(i32 %v0_9600, i32* %v5_9604, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_960c = urem i32 %v6_9604, 256
  store i32 %v1_960c, i32* %ip.global-to-local, align 4
  %v0_9610 = load i32, i32* @r4, align 4
  store i32 %v0_9610, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_961c = load i32, i32* @r5, align 4
  store i32 %v0_961c, i32* %r0.global-to-local, align 4
  %v5_9620 = trunc i32 %v6_9604 to i8
  %v6_9624 = inttoptr i32 %v0_9610 to i32*
  %v7_9624 = call i32 @function_8258(i32 %v0_961c, i32* %v6_9624, i32 5, i32 1, i32 %v6_9604)
  %v1_9630 = urem i32 %v7_9624, 256
  store i32 %v1_9630, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_9638 = load i32, i32* @r4, align 4
  store i32 %v0_9638, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_9640 = load i32, i32* @r5, align 4
  store i32 %v0_9640, i32* %r0.global-to-local, align 4
  %v5_9648 = inttoptr i32 %v0_9638 to i32*
  %v6_9648 = call i32 @function_8258(i32 %v0_9640, i32* %v5_9648, i32 7, i32 65535, i32 %v1_9630)
  %v0_964c = load i32, i32* @r4, align 4
  store i32 %v0_964c, i32* %r1.global-to-local, align 4
  %v3_9650 = mul i32 %v6_9648, 65536
  store i32 %v3_9650, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9658 = load i32, i32* @r7, align 4
  store i32 %v0_9658, i32* %r3.global-to-local, align 4
  %v0_965c = load i32, i32* @r5, align 4
  store i32 %v0_965c, i32* %r0.global-to-local, align 4
  %v3_9660 = urem i32 %v6_9648, 65536
  store i32 %v3_9660, i32* @sb, align 4
  %v5_9664 = inttoptr i32 %v0_964c to i32*
  %v6_9664 = call i32 @function_8258(i32 %v0_965c, i32* %v5_9664, i32 10, i32 %v0_9658, i32 ptrtoint (i32* @0 to i32))
  %v1_966c = urem i32 %v6_9664, 256
  store i32 %v1_966c, i32* %ip.global-to-local, align 4
  %v0_9670 = load i32, i32* @r4, align 4
  store i32 %v0_9670, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_967c = load i32, i32* @r5, align 4
  store i32 %v0_967c, i32* %r0.global-to-local, align 4
  %v5_9684 = inttoptr i32 %v0_9670 to i32*
  %v6_9684 = call i32 @function_8258(i32 %v0_967c, i32* %v5_9684, i32 11, i32 1, i32 %v1_966c)
  %v1_968c = urem i32 %v6_9684, 256
  store i32 %v1_968c, i32* %ip.global-to-local, align 4
  %v0_9690 = load i32, i32* @r4, align 4
  store i32 %v0_9690, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_969c = load i32, i32* @r5, align 4
  store i32 %v0_969c, i32* %r0.global-to-local, align 4
  %v5_96a4 = inttoptr i32 %v0_9690 to i32*
  %v6_96a4 = call i32 @function_8258(i32 %v0_969c, i32* %v5_96a4, i32 12, i32 1, i32 %v1_968c)
  %v1_96ac = urem i32 %v6_96a4, 256
  store i32 %v1_96ac, i32* %ip.global-to-local, align 4
  %v0_96b0 = load i32, i32* @r4, align 4
  store i32 %v0_96b0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_96b8 = load i32, i32* @r7, align 4
  store i32 %v0_96b8, i32* %r3.global-to-local, align 4
  %v0_96bc = load i32, i32* @r5, align 4
  store i32 %v0_96bc, i32* %r0.global-to-local, align 4
  %v5_96c4 = inttoptr i32 %v0_96b0 to i32*
  %v6_96c4 = call i32 @function_8258(i32 %v0_96bc, i32* %v5_96c4, i32 13, i32 %v0_96b8, i32 %v1_96ac)
  %v1_96cc = urem i32 %v6_96c4, 256
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_96d0 = load i32, i32* @r4, align 4
  store i32 %v0_96d0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_96d8 = load i32, i32* @r7, align 4
  store i32 %v0_96d8, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  store i32 %v0_96dc, i32* %r0.global-to-local, align 4
  %v5_96e4 = inttoptr i32 %v0_96d0 to i32*
  %v6_96e4 = call i32 @function_8258(i32 %v0_96dc, i32* %v5_96e4, i32 14, i32 %v0_96d8, i32 %v1_96cc)
  %v1_96ec = urem i32 %v6_96e4, 256
  store i32 %v1_96ec, i32* %ip.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r4, align 4
  store i32 %v0_96f0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_96f8 = load i32, i32* @r7, align 4
  store i32 %v0_96f8, i32* %r3.global-to-local, align 4
  %v0_96fc = load i32, i32* @r5, align 4
  store i32 %v0_96fc, i32* %r0.global-to-local, align 4
  %v5_9704 = inttoptr i32 %v0_96f0 to i32*
  %v6_9704 = call i32 @function_8258(i32 %v0_96fc, i32* %v5_9704, i32 15, i32 %v0_96f8, i32 %v1_96ec)
  %v1_970c = urem i32 %v6_9704, 256
  store i32 %v1_970c, i32* %ip.global-to-local, align 4
  %v0_9710 = load i32, i32* @r7, align 4
  store i32 %v0_9710, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9718 = load i32, i32* @r4, align 4
  store i32 %v0_9718, i32* %r1.global-to-local, align 4
  %v0_971c = load i32, i32* @r5, align 4
  store i32 %v0_971c, i32* %r0.global-to-local, align 4
  %v5_9724 = inttoptr i32 %v0_9718 to i32*
  %v6_9724 = call i32 @function_8258(i32 %v0_971c, i32* %v5_9724, i32 %v0_9710, i32 768, i32 %v1_970c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9730 = load i32, i32* @r4, align 4
  store i32 %v0_9730, i32* %r1.global-to-local, align 4
  %v0_9738 = load i32, i32* @r5, align 4
  store i32 %v0_9738, i32* %r0.global-to-local, align 4
  %v5_973c = inttoptr i32 %v0_9730 to i32*
  %v6_973c = call i32 @function_8258(i32 %v0_9738, i32* %v5_973c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9744 = urem i32 %v6_973c, 256
  store i32 %v1_9744, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @r7, align 4
  store i32 %v0_9748, i32* %r0.global-to-local, align 4
  %v1_9750 = inttoptr i32 %v0_9748 to i32*
  %v2_9750 = call i32 @function_118d4(i32* %v1_9750)
  %v1_9754 = load i32, i32* @r6, align 4
  %v2_9754 = add i32 %v1_9754, %v2_9750
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9768 = call i32 @function_12464(i32 2, i32 3, i32 6)
  store i32 %v3_9768, i32* %r0.global-to-local, align 4
  %v7_976c = icmp eq i32 %v3_9768, -1
  store i32 %v3_9768, i32* @sl, align 4
  br i1 %v7_976c, label %dec_label_pc_9aac, label %dec_label_pc_9778

dec_label_pc_9778:                                ; preds = %dec_label_pc_9574
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9780 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9780, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9788 = load i32, i32* @r7, align 4
  store i32 %v0_9788, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9794 = call i32 @function_12420(i32 %v3_9768, i32 %v0_9788, i32 3, i32 %v6_9780, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9794, i32* %r0.global-to-local, align 4
  %v7_9798 = icmp eq i32 %v5_9794, -1
  br i1 %v7_9798, label %dec_label_pc_9aa4, label %dec_label_pc_97a0

dec_label_pc_97a0:                                ; preds = %dec_label_pc_9778
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_97a4 = load i32, i32* @r8, align 4
  %v3_97a8 = urem i32 %v0_97a4, 65536
  store i32 %v3_97a8, i32* @r3, align 4
  %v2_97ac = icmp eq i32 %arg2, 0
  %v0_97b0 = load i32, i32* @r7, align 4
  store i32 %v0_97b0, i32* %stack_var_-44, align 4
  %v5_97b4 = trunc i32 %v0_97a4 to i16
  br i1 %v2_97ac, label %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge, label %dec_label_pc_97bc.preheader

dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge: ; preds = %dec_label_pc_97a0
  %.pre = sext i16 %v5_97b4 to i32
  %.pre94 = add i32 %v6_9724, 40
  br label %dec_label_pc_9948.preheader

dec_label_pc_97bc.preheader:                      ; preds = %dec_label_pc_97a0
  %v2_9800 = ptrtoint i32* %stack_var_-160 to i32
  %v2_9848 = ptrtoint i32* %stack_var_-64 to i32
  %v2_9860 = ptrtoint i32* %stack_var_-80 to i32
  %v2_9868 = ptrtoint i32* %stack_var_-336 to i32
  %v2_986c = ptrtoint i32* %stack_var_-48 to i32
  %v4_98f4 = zext i8 %tmp32 to i32
  %v1_98f8 = and i32 %v4_98f4, 18
  %v2_98fc = icmp eq i32 %v1_98f8, 18
  %v1_9bac = add i32 %v6_9724, 40
  %v4_9bec = sext i16 %v5_97b4 to i32
  %v3_9bf8 = udiv i32 %v4_9bec, 256
  %v1_9cd4 = urem i32 %v6_9664, 2
  %tmp95 = sub nsw i32 0, %v1_9cd4
  %v4_9cdc = and i32 %tmp95, 32
  %v1_9d08 = urem i32 %v6_96a4, 2
  %tmp96 = sub nsw i32 0, %v1_9d08
  %v4_9d10 = and i32 %tmp96, 8
  %v1_9d54 = urem i32 %v6_9704, 2
  %v3_98e0 = sext i16 %tmp62 to i32
  %v1_9904 = and i32 %v4_98f4, 5
  %v2_9904 = icmp eq i32 %v1_9904, 0
  %v4_9840 = add i32 %v2_9800, 98
  %v5_9840 = inttoptr i32 %v4_9840 to i16*
  %v1_9bf4 = mul nsw i32 %v4_9bec, 256
  %v4_9c04 = and i32 %v1_9bf4, 65280
  %v5_9c04 = or i32 %v4_9c04, %v3_9bf8
  %v1_9cec = urem i32 %v6_9684, 2
  %tmp97 = sub nsw i32 0, %v1_9cec
  %v4_9cf4 = and i32 %tmp97, 16
  %v1_9d20 = urem i32 %v6_96c4, 2
  %tmp98 = sub nsw i32 0, %v1_9d20
  %v4_9d28 = and i32 %tmp98, 4
  %v1_9d38 = urem i32 %v6_96e4, 2
  %tmp99 = sub nsw i32 0, %v1_9d38
  %v3_9d40 = and i32 %tmp99, 2
  br label %dec_label_pc_97bc.outer

dec_label_pc_97bc.outer:                          ; preds = %dec_label_pc_97bc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_97bc.preheader ], [ %v0_9c38, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_97bc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_97bc.preheader ], [ %v0_9b50, %.thread10 ]
  br label %dec_label_pc_97bc

dec_label_pc_97bc:                                ; preds = %dec_label_pc_97bc.outer, %dec_label_pc_9930
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9930 ], [ %stack_var_-62.0.ph, %dec_label_pc_97bc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9930 ], [ %stack_var_-60.0.ph, %dec_label_pc_97bc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_97c8 = call i32 @function_12464(i32 2, i32 1, i32 0)
  store i32 %v3_97c8, i32* %r0.global-to-local, align 4
  %v7_97cc = icmp eq i32 %v3_97c8, -1
  store i32 %v3_97c8, i32* @r8, align 4
  br i1 %v7_97cc, label %dec_label_pc_9930, label %dec_label_pc_97d8

dec_label_pc_97d8:                                ; preds = %dec_label_pc_97bc, %dec_label_pc_990c
  %v0_97e0 = phi i32 [ %v3_9920, %dec_label_pc_990c ], [ %v3_97c8, %dec_label_pc_97bc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_990c ], [ %stack_var_-62.0, %dec_label_pc_97bc ]
  %stack_var_-60.1 = phi i32 [ %v0_9b50, %dec_label_pc_990c ], [ %stack_var_-60.0, %dec_label_pc_97bc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_97e0 = call i32 @function_11a88(i32 %v0_97e0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_97e8 = or i32 %v2_97e0, 2048
  store i32 %v1_97e8, i32* %r2.global-to-local, align 4
  %v0_97ec = load i32, i32* @r8, align 4
  store i32 %v0_97ec, i32* %r0.global-to-local, align 4
  %v2_97f0 = call i32 @function_11a88(i32 %v0_97ec, i32 4)
  store i32 %v2_97f0, i32* %r0.global-to-local, align 4
  %v3_97f4 = load i32, i32* %stack_var_-44, align 4
  %v5_97fc = mul i32 %v3_97f4, 24
  store i32 %v2_9800, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_980c = load i32, i32* @fp, align 4
  %v2_980c = add i32 %v1_980c, %v5_97fc
  store i32 %v2_980c, i32* %r3.global-to-local, align 4
  %v1_9810 = add i32 %v2_980c, 20
  %v2_9810 = inttoptr i32 %v1_9810 to i8*
  %v3_9810 = load i8, i8* %v2_9810, align 1
  %v4_9810 = zext i8 %v3_9810 to i32
  store i32 %v4_9810, i32* %r2.global-to-local, align 4
  %v2_9814 = icmp ugt i8 %v3_9810, 30
  %v7_9814 = icmp eq i8 %v3_9810, 31
  %v2_9818 = xor i1 %v7_9814, true
  %v3_9818 = and i1 %v2_9814, %v2_9818
  br i1 %v3_9818, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_97d8
  %v5_9818 = add i32 %v2_980c, 16
  %v6_9818 = inttoptr i32 %v5_9818 to i32*
  %v7_9818 = load i32, i32* %v6_9818, align 4
  store i32 %v7_9818, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_97d8, %bb
  %v4_981c = phi i32 [ %v2_980c, %dec_label_pc_97d8 ], [ %v7_9818, %bb ]
  %v4_981c.stack_var_-60.1 = select i1 %v3_9818, i32 %v4_981c, i32 %stack_var_-60.1
  %v2_9820 = xor i1 %v2_9814, true
  %v3_9820 = or i1 %v7_9814, %v2_9820
  br i1 %v3_9820, label %dec_label_pc_9ab8, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %bb72, %dec_label_pc_9ab8
  %v0_9b50 = phi i32 [ %v5_9b04, %dec_label_pc_9ab8 ], [ %v4_981c.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_982c = load i32, i32* @sb, align 4
  %v9_982c = icmp eq i32 %v0_982c, 65535
  br i1 %v9_982c, label %dec_label_pc_9b10, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_9824
  %v4_9830 = udiv i32 %v0_982c, 256
  %v2_9834 = urem i32 %v0_982c, 256
  store i32 %v2_9834, i32* %r2.global-to-local, align 4
  %v5_9838 = mul nuw nsw i32 %v2_9834, 256
  %v6_9838 = or i32 %v5_9838, %v4_9830
  store i32 %v6_9838, i32* %r3.global-to-local, align 4
  store i32 %v2_9800, i32* %ip.global-to-local, align 4
  %v2_9840 = trunc i32 %v6_9838 to i16
  store i16 %v2_9840, i16* %v5_9840, align 2
  br label %dec_label_pc_9848

dec_label_pc_9848:                                ; preds = %.thread7, %dec_label_pc_9b10
  %stack_var_-62.2 = phi i16 [ %v1_9b10, %dec_label_pc_9b10 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_9848, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9850 = load i32, i32* @r8, align 4
  store i32 %v0_9850, i32* %r0.global-to-local, align 4
  %v3_9854 = call i32 @function_1224c(i32 %v0_9850, i32 %v2_9848, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_985c = call i32 @function_118d4(i32* null)
  store i32 %v2_985c, i32* %r0.global-to-local, align 4
  store i32 %v2_9860, i32* @r7, align 4
  store i32 %v2_985c, i32* @r4, align 4
  store i32 %v2_9868, i32* @r6, align 4
  %v9_98c0 = icmp eq i32 %tmp34, %v0_9b50
  %v4_98e8 = zext i16 %stack_var_-62.2 to i32
  %v9_98d4 = icmp eq i1 %v9_98c0, false
  %v9_98ec = icmp eq i32 %v3_98e0, %v4_98e8
  br label %dec_label_pc_9884

dec_label_pc_9874:                                ; preds = %.thread, %dec_label_pc_98dc, %dec_label_pc_9904, %bb76
  %v2_9874 = call i32 @function_118d4(i32* null)
  %v0_9878 = load i32, i32* @r4, align 4
  %v2_9878 = sub i32 %v2_9874, %v0_9878
  store i32 %v2_9878, i32* %r0.global-to-local, align 4
  %v8_9880 = icmp sgt i32 %v2_9878, 10
  br i1 %v8_9880, label %dec_label_pc_990c, label %dec_label_pc_9884

dec_label_pc_9884:                                ; preds = %dec_label_pc_9874, %dec_label_pc_9848
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_9868, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9894 = load i32, i32* @sl, align 4
  store i32 %v0_9894, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_98a4 = call i32 @function_1236c(i32 %v0_9894, i32 %v2_9868, i32 256, i32 16384, i32 %v2_9860, i32 %v2_986c)
  store i32 %v6_98a4, i32* %r2.global-to-local, align 4
  %v7_98ac = icmp eq i32 %v6_98a4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_98ac, label %dec_label_pc_9aac, label %dec_label_pc_98b8

dec_label_pc_98b8:                                ; preds = %dec_label_pc_9884
  store i32 %v0_9b50, i32* %r1.global-to-local, align 4
  store i32 %tmp34, i32* @r3, align 4
  %tmp100 = icmp ult i32 %v6_98a4, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_98b8
  br label %dec_label_pc_9874

bb76:                                             ; preds = %dec_label_pc_98b8
  br i1 %v9_98d4, label %dec_label_pc_9874, label %dec_label_pc_98dc

dec_label_pc_98dc:                                ; preds = %bb76
  store i32 %v3_98e0, i32* @lr, align 4
  store i32 %v2_9800, i32* @r3, align 4
  store i32 %v4_98e8, i32* %r2.global-to-local, align 4
  br i1 %v9_98ec, label %dec_label_pc_98f4, label %dec_label_pc_9874

dec_label_pc_98f4:                                ; preds = %dec_label_pc_98dc
  store i32 %v4_98f4, i32* %r2.global-to-local, align 4
  store i32 %v1_98f8, i32* @r3, align 4
  br i1 %v2_98fc, label %dec_label_pc_9b44, label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98f4
  br i1 %v2_9904, label %dec_label_pc_9874, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_9904, %dec_label_pc_9874
  %v0_990c = load i32, i32* @r8, align 4
  store i32 %v0_990c, i32* %r0.global-to-local, align 4
  %v1_9910 = call i32 @function_11c54(i32 %v0_990c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9920 = call i32 @function_12464(i32 2, i32 1, i32 0)
  store i32 %v3_9920, i32* %r0.global-to-local, align 4
  %v3_9924 = icmp eq i32 %v3_9920, -1
  store i32 %v3_9920, i32* @r8, align 4
  br i1 %v3_9924, label %dec_label_pc_9930, label %dec_label_pc_97d8

dec_label_pc_9930:                                ; preds = %dec_label_pc_990c, %dec_label_pc_97bc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_97bc ], [ %stack_var_-62.2, %dec_label_pc_990c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_97bc ], [ %v0_9b50, %dec_label_pc_990c ]
  %v3_9930 = load i32, i32* %stack_var_-44, align 4
  %v1_9938 = add i32 %v3_9930, 1
  store i32 %v1_9938, i32* @r3, align 4
  store i32 %v1_9938, i32* %stack_var_-44, align 4
  %v5_9944 = icmp slt i32 %v1_9938, %arg2
  br i1 %v5_9944, label %dec_label_pc_97bc, label %dec_label_pc_9948.preheader

dec_label_pc_9948.preheader:                      ; preds = %.thread10, %dec_label_pc_9930, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge
  %v1_9980.pre-phi = phi i32 [ %.pre94, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge ], [ %v1_9bac, %dec_label_pc_9930 ], [ %v1_9bac, %.thread10 ]
  %v4_9a64.pre-phi = phi i32 [ %.pre, %dec_label_pc_97a0.dec_label_pc_9948.preheader_crit_edge ], [ %v4_9bec, %dec_label_pc_9930 ], [ %v4_9bec, %.thread10 ]
  %v3_9960 = mul i32 %v6_9724, 65536
  %v1_9964 = add i32 %v3_9960, 1310720
  %tmp78 = udiv i32 %v1_9964, 256
  %v3_9970 = and i32 %tmp78, 65280
  %v2_9a7c = icmp eq i32 %v1_9744, 0
  %v4_9974 = udiv i32 %v1_9964, 16777216
  %v5_9974 = or i32 %v3_9970, %v4_9974
  %v1_997c = add i32 %v6_9724, 20
  br label %dec_label_pc_9948

dec_label_pc_9948:                                ; preds = %dec_label_pc_9948.preheader, %dec_label_pc_9b2c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_97ac, label %dec_label_pc_9b2c, label %dec_label_pc_995c

dec_label_pc_995c:                                ; preds = %dec_label_pc_9948
  store i32 %v1_9964, i32* %r2.global-to-local, align 4
  store i32 %v6_9724, i32* %ip.global-to-local, align 4
  store i32 %v3_9970, i32* %r3.global-to-local, align 4
  store i32 %v5_9974, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_997c, i32* @r8, align 4
  store i32 %v1_9980.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_9a78

dec_label_pc_9988:                                ; preds = %dec_label_pc_9a78, %dec_label_pc_9a84
  %v2_998c = phi i32 [ %v7_9a60, %dec_label_pc_9a78 ], [ %v2_998c.pre, %dec_label_pc_9a84 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_998c = add i32 %v2_998c, 10
  %v4_998c = inttoptr i32 %v3_998c to i16*
  store i16 0, i16* %v4_998c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9994 = load i32, i32* @r5, align 4
  store i32 %v0_9994, i32* @r0, align 4
  %v2_9998 = call i32 @function_bf78(i32 %v0_9994, i32 20)
  %v3_9998 = trunc i32 %v2_9998 to i16
  store i32 %v2_9998, i32* %r0.global-to-local, align 4
  %v3_999c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_95a0, i32* %ip.global-to-local, align 4
  %v3_99a4 = mul i32 %v3_999c, 16
  %v2_99a8 = add i32 %v3_99a4, %v2_95a0
  store i32 %v2_99a8, i32* %r1.global-to-local, align 4
  %v1_99ac = add i32 %v2_99a8, 4
  %v2_99ac = inttoptr i32 %v1_99ac to i32*
  %v3_99ac = load i32, i32* %v2_99ac, align 4
  %v3_99b0 = mul i32 %v3_99ac, 65536
  store i32 %v3_99b0, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_99ac, 256
  %v1_99b8 = and i32 %tmp79, and (i32 ptrtoint (i32* @global_var_ff00.16 to i32), i32 16776960)
  %tmp80 = udiv i32 %v3_99ac, 256
  %v4_99bc = urem i32 %tmp80, 256
  %v5_99bc = or i32 %v4_99bc, %v1_99b8
  store i32 %v5_99bc, i32* %r3.global-to-local, align 4
  %v1_99c0 = add i32 %v3_99ac, 1
  store i32 %v1_99c0, i32* %r2.global-to-local, align 4
  store i32 %v1_99c0, i32* %v2_99ac, align 4
  %v0_99c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99c8 = load i32, i32* @r6, align 4
  %v2_99c8 = add i32 %v1_99c8, 4
  %v3_99c8 = inttoptr i32 %v2_99c8 to i32*
  store i32 %v0_99c8, i32* %v3_99c8, align 4
  %v0_99cc = load i32, i32* %r1.global-to-local, align 4
  %v1_99cc = add i32 %v0_99cc, 8
  %v2_99cc = inttoptr i32 %v1_99cc to i32*
  %v3_99cc = load i32, i32* %v2_99cc, align 4
  %tmp81 = mul i32 %v3_99cc, 256
  %v1_99d8 = and i32 %tmp81, and (i32 ptrtoint (i32* @global_var_ff00.16 to i32), i32 16776960)
  %tmp82 = udiv i32 %v3_99cc, 256
  %v4_99dc = urem i32 %tmp82, 256
  %v5_99dc = or i32 %v4_99dc, %v1_99d8
  store i32 %v5_99dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_99e4 = load i32, i32* @r5, align 4
  %v4_99e4 = add i32 %v3_99e4, 10
  %v5_99e4 = inttoptr i32 %v4_99e4 to i16*
  store i16 %v3_9998, i16* %v5_99e4, align 2
  %v0_99e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_99e8 = load i32, i32* @r6, align 4
  %v2_99e8 = add i32 %v1_99e8, 8
  %v3_99e8 = inttoptr i32 %v2_99e8 to i32*
  store i32 %v0_99e8, i32* %v3_99e8, align 4
  %v0_99ec = load i32, i32* @lr, align 4
  %v1_99ec = trunc i32 %v0_99ec to i16
  %v2_99ec = load i32, i32* @r6, align 4
  %v3_99ec = add i32 %v2_99ec, 16
  %v4_99ec = inttoptr i32 %v3_99ec to i16*
  store i16 %v1_99ec, i16* %v4_99ec, align 2
  %v0_99f0 = load i32, i32* @r6, align 4
  store i32 %v0_99f0, i32* @r1, align 4
  %v0_99f4 = load i32, i32* @sb, align 4
  store i32 %v0_99f4, i32* %r2.global-to-local, align 4
  %v0_99f8 = load i32, i32* @r8, align 4
  store i32 %v0_99f8, i32* %r3.global-to-local, align 4
  %v0_99fc = load i32, i32* @r5, align 4
  store i32 %v0_99fc, i32* %r0.global-to-local, align 4
  %v4_9a00 = call i32 @function_bfc8(i32 %v0_99fc, i32 %v0_99f0, i32 %v0_99f4, i32 %v0_99f8)
  %v5_9a00 = trunc i32 %v4_9a00 to i16
  store i32 %v4_9a00, i32* %r0.global-to-local, align 4
  %v3_9a04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a04, i32* %r3.global-to-local, align 4
  %v3_9a08 = mul i32 %v3_9a04, 32
  store i32 %v3_9a08, i32* %lr.global-to-local, align 4
  %v3_9a0c = load i32, i32* @r6, align 4
  %v4_9a0c = add i32 %v3_9a0c, 16
  %v5_9a0c = inttoptr i32 %v4_9a0c to i16*
  store i16 %v5_9a00, i16* %v5_9a0c, align 2
  %v0_9a10 = load i32, i32* %lr.global-to-local, align 4
  %v1_9a10 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_9a10, -8
  %v5_9a10 = add i32 %v0_9a10, %tmp101
  store i32 %v5_9a10, i32* %lr.global-to-local, align 4
  %v0_9a14 = load i32, i32* @r6, align 4
  %v1_9a14 = add i32 %v0_9a14, 2
  %v2_9a14 = inttoptr i32 %v1_9a14 to i16*
  %v3_9a14 = load i16, i16* %v2_9a14, align 2
  %v1_9a18 = load i32, i32* @fp, align 4
  %v2_9a18 = add i32 %v1_9a18, %v5_9a10
  store i32 %v2_9a18, i32* @lr, align 4
  %v3_9a1c = add i32 %v2_9a18, 2
  %v4_9a1c = inttoptr i32 %v3_9a1c to i16*
  store i16 %v3_9a14, i16* %v4_9a1c, align 2
  %v0_9a20 = load i32, i32* @r5, align 4
  store i32 %v0_9a20, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_9a2c = load i32, i32* @sl, align 4
  store i32 %v0_9a2c, i32* %r0.global-to-local, align 4
  %v0_9a30 = load i32, i32* @r7, align 4
  store i32 %v0_9a30, i32* %r2.global-to-local, align 4
  %v0_9a34 = load i32, i32* @lr, align 4
  %v6_9a3c = call i32 @function_123e0(i32 %v0_9a2c, i32 %v0_9a20, i32 %v0_9a30, i32 16384, i32 %v0_9a34, i32 16)
  %v3_9a40 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9a40, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_9a48 = add i32 %v3_9a40, 1
  store i32 %v1_9a48, i32* %r0.global-to-local, align 4
  store i32 %v1_9a48, i32* %stack_var_-44, align 4
  %v7_9a54 = icmp slt i32 %v1_9a48, %arg2
  br i1 %v7_9a54, label %dec_label_pc_9a78, label %dec_label_pc_9b2c

dec_label_pc_9a78:                                ; preds = %dec_label_pc_995c, %dec_label_pc_9988
  %v1_9a60 = phi i32 [ %v1_9a48, %dec_label_pc_9988 ], [ 0, %dec_label_pc_995c ]
  store i32 %v2_95b0, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_9a60 = mul i32 %v1_9a60, 4
  %v5_9a60 = add i32 %v4_9a60, %v2_95b0
  %v6_9a60 = inttoptr i32 %v5_9a60 to i32*
  %v7_9a60 = load i32, i32* %v6_9a60, align 4
  store i32 %v7_9a60, i32* @r5, align 4
  store i32 %v4_9a64.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_9a70 = add i32 %v7_9a60, 20
  store i32 %v1_9a70, i32* @r6, align 4
  store i32 %v1_9744, i32* %r1.global-to-local, align 4
  br i1 %v2_9a7c, label %dec_label_pc_9988, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a78
  %v1_9a84 = add i32 %v7_9a60, 40
  store i32 %v1_9a84, i32* @r4, align 4
  store i32 %v1_9a84, i32* %r0.global-to-local, align 4
  store i32 %v6_9724, i32* %r1.global-to-local, align 4
  %v2_9a90 = call i32 @function_dbd0(i32 %v1_9a84, i32 %v6_9724)
  store i32 %v2_9a90, i32* %r0.global-to-local, align 4
  store i32 %v6_9724, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9a9c = load i32, i32* @r4, align 4
  %v4_9a9c = add i32 %v2_9a9c, %v6_9724
  %v5_9a9c = inttoptr i32 %v4_9a9c to i8*
  store i8 0, i8* %v5_9a9c, align 1
  %v2_998c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9988

dec_label_pc_9aa4:                                ; preds = %dec_label_pc_9778
  %v0_9aa4 = load i32, i32* @sl, align 4
  store i32 %v0_9aa4, i32* %r0.global-to-local, align 4
  %v1_9aa8 = call i32 @function_11c54(i32 %v0_9aa4)
  store i32 %v1_9aa8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9aac

dec_label_pc_9aac:                                ; preds = %dec_label_pc_9884, %dec_label_pc_9b2c, %dec_label_pc_9574, %dec_label_pc_9aa4
  %v1_9ab4 = phi i32 [ %v3_9768, %dec_label_pc_9574 ], [ %v1_9aa8, %dec_label_pc_9aa4 ], [ %v2_9b30, %dec_label_pc_9b2c ], [ 0, %dec_label_pc_9884 ]
  store i32 %v3_9574, i32* %r4.global-to-local, align 4
  store i32 %v27_9574, i32* %lr.global-to-local, align 4
  ret i32 %v1_9ab4

dec_label_pc_9ab8:                                ; preds = %bb72
  %v1_9ab8 = add i32 %v4_981c, 16
  %v2_9ab8 = inttoptr i32 %v1_9ab8 to i32*
  %v3_9ab8 = load i32, i32* %v2_9ab8, align 4
  store i32 %v3_9ab8, i32* @r4, align 4
  %v0_9abc = call i32 @function_db0c()
  store i32 %v0_9abc, i32* %r0.global-to-local, align 4
  %v3_9ac0 = load i32, i32* %stack_var_-44, align 4
  %v5_9ac8 = mul i32 %v3_9ac0, 24
  %v0_9acc = load i32, i32* @r4, align 4
  %v1_9acc = and i32 %v0_9acc, 16711680
  store i32 %v1_9acc, i32* %ip.global-to-local, align 4
  %v3_9ad0 = udiv i32 %v0_9acc, 16777216
  %v4_9ad4 = udiv i32 %v1_9acc, 256
  %v5_9ad4 = or i32 %v4_9ad4, %v3_9ad0
  store i32 %v5_9ad4, i32* %r2.global-to-local, align 4
  %v1_9ad8 = load i32, i32* @fp, align 4
  %v2_9ad8 = add i32 %v1_9ad8, %v5_9ac8
  store i32 %v2_9ad8, i32* %r1.global-to-local, align 4
  %v1_9adc = and i32 %v0_9acc, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_9adc, i32* %r3.global-to-local, align 4
  %v1_9ae0 = add i32 %v2_9ad8, 20
  %v2_9ae0 = inttoptr i32 %v1_9ae0 to i8*
  %v3_9ae0 = load i8, i8* %v2_9ae0, align 1
  %v4_9ae0 = zext i8 %v3_9ae0 to i32
  store i32 %v4_9ae0, i32* %ip.global-to-local, align 4
  %v4_9ae4 = mul i32 %v1_9adc, 256
  %v4_9ae8 = mul i32 %v0_9acc, 16777216
  %v5_9ae4 = or i32 %v4_9ae4, %v4_9ae8
  %v5_9ae8 = or i32 %v5_9ae4, %v5_9ad4
  %v7_9aec = lshr i32 %v0_9abc, %v4_9ae0
  %v8_9aec = add i32 %v7_9aec, %v5_9ae8
  store i32 %v8_9aec, i32* %r2.global-to-local, align 4
  %v1_9af0 = and i32 %v8_9aec, 16711680
  store i32 %v1_9af0, i32* %r0.global-to-local, align 4
  %v1_9afc = and i32 %v8_9aec, 65280
  store i32 %v1_9afc, i32* %r1.global-to-local, align 4
  %v5_9b04 = call i32 @llvm.bswap.i32(i32 %v8_9aec)
  store i32 %v5_9b04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9824

dec_label_pc_9b10:                                ; preds = %dec_label_pc_9824
  %v0_9b10 = call i32 @function_db0c()
  %v1_9b10 = trunc i32 %v0_9b10 to i16
  store i32 %v0_9b10, i32* %r0.global-to-local, align 4
  store i32 %v2_9800, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9848

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9988, %dec_label_pc_9948
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9b30 = call i32 @function_118d4(i32* null)
  store i32 %v2_9b30, i32* %r0.global-to-local, align 4
  store i32 %v2_9754, i32* %r2.global-to-local, align 4
  %v6_9b3c = icmp slt i32 %v2_9754, %v2_9b30
  br i1 %v6_9b3c, label %dec_label_pc_9aac, label %dec_label_pc_9948

dec_label_pc_9b44:                                ; preds = %dec_label_pc_98f4
  %v3_9b44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9b44, i32* @r5, align 4
  store i32 %v2_95a0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_9b50 = mul i32 %v3_9b44, 16
  %v6_9b50 = add i32 %v5_9b50, %v2_95a0
  %v7_9b50 = inttoptr i32 %v6_9b50 to i32*
  store i32 %v0_9b50, i32* %v7_9b50, align 4
  %v0_9b54 = load i32, i32* %r0.global-to-local, align 4
  %v1_9b54 = add i32 %v0_9b54, 4
  %v2_9b54 = inttoptr i32 %v1_9b54 to i32*
  %v3_9b54 = load i32, i32* %v2_9b54, align 4
  %v1_9b58 = and i32 %v3_9b54, 16711680
  store i32 %v1_9b58, i32* %r0.global-to-local, align 4
  %v3_9b5c = udiv i32 %v3_9b54, 16777216
  %v1_9b60 = and i32 %v3_9b54, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v4_9b64 = udiv i32 %v1_9b58, 256
  %v4_9b68 = mul i32 %v1_9b60, 256
  %v4_9b6c = mul i32 %v3_9b54, 16777216
  %v5_9b64 = or i32 %v4_9b6c, %v3_9b5c
  %v5_9b68 = or i32 %v5_9b64, %v4_9b64
  %v5_9b6c = or i32 %v5_9b68, %v4_9b68
  store i32 %v5_9b6c, i32* %r3.global-to-local, align 4
  store i32 %v2_95a0, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* @r5, align 4
  %v3_9b74 = mul i32 %v0_9b74, 16
  %v2_9b78 = add i32 %v3_9b74, %v2_95a0
  store i32 %v2_9b78, i32* %ip.global-to-local, align 4
  %v2_9b7c = add i32 %v2_9b78, 4
  %v3_9b7c = inttoptr i32 %v2_9b7c to i32*
  store i32 %v5_9b6c, i32* %v3_9b7c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_9b84 = add i32 %stack_var_-340.0.ph, 8
  %v2_9b84 = inttoptr i32 %v1_9b84 to i32*
  %v3_9b84 = load i32, i32* %v2_9b84, align 4
  %v3_9b8c = udiv i32 %v3_9b84, 16777216
  %v1_9b90 = and i32 %v3_9b84, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_9b90, i32* %r2.global-to-local, align 4
  %v1_9b88 = udiv i32 %v3_9b84, 256
  %v4_9b94 = and i32 %v1_9b88, 65280
  %v4_9b98 = mul i32 %v1_9b90, 256
  %v4_9b9c = mul i32 %v3_9b84, 16777216
  %v5_9b94 = or i32 %v4_9b9c, %v3_9b8c
  %v5_9b98 = or i32 %v5_9b94, %v4_9b94
  %v5_9b9c = or i32 %v5_9b98, %v4_9b98
  store i32 %v5_9b9c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_9724, i32* %r0.global-to-local, align 4
  %v1_9ba8 = add i32 %stack_var_-340.0.ph, 2
  %v2_9ba8 = inttoptr i32 %v1_9ba8 to i16*
  %v3_9ba8 = load i16, i16* %v2_9ba8, align 2
  %v4_9ba8 = zext i16 %v3_9ba8 to i32
  store i32 %v4_9ba8, i32* %r1.global-to-local, align 4
  store i32 %v1_9bac, i32* @r4, align 4
  %v2_9bb0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bb0 = add i32 %v2_9bb0, 12
  %v4_9bb0 = inttoptr i32 %v3_9bb0 to i16*
  store i16 %v3_9ba8, i16* %v4_9bb0, align 2
  %v0_9bb4 = load i32, i32* @lr, align 4
  %v1_9bb4 = trunc i32 %v0_9bb4 to i16
  %v2_9bb4 = load i32, i32* %ip.global-to-local, align 4
  %v3_9bb4 = add i32 %v2_9bb4, 14
  %v4_9bb4 = inttoptr i32 %v3_9bb4 to i16*
  store i16 %v1_9bb4, i16* %v4_9bb4, align 2
  %v0_9bb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_9bb8 = load i32, i32* %ip.global-to-local, align 4
  %v2_9bb8 = add i32 %v1_9bb8, 8
  %v3_9bb8 = inttoptr i32 %v2_9bb8 to i32*
  store i32 %v0_9bb8, i32* %v3_9bb8, align 4
  %v0_9bbc = load i32, i32* @r4, align 4
  store i32 %v0_9bbc, i32* @r0, align 4
  %v0_9bc0 = call i32 @function_126ac()
  store i32 %v0_9bc0, i32* %r0.global-to-local, align 4
  store i32 %v2_95b0, i32* %r3.global-to-local, align 4
  %v2_9bcc = load i32, i32* @r5, align 4
  %v5_9bcc = mul i32 %v2_9bcc, 4
  %v6_9bcc = add i32 %v5_9bcc, %v2_95b0
  %v7_9bcc = inttoptr i32 %v6_9bcc to i32*
  store i32 %v0_9bc0, i32* %v7_9bcc, align 4
  %v3_9bd0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9bd0, i32* %r2.global-to-local, align 4
  %v0_9bd4 = load i32, i32* %r3.global-to-local, align 4
  %v4_9bd4 = mul i32 %v3_9bd0, 4
  %v5_9bd4 = add i32 %v0_9bd4, %v4_9bd4
  %v6_9bd4 = inttoptr i32 %v5_9bd4 to i32*
  %v7_9bd4 = load i32, i32* %v6_9bd4, align 4
  store i32 %v7_9bd4, i32* %ip.global-to-local, align 4
  %v1_9bd8 = inttoptr i32 %v7_9bd4 to i8*
  %v2_9bd8 = load i8, i8* %v1_9bd8, align 1
  %tmp102 = urem i8 %v2_9bd8, 16
  %v1_9bdc = zext i8 %tmp102 to i32
  %v1_9be0 = or i32 %v1_9bdc, 64
  store i32 %v1_9be0, i32* %r3.global-to-local, align 4
  %v1_9be4 = trunc i32 %v1_9be0 to i8
  store i8 %v1_9be4, i8* %v1_9bd8, align 1
  %v0_9be8 = load i32, i32* %ip.global-to-local, align 4
  %v1_9be8 = inttoptr i32 %v0_9be8 to i8*
  %v2_9be8 = load i8, i8* %v1_9be8, align 1
  store i32 %v4_9bec, i32* %lr.global-to-local, align 4
  %v1_9bf0 = and i8 %v2_9be8, -16
  %v1_9bfc = or i8 %v1_9bf0, 5
  %v0_9c00 = load i32, i32* @r4, align 4
  %v3_9c00 = mul i32 %v0_9c00, 65536
  store i32 %v3_9c00, i32* %r4.global-to-local, align 4
  store i32 %v5_9c04, i32* %r1.global-to-local, align 4
  store i32 %v1_9630, i32* %r0.global-to-local, align 4
  store i8 %v1_9bfc, i8* %v1_9be8, align 1
  %v0_9c10 = load i32, i32* %r1.global-to-local, align 4
  %v1_9c10 = trunc i32 %v0_9c10 to i16
  %v2_9c10 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c10 = add i32 %v2_9c10, 4
  %v4_9c10 = inttoptr i32 %v3_9c10 to i16*
  store i16 %v1_9c10, i16* %v4_9c10, align 2
  %v0_9c14 = load i32, i32* %r4.global-to-local, align 4
  %v3_9c14 = udiv i32 %v0_9c14, 256
  %v1_9c1c = and i32 %v3_9c14, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_9c1c, i32* %r2.global-to-local, align 4
  %v2_9c20 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c20 = add i32 %v2_9c20, 1
  %v4_9c20 = inttoptr i32 %v3_9c20 to i8*
  store i8 %v5_95e8, i8* %v4_9c20, align 1
  %v0_9c24 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c24 = load i32, i32* %r4.global-to-local, align 4
  %v4_9c24 = udiv i32 %v1_9c24, 16777216
  %v5_9c24 = or i32 %v4_9c24, %v0_9c24
  %v1_9c28 = trunc i32 %v5_9c24 to i16
  %v2_9c28 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c28 = add i32 %v2_9c28, 2
  %v4_9c28 = inttoptr i32 %v3_9c28 to i16*
  store i16 %v1_9c28, i16* %v4_9c28, align 2
  %v0_9c30 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c30 = add i32 %v0_9c30, 20
  store i32 %v1_9c30, i32* %r3.global-to-local, align 4
  %v3_9c34 = add i32 %v0_9c30, 8
  %v4_9c34 = inttoptr i32 %v3_9c34 to i8*
  store i8 %v5_9620, i8* %v4_9c34, align 1
  %v0_9c38 = load i32, i32* %r3.global-to-local, align 4
  %v2_9c40 = load i32, i32* %ip.global-to-local, align 4
  %v3_9c40 = add i32 %v2_9c40, 9
  %v4_9c40 = inttoptr i32 %v3_9c40 to i8*
  store i8 6, i8* %v4_9c40, align 1
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* %r2.global-to-local, align 4
  %v2_9c48 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_9c48, i32* %r1.global-to-local, align 4
  %v1_9c4c = load i32, i32* %ip.global-to-local, align 4
  %v2_9c4c = add i32 %v1_9c4c, 12
  %v3_9c4c = inttoptr i32 %v2_9c4c to i32*
  store i32 %v2_9c48, i32* %v3_9c4c, align 4
  %v0_9c50 = load i32, i32* %r0.global-to-local, align 4
  %v2_9c50 = icmp eq i32 %v0_9c50, 0
  %v3_9c54 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9c54, i32* %r3.global-to-local, align 4
  store i32 %v2_95a0, i32* %r0.global-to-local, align 4
  br i1 %v2_9c50, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_9b44
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_9c60 = load i32, i32* %ip.global-to-local, align 4
  %v4_9c60 = add i32 %v3_9c60, 6
  %v5_9c60 = inttoptr i32 %v4_9c60 to i16*
  store i16 64, i16* %v5_9c60, align 2
  %v0_9c64.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_9c64.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_9b44, %bb83
  %v0_9c68 = phi i32 [ %v3_9c54, %dec_label_pc_9b44 ], [ %v1_9c64.pre, %bb83 ]
  %v1_9c6c = phi i32 [ %v2_95a0, %dec_label_pc_9b44 ], [ %v0_9c64.pre, %bb83 ]
  %v4_9c64 = mul i32 %v0_9c68, 16
  %v5_9c64 = add i32 %v4_9c64, %v1_9c6c
  %v6_9c64 = inttoptr i32 %v5_9c64 to i32*
  %v7_9c64 = load i32, i32* %v6_9c64, align 4
  store i32 %v7_9c64, i32* %r2.global-to-local, align 4
  store i32 %v5_9c64, i32* %r3.global-to-local, align 4
  %v1_9c70 = load i32, i32* %ip.global-to-local, align 4
  %v2_9c70 = add i32 %v1_9c70, 16
  %v3_9c70 = inttoptr i32 %v2_9c70 to i32*
  store i32 %v7_9c64, i32* %v3_9c70, align 4
  %v0_9c74 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c74 = add i32 %v0_9c74, 12
  %v2_9c74 = inttoptr i32 %v1_9c74 to i16*
  %v3_9c74 = load i16, i16* %v2_9c74, align 2
  %v4_9c74 = zext i16 %v3_9c74 to i32
  store i32 %v4_9c74, i32* %r1.global-to-local, align 4
  %v0_9c78 = load i32, i32* %ip.global-to-local, align 4
  %v1_9c78 = add i32 %v0_9c78, 40
  store i32 %v1_9c78, i32* @r4, align 4
  %v3_9c7c = add i32 %v0_9c78, 20
  %v4_9c7c = inttoptr i32 %v3_9c7c to i16*
  store i16 %v3_9c74, i16* %v4_9c7c, align 2
  store i32 %v0_9c38, i32* %ip.global-to-local, align 4
  %v0_9c84 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c84 = add i32 %v0_9c84, 8
  %v2_9c84 = inttoptr i32 %v1_9c84 to i32*
  %v3_9c84 = load i32, i32* %v2_9c84, align 4
  store i32 %v3_9c84, i32* %r1.global-to-local, align 4
  %v2_9c88 = add i32 %v0_9c38, 4
  %v3_9c88 = inttoptr i32 %v2_9c88 to i32*
  store i32 %v3_9c84, i32* %v3_9c88, align 4
  %v0_9c8c = load i32, i32* %ip.global-to-local, align 4
  %v1_9c8c = add i32 %v0_9c8c, 13
  %v2_9c8c = inttoptr i32 %v1_9c8c to i8*
  %v3_9c8c = load i8, i8* %v2_9c8c, align 1
  %v4_9c8c = zext i8 %v3_9c8c to i32
  store i32 %v4_9c8c, i32* %r2.global-to-local, align 4
  %v0_9c90 = load i32, i32* %r3.global-to-local, align 4
  %v1_9c90 = add i32 %v0_9c90, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* %r1.global-to-local, align 4
  %v1_9c94 = add i32 %v0_9c90, 14
  %v2_9c94 = inttoptr i32 %v1_9c94 to i16*
  %v3_9c94 = load i16, i16* %v2_9c94, align 2
  %v4_9c94 = zext i16 %v3_9c94 to i32
  store i32 %v4_9c94, i32* %r3.global-to-local, align 4
  %v1_9c98 = or i32 %v4_9c8c, 1
  store i32 %v1_9c98, i32* %r2.global-to-local, align 4
  %v3_9c9c = add i32 %v0_9c8c, 2
  %v4_9c9c = inttoptr i32 %v3_9c9c to i16*
  store i16 %v3_9c94, i16* %v4_9c9c, align 2
  %v0_9ca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9ca0 = trunc i32 %v0_9ca0 to i8
  %v2_9ca0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9ca0 = add i32 %v2_9ca0, 13
  %v4_9ca0 = inttoptr i32 %v3_9ca0 to i8*
  store i8 %v1_9ca0, i8* %v4_9ca0, align 1
  %v0_9ca4 = load i32, i32* %ip.global-to-local, align 4
  %v1_9ca4 = add i32 %v0_9ca4, 12
  %v2_9ca4 = inttoptr i32 %v1_9ca4 to i8*
  %v3_9ca4 = load i8, i8* %v2_9ca4, align 1
  %v4_9ca4 = zext i8 %v3_9ca4 to i32
  store i32 %v4_9ca4, i32* %r3.global-to-local, align 4
  %v1_9ca8 = add i32 %v0_9ca4, 13
  %v2_9ca8 = inttoptr i32 %v1_9ca8 to i8*
  %v3_9ca8 = load i8, i8* %v2_9ca8, align 1
  %v4_9ca8 = zext i8 %v3_9ca8 to i32
  %tmp103 = urem i8 %v3_9ca4, 16
  %v1_9cac = zext i8 %tmp103 to i32
  %v1_9cb0 = or i32 %v1_9cac, 128
  store i32 %v1_9cb0, i32* %r3.global-to-local, align 4
  %v1_9cb4 = or i32 %v4_9ca8, 16
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  %v0_9cb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_9cb8 = add i32 %v0_9ca4, 8
  %v3_9cb8 = inttoptr i32 %v2_9cb8 to i32*
  store i32 %v0_9cb8, i32* %v3_9cb8, align 4
  %v0_9cbc = load i32, i32* %r3.global-to-local, align 4
  %v1_9cbc = trunc i32 %v0_9cbc to i8
  %v2_9cbc = load i32, i32* %ip.global-to-local, align 4
  %v3_9cbc = add i32 %v2_9cbc, 12
  %v4_9cbc = inttoptr i32 %v3_9cbc to i8*
  store i8 %v1_9cbc, i8* %v4_9cbc, align 1
  %v0_9cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_9cc0 = trunc i32 %v0_9cc0 to i8
  %v2_9cc0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9cc0 = add i32 %v2_9cc0, 13
  %v4_9cc0 = inttoptr i32 %v3_9cc0 to i8*
  store i8 %v1_9cc0, i8* %v4_9cc0, align 1
  %v0_9cc4 = call i32 @function_db0c()
  %v1_9cc4 = trunc i32 %v0_9cc4 to i16
  store i32 %v0_9cc4, i32* %r0.global-to-local, align 4
  store i32 %v0_9c38, i32* %lr.global-to-local, align 4
  store i32 %v1_966c, i32* %r1.global-to-local, align 4
  %v1_9cd0 = add i32 %v0_9c38, 13
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i8*
  %v3_9cd0 = load i8, i8* %v2_9cd0, align 1
  %v4_9cd0 = zext i8 %v3_9cd0 to i32
  store i32 %v1_9cd4, i32* %r2.global-to-local, align 4
  %v1_9cd8 = and i32 %v4_9cd0, 223
  %v5_9cdc = or i32 %v1_9cd8, %v4_9cdc
  store i32 %v5_9cdc, i32* %r3.global-to-local, align 4
  %v1_9ce0 = trunc i32 %v5_9cdc to i8
  store i8 %v1_9ce0, i8* %v2_9cd0, align 1
  store i32 %v1_968c, i32* %ip.global-to-local, align 4
  %v0_9ce8 = load i32, i32* %lr.global-to-local, align 4
  %v1_9ce8 = add i32 %v0_9ce8, 13
  %v2_9ce8 = inttoptr i32 %v1_9ce8 to i8*
  %v3_9ce8 = load i8, i8* %v2_9ce8, align 1
  %v4_9ce8 = zext i8 %v3_9ce8 to i32
  store i32 %v1_9cec, i32* %r3.global-to-local, align 4
  %v1_9cf0 = and i32 %v4_9ce8, 239
  %v5_9cf4 = or i32 %v1_9cf0, %v4_9cf4
  store i32 %v5_9cf4, i32* %r2.global-to-local, align 4
  %v1_9cf8 = trunc i32 %v5_9cf4 to i8
  store i8 %v1_9cf8, i8* %v2_9ce8, align 1
  %v0_9cfc = load i32, i32* %lr.global-to-local, align 4
  %v1_9cfc = add i32 %v0_9cfc, 13
  %v2_9cfc = inttoptr i32 %v1_9cfc to i8*
  %v3_9cfc = load i8, i8* %v2_9cfc, align 1
  %v4_9cfc = zext i8 %v3_9cfc to i32
  store i32 %v1_96ac, i32* %lr.global-to-local, align 4
  store i32 %v0_9c38, i32* %r1.global-to-local, align 4
  store i32 %v1_9d08, i32* %r2.global-to-local, align 4
  %v1_9d0c = and i32 %v4_9cfc, 247
  %v5_9d10 = or i32 %v1_9d0c, %v4_9d10
  store i32 %v5_9d10, i32* %r3.global-to-local, align 4
  %v1_9d14 = trunc i32 %v5_9d10 to i8
  store i8 %v1_9d14, i8* %v2_9cd0, align 1
  store i32 %v1_96cc, i32* %ip.global-to-local, align 4
  %v0_9d1c = load i32, i32* %r1.global-to-local, align 4
  %v1_9d1c = add i32 %v0_9d1c, 13
  %v2_9d1c = inttoptr i32 %v1_9d1c to i8*
  %v3_9d1c = load i8, i8* %v2_9d1c, align 1
  %v4_9d1c = zext i8 %v3_9d1c to i32
  store i32 %v1_9d20, i32* %r3.global-to-local, align 4
  %v1_9d24 = and i32 %v4_9d1c, 251
  %v5_9d28 = or i32 %v1_9d24, %v4_9d28
  store i32 %v5_9d28, i32* %r2.global-to-local, align 4
  %v1_9d2c = trunc i32 %v5_9d28 to i8
  store i8 %v1_9d2c, i8* %v2_9d1c, align 1
  store i32 %v1_96ec, i32* @lr, align 4
  %v0_9d34 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d34 = add i32 %v0_9d34, 13
  %v2_9d34 = inttoptr i32 %v1_9d34 to i8*
  %v3_9d34 = load i8, i8* %v2_9d34, align 1
  %v4_9d34 = zext i8 %v3_9d34 to i32
  store i32 %v1_9d38, i32* %r2.global-to-local, align 4
  %v1_9d3c = and i32 %v4_9d34, 253
  %v4_9d40 = or i32 %v1_9d3c, %v3_9d40
  store i32 %v4_9d40, i32* %r3.global-to-local, align 4
  %v1_9d44 = trunc i32 %v4_9d40 to i8
  store i8 %v1_9d44, i8* %v2_9d34, align 1
  %v0_9d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_9d48 = add i32 %v0_9d48, 13
  %v2_9d48 = inttoptr i32 %v1_9d48 to i8*
  %v3_9d48 = load i8, i8* %v2_9d48, align 1
  %v4_9d48 = zext i8 %v3_9d48 to i32
  %v1_9d50 = and i32 %v4_9d48, 254
  %v2_9d58 = or i32 %v1_9d50, %v1_9d54
  store i32 %v2_9d58, i32* %r3.global-to-local, align 4
  store i32 %v0_9c38, i32* %r2.global-to-local, align 4
  %v1_9d60 = trunc i32 %v2_9d58 to i8
  store i8 %v1_9d60, i8* %v2_9cd0, align 1
  %v3_9d64 = load i32, i32* %r2.global-to-local, align 4
  %v4_9d64 = add i32 %v3_9d64, 14
  %v5_9d64 = inttoptr i32 %v4_9d64 to i16*
  store i16 %v1_9cc4, i16* %v5_9d64, align 2
  store i32 %v6_9724, i32* %r1.global-to-local, align 4
  %v0_9d6c = load i32, i32* @r4, align 4
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  %v2_9d70 = call i32 @function_dbd0(i32 %v0_9d6c, i32 %v6_9724)
  store i32 %v2_9d70, i32* %r0.global-to-local, align 4
  store i32 %v6_9724, i32* %ip.global-to-local, align 4
  %v2_9d7c = load i32, i32* @r4, align 4
  %v4_9d7c = add i32 %v2_9d7c, %v6_9724
  %v5_9d7c = inttoptr i32 %v4_9d7c to i8*
  store i8 0, i8* %v5_9d7c, align 1
  %v3_9d80 = load i32, i32* %stack_var_-44, align 4
  %v1_9d88 = add i32 %v3_9d80, 1
  store i32 %v1_9d88, i32* @r3, align 4
  store i32 %v1_9d88, i32* %stack_var_-44, align 4
  %v5_9d94 = icmp slt i32 %v1_9d88, %arg2
  br i1 %v5_9d94, label %dec_label_pc_97bc.outer, label %dec_label_pc_9948.preheader

; uselistorder directives
  uselistorder i32 %v1_9d88, { 1, 0, 2 }
  uselistorder i8* %v2_9cd0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_9cc4, { 1, 0 }
  uselistorder i32 %v0_9c38, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v3_9b84, { 0, 1, 3, 2 }
  uselistorder i32 %v3_9b54, { 0, 2, 1, 3 }
  uselistorder i32 %v2_9b30, { 1, 2, 0 }
  uselistorder i32 %v0_9b10, { 1, 0 }
  uselistorder i32 %v0_9acc, { 0, 2, 1, 3 }
  uselistorder i32 %v7_9a60, { 0, 2, 3, 1 }
  uselistorder i32 %v1_9a48, { 1, 2, 0, 3 }
  uselistorder i32 %v5_9a10, { 1, 0 }
  uselistorder i32 %v4_9a00, { 1, 0 }
  uselistorder i32 %v3_99cc, { 1, 0 }
  uselistorder i32 %v3_99ac, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9998, { 1, 0 }
  uselistorder i32 %v3_9970, { 1, 0 }
  uselistorder i32 %v1_9964, { 2, 0, 1 }
  uselistorder i32 %v1_9938, { 1, 0, 2 }
  uselistorder i32 %v3_9920, { 0, 2, 3, 1 }
  uselistorder i32 %v4_98e8, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_982c, { 1, 0, 2 }
  uselistorder i32 %v0_9b50, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_981c, { 1, 0 }
  uselistorder i1 %v7_9814, { 1, 0 }
  uselistorder i32 %v3_97c8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_9d38, { 1, 0 }
  uselistorder i32 %v1_9d20, { 1, 0 }
  uselistorder i32 %v1_9cec, { 1, 0 }
  uselistorder i32 %v3_98e0, { 1, 0 }
  uselistorder i32 %v1_9d08, { 1, 0 }
  uselistorder i32 %v1_9cd4, { 1, 0 }
  uselistorder i32 %v4_9bec, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_9bac, { 2, 0, 1 }
  uselistorder i32 %v1_98f8, { 1, 0 }
  uselistorder i32 %v4_98f4, { 2, 0, 1 }
  uselistorder i32 %v2_9800, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_97b4, { 1, 0 }
  uselistorder i32 %v0_97a4, { 1, 0 }
  uselistorder i32 %v3_9768, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_9754, { 1, 0 }
  uselistorder i32 %v1_9744, { 2, 1, 0 }
  uselistorder i32 %v6_9724, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_970c, { 1, 0 }
  uselistorder i32 %v1_96ec, { 1, 2, 0 }
  uselistorder i32 %v1_96cc, { 1, 2, 0 }
  uselistorder i32 %v1_96ac, { 1, 2, 0 }
  uselistorder i32 %v1_968c, { 1, 2, 0 }
  uselistorder i32 %v1_966c, { 1, 2, 0 }
  uselistorder i32 %v6_9648, { 1, 0 }
  uselistorder i32 %v1_9630, { 1, 2, 0 }
  uselistorder i32 %v6_9604, { 1, 2, 0 }
  uselistorder i32 %v6_95c8, { 1, 2, 0 }
  uselistorder i32 %v2_95b0, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_95a0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44, 46, 48, 47, 49, 51, 50, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 26, 21, 23, 25, 24, 29, 27, 28, 30, 31, 32, 34, 35, 33, 36, 38, 37, 40, 39, 43, 42, 41, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 5, 3, 0, 6, 8, 7, 9, 10, 11 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_9aac, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
  uselistorder label %dec_label_pc_9988, { 1, 0 }
  uselistorder label %dec_label_pc_9948, { 1, 0 }
  uselistorder label %dec_label_pc_9874, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9848, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_97d8, { 1, 0 }
  uselistorder label %dec_label_pc_97bc, { 1, 0 }
  uselistorder label %dec_label_pc_97bc.outer, { 1, 0 }
}

define i32 @function_9da0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_9da0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_9da0 = load i32, i32* @sb, align 4
  %v24_9da0 = load i32, i32* @fp, align 4
  %v27_9da0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_9dcc = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_9dd0 = load i32, i32* @r4, align 4
  store i32 %v0_9dd0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_9ddc = load i32, i32* @sl, align 4
  store i32 %v0_9ddc, i32* %r3.global-to-local, align 4
  %v0_9de0 = load i32, i32* @r5, align 4
  store i32 %v0_9de0, i32* %r0.global-to-local, align 4
  %v5_9de4 = inttoptr i32 %v0_9dd0 to i32*
  %v6_9de4 = call i32 @function_8258(i32 %v0_9de0, i32* %v5_9de4, i32 2, i32 %v0_9ddc, i32 %v2_9dcc)
  %v1_9df0 = urem i32 %v6_9de4, 256
  store i32 %v1_9df0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9dfc = load i32, i32* @r4, align 4
  store i32 %v0_9dfc, i32* %r1.global-to-local, align 4
  %v0_9e00 = load i32, i32* @r5, align 4
  store i32 %v0_9e00, i32* %r0.global-to-local, align 4
  %v5_9e04 = trunc i32 %v6_9de4 to i8
  %v6_9e08 = inttoptr i32 %v0_9dfc to i32*
  %v7_9e08 = call i32 @function_8258(i32 %v0_9e00, i32* %v6_9e08, i32 3, i32 65535, i32 %v6_9de4)
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_9e1c = load i32, i32* @r5, align 4
  store i32 %v0_9e1c, i32* %r0.global-to-local, align 4
  %v5_9e20 = inttoptr i32 %v0_9e0c to i32*
  %v6_9e20 = call i32 @function_8258(i32 %v0_9e1c, i32* %v5_9e20, i32 4, i32 64, i32 %v7_9e08)
  %v1_9e28 = urem i32 %v6_9e20, 256
  store i32 %v1_9e28, i32* %ip.global-to-local, align 4
  %v0_9e2c = load i32, i32* @r4, align 4
  store i32 %v0_9e2c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_9e34 = load i32, i32* @sl, align 4
  store i32 %v0_9e34, i32* %r3.global-to-local, align 4
  %v0_9e38 = load i32, i32* @r5, align 4
  store i32 %v0_9e38, i32* %r0.global-to-local, align 4
  %v6_9e40 = inttoptr i32 %v0_9e2c to i32*
  %v7_9e40 = call i32 @function_8258(i32 %v0_9e38, i32* %v6_9e40, i32 5, i32 %v0_9e34, i32 %v1_9e28)
  %v1_9e4c = urem i32 %v7_9e40, 256
  store i32 %v1_9e4c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r4, align 4
  store i32 %v0_9e58, i32* %r1.global-to-local, align 4
  %v0_9e5c = load i32, i32* @r5, align 4
  store i32 %v0_9e5c, i32* %r0.global-to-local, align 4
  %v5_9e64 = inttoptr i32 %v0_9e58 to i32*
  %v6_9e64 = call i32 @function_8258(i32 %v0_9e5c, i32* %v5_9e64, i32 6, i32 65535, i32 %v1_9e4c)
  %v0_9e6c = load i32, i32* @r4, align 4
  store i32 %v0_9e6c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_9e64, i32* %fp.global-to-local, align 4
  %v0_9e7c = load i32, i32* @r5, align 4
  store i32 %v0_9e7c, i32* %r0.global-to-local, align 4
  %v5_9e80 = inttoptr i32 %v0_9e6c to i32*
  %v6_9e80 = call i32 @function_8258(i32 %v0_9e7c, i32* %v5_9e80, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9e88 = load i32, i32* @r4, align 4
  store i32 %v0_9e88, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_9e80, i32* %sb.global-to-local, align 4
  %v0_9e98 = load i32, i32* @r5, align 4
  store i32 %v0_9e98, i32* %r0.global-to-local, align 4
  %v5_9e9c = inttoptr i32 %v0_9e88 to i32*
  %v6_9e9c = call i32 @function_8258(i32 %v0_9e98, i32* %v5_9e9c, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_9ea8 = load i32, i32* @r4, align 4
  store i32 %v0_9ea8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  store i32 %v0_9eb4, i32* %r0.global-to-local, align 4
  %v5_9eb8 = inttoptr i32 %v0_9ea8 to i32*
  %v6_9eb8 = call i32 @function_8258(i32 %v0_9eb4, i32* %v5_9eb8, i32 17, i32 65535, i32 %v6_9e9c)
  %v0_9ebc = load i32, i32* @r4, align 4
  store i32 %v0_9ebc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_9ec8 = load i32, i32* @sl, align 4
  store i32 %v0_9ec8, i32* %r3.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r5, align 4
  store i32 %v0_9ecc, i32* %r0.global-to-local, align 4
  %v5_9ed0 = inttoptr i32 %v0_9ebc to i32*
  %v6_9ed0 = call i32 @function_8258(i32 %v0_9ecc, i32* %v5_9ed0, i32 10, i32 %v0_9ec8, i32 %v6_9eb8)
  %v0_9ed4 = load i32, i32* @r4, align 4
  store i32 %v0_9ed4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9ee4 = load i32, i32* @r5, align 4
  store i32 %v0_9ee4, i32* %r0.global-to-local, align 4
  %v5_9ee8 = inttoptr i32 %v0_9ed4 to i32*
  %v6_9ee8 = call i32 @function_8258(i32 %v0_9ee4, i32* %v5_9ee8, i32 11, i32 1, i32 %v6_9ed0)
  %v0_9eec = load i32, i32* @r4, align 4
  store i32 %v0_9eec, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_9ef8 = load i32, i32* @sl, align 4
  store i32 %v0_9ef8, i32* %r3.global-to-local, align 4
  %v0_9efc = load i32, i32* @r5, align 4
  store i32 %v0_9efc, i32* %r0.global-to-local, align 4
  %v5_9f00 = inttoptr i32 %v0_9eec to i32*
  %v6_9f00 = call i32 @function_8258(i32 %v0_9efc, i32* %v5_9f00, i32 12, i32 %v0_9ef8, i32 %v6_9ee8)
  %v0_9f04 = load i32, i32* @r4, align 4
  store i32 %v0_9f04, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_9f10 = load i32, i32* @sl, align 4
  store i32 %v0_9f10, i32* %r3.global-to-local, align 4
  %v0_9f14 = load i32, i32* @r5, align 4
  store i32 %v0_9f14, i32* %r0.global-to-local, align 4
  %v5_9f18 = inttoptr i32 %v0_9f04 to i32*
  %v6_9f18 = call i32 @function_8258(i32 %v0_9f14, i32* %v5_9f18, i32 13, i32 %v0_9f10, i32 %v6_9f00)
  %v0_9f1c = load i32, i32* @r4, align 4
  store i32 %v0_9f1c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_9f28 = load i32, i32* @sl, align 4
  store i32 %v0_9f28, i32* %r3.global-to-local, align 4
  %v0_9f2c = load i32, i32* @r5, align 4
  store i32 %v0_9f2c, i32* %r0.global-to-local, align 4
  %v5_9f30 = inttoptr i32 %v0_9f1c to i32*
  %v6_9f30 = call i32 @function_8258(i32 %v0_9f2c, i32* %v5_9f30, i32 14, i32 %v0_9f28, i32 %v6_9f18)
  %v0_9f34 = load i32, i32* @r4, align 4
  store i32 %v0_9f34, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @sl, align 4
  store i32 %v0_9f3c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_9f44 = load i32, i32* @r5, align 4
  store i32 %v0_9f44, i32* %r0.global-to-local, align 4
  %v5_9f48 = inttoptr i32 %v0_9f34 to i32*
  %v6_9f48 = call i32 @function_8258(i32 %v0_9f44, i32* %v5_9f48, i32 15, i32 %v0_9f3c, i32 %v6_9f30)
  %v0_9f4c = load i32, i32* @r4, align 4
  store i32 %v0_9f4c, i32* %r1.global-to-local, align 4
  %v0_9f54 = load i32, i32* @sl, align 4
  store i32 %v0_9f54, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_9f5c = load i32, i32* @r5, align 4
  store i32 %v0_9f5c, i32* %r0.global-to-local, align 4
  %v5_9f60 = inttoptr i32 %v0_9f4c to i32*
  %v6_9f60 = call i32 @function_8258(i32 %v0_9f5c, i32* %v5_9f60, i32 %v0_9f54, i32 512, i32 %v6_9f48)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9f6c = load i32, i32* @r4, align 4
  store i32 %v0_9f6c, i32* %r1.global-to-local, align 4
  store i32 %v6_9f60, i32* @r8, align 4
  %v0_9f74 = load i32, i32* @r5, align 4
  store i32 %v0_9f74, i32* %r0.global-to-local, align 4
  %v5_9f78 = inttoptr i32 %v0_9f6c to i32*
  %v6_9f78 = call i32 @function_8258(i32 %v0_9f74, i32* %v5_9f78, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_9f84 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_9f84, i32* %r3.global-to-local, align 4
  %v1_9f88 = urem i32 %v6_9f78, 256
  store i32 %v1_9f88, i32* %ip.global-to-local, align 4
  %v0_9f8c = load i32, i32* @r4, align 4
  store i32 %v0_9f8c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_9f94 = load i32, i32* @r5, align 4
  store i32 %v0_9f94, i32* %r0.global-to-local, align 4
  %v5_9f9c = inttoptr i32 %v0_9f8c to i32*
  %v6_9f9c = call i32 @function_81ec(i32 %v0_9f94, i32* %v5_9f9c, i32 19, i32 %v2_9f84, i32 %v1_9f88)
  %v0_9fa4 = load i32, i32* @sl, align 4
  store i32 %v0_9fa4, i32* %r0.global-to-local, align 4
  %v1_9fa8 = inttoptr i32 %v0_9fa4 to i32*
  %v2_9fa8 = call i32 @function_118d4(i32* %v1_9fa8)
  %v1_9fac = load i32, i32* @r6, align 4
  %v2_9fac = add i32 %v1_9fac, %v2_9fa8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9fc0 = call i32 @function_12464(i32 2, i32 3, i32 6)
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v7_9fc4 = icmp eq i32 %v3_9fc0, -1
  store i1 %v7_9fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9fc4, label %dec_label_pc_a4a8, label %dec_label_pc_9fd0

dec_label_pc_9fd0:                                ; preds = %dec_label_pc_9da0
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9fd8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9fd8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_9fe0 = load i32, i32* @sl, align 4
  store i32 %v0_9fe0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9fec = call i32 @function_12420(i32 %v3_9fc0, i32 %v0_9fe0, i32 3, i32 %v6_9fd8, i32 4)
  store i32 %v5_9fec, i32* %r0.global-to-local, align 4
  %v7_9ff0 = icmp eq i32 %v5_9fec, -1
  store i1 %v7_9ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ff0, label %dec_label_pc_a4b4, label %dec_label_pc_9ff8

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9fd0
  store i32 %v7_9e08, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_a004 = load i32, i32* %fp.global-to-local, align 4
  %v0_a008 = load i32, i32* %sb.global-to-local, align 4
  %v3_a008 = mul i32 %v0_a008, 65536
  store i32 %v3_a008, i32* %sb.global-to-local, align 4
  %v3_a00c = urem i32 %v7_9e08, 65536
  store i32 %v3_a00c, i32* %r2.global-to-local, align 4
  %v3_a010 = urem i32 %v0_a004, 65536
  store i32 %v3_a010, i32* %r3.global-to-local, align 4
  %v3_a014 = urem i32 %v0_a008, 65536
  store i32 %v3_a014, i32* %ip.global-to-local, align 4
  %v2_a018 = icmp eq i32 %arg2, 0
  store i1 %v2_a018, i1* %cpsr_z.global-to-local, align 1
  %v0_a01c = load i32, i32* @sl, align 4
  store i32 %v0_a01c, i32* %stack_var_-44, align 4
  br i1 %v2_a018, label %dec_label_pc_a258.preheader, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %dec_label_pc_9ff8
  %v0_a040 = load i32, i32* @r8, align 4
  %v3_a040 = mul i32 %v0_a040, 65536
  %v1_a048 = add i32 %v3_a040, 2621440
  %tmp59 = mul i32 %v0_a004, 256
  %v3_a054 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_a008, 256
  %v3_a058 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_a004, 256
  %v4_a060 = urem i32 %tmp61, 256
  %v5_a060 = or i32 %v4_a060, %v3_a054
  %tmp62 = udiv i32 %v1_a048, 256
  %v3_a064 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_9e08, 256
  %v3_a068 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_a008, 256
  %v4_a06c = urem i32 %tmp64, 256
  %v5_a06c = or i32 %v4_a06c, %v3_a058
  store i32 %v5_a06c, i32* @fp, align 4
  %v4_a07c = udiv i32 %v1_a048, 16777216
  %v5_a07c = or i32 %v3_a064, %v4_a07c
  store i32 %v5_a07c, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_9e08, 256
  %v4_a080 = urem i32 %tmp65, 256
  %v5_a080 = or i32 %v4_a080, %v3_a068
  store i32 %v5_a080, i32* @r5, align 4
  %tmp66 = mul i32 %v6_9e9c, 256
  %v3_a08c = and i32 %tmp66, 65280
  %v1_a090 = urem i32 %v6_9ed0, 2
  %v1_a094 = urem i32 %v6_9ee8, 2
  %tmp67 = udiv i32 %v6_9e9c, 256
  %v4_a098 = urem i32 %tmp67, 256
  %v5_a098 = or i32 %v4_a098, %v3_a08c
  %v1_a0a4 = urem i32 %v6_9f00, 2
  store i32 %v1_a0a4, i32* %r2.global-to-local, align 4
  %v1_a0a8 = urem i32 %v6_9f18, 2
  store i32 %v1_a0a8, i32* %r3.global-to-local, align 4
  store i32 %v6_9f30, i32* %ip.global-to-local, align 4
  store i32 %v6_9f48, i32* %r0.global-to-local, align 4
  store i32 %v6_9f00, i32* %r1.global-to-local, align 4
  %v1_a0d0 = urem i32 %v6_9f30, 2
  store i32 %v1_a0d0, i32* @sb, align 4
  store i32 %v0_a01c, i32* @r4, align 4
  %v1_a0d8 = urem i32 %v6_9f00, 256
  store i32 %v1_a0d8, i32* @r6, align 4
  %v1_a0dc = urem i32 %v6_9f48, 2
  store i32 %v1_a0dc, i32* @sl, align 4
  %sext = mul nuw i32 %v5_a07c, 65536
  %v4_a150 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_a080, 65536
  %v4_a158 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a060, 65536
  %v4_a174 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a094
  %v4_a1c4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_a0a4
  %v4_a1d8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_a0a8
  %v4_a1ec = and i32 %tmp71, 4
  %v1_a144 = trunc i32 %v6_9e20 to i8
  br label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %.thread9, %dec_label_pc_a030
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a0ec = call i32 @function_12fcc(i32 1510, i32 1)
  %v2_a0f4 = load i32, i32* @r4, align 4
  %v5_a0f4 = mul i32 %v2_a0f4, 4
  %v6_a0f4 = add i32 %v5_a0f4, %v2_9dcc
  %v7_a0f4 = inttoptr i32 %v6_a0f4 to i32*
  store i32 %v2_a0ec, i32* %v7_a0f4, align 4
  %v3_a0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a0f8, i32* %r2.global-to-local, align 4
  %v5_a100 = mul i32 %v3_a0f8, 24
  %v1_a104 = load i32, i32* @r7, align 4
  %v2_a104 = add i32 %v1_a104, %v5_a100
  store i32 %v2_a104, i32* %r0.global-to-local, align 4
  store i32 %v2_9dcc, i32* %r3.global-to-local, align 4
  %v4_a10c = mul i32 %v3_a0f8, 4
  %v5_a10c = add i32 %v4_a10c, %v2_9dcc
  %v6_a10c = inttoptr i32 %v5_a10c to i32*
  %v7_a10c = load i32, i32* %v6_a10c, align 4
  store i32 %v7_a10c, i32* %r1.global-to-local, align 4
  %v1_a110 = inttoptr i32 %v7_a10c to i8*
  %v2_a110 = load i8, i8* %v1_a110, align 1
  %tmp72 = urem i8 %v2_a110, 16
  %v1_a114 = zext i8 %tmp72 to i32
  %v1_a118 = or i32 %v1_a114, 64
  store i32 %v1_a118, i32* %r3.global-to-local, align 4
  %v1_a11c = trunc i32 %v1_a118 to i8
  store i8 %v1_a11c, i8* %v1_a110, align 1
  %v0_a120 = load i32, i32* %r1.global-to-local, align 4
  %v1_a120 = inttoptr i32 %v0_a120 to i8*
  %v2_a120 = load i8, i8* %v1_a120, align 1
  %v1_a124 = and i8 %v2_a120, -16
  %v1_a128 = or i8 %v1_a124, 5
  store i32 %v1_9e4c, i32* %ip.global-to-local, align 4
  store i8 %v1_a128, i8* %v1_a120, align 1
  store i32 %v6_9de4, i32* %r2.global-to-local, align 4
  %v2_a138 = load i32, i32* %r1.global-to-local, align 4
  %v3_a138 = add i32 %v2_a138, 1
  %v4_a138 = inttoptr i32 %v3_a138 to i8*
  store i8 %v5_9e04, i8* %v4_a138, align 1
  store i32 %v1_9e28, i32* %r3.global-to-local, align 4
  %v0_a140 = load i32, i32* %ip.global-to-local, align 4
  %v2_a140 = icmp eq i32 %v0_a140, 0
  store i1 %v2_a140, i1* %cpsr_z.global-to-local, align 1
  %v2_a144 = load i32, i32* %r1.global-to-local, align 4
  %v3_a144 = add i32 %v2_a144, 8
  %v4_a144 = inttoptr i32 %v3_a144 to i8*
  store i8 %v1_a144, i8* %v4_a144, align 1
  %v0_a148 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a148, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a0e0
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a14c = load i32, i32* %r1.global-to-local, align 4
  %v4_a14c = add i32 %v3_a14c, 6
  %v5_a14c = inttoptr i32 %v4_a14c to i16*
  store i16 64, i16* %v5_a14c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a0e0, %bb
  store i32 %v4_a150, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_a158, i32* %r2.global-to-local, align 4
  %v2_a15c = load i32, i32* %r1.global-to-local, align 4
  %v3_a15c = add i32 %v2_a15c, 9
  %v4_a15c = inttoptr i32 %v3_a15c to i8*
  store i8 6, i8* %v4_a15c, align 1
  %v0_a160 = load i32, i32* %ip.global-to-local, align 4
  %v1_a160 = trunc i32 %v0_a160 to i16
  %v2_a160 = load i32, i32* %r1.global-to-local, align 4
  %v3_a160 = add i32 %v2_a160, 2
  %v4_a160 = inttoptr i32 %v3_a160 to i16*
  store i16 %v1_a160, i16* %v4_a160, align 2
  store i32 %v6_9f9c, i32* %ip.global-to-local, align 4
  %v1_a168 = load i32, i32* %r1.global-to-local, align 4
  %v2_a168 = add i32 %v1_a168, 12
  %v3_a168 = inttoptr i32 %v2_a168 to i32*
  store i32 %v6_9f9c, i32* %v3_a168, align 4
  %v0_a16c = load i32, i32* %r2.global-to-local, align 4
  %v1_a16c = trunc i32 %v0_a16c to i16
  %v2_a16c = load i32, i32* %r1.global-to-local, align 4
  %v3_a16c = add i32 %v2_a16c, 4
  %v4_a16c = inttoptr i32 %v3_a16c to i16*
  store i16 %v1_a16c, i16* %v4_a16c, align 2
  %v0_a170 = load i32, i32* %r0.global-to-local, align 4
  %v1_a170 = add i32 %v0_a170, 16
  %v2_a170 = inttoptr i32 %v1_a170 to i32*
  %v3_a170 = load i32, i32* %v2_a170, align 4
  store i32 %v3_a170, i32* %r2.global-to-local, align 4
  store i32 %v4_a174, i32* %r0.global-to-local, align 4
  %v1_a178 = load i32, i32* %r1.global-to-local, align 4
  %v2_a178 = add i32 %v1_a178, 16
  %v3_a178 = inttoptr i32 %v2_a178 to i32*
  store i32 %v3_a170, i32* %v3_a178, align 4
  %v0_a17c = load i32, i32* %r0.global-to-local, align 4
  %v1_a17c = trunc i32 %v0_a17c to i16
  %v2_a17c = load i32, i32* %r1.global-to-local, align 4
  %v3_a17c = add i32 %v2_a17c, 20
  %v4_a17c = inttoptr i32 %v3_a17c to i16*
  store i16 %v1_a17c, i16* %v4_a17c, align 2
  %v0_a180 = load i32, i32* %r1.global-to-local, align 4
  %v1_a180 = add i32 %v0_a180, 20
  store i32 %v1_a180, i32* @r4, align 4
  %v1_a184 = add i32 %v0_a180, 32
  %v2_a184 = inttoptr i32 %v1_a184 to i8*
  %v3_a184 = load i8, i8* %v2_a184, align 1
  %v4_a184 = zext i8 %v3_a184 to i32
  %v1_a188 = and i32 %v4_a184, 95
  store i32 %v1_a188, i32* %r3.global-to-local, align 4
  %v1_a18c = add i32 %v0_a180, 33
  %v2_a18c = inttoptr i32 %v1_a18c to i8*
  %v3_a18c = load i8, i8* %v2_a18c, align 1
  %v4_a18c = zext i8 %v3_a18c to i32
  store i32 %v4_a18c, i32* %r2.global-to-local, align 4
  %v1_a190 = or i32 %v1_a188, 80
  %v1_a194 = add i32 %v0_a180, 40
  store i32 %v1_a194, i32* @r5, align 4
  store i32 %v1_a090, i32* %r1.global-to-local, align 4
  %v1_a19c = trunc i32 %v1_a190 to i8
  store i8 %v1_a19c, i8* %v2_a184, align 1
  store i32 %v5_a098, i32* %r3.global-to-local, align 4
  %v0_a1a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1a4 = and i32 %v0_a1a4, -33
  %v1_a1a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_a1a8 = mul i32 %v1_a1a8, 32
  %v5_a1a8 = or i32 %v4_a1a8, %v1_a1a4
  store i32 %v5_a1a8, i32* %r2.global-to-local, align 4
  %v1_a1ac = load i32, i32* @r4, align 4
  %v2_a1ac = add i32 %v1_a1ac, 4
  %v3_a1ac = inttoptr i32 %v2_a1ac to i32*
  store i32 %v5_a098, i32* %v3_a1ac, align 4
  %v0_a1b0 = load i32, i32* @fp, align 4
  %v1_a1b0 = trunc i32 %v0_a1b0 to i16
  %v2_a1b0 = load i32, i32* @r4, align 4
  %v3_a1b0 = add i32 %v2_a1b0, 2
  %v4_a1b0 = inttoptr i32 %v3_a1b0 to i16*
  store i16 %v1_a1b0, i16* %v4_a1b0, align 2
  %v0_a1b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_a1b4 = trunc i32 %v0_a1b4 to i8
  %v2_a1b4 = load i32, i32* @r4, align 4
  %v3_a1b4 = add i32 %v2_a1b4, 13
  %v4_a1b4 = inttoptr i32 %v3_a1b4 to i8*
  store i8 %v1_a1b4, i8* %v4_a1b4, align 1
  %v0_a1b8 = load i32, i32* @r4, align 4
  %v1_a1b8 = add i32 %v0_a1b8, 13
  %v2_a1b8 = inttoptr i32 %v1_a1b8 to i8*
  %v3_a1b8 = load i8, i8* %v2_a1b8, align 1
  %v4_a1b8 = zext i8 %v3_a1b8 to i32
  store i32 %v1_a094, i32* %ip.global-to-local, align 4
  %v1_a1c0 = and i32 %v4_a1b8, 239
  %v5_a1c4 = or i32 %v1_a1c0, %v4_a1c4
  store i32 %v5_a1c4, i32* %r3.global-to-local, align 4
  %v1_a1c8 = trunc i32 %v5_a1c4 to i8
  store i8 %v1_a1c8, i8* %v2_a1b8, align 1
  %v0_a1cc = load i32, i32* @r4, align 4
  %v1_a1cc = add i32 %v0_a1cc, 13
  %v2_a1cc = inttoptr i32 %v1_a1cc to i8*
  %v3_a1cc = load i8, i8* %v2_a1cc, align 1
  %v4_a1cc = zext i8 %v3_a1cc to i32
  store i32 %v1_a0a4, i32* %r0.global-to-local, align 4
  %v1_a1d4 = and i32 %v4_a1cc, 247
  %v5_a1d8 = or i32 %v1_a1d4, %v4_a1d8
  store i32 %v5_a1d8, i32* %r2.global-to-local, align 4
  %v1_a1dc = trunc i32 %v5_a1d8 to i8
  store i8 %v1_a1dc, i8* %v2_a1cc, align 1
  %v0_a1e0 = load i32, i32* @r4, align 4
  %v1_a1e0 = add i32 %v0_a1e0, 13
  %v2_a1e0 = inttoptr i32 %v1_a1e0 to i8*
  %v3_a1e0 = load i8, i8* %v2_a1e0, align 1
  %v4_a1e0 = zext i8 %v3_a1e0 to i32
  store i32 %v1_a0a8, i32* %r1.global-to-local, align 4
  %v1_a1e8 = and i32 %v4_a1e0, 251
  %v5_a1ec = or i32 %v1_a1e8, %v4_a1ec
  store i32 %v5_a1ec, i32* %r3.global-to-local, align 4
  %v1_a1f0 = trunc i32 %v5_a1ec to i8
  store i8 %v1_a1f0, i8* %v2_a1e0, align 1
  %v0_a1f4 = load i32, i32* @r4, align 4
  %v1_a1f4 = add i32 %v0_a1f4, 13
  %v2_a1f4 = inttoptr i32 %v1_a1f4 to i8*
  %v3_a1f4 = load i8, i8* %v2_a1f4, align 1
  %v4_a1f4 = zext i8 %v3_a1f4 to i32
  %v1_a1f8 = and i32 %v4_a1f4, 253
  %v1_a1fc = load i32, i32* @sb, align 4
  %v3_a1fc = mul i32 %v1_a1fc, 2
  %v4_a1fc = or i32 %v3_a1fc, %v1_a1f8
  store i32 %v4_a1fc, i32* %r2.global-to-local, align 4
  %v1_a200 = trunc i32 %v4_a1fc to i8
  store i8 %v1_a200, i8* %v2_a1f4, align 1
  %v0_a204 = load i32, i32* @r4, align 4
  %v1_a204 = add i32 %v0_a204, 13
  %v2_a204 = inttoptr i32 %v1_a204 to i8*
  %v3_a204 = load i8, i8* %v2_a204, align 1
  %v4_a204 = zext i8 %v3_a204 to i32
  %v1_a208 = and i32 %v4_a204, 254
  %v0_a20c = load i32, i32* @sl, align 4
  %v2_a20c = or i32 %v1_a208, %v0_a20c
  store i32 %v2_a20c, i32* %r3.global-to-local, align 4
  %v1_a210 = trunc i32 %v2_a20c to i8
  store i8 %v1_a210, i8* %v2_a204, align 1
  %v0_a214 = call i32 @function_db0c()
  %v1_a214 = trunc i32 %v0_a214 to i16
  store i32 %v0_a214, i32* %r0.global-to-local, align 4
  %v0_a218 = load i32, i32* @r6, align 4
  %v2_a218 = icmp eq i32 %v0_a218, 0
  store i1 %v2_a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a218, label %.thread9, label %bb68

bb68:                                             ; preds = %.thread
  %v1_a21c = load i32, i32* @r4, align 4
  %v2_a21c = add i32 %v1_a21c, 13
  %v3_a21c = inttoptr i32 %v2_a21c to i8*
  %v4_a21c = load i8, i8* %v3_a21c, align 1
  %v5_a21c = zext i8 %v4_a21c to i32
  %v2_a220 = or i32 %v5_a21c, 8
  store i32 %v2_a220, i32* %r3.global-to-local, align 4
  %v2_a224 = trunc i32 %v2_a220 to i8
  store i8 %v2_a224, i8* %v3_a21c, align 1
  br label %.thread9

.thread9:                                         ; preds = %.thread, %bb68
  %v3_a228 = load i32, i32* @r4, align 4
  %v4_a228 = add i32 %v3_a228, 14
  %v5_a228 = inttoptr i32 %v4_a228 to i16*
  store i16 %v1_a214, i16* %v5_a228, align 2
  %v0_a22c = load i32, i32* @r8, align 4
  store i32 %v0_a22c, i32* %r1.global-to-local, align 4
  %v0_a230 = load i32, i32* @r5, align 4
  store i32 %v0_a230, i32* %r0.global-to-local, align 4
  %v2_a234 = call i32 @function_dbd0(i32 %v0_a230, i32 %v0_a22c)
  store i32 %v2_a234, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a23c = load i32, i32* @r5, align 4
  %v3_a23c = load i32, i32* @r8, align 4
  %v4_a23c = add i32 %v3_a23c, %v2_a23c
  %v5_a23c = inttoptr i32 %v4_a23c to i8*
  store i8 0, i8* %v5_a23c, align 1
  %v3_a240 = load i32, i32* %stack_var_-44, align 4
  %v1_a244 = add i32 %v3_a240, 1
  store i32 %v1_a244, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_a24c = icmp eq i32 %v1_a244, %arg2
  store i1 %v9_a24c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a244, i32* %stack_var_-44, align 4
  %v5_a254 = icmp slt i32 %v1_a244, %arg2
  br i1 %v5_a254, label %dec_label_pc_a0e0, label %dec_label_pc_a258.preheader

dec_label_pc_a258.preheader:                      ; preds = %.thread9, %dec_label_pc_9ff8
  %v2_a294 = icmp eq i32 %v6_9f9c, -1
  %v7_a294 = icmp eq i32 %v6_9f9c, -1
  %v3_a408 = icmp eq i32 %v3_a00c, 65535
  %v2_a46c = icmp eq i32 %v1_9f88, 0
  br label %dec_label_pc_a258

dec_label_pc_a258:                                ; preds = %dec_label_pc_a258.preheader, %dec_label_pc_a494
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_a018, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a018, label %dec_label_pc_a494, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a258
  %v0_a26c = load i32, i32* @r8, align 4
  %v3_a26c = mul i32 %v0_a26c, 65536
  %v1_a270 = add i32 %v3_a26c, 1310720
  store i32 %v1_a270, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_a270, 256
  %v3_a278 = and i32 %tmp69, 65280
  store i32 %v3_a278, i32* %r3.global-to-local, align 4
  %v4_a27c = udiv i32 %v1_a270, 16777216
  %v5_a27c = or i32 %v3_a278, %v4_a27c
  store i32 %v5_a27c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a284 = add i32 %v0_a26c, 20
  store i32 %v1_a284, i32* @sb, align 4
  %v1_a288 = add i32 %v0_a26c, 40
  store i32 %v1_a288, i32* @sl, align 4
  br label %dec_label_pc_a374

dec_label_pc_a290:                                ; preds = %dec_label_pc_a374
  store i32 %v6_9f9c, i32* %r0.global-to-local, align 4
  store i1 %v7_a294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a294, label %dec_label_pc_a3f8, label %dec_label_pc_a29c

dec_label_pc_a29c:                                ; preds = %dec_label_pc_a398, %dec_label_pc_a290
  store i32 %v3_a00c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a408, label %dec_label_pc_a414, label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge, %dec_label_pc_a29c
  %v1_a2b4 = phi i32 [ %v1_a2b4.pre, %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge ], [ 65535, %dec_label_pc_a29c ]
  store i32 %v3_a010, i32* %r2.global-to-local, align 4
  %v9_a2b4 = icmp eq i32 %v3_a010, %v1_a2b4
  store i1 %v9_a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2b4, label %dec_label_pc_a428, label %dec_label_pc_a2bc

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge, %dec_label_pc_a2b0
  %v1_a2c0 = phi i32 [ %v1_a2c0.pre, %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge ], [ %v1_a2b4, %dec_label_pc_a2b0 ]
  store i32 %v3_a014, i32* %r3.global-to-local, align 4
  %v9_a2c0 = icmp eq i32 %v3_a014, %v1_a2c0
  store i1 %v9_a2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2c0, label %dec_label_pc_a43c, label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge, %dec_label_pc_a2bc
  %v1_a2cc = phi i32 [ %v1_a2cc.pre, %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge ], [ %v1_a2c0, %dec_label_pc_a2bc ]
  store i32 %v6_9e9c, i32* %ip.global-to-local, align 4
  %v9_a2cc = icmp eq i32 %v6_9e9c, %v1_a2cc
  store i1 %v9_a2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2cc, label %dec_label_pc_a450, label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge, %dec_label_pc_a2c8
  %v1_a2d8 = phi i32 [ %v1_a2d8.pre, %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge ], [ %v1_a2cc, %dec_label_pc_a2c8 ]
  store i32 %v6_9eb8, i32* %r0.global-to-local, align 4
  %v9_a2d8 = icmp eq i32 %v6_9eb8, %v1_a2d8
  store i1 %v9_a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2d8, label %dec_label_pc_a464, label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a450, %dec_label_pc_a2d4
  store i32 %v1_9f88, i32* %r1.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a46c, label %dec_label_pc_a2ec, label %dec_label_pc_a478

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a464, %dec_label_pc_a478
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_a2f0 = load i32, i32* @r5, align 4
  %v3_a2f0 = add i32 %v2_a2f0, 10
  %v4_a2f0 = inttoptr i32 %v3_a2f0 to i16*
  store i16 0, i16* %v4_a2f0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a2f8 = load i32, i32* @r5, align 4
  store i32 %v0_a2f8, i32* @r0, align 4
  %v2_a2fc = call i32 @function_bf78(i32 %v0_a2f8, i32 20)
  %v3_a2fc = trunc i32 %v2_a2fc to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a304 = load i32, i32* @r5, align 4
  %v4_a304 = add i32 %v3_a304, 10
  %v5_a304 = inttoptr i32 %v4_a304 to i16*
  store i16 %v3_a2fc, i16* %v5_a304, align 2
  %v0_a308 = load i32, i32* @r6, align 4
  store i32 %v0_a308, i32* @r1, align 4
  %v0_a30c = load i32, i32* %r3.global-to-local, align 4
  %v1_a30c = trunc i32 %v0_a30c to i16
  %v3_a30c = add i32 %v0_a308, 16
  %v4_a30c = inttoptr i32 %v3_a30c to i16*
  store i16 %v1_a30c, i16* %v4_a30c, align 2
  %v0_a310 = load i32, i32* @fp, align 4
  store i32 %v0_a310, i32* %r2.global-to-local, align 4
  %v0_a314 = load i32, i32* @sb, align 4
  store i32 %v0_a314, i32* %r3.global-to-local, align 4
  %v0_a318 = load i32, i32* @r5, align 4
  store i32 %v0_a318, i32* %r0.global-to-local, align 4
  %v4_a31c = call i32 @function_bfc8(i32 %v0_a318, i32 %v0_a308, i32 %v0_a310, i32 %v0_a314)
  %v5_a31c = trunc i32 %v4_a31c to i16
  store i32 %v4_a31c, i32* %r0.global-to-local, align 4
  %v3_a320 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a320, i32* %r3.global-to-local, align 4
  %v3_a324 = mul i32 %v3_a320, 32
  store i32 %v3_a324, i32* %lr.global-to-local, align 4
  %v3_a328 = load i32, i32* @r6, align 4
  %v4_a328 = add i32 %v3_a328, 16
  %v5_a328 = inttoptr i32 %v4_a328 to i16*
  store i16 %v5_a31c, i16* %v5_a328, align 2
  %v0_a32c = load i32, i32* %lr.global-to-local, align 4
  %v1_a32c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_a32c, -8
  %v5_a32c = add i32 %v0_a32c, %tmp73
  store i32 %v5_a32c, i32* %lr.global-to-local, align 4
  %v0_a330 = load i32, i32* @r6, align 4
  %v1_a330 = add i32 %v0_a330, 2
  %v2_a330 = inttoptr i32 %v1_a330 to i16*
  %v3_a330 = load i16, i16* %v2_a330, align 2
  %v1_a334 = load i32, i32* @r7, align 4
  %v2_a334 = add i32 %v1_a334, %v5_a32c
  store i32 %v2_a334, i32* @lr, align 4
  %v3_a338 = add i32 %v2_a334, 2
  %v4_a338 = inttoptr i32 %v3_a338 to i16*
  store i16 %v3_a330, i16* %v4_a338, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a344 = load i32, i32* @r5, align 4
  store i32 %v0_a344, i32* %r1.global-to-local, align 4
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v0_a34c = load i32, i32* @sl, align 4
  store i32 %v0_a34c, i32* %r2.global-to-local, align 4
  %v0_a354 = load i32, i32* @lr, align 4
  %v6_a358 = call i32 @function_123e0(i32 %v3_9fc0, i32 %v0_a344, i32 %v0_a34c, i32 16384, i32 %v0_a354, i32 16)
  %v3_a35c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a35c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_a364 = add i32 %v3_a35c, 1
  store i32 %v1_a364, i32* %r0.global-to-local, align 4
  %v9_a368 = icmp eq i32 %v1_a364, %arg2
  store i1 %v9_a368, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a364, i32* %stack_var_-44, align 4
  %v6_a370 = icmp slt i32 %v1_a364, %arg2
  br i1 %v6_a370, label %dec_label_pc_a374, label %dec_label_pc_a494

dec_label_pc_a374:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a26c
  %v1_a388 = phi i32 [ %v1_a364, %dec_label_pc_a2ec ], [ 0, %dec_label_pc_a26c ]
  %v5_a378 = mul i32 %v1_a388, 24
  %v1_a37c = load i32, i32* @r7, align 4
  %v2_a37c = add i32 %v1_a37c, %v5_a378
  store i32 %v2_a37c, i32* %r3.global-to-local, align 4
  store i32 %v2_9dcc, i32* %ip.global-to-local, align 4
  %v1_a384 = add i32 %v2_a37c, 20
  %v2_a384 = inttoptr i32 %v1_a384 to i8*
  %v3_a384 = load i8, i8* %v2_a384, align 1
  %v4_a384 = zext i8 %v3_a384 to i32
  store i32 %v4_a384, i32* %r2.global-to-local, align 4
  %v4_a388 = mul i32 %v1_a388, 4
  %v5_a388 = add i32 %v4_a388, %v2_9dcc
  %v6_a388 = inttoptr i32 %v5_a388 to i32*
  %v7_a388 = load i32, i32* %v6_a388, align 4
  store i32 %v7_a388, i32* @r5, align 4
  %v2_a38c = icmp ugt i8 %v3_a384, 30
  %v7_a38c = icmp eq i8 %v3_a384, 31
  store i1 %v7_a38c, i1* %cpsr_z.global-to-local, align 1
  %v1_a390 = add i32 %v7_a388, 20
  store i32 %v1_a390, i32* @r6, align 4
  %v2_a394 = xor i1 %v7_a38c, true
  %v3_a394 = and i1 %v2_a38c, %v2_a394
  br i1 %v3_a394, label %dec_label_pc_a290, label %dec_label_pc_a398

dec_label_pc_a398:                                ; preds = %dec_label_pc_a374
  %v1_a398 = add i32 %v2_a37c, 16
  %v2_a398 = inttoptr i32 %v1_a398 to i32*
  %v3_a398 = load i32, i32* %v2_a398, align 4
  %v0_a39c = call i32 @function_db0c()
  store i32 %v0_a39c, i32* %r0.global-to-local, align 4
  %v3_a3a0 = load i32, i32* %stack_var_-44, align 4
  %v5_a3a8 = mul i32 %v3_a3a0, 24
  %v1_a3ac = and i32 %v3_a398, 16711680
  store i32 %v1_a3ac, i32* %ip.global-to-local, align 4
  %v3_a3b0 = udiv i32 %v3_a398, 16777216
  %v4_a3b4 = udiv i32 %v1_a3ac, 256
  %v5_a3b4 = or i32 %v4_a3b4, %v3_a3b0
  store i32 %v5_a3b4, i32* %r2.global-to-local, align 4
  %v1_a3b8 = load i32, i32* @r7, align 4
  %v2_a3b8 = add i32 %v1_a3b8, %v5_a3a8
  store i32 %v2_a3b8, i32* %r1.global-to-local, align 4
  %v1_a3bc = and i32 %v3_a398, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_a3bc, i32* %r3.global-to-local, align 4
  %v1_a3c0 = add i32 %v2_a3b8, 20
  %v2_a3c0 = inttoptr i32 %v1_a3c0 to i8*
  %v3_a3c0 = load i8, i8* %v2_a3c0, align 1
  %v4_a3c0 = zext i8 %v3_a3c0 to i32
  store i32 %v4_a3c0, i32* %ip.global-to-local, align 4
  %v4_a3c4 = mul i32 %v1_a3bc, 256
  %v4_a3c8 = mul i32 %v3_a398, 16777216
  %v5_a3c4 = or i32 %v4_a3c4, %v4_a3c8
  %v5_a3c8 = or i32 %v5_a3c4, %v5_a3b4
  %v7_a3cc = lshr i32 %v0_a39c, %v4_a3c0
  %v8_a3cc = add i32 %v7_a3cc, %v5_a3c8
  store i32 %v8_a3cc, i32* %r2.global-to-local, align 4
  %v1_a3dc = and i32 %v8_a3cc, 65280
  store i32 %v1_a3dc, i32* %r1.global-to-local, align 4
  store i32 %v6_9f9c, i32* %r0.global-to-local, align 4
  %v5_a3e8 = call i32 @llvm.bswap.i32(i32 %v8_a3cc)
  store i32 %v5_a3e8, i32* %r3.global-to-local, align 4
  store i1 %v7_a294, i1* %cpsr_z.global-to-local, align 1
  %v1_a3f0 = load i32, i32* @r5, align 4
  %v2_a3f0 = add i32 %v1_a3f0, 16
  %v3_a3f0 = inttoptr i32 %v2_a3f0 to i32*
  store i32 %v5_a3e8, i32* %v3_a3f0, align 4
  br i1 %v2_a294, label %dec_label_pc_a3f8, label %dec_label_pc_a29c

dec_label_pc_a3f8:                                ; preds = %dec_label_pc_a398, %dec_label_pc_a290
  %v0_a3f8 = call i32 @function_db0c()
  store i32 %v0_a3f8, i32* %r0.global-to-local, align 4
  store i32 %v3_a00c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a408, i1* %cpsr_z.global-to-local, align 1
  %v1_a40c = load i32, i32* @r5, align 4
  %v2_a40c = add i32 %v1_a40c, 12
  %v3_a40c = inttoptr i32 %v2_a40c to i32*
  store i32 %v0_a3f8, i32* %v3_a40c, align 4
  br i1 %v3_a408, label %dec_label_pc_a414, label %dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge

dec_label_pc_a3f8.dec_label_pc_a2b0_crit_edge:    ; preds = %dec_label_pc_a3f8
  %v1_a2b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2b0

dec_label_pc_a414:                                ; preds = %dec_label_pc_a3f8, %dec_label_pc_a29c
  %v0_a414 = call i32 @function_db0c()
  %v1_a414 = trunc i32 %v0_a414 to i16
  store i32 %v0_a414, i32* %r0.global-to-local, align 4
  store i32 %v3_a010, i32* %r2.global-to-local, align 4
  %v1_a41c = load i32, i32* @r4, align 4
  %v9_a41c = icmp eq i32 %v3_a010, %v1_a41c
  store i1 %v9_a41c, i1* %cpsr_z.global-to-local, align 1
  %v3_a420 = load i32, i32* @r5, align 4
  %v4_a420 = add i32 %v3_a420, 4
  %v5_a420 = inttoptr i32 %v4_a420 to i16*
  store i16 %v1_a414, i16* %v5_a420, align 2
  br i1 %v9_a41c, label %dec_label_pc_a428, label %dec_label_pc_a414.dec_label_pc_a2bc_crit_edge

dec_label_pc_a414.dec_label_pc_a2bc_crit_edge:    ; preds = %dec_label_pc_a414
  %v1_a2c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2bc

dec_label_pc_a428:                                ; preds = %dec_label_pc_a414, %dec_label_pc_a2b0
  %v0_a428 = call i32 @function_db0c()
  %v1_a428 = trunc i32 %v0_a428 to i16
  store i32 %v0_a428, i32* %r0.global-to-local, align 4
  store i32 %v3_a014, i32* %r3.global-to-local, align 4
  %v1_a430 = load i32, i32* @r4, align 4
  %v9_a430 = icmp eq i32 %v3_a014, %v1_a430
  store i1 %v9_a430, i1* %cpsr_z.global-to-local, align 1
  %v3_a434 = load i32, i32* @r5, align 4
  %v4_a434 = add i32 %v3_a434, 20
  %v5_a434 = inttoptr i32 %v4_a434 to i16*
  store i16 %v1_a428, i16* %v5_a434, align 2
  br i1 %v9_a430, label %dec_label_pc_a43c, label %dec_label_pc_a428.dec_label_pc_a2c8_crit_edge

dec_label_pc_a428.dec_label_pc_a2c8_crit_edge:    ; preds = %dec_label_pc_a428
  %v1_a2cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2c8

dec_label_pc_a43c:                                ; preds = %dec_label_pc_a428, %dec_label_pc_a2bc
  %v0_a43c = call i32 @function_db0c()
  %v1_a43c = trunc i32 %v0_a43c to i16
  store i32 %v0_a43c, i32* %r0.global-to-local, align 4
  store i32 %v6_9e9c, i32* %ip.global-to-local, align 4
  %v1_a444 = load i32, i32* @r4, align 4
  %v9_a444 = icmp eq i32 %v6_9e9c, %v1_a444
  store i1 %v9_a444, i1* %cpsr_z.global-to-local, align 1
  %v3_a448 = load i32, i32* @r6, align 4
  %v4_a448 = add i32 %v3_a448, 2
  %v5_a448 = inttoptr i32 %v4_a448 to i16*
  store i16 %v1_a43c, i16* %v5_a448, align 2
  br i1 %v9_a444, label %dec_label_pc_a450, label %dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge

dec_label_pc_a43c.dec_label_pc_a2d4_crit_edge:    ; preds = %dec_label_pc_a43c
  %v1_a2d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a2d4

dec_label_pc_a450:                                ; preds = %dec_label_pc_a43c, %dec_label_pc_a2c8
  %v0_a450 = call i32 @function_db0c()
  %v1_a454 = load i32, i32* @r6, align 4
  %v2_a454 = add i32 %v1_a454, 4
  %v3_a454 = inttoptr i32 %v2_a454 to i32*
  store i32 %v0_a450, i32* %v3_a454, align 4
  store i32 %v6_9eb8, i32* %r0.global-to-local, align 4
  %v1_a45c = load i32, i32* @r4, align 4
  %v9_a45c = icmp eq i32 %v6_9eb8, %v1_a45c
  store i1 %v9_a45c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a45c, label %dec_label_pc_a464, label %dec_label_pc_a2e0

dec_label_pc_a464:                                ; preds = %dec_label_pc_a450, %dec_label_pc_a2d4
  %v0_a464 = call i32 @function_db0c()
  store i32 %v0_a464, i32* %r0.global-to-local, align 4
  store i32 %v1_9f88, i32* %r1.global-to-local, align 4
  store i1 %v2_a46c, i1* %cpsr_z.global-to-local, align 1
  %v1_a470 = load i32, i32* @r6, align 4
  %v2_a470 = add i32 %v1_a470, 8
  %v3_a470 = inttoptr i32 %v2_a470 to i32*
  store i32 %v0_a464, i32* %v3_a470, align 4
  br i1 %v2_a46c, label %dec_label_pc_a2ec, label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a464
  %v0_a478 = load i32, i32* @r5, align 4
  %v1_a478 = add i32 %v0_a478, 40
  store i32 %v1_a478, i32* @r4, align 4
  store i32 %v1_a478, i32* %r0.global-to-local, align 4
  %v0_a480 = load i32, i32* @r8, align 4
  store i32 %v0_a480, i32* %r1.global-to-local, align 4
  %v2_a484 = call i32 @function_dbd0(i32 %v1_a478, i32 %v0_a480)
  store i32 %v2_a484, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a48c = load i32, i32* @r4, align 4
  %v3_a48c = load i32, i32* @r8, align 4
  %v4_a48c = add i32 %v3_a48c, %v2_a48c
  %v5_a48c = inttoptr i32 %v4_a48c to i8*
  store i8 0, i8* %v5_a48c, align 1
  br label %dec_label_pc_a2ec

dec_label_pc_a494:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a258
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a498 = call i32 @function_118d4(i32* null)
  store i32 %v2_a498, i32* %r0.global-to-local, align 4
  store i32 %v2_9fac, i32* %r1.global-to-local, align 4
  %v9_a4a0 = icmp eq i32 %v2_9fac, %v2_a498
  store i1 %v9_a4a0, i1* %cpsr_z.global-to-local, align 1
  %v6_a4a4 = icmp slt i32 %v2_9fac, %v2_a498
  br i1 %v6_a4a4, label %dec_label_pc_a4a8, label %dec_label_pc_a258

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a494, %dec_label_pc_9da0, %dec_label_pc_a4b4
  %v1_a4b0 = phi i32 [ %v3_9fc0, %dec_label_pc_9da0 ], [ %v1_a4b8, %dec_label_pc_a4b4 ], [ %v2_a498, %dec_label_pc_a494 ]
  store i32 %v18_9da0, i32* %sb.global-to-local, align 4
  store i32 %v24_9da0, i32* %fp.global-to-local, align 4
  store i32 %v27_9da0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a4b0

dec_label_pc_a4b4:                                ; preds = %dec_label_pc_9fd0
  store i32 %v3_9fc0, i32* %r0.global-to-local, align 4
  %v1_a4b8 = call i32 @function_11c54(i32 %v3_9fc0)
  store i32 %v1_a4b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a4a8

; uselistorder directives
  uselistorder i32 %v1_a4b8, { 1, 0 }
  uselistorder i32 %v0_a43c, { 1, 0 }
  uselistorder i32 %v0_a428, { 1, 0 }
  uselistorder i32 %v0_a414, { 1, 0 }
  uselistorder i32 %v5_a3e8, { 1, 0 }
  uselistorder i32 %v3_a398, { 3, 1, 2, 0 }
  uselistorder i32 %v1_a364, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_a32c, { 1, 0 }
  uselistorder i32 %v4_a31c, { 1, 0 }
  uselistorder i32 %v0_a26c, { 2, 1, 0 }
  uselistorder i1 %v2_a46c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_a408, { 1, 0, 2, 3 }
  uselistorder i1 %v7_a294, { 2, 1, 0 }
  uselistorder i32 %v1_a244, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a214, { 1, 0 }
  uselistorder i32 %v0_a180, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a0a8, { 2, 0, 1 }
  uselistorder i32 %v1_a0a4, { 2, 0, 1 }
  uselistorder i32 %v1_a094, { 1, 0 }
  uselistorder i1 %v2_a018, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a00c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a008, { 1, 0, 3, 2 }
  uselistorder i32 %v0_a004, { 1, 0, 2 }
  uselistorder i1 %v7_9ff0, { 1, 0 }
  uselistorder i1 %v7_9fc4, { 1, 0 }
  uselistorder i32 %v3_9fc0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_9fac, { 2, 1, 0 }
  uselistorder i32 %v6_9f9c, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_9f88, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9f00, { 0, 2, 1, 3 }
  uselistorder i32 %v6_9eb8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_9e9c, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_9e4c, { 1, 2, 0 }
  uselistorder i32 %v1_9e28, { 2, 1, 0 }
  uselistorder i32 %v6_9e20, { 1, 0 }
  uselistorder i32 %v7_9e08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_9de4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9dcc, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 48, 47, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_a4a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a478, { 1, 0 }
  uselistorder label %dec_label_pc_a2ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a258, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_a4c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a4c4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a4c4 = load i32, i32* @r4, align 4
  %v24_a4c4 = load i32, i32* @fp, align 4
  %v27_a4c4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a4f0 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_a4f4 = load i32, i32* @r4, align 4
  store i32 %v0_a4f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_a4f0, i32* @sl, align 4
  %v0_a504 = load i32, i32* @r5, align 4
  store i32 %v0_a504, i32* %r0.global-to-local, align 4
  %v5_a508 = inttoptr i32 %v0_a4f4 to i32*
  %v6_a508 = call i32 @function_8258(i32 %v0_a504, i32* %v5_a508, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a520 = load i32, i32* @r4, align 4
  store i32 %v0_a520, i32* %r1.global-to-local, align 4
  %v0_a524 = load i32, i32* @r5, align 4
  store i32 %v0_a524, i32* %r0.global-to-local, align 4
  %v5_a528 = trunc i32 %v6_a508 to i8
  %v6_a52c = inttoptr i32 %v0_a520 to i32*
  %v7_a52c = call i32 @function_8258(i32 %v0_a524, i32* %v6_a52c, i32 3, i32 65535, i32 %v6_a508)
  %v0_a530 = load i32, i32* @r4, align 4
  store i32 %v0_a530, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_a540 = load i32, i32* @r5, align 4
  store i32 %v0_a540, i32* %r0.global-to-local, align 4
  %v5_a544 = inttoptr i32 %v0_a530 to i32*
  %v6_a544 = call i32 @function_8258(i32 %v0_a540, i32* %v5_a544, i32 4, i32 64, i32 %v7_a52c)
  %v1_a54c = urem i32 %v6_a544, 256
  %v0_a550 = load i32, i32* @r4, align 4
  store i32 %v0_a550, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a55c = load i32, i32* @r5, align 4
  store i32 %v0_a55c, i32* %r0.global-to-local, align 4
  %v6_a564 = inttoptr i32 %v0_a550 to i32*
  %v7_a564 = call i32 @function_8258(i32 %v0_a55c, i32* %v6_a564, i32 5, i32 1, i32 %v1_a54c)
  %v1_a570 = urem i32 %v7_a564, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a57c = load i32, i32* @r4, align 4
  store i32 %v0_a57c, i32* %r1.global-to-local, align 4
  %v0_a580 = load i32, i32* @r5, align 4
  store i32 %v0_a580, i32* %r0.global-to-local, align 4
  %v5_a588 = inttoptr i32 %v0_a57c to i32*
  %v6_a588 = call i32 @function_8258(i32 %v0_a580, i32* %v5_a588, i32 6, i32 65535, i32 %v1_a570)
  %v0_a594 = load i32, i32* @r4, align 4
  store i32 %v0_a594, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a5a0 = load i32, i32* @r5, align 4
  store i32 %v0_a5a0, i32* %r0.global-to-local, align 4
  %v5_a5a4 = inttoptr i32 %v0_a594 to i32*
  %v6_a5a4 = call i32 @function_8258(i32 %v0_a5a0, i32* %v5_a5a4, i32 7, i32 65535, i32 %v6_a588)
  %v0_a5ac = load i32, i32* @r4, align 4
  store i32 %v0_a5ac, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_a5a4, i32* %fp.global-to-local, align 4
  %v0_a5bc = load i32, i32* @r5, align 4
  store i32 %v0_a5bc, i32* %r0.global-to-local, align 4
  %v5_a5c0 = inttoptr i32 %v0_a5ac to i32*
  %v6_a5c0 = call i32 @function_8258(i32 %v0_a5bc, i32* %v5_a5c0, i32 16, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_a5c4 = load i32, i32* @r4, align 4
  store i32 %v0_a5c4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a5d4 = load i32, i32* @r5, align 4
  store i32 %v0_a5d4, i32* %r0.global-to-local, align 4
  %v5_a5d8 = inttoptr i32 %v0_a5c4 to i32*
  %v6_a5d8 = call i32 @function_8258(i32 %v0_a5d4, i32* %v5_a5d8, i32 17, i32 0, i32 %v6_a5c0)
  %v0_a5dc = load i32, i32* @r4, align 4
  store i32 %v0_a5dc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a5ec = load i32, i32* @r5, align 4
  store i32 %v0_a5ec, i32* %r0.global-to-local, align 4
  %v5_a5f0 = inttoptr i32 %v0_a5dc to i32*
  %v6_a5f0 = call i32 @function_8258(i32 %v0_a5ec, i32* %v5_a5f0, i32 10, i32 0, i32 %v6_a5d8)
  %v0_a5f4 = load i32, i32* @r4, align 4
  store i32 %v0_a5f4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a604 = load i32, i32* @r5, align 4
  store i32 %v0_a604, i32* %r0.global-to-local, align 4
  %v5_a608 = inttoptr i32 %v0_a5f4 to i32*
  %v6_a608 = call i32 @function_8258(i32 %v0_a604, i32* %v5_a608, i32 11, i32 0, i32 %v6_a5f0)
  %v0_a60c = load i32, i32* @r4, align 4
  store i32 %v0_a60c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a61c = load i32, i32* @r5, align 4
  store i32 %v0_a61c, i32* %r0.global-to-local, align 4
  %v5_a620 = inttoptr i32 %v0_a60c to i32*
  %v6_a620 = call i32 @function_8258(i32 %v0_a61c, i32* %v5_a620, i32 12, i32 0, i32 %v6_a608)
  %v0_a624 = load i32, i32* @r4, align 4
  store i32 %v0_a624, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a634 = load i32, i32* @r5, align 4
  store i32 %v0_a634, i32* %r0.global-to-local, align 4
  %v5_a638 = inttoptr i32 %v0_a624 to i32*
  %v6_a638 = call i32 @function_8258(i32 %v0_a634, i32* %v5_a638, i32 13, i32 0, i32 %v6_a620)
  %v0_a63c = load i32, i32* @r4, align 4
  store i32 %v0_a63c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a64c = load i32, i32* @r5, align 4
  store i32 %v0_a64c, i32* %r0.global-to-local, align 4
  %v5_a650 = inttoptr i32 %v0_a63c to i32*
  %v6_a650 = call i32 @function_8258(i32 %v0_a64c, i32* %v5_a650, i32 14, i32 1, i32 %v6_a638)
  %v0_a654 = load i32, i32* @r4, align 4
  store i32 %v0_a654, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a664 = load i32, i32* @r5, align 4
  store i32 %v0_a664, i32* %r0.global-to-local, align 4
  %v5_a668 = inttoptr i32 %v0_a654 to i32*
  %v6_a668 = call i32 @function_8258(i32 %v0_a664, i32* %v5_a668, i32 15, i32 0, i32 %v6_a650)
  %v0_a670 = load i32, i32* @r4, align 4
  store i32 %v0_a670, i32* %r1.global-to-local, align 4
  %v2_a674 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_a674, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_a680 = load i32, i32* @r5, align 4
  store i32 %v0_a680, i32* %r0.global-to-local, align 4
  %v5_a684 = inttoptr i32 %v0_a670 to i32*
  %v6_a684 = call i32 @function_81ec(i32 %v0_a680, i32* %v5_a684, i32 19, i32 %v2_a674, i32 %v6_a668)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a690 = call i32 @function_118d4(i32* null)
  %v1_a694 = load i32, i32* @r6, align 4
  %v2_a694 = add i32 %v1_a694, %v2_a690
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a6a8 = call i32 @function_12464(i32 2, i32 3, i32 6)
  store i32 %v3_a6a8, i32* %r0.global-to-local, align 4
  %v7_a6ac = icmp eq i32 %v3_a6a8, -1
  store i1 %v7_a6ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a6a8, i32* @r8, align 4
  br i1 %v7_a6ac, label %dec_label_pc_ab80, label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a4c4
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a6c0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a6c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a6d4 = call i32 @function_12420(i32 %v3_a6a8, i32 0, i32 3, i32 %v6_a6c0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a6d4, i32* %r0.global-to-local, align 4
  %v7_a6d8 = icmp eq i32 %v5_a6d4, -1
  store i1 %v7_a6d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a6d8, label %dec_label_pc_ab8c, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6b8
  %v3_a6ec = mul i32 %v7_a52c, 65536
  store i32 %v3_a6ec, i32* %r0.global-to-local, align 4
  %v0_a6f4 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_a5f0, i32* %r1.global-to-local, align 4
  %v3_a700 = urem i32 %v7_a52c, 65536
  store i32 %v3_a700, i32* %r2.global-to-local, align 4
  %v3_a704 = urem i32 %v6_a588, 65536
  store i32 %v3_a704, i32* %r3.global-to-local, align 4
  %v3_a708 = urem i32 %v0_a6f4, 65536
  %v0_a70c = load i32, i32* @sb, align 4
  %v2_a70c = icmp eq i32 %v0_a70c, 0
  store i1 %v2_a70c, i1* %cpsr_z.global-to-local, align 1
  %v1_a71c = urem i32 %v6_a5f0, 256
  store i32 %v1_a71c, i32* @fp, align 4
  br i1 %v2_a70c, label %dec_label_pc_a970.preheader, label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6e0
  %trunc = trunc i32 %v7_a52c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_a704, 256
  %v3_a750 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_a6f4, 256
  %v3_a754 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v6_a5c0, 256
  %v3_a758 = and i32 %tmp62, 65280
  %v1_a75c = urem i32 %v6_a5f0, 2
  %tmp63 = udiv i32 %v6_a588, 256
  %v4_a760 = urem i32 %tmp63, 256
  %v5_a760 = or i32 %v3_a750, %v4_a760
  %tmp64 = udiv i32 %v0_a6f4, 256
  %v4_a764 = urem i32 %tmp64, 256
  %v5_a764 = or i32 %v4_a764, %v3_a754
  store i32 %v5_a764, i32* @r5, align 4
  %tmp65 = udiv i32 %v6_a5c0, 256
  %v4_a768 = urem i32 %tmp65, 256
  %v5_a768 = or i32 %v4_a768, %v3_a758
  store i32 %v5_a768, i32* @lr, align 4
  %v1_a77c = urem i32 %v6_a608, 2
  store i32 %v1_a77c, i32* %r1.global-to-local, align 4
  %v1_a780 = urem i32 %v6_a620, 2
  store i32 %v1_a780, i32* %r2.global-to-local, align 4
  %v1_a784 = urem i32 %v6_a638, 2
  store i32 %v1_a784, i32* %r3.global-to-local, align 4
  %v1_a788 = urem i32 %v6_a650, 2
  store i32 %v1_a788, i32* @r6, align 4
  %v1_a78c = urem i32 %v6_a668, 2
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_a808 = trunc i32 %v6_a544 to i8
  %sext6 = mul nuw i32 %v5_a760, 65536
  %v4_a834 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_a764, 65536
  %v6_a870 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_a77c
  %v4_a888 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_a780
  %v4_a8a0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_a784
  %v4_a8b4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_a788
  %v3_a8c8 = and i32 %tmp68, 2
  br label %dec_label_pc_a7b4

dec_label_pc_a7b4:                                ; preds = %.thread, %dec_label_pc_a724
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_a7bc = call i32 @function_12fcc(i32 128, i32 1)
  store i32 %v2_a7bc, i32* %r0.global-to-local, align 4
  %v3_a7c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a7c0, i32* %r2.global-to-local, align 4
  %v1_a7c4 = load i32, i32* @sl, align 4
  %v2_a7c4 = load i32, i32* @r4, align 4
  %v5_a7c4 = mul i32 %v2_a7c4, 4
  %v6_a7c4 = add i32 %v5_a7c4, %v1_a7c4
  %v7_a7c4 = inttoptr i32 %v6_a7c4 to i32*
  store i32 %v2_a7bc, i32* %v7_a7c4, align 4
  %v0_a7c8 = load i32, i32* %r2.global-to-local, align 4
  %v3_a7c8 = mul i32 %v0_a7c8, 32
  store i32 %v3_a7c8, i32* %r3.global-to-local, align 4
  %v0_a7cc = load i32, i32* @sl, align 4
  %v4_a7cc = mul i32 %v0_a7c8, 4
  %v5_a7cc = add i32 %v0_a7cc, %v4_a7cc
  %v6_a7cc = inttoptr i32 %v5_a7cc to i32*
  %v7_a7cc = load i32, i32* %v6_a7cc, align 4
  store i32 %v7_a7cc, i32* %r4.global-to-local, align 4
  %v5_a7d0 = mul i32 %v0_a7c8, 24
  store i32 %v5_a7d0, i32* %r3.global-to-local, align 4
  %v1_a7d4 = load i32, i32* @r7, align 4
  %v2_a7d4 = add i32 %v1_a7d4, %v5_a7d0
  store i32 %v2_a7d4, i32* %r0.global-to-local, align 4
  %v1_a7d8 = inttoptr i32 %v7_a7cc to i8*
  %v2_a7d8 = load i8, i8* %v1_a7d8, align 1
  %tmp69 = urem i8 %v2_a7d8, 16
  %v1_a7dc = zext i8 %tmp69 to i32
  %v1_a7e0 = or i32 %v1_a7dc, 64
  store i32 %v1_a7e0, i32* %r3.global-to-local, align 4
  %v1_a7e4 = trunc i32 %v1_a7e0 to i8
  store i8 %v1_a7e4, i8* %v1_a7d8, align 1
  %v0_a7e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_a7e8 = inttoptr i32 %v0_a7e8 to i8*
  %v2_a7e8 = load i8, i8* %v1_a7e8, align 1
  %v1_a7ec = and i8 %v2_a7e8, -16
  %v1_a7f0 = or i8 %v1_a7ec, 5
  store i32 %v1_a570, i32* %r1.global-to-local, align 4
  store i8 %v1_a7f0, i8* %v1_a7e8, align 1
  %v2_a800 = load i32, i32* %r4.global-to-local, align 4
  %v3_a800 = add i32 %v2_a800, 1
  %v4_a800 = inttoptr i32 %v3_a800 to i8*
  store i8 %v5_a528, i8* %v4_a800, align 1
  store i32 %v1_a54c, i32* %r3.global-to-local, align 4
  %v2_a808 = load i32, i32* %r4.global-to-local, align 4
  %v3_a808 = add i32 %v2_a808, 8
  %v4_a808 = inttoptr i32 %v3_a808 to i8*
  store i8 %v1_a808, i8* %v4_a808, align 1
  %v0_a810 = load i32, i32* %r1.global-to-local, align 4
  %v2_a810 = icmp eq i32 %v0_a810, 0
  store i1 %v2_a810, i1* %cpsr_z.global-to-local, align 1
  %v2_a814 = load i32, i32* %r4.global-to-local, align 4
  %v3_a814 = add i32 %v2_a814, 4
  %v4_a814 = inttoptr i32 %v3_a814 to i16*
  store i16 %rev, i16* %v4_a814, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_a81c = load i32, i32* %r4.global-to-local, align 4
  %v3_a81c = add i32 %v2_a81c, 9
  %v4_a81c = inttoptr i32 %v3_a81c to i8*
  store i8 6, i8* %v4_a81c, align 1
  %v0_a820 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a820, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a7b4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_a824 = load i32, i32* %r4.global-to-local, align 4
  %v4_a824 = add i32 %v3_a824, 6
  %v5_a824 = inttoptr i32 %v4_a824 to i16*
  store i16 64, i16* %v5_a824, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a7b4, %bb
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  %v1_a82c = load i32, i32* %r4.global-to-local, align 4
  %v2_a82c = add i32 %v1_a82c, 12
  %v3_a82c = inttoptr i32 %v2_a82c to i32*
  store i32 %v6_a684, i32* %v3_a82c, align 4
  %v0_a830 = load i32, i32* %r0.global-to-local, align 4
  %v1_a830 = add i32 %v0_a830, 16
  %v2_a830 = inttoptr i32 %v1_a830 to i32*
  %v3_a830 = load i32, i32* %v2_a830, align 4
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  store i32 %v4_a834, i32* %r0.global-to-local, align 4
  %v2_a83c = load i32, i32* %r4.global-to-local, align 4
  %v3_a83c = add i32 %v2_a83c, 2
  %v4_a83c = inttoptr i32 %v3_a83c to i16*
  store i16 15360, i16* %v4_a83c, align 2
  %v0_a840 = load i32, i32* %r3.global-to-local, align 4
  %v1_a840 = load i32, i32* %r4.global-to-local, align 4
  %v2_a840 = add i32 %v1_a840, 16
  %v3_a840 = inttoptr i32 %v2_a840 to i32*
  store i32 %v0_a840, i32* %v3_a840, align 4
  %v0_a844 = load i32, i32* %r0.global-to-local, align 4
  %v1_a844 = trunc i32 %v0_a844 to i16
  %v2_a844 = load i32, i32* %r4.global-to-local, align 4
  %v3_a844 = add i32 %v2_a844, 20
  %v4_a844 = inttoptr i32 %v3_a844 to i16*
  store i16 %v1_a844, i16* %v4_a844, align 2
  %v0_a848 = load i32, i32* %r4.global-to-local, align 4
  %v1_a848 = add i32 %v0_a848, 20
  store i32 %v1_a848, i32* %r1.global-to-local, align 4
  %v1_a84c = add i32 %v0_a848, 32
  %v2_a84c = inttoptr i32 %v1_a84c to i8*
  %v3_a84c = load i8, i8* %v2_a84c, align 1
  %v4_a84c = zext i8 %v3_a84c to i32
  store i32 %v4_a84c, i32* %r3.global-to-local, align 4
  %v1_a850 = add i32 %v0_a848, 33
  %v2_a850 = inttoptr i32 %v1_a850 to i8*
  %v3_a850 = load i8, i8* %v2_a850, align 1
  %v4_a850 = zext i8 %v3_a850 to i32
  store i32 %v1_a75c, i32* %r0.global-to-local, align 4
  %v1_a858 = urem i8 %v3_a84c, 16
  %v1_a85c = or i8 %v1_a858, -96
  %v1_a860 = and i32 %v4_a850, 223
  store i32 %v1_a860, i32* %r2.global-to-local, align 4
  store i8 %v1_a85c, i8* %v2_a84c, align 1
  %v0_a868 = load i32, i32* %r2.global-to-local, align 4
  %v1_a868 = load i32, i32* %r0.global-to-local, align 4
  %v4_a868 = mul i32 %v1_a868, 32
  %v5_a868 = or i32 %v4_a868, %v0_a868
  store i32 %v5_a868, i32* %r2.global-to-local, align 4
  store i32 %v5_a768, i32* %r0.global-to-local, align 4
  store i32 %v6_a870, i32* %r3.global-to-local, align 4
  %v1_a874 = trunc i32 %v5_a868 to i8
  %v2_a874 = load i32, i32* %r1.global-to-local, align 4
  %v3_a874 = add i32 %v2_a874, 13
  %v4_a874 = inttoptr i32 %v3_a874 to i8*
  store i8 %v1_a874, i8* %v4_a874, align 1
  %v0_a878 = load i32, i32* %r3.global-to-local, align 4
  %v1_a878 = trunc i32 %v0_a878 to i16
  %v2_a878 = load i32, i32* %r1.global-to-local, align 4
  %v3_a878 = add i32 %v2_a878, 2
  %v4_a878 = inttoptr i32 %v3_a878 to i16*
  store i16 %v1_a878, i16* %v4_a878, align 2
  %v0_a87c = load i32, i32* %r1.global-to-local, align 4
  %v1_a87c = add i32 %v0_a87c, 13
  %v2_a87c = inttoptr i32 %v1_a87c to i8*
  %v3_a87c = load i8, i8* %v2_a87c, align 1
  %v4_a87c = zext i8 %v3_a87c to i32
  store i32 %v1_a77c, i32* %r2.global-to-local, align 4
  %v1_a884 = and i32 %v4_a87c, 239
  %v5_a888 = or i32 %v1_a884, %v4_a888
  store i32 %v5_a888, i32* %r3.global-to-local, align 4
  %v0_a88c = load i32, i32* %r0.global-to-local, align 4
  %v2_a88c = add i32 %v0_a87c, 4
  %v3_a88c = inttoptr i32 %v2_a88c to i32*
  store i32 %v0_a88c, i32* %v3_a88c, align 4
  %v0_a890 = load i32, i32* %r3.global-to-local, align 4
  %v1_a890 = trunc i32 %v0_a890 to i8
  %v2_a890 = load i32, i32* %r1.global-to-local, align 4
  %v3_a890 = add i32 %v2_a890, 13
  %v4_a890 = inttoptr i32 %v3_a890 to i8*
  store i8 %v1_a890, i8* %v4_a890, align 1
  %v0_a894 = load i32, i32* %r1.global-to-local, align 4
  %v1_a894 = add i32 %v0_a894, 13
  %v2_a894 = inttoptr i32 %v1_a894 to i8*
  %v3_a894 = load i8, i8* %v2_a894, align 1
  %v4_a894 = zext i8 %v3_a894 to i32
  store i32 %v1_a780, i32* %r3.global-to-local, align 4
  %v1_a89c = and i32 %v4_a894, 247
  %v5_a8a0 = or i32 %v1_a89c, %v4_a8a0
  store i32 %v5_a8a0, i32* %r2.global-to-local, align 4
  %v1_a8a4 = trunc i32 %v5_a8a0 to i8
  store i8 %v1_a8a4, i8* %v2_a894, align 1
  %v0_a8a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8a8 = add i32 %v0_a8a8, 13
  %v2_a8a8 = inttoptr i32 %v1_a8a8 to i8*
  %v3_a8a8 = load i8, i8* %v2_a8a8, align 1
  %v4_a8a8 = zext i8 %v3_a8a8 to i32
  store i32 %v1_a784, i32* %r0.global-to-local, align 4
  %v1_a8b0 = and i32 %v4_a8a8, 251
  %v5_a8b4 = or i32 %v1_a8b0, %v4_a8b4
  store i32 %v5_a8b4, i32* %r3.global-to-local, align 4
  %v1_a8b8 = trunc i32 %v5_a8b4 to i8
  store i8 %v1_a8b8, i8* %v2_a8a8, align 1
  %v0_a8bc = load i32, i32* %r1.global-to-local, align 4
  %v1_a8bc = add i32 %v0_a8bc, 13
  %v2_a8bc = inttoptr i32 %v1_a8bc to i8*
  %v3_a8bc = load i8, i8* %v2_a8bc, align 1
  %v4_a8bc = zext i8 %v3_a8bc to i32
  store i32 %v1_a788, i32* %r3.global-to-local, align 4
  %v1_a8c4 = and i32 %v4_a8bc, 253
  %v4_a8c8 = or i32 %v1_a8c4, %v3_a8c8
  store i32 %v4_a8c8, i32* %r2.global-to-local, align 4
  %v1_a8cc = trunc i32 %v4_a8c8 to i8
  store i8 %v1_a8cc, i8* %v2_a8bc, align 1
  %v0_a8d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a8d0 = add i32 %v0_a8d0, 13
  %v2_a8d0 = inttoptr i32 %v1_a8d0 to i8*
  %v3_a8d0 = load i8, i8* %v2_a8d0, align 1
  %v4_a8d0 = zext i8 %v3_a8d0 to i32
  store i32 %v1_a78c, i32* %r0.global-to-local, align 4
  %v1_a8d8 = and i32 %v4_a8d0, 254
  %v2_a8dc = or i32 %v1_a8d8, %v1_a78c
  store i32 %v2_a8dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_a8e8 = trunc i32 %v2_a8dc to i8
  store i8 %v1_a8e8, i8* %v2_a8d0, align 1
  %v0_a8ec = load i32, i32* @r5, align 4
  %v1_a8ec = trunc i32 %v0_a8ec to i8
  %v2_a8ec = load i32, i32* %r4.global-to-local, align 4
  %v3_a8ec = add i32 %v2_a8ec, 40
  %v4_a8ec = inttoptr i32 %v3_a8ec to i8*
  store i8 %v1_a8ec, i8* %v4_a8ec, align 1
  %v0_a8f0 = load i32, i32* @r6, align 4
  %v1_a8f0 = trunc i32 %v0_a8f0 to i8
  %v2_a8f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_a8f0 = add i32 %v2_a8f0, 41
  %v4_a8f0 = inttoptr i32 %v3_a8f0 to i8*
  store i8 %v1_a8f0, i8* %v4_a8f0, align 1
  %v0_a8f4 = call i32 @function_db0c()
  %v1_a8f8 = urem i32 %v0_a8f4, 16
  %v1_a8fc = or i32 %v1_a8f8, 1392
  %v1_a900 = add nuw nsw i32 %v1_a8fc, 8
  %v3_a904 = mul nuw nsw i32 %v1_a900, 65536
  store i32 %v3_a904, i32* %r0.global-to-local, align 4
  %v3_a908 = mul nuw nsw i32 %v1_a900, 256
  %v1_a90c = and i32 %v3_a908, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v5_a910 = or i32 %v1_a90c, 5
  %v1_a914 = trunc i32 %v5_a910 to i16
  %v2_a914 = load i32, i32* %r4.global-to-local, align 4
  %v3_a914 = add i32 %v2_a914, 42
  %v4_a914 = inttoptr i32 %v3_a914 to i16*
  store i16 %v1_a914, i16* %v4_a914, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_a920 = load i32, i32* %r4.global-to-local, align 4
  %v3_a920 = add i32 %v2_a920, 46
  %v4_a920 = inttoptr i32 %v3_a920 to i8*
  store i8 8, i8* %v4_a920, align 1
  %v0_a924 = load i32, i32* %r2.global-to-local, align 4
  %v1_a924 = trunc i32 %v0_a924 to i8
  %v2_a924 = load i32, i32* %r4.global-to-local, align 4
  %v3_a924 = add i32 %v2_a924, 47
  %v4_a924 = inttoptr i32 %v3_a924 to i8*
  store i8 %v1_a924, i8* %v4_a924, align 1
  %v0_a928 = load i32, i32* @r6, align 4
  %v1_a928 = trunc i32 %v0_a928 to i8
  %v2_a928 = load i32, i32* %r4.global-to-local, align 4
  %v3_a928 = add i32 %v2_a928, 44
  %v4_a928 = inttoptr i32 %v3_a928 to i8*
  store i8 %v1_a928, i8* %v4_a928, align 1
  %v0_a92c = load i32, i32* @r5, align 4
  %v1_a92c = trunc i32 %v0_a92c to i8
  %v2_a92c = load i32, i32* %r4.global-to-local, align 4
  %v3_a92c = add i32 %v2_a92c, 45
  %v4_a92c = inttoptr i32 %v3_a92c to i8*
  store i8 %v1_a92c, i8* %v4_a92c, align 1
  %v0_a930 = call i32 @function_db0c()
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v2_a938 = load i32, i32* %r4.global-to-local, align 4
  %v3_a938 = add i32 %v2_a938, 59
  %v4_a938 = inttoptr i32 %v3_a938 to i8*
  store i8 6, i8* %v4_a938, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_a948 = load i32, i32* %r4.global-to-local, align 4
  %v2_a948 = add i32 %v1_a948, 48
  %v3_a948 = inttoptr i32 %v2_a948 to i32*
  store i32 %v0_a930, i32* %v3_a948, align 4
  %v0_a94c = load i32, i32* %r3.global-to-local, align 4
  %v1_a94c = load i32, i32* %r4.global-to-local, align 4
  %v2_a94c = add i32 %v1_a94c, 52
  %v3_a94c = inttoptr i32 %v2_a94c to i32*
  store i32 %v0_a94c, i32* %v3_a94c, align 4
  %v0_a950 = load i32, i32* %r2.global-to-local, align 4
  %v1_a950 = trunc i32 %v0_a950 to i8
  %v2_a950 = load i32, i32* %r4.global-to-local, align 4
  %v3_a950 = add i32 %v2_a950, 56
  %v4_a950 = inttoptr i32 %v3_a950 to i8*
  store i8 %v1_a950, i8* %v4_a950, align 1
  %v0_a954 = load i32, i32* %r1.global-to-local, align 4
  %v1_a954 = trunc i32 %v0_a954 to i8
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 58
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r1.global-to-local, align 4
  %v1_a958 = trunc i32 %v0_a958 to i8
  %v2_a958 = load i32, i32* %r4.global-to-local, align 4
  %v3_a958 = add i32 %v2_a958, 57
  %v4_a958 = inttoptr i32 %v3_a958 to i8*
  store i8 %v1_a958, i8* %v4_a958, align 1
  %v3_a95c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a95c, i32* %r3.global-to-local, align 4
  %v1_a960 = load i32, i32* %r2.global-to-local, align 4
  %v2_a960 = add i32 %v1_a960, %v3_a95c
  store i32 %v2_a960, i32* @r4, align 4
  %v1_a964 = load i32, i32* @sb, align 4
  %v9_a964 = icmp eq i32 %v2_a960, %v1_a964
  store i1 %v9_a964, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a960, i32* %stack_var_-44, align 4
  %v5_a96c = icmp slt i32 %v2_a960, %v1_a964
  br i1 %v5_a96c, label %dec_label_pc_a7b4, label %dec_label_pc_a970.preheader

dec_label_pc_a970.preheader:                      ; preds = %.thread, %dec_label_pc_a6e0
  %v0_a97410 = phi i32 [ 0, %dec_label_pc_a6e0 ], [ %v1_a964, %.thread ]
  %v2_a98c = icmp eq i32 %v6_a684, -1
  %v7_a98c = icmp eq i32 %v6_a684, -1
  %v3_a9a0 = icmp eq i32 %v3_a700, 65535
  br label %dec_label_pc_a970

dec_label_pc_a970:                                ; preds = %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge, %dec_label_pc_a970.preheader
  %v0_a974 = phi i32 [ %v0_a974.pre, %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge ], [ %v0_a97410, %dec_label_pc_a970.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a974 = icmp eq i32 %v0_a974, 0
  store i1 %v2_a974, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a974, label %dec_label_pc_ab6c, label %dec_label_pc_a980

dec_label_pc_a980:                                ; preds = %dec_label_pc_a970
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_aa64

dec_label_pc_a988:                                ; preds = %dec_label_pc_aa64
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  store i1 %v7_a98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a98c, label %dec_label_pc_aae4, label %dec_label_pc_a994

dec_label_pc_a994:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_a988
  store i32 %v3_a700, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_a9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a9a0, label %dec_label_pc_ab00, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a994
  %v1_a9ac = phi i32 [ %v1_aaf4, %dec_label_pc_aae4 ], [ 65535, %dec_label_pc_a994 ]
  store i32 %v3_a704, i32* %r1.global-to-local, align 4
  %v9_a9ac = icmp eq i32 %v3_a704, %v1_a9ac
  store i1 %v9_a9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9ac, label %dec_label_pc_ab14, label %dec_label_pc_a9b4

dec_label_pc_a9b4:                                ; preds = %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge, %dec_label_pc_a9a8
  %v1_a9b8 = phi i32 [ %v1_a9b8.pre, %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge ], [ %v1_a9ac, %dec_label_pc_a9a8 ]
  store i32 %v3_a708, i32* %r2.global-to-local, align 4
  %v9_a9b8 = icmp eq i32 %v3_a708, %v1_a9b8
  store i1 %v9_a9b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9b8, label %dec_label_pc_ab28, label %dec_label_pc_a9c0

dec_label_pc_a9c0:                                ; preds = %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge, %dec_label_pc_a9b4
  %v1_a9c4 = phi i32 [ %v1_a9c4.pre, %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge ], [ %v1_a9b8, %dec_label_pc_a9b4 ]
  store i32 %v6_a5c0, i32* %r3.global-to-local, align 4
  %v9_a9c4 = icmp eq i32 %v6_a5c0, %v1_a9c4
  store i1 %v9_a9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9c4, label %dec_label_pc_ab3c, label %dec_label_pc_a9cc

dec_label_pc_a9cc:                                ; preds = %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge, %dec_label_pc_a9c0
  %v1_a9d0 = phi i32 [ %v1_a9d0.pre, %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge ], [ %v1_a9c4, %dec_label_pc_a9c0 ]
  store i32 %v6_a5d8, i32* %r0.global-to-local, align 4
  %v9_a9d0 = icmp eq i32 %v6_a5d8, %v1_a9d0
  store i1 %v9_a9d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a9d0, label %dec_label_pc_ab50, label %dec_label_pc_a9d8

dec_label_pc_a9d8:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_a9cc
  %v0_a9d8 = load i32, i32* @fp, align 4
  %v2_a9d8 = icmp eq i32 %v0_a9d8, 0
  store i1 %v2_a9d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a9d8, label %dec_label_pc_a9e0, label %dec_label_pc_ab60

dec_label_pc_a9e0:                                ; preds = %dec_label_pc_a9d8, %dec_label_pc_ab50, %dec_label_pc_ab60
  %v2_a9e4 = load i32, i32* @r5, align 4
  %v3_a9e4 = add i32 %v2_a9e4, 10
  %v4_a9e4 = inttoptr i32 %v3_a9e4 to i16*
  store i16 0, i16* %v4_a9e4, align 2
  %v0_a9e8 = load i32, i32* @r5, align 4
  store i32 %v0_a9e8, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_a9f0 = call i32 @function_bf78(i32 %v0_a9e8, i32 20)
  %v3_a9f0 = trunc i32 %v2_a9f0 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a9f8 = load i32, i32* @r5, align 4
  %v4_a9f8 = add i32 %v3_a9f8, 10
  %v5_a9f8 = inttoptr i32 %v4_a9f8 to i16*
  store i16 %v3_a9f0, i16* %v5_a9f8, align 2
  %v0_a9fc = load i32, i32* @r6, align 4
  store i32 %v0_a9fc, i32* @r1, align 4
  %v0_aa00 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa00 = trunc i32 %v0_aa00 to i16
  %v3_aa00 = add i32 %v0_a9fc, 16
  %v4_aa00 = inttoptr i32 %v3_aa00 to i16*
  store i16 %v1_aa00, i16* %v4_aa00, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_aa0c = load i32, i32* @r5, align 4
  store i32 %v0_aa0c, i32* %r0.global-to-local, align 4
  %v4_aa10 = call i32 @function_bfc8(i32 %v0_aa0c, i32 %v0_a9fc, i32 10240, i32 40)
  %v5_aa10 = trunc i32 %v4_aa10 to i16
  store i32 %v4_aa10, i32* %r0.global-to-local, align 4
  %v3_aa14 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa14, i32* %r3.global-to-local, align 4
  %v3_aa18 = mul i32 %v3_aa14, 32
  store i32 %v3_aa18, i32* %lr.global-to-local, align 4
  %v3_aa1c = load i32, i32* @r6, align 4
  %v4_aa1c = add i32 %v3_aa1c, 16
  %v5_aa1c = inttoptr i32 %v4_aa1c to i16*
  store i16 %v5_aa10, i16* %v5_aa1c, align 2
  %v0_aa20 = load i32, i32* %lr.global-to-local, align 4
  %v1_aa20 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_aa20, -8
  %v5_aa20 = add i32 %v0_aa20, %tmp70
  store i32 %v5_aa20, i32* %lr.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r6, align 4
  %v1_aa24 = add i32 %v0_aa24, 2
  %v2_aa24 = inttoptr i32 %v1_aa24 to i16*
  %v3_aa24 = load i16, i16* %v2_aa24, align 2
  %v1_aa28 = load i32, i32* @r7, align 4
  %v2_aa28 = add i32 %v1_aa28, %v5_aa20
  store i32 %v2_aa28, i32* @lr, align 4
  %v3_aa2c = add i32 %v2_aa28, 2
  %v4_aa2c = inttoptr i32 %v3_aa2c to i16*
  store i16 %v3_aa24, i16* %v4_aa2c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aa38 = load i32, i32* @r5, align 4
  store i32 %v0_aa38, i32* %r1.global-to-local, align 4
  %v0_aa3c = load i32, i32* @r8, align 4
  store i32 %v0_aa3c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_aa44 = load i32, i32* @lr, align 4
  %v6_aa4c = call i32 @function_123e0(i32 %v0_aa3c, i32 %v0_aa38, i32 60, i32 16384, i32 %v0_aa44, i32 16)
  %v3_aa50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa50, i32* %r3.global-to-local, align 4
  %v1_aa54 = add i32 %v3_aa50, 1
  store i32 %v1_aa54, i32* %r0.global-to-local, align 4
  %v1_aa58 = load i32, i32* @sb, align 4
  %v9_aa58 = icmp eq i32 %v1_aa54, %v1_aa58
  store i1 %v9_aa58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_aa54, i32* %stack_var_-44, align 4
  %v6_aa60 = icmp slt i32 %v1_aa54, %v1_aa58
  br i1 %v6_aa60, label %dec_label_pc_aa64, label %dec_label_pc_ab6c

dec_label_pc_aa64:                                ; preds = %dec_label_pc_a9e0, %dec_label_pc_a980
  %v1_aa74 = phi i32 [ %v1_aa54, %dec_label_pc_a9e0 ], [ 0, %dec_label_pc_a980 ]
  %v5_aa68 = mul i32 %v1_aa74, 24
  %v1_aa6c = load i32, i32* @r7, align 4
  %v2_aa6c = add i32 %v1_aa6c, %v5_aa68
  store i32 %v2_aa6c, i32* %r3.global-to-local, align 4
  %v1_aa70 = add i32 %v2_aa6c, 20
  %v2_aa70 = inttoptr i32 %v1_aa70 to i8*
  %v3_aa70 = load i8, i8* %v2_aa70, align 1
  %v4_aa70 = zext i8 %v3_aa70 to i32
  store i32 %v4_aa70, i32* %r2.global-to-local, align 4
  %v0_aa74 = load i32, i32* @sl, align 4
  %v4_aa74 = mul i32 %v1_aa74, 4
  %v5_aa74 = add i32 %v0_aa74, %v4_aa74
  %v6_aa74 = inttoptr i32 %v5_aa74 to i32*
  %v7_aa74 = load i32, i32* %v6_aa74, align 4
  store i32 %v7_aa74, i32* @r5, align 4
  %v2_aa78 = icmp ugt i8 %v3_aa70, 30
  %v7_aa78 = icmp eq i8 %v3_aa70, 31
  store i1 %v7_aa78, i1* %cpsr_z.global-to-local, align 1
  %v1_aa7c = add i32 %v7_aa74, 20
  store i32 %v1_aa7c, i32* @r6, align 4
  %v2_aa80 = xor i1 %v7_aa78, true
  %v3_aa80 = and i1 %v2_aa78, %v2_aa80
  br i1 %v3_aa80, label %dec_label_pc_a988, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_aa64
  %v1_aa84 = add i32 %v2_aa6c, 16
  %v2_aa84 = inttoptr i32 %v1_aa84 to i32*
  %v3_aa84 = load i32, i32* %v2_aa84, align 4
  store i32 %v3_aa84, i32* %r4.global-to-local, align 4
  %v0_aa88 = call i32 @function_db0c()
  store i32 %v0_aa88, i32* %r0.global-to-local, align 4
  %v3_aa8c = load i32, i32* %stack_var_-44, align 4
  %v5_aa94 = mul i32 %v3_aa8c, 24
  %v0_aa98 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa98 = and i32 %v0_aa98, 16711680
  %v3_aa9c = udiv i32 %v0_aa98, 16777216
  %v4_aaa0 = udiv i32 %v1_aa98, 256
  %v5_aaa0 = or i32 %v4_aaa0, %v3_aa9c
  store i32 %v5_aaa0, i32* %r2.global-to-local, align 4
  %v1_aaa4 = load i32, i32* @r7, align 4
  %v2_aaa4 = add i32 %v1_aaa4, %v5_aa94
  store i32 %v2_aaa4, i32* %r1.global-to-local, align 4
  %v1_aaa8 = and i32 %v0_aa98, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_aaa8, i32* %r3.global-to-local, align 4
  %v1_aaac = add i32 %v2_aaa4, 20
  %v2_aaac = inttoptr i32 %v1_aaac to i8*
  %v3_aaac = load i8, i8* %v2_aaac, align 1
  %v4_aaac = zext i8 %v3_aaac to i32
  %v4_aab0 = mul i32 %v1_aaa8, 256
  %v4_aab4 = mul i32 %v0_aa98, 16777216
  %v5_aab0 = or i32 %v4_aab0, %v4_aab4
  %v5_aab4 = or i32 %v5_aab0, %v5_aaa0
  %v7_aab8 = lshr i32 %v0_aa88, %v4_aaac
  %v8_aab8 = add i32 %v7_aab8, %v5_aab4
  store i32 %v8_aab8, i32* %r2.global-to-local, align 4
  %v1_aabc = and i32 %v8_aab8, 16711680
  store i32 %v1_aabc, i32* %r0.global-to-local, align 4
  %v1_aac8 = and i32 %v8_aab8, 65280
  store i32 %v1_aac8, i32* %r1.global-to-local, align 4
  %v5_aad0 = call i32 @llvm.bswap.i32(i32 %v8_aab8)
  %v1_aad4 = load i32, i32* @r5, align 4
  %v2_aad4 = add i32 %v1_aad4, 16
  %v3_aad4 = inttoptr i32 %v2_aad4 to i32*
  store i32 %v5_aad0, i32* %v3_aad4, align 4
  store i32 %v6_a684, i32* %r3.global-to-local, align 4
  store i1 %v7_a98c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a98c, label %dec_label_pc_aae4, label %dec_label_pc_a994

dec_label_pc_aae4:                                ; preds = %dec_label_pc_aa84, %dec_label_pc_a988
  %v0_aae4 = call i32 @function_db0c()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_aaec = load i32, i32* @r5, align 4
  %v2_aaec = add i32 %v1_aaec, 12
  %v3_aaec = inttoptr i32 %v2_aaec to i32*
  store i32 %v0_aae4, i32* %v3_aaec, align 4
  store i32 %v3_a700, i32* %r0.global-to-local, align 4
  %v0_aaf4 = load i32, i32* %r4.global-to-local, align 4
  %v1_aaf4 = add i32 %v0_aaf4, -1
  store i32 %v1_aaf4, i32* @r4, align 4
  %v9_aaf8 = icmp eq i32 %v3_a700, %v1_aaf4
  store i1 %v9_aaf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaf8, label %dec_label_pc_ab00, label %dec_label_pc_a9a8

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aae4, %dec_label_pc_a994
  %v0_ab00 = call i32 @function_db0c()
  %v1_ab00 = trunc i32 %v0_ab00 to i16
  store i32 %v0_ab00, i32* %r0.global-to-local, align 4
  store i32 %v3_a704, i32* %r1.global-to-local, align 4
  %v1_ab08 = load i32, i32* @r4, align 4
  %v9_ab08 = icmp eq i32 %v3_a704, %v1_ab08
  store i1 %v9_ab08, i1* %cpsr_z.global-to-local, align 1
  %v3_ab0c = load i32, i32* @r5, align 4
  %v4_ab0c = add i32 %v3_ab0c, 4
  %v5_ab0c = inttoptr i32 %v4_ab0c to i16*
  store i16 %v1_ab00, i16* %v5_ab0c, align 2
  br i1 %v9_ab08, label %dec_label_pc_ab14, label %dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge

dec_label_pc_ab00.dec_label_pc_a9b4_crit_edge:    ; preds = %dec_label_pc_ab00
  %v1_a9b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9b4

dec_label_pc_ab14:                                ; preds = %dec_label_pc_ab00, %dec_label_pc_a9a8
  %v0_ab14 = call i32 @function_db0c()
  %v1_ab14 = trunc i32 %v0_ab14 to i16
  store i32 %v0_ab14, i32* %r0.global-to-local, align 4
  store i32 %v3_a708, i32* %r2.global-to-local, align 4
  %v1_ab1c = load i32, i32* @r4, align 4
  %v9_ab1c = icmp eq i32 %v3_a708, %v1_ab1c
  store i1 %v9_ab1c, i1* %cpsr_z.global-to-local, align 1
  %v3_ab20 = load i32, i32* @r5, align 4
  %v4_ab20 = add i32 %v3_ab20, 20
  %v5_ab20 = inttoptr i32 %v4_ab20 to i16*
  store i16 %v1_ab14, i16* %v5_ab20, align 2
  br i1 %v9_ab1c, label %dec_label_pc_ab28, label %dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge

dec_label_pc_ab14.dec_label_pc_a9c0_crit_edge:    ; preds = %dec_label_pc_ab14
  %v1_a9c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9c0

dec_label_pc_ab28:                                ; preds = %dec_label_pc_ab14, %dec_label_pc_a9b4
  %v0_ab28 = call i32 @function_db0c()
  %v1_ab28 = trunc i32 %v0_ab28 to i16
  store i32 %v0_ab28, i32* %r0.global-to-local, align 4
  store i32 %v6_a5c0, i32* %r3.global-to-local, align 4
  %v1_ab30 = load i32, i32* @r4, align 4
  %v9_ab30 = icmp eq i32 %v6_a5c0, %v1_ab30
  store i1 %v9_ab30, i1* %cpsr_z.global-to-local, align 1
  %v3_ab34 = load i32, i32* @r6, align 4
  %v4_ab34 = add i32 %v3_ab34, 2
  %v5_ab34 = inttoptr i32 %v4_ab34 to i16*
  store i16 %v1_ab28, i16* %v5_ab34, align 2
  br i1 %v9_ab30, label %dec_label_pc_ab3c, label %dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge

dec_label_pc_ab28.dec_label_pc_a9cc_crit_edge:    ; preds = %dec_label_pc_ab28
  %v1_a9d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a9cc

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_a9c0
  %v0_ab3c = call i32 @function_db0c()
  %v1_ab40 = load i32, i32* @r6, align 4
  %v2_ab40 = add i32 %v1_ab40, 4
  %v3_ab40 = inttoptr i32 %v2_ab40 to i32*
  store i32 %v0_ab3c, i32* %v3_ab40, align 4
  store i32 %v6_a5d8, i32* %r0.global-to-local, align 4
  %v1_ab48 = load i32, i32* @r4, align 4
  %v9_ab48 = icmp eq i32 %v6_a5d8, %v1_ab48
  store i1 %v9_ab48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ab48, label %dec_label_pc_ab50, label %dec_label_pc_a9d8

dec_label_pc_ab50:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_a9cc
  %v0_ab50 = call i32 @function_db0c()
  store i32 %v0_ab50, i32* %r0.global-to-local, align 4
  %v0_ab54 = load i32, i32* @fp, align 4
  %v2_ab54 = icmp eq i32 %v0_ab54, 0
  store i1 %v2_ab54, i1* %cpsr_z.global-to-local, align 1
  %v1_ab58 = load i32, i32* @r6, align 4
  %v2_ab58 = add i32 %v1_ab58, 8
  %v3_ab58 = inttoptr i32 %v2_ab58 to i32*
  store i32 %v0_ab50, i32* %v3_ab58, align 4
  br i1 %v2_ab54, label %dec_label_pc_a9e0, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_a9d8, %dec_label_pc_ab50
  %v0_ab60 = call i32 @function_db0c()
  %v1_ab60 = trunc i32 %v0_ab60 to i16
  store i32 %v0_ab60, i32* %r0.global-to-local, align 4
  %v3_ab64 = load i32, i32* @r6, align 4
  %v4_ab64 = add i32 %v3_ab64, 18
  %v5_ab64 = inttoptr i32 %v4_ab64 to i16*
  store i16 %v1_ab60, i16* %v5_ab64, align 2
  br label %dec_label_pc_a9e0

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a9e0, %dec_label_pc_a970
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ab70 = call i32 @function_118d4(i32* null)
  store i32 %v2_ab70, i32* %r0.global-to-local, align 4
  store i32 %v2_a694, i32* %r3.global-to-local, align 4
  %v9_ab78 = icmp eq i32 %v2_a694, %v2_ab70
  store i1 %v9_ab78, i1* %cpsr_z.global-to-local, align 1
  %v6_ab7c = icmp slt i32 %v2_a694, %v2_ab70
  br i1 %v6_ab7c, label %dec_label_pc_ab80, label %dec_label_pc_ab6c.dec_label_pc_a970_crit_edge

dec_label_pc_ab6c.dec_label_pc_a970_crit_edge:    ; preds = %dec_label_pc_ab6c
  %v0_a974.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_a970

dec_label_pc_ab80:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a4c4, %dec_label_pc_ab8c
  %v1_ab88 = phi i32 [ %v3_a6a8, %dec_label_pc_a4c4 ], [ %v1_ab90, %dec_label_pc_ab8c ], [ %v2_ab70, %dec_label_pc_ab6c ]
  store i32 %v3_a4c4, i32* %r4.global-to-local, align 4
  store i32 %v24_a4c4, i32* %fp.global-to-local, align 4
  store i32 %v27_a4c4, i32* %lr.global-to-local, align 4
  ret i32 %v1_ab88

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8
  %v0_ab8c = load i32, i32* @r8, align 4
  store i32 %v0_ab8c, i32* %r0.global-to-local, align 4
  %v1_ab90 = call i32 @function_11c54(i32 %v0_ab8c)
  store i32 %v1_ab90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ab80

; uselistorder directives
  uselistorder i32 %v1_ab90, { 1, 0 }
  uselistorder i32 %v0_ab60, { 1, 0 }
  uselistorder i32 %v0_ab28, { 1, 0 }
  uselistorder i32 %v0_ab14, { 1, 0 }
  uselistorder i32 %v0_ab00, { 1, 0 }
  uselistorder i32 %v1_aaf4, { 1, 2, 0 }
  uselistorder i32 %v0_aa98, { 0, 2, 1, 3 }
  uselistorder i32 %v1_aa54, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_aa20, { 1, 0 }
  uselistorder i32 %v4_aa10, { 1, 0 }
  uselistorder i1 %v3_a9a0, { 1, 0 }
  uselistorder i1 %v7_a98c, { 2, 1, 0 }
  uselistorder i32 %v2_a960, { 1, 0, 2, 3 }
  uselistorder i32 %v0_a7c8, { 1, 2, 0 }
  uselistorder i32 %v1_a78c, { 2, 1, 0 }
  uselistorder i32 %v1_a788, { 2, 0, 1 }
  uselistorder i32 %v1_a784, { 2, 0, 1 }
  uselistorder i32 %v1_a780, { 2, 0, 1 }
  uselistorder i32 %v1_a77c, { 2, 0, 1 }
  uselistorder i32 %v3_a704, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_a700, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_a6f4, { 1, 0, 2 }
  uselistorder i1 %v7_a6d8, { 1, 0 }
  uselistorder i1 %v7_a6ac, { 1, 0 }
  uselistorder i32 %v3_a6a8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_a694, { 2, 1, 0 }
  uselistorder i32 %v6_a684, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_a5d8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a5c0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a54c, { 1, 0 }
  uselistorder i32 %v6_a544, { 1, 0 }
  uselistorder i32 %v7_a52c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ab80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab60, { 1, 0 }
  uselistorder label %dec_label_pc_a9e0, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_ab9c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ab9c:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_abc0 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_abcc = load i32, i32* @fp, align 4
  store i32 %v0_abcc, i32* %r0.global-to-local, align 4
  %v2_abd0 = call i32 @function_12fcc(i32 %v0_abcc, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_abdc = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_abd0, i32* @sb, align 4
  %v0_abec = load i32, i32* @r4, align 4
  store i32 %v0_abec, i32* %r0.global-to-local, align 4
  %v5_abf0 = inttoptr i32 %v0_abdc to i32*
  %v6_abf0 = call i32 @function_8258(i32 %v0_abec, i32* %v5_abf0, i32 7, i32 65535, i32 ptrtoint (i32* @0 to i32))
  %v0_abf4 = load i32, i32* @r5, align 4
  %v0_ac00 = load i32, i32* @r6, align 4
  store i32 %v0_ac00, i32* %r3.global-to-local, align 4
  %v0_ac04 = load i32, i32* @r4, align 4
  store i32 %v0_ac04, i32* %r0.global-to-local, align 4
  %v3_ac08 = urem i32 %v6_abf0, 65536
  store i32 %v3_ac08, i32* @r8, align 4
  %v5_ac0c = inttoptr i32 %v0_abf4 to i32*
  %v6_ac0c = call i32 @function_8258(i32 %v0_ac04, i32* %v5_ac0c, i32 6, i32 %v0_ac00, i32 ptrtoint (i32* @0 to i32))
  %v0_ac10 = load i32, i32* @r5, align 4
  %v3_ac14 = mul i32 %v6_ac0c, 65536
  store i32 %v3_ac14, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ac20 = load i32, i32* @r4, align 4
  store i32 %v0_ac20, i32* %r0.global-to-local, align 4
  %v5_ac24 = inttoptr i32 %v0_ac10 to i32*
  %v6_ac24 = call i32 @function_8258(i32 %v0_ac20, i32* %v5_ac24, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ac34 = urem i32 %v6_ac24, 65536
  %v0_ac38 = load i32, i32* @r5, align 4
  %v0_ac3c = load i32, i32* @r4, align 4
  store i32 %v0_ac3c, i32* %r0.global-to-local, align 4
  %v5_ac44 = inttoptr i32 %v0_ac38 to i32*
  %v6_ac44 = call i32 @function_8258(i32 %v0_ac3c, i32* %v5_ac44, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ac50 = urem i32 %v6_ac44, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ac6c = call i32 @function_118d4(i32* null)
  store i32 %v2_ac6c, i32* %r0.global-to-local, align 4
  %v0_ac70 = load i32, i32* @sl, align 4
  %v3_ac70 = udiv i32 %v0_ac70, 65536
  %v1_ac74 = load i32, i32* @r6, align 4
  %v9_ac74 = icmp eq i32 %v3_ac70, %v1_ac74
  br i1 %v9_ac74, label %dec_label_pc_ae48, label %bb

bb:                                               ; preds = %dec_label_pc_ab9c
  %v4_ac7c = udiv i32 %v0_ac70, 16777216
  store i32 %v4_ac7c, i32* %r3.global-to-local, align 4
  %v1_ac80 = load i32, i32* @r7, align 4
  %v2_ac80 = add i32 %v1_ac80, %v2_ac6c
  store i32 %v2_ac80, i32* %r0.global-to-local, align 4
  %v2_ac78 = mul nuw nsw i32 %v3_ac70, 256
  %v6_ac84 = or i32 %v2_ac78, %v4_ac7c
  %extract.t58 = trunc i32 %v6_ac84 to i16
  br label %dec_label_pc_ac94

dec_label_pc_ac94:                                ; preds = %bb, %dec_label_pc_ae48
  %v6_ac84.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_ae48 ]
  %v0_ac8810 = phi i32 [ %v2_ac80, %bb ], [ %v2_ac8013, %dec_label_pc_ae48 ]
  %v0_ac94 = load i32, i32* @fp, align 4
  %v2_ac94 = icmp eq i32 %v0_ac94, 0
  br i1 %v2_ac94, label %dec_label_pc_adcc, label %dec_label_pc_ac9c

dec_label_pc_ac9c:                                ; preds = %dec_label_pc_ac94
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_acc8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_ace8 = sext i16 %v6_ac84.sink.off0 to i32
  br label %dec_label_pc_ad1c

dec_label_pc_acac:                                ; preds = %.thread26, %dec_label_pc_ad58
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_acb8 = call i32 @function_12464(i32 2, i32 2, i32 17)
  store i32 %v3_acb8, i32* %r0.global-to-local, align 4
  %v7_acbc = icmp eq i32 %v3_acb8, -1
  %v0_acc0 = load i32, i32* @sl, align 4
  %v1_acc0 = add i32 %v0_acc0, 1
  store i32 %v1_acc0, i32* @sl, align 4
  %v0_acc4 = load i32, i32* @r7, align 4
  %v1_acc4 = add i32 %v0_acc4, 24
  store i32 %v1_acc4, i32* @r7, align 4
  %v1_acd0 = load i32, i32* @r6, align 4
  %v2_acd0 = load i32, i32* @sb, align 4
  %v3_acd0 = add i32 %v2_acd0, %v1_acd0
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v3_acb8, i32* %v4_acd0, align 4
  br i1 %v7_acbc, label %dec_label_pc_adf0.loopexit14, label %dec_label_pc_acd8

dec_label_pc_acd8:                                ; preds = %dec_label_pc_acac
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_ace8, i32* %r3.global-to-local, align 4
  %v0_acf0 = load i32, i32* %r0.global-to-local, align 4
  %v3_acf0 = call i32 @function_12214(i32 %v0_acf0, i32 %v2_acc8, i32 16)
  store i32 %v3_acf0, i32* %r0.global-to-local, align 4
  %v0_acf4 = load i32, i32* @r5, align 4
  %v1_acf4 = add i32 %v0_acf4, 20
  %v2_acf4 = inttoptr i32 %v1_acf4 to i8*
  %v3_acf4 = load i8, i8* %v2_acf4, align 1
  %v4_acf4 = zext i8 %v3_acf4 to i32
  store i32 %v4_acf4, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_acf4, 32
  br i1 %tmp, label %dec_label_pc_ad6c, label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_acd8
  %v0_ad00 = load i32, i32* @r6, align 4
  %v1_ad00 = load i32, i32* @sb, align 4
  %v2_ad00 = add i32 %v1_ad00, %v0_ad00
  %v3_ad00 = inttoptr i32 %v2_ad00 to i32*
  %v4_ad00 = load i32, i32* %v3_ad00, align 4
  store i32 %v4_ad00, i32* %r0.global-to-local, align 4
  %v3_ad0c = call i32 @function_1224c(i32 %v4_ad00, i32 %v0_acf4, i32 16)
  store i32 %v3_ad0c, i32* %r0.global-to-local, align 4
  %v0_ad10 = load i32, i32* @sl, align 4
  %v1_ad10 = load i32, i32* @fp, align 4
  %v9_ad10 = icmp eq i32 %v0_ad10, %v1_ad10
  %v0_ad14 = load i32, i32* @r6, align 4
  %v1_ad14 = add i32 %v0_ad14, 4
  store i32 %v1_ad14, i32* @r6, align 4
  br i1 %v9_ad10, label %dec_label_pc_adcc, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad00, %dec_label_pc_ac9c
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_ad2c = call i32 @function_12fcc(i32 65535, i32 1)
  store i32 %v2_ad2c, i32* %r0.global-to-local, align 4
  %v0_ad30 = load i32, i32* @r8, align 4
  %v3_ad34 = udiv i32 %v0_ad30, 256
  %v1_ad30 = mul i32 %v0_ad30, 256
  %v4_ad38 = and i32 %v1_ad30, 65280
  %v5_ad38 = or i32 %v4_ad38, %v3_ad34
  store i32 %v5_ad38, i32* %r3.global-to-local, align 4
  %v2_ad3c = load i32, i32* %stack_var_-80, align 4
  %v1_ad40 = load i32, i32* @r7, align 4
  %v2_ad40 = add i32 %v1_ad40, %v2_ad3c
  store i32 %v2_ad40, i32* @r5, align 4
  %v1_ad48 = load i32, i32* @r4, align 4
  %v9_ad48 = icmp eq i32 %v0_ad30, %v1_ad48
  %v1_ad4c = load i32, i32* @r6, align 4
  %v3_ad4c = add i32 %v1_ad4c, %v2_abc0
  %v4_ad4c = inttoptr i32 %v3_ad4c to i32*
  store i32 %v2_ad2c, i32* %v4_ad4c, align 4
  br i1 %v9_ad48, label %dec_label_pc_ad58, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_ad1c
  %v1_ad5027 = load i32, i32* %r3.global-to-local, align 4
  %v2_ad5028 = trunc i32 %v1_ad5027 to i16
  %v3_ad5029 = load i32, i32* @r5, align 4
  %v4_ad5030 = add i32 %v3_ad5029, 2
  %v5_ad5031 = inttoptr i32 %v4_ad5030 to i16*
  store i16 %v2_ad5028, i16* %v5_ad5031, align 2
  br label %dec_label_pc_acac

dec_label_pc_ad58:                                ; preds = %dec_label_pc_ad1c
  %v0_ad58 = call i32 @function_db0c()
  %v1_ad58 = trunc i32 %v0_ad58 to i16
  store i32 %v0_ad58, i32* %r0.global-to-local, align 4
  %v2_ad5c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_ad5c, i32* %r3.global-to-local, align 4
  %v1_ad60 = load i32, i32* @r7, align 4
  %v2_ad60 = add i32 %v1_ad60, %v2_ad5c
  store i32 %v2_ad60, i32* @r5, align 4
  %v4_ad64 = add i32 %v2_ad60, 2
  %v5_ad64 = inttoptr i32 %v4_ad64 to i16*
  store i16 %v1_ad58, i16* %v5_ad64, align 2
  br label %dec_label_pc_acac

dec_label_pc_ad6c:                                ; preds = %dec_label_pc_acd8
  %v1_ad6c = add i32 %v0_acf4, 16
  %v2_ad6c = inttoptr i32 %v1_ad6c to i32*
  %v3_ad6c = load i32, i32* %v2_ad6c, align 4
  store i32 %v3_ad6c, i32* @r4, align 4
  %v0_ad70 = call i32 @function_db0c()
  store i32 %v0_ad70, i32* %r0.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r4, align 4
  %v1_ad74 = and i32 %v0_ad74, 16711680
  %v3_ad78 = udiv i32 %v0_ad74, 16777216
  %v4_ad7c = udiv i32 %v1_ad74, 256
  %v5_ad7c = or i32 %v4_ad7c, %v3_ad78
  %v1_ad80 = and i32 %v0_ad74, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_ad80, i32* %r3.global-to-local, align 4
  %v0_ad84 = load i32, i32* @r5, align 4
  %v1_ad84 = add i32 %v0_ad84, 20
  %v2_ad84 = inttoptr i32 %v1_ad84 to i8*
  %v3_ad84 = load i8, i8* %v2_ad84, align 1
  %v4_ad84 = zext i8 %v3_ad84 to i32
  %v4_ad88 = mul i32 %v1_ad80, 256
  %v4_ad8c = mul i32 %v0_ad74, 16777216
  %v5_ad88 = or i32 %v4_ad88, %v4_ad8c
  %v5_ad8c = or i32 %v5_ad88, %v5_ad7c
  %v7_ad90 = lshr i32 %v0_ad70, %v4_ad84
  %v8_ad90 = add i32 %v7_ad90, %v5_ad8c
  %v1_ad94 = and i32 %v8_ad90, 16711680
  store i32 %v1_ad94, i32* %r0.global-to-local, align 4
  %v5_ada8 = call i32 @llvm.bswap.i32(i32 %v8_ad90)
  store i32 %v5_ada8, i32* %r3.global-to-local, align 4
  %v2_adac = add i32 %v0_ad84, 4
  %v3_adac = inttoptr i32 %v2_adac to i32*
  store i32 %v5_ada8, i32* %v3_adac, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v0_adb4 = load i32, i32* @r6, align 4
  %v1_adb4 = load i32, i32* @sb, align 4
  %v2_adb4 = add i32 %v1_adb4, %v0_adb4
  %v3_adb4 = inttoptr i32 %v2_adb4 to i32*
  %v4_adb4 = load i32, i32* %v3_adb4, align 4
  store i32 %v4_adb4, i32* %r0.global-to-local, align 4
  %v3_adbc = call i32 @function_1224c(i32 %v4_adb4, i32 %v0_adb0, i32 16)
  store i32 %v3_adbc, i32* %r0.global-to-local, align 4
  %v0_adc0 = load i32, i32* @sl, align 4
  %v1_adc0 = load i32, i32* @fp, align 4
  %v9_adc0 = icmp eq i32 %v0_adc0, %v1_adc0
  %v0_adc4 = load i32, i32* @r6, align 4
  %v1_adc4 = add i32 %v0_adc4, 4
  store i32 %v1_adc4, i32* @r6, align 4
  br i1 %v9_adc0, label %dec_label_pc_adcc, label %dec_label_pc_ad1c

dec_label_pc_adcc:                                ; preds = %dec_label_pc_ad6c, %dec_label_pc_ad00, %dec_label_pc_ac94
  %v1_add021 = phi i32 [ 0, %dec_label_pc_ac94 ], [ %v0_adc0, %dec_label_pc_ad6c ], [ %v0_ad10, %dec_label_pc_ad00 ]
  store i32 0, i32* @r5, align 4
  %v2_ae04 = icmp eq i32 %v1_ac50, 0
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_add0.backedge, %dec_label_pc_adcc
  %v1_add0 = phi i32 [ %v1_add0.pre, %dec_label_pc_add0.backedge ], [ %v1_add021, %dec_label_pc_adcc ]
  %v1_ae08 = phi i32 [ %v0_add019, %dec_label_pc_add0.backedge ], [ 0, %dec_label_pc_adcc ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_add8 = icmp slt i32 %v1_ae08, %v1_add0
  br i1 %v5_add8, label %dec_label_pc_adfc, label %dec_label_pc_addc

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v2_addc = call i32 @function_118d4(i32* null)
  store i32 %v2_addc, i32* %r0.global-to-local, align 4
  store i32 %v0_ac8810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_adec = icmp slt i32 %v0_ac8810, %v2_addc
  br i1 %v6_adec, label %dec_label_pc_adf0, label %dec_label_pc_add0.backedge

dec_label_pc_adf0.loopexit14:                     ; preds = %dec_label_pc_acac
  %v1_adf8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_adf0

dec_label_pc_adf0:                                ; preds = %dec_label_pc_addc, %dec_label_pc_adf0.loopexit14
  %v1_adf8 = phi i32 [ %v1_adf8.pre, %dec_label_pc_adf0.loopexit14 ], [ %v2_addc, %dec_label_pc_addc ]
  ret i32 %v1_adf8

dec_label_pc_adfc:                                ; preds = %dec_label_pc_add0
  store i32 %v2_abc0, i32* %r3.global-to-local, align 4
  %v4_ae08 = mul i32 %v1_ae08, 4
  %v5_ae08 = add i32 %v4_ae08, %v2_abc0
  %v6_ae08 = inttoptr i32 %v5_ae08 to i32*
  %v7_ae08 = load i32, i32* %v6_ae08, align 4
  store i32 %v7_ae08, i32* @r4, align 4
  br i1 %v2_ae04, label %dec_label_pc_ae10, label %dec_label_pc_ae2c

dec_label_pc_ae10:                                ; preds = %dec_label_pc_adfc, %dec_label_pc_ae2c
  %v0_ae14 = phi i32 [ %v7_ae08, %dec_label_pc_adfc ], [ %v0_ae14.pre, %dec_label_pc_ae2c ]
  %v1_ae10 = phi i32 [ %v1_ae08, %dec_label_pc_adfc ], [ %v1_ae10.pre, %dec_label_pc_ae2c ]
  %v0_ae10 = load i32, i32* @sb, align 4
  %v4_ae10 = mul i32 %v1_ae10, 4
  %v5_ae10 = add i32 %v4_ae10, %v0_ae10
  %v6_ae10 = inttoptr i32 %v5_ae10 to i32*
  %v7_ae10 = load i32, i32* %v6_ae10, align 4
  store i32 %v7_ae10, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ae20 = call i32 @function_123a8(i32 %v7_ae10, i32 %v0_ae14, i32 %v3_ac34, i32 16384)
  store i32 %v4_ae20, i32* %r0.global-to-local, align 4
  %v0_ae24 = load i32, i32* @r5, align 4
  %v1_ae24 = add i32 %v0_ae24, 1
  store i32 %v1_ae24, i32* @r5, align 4
  br label %dec_label_pc_add0.backedge

dec_label_pc_add0.backedge:                       ; preds = %dec_label_pc_ae10, %dec_label_pc_addc
  %v0_add019 = phi i32 [ %v1_ae24, %dec_label_pc_ae10 ], [ 0, %dec_label_pc_addc ]
  %v1_add0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_add0

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_adfc
  store i32 %v7_ae08, i32* %r0.global-to-local, align 4
  %v2_ae34 = call i32 @function_dbd0(i32 %v7_ae08, i32 %v3_ac34)
  store i32 %v2_ae34, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ae40 = load i32, i32* @r4, align 4
  %v4_ae40 = add i32 %v3_ae40, %v3_ac34
  %v5_ae40 = inttoptr i32 %v4_ae40 to i8*
  store i8 0, i8* %v5_ae40, align 1
  %v1_ae10.pre = load i32, i32* @r5, align 4
  %v0_ae14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ae10

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ab9c
  %v1_ac8012 = load i32, i32* @r7, align 4
  %v2_ac8013 = add i32 %v1_ac8012, %v2_ac6c
  store i32 %v2_ac8013, i32* %r0.global-to-local, align 4
  %v0_ae48 = call i32 @function_db0c()
  %v3_ae50 = urem i32 %v0_ae48, 65536
  store i32 %v3_ae50, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_ae48 to i16
  br label %dec_label_pc_ac94

; uselistorder directives
  uselistorder i32 %v0_ae48, { 1, 0 }
  uselistorder i32 %v2_ac8013, { 1, 0 }
  uselistorder i32 %v7_ae08, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ada8, { 1, 0 }
  uselistorder i32 %v0_ad74, { 0, 2, 1, 3 }
  uselistorder i32 %v0_ad58, { 1, 0 }
  uselistorder i32 %v0_ad30, { 2, 0, 1 }
  uselistorder i32 %v3_acb8, { 1, 0, 2 }
  uselistorder i32 %v0_ac8810, { 1, 0 }
  uselistorder i32 %v4_ac7c, { 1, 0 }
  uselistorder i32 %v3_ac34, { 2, 1, 0 }
  uselistorder i32 %v2_abc0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 1, 6, 19, 8, 7, 11, 9, 10, 12, 13, 23, 21, 15, 14, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ae10, { 1, 0 }
  uselistorder label %dec_label_pc_adf0, { 1, 0 }
  uselistorder label %dec_label_pc_acac, { 1, 0 }
  uselistorder label %dec_label_pc_ac94, { 1, 0 }
}

define i32 @function_ae5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ae5c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_ae5c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ae88 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_ae8c = load i32, i32* @r4, align 4
  store i32 %v0_ae8c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ae98 = load i32, i32* @r8, align 4
  store i32 %v0_ae98, i32* %r3.global-to-local, align 4
  %v0_ae9c = load i32, i32* @r5, align 4
  store i32 %v0_ae9c, i32* %r0.global-to-local, align 4
  %v5_aea0 = inttoptr i32 %v0_ae8c to i32*
  %v6_aea0 = call i32 @function_8258(i32 %v0_ae9c, i32* %v5_aea0, i32 2, i32 %v0_ae98, i32 %v2_ae88)
  %v1_aeac = urem i32 %v6_aea0, 256
  store i32 %v1_aeac, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_aeb8 = load i32, i32* @r4, align 4
  store i32 %v0_aeb8, i32* %r1.global-to-local, align 4
  %v0_aebc = load i32, i32* @r5, align 4
  store i32 %v0_aebc, i32* %r0.global-to-local, align 4
  %v5_aec0 = trunc i32 %v6_aea0 to i8
  %v6_aec4 = inttoptr i32 %v0_aeb8 to i32*
  %v7_aec4 = call i32 @function_8258(i32 %v0_aebc, i32* %v6_aec4, i32 3, i32 65535, i32 %v6_aea0)
  %v0_aec8 = load i32, i32* @r4, align 4
  store i32 %v0_aec8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_aed8 = load i32, i32* @r5, align 4
  store i32 %v0_aed8, i32* %r0.global-to-local, align 4
  %v5_aedc = inttoptr i32 %v0_aec8 to i32*
  %v6_aedc = call i32 @function_8258(i32 %v0_aed8, i32* %v5_aedc, i32 4, i32 64, i32 %v7_aec4)
  %v1_aee4 = urem i32 %v6_aedc, 256
  store i32 %v1_aee4, i32* %ip.global-to-local, align 4
  %v0_aee8 = load i32, i32* @r4, align 4
  store i32 %v0_aee8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  store i32 %v0_aef0, i32* %r3.global-to-local, align 4
  %v0_aef4 = load i32, i32* @r5, align 4
  store i32 %v0_aef4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_aedc, 16777216
  %v5_aefc = sdiv i32 %sext, 16777216
  %v6_aefc = inttoptr i32 %v0_aee8 to i32*
  %v7_aefc = call i32 @function_8258(i32 %v0_aef4, i32* %v6_aefc, i32 5, i32 %v0_aef0, i32 %v5_aefc)
  %v1_af08 = urem i32 %v7_aefc, 256
  store i32 %v1_af08, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_af14 = load i32, i32* @r4, align 4
  store i32 %v0_af14, i32* %r1.global-to-local, align 4
  %v0_af18 = load i32, i32* @r5, align 4
  store i32 %v0_af18, i32* %r0.global-to-local, align 4
  %v5_af20 = inttoptr i32 %v0_af14 to i32*
  %v6_af20 = call i32 @function_8258(i32 %v0_af18, i32* %v5_af20, i32 6, i32 65535, i32 %v1_af08)
  %v0_af2c = load i32, i32* @r4, align 4
  store i32 %v0_af2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_af38 = load i32, i32* @r5, align 4
  store i32 %v0_af38, i32* %r0.global-to-local, align 4
  %v5_af3c = inttoptr i32 %v0_af2c to i32*
  %v6_af3c = call i32 @function_8258(i32 %v0_af38, i32* %v5_af3c, i32 7, i32 65535, i32 %v6_af20)
  %v0_af40 = load i32, i32* @r4, align 4
  store i32 %v0_af40, i32* %r1.global-to-local, align 4
  %v0_af48 = load i32, i32* @r8, align 4
  store i32 %v0_af48, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_af50 = load i32, i32* @r5, align 4
  store i32 %v0_af50, i32* %r0.global-to-local, align 4
  %v5_af54 = inttoptr i32 %v0_af40 to i32*
  %v6_af54 = call i32 @function_8258(i32 %v0_af50, i32* %v5_af54, i32 %v0_af48, i32 512, i32 %v6_af3c)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_af60 = load i32, i32* @r4, align 4
  store i32 %v0_af60, i32* %r1.global-to-local, align 4
  store i32 %v6_af54, i32* @sl, align 4
  %v0_af68 = load i32, i32* @r5, align 4
  store i32 %v0_af68, i32* %r0.global-to-local, align 4
  %v5_af6c = inttoptr i32 %v0_af60 to i32*
  %v6_af6c = call i32 @function_8258(i32 %v0_af68, i32* %v5_af6c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_af78 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_af78, i32* %r3.global-to-local, align 4
  %v1_af7c = urem i32 %v6_af6c, 256
  store i32 %v1_af7c, i32* %ip.global-to-local, align 4
  %v0_af80 = load i32, i32* @r4, align 4
  store i32 %v0_af80, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_af88 = load i32, i32* @r5, align 4
  store i32 %v0_af88, i32* %r0.global-to-local, align 4
  %v5_af90 = inttoptr i32 %v0_af80 to i32*
  %v6_af90 = call i32 @function_8258(i32 %v0_af88, i32* %v5_af90, i32 19, i32 %v2_af78, i32 %v1_af7c)
  store i32 %v6_af90, i32* @sb, align 4
  %v0_af98 = load i32, i32* @r8, align 4
  store i32 %v0_af98, i32* %r0.global-to-local, align 4
  %v1_af9c = inttoptr i32 %v0_af98 to i32*
  %v2_af9c = call i32 @function_118d4(i32* %v1_af9c)
  %v1_afa0 = load i32, i32* @r6, align 4
  %v2_afa0 = add i32 %v1_afa0, %v2_af9c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_afb4 = call i32 @function_12464(i32 2, i32 3, i32 17)
  store i32 %v3_afb4, i32* %r0.global-to-local, align 4
  %v7_afb8 = icmp eq i32 %v3_afb4, -1
  store i32 %v3_afb4, i32* @fp, align 4
  br i1 %v7_afb8, label %dec_label_pc_b40c, label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %dec_label_pc_ae5c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_afcc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_afcc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_afd4 = load i32, i32* @r8, align 4
  store i32 %v0_afd4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_afe0 = call i32 @function_12420(i32 %v3_afb4, i32 %v0_afd4, i32 3, i32 %v6_afcc, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_afe0, i32* %r0.global-to-local, align 4
  %v7_afe4 = icmp eq i32 %v5_afe0, -1
  br i1 %v7_afe4, label %dec_label_pc_b418, label %dec_label_pc_afec

dec_label_pc_afec:                                ; preds = %dec_label_pc_afc4
  %v0_afec = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_aff8 = urem i32 %v0_afec, 65536
  %v3_affc = icmp ugt i32 %v3_aff8, 1459
  br i1 %v3_affc, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_afec
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_afec, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_aff8, %dec_label_pc_afec ]
  %v0_b008 = phi i32 [ 1460, %bb ], [ %v3_aff8, %dec_label_pc_afec ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_af20, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_b01c = mul i32 %v6_af3c, 65536
  store i32 %v3_b01c, i32* %r2.global-to-local, align 4
  %v3_b024 = urem i32 %v7_aec4, 65536
  %v3_b028 = urem i32 %v6_af20, 65536
  store i32 %v3_b028, i32* %ip.global-to-local, align 4
  %v3_b02c = urem i32 %v6_af3c, 65536
  store i32 %v3_b02c, i32* %r0.global-to-local, align 4
  %v2_b030 = icmp eq i32 %arg2, 0
  %v0_b038 = load i32, i32* @r8, align 4
  store i32 %v0_b038, i32* %stack_var_-44, align 4
  br i1 %v2_b030, label %.dec_label_pc_b164.preheader_crit_edge, label %dec_label_pc_b04c

.dec_label_pc_b164.preheader_crit_edge:           ; preds = %bb41
  %.pre = add nuw nsw i32 %v0_b008, 8
  %.pre10 = add nuw nsw i32 %v0_b008, 28
  br label %dec_label_pc_b164.preheader

dec_label_pc_b04c:                                ; preds = %bb41
  %v1_b054 = add nuw nsw i32 %v0_b008, 28
  %v1_b058 = add nuw nsw i32 %v0_b008, 8
  %tmp42 = mul nuw nsw i32 %v3_b028, 256
  %v3_b068 = and i32 %tmp42, 65280
  %v3_b070 = mul i32 %v1_b054, 65536
  store i32 %v3_b070, i32* @lr, align 4
  %tmp43 = udiv i32 %v6_af20, 256
  %v4_b078 = urem i32 %tmp43, 256
  %v5_b078 = or i32 %v3_b068, %v4_b078
  store i32 %v5_b078, i32* @sl, align 4
  store i32 %v3_b01c, i32* %r1.global-to-local, align 4
  %tmp44 = mul i32 %v6_af3c, 256
  %v3_b090 = and i32 %tmp44, 65280
  %v2_b094 = icmp eq i32 %v1_af08, 0
  %tmp45 = mul nuw nsw i32 %v1_b054, 256
  %v3_b098 = and i32 %tmp45, 65280
  store i32 %v3_b098, i32* %r3.global-to-local, align 4
  %tmp46 = mul i32 %v7_aec4, 256
  %v3_b09c = and i32 %tmp46, 65280
  store i32 %v3_b09c, i32* %r2.global-to-local, align 4
  %tmp47 = mul nuw nsw i32 %v1_b058, 256
  %v3_b0a0 = and i32 %tmp47, 65280
  store i32 %v3_b0a0, i32* %ip.global-to-local, align 4
  %tmp48 = udiv i32 %v6_af3c, 256
  %v4_b0a4 = urem i32 %tmp48, 256
  %v5_b0a4 = or i32 %v4_b0a4, %v3_b090
  store i32 %v5_b0a4, i32* %r0.global-to-local, align 4
  %tmp49 = udiv i32 %v7_aec4, 256
  %v4_b0a8 = urem i32 %tmp49, 256
  %v5_b0a8 = or i32 %v4_b0a8, %v3_b09c
  store i32 %v5_b0a8, i32* @r8, align 4
  %tmp50 = udiv i32 %v1_b054, 256
  %v4_b0ac = urem i32 %tmp50, 256
  %v5_b0ac = or i32 %v4_b0ac, %v3_b098
  store i32 %v5_b0ac, i32* @r6, align 4
  %tmp51 = udiv i32 %v1_b058, 256
  %v4_b0b0 = urem i32 %tmp51, 256
  %v5_b0b0 = or i32 %v4_b0b0, %v3_b0a0
  store i32 %v5_b0b0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext11 = mul nuw i32 %v5_b0a4, 65536
  %v4_b138 = sdiv i32 %sext11, 65536
  %v1_b11c = trunc i32 %v5_aefc to i8
  br i1 %v2_b094, label %dec_label_pc_b0c0, label %dec_label_pc_b34c

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b04c, %dec_label_pc_b0c0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b0cc = call i32 @function_12fcc(i32 1510, i32 1)
  store i32 %v2_b0cc, i32* %r0.global-to-local, align 4
  store i32 %v2_ae88, i32* %r2.global-to-local, align 4
  %v2_b0d8 = load i32, i32* @r4, align 4
  %v5_b0d8 = mul i32 %v2_b0d8, 4
  %v6_b0d8 = add i32 %v5_b0d8, %v2_ae88
  %v7_b0d8 = inttoptr i32 %v6_b0d8 to i32*
  store i32 %v2_b0cc, i32* %v7_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b0dc, i32* %r1.global-to-local, align 4
  %v0_b0e0 = load i32, i32* %r2.global-to-local, align 4
  %v4_b0e0 = mul i32 %v3_b0dc, 4
  %v5_b0e0 = add i32 %v0_b0e0, %v4_b0e0
  %v6_b0e0 = inttoptr i32 %v5_b0e0 to i32*
  %v7_b0e0 = load i32, i32* %v6_b0e0, align 4
  store i32 %v7_b0e0, i32* %r3.global-to-local, align 4
  %v1_b0e4 = inttoptr i32 %v7_b0e0 to i8*
  %v2_b0e4 = load i8, i8* %v1_b0e4, align 1
  %tmp = urem i8 %v2_b0e4, 16
  %v1_b0e8 = zext i8 %tmp to i32
  %v1_b0ec = or i32 %v1_b0e8, 64
  store i32 %v1_b0ec, i32* %r2.global-to-local, align 4
  %v1_b0f0 = trunc i32 %v1_b0ec to i8
  store i8 %v1_b0f0, i8* %v1_b0e4, align 1
  %v0_b0f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b0f4 = inttoptr i32 %v0_b0f4 to i8*
  %v2_b0f4 = load i8, i8* %v1_b0f4, align 1
  %v1_b0f8 = and i8 %v2_b0f4, -16
  %v1_b0fc = or i8 %v1_b0f8, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b0fc, i8* %v1_b0f4, align 1
  %v0_b108 = load i32, i32* %ip.global-to-local, align 4
  %v1_b108 = trunc i32 %v0_b108 to i8
  %v2_b108 = load i32, i32* %r3.global-to-local, align 4
  %v3_b108 = add i32 %v2_b108, 9
  %v4_b108 = inttoptr i32 %v3_b108 to i8*
  store i8 %v1_b108, i8* %v4_b108, align 1
  %v2_b110 = load i32, i32* %r3.global-to-local, align 4
  %v3_b110 = add i32 %v2_b110, 1
  %v4_b110 = inttoptr i32 %v3_b110 to i8*
  store i8 %v5_aec0, i8* %v4_b110, align 1
  %v0_b118 = load i32, i32* %r1.global-to-local, align 4
  %v3_b118 = mul i32 %v0_b118, 32
  store i32 %v3_b118, i32* %r0.global-to-local, align 4
  %v2_b11c = load i32, i32* %r3.global-to-local, align 4
  %v3_b11c = add i32 %v2_b11c, 8
  %v4_b11c = inttoptr i32 %v3_b11c to i8*
  store i8 %v1_b11c, i8* %v4_b11c, align 1
  %v0_b120 = load i32, i32* @sb, align 4
  %v1_b120 = load i32, i32* %r3.global-to-local, align 4
  %v2_b120 = add i32 %v1_b120, 12
  %v3_b120 = inttoptr i32 %v2_b120 to i32*
  store i32 %v0_b120, i32* %v3_b120, align 4
  %v0_b124 = load i32, i32* %r0.global-to-local, align 4
  %v1_b124 = load i32, i32* %r1.global-to-local, align 4
  %tmp53 = mul i32 %v1_b124, -8
  %v5_b124 = add i32 %v0_b124, %tmp53
  %v1_b128 = load i32, i32* @r7, align 4
  %v2_b128 = add i32 %v5_b124, %v1_b128
  store i32 %v2_b128, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_b130 = add i32 %v1_b124, 1
  store i32 %v1_b130, i32* @r4, align 4
  %v1_b134 = add i32 %v2_b128, 16
  %v2_b134 = inttoptr i32 %v1_b134 to i32*
  %v3_b134 = load i32, i32* %v2_b134, align 4
  store i32 %v3_b134, i32* %r2.global-to-local, align 4
  store i32 %v4_b138, i32* %r0.global-to-local, align 4
  %v0_b13c = load i32, i32* %r3.global-to-local, align 4
  %v1_b13c = add i32 %v0_b13c, 20
  store i32 %v1_b13c, i32* %r1.global-to-local, align 4
  %v0_b144 = load i32, i32* @r6, align 4
  %v1_b144 = trunc i32 %v0_b144 to i16
  %v3_b144 = add i32 %v0_b13c, 2
  %v4_b144 = inttoptr i32 %v3_b144 to i16*
  store i16 %v1_b144, i16* %v4_b144, align 2
  %v0_b148 = load i32, i32* @r8, align 4
  %v1_b148 = trunc i32 %v0_b148 to i16
  %v2_b148 = load i32, i32* %r3.global-to-local, align 4
  %v3_b148 = add i32 %v2_b148, 4
  %v4_b148 = inttoptr i32 %v3_b148 to i16*
  store i16 %v1_b148, i16* %v4_b148, align 2
  %v0_b14c = load i32, i32* %r2.global-to-local, align 4
  %v1_b14c = load i32, i32* %r3.global-to-local, align 4
  %v2_b14c = add i32 %v1_b14c, 16
  %v3_b14c = inttoptr i32 %v2_b14c to i32*
  store i32 %v0_b14c, i32* %v3_b14c, align 4
  %v0_b150 = load i32, i32* @sl, align 4
  %v1_b150 = trunc i32 %v0_b150 to i16
  %v2_b150 = load i32, i32* %r3.global-to-local, align 4
  %v3_b150 = add i32 %v2_b150, 20
  %v4_b150 = inttoptr i32 %v3_b150 to i16*
  store i16 %v1_b150, i16* %v4_b150, align 2
  %v0_b154 = load i32, i32* @r5, align 4
  %v1_b154 = trunc i32 %v0_b154 to i16
  %v2_b154 = load i32, i32* %r1.global-to-local, align 4
  %v3_b154 = add i32 %v2_b154, 4
  %v4_b154 = inttoptr i32 %v3_b154 to i16*
  store i16 %v1_b154, i16* %v4_b154, align 2
  %v0_b158 = load i32, i32* %r0.global-to-local, align 4
  %v1_b158 = trunc i32 %v0_b158 to i16
  %v2_b158 = load i32, i32* %r1.global-to-local, align 4
  %v3_b158 = add i32 %v2_b158, 2
  %v4_b158 = inttoptr i32 %v3_b158 to i16*
  store i16 %v1_b158, i16* %v4_b158, align 2
  %v0_b15c = load i32, i32* @r4, align 4
  store i32 %v0_b15c, i32* %stack_var_-44, align 4
  %v5_b160 = icmp slt i32 %v1_b130, %arg2
  br i1 %v5_b160, label %dec_label_pc_b0c0, label %dec_label_pc_b164.preheader

dec_label_pc_b164.preheader:                      ; preds = %dec_label_pc_b34c, %dec_label_pc_b0c0, %.dec_label_pc_b164.preheader_crit_edge
  %v1_b184.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_b164.preheader_crit_edge ], [ %v1_b054, %dec_label_pc_b0c0 ], [ %v1_b054, %dec_label_pc_b34c ]
  %v1_b180.pre-phi = phi i32 [ %.pre, %.dec_label_pc_b164.preheader_crit_edge ], [ %v1_b058, %dec_label_pc_b0c0 ], [ %v1_b058, %dec_label_pc_b34c ]
  %v3_b2e4 = icmp eq i32 %v3_b024, 65535
  %v2_b320 = icmp eq i32 %v1_af7c, 0
  br label %dec_label_pc_b164

dec_label_pc_b164:                                ; preds = %dec_label_pc_b164.preheader, %dec_label_pc_b3f8
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b030, label %dec_label_pc_b3f8, label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b164
  store i32 %v0_b008, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b180.pre-phi, i32* @sl, align 4
  store i32 %v1_b184.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_b254

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b254
  %v0_b18c = load i32, i32* @sb, align 4
  %v7_b18c = icmp eq i32 %v0_b18c, -1
  br i1 %v7_b18c, label %dec_label_pc_b2d4, label %dec_label_pc_b194

dec_label_pc_b194:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b18c
  store i32 %v3_b024, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_b2e4, label %dec_label_pc_b2f0, label %dec_label_pc_b1a8

dec_label_pc_b1a8:                                ; preds = %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge, %dec_label_pc_b194
  %v1_b1ac = phi i32 [ %v1_b1ac.pre, %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge ], [ 65535, %dec_label_pc_b194 ]
  store i32 %v3_b028, i32* %r0.global-to-local, align 4
  %v9_b1ac = icmp eq i32 %v3_b028, %v1_b1ac
  br i1 %v9_b1ac, label %dec_label_pc_b304, label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b2f0, %dec_label_pc_b1a8
  %v1_b1b8 = phi i32 [ %v1_b2fc, %dec_label_pc_b2f0 ], [ %v1_b1ac, %dec_label_pc_b1a8 ]
  store i32 %v3_b02c, i32* %r1.global-to-local, align 4
  %v9_b1b8 = icmp eq i32 %v3_b02c, %v1_b1b8
  br i1 %v9_b1b8, label %dec_label_pc_b318, label %dec_label_pc_b1c0

dec_label_pc_b1c0:                                ; preds = %dec_label_pc_b304, %dec_label_pc_b1b4
  store i32 %v1_af7c, i32* %r2.global-to-local, align 4
  br i1 %v2_b320, label %dec_label_pc_b1cc, label %dec_label_pc_b32c

dec_label_pc_b1cc:                                ; preds = %dec_label_pc_b1c0, %dec_label_pc_b318, %dec_label_pc_b32c
  %v2_b1d0 = load i32, i32* @r5, align 4
  %v3_b1d0 = add i32 %v2_b1d0, 10
  %v4_b1d0 = inttoptr i32 %v3_b1d0 to i16*
  store i16 0, i16* %v4_b1d0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1d8 = load i32, i32* @r5, align 4
  store i32 %v0_b1d8, i32* @r0, align 4
  %v2_b1dc = call i32 @function_bf78(i32 %v0_b1d8, i32 20)
  %v3_b1dc = trunc i32 %v2_b1dc to i16
  store i32 %v2_b1dc, i32* %r0.global-to-local, align 4
  %v3_b1e0 = load i32, i32* @r5, align 4
  %v4_b1e0 = add i32 %v3_b1e0, 10
  %v5_b1e0 = inttoptr i32 %v4_b1e0 to i16*
  store i16 %v3_b1dc, i16* %v5_b1e0, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b1e8 = load i32, i32* @r6, align 4
  %v3_b1e8 = add i32 %v2_b1e8, 6
  %v4_b1e8 = inttoptr i32 %v3_b1e8 to i16*
  store i16 0, i16* %v4_b1e8, align 2
  %v0_b1ec = load i32, i32* @r6, align 4
  %v1_b1ec = add i32 %v0_b1ec, 4
  %v2_b1ec = inttoptr i32 %v1_b1ec to i16*
  %v3_b1ec = load i16, i16* %v2_b1ec, align 2
  %v4_b1ec = zext i16 %v3_b1ec to i32
  store i32 %v4_b1ec, i32* %r2.global-to-local, align 4
  store i32 %v0_b1ec, i32* @r1, align 4
  %v0_b1f4 = load i32, i32* @sl, align 4
  store i32 %v0_b1f4, i32* %r3.global-to-local, align 4
  %v0_b1f8 = load i32, i32* @r5, align 4
  store i32 %v0_b1f8, i32* %r0.global-to-local, align 4
  %v4_b1fc = call i32 @function_bfc8(i32 %v0_b1f8, i32 %v0_b1ec, i32 %v4_b1ec, i32 %v0_b1f4)
  %v5_b1fc = trunc i32 %v4_b1fc to i16
  store i32 %v4_b1fc, i32* %r0.global-to-local, align 4
  %v3_b200 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b200, i32* %r3.global-to-local, align 4
  %v3_b204 = mul i32 %v3_b200, 32
  store i32 %v3_b204, i32* %lr.global-to-local, align 4
  %v3_b208 = load i32, i32* @r6, align 4
  %v4_b208 = add i32 %v3_b208, 6
  %v5_b208 = inttoptr i32 %v4_b208 to i16*
  store i16 %v5_b1fc, i16* %v5_b208, align 2
  %v0_b20c = load i32, i32* %lr.global-to-local, align 4
  %v1_b20c = load i32, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v1_b20c, -8
  %v5_b20c = add i32 %v0_b20c, %tmp54
  store i32 %v5_b20c, i32* %lr.global-to-local, align 4
  %v0_b210 = load i32, i32* @r6, align 4
  %v1_b210 = add i32 %v0_b210, 2
  %v2_b210 = inttoptr i32 %v1_b210 to i16*
  %v3_b210 = load i16, i16* %v2_b210, align 2
  %v1_b214 = load i32, i32* @r7, align 4
  %v2_b214 = add i32 %v1_b214, %v5_b20c
  store i32 %v2_b214, i32* @lr, align 4
  %v3_b218 = add i32 %v2_b214, 2
  %v4_b218 = inttoptr i32 %v3_b218 to i16*
  store i16 %v3_b210, i16* %v4_b218, align 2
  %v0_b21c = load i32, i32* @r8, align 4
  store i32 %v0_b21c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b228 = load i32, i32* @r5, align 4
  store i32 %v0_b228, i32* %r1.global-to-local, align 4
  %v0_b22c = load i32, i32* @fp, align 4
  store i32 %v0_b22c, i32* %r0.global-to-local, align 4
  %v0_b230 = load i32, i32* @lr, align 4
  %v6_b238 = call i32 @function_123e0(i32 %v0_b22c, i32 %v0_b228, i32 %v0_b21c, i32 16384, i32 %v0_b230, i32 16)
  %v3_b23c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b23c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_b244 = add i32 %v3_b23c, 1
  store i32 %v1_b244, i32* %r0.global-to-local, align 4
  store i32 %v1_b244, i32* %stack_var_-44, align 4
  %v6_b250 = icmp slt i32 %v1_b244, %arg2
  br i1 %v6_b250, label %dec_label_pc_b254, label %dec_label_pc_b3f8

dec_label_pc_b254:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b178
  %v1_b268 = phi i32 [ %v1_b244, %dec_label_pc_b1cc ], [ 0, %dec_label_pc_b178 ]
  %v5_b258 = mul i32 %v1_b268, 24
  %v1_b260 = load i32, i32* @r7, align 4
  %v2_b260 = add i32 %v1_b260, %v5_b258
  store i32 %v2_b260, i32* %r3.global-to-local, align 4
  %v1_b264 = add i32 %v2_b260, 20
  %v2_b264 = inttoptr i32 %v1_b264 to i8*
  %v3_b264 = load i8, i8* %v2_b264, align 1
  %v4_b264 = zext i8 %v3_b264 to i32
  store i32 %v4_b264, i32* %r2.global-to-local, align 4
  %v4_b268 = mul i32 %v1_b268, 4
  %v5_b268 = add i32 %v4_b268, %v2_ae88
  %v6_b268 = inttoptr i32 %v5_b268 to i32*
  %v7_b268 = load i32, i32* %v6_b268, align 4
  store i32 %v7_b268, i32* @r5, align 4
  %v1_b270 = add i32 %v7_b268, 20
  store i32 %v1_b270, i32* @r6, align 4
  %tmp55 = icmp ugt i8 %v3_b264, 31
  br i1 %tmp55, label %dec_label_pc_b18c, label %dec_label_pc_b278

dec_label_pc_b278:                                ; preds = %dec_label_pc_b254
  %v1_b278 = add i32 %v2_b260, 16
  %v2_b278 = inttoptr i32 %v1_b278 to i32*
  %v3_b278 = load i32, i32* %v2_b278, align 4
  %v0_b27c = call i32 @function_db0c()
  store i32 %v0_b27c, i32* %r0.global-to-local, align 4
  %v3_b280 = load i32, i32* %stack_var_-44, align 4
  %v5_b288 = mul i32 %v3_b280, 24
  %v1_b28c = and i32 %v3_b278, 16711680
  store i32 %v1_b28c, i32* %ip.global-to-local, align 4
  %v3_b290 = udiv i32 %v3_b278, 16777216
  %v4_b294 = udiv i32 %v1_b28c, 256
  %v5_b294 = or i32 %v4_b294, %v3_b290
  store i32 %v5_b294, i32* %r2.global-to-local, align 4
  %v1_b298 = load i32, i32* @r7, align 4
  %v2_b298 = add i32 %v1_b298, %v5_b288
  store i32 %v2_b298, i32* %r1.global-to-local, align 4
  %v1_b29c = and i32 %v3_b278, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_b29c, i32* %r3.global-to-local, align 4
  %v1_b2a0 = add i32 %v2_b298, 20
  %v2_b2a0 = inttoptr i32 %v1_b2a0 to i8*
  %v3_b2a0 = load i8, i8* %v2_b2a0, align 1
  %v4_b2a0 = zext i8 %v3_b2a0 to i32
  store i32 %v4_b2a0, i32* %ip.global-to-local, align 4
  %v4_b2a4 = mul i32 %v1_b29c, 256
  %v4_b2a8 = mul i32 %v3_b278, 16777216
  %v5_b2a4 = or i32 %v4_b2a4, %v4_b2a8
  %v5_b2a8 = or i32 %v5_b2a4, %v5_b294
  %v7_b2ac = lshr i32 %v0_b27c, %v4_b2a0
  %v8_b2ac = add i32 %v7_b2ac, %v5_b2a8
  store i32 %v8_b2ac, i32* %r2.global-to-local, align 4
  %v1_b2b0 = and i32 %v8_b2ac, 16711680
  store i32 %v1_b2b0, i32* %r0.global-to-local, align 4
  %v1_b2bc = and i32 %v8_b2ac, 65280
  store i32 %v1_b2bc, i32* %r1.global-to-local, align 4
  %v5_b2c4 = call i32 @llvm.bswap.i32(i32 %v8_b2ac)
  store i32 %v5_b2c4, i32* %r3.global-to-local, align 4
  %v0_b2c8 = load i32, i32* @sb, align 4
  %v3_b2c8 = icmp eq i32 %v0_b2c8, -1
  %v1_b2cc = load i32, i32* @r5, align 4
  %v2_b2cc = add i32 %v1_b2cc, 16
  %v3_b2cc = inttoptr i32 %v2_b2cc to i32*
  store i32 %v5_b2c4, i32* %v3_b2cc, align 4
  br i1 %v3_b2c8, label %dec_label_pc_b2d4, label %dec_label_pc_b194

dec_label_pc_b2d4:                                ; preds = %dec_label_pc_b278, %dec_label_pc_b18c
  %v0_b2d4 = call i32 @function_db0c()
  store i32 %v0_b2d4, i32* %r0.global-to-local, align 4
  store i32 %v3_b024, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_b2e8 = load i32, i32* @r5, align 4
  %v2_b2e8 = add i32 %v1_b2e8, 12
  %v3_b2e8 = inttoptr i32 %v2_b2e8 to i32*
  store i32 %v0_b2d4, i32* %v3_b2e8, align 4
  br i1 %v3_b2e4, label %dec_label_pc_b2f0, label %dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge

dec_label_pc_b2d4.dec_label_pc_b1a8_crit_edge:    ; preds = %dec_label_pc_b2d4
  %v1_b1ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b1a8

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2d4, %dec_label_pc_b194
  %v0_b2f0 = call i32 @function_db0c()
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v3_b2f4 = load i32, i32* @r5, align 4
  %v4_b2f4 = add i32 %v3_b2f4, 4
  %v5_b2f4 = inttoptr i32 %v4_b2f4 to i16*
  store i16 %v1_b2f0, i16* %v5_b2f4, align 2
  store i32 %v3_b028, i32* %r0.global-to-local, align 4
  %v1_b2fc = load i32, i32* @r4, align 4
  %v9_b2fc = icmp eq i32 %v3_b028, %v1_b2fc
  br i1 %v9_b2fc, label %dec_label_pc_b304, label %dec_label_pc_b1b4

dec_label_pc_b304:                                ; preds = %dec_label_pc_b2f0, %dec_label_pc_b1a8
  %v0_b304 = call i32 @function_db0c()
  %v1_b304 = trunc i32 %v0_b304 to i16
  store i32 %v0_b304, i32* %r0.global-to-local, align 4
  store i32 %v3_b02c, i32* %r1.global-to-local, align 4
  %v1_b30c = load i32, i32* @r4, align 4
  %v9_b30c = icmp eq i32 %v3_b02c, %v1_b30c
  %v3_b310 = load i32, i32* @r5, align 4
  %v4_b310 = add i32 %v3_b310, 20
  %v5_b310 = inttoptr i32 %v4_b310 to i16*
  store i16 %v1_b304, i16* %v5_b310, align 2
  br i1 %v9_b30c, label %dec_label_pc_b318, label %dec_label_pc_b1c0

dec_label_pc_b318:                                ; preds = %dec_label_pc_b304, %dec_label_pc_b1b4
  %v0_b318 = call i32 @function_db0c()
  %v1_b318 = trunc i32 %v0_b318 to i16
  store i32 %v0_b318, i32* %r0.global-to-local, align 4
  store i32 %v1_af7c, i32* %r2.global-to-local, align 4
  %v3_b324 = load i32, i32* @r6, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b318, i16* %v5_b324, align 2
  br i1 %v2_b320, label %dec_label_pc_b1cc, label %dec_label_pc_b32c

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b1c0, %dec_label_pc_b318
  %v0_b32c = load i32, i32* @r5, align 4
  %v1_b32c = add i32 %v0_b32c, 28
  store i32 %v1_b32c, i32* @r4, align 4
  store i32 %v1_b32c, i32* %r0.global-to-local, align 4
  store i32 %v0_b008, i32* %r1.global-to-local, align 4
  %v2_b338 = call i32 @function_dbd0(i32 %v1_b32c, i32 %v0_b008)
  store i32 %v2_b338, i32* %r0.global-to-local, align 4
  store i32 %v0_b008, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b344 = load i32, i32* @r4, align 4
  %v4_b344 = add i32 %v3_b344, %v0_b008
  %v5_b344 = inttoptr i32 %v4_b344 to i8*
  store i8 0, i8* %v5_b344, align 1
  br label %dec_label_pc_b1cc

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b04c, %dec_label_pc_b34c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_b358 = call i32 @function_12fcc(i32 1510, i32 1)
  store i32 %v2_b358, i32* %r0.global-to-local, align 4
  store i32 %v2_ae88, i32* %ip.global-to-local, align 4
  %v3_b360 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b360, i32* %r1.global-to-local, align 4
  %v2_b364 = load i32, i32* @r4, align 4
  %v5_b364 = mul i32 %v2_b364, 4
  %v6_b364 = add i32 %v5_b364, %v2_ae88
  %v7_b364 = inttoptr i32 %v6_b364 to i32*
  store i32 %v2_b358, i32* %v7_b364, align 4
  %v0_b368 = load i32, i32* %ip.global-to-local, align 4
  %v1_b368 = load i32, i32* %r1.global-to-local, align 4
  %v4_b368 = mul i32 %v1_b368, 4
  %v5_b368 = add i32 %v4_b368, %v0_b368
  %v6_b368 = inttoptr i32 %v5_b368 to i32*
  %v7_b368 = load i32, i32* %v6_b368, align 4
  store i32 %v7_b368, i32* %r3.global-to-local, align 4
  %v1_b36c = inttoptr i32 %v7_b368 to i8*
  %v2_b36c = load i8, i8* %v1_b36c, align 1
  %tmp56 = urem i8 %v2_b36c, 16
  %v1_b370 = zext i8 %tmp56 to i32
  %v1_b374 = or i32 %v1_b370, 64
  store i32 %v1_b374, i32* %r2.global-to-local, align 4
  %v1_b378 = trunc i32 %v1_b374 to i8
  store i8 %v1_b378, i8* %v1_b36c, align 1
  %v0_b37c = load i32, i32* %r3.global-to-local, align 4
  %v1_b37c = inttoptr i32 %v0_b37c to i8*
  %v2_b37c = load i8, i8* %v1_b37c, align 1
  %v1_b380 = and i8 %v2_b37c, -16
  %v1_b384 = or i8 %v1_b380, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_b384, i8* %v1_b37c, align 1
  %v0_b390 = load i32, i32* %ip.global-to-local, align 4
  %v1_b390 = trunc i32 %v0_b390 to i8
  %v2_b390 = load i32, i32* %r3.global-to-local, align 4
  %v3_b390 = add i32 %v2_b390, 9
  %v4_b390 = inttoptr i32 %v3_b390 to i8*
  store i8 %v1_b390, i8* %v4_b390, align 1
  %v2_b398 = load i32, i32* %r3.global-to-local, align 4
  %v3_b398 = add i32 %v2_b398, 1
  %v4_b398 = inttoptr i32 %v3_b398 to i8*
  store i8 %v5_aec0, i8* %v4_b398, align 1
  store i32 %v5_aefc, i32* %ip.global-to-local, align 4
  %v0_b3a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3a0 = mul i32 %v0_b3a0, 32
  store i32 %v3_b3a0, i32* %r0.global-to-local, align 4
  %v2_b3a4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3a4 = add i32 %v2_b3a4, 8
  %v4_b3a4 = inttoptr i32 %v3_b3a4 to i8*
  store i8 %v1_b11c, i8* %v4_b3a4, align 1
  %v0_b3a8 = load i32, i32* @sb, align 4
  %v1_b3a8 = load i32, i32* %r3.global-to-local, align 4
  %v2_b3a8 = add i32 %v1_b3a8, 12
  %v3_b3a8 = inttoptr i32 %v2_b3a8 to i32*
  store i32 %v0_b3a8, i32* %v3_b3a8, align 4
  %v0_b3ac = load i32, i32* %r0.global-to-local, align 4
  %v1_b3ac = load i32, i32* %r1.global-to-local, align 4
  %tmp57 = mul i32 %v1_b3ac, -8
  %v5_b3ac = add i32 %v0_b3ac, %tmp57
  %v1_b3b0 = load i32, i32* @r7, align 4
  %v2_b3b0 = add i32 %v5_b3ac, %v1_b3b0
  store i32 %v2_b3b0, i32* %r2.global-to-local, align 4
  %v1_b3b4 = add i32 %v2_b3b0, 16
  %v2_b3b4 = inttoptr i32 %v1_b3b4 to i32*
  %v3_b3b4 = load i32, i32* %v2_b3b4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_b3bc = load i32, i32* %r3.global-to-local, align 4
  %v2_b3bc = add i32 %v1_b3bc, 16
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  store i32 %v3_b3b4, i32* %v3_b3bc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_b3c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c4 = add i32 %v0_b3c4, 1
  store i32 %v1_b3c4, i32* @r4, align 4
  %v0_b3c8 = load i32, i32* @r6, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i16
  %v2_b3c8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 2
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i16*
  store i16 %v1_b3c8, i16* %v4_b3c8, align 2
  %v0_b3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_b3cc = add i32 %v0_b3cc, 20
  store i32 %v1_b3cc, i32* %r1.global-to-local, align 4
  %v0_b3d0 = load i32, i32* @r8, align 4
  %v1_b3d0 = trunc i32 %v0_b3d0 to i16
  %v3_b3d0 = add i32 %v0_b3cc, 4
  %v4_b3d0 = inttoptr i32 %v3_b3d0 to i16*
  store i16 %v1_b3d0, i16* %v4_b3d0, align 2
  %v0_b3d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3d4 = trunc i32 %v0_b3d4 to i16
  %v2_b3d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d4 = add i32 %v2_b3d4, 6
  %v4_b3d4 = inttoptr i32 %v3_b3d4 to i16*
  store i16 %v1_b3d4, i16* %v4_b3d4, align 2
  %v0_b3d8 = load i32, i32* @sl, align 4
  %v1_b3d8 = trunc i32 %v0_b3d8 to i16
  %v2_b3d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_b3d8 = add i32 %v2_b3d8, 20
  %v4_b3d8 = inttoptr i32 %v3_b3d8 to i16*
  store i16 %v1_b3d8, i16* %v4_b3d8, align 2
  store i32 %v4_b138, i32* %r3.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r4, align 4
  %v1_b3e0 = load i32, i32* %r0.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  %v1_b3e4 = trunc i32 %v0_b3e4 to i16
  %v2_b3e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e4 = add i32 %v2_b3e4, 4
  %v4_b3e4 = inttoptr i32 %v3_b3e4 to i16*
  store i16 %v1_b3e4, i16* %v4_b3e4, align 2
  %v0_b3e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3e8 = trunc i32 %v0_b3e8 to i16
  %v2_b3e8 = load i32, i32* %r1.global-to-local, align 4
  %v3_b3e8 = add i32 %v2_b3e8, 2
  %v4_b3e8 = inttoptr i32 %v3_b3e8 to i16*
  store i16 %v1_b3e8, i16* %v4_b3e8, align 2
  %v0_b3ec = load i32, i32* @r4, align 4
  store i32 %v0_b3ec, i32* %stack_var_-44, align 4
  %v5_b3f0 = icmp slt i32 %v0_b3e0, %v1_b3e0
  br i1 %v5_b3f0, label %dec_label_pc_b34c, label %dec_label_pc_b164.preheader

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b1cc, %dec_label_pc_b164
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b3fc = call i32 @function_118d4(i32* null)
  store i32 %v2_b3fc, i32* %r0.global-to-local, align 4
  store i32 %v2_afa0, i32* %r3.global-to-local, align 4
  %v6_b408 = icmp slt i32 %v2_afa0, %v2_b3fc
  br i1 %v6_b408, label %dec_label_pc_b40c, label %dec_label_pc_b164

dec_label_pc_b40c:                                ; preds = %dec_label_pc_b3f8, %dec_label_pc_ae5c, %dec_label_pc_b418
  %v1_b414 = phi i32 [ %v3_afb4, %dec_label_pc_ae5c ], [ %v1_b41c, %dec_label_pc_b418 ], [ %v2_b3fc, %dec_label_pc_b3f8 ]
  store i32 %v27_ae5c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b414

dec_label_pc_b418:                                ; preds = %dec_label_pc_afc4
  %v0_b418 = load i32, i32* @fp, align 4
  store i32 %v0_b418, i32* %r0.global-to-local, align 4
  %v1_b41c = call i32 @function_11c54(i32 %v0_b418)
  store i32 %v1_b41c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b40c

; uselistorder directives
  uselistorder i32 %v1_b41c, { 1, 0 }
  uselistorder i32 %v0_b318, { 1, 0 }
  uselistorder i32 %v0_b304, { 1, 0 }
  uselistorder i32 %v1_b2fc, { 1, 0 }
  uselistorder i32 %v5_b2c4, { 1, 0 }
  uselistorder i32 %v3_b278, { 3, 1, 2, 0 }
  uselistorder i32 %v1_b244, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b20c, { 1, 0 }
  uselistorder i32 %v4_b1fc, { 1, 0 }
  uselistorder i32 %v0_b1ec, { 1, 0, 2 }
  uselistorder i32 %v2_b1dc, { 1, 0 }
  uselistorder i1 %v2_b320, { 1, 0 }
  uselistorder i32 %v1_b124, { 1, 0 }
  uselistorder i32 %v3_b0a0, { 1, 0 }
  uselistorder i32 %v3_b09c, { 1, 0 }
  uselistorder i32 %v3_b098, { 1, 0 }
  uselistorder i32 %v1_b058, { 2, 3, 1, 0 }
  uselistorder i32 %v1_b054, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_b028, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_b01c, { 1, 0 }
  uselistorder i32 %v0_b008, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_afb4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_afa0, { 1, 0 }
  uselistorder i32 %v1_af7c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_af3c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_af08, { 2, 1, 0 }
  uselistorder i32 %v5_aefc, { 0, 2, 1 }
  uselistorder i32 %v7_aec4, { 1, 0, 2, 3 }
  uselistorder i32 %v6_aea0, { 1, 2, 0 }
  uselistorder i32 %v2_ae88, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 37, 36, 39, 38, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_b40c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b32c, { 1, 0 }
  uselistorder label %dec_label_pc_b1cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b164, { 1, 0 }
  uselistorder label %dec_label_pc_b0c0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_b428(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b428:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_b428 = load i32, i32* @r4, align 4
  %v27_b428 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b454 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b460 = load i32, i32* @r7, align 4
  store i32 %v0_b460, i32* %r3.global-to-local, align 4
  store i32 %v2_b454, i32* @sb, align 4
  %v0_b468 = load i32, i32* @r5, align 4
  %v5_b46c = inttoptr i32 %v0_b458 to i32*
  %v6_b46c = call i32 @function_8258(i32 %v0_b468, i32* %v5_b46c, i32 2, i32 %v0_b460, i32 ptrtoint (i32* @0 to i32))
  %v1_b478 = urem i32 %v6_b46c, 256
  store i32 %v1_b478, i32* %ip.global-to-local, align 4
  %v0_b47c = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b488 = load i32, i32* @r5, align 4
  %v5_b48c = trunc i32 %v6_b46c to i8
  %v6_b490 = inttoptr i32 %v0_b47c to i32*
  %v7_b490 = call i32 @function_8258(i32 %v0_b488, i32* %v6_b490, i32 3, i32 65535, i32 %v6_b46c)
  %v0_b494 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b4a4 = load i32, i32* @r5, align 4
  %v5_b4a8 = inttoptr i32 %v0_b494 to i32*
  %v6_b4a8 = call i32 @function_8258(i32 %v0_b4a4, i32* %v5_b4a8, i32 4, i32 64, i32 %v7_b490)
  %v0_b4b0 = load i32, i32* @r4, align 4
  %v1_b4b4 = urem i32 %v6_b4a8, 256
  store i32 %v1_b4b4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r7, align 4
  store i32 %v0_b4bc, i32* %r3.global-to-local, align 4
  %v0_b4c0 = load i32, i32* @r5, align 4
  %sext5 = mul i32 %v6_b4a8, 16777216
  %v5_b4c8 = sdiv i32 %sext5, 16777216
  %v6_b4c8 = inttoptr i32 %v0_b4b0 to i32*
  %v7_b4c8 = call i32 @function_8258(i32 %v0_b4c0, i32* %v6_b4c8, i32 5, i32 %v0_b4bc, i32 %v5_b4c8)
  %v1_b4d4 = urem i32 %v7_b4c8, 256
  store i32 %v1_b4d4, i32* %ip.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b4e4 = load i32, i32* @r5, align 4
  %v5_b4ec = inttoptr i32 %v0_b4d8 to i32*
  %v6_b4ec = call i32 @function_8258(i32 %v0_b4e4, i32* %v5_b4ec, i32 6, i32 65535, i32 %v1_b4d4)
  %v0_b4f4 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b504 = load i32, i32* @r5, align 4
  %v5_b508 = inttoptr i32 %v0_b4f4 to i32*
  %v6_b508 = call i32 @function_8258(i32 %v0_b504, i32* %v5_b508, i32 7, i32 27015, i32 %v6_b4ec)
  store i32 %v6_b508, i32* @r4, align 4
  %v0_b510 = load i32, i32* @r7, align 4
  store i32 %v0_b510, i32* %stack_var_-48, align 4
  %v1_b518 = inttoptr i32 %v0_b510 to i32*
  %v2_b518 = call i32 @function_118d4(i32* %v1_b518)
  %v1_b51c = load i32, i32* @r6, align 4
  %v2_b51c = add i32 %v1_b51c, %v2_b518
  %v1_b528 = call i32 @function_10988(i32 29)
  %v3_b534 = call i32 @function_108c4(i32 29, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_b548 = call i32 @function_12464(i32 2, i32 3, i32 17)
  %v7_b54c = icmp eq i32 %v3_b548, -1
  store i32 %v3_b548, i32* @sl, align 4
  br i1 %v7_b54c, label %dec_label_pc_b878, label %dec_label_pc_b558

dec_label_pc_b558:                                ; preds = %dec_label_pc_b428
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b560 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b560, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b574 = call i32 @function_12420(i32 %v3_b548, i32 %v0_b568, i32 3, i32 %v6_b560, i32 ptrtoint (i32* @0 to i32))
  %v7_b578 = icmp eq i32 %v5_b574, -1
  br i1 %v7_b578, label %dec_label_pc_b884, label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %dec_label_pc_b558
  store i32 %v6_b4ec, i32* %r2.global-to-local, align 4
  %v0_b58c = load i32, i32* @r4, align 4
  %v3_b590 = mul i32 %v6_b4ec, 65536
  store i32 %v3_b590, i32* %ip.global-to-local, align 4
  %v3_b594 = urem i32 %v7_b490, 65536
  store i32 %v3_b594, i32* %r3.global-to-local, align 4
  %v3_b598 = urem i32 %v6_b4ec, 65536
  %v3_b59c = urem i32 %v0_b58c, 65536
  %v0_b5a0 = load i32, i32* @fp, align 4
  %v2_b5a0 = icmp eq i32 %v0_b5a0, 0
  %v0_b5a4 = load i32, i32* @r7, align 4
  store i32 %v0_b5a4, i32* %stack_var_-44, align 4
  br i1 %v2_b5a0, label %dec_label_pc_b6e4.preheader, label %dec_label_pc_b5b8

dec_label_pc_b5b8:                                ; preds = %dec_label_pc_b580
  %tmp38 = mul i32 %v7_b490, 256
  %v3_b5c0 = and i32 %tmp38, 65280
  store i32 %v3_b5c0, i32* %r3.global-to-local, align 4
  %tmp39 = mul i32 %v0_b58c, 256
  %v3_b5c4 = and i32 %tmp39, 65280
  %tmp40 = udiv i32 %v7_b490, 256
  %v4_b5cc = urem i32 %tmp40, 256
  %v5_b5cc = or i32 %v4_b5cc, %tmp38
  %tmp41 = udiv i32 %v0_b58c, 256
  %v4_b5d0 = urem i32 %tmp41, 256
  %v5_b5d0 = or i32 %v4_b5d0, %v3_b5c4
  store i32 %v5_b5d0, i32* @lr, align 4
  %tmp42 = mul i32 %v6_b4ec, 256
  %v3_b5d4 = and i32 %tmp42, 65280
  store i32 %v3_b5d4, i32* %r2.global-to-local, align 4
  %v5_b5d8 = trunc i32 %v5_b5cc to i16
  %tmp43 = udiv i32 %v6_b4ec, 256
  %v4_b5e0 = urem i32 %tmp43, 256
  %v5_b5e0 = or i32 %v4_b5e0, %v3_b5d4
  store i32 %v5_b5e0, i32* @r6, align 4
  store i32 %v0_b5a4, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b5d0, 65536
  %v4_b6b0 = sdiv i32 %sext, 65536
  %v1_b65c = trunc i32 %v5_b4c8 to i8
  br label %dec_label_pc_b5e8

dec_label_pc_b5e8:                                ; preds = %.thread, %dec_label_pc_b5b8
  %v2_b5f0 = call i32 @function_12fcc(i32 128, i32 1)
  %v3_b5f4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b5f4, i32* %r2.global-to-local, align 4
  %v1_b5f8 = load i32, i32* @sb, align 4
  %v2_b5f8 = load i32, i32* @r4, align 4
  %v5_b5f8 = mul i32 %v2_b5f8, 4
  %v6_b5f8 = add i32 %v5_b5f8, %v1_b5f8
  %v7_b5f8 = inttoptr i32 %v6_b5f8 to i32*
  store i32 %v2_b5f0, i32* %v7_b5f8, align 4
  %v0_b5fc = load i32, i32* %r2.global-to-local, align 4
  %v3_b5fc = mul i32 %v0_b5fc, 32
  store i32 %v3_b5fc, i32* %r3.global-to-local, align 4
  %v0_b600 = load i32, i32* @sb, align 4
  %v4_b600 = mul i32 %v0_b5fc, 4
  %v5_b600 = add i32 %v0_b600, %v4_b600
  %v6_b600 = inttoptr i32 %v5_b600 to i32*
  %v7_b600 = load i32, i32* %v6_b600, align 4
  store i32 %v7_b600, i32* @lr, align 4
  %v5_b604 = mul i32 %v0_b5fc, 24
  store i32 %v5_b604, i32* %r3.global-to-local, align 4
  %v1_b608 = load i32, i32* @r8, align 4
  %v2_b608 = add i32 %v1_b608, %v5_b604
  store i32 %v2_b608, i32* @r5, align 4
  %v1_b60c = inttoptr i32 %v7_b600 to i8*
  %v2_b60c = load i8, i8* %v1_b60c, align 1
  %tmp = urem i8 %v2_b60c, 16
  %v1_b610 = zext i8 %tmp to i32
  %v1_b614 = or i32 %v1_b610, 64
  store i32 %v1_b614, i32* %r3.global-to-local, align 4
  %v1_b61c = trunc i32 %v1_b614 to i8
  store i8 %v1_b61c, i8* %v1_b60c, align 1
  %v0_b620 = load i32, i32* @lr, align 4
  %v1_b620 = inttoptr i32 %v0_b620 to i8*
  %v2_b620 = load i8, i8* %v1_b620, align 1
  %v1_b624 = and i8 %v2_b620, -16
  %v1_b628 = or i8 %v1_b624, 5
  store i8 %v1_b628, i8* %v1_b620, align 1
  %v2_b634 = load i32, i32* @lr, align 4
  %v3_b634 = add i32 %v2_b634, 1
  %v4_b634 = inttoptr i32 %v3_b634 to i8*
  store i8 %v5_b48c, i8* %v4_b634, align 1
  %v3_b638 = load i32, i32* %stack_var_-48, align 4
  %v3_b63c = mul i32 %v3_b638, 65536
  %v1_b640 = add i32 %v3_b63c, 2097152
  %v3_b644 = udiv i32 %v1_b640, 256
  %v1_b648 = and i32 %v3_b644, 65280
  %v4_b64c = udiv i32 %v1_b640, 16777216
  %v5_b64c = or i32 %v1_b648, %v4_b64c
  store i32 %v5_b64c, i32* %r3.global-to-local, align 4
  store i32 %v1_b4d4, i32* %r4.global-to-local, align 4
  %v3_b658 = urem i32 %v3_b638, 65536
  store i32 %v3_b658, i32* %r2.global-to-local, align 4
  %v2_b65c = load i32, i32* @lr, align 4
  %v3_b65c = add i32 %v2_b65c, 8
  %v4_b65c = inttoptr i32 %v3_b65c to i8*
  store i8 %v1_b65c, i8* %v4_b65c, align 1
  %v0_b660 = load i32, i32* %r3.global-to-local, align 4
  %v1_b660 = trunc i32 %v0_b660 to i16
  %v2_b660 = load i32, i32* @lr, align 4
  %v3_b660 = add i32 %v2_b660, 2
  %v4_b660 = inttoptr i32 %v3_b660 to i16*
  store i16 %v1_b660, i16* %v4_b660, align 2
  %v0_b664 = load i32, i32* %r2.global-to-local, align 4
  %v1_b664 = mul i32 %v0_b664, 65536
  %v3_b66c = add i32 %v1_b664, 786432
  store i32 %v3_b66c, i32* %r2.global-to-local, align 4
  %v2_b670 = load i32, i32* @lr, align 4
  %v3_b670 = add i32 %v2_b670, 4
  %v4_b670 = inttoptr i32 %v3_b670 to i16*
  store i16 %v5_b5d8, i16* %v4_b670, align 2
  %v0_b674 = load i32, i32* %r2.global-to-local, align 4
  %v3_b674 = udiv i32 %v0_b674, 256
  %v1_b678 = and i32 %v3_b674, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v4_b67c = udiv i32 %v0_b674, 16777216
  %v5_b67c = or i32 %v1_b678, %v4_b67c
  store i32 %v5_b67c, i32* %ip.global-to-local, align 4
  %v2_b684 = load i32, i32* @lr, align 4
  %v3_b684 = add i32 %v2_b684, 9
  %v4_b684 = inttoptr i32 %v3_b684 to i8*
  store i8 17, i8* %v4_b684, align 1
  %v0_b688 = load i32, i32* %r4.global-to-local, align 4
  %v2_b688 = icmp eq i32 %v0_b688, 0
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_b688, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_b5e8
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_b694 = load i32, i32* @lr, align 4
  %v4_b694 = add i32 %v3_b694, 6
  %v5_b694 = inttoptr i32 %v4_b694 to i16*
  store i16 64, i16* %v5_b694, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b5e8, %bb
  %v2_b698 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_b698, i32* %r2.global-to-local, align 4
  %v1_b69c = load i32, i32* @lr, align 4
  %v2_b69c = add i32 %v1_b69c, 12
  %v3_b69c = inttoptr i32 %v2_b69c to i32*
  store i32 %v2_b698, i32* %v3_b69c, align 4
  %v0_b6a0 = load i32, i32* @r5, align 4
  %v1_b6a0 = add i32 %v0_b6a0, 16
  %v2_b6a0 = inttoptr i32 %v1_b6a0 to i32*
  %v3_b6a0 = load i32, i32* %v2_b6a0, align 4
  store i32 %v3_b6a0, i32* %r3.global-to-local, align 4
  %v0_b6a4 = load i32, i32* @lr, align 4
  %v1_b6a4 = add i32 %v0_b6a4, 20
  store i32 %v1_b6a4, i32* %r4.global-to-local, align 4
  %v0_b6a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b6a8 = trunc i32 %v0_b6a8 to i16
  %v3_b6a8 = add i32 %v0_b6a4, 24
  %v4_b6a8 = inttoptr i32 %v3_b6a8 to i16*
  store i16 %v1_b6a8, i16* %v4_b6a8, align 2
  %v0_b6ac = load i32, i32* %r3.global-to-local, align 4
  %v1_b6ac = load i32, i32* @lr, align 4
  %v2_b6ac = add i32 %v1_b6ac, 16
  %v3_b6ac = inttoptr i32 %v2_b6ac to i32*
  store i32 %v0_b6ac, i32* %v3_b6ac, align 4
  store i32 %v4_b6b0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_b6b8 = load i32, i32* @lr, align 4
  %v2_b6b8 = add i32 %v1_b6b8, 28
  %v3_b6b8 = inttoptr i32 %v2_b6b8 to i32*
  store i32 -1, i32* %v3_b6b8, align 4
  %v0_b6bc = load i32, i32* %ip.global-to-local, align 4
  %v1_b6bc = trunc i32 %v0_b6bc to i16
  %v2_b6bc = load i32, i32* %r4.global-to-local, align 4
  %v3_b6bc = add i32 %v2_b6bc, 2
  %v4_b6bc = inttoptr i32 %v3_b6bc to i16*
  store i16 %v1_b6bc, i16* %v4_b6bc, align 2
  %v0_b6c0 = load i32, i32* @lr, align 4
  %v1_b6c0 = add i32 %v0_b6c0, 32
  %v0_b6c4 = load i32, i32* @r6, align 4
  %v1_b6c4 = trunc i32 %v0_b6c4 to i16
  %v3_b6c4 = add i32 %v0_b6c0, 20
  %v4_b6c4 = inttoptr i32 %v3_b6c4 to i16*
  store i16 %v1_b6c4, i16* %v4_b6c4, align 2
  %v3_b6c8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b6c8, i32* %r2.global-to-local, align 4
  %v3_b6cc = call i32 @function_11204(i32 %v1_b6c0, i32 %v3_b534, i32 %v3_b6c8)
  %v3_b6d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b6d0, i32* %r3.global-to-local, align 4
  %v1_b6d4 = add i32 %v3_b6d0, 1
  store i32 %v1_b6d4, i32* @r4, align 4
  %v1_b6d8 = load i32, i32* @fp, align 4
  store i32 %v1_b6d4, i32* %stack_var_-44, align 4
  %v5_b6e0 = icmp slt i32 %v1_b6d4, %v1_b6d8
  br i1 %v5_b6e0, label %dec_label_pc_b5e8, label %dec_label_pc_b6e4.preheader

dec_label_pc_b6e4.preheader:                      ; preds = %.thread, %dec_label_pc_b580
  %v0_b6e8.ph = phi i32 [ 0, %dec_label_pc_b580 ], [ %v1_b6d8, %.thread ]
  %v3_b700 = icmp eq i32 %v3_b594, 65535
  br label %dec_label_pc_b6e4

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6e4.preheader, %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge
  %v0_b6e8 = phi i32 [ %v0_b6e8.pre, %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge ], [ %v0_b6e8.ph, %dec_label_pc_b6e4.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b6e8 = icmp eq i32 %v0_b6e8, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b6e8, label %dec_label_pc_b864, label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6e4
  br label %dec_label_pc_b7a8

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b7a8
  br i1 %v3_b700, label %dec_label_pc_b830, label %dec_label_pc_b708

dec_label_pc_b708:                                ; preds = %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge, %dec_label_pc_b6fc
  %v1_b70c = phi i32 [ %v1_b70c.pre, %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge ], [ 65535, %dec_label_pc_b6fc ]
  store i32 %v3_b598, i32* %r2.global-to-local, align 4
  %v9_b70c = icmp eq i32 %v3_b598, %v1_b70c
  br i1 %v9_b70c, label %dec_label_pc_b844, label %dec_label_pc_b714

dec_label_pc_b714:                                ; preds = %dec_label_pc_b830.dec_label_pc_b714_crit_edge, %dec_label_pc_b708
  %v1_b718 = phi i32 [ %v1_b718.pre, %dec_label_pc_b830.dec_label_pc_b714_crit_edge ], [ %v1_b70c, %dec_label_pc_b708 ]
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  %v9_b718 = icmp eq i32 %v3_b59c, %v1_b718
  br i1 %v9_b718, label %dec_label_pc_b858, label %dec_label_pc_b720

dec_label_pc_b720:                                ; preds = %dec_label_pc_b844, %dec_label_pc_b714, %dec_label_pc_b858
  store i32 0, i32* @r4, align 4
  %v2_b728 = load i32, i32* @r5, align 4
  %v3_b728 = add i32 %v2_b728, 10
  %v4_b728 = inttoptr i32 %v3_b728 to i16*
  store i16 0, i16* %v4_b728, align 2
  %v0_b72c = load i32, i32* @r5, align 4
  store i32 %v0_b72c, i32* @r0, align 4
  %v2_b730 = call i32 @function_bf78(i32 %v0_b72c, i32 20)
  %v3_b730 = trunc i32 %v2_b730 to i16
  %v3_b734 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b734, i32* %r3.global-to-local, align 4
  %v3_b738 = load i32, i32* @r5, align 4
  %v4_b738 = add i32 %v3_b738, 10
  %v5_b738 = inttoptr i32 %v4_b738 to i16*
  store i16 %v3_b730, i16* %v5_b738, align 2
  %v0_b73c = load i32, i32* @r6, align 4
  store i32 %v0_b73c, i32* @r1, align 4
  %v1_b740 = add i32 %v0_b73c, 4
  %v2_b740 = inttoptr i32 %v1_b740 to i16*
  %v3_b740 = load i16, i16* %v2_b740, align 2
  %v4_b740 = zext i16 %v3_b740 to i32
  store i32 %v4_b740, i32* %r2.global-to-local, align 4
  %v0_b744 = load i32, i32* @r4, align 4
  %v1_b744 = trunc i32 %v0_b744 to i16
  %v3_b744 = add i32 %v0_b73c, 6
  %v4_b744 = inttoptr i32 %v3_b744 to i16*
  store i16 %v1_b744, i16* %v4_b744, align 2
  %v0_b748 = load i32, i32* %r3.global-to-local, align 4
  %v1_b748 = add i32 %v0_b748, 12
  store i32 %v1_b748, i32* %r3.global-to-local, align 4
  %v0_b74c = load i32, i32* @r5, align 4
  %v4_b750 = call i32 @function_bfc8(i32 %v0_b74c, i32 %v0_b73c, i32 %v4_b740, i32 %v1_b748)
  %v5_b750 = trunc i32 %v4_b750 to i16
  %v3_b754 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b754, i32* %r3.global-to-local, align 4
  %v3_b758 = mul i32 %v3_b754, 32
  store i32 %v3_b758, i32* %lr.global-to-local, align 4
  %v3_b75c = load i32, i32* @r6, align 4
  %v4_b75c = add i32 %v3_b75c, 6
  %v5_b75c = inttoptr i32 %v4_b75c to i16*
  store i16 %v5_b750, i16* %v5_b75c, align 2
  %v0_b760 = load i32, i32* %lr.global-to-local, align 4
  %v1_b760 = load i32, i32* %r3.global-to-local, align 4
  %tmp44 = mul i32 %v1_b760, -8
  %v5_b760 = add i32 %v0_b760, %tmp44
  store i32 %v5_b760, i32* %lr.global-to-local, align 4
  %v0_b764 = load i32, i32* @r6, align 4
  %v1_b764 = add i32 %v0_b764, 2
  %v2_b764 = inttoptr i32 %v1_b764 to i16*
  %v3_b764 = load i16, i16* %v2_b764, align 2
  %v3_b768 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_b768, i32* %r2.global-to-local, align 4
  %v1_b76c = load i32, i32* @r8, align 4
  %v2_b76c = add i32 %v1_b76c, %v5_b760
  store i32 %v2_b76c, i32* @lr, align 4
  %v3_b770 = add i32 %v2_b76c, 2
  %v4_b770 = inttoptr i32 %v3_b770 to i16*
  store i16 %v3_b764, i16* %v4_b770, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b77c = load i32, i32* @r5, align 4
  %v0_b780 = load i32, i32* %r2.global-to-local, align 4
  %v1_b780 = add i32 %v0_b780, 32
  store i32 %v1_b780, i32* %r2.global-to-local, align 4
  %v0_b784 = load i32, i32* @sl, align 4
  %v0_b788 = load i32, i32* @lr, align 4
  %v6_b790 = call i32 @function_123e0(i32 %v0_b784, i32 %v0_b77c, i32 %v1_b780, i32 16384, i32 %v0_b788, i32 16)
  %v3_b794 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b794, i32* %r3.global-to-local, align 4
  %v1_b798 = add i32 %v3_b794, 1
  %v1_b79c = load i32, i32* @fp, align 4
  store i32 %v1_b798, i32* %stack_var_-44, align 4
  %v6_b7a4 = icmp slt i32 %v1_b798, %v1_b79c
  br i1 %v6_b7a4, label %dec_label_pc_b7a8, label %dec_label_pc_b864

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b720, %dec_label_pc_b6f4
  %v1_b7b8 = phi i32 [ %v1_b798, %dec_label_pc_b720 ], [ 0, %dec_label_pc_b6f4 ]
  %v5_b7ac = mul i32 %v1_b7b8, 24
  %v1_b7b0 = load i32, i32* @r8, align 4
  %v2_b7b0 = add i32 %v1_b7b0, %v5_b7ac
  store i32 %v2_b7b0, i32* %r3.global-to-local, align 4
  %v1_b7b4 = add i32 %v2_b7b0, 20
  %v2_b7b4 = inttoptr i32 %v1_b7b4 to i8*
  %v3_b7b4 = load i8, i8* %v2_b7b4, align 1
  %v4_b7b4 = zext i8 %v3_b7b4 to i32
  store i32 %v4_b7b4, i32* %r2.global-to-local, align 4
  %v0_b7b8 = load i32, i32* @sb, align 4
  %v4_b7b8 = mul i32 %v1_b7b8, 4
  %v5_b7b8 = add i32 %v0_b7b8, %v4_b7b8
  %v6_b7b8 = inttoptr i32 %v5_b7b8 to i32*
  %v7_b7b8 = load i32, i32* %v6_b7b8, align 4
  store i32 %v7_b7b8, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_b7c8 = add i32 %v7_b7b8, 20
  store i32 %v1_b7c8, i32* @r6, align 4
  %tmp45 = icmp ugt i8 %v3_b7b4, 31
  br i1 %tmp45, label %dec_label_pc_b6fc, label %dec_label_pc_b7d0

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7a8
  %v1_b7d0 = add i32 %v2_b7b0, 16
  %v2_b7d0 = inttoptr i32 %v1_b7d0 to i32*
  %v3_b7d0 = load i32, i32* %v2_b7d0, align 4
  store i32 %v3_b7d0, i32* %r4.global-to-local, align 4
  %v0_b7d4 = call i32 @function_db0c()
  %v3_b7d8 = load i32, i32* %stack_var_-44, align 4
  %v5_b7e0 = mul i32 %v3_b7d8, 24
  %v1_b7e4 = and i32 %v3_b7d0, 16711680
  store i32 %v1_b7e4, i32* %ip.global-to-local, align 4
  %v3_b7e8 = udiv i32 %v3_b7d0, 16777216
  %v4_b7ec = udiv i32 %v1_b7e4, 256
  %v5_b7ec = or i32 %v4_b7ec, %v3_b7e8
  store i32 %v5_b7ec, i32* %r2.global-to-local, align 4
  %v1_b7f0 = load i32, i32* @r8, align 4
  %v2_b7f0 = add i32 %v1_b7f0, %v5_b7e0
  %v1_b7f4 = and i32 %v3_b7d0, ptrtoint (i32* @global_var_ff00.16 to i32)
  store i32 %v1_b7f4, i32* %r3.global-to-local, align 4
  %v1_b7f8 = add i32 %v2_b7f0, 20
  %v2_b7f8 = inttoptr i32 %v1_b7f8 to i8*
  %v3_b7f8 = load i8, i8* %v2_b7f8, align 1
  %v4_b7f8 = zext i8 %v3_b7f8 to i32
  store i32 %v4_b7f8, i32* %ip.global-to-local, align 4
  %v4_b7fc = mul i32 %v1_b7f4, 256
  %v4_b800 = mul i32 %v3_b7d0, 16777216
  %v5_b7fc = or i32 %v4_b7fc, %v4_b800
  %v5_b800 = or i32 %v5_b7fc, %v5_b7ec
  %v7_b804 = lshr i32 %v0_b7d4, %v4_b7f8
  %v8_b804 = add i32 %v7_b804, %v5_b800
  store i32 %v8_b804, i32* %r2.global-to-local, align 4
  %v5_b820 = call i32 @llvm.bswap.i32(i32 %v8_b804)
  store i32 %v5_b820, i32* %r3.global-to-local, align 4
  %v1_b824 = load i32, i32* @r7, align 4
  %v9_b824 = icmp eq i32 %v3_b594, %v1_b824
  %v1_b828 = load i32, i32* @r5, align 4
  %v2_b828 = add i32 %v1_b828, 16
  %v3_b828 = inttoptr i32 %v2_b828 to i32*
  store i32 %v5_b820, i32* %v3_b828, align 4
  br i1 %v9_b824, label %dec_label_pc_b830, label %dec_label_pc_b7d0.dec_label_pc_b708_crit_edge

dec_label_pc_b7d0.dec_label_pc_b708_crit_edge:    ; preds = %dec_label_pc_b7d0
  %v1_b70c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b708

dec_label_pc_b830:                                ; preds = %dec_label_pc_b7d0, %dec_label_pc_b6fc
  %v0_b830 = call i32 @function_db0c()
  %v1_b830 = trunc i32 %v0_b830 to i16
  store i32 %v3_b598, i32* %r2.global-to-local, align 4
  %v1_b838 = load i32, i32* @r7, align 4
  %v9_b838 = icmp eq i32 %v3_b598, %v1_b838
  %v3_b83c = load i32, i32* @r5, align 4
  %v4_b83c = add i32 %v3_b83c, 4
  %v5_b83c = inttoptr i32 %v4_b83c to i16*
  store i16 %v1_b830, i16* %v5_b83c, align 2
  br i1 %v9_b838, label %dec_label_pc_b844, label %dec_label_pc_b830.dec_label_pc_b714_crit_edge

dec_label_pc_b830.dec_label_pc_b714_crit_edge:    ; preds = %dec_label_pc_b830
  %v1_b718.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b714

dec_label_pc_b844:                                ; preds = %dec_label_pc_b830, %dec_label_pc_b708
  %v0_b844 = call i32 @function_db0c()
  %v1_b844 = trunc i32 %v0_b844 to i16
  store i32 %v3_b59c, i32* %r3.global-to-local, align 4
  %v1_b84c = load i32, i32* @r7, align 4
  %v9_b84c = icmp eq i32 %v3_b59c, %v1_b84c
  %v3_b850 = load i32, i32* @r5, align 4
  %v4_b850 = add i32 %v3_b850, 20
  %v5_b850 = inttoptr i32 %v4_b850 to i16*
  store i16 %v1_b844, i16* %v5_b850, align 2
  br i1 %v9_b84c, label %dec_label_pc_b858, label %dec_label_pc_b720

dec_label_pc_b858:                                ; preds = %dec_label_pc_b844, %dec_label_pc_b714
  %v0_b858 = call i32 @function_db0c()
  %v1_b858 = trunc i32 %v0_b858 to i16
  %v3_b85c = load i32, i32* @r6, align 4
  %v4_b85c = add i32 %v3_b85c, 2
  %v5_b85c = inttoptr i32 %v4_b85c to i16*
  store i16 %v1_b858, i16* %v5_b85c, align 2
  br label %dec_label_pc_b720

dec_label_pc_b864:                                ; preds = %dec_label_pc_b720, %dec_label_pc_b6e4
  %v2_b868 = call i32 @function_118d4(i32* null)
  store i32 %v2_b51c, i32* %ip.global-to-local, align 4
  %v6_b874 = icmp slt i32 %v2_b51c, %v2_b868
  br i1 %v6_b874, label %dec_label_pc_b878, label %dec_label_pc_b864.dec_label_pc_b6e4_crit_edge

dec_label_pc_b864.dec_label_pc_b6e4_crit_edge:    ; preds = %dec_label_pc_b864
  %v0_b6e8.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_b6e4

dec_label_pc_b878:                                ; preds = %dec_label_pc_b864, %dec_label_pc_b428, %dec_label_pc_b884
  %v1_b880 = phi i32 [ %v3_b548, %dec_label_pc_b428 ], [ %v1_b888, %dec_label_pc_b884 ], [ %v2_b868, %dec_label_pc_b864 ]
  store i32 %v3_b428, i32* %r4.global-to-local, align 4
  store i32 %v27_b428, i32* %lr.global-to-local, align 4
  ret i32 %v1_b880

dec_label_pc_b884:                                ; preds = %dec_label_pc_b558
  %v0_b884 = load i32, i32* @sl, align 4
  %v1_b888 = call i32 @function_11c54(i32 %v0_b884)
  br label %dec_label_pc_b878

; uselistorder directives
  uselistorder i32 %v5_b820, { 1, 0 }
  uselistorder i32 %v3_b7d0, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_b798, { 1, 2, 0 }
  uselistorder i32 %v5_b760, { 1, 0 }
  uselistorder i32 %v0_b73c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b6d4, { 1, 0, 2 }
  uselistorder i32 %v3_b638, { 1, 0 }
  uselistorder i32 %v0_b5fc, { 1, 2, 0 }
  uselistorder i32 %v3_b5d4, { 1, 0 }
  uselistorder i32 %v3_b594, { 0, 2, 1 }
  uselistorder i32 %v0_b58c, { 1, 0, 2 }
  uselistorder i32 %v3_b548, { 1, 2, 3, 0 }
  uselistorder i32 %v2_b51c, { 1, 0 }
  uselistorder i32 %v6_b4ec, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v1_b4d4, { 1, 2, 0 }
  uselistorder i32 %v5_b4c8, { 1, 0 }
  uselistorder i32 %v7_b490, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b46c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 7, 8, 9, 18, 10, 11, 12, 13, 14, 15, 16, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 7, 8, 9, 15, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2 }
  uselistorder label %dec_label_pc_b878, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b720, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b6e4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_b894(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b894:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v9_b894 = load i32, i32* @r6, align 4
  %v18_b894 = load i32, i32* @sb, align 4
  %v27_b894 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b8c4 = call i32 @function_12fcc(i32 %arg2, i32 4)
  %v0_b8c8 = load i32, i32* @r4, align 4
  store i32 %v0_b8c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b8d4 = load i32, i32* @sl, align 4
  store i32 %v0_b8d4, i32* %r3.global-to-local, align 4
  %v0_b8d8 = load i32, i32* @r5, align 4
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v5_b8dc = inttoptr i32 %v0_b8c8 to i32*
  %v6_b8dc = call i32 @function_8258(i32 %v0_b8d8, i32* %v5_b8dc, i32 2, i32 %v0_b8d4, i32 %v2_b8c4)
  %v1_b8e8 = urem i32 %v6_b8dc, 256
  store i32 %v1_b8e8, i32* %ip.global-to-local, align 4
  %v0_b8ec = load i32, i32* @r4, align 4
  store i32 %v0_b8ec, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b8f8 = load i32, i32* @r5, align 4
  store i32 %v0_b8f8, i32* %r0.global-to-local, align 4
  %v6_b900 = inttoptr i32 %v0_b8ec to i32*
  %v7_b900 = call i32 @function_8258(i32 %v0_b8f8, i32* %v6_b900, i32 3, i32 65535, i32 %v1_b8e8)
  %v0_b904 = load i32, i32* @r4, align 4
  store i32 %v0_b904, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b914 = load i32, i32* @r5, align 4
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v5_b918 = inttoptr i32 %v0_b904 to i32*
  %v6_b918 = call i32 @function_8258(i32 %v0_b914, i32* %v5_b918, i32 4, i32 64, i32 %v7_b900)
  %v0_b920 = load i32, i32* @r4, align 4
  store i32 %v0_b920, i32* %r1.global-to-local, align 4
  %v1_b924 = urem i32 %v6_b918, 256
  store i32 %v1_b924, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_b92c = load i32, i32* @sl, align 4
  store i32 %v0_b92c, i32* %r3.global-to-local, align 4
  %v0_b930 = load i32, i32* @r5, align 4
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  %sext21 = mul i32 %v6_b918, 16777216
  %v5_b938 = sdiv i32 %sext21, 16777216
  %v6_b938 = inttoptr i32 %v0_b920 to i32*
  %v7_b938 = call i32 @function_8258(i32 %v0_b930, i32* %v6_b938, i32 5, i32 %v0_b92c, i32 %v5_b938)
  %v1_b944 = urem i32 %v7_b938, 256
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  %v0_b948 = load i32, i32* @r4, align 4
  store i32 %v0_b948, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b954 = load i32, i32* @r5, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b95c = inttoptr i32 %v0_b948 to i32*
  %v6_b95c = call i32 @function_8258(i32 %v0_b954, i32* %v5_b95c, i32 6, i32 65535, i32 %v1_b944)
  %v0_b960 = load i32, i32* @r4, align 4
  store i32 %v0_b960, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_b970 = load i32, i32* @r5, align 4
  store i32 %v0_b970, i32* %r0.global-to-local, align 4
  %v5_b974 = inttoptr i32 %v0_b960 to i32*
  %v6_b974 = call i32 @function_8258(i32 %v0_b970, i32* %v5_b974, i32 7, i32 53, i32 %v6_b95c)
  %v0_b97c = load i32, i32* @r4, align 4
  store i32 %v0_b97c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_b98c = load i32, i32* @r5, align 4
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  %v5_b990 = inttoptr i32 %v0_b97c to i32*
  %v6_b990 = call i32 @function_8258(i32 %v0_b98c, i32* %v5_b990, i32 9, i32 65535, i32 %v6_b974)
  %v0_b994 = load i32, i32* @r4, align 4
  store i32 %v0_b994, i32* %r1.global-to-local, align 4
  %v0_b99c = load i32, i32* @sl, align 4
  store i32 %v0_b99c, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_b9a4 = load i32, i32* @r5, align 4
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  %v5_b9a8 = inttoptr i32 %v0_b994 to i32*
  %v6_b9a8 = call i32 @function_8258(i32 %v0_b9a4, i32* %v5_b9a8, i32 %v0_b99c, i32 12, i32 %v6_b990)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_b9b0 = load i32, i32* @sl, align 4
  store i32 %v0_b9b0, i32* %r3.global-to-local, align 4
  %v0_b9b4 = load i32, i32* @r4, align 4
  store i32 %v0_b9b4, i32* %r1.global-to-local, align 4
  %v0_b9bc = load i32, i32* @r5, align 4
  store i32 %v0_b9bc, i32* %r0.global-to-local, align 4
  %v5_b9c0 = inttoptr i32 %v0_b9b4 to i32*
  %v6_b9c0 = call i32 @function_8190(i32 %v0_b9bc, i32* %v5_b9c0, i32 8, i32 %v0_b9b0, i32 %v6_b9a8)
  store i32 %v6_b9c0, i32* @r7, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_b9cc = call i32 @function_10988(i32 30)
  %v0_b9d0 = load i32, i32* @sl, align 4
  store i32 %v0_b9d0, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v2_b9d8 = inttoptr i32 %v0_b9d0 to i32*
  %v3_b9d8 = call i32 @function_108c4(i32 30, i32* %v2_b9d8)
  store i32 %v3_b9d8, i32* %r0.global-to-local, align 4
  %v0_b9dc = load i32, i32* @sl, align 4
  store i32 %v0_b9dc, i32* %r1.global-to-local, align 4
  %v2_b9e0 = call i32 @function_11860(i32 %v3_b9d8, i32 %v0_b9dc)
  store i32 %v2_b9e0, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_b9ec = call i32 @function_108e8(i32 30)
  store i32 %v1_b9ec, i32* %r0.global-to-local, align 4
  %v0_b9f0 = load i32, i32* @r4, align 4
  %v1_b9f0 = load i32, i32* @sl, align 4
  %v9_b9f0 = icmp eq i32 %v0_b9f0, %v1_b9f0
  store i1 %v9_b9f0, i1* %cpsr_z.global-to-local, align 1
  %v5_b9f4 = icmp slt i32 %v0_b9f0, %v1_b9f0
  br i1 %v5_b9f4, label %dec_label_pc_bab0, label %dec_label_pc_b9f8

dec_label_pc_b9f8:                                ; preds = %dec_label_pc_b894
  %v2_b9fc = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_b9fc, i32* %sb.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 %v2_b9fc, i32* %r1.global-to-local, align 4
  store i32 %v0_b9f0, i32* %r0.global-to-local, align 4
  %v1_ba0c = call i32 @function_119ec(i32 %v0_b9f0)
  store i32 %v1_ba0c, i32* @r6, align 4
  %v0_ba14 = load i32, i32* @r4, align 4
  store i32 %v0_ba14, i32* %r0.global-to-local, align 4
  %v1_ba18 = call i32 @function_11c54(i32 %v0_ba14)
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_ba20 = call i32 @function_10988(i32 31)
  %v0_ba24 = load i32, i32* @sl, align 4
  store i32 %v0_ba24, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v2_ba2c = inttoptr i32 %v0_ba24 to i32*
  %v3_ba2c = call i32 @function_108c4(i32 31, i32* %v2_ba2c)
  %v0_ba30 = load i32, i32* @r6, align 4
  store i32 %v0_ba30, i32* @r1, align 4
  store i32 %v3_ba2c, i32* %r2.global-to-local, align 4
  store i32 %v2_b9fc, i32* %r0.global-to-local, align 4
  %v3_ba3c = bitcast i32* %stack_var_-2124 to i8*
  %v4_ba3c = call i32 @function_114e4(i8* %v3_ba3c, i32 %v0_ba30, i32 %v3_ba2c)
  store i32 %v4_ba3c, i32* @r8, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_ba48 = call i32 @function_108e8(i32 31)
  store i32 %v1_ba48, i32* %r0.global-to-local, align 4
  %v0_ba4c = load i32, i32* @r8, align 4
  %v7_ba4c = icmp eq i32 %v0_ba4c, -1
  store i1 %v7_ba4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba4c, label %dec_label_pc_bab0, label %dec_label_pc_ba54

dec_label_pc_ba54:                                ; preds = %dec_label_pc_b9f8
  %v0_ba54 = load i32, i32* @r6, align 4
  %v9_ba54 = icmp eq i32 %v0_ba54, %v0_ba4c
  store i1 %v9_ba54, i1* %cpsr_z.global-to-local, align 1
  %v7_ba58 = icmp sgt i32 %v0_ba54, %v0_ba4c
  br i1 %v7_ba58, label %dec_label_pc_ba5c, label %dec_label_pc_bab0

dec_label_pc_ba5c:                                ; preds = %dec_label_pc_ba54
  %v0_ba5c = load i32, i32* @sl, align 4
  store i32 %v0_ba5c, i32* %r1.global-to-local, align 4
  %v0_ba60 = load i32, i32* %sb.global-to-local, align 4
  %v2_ba60 = add i32 %v0_ba60, %v0_ba4c
  store i32 %v2_ba60, i32* %ip.global-to-local, align 4
  %v1_ba70 = add i32 %v0_ba54, -1
  br label %dec_label_pc_ba68

dec_label_pc_ba68:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba5c
  %v0_baa4 = phi i32 [ %v1_baa4, %dec_label_pc_baa4 ], [ %v0_ba4c, %dec_label_pc_ba5c ]
  %v0_ba8c = phi i32 [ %v0_ba8c27, %dec_label_pc_baa4 ], [ %v0_ba5c, %dec_label_pc_ba5c ]
  %v0_ba6c = phi i32 [ %v0_ba6c23, %dec_label_pc_baa4 ], [ %v0_ba5c, %dec_label_pc_ba5c ]
  %v0_ba74 = phi i32 [ %v1_ba74, %dec_label_pc_baa4 ], [ %v2_ba60, %dec_label_pc_ba5c ]
  %v1_ba68 = inttoptr i32 %v0_ba74 to i8*
  %v2_ba68 = load i8, i8* %v1_ba68, align 1
  %v3_ba68 = zext i8 %v2_ba68 to i32
  store i32 %v3_ba68, i32* %r0.global-to-local, align 4
  %v2_ba6c = icmp eq i32 %v0_ba6c, 0
  store i1 %v2_ba6c, i1* %cpsr_z.global-to-local, align 1
  %v1_ba74 = add i32 %v0_ba74, 1
  store i32 %v1_ba74, i32* %ip.global-to-local, align 4
  %v1_ba78 = add nsw i32 %v3_ba68, -48
  store i32 %v1_ba78, i32* @lr, align 4
  br i1 %v2_ba6c, label %dec_label_pc_ba80, label %dec_label_pc_ba90

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba68
  %v7_ba80 = icmp eq i8 %v2_ba68, 9
  store i1 %v7_ba80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba80, label %dec_label_pc_baa4, label %bb

bb:                                               ; preds = %dec_label_pc_ba80
  %v8_ba84 = icmp eq i8 %v2_ba68, 32
  store i1 %v8_ba84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ba84, label %dec_label_pc_baa4, label %dec_label_pc_ba8c

dec_label_pc_ba8c:                                ; preds = %bb
  %v1_ba8c = add i32 %v0_ba8c, 1
  store i32 %v1_ba8c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ba90

dec_label_pc_ba90:                                ; preds = %dec_label_pc_ba68, %dec_label_pc_ba8c
  %v0_ba8c28 = phi i32 [ %v0_ba8c, %dec_label_pc_ba68 ], [ %v1_ba8c, %dec_label_pc_ba8c ]
  %v0_ba6c24 = phi i32 [ %v0_ba6c, %dec_label_pc_ba68 ], [ %v1_ba8c, %dec_label_pc_ba8c ]
  %v7_ba90 = icmp eq i8 %v2_ba68, 46
  store i1 %v7_ba90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba90, label %dec_label_pc_ba9c, label %bb113

bb113:                                            ; preds = %dec_label_pc_ba90
  %v3_ba94 = icmp ugt i32 %v1_ba78, 8
  %v8_ba94 = icmp eq i32 %v1_ba78, 9
  store i1 %v8_ba94, i1* %cpsr_z.global-to-local, align 1
  %v2_ba98 = xor i1 %v8_ba94, true
  %v3_ba98 = and i1 %v3_ba94, %v2_ba98
  br i1 %v3_ba98, label %dec_label_pc_bf04, label %dec_label_pc_ba9c

dec_label_pc_ba9c:                                ; preds = %dec_label_pc_ba90, %bb113
  %v9_ba9c = icmp eq i32 %v1_ba70, %v0_baa4
  store i1 %v9_ba9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ba9c, label %dec_label_pc_bf04, label %dec_label_pc_baa4

dec_label_pc_baa4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba9c, %bb
  %v0_ba8c27 = phi i32 [ %v0_ba8c, %dec_label_pc_ba80 ], [ %v0_ba8c28, %dec_label_pc_ba9c ], [ %v0_ba8c, %bb ]
  %v0_ba6c23 = phi i32 [ 0, %dec_label_pc_ba80 ], [ %v0_ba6c24, %dec_label_pc_ba9c ], [ 0, %bb ]
  %v1_baa4 = add i32 %v0_baa4, 1
  %v9_baa8 = icmp eq i32 %v1_baa4, %v0_ba54
  store i1 %v9_baa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba68

dec_label_pc_bab0:                                ; preds = %dec_label_pc_baa4, %dec_label_pc_ba54, %dec_label_pc_b9f8, %dec_label_pc_b894
  %v0_bab0 = call i32 @function_db0c()
  %v1_bab4 = urem i32 %v0_bab0, 4
  store i32 %v1_bab4, i32* %r0.global-to-local, align 4
  %v2_bab8 = icmp eq i32 %v1_bab4, 3
  store i1 %v2_bab8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_bab0 to i2
  switch i2 %trunc, label %dec_label_pc_bae48 [
    i2 0, label %dec_label_pc_bf50
    i2 1, label %dec_label_pc_bf64
    i2 -2, label %dec_label_pc_bf40
    i2 -1, label %dec_label_pc_bad4
  ]

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bae48:                               ; preds = %dec_label_pc_bab0
  unreachable

dec_label_pc_bae4:                                ; preds = %dec_label_pc_bf64, %dec_label_pc_bf50, %dec_label_pc_bf40, %dec_label_pc_bf04, %dec_label_pc_bad4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_bad4 ], [ 104859200, %dec_label_pc_bf40 ], [ 707416650, %dec_label_pc_bf64 ], [ 134744072, %dec_label_pc_bf50 ], [ %v1_bf34, %dec_label_pc_bf04 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bae8 = call i32 @function_118d4(i32* null)
  %v0_baec = load i32, i32* @r7, align 4
  %v2_baec = icmp eq i32 %v0_baec, 0
  store i1 %v2_baec, i1* %cpsr_z.global-to-local, align 1
  %v1_baf0 = load i32, i32* @fp, align 4
  %v2_baf0 = add i32 %v1_baf0, %v2_bae8
  store i32 %v2_baf0, i32* %r0.global-to-local, align 4
  br i1 %v2_baec, label %dec_label_pc_bedc, label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bae4
  store i32 %v0_baec, i32* %r0.global-to-local, align 4
  %v1_bb00 = inttoptr i32 %v0_baec to i8*
  %v2_bb00 = call i32 @function_11194(i8* %v1_bb00)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_bb14 = call i32 @function_12464(i32 2, i32 3, i32 17)
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v7_bb18 = icmp eq i32 %v3_bb14, -1
  store i1 %v7_bb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb18, label %dec_label_pc_bedc, label %dec_label_pc_bb24

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bafc
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bb2c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bb2c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bb40 = call i32 @function_12420(i32 %v3_bb14, i32 0, i32 3, i32 %v6_bb2c, i32 4)
  store i32 %v5_bb40, i32* %r0.global-to-local, align 4
  %v7_bb44 = icmp eq i32 %v5_bb40, -1
  store i1 %v7_bb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bb44, label %dec_label_pc_bed4, label %dec_label_pc_bb4c

dec_label_pc_bb4c:                                ; preds = %dec_label_pc_bb24
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_bb60 = mul i32 %v7_b900, 65536
  store i32 %v3_bb60, i32* %r6.global-to-local, align 4
  %v3_bb68 = mul i32 %v6_b974, 65536
  store i32 %v3_bb68, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_bb78 = urem i32 %v7_b900, 65536
  %v3_bb7c = urem i32 %v6_b95c, 65536
  store i32 %v3_bb7c, i32* %r0.global-to-local, align 4
  %v3_bb80 = urem i32 %v6_b974, 65536
  store i32 %v3_bb80, i32* %r1.global-to-local, align 4
  %v3_bb84 = urem i32 %v6_b990, 65536
  store i32 %v3_bb84, i32* %r2.global-to-local, align 4
  %v2_bb88 = icmp eq i32 %arg2, 0
  store i1 %v2_bb88, i1* %cpsr_z.global-to-local, align 1
  %v1_bb8c = urem i32 %v6_b9a8, 256
  store i32 %v1_bb8c, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb88, label %dec_label_pc_beec.critedge, label %dec_label_pc_bba8

dec_label_pc_bba8:                                ; preds = %dec_label_pc_bb4c
  %v3_bb5c = mul i32 %v6_b990, 65536
  %v2_bbb4 = add i32 %v2_bb00, %v1_bb8c
  %v3_bbb8 = mul i32 %v2_bbb4, 65536
  %v1_bbc4 = add i32 %v3_bbb8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_bb80, 256
  %v3_bbc8 = and i32 %tmp114, 65280
  %v1_bbcc = add i32 %v3_bbb8, 3080192
  %tmp115 = udiv i32 %v6_b974, 256
  %v4_bbdc = urem i32 %tmp115, 256
  %v5_bbdc = or i32 %v3_bbc8, %v4_bbdc
  store i32 %v5_bbdc, i32* @sb, align 4
  store i32 %v3_bb5c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_bbc4, 256
  %v3_bbe4 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_bbcc, 256
  %v3_bbe8 = and i32 %tmp117, 65280
  store i32 %v3_bbe8, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_b990, 256
  %v3_bbec = and i32 %tmp118, 65280
  %v4_bbf0 = udiv i32 %v1_bbc4, 16777216
  %v5_bbf0 = or i32 %v3_bbe4, %v4_bbf0
  store i32 %v5_bbf0, i32* @fp, align 4
  %tmp119 = mul i32 %v7_b900, 256
  %v3_bbf8 = and i32 %tmp119, 65280
  store i32 %v3_bbf8, i32* %r1.global-to-local, align 4
  %v4_bbfc = udiv i32 %v1_bbcc, 16777216
  %v5_bbfc = or i32 %v3_bbe8, %v4_bbfc
  store i32 %v5_bbfc, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_b990, 256
  %v4_bc00 = urem i32 %tmp120, 256
  %v5_bc00 = or i32 %v4_bc00, %v3_bbec
  store i32 %v5_bc00, i32* @r4, align 4
  store i32 %v2_bb00, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_b900, 256
  %v4_bc08 = urem i32 %tmp121, 256
  %v5_bc08 = or i32 %v4_bc08, %v3_bbf8
  %tmp122 = mul i32 %v6_b95c, 256
  %v3_bc0c = and i32 %tmp122, 65280
  store i32 %v3_bc0c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_b95c, 256
  %v4_bc1c = urem i32 %tmp123, 256
  %v5_bc1c = or i32 %v4_bc1c, %v3_bc0c
  store i32 %v5_bc1c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_bc24 = add i32 %v2_bb00, 1
  store i32 %v1_bc24, i32* @r6, align 4
  %v1_bc6c = trunc i32 %v6_b8dc to i8
  %sext = mul nuw i32 %v5_bbfc, 65536
  %v4_bc78 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bc08, 65536
  %v4_bc7c = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bc00, 65536
  %v4_bcd8 = sdiv i32 %sext7, 65536
  %v2_bcfc = icmp eq i32 %v2_bb00, 0
  %tmp124 = icmp slt i32 %v2_bb00, 1
  %v1_bc84 = trunc i32 %v5_b938 to i8
  br label %dec_label_pc_bc28

dec_label_pc_bc28:                                ; preds = %dec_label_pc_bd48, %dec_label_pc_bba8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_bc30 = call i32 @function_12fcc(i32 600, i32 1)
  store i32 %v2_bc30, i32* %r0.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r1.global-to-local, align 4
  %v3_bc38 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc38, i32* %r3.global-to-local, align 4
  %v2_bc3c = load i32, i32* @r5, align 4
  %v5_bc3c = mul i32 %v2_bc3c, 4
  %v6_bc3c = add i32 %v5_bc3c, %v2_b8c4
  %v7_bc3c = inttoptr i32 %v6_bc3c to i32*
  store i32 %v2_bc30, i32* %v7_bc3c, align 4
  %v0_bc40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc40 = load i32, i32* %r3.global-to-local, align 4
  %v4_bc40 = mul i32 %v1_bc40, 4
  %v5_bc40 = add i32 %v4_bc40, %v0_bc40
  %v6_bc40 = inttoptr i32 %v5_bc40 to i32*
  %v7_bc40 = load i32, i32* %v6_bc40, align 4
  store i32 %v7_bc40, i32* %r1.global-to-local, align 4
  %v1_bc44 = inttoptr i32 %v7_bc40 to i8*
  %v2_bc44 = load i8, i8* %v1_bc44, align 1
  %tmp = urem i8 %v2_bc44, 16
  %v1_bc48 = zext i8 %tmp to i32
  %v1_bc4c = or i32 %v1_bc48, 64
  store i32 %v1_bc4c, i32* %r2.global-to-local, align 4
  %v1_bc50 = trunc i32 %v1_bc4c to i8
  store i8 %v1_bc50, i8* %v1_bc44, align 1
  %v0_bc54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bc54 = inttoptr i32 %v0_bc54 to i8*
  %v2_bc54 = load i8, i8* %v1_bc54, align 1
  %v1_bc58 = and i8 %v2_bc54, -16
  %v1_bc5c = or i8 %v1_bc58, 5
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  store i8 %v1_bc5c, i8* %v1_bc54, align 1
  store i32 %v1_b8e8, i32* %lr.global-to-local, align 4
  %v2_bc6c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc6c = add i32 %v2_bc6c, 1
  %v4_bc6c = inttoptr i32 %v3_bc6c to i8*
  store i8 %v1_bc6c, i8* %v4_bc6c, align 1
  store i32 %v5_b938, i32* %r3.global-to-local, align 4
  %v0_bc74 = load i32, i32* %ip.global-to-local, align 4
  %v2_bc74 = icmp eq i32 %v0_bc74, 0
  store i1 %v2_bc74, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_bc78, i32* %r0.global-to-local, align 4
  store i32 %v4_bc7c, i32* %r2.global-to-local, align 4
  br i1 %v2_bc74, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_bc28
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_bc28, %bb125
  %v2_bc84 = load i32, i32* %r1.global-to-local, align 4
  %v3_bc84 = add i32 %v2_bc84, 8
  %v4_bc84 = inttoptr i32 %v3_bc84 to i8*
  store i8 %v1_bc84, i8* %v4_bc84, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bc8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc8c = add i32 %v2_bc8c, 9
  %v4_bc8c = inttoptr i32 %v3_bc8c to i8*
  store i8 17, i8* %v4_bc8c, align 1
  %v0_bc90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bc90, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_bc90 = load i32, i32* %lr.global-to-local, align 4
  %v2_bc90 = trunc i32 %v1_bc90 to i16
  %v3_bc90 = load i32, i32* %r1.global-to-local, align 4
  %v4_bc90 = add i32 %v3_bc90, 6
  %v5_bc90 = inttoptr i32 %v4_bc90 to i16*
  store i16 %v2_bc90, i16* %v5_bc90, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* @lr, align 4
  %v0_bc98 = load i32, i32* %r0.global-to-local, align 4
  %v1_bc98 = trunc i32 %v0_bc98 to i16
  %v2_bc98 = load i32, i32* %r1.global-to-local, align 4
  %v3_bc98 = add i32 %v2_bc98, 2
  %v4_bc98 = inttoptr i32 %v3_bc98 to i16*
  store i16 %v1_bc98, i16* %v4_bc98, align 2
  %v0_bc9c = load i32, i32* %r2.global-to-local, align 4
  %v1_bc9c = trunc i32 %v0_bc9c to i16
  %v2_bc9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bc9c = add i32 %v2_bc9c, 4
  %v4_bc9c = inttoptr i32 %v3_bc9c to i16*
  store i16 %v1_bc9c, i16* %v4_bc9c, align 2
  %v2_bca0 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_bca0, i32* %r3.global-to-local, align 4
  %v0_bca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bca4 = add i32 %v0_bca4, 20
  store i32 %v1_bca4, i32* %r0.global-to-local, align 4
  %v1_bca8 = add i32 %v0_bca4, 41
  store i32 %v1_bca8, i32* %r2.global-to-local, align 4
  %v0_bcac = load i32, i32* @fp, align 4
  %v1_bcac = trunc i32 %v0_bcac to i16
  %v3_bcac = add i32 %v0_bca4, 24
  %v4_bcac = inttoptr i32 %v3_bcac to i16*
  store i16 %v1_bcac, i16* %v4_bcac, align 2
  %v0_bcb0 = load i32, i32* @sb, align 4
  %v1_bcb0 = trunc i32 %v0_bcb0 to i16
  %v2_bcb0 = load i32, i32* %r0.global-to-local, align 4
  %v3_bcb0 = add i32 %v2_bcb0, 2
  %v4_bcb0 = inttoptr i32 %v3_bcb0 to i16*
  store i16 %v1_bcb0, i16* %v4_bcb0, align 2
  %v0_bcb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_bcb4 = add i32 %v0_bcb4, 28
  store i32 %v1_bcb4, i32* %ip.global-to-local, align 4
  %v0_bcb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcb8 = load i32, i32* @sl, align 4
  %v2_bcb8 = add i32 %v1_bcb8, %v0_bcb8
  store i32 %v2_bcb8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_bcc4 = load i32, i32* @r8, align 4
  %v1_bcc4 = trunc i32 %v0_bcc4 to i16
  %v3_bcc4 = add i32 %v0_bcb4, 20
  %v4_bcc4 = inttoptr i32 %v3_bcc4 to i16*
  store i16 %v1_bcc4, i16* %v4_bcc4, align 2
  %v0_bcc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_bcc8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bcc8 = add i32 %v1_bcc8, 12
  %v3_bcc8 = inttoptr i32 %v2_bcc8 to i32*
  store i32 %v0_bcc8, i32* %v3_bcc8, align 4
  %v0_bccc = load i32, i32* %r0.global-to-local, align 4
  %v1_bccc = trunc i32 %v0_bccc to i16
  %v2_bccc = load i32, i32* %ip.global-to-local, align 4
  %v3_bccc = add i32 %v2_bccc, 4
  %v4_bccc = inttoptr i32 %v3_bccc to i16*
  store i16 %v1_bccc, i16* %v4_bccc, align 2
  %v0_bcd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bcd0 = trunc i32 %v0_bcd0 to i16
  %v2_bcd0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bcd0 = add i32 %v2_bcd0, 2
  %v4_bcd0 = inttoptr i32 %v3_bcd0 to i16*
  store i16 %v1_bcd0, i16* %v4_bcd0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_bcd8, i32* %ip.global-to-local, align 4
  %v1_bcdc = load i32, i32* %r1.global-to-local, align 4
  %v2_bcdc = add i32 %v1_bcdc, 16
  %v3_bcdc = inttoptr i32 %v2_bcdc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_bcdc, align 4
  %v0_bce0 = load i32, i32* %ip.global-to-local, align 4
  %v1_bce0 = trunc i32 %v0_bce0 to i16
  %v2_bce0 = load i32, i32* %r1.global-to-local, align 4
  %v3_bce0 = add i32 %v2_bce0, 28
  %v4_bce0 = inttoptr i32 %v3_bce0 to i16*
  store i16 %v1_bce0, i16* %v4_bce0, align 2
  %v0_bce4 = load i32, i32* @sl, align 4
  %v1_bce4 = trunc i32 %v0_bce4 to i8
  %v2_bce4 = load i32, i32* %r1.global-to-local, align 4
  %v3_bce4 = add i32 %v2_bce4, 40
  %v4_bce4 = inttoptr i32 %v3_bce4 to i8*
  store i8 %v1_bce4, i8* %v4_bce4, align 1
  %v0_bce8 = load i32, i32* @r4, align 4
  %v1_bce8 = add i32 %v0_bce8, 1
  store i32 %v1_bce8, i32* %r0.global-to-local, align 4
  %v0_bcec = load i32, i32* @r7, align 4
  store i32 %v0_bcec, i32* %r1.global-to-local, align 4
  %v0_bcf0 = load i32, i32* @r6, align 4
  store i32 %v0_bcf0, i32* %r2.global-to-local, align 4
  %v3_bcf4 = call i32 @function_11204(i32 %v1_bce8, i32 %v0_bcec, i32 %v0_bcf0)
  store i32 %v3_bcf4, i32* %r0.global-to-local, align 4
  store i32 %v2_bb00, i32* %lr.global-to-local, align 4
  store i1 %v2_bcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_bd48_crit_edge, label %dec_label_pc_bd0c

.dec_label_pc_bd48_crit_edge:                     ; preds = %bb128
  %v5_bd00 = load i32, i32* @r4, align 4
  store i32 %v5_bd00, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bd48

dec_label_pc_bd0c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_bd10 = load i32, i32* @r4, align 4
  store i32 %v0_bd10, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bd18

dec_label_pc_bd18:                                ; preds = %.thread19, %dec_label_pc_bd0c
  %v1_bd20 = phi i32 [ %v1_bd2035, %.thread19 ], [ 0, %dec_label_pc_bd0c ]
  %v0_bd3417 = phi i32 [ %v0_bd40, %.thread19 ], [ 0, %dec_label_pc_bd0c ]
  %v1_bd18 = load i32, i32* @r7, align 4
  %v2_bd18 = add i32 %v1_bd18, %v0_bd3417
  %v3_bd18 = inttoptr i32 %v2_bd18 to i8*
  %v4_bd18 = load i8, i8* %v3_bd18, align 1
  %v6_bd18 = zext i8 %v4_bd18 to i32
  store i32 %v6_bd18, i32* %r3.global-to-local, align 4
  %v7_bd1c = icmp eq i8 %v4_bd18, 46
  store i1 %v7_bd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bd1c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_bd18
  %v2_bd20 = trunc i32 %v1_bd20 to i8
  %v3_bd20 = load i32, i32* %r0.global-to-local, align 4
  %v4_bd20 = inttoptr i32 %v3_bd20 to i8*
  store i8 %v2_bd20, i8* %v4_bd20, align 1
  %v0_bd28.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_bd24 = load i32, i32* %ip.global-to-local, align 4
  %v1_bd24 = add i32 %v0_bd24, 1
  store i32 %v1_bd24, i32* %r2.global-to-local, align 4
  br i1 %v0_bd28.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_bd2815 = urem i32 %v1_bd24, 256
  store i32 %v2_bd2815, i32* %ip.global-to-local, align 4
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v0_bd34.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_bd34 = add i32 %v0_bd34.pre, 1
  store i32 %v1_bd34, i32* %r1.global-to-local, align 4
  br label %.thread19

bb131:                                            ; preds = %dec_label_pc_bd18
  %v1_bd2411 = add nsw i32 %v1_bd20, 1
  %v2_bd28 = urem i32 %v1_bd2411, 256
  store i32 %v2_bd28, i32* %ip.global-to-local, align 4
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v1_bd3418 = add i32 %v0_bd3417, 1
  store i32 %v1_bd3418, i32* %r1.global-to-local, align 4
  br label %.thread19

bb132:                                            ; preds = %bb129
  store i32 %v2_bb00, i32* %r2.global-to-local, align 4
  %v1_bd30.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_bd30 = load i32, i32* @r4, align 4
  %v3_bd30 = add i32 %v2_bd30, %v1_bd30.pre
  store i32 %v3_bd30, i32* %r3.global-to-local, align 4
  %v1_bd3465 = add i32 %v1_bd30.pre, 1
  store i32 %v1_bd3465, i32* %r1.global-to-local, align 4
  %v2_bd38 = add i32 %v3_bd30, 1
  store i32 %v2_bd38, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread19

.thread19:                                        ; preds = %bb131, %bb130, %bb132
  %v0_bd40 = phi i32 [ %v1_bd34, %bb130 ], [ %v1_bd3418, %bb131 ], [ %v1_bd3465, %bb132 ]
  %v1_bd2035 = phi i32 [ %v2_bd2815, %bb130 ], [ %v2_bd28, %bb131 ], [ 0, %bb132 ]
  %v9_bd40 = icmp eq i32 %v0_bd40, %v2_bb00
  store i1 %v9_bd40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd40, label %dec_label_pc_bd48.loopexit, label %dec_label_pc_bd18

dec_label_pc_bd48.loopexit:                       ; preds = %.thread19
  %v2_bd48.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_bd2035 to i8
  br label %dec_label_pc_bd48

dec_label_pc_bd48:                                ; preds = %.dec_label_pc_bd48_crit_edge, %dec_label_pc_bd48.loopexit
  %v0_bd48.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_bd48_crit_edge ], [ %extract.t71, %dec_label_pc_bd48.loopexit ]
  %v2_bd48 = phi i32 [ %v5_bd00, %.dec_label_pc_bd48_crit_edge ], [ %v2_bd48.pre, %dec_label_pc_bd48.loopexit ]
  %v3_bd48 = inttoptr i32 %v2_bd48 to i8*
  store i8 %v0_bd48.pre.sink.off0, i8* %v3_bd48, align 1
  %v3_bd4c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_bd54 = add i32 %v3_bd4c, 1
  store i32 %v1_bd54, i32* @r5, align 4
  store i32 %v2_bb00, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_bd60 = load i32, i32* @r4, align 4
  %v2_bd60 = add i32 %v0_bd60, %v2_bb00
  store i32 %v2_bd60, i32* %r2.global-to-local, align 4
  %v9_bd64 = icmp eq i32 %v1_bd54, %arg2
  store i1 %v9_bd64, i1* %cpsr_z.global-to-local, align 1
  %v3_bd68 = add i32 %v2_bd60, 4
  %v4_bd68 = inttoptr i32 %v3_bd68 to i16*
  store i16 256, i16* %v4_bd68, align 2
  %v0_bd6c = load i32, i32* @lr, align 4
  %v1_bd6c = trunc i32 %v0_bd6c to i16
  %v2_bd6c = load i32, i32* %r2.global-to-local, align 4
  %v3_bd6c = add i32 %v2_bd6c, 2
  %v4_bd6c = inttoptr i32 %v3_bd6c to i16*
  store i16 %v1_bd6c, i16* %v4_bd6c, align 2
  %v0_bd70 = load i32, i32* @r5, align 4
  store i32 %v0_bd70, i32* %stack_var_-44, align 4
  %v8_bd74 = icmp slt i32 %v1_bd54, %arg2
  br i1 %v8_bd74, label %dec_label_pc_bc28, label %dec_label_pc_bd78

dec_label_pc_bd78:                                ; preds = %dec_label_pc_bd48, %dec_label_pc_beec
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_bb88, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bb88, label %dec_label_pc_beec, label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd78
  store i32 %v2_bb00, i32* %r1.global-to-local, align 4
  %v1_bd90 = load i32, i32* @sl, align 4
  %v2_bd90 = add i32 %v1_bd90, %v2_bb00
  store i32 %v2_bd90, i32* %r3.global-to-local, align 4
  %v1_bd94 = add i32 %v2_bd90, 47
  store i32 %v1_bd94, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_bd9c = add i32 %v2_bd90, 27
  store i32 %v1_bd9c, i32* @sb, align 4
  %v3_be78 = icmp eq i32 %v3_bb78, 65535
  %v3_bda8 = icmp eq i32 %v3_bb7c, 65535
  br label %dec_label_pc_be64

dec_label_pc_bda4:                                ; preds = %dec_label_pc_be64
  store i32 %v3_bb7c, i32* %ip.global-to-local, align 4
  store i1 %v3_bda8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bda8, label %dec_label_pc_bea0, label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge, %dec_label_pc_bda4
  %v1_bdb4 = phi i32 [ %v1_bdb4.pre, %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge ], [ 65535, %dec_label_pc_bda4 ]
  store i32 %v3_bb80, i32* @lr, align 4
  %v9_bdb4 = icmp eq i32 %v3_bb80, %v1_bdb4
  store i1 %v9_bdb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdb4, label %dec_label_pc_beb4, label %dec_label_pc_bdbc

dec_label_pc_bdbc:                                ; preds = %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge, %dec_label_pc_bdb0
  %v1_bdc0 = phi i32 [ %v1_bdc0.pre, %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge ], [ %v1_bdb4, %dec_label_pc_bdb0 ]
  store i32 %v3_bb84, i32* %r0.global-to-local, align 4
  %v9_bdc0 = icmp eq i32 %v3_bb84, %v1_bdc0
  store i1 %v9_bdc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bdc0, label %dec_label_pc_bec8, label %dec_label_pc_bdc8

dec_label_pc_bdc8:                                ; preds = %dec_label_pc_beb4, %dec_label_pc_bdbc, %dec_label_pc_bec8
  %v0_bdc8 = load i32, i32* @r7, align 4
  store i32 %v0_bdc8, i32* %r0.global-to-local, align 4
  %v0_bdcc = load i32, i32* @sl, align 4
  store i32 %v0_bdcc, i32* %r1.global-to-local, align 4
  %v2_bdd0 = call i32 @function_dbd0(i32 %v0_bdc8, i32 %v0_bdcc)
  %v0_bdd4 = load i32, i32* @r8, align 4
  %v1_bdd4 = trunc i32 %v0_bdd4 to i8
  %v2_bdd4 = load i32, i32* @r7, align 4
  %v3_bdd4 = load i32, i32* @sl, align 4
  %v4_bdd4 = add i32 %v3_bdd4, %v2_bdd4
  %v5_bdd4 = inttoptr i32 %v4_bdd4 to i8*
  store i8 %v1_bdd4, i8* %v5_bdd4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bddc = load i32, i32* @r8, align 4
  %v1_bddc = trunc i32 %v0_bddc to i16
  %v2_bddc = load i32, i32* @r4, align 4
  %v3_bddc = add i32 %v2_bddc, 10
  %v4_bddc = inttoptr i32 %v3_bddc to i16*
  store i16 %v1_bddc, i16* %v4_bddc, align 2
  %v0_bde0 = load i32, i32* @r4, align 4
  store i32 %v0_bde0, i32* @r0, align 4
  %v2_bde4 = call i32 @function_bf78(i32 %v0_bde0, i32 20)
  %v3_bde4 = trunc i32 %v2_bde4 to i16
  store i32 %v2_bde4, i32* %r0.global-to-local, align 4
  %v3_bde8 = load i32, i32* @r4, align 4
  %v4_bde8 = add i32 %v3_bde8, 10
  %v5_bde8 = inttoptr i32 %v4_bde8 to i16*
  store i16 %v3_bde4, i16* %v5_bde8, align 2
  %v0_bdec = load i32, i32* @r6, align 4
  store i32 %v0_bdec, i32* @r1, align 4
  %v1_bdf0 = add i32 %v0_bdec, 4
  %v2_bdf0 = inttoptr i32 %v1_bdf0 to i16*
  %v3_bdf0 = load i16, i16* %v2_bdf0, align 2
  %v4_bdf0 = zext i16 %v3_bdf0 to i32
  store i32 %v4_bdf0, i32* %r2.global-to-local, align 4
  %v0_bdf4 = load i32, i32* @r8, align 4
  %v1_bdf4 = trunc i32 %v0_bdf4 to i16
  %v3_bdf4 = add i32 %v0_bdec, 6
  %v4_bdf4 = inttoptr i32 %v3_bdf4 to i16*
  store i16 %v1_bdf4, i16* %v4_bdf4, align 2
  %v0_bdf8 = load i32, i32* @sb, align 4
  store i32 %v0_bdf8, i32* %r3.global-to-local, align 4
  %v0_bdfc = load i32, i32* @r4, align 4
  store i32 %v0_bdfc, i32* %r0.global-to-local, align 4
  %v4_be00 = call i32 @function_bfc8(i32 %v0_bdfc, i32 %v0_bdec, i32 %v4_bdf0, i32 %v0_bdf8)
  %v5_be00 = trunc i32 %v4_be00 to i16
  store i32 %v4_be00, i32* %r0.global-to-local, align 4
  %v3_be04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_be04, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_be0c = mul i32 %v3_be04, 32
  store i32 %v3_be0c, i32* %ip.global-to-local, align 4
  %v3_be10 = load i32, i32* @r6, align 4
  %v4_be10 = add i32 %v3_be10, 6
  %v5_be10 = inttoptr i32 %v4_be10 to i16*
  store i16 %v5_be00, i16* %v5_be10, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_be18 = load i32, i32* @r6, align 4
  %v1_be18 = add i32 %v0_be18, 2
  %v2_be18 = inttoptr i32 %v1_be18 to i16*
  %v3_be18 = load i16, i16* %v2_be18, align 2
  %v4_be18 = zext i16 %v3_be18 to i32
  store i32 %v4_be18, i32* %r6.global-to-local, align 4
  %v0_be1c = load i32, i32* %ip.global-to-local, align 4
  %v1_be1c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_be1c, -8
  %v5_be1c = add i32 %v0_be1c, %tmp135
  %v1_be20 = load i32, i32* %r1.global-to-local, align 4
  %v2_be20 = add i32 %v1_be20, %v5_be1c
  store i32 %v2_be20, i32* %ip.global-to-local, align 4
  %v2_be24 = add i32 %v2_be20, 4
  %v3_be24 = inttoptr i32 %v2_be24 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_be24, align 4
  %v0_be28 = load i32, i32* %r6.global-to-local, align 4
  %v1_be28 = trunc i32 %v0_be28 to i16
  %v2_be28 = load i32, i32* %ip.global-to-local, align 4
  %v3_be28 = add i32 %v2_be28, 2
  %v4_be28 = inttoptr i32 %v3_be28 to i16*
  store i16 %v1_be28, i16* %v4_be28, align 2
  %v0_be2c = load i32, i32* @r4, align 4
  store i32 %v0_be2c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v0_be38 = load i32, i32* @fp, align 4
  store i32 %v0_be38, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_be40 = load i32, i32* %ip.global-to-local, align 4
  %v6_be48 = call i32 @function_123e0(i32 %v3_bb14, i32 %v0_be2c, i32 %v0_be38, i32 16384, i32 %v0_be40, i32 16)
  %v3_be4c = load i32, i32* %stack_var_-44, align 4
  %v1_be50 = add i32 %v3_be4c, 1
  store i32 %v1_be50, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_be58 = icmp eq i32 %v1_be50, %arg2
  store i1 %v9_be58, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_be50, i32* %stack_var_-44, align 4
  %v7_be60 = icmp slt i32 %v1_be50, %arg2
  br i1 %v7_be60, label %dec_label_pc_be64, label %dec_label_pc_beec

dec_label_pc_be64:                                ; preds = %dec_label_pc_bdc8, %dec_label_pc_bd8c
  %v1_be70 = phi i32 [ %v1_be50, %dec_label_pc_bdc8 ], [ 0, %dec_label_pc_bd8c ]
  store i32 %v2_b8c4, i32* %r2.global-to-local, align 4
  store i32 %v3_bb78, i32* %r3.global-to-local, align 4
  %v4_be70 = mul i32 %v1_be70, 4
  %v5_be70 = add i32 %v4_be70, %v2_b8c4
  %v6_be70 = inttoptr i32 %v5_be70 to i32*
  %v7_be70 = load i32, i32* %v6_be70, align 4
  store i32 %v7_be70, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_be78, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_be80 = add i32 %v7_be70, 20
  store i32 %v1_be80, i32* @r6, align 4
  %v1_be84 = add i32 %v7_be70, 41
  store i32 %v1_be84, i32* @r7, align 4
  br i1 %v3_be78, label %dec_label_pc_be8c, label %dec_label_pc_bda4

dec_label_pc_be8c:                                ; preds = %dec_label_pc_be64
  %v0_be8c = call i32 @function_db0c()
  %v1_be8c = trunc i32 %v0_be8c to i16
  store i32 %v0_be8c, i32* %r0.global-to-local, align 4
  store i32 %v3_bb7c, i32* %ip.global-to-local, align 4
  %v1_be94 = load i32, i32* @r5, align 4
  %v9_be94 = icmp eq i32 %v3_bb7c, %v1_be94
  store i1 %v9_be94, i1* %cpsr_z.global-to-local, align 1
  %v3_be98 = load i32, i32* @r4, align 4
  %v4_be98 = add i32 %v3_be98, 4
  %v5_be98 = inttoptr i32 %v4_be98 to i16*
  store i16 %v1_be8c, i16* %v5_be98, align 2
  br i1 %v9_be94, label %dec_label_pc_bea0, label %dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge

dec_label_pc_be8c.dec_label_pc_bdb0_crit_edge:    ; preds = %dec_label_pc_be8c
  %v1_bdb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdb0

dec_label_pc_bea0:                                ; preds = %dec_label_pc_be8c, %dec_label_pc_bda4
  %v0_bea0 = call i32 @function_db0c()
  %v1_bea0 = trunc i32 %v0_bea0 to i16
  store i32 %v0_bea0, i32* %r0.global-to-local, align 4
  store i32 %v3_bb80, i32* @lr, align 4
  %v1_bea8 = load i32, i32* @r5, align 4
  %v9_bea8 = icmp eq i32 %v3_bb80, %v1_bea8
  store i1 %v9_bea8, i1* %cpsr_z.global-to-local, align 1
  %v3_beac = load i32, i32* @r4, align 4
  %v4_beac = add i32 %v3_beac, 20
  %v5_beac = inttoptr i32 %v4_beac to i16*
  store i16 %v1_bea0, i16* %v5_beac, align 2
  br i1 %v9_bea8, label %dec_label_pc_beb4, label %dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge

dec_label_pc_bea0.dec_label_pc_bdbc_crit_edge:    ; preds = %dec_label_pc_bea0
  %v1_bdc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_bdbc

dec_label_pc_beb4:                                ; preds = %dec_label_pc_bea0, %dec_label_pc_bdb0
  %v0_beb4 = call i32 @function_db0c()
  %v1_beb4 = trunc i32 %v0_beb4 to i16
  %v3_beb8 = load i32, i32* @r6, align 4
  %v4_beb8 = add i32 %v3_beb8, 2
  %v5_beb8 = inttoptr i32 %v4_beb8 to i16*
  store i16 %v1_beb4, i16* %v5_beb8, align 2
  store i32 %v3_bb84, i32* %r0.global-to-local, align 4
  %v1_bec0 = load i32, i32* @r5, align 4
  %v9_bec0 = icmp eq i32 %v3_bb84, %v1_bec0
  store i1 %v9_bec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bec0, label %dec_label_pc_bec8, label %dec_label_pc_bdc8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_beb4, %dec_label_pc_bdbc
  %v0_bec8 = call i32 @function_db0c()
  %v1_bec8 = trunc i32 %v0_bec8 to i16
  store i32 %v0_bec8, i32* %r0.global-to-local, align 4
  %v3_becc = load i32, i32* @r4, align 4
  %v4_becc = add i32 %v3_becc, 28
  %v5_becc = inttoptr i32 %v4_becc to i16*
  store i16 %v1_bec8, i16* %v5_becc, align 2
  br label %dec_label_pc_bdc8

dec_label_pc_bed4:                                ; preds = %dec_label_pc_bb24
  store i32 %v3_bb14, i32* %r0.global-to-local, align 4
  %v1_bed8 = call i32 @function_11c54(i32 %v3_bb14)
  store i32 %v1_bed8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_beec, %dec_label_pc_bafc, %dec_label_pc_bae4, %dec_label_pc_bed4
  %v1_bee8 = phi i32 [ %v3_bb14, %dec_label_pc_bafc ], [ %v2_baf0, %dec_label_pc_bae4 ], [ %v1_bed8, %dec_label_pc_bed4 ], [ %v2_bef0, %dec_label_pc_beec ]
  store i32 %v9_b894, i32* %r6.global-to-local, align 4
  store i32 %v18_b894, i32* %sb.global-to-local, align 4
  store i32 %v27_b894, i32* %lr.global-to-local, align 4
  ret i32 %v1_bee8

dec_label_pc_beec.critedge:                       ; preds = %dec_label_pc_bb4c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_bdc8, %dec_label_pc_beec.critedge, %dec_label_pc_bd78
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bef0 = call i32 @function_118d4(i32* null)
  store i32 %v2_bef0, i32* %r0.global-to-local, align 4
  %v9_bef8 = icmp eq i32 %v2_baf0, %v2_bef0
  store i1 %v9_bef8, i1* %cpsr_z.global-to-local, align 1
  %v6_befc = icmp slt i32 %v2_baf0, %v2_bef0
  br i1 %v6_befc, label %dec_label_pc_bedc, label %dec_label_pc_bd78

dec_label_pc_bf04:                                ; preds = %dec_label_pc_ba9c, %bb113
  %v0_baa4.lcssa = phi i32 [ %v1_ba70, %dec_label_pc_ba9c ], [ %v0_baa4, %bb113 ]
  %v2_bf08 = sub i32 %v0_baa4.lcssa, %v0_ba4c
  store i32 %v2_bf08, i32* @r4, align 4
  %v2_bf0c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_ba60, i32* %r1.global-to-local, align 4
  store i32 %v2_bf0c, i32* %r0.global-to-local, align 4
  store i32 %v2_bf08, i32* %r2.global-to-local, align 4
  %v3_bf1c = call i32 @function_11204(i32 %v2_bf0c, i32 %v2_ba60, i32 %v2_bf08)
  %v2_bf20 = ptrtoint i32* %stack_var_-40 to i32
  %v1_bf24 = load i32, i32* @r4, align 4
  %v2_bf24 = add i32 %v1_bf24, %v2_bf20
  store i32 %v2_bf24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bf0c, i32* @r0, align 4
  %v3_bf30 = add i32 %v2_bf24, -36
  %v4_bf30 = inttoptr i32 %v3_bf30 to i8*
  store i8 0, i8* %v4_bf30, align 1
  %v1_bf34 = call i32 @function_121b4(i32 %v2_bf0c)
  store i32 %v1_bf34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bab0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bab0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_bae4

dec_label_pc_bf64:                                ; preds = %dec_label_pc_bab0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_bae4

; uselistorder directives
  uselistorder i32 %v1_bf34, { 1, 0 }
  uselistorder i32 %v2_bf0c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_bf08, { 1, 0, 2 }
  uselistorder i32 %v2_bef0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_bec8, { 1, 0 }
  uselistorder i32 %v0_bea0, { 1, 0 }
  uselistorder i32 %v0_be8c, { 1, 0 }
  uselistorder i32 %v7_be70, { 1, 0, 2 }
  uselistorder i32 %v1_be50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_be00, { 1, 0 }
  uselistorder i32 %v0_bdec, { 1, 0, 2, 3 }
  uselistorder i32 %v2_bde4, { 1, 0 }
  uselistorder i1 %v3_bda8, { 1, 0 }
  uselistorder i1 %v3_be78, { 1, 0 }
  uselistorder i32 %v1_bd30.pre, { 1, 0 }
  uselistorder i32 %v2_bd28, { 1, 0 }
  uselistorder i32 %v2_bd2815, { 1, 0 }
  uselistorder i32 %v0_bd3417, { 1, 0 }
  uselistorder i32 %v1_bd20, { 1, 0 }
  uselistorder i32 %v3_bc0c, { 1, 0 }
  uselistorder i32 %v3_bbf8, { 1, 0 }
  uselistorder i32 %v3_bbb8, { 1, 0 }
  uselistorder i32 %v1_bb8c, { 1, 0 }
  uselistorder i32 %v3_bb80, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_bb7c, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_bb44, { 1, 0 }
  uselistorder i1 %v7_bb18, { 1, 0 }
  uselistorder i32 %v3_bb14, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bb00, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_baf0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_baec, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_bab4, { 1, 0 }
  uselistorder i32 %v0_bab0, { 1, 0 }
  uselistorder i32 %v1_baa4, { 1, 0 }
  uselistorder i1 %v7_ba90, { 1, 0 }
  uselistorder i32 %v1_ba8c, { 1, 0, 2 }
  uselistorder i1 %v8_ba84, { 1, 0 }
  uselistorder i1 %v7_ba80, { 1, 0 }
  uselistorder i32 %v1_ba74, { 1, 0 }
  uselistorder i8 %v2_ba68, { 2, 0, 1, 3 }
  uselistorder i32 %v0_ba6c, { 1, 0 }
  uselistorder i32 %v0_ba8c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_ba60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba5c, { 1, 0, 2 }
  uselistorder i32 %v0_ba54, { 1, 0, 2, 3 }
  uselistorder i1 %v7_ba4c, { 1, 0 }
  uselistorder i32 %v0_ba4c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_b9f0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_b990, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v6_b974, { 0, 2, 1, 3 }
  uselistorder i32 %v6_b95c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_b944, { 1, 2, 0 }
  uselistorder i32 %v5_b938, { 0, 2, 1 }
  uselistorder i32 %v7_b900, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_b8e8, { 2, 1, 0 }
  uselistorder i32 %v6_b8dc, { 1, 0 }
  uselistorder i32 %v2_b8c4, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 1, 8, 5, 6, 7, 9, 10, 11, 37, 12, 38, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 52, 51, 48, 9, 50, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 43, 42, 44, 46, 45, 49, 47, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 8, 6, 9, 7, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 33, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 42, 41, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 28, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @function_121b4, { 1, 0 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_beec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bedc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_bdc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_bd78, { 1, 0 }
  uselistorder label %dec_label_pc_bd48, { 1, 0 }
  uselistorder label %.thread19, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_baa4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ba9c, { 1, 0 }
  uselistorder label %dec_label_pc_ba90, { 1, 0 }
}

define i32 @function_bf78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_bf78:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_bf9c, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf78
  %v0_bf8c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_bf88

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf88, %dec_label_pc_bf84
  %v0_bf94 = phi i32 [ %v2_bf94, %dec_label_pc_bf88 ], [ 0, %dec_label_pc_bf84 ]
  %v0_bf8c = phi i32 [ %v5_bf8c, %dec_label_pc_bf88 ], [ %v0_bf8c.pre, %dec_label_pc_bf84 ]
  %v0_bf88 = phi i32 [ %v1_bf88, %dec_label_pc_bf88 ], [ %arg1, %dec_label_pc_bf84 ]
  %v1_bf88 = add i32 %v0_bf88, -2
  %v1_bf8c = inttoptr i32 %v0_bf8c to i16*
  %v2_bf8c = load i16, i16* %v1_bf8c, align 2
  %v3_bf8c = zext i16 %v2_bf8c to i32
  %v5_bf8c = add i32 %v0_bf8c, -2
  store i32 %v5_bf8c, i32* @r0, align 4
  %v2_bf94 = add i32 %v3_bf8c, %v0_bf94
  %v1_bf88.cmp = icmp ugt i32 %v1_bf88, 1
  br i1 %v1_bf88.cmp, label %dec_label_pc_bf88, label %dec_label_pc_bf9c.loopexit

dec_label_pc_bf9c.loopexit:                       ; preds = %dec_label_pc_bf88
  br label %dec_label_pc_bf9c

dec_label_pc_bf9c:                                ; preds = %dec_label_pc_bf78, %dec_label_pc_bf9c.loopexit
  %v1_bfa4 = phi i32 [ %v2_bf94, %dec_label_pc_bf9c.loopexit ], [ 0, %dec_label_pc_bf78 ]
  %v0_bf9c = phi i32 [ %v1_bf88, %dec_label_pc_bf9c.loopexit ], [ %arg1, %dec_label_pc_bf78 ]
  %v7_bf9c = icmp eq i32 %v0_bf9c, 1
  br i1 %v7_bf9c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_bf9c
  %v1_bfa0 = load i32, i32* @r0, align 4
  %v2_bfa0 = inttoptr i32 %v1_bfa0 to i8*
  %v3_bfa0 = load i8, i8* %v2_bfa0, align 1
  %v4_bfa0 = zext i8 %v3_bfa0 to i32
  %v3_bfa4 = add i32 %v1_bfa4, %v4_bfa0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf9c, %bb
  %v0_bfa8 = phi i32 [ %v1_bfa4, %dec_label_pc_bf9c ], [ %v3_bfa4, %bb ]
  %v3_bfac = urem i32 %v0_bfa8, 65536
  %v4_bfb0 = udiv i32 %v0_bfa8, 65536
  %v5_bfb0 = add nuw nsw i32 %v4_bfb0, %v3_bfac
  %v4_bfb4 = udiv i32 %v5_bfb0, 65536
  %v5_bfb4 = add nuw nsw i32 %v4_bfb4, %v5_bfb0
  %v1_bfb8 = urem i32 %v5_bfb4, 65536
  %v3_bfc0 = xor i32 %v1_bfb8, 65535
  ret i32 %v3_bfc0

; uselistorder directives
  uselistorder i32 %v5_bfb0, { 1, 0 }
  uselistorder i32 %v5_bf8c, { 1, 0 }
  uselistorder i32 %v1_bf88, { 1, 0, 2 }
  uselistorder i32 %v0_bf8c, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_bf9c, { 1, 0 }
}

define i32 @function_bfc8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bfc8:
  %v1_bfd8 = add i32 %arg1, 12
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i32*
  %v3_bfd8 = load i32, i32* %v2_bfd8, align 4
  %v1_bfdc = add i32 %arg1, 16
  %v2_bfdc = inttoptr i32 %v1_bfdc to i32*
  %v3_bfdc = load i32, i32* %v2_bfdc, align 4
  %v7_bfe0 = icmp sgt i32 %arg3, 1
  br i1 %v7_bfe0, label %dec_label_pc_bfec.preheader, label %dec_label_pc_c000

dec_label_pc_bfec.preheader:                      ; preds = %dec_label_pc_bfc8
  %v0_bff0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_bfec

dec_label_pc_bfec:                                ; preds = %dec_label_pc_bfec.preheader, %dec_label_pc_bfec
  %v0_bff8 = phi i32 [ 0, %dec_label_pc_bfec.preheader ], [ %v2_bff8, %dec_label_pc_bfec ]
  %v0_bff0 = phi i32 [ %v0_bff0.pre, %dec_label_pc_bfec.preheader ], [ %v5_bff0, %dec_label_pc_bfec ]
  %v0_bfec = phi i32 [ %arg3, %dec_label_pc_bfec.preheader ], [ %v1_bfec, %dec_label_pc_bfec ]
  %v1_bfec = add nsw i32 %v0_bfec, -2
  %v1_bff0 = inttoptr i32 %v0_bff0 to i16*
  %v2_bff0 = load i16, i16* %v1_bff0, align 2
  %v3_bff0 = zext i16 %v2_bff0 to i32
  %v5_bff0 = add i32 %v0_bff0, -2
  store i32 %v5_bff0, i32* @r1, align 4
  %v2_bff8 = add i32 %v3_bff0, %v0_bff8
  %v8_bffc = icmp sgt i32 %v1_bfec, 1
  br i1 %v8_bffc, label %dec_label_pc_bfec, label %dec_label_pc_c000.loopexit

dec_label_pc_c000.loopexit:                       ; preds = %dec_label_pc_bfec
  br label %dec_label_pc_c000

dec_label_pc_c000:                                ; preds = %dec_label_pc_c000.loopexit, %dec_label_pc_bfc8
  %v1_c00c = phi i32 [ %v2_bff8, %dec_label_pc_c000.loopexit ], [ 0, %dec_label_pc_bfc8 ]
  %v0_c000 = phi i32 [ %v1_bfec, %dec_label_pc_c000.loopexit ], [ %arg3, %dec_label_pc_bfc8 ]
  %v7_c000 = icmp eq i32 %v0_c000, 1
  br i1 %v7_c000, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c000
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c000
  %v1_c004 = load i32, i32* @r1, align 4
  %v2_c004 = inttoptr i32 %v1_c004 to i8*
  %v3_c004 = load i8, i8* %v2_c004, align 1
  %v4_c004 = zext i8 %v3_c004 to i32
  %v3_c00c = add i32 %v4_c004, %v1_c00c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c034 = phi i32 [ %v1_c00c, %.thread ], [ %v3_c00c, %bb ]
  %v0_c014 = mul i32 %v3_bfd8, 65536
  %v3_c014 = udiv i32 %v0_c014, 65536
  %v3_c018 = urem i32 %v3_bfdc, 65536
  %v4_c020 = udiv i32 %v3_bfd8, 65536
  %v2_c01c = add nuw nsw i32 %v3_c018, %v4_c020
  %v5_c020 = add nuw nsw i32 %v2_c01c, %v3_c014
  %v1_c024 = add i32 %arg1, 9
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v4_c028 = udiv i32 %v3_bfdc, 65536
  %v3_c030 = mul nuw nsw i32 %v4_c024, 256
  %v5_c028 = add i32 %v4_c028, %arg2
  %v2_c02c = add i32 %v5_c028, %v1_c034
  %v2_c034 = add i32 %v2_c02c, %v5_c020
  %v2_c038 = add i32 %v2_c034, %v3_c030
  %tmp = icmp ult i32 %v2_c038, 65536
  br i1 %tmp, label %dec_label_pc_c058, label %dec_label_pc_c044

dec_label_pc_c044:                                ; preds = %bb19, %dec_label_pc_c044
  %v2_c04c5 = phi i32 [ %v2_c04c, %dec_label_pc_c044 ], [ %v2_c038, %bb19 ]
  %v3_c0506.in = phi i32 [ %v2_c04c, %dec_label_pc_c044 ], [ %v2_c038, %bb19 ]
  %v3_c0506 = udiv i32 %v3_c0506.in, 65536
  %v3_c048 = urem i32 %v2_c04c5, 65536
  %v2_c04c = add nuw nsw i32 %v3_c048, %v3_c0506
  %tmp20 = icmp ult i32 %v2_c04c, 65536
  br i1 %tmp20, label %dec_label_pc_c058.loopexit, label %dec_label_pc_c044

dec_label_pc_c058.loopexit:                       ; preds = %dec_label_pc_c044
  br label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c058.loopexit, %bb19
  %v0_c058 = phi i32 [ %v2_c04c, %dec_label_pc_c058.loopexit ], [ %v2_c038, %bb19 ]
  %v1_c058 = urem i32 %v0_c058, 65536
  %v3_c060 = xor i32 %v1_c058, 65535
  ret i32 %v3_c060

; uselistorder directives
  uselistorder i32 %v2_c04c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c038, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c00c, { 1, 0 }
  uselistorder i32 %v5_bff0, { 1, 0 }
  uselistorder i32 %v0_bff0, { 1, 0 }
  uselistorder i32 %v3_bfd8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c044, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_bfec, { 1, 0 }
}

define i32 @function_c06c(i32 %arg1) local_unnamed_addr {
dec_label_pc_c06c:
  %v2_c078 = load i32, i32* @global_var_1a2e0.54, align 4
  %v2_c080 = call i32 @function_11a20(i32 %v2_c078, i32 9)
  ret i32 %v2_c080
}

define i32 @function_c094(i32 %arg1) local_unnamed_addr {
dec_label_pc_c094:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c094 = load i32, i32* @r4, align 4
  %v6_c094 = load i32, i32* @r5, align 4
  %v9_c094 = load i32, i32* @r6, align 4
  %v12_c094 = load i32, i32* @r7, align 4
  %v15_c094 = load i32, i32* @r8, align 4
  %v18_c094 = load i32, i32* @sb, align 4
  %v21_c094 = load i32, i32* @sl, align 4
  %v24_c094 = load i32, i32* @fp, align 4
  %v27_c094 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c0b0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c0b0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_c0dc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c0dc, i32* @fp, align 4
  %v3_c0e8 = call i32 @function_120d0(i8* nonnull %stack_var_-585, i32 0)
  %v2_c0ec = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_c0ec, i32* @sl, align 4
  %v0_c0f0 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c0fc = bitcast i32* %stack_var_-8777 to i8*
  %v3_c0fc = call i32 @function_120d0(i8* %v2_c0fc, i32 %v0_c0f0)
  %v0_c104 = load i32, i32* @r5, align 4
  store i32 4096, i32* @r2, align 4
  %v2_c110 = bitcast i32* %stack_var_-4681 to i8*
  %v3_c110 = call i32 @function_120d0(i8* %v2_c110, i32 %v0_c104)
  %v2_c114 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_c114, i32* @sb, align 4
  %v0_c118 = load i32, i32* %r4.global-to-local, align 4
  %v3_c118 = udiv i32 %v0_c118, 256
  %v1_c11c = urem i32 %v0_c118, 256
  store i32 %v1_c11c, i32* @r4, align 4
  %v3_c12c = trunc i32 %v3_c118 to i8
  %v4_c12c = call i32 @function_115f4(i8 %v3_c12c, i32 16, i32 %v2_c114)
  %v2_c134 = call i32 @function_11194(i8* nonnull %stack_var_-72)
  %v7_c138 = icmp eq i32 %v2_c134, 2
  br i1 %v7_c138, label %dec_label_pc_c5d4, label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c5d4
  %v1_c144 = call i32 @function_10988(i32 6)
  %v1_c14c = call i32 @function_10988(i32 7)
  %v1_c154 = call i32 @function_10988(i32 8)
  %v0_c158 = load i32, i32* @r5, align 4
  %v2_c160 = inttoptr i32 %v0_c158 to i32*
  %v3_c160 = call i32 @function_108c4(i32 6, i32* %v2_c160)
  %v0_c164 = load i32, i32* @r5, align 4
  %v2_c168 = call i32 @function_11860(i32 %v3_c160, i32 %v0_c164)
  %v7_c16c = icmp eq i32 %v2_c168, -1
  store i32 %v2_c168, i32* @r8, align 4
  br i1 %v7_c16c, label %bb, label %dec_label_pc_c17c.preheader

bb:                                               ; preds = %dec_label_pc_c140
  %v1_c174 = load i32, i32* @r5, align 4
  store i32 %v1_c174, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_c594

dec_label_pc_c17c.preheader:                      ; preds = %dec_label_pc_c140
  %v4_c18857 = call i32 @function_113f4(i8* nonnull %stack_var_-585, i32 512, i32 %v2_c168)
  %v2_c18c59 = icmp eq i32 %v4_c18857, 0
  br i1 %v2_c18c59, label %dec_label_pc_c314.loopexit, label %dec_label_pc_c194.lr.ph

dec_label_pc_c194.lr.ph:                          ; preds = %dec_label_pc_c17c.preheader
  %v2_c1dc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_c194

dec_label_pc_c194:                                ; preds = %dec_label_pc_c194.lr.ph, %dec_label_pc_c17c.backedge
  %v3_c198 = load i8, i8* %stack_var_-585, align 1
  %v4_c198 = sext i8 %v3_c198 to i32
  %v2_c19c = icmp eq i8 %v3_c198, 0
  br i1 %v2_c19c, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_c194
  %v8_c1a0 = icmp eq i8 %v3_c198, 58
  br i1 %v8_c1a0, label %.thread8, label %dec_label_pc_c1b4

.thread8:                                         ; preds = %bb129
  br label %dec_label_pc_c1cc

bb130:                                            ; preds = %dec_label_pc_c194
  br label %dec_label_pc_c1cc

dec_label_pc_c1b4:                                ; preds = %bb129
  %v1_c1bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %bb131, %dec_label_pc_c1b4
  %v0_c1b8 = phi i32 [ %v1_c1b8, %bb131 ], [ 0, %dec_label_pc_c1b4 ]
  %v1_c1b8 = add i32 %v0_c1b8, 1
  %v2_c1bc = add i32 %v1_c1b8, %v1_c1bc.pre
  %v3_c1bc = inttoptr i32 %v2_c1bc to i8*
  %v4_c1bc = load i8, i8* %v3_c1bc, align 1
  %v6_c1bc = zext i8 %v4_c1bc to i32
  %v2_c1c0 = icmp eq i8 %v4_c1bc, 0
  br i1 %v2_c1c0, label %dec_label_pc_c1cc, label %bb131

bb131:                                            ; preds = %dec_label_pc_c1b8
  %v8_c1c4 = icmp eq i8 %v4_c1bc, 58
  br i1 %v8_c1c4, label %dec_label_pc_c1cc, label %dec_label_pc_c1b8

dec_label_pc_c1cc:                                ; preds = %dec_label_pc_c1b8, %bb131, %bb130, %.thread8
  %v1_c1f8 = phi i32 [ 0, %.thread8 ], [ 0, %bb130 ], [ %v1_c1b8, %bb131 ], [ %v1_c1b8, %dec_label_pc_c1b8 ]
  %v0_c1cc = phi i32 [ %v4_c198, %.thread8 ], [ %v4_c198, %bb130 ], [ %v6_c1bc, %bb131 ], [ %v6_c1bc, %dec_label_pc_c1b8 ]
  %v2_c1cc = icmp eq i32 %v0_c1cc, 0
  br i1 %v2_c1cc, label %dec_label_pc_c17c.backedge, label %dec_label_pc_c1d4

dec_label_pc_c17c.backedge:                       ; preds = %dec_label_pc_c1cc, %dec_label_pc_c29c, %dec_label_pc_c2e8, %dec_label_pc_c218
  %v0_c184 = load i32, i32* @r8, align 4
  %v4_c188 = call i32 @function_113f4(i8* nonnull %stack_var_-585, i32 512, i32 %v0_c184)
  %v2_c18c = icmp eq i32 %v4_c188, 0
  br i1 %v2_c18c, label %dec_label_pc_c314.loopexit, label %dec_label_pc_c194

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c1cc
  %v1_c1d8 = add i32 %v1_c1f8, 2
  %v2_c1e0 = add i32 %v1_c1d8, %v2_c1dc
  %v1_c1e4 = add i32 %v2_c1e0, -545
  %v2_c1e4 = inttoptr i32 %v1_c1e4 to i8*
  %v3_c1e4 = load i8, i8* %v2_c1e4, align 1
  %v2_c1e8 = icmp eq i8 %v3_c1e4, 0
  br i1 %v2_c1e8, label %bb133, label %bb132

bb132:                                            ; preds = %dec_label_pc_c1d4
  %v8_c1ec = icmp eq i8 %v3_c1e4, 32
  br i1 %v8_c1ec, label %.thread13, label %dec_label_pc_c1f8

.thread13:                                        ; preds = %bb132
  store i32 %v1_c1d8, i32* @r5, align 4
  br label %dec_label_pc_c218

bb133:                                            ; preds = %dec_label_pc_c1d4
  store i32 %v1_c1d8, i32* @r5, align 4
  br label %dec_label_pc_c218

dec_label_pc_c1f8:                                ; preds = %bb132
  %v0_c1f8 = load i32, i32* @r6, align 4
  %v2_c1f8 = add i32 %v0_c1f8, %v1_c1f8
  br label %dec_label_pc_c200

dec_label_pc_c200:                                ; preds = %bb134, %dec_label_pc_c1f8
  %v0_c20c16 = phi i32 [ %v1_c20c, %bb134 ], [ %v1_c1d8, %dec_label_pc_c1f8 ]
  %v0_c21018 = phi i32 [ %v1_c210, %bb134 ], [ %v2_c1f8, %dec_label_pc_c1f8 ]
  %v1_c200 = add i32 %v0_c21018, 3
  %v2_c200 = inttoptr i32 %v1_c200 to i8*
  %v3_c200 = load i8, i8* %v2_c200, align 1
  %v2_c204 = icmp eq i8 %v3_c200, 0
  br i1 %v2_c204, label %.thread15, label %bb134

.thread15:                                        ; preds = %dec_label_pc_c200
  %v1_c20c17 = add i32 %v0_c20c16, 1
  store i32 %v1_c20c17, i32* @r5, align 4
  br label %dec_label_pc_c218

bb134:                                            ; preds = %dec_label_pc_c200
  %v8_c208 = icmp eq i8 %v3_c200, 32
  %v1_c20c = add i32 %v0_c20c16, 1
  store i32 %v1_c20c, i32* @r5, align 4
  %v1_c210 = add i32 %v0_c21018, 1
  br i1 %v8_c208, label %dec_label_pc_c218, label %dec_label_pc_c200

dec_label_pc_c218:                                ; preds = %bb134, %bb133, %.thread15, %.thread13
  %v1_c224 = phi i32 [ %v1_c20c17, %.thread15 ], [ %v1_c1d8, %.thread13 ], [ %v1_c1d8, %bb133 ], [ %v1_c20c, %bb134 ]
  %v0_c218 = load i32, i32* @r6, align 4
  %v2_c218 = add i32 %v0_c218, %v1_c1d8
  store i32 %v2_c218, i32* @r4, align 4
  %v2_c224 = add i32 %v1_c224, %v2_c1dc
  store i32 0, i32* @r7, align 4
  %v3_c22c = add i32 %v2_c224, -545
  %v4_c22c = inttoptr i32 %v3_c22c to i8*
  store i8 0, i8* %v4_c22c, align 1
  %v0_c230 = load i32, i32* @r4, align 4
  %v1_c234 = inttoptr i32 %v0_c230 to i8*
  %v2_c234 = call i32 @function_11194(i8* %v1_c234)
  store i32 %v2_c234, i32* @r1, align 4
  %v0_c240 = load i32, i32* @r4, align 4
  %v3_c244 = inttoptr i32 %v0_c240 to i8*
  %v4_c244 = call i32 @function_114e4(i8* %v3_c244, i32 %v2_c234, i32 %v2_c114)
  %v7_c248 = icmp eq i32 %v4_c244, -1
  br i1 %v7_c248, label %dec_label_pc_c17c.backedge, label %dec_label_pc_c264.preheader

dec_label_pc_c264.preheader:                      ; preds = %dec_label_pc_c218
  %v1_c24c = load i32, i32* @r7, align 4
  %v1_c250 = load i32, i32* @r6, align 4
  %v2_c250 = load i32, i32* @r5, align 4
  %v3_c250 = add i32 %v2_c250, %v1_c250
  store i32 %v1_c24c, i32* @lr, align 4
  %v1_c26449 = add i32 %v3_c250, 2
  %v2_c26450 = inttoptr i32 %v1_c26449 to i8*
  %v3_c26451 = load i8, i8* %v2_c26450, align 1
  %v2_c26853 = icmp eq i8 %v3_c26451, 0
  %v1_c26c55 = add i32 %v2_c250, 2
  br i1 %v2_c26853, label %dec_label_pc_c29c, label %dec_label_pc_c274

dec_label_pc_c274:                                ; preds = %dec_label_pc_c264.preheader, %dec_label_pc_c264.backedge
  %v0_c29c84 = phi i32 [ %v0_c29c82, %dec_label_pc_c264.backedge ], [ %v1_c24c, %dec_label_pc_c264.preheader ]
  %v0_c284.pr = phi i32 [ %v0_c284.pr71, %dec_label_pc_c264.backedge ], [ %v1_c24c, %dec_label_pc_c264.preheader ]
  %v0_c5a8 = phi i32 [ %v0_c5a874, %dec_label_pc_c264.backedge ], [ %v1_c24c, %dec_label_pc_c264.preheader ]
  %v0_c26c79 = phi i32 [ %v1_c26c, %dec_label_pc_c264.backedge ], [ %v1_c26c55, %dec_label_pc_c264.preheader ]
  %v0_c294 = phi i32 [ %v0_c264, %dec_label_pc_c264.backedge ], [ %v3_c250, %dec_label_pc_c264.preheader ]
  %v1_c278.in = phi i8 [ %v3_c264, %dec_label_pc_c264.backedge ], [ %v3_c26451, %dec_label_pc_c264.preheader ]
  %v7_c274 = icmp eq i8 %v1_c278.in, 9
  br i1 %v7_c274, label %bb136, label %bb135

bb135:                                            ; preds = %dec_label_pc_c274
  %v8_c278 = icmp eq i8 %v1_c278.in, 32
  br i1 %v8_c278, label %.thread27, label %dec_label_pc_c284

.thread27:                                        ; preds = %bb135
  br label %dec_label_pc_c290

bb136:                                            ; preds = %dec_label_pc_c274
  br label %dec_label_pc_c290

dec_label_pc_c284:                                ; preds = %bb135
  %v7_c284 = icmp eq i32 %v0_c284.pr, 1
  br i1 %v7_c284, label %dec_label_pc_c5a8, label %dec_label_pc_c28c

dec_label_pc_c28c:                                ; preds = %dec_label_pc_c5a8, %dec_label_pc_c284
  %v0_c29076 = phi i32 [ %v1_c5a8, %dec_label_pc_c5a8 ], [ %v0_c5a8, %dec_label_pc_c284 ]
  br label %dec_label_pc_c290

dec_label_pc_c290:                                ; preds = %bb136, %.thread27, %dec_label_pc_c28c
  %v0_c290 = phi i32 [ %v0_c5a8, %.thread27 ], [ %v0_c5a8, %bb136 ], [ %v0_c29076, %dec_label_pc_c28c ]
  %v0_c284.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb136 ], [ 0, %dec_label_pc_c28c ]
  %v7_c298 = icmp sgt i32 %v0_c290, 6
  br i1 %v7_c298, label %dec_label_pc_c29c, label %dec_label_pc_c264.backedge

dec_label_pc_c29c:                                ; preds = %dec_label_pc_c264.backedge, %dec_label_pc_c290, %dec_label_pc_c264.preheader
  %v1_c2ec = phi i32 [ %v1_c26c55, %dec_label_pc_c264.preheader ], [ %v1_c26c, %dec_label_pc_c264.backedge ], [ %v0_c26c79, %dec_label_pc_c290 ]
  %v0_c29c = phi i32 [ %v1_c24c, %dec_label_pc_c264.preheader ], [ %v0_c29c82, %dec_label_pc_c264.backedge ], [ %v0_c29c84, %dec_label_pc_c290 ]
  %v2_c29c = icmp eq i32 %v0_c29c, 0
  br i1 %v2_c29c, label %dec_label_pc_c17c.backedge, label %dec_label_pc_c2a8

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c29c
  %v2_c2b0 = add i32 %v1_c2ec, %v2_c1dc
  %v1_c2b4 = add i32 %v2_c2b0, -545
  %v2_c2b4 = inttoptr i32 %v1_c2b4 to i8*
  %v3_c2b4 = load i8, i8* %v2_c2b4, align 1
  %v2_c2b8 = icmp eq i8 %v3_c2b4, 0
  br i1 %v2_c2b8, label %dec_label_pc_c2e8, label %bb137

bb137:                                            ; preds = %dec_label_pc_c2a8
  %v8_c2bc = icmp eq i8 %v3_c2b4, 32
  br i1 %v8_c2bc, label %dec_label_pc_c2e8, label %dec_label_pc_c2c4

dec_label_pc_c2c4:                                ; preds = %bb137
  %v2_c2c4 = add i32 %v1_c2ec, %v1_c250
  br label %dec_label_pc_c2c8

dec_label_pc_c2c8:                                ; preds = %bb138, %dec_label_pc_c2c4
  %v0_c2d430 = phi i32 [ %v1_c2d4, %bb138 ], [ %v1_c2ec, %dec_label_pc_c2c4 ]
  %v0_c2c8 = phi i32 [ %v1_c2c8, %bb138 ], [ %v2_c2c4, %dec_label_pc_c2c4 ]
  %v1_c2c8 = add i32 %v0_c2c8, 1
  %v2_c2c8 = inttoptr i32 %v1_c2c8 to i8*
  %v3_c2c8 = load i8, i8* %v2_c2c8, align 1
  %v2_c2cc = icmp eq i8 %v3_c2c8, 0
  br i1 %v2_c2cc, label %.thread29, label %bb138

.thread29:                                        ; preds = %dec_label_pc_c2c8
  %v1_c2d431 = add i32 %v0_c2d430, 1
  br label %dec_label_pc_c2dc

bb138:                                            ; preds = %dec_label_pc_c2c8
  %v8_c2d0 = icmp eq i8 %v3_c2c8, 32
  %v1_c2d4 = add i32 %v0_c2d430, 1
  br i1 %v8_c2d0, label %dec_label_pc_c2dc, label %dec_label_pc_c2c8

dec_label_pc_c2dc:                                ; preds = %bb138, %.thread29
  %v1_c2e4 = phi i32 [ %v1_c2d431, %.thread29 ], [ %v1_c2d4, %bb138 ]
  %v2_c2e4 = add i32 %v1_c2e4, %v2_c1dc
  br label %dec_label_pc_c2e8

dec_label_pc_c2e8:                                ; preds = %dec_label_pc_c2a8, %bb137, %dec_label_pc_c2dc
  %v2_c2f4 = phi i32 [ %v2_c2b0, %dec_label_pc_c2a8 ], [ %v2_c2b0, %bb137 ], [ %v2_c2e4, %dec_label_pc_c2dc ]
  %v2_c2ec = add i32 %v1_c2ec, %v1_c250
  store i32 %v2_c2ec, i32* @r4, align 4
  %v3_c2f4 = add i32 %v2_c2f4, -545
  %v4_c2f4 = inttoptr i32 %v3_c2f4 to i8*
  store i8 0, i8* %v4_c2f4, align 1
  %v1_c2f8 = inttoptr i32 %v2_c2ec to i8*
  %v2_c2f8 = call i32 @function_11194(i8* %v1_c2f8)
  %v8_c300 = icmp sgt i32 %v2_c2f8, 15
  br i1 %v8_c300, label %dec_label_pc_c17c.backedge, label %dec_label_pc_c304

dec_label_pc_c304:                                ; preds = %dec_label_pc_c2e8
  %v0_c308 = load i32, i32* @r4, align 4
  %v2_c30c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_c30c, i32* @r0, align 4
  %v2_c310 = bitcast i32* %stack_var_-56 to i8*
  %v3_c310 = call i32 @function_111bc(i8* %v2_c310, i32 %v0_c308)
  br label %dec_label_pc_c314

dec_label_pc_c314.loopexit:                       ; preds = %dec_label_pc_c17c.backedge, %dec_label_pc_c17c.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre96 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_c314

dec_label_pc_c314:                                ; preds = %dec_label_pc_c314.loopexit, %dec_label_pc_c304
  %v1_c324.pre-phi = phi i8* [ %.pre96, %dec_label_pc_c314.loopexit ], [ %v2_c310, %dec_label_pc_c304 ]
  %v2_c320.pre-phi = phi i32 [ %.pre, %dec_label_pc_c314.loopexit ], [ %v2_c30c, %dec_label_pc_c304 ]
  %v0_c314 = load i32, i32* @r8, align 4
  %v1_c318 = call i32 @function_11c54(i32 %v0_c314)
  %v2_c324 = call i32 @function_11194(i8* %v1_c324.pre-phi)
  store i32 %v2_c324, i32* @r4, align 4
  %v2_c328 = icmp eq i32 %v2_c324, 0
  br i1 %v2_c328, label %dec_label_pc_c580, label %dec_label_pc_c334

dec_label_pc_c334:                                ; preds = %dec_label_pc_c314
  %v3_c33c = call i32 @function_108c4(i32 6, i32* null)
  %v1_c340 = call i32 @function_11e50(i32 %v3_c33c)
  store i32 %v1_c340, i32* @sb, align 4
  %v2_c344 = icmp eq i32 %v1_c340, 0
  br i1 %v2_c344, label %dec_label_pc_c574, label %dec_label_pc_c354.preheader

dec_label_pc_c354.preheader:                      ; preds = %dec_label_pc_c334
  store i32 0, i32* @r5, align 4
  %v1_c35844 = inttoptr i32 %v1_c340 to i32*
  %v2_c35845 = call i32 @function_11f94(i32* %v1_c35844)
  %v2_c35c47 = icmp eq i32 %v2_c35845, 0
  br i1 %v2_c35c47, label %dec_label_pc_c568, label %dec_label_pc_c364.preheader

dec_label_pc_c354.loopexit:                       ; preds = %dec_label_pc_c36c, %dec_label_pc_c37c, %dec_label_pc_c3e8
  %v0_c354 = load i32, i32* @sb, align 4
  %v1_c358 = inttoptr i32 %v0_c354 to i32*
  %v2_c358 = call i32 @function_11f94(i32* %v1_c358)
  %v2_c35c = icmp eq i32 %v2_c358, 0
  br i1 %v2_c35c, label %dec_label_pc_c568, label %dec_label_pc_c364.preheader

dec_label_pc_c364.preheader:                      ; preds = %dec_label_pc_c354.preheader, %dec_label_pc_c354.loopexit
  %v0_c36c92 = phi i32 [ %v2_c358, %dec_label_pc_c354.loopexit ], [ %v2_c35845, %dec_label_pc_c354.preheader ]
  br label %dec_label_pc_c364

dec_label_pc_c364:                                ; preds = %dec_label_pc_c364.preheader, %dec_label_pc_c550
  %v0_c384 = phi i32 [ %v0_c36c92, %dec_label_pc_c364.preheader ], [ %v2_c55c, %dec_label_pc_c550 ]
  %v0_c364 = load i32, i32* @r5, align 4
  %v2_c364 = icmp eq i32 %v0_c364, 0
  br i1 %v2_c364, label %dec_label_pc_c36c, label %dec_label_pc_c568

dec_label_pc_c36c:                                ; preds = %dec_label_pc_c364
  %v1_c36c = add i32 %v0_c384, 11
  %v2_c36c = inttoptr i32 %v1_c36c to i8*
  %v3_c36c = load i8, i8* %v2_c36c, align 1
  %v4_c36c = zext i8 %v3_c36c to i32
  %v1_c370 = add nsw i32 %v4_c36c, -48
  %tmp = icmp ugt i32 %v1_c370, 9
  br i1 %tmp, label %dec_label_pc_c354.loopexit, label %dec_label_pc_c37c

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c36c
  store i32 %v1_c36c, i32* @r7, align 4
  %v3_c388 = call i32 @function_108c4(i32 6, i32* null)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c394 = call i32 @function_111bc(i8* %v2_c110, i32 %v3_c388)
  %v2_c39c = call i32 @function_11194(i8* %v2_c110)
  %v0_c3a0 = load i32, i32* @r7, align 4
  %v1_c3a4 = load i32, i32* @sl, align 4
  %v2_c3a4 = add i32 %v1_c3a4, %v2_c39c
  store i32 %v2_c3a4, i32* @r0, align 4
  %v2_c3a8 = inttoptr i32 %v2_c3a4 to i8*
  %v3_c3a8 = call i32 @function_111bc(i8* %v2_c3a8, i32 %v0_c3a0)
  %v2_c3b0 = call i32 @function_11194(i8* %v2_c110)
  %v0_c3b4 = load i32, i32* @r5, align 4
  store i32 %v2_c3b0, i32* @r4, align 4
  %v2_c3c0 = inttoptr i32 %v0_c3b4 to i32*
  %v3_c3c0 = call i32 @function_108c4(i32 7, i32* %v2_c3c0)
  %v0_c3c8 = load i32, i32* @r4, align 4
  %v1_c3c8 = load i32, i32* @sl, align 4
  %v2_c3c8 = add i32 %v1_c3c8, %v0_c3c8
  store i32 %v2_c3c8, i32* @r0, align 4
  %v2_c3cc = inttoptr i32 %v2_c3c8 to i8*
  %v3_c3cc = call i32 @function_111bc(i8* %v2_c3cc, i32 %v3_c3c0)
  %v3_c3dc = call i32 @function_119b8(i32 %v2_c0ec, i32 %v2_c0dc, i32 4096)
  %v7_c3e0 = icmp eq i32 %v3_c3dc, -1
  br i1 %v7_c3e0, label %dec_label_pc_c354.loopexit, label %dec_label_pc_c3e8

dec_label_pc_c3e8:                                ; preds = %dec_label_pc_c37c
  %v0_c3e8 = load i32, i32* @r5, align 4
  %v2_c3f0 = inttoptr i32 %v0_c3e8 to i32*
  %v3_c3f0 = call i32 @function_108c4(i32 6, i32* %v2_c3f0)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c3fc = call i32 @function_111bc(i8* %v2_c110, i32 %v3_c3f0)
  %v2_c404 = call i32 @function_11194(i8* %v2_c110)
  %v0_c408 = load i32, i32* @r7, align 4
  %v1_c40c = load i32, i32* @sl, align 4
  %v2_c40c = add i32 %v1_c40c, %v2_c404
  store i32 %v2_c40c, i32* @r0, align 4
  %v2_c410 = inttoptr i32 %v2_c40c to i8*
  %v3_c410 = call i32 @function_111bc(i8* %v2_c410, i32 %v0_c408)
  %v2_c418 = call i32 @function_11194(i8* %v2_c110)
  %v0_c41c = load i32, i32* @r5, align 4
  store i32 %v2_c418, i32* @r4, align 4
  %v2_c428 = inttoptr i32 %v0_c41c to i32*
  %v3_c428 = call i32 @function_108c4(i32 8, i32* %v2_c428)
  %v0_c430 = load i32, i32* @r4, align 4
  %v1_c430 = load i32, i32* @sl, align 4
  %v2_c430 = add i32 %v1_c430, %v0_c430
  store i32 %v2_c430, i32* @r0, align 4
  %v2_c434 = inttoptr i32 %v2_c430 to i8*
  %v3_c434 = call i32 @function_111bc(i8* %v2_c434, i32 %v3_c428)
  %v1_c43c = call i32 @function_11e50(i32 %v2_c0ec)
  store i32 %v1_c43c, i32* @r8, align 4
  %v2_c440 = icmp eq i32 %v1_c43c, 0
  br i1 %v2_c440, label %dec_label_pc_c354.loopexit, label %dec_label_pc_c448.preheader

dec_label_pc_c448.preheader:                      ; preds = %dec_label_pc_c3e8
  %v1_c44c39 = inttoptr i32 %v1_c43c to i32*
  %v2_c44c40 = call i32 @function_11f94(i32* %v1_c44c39)
  store i32 %v2_c44c40, i32* @r6, align 4
  %v2_c45042 = icmp eq i32 %v2_c44c40, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c45042, label %dec_label_pc_c550, label %dec_label_pc_c460thread-pre-split

dec_label_pc_c448.loopexit:                       ; preds = %dec_label_pc_c468, %dec_label_pc_c500
  %v0_c448 = load i32, i32* @r8, align 4
  %v1_c44c = inttoptr i32 %v0_c448 to i32*
  %v2_c44c = call i32 @function_11f94(i32* %v1_c44c)
  store i32 %v2_c44c, i32* @r6, align 4
  %v2_c450 = icmp eq i32 %v2_c44c, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c450, label %dec_label_pc_c550, label %dec_label_pc_c460thread-pre-split

dec_label_pc_c460thread-pre-split:                ; preds = %dec_label_pc_c448.preheader, %dec_label_pc_c448.loopexit
  %v0_c460.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_c460

dec_label_pc_c460:                                ; preds = %dec_label_pc_c460thread-pre-split, %dec_label_pc_c528
  %v0_c460 = phi i32 [ %v0_c460.pr, %dec_label_pc_c460thread-pre-split ], [ 1, %dec_label_pc_c528 ]
  %v2_c460 = icmp eq i32 %v0_c460, 0
  br i1 %v2_c460, label %dec_label_pc_c468, label %dec_label_pc_c550

dec_label_pc_c468:                                ; preds = %dec_label_pc_c460
  %v0_c468 = call i32 @function_11228()
  %v0_c46c = load i32, i32* @r5, align 4
  %v2_c474 = inttoptr i32 %v0_c46c to i32*
  %v3_c474 = call i32 @function_108c4(i32 6, i32* %v2_c474)
  store i32 %v2_c0ec, i32* @r0, align 4
  %v3_c480 = call i32 @function_111bc(i8* %v2_c110, i32 %v3_c474)
  %v2_c488 = call i32 @function_11194(i8* %v2_c110)
  %v0_c48c = load i32, i32* @r7, align 4
  %v1_c490 = load i32, i32* @sl, align 4
  %v2_c490 = add i32 %v1_c490, %v2_c488
  store i32 %v2_c490, i32* @r0, align 4
  %v2_c494 = inttoptr i32 %v2_c490 to i8*
  %v3_c494 = call i32 @function_111bc(i8* %v2_c494, i32 %v0_c48c)
  %v2_c49c = call i32 @function_11194(i8* %v2_c110)
  %v0_c4a0 = load i32, i32* @r5, align 4
  store i32 %v2_c49c, i32* @r4, align 4
  %v2_c4ac = inttoptr i32 %v0_c4a0 to i32*
  %v3_c4ac = call i32 @function_108c4(i32 8, i32* %v2_c4ac)
  %v0_c4b4 = load i32, i32* @r4, align 4
  %v1_c4b4 = load i32, i32* @sl, align 4
  %v2_c4b4 = add i32 %v1_c4b4, %v0_c4b4
  store i32 %v2_c4b4, i32* @r0, align 4
  %v2_c4b8 = inttoptr i32 %v2_c4b4 to i8*
  %v3_c4b8 = call i32 @function_111bc(i8* %v2_c4b8, i32 %v3_c4ac)
  %v2_c4c0 = call i32 @function_11194(i8* %v2_c110)
  %v1_c4c8 = load i32, i32* @sl, align 4
  %v2_c4c8 = add i32 %v1_c4c8, %v2_c4c0
  store i32 %v2_c4c8, i32* @r0, align 4
  %v2_c4cc = inttoptr i32 %v2_c4c8 to i8*
  %v3_c4cc = call i32 @function_111bc(i8* %v2_c4cc, i32 ptrtoint (i32* @global_var_16fec.56 to i32))
  %v2_c4d4 = call i32 @function_11194(i8* %v2_c110)
  %v0_c4d8 = load i32, i32* @r6, align 4
  %v1_c4d8 = add i32 %v0_c4d8, 11
  %v1_c4dc = load i32, i32* @sl, align 4
  %v2_c4dc = add i32 %v1_c4dc, %v2_c4d4
  store i32 %v2_c4dc, i32* @r0, align 4
  %v2_c4e0 = inttoptr i32 %v2_c4dc to i8*
  %v3_c4e0 = call i32 @function_111bc(i8* %v2_c4e0, i32 %v1_c4d8)
  %v3_c4f0 = call i32 @function_119b8(i32 %v2_c0ec, i32 %v2_c0dc, i32 4096)
  %v7_c4f4 = icmp eq i32 %v3_c4f0, -1
  br i1 %v7_c4f4, label %dec_label_pc_c448.loopexit, label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c468
  %v2_c500 = call i32 @function_11194(i8* %v2_c0fc)
  store i32 %v2_c500, i32* @r1, align 4
  %v4_c514 = call i32 @function_114e4(i8* %v2_c0fc, i32 %v2_c500, i32 %v2_c320.pre-phi)
  %v7_c518 = icmp eq i32 %v4_c514, -1
  br i1 %v7_c518, label %dec_label_pc_c448.loopexit, label %dec_label_pc_c528

dec_label_pc_c528:                                ; preds = %dec_label_pc_c500
  %v0_c520 = load i32, i32* @r7, align 4
  %v2_c528 = inttoptr i32 %v0_c520 to i8*
  %v3_c528 = call i32 @function_112b8(i8* %v2_c528, i32 10)
  %v2_c530 = call i32 @function_11a20(i32 %v3_c528, i32 9)
  %v0_c534 = load i32, i32* @r8, align 4
  %v1_c538 = inttoptr i32 %v0_c534 to i32*
  %v2_c538 = call i32 @function_11f94(i32* %v1_c538)
  store i32 %v2_c538, i32* @r6, align 4
  %v2_c53c = icmp eq i32 %v2_c538, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c0dc, i32* @r0, align 4
  br i1 %v2_c53c, label %dec_label_pc_c550, label %dec_label_pc_c460

dec_label_pc_c550:                                ; preds = %dec_label_pc_c448.loopexit, %dec_label_pc_c528, %dec_label_pc_c460, %dec_label_pc_c448.preheader
  %v0_c550 = load i32, i32* @r8, align 4
  %v1_c554 = inttoptr i32 %v0_c550 to i32*
  %v2_c554 = call i32 @function_11c88(i32* %v1_c554)
  %v0_c558 = load i32, i32* @sb, align 4
  %v1_c55c = inttoptr i32 %v0_c558 to i32*
  %v2_c55c = call i32 @function_11f94(i32* %v1_c55c)
  %v2_c560 = icmp eq i32 %v2_c55c, 0
  br i1 %v2_c560, label %dec_label_pc_c568, label %dec_label_pc_c364

dec_label_pc_c568:                                ; preds = %dec_label_pc_c354.loopexit, %dec_label_pc_c550, %dec_label_pc_c364, %dec_label_pc_c354.preheader
  %v0_c568 = load i32, i32* @sb, align 4
  %v1_c56c = inttoptr i32 %v0_c568 to i32*
  %v2_c56c = call i32 @function_11c88(i32* %v1_c56c)
  %v0_c570 = load i32, i32* @r5, align 4
  %v1_c570 = urem i32 %v0_c570, 256
  br label %dec_label_pc_c574

dec_label_pc_c574:                                ; preds = %dec_label_pc_c334, %dec_label_pc_c568
  %storemerge = phi i32 [ %v1_c570, %dec_label_pc_c568 ], [ 0, %dec_label_pc_c334 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_c578 = call i32 @function_13d70(i32 1)
  br label %dec_label_pc_c580

dec_label_pc_c580:                                ; preds = %dec_label_pc_c314, %dec_label_pc_c574
  %v1_c580 = call i32 @function_108e8(i32 6)
  %v1_c588 = call i32 @function_108e8(i32 7)
  %v1_c590 = call i32 @function_108e8(i32 8)
  %v0_c594.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %bb, %dec_label_pc_c580
  %v0_c594 = phi i32 [ %v1_c174, %bb ], [ %v0_c594.pre, %dec_label_pc_c580 ]
  store i32 %v3_c094, i32* @r4, align 4
  store i32 %v6_c094, i32* @r5, align 4
  store i32 %v9_c094, i32* @r6, align 4
  store i32 %v12_c094, i32* @r7, align 4
  store i32 %v15_c094, i32* @r8, align 4
  store i32 %v18_c094, i32* @sb, align 4
  store i32 %v21_c094, i32* @sl, align 4
  store i32 %v24_c094, i32* @fp, align 4
  store i32 %v27_c094, i32* @lr, align 4
  ret i32 %v0_c594

dec_label_pc_c5a8:                                ; preds = %dec_label_pc_c284
  %v1_c5a8 = add i32 %v0_c5a8, 1
  %v7_c5ac = icmp eq i32 %v0_c5a8, 0
  br i1 %v7_c5ac, label %dec_label_pc_c5b4, label %dec_label_pc_c28c

dec_label_pc_c5b4:                                ; preds = %dec_label_pc_c5a8
  %v1_c5b4 = add i32 %v0_c294, 3
  %v2_c5b4 = inttoptr i32 %v1_c5b4 to i8*
  %v3_c5b4 = load i8, i8* %v2_c5b4, align 1
  %v7_c5b8 = icmp eq i8 %v3_c5b4, 65
  br i1 %v7_c5b8, label %dec_label_pc_c5cc, label %dec_label_pc_c5c0

dec_label_pc_c5c0:                                ; preds = %dec_label_pc_c5b4, %dec_label_pc_c5cc
  %v0_c29c83 = phi i32 [ %v0_c29c84, %dec_label_pc_c5b4 ], [ 1, %dec_label_pc_c5cc ]
  br label %dec_label_pc_c264.backedge

dec_label_pc_c264.backedge:                       ; preds = %dec_label_pc_c5c0, %dec_label_pc_c290
  %v0_c29c82 = phi i32 [ %v0_c29c83, %dec_label_pc_c5c0 ], [ %v0_c29c84, %dec_label_pc_c290 ]
  %v0_c5a874 = phi i32 [ %v1_c5a8, %dec_label_pc_c5c0 ], [ %v0_c290, %dec_label_pc_c290 ]
  %v0_c284.pr71 = phi i32 [ 0, %dec_label_pc_c5c0 ], [ %v0_c284.pr72, %dec_label_pc_c290 ]
  %v0_c264 = add i32 %v0_c294, 1
  %v1_c264 = add i32 %v0_c294, 3
  %v2_c264 = inttoptr i32 %v1_c264 to i8*
  %v3_c264 = load i8, i8* %v2_c264, align 1
  %v2_c268 = icmp eq i8 %v3_c264, 0
  %v1_c26c = add i32 %v0_c26c79, 1
  br i1 %v2_c268, label %dec_label_pc_c29c, label %dec_label_pc_c274

dec_label_pc_c5cc:                                ; preds = %dec_label_pc_c5b4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_c5c0

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c094
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_c140

; uselistorder directives
  uselistorder i32 %v1_c26c, { 1, 0 }
  uselistorder i8 %v3_c264, { 1, 0 }
  uselistorder i32 %v0_c29c82, { 1, 0 }
  uselistorder i32 %v1_c5a8, { 1, 0 }
  uselistorder i32 %v2_c55c, { 1, 0 }
  uselistorder i32 %v1_c2c8, { 1, 0 }
  uselistorder i32 %v0_c2d430, { 1, 0 }
  uselistorder i32 %v1_c2ec, { 0, 3, 1, 2 }
  uselistorder i32 %v0_c290, { 1, 0 }
  uselistorder i32 %v0_c26c79, { 1, 0 }
  uselistorder i32 %v0_c5a8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_c29c84, { 1, 2, 0 }
  uselistorder i32 %v1_c26c55, { 1, 0 }
  uselistorder i32 %v2_c250, { 1, 0 }
  uselistorder i32 %v1_c24c, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_c20c, { 0, 2, 1 }
  uselistorder i32 %v0_c20c16, { 1, 0 }
  uselistorder i32 %v1_c1d8, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_c168, { 1, 2, 0 }
  uselistorder i32 %v0_c118, { 1, 0 }
  uselistorder i32 %v2_c114, { 1, 0, 2 }
  uselistorder i8* %v2_c0fc, { 1, 0, 2 }
  uselistorder i32 %v2_c0dc, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @function_113f4, { 1, 0 }
  uselistorder label %dec_label_pc_c5c0, { 1, 0 }
  uselistorder label %dec_label_pc_c594, { 1, 0 }
  uselistorder label %dec_label_pc_c580, { 1, 0 }
  uselistorder label %dec_label_pc_c574, { 1, 0 }
  uselistorder label %dec_label_pc_c568, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_c550, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_c460, { 1, 0 }
  uselistorder label %dec_label_pc_c460thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_c448.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_c364, { 1, 0 }
  uselistorder label %dec_label_pc_c364.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c354.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c2e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c290, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c274, { 1, 0 }
  uselistorder label %dec_label_pc_c218, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c17c.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_c1cc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_c194, { 1, 0 }
  uselistorder label %dec_label_pc_c140, { 1, 0 }
}

define i32 @function_c600(i32 %arg1) local_unnamed_addr {
dec_label_pc_c600:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8440 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-4344 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %v3_c600 = load i32, i32* @r4, align 4
  %v6_c600 = load i32, i32* @r5, align 4
  %v9_c600 = load i32, i32* @r6, align 4
  %v12_c600 = load i32, i32* @r7, align 4
  %v15_c600 = load i32, i32* @r8, align 4
  %v18_c600 = load i32, i32* @sb, align 4
  %v21_c600 = load i32, i32* @sl, align 4
  %v24_c600 = load i32, i32* @fp, align 4
  %v27_c600 = load i32, i32* @lr, align 4
  %v2_c610 = call i32 @function_118d4(i32* null)
  store i32 %v2_c610, i32* @r0, align 4
  store i32 %v2_c610, i32* @r7, align 4
  %v0_c618 = call i32 @function_11944()
  %v7_c61c = icmp eq i32 %v0_c618, -1
  %. = zext i1 %v7_c61c to i32
  %tmp412 = icmp slt i32 %v0_c618, 1
  %storemerge359 = select i1 %tmp412, i32 %., i32 1
  store i32 %storemerge359, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_1a2e0.54 to i32), i32* %r3.global-to-local, align 4
  %v2_c638 = icmp eq i32 %storemerge359, 0
  store i32 %v0_c618, i32* @global_var_1a2e0.54, align 4
  br i1 %v2_c638, label %dec_label_pc_c654, label %dec_label_pc_c644

dec_label_pc_c644:                                ; preds = %dec_label_pc_c7bc, %dec_label_pc_c6b0, %dec_label_pc_c600
  %v1_c650 = phi i32 [ %v2_c758, %dec_label_pc_c6b0 ], [ %v0_c618, %dec_label_pc_c600 ], [ 0, %dec_label_pc_c7bc ]
  store i32 %v3_c600, i32* @r4, align 4
  store i32 %v6_c600, i32* @r5, align 4
  store i32 %v9_c600, i32* @r6, align 4
  store i32 %v12_c600, i32* @r7, align 4
  store i32 %v15_c600, i32* @r8, align 4
  store i32 %v18_c600, i32* @sb, align 4
  store i32 %v21_c600, i32* @sl, align 4
  store i32 %v24_c600, i32* @fp, align 4
  store i32 %v27_c600, i32* @lr, align 4
  ret i32 %v1_c650

dec_label_pc_c654:                                ; preds = %dec_label_pc_c600
  %v2_c654 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_c654, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v1_c668 = call i32 @function_c094(i32 5632)
  store i32 %v2_c654, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_c67c = load i32, i32* @r5, align 4
  store i32 %v0_c67c, i32* %r2.global-to-local, align 4
  %v3_c684 = call i32 @function_12464(i32 2, i32 1, i32 %v0_c67c)
  %v7_c688 = icmp eq i32 %v3_c684, -1
  store i32 %v3_c684, i32* @r4, align 4
  br i1 %v7_c688, label %dec_label_pc_c6b0, label %dec_label_pc_c694

dec_label_pc_c694:                                ; preds = %dec_label_pc_c654
  %v2_c698 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_c698, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_c6a0 = call i32 @function_12214(i32 %v3_c684, i32 %v2_c698, i32 16)
  %v0_c6a4 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_c6ac = call i32 @function_12300(i32 %v0_c6a4, i32 1)
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c654, %dec_label_pc_c694
  %v1_c6b4 = call i32 @function_13d70(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_c6bc = call i32 @function_126ac()
  store i32 ptrtoint (i32* @global_var_18254.59 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2dc.61 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_c6bc, i32* %r2.global-to-local, align 4
  %v0_c6cc = load i32, i32* @r5, align 4
  %v1_c6cc = trunc i32 %v0_c6cc to i8
  %v3_c6cc = inttoptr i32 %v0_c6bc to i8*
  store i8 %v1_c6cc, i8* %v3_c6cc, align 1
  %v0_c6d4 = load i32, i32* @r5, align 4
  %v1_c6d4 = load i32, i32* %r3.global-to-local, align 4
  %v2_c6d4 = inttoptr i32 %v1_c6d4 to i32*
  store i32 %v0_c6d4, i32* %v2_c6d4, align 4
  %v0_c6d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_c6d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_c6d8 = inttoptr i32 %v1_c6d8 to i32*
  store i32 %v0_c6d8, i32* %v2_c6d8, align 4
  %v1_c6dc = call i32 @function_10988(i32 6)
  %v1_c6e4 = call i32 @function_10988(i32 7)
  %v0_c6e8 = load i32, i32* @r5, align 4
  store i32 %v0_c6e8, i32* %r1.global-to-local, align 4
  %v2_c6f0 = inttoptr i32 %v0_c6e8 to i32*
  %v3_c6f0 = call i32 @function_108c4(i32 6, i32* %v2_c6f0)
  %v2_c6fc = ptrtoint i32* %stack_var_-4344 to i32
  store i32 %v2_c6fc, i32* @sb, align 4
  store i32 %v3_c6f0, i32* %r1.global-to-local, align 4
  store i32 %v2_c6fc, i32* @r0, align 4
  %v2_c708 = bitcast i32* %stack_var_-4344 to i8*
  %v3_c708 = call i32 @function_111bc(i8* %v2_c708, i32 %v3_c6f0)
  store i32 %v3_c708, i32* @r0, align 4
  %v1_c70c = load i32, i32* @sb, align 4
  %v2_c70c = add i32 %v1_c70c, %v3_c708
  store i32 %v2_c70c, i32* @r4, align 4
  %v0_c710 = call i32 @function_118c0()
  %v2_c718 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_c718, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_c720 = trunc i32 %v0_c710 to i8
  %v4_c720 = call i32 @function_115f4(i8 %v3_c720, i32 10, i32 %v2_c718)
  store i32 %v4_c720, i32* %r1.global-to-local, align 4
  %v0_c728 = load i32, i32* @r4, align 4
  store i32 %v0_c728, i32* @r0, align 4
  %v2_c72c = inttoptr i32 %v0_c728 to i8*
  %v3_c72c = call i32 @function_111bc(i8* %v2_c72c, i32 %v4_c720)
  %v0_c730 = load i32, i32* @r5, align 4
  store i32 %v0_c730, i32* %r1.global-to-local, align 4
  %v1_c734 = load i32, i32* @r4, align 4
  %v2_c734 = add i32 %v1_c734, %v3_c72c
  store i32 %v2_c734, i32* @r4, align 4
  %v2_c73c = inttoptr i32 %v0_c730 to i32*
  %v3_c73c = call i32 @function_108c4(i32 7, i32* %v2_c73c)
  store i32 %v3_c73c, i32* %r1.global-to-local, align 4
  %v0_c744 = load i32, i32* @r4, align 4
  store i32 %v0_c744, i32* @r0, align 4
  %v2_c748 = inttoptr i32 %v0_c744 to i8*
  %v3_c748 = call i32 @function_111bc(i8* %v2_c748, i32 %v3_c73c)
  %v0_c74c = load i32, i32* @r5, align 4
  store i32 %v0_c74c, i32* %r1.global-to-local, align 4
  store i32 %v3_c748, i32* @r6, align 4
  %v2_c758 = call i32 @function_11860(i32 %v2_c6fc, i32 %v0_c74c)
  %v7_c75c = icmp eq i32 %v2_c758, -1
  br i1 %v7_c75c, label %dec_label_pc_c644, label %dec_label_pc_c764

dec_label_pc_c764:                                ; preds = %dec_label_pc_c6b0
  %v1_c764 = call i32 @function_11c54(i32 %v2_c758)
  %v1_c76c = call i32 @function_108e8(i32 6)
  %v1_c774 = call i32 @function_108e8(i32 7)
  store i32 ptrtoint (i32* @global_var_1a2dc.61 to i32), i32* %r3.global-to-local, align 4
  %v2_c780 = load i32, i32* @global_var_1a2dc.61, align 4
  store i32 %v2_c780, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_c78c = call i32 @function_119b8(i32 %v2_c6fc, i32 %v2_c780, i32 4095)
  %v7_c790 = icmp eq i32 %v3_c78c, -1
  br i1 %v7_c790, label %.thread9.thread, label %bb415

.thread9.thread:                                  ; preds = %dec_label_pc_c764
  %v0_c79c134 = load i32, i32* @r6, align 4
  %v1_c79c135 = load i32, i32* @r4, align 4
  %v2_c79c136 = add i32 %v1_c79c135, %v0_c79c134
  store i32 %v2_c79c136, i32* %r1.global-to-local, align 4
  br label %bb416

bb415:                                            ; preds = %dec_label_pc_c764
  %v3_c798 = load i32, i32* @global_var_1a2dc.61, align 4
  store i32 %v3_c798, i32* %r3.global-to-local, align 4
  %v0_c79c = load i32, i32* @r6, align 4
  %v1_c79c = load i32, i32* @r4, align 4
  %v2_c79c = add i32 %v1_c79c, %v0_c79c
  store i32 %v2_c79c, i32* %r1.global-to-local, align 4
  %v1_c7a0 = load i32, i32* @r5, align 4
  %v2_c7a0 = trunc i32 %v1_c7a0 to i8
  %v5_c7a0 = add i32 %v3_c798, %v3_c78c
  %v6_c7a0 = inttoptr i32 %v5_c7a0 to i8*
  store i8 %v2_c7a0, i8* %v6_c7a0, align 1
  %v1_c7a4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb416

bb416:                                            ; preds = %.thread9.thread, %bb415
  %v1_c7a4 = phi i32 [ %v2_c79c136, %.thread9.thread ], [ %v1_c7a4.pre, %bb415 ]
  %v0_c7a4 = load i32, i32* @sb, align 4
  %v2_c7a4 = sub i32 %v1_c7a4, %v0_c7a4
  store i32 %v2_c7a4, i32* @r1, align 4
  store i32 %v2_c6fc, i32* @r0, align 4
  %v0_c7ac = call i32 @function_11228()
  %v0_c7b0 = load i32, i32* @r5, align 4
  store i32 %v0_c7b0, i32* @fp, align 4
  %v0_c7b4 = load i32, i32* @r7, align 4
  store i32 %v0_c7b4, i32* @r4, align 4
  store i32 400, i32* @r5, align 4
  %v2_c8b0 = ptrtoint i32* %stack_var_-184 to i32
  %v2_c8bc = bitcast i32* %stack_var_-184 to i8*
  %v2_c900 = ptrtoint i32* %stack_var_-248 to i32
  %v2_c904 = bitcast i32* %stack_var_-248 to i8*
  %v2_ca9c = ptrtoint i32* %stack_var_-44 to i32
  %v2_caa8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_cac0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_cad4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_cae8 = ptrtoint i32* %stack_var_-60 to i32
  %v2_cafc = ptrtoint i32* %stack_var_-64 to i32
  %v2_cb10 = ptrtoint i32* %stack_var_-68 to i32
  %v2_cb24 = ptrtoint i32* %stack_var_-72 to i32
  %v2_cb38 = ptrtoint i32* %stack_var_-76 to i32
  %v2_cb4c = ptrtoint i32* %stack_var_-80 to i32
  %v2_cb60 = ptrtoint i32* %stack_var_-84 to i32
  %v2_cb74 = ptrtoint i32* %stack_var_-88 to i32
  %v2_cb88 = ptrtoint i32* %stack_var_-8440 to i32
  br label %dec_label_pc_c7bc

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c878, %bb416
  %v1_c7c0 = call i32 @function_10988(i32 6)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c7cc = call i32 @function_108c4(i32 6, i32* null)
  %v1_c7d0 = call i32 @function_11e50(i32 %v3_c7cc)
  store i32 %v1_c7d0, i32* @r8, align 4
  %v2_c7d4 = icmp eq i32 %v1_c7d0, 0
  br i1 %v2_c7d4, label %dec_label_pc_c644, label %dec_label_pc_c7dc

dec_label_pc_c7dc:                                ; preds = %dec_label_pc_c7bc
  %v1_c7e0 = call i32 @function_108e8(i32 6)
  %v0_c7e4238 = load i32, i32* @r8, align 4
  %v1_c7e8239 = inttoptr i32 %v0_c7e4238 to i32*
  %v2_c7e8240 = call i32 @function_11f94(i32* %v1_c7e8239)
  %v2_c7ec242 = icmp eq i32 %v2_c7e8240, 0
  br i1 %v2_c7ec242, label %dec_label_pc_c878, label %dec_label_pc_c7f4.preheader

dec_label_pc_c7f4.preheader:                      ; preds = %dec_label_pc_c7dc, %dec_label_pc_c7e4.backedge
  %v0_c7f4257 = phi i32 [ %v2_c7e8, %dec_label_pc_c7e4.backedge ], [ %v2_c7e8240, %dec_label_pc_c7dc ]
  br label %dec_label_pc_c7f4

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7f4.preheader, %dec_label_pc_c860
  %v0_c804 = phi i32 [ %v0_c7f4257, %dec_label_pc_c7f4.preheader ], [ %v2_c86c, %dec_label_pc_c860 ]
  %v1_c7f4 = add i32 %v0_c804, 11
  %v2_c7f4 = inttoptr i32 %v1_c7f4 to i8*
  %v3_c7f4 = load i8, i8* %v2_c7f4, align 1
  %v4_c7f4 = zext i8 %v3_c7f4 to i32
  %v1_c7f8 = add nsw i32 %v4_c7f4, -48
  store i32 %v1_c7f8, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_c7f8, 9
  br i1 %tmp, label %dec_label_pc_c7e4.backedge, label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %dec_label_pc_c7f4
  store i32 %v1_c7f4, i32* @r6, align 4
  store i32 %v1_c7f4, i32* @r0, align 4
  %v1_c80c = call i32 @function_13abc(i32 %v1_c7f4)
  %v0_c810 = load i32, i32* @r5, align 4
  store i32 %v1_c80c, i32* @r7, align 4
  %v0_c818 = load i32, i32* @fp, align 4
  %v1_c818 = add i32 %v0_c818, 1
  store i32 %v1_c818, i32* @fp, align 4
  %v5_c81c = icmp slt i32 %v0_c810, %v1_c80c
  %v2_c888 = call i32 @function_118d4(i32* null)
  br i1 %v5_c81c, label %dec_label_pc_c884, label %dec_label_pc_c820

dec_label_pc_c820:                                ; preds = %dec_label_pc_c804
  %v0_c828 = load i32, i32* @r4, align 4
  %v2_c828 = sub i32 %v2_c888, %v0_c828
  %v7_c830 = icmp slt i32 %v2_c828, 601
  br i1 %v7_c830, label %dec_label_pc_c838, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_c820
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_c7e4.backedge

dec_label_pc_c838:                                ; preds = %dec_label_pc_c820
  %v0_c838 = load i32, i32* @r7, align 4
  %v7_c83c = icmp slt i32 %v0_c838, 401
  br i1 %v7_c83c, label %dec_label_pc_c7e4.backedge, label %dec_label_pc_c840

dec_label_pc_c840:                                ; preds = %dec_label_pc_c838
  %v2_c844 = load i32, i32* @fp, align 4
  %v3_c844 = zext i32 %v2_c844 to i64
  %v4_c844 = mul nuw i64 %v3_c844, 3435973837
  %v7_c844 = trunc i64 %v4_c844 to i32
  store i32 %v7_c844, i32* %r1.global-to-local, align 4
  %v3_c8481 = udiv i64 %v4_c844, 34359738368
  %v3_c84c3 = mul nuw nsw i64 %v3_c8481, 8
  %v3_c84c = trunc i64 %v3_c84c3 to i32
  store i32 %v3_c84c, i32* %r3.global-to-local, align 4
  %v2_c8505 = mul nuw nsw i64 %v3_c8481, 2
  %v2_c850 = trunc i64 %v2_c8505 to i32
  %v2_c854 = add i32 %v3_c84c, %v2_c850
  store i32 %v2_c854, i32* %r2.global-to-local, align 4
  %v9_c858 = icmp eq i32 %v2_c844, %v2_c854
  br i1 %v9_c858, label %dec_label_pc_c860, label %dec_label_pc_c7e4.backedge

dec_label_pc_c860:                                ; preds = %dec_label_pc_c840
  %v1_c864 = call i32 @function_13d70(i32 1)
  %v0_c868 = load i32, i32* @r8, align 4
  %v1_c86c = inttoptr i32 %v0_c868 to i32*
  %v2_c86c = call i32 @function_11f94(i32* %v1_c86c)
  %v2_c870 = icmp eq i32 %v2_c86c, 0
  br i1 %v2_c870, label %dec_label_pc_c878, label %dec_label_pc_c7f4

dec_label_pc_c878:                                ; preds = %dec_label_pc_c7e4.backedge, %dec_label_pc_c860, %dec_label_pc_c7dc
  %v0_c878 = load i32, i32* @r8, align 4
  %v1_c87c = inttoptr i32 %v0_c878 to i32*
  %v2_c87c = call i32 @function_11c88(i32* %v1_c87c)
  br label %dec_label_pc_c7bc

dec_label_pc_c884:                                ; preds = %dec_label_pc_c804
  %v1_c894 = call i32 @function_10988(i32 6)
  %v1_c89c = call i32 @function_10988(i32 7)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c8a8 = call i32 @function_108c4(i32 6, i32* null)
  store i32 %v2_c8b0, i32* @sl, align 4
  store i32 %v3_c8a8, i32* %r1.global-to-local, align 4
  store i32 %v2_c8b0, i32* @r0, align 4
  %v3_c8bc = call i32 @function_111bc(i8* %v2_c8bc, i32 %v3_c8a8)
  %v1_c8c0 = load i32, i32* @sl, align 4
  %v2_c8c0 = add i32 %v1_c8c0, %v3_c8bc
  store i32 %v2_c8c0, i32* %r5.global-to-local, align 4
  %v0_c8c4 = load i32, i32* @r6, align 4
  store i32 %v0_c8c4, i32* %r1.global-to-local, align 4
  store i32 %v2_c8c0, i32* @r0, align 4
  %v2_c8cc = inttoptr i32 %v2_c8c0 to i8*
  %v3_c8cc = call i32 @function_111bc(i8* %v2_c8cc, i32 %v0_c8c4)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_c8cc, i32* %r4.global-to-local, align 4
  %v3_c8dc = call i32 @function_108c4(i32 7, i32* null)
  store i32 %v3_c8dc, i32* %r1.global-to-local, align 4
  %v1_c8e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_c8e4 = add i32 %v1_c8e4, %v3_c8cc
  store i32 %v2_c8e4, i32* @r0, align 4
  %v2_c8e8 = inttoptr i32 %v2_c8e4 to i8*
  %v3_c8e8 = call i32 @function_111bc(i8* %v2_c8e8, i32 %v3_c8dc)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_c8f4 = call i32 @function_108c4(i32 6, i32* null)
  store i32 %v3_c8f4, i32* %r1.global-to-local, align 4
  store i32 %v2_c900, i32* @r0, align 4
  %v3_c904 = call i32 @function_111bc(i8* %v2_c904, i32 %v3_c8f4)
  store i32 %v2_c900, i32* %r2.global-to-local, align 4
  %v2_c910 = add i32 %v3_c904, %v2_c900
  store i32 %v2_c910, i32* @r5, align 4
  %v0_c914 = load i32, i32* @r6, align 4
  store i32 %v0_c914, i32* %r1.global-to-local, align 4
  store i32 %v2_c910, i32* @r0, align 4
  %v2_c91c = inttoptr i32 %v2_c910 to i8*
  %v3_c91c = call i32 @function_111bc(i8* %v2_c91c, i32 %v0_c914)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_c91c, i32* @r4, align 4
  %v3_c92c = call i32 @function_108c4(i32 11, i32* null)
  store i32 %v3_c92c, i32* %r1.global-to-local, align 4
  %v0_c934 = load i32, i32* @r4, align 4
  %v1_c934 = load i32, i32* @r5, align 4
  %v2_c934 = add i32 %v1_c934, %v0_c934
  store i32 %v2_c934, i32* @r0, align 4
  %v2_c938 = inttoptr i32 %v2_c934 to i8*
  %v3_c938 = call i32 @function_111bc(i8* %v2_c938, i32 %v3_c92c)
  %v1_c940 = call i32 @function_108e8(i32 6)
  %v1_c948 = call i32 @function_108e8(i32 7)
  store i32 %v2_c6fc, i32* %r1.global-to-local, align 4
  store i32 4095, i32* @r2, align 4
  %v3_c95c = call i32 @function_119b8(i32 %v2_c8b0, i32 %v2_c6fc, i32 4095)
  %v7_c960 = icmp eq i32 %v3_c95c, -1
  store i32 %v3_c95c, i32* @r5, align 4
  br i1 %v7_c960, label %dec_label_pc_ca20, label %dec_label_pc_c96c

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c884
  store i32 0, i32* @r4, align 4
  %v2_c974 = load i32, i32* @sb, align 4
  %v4_c974 = add i32 %v2_c974, %v3_c95c
  %v5_c974 = inttoptr i32 %v4_c974 to i8*
  store i8 0, i8* %v5_c974, align 1
  %v1_c978 = call i32 @function_10988(i32 12)
  %v0_c97c = load i32, i32* @r4, align 4
  store i32 %v0_c97c, i32* %r1.global-to-local, align 4
  %v2_c984 = inttoptr i32 %v0_c97c to i32*
  %v3_c984 = call i32 @function_108c4(i32 12, i32* %v2_c984)
  %v0_c988 = load i32, i32* @r5, align 4
  %v1_c988 = add i32 %v0_c988, -1
  store i32 %v1_c988, i32* @r1, align 4
  store i32 %v3_c984, i32* %r2.global-to-local, align 4
  %v4_c994 = call i32 @function_114e4(i8* %v2_c708, i32 %v1_c988, i32 %v3_c984)
  %v7_c998 = icmp eq i32 %v4_c994, -1
  br i1 %v7_c998, label %dec_label_pc_c9b4, label %dec_label_pc_c9a0

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c96c
  %v1_c9a4 = call i32 @function_1182c(i32 %v2_c6fc)
  %v0_c9a8 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_c9b0 = call i32 @function_11a20(i32 %v0_c9a8, i32 9)
  br label %dec_label_pc_c9b4

dec_label_pc_c9b4:                                ; preds = %dec_label_pc_c96c, %dec_label_pc_c9a0
  %v1_c9b8 = call i32 @function_108e8(i32 12)
  store i32 %v1_c9b8, i32* @r0, align 4
  %v0_c9bc = call i32 @function_118c0()
  store i32 %v0_c9bc, i32* @r0, align 4
  %v1_c9c0 = load i32, i32* @r7, align 4
  %v9_c9c0 = icmp eq i32 %v0_c9bc, %v1_c9c0
  br i1 %v9_c9c0, label %dec_label_pc_c9ec, label %dec_label_pc_c9c8

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9b4
  %v0_c9c8 = call i32 @function_11818()
  %v1_c9cc = load i32, i32* @r7, align 4
  %v9_c9cc = icmp eq i32 %v0_c9c8, %v1_c9cc
  br i1 %v9_c9cc, label %dec_label_pc_c9ec, label %dec_label_pc_c9d4

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9c8
  store i32 ptrtoint (i32* @global_var_1a2dc.61 to i32), i32* %r3.global-to-local, align 4
  %v2_c9dc = load i32, i32* @global_var_1a2dc.61, align 4
  store i32 %v2_c9dc, i32* %r1.global-to-local, align 4
  %v3_c9e0 = call i32 @function_11574(i8* %v2_c708, i32 %v2_c9dc)
  %v2_c9e4 = icmp eq i32 %v3_c9e0, 0
  br i1 %v2_c9e4, label %dec_label_pc_c9f8, label %dec_label_pc_c9d4.dec_label_pc_c9ec_crit_edge

dec_label_pc_c9d4.dec_label_pc_c9ec_crit_edge:    ; preds = %dec_label_pc_c9d4
  %v0_c9f0.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c9ec

dec_label_pc_c9ec:                                ; preds = %dec_label_pc_c9d4.dec_label_pc_c9ec_crit_edge, %dec_label_pc_c9c8, %dec_label_pc_c9b4
  %v0_c9f0 = phi i32 [ %v0_c9f0.pre, %dec_label_pc_c9d4.dec_label_pc_c9ec_crit_edge ], [ %v0_c9c8, %dec_label_pc_c9c8 ], [ %v0_c9bc, %dec_label_pc_c9b4 ]
  store i32 %v2_c888, i32* @r4, align 4
  store i32 %v0_c9f0, i32* @r5, align 4
  br label %dec_label_pc_c7e4.backedge

dec_label_pc_c7e4.backedge:                       ; preds = %dec_label_pc_c840, %dec_label_pc_c838, %dec_label_pc_c7f4, %dec_label_pc_c9ec, %dec_label_pc_cfdc, %.thread15
  %v0_c7e4 = load i32, i32* @r8, align 4
  %v1_c7e8 = inttoptr i32 %v0_c7e4 to i32*
  %v2_c7e8 = call i32 @function_11f94(i32* %v1_c7e8)
  %v2_c7ec = icmp eq i32 %v2_c7e8, 0
  br i1 %v2_c7ec, label %dec_label_pc_c878, label %dec_label_pc_c7f4.preheader

dec_label_pc_c9f8:                                ; preds = %dec_label_pc_c9d4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_ca00 = call i32 @function_11860(i32 %v2_c6fc, i32 0)
  %v7_ca04 = icmp eq i32 %v2_ca00, -1
  store i32 %v2_ca00, i32* @r4, align 4
  br i1 %v7_ca04, label %bb417, label %.thread17

bb417:                                            ; preds = %dec_label_pc_c9f8
  store i32 9, i32* %r1.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_c9f8, %bb417
  store i32 51736, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_ca04, i32 ptrtoint (i32* @global_var_11a20.63 to i32))
  %v0_ca18 = load i32, i32* @r4, align 4
  %v1_ca1c = call i32 @function_11c54(i32 %v0_ca18)
  br label %dec_label_pc_ca20

dec_label_pc_ca20:                                ; preds = %dec_label_pc_c884, %.thread17
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_ca28 = call i32 @function_11860(i32 %v2_c8b0, i32 0)
  %v7_ca2c = icmp eq i32 %v2_ca28, -1
  store i32 %v2_ca28, i32* @r6, align 4
  br i1 %v7_ca2c, label %dec_label_pc_cfdc, label %dec_label_pc_ca38

dec_label_pc_ca38:                                ; preds = %dec_label_pc_ca20
  %v1_ca3c = call i32 @function_10988(i32 13)
  %v1_ca44 = call i32 @function_10988(i32 14)
  %v1_ca4c = call i32 @function_10988(i32 15)
  %v1_ca54 = call i32 @function_10988(i32 16)
  %v1_ca5c = call i32 @function_10988(i32 17)
  %v1_ca64 = call i32 @function_10988(i32 18)
  %v1_ca6c = call i32 @function_10988(i32 19)
  %v1_ca74 = call i32 @function_10988(i32 20)
  %v1_ca7c = call i32 @function_10988(i32 21)
  %v1_ca84 = call i32 @function_10988(i32 22)
  %v1_ca8c = call i32 @function_10988(i32 23)
  %v1_ca94 = call i32 @function_10988(i32 42)
  store i32 %v2_ca9c, i32* %r1.global-to-local, align 4
  %v3_caa4 = call i32 @function_108c4(i32 13, i32* nonnull %stack_var_-44)
  store i32 %v2_caa8, i32* %r1.global-to-local, align 4
  %v3_cab4 = call i32 @function_108c4(i32 14, i32* nonnull %stack_var_-48)
  store i32 %v2_cac0, i32* %r1.global-to-local, align 4
  %v3_cac8 = call i32 @function_108c4(i32 15, i32* nonnull %stack_var_-52)
  store i32 %v2_cad4, i32* %r1.global-to-local, align 4
  %v3_cadc = call i32 @function_108c4(i32 16, i32* nonnull %stack_var_-56)
  store i32 %v2_cae8, i32* %r1.global-to-local, align 4
  %v3_caf0 = call i32 @function_108c4(i32 17, i32* nonnull %stack_var_-60)
  store i32 %v2_cafc, i32* %r1.global-to-local, align 4
  %v3_cb04 = call i32 @function_108c4(i32 18, i32* nonnull %stack_var_-64)
  store i32 %v2_cb10, i32* %r1.global-to-local, align 4
  %v3_cb18 = call i32 @function_108c4(i32 19, i32* nonnull %stack_var_-68)
  store i32 %v2_cb24, i32* %r1.global-to-local, align 4
  %v3_cb2c = call i32 @function_108c4(i32 20, i32* nonnull %stack_var_-72)
  store i32 %v2_cb38, i32* %r1.global-to-local, align 4
  %v3_cb40 = call i32 @function_108c4(i32 21, i32* nonnull %stack_var_-76)
  store i32 %v2_cb4c, i32* %r1.global-to-local, align 4
  %v3_cb54 = call i32 @function_108c4(i32 22, i32* nonnull %stack_var_-80)
  store i32 %v2_cb60, i32* %r1.global-to-local, align 4
  %v3_cb68 = call i32 @function_108c4(i32 23, i32* nonnull %stack_var_-84)
  store i32 %v2_cb74, i32* %r1.global-to-local, align 4
  %v3_cb7c = call i32 @function_108c4(i32 42, i32* nonnull %stack_var_-88)
  store i32 %v2_cb88, i32* %r4.global-to-local, align 4
  %v0_cb8c234 = load i32, i32* @r6, align 4
  store i32 %v2_cb88, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_cb98235 = call i32 @function_119ec(i32 %v0_cb8c234)
  %tmp418 = icmp slt i32 %v1_cb98235, 1
  br i1 %tmp418, label %dec_label_pc_cf6c, label %dec_label_pc_cba4

dec_label_pc_cba4:                                ; preds = %dec_label_pc_ca38, %dec_label_pc_cb8c.backedge
  %v0_cd74225 = phi i32 [ %v1_cb98, %dec_label_pc_cb8c.backedge ], [ %v1_cb98235, %dec_label_pc_ca38 ]
  %v3_cba8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cba8, i32* @r5, align 4
  %v5_cbb0 = icmp slt i32 %v0_cd74225, %v3_cba8
  br i1 %v5_cbb0, label %dec_label_pc_cbc0, label %dec_label_pc_cdb4.lr.ph

dec_label_pc_cdb4.lr.ph:                          ; preds = %dec_label_pc_cba4
  %v1_cdac154 = add i32 %v0_cd74225, -1
  store i32 %v1_cdac154, i32* %r1.global-to-local, align 4
  %v1_cdbc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdb4

dec_label_pc_cbc0:                                ; preds = %dec_label_pc_cdac.backedge, %dec_label_pc_cba4
  %v3_cbc4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_cbc4, i32* @r5, align 4
  %v5_cbcc = icmp slt i32 %v0_cd74225, %v3_cbc4
  br i1 %v5_cbcc, label %dec_label_pc_cbdc, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_cbc0
  %v1_cde4163 = add i32 %v0_cd74225, -1
  store i32 %v1_cde4163, i32* %r1.global-to-local, align 4
  %v2_cde4164 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cde4164, label %dec_label_pc_cbdc, label %dec_label_pc_cdec.lr.ph

dec_label_pc_cdec.lr.ph:                          ; preds = %.thread33
  %v1_cdf4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdec

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cde4.backedge, %.thread33, %dec_label_pc_cbc0
  %v3_cbe0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_cbe0, i32* @r5, align 4
  %v5_cbe8 = icmp slt i32 %v0_cd74225, %v3_cbe0
  br i1 %v5_cbe8, label %dec_label_pc_cbf8, label %.thread42

.thread42:                                        ; preds = %dec_label_pc_cbdc
  %v1_ce1c172 = add i32 %v0_cd74225, -1
  store i32 %v1_ce1c172, i32* %r1.global-to-local, align 4
  %v2_ce1c173 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_ce1c173, label %dec_label_pc_cbf8, label %dec_label_pc_ce24.lr.ph

dec_label_pc_ce24.lr.ph:                          ; preds = %.thread42
  %v1_ce2c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce24

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_ce1c.backedge, %.thread42, %dec_label_pc_cbdc
  %v3_cbfc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_cbfc, i32* @r5, align 4
  %v5_cc04 = icmp slt i32 %v0_cd74225, %v3_cbfc
  br i1 %v5_cc04, label %dec_label_pc_cc14, label %.thread51

.thread51:                                        ; preds = %dec_label_pc_cbf8
  %v1_ce54181 = add i32 %v0_cd74225, -1
  store i32 %v1_ce54181, i32* %r1.global-to-local, align 4
  %v2_ce54182 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_ce54182, label %dec_label_pc_cc14, label %dec_label_pc_ce5c.lr.ph

dec_label_pc_ce5c.lr.ph:                          ; preds = %.thread51
  %v1_ce64.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce5c

dec_label_pc_cc14:                                ; preds = %dec_label_pc_ce54.backedge, %.thread51, %dec_label_pc_cbf8
  %v3_cc18 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_cc18, i32* @r5, align 4
  %v5_cc20 = icmp slt i32 %v0_cd74225, %v3_cc18
  br i1 %v5_cc20, label %dec_label_pc_cc30, label %.thread60

.thread60:                                        ; preds = %dec_label_pc_cc14
  %v1_ce8c190 = add i32 %v0_cd74225, -1
  store i32 %v1_ce8c190, i32* %r1.global-to-local, align 4
  %v2_ce8c191 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_ce8c191, label %dec_label_pc_cc30, label %dec_label_pc_ce94.lr.ph

dec_label_pc_ce94.lr.ph:                          ; preds = %.thread60
  %v1_ce9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce94

dec_label_pc_cc30:                                ; preds = %dec_label_pc_ce8c.backedge, %.thread60, %dec_label_pc_cc14
  %v3_cc34 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_cc34, i32* @r5, align 4
  %v5_cc3c = icmp slt i32 %v0_cd74225, %v3_cc34
  br i1 %v5_cc3c, label %dec_label_pc_cc4c, label %.thread69

.thread69:                                        ; preds = %dec_label_pc_cc30
  %v1_cec4199 = add i32 %v0_cd74225, -1
  store i32 %v1_cec4199, i32* %r1.global-to-local, align 4
  %v2_cec4200 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cec4200, label %dec_label_pc_cc4c, label %dec_label_pc_cecc.lr.ph

dec_label_pc_cecc.lr.ph:                          ; preds = %.thread69
  %v1_ced4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cecc

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cec4.backedge, %.thread69, %dec_label_pc_cc30
  %v3_cc50 = load i32, i32* %stack_var_-68, align 4
  store i32 %v3_cc50, i32* @r5, align 4
  %v5_cc58 = icmp slt i32 %v0_cd74225, %v3_cc50
  br i1 %v5_cc58, label %dec_label_pc_cc68, label %.thread78

.thread78:                                        ; preds = %dec_label_pc_cc4c
  %v1_cefc208 = add i32 %v0_cd74225, -1
  store i32 %v1_cefc208, i32* %r1.global-to-local, align 4
  %v2_cefc209 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cefc209, label %dec_label_pc_cc68, label %dec_label_pc_cf04.lr.ph

dec_label_pc_cf04.lr.ph:                          ; preds = %.thread78
  %v1_cf0c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cf04

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cefc.backedge, %.thread78, %dec_label_pc_cc4c
  %v3_cc6c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_cc6c, i32* @r5, align 4
  %v5_cc74 = icmp slt i32 %v0_cd74225, %v3_cc6c
  br i1 %v5_cc74, label %dec_label_pc_cc84, label %.thread87

.thread87:                                        ; preds = %dec_label_pc_cc68
  %v1_cf34217 = add i32 %v0_cd74225, -1
  store i32 %v1_cf34217, i32* %r1.global-to-local, align 4
  %v2_cf34218 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cf34218, label %dec_label_pc_cc84, label %dec_label_pc_cf3c.lr.ph

dec_label_pc_cf3c.lr.ph:                          ; preds = %.thread87
  %v1_cf44.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cf3c

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cf34.backedge, %.thread87, %dec_label_pc_cc68
  %v3_cc88 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_cc88, i32* @r5, align 4
  %v5_cc90 = icmp slt i32 %v0_cd74225, %v3_cc88
  br i1 %v5_cc90, label %dec_label_pc_cccc, label %dec_label_pc_cca0

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc84
  %v1_cca0 = add i32 %v0_cd74225, -1
  store i32 %v1_cca0, i32* %r1.global-to-local, align 4
  %v2_cca0 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cca0, label %dec_label_pc_cccc, label %dec_label_pc_cca8.preheader

dec_label_pc_cca8.preheader:                      ; preds = %dec_label_pc_cca0
  %v1_ccb0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cca8

dec_label_pc_cca8:                                ; preds = %dec_label_pc_ccc0, %dec_label_pc_cca8.preheader
  %v0_ccc0 = phi i32 [ %v1_cca0, %dec_label_pc_cca8.preheader ], [ %v1_ccc0, %dec_label_pc_ccc0 ]
  %v0_ccc4 = phi i32 [ 0, %dec_label_pc_cca8.preheader ], [ %v1_ccc4, %dec_label_pc_ccc0 ]
  %v1_ccac = phi i32 [ 0, %dec_label_pc_cca8.preheader ], [ %v1_ccac325, %dec_label_pc_ccc0 ]
  store i32 %v3_cb40, i32* %r3.global-to-local, align 4
  %v2_ccac = add i32 %v1_ccac, %v3_cb40
  %v3_ccac = inttoptr i32 %v2_ccac to i8*
  %v4_ccac = load i8, i8* %v3_ccac, align 1
  %v6_ccac = zext i8 %v4_ccac to i32
  store i32 %v6_ccac, i32* %r2.global-to-local, align 4
  %v2_ccb0 = add i32 %v0_ccc4, %v1_ccb0.pre
  %v3_ccb0 = inttoptr i32 %v2_ccb0 to i8*
  %v4_ccb0 = load i8, i8* %v3_ccb0, align 1
  %v6_ccb0 = zext i8 %v4_ccb0 to i32
  store i32 %v6_ccb0, i32* %r3.global-to-local, align 4
  %v9_ccb4 = icmp eq i8 %v4_ccb0, %v4_ccac
  br i1 %v9_ccb4, label %dec_label_pc_cf5c, label %bb419

bb419:                                            ; preds = %dec_label_pc_cca8
  br label %dec_label_pc_ccc0

dec_label_pc_ccc0:                                ; preds = %bb419, %dec_label_pc_cf5c
  %v1_ccac325 = phi i32 [ %v1_cf5c, %dec_label_pc_cf5c ], [ 0, %bb419 ]
  %v1_ccc0 = add i32 %v0_ccc0, -1
  store i32 %v1_ccc0, i32* %r1.global-to-local, align 4
  %v2_ccc0 = icmp eq i32 %v0_ccc0, 0
  %v1_ccc4 = add i32 %v0_ccc4, 1
  br i1 %v2_ccc0, label %dec_label_pc_cccc, label %dec_label_pc_cca8

dec_label_pc_cccc:                                ; preds = %dec_label_pc_ccc0, %dec_label_pc_cca0, %dec_label_pc_cc84
  %v3_ccd0 = load i32, i32* %stack_var_-80, align 4
  store i32 %v3_ccd0, i32* @r5, align 4
  %v5_ccd8 = icmp slt i32 %v0_cd74225, %v3_ccd0
  br i1 %v5_ccd8, label %dec_label_pc_cd14, label %dec_label_pc_cce8

dec_label_pc_cce8:                                ; preds = %dec_label_pc_cccc
  %v1_cce8 = add i32 %v0_cd74225, -1
  store i32 %v1_cce8, i32* %r1.global-to-local, align 4
  %v2_cce8 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cce8, label %dec_label_pc_cd14, label %dec_label_pc_ccf0.preheader

dec_label_pc_ccf0.preheader:                      ; preds = %dec_label_pc_cce8
  %v1_ccf8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ccf0

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_cd0c, %dec_label_pc_ccf0.preheader
  %v0_cd0c = phi i32 [ %v1_cce8, %dec_label_pc_ccf0.preheader ], [ %v1_cd0c, %dec_label_pc_cd0c ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_ccf0.preheader ], [ %storemerge, %dec_label_pc_cd0c ]
  %v1_ccf4 = phi i32 [ 0, %dec_label_pc_ccf0.preheader ], [ %v1_ccf4333, %dec_label_pc_cd0c ]
  store i32 %v3_cb54, i32* %r3.global-to-local, align 4
  %v2_ccf4 = add i32 %v1_ccf4, %v3_cb54
  %v3_ccf4 = inttoptr i32 %v2_ccf4 to i8*
  %v4_ccf4 = load i8, i8* %v3_ccf4, align 1
  %v6_ccf4 = zext i8 %v4_ccf4 to i32
  store i32 %v6_ccf4, i32* %r2.global-to-local, align 4
  %v2_ccf8 = add i32 %storemerge.in, %v1_ccf8.pre
  %v3_ccf8 = inttoptr i32 %v2_ccf8 to i8*
  %v4_ccf8 = load i8, i8* %v3_ccf8, align 1
  %v6_ccf8 = zext i8 %v4_ccf8 to i32
  store i32 %v6_ccf8, i32* %r3.global-to-local, align 4
  %v9_ccfc = icmp eq i8 %v4_ccf8, %v4_ccf4
  br i1 %v9_ccfc, label %dec_label_pc_d00c, label %bb420

bb420:                                            ; preds = %dec_label_pc_ccf0
  br label %dec_label_pc_cd0c

dec_label_pc_cd0c:                                ; preds = %bb420, %dec_label_pc_d00c
  %v1_ccf4333 = phi i32 [ %v1_d00c, %dec_label_pc_d00c ], [ 0, %bb420 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_cd0c = add i32 %v0_cd0c, -1
  store i32 %v1_cd0c, i32* %r1.global-to-local, align 4
  %v2_cd0c = icmp eq i32 %v0_cd0c, 0
  br i1 %v2_cd0c, label %dec_label_pc_cd14, label %dec_label_pc_ccf0

dec_label_pc_cd14:                                ; preds = %dec_label_pc_cd0c, %dec_label_pc_cce8, %dec_label_pc_cccc
  %v3_cd18 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_cd18, i32* @r5, align 4
  %v5_cd20 = icmp slt i32 %v0_cd74225, %v3_cd18
  br i1 %v5_cd20, label %dec_label_pc_cd5c, label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_cd14
  %v1_cd30 = add i32 %v0_cd74225, -1
  store i32 %v1_cd30, i32* %r1.global-to-local, align 4
  %v2_cd30 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cd30, label %dec_label_pc_cd5c, label %dec_label_pc_cd38.preheader

dec_label_pc_cd38.preheader:                      ; preds = %dec_label_pc_cd30
  %v1_cd40.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd38

dec_label_pc_cd38:                                ; preds = %dec_label_pc_cd54, %dec_label_pc_cd38.preheader
  %v0_cd54 = phi i32 [ %v1_cd30, %dec_label_pc_cd38.preheader ], [ %v1_cd54, %dec_label_pc_cd54 ]
  %storemerge7.in = phi i32 [ 0, %dec_label_pc_cd38.preheader ], [ %storemerge7, %dec_label_pc_cd54 ]
  %v1_cd3c = phi i32 [ 0, %dec_label_pc_cd38.preheader ], [ %v1_cd3c341, %dec_label_pc_cd54 ]
  store i32 %v3_cb68, i32* %r3.global-to-local, align 4
  %v2_cd3c = add i32 %v1_cd3c, %v3_cb68
  %v3_cd3c = inttoptr i32 %v2_cd3c to i8*
  %v4_cd3c = load i8, i8* %v3_cd3c, align 1
  %v6_cd3c = zext i8 %v4_cd3c to i32
  store i32 %v6_cd3c, i32* %r2.global-to-local, align 4
  %v2_cd40 = add i32 %storemerge7.in, %v1_cd40.pre
  %v3_cd40 = inttoptr i32 %v2_cd40 to i8*
  %v4_cd40 = load i8, i8* %v3_cd40, align 1
  %v6_cd40 = zext i8 %v4_cd40 to i32
  store i32 %v6_cd40, i32* %r3.global-to-local, align 4
  %v9_cd44 = icmp eq i8 %v4_cd40, %v4_cd3c
  br i1 %v9_cd44, label %dec_label_pc_d020, label %bb421

bb421:                                            ; preds = %dec_label_pc_cd38
  br label %dec_label_pc_cd54

dec_label_pc_cd54:                                ; preds = %bb421, %dec_label_pc_d020
  %v1_cd3c341 = phi i32 [ %v1_d020, %dec_label_pc_d020 ], [ 0, %bb421 ]
  %storemerge7 = add i32 %storemerge7.in, 1
  %v1_cd54 = add i32 %v0_cd54, -1
  store i32 %v1_cd54, i32* %r1.global-to-local, align 4
  %v2_cd54 = icmp eq i32 %v0_cd54, 0
  br i1 %v2_cd54, label %dec_label_pc_cd5c, label %dec_label_pc_cd38

dec_label_pc_cd5c:                                ; preds = %dec_label_pc_cd54, %dec_label_pc_cd30, %dec_label_pc_cd14
  %v3_cd60 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_cd60, i32* @lr, align 4
  %v5_cd68 = icmp slt i32 %v0_cd74225, %v3_cd60
  br i1 %v5_cd68, label %dec_label_pc_cb8c.backedge, label %.thread123

dec_label_pc_cb8c.backedge:                       ; preds = %dec_label_pc_cd74.backedge, %.thread123, %dec_label_pc_cd5c
  %v0_cb8c = load i32, i32* @r6, align 4
  store i32 %v2_cb88, i32* %r1.global-to-local, align 4
  store i32 4096, i32* %r2.global-to-local, align 4
  %v1_cb98 = call i32 @function_119ec(i32 %v0_cb8c)
  %tmp422 = icmp slt i32 %v1_cb98, 1
  br i1 %tmp422, label %dec_label_pc_cf6c, label %dec_label_pc_cba4

.thread123:                                       ; preds = %dec_label_pc_cd5c
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_cd74227 = icmp eq i32 %v0_cd74225, 0
  br i1 %v2_cd74227, label %dec_label_pc_cb8c.backedge, label %dec_label_pc_cd7c.lr.ph

dec_label_pc_cd7c.lr.ph:                          ; preds = %.thread123
  %v1_cd84.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd7c

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd74.backedge, %dec_label_pc_cd7c.lr.ph
  %v0_cd74.in = phi i32 [ %v0_cd74225, %dec_label_pc_cd7c.lr.ph ], [ %v0_cd74, %dec_label_pc_cd74.backedge ]
  %storemerge243.in = phi i32 [ 0, %dec_label_pc_cd7c.lr.ph ], [ %storemerge243, %dec_label_pc_cd74.backedge ]
  %v1_cd80 = phi i32 [ 0, %dec_label_pc_cd7c.lr.ph ], [ %v1_cd80349, %dec_label_pc_cd74.backedge ]
  %v0_cd74 = add i32 %v0_cd74.in, -1
  store i32 %v3_cb7c, i32* %r3.global-to-local, align 4
  %v2_cd80 = add i32 %v1_cd80, %v3_cb7c
  %v3_cd80 = inttoptr i32 %v2_cd80 to i8*
  %v4_cd80 = load i8, i8* %v3_cd80, align 1
  %v6_cd80 = zext i8 %v4_cd80 to i32
  store i32 %v6_cd80, i32* %r2.global-to-local, align 4
  %v2_cd84 = add i32 %storemerge243.in, %v1_cd84.pre
  %v3_cd84 = inttoptr i32 %v2_cd84 to i8*
  %v4_cd84 = load i8, i8* %v3_cd84, align 1
  %v6_cd84 = zext i8 %v4_cd84 to i32
  store i32 %v6_cd84, i32* %r3.global-to-local, align 4
  %v9_cd88 = icmp eq i8 %v4_cd84, %v4_cd80
  br i1 %v9_cd88, label %dec_label_pc_d034, label %dec_label_pc_cd94

dec_label_pc_cd94:                                ; preds = %dec_label_pc_cd7c
  br label %dec_label_pc_cd74.backedge

dec_label_pc_cd74.backedge:                       ; preds = %dec_label_pc_d034, %dec_label_pc_cd94
  %v1_cd80349 = phi i32 [ 0, %dec_label_pc_cd94 ], [ %v1_d034, %dec_label_pc_d034 ]
  %storemerge243 = add i32 %storemerge243.in, 1
  store i32 %storemerge243, i32* %r1.global-to-local, align 4
  %v2_cd74 = icmp eq i32 %v0_cd74, 0
  br i1 %v2_cd74, label %dec_label_pc_cb8c.backedge, label %dec_label_pc_cd7c

dec_label_pc_cd9c:                                ; preds = %dec_label_pc_cdb4
  %v1_cd9c = add i32 %v1_cdb8, 1
  store i32 %v1_cd9c, i32* @lr, align 4
  %v9_cda0 = icmp eq i32 %v3_cba8, %v1_cd9c
  br i1 %v9_cda0, label %dec_label_pc_cf6c, label %dec_label_pc_cdac.backedge

dec_label_pc_cdac.backedge:                       ; preds = %dec_label_pc_cd9c, %dec_label_pc_cdcc
  %v1_cdb8261 = phi i32 [ 0, %dec_label_pc_cdcc ], [ %v1_cd9c, %dec_label_pc_cd9c ]
  %storemerge251 = add i32 %storemerge251.in, 1
  %v1_cdac = add i32 %v0_cdac, -1
  store i32 %v1_cdac, i32* %r1.global-to-local, align 4
  %v2_cdac = icmp eq i32 %v0_cdac, 0
  br i1 %v2_cdac, label %dec_label_pc_cbc0, label %dec_label_pc_cdb4

dec_label_pc_cdb4:                                ; preds = %dec_label_pc_cdac.backedge, %dec_label_pc_cdb4.lr.ph
  %v0_cdac = phi i32 [ %v1_cdac154, %dec_label_pc_cdb4.lr.ph ], [ %v1_cdac, %dec_label_pc_cdac.backedge ]
  %storemerge251.in = phi i32 [ 0, %dec_label_pc_cdb4.lr.ph ], [ %storemerge251, %dec_label_pc_cdac.backedge ]
  %v1_cdb8 = phi i32 [ 0, %dec_label_pc_cdb4.lr.ph ], [ %v1_cdb8261, %dec_label_pc_cdac.backedge ]
  store i32 %v3_caa4, i32* %r3.global-to-local, align 4
  %v2_cdb8 = add i32 %v1_cdb8, %v3_caa4
  %v3_cdb8 = inttoptr i32 %v2_cdb8 to i8*
  %v4_cdb8 = load i8, i8* %v3_cdb8, align 1
  %v6_cdb8 = zext i8 %v4_cdb8 to i32
  store i32 %v6_cdb8, i32* %r2.global-to-local, align 4
  %v2_cdbc = add i32 %storemerge251.in, %v1_cdbc.pre
  %v3_cdbc = inttoptr i32 %v2_cdbc to i8*
  %v4_cdbc = load i8, i8* %v3_cdbc, align 1
  %v6_cdbc = zext i8 %v4_cdbc to i32
  store i32 %v6_cdbc, i32* %r3.global-to-local, align 4
  %v9_cdc0 = icmp eq i8 %v4_cdbc, %v4_cdb8
  br i1 %v9_cdc0, label %dec_label_pc_cd9c, label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdb4
  br label %dec_label_pc_cdac.backedge

dec_label_pc_cdd4:                                ; preds = %dec_label_pc_cdec
  %v1_cdd4 = add i32 %v1_cdf0, 1
  store i32 %v1_cdd4, i32* @lr, align 4
  %v9_cdd8 = icmp eq i32 %v3_cbc4, %v1_cdd4
  br i1 %v9_cdd8, label %dec_label_pc_cf6c, label %dec_label_pc_cde4.backedge

dec_label_pc_cde4.backedge:                       ; preds = %dec_label_pc_cdd4, %dec_label_pc_ce04
  %v1_cdf0269 = phi i32 [ 0, %dec_label_pc_ce04 ], [ %v1_cdd4, %dec_label_pc_cdd4 ]
  %storemerge250 = add i32 %storemerge250.in, 1
  %v1_cde4 = add i32 %v0_cde4, -1
  store i32 %v1_cde4, i32* %r1.global-to-local, align 4
  %v2_cde4 = icmp eq i32 %v0_cde4, 0
  br i1 %v2_cde4, label %dec_label_pc_cbdc, label %dec_label_pc_cdec

dec_label_pc_cdec:                                ; preds = %dec_label_pc_cde4.backedge, %dec_label_pc_cdec.lr.ph
  %v0_cde4 = phi i32 [ %v1_cde4163, %dec_label_pc_cdec.lr.ph ], [ %v1_cde4, %dec_label_pc_cde4.backedge ]
  %storemerge250.in = phi i32 [ 0, %dec_label_pc_cdec.lr.ph ], [ %storemerge250, %dec_label_pc_cde4.backedge ]
  %v1_cdf0 = phi i32 [ 0, %dec_label_pc_cdec.lr.ph ], [ %v1_cdf0269, %dec_label_pc_cde4.backedge ]
  store i32 %v3_cab4, i32* %r3.global-to-local, align 4
  %v2_cdf0 = add i32 %v1_cdf0, %v3_cab4
  %v3_cdf0 = inttoptr i32 %v2_cdf0 to i8*
  %v4_cdf0 = load i8, i8* %v3_cdf0, align 1
  %v6_cdf0 = zext i8 %v4_cdf0 to i32
  store i32 %v6_cdf0, i32* %r2.global-to-local, align 4
  %v2_cdf4 = add i32 %storemerge250.in, %v1_cdf4.pre
  %v3_cdf4 = inttoptr i32 %v2_cdf4 to i8*
  %v4_cdf4 = load i8, i8* %v3_cdf4, align 1
  %v6_cdf4 = zext i8 %v4_cdf4 to i32
  store i32 %v6_cdf4, i32* %r3.global-to-local, align 4
  %v9_cdf8 = icmp eq i8 %v4_cdf4, %v4_cdf0
  br i1 %v9_cdf8, label %dec_label_pc_cdd4, label %dec_label_pc_ce04

dec_label_pc_ce04:                                ; preds = %dec_label_pc_cdec
  br label %dec_label_pc_cde4.backedge

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce24
  %v1_ce0c = add i32 %v1_ce28, 1
  store i32 %v1_ce0c, i32* @lr, align 4
  %v9_ce10 = icmp eq i32 %v3_cbe0, %v1_ce0c
  br i1 %v9_ce10, label %dec_label_pc_cf6c, label %dec_label_pc_ce1c.backedge

dec_label_pc_ce1c.backedge:                       ; preds = %dec_label_pc_ce0c, %dec_label_pc_ce3c
  %v1_ce28277 = phi i32 [ 0, %dec_label_pc_ce3c ], [ %v1_ce0c, %dec_label_pc_ce0c ]
  %storemerge249 = add i32 %storemerge249.in, 1
  %v1_ce1c = add i32 %v0_ce1c, -1
  store i32 %v1_ce1c, i32* %r1.global-to-local, align 4
  %v2_ce1c = icmp eq i32 %v0_ce1c, 0
  br i1 %v2_ce1c, label %dec_label_pc_cbf8, label %dec_label_pc_ce24

dec_label_pc_ce24:                                ; preds = %dec_label_pc_ce1c.backedge, %dec_label_pc_ce24.lr.ph
  %v0_ce1c = phi i32 [ %v1_ce1c172, %dec_label_pc_ce24.lr.ph ], [ %v1_ce1c, %dec_label_pc_ce1c.backedge ]
  %storemerge249.in = phi i32 [ 0, %dec_label_pc_ce24.lr.ph ], [ %storemerge249, %dec_label_pc_ce1c.backedge ]
  %v1_ce28 = phi i32 [ 0, %dec_label_pc_ce24.lr.ph ], [ %v1_ce28277, %dec_label_pc_ce1c.backedge ]
  store i32 %v3_cac8, i32* %r3.global-to-local, align 4
  %v2_ce28 = add i32 %v1_ce28, %v3_cac8
  %v3_ce28 = inttoptr i32 %v2_ce28 to i8*
  %v4_ce28 = load i8, i8* %v3_ce28, align 1
  %v6_ce28 = zext i8 %v4_ce28 to i32
  store i32 %v6_ce28, i32* %r2.global-to-local, align 4
  %v2_ce2c = add i32 %storemerge249.in, %v1_ce2c.pre
  %v3_ce2c = inttoptr i32 %v2_ce2c to i8*
  %v4_ce2c = load i8, i8* %v3_ce2c, align 1
  %v6_ce2c = zext i8 %v4_ce2c to i32
  store i32 %v6_ce2c, i32* %r3.global-to-local, align 4
  %v9_ce30 = icmp eq i8 %v4_ce2c, %v4_ce28
  br i1 %v9_ce30, label %dec_label_pc_ce0c, label %dec_label_pc_ce3c

dec_label_pc_ce3c:                                ; preds = %dec_label_pc_ce24
  br label %dec_label_pc_ce1c.backedge

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce5c
  %v1_ce44 = add i32 %v1_ce60, 1
  store i32 %v1_ce44, i32* @lr, align 4
  %v9_ce48 = icmp eq i32 %v3_cbfc, %v1_ce44
  br i1 %v9_ce48, label %dec_label_pc_cf6c, label %dec_label_pc_ce54.backedge

dec_label_pc_ce54.backedge:                       ; preds = %dec_label_pc_ce44, %dec_label_pc_ce74
  %v1_ce60285 = phi i32 [ 0, %dec_label_pc_ce74 ], [ %v1_ce44, %dec_label_pc_ce44 ]
  %storemerge248 = add i32 %storemerge248.in, 1
  %v1_ce54 = add i32 %v0_ce54, -1
  store i32 %v1_ce54, i32* %r1.global-to-local, align 4
  %v2_ce54 = icmp eq i32 %v0_ce54, 0
  br i1 %v2_ce54, label %dec_label_pc_cc14, label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce54.backedge, %dec_label_pc_ce5c.lr.ph
  %v0_ce54 = phi i32 [ %v1_ce54181, %dec_label_pc_ce5c.lr.ph ], [ %v1_ce54, %dec_label_pc_ce54.backedge ]
  %storemerge248.in = phi i32 [ 0, %dec_label_pc_ce5c.lr.ph ], [ %storemerge248, %dec_label_pc_ce54.backedge ]
  %v1_ce60 = phi i32 [ 0, %dec_label_pc_ce5c.lr.ph ], [ %v1_ce60285, %dec_label_pc_ce54.backedge ]
  store i32 %v3_cadc, i32* %r3.global-to-local, align 4
  %v2_ce60 = add i32 %v1_ce60, %v3_cadc
  %v3_ce60 = inttoptr i32 %v2_ce60 to i8*
  %v4_ce60 = load i8, i8* %v3_ce60, align 1
  %v6_ce60 = zext i8 %v4_ce60 to i32
  store i32 %v6_ce60, i32* %r2.global-to-local, align 4
  %v2_ce64 = add i32 %storemerge248.in, %v1_ce64.pre
  %v3_ce64 = inttoptr i32 %v2_ce64 to i8*
  %v4_ce64 = load i8, i8* %v3_ce64, align 1
  %v6_ce64 = zext i8 %v4_ce64 to i32
  store i32 %v6_ce64, i32* %r3.global-to-local, align 4
  %v9_ce68 = icmp eq i8 %v4_ce64, %v4_ce60
  br i1 %v9_ce68, label %dec_label_pc_ce44, label %dec_label_pc_ce74

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce5c
  br label %dec_label_pc_ce54.backedge

dec_label_pc_ce7c:                                ; preds = %dec_label_pc_ce94
  %v1_ce7c = add i32 %v1_ce98, 1
  store i32 %v1_ce7c, i32* @lr, align 4
  %v9_ce80 = icmp eq i32 %v3_cc18, %v1_ce7c
  br i1 %v9_ce80, label %dec_label_pc_cf6c, label %dec_label_pc_ce8c.backedge

dec_label_pc_ce8c.backedge:                       ; preds = %dec_label_pc_ce7c, %dec_label_pc_ceac
  %v1_ce98293 = phi i32 [ 0, %dec_label_pc_ceac ], [ %v1_ce7c, %dec_label_pc_ce7c ]
  %storemerge247 = add i32 %storemerge247.in, 1
  %v1_ce8c = add i32 %v0_ce8c, -1
  store i32 %v1_ce8c, i32* %r1.global-to-local, align 4
  %v2_ce8c = icmp eq i32 %v0_ce8c, 0
  br i1 %v2_ce8c, label %dec_label_pc_cc30, label %dec_label_pc_ce94

dec_label_pc_ce94:                                ; preds = %dec_label_pc_ce8c.backedge, %dec_label_pc_ce94.lr.ph
  %v0_ce8c = phi i32 [ %v1_ce8c190, %dec_label_pc_ce94.lr.ph ], [ %v1_ce8c, %dec_label_pc_ce8c.backedge ]
  %storemerge247.in = phi i32 [ 0, %dec_label_pc_ce94.lr.ph ], [ %storemerge247, %dec_label_pc_ce8c.backedge ]
  %v1_ce98 = phi i32 [ 0, %dec_label_pc_ce94.lr.ph ], [ %v1_ce98293, %dec_label_pc_ce8c.backedge ]
  store i32 %v3_caf0, i32* %r3.global-to-local, align 4
  %v2_ce98 = add i32 %v1_ce98, %v3_caf0
  %v3_ce98 = inttoptr i32 %v2_ce98 to i8*
  %v4_ce98 = load i8, i8* %v3_ce98, align 1
  %v6_ce98 = zext i8 %v4_ce98 to i32
  store i32 %v6_ce98, i32* %r2.global-to-local, align 4
  %v2_ce9c = add i32 %storemerge247.in, %v1_ce9c.pre
  %v3_ce9c = inttoptr i32 %v2_ce9c to i8*
  %v4_ce9c = load i8, i8* %v3_ce9c, align 1
  %v6_ce9c = zext i8 %v4_ce9c to i32
  store i32 %v6_ce9c, i32* %r3.global-to-local, align 4
  %v9_cea0 = icmp eq i8 %v4_ce9c, %v4_ce98
  br i1 %v9_cea0, label %dec_label_pc_ce7c, label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %dec_label_pc_ce94
  br label %dec_label_pc_ce8c.backedge

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_cecc
  %v1_ceb4 = add i32 %v1_ced0, 1
  store i32 %v1_ceb4, i32* @lr, align 4
  %v9_ceb8 = icmp eq i32 %v3_cc34, %v1_ceb4
  br i1 %v9_ceb8, label %dec_label_pc_cf6c, label %dec_label_pc_cec4.backedge

dec_label_pc_cec4.backedge:                       ; preds = %dec_label_pc_ceb4, %dec_label_pc_cee4
  %v1_ced0301 = phi i32 [ 0, %dec_label_pc_cee4 ], [ %v1_ceb4, %dec_label_pc_ceb4 ]
  %storemerge246 = add i32 %storemerge246.in, 1
  %v1_cec4 = add i32 %v0_cec4, -1
  store i32 %v1_cec4, i32* %r1.global-to-local, align 4
  %v2_cec4 = icmp eq i32 %v0_cec4, 0
  br i1 %v2_cec4, label %dec_label_pc_cc4c, label %dec_label_pc_cecc

dec_label_pc_cecc:                                ; preds = %dec_label_pc_cec4.backedge, %dec_label_pc_cecc.lr.ph
  %v0_cec4 = phi i32 [ %v1_cec4199, %dec_label_pc_cecc.lr.ph ], [ %v1_cec4, %dec_label_pc_cec4.backedge ]
  %storemerge246.in = phi i32 [ 0, %dec_label_pc_cecc.lr.ph ], [ %storemerge246, %dec_label_pc_cec4.backedge ]
  %v1_ced0 = phi i32 [ 0, %dec_label_pc_cecc.lr.ph ], [ %v1_ced0301, %dec_label_pc_cec4.backedge ]
  store i32 %v3_cb04, i32* %r3.global-to-local, align 4
  %v2_ced0 = add i32 %v1_ced0, %v3_cb04
  %v3_ced0 = inttoptr i32 %v2_ced0 to i8*
  %v4_ced0 = load i8, i8* %v3_ced0, align 1
  %v6_ced0 = zext i8 %v4_ced0 to i32
  store i32 %v6_ced0, i32* %r2.global-to-local, align 4
  %v2_ced4 = add i32 %storemerge246.in, %v1_ced4.pre
  %v3_ced4 = inttoptr i32 %v2_ced4 to i8*
  %v4_ced4 = load i8, i8* %v3_ced4, align 1
  %v6_ced4 = zext i8 %v4_ced4 to i32
  store i32 %v6_ced4, i32* %r3.global-to-local, align 4
  %v9_ced8 = icmp eq i8 %v4_ced4, %v4_ced0
  br i1 %v9_ced8, label %dec_label_pc_ceb4, label %dec_label_pc_cee4

dec_label_pc_cee4:                                ; preds = %dec_label_pc_cecc
  br label %dec_label_pc_cec4.backedge

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cf04
  %v1_ceec = add i32 %v1_cf08, 1
  store i32 %v1_ceec, i32* @lr, align 4
  %v9_cef0 = icmp eq i32 %v3_cc50, %v1_ceec
  br i1 %v9_cef0, label %dec_label_pc_cf6c, label %dec_label_pc_cefc.backedge

dec_label_pc_cefc.backedge:                       ; preds = %dec_label_pc_ceec, %dec_label_pc_cf1c
  %v1_cf08309 = phi i32 [ 0, %dec_label_pc_cf1c ], [ %v1_ceec, %dec_label_pc_ceec ]
  %storemerge245 = add i32 %storemerge245.in, 1
  %v1_cefc = add i32 %v0_cefc, -1
  store i32 %v1_cefc, i32* %r1.global-to-local, align 4
  %v2_cefc = icmp eq i32 %v0_cefc, 0
  br i1 %v2_cefc, label %dec_label_pc_cc68, label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cefc.backedge, %dec_label_pc_cf04.lr.ph
  %v0_cefc = phi i32 [ %v1_cefc208, %dec_label_pc_cf04.lr.ph ], [ %v1_cefc, %dec_label_pc_cefc.backedge ]
  %storemerge245.in = phi i32 [ 0, %dec_label_pc_cf04.lr.ph ], [ %storemerge245, %dec_label_pc_cefc.backedge ]
  %v1_cf08 = phi i32 [ 0, %dec_label_pc_cf04.lr.ph ], [ %v1_cf08309, %dec_label_pc_cefc.backedge ]
  store i32 %v3_cb18, i32* %r3.global-to-local, align 4
  %v2_cf08 = add i32 %v1_cf08, %v3_cb18
  %v3_cf08 = inttoptr i32 %v2_cf08 to i8*
  %v4_cf08 = load i8, i8* %v3_cf08, align 1
  %v6_cf08 = zext i8 %v4_cf08 to i32
  store i32 %v6_cf08, i32* %r2.global-to-local, align 4
  %v2_cf0c = add i32 %storemerge245.in, %v1_cf0c.pre
  %v3_cf0c = inttoptr i32 %v2_cf0c to i8*
  %v4_cf0c = load i8, i8* %v3_cf0c, align 1
  %v6_cf0c = zext i8 %v4_cf0c to i32
  store i32 %v6_cf0c, i32* %r3.global-to-local, align 4
  %v9_cf10 = icmp eq i8 %v4_cf0c, %v4_cf08
  br i1 %v9_cf10, label %dec_label_pc_ceec, label %dec_label_pc_cf1c

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_cf04
  br label %dec_label_pc_cefc.backedge

dec_label_pc_cf24:                                ; preds = %dec_label_pc_cf3c
  %v1_cf24 = add i32 %v1_cf40, 1
  store i32 %v1_cf24, i32* @lr, align 4
  %v9_cf28 = icmp eq i32 %v3_cc6c, %v1_cf24
  br i1 %v9_cf28, label %dec_label_pc_cf6c, label %dec_label_pc_cf34.backedge

dec_label_pc_cf34.backedge:                       ; preds = %dec_label_pc_cf24, %dec_label_pc_cf54
  %v1_cf40317 = phi i32 [ 0, %dec_label_pc_cf54 ], [ %v1_cf24, %dec_label_pc_cf24 ]
  %storemerge244 = add i32 %storemerge244.in, 1
  %v1_cf34 = add i32 %v0_cf34, -1
  store i32 %v1_cf34, i32* %r1.global-to-local, align 4
  %v2_cf34 = icmp eq i32 %v0_cf34, 0
  br i1 %v2_cf34, label %dec_label_pc_cc84, label %dec_label_pc_cf3c

dec_label_pc_cf3c:                                ; preds = %dec_label_pc_cf34.backedge, %dec_label_pc_cf3c.lr.ph
  %v0_cf34 = phi i32 [ %v1_cf34217, %dec_label_pc_cf3c.lr.ph ], [ %v1_cf34, %dec_label_pc_cf34.backedge ]
  %storemerge244.in = phi i32 [ 0, %dec_label_pc_cf3c.lr.ph ], [ %storemerge244, %dec_label_pc_cf34.backedge ]
  %v1_cf40 = phi i32 [ 0, %dec_label_pc_cf3c.lr.ph ], [ %v1_cf40317, %dec_label_pc_cf34.backedge ]
  store i32 %v3_cb2c, i32* %r3.global-to-local, align 4
  %v2_cf40 = add i32 %v1_cf40, %v3_cb2c
  %v3_cf40 = inttoptr i32 %v2_cf40 to i8*
  %v4_cf40 = load i8, i8* %v3_cf40, align 1
  %v6_cf40 = zext i8 %v4_cf40 to i32
  store i32 %v6_cf40, i32* %r2.global-to-local, align 4
  %v2_cf44 = add i32 %storemerge244.in, %v1_cf44.pre
  %v3_cf44 = inttoptr i32 %v2_cf44 to i8*
  %v4_cf44 = load i8, i8* %v3_cf44, align 1
  %v6_cf44 = zext i8 %v4_cf44 to i32
  store i32 %v6_cf44, i32* %r3.global-to-local, align 4
  %v9_cf48 = icmp eq i8 %v4_cf44, %v4_cf40
  br i1 %v9_cf48, label %dec_label_pc_cf24, label %dec_label_pc_cf54

dec_label_pc_cf54:                                ; preds = %dec_label_pc_cf3c
  br label %dec_label_pc_cf34.backedge

dec_label_pc_cf5c:                                ; preds = %dec_label_pc_cca8
  %v1_cf5c = add i32 %v1_ccac, 1
  store i32 %v1_cf5c, i32* @lr, align 4
  %v9_cf60 = icmp eq i32 %v3_cc88, %v1_cf5c
  br i1 %v9_cf60, label %dec_label_pc_cf6c, label %dec_label_pc_ccc0

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cb8c.backedge, %dec_label_pc_cd9c, %dec_label_pc_cdd4, %dec_label_pc_ce0c, %dec_label_pc_ce44, %dec_label_pc_ce7c, %dec_label_pc_ceb4, %dec_label_pc_ceec, %dec_label_pc_cf24, %dec_label_pc_cf5c, %dec_label_pc_d00c, %dec_label_pc_d020, %dec_label_pc_d034, %dec_label_pc_ca38
  %storemerge8 = phi i32 [ 0, %dec_label_pc_ca38 ], [ 1, %dec_label_pc_d034 ], [ 1, %dec_label_pc_d020 ], [ 1, %dec_label_pc_d00c ], [ 1, %dec_label_pc_cf5c ], [ 1, %dec_label_pc_cf24 ], [ 1, %dec_label_pc_ceec ], [ 1, %dec_label_pc_ceb4 ], [ 1, %dec_label_pc_ce7c ], [ 1, %dec_label_pc_ce44 ], [ 1, %dec_label_pc_ce0c ], [ 1, %dec_label_pc_cdd4 ], [ 1, %dec_label_pc_cd9c ], [ 0, %dec_label_pc_cb8c.backedge ]
  store i32 %storemerge8, i32* @r4, align 4
  %v1_cf70 = call i32 @function_108e8(i32 13)
  %v1_cf78 = call i32 @function_108e8(i32 14)
  %v1_cf80 = call i32 @function_108e8(i32 15)
  %v1_cf88 = call i32 @function_108e8(i32 16)
  %v1_cf90 = call i32 @function_108e8(i32 17)
  %v1_cf98 = call i32 @function_108e8(i32 18)
  %v1_cfa0 = call i32 @function_108e8(i32 19)
  %v1_cfa8 = call i32 @function_108e8(i32 20)
  %v1_cfb0 = call i32 @function_108e8(i32 21)
  %v1_cfb8 = call i32 @function_108e8(i32 22)
  %v1_cfc0 = call i32 @function_108e8(i32 23)
  %v1_cfc8 = call i32 @function_108e8(i32 42)
  %v0_cfcc = load i32, i32* @r6, align 4
  %v1_cfd0 = call i32 @function_11c54(i32 %v0_cfcc)
  %v0_cfd4 = load i32, i32* @r4, align 4
  %v2_cfd4 = icmp eq i32 %v0_cfd4, 0
  br i1 %v2_cfd4, label %dec_label_pc_cfdc, label %dec_label_pc_d048

dec_label_pc_cfdc:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_ca20, %dec_label_pc_d048
  store i32 %v2_c8b0, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_cfe4 = call i32 @function_11228()
  store i32 %v2_c900, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_cff4 = call i32 @function_11228()
  %v1_cffc = call i32 @function_13d70(i32 1)
  store i32 %v2_c888, i32* @r4, align 4
  %v0_d004 = load i32, i32* @r7, align 4
  store i32 %v0_d004, i32* @r5, align 4
  br label %dec_label_pc_c7e4.backedge

dec_label_pc_d00c:                                ; preds = %dec_label_pc_ccf0
  %v1_d00c = add i32 %v1_ccf4, 1
  store i32 %v1_d00c, i32* @lr, align 4
  %v9_d010 = icmp eq i32 %v3_ccd0, %v1_d00c
  br i1 %v9_d010, label %dec_label_pc_cf6c, label %dec_label_pc_cd0c

dec_label_pc_d020:                                ; preds = %dec_label_pc_cd38
  %v1_d020 = add i32 %v1_cd3c, 1
  store i32 %v1_d020, i32* @lr, align 4
  %v9_d024 = icmp eq i32 %v3_cd18, %v1_d020
  br i1 %v9_d024, label %dec_label_pc_cf6c, label %dec_label_pc_cd54

dec_label_pc_d034:                                ; preds = %dec_label_pc_cd7c
  %v1_d034 = add i32 %v1_cd80, 1
  %v9_d038 = icmp eq i32 %v3_cd60, %v1_d034
  br i1 %v9_d038, label %dec_label_pc_cf6c, label %dec_label_pc_cd74.backedge

dec_label_pc_d048:                                ; preds = %dec_label_pc_cf6c
  %v0_d048 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d050 = call i32 @function_11a20(i32 %v0_d048, i32 9)
  br label %dec_label_pc_cfdc

; uselistorder directives
  uselistorder i32 %v1_d034, { 1, 0 }
  uselistorder i32 %v1_d020, { 1, 2, 0 }
  uselistorder i32 %v1_d00c, { 1, 2, 0 }
  uselistorder i32 %v1_cf5c, { 1, 2, 0 }
  uselistorder i32 %storemerge243, { 1, 0 }
  uselistorder i32 %v1_cd80, { 1, 0 }
  uselistorder i32 %storemerge243.in, { 1, 0 }
  uselistorder i32 %v1_cb98, { 1, 0 }
  uselistorder i32 %v1_cd54, { 1, 0 }
  uselistorder i32 %v1_cd3c, { 1, 0 }
  uselistorder i32 %storemerge7.in, { 1, 0 }
  uselistorder i32 %v0_cd54, { 1, 0 }
  uselistorder i32 %v1_cd0c, { 1, 0 }
  uselistorder i32 %v1_ccf4, { 1, 0 }
  uselistorder i32 %storemerge.in, { 1, 0 }
  uselistorder i32 %v0_cd0c, { 1, 0 }
  uselistorder i32 %v1_ccc0, { 1, 0 }
  uselistorder i32 %v1_ccac, { 1, 0 }
  uselistorder i32 %v0_ccc4, { 1, 0 }
  uselistorder i32 %v0_ccc0, { 1, 0 }
  uselistorder i32 %v2_ca28, { 1, 0 }
  uselistorder i1 %v7_ca04, { 1, 0 }
  uselistorder i32 %v2_ca00, { 1, 0 }
  uselistorder i32 %v2_c7e8, { 1, 0 }
  uselistorder i32 %v3_c95c, { 1, 2, 0 }
  uselistorder i32 %v2_c86c, { 1, 0 }
  uselistorder i32 %v1_c7f4, { 2, 1, 0, 3 }
  uselistorder i32 %v2_cb88, { 1, 0, 2 }
  uselistorder i32 %v2_c900, { 1, 0, 2, 3 }
  uselistorder i32 %v3_c78c, { 1, 0 }
  uselistorder i32 %v2_c758, { 2, 0, 1 }
  uselistorder i32 %v2_c6fc, { 1, 0, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 %v3_c684, { 2, 1, 0 }
  uselistorder i32 %storemerge359, { 1, 0 }
  uselistorder i32 %v0_c618, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %stack_var_-84, { 1, 0, 2 }
  uselistorder i32* %stack_var_-88, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 4, 2, 6, 7, 8, 11, 5, 9, 10, 1, 12, 13 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 12, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 11, 0, 27, 21, 22, 23, 24, 25, 26, 9, 8, 7, 6, 5, 4, 3, 2, 10, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 60, 1, 61, 62, 63, 64, 66, 65, 67, 68, 69, 70, 71, 72, 73, 74 }
  uselistorder i32 (i32*)* @function_11f94, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @function_11e50, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_119b8, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1a2dc.61, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1a2e0.54, { 0, 2, 1 }
  uselistorder label %dec_label_pc_cfdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cf6c, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 13 }
  uselistorder label %dec_label_pc_cf34.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_cefc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_cec4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_ce8c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_ce54.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_ce1c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_cde4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_cdac.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_cd54, { 1, 0 }
  uselistorder label %dec_label_pc_cd0c, { 1, 0 }
  uselistorder label %dec_label_pc_ccc0, { 1, 0 }
  uselistorder label %dec_label_pc_cba4, { 1, 0 }
  uselistorder label %dec_label_pc_ca20, { 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_c7e4.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_c9b4, { 1, 0 }
  uselistorder label %dec_label_pc_c7f4, { 1, 0 }
  uselistorder label %dec_label_pc_c7f4.preheader, { 1, 0 }
  uselistorder label %bb416, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
}

define i32 @function_d070(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d070:
  store i32 ptrtoint (i32* @global_var_d1ec.65 to i32), i32* inttoptr (i32 98444 to i32*), align 4
  ret i32 %arg1
}

define i32 @function_d088(i32 %arg1) local_unnamed_addr {
dec_label_pc_d088:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_d088 = load i32, i32* @r6, align 4
  %v12_d088 = load i32, i32* @r7, align 4
  %v15_d088 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_d0a4 = call i32 @function_12464(i32 2, i32 1, i32 0)
  store i32 %v3_d0a4, i32* %r0.global-to-local, align 4
  store i32 98436, i32* @r6, align 4
  %v7_d0ac = icmp eq i32 %v3_d0a4, -1
  store i32 %v3_d0a4, i32* inttoptr (i32 98436 to i32*), align 4
  br i1 %v7_d0ac, label %dec_label_pc_d088.dec_label_pc_d164_crit_edge, label %dec_label_pc_d0b8

dec_label_pc_d088.dec_label_pc_d164_crit_edge:    ; preds = %dec_label_pc_d088
  %v1_d16c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d164

dec_label_pc_d0b8:                                ; preds = %dec_label_pc_d088
  %v2_d0b8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d0b8, i32* @r3, align 4
  %v0_d0bc = load i32, i32* @r4, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  %v0_d0cc = load i32, i32* %r0.global-to-local, align 4
  %v5_d0cc = call i32 @function_12420(i32 %v0_d0cc, i32 %v0_d0bc, i32 2, i32 %v2_d0b8, i32 4)
  store i32 %v5_d0cc, i32* %r0.global-to-local, align 4
  %v0_d0d0 = load i32, i32* @r6, align 4
  %v1_d0d0 = inttoptr i32 %v0_d0d0 to i32*
  %v2_d0d0 = load i32, i32* %v1_d0d0, align 4
  store i32 %v2_d0d0, i32* %r0.global-to-local, align 4
  %v2_d0e0 = call i32 @function_11a88(i32 %v2_d0d0, i32 3)
  %v0_d0e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v2_d0d0, i32* %r0.global-to-local, align 4
  %v2_d0f0 = call i32 @function_11a88(i32 %v2_d0d0, i32 %v0_d0e4)
  store i32 %v2_d0f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @1 to i32), i32* @r8, align 4
  %v0_d120 = call i32 @function_1207c()
  store i32 %v0_d120, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v2_d128 = inttoptr i32 %v0_d120 to i32*
  store i32 0, i32* %v2_d128, align 4
  %v2_d12c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d12c, i32* @r5, align 4
  store i32 %v0_d120, i32* @r4, align 4
  %v0_d13c = load i32, i32* @r6, align 4
  %v1_d13c = inttoptr i32 %v0_d13c to i32*
  %v2_d13c = load i32, i32* %v1_d13c, align 4
  store i32 %v2_d13c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d148 = call i32 @function_12214(i32 %v2_d13c, i32 %v2_d12c, i32 16)
  store i32 %v3_d148, i32* %r0.global-to-local, align 4
  %v7_d14c = icmp eq i32 %v3_d148, -1
  br i1 %v7_d14c, label %dec_label_pc_d170, label %dec_label_pc_d154

dec_label_pc_d154:                                ; preds = %dec_label_pc_d0b8
  %v2_d15c = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  store i32 %v2_d15c, i32* %r0.global-to-local, align 4
  %v2_d160 = call i32 @function_12300(i32 %v2_d15c, i32 1)
  store i32 %v2_d160, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d164

dec_label_pc_d164:                                ; preds = %dec_label_pc_d088.dec_label_pc_d164_crit_edge, %dec_label_pc_d17c, %dec_label_pc_d154
  %v1_d16c = phi i32 [ %v1_d16c.pre, %dec_label_pc_d088.dec_label_pc_d164_crit_edge ], [ %v1_d1c4, %dec_label_pc_d17c ], [ %v2_d160, %dec_label_pc_d154 ]
  store i32 %v9_d088, i32* @r6, align 4
  store i32 %v12_d088, i32* @r7, align 4
  store i32 %v15_d088, i32* @r8, align 4
  ret i32 %v1_d16c

dec_label_pc_d170:                                ; preds = %dec_label_pc_d0b8
  %v0_d170 = load i32, i32* @r4, align 4
  %v1_d170 = inttoptr i32 %v0_d170 to i32*
  %v2_d170 = load i32, i32* %v1_d170, align 4
  %v7_d174 = icmp eq i32 %v2_d170, 99
  br i1 %v7_d174, label %dec_label_pc_d1cc, label %dec_label_pc_d17c

dec_label_pc_d17c:                                ; preds = %dec_label_pc_d1cc, %bb, %dec_label_pc_d170
  %v0_d194 = load i32, i32* @r6, align 4
  %v1_d194 = inttoptr i32 %v0_d194 to i32*
  %v2_d194 = load i32, i32* %v1_d194, align 4
  store i32 %v2_d194, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d1a4 = call i32 @function_1224c(i32 %v2_d194, i32 %v2_d12c, i32 16)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_d1ac = call i32 @function_13d70(i32 5)
  store i32 %v1_d1ac, i32* %r0.global-to-local, align 4
  %v0_d1b0 = load i32, i32* @r6, align 4
  %v1_d1b0 = inttoptr i32 %v0_d1b0 to i32*
  %v2_d1b0 = load i32, i32* %v1_d1b0, align 4
  store i32 %v2_d1b0, i32* %r0.global-to-local, align 4
  %v1_d1b4 = call i32 @function_11c54(i32 %v2_d1b0)
  store i32 add (i32 ptrtoint (i32* @global_var_e600.70 to i32), i32 -69), i32* %r0.global-to-local, align 4
  %v1_d1c0 = call i32 @function_c094(i32 add (i32 ptrtoint (i32* @global_var_e600.70 to i32), i32 -69))
  store i32 %v1_d1c0, i32* %r0.global-to-local, align 4
  %v1_d1c4 = call i32 @function_d088(i32 %v1_d1c0)
  store i32 %v1_d1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d164

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d170
  %v0_d1cc = load i32, i32* @r8, align 4
  %v1_d1cc = inttoptr i32 %v0_d1cc to i8*
  %v2_d1cc = load i8, i8* %v1_d1cc, align 1
  %v3_d1cc = zext i8 %v2_d1cc to i32
  %v1_d1d0 = load i32, i32* @r7, align 4
  %v9_d1d0 = icmp eq i32 %v3_d1cc, %v1_d1d0
  br i1 %v9_d1d0, label %dec_label_pc_d17c, label %bb

bb:                                               ; preds = %dec_label_pc_d1cc
  %v2_d1d8 = trunc i32 %v1_d1d0 to i8
  store i8 %v2_d1d8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i32 0, i32 0), align 1
  br label %dec_label_pc_d17c

; uselistorder directives
  uselistorder i32 %v1_d1c4, { 1, 0 }
  uselistorder i32 %v2_d12c, { 1, 0, 2 }
  uselistorder i32 %v2_d0d0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d0a4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 1, 0, 2, 3, 5, 4, 7, 6, 9, 8, 10, 12, 11, 13, 14, 17, 16, 18, 15 }
  uselistorder i32 (i32)* @function_c094, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12300, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12214, { 2, 0, 1 }
  uselistorder [4 x i8]* @1, { 1, 0 }
  uselistorder label %dec_label_pc_d17c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d164, { 1, 2, 0 }
}

define i32 @function_d1e0(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_d1e0:
  %v0_d1e0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d1e0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_d1e0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_d1e0, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_d1ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_d1ec:
  %v1_d1f4 = call i32 @function_10988(i32 3)
  %v3_d200 = call i32 @function_108c4(i32 3, i32* null)
  %v1_d204 = call i32 @function_dcc8(i32 %v3_d200)
  store i32 %v1_d204, i32* @r6, align 4
  %v1_d210 = call i32 @function_108e8(i32 3)
  %v0_d214 = load i32, i32* @r6, align 4
  %v2_d214 = icmp eq i32 %v0_d214, 0
  br i1 %v2_d214, label %dec_label_pc_d264, label %dec_label_pc_d21c

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d1ec
  %v1_d21c = add i32 %v0_d214, 4
  %v2_d21c = inttoptr i32 %v1_d21c to i32*
  %v3_d21c = load i32, i32* %v2_d21c, align 4
  store i32 %v3_d21c, i32* @r4, align 4
  %v0_d220 = call i32 @function_db0c()
  %v0_d224 = load i32, i32* @r6, align 4
  %v1_d224 = inttoptr i32 %v0_d224 to i8*
  %v2_d224 = load i8, i8* %v1_d224, align 1
  %v3_d224 = zext i8 %v2_d224 to i32
  %v2_d228 = call i32 @function_117ec(i32 %v0_d220, i32 %v3_d224)
  store i32 ptrtoint (i16** @global_var_1a2e4.72 to i32), i32* @r5, align 4
  %v0_d230 = load i32, i32* @r4, align 4
  %v4_d230 = mul nuw nsw i32 %v3_d224, 4
  %v5_d230 = add i32 %v0_d230, %v4_d230
  %v6_d230 = inttoptr i32 %v5_d230 to i32*
  %v7_d230 = load i32, i32* %v6_d230, align 4
  %v0_d234 = load i32, i32* @r6, align 4
  store i32 %v7_d230, i32* @global_var_1a2e8.73, align 4
  %v1_d23c = call i32 @function_dca0(i32 %v0_d234)
  %v1_d244 = call i32 @function_10988(i32 4)
  %v3_d250 = call i32 @function_108c4(i32 4, i32* null)
  %v4_d250 = inttoptr i32 %v3_d250 to i16*
  %v3_d254 = load i16, i16* %v4_d250, align 2
  store i16 %v3_d254, i16* bitcast (i32* @global_var_1a2e6.74 to i16*), align 4
  %v1_d260 = call i32 @function_108e8(i32 4)
  br label %dec_label_pc_d264

dec_label_pc_d264:                                ; preds = %dec_label_pc_d1ec, %dec_label_pc_d21c
  %v1_d268 = phi i32 [ %v1_d210, %dec_label_pc_d1ec ], [ %v1_d260, %dec_label_pc_d21c ]
  ret i32 %v1_d268

; uselistorder directives
  uselistorder label %dec_label_pc_d264, { 1, 0 }
}

define i32 @function_d270(i32 %arg1) local_unnamed_addr {
dec_label_pc_d270:
  %stack_var_-20 = alloca i32, align 4
  %v3_d270 = load i32, i32* @r4, align 4
  %v6_d270 = load i32, i32* @r5, align 4
  %v0_d278 = call i32 @function_11944()
  %v7_d27c = icmp eq i32 %v0_d278, -1
  %. = zext i1 %v7_d27c to i32
  %tmp11 = icmp slt i32 %v0_d278, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_d298 = icmp eq i32 %storemerge4, 0
  store i32 %v0_d278, i32* @global_var_18258.76, align 4
  br i1 %v2_d298, label %dec_label_pc_d2b0, label %dec_label_pc_d2a4

dec_label_pc_d2a4:                                ; preds = %dec_label_pc_d270
  store i32 %v3_d270, i32* @r4, align 4
  store i32 %v6_d270, i32* @r5, align 4
  ret i32 %v0_d278

dec_label_pc_d2b0:                                ; preds = %dec_label_pc_d270
  store i32 1, i32* %stack_var_-20, align 4
  %v1_d2bc = call i32 @function_10988(i32 13)
  %v1_d2c4 = call i32 @function_10988(i32 14)
  %v0_d2c8 = load i32, i32* @r5, align 4
  %v2_d2d0 = inttoptr i32 %v0_d2c8 to i32*
  %v3_d2d0 = call i32 @function_108c4(i32 13, i32* %v2_d2d0)
  %v2_d2d8 = call i32 @function_11860(i32 %v3_d2d0, i32 2)
  %v7_d2dc = icmp eq i32 %v2_d2d8, -1
  store i32 %v2_d2d8, i32* @r4, align 4
  br i1 %v7_d2dc, label %dec_label_pc_d324, label %dec_label_pc_d2e8

dec_label_pc_d2e8:                                ; preds = %dec_label_pc_d324, %dec_label_pc_d2b0
  %v0_d2f4 = phi i32 [ %v2_d334, %dec_label_pc_d324 ], [ %v2_d2d8, %dec_label_pc_d2b0 ]
  %v2_d2f8 = ptrtoint i32* %stack_var_-20 to i32
  %v3_d2fc = call i32 @function_11bc8(i32 %v0_d2f4, i32 -2147199228, i32 %v2_d2f8)
  br label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d300, %dec_label_pc_d2e8
  %v0_d30c = load i32, i32* @r4, align 4
  %v3_d314 = call i32 @function_11bc8(i32 %v0_d30c, i32 -2147199227, i32 0)
  %v1_d31c = call i32 @function_13d70(i32 10)
  br label %dec_label_pc_d300

dec_label_pc_d324:                                ; preds = %dec_label_pc_d2b0
  %v0_d324 = load i32, i32* @r5, align 4
  %v2_d32c = inttoptr i32 %v0_d324 to i32*
  %v3_d32c = call i32 @function_108c4(i32 14, i32* %v2_d32c)
  %v2_d334 = call i32 @function_11860(i32 %v3_d32c, i32 2)
  %v3_d338 = icmp eq i32 %v2_d334, -1
  store i32 %v2_d334, i32* @r4, align 4
  br i1 %v3_d338, label %dec_label_pc_d344, label %dec_label_pc_d2e8

dec_label_pc_d344:                                ; preds = %dec_label_pc_d324
  %v1_d348 = call i32 @function_108e8(i32 13)
  %v1_d350 = call i32 @function_108e8(i32 14)
  %v0_d354 = load i32, i32* @r5, align 4
  %v1_d358 = call i32 @function_13cb8(i32 %v0_d354)
  %v0_d35c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d35c, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_d344
  %v2_d35c = load i32, i32* @r8, align 4
  %v8_d35c = ashr i32 %v2_d35c, %arg1
  %v9_d35c = and i32 %v8_d35c, 2
  store i32 %v9_d35c, i32* @r8, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_d344, %bb14
  ret i32 %v1_d358

; uselistorder directives
  uselistorder i32 %v2_d334, { 1, 2, 0 }
  uselistorder i32 %v2_d2d8, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_d278, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_d360(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_d360:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i16, align 2
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v15_d360 = load i32, i32* @r8, align 4
  %v2_d370 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_d370, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_d388 = call i32 @function_124fc(i32* nonnull %stack_var_-64)
  store i32 %v2_d370, i32* @r0, align 4
  %v2_d394 = call i32 @function_124b8(i32 %v2_d370, i32 2)
  %v0_d398 = load i32, i32* @r5, align 4
  store i32 %v0_d398, i32* %r2.global-to-local, align 4
  %v3_d3a4 = call i32 @function_11c1c(i32 %v0_d398, i32 %v2_d370, i32 %v0_d398)
  %v2_d3b0 = call i32 @function_12510(i32 17, i32 1)
  %v2_d3bc = call i32 @function_12510(i32 5, i32 53360)
  %v0_d3c0 = call i32 @function_11450()
  store i32 ptrtoint (i16** @global_var_1a2e4.72 to i32), i32* %r2.global-to-local, align 4
  store i32 902487617, i32* @global_var_1a2e8.73, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 20480, i32* %r3.global-to-local, align 4
  store i32 %v0_d3c0, i32* @global_var_1a2d8.43, align 4
  store i16 20480, i16* bitcast (i32* @global_var_1a2e6.74 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_1a2e4.72 to i16*), align 4
  %v6_d3e8 = call i32 @function_10a28(i32 %v0_d3c0, i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32 ptrtoint (i16** @global_var_1a2e4.72 to i32), i32 20480)
  store i32 ptrtoint (i32* @global_var_d1ec.65 to i32), i32* %r3.global-to-local, align 4
  store i32 98444, i32* @lr, align 4
  %v2_d3f4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_d3f4, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_d1ec.65 to i32), i32* inttoptr (i32 98444 to i32*), align 4
  %v1_d3fc = call i32 @function_d088(i32 %v6_d3e8)
  %v1_d400 = call i32 @function_db68(i32 %v1_d3fc)
  store i32 %v2_d3f4, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_d40c = call i32 @function_11228()
  %v0_d410 = load i32, i32* @r6, align 4
  %v7_d410 = icmp eq i32 %v0_d410, 2
  br i1 %v7_d410, label %dec_label_pc_d540, label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d360, %dec_label_pc_d550
  %v0_d418 = call i32 @function_db0c()
  store i32 %v0_d418, i32* @r6, align 4
  %v0_d420 = load i32, i32* @r8, align 4
  %v1_d420 = inttoptr i32 %v0_d420 to i32*
  %v2_d420 = load i32, i32* %v1_d420, align 4
  %v1_d424 = inttoptr i32 %v2_d420 to i8*
  %v2_d424 = call i32 @function_11194(i8* %v1_d424)
  %v0_d42c = load i32, i32* @r8, align 4
  %v1_d42c = inttoptr i32 %v0_d42c to i32*
  %v2_d42c = load i32, i32* %v1_d42c, align 4
  %v1_d430 = inttoptr i32 %v2_d42c to i8*
  %v2_d430 = call i32 @function_11194(i8* %v1_d430)
  %v1_d434 = sub i32 20, %v2_d424
  store i32 %v2_d430, i32* @r4, align 4
  %v0_d43c = load i32, i32* @r6, align 4
  %v2_d440 = call i32 @function_117ec(i32 %v0_d43c, i32 %v1_d434)
  %v2_d444 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_d444, i32* @r5, align 4
  %v0_d448 = load i32, i32* @r4, align 4
  %v2_d448 = add i32 %v0_d448, %v1_d434
  store i32 %v2_d448, i32* @r4, align 4
  %v2_d454 = call i32 @function_dbd0(i32 %v2_d444, i32 %v2_d448)
  %v2_d458 = ptrtoint i32* %stack_var_-40 to i32
  %v1_d45c = load i32, i32* @r4, align 4
  %v2_d45c = add i32 %v1_d45c, %v2_d458
  store i32 %v2_d45c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_d468 = load i32, i32* @r8, align 4
  %v1_d468 = inttoptr i32 %v0_d468 to i32*
  %v2_d468 = load i32, i32* %v1_d468, align 4
  store i32 %v2_d468, i32* @r0, align 4
  %v3_d46c = add i32 %v2_d45c, -80
  %v4_d46c = inttoptr i32 %v3_d46c to i8*
  store i8 0, i8* %v4_d46c, align 1
  %v2_d470 = inttoptr i32 %v2_d468 to i8*
  %v3_d470 = call i32 @function_111bc(i8* %v2_d470, i32 %v2_d444)
  store i32 32, i32* @r1, align 4
  store i32 %v2_d444, i32* @r0, align 4
  %v0_d47c = call i32 @function_11228()
  %v0_d480 = call i32 @function_db0c()
  store i32 %v0_d480, i32* @r7, align 4
  %v0_d488 = load i32, i32* @r8, align 4
  %v1_d488 = inttoptr i32 %v0_d488 to i32*
  %v2_d488 = load i32, i32* %v1_d488, align 4
  %v1_d48c = inttoptr i32 %v2_d488 to i8*
  %v2_d48c = call i32 @function_11194(i8* %v1_d48c)
  store i32 %v2_d48c, i32* @r6, align 4
  %v0_d494 = load i32, i32* @r8, align 4
  %v1_d494 = inttoptr i32 %v0_d494 to i32*
  %v2_d494 = load i32, i32* %v1_d494, align 4
  %v1_d498 = inttoptr i32 %v2_d494 to i8*
  %v2_d498 = call i32 @function_11194(i8* %v1_d498)
  %v0_d49c = load i32, i32* @r6, align 4
  %v1_d49c = sub i32 20, %v0_d49c
  store i32 %v2_d498, i32* @r4, align 4
  %v0_d4a4 = load i32, i32* @r7, align 4
  %v2_d4a8 = call i32 @function_117ec(i32 %v0_d4a4, i32 %v1_d49c)
  %v0_d4ac = load i32, i32* @r4, align 4
  %v2_d4ac = add i32 %v0_d4ac, %v1_d49c
  store i32 %v2_d4ac, i32* @r4, align 4
  %v2_d4b8 = call i32 @function_dbd0(i32 %v2_d444, i32 %v2_d4ac)
  store i32 %v2_d458, i32* %r2.global-to-local, align 4
  %v1_d4c0 = load i32, i32* @r4, align 4
  %v2_d4c0 = add i32 %v1_d4c0, %v2_d458
  store i32 %v2_d4c0, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @sl, align 4
  %v1_d4c4 = trunc i32 %v0_d4c4 to i8
  %v3_d4c4 = add i32 %v2_d4c0, -80
  %v4_d4c4 = inttoptr i32 %v3_d4c4 to i8*
  store i8 %v1_d4c4, i8* %v4_d4c4, align 1
  %v4_d4d0 = call i32 @function_11904(i32 15, i32 %v2_d444, i32 %v2_d458, i32 %v2_d4c0)
  %v1_d4d8 = call i32 @function_10988(i32 2)
  %v3_d4e8 = call i32 @function_108c4(i32 2, i32* nonnull %stack_var_-48)
  %v3_d4ec = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4ec, i32* %r2.global-to-local, align 4
  %v2_d4f8 = call i32 @function_11b60(i32 1, i32 %v3_d4e8)
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_d508 = call i32 @function_11b60(i32 1, i32 ptrtoint (i32* @global_var_16ff0.84 to i32))
  %v1_d510 = call i32 @function_108e8(i32 2)
  %v1_d514 = call i32 @function_8560(i32 %v1_d510)
  %v1_d518 = call i32 @function_c600(i32 %v1_d514)
  store i32 %v1_d518, i32* @r0, align 4
  %v1_d51c = call i32 @function_d270(i32 %v1_d518)
  store i32 %v1_d51c, i32* @r0, align 4
  %v0_d520 = call i32 @function_11944()
  %v1_d524 = load i32, i32* @sl, align 4
  %v7_d528 = icmp sgt i32 %v0_d520, %v1_d524
  br i1 %v7_d528, label %dec_label_pc_d52c, label %dec_label_pc_d578

dec_label_pc_d52c:                                ; preds = %dec_label_pc_d418
  store i32 %v15_d360, i32* %r8.global-to-local, align 4
  ret i32 %v1_d524

dec_label_pc_d540:                                ; preds = %dec_label_pc_d360
  %v0_d540 = load i32, i32* @r8, align 4
  %v1_d540 = add i32 %v0_d540, 4
  %v2_d540 = inttoptr i32 %v1_d540 to i32*
  %v3_d540 = load i32, i32* %v2_d540, align 4
  %v1_d544 = inttoptr i32 %v3_d540 to i8*
  %v2_d544 = call i32 @function_11194(i8* %v1_d544)
  %v8_d54c = icmp sgt i32 %v2_d544, 31
  br i1 %v8_d54c, label %dec_label_pc_d418, label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d540
  %v0_d550 = load i32, i32* @r8, align 4
  %v1_d550 = add i32 %v0_d550, 4
  %v2_d550 = inttoptr i32 %v1_d550 to i32*
  %v3_d550 = load i32, i32* %v2_d550, align 4
  store i32 %v2_d3f4, i32* @r0, align 4
  %v2_d558 = bitcast i32* %stack_var_-152 to i8*
  %v3_d558 = call i32 @function_111bc(i8* %v2_d558, i32 %v3_d550)
  %v0_d55c = load i32, i32* @r8, align 4
  %v1_d55c = add i32 %v0_d55c, 4
  %v2_d55c = inttoptr i32 %v1_d55c to i32*
  %v3_d55c = load i32, i32* %v2_d55c, align 4
  %v1_d564 = inttoptr i32 %v3_d55c to i8*
  %v2_d564 = call i32 @function_11194(i8* %v1_d564)
  store i32 %v2_d564, i32* @r1, align 4
  store i32 %v3_d55c, i32* @r0, align 4
  %v0_d570 = call i32 @function_11228()
  br label %dec_label_pc_d418

dec_label_pc_d578:                                ; preds = %dec_label_pc_d418
  %v1_d578 = call i32 @function_11b94(i32 %v0_d520)
  %v0_d580 = load i32, i32* @sl, align 4
  %v1_d584 = call i32 @function_11c54(i32 %v0_d580)
  %v1_d58c = call i32 @function_11c54(i32 1)
  %v1_d594 = call i32 @function_11c54(i32 2)
  %v1_d598 = call i32 @function_8560(i32 %v1_d594)
  %v1_d59c = call i32 @function_c600(i32 %v1_d598)
  store i32 %v1_d59c, i32* @r0, align 4
  %v1_d5a0 = call i32 @function_d270(i32 %v1_d59c)
  store i32 %v1_d5a0, i32* @r0, align 4
  %v1_d5a4 = call i32 @function_e420(i32 %v1_d5a0)
  store i32 98440, i32* @fp, align 4
  %v2_d5ac = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_d5ac, i32* @r6, align 4
  %v2_d5b0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_d5b0, i32* @r7, align 4
  %v2_d690 = ptrtoint i32* %stack_var_-72 to i32
  %v2_d6d4 = ptrtoint i32* %stack_var_-168 to i32
  %v2_d8b4 = ptrtoint i32* %stack_var_-56 to i32
  %v2_d8bc = ptrtoint i16* %stack_var_-42 to i32
  %v2_da34 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_d8d8 = ptrtoint i32* %stack_var_-52 to i32
  %v1_d97c = bitcast i32* %stack_var_-152 to i8*
  %v2_d94c = ptrtoint i32* %stack_var_-88 to i32
  %v1_d968 = sub i32 0, %v1_d578
  br label %dec_label_pc_d5b4

dec_label_pc_d5b4:                                ; preds = %dec_label_pc_d9dc, %dec_label_pc_da60, %bb44, %dec_label_pc_d978, %dec_label_pc_d7bc, %dec_label_pc_d7ac, %bb41, %dec_label_pc_dab8, %dec_label_pc_d9ec, %dec_label_pc_d9c8, %dec_label_pc_d904, %dec_label_pc_d828, %dec_label_pc_d764, %dec_label_pc_d578
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d5c0

dec_label_pc_d5c0:                                ; preds = %dec_label_pc_d5c0, %dec_label_pc_d5b4
  %v1_d5c4 = phi i32 [ %v1_d5c8, %dec_label_pc_d5c0 ], [ 4, %dec_label_pc_d5b4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d5c4 = load i32, i32* @r6, align 4
  %v3_d5c4 = add i32 %v2_d5c4, %v1_d5c4
  %v4_d5c4 = inttoptr i32 %v3_d5c4 to i32*
  store i32 0, i32* %v4_d5c4, align 4
  %v0_d5c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5c8 = add i32 %v0_d5c8, 4
  store i32 %v1_d5c8, i32* %r3.global-to-local, align 4
  %v7_d5cc = icmp eq i32 %v1_d5c8, 128
  br i1 %v7_d5cc, label %dec_label_pc_d5d4, label %dec_label_pc_d5c0

dec_label_pc_d5d4:                                ; preds = %dec_label_pc_d5c0
  %v0_d5d4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d5d4, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d5dc

dec_label_pc_d5dc:                                ; preds = %dec_label_pc_d5dc, %dec_label_pc_d5d4
  %v1_d5e0 = phi i32 [ %v1_d5e4, %dec_label_pc_d5dc ], [ 4, %dec_label_pc_d5d4 ]
  store i32 0, i32* @r4, align 4
  %v2_d5e0 = load i32, i32* @r7, align 4
  %v3_d5e0 = add i32 %v2_d5e0, %v1_d5e0
  %v4_d5e0 = inttoptr i32 %v3_d5e0 to i32*
  store i32 0, i32* %v4_d5e0, align 4
  %v0_d5e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5e4 = add i32 %v0_d5e4, 4
  store i32 %v1_d5e4, i32* %r3.global-to-local, align 4
  %v7_d5e8 = icmp eq i32 %v1_d5e4, 128
  br i1 %v7_d5e8, label %dec_label_pc_d5f0, label %dec_label_pc_d5dc

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5dc
  store i32 98436, i32* %r3.global-to-local, align 4
  %v2_d5f4 = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  %v7_d5f8 = icmp eq i32 %v2_d5f4, -1
  br i1 %v7_d5f8, label %dec_label_pc_d624, label %dec_label_pc_d600

dec_label_pc_d600:                                ; preds = %dec_label_pc_d5f0
  %v3_d600 = udiv i32 %v2_d5f4, 32
  %v3_d604 = mul nuw nsw i32 %v3_d600, 4
  store i32 %v2_d458, i32* %ip.global-to-local, align 4
  %v2_d60c = add i32 %v3_d604, %v2_d458
  store i32 %v2_d60c, i32* %r3.global-to-local, align 4
  %v1_d610 = add i32 %v2_d60c, -240
  %v2_d610 = inttoptr i32 %v1_d610 to i32*
  %v3_d610 = load i32, i32* %v2_d610, align 4
  %v1_d614 = urem i32 %v2_d5f4, 32
  %v7_d61c = shl i32 1, %v1_d614
  %v8_d61c = or i32 %v3_d610, %v7_d61c
  store i32 %v8_d61c, i32* %r2.global-to-local, align 4
  store i32 %v8_d61c, i32* %v2_d610, align 4
  br label %dec_label_pc_d624

dec_label_pc_d624:                                ; preds = %dec_label_pc_d5f0, %dec_label_pc_d600
  %v0_d624 = load i32, i32* @fp, align 4
  %v1_d624 = inttoptr i32 %v0_d624 to i32*
  %v2_d624 = load i32, i32* %v1_d624, align 4
  store i32 %v2_d624, i32* @r3, align 4
  %v7_d628 = icmp eq i32 %v2_d624, -1
  store i32 98440, i32* %r8.global-to-local, align 4
  br i1 %v7_d628, label %dec_label_pc_d844, label %dec_label_pc_d634

dec_label_pc_d634:                                ; preds = %dec_label_pc_d844, %dec_label_pc_d624, %bb43
  %v2_d638 = load i8, i8* bitcast (i8** @global_var_1825c.88 to i8*), align 4
  %v3_d638 = zext i8 %v2_d638 to i32
  store i32 %v3_d638, i32* %r3.global-to-local, align 4
  %v2_d63c = icmp eq i8 %v2_d638, 0
  %v0_d780 = load i32, i32* @fp, align 4
  %v1_d780 = inttoptr i32 %v0_d780 to i32*
  %v2_d780 = load i32, i32* %v1_d780, align 4
  store i32 %v2_d780, i32* %ip.global-to-local, align 4
  %v3_d784 = udiv i32 %v2_d780, 32
  store i32 %v3_d784, i32* %r3.global-to-local, align 4
  br i1 %v2_d63c, label %dec_label_pc_d780, label %dec_label_pc_d644

dec_label_pc_d644:                                ; preds = %dec_label_pc_d634
  %v3_d650 = mul nuw nsw i32 %v3_d784, 4
  %v2_d654 = add i32 %v3_d650, %v2_d458
  store i32 %v2_d654, i32* %r3.global-to-local, align 4
  %v1_d658 = add i32 %v2_d654, -368
  %v2_d658 = inttoptr i32 %v1_d658 to i32*
  %v3_d658 = load i32, i32* %v2_d658, align 4
  %v1_d65c = urem i32 %v2_d780, 32
  %v7_d664 = shl i32 1, %v1_d65c
  %v8_d664 = or i32 %v3_d658, %v7_d664
  store i32 %v8_d664, i32* %r2.global-to-local, align 4
  store i32 %v8_d664, i32* %v2_d658, align 4
  br label %dec_label_pc_d66c

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d780, %dec_label_pc_d644
  store i32 98436, i32* %r3.global-to-local, align 4
  %v2_d670 = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  store i32 0, i32* @lr, align 4
  %v0_d678 = load i32, i32* %ip.global-to-local, align 4
  %v5_d67c = icmp slt i32 %v0_d678, %v2_d670
  br i1 %v5_d67c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_d66c
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_d66c, %bb
  %v0_d68c = phi i32 [ %v2_d670, %dec_label_pc_d66c ], [ %v0_d678, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_d68c = add i32 %v0_d68c, 1
  store i32 %v2_d690, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d5b0, i32* %r2.global-to-local, align 4
  %v5_d6a8 = call i32 @function_11978(i32 %v1_d68c, i32 %v2_d5ac, i32 %v2_d5b0, i32 0, i32 %v2_d690)
  %v8_d6ac = icmp eq i32 %v5_d6a8, -1
  br i1 %v8_d6ac, label %dec_label_pc_d5b4, label %dec_label_pc_d6b4

dec_label_pc_d6b4:                                ; preds = %bb41
  %v6_d6a8 = trunc i32 %v5_d6a8 to i16
  %v3_d6b4 = icmp eq i16 %v6_d6a8, 0
  br i1 %v3_d6b4, label %dec_label_pc_d6bc, label %dec_label_pc_d6e8

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d6b4
  %v2_d6c0 = load i32, i32* @sl, align 4
  %v5_d6c4 = srem i32 %v2_d6c0, 6
  %v4_d6cc = sub i32 %v2_d6c0, %v5_d6c4
  store i32 %v4_d6cc, i32* %r3.global-to-local, align 4
  store i32 %v5_d6c4, i32* %r2.global-to-local, align 4
  %v2_d6d8 = icmp eq i32 %v5_d6c4, 0
  store i16 0, i16* %stack_var_-42, align 2
  %v1_d6e0 = add i32 %v2_d6c0, 1
  store i32 %v1_d6e0, i32* @sl, align 4
  br i1 %v2_d6d8, label %dec_label_pc_d8b4, label %dec_label_pc_d6e8

dec_label_pc_d6e8:                                ; preds = %dec_label_pc_d6b4, %dec_label_pc_d6bc, %dec_label_pc_d8b4
  store i32 98436, i32* %r2.global-to-local, align 4
  %v2_d6ec = load i32, i32* inttoptr (i32 98436 to i32*), align 4
  %v7_d6f0 = icmp eq i32 %v2_d6ec, -1
  br i1 %v7_d6f0, label %dec_label_pc_d71c, label %dec_label_pc_d6f8

dec_label_pc_d6f8:                                ; preds = %dec_label_pc_d6e8
  %v3_d6f8 = udiv i32 %v2_d6ec, 32
  %v3_d6fc = mul nuw nsw i32 %v3_d6f8, 4
  store i32 %v2_d458, i32* %ip.global-to-local, align 4
  %v2_d704 = add i32 %v3_d6fc, %v2_d458
  store i32 %v2_d704, i32* %r3.global-to-local, align 4
  %v1_d708 = add i32 %v2_d704, -240
  %v2_d708 = inttoptr i32 %v1_d708 to i32*
  %v3_d708 = load i32, i32* %v2_d708, align 4
  %v1_d70c = urem i32 %v2_d6ec, 32
  %v6_d710 = lshr i32 %v3_d708, %v1_d70c
  store i32 %v6_d710, i32* %r2.global-to-local, align 4
  %v1_d714 = urem i32 %v6_d710, 2
  %v2_d714 = icmp eq i32 %v1_d714, 0
  br i1 %v2_d714, label %dec_label_pc_d71c, label %dec_label_pc_d940

dec_label_pc_d71c:                                ; preds = %dec_label_pc_d6f8, %dec_label_pc_d6e8
  %v2_d720 = load i8, i8* bitcast (i8** @global_var_1825c.88 to i8*), align 4
  %v3_d720 = zext i8 %v2_d720 to i32
  store i32 %v3_d720, i32* @r4, align 4
  %v2_d724 = icmp eq i8 %v2_d720, 0
  %v0_d7ac = load i32, i32* @fp, align 4
  %v1_d7ac = inttoptr i32 %v0_d7ac to i32*
  %v2_d7ac = load i32, i32* %v1_d7ac, align 4
  br i1 %v2_d724, label %dec_label_pc_d7ac, label %dec_label_pc_d72c

dec_label_pc_d72c:                                ; preds = %dec_label_pc_d71c
  %v3_d730 = udiv i32 %v2_d7ac, 32
  store i32 %v2_d458, i32* %r2.global-to-local, align 4
  %v3_d738 = mul nuw nsw i32 %v3_d730, 4
  %v2_d73c = add i32 %v3_d738, %v2_d458
  store i32 %v2_d73c, i32* %r3.global-to-local, align 4
  %v1_d740 = add i32 %v2_d73c, -368
  %v2_d740 = inttoptr i32 %v1_d740 to i32*
  %v3_d740 = load i32, i32* %v2_d740, align 4
  %v1_d744 = urem i32 %v2_d7ac, 32
  %v6_d748 = lshr i32 %v3_d740, %v1_d744
  store i32 %v6_d748, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1825c.88 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_d754 = urem i32 %v6_d748, 2
  %v2_d754 = icmp eq i32 %v1_d754, 0
  store i8 0, i8* bitcast (i8** @global_var_1825c.88 to i8*), align 4
  store i32 98440, i32* @r5, align 4
  br i1 %v2_d754, label %dec_label_pc_d764, label %dec_label_pc_d8d0

dec_label_pc_d764:                                ; preds = %dec_label_pc_d72c
  store i32 55148, i32* @lr, align 4
  %v1_d768 = icmp ne i32 %v2_d7ac, -1
  call void @__pseudo_cond_branch(i1 %v1_d768, i32 ptrtoint (i32* @global_var_11c54.90 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d770 = load i32, i32* @r5, align 4
  %v2_d770 = inttoptr i32 %v1_d770 to i32*
  store i32 -1, i32* %v2_d770, align 4
  %v1_d778 = call i32 @function_13d70(i32 1)
  br label %dec_label_pc_d5b4

dec_label_pc_d780:                                ; preds = %dec_label_pc_d634
  store i32 %v2_d458, i32* %r2.global-to-local, align 4
  %v3_d78c = mul nuw nsw i32 %v3_d784, 4
  %v2_d790 = add i32 %v3_d78c, %v2_d458
  store i32 %v2_d790, i32* %r3.global-to-local, align 4
  %v1_d794 = add i32 %v2_d790, -240
  %v2_d794 = inttoptr i32 %v1_d794 to i32*
  %v3_d794 = load i32, i32* %v2_d794, align 4
  %v1_d798 = urem i32 %v2_d780, 32
  %v7_d7a0 = shl i32 1, %v1_d798
  %v8_d7a0 = or i32 %v3_d794, %v7_d7a0
  store i32 %v8_d7a0, i32* %r2.global-to-local, align 4
  store i32 %v8_d7a0, i32* %v2_d794, align 4
  br label %dec_label_pc_d66c

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d71c
  %v7_d7b0 = icmp eq i32 %v2_d7ac, -1
  store i32 98440, i32* @r5, align 4
  br i1 %v7_d7b0, label %dec_label_pc_d5b4, label %dec_label_pc_d7bc

dec_label_pc_d7bc:                                ; preds = %dec_label_pc_d7ac
  %v3_d7bc = udiv i32 %v2_d7ac, 32
  store i32 %v2_d458, i32* %r2.global-to-local, align 4
  %v3_d7c4 = mul nuw nsw i32 %v3_d7bc, 4
  %v2_d7c8 = add i32 %v3_d7c4, %v2_d458
  store i32 %v2_d7c8, i32* %r3.global-to-local, align 4
  %v1_d7cc = add i32 %v2_d7c8, -240
  %v2_d7cc = inttoptr i32 %v1_d7cc to i32*
  %v3_d7cc = load i32, i32* %v2_d7cc, align 4
  %v1_d7d0 = urem i32 %v2_d7ac, 32
  %v6_d7d4 = lshr i32 %v3_d7cc, %v1_d7d0
  store i32 %v6_d7d4, i32* %r2.global-to-local, align 4
  %v1_d7d8 = urem i32 %v6_d7d4, 2
  %v2_d7d8 = icmp eq i32 %v1_d7d8, 0
  br i1 %v2_d7d8, label %dec_label_pc_d5b4, label %dec_label_pc_d7e0

dec_label_pc_d7e0:                                ; preds = %dec_label_pc_d7bc
  %v0_d7e0 = call i32 @function_1207c()
  %v0_d7e4 = load i32, i32* @r4, align 4
  %v2_d7e4 = inttoptr i32 %v0_d7e0 to i32*
  store i32 %v0_d7e4, i32* %v2_d7e4, align 4
  store i32 %v0_d7e0, i32* @r8, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_d7f8 = load i32, i32* @r5, align 4
  %v1_d7f8 = inttoptr i32 %v0_d7f8 to i32*
  %v2_d7f8 = load i32, i32* %v1_d7f8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_d804 = call i32 @function_12334(i32 %v2_d7f8, i32 %v2_d8bc, i32 2, i32 16386)
  %v7_d808 = icmp eq i32 %v4_d804, -1
  br i1 %v7_d808, label %dec_label_pc_d9dc, label %dec_label_pc_d810

dec_label_pc_d810:                                ; preds = %dec_label_pc_d7e0
  %v2_d810 = icmp eq i32 %v4_d804, 0
  br i1 %v2_d810, label %dec_label_pc_d9ec, label %dec_label_pc_d818

dec_label_pc_d818:                                ; preds = %dec_label_pc_d810
  store i32 %v2_d6d4, i32* %r3.global-to-local, align 4
  %v3_d81c = load i16, i16* %stack_var_-42, align 2
  %v4_d81c = sext i16 %v3_d81c to i32
  store i32 %v4_d81c, i32* %r2.global-to-local, align 4
  %v2_d820 = icmp eq i16 %v3_d81c, 0
  br i1 %v2_d820, label %dec_label_pc_d828, label %dec_label_pc_da10

dec_label_pc_d828:                                ; preds = %dec_label_pc_d818
  %v0_d82c = load i32, i32* @r5, align 4
  %v1_d82c = inttoptr i32 %v0_d82c to i32*
  %v2_d82c = load i32, i32* %v1_d82c, align 4
  %v1_d834 = add nsw i32 %v4_d81c, 2
  store i32 %v1_d834, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d83c = call i32 @function_12334(i32 %v2_d82c, i32 %v2_d8bc, i32 %v1_d834, i32 16384)
  br label %dec_label_pc_d5b4

dec_label_pc_d844:                                ; preds = %dec_label_pc_d624
  %v0_d84c = load i32, i32* @r4, align 4
  store i32 %v0_d84c, i32* %r2.global-to-local, align 4
  %v3_d850 = call i32 @function_12464(i32 2, i32 1, i32 %v0_d84c)
  %v7_d854 = icmp eq i32 %v3_d850, -1
  store i32 %v3_d850, i32* @r5, align 4
  %v1_d85c = load i32, i32* %r8.global-to-local, align 4
  %v2_d85c = inttoptr i32 %v1_d85c to i32*
  store i32 %v3_d850, i32* %v2_d85c, align 4
  br i1 %v7_d854, label %dec_label_pc_d634, label %dec_label_pc_d864

dec_label_pc_d864:                                ; preds = %dec_label_pc_d844
  %v0_d864 = load i32, i32* @r4, align 4
  store i32 %v0_d864, i32* %r2.global-to-local, align 4
  %v2_d86c = call i32 @function_11a88(i32 %v3_d850, i32 3)
  %v1_d874 = or i32 %v2_d86c, 2048
  store i32 %v1_d874, i32* %r2.global-to-local, align 4
  %v0_d878 = load i32, i32* @r5, align 4
  %v2_d87c = call i32 @function_11a88(i32 %v0_d878, i32 4)
  %v2_d884 = load i32, i32* inttoptr (i32 98444 to i32*), align 4
  store i32 %v2_d884, i32* %r3.global-to-local, align 4
  %v2_d888 = icmp eq i32 %v2_d884, 0
  br i1 %v2_d888, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_d864
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_d864, %bb42
  %v2_d890 = xor i1 %v2_d888, true
  call void @__pseudo_cond_branch(i1 %v2_d890, i32 %v2_d884)
  store i32 ptrtoint (i8** @global_var_1825c.88 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_d89c = load i32, i32* %r8.global-to-local, align 4
  %v1_d89c = inttoptr i32 %v0_d89c to i32*
  %v2_d89c = load i32, i32* %v1_d89c, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_1825c.88 to i8*), align 4
  %v4_d8ac = call i32 @function_1224c(i32 %v2_d89c, i32 ptrtoint (i16** @global_var_1a2e4.72 to i32), i32 16)
  br label %dec_label_pc_d634

dec_label_pc_d8b4:                                ; preds = %dec_label_pc_d6bc
  %v0_d8b8 = load i32, i32* @fp, align 4
  %v1_d8b8 = inttoptr i32 %v0_d8b8 to i32*
  %v2_d8b8 = load i32, i32* %v1_d8b8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_d8c8 = call i32 @function_123a8(i32 %v2_d8b8, i32 %v2_d8bc, i32 2, i32 16384)
  br label %dec_label_pc_d6e8

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d72c
  store i32 4, i32* @r4, align 4
  store i32 %v2_d8d8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_d8b4, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_d8f4 = call i32 @function_122bc(i32 %v2_d7ac, i32 1, i32 4, i32 %v2_d8d8, i32 %v2_d8b4)
  %v3_d8f8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d8f8, i32* %r3.global-to-local, align 4
  %v2_d8fc = icmp eq i32 %v3_d8f8, 0
  br i1 %v2_d8fc, label %dec_label_pc_d978, label %dec_label_pc_d904

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8d0
  %v0_d904 = load i32, i32* @r5, align 4
  %v1_d904 = inttoptr i32 %v0_d904 to i32*
  %v2_d904 = load i32, i32* %v1_d904, align 4
  %v1_d908 = call i32 @function_11c54(i32 %v2_d904)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d910 = load i32, i32* @r5, align 4
  %v2_d910 = inttoptr i32 %v1_d910 to i32*
  store i32 -1, i32* %v2_d910, align 4
  %v0_d914 = call i32 @function_db0c()
  %v3_d91c = zext i32 %v0_d914 to i64
  %v4_d91c = mul nuw i64 %v3_d91c, 3435973837
  %v7_d91c = trunc i64 %v4_d91c to i32
  store i32 %v7_d91c, i32* %ip.global-to-local, align 4
  %v3_d9202 = udiv i64 %v4_d91c, 34359738368
  %v3_d9244 = mul nuw nsw i64 %v3_d9202, 8
  %v3_d924 = trunc i64 %v3_d9244 to i32
  store i32 %v3_d924, i32* %r2.global-to-local, align 4
  %v2_d9286 = mul nuw nsw i64 %v3_d9202, 2
  %v2_d928 = trunc i64 %v2_d9286 to i32
  %v2_d92c = add i32 %v3_d924, %v2_d928
  store i32 %v2_d92c, i32* %r3.global-to-local, align 4
  %v2_d930 = sub i32 %v0_d914, %v2_d92c
  %v1_d934 = add i32 %v2_d930, 1
  %v1_d938 = call i32 @function_13d70(i32 %v1_d934)
  br label %dec_label_pc_d5b4

dec_label_pc_d940:                                ; preds = %dec_label_pc_d6f8
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_d8d8, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_d954 = call i32 @function_121dc(i32 %v2_d6ec, i32 %v2_d94c, i32 %v2_d8d8, i32 16, i32 16)
  %v1_d958 = call i32 @function_e1d0(i32 %v5_d954)
  %v1_d95c = call i32 @function_c06c(i32 %v1_d958)
  store i32 %v1_d578, i32* @lr, align 4
  %v2_d96c = call i32 @function_11a20(i32 %v1_d968, i32 9)
  %v1_d974 = call i32 @function_13cb8(i32 0)
  br label %dec_label_pc_d978

dec_label_pc_d978:                                ; preds = %dec_label_pc_d8d0, %dec_label_pc_d940
  %v2_d97c = call i32 @function_11194(i8* %v1_d97c)
  %v3_d97c = trunc i32 %v2_d97c to i16
  store i16 %v3_d97c, i16* %stack_var_-42, align 2
  %v0_d984 = call i32 @function_11450()
  %v0_d98c = load i32, i32* @r4, align 4
  store i32 %v0_d98c, i32* %r2.global-to-local, align 4
  store i32 %v0_d984, i32* @global_var_1a2d8.43, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_d99c = load i32, i32* @r5, align 4
  %v1_d99c = inttoptr i32 %v0_d99c to i32*
  %v2_d99c = load i32, i32* %v1_d99c, align 4
  %v4_d9a0 = call i32 @function_123a8(i32 %v2_d99c, i32 ptrtoint (i32* @global_var_16ff4.93 to i32), i32 %v0_d98c, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_d9ac = load i32, i32* @r5, align 4
  %v1_d9ac = inttoptr i32 %v0_d9ac to i32*
  %v2_d9ac = load i32, i32* %v1_d9ac, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d9b8 = call i32 @function_123a8(i32 %v2_d9ac, i32 %v2_d8bc, i32 1, i32 16384)
  %v3_d9bc = load i16, i16* %stack_var_-42, align 2
  %v4_d9bc = sext i16 %v3_d9bc to i32
  store i32 %v4_d9bc, i32* %r2.global-to-local, align 4
  %v2_d9c0 = icmp eq i16 %v3_d9bc, 0
  br i1 %v2_d9c0, label %dec_label_pc_d5b4, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d978
  %v0_d9c8 = load i32, i32* @r5, align 4
  %v1_d9c8 = inttoptr i32 %v0_d9c8 to i32*
  %v2_d9c8 = load i32, i32* %v1_d9c8, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_d9d4 = call i32 @function_123a8(i32 %v2_d9c8, i32 %v2_d3f4, i32 %v4_d9bc, i32 16384)
  br label %dec_label_pc_d5b4

dec_label_pc_d9dc:                                ; preds = %dec_label_pc_da2c, %dec_label_pc_d7e0
  %v0_d9dc = load i32, i32* @r8, align 4
  %v1_d9dc = inttoptr i32 %v0_d9dc to i32*
  %v2_d9dc = load i32, i32* %v1_d9dc, align 4
  store i32 %v2_d9dc, i32* %r3.global-to-local, align 4
  %v7_d9e0 = icmp eq i32 %v2_d9dc, 4
  br i1 %v7_d9e0, label %dec_label_pc_d5b4, label %bb44

bb44:                                             ; preds = %dec_label_pc_d9dc
  %v8_d9e4 = icmp eq i32 %v2_d9dc, 11
  br i1 %v8_d9e4, label %dec_label_pc_d5b4, label %dec_label_pc_d9ec

dec_label_pc_d9ec:                                ; preds = %dec_label_pc_da58, %bb44, %dec_label_pc_d810
  %v0_d9ec = load i32, i32* @fp, align 4
  %v1_d9ec = inttoptr i32 %v0_d9ec to i32*
  %v2_d9ec = load i32, i32* %v1_d9ec, align 4
  store i32 55800, i32* @lr, align 4
  %v1_d9f4 = icmp ne i32 %v2_d9ec, -1
  call void @__pseudo_cond_branch(i1 %v1_d9f4, i32 ptrtoint (i32* @global_var_11c54.90 to i32))
  store i32 98440, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* inttoptr (i32 98440 to i32*), align 8
  %v1_da08 = call i32 @function_13d70(i32 1)
  br label %dec_label_pc_d5b4

dec_label_pc_da10:                                ; preds = %dec_label_pc_d818
  %v3_da10 = udiv i32 %v4_d81c, 256
  %v1_da14 = urem i32 %v4_d81c, 256
  store i32 %v1_da14, i32* %r2.global-to-local, align 4
  %v4_da18 = mul nuw nsw i32 %v1_da14, 256
  %v5_da18 = or i32 %v4_da18, %v3_da10
  store i32 %v5_da18, i32* %r3.global-to-local, align 4
  store i32 %v2_d6d4, i32* %ip.global-to-local, align 4
  %v6_da24 = trunc i32 %v5_da18 to i16
  store i16 %v6_da24, i16* %stack_var_-42, align 2
  %tmp45 = icmp ugt i32 %v5_da18, 1024
  br i1 %tmp45, label %dec_label_pc_dac4, label %dec_label_pc_da2c

dec_label_pc_da2c:                                ; preds = %dec_label_pc_da10, %dec_label_pc_dac4
  %v3_da48 = phi i16 [ %v6_da24, %dec_label_pc_da10 ], [ %v3_da48.pre, %dec_label_pc_dac4 ]
  %v0_da2c = load i32, i32* @r4, align 4
  %v1_da2c = load i32, i32* @r8, align 4
  %v2_da2c = inttoptr i32 %v1_da2c to i32*
  store i32 %v0_da2c, i32* %v2_da2c, align 4
  store i32 %v2_da34, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_da40 = load i32, i32* @r5, align 4
  %v1_da40 = inttoptr i32 %v0_da40 to i32*
  %v2_da40 = load i32, i32* %v1_da40, align 4
  %v4_da48 = sext i16 %v3_da48 to i32
  store i32 %v4_da48, i32* %r2.global-to-local, align 4
  %v4_da4c = call i32 @function_12334(i32 %v2_da40, i32 %v2_da34, i32 %v4_da48, i32 16386)
  %v7_da50 = icmp eq i32 %v4_da4c, -1
  br i1 %v7_da50, label %dec_label_pc_d9dc, label %dec_label_pc_da58

dec_label_pc_da58:                                ; preds = %dec_label_pc_da2c
  %v2_da58 = icmp eq i32 %v4_da4c, 0
  br i1 %v2_da58, label %dec_label_pc_d9ec, label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da58
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_da70 = load i32, i32* @r5, align 4
  %v1_da70 = inttoptr i32 %v0_da70 to i32*
  %v2_da70 = load i32, i32* %v1_da70, align 4
  %v4_da74 = call i32 @function_12334(i32 %v2_da70, i32 %v2_d8bc, i32 2, i32 16384)
  %v3_da7c = load i16, i16* %stack_var_-42, align 2
  %v4_da7c = sext i16 %v3_da7c to i32
  %v3_da80 = udiv i32 %v4_da7c, 256
  %v1_da84 = urem i32 %v4_da7c, 256
  store i32 %v1_da84, i32* %r3.global-to-local, align 4
  %v4_da88 = mul nuw nsw i32 %v1_da84, 256
  %v5_da88 = or i32 %v4_da88, %v3_da80
  store i32 %v5_da88, i32* %ip.global-to-local, align 4
  store i32 %v2_d6d4, i32* @lr, align 4
  store i32 %v5_da88, i32* %r2.global-to-local, align 4
  %v0_da98 = load i32, i32* @r5, align 4
  %v1_da98 = inttoptr i32 %v0_da98 to i32*
  %v2_da98 = load i32, i32* %v1_da98, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_daa0 = trunc i32 %v5_da88 to i16
  store i16 %v6_daa0, i16* %stack_var_-42, align 2
  %v6_daa4 = call i32 @function_12334(i32 %v2_da98, i32 %v2_da34, i32 %v5_da88, i32 16384)
  store i32 %v2_d6d4, i32* %r2.global-to-local, align 4
  %v3_daac = load i16, i16* %stack_var_-42, align 2
  %v2_dab0 = icmp eq i16 %v3_daac, 0
  br i1 %v2_dab0, label %dec_label_pc_d5b4, label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_da60
  %v4_daac = sext i16 %v3_daac to i32
  %v4_dabc = call i32 @function_82c8(i32* nonnull %stack_var_-1432, i32 %v4_daac, i32 %v2_d6d4)
  br label %dec_label_pc_d5b4

dec_label_pc_dac4:                                ; preds = %dec_label_pc_da10
  %v0_dac4 = load i32, i32* @r5, align 4
  %v1_dac4 = inttoptr i32 %v0_dac4 to i32*
  %v2_dac4 = load i32, i32* %v1_dac4, align 4
  %v1_dac8 = call i32 @function_11c54(i32 %v2_dac4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_dad0 = load i32, i32* @r5, align 4
  %v2_dad0 = inttoptr i32 %v1_dad0 to i32*
  store i32 -1, i32* %v2_dad0, align 4
  %v3_da48.pre = load i16, i16* %stack_var_-42, align 2
  br label %dec_label_pc_da2c

; uselistorder directives
  uselistorder i16 %v3_daac, { 1, 0 }
  uselistorder i32 %v5_da88, { 1, 0, 2, 3 }
  uselistorder i32 %v4_da7c, { 1, 0 }
  uselistorder i32 %v4_da4c, { 1, 0 }
  uselistorder i32 %v3_d850, { 1, 3, 2, 0 }
  uselistorder i32 %v4_d81c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_d804, { 1, 0 }
  uselistorder i32 %v2_d7ac, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_d6ec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_d6c4, { 1, 0, 2 }
  uselistorder i32 %v2_d6c0, { 2, 0, 1 }
  uselistorder i32 %v5_d6a8, { 1, 0 }
  uselistorder i32 %v2_d5f4, { 2, 1, 0 }
  uselistorder i32 %v1_d5e4, { 1, 2, 0 }
  uselistorder i32 %v1_d5c8, { 1, 2, 0 }
  uselistorder i32 %v2_d8d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_d8bc, { 2, 0, 4, 3, 1 }
  uselistorder i32 %v2_d8b4, { 1, 0 }
  uselistorder i32 %v2_d6d4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_d5b0, { 1, 0, 2 }
  uselistorder i32 %v2_d458, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_d444, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v2_d370, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i16* %stack_var_-42, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32 16386, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_1825c.88 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_1825c.88 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* inttoptr (i32 98436 to i32*), { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32)* @function_d270, { 1, 0 }
  uselistorder i32 (i32)* @function_c600, { 1, 0 }
  uselistorder i32 (i32)* @function_8560, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_dbd0, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_d088, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_d1ec.65 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_1a2e4.72 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_12510, { 1, 0 }
  uselistorder label %dec_label_pc_da2c, { 1, 0 }
  uselistorder label %dec_label_pc_d978, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_d6e8, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_d634, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d624, { 1, 0 }
  uselistorder label %dec_label_pc_d5b4, { 7, 1, 8, 2, 0, 9, 3, 10, 11, 4, 5, 12, 6, 13 }
  uselistorder label %dec_label_pc_d418, { 2, 0, 1 }
}

define i32 @function_daf4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_daf4:
  %cpsr_c.global-to-local = alloca i1, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v0_daf4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_daf4, label %bb, label %dec_label_pc_daf4..thread1_crit_edge

dec_label_pc_daf4..thread1_crit_edge:             ; preds = %dec_label_pc_daf4
  %v0_db00.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

bb:                                               ; preds = %dec_label_pc_daf4
  %v2_dafc = load i32, i32* @ip, align 4
  %v4_dafc = add i32 %arg2, -1
  %v5_dafc = shl i32 1, %v4_dafc
  %v6_dafc = and i32 %v2_dafc, %v5_dafc
  %v7_dafc = icmp ne i32 %v6_dafc, 0
  store i1 %v7_dafc, i1* %cpsr_c.global-to-local, align 1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_daf4..thread1_crit_edge, %bb
  %v0_db00 = phi i1 [ %v0_db00.pre, %dec_label_pc_daf4..thread1_crit_edge ], [ %v7_dafc, %bb ]
  call void @__pseudo_cond_branch(i1 %v0_db00, i32 -22313548)
  %v0_db08 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_db08, label %bb3, label %bb4

bb3:                                              ; preds = %.thread1
  %v1_db08 = load i32, i32* @r6, align 4
  store i32 %v1_db08, i32* %arg1, align 4
  br label %bb4

bb4:                                              ; preds = %.thread1, %bb3
  %v8_db08 = load i32, i32* @r0, align 4
  ret i32 %v8_db08

; uselistorder directives
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 1 }
  uselistorder label %bb4, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_db0c() local_unnamed_addr {
dec_label_pc_db0c:
  %v2_db18 = load i32, i32* @global_var_18260.95, align 4
  %v2_db1c = load i32, i32* @global_var_1826c.97, align 4
  %v4_db28 = mul i32 %v2_db18, 2048
  %v5_db28 = xor i32 %v4_db28, %v2_db18
  %v4_db2c = udiv i32 %v2_db1c, 524288
  %v5_db2c = xor i32 %v4_db2c, %v2_db1c
  %v2_db30 = load i32, i32* @global_var_18264.99, align 4
  %v2_db34 = load i32, i32* @global_var_18268.101, align 4
  store i32 %v2_db34, i32* @ip, align 4
  %v2_db38 = xor i32 %v5_db2c, %v5_db28
  %v4_db3c = udiv i32 %v5_db28, 256
  %v5_db3c = xor i32 %v2_db38, %v4_db3c
  store i32 %v2_db30, i32* @global_var_18260.95, align 4
  store i32 %v2_db34, i32* @global_var_18264.99, align 4
  store i32 %v2_db1c, i32* @global_var_18268.101, align 4
  store i32 %v5_db3c, i32* @global_var_1826c.97, align 4
  ret i32 %v5_db3c

; uselistorder directives
  uselistorder i32 %v2_db1c, { 2, 1, 0 }
  uselistorder i32 %v2_db18, { 1, 0 }
}

define i32 @function_db68(i32 %arg1) local_unnamed_addr {
dec_label_pc_db68:
  %v2_db74 = call i32 @function_118d4(i32* null)
  store i32 %v2_db74, i32* @r0, align 4
  store i32 %v2_db74, i32* @global_var_18260.95, align 4
  %v0_db80 = call i32 @function_118c0()
  store i32 %v0_db80, i32* @r0, align 4
  %v0_db88 = call i32 @function_11818()
  %v2_db90 = xor i32 %v0_db80, %v0_db88
  store i32 %v2_db90, i32* @global_var_18264.99, align 4
  %v1_db98 = call i32 @function_12098(i32 %v2_db90)
  %v2_db9c = load i32, i32* @global_var_18264.99, align 4
  %v2_dba8 = xor i32 %v2_db9c, %v1_db98
  store i32 %v2_dba8, i32* @global_var_1826c.97, align 4
  store i32 %v1_db98, i32* @global_var_18268.101, align 4
  ret i32 %v1_db98

; uselistorder directives
  uselistorder i32 %v1_db98, { 1, 2, 0 }
  uselistorder i32 ()* @function_11818, { 1, 0 }
}

define i32 @function_dbd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dbd0:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-63 = alloca i32, align 4
  %v3_dbd0 = load i32, i32* @r4, align 4
  %v6_dbd0 = load i32, i32* @r5, align 4
  %v9_dbd0 = load i32, i32* @r6, align 4
  %v12_dbd0 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_dbe4 = call i32 @function_10988(i32 41)
  %v3_dbf0 = call i32 @function_108c4(i32 41, i32* null)
  store i32 %v3_dbf0, i32* @r1, align 4
  %v2_dbfc = bitcast i32* %stack_var_-63 to i8*
  %v3_dbfc = call i32 @function_12190(i8* %v2_dbfc, i32 %v3_dbf0)
  %v2_dc00 = icmp eq i32 %arg2, 0
  br i1 %v2_dc00, label %dec_label_pc_dc7c, label %dec_label_pc_dc08

dec_label_pc_dc08:                                ; preds = %dec_label_pc_dbd0
  store i32 ptrtoint (i32* @global_var_18260.95 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18264.99 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18268.101 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1826c.97 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_dc60 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dc1c

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dc1c.dec_label_pc_dc1c_crit_edge, %dec_label_pc_dc08
  %v1_dc40 = phi i32 [ %v1_dc40.pre, %dec_label_pc_dc1c.dec_label_pc_dc1c_crit_edge ], [ ptrtoint (i32* @global_var_18260.95 to i32), %dec_label_pc_dc08 ]
  %v2_dc1c = load i32, i32* @global_var_1826c.97, align 4
  store i32 %v2_dc1c, i32* %r2.global-to-local, align 4
  %v2_dc20 = load i32, i32* @global_var_18260.95, align 4
  %v4_dc24 = udiv i32 %v2_dc1c, 524288
  %v5_dc24 = xor i32 %v4_dc24, %v2_dc1c
  %v4_dc28 = mul i32 %v2_dc20, 2048
  %v5_dc28 = xor i32 %v4_dc28, %v2_dc20
  %v2_dc2c = xor i32 %v5_dc24, %v5_dc28
  %v2_dc30 = load i32, i32* @global_var_18264.99, align 4
  %v2_dc34 = load i32, i32* @global_var_18268.101, align 4
  store i32 %v2_dc34, i32* %ip.global-to-local, align 4
  %v4_dc38 = udiv i32 %v5_dc28, 256
  %v5_dc38 = xor i32 %v2_dc2c, %v4_dc38
  store i32 %v5_dc38, i32* @r4, align 4
  %v2_dc40 = inttoptr i32 %v1_dc40 to i32*
  store i32 %v2_dc30, i32* %v2_dc40, align 4
  %v0_dc44 = load i32, i32* %ip.global-to-local, align 4
  %v1_dc44 = load i32, i32* %r8.global-to-local, align 4
  %v2_dc44 = inttoptr i32 %v1_dc44 to i32*
  store i32 %v0_dc44, i32* %v2_dc44, align 4
  %v0_dc48 = load i32, i32* %r2.global-to-local, align 4
  %v1_dc48 = load i32, i32* @r7, align 4
  %v2_dc48 = inttoptr i32 %v1_dc48 to i32*
  store i32 %v0_dc48, i32* %v2_dc48, align 4
  %v0_dc4c = load i32, i32* @r4, align 4
  %v1_dc4c = load i32, i32* @r6, align 4
  %v2_dc4c = inttoptr i32 %v1_dc4c to i32*
  store i32 %v0_dc4c, i32* %v2_dc4c, align 4
  %v2_dc50 = call i32 @function_11194(i8* %v2_dbfc)
  %v0_dc58 = load i32, i32* @r4, align 4
  %v2_dc5c = call i32 @function_117ec(i32 %v0_dc58, i32 %v2_dc50)
  %v2_dc64 = add i32 %v2_dc50, %v2_dc60
  %v1_dc68 = add i32 %v2_dc64, -23
  %v2_dc68 = inttoptr i32 %v1_dc68 to i8*
  %v3_dc68 = load i8, i8* %v2_dc68, align 1
  %v2_dc6c = load i32, i32* @r5, align 4
  %v3_dc6c = load i32, i32* %fp.global-to-local, align 4
  %v4_dc6c = add i32 %v3_dc6c, %v2_dc6c
  %v5_dc6c = inttoptr i32 %v4_dc6c to i8*
  store i8 %v3_dc68, i8* %v5_dc6c, align 1
  %v0_dc70 = load i32, i32* @r5, align 4
  %v1_dc70 = add i32 %v0_dc70, 1
  store i32 %v1_dc70, i32* @r5, align 4
  %v1_dc74 = load i32, i32* %sb.global-to-local, align 4
  %v9_dc74 = icmp eq i32 %v1_dc70, %v1_dc74
  br i1 %v9_dc74, label %dec_label_pc_dc7c, label %dec_label_pc_dc1c.dec_label_pc_dc1c_crit_edge

dec_label_pc_dc1c.dec_label_pc_dc1c_crit_edge:    ; preds = %dec_label_pc_dc1c
  %v1_dc40.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_dc1c

dec_label_pc_dc7c:                                ; preds = %dec_label_pc_dc1c, %dec_label_pc_dbd0
  %v1_dc80 = call i32 @function_108e8(i32 41)
  store i32 %v3_dbd0, i32* @r4, align 4
  store i32 %v6_dbd0, i32* @r5, align 4
  store i32 %v9_dbd0, i32* @r6, align 4
  store i32 %v12_dbd0, i32* @r7, align 4
  ret i32 %v1_dc80

; uselistorder directives
  uselistorder i32 %v2_dc20, { 1, 0 }
  uselistorder i32 %v2_dc1c, { 1, 0, 2 }
  uselistorder i32* @global_var_1826c.97, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_18268.101, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_18264.99, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_18260.95, { 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_dca0(i32 %arg1) local_unnamed_addr {
dec_label_pc_dca0:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dca0 = load i32, i32* @r4, align 4
  store i32 %v3_dca0, i32* %stack_var_-8, align 4
  %v0_dca4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_dca4, i32* @r4, align 4
  %v2_dca4 = icmp eq i32 %v0_dca4, 0
  br i1 %v2_dca4, label %dec_label_pc_dcc0, label %dec_label_pc_dcac

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dca0
  %v1_dcac = add i32 %v0_dca4, 4
  %v2_dcac = inttoptr i32 %v1_dcac to i32*
  %v3_dcac = load i32, i32* %v2_dcac, align 4
  store i32 %v3_dcac, i32* %r0.global-to-local, align 4
  store i32 56504, i32* @lr, align 4
  %v1_dcb4 = icmp ne i32 %v3_dcac, 0
  call void @__pseudo_cond_branch(i1 %v1_dcb4, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_dcb8 = load i32, i32* @r4, align 4
  store i32 %v0_dcb8, i32* @r0, align 4
  %v0_dcbc = call i32 @function_13718()
  store i32 %v0_dcbc, i32* %r0.global-to-local, align 4
  %v2_dcc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_dcc0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dca0, %dec_label_pc_dcac
  %v1_dcc4 = phi i32 [ 0, %dec_label_pc_dca0 ], [ %v0_dcbc, %dec_label_pc_dcac ]
  %v2_dcc0 = phi i32 [ %v3_dca0, %dec_label_pc_dca0 ], [ %v2_dcc0.pre, %dec_label_pc_dcac ]
  store i32 %v2_dcc0, i32* @r4, align 4
  ret i32 %v1_dcc4

; uselistorder directives
  uselistorder i32 %v0_dca4, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_dcc0, { 1, 0 }
}

define i32 @function_dcc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcc8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_dcc8 = load i32, i32* @r4, align 4
  %v9_dcc8 = load i32, i32* @r6, align 4
  %v12_dcc8 = load i32, i32* @r7, align 4
  %v15_dcc8 = load i32, i32* @r8, align 4
  %v18_dcc8 = load i32, i32* @sb, align 4
  %v21_dcc8 = load i32, i32* @sl, align 4
  %v24_dcc8 = load i32, i32* @fp, align 4
  %v27_dcc8 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_dce0 = call i32 @function_12fcc(i32 1, i32 8)
  store i32 %v2_dce0, i32* @fp, align 4
  %v0_dce8 = load i32, i32* @r5, align 4
  store i32 %v0_dce8, i32* %r0.global-to-local, align 4
  %v1_dcec = inttoptr i32 %v0_dce8 to i8*
  %v2_dcec = call i32 @function_11194(i8* %v1_dcec)
  %v2_dcf4 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_dcf4, i32* @sl, align 4
  %v2_dcf8 = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_dcf8, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_dd00 = add i32 %v2_dcec, 1
  store i32 %v1_dd00, i32* %r0.global-to-local, align 4
  %v2_dd04 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_dd04, i32* %r2.global-to-local, align 4
  store i32 %v2_dcf8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_dd00, i32* %r3.global-to-local, align 4
  %v2_dd40146 = icmp eq i32 %v1_dd00, 0
  store i1 %v2_dd40146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_dd48147 = add i32 %v2_dd04, -1
  store i32 %v1_dd48147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_dd00, 1
  br i1 %tmp116148, label %dec_label_pc_dd50, label %dec_label_pc_dd14

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dcc8, %bb115
  %v0_dd14151 = phi i32 [ %v1_dd34, %bb115 ], [ 0, %dec_label_pc_dcc8 ]
  %v1_dd20150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %dec_label_pc_dcc8 ]
  %v2_dd54149 = phi i32 [ %v1_dd38, %bb115 ], [ %v2_dd04, %dec_label_pc_dcc8 ]
  %v1_dd14 = load i32, i32* @r5, align 4
  %v2_dd14 = add i32 %v1_dd14, %v0_dd14151
  %v3_dd14 = inttoptr i32 %v2_dd14 to i8*
  %v4_dd14 = load i8, i8* %v3_dd14, align 1
  %v6_dd14 = zext i8 %v4_dd14 to i32
  store i32 %v6_dd14, i32* %r3.global-to-local, align 4
  %v2_dd18 = icmp eq i8 %v4_dd14, 0
  store i1 %v2_dd18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dd18, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_dd14
  %v8_dd1c = icmp eq i8 %v4_dd14, 46
  store i1 %v8_dd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_dd1c, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_dd14, %bb
  %v3_dd20 = load i32, i32* %r6.global-to-local, align 4
  %v4_dd20 = inttoptr i32 %v3_dd20 to i8*
  store i8 %v1_dd20150.off0, i8* %v4_dd20, align 1
  %v0_dd24.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd24.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_dd24.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_dd24.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_dd24.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_dd24 = phi i32 [ %v3_dd24.pre, %.thread..thread7_crit_edge ], [ %v2_dd54149, %bb ]
  %v1_dd24.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_dd14, %bb ]
  %v4_dd24 = add i32 %v3_dd24, -1
  %v5_dd24 = inttoptr i32 %v4_dd24 to i8*
  store i8 %v1_dd24.off0, i8* %v5_dd24, align 1
  %v0_dd28.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dd28.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_dd28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_dd28, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_dd2811 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_dd2811, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_dd30 = load i32, i32* @lr, align 4
  %v2_dd30 = urem i32 %v1_dd30, 256
  store i32 %v2_dd30, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_dd4433 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_dd30, %.thread12 ]
  %v0_dd34 = load i32, i32* %ip.global-to-local, align 4
  %v1_dd34 = add i32 %v0_dd34, 1
  store i32 %v1_dd34, i32* %ip.global-to-local, align 4
  %v0_dd38 = load i32, i32* %r2.global-to-local, align 4
  %v1_dd38 = add i32 %v0_dd38, 1
  store i32 %v1_dd38, i32* %r2.global-to-local, align 4
  %v1_dd3c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_dd3c = sub i32 %v1_dd3c.pre, %v1_dd34
  store i32 %v2_dd3c, i32* %r3.global-to-local, align 4
  %v2_dd40 = icmp eq i32 %v2_dd3c, 0
  store i1 %v2_dd40, i1* %cpsr_z.global-to-local, align 1
  %v1_dd44 = add nuw nsw i32 %v0_dd4433, 1
  store i32 %v1_dd44, i32* @lr, align 4
  store i32 %v0_dd38, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_dd3c, 1
  %extract.t152 = trunc i32 %v0_dd4433 to i8
  br i1 %tmp116, label %dec_label_pc_dd50, label %dec_label_pc_dd14

dec_label_pc_dd50:                                ; preds = %bb115, %dec_label_pc_dcc8
  %v1_dd48.lcssa = phi i32 [ %v1_dd48147, %dec_label_pc_dcc8 ], [ %v0_dd38, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_dd54 = inttoptr i32 %v1_dd48.lcssa to i8*
  store i8 0, i8* %v4_dd54, align 1
  store i32 %v2_dcf8, i32* %r0.global-to-local, align 4
  %v1_dd5c = bitcast i32* %stack_var_-2232 to i8*
  %v2_dd5c = call i32 @function_11194(i8* %v1_dd5c)
  %v2_dd60 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_dd60, i32* %r1.global-to-local, align 4
  %v1_dd64 = load i32, i32* @sb, align 4
  %v2_dd64 = add i32 %v1_dd64, %v2_dd5c
  store i32 %v2_dd64, i32* @r5, align 4
  %v0_dd6c = load i32, i32* @r4, align 4
  store i32 %v0_dd6c, i32* %stack_var_-68, align 4
  store i32 %v2_dcf8, i32* %r0.global-to-local, align 4
  %v2_dd7c = call i32 @function_11194(i8* %v1_dd5c)
  %v1_dd80 = add i32 %v2_dd7c, 17
  store i32 %v1_dd80, i32* %r0.global-to-local, align 4
  %v0_dd88 = call i32 @function_db0c()
  %v1_dd88 = sext i32 %v0_dd88 to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_dd94 = mul nuw nsw i64 %v1_dd88, 2147516417
  %v6_dd94 = udiv i64 %v5_dd94, 4294967296
  %v7_dd94 = trunc i64 %v6_dd94 to i32
  %v8_dd94 = trunc i64 %v5_dd94 to i32
  store i32 %v8_dd94, i32* @lr, align 4
  store i32 %v7_dd94, i32* %r2.global-to-local, align 4
  %v5_dd984 = udiv i64 %v5_dd94, 140737488355328
  %v5_dd98 = trunc i64 %v5_dd984 to i32
  %v6_dd98 = add i32 %v5_dd98, %v0_dd88
  store i32 16, i32* @r1, align 4
  %v6_dda4 = urem i32 %v6_dd98, 65536
  store i32 %v6_dda4, i32* %ip.global-to-local, align 4
  %v2_ddac = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_ddac, i32* @r0, align 4
  %v5_ddb0 = trunc i32 %v6_dd98 to i16
  %v0_ddb4 = call i32 @function_11228()
  store i32 %v0_ddb4, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_dde4 = load i32, i32* @r5, align 4
  %v1_dde4 = add i32 %v0_dde4, 1
  store i32 %v1_dde4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_ddb0, i16* %stack_var_-2244, align 2
  %v4_ddf8 = inttoptr i32 %v1_dde4 to i16*
  store i16 256, i16* %v4_ddf8, align 2
  %v0_ddfc = load i32, i32* %r3.global-to-local, align 4
  %v1_ddfc = trunc i32 %v0_ddfc to i16
  %v2_ddfc = load i32, i32* %r2.global-to-local, align 4
  %v3_ddfc = add i32 %v2_ddfc, 2
  %v4_ddfc = inttoptr i32 %v3_ddfc to i16*
  store i16 %v1_ddfc, i16* %v4_ddfc, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_de94 = ptrtoint i32* %stack_var_-196 to i32
  %v2_debc = ptrtoint i32* %stack_var_-40 to i32
  %v2_dee8 = ptrtoint i32* %stack_var_-52 to i32
  %v2_df2c = ptrtoint i16* %stack_var_-4292 to i32
  %v2_dfc0 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_dfc8 = bitcast i32* %stack_var_-4280 to i8*
  %v4_dfec = zext i16 %tmp79 to i32
  %v2_dff0 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_de08

dec_label_pc_de08:                                ; preds = %dec_label_pc_df74, %dec_label_pc_dd50
  %v1_de0c = phi i32 [ -1, %dec_label_pc_dd50 ], [ %v0_de08.pre, %dec_label_pc_df74 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_dd50 ], [ %v1_df74, %dec_label_pc_df74 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_de08 = icmp eq i32 %v1_de0c, -1
  store i1 %v7_de08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_de08, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_de08
  store i32 %v1_de0c, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_de08, %bb117
  store i32 56852, i32* @lr, align 4
  %v1_de10 = xor i1 %v7_de08, true
  call void @__pseudo_cond_branch(i1 %v1_de10, i32 ptrtoint (i32* @global_var_11c54.90 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_de20 = call i32 @function_12464(i32 2, i32 2, i32 0)
  store i32 %v3_de20, i32* %r0.global-to-local, align 4
  %v7_de24 = icmp eq i32 %v3_de20, -1
  store i1 %v7_de24, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_de20, i32* @r6, align 4
  br i1 %v7_de24, label %dec_label_pc_dfb4, label %dec_label_pc_de30

dec_label_pc_de30:                                ; preds = %bb118
  store i32 %v2_ddac, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_de3c = call i32 @function_1224c(i32 %v3_de20, i32 %v2_ddac, i32 16)
  store i32 %v3_de3c, i32* %r0.global-to-local, align 4
  %v7_de40 = icmp eq i32 %v3_de3c, -1
  store i1 %v7_de40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_de40, label %dec_label_pc_df7c, label %dec_label_pc_de48

dec_label_pc_de48:                                ; preds = %dec_label_pc_de30
  %v0_de48 = load i32, i32* @r6, align 4
  store i32 %v0_de48, i32* %r0.global-to-local, align 4
  store i32 %v2_dcf4, i32* %r1.global-to-local, align 4
  store i32 %v1_dd80, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_de58 = call i32 @function_123a8(i32 %v0_de48, i32 %v2_dcf4, i32 %v1_dd80, i32 16384)
  store i32 %v4_de58, i32* %r0.global-to-local, align 4
  %v7_de5c = icmp eq i32 %v4_de58, -1
  store i1 %v7_de5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_de5c, label %dec_label_pc_df7c, label %dec_label_pc_de64

dec_label_pc_de64:                                ; preds = %dec_label_pc_de48
  %v0_de64 = load i32, i32* @r6, align 4
  store i32 %v0_de64, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_de70 = call i32 @function_11a88(i32 3, i32 %v0_de64)
  %v0_de74 = load i32, i32* @r6, align 4
  store i32 %v0_de74, i32* %r1.global-to-local, align 4
  %v1_de78 = or i32 %v2_de70, 2048
  store i32 %v1_de78, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_de80 = call i32 @function_11a88(i32 4, i32 %v0_de74)
  store i32 %v2_de80, i32* %r0.global-to-local, align 4
  store i32 %v2_dd60, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_de94, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_de9c

dec_label_pc_de9c:                                ; preds = %dec_label_pc_de9c, %dec_label_pc_de64
  %v1_dea0 = phi i32 [ %v1_dea4, %dec_label_pc_de9c ], [ 4, %dec_label_pc_de64 ]
  store i32 0, i32* @r4, align 4
  %v3_dea0 = add i32 %v1_dea0, %v2_de94
  %v4_dea0 = inttoptr i32 %v3_dea0 to i32*
  store i32 0, i32* %v4_dea0, align 4
  %v0_dea4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dea4 = add i32 %v0_dea4, 4
  store i32 %v1_dea4, i32* %r3.global-to-local, align 4
  %v7_dea8 = icmp eq i32 %v1_dea4, 128
  br i1 %v7_dea8, label %dec_label_pc_deb0, label %dec_label_pc_de9c

dec_label_pc_deb0:                                ; preds = %dec_label_pc_de9c
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_deb0 = load i32, i32* @r6, align 4
  %v3_deb0 = udiv i32 %v0_deb0, 32
  %v3_deb8 = mul nuw nsw i32 %v3_deb0, 4
  store i32 %v3_deb8, i32* %r3.global-to-local, align 4
  %v2_dec0 = add i32 %v3_deb8, %v2_debc
  store i32 %v2_dec0, i32* @r5, align 4
  %v1_dec4 = add i32 %v2_dec0, -156
  %v2_dec4 = inttoptr i32 %v1_dec4 to i32*
  %v3_dec4 = load i32, i32* %v2_dec4, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_decc = urem i32 %v0_deb0, 32
  store i32 %v1_decc, i32* @r7, align 4
  %v7_ded0 = shl i32 1, %v1_decc
  %v8_ded0 = or i32 %v3_dec4, %v7_ded0
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_ded0, i32* %v2_dec4, align 4
  %v0_dee0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_dee0, i32* %stack_var_-52, align 4
  store i32 %v2_dee8, i32* @lr, align 4
  store i32 %v2_dd60, i32* @ip, align 4
  %v0_def0 = load i32, i32* @r6, align 4
  %v1_def0 = load i32, i32* %r3.global-to-local, align 4
  %v2_def0 = add i32 %v1_def0, %v0_def0
  store i32 %v2_def0, i32* %r0.global-to-local, align 4
  %v0_def8 = load i32, i32* @r4, align 4
  store i32 %v0_def8, i32* %r2.global-to-local, align 4
  store i32 %v0_def8, i32* %r3.global-to-local, align 4
  %v5_df04 = call i32 @function_11978(i32 %v2_def0, i32 %v2_de94, i32 %v0_def8, i32 %v0_def8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_df04, i32* %r0.global-to-local, align 4
  %v7_df08 = icmp eq i32 %v5_df04, -1
  store i1 %v7_df08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_df08, label %dec_label_pc_df8c, label %dec_label_pc_df10

dec_label_pc_df10:                                ; preds = %dec_label_pc_deb0
  %v1_df10 = load i32, i32* @r4, align 4
  %v9_df10 = icmp eq i32 %v5_df04, %v1_df10
  store i1 %v9_df10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_df10, label %dec_label_pc_df6c, label %dec_label_pc_df18

dec_label_pc_df18:                                ; preds = %dec_label_pc_df10
  %v0_df18 = load i32, i32* @r5, align 4
  %v1_df18 = add i32 %v0_df18, -156
  %v2_df18 = inttoptr i32 %v1_df18 to i32*
  %v3_df18 = load i32, i32* %v2_df18, align 4
  %v1_df1c = load i32, i32* @r7, align 4
  %v6_df1c = ashr i32 %v3_df18, %v1_df1c
  store i32 %v6_df1c, i32* %r3.global-to-local, align 4
  %v1_df20 = urem i32 %v6_df1c, 2
  %v2_df20 = icmp eq i32 %v1_df20, 0
  store i1 %v2_df20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_df20, label %dec_label_pc_df8c, label %dec_label_pc_df28

dec_label_pc_df28:                                ; preds = %dec_label_pc_df18
  store i32 %v2_df2c, i32* @r5, align 4
  store i32 %v2_df2c, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_df3c = load i32, i32* @r6, align 4
  store i32 %v0_df3c, i32* %r0.global-to-local, align 4
  %v6_df48 = call i32 @function_1236c(i32 %v0_df3c, i32 %v2_df2c, i32 2048, i32 16384, i32 %v1_df10, i32 %v1_df10)
  store i32 %v6_df48, i32* %r4.global-to-local, align 4
  %v0_df50 = load i32, i32* @sb, align 4
  store i32 %v0_df50, i32* %r0.global-to-local, align 4
  %v1_df54 = inttoptr i32 %v0_df50 to i8*
  %v2_df54 = call i32 @function_11194(i8* %v1_df54)
  %v1_df58 = add i32 %v2_df54, 17
  store i32 %v1_df58, i32* %r0.global-to-local, align 4
  %v0_df5c = load i32, i32* %r4.global-to-local, align 4
  %v3_df5c = icmp ult i32 %v0_df5c, %v1_df58
  %v9_df5c = icmp eq i32 %v0_df5c, %v1_df58
  store i1 %v9_df5c, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_df5c, label %dec_label_pc_df6c, label %dec_label_pc_dfc0

dec_label_pc_df6c:                                ; preds = %dec_label_pc_df28, %dec_label_pc_dfc0, %dec_label_pc_dfec, %dec_label_pc_df10, %dec_label_pc_dfb4
  %v0_df6c = load i32, i32* @r8, align 4
  %v7_df6c = icmp eq i32 %v0_df6c, 5
  store i1 %v7_df6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_df6c, label %dec_label_pc_df8c, label %dec_label_pc_df74

dec_label_pc_df74:                                ; preds = %dec_label_pc_df7c, %dec_label_pc_df6c
  %v0_df74 = phi i32 [ %v0_df84, %dec_label_pc_df7c ], [ %v0_df6c, %dec_label_pc_df6c ]
  %v1_df74 = add i32 %v0_df74, 1
  %v0_de08.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_de08

dec_label_pc_df7c:                                ; preds = %dec_label_pc_de48, %dec_label_pc_de30
  %v0_df7c = phi i32 [ %v4_de58, %dec_label_pc_de48 ], [ %v3_de3c, %dec_label_pc_de30 ]
  %v1_df7c = add i32 %v0_df7c, 2
  store i32 %v1_df7c, i32* %r0.global-to-local, align 4
  %v1_df80 = call i32 @function_13d70(i32 %v1_df7c)
  store i32 %v1_df80, i32* %r0.global-to-local, align 4
  %v0_df84 = load i32, i32* @r8, align 4
  %v7_df84 = icmp eq i32 %v0_df84, 5
  store i1 %v7_df84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_df84, label %dec_label_pc_df8c, label %dec_label_pc_df74

dec_label_pc_df8c:                                ; preds = %dec_label_pc_df7c, %dec_label_pc_df6c, %dec_label_pc_df18, %dec_label_pc_deb0, %dec_label_pc_dff8, %dec_label_pc_e004.backedge
  %v0_df8c = load i32, i32* @r6, align 4
  store i32 %v0_df8c, i32* %r0.global-to-local, align 4
  %v1_df90 = call i32 @function_11c54(i32 %v0_df8c)
  store i32 %v1_df90, i32* %r0.global-to-local, align 4
  %v0_df94 = load i32, i32* @fp, align 4
  %v1_df94 = inttoptr i32 %v0_df94 to i8*
  %v2_df94 = load i8, i8* %v1_df94, align 1
  %v3_df94 = zext i8 %v2_df94 to i32
  store i32 %v3_df94, i32* @r4, align 4
  %v2_df98 = icmp eq i8 %v2_df94, 0
  store i1 %v2_df98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_df98, label %dec_label_pc_e0dc, label %dec_label_pc_dfa0

dec_label_pc_dfa0:                                ; preds = %dec_label_pc_df8c, %dec_label_pc_e0dc
  %v0_dfa0 = phi i32 [ %v0_df94, %dec_label_pc_df8c ], [ %v0_e0f0, %dec_label_pc_e0dc ]
  store i32 %v0_dfa0, i32* %r0.global-to-local, align 4
  store i32 %v3_dcc8, i32* @r4, align 4
  store i32 %v9_dcc8, i32* @r6, align 4
  store i32 %v12_dcc8, i32* @r7, align 4
  store i32 %v15_dcc8, i32* @r8, align 4
  store i32 %v18_dcc8, i32* @sb, align 4
  store i32 %v21_dcc8, i32* @sl, align 4
  store i32 %v24_dcc8, i32* @fp, align 4
  store i32 %v27_dcc8, i32* @lr, align 4
  ret i32 %v0_dfa0

dec_label_pc_dfb4:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_dfb8 = call i32 @function_13d70(i32 1)
  store i32 %v1_dfb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_df6c

dec_label_pc_dfc0:                                ; preds = %dec_label_pc_df28
  store i32 %v2_dfc0, i32* @sb, align 4
  store i32 %v2_dfc0, i32* %r0.global-to-local, align 4
  %v2_dfc8 = call i32 @function_11194(i8* %v1_dfc8)
  %v4_dfd4 = load i16, i16* %stack_var_-4292, align 2
  %v5_dfd4 = sext i16 %v4_dfd4 to i32
  store i32 %v5_dfd4, i32* %r3.global-to-local, align 4
  store i32 %v6_dd98, i32* %r1.global-to-local, align 4
  %v1_dfdc = load i32, i32* @sb, align 4
  %v9_dfe0 = icmp eq i16 %v4_dfd4, %v5_ddb0
  store i1 %v9_dfe0, i1* %cpsr_z.global-to-local, align 1
  %v2_dfdc = add i32 %v2_dfc8, 5
  %v1_dfe4 = add i32 %v2_dfdc, %v1_dfdc
  store i32 %v1_dfe4, i32* %r0.global-to-local, align 4
  br i1 %v9_dfe0, label %dec_label_pc_dfec, label %dec_label_pc_df6c

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfc0
  store i32 %v4_dfec, i32* %r3.global-to-local, align 4
  store i1 %v2_dff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_dff0, label %dec_label_pc_df6c, label %dec_label_pc_dff8

dec_label_pc_dff8:                                ; preds = %dec_label_pc_dfec
  %div = udiv i16 %tmp79, 256
  %v3_dff8 = zext i16 %div to i32
  store i32 %v3_dff8, i32* %r2.global-to-local, align 4
  %v1_dffc = mul nuw nsw i32 %v4_dfec, 256
  %v4_e000 = and i32 %v1_dffc, 65280
  %v5_e000 = or i32 %v4_e000, %v3_dff8
  %v1_e004134 = add nsw i32 %v5_e000, -1
  %v3_e008135 = mul i32 %v1_e004134, 65536
  store i32 %v3_e008135, i32* %r3.global-to-local, align 4
  %v7_e00c141 = icmp eq i32 %v3_e008135, -65536
  store i1 %v7_e00c141, i1* %cpsr_z.global-to-local, align 1
  %v3_e010142 = urem i32 %v1_e004134, 65536
  store i32 %v3_e010142, i32* @r8, align 4
  br i1 %v7_e00c141, label %dec_label_pc_df8c, label %dec_label_pc_e018

dec_label_pc_e018:                                ; preds = %dec_label_pc_dff8, %dec_label_pc_e004.backedge
  %v3_e010144 = phi i32 [ %v3_e010, %dec_label_pc_e004.backedge ], [ %v3_e010142, %dec_label_pc_dff8 ]
  %v0_e068143 = phi i32 [ %storemerge29, %dec_label_pc_e004.backedge ], [ %v1_dfe4, %dec_label_pc_dff8 ]
  store i32 %v0_e068143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* @ip, align 4
  %v1_e02418 = inttoptr i32 %v0_e068143 to i8*
  %v2_e02419 = load i8, i8* %v1_e02418, align 1
  %v3_e02420 = zext i8 %v2_e02419 to i32
  store i32 %v3_e02420, i32* %r2.global-to-local, align 4
  %v2_e02821 = icmp eq i8 %v2_e02419, 0
  store i1 %v2_e02821, i1* %cpsr_z.global-to-local, align 1
  %v3_e02c22 = mul nuw nsw i32 %v3_e02420, 256
  store i32 %v3_e02c22, i32* %r1.global-to-local, align 4
  br i1 %v2_e02821, label %dec_label_pc_e060, label %dec_label_pc_e034.preheader

dec_label_pc_e034.preheader:                      ; preds = %dec_label_pc_e018, %dec_label_pc_e024.backedge
  %v1_e100 = phi i32 [ %v1_e10050, %dec_label_pc_e024.backedge ], [ 1, %dec_label_pc_e018 ]
  %v0_e0f848 = phi i32 [ %v0_e0f8, %dec_label_pc_e024.backedge ], [ 0, %dec_label_pc_e018 ]
  %v0_e04046 = phi i32 [ %v3_e02c, %dec_label_pc_e024.backedge ], [ %v3_e02c22, %dec_label_pc_e018 ]
  %v0_e03c44 = phi i32 [ %v1_e0fc, %dec_label_pc_e024.backedge ], [ %v0_e068143, %dec_label_pc_e018 ]
  %v0_e03442 = phi i32 [ %v3_e024, %dec_label_pc_e024.backedge ], [ %v3_e02420, %dec_label_pc_e018 ]
  br label %dec_label_pc_e034

dec_label_pc_e034:                                ; preds = %dec_label_pc_e034.preheader, %dec_label_pc_e03c
  %v0_e0f8 = phi i32 [ %v0_e0f848, %dec_label_pc_e034.preheader ], [ 1, %dec_label_pc_e03c ]
  %v0_e040 = phi i32 [ %v0_e04046, %dec_label_pc_e034.preheader ], [ %v3_e058, %dec_label_pc_e03c ]
  %v0_e0fc = phi i32 [ %v0_e03c44, %dec_label_pc_e034.preheader ], [ %v2_e048, %dec_label_pc_e03c ]
  %v0_e034 = phi i32 [ %v0_e03442, %dec_label_pc_e034.preheader ], [ %v3_e04c, %dec_label_pc_e03c ]
  %v7_e034 = icmp eq i32 %v0_e034, 191
  store i1 %v7_e034, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_e034, 192
  br i1 %tmp, label %dec_label_pc_e0f8, label %dec_label_pc_e03c

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e034
  %v1_e03c = add i32 %v0_e0fc, 1
  %v2_e03c = inttoptr i32 %v1_e03c to i8*
  %v3_e03c = load i8, i8* %v2_e03c, align 1
  %v4_e03c = zext i8 %v3_e03c to i32
  %v2_e040 = or i32 %v4_e03c, -49152
  %v0_e048 = load i32, i32* @r5, align 4
  %v1_e044 = add i32 %v0_e048, %v0_e040
  %v2_e048 = add i32 %v1_e044, %v2_e040
  store i32 %v2_e048, i32* %r3.global-to-local, align 4
  %v1_e04c = inttoptr i32 %v2_e048 to i8*
  %v2_e04c = load i8, i8* %v1_e04c, align 1
  %v3_e04c = zext i8 %v2_e04c to i32
  store i32 %v3_e04c, i32* %r2.global-to-local, align 4
  %v2_e050 = icmp eq i8 %v2_e04c, 0
  store i1 %v2_e050, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_e058 = mul nuw nsw i32 %v3_e04c, 256
  store i32 %v3_e058, i32* %r1.global-to-local, align 4
  br i1 %v2_e050, label %dec_label_pc_e060, label %dec_label_pc_e034

dec_label_pc_e060:                                ; preds = %dec_label_pc_e024.backedge, %dec_label_pc_e03c, %dec_label_pc_e018
  %v1_e064 = phi i32 [ 1, %dec_label_pc_e018 ], [ %v1_e100, %dec_label_pc_e03c ], [ %v1_e10050, %dec_label_pc_e024.backedge ]
  %v0_e060 = phi i32 [ 0, %dec_label_pc_e018 ], [ 1, %dec_label_pc_e03c ], [ %v0_e0f8, %dec_label_pc_e024.backedge ]
  %v7_e060 = icmp eq i32 %v0_e060, 1
  store i1 %v7_e060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e060, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_e060
  %v2_e064 = add i32 %v1_e064, 1
  store i32 %v2_e064, i32* @ip, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_e060, %bb119
  %v1_e068 = phi i32 [ %v1_e064, %dec_label_pc_e060 ], [ %v2_e064, %bb119 ]
  %v2_e068 = add i32 %v1_e068, %v0_e068143
  store i32 %v2_e068, i32* @r4, align 4
  %v3_e06c = inttoptr i32 %v2_e068 to i8*
  %v4_e06c = load i8, i8* %v3_e06c, align 1
  %v6_e06c = zext i8 %v4_e06c to i32
  store i32 %v6_e06c, i32* %r3.global-to-local, align 4
  %v1_e070 = add i32 %v2_e068, 1
  %v2_e070 = inttoptr i32 %v1_e070 to i8*
  %v3_e070 = load i8, i8* %v2_e070, align 1
  %v4_e070 = zext i8 %v3_e070 to i32
  store i32 %v4_e070, i32* %r2.global-to-local, align 4
  %v4_e074 = mul nuw nsw i32 %v4_e070, 256
  %v5_e074 = or i32 %v4_e074, %v6_e06c
  store i32 %v5_e074, i32* %r3.global-to-local, align 4
  %v7_e078 = icmp eq i32 %v5_e074, 256
  store i1 %v7_e078, i1* %cpsr_z.global-to-local, align 1
  %v1_e07c = add i32 %v2_e068, 10
  store i32 %v1_e07c, i32* @r7, align 4
  br i1 %v7_e078, label %dec_label_pc_e118, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %dec_label_pc_e118, %bb120
  store i32 %v1_e07c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e09024 = inttoptr i32 %v1_e07c to i8*
  %v2_e09025 = load i8, i8* %v1_e09024, align 1
  %v3_e09026 = zext i8 %v2_e09025 to i32
  store i32 %v3_e09026, i32* %r2.global-to-local, align 4
  %v2_e09427 = icmp eq i8 %v2_e09025, 0
  store i1 %v2_e09427, i1* %cpsr_z.global-to-local, align 1
  %v3_e09828 = mul nuw nsw i32 %v3_e09026, 256
  store i32 %v3_e09828, i32* %r1.global-to-local, align 4
  br i1 %v2_e09427, label %dec_label_pc_e0cc, label %dec_label_pc_e0a0.preheader

dec_label_pc_e0a0.preheader:                      ; preds = %dec_label_pc_e084, %dec_label_pc_e090.backedge
  %v1_e110 = phi i32 [ %v1_e11065, %dec_label_pc_e090.backedge ], [ 1, %dec_label_pc_e084 ]
  %v0_e10863 = phi i32 [ %v0_e108, %dec_label_pc_e090.backedge ], [ 0, %dec_label_pc_e084 ]
  %v0_e0ac61 = phi i32 [ %v3_e098, %dec_label_pc_e090.backedge ], [ %v3_e09828, %dec_label_pc_e084 ]
  %v0_e0a859 = phi i32 [ %v1_e10c, %dec_label_pc_e090.backedge ], [ %v1_e07c, %dec_label_pc_e084 ]
  %v0_e0a057 = phi i32 [ %v3_e090, %dec_label_pc_e090.backedge ], [ %v3_e09026, %dec_label_pc_e084 ]
  br label %dec_label_pc_e0a0

dec_label_pc_e0a0:                                ; preds = %dec_label_pc_e0a0.preheader, %dec_label_pc_e0a8
  %v0_e108 = phi i32 [ %v0_e10863, %dec_label_pc_e0a0.preheader ], [ 1, %dec_label_pc_e0a8 ]
  %v0_e0ac = phi i32 [ %v0_e0ac61, %dec_label_pc_e0a0.preheader ], [ %v3_e0c4, %dec_label_pc_e0a8 ]
  %v0_e10c = phi i32 [ %v0_e0a859, %dec_label_pc_e0a0.preheader ], [ %v2_e0b4, %dec_label_pc_e0a8 ]
  %v0_e0a0 = phi i32 [ %v0_e0a057, %dec_label_pc_e0a0.preheader ], [ %v3_e0b8, %dec_label_pc_e0a8 ]
  %v7_e0a0 = icmp eq i32 %v0_e0a0, 191
  store i1 %v7_e0a0, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_e0a0, 192
  br i1 %tmp159, label %dec_label_pc_e108, label %dec_label_pc_e0a8

dec_label_pc_e0a8:                                ; preds = %dec_label_pc_e0a0
  %v1_e0a8 = add i32 %v0_e10c, 1
  %v2_e0a8 = inttoptr i32 %v1_e0a8 to i8*
  %v3_e0a8 = load i8, i8* %v2_e0a8, align 1
  %v4_e0a8 = zext i8 %v3_e0a8 to i32
  %v2_e0ac = or i32 %v4_e0a8, -49152
  %v0_e0b4 = load i32, i32* @r5, align 4
  %v1_e0b0 = add i32 %v0_e0b4, %v0_e0ac
  %v2_e0b4 = add i32 %v1_e0b0, %v2_e0ac
  store i32 %v2_e0b4, i32* %r3.global-to-local, align 4
  %v1_e0b8 = inttoptr i32 %v2_e0b4 to i8*
  %v2_e0b8 = load i8, i8* %v1_e0b8, align 1
  %v3_e0b8 = zext i8 %v2_e0b8 to i32
  store i32 %v3_e0b8, i32* %r2.global-to-local, align 4
  %v2_e0bc = icmp eq i8 %v2_e0b8, 0
  store i1 %v2_e0bc, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @ip, align 4
  %v3_e0c4 = mul nuw nsw i32 %v3_e0b8, 256
  store i32 %v3_e0c4, i32* %r1.global-to-local, align 4
  br i1 %v2_e0bc, label %dec_label_pc_e0cc, label %dec_label_pc_e0a0

dec_label_pc_e0cc:                                ; preds = %dec_label_pc_e090.backedge, %dec_label_pc_e0a8, %dec_label_pc_e084
  %v1_e0d0 = phi i32 [ 1, %dec_label_pc_e084 ], [ %v1_e110, %dec_label_pc_e0a8 ], [ %v1_e11065, %dec_label_pc_e090.backedge ]
  %v0_e0cc = phi i32 [ 0, %dec_label_pc_e084 ], [ 1, %dec_label_pc_e0a8 ], [ %v0_e108, %dec_label_pc_e090.backedge ]
  %v7_e0cc = icmp eq i32 %v0_e0cc, 1
  store i1 %v7_e0cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e0cc, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_e0cc
  %v2_e0d0 = add i32 %v1_e0d0, 1
  store i32 %v2_e0d0, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_e12c, %dec_label_pc_e0cc, %bb121
  %v1_e0d4 = phi i32 [ %v5_e144, %dec_label_pc_e12c ], [ %v1_e0d0, %dec_label_pc_e0cc ], [ %v2_e0d0, %bb121 ]
  %v2_e0d4 = add i32 %v1_e0d4, %v1_e07c
  br label %dec_label_pc_e004.backedge

dec_label_pc_e004.backedge:                       ; preds = %bb122, %dec_label_pc_e150
  %v0_e004.pre = phi i32 [ %v3_e010144, %bb122 ], [ %v0_e004.pre.pre, %dec_label_pc_e150 ]
  %storemerge29 = phi i32 [ %v2_e0d4, %bb122 ], [ %v2_e1c8, %dec_label_pc_e150 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_e004 = add i32 %v0_e004.pre, -1
  %v3_e008 = mul i32 %v1_e004, 65536
  store i32 %v3_e008, i32* %r3.global-to-local, align 4
  %v7_e00c = icmp eq i32 %v3_e008, -65536
  store i1 %v7_e00c, i1* %cpsr_z.global-to-local, align 1
  %v3_e010 = urem i32 %v1_e004, 65536
  store i32 %v3_e010, i32* @r8, align 4
  br i1 %v7_e00c, label %dec_label_pc_df8c, label %dec_label_pc_e018

dec_label_pc_e0dc:                                ; preds = %dec_label_pc_df8c
  %v1_e0dc = add i32 %v0_df94, 4
  %v2_e0dc = inttoptr i32 %v1_e0dc to i32*
  %v3_e0dc = load i32, i32* %v2_e0dc, align 4
  store i32 %v3_e0dc, i32* %r0.global-to-local, align 4
  %v2_e0e0 = icmp eq i32 %v3_e0dc, 0
  store i1 %v2_e0e0, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_e0e8.110 to i32), i32* @lr, align 4
  %v1_e0e4 = xor i1 %v2_e0e0, true
  call void @__pseudo_cond_branch(i1 %v1_e0e4, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_e0e8 = load i32, i32* @fp, align 4
  store i32 %v0_e0e8, i32* @r0, align 4
  %v0_e0ec = call i32 @function_13718()
  store i32 %v0_e0ec, i32* %r0.global-to-local, align 4
  %v0_e0f0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_dfa0

dec_label_pc_e0f8:                                ; preds = %dec_label_pc_e034
  %v2_e0f8 = icmp eq i32 %v0_e0f8, 0
  store i1 %v2_e0f8, i1* %cpsr_z.global-to-local, align 1
  %v1_e0fc = add i32 %v0_e0fc, 1
  store i32 %v1_e0fc, i32* %r3.global-to-local, align 4
  br i1 %v2_e0f8, label %bb123, label %dec_label_pc_e024.backedge

dec_label_pc_e024.backedge:                       ; preds = %dec_label_pc_e0f8, %bb123
  %v1_e10050 = phi i32 [ %v1_e100, %dec_label_pc_e0f8 ], [ %v2_e100, %bb123 ]
  %v1_e024 = inttoptr i32 %v1_e0fc to i8*
  %v2_e024 = load i8, i8* %v1_e024, align 1
  %v3_e024 = zext i8 %v2_e024 to i32
  store i32 %v3_e024, i32* %r2.global-to-local, align 4
  %v2_e028 = icmp eq i8 %v2_e024, 0
  store i1 %v2_e028, i1* %cpsr_z.global-to-local, align 1
  %v3_e02c = mul nuw nsw i32 %v3_e024, 256
  store i32 %v3_e02c, i32* %r1.global-to-local, align 4
  br i1 %v2_e028, label %dec_label_pc_e060, label %dec_label_pc_e034.preheader

bb123:                                            ; preds = %dec_label_pc_e0f8
  %v2_e100 = add i32 %v1_e100, 1
  store i32 %v2_e100, i32* @ip, align 4
  br label %dec_label_pc_e024.backedge

dec_label_pc_e108:                                ; preds = %dec_label_pc_e0a0
  %v2_e108 = icmp eq i32 %v0_e108, 0
  store i1 %v2_e108, i1* %cpsr_z.global-to-local, align 1
  %v1_e10c = add i32 %v0_e10c, 1
  store i32 %v1_e10c, i32* %r3.global-to-local, align 4
  br i1 %v2_e108, label %bb124, label %dec_label_pc_e090.backedge

dec_label_pc_e090.backedge:                       ; preds = %dec_label_pc_e108, %bb124
  %v1_e11065 = phi i32 [ %v1_e110, %dec_label_pc_e108 ], [ %v2_e110, %bb124 ]
  %v1_e090 = inttoptr i32 %v1_e10c to i8*
  %v2_e090 = load i8, i8* %v1_e090, align 1
  %v3_e090 = zext i8 %v2_e090 to i32
  store i32 %v3_e090, i32* %r2.global-to-local, align 4
  %v2_e094 = icmp eq i8 %v2_e090, 0
  store i1 %v2_e094, i1* %cpsr_z.global-to-local, align 1
  %v3_e098 = mul nuw nsw i32 %v3_e090, 256
  store i32 %v3_e098, i32* %r1.global-to-local, align 4
  br i1 %v2_e094, label %dec_label_pc_e0cc, label %dec_label_pc_e0a0.preheader

bb124:                                            ; preds = %dec_label_pc_e108
  %v2_e110 = add i32 %v1_e110, 1
  store i32 %v2_e110, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e090.backedge

dec_label_pc_e118:                                ; preds = %bb120
  %v1_e118 = add i32 %v2_e068, 2
  %v2_e118 = inttoptr i32 %v1_e118 to i8*
  %v3_e118 = load i8, i8* %v2_e118, align 1
  %v4_e118 = zext i8 %v3_e118 to i32
  store i32 %v4_e118, i32* %r3.global-to-local, align 4
  %v1_e11c = add i32 %v2_e068, 3
  %v2_e11c = inttoptr i32 %v1_e11c to i8*
  %v3_e11c = load i8, i8* %v2_e11c, align 1
  %v4_e11c = zext i8 %v3_e11c to i32
  store i32 %v4_e11c, i32* %r2.global-to-local, align 4
  %v4_e120 = mul nuw nsw i32 %v4_e11c, 256
  %v5_e120 = or i32 %v4_e120, %v4_e118
  store i32 %v5_e120, i32* %r3.global-to-local, align 4
  %v7_e124 = icmp eq i32 %v5_e120, 256
  store i1 %v7_e124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e124, label %dec_label_pc_e12c, label %dec_label_pc_e084

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e118
  %v1_e12c = add i32 %v2_e068, 9
  %v2_e12c = inttoptr i32 %v1_e12c to i8*
  %v3_e12c = load i8, i8* %v2_e12c, align 1
  %v4_e12c = zext i8 %v3_e12c to i32
  store i32 %v4_e12c, i32* %r2.global-to-local, align 4
  %v1_e130 = add i32 %v2_e068, 8
  %v2_e130 = inttoptr i32 %v1_e130 to i8*
  %v3_e130 = load i8, i8* %v2_e130, align 1
  %v4_e130 = zext i8 %v3_e130 to i32
  %v4_e134 = mul nuw nsw i32 %v4_e12c, 256
  %v5_e134 = or i32 %v4_e130, %v4_e134
  %v3_e138 = mul i32 %v5_e134, 65536
  store i32 %v3_e138, i32* %r3.global-to-local, align 4
  %v3_e13c = mul nuw nsw i32 %v4_e130, 256
  store i32 %v3_e13c, i32* %r2.global-to-local, align 4
  %v5_e144 = or i32 %v3_e13c, %v4_e12c
  store i32 %v5_e144, i32* %r0.global-to-local, align 4
  %v7_e148 = icmp eq i32 %v5_e144, 4
  store i1 %v7_e148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e148, label %dec_label_pc_e150, label %bb122

dec_label_pc_e150:                                ; preds = %dec_label_pc_e12c
  %v2_e150 = inttoptr i32 %v1_e07c to i8*
  %v3_e150 = load i8, i8* %v2_e150, align 1
  %v4_e150 = zext i8 %v3_e150 to i32
  store i32 %v4_e150, i32* %r3.global-to-local, align 4
  store i32 %v2_dd60, i32* %r2.global-to-local, align 4
  %v1_e15c = add i32 %v2_e068, 11
  %v2_e15c = inttoptr i32 %v1_e15c to i8*
  %v3_e15c = load i8, i8* %v2_e15c, align 1
  %v4_e15c = zext i8 %v3_e15c to i32
  store i32 %v4_e15c, i32* %r2.global-to-local, align 4
  store i32 %v2_dd60, i32* %r3.global-to-local, align 4
  %v1_e168 = add i32 %v2_e068, 12
  %v2_e168 = inttoptr i32 %v1_e168 to i8*
  %v3_e168 = load i8, i8* %v2_e168, align 1
  %v4_e168 = zext i8 %v3_e168 to i32
  store i32 %v4_e168, i32* %r3.global-to-local, align 4
  store i32 %v2_dd60, i32* @ip, align 4
  %v1_e174 = add i32 %v2_e068, 13
  %v2_e174 = inttoptr i32 %v1_e174 to i8*
  %v3_e174 = load i8, i8* %v2_e174, align 1
  %v4_e174 = zext i8 %v3_e174 to i32
  store i32 %v4_e174, i32* %r2.global-to-local, align 4
  %v0_e17c = load i32, i32* @fp, align 4
  %v1_e17c = inttoptr i32 %v0_e17c to i8*
  %v2_e17c = load i8, i8* %v1_e17c, align 1
  %v3_e17c = zext i8 %v2_e17c to i32
  %v1_e180 = mul nuw nsw i32 %v3_e17c, 4
  %v3_e184 = add nuw nsw i32 %v1_e180, 4
  store i32 %v3_e184, i32* %r1.global-to-local, align 4
  %v1_e188 = add i32 %v0_e17c, 4
  %v2_e188 = inttoptr i32 %v1_e188 to i32*
  %v3_e188 = load i32, i32* %v2_e188, align 4
  store i32 %v3_e188, i32* %r0.global-to-local, align 4
  %v3_e18c = sext i8 %v3_e174 to i32
  %v5_e18c = sext i8 %v3_e168 to i32
  %v10_e18c = inttoptr i32 %v3_e188 to i32*
  %v11_e18c = call i32 @function_13100(i32* %v10_e18c, i32 %v3_e184, i32 %v3_e18c, i32 %v5_e18c)
  store i32 %v11_e18c, i32* %r0.global-to-local, align 4
  %v0_e190 = load i32, i32* @fp, align 4
  %v1_e190 = inttoptr i32 %v0_e190 to i8*
  %v2_e190 = load i8, i8* %v1_e190, align 1
  %v3_e190 = zext i8 %v2_e190 to i32
  store i32 %v3_e190, i32* %r2.global-to-local, align 4
  %v4_e198 = sext i8 %v3_e150 to i32
  store i32 %v4_e198, i32* %r3.global-to-local, align 4
  %v1_e19c = add nuw nsw i32 %v3_e190, 1
  store i32 %v1_e19c, i32* %r1.global-to-local, align 4
  %v5_e1a0 = mul nuw nsw i32 %v3_e190, 4
  %v6_e1a0 = add i32 %v5_e1a0, %v11_e18c
  %v7_e1a0 = inttoptr i32 %v6_e1a0 to i32*
  store i32 %v4_e198, i32* %v7_e1a0, align 4
  %v1_e1a4 = load i32, i32* @fp, align 4
  %v2_e1a4 = add i32 %v1_e1a4, 4
  %v3_e1a4 = inttoptr i32 %v2_e1a4 to i32*
  store i32 %v11_e18c, i32* %v3_e1a4, align 4
  %v0_e1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e1a8 = trunc i32 %v0_e1a8 to i8
  %v2_e1a8 = load i32, i32* @fp, align 4
  %v3_e1a8 = inttoptr i32 %v2_e1a8 to i8*
  store i8 %v1_e1a8, i8* %v3_e1a8, align 1
  %v0_e1ac = load i32, i32* @r4, align 4
  %v1_e1ac = add i32 %v0_e1ac, 9
  %v2_e1ac = inttoptr i32 %v1_e1ac to i8*
  %v3_e1ac = load i8, i8* %v2_e1ac, align 1
  %v4_e1ac = zext i8 %v3_e1ac to i32
  store i32 %v4_e1ac, i32* %r3.global-to-local, align 4
  %v1_e1b0 = add i32 %v0_e1ac, 8
  %v2_e1b0 = inttoptr i32 %v1_e1b0 to i8*
  %v3_e1b0 = load i8, i8* %v2_e1b0, align 1
  %v4_e1b0 = zext i8 %v3_e1b0 to i32
  %v4_e1b4 = mul nuw nsw i32 %v4_e1ac, 256
  %v5_e1b4 = or i32 %v4_e1b0, %v4_e1b4
  %v3_e1b8 = mul i32 %v5_e1b4, 65536
  store i32 %v3_e1b8, i32* %r2.global-to-local, align 4
  %v3_e1bc = mul nuw nsw i32 %v4_e1b0, 256
  store i32 %v3_e1bc, i32* %r3.global-to-local, align 4
  %v5_e1c4 = or i32 %v3_e1bc, %v4_e1ac
  store i32 %v5_e1c4, i32* %r0.global-to-local, align 4
  %v0_e1c8 = load i32, i32* @r7, align 4
  %v2_e1c8 = add i32 %v0_e1c8, %v5_e1c4
  %v0_e004.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e004.backedge

; uselistorder directives
  uselistorder i32 %v3_e1bc, { 1, 0 }
  uselistorder i32 %v4_e1ac, { 1, 0, 2 }
  uselistorder i32 %v11_e18c, { 1, 0, 2 }
  uselistorder i32 %v3_e184, { 1, 0 }
  uselistorder i32 %v5_e144, { 1, 2, 0 }
  uselistorder i32 %v3_e13c, { 1, 0 }
  uselistorder i32 %v4_e12c, { 1, 0, 2 }
  uselistorder i32 %v2_e110, { 1, 0 }
  uselistorder i32 %v3_e090, { 0, 2, 1 }
  uselistorder i32 %v1_e11065, { 1, 0 }
  uselistorder i32 %v1_e10c, { 1, 2, 0 }
  uselistorder i32 %v2_e100, { 1, 0 }
  uselistorder i32 %v3_e024, { 0, 2, 1 }
  uselistorder i32 %v1_e10050, { 1, 0 }
  uselistorder i32 %v1_e0fc, { 1, 2, 0 }
  uselistorder i1 %v7_e00c, { 1, 0 }
  uselistorder i32 %v1_e004, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_e0b8, { 0, 2, 1 }
  uselistorder i32 %v2_e0b4, { 1, 2, 0 }
  uselistorder i32 %v0_e108, { 2, 0, 1 }
  uselistorder i32 %v1_e110, { 1, 2, 0 }
  uselistorder i32 %v3_e09828, { 1, 0 }
  uselistorder i32 %v3_e09026, { 1, 0, 2 }
  uselistorder i32 %v1_e07c, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_e068, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_e04c, { 0, 2, 1 }
  uselistorder i32 %v2_e048, { 1, 2, 0 }
  uselistorder i32 %v0_e0f8, { 2, 0, 1 }
  uselistorder i32 %v1_e100, { 1, 2, 0 }
  uselistorder i32 %v3_e02c22, { 1, 0 }
  uselistorder i32 %v3_e02420, { 1, 0, 2 }
  uselistorder i32 %v0_e068143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_e010142, { 1, 0 }
  uselistorder i1 %v7_e00c141, { 1, 0 }
  uselistorder i32 %v1_e004134, { 1, 0 }
  uselistorder i1 %v9_dfe0, { 1, 0 }
  uselistorder i32 %v0_dfa0, { 1, 0 }
  uselistorder i32 %v0_df94, { 1, 0, 2 }
  uselistorder i32 %v0_df84, { 1, 0 }
  uselistorder i32 %v0_df5c, { 1, 0 }
  uselistorder i32 %v1_df10, { 1, 0, 2 }
  uselistorder i1 %v7_df08, { 1, 0 }
  uselistorder i32 %v5_df04, { 1, 0, 2 }
  uselistorder i32 %v1_decc, { 1, 0 }
  uselistorder i32 %v3_deb8, { 1, 0 }
  uselistorder i32 %v0_deb0, { 1, 0 }
  uselistorder i32 %v1_dea4, { 1, 2, 0 }
  uselistorder i1 %v7_de5c, { 1, 0 }
  uselistorder i32 %v4_de58, { 1, 0, 2 }
  uselistorder i1 %v7_de40, { 1, 0 }
  uselistorder i32 %v3_de3c, { 1, 0, 2 }
  uselistorder i1 %v7_de24, { 1, 0 }
  uselistorder i32 %v3_de20, { 2, 1, 0, 3 }
  uselistorder i1 %v7_de08, { 2, 1, 0 }
  uselistorder i32 %v1_de0c, { 1, 0 }
  uselistorder i32 %v2_de94, { 1, 0, 2 }
  uselistorder i16 %v5_ddb0, { 1, 0 }
  uselistorder i32 %v2_ddac, { 1, 0, 2 }
  uselistorder i32 %v6_dd98, { 1, 2, 0 }
  uselistorder i64 %v5_dd94, { 0, 2, 1 }
  uselistorder i32 %v1_dd80, { 1, 0, 2 }
  uselistorder i32 %v1_dd38, { 1, 0 }
  uselistorder i32 %v1_dd34, { 1, 2, 0 }
  uselistorder i32 %v2_dd30, { 1, 0 }
  uselistorder i1 %v8_dd1c, { 1, 0 }
  uselistorder i32 %v2_dcf4, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 13, 16, 14, 15, 17, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 35, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 10, 1, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 7, 9, 6, 2, 8, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 21, 20, 0, 23 }
  uselistorder i32* %r0.global-to-local, { 2, 6, 3, 4, 5, 12, 7, 9, 8, 10, 11, 13, 16, 14, 15, 18, 17, 21, 19, 20, 22, 23, 1, 24, 26, 25, 27, 29, 28, 30, 33, 32, 31, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 6, 13, 7, 18, 8, 9, 19, 10, 11, 12, 3, 14, 15, 16, 17, 2, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 4, 29, 30, 31, 32, 37, 34, 35, 33, 36, 1 }
  uselistorder i32 (i32)* @function_13d70, { 6, 5, 10, 9, 8, 7, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_e090.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e024.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e004.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e0a0, { 1, 0 }
  uselistorder label %dec_label_pc_e0a0.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_e034, { 1, 0 }
  uselistorder label %dec_label_pc_e034.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e018, { 1, 0 }
  uselistorder label %dec_label_pc_dfa0, { 1, 0 }
  uselistorder label %dec_label_pc_df8c, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_df6c, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_dd14, { 1, 0 }
}

define i32 @function_e1d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_e1d0:
  %v2_e1dc = load i32, i32* @global_var_1a2fc.112, align 4
  %v2_e1e4 = call i32 @function_11a20(i32 %v2_e1dc, i32 9)
  ret i32 %v2_e1e4
}

define i32 @function_e1f8() local_unnamed_addr {
dec_label_pc_e1f8:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e1f8 = load i32, i32* @r4, align 4
  store i32 %v3_e1f8, i32* %stack_var_-16, align 4
  %v12_e1f8 = load i32, i32* @lr, align 4
  %v0_e1fc = load i32, i32* @r0, align 4
  store i32 %v0_e1fc, i32* %r5.global-to-local, align 4
  %v1_e200 = add i32 %v0_e1fc, 4
  %v2_e200 = inttoptr i32 %v1_e200 to i32*
  %v3_e200 = load i32, i32* %v2_e200, align 4
  store i32 %v3_e200, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 57892, i32* @lr, align 4
  %v1_e220 = icmp ne i32 %v3_e200, -1
  call void @__pseudo_cond_branch(i1 %v1_e220, i32 ptrtoint (i32* @global_var_11c54.90 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e230 = call i32 @function_12464(i32 2, i32 1, i32 0)
  store i32 %v3_e230, i32* %r0.global-to-local, align 4
  %v7_e234 = icmp eq i32 %v3_e230, -1
  %v1_e238 = load i32, i32* %r5.global-to-local, align 4
  %v2_e238 = add i32 %v1_e238, 4
  %v3_e238 = inttoptr i32 %v2_e238 to i32*
  store i32 %v3_e230, i32* %v3_e238, align 4
  br i1 %v7_e234, label %dec_label_pc_e1f8.dec_label_pc_e2b0_crit_edge, label %dec_label_pc_e240

dec_label_pc_e1f8.dec_label_pc_e2b0_crit_edge:    ; preds = %dec_label_pc_e1f8
  %v1_e2b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e2b0

dec_label_pc_e240:                                ; preds = %dec_label_pc_e1f8
  %v2_e204 = ptrtoint i32* %stack_var_-32 to i32
  %v0_e240 = load i32, i32* %r5.global-to-local, align 4
  %v1_e240 = add i32 %v0_e240, 28
  store i32 %v1_e240, i32* @r0, align 4
  %v0_e244 = load i32, i32* %r6.global-to-local, align 4
  %v2_e244 = add i32 %v0_e240, 24
  %v3_e244 = inttoptr i32 %v2_e244 to i32*
  store i32 %v0_e244, i32* %v3_e244, align 4
  store i32 256, i32* @r1, align 4
  %v0_e24c = call i32 @function_11228()
  store i32 %v0_e24c, i32* %r0.global-to-local, align 4
  %v0_e250 = load i32, i32* %r5.global-to-local, align 4
  %v1_e250 = add i32 %v0_e250, 4
  %v2_e250 = inttoptr i32 %v1_e250 to i32*
  %v3_e250 = load i32, i32* %v2_e250, align 4
  store i32 %v3_e250, i32* %r4.global-to-local, align 4
  %v0_e254 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e254, i32* %r2.global-to-local, align 4
  store i32 %v3_e250, i32* %r0.global-to-local, align 4
  %v2_e260 = call i32 @function_11a88(i32 %v3_e250, i32 3)
  %v1_e268 = or i32 %v2_e260, 2048
  store i32 %v1_e268, i32* %r2.global-to-local, align 4
  %v0_e26c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e26c, i32* %r0.global-to-local, align 4
  %v2_e270 = call i32 @function_11a88(i32 %v0_e26c, i32 4)
  store i32 %v2_e270, i32* %r0.global-to-local, align 4
  %v2_e278 = load i32, i32* @global_var_182a4.114, align 4
  store i32 %v2_e278, i32* %r2.global-to-local, align 4
  %v1_e280 = load i32, i32* %r5.global-to-local, align 4
  %v2_e280 = add i32 %v1_e280, 12
  %v3_e280 = inttoptr i32 %v2_e280 to i32*
  store i32 1, i32* %v3_e280, align 4
  store i32 2, i32* @r3, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_e28c = load i32, i32* %r2.global-to-local, align 4
  %v1_e28c = load i32, i32* %r5.global-to-local, align 4
  %v2_e28c = add i32 %v1_e28c, 8
  %v3_e28c = inttoptr i32 %v2_e28c to i32*
  store i32 %v0_e28c, i32* %v3_e28c, align 4
  %v0_e290 = load i32, i32* %r5.global-to-local, align 4
  %v1_e290 = add i32 %v0_e290, 16
  %v2_e290 = inttoptr i32 %v1_e290 to i32*
  %v3_e290 = load i32, i32* %v2_e290, align 4
  store i32 %v3_e290, i32* @ip, align 4
  %v1_e294 = add i32 %v0_e290, 4
  %v2_e294 = inttoptr i32 %v1_e294 to i32*
  %v3_e294 = load i32, i32* %v2_e294, align 4
  store i32 %v3_e294, i32* %r0.global-to-local, align 4
  %v1_e298 = add i32 %v0_e290, 20
  %v2_e298 = inttoptr i32 %v1_e298 to i16*
  %v3_e298 = load i16, i16* %v2_e298, align 2
  %v4_e298 = zext i16 %v3_e298 to i32
  store i32 %v4_e298, i32* %r5.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e2ac = call i32 @function_1224c(i32 %v3_e294, i32 %v2_e204, i32 16)
  store i32 %v3_e2ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e2b0

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e1f8.dec_label_pc_e2b0_crit_edge, %dec_label_pc_e240
  %v1_e2b8 = phi i32 [ %v1_e2b8.pre, %dec_label_pc_e1f8.dec_label_pc_e2b0_crit_edge ], [ %v3_e2ac, %dec_label_pc_e240 ]
  %v2_e2b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e2b4, i32* @r4, align 4
  store i32 %v12_e1f8, i32* @lr, align 4
  ret i32 %v1_e2b8

; uselistorder directives
  uselistorder i32 %v3_e230, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @function_11228, { 8, 4, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e2b0, { 1, 0 }
}

define i32 @function_e2c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e2c0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e2c0 = load i32, i32* @r4, align 4
  %v6_e2c0 = load i32, i32* @r5, align 4
  %v9_e2c0 = load i32, i32* @r6, align 4
  %v12_e2c0 = load i32, i32* @r7, align 4
  %v15_e2c0 = load i32, i32* @r8, align 4
  %v18_e2c0 = load i32, i32* @sb, align 4
  %v21_e2c0 = load i32, i32* @sl, align 4
  %v24_e2c0 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_18270.116 to i32), i32* @fp, align 4
  %v2_e2c8 = load i32, i32* @global_var_18270.116, align 4
  store i32 ptrtoint (i32* @global_var_1829c.118 to i32), i32* @sl, align 4
  %v1_e2d4 = add i32 %v2_e2c8, 1
  store i32 %v1_e2d4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_e2e0 = load i32, i32* @global_var_1829c.118, align 4
  store i32 %v2_e2e0, i32* %r0.global-to-local, align 4
  %v3_e2e4 = mul i32 %v1_e2d4, 16
  store i32 %v3_e2e4, i32* %r1.global-to-local, align 4
  %v4_e2ec = inttoptr i32 %v2_e2e0 to i32*
  %v5_e2ec = call i32 @function_13100(i32* %v4_e2ec, i32 %v3_e2e4, i32 %arg3, i32 %v1_e2d4)
  %v2_e2f0 = load i32, i32* @global_var_18270.116, align 4
  store i32 %v2_e2f0, i32* %r2.global-to-local, align 4
  store i32 %v5_e2ec, i32* @r8, align 4
  %v0_e2f8 = load i32, i32* @r5, align 4
  store i32 %v0_e2f8, i32* %r0.global-to-local, align 4
  %v1_e300 = load i32, i32* @sl, align 4
  %v2_e300 = inttoptr i32 %v1_e300 to i32*
  store i32 %v5_e2ec, i32* %v2_e300, align 4
  %v1_e304 = inttoptr i32 %v0_e2f8 to i8*
  %v2_e304 = call i32 @function_11194(i8* %v1_e304)
  %sext = mul i32 %v2_e304, 16777216
  %v1_e308 = sdiv i32 %sext, 16777216
  %v2_e308 = add nsw i32 %v1_e308, 1
  store i32 %v2_e308, i32* @r4, align 4
  store i32 %v1_e308, i32* @r7, align 4
  store i32 %v2_e308, i32* @r0, align 4
  %v0_e314 = call i32 @function_126ac()
  store i32 %v0_e314, i32* %r0.global-to-local, align 4
  %v0_e318 = load i32, i32* @r5, align 4
  store i32 %v0_e318, i32* %r1.global-to-local, align 4
  %v0_e31c = load i32, i32* @r4, align 4
  store i32 %v0_e31c, i32* %r2.global-to-local, align 4
  store i32 %v0_e314, i32* %r6.global-to-local, align 4
  %v3_e324 = call i32 @function_11204(i32 %v0_e314, i32 %v0_e318, i32 %v0_e31c)
  store i32 %v3_e324, i32* %r0.global-to-local, align 4
  %v0_e328 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_e328, 1
  %extract.t6 = trunc i32 %v0_e328 to i8
  br i1 %tmp22, label %dec_label_pc_e34c, label %dec_label_pc_e330

dec_label_pc_e330:                                ; preds = %dec_label_pc_e2c0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e334

dec_label_pc_e334:                                ; preds = %dec_label_pc_e334, %dec_label_pc_e330
  %v2_e33c = phi i32 [ %v1_e340, %dec_label_pc_e334 ], [ 0, %dec_label_pc_e330 ]
  %v1_e334 = load i32, i32* %r6.global-to-local, align 4
  %v2_e334 = add i32 %v1_e334, %v2_e33c
  %v3_e334 = inttoptr i32 %v2_e334 to i8*
  %v4_e334 = load i8, i8* %v3_e334, align 1
  %v6_e334 = zext i8 %v4_e334 to i32
  %v1_e338 = xor i32 %v6_e334, 34
  store i32 %v1_e338, i32* %r3.global-to-local, align 4
  %v1_e33c = trunc i32 %v1_e338 to i8
  store i8 %v1_e33c, i8* %v3_e334, align 1
  %v0_e340 = load i32, i32* %r2.global-to-local, align 4
  %v1_e340 = add i32 %v0_e340, 1
  store i32 %v1_e340, i32* %r2.global-to-local, align 4
  %v1_e344 = load i32, i32* @r7, align 4
  %v9_e344 = icmp eq i32 %v1_e340, %v1_e344
  br i1 %v9_e344, label %dec_label_pc_e34c.loopexit, label %dec_label_pc_e334

dec_label_pc_e34c.loopexit:                       ; preds = %dec_label_pc_e334
  %extract.t = trunc i32 %v1_e340 to i8
  br label %dec_label_pc_e34c

dec_label_pc_e34c:                                ; preds = %dec_label_pc_e34c.loopexit, %dec_label_pc_e2c0
  %v0_e35c.off0 = phi i8 [ %extract.t, %dec_label_pc_e34c.loopexit ], [ %extract.t6, %dec_label_pc_e2c0 ]
  %v2_e34c = load i32, i32* @global_var_18270.116, align 4
  %v2_e350 = load i32, i32* @global_var_1829c.118, align 4
  %v3_e354 = mul i32 %v2_e34c, 16
  store i32 %v3_e354, i32* @sb, align 4
  %v2_e358 = add i32 %v2_e350, %v3_e354
  store i32 %v2_e358, i32* %r2.global-to-local, align 4
  %v3_e35c = add i32 %v2_e358, 12
  %v4_e35c = inttoptr i32 %v3_e35c to i8*
  store i8 %v0_e35c.off0, i8* %v4_e35c, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_e2f0, i32* %r3.global-to-local, align 4
  %v0_e368 = load i32, i32* %r6.global-to-local, align 4
  %v1_e368 = load i32, i32* @r8, align 4
  %v5_e368 = mul i32 %v2_e2f0, 16
  %v6_e368 = add i32 %v1_e368, %v5_e368
  %v7_e368 = inttoptr i32 %v6_e368 to i32*
  store i32 %v0_e368, i32* %v7_e368, align 4
  %v2_e36c = load i32, i32* @global_var_1829c.118, align 4
  store i32 %v2_e36c, i32* @r7, align 4
  %v1_e370 = inttoptr i32 %arg2 to i8*
  %v2_e370 = call i32 @function_11194(i8* %v1_e370)
  %sext1 = mul i32 %v2_e370, 16777216
  %v1_e374 = sdiv i32 %sext1, 16777216
  %v2_e374 = add nsw i32 %v1_e374, 1
  store i32 %v2_e374, i32* @r4, align 4
  store i32 %v1_e374, i32* @r6, align 4
  store i32 %v2_e374, i32* @r0, align 4
  %v0_e380 = call i32 @function_126ac()
  store i32 %v0_e380, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_e388 = load i32, i32* @r4, align 4
  store i32 %v0_e388, i32* %r2.global-to-local, align 4
  store i32 %v0_e380, i32* %r5.global-to-local, align 4
  %v3_e390 = call i32 @function_11204(i32 %v0_e380, i32 %arg2, i32 %v0_e388)
  store i32 %v3_e390, i32* %r0.global-to-local, align 4
  %v0_e394 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_e394, 1
  %extract.t8 = trunc i32 %v0_e394 to i8
  br i1 %tmp23, label %dec_label_pc_e3b8, label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e34c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %dec_label_pc_e3a0, %dec_label_pc_e39c
  %v2_e3a8 = phi i32 [ %v1_e3ac, %dec_label_pc_e3a0 ], [ 0, %dec_label_pc_e39c ]
  %v1_e3a0 = load i32, i32* %r5.global-to-local, align 4
  %v2_e3a0 = add i32 %v1_e3a0, %v2_e3a8
  %v3_e3a0 = inttoptr i32 %v2_e3a0 to i8*
  %v4_e3a0 = load i8, i8* %v3_e3a0, align 1
  %v6_e3a0 = zext i8 %v4_e3a0 to i32
  %v1_e3a4 = xor i32 %v6_e3a0, 34
  store i32 %v1_e3a4, i32* %r3.global-to-local, align 4
  %v1_e3a8 = trunc i32 %v1_e3a4 to i8
  store i8 %v1_e3a8, i8* %v3_e3a0, align 1
  %v0_e3ac = load i32, i32* %r2.global-to-local, align 4
  %v1_e3ac = add i32 %v0_e3ac, 1
  store i32 %v1_e3ac, i32* %r2.global-to-local, align 4
  %v1_e3b0 = load i32, i32* @r6, align 4
  %v9_e3b0 = icmp eq i32 %v1_e3ac, %v1_e3b0
  br i1 %v9_e3b0, label %dec_label_pc_e3b8.loopexit, label %dec_label_pc_e3a0

dec_label_pc_e3b8.loopexit:                       ; preds = %dec_label_pc_e3a0
  %extract.t7 = trunc i32 %v1_e3ac to i8
  br label %dec_label_pc_e3b8

dec_label_pc_e3b8:                                ; preds = %dec_label_pc_e3b8.loopexit, %dec_label_pc_e34c
  %v0_e3c8.off0 = phi i8 [ %extract.t7, %dec_label_pc_e3b8.loopexit ], [ %extract.t8, %dec_label_pc_e34c ]
  %v2_e3b8 = load i32, i32* @global_var_18270.116, align 4
  store i32 %v2_e3b8, i32* %r0.global-to-local, align 4
  %v2_e3bc = load i32, i32* @global_var_1829c.118, align 4
  %v3_e3c0 = mul i32 %v2_e3b8, 16
  store i32 %v3_e3c0, i32* %r1.global-to-local, align 4
  %v2_e3c4 = or i32 %v3_e3c0, 13
  %v3_e3c8 = add i32 %v2_e3c4, %v2_e3bc
  %v4_e3c8 = inttoptr i32 %v3_e3c8 to i8*
  store i8 %v0_e3c8.off0, i8* %v4_e3c8, align 1
  store i32 ptrtoint (i16** @global_var_182a0.120 to i32), i32* %r4.global-to-local, align 4
  %v2_e3d4 = load i16, i16* bitcast (i16** @global_var_182a0.120 to i16*), align 4
  %v3_e3d4 = zext i16 %v2_e3d4 to i32
  store i32 %v3_e3d4, i32* %lr.global-to-local, align 4
  %v2_e3dc = load i32, i32* @global_var_1829c.118, align 4
  store i32 %v2_e3dc, i32* %r2.global-to-local, align 4
  %v0_e3e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_e3e4 = add i32 %v0_e3e4, %v2_e3dc
  store i32 %v2_e3e4, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_182a0.120 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_e3ec = load i32, i32* @sb, align 4
  %v1_e3ec = load i32, i32* @r7, align 4
  %v2_e3ec = add i32 %v1_e3ec, %v0_e3ec
  store i32 %v2_e3ec, i32* %ip.global-to-local, align 4
  %v0_e3f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_e3f0 = add i32 %v0_e3f0, 1
  store i32 %v1_e3f0, i32* %r0.global-to-local, align 4
  %v3_e3f4 = add i32 %v2_e3e4, 10
  %v4_e3f4 = inttoptr i32 %v3_e3f4 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_182a0.120 to i32), i32 16), i32 16) to i16), i16* %v4_e3f4, align 2
  %v0_e3f8 = load i32, i32* %lr.global-to-local, align 4
  %v1_e3f8 = trunc i32 %v0_e3f8 to i16
  %v2_e3f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_e3f8 = add i32 %v2_e3f8, 8
  %v4_e3f8 = inttoptr i32 %v3_e3f8 to i16*
  store i16 %v1_e3f8, i16* %v4_e3f8, align 2
  %v0_e3fc = load i32, i32* %r5.global-to-local, align 4
  %v1_e3fc = load i32, i32* %ip.global-to-local, align 4
  %v2_e3fc = add i32 %v1_e3fc, 4
  %v3_e3fc = inttoptr i32 %v2_e3fc to i32*
  store i32 %v0_e3fc, i32* %v3_e3fc, align 4
  %v1_e400 = load i32, i32* @fp, align 4
  %v2_e400 = inttoptr i32 %v1_e400 to i32*
  store i32 %v1_e3f0, i32* %v2_e400, align 4
  %v0_e404 = load i32, i32* %r3.global-to-local, align 4
  %v1_e404 = trunc i32 %v0_e404 to i16
  %v2_e404 = load i32, i32* %r4.global-to-local, align 4
  %v3_e404 = inttoptr i32 %v2_e404 to i16*
  store i16 %v1_e404, i16* %v3_e404, align 2
  store i32 %v3_e2c0, i32* @r4, align 4
  store i32 %v6_e2c0, i32* @r5, align 4
  store i32 %v9_e2c0, i32* @r6, align 4
  store i32 %v12_e2c0, i32* @r7, align 4
  store i32 %v15_e2c0, i32* @r8, align 4
  store i32 %v18_e2c0, i32* @sb, align 4
  store i32 %v21_e2c0, i32* @sl, align 4
  store i32 %v24_e2c0, i32* @fp, align 4
  ret i32 %v1_e3f0

; uselistorder directives
  uselistorder i32 %v3_e3c0, { 1, 0 }
  uselistorder i32 %v1_e3ac, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e380, { 1, 0, 2 }
  uselistorder i32 %v3_e354, { 1, 0 }
  uselistorder i32 %v1_e340, { 0, 2, 3, 1 }
  uselistorder i32 %v0_e314, { 1, 0, 2 }
  uselistorder i32 %v2_e2f0, { 1, 0, 2 }
  uselistorder i32 %v3_e2e4, { 1, 0 }
  uselistorder i32 %v1_e2d4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @function_11194, { 0, 1, 9, 10, 11, 12, 13, 28, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @function_e420(i32 %arg1) local_unnamed_addr {
dec_label_pc_e420:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp316 = call i32 @__decompiler_undefined_function_0()
  %tmp320 = call i32 @__decompiler_undefined_function_0()
  %tmp321 = call i32 @__decompiler_undefined_function_0()
  %tmp322 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_e420 = load i32, i32* @r4, align 4
  %v6_e420 = load i32, i32* @r5, align 4
  %v18_e420 = load i32, i32* @sb, align 4
  %v21_e420 = load i32, i32* @sl, align 4
  %v0_e42c = call i32 @function_11944()
  store i32 %v0_e42c, i32* %r0.global-to-local, align 4
  %v7_e430 = icmp eq i32 %v0_e42c, -1
  %. = zext i1 %v7_e430 to i32
  %tmp355 = icmp slt i32 %v0_e42c, 1
  %storemerge314 = select i1 %tmp355, i32 %., i32 1
  store i32 %storemerge314, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1a2fc.112 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e44c = icmp eq i32 %storemerge314, 0
  store i1 %v2_e44c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e42c, i32* @global_var_1a2fc.112, align 4
  br i1 %v2_e44c, label %dec_label_pc_e71c, label %dec_label_pc_e458

dec_label_pc_e458:                                ; preds = %dec_label_pc_e420
  store i32 %v3_e420, i32* %r4.global-to-local, align 4
  store i32 %v6_e420, i32* @r5, align 4
  store i32 %v18_e420, i32* @sb, align 4
  store i32 %v21_e420, i32* @sl, align 4
  ret i32 %v0_e42c

dec_label_pc_e71c:                                ; preds = %dec_label_pc_e420
  %v0_e71c = call i32 @function_11450()
  store i32 %v0_e71c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_e71c, i32* @global_var_1a2d8.43, align 4
  %v1_e728 = call i32 @function_db68(i32 %v0_e71c)
  %v0_e72c = load i32, i32* @r4, align 4
  store i32 %v0_e72c, i32* %r0.global-to-local, align 4
  %v1_e730 = inttoptr i32 %v0_e72c to i32*
  %v2_e730 = call i32 @function_118d4(i32* %v1_e730)
  store i32 ptrtoint (i32* @global_var_182a4.114 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_e730, i32* @global_var_182a4.114, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_e744 = call i32 @function_12fcc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_1a2f4.125 to i32), i32* %r3.global-to-local, align 4
  %v0_e74c = load i32, i32* @r4, align 4
  store i32 %v0_e74c, i32* %stack_var_-52, align 4
  store i32 %v2_e744, i32* @global_var_1a2f4.125, align 4
  store i32 %v0_e74c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e758

dec_label_pc_e758:                                ; preds = %dec_label_pc_e758.dec_label_pc_e758_crit_edge, %dec_label_pc_e71c
  %v2_e764 = phi i32 [ %v2_e764.pre, %dec_label_pc_e758.dec_label_pc_e758_crit_edge ], [ %v2_e744, %dec_label_pc_e71c ]
  %v0_e76c = phi i32 [ %v0_e79c, %dec_label_pc_e758.dec_label_pc_e758_crit_edge ], [ %v0_e74c, %dec_label_pc_e71c ]
  %v3_e760 = mul i32 %v0_e76c, 256
  store i32 %v3_e760, i32* %ip.global-to-local, align 4
  %v2_e774 = mul i32 %v0_e76c, 288
  %v1_e77c = add i32 %v0_e76c, 1
  store i32 %v1_e77c, i32* %r0.global-to-local, align 4
  %v2_e780 = add i32 %v2_e774, %v2_e764
  store i32 %v2_e780, i32* %r2.global-to-local, align 4
  store i32 %v2_e780, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_e794 = add i32 %v2_e780, 4
  %v3_e794 = inttoptr i32 %v2_e794 to i32*
  store i32 -1, i32* %v3_e794, align 4
  %v0_e798 = load i32, i32* @r5, align 4
  %v1_e798 = load i32, i32* %r1.global-to-local, align 4
  %v2_e798 = add i32 %v1_e798, 12
  %v3_e798 = inttoptr i32 %v2_e798 to i32*
  store i32 %v0_e798, i32* %v3_e798, align 4
  %v0_e79c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e79c, i32* %stack_var_-52, align 4
  %v7_e7a0 = icmp sgt i32 %v1_e77c, 255
  br i1 %v7_e7a0, label %dec_label_pc_e7a4, label %dec_label_pc_e758.dec_label_pc_e758_crit_edge

dec_label_pc_e758.dec_label_pc_e758_crit_edge:    ; preds = %dec_label_pc_e758
  %v2_e764.pre = load i32, i32* @global_var_1a2f4.125, align 4
  br label %dec_label_pc_e758

dec_label_pc_e7a4:                                ; preds = %dec_label_pc_e758
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_e7b0 = call i32 @function_12464(i32 2, i32 3, i32 6)
  store i32 %v3_e7b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2f8.127 to i32), i32* %r2.global-to-local, align 4
  %v2_e7b8 = icmp eq i32 %v3_e7b0, -1
  store i1 %v2_e7b8, i1* %cpsr_c.global-to-local, align 1
  %v7_e7b8 = icmp eq i32 %v3_e7b0, -1
  store i1 %v7_e7b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e7b0, i32* %r4.global-to-local, align 4
  store i32 %v3_e7b0, i32* @global_var_1a2f8.127, align 4
  br i1 %v7_e7b8, label %dec_label_pc_f930, label %dec_label_pc_e7c8

dec_label_pc_e7c8:                                ; preds = %dec_label_pc_e7a4
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_e7cc = load i32, i32* @r5, align 4
  store i32 %v0_e7cc, i32* %r2.global-to-local, align 4
  %v2_e7d0 = call i32 @function_11a88(i32 %v3_e7b0, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_e7d8 = or i32 %v2_e7d0, 2048
  store i32 %v1_e7d8, i32* %r2.global-to-local, align 4
  %v0_e7dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e7dc, i32* %r0.global-to-local, align 4
  %v2_e7e0 = call i32 @function_11a88(i32 %v0_e7dc, i32 4)
  %v2_e7e8 = load i32, i32* @global_var_1a2f8.127, align 4
  store i32 %v2_e7e8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_e7f4 = load i32, i32* @r5, align 4
  store i32 %v0_e7f4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_e7fc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_e7fc, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_e80c = call i32 @function_12420(i32 %v2_e7e8, i32 %v0_e7f4, i32 3, i32 %v2_e7fc, i32 4)
  store i32 %v5_e80c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e810 = icmp eq i32 %v5_e80c, 0
  store i1 %v2_e810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e810, label %dec_label_pc_e818, label %dec_label_pc_f924

dec_label_pc_e818:                                ; preds = %dec_label_pc_e7c8, %dec_label_pc_e818
  %v0_e818 = call i32 @function_db0c()
  %v3_e81c = mul i32 %v0_e818, 65536
  store i32 %v3_e81c, i32* %r0.global-to-local, align 4
  %v1_e824 = mul i32 %v0_e818, 256
  %v3_e828 = and i32 %v1_e824, 65280
  %tmp358 = udiv i32 %v0_e818, 256
  %v4_e82c = urem i32 %tmp358, 256
  %v5_e82c = or i32 %v4_e82c, %v3_e828
  store i32 %v5_e82c, i32* %r3.global-to-local, align 4
  %v2_e830 = icmp ugt i32 %v5_e82c, 1023
  store i1 %v2_e830, i1* %cpsr_c.global-to-local, align 1
  %v7_e830 = icmp eq i32 %v5_e82c, 1024
  store i1 %v7_e830, i1* %cpsr_z.global-to-local, align 1
  %v3_e838 = icmp ult i32 %v5_e82c, 1022
  br i1 %v3_e838, label %dec_label_pc_e818, label %dec_label_pc_e83c

dec_label_pc_e83c:                                ; preds = %dec_label_pc_e818
  %v5_e834.le = trunc i32 %v0_e818 to i16
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %r0.global-to-local, align 4
  %v2_e840 = load i8, i8* bitcast (i8** @global_var_18274.129 to i8*), align 4
  %v3_e840 = zext i8 %v2_e840 to i32
  %v1_e844 = and i32 %v3_e840, 240
  %v1_e848 = or i32 %v1_e844, 5
  store i32 %v1_e848, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_18274.129 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_18276.130 to i16*), align 4
  %v0_e868 = call i32 @function_db0c()
  %v1_e868 = trunc i32 %v0_e868 to i16
  %v3_e870 = load i8, i8* @global_var_18294.133, align 1
  store i32 ptrtoint (i16* @global_var_18288.132 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_e870, 16
  %v1_e87c = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_e884 = or i32 %v1_e87c, 80
  store i32 %v1_e884, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1827c.134 to i8*), align 4
  store i16 %v1_e868, i16* bitcast (i32* @global_var_18278.135 to i16*), align 4
  %v1_e894 = trunc i32 %v1_e884 to i8
  store i8 %v1_e894, i8* @global_var_18294.133, align 1
  store i8 6, i8* bitcast (i32* @global_var_1827d.136 to i8*), align 4
  %v4_e89c = sext i16 %v5_e834.le to i32
  store i32 %v4_e89c, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_1828a.137, align 2
  store i16 %v5_e834.le, i16* @global_var_18288.132, align 2
  %v0_e8ac = call i32 @function_db0c()
  %v1_e8ac = trunc i32 %v0_e8ac to i16
  %v3_e8b4 = load i8, i8* @global_var_18295.138, align 1
  %v4_e8b4 = zext i8 %v3_e8b4 to i32
  store i32 ptrtoint (i16* @global_var_18288.132 to i32), i32* %ip.global-to-local, align 4
  %v1_e8bc = or i32 %v4_e8b4, 2
  store i32 %v1_e8bc, i32* %r3.global-to-local, align 4
  store i16 %v1_e8ac, i16* bitcast (i32* @global_var_18296.139 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  %v1_e8c8 = trunc i32 %v1_e8bc to i8
  store i8 %v1_e8c8, i8* @global_var_18295.138, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e8d4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e8e4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16ffc.147 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_e8f4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_16ffc.147 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17004.149 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_e904 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([6 x i8]* @global_var_17004.149 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_e914 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  %v5_e924 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32* %r1.global-to-local, align 4
  %v0_e930 = load i32, i32* @r4, align 4
  store i32 %v0_e930, i32* %r2.global-to-local, align 4
  %v4_e934 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32 %v0_e930)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17014.153 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_e944 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([8 x i8]* @global_var_17014.153 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_e954 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17024.157 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_e964 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([9 x i8]* @global_var_17024.157 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e974 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17038.161 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_e984 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17038.161 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r1.global-to-local, align 4
  %v5_e994 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e9a4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r1.global-to-local, align 4
  %v5_e9b4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e9c4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17598.165 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e9d4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 ptrtoint (i32* @global_var_17598.165 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_e9e4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_e9f4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_ea04 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r1.global-to-local, align 4
  %v5_ea14 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17054.169 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ea24 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17054.169 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ea34 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r1.global-to-local, align 4
  %v5_ea44 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  %v0_ea50 = load i32, i32* @r4, align 4
  store i32 %v0_ea50, i32* %r2.global-to-local, align 4
  %v4_ea54 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 %v0_ea50)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ea64 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1706c.175 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_ea74 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_1706c.175 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ea84 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17078.179 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ea94 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([9 x i8]* @global_var_17078.179 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eaa4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17084.181 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eab4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17084.181 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_eac4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17598.165 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ead4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17598.165 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1708c.183 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_eae4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_1708c.183 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_eaf4 = call i32 @function_e2c0(i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_170a4.187 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_eb04 = call i32 @function_e2c0(i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32 ptrtoint ([7 x i8]* @global_var_170a4.187 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_170ac.189 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_eb14 = call i32 @function_e2c0(i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32 ptrtoint ([4 x i8]* @global_var_170ac.189 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_eb24 = call i32 @function_e2c0(i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32* %r1.global-to-local, align 4
  %v5_eb34 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eb44 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32* %r1.global-to-local, align 4
  %v5_eb54 = call i32 @function_e2c0(i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_eb64 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r1.global-to-local, align 4
  %v5_eb74 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17054.169 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_eb84 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 ptrtoint (i32* @global_var_17054.169 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  %v0_eb90 = load i32, i32* @r4, align 4
  store i32 %v0_eb90, i32* %r2.global-to-local, align 4
  %v4_eb94 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 %v0_eb90)
  store i32 ptrtoint (i32* @global_var_170d4.198 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_eba4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_170d4.198 to i32), i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_170dc.200 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17598.165 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_ebb4 = call i32 @function_e2c0(i32 ptrtoint ([14 x i8]* @global_var_170dc.200 to i32), i32 ptrtoint (i32* @global_var_17598.165 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_17084.181 to i32), i32* %r0.global-to-local, align 4
  %v0_ebbc = load i32, i32* @r4, align 4
  store i32 %v0_ebbc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17084.181 to i32), i32* %r1.global-to-local, align 4
  %v3_ebc4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_17084.181 to i32), i32 ptrtoint (i32* @global_var_17084.181 to i32), i32 %v0_ebbc)
  store i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32* %r0.global-to-local, align 4
  %v0_ebcc = load i32, i32* @r4, align 4
  store i32 %v0_ebcc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32* %r1.global-to-local, align 4
  %v3_ebd4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32 ptrtoint (i32* @global_var_1700c.151 to i32), i32 %v0_ebcc)
  store i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32* %r1.global-to-local, align 4
  %v5_ebe4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_ebf4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_170f4.204 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_ec04 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_170f4.204 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_170fc.206 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_ec14 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_170fc.206 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17104.208 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_ec24 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17104.208 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1710c.210 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_ec34 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([6 x i8]* @global_var_1710c.210 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17114.212 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ec44 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_17114.212 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1711c.214 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_ec54 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([6 x i8]* @global_var_1711c.214 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17124.216 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ec64 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([9 x i8]* @global_var_17124.216 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17130.218 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ec74 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17130.218 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17140.220 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ec84 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17140.220 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17150.222 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ec94 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([7 x i8]* @global_var_17150.222 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17158.224 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_eca4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_17158.224 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17160.226 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ecb4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([9 x i8]* @global_var_17160.226 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ecc4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1716c.228 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ecd4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([8 x i8]* @global_var_1716c.228 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17174.230 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ece4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17174.230 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17180.232 to i32), i32* %r1.global-to-local, align 4
  %v0_ecf0 = load i32, i32* @r4, align 4
  store i32 %v0_ecf0, i32* %r2.global-to-local, align 4
  %v4_ecf4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17180.232 to i32), i32 %v0_ecf0)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17188.234 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ed04 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17188.234 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17598.165 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ed14 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17598.165 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17054.169 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ed24 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17054.169 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17038.161 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ed34 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17038.161 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ed44 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17140.220 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_ed54 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17140.220 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17190.236 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ed64 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17190.236 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ed74 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_170a4.187 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ed84 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_170a4.187 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ed94 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1719c.240 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_eda4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_1719c.240 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_171a8.242 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_edb4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([6 x i8]* @global_var_171a8.242 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_171b0.244 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_edc4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([4 x i8]* @global_var_171b0.244 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171b4.246 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_edd4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171b4.246 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ede4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_171c8.250 to i32), i32* %r1.global-to-local, align 4
  %v0_edf0 = load i32, i32* @r4, align 4
  store i32 %v0_edf0, i32* %r2.global-to-local, align 4
  %v5_edf4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_171c8.250 to i32), i32 %v0_edf0)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_171d0.252 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ee04 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([9 x i8]* @global_var_171d0.252 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171dc.254 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ee14 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171dc.254 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171e4.256 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ee24 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171e4.256 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171ec.258 to i32), i32* %r1.global-to-local, align 4
  %v0_ee30 = load i32, i32* @r4, align 4
  store i32 %v0_ee30, i32* %r2.global-to-local, align 4
  %v4_ee34 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171ec.258 to i32), i32 %v0_ee30)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171f4.260 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ee44 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_171f4.260 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_171fc.262 to i32), i32* %r1.global-to-local, align 4
  %v0_ee50 = load i32, i32* @r4, align 4
  store i32 %v0_ee50, i32* %r2.global-to-local, align 4
  %v5_ee54 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_171fc.262 to i32), i32 %v0_ee50)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17204.264 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_ee64 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([8 x i8]* @global_var_17204.264 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1720c.266 to i32), i32* %r1.global-to-local, align 4
  %v0_ee70 = load i32, i32* @r4, align 4
  store i32 %v0_ee70, i32* %r2.global-to-local, align 4
  %v4_ee74 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_1720c.266 to i32), i32 %v0_ee70)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32* %r1.global-to-local, align 4
  %v0_ee80 = load i32, i32* @r4, align 4
  store i32 %v0_ee80, i32* %r2.global-to-local, align 4
  %v5_ee84 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32 %v0_ee80)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17214.268 to i32), i32* %r1.global-to-local, align 4
  %v0_ee90 = load i32, i32* @r4, align 4
  store i32 %v0_ee90, i32* %r2.global-to-local, align 4
  %v4_ee94 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_17214.268 to i32), i32 %v0_ee90)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1721c.270 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_eea4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_1721c.270 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17224.272 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_eeb4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([9 x i8]* @global_var_17224.272 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17230.274 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17230.274 to i32), i32* %r1.global-to-local, align 4
  %v5_eec4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17230.274 to i32), i32 ptrtoint ([6 x i8]* @global_var_17230.274 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32* %r1.global-to-local, align 4
  %v5_eed4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_eee4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17328.276 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_eef4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17328.276 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17238.278 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef04 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17238.278 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef14 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32* %r1.global-to-local, align 4
  %v5_ef24 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_17248.282 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_ef34 = call i32 @function_e2c0(i32 ptrtoint ([4 x i8]* @global_var_17248.282 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1724c.284 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17254.286 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_ef44 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_1724c.284 to i32), i32 ptrtoint ([7 x i8]* @global_var_17254.286 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1725c.288 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1725c.288 to i32), i32* %r1.global-to-local, align 4
  %v5_ef54 = call i32 @function_e2c0(i32 ptrtoint ([4 x i8]* @global_var_1725c.288 to i32), i32 ptrtoint ([4 x i8]* @global_var_1725c.288 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17260.290 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_ef64 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17260.290 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1726c.292 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_ef74 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_1726c.292 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32* %r0.global-to-local, align 4
  %v0_ef7c = load i32, i32* @r4, align 4
  store i32 %v0_ef7c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32* %r1.global-to-local, align 4
  %v5_ef84 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32 %v0_ef7c)
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32* %r1.global-to-local, align 4
  %v0_ef90 = load i32, i32* @r4, align 4
  store i32 %v0_ef90, i32* %r2.global-to-local, align 4
  %v4_ef94 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), i32 %v0_ef90)
  store i32 ptrtoint (i32* @global_var_1727c.296 to i32), i32* %r0.global-to-local, align 4
  %v0_ef9c = load i32, i32* @r4, align 4
  store i32 %v0_ef9c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1727c.296 to i32), i32* %r1.global-to-local, align 4
  %v3_efa4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_1727c.296 to i32), i32 ptrtoint (i32* @global_var_1727c.296 to i32), i32 %v0_ef9c)
  store i32 ptrtoint ([6 x i8]* @global_var_17284.298 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_efb4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17284.298 to i32), i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_efc4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_efd4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_efe4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_17294.302 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_eff4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_17294.302 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1729c.304 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172a8.306 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f004 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_1729c.304 to i32), i32 ptrtoint ([7 x i8]* @global_var_172a8.306 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_172b0.308 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_172b0.308 to i32), i32* %r1.global-to-local, align 4
  %v5_f014 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_172b0.308 to i32), i32 ptrtoint ([8 x i8]* @global_var_172b0.308 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32* %r1.global-to-local, align 4
  %v5_f024 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_172c0.312 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f034 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), i32 ptrtoint ([8 x i8]* @global_var_172c0.312 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_172c8.314 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_172d0.316 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f044 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_172c8.314 to i32), i32 ptrtoint ([10 x i8]* @global_var_172d0.316 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_172c8.314 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1721c.270 to i32), i32* %r1.global-to-local, align 4
  %v0_f050 = load i32, i32* @r4, align 4
  store i32 %v0_f050, i32* %r2.global-to-local, align 4
  %v5_f054 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_172c8.314 to i32), i32 ptrtoint ([7 x i8]* @global_var_1721c.270 to i32), i32 %v0_f050)
  store i32 ptrtoint ([5 x i8]* @global_var_172dc.318 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_172dc.318 to i32), i32* %r1.global-to-local, align 4
  %v5_f064 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_172dc.318 to i32), i32 ptrtoint ([5 x i8]* @global_var_172dc.318 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_172e4.320 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172ec.322 to i32), i32* %r1.global-to-local, align 4
  %v0_f070 = load i32, i32* @r4, align 4
  store i32 %v0_f070, i32* %r2.global-to-local, align 4
  %v5_f074 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_172e4.320 to i32), i32 ptrtoint ([7 x i8]* @global_var_172ec.322 to i32), i32 %v0_f070)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172ec.322 to i32), i32* %r1.global-to-local, align 4
  %v0_f080 = load i32, i32* @r4, align 4
  store i32 %v0_f080, i32* %r2.global-to-local, align 4
  %v5_f084 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([7 x i8]* @global_var_172ec.322 to i32), i32 %v0_f080)
  store i32 ptrtoint ([3 x i8]* @global_var_172bc.324 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32* %r1.global-to-local, align 4
  %v0_f090 = load i32, i32* @r4, align 4
  store i32 %v0_f090, i32* %r2.global-to-local, align 4
  %v5_f094 = call i32 @function_e2c0(i32 ptrtoint ([3 x i8]* @global_var_172bc.324 to i32), i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32 %v0_f090)
  store i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32* %r0.global-to-local, align 4
  %v0_f09c = load i32, i32* @r4, align 4
  store i32 %v0_f09c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32* %r1.global-to-local, align 4
  %v5_f0a4 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), i32 %v0_f09c)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f0b4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f0c4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17308.330 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_f0d4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([5 x i8]* @global_var_17308.330 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17310.332 to i32), i32* %r1.global-to-local, align 4
  %v0_f0e0 = load i32, i32* @r4, align 4
  store i32 %v0_f0e0, i32* %r2.global-to-local, align 4
  %v5_f0e4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([7 x i8]* @global_var_17310.332 to i32), i32 %v0_f0e0)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17318.334 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f0f4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17318.334 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17324.336 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f104 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17324.336 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1732c.338 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f114 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_1732c.338 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17338.340 to i32), i32* %r1.global-to-local, align 4
  %v0_f120 = load i32, i32* @r4, align 4
  store i32 %v0_f120, i32* %r2.global-to-local, align 4
  %v4_f124 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17338.340 to i32), i32 %v0_f120)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17340.342 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f134 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17340.342 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1734c.344 to i32), i32* %r1.global-to-local, align 4
  %v0_f140 = load i32, i32* @r4, align 4
  store i32 %v0_f140, i32* %r2.global-to-local, align 4
  %v4_f144 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_1734c.344 to i32), i32 %v0_f140)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17354.346 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f154 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17354.346 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1735c.348 to i32), i32* %r1.global-to-local, align 4
  %v0_f160 = load i32, i32* @r4, align 4
  store i32 %v0_f160, i32* %r2.global-to-local, align 4
  %v5_f164 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([7 x i8]* @global_var_1735c.348 to i32), i32 %v0_f160)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17364.350 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f174 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17364.350 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1736c.352 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f184 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_1736c.352 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17378.354 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f194 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint ([9 x i8]* @global_var_17378.354 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_f1a4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32* %r1.global-to-local, align 4
  %v5_f1b4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1738c.358 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1738c.358 to i32), i32* %r1.global-to-local, align 4
  %v5_f1c4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_1738c.358 to i32), i32 ptrtoint ([8 x i8]* @global_var_1738c.358 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_17394.360 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32* %r1.global-to-local, align 4
  %v0_f1d0 = load i32, i32* @r4, align 4
  store i32 %v0_f1d0, i32* %r2.global-to-local, align 4
  %v4_f1d4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_17394.360 to i32), i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), i32 %v0_f1d0)
  store i32 ptrtoint ([4 x i8]* @global_var_1739c.362 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f1e4 = call i32 @function_e2c0(i32 ptrtoint ([4 x i8]* @global_var_1739c.362 to i32), i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_173a0.364 to i32), i32* %r0.global-to-local, align 4
  %v0_f1ec = load i32, i32* @r4, align 4
  store i32 %v0_f1ec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_173a0.364 to i32), i32* %r1.global-to-local, align 4
  %v5_f1f4 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_173a0.364 to i32), i32 ptrtoint ([7 x i8]* @global_var_173a0.364 to i32), i32 %v0_f1ec)
  store i32 ptrtoint ([6 x i8]* @global_var_173a8.366 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_173b0.368 to i32), i32* %r1.global-to-local, align 4
  %v0_f200 = load i32, i32* @r4, align 4
  store i32 %v0_f200, i32* %r2.global-to-local, align 4
  %v4_f204 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_173a8.366 to i32), i32 ptrtoint (i32* @global_var_173b0.368 to i32), i32 %v0_f200)
  store i32 ptrtoint ([7 x i8]* @global_var_173b8.370 to i32), i32* %r0.global-to-local, align 4
  %v0_f20c = load i32, i32* @r4, align 4
  store i32 %v0_f20c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_173b8.370 to i32), i32* %r1.global-to-local, align 4
  %v5_f214 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_173b8.370 to i32), i32 ptrtoint ([7 x i8]* @global_var_173b8.370 to i32), i32 %v0_f20c)
  store i32 ptrtoint ([6 x i8]* @global_var_173c0.372 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_173c0.372 to i32), i32* %r1.global-to-local, align 4
  %v5_f224 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_173c0.372 to i32), i32 ptrtoint ([6 x i8]* @global_var_173c0.372 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_173c8.374 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_173c8.374 to i32), i32* %r1.global-to-local, align 4
  %v5_f234 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_173c8.374 to i32), i32 ptrtoint ([8 x i8]* @global_var_173c8.374 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_173d0.376 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_173d0.376 to i32), i32* %r1.global-to-local, align 4
  %v5_f244 = call i32 @function_e2c0(i32 ptrtoint ([4 x i8]* @global_var_173d0.376 to i32), i32 ptrtoint ([4 x i8]* @global_var_173d0.376 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_173d4.378 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_173d4.378 to i32), i32* %r1.global-to-local, align 4
  %v5_f254 = call i32 @function_e2c0(i32 ptrtoint ([4 x i8]* @global_var_173d4.378 to i32), i32 ptrtoint ([4 x i8]* @global_var_173d4.378 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_173d8.380 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_173d8.380 to i32), i32* %r1.global-to-local, align 4
  %v3_f264 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_173d8.380 to i32), i32 ptrtoint (i32* @global_var_173d8.380 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_173e0.382 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_173e0.382 to i32), i32* %r1.global-to-local, align 4
  %v5_f274 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_173e0.382 to i32), i32 ptrtoint ([5 x i8]* @global_var_173e0.382 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_173e8.384 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  %v0_f280 = load i32, i32* @r4, align 4
  store i32 %v0_f280, i32* %r2.global-to-local, align 4
  %v4_f284 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_173e8.384 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 %v0_f280)
  store i32 ptrtoint ([6 x i8]* @global_var_173f0.386 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f294 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_173f0.386 to i32), i32 ptrtoint (i32* @global_var_171c0.177 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_173f0.386 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17030.159 to i32), i32* %r1.global-to-local, align 4
  %v0_f2a0 = load i32, i32* @r4, align 4
  store i32 %v0_f2a0, i32* %r2.global-to-local, align 4
  %v4_f2a4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_173f0.386 to i32), i32 ptrtoint (i32* @global_var_17030.159 to i32), i32 %v0_f2a0)
  store i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r1.global-to-local, align 4
  %v0_f2b0 = load i32, i32* @r4, align 4
  store i32 %v0_f2b0, i32* %r2.global-to-local, align 4
  %v4_f2b4 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 %v0_f2b0)
  store i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32* %r0.global-to-local, align 4
  %v0_f2bc = load i32, i32* @r4, align 4
  store i32 %v0_f2bc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32* %r1.global-to-local, align 4
  %v5_f2c4 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), i32 %v0_f2bc)
  store i32 ptrtoint ([5 x i8]* @global_var_17400.390 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17400.390 to i32), i32* %r1.global-to-local, align 4
  %v5_f2d4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17400.390 to i32), i32 ptrtoint ([5 x i8]* @global_var_17400.390 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_17408.392 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_f2e4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17408.392 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_17410.394 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f2f4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_17410.394 to i32), i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_17418.396 to i32), i32* %r0.global-to-local, align 4
  %v0_f2fc = load i32, i32* @r4, align 4
  store i32 %v0_f2fc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17418.396 to i32), i32* %r1.global-to-local, align 4
  %v5_f304 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_17418.396 to i32), i32 ptrtoint ([7 x i8]* @global_var_17418.396 to i32), i32 %v0_f2fc)
  store i32 ptrtoint ([6 x i8]* @global_var_17420.398 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_17428.400 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_f314 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17420.398 to i32), i32 ptrtoint ([6 x i8]* @global_var_17428.400 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_17430.402 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17438.404 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_f324 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_17430.402 to i32), i32 ptrtoint ([5 x i8]* @global_var_17438.404 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_17440.406 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17440.406 to i32), i32* %r1.global-to-local, align 4
  %v3_f334 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_17440.406 to i32), i32 ptrtoint (i32* @global_var_17440.406 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_171d4.408 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17448.410 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f344 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_171d4.408 to i32), i32 ptrtoint (i32* @global_var_17448.410 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_17454.412 to i32), i32* %r0.global-to-local, align 4
  %v0_f34c = load i32, i32* @r4, align 4
  store i32 %v0_f34c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17454.412 to i32), i32* %r1.global-to-local, align 4
  %v5_f354 = call i32 @function_e2c0(i32 ptrtoint ([7 x i8]* @global_var_17454.412 to i32), i32 ptrtoint ([7 x i8]* @global_var_17454.412 to i32), i32 %v0_f34c)
  store i32 ptrtoint (i32* @global_var_1745c.414 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17464.416 to i32), i32* %r1.global-to-local, align 4
  %v0_f360 = load i32, i32* @r4, align 4
  store i32 %v0_f360, i32* %r2.global-to-local, align 4
  %v4_f364 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_1745c.414 to i32), i32 ptrtoint ([7 x i8]* @global_var_17464.416 to i32), i32 %v0_f360)
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1746c.418 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f374 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 ptrtoint ([9 x i8]* @global_var_1746c.418 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_17478.420 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_f384 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 ptrtoint ([9 x i8]* @global_var_17478.420 to i32), i32 8)
  %v0_f388 = load i32, i32* @r4, align 4
  store i32 %v0_f388, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17484.422 to i32), i32* %r1.global-to-local, align 4
  %v4_f394 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_174cc.141 to i32), i32 ptrtoint ([7 x i8]* @global_var_17484.422 to i32), i32 %v0_f388)
  store i32 ptrtoint (i32* @global_var_1748c.424 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_17498.426 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_f3a4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_1748c.424 to i32), i32 ptrtoint ([5 x i8]* @global_var_17498.426 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_174a0.428 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_174a0.428 to i32), i32* %r1.global-to-local, align 4
  %v5_f3b4 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_174a0.428 to i32), i32 ptrtoint ([9 x i8]* @global_var_174a0.428 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_174ac.430 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_174ac.430 to i32), i32* %r1.global-to-local, align 4
  %v5_f3c4 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_174ac.430 to i32), i32 ptrtoint ([9 x i8]* @global_var_174ac.430 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_174b8.432 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_174b8.432 to i32), i32* %r1.global-to-local, align 4
  %v5_f3d4 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_174b8.432 to i32), i32 ptrtoint ([9 x i8]* @global_var_174b8.432 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32* %r1.global-to-local, align 4
  %v3_f3e4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32 ptrtoint (i32* @global_var_171bc.248 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_174c4.434 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174c4.434 to i32), i32* %r1.global-to-local, align 4
  %v3_f3f4 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_174c4.434 to i32), i32 ptrtoint (i32* @global_var_174c4.434 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_174d0.436 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_174d0.436 to i32), i32* %r1.global-to-local, align 4
  %v5_f404 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_174d0.436 to i32), i32 ptrtoint ([9 x i8]* @global_var_174d0.436 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_174dc.438 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_174dc.438 to i32), i32* %r1.global-to-local, align 4
  %v5_f414 = call i32 @function_e2c0(i32 ptrtoint ([9 x i8]* @global_var_174dc.438 to i32), i32 ptrtoint ([9 x i8]* @global_var_174dc.438 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_174e8.440 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f424 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_174e8.440 to i32), i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_174f0.442 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_f434 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_174f0.442 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_173a8.366 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17500.444 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_f444 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_173a8.366 to i32), i32 ptrtoint (i32* @global_var_17500.444 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_17510.446 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1751c.448 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f454 = call i32 @function_e2c0(i32 ptrtoint ([10 x i8]* @global_var_17510.446 to i32), i32 ptrtoint (i32* @global_var_1751c.448 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_17528.450 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_17534.452 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f464 = call i32 @function_e2c0(i32 ptrtoint ([10 x i8]* @global_var_17528.450 to i32), i32 ptrtoint ([11 x i8]* @global_var_17534.452 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_17540.454 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f474 = call i32 @function_e2c0(i32 ptrtoint ([10 x i8]* @global_var_17540.454 to i32), i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1754c.456 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_f484 = call i32 @function_e2c0(i32 ptrtoint ([10 x i8]* @global_var_1754c.456 to i32), i32 ptrtoint (i32* @global_var_172fc.328 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1748c.424 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17558.458 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_f494 = call i32 @function_e2c0(i32 ptrtoint (i32* @global_var_1748c.424 to i32), i32 ptrtoint (i32* @global_var_17558.458 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_17564.460 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_17574.462 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f4a4 = call i32 @function_e2c0(i32 ptrtoint ([13 x i8]* @global_var_17564.460 to i32), i32 ptrtoint ([13 x i8]* @global_var_17574.462 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17584.464 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_f4b4 = call i32 @function_e2c0(i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), i32 ptrtoint (i32* @global_var_17584.464 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1758c.466 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_f4c4 = call i32 @function_e2c0(i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), i32 ptrtoint ([7 x i8]* @global_var_1758c.466 to i32), i32 15)
  store i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17594.468 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_f4d4 = call i32 @function_e2c0(i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), i32 ptrtoint (i32* @global_var_17594.468 to i32), i32 20)
  store i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_17594.468 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_f4e4 = call i32 @function_e2c0(i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), i32 ptrtoint (i32* @global_var_17594.468 to i32), i32 14)
  store i32 %v4_f4e4, i32* %r0.global-to-local, align 4
  %v2_f4ec = ptrtoint i32* %stack_var_-1866 to i32
  br label %dec_label_pc_f4f4

dec_label_pc_f4f4:                                ; preds = %dec_label_pc_fc48, %dec_label_pc_e83c
  %stack_var_-1880.0 = phi i32 [ %tmp320, %dec_label_pc_e83c ], [ %stack_var_-1880.2, %dec_label_pc_fc48 ]
  %v0_f800 = phi i32 [ %v2_f4ec, %dec_label_pc_e83c ], [ %stack_var_-1888.1, %dec_label_pc_fc48 ]
  %stack_var_-1884.0 = phi i16 [ %v5_e834.le, %dec_label_pc_e83c ], [ %stack_var_-1884.1, %dec_label_pc_fc48 ]
  store i32 ptrtoint (i32* @global_var_182a4.114 to i32), i32* %r0.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v2_f4fc = load i32, i32* @global_var_182a4.114, align 4
  store i32 %v2_f4fc, i32* @r4, align 4
  %v3_f500 = icmp uge i32 %stack_var_-1880.0, %v2_f4fc
  store i1 %v3_f500, i1* %cpsr_c.global-to-local, align 1
  %v9_f500 = icmp eq i32 %stack_var_-1880.0, %v2_f4fc
  store i1 %v9_f500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f500, label %dec_label_pc_f784, label %dec_label_pc_f508

dec_label_pc_f508:                                ; preds = %dec_label_pc_f4f4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f50c = ptrtoint i32* %stack_var_-104 to i32
  store i32 0, i32* %stack_var_-52, align 4
  %v2_f514 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_f518

dec_label_pc_f518:                                ; preds = %bb384, %dec_label_pc_f508
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f52c = call i32 @function_db0c()
  %v1_f52c = trunc i32 %v0_f52c to i16
  store i32 %v0_f52c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %ip.global-to-local, align 4
  %v2_f538 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_f538, i32* %r3.global-to-local, align 4
  store i16 %v1_f52c, i16* bitcast (i32* @global_var_18278.135 to i16*), align 4
  store i32 %v2_f538, i32* @global_var_18280.469, align 4
  br label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f618, %dec_label_pc_f574, %dec_label_pc_f64c, %dec_label_pc_f640, %dec_label_pc_f634, %dec_label_pc_f628, %.thread29, %bb377, %bb376, %bb375, %bb374, %bb373, %dec_label_pc_f610, %dec_label_pc_f608, %bb369, %dec_label_pc_f5d8, %dec_label_pc_f5b4, %bb362, %dec_label_pc_f584, %bb361, %dec_label_pc_f56c, %bb360, %bb379, %dec_label_pc_f518
  %v0_f544 = call i32 @function_db0c()
  store i32 %v0_f544, i32* %r0.global-to-local, align 4
  %v1_f548 = urem i32 %v0_f544, 256
  store i32 %v1_f548, i32* %r1.global-to-local, align 4
  %v3_f54c = udiv i32 %v0_f544, 256
  store i32 %v3_f54c, i32* %r3.global-to-local, align 4
  %v3_f550 = udiv i32 %v0_f544, 65536
  store i32 %v3_f550, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f554 = icmp eq i32 %v1_f548, 0
  store i1 %v2_f554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f554, label %bb360, label %bb359

bb359:                                            ; preds = %dec_label_pc_f544
  %v3_f558 = icmp ugt i32 %v1_f548, 126
  store i1 %v3_f558, i1* %cpsr_c.global-to-local, align 1
  %v8_f558 = icmp eq i32 %v1_f548, 127
  store i1 %v8_f558, i1* %cpsr_z.global-to-local, align 1
  br label %bb360

bb360:                                            ; preds = %dec_label_pc_f544, %bb359
  %v0_f568 = phi i1 [ true, %dec_label_pc_f544 ], [ %v8_f558, %bb359 ]
  %v1_f55c = urem i32 %v3_f54c, 256
  store i32 %v1_f55c, i32* %ip.global-to-local, align 4
  %v1_f560 = urem i32 %v3_f550, 256
  store i32 %v1_f560, i32* %r2.global-to-local, align 4
  %v1_f564 = and i32 %v0_f544, 8388608
  %v2_f564 = icmp ne i32 %v1_f564, 0
  store i1 %v2_f564, i1* %cpsr_c.global-to-local, align 1
  %v3_f564 = udiv i32 %v0_f544, 16777216
  store i32 %v3_f564, i32* %r0.global-to-local, align 4
  br i1 %v0_f568, label %dec_label_pc_f544, label %dec_label_pc_f56c

dec_label_pc_f56c:                                ; preds = %bb360
  %v2_f56c = icmp ugt i32 %v1_f548, 2
  store i1 %v2_f56c, i1* %cpsr_c.global-to-local, align 1
  %v7_f56c = icmp eq i32 %v1_f548, 3
  store i1 %v7_f56c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f56c, label %dec_label_pc_f544, label %dec_label_pc_f574

dec_label_pc_f574:                                ; preds = %dec_label_pc_f56c
  %v1_f574 = add nsw i32 %v1_f548, -15
  store i32 %v1_f574, i32* %r3.global-to-local, align 4
  %v2_f578 = icmp ugt i32 %v1_f548, 55
  store i1 %v2_f578, i1* %cpsr_c.global-to-local, align 1
  %v7_f578 = icmp eq i32 %v1_f548, 56
  store i1 %v7_f578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f578, label %dec_label_pc_f544, label %bb361

bb361:                                            ; preds = %dec_label_pc_f574
  %v3_f57c = icmp ne i32 %v1_f574, 0
  store i1 %v3_f57c, i1* %cpsr_c.global-to-local, align 1
  %v8_f57c = icmp eq i32 %v1_f574, 1
  store i1 %v8_f57c, i1* %cpsr_z.global-to-local, align 1
  %v2_f580 = xor i1 %v3_f57c, true
  %v3_f580 = or i1 %v8_f57c, %v2_f580
  br i1 %v3_f580, label %dec_label_pc_f544, label %dec_label_pc_f584

dec_label_pc_f584:                                ; preds = %bb361
  %v2_f584 = icmp ugt i32 %v1_f548, 9
  store i1 %v2_f584, i1* %cpsr_c.global-to-local, align 1
  %v7_f584 = icmp eq i32 %v1_f548, 10
  store i1 %v7_f584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f584, label %dec_label_pc_f544, label %dec_label_pc_f58c

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f584
  %v2_f58c = icmp ugt i32 %v1_f548, 191
  store i1 %v2_f58c, i1* %cpsr_c.global-to-local, align 1
  %v7_f58c = icmp eq i32 %v1_f548, 192
  store i1 %v7_f58c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f58c, label %bb362, label %dec_label_pc_f598

bb362:                                            ; preds = %dec_label_pc_f58c
  %v3_f590 = icmp ugt i32 %v1_f55c, 167
  store i1 %v3_f590, i1* %cpsr_c.global-to-local, align 1
  %v8_f590 = icmp eq i32 %v1_f55c, 168
  store i1 %v8_f590, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f590, label %dec_label_pc_f544, label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f58c, %bb362
  %v7_f598 = icmp eq i32 %v1_f548, 172
  %.438 = zext i1 %v7_f598 to i32
  store i32 %.438, i32* %r3.global-to-local, align 4
  %v2_f5a4 = icmp ugt i32 %v1_f55c, 14
  store i1 %v2_f5a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5a4 = icmp eq i32 %v1_f55c, 15
  store i1 %v7_f5a4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5a8 = xor i1 %v2_f5a4, true
  %v3_f5a8 = or i1 %v7_f5a4, %v2_f5a8
  br i1 %v3_f5a8, label %.thread7, label %bb365

.thread7:                                         ; preds = %dec_label_pc_f598
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5bc

bb365:                                            ; preds = %dec_label_pc_f598
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5ac = icmp eq i1 %v7_f598, false
  store i1 %v2_f5ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5ac, label %dec_label_pc_f5bc, label %dec_label_pc_f5b4

dec_label_pc_f5b4:                                ; preds = %bb365
  %v2_f5b4 = icmp ugt i32 %v1_f55c, 30
  store i1 %v2_f5b4, i1* %cpsr_c.global-to-local, align 1
  %v7_f5b4 = icmp eq i32 %v1_f55c, 31
  store i1 %v7_f5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5b8 = xor i1 %v2_f5b4, true
  %v3_f5b8 = or i1 %v7_f5b4, %v2_f5b8
  br i1 %v3_f5b8, label %dec_label_pc_f544, label %dec_label_pc_f5bc

dec_label_pc_f5bc:                                ; preds = %.thread7, %dec_label_pc_f5b4, %bb365
  %v7_f5bc = icmp eq i32 %v1_f548, 100
  %.439 = zext i1 %v7_f5bc to i32
  store i32 %.439, i32* %r3.global-to-local, align 4
  %v2_f5c8 = icmp ugt i32 %v1_f55c, 62
  store i1 %v2_f5c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c8 = icmp eq i32 %v1_f55c, 63
  store i1 %v7_f5c8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5cc = xor i1 %v2_f5c8, true
  %v3_f5cc = or i1 %v7_f5c8, %v2_f5cc
  br i1 %v3_f5cc, label %.thread12, label %bb368

.thread12:                                        ; preds = %dec_label_pc_f5bc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f5e0

bb368:                                            ; preds = %dec_label_pc_f5bc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5d0 = icmp eq i1 %v7_f5bc, false
  store i1 %v2_f5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f5d0, label %dec_label_pc_f5e0, label %dec_label_pc_f5d8

dec_label_pc_f5d8:                                ; preds = %bb368
  %v2_f5d8 = icmp ugt i32 %v1_f55c, 125
  store i1 %v2_f5d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5d8 = icmp eq i32 %v1_f55c, 126
  store i1 %v7_f5d8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5dc = xor i1 %v2_f5d8, true
  %v3_f5dc = or i1 %v7_f5d8, %v2_f5dc
  br i1 %v3_f5dc, label %dec_label_pc_f544, label %dec_label_pc_f5e0

dec_label_pc_f5e0:                                ; preds = %.thread12, %dec_label_pc_f5d8, %bb368
  %v2_f5e0 = icmp ugt i32 %v1_f548, 168
  store i1 %v2_f5e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5e0 = icmp eq i32 %v1_f548, 169
  store i1 %v7_f5e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f5e0, label %bb369, label %dec_label_pc_f5ec

bb369:                                            ; preds = %dec_label_pc_f5e0
  %v3_f5e4 = icmp eq i32 %v1_f55c, 255
  store i1 %v3_f5e4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_f5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f5e4, label %dec_label_pc_f544, label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f5e0, %bb369
  %v7_f5ec = icmp eq i32 %v1_f548, 198
  %.440 = zext i1 %v7_f5ec to i32
  store i32 %.440, i32* %r3.global-to-local, align 4
  %v2_f5f8 = icmp ugt i32 %v1_f55c, 16
  store i1 %v2_f5f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f8 = icmp eq i32 %v1_f55c, 17
  store i1 %v7_f5f8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5fc = xor i1 %v2_f5f8, true
  %v3_f5fc = or i1 %v7_f5f8, %v2_f5fc
  br i1 %v3_f5fc, label %.thread18, label %bb372

.thread18:                                        ; preds = %dec_label_pc_f5ec
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f610

bb372:                                            ; preds = %dec_label_pc_f5ec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f600 = icmp eq i1 %v7_f5ec, false
  store i1 %v2_f600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f600, label %dec_label_pc_f610, label %dec_label_pc_f608

dec_label_pc_f608:                                ; preds = %bb372
  %v2_f608 = icmp ugt i32 %v1_f55c, 18
  store i1 %v2_f608, i1* %cpsr_c.global-to-local, align 1
  %v7_f608 = icmp eq i32 %v1_f55c, 19
  store i1 %v7_f608, i1* %cpsr_z.global-to-local, align 1
  %v2_f60c = xor i1 %v2_f608, true
  %v3_f60c = or i1 %v7_f608, %v2_f60c
  br i1 %v3_f60c, label %dec_label_pc_f544, label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %.thread18, %dec_label_pc_f608, %bb372
  %v2_f610 = icmp ugt i32 %v1_f548, 222
  store i1 %v2_f610, i1* %cpsr_c.global-to-local, align 1
  %v7_f610 = icmp eq i32 %v1_f548, 223
  store i1 %v7_f610, i1* %cpsr_z.global-to-local, align 1
  %v2_f614 = xor i1 %v7_f610, true
  %v3_f614 = and i1 %v2_f610, %v2_f614
  br i1 %v3_f614, label %dec_label_pc_f544, label %dec_label_pc_f618

dec_label_pc_f618:                                ; preds = %dec_label_pc_f610
  %v1_f618 = add nsw i32 %v1_f548, -6
  store i32 %v1_f618, i32* %r3.global-to-local, align 4
  %v2_f61c = icmp ugt i32 %v1_f548, 10
  store i1 %v2_f61c, i1* %cpsr_c.global-to-local, align 1
  %v7_f61c = icmp eq i32 %v1_f548, 11
  store i1 %v7_f61c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f61c, label %dec_label_pc_f544, label %bb373

bb373:                                            ; preds = %dec_label_pc_f618
  %v3_f620 = icmp ne i32 %v1_f618, 0
  store i1 %v3_f620, i1* %cpsr_c.global-to-local, align 1
  %v8_f620 = icmp eq i32 %v1_f618, 1
  store i1 %v8_f620, i1* %cpsr_z.global-to-local, align 1
  %v2_f624 = xor i1 %v3_f620, true
  %v3_f624 = or i1 %v8_f620, %v2_f624
  br i1 %v3_f624, label %dec_label_pc_f544, label %dec_label_pc_f628

dec_label_pc_f628:                                ; preds = %bb373
  %v2_f628 = icmp ugt i32 %v1_f548, 21
  store i1 %v2_f628, i1* %cpsr_c.global-to-local, align 1
  %v7_f628 = icmp eq i32 %v1_f548, 22
  store i1 %v7_f628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f628, label %dec_label_pc_f544, label %bb374

bb374:                                            ; preds = %dec_label_pc_f628
  %v3_f62c = icmp ugt i32 %v1_f548, 20
  store i1 %v3_f62c, i1* %cpsr_c.global-to-local, align 1
  %v8_f62c = icmp eq i32 %v1_f548, 21
  store i1 %v8_f62c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f62c, label %dec_label_pc_f544, label %dec_label_pc_f634

dec_label_pc_f634:                                ; preds = %bb374
  %v2_f634 = icmp ugt i32 %v1_f548, 27
  store i1 %v2_f634, i1* %cpsr_c.global-to-local, align 1
  %v7_f634 = icmp eq i32 %v1_f548, 28
  store i1 %v7_f634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f634, label %dec_label_pc_f544, label %bb375

bb375:                                            ; preds = %dec_label_pc_f634
  %v3_f638 = icmp ugt i32 %v1_f548, 25
  store i1 %v3_f638, i1* %cpsr_c.global-to-local, align 1
  %v8_f638 = icmp eq i32 %v1_f548, 26
  store i1 %v8_f638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f638, label %dec_label_pc_f544, label %dec_label_pc_f640

dec_label_pc_f640:                                ; preds = %bb375
  %v2_f640 = icmp ugt i32 %v1_f548, 29
  store i1 %v2_f640, i1* %cpsr_c.global-to-local, align 1
  %v7_f640 = icmp eq i32 %v1_f548, 30
  store i1 %v7_f640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f640, label %dec_label_pc_f544, label %bb376

bb376:                                            ; preds = %dec_label_pc_f640
  %v3_f644 = icmp ugt i32 %v1_f548, 28
  store i1 %v3_f644, i1* %cpsr_c.global-to-local, align 1
  %v8_f644 = icmp eq i32 %v1_f548, 29
  store i1 %v8_f644, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f644, label %dec_label_pc_f544, label %dec_label_pc_f64c

dec_label_pc_f64c:                                ; preds = %bb376
  %v2_f64c = icmp ugt i32 %v1_f548, 54
  store i1 %v2_f64c, i1* %cpsr_c.global-to-local, align 1
  %v7_f64c = icmp eq i32 %v1_f548, 55
  store i1 %v7_f64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f64c, label %dec_label_pc_f544, label %bb377

bb377:                                            ; preds = %dec_label_pc_f64c
  %v3_f650 = icmp ugt i32 %v1_f548, 32
  store i1 %v3_f650, i1* %cpsr_c.global-to-local, align 1
  %v8_f650 = icmp eq i32 %v1_f548, 33
  store i1 %v8_f650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f650, label %dec_label_pc_f544, label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %bb377
  %v2_f658 = icmp ugt i32 %v1_f548, 214
  store i1 %v2_f658, i1* %cpsr_c.global-to-local, align 1
  %v7_f658 = icmp eq i32 %v1_f548, 215
  store i1 %v7_f658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f658, label %.thread29, label %bb378

bb378:                                            ; preds = %dec_label_pc_f658
  %v3_f65c = icmp ugt i32 %v1_f548, 213
  store i1 %v3_f65c, i1* %cpsr_c.global-to-local, align 1
  %v8_f65c = icmp eq i32 %v1_f548, 214
  store i1 %v8_f65c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f65c, label %bb379, label %dec_label_pc_f66c

.thread29:                                        ; preds = %dec_label_pc_f658
  br label %dec_label_pc_f544

bb379:                                            ; preds = %bb378
  br label %dec_label_pc_f544

dec_label_pc_f66c:                                ; preds = %bb378
  %v5_f678 = call i32 @llvm.bswap.i32(i32 %v0_f544)
  store i32 %v5_f678, i32* %r3.global-to-local, align 4
  %tmp380 = and i32 %v0_f544, 65280
  %tmp381 = call i32 @llvm.bswap.i32(i32 %tmp380)
  %v3_f680 = udiv i32 %v5_f678, 16777216
  %v1_f684 = and i32 %v5_f678, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v4_f688 = udiv i32 %tmp381, 256
  %v4_f68c = mul i32 %v1_f684, 256
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* @r0, align 4
  %tmp382 = and i32 %v0_f544, 65536
  %v3_f694 = icmp ne i32 %tmp382, 0
  store i1 %v3_f694, i1* %cpsr_c.global-to-local, align 1
  %v4_f694 = mul i32 %v5_f678, 16777216
  %v5_f688 = or i32 %v4_f694, %v3_f680
  %v5_f68c = or i32 %v5_f688, %v4_f688
  %v5_f694 = or i32 %v5_f68c, %v4_f68c
  store i32 %v5_f694, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_1827e.470 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_f694, i32* @global_var_18284.471, align 4
  %v3_f6a4 = call i32 @function_bf78(i32 ptrtoint (i8** @global_var_18274.129 to i32), i32 20)
  %v4_f6a4 = trunc i32 %v3_f6a4 to i16
  store i32 %v3_f6a4, i32* %r0.global-to-local, align 4
  %v3_f6a8 = load i32, i32* %stack_var_-52, align 4
  %v5_f6b8 = sdiv i32 %v3_f6a8, 10
  %v3_f6bc = mul i32 %v5_f6b8, 8
  store i32 %v3_f6bc, i32* %r2.global-to-local, align 4
  %v2_f6c4 = mul i32 %v5_f6b8, 10
  store i32 %v2_f6c4, i32* %r3.global-to-local, align 4
  %v3_f6c8 = icmp uge i32 %v3_f6a8, %v2_f6c4
  store i1 %v3_f6c8, i1* %cpsr_c.global-to-local, align 1
  %v9_f6c8 = icmp eq i32 %v3_f6a8, %v2_f6c4
  store i1 %v9_f6c8, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %r1.global-to-local, align 4
  br i1 %v9_f6c8, label %bb383, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_f66c
  store i32 ptrtoint (i16* @global_var_18288.132 to i32), i32* %r3.global-to-local, align 4
  store i16 %v4_f6a4, i16* bitcast (i32* @global_var_1827e.470 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %r0.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_18288.132 to i32), i32 2) to i16*), align 2
  %v4_f6e8 = load i32, i32* @global_var_18284.471, align 4
  store i32 %v4_f6e8, i32* @global_var_1828c.473, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_f66c
  store i16 %v4_f6a4, i16* bitcast (i32* @global_var_1827e.470 to i16*), align 4
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %r0.global-to-local, align 4
  %v4_f6e835 = load i32, i32* @global_var_18284.471, align 4
  store i32 ptrtoint (i16* @global_var_18288.132 to i32), i32* %r2.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i32 %v4_f6e835, i32* @global_var_1828c.473, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_18288.132 to i32), i32 2) to i16*), align 2
  br label %bb384

bb384:                                            ; preds = %.thread41, %bb383
  store i16 0, i16* bitcast (i32* @global_var_18298.474 to i16*), align 4
  store i32 ptrtoint (i16* @global_var_18288.132 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v6_f714 = call i32 @function_bfc8(i32 ptrtoint (i8** @global_var_18274.129 to i32), i32 sext (i16 ptrtoint (i16* @global_var_18288.132 to i16) to i32), i32 5120, i32 20)
  %v7_f714 = trunc i32 %v6_f714 to i16
  store i32 ptrtoint (i8** @global_var_18274.129 to i32), i32* %r1.global-to-local, align 4
  %v2_f720 = load i32, i32* @global_var_1a2f8.127, align 4
  store i16 %v7_f714, i16* bitcast (i32* @global_var_18298.474 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  store i32 %v2_f50c, i32* %ip.global-to-local, align 4
  store i32 %v2_f720, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_f768 = call i32 @function_123e0(i32 %v2_f720, i32 ptrtoint (i8** @global_var_18274.129 to i32), i32 40, i32 16384, i32 %v2_f514, i32 16)
  store i32 %v7_f768, i32* %r0.global-to-local, align 4
  %v3_f76c = load i32, i32* %stack_var_-52, align 4
  %v1_f770 = add i32 %v3_f76c, 1
  store i32 %v1_f770, i32* %r3.global-to-local, align 4
  %v3_f774 = icmp ugt i32 %v1_f770, 383
  store i1 %v3_f774, i1* %cpsr_c.global-to-local, align 1
  %v8_f774 = icmp eq i32 %v1_f770, 384
  store i1 %v8_f774, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f770, i32* %stack_var_-52, align 4
  %v5_f77c = icmp slt i32 %v1_f770, 384
  br i1 %v5_f77c, label %dec_label_pc_f518, label %dec_label_pc_f780

dec_label_pc_f780:                                ; preds = %bb384
  %v0_f780 = load i32, i32* @r4, align 4
  br label %dec_label_pc_f784

dec_label_pc_f784:                                ; preds = %dec_label_pc_f4f4, %dec_label_pc_f780
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_f4f4 ], [ %v0_f780, %dec_label_pc_f780 ]
  %v0_f784 = call i32 @function_1207c()
  store i32 %v0_f800, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_f794 = add i32 %v0_f800, 20
  store i32 %v1_f794, i32* @r4, align 4
  %v2_f7a0 = inttoptr i32 %v0_f784 to i32*
  %v1_f7f0 = add i32 %v0_f800, 16
  %v2_f7f0 = inttoptr i32 %v1_f7f0 to i32*
  %v4_f82c = sext i16 %stack_var_-1884.0 to i32
  %v1_f800 = add i32 %v0_f800, 9
  %v2_f800 = inttoptr i32 %v1_f800 to i8*
  %v1_f894 = add i32 %v0_f800, 12
  %v2_f894 = inttoptr i32 %v1_f894 to i32*
  br label %dec_label_pc_f798

dec_label_pc_f798:                                ; preds = %dec_label_pc_f85c, %dec_label_pc_f854, %dec_label_pc_f84c, %dec_label_pc_f828, %dec_label_pc_f818, %dec_label_pc_f800, %dec_label_pc_f7e8, %dec_label_pc_f844, %dec_label_pc_f838, %dec_label_pc_f7e0, %dec_label_pc_f914, %dec_label_pc_f784
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_f7a0, align 4
  %v2_f7a8 = load i32, i32* @global_var_1a2f8.127, align 4
  store i32 %v2_f7a8, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v0_f800, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f7bc = load i32, i32* %ip.global-to-local, align 4
  %v6_f7c4 = call i32 @function_1236c(i32 %v2_f7a8, i32 %v0_f800, i32 1514, i32 16384, i32 %v0_f7bc, i32 %v0_f7bc)
  store i32 %v6_f7c4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f7c8 = icmp eq i32 %v6_f7c4, 0
  store i1 %v2_f7c8, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v6_f7c4, 1
  br i1 %tmp385, label %dec_label_pc_f938, label %dec_label_pc_f7d0

dec_label_pc_f7d0:                                ; preds = %dec_label_pc_f798
  store i32 %v0_f784, i32* %ip.global-to-local, align 4
  %v2_f7d4 = load i32, i32* %v2_f7a0, align 4
  store i32 %v2_f7d4, i32* %r3.global-to-local, align 4
  %v2_f7d8 = icmp ugt i32 %v2_f7d4, 10
  store i1 %v2_f7d8, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d8 = icmp eq i32 %v2_f7d4, 11
  store i1 %v7_f7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7d8, label %dec_label_pc_f938, label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7d0
  %v2_f7e0 = icmp ugt i32 %v6_f7c4, 38
  store i1 %v2_f7e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7e0 = icmp eq i32 %v6_f7c4, 39
  store i1 %v7_f7e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f7e4 = xor i1 %v2_f7e0, true
  %v3_f7e4 = or i1 %v7_f7e0, %v2_f7e4
  br i1 %v3_f7e4, label %dec_label_pc_f798, label %dec_label_pc_f7e8

dec_label_pc_f7e8:                                ; preds = %dec_label_pc_f7e0
  store i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), i32* %r0.global-to-local, align 4
  %v3_f7f0 = load i32, i32* %v2_f7f0, align 4
  store i32 %v3_f7f0, i32* %r2.global-to-local, align 4
  %v2_f7f4 = load i32, i32* @global_var_1a2d8.43, align 4
  store i32 %v2_f7f4, i32* %r3.global-to-local, align 4
  %v3_f7f8 = icmp uge i32 %v3_f7f0, %v2_f7f4
  store i1 %v3_f7f8, i1* %cpsr_c.global-to-local, align 1
  %v9_f7f8 = icmp eq i32 %v3_f7f0, %v2_f7f4
  store i1 %v9_f7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f7f8, label %dec_label_pc_f800, label %dec_label_pc_f798

dec_label_pc_f800:                                ; preds = %dec_label_pc_f7e8
  %v3_f800 = load i8, i8* %v2_f800, align 1
  %v4_f800 = zext i8 %v3_f800 to i32
  store i32 %v4_f800, i32* %r3.global-to-local, align 4
  %v2_f804 = icmp ugt i8 %v3_f800, 5
  store i1 %v2_f804, i1* %cpsr_c.global-to-local, align 1
  %v7_f804 = icmp eq i8 %v3_f800, 6
  store i1 %v7_f804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f804, label %dec_label_pc_f80c, label %dec_label_pc_f798

dec_label_pc_f80c:                                ; preds = %dec_label_pc_f800
  %v0_f80c = load i32, i32* @r4, align 4
  %v1_f80c = inttoptr i32 %v0_f80c to i16*
  %v2_f80c = load i16, i16* %v1_f80c, align 2
  %v3_f80c = zext i16 %v2_f80c to i32
  store i32 %v3_f80c, i32* %ip.global-to-local, align 4
  %v2_f810 = icmp ugt i16 %v2_f80c, 5887
  store i1 %v2_f810, i1* %cpsr_c.global-to-local, align 1
  %v7_f810 = icmp eq i16 %v2_f80c, 5888
  store i1 %v7_f810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f810, label %dec_label_pc_f828, label %dec_label_pc_f818

dec_label_pc_f818:                                ; preds = %dec_label_pc_f80c
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_f820 = icmp ugt i16 %v2_f80c, 4872
  store i1 %v3_f820, i1* %cpsr_c.global-to-local, align 1
  %v9_f820 = icmp eq i16 %v2_f80c, 4873
  store i1 %v9_f820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f820, label %dec_label_pc_f828, label %dec_label_pc_f798

dec_label_pc_f828:                                ; preds = %dec_label_pc_f818, %dec_label_pc_f80c
  %v1_f828 = add i32 %v0_f80c, 2
  %v2_f828 = inttoptr i32 %v1_f828 to i16*
  %v3_f828 = load i16, i16* %v2_f828, align 2
  %v4_f828 = zext i16 %v3_f828 to i32
  store i32 %v4_f828, i32* %r3.global-to-local, align 4
  store i32 %v4_f82c, i32* %r1.global-to-local, align 4
  %v3_f830 = icmp uge i32 %v4_f828, %v4_f82c
  store i1 %v3_f830, i1* %cpsr_c.global-to-local, align 1
  %v9_f830 = icmp eq i32 %v4_f828, %v4_f82c
  store i1 %v9_f830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f830, label %dec_label_pc_f838, label %dec_label_pc_f798

dec_label_pc_f838:                                ; preds = %dec_label_pc_f828
  %v1_f838 = add i32 %v0_f80c, 13
  %v2_f838 = inttoptr i32 %v1_f838 to i8*
  %v3_f838 = load i8, i8* %v2_f838, align 1
  %v4_f838 = zext i8 %v3_f838 to i32
  store i32 %v4_f838, i32* %r3.global-to-local, align 4
  %v1_f83c = and i32 %v4_f838, 2
  %v2_f83c = icmp eq i32 %v1_f83c, 0
  store i1 %v2_f83c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f83c, label %dec_label_pc_f798, label %dec_label_pc_f844

dec_label_pc_f844:                                ; preds = %dec_label_pc_f838
  %v1_f844 = and i32 %v4_f838, 16
  %v2_f844 = icmp eq i32 %v1_f844, 0
  store i1 %v2_f844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f844, label %dec_label_pc_f798, label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %dec_label_pc_f844
  %v1_f84c = and i32 %v4_f838, 4
  %v2_f84c = icmp eq i32 %v1_f84c, 0
  store i1 %v2_f84c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f84c, label %dec_label_pc_f854, label %dec_label_pc_f798

dec_label_pc_f854:                                ; preds = %dec_label_pc_f84c
  %tmp544 = urem i8 %v3_f838, 2
  %v2_f854 = icmp eq i8 %tmp544, 0
  store i1 %v2_f854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f854, label %dec_label_pc_f85c, label %dec_label_pc_f798

dec_label_pc_f85c:                                ; preds = %dec_label_pc_f854
  %v1_f85c = add i32 %v0_f80c, 8
  %v2_f85c = inttoptr i32 %v1_f85c to i32*
  %v3_f85c = load i32, i32* %v2_f85c, align 4
  %v3_f864 = udiv i32 %v3_f85c, 16777216
  %v1_f868 = and i32 %v3_f85c, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v1_f860 = udiv i32 %v3_f85c, 256
  %v4_f86c = and i32 %v1_f860, 65280
  %v4_f870 = mul i32 %v1_f868, 256
  %v4_f874 = mul i32 %v3_f85c, 16777216
  %v5_f86c = or i32 %v4_f874, %v3_f864
  %v5_f870 = or i32 %v5_f86c, %v4_f86c
  %v5_f874 = or i32 %v5_f870, %v4_f870
  %v1_f878 = add i32 %v5_f874, -1
  store i32 %v1_f878, i32* %r2.global-to-local, align 4
  %v3_f880 = udiv i32 %v1_f878, 16777216
  %v1_f87c = udiv i32 %v1_f878, 256
  %v4_f884 = and i32 %v1_f87c, 65280
  %v5_f884 = or i32 %v4_f884, %v3_f880
  store i32 %v0_f800, i32* %r0.global-to-local, align 4
  %v1_f88c = and i32 %v1_f878, 65280
  store i32 %v1_f88c, i32* %r1.global-to-local, align 4
  %v4_f890 = mul nuw nsw i32 %v1_f88c, 256
  %v5_f890 = or i32 %v5_f884, %v4_f890
  store i32 %v5_f890, i32* %r3.global-to-local, align 4
  %v3_f894 = load i32, i32* %v2_f894, align 4
  store i32 %v3_f894, i32* @lr, align 4
  %v5_f898 = call i32 @llvm.bswap.i32(i32 %v1_f878)
  store i32 %v5_f898, i32* %r3.global-to-local, align 4
  %v3_f89c = icmp uge i32 %v5_f898, %v3_f894
  store i1 %v3_f89c, i1* %cpsr_c.global-to-local, align 1
  %v9_f89c = icmp eq i32 %v5_f898, %v3_f894
  store i1 %v9_f89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f89c, label %dec_label_pc_f8a4, label %dec_label_pc_f798

dec_label_pc_f8a4:                                ; preds = %dec_label_pc_f85c
  %v0_f8a4 = load i32, i32* @r5, align 4
  %v2_f8a4 = icmp ugt i32 %v0_f8a4, 254
  store i1 %v2_f8a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8a4 = icmp eq i32 %v0_f8a4, 255
  store i1 %v7_f8a4, i1* %cpsr_z.global-to-local, align 1
  %v8_f8a8 = icmp sgt i32 %v0_f8a4, 255
  br i1 %v8_f8a8, label %dec_label_pc_f938, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f8a4
  %v2_f8b4 = load i32, i32* @global_var_1a2f4.125, align 4
  store i32 %v2_f8b4, i32* %r1.global-to-local, align 4
  %v3_f8b8 = mul i32 %v0_f8a4, 256
  store i32 %v3_f8b8, i32* %r2.global-to-local, align 4
  %v2_f8bc = mul i32 %v0_f8a4, 288
  store i32 %v2_f8bc, i32* %r3.global-to-local, align 4
  %v2_f8c0 = add i32 %v2_f8b4, %v2_f8bc
  store i32 %v2_f8c0, i32* @r0, align 4
  %v1_f8c4 = add i32 %v2_f8c0, 12
  %v2_f8c4 = inttoptr i32 %v1_f8c4 to i32*
  %v3_f8c4 = load i32, i32* %v2_f8c4, align 4
  store i32 %v3_f8c4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8c8 = icmp eq i32 %v3_f8c4, 0
  store i1 %v2_f8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8c8, label %dec_label_pc_f90c, label %dec_label_pc_f8e8.preheader

dec_label_pc_f8e8.preheader:                      ; preds = %dec_label_pc_f8ac
  %v2_f8cc = add i32 %v0_f8a4, 1
  %v2_f8d4 = and i32 %v2_f8cc, 134217728
  %v3_f8d4 = icmp ne i32 %v2_f8d4, 0
  store i1 %v3_f8d4, i1* %cpsr_c.global-to-local, align 1
  %v3_f8d8 = mul i32 %v2_f8cc, 288
  %v3_f8dc = add i32 %v2_f8b4, %v3_f8d8
  store i32 %v3_f8dc, i32* %r3.global-to-local, align 4
  store i32 %v0_f8a4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f8e8

dec_label_pc_f8e8:                                ; preds = %dec_label_pc_f8e8.preheader, %dec_label_pc_f8f4
  %v0_f8f4 = phi i32 [ %v3_f8dc, %dec_label_pc_f8e8.preheader ], [ %v1_f900, %dec_label_pc_f8f4 ]
  %v0_f8e8 = phi i32 [ %v0_f8a4, %dec_label_pc_f8e8.preheader ], [ %v1_f8e8, %dec_label_pc_f8f4 ]
  %v1_f8e8 = add i32 %v0_f8e8, 1
  store i32 %v1_f8e8, i32* %r2.global-to-local, align 4
  %v7_f8ec = icmp eq i32 %v1_f8e8, 256
  br i1 %v7_f8ec, label %dec_label_pc_f938.loopexit, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8e8
  store i32 %v0_f8f4, i32* @r0, align 4
  %v1_f8f8 = add i32 %v0_f8f4, 12
  %v2_f8f8 = inttoptr i32 %v1_f8f8 to i32*
  %v3_f8f8 = load i32, i32* %v2_f8f8, align 4
  %v2_f8fc = icmp eq i32 %v3_f8f8, 0
  %v1_f900 = add i32 %v0_f8f4, 288
  store i32 %v1_f900, i32* %r3.global-to-local, align 4
  br i1 %v2_f8fc, label %dec_label_pc_f908, label %dec_label_pc_f8e8

dec_label_pc_f908:                                ; preds = %dec_label_pc_f8f4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f8e8, i32* @r5, align 4
  br label %dec_label_pc_f90c

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f8ac, %dec_label_pc_f908
  %v1_f914 = phi i32 [ %v2_f8c0, %dec_label_pc_f8ac ], [ %v0_f8f4, %dec_label_pc_f908 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f90c = icmp eq i32 %v1_f914, 0
  store i1 %v2_f90c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f90c, label %dec_label_pc_f938, label %dec_label_pc_f914

dec_label_pc_f914:                                ; preds = %dec_label_pc_f90c
  %v2_f914 = add i32 %v1_f914, 16
  %v3_f914 = inttoptr i32 %v2_f914 to i32*
  store i32 %v3_f894, i32* %v3_f914, align 4
  %v0_f918 = load i32, i32* %ip.global-to-local, align 4
  %v1_f918 = trunc i32 %v0_f918 to i16
  %v2_f918 = load i32, i32* @r0, align 4
  %v3_f918 = add i32 %v2_f918, 20
  %v4_f918 = inttoptr i32 %v3_f918 to i16*
  store i16 %v1_f918, i16* %v4_f918, align 2
  %v0_f91c = call i32 @function_e1f8()
  store i32 %v0_f91c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f798

dec_label_pc_f924:                                ; preds = %dec_label_pc_e7c8
  store i32 ptrtoint (i32* @global_var_1a2f8.127 to i32), i32* %ip.global-to-local, align 4
  %v2_f928 = load i32, i32* @global_var_1a2f8.127, align 4
  store i32 %v2_f928, i32* %r0.global-to-local, align 4
  %v1_f92c = call i32 @function_11c54(i32 %v2_f928)
  store i32 %v1_f92c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f930

dec_label_pc_f930:                                ; preds = %dec_label_pc_e7a4, %dec_label_pc_f924
  %v0_f930 = load i32, i32* @r5, align 4
  store i32 %v0_f930, i32* %r0.global-to-local, align 4
  %v1_f934 = call i32 @function_13cb8(i32 %v0_f930)
  store i32 %v1_f934, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f938

dec_label_pc_f938.loopexit:                       ; preds = %dec_label_pc_f8e8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f938

dec_label_pc_f938:                                ; preds = %dec_label_pc_f90c, %dec_label_pc_f8a4, %dec_label_pc_f7d0, %dec_label_pc_f798, %dec_label_pc_f938.loopexit, %dec_label_pc_f930
  %stack_var_-1876.0 = phi i32 [ %tmp316, %dec_label_pc_f930 ], [ %v0_f784, %dec_label_pc_f938.loopexit ], [ %v0_f784, %dec_label_pc_f798 ], [ %v0_f784, %dec_label_pc_f7d0 ], [ %v0_f784, %dec_label_pc_f8a4 ], [ %v0_f784, %dec_label_pc_f90c ]
  %stack_var_-1880.2 = phi i32 [ %tmp320, %dec_label_pc_f930 ], [ %stack_var_-1880.1, %dec_label_pc_f938.loopexit ], [ %stack_var_-1880.1, %dec_label_pc_f798 ], [ %stack_var_-1880.1, %dec_label_pc_f7d0 ], [ %stack_var_-1880.1, %dec_label_pc_f8a4 ], [ %stack_var_-1880.1, %dec_label_pc_f90c ]
  %stack_var_-1888.1 = phi i32 [ %tmp321, %dec_label_pc_f930 ], [ %v0_f800, %dec_label_pc_f938.loopexit ], [ %v0_f800, %dec_label_pc_f798 ], [ %v0_f800, %dec_label_pc_f7d0 ], [ %v0_f800, %dec_label_pc_f8a4 ], [ %v0_f800, %dec_label_pc_f90c ]
  %stack_var_-1884.1 = phi i16 [ %tmp322, %dec_label_pc_f930 ], [ %stack_var_-1884.0, %dec_label_pc_f938.loopexit ], [ %stack_var_-1884.0, %dec_label_pc_f798 ], [ %stack_var_-1884.0, %dec_label_pc_f7d0 ], [ %stack_var_-1884.0, %dec_label_pc_f8a4 ], [ %stack_var_-1884.0, %dec_label_pc_f90c ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_f958497 = load i32, i32* @sp, align 4
  %v3_f958498 = add i32 %v2_f958497, 1676
  %v4_f958499 = inttoptr i32 %v3_f958498 to i32*
  store i32 0, i32* %v4_f958499, align 4
  br label %dec_label_pc_f944.dec_label_pc_f944_crit_edge

dec_label_pc_f944.dec_label_pc_f944_crit_edge:    ; preds = %dec_label_pc_f938, %dec_label_pc_f944.dec_label_pc_f944_crit_edge
  %v0_f944.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f948 = add i32 %v0_f944.pre, 4
  store i32 %v1_f948, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f950 = add i32 %v0_f944.pre, 1672
  store i32 %v1_f950, i32* %ip.global-to-local, align 4
  %v7_f954 = icmp eq i32 %v1_f948, 128
  %v2_f958 = load i32, i32* @sp, align 4
  %v3_f958 = add i32 %v2_f958, %v1_f950
  %v4_f958 = inttoptr i32 %v3_f958 to i32*
  store i32 0, i32* %v4_f958, align 4
  br i1 %v7_f954, label %dec_label_pc_f960, label %dec_label_pc_f944.dec_label_pc_f944_crit_edge

dec_label_pc_f960:                                ; preds = %dec_label_pc_f944.dec_label_pc_f944_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f960 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f960, i32* %stack_var_-352, align 4
  %v1_f96c491 = add i32 %v0_f960, 8
  store i32 %v1_f96c491, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f974492 = add i32 %v0_f960, 1548
  store i32 %v1_f974492, i32* @lr, align 4
  %v7_f978493 = icmp eq i32 %v1_f96c491, 128
  %v2_f97c494 = load i32, i32* @sp, align 4
  %v3_f97c495 = add i32 %v2_f97c494, %v1_f974492
  %v4_f97c496 = inttoptr i32 %v3_f97c495 to i32*
  store i32 0, i32* %v4_f97c496, align 4
  br i1 %v7_f978493, label %dec_label_pc_f984, label %dec_label_pc_f968.dec_label_pc_f968_crit_edge

dec_label_pc_f968.dec_label_pc_f968_crit_edge:    ; preds = %dec_label_pc_f960, %dec_label_pc_f968.dec_label_pc_f968_crit_edge
  %v0_f968.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_f96c = add i32 %v0_f968.pre, 4
  store i32 %v1_f96c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f974 = add i32 %v0_f968.pre, 1544
  store i32 %v1_f974, i32* @lr, align 4
  %v7_f978 = icmp eq i32 %v1_f96c, 128
  %v2_f97c = load i32, i32* @sp, align 4
  %v3_f97c = add i32 %v2_f97c, %v1_f974
  %v4_f97c = inttoptr i32 %v3_f97c to i32*
  store i32 0, i32* %v4_f97c, align 4
  br i1 %v7_f978, label %dec_label_pc_f984, label %dec_label_pc_f968.dec_label_pc_f968_crit_edge

dec_label_pc_f984:                                ; preds = %dec_label_pc_f968.dec_label_pc_f968_crit_edge, %dec_label_pc_f960
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f984 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f984, i32* @r6, align 4
  store i32 %v0_f984, i32* @r5, align 4
  store i32 %v0_f984, i32* %stack_var_-52, align 4
  %v2_faa4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_faa8 = ptrtoint i32* %stack_var_-224 to i32
  %v2_faac = ptrtoint i32* %stack_var_-352 to i32
  %v2_fb00 = ptrtoint i32* %stack_var_-40 to i32
  %v2_fb5c = inttoptr i32 %stack_var_-1876.0 to i32*
  %v2_1040c = ptrtoint i32* %stack_var_-45 to i32
  %v2_10420 = ptrtoint i32* %stack_var_-77 to i32
  %v2_101b4 = ptrtoint i32* %stack_var_-60 to i32
  %v2_10534 = ptrtoint i32* %stack_var_-104 to i32
  %v2_1062c = ptrtoint i32* %stack_var_-56 to i32
  %v2_107c8 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_f9e0

dec_label_pc_f994:                                ; preds = %dec_label_pc_fa10
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f9fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9fc, label %dec_label_pc_107ec, label %dec_label_pc_f99c

dec_label_pc_f99c:                                ; preds = %dec_label_pc_f994
  %v1_f99c = add i32 %v2_f9f4, 4
  %v2_f99c = inttoptr i32 %v1_f99c to i32*
  %v3_f99c = load i32, i32* %v2_f99c, align 4
  store i32 %v3_f99c, i32* %ip.global-to-local, align 4
  %v3_f9a0 = udiv i32 %v3_f99c, 32
  store i32 %v2_fb00, i32* %r0.global-to-local, align 4
  %v3_f9a8 = mul nuw nsw i32 %v3_f9a0, 4
  %v2_f9ac = add i32 %v3_f9a8, %v2_fb00
  store i32 %v2_f9ac, i32* %r3.global-to-local, align 4
  %v1_f9b0 = add i32 %v2_f9ac, -184
  %v2_f9b0 = inttoptr i32 %v1_f9b0 to i32*
  %v3_f9b0 = load i32, i32* %v2_f9b0, align 4
  %v1_f9b4 = urem i32 %v3_f99c, 32
  store i32 %v1_f9b4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_f9bc = shl i32 1, %v1_f9b4
  %v8_f9bc = or i32 %v3_f9b0, %v7_f9bc
  store i32 %v8_f9bc, i32* %r2.global-to-local, align 4
  store i32 %v8_f9bc, i32* %v2_f9b0, align 4
  %v0_f9c4 = load i32, i32* @r6, align 4
  %v1_f9c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_f9c4 = sub i32 %v0_f9c4, %v1_f9c4
  %v3_f9c4 = icmp uge i32 %v0_f9c4, %v1_f9c4
  store i1 %v3_f9c4, i1* %cpsr_c.global-to-local, align 1
  %v4_f9c4 = xor i32 %v1_f9c4, %v0_f9c4
  %v5_f9c4 = xor i32 %v2_f9c4, %v0_f9c4
  %v6_f9c4 = and i32 %v5_f9c4, %v4_f9c4
  %v7_f9c4 = icmp slt i32 %v6_f9c4, 0
  %v8_f9c4 = icmp slt i32 %v2_f9c4, 0
  %v9_f9c4 = icmp eq i32 %v0_f9c4, %v1_f9c4
  store i1 %v9_f9c4, i1* %cpsr_z.global-to-local, align 1
  %v2_f9c8 = xor i1 %v8_f9c4, %v7_f9c4
  br i1 %v2_f9c8, label %bb386, label %bb387

bb386:                                            ; preds = %dec_label_pc_f99c
  store i32 %v1_f9c4, i32* @r6, align 4
  br label %bb387

bb387:                                            ; preds = %.thread56, %bb393, %bb391, %bb437, %dec_label_pc_fa74, %dec_label_pc_f99c, %bb386
  %v3_f9cc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f9cc, i32* %r3.global-to-local, align 4
  %v1_f9d0 = add i32 %v3_f9cc, 1
  store i32 %v1_f9d0, i32* %r2.global-to-local, align 4
  %v2_f9d4 = icmp ugt i32 %v1_f9d0, 254
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i32 %v1_f9d0, 255
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f9d0, i32* %stack_var_-52, align 4
  %v8_f9dc = icmp sgt i32 %v1_f9d0, 255
  br i1 %v8_f9dc, label %dec_label_pc_fa80, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %bb387, %dec_label_pc_f984
  %v0_f9ec = phi i32 [ %v1_f9d0, %bb387 ], [ %v0_f984, %dec_label_pc_f984 ]
  store i32 ptrtoint (i32* @global_var_1a2f4.125 to i32), i32* %r0.global-to-local, align 4
  %v3_f9e4 = mul i32 %v0_f9ec, 256
  store i32 %v3_f9e4, i32* %r3.global-to-local, align 4
  %v2_f9e8 = load i32, i32* @global_var_1a2f4.125, align 4
  store i32 %v2_f9e8, i32* %r1.global-to-local, align 4
  %v2_f9f0 = mul i32 %v0_f9ec, 288
  store i32 %v2_f9f0, i32* %r2.global-to-local, align 4
  %v2_f9f4 = add i32 %v2_f9e8, %v2_f9f0
  store i32 %v2_f9f4, i32* @r4, align 4
  %v1_f9f8 = add i32 %v2_f9f4, 12
  %v2_f9f8 = inttoptr i32 %v1_f9f8 to i32*
  %v3_f9f8 = load i32, i32* %v2_f9f8, align 4
  store i32 %v3_f9f8, i32* %ip.global-to-local, align 4
  %v2_f9fc = icmp ne i32 %v3_f9f8, 0
  store i1 %v2_f9fc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9fc = icmp eq i32 %v3_f9f8, 1
  store i1 %v7_f9fc, i1* %cpsr_z.global-to-local, align 1
  %v2_fa00 = xor i1 %v2_f9fc, true
  %v3_fa00 = or i1 %v7_f9fc, %v2_fa00
  br i1 %v3_fa00, label %bb388, label %bb389

bb388:                                            ; preds = %dec_label_pc_f9e0
  store i32 5, i32* %r1.global-to-local, align 4
  br label %bb389

bb389:                                            ; preds = %dec_label_pc_f9e0, %bb388
  %v1_fa20178 = phi i32 [ %v2_f9e8, %dec_label_pc_f9e0 ], [ 5, %bb388 ]
  %v2_fa04 = xor i1 %v7_f9fc, true
  %v3_fa04 = and i1 %v2_f9fc, %v2_fa04
  br i1 %v3_fa04, label %bb390, label %bb391

bb390:                                            ; preds = %bb389
  store i32 30, i32* %r1.global-to-local, align 4
  br label %bb391

bb391:                                            ; preds = %bb389, %bb390
  %v1_fa20 = phi i32 [ %v1_fa20178, %bb389 ], [ 30, %bb390 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa08 = icmp eq i32 %v3_f9f8, 0
  store i1 %v2_fa08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa08, label %bb387, label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %bb391
  store i32 ptrtoint (i32* @global_var_182a4.114 to i32), i32* %r2.global-to-local, align 4
  %v2_fa14 = load i32, i32* @global_var_182a4.114, align 4
  store i32 %v2_fa14, i32* %r3.global-to-local, align 4
  %v1_fa18 = add i32 %v2_f9f4, 8
  %v2_fa18 = inttoptr i32 %v1_fa18 to i32*
  %v3_fa18 = load i32, i32* %v2_fa18, align 4
  store i32 %v3_fa18, i32* %r2.global-to-local, align 4
  %v2_fa1c = sub i32 %v2_fa14, %v3_fa18
  store i32 %v2_fa1c, i32* %r3.global-to-local, align 4
  %v3_fa20 = icmp uge i32 %v2_fa1c, %v1_fa20
  store i1 %v3_fa20, i1* %cpsr_c.global-to-local, align 1
  %v9_fa20 = icmp eq i32 %v2_fa1c, %v1_fa20
  store i1 %v9_fa20, i1* %cpsr_z.global-to-local, align 1
  %v2_fa24 = xor i1 %v3_fa20, true
  %v3_fa24 = or i1 %v9_fa20, %v2_fa24
  br i1 %v3_fa24, label %dec_label_pc_f994, label %dec_label_pc_fa28

dec_label_pc_fa28:                                ; preds = %dec_label_pc_fa10
  %v1_fa28 = add i32 %v2_f9f4, 4
  %v2_fa28 = inttoptr i32 %v1_fa28 to i32*
  %v3_fa28 = load i32, i32* %v2_fa28, align 4
  store i32 %v3_fa28, i32* %r0.global-to-local, align 4
  %v1_fa2c = call i32 @function_11c54(i32 %v3_fa28)
  store i32 %v1_fa2c, i32* %r0.global-to-local, align 4
  %v0_fa30 = load i32, i32* @r4, align 4
  %v1_fa30 = add i32 %v0_fa30, 12
  %v2_fa30 = inttoptr i32 %v1_fa30 to i32*
  %v3_fa30 = load i32, i32* %v2_fa30, align 4
  store i32 %v3_fa30, i32* %r3.global-to-local, align 4
  %v2_fa34 = icmp ugt i32 %v3_fa30, 1
  store i1 %v2_fa34, i1* %cpsr_c.global-to-local, align 1
  %v7_fa34 = icmp eq i32 %v3_fa30, 2
  store i1 %v7_fa34, i1* %cpsr_z.global-to-local, align 1
  %v2_fa38 = xor i1 %v2_fa34, true
  %v3_fa38 = or i1 %v7_fa34, %v2_fa38
  br i1 %v3_fa38, label %bb392, label %.thread284

.thread284:                                       ; preds = %dec_label_pc_fa28
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fa40281285 = add i32 %v0_fa30, 4
  %v3_fa40282286 = inttoptr i32 %v2_fa40281285 to i32*
  store i32 -1, i32* %v3_fa40282286, align 4
  br label %bb393

bb392:                                            ; preds = %dec_label_pc_fa28
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fa40278 = add i32 %v0_fa30, 4
  %v3_fa40279 = inttoptr i32 %v2_fa40278 to i32*
  store i32 -1, i32* %v3_fa40279, align 4
  %v4_fa44 = load i32, i32* %r3.global-to-local, align 4
  %v5_fa44 = load i32, i32* @r4, align 4
  %v6_fa44 = add i32 %v5_fa44, 12
  %v7_fa44 = inttoptr i32 %v6_fa44 to i32*
  store i32 %v4_fa44, i32* %v7_fa44, align 4
  %v4_fa48 = load i32, i32* %r3.global-to-local, align 4
  %v5_fa48 = trunc i32 %v4_fa48 to i8
  %v6_fa48 = load i32, i32* @r4, align 4
  %v7_fa48 = add i32 %v6_fa48, 284
  %v8_fa48 = inttoptr i32 %v7_fa48 to i8*
  store i8 %v5_fa48, i8* %v8_fa48, align 1
  %v0_fa4c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_fa4c.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb393

bb393:                                            ; preds = %.thread284, %bb392
  %v1_fa4c = phi i1 [ %v1_fa4c.pre, %bb392 ], [ %v2_fa34, %.thread284 ]
  %v0_fa4c = phi i1 [ %v0_fa4c.pre, %bb392 ], [ false, %.thread284 ]
  %v2_fa4c = xor i1 %v1_fa4c, true
  %v3_fa4c = or i1 %v0_fa4c, %v2_fa4c
  br i1 %v3_fa4c, label %bb387, label %dec_label_pc_fa50

dec_label_pc_fa50:                                ; preds = %bb393
  %v0_fa50 = load i32, i32* @r4, align 4
  %v1_fa50 = add i32 %v0_fa50, 284
  %v2_fa50 = inttoptr i32 %v1_fa50 to i8*
  %v3_fa50 = load i8, i8* %v2_fa50, align 1
  %v4_fa50 = zext i8 %v3_fa50 to i32
  %v1_fa54 = add nuw nsw i32 %v4_fa50, 1
  %v1_fa58 = urem i32 %v1_fa54, 256
  store i32 %v1_fa58, i32* %r3.global-to-local, align 4
  %v2_fa5c = icmp ugt i32 %v1_fa58, 9
  store i1 %v2_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa5c = icmp eq i32 %v1_fa58, 10
  store i1 %v7_fa5c, i1* %cpsr_z.global-to-local, align 1
  %v1_fa60 = trunc i32 %v1_fa54 to i8
  store i8 %v1_fa60, i8* %v2_fa50, align 1
  %v0_fa64 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa64, label %.thread56, label %dec_label_pc_fa74

.thread56:                                        ; preds = %dec_label_pc_fa50
  %v1_fa64 = load i32, i32* %r3.global-to-local, align 4
  %v2_fa64 = add i32 %v1_fa64, -10
  store i32 %v2_fa64, i32* %r3.global-to-local, align 4
  %v2_fa68 = load i32, i32* @r4, align 4
  %v3_fa68 = add i32 %v2_fa68, 12
  %v4_fa68 = inttoptr i32 %v3_fa68 to i32*
  store i32 %v2_fa64, i32* %v4_fa68, align 4
  %v1_fa6c = load i32, i32* %r3.global-to-local, align 4
  %v2_fa6c = trunc i32 %v1_fa6c to i8
  %v3_fa6c = load i32, i32* @r4, align 4
  %v4_fa6c = add i32 %v3_fa6c, 284
  %v5_fa6c = inttoptr i32 %v4_fa6c to i8*
  store i8 %v2_fa6c, i8* %v5_fa6c, align 1
  %v0_fa70.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fa70.pr.pr, label %bb387, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa50, %.thread56
  %v0_fa74 = load i32, i32* @r4, align 4
  store i32 %v0_fa74, i32* @r0, align 4
  %v0_fa78 = call i32 @function_e1f8()
  store i32 %v0_fa78, i32* %r0.global-to-local, align 4
  br label %bb387

dec_label_pc_fa80:                                ; preds = %bb387
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_fa8c = load i32, i32* @r5, align 4
  %v1_fa8c = load i32, i32* @r6, align 4
  %v2_fa8c = sub i32 %v0_fa8c, %v1_fa8c
  %v3_fa8c = icmp uge i32 %v0_fa8c, %v1_fa8c
  store i1 %v3_fa8c, i1* %cpsr_c.global-to-local, align 1
  %v4_fa8c = xor i32 %v1_fa8c, %v0_fa8c
  %v5_fa8c = xor i32 %v2_fa8c, %v0_fa8c
  %v6_fa8c = and i32 %v5_fa8c, %v4_fa8c
  %v7_fa8c = icmp slt i32 %v6_fa8c, 0
  %v8_fa8c = icmp slt i32 %v2_fa8c, 0
  %v9_fa8c = icmp eq i32 %v0_fa8c, %v1_fa8c
  store i1 %v9_fa8c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa90 = xor i1 %v8_fa8c, %v7_fa8c
  %v1_fa8c.v0_fa8c = select i1 %v2_fa90, i32 %v1_fa8c, i32 %v0_fa8c
  store i32 %v2_faa4, i32* %ip.global-to-local, align 4
  store i32 %v2_faa8, i32* %r1.global-to-local, align 4
  store i32 %v2_faac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_fab4 = add i32 %v1_fa8c.v0_fa8c, 1
  store i32 %v1_fab4, i32* %r0.global-to-local, align 4
  %v5_fac0 = call i32 @function_11978(i32 %v1_fab4, i32 %v2_faa8, i32 %v2_faac, i32 0, i32 %v2_faa4)
  %v0_fac4 = load i32, i32* @r4, align 4
  store i32 %v0_fac4, i32* %r0.global-to-local, align 4
  %v1_fac8 = inttoptr i32 %v0_fac4 to i32*
  %v2_fac8 = call i32 @function_118d4(i32* %v1_fac8)
  store i32 %v2_fac8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_182a4.114 to i32), i32* @lr, align 4
  %v0_fad0 = load i32, i32* @r4, align 4
  store i32 %v0_fad0, i32* %stack_var_-52, align 4
  store i32 %v2_fac8, i32* @global_var_182a4.114, align 4
  br label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %dec_label_pc_fc48, %dec_label_pc_fa80
  %v0_fae4 = phi i32 [ %v1_fc4c, %dec_label_pc_fc48 ], [ %v0_fad0, %dec_label_pc_fa80 ]
  store i32 ptrtoint (i32* @global_var_1a2f4.125 to i32), i32* %r0.global-to-local, align 4
  %v3_fadc = mul i32 %v0_fae4, 256
  store i32 %v3_fadc, i32* %r3.global-to-local, align 4
  %v2_fae0 = load i32, i32* @global_var_1a2f4.125, align 4
  store i32 %v2_fae0, i32* %r1.global-to-local, align 4
  %v2_fae8 = mul i32 %v0_fae4, 288
  store i32 %v2_fae8, i32* %r2.global-to-local, align 4
  %v2_faec = add i32 %v2_fae0, %v2_fae8
  store i32 %v2_faec, i32* @r6, align 4
  %v1_faf0 = add i32 %v2_faec, 4
  %v2_faf0 = inttoptr i32 %v1_faf0 to i32*
  %v3_faf0 = load i32, i32* %v2_faf0, align 4
  store i32 %v3_faf0, i32* %r0.global-to-local, align 4
  %v2_faf4 = icmp eq i32 %v3_faf0, -1
  store i1 %v2_faf4, i1* %cpsr_c.global-to-local, align 1
  %v7_faf4 = icmp eq i32 %v3_faf0, -1
  store i1 %v7_faf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf4, label %dec_label_pc_fc48, label %dec_label_pc_fafc

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fad8
  %v3_fafc = udiv i32 %v3_faf0, 32
  store i32 %v2_fb00, i32* %r1.global-to-local, align 4
  %v3_fb04 = mul nuw nsw i32 %v3_fafc, 4
  store i32 %v3_fb04, i32* @ip, align 4
  %v2_fb08 = add i32 %v3_fb04, %v2_fb00
  store i32 %v2_fb08, i32* %r2.global-to-local, align 4
  %v1_fb0c = add i32 %v2_fb08, -312
  %v2_fb0c = inttoptr i32 %v1_fb0c to i32*
  %v3_fb0c = load i32, i32* %v2_fb0c, align 4
  %v1_fb10 = urem i32 %v3_faf0, 32
  store i32 %v1_fb10, i32* %r1.global-to-local, align 4
  %v2_fb14 = add nsw i32 %v1_fb10, -1
  %v3_fb14 = shl i32 1, %v2_fb14
  %v4_fb14 = and i32 %v3_fb0c, %v3_fb14
  %v5_fb14 = icmp ne i32 %v4_fb14, 0
  store i1 %v5_fb14, i1* %cpsr_c.global-to-local, align 1
  %v6_fb14 = lshr i32 %v3_fb0c, %v1_fb10
  store i32 %v6_fb14, i32* %r3.global-to-local, align 4
  %v1_fb18 = urem i32 %v6_fb14, 2
  %v2_fb18 = icmp eq i32 %v1_fb18, 0
  store i1 %v2_fb18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb18, label %dec_label_pc_fb20, label %dec_label_pc_1061c

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fafc, %dec_label_pc_106c8
  %v1_fb2c = phi i32 [ %v1_fb10, %dec_label_pc_fafc ], [ %v1_fb2c.pre, %dec_label_pc_106c8 ]
  %v0_fb24 = phi i32 [ %v3_fb04, %dec_label_pc_fafc ], [ %v0_fb24.pre, %dec_label_pc_106c8 ]
  store i32 %v2_fb00, i32* @lr, align 4
  %v2_fb24 = add i32 %v0_fb24, %v2_fb00
  store i32 %v2_fb24, i32* %r2.global-to-local, align 4
  %v1_fb28 = add i32 %v2_fb24, -184
  %v2_fb28 = inttoptr i32 %v1_fb28 to i32*
  %v3_fb28 = load i32, i32* %v2_fb28, align 4
  %v2_fb2c = add i32 %v1_fb2c, -1
  %v3_fb2c = shl i32 1, %v2_fb2c
  %v4_fb2c = and i32 %v3_fb28, %v3_fb2c
  %v5_fb2c = icmp ne i32 %v4_fb2c, 0
  store i1 %v5_fb2c, i1* %cpsr_c.global-to-local, align 1
  %v6_fb2c = lshr i32 %v3_fb28, %v1_fb2c
  store i32 %v6_fb2c, i32* %r3.global-to-local, align 4
  %v1_fb30 = urem i32 %v6_fb2c, 2
  %v2_fb30 = icmp eq i32 %v1_fb30, 0
  store i1 %v2_fb30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb30, label %dec_label_pc_fc48, label %dec_label_pc_fb38.preheader

dec_label_pc_fb38.preheader:                      ; preds = %dec_label_pc_fb20
  %v0_fb38162 = load i32, i32* @r6, align 4
  %v1_fb38163 = add i32 %v0_fb38162, 12
  %v2_fb38164 = inttoptr i32 %v1_fb38163 to i32*
  %v3_fb38165 = load i32, i32* %v2_fb38164, align 4
  store i32 %v3_fb38165, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb3c161167 = icmp eq i32 %v3_fb38165, 0
  store i1 %v2_fb3c161167, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb3c161167, label %dec_label_pc_fc48, label %dec_label_pc_fb44.lr.ph

dec_label_pc_fb38.loopexit:                       ; preds = %dec_label_pc_104d8, %dec_label_pc_10240
  %v0_fb38 = load i32, i32* @r6, align 4
  %v1_fb38 = add i32 %v0_fb38, 12
  %v2_fb38 = inttoptr i32 %v1_fb38 to i32*
  %v3_fb38 = load i32, i32* %v2_fb38, align 4
  store i32 %v3_fb38, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb3c161 = icmp eq i32 %v3_fb38, 0
  store i1 %v2_fb3c161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb3c161, label %dec_label_pc_fc48, label %dec_label_pc_fb44.lr.ph

dec_label_pc_fb44.lr.ph:                          ; preds = %dec_label_pc_fb38.preheader, %dec_label_pc_fb38.loopexit
  %v0_fb44195 = phi i32 [ %v0_fb38, %dec_label_pc_fb38.loopexit ], [ %v0_fb38162, %dec_label_pc_fb38.preheader ]
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb3c.backedge.thread, %dec_label_pc_fb3c.backedge, %dec_label_pc_fb3c.backedge.thread541, %dec_label_pc_fb44.lr.ph
  %v0_105c8 = phi i32 [ %v0_fb44195, %dec_label_pc_fb44.lr.ph ], [ %v0_fb44192, %dec_label_pc_fb3c.backedge ], [ %v0_fbbc, %dec_label_pc_fb3c.backedge.thread ], [ %v0_fbbc, %dec_label_pc_fb3c.backedge.thread541 ]
  %v1_fb44 = add i32 %v0_105c8, 24
  %v2_fb44 = inttoptr i32 %v1_fb44 to i32*
  %v3_fb44 = load i32, i32* %v2_fb44, align 4
  store i32 %v3_fb44, i32* @r3, align 4
  %v2_fb48 = icmp ugt i32 %v3_fb44, 255
  store i1 %v2_fb48, i1* %cpsr_c.global-to-local, align 1
  %v7_fb48 = icmp eq i32 %v3_fb44, 256
  store i1 %v7_fb48, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_105c8, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_fb48, label %dec_label_pc_105c8, label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb44, %dec_label_pc_105c8
  store i32 %stack_var_-1876.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_fb5c, align 4
  %v0_fb60 = load i32, i32* @r6, align 4
  %v1_fb60 = add i32 %v0_fb60, 24
  %v2_fb60 = inttoptr i32 %v1_fb60 to i32*
  %v3_fb60 = load i32, i32* %v2_fb60, align 4
  store i32 %v3_fb60, i32* %r2.global-to-local, align 4
  %v0_fb64 = load i32, i32* @fp, align 4
  %v2_fb64 = add i32 %v0_fb64, %v3_fb60
  store i32 %v2_fb64, i32* @r4, align 4
  %v1_fb68 = add i32 %v0_fb60, 4
  %v2_fb68 = inttoptr i32 %v1_fb68 to i32*
  %v3_fb68 = load i32, i32* %v2_fb68, align 4
  store i32 %v3_fb68, i32* %r0.global-to-local, align 4
  %v1_fb6c = sub i32 256, %v3_fb60
  store i32 %v1_fb6c, i32* %r2.global-to-local, align 4
  store i32 %v2_fb64, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fb78 = call i32 @function_12334(i32 %v3_fb68, i32 %v2_fb64, i32 %v1_fb6c, i32 16384)
  store i32 %v4_fb78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb7c = icmp eq i32 %v4_fb78, 0
  store i1 %v2_fb7c, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v4_fb78, 1
  br i1 %tmp396, label %dec_label_pc_fbf4, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb54
  %v0_fb84 = load i32, i32* @r5, align 4
  store i32 %v0_fb84, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %.thread60, %dec_label_pc_fb84
  %v3_fb94 = phi i32 [ %v1_fb98, %.thread60 ], [ %v0_fb84, %dec_label_pc_fb84 ]
  %v1_fb88 = load i32, i32* @r4, align 4
  %v2_fb88 = add i32 %v1_fb88, %v3_fb94
  %v3_fb88 = inttoptr i32 %v2_fb88 to i8*
  %v4_fb88 = load i8, i8* %v3_fb88, align 1
  %v6_fb88 = zext i8 %v4_fb88 to i32
  store i32 %v6_fb88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb8c = icmp eq i8 %v4_fb88, 0
  store i1 %v2_fb8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb8c, label %bb397, label %.thread60

bb397:                                            ; preds = %dec_label_pc_fb88
  %v2_fb90 = add nuw nsw i32 %v6_fb88, 65
  store i32 %v2_fb90, i32* %r3.global-to-local, align 4
  %v2_fb94 = trunc i32 %v2_fb90 to i8
  store i8 %v2_fb94, i8* %v3_fb88, align 1
  %v0_fb98.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread60

.thread60:                                        ; preds = %dec_label_pc_fb88, %bb397
  %v0_fb98 = phi i32 [ %v3_fb94, %dec_label_pc_fb88 ], [ %v0_fb98.pre, %bb397 ]
  %v1_fb98 = add i32 %v0_fb98, 1
  store i32 %v1_fb98, i32* %r2.global-to-local, align 4
  %v3_fb9c = icmp uge i32 %v1_fb98, %v4_fb78
  store i1 %v3_fb9c, i1* %cpsr_c.global-to-local, align 1
  %v9_fb9c = icmp eq i32 %v1_fb98, %v4_fb78
  store i1 %v9_fb9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fb9c, label %dec_label_pc_fba4, label %dec_label_pc_fb88

dec_label_pc_fba4:                                ; preds = %.thread60, %dec_label_pc_fbf8
  store i32 ptrtoint (i32* @global_var_182a4.114 to i32), i32* @ip, align 4
  %v0_fba8 = load i32, i32* @r6, align 4
  %v1_fba8 = add i32 %v0_fba8, 24
  %v2_fba8 = inttoptr i32 %v1_fba8 to i32*
  %v3_fba8 = load i32, i32* %v2_fba8, align 4
  %v2_fbac = load i32, i32* @global_var_182a4.114, align 4
  store i32 %v2_fbac, i32* %r2.global-to-local, align 4
  %v2_fbb0 = add i32 %v3_fba8, %v4_fb78
  store i32 %v2_fbb0, i32* %r3.global-to-local, align 4
  store i32 %v2_fbb0, i32* %v2_fba8, align 4
  %v0_fbb8 = load i32, i32* %r2.global-to-local, align 4
  %v1_fbb8 = load i32, i32* @r6, align 4
  %v2_fbb8 = add i32 %v1_fbb8, 8
  %v3_fbb8 = inttoptr i32 %v2_fbb8 to i32*
  store i32 %v0_fbb8, i32* %v3_fbb8, align 4
  br label %dec_label_pc_fbbc

dec_label_pc_fbbc:                                ; preds = %dec_label_pc_fcd8, %dec_label_pc_fba4
  %v0_fbbc = load i32, i32* @r6, align 4
  %v1_fbbc = add i32 %v0_fbbc, 12
  %v2_fbbc = inttoptr i32 %v1_fbbc to i32*
  %v3_fbbc = load i32, i32* %v2_fbbc, align 4
  store i32 %v3_fbbc, i32* %r0.global-to-local, align 4
  %v1_fbc0 = add i32 %v3_fbbc, -2
  store i32 %v1_fbc0, i32* @r3, align 4
  %v7_fbc4 = icmp eq i32 %v1_fbc0, 8
  store i1 %v7_fbc4, i1* %cpsr_z.global-to-local, align 1
  %v5_fbc8 = and i32 %v1_fbc0, 1073741824
  %v6_fbc8 = icmp ne i32 %v5_fbc8, 0
  store i1 %v6_fbc8, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_fbbc, label %dec_label_pc_fb3c.backedge [
    i32 2, label %dec_label_pc_10338
    i32 3, label %dec_label_pc_10124
    i32 4, label %dec_label_pc_1024c
    i32 5, label %dec_label_pc_10050
    i32 6, label %dec_label_pc_fea8
    i32 7, label %dec_label_pc_fdd4
    i32 8, label %dec_label_pc_ff7c
    i32 9, label %dec_label_pc_fd00
    i32 10, label %dec_label_pc_fc60
  ]

dec_label_pc_fbf4:                                ; preds = %dec_label_pc_fb54
  br i1 %v2_fb7c, label %dec_label_pc_10734, label %dec_label_pc_fbf8

dec_label_pc_fbf8:                                ; preds = %dec_label_pc_fbf4
  %v3_fbf8 = icmp eq i32 %v4_fb78, -1
  store i1 %v3_fbf8, i1* %cpsr_c.global-to-local, align 1
  %v8_fbf8 = icmp eq i32 %v4_fb78, -1
  store i1 %v8_fbf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fbf8, label %dec_label_pc_fc00, label %dec_label_pc_fba4

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbf8
  store i32 %stack_var_-1876.0, i32* %r2.global-to-local, align 4
  %v2_fc04 = load i32, i32* %v2_fb5c, align 4
  store i32 %v2_fc04, i32* %r3.global-to-local, align 4
  %v2_fc08 = icmp ugt i32 %v2_fc04, 10
  store i1 %v2_fc08, i1* %cpsr_c.global-to-local, align 1
  %v7_fc08 = icmp eq i32 %v2_fc04, 11
  store i1 %v7_fc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc08, label %dec_label_pc_fc48, label %dec_label_pc_fc10

dec_label_pc_fc10:                                ; preds = %dec_label_pc_fc00, %dec_label_pc_10734
  %v0_fc10 = load i32, i32* @r6, align 4
  %v1_fc10 = add i32 %v0_fc10, 4
  %v2_fc10 = inttoptr i32 %v1_fc10 to i32*
  %v3_fc10 = load i32, i32* %v2_fc10, align 4
  store i32 %v3_fc10, i32* %r0.global-to-local, align 4
  %v1_fc14 = call i32 @function_11c54(i32 %v3_fc10)
  store i32 %v1_fc14, i32* %r0.global-to-local, align 4
  %v0_fc18 = load i32, i32* @r6, align 4
  %v1_fc18 = add i32 %v0_fc18, 284
  %v2_fc18 = inttoptr i32 %v1_fc18 to i8*
  %v3_fc18 = load i8, i8* %v2_fc18, align 1
  %v4_fc18 = zext i8 %v3_fc18 to i32
  %v1_fc1c = add nuw nsw i32 %v4_fc18, 1
  %v1_fc20 = urem i32 %v1_fc1c, 256
  store i32 %v1_fc20, i32* %r3.global-to-local, align 4
  %v2_fc24 = icmp ugt i32 %v1_fc20, 8
  store i1 %v2_fc24, i1* %cpsr_c.global-to-local, align 1
  %v7_fc24 = icmp eq i32 %v1_fc20, 9
  store i1 %v7_fc24, i1* %cpsr_z.global-to-local, align 1
  %v1_fc28 = trunc i32 %v1_fc1c to i8
  store i8 %v1_fc28, i8* %v2_fc18, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_fc30 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_fc30 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_fc30 = xor i1 %v1_fc30, true
  %v3_fc30 = and i1 %v0_fc30, %v2_fc30
  br i1 %v3_fc30, label %bb398, label %.thread298

.thread298:                                       ; preds = %dec_label_pc_fc10
  %v1_fc34294299 = load i32, i32* @r6, align 4
  %v2_fc34295300 = add i32 %v1_fc34294299, 4
  %v3_fc34296301 = inttoptr i32 %v2_fc34295300 to i32*
  store i32 -1, i32* %v3_fc34296301, align 4
  br label %bb399

bb398:                                            ; preds = %dec_label_pc_fc10
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_fc34290 = load i32, i32* @r6, align 4
  %v2_fc34291 = add i32 %v1_fc34290, 4
  %v3_fc34292 = inttoptr i32 %v2_fc34291 to i32*
  store i32 -1, i32* %v3_fc34292, align 4
  %v4_fc38 = load i32, i32* %r3.global-to-local, align 4
  %v5_fc38 = load i32, i32* @r6, align 4
  %v6_fc38 = add i32 %v5_fc38, 12
  %v7_fc38 = inttoptr i32 %v6_fc38 to i32*
  store i32 %v4_fc38, i32* %v7_fc38, align 4
  %v4_fc3c = load i32, i32* %r3.global-to-local, align 4
  %v5_fc3c = trunc i32 %v4_fc3c to i8
  %v6_fc3c = load i32, i32* @r6, align 4
  %v7_fc3c = add i32 %v6_fc3c, 284
  %v8_fc3c = inttoptr i32 %v7_fc3c to i8*
  store i8 %v5_fc3c, i8* %v8_fc3c, align 1
  %v0_fc40.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_fc40.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb399

bb399:                                            ; preds = %.thread298, %bb398
  %v1_fc44 = phi i1 [ %v1_fc40.pre, %bb398 ], [ %v0_fc30, %.thread298 ]
  %v0_fc44 = phi i1 [ %v0_fc40.pre, %bb398 ], [ %v1_fc30, %.thread298 ]
  %v2_fc40 = xor i1 %v1_fc44, true
  %v3_fc40 = or i1 %v0_fc44, %v2_fc40
  br i1 %v3_fc40, label %bb400, label %bb401

bb400:                                            ; preds = %bb399
  %v4_fc40 = load i32, i32* @r6, align 4
  store i32 %v4_fc40, i32* %r0.global-to-local, align 4
  br label %bb401

bb401:                                            ; preds = %bb399, %bb400
  store i32 64584, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_fc40, i32 ptrtoint (i32* @global_var_e1f8.482 to i32))
  br label %dec_label_pc_fc48

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fb38.loopexit, %dec_label_pc_fb3c.backedge, %dec_label_pc_fb38.preheader, %dec_label_pc_fc00, %dec_label_pc_fb20, %dec_label_pc_fad8, %dec_label_pc_106e8, %bb401
  %v3_fc48 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_fc48, i32* %r3.global-to-local, align 4
  %v1_fc4c = add i32 %v3_fc48, 1
  store i32 %v1_fc4c, i32* @r4, align 4
  %v2_fc50 = icmp ugt i32 %v1_fc4c, 254
  store i1 %v2_fc50, i1* %cpsr_c.global-to-local, align 1
  %v7_fc50 = icmp eq i32 %v1_fc4c, 255
  store i1 %v7_fc50, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fc4c, i32* %stack_var_-52, align 4
  %v7_fc58 = icmp slt i32 %v1_fc4c, 256
  br i1 %v7_fc58, label %dec_label_pc_fad8, label %dec_label_pc_f4f4

dec_label_pc_fc60:                                ; preds = %dec_label_pc_fbbc
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_fc64 = call i32 @function_10988(i32 26)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_fc74 = call i32 @function_108c4(i32 26, i32* nonnull %stack_var_-60)
  %v3_fc78 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fc74, i32* %r2.global-to-local, align 4
  %v1_fc80 = add i32 %v3_fc78, -1
  store i32 %v1_fc80, i32* %r3.global-to-local, align 4
  %v0_fc84 = load i32, i32* @fp, align 4
  store i32 %v0_fc84, i32* %r0.global-to-local, align 4
  %v0_fc88 = load i32, i32* @r6, align 4
  %v1_fc88 = add i32 %v0_fc88, 24
  %v2_fc88 = inttoptr i32 %v1_fc88 to i32*
  %v3_fc88 = load i32, i32* %v2_fc88, align 4
  store i32 %v3_fc88, i32* %r1.global-to-local, align 4
  %v4_fc8c = call i32 @function_1124c(i32 %v0_fc84, i32 %v3_fc88, i32 %v3_fc74, i32 %v1_fc80)
  %v2_fc90 = icmp eq i32 %v4_fc8c, -1
  store i1 %v2_fc90, i1* %cpsr_c.global-to-local, align 1
  %v7_fc90 = icmp eq i32 %v4_fc8c, -1
  store i1 %v7_fc90, i1* %cpsr_z.global-to-local, align 1
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_104dc = call i32 @function_108e8(i32 26)
  br i1 %v7_fc90, label %dec_label_pc_104d8, label %dec_label_pc_fc98

dec_label_pc_fc98:                                ; preds = %dec_label_pc_fc60
  store i32 %v1_104dc, i32* %r0.global-to-local, align 4
  %v0_fca0 = load i32, i32* @r6, align 4
  %v1_fca0 = add i32 %v0_fca0, 4
  %v2_fca0 = inttoptr i32 %v1_fca0 to i32*
  %v3_fca0 = load i32, i32* %v2_fca0, align 4
  store i32 %v3_fca0, i32* %r0.global-to-local, align 4
  %v1_fca4 = call i32 @function_11c54(i32 %v3_fca0)
  store i32 %v1_fca4, i32* %r0.global-to-local, align 4
  %v0_fca8 = load i32, i32* @r6, align 4
  %v1_fca8 = add i32 %v0_fca8, 284
  %v2_fca8 = inttoptr i32 %v1_fca8 to i8*
  %v3_fca8 = load i8, i8* %v2_fca8, align 1
  %v4_fca8 = zext i8 %v3_fca8 to i32
  %v1_fcac = add nuw nsw i32 %v4_fca8, 1
  %v1_fcb0 = urem i32 %v1_fcac, 256
  store i32 %v1_fcb0, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fcb8 = icmp ugt i32 %v1_fcb0, 9
  store i1 %v2_fcb8, i1* %cpsr_c.global-to-local, align 1
  %v7_fcb8 = icmp eq i32 %v1_fcb0, 10
  store i1 %v7_fcb8, i1* %cpsr_z.global-to-local, align 1
  %v2_fcbc = add i32 %v0_fca8, 4
  %v3_fcbc = inttoptr i32 %v2_fcbc to i32*
  store i32 -1, i32* %v3_fcbc, align 4
  %v0_fcc0 = load i32, i32* @r3, align 4
  %v1_fcc0 = trunc i32 %v0_fcc0 to i8
  %v2_fcc0 = load i32, i32* @r6, align 4
  %v3_fcc0 = add i32 %v2_fcc0, 284
  %v4_fcc0 = inttoptr i32 %v3_fcc0 to i8*
  store i8 %v1_fcc0, i8* %v4_fcc0, align 1
  %v0_fcc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fcc4, label %dec_label_pc_fcc8, label %dec_label_pc_10610

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fc98
  store i32 0, i32* @r3, align 4
  %v1_fccc = load i32, i32* @r6, align 4
  %v2_fccc = add i32 %v1_fccc, 12
  %v3_fccc = inttoptr i32 %v2_fccc to i32*
  store i32 0, i32* %v3_fccc, align 4
  %v0_fcd0 = load i32, i32* @r3, align 4
  %v1_fcd0 = trunc i32 %v0_fcd0 to i8
  %v2_fcd0 = load i32, i32* @r6, align 4
  %v3_fcd0 = add i32 %v2_fcd0, 284
  %v4_fcd0 = inttoptr i32 %v3_fcd0 to i8*
  store i8 %v1_fcd0, i8* %v4_fcd0, align 1
  br label %dec_label_pc_fcd4

dec_label_pc_fcd4:                                ; preds = %dec_label_pc_10610, %dec_label_pc_fcc8
  store i32 -1, i32* @r8, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_10240, %dec_label_pc_fe50, %dec_label_pc_fd7c, %dec_label_pc_100cc, %dec_label_pc_fff8, %dec_label_pc_ff24, %dec_label_pc_fcd4
  %v0_fcd8 = load i32, i32* @r6, align 4
  %v1_fcd8 = add i32 %v0_fcd8, 24
  %v2_fcd8 = inttoptr i32 %v1_fcd8 to i32*
  %v3_fcd8 = load i32, i32* %v2_fcd8, align 4
  %v0_fcdc = load i32, i32* @r8, align 4
  %v2_fcdc = sub i32 %v0_fcdc, %v3_fcd8
  %v3_fcdc = icmp uge i32 %v0_fcdc, %v3_fcd8
  store i1 %v3_fcdc, i1* %cpsr_c.global-to-local, align 1
  %v4_fcdc = xor i32 %v0_fcdc, %v3_fcd8
  %v5_fcdc = xor i32 %v2_fcdc, %v0_fcdc
  %v6_fcdc = and i32 %v5_fcdc, %v4_fcdc
  %v7_fcdc = icmp slt i32 %v6_fcdc, 0
  %v8_fcdc = icmp slt i32 %v2_fcdc, 0
  %v9_fcdc = icmp eq i32 %v0_fcdc, %v3_fcd8
  store i1 %v9_fcdc, i1* %cpsr_z.global-to-local, align 1
  %v2_fce0 = xor i1 %v8_fcdc, %v7_fcdc
  %v0_fcdc.v3_fcd8 = select i1 %v2_fce0, i32 %v0_fcdc, i32 %v3_fcd8
  store i32 %v0_fcdc.v3_fcd8, i32* %r1.global-to-local, align 4
  %v2_fce8 = sub i32 %v3_fcd8, %v0_fcdc.v3_fcd8
  store i32 %v2_fce8, i32* @r2, align 4
  store i32 %v2_fce8, i32* %v2_fcd8, align 4
  %v0_fcf0 = load i32, i32* @fp, align 4
  %v1_fcf0 = load i32, i32* %r1.global-to-local, align 4
  %v2_fcf0 = add i32 %v1_fcf0, %v0_fcf0
  store i32 %v2_fcf0, i32* @r1, align 4
  store i32 %v0_fcf0, i32* @r0, align 4
  %v3_fcf8 = call i32 @function_12170(i32 %v0_fcf0, i32 %v2_fcf0, i32 %v2_fce8)
  store i32 %v3_fcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fbbc

dec_label_pc_fd00:                                ; preds = %dec_label_pc_fbbc
  %v1_fd00 = add i32 %v0_fbbc, 24
  %v2_fd00 = inttoptr i32 %v1_fd00 to i32*
  %v3_fd00 = load i32, i32* %v2_fd00, align 4
  store i32 %v3_fd00, i32* %r2.global-to-local, align 4
  %v1_fd04 = add i32 %v3_fd00, -1
  store i32 %v1_fd04, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd08 = icmp eq i32 %v1_fd04, 0
  store i1 %v2_fd08, i1* %cpsr_z.global-to-local, align 1
  %tmp404 = icmp slt i32 %v1_fd04, 1
  br i1 %tmp404, label %dec_label_pc_fb3c.backedge.thread, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fd00
  %v2_fd10 = add i32 %v1_fd04, %v0_fbbc
  store i32 %v2_fd10, i32* %r3.global-to-local, align 4
  %v1_fd14 = add i32 %v2_fd10, 28
  %v2_fd14 = inttoptr i32 %v1_fd14 to i8*
  %v3_fd14 = load i8, i8* %v2_fd14, align 1
  %v4_fd14 = zext i8 %v3_fd14 to i32
  store i32 %v4_fd14, i32* %r3.global-to-local, align 4
  %v2_fd18 = icmp ugt i8 %v3_fd14, 61
  store i1 %v2_fd18, i1* %cpsr_c.global-to-local, align 1
  %v7_fd18 = icmp eq i8 %v3_fd14, 62
  store i1 %v7_fd18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd18, label %dec_label_pc_fd7c, label %bb405

bb405:                                            ; preds = %dec_label_pc_fd10
  %v3_fd1c = icmp ugt i8 %v3_fd14, 57
  store i1 %v3_fd1c, i1* %cpsr_c.global-to-local, align 1
  %v8_fd1c = icmp eq i8 %v3_fd14, 58
  store i1 %v8_fd1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd1c, label %dec_label_pc_fd7c, label %dec_label_pc_fd24

dec_label_pc_fd24:                                ; preds = %bb405
  %v2_fd24 = icmp ugt i8 %v3_fd14, 35
  store i1 %v2_fd24, i1* %cpsr_c.global-to-local, align 1
  %v7_fd24 = icmp eq i8 %v3_fd14, 36
  store i1 %v7_fd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd24, label %dec_label_pc_fd7c, label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %dec_label_pc_fd24
  %v2_fd2c = icmp ugt i8 %v3_fd14, 34
  store i1 %v2_fd2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd2c = icmp eq i8 %v3_fd14, 35
  store i1 %v7_fd2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd2c, label %dec_label_pc_fd7c, label %dec_label_pc_fd34

dec_label_pc_fd34:                                ; preds = %dec_label_pc_fd2c
  %v2_fd34 = icmp ugt i8 %v3_fd14, 36
  store i1 %v2_fd34, i1* %cpsr_c.global-to-local, align 1
  %v7_fd34 = icmp eq i8 %v3_fd14, 37
  store i1 %v7_fd34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd34, label %dec_label_pc_fd7c, label %dec_label_pc_fd64.preheader

dec_label_pc_fd64.preheader:                      ; preds = %dec_label_pc_fd34
  %v3_fd38 = add i32 %v0_fbbc, 28
  %v2_fd3c = add i32 %v3_fd38, %v3_fd00
  store i32 %v2_fd3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fd64

dec_label_pc_fd48:                                ; preds = %bb406
  %v2_fd48 = icmp ugt i8 %v3_fd6c, 35
  store i1 %v2_fd48, i1* %cpsr_c.global-to-local, align 1
  %v7_fd48 = icmp eq i8 %v3_fd6c, 36
  store i1 %v7_fd48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd48, label %dec_label_pc_fd7c, label %dec_label_pc_fd50

dec_label_pc_fd50:                                ; preds = %dec_label_pc_fd48
  %v2_fd50 = icmp ugt i8 %v3_fd6c, 34
  store i1 %v2_fd50, i1* %cpsr_c.global-to-local, align 1
  %v7_fd50 = icmp eq i8 %v3_fd6c, 35
  store i1 %v7_fd50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd50, label %dec_label_pc_fd7c, label %dec_label_pc_fd58

dec_label_pc_fd58:                                ; preds = %dec_label_pc_fd50
  %v2_fd58 = icmp ugt i8 %v3_fd6c, 36
  store i1 %v2_fd58, i1* %cpsr_c.global-to-local, align 1
  %v7_fd58 = icmp eq i8 %v3_fd6c, 37
  store i1 %v7_fd58, i1* %cpsr_z.global-to-local, align 1
  %v1_fd5c = add i32 %v0_fd5c, -1
  store i32 %v1_fd5c, i32* %r3.global-to-local, align 4
  br i1 %v7_fd58, label %dec_label_pc_fd7c, label %dec_label_pc_fd64

dec_label_pc_fd64:                                ; preds = %dec_label_pc_fd64.preheader, %dec_label_pc_fd58
  %v0_fd5c = phi i32 [ %v2_fd3c, %dec_label_pc_fd64.preheader ], [ %v1_fd5c, %dec_label_pc_fd58 ]
  %v0_fd64 = phi i32 [ %v1_fd04, %dec_label_pc_fd64.preheader ], [ %v1_fd64, %dec_label_pc_fd58 ]
  %v1_fd64 = add i32 %v0_fd64, -1
  store i32 %v1_fd64, i32* %r1.global-to-local, align 4
  %v2_fd64 = icmp ne i32 %v0_fd64, 0
  store i1 %v2_fd64, i1* %cpsr_c.global-to-local, align 1
  %v7_fd64 = icmp eq i32 %v0_fd64, 1
  store i1 %v7_fd64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd64, label %dec_label_pc_fb3c.backedge.thread541, label %dec_label_pc_fd6c

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fd64
  %v1_fd6c = add i32 %v0_fd5c, -2
  %v2_fd6c = inttoptr i32 %v1_fd6c to i8*
  %v3_fd6c = load i8, i8* %v2_fd6c, align 1
  %v4_fd6c = zext i8 %v3_fd6c to i32
  store i32 %v4_fd6c, i32* %r2.global-to-local, align 4
  %v2_fd70 = icmp ugt i8 %v3_fd6c, 61
  store i1 %v2_fd70, i1* %cpsr_c.global-to-local, align 1
  %v7_fd70 = icmp eq i8 %v3_fd6c, 62
  store i1 %v7_fd70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd70, label %dec_label_pc_fd7c, label %bb406

bb406:                                            ; preds = %dec_label_pc_fd6c
  %v3_fd74 = icmp ugt i8 %v3_fd6c, 57
  store i1 %v3_fd74, i1* %cpsr_c.global-to-local, align 1
  %v8_fd74 = icmp eq i8 %v3_fd6c, 58
  store i1 %v8_fd74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fd74, label %dec_label_pc_fd7c, label %dec_label_pc_fd48

dec_label_pc_fd7c:                                ; preds = %dec_label_pc_fd6c, %bb406, %dec_label_pc_fd58, %dec_label_pc_fd50, %dec_label_pc_fd48, %dec_label_pc_fd34, %dec_label_pc_fd10, %dec_label_pc_fd2c, %dec_label_pc_fd24, %bb405
  %v0_fd80 = phi i32 [ %v1_fd04, %dec_label_pc_fd34 ], [ %v1_fd04, %dec_label_pc_fd10 ], [ %v1_fd04, %dec_label_pc_fd2c ], [ %v1_fd04, %dec_label_pc_fd24 ], [ %v1_fd04, %bb405 ], [ %v1_fd64, %dec_label_pc_fd48 ], [ %v1_fd64, %dec_label_pc_fd50 ], [ %v1_fd64, %dec_label_pc_fd58 ], [ %v1_fd64, %bb406 ], [ %v1_fd64, %dec_label_pc_fd6c ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_fd80 = add i32 %v0_fd80, 1
  store i32 %v1_fd80, i32* @r8, align 4
  %v1_fd84 = call i32 @function_10988(i32 24)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_fd94 = call i32 @function_108c4(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_fd94, i32* %r0.global-to-local, align 4
  %v3_fd98 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fd98, i32* %r2.global-to-local, align 4
  store i32 %v3_fd94, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fda4 = load i32, i32* @r6, align 4
  %v1_fda4 = add i32 %v0_fda4, 4
  %v2_fda4 = inttoptr i32 %v1_fda4 to i32*
  %v3_fda4 = load i32, i32* %v2_fda4, align 4
  store i32 %v3_fda4, i32* %r0.global-to-local, align 4
  %v4_fda8 = call i32 @function_123a8(i32 %v3_fda4, i32 %v3_fd94, i32 %v3_fd98, i32 16384)
  store i32 %v4_fda8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fdb8 = load i32, i32* @r6, align 4
  %v1_fdb8 = add i32 %v0_fdb8, 4
  %v2_fdb8 = inttoptr i32 %v1_fdb8 to i32*
  %v3_fdb8 = load i32, i32* %v2_fdb8, align 4
  store i32 %v3_fdb8, i32* %r0.global-to-local, align 4
  %v4_fdbc = call i32 @function_123a8(i32 %v3_fdb8, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_fdc4 = call i32 @function_108e8(i32 24)
  store i32 %v1_fdc4, i32* %r0.global-to-local, align 4
  store i32 10, i32* @r3, align 4
  %v1_fdcc = load i32, i32* @r6, align 4
  %v2_fdcc = add i32 %v1_fdcc, 12
  %v3_fdcc = inttoptr i32 %v2_fdcc to i32*
  store i32 10, i32* %v3_fdcc, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fbbc
  %v1_fdd4 = add i32 %v0_fbbc, 24
  %v2_fdd4 = inttoptr i32 %v1_fdd4 to i32*
  %v3_fdd4 = load i32, i32* %v2_fdd4, align 4
  store i32 %v3_fdd4, i32* %r2.global-to-local, align 4
  %v1_fdd8 = add i32 %v3_fdd4, -1
  store i32 %v1_fdd8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fddc = icmp eq i32 %v1_fdd8, 0
  store i1 %v2_fddc, i1* %cpsr_z.global-to-local, align 1
  %tmp407 = icmp slt i32 %v1_fdd8, 1
  br i1 %tmp407, label %dec_label_pc_fb3c.backedge.thread, label %dec_label_pc_fde4

dec_label_pc_fde4:                                ; preds = %dec_label_pc_fdd4
  %v2_fde4 = add i32 %v1_fdd8, %v0_fbbc
  store i32 %v2_fde4, i32* %r3.global-to-local, align 4
  %v1_fde8 = add i32 %v2_fde4, 28
  %v2_fde8 = inttoptr i32 %v1_fde8 to i8*
  %v3_fde8 = load i8, i8* %v2_fde8, align 1
  %v4_fde8 = zext i8 %v3_fde8 to i32
  store i32 %v4_fde8, i32* %r3.global-to-local, align 4
  %v2_fdec = icmp ugt i8 %v3_fde8, 61
  store i1 %v2_fdec, i1* %cpsr_c.global-to-local, align 1
  %v7_fdec = icmp eq i8 %v3_fde8, 62
  store i1 %v7_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdec, label %dec_label_pc_fe50, label %bb408

bb408:                                            ; preds = %dec_label_pc_fde4
  %v3_fdf0 = icmp ugt i8 %v3_fde8, 57
  store i1 %v3_fdf0, i1* %cpsr_c.global-to-local, align 1
  %v8_fdf0 = icmp eq i8 %v3_fde8, 58
  store i1 %v8_fdf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fdf0, label %dec_label_pc_fe50, label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %bb408
  %v2_fdf8 = icmp ugt i8 %v3_fde8, 35
  store i1 %v2_fdf8, i1* %cpsr_c.global-to-local, align 1
  %v7_fdf8 = icmp eq i8 %v3_fde8, 36
  store i1 %v7_fdf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdf8, label %dec_label_pc_fe50, label %dec_label_pc_fe00

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fdf8
  %v2_fe00 = icmp ugt i8 %v3_fde8, 34
  store i1 %v2_fe00, i1* %cpsr_c.global-to-local, align 1
  %v7_fe00 = icmp eq i8 %v3_fde8, 35
  store i1 %v7_fe00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe00, label %dec_label_pc_fe50, label %dec_label_pc_fe08

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fe00
  %v2_fe08 = icmp ugt i8 %v3_fde8, 36
  store i1 %v2_fe08, i1* %cpsr_c.global-to-local, align 1
  %v7_fe08 = icmp eq i8 %v3_fde8, 37
  store i1 %v7_fe08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe08, label %dec_label_pc_fe50, label %dec_label_pc_fe38.preheader

dec_label_pc_fe38.preheader:                      ; preds = %dec_label_pc_fe08
  %v3_fe0c = add i32 %v0_fbbc, 28
  %v2_fe10 = add i32 %v3_fe0c, %v3_fdd4
  store i32 %v2_fe10, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe38

dec_label_pc_fe1c:                                ; preds = %bb409
  %v2_fe1c = icmp ugt i8 %v3_fe40, 35
  store i1 %v2_fe1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe1c = icmp eq i8 %v3_fe40, 36
  store i1 %v7_fe1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe1c, label %dec_label_pc_fe50, label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %dec_label_pc_fe1c
  %v2_fe24 = icmp ugt i8 %v3_fe40, 34
  store i1 %v2_fe24, i1* %cpsr_c.global-to-local, align 1
  %v7_fe24 = icmp eq i8 %v3_fe40, 35
  store i1 %v7_fe24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe24, label %dec_label_pc_fe50, label %dec_label_pc_fe2c

dec_label_pc_fe2c:                                ; preds = %dec_label_pc_fe24
  %v2_fe2c = icmp ugt i8 %v3_fe40, 36
  store i1 %v2_fe2c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe2c = icmp eq i8 %v3_fe40, 37
  store i1 %v7_fe2c, i1* %cpsr_z.global-to-local, align 1
  %v1_fe30 = add i32 %v0_fe30, -1
  store i32 %v1_fe30, i32* %r3.global-to-local, align 4
  br i1 %v7_fe2c, label %dec_label_pc_fe50, label %dec_label_pc_fe38

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe38.preheader, %dec_label_pc_fe2c
  %v0_fe30 = phi i32 [ %v2_fe10, %dec_label_pc_fe38.preheader ], [ %v1_fe30, %dec_label_pc_fe2c ]
  %v0_fe38 = phi i32 [ %v1_fdd8, %dec_label_pc_fe38.preheader ], [ %v1_fe38, %dec_label_pc_fe2c ]
  %v1_fe38 = add i32 %v0_fe38, -1
  store i32 %v1_fe38, i32* %r1.global-to-local, align 4
  %v2_fe38 = icmp ne i32 %v0_fe38, 0
  store i1 %v2_fe38, i1* %cpsr_c.global-to-local, align 1
  %v7_fe38 = icmp eq i32 %v0_fe38, 1
  store i1 %v7_fe38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe38, label %dec_label_pc_fb3c.backedge.thread541, label %dec_label_pc_fe40

dec_label_pc_fe40:                                ; preds = %dec_label_pc_fe38
  %v1_fe40 = add i32 %v0_fe30, -2
  %v2_fe40 = inttoptr i32 %v1_fe40 to i8*
  %v3_fe40 = load i8, i8* %v2_fe40, align 1
  %v4_fe40 = zext i8 %v3_fe40 to i32
  store i32 %v4_fe40, i32* %r2.global-to-local, align 4
  %v2_fe44 = icmp ugt i8 %v3_fe40, 61
  store i1 %v2_fe44, i1* %cpsr_c.global-to-local, align 1
  %v7_fe44 = icmp eq i8 %v3_fe40, 62
  store i1 %v7_fe44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe44, label %dec_label_pc_fe50, label %bb409

bb409:                                            ; preds = %dec_label_pc_fe40
  %v3_fe48 = icmp ugt i8 %v3_fe40, 57
  store i1 %v3_fe48, i1* %cpsr_c.global-to-local, align 1
  %v8_fe48 = icmp eq i8 %v3_fe40, 58
  store i1 %v8_fe48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe48, label %dec_label_pc_fe50, label %dec_label_pc_fe1c

dec_label_pc_fe50:                                ; preds = %dec_label_pc_fe40, %bb409, %dec_label_pc_fe2c, %dec_label_pc_fe24, %dec_label_pc_fe1c, %dec_label_pc_fe08, %dec_label_pc_fde4, %dec_label_pc_fe00, %dec_label_pc_fdf8, %bb408
  %v0_fe54 = phi i32 [ %v1_fdd8, %dec_label_pc_fe08 ], [ %v1_fdd8, %dec_label_pc_fde4 ], [ %v1_fdd8, %dec_label_pc_fe00 ], [ %v1_fdd8, %dec_label_pc_fdf8 ], [ %v1_fdd8, %bb408 ], [ %v1_fe38, %dec_label_pc_fe1c ], [ %v1_fe38, %dec_label_pc_fe24 ], [ %v1_fe38, %dec_label_pc_fe2c ], [ %v1_fe38, %bb409 ], [ %v1_fe38, %dec_label_pc_fe40 ]
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_fe54 = add i32 %v0_fe54, 1
  store i32 %v1_fe54, i32* @r8, align 4
  %v1_fe58 = call i32 @function_10988(i32 20)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 20, i32* %r0.global-to-local, align 4
  %v3_fe68 = call i32 @function_108c4(i32 20, i32* nonnull %stack_var_-60)
  store i32 %v3_fe68, i32* %r0.global-to-local, align 4
  %v3_fe6c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fe6c, i32* %r2.global-to-local, align 4
  store i32 %v3_fe68, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fe78 = load i32, i32* @r6, align 4
  %v1_fe78 = add i32 %v0_fe78, 4
  %v2_fe78 = inttoptr i32 %v1_fe78 to i32*
  %v3_fe78 = load i32, i32* %v2_fe78, align 4
  store i32 %v3_fe78, i32* %r0.global-to-local, align 4
  %v4_fe7c = call i32 @function_123a8(i32 %v3_fe78, i32 %v3_fe68, i32 %v3_fe6c, i32 16384)
  store i32 %v4_fe7c, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fe8c = load i32, i32* @r6, align 4
  %v1_fe8c = add i32 %v0_fe8c, 4
  %v2_fe8c = inttoptr i32 %v1_fe8c to i32*
  %v3_fe8c = load i32, i32* %v2_fe8c, align 4
  store i32 %v3_fe8c, i32* %r0.global-to-local, align 4
  %v4_fe90 = call i32 @function_123a8(i32 %v3_fe8c, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_fe98 = call i32 @function_108e8(i32 20)
  store i32 %v1_fe98, i32* %r0.global-to-local, align 4
  store i32 8, i32* @r3, align 4
  %v1_fea0 = load i32, i32* @r6, align 4
  %v2_fea0 = add i32 %v1_fea0, 12
  %v3_fea0 = inttoptr i32 %v2_fea0 to i32*
  store i32 8, i32* %v3_fea0, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_fea8:                                ; preds = %dec_label_pc_fbbc
  %v1_fea8 = add i32 %v0_fbbc, 24
  %v2_fea8 = inttoptr i32 %v1_fea8 to i32*
  %v3_fea8 = load i32, i32* %v2_fea8, align 4
  store i32 %v3_fea8, i32* %r2.global-to-local, align 4
  %v1_feac = add i32 %v3_fea8, -1
  store i32 %v1_feac, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_feb0 = icmp eq i32 %v1_feac, 0
  store i1 %v2_feb0, i1* %cpsr_z.global-to-local, align 1
  %tmp410 = icmp slt i32 %v1_feac, 1
  br i1 %tmp410, label %dec_label_pc_fb3c.backedge.thread, label %dec_label_pc_feb8

dec_label_pc_feb8:                                ; preds = %dec_label_pc_fea8
  %v2_feb8 = add i32 %v1_feac, %v0_fbbc
  store i32 %v2_feb8, i32* %r3.global-to-local, align 4
  %v1_febc = add i32 %v2_feb8, 28
  %v2_febc = inttoptr i32 %v1_febc to i8*
  %v3_febc = load i8, i8* %v2_febc, align 1
  %v4_febc = zext i8 %v3_febc to i32
  store i32 %v4_febc, i32* %r3.global-to-local, align 4
  %v2_fec0 = icmp ugt i8 %v3_febc, 61
  store i1 %v2_fec0, i1* %cpsr_c.global-to-local, align 1
  %v7_fec0 = icmp eq i8 %v3_febc, 62
  store i1 %v7_fec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fec0, label %dec_label_pc_ff24, label %bb411

bb411:                                            ; preds = %dec_label_pc_feb8
  %v3_fec4 = icmp ugt i8 %v3_febc, 57
  store i1 %v3_fec4, i1* %cpsr_c.global-to-local, align 1
  %v8_fec4 = icmp eq i8 %v3_febc, 58
  store i1 %v8_fec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fec4, label %dec_label_pc_ff24, label %dec_label_pc_fecc

dec_label_pc_fecc:                                ; preds = %bb411
  %v2_fecc = icmp ugt i8 %v3_febc, 35
  store i1 %v2_fecc, i1* %cpsr_c.global-to-local, align 1
  %v7_fecc = icmp eq i8 %v3_febc, 36
  store i1 %v7_fecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fecc, label %dec_label_pc_ff24, label %dec_label_pc_fed4

dec_label_pc_fed4:                                ; preds = %dec_label_pc_fecc
  %v2_fed4 = icmp ugt i8 %v3_febc, 34
  store i1 %v2_fed4, i1* %cpsr_c.global-to-local, align 1
  %v7_fed4 = icmp eq i8 %v3_febc, 35
  store i1 %v7_fed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fed4, label %dec_label_pc_ff24, label %dec_label_pc_fedc

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fed4
  %v2_fedc = icmp ugt i8 %v3_febc, 36
  store i1 %v2_fedc, i1* %cpsr_c.global-to-local, align 1
  %v7_fedc = icmp eq i8 %v3_febc, 37
  store i1 %v7_fedc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fedc, label %dec_label_pc_ff24, label %dec_label_pc_ff0c.preheader

dec_label_pc_ff0c.preheader:                      ; preds = %dec_label_pc_fedc
  %v3_fee0 = add i32 %v0_fbbc, 28
  %v2_fee4 = add i32 %v3_fee0, %v3_fea8
  store i32 %v2_fee4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff0c

dec_label_pc_fef0:                                ; preds = %bb412
  %v2_fef0 = icmp ugt i8 %v3_ff14, 35
  store i1 %v2_fef0, i1* %cpsr_c.global-to-local, align 1
  %v7_fef0 = icmp eq i8 %v3_ff14, 36
  store i1 %v7_fef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fef0, label %dec_label_pc_ff24, label %dec_label_pc_fef8

dec_label_pc_fef8:                                ; preds = %dec_label_pc_fef0
  %v2_fef8 = icmp ugt i8 %v3_ff14, 34
  store i1 %v2_fef8, i1* %cpsr_c.global-to-local, align 1
  %v7_fef8 = icmp eq i8 %v3_ff14, 35
  store i1 %v7_fef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fef8, label %dec_label_pc_ff24, label %dec_label_pc_ff00

dec_label_pc_ff00:                                ; preds = %dec_label_pc_fef8
  %v2_ff00 = icmp ugt i8 %v3_ff14, 36
  store i1 %v2_ff00, i1* %cpsr_c.global-to-local, align 1
  %v7_ff00 = icmp eq i8 %v3_ff14, 37
  store i1 %v7_ff00, i1* %cpsr_z.global-to-local, align 1
  %v1_ff04 = add i32 %v0_ff04, -1
  store i32 %v1_ff04, i32* %r3.global-to-local, align 4
  br i1 %v7_ff00, label %dec_label_pc_ff24, label %dec_label_pc_ff0c

dec_label_pc_ff0c:                                ; preds = %dec_label_pc_ff0c.preheader, %dec_label_pc_ff00
  %v0_ff04 = phi i32 [ %v2_fee4, %dec_label_pc_ff0c.preheader ], [ %v1_ff04, %dec_label_pc_ff00 ]
  %v0_ff0c = phi i32 [ %v1_feac, %dec_label_pc_ff0c.preheader ], [ %v1_ff0c, %dec_label_pc_ff00 ]
  %v1_ff0c = add i32 %v0_ff0c, -1
  store i32 %v1_ff0c, i32* %r1.global-to-local, align 4
  %v2_ff0c = icmp ne i32 %v0_ff0c, 0
  store i1 %v2_ff0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff0c = icmp eq i32 %v0_ff0c, 1
  store i1 %v7_ff0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff0c, label %dec_label_pc_fb3c.backedge.thread541, label %dec_label_pc_ff14

dec_label_pc_ff14:                                ; preds = %dec_label_pc_ff0c
  %v1_ff14 = add i32 %v0_ff04, -2
  %v2_ff14 = inttoptr i32 %v1_ff14 to i8*
  %v3_ff14 = load i8, i8* %v2_ff14, align 1
  %v4_ff14 = zext i8 %v3_ff14 to i32
  store i32 %v4_ff14, i32* %r2.global-to-local, align 4
  %v2_ff18 = icmp ugt i8 %v3_ff14, 61
  store i1 %v2_ff18, i1* %cpsr_c.global-to-local, align 1
  %v7_ff18 = icmp eq i8 %v3_ff14, 62
  store i1 %v7_ff18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff18, label %dec_label_pc_ff24, label %bb412

bb412:                                            ; preds = %dec_label_pc_ff14
  %v3_ff1c = icmp ugt i8 %v3_ff14, 57
  store i1 %v3_ff1c, i1* %cpsr_c.global-to-local, align 1
  %v8_ff1c = icmp eq i8 %v3_ff14, 58
  store i1 %v8_ff1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff1c, label %dec_label_pc_ff24, label %dec_label_pc_fef0

dec_label_pc_ff24:                                ; preds = %dec_label_pc_ff14, %bb412, %dec_label_pc_ff00, %dec_label_pc_fef8, %dec_label_pc_fef0, %dec_label_pc_fedc, %dec_label_pc_feb8, %dec_label_pc_fed4, %dec_label_pc_fecc, %bb411
  %v0_ff28 = phi i32 [ %v1_feac, %dec_label_pc_fedc ], [ %v1_feac, %dec_label_pc_feb8 ], [ %v1_feac, %dec_label_pc_fed4 ], [ %v1_feac, %dec_label_pc_fecc ], [ %v1_feac, %bb411 ], [ %v1_ff0c, %dec_label_pc_fef0 ], [ %v1_ff0c, %dec_label_pc_fef8 ], [ %v1_ff0c, %dec_label_pc_ff00 ], [ %v1_ff0c, %bb412 ], [ %v1_ff0c, %dec_label_pc_ff14 ]
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ff28 = add i32 %v0_ff28, 1
  store i32 %v1_ff28, i32* @r8, align 4
  %v1_ff2c = call i32 @function_10988(i32 22)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v3_ff3c = call i32 @function_108c4(i32 22, i32* nonnull %stack_var_-60)
  store i32 %v3_ff3c, i32* %r0.global-to-local, align 4
  %v3_ff40 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ff40, i32* %r2.global-to-local, align 4
  store i32 %v3_ff3c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ff4c = load i32, i32* @r6, align 4
  %v1_ff4c = add i32 %v0_ff4c, 4
  %v2_ff4c = inttoptr i32 %v1_ff4c to i32*
  %v3_ff4c = load i32, i32* %v2_ff4c, align 4
  store i32 %v3_ff4c, i32* %r0.global-to-local, align 4
  %v4_ff50 = call i32 @function_123a8(i32 %v3_ff4c, i32 %v3_ff3c, i32 %v3_ff40, i32 16384)
  store i32 %v4_ff50, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ff60 = load i32, i32* @r6, align 4
  %v1_ff60 = add i32 %v0_ff60, 4
  %v2_ff60 = inttoptr i32 %v1_ff60 to i32*
  %v3_ff60 = load i32, i32* %v2_ff60, align 4
  store i32 %v3_ff60, i32* %r0.global-to-local, align 4
  %v4_ff64 = call i32 @function_123a8(i32 %v3_ff60, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 22, i32* %r0.global-to-local, align 4
  %v1_ff6c = call i32 @function_108e8(i32 22)
  store i32 %v1_ff6c, i32* %r0.global-to-local, align 4
  store i32 7, i32* @r3, align 4
  %v1_ff74 = load i32, i32* @r6, align 4
  %v2_ff74 = add i32 %v1_ff74, 12
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 7, i32* %v3_ff74, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_fbbc
  %v1_ff7c = add i32 %v0_fbbc, 24
  %v2_ff7c = inttoptr i32 %v1_ff7c to i32*
  %v3_ff7c = load i32, i32* %v2_ff7c, align 4
  store i32 %v3_ff7c, i32* %r2.global-to-local, align 4
  %v1_ff80 = add i32 %v3_ff7c, -1
  store i32 %v1_ff80, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff84 = icmp eq i32 %v1_ff80, 0
  store i1 %v2_ff84, i1* %cpsr_z.global-to-local, align 1
  %tmp413 = icmp slt i32 %v1_ff80, 1
  br i1 %tmp413, label %dec_label_pc_fb3c.backedge.thread, label %dec_label_pc_ff8c

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff7c
  %v2_ff8c = add i32 %v1_ff80, %v0_fbbc
  store i32 %v2_ff8c, i32* %r3.global-to-local, align 4
  %v1_ff90 = add i32 %v2_ff8c, 28
  %v2_ff90 = inttoptr i32 %v1_ff90 to i8*
  %v3_ff90 = load i8, i8* %v2_ff90, align 1
  %v4_ff90 = zext i8 %v3_ff90 to i32
  store i32 %v4_ff90, i32* %r3.global-to-local, align 4
  %v2_ff94 = icmp ugt i8 %v3_ff90, 61
  store i1 %v2_ff94, i1* %cpsr_c.global-to-local, align 1
  %v7_ff94 = icmp eq i8 %v3_ff90, 62
  store i1 %v7_ff94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff94, label %dec_label_pc_fff8, label %bb414

bb414:                                            ; preds = %dec_label_pc_ff8c
  %v3_ff98 = icmp ugt i8 %v3_ff90, 57
  store i1 %v3_ff98, i1* %cpsr_c.global-to-local, align 1
  %v8_ff98 = icmp eq i8 %v3_ff90, 58
  store i1 %v8_ff98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff98, label %dec_label_pc_fff8, label %dec_label_pc_ffa0

dec_label_pc_ffa0:                                ; preds = %bb414
  %v2_ffa0 = icmp ugt i8 %v3_ff90, 35
  store i1 %v2_ffa0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa0 = icmp eq i8 %v3_ff90, 36
  store i1 %v7_ffa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffa0, label %dec_label_pc_fff8, label %dec_label_pc_ffa8

dec_label_pc_ffa8:                                ; preds = %dec_label_pc_ffa0
  %v2_ffa8 = icmp ugt i8 %v3_ff90, 34
  store i1 %v2_ffa8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffa8 = icmp eq i8 %v3_ff90, 35
  store i1 %v7_ffa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffa8, label %dec_label_pc_fff8, label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ffa8
  %v2_ffb0 = icmp ugt i8 %v3_ff90, 36
  store i1 %v2_ffb0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb0 = icmp eq i8 %v3_ff90, 37
  store i1 %v7_ffb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb0, label %dec_label_pc_fff8, label %dec_label_pc_ffe0.preheader

dec_label_pc_ffe0.preheader:                      ; preds = %dec_label_pc_ffb0
  %v3_ffb4 = add i32 %v0_fbbc, 28
  %v2_ffb8 = add i32 %v3_ffb4, %v3_ff7c
  store i32 %v2_ffb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ffe0

dec_label_pc_ffc4:                                ; preds = %bb415
  %v2_ffc4 = icmp ugt i8 %v3_ffe8, 35
  store i1 %v2_ffc4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffc4 = icmp eq i8 %v3_ffe8, 36
  store i1 %v7_ffc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffc4, label %dec_label_pc_fff8, label %dec_label_pc_ffcc

dec_label_pc_ffcc:                                ; preds = %dec_label_pc_ffc4
  %v2_ffcc = icmp ugt i8 %v3_ffe8, 34
  store i1 %v2_ffcc, i1* %cpsr_c.global-to-local, align 1
  %v7_ffcc = icmp eq i8 %v3_ffe8, 35
  store i1 %v7_ffcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffcc, label %dec_label_pc_fff8, label %dec_label_pc_ffd4

dec_label_pc_ffd4:                                ; preds = %dec_label_pc_ffcc
  %v2_ffd4 = icmp ugt i8 %v3_ffe8, 36
  store i1 %v2_ffd4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffd4 = icmp eq i8 %v3_ffe8, 37
  store i1 %v7_ffd4, i1* %cpsr_z.global-to-local, align 1
  %v1_ffd8 = add i32 %v0_ffd8, -1
  store i32 %v1_ffd8, i32* %r3.global-to-local, align 4
  br i1 %v7_ffd4, label %dec_label_pc_fff8, label %dec_label_pc_ffe0

dec_label_pc_ffe0:                                ; preds = %dec_label_pc_ffe0.preheader, %dec_label_pc_ffd4
  %v0_ffd8 = phi i32 [ %v2_ffb8, %dec_label_pc_ffe0.preheader ], [ %v1_ffd8, %dec_label_pc_ffd4 ]
  %v0_ffe0 = phi i32 [ %v1_ff80, %dec_label_pc_ffe0.preheader ], [ %v1_ffe0, %dec_label_pc_ffd4 ]
  %v1_ffe0 = add i32 %v0_ffe0, -1
  store i32 %v1_ffe0, i32* %r1.global-to-local, align 4
  %v2_ffe0 = icmp ne i32 %v0_ffe0, 0
  store i1 %v2_ffe0, i1* %cpsr_c.global-to-local, align 1
  %v7_ffe0 = icmp eq i32 %v0_ffe0, 1
  store i1 %v7_ffe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffe0, label %dec_label_pc_fb3c.backedge.thread541, label %dec_label_pc_ffe8

dec_label_pc_ffe8:                                ; preds = %dec_label_pc_ffe0
  %v1_ffe8 = add i32 %v0_ffd8, -2
  %v2_ffe8 = inttoptr i32 %v1_ffe8 to i8*
  %v3_ffe8 = load i8, i8* %v2_ffe8, align 1
  %v4_ffe8 = zext i8 %v3_ffe8 to i32
  store i32 %v4_ffe8, i32* %r2.global-to-local, align 4
  %v2_ffec = icmp ugt i8 %v3_ffe8, 61
  store i1 %v2_ffec, i1* %cpsr_c.global-to-local, align 1
  %v7_ffec = icmp eq i8 %v3_ffe8, 62
  store i1 %v7_ffec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffec, label %dec_label_pc_fff8, label %bb415

bb415:                                            ; preds = %dec_label_pc_ffe8
  %v3_fff0 = icmp ugt i8 %v3_ffe8, 57
  store i1 %v3_fff0, i1* %cpsr_c.global-to-local, align 1
  %v8_fff0 = icmp eq i8 %v3_ffe8, 58
  store i1 %v8_fff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fff0, label %dec_label_pc_fff8, label %dec_label_pc_ffc4

dec_label_pc_fff8:                                ; preds = %dec_label_pc_ffe8, %bb415, %dec_label_pc_ffd4, %dec_label_pc_ffcc, %dec_label_pc_ffc4, %dec_label_pc_ffb0, %dec_label_pc_ff8c, %dec_label_pc_ffa8, %dec_label_pc_ffa0, %bb414
  %v0_fffc = phi i32 [ %v1_ff80, %dec_label_pc_ffb0 ], [ %v1_ff80, %dec_label_pc_ff8c ], [ %v1_ff80, %dec_label_pc_ffa8 ], [ %v1_ff80, %dec_label_pc_ffa0 ], [ %v1_ff80, %bb414 ], [ %v1_ffe0, %dec_label_pc_ffc4 ], [ %v1_ffe0, %dec_label_pc_ffcc ], [ %v1_ffe0, %dec_label_pc_ffd4 ], [ %v1_ffe0, %bb415 ], [ %v1_ffe0, %dec_label_pc_ffe8 ]
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_fffc = add i32 %v0_fffc, 1
  store i32 %v1_fffc, i32* @r8, align 4
  %v1_10000 = call i32 @function_10988(i32 23)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v3_10010 = call i32 @function_108c4(i32 23, i32* nonnull %stack_var_-60)
  store i32 %v3_10010, i32* %r0.global-to-local, align 4
  %v3_10014 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10014, i32* %r2.global-to-local, align 4
  store i32 %v3_10010, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10020 = load i32, i32* @r6, align 4
  %v1_10020 = add i32 %v0_10020, 4
  %v2_10020 = inttoptr i32 %v1_10020 to i32*
  %v3_10020 = load i32, i32* %v2_10020, align 4
  store i32 %v3_10020, i32* %r0.global-to-local, align 4
  %v4_10024 = call i32 @function_123a8(i32 %v3_10020, i32 %v3_10010, i32 %v3_10014, i32 16384)
  store i32 %v4_10024, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10034 = load i32, i32* @r6, align 4
  %v1_10034 = add i32 %v0_10034, 4
  %v2_10034 = inttoptr i32 %v1_10034 to i32*
  %v3_10034 = load i32, i32* %v2_10034, align 4
  store i32 %v3_10034, i32* %r0.global-to-local, align 4
  %v4_10038 = call i32 @function_123a8(i32 %v3_10034, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 23, i32* %r0.global-to-local, align 4
  %v1_10040 = call i32 @function_108e8(i32 23)
  store i32 %v1_10040, i32* %r0.global-to-local, align 4
  store i32 9, i32* @r3, align 4
  %v1_10048 = load i32, i32* @r6, align 4
  %v2_10048 = add i32 %v1_10048, 12
  %v3_10048 = inttoptr i32 %v2_10048 to i32*
  store i32 9, i32* %v3_10048, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_10050:                               ; preds = %dec_label_pc_fbbc
  %v1_10050 = add i32 %v0_fbbc, 24
  %v2_10050 = inttoptr i32 %v1_10050 to i32*
  %v3_10050 = load i32, i32* %v2_10050, align 4
  store i32 %v3_10050, i32* %r2.global-to-local, align 4
  %v1_10054 = add i32 %v3_10050, -1
  store i32 %v1_10054, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10058 = icmp eq i32 %v1_10054, 0
  store i1 %v2_10058, i1* %cpsr_z.global-to-local, align 1
  %tmp416 = icmp slt i32 %v1_10054, 1
  br i1 %tmp416, label %dec_label_pc_fb3c.backedge.thread, label %dec_label_pc_10060

dec_label_pc_10060:                               ; preds = %dec_label_pc_10050
  %v2_10060 = add i32 %v1_10054, %v0_fbbc
  store i32 %v2_10060, i32* %r3.global-to-local, align 4
  %v1_10064 = add i32 %v2_10060, 28
  %v2_10064 = inttoptr i32 %v1_10064 to i8*
  %v3_10064 = load i8, i8* %v2_10064, align 1
  %v4_10064 = zext i8 %v3_10064 to i32
  store i32 %v4_10064, i32* %r3.global-to-local, align 4
  %v2_10068 = icmp ugt i8 %v3_10064, 61
  store i1 %v2_10068, i1* %cpsr_c.global-to-local, align 1
  %v7_10068 = icmp eq i8 %v3_10064, 62
  store i1 %v7_10068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10068, label %dec_label_pc_100cc, label %bb417

bb417:                                            ; preds = %dec_label_pc_10060
  %v3_1006c = icmp ugt i8 %v3_10064, 57
  store i1 %v3_1006c, i1* %cpsr_c.global-to-local, align 1
  %v8_1006c = icmp eq i8 %v3_10064, 58
  store i1 %v8_1006c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1006c, label %dec_label_pc_100cc, label %dec_label_pc_10074

dec_label_pc_10074:                               ; preds = %bb417
  %v2_10074 = icmp ugt i8 %v3_10064, 35
  store i1 %v2_10074, i1* %cpsr_c.global-to-local, align 1
  %v7_10074 = icmp eq i8 %v3_10064, 36
  store i1 %v7_10074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10074, label %dec_label_pc_100cc, label %dec_label_pc_1007c

dec_label_pc_1007c:                               ; preds = %dec_label_pc_10074
  %v2_1007c = icmp ugt i8 %v3_10064, 34
  store i1 %v2_1007c, i1* %cpsr_c.global-to-local, align 1
  %v7_1007c = icmp eq i8 %v3_10064, 35
  store i1 %v7_1007c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1007c, label %dec_label_pc_100cc, label %dec_label_pc_10084

dec_label_pc_10084:                               ; preds = %dec_label_pc_1007c
  %v2_10084 = icmp ugt i8 %v3_10064, 36
  store i1 %v2_10084, i1* %cpsr_c.global-to-local, align 1
  %v7_10084 = icmp eq i8 %v3_10064, 37
  store i1 %v7_10084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10084, label %dec_label_pc_100cc, label %dec_label_pc_100b4.preheader

dec_label_pc_100b4.preheader:                     ; preds = %dec_label_pc_10084
  %v3_10088 = add i32 %v0_fbbc, 28
  %v2_1008c = add i32 %v3_10088, %v3_10050
  store i32 %v2_1008c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100b4

dec_label_pc_10098:                               ; preds = %bb418
  %v2_10098 = icmp ugt i8 %v3_100bc, 35
  store i1 %v2_10098, i1* %cpsr_c.global-to-local, align 1
  %v7_10098 = icmp eq i8 %v3_100bc, 36
  store i1 %v7_10098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10098, label %dec_label_pc_100cc, label %dec_label_pc_100a0

dec_label_pc_100a0:                               ; preds = %dec_label_pc_10098
  %v2_100a0 = icmp ugt i8 %v3_100bc, 34
  store i1 %v2_100a0, i1* %cpsr_c.global-to-local, align 1
  %v7_100a0 = icmp eq i8 %v3_100bc, 35
  store i1 %v7_100a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100a0, label %dec_label_pc_100cc, label %dec_label_pc_100a8

dec_label_pc_100a8:                               ; preds = %dec_label_pc_100a0
  %v2_100a8 = icmp ugt i8 %v3_100bc, 36
  store i1 %v2_100a8, i1* %cpsr_c.global-to-local, align 1
  %v7_100a8 = icmp eq i8 %v3_100bc, 37
  store i1 %v7_100a8, i1* %cpsr_z.global-to-local, align 1
  %v1_100ac = add i32 %v0_100ac, -1
  store i32 %v1_100ac, i32* %r3.global-to-local, align 4
  br i1 %v7_100a8, label %dec_label_pc_100cc, label %dec_label_pc_100b4

dec_label_pc_100b4:                               ; preds = %dec_label_pc_100b4.preheader, %dec_label_pc_100a8
  %v0_100ac = phi i32 [ %v2_1008c, %dec_label_pc_100b4.preheader ], [ %v1_100ac, %dec_label_pc_100a8 ]
  %v0_100b4 = phi i32 [ %v1_10054, %dec_label_pc_100b4.preheader ], [ %v1_100b4, %dec_label_pc_100a8 ]
  %v1_100b4 = add i32 %v0_100b4, -1
  store i32 %v1_100b4, i32* %r1.global-to-local, align 4
  %v2_100b4 = icmp ne i32 %v0_100b4, 0
  store i1 %v2_100b4, i1* %cpsr_c.global-to-local, align 1
  %v7_100b4 = icmp eq i32 %v0_100b4, 1
  store i1 %v7_100b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100b4, label %dec_label_pc_fb3c.backedge.thread541, label %dec_label_pc_100bc

dec_label_pc_100bc:                               ; preds = %dec_label_pc_100b4
  %v1_100bc = add i32 %v0_100ac, -2
  %v2_100bc = inttoptr i32 %v1_100bc to i8*
  %v3_100bc = load i8, i8* %v2_100bc, align 1
  %v4_100bc = zext i8 %v3_100bc to i32
  store i32 %v4_100bc, i32* %r2.global-to-local, align 4
  %v2_100c0 = icmp ugt i8 %v3_100bc, 61
  store i1 %v2_100c0, i1* %cpsr_c.global-to-local, align 1
  %v7_100c0 = icmp eq i8 %v3_100bc, 62
  store i1 %v7_100c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100c0, label %dec_label_pc_100cc, label %bb418

bb418:                                            ; preds = %dec_label_pc_100bc
  %v3_100c4 = icmp ugt i8 %v3_100bc, 57
  store i1 %v3_100c4, i1* %cpsr_c.global-to-local, align 1
  %v8_100c4 = icmp eq i8 %v3_100bc, 58
  store i1 %v8_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_100c4, label %dec_label_pc_100cc, label %dec_label_pc_10098

dec_label_pc_100cc:                               ; preds = %dec_label_pc_100bc, %bb418, %dec_label_pc_100a8, %dec_label_pc_100a0, %dec_label_pc_10098, %dec_label_pc_10084, %dec_label_pc_10060, %dec_label_pc_1007c, %dec_label_pc_10074, %bb417
  %v0_100d0 = phi i32 [ %v1_10054, %dec_label_pc_10084 ], [ %v1_10054, %dec_label_pc_10060 ], [ %v1_10054, %dec_label_pc_1007c ], [ %v1_10054, %dec_label_pc_10074 ], [ %v1_10054, %bb417 ], [ %v1_100b4, %dec_label_pc_10098 ], [ %v1_100b4, %dec_label_pc_100a0 ], [ %v1_100b4, %dec_label_pc_100a8 ], [ %v1_100b4, %bb418 ], [ %v1_100b4, %dec_label_pc_100bc ]
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_100d0 = add i32 %v0_100d0, 1
  store i32 %v1_100d0, i32* @r8, align 4
  %v1_100d4 = call i32 @function_10988(i32 21)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r0.global-to-local, align 4
  %v3_100e4 = call i32 @function_108c4(i32 21, i32* nonnull %stack_var_-60)
  store i32 %v3_100e4, i32* %r0.global-to-local, align 4
  %v3_100e8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_100e8, i32* %r2.global-to-local, align 4
  store i32 %v3_100e4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_100f4 = load i32, i32* @r6, align 4
  %v1_100f4 = add i32 %v0_100f4, 4
  %v2_100f4 = inttoptr i32 %v1_100f4 to i32*
  %v3_100f4 = load i32, i32* %v2_100f4, align 4
  store i32 %v3_100f4, i32* %r0.global-to-local, align 4
  %v4_100f8 = call i32 @function_123a8(i32 %v3_100f4, i32 %v3_100e4, i32 %v3_100e8, i32 16384)
  store i32 %v4_100f8, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_10108 = load i32, i32* @r6, align 4
  %v1_10108 = add i32 %v0_10108, 4
  %v2_10108 = inttoptr i32 %v1_10108 to i32*
  %v3_10108 = load i32, i32* %v2_10108, align 4
  store i32 %v3_10108, i32* %r0.global-to-local, align 4
  %v4_1010c = call i32 @function_123a8(i32 %v3_10108, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 21, i32* %r0.global-to-local, align 4
  %v1_10114 = call i32 @function_108e8(i32 21)
  store i32 %v1_10114, i32* %r0.global-to-local, align 4
  store i32 6, i32* @r3, align 4
  %v1_1011c = load i32, i32* @r6, align 4
  %v2_1011c = add i32 %v1_1011c, 12
  %v3_1011c = inttoptr i32 %v2_1011c to i32*
  store i32 6, i32* %v3_1011c, align 4
  br label %dec_label_pc_fcd8

dec_label_pc_10124:                               ; preds = %dec_label_pc_fbbc
  %v1_10124 = add i32 %v0_fbbc, 24
  %v2_10124 = inttoptr i32 %v1_10124 to i32*
  %v3_10124 = load i32, i32* %v2_10124, align 4
  store i32 %v3_10124, i32* %r2.global-to-local, align 4
  %v1_10128 = add i32 %v3_10124, -1
  store i32 %v1_10128, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1012c = icmp eq i32 %v1_10128, 0
  store i1 %v2_1012c, i1* %cpsr_z.global-to-local, align 1
  %tmp419 = icmp slt i32 %v1_10128, 1
  br i1 %tmp419, label %dec_label_pc_101a0, label %dec_label_pc_10134

dec_label_pc_10134:                               ; preds = %dec_label_pc_10124
  %v2_10134 = add i32 %v1_10128, %v0_fbbc
  store i32 %v2_10134, i32* %r3.global-to-local, align 4
  %v1_10138 = add i32 %v2_10134, 28
  %v2_10138 = inttoptr i32 %v1_10138 to i8*
  %v3_10138 = load i8, i8* %v2_10138, align 1
  %v4_10138 = zext i8 %v3_10138 to i32
  store i32 %v4_10138, i32* %r3.global-to-local, align 4
  %v2_1013c = icmp ugt i8 %v3_10138, 61
  store i1 %v2_1013c, i1* %cpsr_c.global-to-local, align 1
  %v7_1013c = icmp eq i8 %v3_10138, 62
  store i1 %v7_1013c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1013c, label %dec_label_pc_1047c, label %bb420

bb420:                                            ; preds = %dec_label_pc_10134
  %v3_10140 = icmp ugt i8 %v3_10138, 57
  store i1 %v3_10140, i1* %cpsr_c.global-to-local, align 1
  %v8_10140 = icmp eq i8 %v3_10138, 58
  store i1 %v8_10140, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10140, label %dec_label_pc_1047c, label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %bb420
  %v2_10148 = icmp ugt i8 %v3_10138, 35
  store i1 %v2_10148, i1* %cpsr_c.global-to-local, align 1
  %v7_10148 = icmp eq i8 %v3_10138, 36
  store i1 %v7_10148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10148, label %dec_label_pc_1047c, label %dec_label_pc_10150

dec_label_pc_10150:                               ; preds = %dec_label_pc_10148
  %v2_10150 = icmp ugt i8 %v3_10138, 34
  store i1 %v2_10150, i1* %cpsr_c.global-to-local, align 1
  %v7_10150 = icmp eq i8 %v3_10138, 35
  store i1 %v7_10150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10150, label %dec_label_pc_1047c, label %dec_label_pc_10158

dec_label_pc_10158:                               ; preds = %dec_label_pc_10150
  %v2_10158 = icmp ugt i8 %v3_10138, 36
  store i1 %v2_10158, i1* %cpsr_c.global-to-local, align 1
  %v7_10158 = icmp eq i8 %v3_10138, 37
  store i1 %v7_10158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10158, label %dec_label_pc_1047c, label %dec_label_pc_10198.preheader

dec_label_pc_10198.preheader:                     ; preds = %dec_label_pc_10158
  %v3_1015c = add i32 %v0_fbbc, 28
  %v2_10160 = add i32 %v3_1015c, %v3_10124
  store i32 %v2_10160, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10198

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10198
  %v1_1016c = add i32 %v0_10190, -2
  %v2_1016c = inttoptr i32 %v1_1016c to i8*
  %v3_1016c = load i8, i8* %v2_1016c, align 1
  %v4_1016c = zext i8 %v3_1016c to i32
  store i32 %v4_1016c, i32* %r2.global-to-local, align 4
  %v2_10170 = icmp ugt i8 %v3_1016c, 61
  store i1 %v2_10170, i1* %cpsr_c.global-to-local, align 1
  %v7_10170 = icmp eq i8 %v3_1016c, 62
  store i1 %v7_10170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10170, label %dec_label_pc_1047c, label %bb421

bb421:                                            ; preds = %dec_label_pc_1016c
  %v3_10174 = icmp ugt i8 %v3_1016c, 57
  store i1 %v3_10174, i1* %cpsr_c.global-to-local, align 1
  %v8_10174 = icmp eq i8 %v3_1016c, 58
  store i1 %v8_10174, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10174, label %dec_label_pc_1047c, label %dec_label_pc_1017c

dec_label_pc_1017c:                               ; preds = %bb421
  %v2_1017c = icmp ugt i8 %v3_1016c, 35
  store i1 %v2_1017c, i1* %cpsr_c.global-to-local, align 1
  %v7_1017c = icmp eq i8 %v3_1016c, 36
  store i1 %v7_1017c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1017c, label %dec_label_pc_1047c, label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %dec_label_pc_1017c
  %v2_10184 = icmp ugt i8 %v3_1016c, 34
  store i1 %v2_10184, i1* %cpsr_c.global-to-local, align 1
  %v7_10184 = icmp eq i8 %v3_1016c, 35
  store i1 %v7_10184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10184, label %dec_label_pc_1047c, label %dec_label_pc_1018c

dec_label_pc_1018c:                               ; preds = %dec_label_pc_10184
  %v2_1018c = icmp ugt i8 %v3_1016c, 36
  store i1 %v2_1018c, i1* %cpsr_c.global-to-local, align 1
  %v7_1018c = icmp eq i8 %v3_1016c, 37
  store i1 %v7_1018c, i1* %cpsr_z.global-to-local, align 1
  %v1_10190 = add i32 %v0_10190, -1
  store i32 %v1_10190, i32* %r3.global-to-local, align 4
  br i1 %v7_1018c, label %dec_label_pc_1047c, label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %dec_label_pc_10198.preheader, %dec_label_pc_1018c
  %v0_10190 = phi i32 [ %v2_10160, %dec_label_pc_10198.preheader ], [ %v1_10190, %dec_label_pc_1018c ]
  %v0_10198 = phi i32 [ %v1_10128, %dec_label_pc_10198.preheader ], [ %v1_10198, %dec_label_pc_1018c ]
  %v1_10198 = add i32 %v0_10198, -1
  store i32 %v1_10198, i32* %r1.global-to-local, align 4
  %v2_10198 = icmp ne i32 %v0_10198, 0
  store i1 %v2_10198, i1* %cpsr_c.global-to-local, align 1
  %v7_10198 = icmp eq i32 %v0_10198, 1
  store i1 %v7_10198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10198, label %dec_label_pc_101a0, label %dec_label_pc_1016c

dec_label_pc_101a0:                               ; preds = %dec_label_pc_10198, %dec_label_pc_10124
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_101a4 = call i32 @function_10988(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_101ac = call i32 @function_10988(i32 33)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_101bc = call i32 @function_108c4(i32 32, i32* nonnull %stack_var_-60)
  store i32 %v3_101bc, i32* @r4, align 4
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v3_101d0 = call i32 @function_108c4(i32 33, i32* nonnull %stack_var_-60)
  %v3_101d4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_101d0, i32* @r5, align 4
  %v0_101dc = load i32, i32* @r4, align 4
  store i32 %v0_101dc, i32* %r2.global-to-local, align 4
  %v1_101e0 = add i32 %v3_101d4, -1
  store i32 %v1_101e0, i32* %r3.global-to-local, align 4
  %v0_101e4 = load i32, i32* @fp, align 4
  store i32 %v0_101e4, i32* %r0.global-to-local, align 4
  %v0_101e8 = load i32, i32* @r6, align 4
  %v1_101e8 = add i32 %v0_101e8, 24
  %v2_101e8 = inttoptr i32 %v1_101e8 to i32*
  %v3_101e8 = load i32, i32* %v2_101e8, align 4
  store i32 %v3_101e8, i32* %r1.global-to-local, align 4
  %v4_101ec = call i32 @function_1124c(i32 %v0_101e4, i32 %v3_101e8, i32 %v0_101dc, i32 %v1_101e0)
  store i32 %v4_101ec, i32* %r0.global-to-local, align 4
  %v2_101f0 = icmp eq i32 %v4_101ec, -1
  store i1 %v2_101f0, i1* %cpsr_c.global-to-local, align 1
  %v7_101f0 = icmp eq i32 %v4_101ec, -1
  store i1 %v7_101f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101f0, label %dec_label_pc_10200, label %dec_label_pc_10228

dec_label_pc_10200:                               ; preds = %dec_label_pc_101a0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10200 = load i32, i32* %stack_var_-60, align 4
  %v0_10204 = load i32, i32* @r5, align 4
  store i32 %v0_10204, i32* %r2.global-to-local, align 4
  %v1_10208 = add i32 %v3_10200, -1
  store i32 %v1_10208, i32* %r3.global-to-local, align 4
  %v0_1020c = load i32, i32* @fp, align 4
  store i32 %v0_1020c, i32* %r0.global-to-local, align 4
  %v0_10210 = load i32, i32* @r6, align 4
  %v1_10210 = add i32 %v0_10210, 24
  %v2_10210 = inttoptr i32 %v1_10210 to i32*
  %v3_10210 = load i32, i32* %v2_10210, align 4
  store i32 %v3_10210, i32* %r1.global-to-local, align 4
  %v4_10214 = call i32 @function_1124c(i32 %v0_1020c, i32 %v3_10210, i32 %v0_10204, i32 %v1_10208)
  store i32 %v4_10214, i32* %r0.global-to-local, align 4
  %v2_10218 = icmp eq i32 %v4_10214, -1
  store i1 %v2_10218, i1* %cpsr_c.global-to-local, align 1
  %v7_10218 = icmp eq i32 %v4_10214, -1
  store i1 %v7_10218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10218, label %dec_label_pc_10744, label %dec_label_pc_10228

dec_label_pc_10228:                               ; preds = %dec_label_pc_10200, %dec_label_pc_101a0
  store i32 1, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_1022c = call i32 @function_108e8(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10234 = call i32 @function_108e8(i32 33)
  store i32 %v1_10234, i32* %r0.global-to-local, align 4
  %v0_10238 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10238 = icmp eq i32 %v0_10238, 0
  store i1 %v2_10238, i1* %cpsr_z.global-to-local, align 1
  %v5_1023c = icmp sgt i32 %v0_10238, 0
  br i1 %v5_1023c, label %dec_label_pc_10490, label %dec_label_pc_10240

dec_label_pc_10240:                               ; preds = %dec_label_pc_103f8, %bb428, %dec_label_pc_10524, %dec_label_pc_10228, %dec_label_pc_105ac, %dec_label_pc_10300, %dec_label_pc_10490
  %v0_10240 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10240 = icmp eq i32 %v0_10240, 0
  store i1 %v2_10240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10240, label %dec_label_pc_fb38.loopexit, label %dec_label_pc_fcd8

dec_label_pc_1024c:                               ; preds = %dec_label_pc_fbbc
  %v1_1024c = add i32 %v0_fbbc, 24
  %v2_1024c = inttoptr i32 %v1_1024c to i32*
  %v3_1024c = load i32, i32* %v2_1024c, align 4
  store i32 %v3_1024c, i32* %r2.global-to-local, align 4
  %v1_10250 = add i32 %v3_1024c, -1
  store i32 %v1_10250, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10254 = icmp eq i32 %v1_10250, 0
  store i1 %v2_10254, i1* %cpsr_z.global-to-local, align 1
  %tmp422 = icmp slt i32 %v1_10250, 1
  br i1 %tmp422, label %dec_label_pc_102b8, label %dec_label_pc_1025c

dec_label_pc_1025c:                               ; preds = %dec_label_pc_1024c
  %v2_1025c = add i32 %v1_10250, %v0_fbbc
  store i32 %v2_1025c, i32* %r3.global-to-local, align 4
  %v1_10260 = add i32 %v2_1025c, 28
  %v2_10260 = inttoptr i32 %v1_10260 to i8*
  %v3_10260 = load i8, i8* %v2_10260, align 1
  %v4_10260 = zext i8 %v3_10260 to i32
  store i32 %v4_10260, i32* %r3.global-to-local, align 4
  %v2_10264 = icmp ugt i8 %v3_10260, 61
  store i1 %v2_10264, i1* %cpsr_c.global-to-local, align 1
  %v7_10264 = icmp eq i8 %v3_10260, 62
  store i1 %v7_10264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10264, label %dec_label_pc_104c8, label %bb423

bb423:                                            ; preds = %dec_label_pc_1025c
  %v3_10268 = icmp ugt i8 %v3_10260, 57
  store i1 %v3_10268, i1* %cpsr_c.global-to-local, align 1
  %v8_10268 = icmp eq i8 %v3_10260, 58
  store i1 %v8_10268, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10268, label %dec_label_pc_104c8, label %dec_label_pc_10270

dec_label_pc_10270:                               ; preds = %bb423
  %v2_10270 = icmp ugt i8 %v3_10260, 35
  store i1 %v2_10270, i1* %cpsr_c.global-to-local, align 1
  %v7_10270 = icmp eq i8 %v3_10260, 36
  store i1 %v7_10270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10270, label %dec_label_pc_104c8, label %dec_label_pc_10278

dec_label_pc_10278:                               ; preds = %dec_label_pc_10270
  %v2_10278 = icmp ugt i8 %v3_10260, 34
  store i1 %v2_10278, i1* %cpsr_c.global-to-local, align 1
  %v7_10278 = icmp eq i8 %v3_10260, 35
  store i1 %v7_10278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10278, label %dec_label_pc_104c8, label %dec_label_pc_102b0.preheader

dec_label_pc_102b0.preheader:                     ; preds = %dec_label_pc_10278
  %v3_1027c = add i32 %v0_fbbc, 28
  %v2_10280 = add i32 %v3_1027c, %v3_1024c
  store i32 %v2_10280, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_102b0

dec_label_pc_1028c:                               ; preds = %dec_label_pc_102b0
  %v1_1028c = add i32 %v0_102a8, -2
  %v2_1028c = inttoptr i32 %v1_1028c to i8*
  %v3_1028c = load i8, i8* %v2_1028c, align 1
  %v4_1028c = zext i8 %v3_1028c to i32
  store i32 %v4_1028c, i32* %r2.global-to-local, align 4
  %v2_10290 = icmp ugt i8 %v3_1028c, 61
  store i1 %v2_10290, i1* %cpsr_c.global-to-local, align 1
  %v7_10290 = icmp eq i8 %v3_1028c, 62
  store i1 %v7_10290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10290, label %dec_label_pc_104c8, label %bb424

bb424:                                            ; preds = %dec_label_pc_1028c
  %v3_10294 = icmp ugt i8 %v3_1028c, 57
  store i1 %v3_10294, i1* %cpsr_c.global-to-local, align 1
  %v8_10294 = icmp eq i8 %v3_1028c, 58
  store i1 %v8_10294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10294, label %dec_label_pc_104c8, label %dec_label_pc_1029c

dec_label_pc_1029c:                               ; preds = %bb424
  %v2_1029c = icmp ugt i8 %v3_1028c, 35
  store i1 %v2_1029c, i1* %cpsr_c.global-to-local, align 1
  %v7_1029c = icmp eq i8 %v3_1028c, 36
  store i1 %v7_1029c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1029c, label %dec_label_pc_104c8, label %dec_label_pc_102a4

dec_label_pc_102a4:                               ; preds = %dec_label_pc_1029c
  %v2_102a4 = icmp ugt i8 %v3_1028c, 34
  store i1 %v2_102a4, i1* %cpsr_c.global-to-local, align 1
  %v7_102a4 = icmp eq i8 %v3_1028c, 35
  store i1 %v7_102a4, i1* %cpsr_z.global-to-local, align 1
  %v1_102a8 = add i32 %v0_102a8, -1
  store i32 %v1_102a8, i32* %r3.global-to-local, align 4
  br i1 %v7_102a4, label %dec_label_pc_104c8, label %dec_label_pc_102b0

dec_label_pc_102b0:                               ; preds = %dec_label_pc_102b0.preheader, %dec_label_pc_102a4
  %v0_102a8 = phi i32 [ %v2_10280, %dec_label_pc_102b0.preheader ], [ %v1_102a8, %dec_label_pc_102a4 ]
  %v0_102b0 = phi i32 [ %v1_10250, %dec_label_pc_102b0.preheader ], [ %v1_102b0, %dec_label_pc_102a4 ]
  %v1_102b0 = add i32 %v0_102b0, -1
  store i32 %v1_102b0, i32* %r1.global-to-local, align 4
  %v2_102b0 = icmp ne i32 %v0_102b0, 0
  store i1 %v2_102b0, i1* %cpsr_c.global-to-local, align 1
  %v7_102b0 = icmp eq i32 %v0_102b0, 1
  store i1 %v7_102b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b0, label %dec_label_pc_102b8, label %dec_label_pc_1028c

dec_label_pc_102b8:                               ; preds = %dec_label_pc_102b0, %dec_label_pc_1024c
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_102bc = call i32 @function_10988(i32 31)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_102cc = call i32 @function_108c4(i32 31, i32* nonnull %stack_var_-60)
  %v3_102d0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_102cc, i32* %r2.global-to-local, align 4
  %v1_102d8 = add i32 %v3_102d0, -1
  store i32 %v1_102d8, i32* %r3.global-to-local, align 4
  %v0_102dc = load i32, i32* @fp, align 4
  store i32 %v0_102dc, i32* %r0.global-to-local, align 4
  %v0_102e0 = load i32, i32* @r6, align 4
  %v1_102e0 = add i32 %v0_102e0, 24
  %v2_102e0 = inttoptr i32 %v1_102e0 to i32*
  %v3_102e0 = load i32, i32* %v2_102e0, align 4
  store i32 %v3_102e0, i32* %r1.global-to-local, align 4
  %v4_102e4 = call i32 @function_1124c(i32 %v0_102dc, i32 %v3_102e0, i32 %v3_102cc, i32 %v1_102d8)
  store i32 %v4_102e4, i32* %r0.global-to-local, align 4
  %v2_102e8 = icmp eq i32 %v4_102e4, -1
  store i1 %v2_102e8, i1* %cpsr_c.global-to-local, align 1
  %v7_102e8 = icmp eq i32 %v4_102e4, -1
  store i1 %v7_102e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102e8, label %dec_label_pc_1075c, label %dec_label_pc_102f8

dec_label_pc_102f8:                               ; preds = %dec_label_pc_102b8
  store i32 1, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_102fc = call i32 @function_108e8(i32 31)
  br label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_104c8, %dec_label_pc_102f8
  %storemerge = phi i32 [ %v1_102fc, %dec_label_pc_102f8 ], [ %v1_104d0, %dec_label_pc_104c8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v0_10300 = load i32, i32* @r6, align 4
  %v1_10300 = inttoptr i32 %v0_10300 to i32*
  %v2_10300 = load i32, i32* %v1_10300, align 4
  store i32 %v2_10300, i32* %r3.global-to-local, align 4
  %v1_10304 = add i32 %v0_10300, 4
  %v2_10304 = inttoptr i32 %v1_10304 to i32*
  %v3_10304 = load i32, i32* %v2_10304, align 4
  store i32 %v3_10304, i32* %r0.global-to-local, align 4
  %v1_10308 = add i32 %v2_10300, 13
  %v2_10308 = inttoptr i32 %v1_10308 to i8*
  %v3_10308 = load i8, i8* %v2_10308, align 1
  %v4_10308 = zext i8 %v3_10308 to i32
  store i32 %v4_10308, i32* %r2.global-to-local, align 4
  %v1_1030c = add i32 %v2_10300, 4
  %v2_1030c = inttoptr i32 %v1_1030c to i32*
  %v3_1030c = load i32, i32* %v2_1030c, align 4
  store i32 %v3_1030c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10314 = call i32 @function_123a8(i32 %v3_10304, i32 %v3_1030c, i32 %v4_10308, i32 16384)
  store i32 %v4_10314, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1031c = load i32, i32* @r6, align 4
  %v1_1031c = add i32 %v0_1031c, 4
  %v2_1031c = inttoptr i32 %v1_1031c to i32*
  %v3_1031c = load i32, i32* %v2_1031c, align 4
  store i32 %v3_1031c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_10328 = call i32 @function_123a8(i32 %v3_1031c, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 %v4_10328, i32* %r0.global-to-local, align 4
  store i32 5, i32* @r3, align 4
  %v1_10330 = load i32, i32* @r6, align 4
  %v2_10330 = add i32 %v1_10330, 12
  %v3_10330 = inttoptr i32 %v2_10330 to i32*
  store i32 5, i32* %v3_10330, align 4
  br label %dec_label_pc_10240

dec_label_pc_10338:                               ; preds = %dec_label_pc_fbbc
  %v1_10338 = add i32 %v0_fbbc, 24
  %v2_10338 = inttoptr i32 %v1_10338 to i32*
  %v3_10338 = load i32, i32* %v2_10338, align 4
  store i32 %v3_10338, i32* %r2.global-to-local, align 4
  %v0_1033c = load i32, i32* @fp, align 4
  store i32 %v0_1033c, i32* @r4, align 4
  store i32 0, i32* @r8, align 4
  %v3_10344152 = icmp eq i32 %v3_10338, 0
  store i1 %v3_10344152, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10344152, i1* %cpsr_z.global-to-local, align 1
  %v6_10348159 = icmp sgt i32 %v3_10338, 0
  br i1 %v6_10348159, label %dec_label_pc_1034c.preheader, label %dec_label_pc_103f8

dec_label_pc_10344.loopexit:                      ; preds = %dec_label_pc_10368
  %v2_10370 = add i32 %v1_10370, 2
  store i32 %v2_10370, i32* @r4, align 4
  %v2_10374 = add i32 %v1_10374, 2
  store i32 %v2_10374, i32* @r8, align 4
  %v3_10344 = icmp uge i32 %v2_10374, %v1_10344
  store i1 %v3_10344, i1* %cpsr_c.global-to-local, align 1
  %v9_10344 = icmp eq i32 %v2_10374, %v1_10344
  store i1 %v9_10344, i1* %cpsr_z.global-to-local, align 1
  %v6_10348 = icmp slt i32 %v2_10374, %v1_10344
  br i1 %v6_10348, label %dec_label_pc_1034c.preheader, label %dec_label_pc_103f8

dec_label_pc_1034c.preheader:                     ; preds = %dec_label_pc_10338, %dec_label_pc_10344.loopexit
  %v6_10400239 = phi i32 [ %v6_10400240, %dec_label_pc_10344.loopexit ], [ %v0_fbbc, %dec_label_pc_10338 ]
  %v1_10374228 = phi i32 [ %v2_10374, %dec_label_pc_10344.loopexit ], [ 0, %dec_label_pc_10338 ]
  %v1_10358226 = phi i32 [ %v1_10344, %dec_label_pc_10344.loopexit ], [ %v3_10338, %dec_label_pc_10338 ]
  %v0_1034c224 = phi i32 [ %v2_10370, %dec_label_pc_10344.loopexit ], [ %v0_1033c, %dec_label_pc_10338 ]
  br label %dec_label_pc_1034c

dec_label_pc_1034c:                               ; preds = %dec_label_pc_1034c.preheader, %dec_label_pc_103dc
  %v6_10400240 = phi i32 [ %v6_10400239, %dec_label_pc_1034c.preheader ], [ %v0_103e4, %dec_label_pc_103dc ]
  %v1_10374 = phi i32 [ %v1_10374228, %dec_label_pc_1034c.preheader ], [ %v1_103e8, %dec_label_pc_103dc ]
  %v1_10344 = phi i32 [ %v1_10358226, %dec_label_pc_1034c.preheader ], [ %v3_103e4, %dec_label_pc_103dc ]
  %v1_10370 = phi i32 [ %v0_1034c224, %dec_label_pc_1034c.preheader ], [ %v1_103f0, %dec_label_pc_103dc ]
  %v1_1034c = inttoptr i32 %v1_10370 to i8*
  %v2_1034c = load i8, i8* %v1_1034c, align 1
  %v3_1034c = zext i8 %v2_1034c to i32
  store i32 %v3_1034c, i32* @r3, align 4
  %v2_10350 = icmp eq i8 %v2_1034c, -1
  store i1 %v2_10350, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_10350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10350, label %dec_label_pc_10358, label %dec_label_pc_103f8

dec_label_pc_10358:                               ; preds = %dec_label_pc_1034c
  %v0_10358 = load i32, i32* @fp, align 4
  %v2_10358 = add i32 %v0_10358, %v1_10344
  store i32 %v2_10358, i32* %r1.global-to-local, align 4
  %v1_1035c = add i32 %v1_10370, 1
  store i32 %v1_1035c, i32* @r5, align 4
  %v3_10360 = icmp uge i32 %v2_10358, %v1_1035c
  store i1 %v3_10360, i1* %cpsr_c.global-to-local, align 1
  %v9_10360 = icmp eq i32 %v2_10358, %v1_1035c
  store i1 %v9_10360, i1* %cpsr_z.global-to-local, align 1
  %v2_10364 = xor i1 %v3_10360, true
  %v3_10364 = or i1 %v9_10360, %v2_10364
  br i1 %v3_10364, label %dec_label_pc_103f8, label %dec_label_pc_10368

dec_label_pc_10368:                               ; preds = %dec_label_pc_10358
  %v2_10368 = inttoptr i32 %v1_1035c to i8*
  %v3_10368 = load i8, i8* %v2_10368, align 1
  %v4_10368 = zext i8 %v3_10368 to i32
  store i32 %v4_10368, i32* @r3, align 4
  %v2_1036c = icmp eq i8 %v3_10368, -1
  store i1 %v2_1036c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_1036c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1036c, label %dec_label_pc_10344.loopexit, label %dec_label_pc_1037c

dec_label_pc_1037c:                               ; preds = %dec_label_pc_10368
  %v2_1037c = icmp ugt i8 %v3_10368, -4
  store i1 %v2_1037c, i1* %cpsr_c.global-to-local, align 1
  %v7_1037c = icmp eq i8 %v3_10368, -3
  store i1 %v7_1037c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1037c, label %dec_label_pc_10408, label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %dec_label_pc_1037c
  %v1_10384 = add i32 %v1_10370, 2
  store i32 %v1_10384, i32* @r3, align 4
  %v3_10388 = icmp uge i32 %v2_10358, %v1_10384
  store i1 %v3_10388, i1* %cpsr_c.global-to-local, align 1
  %v9_10388 = icmp eq i32 %v2_10358, %v1_10384
  store i1 %v9_10388, i1* %cpsr_z.global-to-local, align 1
  %v2_1038c = xor i1 %v3_10388, true
  %v3_1038c = or i1 %v9_10388, %v2_1038c
  br i1 %v3_1038c, label %dec_label_pc_103f8, label %dec_label_pc_10390

dec_label_pc_10390:                               ; preds = %dec_label_pc_1046c, %bb429, %.thread119, %dec_label_pc_10384
  %v0_10390 = load i32, i32* @r5, align 4
  %v1_10390 = inttoptr i32 %v0_10390 to i8*
  %v2_10390 = load i8, i8* %v1_10390, align 1
  %v3_10390 = zext i8 %v2_10390 to i32
  store i32 %v3_10390, i32* %r3.global-to-local, align 4
  %v2_10394 = icmp ugt i8 %v2_10390, -4
  store i1 %v2_10394, i1* %cpsr_c.global-to-local, align 1
  %v7_10394 = icmp eq i8 %v2_10390, -3
  store i1 %v7_10394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10394, label %.thread111, label %dec_label_pc_103a4

.thread111:                                       ; preds = %dec_label_pc_10390
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10390, align 1
  %v0_103a0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103a0.pr.pr, label %.thread114, label %.thread111.dec_label_pc_103a4thread-pre-split_crit_edge

.thread111.dec_label_pc_103a4thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_103a4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_10390, %.thread111.dec_label_pc_103a4thread-pre-split_crit_edge
  %v0_103a4.pr = phi i32 [ %v0_103a4.pr.pre, %.thread111.dec_label_pc_103a4thread-pre-split_crit_edge ], [ %v3_10390, %dec_label_pc_10390 ]
  %v2_103a4 = icmp ugt i32 %v0_103a4.pr, 250
  store i1 %v2_103a4, i1* %cpsr_c.global-to-local, align 1
  %v7_103a4 = icmp eq i32 %v0_103a4.pr, 251
  store i1 %v7_103a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103a4, label %bb425, label %.thread114

bb425:                                            ; preds = %dec_label_pc_103a4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_103ac = load i32, i32* @r5, align 4
  %v4_103ac = inttoptr i32 %v3_103ac to i8*
  store i8 -3, i8* %v4_103ac, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_103a4, %.thread111, %bb425
  %v0_103b0 = load i32, i32* @r4, align 4
  %v1_103b0 = add i32 %v0_103b0, 2
  %v2_103b0 = inttoptr i32 %v1_103b0 to i8*
  %v3_103b0 = load i8, i8* %v2_103b0, align 1
  %v4_103b0 = zext i8 %v3_103b0 to i32
  store i32 %v4_103b0, i32* %r3.global-to-local, align 4
  %v2_103b4 = icmp ugt i8 %v3_103b0, -4
  store i1 %v2_103b4, i1* %cpsr_c.global-to-local, align 1
  %v7_103b4 = icmp eq i8 %v3_103b0, -3
  store i1 %v7_103b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103b4, label %.thread115, label %dec_label_pc_103c4

.thread115:                                       ; preds = %.thread114
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_103b0, align 1
  %v0_103c0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_103c0.pr.pr, label %.thread118, label %.thread115.dec_label_pc_103c4thread-pre-split_crit_edge

.thread115.dec_label_pc_103c4thread-pre-split_crit_edge: ; preds = %.thread115
  %v0_103c4.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %.thread114, %.thread115.dec_label_pc_103c4thread-pre-split_crit_edge
  %v0_103c4.pr = phi i32 [ %v0_103c4.pr.pre, %.thread115.dec_label_pc_103c4thread-pre-split_crit_edge ], [ %v4_103b0, %.thread114 ]
  %v2_103c4 = icmp ugt i32 %v0_103c4.pr, 250
  store i1 %v2_103c4, i1* %cpsr_c.global-to-local, align 1
  %v7_103c4 = icmp eq i32 %v0_103c4.pr, 251
  store i1 %v7_103c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c4, label %bb426, label %.thread118

bb426:                                            ; preds = %dec_label_pc_103c4
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_103cc = load i32, i32* @r4, align 4
  %v4_103cc = add i32 %v3_103cc, 2
  %v5_103cc = inttoptr i32 %v4_103cc to i8*
  store i8 -3, i8* %v5_103cc, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_103c4, %.thread115, %bb426
  %v0_103d0 = load i32, i32* @r6, align 4
  %v1_103d0 = add i32 %v0_103d0, 4
  %v2_103d0 = inttoptr i32 %v1_103d0 to i32*
  %v3_103d0 = load i32, i32* %v2_103d0, align 4
  store i32 %v3_103d0, i32* %r0.global-to-local, align 4
  %v0_103d4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_105ec, %.thread118
  %v0_103e0 = phi i32 [ %v3_10600, %dec_label_pc_105ec ], [ %v3_103d0, %.thread118 ]
  %storemerge3 = phi i32 [ %v2_10420, %dec_label_pc_105ec ], [ %v0_103d4, %.thread118 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_105ec ], [ 3, %.thread118 ]
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* @r3, align 4
  %v4_103e0 = call i32 @function_123a8(i32 %v0_103e0, i32 %storemerge3, i32 %storemerge2, i32 16384)
  store i32 %v4_103e0, i32* %r0.global-to-local, align 4
  %v0_103e4 = load i32, i32* @r6, align 4
  %v1_103e4 = add i32 %v0_103e4, 24
  %v2_103e4 = inttoptr i32 %v1_103e4 to i32*
  %v3_103e4 = load i32, i32* %v2_103e4, align 4
  store i32 %v3_103e4, i32* %r2.global-to-local, align 4
  %v0_103e8 = load i32, i32* @r8, align 4
  %v1_103e8 = add i32 %v0_103e8, 3
  store i32 %v1_103e8, i32* @r8, align 4
  %v3_103ec = icmp uge i32 %v1_103e8, %v3_103e4
  store i1 %v3_103ec, i1* %cpsr_c.global-to-local, align 1
  %v9_103ec = icmp eq i32 %v1_103e8, %v3_103e4
  store i1 %v9_103ec, i1* %cpsr_z.global-to-local, align 1
  %v0_103f0 = load i32, i32* @r4, align 4
  %v1_103f0 = add i32 %v0_103f0, 3
  store i32 %v1_103f0, i32* @r4, align 4
  %v5_103f4 = icmp slt i32 %v1_103e8, %v3_103e4
  br i1 %v5_103f4, label %dec_label_pc_1034c, label %dec_label_pc_103f8

dec_label_pc_103f8:                               ; preds = %dec_label_pc_10344.loopexit, %dec_label_pc_1034c, %dec_label_pc_103dc, %dec_label_pc_10384, %dec_label_pc_10358, %dec_label_pc_10338, %dec_label_pc_10408.dec_label_pc_103f8.loopexit_crit_edge
  %v6_10400 = phi i32 [ %v0_10438, %dec_label_pc_10408.dec_label_pc_103f8.loopexit_crit_edge ], [ %v0_fbbc, %dec_label_pc_10338 ], [ %v6_10400240, %dec_label_pc_1034c ], [ %v0_103e4, %dec_label_pc_103dc ], [ %v6_10400240, %dec_label_pc_10384 ], [ %v6_10400240, %dec_label_pc_10358 ], [ %v6_10400240, %dec_label_pc_10344.loopexit ]
  %v0_103f8 = phi i32 [ %v0_103f8.pre.pre, %dec_label_pc_10408.dec_label_pc_103f8.loopexit_crit_edge ], [ 0, %dec_label_pc_10338 ], [ %v1_10374, %dec_label_pc_1034c ], [ %v1_103e8, %dec_label_pc_103dc ], [ %v1_10374, %dec_label_pc_10384 ], [ %v1_10374, %dec_label_pc_10358 ], [ %v2_10374, %dec_label_pc_10344.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_103f8 = icmp eq i32 %v0_103f8, 0
  store i1 %v2_103f8, i1* %cpsr_z.global-to-local, align 1
  %tmp427 = icmp slt i32 %v0_103f8, 1
  br i1 %tmp427, label %dec_label_pc_10240, label %bb428

bb428:                                            ; preds = %dec_label_pc_103f8
  store i32 3, i32* @r3, align 4
  %v7_10400 = add i32 %v6_10400, 12
  %v8_10400 = inttoptr i32 %v7_10400 to i32*
  store i32 3, i32* %v8_10400, align 4
  br label %dec_label_pc_10240

dec_label_pc_10408:                               ; preds = %dec_label_pc_1037c
  store i32 %v2_1040c, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_175ac.486 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_1040c, i32* @r0, align 4
  %v0_10424 = call i32 @function_12180()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10420, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_175a3.488 to i32), i32* @r1, align 4
  %v0_10434 = call i32 @function_12180()
  store i32 %v0_10434, i32* %r0.global-to-local, align 4
  %v0_10438 = load i32, i32* @r6, align 4
  %v1_10438 = add i32 %v0_10438, 24
  %v2_10438 = inttoptr i32 %v1_10438 to i32*
  %v3_10438 = load i32, i32* %v2_10438, align 4
  %v0_1043c = load i32, i32* @r4, align 4
  %v1_1043c = add i32 %v0_1043c, 2
  store i32 %v1_1043c, i32* %r2.global-to-local, align 4
  %v0_10440 = load i32, i32* @fp, align 4
  %v2_10440 = add i32 %v0_10440, %v3_10438
  store i32 %v2_10440, i32* @r3, align 4
  %v3_10444 = icmp uge i32 %v2_10440, %v1_1043c
  store i1 %v3_10444, i1* %cpsr_c.global-to-local, align 1
  %v9_10444 = icmp eq i32 %v2_10440, %v1_1043c
  store i1 %v9_10444, i1* %cpsr_z.global-to-local, align 1
  %v2_10448 = xor i1 %v3_10444, true
  %v3_10448 = or i1 %v9_10444, %v2_10448
  br i1 %v3_10448, label %dec_label_pc_10408.dec_label_pc_103f8.loopexit_crit_edge, label %dec_label_pc_1044c

dec_label_pc_10408.dec_label_pc_103f8.loopexit_crit_edge: ; preds = %dec_label_pc_10408
  %v0_103f8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_103f8

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10408
  %v2_1044c = inttoptr i32 %v1_1043c to i8*
  %v3_1044c = load i8, i8* %v2_1044c, align 1
  %v4_1044c = zext i8 %v3_1044c to i32
  store i32 %v4_1044c, i32* %r3.global-to-local, align 4
  %v2_10450 = icmp ugt i8 %v3_1044c, 30
  store i1 %v2_10450, i1* %cpsr_c.global-to-local, align 1
  %v7_10450 = icmp eq i8 %v3_1044c, 31
  store i1 %v7_10450, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10450, label %dec_label_pc_105ec, label %dec_label_pc_10458

dec_label_pc_10458:                               ; preds = %dec_label_pc_1044c
  %v1_10458 = inttoptr i32 %v0_1043c to i8*
  %v2_10458 = load i8, i8* %v1_10458, align 1
  %v3_10458 = zext i8 %v2_10458 to i32
  store i32 %v3_10458, i32* %r3.global-to-local, align 4
  %v2_1045c = icmp ugt i8 %v2_10458, -4
  store i1 %v2_1045c, i1* %cpsr_c.global-to-local, align 1
  %v7_1045c = icmp eq i8 %v2_10458, -3
  store i1 %v7_1045c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1045c, label %.thread119, label %dec_label_pc_1046c

.thread119:                                       ; preds = %dec_label_pc_10458
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10458, align 1
  %v0_10468.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10468.pr.pr, label %dec_label_pc_10390, label %.thread119.dec_label_pc_1046cthread-pre-split_crit_edge

.thread119.dec_label_pc_1046cthread-pre-split_crit_edge: ; preds = %.thread119
  %v0_1046c.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1046c

dec_label_pc_1046c:                               ; preds = %dec_label_pc_10458, %.thread119.dec_label_pc_1046cthread-pre-split_crit_edge
  %v0_1046c.pr = phi i32 [ %v0_1046c.pr.pre, %.thread119.dec_label_pc_1046cthread-pre-split_crit_edge ], [ %v3_10458, %dec_label_pc_10458 ]
  %v2_1046c = icmp ugt i32 %v0_1046c.pr, 250
  store i1 %v2_1046c, i1* %cpsr_c.global-to-local, align 1
  %v7_1046c = icmp eq i32 %v0_1046c.pr, 251
  store i1 %v7_1046c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1046c, label %bb429, label %dec_label_pc_10390

bb429:                                            ; preds = %dec_label_pc_1046c
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_10474 = load i32, i32* @r4, align 4
  %v4_10474 = inttoptr i32 %v3_10474 to i8*
  store i8 -3, i8* %v4_10474, align 1
  br label %dec_label_pc_10390

dec_label_pc_1047c:                               ; preds = %dec_label_pc_1016c, %dec_label_pc_1018c, %dec_label_pc_10184, %dec_label_pc_1017c, %bb421, %dec_label_pc_10158, %dec_label_pc_10134, %dec_label_pc_10150, %dec_label_pc_10148, %bb420
  %v0_10480 = phi i32 [ %v1_10128, %dec_label_pc_10158 ], [ %v1_10128, %dec_label_pc_10134 ], [ %v1_10128, %dec_label_pc_10150 ], [ %v1_10128, %dec_label_pc_10148 ], [ %v1_10128, %bb420 ], [ %v1_10198, %bb421 ], [ %v1_10198, %dec_label_pc_1017c ], [ %v1_10198, %dec_label_pc_10184 ], [ %v1_10198, %dec_label_pc_1018c ], [ %v1_10198, %dec_label_pc_1016c ]
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10480 = add i32 %v0_10480, 1
  store i32 %v1_10480, i32* @r8, align 4
  %v1_10484 = call i32 @function_108e8(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_1048c = call i32 @function_108e8(i32 33)
  store i32 %v1_1048c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %dec_label_pc_10228, %dec_label_pc_1047c
  %v0_10490 = load i32, i32* @r6, align 4
  %v1_10490 = inttoptr i32 %v0_10490 to i32*
  %v2_10490 = load i32, i32* %v1_10490, align 4
  store i32 %v2_10490, i32* %r3.global-to-local, align 4
  %v1_10494 = add i32 %v0_10490, 4
  %v2_10494 = inttoptr i32 %v1_10494 to i32*
  %v3_10494 = load i32, i32* %v2_10494, align 4
  store i32 %v3_10494, i32* %r0.global-to-local, align 4
  %v1_10498 = add i32 %v2_10490, 12
  %v2_10498 = inttoptr i32 %v1_10498 to i8*
  %v3_10498 = load i8, i8* %v2_10498, align 1
  %v4_10498 = zext i8 %v3_10498 to i32
  store i32 %v4_10498, i32* %r2.global-to-local, align 4
  %v1_1049c = inttoptr i32 %v2_10490 to i32*
  %v2_1049c = load i32, i32* %v1_1049c, align 4
  store i32 %v2_1049c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_104a4 = call i32 @function_123a8(i32 %v3_10494, i32 %v2_1049c, i32 %v4_10498, i32 16384)
  store i32 %v4_104a4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_104ac = load i32, i32* @r6, align 4
  %v1_104ac = add i32 %v0_104ac, 4
  %v2_104ac = inttoptr i32 %v1_104ac to i32*
  %v3_104ac = load i32, i32* %v2_104ac, align 4
  store i32 %v3_104ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_104b8 = call i32 @function_123a8(i32 %v3_104ac, i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), i32 2, i32 16384)
  store i32 %v4_104b8, i32* %r0.global-to-local, align 4
  store i32 4, i32* @r3, align 4
  %v1_104c0 = load i32, i32* @r6, align 4
  %v2_104c0 = add i32 %v1_104c0, 12
  %v3_104c0 = inttoptr i32 %v2_104c0 to i32*
  store i32 4, i32* %v3_104c0, align 4
  br label %dec_label_pc_10240

dec_label_pc_104c8:                               ; preds = %dec_label_pc_1028c, %dec_label_pc_102a4, %dec_label_pc_1029c, %bb424, %dec_label_pc_10278, %dec_label_pc_1025c, %dec_label_pc_10270, %bb423
  %v0_104cc = phi i32 [ %v1_10250, %dec_label_pc_10278 ], [ %v1_10250, %dec_label_pc_1025c ], [ %v1_10250, %dec_label_pc_10270 ], [ %v1_10250, %bb423 ], [ %v1_102b0, %bb424 ], [ %v1_102b0, %dec_label_pc_1029c ], [ %v1_102b0, %dec_label_pc_102a4 ], [ %v1_102b0, %dec_label_pc_1028c ]
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_104cc = add i32 %v0_104cc, 1
  store i32 %v1_104cc, i32* @r8, align 4
  %v1_104d0 = call i32 @function_108e8(i32 31)
  br label %dec_label_pc_10300

dec_label_pc_104d8:                               ; preds = %dec_label_pc_fc60
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_104e4 = call i32 @function_10988(i32 25)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_104f4 = call i32 @function_108c4(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_104f4, i32* %r0.global-to-local, align 4
  %v3_104f8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_104f4, i32* %r2.global-to-local, align 4
  %v1_10500 = add i32 %v3_104f8, -1
  store i32 %v1_10500, i32* %r3.global-to-local, align 4
  %v0_10504 = load i32, i32* @r6, align 4
  %v1_10504 = add i32 %v0_10504, 24
  %v2_10504 = inttoptr i32 %v1_10504 to i32*
  %v3_10504 = load i32, i32* %v2_10504, align 4
  store i32 %v3_10504, i32* %r1.global-to-local, align 4
  %v0_10508 = load i32, i32* @fp, align 4
  store i32 %v0_10508, i32* %r0.global-to-local, align 4
  %v4_1050c = call i32 @function_1124c(i32 %v0_10508, i32 %v3_10504, i32 %v3_104f4, i32 %v1_10500)
  store i32 %v4_1050c, i32* @r8, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10518 = call i32 @function_108e8(i32 25)
  store i32 %v1_10518, i32* @r0, align 4
  %v0_1051c = load i32, i32* @r8, align 4
  %v2_1051c = icmp eq i32 %v0_1051c, -1
  store i1 %v2_1051c, i1* %cpsr_c.global-to-local, align 1
  %v7_1051c = icmp eq i32 %v0_1051c, -1
  store i1 %v7_1051c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1051c, label %dec_label_pc_fb38.loopexit, label %dec_label_pc_10524

dec_label_pc_10524:                               ; preds = %dec_label_pc_104d8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10524 = icmp eq i32 %v0_1051c, 0
  store i1 %v2_10524, i1* %cpsr_z.global-to-local, align 1
  %tmp430 = icmp slt i32 %v0_1051c, 1
  br i1 %tmp430, label %dec_label_pc_10240, label %dec_label_pc_1052c

dec_label_pc_1052c:                               ; preds = %dec_label_pc_10524
  %v0_1052c = load i32, i32* @r6, align 4
  %v1_1052c = add i32 %v0_1052c, 20
  %v2_1052c = inttoptr i32 %v1_1052c to i16*
  %v3_1052c = load i16, i16* %v2_1052c, align 2
  %v4_1052c = zext i16 %v3_1052c to i32
  store i32 %v4_1052c, i32* %r3.global-to-local, align 4
  %v1_10530 = add i32 %v0_1052c, 16
  %v2_10530 = inttoptr i32 %v1_10530 to i32*
  %v3_10530 = load i32, i32* %v2_10530, align 4
  store i32 %v3_10530, i32* %r2.global-to-local, align 4
  store i32 %v2_10534, i32* @lr, align 4
  store i32 %v4_1052c, i32* %stack_var_-42, align 4
  store i32 %v3_10530, i32* %stack_var_-60, align 4
  %v1_10540 = inttoptr i32 %v0_1052c to i32*
  %v2_10540 = load i32, i32* %v1_10540, align 4
  store i32 %v2_10540, i32* @sb, align 4
  %v0_10544 = call i32 @function_11944()
  store i32 %v0_10544, i32* %r0.global-to-local, align 4
  %v7_10548 = icmp eq i32 %v0_10544, -1
  %.441 = zext i1 %v7_10548 to i32
  store i32 %.441, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10554 = icmp eq i32 %v0_10544, 0
  store i1 %v2_10554, i1* %cpsr_z.global-to-local, align 1
  %tmp433 = icmp slt i32 %v0_10544, 1
  br i1 %tmp433, label %bb434, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_1052c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_105ac

bb434:                                            ; preds = %dec_label_pc_1052c
  store i32 %.441, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10560 = icmp eq i1 %v7_10548, false
  store i1 %v2_10560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10560, label %dec_label_pc_10568, label %dec_label_pc_105ac

dec_label_pc_10568:                               ; preds = %bb434
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10574 = call i32 @function_12464(i32 2, i32 1, i32 0)
  store i32 %v3_10574, i32* %r0.global-to-local, align 4
  %v2_10578 = icmp eq i32 %v3_10574, -1
  store i1 %v2_10578, i1* %cpsr_c.global-to-local, align 1
  %v7_10578 = icmp eq i32 %v3_10574, -1
  store i1 %v7_10578, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10574, i32* @r7, align 4
  br i1 %v7_10578, label %dec_label_pc_108bc, label %dec_label_pc_10584

dec_label_pc_10584:                               ; preds = %dec_label_pc_10568
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_10588 = call i32 @function_10988(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_10590 = call i32 @function_10988(i32 19)
  %v0_10594 = load i32, i32* @sl, align 4
  store i32 %v0_10594, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r0.global-to-local, align 4
  %v2_1059c = inttoptr i32 %v0_10594 to i32*
  %v3_1059c = call i32 @function_108c4(i32 18, i32* %v2_1059c)
  store i32 %v3_1059c, i32* %r0.global-to-local, align 4
  %v1_105a0 = call i32 @function_dcc8(i32 %v3_1059c)
  store i32 %v1_105a0, i32* %r0.global-to-local, align 4
  store i32 %v1_105a0, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_105a4 = icmp eq i32 %v1_105a0, 0
  store i1 %v3_105a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_105a4, label %dec_label_pc_105ac, label %dec_label_pc_1076c

dec_label_pc_105ac:                               ; preds = %.thread125, %dec_label_pc_10584, %bb434
  %v0_105ac = load i32, i32* @r6, align 4
  %v1_105ac = add i32 %v0_105ac, 4
  %v2_105ac = inttoptr i32 %v1_105ac to i32*
  %v3_105ac = load i32, i32* %v2_105ac, align 4
  store i32 %v3_105ac, i32* %r0.global-to-local, align 4
  %v1_105b0 = call i32 @function_11c54(i32 %v3_105ac)
  store i32 %v1_105b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_105bc = load i32, i32* @r6, align 4
  %v2_105bc = add i32 %v1_105bc, 4
  %v3_105bc = inttoptr i32 %v2_105bc to i32*
  store i32 -1, i32* %v3_105bc, align 4
  %v0_105c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_105c0 = load i32, i32* @r6, align 4
  %v2_105c0 = add i32 %v1_105c0, 12
  %v3_105c0 = inttoptr i32 %v2_105c0 to i32*
  store i32 %v0_105c0, i32* %v3_105c0, align 4
  br label %dec_label_pc_10240

dec_label_pc_105c8:                               ; preds = %dec_label_pc_fb44
  store i32 %.pre, i32* @r0, align 4
  %v1_105d0 = add i32 %v0_105c8, 92
  store i32 %v1_105d0, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_105d8 = call i32 @function_12170(i32 %.pre, i32 %v1_105d0, i32 192)
  store i32 %v3_105d8, i32* %r0.global-to-local, align 4
  %v0_105dc = load i32, i32* @r6, align 4
  %v1_105dc = add i32 %v0_105dc, 24
  %v2_105dc = inttoptr i32 %v1_105dc to i32*
  %v3_105dc = load i32, i32* %v2_105dc, align 4
  %v1_105e0 = add i32 %v3_105dc, -64
  store i32 %v1_105e0, i32* %r3.global-to-local, align 4
  store i32 %v1_105e0, i32* %v2_105dc, align 4
  br label %dec_label_pc_fb54

dec_label_pc_105ec:                               ; preds = %dec_label_pc_1044c
  store i32 %v2_1040c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_105f8 = add i32 %v0_10438, 4
  %v2_105f8 = inttoptr i32 %v1_105f8 to i32*
  %v3_105f8 = load i32, i32* %v2_105f8, align 4
  store i32 %v3_105f8, i32* %r0.global-to-local, align 4
  %v4_105fc = call i32 @function_123a8(i32 %v3_105f8, i32 %v2_1040c, i32 3, i32 16384)
  store i32 %v4_105fc, i32* %r0.global-to-local, align 4
  %v0_10600 = load i32, i32* @r6, align 4
  %v1_10600 = add i32 %v0_10600, 4
  %v2_10600 = inttoptr i32 %v1_10600 to i32*
  %v3_10600 = load i32, i32* %v2_10600, align 4
  store i32 %v3_10600, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_103dc

dec_label_pc_10610:                               ; preds = %dec_label_pc_fc98
  %v0_10610 = load i32, i32* @r6, align 4
  store i32 %v0_10610, i32* @r0, align 4
  %v0_10614 = call i32 @function_e1f8()
  store i32 %v0_10614, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fcd4

dec_label_pc_1061c:                               ; preds = %dec_label_pc_fafc
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_1062c, i32* %r3.global-to-local, align 4
  store i32 %v2_101b4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_10644 = call i32 @function_122bc(i32 %v3_faf0, i32 1, i32 4, i32 %v2_1062c, i32 %v2_101b4)
  %v3_10648 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10648, i32* %r3.global-to-local, align 4
  %v2_1064c = or i32 %v3_10648, %v5_10644
  store i32 %v2_1064c, i32* %r0.global-to-local, align 4
  %v4_1064c = icmp eq i32 %v2_1064c, 0
  store i1 %v4_1064c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1064c, label %dec_label_pc_10654, label %dec_label_pc_106e8

dec_label_pc_10654:                               ; preds = %dec_label_pc_1061c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_10658 = load i32, i32* @r6, align 4
  %v2_10658 = add i32 %v1_10658, 12
  %v3_10658 = inttoptr i32 %v2_10658 to i32*
  store i32 2, i32* %v3_10658, align 4
  %v0_1065c = call i32 @function_db0c()
  store i32 %v0_1065c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_182a0.120 to i32), i32* %r3.global-to-local, align 4
  %v2_10664 = load i16, i16* bitcast (i16** @global_var_182a0.120 to i16*), align 4
  %v3_10664 = zext i16 %v2_10664 to i32
  store i32 %v3_10664, i32* %r1.global-to-local, align 4
  %v3_10668 = call i32 @function_117ec(i32 %v0_1065c, i32 %v3_10664)
  store i32 %v3_10668, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18270.116 to i32), i32* %r3.global-to-local, align 4
  %v2_10670 = load i32, i32* @global_var_18270.116, align 4
  store i32 %v2_10670, i32* %ip.global-to-local, align 4
  %v1_10678 = load i32, i32* @r4, align 4
  %v9_10678 = icmp eq i32 %v2_10670, %v1_10678
  store i1 %v9_10678, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_10664, i32* %r1.global-to-local, align 4
  %v7_10680 = icmp sgt i32 %v2_10670, %v1_10678
  br i1 %v7_10680, label %dec_label_pc_10684, label %dec_label_pc_106c4

dec_label_pc_10684:                               ; preds = %dec_label_pc_10654
  %v2_10688 = load i32, i32* @global_var_1829c.118, align 4
  store i32 %v2_10688, i32* %r3.global-to-local, align 4
  store i32 %v1_10678, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_106a4

dec_label_pc_10694:                               ; preds = %dec_label_pc_106b4, %dec_label_pc_106a4
  %v1_10694 = add i32 %v0_10694, 1
  store i32 %v1_10694, i32* %r2.global-to-local, align 4
  %v9_10698 = icmp eq i32 %v1_10694, %v2_10670
  %v1_1069c = add i32 %v0_1069c, 16
  store i32 %v1_1069c, i32* %r3.global-to-local, align 4
  br i1 %v9_10698, label %dec_label_pc_106c4.loopexit, label %dec_label_pc_106a4

dec_label_pc_106a4:                               ; preds = %dec_label_pc_10694, %dec_label_pc_10684
  %v0_10694 = phi i32 [ %v1_10694, %dec_label_pc_10694 ], [ %v1_10678, %dec_label_pc_10684 ]
  %v0_1069c = phi i32 [ %v1_1069c, %dec_label_pc_10694 ], [ %v2_10688, %dec_label_pc_10684 ]
  store i32 %v0_1069c, i32* %r0.global-to-local, align 4
  %v1_106a8 = add i32 %v0_1069c, 8
  %v2_106a8 = inttoptr i32 %v1_106a8 to i16*
  %v3_106a8 = load i16, i16* %v2_106a8, align 2
  %v4_106a8 = zext i16 %v3_106a8 to i32
  store i32 %v4_106a8, i32* %r3.global-to-local, align 4
  %tmp435 = icmp ugt i16 %v3_106a8, %v2_10664
  br i1 %tmp435, label %dec_label_pc_10694, label %dec_label_pc_106b4

dec_label_pc_106b4:                               ; preds = %dec_label_pc_106a4
  %v1_106b4 = add i32 %v0_1069c, 10
  %v2_106b4 = inttoptr i32 %v1_106b4 to i16*
  %v3_106b4 = load i16, i16* %v2_106b4, align 2
  %v4_106b4 = zext i16 %v3_106b4 to i32
  store i32 %v4_106b4, i32* %r3.global-to-local, align 4
  %v3_106b8 = icmp uge i16 %v3_106b4, %v2_10664
  %v9_106b8 = icmp eq i16 %v3_106b4, %v2_10664
  %v2_106bc = xor i1 %v3_106b8, true
  %v3_106bc = or i1 %v9_106b8, %v2_106bc
  br i1 %v3_106bc, label %dec_label_pc_10694, label %dec_label_pc_106c8.loopexit

dec_label_pc_106c4.loopexit:                      ; preds = %dec_label_pc_10694
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106c4

dec_label_pc_106c4:                               ; preds = %dec_label_pc_106c4.loopexit, %dec_label_pc_10654
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_106c8

dec_label_pc_106c8.loopexit:                      ; preds = %dec_label_pc_106b4
  store i1 %v3_106b8, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_106c8

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106c8.loopexit, %dec_label_pc_106c4
  %v0_106dc = phi i32 [ %v0_1069c, %dec_label_pc_106c8.loopexit ], [ 0, %dec_label_pc_106c4 ]
  %v0_106c8 = load i32, i32* @r6, align 4
  %v1_106c8 = add i32 %v0_106c8, 4
  %v2_106c8 = inttoptr i32 %v1_106c8 to i32*
  %v3_106c8 = load i32, i32* %v2_106c8, align 4
  %v3_106cc = udiv i32 %v3_106c8, 32
  store i32 %v3_106cc, i32* %r2.global-to-local, align 4
  %v1_106d0 = urem i32 %v3_106c8, 32
  store i32 %v1_106d0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_106d4 = mul nuw nsw i32 %v3_106cc, 4
  store i32 %v3_106d4, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_106dc = inttoptr i32 %v0_106c8 to i32*
  store i32 %v0_106dc, i32* %v2_106dc, align 4
  %v0_106e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_106e0 = load i32, i32* @r6, align 4
  %v2_106e0 = add i32 %v1_106e0, 24
  %v3_106e0 = inttoptr i32 %v2_106e0 to i32*
  store i32 %v0_106e0, i32* %v3_106e0, align 4
  %v0_fb24.pre = load i32, i32* @ip, align 4
  %v1_fb2c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fb20

dec_label_pc_106e8:                               ; preds = %dec_label_pc_1061c
  %v0_106e8 = load i32, i32* @r6, align 4
  %v1_106e8 = add i32 %v0_106e8, 4
  %v2_106e8 = inttoptr i32 %v1_106e8 to i32*
  %v3_106e8 = load i32, i32* %v2_106e8, align 4
  store i32 %v3_106e8, i32* %r0.global-to-local, align 4
  %v1_106ec = call i32 @function_11c54(i32 %v3_106e8)
  store i32 %v1_106ec, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_106f4 = load i32, i32* @r4, align 4
  %v1_106f4 = load i32, i32* @r6, align 4
  %v2_106f4 = add i32 %v1_106f4, 12
  %v3_106f4 = inttoptr i32 %v2_106f4 to i32*
  store i32 %v0_106f4, i32* %v3_106f4, align 4
  %v0_106f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_106f8 = load i32, i32* @r6, align 4
  %v2_106f8 = add i32 %v1_106f8, 4
  %v3_106f8 = inttoptr i32 %v2_106f8 to i32*
  store i32 %v0_106f8, i32* %v3_106f8, align 4
  %v0_106fc = load i32, i32* @r4, align 4
  %v1_106fc = trunc i32 %v0_106fc to i8
  %v2_106fc = load i32, i32* @r6, align 4
  %v3_106fc = add i32 %v2_106fc, 284
  %v4_106fc = inttoptr i32 %v3_106fc to i8*
  store i8 %v1_106fc, i8* %v4_106fc, align 1
  br label %dec_label_pc_fc48

dec_label_pc_10734:                               ; preds = %dec_label_pc_fbf4
  store i32 %stack_var_-1876.0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_fb5c, align 4
  br label %dec_label_pc_fc10

dec_label_pc_10744:                               ; preds = %dec_label_pc_10200
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10748 = call i32 @function_108e8(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10750 = call i32 @function_108e8(i32 33)
  store i32 %v1_10750, i32* %r0.global-to-local, align 4
  %v0_10754 = load i32, i32* @r6, align 4
  %v1_10754 = add i32 %v0_10754, 12
  %v2_10754 = inttoptr i32 %v1_10754 to i32*
  %v3_10754 = load i32, i32* %v2_10754, align 4
  store i32 %v3_10754, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb3c.backedge

dec_label_pc_fb3c.backedge.thread:                ; preds = %dec_label_pc_ff7c, %dec_label_pc_10050, %dec_label_pc_fd00, %dec_label_pc_fdd4, %dec_label_pc_fea8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb44

dec_label_pc_fb3c.backedge.thread541:             ; preds = %dec_label_pc_100b4, %dec_label_pc_ff0c, %dec_label_pc_fe38, %dec_label_pc_ffe0, %dec_label_pc_fd64
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fb44

dec_label_pc_fb3c.backedge:                       ; preds = %dec_label_pc_fbbc, %dec_label_pc_10744, %dec_label_pc_1075c
  %v0_fb44192 = phi i32 [ %v0_10764, %dec_label_pc_1075c ], [ %v0_10754, %dec_label_pc_10744 ], [ %v0_fbbc, %dec_label_pc_fbbc ]
  %v0_fb3c.be = phi i32 [ %v3_10764, %dec_label_pc_1075c ], [ %v3_10754, %dec_label_pc_10744 ], [ %v3_fbbc, %dec_label_pc_fbbc ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb3c = icmp eq i32 %v0_fb3c.be, 0
  store i1 %v2_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb3c, label %dec_label_pc_fc48, label %dec_label_pc_fb44

dec_label_pc_1075c:                               ; preds = %dec_label_pc_102b8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_1075c = add i32 %v4_102e4, 32
  store i32 %v1_1075c, i32* %r0.global-to-local, align 4
  %v1_10760 = call i32 @function_108e8(i32 %v1_1075c)
  store i32 %v1_10760, i32* %r0.global-to-local, align 4
  %v0_10764 = load i32, i32* @r6, align 4
  %v1_10764 = add i32 %v0_10764, 12
  %v2_10764 = inttoptr i32 %v1_10764 to i32*
  %v3_10764 = load i32, i32* %v2_10764, align 4
  store i32 %v3_10764, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fb3c.backedge

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10584
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v2_10534, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_10778 = add i32 %v1_105a0, 4
  %v2_10778 = inttoptr i32 %v1_10778 to i32*
  %v3_10778 = load i32, i32* %v2_10778, align 4
  store i32 %v3_10778, i32* @r4, align 4
  %v0_1077c = call i32 @function_db0c()
  store i32 %v0_1077c, i32* %r0.global-to-local, align 4
  %v0_10780 = load i32, i32* @r5, align 4
  %v1_10780 = inttoptr i32 %v0_10780 to i8*
  %v2_10780 = load i8, i8* %v1_10780, align 1
  %v3_10780 = zext i8 %v2_10780 to i32
  store i32 %v3_10780, i32* %r1.global-to-local, align 4
  %v2_10784 = call i32 @function_117ec(i32 %v0_1077c, i32 %v3_10780)
  store i32 %v2_10784, i32* %r0.global-to-local, align 4
  %v0_10788 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10788 = mul nuw nsw i32 %v3_10780, 4
  %v5_10788 = add i32 %v0_10788, %v4_10788
  %v6_10788 = inttoptr i32 %v5_10788 to i32*
  %v7_10788 = load i32, i32* %v6_10788, align 4
  store i32 %v7_10788, i32* %r3.global-to-local, align 4
  store i32 19, i32* %r0.global-to-local, align 4
  %v0_10790 = load i32, i32* @sl, align 4
  store i32 %v0_10790, i32* %r1.global-to-local, align 4
  %v2_10798 = inttoptr i32 %v0_10790 to i32*
  %v3_10798 = call i32 @function_108c4(i32 19, i32* %v2_10798)
  store i32 %v2_10534, i32* %r2.global-to-local, align 4
  %v0_107a8 = load i32, i32* @r5, align 4
  store i32 %v0_107a8, i32* %r0.global-to-local, align 4
  %v1_107ac = call i32 @function_dca0(i32 %v0_107a8)
  store i32 18, i32* %r0.global-to-local, align 4
  %v1_107b4 = call i32 @function_108e8(i32 18)
  store i32 19, i32* %r0.global-to-local, align 4
  %v1_107bc = call i32 @function_108e8(i32 19)
  %v0_107c4 = load i32, i32* @r7, align 4
  store i32 %v0_107c4, i32* %r0.global-to-local, align 4
  store i32 %v2_107c8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_107d0 = call i32 @function_1224c(i32 %v0_107c4, i32 %v2_107c8, i32 16)
  store i32 %v3_107d0, i32* %r0.global-to-local, align 4
  %v3_107d4 = icmp eq i32 %v3_107d0, -1
  store i1 %v3_107d4, i1* %cpsr_c.global-to-local, align 1
  %v8_107d4 = icmp eq i32 %v3_107d0, -1
  store i1 %v8_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_107d4, label %dec_label_pc_107dc, label %dec_label_pc_1081c

dec_label_pc_107dc:                               ; preds = %dec_label_pc_1076c
  %v0_107dc = load i32, i32* @r7, align 4
  store i32 %v0_107dc, i32* %r0.global-to-local, align 4
  %v1_107e0 = call i32 @function_11c54(i32 %v0_107dc)
  %v0_107e4 = load i32, i32* @sl, align 4
  store i32 %v0_107e4, i32* %r0.global-to-local, align 4
  %v1_107e8 = call i32 @function_13cb8(i32 %v0_107e4)
  store i32 %v1_107e8, i32* %r0.global-to-local, align 4
  %v0_107ec.pre = load i32, i32* @r4, align 4
  %v1_10808.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_107ec

dec_label_pc_107ec:                               ; preds = %dec_label_pc_f994, %dec_label_pc_107dc
  %v1_10808 = phi i32 [ 1, %dec_label_pc_f994 ], [ %v1_10808.pre, %dec_label_pc_107dc ]
  %v0_107ec = phi i32 [ %v2_f9f4, %dec_label_pc_f994 ], [ %v0_107ec.pre, %dec_label_pc_107dc ]
  %v1_107ec = add i32 %v0_107ec, 4
  %v2_107ec = inttoptr i32 %v1_107ec to i32*
  %v3_107ec = load i32, i32* %v2_107ec, align 4
  store i32 %v3_107ec, i32* %r0.global-to-local, align 4
  %v3_107f0 = udiv i32 %v3_107ec, 32
  %v3_107f4 = mul nuw nsw i32 %v3_107f0, 4
  store i32 %v2_fb00, i32* @lr, align 4
  %v2_107fc = add i32 %v3_107f4, %v2_fb00
  store i32 %v2_107fc, i32* %r3.global-to-local, align 4
  %v1_10800 = add i32 %v2_107fc, -312
  %v2_10800 = inttoptr i32 %v1_10800 to i32*
  %v3_10800 = load i32, i32* %v2_10800, align 4
  %v1_10804 = urem i32 %v3_107ec, 32
  store i32 %v1_10804, i32* %r1.global-to-local, align 4
  %v7_10808 = shl i32 %v1_10808, %v1_10804
  %v8_10808 = or i32 %v3_10800, %v7_10808
  store i32 %v8_10808, i32* %r2.global-to-local, align 4
  %v0_1080c = load i32, i32* @r5, align 4
  %v2_1080c = inttoptr i32 %v0_1080c to i8*
  %v3_1080c = inttoptr i32 %v3_107ec to i8*
  %v5_1080c = icmp uge i32 %v0_1080c, %v3_107ec
  store i1 %v5_1080c, i1* %cpsr_c.global-to-local, align 1
  %v11_1080c = icmp eq i32 %v0_1080c, %v3_107ec
  store i1 %v11_1080c, i1* %cpsr_z.global-to-local, align 1
  %v7_10810 = icmp slt i8* %v2_1080c, %v3_1080c
  br i1 %v7_10810, label %bb436, label %bb437

bb436:                                            ; preds = %dec_label_pc_107ec
  store i32 %v3_107ec, i32* @r5, align 4
  br label %bb437

bb437:                                            ; preds = %dec_label_pc_107ec, %bb436
  store i32 %v8_10808, i32* %v2_10800, align 4
  br label %bb387

dec_label_pc_1081c:                               ; preds = %dec_label_pc_1076c
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_1062c, i32* %r1.global-to-local, align 4
  %v0_10828 = load i32, i32* @r7, align 4
  store i32 %v0_10828, i32* %r0.global-to-local, align 4
  %v0_1082c = load i32, i32* @sl, align 4
  store i32 %v0_1082c, i32* %stack_var_-56, align 4
  %v5_10830 = call i32 @function_123a8(i32 %v0_10828, i32 %v2_1062c, i32 1, i32 16384)
  store i32 %v2_101b4, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10844 = load i32, i32* @r7, align 4
  store i32 %v0_10844, i32* %r0.global-to-local, align 4
  %v4_10848 = call i32 @function_123a8(i32 %v0_10844, i32 %v2_101b4, i32 4, i32 16384)
  %v2_10850 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_10850, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1085c = load i32, i32* @r7, align 4
  store i32 %v0_1085c, i32* %r0.global-to-local, align 4
  %v4_10860 = call i32 @function_123a8(i32 %v0_1085c, i32 %v2_10850, i32 2, i32 16384)
  %v0_10864 = load i32, i32* @sb, align 4
  %v1_10864 = add i32 %v0_10864, 12
  store i32 %v1_10864, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10870 = load i32, i32* @r7, align 4
  store i32 %v0_10870, i32* %r0.global-to-local, align 4
  %v4_10874 = call i32 @function_123a8(i32 %v0_10870, i32 %v1_10864, i32 1, i32 16384)
  store i32 %v4_10874, i32* %r0.global-to-local, align 4
  %v0_10878 = load i32, i32* @sb, align 4
  %v1_10878 = inttoptr i32 %v0_10878 to i32*
  %v2_10878 = load i32, i32* %v1_10878, align 4
  store i32 %v2_10878, i32* %r1.global-to-local, align 4
  %v1_1087c = add i32 %v0_10878, 12
  %v2_1087c = inttoptr i32 %v1_1087c to i8*
  %v3_1087c = load i8, i8* %v2_1087c, align 1
  %v4_1087c = zext i8 %v3_1087c to i32
  store i32 %v4_1087c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10884 = load i32, i32* @r7, align 4
  store i32 %v0_10884, i32* %r0.global-to-local, align 4
  %v4_10888 = call i32 @function_123a8(i32 %v0_10884, i32 %v2_10878, i32 %v4_1087c, i32 16384)
  %v0_1088c = load i32, i32* @sb, align 4
  %v1_1088c = add i32 %v0_1088c, 13
  store i32 %v1_1088c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10898 = load i32, i32* @r7, align 4
  store i32 %v0_10898, i32* %r0.global-to-local, align 4
  %v4_1089c = call i32 @function_123a8(i32 %v0_10898, i32 %v1_1088c, i32 1, i32 16384)
  %v0_108a0 = load i32, i32* @r7, align 4
  store i32 %v0_108a0, i32* %r0.global-to-local, align 4
  %v0_108a4 = load i32, i32* @sb, align 4
  %v1_108a4 = add i32 %v0_108a4, 13
  %v2_108a4 = inttoptr i32 %v1_108a4 to i8*
  %v3_108a4 = load i8, i8* %v2_108a4, align 1
  %v4_108a4 = zext i8 %v3_108a4 to i32
  store i32 %v4_108a4, i32* %r2.global-to-local, align 4
  %v1_108a8 = add i32 %v0_108a4, 4
  %v2_108a8 = inttoptr i32 %v1_108a8 to i32*
  %v3_108a8 = load i32, i32* %v2_108a8, align 4
  store i32 %v3_108a8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_108b0 = call i32 @function_123a8(i32 %v0_108a0, i32 %v3_108a8, i32 %v4_108a4, i32 16384)
  %v0_108b4 = load i32, i32* @r7, align 4
  store i32 %v0_108b4, i32* %r0.global-to-local, align 4
  %v1_108b8 = call i32 @function_11c54(i32 %v0_108b4)
  store i32 %v1_108b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %dec_label_pc_10568, %dec_label_pc_1081c
  %v0_108bc = load i32, i32* @sl, align 4
  store i32 %v0_108bc, i32* %r0.global-to-local, align 4
  %v1_108c0 = call i32 @function_13cb8(i32 %v0_108bc)
  store i32 %v1_108c0, i32* %r0.global-to-local, align 4
  ret i32 %v1_108c0

; uselistorder directives
  uselistorder i32 %v0_1080c, { 2, 1, 0 }
  uselistorder i32 %v1_10804, { 1, 0 }
  uselistorder i32 %v3_107ec, { 2, 3, 4, 5, 1, 0, 6 }
  uselistorder i32 %v3_10764, { 1, 0 }
  uselistorder i32 %v0_10764, { 1, 0 }
  uselistorder i32 %v3_106c8, { 1, 0 }
  uselistorder i1 %v3_106b8, { 1, 0 }
  uselistorder i32 %v0_1069c, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_10670, { 0, 2, 1, 3 }
  uselistorder i32 %v3_10600, { 1, 0 }
  uselistorder i1 %v7_10578, { 1, 0 }
  uselistorder i32 %v3_10574, { 1, 0, 2, 3 }
  uselistorder i1 %v2_10560, { 1, 0 }
  uselistorder i32 %.441, { 1, 0 }
  uselistorder i1 %v7_10548, { 1, 0 }
  uselistorder i32 %v0_10544, { 2, 1, 0, 3 }
  uselistorder i1 %v7_1051c, { 1, 0 }
  uselistorder i32 %v0_1051c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1046c.pr, { 1, 0 }
  uselistorder i32 %v0_10438, { 1, 2, 0 }
  uselistorder i32 %v0_103f8, { 1, 0 }
  uselistorder i32 %v1_103f0, { 1, 0 }
  uselistorder i32 %v1_103e8, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_103e4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_103e4, { 0, 2, 1 }
  uselistorder i32 %v0_103c4.pr, { 1, 0 }
  uselistorder i32 %v0_103a4.pr, { 1, 0 }
  uselistorder i1 %v7_1037c, { 1, 0 }
  uselistorder i1 %v2_1036c, { 1, 0, 2 }
  uselistorder i1 %v2_10350, { 1, 0, 2 }
  uselistorder i32 %v1_10370, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10344, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_10374, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v7_102e8, { 1, 0 }
  uselistorder i32 %v4_102e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_102b0, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_102b0, { 0, 2, 1 }
  uselistorder i32 %v0_102a8, { 1, 0 }
  uselistorder i1 %v7_102a4, { 1, 0 }
  uselistorder i1 %v7_1029c, { 1, 0 }
  uselistorder i1 %v8_10294, { 1, 0 }
  uselistorder i1 %v7_10278, { 1, 0 }
  uselistorder i1 %v7_10270, { 1, 0 }
  uselistorder i1 %v8_10268, { 1, 0 }
  uselistorder i32 %v1_10250, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_10218, { 1, 0 }
  uselistorder i1 %v7_101f0, { 1, 0 }
  uselistorder i32 %v1_10198, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10198, { 0, 2, 1 }
  uselistorder i32 %v0_10190, { 1, 0 }
  uselistorder i1 %v7_1018c, { 1, 0 }
  uselistorder i1 %v7_10184, { 1, 0 }
  uselistorder i1 %v7_1017c, { 1, 0 }
  uselistorder i1 %v8_10174, { 1, 0 }
  uselistorder i1 %v7_10158, { 1, 0 }
  uselistorder i1 %v7_10150, { 1, 0 }
  uselistorder i1 %v7_10148, { 1, 0 }
  uselistorder i1 %v8_10140, { 1, 0 }
  uselistorder i32 %v1_10128, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_100c4, { 1, 0 }
  uselistorder i8 %v3_100bc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100b4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_100b4, { 0, 2, 1 }
  uselistorder i32 %v0_100ac, { 1, 0 }
  uselistorder i1 %v7_100a8, { 1, 0 }
  uselistorder i1 %v7_100a0, { 1, 0 }
  uselistorder i1 %v7_10098, { 1, 0 }
  uselistorder i1 %v7_10084, { 1, 0 }
  uselistorder i1 %v7_1007c, { 1, 0 }
  uselistorder i1 %v7_10074, { 1, 0 }
  uselistorder i1 %v8_1006c, { 1, 0 }
  uselistorder i32 %v1_10054, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fff0, { 1, 0 }
  uselistorder i8 %v3_ffe8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ffe0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ffe0, { 0, 2, 1 }
  uselistorder i32 %v0_ffd8, { 1, 0 }
  uselistorder i1 %v7_ffd4, { 1, 0 }
  uselistorder i1 %v7_ffcc, { 1, 0 }
  uselistorder i1 %v7_ffc4, { 1, 0 }
  uselistorder i1 %v7_ffb0, { 1, 0 }
  uselistorder i1 %v7_ffa8, { 1, 0 }
  uselistorder i1 %v7_ffa0, { 1, 0 }
  uselistorder i1 %v8_ff98, { 1, 0 }
  uselistorder i32 %v1_ff80, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_ff1c, { 1, 0 }
  uselistorder i8 %v3_ff14, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ff0c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ff0c, { 0, 2, 1 }
  uselistorder i32 %v0_ff04, { 1, 0 }
  uselistorder i1 %v7_ff00, { 1, 0 }
  uselistorder i1 %v7_fef8, { 1, 0 }
  uselistorder i1 %v7_fef0, { 1, 0 }
  uselistorder i1 %v7_fedc, { 1, 0 }
  uselistorder i1 %v7_fed4, { 1, 0 }
  uselistorder i1 %v7_fecc, { 1, 0 }
  uselistorder i1 %v8_fec4, { 1, 0 }
  uselistorder i32 %v1_feac, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fe48, { 1, 0 }
  uselistorder i8 %v3_fe40, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fe38, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fe38, { 0, 2, 1 }
  uselistorder i32 %v0_fe30, { 1, 0 }
  uselistorder i1 %v7_fe2c, { 1, 0 }
  uselistorder i1 %v7_fe24, { 1, 0 }
  uselistorder i1 %v7_fe1c, { 1, 0 }
  uselistorder i1 %v7_fe08, { 1, 0 }
  uselistorder i1 %v7_fe00, { 1, 0 }
  uselistorder i1 %v7_fdf8, { 1, 0 }
  uselistorder i1 %v8_fdf0, { 1, 0 }
  uselistorder i32 %v1_fdd8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fd74, { 1, 0 }
  uselistorder i8 %v3_fd6c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fd64, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fd64, { 0, 2, 1 }
  uselistorder i32 %v0_fd5c, { 1, 0 }
  uselistorder i1 %v7_fd58, { 1, 0 }
  uselistorder i1 %v7_fd50, { 1, 0 }
  uselistorder i1 %v7_fd48, { 1, 0 }
  uselistorder i1 %v7_fd34, { 1, 0 }
  uselistorder i1 %v7_fd2c, { 1, 0 }
  uselistorder i1 %v7_fd24, { 1, 0 }
  uselistorder i1 %v8_fd1c, { 1, 0 }
  uselistorder i32 %v1_fd04, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_fcf0, { 1, 2, 0 }
  uselistorder i32 %v2_fcdc, { 1, 0 }
  uselistorder i32 %v0_fcdc, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_fcd8, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_fcb0, { 2, 1, 0 }
  uselistorder i1 %v7_fc90, { 1, 0 }
  uselistorder i32 %v1_fc4c, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_fc30, { 1, 0 }
  uselistorder i32 %v1_fc20, { 2, 1, 0 }
  uselistorder i32 %v1_fc1c, { 1, 0 }
  uselistorder i32 %v0_fbbc, { 2, 4, 3, 19, 5, 6, 21, 7, 8, 20, 9, 10, 22, 11, 12, 25, 13, 14, 23, 15, 16, 24, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_fb98, { 1, 2, 3, 0 }
  uselistorder i32 %v3_fb94, { 1, 0 }
  uselistorder i32 %v4_fb78, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 %v2_fb64, { 1, 0, 2 }
  uselistorder i32 %v3_fb60, { 1, 0, 2 }
  uselistorder i32 %v0_105c8, { 1, 0, 2 }
  uselistorder i32 %v3_fb28, { 1, 0 }
  uselistorder i32 %v1_fb10, { 3, 2, 1, 0 }
  uselistorder i32 %v3_fb0c, { 1, 0 }
  uselistorder i32 %v3_fb04, { 1, 2, 0 }
  uselistorder i1 %v7_faf4, { 1, 0 }
  uselistorder i32 %v3_faf0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_fae4, { 1, 0 }
  uselistorder i32 %v2_fa8c, { 1, 0 }
  uselistorder i32 %v1_fa8c, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_fa8c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_fa58, { 2, 1, 0 }
  uselistorder i32 %v1_fa54, { 1, 0 }
  uselistorder i1 %v2_fa34, { 1, 0, 2 }
  uselistorder i32 %v0_fa30, { 1, 0, 2 }
  uselistorder i1 %v7_f9fc, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f9fc, { 1, 0, 2 }
  uselistorder i32 %v2_f9f4, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_f9e8, { 1, 0, 2 }
  uselistorder i32 %v0_f9ec, { 1, 0 }
  uselistorder i32 %v1_f9d0, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v2_f9c4, { 1, 0 }
  uselistorder i32 %v1_f9c4, { 1, 3, 0, 2, 4 }
  uselistorder i32 %v0_f9c4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_f9b4, { 1, 0 }
  uselistorder i32 %v3_f99c, { 1, 0, 2 }
  uselistorder i32 %v2_1062c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_101b4, { 5, 4, 1, 0, 3, 11, 12, 13, 10, 7, 9, 8, 6, 2 }
  uselistorder i32 %v2_10420, { 1, 0 }
  uselistorder i32 %v2_fb00, { 0, 5, 1, 6, 2, 7, 3, 4 }
  uselistorder i32 %stack_var_-1876.0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f900, { 1, 0 }
  uselistorder i32 %v1_f8e8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f8f4, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f8a4, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_f898, { 2, 1, 0 }
  uselistorder i32 %v1_f878, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_f85c, { 0, 1, 3, 2 }
  uselistorder i1 %v2_f854, { 1, 0 }
  uselistorder i1 %v9_f820, { 1, 0 }
  uselistorder i32 %v1_f770, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_f720, { 1, 0 }
  uselistorder i32 %v5_f6b8, { 1, 0 }
  uselistorder i32 %v3_f6a8, { 1, 2, 0 }
  uselistorder i16 %v4_f6a4, { 1, 0 }
  uselistorder i32 %v3_f6a4, { 1, 0 }
  uselistorder i32 %v5_f678, { 0, 3, 1, 2 }
  uselistorder i1 %v2_f600, { 1, 0 }
  uselistorder i1 %v3_f5e4, { 1, 0, 2 }
  uselistorder i1 %v2_f5d0, { 1, 0 }
  uselistorder i1 %v2_f5ac, { 1, 0 }
  uselistorder i32 %v1_f55c, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f548, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f544, { 4, 5, 6, 0, 7, 1, 2, 3, 8 }
  uselistorder i32 %v0_f52c, { 1, 0 }
  uselistorder i32 %v0_f800, { 0, 1, 2, 3, 6, 7, 10, 9, 4, 5, 8, 12, 11 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i16 %v5_e834.le, { 0, 2, 1 }
  uselistorder i32 %v0_e818, { 3, 2, 0, 1 }
  uselistorder i1 %v7_e7b8, { 1, 0 }
  uselistorder i32 %v3_e7b0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_e79c, { 1, 0 }
  uselistorder i32 %v2_e780, { 1, 0, 2 }
  uselistorder i32 %v0_e76c, { 1, 2, 0 }
  uselistorder i32 %storemerge314, { 1, 0 }
  uselistorder i32 %v0_e42c, { 2, 1, 3, 0, 4 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-96, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 10, 11, 12, 8, 13, 2, 14, 15, 0, 1, 16, 3, 17, 6, 18, 4, 19, 5, 20, 7, 21, 9, 22 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32 %tmp320, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 17, 18, 19, 20, 21, 22, 23, 28, 24, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39, 41, 40, 42, 113, 43, 112, 25, 26, 135, 136, 137, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 127, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 144, 146, 147, 148, 149, 151, 150, 152, 153, 154, 155, 157, 156, 158, 2, 3, 4, 6, 5, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 69, 66, 72, 71, 0, 73, 74, 1, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 159, 91, 92, 93, 94, 96, 95, 98, 97, 111, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 28, 19, 20, 29, 30, 31, 32, 272, 21, 22, 23, 24, 25, 282, 283, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 298, 299, 47, 48, 50, 49, 46, 51, 52, 0, 54, 53, 1, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 300, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271 }
  uselistorder i32* %r1.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 29, 19, 20, 21, 22, 30, 31, 32, 33, 34, 35, 259, 23, 24, 25, 26, 267, 268, 289, 260, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 257, 258, 27, 28, 36, 37, 38, 39, 40, 42, 43, 44, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 288, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256 }
  uselistorder i32* %r0.global-to-local, {}
  uselistorder i32* %ip.global-to-local, { 1, 2, 4, 7, 5, 6, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22 }
  uselistorder i1* %cpsr_z.global-to-local, { 48, 32, 166, 64, 145, 146, 179, 136, 137, 49, 50, 33, 34, 35, 60, 37, 39, 40, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 131, 58, 167, 172, 168, 169, 170, 171, 173, 174, 175, 176, 177, 38, 178, 36, 180, 181, 182, 188, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 198, 199, 200, 195, 196, 197, 201, 202, 203, 204, 205, 206, 210, 211, 212, 207, 208, 209, 213, 214, 215, 216, 217, 218, 222, 0, 1, 219, 220, 221, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 15, 16, 17, 18, 19, 23, 24, 25, 20, 21, 22, 26, 27, 28, 29, 30, 31, 41, 42, 43, 45, 51, 53, 52, 54, 55, 56, 57, 59, 61, 62, 63, 132, 133, 65, 66, 67, 68, 70, 69, 71, 72, 73, 76, 78, 79, 77, 74, 75, 138, 139, 134, 80, 135, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 47, 113, 114, 115, 116, 117, 46, 118, 119, 120, 44, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 140, 144 }
  uselistorder i1* %cpsr_c.global-to-local, { 48, 33, 34, 160, 65, 0, 143, 173, 49, 134, 135, 50, 35, 36, 37, 60, 38, 40, 41, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 129, 59, 161, 166, 162, 163, 164, 165, 167, 168, 169, 170, 171, 39, 172, 55, 174, 175, 176, 182, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 192, 193, 194, 189, 190, 191, 195, 196, 197, 198, 199, 200, 204, 205, 206, 201, 202, 203, 207, 208, 209, 210, 211, 212, 216, 1, 2, 213, 214, 215, 3, 4, 5, 6, 7, 8, 12, 13, 14, 9, 10, 11, 15, 16, 17, 18, 19, 20, 24, 25, 26, 21, 22, 23, 27, 28, 29, 30, 31, 32, 42, 44, 46, 51, 53, 52, 54, 56, 57, 58, 61, 62, 63, 64, 130, 131, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 76, 73, 74, 136, 137, 132, 79, 133, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 47, 110, 111, 112, 113, 114, 45, 115, 116, 117, 43, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 139, 140, 141, 138, 142 }
  uselistorder i32 (i32)* @function_dca0, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_182a0.120 to i16*), { 1, 0 }
  uselistorder i16** @global_var_182a0.120, { 1, 0 }
  uselistorder i32 ptrtoint (i16** @global_var_182a0.120 to i32), { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_122bc, { 1, 0 }
  uselistorder i32 (i32)* @function_dcc8, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_175a0.484 to i32), { 5, 7, 6, 8, 0, 9, 3, 10, 1, 11, 2, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @function_123a8, { 24, 23, 22, 21, 20, 19, 18, 12, 8, 7, 11, 10, 9, 6, 5, 4, 3, 2, 1, 28, 27, 26, 25, 13, 17, 16, 15, 14, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i32 (i32)* @function_108e8, { 44, 43, 12, 9, 8, 42, 11, 7, 6, 10, 5, 4, 3, 2, 1, 46, 45, 41, 0, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1124c, { 4, 2, 1, 0, 3 }
  uselistorder i32 (i32, i32*)* @function_108c4, { 2, 3, 4, 41, 42, 43, 44, 45, 46, 0, 1, 5, 48, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47 }
  uselistorder i32 (i32)* @function_10988, { 39, 38, 37, 7, 6, 5, 4, 3, 2, 41, 40, 36, 0, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12334, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_11978, { 2, 0, 1 }
  uselistorder i32 284, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @function_e1f8, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 5, { 11, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1236c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_123e0, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_bfc8, { 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32* @global_var_1828c.473, { 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i16* @global_var_18288.132 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 (i32, i32)* @function_bf78, { 10, 9, 2, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i16* bitcast (i32* @global_var_1827e.470 to i16*), { 1, 0, 2 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 3, 2, 0, 1 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 192, { 2, 3, 4, 0, 1 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_17594.468 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1748c.424 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_17454.412 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_17418.396 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_173f8.388 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_173f0.386 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_173b8.370 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_173a8.366 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_173a0.364 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_17384.356 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_172fc.328 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_172f4.326 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_172ec.322 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_172c8.314 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_172b8.310 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1728c.300 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1727c.296 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_17274.294 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_17240.280 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1721c.270 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_171bc.248 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_17028.238 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_17140.220 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_170ec.202 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_170cc.196 to i32), { 1, 7, 0, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_170c0.194 to i32), { 0, 5, 1, 6, 2, 3, 4, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_170b8.192 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_170b0.190 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_170a4.187 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_17094.185 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_17084.181 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_171c0.177 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_17064.173 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1705c.171 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_17054.169 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_17048.167 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_17598.165 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_17040.163 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_17038.161 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_17030.159 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1701c.155 to i32), { 0, 7, 1, 8, 2, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1700c.151 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_17514.145 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @function_e2c0, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_17370.143 to i32), { 6, 57, 7, 58, 8, 59, 9, 60, 10, 61, 0, 62, 11, 63, 1, 64, 12, 65, 2, 66, 13, 67, 14, 68, 15, 69, 3, 70, 16, 71, 17, 72, 18, 73, 19, 74, 20, 75, 21, 76, 4, 77, 22, 78, 23, 79, 24, 80, 25, 81, 26, 82, 27, 83, 28, 84, 29, 85, 30, 86, 31, 87, 32, 88, 33, 89, 34, 90, 35, 91, 36, 92, 37, 93, 38, 94, 39, 95, 40, 96, 41, 97, 42, 98, 43, 99, 44, 100, 45, 46, 47, 101, 48, 102, 49, 103, 50, 104, 51, 105, 52, 106, 5, 107, 53, 108, 54, 109, 55, 110, 56, 111 }
  uselistorder i32 ptrtoint (i32* @global_var_174cc.141 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_18295.138, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 2, 0, 3, 4, 5, 6, 1 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i16* @global_var_18288.132, { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16* @global_var_18288.132 to i32), { 5, 2, 1, 0, 4, 3 }
  uselistorder i8* @global_var_18294.133, { 1, 0 }
  uselistorder i32 10240, { 1, 0, 2 }
  uselistorder i8** @global_var_18274.129, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_18274.129 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @function_db0c, { 66, 65, 64, 63, 62, 61, 60, 56, 59, 58, 57, 55, 54, 53, 52, 51, 50, 13, 12, 11, 10, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12420, { 9, 8, 7, 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 2048, { 4, 3, 2, 6, 7, 0, 1, 5, 8, 9 }
  uselistorder i32* @global_var_1a2f8.127, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_1a2f4.125, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_182a4.114, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @function_118d4, { 0, 1, 2, 3, 22, 4, 5, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24 }
  uselistorder i32 (i32)* @function_db68, { 1, 0 }
  uselistorder i32* @global_var_1a2d8.43, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_1a2d8.43 to i32), { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ()* @function_11450, { 2, 1, 0 }
  uselistorder i32* @global_var_1a2fc.112, { 0, 2, 1 }
  uselistorder i32 ()* @function_11944, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_108bc, { 1, 0 }
  uselistorder label %bb437, { 1, 0 }
  uselistorder label %dec_label_pc_107ec, { 1, 0 }
  uselistorder label %dec_label_pc_fb3c.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fb3c.backedge.thread541, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_fb3c.backedge.thread, { 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_105ac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_104c8, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_10490, { 1, 0 }
  uselistorder label %dec_label_pc_1047c, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1046c, { 1, 0 }
  uselistorder label %dec_label_pc_103f8, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread118, { 2, 0, 1 }
  uselistorder label %dec_label_pc_103c4, { 1, 0 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_103a4, { 1, 0 }
  uselistorder label %dec_label_pc_10390, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1034c, { 1, 0 }
  uselistorder label %dec_label_pc_1034c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_102b0, { 1, 0 }
  uselistorder label %dec_label_pc_10240, { 4, 2, 6, 1, 0, 5, 3 }
  uselistorder label %dec_label_pc_10198, { 1, 0 }
  uselistorder label %dec_label_pc_100cc, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_100b4, { 1, 0 }
  uselistorder label %dec_label_pc_fff8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ffe0, { 1, 0 }
  uselistorder label %dec_label_pc_ff24, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ff0c, { 1, 0 }
  uselistorder label %dec_label_pc_fe50, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fe38, { 1, 0 }
  uselistorder label %dec_label_pc_fd7c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fd64, { 1, 0 }
  uselistorder label %dec_label_pc_fcd8, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_fc48, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb401, { 1, 0 }
  uselistorder label %bb399, { 1, 0 }
  uselistorder label %dec_label_pc_fc10, { 1, 0 }
  uselistorder label %dec_label_pc_fba4, { 1, 0 }
  uselistorder label %.thread60, { 1, 0 }
  uselistorder label %dec_label_pc_fb54, { 1, 0 }
  uselistorder label %dec_label_pc_fb44, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_fb44.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_fb20, { 1, 0 }
  uselistorder label %dec_label_pc_fa74, { 1, 0 }
  uselistorder label %bb393, { 1, 0 }
  uselistorder label %bb391, { 1, 0 }
  uselistorder label %bb389, { 1, 0 }
  uselistorder label %bb387, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_f968.dec_label_pc_f968_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f944.dec_label_pc_f944_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f938, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_f930, { 1, 0 }
  uselistorder label %dec_label_pc_f90c, { 1, 0 }
  uselistorder label %dec_label_pc_f8e8, { 1, 0 }
  uselistorder label %dec_label_pc_f798, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_f784, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f5ec, { 1, 0 }
  uselistorder label %dec_label_pc_f5e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f5bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f598, { 1, 0 }
  uselistorder label %bb360, { 1, 0 }
  uselistorder label %dec_label_pc_f544, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_e818, { 1, 0 }
}

define i32 @function_108c4(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_108c4:
  store i32 ptrtoint (i32* @global_var_1a304.493 to i32), i32* @r2, align 4
  %v3_108c8 = mul i32 %arg1, 8
  %v2_108cc = add i32 %v3_108c8, ptrtoint (i32* @global_var_1a304.493 to i32)
  store i32 %v2_108cc, i32* @r3, align 4
  %v2_108d0 = icmp eq i32* %arg2, null
  br i1 %v2_108d0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_108c4
  %v3_108d84 = inttoptr i32 %v2_108cc to i32*
  %v4_108d85 = load i32, i32* %v3_108d84, align 4
  br label %bb7

bb:                                               ; preds = %dec_label_pc_108c4
  %v2_108d4 = add i32 %v3_108c8, add (i32 ptrtoint (i32* @global_var_1a304.493 to i32), i32 4)
  %v3_108d4 = inttoptr i32 %v2_108d4 to i16*
  %v4_108d4 = load i16, i16* %v3_108d4, align 4
  %v5_108d4 = zext i16 %v4_108d4 to i32
  store i32 %v5_108d4, i32* @r3, align 4
  %v3_108d8 = inttoptr i32 %v2_108cc to i32*
  %v4_108d8 = load i32, i32* %v3_108d8, align 4
  store i32 %v5_108d4, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_108d86 = phi i32 [ %v4_108d85, %.thread ], [ %v4_108d8, %bb ]
  ret i32 %v4_108d86

; uselistorder directives
  uselistorder i32 %v2_108cc, { 1, 0, 2 }
  uselistorder i32 %v3_108c8, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @function_108e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_108e8:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_108f0 = mul i32 %arg1, 8
  %v2_108f4 = add i32 %v3_108f0, ptrtoint (i32* @global_var_1a304.493 to i32)
  %v2_108f8 = load i32, i32* inttoptr (i32 98452 to i32*), align 4
  %v1_108fc = add i32 %v3_108f0, add (i32 ptrtoint (i32* @global_var_1a304.493 to i32), i32 4)
  %v2_108fc = inttoptr i32 %v1_108fc to i16*
  %v3_108fc = load i16, i16* %v2_108fc, align 4
  %v3_10900 = udiv i32 %v2_108f8, 256
  %v2_10904 = icmp eq i16 %v3_108fc, 0
  store i1 %v2_10904, i1* @cpsr_z, align 1
  %v3_10908 = udiv i32 %v2_108f8, 65536
  store i32 %v3_10908, i32* @r3, align 4
  %v3_1090c = load i32, i32* @r4, align 4
  store i32 %v3_1090c, i32* %stack_var_-16, align 4
  %v1_10910 = urem i32 %v3_10900, 256
  store i32 %v1_10910, i32* %r6.global-to-local, align 4
  %v1_10914 = urem i32 %v3_10908, 256
  store i32 %v1_10914, i32* %r5.global-to-local, align 4
  %v3_10918 = udiv i32 %v2_108f8, 16777216
  store i32 %v3_10918, i32* %r4.global-to-local, align 4
  %v1_1091c = urem i32 %v2_108f8, 256
  store i32 %v1_1091c, i32* %lr.global-to-local, align 4
  br i1 %v2_10904, label %dec_label_pc_10978, label %dec_label_pc_10924

dec_label_pc_10924:                               ; preds = %dec_label_pc_108e8
  store i32 0, i32* @ip, align 4
  %v1_10928 = inttoptr i32 %v2_108f4 to i32*
  br label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %dec_label_pc_10928.dec_label_pc_10928_crit_edge, %dec_label_pc_10924
  %v0_10930 = phi i32 [ %v0_10930.pre, %dec_label_pc_10928.dec_label_pc_10928_crit_edge ], [ %v1_1091c, %dec_label_pc_10924 ]
  %v2_10934 = phi i32 [ %v1_1096c, %dec_label_pc_10928.dec_label_pc_10928_crit_edge ], [ 0, %dec_label_pc_10924 ]
  %v2_10928 = load i32, i32* %v1_10928, align 4
  %v2_1092c = add i32 %v2_10928, %v2_10934
  %v3_1092c = inttoptr i32 %v2_1092c to i8*
  %v4_1092c = load i8, i8* %v3_1092c, align 1
  %v6_1092c = zext i8 %v4_1092c to i32
  %v2_10930 = xor i32 %v6_1092c, %v0_10930
  %v1_10934 = trunc i32 %v2_10930 to i8
  store i8 %v1_10934, i8* %v3_1092c, align 1
  %v2_10938 = load i32, i32* %v1_10928, align 4
  %v0_1093c = load i32, i32* @ip, align 4
  %v2_1093c = add i32 %v0_1093c, %v2_10938
  %v3_1093c = inttoptr i32 %v2_1093c to i8*
  %v4_1093c = load i8, i8* %v3_1093c, align 1
  %v6_1093c = zext i8 %v4_1093c to i32
  %v0_10940 = load i32, i32* %r6.global-to-local, align 4
  %v2_10940 = xor i32 %v0_10940, %v6_1093c
  %v1_10944 = trunc i32 %v2_10940 to i8
  store i8 %v1_10944, i8* %v3_1093c, align 1
  %v2_10948 = load i32, i32* %v1_10928, align 4
  %v0_1094c = load i32, i32* @ip, align 4
  %v2_1094c = add i32 %v0_1094c, %v2_10948
  %v3_1094c = inttoptr i32 %v2_1094c to i8*
  %v4_1094c = load i8, i8* %v3_1094c, align 1
  %v6_1094c = zext i8 %v4_1094c to i32
  %v0_10950 = load i32, i32* %r5.global-to-local, align 4
  %v2_10950 = xor i32 %v0_10950, %v6_1094c
  %v1_10954 = trunc i32 %v2_10950 to i8
  store i8 %v1_10954, i8* %v3_1094c, align 1
  %v2_10958 = load i32, i32* %v1_10928, align 4
  %v0_1095c = load i32, i32* @ip, align 4
  %v2_1095c = add i32 %v0_1095c, %v2_10958
  %v3_1095c = inttoptr i32 %v2_1095c to i8*
  %v4_1095c = load i8, i8* %v3_1095c, align 1
  %v6_1095c = zext i8 %v4_1095c to i32
  %v0_10960 = load i32, i32* %r4.global-to-local, align 4
  %v2_10960 = xor i32 %v0_10960, %v6_1095c
  store i32 %v2_10960, i32* @r3, align 4
  %v1_10964 = trunc i32 %v2_10960 to i8
  store i8 %v1_10964, i8* %v3_1095c, align 1
  %v3_10968 = load i16, i16* %v2_108fc, align 4
  %v4_10968 = zext i16 %v3_10968 to i32
  %v0_1096c = load i32, i32* @ip, align 4
  %v1_1096c = add i32 %v0_1096c, 1
  store i32 %v1_1096c, i32* @ip, align 4
  %v9_10970 = icmp eq i32 %v4_10968, %v1_1096c
  store i1 %v9_10970, i1* @cpsr_z, align 1
  %v8_10974 = icmp sgt i32 %v4_10968, %v1_1096c
  br i1 %v8_10974, label %dec_label_pc_10928.dec_label_pc_10928_crit_edge, label %dec_label_pc_10978.loopexit

dec_label_pc_10928.dec_label_pc_10928_crit_edge:  ; preds = %dec_label_pc_10928
  %v0_10930.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10928

dec_label_pc_10978.loopexit:                      ; preds = %dec_label_pc_10928
  %v2_10978.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %dec_label_pc_10978.loopexit, %dec_label_pc_108e8
  %v2_10978 = phi i32 [ %v2_10978.pre, %dec_label_pc_10978.loopexit ], [ %v3_1090c, %dec_label_pc_108e8 ]
  store i32 %v2_10978, i32* @r4, align 4
  ret i32 %v2_108f4

; uselistorder directives
  uselistorder i32 %v1_1096c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1091c, { 1, 0 }
  uselistorder i32 %v3_10908, { 1, 0 }
  uselistorder i32 %v2_108f8, { 3, 0, 1, 2 }
  uselistorder i32 %v3_108f0, { 1, 0 }
}

define i32 @function_10988(i32 %arg1) local_unnamed_addr {
dec_label_pc_10988:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10990 = mul i32 %arg1, 8
  %v2_10994 = add i32 %v3_10990, ptrtoint (i32* @global_var_1a304.493 to i32)
  %v2_10998 = load i32, i32* inttoptr (i32 98452 to i32*), align 4
  %v1_1099c = add i32 %v3_10990, add (i32 ptrtoint (i32* @global_var_1a304.493 to i32), i32 4)
  %v2_1099c = inttoptr i32 %v1_1099c to i16*
  %v3_1099c = load i16, i16* %v2_1099c, align 4
  %v3_109a0 = udiv i32 %v2_10998, 256
  %v2_109a4 = icmp eq i16 %v3_1099c, 0
  %v3_109a8 = udiv i32 %v2_10998, 65536
  %v3_109ac = load i32, i32* @r4, align 4
  store i32 %v3_109ac, i32* %stack_var_-16, align 4
  %v1_109b0 = urem i32 %v3_109a0, 256
  store i32 %v1_109b0, i32* %r6.global-to-local, align 4
  %v1_109b4 = urem i32 %v3_109a8, 256
  store i32 %v1_109b4, i32* %r5.global-to-local, align 4
  %v3_109b8 = udiv i32 %v2_10998, 16777216
  store i32 %v3_109b8, i32* %r4.global-to-local, align 4
  %v1_109bc = urem i32 %v2_10998, 256
  store i32 %v1_109bc, i32* %lr.global-to-local, align 4
  br i1 %v2_109a4, label %dec_label_pc_10a18, label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_10988
  store i32 0, i32* @ip, align 4
  %v1_109c8 = inttoptr i32 %v2_10994 to i32*
  br label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge, %dec_label_pc_109c4
  %v0_109d0 = phi i32 [ %v0_109d0.pre, %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge ], [ %v1_109bc, %dec_label_pc_109c4 ]
  %v2_109d4 = phi i32 [ %v1_10a0c, %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge ], [ 0, %dec_label_pc_109c4 ]
  %v2_109c8 = load i32, i32* %v1_109c8, align 4
  %v2_109cc = add i32 %v2_109c8, %v2_109d4
  %v3_109cc = inttoptr i32 %v2_109cc to i8*
  %v4_109cc = load i8, i8* %v3_109cc, align 1
  %v6_109cc = zext i8 %v4_109cc to i32
  %v2_109d0 = xor i32 %v6_109cc, %v0_109d0
  %v1_109d4 = trunc i32 %v2_109d0 to i8
  store i8 %v1_109d4, i8* %v3_109cc, align 1
  %v2_109d8 = load i32, i32* %v1_109c8, align 4
  %v0_109dc = load i32, i32* @ip, align 4
  %v2_109dc = add i32 %v0_109dc, %v2_109d8
  %v3_109dc = inttoptr i32 %v2_109dc to i8*
  %v4_109dc = load i8, i8* %v3_109dc, align 1
  %v6_109dc = zext i8 %v4_109dc to i32
  %v0_109e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_109e0 = xor i32 %v0_109e0, %v6_109dc
  %v1_109e4 = trunc i32 %v2_109e0 to i8
  store i8 %v1_109e4, i8* %v3_109dc, align 1
  %v2_109e8 = load i32, i32* %v1_109c8, align 4
  %v0_109ec = load i32, i32* @ip, align 4
  %v2_109ec = add i32 %v0_109ec, %v2_109e8
  %v3_109ec = inttoptr i32 %v2_109ec to i8*
  %v4_109ec = load i8, i8* %v3_109ec, align 1
  %v6_109ec = zext i8 %v4_109ec to i32
  %v0_109f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_109f0 = xor i32 %v0_109f0, %v6_109ec
  %v1_109f4 = trunc i32 %v2_109f0 to i8
  store i8 %v1_109f4, i8* %v3_109ec, align 1
  %v2_109f8 = load i32, i32* %v1_109c8, align 4
  %v0_109fc = load i32, i32* @ip, align 4
  %v2_109fc = add i32 %v0_109fc, %v2_109f8
  %v3_109fc = inttoptr i32 %v2_109fc to i8*
  %v4_109fc = load i8, i8* %v3_109fc, align 1
  %v6_109fc = zext i8 %v4_109fc to i32
  %v0_10a00 = load i32, i32* %r4.global-to-local, align 4
  %v2_10a00 = xor i32 %v0_10a00, %v6_109fc
  %v1_10a04 = trunc i32 %v2_10a00 to i8
  store i8 %v1_10a04, i8* %v3_109fc, align 1
  %v3_10a08 = load i16, i16* %v2_1099c, align 4
  %v4_10a08 = zext i16 %v3_10a08 to i32
  %v0_10a0c = load i32, i32* @ip, align 4
  %v1_10a0c = add i32 %v0_10a0c, 1
  store i32 %v1_10a0c, i32* @ip, align 4
  %v8_10a14 = icmp sgt i32 %v4_10a08, %v1_10a0c
  br i1 %v8_10a14, label %dec_label_pc_109c8.dec_label_pc_109c8_crit_edge, label %dec_label_pc_10a18.loopexit

dec_label_pc_109c8.dec_label_pc_109c8_crit_edge:  ; preds = %dec_label_pc_109c8
  %v0_109d0.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_109c8

dec_label_pc_10a18.loopexit:                      ; preds = %dec_label_pc_109c8
  %v2_10a18.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %dec_label_pc_10a18.loopexit, %dec_label_pc_10988
  %v2_10a18 = phi i32 [ %v2_10a18.pre, %dec_label_pc_10a18.loopexit ], [ %v3_109ac, %dec_label_pc_10988 ]
  store i32 %v2_10a18, i32* @r4, align 4
  ret i32 %v2_10994

; uselistorder directives
  uselistorder i32 %v1_10a0c, { 1, 2, 0 }
  uselistorder i32 %v1_109bc, { 1, 0 }
  uselistorder i32 %v2_10998, { 3, 0, 1, 2 }
  uselistorder i32 %v2_10994, { 1, 0 }
  uselistorder i32 %v3_10990, { 1, 0 }
}

define i32 @function_10a28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10a28:
  %v3_10a28 = load i32, i32* @r4, align 4
  %v6_10a28 = load i32, i32* @r5, align 4
  %v9_10a28 = load i32, i32* @r6, align 4
  %v12_10a28 = load i32, i32* @r7, align 4
  %v15_10a28 = load i32, i32* @r8, align 4
  %v21_10a28 = load i32, i32* @sl, align 4
  %v24_10a28 = load i32, i32* @fp, align 4
  store i32 9, i32* @r0, align 4
  %v0_10a34 = call i32 @function_126ac()
  store i32 ptrtoint ([10 x i8]* @global_var_175b0.499 to i32), i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_1a304.493 to i32), i32* @r4, align 4
  store i32 9, i32* @fp, align 4
  store i32 %v0_10a34, i32* @r5, align 4
  %v4_10a50 = call i32 @function_11204(i32 %v0_10a34, i32 ptrtoint ([10 x i8]* @global_var_175b0.499 to i32), i32 9)
  store i32 2, i32* @r0, align 4
  %v0_10a58 = load i32, i32* @r5, align 4
  store i32 %v0_10a58, i32* @global_var_1a31c.501, align 4
  %v0_10a5c = load i32, i32* @fp, align 4
  %v1_10a5c = trunc i32 %v0_10a5c to i16
  store i16 %v1_10a5c, i16* bitcast (i32* @global_var_1a320.502 to i16*), align 4
  %v0_10a60 = call i32 @function_126ac()
  store i32 2, i32* @r5, align 4
  store i32 %v0_10a60, i32* @r6, align 4
  %v4_10a74 = call i32 @function_11204(i32 %v0_10a60, i32 ptrtoint ([3 x i8]* @global_var_175bc.504 to i32), i32 2)
  %v0_10a78 = load i32, i32* @fp, align 4
  store i32 %v0_10a78, i32* @r0, align 4
  %v0_10a7c = load i32, i32* @r6, align 4
  store i32 %v0_10a7c, i32* @global_var_1a324.505, align 4
  %v0_10a80 = load i32, i32* @r5, align 4
  %v1_10a80 = trunc i32 %v0_10a80 to i16
  store i16 %v1_10a80, i16* bitcast (i32* @global_var_1a328.506 to i16*), align 4
  %v0_10a84 = call i32 @function_126ac()
  %v0_10a88 = load i32, i32* @r7, align 4
  %v0_10a8c = load i32, i32* @fp, align 4
  store i32 %v0_10a84, i32* @r6, align 4
  %v4_10a94 = call i32 @function_11204(i32 %v0_10a84, i32 %v0_10a88, i32 %v0_10a8c)
  %v0_10a98 = load i32, i32* @r5, align 4
  store i32 %v0_10a98, i32* @r0, align 4
  %v0_10a9c = load i32, i32* @r6, align 4
  store i32 %v0_10a9c, i32* @global_var_1a394.507, align 4
  %v0_10aa0 = load i32, i32* @fp, align 4
  %v1_10aa0 = trunc i32 %v0_10aa0 to i16
  store i16 %v1_10aa0, i16* bitcast (i32* @global_var_1a398.508 to i16*), align 4
  %v0_10aa4 = call i32 @function_126ac()
  %v0_10aa8 = load i32, i32* @r5, align 4
  store i32 %v0_10aa4, i32* @r6, align 4
  %v3_10ab4 = call i32 @function_11204(i32 %v0_10aa4, i32 ptrtoint (i32* @global_var_175c0.510 to i32), i32 %v0_10aa8)
  store i32 15, i32* @r0, align 4
  %v0_10abc = load i32, i32* @r6, align 4
  store i32 %v0_10abc, i32* @global_var_1a39c.511, align 4
  %v0_10ac0 = load i32, i32* @r5, align 4
  %v1_10ac0 = trunc i32 %v0_10ac0 to i16
  store i16 %v1_10ac0, i16* bitcast (i32* @global_var_1a3a0.512 to i16*), align 4
  %v0_10ac4 = call i32 @function_126ac()
  store i32 15, i32* @r6, align 4
  store i32 %v0_10ac4, i32* @r5, align 4
  %v3_10ad8 = call i32 @function_11204(i32 %v0_10ac4, i32 ptrtoint (i32* @global_var_175c4.514 to i32), i32 15)
  store i32 7, i32* @r0, align 4
  %v0_10ae0 = load i32, i32* @r5, align 4
  store i32 %v0_10ae0, i32* @global_var_1a314.515, align 4
  %v0_10ae4 = load i32, i32* @r6, align 4
  %v1_10ae4 = trunc i32 %v0_10ae4 to i16
  store i16 %v1_10ae4, i16* bitcast (i32* @global_var_1a318.516 to i16*), align 4
  %v0_10ae8 = call i32 @function_126ac()
  store i32 7, i32* @r7, align 4
  store i32 %v0_10ae8, i32* @r5, align 4
  %v4_10afc = call i32 @function_11204(i32 %v0_10ae8, i32 ptrtoint ([8 x i8]* @global_var_175d4.518 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_10b04 = load i32, i32* @r5, align 4
  store i32 %v0_10b04, i32* @global_var_1a334.519, align 4
  %v0_10b08 = load i32, i32* @r7, align 4
  %v1_10b08 = trunc i32 %v0_10b08 to i16
  store i16 %v1_10b08, i16* bitcast (i32* @global_var_1a338.520 to i16*), align 4
  %v0_10b0c = call i32 @function_126ac()
  store i32 %v0_10b0c, i32* @r5, align 4
  %v4_10b1c = call i32 @function_11204(i32 %v0_10b0c, i32 ptrtoint ([6 x i8]* @global_var_175dc.522 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  %v0_10b28 = load i32, i32* @r5, align 4
  store i32 %v0_10b28, i32* @global_var_1a33c.523, align 4
  store i16 5, i16* bitcast (i32* @global_var_1a340.524 to i16*), align 4
  %v0_10b30 = call i32 @function_126ac()
  store i32 %v0_10b30, i32* @r5, align 4
  %v4_10b40 = call i32 @function_11204(i32 %v0_10b30, i32 ptrtoint ([5 x i8]* @global_var_175e4.526 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  store i16 4, i16* bitcast (i32* @global_var_1a348.527 to i16*), align 4
  %v0_10b50 = load i32, i32* @r5, align 4
  store i32 %v0_10b50, i32* @global_var_1a344.528, align 4
  %v0_10b54 = call i32 @function_126ac()
  store i32 14, i32* @r8, align 4
  store i32 %v0_10b54, i32* @r5, align 4
  %v4_10b68 = call i32 @function_11204(i32 %v0_10b54, i32 ptrtoint ([15 x i8]* @global_var_175ec.530 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  %v0_10b70 = load i32, i32* @r5, align 4
  store i32 %v0_10b70, i32* @global_var_1a34c.531, align 4
  %v0_10b74 = load i32, i32* @r8, align 4
  %v1_10b74 = trunc i32 %v0_10b74 to i16
  store i16 %v1_10b74, i16* bitcast (i32* @global_var_1a350.532 to i16*), align 4
  %v0_10b78 = call i32 @function_126ac()
  store i32 %v0_10b78, i32* @r5, align 4
  %v4_10b88 = call i32 @function_11204(i32 %v0_10b78, i32 ptrtoint ([7 x i8]* @global_var_175fc.534 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_10b94 = load i32, i32* @r5, align 4
  store i32 %v0_10b94, i32* @global_var_1a354.535, align 4
  store i16 6, i16* bitcast (i32* @global_var_1a358.536 to i16*), align 4
  %v0_10b9c = call i32 @function_126ac()
  store i32 8, i32* @sl, align 4
  store i32 %v0_10b9c, i32* @r5, align 4
  %v4_10bb0 = call i32 @function_11204(i32 %v0_10b9c, i32 ptrtoint ([9 x i8]* @global_var_17604.538 to i32), i32 8)
  %v0_10bb4 = load i32, i32* @r7, align 4
  store i32 %v0_10bb4, i32* @r0, align 4
  %v0_10bb8 = load i32, i32* @r5, align 4
  store i32 %v0_10bb8, i32* @global_var_1a35c.539, align 4
  %v0_10bbc = load i32, i32* @sl, align 4
  %v1_10bbc = trunc i32 %v0_10bbc to i16
  store i16 %v1_10bbc, i16* bitcast (i32* @global_var_1a360.540 to i16*), align 4
  %v0_10bc0 = call i32 @function_126ac()
  %v0_10bc8 = load i32, i32* @r7, align 4
  store i32 %v0_10bc0, i32* @r5, align 4
  %v4_10bd0 = call i32 @function_11204(i32 %v0_10bc0, i32 ptrtoint ([8 x i8]* @global_var_17610.542 to i32), i32 %v0_10bc8)
  store i32 16, i32* @r0, align 4
  %v0_10bd8 = load i32, i32* @r5, align 4
  store i32 %v0_10bd8, i32* @global_var_1a364.543, align 4
  %v0_10bdc = load i32, i32* @r7, align 4
  %v1_10bdc = trunc i32 %v0_10bdc to i16
  store i16 %v1_10bdc, i16* bitcast (i32* @global_var_1a368.544 to i16*), align 4
  %v0_10be0 = call i32 @function_126ac()
  store i32 %v0_10be0, i32* @r5, align 4
  %v4_10bf0 = call i32 @function_11204(i32 %v0_10be0, i32 ptrtoint ([17 x i8]* @global_var_17618.546 to i32), i32 16)
  %v0_10bf8 = load i32, i32* @r8, align 4
  store i32 %v0_10bf8, i32* @r0, align 4
  store i16 16, i16* bitcast (i32* @global_var_1a370.547 to i16*), align 4
  %v0_10c00 = load i32, i32* @r5, align 4
  store i32 %v0_10c00, i32* @global_var_1a36c.548, align 4
  %v0_10c04 = call i32 @function_126ac()
  %v0_10c0c = load i32, i32* @r8, align 4
  store i32 %v0_10c04, i32* @r5, align 4
  %v4_10c14 = call i32 @function_11204(i32 %v0_10c04, i32 ptrtoint ([15 x i8]* @global_var_1762c.550 to i32), i32 %v0_10c0c)
  %v0_10c18 = load i32, i32* @fp, align 4
  store i32 %v0_10c18, i32* @r0, align 4
  %v0_10c1c = load i32, i32* @r5, align 4
  store i32 %v0_10c1c, i32* @global_var_1a374.551, align 4
  %v0_10c20 = load i32, i32* @r8, align 4
  %v1_10c20 = trunc i32 %v0_10c20 to i16
  store i16 %v1_10c20, i16* bitcast (i32* @global_var_1a378.552 to i16*), align 4
  %v0_10c24 = call i32 @function_126ac()
  %v0_10c2c = load i32, i32* @fp, align 4
  store i32 %v0_10c24, i32* @r5, align 4
  %v4_10c34 = call i32 @function_11204(i32 %v0_10c24, i32 ptrtoint ([10 x i8]* @global_var_1763c.554 to i32), i32 %v0_10c2c)
  store i32 19, i32* @r0, align 4
  %v0_10c3c = load i32, i32* @r5, align 4
  store i32 %v0_10c3c, i32* @global_var_1a37c.555, align 4
  %v0_10c40 = load i32, i32* @fp, align 4
  %v1_10c40 = trunc i32 %v0_10c40 to i16
  store i16 %v1_10c40, i16* bitcast (i32* @global_var_1a380.556 to i16*), align 4
  %v0_10c44 = call i32 @function_126ac()
  store i32 19, i32* @sb, align 4
  store i32 %v0_10c44, i32* @r5, align 4
  %v4_10c58 = call i32 @function_11204(i32 %v0_10c44, i32 ptrtoint ([20 x i8]* @global_var_17648.558 to i32), i32 19)
  store i32 23, i32* @r0, align 4
  %v0_10c60 = load i32, i32* @r5, align 4
  store i32 %v0_10c60, i32* @global_var_1a384.559, align 4
  %v0_10c64 = load i32, i32* @sb, align 4
  %v1_10c64 = trunc i32 %v0_10c64 to i16
  store i16 %v1_10c64, i16* bitcast (i32* @global_var_1a388.560 to i16*), align 4
  %v0_10c68 = call i32 @function_126ac()
  store i32 %v0_10c68, i32* @r5, align 4
  %v3_10c78 = call i32 @function_11204(i32 %v0_10c68, i32 ptrtoint (i32* @global_var_1765c.562 to i32), i32 23)
  %v0_10c80 = load i32, i32* @sl, align 4
  store i32 %v0_10c80, i32* @r0, align 4
  %v0_10c84 = load i32, i32* @r5, align 4
  store i32 %v0_10c84, i32* @global_var_1a38c.563, align 4
  store i16 23, i16* bitcast (i32* @global_var_1a390.564 to i16*), align 4
  %v0_10c8c = call i32 @function_126ac()
  %v0_10c94 = load i32, i32* @sl, align 4
  store i32 %v0_10c8c, i32* @r5, align 4
  %v4_10c9c = call i32 @function_11204(i32 %v0_10c8c, i32 ptrtoint ([9 x i8]* @global_var_17674.566 to i32), i32 %v0_10c94)
  %v0_10ca0 = load i32, i32* @r8, align 4
  store i32 %v0_10ca0, i32* @r0, align 4
  %v0_10ca4 = load i32, i32* @r5, align 4
  store i32 %v0_10ca4, i32* @global_var_1a394.507, align 4
  %v0_10ca8 = load i32, i32* @sl, align 4
  %v1_10ca8 = trunc i32 %v0_10ca8 to i16
  store i16 %v1_10ca8, i16* bitcast (i32* @global_var_1a398.508 to i16*), align 4
  %v0_10cac = call i32 @function_126ac()
  %v0_10cb4 = load i32, i32* @r8, align 4
  store i32 %v0_10cac, i32* @r5, align 4
  %v4_10cbc = call i32 @function_11204(i32 %v0_10cac, i32 ptrtoint ([15 x i8]* @global_var_17680.568 to i32), i32 %v0_10cb4)
  %v0_10cc0 = load i32, i32* @sb, align 4
  store i32 %v0_10cc0, i32* @r0, align 4
  %v0_10cc4 = load i32, i32* @r5, align 4
  store i32 %v0_10cc4, i32* @global_var_1a39c.511, align 4
  %v0_10cc8 = load i32, i32* @r8, align 4
  %v1_10cc8 = trunc i32 %v0_10cc8 to i16
  store i16 %v1_10cc8, i16* bitcast (i32* @global_var_1a3a0.512 to i16*), align 4
  %v0_10ccc = call i32 @function_126ac()
  %v0_10cd4 = load i32, i32* @sb, align 4
  store i32 %v0_10ccc, i32* @r5, align 4
  %v4_10cdc = call i32 @function_11204(i32 %v0_10ccc, i32 ptrtoint ([20 x i8]* @global_var_17690.570 to i32), i32 %v0_10cd4)
  store i32 23, i32* @r0, align 4
  %v0_10ce4 = load i32, i32* @r5, align 4
  store i32 %v0_10ce4, i32* @global_var_1a3a4.571, align 4
  %v0_10ce8 = load i32, i32* @sb, align 4
  %v1_10ce8 = trunc i32 %v0_10ce8 to i16
  store i16 %v1_10ce8, i16* bitcast (i32* @global_var_1a3a8.572 to i16*), align 4
  %v0_10cec = call i32 @function_126ac()
  store i32 %v0_10cec, i32* @r5, align 4
  %v3_10cfc = call i32 @function_11204(i32 %v0_10cec, i32 ptrtoint (i32* @global_var_176a4.574 to i32), i32 23)
  store i32 24, i32* @r0, align 4
  store i16 23, i16* bitcast (i32* @global_var_1a3b0.575 to i16*), align 4
  %v0_10d0c = load i32, i32* @r5, align 4
  store i32 %v0_10d0c, i32* @global_var_1a3ac.576, align 4
  %v0_10d10 = call i32 @function_126ac()
  store i32 %v0_10d10, i32* @r5, align 4
  %v3_10d20 = call i32 @function_11204(i32 %v0_10d10, i32 ptrtoint (i32* @global_var_176bc.578 to i32), i32 24)
  %v0_10d28 = load i32, i32* @r6, align 4
  store i32 %v0_10d28, i32* @r0, align 4
  %v0_10d2c = load i32, i32* @r5, align 4
  store i32 %v0_10d2c, i32* @global_var_1a3b4.579, align 4
  store i16 24, i16* bitcast (i32* @global_var_1a3b8.580 to i16*), align 4
  %v0_10d34 = call i32 @function_126ac()
  %v0_10d38 = load i32, i32* @r6, align 4
  store i32 %v0_10d34, i32* @r5, align 4
  %v4_10d44 = call i32 @function_11204(i32 %v0_10d34, i32 ptrtoint ([15 x i8]* @global_var_176d4.582 to i32), i32 %v0_10d38)
  store i32 13, i32* @r0, align 4
  %v0_10d4c = load i32, i32* @r5, align 4
  store i32 %v0_10d4c, i32* @global_var_1a3bc.583, align 4
  %v0_10d50 = load i32, i32* @r6, align 4
  %v1_10d50 = trunc i32 %v0_10d50 to i16
  store i16 %v1_10d50, i16* bitcast (i32* @global_var_1a3c0.584 to i16*), align 4
  %v0_10d54 = call i32 @function_126ac()
  %v3_10d64 = call i32 @function_11204(i32 %v0_10d54, i32 ptrtoint (i32* @global_var_176e4.586 to i32), i32 13)
  store i32 10, i32* @r0, align 4
  store i16 13, i16* bitcast (i32* @global_var_1a368.544 to i16*), align 4
  store i32 %v0_10d54, i32* @global_var_1a364.543, align 4
  store i32 10, i32* @r5, align 4
  %v0_10d7c = call i32 @function_126ac()
  %v0_10d80 = load i32, i32* @r5, align 4
  store i32 %v0_10d7c, i32* @r6, align 4
  %v4_10d8c = call i32 @function_11204(i32 %v0_10d7c, i32 ptrtoint ([11 x i8]* @global_var_176f4.588 to i32), i32 %v0_10d80)
  %v0_10d90 = load i32, i32* @r5, align 4
  store i32 %v0_10d90, i32* @r0, align 4
  %v0_10d94 = load i32, i32* @r6, align 4
  store i32 %v0_10d94, i32* @global_var_1a36c.548, align 4
  %v1_10d98 = trunc i32 %v0_10d90 to i16
  store i16 %v1_10d98, i16* bitcast (i32* @global_var_1a370.547 to i16*), align 4
  %v0_10d9c = call i32 @function_126ac()
  %v0_10da0 = load i32, i32* @r5, align 4
  store i32 %v0_10d9c, i32* @r6, align 4
  %v4_10dac = call i32 @function_11204(i32 %v0_10d9c, i32 ptrtoint ([11 x i8]* @global_var_17700.590 to i32), i32 %v0_10da0)
  store i32 33, i32* @r0, align 4
  %v0_10db4 = load i32, i32* @r6, align 4
  store i32 %v0_10db4, i32* @global_var_1a374.551, align 4
  %v0_10db8 = load i32, i32* @r5, align 4
  %v1_10db8 = trunc i32 %v0_10db8 to i16
  store i16 %v1_10db8, i16* bitcast (i32* @global_var_1a378.552 to i16*), align 4
  %v0_10dbc = call i32 @function_126ac()
  store i32 %v0_10dbc, i32* @r6, align 4
  %v3_10dcc = call i32 @function_11204(i32 %v0_10dbc, i32 ptrtoint (i32* @global_var_1770c.592 to i32), i32 33)
  %v0_10dd4 = load i32, i32* @sl, align 4
  store i32 %v0_10dd4, i32* @r0, align 4
  %v0_10dd8 = load i32, i32* @r6, align 4
  store i32 %v0_10dd8, i32* @global_var_1a37c.555, align 4
  store i16 33, i16* bitcast (i32* @global_var_1a380.556 to i16*), align 4
  %v0_10de0 = call i32 @function_126ac()
  %v0_10de8 = load i32, i32* @sl, align 4
  store i32 %v0_10de0, i32* @r6, align 4
  %v4_10df0 = call i32 @function_11204(i32 %v0_10de0, i32 ptrtoint ([9 x i8]* @global_var_17730.594 to i32), i32 %v0_10de8)
  store i32 11, i32* @r0, align 4
  %v0_10df8 = load i32, i32* @r6, align 4
  store i32 %v0_10df8, i32* @global_var_1a384.559, align 4
  %v0_10dfc = load i32, i32* @sl, align 4
  %v1_10dfc = trunc i32 %v0_10dfc to i16
  store i16 %v1_10dfc, i16* bitcast (i32* @global_var_1a388.560 to i16*), align 4
  %v0_10e00 = call i32 @function_126ac()
  store i32 %v0_10e00, i32* @r6, align 4
  %v4_10e10 = call i32 @function_11204(i32 %v0_10e00, i32 ptrtoint ([12 x i8]* @global_var_1773c.596 to i32), i32 11)
  %v0_10e18 = load i32, i32* @r8, align 4
  store i32 %v0_10e18, i32* @r0, align 4
  store i16 11, i16* bitcast (i32* @global_var_1a390.564 to i16*), align 4
  %v0_10e20 = load i32, i32* @r6, align 4
  store i32 %v0_10e20, i32* @global_var_1a38c.563, align 4
  %v0_10e24 = call i32 @function_126ac()
  %v0_10e2c = load i32, i32* @r8, align 4
  store i32 %v0_10e24, i32* @r6, align 4
  %v4_10e34 = call i32 @function_11204(i32 %v0_10e24, i32 ptrtoint ([15 x i8]* @global_var_175ec.530 to i32), i32 %v0_10e2c)
  %v0_10e38 = load i32, i32* @r5, align 4
  store i32 %v0_10e38, i32* @r0, align 4
  %v0_10e3c = load i32, i32* @r6, align 4
  store i32 %v0_10e3c, i32* @global_var_1a34c.531, align 4
  %v0_10e40 = load i32, i32* @r8, align 4
  %v1_10e40 = trunc i32 %v0_10e40 to i16
  store i16 %v1_10e40, i16* bitcast (i32* @global_var_1a350.532 to i16*), align 4
  %v0_10e44 = call i32 @function_126ac()
  %v0_10e48 = load i32, i32* @r5, align 4
  store i32 %v0_10e44, i32* @r6, align 4
  %v4_10e54 = call i32 @function_11204(i32 %v0_10e44, i32 ptrtoint ([11 x i8]* @global_var_17748.598 to i32), i32 %v0_10e48)
  store i32 6, i32* @r0, align 4
  %v0_10e5c = load i32, i32* @r5, align 4
  %v1_10e5c = trunc i32 %v0_10e5c to i16
  store i16 %v1_10e5c, i16* bitcast (i32* @global_var_1a350.532 to i16*), align 4
  %v0_10e60 = load i32, i32* @r6, align 4
  store i32 %v0_10e60, i32* @global_var_1a34c.531, align 4
  %v0_10e64 = call i32 @function_126ac()
  store i32 %v0_10e64, i32* @r5, align 4
  %v4_10e74 = call i32 @function_11204(i32 %v0_10e64, i32 ptrtoint ([7 x i8]* @global_var_17754.600 to i32), i32 6)
  %v0_10e7c = load i32, i32* @r7, align 4
  store i32 %v0_10e7c, i32* @r0, align 4
  %v0_10e80 = load i32, i32* @r5, align 4
  store i32 %v0_10e80, i32* @global_var_1a3a4.571, align 4
  store i16 6, i16* bitcast (i32* @global_var_1a3a8.572 to i16*), align 4
  %v0_10e88 = call i32 @function_126ac()
  %v0_10e90 = load i32, i32* @r7, align 4
  store i32 %v0_10e88, i32* @r5, align 4
  %v4_10e98 = call i32 @function_11204(i32 %v0_10e88, i32 ptrtoint ([8 x i8]* @global_var_1775c.602 to i32), i32 %v0_10e90)
  %v0_10e9c = load i32, i32* @r7, align 4
  store i32 %v0_10e9c, i32* @r0, align 4
  %v0_10ea0 = load i32, i32* @r5, align 4
  store i32 %v0_10ea0, i32* @global_var_1a3ac.576, align 4
  %v1_10ea4 = trunc i32 %v0_10e9c to i16
  store i16 %v1_10ea4, i16* bitcast (i32* @global_var_1a3b0.575 to i16*), align 4
  %v0_10ea8 = call i32 @function_126ac()
  %v0_10eb0 = load i32, i32* @r7, align 4
  store i32 %v0_10ea8, i32* @r5, align 4
  %v4_10eb8 = call i32 @function_11204(i32 %v0_10ea8, i32 ptrtoint ([8 x i8]* @global_var_17764.604 to i32), i32 %v0_10eb0)
  store i32 3, i32* @r0, align 4
  %v0_10ec0 = load i32, i32* @r5, align 4
  store i32 %v0_10ec0, i32* @global_var_1a3b4.579, align 4
  %v0_10ec4 = load i32, i32* @r7, align 4
  %v1_10ec4 = trunc i32 %v0_10ec4 to i16
  store i16 %v1_10ec4, i16* bitcast (i32* @global_var_1a3b8.580 to i16*), align 4
  %v0_10ec8 = call i32 @function_126ac()
  store i32 %v0_10ec8, i32* @r5, align 4
  %v4_10ed8 = call i32 @function_11204(i32 %v0_10ec8, i32 ptrtoint ([4 x i8]* @global_var_1776c.606 to i32), i32 3)
  %v0_10ee0 = load i32, i32* @sb, align 4
  store i32 %v0_10ee0, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_1a3c0.584 to i16*), align 4
  %v0_10ee8 = load i32, i32* @r5, align 4
  store i32 %v0_10ee8, i32* @global_var_1a3bc.583, align 4
  %v0_10eec = call i32 @function_126ac()
  %v0_10ef4 = load i32, i32* @sb, align 4
  store i32 %v0_10eec, i32* @r5, align 4
  %v3_10efc = call i32 @function_11204(i32 %v0_10eec, i32 ptrtoint (i32* @global_var_17770.608 to i32), i32 %v0_10ef4)
  store i32 24, i32* @r0, align 4
  %v0_10f04 = load i32, i32* @r5, align 4
  store i32 %v0_10f04, i32* @global_var_1a3c4.609, align 4
  %v0_10f08 = load i32, i32* @sb, align 4
  %v1_10f08 = trunc i32 %v0_10f08 to i16
  store i16 %v1_10f08, i16* bitcast (i32* @global_var_1a3c8.610 to i16*), align 4
  %v0_10f0c = call i32 @function_126ac()
  store i32 %v0_10f0c, i32* @r5, align 4
  %v3_10f1c = call i32 @function_11204(i32 %v0_10f0c, i32 ptrtoint (i32* @global_var_17784.612 to i32), i32 24)
  %v0_10f24 = load i32, i32* @fp, align 4
  store i32 %v0_10f24, i32* @r0, align 4
  %v0_10f28 = load i32, i32* @r5, align 4
  store i32 %v0_10f28, i32* @global_var_1a3cc.613, align 4
  store i16 24, i16* bitcast (i32* @global_var_1a3d0.614 to i16*), align 4
  %v0_10f30 = call i32 @function_126ac()
  %v0_10f38 = load i32, i32* @fp, align 4
  store i32 %v0_10f30, i32* @r5, align 4
  %v4_10f40 = call i32 @function_11204(i32 %v0_10f30, i32 ptrtoint ([10 x i8]* @global_var_177a0.616 to i32), i32 %v0_10f38)
  store i32 16, i32* @r0, align 4
  %v0_10f48 = load i32, i32* @r5, align 4
  store i32 %v0_10f48, i32* @global_var_1a3d4.617, align 4
  %v0_10f4c = load i32, i32* @fp, align 4
  %v1_10f4c = trunc i32 %v0_10f4c to i16
  store i16 %v1_10f4c, i16* bitcast (i32* @global_var_1a3d8.618 to i16*), align 4
  %v0_10f50 = call i32 @function_126ac()
  store i32 %v0_10f50, i32* @r5, align 4
  %v3_10f60 = call i32 @function_11204(i32 %v0_10f50, i32 ptrtoint (i32* @global_var_177ac.620 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  store i16 16, i16* bitcast (i32* @global_var_1a3e0.621 to i16*), align 4
  %v0_10f70 = load i32, i32* @r5, align 4
  store i32 %v0_10f70, i32* @global_var_1a3dc.622, align 4
  %v0_10f74 = call i32 @function_126ac()
  store i32 %v0_10f74, i32* @r5, align 4
  %v3_10f84 = call i32 @function_11204(i32 %v0_10f74, i32 ptrtoint (i32* @global_var_177c0.624 to i32), i32 22)
  %v0_10f8c = load i32, i32* @sl, align 4
  store i32 %v0_10f8c, i32* @r0, align 4
  %v0_10f90 = load i32, i32* @r5, align 4
  store i32 %v0_10f90, i32* @global_var_1a3e4.625, align 4
  store i16 22, i16* bitcast (i32* @global_var_1a3e8.626 to i16*), align 4
  %v0_10f98 = call i32 @function_126ac()
  %v0_10fa0 = load i32, i32* @sl, align 4
  store i32 %v0_10f98, i32* @r5, align 4
  %v4_10fa8 = call i32 @function_11204(i32 %v0_10f98, i32 ptrtoint ([9 x i8]* @global_var_17674.566 to i32), i32 %v0_10fa0)
  store i32 5, i32* @r0, align 4
  %v0_10fb0 = load i32, i32* @r5, align 4
  store i32 %v0_10fb0, i32* @global_var_1a3fc.627, align 4
  %v0_10fb4 = load i32, i32* @sl, align 4
  %v1_10fb4 = trunc i32 %v0_10fb4 to i16
  store i16 %v1_10fb4, i16* bitcast (i32* @global_var_1a400.628 to i16*), align 4
  %v0_10fb8 = call i32 @function_126ac()
  store i32 %v0_10fb8, i32* @r5, align 4
  %v4_10fc8 = call i32 @function_11204(i32 %v0_10fb8, i32 ptrtoint ([6 x i8]* @global_var_177d8.630 to i32), i32 5)
  store i32 6, i32* @r0, align 4
  %v2_10fd8 = load i32, i32* @r4, align 4
  %v4_10fd8 = add i32 %v2_10fd8, 260
  %v5_10fd8 = inttoptr i32 %v4_10fd8 to i16*
  store i16 5, i16* %v5_10fd8, align 2
  %v0_10fdc = load i32, i32* @r5, align 4
  store i32 %v0_10fdc, i32* @global_var_1a404.631, align 4
  %v0_10fe0 = call i32 @function_126ac()
  store i32 %v0_10fe0, i32* @r5, align 4
  %v4_10ff0 = call i32 @function_11204(i32 %v0_10fe0, i32 ptrtoint ([7 x i8]* @global_var_177e0.633 to i32), i32 6)
  store i32 21, i32* @r0, align 4
  %v2_11000 = load i32, i32* @r4, align 4
  %v4_11000 = add i32 %v2_11000, 268
  %v5_11000 = inttoptr i32 %v4_11000 to i16*
  store i16 6, i16* %v5_11000, align 2
  %v0_11004 = load i32, i32* @r5, align 4
  store i32 %v0_11004, i32* @global_var_1a40c.634, align 4
  %v0_11008 = call i32 @function_126ac()
  store i32 %v0_11008, i32* @r5, align 4
  %v3_11018 = call i32 @function_11204(i32 %v0_11008, i32 ptrtoint (i32* @global_var_177e8.636 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_1a3f0.637 to i16*), align 4
  %v0_11028 = load i32, i32* @r5, align 4
  store i32 %v0_11028, i32* @global_var_1a3ec.638, align 4
  %v0_1102c = call i32 @function_126ac()
  store i32 %v0_1102c, i32* @r5, align 4
  %v4_1103c = call i32 @function_11204(i32 %v0_1102c, i32 ptrtoint ([18 x i8]* @global_var_17800.640 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  %v0_11048 = load i32, i32* @r5, align 4
  store i32 %v0_11048, i32* @global_var_1a3f4.641, align 4
  store i16 17, i16* bitcast (i32* @global_var_1a3f8.642 to i16*), align 4
  %v0_11050 = call i32 @function_126ac()
  store i32 %v0_11050, i32* @r5, align 4
  %v3_11060 = call i32 @function_11204(i32 %v0_11050, i32 ptrtoint (i32* @global_var_17814.644 to i32), i32 12)
  %v0_11068 = load i32, i32* @r8, align 4
  store i32 %v0_11068, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_1a400.628 to i16*), align 4
  %v0_11070 = load i32, i32* @r5, align 4
  store i32 %v0_11070, i32* @global_var_1a3fc.627, align 4
  %v0_11074 = call i32 @function_126ac()
  %v0_1107c = load i32, i32* @r8, align 4
  store i32 %v0_11074, i32* @r5, align 4
  %v4_11084 = call i32 @function_11204(i32 %v0_11074, i32 ptrtoint ([15 x i8]* @global_var_17680.568 to i32), i32 %v0_1107c)
  store i32 23, i32* @r0, align 4
  %v0_1108c = load i32, i32* @r5, align 4
  store i32 %v0_1108c, i32* @global_var_1a36c.548, align 4
  %v0_11090 = load i32, i32* @r8, align 4
  %v1_11090 = trunc i32 %v0_11090 to i16
  store i16 %v1_11090, i16* bitcast (i32* @global_var_1a370.547 to i16*), align 4
  %v0_11094 = call i32 @function_126ac()
  store i32 %v0_11094, i32* @r5, align 4
  %v3_110a4 = call i32 @function_11204(i32 %v0_11094, i32 ptrtoint (i32* @global_var_1765c.562 to i32), i32 23)
  %v0_110b0 = load i32, i32* @sb, align 4
  store i32 %v0_110b0, i32* @r0, align 4
  %v2_110b4 = load i32, i32* @r4, align 4
  %v4_110b4 = add i32 %v2_110b4, 332
  %v5_110b4 = inttoptr i32 %v4_110b4 to i16*
  store i16 23, i16* %v5_110b4, align 2
  %v0_110b8 = load i32, i32* @r5, align 4
  store i32 %v0_110b8, i32* @global_var_1a44c.645, align 4
  %v0_110bc = call i32 @function_126ac()
  %v0_110c4 = load i32, i32* @sb, align 4
  %v4_110cc = call i32 @function_11204(i32 %v0_110bc, i32 ptrtoint ([20 x i8]* @global_var_17690.570 to i32), i32 %v0_110c4)
  %v0_110d0 = load i32, i32* @sb, align 4
  %v1_110d0 = trunc i32 %v0_110d0 to i16
  store i16 %v1_110d0, i16* bitcast (i32* @global_var_1a378.552 to i16*), align 4
  store i32 %v0_110bc, i32* @global_var_1a374.551, align 4
  store i32 %v3_10a28, i32* @r4, align 4
  store i32 %v6_10a28, i32* @r5, align 4
  store i32 %v9_10a28, i32* @r6, align 4
  store i32 %v12_10a28, i32* @r7, align 4
  store i32 %v15_10a28, i32* @r8, align 4
  store i32 %v21_10a28, i32* @sl, align 4
  store i32 %v24_10a28, i32* @fp, align 4
  ret i32 %v4_110cc

; uselistorder directives
  uselistorder i32 %v0_11074, { 1, 0 }
  uselistorder i32 %v0_10f98, { 1, 0 }
  uselistorder i32 %v0_10f30, { 1, 0 }
  uselistorder i32 %v0_10eec, { 1, 0 }
  uselistorder i32 %v0_10ea8, { 1, 0 }
  uselistorder i32 %v0_10e88, { 1, 0 }
  uselistorder i32 %v0_10e44, { 1, 0 }
  uselistorder i32 %v0_10e24, { 1, 0 }
  uselistorder i32 %v0_10de0, { 1, 0 }
  uselistorder i32 %v0_10d9c, { 1, 0 }
  uselistorder i32 %v0_10d7c, { 1, 0 }
  uselistorder i32 %v0_10d34, { 1, 0 }
  uselistorder i32 %v0_10ccc, { 1, 0 }
  uselistorder i32 %v0_10cac, { 1, 0 }
  uselistorder i32 %v0_10c8c, { 1, 0 }
  uselistorder i32 %v0_10c44, { 1, 0 }
  uselistorder i32 %v0_10c24, { 1, 0 }
  uselistorder i32 %v0_10c04, { 1, 0 }
  uselistorder i32 %v0_10bc0, { 1, 0 }
  uselistorder i32 %v0_10b9c, { 1, 0 }
  uselistorder i32 %v0_10b54, { 1, 0 }
  uselistorder i32 %v0_10ae8, { 1, 0 }
  uselistorder i32 %v0_10ac4, { 1, 0 }
  uselistorder i32 %v0_10aa4, { 1, 0 }
  uselistorder i32 %v0_10a84, { 1, 0 }
  uselistorder i32 %v0_10a60, { 1, 0 }
  uselistorder i32 %v0_10a34, { 1, 0 }
  uselistorder i32 21, { 0, 11, 1, 8, 2, 9, 3, 10, 12, 7, 4, 5, 6 }
  uselistorder i32 23, { 0, 12, 1, 13, 2, 14, 3, 9, 4, 10, 5, 11, 6, 7, 8 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_175ec.530 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11204, { 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 10, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 9, 8, 7, 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1a304.493 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @function_11194(i8* %arg1) local_unnamed_addr {
dec_label_pc_11194:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_11198 = load i8, i8* %arg1, align 1
  %v2_1119c = icmp eq i8 %v3_11198, 0
  %v0_111a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1119c, i32 %v0_111a0)
  br label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_111a8, %dec_label_pc_11194
  %v0_111a8 = phi i32 [ %v1_111a8, %dec_label_pc_111a8 ], [ 0, %dec_label_pc_11194 ]
  %v1_111a8 = add i32 %v0_111a8, 1
  %v2_111ac = add i32 %v1_111a8, %tmp
  %v3_111ac = inttoptr i32 %v2_111ac to i8*
  %v4_111ac = load i8, i8* %v3_111ac, align 1
  %v2_111b0 = icmp eq i8 %v4_111ac, 0
  br i1 %v2_111b0, label %dec_label_pc_111b8, label %dec_label_pc_111a8

dec_label_pc_111b8:                               ; preds = %dec_label_pc_111a8
  ret i32 %v1_111a8
}

define i32 @function_111bc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_111bc:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_111bc = load i8, i8* %arg1, align 1
  %v3_111bc = zext i8 %v2_111bc to i32
  store i32 %v3_111bc, i32* @r2, align 4
  %v2_111c0 = icmp eq i8 %v2_111bc, 0
  br i1 %v2_111c0, label %bb, label %dec_label_pc_111cc

bb:                                               ; preds = %dec_label_pc_111bc
  store i32 %v3_111bc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_111e0

dec_label_pc_111cc:                               ; preds = %dec_label_pc_111bc
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_111d0

dec_label_pc_111d0:                               ; preds = %dec_label_pc_111d0, %dec_label_pc_111cc
  %v0_111d0 = phi i32 [ %v1_111d0, %dec_label_pc_111d0 ], [ 0, %dec_label_pc_111cc ]
  %v1_111d0 = add i32 %v0_111d0, 1
  store i32 %v1_111d0, i32* %ip.global-to-local, align 4
  %v2_111d4 = add i32 %v1_111d0, %tmp
  %v3_111d4 = inttoptr i32 %v2_111d4 to i8*
  %v4_111d4 = load i8, i8* %v3_111d4, align 1
  %v2_111d8 = icmp eq i8 %v4_111d4, 0
  br i1 %v2_111d8, label %dec_label_pc_111e0, label %dec_label_pc_111d0

dec_label_pc_111e0:                               ; preds = %dec_label_pc_111d0, %bb
  %v0_111e0 = phi i32 [ %v3_111bc, %bb ], [ %v1_111d0, %dec_label_pc_111d0 ]
  br label %dec_label_pc_111ec

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111ec
  %v0_111e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_111e8 = add i32 %v0_111e8, 1
  %v2_111e8 = inttoptr i32 %v1_111e8 to i8*
  %v3_111e8 = load i8, i8* %v2_111e8, align 1
  %v4_111e8 = zext i8 %v3_111e8 to i32
  store i32 %v4_111e8, i32* @r2, align 4
  store i32 %v1_111e8, i32* %r1.global-to-local, align 4
  %v0_111ec.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %dec_label_pc_111e0, %dec_label_pc_111e8
  %v0_111f4.off0 = phi i8 [ %v2_111bc, %dec_label_pc_111e0 ], [ %v3_111e8, %dec_label_pc_111e8 ]
  %v0_111ec = phi i32 [ %v0_111e0, %dec_label_pc_111e0 ], [ %v0_111ec.pr, %dec_label_pc_111e8 ]
  %v1_111ec = add i32 %v0_111ec, -1
  store i32 %v1_111ec, i32* @r3, align 4
  %v3_111f0 = icmp eq i32 %v0_111ec, 0
  %v2_111f4 = load i32, i32* @r0, align 4
  %v3_111f4 = inttoptr i32 %v2_111f4 to i8*
  store i8 %v0_111f4.off0, i8* %v3_111f4, align 1
  %v4_111f4 = load i32, i32* @r0, align 4
  %v5_111f4 = add i32 %v4_111f4, 1
  store i32 %v5_111f4, i32* @r0, align 4
  br i1 %v3_111f0, label %dec_label_pc_111fc, label %dec_label_pc_111e8

dec_label_pc_111fc:                               ; preds = %dec_label_pc_111ec
  %v0_111fc = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_111fc

; uselistorder directives
  uselistorder i32 %v0_111ec, { 1, 0 }
  uselistorder i32 %v1_111d0, { 0, 1, 3, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_111ec, { 1, 0 }
}

define i32 @function_11204(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11204:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %v2_11204 = icmp eq i32 %arg3, 0
  %v0_11208 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11204, i32 %v0_11208)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11210, %dec_label_pc_11204
  %v0_11210 = phi i32 [ %v1_11218, %dec_label_pc_11210 ], [ 0, %dec_label_pc_11204 ]
  %v2_11210 = add i32 %v0_11210, %arg2
  %v3_11210 = inttoptr i32 %v2_11210 to i8*
  %v4_11210 = load i8, i8* %v3_11210, align 1
  %v4_11214 = add i32 %v0_11210, %arg1
  %v5_11214 = inttoptr i32 %v4_11214 to i8*
  store i8 %v4_11210, i8* %v5_11214, align 1
  %v0_11218 = load i32, i32* %ip.global-to-local, align 4
  %v1_11218 = add i32 %v0_11218, 1
  store i32 %v1_11218, i32* %ip.global-to-local, align 4
  %v9_1121c = icmp eq i32 %v1_11218, %arg3
  br i1 %v9_1121c, label %dec_label_pc_11224, label %dec_label_pc_11210

dec_label_pc_11224:                               ; preds = %dec_label_pc_11210
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_11218, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11228() local_unnamed_addr {
dec_label_pc_11228:
  %r2.global-to-local = alloca i32, align 4
  %v0_11228 = load i32, i32* @r1, align 4
  %v2_11228 = icmp eq i32 %v0_11228, 0
  %v0_1122c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11228, i32 %v0_1122c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %dec_label_pc_11234, %dec_label_pc_11228
  %v2_11238 = phi i32 [ %v1_1123c, %dec_label_pc_11234 ], [ 0, %dec_label_pc_11228 ]
  store i32 0, i32* @r3, align 4
  %v3_11238 = load i32, i32* @r0, align 4
  %v4_11238 = add i32 %v3_11238, %v2_11238
  %v5_11238 = inttoptr i32 %v4_11238 to i8*
  store i8 0, i8* %v5_11238, align 1
  %v0_1123c = load i32, i32* %r2.global-to-local, align 4
  %v1_1123c = add i32 %v0_1123c, 1
  store i32 %v1_1123c, i32* %r2.global-to-local, align 4
  %v1_11240 = load i32, i32* @r1, align 4
  %v9_11240 = icmp eq i32 %v1_1123c, %v1_11240
  br i1 %v9_11240, label %dec_label_pc_11248, label %dec_label_pc_11234

dec_label_pc_11248:                               ; preds = %dec_label_pc_11234
  %v1_11248 = load i32, i32* @r0, align 4
  ret i32 %v1_11248

; uselistorder directives
  uselistorder i32 %v1_1123c, { 1, 2, 0 }
}

define i32 @function_1124c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1124c:
  %v7_11260 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_11260, label %dec_label_pc_11268, label %dec_label_pc_11270

dec_label_pc_11268:                               ; preds = %dec_label_pc_11284, %dec_label_pc_11270, %dec_label_pc_1124c, %dec_label_pc_112b0
  %storemerge = phi i32 [ %v1_112b0, %dec_label_pc_112b0 ], [ -1, %dec_label_pc_1124c ], [ -1, %dec_label_pc_11270 ], [ -1, %dec_label_pc_11284 ]
  ret i32 %storemerge

dec_label_pc_11270:                               ; preds = %dec_label_pc_1124c
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_11268, label %dec_label_pc_11278

dec_label_pc_11278:                               ; preds = %dec_label_pc_11270
  br label %dec_label_pc_11290

dec_label_pc_11284:                               ; preds = %bb, %dec_label_pc_112a4
  %v1_112903 = phi i32 [ %v1_112a4, %dec_label_pc_112a4 ], [ 0, %bb ]
  %v1_11284 = add i32 %v0_112b0, 1
  %v9_11288 = icmp eq i32 %v1_11284, %arg2
  br i1 %v9_11288, label %dec_label_pc_11268, label %dec_label_pc_11290

dec_label_pc_11290:                               ; preds = %dec_label_pc_11284, %dec_label_pc_11278
  %v0_112b0 = phi i32 [ %v1_11284, %dec_label_pc_11284 ], [ 0, %dec_label_pc_11278 ]
  %v1_11290 = phi i32 [ %v1_112903, %dec_label_pc_11284 ], [ 0, %dec_label_pc_11278 ]
  %v2_11290 = add i32 %v1_11290, %arg3
  %v3_11290 = inttoptr i32 %v2_11290 to i8*
  %v4_11290 = load i8, i8* %v3_11290, align 1
  %v2_11294 = add i32 %v0_112b0, %arg1
  %v3_11294 = inttoptr i32 %v2_11294 to i8*
  %v4_11294 = load i8, i8* %v3_11294, align 1
  %v9_11298 = icmp eq i8 %v4_11294, %v4_11290
  br i1 %v9_11298, label %dec_label_pc_112a4, label %bb

bb:                                               ; preds = %dec_label_pc_11290
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11284

dec_label_pc_112a4:                               ; preds = %dec_label_pc_11290
  %v1_112a4 = add i32 %v1_11290, 1
  store i32 %v1_112a4, i32* @ip, align 4
  %v9_112a8 = icmp eq i32 %v1_112a4, %arg4
  br i1 %v9_112a8, label %dec_label_pc_112b0, label %dec_label_pc_11284

dec_label_pc_112b0:                               ; preds = %dec_label_pc_112a4
  %v1_112b0 = add i32 %v0_112b0, 1
  br label %dec_label_pc_11268

; uselistorder directives
  uselistorder i32 %v1_112a4, { 1, 2, 0 }
  uselistorder i32 %v1_11290, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11284, { 1, 0 }
  uselistorder label %dec_label_pc_11268, { 3, 0, 1, 2 }
}

define i32 @function_112b8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_112b8:
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_112b8 = load i32, i32* @r4, align 4
  %v12_112b8 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_112c8

dec_label_pc_112c8:                               ; preds = %.thread, %dec_label_pc_112dc, %bb, %dec_label_pc_112b8
  %v0_112c8 = phi i32 [ %tmp, %dec_label_pc_112b8 ], [ %v5_112c8, %bb ], [ %v5_112c8, %dec_label_pc_112dc ], [ %v5_112c8, %.thread ]
  %v1_112c8 = inttoptr i32 %v0_112c8 to i8*
  %v2_112c8 = load i8, i8* %v1_112c8, align 1
  %v5_112c8 = add i32 %v0_112c8, 1
  store i32 %v5_112c8, i32* %r5.global-to-local, align 4
  %v7_112cc = icmp eq i8 %v2_112c8, 9
  br i1 %v7_112cc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_112c8
  br label %dec_label_pc_112c8

bb:                                               ; preds = %dec_label_pc_112c8
  %v3_112c8 = zext i8 %v2_112c8 to i32
  %v8_112d0 = icmp eq i8 %v2_112c8, 32
  store i32 %v3_112c8, i32* @r4, align 4
  br i1 %v8_112d0, label %dec_label_pc_112c8, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %bb
  %v7_112dc = icmp eq i8 %v2_112c8, 10
  br i1 %v7_112dc, label %dec_label_pc_112c8, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112dc
  %v7_112e4 = icmp eq i8 %v2_112c8, 45
  br i1 %v7_112e4, label %dec_label_pc_113d4, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112e4
  %v7_112ec = icmp eq i8 %v2_112c8, 43
  br i1 %v7_112ec, label %bb44, label %dec_label_pc_112fc

bb44:                                             ; preds = %dec_label_pc_112ec
  %v2_112f0 = inttoptr i32 %v5_112c8 to i8*
  %v3_112f0 = load i8, i8* %v2_112f0, align 1
  %v4_112f0 = zext i8 %v3_112f0 to i32
  store i32 %v4_112f0, i32* @r4, align 4
  %v6_112f0 = add i32 %v0_112c8, 2
  store i32 %v6_112f0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %bb44, %dec_label_pc_112ec, %dec_label_pc_113d4
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_113d4 ], [ 2147483647, %dec_label_pc_112ec ], [ 2147483647, %bb44 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_113d4 ], [ 0, %dec_label_pc_112ec ], [ 0, %bb44 ]
  store i32 %storemerge1, i32* @r7, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_11304 = call i32 @function_117ec(i32 %storemerge1, i32 %arg2)
  %v0_11308 = load i32, i32* @r7, align 4
  store i32 %v0_11308, i32* @r0, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  %v0_11310 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11310, i32* @r1, align 4
  %v0_11314 = call i32 @function_116f0()
  %v0_11324.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11324.outer

dec_label_pc_11324.outer:                         ; preds = %.thread5, %dec_label_pc_112fc
  %v2_113a0.ph = phi i32 [ %v5_113a0, %.thread5 ], [ 0, %dec_label_pc_112fc ]
  %v1_11364.ph = phi i32 [ %v4_113a4, %.thread5 ], [ %v0_11324.pre, %dec_label_pc_112fc ]
  %v1_1137c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_112fc ]
  %v3_11370 = icmp uge i32 %v2_113a0.ph, %v0_11314
  %v9_11370 = icmp eq i32 %v2_113a0.ph, %v0_11314
  %v2_11374 = xor i1 %v3_11370, true
  %v3_11374 = or i1 %v9_11370, %v2_11374
  %v2_11378 = xor i1 %v9_11370, true
  %v3_11378 = and i1 %v3_11370, %v2_11378
  %v2_11398 = icmp eq i1 %v9_11370, false
  br label %dec_label_pc_11324

dec_label_pc_11324:                               ; preds = %dec_label_pc_11324.outer, %dec_label_pc_113ac
  %v1_1137c = phi i32 [ -1, %dec_label_pc_113ac ], [ %v1_1137c.ph, %dec_label_pc_11324.outer ]
  %v1_11364 = phi i32 [ %v3_113ac, %dec_label_pc_113ac ], [ %v1_11364.ph, %dec_label_pc_11324.outer ]
  %v1_11324 = urem i32 %v1_11364, 256
  %v1_11328 = add nsw i32 %v1_11324, -48
  %v1_11330 = add nsw i32 %v1_11324, -97
  %v1_11334 = add i32 %v1_11364, -48
  %v1_11338 = add nsw i32 %v1_11324, -65
  %tmp75 = icmp ult i32 %v1_11328, 10
  br i1 %tmp75, label %dec_label_pc_11368, label %dec_label_pc_11340

dec_label_pc_11340:                               ; preds = %dec_label_pc_11324
  %v2_11340 = icmp ugt i32 %v1_11338, 24
  %v7_11340 = icmp eq i32 %v1_11338, 25
  %v2_11344 = xor i1 %v7_11340, true
  %v3_11344 = and i1 %v2_11340, %v2_11344
  br i1 %v3_11344, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11340
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11340, %bb45
  %v0_1135814 = phi i32 [ %v1_11334, %dec_label_pc_11340 ], [ 0, %bb45 ]
  %v2_11348 = xor i1 %v2_11340, true
  %v3_11348 = or i1 %v7_11340, %v2_11348
  br i1 %v3_11348, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_11358 = phi i32 [ %v0_1135814, %bb46 ], [ 1, %bb47 ]
  br i1 %v3_11344, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v6_11350 = icmp ugt i32 %v1_11330, 24
  %v11_11350 = icmp eq i32 %v1_11330, 25
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_11354 = phi i1 [ %v7_11340, %bb48 ], [ %v11_11350, %bb49 ]
  %v0_11354 = phi i1 [ %v2_11340, %bb48 ], [ %v6_11350, %bb49 ]
  %v2_11354 = xor i1 %v1_11354, true
  %v3_11354 = and i1 %v0_11354, %v2_11354
  br i1 %v3_11354, label %dec_label_pc_113b8, label %dec_label_pc_11358

dec_label_pc_11358:                               ; preds = %bb50
  %v2_11358 = icmp eq i32 %v0_11358, 0
  %. = select i1 %v2_11358, i32 87, i32 55
  %v2_11364 = sub i32 %v1_11364, %.
  br label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %dec_label_pc_11324, %dec_label_pc_11358
  %v0_1137c29 = phi i32 [ %v1_11338, %dec_label_pc_11324 ], [ %., %dec_label_pc_11358 ]
  %v3_113a0 = phi i32 [ %v1_11334, %dec_label_pc_11324 ], [ %v2_11364, %dec_label_pc_11358 ]
  %v1_11368 = load i32, i32* %r6.global-to-local, align 4
  %v2_11368 = sub i32 %v3_113a0, %v1_11368
  %v4_11368 = xor i32 %v1_11368, %v3_113a0
  %v5_11368 = xor i32 %v2_11368, %v3_113a0
  %v6_11368 = and i32 %v5_11368, %v4_11368
  %v7_11368 = icmp slt i32 %v6_11368, 0
  %v8_11368 = icmp slt i32 %v2_11368, 0
  %v2_1136c = xor i1 %v8_11368, %v7_11368
  br i1 %v2_1136c, label %dec_label_pc_11370, label %dec_label_pc_113b8

dec_label_pc_11370:                               ; preds = %dec_label_pc_11368
  br i1 %v3_11374, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11370
  br label %bb54

bb54:                                             ; preds = %dec_label_pc_11370, %bb53
  %v0_1137c28 = phi i32 [ %v0_1137c29, %dec_label_pc_11370 ], [ 0, %bb53 ]
  br i1 %v3_11378, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  br label %bb56

bb56:                                             ; preds = %bb54, %bb55
  %v0_1137c = phi i32 [ %v0_1137c28, %bb54 ], [ 1, %bb55 ]
  %tmp76 = icmp slt i32 %v1_1137c, 0
  %v4_1137c = zext i1 %tmp76 to i32
  %v5_1137c = or i32 %v0_1137c, %v4_1137c
  %v7_1137c = icmp eq i32 %v5_1137c, 0
  br i1 %v7_1137c, label %dec_label_pc_11384, label %dec_label_pc_113ac

dec_label_pc_11384:                               ; preds = %bb56
  %v1_11390 = load i32, i32* %r8.global-to-local, align 4
  %v2_11390 = sub i32 %v3_113a0, %v1_11390
  %v4_11390 = xor i32 %v1_11390, %v3_113a0
  %v5_11390 = xor i32 %v2_11390, %v3_113a0
  %v6_11390 = and i32 %v5_11390, %v4_11390
  %v7_11390 = icmp slt i32 %v6_11390, 0
  %v8_11390 = icmp slt i32 %v2_11390, 0
  %v9_11390 = icmp eq i32 %v3_113a0, %v1_11390
  %v3_11394 = xor i1 %v8_11390, %v7_11390
  %v4_11394 = or i1 %v9_11390, %v3_11394
  br i1 %v4_11394, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11384
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11384
  br i1 %v2_11398, label %.thread5, label %dec_label_pc_113ac

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_113a0 = mul i32 %v1_11368, %v2_113a0.ph
  %v5_113a0 = add i32 %v4_113a0, %v3_113a0
  %v1_113a4 = load i32, i32* %r5.global-to-local, align 4
  %v2_113a4 = inttoptr i32 %v1_113a4 to i8*
  %v3_113a4 = load i8, i8* %v2_113a4, align 1
  %v4_113a4 = zext i8 %v3_113a4 to i32
  %v6_113a4 = add i32 %v1_113a4, 1
  store i32 %v6_113a4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11324.outer

dec_label_pc_113ac:                               ; preds = %thread-pre-split, %bb56
  %v0_113ac = load i32, i32* %r5.global-to-local, align 4
  %v1_113ac = inttoptr i32 %v0_113ac to i8*
  %v2_113ac = load i8, i8* %v1_113ac, align 1
  %v3_113ac = zext i8 %v2_113ac to i32
  %v5_113ac = add i32 %v0_113ac, 1
  store i32 %v5_113ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11324

dec_label_pc_113b8:                               ; preds = %dec_label_pc_11368, %bb50
  %v1_113b8 = icmp slt i32 %v1_1137c, 0
  %v0_113e4 = load i32, i32* %sl.global-to-local, align 4
  %v2_113e4 = icmp eq i32 %v0_113e4, 0
  br i1 %v1_113b8, label %dec_label_pc_113e4, label %dec_label_pc_113c0

dec_label_pc_113c0:                               ; preds = %dec_label_pc_113b8
  br i1 %v2_113e4, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_113c0
  %v2_113c4 = sub i32 0, %v2_113a0.ph
  br label %bb60

bb60:                                             ; preds = %.thread32, %bb61, %dec_label_pc_113c0, %bb59
  %v1_113d0 = phi i32 [ -2147483648, %bb61 ], [ %v2_113a0.ph, %dec_label_pc_113c0 ], [ %v2_113c4, %bb59 ], [ 2147483647, %.thread32 ]
  store i32 %v3_112b8, i32* @r4, align 4
  store i32 %v12_112b8, i32* @r7, align 4
  ret i32 %v1_113d0

dec_label_pc_113d4:                               ; preds = %dec_label_pc_112e4
  %v1_113d4 = inttoptr i32 %v5_112c8 to i8*
  %v2_113d4 = load i8, i8* %v1_113d4, align 1
  %v3_113d4 = zext i8 %v2_113d4 to i32
  store i32 %v3_113d4, i32* @r4, align 4
  %v5_113d4 = add i32 %v0_112c8, 2
  store i32 %v5_113d4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_112fc

dec_label_pc_113e4:                               ; preds = %dec_label_pc_113b8
  br i1 %v2_113e4, label %.thread32, label %bb61

.thread32:                                        ; preds = %dec_label_pc_113e4
  br label %bb60

bb61:                                             ; preds = %dec_label_pc_113e4
  br label %bb60

; uselistorder directives
  uselistorder i1 %v2_113e4, { 1, 0 }
  uselistorder i32 %v2_11390, { 1, 0 }
  uselistorder i32 %v1_11390, { 1, 0, 2 }
  uselistorder i32 %v2_11368, { 1, 0 }
  uselistorder i32 %v3_113a0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11340, { 1, 2, 0 }
  uselistorder i1 %v2_11340, { 1, 0, 2 }
  uselistorder i32 %v1_11324, { 1, 2, 0 }
  uselistorder i32 %v1_11364, { 1, 2, 0 }
  uselistorder i32 %v1_1137c, { 1, 0 }
  uselistorder i1 %v9_11370, { 1, 0, 2 }
  uselistorder i1 %v3_11370, { 1, 0 }
  uselistorder i32 %v2_113a0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_11314, { 1, 0 }
  uselistorder i32 %v5_112c8, { 3, 4, 5, 2, 1, 0 }
  uselistorder i8 %v2_112c8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_112c8, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 5, 2, 4, 3, 6, 7 }
  uselistorder i32 25, { 8, 9, 0, 5, 1, 6, 2, 7, 4, 3 }
  uselistorder i8 32, { 2, 3, 4, 0, 5, 6, 7, 1 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %bb60, { 1, 0, 3, 2 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %bb54, { 1, 0 }
  uselistorder label %dec_label_pc_11368, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11324, { 1, 0 }
  uselistorder label %dec_label_pc_112fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_112c8, { 1, 2, 0, 3 }
}

define i32 @function_113f4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_113f4:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_113f4 = load i32, i32* @r4, align 4
  store i32 %v3_113f4, i32* %stack_var_-24, align 4
  %v12_113f4 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1140c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_11430.dec_label_pc_1140c_crit_edge, %dec_label_pc_113f4
  %v0_11410 = phi i32 [ %v0_11410.pre, %dec_label_pc_11430.dec_label_pc_1140c_crit_edge ], [ %arg3, %dec_label_pc_113f4 ]
  %v1_11418 = call i32 @function_119ec(i32 %v0_11410)
  %v7_1141c = icmp eq i32 %v1_11418, 1
  %v0_11424 = load i32, i32* %r5.global-to-local, align 4
  br i1 %v7_1141c, label %dec_label_pc_11424, label %dec_label_pc_1143c

dec_label_pc_11424:                               ; preds = %dec_label_pc_1140c
  %v1_11424 = add i32 %v0_11424, 1
  store i32 %v1_11424, i32* %r5.global-to-local, align 4
  %v1_11428 = load i32, i32* %r8.global-to-local, align 4
  %v6_1142c = icmp slt i32 %v1_11424, %v1_11428
  br i1 %v6_1142c, label %dec_label_pc_11430, label %.loopexit

dec_label_pc_11430:                               ; preds = %dec_label_pc_11424
  %v0_11430 = load i32, i32* %r4.global-to-local, align 4
  %v1_11430 = inttoptr i32 %v0_11430 to i8*
  %v2_11430 = load i8, i8* %v1_11430, align 1
  %v5_11430 = add i32 %v0_11430, 1
  store i32 %v5_11430, i32* %r4.global-to-local, align 4
  %v7_11434 = icmp eq i8 %v2_11430, 10
  br i1 %v7_11434, label %dec_label_pc_1143c, label %dec_label_pc_11430.dec_label_pc_1140c_crit_edge

dec_label_pc_11430.dec_label_pc_1140c_crit_edge:  ; preds = %dec_label_pc_11430
  %v0_11410.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1140c

dec_label_pc_1143c:                               ; preds = %dec_label_pc_1140c, %dec_label_pc_11430
  %v0_1143c = phi i32 [ %v1_11424, %dec_label_pc_11430 ], [ %v0_11424, %dec_label_pc_1140c ]
  %v2_1143c = icmp eq i32 %v0_1143c, 0
  br i1 %v2_1143c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_1143c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11424, %dec_label_pc_1143c, %bb
  %v0_11444 = load i32, i32* @r7, align 4
  %v2_11448 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11448, i32* @r4, align 4
  store i32 %v12_113f4, i32* @r7, align 4
  ret i32 %v0_11444

; uselistorder directives
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1143c, { 1, 0 }
}

define i32 @function_11450() local_unnamed_addr {
dec_label_pc_11450:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11460 = call i32 @function_1207c()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11468 = inttoptr i32 %v0_11460 to i32*
  store i32 0, i32* %v2_11468, align 4
  %v0_11474 = load i32, i32* %r4.global-to-local, align 4
  %v3_11478 = call i32 @function_12464(i32 2, i32 2, i32 %v0_11474)
  %v7_1147c = icmp eq i32 %v3_11478, -1
  store i32 %v3_11478, i32* %r5.global-to-local, align 4
  br i1 %v7_1147c, label %bb, label %dec_label_pc_1148c

bb:                                               ; preds = %dec_label_pc_11450
  %v1_11484 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_114d8

dec_label_pc_1148c:                               ; preds = %dec_label_pc_11450
  %v2_11498 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11498, i32* %r4.global-to-local, align 4
  %v0_114a4 = load i32, i32* %r6.global-to-local, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_114b8 = call i32 @function_1224c(i32 %v3_11478, i32 %v2_11498, i32 %v0_114a4)
  %v2_114c0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_114c4 = load i32, i32* %r5.global-to-local, align 4
  %v3_114c8 = call i32 @function_12284(i32 %v0_114c4, i32 %v2_11498, i32 %v2_114c0)
  %v1_114d0 = call i32 @function_11c54(i32 %v0_114c4)
  br label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %bb, %dec_label_pc_1148c
  %storemerge = phi i32 [ 134744072, %dec_label_pc_1148c ], [ %v1_11484, %bb ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_11478, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1224c, { 7, 8, 6, 4, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12464, { 17, 18, 15, 16, 13, 14, 12, 1, 11, 2, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_114d8, { 1, 0 }
}

define i32 @function_114e4(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_114e4:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_114e8 = load i8, i8* %tmp, align 1
  %v2_114ec = icmp eq i8 %v3_114e8, 0
  br i1 %v2_114ec, label %bb, label %dec_label_pc_11500

bb:                                               ; preds = %dec_label_pc_114e4
  %v4_114e8 = zext i8 %v3_114e8 to i32
  br label %dec_label_pc_11514

dec_label_pc_11500:                               ; preds = %dec_label_pc_114e4
  br label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %dec_label_pc_11504, %dec_label_pc_11500
  %v0_11504 = phi i32 [ %v1_11504, %dec_label_pc_11504 ], [ 0, %dec_label_pc_11500 ]
  %v1_11504 = add i32 %v0_11504, 1
  %v2_11508 = add i32 %v1_11504, %arg2
  %v3_11508 = inttoptr i32 %v2_11508 to i8*
  %v4_11508 = load i8, i8* %v3_11508, align 1
  %v2_1150c = icmp eq i8 %v4_11508, 0
  br i1 %v2_1150c, label %dec_label_pc_11514, label %dec_label_pc_11504

dec_label_pc_11514:                               ; preds = %dec_label_pc_11504, %bb
  %v0_1155821 = phi i32 [ %v4_114e8, %bb ], [ %v1_11504, %dec_label_pc_11504 ]
  %v0_1151c2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_1151c2, 1
  br i1 %tmp29, label %dec_label_pc_1156c, label %dec_label_pc_11528

dec_label_pc_11528:                               ; preds = %dec_label_pc_11514, %dec_label_pc_1151c.backedge
  %v0_11520.in = phi i32 [ %v0_11520, %dec_label_pc_1151c.backedge ], [ %v0_1151c2, %dec_label_pc_11514 ]
  %v1_11534 = phi i32 [ %v1_1153415, %dec_label_pc_1151c.backedge ], [ 0, %dec_label_pc_11514 ]
  %v0_11528 = phi i32 [ %v5_11528, %dec_label_pc_1151c.backedge ], [ %tmp23, %dec_label_pc_11514 ]
  %v0_11520 = add i32 %v0_11520.in, -1
  %v1_11528 = inttoptr i32 %v0_11528 to i8*
  %v2_11528 = load i8, i8* %v1_11528, align 1
  %v3_11528 = zext i8 %v2_11528 to i32
  %v5_11528 = add i32 %v0_11528, 1
  %v1_1152c = add nsw i32 %v3_11528, -65
  %v2_11534 = add i32 %v1_11534, %arg2
  %v3_11534 = inttoptr i32 %v2_11534 to i8*
  %v4_11534 = load i8, i8* %v3_11534, align 1
  %v6_11534 = zext i8 %v4_11534 to i32
  %v1_11538 = add nsw i32 %v6_11534, -65
  %tmp38 = icmp ult i32 %v1_1152c, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11528
  %v5_1153c = or i32 %v3_11528, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11528, %bb30
  %v0_11548 = phi i32 [ %v3_11528, %dec_label_pc_11528 ], [ %v5_1153c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11538, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11544 = or i32 %v6_11534, 96
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11548 = phi i32 [ %v6_11534, %bb31 ], [ %v5_11544, %bb32 ]
  %v9_11548 = icmp eq i32 %v0_11548, %v1_11548
  br i1 %v9_11548, label %dec_label_pc_11554, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_1151c.backedge

dec_label_pc_1151c.backedge:                      ; preds = %bb34, %dec_label_pc_11554
  %v1_1153415 = phi i32 [ 0, %bb34 ], [ %v1_11554, %dec_label_pc_11554 ]
  %tmp35 = icmp slt i32 %v0_11520, 1
  br i1 %tmp35, label %dec_label_pc_1156c, label %dec_label_pc_11528

dec_label_pc_11554:                               ; preds = %bb33
  %v1_11554 = add i32 %v1_11534, 1
  %v9_11558 = icmp eq i32 %v0_1155821, %v1_11554
  br i1 %v9_11558, label %dec_label_pc_11560, label %dec_label_pc_1151c.backedge

dec_label_pc_11560:                               ; preds = %dec_label_pc_11554
  %v2_11560 = sub i32 %v5_11528, %tmp23
  br label %dec_label_pc_1156c

dec_label_pc_1156c:                               ; preds = %dec_label_pc_1151c.backedge, %dec_label_pc_11514, %dec_label_pc_11560
  %storemerge = phi i32 [ %v2_11560, %dec_label_pc_11560 ], [ -1, %dec_label_pc_11514 ], [ -1, %dec_label_pc_1151c.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11554, { 1, 0 }
  uselistorder i32 %v0_11528, { 1, 0 }
  uselistorder i32 %v1_11534, { 1, 0 }
  uselistorder i8 %v3_114e8, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_1156c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1151c.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11528, { 1, 0 }
}

define i32 @function_11574(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11574:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11574 = load i8, i8* %arg1, align 1
  %v2_11578 = icmp eq i8 %v2_11574, 0
  br i1 %v2_11578, label %bb, label %dec_label_pc_11584

bb:                                               ; preds = %dec_label_pc_11574
  %v3_11574 = zext i8 %v2_11574 to i32
  br label %dec_label_pc_11598

dec_label_pc_11584:                               ; preds = %dec_label_pc_11574
  br label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %dec_label_pc_11588, %dec_label_pc_11584
  %v0_11588 = phi i32 [ %v1_11588, %dec_label_pc_11588 ], [ 0, %dec_label_pc_11584 ]
  %v1_11588 = add i32 %v0_11588, 1
  %v2_1158c = add i32 %v1_11588, %tmp
  %v3_1158c = inttoptr i32 %v2_1158c to i8*
  %v4_1158c = load i8, i8* %v3_1158c, align 1
  %v2_11590 = icmp eq i8 %v4_1158c, 0
  br i1 %v2_11590, label %dec_label_pc_11598, label %dec_label_pc_11588

dec_label_pc_11598:                               ; preds = %dec_label_pc_11588, %bb
  %v0_115e43 = phi i32 [ %v3_11574, %bb ], [ %v1_11588, %dec_label_pc_11588 ]
  %v1_11598 = inttoptr i32 %arg2 to i8*
  %v2_11598 = load i8, i8* %v1_11598, align 1
  %v3_11598 = zext i8 %v2_11598 to i32
  store i32 %v3_11598, i32* @r3, align 4
  %v2_1159c = icmp eq i8 %v2_11598, 0
  br i1 %v2_1159c, label %bb21, label %dec_label_pc_115a8

bb21:                                             ; preds = %dec_label_pc_11598
  store i32 %v3_11598, i32* @r2, align 4
  br label %dec_label_pc_115bc

dec_label_pc_115a8:                               ; preds = %dec_label_pc_11598
  br label %dec_label_pc_115ac

dec_label_pc_115ac:                               ; preds = %dec_label_pc_115ac, %dec_label_pc_115a8
  %v0_115ac = phi i32 [ %v1_115ac, %dec_label_pc_115ac ], [ 0, %dec_label_pc_115a8 ]
  %v1_115ac = add i32 %v0_115ac, 1
  store i32 %v1_115ac, i32* @r2, align 4
  %v2_115b0 = add i32 %v1_115ac, %arg2
  %v3_115b0 = inttoptr i32 %v2_115b0 to i8*
  %v4_115b0 = load i8, i8* %v3_115b0, align 1
  %v6_115b0 = zext i8 %v4_115b0 to i32
  store i32 %v6_115b0, i32* @r3, align 4
  %v2_115b4 = icmp eq i8 %v4_115b0, 0
  br i1 %v2_115b4, label %dec_label_pc_115bc, label %dec_label_pc_115ac

dec_label_pc_115bc:                               ; preds = %dec_label_pc_115ac, %bb21
  %v1_115bc = phi i32 [ %v3_11598, %bb21 ], [ %v1_115ac, %dec_label_pc_115ac ]
  %v9_115bc = icmp eq i32 %v0_115e43, %v1_115bc
  br i1 %v9_115bc, label %dec_label_pc_115e4.preheader, label %dec_label_pc_115c4

dec_label_pc_115e4.preheader:                     ; preds = %dec_label_pc_115bc
  %v2_115e45 = icmp eq i32 %v0_115e43, 0
  br i1 %v2_115e45, label %dec_label_pc_115ec, label %dec_label_pc_115cc

dec_label_pc_115c4:                               ; preds = %dec_label_pc_115cc, %dec_label_pc_115bc
  ret i32 0

dec_label_pc_115cc:                               ; preds = %dec_label_pc_115dc, %dec_label_pc_115e4.preheader
  %v0_115e4.in = phi i32 [ %v0_115e4, %dec_label_pc_115dc ], [ %v0_115e43, %dec_label_pc_115e4.preheader ]
  %v0_115e0 = phi i32 [ %v1_115e0, %dec_label_pc_115dc ], [ %arg2, %dec_label_pc_115e4.preheader ]
  %v0_115dc = phi i32 [ %v1_115dc, %dec_label_pc_115dc ], [ %tmp, %dec_label_pc_115e4.preheader ]
  %v0_115e4 = add i32 %v0_115e4.in, -1
  %v1_115cc = inttoptr i32 %v0_115dc to i8*
  %v2_115cc = load i8, i8* %v1_115cc, align 1
  %v3_115cc = zext i8 %v2_115cc to i32
  store i32 %v3_115cc, i32* @r2, align 4
  %v1_115d0 = inttoptr i32 %v0_115e0 to i8*
  %v2_115d0 = load i8, i8* %v1_115d0, align 1
  %v3_115d0 = zext i8 %v2_115d0 to i32
  store i32 %v3_115d0, i32* @r3, align 4
  %v9_115d4 = icmp eq i8 %v2_115cc, %v2_115d0
  br i1 %v9_115d4, label %dec_label_pc_115dc, label %dec_label_pc_115c4

dec_label_pc_115dc:                               ; preds = %dec_label_pc_115cc
  %v1_115dc = add i32 %v0_115dc, 1
  %v1_115e0 = add i32 %v0_115e0, 1
  %v2_115e4 = icmp eq i32 %v0_115e4, 0
  br i1 %v2_115e4, label %dec_label_pc_115ec, label %dec_label_pc_115cc

dec_label_pc_115ec:                               ; preds = %dec_label_pc_115dc, %dec_label_pc_115e4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_115ac, { 0, 1, 3, 2 }
  uselistorder i8 %v2_11574, { 1, 0 }
}

define i32 @function_115f4(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_115f4:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v3_115f4 = load i32, i32* @r4, align 4
  %v12_115f4 = load i32, i32* @r7, align 4
  %v0_115f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_115f8, i32* %r8.global-to-local, align 4
  %v2_115f8 = icmp eq i32 %v0_115f8, 0
  store i1 %v2_115f8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_115f8, label %dec_label_pc_116d8, label %dec_label_pc_11608

dec_label_pc_11608:                               ; preds = %dec_label_pc_115f4
  %v3_11608 = icmp eq i8 %arg1, 0
  store i1 %v3_11608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11608, label %.thread, label %dec_label_pc_1161c

.thread:                                          ; preds = %dec_label_pc_11608
  %v4_11610 = inttoptr i32 %v0_115f8 to i8*
  store i8 48, i8* %v4_11610, align 1
  %v0_11614.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11614.pr.pr, label %.thread1, label %dec_label_pc_1161c

.thread1:                                         ; preds = %.thread
  %v4_11614 = load i32, i32* %r8.global-to-local, align 4
  %v5_11614 = add i32 %v4_11614, 1
  %v6_11614 = inttoptr i32 %v5_11614 to i8*
  store i8 0, i8* %v6_11614, align 1
  %v0_11618.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11618.pr.pr, label %dec_label_pc_116d8, label %dec_label_pc_1161c

dec_label_pc_1161c:                               ; preds = %dec_label_pc_11608, %.thread, %.thread1
  %tmp47 = icmp slt i8 %arg1, 0
  %v7_11620 = icmp eq i32 %arg2, 10
  store i1 %v7_11620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11620, label %bb, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_1161c
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_1161c
  %v4_1161c = zext i1 %tmp47 to i32
  store i32 %v4_1161c, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp47, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_116408 = sub nsw i32 0, %tmp
  %tmp.v3_116408 = select i1 %phitmp, i32 %tmp, i32 %v3_116408
  %tmp46 = zext i1 %phitmp to i32
  %. = xor i32 %tmp46, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread28
  %storemerge30 = phi i32 [ %tmp, %.thread28 ], [ %tmp.v3_116408, %bb ]
  %storemerge = phi i32 [ 0, %.thread28 ], [ %., %bb ]
  store i32 %storemerge30, i32* @r4, align 4
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_1164c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_1164c, i32* @r7, align 4
  br label %dec_label_pc_11650

dec_label_pc_11650:                               ; preds = %bb45, %.thread6
  %v0_11650 = phi i32 [ %v0_11674, %bb45 ], [ %storemerge30, %.thread6 ]
  store i32 %v0_11650, i32* %r0.global-to-local, align 4
  %v0_11654 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11654, i32* %r1.global-to-local, align 4
  %sext = mul i32 %v0_11650, 16777216
  %v1_11658 = sdiv i32 %sext, 16777216
  %v3_11658 = call i32 @function_117ec(i32 %v1_11658, i32 %v0_11654)
  %v7_1165c = icmp eq i32 %v0_11654, 9
  store i1 %v7_1165c, i1* %cpsr_z.global-to-local, align 1
  %v1_11660 = add i32 %v0_11654, 48
  %v0_11664 = load i32, i32* @r4, align 4
  store i32 %v0_11664, i32* @r0, align 4
  %v7_11668 = icmp sgt i32 %v0_11654, 9
  %extract.t = trunc i32 %v1_11660 to i8
  br i1 %v7_11668, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_11650
  %v9_11668 = add i32 %v0_11654, 55
  %extract.t27 = trunc i32 %v9_11668 to i8
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_11650, %bb44
  %v0_11670.off0 = phi i8 [ %extract.t, %dec_label_pc_11650 ], [ %extract.t27, %bb44 ]
  %v0_1166c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1166c, i32* @r1, align 4
  %v2_11670 = load i32, i32* %r5.global-to-local, align 4
  %v3_11670 = load i32, i32* @r7, align 4
  %v4_11670 = add i32 %v3_11670, %v2_11670
  %v5_11670 = inttoptr i32 %v4_11670 to i8*
  store i8 %v0_11670.off0, i8* %v5_11670, align 1
  %v0_11674 = call i32 @function_116f0()
  store i32 %v0_11674, i32* %r0.global-to-local, align 4
  store i32 %v0_11674, i32* @r4, align 4
  %v2_11678 = icmp eq i32 %v0_11674, 0
  store i1 %v2_11678, i1* %cpsr_z.global-to-local, align 1
  %v0_1167c = load i32, i32* %r5.global-to-local, align 4
  %v1_1167c = add i32 %v0_1167c, -1
  store i32 %v1_1167c, i32* %r5.global-to-local, align 4
  br i1 %v2_11678, label %dec_label_pc_11684, label %dec_label_pc_11650

dec_label_pc_11684:                               ; preds = %bb45
  %v0_11684 = load i32, i32* %sl.global-to-local, align 4
  %v2_11684 = icmp eq i32 %v0_11684, 0
  store i1 %v2_11684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11684, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11684
  %v3_11688 = ptrtoint i32* %stack_var_-32 to i32
  %v3_1168c = add i32 %v1_1167c, %v3_11688
  store i32 %v3_1168c, i32* %r2.global-to-local, align 4
  %v4_11694 = add i32 %v3_1168c, -34
  %v5_11694 = inttoptr i32 %v4_11694 to i8*
  store i8 45, i8* %v5_11694, align 1
  %v0_11698.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11698.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11698.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11684
  %v1_11698 = phi i32 [ %v1_1167c, %dec_label_pc_11684 ], [ %v1_11698.pre, %.thread11 ]
  %v2_11698 = add i32 %v1_11698, 1
  store i32 %v2_11698, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_116a4 = phi i32 [ %v2_11698, %.thread12 ], [ %v1_11698.pre, %.thread11 ]
  %v0_1169c = load i32, i32* @r7, align 4
  %v2_1169c = add i32 %v0_1169c, %v1_116a4
  %v3_1169c = inttoptr i32 %v2_1169c to i8*
  %v4_1169c = load i8, i8* %v3_1169c, align 1
  %v6_1169c = zext i8 %v4_1169c to i32
  %v2_116a0 = icmp eq i8 %v4_1169c, 0
  store i1 %v2_116a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1169c, i32* %r2.global-to-local, align 4
  br i1 %v2_116a0, label %dec_label_pc_116e8, label %dec_label_pc_116b0.preheader

dec_label_pc_116b0.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_116b0.preheader, %dec_label_pc_116b0
  %v0_116b0 = phi i32 [ 0, %dec_label_pc_116b0.preheader ], [ %v1_116b0, %dec_label_pc_116b0 ]
  %v1_116b0 = add i32 %v0_116b0, 1
  store i32 %v1_116b0, i32* %r1.global-to-local, align 4
  %v2_116b4 = add i32 %v1_116b0, %v2_1169c
  %v3_116b4 = inttoptr i32 %v2_116b4 to i8*
  %v4_116b4 = load i8, i8* %v3_116b4, align 1
  %v2_116b8 = icmp eq i8 %v4_116b4, 0
  store i1 %v2_116b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116b8, label %dec_label_pc_116c0, label %dec_label_pc_116b0

dec_label_pc_116c0:                               ; preds = %dec_label_pc_116b0, %dec_label_pc_116e8
  %v0_116c424 = phi i32 [ %v6_1169c, %dec_label_pc_116e8 ], [ %v1_116b0, %dec_label_pc_116b0 ]
  %v0_116c0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_116c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116c4

dec_label_pc_116c4:                               ; preds = %dec_label_pc_116c4.dec_label_pc_116c4_crit_edge, %dec_label_pc_116c0
  %v2_116d0 = phi i32 [ %v5_116d0, %dec_label_pc_116c4.dec_label_pc_116c4_crit_edge ], [ %v0_116c0, %dec_label_pc_116c0 ]
  %v0_116c8 = phi i32 [ %v0_116c8.pre, %dec_label_pc_116c4.dec_label_pc_116c4_crit_edge ], [ %v2_1169c, %dec_label_pc_116c0 ]
  %v0_116c4 = phi i32 [ %v0_116c4.pre, %dec_label_pc_116c4.dec_label_pc_116c4_crit_edge ], [ %v0_116c424, %dec_label_pc_116c0 ]
  %v1_116c4 = add i32 %v0_116c4, -1
  store i32 %v1_116c4, i32* %r1.global-to-local, align 4
  %v1_116c8 = inttoptr i32 %v0_116c8 to i8*
  %v2_116c8 = load i8, i8* %v1_116c8, align 1
  %v5_116c8 = add i32 %v0_116c8, 1
  store i32 %v5_116c8, i32* %r2.global-to-local, align 4
  %v3_116cc = icmp eq i32 %v0_116c4, 0
  store i1 %v3_116cc, i1* %cpsr_z.global-to-local, align 1
  %v3_116d0 = inttoptr i32 %v2_116d0 to i8*
  store i8 %v2_116c8, i8* %v3_116d0, align 1
  %v4_116d0 = load i32, i32* %r0.global-to-local, align 4
  %v5_116d0 = add i32 %v4_116d0, 1
  store i32 %v5_116d0, i32* %r0.global-to-local, align 4
  br i1 %v3_116cc, label %dec_label_pc_116d8, label %dec_label_pc_116c4.dec_label_pc_116c4_crit_edge

dec_label_pc_116c4.dec_label_pc_116c4_crit_edge:  ; preds = %dec_label_pc_116c4
  %v0_116c4.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_116c8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_116c4

dec_label_pc_116d8:                               ; preds = %dec_label_pc_116c4, %.thread1, %dec_label_pc_115f4
  %v0_116d8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_116d8, i32* %r0.global-to-local, align 4
  store i32 %v3_115f4, i32* @r4, align 4
  store i32 %v12_115f4, i32* @r7, align 4
  ret i32 %v0_116d8

dec_label_pc_116e8:                               ; preds = %.thread11._crit_edge
  store i32 %v6_1169c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_116c0

; uselistorder directives
  uselistorder i32 %v5_116d0, { 1, 0 }
  uselistorder i1 %v3_116cc, { 1, 0 }
  uselistorder i32 %v0_116c8, { 1, 0 }
  uselistorder i32 %v1_116b0, { 0, 1, 3, 2 }
  uselistorder i32 %v6_1169c, { 1, 0 }
  uselistorder i32 %v2_1169c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11698.pre, { 1, 0 }
  uselistorder i32 %v1_1167c, { 1, 0, 2 }
  uselistorder i32 %v0_11674, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11654, { 1, 0, 2, 3, 4, 5 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_115f8, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 8, 10, 9, 11, 12 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_116c0, { 1, 0 }
  uselistorder label %dec_label_pc_116b0, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1161c, { 2, 1, 0 }
}

define i32 @function_116f0() local_unnamed_addr {
dec_label_pc_116f0:
  %r2.global-to-local = alloca i32, align 4
  %v0_116f0 = load i32, i32* @r1, align 4
  %v1_116f0 = add i32 %v0_116f0, -1
  store i32 %v1_116f0, i32* %r2.global-to-local, align 4
  %v2_116f0 = icmp eq i32 %v0_116f0, 0
  %v7_116f0 = icmp eq i32 %v0_116f0, 1
  %v0_116f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_116f0, i32 %v0_116f4)
  br i1 %v2_116f0, label %dec_label_pc_117d8, label %dec_label_pc_116fc

dec_label_pc_116fc:                               ; preds = %dec_label_pc_116f0
  %v0_116fc = load i32, i32* @r0, align 4
  %v1_116fc = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_116fc, %v1_116fc
  br i1 %tmp, label %dec_label_pc_11704, label %dec_label_pc_11790

dec_label_pc_11704:                               ; preds = %dec_label_pc_116fc
  %v1_11704 = load i32, i32* %r2.global-to-local, align 4
  %v2_11704 = and i32 %v1_11704, %v1_116fc
  %v4_11704 = icmp eq i32 %v2_11704, 0
  br i1 %v4_11704, label %dec_label_pc_1179c, label %dec_label_pc_1170c

dec_label_pc_1170c:                               ; preds = %dec_label_pc_11704
  %v3_1170c = icmp ult i32 %v1_116fc, 536870912
  br i1 %v3_1170c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1170c
  %v4_11710 = mul i32 %v1_116fc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1170c, %.thread
  %v0_11730.pr36.ph = phi i32 [ %v4_11710, %.thread ], [ %v1_116fc, %dec_label_pc_1170c ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1170c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11730.pr36 = phi i32 [ %v4_11724, %bb81 ], [ %v0_11730.pr36.ph, %.preheader.preheader ]
  %v1_11728 = phi i32 [ %v4_11728, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_1171c = icmp ugt i32 %v0_11730.pr36, 268435455
  br i1 %v2_1171c, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11730thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11720 = icmp ult i32 %v0_11730.pr36, %v0_116fc
  br i1 %v4_11720, label %bb80, label %dec_label_pc_11730thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11724 = and i32 %v0_11730.pr36, 268435456
  %v3_11724 = icmp eq i32 %v2_11724, 0
  %v4_11724 = mul i32 %v0_11730.pr36, 16
  br i1 %v3_11724, label %bb81, label %dec_label_pc_11730.loopexit

bb81:                                             ; preds = %bb80
  %v2_11728 = and i32 %v1_11728, 268435456
  %v3_11728 = icmp eq i32 %v2_11728, 0
  %v4_11728 = mul i32 %v1_11728, 16
  br i1 %v3_11728, label %.preheader, label %dec_label_pc_11730thread-pre-split.loopexit.loopexit

dec_label_pc_11730thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1173c48.ph = phi i32 [ %v1_11728, %bb ], [ %v4_11728, %bb81 ]
  %v0_11730.pr38.ph = phi i32 [ %v0_11730.pr36, %bb ], [ %v4_11724, %bb81 ]
  br label %dec_label_pc_11730thread-pre-split.loopexit

dec_label_pc_11730thread-pre-split.loopexit:      ; preds = %dec_label_pc_11730thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1173c48 = phi i32 [ %v1_11728, %.thread2 ], [ %v1_1173c48.ph, %dec_label_pc_11730thread-pre-split.loopexit.loopexit ]
  %v0_11730.pr38 = phi i32 [ %v0_11730.pr36, %.thread2 ], [ %v0_11730.pr38.ph, %dec_label_pc_11730thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11730thread-pre-split

dec_label_pc_11730thread-pre-split:               ; preds = %dec_label_pc_11730thread-pre-split.loopexit, %bb83
  %v1_1173c46 = phi i32 [ %v1_1173c48, %dec_label_pc_11730thread-pre-split.loopexit ], [ %v3_1173c, %bb83 ]
  %v0_11730.pr = phi i32 [ %v0_11730.pr38, %dec_label_pc_11730thread-pre-split.loopexit ], [ %v3_11738, %bb83 ]
  br label %dec_label_pc_11730

dec_label_pc_11730.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11730

dec_label_pc_11730:                               ; preds = %dec_label_pc_11730.loopexit, %dec_label_pc_11730thread-pre-split
  %v1_1173c = phi i32 [ %v1_1173c46, %dec_label_pc_11730thread-pre-split ], [ %v1_11728, %dec_label_pc_11730.loopexit ]
  %v1_11738 = phi i32 [ %v0_11730.pr, %dec_label_pc_11730thread-pre-split ], [ %v4_11724, %dec_label_pc_11730.loopexit ]
  %v2_11730 = icmp slt i32 %v1_11738, 0
  br i1 %v2_11730, label %dec_label_pc_11744, label %bb82

bb82:                                             ; preds = %dec_label_pc_11730
  %v4_11734 = icmp ult i32 %v1_11738, %v0_116fc
  br i1 %v4_11734, label %bb83, label %dec_label_pc_11744

bb83:                                             ; preds = %bb82
  %v3_11738 = mul i32 %v1_11738, 2
  %v2_1173c = icmp slt i32 %v1_1173c, 0
  %v3_1173c = mul i32 %v1_1173c, 2
  br i1 %v2_1173c, label %dec_label_pc_11744, label %dec_label_pc_11730thread-pre-split

dec_label_pc_11744:                               ; preds = %bb82, %dec_label_pc_11730, %bb83
  %v2_1175059 = phi i32 [ %v3_1173c, %bb83 ], [ %v1_1173c, %bb82 ], [ %v1_1173c, %dec_label_pc_11730 ]
  %v1_1174851 = phi i32 [ %v3_11738, %bb83 ], [ %v1_11738, %bb82 ], [ %v1_11738, %dec_label_pc_11730 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %.thread11, %dec_label_pc_11744
  %v1_1177c = phi i32 [ %v4_1177c, %.thread11 ], [ %v2_1175059, %dec_label_pc_11744 ]
  %v1_11750 = phi i32 [ %v0_11788, %.thread11 ], [ 0, %dec_label_pc_11744 ]
  %v1_11780 = phi i32 [ %v4_11780, %.thread11 ], [ %v1_1174851, %dec_label_pc_11744 ]
  %v1_1174c = phi i32 [ %v0_11778, %.thread11 ], [ %v0_116fc, %dec_label_pc_11744 ]
  %v3_11748 = icmp ult i32 %v1_1174c, %v1_11780
  br i1 %v3_11748, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11748
  %v3_1174c = sub i32 %v1_1174c, %v1_11780
  %v3_11750 = or i32 %v1_11750, %v1_1177c
  store i32 %v3_11750, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11748, %bb84
  %v1_11758 = phi i32 [ %v1_1174c, %dec_label_pc_11748 ], [ %v3_1174c, %bb84 ]
  %v1_1175c = phi i32 [ %v1_11750, %dec_label_pc_11748 ], [ %v3_11750, %bb84 ]
  %v4_11754 = udiv i32 %v1_11780, 2
  %v6_11754 = icmp ult i32 %v1_11758, %v4_11754
  br i1 %v6_11754, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11758 = urem i32 %v1_11780, 2
  %v4_11758 = icmp eq i32 %v3_11758, 0
  %v6_11758 = sub i32 %v1_11758, %v4_11754
  br i1 %v4_11758, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_1175c = udiv i32 %v1_1177c, 2
  %v6_1175c = or i32 %v1_1175c, %v5_1175c
  store i32 %v6_1175c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11764 = phi i32 [ %v6_11758, %bb85 ], [ %v1_11758, %.thread7 ], [ %v6_11758, %bb86 ]
  %v1_11768 = phi i32 [ %v1_1175c, %bb85 ], [ %v1_1175c, %.thread7 ], [ %v6_1175c, %bb86 ]
  %v4_11760 = udiv i32 %v1_11780, 4
  %v6_11760 = icmp ult i32 %v1_11764, %v4_11760
  br i1 %v6_11760, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11764 = and i32 %v1_11780, 2
  %v4_11764 = icmp eq i32 %v3_11764, 0
  %v6_11764 = sub i32 %v1_11764, %v4_11760
  br i1 %v4_11764, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11768 = udiv i32 %v1_1177c, 4
  %v6_11768 = or i32 %v1_11768, %v5_11768
  store i32 %v6_11768, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11770 = phi i32 [ %v6_11764, %bb87 ], [ %v1_11764, %.thread8 ], [ %v6_11764, %bb88 ]
  %v1_11774 = phi i32 [ %v1_11768, %bb87 ], [ %v1_11768, %.thread8 ], [ %v6_11768, %bb88 ]
  %v4_1176c = udiv i32 %v1_11780, 8
  %v6_1176c = icmp ult i32 %v1_11770, %v4_1176c
  br i1 %v6_1176c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11770 = and i32 %v1_11780, 4
  %v4_11770 = icmp eq i32 %v3_11770, 0
  %v6_11770 = sub i32 %v1_11770, %v4_1176c
  br i1 %v4_11770, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11774 = udiv i32 %v1_1177c, 8
  %v6_11774 = or i32 %v1_11774, %v5_11774
  store i32 %v6_11774, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11788 = phi i32 [ %v1_11774, %bb89 ], [ %v1_11774, %.thread9 ], [ %v6_11774, %bb90 ]
  %v0_11778 = phi i32 [ %v6_11770, %bb89 ], [ %v1_11770, %.thread9 ], [ %v6_11770, %bb90 ]
  %v2_11778 = icmp eq i32 %v0_11778, 0
  br i1 %v2_11778, label %dec_label_pc_11788, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_1177c, 16
  br i1 %tmp138, label %dec_label_pc_11788, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_1177c = udiv i32 %v1_1177c, 16
  %v4_11780 = udiv i32 %v1_11780, 16
  br label %dec_label_pc_11748

dec_label_pc_11788:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_11788

dec_label_pc_11790:                               ; preds = %dec_label_pc_116fc
  %v9_116fc = icmp eq i32 %v0_116fc, %v1_116fc
  %. = zext i1 %v9_116fc to i32
  ret i32 %.

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11704
  %v2_1179c = icmp ugt i32 %v1_116fc, 65535
  br i1 %v2_1179c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_1179c
  %v2_117a0 = and i32 %v1_116fc, 32768
  %v3_117a0 = icmp eq i32 %v2_117a0, 0
  %v4_117a0 = udiv i32 %v1_116fc, 65536
  br i1 %v3_117a0, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_1179c
  %v0_117ac65 = phi i32 [ %v1_116fc, %dec_label_pc_1179c ], [ %v4_117a0, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_117b0 = phi i32 [ %v0_117ac65, %.thread16 ], [ %v4_117a0, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_117ac = icmp ugt i32 %v1_117b0, 255
  br i1 %v2_117ac, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_117b0 = and i32 %v1_117b0, 128
  %v3_117b0 = icmp eq i32 %v2_117b0, 0
  %v4_117b0 = udiv i32 %v1_117b0, 256
  br i1 %v3_117b0, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_117b4 = or i32 %storemerge, 8
  store i32 %v2_117b4, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_117c0 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_117b4, %bb98 ]
  %v1_117bc = phi i32 [ %v1_117b0, %bb96 ], [ %v4_117b0, %bb97 ], [ %v4_117b0, %bb98 ]
  %v2_117b8 = icmp ugt i32 %v1_117bc, 15
  br i1 %v2_117b8, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_117bc = and i32 %v1_117bc, 8
  %v3_117bc = icmp eq i32 %v2_117bc, 0
  %v4_117bc = udiv i32 %v1_117bc, 16
  br i1 %v3_117bc, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_117c0 = add nsw i32 %v1_117c0, 4
  store i32 %v2_117c0, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_117c8 = phi i32 [ %v1_117c0, %.thread17 ], [ %v1_117c0, %bb99 ], [ %v2_117c0, %bb100 ]
  %v5_117cc = phi i32 [ %v1_117bc, %.thread17 ], [ %v4_117bc, %bb99 ], [ %v4_117bc, %bb100 ]
  %v2_117c4 = icmp ugt i32 %v5_117cc, 3
  %v7_117c4 = icmp eq i32 %v5_117cc, 4
  %v2_117c8 = xor i1 %v7_117c4, true
  %v3_117c8 = and i1 %v2_117c4, %v2_117c8
  br i1 %v3_117c8, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_117c8 = add nsw i32 %v4_117c8, 3
  store i32 %v5_117c8, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_117cc = phi i32 [ %v4_117c8, %.thread18 ], [ %v5_117c8, %bb101 ]
  %v2_117cc = xor i1 %v2_117c4, true
  %v3_117cc = or i1 %v7_117c4, %v2_117cc
  br i1 %v3_117cc, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_117cc = udiv i32 %v5_117cc, 2
  %v9_117cc = add i32 %v4_117cc, %v8_117cc
  store i32 %v9_117cc, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_117d0 = phi i32 [ %v4_117cc, %bb102 ], [ %v9_117cc, %bb103 ]
  %v6_117d0 = lshr i32 %v0_116fc, %v1_117d0
  ret i32 %v6_117d0

dec_label_pc_117d8:                               ; preds = %dec_label_pc_116f0
  %v0_117d8 = load i32, i32* @lr, align 4
  %v0_117dc = call i32 @function_11804()
  store i32 %v0_117d8, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_117cc, { 1, 0 }
  uselistorder i1 %v7_117c4, { 1, 0 }
  uselistorder i32 %v4_117bc, { 1, 0 }
  uselistorder i32 %v1_117bc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_117b4, { 1, 0 }
  uselistorder i32 %v4_117b0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_117b0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_117a0, { 1, 0 }
  uselistorder i32 %v0_11778, { 1, 0 }
  uselistorder i32 %v4_1176c, { 1, 0 }
  uselistorder i32 %v1_11774, { 1, 2, 0 }
  uselistorder i32 %v4_11760, { 1, 0 }
  uselistorder i32 %v1_11768, { 1, 2, 0 }
  uselistorder i32 %v4_11754, { 1, 0 }
  uselistorder i32 %v1_1175c, { 1, 2, 0 }
  uselistorder i32 %v1_11780, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11750, { 1, 0 }
  uselistorder i32 %v1_1177c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1173c, { 1, 0 }
  uselistorder i32 %v3_11738, { 1, 0 }
  uselistorder i32 %v1_11738, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1173c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11728, { 1, 0 }
  uselistorder i32 %v4_11724, { 2, 1, 0 }
  uselistorder i32 %v1_11728, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11730.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_116fc, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_116fc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_116f0, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 65535, { 90, 0, 1, 12, 11, 2, 3, 42, 43, 22, 44, 21, 45, 14, 13, 4, 24, 46, 23, 47, 49, 15, 48, 5, 50, 51, 26, 52, 25, 53, 54, 55, 56, 27, 57, 58, 16, 59, 6, 30, 60, 61, 62, 29, 63, 28, 64, 66, 17, 65, 7, 67, 68, 34, 69, 31, 70, 32, 71, 33, 72, 18, 73, 74, 35, 75, 36, 76, 79, 80, 19, 77, 78, 8, 39, 81, 37, 82, 38, 83, 85, 20, 84, 9, 10, 86, 87, 41, 88, 40, 89 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11788, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11744, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11730thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_117ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117ec:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_117f0 = call i32 @function_116f0()
  ret i32 %v0_117f0
}

define i32 @function_11804() local_unnamed_addr {
dec_label_pc_11804:
  %v1_1180c = call i32 @function_1249c(i32 8)
  ret i32 %v1_1180c
}

define i32 @function_11818() local_unnamed_addr {
dec_label_pc_11818:
  %v1_11828 = load i32, i32* @r0, align 4
  ret i32 %v1_11828
}

define i32 @function_1182c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1182c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1182c = load i32, i32* @r7, align 4
  store i32 %v3_1182c, i32* %stack_var_-8, align 4
  %v0_11838 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11838, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11838, -4095
  br i1 %tmp, label %dec_label_pc_11858, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_1182c
  %v0_11848 = call i32 @function_1207c()
  %v0_1184c = load i32, i32* %r7.global-to-local, align 4
  %v1_1184c = sub i32 0, %v0_1184c
  %v2_11850 = inttoptr i32 %v0_11848 to i32*
  store i32 %v1_1184c, i32* %v2_11850, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11858.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11858

dec_label_pc_11858:                               ; preds = %dec_label_pc_1182c, %dec_label_pc_11848
  %v1_1185c = phi i32 [ %v0_11838, %dec_label_pc_1182c ], [ -1, %dec_label_pc_11848 ]
  %v2_11858 = phi i32 [ %v3_1182c, %dec_label_pc_1182c ], [ %v2_11858.pre, %dec_label_pc_11848 ]
  store i32 %v2_11858, i32* @r7, align 4
  ret i32 %v1_1185c

; uselistorder directives
  uselistorder i32 %v0_11838, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11858, { 1, 0 }
}

define i32 @function_11860(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11860:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_11860 = load i32, i32* @r2, align 4
  %v9_11860 = load i32, i32* @r3, align 4
  store i32 %v9_11860, i32* %stack_var_-4, align 4
  %v1_11870 = and i32 %arg2, 64
  %v2_11870 = icmp eq i32 %v1_11870, 0
  br i1 %v2_11870, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11860
  %v3_11878 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_11878, i32* @r3, align 4
  %phitmp = urem i32 %v6_11860, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11860, %bb
  %v0_1187c = phi i32 [ 0, %dec_label_pc_11860 ], [ %phitmp, %bb ]
  store i32 %v0_1187c, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_118ac, label %dec_label_pc_1189c

dec_label_pc_1189c:                               ; preds = %.thread
  %v0_1189c = call i32 @function_1207c()
  %v0_118a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_118a0 = sub i32 0, %v0_118a0
  store i32 %v1_118a0, i32* @r3, align 4
  %v2_118a4 = inttoptr i32 %v0_1189c to i32*
  store i32 %v1_118a0, i32* %v2_118a4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_118ac

dec_label_pc_118ac:                               ; preds = %.thread, %dec_label_pc_1189c
  %v0_118ac = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_1189c ]
  ret i32 %v0_118ac

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_118ac, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_118c0() local_unnamed_addr {
dec_label_pc_118c0:
  %v1_118d0 = load i32, i32* @r0, align 4
  ret i32 %v1_118d0
}

define i32 @function_118d4(i32* %arg1) local_unnamed_addr {
dec_label_pc_118d4:
  %stack_var_-16 = alloca i32, align 4
  %v2_118d8 = ptrtoint i32* %stack_var_-16 to i32
  %v2_118e8 = call i32 @function_11a54(i32 %v2_118d8, i32 0)
  %v2_118ec = load i32, i32* %stack_var_-16, align 4
  %v2_118f0 = icmp eq i32* %arg1, null
  br i1 %v2_118f0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_118d4
  store i32 %v2_118ec, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_118d4, %bb
  ret i32 %v2_118ec

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_11904(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_11904:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11938, label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %dec_label_pc_11904
  %v0_11928 = call i32 @function_1207c()
  %v0_1192c = load i32, i32* %r4.global-to-local, align 4
  %v1_1192c = sub i32 0, %v0_1192c
  %v2_11930 = inttoptr i32 %v0_11928 to i32*
  store i32 %v1_1192c, i32* %v2_11930, align 4
  br label %dec_label_pc_11938

dec_label_pc_11938:                               ; preds = %dec_label_pc_11904, %dec_label_pc_11928
  %v1_11940 = phi i32 [ %arg1, %dec_label_pc_11904 ], [ -1, %dec_label_pc_11928 ]
  ret i32 %v1_11940

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11938, { 1, 0 }
}

define i32 @function_11944() local_unnamed_addr {
dec_label_pc_11944:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11944 = load i32, i32* @r7, align 4
  store i32 %v3_11944, i32* %stack_var_-8, align 4
  %v0_11950 = load i32, i32* @r0, align 4
  store i32 %v0_11950, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11950, -4095
  br i1 %tmp, label %dec_label_pc_11970, label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %dec_label_pc_11944
  %v0_11960 = call i32 @function_1207c()
  %v0_11964 = load i32, i32* %r7.global-to-local, align 4
  %v1_11964 = sub i32 0, %v0_11964
  %v2_11968 = inttoptr i32 %v0_11960 to i32*
  store i32 %v1_11964, i32* %v2_11968, align 4
  %v2_11970.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11970

dec_label_pc_11970:                               ; preds = %dec_label_pc_11944, %dec_label_pc_11960
  %v1_11974 = phi i32 [ %v0_11950, %dec_label_pc_11944 ], [ -1, %dec_label_pc_11960 ]
  %v2_11970 = phi i32 [ %v3_11944, %dec_label_pc_11944 ], [ %v2_11970.pre, %dec_label_pc_11960 ]
  store i32 %v2_11970, i32* @r7, align 4
  ret i32 %v1_11974

; uselistorder directives
  uselistorder i32 %v0_11950, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11970, { 1, 0 }
}

define i32 @function_11978(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11978:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_119a8, label %dec_label_pc_11998

dec_label_pc_11998:                               ; preds = %dec_label_pc_11978
  %v0_11998 = call i32 @function_1207c()
  %v0_1199c = load i32, i32* %r4.global-to-local, align 4
  %v1_1199c = sub i32 0, %v0_1199c
  %v2_119a0 = inttoptr i32 %v0_11998 to i32*
  store i32 %v1_1199c, i32* %v2_119a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_11978, %dec_label_pc_11998
  %v0_119a8 = phi i32 [ %arg1, %dec_label_pc_11978 ], [ -1, %dec_label_pc_11998 ]
  ret i32 %v0_119a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_119a8, { 1, 0 }
}

define i32 @function_119b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_119b8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_119b8 = load i32, i32* @r7, align 4
  store i32 %v3_119b8, i32* %stack_var_-8, align 4
  %v0_119c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_119c4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_119c4, -4095
  br i1 %tmp, label %dec_label_pc_119e4, label %dec_label_pc_119d4

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119b8
  %v0_119d4 = call i32 @function_1207c()
  %v0_119d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_119d8 = sub i32 0, %v0_119d8
  store i32 %v1_119d8, i32* @r3, align 4
  %v2_119dc = inttoptr i32 %v0_119d4 to i32*
  store i32 %v1_119d8, i32* %v2_119dc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_119e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_119e4

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119b8, %dec_label_pc_119d4
  %v1_119e8 = phi i32 [ %v0_119c4, %dec_label_pc_119b8 ], [ -1, %dec_label_pc_119d4 ]
  %v2_119e4 = phi i32 [ %v3_119b8, %dec_label_pc_119b8 ], [ %v2_119e4.pre, %dec_label_pc_119d4 ]
  store i32 %v2_119e4, i32* @r7, align 4
  ret i32 %v1_119e8

; uselistorder directives
  uselistorder i32 %v0_119c4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119e4, { 1, 0 }
}

define i32 @function_119ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_119ec:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_119ec = load i32, i32* @r7, align 4
  store i32 %v3_119ec, i32* %stack_var_-8, align 4
  %v0_119f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_119f8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_119f8, -4095
  br i1 %tmp, label %dec_label_pc_11a18, label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_119ec
  %v0_11a08 = call i32 @function_1207c()
  %v0_11a0c = load i32, i32* %r7.global-to-local, align 4
  %v1_11a0c = sub i32 0, %v0_11a0c
  %v2_11a10 = inttoptr i32 %v0_11a08 to i32*
  store i32 %v1_11a0c, i32* %v2_11a10, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11a18.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_119ec, %dec_label_pc_11a08
  %v1_11a1c = phi i32 [ %v0_119f8, %dec_label_pc_119ec ], [ -1, %dec_label_pc_11a08 ]
  %v2_11a18 = phi i32 [ %v3_119ec, %dec_label_pc_119ec ], [ %v2_11a18.pre, %dec_label_pc_11a08 ]
  store i32 %v2_11a18, i32* @r7, align 4
  ret i32 %v1_11a1c

; uselistorder directives
  uselistorder i32 %v0_119f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
}

define i32 @function_11a20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a20:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11a20 = load i32, i32* @r7, align 4
  store i32 %v3_11a20, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11a48, label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a20
  %v0_11a38 = call i32 @function_1207c()
  %v0_11a3c = load i32, i32* %r7.global-to-local, align 4
  %v1_11a3c = sub i32 0, %v0_11a3c
  %v2_11a40 = inttoptr i32 %v0_11a38 to i32*
  store i32 %v1_11a3c, i32* %v2_11a40, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11a4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11a48

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a20, %dec_label_pc_11a38
  %v2_11a4c = phi i32 [ %v3_11a20, %dec_label_pc_11a20 ], [ %v2_11a4c.pre, %dec_label_pc_11a38 ]
  %v0_11a48 = phi i32 [ %arg1, %dec_label_pc_11a20 ], [ -1, %dec_label_pc_11a38 ]
  store i32 %v2_11a4c, i32* @r7, align 4
  ret i32 %v0_11a48

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11a48, { 1, 0 }
}

define i32 @function_11a54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a54:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11a54 = load i32, i32* @r7, align 4
  store i32 %v3_11a54, i32* %stack_var_-8, align 4
  %v0_11a60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11a60, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11a60, -4095
  br i1 %tmp, label %dec_label_pc_11a80, label %dec_label_pc_11a70

dec_label_pc_11a70:                               ; preds = %dec_label_pc_11a54
  %v0_11a70 = call i32 @function_1207c()
  %v0_11a74 = load i32, i32* %r7.global-to-local, align 4
  %v1_11a74 = sub i32 0, %v0_11a74
  store i32 %v1_11a74, i32* @r3, align 4
  %v2_11a78 = inttoptr i32 %v0_11a70 to i32*
  store i32 %v1_11a74, i32* %v2_11a78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11a80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11a80

dec_label_pc_11a80:                               ; preds = %dec_label_pc_11a54, %dec_label_pc_11a70
  %v1_11a84 = phi i32 [ %v0_11a60, %dec_label_pc_11a54 ], [ -1, %dec_label_pc_11a70 ]
  %v2_11a80 = phi i32 [ %v3_11a54, %dec_label_pc_11a54 ], [ %v2_11a80.pre, %dec_label_pc_11a70 ]
  store i32 %v2_11a80, i32* @r7, align 4
  ret i32 %v1_11a84

; uselistorder directives
  uselistorder i32 %v0_11a60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11a80, { 1, 0 }
}

define i32 @function_11a88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a88:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_11a88 = load i32, i32* @r3, align 4
  store i32 %v9_11a88, i32* %stack_var_-4, align 4
  %v2_11aa0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11aa0, i32* @r3, align 4
  %v0_11ac4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ac4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ac4, -4095
  br i1 %tmp, label %dec_label_pc_11ae4, label %dec_label_pc_11ad4

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_11a88
  %v0_11ad4 = call i32 @function_1207c()
  %v0_11ad8 = load i32, i32* %r7.global-to-local, align 4
  %v1_11ad8 = sub i32 0, %v0_11ad8
  store i32 %v1_11ad8, i32* @r3, align 4
  %v2_11adc = inttoptr i32 %v0_11ad4 to i32*
  store i32 %v1_11ad8, i32* %v2_11adc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11a88, %dec_label_pc_11ad4
  %v1_11af0 = phi i32 [ %v0_11ac4, %dec_label_pc_11a88 ], [ -1, %dec_label_pc_11ad4 ]
  ret i32 %v1_11af0

; uselistorder directives
  uselistorder i32 %v0_11ac4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ae4, { 1, 0 }
}

define i32 @function_11af4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11af4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11b30 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b30, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11b30, -4095
  br i1 %tmp, label %dec_label_pc_11b50, label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11af4
  %v0_11b40 = call i32 @function_1207c()
  %v0_11b44 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b44 = sub i32 0, %v0_11b44
  %v2_11b48 = inttoptr i32 %v0_11b40 to i32*
  store i32 %v1_11b44, i32* %v2_11b48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b50

dec_label_pc_11b50:                               ; preds = %dec_label_pc_11af4, %dec_label_pc_11b40
  %v1_11b5c = phi i32 [ %v0_11b30, %dec_label_pc_11af4 ], [ -1, %dec_label_pc_11b40 ]
  ret i32 %v1_11b5c

; uselistorder directives
  uselistorder i32 %v0_11b30, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b50, { 1, 0 }
}

define i32 @function_11b60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11b60:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b60 = load i32, i32* @r7, align 4
  store i32 %v3_11b60, i32* %stack_var_-8, align 4
  %v0_11b6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11b6c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11b6c, -4095
  br i1 %tmp, label %dec_label_pc_11b8c, label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %dec_label_pc_11b60
  %v0_11b7c = call i32 @function_1207c()
  %v0_11b80 = load i32, i32* %r7.global-to-local, align 4
  %v1_11b80 = sub i32 0, %v0_11b80
  %v2_11b84 = inttoptr i32 %v0_11b7c to i32*
  store i32 %v1_11b80, i32* %v2_11b84, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11b8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11b8c

dec_label_pc_11b8c:                               ; preds = %dec_label_pc_11b60, %dec_label_pc_11b7c
  %v1_11b90 = phi i32 [ %v0_11b6c, %dec_label_pc_11b60 ], [ -1, %dec_label_pc_11b7c ]
  %v2_11b8c = phi i32 [ %v3_11b60, %dec_label_pc_11b60 ], [ %v2_11b8c.pre, %dec_label_pc_11b7c ]
  store i32 %v2_11b8c, i32* @r7, align 4
  ret i32 %v1_11b90

; uselistorder directives
  uselistorder i32 %v0_11b6c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11b8c, { 1, 0 }
}

define i32 @function_11b94(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b94:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11b94 = load i32, i32* @r7, align 4
  store i32 %v3_11b94, i32* %stack_var_-8, align 4
  %v0_11ba0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ba0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ba0, -4095
  br i1 %tmp, label %dec_label_pc_11bc0, label %dec_label_pc_11bb0

dec_label_pc_11bb0:                               ; preds = %dec_label_pc_11b94
  %v0_11bb0 = call i32 @function_1207c()
  %v0_11bb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11bb4 = sub i32 0, %v0_11bb4
  %v2_11bb8 = inttoptr i32 %v0_11bb0 to i32*
  store i32 %v1_11bb4, i32* %v2_11bb8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11bc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11bc0

dec_label_pc_11bc0:                               ; preds = %dec_label_pc_11b94, %dec_label_pc_11bb0
  %v1_11bc4 = phi i32 [ %v0_11ba0, %dec_label_pc_11b94 ], [ -1, %dec_label_pc_11bb0 ]
  %v2_11bc0 = phi i32 [ %v3_11b94, %dec_label_pc_11b94 ], [ %v2_11bc0.pre, %dec_label_pc_11bb0 ]
  store i32 %v2_11bc0, i32* @r7, align 4
  ret i32 %v1_11bc4

; uselistorder directives
  uselistorder i32 %v0_11ba0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11bc0, { 1, 0 }
}

define i32 @function_11bc8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11bc8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_11bc8 = load i32, i32* @r3, align 4
  store i32 %v9_11bc8, i32* %stack_var_-4, align 4
  %v2_11bd4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11bd4, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11c08, label %dec_label_pc_11bf8

dec_label_pc_11bf8:                               ; preds = %dec_label_pc_11bc8
  %v0_11bf8 = call i32 @function_1207c()
  %v0_11bfc = load i32, i32* %r7.global-to-local, align 4
  %v1_11bfc = sub i32 0, %v0_11bfc
  store i32 %v1_11bfc, i32* @r3, align 4
  %v2_11c00 = inttoptr i32 %v0_11bf8 to i32*
  store i32 %v1_11bfc, i32* %v2_11c00, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c08

dec_label_pc_11c08:                               ; preds = %dec_label_pc_11bc8, %dec_label_pc_11bf8
  %v0_11c08 = phi i32 [ %arg1, %dec_label_pc_11bc8 ], [ -1, %dec_label_pc_11bf8 ]
  ret i32 %v0_11c08

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c08, { 1, 0 }
}

define i32 @function_11c1c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11c1c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c1c = load i32, i32* @r7, align 4
  store i32 %v3_11c1c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11c48, label %dec_label_pc_11c38

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c1c
  %v0_11c38 = call i32 @function_1207c()
  %v0_11c3c = load i32, i32* %r7.global-to-local, align 4
  %v1_11c3c = sub i32 0, %v0_11c3c
  %v2_11c40 = inttoptr i32 %v0_11c38 to i32*
  store i32 %v1_11c3c, i32* %v2_11c40, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_11c4c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c1c, %dec_label_pc_11c38
  %v2_11c4c = phi i32 [ %v3_11c1c, %dec_label_pc_11c1c ], [ %v2_11c4c.pre, %dec_label_pc_11c38 ]
  %v0_11c48 = phi i32 [ %arg1, %dec_label_pc_11c1c ], [ -1, %dec_label_pc_11c38 ]
  store i32 %v2_11c4c, i32* @r7, align 4
  ret i32 %v0_11c48

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11c48, { 1, 0 }
}

define i32 @function_11c54(i32 %arg1) local_unnamed_addr {
dec_label_pc_11c54:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11c54 = load i32, i32* @r7, align 4
  store i32 %v3_11c54, i32* %stack_var_-8, align 4
  %v0_11c60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11c60, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11c60, -4095
  br i1 %tmp, label %dec_label_pc_11c80, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c54
  %v0_11c70 = call i32 @function_1207c()
  %v0_11c74 = load i32, i32* %r7.global-to-local, align 4
  %v1_11c74 = sub i32 0, %v0_11c74
  store i32 %v1_11c74, i32* @r3, align 4
  %v2_11c78 = inttoptr i32 %v0_11c70 to i32*
  store i32 %v1_11c74, i32* %v2_11c78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11c80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c54, %dec_label_pc_11c70
  %v1_11c84 = phi i32 [ %v0_11c60, %dec_label_pc_11c54 ], [ -1, %dec_label_pc_11c70 ]
  %v2_11c80 = phi i32 [ %v3_11c54, %dec_label_pc_11c54 ], [ %v2_11c80.pre, %dec_label_pc_11c70 ]
  store i32 %v2_11c80, i32* @r7, align 4
  ret i32 %v1_11c84

; uselistorder directives
  uselistorder i32 %v0_11c60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c80, { 1, 0 }
}

define i32 @function_11c88(i32* %arg1) local_unnamed_addr {
dec_label_pc_11c88:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11c88 = load i32, i32* @r4, align 4
  store i32 %v3_11c88, i32* %stack_var_-24, align 4
  %v9_11c88 = load i32, i32* @r6, align 4
  %v12_11c88 = load i32, i32* @r7, align 4
  %v15_11c88 = load i32, i32* @r8, align 4
  %v18_11c88 = load i32, i32* @lr, align 4
  %v2_11c8c = load i32, i32* %arg1, align 4
  store i32 %v2_11c8c, i32* %r4.global-to-local, align 4
  %v3_11c94 = icmp eq i32 %v2_11c8c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 98320, i32* @r6, align 4
  br i1 %v3_11c94, label %dec_label_pc_11ca8, label %dec_label_pc_11cbc

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11c88
  %v0_11ca8 = call i32 @function_1207c()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_11cb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11cb0, i32* %r2.global-to-local, align 4
  %v2_11cb4 = inttoptr i32 %v0_11ca8 to i32*
  store i32 9, i32* %v2_11cb4, align 4
  %v0_11d5c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d5c

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11c88
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_11cc0 = add i32 %tmp, 24
  store i32 %v1_11cc0, i32* %r4.global-to-local, align 4
  store i32 %v1_11cc0, i32* %r2.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_11cd4 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_11cd4)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_11cec = load i32, i32* @r6, align 4
  %v2_11cec = add i32 %v0_11cec, 16
  %v3_11cec = inttoptr i32 %v2_11cec to i32*
  %v4_11cec = load i32, i32* %v3_11cec, align 4
  call void @__pseudo_branch(i32 %v4_11cec)
  %v0_11cf8 = load i32, i32* @r7, align 4
  %v1_11cf8 = inttoptr i32 %v0_11cf8 to i32*
  %v2_11cf8 = load i32, i32* %v1_11cf8, align 4
  store i32 %v2_11cf8, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_11d08 = load i32, i32* @r8, align 4
  store i32 %v0_11d08, i32* %v1_11cf8, align 4
  %v0_11d0c = load i32, i32* @r6, align 4
  %v1_11d0c = load i32, i32* %r3.global-to-local, align 4
  %v2_11d0c = add i32 %v1_11d0c, %v0_11d0c
  %v3_11d0c = inttoptr i32 %v2_11d0c to i32*
  %v4_11d0c = load i32, i32* %v3_11d0c, align 4
  store i32 ptrtoint (i32* @global_var_11d18.651 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11d0c)
  %v0_11d18 = load i32, i32* @r7, align 4
  %v1_11d18 = add i32 %v0_11d18, 12
  %v2_11d18 = inttoptr i32 %v1_11d18 to i32*
  %v3_11d18 = load i32, i32* %v2_11d18, align 4
  store i32 %v3_11d18, i32* @r0, align 4
  %v0_11d1c = call i32 @function_13718()
  %v0_11d20 = load i32, i32* @r7, align 4
  store i32 %v0_11d20, i32* @r0, align 4
  %v0_11d24 = call i32 @function_13718()
  %v0_11d2c = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_11d2c, -4095
  br i1 %tmp11, label %dec_label_pc_11d58, label %dec_label_pc_11d48

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11cbc
  %v0_11d48 = call i32 @function_1207c()
  %v0_11d4c = load i32, i32* @r4, align 4
  %v1_11d4c = sub i32 0, %v0_11d4c
  store i32 %v1_11d4c, i32* %r3.global-to-local, align 4
  %v2_11d50 = inttoptr i32 %v0_11d48 to i32*
  store i32 %v1_11d4c, i32* %v2_11d50, align 4
  %v0_11d54 = load i32, i32* @r8, align 4
  br label %dec_label_pc_11d58

dec_label_pc_11d58:                               ; preds = %dec_label_pc_11cbc, %dec_label_pc_11d48
  %v0_11d58 = phi i32 [ %v0_11d2c, %dec_label_pc_11cbc ], [ %v0_11d54, %dec_label_pc_11d48 ]
  store i32 %v0_11d58, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d5c

dec_label_pc_11d5c:                               ; preds = %dec_label_pc_11ca8, %dec_label_pc_11d58
  %v0_11d5c = phi i32 [ %v0_11d5c.pre, %dec_label_pc_11ca8 ], [ %v0_11d58, %dec_label_pc_11d58 ]
  %v2_11d64 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11d64, i32* @r4, align 4
  store i32 %v9_11c88, i32* @r6, align 4
  store i32 %v12_11c88, i32* @r7, align 4
  store i32 %v15_11c88, i32* @r8, align 4
  store i32 %v18_11c88, i32* @lr, align 4
  ret i32 %v0_11d5c

; uselistorder directives
  uselistorder i32 %v0_11d2c, { 1, 0 }
  uselistorder label %dec_label_pc_11d5c, { 1, 0 }
  uselistorder label %dec_label_pc_11d58, { 1, 0 }
}

define i32 @function_11d6c(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d6c:
  %v0_11d6c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d6c, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11d6c
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11d6c, %bb
  %v10_11d7c = phi i32 [ %arg1, %dec_label_pc_11d6c ], [ 0, %bb ]
  ret i32 %v10_11d7c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_11d80(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d80:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_11d80 = load i32, i32* @r5, align 4
  %v9_11d80 = load i32, i32* @r6, align 4
  %v12_11d80 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_11d94 = call i32 @function_126ac()
  %v2_11d9c = icmp eq i32 %v0_11d94, 0
  store i32 98320, i32* @r6, align 4
  br i1 %v2_11d9c, label %bb, label %dec_label_pc_11dac

bb:                                               ; preds = %dec_label_pc_11d80
  br label %dec_label_pc_11e38

dec_label_pc_11dac:                               ; preds = %dec_label_pc_11d80
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11db0 = load i32, i32* @r4, align 4
  %v2_11db0 = icmp ugt i32 %v0_11db0, 511
  %v2_11db4 = add i32 %v0_11d94, 4
  %v3_11db4 = inttoptr i32 %v2_11db4 to i32*
  store i32 0, i32* %v3_11db4, align 4
  %v0_11db8 = load i32, i32* %r3.global-to-local, align 4
  %v2_11db8 = add i32 %v0_11d94, 16
  %v3_11db8 = inttoptr i32 %v2_11db8 to i32*
  store i32 %v0_11db8, i32* %v3_11db8, align 4
  %v0_11dbc = load i32, i32* %r3.global-to-local, align 4
  %v2_11dbc = add i32 %v0_11d94, 8
  %v3_11dbc = inttoptr i32 %v2_11dbc to i32*
  store i32 %v0_11dbc, i32* %v3_11dbc, align 4
  br i1 %v2_11db0, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_11dac
  %v0_11dc42 = load i32, i32* @r4, align 4
  %v2_11dc43 = add i32 %v0_11d94, 20
  %v3_11dc44 = inttoptr i32 %v2_11dc43 to i32*
  store i32 %v0_11dc42, i32* %v3_11dc44, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_11dac
  %v1_11dc0 = load i32, i32* %r3.global-to-local, align 4
  %v2_11dc0 = add i32 %v1_11dc0, 512
  store i32 %v2_11dc0, i32* %r3.global-to-local, align 4
  %v0_11dc4 = load i32, i32* @r4, align 4
  %v2_11dc4 = add i32 %v0_11d94, 20
  %v3_11dc4 = inttoptr i32 %v2_11dc4 to i32*
  store i32 %v0_11dc4, i32* %v3_11dc4, align 4
  %v1_11dc8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_11dc8, i32* %v3_11dc4, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_11d94, i32* @r5, align 4
  %v0_11dd0 = load i32, i32* @r7, align 4
  %v2_11dd0 = inttoptr i32 %v0_11d94 to i32*
  store i32 %v0_11dd0, i32* %v2_11dd0, align 4
  %v0_11dd4 = load i32, i32* @r5, align 4
  %v1_11dd4 = add i32 %v0_11dd4, 20
  %v2_11dd4 = inttoptr i32 %v1_11dd4 to i32*
  %v3_11dd4 = load i32, i32* %v2_11dd4, align 4
  store i32 %v3_11dd4, i32* %r1.global-to-local, align 4
  %v2_11ddc = call i32 @function_12fcc(i32 1, i32 %v3_11dd4)
  %v2_11de0 = icmp eq i32 %v2_11ddc, 0
  store i32 %v2_11ddc, i32* @r4, align 4
  %v1_11de8 = load i32, i32* @r5, align 4
  %v2_11de8 = add i32 %v1_11de8, 12
  %v3_11de8 = inttoptr i32 %v2_11de8 to i32*
  store i32 %v2_11ddc, i32* %v3_11de8, align 4
  br i1 %v2_11de0, label %dec_label_pc_11df0, label %dec_label_pc_11e00

dec_label_pc_11df0:                               ; preds = %bb17
  %v0_11df0 = load i32, i32* @r5, align 4
  store i32 %v0_11df0, i32* @r0, align 4
  %v0_11df4 = call i32 @function_13718()
  %v0_11df8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11e38

dec_label_pc_11e00:                               ; preds = %bb17
  %v0_11e04 = load i32, i32* @r6, align 4
  %v2_11e04 = add i32 %v0_11e04, -2028
  store i32 %v2_11e04, i32* %r3.global-to-local, align 4
  %v1_11e0c = inttoptr i32 %v2_11e04 to i32*
  %v2_11e0c = load i32, i32* %v1_11e0c, align 4
  %v3_11e0c = add i32 %v0_11e04, -2024
  %v4_11e0c = inttoptr i32 %v3_11e0c to i32*
  %v5_11e0c = load i32, i32* %v4_11e0c, align 4
  store i32 %v5_11e0c, i32* %r1.global-to-local, align 4
  %v6_11e0c = add i32 %v0_11e04, -2020
  %v7_11e0c = inttoptr i32 %v6_11e0c to i32*
  %v8_11e0c = load i32, i32* %v7_11e0c, align 4
  store i32 %v8_11e0c, i32* %r2.global-to-local, align 4
  %v9_11e0c = add i32 %v0_11e04, -2016
  %v10_11e0c = inttoptr i32 %v9_11e0c to i32*
  %v11_11e0c = load i32, i32* %v10_11e0c, align 4
  store i32 %v11_11e0c, i32* %r3.global-to-local, align 4
  %v12_11e0c = add i32 %v0_11e04, -2012
  %v1_11e18 = inttoptr i32 %v12_11e0c to i32*
  %v2_11e18 = load i32, i32* %v1_11e18, align 4
  %v3_11e18 = add i32 %v0_11e04, -2008
  %v4_11e18 = inttoptr i32 %v3_11e18 to i32*
  %v5_11e18 = load i32, i32* %v4_11e18, align 4
  store i32 %v2_11e18, i32* %stack_var_-32, align 4
  store i32 %v5_11e0c, i32* %r1.global-to-local, align 4
  store i32 %v8_11e0c, i32* %r2.global-to-local, align 4
  store i32 %v11_11e0c, i32* %r3.global-to-local, align 4
  %v0_11e28 = load i32, i32* @r5, align 4
  %v1_11e28 = add i32 %v0_11e28, 24
  %v1_11e2c = inttoptr i32 %v1_11e28 to i32*
  store i32 %v2_11e0c, i32* %v1_11e2c, align 4
  %v3_11e2c = add i32 %v0_11e28, 28
  %v4_11e2c = inttoptr i32 %v3_11e2c to i32*
  %v5_11e2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11e2c, i32* %v4_11e2c, align 4
  %v6_11e2c = add i32 %v0_11e28, 32
  %v7_11e2c = inttoptr i32 %v6_11e2c to i32*
  %v8_11e2c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_11e2c, i32* %v7_11e2c, align 4
  %v9_11e2c = add i32 %v0_11e28, 36
  %v10_11e2c = inttoptr i32 %v9_11e2c to i32*
  %v11_11e2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_11e2c, i32* %v10_11e2c, align 4
  %v12_11e2c = add i32 %v0_11e28, 40
  %v2_11e30 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_11e18, i32* %r1.global-to-local, align 4
  %v1_11e34 = inttoptr i32 %v12_11e2c to i32*
  store i32 %v2_11e30, i32* %v1_11e34, align 4
  %v3_11e34 = add i32 %v0_11e28, 44
  %v4_11e34 = inttoptr i32 %v3_11e34 to i32*
  %v5_11e34 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11e34, i32* %v4_11e34, align 4
  %v0_11e38.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11e38

dec_label_pc_11e38:                               ; preds = %bb, %dec_label_pc_11df0, %dec_label_pc_11e00
  %v0_11e38 = phi i32 [ 0, %bb ], [ %v0_11df8, %dec_label_pc_11df0 ], [ %v0_11e38.pre, %dec_label_pc_11e00 ]
  store i32 %v6_11d80, i32* @r5, align 4
  store i32 %v9_11d80, i32* @r6, align 4
  store i32 %v12_11d80, i32* @r7, align 4
  ret i32 %v0_11e38

; uselistorder directives
  uselistorder i32 %v2_11ddc, { 1, 0, 2 }
  uselistorder i32 %v0_11d94, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 7, 3, 0, 4, 8, 5, 9, 6, 10, 1, 11, 2, 12 }
  uselistorder label %dec_label_pc_11e38, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_11e50(i32 %arg1) local_unnamed_addr {
dec_label_pc_11e50:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v6_11e50 = load i32, i32* @r7, align 4
  %v2_11e58 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_11e80, label %dec_label_pc_11e70

dec_label_pc_11e70:                               ; preds = %dec_label_pc_11e50
  %v0_11e70 = call i32 @function_1207c()
  %v0_11e74 = load i32, i32* @r7, align 4
  %v1_11e74 = sub i32 0, %v0_11e74
  %v2_11e78 = inttoptr i32 %v0_11e70 to i32*
  store i32 %v1_11e74, i32* %v2_11e78, align 4
  br label %dec_label_pc_11ea4

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11e50
  %v1_11e80 = icmp slt i32 %arg1, 0
  br i1 %v1_11e80, label %dec_label_pc_11ea4, label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %dec_label_pc_11e80
  store i32 %v2_11e58, i32* @r1, align 4
  %v0_11e8c = call i32 @function_14bc8()
  %v1_11e90 = icmp slt i32 %v0_11e8c, 0
  br i1 %v1_11e90, label %dec_label_pc_11e98, label %dec_label_pc_11eac

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e88
  br label %dec_label_pc_11ea4

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11e98, %dec_label_pc_11e80, %dec_label_pc_11e70
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ee8

dec_label_pc_11eac:                               ; preds = %dec_label_pc_11e88
  %v0_11eb4 = load i32, i32* @r7, align 4
  %v3_11eb8 = call i32 @function_11af4(i32 %v0_11eb4, i32 2, i32 1)
  %v0_11ebc = load i32, i32* @r7, align 4
  %v2_11ec4 = call i32 @function_11d80(i32 %v0_11ebc, i32 %tmp)
  store i32 %v2_11ec4, i32* %r4.global-to-local, align 4
  %v2_11ec8 = icmp eq i32 %v2_11ec4, 0
  br i1 %v2_11ec8, label %dec_label_pc_11ed0, label %dec_label_pc_11ee8

dec_label_pc_11ed0:                               ; preds = %dec_label_pc_11eac
  %v0_11edc = call i32 @function_1207c()
  %v2_11ee4 = inttoptr i32 %v0_11edc to i32*
  store i32 12, i32* %v2_11ee4, align 4
  %v0_11ee8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11ee8

dec_label_pc_11ee8:                               ; preds = %dec_label_pc_11eac, %dec_label_pc_11ea4, %dec_label_pc_11ed0
  %v0_11ee8 = phi i32 [ %v2_11ec4, %dec_label_pc_11eac ], [ 0, %dec_label_pc_11ea4 ], [ %v0_11ee8.pre, %dec_label_pc_11ed0 ]
  store i32 %v6_11e50, i32* @r7, align 4
  ret i32 %v0_11ee8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_11ee8, { 2, 0, 1 }
}

define i32 @function_11ef8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ef8:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_11ef8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ef8, label %bb, label %dec_label_pc_11ef8._crit_edge

dec_label_pc_11ef8._crit_edge:                    ; preds = %dec_label_pc_11ef8
  br label %bb11

bb:                                               ; preds = %dec_label_pc_11ef8
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_11ef8._crit_edge, %bb
  %v2_11f00 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_11f00, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11f0c = call i32 @function_14bc8()
  store i32 %v0_11f0c, i32* @r5, align 4
  %v2_11f10 = icmp eq i32 %v0_11f0c, 0
  br i1 %v2_11f10, label %dec_label_pc_11f18, label %dec_label_pc_11f80

dec_label_pc_11f18:                               ; preds = %bb11
  %v1_11f1c = and i32 %tmp5, 61440
  store i32 %v1_11f1c, i32* @r3, align 4
  %v7_11f20 = icmp eq i32 %v1_11f1c, 16384
  br i1 %v7_11f20, label %dec_label_pc_11f38, label %dec_label_pc_11f28

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f18
  %v0_11f28 = call i32 @function_1207c()
  br label %dec_label_pc_11f64

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11f18
  %v0_11f38 = load i32, i32* @r4, align 4
  %v2_11f40 = call i32 @function_11a88(i32 %v0_11f38, i32 3)
  %v7_11f44 = icmp eq i32 %v2_11f40, -1
  br i1 %v7_11f44, label %dec_label_pc_11f80, label %dec_label_pc_11f4c

dec_label_pc_11f4c:                               ; preds = %dec_label_pc_11f38
  %v1_11f4c = urem i32 %v2_11f40, 4
  %v7_11f50 = icmp eq i32 %v1_11f4c, 1
  br i1 %v7_11f50, label %dec_label_pc_11f58, label %dec_label_pc_11f6c

dec_label_pc_11f58:                               ; preds = %dec_label_pc_11f4c
  %v0_11f58 = call i32 @function_1207c()
  br label %dec_label_pc_11f64

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f28, %dec_label_pc_11f58
  %storemerge2 = phi i32 [ %v0_11f28, %dec_label_pc_11f28 ], [ %v0_11f58, %dec_label_pc_11f58 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_11f28 ], [ 22, %dec_label_pc_11f58 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_11f64 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_11f64, align 4
  %v0_11f84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f6c:                               ; preds = %dec_label_pc_11f4c
  %v0_11f6c = load i32, i32* @r4, align 4
  %v2_11f74 = call i32 @function_11d80(i32 %v0_11f6c, i32 %tmp)
  store i32 %v2_11f74, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f80:                               ; preds = %bb11, %dec_label_pc_11f38
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11f84

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f6c, %dec_label_pc_11f64, %dec_label_pc_11f80
  %v0_11f84 = phi i32 [ %v2_11f74, %dec_label_pc_11f6c ], [ %v0_11f84.pre, %dec_label_pc_11f64 ], [ 0, %dec_label_pc_11f80 ]
  ret i32 %v0_11f84

; uselistorder directives
  uselistorder i32 %v2_11f40, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_11f84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f80, { 1, 0 }
  uselistorder label %dec_label_pc_11f64, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11f94(i32* %arg1) local_unnamed_addr {
dec_label_pc_11f94:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_11f94 = load i32, i32* @r4, align 4
  %v6_11f94 = load i32, i32* @r5, align 4
  %v9_11f94 = load i32, i32* @r6, align 4
  %v12_11f94 = load i32, i32* @r7, align 4
  %v15_11f94 = load i32, i32* @lr, align 4
  store i32 98320, i32* @r6, align 4
  %v1_11fa8 = add i32 %tmp, 24
  store i32 %v1_11fa8, i32* @r4, align 4
  %v4_11fac = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_11fac, i32* %r1.global-to-local, align 4
  store i32 %v1_11fa8, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_11fc0 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_11fc0)
  %v0_11fd4 = load i32, i32* @r6, align 4
  %v2_11fd4 = add i32 %v0_11fd4, 16
  %v3_11fd4 = inttoptr i32 %v2_11fd4 to i32*
  %v4_11fd4 = load i32, i32* %v3_11fd4, align 4
  store i32 %v4_11fd4, i32* @ip, align 4
  store i32 73696, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11fd4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11fe4

dec_label_pc_11fe4:                               ; preds = %dec_label_pc_12014, %dec_label_pc_11f94
  %v0_11fe4 = load i32, i32* @r5, align 4
  %v1_11fe4 = add i32 %v0_11fe4, 4
  %v2_11fe4 = inttoptr i32 %v1_11fe4 to i32*
  %v3_11fe4 = load i32, i32* %v2_11fe4, align 4
  store i32 %v3_11fe4, i32* %r2.global-to-local, align 4
  %v4_11fe4 = add i32 %v0_11fe4, 8
  %v5_11fe4 = inttoptr i32 %v4_11fe4 to i32*
  %v6_11fe4 = load i32, i32* %v5_11fe4, align 4
  %tmp10 = icmp ugt i32 %v6_11fe4, %v3_11fe4
  br i1 %tmp10, label %dec_label_pc_12014, label %dec_label_pc_11ff0

dec_label_pc_11ff0:                               ; preds = %dec_label_pc_11fe4
  %v1_11ff0 = inttoptr i32 %v0_11fe4 to i32*
  %v2_11ff0 = load i32, i32* %v1_11ff0, align 4
  %v1_11ff4 = add i32 %v0_11fe4, 12
  %v2_11ff4 = inttoptr i32 %v1_11ff4 to i32*
  %v3_11ff4 = load i32, i32* %v2_11ff4, align 4
  store i32 %v3_11ff4, i32* %r1.global-to-local, align 4
  %v1_11ff8 = add i32 %v0_11fe4, 20
  %v2_11ff8 = inttoptr i32 %v1_11ff8 to i32*
  %v3_11ff8 = load i32, i32* %v2_11ff8, align 4
  store i32 %v3_11ff8, i32* %r2.global-to-local, align 4
  %v4_11ffc = call i32 @function_14b34(i32 %v2_11ff0, i32 %v3_11ff4, i32 %v3_11ff8, i32 %v6_11fe4)
  %tmp9 = icmp slt i32 %v4_11ffc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_1200c

.thread:                                          ; preds = %dec_label_pc_11ff0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12040

dec_label_pc_1200c:                               ; preds = %dec_label_pc_11ff0
  %v1_1200c = load i32, i32* @r5, align 4
  %v2_1200c = add i32 %v1_1200c, 8
  %v3_1200c = inttoptr i32 %v2_1200c to i32*
  store i32 %v4_11ffc, i32* %v3_1200c, align 4
  %v0_12010 = load i32, i32* @r7, align 4
  %v1_12010 = load i32, i32* @r5, align 4
  %v2_12010 = add i32 %v1_12010, 4
  %v3_12010 = inttoptr i32 %v2_12010 to i32*
  store i32 %v0_12010, i32* %v3_12010, align 4
  %v0_12014.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %dec_label_pc_11fe4, %dec_label_pc_1200c
  %v1_12024 = phi i32 [ %v0_11fe4, %dec_label_pc_11fe4 ], [ %v0_12014.pre, %dec_label_pc_1200c ]
  %v1_12014 = add i32 %v1_12024, 4
  %v2_12014 = inttoptr i32 %v1_12014 to i32*
  %v3_12014 = load i32, i32* %v2_12014, align 4
  store i32 %v3_12014, i32* %r2.global-to-local, align 4
  %v1_12018 = add i32 %v1_12024, 12
  %v2_12018 = inttoptr i32 %v1_12018 to i32*
  %v3_12018 = load i32, i32* %v2_12018, align 4
  store i32 %v3_12018, i32* %r1.global-to-local, align 4
  %v2_1201c = add i32 %v3_12018, %v3_12014
  store i32 %v2_1201c, i32* @r4, align 4
  %v1_12020 = add i32 %v2_1201c, 4
  %v2_12020 = inttoptr i32 %v1_12020 to i32*
  %v3_12020 = load i32, i32* %v2_12020, align 4
  %v2_12024 = add i32 %v1_12024, 16
  %v3_12024 = inttoptr i32 %v2_12024 to i32*
  store i32 %v3_12020, i32* %v3_12024, align 4
  %v0_12028 = load i32, i32* @r4, align 4
  %v1_12028 = add i32 %v0_12028, 8
  %v2_12028 = inttoptr i32 %v1_12028 to i16*
  %v3_12028 = load i16, i16* %v2_12028, align 2
  %v4_12028 = zext i16 %v3_12028 to i32
  %v0_1202c = load i32, i32* %r2.global-to-local, align 4
  %v1_1202c = load i32, i32* %r1.global-to-local, align 4
  %v2_1202c = add i32 %v1_1202c, %v0_1202c
  %v3_1202c = inttoptr i32 %v2_1202c to i32*
  %v4_1202c = load i32, i32* %v3_1202c, align 4
  store i32 %v4_1202c, i32* %r1.global-to-local, align 4
  %v2_12030 = add i32 %v0_1202c, %v4_12028
  %v2_12034 = icmp eq i32 %v4_1202c, 0
  %v1_12038 = load i32, i32* @r5, align 4
  %v2_12038 = add i32 %v1_12038, 4
  %v3_12038 = inttoptr i32 %v2_12038 to i32*
  store i32 %v2_12030, i32* %v3_12038, align 4
  br i1 %v2_12034, label %dec_label_pc_11fe4, label %dec_label_pc_12040

dec_label_pc_12040:                               ; preds = %dec_label_pc_12014, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1204c = load i32, i32* @r6, align 4
  %v2_1204c = add i32 %v0_1204c, 24
  %v3_1204c = inttoptr i32 %v2_1204c to i32*
  %v4_1204c = load i32, i32* %v3_1204c, align 4
  call void @__pseudo_branch(i32 %v4_1204c)
  %v0_12058 = load i32, i32* @r4, align 4
  store i32 %v3_11f94, i32* @r4, align 4
  store i32 %v6_11f94, i32* @r5, align 4
  store i32 %v9_11f94, i32* @r6, align 4
  store i32 %v12_11f94, i32* @r7, align 4
  store i32 %v15_11f94, i32* @lr, align 4
  ret i32 %v0_12058

; uselistorder directives
  uselistorder i32 %v1_12024, { 0, 2, 1 }
  uselistorder i32 %v6_11fe4, { 1, 0 }
  uselistorder i32 %v0_11fe4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_12014, { 1, 0 }
}

define i32 @function_12068(i32 %arg1) local_unnamed_addr {
dec_label_pc_12068:
  %v0_12068 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12068, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12068
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12068, %bb
  %v10_12078 = phi i32 [ %arg1, %dec_label_pc_12068 ], [ 0, %bb ]
  ret i32 %v10_12078

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_1207c() local_unnamed_addr {
dec_label_pc_1207c:
  store i32 98320, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_182c4.662 to i32)
}

define i32 @function_12090(i16* %arg1) local_unnamed_addr {
dec_label_pc_12090:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_12090 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12090, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12090
  %v2_12094 = trunc i32 %tmp to i16
  store i16 %v2_12094, i16* %arg1, align 2
  %v5_12094 = load i32, i32* @r4, align 4
  %v6_12094 = load i32, i32* %r0.global-to-local, align 4
  %v7_12094 = sub i32 %v6_12094, %v5_12094
  store i32 %v7_12094, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12090, %bb
  %v8_12094 = phi i32 [ %tmp, %dec_label_pc_12090 ], [ %v7_12094, %bb ]
  ret i32 %v8_12094

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12098(i32 %arg1) local_unnamed_addr {
dec_label_pc_12098:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1209c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1209c, i32* @r0, align 4
  %v1_120a4 = call i32 @function_14fa4(i32 %v2_1209c)
  %v2_120a8 = load i32, i32* %stack_var_-24, align 4
  %v2_120ac = add i32 %v2_120a8, %tmp
  %v2_120b4 = mul i32 %v2_120ac, 10000
  %v1_120b8 = and i32 %v2_120b4, 2147483632
  ret i32 %v1_120b8

; uselistorder directives
  uselistorder i32 %v2_1209c, { 1, 0 }
}

define i32 @function_120c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_120c8:
  %v0_120c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_120c8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_120c8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_120c8, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_120d0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_120d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_120d4 = load i32, i32* @r2, align 4
  %v8_120d4 = icmp eq i32 %v0_120d4, 8
  store i1 %v8_120d4, i1* %cpsr_z.global-to-local, align 1
  %v5_120d8 = icmp slt i32 %v0_120d4, 8
  br i1 %v5_120d8, label %dec_label_pc_12138, label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %dec_label_pc_120d0
  %v4_120dc = mul i32 %arg2, 256
  %v5_120dc = or i32 %v4_120dc, %arg2
  %v4_120e0 = mul i32 %v5_120dc, 65536
  %v5_120e0 = or i32 %v4_120e0, %v5_120dc
  store i32 %v5_120e0, i32* %r1.global-to-local, align 4
  %v1_120e457 = urem i32 %tmp, 4
  %v2_120e458 = icmp eq i32 %v1_120e457, 0
  store i1 %v2_120e458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_120e458, label %dec_label_pc_120f4, label %bb

bb:                                               ; preds = %dec_label_pc_120dc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_120dc ]
  %v3_120e859 = phi i32 [ %v6_120e8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_120dc ]
  %v4_120e8 = inttoptr i32 %v3_120e859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_120e8, align 1
  %v5_120e8 = load i32, i32* @r3, align 4
  %v6_120e8 = add i32 %v5_120e8, 1
  store i32 %v6_120e8, i32* @r3, align 4
  %v0_120ec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_120f8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_120ec.pr, label %dec_label_pc_120f4, label %.thread

.thread:                                          ; preds = %bb
  %v2_120ec = add i32 %v0_120f8.pr.pre, -1
  store i32 %v2_120ec, i32* @r2, align 4
  %v1_120e4 = urem i32 %v6_120e8, 4
  %v2_120e4 = icmp eq i32 %v1_120e4, 0
  store i1 %v2_120e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_120e4, label %dec_label_pc_120f4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_120e8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_120e8.pre to i8
  br label %bb

dec_label_pc_120f4:                               ; preds = %.thread, %bb, %dec_label_pc_120dc
  %v0_1210028 = phi i32 [ %tmp, %dec_label_pc_120dc ], [ %v6_120e8, %bb ], [ %v6_120e8, %.thread ]
  %v0_120f8.pr = phi i32 [ %v0_120d4, %dec_label_pc_120dc ], [ %v0_120f8.pr.pre, %bb ], [ %v2_120ec, %.thread ]
  %v0_120f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_120f4, i32* @ip, align 4
  %v8_120f810 = icmp eq i32 %v0_120f8.pr, 8
  store i1 %v8_120f810, i1* %cpsr_z.global-to-local, align 1
  %v5_120fc11 = icmp slt i32 %v0_120f8.pr, 8
  br i1 %v5_120fc11, label %dec_label_pc_12138, label %dec_label_pc_12100.preheader

dec_label_pc_12100.preheader:                     ; preds = %dec_label_pc_120f4
  %v1_1210046 = inttoptr i32 %v0_1210028 to i32*
  store i32 %v0_120f4, i32* %v1_1210046, align 4
  %v3_1210047 = add i32 %v0_1210028, 4
  %v4_1210048 = inttoptr i32 %v3_1210047 to i32*
  %v5_1210049 = load i32, i32* @ip, align 4
  store i32 %v5_1210049, i32* %v4_1210048, align 4
  %v6_1210050 = add i32 %v0_1210028, 8
  store i32 %v6_1210050, i32* @r3, align 4
  %v0_1210451 = load i32, i32* @r2, align 4
  %v1_1210452 = add i32 %v0_1210451, -8
  store i32 %v1_1210452, i32* %r2.global-to-local, align 4
  %v5_1210c53 = icmp slt i32 %v1_1210452, 8
  br i1 %v5_1210c53, label %dec_label_pc_12100.dec_label_pc_12138.loopexit_crit_edge, label %dec_label_pc_12110

dec_label_pc_12110:                               ; preds = %dec_label_pc_12100.preheader, %dec_label_pc_120f8.dec_label_pc_12100_crit_edge
  %v6_1210055 = phi i32 [ %v6_12100, %dec_label_pc_120f8.dec_label_pc_12100_crit_edge ], [ %v6_1210050, %dec_label_pc_12100.preheader ]
  %v0_1210054 = phi i32 [ %v12_1212c, %dec_label_pc_120f8.dec_label_pc_12100_crit_edge ], [ %v0_1210028, %dec_label_pc_12100.preheader ]
  %v1_12110 = inttoptr i32 %v6_1210055 to i32*
  %v2_12110 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12110, i32* %v1_12110, align 4
  %v3_12110 = add i32 %v0_1210054, 12
  %v4_12110 = inttoptr i32 %v3_12110 to i32*
  %v5_12110 = load i32, i32* @ip, align 4
  store i32 %v5_12110, i32* %v4_12110, align 4
  %v6_12110 = add i32 %v0_1210054, 16
  store i32 %v6_12110, i32* @r3, align 4
  %v0_12114 = load i32, i32* %r2.global-to-local, align 4
  %v1_12114 = add i32 %v0_12114, -8
  store i32 %v1_12114, i32* %r2.global-to-local, align 4
  %v5_1211c = icmp slt i32 %v1_12114, 8
  br i1 %v5_1211c, label %dec_label_pc_12110.dec_label_pc_12138.loopexit_crit_edge, label %dec_label_pc_12120

dec_label_pc_12120:                               ; preds = %dec_label_pc_12110
  %v1_12120 = inttoptr i32 %v6_12110 to i32*
  %v2_12120 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_12120, i32* %v1_12120, align 4
  %v3_12120 = add i32 %v0_1210054, 20
  %v4_12120 = inttoptr i32 %v3_12120 to i32*
  %v5_12120 = load i32, i32* @ip, align 4
  store i32 %v5_12120, i32* %v4_12120, align 4
  %v6_12120 = add i32 %v0_1210054, 24
  store i32 %v6_12120, i32* @r3, align 4
  %v0_12124 = load i32, i32* %r2.global-to-local, align 4
  %v1_12124 = add i32 %v0_12124, -8
  store i32 %v1_12124, i32* %r2.global-to-local, align 4
  %v5_1212c = icmp slt i32 %v1_12124, 8
  br i1 %v5_1212c, label %dec_label_pc_12120.dec_label_pc_12138.loopexit_crit_edge, label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_12120
  %v7_1212c = inttoptr i32 %v6_12120 to i32*
  %v8_1212c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1212c, i32* %v7_1212c, align 4
  %v9_1212c = add i32 %v0_1210054, 28
  %v10_1212c = inttoptr i32 %v9_1212c to i32*
  %v11_1212c = load i32, i32* @ip, align 4
  store i32 %v11_1212c, i32* %v10_1212c, align 4
  %v12_1212c = add i32 %v0_1210054, 32
  store i32 %v12_1212c, i32* @r3, align 4
  %v6_12130 = load i32, i32* %r2.global-to-local, align 4
  %v7_12130 = add i32 %v6_12130, -8
  store i32 %v7_12130, i32* %r2.global-to-local, align 4
  %v5_120fc = icmp slt i32 %v7_12130, 8
  br i1 %v5_120fc, label %dec_label_pc_120f8.dec_label_pc_12138.loopexit_crit_edge, label %dec_label_pc_120f8.dec_label_pc_12100_crit_edge

dec_label_pc_120f8.dec_label_pc_12100_crit_edge:  ; preds = %dec_label_pc_120f8
  %v2_12100.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12100 = inttoptr i32 %v12_1212c to i32*
  store i32 %v2_12100.pre, i32* %v1_12100, align 4
  %v3_12100 = add i32 %v0_1210054, 36
  %v4_12100 = inttoptr i32 %v3_12100 to i32*
  %v5_12100 = load i32, i32* @ip, align 4
  store i32 %v5_12100, i32* %v4_12100, align 4
  %v6_12100 = add i32 %v0_1210054, 40
  store i32 %v6_12100, i32* @r3, align 4
  %v0_12104 = load i32, i32* %r2.global-to-local, align 4
  %v1_12104 = add i32 %v0_12104, -8
  store i32 %v1_12104, i32* %r2.global-to-local, align 4
  %v5_1210c = icmp slt i32 %v1_12104, 8
  br i1 %v5_1210c, label %dec_label_pc_12100.dec_label_pc_12138.loopexit_crit_edge, label %dec_label_pc_12110

dec_label_pc_120f8.dec_label_pc_12138.loopexit_crit_edge: ; preds = %dec_label_pc_120f8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12138

dec_label_pc_12100.dec_label_pc_12138.loopexit_crit_edge: ; preds = %dec_label_pc_120f8.dec_label_pc_12100_crit_edge, %dec_label_pc_12100.preheader
  %v1_12104.lcssa = phi i32 [ %v1_1210452, %dec_label_pc_12100.preheader ], [ %v1_12104, %dec_label_pc_120f8.dec_label_pc_12100_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12138

dec_label_pc_12110.dec_label_pc_12138.loopexit_crit_edge: ; preds = %dec_label_pc_12110
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12138

dec_label_pc_12120.dec_label_pc_12138.loopexit_crit_edge: ; preds = %dec_label_pc_12120
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12138

dec_label_pc_12138:                               ; preds = %dec_label_pc_120f4, %dec_label_pc_120f8.dec_label_pc_12138.loopexit_crit_edge, %dec_label_pc_12100.dec_label_pc_12138.loopexit_crit_edge, %dec_label_pc_12110.dec_label_pc_12138.loopexit_crit_edge, %dec_label_pc_12120.dec_label_pc_12138.loopexit_crit_edge, %dec_label_pc_120d0
  %v0_12140 = phi i32 [ %v0_120d4, %dec_label_pc_120d0 ], [ %v1_12124, %dec_label_pc_12120.dec_label_pc_12138.loopexit_crit_edge ], [ %v1_12114, %dec_label_pc_12110.dec_label_pc_12138.loopexit_crit_edge ], [ %v1_12104.lcssa, %dec_label_pc_12100.dec_label_pc_12138.loopexit_crit_edge ], [ %v7_12130, %dec_label_pc_120f8.dec_label_pc_12138.loopexit_crit_edge ], [ %v0_120f8.pr, %dec_label_pc_120f4 ]
  %v2_12138 = icmp eq i32 %v0_12140, 0
  store i1 %v2_12138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12138, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12138
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12138
  %v1_12140 = sub i32 7, %v0_12140
  store i32 %v1_12140, i32* %r2.global-to-local, align 4
  %v3_12144 = mul i32 %v1_12140, 4
  %v4_12144 = add i32 %v3_12144, ptrtoint (i32* @global_var_1214c.664 to i32)
  call void @__pseudo_branch(i32 %v4_12144)
  %v0_1214c = load i32, i32* %r1.global-to-local, align 4
  %v1_1214c = trunc i32 %v0_1214c to i8
  %v2_1214c = load i32, i32* @r3, align 4
  %v3_1214c = inttoptr i32 %v2_1214c to i8*
  store i8 %v1_1214c, i8* %v3_1214c, align 1
  %v4_1214c = load i32, i32* @r3, align 4
  %v5_1214c = add i32 %v4_1214c, 1
  store i32 %v5_1214c, i32* %r3.global-to-local, align 4
  %v0_12150 = load i32, i32* %r1.global-to-local, align 4
  %v1_12150 = trunc i32 %v0_12150 to i8
  %v3_12150 = inttoptr i32 %v5_1214c to i8*
  store i8 %v1_12150, i8* %v3_12150, align 1
  %v4_12150 = load i32, i32* %r3.global-to-local, align 4
  %v5_12150 = add i32 %v4_12150, 1
  store i32 %v5_12150, i32* %r3.global-to-local, align 4
  %v0_12154 = load i32, i32* %r1.global-to-local, align 4
  %v1_12154 = trunc i32 %v0_12154 to i8
  %v3_12154 = inttoptr i32 %v5_12150 to i8*
  store i8 %v1_12154, i8* %v3_12154, align 1
  %v4_12154 = load i32, i32* %r3.global-to-local, align 4
  %v5_12154 = add i32 %v4_12154, 1
  store i32 %v5_12154, i32* %r3.global-to-local, align 4
  %v0_12158 = load i32, i32* %r1.global-to-local, align 4
  %v1_12158 = trunc i32 %v0_12158 to i8
  %v3_12158 = inttoptr i32 %v5_12154 to i8*
  store i8 %v1_12158, i8* %v3_12158, align 1
  %v4_12158 = load i32, i32* %r3.global-to-local, align 4
  %v5_12158 = add i32 %v4_12158, 1
  store i32 %v5_12158, i32* %r3.global-to-local, align 4
  %v0_1215c = load i32, i32* %r1.global-to-local, align 4
  %v1_1215c = trunc i32 %v0_1215c to i8
  %v3_1215c = inttoptr i32 %v5_12158 to i8*
  store i8 %v1_1215c, i8* %v3_1215c, align 1
  %v4_1215c = load i32, i32* %r3.global-to-local, align 4
  %v5_1215c = add i32 %v4_1215c, 1
  store i32 %v5_1215c, i32* %r3.global-to-local, align 4
  %v0_12160 = load i32, i32* %r1.global-to-local, align 4
  %v1_12160 = trunc i32 %v0_12160 to i8
  %v3_12160 = inttoptr i32 %v5_1215c to i8*
  store i8 %v1_12160, i8* %v3_12160, align 1
  %v4_12160 = load i32, i32* %r3.global-to-local, align 4
  %v5_12160 = add i32 %v4_12160, 1
  store i32 %v5_12160, i32* %r3.global-to-local, align 4
  %v0_12164 = load i32, i32* %r1.global-to-local, align 4
  %v1_12164 = trunc i32 %v0_12164 to i8
  %v3_12164 = inttoptr i32 %v5_12160 to i8*
  store i8 %v1_12164, i8* %v3_12164, align 1
  %v4_12164 = load i32, i32* %r3.global-to-local, align 4
  %v5_12164 = add i32 %v4_12164, 1
  store i32 %v5_12164, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12100, { 1, 0 }
  uselistorder i32 %v12_1212c, { 1, 2, 0 }
  uselistorder i32 %v0_1210054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_120f8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_120e8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_120dc, { 1, 0 }
  uselistorder i32 %v0_120d4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12138, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12110, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_12170(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12170:
  %v0_12170 = call i32 @function_16220()
  ret i32 %v0_12170
}

define i32 @function_12180() local_unnamed_addr {
dec_label_pc_12180:
  %v0_12180 = call i32 @function_16220()
  ret i32 %v0_12180
}

define i32 @function_12190(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12190:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_121a01 = load i32, i32* @r1, align 4
  %v1_121a02 = inttoptr i32 %v0_121a01 to i8*
  %v2_121a03 = load i8, i8* %v1_121a02, align 1
  %v2_121a45 = icmp eq i8 %v2_121a03, 0
  store i1 %v2_121a45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_121a03, i8* %arg1, align 1
  br i1 %v2_121a45, label %dec_label_pc_121b0, label %dec_label_pc_12198

dec_label_pc_12198:                               ; preds = %dec_label_pc_12190, %dec_label_pc_12198
  %v0_12198 = load i32, i32* @r1, align 4
  %v1_12198 = add i32 %v0_12198, 1
  store i32 %v1_12198, i32* @r1, align 4
  %v0_1219c = load i32, i32* %r2.global-to-local, align 4
  %v1_1219c = add i32 %v0_1219c, 1
  store i32 %v1_1219c, i32* %r2.global-to-local, align 4
  %v1_121a0 = inttoptr i32 %v1_12198 to i8*
  %v2_121a0 = load i8, i8* %v1_121a0, align 1
  %v2_121a4 = icmp eq i8 %v2_121a0, 0
  store i1 %v2_121a4, i1* %cpsr_z.global-to-local, align 1
  %v3_121a8 = inttoptr i32 %v1_1219c to i8*
  store i8 %v2_121a0, i8* %v3_121a8, align 1
  %v0_121ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_121ac, label %dec_label_pc_121b0, label %dec_label_pc_12198

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12198, %dec_label_pc_12190
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12198, { 1, 0 }
}

define i32 @function_121b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_121b4:
  %stack_var_-12 = alloca i32, align 4
  %v2_121bc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_121bc, i32* @r1, align 4
  %v0_121c0 = call i32 @function_16a8c()
  %v2_121c4 = icmp eq i32 %v0_121c0, 0
  %v4_121c8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_121c4, i32 -1, i32 %v4_121c8
  ret i32 %storemerge
}

define i32 @function_121dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_121dc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_121dc = load i32, i32* @r7, align 4
  store i32 %v3_121dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12204, label %dec_label_pc_121f4

dec_label_pc_121f4:                               ; preds = %dec_label_pc_121dc
  %v0_121f4 = call i32 @function_1207c()
  %v0_121f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_121f8 = sub i32 0, %v0_121f8
  %v2_121fc = inttoptr i32 %v0_121f4 to i32*
  store i32 %v1_121f8, i32* %v2_121fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12208.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12204

dec_label_pc_12204:                               ; preds = %dec_label_pc_121dc, %dec_label_pc_121f4
  %v2_12208 = phi i32 [ %v3_121dc, %dec_label_pc_121dc ], [ %v2_12208.pre, %dec_label_pc_121f4 ]
  %v0_12204 = phi i32 [ %arg1, %dec_label_pc_121dc ], [ -1, %dec_label_pc_121f4 ]
  store i32 %v2_12208, i32* @r7, align 4
  ret i32 %v0_12204

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12204, { 1, 0 }
}

define i32 @function_12214(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12214:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12214 = load i32, i32* @r7, align 4
  store i32 %v3_12214, i32* %stack_var_-8, align 4
  %v0_12220 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12220, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12220, -4095
  br i1 %tmp, label %dec_label_pc_12240, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_12214
  %v0_12230 = call i32 @function_1207c()
  %v0_12234 = load i32, i32* %r7.global-to-local, align 4
  %v1_12234 = sub i32 0, %v0_12234
  %v2_12238 = inttoptr i32 %v0_12230 to i32*
  store i32 %v1_12234, i32* %v2_12238, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12240.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12240

dec_label_pc_12240:                               ; preds = %dec_label_pc_12214, %dec_label_pc_12230
  %v1_12244 = phi i32 [ %v0_12220, %dec_label_pc_12214 ], [ -1, %dec_label_pc_12230 ]
  %v2_12240 = phi i32 [ %v3_12214, %dec_label_pc_12214 ], [ %v2_12240.pre, %dec_label_pc_12230 ]
  store i32 %v2_12240, i32* @r7, align 4
  ret i32 %v1_12244

; uselistorder directives
  uselistorder i32 %v0_12220, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12240, { 1, 0 }
}

define i32 @function_1224c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1224c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1224c = load i32, i32* @r7, align 4
  store i32 %v3_1224c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12274, label %dec_label_pc_12264

dec_label_pc_12264:                               ; preds = %dec_label_pc_1224c
  %v0_12264 = call i32 @function_1207c()
  %v0_12268 = load i32, i32* %r7.global-to-local, align 4
  %v1_12268 = sub i32 0, %v0_12268
  store i32 %v1_12268, i32* @r3, align 4
  %v2_1226c = inttoptr i32 %v0_12264 to i32*
  store i32 %v1_12268, i32* %v2_1226c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12278.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12274

dec_label_pc_12274:                               ; preds = %dec_label_pc_1224c, %dec_label_pc_12264
  %v2_12278 = phi i32 [ %v3_1224c, %dec_label_pc_1224c ], [ %v2_12278.pre, %dec_label_pc_12264 ]
  %v0_12274 = phi i32 [ %arg1, %dec_label_pc_1224c ], [ -1, %dec_label_pc_12264 ]
  store i32 %v2_12278, i32* @r7, align 4
  ret i32 %v0_12274

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12274, { 1, 0 }
}

define i32 @function_12284(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12284:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12284 = load i32, i32* @r7, align 4
  store i32 %v3_12284, i32* %stack_var_-8, align 4
  %v0_12290 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12290, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12290, -4095
  br i1 %tmp, label %dec_label_pc_122b0, label %dec_label_pc_122a0

dec_label_pc_122a0:                               ; preds = %dec_label_pc_12284
  %v0_122a0 = call i32 @function_1207c()
  %v0_122a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_122a4 = sub i32 0, %v0_122a4
  %v2_122a8 = inttoptr i32 %v0_122a0 to i32*
  store i32 %v1_122a4, i32* %v2_122a8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122b0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_122b0

dec_label_pc_122b0:                               ; preds = %dec_label_pc_12284, %dec_label_pc_122a0
  %v1_122b4 = phi i32 [ %v0_12290, %dec_label_pc_12284 ], [ -1, %dec_label_pc_122a0 ]
  %v2_122b0 = phi i32 [ %v3_12284, %dec_label_pc_12284 ], [ %v2_122b0.pre, %dec_label_pc_122a0 ]
  store i32 %v2_122b0, i32* @r7, align 4
  ret i32 %v1_122b4

; uselistorder directives
  uselistorder i32 %v0_12290, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122b0, { 1, 0 }
}

define i32 @function_122bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_122bc:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_122f0, label %dec_label_pc_122e0

dec_label_pc_122e0:                               ; preds = %dec_label_pc_122bc
  %v0_122e0 = call i32 @function_1207c()
  %v0_122e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_122e4 = sub i32 0, %v0_122e4
  %v2_122e8 = inttoptr i32 %v0_122e0 to i32*
  store i32 %v1_122e4, i32* %v2_122e8, align 4
  br label %dec_label_pc_122f0

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122bc, %dec_label_pc_122e0
  %v1_122f8 = phi i32 [ %arg1, %dec_label_pc_122bc ], [ -1, %dec_label_pc_122e0 ]
  ret i32 %v1_122f8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122f0, { 1, 0 }
}

define i32 @function_12300(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12300:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12300 = load i32, i32* @r7, align 4
  store i32 %v3_12300, i32* %stack_var_-8, align 4
  %v0_1230c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1230c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1230c, -4095
  br i1 %tmp, label %dec_label_pc_1232c, label %dec_label_pc_1231c

dec_label_pc_1231c:                               ; preds = %dec_label_pc_12300
  %v0_1231c = call i32 @function_1207c()
  %v0_12320 = load i32, i32* %r7.global-to-local, align 4
  %v1_12320 = sub i32 0, %v0_12320
  %v2_12324 = inttoptr i32 %v0_1231c to i32*
  store i32 %v1_12320, i32* %v2_12324, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1232c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %dec_label_pc_12300, %dec_label_pc_1231c
  %v1_12330 = phi i32 [ %v0_1230c, %dec_label_pc_12300 ], [ -1, %dec_label_pc_1231c ]
  %v2_1232c = phi i32 [ %v3_12300, %dec_label_pc_12300 ], [ %v2_1232c.pre, %dec_label_pc_1231c ]
  store i32 %v2_1232c, i32* @r7, align 4
  ret i32 %v1_12330

; uselistorder directives
  uselistorder i32 %v0_1230c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1232c, { 1, 0 }
}

define i32 @function_12334(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12334:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12334 = load i32, i32* @r7, align 4
  store i32 %v3_12334, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1235c, label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_12334
  %v0_1234c = call i32 @function_1207c()
  %v0_12350 = load i32, i32* %r7.global-to-local, align 4
  %v1_12350 = sub i32 0, %v0_12350
  %v2_12354 = inttoptr i32 %v0_1234c to i32*
  store i32 %v1_12350, i32* %v2_12354, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12360.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1235c

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12334, %dec_label_pc_1234c
  %v2_12360 = phi i32 [ %v3_12334, %dec_label_pc_12334 ], [ %v2_12360.pre, %dec_label_pc_1234c ]
  %v0_1235c = phi i32 [ %arg1, %dec_label_pc_12334 ], [ -1, %dec_label_pc_1234c ]
  store i32 %v2_12360, i32* @r7, align 4
  ret i32 %v0_1235c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1235c, { 1, 0 }
}

define i32 @function_1236c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1236c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1236c = load i32, i32* @r4, align 4
  store i32 %v3_1236c, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1239c, label %dec_label_pc_1238c

dec_label_pc_1238c:                               ; preds = %dec_label_pc_1236c
  %v0_1238c = call i32 @function_1207c()
  %v0_12390 = load i32, i32* %r4.global-to-local, align 4
  %v1_12390 = sub i32 0, %v0_12390
  %v2_12394 = inttoptr i32 %v0_1238c to i32*
  store i32 %v1_12390, i32* %v2_12394, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_123a0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1239c

dec_label_pc_1239c:                               ; preds = %dec_label_pc_1236c, %dec_label_pc_1238c
  %v2_123a0 = phi i32 [ %v3_1236c, %dec_label_pc_1236c ], [ %v2_123a0.pre, %dec_label_pc_1238c ]
  %v0_1239c = phi i32 [ %arg1, %dec_label_pc_1236c ], [ -1, %dec_label_pc_1238c ]
  store i32 %v2_123a0, i32* @r4, align 4
  ret i32 %v0_1239c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1239c, { 1, 0 }
}

define i32 @function_123a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_123a8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123a8 = load i32, i32* @r7, align 4
  store i32 %v3_123a8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_123d0, label %dec_label_pc_123c0

dec_label_pc_123c0:                               ; preds = %dec_label_pc_123a8
  %v0_123c0 = call i32 @function_1207c()
  %v0_123c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_123c4 = sub i32 0, %v0_123c4
  store i32 %v1_123c4, i32* @r3, align 4
  %v2_123c8 = inttoptr i32 %v0_123c0 to i32*
  store i32 %v1_123c4, i32* %v2_123c8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_123d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123d0

dec_label_pc_123d0:                               ; preds = %dec_label_pc_123a8, %dec_label_pc_123c0
  %v2_123d4 = phi i32 [ %v3_123a8, %dec_label_pc_123a8 ], [ %v2_123d4.pre, %dec_label_pc_123c0 ]
  %v0_123d0 = phi i32 [ %arg1, %dec_label_pc_123a8 ], [ -1, %dec_label_pc_123c0 ]
  store i32 %v2_123d4, i32* @r7, align 4
  ret i32 %v0_123d0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123d0, { 1, 0 }
}

define i32 @function_123e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_123e0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_123e0 = load i32, i32* @r4, align 4
  store i32 %v3_123e0, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12410, label %dec_label_pc_12400

dec_label_pc_12400:                               ; preds = %dec_label_pc_123e0
  %v0_12400 = call i32 @function_1207c()
  %v0_12404 = load i32, i32* %r4.global-to-local, align 4
  %v1_12404 = sub i32 0, %v0_12404
  %v2_12408 = inttoptr i32 %v0_12400 to i32*
  store i32 %v1_12404, i32* %v2_12408, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12414.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %dec_label_pc_123e0, %dec_label_pc_12400
  %v2_12414 = phi i32 [ %v3_123e0, %dec_label_pc_123e0 ], [ %v2_12414.pre, %dec_label_pc_12400 ]
  %v0_12410 = phi i32 [ %arg1, %dec_label_pc_123e0 ], [ -1, %dec_label_pc_12400 ]
  store i32 %v2_12414, i32* @r4, align 4
  ret i32 %v0_12410

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12410, { 1, 0 }
}

define i32 @function_12420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12420:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12454, label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_12420
  %v0_12444 = call i32 @function_1207c()
  %v0_12448 = load i32, i32* %r4.global-to-local, align 4
  %v1_12448 = sub i32 0, %v0_12448
  store i32 %v1_12448, i32* @r3, align 4
  %v2_1244c = inttoptr i32 %v0_12444 to i32*
  store i32 %v1_12448, i32* %v2_1244c, align 4
  br label %dec_label_pc_12454

dec_label_pc_12454:                               ; preds = %dec_label_pc_12420, %dec_label_pc_12444
  %v1_1245c = phi i32 [ %arg1, %dec_label_pc_12420 ], [ -1, %dec_label_pc_12444 ]
  ret i32 %v1_1245c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12454, { 1, 0 }
}

define i32 @function_12464(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12464:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12464 = load i32, i32* @r7, align 4
  store i32 %v3_12464, i32* %stack_var_-8, align 4
  %v0_12470 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12470, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12470, -4095
  br i1 %tmp, label %dec_label_pc_12490, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12464
  %v0_12480 = call i32 @function_1207c()
  %v0_12484 = load i32, i32* %r7.global-to-local, align 4
  %v1_12484 = sub i32 0, %v0_12484
  store i32 %v1_12484, i32* @r3, align 4
  %v2_12488 = inttoptr i32 %v0_12480 to i32*
  store i32 %v1_12484, i32* %v2_12488, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12490.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_12464, %dec_label_pc_12480
  %v1_12494 = phi i32 [ %v0_12470, %dec_label_pc_12464 ], [ -1, %dec_label_pc_12480 ]
  %v2_12490 = phi i32 [ %v3_12464, %dec_label_pc_12464 ], [ %v2_12490.pre, %dec_label_pc_12480 ]
  store i32 %v2_12490, i32* @r7, align 4
  ret i32 %v1_12494

; uselistorder directives
  uselistorder i32 %v0_12470, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12490, { 1, 0 }
}

define i32 @function_1249c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1249c:
  store i32 %arg1, i32* @r0, align 4
  %v3_1249c = load i32, i32* @r4, align 4
  %v0_124a4 = call i32 @function_118c0()
  %v2_124ac = call i32 @function_11a20(i32 %v0_124a4, i32 %arg1)
  store i32 %v3_1249c, i32* @r4, align 4
  ret i32 %v2_124ac

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_11a20, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ()* @function_118c0, { 0, 3, 2, 1 }
}

define i32 @function_124b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124b8:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_124d0, label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %dec_label_pc_124b8
  %v7_124cc = icmp slt i32 %arg1, 65
  br i1 %v7_124cc, label %dec_label_pc_124e4, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c8, %dec_label_pc_124b8
  %v0_124d0 = call i32 @function_1207c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_124dc = inttoptr i32 %v0_124d0 to i32*
  store i32 22, i32* %v2_124dc, align 4
  %v0_124ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124ec

dec_label_pc_124e4:                               ; preds = %dec_label_pc_124c8
  %v0_124e4 = call i32 @function_125ec()
  store i32 %v0_124e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124ec

dec_label_pc_124ec:                               ; preds = %dec_label_pc_124d0, %dec_label_pc_124e4
  %v0_124ec = phi i32 [ %v0_124ec.pre, %dec_label_pc_124d0 ], [ %v0_124e4, %dec_label_pc_124e4 ]
  ret i32 %v0_124ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124ec, { 1, 0 }
}

define i32 @function_124fc(i32* %arg1) local_unnamed_addr {
dec_label_pc_124fc:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_12504 = add i32 %tmp, 4
  %v3_12504 = inttoptr i32 %v2_12504 to i32*
  store i32 0, i32* %v3_12504, align 4
  %v1_12508 = load i32, i32* %r3.global-to-local, align 4
  %v2_12508 = inttoptr i32 %v1_12508 to i32*
  store i32 0, i32* %v2_12508, align 4
  ret i32 0
}

define i32 @function_12510(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12510:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12510 = load i32, i32* @r4, align 4
  store i32 %v3_12510, i32* %stack_var_-16, align 4
  %v6_12510 = load i32, i32* @r5, align 4
  %v9_12510 = load i32, i32* @r6, align 4
  %v7_12518 = icmp eq i32 %arg2, -1
  br i1 %v7_12518, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_12510
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_12510
  %v2_12520 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_1253c

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12544

dec_label_pc_1253c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_12540 = icmp slt i32 %arg1, 65
  br i1 %v7_12540, label %dec_label_pc_12558, label %dec_label_pc_12544

dec_label_pc_12544:                               ; preds = %.thread16, %dec_label_pc_1253c
  %v0_12544 = call i32 @function_1207c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12550 = inttoptr i32 %v0_12544 to i32*
  store i32 22, i32* %v2_12550, align 4
  %v0_125b0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_12558:                               ; preds = %dec_label_pc_1253c
  %v2_12558 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12558, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_12560 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12560, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_12570 = call i32 @function_125ec()
  %v0_12578 = load i32, i32* @r5, align 4
  %v2_12580 = call i32 @function_125c8(i32 ptrtoint (i32* @global_var_1a4a4.677 to i32), i32 %v0_12578)
  store i32 %v2_12520, i32* %r2.global-to-local, align 4
  %v0_12598 = load i32, i32* @r5, align 4
  %v3_125a0 = call i32 @function_149fc(i32 %v0_12598, i32 %v2_12558, i32 %v2_12520)
  %v1_125a4 = icmp slt i32 %v3_125a0, 0
  br i1 %v1_125a4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_12558
  %v5_125a8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_125a8, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_12558
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_12544, %bb32
  %v0_125b0 = phi i32 [ %v5_125a8, %bb31 ], [ %v0_125b0.pre, %dec_label_pc_12544 ], [ -1, %bb32 ]
  %v2_125b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_125b8, i32* @r4, align 4
  store i32 %v6_12510, i32* @r5, align 4
  store i32 %v9_12510, i32* @r6, align 4
  ret i32 %v0_125b0

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 ()* @function_125ec, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12544, { 1, 0 }
}

define i32 @function_125c0(i64* %arg1) local_unnamed_addr {
dec_label_pc_125c0:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_125c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_125c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_125c0
  %v4_125c0 = load i32, i32* @r4, align 4
  %v3_125c4 = mul i32 %v4_125c0, %v4_125c0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_125c0, %bb
  %v4_125c4 = phi i32 [ %tmp, %dec_label_pc_125c0 ], [ %v3_125c4, %bb ]
  ret i32 %v4_125c4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_125c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125c8:
  %v1_125c8 = add i32 %arg2, -1
  %v3_125cc = udiv i32 %v1_125c8, 32
  %v4_125d0 = mul nuw nsw i32 %v3_125cc, 4
  %v5_125d0 = add i32 %v4_125d0, %arg1
  %v6_125d0 = inttoptr i32 %v5_125d0 to i32*
  %v7_125d0 = load i32, i32* %v6_125d0, align 4
  %v1_125d4 = urem i32 %v1_125c8, 32
  %v7_125dc = shl i32 1, %v1_125d4
  %v8_125dc = and i32 %v7_125d0, %v7_125dc
  %v10_125dc = icmp ne i32 %v8_125dc, 0
  %. = zext i1 %v10_125dc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_125c8, { 1, 0 }
}

define i32 @function_125ec() local_unnamed_addr {
dec_label_pc_125ec:
  %v0_125ec = load i32, i32* @r1, align 4
  %v1_125ec = add i32 %v0_125ec, -1
  %v3_125f0 = udiv i32 %v1_125ec, 32
  %v0_125f4 = load i32, i32* @r0, align 4
  %v4_125f4 = mul nuw nsw i32 %v3_125f0, 4
  %v5_125f4 = add i32 %v0_125f4, %v4_125f4
  %v6_125f4 = inttoptr i32 %v5_125f4 to i32*
  %v7_125f4 = load i32, i32* %v6_125f4, align 4
  %v1_125f8 = urem i32 %v1_125ec, 32
  %v7_12600 = shl i32 1, %v1_125f8
  %v8_12600 = or i32 %v7_125f4, %v7_12600
  store i32 %v8_12600, i32* %v6_125f4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_125ec, { 1, 0 }
}

define i32 @function_12610(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12610:
  %v1_12610 = add i32 %arg2, -1
  %v3_12614 = udiv i32 %v1_12610, 32
  %v4_12618 = mul nuw nsw i32 %v3_12614, 4
  %v5_12618 = add i32 %v4_12618, %arg1
  %v6_12618 = inttoptr i32 %v5_12618 to i32*
  %v7_12618 = load i32, i32* %v6_12618, align 4
  %v1_1261c = urem i32 %v1_12610, 32
  %tmp = shl i32 -1, %v1_1261c
  %v8_12624 = add i32 %tmp, -1
  %v9_12624 = and i32 %v7_12618, %v8_12624
  store i32 %v9_12624, i32* %v6_12618, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12610, { 1, 0 }
}

define i32 @function_12634(i32 %arg1) local_unnamed_addr {
dec_label_pc_12634:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_12634 = udiv i32 %arg1, 256
  store i32 %v3_12634, i32* %r1.global-to-local, align 4
  %v2_12638 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_12638, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_12634
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_12634, %bb
  %v0_12644 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12638, i32 %v0_12644)
  %v0_12648 = load i32, i32* %r1.global-to-local, align 4
  %v1_12648 = add i32 %v0_12648, 1048320
  %v3_1264c = udiv i32 %v1_12648, 65536
  %v1_12650 = and i32 %v3_1264c, 8
  %v6_12654 = shl i32 %v0_12648, %v1_12650
  %v1_12658 = add i32 %v6_12654, 520192
  %v3_1265c = udiv i32 %v1_12658, 65536
  %v1_12660 = and i32 %v3_1265c, 4
  %v6_12664 = shl i32 %v6_12654, %v1_12660
  %v1_12668 = add i32 %v6_12664, 245760
  %v3_1266c = udiv i32 %v1_12668, 65536
  %v1_12670 = and i32 %v3_1266c, 2
  %v6_12674 = shl i32 %v6_12664, %v1_12670
  store i32 %v6_12674, i32* %r1.global-to-local, align 4
  %v1_12678 = sub nsw i32 13, %v1_12650
  %v2_1267c = sub nsw i32 %v1_12678, %v1_12660
  %v3_12680 = udiv i32 %v6_12674, 32768
  %v4_12680 = sub nuw nsw i32 -1, %v3_12680
  %v4_12684 = udiv i32 %v6_12674, 16384
  %v5_12684 = and i32 %v4_12684, %v4_12680
  %v2_12688 = sub nsw i32 %v2_1267c, %v1_12670
  %v2_1268c = add nsw i32 %v2_12688, %v5_12684
  %v1_12690 = add nsw i32 %v2_1268c, 6
  %v0_12694 = load i32, i32* %ip.global-to-local, align 4
  %v6_12694 = lshr i32 %v0_12694, %v1_12690
  %v3_12698 = mul nsw i32 %v2_1268c, 4
  %v1_1269c = add nsw i32 %v3_12698, 32
  %v1_126a0 = urem i32 %v6_12694, 4
  %v2_126a4 = or i32 %v1_126a0, %v1_1269c
  ret i32 %v2_126a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_126ac() local_unnamed_addr {
dec_label_pc_126ac:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_126ac = load i32, i32* @r4, align 4
  %v6_126ac = load i32, i32* @r5, align 4
  %v9_126ac = load i32, i32* @r6, align 4
  %v12_126ac = load i32, i32* @r7, align 4
  %v15_126ac = load i32, i32* @r8, align 4
  %v18_126ac = load i32, i32* @sb, align 4
  %v21_126ac = load i32, i32* @sl, align 4
  %v24_126ac = load i32, i32* @fp, align 4
  %v27_126ac = load i32, i32* @lr, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_126c0 = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_126c0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_126cc = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_126cc, i32* %r1.global-to-local, align 4
  %v0_126d0 = load i32, i32* @r0, align 4
  store i32 %v0_126d0, i32* @r5, align 4
  store i32 %v4_126c0, i32* %r2.global-to-local, align 4
  %v2_126d8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_126d8, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_126e4 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_126e4, i32* %ip.global-to-local, align 4
  store i32 75504, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_126e4)
  %v0_126f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_126f0, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_126fc = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 %v4_126fc, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_12708.683 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_126fc)
  %v0_12708 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_12708, -32
  br i1 %tmp, label %dec_label_pc_12724, label %dec_label_pc_12710

dec_label_pc_12710:                               ; preds = %dec_label_pc_126ac
  %v0_12710 = call i32 @function_1207c()
  store i32 %v0_12710, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_1271c = inttoptr i32 %v0_12710 to i32*
  store i32 12, i32* %v2_1271c, align 4
  br label %dec_label_pc_12fa0

dec_label_pc_12724:                               ; preds = %dec_label_pc_126ac
  %v1_12724 = add i32 %v0_12708, 11
  store i32 %v1_12724, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v2_12730 = icmp ugt i32 %v1_12724, 14
  %v7_12730 = icmp eq i32 %v1_12724, 15
  %v2_12734 = xor i1 %v7_12730, true
  %v3_12734 = and i1 %v2_12730, %v2_12734
  br i1 %v3_12734, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_12724
  %v5_12734 = and i32 %v1_12724, -8
  store i32 %v5_12734, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_12724, %bb
  %v4_12738 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12738, i32* @r0, align 4
  %v1_1273c = inttoptr i32 %v4_12738 to i32*
  %v2_1273c = load i32, i32* %v1_1273c, align 4
  store i32 %v2_1273c, i32* @r4, align 4
  %v2_12740 = xor i1 %v2_12730, true
  %v3_12740 = or i1 %v7_12730, %v2_12740
  br i1 %v3_12740, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_12744 = urem i32 %v2_1273c, 2
  %v2_12744 = icmp eq i32 %v1_12744, 0
  br i1 %v2_12744, label %dec_label_pc_1274c, label %dec_label_pc_1275c

dec_label_pc_1274c:                               ; preds = %bb140
  %v2_1274c = icmp eq i32 %v2_1273c, 0
  br i1 %v2_1274c, label %dec_label_pc_12754, label %dec_label_pc_12b38

dec_label_pc_12754:                               ; preds = %dec_label_pc_1274c
  %v0_12754 = call i32 @function_13564()
  store i32 %v0_12754, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b38

dec_label_pc_1275c:                               ; preds = %bb140
  %v0_1275c = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_1275c, %v2_1273c
  br i1 %tmp201, label %dec_label_pc_12784, label %dec_label_pc_12764

dec_label_pc_12764:                               ; preds = %dec_label_pc_1275c
  %v1_12764 = add i32 %v4_12738, -4
  store i32 %v1_12764, i32* %r1.global-to-local, align 4
  %v3_12768 = udiv i32 %v0_1275c, 8
  store i32 %v3_12768, i32* %r2.global-to-local, align 4
  %v4_1276c = mul nuw i32 %v3_12768, 4
  %v5_1276c = add i32 %v4_1276c, %v1_12764
  %v6_1276c = inttoptr i32 %v5_1276c to i32*
  %v7_1276c = load i32, i32* %v6_1276c, align 4
  store i32 %v7_1276c, i32* %r0.global-to-local, align 4
  %v2_12770 = icmp eq i32 %v7_1276c, 0
  br i1 %v2_12770, label %dec_label_pc_12784, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12764
  %v2_12774 = add i32 %v7_1276c, 8
  %v3_12774 = inttoptr i32 %v2_12774 to i32*
  %v4_12774 = load i32, i32* %v3_12774, align 4
  store i32 %v4_12774, i32* %r3.global-to-local, align 4
  store i32 %v2_12774, i32* %r0.global-to-local, align 4
  store i32 %v2_12774, i32* %r4.global-to-local, align 4
  store i32 %v4_12774, i32* %v6_1276c, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12784:                               ; preds = %dec_label_pc_12764, %dec_label_pc_1275c
  %tmp202 = icmp ugt i32 %v0_1275c, 255
  br i1 %tmp202, label %dec_label_pc_127d4, label %dec_label_pc_1278c

dec_label_pc_1278c:                               ; preds = %dec_label_pc_12784
  store i32 98320, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12794 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  %v3_12798 = udiv i32 %v0_1275c, 8
  store i32 %v3_12798, i32* @r7, align 4
  %v4_1279c = mul nuw i32 %v3_12798, 8
  %v5_1279c = add i32 %v4_12794, %v4_1279c
  store i32 %v5_1279c, i32* %r3.global-to-local, align 4
  %v1_127a0 = add i32 %v5_1279c, 44
  store i32 %v1_127a0, i32* %ip.global-to-local, align 4
  %v1_127a4 = add i32 %v5_1279c, 56
  %v2_127a4 = inttoptr i32 %v1_127a4 to i32*
  %v3_127a4 = load i32, i32* %v2_127a4, align 4
  store i32 %v3_127a4, i32* %r0.global-to-local, align 4
  %v9_127a8 = icmp eq i32 %v3_127a4, %v1_127a0
  br i1 %v9_127a8, label %dec_label_pc_12934, label %dec_label_pc_127b0

dec_label_pc_127b0:                               ; preds = %dec_label_pc_1278c
  %v2_127b0 = add i32 %v3_127a4, %v0_1275c
  store i32 %v2_127b0, i32* %r3.global-to-local, align 4
  %v1_127b4 = add i32 %v2_127b0, 4
  %v2_127b4 = inttoptr i32 %v1_127b4 to i32*
  %v3_127b4 = load i32, i32* %v2_127b4, align 4
  store i32 %v3_127b4, i32* %r2.global-to-local, align 4
  %v1_127b8 = add i32 %v3_127a4, 12
  %v2_127b8 = inttoptr i32 %v1_127b8 to i32*
  %v3_127b8 = load i32, i32* %v2_127b8, align 4
  store i32 %v3_127b8, i32* %r1.global-to-local, align 4
  %v1_127bc = or i32 %v3_127b4, 1
  store i32 %v1_127bc, i32* %r2.global-to-local, align 4
  %v1_127c0 = add i32 %v3_127a4, 8
  store i32 %v1_127c0, i32* %r4.global-to-local, align 4
  store i32 %v1_127bc, i32* %v2_127b4, align 4
  %v0_127c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_127c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_127c8 = add i32 %v1_127c8, 8
  %v3_127c8 = inttoptr i32 %v2_127c8 to i32*
  store i32 %v0_127c8, i32* %v3_127c8, align 4
  %v0_127cc = load i32, i32* %r1.global-to-local, align 4
  %v1_127cc = load i32, i32* %ip.global-to-local, align 4
  %v2_127cc = add i32 %v1_127cc, 12
  %v3_127cc = inttoptr i32 %v2_127cc to i32*
  store i32 %v0_127cc, i32* %v3_127cc, align 4
  br label %dec_label_pc_12f84

dec_label_pc_127d4:                               ; preds = %dec_label_pc_12784
  store i32 %v0_1275c, i32* %r0.global-to-local, align 4
  %v1_127d8 = call i32 @function_12634(i32 %v0_1275c)
  store i32 %v1_127d8, i32* %r0.global-to-local, align 4
  %v0_127dc = load i32, i32* @r4, align 4
  %v1_127dc = and i32 %v0_127dc, 2
  %v2_127dc = icmp eq i32 %v1_127dc, 0
  store i32 %v1_127d8, i32* @r7, align 4
  br i1 %v2_127dc, label %dec_label_pc_12934, label %dec_label_pc_127e8

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127d4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_127f0 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_127f0, i32* @r0, align 4
  %v0_127f4 = call i32 @function_13564()
  store i32 %v0_127f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12934

dec_label_pc_127fc:                               ; preds = %dec_label_pc_12948
  %v1_127fc = add i32 %v3_12948, 4
  %v2_127fc = inttoptr i32 %v1_127fc to i32*
  %v3_127fc = load i32, i32* %v2_127fc, align 4
  store i32 %v3_127fc, i32* %r3.global-to-local, align 4
  %v0_12800 = load i32, i32* @sl, align 4
  %v1_12804 = and i32 %v3_127fc, -4
  store i32 %v1_12804, i32* %r4.global-to-local, align 4
  %v1_12808 = add i32 %v3_12948, 12
  %v2_12808 = inttoptr i32 %v1_12808 to i32*
  %v3_12808 = load i32, i32* %v2_12808, align 4
  store i32 %v3_12808, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_12800, 255
  br i1 %tmp203, label %dec_label_pc_12864, label %dec_label_pc_12810

dec_label_pc_12810:                               ; preds = %dec_label_pc_127fc
  %v9_12810 = icmp eq i32 %v3_12808, %v0_12868
  br i1 %v9_12810, label %dec_label_pc_12818, label %dec_label_pc_12864

dec_label_pc_12818:                               ; preds = %dec_label_pc_12810
  %v0_12818 = load i32, i32* @sb, align 4
  %v1_12818 = add i32 %v0_12818, 48
  %v2_12818 = inttoptr i32 %v1_12818 to i32*
  %v3_12818 = load i32, i32* %v2_12818, align 4
  store i32 %v3_12818, i32* %r3.global-to-local, align 4
  %v9_1281c = icmp eq i32 %v3_12948, %v3_12818
  br i1 %v9_1281c, label %dec_label_pc_12824, label %dec_label_pc_12864

dec_label_pc_12824:                               ; preds = %dec_label_pc_12818
  %v1_12824 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_12804, %v1_12824
  br i1 %tmp204, label %dec_label_pc_1282c, label %dec_label_pc_12864

dec_label_pc_1282c:                               ; preds = %dec_label_pc_12824
  %v2_1282c = sub i32 %v1_12804, %v0_12800
  store i32 %v2_1282c, i32* %r2.global-to-local, align 4
  %v2_12830 = add i32 %v0_12800, %v3_12948
  store i32 %v2_12830, i32* %r3.global-to-local, align 4
  %v1_12834 = or i32 %v0_12800, 1
  store i32 %v1_12834, i32* %r0.global-to-local, align 4
  %v1_12838 = or i32 %v2_1282c, 1
  store i32 %v1_12838, i32* %r1.global-to-local, align 4
  %v1_1283c = add i32 %v3_12948, 8
  store i32 %v1_1283c, i32* %r4.global-to-local, align 4
  %v2_12840 = add i32 %v0_12868, 8
  %v3_12840 = inttoptr i32 %v2_12840 to i32*
  store i32 %v2_12830, i32* %v3_12840, align 4
  %v0_12844 = load i32, i32* %r3.global-to-local, align 4
  %v1_12844 = load i32, i32* %ip.global-to-local, align 4
  %v2_12844 = add i32 %v1_12844, 12
  %v3_12844 = inttoptr i32 %v2_12844 to i32*
  store i32 %v0_12844, i32* %v3_12844, align 4
  %v0_12848 = load i32, i32* %r0.global-to-local, align 4
  %v1_12848 = load i32, i32* @r6, align 4
  %v2_12848 = add i32 %v1_12848, 4
  %v3_12848 = inttoptr i32 %v2_12848 to i32*
  store i32 %v0_12848, i32* %v3_12848, align 4
  %v0_1284c = load i32, i32* %r3.global-to-local, align 4
  %v1_1284c = load i32, i32* @sb, align 4
  %v2_1284c = add i32 %v1_1284c, 48
  %v3_1284c = inttoptr i32 %v2_1284c to i32*
  store i32 %v0_1284c, i32* %v3_1284c, align 4
  %v0_12850 = load i32, i32* %r2.global-to-local, align 4
  %v1_12850 = load i32, i32* %r3.global-to-local, align 4
  %v3_12850 = add i32 %v1_12850, %v0_12850
  %v4_12850 = inttoptr i32 %v3_12850 to i32*
  store i32 %v0_12850, i32* %v4_12850, align 4
  %v0_12854 = load i32, i32* %r1.global-to-local, align 4
  %v1_12854 = load i32, i32* %r3.global-to-local, align 4
  %v2_12854 = add i32 %v1_12854, 4
  %v3_12854 = inttoptr i32 %v2_12854 to i32*
  store i32 %v0_12854, i32* %v3_12854, align 4
  %v0_12858 = load i32, i32* %ip.global-to-local, align 4
  %v1_12858 = load i32, i32* %r3.global-to-local, align 4
  %v2_12858 = add i32 %v1_12858, 12
  %v3_12858 = inttoptr i32 %v2_12858 to i32*
  store i32 %v0_12858, i32* %v3_12858, align 4
  %v0_1285c = load i32, i32* %ip.global-to-local, align 4
  %v1_1285c = load i32, i32* %r3.global-to-local, align 4
  %v2_1285c = add i32 %v1_1285c, 8
  %v3_1285c = inttoptr i32 %v2_1285c to i32*
  store i32 %v0_1285c, i32* %v3_1285c, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12864:                               ; preds = %dec_label_pc_12824, %dec_label_pc_12818, %dec_label_pc_12810, %dec_label_pc_127fc
  %v9_12864 = icmp eq i32 %v1_12804, %v0_12800
  %v2_12868 = add i32 %v3_12808, 8
  %v3_12868 = inttoptr i32 %v2_12868 to i32*
  store i32 %v0_12868, i32* %v3_12868, align 4
  %v0_1286c = load i32, i32* %ip.global-to-local, align 4
  %v1_1286c = load i32, i32* %r5.global-to-local, align 4
  %v2_1286c = add i32 %v1_1286c, 12
  %v3_1286c = inttoptr i32 %v2_1286c to i32*
  store i32 %v0_1286c, i32* %v3_1286c, align 4
  br i1 %v9_12864, label %dec_label_pc_129c4.loopexit, label %dec_label_pc_12880

dec_label_pc_12880:                               ; preds = %dec_label_pc_12864
  %v0_12880 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_12880, 255
  br i1 %tmp205, label %dec_label_pc_128a4, label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_12880
  store i32 98320, i32* %r2.global-to-local, align 4
  %v1_1288c = load i32, i32* %r8.global-to-local, align 4
  %v2_1288c = add i32 %v1_1288c, 98320
  %v3_1288c = inttoptr i32 %v2_1288c to i32*
  %v4_1288c = load i32, i32* %v3_1288c, align 4
  %v3_12890 = udiv i32 %v0_12880, 8
  store i32 %v3_12890, i32* %r0.global-to-local, align 4
  %v4_12894 = mul nuw i32 %v3_12890, 8
  %v5_12894 = add i32 %v4_1288c, %v4_12894
  store i32 %v5_12894, i32* %r3.global-to-local, align 4
  %v1_12898 = add i32 %v5_12894, 44
  store i32 %v1_12898, i32* %ip.global-to-local, align 4
  %v1_1289c = add i32 %v5_12894, 52
  %v2_1289c = inttoptr i32 %v1_1289c to i32*
  %v3_1289c = load i32, i32* %v2_1289c, align 4
  store i32 %v3_1289c, i32* @lr, align 4
  br label %dec_label_pc_128fc

dec_label_pc_128a4:                               ; preds = %dec_label_pc_12880
  store i32 %v0_12880, i32* %r0.global-to-local, align 4
  %v1_128a8 = call i32 @function_12634(i32 %v0_12880)
  store i32 %v1_128a8, i32* %r0.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v1_128b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_128b0 = add i32 %v1_128b0, 98320
  %v3_128b0 = inttoptr i32 %v2_128b0 to i32*
  %v4_128b0 = load i32, i32* %v3_128b0, align 4
  %v4_128b4 = mul i32 %v1_128a8, 8
  %v5_128b4 = add i32 %v4_128b0, %v4_128b4
  store i32 %v5_128b4, i32* %r3.global-to-local, align 4
  %v1_128b8 = add i32 %v5_128b4, 44
  store i32 %v1_128b8, i32* %ip.global-to-local, align 4
  %v1_128bc = add i32 %v5_128b4, 52
  %v2_128bc = inttoptr i32 %v1_128bc to i32*
  %v3_128bc = load i32, i32* %v2_128bc, align 4
  store i32 %v3_128bc, i32* @lr, align 4
  %v9_128c0 = icmp eq i32 %v3_128bc, %v1_128b8
  br i1 %v9_128c0, label %dec_label_pc_128fc, label %dec_label_pc_128c8

dec_label_pc_128c8:                               ; preds = %dec_label_pc_128a4
  %v1_128c8 = add i32 %v5_128b4, 56
  %v2_128c8 = inttoptr i32 %v1_128c8 to i32*
  %v3_128c8 = load i32, i32* %v2_128c8, align 4
  store i32 %v3_128c8, i32* %r1.global-to-local, align 4
  %v1_128cc = add i32 %v3_128c8, 4
  %v2_128cc = inttoptr i32 %v1_128cc to i32*
  %v3_128cc = load i32, i32* %v2_128cc, align 4
  store i32 %v3_128cc, i32* %r3.global-to-local, align 4
  %v0_128d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_128d0 = icmp ult i32 %v0_128d0, %v3_128cc
  br i1 %v3_128d0, label %.thread, label %dec_label_pc_128ec.preheader

.thread:                                          ; preds = %dec_label_pc_128c8
  store i32 %v1_128b8, i32* @lr, align 4
  store i32 %v3_128c8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_128fc

dec_label_pc_128ec.preheader:                     ; preds = %dec_label_pc_128c8
  %v2_128d8 = or i32 %v0_128d0, 1
  store i32 %v2_128d8, i32* %r2.global-to-local, align 4
  %v1_128ec179 = add i32 %v3_128bc, 4
  %v2_128ec180 = inttoptr i32 %v1_128ec179 to i32*
  %v3_128ec181 = load i32, i32* %v2_128ec180, align 4
  store i32 %v3_128ec181, i32* %r3.global-to-local, align 4
  %v3_128f0183 = icmp ult i32 %v2_128d8, %v3_128ec181
  br i1 %v3_128f0183, label %dec_label_pc_128e8, label %dec_label_pc_128f8

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128ec.preheader, %dec_label_pc_128e8
  %v0_128f8184 = phi i32 [ %v3_128e8, %dec_label_pc_128e8 ], [ %v3_128bc, %dec_label_pc_128ec.preheader ]
  %v1_128e8 = add i32 %v0_128f8184, 8
  %v2_128e8 = inttoptr i32 %v1_128e8 to i32*
  %v3_128e8 = load i32, i32* %v2_128e8, align 4
  store i32 %v3_128e8, i32* @lr, align 4
  %v1_128ec = add i32 %v3_128e8, 4
  %v2_128ec = inttoptr i32 %v1_128ec to i32*
  %v3_128ec = load i32, i32* %v2_128ec, align 4
  store i32 %v3_128ec, i32* %r3.global-to-local, align 4
  %v3_128f0 = icmp ult i32 %v2_128d8, %v3_128ec
  br i1 %v3_128f0, label %dec_label_pc_128e8, label %dec_label_pc_128f8

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128e8, %dec_label_pc_128ec.preheader
  %v0_128f8.lcssa = phi i32 [ %v3_128bc, %dec_label_pc_128ec.preheader ], [ %v3_128e8, %dec_label_pc_128e8 ]
  %v1_128f8 = add i32 %v0_128f8.lcssa, 12
  %v2_128f8 = inttoptr i32 %v1_128f8 to i32*
  %v3_128f8 = load i32, i32* %v2_128f8, align 4
  store i32 %v3_128f8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %.thread, %dec_label_pc_128a4, %dec_label_pc_12888, %dec_label_pc_128f8
  %v0_1291c = phi i32 [ %v1_128b8, %dec_label_pc_128a4 ], [ %v1_12898, %dec_label_pc_12888 ], [ %v3_128f8, %dec_label_pc_128f8 ], [ %v3_128c8, %.thread ]
  %v0_12910 = phi i32 [ %v1_128a8, %dec_label_pc_128a4 ], [ %v3_12890, %dec_label_pc_12888 ], [ %v1_128a8, %dec_label_pc_128f8 ], [ %v1_128a8, %.thread ]
  %v1_12900 = phi i32 [ %v1_128b0, %dec_label_pc_128a4 ], [ %v1_1288c, %dec_label_pc_12888 ], [ %v1_128b0, %dec_label_pc_128f8 ], [ %v1_128b0, %.thread ]
  store i32 98320, i32* %r2.global-to-local, align 4
  %v2_12900 = add i32 %v1_12900, 98320
  %v3_12900 = inttoptr i32 %v2_12900 to i32*
  %v4_12900 = load i32, i32* %v3_12900, align 4
  %v3_12904 = sdiv i32 %v0_12910, 32
  store i32 %v3_12904, i32* %r3.global-to-local, align 4
  %v4_12908 = mul nsw i32 %v3_12904, 4
  %v5_12908 = add i32 %v4_12900, %v4_12908
  store i32 %v5_12908, i32* %r1.global-to-local, align 4
  %v1_1290c = add i32 %v5_12908, 820
  %v2_1290c = inttoptr i32 %v1_1290c to i32*
  %v3_1290c = load i32, i32* %v2_1290c, align 4
  %v1_12910 = urem i32 %v0_12910, 32
  store i32 %v1_12910, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_12918 = shl i32 1, %v1_12910
  %v8_12918 = or i32 %v3_1290c, %v7_12918
  store i32 %v8_12918, i32* %r3.global-to-local, align 4
  %v1_1291c = load i32, i32* @r6, align 4
  %v2_1291c = add i32 %v1_1291c, 12
  %v3_1291c = inttoptr i32 %v2_1291c to i32*
  store i32 %v0_1291c, i32* %v3_1291c, align 4
  %v0_12920 = load i32, i32* @lr, align 4
  %v1_12920 = load i32, i32* @r6, align 4
  %v2_12920 = add i32 %v1_12920, 8
  %v3_12920 = inttoptr i32 %v2_12920 to i32*
  store i32 %v0_12920, i32* %v3_12920, align 4
  %v0_12924 = load i32, i32* %r3.global-to-local, align 4
  %v1_12924 = load i32, i32* %r1.global-to-local, align 4
  %v2_12924 = add i32 %v1_12924, 820
  %v3_12924 = inttoptr i32 %v2_12924 to i32*
  store i32 %v0_12924, i32* %v3_12924, align 4
  %v0_12928 = load i32, i32* @r6, align 4
  %v1_12928 = load i32, i32* @lr, align 4
  %v2_12928 = add i32 %v1_12928, 12
  %v3_12928 = inttoptr i32 %v2_12928 to i32*
  store i32 %v0_12928, i32* %v3_12928, align 4
  %v0_1292c = load i32, i32* @r6, align 4
  %v1_1292c = load i32, i32* %ip.global-to-local, align 4
  %v2_1292c = add i32 %v1_1292c, 8
  %v3_1292c = inttoptr i32 %v2_1292c to i32*
  store i32 %v0_1292c, i32* %v3_1292c, align 4
  %v0_12948.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12948

dec_label_pc_12934:                               ; preds = %dec_label_pc_127d4, %dec_label_pc_1278c, %dec_label_pc_127e8
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_1293c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_1293c, i32* @sb, align 4
  %v0_12940 = load i32, i32* @sl, align 4
  %v1_12940 = add i32 %v0_12940, 16
  store i32 %v1_12940, i32* @fp, align 4
  %v1_12944 = add i32 %v4_1293c, 52
  store i32 %v1_12944, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %dec_label_pc_128fc, %dec_label_pc_12934
  %v0_12868 = phi i32 [ %v0_12948.pre, %dec_label_pc_128fc ], [ %v1_12944, %dec_label_pc_12934 ]
  %v1_12948 = add i32 %v0_12868, 12
  %v2_12948 = inttoptr i32 %v1_12948 to i32*
  %v3_12948 = load i32, i32* %v2_12948, align 4
  store i32 %v3_12948, i32* @r6, align 4
  %v9_1294c = icmp eq i32 %v3_12948, %v0_12868
  br i1 %v9_1294c, label %dec_label_pc_12954, label %dec_label_pc_127fc

dec_label_pc_12954:                               ; preds = %dec_label_pc_12948
  %v0_12954 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_12954, 256
  %v0_12a0c.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_12954.dec_label_pc_12a0c_crit_edge, label %dec_label_pc_1295c

dec_label_pc_12954.dec_label_pc_12a0c_crit_edge:  ; preds = %dec_label_pc_12954
  %.pre200 = mul i32 %v0_12a0c.pre, 8
  br label %dec_label_pc_12a0c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_12954
  %v4_1295c = mul i32 %v0_12a0c.pre, 8
  %v5_1295c = add i32 %v4_1295c, %v0_12868
  store i32 %v5_1295c, i32* %r3.global-to-local, align 4
  %v1_12960 = add i32 %v5_1295c, -8
  store i32 %v1_12960, i32* %r1.global-to-local, align 4
  %v1_12964 = add i32 %v5_1295c, 4
  %v2_12964 = inttoptr i32 %v1_12964 to i32*
  %storemerge.pre = load i32, i32* %v2_12964, align 4
  br label %dec_label_pc_12a04

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12a04
  %v1_1296c = add i32 %v1_12994, 4
  %v2_1296c = inttoptr i32 %v1_1296c to i32*
  %v3_1296c = load i32, i32* %v2_1296c, align 4
  store i32 %v3_1296c, i32* %r3.global-to-local, align 4
  %v1_12970 = and i32 %v3_1296c, -4
  store i32 %v1_12970, i32* %r2.global-to-local, align 4
  %v3_12974 = icmp ult i32 %v1_12970, %v0_12954
  %v1_12978 = add i32 %v1_12994, 12
  %v2_12978 = inttoptr i32 %v1_12978 to i32*
  %v3_12978 = load i32, i32* %v2_12978, align 4
  store i32 %v3_12978, i32* %r0.global-to-local, align 4
  br i1 %v3_12974, label %dec_label_pc_12a04, label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_1296c
  %v1_12980 = add i32 %v1_12994, 8
  %v2_12980 = inttoptr i32 %v1_12980 to i32*
  %v3_12980 = load i32, i32* %v2_12980, align 4
  store i32 %v3_12980, i32* %r1.global-to-local, align 4
  %v1_12984 = add i32 %v3_12980, 12
  %v2_12984 = inttoptr i32 %v1_12984 to i32*
  %v3_12984 = load i32, i32* %v2_12984, align 4
  store i32 %v3_12984, i32* %r3.global-to-local, align 4
  %v9_12988 = icmp eq i32 %v3_12984, %v1_12994
  br i1 %v9_12988, label %dec_label_pc_12990, label %dec_label_pc_1299c

dec_label_pc_12990:                               ; preds = %dec_label_pc_12980
  %v1_12990 = add i32 %v3_12978, 8
  %v2_12990 = inttoptr i32 %v1_12990 to i32*
  %v3_12990 = load i32, i32* %v2_12990, align 4
  store i32 %v3_12990, i32* %r3.global-to-local, align 4
  %v9_12994 = icmp eq i32 %v3_12990, %v1_12994
  br i1 %v9_12994, label %dec_label_pc_129a0, label %dec_label_pc_1299c

dec_label_pc_1299c:                               ; preds = %dec_label_pc_12980, %dec_label_pc_12990
  %v0_1299c = call i32 @function_13994()
  store i32 %v0_1299c, i32* %r0.global-to-local, align 4
  %v0_129a0.pre = load i32, i32* @sl, align 4
  %v1_129a0.pre = load i32, i32* @r2, align 4
  %v0_129a8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12990, %dec_label_pc_1299c
  %v1_129a8 = phi i32 [ %v3_12978, %dec_label_pc_12990 ], [ %v0_1299c, %dec_label_pc_1299c ]
  %v0_129a8 = phi i32 [ %v3_12980, %dec_label_pc_12990 ], [ %v0_129a8.pre, %dec_label_pc_1299c ]
  %v1_129a0 = phi i32 [ %v1_12970, %dec_label_pc_12990 ], [ %v1_129a0.pre, %dec_label_pc_1299c ]
  %v0_129a0 = phi i32 [ %v0_12954, %dec_label_pc_12990 ], [ %v0_129a0.pre, %dec_label_pc_1299c ]
  %v2_129a0 = sub i32 %v1_129a0, %v0_129a0
  store i32 %v2_129a0, i32* %lr.global-to-local, align 4
  %v2_129a8 = add i32 %v1_129a8, 8
  %v3_129a8 = inttoptr i32 %v2_129a8 to i32*
  store i32 %v0_129a8, i32* %v3_129a8, align 4
  %v0_129ac = load i32, i32* %r0.global-to-local, align 4
  %v1_129ac = load i32, i32* %r1.global-to-local, align 4
  %v2_129ac = add i32 %v1_129ac, 12
  %v3_129ac = inttoptr i32 %v2_129ac to i32*
  store i32 %v0_129ac, i32* %v3_129ac, align 4
  %v0_129b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_129b0 = add i32 %v0_129b0, 8
  store i32 %v1_129b0, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_129a0, 15
  br i1 %tmp207, label %dec_label_pc_129d0, label %dec_label_pc_129b8

dec_label_pc_129b8:                               ; preds = %dec_label_pc_129a0
  %v1_129b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_129b8 = add i32 %v1_129b8, %v0_129b0
  store i32 %v2_129b8, i32* %r2.global-to-local, align 4
  %v1_129bc = add i32 %v2_129b8, 4
  %v2_129bc = inttoptr i32 %v1_129bc to i32*
  %v3_129bc = load i32, i32* %v2_129bc, align 4
  store i32 %v3_129bc, i32* %r3.global-to-local, align 4
  store i32 %v1_129b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129c4

dec_label_pc_129c4.loopexit:                      ; preds = %dec_label_pc_12864
  %v1_12870 = load i32, i32* @r6, align 4
  %v2_12870 = load i32, i32* @sl, align 4
  %v3_12870 = add i32 %v2_12870, %v1_12870
  store i32 %v3_12870, i32* %r2.global-to-local, align 4
  %v2_12874 = add i32 %v3_12870, 4
  %v3_12874 = inttoptr i32 %v2_12874 to i32*
  %v4_12874 = load i32, i32* %v3_12874, align 4
  store i32 %v4_12874, i32* %r3.global-to-local, align 4
  %v2_12878 = add i32 %v1_12870, 8
  store i32 %v2_12878, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %.dec_label_pc_129c4_crit_edge, %dec_label_pc_129c4.loopexit, %dec_label_pc_129b8
  %v1_129c8 = phi i32 [ %v4_12aec, %.dec_label_pc_129c4_crit_edge ], [ %v3_12870, %dec_label_pc_129c4.loopexit ], [ %v2_129b8, %dec_label_pc_129b8 ]
  %v0_129c4 = phi i32 [ %v7_12aec, %.dec_label_pc_129c4_crit_edge ], [ %v4_12874, %dec_label_pc_129c4.loopexit ], [ %v3_129bc, %dec_label_pc_129b8 ]
  %v1_129c4 = or i32 %v0_129c4, 1
  store i32 %v1_129c4, i32* %r3.global-to-local, align 4
  %v2_129c8 = add i32 %v1_129c8, 4
  %v3_129c8 = inttoptr i32 %v2_129c8 to i32*
  store i32 %v1_129c4, i32* %v3_129c8, align 4
  br label %dec_label_pc_12f84

dec_label_pc_129d0:                               ; preds = %dec_label_pc_129a0
  %v1_129d0 = load i32, i32* @sl, align 4
  %v2_129d0 = add i32 %v1_129d0, %v0_129b0
  store i32 %v2_129d0, i32* %r2.global-to-local, align 4
  %v1_129d4 = or i32 %v1_129d0, 1
  store i32 %v1_129d4, i32* %r3.global-to-local, align 4
  %v0_129d8 = load i32, i32* %lr.global-to-local, align 4
  %v1_129d8 = or i32 %v0_129d8, 1
  store i32 %v1_129d8, i32* %r1.global-to-local, align 4
  store i32 %v1_129b0, i32* %r4.global-to-local, align 4
  %v2_129e0 = add i32 %v0_129b0, 4
  %v3_129e0 = inttoptr i32 %v2_129e0 to i32*
  store i32 %v1_129d4, i32* %v3_129e0, align 4
  %v0_129e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_129e4 = load i32, i32* @r6, align 4
  %v2_129e4 = add i32 %v1_129e4, 8
  %v3_129e4 = inttoptr i32 %v2_129e4 to i32*
  store i32 %v0_129e4, i32* %v3_129e4, align 4
  %v0_129e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_129e8 = load i32, i32* @r6, align 4
  %v2_129e8 = add i32 %v1_129e8, 12
  %v3_129e8 = inttoptr i32 %v2_129e8 to i32*
  store i32 %v0_129e8, i32* %v3_129e8, align 4
  %v0_129ec = load i32, i32* %lr.global-to-local, align 4
  %v1_129ec = load i32, i32* %r2.global-to-local, align 4
  %v3_129ec = add i32 %v1_129ec, %v0_129ec
  %v4_129ec = inttoptr i32 %v3_129ec to i32*
  store i32 %v0_129ec, i32* %v4_129ec, align 4
  %v0_129f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_129f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_129f0 = add i32 %v1_129f0, 4
  %v3_129f0 = inttoptr i32 %v2_129f0 to i32*
  store i32 %v0_129f0, i32* %v3_129f0, align 4
  %v0_129f4 = load i32, i32* @r6, align 4
  %v1_129f4 = load i32, i32* %r2.global-to-local, align 4
  %v2_129f4 = add i32 %v1_129f4, 12
  %v3_129f4 = inttoptr i32 %v2_129f4 to i32*
  store i32 %v0_129f4, i32* %v3_129f4, align 4
  %v0_129f8 = load i32, i32* @r6, align 4
  %v1_129f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_129f8 = add i32 %v1_129f8, 8
  %v3_129f8 = inttoptr i32 %v2_129f8 to i32*
  store i32 %v0_129f8, i32* %v3_129f8, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12a04:                               ; preds = %dec_label_pc_1296c, %dec_label_pc_1295c
  %v1_12994 = phi i32 [ %storemerge.pre, %dec_label_pc_1295c ], [ %v3_12978, %dec_label_pc_1296c ]
  store i32 %v1_12994, i32* %ip.global-to-local, align 4
  %v9_12a04 = icmp eq i32 %v1_12994, %v1_12960
  br i1 %v9_12a04, label %dec_label_pc_12a0c.loopexit, label %dec_label_pc_1296c

dec_label_pc_12a0c.loopexit:                      ; preds = %dec_label_pc_12a04
  br label %dec_label_pc_12a0c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_12954.dec_label_pc_12a0c_crit_edge, %dec_label_pc_12a0c.loopexit
  %v4_12a3c.pre-phi = phi i32 [ %.pre200, %dec_label_pc_12954.dec_label_pc_12a0c_crit_edge ], [ %v4_1295c, %dec_label_pc_12a0c.loopexit ]
  %v1_12a0c = add i32 %v0_12a0c.pre, 1
  store i32 %v1_12a0c, i32* %r2.global-to-local, align 4
  %v1_12a10 = urem i32 %v1_12a0c, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v6_12a1c = shl i32 1, %v1_12a10
  store i32 %v6_12a1c, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12a24 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12a24, i32* %r3.global-to-local, align 4
  %v3_12a28 = udiv i32 %v1_12a0c, 32
  store i32 %v3_12a28, i32* @r5, align 4
  %v4_12a2c = mul nuw nsw i32 %v3_12a28, 4
  %v5_12a2c = add i32 %v4_12a24, %v4_12a2c
  store i32 %v5_12a2c, i32* %r2.global-to-local, align 4
  %v1_12a30 = add i32 %v5_12a2c, 820
  %v2_12a30 = inttoptr i32 %v1_12a30 to i32*
  %v3_12a30 = load i32, i32* %v2_12a30, align 4
  store i32 %v3_12a30, i32* @r4, align 4
  %v1_12a34 = add i32 %v4_12a24, 52
  store i32 %v1_12a34, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_12a3c = add i32 %v1_12a34, %v4_12a3c.pre-phi
  store i32 %v5_12a3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12aa8, %dec_label_pc_12a0c
  %v1_12a48 = phi i32 [ %v1_12a48.pre, %dec_label_pc_12aa8 ], [ %v3_12a30, %dec_label_pc_12a0c ]
  %v0_12a48 = phi i32 [ %v0_12a40.pre, %dec_label_pc_12aa8 ], [ %v6_12a1c, %dec_label_pc_12a0c ]
  %v1_12a40 = sub i32 1, %v0_12a48
  %v2_12a40 = icmp ult i32 %v0_12a48, 2
  %v1_12a40. = select i1 %v2_12a40, i32 %v1_12a40, i32 0
  store i32 %v1_12a40., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_12a48, %v1_12a48
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_12a40
  %v5_12a4c = or i32 %v1_12a40., 1
  store i32 %v5_12a4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12a58.preheader

bb142:                                            ; preds = %dec_label_pc_12a40
  %v2_12a50 = icmp eq i32 %v1_12a40., 0
  br i1 %v2_12a50, label %.dec_label_pc_12a94.preheader_crit_edge, label %dec_label_pc_12a58.preheader

.dec_label_pc_12a94.preheader_crit_edge:          ; preds = %bb142
  %v0_12a8c54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12a94.preheader

dec_label_pc_12a58.preheader:                     ; preds = %bb142, %.thread12
  %v0_12a58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12a58

dec_label_pc_12a58:                               ; preds = %dec_label_pc_12a58.preheader, %dec_label_pc_12a64
  %v0_12a58 = phi i32 [ %v0_12a58.pre, %dec_label_pc_12a58.preheader ], [ %v1_12a58, %dec_label_pc_12a64 ]
  %v1_12a58 = add i32 %v0_12a58, 1
  store i32 %v1_12a58, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_12a58, 2
  br i1 %tmp208, label %dec_label_pc_12b38.loopexit, label %dec_label_pc_12a64

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a58
  store i32 98320, i32* %r3.global-to-local, align 4
  %v1_12a68 = load i32, i32* @r8, align 4
  %v2_12a68 = add i32 %v1_12a68, 98320
  %v3_12a68 = inttoptr i32 %v2_12a68 to i32*
  %v4_12a68 = load i32, i32* %v3_12a68, align 4
  store i32 %v4_12a68, i32* %r2.global-to-local, align 4
  %v4_12a6c = mul i32 %v1_12a58, 4
  %v5_12a6c = add i32 %v4_12a68, %v4_12a6c
  store i32 %v5_12a6c, i32* %r3.global-to-local, align 4
  %v1_12a70 = add i32 %v5_12a6c, 820
  %v2_12a70 = inttoptr i32 %v1_12a70 to i32*
  %v3_12a70 = load i32, i32* %v2_12a70, align 4
  store i32 %v3_12a70, i32* @r4, align 4
  %v2_12a74 = icmp eq i32 %v3_12a70, 0
  br i1 %v2_12a74, label %dec_label_pc_12a58, label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a64
  %v4_12a7c = mul i32 %v1_12a58, 256
  %v5_12a7c = add i32 %v4_12a68, %v4_12a7c
  store i32 %v5_12a7c, i32* %r3.global-to-local, align 4
  %v1_12a80 = add i32 %v5_12a7c, 44
  store i32 %v1_12a80, i32* %r0.global-to-local, align 4
  %v0_12a84 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12a84, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a94.preheader

dec_label_pc_12a94.preheader:                     ; preds = %.dec_label_pc_12a94.preheader_crit_edge, %dec_label_pc_12a7c
  %v0_12a8c54 = phi i32 [ %v1_12a80, %dec_label_pc_12a7c ], [ %v0_12a8c54.pre, %.dec_label_pc_12a94.preheader_crit_edge ]
  %v0_12ab0 = phi i32 [ %v3_12a70, %dec_label_pc_12a7c ], [ %v1_12a48, %.dec_label_pc_12a94.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12a84, %dec_label_pc_12a7c ], [ %v0_12a48, %.dec_label_pc_12a94.preheader_crit_edge ]
  %v2_12a9451 = and i32 %ip.promoted, %v0_12ab0
  %v4_12a9453 = icmp eq i32 %v2_12a9451, 0
  br i1 %v4_12a9453, label %dec_label_pc_12a8c, label %dec_label_pc_12a9c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a94.preheader, %dec_label_pc_12a8c
  %v2_12a9056 = phi i32 [ %v2_12a90, %dec_label_pc_12a8c ], [ %ip.promoted, %dec_label_pc_12a94.preheader ]
  %v0_12a8c55 = phi i32 [ %v1_12a8c, %dec_label_pc_12a8c ], [ %v0_12a8c54, %dec_label_pc_12a94.preheader ]
  %v1_12a8c = add i32 %v0_12a8c55, 8
  %v2_12a90 = mul i32 %v2_12a9056, 2
  %v2_12a94 = and i32 %v2_12a90, %v0_12ab0
  %v4_12a94 = icmp eq i32 %v2_12a94, 0
  br i1 %v4_12a94, label %dec_label_pc_12a8c, label %dec_label_pc_12a94.dec_label_pc_12a9c_crit_edge

dec_label_pc_12a94.dec_label_pc_12a9c_crit_edge:  ; preds = %dec_label_pc_12a8c
  store i32 %v1_12a8c, i32* %r0.global-to-local, align 4
  store i32 %v2_12a90, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12a9c

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a94.dec_label_pc_12a9c_crit_edge, %dec_label_pc_12a94.preheader
  %v0_12abc = phi i32 [ %v2_12a90, %dec_label_pc_12a94.dec_label_pc_12a9c_crit_edge ], [ %ip.promoted, %dec_label_pc_12a94.preheader ]
  %v0_12ae0 = phi i32 [ %v1_12a8c, %dec_label_pc_12a94.dec_label_pc_12a9c_crit_edge ], [ %v0_12a8c54, %dec_label_pc_12a94.preheader ]
  %v1_12a9c = add i32 %v0_12ae0, 12
  %v2_12a9c = inttoptr i32 %v1_12a9c to i32*
  %v3_12a9c = load i32, i32* %v2_12a9c, align 4
  store i32 %v3_12a9c, i32* @lr, align 4
  %v9_12aa0 = icmp eq i32 %v3_12a9c, %v0_12ae0
  br i1 %v9_12aa0, label %dec_label_pc_12aa8, label %dec_label_pc_12ac8

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a9c
  store i32 98320, i32* %r0.global-to-local, align 4
  %v1_12aac = load i32, i32* @r8, align 4
  %v2_12aac = add i32 %v1_12aac, 98320
  %v3_12aac = inttoptr i32 %v2_12aac to i32*
  %v4_12aac = load i32, i32* %v3_12aac, align 4
  %v2_12ab0 = sub i32 -1, %v0_12abc
  %v3_12ab0 = and i32 %v0_12ab0, %v2_12ab0
  store i32 %v3_12ab0, i32* @r4, align 4
  %v1_12ab4 = load i32, i32* @r5, align 4
  %v4_12ab4 = mul i32 %v1_12ab4, 4
  %v5_12ab4 = add i32 %v4_12ab4, %v4_12aac
  store i32 %v5_12ab4, i32* %r3.global-to-local, align 4
  %v1_12ab8 = add i32 %v0_12ae0, 8
  store i32 %v1_12ab8, i32* %r0.global-to-local, align 4
  %v2_12abc = mul i32 %v0_12abc, 2
  store i32 %v2_12abc, i32* %ip.global-to-local, align 4
  %v2_12ac0 = add i32 %v5_12ab4, 820
  %v3_12ac0 = inttoptr i32 %v2_12ac0 to i32*
  store i32 %v3_12ab0, i32* %v3_12ac0, align 4
  %v0_12a40.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_12a48.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12a40

dec_label_pc_12ac8:                               ; preds = %dec_label_pc_12a9c
  %v1_12ac8 = add i32 %v3_12a9c, 4
  %v2_12ac8 = inttoptr i32 %v1_12ac8 to i32*
  %v3_12ac8 = load i32, i32* %v2_12ac8, align 4
  store i32 %v3_12ac8, i32* %r3.global-to-local, align 4
  %v1_12acc = and i32 %v3_12ac8, -4
  store i32 %v1_12acc, i32* %r2.global-to-local, align 4
  %v0_12ad0 = load i32, i32* @sl, align 4
  %v2_12ad0 = sub i32 %v1_12acc, %v0_12ad0
  store i32 %v2_12ad0, i32* %ip.global-to-local, align 4
  %v1_12ad4 = add i32 %v3_12a9c, 12
  %v2_12ad4 = inttoptr i32 %v1_12ad4 to i32*
  %v3_12ad4 = load i32, i32* %v2_12ad4, align 4
  store i32 %v3_12ad4, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_12ad0, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_12ac8
  %v6_12adc = add i32 %v1_12acc, %v3_12a9c
  store i32 %v6_12adc, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_12ac8, %bb143
  %v2_12ae0 = add i32 %v3_12ad4, 8
  %v3_12ae0 = inttoptr i32 %v2_12ae0 to i32*
  store i32 %v0_12ae0, i32* %v3_12ae0, align 4
  %v0_12ae4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12ae4 = load i32, i32* %r0.global-to-local, align 4
  %v2_12ae4 = add i32 %v1_12ae4, 12
  %v3_12ae4 = inttoptr i32 %v2_12ae4 to i32*
  store i32 %v0_12ae4, i32* %v3_12ae4, align 4
  %v4_12ae8 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_129c4_crit_edge, label %dec_label_pc_12af4

.dec_label_pc_129c4_crit_edge:                    ; preds = %bb144
  %v5_12ae8 = add i32 %v4_12ae8, 8
  store i32 %v5_12ae8, i32* %r4.global-to-local, align 4
  %v4_12aec = load i32, i32* %r2.global-to-local, align 4
  %v5_12aec = add i32 %v4_12aec, 4
  %v6_12aec = inttoptr i32 %v5_12aec to i32*
  %v7_12aec = load i32, i32* %v6_12aec, align 4
  store i32 %v7_12aec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_129c4

dec_label_pc_12af4:                               ; preds = %bb144
  %v1_12af4 = load i32, i32* @sl, align 4
  %v2_12af4 = add i32 %v1_12af4, %v4_12ae8
  store i32 %v2_12af4, i32* %r1.global-to-local, align 4
  %v1_12afc = load i32, i32* @r6, align 4
  %v2_12afc = add i32 %v1_12afc, 8
  %v3_12afc = inttoptr i32 %v2_12afc to i32*
  store i32 %v2_12af4, i32* %v3_12afc, align 4
  %v0_12b00 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b00 = load i32, i32* @r6, align 4
  %v2_12b00 = add i32 %v1_12b00, 12
  %v3_12b00 = inttoptr i32 %v2_12b00 to i32*
  store i32 %v0_12b00, i32* %v3_12b00, align 4
  %v0_12b04 = load i32, i32* @r6, align 4
  %v1_12b04 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b04 = add i32 %v1_12b04, 8
  %v3_12b04 = inttoptr i32 %v2_12b04 to i32*
  store i32 %v0_12b04, i32* %v3_12b04, align 4
  %v0_12b08 = load i32, i32* @r6, align 4
  %v1_12b08 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b08 = add i32 %v1_12b08, 12
  %v3_12b08 = inttoptr i32 %v2_12b08 to i32*
  store i32 %v0_12b08, i32* %v3_12b08, align 4
  %tmp210 = icmp ult i32 %v1_12af4, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_12af4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v8_12b14 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v8_12b14, i32* %r3.global-to-local, align 4
  %v4_12b18 = load i32, i32* %r1.global-to-local, align 4
  %v6_12b18 = add i32 %v8_12b14, 48
  %v7_12b18 = inttoptr i32 %v6_12b18 to i32*
  store i32 %v4_12b18, i32* %v7_12b18, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_12af4, %bb145
  %v0_12b1c = load i32, i32* @sl, align 4
  %v1_12b1c = or i32 %v0_12b1c, 1
  store i32 %v1_12b1c, i32* %r2.global-to-local, align 4
  %v0_12b20 = load i32, i32* %ip.global-to-local, align 4
  %v1_12b20 = or i32 %v0_12b20, 1
  store i32 %v1_12b20, i32* %r3.global-to-local, align 4
  %v0_12b24 = load i32, i32* @lr, align 4
  %v1_12b24 = add i32 %v0_12b24, 8
  store i32 %v1_12b24, i32* %r4.global-to-local, align 4
  %v2_12b28 = add i32 %v0_12b24, 4
  %v3_12b28 = inttoptr i32 %v2_12b28 to i32*
  store i32 %v1_12b1c, i32* %v3_12b28, align 4
  %v0_12b2c = load i32, i32* %ip.global-to-local, align 4
  %v1_12b2c = load i32, i32* %r1.global-to-local, align 4
  %v3_12b2c = add i32 %v1_12b2c, %v0_12b2c
  %v4_12b2c = inttoptr i32 %v3_12b2c to i32*
  store i32 %v0_12b2c, i32* %v4_12b2c, align 4
  %v0_12b30 = load i32, i32* %r3.global-to-local, align 4
  %v1_12b30 = load i32, i32* %r1.global-to-local, align 4
  %v2_12b30 = add i32 %v1_12b30, 4
  %v3_12b30 = inttoptr i32 %v2_12b30 to i32*
  store i32 %v0_12b30, i32* %v3_12b30, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12b38.loopexit:                      ; preds = %dec_label_pc_12a58
  br label %dec_label_pc_12b38

dec_label_pc_12b38:                               ; preds = %dec_label_pc_12b38.loopexit, %dec_label_pc_1274c, %dec_label_pc_12754
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_12b40 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12b40, i32* @r0, align 4
  %v1_12b44 = add i32 %v4_12b40, 44
  %v2_12b44 = inttoptr i32 %v1_12b44 to i32*
  %v3_12b44 = load i32, i32* %v2_12b44, align 4
  store i32 %v3_12b44, i32* %ip.global-to-local, align 4
  %v1_12b48 = add i32 %v3_12b44, 4
  %v2_12b48 = inttoptr i32 %v1_12b48 to i32*
  %v3_12b48 = load i32, i32* %v2_12b48, align 4
  %v0_12b4c = load i32, i32* @sl, align 4
  %v1_12b4c = add i32 %v0_12b4c, 16
  store i32 %v1_12b4c, i32* %r1.global-to-local, align 4
  %v1_12b50 = and i32 %v3_12b48, -4
  store i32 %v1_12b50, i32* %r3.global-to-local, align 4
  %v3_12b54 = icmp ult i32 %v1_12b50, %v1_12b4c
  br i1 %v3_12b54, label %dec_label_pc_12b84, label %dec_label_pc_12b60

dec_label_pc_12b60:                               ; preds = %dec_label_pc_12b38
  %v2_12b60 = sub i32 %v1_12b50, %v0_12b4c
  %v2_12b64 = add i32 %v0_12b4c, %v3_12b44
  store i32 %v2_12b64, i32* %r1.global-to-local, align 4
  %v1_12b68 = or i32 %v2_12b60, 1
  store i32 %v1_12b68, i32* %r3.global-to-local, align 4
  %v1_12b6c = or i32 %v0_12b4c, 1
  store i32 %v1_12b6c, i32* %r2.global-to-local, align 4
  %v1_12b70 = add i32 %v3_12b44, 8
  store i32 %v1_12b70, i32* %r4.global-to-local, align 4
  store i32 %v1_12b6c, i32* %v2_12b48, align 4
  %v0_12b78 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b78 = load i32, i32* @r0, align 4
  %v2_12b78 = add i32 %v1_12b78, 44
  %v3_12b78 = inttoptr i32 %v2_12b78 to i32*
  store i32 %v0_12b78, i32* %v3_12b78, align 4
  %v0_12b7c = load i32, i32* %r3.global-to-local, align 4
  %v1_12b7c = load i32, i32* %r1.global-to-local, align 4
  %v2_12b7c = add i32 %v1_12b7c, 4
  %v3_12b7c = inttoptr i32 %v2_12b7c to i32*
  store i32 %v0_12b7c, i32* %v3_12b7c, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12b84:                               ; preds = %dec_label_pc_12b38
  %v1_12b84 = inttoptr i32 %v4_12b40 to i32*
  %v2_12b84 = load i32, i32* %v1_12b84, align 4
  store i32 %v2_12b84, i32* %r3.global-to-local, align 4
  %v1_12b88 = and i32 %v2_12b84, 2
  store i32 %v1_12b88, i32* %ip.global-to-local, align 4
  %v2_12b88 = icmp eq i32 %v1_12b88, 0
  %v1_12b8c = add i32 %v4_12b40, 860
  %v2_12b8c = inttoptr i32 %v1_12b8c to i32*
  %v3_12b8c = load i32, i32* %v2_12b8c, align 4
  store i32 %v3_12b8c, i32* %r1.global-to-local, align 4
  br i1 %v2_12b88, label %dec_label_pc_12ba4, label %dec_label_pc_12b94

dec_label_pc_12b94:                               ; preds = %dec_label_pc_12b84
  %v0_12b94 = call i32 @function_13564()
  %v0_12b98 = load i32, i32* @sl, align 4
  %v1_12b98 = add i32 %v0_12b98, -7
  store i32 %v1_12b98, i32* @r0, align 4
  %v0_12b9c = call i32 @function_126ac()
  store i32 %v0_12b9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f80

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12b84
  %v1_12ba4 = add i32 %v4_12b40, 844
  %v2_12ba4 = inttoptr i32 %v1_12ba4 to i32*
  %v3_12ba4 = load i32, i32* %v2_12ba4, align 4
  store i32 %v3_12ba4, i32* %r3.global-to-local, align 4
  %v3_12ba8 = icmp ult i32 %v0_12b4c, %v3_12ba4
  %v1_12bac = add i32 %v3_12b8c, -1
  store i32 %v1_12bac, i32* %sb.global-to-local, align 4
  br i1 %v3_12ba8, label %dec_label_pc_12c80, label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12ba4
  %v1_12bb4 = add i32 %v4_12b40, 852
  %v2_12bb4 = inttoptr i32 %v1_12bb4 to i32*
  %v3_12bb4 = load i32, i32* %v2_12bb4, align 4
  store i32 %v3_12bb4, i32* %r2.global-to-local, align 4
  %v1_12bb8 = add i32 %v4_12b40, 848
  %v2_12bb8 = inttoptr i32 %v1_12bb8 to i32*
  %v3_12bb8 = load i32, i32* %v2_12bb8, align 4
  store i32 %v3_12bb8, i32* %r3.global-to-local, align 4
  %v6_12bc0 = icmp slt i32 %v3_12bb8, %v3_12bb4
  br i1 %v6_12bc0, label %dec_label_pc_12bc4, label %dec_label_pc_12c80

dec_label_pc_12bc4:                               ; preds = %dec_label_pc_12bb4
  %v1_12bc4 = add i32 %v0_12b4c, 10
  %v2_12bc8 = add i32 %v1_12bc4, %v3_12b8c
  store i32 %v2_12bc8, i32* %r3.global-to-local, align 4
  %v2_12bcc = sub i32 0, %v3_12b8c
  %v3_12bcc = and i32 %v2_12bc8, %v2_12bcc
  store i32 %v3_12bcc, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_12bcc, %v0_12b4c
  br i1 %tmp211, label %dec_label_pc_12bd8, label %dec_label_pc_12c80

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12bc4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12bcc, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12bf0 = call i32 @function_14994(i32 0, i32 %v3_12bcc, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12bf0, i32* %r0.global-to-local, align 4
  %v7_12bf4 = icmp eq i32 %v6_12bf0, -1
  br i1 %v7_12bf4, label %dec_label_pc_12bd8.dec_label_pc_12c80_crit_edge, label %dec_label_pc_12bfc

dec_label_pc_12bd8.dec_label_pc_12c80_crit_edge:  ; preds = %dec_label_pc_12bd8
  %v1_12ca4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12c80

dec_label_pc_12bfc:                               ; preds = %dec_label_pc_12bd8
  %v1_12bfc = urem i32 %v6_12bf0, 8
  store i32 %v1_12bfc, i32* %r2.global-to-local, align 4
  %v2_12bfc = icmp eq i32 %v1_12bfc, 0
  br i1 %v2_12bfc, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_12bfc
  %v2_12c00 = sub nsw i32 8, %v1_12bfc
  store i32 %v2_12c00, i32* %r3.global-to-local, align 4
  %v2_12c04 = load i32, i32* @r4, align 4
  %v3_12c04 = sub i32 %v2_12c04, %v2_12c00
  %v3_12c08 = add i32 %v2_12c00, %v6_12bf0
  store i32 %v3_12c08, i32* %lr.global-to-local, align 4
  %v2_12c10 = or i32 %v3_12c04, 2
  store i32 %v2_12c10, i32* %r2.global-to-local, align 4
  %v5_12c18 = inttoptr i32 %v3_12c08 to i32*
  store i32 %v2_12c00, i32* %v5_12c18, align 4
  %v1_12c1c = load i32, i32* %r2.global-to-local, align 4
  %v2_12c1c = load i32, i32* %lr.global-to-local, align 4
  %v3_12c1c = add i32 %v2_12c1c, 4
  %v4_12c1c = inttoptr i32 %v3_12c1c to i32*
  store i32 %v1_12c1c, i32* %v4_12c1c, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_12bfc
  store i32 %v6_12bf0, i32* %lr.global-to-local, align 4
  %v1_12c1447 = load i32, i32* @r4, align 4
  %v2_12c1448 = or i32 %v1_12c1447, 2
  store i32 %v2_12c1448, i32* %r3.global-to-local, align 4
  %v3_12c20 = inttoptr i32 %v6_12bf0 to i32*
  store i32 0, i32* %v3_12c20, align 4
  %v1_12c24 = load i32, i32* %r3.global-to-local, align 4
  %v2_12c24 = load i32, i32* %lr.global-to-local, align 4
  %v3_12c24 = add i32 %v2_12c24, 4
  %v4_12c24 = inttoptr i32 %v3_12c24 to i32*
  store i32 %v1_12c24, i32* %v4_12c24, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 98320, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12c30 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12c30, i32* %ip.global-to-local, align 4
  %v1_12c34 = add i32 %v4_12c30, 848
  %v2_12c34 = inttoptr i32 %v1_12c34 to i32*
  %v3_12c34 = load i32, i32* %v2_12c34, align 4
  store i32 %v3_12c34, i32* %r3.global-to-local, align 4
  %v1_12c38 = add i32 %v4_12c30, 856
  %v2_12c38 = inttoptr i32 %v1_12c38 to i32*
  %v3_12c38 = load i32, i32* %v2_12c38, align 4
  store i32 %v3_12c38, i32* %r2.global-to-local, align 4
  %v1_12c3c = add i32 %v3_12c34, 1
  store i32 %v1_12c3c, i32* %r3.global-to-local, align 4
  %v7_12c44 = icmp sgt i32 %v1_12c3c, %v3_12c38
  br i1 %v7_12c44, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_12c3c, i32* %v2_12c38, align 4
  %v0_12c48.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12c48.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_12c48 = phi i32 [ %v4_12c30, %.thread27 ], [ %v1_12c48.pre, %bb147 ]
  %v0_12c48 = phi i32 [ %v1_12c3c, %.thread27 ], [ %v0_12c48.pre, %bb147 ]
  %v2_12c48 = add i32 %v1_12c48, 848
  %v3_12c48 = inttoptr i32 %v2_12c48 to i32*
  store i32 %v0_12c48, i32* %v3_12c48, align 4
  %v0_12c4c = load i32, i32* %ip.global-to-local, align 4
  %v1_12c4c = add i32 %v0_12c4c, 868
  %v2_12c4c = inttoptr i32 %v1_12c4c to i32*
  %v3_12c4c = load i32, i32* %v2_12c4c, align 4
  store i32 %v3_12c4c, i32* %r3.global-to-local, align 4
  %v1_12c50 = add i32 %v0_12c4c, 880
  %v2_12c50 = inttoptr i32 %v1_12c50 to i32*
  %v3_12c50 = load i32, i32* %v2_12c50, align 4
  store i32 %v3_12c50, i32* %r2.global-to-local, align 4
  %v0_12c54 = load i32, i32* @r4, align 4
  %v2_12c54 = add i32 %v0_12c54, %v3_12c4c
  store i32 %v2_12c54, i32* %r1.global-to-local, align 4
  %v1_12c58 = add i32 %v0_12c4c, 872
  %v2_12c58 = inttoptr i32 %v1_12c58 to i32*
  %v3_12c58 = load i32, i32* %v2_12c58, align 4
  store i32 %v3_12c58, i32* %r3.global-to-local, align 4
  %v1_12c60 = add i32 %v0_12c4c, 884
  %v2_12c60 = inttoptr i32 %v1_12c60 to i32*
  %v3_12c60 = load i32, i32* %v2_12c60, align 4
  store i32 %v3_12c60, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_12c54, %v3_12c50
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_12c54, i32* %v2_12c50, align 4
  %v0_12c68.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12c68.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_12c68 = phi i32 [ %v0_12c4c, %bb148 ], [ %v1_12c68.pre, %bb149 ]
  %v0_12c68 = phi i32 [ %v2_12c54, %bb148 ], [ %v0_12c68.pre, %bb149 ]
  %v2_12c68 = add i32 %v1_12c68, 868
  %v3_12c68 = inttoptr i32 %v2_12c68 to i32*
  store i32 %v0_12c68, i32* %v3_12c68, align 4
  %v0_12c6c = load i32, i32* %r1.global-to-local, align 4
  %v1_12c6c = load i32, i32* %r3.global-to-local, align 4
  %v2_12c6c = add i32 %v1_12c6c, %v0_12c6c
  store i32 %v2_12c6c, i32* %r1.global-to-local, align 4
  %v1_12c70 = load i32, i32* %r2.global-to-local, align 4
  %v0_12c74 = load i32, i32* %lr.global-to-local, align 4
  %v1_12c74 = add i32 %v0_12c74, 8
  store i32 %v1_12c74, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_12c6c, %v1_12c70
  br i1 %tmp213, label %bb151, label %dec_label_pc_12f80

bb151:                                            ; preds = %bb150
  %v5_12c78 = load i32, i32* %ip.global-to-local, align 4
  %v6_12c78 = add i32 %v5_12c78, 884
  %v7_12c78 = inttoptr i32 %v6_12c78 to i32*
  store i32 %v2_12c6c, i32* %v7_12c78, align 4
  br label %dec_label_pc_12f80

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12bc4, %dec_label_pc_12ba4, %dec_label_pc_12bd8.dec_label_pc_12c80_crit_edge, %dec_label_pc_12bb4
  %v1_12ca4 = phi i32 [ %v1_12ca4.pre, %dec_label_pc_12bd8.dec_label_pc_12c80_crit_edge ], [ %v0_12b4c, %dec_label_pc_12bb4 ], [ %v0_12b4c, %dec_label_pc_12ba4 ], [ %v0_12b4c, %dec_label_pc_12bc4 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_12c88 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12c88, i32* %r3.global-to-local, align 4
  %v1_12c8c = add i32 %v4_12c88, 44
  %v2_12c8c = inttoptr i32 %v1_12c8c to i32*
  %v3_12c8c = load i32, i32* %v2_12c8c, align 4
  store i32 %v3_12c8c, i32* %r0.global-to-local, align 4
  %v1_12c90 = add i32 %v4_12c88, 864
  %v2_12c90 = inttoptr i32 %v1_12c90 to i32*
  %v3_12c90 = load i32, i32* %v2_12c90, align 4
  store i32 %v3_12c90, i32* %r2.global-to-local, align 4
  %v1_12c94 = add i32 %v4_12c88, 840
  %v2_12c94 = inttoptr i32 %v1_12c94 to i32*
  %v3_12c94 = load i32, i32* %v2_12c94, align 4
  store i32 %v3_12c94, i32* %r3.global-to-local, align 4
  %v1_12c98 = add i32 %v3_12c8c, 4
  %v2_12c98 = inttoptr i32 %v1_12c98 to i32*
  %v3_12c98 = load i32, i32* %v2_12c98, align 4
  store i32 %v3_12c98, i32* %r1.global-to-local, align 4
  %v1_12ca0 = urem i32 %v3_12c90, 2
  %v2_12ca0 = icmp eq i32 %v1_12ca0, 0
  %v1_12c9c = add i32 %v1_12ca4, 16
  %v2_12ca4 = add i32 %v1_12c9c, %v3_12c94
  store i32 %v2_12ca4, i32* %r3.global-to-local, align 4
  %v1_12ca8 = and i32 %v3_12c98, -4
  store i32 %v1_12ca8, i32* @r8, align 4
  br i1 %v2_12ca0, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_12c80
  %v3_12cac = sub i32 %v2_12ca4, %v1_12ca8
  store i32 %v3_12cac, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_12c80, %bb152
  %v0_12cb0 = phi i32 [ %v2_12ca4, %dec_label_pc_12c80 ], [ %v3_12cac, %bb152 ]
  %v1_12cb0 = load i32, i32* %sb.global-to-local, align 4
  %v2_12cb0 = add i32 %v1_12cb0, %v0_12cb0
  store i32 %v2_12cb0, i32* %r3.global-to-local, align 4
  %v1_12cb4 = sub i32 -1, %v1_12cb0
  store i32 %v1_12cb4, i32* %fp.global-to-local, align 4
  %v2_12cb8 = and i32 %v2_12cb0, %v1_12cb4
  store i32 %v2_12cb8, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_12cb8, 1
  br i1 %tmp154, label %dec_label_pc_12cdc, label %dec_label_pc_12cc8

dec_label_pc_12cc8:                               ; preds = %bb153
  store i32 %v2_12cb8, i32* %r0.global-to-local, align 4
  %v1_12ccc = call i32 @function_14c20(i32 %v2_12cb8)
  store i32 %v1_12ccc, i32* %r0.global-to-local, align 4
  %v3_12cd0 = icmp eq i32 %v1_12ccc, -1
  store i32 %v1_12ccc, i32* @r4, align 4
  br i1 %v3_12cd0, label %dec_label_pc_12cdc, label %dec_label_pc_12d48

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12cc8, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_12ce4 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12ce4, i32* %r6.global-to-local, align 4
  %v1_12ce8 = add i32 %v4_12ce4, 864
  %v2_12ce8 = inttoptr i32 %v1_12ce8 to i32*
  %v3_12ce8 = load i32, i32* %v2_12ce8, align 4
  store i32 %v3_12ce8, i32* %r3.global-to-local, align 4
  %v1_12cec = urem i32 %v3_12ce8, 2
  %v2_12cec = icmp eq i32 %v1_12cec, 0
  br i1 %v2_12cec, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_12cdc
  %v1_12cf0 = load i32, i32* @r8, align 4
  %v2_12cf0 = load i32, i32* %sb.global-to-local, align 4
  %v3_12cf0 = add i32 %v2_12cf0, %v1_12cf0
  %v2_12cf4 = load i32, i32* @r5, align 4
  %v3_12cf4 = add i32 %v3_12cf0, %v2_12cf4
  store i32 %v3_12cf4, i32* %r3.global-to-local, align 4
  %v2_12cf8 = load i32, i32* %fp.global-to-local, align 4
  %v3_12cf8 = and i32 %v2_12cf8, %v3_12cf4
  store i32 %v3_12cf8, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_12cdc
  %v0_12cfc.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_12cfc = phi i32 [ %v0_12cfc.pr, %.thread29thread-pre-split ], [ %v3_12cf8, %bb155 ]
  %v2_12cfc = icmp ugt i32 %v0_12cfc, 1048575
  br i1 %v2_12cfc, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_12d14 = phi i32 [ %v0_12cfc, %.thread29 ], [ 1048576, %bb156 ]
  %v1_12d04 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_12d14, %v1_12d04
  br i1 %tmp214, label %dec_label_pc_12d0c, label %dec_label_pc_12f70

dec_label_pc_12d0c:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12d14, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12d28 = call i32 @function_14994(i32 0, i32 %v0_12d14, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12d28, i32* %r0.global-to-local, align 4
  %v3_12d2c = icmp eq i32 %v6_12d28, -1
  %v8_12d2c = icmp eq i32 %v6_12d28, -1
  store i32 %v6_12d28, i32* @r4, align 4
  br i1 %v8_12d2c, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_12d0c
  %v1_12d34 = load i32, i32* %r6.global-to-local, align 4
  %v2_12d34 = add i32 %v1_12d34, 864
  %v3_12d34 = inttoptr i32 %v2_12d34 to i32*
  %v4_12d34 = load i32, i32* %v3_12d34, align 4
  %v2_12d38 = load i32, i32* @r5, align 4
  %v3_12d38 = add i32 %v2_12d38, %v6_12d28
  store i32 %v3_12d38, i32* %r0.global-to-local, align 4
  %v2_12d3c = and i32 %v4_12d34, -2
  store i32 %v2_12d3c, i32* %r3.global-to-local, align 4
  store i32 %v2_12d3c, i32* %v3_12d34, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_12d0c, %bb158
  br i1 %v3_12d2c, label %dec_label_pc_12d48, label %dec_label_pc_12d4c

dec_label_pc_12d48:                               ; preds = %.thread32, %dec_label_pc_12cc8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12d4c

dec_label_pc_12d4c:                               ; preds = %.thread32, %dec_label_pc_12d48
  %v0_12d4c = load i32, i32* @r4, align 4
  %v7_12d4c = icmp eq i32 %v0_12d4c, -1
  br i1 %v7_12d4c, label %dec_label_pc_12f70, label %dec_label_pc_12d54

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d4c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_12d5c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12d5c, i32* %ip.global-to-local, align 4
  store i32 %v3_12c8c, i32* %r2.global-to-local, align 4
  %v1_12d64 = add i32 %v4_12d5c, 872
  %v2_12d64 = inttoptr i32 %v1_12d64 to i32*
  %v3_12d64 = load i32, i32* %v2_12d64, align 4
  %v1_12d68 = load i32, i32* @r8, align 4
  %v2_12d68 = add i32 %v1_12d68, %v3_12c8c
  store i32 %v2_12d68, i32* %r1.global-to-local, align 4
  %v0_12d6c = load i32, i32* @r5, align 4
  %v2_12d6c = add i32 %v0_12d6c, %v3_12d64
  store i32 %v2_12d6c, i32* %r3.global-to-local, align 4
  %v9_12d70 = icmp eq i32 %v0_12d4c, %v2_12d68
  br i1 %v9_12d70, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_12d54
  store i32 %v2_12d6c, i32* %v2_12d64, align 4
  br label %dec_label_pc_12d8c

bb159:                                            ; preds = %dec_label_pc_12d54
  %v1_12d74 = load i32, i32* %r0.global-to-local, align 4
  %v8_12d74 = icmp eq i32 %v1_12d74, -1
  store i32 %v2_12d6c, i32* %v2_12d64, align 4
  br i1 %v8_12d74, label %.thread34, label %dec_label_pc_12d8c

.thread34:                                        ; preds = %bb159
  %v1_12d7c = load i32, i32* @r5, align 4
  %v2_12d7c = load i32, i32* @r8, align 4
  %v3_12d7c = add i32 %v2_12d7c, %v1_12d7c
  %v2_12d80 = or i32 %v3_12d7c, 1
  store i32 %v2_12d80, i32* %r3.global-to-local, align 4
  %v2_12d84 = load i32, i32* %r2.global-to-local, align 4
  %v3_12d84 = add i32 %v2_12d84, 4
  %v4_12d84 = inttoptr i32 %v3_12d84 to i32*
  store i32 %v2_12d80, i32* %v4_12d84, align 4
  br label %dec_label_pc_12f04

dec_label_pc_12d8c:                               ; preds = %bb159, %.thread122
  %v0_12d90.pr = load i32, i32* @r8, align 4
  %v0_12d8c = load i32, i32* %ip.global-to-local, align 4
  %v1_12d8c = add i32 %v0_12d8c, 864
  %v2_12d8c = inttoptr i32 %v1_12d8c to i32*
  %v3_12d8c = load i32, i32* %v2_12d8c, align 4
  store i32 %v3_12d8c, i32* %r2.global-to-local, align 4
  %v2_12d90 = icmp eq i32 %v0_12d90.pr, 0
  br i1 %v2_12d90, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_12d8c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_12d8c
  %v2_12d98 = urem i32 %v3_12d8c, 2
  store i32 %v2_12d98, i32* %r3.global-to-local, align 4
  %v2_12d9c = icmp eq i32 %v2_12d98, 0
  br i1 %v2_12d9c, label %.thread40, label %dec_label_pc_12da4

dec_label_pc_12da4:                               ; preds = %.thread36
  %v0_12da4 = load i32, i32* @r4, align 4
  %v1_12da4 = load i32, i32* %r1.global-to-local, align 4
  %v3_12da4 = icmp ult i32 %v0_12da4, %v1_12da4
  br i1 %v3_12da4, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_12da4
  %v2_12da8 = and i32 %v3_12d8c, -2
  store i32 %v2_12da8, i32* %r3.global-to-local, align 4
  store i32 %v2_12da8, i32* %v2_12d8c, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_12da4, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v4_12db8 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12db8, i32* @r7, align 4
  %v1_12dbc = add i32 %v4_12db8, 864
  %v2_12dbc = inttoptr i32 %v1_12dbc to i32*
  %v3_12dbc = load i32, i32* %v2_12dbc, align 4
  store i32 %v3_12dbc, i32* %r3.global-to-local, align 4
  %v1_12dc0 = urem i32 %v3_12dbc, 2
  store i32 %v1_12dc0, i32* @r6, align 4
  %v2_12dc0 = icmp eq i32 %v1_12dc0, 0
  br i1 %v2_12dc0, label %dec_label_pc_12e54, label %dec_label_pc_12dc8

dec_label_pc_12dc8:                               ; preds = %.thread40
  %v0_12dc8 = load i32, i32* @r8, align 4
  %v2_12dc8 = icmp eq i32 %v0_12dc8, 0
  br i1 %v2_12dc8, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_12dc8
  %v2_12dcc = add i32 %v4_12db8, 872
  %v3_12dcc = inttoptr i32 %v2_12dcc to i32*
  %v4_12dcc = load i32, i32* %v3_12dcc, align 4
  store i32 %v4_12dcc, i32* %r2.global-to-local, align 4
  %v1_12dd0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12dd0 = load i32, i32* @r4, align 4
  %v3_12dd0 = sub i32 %v2_12dd0, %v1_12dd0
  %v3_12dd4 = add i32 %v3_12dd0, %v4_12dcc
  store i32 %v3_12dd4, i32* %r3.global-to-local, align 4
  store i32 %v3_12dd4, i32* %v3_12dcc, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12dc8, %bb161
  %v0_12ddc = load i32, i32* @r4, align 4
  %v1_12ddc = urem i32 %v0_12ddc, 8
  store i32 %v1_12ddc, i32* %r3.global-to-local, align 4
  %v2_12ddc = icmp eq i32 %v1_12ddc, 0
  br i1 %v2_12ddc, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_12de0 = sub nsw i32 8, %v1_12ddc
  store i32 %v2_12de0, i32* %r3.global-to-local, align 4
  %v3_12de4 = add i32 %v2_12de0, %v0_12ddc
  store i32 %v3_12de4, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_12dec = phi i32 [ 0, %.thread43 ], [ %v2_12de0, %bb162 ]
  %v1_12de8 = load i32, i32* @r5, align 4
  %v2_12de8 = add i32 %v1_12de8, %v0_12ddc
  store i32 %v2_12de8, i32* @r6, align 4
  %v1_12dec = load i32, i32* @r8, align 4
  %v2_12dec = add i32 %v2_12de8, %v0_12dec
  %v2_12df0 = add i32 %v2_12dec, %v1_12dec
  store i32 %v2_12df0, i32* %r1.global-to-local, align 4
  %v1_12df4 = load i32, i32* %sb.global-to-local, align 4
  %v2_12df4 = add i32 %v1_12df4, %v2_12df0
  %v1_12df8 = load i32, i32* %fp.global-to-local, align 4
  %v2_12df8 = and i32 %v1_12df8, %v2_12df4
  store i32 %v2_12df8, i32* %r2.global-to-local, align 4
  %v2_12dfc = sub i32 0, %v2_12de8
  store i32 %v2_12dfc, i32* %r3.global-to-local, align 4
  %v2_12e00 = sub i32 %v2_12df8, %v2_12de8
  store i32 %v2_12e00, i32* @r5, align 4
  store i32 %v2_12e00, i32* %r0.global-to-local, align 4
  br i1 %v2_12ddc, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_12ddc, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_12e0c = call i32 @function_14c20(i32 %v2_12e00)
  store i32 %v1_12e0c, i32* %r0.global-to-local, align 4
  %v3_12e10 = icmp eq i32 %v1_12e0c, -1
  br i1 %v3_12e10, label %dec_label_pc_12e18, label %dec_label_pc_12e28

dec_label_pc_12e18:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12e1c = call i32 @function_14c20(i32 0)
  store i32 %v1_12e1c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12e80

dec_label_pc_12e28:                               ; preds = %bb164
  %v1_12e28 = load i32, i32* @r4, align 4
  %v3_12e28 = icmp ult i32 %v1_12e0c, %v1_12e28
  br i1 %v3_12e28, label %dec_label_pc_12e30, label %dec_label_pc_12e80

dec_label_pc_12e30:                               ; preds = %dec_label_pc_12e28
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v4_12e38 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12e38, i32* %r2.global-to-local, align 4
  %v1_12e3c = add i32 %v4_12e38, 864
  %v2_12e3c = inttoptr i32 %v1_12e3c to i32*
  %v3_12e3c = load i32, i32* %v2_12e3c, align 4
  %v0_12e40 = load i32, i32* @r6, align 4
  store i32 %v0_12e40, i32* %r0.global-to-local, align 4
  %v1_12e44 = and i32 %v3_12e3c, -2
  store i32 %v1_12e44, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12e44, i32* %v2_12e3c, align 4
  br label %dec_label_pc_12e80

dec_label_pc_12e54:                               ; preds = %.thread40
  %v0_12e54 = load i32, i32* %r0.global-to-local, align 4
  %v3_12e54 = icmp eq i32 %v0_12e54, -1
  br i1 %v3_12e54, label %dec_label_pc_12e5c, label %dec_label_pc_12e78

dec_label_pc_12e5c:                               ; preds = %dec_label_pc_12e54
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12e60 = call i32 @function_14c20(i32 0)
  store i32 %v1_12e60, i32* %r0.global-to-local, align 4
  %v0_12e64 = load i32, i32* @r7, align 4
  %v1_12e64 = add i32 %v0_12e64, 872
  %v2_12e64 = inttoptr i32 %v1_12e64 to i32*
  %v3_12e64 = load i32, i32* %v2_12e64, align 4
  store i32 %v3_12e64, i32* %r2.global-to-local, align 4
  %v0_12e68 = load i32, i32* @r4, align 4
  %v0_12e6c = load i32, i32* @r5, align 4
  %v2_12e68 = add i32 %v3_12e64, %v1_12e60
  %v2_12e6c = sub i32 %v2_12e68, %v0_12e68
  %v2_12e70 = sub i32 %v2_12e6c, %v0_12e6c
  store i32 %v2_12e70, i32* %r3.global-to-local, align 4
  store i32 %v2_12e70, i32* %v2_12e64, align 4
  %v0_12e7c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e54, %dec_label_pc_12e5c
  %v0_12e7c = phi i32 [ 0, %dec_label_pc_12e54 ], [ %v0_12e7c.pre, %dec_label_pc_12e5c ]
  %v0_12e78 = load i32, i32* @r4, align 4
  store i32 %v0_12e78, i32* @r7, align 4
  store i32 %v0_12e7c, i32* @r5, align 4
  br label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %dec_label_pc_12e28, %dec_label_pc_12e30, %dec_label_pc_12e18, %dec_label_pc_12e78
  %v0_12e80 = load i32, i32* %r0.global-to-local, align 4
  %v7_12e80 = icmp eq i32 %v0_12e80, -1
  br i1 %v7_12e80, label %dec_label_pc_12f04, label %dec_label_pc_12e88

dec_label_pc_12e88:                               ; preds = %dec_label_pc_12e80
  %v1_12e88 = load i32, i32* @r5, align 4
  %v2_12e88 = add i32 %v1_12e88, %v0_12e80
  %v0_12e8c = load i32, i32* @r7, align 4
  %v2_12e8c = sub i32 %v2_12e88, %v0_12e8c
  %v1_12e90 = or i32 %v2_12e8c, 1
  %v2_12e94 = add i32 %v0_12e8c, 4
  %v3_12e94 = inttoptr i32 %v2_12e94 to i32*
  store i32 %v1_12e90, i32* %v3_12e94, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_12ea0 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12ea0, i32* @r6, align 4
  %v1_12ea4 = add i32 %v4_12ea0, 872
  %v2_12ea4 = inttoptr i32 %v1_12ea4 to i32*
  %v3_12ea4 = load i32, i32* %v2_12ea4, align 4
  %v0_12ea8 = load i32, i32* @r8, align 4
  %v2_12ea8 = icmp eq i32 %v0_12ea8, 0
  %v0_12eac = load i32, i32* @r5, align 4
  %v2_12eac = add i32 %v0_12eac, %v3_12ea4
  store i32 %v2_12eac, i32* %r3.global-to-local, align 4
  store i32 %v2_12eac, i32* %v2_12ea4, align 4
  %v0_12eb4 = load i32, i32* @r7, align 4
  %v1_12eb4 = load i32, i32* @r6, align 4
  %v2_12eb4 = add i32 %v1_12eb4, 44
  %v3_12eb4 = inttoptr i32 %v2_12eb4 to i32*
  store i32 %v0_12eb4, i32* %v3_12eb4, align 4
  br i1 %v2_12ea8, label %dec_label_pc_12f04, label %dec_label_pc_12ebc

dec_label_pc_12ebc:                               ; preds = %dec_label_pc_12e88
  %v0_12ec0 = load i32, i32* @r8, align 4
  %v1_12ec0 = add i32 %v0_12ec0, -12
  %v1_12ec4 = and i32 %v1_12ec0, -8
  store i32 %v3_12c8c, i32* %ip.global-to-local, align 4
  %v2_12ecc = add i32 %v1_12ec4, %v3_12c8c
  store i32 %v2_12ecc, i32* %r1.global-to-local, align 4
  %v2_12ed0 = icmp ugt i32 %v1_12ec4, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12ed8 = or i32 %v1_12ec4, 1
  store i32 %v1_12ed8, i32* %r3.global-to-local, align 4
  store i32 %v1_12ed8, i32* %v2_12c98, align 4
  %v0_12ee0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ee0 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ee0 = add i32 %v1_12ee0, 8
  %v3_12ee0 = inttoptr i32 %v2_12ee0 to i32*
  store i32 %v0_12ee0, i32* %v3_12ee0, align 4
  %v0_12ee4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ee4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12ee4 = add i32 %v1_12ee4, 4
  %v3_12ee4 = inttoptr i32 %v2_12ee4 to i32*
  store i32 %v0_12ee4, i32* %v3_12ee4, align 4
  br i1 %v2_12ed0, label %dec_label_pc_12eec, label %dec_label_pc_12f04

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12ebc
  %v0_12eec = load i32, i32* @r6, align 4
  %v1_12eec = add i32 %v0_12eec, 836
  %v2_12eec = inttoptr i32 %v1_12eec to i32*
  %v3_12eec = load i32, i32* %v2_12eec, align 4
  store i32 %v3_12eec, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12ef4 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ef4 = add i32 %v0_12ef4, 8
  store i32 %v1_12ef4, i32* @r0, align 4
  store i32 -1, i32* %v2_12eec, align 4
  %v0_12efc = call i32 @function_13718()
  store i32 %v0_12efc, i32* %r0.global-to-local, align 4
  %v0_12f00 = load i32, i32* @r4, align 4
  %v1_12f00 = load i32, i32* @r6, align 4
  %v2_12f00 = add i32 %v1_12f00, 836
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  store i32 %v0_12f00, i32* %v3_12f00, align 4
  br label %dec_label_pc_12f04

dec_label_pc_12f04:                               ; preds = %.thread34, %dec_label_pc_12ebc, %dec_label_pc_12e88, %dec_label_pc_12e80, %dec_label_pc_12eec
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r0.global-to-local, align 4
  %v4_12f0c = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_12f0c, i32* %lr.global-to-local, align 4
  %v1_12f10 = add i32 %v4_12f0c, 872
  store i32 %v1_12f10, i32* %r1.global-to-local, align 4
  %v1_12f14 = inttoptr i32 %v1_12f10 to i32*
  %v2_12f14 = load i32, i32* %v1_12f14, align 4
  store i32 %v2_12f14, i32* %r1.global-to-local, align 4
  %v3_12f14 = add i32 %v4_12f0c, 876
  %v4_12f14 = inttoptr i32 %v3_12f14 to i32*
  %v5_12f14 = load i32, i32* %v4_12f14, align 4
  store i32 %v5_12f14, i32* %r3.global-to-local, align 4
  %v1_12f1c = add i32 %v4_12f0c, 868
  %v2_12f1c = inttoptr i32 %v1_12f1c to i32*
  %v3_12f1c = load i32, i32* %v2_12f1c, align 4
  store i32 %v3_12f1c, i32* %r3.global-to-local, align 4
  %v1_12f20 = add i32 %v4_12f0c, 884
  %v2_12f20 = inttoptr i32 %v1_12f20 to i32*
  %v3_12f20 = load i32, i32* %v2_12f20, align 4
  store i32 %v3_12f20, i32* %r2.global-to-local, align 4
  %v2_12f24 = add i32 %v3_12f1c, %v2_12f14
  store i32 %v2_12f24, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_12f14, %v5_12f14
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_12f04
  store i32 %v2_12f14, i32* %v4_12f14, align 4
  %v0_12f2c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12f2c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_12f04, %bb165
  %v1_12f2c = phi i32 [ %v3_12f20, %dec_label_pc_12f04 ], [ %v1_12f2c.pre, %bb165 ]
  %v4_12f30 = phi i32 [ %v2_12f24, %dec_label_pc_12f04 ], [ %v0_12f2c.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_12f30, %v1_12f2c
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_12f30 = load i32, i32* %lr.global-to-local, align 4
  %v6_12f30 = add i32 %v5_12f30, 884
  %v7_12f30 = inttoptr i32 %v6_12f30 to i32*
  store i32 %v4_12f30, i32* %v7_12f30, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_12f34 = load i32, i32* %lr.global-to-local, align 4
  %v1_12f34 = add i32 %v0_12f34, 44
  %v2_12f34 = inttoptr i32 %v1_12f34 to i32*
  %v3_12f34 = load i32, i32* %v2_12f34, align 4
  store i32 %v3_12f34, i32* %ip.global-to-local, align 4
  %v1_12f38 = add i32 %v3_12f34, 4
  %v2_12f38 = inttoptr i32 %v1_12f38 to i32*
  %v3_12f38 = load i32, i32* %v2_12f38, align 4
  store i32 %v1_12b4c, i32* %r1.global-to-local, align 4
  %v1_12f40 = and i32 %v3_12f38, -4
  store i32 %v1_12f40, i32* %r3.global-to-local, align 4
  %v3_12f44 = icmp ult i32 %v1_12f40, %v1_12b4c
  br i1 %v3_12f44, label %dec_label_pc_12f70, label %dec_label_pc_12f4c

dec_label_pc_12f4c:                               ; preds = %bb168
  %v0_12f4c = load i32, i32* @sl, align 4
  %v2_12f4c = sub i32 %v1_12f40, %v0_12f4c
  %v2_12f50 = add i32 %v0_12f4c, %v3_12f34
  store i32 %v2_12f50, i32* %r1.global-to-local, align 4
  %v1_12f54 = or i32 %v2_12f4c, 1
  store i32 %v1_12f54, i32* %r3.global-to-local, align 4
  %v1_12f58 = or i32 %v0_12f4c, 1
  store i32 %v1_12f58, i32* %r2.global-to-local, align 4
  %v1_12f5c = add i32 %v3_12f34, 8
  store i32 %v1_12f5c, i32* %r0.global-to-local, align 4
  store i32 %v1_12f58, i32* %v2_12f38, align 4
  %v0_12f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_12f64 = load i32, i32* %lr.global-to-local, align 4
  %v2_12f64 = add i32 %v1_12f64, 44
  %v3_12f64 = inttoptr i32 %v2_12f64 to i32*
  store i32 %v0_12f64, i32* %v3_12f64, align 4
  %v0_12f68 = load i32, i32* %r3.global-to-local, align 4
  %v1_12f68 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f68 = add i32 %v1_12f68, 4
  %v3_12f68 = inttoptr i32 %v2_12f68 to i32*
  store i32 %v0_12f68, i32* %v3_12f68, align 4
  br label %dec_label_pc_12f80

dec_label_pc_12f70:                               ; preds = %bb157, %bb168, %dec_label_pc_12d4c
  %v0_12f70 = call i32 @function_1207c()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_12f78 = inttoptr i32 %v0_12f70 to i32*
  store i32 12, i32* %v2_12f78, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %bb151, %bb150, %dec_label_pc_12f4c, %dec_label_pc_12b94, %dec_label_pc_12f70
  %v0_12f80 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f80, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f84

dec_label_pc_12f84:                               ; preds = %.thread1, %dec_label_pc_12b60, %.thread121, %dec_label_pc_129d0, %dec_label_pc_129c4, %dec_label_pc_1282c, %dec_label_pc_127b0, %dec_label_pc_12f80
  store i32 %v2_126d8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_12f94 = load i32, i32* inttoptr (i32 98344 to i32*), align 8
  store i32 %v4_12f94, i32* @ip, align 4
  store i32 77728, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12f94)
  br label %dec_label_pc_12fa0

dec_label_pc_12fa0:                               ; preds = %dec_label_pc_12710, %dec_label_pc_12f84
  %v0_12fa0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12fa0, i32* %r0.global-to-local, align 4
  store i32 %v3_126ac, i32* @r4, align 4
  store i32 %v6_126ac, i32* @r5, align 4
  store i32 %v9_126ac, i32* @r6, align 4
  store i32 %v12_126ac, i32* @r7, align 4
  store i32 %v15_126ac, i32* @r8, align 4
  store i32 %v18_126ac, i32* @sb, align 4
  store i32 %v21_126ac, i32* @sl, align 4
  store i32 %v24_126ac, i32* @fp, align 4
  store i32 %v27_126ac, i32* @lr, align 4
  ret i32 %v0_12fa0

; uselistorder directives
  uselistorder i32 %v0_12f4c, { 1, 0, 2 }
  uselistorder i32 %v3_12f34, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12f30, { 1, 0 }
  uselistorder i32 %v2_12f14, { 2, 0, 1, 3 }
  uselistorder i32 %v4_12f0c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12ec4, { 1, 2, 0 }
  uselistorder i32 %v0_12e8c, { 1, 0 }
  uselistorder i32 %v0_12e80, { 1, 0 }
  uselistorder i32 %v2_12e70, { 1, 0 }
  uselistorder i32 %v2_12e00, { 2, 1, 0 }
  uselistorder i32 %v2_12de8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12de0, { 1, 0, 2 }
  uselistorder i32 %v1_12ddc, { 2, 1, 0 }
  uselistorder i32 %v0_12ddc, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12dc0, { 1, 0 }
  uselistorder i32 %v2_12d98, { 1, 0 }
  uselistorder i32 %v3_12d8c, { 1, 0, 2 }
  uselistorder i32 %v2_12d6c, { 1, 0, 2 }
  uselistorder i32* %v2_12d64, { 1, 0, 2 }
  uselistorder i32 %v0_12d4c, { 1, 0 }
  uselistorder i32 %v6_12d28, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12d14, { 2, 1, 0 }
  uselistorder i32 %v0_12cfc, { 1, 0 }
  uselistorder i32 %v2_12cb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12cb4, { 1, 0 }
  uselistorder i32 %v3_12c8c, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12c6c, { 1, 0, 2 }
  uselistorder i32 %v2_12c54, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12bfc, { 2, 1, 0 }
  uselistorder i32 %v6_12bf0, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12bcc, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12b8c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12b4c, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_12b44, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b40, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_12b2c, { 1, 0 }
  uselistorder i32 %v7_12aec, { 1, 0 }
  uselistorder i32 %v4_12aec, { 1, 0 }
  uselistorder i32 %v0_12abc, { 1, 0 }
  uselistorder i32 %v2_12a90, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_12a8c54, { 1, 0 }
  uselistorder i32 %v1_12a58, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_12a40., { 1, 2, 0 }
  uselistorder i32 %v0_12a48, { 0, 1, 3, 2 }
  uselistorder i32 %v1_12a48, { 1, 0 }
  uselistorder i32 %v3_12a28, { 1, 0 }
  uselistorder i32 %v4_12a24, { 1, 0, 2 }
  uselistorder i32 %v1_12994, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_129ec, { 1, 0 }
  uselistorder i32 %v1_129d0, { 1, 0 }
  uselistorder i32 %v1_12870, { 1, 0 }
  uselistorder i32 %v0_129b0, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12978, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12a0c.pre, { 1, 2, 0 }
  uselistorder i32 %v0_12954, { 2, 1, 0 }
  uselistorder i32 %v3_12948, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_12868, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12910, { 1, 0 }
  uselistorder i32 %v3_12904, { 1, 0 }
  uselistorder i32 %v0_12910, { 1, 0 }
  uselistorder i32 %v3_128e8, { 0, 2, 3, 1 }
  uselistorder i32 %v2_128d8, { 1, 0, 2 }
  uselistorder i32 %v3_12890, { 2, 1, 0 }
  uselistorder i32 %v0_12880, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12850, { 1, 0 }
  uselistorder i32 %v1_12804, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12800, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_127a4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12798, { 1, 0 }
  uselistorder i32 %v3_12768, { 1, 0 }
  uselistorder i32 %v0_1275c, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_1273c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_12730, { 1, 0 }
  uselistorder i32 %v0_12708, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 15, 0, 1, 2, 3, 4, 6, 5, 11, 12, 10, 13, 14, 16, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 91, 92, 93, 94 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 51 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 42, 43, 44, 48, 49, 51, 52, 53, 54, 55, 45, 46, 47 }
  uselistorder i32* %r0.global-to-local, { 7, 5, 30, 6, 8, 9, 10, 22, 14, 11, 23, 12, 13, 16, 15, 20, 17, 24, 19, 18, 25, 21, 4, 27, 26, 28, 3, 29, 31, 36, 32, 33, 2, 34, 35, 37, 38, 39, 42, 43, 40, 41, 46, 45, 44, 51, 52, 53, 1, 54, 55, 56, 57, 0, 47, 50, 49, 48 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 38, 37, 28, 25, 1, 26, 27, 29, 32, 33, 34, 35, 36, 39, 40, 41, 42, 30, 31 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_14994, { 1, 0 }
  uselistorder i32 (i32)* @function_12634, { 1, 0 }
  uselistorder label %dec_label_pc_12fa0, { 1, 0 }
  uselistorder label %dec_label_pc_12f84, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12f80, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12f70, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_12f04, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12e80, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12e78, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12d4c, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_12c80, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_12b38, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_12a8c, { 1, 0 }
  uselistorder label %dec_label_pc_12a94.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_12a58, { 1, 0 }
  uselistorder label %dec_label_pc_12a0c, { 1, 0 }
  uselistorder label %dec_label_pc_129a0, { 1, 0 }
  uselistorder label %dec_label_pc_1299c, { 1, 0 }
  uselistorder label %dec_label_pc_12948, { 1, 0 }
  uselistorder label %dec_label_pc_12934, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_128e8, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_12fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12fb0:
  %v0_12fb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12fb0, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_12fb0
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_12fb0, %bb
  %v10_12fc8 = phi i32 [ %arg1, %dec_label_pc_12fb0 ], [ 0, %bb ]
  ret i32 %v10_12fc8

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_12fcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fcc:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_12fcc = load i32, i32* @r4, align 4
  %v6_12fcc = load i32, i32* @r5, align 4
  %v9_12fcc = load i32, i32* @r6, align 4
  %v12_12fcc = load i32, i32* @lr, align 4
  %v2_12fd4 = icmp eq i32 %arg1, 0
  store i32 98320, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_12fe4 = mul i32 %arg2, %arg1
  store i32 %v2_12fe4, i32* @r6, align 4
  br i1 %v2_12fd4, label %dec_label_pc_13014, label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fcc
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_12fe4, i32* @r0, align 4
  %v0_12ff4 = call i32 @function_116f0()
  %v0_12ff8 = load i32, i32* @r4, align 4
  %v9_12ff8 = icmp eq i32 %v0_12ff8, %v0_12ff4
  br i1 %v9_12ff8, label %dec_label_pc_12fec.dec_label_pc_13014_crit_edge, label %dec_label_pc_13000

dec_label_pc_12fec.dec_label_pc_13014_crit_edge:  ; preds = %dec_label_pc_12fec
  %v0_13018.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13014

dec_label_pc_13000:                               ; preds = %dec_label_pc_12fec
  %v0_13000 = call i32 @function_1207c()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1300c = inttoptr i32 %v0_13000 to i32*
  store i32 12, i32* %v2_1300c, align 4
  br label %dec_label_pc_130d8

dec_label_pc_13014:                               ; preds = %dec_label_pc_12fec.dec_label_pc_13014_crit_edge, %dec_label_pc_12fcc
  %v0_13030 = phi i32 [ %v0_13018.pre, %dec_label_pc_12fec.dec_label_pc_13014_crit_edge ], [ 98320, %dec_label_pc_12fcc ]
  %v2_13018 = add i32 %v0_13030, 68
  %v3_13018 = inttoptr i32 %v2_13018 to i32*
  %v4_13018 = load i32, i32* %v3_13018, align 4
  store i32 %v4_13018, i32* @r4, align 4
  %v2_13030 = add i32 %v0_13030, 72
  %v3_13030 = inttoptr i32 %v2_13030 to i32*
  %v4_13030 = load i32, i32* %v3_13030, align 4
  store i32 %v4_13030, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13030)
  %v0_13044 = load i32, i32* @r5, align 4
  %v2_13044 = add i32 %v0_13044, 16
  %v3_13044 = inttoptr i32 %v2_13044 to i32*
  %v4_13044 = load i32, i32* %v3_13044, align 4
  store i32 %v4_13044, i32* %ip.global-to-local, align 4
  store i32 77904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13044)
  %v0_13050 = load i32, i32* @r6, align 4
  store i32 %v0_13050, i32* @r0, align 4
  %v0_13054 = call i32 @function_126ac()
  store i32 %v0_13054, i32* %r4.global-to-local, align 4
  %v2_13058 = icmp eq i32 %v0_13054, 0
  br i1 %v2_13058, label %.thread, label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_13014
  %v1_13060 = add i32 %v0_13054, -4
  %v2_13060 = inttoptr i32 %v1_13060 to i32*
  %v3_13060 = load i32, i32* %v2_13060, align 4
  %v1_13064 = and i32 %v3_13060, 2
  %v2_13064 = icmp eq i32 %v1_13064, 0
  br i1 %v2_13064, label %dec_label_pc_1306c, label %.thread

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13060
  %v1_1306c7 = add i32 %v3_13060, -4
  %v1_13070 = and i32 %v1_1306c7, -4
  store i32 %v1_13070, i32* @r2, align 4
  %v3_13074 = udiv i32 %v1_13070, 4
  store i32 %v3_13074, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13070, 36
  %v2_1307c = icmp ult i32 %v1_13070, 33
  %v3_1307c = or i1 %tmp, %v2_1307c
  br i1 %v3_1307c, label %dec_label_pc_13088, label %dec_label_pc_13080

dec_label_pc_13080:                               ; preds = %dec_label_pc_1306c
  %v2_13080 = inttoptr i32 %v0_13054 to i8*
  %v3_13080 = call i32 @function_120d0(i8* %v2_13080, i32 0)
  br label %.thread

dec_label_pc_13088:                               ; preds = %dec_label_pc_1306c
  %tmp8 = icmp eq i32 %v1_13070, 16
  %v2_1308c = inttoptr i32 %v0_13054 to i32*
  store i32 0, i32* %v2_1308c, align 4
  %v1_13090 = load i32, i32* %r4.global-to-local, align 4
  %v2_13090 = add i32 %v1_13090, 4
  %v3_13090 = inttoptr i32 %v2_13090 to i32*
  store i32 0, i32* %v3_13090, align 4
  %v1_13094 = load i32, i32* %r4.global-to-local, align 4
  %v2_13094 = add i32 %v1_13094, 8
  %v3_13094 = inttoptr i32 %v2_13094 to i32*
  store i32 0, i32* %v3_13094, align 4
  %v2_13098 = icmp ult i32 %v1_13070, 13
  %v3_13098 = or i1 %tmp8, %v2_13098
  br i1 %v3_13098, label %.thread, label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %dec_label_pc_13088
  %v0_1309c = load i32, i32* %ip.global-to-local, align 4
  %v1_130a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_130a0 = add i32 %v1_130a0, 12
  %v3_130a0 = inttoptr i32 %v2_130a0 to i32*
  store i32 0, i32* %v3_130a0, align 4
  %v1_130a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_130a4 = add i32 %v1_130a4, 16
  %v3_130a4 = inttoptr i32 %v2_130a4 to i32*
  store i32 0, i32* %v3_130a4, align 4
  %tmp9 = icmp ult i32 %v0_1309c, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %dec_label_pc_1309c
  %v0_130ac = load i32, i32* %ip.global-to-local, align 4
  %v7_130ac = icmp eq i32 %v0_130ac, 9
  %v1_130b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_130b0 = add i32 %v1_130b0, 20
  %v3_130b0 = inttoptr i32 %v2_130b0 to i32*
  store i32 0, i32* %v3_130b0, align 4
  %v1_130b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_130b4 = add i32 %v1_130b4, 24
  %v3_130b4 = inttoptr i32 %v2_130b4 to i32*
  store i32 0, i32* %v3_130b4, align 4
  br i1 %v7_130ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_130ac
  %v2_130b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_130b8 = add i32 %v2_130b8, 32
  %v4_130b8 = inttoptr i32 %v3_130b8 to i32*
  store i32 0, i32* %v4_130b8, align 4
  %v2_130bc = load i32, i32* %r4.global-to-local, align 4
  %v3_130bc = add i32 %v2_130bc, 28
  %v4_130bc = inttoptr i32 %v3_130bc to i32*
  store i32 0, i32* %v4_130bc, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_130ac, %dec_label_pc_13060, %dec_label_pc_1309c, %dec_label_pc_13088, %dec_label_pc_13014, %dec_label_pc_13080, %bb
  %v0_130cc = load i32, i32* @r5, align 4
  %v2_130cc = add i32 %v0_130cc, 24
  %v3_130cc = inttoptr i32 %v2_130cc to i32*
  %v4_130cc = load i32, i32* %v3_130cc, align 4
  store i32 %v4_130cc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_130cc)
  br label %dec_label_pc_130d8

dec_label_pc_130d8:                               ; preds = %dec_label_pc_13000, %.thread
  %v0_130d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_12fcc, i32* @r4, align 4
  store i32 %v6_12fcc, i32* @r5, align 4
  store i32 %v9_12fcc, i32* @r6, align 4
  store i32 %v12_12fcc, i32* @lr, align 4
  ret i32 %v0_130d8

; uselistorder directives
  uselistorder i32 %v1_13070, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v0_13054, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 33, { 0, 2, 14, 3, 9, 7, 10, 4, 11, 5, 12, 6, 13, 15, 8, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130d8, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_130e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_130e8:
  %v0_130e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130e8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_130e8
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_130e8, %bb
  %v10_130fc = phi i32 [ %arg1, %dec_label_pc_130e8 ], [ 0, %bb ]
  ret i32 %v10_130fc

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_13100(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13100:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13100 = load i32, i32* @r4, align 4
  %v6_13100 = load i32, i32* @r5, align 4
  %v9_13100 = load i32, i32* @r6, align 4
  %v12_13100 = load i32, i32* @r7, align 4
  %v15_13100 = load i32, i32* @r8, align 4
  %v18_13100 = load i32, i32* @sb, align 4
  %v21_13100 = load i32, i32* @sl, align 4
  %v24_13100 = load i32, i32* @fp, align 4
  %v27_13100 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1310c = icmp eq i32* %arg1, null
  store i32 98320, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1310c, label %dec_label_pc_13120, label %dec_label_pc_13130

dec_label_pc_13120:                               ; preds = %dec_label_pc_13100
  store i32 %arg2, i32* @r0, align 4
  %v0_13124 = call i32 @function_126ac()
  store i32 %v0_13124, i32* %r0.global-to-local, align 4
  store i32 %v0_13124, i32* @r4, align 4
  br label %dec_label_pc_13488

dec_label_pc_13130:                               ; preds = %dec_label_pc_13100
  %v2_13130 = icmp eq i32 %arg2, 0
  br i1 %v2_13130, label %dec_label_pc_13138, label %dec_label_pc_13144

dec_label_pc_13138:                               ; preds = %dec_label_pc_13130
  %v0_13138 = call i32 @function_13718()
  store i32 %v0_13138, i32* %r0.global-to-local, align 4
  %v0_1313c = load i32, i32* @r6, align 4
  store i32 %v0_1313c, i32* @r4, align 4
  br label %dec_label_pc_13488

dec_label_pc_13144:                               ; preds = %dec_label_pc_13130
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_1314c = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_1314c, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_1314c, i32* %r2.global-to-local, align 4
  %v4_13158 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_13158, i32* %r1.global-to-local, align 4
  %v2_1315c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1315c, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_13164 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_13164)
  %v0_13170 = load i32, i32* @r4, align 4
  store i32 %v0_13170, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_1317c = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 %v4_1317c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_13188.697 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1317c)
  %v0_13188 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13188, -32
  br i1 %tmp36, label %dec_label_pc_131a4, label %dec_label_pc_13190

dec_label_pc_13190:                               ; preds = %dec_label_pc_13144
  %v0_13190 = call i32 @function_1207c()
  store i32 %v0_13190, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1319c = inttoptr i32 %v0_13190 to i32*
  store i32 12, i32* %v2_1319c, align 4
  br label %dec_label_pc_13488

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13144
  %v1_131a4 = add i32 %v0_13188, 11
  store i32 %v1_131a4, i32* %r0.global-to-local, align 4
  %v0_131a8 = load i32, i32* @r5, align 4
  %v1_131a8 = add i32 %v0_131a8, -4
  %v2_131a8 = inttoptr i32 %v1_131a8 to i32*
  %v3_131a8 = load i32, i32* %v2_131a8, align 4
  store i32 %v3_131a8, i32* %r2.global-to-local, align 4
  %v2_131ac = icmp ugt i32 %v1_131a4, 14
  %v7_131ac = icmp eq i32 %v1_131a4, 15
  %v2_131b0 = xor i1 %v2_131ac, true
  %v3_131b0 = or i1 %v7_131ac, %v2_131b0
  br i1 %v3_131b0, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_131a4
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_131a4, %bb
  %v2_131b4 = xor i1 %v7_131ac, true
  %v3_131b4 = and i1 %v2_131ac, %v2_131b4
  br i1 %v3_131b4, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_131b4 = and i32 %v1_131a4, -8
  store i32 %v5_131b4, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_131b8 = and i32 %v3_131a8, 2
  %v2_131b8 = icmp eq i32 %v1_131b8, 0
  %v1_131bc = add i32 %v0_131a8, -8
  store i32 %v1_131bc, i32* @sl, align 4
  %v1_131c0 = and i32 %v3_131a8, -4
  store i32 %v1_131c0, i32* @r6, align 4
  br i1 %v2_131b8, label %dec_label_pc_131c8, label %dec_label_pc_133a0

dec_label_pc_131c8:                               ; preds = %bb29
  %v1_131c8 = load i32, i32* @sb, align 4
  %v3_131c8 = icmp ult i32 %v1_131c0, %v1_131c8
  br i1 %v3_131c8, label %dec_label_pc_131d4, label %bb30

bb30:                                             ; preds = %dec_label_pc_131c8
  store i32 %v1_131c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13338

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131c8
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_131dc = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_131dc, i32* %r0.global-to-local, align 4
  %v1_131e0 = add i32 %v4_131dc, 44
  %v2_131e0 = inttoptr i32 %v1_131e0 to i32*
  %v3_131e0 = load i32, i32* %v2_131e0, align 4
  store i32 %v3_131e0, i32* %r3.global-to-local, align 4
  %v2_131e4 = add i32 %v1_131c0, %v1_131bc
  store i32 %v2_131e4, i32* @r4, align 4
  %v9_131e8 = icmp eq i32 %v2_131e4, %v3_131e0
  %v1_131ec = add i32 %v2_131e4, 4
  %v2_131ec = inttoptr i32 %v1_131ec to i32*
  %v3_131ec = load i32, i32* %v2_131ec, align 4
  store i32 %v3_131ec, i32* %r1.global-to-local, align 4
  br i1 %v9_131e8, label %dec_label_pc_131f4, label %dec_label_pc_13230

dec_label_pc_131f4:                               ; preds = %dec_label_pc_131d4
  %v1_131f4 = and i32 %v3_131ec, -4
  %v2_131f8 = add i32 %v1_131f4, %v1_131c0
  store i32 %v2_131f8, i32* %r1.global-to-local, align 4
  %v1_131fc = add i32 %v1_131c8, 16
  store i32 %v1_131fc, i32* %r3.global-to-local, align 4
  %v3_13200 = icmp ult i32 %v2_131f8, %v1_131fc
  br i1 %v3_13200, label %dec_label_pc_13284, label %dec_label_pc_13208

dec_label_pc_13208:                               ; preds = %dec_label_pc_131f4
  %v2_13208 = sub i32 %v2_131f8, %v1_131c8
  %v1_1320c = urem i32 %v3_131a8, 2
  %v2_13210 = add i32 %v1_131c8, %v1_131bc
  store i32 %v2_13210, i32* %r1.global-to-local, align 4
  %v2_13214 = or i32 %v1_131c8, %v1_1320c
  store i32 %v2_13214, i32* %r2.global-to-local, align 4
  %v1_13218 = or i32 %v2_13208, 1
  store i32 %v1_13218, i32* %r3.global-to-local, align 4
  store i32 %v0_131a8, i32* @r4, align 4
  store i32 %v2_13214, i32* %v2_131a8, align 4
  %v0_13224 = load i32, i32* %r1.global-to-local, align 4
  %v1_13224 = load i32, i32* %r0.global-to-local, align 4
  %v2_13224 = add i32 %v1_13224, 44
  %v3_13224 = inttoptr i32 %v2_13224 to i32*
  store i32 %v0_13224, i32* %v3_13224, align 4
  %v0_13228 = load i32, i32* %r3.global-to-local, align 4
  %v1_13228 = load i32, i32* %r1.global-to-local, align 4
  %v2_13228 = add i32 %v1_13228, 4
  %v3_13228 = inttoptr i32 %v2_13228 to i32*
  store i32 %v0_13228, i32* %v3_13228, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13230:                               ; preds = %dec_label_pc_131d4
  %v1_13230 = and i32 %v3_131ec, -2
  %v2_13234 = add i32 %v1_13230, %v2_131e4
  store i32 %v2_13234, i32* %r3.global-to-local, align 4
  %v1_13238 = add i32 %v2_13234, 4
  %v2_13238 = inttoptr i32 %v1_13238 to i32*
  %v3_13238 = load i32, i32* %v2_13238, align 4
  store i32 %v3_13238, i32* %r3.global-to-local, align 4
  %v1_1323c = urem i32 %v3_13238, 2
  %v2_1323c = icmp eq i32 %v1_1323c, 0
  br i1 %v2_1323c, label %dec_label_pc_13244, label %dec_label_pc_13284

dec_label_pc_13244:                               ; preds = %dec_label_pc_13230
  %v1_13244 = and i32 %v3_131ec, -4
  store i32 %v1_13244, i32* %r3.global-to-local, align 4
  %v2_13248 = add i32 %v1_13244, %v1_131c0
  store i32 %v2_13248, i32* %r0.global-to-local, align 4
  %v3_1324c = icmp ult i32 %v2_13248, %v1_131c8
  br i1 %v3_1324c, label %dec_label_pc_13284, label %dec_label_pc_13254

dec_label_pc_13254:                               ; preds = %dec_label_pc_13244
  %v1_13254 = add i32 %v1_131c0, %v0_131a8
  %v2_13254 = inttoptr i32 %v1_13254 to i32*
  %v3_13254 = load i32, i32* %v2_13254, align 4
  store i32 %v3_13254, i32* %r1.global-to-local, align 4
  %v1_13258 = add i32 %v3_13254, 12
  %v2_13258 = inttoptr i32 %v1_13258 to i32*
  %v3_13258 = load i32, i32* %v2_13258, align 4
  store i32 %v3_13258, i32* %r3.global-to-local, align 4
  %v9_1325c = icmp eq i32 %v3_13258, %v2_131e4
  %v1_13260 = add i32 %v2_131e4, 12
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  store i32 %v3_13260, i32* %r2.global-to-local, align 4
  br i1 %v9_1325c, label %dec_label_pc_13268, label %dec_label_pc_13274

dec_label_pc_13268:                               ; preds = %dec_label_pc_13254
  %v1_13268 = add i32 %v3_13260, 8
  %v2_13268 = inttoptr i32 %v1_13268 to i32*
  %v3_13268 = load i32, i32* %v2_13268, align 4
  store i32 %v3_13268, i32* %r3.global-to-local, align 4
  %v9_1326c = icmp eq i32 %v3_13268, %v2_131e4
  br i1 %v9_1326c, label %dec_label_pc_13278, label %dec_label_pc_13274

dec_label_pc_13274:                               ; preds = %dec_label_pc_13254, %dec_label_pc_13268
  %v0_13274 = call i32 @function_13994()
  store i32 %v0_13274, i32* %r0.global-to-local, align 4
  %v0_13278.pre = load i32, i32* @r1, align 4
  %v1_13278.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13268, %dec_label_pc_13274
  %v1_13278 = phi i32 [ %v3_13260, %dec_label_pc_13268 ], [ %v1_13278.pre, %dec_label_pc_13274 ]
  %v0_13278 = phi i32 [ %v3_13254, %dec_label_pc_13268 ], [ %v0_13278.pre, %dec_label_pc_13274 ]
  %v2_13278 = add i32 %v1_13278, 8
  %v3_13278 = inttoptr i32 %v2_13278 to i32*
  store i32 %v0_13278, i32* %v3_13278, align 4
  %v0_1327c = load i32, i32* %r2.global-to-local, align 4
  %v1_1327c = load i32, i32* %r1.global-to-local, align 4
  %v2_1327c = add i32 %v1_1327c, 12
  %v3_1327c = inttoptr i32 %v2_1327c to i32*
  store i32 %v0_1327c, i32* %v3_1327c, align 4
  %v1_13338.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13338

dec_label_pc_13284:                               ; preds = %dec_label_pc_131f4, %dec_label_pc_13244, %dec_label_pc_13230
  %v1_13284 = add i32 %v1_131c8, -7
  store i32 %v1_13284, i32* @r0, align 4
  %v0_13288 = call i32 @function_126ac()
  store i32 %v0_13288, i32* @r0, align 4
  store i32 %v0_13288, i32* %r1.global-to-local, align 4
  %v2_1328c = icmp eq i32 %v0_13288, 0
  br i1 %v2_1328c, label %bb31, label %dec_label_pc_13298

bb31:                                             ; preds = %dec_label_pc_13284
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13298:                               ; preds = %dec_label_pc_13284
  %v1_132a0.pre = load i32, i32* @r4, align 4
  %v1_13298 = add i32 %v0_13288, -4
  %v2_13298 = inttoptr i32 %v1_13298 to i32*
  %v3_13298 = load i32, i32* %v2_13298, align 4
  store i32 %v3_13298, i32* @r3, align 4
  %v1_1329c = add i32 %v0_13288, -8
  store i32 %v1_1329c, i32* @r7, align 4
  %v9_132a0 = icmp eq i32 %v1_1329c, %v1_132a0.pre
  br i1 %v9_132a0, label %.thread2, label %dec_label_pc_132b0

.thread2:                                         ; preds = %dec_label_pc_13298
  %v2_132a4 = and i32 %v3_13298, -4
  store i32 %v2_132a4, i32* %r3.global-to-local, align 4
  %v2_132a8 = load i32, i32* @r6, align 4
  %v3_132a8 = add i32 %v2_132a8, %v2_132a4
  store i32 %v3_132a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13338

dec_label_pc_132b0:                               ; preds = %dec_label_pc_13298
  %v0_132b0 = load i32, i32* @r6, align 4
  %v1_132b0 = add i32 %v0_132b0, -4
  store i32 %v1_132b0, i32* @r2, align 4
  %v3_132b4 = udiv i32 %v1_132b0, 4
  store i32 %v3_132b4, i32* @ip, align 4
  %tmp37 = and i32 %v1_132b0, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_132bc = icmp ult i32 %v1_132b0, 36
  %v3_132bc = or i1 %tmp38, %v2_132bc
  %v0_132cc = load i32, i32* @r5, align 4
  br i1 %v3_132bc, label %dec_label_pc_132cc, label %dec_label_pc_132c0

dec_label_pc_132c0:                               ; preds = %dec_label_pc_132b0
  store i32 %v0_132cc, i32* @r1, align 4
  %v0_132c4 = call i32 @function_12180()
  store i32 %v0_132c4, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132b0
  %v1_132cc = inttoptr i32 %v0_132cc to i32*
  %v2_132cc = load i32, i32* %v1_132cc, align 4
  store i32 %v2_132cc, i32* %r3.global-to-local, align 4
  %v2_132d0 = inttoptr i32 %v0_13288 to i32*
  store i32 %v2_132cc, i32* %v2_132d0, align 4
  %v0_132d4 = load i32, i32* @r5, align 4
  %v1_132d4 = add i32 %v0_132d4, 4
  %v2_132d4 = inttoptr i32 %v1_132d4 to i32*
  %v3_132d4 = load i32, i32* %v2_132d4, align 4
  store i32 %v3_132d4, i32* %r3.global-to-local, align 4
  %v1_132d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_132d8 = add i32 %v1_132d8, 4
  %v3_132d8 = inttoptr i32 %v2_132d8 to i32*
  store i32 %v3_132d4, i32* %v3_132d8, align 4
  %v0_132dc = load i32, i32* @r5, align 4
  %v1_132dc = add i32 %v0_132dc, 8
  %v2_132dc = inttoptr i32 %v1_132dc to i32*
  %v3_132dc = load i32, i32* %v2_132dc, align 4
  store i32 %v3_132dc, i32* %r3.global-to-local, align 4
  %v0_132e0 = load i32, i32* @ip, align 4
  %v1_132e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_132e4 = add i32 %v1_132e4, 8
  %v3_132e4 = inttoptr i32 %v2_132e4 to i32*
  store i32 %v3_132dc, i32* %v3_132e4, align 4
  %tmp39 = icmp ult i32 %v0_132e0, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132cc
  %v0_132ec = load i32, i32* @r5, align 4
  %v1_132ec = add i32 %v0_132ec, 12
  %v2_132ec = inttoptr i32 %v1_132ec to i32*
  %v3_132ec = load i32, i32* %v2_132ec, align 4
  store i32 %v3_132ec, i32* %r3.global-to-local, align 4
  %v1_132f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_132f0 = add i32 %v1_132f0, 12
  %v3_132f0 = inttoptr i32 %v2_132f0 to i32*
  store i32 %v3_132ec, i32* %v3_132f0, align 4
  %v0_132f4 = load i32, i32* @r5, align 4
  %v1_132f4 = add i32 %v0_132f4, 16
  %v2_132f4 = inttoptr i32 %v1_132f4 to i32*
  %v3_132f4 = load i32, i32* %v2_132f4, align 4
  store i32 %v3_132f4, i32* %r3.global-to-local, align 4
  %v0_132f8 = load i32, i32* @ip, align 4
  %v1_132fc = load i32, i32* %r1.global-to-local, align 4
  %v2_132fc = add i32 %v1_132fc, 16
  %v3_132fc = inttoptr i32 %v2_132fc to i32*
  store i32 %v3_132f4, i32* %v3_132fc, align 4
  %tmp40 = icmp ult i32 %v0_132f8, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_132ec
  %v0_13304 = load i32, i32* @r5, align 4
  %v1_13304 = add i32 %v0_13304, 20
  %v2_13304 = inttoptr i32 %v1_13304 to i32*
  %v3_13304 = load i32, i32* %v2_13304, align 4
  store i32 %v3_13304, i32* %r3.global-to-local, align 4
  %v1_13308 = load i32, i32* %r1.global-to-local, align 4
  %v2_13308 = add i32 %v1_13308, 20
  %v3_13308 = inttoptr i32 %v2_13308 to i32*
  store i32 %v3_13304, i32* %v3_13308, align 4
  %v0_1330c = load i32, i32* @r5, align 4
  %v1_1330c = add i32 %v0_1330c, 24
  %v2_1330c = inttoptr i32 %v1_1330c to i32*
  %v3_1330c = load i32, i32* %v2_1330c, align 4
  store i32 %v3_1330c, i32* %r3.global-to-local, align 4
  %v1_13310 = load i32, i32* %r1.global-to-local, align 4
  %v2_13310 = add i32 %v1_13310, 24
  %v3_13310 = inttoptr i32 %v2_13310 to i32*
  store i32 %v3_1330c, i32* %v3_13310, align 4
  %v0_13314 = load i32, i32* @ip, align 4
  %v7_13314 = icmp eq i32 %v0_13314, 9
  br i1 %v7_13314, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_13304
  %v1_13318 = load i32, i32* @r5, align 4
  %v2_13318 = add i32 %v1_13318, 28
  %v3_13318 = inttoptr i32 %v2_13318 to i32*
  %v4_13318 = load i32, i32* %v3_13318, align 4
  store i32 %v4_13318, i32* %r3.global-to-local, align 4
  %v2_1331c = load i32, i32* %r1.global-to-local, align 4
  %v3_1331c = add i32 %v2_1331c, 28
  %v4_1331c = inttoptr i32 %v3_1331c to i32*
  store i32 %v4_13318, i32* %v4_1331c, align 4
  %v1_13320 = load i32, i32* @r5, align 4
  %v2_13320 = add i32 %v1_13320, 32
  %v3_13320 = inttoptr i32 %v2_13320 to i32*
  %v4_13320 = load i32, i32* %v3_13320, align 4
  store i32 %v4_13320, i32* %r3.global-to-local, align 4
  %v2_13324 = load i32, i32* %r1.global-to-local, align 4
  %v3_13324 = add i32 %v2_13324, 32
  %v4_13324 = inttoptr i32 %v3_13324 to i32*
  store i32 %v4_13320, i32* %v4_13324, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_13304, %dec_label_pc_132ec, %dec_label_pc_132cc, %dec_label_pc_132c0, %bb32
  %v0_13328 = load i32, i32* @r5, align 4
  store i32 %v0_13328, i32* @r0, align 4
  %v0_1332c = call i32 @function_13718()
  store i32 %v0_1332c, i32* %r0.global-to-local, align 4
  %v0_13330 = load i32, i32* @r7, align 4
  %v1_13330 = add i32 %v0_13330, 8
  store i32 %v1_13330, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13338:                               ; preds = %bb30, %.thread2, %dec_label_pc_13278
  %v0_1334c = phi i32 [ %v3_132a8, %.thread2 ], [ %v1_131c0, %bb30 ], [ %v1_13338.pre, %dec_label_pc_13278 ]
  %v0_13338 = load i32, i32* @sb, align 4
  %v2_13338 = sub i32 %v0_1334c, %v0_13338
  store i32 %v2_13338, i32* %r1.global-to-local, align 4
  %v0_13340 = load i32, i32* @sl, align 4
  %v1_13340 = add i32 %v0_13340, 4
  %v2_13340 = inttoptr i32 %v1_13340 to i32*
  %v3_13340 = load i32, i32* %v2_13340, align 4
  %tmp41 = icmp ugt i32 %v2_13338, 15
  %v1_13368 = urem i32 %v3_13340, 2
  store i32 %v1_13368, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13368, label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %dec_label_pc_13338
  %v2_1334c = or i32 %v1_13368, %v0_1334c
  store i32 %v2_1334c, i32* %r3.global-to-local, align 4
  store i32 %v2_1334c, i32* %v2_13340, align 4
  %v0_13354 = load i32, i32* @sl, align 4
  %v1_13354 = load i32, i32* %r0.global-to-local, align 4
  %v2_13354 = add i32 %v1_13354, %v0_13354
  store i32 %v2_13354, i32* %r2.global-to-local, align 4
  %v1_13358 = add i32 %v2_13354, 4
  %v2_13358 = inttoptr i32 %v1_13358 to i32*
  %v3_13358 = load i32, i32* %v2_13358, align 4
  %v1_1335c = or i32 %v3_13358, 1
  store i32 %v1_1335c, i32* %r3.global-to-local, align 4
  store i32 %v1_1335c, i32* %v2_13358, align 4
  br label %dec_label_pc_13398

dec_label_pc_13368:                               ; preds = %dec_label_pc_13338
  %v2_1336c = add i32 %v0_13340, %v0_13338
  store i32 %v2_1336c, i32* %r0.global-to-local, align 4
  %v2_13370 = or i32 %v1_13368, %v0_13338
  store i32 %v2_13370, i32* %r3.global-to-local, align 4
  %v1_13374 = or i32 %v2_13338, 1
  store i32 %v1_13374, i32* %r2.global-to-local, align 4
  store i32 %v2_13370, i32* %v2_13340, align 4
  %v0_1337c = load i32, i32* %r2.global-to-local, align 4
  %v1_1337c = load i32, i32* %r0.global-to-local, align 4
  %v2_1337c = add i32 %v1_1337c, 4
  %v3_1337c = inttoptr i32 %v2_1337c to i32*
  store i32 %v0_1337c, i32* %v3_1337c, align 4
  %v0_13380 = load i32, i32* %r0.global-to-local, align 4
  %v1_13380 = load i32, i32* %r1.global-to-local, align 4
  %v2_13380 = add i32 %v1_13380, %v0_13380
  store i32 %v2_13380, i32* %r2.global-to-local, align 4
  %v1_13384 = add i32 %v2_13380, 4
  %v2_13384 = inttoptr i32 %v1_13384 to i32*
  %v3_13384 = load i32, i32* %v2_13384, align 4
  %v1_13388 = or i32 %v3_13384, 1
  store i32 %v1_13388, i32* %r3.global-to-local, align 4
  store i32 %v1_13388, i32* %v2_13384, align 4
  %v0_13390 = load i32, i32* %r0.global-to-local, align 4
  %v1_13390 = add i32 %v0_13390, 8
  store i32 %v1_13390, i32* @r0, align 4
  %v0_13394 = call i32 @function_13718()
  store i32 %v0_13394, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13398

dec_label_pc_13398:                               ; preds = %dec_label_pc_13348, %dec_label_pc_13368
  %v0_13398 = load i32, i32* @sl, align 4
  %v1_13398 = add i32 %v0_13398, 8
  store i32 %v1_13398, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_133a0:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r1.global-to-local, align 4
  %v4_133a8 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_133a8, i32* @r8, align 4
  %v2_133ac = inttoptr i32 %v1_131bc to i32*
  %v3_133ac = load i32, i32* %v2_133ac, align 4
  store i32 %v3_133ac, i32* @r4, align 4
  %v1_133b0 = add i32 %v4_133a8, 860
  %v2_133b0 = inttoptr i32 %v1_133b0 to i32*
  %v3_133b0 = load i32, i32* %v2_133b0, align 4
  %v1_133b4 = add i32 %v3_133ac, 4
  %v1_133b8 = add i32 %v3_133b0, -1
  store i32 %v1_133b8, i32* %r2.global-to-local, align 4
  %v2_133bc = add i32 %v1_133b4, %v1_133b8
  %v1_133c0 = load i32, i32* @sb, align 4
  %v2_133c0 = add i32 %v2_133bc, %v1_133c0
  store i32 %v2_133c0, i32* %r3.global-to-local, align 4
  %v2_133c4 = sub i32 0, %v3_133b0
  %v3_133c4 = and i32 %v2_133c0, %v2_133c4
  store i32 %v3_133c4, i32* @r7, align 4
  %v2_133c8 = sub i32 %v3_133c4, %v3_133ac
  store i32 %v2_133c8, i32* @fp, align 4
  %v9_133cc = icmp eq i32 %v1_131c0, %v2_133c8
  br i1 %v9_133cc, label %dec_label_pc_13440, label %dec_label_pc_133d4

dec_label_pc_133d4:                               ; preds = %dec_label_pc_133a0
  %v2_133d4 = sub i32 %v1_131bc, %v3_133ac
  store i32 %v2_133d4, i32* %r0.global-to-local, align 4
  %v2_133d8 = add i32 %v3_133ac, %v1_131c0
  store i32 %v2_133d8, i32* %r1.global-to-local, align 4
  store i32 %v3_133c4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_133e4 = call i32 @function_14f64(i32 %v2_133d4, i32 %v2_133d8, i32 %v3_133c4, i32 1)
  store i32 %v4_133e4, i32* %r0.global-to-local, align 4
  %v7_133e8 = icmp eq i32 %v4_133e4, -1
  br i1 %v7_133e8, label %dec_label_pc_13434, label %dec_label_pc_133f0

dec_label_pc_133f0:                               ; preds = %dec_label_pc_133d4
  %v1_133f0 = load i32, i32* @r4, align 4
  %v2_133f0 = add i32 %v1_133f0, %v4_133e4
  store i32 %v2_133f0, i32* %r0.global-to-local, align 4
  %v0_133f4 = load i32, i32* @fp, align 4
  %v1_133f4 = or i32 %v0_133f4, 2
  store i32 %v1_133f4, i32* %r3.global-to-local, align 4
  %v2_133f8 = add i32 %v2_133f0, 4
  %v3_133f8 = inttoptr i32 %v2_133f8 to i32*
  store i32 %v1_133f4, i32* %v3_133f8, align 4
  %v0_133fc = load i32, i32* @r8, align 4
  %v1_133fc = add i32 %v0_133fc, 868
  %v2_133fc = inttoptr i32 %v1_133fc to i32*
  %v3_133fc = load i32, i32* %v2_133fc, align 4
  store i32 %v3_133fc, i32* %r3.global-to-local, align 4
  %v1_13400 = add i32 %v0_133fc, 880
  %v2_13400 = inttoptr i32 %v1_13400 to i32*
  %v3_13400 = load i32, i32* %v2_13400, align 4
  store i32 %v3_13400, i32* %r2.global-to-local, align 4
  %v0_13404 = load i32, i32* @r6, align 4
  %v2_13404 = sub i32 %v3_133fc, %v0_13404
  store i32 %v2_13404, i32* %r3.global-to-local, align 4
  %v1_13408 = load i32, i32* @r7, align 4
  %v2_13408 = add i32 %v1_13408, %v2_13404
  store i32 %v2_13408, i32* %r1.global-to-local, align 4
  %v1_1340c = add i32 %v0_133fc, 872
  %v2_1340c = inttoptr i32 %v1_1340c to i32*
  %v3_1340c = load i32, i32* %v2_1340c, align 4
  store i32 %v3_1340c, i32* %r3.global-to-local, align 4
  %v1_13414 = add i32 %v0_133fc, 884
  %v2_13414 = inttoptr i32 %v1_13414 to i32*
  %v3_13414 = load i32, i32* %v2_13414, align 4
  store i32 %v3_13414, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_13408, %v3_13400
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_133f0
  store i32 %v2_13408, i32* %v2_13400, align 4
  %v0_1341c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1341c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_133f0, %bb33
  %v1_1341c = phi i32 [ %v0_133fc, %dec_label_pc_133f0 ], [ %v1_1341c.pre, %bb33 ]
  %v0_1341c = phi i32 [ %v2_13408, %dec_label_pc_133f0 ], [ %v0_1341c.pre, %bb33 ]
  %v2_1341c = add i32 %v1_1341c, 868
  %v3_1341c = inttoptr i32 %v2_1341c to i32*
  store i32 %v0_1341c, i32* %v3_1341c, align 4
  %v0_13420 = load i32, i32* %r1.global-to-local, align 4
  %v1_13420 = load i32, i32* %r3.global-to-local, align 4
  %v2_13420 = add i32 %v1_13420, %v0_13420
  store i32 %v2_13420, i32* %r1.global-to-local, align 4
  %v1_13424 = load i32, i32* %r2.global-to-local, align 4
  %v0_13428 = load i32, i32* %r0.global-to-local, align 4
  %v1_13428 = add i32 %v0_13428, 8
  store i32 %v1_13428, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_13420, %v1_13424
  br i1 %tmp43, label %bb35, label %dec_label_pc_1346c

bb35:                                             ; preds = %bb34
  %v5_1342c = load i32, i32* @r8, align 4
  %v6_1342c = add i32 %v5_1342c, 884
  %v7_1342c = inttoptr i32 %v6_1342c to i32*
  store i32 %v2_13420, i32* %v7_1342c, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13434:                               ; preds = %dec_label_pc_133d4
  %v0_13434 = load i32, i32* @sb, align 4
  %v1_13434 = add i32 %v0_13434, 4
  store i32 %v1_13434, i32* %r3.global-to-local, align 4
  %v0_13438 = load i32, i32* @r6, align 4
  %v3_13438 = icmp ult i32 %v0_13438, %v1_13434
  br i1 %v3_13438, label %dec_label_pc_13448, label %dec_label_pc_13434.dec_label_pc_13440_crit_edge

dec_label_pc_13434.dec_label_pc_13440_crit_edge:  ; preds = %dec_label_pc_13434
  %v0_13440.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13440

dec_label_pc_13440:                               ; preds = %dec_label_pc_13434.dec_label_pc_13440_crit_edge, %dec_label_pc_133a0
  %v0_13440 = phi i32 [ %v0_13440.pre, %dec_label_pc_13434.dec_label_pc_13440_crit_edge ], [ %v0_131a8, %dec_label_pc_133a0 ]
  store i32 %v0_13440, i32* @r4, align 4
  br label %dec_label_pc_1346c

dec_label_pc_13448:                               ; preds = %dec_label_pc_13434
  %v1_13448 = add i32 %v0_13434, -7
  store i32 %v1_13448, i32* @r0, align 4
  %v0_1344c = call i32 @function_126ac()
  store i32 %v0_1344c, i32* @r0, align 4
  store i32 %v0_1344c, i32* @r4, align 4
  %v2_13450 = icmp eq i32 %v0_1344c, 0
  br i1 %v2_13450, label %dec_label_pc_1346c, label %dec_label_pc_13458

dec_label_pc_13458:                               ; preds = %dec_label_pc_13448
  %v0_13458 = load i32, i32* @r6, align 4
  %v1_13458 = add i32 %v0_13458, -8
  store i32 %v1_13458, i32* @r2, align 4
  %v0_1345c = load i32, i32* @r5, align 4
  store i32 %v0_1345c, i32* @r1, align 4
  %v0_13460 = call i32 @function_12180()
  %v0_13464 = load i32, i32* @r5, align 4
  store i32 %v0_13464, i32* @r0, align 4
  %v0_13468 = call i32 @function_13718()
  store i32 %v0_13468, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1346c

dec_label_pc_1346c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_13448, %dec_label_pc_13440, %dec_label_pc_13398, %.thread6, %dec_label_pc_13208, %dec_label_pc_13458
  store i32 %v2_1315c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_1347c = load i32, i32* inttoptr (i32 98344 to i32*), align 8
  store i32 %v4_1347c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1347c)
  br label %dec_label_pc_13488

dec_label_pc_13488:                               ; preds = %dec_label_pc_13190, %dec_label_pc_13138, %dec_label_pc_13120, %dec_label_pc_1346c
  %v0_13488 = load i32, i32* @r4, align 4
  store i32 %v0_13488, i32* %r0.global-to-local, align 4
  store i32 %v3_13100, i32* @r4, align 4
  store i32 %v6_13100, i32* @r5, align 4
  store i32 %v9_13100, i32* @r6, align 4
  store i32 %v12_13100, i32* @r7, align 4
  store i32 %v15_13100, i32* @r8, align 4
  store i32 %v18_13100, i32* @sb, align 4
  store i32 %v21_13100, i32* @sl, align 4
  store i32 %v24_13100, i32* @fp, align 4
  store i32 %v27_13100, i32* @lr, align 4
  ret i32 %v0_13488

; uselistorder directives
  uselistorder i32 %v2_13420, { 1, 0, 2 }
  uselistorder i32 %v2_13408, { 1, 2, 0, 3 }
  uselistorder i32 %v4_133e4, { 1, 0, 2 }
  uselistorder i32 %v3_133c4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13368, { 2, 1, 0 }
  uselistorder i32 %v2_13338, { 1, 0, 2 }
  uselistorder i32 %v0_132cc, { 1, 0 }
  uselistorder i32 %v0_13288, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_131ec, { 0, 2, 1, 3 }
  uselistorder i32 %v2_131e4, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_131c8, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_131c0, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_131bc, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_131ac, { 1, 0 }
  uselistorder i32 %v0_131a8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13188, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13488, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1346c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13398, { 1, 0 }
  uselistorder label %dec_label_pc_13338, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13284, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13278, { 1, 0 }
  uselistorder label %dec_label_pc_13274, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_13498(i32* %arg1) local_unnamed_addr {
dec_label_pc_13498:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_13498 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13498, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_13498
  %v1_13498 = load i32, i32* @r4, align 4
  store i32 %v1_13498, i32* %arg1, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13498, %bb
  %v10_134b0 = phi i32 [ %tmp, %dec_label_pc_13498 ], [ 0, %bb ]
  ret i32 %v10_134b0

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_134b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134b4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_134b4 = add i32 %arg2, 44
  %v2_134b4 = inttoptr i32 %v1_134b4 to i32*
  %v3_134b4 = load i32, i32* %v2_134b4, align 4
  %v1_134bc = add i32 %v3_134b4, 4
  %v2_134bc = inttoptr i32 %v1_134bc to i32*
  %v3_134bc = load i32, i32* %v2_134bc, align 4
  %v1_134c0 = add i32 %arg2, 860
  %v2_134c0 = inttoptr i32 %v1_134c0 to i32*
  %v3_134c0 = load i32, i32* %v2_134c0, align 4
  store i32 %v3_134c0, i32* @r4, align 4
  %v1_134c4 = and i32 %v3_134bc, -4
  store i32 %v1_134c4, i32* @r6, align 4
  %v1_134c8 = add i32 %v1_134c4, -17
  %v2_134cc = add i32 %v1_134c8, %v3_134c0
  store i32 %arg2, i32* @r5, align 4
  %v2_134d8 = sub i32 %v2_134cc, %arg1
  store i32 %v2_134d8, i32* @r0, align 4
  store i32 %v3_134c0, i32* @r1, align 4
  %v0_134e0 = call i32 @function_116f0()
  %v1_134e4 = add i32 %v0_134e0, -1
  store i32 %v1_134e4, i32* %r0.global-to-local, align 4
  %v0_134e8 = load i32, i32* @r4, align 4
  %v2_134e8 = mul i32 %v0_134e8, %v1_134e4
  store i32 %v2_134e8, i32* %r7.global-to-local, align 4
  %v2_134ec = icmp eq i32 %v2_134e8, 0
  store i1 %v2_134ec, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_134e8, 1
  br i1 %tmp8, label %dec_label_pc_13554, label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134b4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_134f8 = call i32 @function_14c20(i32 0)
  store i32 %v1_134f8, i32* %r0.global-to-local, align 4
  %v0_134fc = load i32, i32* @r5, align 4
  %v1_134fc = add i32 %v0_134fc, 44
  %v2_134fc = inttoptr i32 %v1_134fc to i32*
  %v3_134fc = load i32, i32* %v2_134fc, align 4
  %v0_13500 = load i32, i32* @r6, align 4
  %v2_13500 = add i32 %v0_13500, %v3_134fc
  %v9_13504 = icmp eq i32 %v1_134f8, %v2_13500
  store i1 %v9_13504, i1* @cpsr_z, align 1
  store i32 %v1_134f8, i32* @r4, align 4
  br i1 %v9_13504, label %dec_label_pc_13510, label %dec_label_pc_13554

dec_label_pc_13510:                               ; preds = %dec_label_pc_134f4
  %v0_13510 = load i32, i32* %r7.global-to-local, align 4
  %v1_13510 = sub i32 0, %v0_13510
  store i32 %v1_13510, i32* %r0.global-to-local, align 4
  %v1_13514 = call i32 @function_14c20(i32 %v1_13510)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1351c = call i32 @function_14c20(i32 0)
  store i32 %v1_1351c, i32* %r0.global-to-local, align 4
  %v7_13520 = icmp eq i32 %v1_1351c, -1
  store i1 %v7_13520, i1* @cpsr_z, align 1
  br i1 %v7_13520, label %dec_label_pc_13554, label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13510
  %v0_13528 = load i32, i32* @r4, align 4
  %v2_13528 = sub i32 %v0_13528, %v1_1351c
  store i32 %v2_13528, i32* %r0.global-to-local, align 4
  %v9_13528 = icmp eq i32 %v0_13528, %v1_1351c
  store i1 %v9_13528, i1* @cpsr_z, align 1
  br i1 %v9_13528, label %dec_label_pc_13554, label %dec_label_pc_13530

dec_label_pc_13530:                               ; preds = %dec_label_pc_13528
  %v0_13530 = load i32, i32* @r5, align 4
  %v1_13530 = add i32 %v0_13530, 872
  %v2_13530 = inttoptr i32 %v1_13530 to i32*
  %v3_13530 = load i32, i32* %v2_13530, align 4
  %v1_13534 = load i32, i32* @r6, align 4
  %v2_13534 = sub i32 %v1_13534, %v2_13528
  store i32 %v2_13534, i32* %r2.global-to-local, align 4
  %v1_13538 = add i32 %v0_13530, 44
  %v2_13538 = inttoptr i32 %v1_13538 to i32*
  %v3_13538 = load i32, i32* %v2_13538, align 4
  store i32 %v3_13538, i32* %r1.global-to-local, align 4
  %v2_1353c = sub i32 %v3_13530, %v2_13528
  %v1_13540 = or i32 %v2_13534, 1
  store i32 %v1_13540, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1353c, i32* %v2_13530, align 4
  %v0_1354c = load i32, i32* %r2.global-to-local, align 4
  %v1_1354c = load i32, i32* %r1.global-to-local, align 4
  %v2_1354c = add i32 %v1_1354c, 4
  %v3_1354c = inttoptr i32 %v2_1354c to i32*
  store i32 %v0_1354c, i32* %v3_1354c, align 4
  %v1_13560.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_13554:                               ; preds = %dec_label_pc_134f4, %dec_label_pc_13528, %dec_label_pc_13510, %dec_label_pc_134b4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_13530, %dec_label_pc_13554
  %v1_13560 = phi i32 [ %v1_13560.pre, %dec_label_pc_13530 ], [ 0, %dec_label_pc_13554 ]
  ret i32 %v1_13560

; uselistorder directives
  uselistorder i1 %v7_13520, { 1, 0 }
  uselistorder i32 %v1_1351c, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_14c20, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_13558, { 1, 0 }
  uselistorder label %dec_label_pc_13554, { 1, 2, 0, 3 }
}

define i32 @function_13564() local_unnamed_addr {
dec_label_pc_13564:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13564 = load i32, i32* @r4, align 4
  store i32 %v3_13564, i32* %stack_var_-36, align 4
  %v0_13568 = load i32, i32* @r0, align 4
  %v1_13568 = inttoptr i32 %v0_13568 to i32*
  %v2_13568 = load i32, i32* %v1_13568, align 4
  store i32 %v2_13568, i32* %r3.global-to-local, align 4
  %v2_1356c = icmp eq i32 %v2_13568, 0
  store i32 %v0_13568, i32* @r4, align 4
  br i1 %v2_1356c, label %dec_label_pc_136a4.preheader, label %dec_label_pc_13580

dec_label_pc_136a4.preheader:                     ; preds = %dec_label_pc_13564
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_136ac25 = add i32 %v0_13568, 52
  store i32 %v1_136ac25, i32* %r3.global-to-local, align 4
  %v2_136b426 = add i32 %v0_13568, 60
  %v3_136b427 = inttoptr i32 %v2_136b426 to i32*
  store i32 %v1_136ac25, i32* %v3_136b427, align 4
  %v0_136b828 = load i32, i32* %r3.global-to-local, align 4
  %v2_136b829 = add i32 %v0_136b828, 12
  %v3_136b830 = inttoptr i32 %v2_136b829 to i32*
  store i32 %v0_136b828, i32* %v3_136b830, align 4
  br label %dec_label_pc_136a4.dec_label_pc_136a4_crit_edge

dec_label_pc_13580:                               ; preds = %dec_label_pc_13564
  %v1_13580 = and i32 %v2_13568, -3
  %v3_13584 = udiv i32 %v2_13568, 8
  store i32 %v3_13584, i32* %r2.global-to-local, align 4
  store i32 %v1_13580, i32* %v1_13568, align 4
  %v0_1358c = load i32, i32* @r0, align 4
  %v1_1358c = add i32 %v0_1358c, -4
  store i32 %v1_1358c, i32* %r3.global-to-local, align 4
  %v1_13590 = load i32, i32* %r2.global-to-local, align 4
  %v4_13590 = mul i32 %v1_13590, 4
  %v5_13590 = add i32 %v4_13590, %v1_1358c
  store i32 %v5_13590, i32* %sb.global-to-local, align 4
  %v1_13594 = add i32 %v0_1358c, 52
  store i32 %v1_13594, i32* %r7.global-to-local, align 4
  %v1_13598 = add i32 %v0_1358c, 4
  store i32 %v1_13598, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_135a0

dec_label_pc_135a0:                               ; preds = %dec_label_pc_1369c, %dec_label_pc_13580
  %v1_1369410 = phi i32 [ %v1_13694, %dec_label_pc_1369c ], [ %v5_13590, %dec_label_pc_13580 ]
  %v1_135ac = phi i32 [ %v1_1369c, %dec_label_pc_1369c ], [ %v1_13598, %dec_label_pc_13580 ]
  %v1_135a0 = inttoptr i32 %v1_135ac to i32*
  %v2_135a0 = load i32, i32* %v1_135a0, align 4
  store i32 %v2_135a0, i32* %r1.global-to-local, align 4
  %v2_135a4 = icmp eq i32 %v2_135a0, 0
  br i1 %v2_135a4, label %dec_label_pc_13694, label %dec_label_pc_135ac

dec_label_pc_135ac:                               ; preds = %dec_label_pc_135a0
  %v0_135ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_135ac, i32* %v1_135a0, align 4
  %v0_135b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_135b0

dec_label_pc_135b0:                               ; preds = %dec_label_pc_13688, %dec_label_pc_135ac
  %v0_135cc = phi i32 [ %v0_13688, %dec_label_pc_13688 ], [ %v0_135b0.pre, %dec_label_pc_135ac ]
  %v1_135b0 = add i32 %v0_135cc, 4
  %v2_135b0 = inttoptr i32 %v1_135b0 to i32*
  %v3_135b0 = load i32, i32* %v2_135b0, align 4
  store i32 %v3_135b0, i32* %r3.global-to-local, align 4
  %v1_135b4 = and i32 %v3_135b0, -2
  store i32 %v1_135b4, i32* %lr.global-to-local, align 4
  %v2_135b8 = add i32 %v1_135b4, %v0_135cc
  store i32 %v2_135b8, i32* @r0, align 4
  %v1_135bc = urem i32 %v3_135b0, 2
  %v2_135bc = icmp eq i32 %v1_135bc, 0
  %v1_135c0 = add i32 %v0_135cc, 8
  %v2_135c0 = inttoptr i32 %v1_135c0 to i32*
  %v3_135c0 = load i32, i32* %v2_135c0, align 4
  store i32 %v3_135c0, i32* %sl.global-to-local, align 4
  %v1_135c4 = add i32 %v2_135b8, 4
  %v2_135c4 = inttoptr i32 %v1_135c4 to i32*
  %v3_135c4 = load i32, i32* %v2_135c4, align 4
  store i32 %v3_135c4, i32* %r8.global-to-local, align 4
  br i1 %v2_135bc, label %dec_label_pc_135cc, label %dec_label_pc_13600

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135b0
  %v1_135cc = inttoptr i32 %v0_135cc to i32*
  %v2_135cc = load i32, i32* %v1_135cc, align 4
  store i32 %v2_135cc, i32* %r5.global-to-local, align 4
  %v2_135d0 = sub i32 %v0_135cc, %v2_135cc
  store i32 %v2_135d0, i32* %r3.global-to-local, align 4
  %v1_135d4 = add i32 %v2_135d0, 8
  %v2_135d4 = inttoptr i32 %v1_135d4 to i32*
  %v3_135d4 = load i32, i32* %v2_135d4, align 4
  store i32 %v3_135d4, i32* %ip.global-to-local, align 4
  %v1_135d8 = add i32 %v3_135d4, 12
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* %r1.global-to-local, align 4
  %v9_135dc = icmp eq i32 %v3_135d8, %v2_135d0
  %v1_135e0 = add i32 %v2_135d0, 12
  %v2_135e0 = inttoptr i32 %v1_135e0 to i32*
  %v3_135e0 = load i32, i32* %v2_135e0, align 4
  store i32 %v3_135e0, i32* %r2.global-to-local, align 4
  br i1 %v9_135dc, label %dec_label_pc_135e8, label %dec_label_pc_13644

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135cc
  %v1_135e8 = add i32 %v3_135e0, 8
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 %v3_135e8, i32* %r3.global-to-local, align 4
  %v9_135ec = icmp eq i32 %v3_135e8, %v2_135d0
  br i1 %v9_135ec, label %dec_label_pc_135f4, label %dec_label_pc_13644

dec_label_pc_135f4:                               ; preds = %dec_label_pc_135e8
  store i32 %v3_135d4, i32* %v2_135e8, align 4
  %v0_135f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_135f8 = load i32, i32* %ip.global-to-local, align 4
  %v2_135f8 = add i32 %v1_135f8, 12
  %v3_135f8 = inttoptr i32 %v2_135f8 to i32*
  store i32 %v0_135f8, i32* %v3_135f8, align 4
  %v0_135fc = load i32, i32* %lr.global-to-local, align 4
  %v1_135fc = load i32, i32* %r5.global-to-local, align 4
  %v2_135fc = add i32 %v1_135fc, %v0_135fc
  store i32 %v2_135fc, i32* %lr.global-to-local, align 4
  %v0_13604.pre = load i32, i32* @r0, align 4
  %v0_13608.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13600

dec_label_pc_13600:                               ; preds = %dec_label_pc_135b0, %dec_label_pc_135f4
  %v0_13678 = phi i32 [ %v1_135b4, %dec_label_pc_135b0 ], [ %v2_135fc, %dec_label_pc_135f4 ]
  %v0_13608 = phi i32 [ %v3_135c4, %dec_label_pc_135b0 ], [ %v0_13608.pre, %dec_label_pc_135f4 ]
  %v1_1361c = phi i32 [ %v2_135b8, %dec_label_pc_135b0 ], [ %v0_13604.pre, %dec_label_pc_135f4 ]
  %v0_13600 = load i32, i32* @r4, align 4
  %v1_13600 = add i32 %v0_13600, 44
  %v2_13600 = inttoptr i32 %v1_13600 to i32*
  %v3_13600 = load i32, i32* %v2_13600, align 4
  store i32 %v3_13600, i32* %r3.global-to-local, align 4
  %v9_13604 = icmp eq i32 %v1_1361c, %v3_13600
  %v1_13608 = and i32 %v0_13608, -4
  store i32 %v1_13608, i32* %r5.global-to-local, align 4
  br i1 %v9_13604, label %dec_label_pc_13678, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_13600
  %v2_13610 = add i32 %v1_1361c, %v1_13608
  store i32 %v2_13610, i32* %r3.global-to-local, align 4
  %v1_13614 = add i32 %v2_13610, 4
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %v3_13614, i32* %r3.global-to-local, align 4
  %v1_13618 = urem i32 %v3_13614, 2
  %v2_13618 = icmp eq i32 %v1_13618, 0
  %v2_1361c = add i32 %v1_1361c, 4
  %v3_1361c = inttoptr i32 %v2_1361c to i32*
  store i32 %v1_13608, i32* %v3_1361c, align 4
  br i1 %v2_13618, label %dec_label_pc_13624, label %dec_label_pc_13610.dec_label_pc_13654_crit_edge

dec_label_pc_13610.dec_label_pc_13654_crit_edge:  ; preds = %dec_label_pc_13610
  %v0_13658.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13654

dec_label_pc_13624:                               ; preds = %dec_label_pc_13610
  %v0_13624 = load i32, i32* @r0, align 4
  %v1_13624 = add i32 %v0_13624, 8
  %v2_13624 = inttoptr i32 %v1_13624 to i32*
  %v3_13624 = load i32, i32* %v2_13624, align 4
  store i32 %v3_13624, i32* %ip.global-to-local, align 4
  %v1_13628 = add i32 %v3_13624, 12
  %v2_13628 = inttoptr i32 %v1_13628 to i32*
  %v3_13628 = load i32, i32* %v2_13628, align 4
  store i32 %v3_13628, i32* %r3.global-to-local, align 4
  %v9_1362c = icmp eq i32 %v3_13628, %v0_13624
  %v1_13630 = add i32 %v0_13624, 12
  %v2_13630 = inttoptr i32 %v1_13630 to i32*
  %v3_13630 = load i32, i32* %v2_13630, align 4
  store i32 %v3_13630, i32* %r2.global-to-local, align 4
  br i1 %v9_1362c, label %dec_label_pc_13638, label %dec_label_pc_13644

dec_label_pc_13638:                               ; preds = %dec_label_pc_13624
  %v1_13638 = add i32 %v3_13630, 8
  %v2_13638 = inttoptr i32 %v1_13638 to i32*
  %v3_13638 = load i32, i32* %v2_13638, align 4
  store i32 %v3_13638, i32* %r3.global-to-local, align 4
  %v9_1363c = icmp eq i32 %v3_13638, %v0_13624
  br i1 %v9_1363c, label %dec_label_pc_13648, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13624, %dec_label_pc_135e8, %dec_label_pc_135cc, %dec_label_pc_13638
  %v0_13644 = call i32 @function_13994()
  store i32 %v0_13644, i32* @r0, align 4
  %v0_13648.pre = load i32, i32* @ip, align 4
  %v1_13648.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13648

dec_label_pc_13648:                               ; preds = %dec_label_pc_13638, %dec_label_pc_13644
  %v1_13648 = phi i32 [ %v3_13630, %dec_label_pc_13638 ], [ %v1_13648.pre, %dec_label_pc_13644 ]
  %v0_13648 = phi i32 [ %v3_13624, %dec_label_pc_13638 ], [ %v0_13648.pre, %dec_label_pc_13644 ]
  %v2_13648 = add i32 %v1_13648, 8
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  store i32 %v0_13648, i32* %v3_13648, align 4
  %v0_1364c = load i32, i32* %r2.global-to-local, align 4
  %v1_1364c = load i32, i32* %ip.global-to-local, align 4
  %v2_1364c = add i32 %v1_1364c, 12
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 %v0_1364c, i32* %v3_1364c, align 4
  %v0_13650 = load i32, i32* %lr.global-to-local, align 4
  %v1_13650 = load i32, i32* %r5.global-to-local, align 4
  %v2_13650 = add i32 %v1_13650, %v0_13650
  store i32 %v2_13650, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_13610.dec_label_pc_13654_crit_edge, %dec_label_pc_13648
  %v0_13658 = phi i32 [ %v0_13658.pre, %dec_label_pc_13610.dec_label_pc_13654_crit_edge ], [ %v2_13650, %dec_label_pc_13648 ]
  %v0_13654 = load i32, i32* %r7.global-to-local, align 4
  %v1_13654 = add i32 %v0_13654, 8
  %v2_13654 = inttoptr i32 %v1_13654 to i32*
  %v3_13654 = load i32, i32* %v2_13654, align 4
  store i32 %v3_13654, i32* %r2.global-to-local, align 4
  %v1_13658 = or i32 %v0_13658, 1
  store i32 %v1_13658, i32* %r3.global-to-local, align 4
  %v0_1365c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1365c, i32* %v2_13654, align 4
  %v0_13660 = load i32, i32* %r1.global-to-local, align 4
  %v1_13660 = load i32, i32* %r2.global-to-local, align 4
  %v2_13660 = add i32 %v1_13660, 12
  %v3_13660 = inttoptr i32 %v2_13660 to i32*
  store i32 %v0_13660, i32* %v3_13660, align 4
  %v0_13664 = load i32, i32* %lr.global-to-local, align 4
  %v1_13664 = load i32, i32* %r1.global-to-local, align 4
  %v3_13664 = add i32 %v1_13664, %v0_13664
  %v4_13664 = inttoptr i32 %v3_13664 to i32*
  store i32 %v0_13664, i32* %v4_13664, align 4
  %v0_13668 = load i32, i32* %r3.global-to-local, align 4
  %v1_13668 = load i32, i32* %r1.global-to-local, align 4
  %v2_13668 = add i32 %v1_13668, 4
  %v3_13668 = inttoptr i32 %v2_13668 to i32*
  store i32 %v0_13668, i32* %v3_13668, align 4
  %v0_1366c = load i32, i32* %r2.global-to-local, align 4
  %v1_1366c = load i32, i32* %r1.global-to-local, align 4
  %v2_1366c = add i32 %v1_1366c, 8
  %v3_1366c = inttoptr i32 %v2_1366c to i32*
  store i32 %v0_1366c, i32* %v3_1366c, align 4
  %v0_13670 = load i32, i32* %r7.global-to-local, align 4
  %v1_13670 = load i32, i32* %r1.global-to-local, align 4
  %v2_13670 = add i32 %v1_13670, 12
  %v3_13670 = inttoptr i32 %v2_13670 to i32*
  store i32 %v0_13670, i32* %v3_13670, align 4
  br label %dec_label_pc_13688

dec_label_pc_13678:                               ; preds = %dec_label_pc_13600
  %v2_13678 = add i32 %v1_13608, %v0_13678
  %v1_1367c = or i32 %v2_13678, 1
  store i32 %v1_1367c, i32* %r3.global-to-local, align 4
  %v1_13680 = load i32, i32* %r1.global-to-local, align 4
  %v2_13680 = add i32 %v1_13680, 4
  %v3_13680 = inttoptr i32 %v2_13680 to i32*
  store i32 %v1_1367c, i32* %v3_13680, align 4
  %v0_13684 = load i32, i32* %r1.global-to-local, align 4
  %v1_13684 = load i32, i32* @r4, align 4
  %v2_13684 = add i32 %v1_13684, 44
  %v3_13684 = inttoptr i32 %v2_13684 to i32*
  store i32 %v0_13684, i32* %v3_13684, align 4
  br label %dec_label_pc_13688

dec_label_pc_13688:                               ; preds = %dec_label_pc_13654, %dec_label_pc_13678
  %v0_13688 = load i32, i32* %sl.global-to-local, align 4
  %v2_13688 = icmp eq i32 %v0_13688, 0
  store i32 %v0_13688, i32* %r1.global-to-local, align 4
  br i1 %v2_13688, label %dec_label_pc_13694.loopexit, label %dec_label_pc_135b0

dec_label_pc_13694.loopexit:                      ; preds = %dec_label_pc_13688
  %v0_13694.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13694.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13694

dec_label_pc_13694:                               ; preds = %dec_label_pc_13694.loopexit, %dec_label_pc_135a0
  %v1_13694 = phi i32 [ %v1_13694.pre, %dec_label_pc_13694.loopexit ], [ %v1_1369410, %dec_label_pc_135a0 ]
  %v0_1369c = phi i32 [ %v0_13694.pre, %dec_label_pc_13694.loopexit ], [ %v1_135ac, %dec_label_pc_135a0 ]
  %v9_13694 = icmp eq i32 %v0_1369c, %v1_13694
  br i1 %v9_13694, label %dec_label_pc_1370c, label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13694
  %v1_1369c = add i32 %v0_1369c, 4
  store i32 %v1_1369c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135a0

dec_label_pc_136a4.dec_label_pc_136a4_crit_edge:  ; preds = %dec_label_pc_136a4.preheader, %dec_label_pc_136a4.dec_label_pc_136a4_crit_edge
  %v0_136a4.pre = load i32, i32* @r4, align 4
  %v1_136a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_136a4 = mul i32 %v1_136a4.pre, 8
  %v5_136a4 = add i32 %v4_136a4, %v0_136a4.pre
  %v1_136a8 = add i32 %v1_136a4.pre, 1
  store i32 %v1_136a8, i32* %r2.global-to-local, align 4
  %v1_136ac = add i32 %v5_136a4, 44
  store i32 %v1_136ac, i32* %r3.global-to-local, align 4
  %v2_136b4 = add i32 %v5_136a4, 52
  %v3_136b4 = inttoptr i32 %v2_136b4 to i32*
  store i32 %v1_136ac, i32* %v3_136b4, align 4
  %v0_136b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_136b8 = add i32 %v0_136b8, 12
  %v3_136b8 = inttoptr i32 %v2_136b8 to i32*
  store i32 %v0_136b8, i32* %v3_136b8, align 4
  %v7_136bc = icmp sgt i32 %v1_136a8, 95
  br i1 %v7_136bc, label %dec_label_pc_136c0, label %dec_label_pc_136a4.dec_label_pc_136a4_crit_edge

dec_label_pc_136c0:                               ; preds = %dec_label_pc_136a4.dec_label_pc_136a4_crit_edge
  %v0_136c0 = load i32, i32* @r4, align 4
  %v1_136c0 = inttoptr i32 %v0_136c0 to i32*
  %v2_136c0 = load i32, i32* %v1_136c0, align 4
  store i32 %v2_136c0, i32* %r2.global-to-local, align 4
  %v1_136c4 = add i32 %v0_136c0, 864
  %v2_136c4 = inttoptr i32 %v1_136c4 to i32*
  %v3_136c4 = load i32, i32* %v2_136c4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_136cc = urem i32 %v2_136c0, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_136d4 = or i32 %v3_136c4, 1
  store i32 %v1_136d4, i32* %r1.global-to-local, align 4
  %v1_136d8 = or i32 %v1_136cc, 72
  store i32 %v1_136d8, i32* %r2.global-to-local, align 4
  %v1_136dc = add i32 %v0_136c0, 52
  store i32 %v1_136dc, i32* %ip.global-to-local, align 4
  %v2_136e0 = add i32 %v0_136c0, 840
  %v3_136e0 = inttoptr i32 %v2_136e0 to i32*
  store i32 0, i32* %v3_136e0, align 4
  %v0_136e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_136e4 = add i32 %v0_136e4, 65536
  store i32 %v1_136e4, i32* %r3.global-to-local, align 4
  %v0_136e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_136e8 = load i32, i32* @r4, align 4
  %v2_136e8 = add i32 %v1_136e8, 836
  %v3_136e8 = inttoptr i32 %v2_136e8 to i32*
  store i32 %v0_136e8, i32* %v3_136e8, align 4
  %v0_136ec = load i32, i32* %r0.global-to-local, align 4
  %v1_136ec = load i32, i32* @r4, align 4
  %v2_136ec = add i32 %v1_136ec, 844
  %v3_136ec = inttoptr i32 %v2_136ec to i32*
  store i32 %v0_136ec, i32* %v3_136ec, align 4
  %v1_136f0 = load i32, i32* @r4, align 4
  %v2_136f0 = add i32 %v1_136f0, 852
  %v3_136f0 = inttoptr i32 %v2_136f0 to i32*
  store i32 %v1_136e4, i32* %v3_136f0, align 4
  %v1_136f4 = load i32, i32* @r4, align 4
  %v2_136f4 = add i32 %v1_136f4, 864
  %v3_136f4 = inttoptr i32 %v2_136f4 to i32*
  store i32 %v1_136d4, i32* %v3_136f4, align 4
  %v1_136f8 = load i32, i32* @r4, align 4
  %v2_136f8 = inttoptr i32 %v1_136f8 to i32*
  store i32 %v1_136d8, i32* %v2_136f8, align 4
  %v0_136fc = load i32, i32* %ip.global-to-local, align 4
  %v1_136fc = load i32, i32* @r4, align 4
  %v2_136fc = add i32 %v1_136fc, 44
  %v3_136fc = inttoptr i32 %v2_136fc to i32*
  store i32 %v0_136fc, i32* %v3_136fc, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_13704 = call i32 @function_13f68(i32 30, i32 %v1_136d4, i32 %v1_136d8, i32 %v1_136e4)
  store i32 %v4_13704, i32* @r0, align 4
  %v1_13708 = load i32, i32* @r4, align 4
  %v2_13708 = add i32 %v1_13708, 860
  %v3_13708 = inttoptr i32 %v2_13708 to i32*
  store i32 %v4_13704, i32* %v3_13708, align 4
  br label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_13694, %dec_label_pc_136c0
  %v2_13710 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13710, i32* @r4, align 4
  %v1_13714 = load i32, i32* @r0, align 4
  ret i32 %v1_13714

; uselistorder directives
  uselistorder i32 %v0_136c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_136b8, { 1, 0 }
  uselistorder i32 %v1_1369c, { 1, 0 }
  uselistorder i32 %v0_13688, { 0, 2, 1 }
  uselistorder i32 %v0_13664, { 1, 0 }
  uselistorder i32 %v1_135b4, { 1, 0, 2 }
  uselistorder i32 %v0_135cc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1358c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 2, 0, 3, 5, 1, 4, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 11, 0, 6, 7, 5, 2, 8, 3, 9, 4, 10 }
  uselistorder label %dec_label_pc_1370c, { 1, 0 }
  uselistorder label %dec_label_pc_136a4.dec_label_pc_136a4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13688, { 1, 0 }
  uselistorder label %dec_label_pc_13654, { 1, 0 }
  uselistorder label %dec_label_pc_13648, { 1, 0 }
  uselistorder label %dec_label_pc_13644, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13600, { 1, 0 }
}

define i32 @function_13718() local_unnamed_addr {
dec_label_pc_13718:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_13718 = load i32, i32* @r4, align 4
  %v6_13718 = load i32, i32* @r5, align 4
  %v9_13718 = load i32, i32* @r6, align 4
  %v12_13718 = load i32, i32* @r7, align 4
  %v18_13718 = load i32, i32* @lr, align 4
  %v0_13720 = load i32, i32* @r0, align 4
  store i32 %v0_13720, i32* @r6, align 4
  %v2_13720 = icmp eq i32 %v0_13720, 0
  %v2_13724 = ptrtoint i32* %stack_var_-40 to i32
  store i32 98320, i32* @r7, align 4
  br i1 %v2_13720, label %dec_label_pc_1392c, label %dec_label_pc_13730

dec_label_pc_13730:                               ; preds = %dec_label_pc_13718
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_13734 = load i32, i32* inttoptr (i32 98388 to i32*), align 4
  store i32 %v4_13734, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_13734, i32* %r2.global-to-local, align 4
  %v4_13740 = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_13740, i32* %r1.global-to-local, align 4
  store i32 %v2_13724, i32* %r0.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1374c = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_1374c, i32* %ip.global-to-local, align 4
  store i32 79704, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1374c)
  %v0_13758 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13758, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13760 = load i32, i32* @r7, align 4
  %v2_13760 = add i32 %v0_13760, 16
  %v3_13760 = inttoptr i32 %v2_13760 to i32*
  %v4_13760 = load i32, i32* %v3_13760, align 4
  store i32 %v4_13760, i32* %ip.global-to-local, align 4
  store i32 79724, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13760)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13770 = load i32, i32* @r7, align 4
  %v2_13770 = add i32 %v0_13770, 32
  %v3_13770 = inttoptr i32 %v2_13770 to i32*
  %v4_13770 = load i32, i32* %v3_13770, align 4
  store i32 %v4_13770, i32* @lr, align 4
  %v0_13774 = load i32, i32* @r6, align 4
  %v1_13774 = add i32 %v0_13774, -4
  %v2_13774 = inttoptr i32 %v1_13774 to i32*
  %v3_13774 = load i32, i32* %v2_13774, align 4
  store i32 %v3_13774, i32* %r2.global-to-local, align 4
  %v1_13778 = inttoptr i32 %v4_13770 to i32*
  %v2_13778 = load i32, i32* %v1_13778, align 4
  store i32 %v2_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = and i32 %v3_13774, -4
  store i32 %v1_1377c, i32* %ip.global-to-local, align 4
  %v1_13780 = add i32 %v0_13774, -8
  store i32 %v1_13780, i32* @r5, align 4
  store i32 %v1_13780, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1377c, %v2_13778
  br i1 %tmp, label %dec_label_pc_137b0, label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %dec_label_pc_13730
  %v1_13790 = or i32 %v2_13778, 3
  store i32 %v1_13790, i32* %r3.global-to-local, align 4
  store i32 %v1_13790, i32* %v1_13778, align 4
  %v3_13794 = load i32, i32* @lr, align 4
  %v4_13794 = add i32 %v3_13794, -8
  store i32 %v4_13794, i32* %lr.global-to-local, align 4
  %v0_13798 = load i32, i32* %ip.global-to-local, align 4
  %v3_13798 = udiv i32 %v0_13798, 8
  store i32 %v3_13798, i32* %r1.global-to-local, align 4
  %v1_1379c = add i32 %v3_13794, -4
  store i32 %v1_1379c, i32* %r2.global-to-local, align 4
  %v4_137a0 = mul nuw i32 %v3_13798, 4
  %v5_137a0 = add i32 %v4_137a0, %v1_1379c
  %v6_137a0 = inttoptr i32 %v5_137a0 to i32*
  %v7_137a0 = load i32, i32* %v6_137a0, align 4
  store i32 %v7_137a0, i32* %r3.global-to-local, align 4
  %v1_137a4 = load i32, i32* @r5, align 4
  %v2_137a4 = add i32 %v1_137a4, 8
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  store i32 %v7_137a0, i32* %v3_137a4, align 4
  %v0_137a8 = load i32, i32* @r5, align 4
  %v1_137a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_137a8 = load i32, i32* %r1.global-to-local, align 4
  %v5_137a8 = mul i32 %v2_137a8, 4
  %v6_137a8 = add i32 %v5_137a8, %v1_137a8
  %v7_137a8 = inttoptr i32 %v6_137a8 to i32*
  store i32 %v0_137a8, i32* %v7_137a8, align 4
  br label %dec_label_pc_13914

dec_label_pc_137b0:                               ; preds = %dec_label_pc_13730
  %v1_137b0 = and i32 %v3_13774, 2
  %v2_137b0 = icmp eq i32 %v1_137b0, 0
  br i1 %v2_137b0, label %dec_label_pc_137b8, label %dec_label_pc_138ec

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137b0
  %v1_137b8 = or i32 %v2_13778, 1
  store i32 %v1_137b8, i32* %r3.global-to-local, align 4
  store i32 %v1_137b8, i32* %v1_13778, align 4
  %v0_137c0 = load i32, i32* @r6, align 4
  %v1_137c0 = add i32 %v0_137c0, -4
  %v2_137c0 = inttoptr i32 %v1_137c0 to i32*
  %v3_137c0 = load i32, i32* %v2_137c0, align 4
  store i32 %v3_137c0, i32* %r3.global-to-local, align 4
  %v0_137c4 = load i32, i32* @r5, align 4
  %v1_137c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_137c4 = add i32 %v1_137c4, %v0_137c4
  store i32 %v2_137c4, i32* %lr.global-to-local, align 4
  %v1_137c8 = urem i32 %v3_137c0, 2
  %v2_137c8 = icmp eq i32 %v1_137c8, 0
  %v1_137cc = add i32 %v2_137c4, 4
  %v2_137cc = inttoptr i32 %v1_137cc to i32*
  %v3_137cc = load i32, i32* %v2_137cc, align 4
  store i32 %v3_137cc, i32* %r8.global-to-local, align 4
  br i1 %v2_137c8, label %dec_label_pc_137d4, label %dec_label_pc_13808

dec_label_pc_137d4:                               ; preds = %dec_label_pc_137b8
  %v1_137d4 = add i32 %v0_137c0, -8
  %v2_137d4 = inttoptr i32 %v1_137d4 to i32*
  %v3_137d4 = load i32, i32* %v2_137d4, align 4
  store i32 %v3_137d4, i32* %r1.global-to-local, align 4
  %v2_137d8 = sub i32 %v0_137c4, %v3_137d4
  store i32 %v2_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = add i32 %v2_137d8, 8
  %v2_137dc = inttoptr i32 %v1_137dc to i32*
  %v3_137dc = load i32, i32* %v2_137dc, align 4
  store i32 %v3_137dc, i32* %r2.global-to-local, align 4
  %v1_137e0 = add i32 %v3_137dc, 12
  %v2_137e0 = inttoptr i32 %v1_137e0 to i32*
  %v3_137e0 = load i32, i32* %v2_137e0, align 4
  store i32 %v3_137e0, i32* %r4.global-to-local, align 4
  %v9_137e4 = icmp eq i32 %v3_137e0, %v2_137d8
  %v1_137e8 = add i32 %v2_137d8, 12
  %v2_137e8 = inttoptr i32 %v1_137e8 to i32*
  %v3_137e8 = load i32, i32* %v2_137e8, align 4
  store i32 %v3_137e8, i32* %r0.global-to-local, align 4
  br i1 %v9_137e4, label %dec_label_pc_137f0, label %dec_label_pc_13854

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137d4
  %v1_137f0 = add i32 %v3_137e8, 8
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  store i32 %v3_137f0, i32* %r3.global-to-local, align 4
  %v9_137f4 = icmp eq i32 %v3_137f0, %v2_137d8
  br i1 %v9_137f4, label %dec_label_pc_137fc, label %dec_label_pc_13854

dec_label_pc_137fc:                               ; preds = %dec_label_pc_137f0
  store i32 %v3_137dc, i32* %v2_137f0, align 4
  %v0_13800 = load i32, i32* %r0.global-to-local, align 4
  %v1_13800 = load i32, i32* %r2.global-to-local, align 4
  %v2_13800 = add i32 %v1_13800, 12
  %v3_13800 = inttoptr i32 %v2_13800 to i32*
  store i32 %v0_13800, i32* %v3_13800, align 4
  %v0_13804 = load i32, i32* %ip.global-to-local, align 4
  %v1_13804 = load i32, i32* %r1.global-to-local, align 4
  %v2_13804 = add i32 %v1_13804, %v0_13804
  store i32 %v2_13804, i32* %ip.global-to-local, align 4
  %v0_13814.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13818.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13808

dec_label_pc_13808:                               ; preds = %dec_label_pc_137b8, %dec_label_pc_137fc
  %v0_13894 = phi i32 [ %v1_137c4, %dec_label_pc_137b8 ], [ %v2_13804, %dec_label_pc_137fc ]
  %v0_13818 = phi i32 [ %v3_137cc, %dec_label_pc_137b8 ], [ %v0_13818.pre, %dec_label_pc_137fc ]
  %v1_1382c = phi i32 [ %v2_137c4, %dec_label_pc_137b8 ], [ %v0_13814.pre, %dec_label_pc_137fc ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_1380c = load i32, i32* @r7, align 4
  %v2_1380c = add i32 %v0_1380c, 32
  %v3_1380c = inttoptr i32 %v2_1380c to i32*
  %v4_1380c = load i32, i32* %v3_1380c, align 4
  store i32 %v4_1380c, i32* %r2.global-to-local, align 4
  %v1_13810 = add i32 %v4_1380c, 44
  %v2_13810 = inttoptr i32 %v1_13810 to i32*
  %v3_13810 = load i32, i32* %v2_13810, align 4
  store i32 %v3_13810, i32* %r3.global-to-local, align 4
  %v9_13814 = icmp eq i32 %v1_1382c, %v3_13810
  %v1_13818 = and i32 %v0_13818, -4
  store i32 %v1_13818, i32* %r0.global-to-local, align 4
  br i1 %v9_13814, label %dec_label_pc_13894, label %dec_label_pc_13820

dec_label_pc_13820:                               ; preds = %dec_label_pc_13808
  %v2_13820 = add i32 %v1_1382c, %v1_13818
  store i32 %v2_13820, i32* %r3.global-to-local, align 4
  %v1_13824 = add i32 %v2_13820, 4
  %v2_13824 = inttoptr i32 %v1_13824 to i32*
  %v3_13824 = load i32, i32* %v2_13824, align 4
  store i32 %v3_13824, i32* %r3.global-to-local, align 4
  %v1_13828 = urem i32 %v3_13824, 2
  %v2_13828 = icmp eq i32 %v1_13828, 0
  %v2_1382c = add i32 %v1_1382c, 4
  %v3_1382c = inttoptr i32 %v2_1382c to i32*
  store i32 %v1_13818, i32* %v3_1382c, align 4
  br i1 %v2_13828, label %dec_label_pc_13834, label %dec_label_pc_13820.dec_label_pc_13864_crit_edge

dec_label_pc_13820.dec_label_pc_13864_crit_edge:  ; preds = %dec_label_pc_13820
  %v0_13874.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13864

dec_label_pc_13834:                               ; preds = %dec_label_pc_13820
  %v0_13834 = load i32, i32* %lr.global-to-local, align 4
  %v1_13834 = add i32 %v0_13834, 8
  %v2_13834 = inttoptr i32 %v1_13834 to i32*
  %v3_13834 = load i32, i32* %v2_13834, align 4
  store i32 %v3_13834, i32* %r1.global-to-local, align 4
  %v1_13838 = add i32 %v3_13834, 12
  %v2_13838 = inttoptr i32 %v1_13838 to i32*
  %v3_13838 = load i32, i32* %v2_13838, align 4
  store i32 %v3_13838, i32* %r3.global-to-local, align 4
  %v9_1383c = icmp eq i32 %v3_13838, %v0_13834
  %v1_13840 = add i32 %v0_13834, 12
  %v2_13840 = inttoptr i32 %v1_13840 to i32*
  %v3_13840 = load i32, i32* %v2_13840, align 4
  store i32 %v3_13840, i32* %r2.global-to-local, align 4
  br i1 %v9_1383c, label %dec_label_pc_13848, label %dec_label_pc_13854

dec_label_pc_13848:                               ; preds = %dec_label_pc_13834
  %v1_13848 = add i32 %v3_13840, 8
  %v2_13848 = inttoptr i32 %v1_13848 to i32*
  %v3_13848 = load i32, i32* %v2_13848, align 4
  store i32 %v3_13848, i32* %r3.global-to-local, align 4
  %v9_1384c = icmp eq i32 %v3_13848, %v0_13834
  br i1 %v9_1384c, label %dec_label_pc_13858, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13834, %dec_label_pc_137f0, %dec_label_pc_137d4, %dec_label_pc_13848
  %v0_13854 = call i32 @function_13994()
  store i32 %v0_13854, i32* %r0.global-to-local, align 4
  %v0_13858.pre = load i32, i32* @r1, align 4
  %v1_13858.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %dec_label_pc_13848, %dec_label_pc_13854
  %v1_13858 = phi i32 [ %v3_13840, %dec_label_pc_13848 ], [ %v1_13858.pre, %dec_label_pc_13854 ]
  %v0_13858 = phi i32 [ %v3_13834, %dec_label_pc_13848 ], [ %v0_13858.pre, %dec_label_pc_13854 ]
  %v2_13858 = add i32 %v1_13858, 8
  %v3_13858 = inttoptr i32 %v2_13858 to i32*
  store i32 %v0_13858, i32* %v3_13858, align 4
  %v0_1385c = load i32, i32* %r2.global-to-local, align 4
  %v1_1385c = load i32, i32* %r1.global-to-local, align 4
  %v2_1385c = add i32 %v1_1385c, 12
  %v3_1385c = inttoptr i32 %v2_1385c to i32*
  store i32 %v0_1385c, i32* %v3_1385c, align 4
  %v0_13860 = load i32, i32* %ip.global-to-local, align 4
  %v1_13860 = load i32, i32* %r0.global-to-local, align 4
  %v2_13860 = add i32 %v1_13860, %v0_13860
  store i32 %v2_13860, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_13820.dec_label_pc_13864_crit_edge, %dec_label_pc_13858
  %v0_13874 = phi i32 [ %v0_13874.pre, %dec_label_pc_13820.dec_label_pc_13864_crit_edge ], [ %v2_13860, %dec_label_pc_13858 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_13868 = load i32, i32* @r7, align 4
  %v2_13868 = add i32 %v0_13868, 32
  %v3_13868 = inttoptr i32 %v2_13868 to i32*
  %v4_13868 = load i32, i32* %v3_13868, align 4
  %v1_1386c = add i32 %v4_13868, 52
  store i32 %v1_1386c, i32* %r3.global-to-local, align 4
  %v1_13870 = add i32 %v4_13868, 60
  %v2_13870 = inttoptr i32 %v1_13870 to i32*
  %v3_13870 = load i32, i32* %v2_13870, align 4
  store i32 %v3_13870, i32* %r1.global-to-local, align 4
  %v1_13874 = or i32 %v0_13874, 1
  store i32 %v1_13874, i32* %r2.global-to-local, align 4
  %v1_13878 = load i32, i32* %r4.global-to-local, align 4
  %v2_13878 = add i32 %v1_13878, 12
  %v3_13878 = inttoptr i32 %v2_13878 to i32*
  store i32 %v1_1386c, i32* %v3_13878, align 4
  %v0_1387c = load i32, i32* %r1.global-to-local, align 4
  %v1_1387c = load i32, i32* %r4.global-to-local, align 4
  %v2_1387c = add i32 %v1_1387c, 8
  %v3_1387c = inttoptr i32 %v2_1387c to i32*
  store i32 %v0_1387c, i32* %v3_1387c, align 4
  %v0_13880 = load i32, i32* %r2.global-to-local, align 4
  %v1_13880 = load i32, i32* %r4.global-to-local, align 4
  %v2_13880 = add i32 %v1_13880, 4
  %v3_13880 = inttoptr i32 %v2_13880 to i32*
  store i32 %v0_13880, i32* %v3_13880, align 4
  %v0_13884 = load i32, i32* %ip.global-to-local, align 4
  %v1_13884 = load i32, i32* %r4.global-to-local, align 4
  %v3_13884 = add i32 %v1_13884, %v0_13884
  %v4_13884 = inttoptr i32 %v3_13884 to i32*
  store i32 %v0_13884, i32* %v4_13884, align 4
  %v0_13888 = load i32, i32* %r4.global-to-local, align 4
  %v1_13888 = load i32, i32* %r1.global-to-local, align 4
  %v2_13888 = add i32 %v1_13888, 12
  %v3_13888 = inttoptr i32 %v2_13888 to i32*
  store i32 %v0_13888, i32* %v3_13888, align 4
  %v0_1388c = load i32, i32* %r4.global-to-local, align 4
  %v1_1388c = load i32, i32* %r3.global-to-local, align 4
  %v2_1388c = add i32 %v1_1388c, 8
  %v3_1388c = inttoptr i32 %v2_1388c to i32*
  store i32 %v0_1388c, i32* %v3_1388c, align 4
  br label %dec_label_pc_138a4

dec_label_pc_13894:                               ; preds = %dec_label_pc_13808
  %v2_13894 = add i32 %v1_13818, %v0_13894
  store i32 %v2_13894, i32* %ip.global-to-local, align 4
  %v1_13898 = or i32 %v2_13894, 1
  store i32 %v1_13898, i32* %r3.global-to-local, align 4
  %v0_1389c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1389c, i32* %v2_13810, align 4
  %v0_138a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_138a0 = load i32, i32* %r4.global-to-local, align 4
  %v2_138a0 = add i32 %v1_138a0, 4
  %v3_138a0 = inttoptr i32 %v2_138a0 to i32*
  store i32 %v0_138a0, i32* %v3_138a0, align 4
  br label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_13864, %dec_label_pc_13894
  %v0_138a4 = load i32, i32* %ip.global-to-local, align 4
  %v3_138a8 = icmp ult i32 %v0_138a4, 131070
  br i1 %v3_138a8, label %dec_label_pc_13914, label %dec_label_pc_138ac

dec_label_pc_138ac:                               ; preds = %dec_label_pc_138a4
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_138b0 = load i32, i32* @r7, align 4
  %v2_138b0 = add i32 %v0_138b0, 32
  %v3_138b0 = inttoptr i32 %v2_138b0 to i32*
  %v4_138b0 = load i32, i32* %v3_138b0, align 4
  store i32 %v4_138b0, i32* @r4, align 4
  %v1_138b4 = inttoptr i32 %v4_138b0 to i32*
  %v2_138b4 = load i32, i32* %v1_138b4, align 4
  store i32 %v2_138b4, i32* %r3.global-to-local, align 4
  %v1_138b8 = and i32 %v2_138b4, 2
  %v2_138b8 = icmp eq i32 %v1_138b8, 0
  br i1 %v2_138b8, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_138ac
  store i32 %v4_138b0, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_138ac, %bb
  store i32 80068, i32* @lr, align 4
  %v1_138c0 = xor i1 %v2_138b8, true
  call void @__pseudo_cond_branch(i1 %v1_138c0, i32 ptrtoint (i32* @global_var_13564.706 to i32))
  %v0_138c4 = load i32, i32* @r4, align 4
  %v1_138c4 = add i32 %v0_138c4, 44
  %v2_138c4 = inttoptr i32 %v1_138c4 to i32*
  %v3_138c4 = load i32, i32* %v2_138c4, align 4
  store i32 %v3_138c4, i32* %r3.global-to-local, align 4
  %v1_138c8 = add i32 %v3_138c4, 4
  %v2_138c8 = inttoptr i32 %v1_138c8 to i32*
  %v3_138c8 = load i32, i32* %v2_138c8, align 4
  store i32 %v3_138c8, i32* %r3.global-to-local, align 4
  %v1_138cc = add i32 %v0_138c4, 836
  %v2_138cc = inttoptr i32 %v1_138cc to i32*
  %v3_138cc = load i32, i32* %v2_138cc, align 4
  store i32 %v3_138cc, i32* %r2.global-to-local, align 4
  %v1_138d0 = and i32 %v3_138c8, -4
  store i32 %v1_138d0, i32* %r3.global-to-local, align 4
  %v3_138d4 = icmp ult i32 %v1_138d0, %v3_138cc
  br i1 %v3_138d4, label %dec_label_pc_13914, label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %bb15
  store i32 %v0_138c4, i32* %r1.global-to-local, align 4
  %v1_138e0 = add i32 %v0_138c4, 840
  %v2_138e0 = inttoptr i32 %v1_138e0 to i32*
  %v3_138e0 = load i32, i32* %v2_138e0, align 4
  store i32 %v3_138e0, i32* %r0.global-to-local, align 4
  %v2_138e4 = call i32 @function_134b4(i32 %v3_138e0, i32 %v0_138c4)
  store i32 %v2_138e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13914

dec_label_pc_138ec:                               ; preds = %dec_label_pc_137b0
  %v2_138ec = inttoptr i32 %v1_13780 to i32*
  %v3_138ec = load i32, i32* %v2_138ec, align 4
  store i32 %v3_138ec, i32* %r0.global-to-local, align 4
  %v1_138f0 = add i32 %v4_13770, 848
  %v2_138f0 = inttoptr i32 %v1_138f0 to i32*
  %v3_138f0 = load i32, i32* %v2_138f0, align 4
  store i32 %v3_138f0, i32* %r2.global-to-local, align 4
  %v1_138f4 = add i32 %v4_13770, 868
  %v2_138f4 = inttoptr i32 %v1_138f4 to i32*
  %v3_138f4 = load i32, i32* %v2_138f4, align 4
  %v2_138f8 = add i32 %v3_138ec, %v1_1377c
  store i32 %v2_138f8, i32* %r1.global-to-local, align 4
  %v1_138fc = add i32 %v3_138f0, -1
  store i32 %v1_138fc, i32* %r2.global-to-local, align 4
  %v2_13900 = sub i32 %v3_138f4, %v2_138f8
  store i32 %v2_13900, i32* %r3.global-to-local, align 4
  store i32 %v2_13900, i32* %v2_138f4, align 4
  %v1_13908 = load i32, i32* @lr, align 4
  %v2_13908 = add i32 %v1_13908, 848
  %v3_13908 = inttoptr i32 %v2_13908 to i32*
  store i32 %v1_138fc, i32* %v3_13908, align 4
  %v0_1390c = load i32, i32* %r0.global-to-local, align 4
  %v1_1390c = load i32, i32* @r5, align 4
  %v2_1390c = sub i32 %v1_1390c, %v0_1390c
  store i32 %v2_1390c, i32* %r0.global-to-local, align 4
  %v4_13910 = call i32 @function_14efc(i32 %v2_1390c, i32 %v2_138f8, i32 %v1_138fc, i32 %v2_13900)
  store i32 %v4_13910, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13914

dec_label_pc_13914:                               ; preds = %bb15, %dec_label_pc_138a4, %dec_label_pc_138dc, %dec_label_pc_13790, %dec_label_pc_138ec
  store i32 %v2_13724, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_13920 = load i32, i32* @r7, align 4
  %v2_13920 = add i32 %v0_13920, 24
  %v3_13920 = inttoptr i32 %v2_13920 to i32*
  %v4_13920 = load i32, i32* %v3_13920, align 4
  store i32 %v4_13920, i32* @ip, align 4
  store i32 80172, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13920)
  br label %dec_label_pc_1392c

dec_label_pc_1392c:                               ; preds = %dec_label_pc_13718, %dec_label_pc_13914
  store i32 %v3_13718, i32* @r4, align 4
  store i32 %v6_13718, i32* @r5, align 4
  store i32 %v9_13718, i32* @r6, align 4
  store i32 %v12_13718, i32* @r7, align 4
  store i32 %v18_13718, i32* @lr, align 4
  ret i32 %v2_13724

; uselistorder directives
  uselistorder i32 %v0_138c4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13884, { 1, 0 }
  uselistorder i32 %v1_137c4, { 1, 0 }
  uselistorder i32 %v0_137c4, { 1, 0 }
  uselistorder i32 %v3_13798, { 1, 0 }
  uselistorder i32 %v1_1377c, { 1, 0, 2 }
  uselistorder i32 %v2_13778, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13770, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13720, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 2, 3, 4, 0, 6, 7, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1392c, { 1, 0 }
  uselistorder label %dec_label_pc_13914, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_138a4, { 1, 0 }
  uselistorder label %dec_label_pc_13864, { 1, 0 }
  uselistorder label %dec_label_pc_13858, { 1, 0 }
  uselistorder label %dec_label_pc_13854, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13808, { 1, 0 }
}

define i32 @function_13938(i32 %arg1) local_unnamed_addr {
dec_label_pc_13938:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_13938 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13938, label %bb, label %dec_label_pc_13938..thread5_crit_edge

dec_label_pc_13938..thread5_crit_edge:            ; preds = %dec_label_pc_13938
  %v3_13954.pre = load i32, i32* @r4, align 4
  %v0_13968.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %dec_label_pc_13938
  %v1_13938 = load i32, i32* %r0.global-to-local, align 4
  %v3_13938 = udiv i32 %v1_13938, 131072
  %v4_13938 = mul i32 %v1_13938, 32768
  %v5_13938 = or i32 %v3_13938, %v4_13938
  %v8_13938 = and i32 %v5_13938, %v1_13938
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_13938..thread5_crit_edge, %bb
  %v0_13968 = phi i32 [ %v0_13968.pre, %dec_label_pc_13938..thread5_crit_edge ], [ 0, %bb ]
  %v3_13954 = phi i32 [ %v3_13954.pre, %dec_label_pc_13938..thread5_crit_edge ], [ %v8_13938, %bb ]
  store i32 %v3_13954, i32* %stack_var_-12, align 4
  %v6_13954 = load i32, i32* @r5, align 4
  %v9_13954 = load i32, i32* @lr, align 4
  %v4_13964 = load i32, i32* inttoptr (i32 98352 to i32*), align 16
  store i32 %v4_13964, i32* @r5, align 4
  store i32 %v0_13968, i32* @r4, align 4
  store i32 %v4_13964, i32* @r0, align 4
  %v0_13974 = call i32 @function_13564()
  %v0_13978 = load i32, i32* @r4, align 4
  store i32 %v0_13978, i32* %r0.global-to-local, align 4
  %v0_1397c = load i32, i32* @r5, align 4
  %v2_13984 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13984, i32* @r4, align 4
  store i32 %v6_13954, i32* @r5, align 4
  store i32 %v9_13954, i32* @lr, align 4
  %v2_13988 = call i32 @function_134b4(i32 %v0_13978, i32 %v0_1397c)
  store i32 %v2_13988, i32* %r0.global-to-local, align 4
  %v0_1398c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1398c, label %bb14, label %.thread6

bb14:                                             ; preds = %.thread5
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread5, %bb14
  %v4_13990 = phi i32 [ %v2_13988, %.thread5 ], [ 0, %bb14 ]
  ret i32 %v4_13990

; uselistorder directives
  uselistorder i32 %v1_13938, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 0, 1, 2 }
  uselistorder i32 (i32, i32)* @function_134b4, { 1, 0 }
  uselistorder i32 ()* @function_13564, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 98352 to i32*), { 17, 2, 1, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_13994() local_unnamed_addr {
dec_label_pc_13994:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 98320, i32* @r5, align 4
  %v4_139ac = load i32, i32* inttoptr (i32 98336 to i32*), align 32
  store i32 80312, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_139ac)
  %v2_139c8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v3_139d4 = call i32 @function_11c1c(i32 1, i32 %v2_139c8, i32 0)
  %v0_139dc = load i32, i32* @r5, align 4
  %v2_139dc = add i32 %v0_139dc, 664
  %v3_139dc = inttoptr i32 %v2_139dc to i32*
  %v4_139dc = load i32, i32* %v3_139dc, align 4
  %v2_139e0 = icmp eq i32 %v4_139dc, 0
  br i1 %v2_139e0, label %dec_label_pc_139e8, label %dec_label_pc_13a28

dec_label_pc_139e8:                               ; preds = %dec_label_pc_13994
  store i32 1, i32* %v3_139dc, align 4
  br label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_13a38, %dec_label_pc_139e8
  %v0_139f4 = load i32, i32* @r5, align 4
  %v2_139f4 = add i32 %v0_139f4, 160
  store i32 %v2_139f4, i32* @r4, align 4
  %v2_13a00 = add i32 %v0_139f4, 36
  %v3_13a00 = inttoptr i32 %v2_13a00 to i32*
  %v4_13a00 = load i32, i32* %v3_13a00, align 4
  call void @__pseudo_branch(i32 %v4_13a00)
  %v1_13a10 = call i32 @function_1249c(i32 6)
  %v0_13a1c = load i32, i32* @r5, align 4
  %v2_13a1c = add i32 %v0_13a1c, 16
  %v3_13a1c = inttoptr i32 %v2_13a1c to i32*
  %v4_13a1c = load i32, i32* %v3_13a1c, align 4
  store i32 80424, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13a1c)
  %v0_13a2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %dec_label_pc_13994, %dec_label_pc_139f0
  %v1_13a40 = phi i32 [ %v0_139dc, %dec_label_pc_13994 ], [ %v0_13a2c.pre, %dec_label_pc_139f0 ]
  %v2_13a2c = add i32 %v1_13a40, 664
  %v3_13a2c = inttoptr i32 %v2_13a2c to i32*
  %v4_13a2c = load i32, i32* %v3_13a2c, align 4
  %v7_13a30 = icmp eq i32 %v4_13a2c, 1
  br i1 %v7_13a30, label %dec_label_pc_13a38, label %dec_label_pc_13a74

dec_label_pc_13a38:                               ; preds = %dec_label_pc_13a28
  %v2_13a38 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_13a38, i32* @r4, align 4
  store i32 2, i32* %v3_13a2c, align 4
  store i32 20, i32* @r2, align 4
  %v2_13a50 = bitcast i32* %stack_var_-28 to i8*
  %v3_13a50 = call i32 @function_120d0(i8* %v2_13a50, i32 0)
  %v3_13a6c = call i32 @function_149fc(i32 6, i32 %v2_13a38, i32 0)
  br label %dec_label_pc_139f0

dec_label_pc_13a74:                               ; preds = %dec_label_pc_13a28
  %v7_13a74 = icmp eq i32 %v4_13a2c, 2
  br i1 %v7_13a74, label %dec_label_pc_13a7c, label %dec_label_pc_13a88

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a74
  store i32 3, i32* %v3_13a2c, align 4
  %v0_13a84 = call i32 @function_13994()
  %v0_13a88.pre = load i32, i32* @r5, align 4
  %v1_13a88.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13a88

dec_label_pc_13a88:                               ; preds = %dec_label_pc_13a74, %dec_label_pc_13a7c
  %v3_13a94 = phi i32 [ 664, %dec_label_pc_13a74 ], [ %v1_13a88.pre, %dec_label_pc_13a7c ]
  %v2_13a94 = phi i32 [ %v1_13a40, %dec_label_pc_13a74 ], [ %v0_13a88.pre, %dec_label_pc_13a7c ]
  %v2_13a88 = add i32 %v2_13a94, %v3_13a94
  %v3_13a88 = inttoptr i32 %v2_13a88 to i32*
  %v4_13a88 = load i32, i32* %v3_13a88, align 4
  %v7_13a8c = icmp eq i32 %v4_13a88, 3
  br i1 %v7_13a8c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13a88
  store i32 4, i32* %v3_13a88, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13a88, %bb
  call void @__pseudo_cond_branch(i1 %v7_13a8c, i32 ptrtoint (i32* @global_var_14fec.715 to i32))
  br label %dec_label_pc_13aa0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_13aa0, %.thread1
  %v0_13aa0 = call i32 @function_13994()
  br label %dec_label_pc_13aa0

; uselistorder directives
  uselistorder i32* %v3_13a2c, { 1, 0, 2 }
  uselistorder i32 ()* @function_13994, { 1, 0, 5, 4, 6, 3, 2 }
  uselistorder i32 6, { 14, 15, 76, 16, 42, 17, 43, 18, 44, 19, 41, 2, 45, 20, 46, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 4, 1, 30, 31, 32, 33, 5, 34, 35, 47, 48, 49, 6, 50, 51, 52, 53, 7, 54, 55, 56, 57, 8, 58, 9, 59, 60, 36, 61, 10, 62, 63, 64, 37, 65, 11, 66, 67, 38, 68, 69, 70, 71, 72, 39, 73, 12, 74, 77, 78, 79, 80, 81, 40, 82, 13, 83, 3, 75 }
  uselistorder i32* inttoptr (i32 98336 to i32*), { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_13a88, { 1, 0 }
  uselistorder label %dec_label_pc_13a28, { 1, 0 }
}

define i32 @function_13aa8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13aa8:
  %v0_13aa8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13aa8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13aa8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13aa8, %bb
  %v4_13ab8 = phi i32 [ %arg1, %dec_label_pc_13aa8 ], [ 0, %bb ]
  ret i32 %v4_13ab8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_13abc(i32 %arg1) local_unnamed_addr {
dec_label_pc_13abc:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_13acc = call i32 @function_13adc()
  ret i32 %v0_13acc
}

define i32 @function_13adc() local_unnamed_addr {
dec_label_pc_13adc:
  store i32 1, i32* @r3, align 4
  %v0_13ae8 = call i32 @function_13af8()
  ret i32 %v0_13ae8
}

define i32 @function_13af8() local_unnamed_addr {
dec_label_pc_13af8:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_13af8 = load i32, i32* @r4, align 4
  store i32 224, i32* @lr, align 4
  store i32 98320, i32* %ip.global-to-local, align 4
  %v0_13b0c = load i32, i32* @r1, align 4
  store i32 %v0_13b0c, i32* %fp.global-to-local, align 4
  %v0_13b10 = load i32, i32* @r2, align 4
  store i32 %v0_13b10, i32* %r5.global-to-local, align 4
  %v0_13b14 = load i32, i32* @r0, align 4
  store i32 %v0_13b14, i32* @r4, align 4
  %v0_13b18 = load i32, i32* @r3, align 4
  br label %dec_label_pc_13b24

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13b24
  %v1_13b20 = add i32 %v0_13b5c, 1
  store i32 %v1_13b20, i32* @r4, align 4
  br label %dec_label_pc_13b24

dec_label_pc_13b24:                               ; preds = %dec_label_pc_13af8, %dec_label_pc_13b20
  %v0_13b5c = phi i32 [ %v0_13b14, %dec_label_pc_13af8 ], [ %v1_13b20, %dec_label_pc_13b20 ]
  %v1_13b24 = inttoptr i32 %v0_13b5c to i8*
  %v2_13b24 = load i8, i8* %v1_13b24, align 1
  %v3_13b24 = zext i8 %v2_13b24 to i32
  %v4_13b28 = load i32, i32* inttoptr (i32 98544 to i32*), align 16
  %v2_13b2c = mul nuw nsw i32 %v3_13b24, 2
  %v2_13b30 = add i32 %v2_13b2c, %v4_13b28
  %v3_13b30 = inttoptr i32 %v2_13b30 to i16*
  %v4_13b30 = load i16, i16* %v3_13b30, align 2
  %v1_13b34 = and i16 %v4_13b30, 32
  %v2_13b34 = icmp eq i16 %v1_13b34, 0
  br i1 %v2_13b34, label %dec_label_pc_13b3c, label %dec_label_pc_13b20

dec_label_pc_13b3c:                               ; preds = %dec_label_pc_13b24
  %v7_13b3c = icmp eq i8 %v2_13b24, 43
  br i1 %v7_13b3c, label %dec_label_pc_13b5c, label %dec_label_pc_13b44

dec_label_pc_13b44:                               ; preds = %dec_label_pc_13b3c
  %v7_13b44 = icmp eq i8 %v2_13b24, 45
  br i1 %v7_13b44, label %dec_label_pc_13b5c, label %bb

bb:                                               ; preds = %dec_label_pc_13b44
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_13b60

dec_label_pc_13b5c:                               ; preds = %dec_label_pc_13b3c, %dec_label_pc_13b44
  %storemerge39 = phi i32 [ 1, %dec_label_pc_13b44 ], [ 0, %dec_label_pc_13b3c ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_13b5c = add i32 %v0_13b5c, 1
  store i32 %v1_13b5c, i32* @r4, align 4
  br label %dec_label_pc_13b60

dec_label_pc_13b60:                               ; preds = %bb, %dec_label_pc_13b5c
  %v0_13b80 = phi i32 [ %v0_13b5c, %bb ], [ %v1_13b5c, %dec_label_pc_13b5c ]
  %v1_13b60 = and i32 %v0_13b10, -17
  %v3_13b60 = icmp eq i32 %v1_13b60, 0
  br i1 %v3_13b60, label %dec_label_pc_13b6c, label %bb52

bb52:                                             ; preds = %dec_label_pc_13b60
  store i32 %v0_13b14, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_13b6c:                               ; preds = %dec_label_pc_13b60
  %v1_13b6c = inttoptr i32 %v0_13b80 to i8*
  %v2_13b6c = load i8, i8* %v1_13b6c, align 1
  %v7_13b70 = icmp eq i8 %v2_13b6c, 48
  %v1_13b74 = add i32 %v0_13b10, 10
  store i32 %v1_13b74, i32* %r5.global-to-local, align 4
  br i1 %v7_13b70, label %dec_label_pc_13b80, label %bb53

bb53:                                             ; preds = %dec_label_pc_13b6c
  store i32 %v0_13b14, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_13b80:                               ; preds = %dec_label_pc_13b6c
  %v1_13b80 = add i32 %v0_13b80, 1
  %v2_13b80 = inttoptr i32 %v1_13b80 to i8*
  %v3_13b80 = load i8, i8* %v2_13b80, align 1
  %v4_13b80 = zext i8 %v3_13b80 to i32
  store i32 %v1_13b80, i32* @r4, align 4
  %v1_13b84 = or i32 %v4_13b80, 32
  %v7_13b88 = icmp eq i32 %v1_13b84, 120
  %v1_13b8c = add i32 %v0_13b10, 8
  store i32 %v1_13b8c, i32* %r5.global-to-local, align 4
  store i32 %v1_13b80, i32* %r6.global-to-local, align 4
  br i1 %v7_13b88, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_13b80
  %v3_13b98 = mul i32 %v1_13b8c, 2
  store i32 %v3_13b98, i32* %r5.global-to-local, align 4
  %v2_13b9c = add i32 %v0_13b80, 2
  store i32 %v2_13b9c, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13b80, %bb53, %bb54
  %v0_13ba0 = phi i32 [ %v1_13b74, %bb53 ], [ %v3_13b98, %bb54 ], [ %v1_13b8c, %dec_label_pc_13b80 ]
  %v5_13ba4 = icmp slt i32 %v0_13ba0, 16
  br i1 %v5_13ba4, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_13bbc = phi i32 [ %v0_13b10, %bb52 ], [ %v0_13ba0, %.thread8 ], [ 16, %bb55 ]
  %v1_13ba8 = add i32 %v0_13bbc, -2
  %tmp = icmp ugt i32 %v1_13ba8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13bb8

.thread:                                          ; preds = %bb56
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13c64

dec_label_pc_13bb8:                               ; preds = %bb56
  %v2_13bc0 = call i32 @function_117ec(i32 -1, i32 %v0_13bbc)
  store i32 -1, i32* @r0, align 4
  %v0_13bcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13bcc, i32* @r1, align 4
  %v1_13bd0 = urem i32 %v0_13bbc, 256
  store i32 %v1_13bd0, i32* %sl.global-to-local, align 4
  %v0_13bd4 = call i32 @function_116f0()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_13bd4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_13bec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13bec

dec_label_pc_13be8:                               ; preds = %bb63, %dec_label_pc_13c48
  %v0_13be8 = phi i32 [ %v1_13c2836, %bb63 ], [ %v0_13be8.pre, %dec_label_pc_13c48 ]
  store i32 %v0_13be8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13bec

dec_label_pc_13bec:                               ; preds = %dec_label_pc_13bb8, %dec_label_pc_13be8
  %v0_13c28 = phi i32 [ %v0_13bec.pre, %dec_label_pc_13bb8 ], [ %v0_13be8, %dec_label_pc_13be8 ]
  %v1_13bec = inttoptr i32 %v0_13c28 to i8*
  %v2_13bec = load i8, i8* %v1_13bec, align 1
  %v3_13bec = zext i8 %v2_13bec to i32
  %v1_13bf0 = add nsw i32 %v3_13bec, -48
  %v1_13bf4 = urem i32 %v1_13bf0, 256
  %v1_13bfc = or i32 %v3_13bec, 32
  %tmp71 = icmp ult i32 %v1_13bf4, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_13c04

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13bec
  %tmp72 = icmp ugt i32 %v1_13bfc, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_13c04
  %v1_13c08 = add nsw i32 %v1_13bfc, -87
  %v5_13c10 = urem i32 %v1_13c08, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_13bec, %dec_label_pc_13c04, %bb57
  %v3_13c40 = phi i32 [ %v1_13bf4, %dec_label_pc_13bec ], [ 40, %dec_label_pc_13c04 ], [ %v5_13c10, %bb57 ]
  %v1_13c14 = load i32, i32* %r5.global-to-local, align 4
  %v6_13c18 = icmp slt i32 %v3_13c40, %v1_13c14
  br i1 %v6_13c18, label %dec_label_pc_13c1c, label %dec_label_pc_13c64.loopexit

dec_label_pc_13c1c:                               ; preds = %bb58
  %v0_13c1c = load i32, i32* %ip.global-to-local, align 4
  %v1_13c1c = load i32, i32* %r8.global-to-local, align 4
  %v9_13c1c = icmp eq i32 %v0_13c1c, %v1_13c1c
  br i1 %v9_13c1c, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_13c1c
  %v1_13c2832 = add i32 %v0_13c28, 1
  store i32 %v1_13c2832, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c30

bb59:                                             ; preds = %dec_label_pc_13c1c
  %v3_13c1c = icmp ult i32 %v0_13c1c, %v1_13c1c
  %v1_13c28 = add i32 %v0_13c28, 1
  store i32 %v1_13c28, i32* %r4.global-to-local, align 4
  br i1 %v3_13c1c, label %dec_label_pc_13c30, label %dec_label_pc_13c48

dec_label_pc_13c30:                               ; preds = %bb59, %.thread31
  %v1_13c2836 = phi i32 [ %v1_13c2832, %.thread31 ], [ %v1_13c28, %bb59 ]
  %v4_13c382235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_13c30 = load i32, i32* %sl.global-to-local, align 4
  %v3_13c30 = icmp uge i32 %v3_13c40, %v1_13c30
  %v9_13c30 = icmp eq i32 %v3_13c40, %v1_13c30
  %v2_13c34 = xor i1 %v3_13c30, true
  %v3_13c34 = or i1 %v9_13c30, %v2_13c34
  br i1 %v3_13c34, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_13c30
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_13c30, %bb60
  %v4_13c38 = phi i32 [ %v4_13c382235, %dec_label_pc_13c30 ], [ 0, %bb60 ]
  %v2_13c38 = xor i1 %v9_13c30, true
  %v3_13c38 = and i1 %v3_13c30, %v2_13c38
  br i1 %v3_13c38, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_13c38 = urem i32 %v4_13c38, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_13c3c = phi i32 [ %v5_13c38, %bb62 ], [ %v4_13c38, %bb61 ]
  %v2_13c3c = icmp eq i32 %v0_13c3c, 0
  br i1 %v2_13c3c, label %bb63, label %dec_label_pc_13c48

bb63:                                             ; preds = %thread-pre-split
  %v4_13c40 = mul i32 %v0_13c1c, %v1_13c14
  %v5_13c40 = add i32 %v4_13c40, %v3_13c40
  store i32 %v5_13c40, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13be8

dec_label_pc_13c48:                               ; preds = %bb59, %thread-pre-split
  %v0_13c48 = call i32 @function_1207c()
  %v0_13c50 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13c50, i32* %ip.global-to-local, align 4
  %v0_13c54 = load i32, i32* @r7, align 4
  %v2_13c54 = and i32 %v0_13c54, %v0_13b18
  store i32 %v2_13c54, i32* @r7, align 4
  %v2_13c5c = inttoptr i32 %v0_13c48 to i32*
  store i32 34, i32* %v2_13c5c, align 4
  %v0_13be8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13be8

dec_label_pc_13c64.loopexit:                      ; preds = %bb58
  %v0_13c64.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13c64

dec_label_pc_13c64:                               ; preds = %.thread, %dec_label_pc_13c64.loopexit
  %v2_13c68 = phi i32 [ %v0_13c64.pre, %dec_label_pc_13c64.loopexit ], [ %v0_13b0c, %.thread ]
  %v2_13c64 = icmp eq i32 %v2_13c68, 0
  br i1 %v2_13c64, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_13c64
  %v1_13c68 = load i32, i32* %r6.global-to-local, align 4
  %v3_13c68 = inttoptr i32 %v2_13c68 to i32*
  store i32 %v1_13c68, i32* %v3_13c68, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_13c64, %bb64
  %v0_13c70 = load i32, i32* @r7, align 4
  %v2_13c70 = icmp eq i32 %v0_13c70, 0
  %. = select i1 %v2_13c70, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_13c7c = icmp eq i32 %v0_13b18, 0
  %v0_13ca0.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13c7c, label %dec_label_pc_13c98, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_13ca0.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_13c88, label %dec_label_pc_13c98

dec_label_pc_13c88:                               ; preds = %bb68
  %v0_13c88 = call i32 @function_1207c()
  %v2_13c90 = inttoptr i32 %v0_13c88 to i32*
  store i32 34, i32* %v2_13c90, align 4
  %v0_13c94 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13c94, i32* %ip.global-to-local, align 4
  %v0_13c98.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13c98

dec_label_pc_13c98:                               ; preds = %bb68, %bb65, %dec_label_pc_13c88
  %v0_13ca0.pre = phi i32 [ %v0_13ca0.pre.pre, %bb68 ], [ %v0_13c94, %dec_label_pc_13c88 ], [ %v0_13ca0.pre.pre, %bb65 ]
  %v0_13c98 = phi i32 [ %v0_13c70, %bb68 ], [ %v0_13c98.pre, %dec_label_pc_13c88 ], [ %v0_13c70, %bb65 ]
  %v2_13c98 = icmp eq i32 %v0_13c98, 0
  br i1 %v2_13c98, label %dec_label_pc_13c98._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_13c98
  %v2_13c9c = sub i32 0, %v0_13ca0.pre
  store i32 %v2_13c9c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13c98._crit_edge

dec_label_pc_13c98._crit_edge:                    ; preds = %dec_label_pc_13c98, %bb69
  %v0_13ca0 = phi i32 [ %v2_13c9c, %bb69 ], [ %v0_13ca0.pre, %dec_label_pc_13c98 ]
  store i32 %v3_13af8, i32* @r4, align 4
  ret i32 %v0_13ca0

; uselistorder directives
  uselistorder i32 %v0_13ca0.pre, { 1, 0 }
  uselistorder i32 %v0_13ca0.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_13c38, { 1, 0 }
  uselistorder i1 %v3_13c30, { 1, 0 }
  uselistorder i32 %v1_13c30, { 1, 0 }
  uselistorder i32 %v1_13bfc, { 1, 0 }
  uselistorder i32 %v1_13bf4, { 1, 0 }
  uselistorder i32 %v0_13c28, { 1, 0, 2 }
  uselistorder i32 %v0_13be8, { 1, 0 }
  uselistorder i32 %v3_13b98, { 1, 0 }
  uselistorder i32 %v1_13b8c, { 1, 0, 2 }
  uselistorder i32 %v0_13b5c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13b18, { 1, 0 }
  uselistorder i32 %v0_13b10, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 ()* @function_116f0, { 5, 3, 2, 1, 4, 0 }
  uselistorder i32 (i32, i32)* @function_117ec, { 3, 2, 1, 8, 7, 0, 6, 5, 4 }
  uselistorder i32 34, { 1, 2, 0, 4, 7, 3, 8, 5, 6 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13c98._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13c98, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_13c64, { 1, 0 }
  uselistorder label %dec_label_pc_13c48, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13bec, { 1, 0 }
  uselistorder label %dec_label_pc_13be8, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13b60, { 1, 0 }
  uselistorder label %dec_label_pc_13b5c, { 1, 0 }
  uselistorder label %dec_label_pc_13b24, { 1, 0 }
}

define i32 @function_13cb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cb0:
  %v0_13cb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13cb0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13cb0
  %v3_13cb4 = udiv i32 %arg1, 2
  %v4_13cb4 = shl i32 %arg1, 31
  %v5_13cb4 = or i32 %v3_13cb4, %v4_13cb4
  %v8_13cb4 = and i32 %v5_13cb4, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13cb0, %bb
  %v9_13cb4 = phi i32 [ %arg1, %dec_label_pc_13cb0 ], [ %v8_13cb4, %bb ]
  ret i32 %v9_13cb4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 3, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13cb8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cb8:
  %stack_var_-16 = alloca i32, align 4
  store i32 98320, i32* @r5, align 4
  %v4_13cc4 = load i32, i32* inttoptr (i32 98408 to i32*), align 8
  store i32 %v4_13cc4, i32* @r4, align 4
  %v2_13ccc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_13ce4 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_13ce4)
  %v0_13cf8 = load i32, i32* @r5, align 4
  %v2_13cf8 = add i32 %v0_13cf8, 16
  %v3_13cf8 = inttoptr i32 %v2_13cf8 to i32*
  %v4_13cf8 = load i32, i32* %v3_13cf8, align 4
  call void @__pseudo_branch(i32 %v4_13cf8)
  %v0_13d08 = load i32, i32* @r5, align 4
  %v2_13d08 = add i32 %v0_13d08, 668
  %v3_13d08 = inttoptr i32 %v2_13d08 to i32*
  %v4_13d08 = load i32, i32* %v3_13d08, align 4
  %v2_13d0c = icmp eq i32 %v4_13d08, 0
  br i1 %v2_13d0c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13cb8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13cb8, %bb
  %v2_13d18 = xor i1 %v2_13d0c, true
  call void @__pseudo_cond_branch(i1 %v2_13d18, i32 %v4_13d08)
  store i32 %v2_13ccc, i32* @r0, align 4
  %v0_13d28 = load i32, i32* @r5, align 4
  %v2_13d28 = add i32 %v0_13d28, 24
  %v3_13d28 = inttoptr i32 %v2_13d28 to i32*
  %v4_13d28 = load i32, i32* %v3_13d28, align 4
  call void @__pseudo_branch(i32 %v4_13d28)
  %v0_13d34 = call i32 @function_14584()
  %v0_13d3c = load i32, i32* @r5, align 4
  %v2_13d3c = add i32 %v0_13d3c, -9712
  %v9_13d3c = icmp eq i32 %v2_13d3c, 0
  br i1 %v9_13d3c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_13d44 = xor i1 %v9_13d3c, true
  call void @__pseudo_cond_branch(i1 %v2_13d44, i32 %v2_13d3c)
  %v0_13d48 = load i32, i32* @r6, align 4
  %v1_13d4c = call i32 @function_14fec(i32 %v0_13d48)
  %v0_13d50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13d50, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_13d50 = load i32, i32* @r8, align 4
  %v5_13d50 = sdiv i32 %v2_13d50, 64
  %v6_13d50 = and i32 %v5_13d50, %v1_13d4c
  store i32 %v6_13d50, i32* @r4, align 4
  %v2_13d64 = load i32, i32* @r2, align 4
  %v3_13d64 = mul i32 %v2_13d64, %v4_13d28
  %v8_13d68 = shl i32 %v2_13d50, %v3_13d64
  %v9_13d68 = and i32 %v8_13d68, %v3_13d64
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_13d68 = phi i32 [ %v1_13d4c, %bb9 ], [ %v9_13d68, %bb10 ]
  ret i32 %v10_13d68

; uselistorder directives
  uselistorder i32 %v2_13d50, { 1, 0 }
  uselistorder i32 %v1_13d4c, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_13d70(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d70:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_13d70 = load i32, i32* @r4, align 4
  %v6_13d70 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_13d74 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_13d74, label %dec_label_pc_13e08, label %dec_label_pc_13d84

dec_label_pc_13d84:                               ; preds = %dec_label_pc_13d70
  %v2_13d94 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_13da8 = call i32 @function_149fc(i32 17, i32 0, i32 %v2_13d94)
  %v3_13dac = load i32, i32* %stack_var_-44, align 4
  %v7_13db0 = icmp eq i32 %v3_13dac, 1
  br i1 %v7_13db0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13d84
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13d84, %bb
  call void @__pseudo_cond_branch(i1 %v7_13db0, i32 ptrtoint (i32* @global_var_11c1c.727 to i32))
  %v2_13dc4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_13dcc = call i32 @function_14f30(i32 %v2_13dc4, i32 %v2_13dc4)
  %v2_13dd0 = icmp eq i32 %v2_13dcc, 0
  br i1 %v2_13dd0, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_13de4 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_13de4, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_13df4 = load i32, i32* %stack_var_-24, align 4
  %v1_13df8 = and i32 %v3_13df4, 65536
  %v2_13df8 = icmp eq i32 %v1_13df8, 0
  br i1 %v2_13df8, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_13df8, i32 ptrtoint (i32* @global_var_11c1c.727 to i32))
  %v0_13e08.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13e08

dec_label_pc_13e08:                               ; preds = %dec_label_pc_13d70, %.thread6
  %v0_13e08 = phi i32 [ %v0_13e08.pre, %.thread6 ], [ 0, %dec_label_pc_13d70 ]
  store i32 %v3_13d70, i32* @r4, align 4
  store i32 %v6_13d70, i32* @lr, align 4
  ret i32 %v0_13e08

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_149fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e08, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_13e1c() local_unnamed_addr {
dec_label_pc_13e1c:
  %stack_var_-36 = alloca i32, align 4
  store i32 98320, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1783c.731 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_13e3c = call i32 @function_15460(i32 ptrtoint ([11 x i8]* @global_var_1783c.731 to i32))
  store i32 %v2_13e3c, i32* @r6, align 4
  %v2_13e40 = icmp eq i32 %v2_13e3c, 0
  br i1 %v2_13e40, label %dec_label_pc_13ec0, label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13e1c
  store i32 224, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_17848.734 to i32), i32* @r8, align 4
  %v2_13e54 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13e54, i32* @r7, align 4
  br label %bb18

dec_label_pc_13e5c:                               ; preds = %bb18
  %v3_13e5c = load i32, i32* %stack_var_-36, align 4
  %v1_13e60 = inttoptr i32 %v3_13e5c to i32*
  %v2_13e60 = load i32, i32* %v1_13e60, align 4
  %v1_13e64 = inttoptr i32 %v2_13e60 to i8*
  %v2_13e64 = load i8, i8* %v1_13e64, align 1
  %v7_13e68 = icmp eq i8 %v2_13e64, 99
  br i1 %v7_13e68, label %dec_label_pc_13e70, label %.backedge3

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e5c
  %v1_13e70 = add i32 %v2_13e60, 1
  %v2_13e70 = inttoptr i32 %v1_13e70 to i8*
  %v3_13e70 = load i8, i8* %v2_13e70, align 1
  %v7_13e74 = icmp eq i8 %v3_13e70, 112
  br i1 %v7_13e74, label %dec_label_pc_13e7c, label %.backedge3

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e70
  %v1_13e7c = add i32 %v2_13e60, 2
  %v2_13e7c = inttoptr i32 %v1_13e7c to i8*
  %v3_13e7c = load i8, i8* %v2_13e7c, align 1
  %v7_13e80 = icmp eq i8 %v3_13e7c, 117
  br i1 %v7_13e80, label %dec_label_pc_13e88, label %.backedge3

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e7c
  %v1_13e88 = add i32 %v2_13e60, 3
  %v2_13e88 = inttoptr i32 %v1_13e88 to i8*
  %v3_13e88 = load i8, i8* %v2_13e88, align 1
  %v4_13e88 = zext i8 %v3_13e88 to i32
  %v0_13e8c = load i32, i32* @r4, align 4
  %v1_13e8c = load i32, i32* @sl, align 4
  %v2_13e8c = add i32 %v1_13e8c, %v0_13e8c
  %v3_13e8c = inttoptr i32 %v2_13e8c to i32*
  %v4_13e8c = load i32, i32* %v3_13e8c, align 4
  %v2_13e90 = mul nuw nsw i32 %v4_13e88, 2
  %v2_13e94 = add i32 %v4_13e8c, %v2_13e90
  %v3_13e94 = inttoptr i32 %v2_13e94 to i16*
  %v4_13e94 = load i16, i16* %v3_13e94, align 2
  %v1_13e98 = and i16 %v4_13e94, 8
  %v2_13e98 = icmp eq i16 %v1_13e98, 0
  br i1 %v2_13e98, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_13e88
  %v1_13e9c = load i32, i32* @r5, align 4
  %v2_13e9c = add i32 %v1_13e9c, 1
  store i32 %v2_13e9c, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_13e88, %dec_label_pc_13e5c, %dec_label_pc_13e70, %dec_label_pc_13e7c
  %v0_13ea0.pre = load i32, i32* @r6, align 4
  %v0_13eac.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_13e48
  %v0_13eac = phi i32 [ %v0_13eac.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_17848.734 to i32), %dec_label_pc_13e48 ]
  %v0_13ea0 = phi i32 [ %v0_13ea0.pre, %.backedge3 ], [ %v2_13e3c, %dec_label_pc_13e48 ]
  %v4_13eb0 = inttoptr i32 %v0_13ea0 to i32*
  %v5_13eb0 = call i32 @function_15104(i32* %v4_13eb0, i32 %v2_13e54, i32 258, i32 %v0_13eac)
  %v2_13eb4 = icmp eq i32 %v5_13eb0, 0
  br i1 %v2_13eb4, label %dec_label_pc_13f24, label %dec_label_pc_13e5c

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13e1c
  store i32 ptrtoint ([14 x i8]* @global_var_1784c.737 to i32), i32* @r0, align 4
  %v2_13ec8 = call i32 @function_15460(i32 ptrtoint ([14 x i8]* @global_var_1784c.737 to i32))
  store i32 %v2_13ec8, i32* @r6, align 4
  %v2_13ecc = icmp eq i32 %v2_13ec8, 0
  br i1 %v2_13ecc, label %bb19, label %dec_label_pc_13ed8

bb19:                                             ; preds = %dec_label_pc_13ec0
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13f24

dec_label_pc_13ed8:                               ; preds = %dec_label_pc_13ec0
  store i32 ptrtoint ([10 x i8]* @global_var_1785c.739 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_17880.741 to i32), i32* @r7, align 4
  %v2_13ee8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13ee8, i32* @r4, align 4
  br label %bb21

dec_label_pc_13ef0:                               ; preds = %bb21
  %v0_13f1c = load i32, i32* @r8, align 4
  %v1_13f1c = inttoptr i32 %v0_13f1c to i8*
  %v3_13ef0 = load i32, i32* %stack_var_-36, align 4
  %v1_13ef4 = inttoptr i32 %v3_13ef0 to i32*
  %v2_13ef4 = load i32, i32* %v1_13ef4, align 4
  store i32 %v2_13ef4, i32* @r1, align 4
  %v4_13ef8 = call i32 @function_16710(i8* %v1_13f1c, i32 %v2_13ef4)
  %v2_13efc = icmp eq i32 %v4_13ef8, 0
  br i1 %v2_13efc, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_13ef0
  %v1_13f00 = load i32, i32* @r5, align 4
  %v2_13f00 = add i32 %v1_13f00, 1
  store i32 %v2_13f00, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_13ef0
  %v0_13f0c.pre = load i32, i32* @r7, align 4
  %v0_13f10.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_13ed8
  %v0_13f10 = phi i32 [ %v0_13f10.pre, %.backedge ], [ %v2_13ec8, %dec_label_pc_13ed8 ]
  %v0_13f0c = phi i32 [ %v0_13f0c.pre, %.backedge ], [ ptrtoint (i32* @global_var_17880.741 to i32), %dec_label_pc_13ed8 ]
  %v4_13f14 = inttoptr i32 %v0_13f10 to i32*
  %v5_13f14 = call i32 @function_15104(i32* %v4_13f14, i32 %v2_13ee8, i32 459266, i32 %v0_13f0c)
  %v2_13f18 = icmp eq i32 %v5_13f14, 0
  br i1 %v2_13f18, label %dec_label_pc_13f24, label %dec_label_pc_13ef0

dec_label_pc_13f24:                               ; preds = %bb18, %bb21, %bb19
  %v0_13f24 = load i32, i32* @r6, align 4
  %v1_13f28 = inttoptr i32 %v0_13f24 to i32*
  %v2_13f28 = call i32 @function_1542c(i32* %v1_13f28)
  %v0_13f2c = load i32, i32* @r5, align 4
  %v2_13f2c = icmp eq i32 %v0_13f2c, 0
  %.v0_13f2c = select i1 %v2_13f2c, i32 1, i32 %v0_13f2c
  ret i32 %.v0_13f2c

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @function_15460, { 1, 0 }
  uselistorder label %dec_label_pc_13f24, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_13f68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13f68:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14350

bb:                                               ; preds = %dec_label_pc_13f68
  %v7_13f7c = mul i32 %arg1, 4
  %v8_13f7c = add i32 %v7_13f7c, ptrtoint (i32* @global_var_13f84.744 to i32)
  call void @__pseudo_branch(i32 %v8_13f7c)
  br label %dec_label_pc_14350

dec_label_pc_14350:                               ; preds = %bb, %dec_label_pc_13f68
  %v0_14350 = call i32 @function_1207c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1435c = inttoptr i32 %v0_14350 to i32*
  store i32 22, i32* %v2_1435c, align 4
  %v0_1450c = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_1450c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14584() local_unnamed_addr {
dec_label_pc_145a8.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14584 = load i32, i32* @r4, align 4
  store i32 %v3_14584, i32* %stack_var_-16, align 4
  store i32 98320, i32* %r5.global-to-local, align 4
  store i32 98312, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_145a8.dec_label_pc_145a8_crit_edge, %dec_label_pc_145a8.lr.ph
  %v1_145a8 = phi i32 [ %v1_145b4, %dec_label_pc_145a8.dec_label_pc_145a8_crit_edge ], [ 0, %dec_label_pc_145a8.lr.ph ]
  %v0_145a8 = phi i32 [ %v0_145a8.pre, %dec_label_pc_145a8.dec_label_pc_145a8_crit_edge ], [ 98312, %dec_label_pc_145a8.lr.ph ]
  %v4_145a8 = mul i32 %v1_145a8, 4
  %v5_145a8 = add i32 %v4_145a8, %v0_145a8
  %v6_145a8 = inttoptr i32 %v5_145a8 to i32*
  %v7_145a8 = load i32, i32* %v6_145a8, align 4
  call void @__pseudo_branch(i32 %v7_145a8)
  %v0_145b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_145b4 = add i32 %v0_145b4, -1
  store i32 %v1_145b4, i32* %r4.global-to-local, align 4
  %v2_145b4 = icmp eq i32 %v0_145b4, 0
  br i1 %v2_145b4, label %dec_label_pc_145bc, label %dec_label_pc_145a8.dec_label_pc_145a8_crit_edge

dec_label_pc_145a8.dec_label_pc_145a8_crit_edge:  ; preds = %dec_label_pc_145a8
  %v0_145a8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_145a8

dec_label_pc_145bc:                               ; preds = %dec_label_pc_145a8
  %v0_145c0.pre = load i32, i32* %r5.global-to-local, align 4
  %phitmp = add i32 %v0_145c0.pre, 684
  %phitmp13 = inttoptr i32 %phitmp to i32*
  %v4_145c0 = load i32, i32* %phitmp13, align 4
  %v2_145c4 = icmp eq i32 %v4_145c0, 0
  br i1 %v2_145c4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_145bc
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_145bc, %bb
  %v2_145cc = xor i1 %v2_145c4, true
  call void @__pseudo_cond_branch(i1 %v2_145cc, i32 %v4_145c0)
  %v0_145d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_145d4 = add i32 %v0_145d4, 688
  %v3_145d4 = inttoptr i32 %v2_145d4 to i32*
  %v4_145d4 = load i32, i32* %v3_145d4, align 4
  %v2_145d8 = icmp eq i32 %v4_145d4, 0
  br i1 %v2_145d8, label %bb20, label %bb19

bb19:                                             ; preds = %bb18
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v2_145e0 = xor i1 %v2_145d8, true
  call void @__pseudo_cond_branch(i1 %v2_145e0, i32 %v4_145d4)
  %v2_145e4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_145e4, i32* %r4.global-to-local, align 4
  %v1_145e8 = load i32, i32* @r0, align 4
  ret i32 %v1_145e8

; uselistorder directives
  uselistorder i32 %v1_145b4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_14600(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14600:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_14614 = call i32 @function_11a88(i32 %arg1, i32 1)
  %v3_1461c = icmp eq i32 %v2_14614, -1
  store i32 98320, i32* @r3, align 4
  br i1 %v3_1461c, label %dec_label_pc_14628, label %dec_label_pc_14640

dec_label_pc_14628:                               ; preds = %dec_label_pc_14600
  %v0_1462c = load i32, i32* %r5.global-to-local, align 4
  %v3_14634 = call i32 @function_11860(i32 ptrtoint ([10 x i8]* @global_var_17884.760 to i32), i32 %v0_1462c)
  %v1_14638 = load i32, i32* %r4.global-to-local, align 4
  %v1_1463c = icmp ne i32 %v3_14634, %v1_14638
  call void @__pseudo_cond_branch(i1 %v1_1463c, i32 ptrtoint (i32* @global_var_13994.761 to i32))
  br label %dec_label_pc_14640

dec_label_pc_14640:                               ; preds = %dec_label_pc_14600, %dec_label_pc_14628
  %v1_14648 = phi i32 [ %v2_14614, %dec_label_pc_14600 ], [ %v3_14634, %dec_label_pc_14628 ]
  ret i32 %v1_14648

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14640, { 1, 0 }
}

define i32 @function_14654(i32 %arg1) local_unnamed_addr {
dec_label_pc_14654:
  %r4.global-to-local = alloca i32, align 4
  store i32 98320, i32* %r4.global-to-local, align 4
  %v4_14664 = load i32, i32* inttoptr (i32 98412 to i32*), align 4
  %v1_14668 = inttoptr i32 %v4_14664 to i32*
  %v2_14668 = load i32, i32* %v1_14668, align 4
  %v2_1466c = icmp eq i32 %v2_14668, 0
  br i1 %v2_1466c, label %dec_label_pc_14674, label %dec_label_pc_146a8

dec_label_pc_14674:                               ; preds = %dec_label_pc_14654
  %v4_14678 = load i32, i32* inttoptr (i32 98372 to i32*), align 4
  %v2_14680 = icmp eq i32 %v4_14678, 0
  store i32 4096, i32* %v1_14668, align 4
  br i1 %v2_14680, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14674
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14674, %bb
  %v2_1468c = xor i1 %v2_14680, true
  call void @__pseudo_cond_branch(i1 %v2_1468c, i32 %v4_14678)
  %v0_14694 = load i32, i32* %r4.global-to-local, align 4
  %v2_1469c = icmp eq i32 %v0_14694, 9868
  br i1 %v2_1469c, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_146a4 = xor i1 %v2_1469c, true
  call void @__pseudo_cond_branch(i1 %v2_146a4, i32 ptrtoint (i32* @global_var_15984.766 to i32))
  br label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %dec_label_pc_14654, %bb6
  %v1_146ac = load i32, i32* @r0, align 4
  ret i32 %v1_146ac

; uselistorder directives
  uselistorder i1 %v2_1469c, { 1, 0 }
  uselistorder label %dec_label_pc_146a8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_146c0(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_146c0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_146c8 = add i32 %tmp, 4
  store i32 %v1_146c8, i32* %ip.global-to-local, align 4
  %v2_146cc = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 98320, i32* @r6, align 4
  %v3_146d8 = mul i32 %arg2, 4
  store i32 %v3_146d8, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_146e0 = load i32, i32* inttoptr (i32 98340 to i32*), align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_146e8 = ptrtoint i32* %stack_var_-120 to i32
  %v4_146ec = load i32, i32* inttoptr (i32 98348 to i32*), align 4
  store i32 %v4_146ec, i32* %r4.global-to-local, align 4
  %v2_146f4 = add i32 %v1_146c8, %v3_146d8
  store i32 %v2_146f4, i32* %ip.global-to-local, align 4
  %v9_146f8 = icmp eq i32 %v2_146f4, %v2_146cc
  store i1 %v9_146f8, i1* %cpsr_z.global-to-local, align 1
  %v2_146fc = inttoptr i32 %v4_146e0 to i32*
  store i32 %arg7, i32* %v2_146fc, align 4
  store i32 688, i32* %r2.global-to-local, align 4
  %v0_14708 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_146f8, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_146c0
  %v1_1470c = load i32, i32* @r7, align 4
  %v2_1470c = load i32, i32* %r5.global-to-local, align 4
  %v3_1470c = add i32 %v2_1470c, %v1_1470c
  store i32 %v3_1470c, i32* %r3.global-to-local, align 4
  %v1_14710 = load i32, i32* @r6, align 4
  %v3_14710 = add i32 %v1_14710, 688
  %v4_14710 = inttoptr i32 %v3_14710 to i32*
  store i32 %arg6, i32* %v4_14710, align 4
  %v0_14714 = load i32, i32* %ip.global-to-local, align 4
  %v1_14714 = load i32, i32* %r4.global-to-local, align 4
  %v2_14714 = inttoptr i32 %v1_14714 to i32*
  store i32 %v0_14714, i32* %v2_14714, align 4
  store i32 120, i32* @r2, align 4
  %v1_14720 = load i32, i32* %r3.global-to-local, align 4
  %v2_14720 = load i32, i32* %r4.global-to-local, align 4
  %v3_14720 = inttoptr i32 %v2_14720 to i32*
  store i32 %v1_14720, i32* %v3_14720, align 4
  br label %bb58

.critedge:                                        ; preds = %dec_label_pc_146c0
  %v1_14710.c = load i32, i32* @r6, align 4
  %v3_14710.c = add i32 %v1_14710.c, 688
  %v4_14710.c = inttoptr i32 %v3_14710.c to i32*
  store i32 %arg6, i32* %v4_14710.c, align 4
  %v0_14714.c = load i32, i32* %ip.global-to-local, align 4
  %v1_14714.c = load i32, i32* %r4.global-to-local, align 4
  %v2_14714.c = inttoptr i32 %v1_14714.c to i32*
  store i32 %v0_14714.c, i32* %v2_14714.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  %v2_1472c = bitcast i32* %stack_var_-120 to i8*
  %v3_1472c = call i32 @function_120d0(i8* %v2_1472c, i32 0)
  %v0_14730 = load i32, i32* %r4.global-to-local, align 4
  %v1_14730 = inttoptr i32 %v0_14730 to i32*
  %storemerge.pre = load i32, i32* %v1_14730, align 4
  br label %dec_label_pc_1473c

dec_label_pc_1473c:                               ; preds = %dec_label_pc_1473c, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_1473c, %dec_label_pc_1473c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1473c = inttoptr i32 %storemerge to i32*
  %v2_1473c = load i32, i32* %v1_1473c, align 4
  store i32 %v2_1473c, i32* %r3.global-to-local, align 4
  %v4_1473c = add i32 %storemerge, 4
  store i32 %v4_1473c, i32* %r2.global-to-local, align 4
  %v2_14740 = icmp eq i32 %v2_1473c, 0
  br i1 %v2_14740, label %dec_label_pc_1474c, label %dec_label_pc_1473c

dec_label_pc_1474c:                               ; preds = %dec_label_pc_1473c
  store i32 %v4_1473c, i32* @r4, align 4
  store i32 %v2_146e8, i32* @r5, align 4
  %v1_1477029 = inttoptr i32 %v4_1473c to i32*
  %v2_1477030 = load i32, i32* %v1_1477029, align 4
  store i32 %v2_1477030, i32* %r3.global-to-local, align 4
  %v2_1477432 = icmp eq i32 %v2_1477030, 0
  store i1 %v2_1477432, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1477432, label %dec_label_pc_1477c, label %dec_label_pc_14758

dec_label_pc_14758:                               ; preds = %dec_label_pc_1474c, %dec_label_pc_14770
  %v5_1475c = phi i32 [ %v2_14770, %dec_label_pc_14770 ], [ %v2_1477030, %dec_label_pc_1474c ]
  %v2_14758 = icmp ugt i32 %v5_1475c, 13
  %v7_14758 = icmp eq i32 %v5_1475c, 14
  store i1 %v7_14758, i1* %cpsr_z.global-to-local, align 1
  %v2_1475c = xor i1 %v2_14758, true
  %v3_1475c = or i1 %v7_14758, %v2_1475c
  br i1 %v3_1475c, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14758
  %v6_1475c = and i32 %v5_1475c, 536870912
  %v7_1475c = icmp ne i32 %v6_1475c, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14758, %bb59
  %v1_14768 = phi i1 [ %v2_14758, %dec_label_pc_14758 ], [ %v7_1475c, %bb59 ]
  %v2_14760 = xor i1 %v1_14768, true
  %v3_14760 = or i1 %v7_14758, %v2_14760
  br i1 %v3_14760, label %bb61, label %dec_label_pc_14770

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14770

dec_label_pc_14770:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_14760, i32 ptrtoint (i32* @global_var_12180.771 to i32))
  %v0_1476c = load i32, i32* @r4, align 4
  %v1_1476c = add i32 %v0_1476c, 8
  store i32 %v1_1476c, i32* @r4, align 4
  %v1_14770 = inttoptr i32 %v1_1476c to i32*
  %v2_14770 = load i32, i32* %v1_14770, align 4
  store i32 %v2_14770, i32* %r3.global-to-local, align 4
  %v2_14774 = icmp eq i32 %v2_14770, 0
  store i1 %v2_14774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14774, label %dec_label_pc_1477c, label %dec_label_pc_14758

dec_label_pc_1477c:                               ; preds = %dec_label_pc_14770, %dec_label_pc_1474c
  %v1_14780 = call i32 @function_16b84(i32 %v2_146e8)
  store i32 %v1_14780, i32* @r0, align 4
  %v1_14784 = call i32 @function_14654(i32 %v1_14780)
  store i32 %v1_14784, i32* @r0, align 4
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_14790 = load i32, i32* @r6, align 4
  %v2_14790 = add i32 %v0_14790, 92
  %v3_14790 = inttoptr i32 %v2_14790 to i32*
  %v4_14790 = load i32, i32* %v3_14790, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_14798 = icmp eq i32 %tmp54, 0
  store i1 %v2_14798, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14798, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1477c
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1477c, %bb62
  %v0_147a4 = phi i32 [ %tmp54, %dec_label_pc_1477c ], [ 4096, %bb62 ]
  %v3_147a0 = icmp eq i32 %tmp53, -1
  %v8_147a0 = icmp eq i32 %tmp53, -1
  store i1 %v8_147a0, i1* %cpsr_z.global-to-local, align 1
  %v2_147a4 = inttoptr i32 %v4_14790 to i32*
  store i32 %v0_147a4, i32* %v2_147a4, align 4
  br i1 %v3_147a0, label %dec_label_pc_147ac, label %dec_label_pc_147d4

dec_label_pc_147ac:                               ; preds = %bb63
  %v0_147ac = call i32 @function_14ac4()
  store i32 %v0_147ac, i32* @r0, align 4
  store i32 %v0_147ac, i32* @r4, align 4
  %v0_147b4 = call i32 @function_14b20()
  store i32 %v0_147b4, i32* @r0, align 4
  %v0_147b8 = load i32, i32* @r4, align 4
  %v9_147b8 = icmp eq i32 %v0_147b8, %v0_147b4
  store i1 %v9_147b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_147b8, label %dec_label_pc_147c0, label %dec_label_pc_147fc

dec_label_pc_147c0:                               ; preds = %dec_label_pc_147ac
  %v1_147c0 = call i32 @function_14c8c(i32 %v0_147b4)
  store i32 %v1_147c0, i32* @r0, align 4
  store i32 %v1_147c0, i32* @r4, align 4
  %v0_147c8 = call i32 @function_14b0c()
  store i32 %v0_147c8, i32* @r0, align 4
  %v0_147cc = load i32, i32* @r4, align 4
  %v9_147cc = icmp eq i32 %v0_147cc, %v0_147c8
  store i1 %v9_147cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_147cc, label %dec_label_pc_147d4, label %dec_label_pc_147fc

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147c0, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_147a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_147a0, label %dec_label_pc_14820, label %dec_label_pc_147e0

dec_label_pc_147e0:                               ; preds = %dec_label_pc_147d4
  store i32 %tmp52, i32* @r3, align 4
  %v9_147e4 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_147e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_147e4, label %dec_label_pc_147ec, label %dec_label_pc_147fc

dec_label_pc_147ec:                               ; preds = %dec_label_pc_147e0
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_147f4 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_147f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_147f4, label %dec_label_pc_14820, label %dec_label_pc_147fc

dec_label_pc_147fc:                               ; preds = %dec_label_pc_147e0, %dec_label_pc_147c0, %dec_label_pc_147ac, %dec_label_pc_147ec
  %v2_14804 = call i32 @function_14600(i32 0, i32 32768)
  %v2_14810 = call i32 @function_14600(i32 1, i32 32770)
  %v2_1481c = call i32 @function_14600(i32 2, i32 32770)
  store i32 %v2_1481c, i32* @r0, align 4
  br label %dec_label_pc_14820

dec_label_pc_14820:                               ; preds = %dec_label_pc_147ec, %dec_label_pc_147d4, %dec_label_pc_147fc
  %v0_14820 = load i32, i32* @r7, align 4
  %v1_14820 = inttoptr i32 %v0_14820 to i32*
  %v2_14820 = load i32, i32* %v1_14820, align 4
  store i32 %v2_14820, i32* %r2.global-to-local, align 4
  store i32 208, i32* %r3.global-to-local, align 4
  %v1_14828 = load i32, i32* @r6, align 4
  %v3_14828 = add i32 %v1_14828, 208
  %v4_14828 = inttoptr i32 %v3_14828 to i32*
  store i32 %v2_14820, i32* %v4_14828, align 4
  %v0_1482c = load i32, i32* @r7, align 4
  %v1_1482c = inttoptr i32 %v0_1482c to i32*
  %v2_1482c = load i32, i32* %v1_1482c, align 4
  store i32 %v2_1482c, i32* @r4, align 4
  %v2_14830 = icmp eq i32 %v2_1482c, 0
  store i1 %v2_14830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14830, label %bb65, label %dec_label_pc_14838

dec_label_pc_14838:                               ; preds = %dec_label_pc_14820
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1483c = load i32, i32* @r6, align 4
  %v2_1483c = add i32 %v0_1483c, 112
  %v3_1483c = inttoptr i32 %v2_1483c to i32*
  %v4_1483c = load i32, i32* %v3_1483c, align 4
  store i32 %v4_1483c, i32* %r3.global-to-local, align 4
  %v2_14840 = inttoptr i32 %v4_1483c to i32*
  store i32 %v2_1482c, i32* %v2_14840, align 4
  %v0_14848 = load i32, i32* @r7, align 4
  %v1_14848 = inttoptr i32 %v0_14848 to i32*
  %v2_14848 = load i32, i32* %v1_14848, align 4
  %v4_1484c = call i32 @function_167c0(i32 %v2_14848, i32 47, i32 %v2_14820, i32 %v4_1483c)
  store i32 %v4_1484c, i32* @r0, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v2_14854 = icmp eq i32 %v4_1484c, 0
  store i1 %v2_14854, i1* %cpsr_z.global-to-local, align 1
  %v0_14858 = load i32, i32* @r6, align 4
  %v2_14858 = add i32 %v0_14858, 60
  %v3_14858 = inttoptr i32 %v2_14858 to i32*
  %v4_14858 = load i32, i32* %v3_14858, align 4
  store i32 %v4_14858, i32* %r2.global-to-local, align 4
  br i1 %v2_14854, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_14838
  %v2_1486048 = inttoptr i32 %v4_14858 to i32*
  store i32 0, i32* %v2_1486048, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_14838
  %v2_1485c = add i32 %v4_1484c, 1
  store i32 %v2_1485c, i32* %r3.global-to-local, align 4
  %v2_14860 = inttoptr i32 %v4_14858 to i32*
  store i32 %v4_1484c, i32* %v2_14860, align 4
  %v1_14864 = load i32, i32* %r3.global-to-local, align 4
  %v2_14864 = load i32, i32* %r2.global-to-local, align 4
  %v3_14864 = inttoptr i32 %v2_14864 to i32*
  store i32 %v1_14864, i32* %v3_14864, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_14820
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_1487c = load i32, i32* @r6, align 4
  %v2_1487c = add i32 %v0_1487c, -12
  store i32 %v2_1487c, i32* %r8.global-to-local, align 4
  store i32 684, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1488c = add i32 %v0_1487c, 684
  %v4_1488c = inttoptr i32 %v3_1488c to i32*
  store i32 %arg5, i32* %v4_1488c, align 4
  %v0_148a417 = load i32, i32* %r4.global-to-local, align 4
  %v1_148a418 = load i32, i32* %r5.global-to-local, align 4
  %v3_148a420 = icmp ult i32 %v0_148a417, %v1_148a418
  %v9_148a426 = icmp eq i32 %v0_148a417, %v1_148a418
  store i1 %v9_148a426, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_148a420, label %dec_label_pc_14894, label %dec_label_pc_148d4.lr.ph

dec_label_pc_14894:                               ; preds = %dec_label_pc_14894, %bb65
  %v1_14894 = phi i32 [ %v1_148a0, %dec_label_pc_14894 ], [ %v0_148a417, %bb65 ]
  %v0_14894 = load i32, i32* %r8.global-to-local, align 4
  %v4_14894 = mul i32 %v1_14894, 4
  %v5_14894 = add i32 %v4_14894, %v0_14894
  %v6_14894 = inttoptr i32 %v5_14894 to i32*
  %v7_14894 = load i32, i32* %v6_14894, align 4
  store i32 %v7_14894, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_14894)
  %v0_148a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148a0 = add i32 %v0_148a0, 1
  store i32 %v1_148a0, i32* %r4.global-to-local, align 4
  %v1_148a4 = load i32, i32* %r5.global-to-local, align 4
  %v3_148a4 = icmp ult i32 %v1_148a0, %v1_148a4
  %v9_148a4 = icmp eq i32 %v1_148a0, %v1_148a4
  store i1 %v9_148a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_148a4, label %dec_label_pc_14894, label %dec_label_pc_148d4.lr.ph

dec_label_pc_148d4.lr.ph:                         ; preds = %dec_label_pc_14894, %bb65
  %v2_148ac = icmp eq i32 %v0_14708, 0
  store i1 %v2_148ac, i1* %cpsr_z.global-to-local, align 1
  %v2_148b4 = xor i1 %v2_148ac, true
  call void @__pseudo_cond_branch(i1 %v2_148b4, i32 %v0_14708)
  store i32 -12, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_148c8 = load i32, i32* @r6, align 4
  %v2_148c8 = add i32 %v0_148c8, -12
  store i32 %v2_148c8, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_148d4

dec_label_pc_148d4:                               ; preds = %dec_label_pc_148d4.dec_label_pc_148d4_crit_edge, %dec_label_pc_148d4.lr.ph
  %v1_148d4 = phi i32 [ %v1_148e0, %dec_label_pc_148d4.dec_label_pc_148d4_crit_edge ], [ 0, %dec_label_pc_148d4.lr.ph ]
  %v0_148d4 = phi i32 [ %v0_148d4.pre, %dec_label_pc_148d4.dec_label_pc_148d4_crit_edge ], [ %v2_148c8, %dec_label_pc_148d4.lr.ph ]
  %v4_148d4 = mul i32 %v1_148d4, 4
  %v5_148d4 = add i32 %v4_148d4, %v0_148d4
  %v6_148d4 = inttoptr i32 %v5_148d4 to i32*
  %v7_148d4 = load i32, i32* %v6_148d4, align 4
  store i32 %v7_148d4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_148d4)
  %v0_148e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_148e0 = add i32 %v0_148e0, 1
  store i32 %v1_148e0, i32* %r4.global-to-local, align 4
  %v1_148e4 = load i32, i32* %r5.global-to-local, align 4
  %v3_148e4 = icmp ult i32 %v1_148e0, %v1_148e4
  %v9_148e4 = icmp eq i32 %v1_148e0, %v1_148e4
  store i1 %v9_148e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_148e4, label %dec_label_pc_148d4.dec_label_pc_148d4_crit_edge, label %dec_label_pc_148ec

dec_label_pc_148d4.dec_label_pc_148d4_crit_edge:  ; preds = %dec_label_pc_148d4
  %v0_148d4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_148d4

dec_label_pc_148ec:                               ; preds = %dec_label_pc_148d4
  %v0_148f0.pre = load i32, i32* @r6, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_148f0 = add i32 %v0_148f0.pre, 104
  %v3_148f0 = inttoptr i32 %v2_148f0 to i32*
  %v4_148f0 = load i32, i32* %v3_148f0, align 4
  store i32 %v4_148f0, i32* %r2.global-to-local, align 4
  store i32 %v4_148f0, i32* %r3.global-to-local, align 4
  %v2_148f8 = icmp eq i32 %v4_148f0, 0
  store i1 %v2_148f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148f8, label %dec_label_pc_14910, label %dec_label_pc_14900

dec_label_pc_14900:                               ; preds = %dec_label_pc_148ec
  call void @__pseudo_branch(i32 %v4_148f0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1490c = load i32, i32* @r0, align 4
  %v2_1490c = inttoptr i32 %v1_1490c to i32*
  store i32 0, i32* %v2_1490c, align 4
  %v0_14914.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14910

dec_label_pc_14910:                               ; preds = %dec_label_pc_148ec, %dec_label_pc_14900
  %v0_14914 = phi i32 [ %v0_148f0.pre, %dec_label_pc_148ec ], [ %v0_14914.pre, %dec_label_pc_14900 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_14914 = add i32 %v0_14914, 80
  %v3_14914 = inttoptr i32 %v2_14914 to i32*
  %v4_14914 = load i32, i32* %v3_14914, align 4
  store i32 %v4_14914, i32* %r2.global-to-local, align 4
  store i32 %v4_14914, i32* %r3.global-to-local, align 4
  %v2_1491c = icmp eq i32 %v4_14914, 0
  store i1 %v2_1491c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1491c, label %dec_label_pc_14934, label %dec_label_pc_14924

dec_label_pc_14924:                               ; preds = %dec_label_pc_14910
  call void @__pseudo_branch(i32 %v4_14914)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_14930 = load i32, i32* @r0, align 4
  %v2_14930 = inttoptr i32 %v1_14930 to i32*
  store i32 0, i32* %v2_14930, align 4
  %v0_14938.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14934

dec_label_pc_14934:                               ; preds = %dec_label_pc_14910, %dec_label_pc_14924
  %v0_14938 = phi i32 [ %v0_14914, %dec_label_pc_14910 ], [ %v0_14938.pre, %dec_label_pc_14924 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_14938 = add i32 %v0_14938, 28
  %v3_14938 = inttoptr i32 %v2_14938 to i32*
  %v4_14938 = load i32, i32* %v3_14938, align 4
  store i32 %v4_14938, i32* %r3.global-to-local, align 4
  %v1_14940 = inttoptr i32 %v4_14938 to i32*
  %v2_14940 = load i32, i32* %v1_14940, align 4
  store i32 %v2_14940, i32* %r2.global-to-local, align 4
  %v0_14944 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_14950 = call i32 @function_13cb8(i32 %v0_14944)
  %v0_14954 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14954, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_14934
  %v2_14954 = load i32, i32* @r4, align 4
  %v3_14954 = load i32, i32* %sb.global-to-local, align 4
  %v8_14954 = lshr i32 %v2_14954, %v3_14954
  %v9_14954 = and i32 %v8_14954, %v1_14950
  store i32 %v9_14954, i32* %r3.global-to-local, align 4
  %v8_14958 = shl i32 %v2_14954, %v1_14950
  %v9_14958 = and i32 %v8_14958, %v1_14950
  %v2_1495c = load i32, i32* %ip.global-to-local, align 4
  %v8_1495c = shl i32 %v2_1495c, %v9_14958
  %v9_1495c = and i32 %v8_1495c, %v9_14958
  %v2_14960 = trunc i32 %v9_1495c to i16
  %v4_14960 = inttoptr i32 %v9_1495c to i16*
  store i16 %v2_14960, i16* %v4_14960, align 2
  store i32 0, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14934, %bb66
  %v10_14974 = phi i32 [ %v1_14950, %dec_label_pc_14934 ], [ 0, %bb66 ]
  ret i32 %v10_14974

; uselistorder directives
  uselistorder i32 %v9_1495c, { 1, 0 }
  uselistorder i32 %v1_14950, { 2, 0, 3, 1 }
  uselistorder i32 %v0_148f0.pre, { 1, 0 }
  uselistorder i32 %v1_148e4, { 1, 0 }
  uselistorder i32 %v1_148e0, { 3, 2, 1, 0 }
  uselistorder i32 %v1_148a4, { 1, 0 }
  uselistorder i32 %v1_148a0, { 1, 2, 3, 0 }
  uselistorder i32 %v4_14858, { 1, 0, 2 }
  uselistorder i1 %v8_147a0, { 1, 2, 0 }
  uselistorder i32 %v2_14770, { 1, 2, 0 }
  uselistorder i1 %v2_14758, { 1, 0 }
  uselistorder i32 %v4_1473c, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v3_146d8, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 5, 4, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 16, 17, 18, 19, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 2, 22, 23, 24, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 0, 12, 13, 14, 1 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 10, 5, 0, 6, 7, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 18, 2, 20 }
  uselistorder i32 (i32)* @function_13cb8, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 684, { 1, 2, 0 }
  uselistorder i32 47, { 0, 2, 3, 4, 1 }
  uselistorder i32 (i32, i32)* @function_14600, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14934, { 1, 0 }
  uselistorder label %dec_label_pc_14910, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14820, { 2, 0, 1 }
  uselistorder label %dec_label_pc_147fc, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_14770, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_14758, { 1, 0 }
}

define i32 @function_14994(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14994:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14994 = load i32, i32* @r4, align 4
  store i32 %v3_14994, i32* %stack_var_-16, align 4
  %v3_149a0 = urem i32 %arg3, 4096
  %v2_149a4 = icmp eq i32 %v3_149a0, 0
  br i1 %v2_149a4, label %dec_label_pc_149c0, label %dec_label_pc_149ac

dec_label_pc_149ac:                               ; preds = %dec_label_pc_14994
  %v0_149ac = call i32 @function_1207c()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_149b8 = inttoptr i32 %v0_149ac to i32*
  store i32 22, i32* %v2_149b8, align 4
  %v0_149f0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_149f0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_14994
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_149ec, label %dec_label_pc_149dc

dec_label_pc_149dc:                               ; preds = %dec_label_pc_149c0
  %v0_149dc = call i32 @function_1207c()
  %v0_149e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_149e0 = sub i32 0, %v0_149e0
  %v2_149e4 = inttoptr i32 %v0_149dc to i32*
  store i32 %v1_149e0, i32* %v2_149e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149c0, %dec_label_pc_149dc
  %v0_149ec = phi i32 [ %arg1, %dec_label_pc_149c0 ], [ -1, %dec_label_pc_149dc ]
  store i32 %v0_149ec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149ac, %dec_label_pc_149ec
  %v0_149f0 = phi i32 [ %v0_149f0.pre, %dec_label_pc_149ac ], [ %v0_149ec, %dec_label_pc_149ec ]
  %v2_149f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_149f4, i32* @r4, align 4
  ret i32 %v0_149f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_149f0, { 1, 0 }
  uselistorder label %dec_label_pc_149ec, { 1, 0 }
}

define i32 @function_149fc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_149fc:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_149fc = load i32, i32* @r4, align 4
  %v6_149fc = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_14a04 = icmp eq i32 %arg2, 0
  store i32 98320, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_14a04, label %dec_label_pc_14a58, label %dec_label_pc_14a1c

dec_label_pc_14a1c:                               ; preds = %dec_label_pc_149fc
  %v1_14a1c = add i32 %arg2, 4
  %v2_14a1c = inttoptr i32 %v1_14a1c to i32*
  %v3_14a1c = load i32, i32* %v2_14a1c, align 4
  store i32 %v3_14a1c, i32* @r3, align 4
  %v1_14a20 = and i32 %v3_14a1c, 67108864
  %v2_14a20 = icmp eq i32 %v1_14a20, 0
  br i1 %v2_14a20, label %dec_label_pc_14a28, label %dec_label_pc_14a58

dec_label_pc_14a28:                               ; preds = %dec_label_pc_14a1c
  store i32 20, i32* @r2, align 4
  %v2_14a2c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14a2c, i32* @r0, align 4
  %v0_14a30 = call i32 @function_12180()
  store i32 %v2_14a2c, i32* @ip, align 4
  %v0_14a58.pre = load i32, i32* @r5, align 4
  %v0_14a60.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a58

dec_label_pc_14a58:                               ; preds = %dec_label_pc_14a1c, %dec_label_pc_149fc, %dec_label_pc_14a28
  %v0_14a60 = phi i32 [ %arg3, %dec_label_pc_14a1c ], [ %arg3, %dec_label_pc_149fc ], [ %v0_14a60.pre, %dec_label_pc_14a28 ]
  %v0_14a5c = phi i32 [ %arg2, %dec_label_pc_14a1c ], [ 0, %dec_label_pc_149fc ], [ %v2_14a2c, %dec_label_pc_14a28 ]
  %v0_14a58 = phi i32 [ %arg1, %dec_label_pc_14a1c ], [ %arg1, %dec_label_pc_149fc ], [ %v0_14a58.pre, %dec_label_pc_14a28 ]
  %v4_14a68 = call i32 @function_14fb8(i32 %v0_14a58, i32 %v0_14a5c, i32 %v0_14a60, i32 8)
  store i32 %v3_149fc, i32* @r4, align 4
  store i32 %v6_149fc, i32* @r5, align 4
  ret i32 %v4_14a68

; uselistorder directives
  uselistorder label %dec_label_pc_14a58, { 2, 0, 1 }
}

define i32 @function_14a78(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a78:
  %v0_14a78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a78, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14a78
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14a78, %bb
  %v0_14a90 = phi i32 [ %arg1, %dec_label_pc_14a78 ], [ 0, %bb ]
  ret i32 %v0_14a90

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_14a9c() local_unnamed_addr {
dec_label_pc_14a9c:
  %v4_14aa8 = load i32, i32* inttoptr (i32 98412 to i32*), align 4
  %v1_14aac = inttoptr i32 %v4_14aa8 to i32*
  %v2_14aac = load i32, i32* %v1_14aac, align 4
  %v2_14ab0 = icmp eq i32 %v2_14aac, 0
  br i1 %v2_14ab0, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_14a9c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_14a9c, %bb
  %v1_14ab8 = phi i32 [ %v2_14aac, %dec_label_pc_14a9c ], [ 4096, %bb ]
  ret i32 %v1_14ab8

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_14abc(i32 %arg1) local_unnamed_addr {
dec_label_pc_14abc:
  %v0_14abc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14abc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14abc
  %v2_14ac0 = load i32, i32* @ip, align 4
  %v8_14ac0 = ashr i32 %v2_14ac0, %arg1
  %v9_14ac0 = and i32 %v8_14ac0, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14abc, %bb
  %v10_14ac0 = phi i32 [ %arg1, %dec_label_pc_14abc ], [ %v9_14ac0, %bb ]
  ret i32 %v10_14ac0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14ac4() local_unnamed_addr {
dec_label_pc_14ac4:
  %v1_14ad4 = load i32, i32* @r0, align 4
  ret i32 %v1_14ad4
}

define i32 @function_14ad8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ad8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14ad8 = load i32, i32* @r7, align 4
  store i32 %v3_14ad8, i32* %stack_var_-8, align 4
  %v0_14ae4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14ae4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14ae4, -4095
  br i1 %tmp, label %dec_label_pc_14b04, label %dec_label_pc_14af4

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14ad8
  %v0_14af4 = call i32 @function_1207c()
  %v0_14af8 = load i32, i32* %r7.global-to-local, align 4
  %v1_14af8 = sub i32 0, %v0_14af8
  %v2_14afc = inttoptr i32 %v0_14af4 to i32*
  store i32 %v1_14af8, i32* %v2_14afc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14b04.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14b04

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14ad8, %dec_label_pc_14af4
  %v1_14b08 = phi i32 [ %v0_14ae4, %dec_label_pc_14ad8 ], [ -1, %dec_label_pc_14af4 ]
  %v2_14b04 = phi i32 [ %v3_14ad8, %dec_label_pc_14ad8 ], [ %v2_14b04.pre, %dec_label_pc_14af4 ]
  store i32 %v2_14b04, i32* %r7.global-to-local, align 4
  ret i32 %v1_14b08

; uselistorder directives
  uselistorder i32 %v0_14ae4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b04, { 1, 0 }
}

define i32 @function_14b0c() local_unnamed_addr {
dec_label_pc_14b0c:
  %v1_14b1c = load i32, i32* @r0, align 4
  ret i32 %v1_14b1c
}

define i32 @function_14b20() local_unnamed_addr {
dec_label_pc_14b20:
  %v1_14b30 = load i32, i32* @r0, align 4
  ret i32 %v1_14b30
}

define i32 @function_14b34(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14b34:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_14b34 = load i32, i32* @r5, align 4
  %v18_14b34 = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14b64, label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %dec_label_pc_14b34
  %v0_14b50 = call i32 @function_1207c()
  %v0_14b54 = load i32, i32* @r5, align 4
  %v1_14b54 = sub i32 0, %v0_14b54
  store i32 %v1_14b54, i32* %r3.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  %v2_14b5c = inttoptr i32 %v0_14b50 to i32*
  store i32 %v1_14b54, i32* %v2_14b5c, align 4
  br label %dec_label_pc_14bb8

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b34
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14b64
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_14b6c = add i32 %arg2, %arg1
  store i32 %v3_14b6c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14b64, %bb
  %v1_14ba84 = phi i32 [ %v18_14b34, %dec_label_pc_14b64 ], [ %v3_14b6c, %bb ]
  %v0_14ba42 = phi i32 [ 141, %dec_label_pc_14b64 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_14bb8, label %dec_label_pc_14ba4

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14ba4
  %v1_14b78 = add i32 %v0_14b78, 8
  %v2_14b78 = inttoptr i32 %v1_14b78 to i16*
  %v3_14b78 = load i16, i16* %v2_14b78, align 2
  %v4_14b78 = zext i16 %v3_14b78 to i32
  %v2_14b7c = add i32 %v4_14b78, %v0_14b78
  store i32 %v2_14b7c, i32* %r3.global-to-local, align 4
  %v1_14b80 = add i32 %v2_14b7c, -1
  %v2_14b80 = inttoptr i32 %v1_14b80 to i8*
  %v3_14b80 = load i8, i8* %v2_14b80, align 1
  %v4_14b80 = zext i8 %v3_14b80 to i32
  store i32 %v4_14b80, i32* @r4, align 4
  %v1_14b84 = call i32 @function_166b0(i32 %v1_14ba4)
  %v0_14b88 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_14b88, i32* @r1, align 4
  %v1_14b8c = add i32 %v1_14b84, 1
  store i32 %v1_14b8c, i32* @r2, align 4
  %v0_14b90 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_14b90, i32* @r0, align 4
  %v3_14b94 = call i32 @function_12170(i32 %v0_14b90, i32 %v0_14b88, i32 %v1_14b8c)
  %v0_14b98 = load i32, i32* %r7.global-to-local, align 4
  %v1_14b98 = add i32 %v0_14b98, 8
  %v2_14b98 = inttoptr i32 %v1_14b98 to i16*
  %v3_14b98 = load i16, i16* %v2_14b98, align 2
  %v4_14b98 = zext i16 %v3_14b98 to i32
  store i32 %v4_14b98, i32* %r3.global-to-local, align 4
  %v0_14b9c = load i32, i32* @r4, align 4
  %v1_14b9c = trunc i32 %v0_14b9c to i8
  %v3_14b9c = add i32 %v0_14b98, 10
  %v4_14b9c = inttoptr i32 %v3_14b9c to i8*
  store i8 %v1_14b9c, i8* %v4_14b9c, align 1
  %v0_14ba0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14ba0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14ba0 = add i32 %v1_14ba0, %v0_14ba0
  store i32 %v2_14ba0, i32* %r7.global-to-local, align 4
  %v1_14ba8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %.thread, %dec_label_pc_14b78
  %v1_14ba8 = phi i32 [ %v1_14ba8.pre, %dec_label_pc_14b78 ], [ %v1_14ba84, %.thread ]
  %v0_14b78 = phi i32 [ %v2_14ba0, %dec_label_pc_14b78 ], [ %v0_14ba42, %.thread ]
  %v1_14ba4 = add i32 %v0_14b78, 10
  store i32 %v1_14ba4, i32* %r6.global-to-local, align 4
  %v3_14ba8 = icmp ult i32 %v0_14b78, %v1_14ba8
  %v1_14bb0 = add i32 %v0_14b78, 11
  store i32 %v1_14bb0, i32* %r8.global-to-local, align 4
  br i1 %v3_14ba8, label %dec_label_pc_14b78, label %dec_label_pc_14bb8

dec_label_pc_14bb8:                               ; preds = %dec_label_pc_14ba4, %.thread, %dec_label_pc_14b50
  %v0_14bb8 = load i32, i32* @r5, align 4
  store i32 %v6_14b34, i32* @r5, align 4
  store i32 %v18_14b34, i32* @sl, align 4
  ret i32 %v0_14bb8

; uselistorder directives
  uselistorder i32 %v1_14ba4, { 1, 0 }
  uselistorder i32 %v0_14b78, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_14b34, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ba4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14bc8() local_unnamed_addr {
dec_label_pc_14bc8:
  %r7.global-to-local = alloca i32, align 4
  %v0_14bd0 = load i32, i32* @r1, align 4
  store i32 %v0_14bd0, i32* @r3, align 4
  %v0_14be0 = load i32, i32* @r0, align 4
  store i32 %v0_14be0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14be0, -4095
  br i1 %tmp, label %dec_label_pc_14c00, label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %dec_label_pc_14bc8
  %v0_14bec = call i32 @function_1207c()
  %v0_14bf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14bf0 = sub i32 0, %v0_14bf0
  store i32 %v1_14bf0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14bf8 = inttoptr i32 %v0_14bec to i32*
  store i32 %v1_14bf0, i32* %v2_14bf8, align 4
  br label %dec_label_pc_14c10

dec_label_pc_14c00:                               ; preds = %dec_label_pc_14bc8
  %v2_14c00 = icmp eq i32 %v0_14be0, 0
  br i1 %v2_14c00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c00
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14c00, %bb
  call void @__pseudo_cond_branch(i1 %v2_14c00, i32 ptrtoint (i32* @global_var_14e18.789 to i32))
  br label %dec_label_pc_14c10

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bec, %.thread
  %v0_14c10 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_14c10

; uselistorder directives
  uselistorder i32 %v0_14be0, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_14c10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14c20(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c20:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14c20 = load i32, i32* @r4, align 4
  store i32 %v3_14c20, i32* %stack_var_-16, align 4
  store i32 98320, i32* %r4.global-to-local, align 4
  %v4_14c30 = load i32, i32* @global_var_1a2d4.792, align 4
  %v2_14c34 = icmp eq i32 %v4_14c30, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_14c34, label %dec_label_pc_14c40, label %dec_label_pc_14c50

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c20
  %v1_14c44 = call i32 @function_16bbc(i32 0)
  %v1_14c48 = icmp slt i32 %v1_14c44, 0
  br i1 %v1_14c48, label %dec_label_pc_14c74, label %dec_label_pc_14c50thread-pre-split

dec_label_pc_14c50thread-pre-split:               ; preds = %dec_label_pc_14c40
  %v0_14c54.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_14c50.pre = load i32, i32* @global_var_1a2d4.792, align 4
  br label %dec_label_pc_14c50

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14c50thread-pre-split, %dec_label_pc_14c20
  %v0_14c60 = phi i32 [ %v4_14c50.pre, %dec_label_pc_14c50thread-pre-split ], [ %v4_14c30, %dec_label_pc_14c20 ]
  %v1_14c64 = phi i32 [ %v0_14c54.pr, %dec_label_pc_14c50thread-pre-split ], [ %arg1, %dec_label_pc_14c20 ]
  %v2_14c54 = icmp eq i32 %v1_14c64, 0
  store i32 %v0_14c60, i32* %r4.global-to-local, align 4
  br i1 %v2_14c54, label %dec_label_pc_14c78, label %dec_label_pc_14c60

dec_label_pc_14c60:                               ; preds = %dec_label_pc_14c50
  %v2_14c64 = add i32 %v1_14c64, %v0_14c60
  %v1_14c68 = call i32 @function_16bbc(i32 %v2_14c64)
  %v1_14c6c = icmp slt i32 %v1_14c68, 0
  br i1 %v1_14c6c, label %dec_label_pc_14c74, label %dec_label_pc_14c60.dec_label_pc_14c78_crit_edge

dec_label_pc_14c60.dec_label_pc_14c78_crit_edge:  ; preds = %dec_label_pc_14c60
  %v0_14c78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c78

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14c60, %dec_label_pc_14c40
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c78

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14c50, %dec_label_pc_14c60.dec_label_pc_14c78_crit_edge, %dec_label_pc_14c74
  %v0_14c78 = phi i32 [ %v0_14c78.pre, %dec_label_pc_14c60.dec_label_pc_14c78_crit_edge ], [ -1, %dec_label_pc_14c74 ], [ %v0_14c60, %dec_label_pc_14c50 ]
  %v2_14c7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14c7c, i32* @r4, align 4
  ret i32 %v0_14c78

; uselistorder directives
  uselistorder i32 %v0_14c60, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_16bbc, { 1, 0 }
  uselistorder label %dec_label_pc_14c78, { 2, 1, 0 }
}

define i32 @function_14c84(i64* %arg1) local_unnamed_addr {
dec_label_pc_14c84:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_14c84 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14c84, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14c84
  %v4_14c84 = load i32, i32* @ip, align 4
  %v9_14c84 = sub i32 %tmp, %v4_14c84
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14c84, %bb
  %v7_14c88 = phi i32 [ %tmp, %dec_label_pc_14c84 ], [ %v9_14c84, %bb ]
  ret i32 %v7_14c88

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14c8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c8c:
  %v1_14c9c = load i32, i32* @r0, align 4
  ret i32 %v1_14c9c
}

define i32 @function_14ca0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ca0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_14ca0 = load i32, i32* @r4, align 4
  store i32 %v3_14ca0, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_14cb8 = inttoptr i32 %arg2 to i8*
  %v3_14cb8 = call i32 @function_120d0(i8* %v2_14cb8, i32 0)
  %v2_14cbc = load i32, i32* %arg1, align 4
  store i32 %v2_14cbc, i32* %r3.global-to-local, align 4
  %v3_14cbc = add i32 %tmp, 4
  %v4_14cbc = inttoptr i32 %v3_14cbc to i32*
  %v5_14cbc = load i32, i32* %v4_14cbc, align 4
  store i32 %v5_14cbc, i32* %r4.global-to-local, align 4
  %v0_14cc0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14cc0 = inttoptr i32 %v0_14cc0 to i32*
  store i32 %v2_14cbc, i32* %v1_14cc0, align 4
  %v3_14cc0 = add i32 %v0_14cc0, 4
  %v4_14cc0 = inttoptr i32 %v3_14cc0 to i32*
  %v5_14cc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14cc0, i32* %v4_14cc0, align 4
  %v0_14cc4 = load i32, i32* %r6.global-to-local, align 4
  %v1_14cc4 = add i32 %v0_14cc4, 12
  %v2_14cc4 = inttoptr i32 %v1_14cc4 to i32*
  %v3_14cc4 = load i32, i32* %v2_14cc4, align 4
  %v1_14cc8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14cc8 = add i32 %v1_14cc8, 12
  %v3_14cc8 = inttoptr i32 %v2_14cc8 to i32*
  store i32 %v3_14cc4, i32* %v3_14cc8, align 4
  %v0_14ccc = load i32, i32* %r6.global-to-local, align 4
  %v1_14ccc = add i32 %v0_14ccc, 96
  store i32 %v1_14ccc, i32* %r3.global-to-local, align 4
  %v1_14cd0 = inttoptr i32 %v1_14ccc to i32*
  %v2_14cd0 = load i32, i32* %v1_14cd0, align 4
  store i32 %v2_14cd0, i32* %r3.global-to-local, align 4
  %v3_14cd0 = add i32 %v0_14ccc, 100
  %v4_14cd0 = inttoptr i32 %v3_14cd0 to i32*
  %v5_14cd0 = load i32, i32* %v4_14cd0, align 4
  store i32 %v5_14cd0, i32* %r4.global-to-local, align 4
  %v1_14cd4 = add i32 %v0_14ccc, 56
  %v2_14cd4 = inttoptr i32 %v1_14cd4 to i32*
  %v3_14cd4 = load i32, i32* %v2_14cd4, align 4
  store i32 %v3_14cd4, i32* %r2.global-to-local, align 4
  %v1_14cd8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14cd8 = add i32 %v1_14cd8, 96
  %v3_14cd8 = inttoptr i32 %v2_14cd8 to i32*
  store i32 %v2_14cd0, i32* %v3_14cd8, align 4
  %v0_14cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_14cdc = load i32, i32* %r5.global-to-local, align 4
  %v2_14cdc = add i32 %v1_14cdc, 100
  %v3_14cdc = inttoptr i32 %v2_14cdc to i32*
  store i32 %v0_14cdc, i32* %v3_14cdc, align 4
  %v0_14ce0 = load i32, i32* %r6.global-to-local, align 4
  %v1_14ce0 = add i32 %v0_14ce0, 24
  store i32 %v1_14ce0, i32* %ip.global-to-local, align 4
  %v1_14ce4 = inttoptr i32 %v1_14ce0 to i32*
  %v2_14ce4 = load i32, i32* %v1_14ce4, align 4
  store i32 %v2_14ce4, i32* %ip.global-to-local, align 4
  %v3_14ce4 = add i32 %v0_14ce0, 28
  %v4_14ce4 = inttoptr i32 %v3_14ce4 to i32*
  %v5_14ce4 = load i32, i32* %v4_14ce4, align 4
  store i32 %v5_14ce4, i32* %lr.global-to-local, align 4
  %v0_14ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ce8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ce8 = add i32 %v1_14ce8, 56
  %v3_14ce8 = inttoptr i32 %v2_14ce8 to i32*
  store i32 %v0_14ce8, i32* %v3_14ce8, align 4
  %v0_14cec = load i32, i32* %r6.global-to-local, align 4
  %v1_14cec = add i32 %v0_14cec, 72
  store i32 %v1_14cec, i32* %r3.global-to-local, align 4
  %v1_14cf0 = add i32 %v0_14cec, 32
  store i32 %v1_14cf0, i32* %r7.global-to-local, align 4
  %v1_14cf4 = inttoptr i32 %v1_14cf0 to i32*
  %v2_14cf4 = load i32, i32* %v1_14cf4, align 4
  store i32 %v2_14cf4, i32* %r7.global-to-local, align 4
  %v3_14cf4 = add i32 %v0_14cec, 36
  %v4_14cf4 = inttoptr i32 %v3_14cf4 to i32*
  %v5_14cf4 = load i32, i32* %v4_14cf4, align 4
  store i32 %v5_14cf4, i32* %r8.global-to-local, align 4
  %v1_14cf8 = inttoptr i32 %v1_14cec to i32*
  %v2_14cf8 = load i32, i32* %v1_14cf8, align 4
  %v3_14cf8 = add i32 %v0_14cec, 76
  %v4_14cf8 = inttoptr i32 %v3_14cf8 to i32*
  %v5_14cf8 = load i32, i32* %v4_14cf8, align 4
  store i32 %v5_14cf8, i32* %r1.global-to-local, align 4
  %v0_14cfc = load i32, i32* %r5.global-to-local, align 4
  %v1_14cfc = add i32 %v0_14cfc, 72
  %v1_14d00 = inttoptr i32 %v1_14cfc to i32*
  store i32 %v2_14cf8, i32* %v1_14d00, align 4
  %v3_14d00 = add i32 %v0_14cfc, 76
  %v4_14d00 = inttoptr i32 %v3_14d00 to i32*
  %v5_14d00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d00, i32* %v4_14d00, align 4
  %v0_14d04 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d04 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d04 = add i32 %v1_14d04, 32
  %v3_14d04 = inttoptr i32 %v2_14d04 to i32*
  store i32 %v0_14d04, i32* %v3_14d04, align 4
  %v0_14d08 = load i32, i32* %r8.global-to-local, align 4
  %v1_14d08 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d08 = add i32 %v1_14d08, 36
  %v3_14d08 = inttoptr i32 %v2_14d08 to i32*
  store i32 %v0_14d08, i32* %v3_14d08, align 4
  %v0_14d0c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d0c = add i32 %v0_14d0c, 80
  store i32 %v1_14d0c, i32* %r3.global-to-local, align 4
  %v1_14d10 = add i32 %v0_14d0c, 48
  store i32 %v1_14d10, i32* %r7.global-to-local, align 4
  %v1_14d14 = inttoptr i32 %v1_14d10 to i32*
  %v2_14d14 = load i32, i32* %v1_14d14, align 4
  store i32 %v2_14d14, i32* %r7.global-to-local, align 4
  %v3_14d14 = add i32 %v0_14d0c, 52
  %v4_14d14 = inttoptr i32 %v3_14d14 to i32*
  %v5_14d14 = load i32, i32* %v4_14d14, align 4
  store i32 %v5_14d14, i32* %r8.global-to-local, align 4
  %v1_14d18 = inttoptr i32 %v1_14d0c to i32*
  %v2_14d18 = load i32, i32* %v1_14d18, align 4
  %v3_14d18 = add i32 %v0_14d0c, 84
  %v4_14d18 = inttoptr i32 %v3_14d18 to i32*
  %v5_14d18 = load i32, i32* %v4_14d18, align 4
  store i32 %v5_14d18, i32* %r1.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d0c, 16
  %v2_14d1c = inttoptr i32 %v1_14d1c to i32*
  %v3_14d1c = load i32, i32* %v2_14d1c, align 4
  store i32 %v3_14d1c, i32* %r2.global-to-local, align 4
  %v0_14d20 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d20 = add i32 %v0_14d20, 80
  %v1_14d24 = inttoptr i32 %v1_14d20 to i32*
  store i32 %v2_14d18, i32* %v1_14d24, align 4
  %v3_14d24 = add i32 %v0_14d20, 84
  %v4_14d24 = inttoptr i32 %v3_14d24 to i32*
  %v5_14d24 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d24, i32* %v4_14d24, align 4
  %v0_14d28 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d28 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d28 = add i32 %v1_14d28, 48
  %v3_14d28 = inttoptr i32 %v2_14d28 to i32*
  store i32 %v0_14d28, i32* %v3_14d28, align 4
  %v0_14d2c = load i32, i32* %r8.global-to-local, align 4
  %v1_14d2c = load i32, i32* %r5.global-to-local, align 4
  %v2_14d2c = add i32 %v1_14d2c, 52
  %v3_14d2c = inttoptr i32 %v2_14d2c to i32*
  store i32 %v0_14d2c, i32* %v3_14d2c, align 4
  %v0_14d30 = load i32, i32* %r2.global-to-local, align 4
  %v1_14d30 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d30 = add i32 %v1_14d30, 16
  %v3_14d30 = inttoptr i32 %v2_14d30 to i32*
  store i32 %v0_14d30, i32* %v3_14d30, align 4
  %v0_14d34 = load i32, i32* %r6.global-to-local, align 4
  %v1_14d34 = add i32 %v0_14d34, 88
  store i32 %v1_14d34, i32* %r3.global-to-local, align 4
  %v1_14d38 = add i32 %v0_14d34, 20
  %v2_14d38 = inttoptr i32 %v1_14d38 to i32*
  %v3_14d38 = load i32, i32* %v2_14d38, align 4
  store i32 %v3_14d38, i32* %r2.global-to-local, align 4
  %v1_14d3c = inttoptr i32 %v1_14d34 to i32*
  %v2_14d3c = load i32, i32* %v1_14d3c, align 4
  %v3_14d3c = add i32 %v0_14d34, 92
  %v4_14d3c = inttoptr i32 %v3_14d3c to i32*
  %v5_14d3c = load i32, i32* %v4_14d3c, align 4
  store i32 %v5_14d3c, i32* %r1.global-to-local, align 4
  %v1_14d40 = add i32 %v0_14d34, 64
  store i32 %v1_14d40, i32* %r6.global-to-local, align 4
  %v1_14d44 = inttoptr i32 %v1_14d40 to i32*
  %v2_14d44 = load i32, i32* %v1_14d44, align 4
  store i32 %v2_14d44, i32* %r6.global-to-local, align 4
  %v3_14d44 = add i32 %v0_14d34, 68
  %v4_14d44 = inttoptr i32 %v3_14d44 to i32*
  %v5_14d44 = load i32, i32* %v4_14d44, align 4
  store i32 %v5_14d44, i32* %r7.global-to-local, align 4
  %v0_14d48 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d48 = add i32 %v0_14d48, 88
  store i32 %v1_14d48, i32* %r3.global-to-local, align 4
  %v2_14d4c = add i32 %v0_14d48, 20
  %v3_14d4c = inttoptr i32 %v2_14d4c to i32*
  store i32 %v3_14d38, i32* %v3_14d4c, align 4
  %v0_14d50 = load i32, i32* %ip.global-to-local, align 4
  %v1_14d50 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d50 = add i32 %v1_14d50, 24
  %v3_14d50 = inttoptr i32 %v2_14d50 to i32*
  store i32 %v0_14d50, i32* %v3_14d50, align 4
  %v0_14d54 = load i32, i32* %lr.global-to-local, align 4
  %v1_14d54 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d54 = add i32 %v1_14d54, 28
  %v3_14d54 = inttoptr i32 %v2_14d54 to i32*
  store i32 %v0_14d54, i32* %v3_14d54, align 4
  %v0_14d58 = load i32, i32* %r6.global-to-local, align 4
  %v1_14d58 = load i32, i32* %r5.global-to-local, align 4
  %v2_14d58 = add i32 %v1_14d58, 64
  %v3_14d58 = inttoptr i32 %v2_14d58 to i32*
  store i32 %v0_14d58, i32* %v3_14d58, align 4
  %v0_14d5c = load i32, i32* %r7.global-to-local, align 4
  %v1_14d5c = load i32, i32* %r5.global-to-local, align 4
  %v2_14d5c = add i32 %v1_14d5c, 68
  %v3_14d5c = inttoptr i32 %v2_14d5c to i32*
  store i32 %v0_14d5c, i32* %v3_14d5c, align 4
  %v0_14d60 = load i32, i32* %r3.global-to-local, align 4
  %v1_14d60 = inttoptr i32 %v0_14d60 to i32*
  store i32 %v2_14d3c, i32* %v1_14d60, align 4
  %v3_14d60 = add i32 %v0_14d60, 4
  %v4_14d60 = inttoptr i32 %v3_14d60 to i32*
  %v5_14d60 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14d60, i32* %v4_14d60, align 4
  %v2_14d64 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14d64, i32* %r4.global-to-local, align 4
  ret i32 %v2_14d3c

; uselistorder directives
  uselistorder i32 %v0_14d34, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_14d0c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 1, 0, 2 }
  uselistorder i32 104, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_14d6c(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14d6c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14d6c = load i32, i32* @r4, align 4
  store i32 %v3_14d6c, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_14d84 = inttoptr i32 %arg2 to i8*
  %v3_14d84 = call i32 @function_120d0(i8* %v2_14d84, i32 0)
  %v2_14d88 = load i32, i32* %arg1, align 4
  %v3_14d88 = add i32 %tmp, 4
  %v4_14d88 = inttoptr i32 %v3_14d88 to i32*
  %v5_14d88 = load i32, i32* %v4_14d88, align 4
  store i32 %v5_14d88, i32* %r4.global-to-local, align 4
  %v0_14d8c = load i32, i32* %r6.global-to-local, align 4
  %v1_14d8c = inttoptr i32 %v0_14d8c to i32*
  store i32 %v2_14d88, i32* %v1_14d8c, align 4
  %v3_14d8c = add i32 %v0_14d8c, 4
  %v4_14d8c = inttoptr i32 %v3_14d8c to i32*
  %v5_14d8c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d8c, i32* %v4_14d8c, align 4
  %v0_14d90 = load i32, i32* %r5.global-to-local, align 4
  %v1_14d90 = add i32 %v0_14d90, 32
  %v1_14d94 = inttoptr i32 %v1_14d90 to i32*
  %v2_14d94 = load i32, i32* %v1_14d94, align 4
  %v3_14d94 = add i32 %v0_14d90, 36
  %v4_14d94 = inttoptr i32 %v3_14d94 to i32*
  %v5_14d94 = load i32, i32* %v4_14d94, align 4
  store i32 %v5_14d94, i32* %r4.global-to-local, align 4
  %v1_14d98 = add i32 %v0_14d90, 96
  %v2_14d98 = inttoptr i32 %v1_14d98 to i32*
  %v3_14d98 = load i32, i32* %v2_14d98, align 4
  store i32 %v3_14d98, i32* %r2.global-to-local, align 4
  %v1_14d9c = load i32, i32* %r6.global-to-local, align 4
  %v2_14d9c = add i32 %v1_14d9c, 32
  %v3_14d9c = inttoptr i32 %v2_14d9c to i32*
  store i32 %v2_14d94, i32* %v3_14d9c, align 4
  %v0_14da0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14da0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14da0 = add i32 %v1_14da0, 36
  %v3_14da0 = inttoptr i32 %v2_14da0 to i32*
  store i32 %v0_14da0, i32* %v3_14da0, align 4
  %v0_14da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14da4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14da4 = add i32 %v1_14da4, 12
  %v3_14da4 = inttoptr i32 %v2_14da4 to i32*
  store i32 %v0_14da4, i32* %v3_14da4, align 4
  %v0_14da8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14da8 = add i32 %v0_14da8, 48
  %v2_14da8 = inttoptr i32 %v1_14da8 to i32*
  %v3_14da8 = load i32, i32* %v2_14da8, align 4
  %v1_14dac = add i32 %v0_14da8, 24
  store i32 %v1_14dac, i32* %ip.global-to-local, align 4
  %v1_14db0 = inttoptr i32 %v1_14dac to i32*
  %v2_14db0 = load i32, i32* %v1_14db0, align 4
  store i32 %v2_14db0, i32* %ip.global-to-local, align 4
  %v3_14db0 = add i32 %v0_14da8, 28
  %v4_14db0 = inttoptr i32 %v3_14db0 to i32*
  %v5_14db0 = load i32, i32* %v4_14db0, align 4
  store i32 %v5_14db0, i32* %lr.global-to-local, align 4
  %v1_14db4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14db4 = add i32 %v1_14db4, 44
  %v3_14db4 = inttoptr i32 %v2_14db4 to i32*
  store i32 %v3_14da8, i32* %v3_14db4, align 4
  %v0_14db8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14db8 = add i32 %v0_14db8, 64
  %v2_14db8 = inttoptr i32 %v1_14db8 to i32*
  %v3_14db8 = load i32, i32* %v2_14db8, align 4
  %v1_14dbc = add i32 %v0_14db8, 56
  %v2_14dbc = inttoptr i32 %v1_14dbc to i32*
  %v3_14dbc = load i32, i32* %v2_14dbc, align 4
  store i32 %v3_14dbc, i32* %r2.global-to-local, align 4
  %v1_14dc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dc0 = add i32 %v1_14dc0, 52
  %v3_14dc0 = inttoptr i32 %v2_14dc0 to i32*
  store i32 %v3_14db8, i32* %v3_14dc0, align 4
  %v0_14dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14dc4 = load i32, i32* %r6.global-to-local, align 4
  %v2_14dc4 = add i32 %v1_14dc4, 48
  %v3_14dc4 = inttoptr i32 %v2_14dc4 to i32*
  store i32 %v0_14dc4, i32* %v3_14dc4, align 4
  %v0_14dc8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dc8 = add i32 %v0_14dc8, 72
  %v1_14dcc = inttoptr i32 %v1_14dc8 to i32*
  %v2_14dcc = load i32, i32* %v1_14dcc, align 4
  %v3_14dcc = add i32 %v0_14dc8, 76
  %v4_14dcc = inttoptr i32 %v3_14dcc to i32*
  %v5_14dcc = load i32, i32* %v4_14dcc, align 4
  store i32 %v5_14dcc, i32* %r1.global-to-local, align 4
  %v0_14dd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_14dd0 = add i32 %v0_14dd0, 56
  %v1_14dd4 = inttoptr i32 %v1_14dd0 to i32*
  store i32 %v2_14dcc, i32* %v1_14dd4, align 4
  %v3_14dd4 = add i32 %v0_14dd0, 60
  %v4_14dd4 = inttoptr i32 %v3_14dd4 to i32*
  %v5_14dd4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14dd4, i32* %v4_14dd4, align 4
  %v0_14dd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14dd8 = add i32 %v0_14dd8, 80
  %v1_14ddc = inttoptr i32 %v1_14dd8 to i32*
  %v2_14ddc = load i32, i32* %v1_14ddc, align 4
  %v3_14ddc = add i32 %v0_14dd8, 84
  %v4_14ddc = inttoptr i32 %v3_14ddc to i32*
  %v5_14ddc = load i32, i32* %v4_14ddc, align 4
  store i32 %v5_14ddc, i32* %r1.global-to-local, align 4
  %v0_14de0 = load i32, i32* %r6.global-to-local, align 4
  %v1_14de0 = add i32 %v0_14de0, 64
  %v1_14de4 = inttoptr i32 %v1_14de0 to i32*
  store i32 %v2_14ddc, i32* %v1_14de4, align 4
  %v3_14de4 = add i32 %v0_14de0, 68
  %v4_14de4 = inttoptr i32 %v3_14de4 to i32*
  %v5_14de4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14de4, i32* %v4_14de4, align 4
  %v0_14de8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14de8 = add i32 %v0_14de8, 16
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  %v1_14dec = load i32, i32* %r6.global-to-local, align 4
  %v2_14dec = add i32 %v1_14dec, 16
  %v3_14dec = inttoptr i32 %v2_14dec to i32*
  store i32 %v3_14de8, i32* %v3_14dec, align 4
  %v0_14df0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14df0 = add i32 %v0_14df0, 88
  %v1_14df4 = add i32 %v0_14df0, 20
  %v2_14df4 = inttoptr i32 %v1_14df4 to i32*
  %v3_14df4 = load i32, i32* %v2_14df4, align 4
  store i32 %v3_14df4, i32* %r2.global-to-local, align 4
  %v1_14df8 = inttoptr i32 %v1_14df0 to i32*
  %v2_14df8 = load i32, i32* %v1_14df8, align 4
  %v3_14df8 = add i32 %v0_14df0, 92
  %v4_14df8 = inttoptr i32 %v3_14df8 to i32*
  %v5_14df8 = load i32, i32* %v4_14df8, align 4
  store i32 %v5_14df8, i32* %r1.global-to-local, align 4
  %v0_14dfc = load i32, i32* %r6.global-to-local, align 4
  %v1_14dfc = add i32 %v0_14dfc, 72
  %v1_14e00 = inttoptr i32 %v1_14dfc to i32*
  store i32 %v2_14df8, i32* %v1_14e00, align 4
  %v3_14e00 = add i32 %v0_14dfc, 76
  %v4_14e00 = inttoptr i32 %v3_14e00 to i32*
  %v5_14e00 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14e00, i32* %v4_14e00, align 4
  %v0_14e04 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e04 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e04 = add i32 %v1_14e04, 20
  %v3_14e04 = inttoptr i32 %v2_14e04 to i32*
  store i32 %v0_14e04, i32* %v3_14e04, align 4
  %v0_14e08 = load i32, i32* %ip.global-to-local, align 4
  %v1_14e08 = load i32, i32* %r6.global-to-local, align 4
  %v2_14e08 = add i32 %v1_14e08, 24
  %v3_14e08 = inttoptr i32 %v2_14e08 to i32*
  store i32 %v0_14e08, i32* %v3_14e08, align 4
  %v0_14e0c = load i32, i32* %lr.global-to-local, align 4
  %v1_14e0c = load i32, i32* %r6.global-to-local, align 4
  %v2_14e0c = add i32 %v1_14e0c, 28
  %v3_14e0c = inttoptr i32 %v2_14e0c to i32*
  store i32 %v0_14e0c, i32* %v3_14e0c, align 4
  %v2_14e10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14e10, i32* %r4.global-to-local, align 4
  ret i32 %v2_14df8

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 84, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_14e18(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e18:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_14e34 = inttoptr i32 %arg2 to i8*
  %v3_14e34 = call i32 @function_120d0(i8* %v2_14e34, i32 0)
  %v1_14e38 = add i32 %tmp, 4
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  %v2_14e3c = load i32, i32* %arg1, align 4
  store i32 %v2_14e3c, i32* %r8.global-to-local, align 4
  %v1_14e40 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e40 = add i32 %v1_14e40, 12
  %v3_14e40 = inttoptr i32 %v2_14e40 to i32*
  store i32 %v3_14e38, i32* %v3_14e40, align 4
  %v0_14e44 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e44 = add i32 %v0_14e44, 20
  %v2_14e44 = inttoptr i32 %v1_14e44 to i32*
  %v3_14e44 = load i32, i32* %v2_14e44, align 4
  %v1_14e48 = add i32 %v0_14e44, 16
  %v2_14e48 = inttoptr i32 %v1_14e48 to i32*
  %v3_14e48 = load i32, i32* %v2_14e48, align 4
  store i32 %v3_14e48, i32* %r6.global-to-local, align 4
  %v1_14e4c = load i32, i32* %r5.global-to-local, align 4
  %v2_14e4c = add i32 %v1_14e4c, 44
  %v3_14e4c = inttoptr i32 %v2_14e4c to i32*
  store i32 %v3_14e44, i32* %v3_14e4c, align 4
  %v0_14e50 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e50 = add i32 %v0_14e50, 24
  %v2_14e50 = inttoptr i32 %v1_14e50 to i32*
  %v3_14e50 = load i32, i32* %v2_14e50, align 4
  %v1_14e54 = load i32, i32* %r5.global-to-local, align 4
  %v2_14e54 = add i32 %v1_14e54, 48
  %v3_14e54 = inttoptr i32 %v2_14e54 to i32*
  store i32 %v3_14e50, i32* %v3_14e54, align 4
  %v0_14e58 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e58 = add i32 %v0_14e58, 28
  %v2_14e58 = inttoptr i32 %v1_14e58 to i32*
  %v3_14e58 = load i32, i32* %v2_14e58, align 4
  %v1_14e5c = load i32, i32* %r5.global-to-local, align 4
  %v2_14e5c = add i32 %v1_14e5c, 52
  %v3_14e5c = inttoptr i32 %v2_14e5c to i32*
  store i32 %v3_14e58, i32* %v3_14e5c, align 4
  %v0_14e60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e60 = add i32 %v0_14e60, 32
  %v1_14e64 = inttoptr i32 %v1_14e60 to i32*
  %v2_14e64 = load i32, i32* %v1_14e64, align 4
  %v3_14e64 = add i32 %v0_14e60, 36
  %v4_14e64 = inttoptr i32 %v3_14e64 to i32*
  %v5_14e64 = load i32, i32* %v4_14e64, align 4
  store i32 %v5_14e64, i32* %r1.global-to-local, align 4
  %v0_14e68 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e68 = add i32 %v0_14e68, 56
  %v1_14e6c = inttoptr i32 %v1_14e68 to i32*
  store i32 %v2_14e64, i32* %v1_14e6c, align 4
  %v3_14e6c = add i32 %v0_14e68, 60
  %v4_14e6c = inttoptr i32 %v3_14e6c to i32*
  %v5_14e6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14e6c, i32* %v4_14e6c, align 4
  %v0_14e70 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e70 = add i32 %v0_14e70, 40
  %v1_14e74 = inttoptr i32 %v1_14e70 to i32*
  %v2_14e74 = load i32, i32* %v1_14e74, align 4
  %v3_14e74 = add i32 %v0_14e70, 44
  %v4_14e74 = inttoptr i32 %v3_14e74 to i32*
  %v5_14e74 = load i32, i32* %v4_14e74, align 4
  store i32 %v5_14e74, i32* %r1.global-to-local, align 4
  %v0_14e78 = load i32, i32* %r5.global-to-local, align 4
  %v1_14e78 = add i32 %v0_14e78, 64
  %v1_14e7c = inttoptr i32 %v1_14e78 to i32*
  store i32 %v2_14e74, i32* %v1_14e7c, align 4
  %v3_14e7c = add i32 %v0_14e78, 68
  %v4_14e7c = inttoptr i32 %v3_14e7c to i32*
  %v5_14e7c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14e7c, i32* %v4_14e7c, align 4
  %v0_14e80 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e80 = add i32 %v0_14e80, 48
  %v1_14e84 = inttoptr i32 %v1_14e80 to i32*
  %v2_14e84 = load i32, i32* %v1_14e84, align 4
  %v3_14e84 = add i32 %v0_14e80, 52
  %v4_14e84 = inttoptr i32 %v3_14e84 to i32*
  %v5_14e84 = load i32, i32* %v4_14e84, align 4
  store i32 %v5_14e84, i32* %r1.global-to-local, align 4
  %v1_14e88 = add i32 %v0_14e80, 8
  %v2_14e88 = inttoptr i32 %v1_14e88 to i16*
  %v3_14e88 = load i16, i16* %v2_14e88, align 2
  %v4_14e88 = zext i16 %v3_14e88 to i32
  store i32 %v4_14e88, i32* %r2.global-to-local, align 4
  %v1_14e8c = add i32 %v0_14e80, 10
  %v2_14e8c = inttoptr i32 %v1_14e8c to i16*
  %v3_14e8c = load i16, i16* %v2_14e8c, align 2
  %v4_14e8c = zext i16 %v3_14e8c to i32
  store i32 %v4_14e8c, i32* %ip.global-to-local, align 4
  %v1_14e90 = add i32 %v0_14e80, 12
  %v2_14e90 = inttoptr i32 %v1_14e90 to i16*
  %v3_14e90 = load i16, i16* %v2_14e90, align 2
  %v4_14e90 = zext i16 %v3_14e90 to i32
  store i32 %v4_14e90, i32* %lr.global-to-local, align 4
  %v1_14e94 = add i32 %v0_14e80, 14
  %v2_14e94 = inttoptr i32 %v1_14e94 to i16*
  %v3_14e94 = load i16, i16* %v2_14e94, align 2
  %v4_14e94 = zext i16 %v3_14e94 to i32
  store i32 %v4_14e94, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_14ea0 = load i32, i32* %r5.global-to-local, align 4
  %v1_14ea0 = add i32 %v0_14ea0, 72
  %v1_14ea4 = inttoptr i32 %v1_14ea0 to i32*
  store i32 %v2_14e84, i32* %v1_14ea4, align 4
  %v3_14ea4 = add i32 %v0_14ea0, 76
  %v4_14ea4 = inttoptr i32 %v3_14ea4 to i32*
  %v5_14ea4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_14ea4, i32* %v4_14ea4, align 4
  %v0_14ea8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14ea8 = inttoptr i32 %v0_14ea8 to i32*
  %v2_14ea8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_14ea8, i32* %v1_14ea8, align 4
  %v3_14ea8 = add i32 %v0_14ea8, 4
  %v4_14ea8 = inttoptr i32 %v3_14ea8 to i32*
  %v5_14ea8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_14ea8, i32* %v4_14ea8, align 4
  %v0_14eac = load i32, i32* %r6.global-to-local, align 4
  %v1_14eac = load i32, i32* %r5.global-to-local, align 4
  %v2_14eac = add i32 %v1_14eac, 32
  %v3_14eac = inttoptr i32 %v2_14eac to i32*
  store i32 %v0_14eac, i32* %v3_14eac, align 4
  %v0_14eb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14eb0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14eb0 = add i32 %v1_14eb0, 36
  %v3_14eb0 = inttoptr i32 %v2_14eb0 to i32*
  store i32 %v0_14eb0, i32* %v3_14eb0, align 4
  %v0_14eb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14eb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_14eb4 = add i32 %v1_14eb4, 16
  %v3_14eb4 = inttoptr i32 %v2_14eb4 to i32*
  store i32 %v0_14eb4, i32* %v3_14eb4, align 4
  %v0_14eb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_14eb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14eb8 = add i32 %v1_14eb8, 20
  %v3_14eb8 = inttoptr i32 %v2_14eb8 to i32*
  store i32 %v0_14eb8, i32* %v3_14eb8, align 4
  %v0_14ebc = load i32, i32* %lr.global-to-local, align 4
  %v1_14ebc = load i32, i32* %r5.global-to-local, align 4
  %v2_14ebc = add i32 %v1_14ebc, 24
  %v3_14ebc = inttoptr i32 %v2_14ebc to i32*
  store i32 %v0_14ebc, i32* %v3_14ebc, align 4
  %v0_14ec0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ec0 = load i32, i32* %r5.global-to-local, align 4
  %v2_14ec0 = add i32 %v1_14ec0, 28
  %v3_14ec0 = inttoptr i32 %v2_14ec0 to i32*
  store i32 %v0_14ec0, i32* %v3_14ec0, align 4
  ret i32 %v2_14e84

; uselistorder directives
  uselistorder i32 %v0_14e80, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder i32 68, { 0, 1, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 60, { 3, 4, 1, 5, 6, 0, 2, 7 }
  uselistorder i32 88, { 4, 0, 1, 2, 3 }
}

define i32 @function_14ed0() local_unnamed_addr {
dec_label_pc_14ed0:
  %stack_var_-16 = alloca i32, align 4
  %v2_14ed4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_14ee0 = call i32 @function_16c08(i32 7, i32 %v2_14ed4)
  %v1_14ee4 = icmp slt i32 %v2_14ee0, 0
  %v5_14ee8 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_14ee4, i32 256, i32 %v5_14ee8
  ret i32 %storemerge
}

define i32 @function_14efc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14efc:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14efc = load i32, i32* @r7, align 4
  store i32 %v3_14efc, i32* %stack_var_-8, align 4
  %v0_14f08 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14f08, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14f08, -4095
  br i1 %tmp, label %dec_label_pc_14f28, label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14efc
  %v0_14f18 = call i32 @function_1207c()
  %v0_14f1c = load i32, i32* %r7.global-to-local, align 4
  %v1_14f1c = sub i32 0, %v0_14f1c
  %v2_14f20 = inttoptr i32 %v0_14f18 to i32*
  store i32 %v1_14f1c, i32* %v2_14f20, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14f28.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14efc, %dec_label_pc_14f18
  %v1_14f2c = phi i32 [ %v0_14f08, %dec_label_pc_14efc ], [ -1, %dec_label_pc_14f18 ]
  %v2_14f28 = phi i32 [ %v3_14efc, %dec_label_pc_14efc ], [ %v2_14f28.pre, %dec_label_pc_14f18 ]
  store i32 %v2_14f28, i32* @r7, align 4
  ret i32 %v1_14f2c

; uselistorder directives
  uselistorder i32 %v0_14f08, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f28, { 1, 0 }
}

define i32 @function_14f30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14f30:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14f30 = load i32, i32* @r7, align 4
  store i32 %v3_14f30, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14f58, label %dec_label_pc_14f48

dec_label_pc_14f48:                               ; preds = %dec_label_pc_14f30
  %v0_14f48 = call i32 @function_1207c()
  %v0_14f4c = load i32, i32* %r7.global-to-local, align 4
  %v1_14f4c = sub i32 0, %v0_14f4c
  %v2_14f50 = inttoptr i32 %v0_14f48 to i32*
  store i32 %v1_14f4c, i32* %v2_14f50, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14f5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14f58

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f30, %dec_label_pc_14f48
  %v2_14f5c = phi i32 [ %v3_14f30, %dec_label_pc_14f30 ], [ %v2_14f5c.pre, %dec_label_pc_14f48 ]
  %v0_14f58 = phi i32 [ %arg1, %dec_label_pc_14f30 ], [ -1, %dec_label_pc_14f48 ]
  store i32 %v2_14f5c, i32* @r7, align 4
  ret i32 %v0_14f58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14f58, { 1, 0 }
}

define i32 @function_14f64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14f64:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14f98, label %dec_label_pc_14f88

dec_label_pc_14f88:                               ; preds = %dec_label_pc_14f64
  %v0_14f88 = call i32 @function_1207c()
  %v0_14f8c = load i32, i32* %r4.global-to-local, align 4
  %v1_14f8c = sub i32 0, %v0_14f8c
  %v2_14f90 = inttoptr i32 %v0_14f88 to i32*
  store i32 %v1_14f8c, i32* %v2_14f90, align 4
  br label %dec_label_pc_14f98

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14f64, %dec_label_pc_14f88
  %v1_14fa0 = phi i32 [ %arg1, %dec_label_pc_14f64 ], [ -1, %dec_label_pc_14f88 ]
  ret i32 %v1_14fa0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f98, { 1, 0 }
}

define i32 @function_14fa4(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fa4:
  %v1_14fb4 = load i32, i32* @r0, align 4
  ret i32 %v1_14fb4
}

define i32 @function_14fb8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14fb8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14fb8 = load i32, i32* @r7, align 4
  store i32 %v3_14fb8, i32* %stack_var_-8, align 4
  %v0_14fc4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14fc4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14fc4, -4095
  br i1 %tmp, label %dec_label_pc_14fe4, label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fb8
  %v0_14fd4 = call i32 @function_1207c()
  %v0_14fd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_14fd8 = sub i32 0, %v0_14fd8
  %v2_14fdc = inttoptr i32 %v0_14fd4 to i32*
  store i32 %v1_14fd8, i32* %v2_14fdc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14fe4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14fe4

dec_label_pc_14fe4:                               ; preds = %dec_label_pc_14fb8, %dec_label_pc_14fd4
  %v1_14fe8 = phi i32 [ %v0_14fc4, %dec_label_pc_14fb8 ], [ -1, %dec_label_pc_14fd4 ]
  %v2_14fe4 = phi i32 [ %v3_14fb8, %dec_label_pc_14fb8 ], [ %v2_14fe4.pre, %dec_label_pc_14fd4 ]
  store i32 %v2_14fe4, i32* @r7, align 4
  ret i32 %v1_14fe8

; uselistorder directives
  uselistorder i32 %v0_14fc4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14fe4, { 1, 0 }
}

define i32 @function_14fec(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fec:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ff0.outer

dec_label_pc_14ff0.outer:                         ; preds = %dec_label_pc_15008, %dec_label_pc_14fec
  %v0_14ff0.ph = phi i32 [ %v0_14ff0.pre.pre, %dec_label_pc_15008 ], [ %arg1, %dec_label_pc_14fec ]
  %tmp = icmp ult i32 %v0_14ff0.ph, -4095
  br label %dec_label_pc_14ff0

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14ff0.outer, %dec_label_pc_14ff0
  br i1 %tmp, label %dec_label_pc_14ff0, label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff0
  %v0_15008 = call i32 @function_1207c()
  %v1_1500c = sub i32 0, %v0_14ff0.ph
  %v2_15010 = inttoptr i32 %v0_15008 to i32*
  store i32 %v1_1500c, i32* %v2_15010, align 4
  %v0_14ff0.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ff0.outer

; uselistorder directives
  uselistorder i32 %v0_14ff0.ph, { 1, 0 }
  uselistorder label %dec_label_pc_14ff0, { 1, 0 }
}

define i32 @function_15018(i32* %arg1) local_unnamed_addr {
dec_label_pc_15018:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 98320, i32* @r6, align 4
  %v1_1502c = add i32 %tmp, 24
  store i32 %v1_1502c, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15044 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_15044, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15044)
  %v0_15058 = load i32, i32* @r6, align 4
  %v2_15058 = add i32 %v0_15058, 16
  %v3_15058 = inttoptr i32 %v2_15058 to i32*
  %v4_15058 = load i32, i32* %v3_15058, align 4
  store i32 %v4_15058, i32* %ip.global-to-local, align 4
  store i32 86116, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15058)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15068

dec_label_pc_15068:                               ; preds = %dec_label_pc_15098, %dec_label_pc_15018
  %v0_15068 = load i32, i32* @r5, align 4
  %v1_15068 = add i32 %v0_15068, 4
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  %v4_15068 = add i32 %v0_15068, 8
  %v5_15068 = inttoptr i32 %v4_15068 to i32*
  %v6_15068 = load i32, i32* %v5_15068, align 4
  %tmp10 = icmp ugt i32 %v6_15068, %v3_15068
  br i1 %tmp10, label %dec_label_pc_15098, label %dec_label_pc_15074

dec_label_pc_15074:                               ; preds = %dec_label_pc_15068
  %v1_15074 = inttoptr i32 %v0_15068 to i32*
  %v2_15074 = load i32, i32* %v1_15074, align 4
  %v1_15078 = add i32 %v0_15068, 12
  %v2_15078 = inttoptr i32 %v1_15078 to i32*
  %v3_15078 = load i32, i32* %v2_15078, align 4
  %v1_1507c = add i32 %v0_15068, 20
  %v2_1507c = inttoptr i32 %v1_1507c to i32*
  %v3_1507c = load i32, i32* %v2_1507c, align 4
  %v4_15080 = inttoptr i32 %v3_15078 to i32*
  %v5_15080 = call i32 @function_16c3c(i32 %v2_15074, i32* %v4_15080, i32 %v3_1507c, i32 %v6_15068)
  %tmp9 = icmp slt i32 %v5_15080, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_15090

.thread:                                          ; preds = %dec_label_pc_15074
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_150c8

dec_label_pc_15090:                               ; preds = %dec_label_pc_15074
  %v1_15090 = load i32, i32* @r5, align 4
  %v2_15090 = add i32 %v1_15090, 8
  %v3_15090 = inttoptr i32 %v2_15090 to i32*
  store i32 %v5_15080, i32* %v3_15090, align 4
  %v0_15094 = load i32, i32* @r7, align 4
  %v1_15094 = load i32, i32* @r5, align 4
  %v2_15094 = add i32 %v1_15094, 4
  %v3_15094 = inttoptr i32 %v2_15094 to i32*
  store i32 %v0_15094, i32* %v3_15094, align 4
  %v0_15098.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15098

dec_label_pc_15098:                               ; preds = %dec_label_pc_15068, %dec_label_pc_15090
  %v1_150bc = phi i32 [ %v0_15068, %dec_label_pc_15068 ], [ %v0_15098.pre, %dec_label_pc_15090 ]
  %v1_15098 = add i32 %v1_150bc, 4
  %v2_15098 = inttoptr i32 %v1_15098 to i32*
  %v3_15098 = load i32, i32* %v2_15098, align 4
  %v1_1509c = add i32 %v1_150bc, 12
  %v2_1509c = inttoptr i32 %v1_1509c to i32*
  %v3_1509c = load i32, i32* %v2_1509c, align 4
  %v2_150a0 = add i32 %v3_1509c, %v3_15098
  store i32 %v2_150a0, i32* @r4, align 4
  %v3_150a4 = inttoptr i32 %v2_150a0 to i32*
  %v4_150a4 = load i32, i32* %v3_150a4, align 4
  %v1_150a8 = add i32 %v2_150a0, 4
  %v2_150a8 = inttoptr i32 %v1_150a8 to i32*
  %v3_150a8 = load i32, i32* %v2_150a8, align 4
  %v1_150ac = add i32 %v2_150a0, 16
  %v2_150ac = inttoptr i32 %v1_150ac to i16*
  %v3_150ac = load i16, i16* %v2_150ac, align 2
  %v4_150ac = zext i16 %v3_150ac to i32
  %v1_150b0 = add i32 %v2_150a0, 8
  %v2_150b0 = inttoptr i32 %v1_150b0 to i32*
  %v3_150b0 = load i32, i32* %v2_150b0, align 4
  store i32 %v3_150b0, i32* %ip.global-to-local, align 4
  %v2_150b4 = add i32 %v4_150ac, %v3_15098
  %v2_150b8 = or i32 %v3_150a8, %v4_150a4
  %v4_150b8 = icmp eq i32 %v2_150b8, 0
  store i32 %v2_150b4, i32* %v2_15098, align 4
  %v0_150c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_150c0 = load i32, i32* @r5, align 4
  %v2_150c0 = add i32 %v1_150c0, 16
  %v3_150c0 = inttoptr i32 %v2_150c0 to i32*
  store i32 %v0_150c0, i32* %v3_150c0, align 4
  br i1 %v4_150b8, label %dec_label_pc_15068, label %dec_label_pc_150c8

dec_label_pc_150c8:                               ; preds = %dec_label_pc_15098, %.thread
  %v0_150d4 = load i32, i32* @r6, align 4
  %v2_150d4 = add i32 %v0_150d4, 24
  %v3_150d4 = inttoptr i32 %v2_150d4 to i32*
  %v4_150d4 = load i32, i32* %v3_150d4, align 4
  store i32 %v4_150d4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_150d4)
  %v0_150e0 = load i32, i32* @r4, align 4
  ret i32 %v0_150e0

; uselistorder directives
  uselistorder i32 %v2_150a0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_150bc, { 1, 0 }
  uselistorder i32 %v6_15068, { 1, 0 }
  uselistorder i32 %v0_15068, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_15098, { 1, 0 }
}

define i32 @function_150f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_150f0:
  %v0_150f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_150f0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_150f0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_150f0, %bb
  %v10_15100 = phi i32 [ %arg1, %dec_label_pc_150f0 ], [ 0, %bb ]
  ret i32 %v10_15100

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_15104(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_15104:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15104 = load i32, i32* @r4, align 4
  %v6_15104 = load i32, i32* @r5, align 4
  %v9_15104 = load i32, i32* @r6, align 4
  %v12_15104 = load i32, i32* @r7, align 4
  %v15_15104 = load i32, i32* @r8, align 4
  %v18_15104 = load i32, i32* @sb, align 4
  %v21_15104 = load i32, i32* @sl, align 4
  %v24_15104 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15108 = icmp eq i32* %arg1, null
  store i1 %v2_15108, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15108, label %dec_label_pc_15418, label %dec_label_pc_15120

dec_label_pc_15120:                               ; preds = %dec_label_pc_15104
  %v1_15120 = urem i32 %arg3, 256
  store i32 %v1_15120, i32* @sb, align 4
  %v1_15124 = and i32 %arg3, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v3_15128 = udiv i32 %v1_15124, 256
  %v3_1512c = mul nuw nsw i32 %v1_15120, 4
  %v1_15134 = or i32 %v3_1512c, 1
  %v1_15140 = and i32 %arg3, 131072
  %v1_15144 = add nsw i32 %v1_15120, -1
  %v1_15150 = and i32 %arg3, 262144
  store i32 %v1_15150, i32* %r2.global-to-local, align 4
  %v1_15154 = and i32 %arg3, 65536
  store i32 %v1_15154, i32* %r3.global-to-local, align 4
  store i32 %v1_15154, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15164 = add i32 %arg4, 1
  store i32 %v1_15164, i32* @sl, align 4
  %v2_152e4 = inttoptr i32 %arg2 to i32*
  %v2_152f4 = icmp eq i32 %v1_15140, 0
  %v2_1534c = icmp eq i32 %v1_15150, 0
  br label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15168.backedge, %dec_label_pc_15120
  %v2_15184 = phi i32 [ %v0_15168.pre, %dec_label_pc_15168.backedge ], [ %tmp, %dec_label_pc_15120 ]
  %v1_15168 = add i32 %v2_15184, 4
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  store i32 %v3_15168, i32* %r3.global-to-local, align 4
  %v2_1516c = icmp eq i32 %v3_15168, 0
  store i1 %v2_1516c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1516c, label %dec_label_pc_15174, label %dec_label_pc_151bc

dec_label_pc_15174:                               ; preds = %dec_label_pc_15168
  %v1_15174 = add i32 %v2_15184, 16
  %v2_15174 = inttoptr i32 %v1_15174 to i32*
  %v3_15174 = load i32, i32* %v2_15174, align 4
  store i32 %v3_15174, i32* %r3.global-to-local, align 4
  %v2_15178 = icmp eq i32 %v3_15174, 0
  store i1 %v2_15178, i1* %cpsr_z.global-to-local, align 1
  %v1_1517c = add i32 %v2_15184, 8
  %v2_1517c = inttoptr i32 %v1_1517c to i32*
  %v3_1517c = load i32, i32* %v2_1517c, align 4
  store i32 %v3_1517c, i32* %r3.global-to-local, align 4
  br i1 %v2_15178, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_15174
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15174, align 4
  %v0_15188.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_15174, %bb
  %v0_15188 = phi i32 [ %v0_15188.pre, %bb ], [ %v3_1517c, %dec_label_pc_15174 ]
  %v2_15188 = icmp eq i32 %v0_15188, 0
  store i1 %v2_15188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15188, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_15134, i32* %r3.global-to-local, align 4
  %v2_15190 = load i32, i32* @r5, align 4
  %v3_15190 = add i32 %v2_15190, 8
  %v4_15190 = inttoptr i32 %v3_15190 to i32*
  store i32 %v1_15134, i32* %v4_15190, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_15194 = load i32, i32* @r5, align 4
  %v1_15194 = add i32 %v0_15194, 16
  %v2_15194 = inttoptr i32 %v1_15194 to i32*
  %v3_15194 = load i32, i32* %v2_15194, align 4
  store i32 %v3_15194, i32* %r0.global-to-local, align 4
  %v1_15198 = add i32 %v0_15194, 8
  %v2_15198 = inttoptr i32 %v1_15198 to i32*
  %v3_15198 = load i32, i32* %v2_15198, align 4
  store i32 %v3_15198, i32* %r3.global-to-local, align 4
  %v2_1519c = add i32 %v3_15198, %v3_15194
  store i32 %v2_1519c, i32* @r0, align 4
  %v0_151a0 = call i32 @function_126ac()
  store i32 %v0_151a0, i32* %r0.global-to-local, align 4
  %v2_151a4 = icmp eq i32 %v0_151a0, 0
  store i1 %v2_151a4, i1* %cpsr_z.global-to-local, align 1
  %v1_151a8 = load i32, i32* @r5, align 4
  %v2_151a8 = add i32 %v1_151a8, 4
  %v3_151a8 = inttoptr i32 %v2_151a8 to i32*
  store i32 %v0_151a0, i32* %v3_151a8, align 4
  br i1 %v2_151a4, label %dec_label_pc_15418, label %dec_label_pc_151b0

dec_label_pc_151b0:                               ; preds = %.thread
  %v0_151b0 = load i32, i32* @r5, align 4
  %v1_151b0 = add i32 %v0_151b0, 20
  %v2_151b0 = inttoptr i32 %v1_151b0 to i32*
  %v3_151b0 = load i32, i32* %v2_151b0, align 4
  %v1_151b4 = or i32 %v3_151b0, 1
  store i32 %v1_151b4, i32* %r3.global-to-local, align 4
  store i32 %v1_151b4, i32* %v2_151b0, align 4
  %v0_151bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_151bc

dec_label_pc_151bc:                               ; preds = %dec_label_pc_15168, %dec_label_pc_151b0
  %v1_151c4 = phi i32 [ %v2_15184, %dec_label_pc_15168 ], [ %v0_151bc.pre, %dec_label_pc_151b0 ]
  %v1_151bc = add i32 %v1_151c4, 4
  %v2_151bc = inttoptr i32 %v1_151bc to i32*
  %v3_151bc = load i32, i32* %v2_151bc, align 4
  store i32 %v3_151bc, i32* %r2.global-to-local, align 4
  %v4_151bc = add i32 %v1_151c4, 8
  %v5_151bc = inttoptr i32 %v4_151bc to i32*
  %v6_151bc = load i32, i32* %v5_151bc, align 4
  %v2_151c0 = add i32 %v6_151bc, %v3_151bc
  store i32 %v2_151c0, i32* %r3.global-to-local, align 4
  %v2_151c4 = add i32 %v1_151c4, 12
  %v3_151c4 = inttoptr i32 %v2_151c4 to i32*
  store i32 %v2_151c0, i32* %v3_151c4, align 4
  %v0_151c8 = load i32, i32* @fp, align 4
  store i32 %v0_151c8, i32* @r6, align 4
  br label %dec_label_pc_151cc

dec_label_pc_151cc:                               ; preds = %dec_label_pc_15258, %dec_label_pc_15244, %dec_label_pc_151bc
  %v0_151d4 = phi i32 [ %v0_151c8, %dec_label_pc_151bc ], [ %v1_15244, %dec_label_pc_15244 ], [ %v0_151d4.pre.pre, %dec_label_pc_15258 ]
  %v0_151cc = load i32, i32* @r5, align 4
  %v1_151cc = add i32 %v0_151cc, 12
  store i32 %v1_151cc, i32* %r0.global-to-local, align 4
  %v1_151d0 = inttoptr i32 %v1_151cc to i32*
  %v2_151d0 = load i32, i32* %v1_151d0, align 4
  store i32 %v2_151d0, i32* %r0.global-to-local, align 4
  %v3_151d0 = add i32 %v0_151cc, 16
  %v4_151d0 = inttoptr i32 %v3_151d0 to i32*
  %v5_151d0 = load i32, i32* %v4_151d0, align 4
  %v2_151d4 = add i32 %v2_151d0, %v0_151d4
  store i32 %v2_151d4, i32* %r0.global-to-local, align 4
  %v2_151d8 = sub i32 %v5_151d0, %v0_151d4
  %v1_151dc = inttoptr i32 %v0_151cc to i32*
  %v2_151dc = load i32, i32* %v1_151dc, align 4
  store i32 %v2_151dc, i32* %r2.global-to-local, align 4
  %v3_151e0 = call i32 @function_15c00(i32 %v2_151d4, i32 %v2_151d8, i32 %v2_151dc)
  store i32 %v3_151e0, i32* %r0.global-to-local, align 4
  store i32 %v3_151e0, i32* %r4.global-to-local, align 4
  %v2_151e4 = icmp eq i32 %v3_151e0, 0
  store i1 %v2_151e4, i1* %cpsr_z.global-to-local, align 1
  %v0_151ec = load i32, i32* @r5, align 4
  %v1_151ec = add i32 %v0_151ec, 12
  br i1 %v2_151e4, label %dec_label_pc_151ec, label %dec_label_pc_15204

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151cc
  store i32 %v1_151ec, i32* %r0.global-to-local, align 4
  %v1_151f0 = inttoptr i32 %v1_151ec to i32*
  %v2_151f0 = load i32, i32* %v1_151f0, align 4
  store i32 %v2_151f0, i32* %r0.global-to-local, align 4
  %v3_151f0 = add i32 %v0_151ec, 16
  %v4_151f0 = inttoptr i32 %v3_151f0 to i32*
  %v5_151f0 = load i32, i32* %v4_151f0, align 4
  store i32 %v5_151f0, i32* @r2, align 4
  %v2_151f8 = inttoptr i32 %v2_151f0 to i8*
  %v3_151f8 = call i32 @function_120d0(i8* %v2_151f8, i32 0)
  store i32 %v3_151f8, i32* %r0.global-to-local, align 4
  %v0_151fc = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1541c

dec_label_pc_15204:                               ; preds = %dec_label_pc_151cc
  %v2_15204 = inttoptr i32 %v1_151ec to i32*
  %v3_15204 = load i32, i32* %v2_15204, align 4
  store i32 %v3_15204, i32* @r4, align 4
  %v1_15208 = load i32, i32* @r6, align 4
  %v2_15208 = add i32 %v1_15208, %v3_15204
  store i32 %v2_15208, i32* %r0.global-to-local, align 4
  %v1_1520c = call i32 @function_166b0(i32 %v2_15208)
  %v0_15214 = load i32, i32* @r6, align 4
  %v2_15214 = add i32 %v0_15214, %v1_1520c
  store i32 %v2_15214, i32* @r6, align 4
  %v0_15218 = load i32, i32* @r4, align 4
  store i32 %v0_15218, i32* @r0, align 4
  %v2_1521c = call i32 @function_168fc(i32 %v0_15218, i32 10)
  store i32 %v2_1521c, i32* %r0.global-to-local, align 4
  %v2_15220 = icmp eq i32 %v2_1521c, 0
  store i1 %v2_15220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15220, label %dec_label_pc_1524c, label %dec_label_pc_15228

dec_label_pc_15228:                               ; preds = %dec_label_pc_15204
  %v1_15228 = inttoptr i32 %v2_1521c to i8*
  %v2_15228 = load i8, i8* %v1_15228, align 1
  %v3_15228 = zext i8 %v2_15228 to i32
  %v1_1522c = add nuw nsw i32 %v3_15228, 255
  %v1_15230 = urem i32 %v1_1522c, 256
  store i32 %v1_15230, i32* %r3.global-to-local, align 4
  %v7_15234 = icmp eq i32 %v1_15230, 92
  store i1 %v7_15234, i1* %cpsr_z.global-to-local, align 1
  %v1_15238 = trunc i32 %v1_1522c to i8
  store i8 %v1_15238, i8* %v1_15228, align 1
  %v0_1523c = load i32, i32* @r6, align 4
  %v1_1523c = add i32 %v0_1523c, -1
  store i32 %v1_1523c, i32* @r6, align 4
  %v0_15240 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15240, label %dec_label_pc_15244, label %dec_label_pc_152d0

dec_label_pc_15244:                               ; preds = %dec_label_pc_15228
  %v1_15244 = add i32 %v0_1523c, -2
  store i32 %v1_15244, i32* @r6, align 4
  br label %dec_label_pc_151cc

dec_label_pc_1524c:                               ; preds = %dec_label_pc_15204
  %v0_1524c = load i32, i32* @r5, align 4
  %v1_1524c = add i32 %v0_1524c, 20
  %v2_1524c = inttoptr i32 %v1_1524c to i32*
  %v3_1524c = load i32, i32* %v2_1524c, align 4
  store i32 %v3_1524c, i32* %r3.global-to-local, align 4
  %v2_15250 = icmp eq i32 %v3_1524c, 0
  store i1 %v2_15250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15250, label %dec_label_pc_15288, label %dec_label_pc_15258

dec_label_pc_15258:                               ; preds = %dec_label_pc_1524c
  %v1_15258 = add i32 %v0_1524c, 16
  %v2_15258 = inttoptr i32 %v1_15258 to i32*
  %v3_15258 = load i32, i32* %v2_15258, align 4
  store i32 %v3_15258, i32* %r3.global-to-local, align 4
  %v1_1525c = add i32 %v0_1524c, 8
  %v2_1525c = inttoptr i32 %v1_1525c to i32*
  %v3_1525c = load i32, i32* %v2_1525c, align 4
  %v1_15260 = add i32 %v3_15258, 4096
  store i32 %v1_15260, i32* %r3.global-to-local, align 4
  %v2_15264 = add i32 %v3_1525c, %v1_15260
  store i32 %v1_15260, i32* %v2_15258, align 4
  %v0_1526c = load i32, i32* @r5, align 4
  %v1_1526c = add i32 %v0_1526c, 4
  %v2_1526c = inttoptr i32 %v1_1526c to i32*
  %v3_1526c = load i32, i32* %v2_1526c, align 4
  store i32 %v3_1526c, i32* %r0.global-to-local, align 4
  %v4_15270 = inttoptr i32 %v3_1526c to i32*
  %v5_15270 = call i32 @function_13100(i32* %v4_15270, i32 %v2_15264, i32 %v2_151dc, i32 %v1_15260)
  store i32 %v5_15270, i32* %r0.global-to-local, align 4
  %v0_15274 = load i32, i32* @r5, align 4
  %v1_15274 = add i32 %v0_15274, 8
  %v2_15274 = inttoptr i32 %v1_15274 to i32*
  %v3_15274 = load i32, i32* %v2_15274, align 4
  %v2_15278 = add i32 %v3_15274, %v5_15270
  store i32 %v2_15278, i32* %r3.global-to-local, align 4
  %v2_1527c = add i32 %v0_15274, 12
  %v3_1527c = inttoptr i32 %v2_1527c to i32*
  store i32 %v2_15278, i32* %v3_1527c, align 4
  %v1_15280 = load i32, i32* @r5, align 4
  %v2_15280 = add i32 %v1_15280, 4
  %v3_15280 = inttoptr i32 %v2_15280 to i32*
  store i32 %v5_15270, i32* %v3_15280, align 4
  %v0_151d4.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_151cc

dec_label_pc_15288:                               ; preds = %dec_label_pc_1524c, %.dec_label_pc_15288_crit_edge
  %v0_15288 = phi i32 [ %v0_15288.pre, %.dec_label_pc_15288_crit_edge ], [ %v0_1524c, %dec_label_pc_1524c ]
  %v1_15288 = inttoptr i32 %v0_15288 to i32*
  %v2_15288 = load i32, i32* %v1_15288, align 4
  %v1_1528c = add i32 %v2_15288, 52
  %v2_1528c = inttoptr i32 %v1_1528c to i32*
  %v3_1528c = load i32, i32* %v2_1528c, align 4
  store i32 %v3_1528c, i32* %r3.global-to-local, align 4
  %v2_15290 = icmp eq i32 %v3_1528c, 0
  store i1 %v2_15290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15290, label %dec_label_pc_152bc, label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_15288
  %v1_15298 = add i32 %v2_15288, 16
  %v2_15298 = inttoptr i32 %v1_15298 to i32*
  %v3_15298 = load i32, i32* %v2_15298, align 4
  store i32 %v3_15298, i32* %r2.global-to-local, align 4
  %v1_1529c = add i32 %v2_15288, 24
  %v2_1529c = inttoptr i32 %v1_1529c to i32*
  %v3_1529c = load i32, i32* %v2_1529c, align 4
  store i32 %v3_1529c, i32* %r3.global-to-local, align 4
  %v3_152a0 = icmp ult i32 %v3_15298, %v3_1529c
  %v9_152a0 = icmp eq i32 %v3_15298, %v3_1529c
  store i1 %v9_152a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_152a0, label %dec_label_pc_152c4thread-pre-split, label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %dec_label_pc_15298
  store i32 %v2_15288, i32* %r0.global-to-local, align 4
  %v1_152b4 = inttoptr i32 %v2_15288 to i16*
  %v2_152b4 = call i32 @function_16050(i16* %v1_152b4)
  store i32 %v2_152b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152bc:                               ; preds = %dec_label_pc_15288
  store i32 %v2_15288, i32* %r0.global-to-local, align 4
  %v1_152c0 = call i32 @function_15b24(i32 %v2_15288)
  store i32 %v1_152c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152c4thread-pre-split:               ; preds = %dec_label_pc_15298
  %v2_152a4 = inttoptr i32 %v3_15298 to i8*
  %v3_152a4 = load i8, i8* %v2_152a4, align 1
  %v4_152a4 = zext i8 %v3_152a4 to i32
  store i32 %v4_152a4, i32* %r0.global-to-local, align 4
  %v6_152a4 = add i32 %v3_15298, 1
  store i32 %v6_152a4, i32* %r2.global-to-local, align 4
  store i32 %v6_152a4, i32* %v2_15298, align 4
  %v0_152c4.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_152c4

dec_label_pc_152c4:                               ; preds = %dec_label_pc_152c4thread-pre-split, %dec_label_pc_152b0, %dec_label_pc_152bc
  %v1_152c8 = phi i32 [ %v0_152c4.pr, %dec_label_pc_152c4thread-pre-split ], [ %v2_152b4, %dec_label_pc_152b0 ], [ %v1_152c0, %dec_label_pc_152bc ]
  %v7_152c4 = icmp eq i32 %v1_152c8, 10
  store i1 %v7_152c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_152c4, label %dec_label_pc_152d0.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_152c4
  %v8_152c8 = icmp eq i32 %v1_152c8, -1
  store i1 %v8_152c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_152c8, label %dec_label_pc_152d0.loopexit, label %.dec_label_pc_15288_crit_edge

.dec_label_pc_15288_crit_edge:                    ; preds = %bb68
  %v0_15288.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15288

dec_label_pc_152d0.loopexit:                      ; preds = %bb68, %dec_label_pc_152c4
  %v0_152d0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_152d0

dec_label_pc_152d0:                               ; preds = %dec_label_pc_15228, %dec_label_pc_152d0.loopexit
  %v0_152d0 = phi i32 [ %v0_152d0.pre, %dec_label_pc_152d0.loopexit ], [ %v1_1523c, %dec_label_pc_15228 ]
  %v7_152d0 = icmp eq i32 %v0_152d0, -1
  store i1 %v7_152d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_152d0, label %dec_label_pc_15418, label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152d0
  %v0_152d8 = load i32, i32* @r5, align 4
  %v1_152d8 = add i32 %v0_152d8, 4
  %v2_152d8 = inttoptr i32 %v1_152d8 to i32*
  %v3_152d8 = load i32, i32* %v2_152d8, align 4
  store i32 %v3_152d8, i32* %r0.global-to-local, align 4
  store i32 %v3_1512c, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_152d8, i32* %v2_152e4, align 4
  %v0_152e8 = load i32, i32* @fp, align 4
  %v2_152ec = inttoptr i32 %v3_152d8 to i8*
  %v3_152ec = call i32 @function_120d0(i8* %v2_152ec, i32 %v0_152e8)
  store i32 %v3_152ec, i32* %r0.global-to-local, align 4
  store i32 %v1_15140, i32* %r2.global-to-local, align 4
  store i1 %v2_152f4, i1* %cpsr_z.global-to-local, align 1
  %v0_152f8 = load i32, i32* @r5, align 4
  %v1_152f8 = add i32 %v0_152f8, 12
  %v2_152f8 = inttoptr i32 %v1_152f8 to i32*
  %v3_152f8 = load i32, i32* %v2_152f8, align 4
  store i32 %v3_152f8, i32* @r4, align 4
  br i1 %v2_152f4, label %dec_label_pc_15310, label %dec_label_pc_15300

dec_label_pc_15300:                               ; preds = %dec_label_pc_152d8
  store i32 %v3_152f8, i32* @r0, align 4
  %v0_15304 = load i32, i32* @sl, align 4
  %v2_15308 = inttoptr i32 %v3_152f8 to i8*
  %v3_15308 = call i32 @function_16774(i8* %v2_15308, i32 %v0_15304)
  store i32 %v3_15308, i32* %r0.global-to-local, align 4
  %v0_1530c = load i32, i32* @r4, align 4
  %v2_1530c = add i32 %v0_1530c, %v3_15308
  store i32 %v2_1530c, i32* @r4, align 4
  br label %dec_label_pc_15310

dec_label_pc_15310:                               ; preds = %dec_label_pc_152d8, %dec_label_pc_15300
  %v0_153e813 = phi i32 [ %v3_152f8, %dec_label_pc_152d8 ], [ %v2_1530c, %dec_label_pc_15300 ]
  %v1_15310 = inttoptr i32 %v0_153e813 to i8*
  %v2_15310 = load i8, i8* %v1_15310, align 1
  %v3_15310 = zext i8 %v2_15310 to i32
  store i32 %v3_15310, i32* %r2.global-to-local, align 4
  %v2_15314 = icmp eq i8 %v2_15310, 0
  store i1 %v2_15314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15314, label %dec_label_pc_15168.backedge, label %dec_label_pc_1531c

dec_label_pc_15168.backedge:                      ; preds = %dec_label_pc_15310, %dec_label_pc_15410, %dec_label_pc_1531c
  %v0_15168.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15168

dec_label_pc_1531c:                               ; preds = %dec_label_pc_15310
  %v0_1531c = load i32, i32* @r7, align 4
  %v1_1531c = inttoptr i32 %v0_1531c to i8*
  %v2_1531c = load i8, i8* %v1_1531c, align 1
  %v3_1531c = zext i8 %v2_1531c to i32
  store i32 %v3_1531c, i32* %r3.global-to-local, align 4
  %v9_15320 = icmp eq i8 %v2_1531c, %v2_15310
  store i1 %v9_15320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15320, label %dec_label_pc_15168.backedge, label %dec_label_pc_153e8.preheader

dec_label_pc_153e8.preheader:                     ; preds = %dec_label_pc_1531c
  %v1_15324 = load i32, i32* @fp, align 4
  store i32 %v1_15324, i32* @r6, align 4
  %v2_153e815 = load i8, i8* %v1_15310, align 1
  %v3_153e816 = zext i8 %v2_153e815 to i32
  store i32 %v3_153e816, i32* %r2.global-to-local, align 4
  %v2_153ec17 = icmp eq i8 %v2_153e815, 0
  store i1 %v2_153ec17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_153ec17, label %dec_label_pc_15404, label %dec_label_pc_153f4.preheader

dec_label_pc_153f4.preheader:                     ; preds = %dec_label_pc_153e8.preheader
  %v2_153f482 = load i8, i8* %v1_1531c, align 1
  %v3_153f483 = zext i8 %v2_153f482 to i32
  store i32 %v3_153f483, i32* %r3.global-to-local, align 4
  %v9_153f886 = icmp eq i8 %v2_153f482, %v2_153e815
  store i1 %v9_153f886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_153f886, label %dec_label_pc_15404, label %bb74

dec_label_pc_15330:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15334 = load i32, i32* %v2_152e4, align 4
  store i32 %v2_15334, i32* %r3.global-to-local, align 4
  store i32 %v1_15144, i32* %r2.global-to-local, align 4
  %v9_1533c = icmp eq i32 %v2_1534088, %v1_15144
  store i1 %v9_1533c, i1* %cpsr_z.global-to-local, align 1
  %v5_15340 = mul i32 %v2_1534088, 4
  %v6_15340 = add i32 %v2_15334, %v5_15340
  %v7_15340 = inttoptr i32 %v6_15340 to i32*
  store i32 %v0_1534087, i32* %v7_15340, align 4
  br i1 %v9_1533c, label %dec_label_pc_15348, label %dec_label_pc_15354

dec_label_pc_15348:                               ; preds = %dec_label_pc_15330
  store i32 %v1_15150, i32* %r3.global-to-local, align 4
  store i1 %v2_1534c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1534c, label %dec_label_pc_15354, label %dec_label_pc_15374

dec_label_pc_15354:                               ; preds = %dec_label_pc_15348, %dec_label_pc_15330
  %v0_15354 = load i32, i32* @r7, align 4
  %v1_15354 = inttoptr i32 %v0_15354 to i8*
  %v2_15354 = load i8, i8* %v1_15354, align 1
  %v3_15354 = zext i8 %v2_15354 to i32
  store i32 %v3_15354, i32* %r3.global-to-local, align 4
  %v2_15358 = icmp eq i8 %v2_15354, 0
  store i1 %v2_15358, i1* %cpsr_z.global-to-local, align 1
  %v0_1535c = load i32, i32* @r4, align 4
  store i32 %v0_1535c, i32* @r0, align 4
  %v1_15360 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15358, i32 %v1_15360, i32 %v0_15354
  store i32 %storemerge, i32* @r1, align 4
  %v0_15368 = call i32 @function_16730()
  store i32 %v0_15368, i32* %r0.global-to-local, align 4
  %v0_1536c = load i32, i32* @r4, align 4
  %v2_1536c = add i32 %v0_1536c, %v0_15368
  store i32 %v2_1536c, i32* @r4, align 4
  br label %dec_label_pc_153ac

dec_label_pc_15374:                               ; preds = %dec_label_pc_15348
  %v0_15374 = load i32, i32* @r4, align 4
  store i32 %v0_15374, i32* @r0, align 4
  %v0_15378 = load i32, i32* @r7, align 4
  %v1_15378 = inttoptr i32 %v0_15378 to i8*
  %v2_15378 = load i8, i8* %v1_15378, align 1
  %v3_15378 = zext i8 %v2_15378 to i32
  %v5_1537c = call i32 @function_16810(i32 %v0_15374, i32 %v3_15378, i32 %v1_15144, i32 %v1_15150)
  store i32 %v5_1537c, i32* %r0.global-to-local, align 4
  store i32 %v1_15140, i32* %r2.global-to-local, align 4
  store i1 %v2_152f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_1537c, i32* @r4, align 4
  br i1 %v2_152f4, label %dec_label_pc_153ac, label %dec_label_pc_15398

dec_label_pc_15394:                               ; preds = %dec_label_pc_15398
  %v1_15394 = add i32 %v0_153ac.pre, -1
  store i32 %v1_15394, i32* @r4, align 4
  br label %dec_label_pc_15398

dec_label_pc_15398:                               ; preds = %dec_label_pc_15374, %dec_label_pc_15394
  %v0_15398 = phi i32 [ %v1_15394, %dec_label_pc_15394 ], [ %v5_1537c, %dec_label_pc_15374 ]
  %v1_15398 = add i32 %v0_15398, -1
  %v2_15398 = inttoptr i32 %v1_15398 to i8*
  %v3_15398 = load i8, i8* %v2_15398, align 1
  %v4_15398 = zext i8 %v3_15398 to i32
  %v0_1539c = load i32, i32* @sl, align 4
  store i32 %v0_1539c, i32* @r0, align 4
  %v2_153a0 = call i32 @function_168fc(i32 %v0_1539c, i32 %v4_15398)
  store i32 %v2_153a0, i32* %r0.global-to-local, align 4
  %v2_153a4 = icmp eq i32 %v2_153a0, 0
  store i1 %v2_153a4, i1* %cpsr_z.global-to-local, align 1
  %v0_153ac.pre = load i32, i32* @r4, align 4
  br i1 %v2_153a4, label %dec_label_pc_153ac, label %dec_label_pc_15394

dec_label_pc_153ac:                               ; preds = %dec_label_pc_15398, %dec_label_pc_15374, %dec_label_pc_15354
  %v3_153b8 = phi i32 [ %v5_1537c, %dec_label_pc_15374 ], [ %v2_1536c, %dec_label_pc_15354 ], [ %v0_153ac.pre, %dec_label_pc_15398 ]
  %v1_153ac = inttoptr i32 %v3_153b8 to i8*
  %v2_153ac = load i8, i8* %v1_153ac, align 1
  %v3_153ac = zext i8 %v2_153ac to i32
  store i32 %v3_153ac, i32* %r2.global-to-local, align 4
  %v0_153b0 = load i32, i32* @r7, align 4
  %v1_153b0 = inttoptr i32 %v0_153b0 to i8*
  %v2_153b0 = load i8, i8* %v1_153b0, align 1
  %v3_153b0 = zext i8 %v2_153b0 to i32
  store i32 %v3_153b0, i32* %r3.global-to-local, align 4
  %v9_153b4 = icmp eq i8 %v2_153b0, %v2_153ac
  store i1 %v9_153b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_153b4, label %bb71, label %dec_label_pc_153c0

bb71:                                             ; preds = %dec_label_pc_153ac
  %v1_153b8 = load i32, i32* @fp, align 4
  %v2_153b8 = trunc i32 %v1_153b8 to i8
  store i8 %v2_153b8, i8* %v1_153ac, align 1
  %v0_153bc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_153bc.pr, label %bb73, label %.dec_label_pc_153c0_crit_edge

.dec_label_pc_153c0_crit_edge:                    ; preds = %bb71
  %v0_153c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_153c0

dec_label_pc_153c0:                               ; preds = %.dec_label_pc_153c0_crit_edge, %dec_label_pc_153ac
  %v0_153c0 = phi i32 [ %v0_153c0.pre, %.dec_label_pc_153c0_crit_edge ], [ %v3_153ac, %dec_label_pc_153ac ]
  %v2_153c0 = icmp eq i32 %v0_153c0, 0
  store i1 %v2_153c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_153c0, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_153c0
  %v1_153c4 = load i32, i32* @fp, align 4
  %v2_153c4 = trunc i32 %v1_153c4 to i8
  %v3_153c4 = load i32, i32* @r4, align 4
  %v4_153c4 = inttoptr i32 %v3_153c4 to i8*
  store i8 %v2_153c4, i8* %v4_153c4, align 1
  %v5_153c4 = load i32, i32* @r4, align 4
  %v6_153c4 = add i32 %v5_153c4, 1
  store i32 %v6_153c4, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_153c0, %bb72
  %v2_153c8 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_153c8, i32* %r3.global-to-local, align 4
  %v2_153cc = icmp eq i32 %v2_153c8, 0
  store i1 %v2_153cc, i1* %cpsr_z.global-to-local, align 1
  %v0_153e8.pre = load i32, i32* @r4, align 4
  br i1 %v2_153cc, label %dec_label_pc_153e4, label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %bb73
  store i32 %v0_153e8.pre, i32* @r0, align 4
  %v0_153d8 = load i32, i32* @sl, align 4
  %v2_153dc = inttoptr i32 %v0_153e8.pre to i8*
  %v3_153dc = call i32 @function_16774(i8* %v2_153dc, i32 %v0_153d8)
  store i32 %v3_153dc, i32* %r0.global-to-local, align 4
  %v0_153e0 = load i32, i32* @r4, align 4
  %v2_153e0 = add i32 %v0_153e0, %v3_153dc
  store i32 %v2_153e0, i32* @r4, align 4
  br label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %bb73, %dec_label_pc_153d4
  %v0_153e8 = phi i32 [ %v2_153e0, %dec_label_pc_153d4 ], [ %v0_153e8.pre, %bb73 ]
  %v0_153e4 = load i32, i32* @r6, align 4
  %v1_153e4 = add i32 %v0_153e4, 1
  store i32 %v1_153e4, i32* @r6, align 4
  %v1_153e8 = inttoptr i32 %v0_153e8 to i8*
  %v2_153e8 = load i8, i8* %v1_153e8, align 1
  %v3_153e8 = zext i8 %v2_153e8 to i32
  store i32 %v3_153e8, i32* %r2.global-to-local, align 4
  %v2_153ec = icmp eq i8 %v2_153e8, 0
  store i1 %v2_153ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_153ec, label %dec_label_pc_15404, label %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge

dec_label_pc_153e4.dec_label_pc_153f4_crit_edge:  ; preds = %dec_label_pc_153e4
  %v0_153f4.pre = load i32, i32* @r7, align 4
  %v1_153f4 = inttoptr i32 %v0_153f4.pre to i8*
  %v2_153f4 = load i8, i8* %v1_153f4, align 1
  %v3_153f4 = zext i8 %v2_153f4 to i32
  store i32 %v3_153f4, i32* %r3.global-to-local, align 4
  %v9_153f8 = icmp eq i8 %v2_153f4, %v2_153e8
  store i1 %v9_153f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_153f8, label %dec_label_pc_15404, label %bb74

bb74:                                             ; preds = %dec_label_pc_153f4.preheader, %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge
  %v2_1534088 = phi i32 [ %v1_153e4, %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge ], [ %v1_15324, %dec_label_pc_153f4.preheader ]
  %v0_1534087 = phi i32 [ %v0_153e8, %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge ], [ %v0_153e813, %dec_label_pc_153f4.preheader ]
  %v2_153fc = load i32, i32* @sb, align 4
  %v3_153fc = sub i32 %v2_1534088, %v2_153fc
  %v5_153fc = xor i32 %v2_153fc, %v2_1534088
  %v6_153fc = xor i32 %v3_153fc, %v2_1534088
  %v7_153fc = and i32 %v6_153fc, %v5_153fc
  %v8_153fc = icmp slt i32 %v7_153fc, 0
  %v9_153fc = icmp slt i32 %v3_153fc, 0
  %v10_153fc = icmp eq i32 %v2_1534088, %v2_153fc
  store i1 %v10_153fc, i1* %cpsr_z.global-to-local, align 1
  %v2_15400 = xor i1 %v9_153fc, %v8_153fc
  br i1 %v2_15400, label %dec_label_pc_15330, label %dec_label_pc_15404

dec_label_pc_15404:                               ; preds = %dec_label_pc_153f4.preheader, %bb74, %dec_label_pc_153e4, %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge, %dec_label_pc_153e8.preheader
  %v0_15408 = phi i32 [ %v1_15324, %dec_label_pc_153e8.preheader ], [ %v1_15324, %dec_label_pc_153f4.preheader ], [ %v2_1534088, %bb74 ], [ %v1_153e4, %dec_label_pc_153e4 ], [ %v1_153e4, %dec_label_pc_153e4.dec_label_pc_153f4_crit_edge ]
  store i32 %v3_15128, i32* %r2.global-to-local, align 4
  %v9_15408 = icmp eq i32 %v0_15408, %v3_15128
  store i1 %v9_15408, i1* %cpsr_z.global-to-local, align 1
  %v6_1540c = icmp slt i32 %v0_15408, %v3_15128
  br i1 %v6_1540c, label %dec_label_pc_15410, label %dec_label_pc_1541c

dec_label_pc_15410:                               ; preds = %dec_label_pc_15404
  %v0_15410 = load i32, i32* @r8, align 4
  %v1_15410 = and i32 %v0_15410, 1048576
  %v2_15410 = icmp eq i32 %v1_15410, 0
  store i1 %v2_15410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15410, label %dec_label_pc_15168.backedge, label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %dec_label_pc_15410, %dec_label_pc_152d0, %.thread, %dec_label_pc_15104
  br label %dec_label_pc_1541c

dec_label_pc_1541c:                               ; preds = %dec_label_pc_15404, %dec_label_pc_151ec, %dec_label_pc_15418
  %v0_1541c = phi i32 [ %v0_151fc, %dec_label_pc_151ec ], [ 0, %dec_label_pc_15418 ], [ %v0_15408, %dec_label_pc_15404 ]
  store i32 %v0_1541c, i32* %r0.global-to-local, align 4
  store i32 %v3_15104, i32* @r4, align 4
  store i32 %v6_15104, i32* @r5, align 4
  store i32 %v9_15104, i32* @r6, align 4
  store i32 %v12_15104, i32* @r7, align 4
  store i32 %v15_15104, i32* @r8, align 4
  store i32 %v18_15104, i32* @sb, align 4
  store i32 %v21_15104, i32* @sl, align 4
  store i32 %v24_15104, i32* @fp, align 4
  ret i32 %v0_1541c

; uselistorder directives
  uselistorder i32 %v0_1541c, { 1, 0 }
  uselistorder i32 %v0_15408, { 0, 2, 1 }
  uselistorder i32 %v3_153fc, { 1, 0 }
  uselistorder i32 %v2_153fc, { 1, 0, 2 }
  uselistorder i32 %v2_1534088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_153f8, { 1, 0 }
  uselistorder i32 %v0_153e8.pre, { 0, 2, 1 }
  uselistorder i32 %v5_1537c, { 1, 0, 2, 3 }
  uselistorder i1 %v9_153f886, { 1, 0 }
  uselistorder i1 %v9_15320, { 1, 0 }
  uselistorder i32 %v3_152f8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_152d0, { 1, 0 }
  uselistorder i1 %v8_152c8, { 1, 0 }
  uselistorder i32 %v3_15298, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_15288, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v5_15270, { 1, 0, 2 }
  uselistorder i32 %v1_15260, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1524c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15244, { 1, 0 }
  uselistorder i32 %v1_15230, { 1, 0 }
  uselistorder i32 %v1_1522c, { 1, 0 }
  uselistorder i32 %v1_151ec, { 2, 0, 1 }
  uselistorder i32 %v0_151d4, { 1, 0 }
  uselistorder i32 %v1_151c4, { 0, 2, 1 }
  uselistorder i1 %v2_152f4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15150, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15144, { 2, 1, 0 }
  uselistorder i32 %v3_1512c, { 1, 0 }
  uselistorder i32 %v3_15128, { 2, 1, 0 }
  uselistorder i32 %v1_15120, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 22, 23, 24, 5, 4, 7, 8, 25, 6, 26, 9, 11, 10, 12, 13, 16, 14, 15, 27, 17, 18, 19, 21, 20, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 92, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 (i32)* @function_166b0, { 1, 0 }
  uselistorder i32* @sl, { 4, 5, 6, 7, 8, 9, 10, 51, 0, 52, 53, 11, 12, 128, 129, 130, 131, 132, 133, 138, 139, 140, 1, 141, 142, 143, 144, 145, 146, 148, 2, 147, 150, 149, 151, 152, 153, 154, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 13, 14, 15, 16, 17, 18, 36, 37, 32, 33, 34, 35, 44, 45, 46, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 123, 124, 126, 127, 155, 158, 156, 157, 159, 160, 135, 134, 3, 136, 137 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_1541c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15404, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_153e4, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15398, { 1, 0 }
  uselistorder label %dec_label_pc_15168.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15310, { 1, 0 }
  uselistorder label %dec_label_pc_152d0, { 1, 0 }
  uselistorder label %dec_label_pc_152c4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15288, { 1, 0 }
  uselistorder label %dec_label_pc_151bc, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_1542c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1542c:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15430 = icmp eq i32* %arg1, null
  br i1 %v2_15430, label %dec_label_pc_15458, label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_1542c
  %v2_15438 = load i32, i32* %arg1, align 4
  %v1_1543c = inttoptr i32 %v2_15438 to i16*
  %v2_1543c = call i32 @function_154a8(i16* %v1_1543c)
  %v0_15440 = load i32, i32* @r4, align 4
  %v1_15440 = add i32 %v0_15440, 20
  %v2_15440 = inttoptr i32 %v1_15440 to i32*
  %v3_15440 = load i32, i32* %v2_15440, align 4
  %v2_15444 = icmp eq i32 %v3_15440, 0
  br i1 %v2_15444, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15438
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15438, %bb
  store i32 87120, i32* @lr, align 4
  %v1_1544c = xor i1 %v2_15444, true
  call void @__pseudo_cond_branch(i1 %v1_1544c, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_15450 = load i32, i32* @r4, align 4
  store i32 %v0_15450, i32* @r0, align 4
  %v0_15454 = call i32 @function_13718()
  br label %dec_label_pc_15458

dec_label_pc_15458:                               ; preds = %dec_label_pc_1542c, %bb6
  %v1_1545c = phi i32 [ 0, %dec_label_pc_1542c ], [ %v0_15454, %bb6 ]
  ret i32 %v1_1545c

; uselistorder directives
  uselistorder i32* null, { 0, 4, 5, 1, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 19, 20, 21, 22, 23, 7, 24, 25, 26, 27, 28, 3, 29, 30, 31 }
  uselistorder label %dec_label_pc_15458, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_15460(i32 %arg1) local_unnamed_addr {
dec_label_pc_15460:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1546c = load i32, i32* @r4, align 4
  store i32 %v3_1546c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_17864.800 to i32), i32* @r1, align 4
  %v0_15474 = call i32 @function_1565c()
  store i32 %v0_15474, i32* %r0.global-to-local, align 4
  store i32 %v0_15474, i32* @r4, align 4
  %v2_15478 = icmp eq i32 %v0_15474, 0
  br i1 %v2_15478, label %bb, label %dec_label_pc_15484

bb:                                               ; preds = %dec_label_pc_15460
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15484:                               ; preds = %dec_label_pc_15460
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1548c = call i32 @function_12fcc(i32 1, i32 24)
  store i32 %v2_1548c, i32* %r0.global-to-local, align 4
  %v2_15490 = icmp eq i32 %v2_1548c, 0
  br i1 %v2_15490, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15484
  %v1_15494 = load i32, i32* @r4, align 4
  %v3_15494 = inttoptr i32 %v2_1548c to i32*
  store i32 %v1_15494, i32* %v3_15494, align 4
  %v1_1549c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15484, %bb4
  %v1_1549c = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15484 ], [ %v1_1549c.pre, %bb4 ]
  %v2_15498 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15498, i32* @r4, align 4
  ret i32 %v1_1549c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0, 4 }
  uselistorder i32 (i32, i32)* @function_12fcc, { 35, 32, 34, 33, 31, 30, 9, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 1, 0, 14, 13, 12, 11, 10, 5, 4, 3, 2, 8, 7, 6 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_154a8(i16* %arg1) local_unnamed_addr {
dec_label_pc_154a8:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_154a8 = load i32, i32* @r4, align 4
  store i32 %v3_154a8, i32* %stack_var_-36, align 4
  %v6_154a8 = load i32, i32* @r5, align 4
  %v9_154a8 = load i32, i32* @r6, align 4
  %v12_154a8 = load i32, i32* @r7, align 4
  %v2_154ac = add i32 %tmp, 52
  %v3_154ac = inttoptr i32 %v2_154ac to i32*
  %v4_154ac = load i32, i32* %v3_154ac, align 4
  %v1_154b4 = sub i32 1, %v4_154ac
  %v2_154b4 = icmp ult i32 %v4_154ac, 2
  br i1 %v2_154b4, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_154a8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_154a8, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_154b4, %dec_label_pc_154a8 ]
  %v0_154bc = phi i32 [ 0, %bb ], [ %v1_154b4, %dec_label_pc_154a8 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_154bc = icmp eq i32 %v0_154bc, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 98320, i32* @r6, align 4
  br i1 %v2_154bc, label %dec_label_pc_15508, label %dec_label_pc_154d0

dec_label_pc_154d0:                               ; preds = %bb18
  %v4_154e8 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_154e8)
  %v0_154fc = load i32, i32* @r6, align 4
  %v2_154fc = add i32 %v0_154fc, 16
  %v3_154fc = inttoptr i32 %v2_154fc to i32*
  %v4_154fc = load i32, i32* %v3_154fc, align 4
  call void @__pseudo_branch(i32 %v4_154fc)
  %v0_15508.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15508

dec_label_pc_15508:                               ; preds = %bb18, %dec_label_pc_154d0
  %v1_15510 = phi i32 [ %tmp, %bb18 ], [ %v0_15508.pre, %dec_label_pc_154d0 ]
  %v1_15508 = inttoptr i32 %v1_15510 to i16*
  %v2_15508 = load i16, i16* %v1_15508, align 2
  %v3_15508 = zext i16 %v2_15508 to i32
  %v1_1550c = and i32 %v3_15508, 64
  %v2_1550c = icmp eq i32 %v1_1550c, 0
  br i1 %v2_1550c, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_15508
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15508, %bb19
  %storemerge26 = phi i32 [ %v1_15510, %bb19 ], [ %v1_1550c, %dec_label_pc_15508 ]
  %v1_15514 = xor i1 %v2_1550c, true
  call void @__pseudo_cond_branch(i1 %v1_15514, i32 ptrtoint (i32* @global_var_15e44.805 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_1551c = load i32, i32* @r5, align 4
  %v1_1551c = add i32 %v0_1551c, 4
  %v2_1551c = inttoptr i32 %v1_1551c to i32*
  %v3_1551c = load i32, i32* %v2_1551c, align 4
  %v1_15520 = call i32 @function_11c54(i32 %v3_1551c)
  %v0_15528 = load i32, i32* @r6, align 4
  %v2_15534 = add i32 %v0_15528, 108
  %v3_15534 = inttoptr i32 %v2_15534 to i32*
  %v4_15534 = load i32, i32* %v3_15534, align 4
  store i32 %v4_15534, i32* @r7, align 4
  %v1_1553c = load i32, i32* @r5, align 4
  %v2_1553c = add i32 %v1_1553c, 4
  %v3_1553c = inttoptr i32 %v2_1553c to i32*
  store i32 -1, i32* %v3_1553c, align 4
  %v0_15544 = load i32, i32* @r6, align 4
  %v2_15544 = add i32 %v0_15544, 72
  %v3_15544 = inttoptr i32 %v2_15544 to i32*
  %v4_15544 = load i32, i32* %v3_15544, align 4
  %v1_1554c = icmp slt i32 %v1_15520, 0
  store i32 %v4_15544, i32* %stack_var_-80, align 4
  br i1 %v1_1554c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_15544)
  %v0_15574 = load i32, i32* @r6, align 4
  %v2_15574 = add i32 %v0_15574, 16
  %v3_15574 = inttoptr i32 %v2_15574 to i32*
  %v4_15574 = load i32, i32* %v3_15574, align 4
  call void @__pseudo_branch(i32 %v4_15574)
  %v0_15584 = load i32, i32* @r6, align 4
  %v2_15584 = add i32 %v0_15584, 12
  %v3_15584 = inttoptr i32 %v2_15584 to i32*
  %v4_15584 = load i32, i32* %v3_15584, align 4
  %v1_15588 = inttoptr i32 %v4_15584 to i32*
  %v2_15588 = load i32, i32* %v1_15588, align 4
  %v1_15590 = add i32 %v2_15588, 1
  %v2_15594 = add i32 %v0_15584, 24
  %v3_15594 = inttoptr i32 %v2_15594 to i32*
  %v4_15594 = load i32, i32* %v3_15594, align 4
  store i32 %v4_15594, i32* @r4, align 4
  store i32 %v1_15590, i32* %v1_15588, align 4
  call void @__pseudo_branch(i32 %v4_15594)
  %v0_155ac = load i32, i32* @r5, align 4
  %v1_155ac = inttoptr i32 %v0_155ac to i16*
  %v2_155ac = load i16, i16* %v1_155ac, align 2
  %v1_155b0 = and i16 %v2_155ac, 24576
  %v1_155b4 = or i16 %v1_155b0, 48
  %v0_155b8 = load i32, i32* %sb.global-to-local, align 4
  %v2_155b8 = icmp eq i32 %v0_155b8, 0
  store i16 %v1_155b4, i16* %v1_155ac, align 2
  br i1 %v2_155b8, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_155cc = xor i1 %v2_155b8, true
  call void @__pseudo_cond_branch(i1 %v2_155cc, i32 %v4_15594)
  %v0_155d0 = load i32, i32* @r5, align 4
  %v1_155d0 = inttoptr i32 %v0_155d0 to i16*
  %v2_155d0 = load i16, i16* %v1_155d0, align 2
  %v1_155d4 = and i16 %v2_155d0, 16384
  %v2_155d4 = icmp eq i16 %v1_155d4, 0
  br i1 %v2_155d4, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_155dc = xor i1 %v2_155d4, true
  call void @__pseudo_cond_branch(i1 %v1_155dc, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v2_155e8 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_155e8)
  call void @__pseudo_branch(i32 %v4_15574)
  %v0_15608 = load i32, i32* @r6, align 4
  %v2_15608 = add i32 %v0_15608, 48
  %v3_15608 = inttoptr i32 %v2_15608 to i32*
  %v4_15608 = load i32, i32* %v3_15608, align 4
  %v1_1560c = inttoptr i32 %v4_15608 to i32*
  %v2_1560c = load i32, i32* %v1_1560c, align 4
  %v1_15610 = add i32 %v2_1560c, 1
  store i32 %v1_15610, i32* %v1_1560c, align 4
  call void @__pseudo_branch(i32 %v4_15594)
  %v0_15628 = call i32 @function_15cbc()
  %v0_1562c = load i32, i32* %sl.global-to-local, align 4
  %v2_15634 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15634, i32* @r4, align 4
  store i32 %v6_154a8, i32* @r5, align 4
  store i32 %v9_154a8, i32* @r6, align 4
  store i32 %v12_154a8, i32* @r7, align 4
  ret i32 %v0_1562c

; uselistorder directives
  uselistorder i1 %v2_155d4, { 1, 0 }
  uselistorder i32 %v4_15594, { 0, 2, 1, 3 }
  uselistorder i32 %v4_154ac, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder i32 (i32)* @function_11c54, { 30, 25, 29, 28, 24, 27, 26, 23, 22, 21, 15, 20, 19, 18, 17, 16, 14, 13, 12, 11, 10, 9, 8, 1, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_15508, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_1563c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1563c:
  %v0_1563c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1563c, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_1563c
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1563c, %bb
  %v10_15658 = phi i32 [ %arg1, %dec_label_pc_1563c ], [ 0, %bb ]
  ret i32 %v10_15658

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_1565c() local_unnamed_addr {
dec_label_pc_1565c:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1566c = call i32 @function_1567c()
  ret i32 %v0_1566c
}

define i32 @function_1567c() local_unnamed_addr {
dec_label_pc_1567c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1567c = load i32, i32* @r4, align 4
  store i32 %v3_1567c, i32* %stack_var_-36, align 4
  %v6_1567c = load i32, i32* @r5, align 4
  %v9_1567c = load i32, i32* @r6, align 4
  %v18_1567c = load i32, i32* @sb, align 4
  %v24_1567c = load i32, i32* @fp, align 4
  %v0_15680 = load i32, i32* @r1, align 4
  %v1_15680 = inttoptr i32 %v0_15680 to i8*
  %v2_15680 = load i8, i8* %v1_15680, align 1
  %v3_15680 = zext i8 %v2_15680 to i32
  store i32 %v3_15680, i32* @ip, align 4
  %v7_15688 = icmp eq i8 %v2_15680, 114
  store i32 98320, i32* @fp, align 4
  %v2_15690 = ptrtoint i32* %stack_var_-72 to i32
  %v0_15694 = load i32, i32* @r0, align 4
  store i32 %v0_15694, i32* @r6, align 4
  %v0_15698 = load i32, i32* @r2, align 4
  store i32 %v0_15698, i32* @sb, align 4
  %v0_1569c = load i32, i32* @r3, align 4
  store i32 %v0_1569c, i32* @r5, align 4
  br i1 %v7_15688, label %dec_label_pc_156e8, label %dec_label_pc_156a4

dec_label_pc_156a4:                               ; preds = %dec_label_pc_1567c
  %v7_156a4 = icmp eq i8 %v2_15680, 119
  br i1 %v7_156a4, label %bb, label %dec_label_pc_156b0

bb:                                               ; preds = %dec_label_pc_156a4
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_156ec

dec_label_pc_156b0:                               ; preds = %dec_label_pc_156a4
  %v7_156b0 = icmp eq i8 %v2_15680, 97
  br i1 %v7_156b0, label %bb32, label %dec_label_pc_156bc

bb32:                                             ; preds = %dec_label_pc_156b0
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_156ec

dec_label_pc_156bc:                               ; preds = %dec_label_pc_156b0, %dec_label_pc_15770, %dec_label_pc_15744
  %v0_156bc = call i32 @function_1207c()
  store i32 %v0_156bc, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_156c4 = load i32, i32* @sb, align 4
  %v2_156c4 = icmp eq i32 %v0_156c4, 0
  %v2_156c8 = inttoptr i32 %v0_156bc to i32*
  store i32 22, i32* %v2_156c8, align 4
  br i1 %v2_156c4, label %dec_label_pc_1593c, label %dec_label_pc_156d0

dec_label_pc_156d0:                               ; preds = %dec_label_pc_15794._crit_edge, %dec_label_pc_156bc
  %v0_156d0 = load i32, i32* @sb, align 4
  %v1_156d0 = inttoptr i32 %v0_156d0 to i16*
  %v2_156d0 = load i16, i16* %v1_156d0, align 2
  %v3_156d0 = zext i16 %v2_156d0 to i32
  store i32 %v3_156d0, i32* %r3.global-to-local, align 4
  %v1_156d4 = and i32 %v3_156d0, 8192
  %v2_156d4 = icmp eq i32 %v1_156d4, 0
  br i1 %v2_156d4, label %dec_label_pc_1593c, label %dec_label_pc_156dc

dec_label_pc_156dc:                               ; preds = %dec_label_pc_156d0
  store i32 %v0_156d0, i32* @r0, align 4
  %v0_156e0 = call i32 @function_13718()
  store i32 %v0_156e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1593c

dec_label_pc_156e8:                               ; preds = %dec_label_pc_1567c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_156ec

dec_label_pc_156ec:                               ; preds = %bb, %bb32, %dec_label_pc_156e8
  %v1_15704 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_156e8 ]
  %v1_156ec = add i32 %v0_15680, 1
  %v2_156ec = inttoptr i32 %v1_156ec to i8*
  %v3_156ec = load i8, i8* %v2_156ec, align 1
  %v7_156f0 = icmp eq i8 %v3_156ec, 98
  %v1_156ec.v0_15680 = select i1 %v7_156f0, i32 %v1_156ec, i32 %v0_15680
  store i32 %v1_156ec.v0_15680, i32* %r3.global-to-local, align 4
  %v1_156fc = add i32 %v1_156ec.v0_15680, 1
  %v2_156fc = inttoptr i32 %v1_156fc to i8*
  %v3_156fc = load i8, i8* %v2_156fc, align 1
  %v4_156fc = zext i8 %v3_156fc to i32
  store i32 %v4_156fc, i32* @r3, align 4
  %v7_15700 = icmp eq i8 %v3_156fc, 43
  br i1 %v7_15700, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_156ec
  store i32 %v1_15704, i32* @r3, align 4
  %v2_15708 = add nuw nsw i32 %v1_15704, 1
  store i32 %v2_15708, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_156ec, %bb35
  %v2_1570c = icmp eq i32 %v0_15698, 0
  br i1 %v2_1570c, label %dec_label_pc_15714, label %dec_label_pc_1573c

dec_label_pc_15714:                               ; preds = %.thread3
  store i32 80, i32* @r0, align 4
  %v0_15718 = call i32 @function_126ac()
  store i32 %v0_15718, i32* %r0.global-to-local, align 4
  store i32 %v0_15718, i32* @sb, align 4
  %v3_1571c = icmp eq i32 %v0_15718, 0
  br i1 %v3_1571c, label %dec_label_pc_15940, label %dec_label_pc_15724

dec_label_pc_15724:                               ; preds = %dec_label_pc_15714
  %v2_15728 = add i32 %v0_15718, 8
  %v3_15728 = inttoptr i32 %v2_15728 to i32*
  store i32 0, i32* %v3_15728, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_15730 = load i32, i32* @sb, align 4
  %v3_15730 = inttoptr i32 %v2_15730 to i16*
  store i16 8192, i16* %v3_15730, align 2
  %v0_15734 = load i32, i32* @sb, align 4
  %v1_15734 = add i32 %v0_15734, 56
  store i32 %v1_15734, i32* @r0, align 4
  %v1_15738 = call i32 @function_159ec(i32 %v1_15734)
  store i32 %v1_15738, i32* %r0.global-to-local, align 4
  %v0_1573c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1573c

dec_label_pc_1573c:                               ; preds = %.thread3, %dec_label_pc_15724
  %v0_15794 = phi i32 [ %v0_1569c, %.thread3 ], [ %v0_1573c.pre, %dec_label_pc_15724 ]
  %v1_1573c = icmp slt i32 %v0_15794, 0
  br i1 %v1_1573c, label %dec_label_pc_15794, label %dec_label_pc_15744

dec_label_pc_15744:                               ; preds = %dec_label_pc_1573c
  %v0_15748 = load i32, i32* @r4, align 4
  %v2_15748 = and i32 %v0_15748, 131075
  %v1_1574c = add nuw nsw i32 %v2_15748, 1
  store i32 %v1_1574c, i32* %r2.global-to-local, align 4
  %v0_15750 = load i32, i32* @r6, align 4
  %v1_15750 = add i32 %v0_15750, 1
  %v2_15754 = and i32 %v1_15750, %v1_1574c
  store i32 %v2_15754, i32* %r3.global-to-local, align 4
  %v9_15758 = icmp eq i32 %v2_15754, %v1_1574c
  %v1_1575c = load i32, i32* @sb, align 4
  %v2_1575c = add i32 %v1_1575c, 4
  %v3_1575c = inttoptr i32 %v2_1575c to i32*
  store i32 %v0_15794, i32* %v3_1575c, align 4
  br i1 %v9_15758, label %dec_label_pc_15764, label %dec_label_pc_156bc

dec_label_pc_15764:                               ; preds = %dec_label_pc_15744
  %v0_15764 = load i32, i32* @r4, align 4
  %v1_15764 = load i32, i32* @r6, align 4
  %v2_15764 = sub i32 -1, %v1_15764
  %v3_15764 = and i32 %v0_15764, %v2_15764
  store i32 %v3_15764, i32* @r3, align 4
  %v1_15768 = and i32 %v3_15764, 1024
  %v2_15768 = icmp eq i32 %v1_15768, 0
  br i1 %v2_15768, label %dec_label_pc_15788, label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %dec_label_pc_15764
  %v0_15770 = load i32, i32* @r5, align 4
  store i32 %v0_15770, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_1577c = call i32 @function_11a88(i32 %v0_15770, i32 4)
  store i32 %v2_1577c, i32* %r0.global-to-local, align 4
  %v2_15780 = icmp eq i32 %v2_1577c, 0
  br i1 %v2_15780, label %dec_label_pc_15770.dec_label_pc_15788_crit_edge, label %dec_label_pc_156bc

dec_label_pc_15770.dec_label_pc_15788_crit_edge:  ; preds = %dec_label_pc_15770
  %v0_15788.pre = load i32, i32* @r6, align 4
  %v0_1578c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %dec_label_pc_15770.dec_label_pc_15788_crit_edge, %dec_label_pc_15764
  %v0_1578c = phi i32 [ %v0_1578c.pre, %dec_label_pc_15770.dec_label_pc_15788_crit_edge ], [ %v0_15764, %dec_label_pc_15764 ]
  %v0_15788 = phi i32 [ %v0_15788.pre, %dec_label_pc_15770.dec_label_pc_15788_crit_edge ], [ %v1_15764, %dec_label_pc_15764 ]
  %v1_15788 = and i32 %v0_15788, 131072
  store i32 %v1_15788, i32* %r3.global-to-local, align 4
  %v2_1578c = or i32 %v1_15788, %v0_1578c
  store i32 %v2_1578c, i32* @r4, align 4
  br label %dec_label_pc_157b8

dec_label_pc_15794:                               ; preds = %dec_label_pc_1573c
  %v7_15794 = icmp eq i32 %v0_15794, -1
  %v0_157a0.pre = load i32, i32* @r4, align 4
  br i1 %v7_15794, label %dec_label_pc_15794._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_15794
  %v2_15798 = or i32 %v0_157a0.pre, 131072
  store i32 %v2_15798, i32* @r4, align 4
  br label %dec_label_pc_15794._crit_edge

dec_label_pc_15794._crit_edge:                    ; preds = %dec_label_pc_15794, %bb36
  %v0_157a0 = phi i32 [ %v2_15798, %bb36 ], [ %v0_157a0.pre, %dec_label_pc_15794 ]
  %v0_1579c = load i32, i32* @r6, align 4
  store i32 %v0_1579c, i32* %r0.global-to-local, align 4
  store i32 %v0_157a0, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_157a8 = call i32 @function_11860(i32 %v0_1579c, i32 %v0_157a0)
  store i32 %v2_157a8, i32* %r0.global-to-local, align 4
  %v1_157ac = icmp slt i32 %v2_157a8, 0
  %v1_157b0 = load i32, i32* @sb, align 4
  %v2_157b0 = add i32 %v1_157b0, 4
  %v3_157b0 = inttoptr i32 %v2_157b0 to i32*
  store i32 %v2_157a8, i32* %v3_157b0, align 4
  br i1 %v1_157ac, label %dec_label_pc_156d0, label %.dec_label_pc_157b8_crit_edge

.dec_label_pc_157b8_crit_edge:                    ; preds = %dec_label_pc_15794._crit_edge
  %v0_157bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_157b8

dec_label_pc_157b8:                               ; preds = %.dec_label_pc_157b8_crit_edge, %dec_label_pc_15788
  %v0_157d4 = phi i32 [ %v0_157bc.pre, %.dec_label_pc_157b8_crit_edge ], [ %v2_1578c, %dec_label_pc_15788 ]
  %v0_157b8 = load i32, i32* @sb, align 4
  %v1_157b8 = inttoptr i32 %v0_157b8 to i16*
  %v2_157b8 = load i16, i16* %v1_157b8, align 2
  %v3_157b8 = zext i16 %v2_157b8 to i32
  %v1_157bc = urem i32 %v0_157d4, 4
  %v1_157c0 = and i32 %v0_157d4, 1024
  %v1_157c4 = and i32 %v3_157b8, 8192
  %v1_157c8 = add nuw nsw i32 %v1_157bc, 1
  %v2_157cc = or i32 %v1_157c4, %v1_157c0
  store i32 %v2_157cc, i32* %r3.global-to-local, align 4
  %v1_157d0 = xor i32 %v1_157c8, 3
  store i32 %v1_157d0, i32* %r1.global-to-local, align 4
  %v1_157d4 = and i32 %v0_157d4, 131072
  store i32 %v1_157d4, i32* %r2.global-to-local, align 4
  %v2_157d4 = icmp eq i32 %v1_157d4, 0
  %v1_157d8 = add i32 %v0_157b8, 4
  %v2_157d8 = inttoptr i32 %v1_157d8 to i32*
  %v3_157d8 = load i32, i32* %v2_157d8, align 4
  store i32 %v3_157d8, i32* @r5, align 4
  br i1 %v2_157d4, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_157b8
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_157b8, %bb37
  %v0_157e4 = phi i32 [ 0, %dec_label_pc_157b8 ], [ 32768, %bb37 ]
  %v4_157e0 = mul nuw nsw i32 %v1_157d0, 16
  %v5_157e0 = or i32 %v2_157cc, %v4_157e0
  store i32 %v5_157e0, i32* %r3.global-to-local, align 4
  %v2_157e4 = or i32 %v0_157e4, %v5_157e0
  store i32 %v2_157e4, i32* %r2.global-to-local, align 4
  %v8_157e8 = icmp eq i32 %v3_157d8, 2147483647
  %v1_157ec = trunc i32 %v2_157e4 to i16
  store i16 %v1_157ec, i16* %v1_157b8, align 2
  br i1 %v8_157e8, label %dec_label_pc_1581c, label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %bb38
  %v0_157f4 = call i32 @function_1207c()
  store i32 %v0_157f4, i32* @r4, align 4
  %v0_157fc = load i32, i32* @r5, align 4
  store i32 %v0_157fc, i32* @r0, align 4
  %v1_15800 = inttoptr i32 %v0_157f4 to i32*
  %v2_15800 = load i32, i32* %v1_15800, align 4
  store i32 %v2_15800, i32* @r5, align 4
  %v1_15804 = call i32 @function_169ec(i32 %v0_157fc)
  store i32 %v1_15804, i32* %r0.global-to-local, align 4
  %v2_15808 = icmp eq i32 %v1_15804, 0
  br i1 %v2_15808, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_157f4
  %v1_1580c = load i32, i32* @sb, align 4
  %v2_1580c = inttoptr i32 %v1_1580c to i16*
  %v3_1580c = load i16, i16* %v2_1580c, align 2
  %v4_1580c = zext i16 %v3_1580c to i32
  %v2_15810 = or i32 %v4_1580c, 256
  store i32 %v2_15810, i32* %r3.global-to-local, align 4
  %v2_15814 = trunc i32 %v2_15810 to i16
  store i16 %v2_15814, i16* %v2_1580c, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_157f4, %bb39
  %v0_15818 = load i32, i32* @r5, align 4
  %v1_15818 = load i32, i32* @r4, align 4
  %v2_15818 = inttoptr i32 %v1_15818 to i32*
  store i32 %v0_15818, i32* %v2_15818, align 4
  br label %dec_label_pc_1581c

dec_label_pc_1581c:                               ; preds = %bb38, %.thread5
  %v0_1581c = load i32, i32* @sb, align 4
  %v1_1581c = add i32 %v0_1581c, 8
  %v2_1581c = inttoptr i32 %v1_1581c to i32*
  %v3_1581c = load i32, i32* %v2_1581c, align 4
  store i32 %v3_1581c, i32* %r3.global-to-local, align 4
  %v2_15820 = icmp eq i32 %v3_1581c, 0
  br i1 %v2_15820, label %dec_label_pc_15828, label %bb40

dec_label_pc_15828:                               ; preds = %dec_label_pc_1581c
  store i32 4096, i32* @r0, align 4
  %v0_1582c = call i32 @function_126ac()
  store i32 %v0_1582c, i32* %r0.global-to-local, align 4
  %v2_15830 = icmp eq i32 %v0_1582c, 0
  %v1_15840.pre = load i32, i32* @sb, align 4
  br i1 %v2_15830, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15828
  %v2_15834 = inttoptr i32 %v1_15840.pre to i16*
  %v3_15834 = load i16, i16* %v2_15834, align 2
  %v4_15834 = zext i16 %v3_15834 to i32
  %v2_15838 = add i32 %v0_1582c, 4096
  store i32 %v2_15838, i32* %r2.global-to-local, align 4
  %v2_1583c = or i32 %v4_15834, 16384
  store i32 %v2_1583c, i32* %r3.global-to-local, align 4
  %v2_15840 = add i32 %v1_15840.pre, 8
  %v3_15840 = inttoptr i32 %v2_15840 to i32*
  store i32 %v0_1582c, i32* %v3_15840, align 4
  %v1_15844 = load i32, i32* %r2.global-to-local, align 4
  %v2_15844 = load i32, i32* @sb, align 4
  %v3_15844 = add i32 %v2_15844, 12
  %v4_15844 = inttoptr i32 %v3_15844 to i32*
  store i32 %v1_15844, i32* %v4_15844, align 4
  %v1_15848 = load i32, i32* %r3.global-to-local, align 4
  %v2_15848 = trunc i32 %v1_15848 to i16
  %v3_15848 = load i32, i32* @sb, align 4
  %v4_15848 = inttoptr i32 %v3_15848 to i16*
  store i16 %v2_15848, i16* %v4_15848, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_15828
  %v2_1584019 = add i32 %v1_15840.pre, 8
  %v3_1584020 = inttoptr i32 %v2_1584019 to i32*
  store i32 0, i32* %v3_1584020, align 4
  %v2_1584c = load i32, i32* @sb, align 4
  %v3_1584c = add i32 %v2_1584c, 12
  %v4_1584c = inttoptr i32 %v3_1584c to i32*
  store i32 0, i32* %v4_1584c, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_1581c, %.thread9
  store i32 56, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_15858 = load i32, i32* @fp, align 4
  %v2_15858 = add i32 %v0_15858, 56
  %v3_15858 = inttoptr i32 %v2_15858 to i32*
  %v4_15858 = load i32, i32* %v3_15858, align 4
  store i32 %v4_15858, i32* %r3.global-to-local, align 4
  %v2_1585c = load i32, i32* @sb, align 4
  %v3_1585c = add i32 %v2_1585c, 2
  %v4_1585c = inttoptr i32 %v3_1585c to i8*
  store i8 0, i8* %v4_1585c, align 1
  %v0_15860 = load i32, i32* @sb, align 4
  %v1_15860 = inttoptr i32 %v0_15860 to i16*
  %v2_15860 = load i16, i16* %v1_15860, align 2
  %v3_15860 = zext i16 %v2_15860 to i32
  store i32 %v3_15860, i32* %r2.global-to-local, align 4
  %v0_15864 = load i32, i32* %r3.global-to-local, align 4
  %v1_15864 = inttoptr i32 %v0_15864 to i32*
  %v2_15864 = load i32, i32* %v1_15864, align 4
  store i32 %v2_15864, i32* %r1.global-to-local, align 4
  %v1_15868 = add i32 %v0_15860, 8
  %v2_15868 = inttoptr i32 %v1_15868 to i32*
  %v3_15868 = load i32, i32* %v2_15868, align 4
  store i32 %v3_15868, i32* %r3.global-to-local, align 4
  %v1_1586c = and i32 %v3_15860, 8192
  %v2_1586c = icmp eq i32 %v1_1586c, 0
  %v2_15870 = add i32 %v0_15860, 20
  %v3_15870 = inttoptr i32 %v2_15870 to i32*
  store i32 %v3_15868, i32* %v3_15870, align 4
  %v0_15874 = load i32, i32* %r0.global-to-local, align 4
  %v1_15874 = load i32, i32* @sb, align 4
  %v2_15874 = add i32 %v1_15874, 44
  %v3_15874 = inttoptr i32 %v2_15874 to i32*
  store i32 %v0_15874, i32* %v3_15874, align 4
  %v0_15878 = load i32, i32* %r1.global-to-local, align 4
  %v1_15878 = load i32, i32* @sb, align 4
  %v2_15878 = add i32 %v1_15878, 52
  %v3_15878 = inttoptr i32 %v2_15878 to i32*
  store i32 %v0_15878, i32* %v3_15878, align 4
  %v0_1587c = load i32, i32* %r3.global-to-local, align 4
  %v1_1587c = load i32, i32* @sb, align 4
  %v2_1587c = add i32 %v1_1587c, 24
  %v3_1587c = inttoptr i32 %v2_1587c to i32*
  store i32 %v0_1587c, i32* %v3_1587c, align 4
  %v0_15880 = load i32, i32* %r3.global-to-local, align 4
  %v1_15880 = load i32, i32* @sb, align 4
  %v2_15880 = add i32 %v1_15880, 28
  %v3_15880 = inttoptr i32 %v2_15880 to i32*
  store i32 %v0_15880, i32* %v3_15880, align 4
  %v0_15884 = load i32, i32* %r3.global-to-local, align 4
  %v1_15884 = load i32, i32* @sb, align 4
  %v2_15884 = add i32 %v1_15884, 16
  %v3_15884 = inttoptr i32 %v2_15884 to i32*
  store i32 %v0_15884, i32* %v3_15884, align 4
  br i1 %v2_1586c, label %dec_label_pc_15940, label %dec_label_pc_1588c

dec_label_pc_1588c:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_15890 = load i32, i32* @fp, align 4
  %v2_15890 = add i32 %v0_15890, 36
  %v3_15890 = inttoptr i32 %v2_15890 to i32*
  %v4_15890 = load i32, i32* %v3_15890, align 4
  store i32 %v4_15890, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_15898 = add i32 %v0_15890, 108
  %v3_15898 = inttoptr i32 %v2_15898 to i32*
  %v4_15898 = load i32, i32* %v3_15898, align 4
  store i32 %v4_15898, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_158a0 = ptrtoint i32* %stack_var_-56 to i32
  %v2_158a4 = add i32 %v0_15890, 72
  %v3_158a4 = inttoptr i32 %v2_158a4 to i32*
  %v4_158a4 = load i32, i32* %v3_158a4, align 4
  store i32 %v4_15890, i32* %r1.global-to-local, align 4
  store i32 %v4_15898, i32* %r2.global-to-local, align 4
  store i32 %v2_158a0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_158a4)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_158c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_158c0, i32* %r0.global-to-local, align 4
  %v0_158c4 = load i32, i32* @fp, align 4
  %v2_158c4 = add i32 %v0_158c4, 16
  %v3_158c4 = inttoptr i32 %v2_158c4 to i32*
  %v4_158c4 = load i32, i32* %v3_158c4, align 4
  call void @__pseudo_branch(i32 %v4_158c4)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_158d4 = load i32, i32* @fp, align 4
  %v2_158d4 = add i32 %v0_158d4, 96
  %v3_158d4 = inttoptr i32 %v2_158d4 to i32*
  %v4_158d4 = load i32, i32* %v3_158d4, align 4
  store i32 %v4_158d4, i32* %r4.global-to-local, align 4
  %v0_158d8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_158d8, i32* %r1.global-to-local, align 4
  store i32 %v4_158d4, i32* %r2.global-to-local, align 4
  store i32 %v2_15690, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_158a4)
  store i32 %v4_158d4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_158c4)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_158fc = load i32, i32* @fp, align 4
  %v2_158fc = add i32 %v0_158fc, 44
  %v3_158fc = inttoptr i32 %v2_158fc to i32*
  %v4_158fc = load i32, i32* %v3_158fc, align 4
  store i32 %v4_158fc, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_15904 = inttoptr i32 %v4_158fc to i32*
  %v2_15904 = load i32, i32* %v1_15904, align 4
  store i32 %v2_15904, i32* %r2.global-to-local, align 4
  store i32 %v2_15690, i32* %r0.global-to-local, align 4
  %v1_1590c = load i32, i32* @sb, align 4
  %v2_1590c = add i32 %v1_1590c, 32
  %v3_1590c = inttoptr i32 %v2_1590c to i32*
  store i32 %v2_15904, i32* %v3_1590c, align 4
  %v0_15910 = load i32, i32* @fp, align 4
  %v1_15910 = load i32, i32* %r3.global-to-local, align 4
  %v2_15910 = add i32 %v1_15910, %v0_15910
  %v3_15910 = inttoptr i32 %v2_15910 to i32*
  %v4_15910 = load i32, i32* %v3_15910, align 4
  store i32 %v4_15910, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_15918 = load i32, i32* @sb, align 4
  %v1_15918 = load i32, i32* @ip, align 4
  %v2_15918 = inttoptr i32 %v1_15918 to i32*
  store i32 %v0_15918, i32* %v2_15918, align 4
  call void @__pseudo_branch(i32 %v4_15910)
  store i32 %v2_158a0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15910)
  br label %dec_label_pc_15940

dec_label_pc_1593c:                               ; preds = %dec_label_pc_156d0, %dec_label_pc_156bc, %dec_label_pc_156dc
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_15940

dec_label_pc_15940:                               ; preds = %bb40, %dec_label_pc_15714, %dec_label_pc_1588c, %dec_label_pc_1593c
  %v0_15940 = load i32, i32* @sb, align 4
  store i32 %v0_15940, i32* %r0.global-to-local, align 4
  %v2_15948 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15948, i32* %r4.global-to-local, align 4
  store i32 %v6_1567c, i32* @r5, align 4
  store i32 %v9_1567c, i32* @r6, align 4
  store i32 %v18_1567c, i32* @sb, align 4
  store i32 %v24_1567c, i32* @fp, align 4
  ret i32 %v0_15940

; uselistorder directives
  uselistorder i32 %v1_15840.pre, { 2, 1, 0 }
  uselistorder i32 %v0_157d4, { 1, 2, 0 }
  uselistorder i32 %v0_157a0, { 1, 0 }
  uselistorder i32 %v1_15764, { 1, 0 }
  uselistorder i32 %v0_15764, { 1, 0 }
  uselistorder i32 %v1_1574c, { 1, 0, 2 }
  uselistorder i32 %v1_15704, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 17, 11, 10, 13, 12, 18, 14, 15, 16 }
  uselistorder i32 16384, { 46, 0, 47, 33, 64, 34, 65, 35, 66, 36, 67, 37, 68, 38, 69, 16, 70, 15, 48, 1, 52, 31, 53, 30, 49, 2, 50, 32, 51, 3, 54, 4, 55, 5, 56, 6, 57, 7, 58, 8, 59, 9, 60, 10, 61, 11, 62, 12, 63, 39, 71, 13, 72, 14, 73, 17, 81, 40, 82, 20, 74, 19, 75, 43, 76, 44, 77, 18, 78, 41, 79, 42, 80, 21, 83, 22, 84, 23, 85, 45, 86, 24, 87, 25, 88, 27, 89, 26, 90, 28, 91, 29, 92 }
  uselistorder i32 4096, { 8, 9, 10, 1, 0, 2, 17, 3, 11, 4, 12, 13, 6, 14, 5, 7, 15, 16 }
  uselistorder i32 32768, { 2, 5, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @function_11860, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @function_11a88, { 14, 0, 3, 11, 10, 13, 12, 7, 6, 9, 8, 5, 4, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 0 }
  uselistorder i32 ()* @function_126ac, { 61, 60, 59, 4, 3, 2, 0, 1, 6, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5 }
  uselistorder i32 80, { 5, 2, 3, 4, 0, 1, 6, 7 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @function_13718, { 12, 11, 5, 4, 3, 2, 1, 8, 7, 6, 10, 9, 0 }
  uselistorder i32* @fp, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 107, 108, 109, 110, 116, 118, 117, 119, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 26, 20, 21, 22, 23, 24, 25, 27, 28, 43, 42, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 0, 78, 79, 80, 81, 82, 83, 84, 1, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 120, 121, 122, 123, 124, 111, 112, 113, 2, 114, 115 }
  uselistorder label %dec_label_pc_15940, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1593c, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1581c, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_15794._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1573c, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_156ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_156bc, { 1, 2, 0 }
}

define i32 @function_15950(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15950:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_15950 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15950, label %bb, label %.thread11

bb:                                               ; preds = %dec_label_pc_15950
  %v1_15950 = load i32, i32* %r0.global-to-local, align 4
  %v2_15950 = load i32, i32* @ip, align 4
  %v3_15950 = load i32, i32* @sb, align 4
  %v4_15950 = lshr i32 %v2_15950, %v3_15950
  %v5_15950 = sub i32 32, %v3_15950
  %v6_15950 = shl i32 %v2_15950, %v5_15950
  %v7_15950 = or i32 %v6_15950, %v4_15950
  %v9_15950 = and i32 %v7_15950, %v1_15950
  %v2_1595c = load i32, i32* %r3.global-to-local, align 4
  %v3_1595c = and i32 %v9_15950, %v2_1595c
  %v2_15960 = trunc i32 %v3_1595c to i16
  %v4_15960 = inttoptr i32 %v3_1595c to i16*
  store i16 %v2_15960, i16* %v4_15960, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_15950, %bb
  %v0_15988 = call i32 @function_1207c()
  store i32 %v0_15988, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_15994 = inttoptr i32 %v0_15988 to i32*
  %v2_15994 = load i32, i32* %v1_15994, align 4
  store i32 %v2_15994, i32* @r6, align 4
  %v1_15998 = call i32 @function_169ec(i32 0)
  store i32 %v1_15998, i32* %r0.global-to-local, align 4
  %v2_159a0 = icmp eq i32 %v1_15998, 0
  store i32 98320, i32* @r4, align 4
  br i1 %v2_159a0, label %bb24, label %.thread14

bb24:                                             ; preds = %.thread11
  %v5_159ac = load i16, i16* inttoptr (i32 98624 to i16*), align 64
  %v7_159ac = zext i16 %v5_159ac to i32
  %v2_159b0 = xor i32 %v7_159ac, 256
  store i32 %v2_159b0, i32* @r3, align 4
  %v2_159b4 = trunc i32 %v2_159b0 to i16
  store i16 %v2_159b4, i16* inttoptr (i32 98624 to i16*), align 64
  br label %.thread14

.thread14:                                        ; preds = %.thread11, %bb24
  store i32 1, i32* @r0, align 4
  %v1_159bc = call i32 @function_169ec(i32 1)
  store i32 %v1_159bc, i32* %r0.global-to-local, align 4
  %v2_159c0 = icmp eq i32 %v1_159bc, 0
  br i1 %v2_159c0, label %bb25, label %.thread18

bb25:                                             ; preds = %.thread14
  %v1_159c8 = load i32, i32* @r4, align 4
  %v2_159cc = add i32 %v1_159c8, 384
  %v3_159cc = inttoptr i32 %v2_159cc to i16*
  %v4_159cc = load i16, i16* %v3_159cc, align 2
  %v5_159cc = zext i16 %v4_159cc to i32
  %v2_159d0 = xor i32 %v5_159cc, 256
  store i32 %v2_159d0, i32* %r3.global-to-local, align 4
  %v2_159d4 = trunc i32 %v2_159d0 to i16
  store i16 %v2_159d4, i16* %v3_159cc, align 2
  br label %.thread18

.thread18:                                        ; preds = %.thread14, %bb25
  %v0_159d8 = load i32, i32* @r6, align 4
  %v1_159d8 = load i32, i32* @r5, align 4
  %v2_159d8 = inttoptr i32 %v1_159d8 to i32*
  store i32 %v0_159d8, i32* %v2_159d8, align 4
  ret i32 %v1_159bc

; uselistorder directives
  uselistorder i32 %v3_1595c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_169ec, { 2, 1, 0 }
  uselistorder i32* @sb, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 118, 119, 120, 121, 122, 123, 124, 125, 130, 133, 131, 132, 134, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 34, 35, 36, 37, 38, 54, 55, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 56, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 1, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 135, 136, 137, 138, 139, 140, 141, 142, 143, 126, 127, 128, 129 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
}

define i32 @function_159e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_159e4:
  %v0_159e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_159e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_159e4
  %v8_159e8 = lshr i32 %arg1, %arg2
  %v9_159e8 = and i32 %v8_159e8, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_159e4, %bb
  %v10_159e8 = phi i32 [ %arg1, %dec_label_pc_159e4 ], [ %v9_159e8, %bb ]
  ret i32 %v10_159e8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_159ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_159ec:
  store i32 98320, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_17b90.828 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_15a08 = call i32 @function_12180()
  ret i32 %v0_15a08
}

define i32 @function_15af4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15af4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15af4 = load i32, i32* @r4, align 4
  store i32 %v3_15af4, i32* %stack_var_-8, align 4
  %v1_15af8 = add i32 %arg1, 8
  %v2_15af8 = inttoptr i32 %v1_15af8 to i32*
  %v3_15af8 = load i32, i32* %v2_15af8, align 4
  %v1_15afc = add i32 %arg1, 16
  %v2_15afc = inttoptr i32 %v1_15afc to i32*
  %v3_15afc = load i32, i32* %v2_15afc, align 4
  %v9_15b00 = icmp eq i32 %v3_15afc, %v3_15af8
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_15b00, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_15af4
  store i32 %v3_15af8, i32* %v2_15afc, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_15af4, %bb
  %v1_15b0c = xor i1 %v9_15b00, true
  call void @__pseudo_cond_branch(i1 %v1_15b0c, i32 ptrtoint (i32* @global_var_16dd8.829 to i32))
  %v0_15b10 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b10 = add i32 %v0_15b10, 8
  %v2_15b10 = inttoptr i32 %v1_15b10 to i32*
  %v3_15b10 = load i32, i32* %v2_15b10, align 4
  %v1_15b14 = add i32 %v0_15b10, 16
  %v2_15b14 = inttoptr i32 %v1_15b14 to i32*
  %v3_15b14 = load i32, i32* %v2_15b14, align 4
  %v2_15b18 = sub i32 %v3_15b14, %v3_15b10
  %v2_15b1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15b1c, i32* @r4, align 4
  ret i32 %v2_15b18

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_15b24(i32 %arg1) local_unnamed_addr {
dec_label_pc_15b24:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15b24 = load i32, i32* @r4, align 4
  store i32 %v3_15b24, i32* %stack_var_-16, align 4
  %v6_15b24 = load i32, i32* @r5, align 4
  %v12_15b24 = load i32, i32* @lr, align 4
  %v1_15b28 = add i32 %arg1, 52
  %v2_15b28 = inttoptr i32 %v1_15b28 to i32*
  %v3_15b28 = load i32, i32* %v2_15b28, align 4
  %v2_15b30 = icmp eq i32 %v3_15b28, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 98320, i32* %r6.global-to-local, align 4
  br i1 %v2_15b30, label %dec_label_pc_15b68, label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b24
  %v1_15b44 = add i32 %arg1, 16
  %v2_15b44 = inttoptr i32 %v1_15b44 to i32*
  %v3_15b44 = load i32, i32* %v2_15b44, align 4
  %v1_15b48 = add i32 %arg1, 24
  %v2_15b48 = inttoptr i32 %v1_15b48 to i32*
  %v3_15b48 = load i32, i32* %v2_15b48, align 4
  %v3_15b4c = icmp ult i32 %v3_15b44, %v3_15b48
  br i1 %v3_15b4c, label %.thread, label %dec_label_pc_15b5c

.thread:                                          ; preds = %dec_label_pc_15b44
  %v2_15b50 = inttoptr i32 %v3_15b44 to i8*
  %v3_15b50 = load i8, i8* %v2_15b50, align 1
  %v4_15b50 = zext i8 %v3_15b50 to i32
  store i32 %v4_15b50, i32* %r4.global-to-local, align 4
  %v6_15b50 = add i32 %v3_15b44, 1
  store i32 %v6_15b50, i32* %v2_15b44, align 4
  br label %dec_label_pc_15bdc

dec_label_pc_15b5c:                               ; preds = %dec_label_pc_15b44
  %v1_15b5c = inttoptr i32 %arg1 to i16*
  %v2_15b5c = call i32 @function_16050(i16* %v1_15b5c)
  store i32 %v2_15b5c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15bdc

dec_label_pc_15b68:                               ; preds = %dec_label_pc_15b24
  %v1_15b6c = add i32 %arg1, 56
  store i32 %v1_15b6c, i32* @r4, align 4
  %v4_15b80 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_15b80)
  %v0_15b94 = load i32, i32* %r6.global-to-local, align 4
  %v2_15b94 = add i32 %v0_15b94, 16
  %v3_15b94 = inttoptr i32 %v2_15b94 to i32*
  %v4_15b94 = load i32, i32* %v3_15b94, align 4
  store i32 88992, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15b94)
  %v0_15ba0 = load i32, i32* @r5, align 4
  %v1_15ba0 = add i32 %v0_15ba0, 16
  %v2_15ba0 = inttoptr i32 %v1_15ba0 to i32*
  %v3_15ba0 = load i32, i32* %v2_15ba0, align 4
  %v1_15ba4 = add i32 %v0_15ba0, 24
  %v2_15ba4 = inttoptr i32 %v1_15ba4 to i32*
  %v3_15ba4 = load i32, i32* %v2_15ba4, align 4
  %v3_15ba8 = icmp ult i32 %v3_15ba0, %v3_15ba4
  br i1 %v3_15ba8, label %.thread2, label %dec_label_pc_15bb8

.thread2:                                         ; preds = %dec_label_pc_15b68
  %v2_15bac = inttoptr i32 %v3_15ba0 to i8*
  %v3_15bac = load i8, i8* %v2_15bac, align 1
  %v4_15bac = zext i8 %v3_15bac to i32
  store i32 %v4_15bac, i32* %r4.global-to-local, align 4
  %v6_15bac = add i32 %v3_15ba0, 1
  store i32 %v6_15bac, i32* %v2_15ba0, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15bb8:                               ; preds = %dec_label_pc_15b68
  %v1_15bbc = inttoptr i32 %v0_15ba0 to i16*
  %v2_15bbc = call i32 @function_16050(i16* %v1_15bbc)
  store i32 %v2_15bbc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15bc4:                               ; preds = %.thread2, %dec_label_pc_15bb8
  %v0_15bd0 = load i32, i32* %r6.global-to-local, align 4
  %v2_15bd0 = add i32 %v0_15bd0, 24
  %v3_15bd0 = inttoptr i32 %v2_15bd0 to i32*
  %v4_15bd0 = load i32, i32* %v3_15bd0, align 4
  store i32 %v4_15bd0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15bd0)
  br label %dec_label_pc_15bdc

dec_label_pc_15bdc:                               ; preds = %.thread, %dec_label_pc_15b5c, %dec_label_pc_15bc4
  %v0_15bdc = load i32, i32* %r4.global-to-local, align 4
  %v2_15be4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15be4, i32* @r4, align 4
  store i32 %v6_15b24, i32* @r5, align 4
  store i32 %v12_15b24, i32* @lr, align 4
  ret i32 %v0_15bdc

; uselistorder directives
  uselistorder i32 %v3_15ba0, { 1, 0, 2 }
  uselistorder i32 %v3_15b44, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 5, 1, 4, 3, 0, 2 }
  uselistorder label %dec_label_pc_15bdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15bc4, { 1, 0 }
}

define i32 @function_15bec(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bec:
  %v0_15bec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15bec, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15bec
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15bec, %bb
  %v10_15bfc = phi i32 [ %arg1, %dec_label_pc_15bec ], [ 0, %bb ]
  ret i32 %v10_15bfc

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_15c00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15c00:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15c00 = load i32, i32* @r4, align 4
  store i32 %v3_15c00, i32* %stack_var_-28, align 4
  %v6_15c00 = load i32, i32* @r5, align 4
  %v9_15c00 = load i32, i32* @r6, align 4
  %v12_15c00 = load i32, i32* @r7, align 4
  %v21_15c00 = load i32, i32* @lr, align 4
  %v1_15c04 = add i32 %arg3, 52
  %v2_15c04 = inttoptr i32 %v1_15c04 to i32*
  %v3_15c04 = load i32, i32* %v2_15c04, align 4
  %v1_15c0c = sub i32 1, %v3_15c04
  %v2_15c0c = icmp ult i32 %v3_15c04, 2
  br i1 %v2_15c0c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_15c00
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_15c00, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_15c0c, %dec_label_pc_15c00 ]
  %v0_15c14 = phi i32 [ 0, %bb ], [ %v1_15c0c, %dec_label_pc_15c00 ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_15c14 = icmp eq i32 %v0_15c14, 0
  store i32 98320, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_15c14, label %dec_label_pc_15c68, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %bb16
  %v1_15c34 = add i32 %arg3, 56
  store i32 %v1_15c34, i32* @r4, align 4
  %v4_15c48 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  call void @__pseudo_branch(i32 %v4_15c48)
  %v0_15c5c = load i32, i32* @r5, align 4
  %v2_15c5c = add i32 %v0_15c5c, 16
  %v3_15c5c = inttoptr i32 %v2_15c5c to i32*
  %v4_15c5c = load i32, i32* %v3_15c5c, align 4
  store i32 %v4_15c5c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_15c68.839 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15c5c)
  %v0_15c68.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_15c6c.pre = load i32, i32* @r7, align 4
  %v0_15c70.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15c68

dec_label_pc_15c68:                               ; preds = %bb16, %dec_label_pc_15c30
  %v0_15c70 = phi i32 [ %arg3, %bb16 ], [ %v0_15c70.pre, %dec_label_pc_15c30 ]
  %v0_15c6c = phi i32 [ %arg2, %bb16 ], [ %v0_15c6c.pre, %dec_label_pc_15c30 ]
  %v0_15c68 = phi i32 [ %arg1, %bb16 ], [ %v0_15c68.pre, %dec_label_pc_15c30 ]
  %v3_15c74 = inttoptr i32 %v0_15c68 to i8*
  %v4_15c74 = call i32 @function_1617c(i8* %v3_15c74, i32 %v0_15c6c, i32 %v0_15c70)
  %v0_15c78 = load i32, i32* %sl.global-to-local, align 4
  %v2_15c78 = icmp eq i32 %v0_15c78, 0
  store i32 %v4_15c74, i32* %r4.global-to-local, align 4
  br i1 %v2_15c78, label %dec_label_pc_15c68..thread3_crit_edge, label %bb17

dec_label_pc_15c68..thread3_crit_edge:            ; preds = %dec_label_pc_15c68
  %v0_15c94.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_15c68
  %v1_15c8c = load i32, i32* @r5, align 4
  %v3_15c8c = add i32 %v1_15c8c, 24
  %v4_15c8c = inttoptr i32 %v3_15c8c to i32*
  %v5_15c8c = load i32, i32* %v4_15c8c, align 4
  store i32 %v5_15c8c, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15c68..thread3_crit_edge, %bb17
  %v0_15c94 = phi i32 [ %v0_15c94.pre, %dec_label_pc_15c68..thread3_crit_edge ], [ %v5_15c8c, %bb17 ]
  %v2_15c94 = xor i1 %v2_15c78, true
  call void @__pseudo_cond_branch(i1 %v2_15c94, i32 %v0_15c94)
  %v0_15c98 = load i32, i32* %r4.global-to-local, align 4
  %v2_15ca0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_15ca0, i32* %r4.global-to-local, align 4
  store i32 %v6_15c00, i32* @r5, align 4
  store i32 %v9_15c00, i32* @r6, align 4
  store i32 %v12_15c00, i32* @r7, align 4
  store i32 %v21_15c00, i32* @lr, align 4
  ret i32 %v0_15c98

; uselistorder directives
  uselistorder i32 %v3_15c04, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 52, { 8, 9, 10, 11, 12, 2, 13, 6, 7, 3, 16, 17, 1, 18, 0, 19, 20, 4, 5, 14, 15 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15c68, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_15ca8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15ca8:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_15ca8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15ca8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_15ca8
  store i32 %arg2, i32* %arg1, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15ca8, %bb
  %v10_15cb8 = phi i32 [ %tmp, %dec_label_pc_15ca8 ], [ 0, %bb ]
  ret i32 %v10_15cb8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_15cbc() local_unnamed_addr {
dec_label_pc_15cbc:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15cbc = load i32, i32* @r4, align 4
  store i32 %v3_15cbc, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %r6.global-to-local, align 4
  %v4_15ccc = load i32, i32* inttoptr (i32 98356 to i32*), align 4
  store i32 %v4_15ccc, i32* %r8.global-to-local, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_15cd4 = load i32, i32* inttoptr (i32 98428 to i32*), align 4
  store i32 %v4_15cd4, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_15ce0 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 %v4_15ce0, i32* %r7.global-to-local, align 4
  %v2_15cec = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_15ce0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15d00 = load i32, i32* %r6.global-to-local, align 4
  %v2_15d00 = add i32 %v0_15d00, 16
  %v3_15d00 = inttoptr i32 %v2_15d00 to i32*
  %v4_15d00 = load i32, i32* %v3_15d00, align 4
  store i32 %v4_15d00, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15d00)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_15d10 = load i32, i32* %r6.global-to-local, align 4
  %v2_15d10 = add i32 %v0_15d10, 12
  %v3_15d10 = inttoptr i32 %v2_15d10 to i32*
  %v4_15d10 = load i32, i32* %v3_15d10, align 4
  store i32 %v4_15d10, i32* %r3.global-to-local, align 4
  %v1_15d14 = inttoptr i32 %v4_15d10 to i32*
  %v2_15d14 = load i32, i32* %v1_15d14, align 4
  store i32 %v2_15d14, i32* %r3.global-to-local, align 4
  %v7_15d18 = icmp eq i32 %v2_15d14, 1
  br i1 %v7_15d18, label %dec_label_pc_15d20, label %dec_label_pc_15de0

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15cbc
  store i32 48, i32* %r3.global-to-local, align 4
  %v2_15d24 = add i32 %v0_15d10, 48
  %v3_15d24 = inttoptr i32 %v2_15d24 to i32*
  %v4_15d24 = load i32, i32* %v3_15d24, align 4
  store i32 %v4_15d24, i32* %r3.global-to-local, align 4
  %v1_15d28 = inttoptr i32 %v4_15d24 to i32*
  %v2_15d28 = load i32, i32* %v1_15d28, align 4
  store i32 %v2_15d28, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_15d28, 1
  br i1 %tmp30, label %dec_label_pc_15de0, label %dec_label_pc_15d34

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15d20
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15d38 = add i32 %v0_15d10, 96
  %v3_15d38 = inttoptr i32 %v2_15d38 to i32*
  %v4_15d38 = load i32, i32* %v3_15d38, align 4
  store i32 %v4_15d38, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ce0)
  call void @__pseudo_branch(i32 %v4_15d00)
  %v0_15d60 = load i32, i32* %r6.global-to-local, align 4
  %v2_15d60 = add i32 %v0_15d60, 44
  %v3_15d60 = inttoptr i32 %v2_15d60 to i32*
  %v4_15d60 = load i32, i32* %v3_15d60, align 4
  store i32 %v4_15d60, i32* %r3.global-to-local, align 4
  %v1_15d64 = inttoptr i32 %v4_15d60 to i32*
  %v2_15d64 = load i32, i32* %v1_15d64, align 4
  store i32 %v2_15d64, i32* %r4.global-to-local, align 4
  store i32 44, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_15db011 = icmp eq i32 %v2_15d64, 0
  br i1 %v2_15db011, label %dec_label_pc_15dbc, label %dec_label_pc_15d74

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d34, %dec_label_pc_15dac
  %v0_15d982 = phi i32 [ %v0_15dac, %dec_label_pc_15dac ], [ %v2_15d64, %dec_label_pc_15d34 ]
  %v1_15d74 = inttoptr i32 %v0_15d982 to i16*
  %v2_15d74 = load i16, i16* %v1_15d74, align 2
  %v3_15d74 = zext i16 %v2_15d74 to i32
  store i32 %v3_15d74, i32* %r3.global-to-local, align 4
  %v2_15d78 = and i32 %v3_15d74, 32816
  %v7_15d7c = icmp eq i32 %v2_15d78, 48
  %v1_15d80 = add i32 %v0_15d982, 32
  %v2_15d80 = inttoptr i32 %v1_15d80 to i32*
  %v3_15d80 = load i32, i32* %v2_15d80, align 4
  store i32 %v3_15d80, i32* %r5.global-to-local, align 4
  br i1 %v7_15d7c, label %dec_label_pc_15d8c, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_15d74
  store i32 %v0_15d982, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15dac

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d74
  %v0_15d8c = load i32, i32* %r7.global-to-local, align 4
  %v2_15d8c = icmp eq i32 %v0_15d8c, 0
  br i1 %v2_15d8c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_15d8c
  %v1_15d90 = load i32, i32* %r6.global-to-local, align 4
  %v2_15d90 = load i32, i32* %r8.global-to-local, align 4
  %v3_15d90 = add i32 %v2_15d90, %v1_15d90
  %v4_15d90 = inttoptr i32 %v3_15d90 to i32*
  %v5_15d90 = load i32, i32* %v4_15d90, align 4
  store i32 %v5_15d90, i32* %r3.global-to-local, align 4
  %v3_15d94 = inttoptr i32 %v5_15d90 to i32*
  store i32 %v3_15d80, i32* %v3_15d94, align 4
  %v0_15d98 = load i32, i32* %r4.global-to-local, align 4
  %v1_15d98 = inttoptr i32 %v0_15d98 to i16*
  %v2_15d98 = load i16, i16* %v1_15d98, align 2
  %v3_15d98 = zext i16 %v2_15d98 to i32
  store i32 %v3_15d98, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_15d8c
  %v2_15d988 = load i16, i16* %v1_15d74, align 2
  %v3_15d989 = zext i16 %v2_15d988 to i32
  store i32 %v3_15d989, i32* %r3.global-to-local, align 4
  %v3_15d9c = add i32 %v0_15d8c, 32
  %v4_15d9c = inttoptr i32 %v3_15d9c to i32*
  store i32 %v3_15d80, i32* %v4_15d9c, align 4
  %v0_15da0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_15da0 = phi i32 [ %v3_15d98, %.thread ], [ %v0_15da0.pre, %bb ]
  %v1_15da0 = and i32 %v0_15da0, 8192
  %v2_15da0 = icmp eq i32 %v1_15da0, 0
  br i1 %v2_15da0, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_15da8 = xor i1 %v2_15da0, true
  call void @__pseudo_cond_branch(i1 %v1_15da8, i32 ptrtoint (i32* @global_var_13718.17 to i32))
  %v0_15dac.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %.thread21, %bb33
  %v0_15dac = phi i32 [ %v0_15dac.pre, %bb33 ], [ %v3_15d80, %.thread21 ]
  store i32 %v0_15dac, i32* %r4.global-to-local, align 4
  %v2_15db0 = icmp eq i32 %v0_15dac, 0
  br i1 %v2_15db0, label %dec_label_pc_15db0.dec_label_pc_15dbc_crit_edge, label %dec_label_pc_15d74

dec_label_pc_15db0.dec_label_pc_15dbc_crit_edge:  ; preds = %dec_label_pc_15dac
  %v0_15dc8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15db0.dec_label_pc_15dbc_crit_edge, %dec_label_pc_15d34
  %v0_15dc8 = phi i32 [ %v0_15dc8.pre, %dec_label_pc_15db0.dec_label_pc_15dbc_crit_edge ], [ %v0_15d60, %dec_label_pc_15d34 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_15dc8 = add i32 %v0_15dc8, 24
  %v3_15dc8 = inttoptr i32 %v2_15dc8 to i32*
  %v4_15dc8 = load i32, i32* %v3_15dc8, align 4
  call void @__pseudo_branch(i32 %v4_15dc8)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_15dd8 = load i32, i32* %r6.global-to-local, align 4
  %v2_15dd8 = add i32 %v0_15dd8, 48
  %v3_15dd8 = inttoptr i32 %v2_15dd8 to i32*
  %v4_15dd8 = load i32, i32* %v3_15dd8, align 4
  store i32 %v4_15dd8, i32* %r3.global-to-local, align 4
  %v0_15ddc = load i32, i32* %r4.global-to-local, align 4
  %v2_15ddc = inttoptr i32 %v4_15dd8 to i32*
  store i32 %v0_15ddc, i32* %v2_15ddc, align 4
  %v0_15de4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15de0

dec_label_pc_15de0:                               ; preds = %dec_label_pc_15cbc, %dec_label_pc_15d20, %dec_label_pc_15dbc
  %v0_15de4 = phi i32 [ %v0_15d10, %dec_label_pc_15cbc ], [ %v0_15d10, %dec_label_pc_15d20 ], [ %v0_15de4.pre, %dec_label_pc_15dbc ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15de4 = add i32 %v0_15de4, 12
  %v3_15de4 = inttoptr i32 %v2_15de4 to i32*
  %v4_15de4 = load i32, i32* %v3_15de4, align 4
  %v1_15de8 = inttoptr i32 %v4_15de4 to i32*
  %v2_15de8 = load i32, i32* %v1_15de8, align 4
  %v1_15dec = add i32 %v2_15de8, -1
  store i32 %v1_15dec, i32* %v1_15de8, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_15e00 = load i32, i32* %r6.global-to-local, align 4
  %v2_15e00 = add i32 %v0_15e00, 24
  %v3_15e00 = inttoptr i32 %v2_15e00 to i32*
  %v4_15e00 = load i32, i32* %v3_15e00, align 4
  call void @__pseudo_branch(i32 %v4_15e00)
  %v2_15e10 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15e10, i32* %r4.global-to-local, align 4
  ret i32 %v2_15cec

; uselistorder directives
  uselistorder i32 %v0_15dac, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 7, 1, 6, 2, 3, 4, 5, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* inttoptr (i32 98356 to i32*), { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_15de0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15dac, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_15d74, { 1, 0 }
}

define i32 @function_15e18(i16* %arg1) local_unnamed_addr {
dec_label_pc_15e18:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_15e18 = load i1, i1* @cpsr_z, align 1
  %v1_15e18 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_15e18, label %bb, label %dec_label_pc_15e18..thread9_crit_edge

dec_label_pc_15e18..thread9_crit_edge:            ; preds = %dec_label_pc_15e18
  br label %.thread9

bb:                                               ; preds = %dec_label_pc_15e18
  %v5_15e18 = sdiv i32 %v1_15e18, 64
  %v6_15e18 = and i32 %v5_15e18, %v1_15e18
  store i32 %v6_15e18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15e18..thread9_crit_edge, %bb
  %v0_15ff8 = phi i32 [ 0, %bb ], [ %v1_15e18, %dec_label_pc_15e18..thread9_crit_edge ]
  %v3_15e44 = load i32, i32* @r4, align 4
  store i32 %v3_15e44, i32* %stack_var_-36, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 98320, i32* %sb.global-to-local, align 4
  %v4_15e54 = load i32, i32* inttoptr (i32 98364 to i32*), align 4
  store i32 %v4_15e54, i32* %r3.global-to-local, align 4
  %v9_15e58 = icmp eq i32 %v0_15ff8, %v4_15e54
  store i32 %v0_15ff8, i32* %fp.global-to-local, align 4
  br i1 %v9_15e58, label %bb49, label %dec_label_pc_15e70

bb49:                                             ; preds = %.thread9
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15e80

dec_label_pc_15e70:                               ; preds = %.thread9
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_15e74 = icmp eq i32 %v0_15ff8, 0
  br i1 %v2_15e74, label %dec_label_pc_15e80, label %dec_label_pc_15fe8

dec_label_pc_15e80:                               ; preds = %bb49, %dec_label_pc_15e70
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_15e70 ]
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_15e94 = load i32, i32* inttoptr (i32 98428 to i32*), align 4
  store i32 %v4_15e94, i32* %r4.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_15e9c = ptrtoint i32* %stack_var_-56 to i32
  %v4_15ea0 = load i32, i32* inttoptr (i32 98392 to i32*), align 8
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  store i32 %v4_15e94, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ea0)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15ec0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15ec0, i32* %r0.global-to-local, align 4
  %v0_15ec4 = load i32, i32* %sb.global-to-local, align 4
  %v2_15ec4 = add i32 %v0_15ec4, 16
  %v3_15ec4 = inttoptr i32 %v2_15ec4 to i32*
  %v4_15ec4 = load i32, i32* %v3_15ec4, align 4
  call void @__pseudo_branch(i32 %v4_15ec4)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15ed4 = add i32 %v0_15ec4, 12
  %v3_15ed4 = inttoptr i32 %v2_15ed4 to i32*
  %v4_15ed4 = load i32, i32* %v3_15ed4, align 4
  store i32 %v4_15ed4, i32* %r2.global-to-local, align 4
  %v1_15ed8 = inttoptr i32 %v4_15ed4 to i32*
  %v2_15ed8 = load i32, i32* %v1_15ed8, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_15ee0 = add i32 %v2_15ed8, 1
  store i32 %v1_15ee0, i32* %r3.global-to-local, align 4
  %v2_15ee4 = add i32 %v0_15ec4, 24
  %v3_15ee4 = inttoptr i32 %v2_15ee4 to i32*
  %v4_15ee4 = load i32, i32* %v3_15ee4, align 4
  store i32 %v1_15ee0, i32* %v1_15ed8, align 4
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ee4)
  store i32 96, i32* %r3.global-to-local, align 4
  %v0_15f00 = load i32, i32* %sb.global-to-local, align 4
  %v2_15f00 = add i32 %v0_15f00, 96
  %v3_15f00 = inttoptr i32 %v2_15f00 to i32*
  %v4_15f00 = load i32, i32* %v3_15f00, align 4
  store i32 %v4_15f00, i32* @r4, align 4
  store i32 %v4_15f00, i32* %r2.global-to-local, align 4
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ea0)
  %v0_15f18 = load i32, i32* @r4, align 4
  store i32 %v0_15f18, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15ec4)
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_15f28 = load i32, i32* %sb.global-to-local, align 4
  %v2_15f28 = add i32 %v0_15f28, 44
  %v3_15f28 = inttoptr i32 %v2_15f28 to i32*
  %v4_15f28 = load i32, i32* %v3_15f28, align 4
  store i32 %v4_15f28, i32* %r3.global-to-local, align 4
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  %v1_15f34 = inttoptr i32 %v4_15f28 to i32*
  %v2_15f34 = load i32, i32* %v1_15f34, align 4
  store i32 %v2_15f34, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_15ee4)
  %v0_15f40 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_15f40, i32* @r6, align 4
  %v2_15f44 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15f44, i32* @r8, align 4
  store i32 72, i32* %fp.global-to-local, align 4
  %v0_15fd8.pr = load i32, i32* @r7, align 4
  %v2_15fd829 = icmp eq i32 %v0_15fd8.pr, 0
  br i1 %v2_15fd829, label %dec_label_pc_15fe0, label %dec_label_pc_15f4c

dec_label_pc_15f4c:                               ; preds = %dec_label_pc_15e80, %dec_label_pc_15fd4
  %v0_15f58 = phi i32 [ %v3_15fd4, %dec_label_pc_15fd4 ], [ %v0_15fd8.pr, %dec_label_pc_15e80 ]
  %v1_15f4c = inttoptr i32 %v0_15f58 to i16*
  %v2_15f4c = load i16, i16* %v1_15f4c, align 2
  %v3_15f4c = zext i16 %v2_15f4c to i32
  store i32 %v3_15f4c, i32* %r3.global-to-local, align 4
  %v1_15f50 = and i32 %v3_15f4c, 64
  %v2_15f50 = icmp eq i32 %v1_15f50, 0
  br i1 %v2_15f50, label %dec_label_pc_15fd4, label %dec_label_pc_15f58

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f4c
  %v1_15f58 = add i32 %v0_15f58, 56
  store i32 %v1_15f58, i32* @r4, align 4
  store i32 %v1_15f58, i32* %r2.global-to-local, align 4
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  %v0_15f68 = load i32, i32* %sb.global-to-local, align 4
  %v1_15f68 = load i32, i32* %fp.global-to-local, align 4
  %v2_15f68 = add i32 %v1_15f68, %v0_15f68
  %v3_15f68 = inttoptr i32 %v2_15f68 to i32*
  %v4_15f68 = load i32, i32* %v3_15f68, align 4
  call void @__pseudo_branch(i32 %v4_15f68)
  %v0_15f74 = load i32, i32* @r4, align 4
  store i32 %v0_15f74, i32* %r0.global-to-local, align 4
  %v0_15f78 = load i32, i32* %sb.global-to-local, align 4
  %v1_15f78 = load i32, i32* @r8, align 4
  %v2_15f78 = add i32 %v1_15f78, %v0_15f78
  %v3_15f78 = inttoptr i32 %v2_15f78 to i32*
  %v4_15f78 = load i32, i32* %v3_15f78, align 4
  call void @__pseudo_branch(i32 %v4_15f78)
  %v0_15f84 = load i32, i32* @r7, align 4
  %v1_15f84 = inttoptr i32 %v0_15f84 to i16*
  %v2_15f84 = load i16, i16* %v1_15f84, align 2
  %v3_15f84 = zext i16 %v2_15f84 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_15f8c = or i32 %v3_15f84, %stack_var_-60.1.in
  %v1_15f90 = xor i32 %v2_15f8c, 320
  store i32 %v1_15f90, i32* %r3.global-to-local, align 4
  %v1_15f94 = and i32 %v1_15f90, 832
  %v2_15f94 = icmp eq i32 %v1_15f94, 0
  br i1 %v2_15f94, label %dec_label_pc_15f9c, label %bb50

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f58
  store i32 %v0_15f84, i32* %r0.global-to-local, align 4
  %v1_15fa0 = call i32 @function_15af4(i32 %v0_15f84)
  store i32 %v1_15fa0, i32* %r0.global-to-local, align 4
  %v2_15fa4 = icmp eq i32 %v1_15fa0, 0
  br i1 %v2_15fa4, label %.thread17, label %.thread18

.thread17:                                        ; preds = %dec_label_pc_15f9c
  %v1_15fa8 = load i32, i32* @r7, align 4
  %v2_15fa8 = inttoptr i32 %v1_15fa8 to i16*
  %v3_15fa8 = load i16, i16* %v2_15fa8, align 2
  %v4_15fa8 = zext i16 %v3_15fa8 to i32
  store i32 %v4_15fa8, i32* %r3.global-to-local, align 4
  %v2_15fac = add i32 %v1_15fa8, 8
  %v3_15fac = inttoptr i32 %v2_15fac to i32*
  %v4_15fac = load i32, i32* %v3_15fac, align 4
  store i32 %v4_15fac, i32* %r2.global-to-local, align 4
  %v2_15fb0 = and i32 %v4_15fa8, 65471
  store i32 %v2_15fb0, i32* %r3.global-to-local, align 4
  %v3_15fb4 = add i32 %v1_15fa8, 28
  %v4_15fb4 = inttoptr i32 %v3_15fb4 to i32*
  store i32 %v4_15fac, i32* %v4_15fb4, align 4
  %v1_15fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15fb8 = trunc i32 %v1_15fb8 to i16
  %v3_15fb8 = load i32, i32* @r7, align 4
  %v4_15fb8 = inttoptr i32 %v3_15fb8 to i16*
  store i16 %v2_15fb8, i16* %v4_15fb8, align 2
  br label %bb50

.thread18:                                        ; preds = %dec_label_pc_15f9c
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread17, %dec_label_pc_15f58, %.thread18
  store i32 %v2_15e9c, i32* %r0.global-to-local, align 4
  %v0_15fc8 = load i32, i32* %sb.global-to-local, align 4
  %v1_15fc8 = load i32, i32* %sl.global-to-local, align 4
  %v2_15fc8 = add i32 %v1_15fc8, %v0_15fc8
  %v3_15fc8 = inttoptr i32 %v2_15fc8 to i32*
  %v4_15fc8 = load i32, i32* %v3_15fc8, align 4
  call void @__pseudo_branch(i32 %v4_15fc8)
  %v0_15fd4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_15fd4

dec_label_pc_15fd4:                               ; preds = %dec_label_pc_15f4c, %bb50
  %v0_15fd4 = phi i32 [ %v0_15f58, %dec_label_pc_15f4c ], [ %v0_15fd4.pre, %bb50 ]
  %v1_15fd4 = add i32 %v0_15fd4, 32
  %v2_15fd4 = inttoptr i32 %v1_15fd4 to i32*
  %v3_15fd4 = load i32, i32* %v2_15fd4, align 4
  store i32 %v3_15fd4, i32* @r7, align 4
  %v2_15fd8 = icmp eq i32 %v3_15fd4, 0
  br i1 %v2_15fd8, label %dec_label_pc_15fe0, label %dec_label_pc_15f4c

dec_label_pc_15fe0:                               ; preds = %dec_label_pc_15fd4, %dec_label_pc_15e80
  %v0_15fe0 = call i32 @function_15cbc()
  store i32 %v0_15fe0, i32* %r0.global-to-local, align 4
  %v0_1601c.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15e70
  %v1_15fe8 = inttoptr i32 %v0_15ff8 to i16*
  %v2_15fe8 = load i16, i16* %v1_15fe8, align 2
  %v3_15fe8 = zext i16 %v2_15fe8 to i32
  %v1_15fec = and i32 %v3_15fe8, 64
  store i32 %v1_15fec, i32* %r3.global-to-local, align 4
  %v2_15fec = icmp eq i32 %v1_15fec, 0
  br i1 %v2_15fec, label %bb51, label %dec_label_pc_15ff8

bb51:                                             ; preds = %dec_label_pc_15fe8
  br label %bb52

dec_label_pc_15ff8:                               ; preds = %dec_label_pc_15fe8
  %v1_15ff8 = call i32 @function_15af4(i32 %v0_15ff8)
  store i32 %v1_15ff8, i32* %r0.global-to-local, align 4
  %v2_15ffc = icmp eq i32 %v1_15ff8, 0
  br i1 %v2_15ffc, label %.thread25, label %.thread27

.thread27:                                        ; preds = %dec_label_pc_15ff8
  br label %bb52

.thread25:                                        ; preds = %dec_label_pc_15ff8
  %v1_16000 = load i32, i32* %fp.global-to-local, align 4
  %v2_16000 = inttoptr i32 %v1_16000 to i16*
  %v3_16000 = load i16, i16* %v2_16000, align 2
  %v4_16000 = zext i16 %v3_16000 to i32
  store i32 %v4_16000, i32* %r3.global-to-local, align 4
  %v2_16004 = add i32 %v1_16000, 8
  %v3_16004 = inttoptr i32 %v2_16004 to i32*
  %v4_16004 = load i32, i32* %v3_16004, align 4
  store i32 %v4_16004, i32* %r2.global-to-local, align 4
  %v2_16008 = and i32 %v4_16000, 65471
  store i32 %v2_16008, i32* %r3.global-to-local, align 4
  %v2_1600c = trunc i32 %v2_16008 to i16
  store i16 %v2_1600c, i16* %v2_16000, align 2
  %v1_16010 = load i32, i32* %r2.global-to-local, align 4
  %v2_16010 = load i32, i32* %fp.global-to-local, align 4
  %v3_16010 = add i32 %v2_16010, 28
  %v4_16010 = inttoptr i32 %v3_16010 to i32*
  store i32 %v1_16010, i32* %v4_16010, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread27, %dec_label_pc_15fe0, %.thread25
  %v0_1601c = phi i32 [ -1, %.thread27 ], [ 0, %bb51 ], [ %v0_1601c.pre, %dec_label_pc_15fe0 ], [ 0, %.thread25 ]
  store i32 %v0_1601c, i32* %r0.global-to-local, align 4
  %v2_16024 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16024, i32* %r4.global-to-local, align 4
  ret i32 %v0_1601c

; uselistorder directives
  uselistorder i32 %v0_1601c, { 1, 0 }
  uselistorder i32 %v3_15fd4, { 1, 2, 0 }
  uselistorder i32 %v0_15f84, { 1, 0, 2 }
  uselistorder i32 %v0_15ec4, { 1, 0, 2 }
  uselistorder i32 %v0_15ff8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_15e18, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 16, 7, 9, 8, 10, 12, 11, 13, 14, 15, 2, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32 ()* @function_15cbc, { 1, 0 }
  uselistorder i32 56, { 8, 9, 10, 1, 2, 11, 13, 4, 5, 6, 7, 0, 3, 12, 14 }
  uselistorder i32* @r8, { 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 197, 154, 155, 4, 156, 157, 158, 174, 175, 176, 177, 178, 8, 179, 180, 181, 182, 183, 184, 185, 186, 88, 89, 90, 91, 92, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 34, 35, 24, 26, 5, 20, 21, 22, 23, 25, 33, 27, 1, 28, 29, 30, 31, 32, 36, 37, 54, 55, 56, 57, 6, 73, 0, 74, 75, 76, 10, 77, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 84, 82, 83, 7, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 102, 103, 104, 106, 107, 108, 109, 110, 112, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 187, 188, 2, 192, 189, 190, 191, 193, 194, 195, 196, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 168, 169, 170, 9, 172, 173 }
  uselistorder i32 96, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11 }
  uselistorder i32* inttoptr (i32 98392 to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32 72, { 0, 1, 2, 3, 4, 5, 15, 11, 12, 13, 14, 6, 16, 7, 8, 9, 10 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_15fd4, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f4c, { 1, 0 }
  uselistorder label %dec_label_pc_15e80, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @function_1602c(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1602c:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1602c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1602c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_1602c
  %tmp9 = trunc i32 %arg2 to i16
  store i16 %tmp9, i16* %arg1, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1602c, %bb
  %v5_1604c = phi i32 [ %tmp, %dec_label_pc_1602c ], [ 0, %bb ]
  ret i32 %v5_1604c

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @function_16050(i16* %arg1) local_unnamed_addr {
dec_label_pc_16050:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_16050 = load i32, i32* @r4, align 4
  store i32 %v3_16050, i32* %stack_var_-12, align 4
  %v6_16050 = load i32, i32* @r5, align 4
  %v9_16050 = load i32, i32* @lr, align 4
  %v0_16054 = load i32, i32* @r0, align 4
  %v1_16054 = add i32 %v0_16054, 16
  %v2_16054 = inttoptr i32 %v1_16054 to i32*
  %v3_16054 = load i32, i32* %v2_16054, align 4
  store i32 %v3_16054, i32* %r2.global-to-local, align 4
  %v1_16058 = add i32 %v0_16054, 24
  %v2_16058 = inttoptr i32 %v1_16058 to i32*
  %v3_16058 = load i32, i32* %v2_16058, align 4
  %v3_1605c = icmp ult i32 %v3_16054, %v3_16058
  store i32 %v0_16054, i32* @r4, align 4
  br i1 %v3_1605c, label %bb, label %dec_label_pc_1607c

bb:                                               ; preds = %dec_label_pc_16050
  %v2_16068 = inttoptr i32 %v3_16054 to i8*
  %v3_16068 = load i8, i8* %v2_16068, align 1
  %v4_16068 = zext i8 %v3_16068 to i32
  store i32 %v4_16068, i32* %r0.global-to-local, align 4
  %v6_16068 = add i32 %v3_16054, 1
  store i32 %v6_16068, i32* %r2.global-to-local, align 4
  store i32 %v6_16068, i32* %v2_16054, align 4
  br label %dec_label_pc_16168

dec_label_pc_1607c:                               ; preds = %dec_label_pc_16050
  store i32 98320, i32* @r5, align 4
  %v1_1607c = inttoptr i32 %v0_16054 to i16*
  %v2_1607c = load i16, i16* %v1_1607c, align 2
  %v3_1607c = zext i16 %v2_1607c to i32
  %v1_16080 = and i32 %v3_1607c, 131
  %tmp24 = icmp ugt i32 %v1_16080, 128
  br i1 %tmp24, label %dec_label_pc_1609c, label %dec_label_pc_1608c

dec_label_pc_1608c:                               ; preds = %dec_label_pc_1607c
  store i32 128, i32* @r1, align 4
  %v0_16090 = call i32 @function_16ebc()
  store i32 %v0_16090, i32* %r0.global-to-local, align 4
  %v2_16094 = icmp eq i32 %v0_16090, 0
  br i1 %v2_16094, label %dec_label_pc_1608c.dec_label_pc_1609c_crit_edge, label %dec_label_pc_16164

dec_label_pc_1608c.dec_label_pc_1609c_crit_edge:  ; preds = %dec_label_pc_1608c
  %v0_1609c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1609c

dec_label_pc_1609c:                               ; preds = %dec_label_pc_1608c.dec_label_pc_1609c_crit_edge, %dec_label_pc_1607c
  %v2_160dc = phi i32 [ %v0_1609c.pre, %dec_label_pc_1608c.dec_label_pc_1609c_crit_edge ], [ %v0_16054, %dec_label_pc_1607c ]
  %v1_1609c = inttoptr i32 %v2_160dc to i16*
  %v2_1609c = load i16, i16* %v1_1609c, align 2
  %v3_1609c = zext i16 %v2_1609c to i32
  store i32 %v3_1609c, i32* %r2.global-to-local, align 4
  %v1_160a0 = and i32 %v3_1609c, 2
  %v2_160a0 = icmp eq i32 %v1_160a0, 0
  br i1 %v2_160a0, label %dec_label_pc_160cc, label %dec_label_pc_160a8

dec_label_pc_160a8:                               ; preds = %dec_label_pc_1609c
  %tmp25 = urem i16 %v2_1609c, 2
  %v1_160a8 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_160a8
  %v4_160ac = and i32 %tmp21, 4
  %v5_160ac = add i32 %v4_160ac, %v2_160dc
  %v1_160b0 = add i32 %v5_160ac, 36
  %v2_160b0 = inttoptr i32 %v1_160b0 to i8*
  %v3_160b0 = load i8, i8* %v2_160b0, align 1
  %v4_160b0 = zext i8 %v3_160b0 to i32
  %v1_160b4 = add nsw i32 %v3_1609c, -1
  store i32 %v1_160b4, i32* %r2.global-to-local, align 4
  store i32 %v4_160b0, i32* %r0.global-to-local, align 4
  %v2_160c0 = add i32 %v2_160dc, 40
  %v3_160c0 = inttoptr i32 %v2_160c0 to i32*
  store i32 0, i32* %v3_160c0, align 4
  %v0_160c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_160c4 = trunc i32 %v0_160c4 to i16
  %v2_160c4 = load i32, i32* @r4, align 4
  %v3_160c4 = inttoptr i32 %v2_160c4 to i16*
  store i16 %v1_160c4, i16* %v3_160c4, align 2
  br label %dec_label_pc_16168

dec_label_pc_160cc:                               ; preds = %dec_label_pc_1609c
  %v1_160cc = add i32 %v2_160dc, 16
  %v1_160d0 = inttoptr i32 %v1_160cc to i32*
  %v2_160d0 = load i32, i32* %v1_160d0, align 4
  %v3_160d0 = add i32 %v2_160dc, 20
  %v4_160d0 = inttoptr i32 %v3_160d0 to i32*
  %v5_160d0 = load i32, i32* %v4_160d0, align 4
  %v9_160d4 = icmp eq i32 %v5_160d0, %v2_160d0
  br i1 %v9_160d4, label %dec_label_pc_160e4, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_160cc
  %v2_160d8 = inttoptr i32 %v2_160d0 to i8*
  %v3_160d8 = load i8, i8* %v2_160d8, align 1
  %v4_160d8 = zext i8 %v3_160d8 to i32
  store i32 %v4_160d8, i32* %r0.global-to-local, align 4
  %v6_160d8 = add i32 %v2_160d0, 1
  store i32 %v6_160d8, i32* %v1_160d0, align 4
  br label %dec_label_pc_16168

dec_label_pc_160e4:                               ; preds = %dec_label_pc_160cc
  %v1_160e4 = add i32 %v2_160dc, 4
  %v2_160e4 = inttoptr i32 %v1_160e4 to i32*
  %v3_160e4 = load i32, i32* %v2_160e4, align 4
  %v7_160e8 = icmp eq i32 %v3_160e4, -2
  br i1 %v7_160e8, label %.thread8, label %dec_label_pc_160fc

.thread8:                                         ; preds = %dec_label_pc_160e4
  %v2_160ec = or i16 %v2_1609c, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_160ec, i16* %v1_1609c, align 2
  br label %dec_label_pc_16168

dec_label_pc_160fc:                               ; preds = %dec_label_pc_160e4
  %v1_160fc = and i32 %v3_1609c, 768
  %v2_160fc = icmp eq i32 %v1_160fc, 0
  br i1 %v2_160fc, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_160fc
  %v1_16104 = load i32, i32* @r5, align 4
  %v3_16104 = add i32 %v1_16104, 44
  %v4_16104 = inttoptr i32 %v3_16104 to i32*
  %v5_16104 = load i32, i32* %v4_16104, align 4
  store i32 %v5_16104, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_160fc, %bb22
  %v1_16108 = xor i1 %v2_160fc, true
  call void @__pseudo_cond_branch(i1 %v1_16108, i32 ptrtoint (i32* @global_var_15e44.805 to i32))
  %v0_1610c = load i32, i32* @r4, align 4
  %v1_1610c = add i32 %v0_1610c, 8
  store i32 %v1_1610c, i32* %r2.global-to-local, align 4
  %v1_16110 = inttoptr i32 %v1_1610c to i32*
  %v2_16110 = load i32, i32* %v1_16110, align 4
  store i32 %v2_16110, i32* %r2.global-to-local, align 4
  %v3_16110 = add i32 %v0_1610c, 12
  %v4_16110 = inttoptr i32 %v3_16110 to i32*
  %v5_16110 = load i32, i32* %v4_16110, align 4
  %v9_16114 = icmp eq i32 %v5_16110, %v2_16110
  br i1 %v9_16114, label %dec_label_pc_16148, label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %.thread10
  %v2_1611c = add i32 %v0_1610c, 24
  %v3_1611c = inttoptr i32 %v2_1611c to i32*
  store i32 %v2_16110, i32* %v3_1611c, align 4
  %v0_16120 = load i32, i32* @r4, align 4
  store i32 %v0_16120, i32* %r0.global-to-local, align 4
  %v2_16124 = call i32 @function_16e8c(i32 %v0_16120)
  store i32 %v2_16124, i32* %r0.global-to-local, align 4
  %v2_16128 = icmp eq i32 %v2_16124, 0
  br i1 %v2_16128, label %dec_label_pc_16164, label %dec_label_pc_16130

dec_label_pc_16130:                               ; preds = %dec_label_pc_1611c
  %v0_16130 = load i32, i32* @r4, align 4
  %v1_16130 = add i32 %v0_16130, 20
  %v2_16130 = inttoptr i32 %v1_16130 to i32*
  %v3_16130 = load i32, i32* %v2_16130, align 4
  %v2_16134 = add i32 %v0_16130, 24
  %v3_16134 = inttoptr i32 %v2_16134 to i32*
  store i32 %v3_16130, i32* %v3_16134, align 4
  %v0_16138 = load i32, i32* @r4, align 4
  %v1_16138 = add i32 %v0_16138, 16
  %v2_16138 = inttoptr i32 %v1_16138 to i32*
  %v3_16138 = load i32, i32* %v2_16138, align 4
  %v1_1613c = inttoptr i32 %v3_16138 to i8*
  %v2_1613c = load i8, i8* %v1_1613c, align 1
  %v3_1613c = zext i8 %v2_1613c to i32
  store i32 %v3_1613c, i32* %r0.global-to-local, align 4
  %v5_1613c = add i32 %v3_16138, 1
  store i32 %v5_1613c, i32* %v2_16138, align 4
  br label %dec_label_pc_16168

dec_label_pc_16148:                               ; preds = %.thread10
  %v1_16148 = inttoptr i32 %v0_1610c to i16*
  store i32 %v0_1610c, i32* %r0.global-to-local, align 4
  %v2_1614c = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_16154 = call i32 @function_16d80(i16* %v1_16148, i32 %v2_1614c, i32 1)
  store i32 %v5_16154, i32* %r0.global-to-local, align 4
  %v2_16158 = icmp eq i32 %v5_16154, 0
  br i1 %v2_16158, label %dec_label_pc_16164, label %bb23

bb23:                                             ; preds = %dec_label_pc_16148
  %v4_1615c = load i8, i8* %stack_var_-17, align 1
  %v5_1615c = sext i8 %v4_1615c to i32
  store i32 %v5_1615c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16168

dec_label_pc_16164:                               ; preds = %dec_label_pc_16148, %dec_label_pc_1608c, %dec_label_pc_1611c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16168

dec_label_pc_16168:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_16130, %dec_label_pc_160a8, %dec_label_pc_16164
  %v2_1616c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1616c, i32* @r4, align 4
  store i32 %v6_16050, i32* @r5, align 4
  store i32 %v9_16050, i32* @lr, align 4
  %v1_16170 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16170

; uselistorder directives
  uselistorder i32 %v2_160d0, { 1, 0, 2 }
  uselistorder i32 %v2_160dc, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_16054, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16054, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 0, 11, 3, 2, 12, 4, 5, 6, 7, 8, 13, 10 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 128, { 5, 0, 4, 6, 1, 7, 10, 8, 9, 2, 3, 11, 12 }
  uselistorder label %dec_label_pc_16168, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_16164, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_16174() local_unnamed_addr {
dec_label_pc_16174:
  %v0_16174 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16174, label %bb, label %dec_label_pc_16174..thread_crit_edge

dec_label_pc_16174..thread_crit_edge:             ; preds = %dec_label_pc_16174
  %v4_16178.pre = load i32, i32* @r0, align 4
  br label %.thread

bb:                                               ; preds = %dec_label_pc_16174
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16174..thread_crit_edge, %bb
  %v4_16178 = phi i32 [ %v4_16178.pre, %dec_label_pc_16174..thread_crit_edge ], [ 0, %bb ]
  ret i32 %v4_16178

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1617c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1617c:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_1617c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16180 = icmp eq i32 %arg2, 0
  store i1 %v2_16180, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_16208, label %dec_label_pc_161f0.preheader

dec_label_pc_161f0.preheader:                     ; preds = %dec_label_pc_1617c
  store i32 %tmp, i32* @r5, align 4
  %v1_161f02 = add i32 %arg2, -1
  store i32 %v1_161f02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_161f08 = icmp eq i32 %arg2, 1
  store i1 %v7_161f08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_161f08, label %dec_label_pc_161f8, label %dec_label_pc_1619c

dec_label_pc_1619c:                               ; preds = %dec_label_pc_161f0.preheader, %dec_label_pc_161f0.backedge.dec_label_pc_1619c_crit_edge
  %v0_161c0 = phi i32 [ %v0_1619c.pre, %dec_label_pc_161f0.backedge.dec_label_pc_1619c_crit_edge ], [ %arg3, %dec_label_pc_161f0.preheader ]
  %v1_1619c = add i32 %v0_161c0, 16
  %v2_1619c = inttoptr i32 %v1_1619c to i32*
  %v3_1619c = load i32, i32* %v2_1619c, align 4
  store i32 %v3_1619c, i32* %r2.global-to-local, align 4
  %v1_161a0 = add i32 %v0_161c0, 24
  %v2_161a0 = inttoptr i32 %v1_161a0 to i32*
  %v3_161a0 = load i32, i32* %v2_161a0, align 4
  store i32 %v3_161a0, i32* %r3.global-to-local, align 4
  %v3_161a4 = icmp uge i32 %v3_1619c, %v3_161a0
  store i1 %v3_161a4, i1* %cpsr_c.global-to-local, align 1
  %v9_161a4 = icmp eq i32 %v3_1619c, %v3_161a0
  store i1 %v9_161a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_161a4, label %dec_label_pc_161c0, label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %dec_label_pc_1619c
  %v1_161ac = inttoptr i32 %v3_1619c to i8*
  %v2_161ac = load i8, i8* %v1_161ac, align 1
  %v3_161ac = zext i8 %v2_161ac to i32
  store i32 %v3_161ac, i32* %r3.global-to-local, align 4
  %v5_161ac = add i32 %v3_1619c, 1
  store i32 %v5_161ac, i32* %r2.global-to-local, align 4
  %v2_161b0 = load i32, i32* @r5, align 4
  %v3_161b0 = inttoptr i32 %v2_161b0 to i8*
  store i8 %v2_161ac, i8* %v3_161b0, align 1
  %v4_161b0 = load i32, i32* @r5, align 4
  %v5_161b0 = add i32 %v4_161b0, 1
  store i32 %v5_161b0, i32* @r5, align 4
  %v0_161b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_161b4 = icmp ugt i32 %v0_161b4, 9
  store i1 %v2_161b4, i1* %cpsr_c.global-to-local, align 1
  %v7_161b4 = icmp eq i32 %v0_161b4, 10
  store i1 %v7_161b4, i1* %cpsr_z.global-to-local, align 1
  %v0_161b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_161b8 = load i32, i32* @r4, align 4
  %v2_161b8 = add i32 %v1_161b8, 16
  %v3_161b8 = inttoptr i32 %v2_161b8 to i32*
  store i32 %v0_161b8, i32* %v3_161b8, align 4
  br i1 %v7_161b4, label %dec_label_pc_161f8, label %dec_label_pc_161f0.backedge

dec_label_pc_161c0:                               ; preds = %dec_label_pc_1619c
  %v1_161c0 = inttoptr i32 %v0_161c0 to i16*
  %v3_161c4 = call i32 @function_16050(i16* %v1_161c0)
  %v3_161c8 = icmp eq i32 %v3_161c4, -1
  store i1 %v3_161c8, i1* %cpsr_c.global-to-local, align 1
  %v8_161c8 = icmp eq i32 %v3_161c4, -1
  store i1 %v8_161c8, i1* %cpsr_z.global-to-local, align 1
  %v1_161cc = urem i32 %v3_161c4, 256
  store i32 %v1_161cc, i32* %r3.global-to-local, align 4
  br i1 %v3_161c8, label %dec_label_pc_161d4, label %dec_label_pc_161ec

dec_label_pc_161d4:                               ; preds = %dec_label_pc_161c0
  %v0_161d4 = load i32, i32* @r4, align 4
  %v1_161d4 = inttoptr i32 %v0_161d4 to i16*
  %v2_161d4 = load i16, i16* %v1_161d4, align 2
  %v3_161d4 = zext i16 %v2_161d4 to i32
  store i32 %v3_161d4, i32* %r3.global-to-local, align 4
  %v1_161d8 = and i32 %v3_161d4, 8
  %v2_161d8 = icmp eq i32 %v1_161d8, 0
  store i1 %v2_161d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_161d8, label %dec_label_pc_161f8, label %dec_label_pc_16208

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161c0
  %v1_161e4 = trunc i32 %v3_161c4 to i8
  %v2_161e4 = load i32, i32* @r5, align 4
  %v3_161e4 = inttoptr i32 %v2_161e4 to i8*
  store i8 %v1_161e4, i8* %v3_161e4, align 1
  %v4_161e4 = load i32, i32* @r5, align 4
  %v5_161e4 = add i32 %v4_161e4, 1
  store i32 %v5_161e4, i32* @r5, align 4
  %v0_161e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_161e8 = icmp ugt i32 %v0_161e8, 9
  store i1 %v2_161e8, i1* %cpsr_c.global-to-local, align 1
  %v7_161e8 = icmp eq i32 %v0_161e8, 10
  store i1 %v7_161e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_161e8, label %dec_label_pc_161f8, label %dec_label_pc_161f0.backedge

dec_label_pc_161f0.backedge:                      ; preds = %dec_label_pc_161ec, %dec_label_pc_161ac
  %v0_161f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_161f0 = add i32 %v0_161f0, -1
  store i32 %v1_161f0, i32* %r6.global-to-local, align 4
  %v2_161f0 = icmp ne i32 %v0_161f0, 0
  store i1 %v2_161f0, i1* %cpsr_c.global-to-local, align 1
  %v7_161f0 = icmp eq i32 %v0_161f0, 1
  store i1 %v7_161f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_161f0, label %dec_label_pc_161f8, label %dec_label_pc_161f0.backedge.dec_label_pc_1619c_crit_edge

dec_label_pc_161f0.backedge.dec_label_pc_1619c_crit_edge: ; preds = %dec_label_pc_161f0.backedge
  %v0_1619c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1619c

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161ec, %dec_label_pc_161f0.backedge, %dec_label_pc_161ac, %dec_label_pc_161f0.preheader, %dec_label_pc_161d4
  %v0_161f8 = load i32, i32* @r5, align 4
  %v1_161f8 = load i32, i32* @r7, align 4
  %v3_161f8 = icmp uge i32 %v0_161f8, %v1_161f8
  store i1 %v3_161f8, i1* %cpsr_c.global-to-local, align 1
  %v9_161f8 = icmp eq i32 %v0_161f8, %v1_161f8
  store i1 %v9_161f8, i1* %cpsr_z.global-to-local, align 1
  %v2_161fc = xor i1 %v9_161f8, true
  %v3_161fc = and i1 %v3_161f8, %v2_161fc
  br i1 %v3_161fc, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_161f8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_16200 = inttoptr i32 %v0_161f8 to i8*
  store i8 0, i8* %v7_16200, align 1
  %v0_16204.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_16204.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_161f8, %bb
  %v1_16204 = phi i1 [ %v1_16204.pre, %bb ], [ %v9_161f8, %dec_label_pc_161f8 ]
  %v0_16204 = phi i1 [ %v0_16204.pre, %bb ], [ %v3_161f8, %dec_label_pc_161f8 ]
  %v2_16204 = xor i1 %v1_16204, true
  %v3_16204 = and i1 %v0_16204, %v2_16204
  br i1 %v3_16204, label %.dec_label_pc_1620c_crit_edge, label %dec_label_pc_16208

.dec_label_pc_1620c_crit_edge:                    ; preds = %.thread14
  %v0_1620c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1620c

dec_label_pc_16208:                               ; preds = %dec_label_pc_1617c, %dec_label_pc_161d4, %.thread14
  br label %dec_label_pc_1620c

dec_label_pc_1620c:                               ; preds = %.dec_label_pc_1620c_crit_edge, %dec_label_pc_16208
  %v0_1620c = phi i32 [ %v0_1620c.pre, %.dec_label_pc_1620c_crit_edge ], [ 0, %dec_label_pc_16208 ]
  store i32 %v6_1617c, i32* @r5, align 4
  ret i32 %v0_1620c

; uselistorder directives
  uselistorder i1 %v9_161f8, { 1, 0, 2 }
  uselistorder i32 %v1_161f8, { 1, 0 }
  uselistorder i32 %v0_161f8, { 0, 2, 1 }
  uselistorder i32 %v0_161f0, { 2, 0, 1 }
  uselistorder i32 %v0_161e8, { 1, 0 }
  uselistorder i32 %v3_161c4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_161b4, { 1, 0 }
  uselistorder i32 %v3_1619c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_161c0, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i1 true, { 0, 1, 72, 101, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 70, 28, 29, 30, 31, 32, 78, 107, 121, 67, 71, 76, 111, 80, 79, 33, 102, 103, 92, 104, 105, 36, 106, 37, 38, 93, 108, 109, 110, 69, 77, 112, 113, 114, 115, 116, 117, 118, 34, 35, 119, 120, 91, 90, 49, 50, 51, 122, 52, 53, 81, 82, 86, 83, 87, 74, 85, 123, 75, 89, 124, 39, 125, 40, 41, 42, 126, 94, 95, 43, 44, 127, 96, 97, 45, 46, 128, 98, 99, 47, 48, 73, 129, 130, 88, 131, 54, 84, 55, 56, 68, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 100 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1620c, { 1, 0 }
  uselistorder label %dec_label_pc_16208, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_161f8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1619c, { 1, 0 }
}

define i32 @function_16220() local_unnamed_addr {
dec_label_pc_16220:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_16220 = load i32, i32* @r1, align 4
  %v1_16220 = load i32, i32* @r0, align 4
  %v2_16220 = sub i32 %v0_16220, %v1_16220
  %v3_16220 = icmp ult i32 %v0_16220, %v1_16220
  %v4_16220 = xor i32 %v1_16220, %v0_16220
  %v5_16220 = xor i32 %v2_16220, %v0_16220
  %v6_16220 = and i32 %v5_16220, %v4_16220
  %v7_16220 = icmp slt i32 %v6_16220, 0
  store i1 %v7_16220, i1* %cpsr_v.global-to-local, align 1
  %v8_16220 = icmp slt i32 %v2_16220, 0
  store i1 %v8_16220, i1* %cpsr_n.global-to-local, align 1
  %v9_16220 = icmp eq i32 %v0_16220, %v1_16220
  store i1 %v9_16220, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16220, label %dec_label_pc_16474, label %dec_label_pc_16228

dec_label_pc_16228:                               ; preds = %dec_label_pc_16220
  br i1 %v9_16220, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_16228
  %merge = phi i32 [ %v0_16220, %dec_label_pc_16228 ], [ %v2_16508, %bb150 ], [ %v11_16524, %bb153 ], [ %v7_16524, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_16228
  %v5_1622c = inttoptr i32 %v1_16220 to i8*
  store i8* %v5_1622c, i8** %stack_var_-8, align 4
  %v8_1622c = load i32, i32* @lr, align 4
  %v0_16230 = load i32, i32* @r2, align 4
  %v2_16230 = add i32 %v0_16230, -4
  store i32 %v2_16230, i32* %r2.global-to-local, align 4
  %v4_16230 = sub i32 3, %v0_16230
  %v5_16230 = and i32 %v4_16230, %v0_16230
  %v6_16230 = icmp slt i32 %v5_16230, 0
  store i1 %v6_16230, i1* %cpsr_v.global-to-local, align 1
  %v7_16230 = icmp slt i32 %v2_16230, 0
  store i1 %v7_16230, i1* %cpsr_n.global-to-local, align 1
  %v8_16230 = icmp eq i32 %v0_16230, 4
  store i1 %v8_16230, i1* %cpsr_z.global-to-local, align 1
  %v5_16234 = icmp slt i32 %v0_16230, 4
  br i1 %v5_16234, label %bb140, label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %bb
  %v1_16238 = urem i32 %v1_16220, 4
  store i32 %v1_16238, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16238 = icmp eq i32 %v1_16238, 0
  store i1 %v2_16238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16238, label %dec_label_pc_16240, label %dec_label_pc_162ec

dec_label_pc_16240:                               ; preds = %dec_label_pc_16238
  %v1_16240 = urem i32 %v0_16220, 4
  store i32 %v1_16240, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16240 = icmp eq i32 %v1_16240, 0
  store i1 %v2_16240, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_16220 to i2
  br i1 %v2_16240, label %dec_label_pc_16248, label %dec_label_pc_1631c

dec_label_pc_16248:                               ; preds = %dec_label_pc_16240, %dec_label_pc_16314
  %v0_1626094 = phi i32 [ %v1_16220, %dec_label_pc_16240 ], [ %v0_1643c77, %dec_label_pc_16314 ]
  %v0_1625c93 = phi i32 [ %v0_16220, %dec_label_pc_16240 ], [ %v0_16314, %dec_label_pc_16314 ]
  %v0_16248 = phi i32 [ %v2_16230, %dec_label_pc_16240 ], [ %v2_1630c, %dec_label_pc_16314 ]
  %v1_16248 = add i32 %v0_16248, -8
  store i32 %v1_16248, i32* %r2.global-to-local, align 4
  %v3_16248 = sub i32 7, %v0_16248
  %v4_16248 = and i32 %v3_16248, %v0_16248
  %v5_16248 = icmp slt i32 %v4_16248, 0
  store i1 %v5_16248, i1* %cpsr_v.global-to-local, align 1
  %v6_16248 = icmp slt i32 %v1_16248, 0
  store i1 %v6_16248, i1* %cpsr_n.global-to-local, align 1
  %v7_16248 = icmp eq i32 %v0_16248, 8
  store i1 %v7_16248, i1* %cpsr_z.global-to-local, align 1
  %v2_1624c = xor i1 %v6_16248, %v5_16248
  br i1 %v2_1624c, label %dec_label_pc_1629c, label %dec_label_pc_16250

dec_label_pc_16250:                               ; preds = %dec_label_pc_16248
  %v1_16250 = add i32 %v0_16248, -28
  store i32 %v1_16250, i32* %r2.global-to-local, align 4
  %v3_16250 = sub i32 27, %v0_16248
  %v4_16250 = and i32 %v3_16250, %v1_16248
  %v5_16250 = icmp slt i32 %v4_16250, 0
  store i1 %v5_16250, i1* %cpsr_v.global-to-local, align 1
  %v6_16250 = icmp slt i32 %v1_16250, 0
  store i1 %v6_16250, i1* %cpsr_n.global-to-local, align 1
  %v7_16250 = icmp eq i32 %v1_16248, 20
  store i1 %v7_16250, i1* %cpsr_z.global-to-local, align 1
  %v2_16254 = xor i1 %v6_16250, %v5_16250
  br i1 %v2_16254, label %dec_label_pc_16288, label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %dec_label_pc_16250
  %v0_16258 = load i32, i32* @r4, align 4
  store i32 %v0_16258, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1625c

dec_label_pc_1625c:                               ; preds = %dec_label_pc_1625c.dec_label_pc_1625c_crit_edge, %dec_label_pc_16258
  %v0_16260 = phi i32 [ %v12_16268, %dec_label_pc_1625c.dec_label_pc_1625c_crit_edge ], [ %v0_1626094, %dec_label_pc_16258 ]
  %v0_1625c = phi i32 [ %v0_1625c.pre, %dec_label_pc_1625c.dec_label_pc_1625c_crit_edge ], [ %v0_1625c93, %dec_label_pc_16258 ]
  %v1_1625c = inttoptr i32 %v0_1625c to i32*
  %v2_1625c = load i32, i32* %v1_1625c, align 4
  %v3_1625c = add i32 %v0_1625c, 4
  %v4_1625c = inttoptr i32 %v3_1625c to i32*
  %v5_1625c = load i32, i32* %v4_1625c, align 4
  store i32 %v5_1625c, i32* %r4.global-to-local, align 4
  %v6_1625c = add i32 %v0_1625c, 8
  %v7_1625c = inttoptr i32 %v6_1625c to i32*
  %v8_1625c = load i32, i32* %v7_1625c, align 4
  store i32 %v8_1625c, i32* %ip.global-to-local, align 4
  %v9_1625c = add i32 %v0_1625c, 12
  %v10_1625c = inttoptr i32 %v9_1625c to i32*
  %v11_1625c = load i32, i32* %v10_1625c, align 4
  store i32 %v11_1625c, i32* %lr.global-to-local, align 4
  %v12_1625c = add i32 %v0_1625c, 16
  store i32 %v12_1625c, i32* %r1.global-to-local, align 4
  %v1_16260 = inttoptr i32 %v0_16260 to i32*
  store i32 %v2_1625c, i32* %v1_16260, align 4
  %v3_16260 = add i32 %v0_16260, 4
  %v4_16260 = inttoptr i32 %v3_16260 to i32*
  %v5_16260 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16260, i32* %v4_16260, align 4
  %v6_16260 = add i32 %v0_16260, 8
  %v7_16260 = inttoptr i32 %v6_16260 to i32*
  %v8_16260 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_16260, i32* %v7_16260, align 4
  %v9_16260 = add i32 %v0_16260, 12
  %v10_16260 = inttoptr i32 %v9_16260 to i32*
  %v11_16260 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16260, i32* %v10_16260, align 4
  %v12_16260 = add i32 %v0_16260, 16
  store i32 %v12_16260, i32* %r0.global-to-local, align 4
  %v0_16264 = load i32, i32* %r1.global-to-local, align 4
  %v1_16264 = inttoptr i32 %v0_16264 to i32*
  %v2_16264 = load i32, i32* %v1_16264, align 4
  store i32 %v2_16264, i32* @r3, align 4
  %v3_16264 = add i32 %v0_16264, 4
  %v4_16264 = inttoptr i32 %v3_16264 to i32*
  %v5_16264 = load i32, i32* %v4_16264, align 4
  store i32 %v5_16264, i32* %r4.global-to-local, align 4
  %v6_16264 = add i32 %v0_16264, 8
  %v7_16264 = inttoptr i32 %v6_16264 to i32*
  %v8_16264 = load i32, i32* %v7_16264, align 4
  store i32 %v8_16264, i32* @ip, align 4
  %v9_16264 = add i32 %v0_16264, 12
  %v10_16264 = inttoptr i32 %v9_16264 to i32*
  %v11_16264 = load i32, i32* %v10_16264, align 4
  store i32 %v11_16264, i32* %lr.global-to-local, align 4
  %v12_16264 = add i32 %v0_16264, 16
  store i32 %v12_16264, i32* @r1, align 4
  %v1_16268 = inttoptr i32 %v12_16260 to i32*
  store i32 %v2_16264, i32* %v1_16268, align 4
  %v3_16268 = add i32 %v0_16260, 20
  %v4_16268 = inttoptr i32 %v3_16268 to i32*
  %v5_16268 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16268, i32* %v4_16268, align 4
  %v6_16268 = add i32 %v0_16260, 24
  %v7_16268 = inttoptr i32 %v6_16268 to i32*
  %v8_16268 = load i32, i32* @ip, align 4
  store i32 %v8_16268, i32* %v7_16268, align 4
  %v9_16268 = add i32 %v0_16260, 28
  %v10_16268 = inttoptr i32 %v9_16268 to i32*
  %v11_16268 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16268, i32* %v10_16268, align 4
  %v12_16268 = add i32 %v0_16260, 32
  store i32 %v12_16268, i32* @r0, align 4
  %v0_1626c = load i32, i32* %r2.global-to-local, align 4
  %v1_1626c = add i32 %v0_1626c, -32
  store i32 %v1_1626c, i32* %r2.global-to-local, align 4
  %v3_1626c = sub i32 31, %v0_1626c
  %v4_1626c = and i32 %v3_1626c, %v0_1626c
  %v5_1626c = icmp slt i32 %v4_1626c, 0
  %v6_1626c = icmp slt i32 %v1_1626c, 0
  %v2_16270 = xor i1 %v6_1626c, %v5_1626c
  br i1 %v2_16270, label %dec_label_pc_16274, label %dec_label_pc_1625c.dec_label_pc_1625c_crit_edge

dec_label_pc_1625c.dec_label_pc_1625c_crit_edge:  ; preds = %dec_label_pc_1625c
  %v0_1625c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1625c

dec_label_pc_16274:                               ; preds = %dec_label_pc_1625c
  %v1_16274 = add i32 %v0_1626c, -16
  %v3_16274 = add i32 %v0_1626c, 2147483616
  %v4_16274 = and i32 %v1_16274, %v3_16274
  %v5_16274 = icmp slt i32 %v4_16274, 0
  store i1 %v5_16274, i1* %cpsr_v.global-to-local, align 1
  %v6_16274 = icmp slt i32 %v1_16274, 0
  store i1 %v6_16274, i1* %cpsr_n.global-to-local, align 1
  %v7_16274 = icmp eq i32 %v1_16274, 0
  store i1 %v7_16274, i1* %cpsr_z.global-to-local, align 1
  %v2_16278 = xor i1 %v6_16274, %v5_16274
  br i1 %v2_16278, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_16274
  %v3_16278 = load i32, i32* @r1, align 4
  %v4_16278 = inttoptr i32 %v3_16278 to i32*
  %v5_16278 = load i32, i32* %v4_16278, align 4
  store i32 %v5_16278, i32* @r3, align 4
  %v6_16278 = add i32 %v3_16278, 4
  %v7_16278 = inttoptr i32 %v6_16278 to i32*
  %v8_16278 = load i32, i32* %v7_16278, align 4
  store i32 %v8_16278, i32* %r4.global-to-local, align 4
  %v9_16278 = add i32 %v3_16278, 8
  %v10_16278 = inttoptr i32 %v9_16278 to i32*
  %v11_16278 = load i32, i32* %v10_16278, align 4
  store i32 %v11_16278, i32* @ip, align 4
  %v12_16278 = add i32 %v3_16278, 12
  %v13_16278 = inttoptr i32 %v12_16278 to i32*
  %v14_16278 = load i32, i32* %v13_16278, align 4
  store i32 %v14_16278, i32* %lr.global-to-local, align 4
  %v15_16278 = add i32 %v3_16278, 16
  store i32 %v15_16278, i32* @r1, align 4
  %v4_1627c = inttoptr i32 %v12_16268 to i32*
  store i32 %v5_16278, i32* %v4_1627c, align 4
  %v6_1627c = add i32 %v0_16260, 36
  %v7_1627c = inttoptr i32 %v6_1627c to i32*
  %v8_1627c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1627c, i32* %v7_1627c, align 4
  %v9_1627c = add i32 %v0_16260, 40
  %v10_1627c = inttoptr i32 %v9_1627c to i32*
  %v11_1627c = load i32, i32* @ip, align 4
  store i32 %v11_1627c, i32* %v10_1627c, align 4
  %v12_1627c = add i32 %v0_16260, 44
  %v13_1627c = inttoptr i32 %v12_1627c to i32*
  %v14_1627c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1627c, i32* %v13_1627c, align 4
  %v15_1627c = add i32 %v0_16260, 48
  store i32 %v15_1627c, i32* @r0, align 4
  %v3_16280 = load i32, i32* %r2.global-to-local, align 4
  %v4_16280 = add i32 %v3_16280, -16
  store i32 %v4_16280, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_16274, %bb136
  %v3_16290102111 = phi i32 [ %v15_1627c, %bb136 ], [ %v12_16268, %dec_label_pc_16274 ]
  %v0_16288.pre = phi i32 [ %v4_16280, %bb136 ], [ %v1_1626c, %dec_label_pc_16274 ]
  %v2_16284 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16284, i32* @r4, align 4
  br label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %dec_label_pc_16250, %bb137
  %v3_16290101 = phi i32 [ %v0_1626094, %dec_label_pc_16250 ], [ %v3_16290102111, %bb137 ]
  %v0_16288 = phi i32 [ %v1_16250, %dec_label_pc_16250 ], [ %v0_16288.pre, %bb137 ]
  %v1_16288 = add i32 %v0_16288, 20
  store i32 %v1_16288, i32* %r2.global-to-local, align 4
  %v3_16288 = sub i32 0, %v0_16288
  %v4_16288 = and i32 %v1_16288, %v3_16288
  %v5_16288 = icmp slt i32 %v4_16288, 0
  store i1 %v5_16288, i1* %cpsr_v.global-to-local, align 1
  %v6_16288 = icmp slt i32 %v1_16288, 0
  store i1 %v6_16288, i1* %cpsr_n.global-to-local, align 1
  %v7_16288 = icmp eq i32 %v1_16288, 0
  store i1 %v7_16288, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1628c

dec_label_pc_1628c:                               ; preds = %.thread115, %dec_label_pc_16288
  %v0_1629c.pre157 = phi i32 [ %v0_1629c.pre, %.thread115 ], [ %v1_16288, %dec_label_pc_16288 ]
  %v3_16290 = phi i32 [ %v3_1629099116, %.thread115 ], [ %v3_16290101, %dec_label_pc_16288 ]
  %v1_16294 = phi i1 [ %v1_16298, %.thread115 ], [ %v5_16288, %dec_label_pc_16288 ]
  %v0_16294 = phi i1 [ %v0_16298, %.thread115 ], [ %v6_16288, %dec_label_pc_16288 ]
  %v2_1628c = xor i1 %v1_16294, %v0_16294
  br i1 %v2_1628c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1628c
  %v3_1628c = load i32, i32* @r1, align 4
  %v4_1628c = inttoptr i32 %v3_1628c to i32*
  %v5_1628c = load i32, i32* %v4_1628c, align 4
  store i32 %v5_1628c, i32* @r3, align 4
  %v6_1628c = add i32 %v3_1628c, 4
  %v7_1628c = inttoptr i32 %v6_1628c to i32*
  %v8_1628c = load i32, i32* %v7_1628c, align 4
  store i32 %v8_1628c, i32* @ip, align 4
  %v9_1628c = add i32 %v3_1628c, 8
  %v10_1628c = inttoptr i32 %v9_1628c to i32*
  %v11_1628c = load i32, i32* %v10_1628c, align 4
  store i32 %v11_1628c, i32* %lr.global-to-local, align 4
  %v12_1628c = add i32 %v3_1628c, 12
  store i32 %v12_1628c, i32* @r1, align 4
  %v4_16290 = inttoptr i32 %v3_16290 to i32*
  store i32 %v5_1628c, i32* %v4_16290, align 4
  %v6_16290 = add i32 %v3_16290, 4
  %v7_16290 = inttoptr i32 %v6_16290 to i32*
  %v8_16290 = load i32, i32* @ip, align 4
  store i32 %v8_16290, i32* %v7_16290, align 4
  %v9_16290 = add i32 %v3_16290, 8
  %v10_16290 = inttoptr i32 %v9_16290 to i32*
  %v11_16290 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_16290, i32* %v10_16290, align 4
  %v12_16290 = add i32 %v3_16290, 12
  store i32 %v12_16290, i32* @r0, align 4
  %v3_16294 = load i32, i32* %r2.global-to-local, align 4
  %v4_16294 = add i32 %v3_16294, -12
  store i32 %v4_16294, i32* %r2.global-to-local, align 4
  %v6_16294 = sub i32 11, %v3_16294
  %v7_16294 = and i32 %v6_16294, %v3_16294
  %v8_16294 = icmp slt i32 %v7_16294, 0
  store i1 %v8_16294, i1* %cpsr_v.global-to-local, align 1
  %v9_16294 = icmp slt i32 %v4_16294, 0
  store i1 %v9_16294, i1* %cpsr_n.global-to-local, align 1
  %v10_16294 = icmp eq i32 %v3_16294, 12
  store i1 %v10_16294, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1628c, %bb138
  %v0_1629c.pre = phi i32 [ %v4_16294, %bb138 ], [ %v0_1629c.pre157, %dec_label_pc_1628c ]
  %v3_1629099116 = phi i32 [ %v12_16290, %bb138 ], [ %v3_16290, %dec_label_pc_1628c ]
  %v1_16298 = phi i1 [ %v8_16294, %bb138 ], [ %v1_16294, %dec_label_pc_1628c ]
  %v0_16298 = phi i1 [ %v9_16294, %bb138 ], [ %v0_16294, %dec_label_pc_1628c ]
  %v2_16298 = xor i1 %v1_16298, %v0_16298
  br i1 %v2_16298, label %dec_label_pc_1629c, label %dec_label_pc_1628c

dec_label_pc_1629c:                               ; preds = %.thread115, %dec_label_pc_16248
  %v4_162ac = phi i32 [ %v0_1626094, %dec_label_pc_16248 ], [ %v3_1629099116, %.thread115 ]
  %v0_1629c = phi i32 [ %v1_16248, %dec_label_pc_16248 ], [ %v0_1629c.pre, %.thread115 ]
  %v1_1629c = add i32 %v0_1629c, 8
  store i32 %v1_1629c, i32* %r2.global-to-local, align 4
  %v3_1629c = sub i32 0, %v0_1629c
  %v4_1629c = and i32 %v1_1629c, %v3_1629c
  %v5_1629c = icmp slt i32 %v4_1629c, 0
  store i1 %v5_1629c, i1* %cpsr_v.global-to-local, align 1
  %v6_1629c = icmp slt i32 %v1_1629c, 0
  store i1 %v6_1629c, i1* %cpsr_n.global-to-local, align 1
  %v7_1629c = icmp eq i32 %v1_1629c, 0
  store i1 %v7_1629c, i1* %cpsr_z.global-to-local, align 1
  %v2_162a0 = xor i1 %v6_1629c, %v5_1629c
  br i1 %v2_162a0, label %bb140, label %dec_label_pc_162a4

dec_label_pc_162a4:                               ; preds = %dec_label_pc_1629c
  %v1_162a4 = add i32 %v0_1629c, 4
  store i32 %v1_162a4, i32* %r2.global-to-local, align 4
  %v3_162a4 = sub i32 -5, %v0_1629c
  %v4_162a4 = and i32 %v3_162a4, %v1_1629c
  %v5_162a4 = icmp slt i32 %v4_162a4, 0
  store i1 %v5_162a4, i1* %cpsr_v.global-to-local, align 1
  %v6_162a4 = icmp slt i32 %v1_162a4, 0
  store i1 %v6_162a4, i1* %cpsr_n.global-to-local, align 1
  %v7_162a4 = icmp eq i32 %v1_1629c, 4
  store i1 %v7_162a4, i1* %cpsr_z.global-to-local, align 1
  %v2_162a8 = xor i1 %v6_162a4, %v5_162a4
  %v3_162a8 = load i32, i32* @r1, align 4
  %v4_162a8 = inttoptr i32 %v3_162a8 to i32*
  %v5_162a8 = load i32, i32* %v4_162a8, align 4
  store i32 %v5_162a8, i32* @r3, align 4
  %v7_162a8 = add i32 %v3_162a8, 4
  br i1 %v2_162a8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_162a4
  store i32 %v7_162a8, i32* @r1, align 4
  %v5_162ac = inttoptr i32 %v4_162ac to i32*
  store i32 %v5_162a8, i32* %v5_162ac, align 4
  %v6_162ac = load i32, i32* @r0, align 4
  %v7_162ac = add i32 %v6_162ac, 4
  store i32 %v7_162ac, i32* @r0, align 4
  %v0_162bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_162a4
  %v7_162b0 = inttoptr i32 %v7_162a8 to i32*
  %v8_162b0 = load i32, i32* %v7_162b0, align 4
  store i32 %v8_162b0, i32* @ip, align 4
  %v9_162b0 = add i32 %v3_162a8, 8
  store i32 %v9_162b0, i32* @r1, align 4
  %v4_162b4 = inttoptr i32 %v4_162ac to i32*
  store i32 %v5_162a8, i32* %v4_162b4, align 4
  %v6_162b4 = add i32 %v4_162ac, 4
  %v7_162b4 = inttoptr i32 %v6_162b4 to i32*
  %v8_162b4 = load i32, i32* @ip, align 4
  store i32 %v8_162b4, i32* %v7_162b4, align 4
  %v9_162b4 = add i32 %v4_162ac, 8
  store i32 %v9_162b4, i32* @r0, align 4
  %v3_162b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_162b8 = add i32 %v3_162b8, -4
  store i32 %v4_162b8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1629c, %bb, %dec_label_pc_1646c, %dec_label_pc_16400, %dec_label_pc_16394, %bb139
  %v0_162bc = phi i32 [ %v0_162bc.pre, %.thread122 ], [ %v2_1630c, %.thread128 ], [ %v1_1629c, %dec_label_pc_1629c ], [ %v2_16230, %bb ], [ %v0_162bc61, %dec_label_pc_1646c ], [ %v0_162bc60, %dec_label_pc_16400 ], [ %v0_162bc59, %dec_label_pc_16394 ], [ %v4_162b8, %bb139 ]
  %v1_162bc = add i32 %v0_162bc, 4
  store i32 %v1_162bc, i32* %r2.global-to-local, align 4
  %v3_162bc = sub i32 0, %v0_162bc
  %v4_162bc = and i32 %v1_162bc, %v3_162bc
  %v5_162bc = icmp slt i32 %v4_162bc, 0
  store i1 %v5_162bc, i1* %cpsr_v.global-to-local, align 1
  %v6_162bc = icmp slt i32 %v1_162bc, 0
  store i1 %v6_162bc, i1* %cpsr_n.global-to-local, align 1
  %v7_162bc = icmp eq i32 %v1_162bc, 0
  store i1 %v7_162bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_162bc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_162c4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_162c0 = load i8*, i8** %stack_var_-8, align 4
  %v4_162c0 = ptrtoint i8* %v3_162c0 to i32
  store i32 %v4_162c0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_162c4 = phi i32 [ %v0_162c4.pre, %bb140.bb142_crit_edge ], [ %v8_1622c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_162bc, i32 %v0_162c4)
  %v0_162c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_162c8 = add i32 %v0_162c8, -2
  %v3_162c8 = sub i32 1, %v0_162c8
  %v4_162c8 = and i32 %v3_162c8, %v0_162c8
  %v5_162c8 = icmp slt i32 %v4_162c8, 0
  store i1 %v5_162c8, i1* %cpsr_v.global-to-local, align 1
  %v6_162c8 = icmp slt i32 %v1_162c8, 0
  store i1 %v6_162c8, i1* %cpsr_n.global-to-local, align 1
  %v7_162c8 = icmp eq i32 %v0_162c8, 2
  store i1 %v7_162c8, i1* %cpsr_z.global-to-local, align 1
  %v0_162cc = load i32, i32* @r1, align 4
  %v1_162cc = inttoptr i32 %v0_162cc to i8*
  %v2_162cc = load i8, i8* %v1_162cc, align 1
  %v5_162cc = add i32 %v0_162cc, 1
  store i32 %v5_162cc, i32* %r1.global-to-local, align 4
  %v2_162d0 = load i32, i32* @r0, align 4
  %v3_162d0 = inttoptr i32 %v2_162d0 to i8*
  store i8 %v2_162cc, i8* %v3_162d0, align 1
  %v4_162d0 = load i32, i32* @r0, align 4
  %v5_162d0 = add i32 %v4_162d0, 1
  store i32 %v5_162d0, i32* %r0.global-to-local, align 4
  %v0_162d4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_162d4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_162d4 = xor i1 %v0_162d4, %v1_162d4
  br i1 %v2_162d4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_162d4 = load i32, i32* %r1.global-to-local, align 4
  %v4_162d4 = inttoptr i32 %v3_162d4 to i8*
  %v5_162d4 = load i8, i8* %v4_162d4, align 1
  %v8_162d4 = add i32 %v3_162d4, 1
  store i32 %v8_162d4, i32* %r1.global-to-local, align 4
  %v6_162d8 = inttoptr i32 %v5_162d0 to i8*
  store i8 %v5_162d4, i8* %v6_162d8, align 1
  %v7_162d8 = load i32, i32* %r0.global-to-local, align 4
  %v8_162d8 = add i32 %v7_162d8, 1
  store i32 %v8_162d8, i32* %r0.global-to-local, align 4
  %v1_162dc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_162dc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_162e0 = phi i32 [ %v8_162d8, %bb143 ], [ %v5_162d0, %bb142 ]
  %v2_162e0 = phi i1 [ %v2_162dc.pre, %bb143 ], [ %v1_162d4, %bb142 ]
  %v1_162e0 = phi i1 [ %v1_162dc.pre, %bb143 ], [ %v0_162d4, %bb142 ]
  %v0_162dc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_162dc = xor i1 %v2_162e0, %v1_162e0
  %v4_162dc = or i1 %v0_162dc, %v3_162dc
  br i1 %v4_162dc, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_162dc = load i32, i32* %r1.global-to-local, align 4
  %v6_162dc = inttoptr i32 %v5_162dc to i8*
  %v7_162dc = load i8, i8* %v6_162dc, align 1
  %v10_162dc = add i32 %v5_162dc, 1
  store i32 %v10_162dc, i32* %r1.global-to-local, align 4
  %v8_162e0 = inttoptr i32 %v7_162e0 to i8*
  store i8 %v7_162dc, i8* %v8_162e0, align 1
  %v9_162e0 = load i32, i32* %r0.global-to-local, align 4
  %v10_162e0 = add i32 %v9_162e0, 1
  store i32 %v10_162e0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_162e4 = load i8*, i8** %stack_var_-8, align 4
  %v3_162e4 = ptrtoint i8* %v2_162e4 to i32
  store i32 %v3_162e4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1622c)
  %v0_162ec.pre = load i32, i32* @ip, align 4
  %v0_162f4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_162f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %dec_label_pc_16238, %.thread126
  %v2_162f8 = phi i32 [ %v1_16220, %dec_label_pc_16238 ], [ %v2_162f8.pre, %.thread126 ]
  %v0_162f4 = phi i32 [ %v0_16220, %dec_label_pc_16238 ], [ %v0_162f4.pre, %.thread126 ]
  %v0_162ec = phi i32 [ %v1_16238, %dec_label_pc_16238 ], [ %v0_162ec.pre, %.thread126 ]
  %v1_162ec = sub i32 4, %v0_162ec
  store i32 %v1_162ec, i32* @ip, align 4
  %v1_162f0 = add i32 %v1_162ec, -2
  %v3_162f0 = sub i32 1, %v1_162ec
  %v4_162f0 = and i32 %v3_162f0, %v1_162ec
  %v5_162f0 = icmp slt i32 %v4_162f0, 0
  store i1 %v5_162f0, i1* %cpsr_v.global-to-local, align 1
  %v6_162f0 = icmp slt i32 %v1_162f0, 0
  store i1 %v6_162f0, i1* %cpsr_n.global-to-local, align 1
  %v7_162f0 = icmp eq i32 %v1_162ec, 2
  store i1 %v7_162f0, i1* %cpsr_z.global-to-local, align 1
  %v1_162f4 = inttoptr i32 %v0_162f4 to i8*
  %v2_162f4 = load i8, i8* %v1_162f4, align 1
  %v3_162f4 = zext i8 %v2_162f4 to i32
  store i32 %v3_162f4, i32* @r3, align 4
  %v5_162f4 = add i32 %v0_162f4, 1
  store i32 %v5_162f4, i32* @r1, align 4
  %v3_162f8 = inttoptr i32 %v2_162f8 to i8*
  store i8 %v2_162f4, i8* %v3_162f8, align 1
  %v4_162f8 = load i32, i32* @r0, align 4
  %v5_162f8 = add i32 %v4_162f8, 1
  store i32 %v5_162f8, i32* @r0, align 4
  %v0_162fc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_162fc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_162fc = xor i1 %v0_162fc, %v1_162fc
  br i1 %v2_162fc, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_162ec
  %v3_162fc = load i32, i32* @r1, align 4
  %v4_162fc = inttoptr i32 %v3_162fc to i8*
  %v5_162fc = load i8, i8* %v4_162fc, align 1
  %v6_162fc = zext i8 %v5_162fc to i32
  store i32 %v6_162fc, i32* @r3, align 4
  %v8_162fc = add i32 %v3_162fc, 1
  store i32 %v8_162fc, i32* @r1, align 4
  %v6_16300 = inttoptr i32 %v5_162f8 to i8*
  store i8 %v5_162fc, i8* %v6_16300, align 1
  %v7_16300 = load i32, i32* @r0, align 4
  %v8_16300 = add i32 %v7_16300, 1
  store i32 %v8_16300, i32* @r0, align 4
  %v1_16304.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16304.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_162ec, %bb145
  %v7_16308 = phi i32 [ %v8_16300, %bb145 ], [ %v5_162f8, %dec_label_pc_162ec ]
  %v2_16308 = phi i1 [ %v2_16304.pre, %bb145 ], [ %v1_162fc, %dec_label_pc_162ec ]
  %v1_16308 = phi i1 [ %v1_16304.pre, %bb145 ], [ %v0_162fc, %dec_label_pc_162ec ]
  %v0_16304 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16304 = xor i1 %v2_16308, %v1_16308
  %v4_16304 = or i1 %v0_16304, %v3_16304
  br i1 %v4_16304, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_16304 = load i32, i32* @r1, align 4
  %v6_16304 = inttoptr i32 %v5_16304 to i8*
  %v7_16304 = load i8, i8* %v6_16304, align 1
  %v8_16304 = zext i8 %v7_16304 to i32
  store i32 %v8_16304, i32* @r3, align 4
  %v10_16304 = add i32 %v5_16304, 1
  store i32 %v10_16304, i32* @r1, align 4
  %v8_16308 = inttoptr i32 %v7_16308 to i8*
  store i8 %v7_16304, i8* %v8_16308, align 1
  %v9_16308 = load i32, i32* @r0, align 4
  %v10_16308 = add i32 %v9_16308, 1
  store i32 %v10_16308, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1643c77 = phi i32 [ %v10_16308, %bb146 ], [ %v7_16308, %.thread127 ]
  %v0_1630c = load i32, i32* %r2.global-to-local, align 4
  %v1_1630c = load i32, i32* @ip, align 4
  %v2_1630c = sub i32 %v0_1630c, %v1_1630c
  store i32 %v2_1630c, i32* %r2.global-to-local, align 4
  %v4_1630c = xor i32 %v1_1630c, %v0_1630c
  %v5_1630c = xor i32 %v2_1630c, %v0_1630c
  %v6_1630c = and i32 %v5_1630c, %v4_1630c
  %v7_1630c = icmp slt i32 %v6_1630c, 0
  store i1 %v7_1630c, i1* %cpsr_v.global-to-local, align 1
  %v8_1630c = icmp slt i32 %v2_1630c, 0
  store i1 %v8_1630c, i1* %cpsr_n.global-to-local, align 1
  %v9_1630c = icmp eq i32 %v0_1630c, %v1_1630c
  store i1 %v9_1630c, i1* %cpsr_z.global-to-local, align 1
  %v2_16310 = xor i1 %v8_1630c, %v7_1630c
  br i1 %v2_16310, label %bb140, label %dec_label_pc_16314

dec_label_pc_16314:                               ; preds = %.thread128
  %v0_16314 = load i32, i32* @r1, align 4
  %v1_16314 = urem i32 %v0_16314, 4
  store i32 %v1_16314, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16314 = icmp eq i32 %v1_16314, 0
  store i1 %v2_16314, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_16314 to i2
  br i1 %v2_16314, label %dec_label_pc_16248, label %dec_label_pc_1631c

dec_label_pc_1631c:                               ; preds = %dec_label_pc_16240, %dec_label_pc_16314
  %v0_1643c76 = phi i32 [ %v1_16220, %dec_label_pc_16240 ], [ %v0_1643c77, %dec_label_pc_16314 ]
  %v0_163a4 = phi i32 [ %v2_16230, %dec_label_pc_16240 ], [ %v2_1630c, %dec_label_pc_16314 ]
  %v0_16324.off0 = phi i2 [ %extract.t, %dec_label_pc_16240 ], [ %extract.t131, %dec_label_pc_16314 ]
  %v0_1631c = phi i32 [ %v0_16220, %dec_label_pc_16240 ], [ %v0_16314, %dec_label_pc_16314 ]
  %v1_1631c = and i32 %v0_1631c, -4
  store i32 %v1_1631c, i32* %r1.global-to-local, align 4
  %v1_16320 = inttoptr i32 %v1_1631c to i32*
  %v2_16320 = load i32, i32* %v1_16320, align 4
  store i32 %v2_16320, i32* %lr.global-to-local, align 4
  %v4_16320 = add i32 %v1_1631c, 4
  store i32 %v4_16320, i32* %r1.global-to-local, align 4
  %v1_1639c = add i32 %v0_163a4, -12
  %v3_1639c = sub i32 11, %v0_163a4
  %v4_1639c = and i32 %v3_1639c, %v0_163a4
  %v5_1639c = icmp slt i32 %v4_1639c, 0
  store i1 %v5_1639c, i1* %cpsr_v.global-to-local, align 1
  %v6_1639c = icmp slt i32 %v1_1639c, 0
  store i1 %v6_1639c, i1* %cpsr_n.global-to-local, align 1
  %v7_1639c = icmp eq i32 %v0_163a4, 12
  store i1 %v7_1639c, i1* %cpsr_z.global-to-local, align 1
  %v2_163a0 = xor i1 %v6_1639c, %v5_1639c
  switch i2 %v0_16324.off0, label %dec_label_pc_16330 [
    i2 -1, label %dec_label_pc_16408
    i2 -2, label %dec_label_pc_1639c
  ]

dec_label_pc_16330:                               ; preds = %dec_label_pc_1631c
  br i1 %v2_163a0, label %dec_label_pc_1637c, label %dec_label_pc_16338

dec_label_pc_16338:                               ; preds = %dec_label_pc_16330
  store i32 %v1_1639c, i32* %r2.global-to-local, align 4
  %v3_1633c = load i32, i32* @r4, align 4
  store i32 %v3_1633c, i32* %stack_var_-16, align 4
  %v6_1633c = load i32, i32* @r5, align 4
  store i32 %v6_1633c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16340

dec_label_pc_16340:                               ; preds = %dec_label_pc_16340.dec_label_pc_16340_crit_edge, %dec_label_pc_16338
  %v0_16364 = phi i32 [ %v12_16364, %dec_label_pc_16340.dec_label_pc_16340_crit_edge ], [ %v0_1643c76, %dec_label_pc_16338 ]
  %v0_16344 = phi i32 [ %v0_16344.pre, %dec_label_pc_16340.dec_label_pc_16340_crit_edge ], [ %v4_16320, %dec_label_pc_16338 ]
  %v0_16340 = phi i32 [ %v0_16340.pre, %dec_label_pc_16340.dec_label_pc_16340_crit_edge ], [ %v2_16320, %dec_label_pc_16338 ]
  %v3_16340 = udiv i32 %v0_16340, 256
  %v1_16344 = inttoptr i32 %v0_16344 to i32*
  %v2_16344 = load i32, i32* %v1_16344, align 4
  store i32 %v2_16344, i32* %r4.global-to-local, align 4
  %v3_16344 = add i32 %v0_16344, 4
  %v4_16344 = inttoptr i32 %v3_16344 to i32*
  %v5_16344 = load i32, i32* %v4_16344, align 4
  store i32 %v5_16344, i32* %r5.global-to-local, align 4
  %v6_16344 = add i32 %v0_16344, 8
  %v7_16344 = inttoptr i32 %v6_16344 to i32*
  %v8_16344 = load i32, i32* %v7_16344, align 4
  store i32 %v8_16344, i32* %ip.global-to-local, align 4
  %v9_16344 = add i32 %v0_16344, 12
  %v10_16344 = inttoptr i32 %v9_16344 to i32*
  %v11_16344 = load i32, i32* %v10_16344, align 4
  store i32 %v11_16344, i32* %lr.global-to-local, align 4
  %v12_16344 = add i32 %v0_16344, 16
  store i32 %v12_16344, i32* %r1.global-to-local, align 4
  %v4_16348 = mul i32 %v2_16344, 16777216
  %v5_16348 = or i32 %v4_16348, %v3_16340
  store i32 %v5_16348, i32* @r3, align 4
  %v3_1634c = udiv i32 %v2_16344, 256
  %v4_16350 = mul i32 %v5_16344, 16777216
  %v5_16350 = or i32 %v4_16350, %v3_1634c
  store i32 %v5_16350, i32* %r4.global-to-local, align 4
  %v3_16354 = udiv i32 %v5_16344, 256
  %v4_16358 = mul i32 %v8_16344, 16777216
  %v5_16358 = or i32 %v4_16358, %v3_16354
  store i32 %v5_16358, i32* %r5.global-to-local, align 4
  %v3_1635c = udiv i32 %v8_16344, 256
  %v4_16360 = mul i32 %v11_16344, 16777216
  %v5_16360 = or i32 %v4_16360, %v3_1635c
  store i32 %v5_16360, i32* @ip, align 4
  %v1_16364 = inttoptr i32 %v0_16364 to i32*
  store i32 %v5_16348, i32* %v1_16364, align 4
  %v3_16364 = add i32 %v0_16364, 4
  %v4_16364 = inttoptr i32 %v3_16364 to i32*
  %v5_16364 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16364, i32* %v4_16364, align 4
  %v6_16364 = add i32 %v0_16364, 8
  %v7_16364 = inttoptr i32 %v6_16364 to i32*
  %v8_16364 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_16364, i32* %v7_16364, align 4
  %v9_16364 = add i32 %v0_16364, 12
  %v10_16364 = inttoptr i32 %v9_16364 to i32*
  %v11_16364 = load i32, i32* @ip, align 4
  store i32 %v11_16364, i32* %v10_16364, align 4
  %v12_16364 = add i32 %v0_16364, 16
  store i32 %v12_16364, i32* @r0, align 4
  %v0_16368 = load i32, i32* %r2.global-to-local, align 4
  %v1_16368 = add i32 %v0_16368, -16
  store i32 %v1_16368, i32* %r2.global-to-local, align 4
  %v3_16368 = sub i32 15, %v0_16368
  %v4_16368 = and i32 %v3_16368, %v0_16368
  %v5_16368 = icmp slt i32 %v4_16368, 0
  %v6_16368 = icmp slt i32 %v1_16368, 0
  %v2_1636c = xor i1 %v6_16368, %v5_16368
  br i1 %v2_1636c, label %dec_label_pc_16370, label %dec_label_pc_16340.dec_label_pc_16340_crit_edge

dec_label_pc_16340.dec_label_pc_16340_crit_edge:  ; preds = %dec_label_pc_16340
  %v0_16340.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_16344.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16340

dec_label_pc_16370:                               ; preds = %dec_label_pc_16340
  %v2_16370 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16370, i32* @r4, align 4
  %v5_16370 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16370, i32* @r5, align 4
  %v1_16374 = add i32 %v0_16368, -4
  store i32 %v1_16374, i32* %r2.global-to-local, align 4
  %v3_16374 = add i32 %v0_16368, 2147483632
  %v4_16374 = and i32 %v1_16374, %v3_16374
  %v5_16374 = icmp slt i32 %v4_16374, 0
  store i1 %v5_16374, i1* %cpsr_v.global-to-local, align 1
  %v6_16374 = icmp slt i32 %v1_16374, 0
  store i1 %v6_16374, i1* %cpsr_n.global-to-local, align 1
  %v7_16374 = icmp eq i32 %v1_16374, 0
  store i1 %v7_16374, i1* %cpsr_z.global-to-local, align 1
  %v2_16378 = xor i1 %v6_16374, %v5_16374
  br i1 %v2_16378, label %dec_label_pc_16394, label %dec_label_pc_1637c

dec_label_pc_1637c:                               ; preds = %dec_label_pc_16370, %dec_label_pc_16330, %dec_label_pc_1637c
  %v1_16388 = phi i32 [ %v4_16388, %dec_label_pc_1637c ], [ %v12_16364, %dec_label_pc_16370 ], [ %v0_1643c76, %dec_label_pc_16330 ]
  %v0_1637c = load i32, i32* %lr.global-to-local, align 4
  %v3_1637c = udiv i32 %v0_1637c, 256
  store i32 %v3_1637c, i32* %ip.global-to-local, align 4
  %v0_16380 = load i32, i32* %r1.global-to-local, align 4
  %v1_16380 = inttoptr i32 %v0_16380 to i32*
  %v2_16380 = load i32, i32* %v1_16380, align 4
  store i32 %v2_16380, i32* %lr.global-to-local, align 4
  %v4_16380 = add i32 %v0_16380, 4
  store i32 %v4_16380, i32* %r1.global-to-local, align 4
  %v4_16384 = mul i32 %v2_16380, 16777216
  %v5_16384 = or i32 %v4_16384, %v3_1637c
  store i32 %v5_16384, i32* @ip, align 4
  %v2_16388 = inttoptr i32 %v1_16388 to i32*
  store i32 %v5_16384, i32* %v2_16388, align 4
  %v3_16388 = load i32, i32* @r0, align 4
  %v4_16388 = add i32 %v3_16388, 4
  store i32 %v4_16388, i32* @r0, align 4
  %v0_1638c = load i32, i32* %r2.global-to-local, align 4
  %v1_1638c = add i32 %v0_1638c, -4
  store i32 %v1_1638c, i32* %r2.global-to-local, align 4
  %v3_1638c = sub i32 3, %v0_1638c
  %v4_1638c = and i32 %v3_1638c, %v0_1638c
  %v5_1638c = icmp slt i32 %v4_1638c, 0
  %v6_1638c = icmp slt i32 %v1_1638c, 0
  %v2_16390 = xor i1 %v6_1638c, %v5_1638c
  br i1 %v2_16390, label %dec_label_pc_16394.loopexit, label %dec_label_pc_1637c

dec_label_pc_16394.loopexit:                      ; preds = %dec_label_pc_1637c
  %v7_1638c = icmp eq i32 %v0_1638c, 4
  store i1 %v5_1638c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1638c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1638c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16394

dec_label_pc_16394:                               ; preds = %dec_label_pc_16394.loopexit, %dec_label_pc_16370
  %v0_162bc59 = phi i32 [ %v1_1638c, %dec_label_pc_16394.loopexit ], [ %v1_16374, %dec_label_pc_16370 ]
  %v0_16394 = load i32, i32* %r1.global-to-local, align 4
  %v1_16394 = add i32 %v0_16394, -3
  store i32 %v1_16394, i32* @r1, align 4
  br label %bb140

dec_label_pc_1639c:                               ; preds = %dec_label_pc_1631c
  br i1 %v2_163a0, label %dec_label_pc_163e8, label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %dec_label_pc_1639c
  store i32 %v1_1639c, i32* %r2.global-to-local, align 4
  %v3_163a8 = load i32, i32* @r4, align 4
  store i32 %v3_163a8, i32* %stack_var_-16, align 4
  %v6_163a8 = load i32, i32* @r5, align 4
  store i32 %v6_163a8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_163ac

dec_label_pc_163ac:                               ; preds = %dec_label_pc_163ac.dec_label_pc_163ac_crit_edge, %dec_label_pc_163a4
  %v0_163d0 = phi i32 [ %v12_163d0, %dec_label_pc_163ac.dec_label_pc_163ac_crit_edge ], [ %v0_1643c76, %dec_label_pc_163a4 ]
  %v0_163b0 = phi i32 [ %v0_163b0.pre, %dec_label_pc_163ac.dec_label_pc_163ac_crit_edge ], [ %v4_16320, %dec_label_pc_163a4 ]
  %v0_163ac = phi i32 [ %v0_163ac.pre, %dec_label_pc_163ac.dec_label_pc_163ac_crit_edge ], [ %v2_16320, %dec_label_pc_163a4 ]
  %v3_163ac = udiv i32 %v0_163ac, 65536
  %v1_163b0 = inttoptr i32 %v0_163b0 to i32*
  %v2_163b0 = load i32, i32* %v1_163b0, align 4
  store i32 %v2_163b0, i32* %r4.global-to-local, align 4
  %v3_163b0 = add i32 %v0_163b0, 4
  %v4_163b0 = inttoptr i32 %v3_163b0 to i32*
  %v5_163b0 = load i32, i32* %v4_163b0, align 4
  store i32 %v5_163b0, i32* %r5.global-to-local, align 4
  %v6_163b0 = add i32 %v0_163b0, 8
  %v7_163b0 = inttoptr i32 %v6_163b0 to i32*
  %v8_163b0 = load i32, i32* %v7_163b0, align 4
  store i32 %v8_163b0, i32* %ip.global-to-local, align 4
  %v9_163b0 = add i32 %v0_163b0, 12
  %v10_163b0 = inttoptr i32 %v9_163b0 to i32*
  %v11_163b0 = load i32, i32* %v10_163b0, align 4
  store i32 %v11_163b0, i32* %lr.global-to-local, align 4
  %v12_163b0 = add i32 %v0_163b0, 16
  store i32 %v12_163b0, i32* %r1.global-to-local, align 4
  %v4_163b4 = mul i32 %v2_163b0, 65536
  %v5_163b4 = or i32 %v4_163b4, %v3_163ac
  store i32 %v5_163b4, i32* @r3, align 4
  %v3_163b8 = udiv i32 %v2_163b0, 65536
  %v4_163bc = mul i32 %v5_163b0, 65536
  %v5_163bc = or i32 %v4_163bc, %v3_163b8
  store i32 %v5_163bc, i32* %r4.global-to-local, align 4
  %v3_163c0 = udiv i32 %v5_163b0, 65536
  %v4_163c4 = mul i32 %v8_163b0, 65536
  %v5_163c4 = or i32 %v4_163c4, %v3_163c0
  store i32 %v5_163c4, i32* %r5.global-to-local, align 4
  %v3_163c8 = udiv i32 %v8_163b0, 65536
  %v4_163cc = mul i32 %v11_163b0, 65536
  %v5_163cc = or i32 %v4_163cc, %v3_163c8
  store i32 %v5_163cc, i32* @ip, align 4
  %v1_163d0 = inttoptr i32 %v0_163d0 to i32*
  store i32 %v5_163b4, i32* %v1_163d0, align 4
  %v3_163d0 = add i32 %v0_163d0, 4
  %v4_163d0 = inttoptr i32 %v3_163d0 to i32*
  %v5_163d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_163d0, i32* %v4_163d0, align 4
  %v6_163d0 = add i32 %v0_163d0, 8
  %v7_163d0 = inttoptr i32 %v6_163d0 to i32*
  %v8_163d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_163d0, i32* %v7_163d0, align 4
  %v9_163d0 = add i32 %v0_163d0, 12
  %v10_163d0 = inttoptr i32 %v9_163d0 to i32*
  %v11_163d0 = load i32, i32* @ip, align 4
  store i32 %v11_163d0, i32* %v10_163d0, align 4
  %v12_163d0 = add i32 %v0_163d0, 16
  store i32 %v12_163d0, i32* @r0, align 4
  %v0_163d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_163d4 = add i32 %v0_163d4, -16
  store i32 %v1_163d4, i32* %r2.global-to-local, align 4
  %v3_163d4 = sub i32 15, %v0_163d4
  %v4_163d4 = and i32 %v3_163d4, %v0_163d4
  %v5_163d4 = icmp slt i32 %v4_163d4, 0
  %v6_163d4 = icmp slt i32 %v1_163d4, 0
  %v2_163d8 = xor i1 %v6_163d4, %v5_163d4
  br i1 %v2_163d8, label %dec_label_pc_163dc, label %dec_label_pc_163ac.dec_label_pc_163ac_crit_edge

dec_label_pc_163ac.dec_label_pc_163ac_crit_edge:  ; preds = %dec_label_pc_163ac
  %v0_163ac.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_163b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_163ac

dec_label_pc_163dc:                               ; preds = %dec_label_pc_163ac
  %v2_163dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_163dc, i32* @r4, align 4
  %v5_163dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_163dc, i32* @r5, align 4
  %v1_163e0 = add i32 %v0_163d4, -4
  store i32 %v1_163e0, i32* %r2.global-to-local, align 4
  %v3_163e0 = add i32 %v0_163d4, 2147483632
  %v4_163e0 = and i32 %v1_163e0, %v3_163e0
  %v5_163e0 = icmp slt i32 %v4_163e0, 0
  store i1 %v5_163e0, i1* %cpsr_v.global-to-local, align 1
  %v6_163e0 = icmp slt i32 %v1_163e0, 0
  store i1 %v6_163e0, i1* %cpsr_n.global-to-local, align 1
  %v7_163e0 = icmp eq i32 %v1_163e0, 0
  store i1 %v7_163e0, i1* %cpsr_z.global-to-local, align 1
  %v2_163e4 = xor i1 %v6_163e0, %v5_163e0
  br i1 %v2_163e4, label %dec_label_pc_16400, label %dec_label_pc_163e8

dec_label_pc_163e8:                               ; preds = %dec_label_pc_163dc, %dec_label_pc_1639c, %dec_label_pc_163e8
  %v1_163f4 = phi i32 [ %v4_163f4, %dec_label_pc_163e8 ], [ %v12_163d0, %dec_label_pc_163dc ], [ %v0_1643c76, %dec_label_pc_1639c ]
  %v0_163e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_163e8 = udiv i32 %v0_163e8, 65536
  store i32 %v3_163e8, i32* %ip.global-to-local, align 4
  %v0_163ec = load i32, i32* %r1.global-to-local, align 4
  %v1_163ec = inttoptr i32 %v0_163ec to i32*
  %v2_163ec = load i32, i32* %v1_163ec, align 4
  store i32 %v2_163ec, i32* %lr.global-to-local, align 4
  %v4_163ec = add i32 %v0_163ec, 4
  store i32 %v4_163ec, i32* %r1.global-to-local, align 4
  %v4_163f0 = mul i32 %v2_163ec, 65536
  %v5_163f0 = or i32 %v4_163f0, %v3_163e8
  store i32 %v5_163f0, i32* @ip, align 4
  %v2_163f4 = inttoptr i32 %v1_163f4 to i32*
  store i32 %v5_163f0, i32* %v2_163f4, align 4
  %v3_163f4 = load i32, i32* @r0, align 4
  %v4_163f4 = add i32 %v3_163f4, 4
  store i32 %v4_163f4, i32* @r0, align 4
  %v0_163f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_163f8 = add i32 %v0_163f8, -4
  store i32 %v1_163f8, i32* %r2.global-to-local, align 4
  %v3_163f8 = sub i32 3, %v0_163f8
  %v4_163f8 = and i32 %v3_163f8, %v0_163f8
  %v5_163f8 = icmp slt i32 %v4_163f8, 0
  %v6_163f8 = icmp slt i32 %v1_163f8, 0
  %v2_163fc = xor i1 %v6_163f8, %v5_163f8
  br i1 %v2_163fc, label %dec_label_pc_16400.loopexit, label %dec_label_pc_163e8

dec_label_pc_16400.loopexit:                      ; preds = %dec_label_pc_163e8
  %v7_163f8 = icmp eq i32 %v0_163f8, 4
  store i1 %v5_163f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_163f8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_163f8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %dec_label_pc_16400.loopexit, %dec_label_pc_163dc
  %v0_162bc60 = phi i32 [ %v1_163f8, %dec_label_pc_16400.loopexit ], [ %v1_163e0, %dec_label_pc_163dc ]
  %v0_16400 = load i32, i32* %r1.global-to-local, align 4
  %v1_16400 = add i32 %v0_16400, -2
  store i32 %v1_16400, i32* @r1, align 4
  br label %bb140

dec_label_pc_16408:                               ; preds = %dec_label_pc_1631c
  br i1 %v2_163a0, label %dec_label_pc_16454, label %dec_label_pc_16410

dec_label_pc_16410:                               ; preds = %dec_label_pc_16408
  store i32 %v1_1639c, i32* %r2.global-to-local, align 4
  %v3_16414 = load i32, i32* @r4, align 4
  store i32 %v3_16414, i32* %stack_var_-16, align 4
  %v6_16414 = load i32, i32* @r5, align 4
  store i32 %v6_16414, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %dec_label_pc_16418.dec_label_pc_16418_crit_edge, %dec_label_pc_16410
  %v0_1643c = phi i32 [ %v12_1643c, %dec_label_pc_16418.dec_label_pc_16418_crit_edge ], [ %v0_1643c76, %dec_label_pc_16410 ]
  %v0_1641c = phi i32 [ %v0_1641c.pre, %dec_label_pc_16418.dec_label_pc_16418_crit_edge ], [ %v4_16320, %dec_label_pc_16410 ]
  %v0_16418 = phi i32 [ %v0_16418.pre, %dec_label_pc_16418.dec_label_pc_16418_crit_edge ], [ %v2_16320, %dec_label_pc_16410 ]
  %v3_16418 = udiv i32 %v0_16418, 16777216
  %v1_1641c = inttoptr i32 %v0_1641c to i32*
  %v2_1641c = load i32, i32* %v1_1641c, align 4
  store i32 %v2_1641c, i32* %r4.global-to-local, align 4
  %v3_1641c = add i32 %v0_1641c, 4
  %v4_1641c = inttoptr i32 %v3_1641c to i32*
  %v5_1641c = load i32, i32* %v4_1641c, align 4
  store i32 %v5_1641c, i32* %r5.global-to-local, align 4
  %v6_1641c = add i32 %v0_1641c, 8
  %v7_1641c = inttoptr i32 %v6_1641c to i32*
  %v8_1641c = load i32, i32* %v7_1641c, align 4
  store i32 %v8_1641c, i32* %ip.global-to-local, align 4
  %v9_1641c = add i32 %v0_1641c, 12
  %v10_1641c = inttoptr i32 %v9_1641c to i32*
  %v11_1641c = load i32, i32* %v10_1641c, align 4
  store i32 %v11_1641c, i32* %lr.global-to-local, align 4
  %v12_1641c = add i32 %v0_1641c, 16
  store i32 %v12_1641c, i32* %r1.global-to-local, align 4
  %v4_16420 = mul i32 %v2_1641c, 256
  %v5_16420 = or i32 %v4_16420, %v3_16418
  store i32 %v5_16420, i32* @r3, align 4
  %v3_16424 = udiv i32 %v2_1641c, 16777216
  %v4_16428 = mul i32 %v5_1641c, 256
  %v5_16428 = or i32 %v4_16428, %v3_16424
  store i32 %v5_16428, i32* %r4.global-to-local, align 4
  %v3_1642c = udiv i32 %v5_1641c, 16777216
  %v4_16430 = mul i32 %v8_1641c, 256
  %v5_16430 = or i32 %v4_16430, %v3_1642c
  store i32 %v5_16430, i32* %r5.global-to-local, align 4
  %v3_16434 = udiv i32 %v8_1641c, 16777216
  %v4_16438 = mul i32 %v11_1641c, 256
  %v5_16438 = or i32 %v4_16438, %v3_16434
  store i32 %v5_16438, i32* @ip, align 4
  %v1_1643c = inttoptr i32 %v0_1643c to i32*
  store i32 %v5_16420, i32* %v1_1643c, align 4
  %v3_1643c = add i32 %v0_1643c, 4
  %v4_1643c = inttoptr i32 %v3_1643c to i32*
  %v5_1643c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1643c, i32* %v4_1643c, align 4
  %v6_1643c = add i32 %v0_1643c, 8
  %v7_1643c = inttoptr i32 %v6_1643c to i32*
  %v8_1643c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1643c, i32* %v7_1643c, align 4
  %v9_1643c = add i32 %v0_1643c, 12
  %v10_1643c = inttoptr i32 %v9_1643c to i32*
  %v11_1643c = load i32, i32* @ip, align 4
  store i32 %v11_1643c, i32* %v10_1643c, align 4
  %v12_1643c = add i32 %v0_1643c, 16
  store i32 %v12_1643c, i32* @r0, align 4
  %v0_16440 = load i32, i32* %r2.global-to-local, align 4
  %v1_16440 = add i32 %v0_16440, -16
  store i32 %v1_16440, i32* %r2.global-to-local, align 4
  %v3_16440 = sub i32 15, %v0_16440
  %v4_16440 = and i32 %v3_16440, %v0_16440
  %v5_16440 = icmp slt i32 %v4_16440, 0
  %v6_16440 = icmp slt i32 %v1_16440, 0
  %v2_16444 = xor i1 %v6_16440, %v5_16440
  br i1 %v2_16444, label %dec_label_pc_16448, label %dec_label_pc_16418.dec_label_pc_16418_crit_edge

dec_label_pc_16418.dec_label_pc_16418_crit_edge:  ; preds = %dec_label_pc_16418
  %v0_16418.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1641c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16418

dec_label_pc_16448:                               ; preds = %dec_label_pc_16418
  %v2_16448 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16448, i32* @r4, align 4
  %v5_16448 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_16448, i32* @r5, align 4
  %v1_1644c = add i32 %v0_16440, -4
  store i32 %v1_1644c, i32* %r2.global-to-local, align 4
  %v3_1644c = add i32 %v0_16440, 2147483632
  %v4_1644c = and i32 %v1_1644c, %v3_1644c
  %v5_1644c = icmp slt i32 %v4_1644c, 0
  store i1 %v5_1644c, i1* %cpsr_v.global-to-local, align 1
  %v6_1644c = icmp slt i32 %v1_1644c, 0
  store i1 %v6_1644c, i1* %cpsr_n.global-to-local, align 1
  %v7_1644c = icmp eq i32 %v1_1644c, 0
  store i1 %v7_1644c, i1* %cpsr_z.global-to-local, align 1
  %v2_16450 = xor i1 %v6_1644c, %v5_1644c
  br i1 %v2_16450, label %dec_label_pc_1646c, label %dec_label_pc_16454

dec_label_pc_16454:                               ; preds = %dec_label_pc_16448, %dec_label_pc_16408, %dec_label_pc_16454
  %v1_16460 = phi i32 [ %v4_16460, %dec_label_pc_16454 ], [ %v12_1643c, %dec_label_pc_16448 ], [ %v0_1643c76, %dec_label_pc_16408 ]
  %v0_16454 = load i32, i32* %lr.global-to-local, align 4
  %v3_16454 = udiv i32 %v0_16454, 16777216
  store i32 %v3_16454, i32* %ip.global-to-local, align 4
  %v0_16458 = load i32, i32* %r1.global-to-local, align 4
  %v1_16458 = inttoptr i32 %v0_16458 to i32*
  %v2_16458 = load i32, i32* %v1_16458, align 4
  store i32 %v2_16458, i32* %lr.global-to-local, align 4
  %v4_16458 = add i32 %v0_16458, 4
  store i32 %v4_16458, i32* %r1.global-to-local, align 4
  %v4_1645c = mul i32 %v2_16458, 256
  %v5_1645c = or i32 %v4_1645c, %v3_16454
  store i32 %v5_1645c, i32* @ip, align 4
  %v2_16460 = inttoptr i32 %v1_16460 to i32*
  store i32 %v5_1645c, i32* %v2_16460, align 4
  %v3_16460 = load i32, i32* @r0, align 4
  %v4_16460 = add i32 %v3_16460, 4
  store i32 %v4_16460, i32* @r0, align 4
  %v0_16464 = load i32, i32* %r2.global-to-local, align 4
  %v1_16464 = add i32 %v0_16464, -4
  store i32 %v1_16464, i32* %r2.global-to-local, align 4
  %v3_16464 = sub i32 3, %v0_16464
  %v4_16464 = and i32 %v3_16464, %v0_16464
  %v5_16464 = icmp slt i32 %v4_16464, 0
  %v6_16464 = icmp slt i32 %v1_16464, 0
  %v2_16468 = xor i1 %v6_16464, %v5_16464
  br i1 %v2_16468, label %dec_label_pc_1646c.loopexit, label %dec_label_pc_16454

dec_label_pc_1646c.loopexit:                      ; preds = %dec_label_pc_16454
  %v7_16464 = icmp eq i32 %v0_16464, 4
  store i1 %v5_16464, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_16464, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16464, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1646c

dec_label_pc_1646c:                               ; preds = %dec_label_pc_1646c.loopexit, %dec_label_pc_16448
  %v0_162bc61 = phi i32 [ %v1_16464, %dec_label_pc_1646c.loopexit ], [ %v1_1644c, %dec_label_pc_16448 ]
  %v0_1646c = load i32, i32* %r1.global-to-local, align 4
  %v1_1646c = add i32 %v0_1646c, -1
  store i32 %v1_1646c, i32* @r1, align 4
  br label %bb140

dec_label_pc_16474:                               ; preds = %dec_label_pc_16220
  %v1_16474 = load i32, i32* @r2, align 4
  %v2_16474 = add i32 %v1_16474, %v0_16220
  store i32 %v2_16474, i32* %r1.global-to-local, align 4
  %v2_16478 = add i32 %v1_16474, %v1_16220
  store i32 %v2_16478, i32* %r0.global-to-local, align 4
  %v2_1647c = add i32 %v1_16474, -4
  store i32 %v2_1647c, i32* %r2.global-to-local, align 4
  %v4_1647c = sub i32 3, %v1_16474
  %v5_1647c = and i32 %v4_1647c, %v1_16474
  %v6_1647c = icmp slt i32 %v5_1647c, 0
  store i1 %v6_1647c, i1* %cpsr_v.global-to-local, align 1
  %v7_1647c = icmp slt i32 %v2_1647c, 0
  store i1 %v7_1647c, i1* %cpsr_n.global-to-local, align 1
  %v8_1647c = icmp eq i32 %v1_16474, 4
  store i1 %v8_1647c, i1* %cpsr_z.global-to-local, align 1
  %v5_16480 = icmp slt i32 %v1_16474, 4
  br i1 %v5_16480, label %bb150, label %dec_label_pc_16484

dec_label_pc_16484:                               ; preds = %dec_label_pc_16474
  %v1_16484 = urem i32 %v2_16478, 4
  store i32 %v1_16484, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16484 = icmp eq i32 %v1_16484, 0
  store i1 %v2_16484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16484, label %dec_label_pc_1648c, label %dec_label_pc_1652c

dec_label_pc_1648c:                               ; preds = %dec_label_pc_16484
  %v1_1648c = urem i32 %v2_16474, 4
  store i32 %v1_1648c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1648c = icmp eq i32 %v1_1648c, 0
  store i1 %v2_1648c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1648c, label %dec_label_pc_16494, label %dec_label_pc_16558

dec_label_pc_16494:                               ; preds = %dec_label_pc_1648c, %dec_label_pc_16550
  %v0_164ac37 = phi i32 [ %v2_16478, %dec_label_pc_1648c ], [ %v0_165a020, %dec_label_pc_16550 ]
  %v0_164a836 = phi i32 [ %v2_16474, %dec_label_pc_1648c ], [ %v0_16550, %dec_label_pc_16550 ]
  %v0_16494 = phi i32 [ %v2_1647c, %dec_label_pc_1648c ], [ %v2_16548, %dec_label_pc_16550 ]
  %v2_16494 = add i32 %v0_16494, -8
  store i32 %v2_16494, i32* %r2.global-to-local, align 4
  %v4_16494 = sub i32 7, %v0_16494
  %v5_16494 = and i32 %v4_16494, %v0_16494
  %v6_16494 = icmp slt i32 %v5_16494, 0
  store i1 %v6_16494, i1* %cpsr_v.global-to-local, align 1
  %v7_16494 = icmp slt i32 %v2_16494, 0
  store i1 %v7_16494, i1* %cpsr_n.global-to-local, align 1
  %v8_16494 = icmp eq i32 %v0_16494, 8
  store i1 %v8_16494, i1* %cpsr_z.global-to-local, align 1
  %v5_16498 = icmp slt i32 %v0_16494, 8
  br i1 %v5_16498, label %dec_label_pc_164e4, label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %dec_label_pc_16494
  %v3_1649c = load i32, i32* @r4, align 4
  %v5_1649c = inttoptr i32 %v3_1649c to i8*
  store i8* %v5_1649c, i8** %stack_var_-8, align 4
  %v8_1649c = load i32, i32* @lr, align 4
  %v2_164a0 = add i32 %v0_16494, -28
  store i32 %v2_164a0, i32* %r2.global-to-local, align 4
  %v4_164a0 = sub i32 27, %v0_16494
  %v5_164a0 = and i32 %v4_164a0, %v2_16494
  %v6_164a0 = icmp slt i32 %v5_164a0, 0
  store i1 %v6_164a0, i1* %cpsr_v.global-to-local, align 1
  %v7_164a0 = icmp slt i32 %v2_164a0, 0
  store i1 %v7_164a0, i1* %cpsr_n.global-to-local, align 1
  %v8_164a0 = icmp eq i32 %v2_16494, 20
  store i1 %v8_164a0, i1* %cpsr_z.global-to-local, align 1
  %v5_164a4 = icmp slt i32 %v2_16494, 20
  br i1 %v5_164a4, label %dec_label_pc_164c0, label %dec_label_pc_164a8

dec_label_pc_164a8:                               ; preds = %dec_label_pc_1649c, %dec_label_pc_164a8.dec_label_pc_164a8_crit_edge
  %v0_164ac = phi i32 [ %v1_164b4, %dec_label_pc_164a8.dec_label_pc_164a8_crit_edge ], [ %v0_164ac37, %dec_label_pc_1649c ]
  %v0_164a8 = phi i32 [ %v0_164a8.pre, %dec_label_pc_164a8.dec_label_pc_164a8_crit_edge ], [ %v0_164a836, %dec_label_pc_1649c ]
  %v1_164a8 = add i32 %v0_164a8, -4
  %v2_164a8 = inttoptr i32 %v1_164a8 to i32*
  %v3_164a8 = load i32, i32* %v2_164a8, align 4
  %v4_164a8 = add i32 %v0_164a8, -8
  %v5_164a8 = inttoptr i32 %v4_164a8 to i32*
  %v6_164a8 = load i32, i32* %v5_164a8, align 4
  store i32 %v6_164a8, i32* %r4.global-to-local, align 4
  %v7_164a8 = add i32 %v0_164a8, -12
  %v8_164a8 = inttoptr i32 %v7_164a8 to i32*
  %v9_164a8 = load i32, i32* %v8_164a8, align 4
  store i32 %v9_164a8, i32* %ip.global-to-local, align 4
  %v10_164a8 = add i32 %v0_164a8, -16
  %v11_164a8 = inttoptr i32 %v10_164a8 to i32*
  %v12_164a8 = load i32, i32* %v11_164a8, align 4
  store i32 %v12_164a8, i32* %lr.global-to-local, align 4
  store i32 %v10_164a8, i32* %r1.global-to-local, align 4
  %v1_164ac = add i32 %v0_164ac, -16
  %v2_164ac = inttoptr i32 %v1_164ac to i32*
  store i32 %v3_164a8, i32* %v2_164ac, align 4
  %v4_164ac = add i32 %v0_164ac, -12
  %v5_164ac = inttoptr i32 %v4_164ac to i32*
  %v6_164ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_164ac, i32* %v5_164ac, align 4
  %v7_164ac = add i32 %v0_164ac, -8
  %v8_164ac = inttoptr i32 %v7_164ac to i32*
  %v9_164ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_164ac, i32* %v8_164ac, align 4
  %v10_164ac = add i32 %v0_164ac, -4
  %v11_164ac = inttoptr i32 %v10_164ac to i32*
  %v12_164ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_164ac, i32* %v11_164ac, align 4
  store i32 %v1_164ac, i32* %r0.global-to-local, align 4
  %v0_164b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_164b0 = add i32 %v0_164b0, -4
  %v2_164b0 = inttoptr i32 %v1_164b0 to i32*
  %v3_164b0 = load i32, i32* %v2_164b0, align 4
  store i32 %v3_164b0, i32* @r3, align 4
  %v4_164b0 = add i32 %v0_164b0, -8
  %v5_164b0 = inttoptr i32 %v4_164b0 to i32*
  %v6_164b0 = load i32, i32* %v5_164b0, align 4
  store i32 %v6_164b0, i32* %r4.global-to-local, align 4
  %v7_164b0 = add i32 %v0_164b0, -12
  %v8_164b0 = inttoptr i32 %v7_164b0 to i32*
  %v9_164b0 = load i32, i32* %v8_164b0, align 4
  store i32 %v9_164b0, i32* @ip, align 4
  %v10_164b0 = add i32 %v0_164b0, -16
  %v11_164b0 = inttoptr i32 %v10_164b0 to i32*
  %v12_164b0 = load i32, i32* %v11_164b0, align 4
  store i32 %v12_164b0, i32* %lr.global-to-local, align 4
  store i32 %v10_164b0, i32* %r1.global-to-local, align 4
  %v1_164b4 = add i32 %v0_164ac, -32
  %v2_164b4 = inttoptr i32 %v1_164b4 to i32*
  store i32 %v3_164b0, i32* %v2_164b4, align 4
  %v4_164b4 = add i32 %v0_164ac, -28
  %v5_164b4 = inttoptr i32 %v4_164b4 to i32*
  %v6_164b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_164b4, i32* %v5_164b4, align 4
  %v7_164b4 = add i32 %v0_164ac, -24
  %v8_164b4 = inttoptr i32 %v7_164b4 to i32*
  %v9_164b4 = load i32, i32* @ip, align 4
  store i32 %v9_164b4, i32* %v8_164b4, align 4
  %v10_164b4 = add i32 %v0_164ac, -20
  %v11_164b4 = inttoptr i32 %v10_164b4 to i32*
  %v12_164b4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_164b4, i32* %v11_164b4, align 4
  store i32 %v1_164b4, i32* %r0.global-to-local, align 4
  %v0_164b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_164b8 = add i32 %v0_164b8, -32
  store i32 %v2_164b8, i32* %r2.global-to-local, align 4
  %v6_164bc = icmp slt i32 %v0_164b8, 32
  br i1 %v6_164bc, label %dec_label_pc_164c0.loopexit, label %dec_label_pc_164a8.dec_label_pc_164a8_crit_edge

dec_label_pc_164a8.dec_label_pc_164a8_crit_edge:  ; preds = %dec_label_pc_164a8
  %v0_164a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_164a8

dec_label_pc_164c0.loopexit:                      ; preds = %dec_label_pc_164a8
  %v4_164b8 = sub i32 31, %v0_164b8
  %v5_164b8 = and i32 %v4_164b8, %v0_164b8
  %v6_164b8 = icmp slt i32 %v5_164b8, 0
  %v7_164b8 = icmp slt i32 %v2_164b8, 0
  store i1 %v6_164b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_164b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_164c0

dec_label_pc_164c0:                               ; preds = %dec_label_pc_164c0.loopexit, %dec_label_pc_1649c
  %v6_164c8 = phi i32 [ %v1_164b4, %dec_label_pc_164c0.loopexit ], [ %v0_164ac37, %dec_label_pc_1649c ]
  %v0_164d0.pr = phi i32 [ %v2_164b8, %dec_label_pc_164c0.loopexit ], [ %v2_164a0, %dec_label_pc_1649c ]
  %v4_164c0 = add i32 %v0_164d0.pr, 16
  %v6_164c0 = sub i32 0, %v0_164d0.pr
  %v7_164c0 = and i32 %v4_164c0, %v6_164c0
  %v8_164c0 = icmp slt i32 %v7_164c0, 0
  store i1 %v8_164c0, i1* %cpsr_v.global-to-local, align 1
  %v9_164c0 = icmp slt i32 %v4_164c0, 0
  store i1 %v9_164c0, i1* %cpsr_n.global-to-local, align 1
  %v10_164c0 = icmp eq i32 %v4_164c0, 0
  store i1 %v10_164c0, i1* %cpsr_z.global-to-local, align 1
  %v5_164c4 = icmp slt i32 %v0_164d0.pr, -16
  br i1 %v5_164c4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_164c0
  %v6_164c4 = load i32, i32* %r1.global-to-local, align 4
  %v7_164c4 = add i32 %v6_164c4, -4
  %v8_164c4 = inttoptr i32 %v7_164c4 to i32*
  %v9_164c4 = load i32, i32* %v8_164c4, align 4
  store i32 %v9_164c4, i32* @r3, align 4
  %v10_164c4 = add i32 %v6_164c4, -8
  %v11_164c4 = inttoptr i32 %v10_164c4 to i32*
  %v12_164c4 = load i32, i32* %v11_164c4, align 4
  store i32 %v12_164c4, i32* %r4.global-to-local, align 4
  %v13_164c4 = add i32 %v6_164c4, -12
  %v14_164c4 = inttoptr i32 %v13_164c4 to i32*
  %v15_164c4 = load i32, i32* %v14_164c4, align 4
  store i32 %v15_164c4, i32* @ip, align 4
  %v16_164c4 = add i32 %v6_164c4, -16
  %v17_164c4 = inttoptr i32 %v16_164c4 to i32*
  %v18_164c4 = load i32, i32* %v17_164c4, align 4
  store i32 %v18_164c4, i32* %lr.global-to-local, align 4
  store i32 %v16_164c4, i32* %r1.global-to-local, align 4
  %v7_164c8 = add i32 %v6_164c8, -16
  %v8_164c8 = inttoptr i32 %v7_164c8 to i32*
  store i32 %v9_164c4, i32* %v8_164c8, align 4
  %v10_164c8 = add i32 %v6_164c8, -12
  %v11_164c8 = inttoptr i32 %v10_164c8 to i32*
  %v12_164c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_164c8, i32* %v11_164c8, align 4
  %v13_164c8 = add i32 %v6_164c8, -8
  %v14_164c8 = inttoptr i32 %v13_164c8 to i32*
  %v15_164c8 = load i32, i32* @ip, align 4
  store i32 %v15_164c8, i32* %v14_164c8, align 4
  %v16_164c8 = add i32 %v6_164c8, -4
  %v17_164c8 = inttoptr i32 %v16_164c8 to i32*
  %v18_164c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_164c8, i32* %v17_164c8, align 4
  store i32 %v7_164c8, i32* %r0.global-to-local, align 4
  %v6_164cc = load i32, i32* %r2.global-to-local, align 4
  %v7_164cc = add i32 %v6_164cc, -16
  store i32 %v7_164cc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_164c0, %bb147
  %v6_164d8 = phi i32 [ %v7_164c8, %bb147 ], [ %v6_164c8, %dec_label_pc_164c0 ]
  %v0_164d0 = phi i32 [ %v7_164cc, %bb147 ], [ %v0_164d0.pr, %dec_label_pc_164c0 ]
  %v4_164d0 = add i32 %v0_164d0, 20
  store i32 %v4_164d0, i32* %r2.global-to-local, align 4
  %v6_164d0 = sub i32 0, %v0_164d0
  %v7_164d0 = and i32 %v4_164d0, %v6_164d0
  %v8_164d0 = icmp slt i32 %v7_164d0, 0
  store i1 %v8_164d0, i1* %cpsr_v.global-to-local, align 1
  %v9_164d0 = icmp slt i32 %v4_164d0, 0
  store i1 %v9_164d0, i1* %cpsr_n.global-to-local, align 1
  %v10_164d0 = icmp eq i32 %v4_164d0, 0
  store i1 %v10_164d0, i1* %cpsr_z.global-to-local, align 1
  %v5_164d4 = icmp slt i32 %v0_164d0, -20
  br i1 %v5_164d4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_164d4 = load i32, i32* %r1.global-to-local, align 4
  %v7_164d4 = add i32 %v6_164d4, -4
  %v8_164d4 = inttoptr i32 %v7_164d4 to i32*
  %v9_164d4 = load i32, i32* %v8_164d4, align 4
  store i32 %v9_164d4, i32* @r3, align 4
  %v10_164d4 = add i32 %v6_164d4, -8
  %v11_164d4 = inttoptr i32 %v10_164d4 to i32*
  %v12_164d4 = load i32, i32* %v11_164d4, align 4
  store i32 %v12_164d4, i32* @ip, align 4
  %v13_164d4 = add i32 %v6_164d4, -12
  %v14_164d4 = inttoptr i32 %v13_164d4 to i32*
  %v15_164d4 = load i32, i32* %v14_164d4, align 4
  store i32 %v15_164d4, i32* %lr.global-to-local, align 4
  store i32 %v13_164d4, i32* %r1.global-to-local, align 4
  %v7_164d8 = add i32 %v6_164d8, -12
  %v8_164d8 = inttoptr i32 %v7_164d8 to i32*
  store i32 %v9_164d4, i32* %v8_164d8, align 4
  %v10_164d8 = add i32 %v6_164d8, -8
  %v11_164d8 = inttoptr i32 %v10_164d8 to i32*
  %v12_164d8 = load i32, i32* @ip, align 4
  store i32 %v12_164d8, i32* %v11_164d8, align 4
  %v13_164d8 = add i32 %v6_164d8, -4
  %v14_164d8 = inttoptr i32 %v13_164d8 to i32*
  %v15_164d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_164d8, i32* %v14_164d8, align 4
  store i32 %v7_164d8, i32* %r0.global-to-local, align 4
  %v6_164dc = load i32, i32* %r2.global-to-local, align 4
  %v7_164dc = add i32 %v6_164dc, -12
  store i32 %v7_164dc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_164fc45 = phi i32 [ %v6_164d8, %.thread2 ], [ %v7_164d8, %bb148 ]
  %v0_164e443 = phi i32 [ %v4_164d0, %.thread2 ], [ %v7_164dc, %bb148 ]
  %v2_164e0 = load i8*, i8** %stack_var_-8, align 4
  %v3_164e0 = ptrtoint i8* %v2_164e0 to i32
  store i32 %v3_164e0, i32* @r4, align 4
  store i32 %v8_1649c, i32* @lr, align 4
  br label %dec_label_pc_164e4

dec_label_pc_164e4:                               ; preds = %dec_label_pc_16494, %.thread4
  %v7_164f4 = phi i32 [ %v0_164ac37, %dec_label_pc_16494 ], [ %v6_164fc45, %.thread4 ]
  %v0_164e4 = phi i32 [ %v2_16494, %dec_label_pc_16494 ], [ %v0_164e443, %.thread4 ]
  %v2_164e4 = add i32 %v0_164e4, 8
  store i32 %v2_164e4, i32* %r2.global-to-local, align 4
  %v4_164e4 = sub i32 0, %v0_164e4
  %v5_164e4 = and i32 %v2_164e4, %v4_164e4
  %v6_164e4 = icmp slt i32 %v5_164e4, 0
  store i1 %v6_164e4, i1* %cpsr_v.global-to-local, align 1
  %v7_164e4 = icmp slt i32 %v2_164e4, 0
  store i1 %v7_164e4, i1* %cpsr_n.global-to-local, align 1
  %v8_164e4 = icmp eq i32 %v2_164e4, 0
  store i1 %v8_164e4, i1* %cpsr_z.global-to-local, align 1
  %v5_164e8 = icmp slt i32 %v0_164e4, -8
  br i1 %v5_164e8, label %bb150, label %dec_label_pc_164ec

dec_label_pc_164ec:                               ; preds = %dec_label_pc_164e4
  %v6_164ec = add i32 %v0_164e4, 4
  store i32 %v6_164ec, i32* %r2.global-to-local, align 4
  %v8_164ec = sub i32 -5, %v0_164e4
  %v9_164ec = and i32 %v8_164ec, %v2_164e4
  %v10_164ec = icmp slt i32 %v9_164ec, 0
  store i1 %v10_164ec, i1* %cpsr_v.global-to-local, align 1
  %v11_164ec = icmp slt i32 %v6_164ec, 0
  store i1 %v11_164ec, i1* %cpsr_n.global-to-local, align 1
  %v12_164ec = icmp eq i32 %v2_164e4, 4
  store i1 %v12_164ec, i1* %cpsr_z.global-to-local, align 1
  %v5_164f0 = icmp slt i32 %v2_164e4, 4
  %v6_164f0 = load i32, i32* %r1.global-to-local, align 4
  %v7_164f0 = add i32 %v6_164f0, -4
  %v8_164f0 = inttoptr i32 %v7_164f0 to i32*
  %v9_164f0 = load i32, i32* %v8_164f0, align 4
  store i32 %v9_164f0, i32* @r3, align 4
  br i1 %v5_164f0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_164ec
  store i32 %v7_164f0, i32* %r1.global-to-local, align 4
  %v8_164f4 = add i32 %v7_164f4, -4
  %v9_164f4 = inttoptr i32 %v8_164f4 to i32*
  store i32 %v9_164f0, i32* %v9_164f4, align 4
  %v10_164f4 = load i32, i32* %r0.global-to-local, align 4
  %v11_164f4 = add i32 %v10_164f4, -4
  store i32 %v11_164f4, i32* %r0.global-to-local, align 4
  %v0_16504.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_164ec
  %v10_164f8 = add i32 %v6_164f0, -8
  %v11_164f8 = inttoptr i32 %v10_164f8 to i32*
  %v12_164f8 = load i32, i32* %v11_164f8, align 4
  store i32 %v12_164f8, i32* @ip, align 4
  store i32 %v10_164f8, i32* %r1.global-to-local, align 4
  %v7_164fc = add i32 %v7_164f4, -8
  %v8_164fc = inttoptr i32 %v7_164fc to i32*
  store i32 %v9_164f0, i32* %v8_164fc, align 4
  %v10_164fc = add i32 %v7_164f4, -4
  %v11_164fc = inttoptr i32 %v10_164fc to i32*
  %v12_164fc = load i32, i32* @ip, align 4
  store i32 %v12_164fc, i32* %v11_164fc, align 4
  store i32 %v7_164fc, i32* %r0.global-to-local, align 4
  %v6_16500 = load i32, i32* %r2.global-to-local, align 4
  %v7_16500 = add i32 %v6_16500, -4
  store i32 %v7_16500, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %dec_label_pc_164e4, %dec_label_pc_16474, %.thread14, %dec_label_pc_166a8, %dec_label_pc_1663c, %dec_label_pc_165d0, %bb149
  %v2_16508 = phi i32 [ %v11_164f4, %.thread8 ], [ %v7_164f4, %dec_label_pc_164e4 ], [ %v2_16478, %dec_label_pc_16474 ], [ %v0_165a020, %.thread14 ], [ %v2_1651453, %dec_label_pc_166a8 ], [ %v2_1651452, %dec_label_pc_1663c ], [ %v2_1651451, %dec_label_pc_165d0 ], [ %v7_164fc, %bb149 ]
  %v0_16504 = phi i32 [ %v0_16504.pre, %.thread8 ], [ %v2_164e4, %dec_label_pc_164e4 ], [ %v2_1647c, %dec_label_pc_16474 ], [ %v2_16548, %.thread14 ], [ %v0_1650449, %dec_label_pc_166a8 ], [ %v0_1650448, %dec_label_pc_1663c ], [ %v0_1650447, %dec_label_pc_165d0 ], [ %v7_16500, %bb149 ]
  %v1_16504 = add i32 %v0_16504, 4
  store i32 %v1_16504, i32* %r2.global-to-local, align 4
  %v3_16504 = sub i32 0, %v0_16504
  %v4_16504 = and i32 %v1_16504, %v3_16504
  %v5_16504 = icmp slt i32 %v4_16504, 0
  store i1 %v5_16504, i1* %cpsr_v.global-to-local, align 1
  %v6_16504 = icmp slt i32 %v1_16504, 0
  store i1 %v6_16504, i1* %cpsr_n.global-to-local, align 1
  %v7_16504 = icmp eq i32 %v1_16504, 0
  store i1 %v7_16504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16504, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1650c = add i32 %v0_16504, 2
  %v3_1650c = sub i32 -3, %v0_16504
  %v4_1650c = and i32 %v3_1650c, %v1_16504
  %v5_1650c = icmp slt i32 %v4_1650c, 0
  store i1 %v5_1650c, i1* %cpsr_v.global-to-local, align 1
  %v6_1650c = icmp slt i32 %v1_1650c, 0
  store i1 %v6_1650c, i1* %cpsr_n.global-to-local, align 1
  %v7_1650c = icmp eq i32 %v1_16504, 2
  store i1 %v7_1650c, i1* %cpsr_z.global-to-local, align 1
  %v0_16510 = load i32, i32* %r1.global-to-local, align 4
  %v1_16510 = add i32 %v0_16510, -1
  %v2_16510 = inttoptr i32 %v1_16510 to i8*
  %v3_16510 = load i8, i8* %v2_16510, align 1
  %v4_16510 = zext i8 %v3_16510 to i32
  store i32 %v4_16510, i32* @r3, align 4
  store i32 %v1_16510, i32* %r1.global-to-local, align 4
  %v3_16514 = add i32 %v2_16508, -1
  %v4_16514 = inttoptr i32 %v3_16514 to i8*
  store i8 %v3_16510, i8* %v4_16514, align 1
  %v5_16514 = load i32, i32* %r0.global-to-local, align 4
  %v6_16514 = add i32 %v5_16514, -1
  store i32 %v6_16514, i32* %r0.global-to-local, align 4
  %v0_16518 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16518 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_16518 = xor i1 %v0_16518, %v1_16518
  br i1 %v2_16518, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_16518 = load i32, i32* %r1.global-to-local, align 4
  %v4_16518 = add i32 %v3_16518, -1
  %v5_16518 = inttoptr i32 %v4_16518 to i8*
  %v6_16518 = load i8, i8* %v5_16518, align 1
  %v7_16518 = zext i8 %v6_16518 to i32
  store i32 %v7_16518, i32* @r3, align 4
  store i32 %v4_16518, i32* %r1.global-to-local, align 4
  %v6_1651c = add i32 %v5_16514, -2
  %v7_1651c = inttoptr i32 %v6_1651c to i8*
  store i8 %v6_16518, i8* %v7_1651c, align 1
  %v8_1651c = load i32, i32* %r0.global-to-local, align 4
  %v9_1651c = add i32 %v8_1651c, -1
  store i32 %v9_1651c, i32* %r0.global-to-local, align 4
  %v1_16520.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_16520.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_16524 = phi i32 [ %v9_1651c, %bb152 ], [ %v6_16514, %bb151 ]
  %v2_16524 = phi i1 [ %v2_16520.pre, %bb152 ], [ %v1_16518, %bb151 ]
  %v1_16524 = phi i1 [ %v1_16520.pre, %bb152 ], [ %v0_16518, %bb151 ]
  %v0_16520 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_16520 = xor i1 %v2_16524, %v1_16524
  %v4_16520 = or i1 %v0_16520, %v3_16520
  br i1 %v4_16520, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_16520 = load i32, i32* %r1.global-to-local, align 4
  %v6_16520 = add i32 %v5_16520, -1
  %v7_16520 = inttoptr i32 %v6_16520 to i8*
  %v8_16520 = load i8, i8* %v7_16520, align 1
  %v9_16520 = zext i8 %v8_16520 to i32
  store i32 %v9_16520, i32* @r3, align 4
  store i32 %v6_16520, i32* %r1.global-to-local, align 4
  %v8_16524 = add i32 %v7_16524, -1
  %v9_16524 = inttoptr i32 %v8_16524 to i8*
  store i8 %v8_16520, i8* %v9_16524, align 1
  %v10_16524 = load i32, i32* %r0.global-to-local, align 4
  %v11_16524 = add i32 %v10_16524, -1
  store i32 %v11_16524, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1652c:                               ; preds = %dec_label_pc_16484
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1652c = icmp eq i32 %v1_16484, 1
  store i1 %v8_1652c, i1* %cpsr_n.global-to-local, align 1
  %v9_1652c = icmp eq i32 %v1_16484, 2
  store i1 %v9_1652c, i1* %cpsr_z.global-to-local, align 1
  %v1_16530 = add i32 %v2_16474, -1
  %v2_16530 = inttoptr i32 %v1_16530 to i8*
  %v3_16530 = load i8, i8* %v2_16530, align 1
  %v4_16530 = zext i8 %v3_16530 to i32
  store i32 %v4_16530, i32* @r3, align 4
  store i32 %v1_16530, i32* %r1.global-to-local, align 4
  %v3_16534 = add i32 %v2_16478, -1
  %v4_16534 = inttoptr i32 %v3_16534 to i8*
  store i8 %v3_16530, i8* %v4_16534, align 1
  %v5_16534 = load i32, i32* %r0.global-to-local, align 4
  %v6_16534 = add i32 %v5_16534, -1
  store i32 %v6_16534, i32* %r0.global-to-local, align 4
  br i1 %v8_1652c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1652c
  %v6_16538 = load i32, i32* %r1.global-to-local, align 4
  %v7_16538 = add i32 %v6_16538, -1
  %v8_16538 = inttoptr i32 %v7_16538 to i8*
  %v9_16538 = load i8, i8* %v8_16538, align 1
  %v10_16538 = zext i8 %v9_16538 to i32
  store i32 %v10_16538, i32* @r3, align 4
  store i32 %v7_16538, i32* %r1.global-to-local, align 4
  %v9_1653c = add i32 %v5_16534, -2
  %v10_1653c = inttoptr i32 %v9_1653c to i8*
  store i8 %v9_16538, i8* %v10_1653c, align 1
  %v11_1653c = load i32, i32* %r0.global-to-local, align 4
  %v12_1653c = add i32 %v11_1653c, -1
  store i32 %v12_1653c, i32* %r0.global-to-local, align 4
  br i1 %v9_1652c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_16540 = load i32, i32* %r1.global-to-local, align 4
  %v9_16540 = add i32 %v8_16540, -1
  %v10_16540 = inttoptr i32 %v9_16540 to i8*
  %v11_16540 = load i8, i8* %v10_16540, align 1
  %v12_16540 = zext i8 %v11_16540 to i32
  store i32 %v12_16540, i32* @r3, align 4
  store i32 %v9_16540, i32* %r1.global-to-local, align 4
  %v11_16544 = add i32 %v11_1653c, -2
  %v12_16544 = inttoptr i32 %v11_16544 to i8*
  store i8 %v11_16540, i8* %v12_16544, align 1
  %v13_16544 = load i32, i32* %r0.global-to-local, align 4
  %v14_16544 = add i32 %v13_16544, -1
  store i32 %v14_16544, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1652c, %bb155
  %v0_165a020 = phi i32 [ %v12_1653c, %bb154 ], [ %v6_16534, %dec_label_pc_1652c ], [ %v14_16544, %bb155 ]
  %v0_16548 = load i32, i32* %r2.global-to-local, align 4
  %v1_16548 = load i32, i32* @ip, align 4
  %v2_16548 = sub i32 %v0_16548, %v1_16548
  store i32 %v2_16548, i32* %r2.global-to-local, align 4
  %v4_16548 = xor i32 %v1_16548, %v0_16548
  %v5_16548 = xor i32 %v2_16548, %v0_16548
  %v6_16548 = and i32 %v5_16548, %v4_16548
  %v7_16548 = icmp slt i32 %v6_16548, 0
  store i1 %v7_16548, i1* %cpsr_v.global-to-local, align 1
  %v8_16548 = icmp slt i32 %v2_16548, 0
  store i1 %v8_16548, i1* %cpsr_n.global-to-local, align 1
  %v9_16548 = icmp eq i32 %v0_16548, %v1_16548
  store i1 %v9_16548, i1* %cpsr_z.global-to-local, align 1
  %v5_1654c = icmp slt i32 %v0_16548, %v1_16548
  br i1 %v5_1654c, label %bb150, label %dec_label_pc_16550

dec_label_pc_16550:                               ; preds = %.thread14
  %v0_16550 = load i32, i32* %r1.global-to-local, align 4
  %v1_16550 = urem i32 %v0_16550, 4
  store i32 %v1_16550, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16550 = icmp eq i32 %v1_16550, 0
  store i1 %v2_16550, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16550, label %dec_label_pc_16494, label %dec_label_pc_16558

dec_label_pc_16558:                               ; preds = %dec_label_pc_1648c, %dec_label_pc_16550
  %v0_165a019 = phi i32 [ %v2_16478, %dec_label_pc_1648c ], [ %v0_165a020, %dec_label_pc_16550 ]
  %v0_1664c = phi i32 [ %v2_1647c, %dec_label_pc_1648c ], [ %v2_16548, %dec_label_pc_16550 ]
  %v0_16558 = phi i32 [ %v2_16474, %dec_label_pc_1648c ], [ %v0_16550, %dec_label_pc_16550 ]
  %v0_16560 = phi i32 [ %v1_1648c, %dec_label_pc_1648c ], [ %v1_16550, %dec_label_pc_16550 ]
  %v1_16558 = and i32 %v0_16558, -4
  store i32 %v1_16558, i32* %r1.global-to-local, align 4
  %v1_1655c = inttoptr i32 %v1_16558 to i32*
  %v2_1655c = load i32, i32* %v1_1655c, align 4
  store i32 %v2_1655c, i32* @r3, align 4
  %v7_16560 = icmp ult i32 %v0_16560, 2
  %v2_16644 = add i32 %v0_1664c, -12
  %v4_16644 = sub i32 11, %v0_1664c
  %v5_16644 = and i32 %v4_16644, %v0_1664c
  %v6_16644 = icmp slt i32 %v5_16644, 0
  store i1 %v6_16644, i1* %cpsr_v.global-to-local, align 1
  %v7_16644 = icmp slt i32 %v2_16644, 0
  store i1 %v7_16644, i1* %cpsr_n.global-to-local, align 1
  %v8_16644 = icmp eq i32 %v0_1664c, 12
  store i1 %v8_16644, i1* %cpsr_z.global-to-local, align 1
  %v5_16648 = icmp slt i32 %v0_1664c, 12
  br i1 %v7_16560, label %dec_label_pc_16644, label %dec_label_pc_16568

dec_label_pc_16568:                               ; preds = %dec_label_pc_16558
  %v8_16560 = icmp eq i32 %v0_16560, 2
  br i1 %v8_16560, label %dec_label_pc_165d8, label %dec_label_pc_1656c

dec_label_pc_1656c:                               ; preds = %dec_label_pc_16568
  br i1 %v5_16648, label %dec_label_pc_165b8, label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_1656c
  store i32 %v2_16644, i32* %r2.global-to-local, align 4
  %v3_16578 = load i32, i32* @r4, align 4
  store i32 %v3_16578, i32* %stack_var_-12, align 4
  %v6_16578 = load i32, i32* @r5, align 4
  %v8_16578 = inttoptr i32 %v6_16578 to i8*
  store i8* %v8_16578, i8** %stack_var_-8, align 4
  %v11_16578 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %dec_label_pc_1657c.dec_label_pc_1657c_crit_edge, %dec_label_pc_16574
  %v0_165a0 = phi i32 [ %v1_165a0, %dec_label_pc_1657c.dec_label_pc_1657c_crit_edge ], [ %v0_165a019, %dec_label_pc_16574 ]
  %v0_16580 = phi i32 [ %v0_16580.pre, %dec_label_pc_1657c.dec_label_pc_1657c_crit_edge ], [ %v1_16558, %dec_label_pc_16574 ]
  %v0_1657c = phi i32 [ %v0_1657c.pre, %dec_label_pc_1657c.dec_label_pc_1657c_crit_edge ], [ %v2_1655c, %dec_label_pc_16574 ]
  %v3_1657c = mul i32 %v0_1657c, 256
  store i32 %v3_1657c, i32* %lr.global-to-local, align 4
  %v1_16580 = add i32 %v0_16580, -4
  %v2_16580 = inttoptr i32 %v1_16580 to i32*
  %v3_16580 = load i32, i32* %v2_16580, align 4
  store i32 %v3_16580, i32* @r3, align 4
  %v4_16580 = add i32 %v0_16580, -8
  %v5_16580 = inttoptr i32 %v4_16580 to i32*
  %v6_16580 = load i32, i32* %v5_16580, align 4
  store i32 %v6_16580, i32* %r4.global-to-local, align 4
  %v7_16580 = add i32 %v0_16580, -12
  %v8_16580 = inttoptr i32 %v7_16580 to i32*
  %v9_16580 = load i32, i32* %v8_16580, align 4
  store i32 %v9_16580, i32* %r5.global-to-local, align 4
  %v10_16580 = add i32 %v0_16580, -16
  %v11_16580 = inttoptr i32 %v10_16580 to i32*
  %v12_16580 = load i32, i32* %v11_16580, align 4
  store i32 %v10_16580, i32* %r1.global-to-local, align 4
  %v4_16584 = udiv i32 %v12_16580, 16777216
  %v5_16584 = or i32 %v4_16584, %v3_1657c
  store i32 %v5_16584, i32* %lr.global-to-local, align 4
  %v3_16588 = mul i32 %v12_16580, 256
  %v4_1658c = udiv i32 %v9_16580, 16777216
  %v5_1658c = or i32 %v3_16588, %v4_1658c
  store i32 %v5_1658c, i32* @ip, align 4
  %v3_16590 = mul i32 %v9_16580, 256
  %v4_16594 = udiv i32 %v6_16580, 16777216
  %v5_16594 = or i32 %v3_16590, %v4_16594
  store i32 %v5_16594, i32* %r5.global-to-local, align 4
  %v3_16598 = mul i32 %v6_16580, 256
  %v4_1659c = udiv i32 %v3_16580, 16777216
  %v5_1659c = or i32 %v3_16598, %v4_1659c
  store i32 %v5_1659c, i32* %r4.global-to-local, align 4
  %v1_165a0 = add i32 %v0_165a0, -16
  %v2_165a0 = inttoptr i32 %v1_165a0 to i32*
  store i32 %v5_1659c, i32* %v2_165a0, align 4
  %v4_165a0 = add i32 %v0_165a0, -12
  %v5_165a0 = inttoptr i32 %v4_165a0 to i32*
  %v6_165a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_165a0, i32* %v5_165a0, align 4
  %v7_165a0 = add i32 %v0_165a0, -8
  %v8_165a0 = inttoptr i32 %v7_165a0 to i32*
  %v9_165a0 = load i32, i32* @ip, align 4
  store i32 %v9_165a0, i32* %v8_165a0, align 4
  %v10_165a0 = add i32 %v0_165a0, -4
  %v11_165a0 = inttoptr i32 %v10_165a0 to i32*
  %v12_165a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_165a0, i32* %v11_165a0, align 4
  store i32 %v1_165a0, i32* %r0.global-to-local, align 4
  %v0_165a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_165a4 = add i32 %v0_165a4, -16
  store i32 %v2_165a4, i32* %r2.global-to-local, align 4
  %v6_165a8 = icmp slt i32 %v0_165a4, 16
  br i1 %v6_165a8, label %dec_label_pc_165ac, label %dec_label_pc_1657c.dec_label_pc_1657c_crit_edge

dec_label_pc_1657c.dec_label_pc_1657c_crit_edge:  ; preds = %dec_label_pc_1657c
  %v0_1657c.pre = load i32, i32* @r3, align 4
  %v0_16580.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_165ac:                               ; preds = %dec_label_pc_1657c
  %v2_165ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_165ac, i32* @r4, align 4
  %v5_165ac = load i8*, i8** %stack_var_-8, align 4
  %v6_165ac = ptrtoint i8* %v5_165ac to i32
  store i32 %v6_165ac, i32* @r5, align 4
  store i32 %v11_16578, i32* @lr, align 4
  %v2_165b0 = add i32 %v0_165a4, -4
  store i32 %v2_165b0, i32* %r2.global-to-local, align 4
  %v4_165b0 = add i32 %v0_165a4, 2147483632
  %v5_165b0 = and i32 %v2_165b0, %v4_165b0
  %v6_165b0 = icmp slt i32 %v5_165b0, 0
  store i1 %v6_165b0, i1* %cpsr_v.global-to-local, align 1
  %v7_165b0 = icmp slt i32 %v2_165b0, 0
  store i1 %v7_165b0, i1* %cpsr_n.global-to-local, align 1
  %v8_165b0 = icmp eq i32 %v2_165b0, 0
  store i1 %v8_165b0, i1* %cpsr_z.global-to-local, align 1
  %v5_165b4 = icmp slt i32 %v2_165a4, -12
  br i1 %v5_165b4, label %dec_label_pc_165d0, label %dec_label_pc_165b8

dec_label_pc_165b8:                               ; preds = %dec_label_pc_165ac, %dec_label_pc_1656c, %dec_label_pc_165b8
  %v1_165c4 = phi i32 [ %v5_165c4, %dec_label_pc_165b8 ], [ %v1_165a0, %dec_label_pc_165ac ], [ %v0_165a019, %dec_label_pc_1656c ]
  %v0_165b8 = load i32, i32* @r3, align 4
  %v3_165b8 = mul i32 %v0_165b8, 256
  store i32 %v3_165b8, i32* %ip.global-to-local, align 4
  %v0_165bc = load i32, i32* %r1.global-to-local, align 4
  %v1_165bc = add i32 %v0_165bc, -4
  %v2_165bc = inttoptr i32 %v1_165bc to i32*
  %v3_165bc = load i32, i32* %v2_165bc, align 4
  store i32 %v3_165bc, i32* @r3, align 4
  store i32 %v1_165bc, i32* %r1.global-to-local, align 4
  %v4_165c0 = udiv i32 %v3_165bc, 16777216
  %v5_165c0 = or i32 %v4_165c0, %v3_165b8
  store i32 %v5_165c0, i32* @ip, align 4
  %v2_165c4 = add i32 %v1_165c4, -4
  %v3_165c4 = inttoptr i32 %v2_165c4 to i32*
  store i32 %v5_165c0, i32* %v3_165c4, align 4
  %v4_165c4 = load i32, i32* %r0.global-to-local, align 4
  %v5_165c4 = add i32 %v4_165c4, -4
  store i32 %v5_165c4, i32* %r0.global-to-local, align 4
  %v0_165c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_165c8 = add i32 %v0_165c8, -4
  store i32 %v2_165c8, i32* %r2.global-to-local, align 4
  %v6_165cc = icmp slt i32 %v0_165c8, 4
  br i1 %v6_165cc, label %dec_label_pc_165d0.loopexit, label %dec_label_pc_165b8

dec_label_pc_165d0.loopexit:                      ; preds = %dec_label_pc_165b8
  %v4_165c8 = sub i32 3, %v0_165c8
  %v5_165c8 = and i32 %v4_165c8, %v0_165c8
  %v6_165c8 = icmp slt i32 %v5_165c8, 0
  %v7_165c8 = icmp slt i32 %v2_165c8, 0
  store i1 %v6_165c8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_165c8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_165d0

dec_label_pc_165d0:                               ; preds = %dec_label_pc_165d0.loopexit, %dec_label_pc_165ac
  %v2_1651451 = phi i32 [ %v5_165c4, %dec_label_pc_165d0.loopexit ], [ %v1_165a0, %dec_label_pc_165ac ]
  %v0_1650447 = phi i32 [ %v2_165c8, %dec_label_pc_165d0.loopexit ], [ %v2_165b0, %dec_label_pc_165ac ]
  %v0_165d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_165d0 = add i32 %v0_165d0, 3
  store i32 %v1_165d0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_165d8:                               ; preds = %dec_label_pc_16568
  br i1 %v5_16648, label %dec_label_pc_16624, label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165d8
  store i32 %v2_16644, i32* %r2.global-to-local, align 4
  %v3_165e4 = load i32, i32* @r4, align 4
  store i32 %v3_165e4, i32* %stack_var_-12, align 4
  %v6_165e4 = load i32, i32* @r5, align 4
  %v8_165e4 = inttoptr i32 %v6_165e4 to i8*
  store i8* %v8_165e4, i8** %stack_var_-8, align 4
  %v11_165e4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_165e8

dec_label_pc_165e8:                               ; preds = %dec_label_pc_165e8.dec_label_pc_165e8_crit_edge, %dec_label_pc_165e0
  %v0_1660c = phi i32 [ %v1_1660c, %dec_label_pc_165e8.dec_label_pc_165e8_crit_edge ], [ %v0_165a019, %dec_label_pc_165e0 ]
  %v0_165ec = phi i32 [ %v0_165ec.pre, %dec_label_pc_165e8.dec_label_pc_165e8_crit_edge ], [ %v1_16558, %dec_label_pc_165e0 ]
  %v0_165e8 = phi i32 [ %v0_165e8.pre, %dec_label_pc_165e8.dec_label_pc_165e8_crit_edge ], [ %v2_1655c, %dec_label_pc_165e0 ]
  %v3_165e8 = mul i32 %v0_165e8, 65536
  store i32 %v3_165e8, i32* %lr.global-to-local, align 4
  %v1_165ec = add i32 %v0_165ec, -4
  %v2_165ec = inttoptr i32 %v1_165ec to i32*
  %v3_165ec = load i32, i32* %v2_165ec, align 4
  store i32 %v3_165ec, i32* @r3, align 4
  %v4_165ec = add i32 %v0_165ec, -8
  %v5_165ec = inttoptr i32 %v4_165ec to i32*
  %v6_165ec = load i32, i32* %v5_165ec, align 4
  store i32 %v6_165ec, i32* %r4.global-to-local, align 4
  %v7_165ec = add i32 %v0_165ec, -12
  %v8_165ec = inttoptr i32 %v7_165ec to i32*
  %v9_165ec = load i32, i32* %v8_165ec, align 4
  store i32 %v9_165ec, i32* %r5.global-to-local, align 4
  %v10_165ec = add i32 %v0_165ec, -16
  %v11_165ec = inttoptr i32 %v10_165ec to i32*
  %v12_165ec = load i32, i32* %v11_165ec, align 4
  store i32 %v10_165ec, i32* %r1.global-to-local, align 4
  %v4_165f0 = udiv i32 %v12_165ec, 65536
  %v5_165f0 = or i32 %v4_165f0, %v3_165e8
  store i32 %v5_165f0, i32* %lr.global-to-local, align 4
  %v3_165f4 = mul i32 %v12_165ec, 65536
  %v4_165f8 = udiv i32 %v9_165ec, 65536
  %v5_165f8 = or i32 %v3_165f4, %v4_165f8
  store i32 %v5_165f8, i32* @ip, align 4
  %v3_165fc = mul i32 %v9_165ec, 65536
  %v4_16600 = udiv i32 %v6_165ec, 65536
  %v5_16600 = or i32 %v3_165fc, %v4_16600
  store i32 %v5_16600, i32* %r5.global-to-local, align 4
  %v3_16604 = mul i32 %v6_165ec, 65536
  %v4_16608 = udiv i32 %v3_165ec, 65536
  %v5_16608 = or i32 %v3_16604, %v4_16608
  store i32 %v5_16608, i32* %r4.global-to-local, align 4
  %v1_1660c = add i32 %v0_1660c, -16
  %v2_1660c = inttoptr i32 %v1_1660c to i32*
  store i32 %v5_16608, i32* %v2_1660c, align 4
  %v4_1660c = add i32 %v0_1660c, -12
  %v5_1660c = inttoptr i32 %v4_1660c to i32*
  %v6_1660c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1660c, i32* %v5_1660c, align 4
  %v7_1660c = add i32 %v0_1660c, -8
  %v8_1660c = inttoptr i32 %v7_1660c to i32*
  %v9_1660c = load i32, i32* @ip, align 4
  store i32 %v9_1660c, i32* %v8_1660c, align 4
  %v10_1660c = add i32 %v0_1660c, -4
  %v11_1660c = inttoptr i32 %v10_1660c to i32*
  %v12_1660c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1660c, i32* %v11_1660c, align 4
  store i32 %v1_1660c, i32* %r0.global-to-local, align 4
  %v0_16610 = load i32, i32* %r2.global-to-local, align 4
  %v2_16610 = add i32 %v0_16610, -16
  store i32 %v2_16610, i32* %r2.global-to-local, align 4
  %v6_16614 = icmp slt i32 %v0_16610, 16
  br i1 %v6_16614, label %dec_label_pc_16618, label %dec_label_pc_165e8.dec_label_pc_165e8_crit_edge

dec_label_pc_165e8.dec_label_pc_165e8_crit_edge:  ; preds = %dec_label_pc_165e8
  %v0_165e8.pre = load i32, i32* @r3, align 4
  %v0_165ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_165e8

dec_label_pc_16618:                               ; preds = %dec_label_pc_165e8
  %v2_16618 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16618, i32* @r4, align 4
  %v5_16618 = load i8*, i8** %stack_var_-8, align 4
  %v6_16618 = ptrtoint i8* %v5_16618 to i32
  store i32 %v6_16618, i32* @r5, align 4
  store i32 %v11_165e4, i32* @lr, align 4
  %v2_1661c = add i32 %v0_16610, -4
  store i32 %v2_1661c, i32* %r2.global-to-local, align 4
  %v4_1661c = add i32 %v0_16610, 2147483632
  %v5_1661c = and i32 %v2_1661c, %v4_1661c
  %v6_1661c = icmp slt i32 %v5_1661c, 0
  store i1 %v6_1661c, i1* %cpsr_v.global-to-local, align 1
  %v7_1661c = icmp slt i32 %v2_1661c, 0
  store i1 %v7_1661c, i1* %cpsr_n.global-to-local, align 1
  %v8_1661c = icmp eq i32 %v2_1661c, 0
  store i1 %v8_1661c, i1* %cpsr_z.global-to-local, align 1
  %v5_16620 = icmp slt i32 %v2_16610, -12
  br i1 %v5_16620, label %dec_label_pc_1663c, label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_16618, %dec_label_pc_165d8, %dec_label_pc_16624
  %v1_16630 = phi i32 [ %v5_16630, %dec_label_pc_16624 ], [ %v1_1660c, %dec_label_pc_16618 ], [ %v0_165a019, %dec_label_pc_165d8 ]
  %v0_16624 = load i32, i32* @r3, align 4
  %v3_16624 = mul i32 %v0_16624, 65536
  store i32 %v3_16624, i32* %ip.global-to-local, align 4
  %v0_16628 = load i32, i32* %r1.global-to-local, align 4
  %v1_16628 = add i32 %v0_16628, -4
  %v2_16628 = inttoptr i32 %v1_16628 to i32*
  %v3_16628 = load i32, i32* %v2_16628, align 4
  store i32 %v3_16628, i32* @r3, align 4
  store i32 %v1_16628, i32* %r1.global-to-local, align 4
  %v4_1662c = udiv i32 %v3_16628, 65536
  %v5_1662c = or i32 %v4_1662c, %v3_16624
  store i32 %v5_1662c, i32* @ip, align 4
  %v2_16630 = add i32 %v1_16630, -4
  %v3_16630 = inttoptr i32 %v2_16630 to i32*
  store i32 %v5_1662c, i32* %v3_16630, align 4
  %v4_16630 = load i32, i32* %r0.global-to-local, align 4
  %v5_16630 = add i32 %v4_16630, -4
  store i32 %v5_16630, i32* %r0.global-to-local, align 4
  %v0_16634 = load i32, i32* %r2.global-to-local, align 4
  %v2_16634 = add i32 %v0_16634, -4
  store i32 %v2_16634, i32* %r2.global-to-local, align 4
  %v6_16638 = icmp slt i32 %v0_16634, 4
  br i1 %v6_16638, label %dec_label_pc_1663c.loopexit, label %dec_label_pc_16624

dec_label_pc_1663c.loopexit:                      ; preds = %dec_label_pc_16624
  %v4_16634 = sub i32 3, %v0_16634
  %v5_16634 = and i32 %v4_16634, %v0_16634
  %v6_16634 = icmp slt i32 %v5_16634, 0
  %v7_16634 = icmp slt i32 %v2_16634, 0
  store i1 %v6_16634, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16634, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1663c

dec_label_pc_1663c:                               ; preds = %dec_label_pc_1663c.loopexit, %dec_label_pc_16618
  %v2_1651452 = phi i32 [ %v5_16630, %dec_label_pc_1663c.loopexit ], [ %v1_1660c, %dec_label_pc_16618 ]
  %v0_1650448 = phi i32 [ %v2_16634, %dec_label_pc_1663c.loopexit ], [ %v2_1661c, %dec_label_pc_16618 ]
  %v0_1663c = load i32, i32* %r1.global-to-local, align 4
  %v1_1663c = add i32 %v0_1663c, 2
  store i32 %v1_1663c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_16644:                               ; preds = %dec_label_pc_16558
  br i1 %v5_16648, label %dec_label_pc_16690, label %dec_label_pc_1664c

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16644
  store i32 %v2_16644, i32* %r2.global-to-local, align 4
  %v3_16650 = load i32, i32* @r4, align 4
  store i32 %v3_16650, i32* %stack_var_-12, align 4
  %v6_16650 = load i32, i32* @r5, align 4
  %v8_16650 = inttoptr i32 %v6_16650 to i8*
  store i8* %v8_16650, i8** %stack_var_-8, align 4
  %v11_16650 = load i32, i32* @lr, align 4
  br label %dec_label_pc_16654

dec_label_pc_16654:                               ; preds = %dec_label_pc_16654.dec_label_pc_16654_crit_edge, %dec_label_pc_1664c
  %v0_16678 = phi i32 [ %v1_16678, %dec_label_pc_16654.dec_label_pc_16654_crit_edge ], [ %v0_165a019, %dec_label_pc_1664c ]
  %v0_16658 = phi i32 [ %v0_16658.pre, %dec_label_pc_16654.dec_label_pc_16654_crit_edge ], [ %v1_16558, %dec_label_pc_1664c ]
  %v0_16654 = phi i32 [ %v0_16654.pre, %dec_label_pc_16654.dec_label_pc_16654_crit_edge ], [ %v2_1655c, %dec_label_pc_1664c ]
  %v3_16654 = mul i32 %v0_16654, 16777216
  store i32 %v3_16654, i32* %lr.global-to-local, align 4
  %v1_16658 = add i32 %v0_16658, -4
  %v2_16658 = inttoptr i32 %v1_16658 to i32*
  %v3_16658 = load i32, i32* %v2_16658, align 4
  store i32 %v3_16658, i32* @r3, align 4
  %v4_16658 = add i32 %v0_16658, -8
  %v5_16658 = inttoptr i32 %v4_16658 to i32*
  %v6_16658 = load i32, i32* %v5_16658, align 4
  store i32 %v6_16658, i32* %r4.global-to-local, align 4
  %v7_16658 = add i32 %v0_16658, -12
  %v8_16658 = inttoptr i32 %v7_16658 to i32*
  %v9_16658 = load i32, i32* %v8_16658, align 4
  store i32 %v9_16658, i32* %r5.global-to-local, align 4
  %v10_16658 = add i32 %v0_16658, -16
  %v11_16658 = inttoptr i32 %v10_16658 to i32*
  %v12_16658 = load i32, i32* %v11_16658, align 4
  store i32 %v10_16658, i32* %r1.global-to-local, align 4
  %v4_1665c = udiv i32 %v12_16658, 256
  %v5_1665c = or i32 %v4_1665c, %v3_16654
  store i32 %v5_1665c, i32* %lr.global-to-local, align 4
  %v3_16660 = mul i32 %v12_16658, 16777216
  %v4_16664 = udiv i32 %v9_16658, 256
  %v5_16664 = or i32 %v3_16660, %v4_16664
  store i32 %v5_16664, i32* @ip, align 4
  %v3_16668 = mul i32 %v9_16658, 16777216
  %v4_1666c = udiv i32 %v6_16658, 256
  %v5_1666c = or i32 %v3_16668, %v4_1666c
  store i32 %v5_1666c, i32* %r5.global-to-local, align 4
  %v3_16670 = mul i32 %v6_16658, 16777216
  %v4_16674 = udiv i32 %v3_16658, 256
  %v5_16674 = or i32 %v3_16670, %v4_16674
  store i32 %v5_16674, i32* %r4.global-to-local, align 4
  %v1_16678 = add i32 %v0_16678, -16
  %v2_16678 = inttoptr i32 %v1_16678 to i32*
  store i32 %v5_16674, i32* %v2_16678, align 4
  %v4_16678 = add i32 %v0_16678, -12
  %v5_16678 = inttoptr i32 %v4_16678 to i32*
  %v6_16678 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16678, i32* %v5_16678, align 4
  %v7_16678 = add i32 %v0_16678, -8
  %v8_16678 = inttoptr i32 %v7_16678 to i32*
  %v9_16678 = load i32, i32* @ip, align 4
  store i32 %v9_16678, i32* %v8_16678, align 4
  %v10_16678 = add i32 %v0_16678, -4
  %v11_16678 = inttoptr i32 %v10_16678 to i32*
  %v12_16678 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16678, i32* %v11_16678, align 4
  store i32 %v1_16678, i32* %r0.global-to-local, align 4
  %v0_1667c = load i32, i32* %r2.global-to-local, align 4
  %v2_1667c = add i32 %v0_1667c, -16
  store i32 %v2_1667c, i32* %r2.global-to-local, align 4
  %v6_16680 = icmp slt i32 %v0_1667c, 16
  br i1 %v6_16680, label %dec_label_pc_16684, label %dec_label_pc_16654.dec_label_pc_16654_crit_edge

dec_label_pc_16654.dec_label_pc_16654_crit_edge:  ; preds = %dec_label_pc_16654
  %v0_16654.pre = load i32, i32* @r3, align 4
  %v0_16658.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16654

dec_label_pc_16684:                               ; preds = %dec_label_pc_16654
  %v2_16684 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16684, i32* @r4, align 4
  %v5_16684 = load i8*, i8** %stack_var_-8, align 4
  %v6_16684 = ptrtoint i8* %v5_16684 to i32
  store i32 %v6_16684, i32* @r5, align 4
  store i32 %v11_16650, i32* @lr, align 4
  %v2_16688 = add i32 %v0_1667c, -4
  store i32 %v2_16688, i32* %r2.global-to-local, align 4
  %v4_16688 = add i32 %v0_1667c, 2147483632
  %v5_16688 = and i32 %v2_16688, %v4_16688
  %v6_16688 = icmp slt i32 %v5_16688, 0
  store i1 %v6_16688, i1* %cpsr_v.global-to-local, align 1
  %v7_16688 = icmp slt i32 %v2_16688, 0
  store i1 %v7_16688, i1* %cpsr_n.global-to-local, align 1
  %v8_16688 = icmp eq i32 %v2_16688, 0
  store i1 %v8_16688, i1* %cpsr_z.global-to-local, align 1
  %v5_1668c = icmp slt i32 %v2_1667c, -12
  br i1 %v5_1668c, label %dec_label_pc_166a8, label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %dec_label_pc_16684, %dec_label_pc_16644, %dec_label_pc_16690
  %v1_1669c = phi i32 [ %v5_1669c, %dec_label_pc_16690 ], [ %v1_16678, %dec_label_pc_16684 ], [ %v0_165a019, %dec_label_pc_16644 ]
  %v0_16690 = load i32, i32* @r3, align 4
  %v3_16690 = mul i32 %v0_16690, 16777216
  store i32 %v3_16690, i32* %ip.global-to-local, align 4
  %v0_16694 = load i32, i32* %r1.global-to-local, align 4
  %v1_16694 = add i32 %v0_16694, -4
  %v2_16694 = inttoptr i32 %v1_16694 to i32*
  %v3_16694 = load i32, i32* %v2_16694, align 4
  store i32 %v3_16694, i32* @r3, align 4
  store i32 %v1_16694, i32* %r1.global-to-local, align 4
  %v4_16698 = udiv i32 %v3_16694, 256
  %v5_16698 = or i32 %v4_16698, %v3_16690
  store i32 %v5_16698, i32* @ip, align 4
  %v2_1669c = add i32 %v1_1669c, -4
  %v3_1669c = inttoptr i32 %v2_1669c to i32*
  store i32 %v5_16698, i32* %v3_1669c, align 4
  %v4_1669c = load i32, i32* %r0.global-to-local, align 4
  %v5_1669c = add i32 %v4_1669c, -4
  store i32 %v5_1669c, i32* %r0.global-to-local, align 4
  %v0_166a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_166a0 = add i32 %v0_166a0, -4
  store i32 %v2_166a0, i32* %r2.global-to-local, align 4
  %v6_166a4 = icmp slt i32 %v0_166a0, 4
  br i1 %v6_166a4, label %dec_label_pc_166a8.loopexit, label %dec_label_pc_16690

dec_label_pc_166a8.loopexit:                      ; preds = %dec_label_pc_16690
  %v4_166a0 = sub i32 3, %v0_166a0
  %v5_166a0 = and i32 %v4_166a0, %v0_166a0
  %v6_166a0 = icmp slt i32 %v5_166a0, 0
  %v7_166a0 = icmp slt i32 %v2_166a0, 0
  store i1 %v6_166a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_166a0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_166a8

dec_label_pc_166a8:                               ; preds = %dec_label_pc_166a8.loopexit, %dec_label_pc_16684
  %v2_1651453 = phi i32 [ %v5_1669c, %dec_label_pc_166a8.loopexit ], [ %v1_16678, %dec_label_pc_16684 ]
  %v0_1650449 = phi i32 [ %v2_166a0, %dec_label_pc_166a8.loopexit ], [ %v2_16688, %dec_label_pc_16684 ]
  %v0_166a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_166a8 = add i32 %v0_166a8, 1
  store i32 %v1_166a8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1669c, { 0, 2, 1 }
  uselistorder i32 %v3_16690, { 1, 0 }
  uselistorder i32 %v2_16688, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16678, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16658, { 1, 0 }
  uselistorder i32 %v3_16654, { 1, 0 }
  uselistorder i32 %v0_16658, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16678, { 3, 2, 1, 0 }
  uselistorder i32 %v5_16630, { 0, 2, 1 }
  uselistorder i32 %v3_16624, { 1, 0 }
  uselistorder i32 %v2_1661c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1660c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_165ec, { 1, 0 }
  uselistorder i32 %v3_165e8, { 1, 0 }
  uselistorder i32 %v0_165ec, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1660c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_165c4, { 0, 2, 1 }
  uselistorder i32 %v3_165b8, { 1, 0 }
  uselistorder i32 %v2_165b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_165a0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16580, { 1, 0 }
  uselistorder i32 %v3_1657c, { 1, 0 }
  uselistorder i32 %v0_16580, { 3, 2, 1, 0 }
  uselistorder i32 %v0_165a0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_16648, { 2, 0, 1 }
  uselistorder i32 %v0_16560, { 1, 0 }
  uselistorder i32 %v0_1664c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_165a019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_16550, { 2, 1, 0 }
  uselistorder i32 %v0_16550, { 2, 0, 1 }
  uselistorder i32 %v2_16548, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_16548, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16548, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_165a020, { 2, 1, 0 }
  uselistorder i32 %v11_16524, { 1, 0 }
  uselistorder i32 %v7_16524, { 1, 0 }
  uselistorder i32 %v1_16504, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_16504, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16508, { 1, 0 }
  uselistorder i32 %v7_164fc, { 0, 2, 1 }
  uselistorder i32 %v10_164f8, { 1, 0 }
  uselistorder i32 %v9_164f0, { 1, 0, 2 }
  uselistorder i32 %v6_164ec, { 1, 0 }
  uselistorder i32 %v2_164e4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_164e4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_164f4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_164d8, { 0, 2, 1 }
  uselistorder i32 %v13_164d4, { 1, 0 }
  uselistorder i32 %v4_164d0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_164d0, { 2, 0, 1 }
  uselistorder i32 %v6_164d8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_164c8, { 0, 2, 1 }
  uselistorder i32 %v16_164c4, { 1, 0 }
  uselistorder i32 %v4_164c0, { 1, 2, 0 }
  uselistorder i32 %v0_164d0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_164c8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_164b4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_164b0, { 1, 0 }
  uselistorder i32 %v1_164ac, { 1, 0 }
  uselistorder i32 %v10_164a8, { 1, 0 }
  uselistorder i32 %v0_164a8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_164ac, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_164a0, { 0, 2, 1 }
  uselistorder i32 %v2_16494, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_16494, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_164ac37, { 1, 2, 0 }
  uselistorder i32 %v1_1648c, { 2, 1, 0 }
  uselistorder i32 %v1_16484, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1647c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_16478, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_16474, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_16474, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_16464, { 0, 2, 1 }
  uselistorder i32 %v4_16460, { 1, 0 }
  uselistorder i32 %v3_16454, { 1, 0 }
  uselistorder i32 %v1_1644c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16440, { 1, 0 }
  uselistorder i32 %v12_1643c, { 0, 2, 1 }
  uselistorder i32 %v8_1641c, { 1, 0, 2 }
  uselistorder i32 %v5_1641c, { 1, 0, 2 }
  uselistorder i32 %v2_1641c, { 1, 0, 2 }
  uselistorder i32 %v0_1641c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1643c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_163f8, { 0, 2, 1 }
  uselistorder i32 %v4_163f4, { 1, 0 }
  uselistorder i32 %v3_163e8, { 1, 0 }
  uselistorder i32 %v1_163e0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_163d4, { 1, 0 }
  uselistorder i32 %v12_163d0, { 0, 2, 1 }
  uselistorder i32 %v8_163b0, { 1, 0, 2 }
  uselistorder i32 %v5_163b0, { 1, 0, 2 }
  uselistorder i32 %v2_163b0, { 1, 0, 2 }
  uselistorder i32 %v0_163b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_163d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1638c, { 0, 2, 1 }
  uselistorder i32 %v4_16388, { 1, 0 }
  uselistorder i32 %v3_1637c, { 1, 0 }
  uselistorder i32 %v1_16374, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16368, { 1, 0 }
  uselistorder i32 %v12_16364, { 0, 2, 1 }
  uselistorder i32 %v8_16344, { 1, 0, 2 }
  uselistorder i32 %v5_16344, { 1, 0, 2 }
  uselistorder i32 %v2_16344, { 1, 0, 2 }
  uselistorder i32 %v0_16344, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16364, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_163a0, { 0, 2, 1 }
  uselistorder i32 %v1_1639c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16320, { 2, 0, 1, 3 }
  uselistorder i32 %v2_16320, { 2, 0, 1, 3 }
  uselistorder i32 %v0_163a4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1643c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_16314, { 1, 0 }
  uselistorder i32 %v0_16314, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1630c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1630c, { 1, 0, 2 }
  uselistorder i32 %v0_1630c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1643c77, { 1, 0 }
  uselistorder i32 %v1_162ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_162f4, { 1, 0 }
  uselistorder i32 %v0_162c8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_162bc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_162a8, { 1, 0, 2 }
  uselistorder i32 %v1_162a4, { 1, 0 }
  uselistorder i32 %v1_1629c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1629c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_16294, { 0, 2, 1 }
  uselistorder i32 %v3_16294, { 3, 0, 1, 2 }
  uselistorder i1 %v0_16294, { 1, 0 }
  uselistorder i1 %v1_16294, { 1, 0 }
  uselistorder i32 %v3_16290, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_16288, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_16274, { 1, 2, 0 }
  uselistorder i32 %v1_1626c, { 0, 2, 1 }
  uselistorder i32 %v12_16268, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1625c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16260, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_16250, { 0, 2, 1 }
  uselistorder i32 %v1_16248, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16248, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_16240, { 1, 0 }
  uselistorder i32 %v1_16238, { 2, 1, 0 }
  uselistorder i32 %v2_16230, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_16230, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1622c, { 1, 0 }
  uselistorder i32 %v2_16220, { 1, 0 }
  uselistorder i32 %v1_16220, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_16220, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 69, 1, 2, 3, 4, 5, 70, 6, 7, 8, 9, 10, 71, 11, 12, 67, 68, 72, 28, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 29, 30, 62, 31, 32, 33, 34, 35, 63, 36, 37, 38, 39, 40, 64, 41, 42, 43, 44, 45, 65, 46, 47, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 0, 56, 2, 4, 6, 8, 5, 57, 7, 9, 11, 54, 10, 58, 53, 55, 59, 62, 60, 66, 67, 12, 13, 14, 16, 15, 17, 18, 61, 19, 20, 63, 21, 64, 22, 65, 23, 24, 25, 26, 27, 30, 28, 40, 29, 31, 34, 32, 41, 33, 35, 38, 36, 42, 37, 39, 43, 44, 47, 45, 48, 46, 49, 50, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 28, 1, 2, 29, 3, 4, 30, 5, 27, 33, 34, 6, 7, 19, 8, 10, 9, 11, 12, 31, 13, 14, 32, 15, 16, 17, 18, 20, 21, 23, 22, 24, 25, 26 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 46, 47, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 2, 23, 0, 24, 1, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 49, 50, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20, 21, 22, 23, 24, 2, 25, 0, 26, 1, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 -3, { 0, 4, 5, 3, 1, 2 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 15, { 12, 13, 14, 0, 23, 1, 24, 15, 3, 16, 17, 18, 4, 19, 5, 6, 7, 8, 9, 10, 20, 11, 21, 2, 22 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 31, 2, 4, 5, 3, 6, 7, 8, 9, 20, 36, 41, 39, 40, 38, 32, 33, 21, 22, 34, 35, 37, 26, 27, 28, 23, 29, 30, 11, 12, 16, 17, 18, 10, 13, 14, 15, 19, 24, 25, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 11, { 9, 10, 11, 21, 27, 29, 2, 12, 13, 14, 15, 3, 16, 4, 17, 5, 18, 0, 19, 6, 20, 22, 23, 7, 24, 8, 25, 1, 26, 28 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 3, 5, 4, 23 }
  uselistorder i32 48, { 0, 2, 4, 11, 3, 5, 6, 12, 13, 7, 8, 9, 10, 17, 18, 19, 14, 15, 16, 1 }
  uselistorder i32 40, { 2, 7, 9, 3, 1, 5, 4, 8, 10, 6, 11, 12, 13, 14, 15, 16, 18, 17, 0 }
  uselistorder i32 36, { 4, 19, 5, 6, 7, 20, 8, 17, 9, 18, 10, 11, 12, 0, 1, 13, 2, 14, 3, 15, 16 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1 }
  uselistorder i32 24, { 0, 58, 59, 60, 61, 8, 9, 10, 12, 11, 13, 1, 14, 62, 63, 64, 15, 65, 16, 17, 66, 18, 57, 94, 95, 53, 54, 55, 56, 19, 20, 21, 22, 105, 106, 23, 108, 24, 2, 25, 96, 97, 26, 98, 51, 52, 27, 86, 28, 87, 88, 89, 83, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 29, 79, 30, 80, 31, 81, 82, 84, 85, 90, 91, 92, 93, 32, 33, 34, 35, 3, 36, 37, 99, 38, 39, 4, 40, 41, 42, 43, 44, 45, 100, 46, 5, 101, 102, 103, 104, 47, 48, 109, 49, 6, 110, 7, 107, 50 }
  uselistorder i32 27, { 1, 0, 2, 3 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32* @lr, { 172, 173, 174, 175, 176, 177, 178, 179, 180, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 59, 60, 43, 181, 182, 13, 14, 135, 136, 137, 138, 139, 140, 128, 129, 130, 141, 154, 155, 142, 143, 144, 145, 146, 147, 148, 2, 149, 150, 152, 153, 151, 61, 62, 63, 64, 65, 66, 156, 157, 158, 67, 159, 160, 16, 15, 17, 18, 19, 20, 0, 24, 25, 21, 22, 23, 32, 33, 34, 35, 36, 37, 38, 40, 39, 1, 41, 42, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 161, 162, 163, 164, 165, 166, 167, 171, 131, 132, 133, 134, 168, 169, 170, 108, 109 }
  uselistorder label %dec_label_pc_16690, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16624, { 2, 0, 1 }
  uselistorder label %dec_label_pc_165b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16558, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_164e4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_164a8, { 1, 0 }
  uselistorder label %dec_label_pc_16494, { 1, 0 }
  uselistorder label %dec_label_pc_16454, { 2, 0, 1 }
  uselistorder label %dec_label_pc_163e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1637c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1631c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_162ec, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_16288, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_16248, { 1, 0 }
}

define i32 @function_166b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_166b0:
  %v1_166b0 = and i32 %arg1, -4
  %v1_166b4 = inttoptr i32 %v1_166b0 to i32*
  %v2_166b4 = load i32, i32* %v1_166b4, align 4
  %v1_166b8 = urem i32 %arg1, 4
  store i32 %v1_166b8, i32* @r3, align 4
  %v2_166b8 = icmp eq i32 %v1_166b8, 0
  %v1_166bc = sub nsw i32 0, %v1_166b8
  br i1 %v2_166b8, label %.preheader.preheader, label %dec_label_pc_166c4

dec_label_pc_166c4:                               ; preds = %dec_label_pc_166b0
  %v1_166c4 = or i32 %v2_166b4, 255
  %v7_166c8 = icmp eq i32 %v1_166b8, 1
  br i1 %v7_166c8, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_166c4
  %v9_166cc = or i32 %v2_166b4, or (i32 ptrtoint (i32* @global_var_ff00.16 to i32), i32 255)
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_166c4, %bb
  %v8_166d4 = phi i32 [ %v1_166c4, %dec_label_pc_166c4 ], [ %v9_166cc, %bb ]
  %v1_166d0 = add nsw i32 %v1_166b8, -2
  store i32 %v1_166d0, i32* @r3, align 4
  %v7_166d4 = icmp eq i32 %v1_166b8, 3
  br i1 %v7_166d4, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_166d4 = or i32 %v8_166d4, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_166b0
  %v1_166e4.ph = phi i32 [ %v2_166b4, %dec_label_pc_166b0 ], [ %v9_166d4, %bb34 ], [ %v8_166d4, %bb33 ]
  %v1_166d838 = urem i32 %v1_166e4.ph, 256
  %v2_166d839 = icmp eq i32 %v1_166d838, 0
  %v2_166dc40 = and i32 %v1_166e4.ph, 65280
  %v3_166dc41 = icmp eq i32 %v2_166dc40, 0
  %or.cond42 = or i1 %v2_166d839, %v3_166dc41
  %v2_166e043 = and i32 %v1_166e4.ph, 16711680
  %v3_166e044 = icmp eq i32 %v2_166e043, 0
  %or.cond3145 = or i1 %v3_166e044, %or.cond42
  %v4_166e446 = icmp ult i32 %v1_166e4.ph, 16777216
  %or.cond3247 = or i1 %v4_166e446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_166f4, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_166e81349 = phi i32 [ %v2_166e814, %.thread4 ], [ %v1_166bc, %.preheader.preheader ]
  %v1_166ec48.in = phi i32 [ %v1_166ec48, %.thread4 ], [ %v1_166b0, %.preheader.preheader ]
  %v1_166ec48 = add i32 %v1_166ec48.in, 4
  %v2_166e814 = add i32 %v1_166e81349, 4
  %v2_166ec = inttoptr i32 %v1_166ec48 to i32*
  %v3_166ec = load i32, i32* %v2_166ec, align 4
  %v1_166d8 = urem i32 %v3_166ec, 256
  %v2_166d8 = icmp eq i32 %v1_166d8, 0
  %v2_166dc = and i32 %v3_166ec, 65280
  %v3_166dc = icmp eq i32 %v2_166dc, 0
  %or.cond = or i1 %v2_166d8, %v3_166dc
  %v2_166e0 = and i32 %v3_166ec, 16711680
  %v3_166e0 = icmp eq i32 %v2_166e0, 0
  %or.cond31 = or i1 %v3_166e0, %or.cond
  %v4_166e4 = icmp ult i32 %v3_166ec, 16777216
  %or.cond32 = or i1 %v4_166e4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_166f4, label %.thread4

dec_label_pc_166f4:                               ; preds = %.thread4, %.preheader.preheader
  %v1_166e813.lcssa = phi i32 [ %v1_166bc, %.preheader.preheader ], [ %v2_166e814, %.thread4 ]
  %v2_166d8.lcssa = phi i1 [ %v2_166d839, %.preheader.preheader ], [ %v2_166d8, %.thread4 ]
  %v3_166dc.lcssa = phi i1 [ %v3_166dc41, %.preheader.preheader ], [ %v3_166dc, %.thread4 ]
  %v3_166e0.lcssa = phi i1 [ %v3_166e044, %.preheader.preheader ], [ %v3_166e0, %.thread4 ]
  br i1 %v2_166d8.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_166f4
  %v2_166f8 = add i32 %v1_166e813.lcssa, 1
  br i1 %v3_166dc.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_1670017 = add i32 %v1_166e813.lcssa, 2
  br i1 %v3_166e0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_16708 = add i32 %v1_166e813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_166f4, %bb35, %bb36, %bb37
  %v1_1670c = phi i32 [ %v2_166f8, %bb35 ], [ %v2_1670017, %bb36 ], [ %v2_16708, %bb37 ], [ %v1_166e813.lcssa, %dec_label_pc_166f4 ]
  ret i32 %v1_1670c

; uselistorder directives
  uselistorder i32 %v1_166e813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_166ec, { 3, 2, 1, 0 }
  uselistorder i32 %v1_166e4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_166b8, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15 }
  uselistorder i32 -2, { 1, 3, 4, 2, 6, 7, 8, 0, 5, 9, 23, 22, 24, 25, 26, 15, 16, 17, 18, 19, 20, 21, 10, 11, 12, 13, 14 }
  uselistorder i32 -4, { 40, 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 37, 38, 39 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_16710(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_16714.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16710

dec_label_pc_16710:                               ; preds = %bb3, %bb
  %v0_16714 = phi i32 [ %v0_16714.pre, %bb ], [ %v5_16714, %bb3 ]
  %v0_16710 = phi i32 [ %tmp, %bb ], [ %v5_16710, %bb3 ]
  %v1_16710 = inttoptr i32 %v0_16710 to i8*
  %v2_16710 = load i8, i8* %v1_16710, align 1
  %v1_16714 = inttoptr i32 %v0_16714 to i8*
  %v2_16714 = load i8, i8* %v1_16714, align 1
  %v3_16714 = zext i8 %v2_16714 to i32
  %v2_16718 = icmp eq i8 %v2_16710, 0
  br i1 %v2_16718, label %.dec_label_pc_16724_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_16710
  %v5_16714 = add i32 %v0_16714, 1
  %v5_16710 = add i32 %v0_16710, 1
  %v3_16710 = zext i8 %v2_16710 to i32
  %v10_1671c = icmp eq i8 %v2_16710, %v2_16714
  br i1 %v10_1671c, label %dec_label_pc_16710, label %dec_label_pc_16724

.dec_label_pc_16724_crit_edge:                    ; preds = %dec_label_pc_16710
  br label %dec_label_pc_16724

dec_label_pc_16724:                               ; preds = %bb3, %.dec_label_pc_16724_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_16724_crit_edge ], [ %v3_16710, %bb3 ]
  %v2_16724.pre-phi = sub nsw i32 %.pn, %v3_16714
  ret i32 %v2_16724.pre-phi

; uselistorder directives
  uselistorder i8 %v2_16710, { 0, 2, 1 }
  uselistorder i32 %v0_16710, { 1, 0 }
  uselistorder i32 %v0_16714, { 1, 0 }
  uselistorder label %dec_label_pc_16724, { 1, 0 }
}

define i32 @function_16730() local_unnamed_addr {
dec_label_pc_16730:
  %stack_var_-16 = alloca i32, align 4
  %v3_16730 = load i32, i32* @r4, align 4
  store i32 %v3_16730, i32* %stack_var_-16, align 4
  %v6_16730 = load i32, i32* @r5, align 4
  %v9_16730 = load i32, i32* @r6, align 4
  %v0_16734 = load i32, i32* @r0, align 4
  %v0_16738 = load i32, i32* @r1, align 4
  store i32 %v0_16738, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_167548 = inttoptr i32 %v0_16734 to i8*
  %v2_167549 = load i8, i8* %v1_167548, align 1
  %v2_1675811 = icmp eq i8 %v2_167549, 0
  store i32 %v0_16738, i32* @r0, align 4
  %v1_1676012 = add i32 %v0_16734, 1
  store i32 %v1_1676012, i32* @r4, align 4
  br i1 %v2_1675811, label %dec_label_pc_16768, label %dec_label_pc_16744

dec_label_pc_16744:                               ; preds = %dec_label_pc_16730, %dec_label_pc_16750
  %v3_1675414.in = phi i8 [ %v2_16754, %dec_label_pc_16750 ], [ %v2_167549, %dec_label_pc_16730 ]
  %v0_1675c13 = phi i32 [ %v0_1675c.pre, %dec_label_pc_16750 ], [ %v0_16738, %dec_label_pc_16730 ]
  %v3_1675414 = zext i8 %v3_1675414.in to i32
  %v2_16744 = call i32 @function_168fc(i32 %v0_1675c13, i32 %v3_1675414)
  %v2_16748 = icmp eq i32 %v2_16744, 0
  %v0_16750 = load i32, i32* @r5, align 4
  br i1 %v2_16748, label %dec_label_pc_16750, label %dec_label_pc_16768

dec_label_pc_16750:                               ; preds = %dec_label_pc_16744
  %v1_16750 = add i32 %v0_16750, 1
  %v0_16754.pre = load i32, i32* @r4, align 4
  %v0_1675c.pre = load i32, i32* @r6, align 4
  store i32 %v1_16750, i32* @r5, align 4
  %v1_16754 = inttoptr i32 %v0_16754.pre to i8*
  %v2_16754 = load i8, i8* %v1_16754, align 1
  %v2_16758 = icmp eq i8 %v2_16754, 0
  store i32 %v0_1675c.pre, i32* @r0, align 4
  %v1_16760 = add i32 %v0_16754.pre, 1
  store i32 %v1_16760, i32* @r4, align 4
  br i1 %v2_16758, label %dec_label_pc_16768, label %dec_label_pc_16744

dec_label_pc_16768:                               ; preds = %dec_label_pc_16750, %dec_label_pc_16744, %dec_label_pc_16730
  %v0_16768 = phi i32 [ 0, %dec_label_pc_16730 ], [ %v0_16750, %dec_label_pc_16744 ], [ %v1_16750, %dec_label_pc_16750 ]
  %v2_1676c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1676c, i32* @r4, align 4
  store i32 %v6_16730, i32* @r5, align 4
  store i32 %v9_16730, i32* @r6, align 4
  ret i32 %v0_16768

; uselistorder directives
  uselistorder i8 %v2_16754, { 1, 0 }
  uselistorder i32 %v0_1675c.pre, { 1, 0 }
  uselistorder i32 %v0_16754.pre, { 1, 0 }
  uselistorder i32* @r6, {}
  uselistorder label %dec_label_pc_16744, { 1, 0 }
}

define i32 @function_16774(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16774:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_167a42 = load i32, i32* @r0, align 4
  %v1_167a43 = inttoptr i32 %v0_167a42 to i8*
  %v2_167a44 = load i8, i8* %v1_167a43, align 1
  %v3_167a45 = zext i8 %v2_167a44 to i32
  store i32 %v3_167a45, i32* @ip, align 4
  %v2_167a86 = icmp eq i8 %v2_167a44, 0
  br i1 %v2_167a86, label %dec_label_pc_167b4, label %dec_label_pc_16788.preheader

dec_label_pc_16780:                               ; preds = %dec_label_pc_16788
  %v3_16788 = zext i8 %v2_16788 to i32
  %v1_16790 = add i32 %v0_16790, 1
  %v9_16780 = icmp eq i32 %v0_1678010, %v3_16788
  br i1 %v9_16780, label %dec_label_pc_1679c, label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %dec_label_pc_16788.preheader, %dec_label_pc_16780
  %v0_16790 = phi i32 [ %tmp, %dec_label_pc_16788.preheader ], [ %v1_16790, %dec_label_pc_16780 ]
  %v1_16788 = inttoptr i32 %v0_16790 to i8*
  %v2_16788 = load i8, i8* %v1_16788, align 1
  %v2_1678c = icmp eq i8 %v2_16788, 0
  br i1 %v2_1678c, label %dec_label_pc_167b4, label %dec_label_pc_16780

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16780
  %v1_1679c = add i32 %v0_1679c, 1
  %v1_167a0 = add i32 %v0_167a0, 1
  %v1_167a4 = inttoptr i32 %v1_167a0 to i8*
  %v2_167a4 = load i8, i8* %v1_167a4, align 1
  %v3_167a4 = zext i8 %v2_167a4 to i32
  store i32 %v3_167a4, i32* @ip, align 4
  %v2_167a8 = icmp eq i8 %v2_167a4, 0
  br i1 %v2_167a8, label %dec_label_pc_167b4, label %dec_label_pc_16788.preheader

dec_label_pc_16788.preheader:                     ; preds = %dec_label_pc_16774, %dec_label_pc_1679c
  %v0_167a0 = phi i32 [ %v1_167a0, %dec_label_pc_1679c ], [ %v0_167a42, %dec_label_pc_16774 ]
  %v0_1679c = phi i32 [ %v1_1679c, %dec_label_pc_1679c ], [ 0, %dec_label_pc_16774 ]
  %v0_1678010 = phi i32 [ %v3_167a4, %dec_label_pc_1679c ], [ %v3_167a45, %dec_label_pc_16774 ]
  br label %dec_label_pc_16788

dec_label_pc_167b4:                               ; preds = %dec_label_pc_1679c, %dec_label_pc_16788, %dec_label_pc_16774
  %v0_167b4 = phi i32 [ 0, %dec_label_pc_16774 ], [ %v0_1679c, %dec_label_pc_16788 ], [ %v1_1679c, %dec_label_pc_1679c ]
  ret i32 %v0_167b4

; uselistorder directives
  uselistorder i32 %v0_16790, { 1, 0 }
  uselistorder label %dec_label_pc_16788.preheader, { 1, 0 }
}

define i32 @function_167c0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_167c0:
  store i32 %arg1, i32* @r0, align 4
  %v1_167c4 = urem i32 %arg2, 256
  store i32 %v1_167c4, i32* @r4, align 4
  %v2_167c4 = icmp eq i32 %v1_167c4, 0
  br i1 %v2_167c4, label %dec_label_pc_167d8, label %dec_label_pc_167ec.preheader

dec_label_pc_167ec.preheader:                     ; preds = %dec_label_pc_167c0
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_167f43 = call i32 @function_168fc(i32 %arg1, i32 %v1_167c4)
  %v2_167f85 = icmp eq i32 %v2_167f43, 0
  br i1 %v2_167f85, label %dec_label_pc_16800, label %dec_label_pc_167e4

dec_label_pc_167d8:                               ; preds = %dec_label_pc_167c0
  %v2_167dc = call i32 @function_168fc(i32 %arg1, i32 0)
  br label %dec_label_pc_16804

dec_label_pc_167e4:                               ; preds = %dec_label_pc_167ec.preheader, %dec_label_pc_167e4
  %v2_167f46 = phi i32 [ %v2_167f4, %dec_label_pc_167e4 ], [ %v2_167f43, %dec_label_pc_167ec.preheader ]
  store i32 %v2_167f46, i32* @r5, align 4
  %v1_167e8 = add i32 %v2_167f46, 1
  store i32 %v1_167e8, i32* @r0, align 4
  %v0_167f0 = load i32, i32* @r4, align 4
  %v2_167f4 = call i32 @function_168fc(i32 %v1_167e8, i32 %v0_167f0)
  %v2_167f8 = icmp eq i32 %v2_167f4, 0
  br i1 %v2_167f8, label %dec_label_pc_16800, label %dec_label_pc_167e4

dec_label_pc_16800:                               ; preds = %dec_label_pc_167e4, %dec_label_pc_167ec.preheader
  %v0_16800 = load i32, i32* @r5, align 4
  br label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_167d8, %dec_label_pc_16800
  %storemerge = phi i32 [ %v2_167dc, %dec_label_pc_167d8 ], [ %v0_16800, %dec_label_pc_16800 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_167f4, { 1, 0 }
  uselistorder i32 %v1_167e8, { 1, 0 }
  uselistorder i32 %v1_167c4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_168fc, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16804, { 1, 0 }
  uselistorder label %dec_label_pc_167e4, { 1, 0 }
}

define i32 @function_16810(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16810:
  %v1_16814 = urem i32 %arg1, 256
  %v0_168342 = load i32, i32* @r0, align 4
  %v1_168343 = urem i32 %v0_168342, 4
  %v2_168344 = icmp eq i32 %v1_168343, 0
  br i1 %v2_168344, label %dec_label_pc_1683c, label %dec_label_pc_1681c

dec_label_pc_1681c:                               ; preds = %dec_label_pc_16810, %dec_label_pc_16830
  %v0_16830 = phi i32 [ %v1_16830, %dec_label_pc_16830 ], [ %v0_168342, %dec_label_pc_16810 ]
  %v1_1681c = inttoptr i32 %v0_16830 to i8*
  %v2_1681c = load i8, i8* %v1_1681c, align 1
  %v3_1681c = zext i8 %v2_1681c to i32
  %v9_16820 = icmp eq i32 %v3_1681c, %v1_16814
  br i1 %v9_16820, label %dec_label_pc_168ec, label %dec_label_pc_16828

dec_label_pc_16828:                               ; preds = %dec_label_pc_1681c
  %v2_16828 = icmp eq i8 %v2_1681c, 0
  br i1 %v2_16828, label %dec_label_pc_168ec, label %dec_label_pc_16830

dec_label_pc_16830:                               ; preds = %dec_label_pc_16828
  %v1_16830 = add i32 %v0_16830, 1
  %v1_16834 = urem i32 %v1_16830, 4
  %v2_16834 = icmp eq i32 %v1_16834, 0
  br i1 %v2_16834, label %dec_label_pc_1683c, label %dec_label_pc_1681c

dec_label_pc_1683c:                               ; preds = %dec_label_pc_16830, %dec_label_pc_16810
  %v0_16840 = phi i32 [ %v0_168342, %dec_label_pc_16810 ], [ %v1_16830, %dec_label_pc_16830 ]
  %v4_1683c = mul nuw nsw i32 %v1_16814, 256
  %v5_1683c = or i32 %v4_1683c, %v1_16814
  %v4_16844 = mul i32 %v5_1683c, 65536
  %v5_16844 = or i32 %v4_16844, %v5_1683c
  br label %dec_label_pc_16848

dec_label_pc_16848:                               ; preds = %dec_label_pc_168e4, %dec_label_pc_16884, %dec_label_pc_1683c
  %v0_168ac = phi i32 [ %v0_16840, %dec_label_pc_1683c ], [ %v4_16848, %dec_label_pc_16884 ], [ %v4_16848, %dec_label_pc_168e4 ]
  %v1_16848 = inttoptr i32 %v0_168ac to i32*
  %v2_16848 = load i32, i32* %v1_16848, align 4
  %v4_16848 = add i32 %v0_168ac, 4
  %v2_16850 = xor i32 %v2_16848, %v5_16844
  %v2_16854 = add i32 %v2_16850, 2130640639
  store i32 %v2_16854, i32* @ip, align 4
  %v2_1685c = add i32 %v2_16848, 2130640639
  %v1_16860 = sub i32 -1, %v2_16848
  %v2_16864 = xor i32 %v2_1685c, %v1_16860
  %v2_16870 = and i32 %v2_16864, -2130640640
  %v2_16878 = icmp eq i32 %v2_16870, 0
  br i1 %v2_16878, label %dec_label_pc_16884, label %dec_label_pc_1688c

dec_label_pc_16884:                               ; preds = %dec_label_pc_16848
  %v1_1686c = sub i32 -1, %v2_16850
  %v2_16874 = xor i32 %v2_16854, %v1_1686c
  %v2_1687c = and i32 %v2_16874, -2130640640
  %v2_16884 = icmp eq i32 %v2_1687c, 0
  br i1 %v2_16884, label %dec_label_pc_16848, label %dec_label_pc_1688c

dec_label_pc_1688c:                               ; preds = %dec_label_pc_16848, %dec_label_pc_16884
  %v2_1688c = inttoptr i32 %v0_168ac to i8*
  %v3_1688c = load i8, i8* %v2_1688c, align 1
  %v4_1688c = zext i8 %v3_1688c to i32
  %v9_16890 = icmp eq i32 %v4_1688c, %v1_16814
  br i1 %v9_16890, label %dec_label_pc_168ec, label %dec_label_pc_1689c

dec_label_pc_1689c:                               ; preds = %dec_label_pc_1688c
  %v2_1689c = icmp eq i8 %v3_1688c, 0
  br i1 %v2_1689c, label %dec_label_pc_168ec, label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_1689c
  %v1_168a4 = add i32 %v0_168ac, 1
  %v2_168a4 = inttoptr i32 %v1_168a4 to i8*
  %v3_168a4 = load i8, i8* %v2_168a4, align 1
  %v4_168a4 = zext i8 %v3_168a4 to i32
  %v9_168a8 = icmp eq i32 %v4_168a4, %v1_16814
  br i1 %v9_168a8, label %dec_label_pc_168ec, label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_168a4
  %v2_168b4 = icmp eq i8 %v3_168a4, 0
  br i1 %v2_168b4, label %dec_label_pc_168ec, label %dec_label_pc_168bc

dec_label_pc_168bc:                               ; preds = %dec_label_pc_168b4
  %v1_168bc = add i32 %v0_168ac, 2
  %v2_168bc = inttoptr i32 %v1_168bc to i8*
  %v3_168bc = load i8, i8* %v2_168bc, align 1
  %v4_168bc = zext i8 %v3_168bc to i32
  %v9_168c0 = icmp eq i32 %v4_168bc, %v1_16814
  br i1 %v9_168c0, label %dec_label_pc_168ec, label %dec_label_pc_168cc

dec_label_pc_168cc:                               ; preds = %dec_label_pc_168bc
  %v2_168cc = icmp eq i8 %v3_168bc, 0
  br i1 %v2_168cc, label %dec_label_pc_168ec, label %dec_label_pc_168d4

dec_label_pc_168d4:                               ; preds = %dec_label_pc_168cc
  %v1_168d4 = add i32 %v0_168ac, 3
  %v2_168d4 = inttoptr i32 %v1_168d4 to i8*
  %v3_168d4 = load i8, i8* %v2_168d4, align 1
  %v4_168d4 = zext i8 %v3_168d4 to i32
  %v9_168d8 = icmp eq i32 %v4_168d4, %v1_16814
  br i1 %v9_168d8, label %dec_label_pc_168ec, label %dec_label_pc_168e4

dec_label_pc_168e4:                               ; preds = %dec_label_pc_168d4
  %v2_168e4 = icmp eq i8 %v3_168d4, 0
  br i1 %v2_168e4, label %dec_label_pc_168ec, label %dec_label_pc_16848

dec_label_pc_168ec:                               ; preds = %dec_label_pc_16828, %dec_label_pc_1681c, %dec_label_pc_168e4, %dec_label_pc_168d4, %dec_label_pc_168cc, %dec_label_pc_168bc, %dec_label_pc_168b4, %dec_label_pc_168a4, %dec_label_pc_1689c, %dec_label_pc_1688c
  %v1_168f0 = phi i32 [ %v1_168d4, %dec_label_pc_168e4 ], [ %v1_168d4, %dec_label_pc_168d4 ], [ %v1_168bc, %dec_label_pc_168cc ], [ %v1_168bc, %dec_label_pc_168bc ], [ %v1_168a4, %dec_label_pc_168b4 ], [ %v1_168a4, %dec_label_pc_168a4 ], [ %v0_168ac, %dec_label_pc_1689c ], [ %v0_168ac, %dec_label_pc_1688c ], [ %v0_16830, %dec_label_pc_1681c ], [ %v0_16830, %dec_label_pc_16828 ]
  ret i32 %v1_168f0

; uselistorder directives
  uselistorder i32 %v4_16848, { 1, 0 }
  uselistorder i32 %v2_16848, { 0, 2, 1 }
  uselistorder i32 %v0_168ac, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1683c, { 1, 0 }
  uselistorder i32 %v1_16830, { 1, 0, 2 }
  uselistorder i32 %v0_168342, { 2, 1, 0 }
  uselistorder i32 %v1_16814, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_168ec, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1688c, { 1, 0 }
  uselistorder label %dec_label_pc_1681c, { 1, 0 }
}

define i32 @function_168fc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_168fc:
  %v1_16900 = urem i32 %arg1, 256
  %v0_169203 = load i32, i32* @r0, align 4
  %v1_169204 = urem i32 %v0_169203, 4
  %v2_169205 = icmp eq i32 %v1_169204, 0
  br i1 %v2_169205, label %dec_label_pc_16928, label %dec_label_pc_16908

dec_label_pc_16908:                               ; preds = %dec_label_pc_168fc, %dec_label_pc_1691c
  %v0_1691c = phi i32 [ %v1_1691c, %dec_label_pc_1691c ], [ %v0_169203, %dec_label_pc_168fc ]
  %v1_16908 = inttoptr i32 %v0_1691c to i8*
  %v2_16908 = load i8, i8* %v1_16908, align 1
  %v3_16908 = zext i8 %v2_16908 to i32
  %v9_1690c = icmp eq i32 %v3_16908, %v1_16900
  br i1 %v9_1690c, label %dec_label_pc_169dc, label %dec_label_pc_16914

dec_label_pc_16914:                               ; preds = %dec_label_pc_16908
  %v2_16914 = icmp eq i8 %v2_16908, 0
  br i1 %v2_16914, label %dec_label_pc_169d8, label %dec_label_pc_1691c

dec_label_pc_1691c:                               ; preds = %dec_label_pc_16914
  %v1_1691c = add i32 %v0_1691c, 1
  %v1_16920 = urem i32 %v1_1691c, 4
  %v2_16920 = icmp eq i32 %v1_16920, 0
  br i1 %v2_16920, label %dec_label_pc_16928, label %dec_label_pc_16908

dec_label_pc_16928:                               ; preds = %dec_label_pc_1691c, %dec_label_pc_168fc
  %v0_1692c = phi i32 [ %v0_169203, %dec_label_pc_168fc ], [ %v1_1691c, %dec_label_pc_1691c ]
  %v4_16928 = mul nuw nsw i32 %v1_16900, 256
  %v5_16928 = or i32 %v4_16928, %v1_16900
  %v4_16930 = mul i32 %v5_16928, 65536
  %v5_16930 = or i32 %v4_16930, %v5_16928
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_169d0, %dec_label_pc_16970, %dec_label_pc_16928
  %v0_16998 = phi i32 [ %v0_1692c, %dec_label_pc_16928 ], [ %v4_16934, %dec_label_pc_16970 ], [ %v4_16934, %dec_label_pc_169d0 ]
  %v1_16934 = inttoptr i32 %v0_16998 to i32*
  %v2_16934 = load i32, i32* %v1_16934, align 4
  %v4_16934 = add i32 %v0_16998, 4
  %v2_1693c = xor i32 %v2_16934, %v5_16930
  %v2_16940 = add i32 %v2_1693c, 2130640639
  store i32 %v2_16940, i32* @ip, align 4
  %v2_16948 = add i32 %v2_16934, 2130640639
  %v1_1694c = sub i32 -1, %v2_16934
  %v2_16950 = xor i32 %v2_16948, %v1_1694c
  %v2_1695c = and i32 %v2_16950, -2130640640
  %v2_16964 = icmp eq i32 %v2_1695c, 0
  br i1 %v2_16964, label %dec_label_pc_16970, label %dec_label_pc_16978

dec_label_pc_16970:                               ; preds = %dec_label_pc_16934
  %v1_16958 = sub i32 -1, %v2_1693c
  %v2_16960 = xor i32 %v2_16940, %v1_16958
  %v2_16968 = and i32 %v2_16960, -2130640640
  %v2_16970 = icmp eq i32 %v2_16968, 0
  br i1 %v2_16970, label %dec_label_pc_16934, label %dec_label_pc_16978

dec_label_pc_16978:                               ; preds = %dec_label_pc_16934, %dec_label_pc_16970
  %v2_16978 = inttoptr i32 %v0_16998 to i8*
  %v3_16978 = load i8, i8* %v2_16978, align 1
  %v4_16978 = zext i8 %v3_16978 to i32
  %v9_1697c = icmp eq i32 %v4_16978, %v1_16900
  br i1 %v9_1697c, label %dec_label_pc_169dc, label %dec_label_pc_16988

dec_label_pc_16988:                               ; preds = %dec_label_pc_16978
  %v2_16988 = icmp eq i8 %v3_16978, 0
  br i1 %v2_16988, label %dec_label_pc_169d8, label %dec_label_pc_16990

dec_label_pc_16990:                               ; preds = %dec_label_pc_16988
  %v1_16990 = add i32 %v0_16998, 1
  %v2_16990 = inttoptr i32 %v1_16990 to i8*
  %v3_16990 = load i8, i8* %v2_16990, align 1
  %v4_16990 = zext i8 %v3_16990 to i32
  %v9_16994 = icmp eq i32 %v4_16990, %v1_16900
  br i1 %v9_16994, label %dec_label_pc_169dc, label %dec_label_pc_169a0

dec_label_pc_169a0:                               ; preds = %dec_label_pc_16990
  %v2_169a0 = icmp eq i8 %v3_16990, 0
  br i1 %v2_169a0, label %dec_label_pc_169d8, label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_169a0
  %v1_169a8 = add i32 %v0_16998, 2
  %v2_169a8 = inttoptr i32 %v1_169a8 to i8*
  %v3_169a8 = load i8, i8* %v2_169a8, align 1
  %v4_169a8 = zext i8 %v3_169a8 to i32
  %v9_169ac = icmp eq i32 %v4_169a8, %v1_16900
  br i1 %v9_169ac, label %dec_label_pc_169dc, label %dec_label_pc_169b8

dec_label_pc_169b8:                               ; preds = %dec_label_pc_169a8
  %v2_169b8 = icmp eq i8 %v3_169a8, 0
  br i1 %v2_169b8, label %dec_label_pc_169d8, label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %dec_label_pc_169b8
  %v1_169c0 = add i32 %v0_16998, 3
  %v2_169c0 = inttoptr i32 %v1_169c0 to i8*
  %v3_169c0 = load i8, i8* %v2_169c0, align 1
  %v4_169c0 = zext i8 %v3_169c0 to i32
  %v9_169c4 = icmp eq i32 %v4_169c0, %v1_16900
  br i1 %v9_169c4, label %dec_label_pc_169dc, label %dec_label_pc_169d0

dec_label_pc_169d0:                               ; preds = %dec_label_pc_169c0
  %v2_169d0 = icmp eq i8 %v3_169c0, 0
  br i1 %v2_169d0, label %dec_label_pc_169d8, label %dec_label_pc_16934

dec_label_pc_169d8:                               ; preds = %dec_label_pc_16914, %dec_label_pc_169d0, %dec_label_pc_169b8, %dec_label_pc_169a0, %dec_label_pc_16988
  br label %dec_label_pc_169dc

dec_label_pc_169dc:                               ; preds = %dec_label_pc_16908, %dec_label_pc_169c0, %dec_label_pc_169a8, %dec_label_pc_16990, %dec_label_pc_16978, %dec_label_pc_169d8
  %v1_169e0 = phi i32 [ 0, %dec_label_pc_169d8 ], [ %v1_169c0, %dec_label_pc_169c0 ], [ %v1_169a8, %dec_label_pc_169a8 ], [ %v1_16990, %dec_label_pc_16990 ], [ %v0_16998, %dec_label_pc_16978 ], [ %v0_1691c, %dec_label_pc_16908 ]
  ret i32 %v1_169e0

; uselistorder directives
  uselistorder i32 %v4_16934, { 1, 0 }
  uselistorder i32 %v2_16934, { 0, 2, 1 }
  uselistorder i32 %v0_16998, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_16928, { 1, 0 }
  uselistorder i32 %v1_1691c, { 1, 0, 2 }
  uselistorder i32 %v0_169203, { 2, 1, 0 }
  uselistorder i32 %v1_16900, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 3, { 3, 4, 1, 5, 66, 67, 120, 68, 69, 70, 71, 72, 73, 75, 76, 121, 7, 114, 27, 115, 26, 116, 38, 117, 74, 39, 82, 29, 77, 78, 2, 79, 80, 81, 40, 20, 83, 41, 84, 42, 85, 43, 86, 44, 87, 45, 88, 46, 89, 28, 90, 47, 91, 48, 92, 49, 93, 50, 94, 51, 52, 53, 54, 55, 0, 95, 96, 22, 21, 56, 97, 57, 30, 98, 9, 8, 58, 31, 99, 11, 10, 59, 100, 32, 101, 102, 24, 23, 60, 103, 33, 104, 13, 12, 61, 105, 34, 106, 62, 107, 15, 14, 63, 108, 35, 109, 17, 16, 64, 110, 36, 111, 19, 18, 65, 118, 37, 119, 25, 112, 6, 113 }
  uselistorder i32 2130640639, { 0, 2, 1, 3 }
  uselistorder i32 65536, { 4, 5, 7, 6, 12, 8, 13, 9, 14, 10, 15, 11, 16, 17, 18, 22, 19, 23, 20, 24, 21, 25, 149, 150, 148, 153, 26, 27, 28, 29, 30, 31, 32, 33, 147, 34, 35, 36, 37, 39, 38, 41, 40, 42, 43, 2, 44, 0, 3, 45, 46, 48, 47, 1, 51, 49, 50, 52, 58, 53, 59, 54, 60, 55, 56, 57, 63, 64, 65, 66, 61, 62, 146, 68, 67, 70, 69, 72, 73, 74, 71, 77, 75, 76, 79, 80, 81, 78, 82, 83, 85, 86, 84, 87, 151, 88, 91, 89, 92, 90, 94, 95, 96, 93, 97, 102, 98, 103, 99, 104, 100, 101, 106, 107, 108, 105, 109, 152, 110, 111, 112, 114, 113, 115, 123, 116, 124, 117, 125, 118, 126, 119, 127, 120, 121, 122, 129, 130, 131, 132, 128, 133, 138, 134, 139, 135, 136, 137, 141, 143, 144, 145, 140, 142 }
  uselistorder label %dec_label_pc_169dc, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_169d8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_16978, { 1, 0 }
  uselistorder label %dec_label_pc_16908, { 1, 0 }
}

define i32 @function_169ec(i32 %arg1) local_unnamed_addr {
dec_label_pc_169ec:
  %stack_var_-68 = alloca i32, align 4
  %v2_169f4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_169f4, i32* @r1, align 4
  %v0_169f8 = call i32 @function_16a10()
  %v1_169fc = sub i32 1, %v0_169f8
  %v2_169fc = icmp ult i32 %v0_169f8, 2
  br i1 %v2_169fc, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_169ec
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_169ec, %bb
  %v1_16a0c = phi i32 [ %v1_169fc, %dec_label_pc_169ec ], [ 0, %bb ]
  ret i32 %v1_16a0c

; uselistorder directives
  uselistorder i32 %v0_169f8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_16a10() local_unnamed_addr {
dec_label_pc_16a10:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_16a10 = load i32, i32* @r4, align 4
  %v6_16a10 = load i32, i32* @r5, align 4
  %v2_16a18 = ptrtoint i32* %stack_var_-52 to i32
  %v0_16a1c = load i32, i32* @r1, align 4
  store i32 %v0_16a1c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_16a28 = load i32, i32* @r0, align 4
  %v3_16a28 = call i32 @function_11bc8(i32 %v0_16a28, i32 21505, i32 %v2_16a18)
  store i32 %v3_16a28, i32* %r0.global-to-local, align 4
  store i32 %v3_16a28, i32* @r5, align 4
  %v2_16a2c = icmp eq i32 %v3_16a28, 0
  br i1 %v2_16a2c, label %dec_label_pc_16a34, label %dec_label_pc_16a78

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a10
  %v4_16a40 = zext i8 %tmp to i32
  store i32 %v4_16a40, i32* @ip, align 4
  %v3_16a44 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_16a44, i32* @r3, align 4
  %v1_16a48 = load i32, i32* @r4, align 4
  %v2_16a48 = add i32 %v1_16a48, 4
  %v3_16a48 = inttoptr i32 %v2_16a48 to i32*
  %v0_16a4c = load i32, i32* %r1.global-to-local, align 4
  %v1_16a4c = load i32, i32* @r4, align 4
  %v2_16a4c = add i32 %v1_16a4c, 8
  %v3_16a4c = inttoptr i32 %v2_16a4c to i32*
  store i32 %v0_16a4c, i32* %v3_16a4c, align 4
  %v0_16a50 = load i32, i32* %r0.global-to-local, align 4
  %v1_16a50 = load i32, i32* @r4, align 4
  %v2_16a50 = add i32 %v1_16a50, 12
  %v3_16a50 = inttoptr i32 %v2_16a50 to i32*
  store i32 %v0_16a50, i32* %v3_16a50, align 4
  %v2_16a54 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_16a54, i32* @r1, align 4
  %v1_16a5c = load i32, i32* @r4, align 4
  %v2_16a5c = inttoptr i32 %v1_16a5c to i32*
  store i32 %v3_16a44, i32* %v2_16a5c, align 4
  %v0_16a60 = load i32, i32* @ip, align 4
  %v1_16a60 = trunc i32 %v0_16a60 to i8
  %v2_16a60 = load i32, i32* @r4, align 4
  %v3_16a60 = add i32 %v2_16a60, 16
  %v4_16a60 = inttoptr i32 %v3_16a60 to i8*
  store i8 %v1_16a60, i8* %v4_16a60, align 1
  %v0_16a64 = load i32, i32* @r4, align 4
  %v1_16a64 = add i32 %v0_16a64, 17
  store i32 %v1_16a64, i32* %r0.global-to-local, align 4
  %v4_16a68 = call i32 @function_16f54(i32 %v1_16a64, i32 %v2_16a54, i32 19, i32 %v3_16a44)
  store i32 %v4_16a68, i32* %r0.global-to-local, align 4
  %v0_16a6c = load i32, i32* @r5, align 4
  store i32 %v0_16a6c, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_16a74 = inttoptr i32 %v4_16a68 to i8*
  %v3_16a74 = call i32 @function_120d0(i8* %v2_16a74, i32 %v0_16a6c)
  store i32 %v3_16a74, i32* %r0.global-to-local, align 4
  %v0_16a78.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16a78

dec_label_pc_16a78:                               ; preds = %dec_label_pc_16a10, %dec_label_pc_16a34
  %v0_16a78 = phi i32 [ %v3_16a28, %dec_label_pc_16a10 ], [ %v0_16a78.pre, %dec_label_pc_16a34 ]
  store i32 %v0_16a78, i32* %r0.global-to-local, align 4
  store i32 %v3_16a10, i32* @r4, align 4
  store i32 %v6_16a10, i32* @r5, align 4
  ret i32 %v0_16a78

; uselistorder directives
  uselistorder i32 %v0_16a78, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32 (i8*, i32)* @function_120d0, { 2, 3, 4, 9, 0, 1, 11, 10, 8, 5, 6, 7 }
  uselistorder i32 13, { 22, 21, 0, 1, 6, 26, 24, 25, 23, 27, 7, 28, 8, 29, 9, 30, 10, 31, 11, 32, 12, 33, 13, 34, 2, 3, 14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 39, 40, 41, 20, 42, 43, 44, 45, 46, 47, 48, 49, 4, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 5, 61, 62 }
  uselistorder i32 17, { 13, 1, 2, 14, 15, 16, 17, 3, 4, 5, 6, 18, 7, 19, 8, 20, 21, 22, 9, 23, 10, 11, 24, 12, 25, 26, 27, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11bc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a78, { 1, 0 }
}

define i32 @function_16a8c() local_unnamed_addr {
dec_label_pc_16a8c:
  %r0.global-to-local = alloca i32, align 4
  %v0_16a94 = load i32, i32* @r0, align 4
  %v2_16a94 = icmp eq i32 %v0_16a94, 0
  %v0_16a9c = load i32, i32* @r1, align 4
  br i1 %v2_16a94, label %dec_label_pc_16b70, label %dec_label_pc_16aa4

dec_label_pc_16aa4:                               ; preds = %dec_label_pc_16a8c
  br label %dec_label_pc_16abc

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16aa4, %dec_label_pc_16b34
  %v1_16b34 = phi i32 [ 0, %dec_label_pc_16aa4 ], [ %v5_16b34, %dec_label_pc_16b34 ]
  %v0_16b38 = phi i32 [ 1, %dec_label_pc_16aa4 ], [ %v1_16b38, %dec_label_pc_16b34 ]
  %v0_16abc = phi i32 [ %v0_16a94, %dec_label_pc_16aa4 ], [ %v0_16abc12, %dec_label_pc_16b34 ]
  %v1_16abc = inttoptr i32 %v0_16abc to i8*
  %v2_16abc = load i8, i8* %v1_16abc, align 1
  %v3_16abc = zext i8 %v2_16abc to i32
  %v4_16ac0 = load i32, i32* inttoptr (i32 98544 to i32*), align 16
  %v2_16ac4 = mul nuw nsw i32 %v3_16abc, 2
  %v2_16ac8 = add i32 %v2_16ac4, %v4_16ac0
  %v3_16ac8 = inttoptr i32 %v2_16ac8 to i16*
  %v4_16ac8 = load i16, i16* %v3_16ac8, align 2
  %v1_16acc = and i16 %v4_16ac8, 8
  %v2_16acc = icmp eq i16 %v1_16acc, 0
  br i1 %v2_16acc, label %dec_label_pc_16b70, label %dec_label_pc_16ad4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16abc
  br label %dec_label_pc_16af4

dec_label_pc_16adc:                               ; preds = %dec_label_pc_16af4
  %v2_16adc = mul i32 %v0_16b34, 10
  %v1_16ae0 = add i32 %v2_16adc, -48
  %v2_16ae4 = add i32 %v3_16af4, %v1_16ae0
  %v8_16aec = icmp sgt i32 %v2_16ae4, 255
  br i1 %v8_16aec, label %dec_label_pc_16b70, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16adc
  %v1_16af0 = add i32 %v0_16b24, 1
  store i32 %v1_16af0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16af4

dec_label_pc_16af4:                               ; preds = %dec_label_pc_16ad4, %dec_label_pc_16af0
  %v0_16b34 = phi i32 [ 0, %dec_label_pc_16ad4 ], [ %v2_16ae4, %dec_label_pc_16af0 ]
  %v0_16b24 = phi i32 [ %v0_16abc, %dec_label_pc_16ad4 ], [ %v1_16af0, %dec_label_pc_16af0 ]
  %v1_16af4 = inttoptr i32 %v0_16b24 to i8*
  %v2_16af4 = load i8, i8* %v1_16af4, align 1
  %v3_16af4 = zext i8 %v2_16af4 to i32
  %v2_16af8 = mul nuw nsw i32 %v3_16af4, 2
  %v2_16afc = add i32 %v2_16af8, %v4_16ac0
  %v3_16afc = inttoptr i32 %v2_16afc to i16*
  %v4_16afc = load i16, i16* %v3_16afc, align 2
  %v6_16afc = zext i16 %v4_16afc to i32
  %v1_16b00 = and i32 %v6_16afc, 8
  %v2_16b00 = icmp eq i32 %v1_16b00, 0
  br i1 %v2_16b00, label %dec_label_pc_16b08, label %dec_label_pc_16adc

dec_label_pc_16b08:                               ; preds = %dec_label_pc_16af4
  %v7_16b08 = icmp eq i32 %v0_16b38, 4
  br i1 %v7_16b08, label %dec_label_pc_16b20, label %dec_label_pc_16b10

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16b08
  %v7_16b10 = icmp eq i8 %v2_16af4, 46
  br i1 %v7_16b10, label %dec_label_pc_16b18, label %dec_label_pc_16b70

dec_label_pc_16b18:                               ; preds = %dec_label_pc_16b10
  %v1_16b18 = add i32 %v0_16b24, 1
  store i32 %v1_16b18, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b34

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16b08
  %v2_16b20 = icmp eq i8 %v2_16af4, 0
  %v1_16b24 = add i32 %v0_16b24, 1
  store i32 %v1_16b24, i32* %r0.global-to-local, align 4
  br i1 %v2_16b20, label %dec_label_pc_16b34, label %dec_label_pc_16b2c

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16b20
  %v1_16b2c = and i32 %v6_16afc, 32
  %v2_16b2c = icmp eq i32 %v1_16b2c, 0
  br i1 %v2_16b2c, label %dec_label_pc_16b70, label %dec_label_pc_16b34

dec_label_pc_16b34:                               ; preds = %dec_label_pc_16b2c, %dec_label_pc_16b20, %dec_label_pc_16b18
  %v0_16abc12 = phi i32 [ %v1_16b24, %dec_label_pc_16b2c ], [ %v1_16b24, %dec_label_pc_16b20 ], [ %v1_16b18, %dec_label_pc_16b18 ]
  %v4_16b34 = mul i32 %v1_16b34, 256
  %v5_16b34 = or i32 %v0_16b34, %v4_16b34
  %v1_16b38 = add nuw nsw i32 %v0_16b38, 1
  %v7_16b40 = icmp slt i32 %v1_16b38, 5
  br i1 %v7_16b40, label %dec_label_pc_16abc, label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b34
  %v2_16b44 = icmp eq i32 %v0_16a9c, 0
  br i1 %v2_16b44, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_16b44
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b74

bb:                                               ; preds = %dec_label_pc_16b44
  %v4_16b48 = udiv i32 %v5_16b34, 16777216
  %v2_16b4c = udiv i32 %v5_16b34, 256
  %v5_16b50 = and i32 %v2_16b4c, 65280
  %v2_16b54 = and i32 %v5_16b34, ptrtoint (i32* @global_var_ff00.16 to i32)
  %v5_16b58 = mul i32 %v2_16b54, 256
  %v5_16b5c = mul i32 %v0_16b34, 16777216
  %v6_16b50 = or i32 %v4_16b48, %v5_16b5c
  %v6_16b58 = or i32 %v6_16b50, %v5_16b50
  %v6_16b5c = or i32 %v6_16b58, %v5_16b58
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_16b68 = inttoptr i32 %v0_16a9c to i32*
  store i32 %v6_16b5c, i32* %v3_16b68, align 4
  %v1_16b78.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b74

dec_label_pc_16b70:                               ; preds = %dec_label_pc_16b10, %dec_label_pc_16b2c, %dec_label_pc_16abc, %dec_label_pc_16adc, %dec_label_pc_16a8c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b74

dec_label_pc_16b74:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_16b70
  %v1_16b78 = phi i32 [ %v1_16b78.pre, %bb ], [ 0, %dec_label_pc_16b70 ], [ 1, %.thread7.thread ]
  ret i32 %v1_16b78

; uselistorder directives
  uselistorder i32 %v1_16b38, { 1, 0 }
  uselistorder i32 %v5_16b34, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16b24, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.16 to i32), { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19 }
  uselistorder i32 65280, { 2, 9, 1, 47, 4, 5, 10, 3, 0, 11, 12, 13, 14, 15, 41, 48, 16, 17, 18, 49, 19, 20, 21, 22, 42, 6, 50, 23, 24, 43, 51, 44, 25, 26, 27, 28, 29, 8, 52, 45, 7, 53, 30, 54, 31, 32, 33, 34, 46, 35, 36, 37, 55, 38, 39, 40 }
  uselistorder i32 16777216, { 0, 1, 80, 79, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 27, 26, 28, 29, 30, 31, 33, 32, 35, 34, 36, 37, 39, 38, 40, 41, 42, 43, 45, 44, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 59, 62, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81 }
  uselistorder i32 5, { 13, 0, 101, 14, 52, 15, 53, 16, 51, 3, 2, 54, 17, 55, 18, 56, 19, 57, 20, 58, 21, 59, 22, 60, 23, 61, 24, 62, 25, 63, 26, 64, 27, 65, 28, 66, 29, 67, 30, 68, 31, 69, 32, 70, 33, 71, 34, 72, 35, 73, 36, 74, 37, 75, 38, 76, 39, 77, 40, 78, 41, 79, 42, 80, 43, 81, 44, 82, 45, 83, 84, 1, 85, 86, 87, 46, 47, 88, 48, 5, 89, 6, 90, 7, 91, 49, 8, 92, 9, 93, 94, 10, 95, 11, 96, 102, 12, 103, 4, 97, 98, 50, 99, 100 }
  uselistorder i32 32, { 111, 49, 47, 92, 93, 94, 87, 95, 106, 107, 88, 89, 90, 91, 104, 105, 50, 51, 55, 52, 56, 53, 57, 54, 58, 59, 112, 113, 60, 114, 68, 69, 67, 70, 71, 72, 73, 74, 75, 62, 63, 1, 64, 2, 65, 4, 3, 61, 66, 76, 115, 6, 5, 8, 7, 10, 9, 48, 77, 108, 12, 11, 96, 78, 97, 14, 13, 82, 98, 79, 99, 80, 100, 81, 101, 16, 15, 18, 17, 86, 20, 19, 22, 21, 23, 25, 24, 27, 26, 28, 29, 31, 30, 102, 103, 32, 109, 33, 110, 34, 35, 36, 37, 38, 39, 83, 40, 41, 42, 84, 43, 0, 44, 45, 46, 85 }
  uselistorder i8 0, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 28, 19, 30, 3, 17, 4, 31, 33, 32, 20, 34, 35, 21, 36, 37, 0, 18, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 53, 55, 52, 22, 54, 23, 56, 57, 51, 2, 58, 59, 60, 25, 61, 64, 26, 62, 63, 24, 65, 66, 67, 68, 69, 70, 5, 71, 72, 73, 74, 75, 76, 77, 78, 27, 79, 80, 81, 82, 83, 84, 85 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 255, { 6, 4, 15, 7, 0, 1, 2, 10, 12, 11, 8, 13, 9, 14, 3, 5 }
  uselistorder i32 10, { 3, 34, 35, 36, 5, 60, 62, 61, 0, 57, 58, 84, 63, 1, 9, 39, 40, 10, 37, 38, 31, 4, 41, 32, 11, 2, 33, 42, 12, 43, 13, 44, 14, 45, 15, 46, 16, 47, 17, 48, 18, 49, 19, 50, 20, 51, 21, 52, 22, 53, 23, 54, 55, 56, 24, 25, 26, 59, 6, 64, 65, 66, 67, 68, 69, 70, 71, 72, 27, 73, 74, 75, 7, 76, 77, 78, 28, 8, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 29, 90, 30 }
  uselistorder i16 0, { 0, 1, 2, 3, 7, 8, 4, 5, 9, 10, 12, 11, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder label %dec_label_pc_16b74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b70, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_16af4, { 1, 0 }
  uselistorder label %dec_label_pc_16abc, { 1, 0 }
}

define i32 @function_16b7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b7c:
  %v0_16b7c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16b7c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16b7c
  %v3_16b80 = udiv i32 %arg1, 2
  %v4_16b80 = shl i32 %arg1, 31
  %v5_16b80 = or i32 %v3_16b80, %v4_16b80
  %v8_16b80 = and i32 %v5_16b80, %arg1
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16b7c, %bb
  %v9_16b80 = phi i32 [ %arg1, %dec_label_pc_16b7c ], [ %v8_16b80, %bb ]
  ret i32 %v9_16b80

; uselistorder directives
  uselistorder i32 31, { 10, 8, 9, 11, 3, 12, 0, 13, 1, 14, 2, 15, 16, 4, 5, 17, 6, 18, 7, 19 }
  uselistorder i32 2, { 3, 4, 5, 149, 61, 62, 57, 281, 282, 74, 283, 284, 63, 285, 286, 155, 150, 156, 151, 96, 6, 157, 7, 8, 64, 9, 10, 287, 68, 263, 11, 12, 264, 13, 14, 56, 259, 15, 16, 17, 260, 265, 18, 19, 20, 21, 75, 266, 267, 22, 23, 0, 152, 268, 24, 269, 97, 25, 148, 26, 27, 28, 29, 30, 98, 100, 99, 65, 66, 80, 174, 175, 101, 171, 106, 172, 103, 176, 102, 173, 104, 165, 158, 159, 160, 161, 162, 163, 105, 164, 81, 166, 82, 167, 83, 168, 84, 169, 85, 170, 76, 31, 32, 177, 180, 181, 107, 69, 153, 108, 182, 109, 183, 110, 184, 185, 111, 186, 113, 178, 112, 179, 192, 193, 33, 114, 115, 116, 194, 195, 117, 86, 187, 71, 70, 118, 188, 119, 189, 34, 35, 36, 120, 121, 122, 123, 190, 191, 124, 87, 125, 126, 128, 72, 129, 127, 196, 130, 131, 197, 67, 73, 198, 199, 200, 201, 202, 203, 204, 205, 206, 132, 207, 88, 208, 209, 210, 211, 212, 213, 133, 89, 214, 215, 216, 217, 218, 219, 220, 221, 134, 222, 90, 223, 224, 58, 135, 136, 137, 225, 226, 227, 228, 229, 230, 231, 1, 37, 38, 39, 40, 41, 42, 138, 232, 91, 233, 234, 235, 236, 43, 237, 238, 44, 45, 46, 47, 48, 49, 139, 239, 92, 240, 241, 242, 243, 244, 245, 140, 246, 141, 247, 142, 248, 2, 50, 51, 52, 53, 54, 55, 143, 249, 93, 250, 251, 59, 252, 253, 254, 255, 256, 257, 144, 94, 258, 270, 60, 271, 272, 145, 273, 146, 274, 275, 276, 277, 278, 147, 279, 95, 280, 77, 261, 78, 79, 262, 154 }
  uselistorder i32 %arg1, { 2, 1, 3, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16b84(i32 %arg1) local_unnamed_addr {
dec_label_pc_16b84:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 98320, i32* %r2.global-to-local, align 4
  %v4_16b90 = load i32, i32* inttoptr (i32 98420 to i32*), align 4
  %v4_16b98 = load i32, i32* inttoptr (i32 98384 to i32*), align 16
  store i32 %v4_16b98, i32* %r1.global-to-local, align 4
  %v1_16b9c = add i32 %arg1, 44
  %v2_16b9c = inttoptr i32 %v1_16b9c to i32*
  %v3_16b9c = load i32, i32* %v2_16b9c, align 4
  %v1_16ba0 = add i32 %arg1, 28
  %v2_16ba0 = inttoptr i32 %v1_16ba0 to i32*
  %v3_16ba0 = load i32, i32* %v2_16ba0, align 4
  store i32 %v3_16ba0, i32* %r2.global-to-local, align 4
  %v2_16ba4 = inttoptr i32 %v4_16b90 to i32*
  store i32 %v3_16b9c, i32* %v2_16ba4, align 4
  %v0_16ba8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16ba8 = load i32, i32* %r1.global-to-local, align 4
  %v2_16ba8 = inttoptr i32 %v1_16ba8 to i32*
  store i32 %v0_16ba8, i32* %v2_16ba8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 39, 0, 1, 3, 4, 5, 2, 6, 7, 8, 12, 9, 13, 11, 23, 24, 25, 26, 27, 28, 20, 21, 22, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 10, 14, 15, 16, 17 }
  uselistorder i32 98320, { 46, 0, 47, 48, 1, 2, 49, 3, 4, 5, 50, 51, 6, 7, 52, 8, 53, 54, 55, 56, 57, 9, 12, 13, 11, 10, 14, 15, 41, 37, 35, 34, 36, 38, 39, 40, 33, 42, 28, 30, 29, 27, 26, 31, 32, 23, 22, 25, 24, 21, 20, 19, 18, 43, 44, 45, 58, 59, 60, 16, 17 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_16bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bb0:
  %v0_16bb0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16bb0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16bb0
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16bb0, %bb
  %v4_16bb8 = phi i32 [ %arg1, %dec_label_pc_16bb0 ], [ 0, %bb ]
  ret i32 %v4_16bb8

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_16bbc(i32 %arg1) local_unnamed_addr {
dec_label_pc_16bf8:
  store i32 %arg1, i32* @global_var_1a2d4.792, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_1a2d4.792, { 1, 0, 2 }
}

define i32 @function_16c00(i32 %arg1) local_unnamed_addr {
dec_label_pc_16c00:
  %v0_16c00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16c00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16c00
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16c00, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 40, 17, 18, 19, 20, 34, 35, 36, 37, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 30, 31, 32, 33, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_16c08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16c08:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16c08 = load i32, i32* @r7, align 4
  store i32 %v3_16c08, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16c30, label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c08
  %v0_16c20 = call i32 @function_1207c()
  %v0_16c24 = load i32, i32* %r7.global-to-local, align 4
  %v1_16c24 = sub i32 0, %v0_16c24
  %v2_16c28 = inttoptr i32 %v0_16c20 to i32*
  store i32 %v1_16c24, i32* %v2_16c28, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_16c34.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16c30

dec_label_pc_16c30:                               ; preds = %dec_label_pc_16c08, %dec_label_pc_16c20
  %v2_16c34 = phi i32 [ %v3_16c08, %dec_label_pc_16c08 ], [ %v2_16c34.pre, %dec_label_pc_16c20 ]
  %v0_16c30 = phi i32 [ %arg1, %dec_label_pc_16c08 ], [ -1, %dec_label_pc_16c20 ]
  store i32 %v2_16c34, i32* %r7.global-to-local, align 4
  ret i32 %v0_16c30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16c30, { 1, 0 }
}

define i32 @function_16c3c(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16c3c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16c40 = load i32, i32* @r4, align 4
  %v6_16c40 = load i32, i32* @r5, align 4
  %v12_16c40 = load i32, i32* @r7, align 4
  %v1_16c44 = add i32 %arg3, 14
  %v2_16c4c = ptrtoint i32* %stack_var_-72 to i32
  %v1_16c50 = and i32 %v1_16c44, -8
  %v2_16c54 = sub i32 %v2_16c4c, %v1_16c50
  %v1_16c58 = add i32 %v2_16c54, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_16c58, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_16c94, label %dec_label_pc_16c80

dec_label_pc_16c80:                               ; preds = %dec_label_pc_16c3c
  %v0_16c80 = call i32 @function_1207c()
  %v0_16c84 = load i32, i32* %r4.global-to-local, align 4
  %v1_16c84 = sub i32 0, %v0_16c84
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16c8c = inttoptr i32 %v0_16c80 to i32*
  store i32 %v1_16c84, i32* %v2_16c8c, align 4
  %v0_16c9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16c9c

dec_label_pc_16c94:                               ; preds = %dec_label_pc_16c3c
  br i1 false, label %dec_label_pc_16c9c, label %dec_label_pc_16ca4

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16c94, %dec_label_pc_16c80
  %v0_16c9c = phi i32 [ -1, %dec_label_pc_16c94 ], [ %v0_16c9c.pre, %dec_label_pc_16c80 ]
  store i32 %v0_16c9c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16ca4:                               ; preds = %dec_label_pc_16c94
  %v2_16ca4 = add i32 %v1_16c58, %arg1
  %v2_16ca8 = add i32 %tmp, %arg3
  store i32 %v2_16ca8, i32* @ip, align 4
  store i32 %v1_16c58, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_16d58

dec_label_pc_16cc4:                               ; preds = %dec_label_pc_16d58
  %v1_16cc4 = add i32 %v0_16d18, 16
  %v2_16cc4 = inttoptr i32 %v1_16cc4 to i16*
  %v3_16cc4 = load i16, i16* %v2_16cc4, align 2
  %v4_16cc4 = zext i16 %v3_16cc4 to i32
  %v1_16cc8 = add nuw nsw i32 %v4_16cc4, 7
  %v1_16ccc = and i32 %v1_16cc8, 131064
  store i32 %v1_16ccc, i32* %r2.global-to-local, align 4
  %v2_16cd4 = add i32 %v1_16ccc, %v0_16d20
  store i32 %v2_16cd4, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_16cd4, %v2_16ca8
  br i1 %tmp26, label %dec_label_pc_16ce0, label %dec_label_pc_16d14

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16cc4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_16ce8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16ce8, i32* %r2.global-to-local, align 4
  %v0_16cec = load i32, i32* %sl.global-to-local, align 4
  %v1_16cf0 = load i32, i32* @sp, align 4
  %v2_16cf0 = inttoptr i32 %v1_16cf0 to i32*
  store i32 0, i32* %v2_16cf0, align 4
  %v4_16cf4 = call i32 @function_16f78(i32 %arg1, i32 0, i32 %v0_16ce8, i32 %v0_16cec)
  %v0_16cf8 = load i32, i32* @r5, align 4
  %v1_16cf8 = load i32, i32* %r6.global-to-local, align 4
  %v9_16cf8 = icmp eq i32 %v0_16cf8, %v1_16cf8
  br i1 %v9_16cf8, label %dec_label_pc_16d00, label %dec_label_pc_16d6c

dec_label_pc_16d00:                               ; preds = %dec_label_pc_16ce0
  %v0_16d00 = call i32 @function_1207c()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_16d0c = inttoptr i32 %v0_16d00 to i32*
  store i32 22, i32* %v2_16d0c, align 4
  %v0_16d70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16d14:                               ; preds = %dec_label_pc_16cc4
  %v1_16d14 = inttoptr i32 %v0_16d18 to i32*
  %v2_16d14 = load i32, i32* %v1_16d14, align 4
  %v3_16d14 = add i32 %v0_16d18, 4
  %v4_16d14 = inttoptr i32 %v3_16d14 to i32*
  %v5_16d14 = load i32, i32* %v4_16d14, align 4
  store i32 %v5_16d14, i32* %r4.global-to-local, align 4
  %v1_16d18 = add i32 %v0_16d18, 8
  store i32 %v1_16d18, i32* %sb.global-to-local, align 4
  %v1_16d1c = inttoptr i32 %v1_16d18 to i32*
  %v2_16d1c = load i32, i32* %v1_16d1c, align 4
  store i32 %v2_16d1c, i32* %sb.global-to-local, align 4
  %v3_16d1c = add i32 %v0_16d18, 12
  %v4_16d1c = inttoptr i32 %v3_16d1c to i32*
  %v5_16d1c = load i32, i32* %v4_16d1c, align 4
  store i32 %v5_16d1c, i32* %sl.global-to-local, align 4
  %v1_16d20 = inttoptr i32 %v0_16d20 to i32*
  store i32 %v2_16d14, i32* %v1_16d20, align 4
  %v3_16d20 = add i32 %v0_16d20, 4
  %v4_16d20 = inttoptr i32 %v3_16d20 to i32*
  %v5_16d20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_16d20, i32* %v4_16d20, align 4
  %v0_16d24 = load i32, i32* @r7, align 4
  %v1_16d24 = add i32 %v0_16d24, 8
  %v1_16d28 = inttoptr i32 %v1_16d24 to i32*
  %v2_16d28 = load i32, i32* %v1_16d28, align 4
  %v3_16d28 = add i32 %v0_16d24, 12
  %v4_16d28 = inttoptr i32 %v3_16d28 to i32*
  %v5_16d28 = load i32, i32* %v4_16d28, align 4
  store i32 %v5_16d28, i32* @r4, align 4
  %v1_16d2c = load i32, i32* @r5, align 4
  %v2_16d2c = add i32 %v1_16d2c, 8
  %v3_16d2c = inttoptr i32 %v2_16d2c to i32*
  store i32 %v2_16d28, i32* %v3_16d2c, align 4
  %v0_16d30 = load i32, i32* @r4, align 4
  %v1_16d30 = load i32, i32* @r5, align 4
  %v2_16d30 = add i32 %v1_16d30, 12
  %v3_16d30 = inttoptr i32 %v2_16d30 to i32*
  store i32 %v0_16d30, i32* %v3_16d30, align 4
  %v0_16d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d34 = trunc i32 %v0_16d34 to i16
  %v2_16d34 = load i32, i32* @r5, align 4
  %v3_16d34 = add i32 %v2_16d34, 16
  %v4_16d34 = inttoptr i32 %v3_16d34 to i16*
  store i16 %v1_16d34, i16* %v4_16d34, align 2
  %v0_16d38 = load i32, i32* @r7, align 4
  %v1_16d38 = add i32 %v0_16d38, 18
  %v2_16d38 = inttoptr i32 %v1_16d38 to i8*
  %v3_16d38 = load i8, i8* %v2_16d38, align 1
  %v4_16d38 = zext i8 %v3_16d38 to i32
  store i32 %v4_16d38, i32* @r3, align 4
  %v2_16d3c = load i32, i32* @r5, align 4
  %v3_16d3c = add i32 %v2_16d3c, 18
  %v4_16d3c = inttoptr i32 %v3_16d3c to i8*
  store i8 %v3_16d38, i8* %v4_16d3c, align 1
  %v0_16d40 = load i32, i32* @r7, align 4
  %v1_16d40 = add i32 %v0_16d40, 16
  %v2_16d40 = inttoptr i32 %v1_16d40 to i16*
  %v3_16d40 = load i16, i16* %v2_16d40, align 2
  %v4_16d40 = zext i16 %v3_16d40 to i32
  %v1_16d44 = add nsw i32 %v4_16d40, -19
  store i32 %v1_16d44, i32* @r2, align 4
  %v0_16d48 = call i32 @function_12180()
  %v0_16d4c = load i32, i32* @r7, align 4
  %v1_16d4c = add i32 %v0_16d4c, 16
  %v2_16d4c = inttoptr i32 %v1_16d4c to i16*
  %v3_16d4c = load i16, i16* %v2_16d4c, align 2
  %v4_16d4c = zext i16 %v3_16d4c to i32
  %v0_16d50 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16d50, i32* @r5, align 4
  %v2_16d54 = add i32 %v4_16d4c, %v0_16d4c
  store i32 %v2_16d54, i32* @r7, align 4
  br label %dec_label_pc_16d58

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16ca4, %dec_label_pc_16d14
  %v0_16d20 = phi i32 [ %tmp, %dec_label_pc_16ca4 ], [ %v0_16d50, %dec_label_pc_16d14 ]
  %v0_16d18 = phi i32 [ %v1_16c58, %dec_label_pc_16ca4 ], [ %v2_16d54, %dec_label_pc_16d14 ]
  %v3_16d5c = icmp ult i32 %v0_16d18, %v2_16ca4
  %v1_16d60 = add i32 %v0_16d20, 19
  store i32 %v1_16d60, i32* @r0, align 4
  %v1_16d64 = add i32 %v0_16d18, 19
  store i32 %v1_16d64, i32* @r1, align 4
  br i1 %v3_16d5c, label %dec_label_pc_16cc4, label %dec_label_pc_16d6c.loopexit

dec_label_pc_16d6c.loopexit:                      ; preds = %dec_label_pc_16d58
  %v0_16d6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16d6c

dec_label_pc_16d6c:                               ; preds = %dec_label_pc_16d6c.loopexit, %dec_label_pc_16ce0
  %v1_16d6c = phi i32 [ %v0_16d20, %dec_label_pc_16d6c.loopexit ], [ %v0_16cf8, %dec_label_pc_16ce0 ]
  %v0_16d6c = phi i32 [ %v0_16d6c.pre, %dec_label_pc_16d6c.loopexit ], [ %v1_16cf8, %dec_label_pc_16ce0 ]
  %v2_16d6c = sub i32 %v1_16d6c, %v0_16d6c
  store i32 %v2_16d6c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16d70:                               ; preds = %dec_label_pc_16d00, %dec_label_pc_16c9c, %dec_label_pc_16d6c
  %v0_16d70 = phi i32 [ %v0_16d70.pre, %dec_label_pc_16d00 ], [ %v0_16c9c, %dec_label_pc_16c9c ], [ %v2_16d6c, %dec_label_pc_16d6c ]
  store i32 %v3_16c40, i32* %r4.global-to-local, align 4
  store i32 %v6_16c40, i32* @r5, align 4
  store i32 %v12_16c40, i32* @r7, align 4
  ret i32 %v0_16d70

; uselistorder directives
  uselistorder i32 %v0_16d18, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_16d20, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_16c58, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 13, 14, 0, 1, 18, 19, 4, 15, 5, 16, 6, 17, 20, 7, 8, 9, 2, 21, 10, 22, 3, 23, 11, 24, 12, 25 }
  uselistorder i32* @r3, { 7, 8, 52, 53, 78, 79, 2, 80, 81, 82, 3, 83, 84, 85, 4, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 0, 104, 105, 106, 107, 9, 6, 10, 11, 12, 13, 14, 54, 55, 108, 117, 118, 119, 112, 47, 48, 67, 68, 69, 70, 71, 59, 60, 15, 16, 17, 123, 120, 121, 122, 1, 124, 125, 126, 113, 18, 72, 37, 38, 39, 114, 115, 116, 73, 56, 109, 110, 111, 49, 50, 51, 57, 58, 5, 74, 75, 76, 77, 32, 26, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 43, 42, 45, 44, 46, 61, 62, 63, 64, 65, 66 }
  uselistorder i32 18, { 10, 11, 2, 12, 3, 13, 4, 14, 9, 5, 6, 7, 15, 8, 16, 0, 17, 1, 18 }
  uselistorder i32 22, { 1, 0, 14, 2, 3, 4, 5, 6, 7, 18, 8, 15, 9, 16, 10, 17, 19, 11, 12, 13 }
  uselistorder i32* @sp, { 2, 3, 1, 4, 0 }
  uselistorder i32 7, { 53, 51, 52, 10, 0, 1, 92, 4, 55, 56, 11, 54, 2, 12, 57, 13, 58, 14, 59, 15, 60, 16, 61, 17, 62, 18, 63, 19, 64, 20, 65, 21, 66, 22, 67, 23, 68, 24, 69, 25, 70, 26, 71, 27, 72, 28, 73, 29, 74, 30, 75, 31, 76, 32, 77, 33, 78, 34, 79, 35, 80, 36, 81, 37, 82, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 83, 5, 84, 48, 85, 6, 49, 86, 7, 87, 8, 88, 9, 89, 50, 91, 3, 90 }
  uselistorder i32* @ip, { 10, 11, 12, 60, 13, 14, 6, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 2, 94, 95, 96, 97, 98, 99, 100, 101, 102, 15, 0, 16, 17, 7, 18, 19, 20, 8, 9, 103, 104, 35, 43, 3, 37, 38, 39, 40, 41, 42, 44, 45, 46, 108, 105, 106, 107, 1, 109, 36, 21, 22, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 4, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 59, 23 }
  uselistorder i1 false, { 0, 20, 21, 22, 36, 16, 19, 37, 38, 39, 40, 41, 2, 1, 23, 26, 25, 24, 27, 4, 6, 35, 5, 14, 34, 17, 18, 7, 30, 31, 13, 15, 8, 9, 10, 28, 3, 11, 12, 32, 33, 29, 42 }
  uselistorder i32 -8, { 37, 17, 18, 19, 20, 21, 22, 16, 15, 9, 14, 13, 12, 11, 23, 24, 25, 26, 27, 39, 28, 29, 30, 31, 32, 38, 40, 33, 41, 36, 10, 34, 35, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 14, { 16, 21, 29, 12, 13, 14, 0, 17, 18, 15, 3, 19, 4, 20, 5, 6, 7, 8, 9, 10, 11, 22, 23, 1, 24, 25, 26, 27, 2, 28 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_16d70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16d58, { 1, 0 }
}

define i32 @function_16d80(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16d80:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16d80 = load i32, i32* @r4, align 4
  store i32 %v3_16d80, i32* %stack_var_-12, align 4
  %v0_16d84 = load i32, i32* %r0.global-to-local, align 4
  %v1_16d84 = inttoptr i32 %v0_16d84 to i16*
  %v2_16d84 = load i16, i16* %v1_16d84, align 2
  %v3_16d84 = zext i16 %v2_16d84 to i32
  %v1_16d88 = and i32 %v3_16d84, 4
  store i32 %v1_16d88, i32* %r5.global-to-local, align 4
  %v2_16d88 = icmp eq i32 %v1_16d88, 0
  store i32 %v0_16d84, i32* %r4.global-to-local, align 4
  br i1 %v2_16d88, label %dec_label_pc_16d9c, label %bb

bb:                                               ; preds = %dec_label_pc_16d80
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d80
  %v1_16d9c = icmp slt i32 %arg2, 0
  br i1 %v1_16d9c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_16d9c
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_16d9c, %bb18
  %v1_16da4 = add i32 %v0_16d84, 4
  %v2_16da4 = inttoptr i32 %v1_16da4 to i32*
  %v3_16da4 = load i32, i32* %v2_16da4, align 4
  store i32 %v3_16da4, i32* %r0.global-to-local, align 4
  %v1_16da8 = call i32 @function_119ec(i32 %v3_16da4)
  store i32 %v1_16da8, i32* %r0.global-to-local, align 4
  %v5_16db0 = icmp sgt i32 %v1_16da8, 0
  br i1 %v5_16db0, label %.thread7, label %dec_label_pc_16db4

dec_label_pc_16db4:                               ; preds = %bb19
  %v2_16dac = icmp eq i32 %v1_16da8, 0
  %v0_16db4 = load i32, i32* %r4.global-to-local, align 4
  %v1_16db4 = inttoptr i32 %v0_16db4 to i16*
  %v2_16db4 = load i16, i16* %v1_16db4, align 2
  br i1 %v2_16dac, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_16db4
  %v2_16db8 = or i16 %v2_16db4, 4
  store i16 %v2_16db8, i16* %v1_16db4, align 2
  %v1_16dd4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_16db4
  %v2_16dbc = or i16 %v2_16db4, 8
  store i16 %v2_16dbc, i16* %v1_16db4, align 2
  %v1_16dc8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16dc8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_16dd4 = phi i32 [ %v1_16dd4.pre, %bb20 ], [ 0, %bb ], [ %v1_16da8, %bb19 ], [ %v1_16dc8, %bb21 ]
  %v2_16dd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16dd0, i32* @r4, align 4
  ret i32 %v1_16dd4

; uselistorder directives
  uselistorder i16 %v2_16db4, { 1, 0 }
  uselistorder i32 %v1_16da8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_119ec, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_16dd8(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16dd8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_16dd8 = load i32, i32* @r4, align 4
  store i32 %v3_16dd8, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_16df02 = icmp eq i32 %arg3, 0
  store i1 %v2_16df02, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16df02, label %dec_label_pc_16e80, label %dec_label_pc_16df8

dec_label_pc_16df0thread-pre-split:               ; preds = %dec_label_pc_16df8
  %v3_16e10 = load i32, i32* %r6.global-to-local, align 4
  %v5_16e10 = add i32 %v3_16e10, %v3_16e08
  store i32 %v5_16e10, i32* %r6.global-to-local, align 4
  %v4_16e14 = load i32, i32* %r5.global-to-local, align 4
  %v5_16e14 = sub i32 %v4_16e14, %v3_16e08
  store i32 %v5_16e14, i32* %r5.global-to-local, align 4
  %v2_16df0 = icmp eq i32 %v5_16e14, 0
  store i1 %v2_16df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16df0, label %dec_label_pc_16df0.dec_label_pc_16e80.loopexit_crit_edge, label %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge

dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge: ; preds = %dec_label_pc_16df0thread-pre-split
  %v3_16df8.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_16e04.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16df8

dec_label_pc_16df8:                               ; preds = %dec_label_pc_16dd8, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge
  %v0_16e04 = phi i32 [ %v0_16e04.pre, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge ], [ %tmp, %dec_label_pc_16dd8 ]
  %v0_16e00 = phi i32 [ %v5_16e10, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge ], [ %arg2, %dec_label_pc_16dd8 ]
  %v3_16df8 = phi i32 [ %v3_16df8.pre, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge ], [ 2147483647, %dec_label_pc_16dd8 ]
  %v0_16dfc.in = phi i32 [ %v5_16e14, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge ], [ %arg3, %dec_label_pc_16dd8 ]
  %v3_16dfc = phi i32 [ %v5_16e14, %dec_label_pc_16df0thread-pre-split.dec_label_pc_16df8_crit_edge ], [ %arg3, %dec_label_pc_16dd8 ]
  %v0_16dfc = icmp slt i32 %v0_16dfc.in, 0
  %storemerge = select i1 %v0_16dfc, i32 %v3_16df8, i32 %v3_16dfc
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_16e00, i32* %r1.global-to-local, align 4
  %v1_16e04 = add i32 %v0_16e04, 4
  %v2_16e04 = inttoptr i32 %v1_16e04 to i32*
  %v3_16e04 = load i32, i32* %v2_16e04, align 4
  %v3_16e08 = call i32 @function_11b60(i32 %v3_16e04, i32 %v0_16e00)
  %v1_16e0c = icmp slt i32 %v3_16e08, 0
  %v2_16e0c = icmp eq i32 %v3_16e08, 0
  store i1 %v2_16e0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16e0c, label %dec_label_pc_16e1c, label %dec_label_pc_16df0thread-pre-split

dec_label_pc_16e1c:                               ; preds = %dec_label_pc_16df8
  %v0_16e1c = load i32, i32* %r4.global-to-local, align 4
  %v1_16e1c = inttoptr i32 %v0_16e1c to i16*
  %v2_16e1c = load i16, i16* %v1_16e1c, align 2
  %v3_16e1c = zext i16 %v2_16e1c to i32
  store i32 %v3_16e1c, i32* %r3.global-to-local, align 4
  %v1_16e20 = add i32 %v0_16e1c, 8
  store i32 %v1_16e20, i32* %r1.global-to-local, align 4
  %v1_16e24 = inttoptr i32 %v1_16e20 to i32*
  %v2_16e24 = load i32, i32* %v1_16e24, align 4
  store i32 %v2_16e24, i32* %r1.global-to-local, align 4
  %v3_16e24 = add i32 %v0_16e1c, 12
  %v4_16e24 = inttoptr i32 %v3_16e24 to i32*
  %v5_16e24 = load i32, i32* %v4_16e24, align 4
  %v1_16e28 = or i32 %v3_16e1c, 8
  store i32 %v1_16e28, i32* %r3.global-to-local, align 4
  %v2_16e2c = sub i32 %v5_16e24, %v2_16e24
  store i32 %v2_16e2c, i32* %r2.global-to-local, align 4
  %v9_16e2c = icmp eq i32 %v5_16e24, %v2_16e24
  store i1 %v9_16e2c, i1* %cpsr_z.global-to-local, align 1
  %v1_16e30 = trunc i32 %v1_16e28 to i16
  store i16 %v1_16e30, i16* %v1_16e1c, align 2
  br i1 %v9_16e2c, label %dec_label_pc_16e1c.dec_label_pc_16e7c_crit_edge, label %dec_label_pc_16e38

dec_label_pc_16e1c.dec_label_pc_16e7c_crit_edge:  ; preds = %dec_label_pc_16e1c
  %v0_16e7c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e1c
  %v0_16e38 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e38 = load i32, i32* %r5.global-to-local, align 4
  %v3_16e38 = icmp ult i32 %v0_16e38, %v1_16e38
  %v9_16e38 = icmp eq i32 %v0_16e38, %v1_16e38
  store i1 %v9_16e38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16e38, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_16e38
  store i32 %v1_16e38, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_16e38, %bb23
  %v2_16e4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_16e60
  %v2_16e4c = phi i32 [ %v2_16e4c.pre, %.preheader ], [ %v1_16e64, %dec_label_pc_16e60 ]
  %v0_16e40 = load i32, i32* %r6.global-to-local, align 4
  %v1_16e40 = inttoptr i32 %v0_16e40 to i8*
  %v2_16e40 = load i8, i8* %v1_16e40, align 1
  %v3_16e40 = zext i8 %v2_16e40 to i32
  store i32 %v3_16e40, i32* %r3.global-to-local, align 4
  %v7_16e44 = icmp eq i8 %v2_16e40, 10
  store i1 %v7_16e44, i1* %cpsr_z.global-to-local, align 1
  %v1_16e48 = add i32 %v0_16e40, 1
  store i32 %v1_16e48, i32* %r6.global-to-local, align 4
  %v3_16e4c = inttoptr i32 %v2_16e4c to i8*
  store i8 %v2_16e40, i8* %v3_16e4c, align 1
  %v0_16e50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16e50, label %dec_label_pc_16e54, label %dec_label_pc_16e60

dec_label_pc_16e54:                               ; preds = %bb24
  %v0_16e54 = load i32, i32* %r4.global-to-local, align 4
  %v1_16e54 = inttoptr i32 %v0_16e54 to i16*
  %v2_16e54 = load i16, i16* %v1_16e54, align 2
  %v3_16e54 = zext i16 %v2_16e54 to i32
  store i32 %v3_16e54, i32* %r3.global-to-local, align 4
  %v1_16e58 = and i32 %v3_16e54, 256
  %v2_16e58 = icmp eq i32 %v1_16e58, 0
  store i1 %v2_16e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16e58, label %dec_label_pc_16e60, label %dec_label_pc_16e54.dec_label_pc_16e6c_crit_edge

dec_label_pc_16e54.dec_label_pc_16e6c_crit_edge:  ; preds = %dec_label_pc_16e54
  %v0_16e70.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e6c

dec_label_pc_16e60:                               ; preds = %dec_label_pc_16e54, %bb24
  %v0_16e60 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e60 = add i32 %v0_16e60, -1
  store i32 %v1_16e60, i32* %r2.global-to-local, align 4
  %v7_16e60 = icmp eq i32 %v0_16e60, 1
  store i1 %v7_16e60, i1* %cpsr_z.global-to-local, align 1
  %v0_16e64 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e64 = add i32 %v0_16e64, 1
  store i32 %v1_16e64, i32* %r1.global-to-local, align 4
  br i1 %v7_16e60, label %dec_label_pc_16e60.dec_label_pc_16e6c_crit_edge, label %bb24

dec_label_pc_16e60.dec_label_pc_16e6c_crit_edge:  ; preds = %dec_label_pc_16e60
  %v0_16e6c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e6c

dec_label_pc_16e6c:                               ; preds = %dec_label_pc_16e54.dec_label_pc_16e6c_crit_edge, %dec_label_pc_16e60.dec_label_pc_16e6c_crit_edge
  %v0_16e70 = phi i32 [ %v1_16e64, %dec_label_pc_16e60.dec_label_pc_16e6c_crit_edge ], [ %v0_16e70.pre, %dec_label_pc_16e54.dec_label_pc_16e6c_crit_edge ]
  %v0_16e6c = phi i32 [ %v0_16e6c.pre, %dec_label_pc_16e60.dec_label_pc_16e6c_crit_edge ], [ %v0_16e54, %dec_label_pc_16e54.dec_label_pc_16e6c_crit_edge ]
  %v1_16e6c = add i32 %v0_16e6c, 8
  %v2_16e6c = inttoptr i32 %v1_16e6c to i32*
  %v3_16e6c = load i32, i32* %v2_16e6c, align 4
  store i32 %v3_16e6c, i32* %r3.global-to-local, align 4
  %v2_16e70 = add i32 %v0_16e6c, 16
  %v3_16e70 = inttoptr i32 %v2_16e70 to i32*
  store i32 %v0_16e70, i32* %v3_16e70, align 4
  %v0_16e74 = load i32, i32* %r3.global-to-local, align 4
  %v1_16e74 = load i32, i32* %r1.global-to-local, align 4
  %v2_16e74 = sub i32 %v1_16e74, %v0_16e74
  store i32 %v2_16e74, i32* %r3.global-to-local, align 4
  %v1_16e78 = load i32, i32* %r5.global-to-local, align 4
  %v2_16e78 = sub i32 %v1_16e78, %v2_16e74
  store i32 %v2_16e78, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16e7c

dec_label_pc_16e7c:                               ; preds = %dec_label_pc_16e1c.dec_label_pc_16e7c_crit_edge, %dec_label_pc_16e6c
  %v0_16e7c = phi i32 [ %v0_16e7c.pre, %dec_label_pc_16e1c.dec_label_pc_16e7c_crit_edge ], [ %v2_16e78, %dec_label_pc_16e6c ]
  %v1_16e7c = load i32, i32* @r7, align 4
  %v2_16e7c = sub i32 %v1_16e7c, %v0_16e7c
  br label %dec_label_pc_16e80

dec_label_pc_16df0.dec_label_pc_16e80.loopexit_crit_edge: ; preds = %dec_label_pc_16df0thread-pre-split
  %v0_16e80.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16dd8, %dec_label_pc_16df0.dec_label_pc_16e80.loopexit_crit_edge, %dec_label_pc_16e7c
  %v0_16e80 = phi i32 [ %v2_16e7c, %dec_label_pc_16e7c ], [ %v0_16e80.pre.pre, %dec_label_pc_16df0.dec_label_pc_16e80.loopexit_crit_edge ], [ 0, %dec_label_pc_16dd8 ]
  %v2_16e84 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16e84, i32* %r4.global-to-local, align 4
  ret i32 %v0_16e80

; uselistorder directives
  uselistorder i32 %v0_16e6c, { 1, 0 }
  uselistorder i32 %v1_16e64, { 0, 2, 1 }
  uselistorder i32 %v0_16e60, { 1, 0 }
  uselistorder i32 %v1_16e38, { 0, 2, 1 }
  uselistorder i32 %v0_16e38, { 1, 0 }
  uselistorder i32 %v5_16e24, { 1, 0 }
  uselistorder i32 %v2_16e24, { 1, 0, 2 }
  uselistorder i32 %v3_16e08, { 2, 3, 0, 1 }
  uselistorder i32 %v0_16e00, { 1, 0 }
  uselistorder i32 %v5_16e14, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 256, { 279, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 272, 280, 277, 278, 281, 33, 34, 35, 271, 36, 37, 38, 0, 276, 1, 39, 40, 41, 42, 44, 45, 46, 43, 48, 49, 50, 47, 51, 274, 52, 282, 283, 53, 54, 55, 285, 56, 57, 59, 58, 60, 61, 62, 63, 64, 65, 66, 69, 68, 67, 70, 275, 286, 284, 71, 72, 73, 74, 287, 75, 76, 77, 78, 79, 288, 80, 81, 82, 83, 289, 84, 85, 86, 87, 89, 88, 90, 92, 91, 93, 95, 94, 96, 290, 97, 98, 291, 109, 103, 99, 110, 104, 111, 105, 100, 101, 106, 107, 112, 108, 102, 113, 114, 115, 116, 117, 118, 119, 120, 127, 124, 121, 128, 125, 129, 126, 122, 123, 130, 131, 132, 133, 134, 145, 140, 146, 141, 147, 142, 148, 143, 135, 136, 137, 138, 149, 144, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 169, 166, 170, 167, 171, 168, 163, 164, 165, 172, 173, 174, 175, 176, 177, 187, 188, 182, 178, 189, 183, 190, 184, 179, 185, 191, 186, 180, 181, 192, 193, 194, 195, 198, 196, 199, 197, 200, 201, 202, 207, 205, 203, 208, 206, 204, 209, 273, 292, 210, 212, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 231, 238, 232, 239, 233, 234, 227, 228, 240, 235, 241, 236, 229, 230, 237, 242, 243, 244, 245, 246, 247, 248, 253, 260, 254, 261, 255, 249, 250, 262, 256, 263, 257, 258, 251, 252, 259, 264, 265, 266, 267, 268, 269, 270 }
  uselistorder i8 10, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_11b60, { 2, 1, 0 }
  uselistorder i32 4, { 212, 213, 214, 206, 207, 352, 215, 471, 4, 5, 216, 6, 7, 68, 0, 8, 80, 75, 76, 9, 472, 77, 473, 58, 10, 11, 78, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 12, 491, 492, 493, 494, 495, 496, 57, 497, 498, 499, 500, 501, 502, 13, 14, 79, 503, 217, 92, 218, 15, 219, 93, 220, 221, 222, 223, 142, 224, 225, 226, 227, 228, 229, 16, 208, 209, 210, 211, 310, 311, 201, 202, 203, 204, 205, 504, 143, 94, 144, 505, 17, 506, 145, 146, 59, 413, 414, 415, 416, 417, 418, 147, 148, 18, 419, 420, 421, 422, 423, 424, 425, 426, 149, 411, 412, 382, 383, 384, 385, 386, 387, 388, 389, 390, 19, 391, 392, 393, 427, 20, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 150, 151, 152, 442, 443, 446, 449, 444, 445, 95, 153, 447, 50, 448, 450, 451, 452, 454, 154, 22, 21, 453, 155, 156, 157, 256, 158, 51, 23, 24, 312, 313, 314, 315, 316, 25, 317, 455, 456, 200, 26, 27, 96, 257, 60, 249, 97, 250, 28, 258, 159, 251, 259, 260, 29, 261, 81, 98, 99, 230, 231, 252, 253, 100, 236, 237, 238, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 255, 54, 53, 262, 69, 263, 30, 264, 56, 55, 265, 31, 266, 267, 268, 273, 101, 274, 102, 275, 103, 276, 104, 277, 105, 278, 106, 279, 107, 280, 108, 281, 109, 282, 110, 283, 111, 284, 112, 285, 113, 286, 114, 287, 115, 288, 116, 289, 117, 291, 118, 119, 292, 293, 290, 269, 120, 270, 271, 272, 301, 160, 302, 52, 32, 303, 304, 33, 305, 61, 70, 121, 306, 307, 294, 67, 66, 65, 295, 122, 34, 35, 36, 37, 38, 39, 296, 63, 62, 297, 64, 123, 298, 299, 300, 124, 125, 126, 161, 308, 127, 309, 318, 162, 319, 320, 321, 322, 323, 163, 164, 128, 324, 40, 129, 326, 82, 327, 328, 165, 329, 330, 166, 167, 331, 130, 332, 83, 333, 334, 168, 169, 335, 170, 336, 337, 338, 171, 172, 339, 131, 340, 84, 341, 173, 174, 342, 343, 344, 132, 85, 345, 346, 175, 347, 348, 349, 176, 177, 1, 133, 350, 86, 351, 353, 354, 178, 355, 356, 179, 180, 2, 71, 357, 134, 359, 87, 360, 361, 362, 363, 181, 182, 364, 365, 183, 366, 367, 135, 368, 3, 369, 88, 370, 136, 371, 372, 373, 184, 374, 375, 376, 377, 185, 186, 138, 378, 72, 379, 137, 380, 89, 381, 457, 458, 187, 459, 460, 461, 139, 462, 140, 463, 464, 465, 188, 189, 141, 466, 73, 467, 90, 468, 91, 470, 190, 41, 394, 191, 42, 395, 192, 43, 396, 193, 74, 44, 397, 398, 194, 45, 399, 195, 46, 400, 196, 47, 401, 197, 48, 402, 198, 49, 403, 404, 199, 405, 406, 407, 408, 409, 410, 469, 358, 325 }
  uselistorder i32 2147483647, { 1, 6, 0, 2, 3, 4, 5 }
  uselistorder i32* @r7, { 2, 28, 29, 17, 18, 19, 20, 21, 22, 23, 24, 27, 3, 30, 31, 32, 4, 33, 34, 35, 13, 36, 37, 5, 38, 39, 40, 41, 42, 43, 6, 44, 45, 46, 47, 48, 49, 25, 26, 327, 328, 128, 129, 282, 283, 16, 329, 330, 331, 336, 337, 7, 50, 51, 8, 109, 110, 111, 0, 112, 284, 285, 286, 287, 288, 289, 290, 291, 292, 243, 244, 245, 246, 247, 248, 293, 294, 295, 296, 297, 298, 299, 300, 9, 301, 302, 303, 304, 305, 196, 197, 64, 65, 113, 114, 66, 67, 217, 218, 198, 199, 68, 69, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 306, 307, 334, 335, 70, 71, 72, 73, 308, 309, 332, 333, 171, 172, 150, 151, 249, 250, 115, 116, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 310, 311, 15, 312, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 52, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 313, 314, 315, 316, 95, 96, 97, 98, 105, 106, 107, 108, 117, 118, 10, 119, 120, 121, 122, 123, 124, 125, 126, 127, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 173, 174, 176, 177, 178, 179, 180, 11, 181, 12, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 192, 194, 195, 14, 200, 203, 201, 202, 204, 205, 206, 207, 209, 208, 210, 211, 212, 214, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 1, 237, 234, 235, 236, 238, 239, 240, 241, 242, 321, 317, 318, 319, 320, 322, 323, 324, 325, 326, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_16e80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16e7c, { 1, 0 }
  uselistorder label %dec_label_pc_16e6c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16df8, { 1, 0 }
}

define i32 @function_16e8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e8c:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16e8c = load i32, i32* @r4, align 4
  store i32 %v3_16e8c, i32* %stack_var_-8, align 4
  %v1_16e90 = add i32 %arg1, 8
  %v1_16e94 = inttoptr i32 %v1_16e90 to i32*
  %v2_16e94 = load i32, i32* %v1_16e94, align 4
  %v3_16e94 = add i32 %arg1, 12
  %v4_16e94 = inttoptr i32 %v3_16e94 to i32*
  %v5_16e94 = load i32, i32* %v4_16e94, align 4
  %v2_16e98 = sub i32 %v5_16e94, %v2_16e94
  store i32 %v2_16e98, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16ea0 = inttoptr i32 %arg1 to i16*
  %v4_16ea0 = call i32 @function_16d80(i16* %v3_16ea0, i32 %v2_16e94, i32 %v2_16e98)
  %v0_16ea4 = load i32, i32* @r4, align 4
  %v1_16ea4 = add i32 %v0_16ea4, 8
  %v2_16ea4 = inttoptr i32 %v1_16ea4 to i32*
  %v3_16ea4 = load i32, i32* %v2_16ea4, align 4
  store i32 %v3_16ea4, i32* %r2.global-to-local, align 4
  %v2_16ea8 = add i32 %v3_16ea4, %v4_16ea0
  %v2_16eac = add i32 %v0_16ea4, 20
  %v3_16eac = inttoptr i32 %v2_16eac to i32*
  store i32 %v2_16ea8, i32* %v3_16eac, align 4
  %v0_16eb0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16eb0 = load i32, i32* @r4, align 4
  %v2_16eb0 = add i32 %v1_16eb0, 16
  %v3_16eb0 = inttoptr i32 %v2_16eb0 to i32*
  store i32 %v0_16eb0, i32* %v3_16eb0, align 4
  %v2_16eb4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16eb4, i32* @r4, align 4
  ret i32 %v4_16ea0

; uselistorder directives
  uselistorder i32 %v4_16ea0, { 1, 0 }
  uselistorder i32 20, { 32, 113, 3, 114, 115, 1, 116, 33, 9, 34, 35, 36, 37, 31, 50, 51, 27, 28, 29, 30, 117, 10, 118, 104, 105, 107, 2, 52, 11, 53, 54, 0, 41, 12, 38, 13, 39, 14, 40, 43, 44, 4, 45, 15, 46, 26, 16, 47, 42, 48, 49, 17, 18, 19, 55, 57, 5, 56, 58, 59, 60, 61, 62, 63, 6, 64, 65, 66, 67, 68, 69, 71, 72, 20, 70, 73, 74, 75, 76, 77, 78, 80, 81, 21, 79, 82, 83, 84, 85, 87, 88, 22, 86, 89, 90, 91, 92, 93, 94, 96, 23, 95, 97, 98, 99, 102, 7, 100, 24, 101, 103, 108, 111, 8, 109, 25, 110, 112, 106 }
  uselistorder i32 12, { 11, 12, 38, 13, 14, 41, 7, 161, 162, 163, 164, 165, 167, 168, 166, 169, 170, 171, 172, 173, 174, 175, 15, 16, 17, 18, 20, 19, 21, 42, 43, 22, 44, 45, 46, 47, 48, 39, 40, 82, 83, 35, 36, 37, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 3, 110, 111, 112, 113, 114, 23, 115, 133, 24, 25, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 152, 145, 146, 147, 148, 149, 150, 151, 153, 154, 26, 155, 4, 84, 85, 27, 86, 87, 28, 64, 60, 61, 50, 52, 65, 66, 62, 53, 54, 49, 51, 55, 56, 57, 58, 59, 63, 67, 68, 69, 6, 70, 71, 72, 73, 75, 76, 77, 29, 78, 30, 79, 81, 80, 74, 5, 31, 32, 8, 156, 88, 33, 89, 90, 91, 92, 93, 94, 95, 96, 34, 97, 98, 99, 9, 100, 101, 102, 103, 104, 105, 10, 106, 107, 108, 109, 157, 158, 159, 160, 0, 1, 2 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_16ebc() local_unnamed_addr {
dec_label_pc_16ebc:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16ebc = load i32, i32* @r4, align 4
  store i32 %v3_16ebc, i32* %stack_var_-12, align 4
  %v0_16ec0 = load i32, i32* @r0, align 4
  %v1_16ec0 = inttoptr i32 %v0_16ec0 to i16*
  %v2_16ec0 = load i16, i16* %v1_16ec0, align 2
  %v3_16ec0 = zext i16 %v2_16ec0 to i32
  store i32 %v3_16ec0, i32* %r3.global-to-local, align 4
  %v0_16ec4 = load i32, i32* @r1, align 4
  %v2_16ec4 = and i32 %v0_16ec4, %v3_16ec0
  %v4_16ec4 = icmp eq i32 %v2_16ec4, 0
  store i32 %v0_16ec0, i32* @r4, align 4
  br i1 %v4_16ec4, label %dec_label_pc_16ed4, label %dec_label_pc_16ee4

dec_label_pc_16ed4:                               ; preds = %dec_label_pc_16ebc
  %v1_16ed4 = and i32 %v3_16ec0, 2176
  %v2_16ed4 = icmp eq i32 %v1_16ed4, 0
  br i1 %v2_16ed4, label %dec_label_pc_16edc, label %dec_label_pc_16ef0

dec_label_pc_16edc:                               ; preds = %dec_label_pc_16ed4
  %v2_16edc = or i32 %v0_16ec4, %v3_16ec0
  store i32 %v2_16edc, i32* %r3.global-to-local, align 4
  %v1_16ee0 = trunc i32 %v2_16edc to i16
  store i16 %v1_16ee0, i16* %v1_16ec0, align 2
  %v0_16ee4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16ee4

dec_label_pc_16ee4:                               ; preds = %dec_label_pc_16ebc, %dec_label_pc_16edc
  %v0_16ee4 = phi i32 [ %v0_16ec0, %dec_label_pc_16ebc ], [ %v0_16ee4.pre, %dec_label_pc_16edc ]
  %v1_16ee4 = inttoptr i32 %v0_16ee4 to i16*
  %v2_16ee4 = load i16, i16* %v1_16ee4, align 2
  %v3_16ee4 = zext i16 %v2_16ee4 to i32
  store i32 %v3_16ee4, i32* %r3.global-to-local, align 4
  %v1_16ee8 = and i32 %v3_16ee4, 16
  store i32 %v1_16ee8, i32* %r5.global-to-local, align 4
  %v2_16ee8 = icmp eq i32 %v1_16ee8, 0
  br i1 %v2_16ee8, label %dec_label_pc_16f10, label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16ed4, %dec_label_pc_16ee4
  %v0_16ef0 = call i32 @function_1207c()
  store i32 %v0_16ef0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_16ef8 = inttoptr i32 %v0_16ef0 to i32*
  store i32 9, i32* %v2_16ef8, align 4
  br label %dec_label_pc_16efc

dec_label_pc_16efc:                               ; preds = %dec_label_pc_16f18, %dec_label_pc_16ef0
  %v0_16efc = load i32, i32* @r4, align 4
  %v1_16efc = inttoptr i32 %v0_16efc to i16*
  %v2_16efc = load i16, i16* %v1_16efc, align 2
  %v3_16efc = zext i16 %v2_16efc to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16f04 = or i32 %v3_16efc, 8
  store i32 %v1_16f04, i32* %r3.global-to-local, align 4
  %v1_16f08 = trunc i32 %v1_16f04 to i16
  store i16 %v1_16f08, i16* %v1_16efc, align 2
  %v1_16f50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f10:                               ; preds = %dec_label_pc_16ee4
  %v1_16f10 = and i32 %v3_16ee4, 64
  %v2_16f10 = icmp eq i32 %v1_16f10, 0
  br i1 %v2_16f10, label %dec_label_pc_16f38, label %dec_label_pc_16f18

dec_label_pc_16f18:                               ; preds = %dec_label_pc_16f10
  %v0_16f18 = load i32, i32* @r0, align 4
  %v1_16f18 = call i32 @function_15af4(i32 %v0_16f18)
  store i32 %v1_16f18, i32* %r0.global-to-local, align 4
  %v2_16f1c = icmp eq i32 %v1_16f18, 0
  br i1 %v2_16f1c, label %dec_label_pc_16f24, label %dec_label_pc_16efc

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16f18
  %v0_16f24 = load i32, i32* @r4, align 4
  %v1_16f24 = inttoptr i32 %v0_16f24 to i16*
  %v2_16f24 = load i16, i16* %v1_16f24, align 2
  %v3_16f24 = zext i16 %v2_16f24 to i32
  store i32 %v3_16f24, i32* %r3.global-to-local, align 4
  %v1_16f28 = add i32 %v0_16f24, 8
  %v2_16f28 = inttoptr i32 %v1_16f28 to i32*
  %v3_16f28 = load i32, i32* %v2_16f28, align 4
  %v1_16f2c = and i32 %v3_16f24, 65471
  store i32 %v1_16f2c, i32* %r3.global-to-local, align 4
  %v2_16f30 = add i32 %v0_16f24, 28
  %v3_16f30 = inttoptr i32 %v2_16f30 to i32*
  store i32 %v3_16f28, i32* %v3_16f30, align 4
  %v0_16f34 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f34 = trunc i32 %v0_16f34 to i16
  %v2_16f34 = load i32, i32* @r4, align 4
  %v3_16f34 = inttoptr i32 %v2_16f34 to i16*
  store i16 %v1_16f34, i16* %v3_16f34, align 2
  %v0_16f38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16f10, %dec_label_pc_16f24
  %v2_16f40 = phi i32 [ %v0_16ee4, %dec_label_pc_16f10 ], [ %v0_16f38.pre, %dec_label_pc_16f24 ]
  %v1_16f38 = inttoptr i32 %v2_16f40 to i16*
  %v2_16f38 = load i16, i16* %v1_16f38, align 2
  %v3_16f38 = zext i16 %v2_16f38 to i32
  %v1_16f3c = or i32 %v3_16f38, 1
  store i32 %v1_16f3c, i32* %r3.global-to-local, align 4
  %v1_16f40 = trunc i32 %v1_16f3c to i16
  store i16 %v1_16f40, i16* %v1_16f38, align 2
  %v0_16f44 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16f44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16efc, %dec_label_pc_16f38
  %v1_16f50 = phi i32 [ %v1_16f50.pre, %dec_label_pc_16efc ], [ %v0_16f44, %dec_label_pc_16f38 ]
  %v2_16f4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16f4c, i32* @r4, align 4
  ret i32 %v1_16f50

; uselistorder directives
  uselistorder i32 %v3_16ec0, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 28, { 20, 44, 7, 21, 22, 23, 33, 34, 18, 11, 19, 12, 13, 14, 15, 41, 42, 43, 8, 16, 0, 24, 1, 25, 2, 26, 3, 27, 4, 28, 5, 29, 6, 30, 9, 17, 32, 31, 35, 36, 37, 38, 39, 40, 10 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_15af4, { 2, 1, 0 }
  uselistorder i32 64, { 14, 15, 16, 0, 17, 21, 10, 11, 12, 13, 1, 51, 18, 19, 20, 22, 23, 4, 24, 25, 26, 5, 27, 28, 29, 30, 6, 31, 32, 33, 7, 34, 35, 36, 8, 37, 38, 39, 2, 40, 41, 42, 43, 44, 9, 45, 46, 47, 48, 49, 3, 50 }
  uselistorder i32 8, { 97, 98, 99, 100, 101, 102, 103, 90, 91, 92, 93, 177, 104, 261, 34, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 105, 106, 107, 108, 109, 110, 111, 27, 112, 113, 114, 115, 116, 117, 118, 119, 120, 94, 95, 96, 160, 161, 162, 45, 279, 280, 28, 207, 208, 209, 210, 211, 212, 213, 214, 6, 81, 215, 216, 217, 218, 219, 220, 221, 222, 7, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 225, 226, 227, 8, 228, 229, 9, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 240, 241, 242, 243, 82, 22, 244, 245, 246, 83, 84, 10, 248, 249, 250, 251, 253, 254, 85, 11, 255, 12, 252, 37, 38, 35, 36, 24, 25, 31, 32, 39, 281, 163, 164, 165, 166, 46, 88, 29, 13, 14, 21, 15, 40, 122, 123, 16, 17, 18, 124, 47, 121, 89, 33, 125, 126, 127, 23, 26, 129, 19, 48, 130, 49, 131, 50, 132, 51, 133, 52, 134, 53, 135, 54, 136, 55, 137, 56, 138, 57, 139, 58, 140, 59, 141, 60, 142, 61, 143, 62, 144, 63, 145, 64, 146, 65, 147, 66, 148, 67, 149, 68, 150, 69, 151, 70, 152, 71, 153, 72, 154, 73, 155, 156, 128, 157, 158, 74, 159, 75, 76, 77, 78, 167, 87, 41, 168, 169, 170, 171, 172, 30, 173, 174, 175, 176, 3, 178, 179, 180, 4, 181, 182, 183, 184, 185, 186, 187, 5, 188, 189, 190, 191, 192, 256, 257, 258, 259, 260, 201, 42, 202, 43, 203, 44, 204, 79, 205, 86, 20, 206, 80, 0, 1, 2 }
  uselistorder i32 9, { 5, 25, 20, 21, 54, 55, 6, 41, 3, 42, 4, 28, 29, 26, 7, 8, 27, 22, 30, 2, 23, 31, 24, 9, 32, 10, 33, 11, 34, 12, 35, 13, 36, 37, 14, 15, 38, 39, 16, 40, 0, 17, 1, 18, 56, 43, 44, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58 }
  uselistorder i32 16, { 98, 99, 100, 92, 93, 94, 95, 101, 30, 31, 32, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 102, 103, 104, 105, 106, 2, 1, 22, 45, 46, 47, 48, 109, 49, 110, 107, 108, 50, 51, 111, 8, 52, 53, 112, 113, 54, 55, 114, 115, 96, 97, 56, 133, 134, 88, 89, 90, 91, 57, 23, 131, 33, 58, 59, 60, 191, 192, 193, 194, 61, 196, 3, 62, 197, 198, 0, 199, 200, 63, 21, 135, 64, 136, 65, 66, 9, 20, 10, 11, 4, 12, 13, 67, 118, 68, 119, 69, 120, 70, 116, 121, 117, 124, 125, 126, 34, 87, 71, 72, 14, 84, 15, 16, 73, 122, 123, 74, 129, 130, 37, 36, 35, 127, 38, 128, 39, 75, 76, 77, 78, 79, 132, 40, 201, 80, 137, 138, 139, 140, 24, 141, 142, 143, 144, 145, 146, 147, 25, 148, 149, 150, 81, 151, 82, 41, 152, 153, 26, 154, 155, 17, 156, 157, 5, 42, 158, 159, 160, 27, 161, 162, 163, 164, 165, 6, 43, 166, 167, 168, 85, 18, 86, 169, 28, 170, 171, 172, 19, 29, 173, 83, 174, 175, 7, 44, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 187, 189, 190, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 212, 214, 215, 195 }
  uselistorder i32* @r1, { 16, 15, 61, 17, 18, 19, 20, 1, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 2, 100, 101, 21, 22, 23, 24, 0, 46, 47, 10, 25, 39, 40, 41, 3, 72, 66, 67, 4, 73, 5, 30, 31, 13, 62, 74, 75, 7, 26, 48, 12, 76, 77, 49, 8, 78, 50, 51, 11, 32, 27, 28, 29, 34, 33, 38, 79, 35, 36, 37, 42, 43, 44, 45, 52, 53, 54, 9, 55, 80, 81, 6, 56, 57, 58, 59, 60, 63, 64, 65, 82, 68, 69, 70, 71, 14 }
  uselistorder label %dec_label_pc_16f48, { 1, 0 }
  uselistorder label %dec_label_pc_16f38, { 1, 0 }
  uselistorder label %dec_label_pc_16ef0, { 1, 0 }
  uselistorder label %dec_label_pc_16ee4, { 1, 0 }
}

define i32 @function_16f54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f54:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_16f54 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_16f64 = call i32 @function_12180()
  %v0_16f68 = load i32, i32* @r5, align 4
  %v1_16f68 = load i32, i32* @r4, align 4
  %v2_16f68 = add i32 %v1_16f68, %v0_16f68
  store i32 %v6_16f54, i32* @r5, align 4
  ret i32 %v2_16f68

; uselistorder directives
  uselistorder i32 ()* @function_12180, { 6, 7, 5, 0, 2, 1, 4, 3 }
  uselistorder i32* @r5, { 46, 47, 48, 49, 32, 33, 34, 35, 36, 37, 38, 39, 40, 50, 5, 51, 52, 53, 656, 657, 658, 54, 28, 55, 0, 56, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 24, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 31, 79, 80, 81, 82, 83, 84, 6, 85, 86, 87, 88, 89, 90, 91, 7, 92, 93, 94, 10, 95, 96, 8, 97, 98, 99, 100, 101, 102, 9, 103, 104, 105, 106, 107, 108, 41, 11, 42, 43, 44, 45, 311, 312, 313, 314, 315, 316, 671, 12, 672, 673, 683, 109, 110, 111, 112, 113, 114, 115, 674, 675, 676, 677, 678, 13, 14, 679, 680, 681, 682, 116, 117, 118, 119, 580, 581, 585, 586, 587, 588, 589, 582, 583, 584, 543, 544, 545, 15, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 590, 591, 614, 16, 615, 616, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 3, 605, 606, 607, 608, 609, 17, 610, 611, 612, 613, 129, 130, 131, 132, 133, 317, 318, 18, 319, 320, 321, 322, 323, 29, 120, 324, 19, 325, 326, 327, 328, 329, 330, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 126, 127, 128, 121, 122, 123, 124, 125, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239, 240, 241, 242, 243, 233, 234, 235, 236, 237, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 617, 618, 619, 620, 621, 622, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 1, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 2, 310, 331, 332, 333, 334, 335, 25, 336, 337, 338, 339, 340, 341, 342, 26, 343, 27, 344, 345, 346, 347, 348, 349, 350, 351, 20, 352, 21, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 377, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 22, 411, 412, 413, 414, 415, 416, 417, 4, 419, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 434, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 23, 495, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 521, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 623, 624, 625, 626, 627, 634, 628, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579 }
  uselistorder i32* @r2, { 8, 11, 12, 40, 41, 13, 14, 15, 16, 17, 18, 29, 9, 10, 30, 42, 47, 48, 49, 50, 1, 53, 43, 23, 24, 2, 44, 3, 4, 36, 37, 5, 38, 6, 0, 51, 7, 52, 45, 46, 25, 26, 27, 31, 32, 39, 22, 19, 20, 21, 28, 33, 34, 35 }
}

define i32 @function_16f78(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16f78:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16fb8, label %dec_label_pc_16fa4

dec_label_pc_16fa4:                               ; preds = %dec_label_pc_16f78
  %v0_16fa4 = call i32 @function_1207c()
  %v0_16fa8 = load i32, i32* %r4.global-to-local, align 4
  %v1_16fa8 = sub i32 0, %v0_16fa8
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16fb0 = inttoptr i32 %v0_16fa4 to i32*
  store i32 %v1_16fa8, i32* %v2_16fb0, align 4
  %v0_16fc0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16fc0

dec_label_pc_16fb8:                               ; preds = %dec_label_pc_16f78
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_16fb8 = icmp eq i32 %arg1, 0
  br i1 %v2_16fb8, label %dec_label_pc_16fcc, label %dec_label_pc_16fc0

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fb8, %dec_label_pc_16fa4
  %v0_16fc0 = phi i32 [ %arg1, %dec_label_pc_16fb8 ], [ %v0_16fc0.pre, %dec_label_pc_16fa4 ]
  br label %dec_label_pc_16fd0

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fb8
  br label %dec_label_pc_16fd0

dec_label_pc_16fd0:                               ; preds = %dec_label_pc_16fc0, %dec_label_pc_16fcc
  %v1_16fd8 = phi i32 [ %v0_16fc0, %dec_label_pc_16fc0 ], [ %tmp8, %dec_label_pc_16fcc ]
  ret i32 %v1_16fd8

; uselistorder directives
  uselistorder i32 -1, { 272, 278, 177, 273, 274, 275, 115, 276, 116, 277, 85, 86, 87, 88, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 178, 179, 0, 180, 155, 279, 280, 181, 117, 281, 182, 1, 89, 282, 283, 166, 284, 183, 3, 2, 184, 185, 118, 351, 119, 120, 311, 121, 325, 108, 326, 312, 313, 314, 122, 271, 123, 327, 328, 4, 186, 187, 188, 329, 307, 308, 167, 189, 5, 190, 6, 191, 168, 330, 10, 192, 193, 9, 11, 331, 8, 194, 195, 90, 7, 196, 91, 92, 93, 94, 197, 198, 199, 102, 288, 289, 12, 290, 124, 332, 125, 126, 333, 127, 320, 128, 322, 129, 291, 130, 309, 131, 132, 292, 133, 323, 134, 321, 135, 293, 107, 176, 13, 316, 200, 136, 334, 137, 353, 138, 294, 139, 295, 140, 296, 141, 315, 142, 355, 143, 335, 144, 352, 145, 318, 146, 317, 147, 304, 148, 149, 150, 354, 151, 310, 201, 202, 203, 14, 100, 105, 15, 16, 106, 101, 164, 165, 204, 21, 205, 297, 169, 285, 22, 206, 95, 23, 207, 208, 20, 209, 210, 211, 212, 213, 18, 214, 215, 19, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 286, 152, 287, 24, 236, 237, 110, 109, 298, 17, 238, 239, 240, 25, 241, 113, 114, 111, 112, 242, 26, 243, 154, 299, 96, 27, 28, 244, 104, 29, 30, 31, 32, 33, 153, 305, 306, 103, 175, 170, 300, 36, 171, 301, 35, 172, 302, 34, 37, 38, 173, 303, 39, 40, 41, 42, 43, 245, 44, 97, 45, 46, 246, 247, 248, 249, 250, 251, 252, 253, 47, 254, 255, 256, 257, 258, 259, 156, 157, 158, 159, 160, 161, 162, 163, 48, 49, 50, 260, 51, 52, 53, 54, 98, 55, 56, 57, 58, 59, 60, 61, 261, 62, 174, 319, 63, 64, 262, 65, 66, 67, 68, 263, 69, 264, 70, 71, 72, 265, 73, 74, 266, 75, 76, 77, 78, 79, 267, 80, 81, 82, 268, 83, 84, 99, 269, 270, 324 }
  uselistorder i32 ()* @function_1207c, { 63, 59, 62, 61, 60, 65, 58, 57, 5, 4, 24, 15, 20, 14, 13, 64, 19, 18, 17, 41, 40, 23, 11, 16, 12, 56, 55, 10, 9, 8, 28, 26, 54, 39, 53, 52, 25, 27, 51, 30, 29, 37, 35, 34, 33, 7, 2, 50, 49, 48, 36, 0, 6, 3, 31, 32, 43, 22, 47, 1, 38, 46, 45, 44, 42, 21 }
  uselistorder i32 1, { 261, 260, 837, 648, 363, 364, 365, 649, 99, 838, 839, 840, 650, 31, 33, 32, 34, 29, 36, 30, 35, 651, 307, 306, 308, 652, 255, 256, 253, 259, 257, 254, 258, 653, 181, 193, 192, 454, 489, 455, 1081, 1082, 1083, 1084, 468, 342, 655, 654, 410, 411, 841, 656, 459, 1176, 460, 842, 1177, 843, 844, 845, 847, 846, 440, 657, 849, 848, 1018, 1019, 1178, 461, 1179, 1180, 1181, 1182, 1183, 1184, 833, 1185, 1186, 1187, 1188, 1189, 1190, 834, 641, 659, 658, 367, 368, 373, 375, 374, 369, 366, 370, 372, 371, 853, 850, 851, 852, 487, 462, 172, 170, 171, 174, 173, 521, 854, 855, 856, 857, 660, 642, 113, 114, 858, 663, 662, 661, 126, 129, 127, 130, 131, 132, 128, 522, 859, 665, 664, 414, 417, 415, 412, 413, 416, 860, 666, 184, 183, 182, 861, 862, 667, 97, 96, 668, 272, 523, 836, 52, 53, 863, 864, 865, 866, 867, 868, 869, 870, 463, 671, 670, 669, 357, 356, 361, 359, 358, 360, 871, 872, 873, 673, 672, 50, 51, 524, 874, 674, 252, 875, 876, 877, 878, 879, 525, 675, 24, 25, 26, 28, 27, 526, 37, 283, 676, 195, 194, 84, 677, 248, 678, 92, 91, 679, 39, 44, 38, 43, 47, 46, 42, 45, 40, 41, 680, 13, 12, 10, 9, 11, 7, 8, 681, 14, 15, 22, 23, 19, 20, 18, 21, 16, 17, 682, 141, 142, 422, 1020, 327, 330, 328, 329, 683, 61, 60, 684, 216, 685, 116, 117, 1191, 527, 1192, 1193, 528, 686, 225, 221, 226, 224, 222, 227, 228, 223, 220, 529, 247, 246, 687, 419, 420, 421, 139, 447, 880, 881, 882, 688, 1021, 691, 690, 689, 191, 692, 456, 993, 457, 994, 995, 448, 996, 385, 386, 384, 387, 388, 391, 390, 389, 997, 1194, 469, 530, 694, 693, 695, 98, 1123, 1126, 1127, 1128, 696, 376, 381, 382, 380, 379, 383, 377, 378, 1129, 1130, 1131, 1132, 697, 347, 353, 346, 352, 351, 345, 355, 354, 349, 343, 348, 344, 350, 1124, 1125, 531, 81, 80, 79, 82, 1109, 532, 1110, 1111, 1112, 1113, 1114, 698, 230, 231, 229, 232, 59, 58, 1133, 1134, 1135, 1136, 1137, 1138, 494, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 534, 1147, 1148, 1149, 1150, 1151, 533, 1152, 1153, 1154, 1155, 1156, 699, 400, 403, 398, 402, 405, 409, 408, 407, 406, 401, 404, 399, 219, 218, 535, 536, 916, 452, 703, 702, 701, 700, 140, 233, 464, 115, 704, 235, 234, 217, 705, 301, 706, 177, 707, 324, 708, 190, 709, 274, 273, 95, 710, 294, 293, 711, 236, 712, 326, 325, 713, 112, 714, 1157, 1158, 302, 303, 883, 884, 885, 886, 887, 888, 889, 1195, 210, 211, 212, 213, 715, 179, 1022, 537, 214, 215, 890, 716, 309, 538, 717, 180, 539, 718, 87, 85, 86, 719, 169, 168, 167, 720, 138, 137, 721, 68, 722, 251, 723, 263, 262, 724, 94, 93, 134, 133, 725, 176, 175, 726, 186, 185, 727, 78, 728, 280, 279, 729, 189, 188, 187, 730, 418, 295, 731, 732, 300, 733, 136, 135, 423, 1159, 392, 1023, 1024, 1025, 1026, 446, 1027, 735, 734, 125, 123, 122, 120, 121, 118, 119, 124, 0, 998, 999, 1000, 1001, 1045, 465, 1046, 466, 1047, 737, 736, 340, 339, 341, 1028, 1029, 1030, 738, 111, 110, 108, 109, 1160, 1161, 470, 1, 443, 520, 1162, 55, 54, 56, 57, 907, 908, 909, 540, 1031, 362, 1163, 62, 1033, 1032, 1034, 48, 49, 1164, 1165, 739, 292, 291, 290, 289, 1166, 740, 278, 277, 276, 275, 541, 910, 542, 911, 495, 912, 471, 917, 544, 918, 553, 913, 554, 555, 892, 895, 545, 891, 893, 894, 547, 453, 896, 546, 897, 898, 548, 899, 900, 551, 901, 902, 549, 903, 904, 550, 905, 906, 552, 914, 919, 920, 921, 556, 922, 923, 924, 557, 925, 835, 928, 927, 543, 926, 929, 930, 558, 931, 932, 933, 559, 934, 560, 935, 561, 936, 562, 937, 563, 938, 564, 939, 565, 940, 566, 941, 567, 942, 568, 943, 569, 944, 570, 945, 571, 946, 572, 947, 573, 948, 574, 949, 575, 950, 576, 951, 577, 952, 472, 959, 960, 449, 578, 753, 752, 751, 750, 749, 748, 747, 746, 745, 744, 743, 742, 741, 101, 104, 105, 107, 106, 100, 102, 103, 953, 954, 579, 955, 956, 580, 957, 958, 153, 152, 151, 157, 154, 155, 156, 150, 149, 581, 582, 755, 754, 395, 396, 393, 394, 397, 966, 967, 968, 969, 970, 971, 972, 424, 445, 973, 974, 473, 425, 975, 976, 977, 978, 426, 444, 979, 980, 474, 427, 981, 583, 982, 983, 584, 984, 585, 985, 986, 467, 989, 987, 988, 441, 442, 990, 586, 991, 763, 644, 762, 761, 760, 759, 758, 757, 643, 756, 334, 333, 332, 335, 338, 337, 336, 331, 764, 249, 1167, 766, 765, 207, 208, 206, 205, 204, 209, 915, 67, 589, 496, 961, 962, 497, 963, 587, 588, 590, 964, 965, 591, 592, 593, 594, 595, 596, 597, 779, 778, 777, 776, 775, 774, 773, 772, 771, 770, 645, 769, 768, 767, 63, 64, 66, 65, 598, 450, 599, 780, 602, 601, 600, 992, 782, 781, 304, 305, 1002, 1003, 1004, 603, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 1005, 485, 1006, 484, 1007, 483, 1008, 482, 1009, 481, 1010, 480, 1011, 479, 1012, 478, 1013, 486, 606, 604, 605, 1014, 488, 607, 1015, 608, 1016, 609, 1017, 451, 610, 801, 800, 799, 798, 797, 796, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 783, 285, 284, 288, 286, 287, 1035, 1041, 3, 475, 1036, 611, 1037, 2, 1038, 490, 1039, 476, 477, 1040, 1042, 1043, 491, 1044, 646, 805, 804, 647, 803, 802, 250, 1168, 498, 499, 1169, 4, 5, 6, 1048, 1049, 1050, 458, 492, 493, 1051, 1052, 1053, 1054, 1055, 613, 1056, 612, 1057, 614, 1058, 1059, 1060, 809, 808, 807, 806, 239, 238, 241, 244, 245, 242, 237, 243, 240, 1062, 1063, 1064, 615, 616, 811, 810, 320, 322, 323, 319, 321, 1065, 1066, 617, 1067, 1068, 1069, 1070, 618, 1071, 619, 501, 500, 620, 1072, 812, 145, 146, 148, 147, 143, 144, 1073, 621, 1074, 504, 502, 503, 814, 813, 281, 282, 1075, 1076, 1077, 622, 1078, 623, 624, 1079, 505, 1080, 815, 70, 73, 74, 76, 75, 69, 72, 71, 1085, 1086, 1087, 625, 1088, 626, 507, 506, 627, 1090, 628, 1091, 816, 312, 315, 316, 318, 317, 310, 314, 313, 311, 1092, 1093, 1094, 1095, 1096, 1097, 629, 1098, 630, 1099, 631, 512, 511, 632, 1100, 508, 1101, 509, 1102, 510, 1103, 822, 821, 820, 819, 818, 817, 197, 200, 201, 203, 202, 198, 199, 1104, 1105, 1106, 633, 515, 514, 634, 1107, 513, 1108, 823, 265, 269, 270, 271, 264, 268, 267, 266, 1170, 1171, 1172, 635, 518, 517, 636, 1173, 516, 1174, 828, 827, 826, 825, 824, 159, 163, 164, 165, 166, 158, 162, 161, 160, 1115, 519, 637, 829, 88, 89, 90, 1116, 1117, 638, 1120, 639, 640, 1118, 1119, 1121, 1122, 299, 297, 296, 298, 1175, 830, 77, 1089, 83, 1061, 178, 831, 832, 196 }
  uselistorder i32 %arg1, { 1, 3, 4, 0, 2 }
  uselistorder label %dec_label_pc_16fd0, { 1, 0 }
}

define i32 @function_16fdc() local_unnamed_addr {
entry:
  %v3_16fe0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_16fe0)
  %v31_16fe8 = load i32, i32* @r0, align 4
  ret i32 %v31_16fe8

; uselistorder directives
  uselistorder i32* @r0, { 32, 13, 26, 64, 63, 206, 18, 5, 6, 242, 7, 31, 8, 65, 0, 66, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 1, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 2, 67, 23, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 29, 24, 176, 177, 15, 28, 12, 269, 271, 272, 53, 54, 55, 56, 57, 58, 59, 60, 14, 30, 82, 83, 270, 160, 161, 84, 222, 19, 50, 51, 223, 3, 224, 225, 226, 221, 213, 47, 214, 215, 216, 48, 217, 218, 25, 234, 235, 227, 228, 229, 230, 231, 232, 233, 89, 90, 16, 91, 10, 27, 178, 179, 180, 181, 219, 17, 20, 22, 236, 182, 237, 21, 183, 184, 185, 186, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 87, 141, 37, 85, 86, 88, 142, 145, 146, 147, 148, 149, 150, 143, 144, 157, 158, 159, 38, 39, 11, 40, 41, 151, 152, 42, 43, 153, 154, 155, 156, 162, 163, 44, 45, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 46, 174, 175, 52, 187, 188, 189, 190, 191, 192, 193, 9, 194, 195, 196, 197, 198, 199, 200, 238, 239, 4, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 240, 241, 220, 49, 208, 34, 36, 33, 35 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 59, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 2, 3, 64, 65, 66, 67, 68, 60, 48, 61, 62, 63, 69, 70, 71, 49, 50, 51, 44, 45, 46, 52, 56, 57, 53, 54, 55, 72, 38, 39, 40, 41, 42, 43, 47, 58 }
  uselistorder i32 0, { 544, 545, 554, 555, 556, 557, 558, 88, 559, 560, 561, 0, 562, 293, 47, 563, 341, 564, 565, 566, 329, 330, 546, 547, 552, 1, 89, 90, 896, 897, 898, 899, 129, 130, 900, 567, 131, 91, 1058, 1059, 1060, 294, 568, 569, 570, 295, 1061, 48, 296, 1062, 1063, 66, 36, 37, 571, 56, 2, 80, 81, 778, 57, 58, 59, 779, 780, 1064, 1065, 1066, 1067, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1069, 1070, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 27, 1089, 1090, 1091, 1092, 1093, 28, 1094, 1095, 1096, 29, 1097, 1098, 1099, 30, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1124, 1125, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 31, 1143, 1144, 1145, 1146, 1147, 32, 1148, 1149, 1150, 1151, 1152, 33, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 132, 572, 509, 573, 574, 92, 575, 576, 577, 342, 343, 578, 579, 93, 94, 95, 580, 581, 585, 582, 583, 584, 297, 317, 586, 587, 82, 133, 590, 588, 589, 298, 591, 96, 592, 593, 3, 4, 97, 594, 538, 539, 344, 540, 134, 595, 596, 597, 49, 50, 598, 599, 600, 135, 601, 602, 603, 604, 605, 345, 606, 607, 608, 609, 610, 611, 98, 612, 613, 614, 615, 5, 6, 136, 138, 616, 137, 617, 139, 618, 99, 619, 624, 625, 620, 621, 622, 627, 628, 629, 140, 630, 631, 632, 633, 634, 623, 626, 635, 100, 548, 549, 550, 1168, 1169, 943, 781, 963, 553, 782, 783, 331, 784, 346, 541, 347, 542, 964, 965, 966, 141, 967, 785, 786, 787, 543, 551, 101, 142, 1170, 1171, 968, 969, 102, 143, 348, 1176, 1177, 349, 1178, 1179, 144, 300, 1180, 1181, 350, 51, 1182, 1183, 351, 1190, 1193, 501, 299, 1194, 352, 1191, 1192, 1172, 1173, 510, 145, 283, 636, 638, 637, 146, 639, 640, 641, 353, 642, 83, 788, 74, 789, 148, 147, 790, 1174, 1175, 753, 754, 755, 756, 757, 758, 150, 103, 759, 760, 761, 75, 149, 762, 104, 355, 356, 1185, 354, 105, 508, 106, 151, 975, 976, 977, 978, 979, 152, 980, 981, 982, 983, 984, 985, 986, 153, 970, 357, 971, 972, 358, 973, 974, 107, 944, 359, 154, 945, 946, 947, 948, 949, 108, 162, 159, 161, 158, 164, 160, 163, 155, 156, 157, 987, 988, 1012, 1013, 109, 989, 990, 168, 166, 167, 991, 992, 174, 173, 126, 165, 993, 994, 995, 996, 997, 998, 324, 323, 332, 360, 999, 1000, 1001, 52, 1002, 170, 169, 171, 172, 125, 1003, 1004, 301, 1005, 1006, 84, 1007, 1008, 1009, 1010, 1011, 7, 8, 665, 666, 53, 110, 9, 333, 361, 1014, 1015, 1016, 866, 915, 667, 763, 668, 669, 916, 867, 670, 901, 1195, 1196, 60, 111, 791, 792, 793, 175, 643, 644, 176, 794, 799, 800, 801, 802, 177, 795, 178, 796, 797, 112, 803, 1017, 1186, 671, 672, 673, 798, 1189, 1018, 1184, 832, 804, 736, 950, 674, 362, 1187, 78, 1188, 764, 10, 1019, 1020, 79, 1021, 1022, 1023, 1024, 1025, 179, 1026, 502, 511, 503, 504, 1027, 512, 127, 180, 805, 806, 807, 76, 318, 808, 809, 513, 11, 302, 181, 182, 183, 38, 184, 363, 675, 810, 811, 812, 1029, 1028, 1030, 1031, 1032, 1033, 34, 185, 1034, 1035, 1036, 186, 67, 68, 339, 340, 655, 188, 187, 189, 813, 190, 814, 815, 191, 1037, 1038, 364, 192, 816, 193, 194, 1039, 195, 1040, 683, 676, 198, 677, 678, 365, 679, 656, 657, 196, 197, 658, 660, 645, 69, 39, 286, 287, 646, 514, 647, 659, 366, 648, 515, 649, 516, 650, 517, 651, 518, 652, 519, 653, 520, 654, 661, 662, 367, 663, 680, 500, 681, 368, 682, 304, 303, 684, 685, 686, 687, 200, 199, 688, 689, 690, 691, 694, 521, 692, 693, 284, 695, 63, 64, 285, 696, 61, 62, 369, 698, 699, 505, 700, 701, 702, 703, 704, 370, 705, 706, 707, 319, 128, 507, 708, 709, 710, 506, 711, 712, 371, 713, 372, 714, 717, 718, 719, 201, 715, 202, 716, 13, 12, 203, 697, 737, 738, 739, 71, 40, 740, 70, 41, 741, 742, 373, 743, 374, 744, 375, 745, 746, 748, 204, 205, 747, 320, 42, 65, 325, 749, 206, 14, 750, 1041, 1042, 664, 720, 376, 722, 207, 723, 724, 725, 726, 727, 728, 729, 209, 208, 730, 377, 731, 378, 732, 379, 721, 733, 326, 734, 380, 735, 751, 403, 404, 381, 752, 382, 765, 43, 72, 223, 222, 522, 113, 225, 224, 523, 114, 227, 226, 524, 115, 229, 228, 525, 116, 231, 230, 526, 117, 233, 232, 527, 118, 235, 234, 528, 119, 237, 236, 529, 120, 530, 212, 211, 210, 306, 321, 531, 215, 214, 213, 532, 533, 218, 217, 216, 534, 535, 221, 220, 219, 536, 307, 308, 309, 310, 311, 312, 313, 383, 766, 238, 239, 774, 767, 768, 769, 770, 771, 772, 773, 305, 775, 776, 44, 777, 240, 384, 77, 817, 818, 819, 820, 316, 821, 822, 823, 315, 824, 825, 826, 827, 241, 828, 830, 829, 121, 122, 242, 314, 244, 243, 831, 245, 246, 54, 247, 833, 834, 85, 86, 55, 835, 248, 249, 288, 836, 251, 837, 252, 250, 385, 838, 839, 841, 840, 842, 253, 843, 844, 334, 845, 846, 847, 254, 255, 848, 256, 850, 257, 851, 258, 852, 853, 73, 854, 855, 259, 856, 857, 858, 260, 860, 261, 289, 861, 859, 862, 863, 864, 262, 865, 868, 264, 870, 871, 263, 869, 872, 123, 387, 388, 873, 874, 389, 390, 875, 386, 876, 877, 265, 878, 879, 266, 267, 880, 881, 124, 882, 883, 15, 16, 17, 18, 884, 885, 268, 336, 886, 887, 391, 888, 392, 889, 393, 890, 394, 891, 395, 892, 396, 893, 335, 894, 397, 895, 902, 903, 269, 905, 906, 270, 290, 907, 904, 908, 909, 910, 19, 20, 21, 911, 271, 914, 917, 918, 45, 919, 272, 920, 921, 273, 291, 923, 922, 398, 924, 926, 927, 928, 399, 929, 22, 23, 24, 925, 25, 26, 930, 274, 931, 932, 275, 935, 936, 937, 292, 938, 933, 934, 940, 939, 941, 276, 942, 1043, 1044, 277, 1046, 1047, 1048, 278, 400, 1050, 1049, 1045, 1052, 1053, 1051, 1054, 279, 1057, 327, 951, 401, 952, 46, 953, 87, 954, 955, 956, 328, 957, 402, 958, 959, 960, 35, 322, 961, 962, 1055, 280, 1056, 912, 281, 913, 282, 849, 337, 537, 338, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211 }
  uselistorder i32* @r4, { 38, 50, 51, 52, 6, 53, 54, 55, 7, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 43, 44, 45, 66, 67, 68, 69, 70, 71, 72, 73, 74, 715, 716, 75, 76, 8, 1, 77, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 9, 78, 79, 80, 81, 82, 83, 84, 85, 86, 10, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 89, 90, 39, 40, 102, 103, 11, 104, 12, 105, 13, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 14, 126, 127, 128, 15, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 46, 47, 48, 49, 41, 42, 622, 623, 318, 319, 733, 734, 735, 624, 625, 736, 740, 745, 746, 747, 748, 749, 750, 751, 737, 141, 142, 143, 320, 321, 322, 738, 739, 290, 16, 291, 292, 293, 294, 295, 296, 741, 744, 144, 145, 146, 17, 626, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 18, 643, 644, 645, 646, 627, 628, 629, 630, 147, 561, 562, 563, 564, 565, 566, 567, 568, 569, 19, 570, 571, 572, 573, 574, 575, 576, 577, 578, 647, 669, 670, 671, 672, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 34, 661, 662, 0, 663, 664, 665, 666, 667, 668, 148, 166, 167, 168, 742, 743, 673, 674, 510, 511, 149, 323, 324, 325, 326, 327, 328, 329, 150, 151, 152, 330, 331, 332, 5, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 2, 343, 344, 345, 675, 676, 20, 677, 678, 679, 169, 170, 171, 172, 173, 174, 680, 681, 682, 683, 21, 164, 165, 175, 176, 177, 178, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 241, 242, 243, 3, 244, 235, 236, 237, 238, 239, 240, 193, 194, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 684, 685, 686, 687, 688, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 284, 285, 286, 287, 288, 289, 297, 298, 36, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 35, 309, 310, 311, 312, 313, 314, 315, 316, 317, 346, 22, 4, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 372, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 23, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 24, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 25, 444, 26, 445, 27, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 28, 472, 29, 473, 30, 474, 31, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 32, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 689, 690, 691, 692, 33, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 614, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 708, 709, 710, 491, 37, 714 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #0

attributes #0 = { nounwind readnone }
